{
    "Shader": {
        "info": {
            "date": "1660541337",
            "description": "9input is 3x3 pixel grid\n18input is 2 layers of 3x3 pixel grid, grids reads from 1st,2nd previous frames\n29input is 5x5 pixel grid plus 4 pixels at north-south-east-west border of grid\n",
            "flags": 32,
            "hasliked": 0,
            "id": "slcyWj",
            "likes": 5,
            "name": "deep 29input",
            "published": 3,
            "tags": [
                "automata"
            ],
            "usePreview": 0,
            "username": "lomateron",
            "viewed": 231
        },
        "renderpass": [
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 a = A(fragCoord).xy;\n    if((iFrame&1)==0){a = a.xy;}\n    if((iFrame&1)==1){a = a.yx;}\n    fragColor = vec4(dot(a,vec2(1,2)/3.));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec4 a = +A(u+vec2( 1, 0))\n             +A(u+vec2( 0, 1))\n             +A(u+vec2(-1, 0))\n             +A(u+vec2( 0,-1))\n             +A(u+vec2( 1, 1))\n             +A(u+vec2(-1, 1))\n             +A(u+vec2( 1,-1))\n             +A(u+vec2(-1,-1))\n             +A(u+vec2( 0, 0))\n             \n             +A(u+vec2( 2,-2))\n             +A(u+vec2( 2,-1))\n             +A(u+vec2( 2, 0))\n             +A(u+vec2( 2, 1))\n             +A(u+vec2( 2, 2))\n             +A(u+vec2( 1, 2))\n             +A(u+vec2( 0, 2))\n             +A(u+vec2(-1, 2))\n             +A(u+vec2(-2, 2))\n             +A(u+vec2(-2, 1))\n             +A(u+vec2(-2, 0))\n             +A(u+vec2(-2,-1))\n             +A(u+vec2(-2,-2))\n             +A(u+vec2(-1,-2))\n             +A(u+vec2( 0,-2))\n             +A(u+vec2( 1,-2))\n             \n             +A(u+vec2( 3, 0))\n             +A(u+vec2( 0, 3))\n             +A(u+vec2(-3, 0))\n             +A(u+vec2( 0,-3));\n    uint s = uint(dot(a,vec4(1,0,0,0)));\n    vec4 o = A(u+vec2(0,0)).xxyz;\n         o.x=float(((+16U*8U*16U*8U* (1U<<12U)\n                     +16U*8U*16U*    0U\n                     +16U*8U*        0U\n                     +16U*           0U\n                     +               15U)>>s)&1U);\n\n    if(iFrame==0||iMouse.z>.5)\n    {\n        vec2 v = 1.*(u        *2.-iResolution.xy)/iResolution.y;\n        vec2 m = 1.*(iMouse.xy*2.-iResolution.xy)/iResolution.y;\n        o = floor(fract(cos(dot(u,vec2(1.76543,iTime+22.5363)))*vec4(2467.5678,\n                                                                     3467.5678,\n                                                                     4467.5678,\n                                                                     5467.5678))+.1);\n        o*= step(dot(v,v),dot(m,m)*.5);\n    }\n    fragColor = o;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}