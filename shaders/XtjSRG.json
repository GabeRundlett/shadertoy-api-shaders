{
    "Shader": {
        "info": {
            "date": "1444599557",
            "description": "A simple method to get old video tape effect with missmatched color channels. The effected is matched to the intensity of a frequency interval in the music.",
            "flags": 64,
            "hasliked": 0,
            "id": "XtjSRG",
            "likes": 30,
            "name": "Color channel offset fft",
            "published": 3,
            "tags": [
                "fft",
                "audio",
                "chromaticabberation"
            ],
            "usePreview": 0,
            "username": "Macint",
            "viewed": 3314
        },
        "renderpass": [
            {
                "code": "#define freqStart -1.0\n#define freqInterval 0.1\n#define sampleSize 0.02           // How accurately to sample spectrum, must be a factor of 1.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = fragCoord.xy / iResolution.xy;    \n    \n   \t// first texture row is frequency data\n    // sample intensities in frequency interval.\n    \n    float intensity = 0.0;\n\tfor(float s = 0.0; s < freqInterval; s += freqInterval * sampleSize) {\n\t\tintensity += texture(iChannel1, vec2(freqStart + s, 0.0)).r;\n\t}\n    intensity = abs(intensity);\n    intensity = pow((intensity*sampleSize),3.0)*4.0;\n    \n    \n    //set offsets\n    vec2 rOffset = vec2(-0.02,0)*intensity;\n    vec2 gOffset = vec2(0.0,0)*intensity;\n    vec2 bOffset = vec2(0.04,0)*intensity;\n    \n    vec4 rValue = texture(iChannel0, xy - rOffset);\n    vec4 gValue = texture(iChannel0, xy - gOffset);\n    vec4 bValue = texture(iChannel0, xy - bOffset);\n\n    fragColor = vec4(rValue.r, gValue.g, bValue.b, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    },
                    {
                        "channel": 1,
                        "ctype": "musicstream",
                        "id": 7814,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/emil-rottmayer/evade"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}