{
    "Shader": {
        "info": {
            "date": "1718902977",
            "description": "/*sources https://www.shadertoy.com/view/X3cXDr https://www.shadertoy.com/view/DtGyWh*/",
            "flags": 0,
            "hasliked": 0,
            "id": "XX3SW8",
            "likes": 3,
            "name": "framework",
            "published": 3,
            "tags": [
                "fractal",
                "color",
                "neon",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 217
        },
        "renderpass": [
            {
                "code": "/*originals https://www.shadertoy.com/view/X3cXDr https://www.shadertoy.com/view/DtGyWh*/\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(100,23,21))*.05+.5)\nvec3 palette( float t) {\nvec3 a = vec3(0.730, 0.730, 0.730);\nvec3 b = vec3(0.465, 0.465, 0.465);\nvec3 c = vec3(0.700, 0.700, 0.700);\nvec3 d = vec3(-3.112, -2.778, -2.445);\n\nreturn a + b*cos(6.28318*(c*t+d));\n}\n\nfloat star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n   vec4 fragColor = O;\n     vec2 fragCoord = C;\n    vec2 uv = (fragCoord * 2.0 -iResolution.xy)/iResolution.y;\n     vec2 uv2 = (fragCoord * 2.0 -iResolution.xy)/iResolution.y;\n   vec2 uv0 = uv;\n   vec3 finalColor = vec3(0.0);\n   float t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(dot(uv.xy, uv.yx)) + 1.07)) * 10.2;\nfloat si = sin(t);\nfloat co = cos(t);\nmat2 ma = mat2(co, si, -si, co);\nuv*=ma;\n    uv2 *= 2.0 * ( cos(iTime * 2.0) -2.5); // scale\n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;  // anim between 0.9 - 1.1\n   for(float i = 0.0; i<3.0; i++){\n\nuv = fract(uv*mod(fragCoord.y+cos(-iTime*0.25),5.) *1.0*mod(fragCoord.x+sin(-iTime*0.25),5.))-0.5;\n\nfloat d = length(uv)*exp(-length(uv0));\n\nvec3 col = palette(length(uv0)+ .4 +iTime*.4);\n\nd = sin(d*8. - iTime)/8.;\nd = abs(d);\n\nd = pow(0.11/d,1.2);\n\ncol*= d*star(uv2, anim) * vec3(1.55,1.2,1.15)*0.05;\n\n\n finalColor += col * d;\n\n\n \n }\n \n    vec3 p,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<110.;\n        O.xyz+=mix(vec3(1),H(g*.1),sin(.8))*1./e/8e3\n    )\n    {\n        p=g*d;\n       \n        a=30.;\n        p=mod(p-a,a*2.)-a;\n        s=2.;\n        for(int i=0;i++<8;){\n            p=.3-abs(p);\n           \n            p.x<p.z?p=p.zyx:p;\n        p.zx*=ma;\n           \n            s*=e=1.4+sin(iTime*.234)*.1;\n            p=abs(p)*e-\n                vec3(\n                    1.+cos(iTime*.3+.5*cos(iTime*.3))*3.,\n                    10,\n                    8.+cos(iTime*.5)*5.\n                 );\n         }\n      \n         g+=e=length(p.yz)/s;\n    }\n    O*= vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}