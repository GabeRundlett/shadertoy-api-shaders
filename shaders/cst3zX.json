{
    "Shader": {
        "info": {
            "date": "1677617850",
            "description": "CC0: Collecting some github stars\nDo I get the senior dev job now?\n\nAnother meme shader\n",
            "flags": 0,
            "hasliked": 0,
            "id": "cst3zX",
            "likes": 26,
            "name": "Collecting some github stars",
            "published": 3,
            "tags": [
                "github"
            ],
            "usePreview": 0,
            "username": "mrange",
            "viewed": 351
        },
        "renderpass": [
            {
                "code": "// CC0: Collecting some github stars\n// Do I get the senior dev job now?\n\n// Another meme shader\n\n#define TIME        iTime\n#define RESOLUTION  iResolution\n#define PI          3.141592654\n#define TAU         (2.0*PI)\n#define ROT(a)      mat2(cos(a), sin(a), -sin(a), cos(a))\n\nconst float cw = 0.05;\nconst float bw = 0.5*cw*23.0/32.0;\nconst float br = cw*3.0/32.0;\n\n// License: MIT OR CC-BY-NC-4.0, author: mercury, found: https://mercury.sexy/hg_sdf/\nfloat mod1(inout float p, float size) {\n  float halfsize = size*0.5;\n  float c = floor((p + halfsize)/size);\n  p = mod(p + halfsize, size) - halfsize;\n  return c;\n}\n\n// License: MIT OR CC-BY-NC-4.0, author: mercury, found: https://mercury.sexy/hg_sdf/\nvec2 mod2(inout vec2 p, vec2 size) {\n  vec2 c = floor((p + size*0.5)/size);\n  p = mod(p + size*0.5,size) - size*0.5;\n  return c;\n}\n\n// License: MIT, author: Inigo Quilez, found: https://iquilezles.org/www/articles/distfunctions2d/distfunctions2d.htm\nfloat box(vec2 p, vec2 b) {\n  vec2 d = abs(p)-b;\n  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n// License: Unknown, author: Unknown, found: don't remember\nfloat hash(float co) {\n  return fract(sin(co*12.9898) * 13758.5453);\n}\n\n// License: MIT, author: Inigo Quilez, found: https://iquilezles.org/www/articles/distfunctions2d/distfunctions2d.htm\nfloat hexagram(vec2 p, float r) {\n  const vec4 k = vec4(-0.5,0.8660254038,0.5773502692,1.7320508076);\n  p = abs(p);\n  p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n  p -= 2.0*min(dot(k.yx,p),0.0)*k.yx;\n  p -= vec2(clamp(p.x,r*k.z,r*k.w),r);\n  return length(p)*sign(p.y);\n}\n\nvec3 effect(vec2 p, vec2 pp) {\n  const vec3 rgbb  = 1.0/vec3(255.0);\n  const vec3 bgcol = pow(rgbb*vec3(14.0, 17.0, 23.0), vec3(2.0));\n  const vec3 fgcol = pow(rgbb*vec3(24.0, 27.0, 34.0), vec3(2.0));\n  const vec3 locol = pow(rgbb*vec3(40.0, 68.0, 42.0), vec3(2.0));\n  const vec3 hicol = pow(rgbb*vec3(132.0, 210.0, 91.0), vec3(2.0));\n  float aa = 2.0/RESOLUTION.y;\n  float aaa = cw;\n  vec2 cp = p;\n  vec2 np = mod2(cp, vec2(cw));\n  \n  vec3 col = bgcol;\n  \n    if (abs(np.y) < 13.0) {\n    \n    np.x += TIME*10.0;\n    float nep = mod1(np.x, 24.0);\n    float nh0 = hash(nep+123.4);\n    float nh1 = fract(8667.0*nh0);\n  \n    vec2 ep = np*cw;\n    float r = mix(0.25, 0.5, nh0)*1.0; \n    float pt = mix(0.5, 1.0, nh1);\n  \n    float ft = mod(TIME+pt*nh1, pt);\n    ep.y -= -mix(2.0, 1.0, nh1)*(ft-pt*0.5)*(ft-pt*0.5)+r-0.5+0.125;\n    ep *= ROT(2.0*mix(0.5, 0.25, nh0)*TIME+TAU*nh0);\n\n    float ed = hexagram(ep, 0.5*r);\n    ed = abs(ed)-0.05;\n    \n    float cd = box(cp, vec2(bw-br))-br;\n  \n    vec3 ecol = mix(fgcol, hicol, smoothstep(aaa, -aaa, ed));\n    \n    col = mix(col, ecol, smoothstep(aa, -aa, cd)); \n  }\n  \n  col = sqrt(col);\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 q = fragCoord/RESOLUTION.xy;;\n  vec2 p = -1. + 2. * q;\n  vec2 pp = p;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n  vec3 col = effect(p, pp);\n  \n  fragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}