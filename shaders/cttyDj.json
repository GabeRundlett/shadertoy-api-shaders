{
    "Shader": {
        "info": {
            "date": "1699800992",
            "description": "A rather strange effect that I wanted to try out...",
            "flags": 0,
            "hasliked": 0,
            "id": "cttyDj",
            "likes": 4,
            "name": "Megafan",
            "published": 3,
            "tags": [
                "2d",
                "demo",
                "silents",
                "reproduction",
                "xpose"
            ],
            "usePreview": 0,
            "username": "misol101",
            "viewed": 189
        },
        "renderpass": [
            {
                "code": "float getCosInput(float n, float w, float m) {\n    float v=mod(n, PI*2.)/(PI*2.) - 0.5;\n    v*=1.+(MAX_WIDTH-w)*m;\n    v=clamp(v+0.5,0.,1.);\n    return v*PI*2.;\n}\n\nfloat swingWidth(float section) {\n    return MAX_WIDTH * (0.55+sin(xTime*swing_speed+section*swing_var)*0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = vec4(0.);\n    getPhaseData(iTime);\n    float uvTy = uv.y + yTime;\n\n    // determine section\n    float section = 0., yprogress = 0., ss=0.;\n    float fullSegSize = 1./nof_full_sections;\n    for (float i = 0.; i < MAX_NOF_SEG; i++) {\n        float w = abs(swingWidth(i));\n        float old_ss = ss;\n        ss += smoothstep(0.0,1.0,w / MAX_WIDTH) * fullSegSize + fullSegSize * 0.15;\n        if(uvTy >= old_ss && uvTy < ss) {\n            section = i;\n            yprogress = (uvTy - old_ss) / (ss-old_ss);\n            break;\n        }\n    }\n    // fan\n    float w = abs(sin(yprogress * PI) * (swingWidth(section) + 0.02));\n    float dist=abs(uv.x-0.5);\n    if (dist < w) {\n        dist /= w;\n        col = vec4(smoothstep(-1., 1., cos(getCosInput(dist * PI * nof_lines, w, 4.5))));\n        col *= w * 1.9;\n    }\n    // main line\n    float dc = MAX_WIDTH * 2. / nof_lines * main_line_width;\n    float dir = float((int(section) % 2)*2-1);\n    float linw = (sin(yprogress * PI) * (swingWidth(section) + 0.02 - dc*0.5)) * dir;\n    dist=abs(uv.x-0.5-linw);\n    if (dist < dc) {\n        dist /= dc;\n        vec4 col2 = vec4(smoothstep(-1., 1., cos(getCosInput(dist * PI, dist, 0.4)))) * 0.66;\n        col = (dist > 0.65) ? max(col,col2) : col2;\n    }\n    fragColor = col * colorizer;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "const float PI = 3.14159265359;\nconst float PHASE_LENGTH = 9.;\nconst float MAX_NOF_SEG = 30.;\nconst float MAX_WIDTH = 0.355;\nconst float FADE_TIME = 1.;\nconst int NOF_PHASES = 5;\n\nfloat nof_lines, nof_full_sections, main_line_width, swing_var, swing_speed, xTime = 0., yTime = 0.;\nvec4 colorizer = vec4(0.5,0.9,0.5, 0.);\n\nvoid getPhaseData(float time) {\n    int phase = (int(time / PHASE_LENGTH) + 0) % NOF_PHASES;\n    xTime = mod(time, PHASE_LENGTH);\n    nof_lines = 41., main_line_width = 0.8;\n\n    switch(phase) {\n        case 0:\n            nof_full_sections = 2.7, swing_var = 2.8, swing_speed = 1.5;\n            yTime = xTime * 0.15;\n            colorizer = vec4(0.5,0.9,0.5, 0.);\n            break;\n        case 1:\n            nof_full_sections = 1.5, swing_var = 1.0, swing_speed = 1.;\n            yTime = 4.6 + xTime * -0.3;\n            colorizer = vec4(0.9,0.9,0.5, 0.);\n            break;\n        case 2:\n            nof_full_sections = 5.0, swing_var = 1.8, swing_speed = 0.8;\n            yTime = xTime * 0.3;\n            colorizer = vec4(0.3,0.7,1.0, 0.);\n            break;\n        case 3:\n            nof_lines = 61., nof_full_sections = 0.6;\n            swing_var = 0.7, swing_speed = 0.9, main_line_width = 1.6;\n            yTime = 3.0 + xTime * -0.1;\n            colorizer = vec4(1.0,0.5,0.5, 0.);\n            break;\n        case 4:\n            nof_full_sections = 3.7, swing_var = 1.2, swing_speed = 2.4;\n            yTime = 4.4 + xTime * -0.42;\n            colorizer = vec4(1.0,0.6,1.0, 0.);\n            nof_lines = 38., main_line_width = 1.1;\n            break;\n    }\n    float ft = FADE_TIME*0.5;\n    if (xTime < ft) colorizer *= (xTime/ft);\n    if (xTime > PHASE_LENGTH - ft) colorizer *= (PHASE_LENGTH - xTime) / ft;\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}