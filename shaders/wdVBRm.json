{
    "Shader": {
        "info": {
            "date": "1606844907",
            "description": "Playing around with my bars shader https://www.shadertoy.com/view/wd3BW2",
            "flags": 0,
            "hasliked": 0,
            "id": "wdVBRm",
            "likes": 11,
            "name": "hoeled_bars_remix_2",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "hoeled",
            "viewed": 395
        },
        "renderpass": [
            {
                "code": "float Random(vec2 p) {\n\tp = fract(p*vec2(123.34, 456.21));\n    p += dot(p, p+45.32);\n    return fract(p.x*p.y);\n}\n\nfloat T(float a) {\n    float random = Random(vec2(a*532.43, a*784.34));\n    float interval = clamp(random, 0.3, 0.6);\n\treturn clamp((sin(iTime*a*1.4*random)+1.)/2., 0., 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.);\n    \n    uv *= .85;\n    \n    // scaling\n    uv.x *= 4.5;\n    uv.y -= .5;\n        \n    // bars\n    for(float i=.0; i<64.; i=i+2.){\n        // thickness\n    \tfloat width = 0.08+sin(i)*(sin(iTime*Random(vec2(i, 654.543)))*.4+.5);  \n    \tfloat edge = 0.01*(sin(iTime*Random(vec2(i, 654.543)))*.4+.5);\n        \n        //bar\n        float m1 = smoothstep(width+edge, width, abs((uv.x-3.2+(i/10.))));\n        \n        col += m1 * T(2.+(i*.02));\n        col += m1*.1;\n        \n        //float m2 = smoothstep(width/10.+edge/10., width/10., abs((uv.y-.2+(i/20.))));\n        //col -= m2*.1;\n    }\n    //col = clamp(col, 0., 2.);\n    \n    // colors\n    col.r -= T(.2)*1.5;\n    col.g -= T(.6)*1.5;\n    col.b -= T(1.4)*1.5;\n    \n    col.rgb += T(uv.x)*.03;\n    \n    col -= vec3(.4);\n    \n\t// vignette\n    col *= smoothstep(-.95, .0, uv.y);\n    col *= smoothstep(0., -.95, uv.y);\n    col *= smoothstep(-5., 1., uv.x);\n    col *= smoothstep(5., -1., uv.x);\n    col += col*2.;\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}