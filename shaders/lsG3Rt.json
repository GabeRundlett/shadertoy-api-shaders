{
    "Shader": {
        "info": {
            "date": "1455813750",
            "description": "blends to images using fbm",
            "flags": 0,
            "hasliked": 0,
            "id": "lsG3Rt",
            "likes": 2,
            "name": "Cloud Blending",
            "published": 3,
            "tags": [
                "imageblending"
            ],
            "usePreview": 0,
            "username": "goulart",
            "viewed": 815
        },
        "renderpass": [
            {
                "code": "// Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\n#define EPS\t\t.001\n#define PI\t\t3.14159265359\n#define RADIAN\t180. / PI\n#define SPEED\t25.\n\nfloat hash(vec2 p)\n{\n    return fract(sin(dot(p,vec2(127.1,311.7))) * 43758.5453123);\n}\n\nfloat noise(vec2 p)\n{\n    vec2 i = floor(p), f = fract(p); \n\tf *= f*(3.-2.*f);\n    \n    vec2 c = vec2(0,1);\n    \n    return mix(mix(hash(i + c.xx), \n                   hash(i + c.yx), f.x),\n               mix(hash(i + c.xy), \n                   hash(i + c.yy), f.x), f.y);\n}\n\nfloat fbm(in vec2 p)\n{\n\treturn\t.5000 * noise(p)\n\t\t   +.2500 * noise(p * 2.)\n\t\t   +.1250 * noise(p * 4.)\n\t\t   +.0625 * noise(p * 8.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n\n    float cloudVal = (fbm(p+iTime));\n    \n    vec3 backPx = texture( iChannel0, p ).rgb;\n    vec3 frontPx = vec3(0.3, 0.3, 0.3);// = texture( iChannel1, p ).rgb;\n    float alpha = mod(iTime, 1.0);\n    \n    vec3 rPx = mix(backPx, frontPx, cloudVal);\n    \n    fragColor = vec4( rPx ,1);\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}