{
    "Shader": {
        "info": {
            "date": "1718910379",
            "description": "For those who know the band Periphery ;)\n\nCode golfing is of course welcome!",
            "flags": 0,
            "hasliked": 0,
            "id": "XX3Szr",
            "likes": 10,
            "name": "Select difficulty",
            "published": 3,
            "tags": [
                "psychedelic",
                "periphery"
            ],
            "usePreview": 0,
            "username": "Lilloz",
            "viewed": 210
        },
        "renderpass": [
            {
                "code": "#define N_BOXES 10.\n#define ROTATION 1\n#define DEPTH 5.\n// Choose a color (0: white, 1:orange, 2:green, 3:blue)\n#define COLOR 0\n// Or shift between these colors\n#define SHIFT 1\n\nconst vec3 white = vec3(DEPTH*.1);\nconst vec3 orange = vec3(0.6667, 0.4627, 0.1608);\nconst vec3 green = vec3(0.1176, 0.7059, 0.149);\nconst vec3 blue = vec3(0.1804, 0.4078, 0.6667);\n\nmat2 rot(float a)\n{\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat periphery(vec2 p, float s)\n{\n    float per;\n    \n    for (float i=1.; i<N_BOXES+1.; i++)\n    {\n        vec2 p0 = p;\n        float a = radians(360./N_BOXES) *i;\n        float mean = (N_BOXES+DEPTH)*.4;\n        p0 *= rot(a);\n        #if ROTATION\n        p0 *= rot(iTime * i*mean*1e-2/(N_BOXES*.08));\n        #endif\n        \n        float box = sdBox(p0, vec2(s));\n        float gamma = mean * 1e-4*.7;\n        box = gamma/abs(box);\n        \n        per += box;\n    }\n    return per;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 tc, c;\n\n    vec2 p = (fragCoord -.5* iResolution.xy) / iResolution.y;\n    \n    float td;\n    \n    for (float i=0.; i<DEPTH; i+=.45)\n    {\n        float size = pow(.45, i);\n        float per = periphery(p, size);\n        td += per;\n    }\n    \n    #if COLOR == 0\n    c = vec3(DEPTH*.1);\n    #elif COLOR == 1\n    c = orange;\n    #elif COLOR == 2\n    c = green;\n    #elif COLOR == 3\n    c = blue;\n    #endif\n    \n    #if SHIFT\n    c = mix(white, orange, abs(sin(iTime)));\n    c = mix(c, green, abs(sin(iTime)));\n    c = mix(c, blue, abs(sin(iTime)));\n    #endif\n    \n    tc += c*td;\n    \n    fragColor = vec4(tc, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}