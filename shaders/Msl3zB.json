{
    "Shader": {
        "info": {
            "date": "1373822803",
            "description": "color regions are dilated , luminosity is flatten, contours are highlighted.\n",
            "flags": 2,
            "hasliked": 0,
            "id": "Msl3zB",
            "likes": 20,
            "name": "cartoon video",
            "published": 3,
            "tags": [
                "cartoon"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 5807
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n#define EPS 2.e-3\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv.x = 1.-uv.x;\n\tvec2 uvx = uv+vec2(EPS,0.);\n\tvec2 uvy = uv+vec2(0.,EPS);\n\t\n\tvec2 ref = vec2(.5,.5);\n\tvec3 col0 = texture(iChannel0, ref).xyz;\n\tfloat lum0 = (col0.x+col0.y+col0.z)/3.;\n\t\n\tbool isin = (uv.x > .5+.5*sin(iTime));\n\t\n\tvec3 tex,texx,texy;\n\tvec2 grad; float g=1.;\n\t\n\tfor (int i=0; i<30; i++) \n\t{\n\t\ttex = texture(iChannel0, uv).xyz;\n\n\t\tif (isin)\n\t\t{\n\t\t\tuvx = uv+vec2(EPS,0.);\n\t\t\tuvy = uv+vec2(0.,EPS);\t\n\t\t}\n\t\ttexx = texture(iChannel0, uvx).xyz;\n\t\ttexy = texture(iChannel0, uvy).xyz;\n\t\tgrad  = vec2(texx.x-tex.x,texy.x-tex.x); \n//\t\tif (i==0) g = dot(grad,grad);\n\t\t\n\t\tuv    += EPS*grad;\n\t\tuvx.x += EPS*grad.x;\n\t\tuvy.y += EPS*grad.y;\n\t}\n\t\n\tvec3 col = texture(iChannel0, uv).xyz;\n    vec3 m = vec3(.2,.1,.1);\n\tfloat lum = (col.x+col.y+col.z)/3.;\n#if 1\n\tg = 4.*dot(grad,grad);\n\tg = pow(max(0.,1.-g),30.);\n\tg = clamp(g,0.,1.);\n#endif\n\tcol = g * col / pow(lum,.55);\n\t\n\tfragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}