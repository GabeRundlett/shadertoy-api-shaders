{
    "Shader": {
        "info": {
            "date": "1553553765",
            "description": "Computing normals using standard derivative vs manually fetching texture data.\n\nCLICK ANYWHERE ON THE IMAGE\n\nOn the left: the standard derivative normal map\nOn the right: the normal map calculated comparing the texture",
            "flags": 0,
            "hasliked": 0,
            "id": "3sSSW1",
            "likes": 26,
            "name": "Height to normalMap",
            "published": 3,
            "tags": [
                "normal",
                "derivative",
                "height"
            ],
            "usePreview": 1,
            "username": "NoxWings",
            "viewed": 6030
        },
        "renderpass": [
            {
                "code": "#define heightMap iChannel0\n#define heightMapResolution iChannelResolution[0]\n#define normalStrength 10.0\n#define textureOffset 1.0\n#define pixelToTexelRatio (iResolution.xy/heightMapResolution.xy)\n\nvec2 stdNormalMap(in vec2 uv) \n{\n    float height = texture(heightMap, uv).r;\n    return -vec2(dFdx(height), dFdy(height)) * pixelToTexelRatio;\n}\n\nvec2 texNormalMap(in vec2 uv)\n{\n    vec2 s = 1.0/heightMapResolution.xy;\n    \n    float p = texture(heightMap, uv).x;\n    float h1 = texture(heightMap, uv + s * vec2(textureOffset,0)).x;\n    float v1 = texture(heightMap, uv + s * vec2(0,textureOffset)).x;\n       \n   \treturn (p - vec2(h1, v1));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float mousePosition = (iMouse.x > 0.1) ? iMouse.x : iResolution.x * 0.5;\n    float mouseSplit = round(mousePosition * 0.5) * 2. + 1.;\n    \n    if (abs(fragCoord.x - mouseSplit) < 1.0) \n    {\n        fragColor = vec4(0.);\n        return;\n    }\n    \n    vec2 normal = (fragCoord.x > mouseSplit) ? texNormalMap(uv) : stdNormalMap(uv);\n    \n    normal *= normalStrength;\n    normal += 0.5;\n    \n    fragColor = vec4(normal, 1., 1.);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}