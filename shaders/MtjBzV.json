{
    "Shader": {
        "info": {
            "date": "1516594514",
            "description": "inverse of z |-> (az+b) / (cz+d)\n",
            "flags": 0,
            "hasliked": 0,
            "id": "MtjBzV",
            "likes": 8,
            "name": "Mobius transformation",
            "published": 3,
            "tags": [
                "2d",
                "math"
            ],
            "usePreview": 0,
            "username": "phi16",
            "viewed": 582
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord-iResolution.xy/2.) / iResolution.y;\n    p.y += 0.45;\n    \n    float a = cos(iTime);\n    float b = sin(iTime);\n    float c = -sin(iTime);\n    float d = cos(iTime); // SL(2,R)\n    \n    float nx = p.x * a + b;\n    float ny = p.y * a;\n    float dx = p.x * c + d;\n    float dy = p.y * c;\n    float deno = dx*dx + dy*dy;\n    float numex = nx * dx + ny * dy;\n    float numey = ny * dx - nx * dy;\n    p = vec2(numex, numey) / deno;\n    \n    float arg = atan(p.y,p.x);\n    float len = length(p);\n    vec3 hue = cos(vec3(0,1,-1)*2./3.*3.141592 + arg) * 0.5 + 0.5;\n    float lum = 1.;\n    lum *= pow(-cos(len * 30.) * 0.5 + 0.5, 0.1);\n    lum *= pow(-cos(p.x * 30.) * 0.5 + 0.502, 0.03);\n    lum *= pow(-cos(p.y * 30.) * 0.5 + 0.502, 0.03);\n    vec3 col = hue * lum; \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}