{
    "Shader": {
        "info": {
            "date": "1612079166",
            "description": "name says it all",
            "flags": 0,
            "hasliked": 0,
            "id": "3lKyDc",
            "likes": 33,
            "name": "Meta-furballs",
            "published": 3,
            "tags": [
                "metaballs",
                "fur"
            ],
            "usePreview": 1,
            "username": "yonatan",
            "viewed": 907
        },
        "renderpass": [
            {
                "code": "// texture based 3D value noise by iq - https://www.shadertoy.com/view/4sfGzS\nfloat noise( in vec3 x )\n{\n    vec3 i = floor(x);\n    vec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\tvec2 uv = (i.xy+vec2(37.0,17.0)*i.z) + f.xy;\n\tvec2 rg = textureLod( iChannel0, (uv+0.5)/256.0, 0.0).yx;\n\treturn mix( rg.x, rg.y, f.z );\n}\n\n// Metaballs and analytic normals from Klems' https://www.shadertoy.com/view/4dj3zV\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 a, q, p, gradient, normal, dir;\n    float b, dist, bdist;\n    dir = normalize(vec3((2.*fragCoord.xy-iResolution.xy)/min(iResolution.x,iResolution.y), 1.7));\n    p = vec3(0, 0, -3);\n    for(int i = 0; i < 200; i++) {\n        q = p; // save current position\n        p += dir * dist; // step\n        gradient = vec3(0);\n        dist = 1.;\n        for(float j = 0.; j < 3.; j++) {\n            vec3 ballp = sin(vec3(1,2,5) * j + iTime); // ball position\n            b = dot(a = p - ballp, a);\n            // gradient += a / (b * b); // actual normals\n            gradient += a / sqrt(b); // Shane's fur grooming tip\n            dist -= .5 / b;\n        }\n        normal = normalize(gradient);\n        bdist = dist;\n        if(i>90 && dist<.01) {\n            dist += noise(normal*60.);\n            dist *= .02;\n        }\n     }\n    vec3 col = normal.yyy*.4+.5;\n    if(dist<.1) col = col * vec3(.9,.3,.5) + .1;\n    else col = col * vec3(.7,.8,.5);\n    fragColor.rgb = col * (1.+bdist);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}