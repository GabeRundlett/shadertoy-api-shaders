{
    "Shader": {
        "info": {
            "date": "1614521713",
            "description": "Simple demo for learning purposes",
            "flags": 32,
            "hasliked": 0,
            "id": "wlKfDm",
            "likes": 11,
            "name": "Draw with mouse [antialiased]",
            "published": 3,
            "tags": [
                "mouse",
                "draw",
                "buffer",
                "learn"
            ],
            "usePreview": 0,
            "username": "avin",
            "viewed": 519
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{          \n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define S(d,r,pix) smoothstep( .75, -.75, (d)/(pix)-(r))\nfloat line(vec2 p, vec2 a,vec2 b) {\n    p -= a, b -= a;\n    float h = clamp(dot(p, b) / dot(b, b), 0., 1.);\n    return length(p - b * h);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 ouv = (fragCoord.xy)/iResolution.y;\n       \n    vec2 pos1 = iMouse.xy/iResolution.y;\n    vec4 prevMouse = texture(iChannel1, ouv).rgba;\n    vec2 pos2 = prevMouse.rg;\n       \n    vec3 backCol = texture(iChannel0, fragCoord/iResolution.xy).rgb;\n                \n    float d = 0.;\n    if(prevMouse.w > 0.){\n        // d = clamp(drawLine(pos2, pos1, ouv, 3., 1.), 0., 1.);\n        d = S( line( ouv,pos2, pos1), 3., 2./iResolution.x);\n    }  \n    \n    // vec3 col = backCol + vec3(d);\n    \n    vec3 col = max(backCol, vec3(d));\n    \n    fragColor = vec4(col, 1.);    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(iMouse.xy/iResolution.y,1.0,iMouse.z);    \n}",
                "description": "",
                "inputs": [],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}