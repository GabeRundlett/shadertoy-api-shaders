{
    "Shader": {
        "info": {
            "date": "1603062520",
            "description": "grid test",
            "flags": 0,
            "hasliked": 0,
            "id": "tdy3Wz",
            "likes": 0,
            "name": "grid - woz",
            "published": 3,
            "tags": [
                "grid"
            ],
            "usePreview": 0,
            "username": "woz",
            "viewed": 240
        },
        "renderpass": [
            {
                "code": "float f(vec2 uv)\n{\n    float x = uv.x;\n    float l = length(uv - vec2(x, x * x + sin(iTime * 1.)));\n    \n    return l;\n    return min(l, length(uv - vec2(x, sin(x + iTime * 10.))));\n}\n\nfloat grid(vec2 fragCoord)\n{\n    ivec2 coord = ivec2(fragCoord);\n    coord -= ivec2(iResolution.xy) / 2;\n    return float(1 - clamp(abs(coord.x) * abs(coord.y), 0, 1));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    \n    uv *= 10.;\n\n    float d = smoothstep(.2, .1, f(uv));\n    \n    d += grid(fragCoord);\n    \n    vec3 col = vec3(d);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}