{
    "Shader": {
        "info": {
            "date": "1532908709",
            "description": "Tinkering",
            "flags": 0,
            "hasliked": 0,
            "id": "4tdcD7",
            "likes": 4,
            "name": "Checker Coils",
            "published": 3,
            "tags": [
                "bookofshaders"
            ],
            "usePreview": 0,
            "username": "momoro",
            "viewed": 541
        },
        "renderpass": [
            {
                "code": "float PI = 3.141592654;\n\nmat2 rotate(float angle) {\n    return mat2(cos(angle), -sin(angle),\n               \tsin(angle), cos(angle));\n}\n\n// Thanks FabriceNeyret2\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n\n\n    float size =10.;\n    float f;\n\n    \n        st *= size;\n\n \n    st *= cos(iTime) / 2. + .5 + 1.;\n    \n   float t1 = sin(iTime) * ceil(10.*sin(length(st)) / 2. + .5);\n    \n    st = rotate(t1/5.) * st;\n    float p = sin(size*fract(atan(st.x, st.y)))/2. + .5;\n\n    \n    float l = length(st);\n    float t = sin(iTime);\n    \n    \n    l += smoothstep(.45, 0.5, p)*PI * t;\n    f = smoothstep(0.476, -0.096, sin(l)/2. + .5);\n        \n\n    fragColor = vec4(vec3(f),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}