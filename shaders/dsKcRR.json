{
    "Shader": {
        "info": {
            "date": "1695737283",
            "description": "Interpolation that is very close to linear interpolation, but has a derivative of zero at both endpoints of the interpolation curve. (Derived from integrating a normalized semicircle from 0 to 1)",
            "flags": 0,
            "hasliked": 0,
            "id": "dsKcRR",
            "likes": 0,
            "name": "\"Almost\"-Linear Interpolation",
            "published": 3,
            "tags": [
                "interpolation"
            ],
            "usePreview": 1,
            "username": "Tech_",
            "viewed": 186
        },
        "renderpass": [
            {
                "code": "float Interpolate(float x)\n{\n    return 2.0 / radians(180.0) * (sqrt(x * (1.0 - x)) * (2.0 * x - 1.0) + asin(sqrt(x)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 ar = vec2(iResolution.y / iResolution.x, 1.0);\n\n    // Time varying pixel color\n    vec3 col;\n\n    float n = 20.0;\n    vec2 gridCoord = floor(uv * n / ar) / n * ar;\n    vec2 fracCoord = fract(uv * n / ar);\n    vec3 offset    = vec3(1.0 / n * ar, 0.0);\n    \n    vec3 bl = textureLod(iChannel0, gridCoord            , 0.0).rgb;\n    vec3 br = textureLod(iChannel0, gridCoord + offset.xz, 0.0).rgb;\n    vec3 tl = textureLod(iChannel0, gridCoord + offset.zy, 0.0).rgb;\n    vec3 tr = textureLod(iChannel0, gridCoord + offset.xy, 0.0).rgb;\n    \n    if (sin(iTime * 0.4) * 0.5 + 0.5 < uv.x)\n        col = mix(mix(bl, br, Interpolate(fracCoord.x)), mix(tl, tr, Interpolate(fracCoord.x)), Interpolate(fracCoord.y));\n    else\n        col = mix(mix(bl, br, fracCoord.x), mix(tl, tr, fracCoord.x), fracCoord.y);\n        \n    col *= step(0.001, abs(uv.x - sin(iTime * 0.4) * 0.5 - 0.5));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}