{
    "Shader": {
        "info": {
            "date": "1599371987",
            "description": "Boy i sure do love euclidean 3D objects \n                                    - normal person",
            "flags": 0,
            "hasliked": 0,
            "id": "3t2BRV",
            "likes": 0,
            "name": "Learning 3D shades",
            "published": 3,
            "tags": [
                "three"
            ],
            "usePreview": 0,
            "username": "SluggishSlooge",
            "viewed": 246
        },
        "renderpass": [
            {
                "code": "\nfloat DistLine(vec3 ro, vec3 rd, vec3 p){\n    return length(cross(p-ro,rd))/length(rd);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -=.5;\n\tuv.x *= iResolution.x/iResolution.y;\n    float frame=float(iFrame);\n    vec3 ro = vec3(0.,0.,-2.);\n    vec3 rd = vec3(uv.x,uv.y,2.)-ro;\n    float t = iTime;\n    vec3 p = vec3(sin(t),0.,3.+cos(t));\n    vec3 light = vec3(2.0,0.2,-1.0);\n    float lightAmt = distance(p,light);\n   \n    float d = DistLine(ro,rd,p);\n    d= smoothstep(.1,.09,d);\n    if(d!=0.0) d -= (lightAmt/4.-0.7);\n    vec3 col=vec3(0.0,0.0,0.0);\n\t\n    // Output to screen\n    fragColor = vec4(d);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}