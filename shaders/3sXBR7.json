{
    "Shader": {
        "info": {
            "date": "1587864662",
            "description": "An experiment  (Might need to restart shader)",
            "flags": 32,
            "hasliked": 0,
            "id": "3sXBR7",
            "likes": 11,
            "name": "FEED ME",
            "published": 3,
            "tags": [
                "mouse",
                "derivative",
                "feedback",
                "buffer"
            ],
            "usePreview": 1,
            "username": "Plento",
            "viewed": 449
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 f, in vec2 u ){\n\tvec3 b = texture(iChannel0, u/iResolution.xy).xyz;\n    f = vec4(1.-exp(-b*b*b*b*b*b*17.), 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Paint with the mouse!\n\nvec2 R;\n#define m vec2(R.x/R.y*(iMouse.x/R.x-.5),iMouse.y/R.y-.5)\n#define ch(chan, p) texelFetch(chan, ivec2(p), 0)\nvec2 hash21(float p){\n\tvec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n\tp3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\n// Uncomment for trippy zoomin!!\n#define ZOOM\n\n#define zoomFactor 0.991 \n\n// Bigger numbers means everything blends faster.\n#define diffusionRate 0.0089\n\n#define brushSize .07\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    R = iResolution.xy;\n    vec2 uv2 = vec2(u.xy - 0.5*R.xy)/R.y;\n    vec2 uv = u / R;\n    \n    vec4 bA = ch(iChannel0, u);\n    vec4 bB = texture(iChannel1, u/R);\n    \n    float h = 1.0;\n    vec4 n = texelFetch(iChannel0, ivec2(u + vec2(0., h)), 0);\n    vec4 s = texelFetch(iChannel0, ivec2(u + vec2(0., -h)), 0);\n    vec4 e = texelFetch(iChannel0, ivec2(u + vec2(h, 0.)), 0);\n    vec4 w = texelFetch(iChannel0, ivec2(u + vec2(-h, 0.)), 0);\n    \n    vec4 avg = (n+s+w+e) / 4.;\n    vec4 dif = avg - bA;\n    \n    dif.xy += hash21(avg.z*432.4)*0.25;\n    dif.xy -= 0.125;\n    vec2 dir = normalize(vec2(dif.x, dif.y));\n    vec2 nc = vec2((u + vec2(dir.x*h, dir.y*h)));\n    \n    #ifdef ZOOM\n    nc -= R.xy*.5;\n    nc *= zoomFactor;\n    nc += R.xy*.5;\n    #endif\n    \n    vec4 new = texelFetch(iChannel0, ivec2(nc), 0);\n    \n    f = mix(new, texture(iChannel0, uv), 0.0002);\n    f = mix(f, avg, diffusionRate);\n    \n    if(iMouse.z > 0. && length(m-uv2) < brushSize)f = texture(iChannel1, uv);\n    if(iFrame < 8){f = bB;}\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}