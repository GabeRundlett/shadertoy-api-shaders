{
    "Shader": {
        "info": {
            "date": "1596447854",
            "description": "it's, like, pixelization and gradients, man",
            "flags": 0,
            "hasliked": 0,
            "id": "tlfBDn",
            "likes": 29,
            "name": "Pixelization gradient",
            "published": 3,
            "tags": [
                "gradient",
                "pixelization"
            ],
            "usePreview": 0,
            "username": "zwegner",
            "viewed": 620
        },
        "renderpass": [
            {
                "code": "// Based on xxhash\nuint hash(uint x) {\n\tx *= 0xC2B2AE3Du;\n    x = x << 17 | x >> 15;\n    x ^= x >> 15;\n    x *= 0x85EBCA77u;\n    x ^= x >> 13;\n    x *= 0x165667B1u;\n    x ^= x >> 16;\n\treturn x;\n}\nfloat fhash2(vec2 xy) {\n    return float(hash(uint(1024.*xy.x) + hash(uint(1024.*xy.y)))) / float(0xFFFFFFFFu);\n}\nfloat fhash3(vec2 xy, uint z) {\n    return float(hash(uint(1024.*xy.x) + hash(uint(1024.*xy.y) +\n\t\t\thash(1024u*z)))) / float(0xFFFFFFFFu);\n}\n\nvec2 mask_coord(vec2 coord, int shift) {\n    uint mask = 0xFFFFu << shift;\n    return vec2(float(uint(coord.x) & mask),\n                float(uint(coord.y) & mask));\n}\n\nfloat get_sample(vec2 coord, int shift) {\n    coord = mask_coord(coord, shift);\n    vec2 uv = coord / iResolution.xy;\n    \n    float offset = 1.2 * (uv.x + uv.y - 1.);\n    float hxy = fhash2(coord);\n    float fshift = 6.*abs(uv.y - uv.x) + 1.8;\n    float tf = 13.*iTime/fshift + 1.*hxy;\n    uint t = uint(tf);\n    float h1 = fhash3(coord, t);\n    #if 1\n    float c = 1.2*h1 + offset;\n    #else\n\tfloat h2 = fhash3(coord, t+1u);\n    float f = clamp(1.8*(tf-float(t)), 0., 1.);\n    float c = 1.2*mix(h1, h2, f) + offset;\n    #endif\n\tc = (c - .5) * 2.5 / (1.5 + float(shift)) + .5;\n    return c;\n}\n\nfloat get_sample_t(vec2 coord, uint time) {\n    int shift = 0;\n    for (int s = 10; s >= 0; s--) {\n    \tvec2 xy = mask_coord(coord, s) / iResolution.xy;\n    \tfloat factor = 6.*abs(xy.y - xy.x)+1.;\n        if (s < int(factor + 1.*fhash3(xy, time))) {\n            shift = s;\n            break;\n        }\n    }\n    float c1 = get_sample(coord, shift);\n    float c2 = get_sample(coord, shift+1);\n    return (1.*c1+c2)/2.5;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float tf = .3*iTime;\n    uint t = uint(tf);\n    float c1 = get_sample_t(fragCoord, t);\n    float c2 = get_sample_t(fragCoord, t+1u);\n    float c = mix(c1, c2, tf-float(t));\n    fragColor = vec4(c,c,c,1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}