{
    "Shader": {
        "info": {
            "date": "1455576253",
            "description": "Based on this tutorial: https://www.youtube.com/watch?v=0ifChJ0nJfM\n\nJust Training with I&ntilde;igo Quilez tutorials\nReferences: https://www.youtube.co\n\nThis shader represents my friend's treacherous love triangle ;)\n\nJavier Viedma\n",
            "flags": 0,
            "hasliked": 0,
            "id": "lsGGRc",
            "likes": 6,
            "name": "San PGATR shader",
            "published": 3,
            "tags": [
                "heart"
            ],
            "usePreview": 0,
            "username": "jviedma",
            "viewed": 2133
        },
        "renderpass": [
            {
                "code": "// Created by Javier Viedma - jviedma/2016\n// MASTER UNIVERSITARIO EN INFORMÃTICA GRAFICA, VIDEOJUEGOS Y REALIDAD VIRTUAL. PGATR. PRÃCTICA 1.\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Just Training with IÃ±igo Quilez tutorials\n// References: https://www.youtube.com/watch?v=0ifChJ0nJfM\n\nvec4 pintaCorazon(vec2 uv, vec2 despl,vec4 color1 ,vec4 color2, vec4 color3, vec4 bgColor, float tamano, float brightradius,vec2 brightcenter, float maximo, float minimo)\n{\n    //Corazon: no es un corazon de nadie, es propio: j.viedma\n    \n\n    vec2 q = uv + despl;\n    vec2 center = vec2(0.0,0.0)- despl;\n    \n    float tamanobase = mix(minimo,maximo,tamano);\n    \n    float arturadelpedaso = mix(0.4,0.6,sin(tamano*3.14*2.));\n    float anchuradelpedaso = mix(1.4,1.7,sin(tamano*3.14*1.));\n    float aperturadelpedaso = mix(1.7,2.0,sin(tamano*3.14*2.));\n    float larguradelpedaso = mix(0.3,0.25,sin(tamano*3.14*1.));\n    \n    float radius = (tamanobase + 0.25*cos(sin(q.y*anchuradelpedaso)/cos(q.x)*aperturadelpedaso -6.*abs(sin(q.x))) + larguradelpedaso *(sin(3.14*q.y+arturadelpedaso))); //esta es la funciÃ³n que define el corazon\n    \n    float brightdiffuse = 0.1 + clamp(0.11,0.15,tamano); //modifica esto para hacer el brillo mas difuso o menos\n    \n    vec4 HeartColor = mix(color2,color3,(length(q+brightcenter)));\n    HeartColor = mix(color1,HeartColor,smoothstep(brightradius-brightdiffuse,brightradius+brightdiffuse,sqrt(length(q+brightcenter))));\n\t\n    \n    float val = smoothstep(radius+0.01,radius-0.01,length(uv-center)); //aqui se pinta el corazÃ³n y sus colores\n    return mix(bgColor,HeartColor,val);\n}\n\nvec4 pintaFondo(vec2 uv, vec4 color1 ,vec4 color2,vec2 posluz)\n{\n    return  mix(color1,color2,smoothstep(0.0,2.0,sqrt(length(uv-posluz))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x = uv.x * iResolution.x/iResolution.y;\n    \n    //Colorines\n    vec4 pink = vec4(1.0,.6,0.6,1.0);\n    vec4 purple = vec4(.6,.0,0.5,1.0);\n    vec4 darkpurple = vec4(.3,.0,0.2,1.0);\n    vec4 red = vec4(1.0,0.0,0.0,1.0);\n    vec4 red2 = vec4(0.4,0.1,0.01,1.0);\n    vec4 white = vec4(1.0,1.0,1.0,1.0);\n    vec4 bg = vec4(0.2,0.2,0.2,0.2);\n    \n    //Color de fondo\n    vec4 ret = pintaFondo(uv, pink ,darkpurple, vec2(sin(iTime)*atan(iTime)*0.2+0.7,cos(iTime)*0.2+0.7));\n    //ret = mix(ret , pintaFondo(uv,bg,purple, vec2(-0.7,-0.7)),smoothstep(0.4,1.0,sqrt(length(vec2(0.7,0.7)-vec2(-0.7,-0.7)))));\n    \n    \n    \n    //Corazoncitos\n    float velocidadlatido = 3.; //Con esto se controla la velocidad del latido\n    float velocidadlatido2 = 5.;\n    \n    float time = smoothstep(0.5,1.,1.5*sin(iTime*velocidadlatido));\n    float minitime = smoothstep(0.5,1.,1.5*sin(iTime*velocidadlatido2));\n    \n    \n    ret = pintaCorazon(uv, vec2(cos(iTime+3.14),sin(iTime+3.14)),white,pink,purple,ret,clamp(0.1,0.4,minitime),0.3,vec2(-0.2,-0.3),0.1,0.4);\n    \n    ret = pintaCorazon(uv, vec2(0.0,0.2),white,red,red2,ret,time,0.3,vec2(-0.3,-0.4),0.5,0.65);\n    \n    ret = pintaCorazon(uv, vec2(1.2*cos(iTime),1.1*sin(iTime)),white,pink,purple,ret,clamp(0.1,0.4,minitime),0.3,vec2(-0.2,-0.3),0.1,0.4);\n\n    \n\tfragColor = ret;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}