{
    "Shader": {
        "info": {
            "date": "1715490904",
            "description": "copypast and combination ",
            "flags": 0,
            "hasliked": 0,
            "id": "lfVXRV",
            "likes": 2,
            "name": "simple audio viz",
            "published": 3,
            "tags": [
                "noise",
                "fbm",
                "hash"
            ],
            "usePreview": 0,
            "username": "orblivius",
            "viewed": 123
        },
        "renderpass": [
            {
                "code": "// orblivius: based on nayk's amazing works\n\n/*originals on glslandbox*/\n#define time iTime\n#define resolution iResolution.xy\n\n#define iBeatDet 0.5\n#define iBeatAvg 0.5\n\nconst float count = 50.1;\nfloat speed = 0.2 + 0.5 * iBeatDet*iBeatAvg;\nvec3 aces(vec3 x) {\n\nreturn clamp((x * (2.51 * x + 0.03)) / (x * (2.43 * x + 0.59) + 0.14),0.0, 1.0);\n}\nvec3 hueShift(vec3 col, float shift){\nvec3 m = vec3(cos(shift), -sin(shift) * .57735, 0);\nm = vec3(m.xy, -m.y) + (1. - m.x) * .33333;\nreturn mat3(m, m.zxy, m.yzx) * col;\n}\n\nfloat Hash( vec2 p, in float s)\n{\n    vec3 p2 = vec3(p.xy,27.0 * abs(sin(s)));\n    return fract(sin(dot(p2,vec3(27.1,61.7, 12.4)))*273758.5453123);\n    return fract(sin(dot(p2,vec3(27.1,61.7, 12.4)))*2.1);\n}\n\n\nfloat noise(in vec2 p, in float s)\n{\n    float ss = texture(iChannel0, vec2(p.x/10.,0.5)).x;\n    vec2 i =  floor(0.5 * ss *p);\n    vec2 f = fract(0.5 * ss * p);\n    f *= f * abs(2.-f);\n    \n   \n    return mix(mix(Hash(i + vec2(0.,0.), s), Hash(i + vec2(1.,0.), s),f.x),\n               mix(Hash(i + vec2(0.,1.), s), Hash(i + vec2(1.,1.), s),f.x),\n               f.y) * s;\n}\n\n\nfloat fbm(vec2 p)\n{\n    float v = 0.0;\n   \n    v += noise(p*1.,0.25);\n    v += noise(p*2., 0.55);\n    v += noise(p*4., 0.125);\n    v += noise(p*8., 0.0625);\n     \n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float mytime = time;\n    float worktime = mytime * speed;\n    vec2 myuv = vec2(0., 0.);\n    vec2 uv = (gl_FragCoord.xy / resolution.xy  ) * 2.0 - 1.0;\n      float t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length( myuv.xy) + .07)) * 2.2;\n\tfloat si = sin(t);\n\tfloat co = cos(t);\n\tmat2 ma = mat2(co, si, -si, co);\n     myuv*=ma;\n    \n    \n\n    vec3 finalColor = vec3( 0 );\n\n    for( float i=1.0; i < count; ++i )\n    {\n    uv*=ma;\n         float t = abs(1.0 / ((uv.y + fbm( uv + worktime/i)) * (i*54.)));\n\t finalColor +=  t * vec3( i * 0.05, 0.2, 0.8 );\n    }\n    \n   fragColor = vec4( aces(hueShift((finalColor),iTime*.2)), 1.0 );\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 35,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}