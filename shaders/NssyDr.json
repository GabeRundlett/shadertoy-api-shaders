{
    "Shader": {
        "info": {
            "date": "1642036609",
            "description": "I was trying to get the corners to snap together like magnetic toy blocks ",
            "flags": 32,
            "hasliked": 0,
            "id": "NssyDr",
            "likes": 24,
            "name": "Rigid Polygons",
            "published": 3,
            "tags": [
                "physics"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 470
        },
        "renderpass": [
            {
                "code": "Main\n    //if (I%8>0)discard;\n    Q = -.3+B(2.*U);\n    for (float i = 0.; i < N; i++) {\n        vec4 p = A(vec2(i,0)+.5);\n        vec4 v = A(vec2(i,1)+.5);\n        vec2 no = vec2(0);\n        float l = dNgon(U,p,no);\n        Q += exp(-l*l);\n        if (l < 0.) Q = vec4(.6+.4*no.x/l)*(1.-.5*sin(1.+.05*i+vec4(1,2,3,4)));\n        for (float j = 0.; j < p.w; j++){\n            vec2 u = p.xy+W/(2.*sin(pi/p.w))*an(p.z+2.*pi*j/p.w);\n            Q += (1.-.2*(U.x-u.x))*(mod(j,2.)*2.-1.)*exp(-.5*length(U-u));\n            \n        }\n     }\n    Q = 1.-Q;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 R; float T; int I; vec4 M;\n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel1,(U)/R)\n#define C(U) texture(iChannel2,(U)/R)\n#define D(U) texture(iChannel3,(U)/R)\n#define pi 3.14159265359\n\n#define Main void mainImage(out vec4 Q, in vec2 U) {R=iResolution.xy;T=iTime;I=iFrame;M=iMouse;\n#define ei(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define an(a) vec2(cos(a),sin(a))\n#define N 51.\n#define W (.06*R.x)\n#define dt .2\n#define G 2e-2\n#define F -ca*cb*ab/l*( 2.-l )/(1.+.5*l*l)\n#define L .999\nvec2 vel (vec2 r, vec4 v) {\n    if (length(r)>0.) r = vec2(-r.y,r.x);\n    return v.xy + r*v.z;\n}\n\nfloat sg (vec2 p, vec2 a, vec2 b) {\n    return \n    sign(dot(p-a,vec2(a.y-b.y,b.x-a.x)))*\n    length(p-a-(b-a)*\n    clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.))+4.;\n}\n\nfloat Ngon (vec2 p, vec4 g) {\n    float d = 1e9;\n    float r = W/(2.*sin(pi/g.w));\n    for (float i = 0.; i < g.w; i++) {\n        vec2 a = g.xy + r*an(g.z+2.*pi*i/g.w);\n        vec2 b = g.xy + r*an(g.z+2.*pi*(i+1.)/g.w);\n        d = min(d,sg(p,a,b));\n    }\n    return -d;\n}\n\nfloat dNgon (vec2 p, vec4 g, inout vec2 no) {\n    float d = 1e9;\n    float r = W/(2.*sin(pi/g.w));\n    for (float i = 0.; i < g.w; i++) {\n        vec2 a = g.xy + r*an(g.z+2.*pi*i/g.w);\n        vec2 b = g.xy + r*an(g.z+2.*pi*(i+1.)/g.w);\n        float s = sg(p,a,b);\n        if (s < d)\n            d = s, no = .4*s*normalize(vec2(a.y-b.y,b.x-a.x));\n    }\n    return -d;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "Main\n\n    if (U.y>2.) discard;\n    float x = floor(U.x);\n    float y = floor(U.y);\n    vec4 p = A(vec2(x,0)+.5);\n    vec4 v = A(vec2(x,1)+.5);\n    vec4 f = vec4(0);\n    float h = 0.;\n    float r1 = W/(2.*sin(pi/p.w));\n    for (float i = 0.; i < N; i++) if (i!=x)\n    {\n        vec4 P = A(vec2(i,0)+.5);\n        vec4 V = A(vec2(i,1)+.5);\n        vec2 no = vec2(0);\n        float r2 = W/(2.*sin(pi/P.w));\n        if (p.y<R.y&&P.y<R.y)\n        \n        if (length(p.xy-P.xy)>4.*(r2+r1)) continue;\n        // Snap together force :\n        for (float j = 0.; j < p.w; j++) {\n            float ca = mod(j+x,2.)*2.-1.;\n            vec2 a = p.xy+r1*an(p.z+2.*pi*j/p.w);\n            for (float k = 0.; k < P.w; k++) {\n                float cb = mod(k+i,2.)*2.-1.;\n                vec2 b = P.xy+r2*an(P.z+2.*pi*k/P.w);\n                vec2 r = p.xy-a;\n                vec2 ab = b-a;\n                float l = length(ab);\n                vec2 im = F;\n                f.z -= dot(r,vec2(-im.y,im.x))/(p.w*W*W);\n                f.xy += im*abs(dot(normalize(r),normalize(im)));\n            }\n        }\n        if (length(p.xy-P.xy)>1.*(r2+r1)) continue;\n        if (Ngon(p.xy,P)<0.) continue;\n        // My point in them :\n        for (float j = 0.; j < p.w; j++) {\n            vec2 u = p.xy+r1*an(p.z+2.*pi*j/p.w);\n            float m = dNgon(u,P,no);\n            if (m < 0.) {\n                vec2 r = u-p.xy;\n                vec2 dv = vel(r,V)-vel(r,v);\n                float l = length(r);\n                vec2 im = -2.*no/dt+dv;\n                f.z -= dot(r,vec2(-im.y,im.x))/(p.w*W*W);\n                f.xy += im*abs(dot(normalize(r),normalize(im)));\n                f.xy += .5*(V-v).xy*smoothstep(2.,1.,length(im));\n                h += 1.;\n            }\n        }\n        \n        // Their piont in me :\n        for (float j = 0.; j < P.w; j++) {\n            vec2 u = P.xy+r2*an(P.z+2.*pi*j/P.w);\n            float m = dNgon(u,p,no);\n            if (m < 0.) {\n                vec2 r = u-p.xy;\n                vec2 dv = vel(r,V)-vel(r,v);\n                float l = length(r);\n                vec2 im = 2.*no/dt+dv;\n                f.z -= dot(r,vec2(-im.y,im.x))/(W*W);\n                f.xy += im*abs(dot(normalize(r),normalize(im)));\n                f.xy += .5*(V-v).xy*smoothstep(2.,1.,length(im));\n                h += 1.;\n            }\n        }\n    }\n    // Walls \n    for (float j = 0.; j < p.w; j++) {\n        vec2 u = p.xy+r1*an(p.z+2.*pi*j/p.w);\n        vec2 r = u-p.xy;\n        vec2 im = vec2(0);\n        if (u.x<0.)im.x=1./dt;\n        if (u.y<0.)im.y=1./dt;\n        if (u.x>R.x)im.x=-1./dt;\n        //if(T>100.) if (u.y>R.y)im.y=-1./dt;\n        if (length(im)>0.) {\n            f.z -= dot(r,vec2(-im.y,im.x))/(W*W);\n            f.xy += im*abs(dot(normalize(r),normalize(im)));\n            f.xy *= .9;\n            h += 1.;\n        }\n    }\n    if (h>0.) f/=h;\n    f.y -= G;\n    v += dt*f;\n    p += dt*(f+v);\n    v *= L;\n    if (M.z>0.) v.xy += 3e-3*(p.xy-M.xy)*exp(-.01*length(p.xy-M.xy));\n    if (I<1) {\n        p = vec4(.5*R.x,2.*W*(1.+x),0,max(mod(x,8.),3.));\n        v = vec4(0,0,.01,0);\n    }\n    \n    \n    if (y==0.) Q = p;\n    if (y==1.) Q = v;\n    \n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main\n\n    if (U.y>2.) discard;\n    float x = floor(U.x);\n    float y = floor(U.y);\n    vec4 p = A(vec2(x,0)+.5);\n    vec4 v = A(vec2(x,1)+.5);\n    vec4 f = vec4(0);\n    float h = 0.;\n    float r1 = W/(2.*sin(pi/p.w));\n    for (float i = 0.; i < N; i++) if (i!=x)\n    {\n        vec4 P = A(vec2(i,0)+.5);\n        vec4 V = A(vec2(i,1)+.5);\n        vec2 no = vec2(0);\n        float r2 = W/(2.*sin(pi/P.w));\n        if (p.y<R.y&&P.y<R.y)\n        \n        if (length(p.xy-P.xy)>4.*(r2+r1)) continue;\n        // Snap together force :\n        for (float j = 0.; j < p.w; j++) {\n            float ca = mod(j+x,2.)*2.-1.;\n            vec2 a = p.xy+r1*an(p.z+2.*pi*j/p.w);\n            for (float k = 0.; k < P.w; k++) {\n                float cb = mod(k+i,2.)*2.-1.;\n                vec2 b = P.xy+r2*an(P.z+2.*pi*k/P.w);\n                vec2 r = p.xy-a;\n                vec2 ab = b-a;\n                float l = length(ab);\n                vec2 im = F;\n                f.z -= dot(r,vec2(-im.y,im.x))/(p.w*W*W);\n                f.xy += im*abs(dot(normalize(r),normalize(im)));\n            }\n        }\n        if (length(p.xy-P.xy)>1.*(r2+r1)) continue;\n        if (Ngon(p.xy,P)<0.) continue;\n        // My point in them :\n        for (float j = 0.; j < p.w; j++) {\n            vec2 u = p.xy+r1*an(p.z+2.*pi*j/p.w);\n            float m = dNgon(u,P,no);\n            if (m < 0.) {\n                vec2 r = u-p.xy;\n                vec2 dv = vel(r,V)-vel(r,v);\n                float l = length(r);\n                vec2 im = -2.*no/dt+dv;\n                f.z -= dot(r,vec2(-im.y,im.x))/(p.w*W*W);\n                f.xy += im*abs(dot(normalize(r),normalize(im)));\n                f.xy += .5*(V-v).xy*smoothstep(2.,1.,length(im));\n                h += 1.;\n            }\n        }\n        \n        // Their piont in me :\n        for (float j = 0.; j < P.w; j++) {\n            vec2 u = P.xy+r2*an(P.z+2.*pi*j/P.w);\n            float m = dNgon(u,p,no);\n            if (m < 0.) {\n                vec2 r = u-p.xy;\n                vec2 dv = vel(r,V)-vel(r,v);\n                float l = length(r);\n                vec2 im = 2.*no/dt+dv;\n                f.z -= dot(r,vec2(-im.y,im.x))/(W*W);\n                f.xy += im*abs(dot(normalize(r),normalize(im)));\n                f.xy += .5*(V-v).xy*smoothstep(2.,1.,length(im));\n                h += 1.;\n            }\n        }\n    }\n    // Walls \n    for (float j = 0.; j < p.w; j++) {\n        vec2 u = p.xy+r1*an(p.z+2.*pi*j/p.w);\n        vec2 r = u-p.xy;\n        vec2 im = vec2(0);\n        if (u.x<0.)im.x=1./dt;\n        if (u.y<0.)im.y=1./dt;\n        if (u.x>R.x)im.x=-1./dt;\n        //if(T>100.) if (u.y>R.y)im.y=-1./dt;\n        if (length(im)>0.) {\n            f.z -= dot(r,vec2(-im.y,im.x))/(W*W);\n            f.xy += im*abs(dot(normalize(r),normalize(im)));\n            f.xy *= .9;\n            h += 1.;\n        }\n    }\n    if (h>0.) f/=h;\n    f.y -= G;\n    v += dt*f;\n    p += dt*(f+v);\n    v *= L;\n    if (M.z>0.) v.xy += 3e-3*(p.xy-M.xy)*exp(-.01*length(p.xy-M.xy));\n    if (I<1) {\n        p = vec4(.5*R.x,2.*W*(1.+x),0,max(mod(x,8.),3.));\n        v = vec4(0,0,.01,0);\n    }\n    \n    \n    if (y==0.) Q = p;\n    if (y==1.) Q = v;\n    \n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main\n\n    if (U.y>2.) discard;\n    float x = floor(U.x);\n    float y = floor(U.y);\n    vec4 p = A(vec2(x,0)+.5);\n    vec4 v = A(vec2(x,1)+.5);\n    vec4 f = vec4(0);\n    float h = 0.;\n    float r1 = W/(2.*sin(pi/p.w));\n    for (float i = 0.; i < N; i++) if (i!=x)\n    {\n        vec4 P = A(vec2(i,0)+.5);\n        vec4 V = A(vec2(i,1)+.5);\n        vec2 no = vec2(0);\n        float r2 = W/(2.*sin(pi/P.w));\n        if (p.y<R.y&&P.y<R.y)\n        \n        if (length(p.xy-P.xy)>4.*(r2+r1)) continue;\n        // Snap together force :\n        for (float j = 0.; j < p.w; j++) {\n            float ca = mod(j+x,2.)*2.-1.;\n            vec2 a = p.xy+r1*an(p.z+2.*pi*j/p.w);\n            for (float k = 0.; k < P.w; k++) {\n                float cb = mod(k+i,2.)*2.-1.;\n                vec2 b = P.xy+r2*an(P.z+2.*pi*k/P.w);\n                vec2 r = p.xy-a;\n                vec2 ab = b-a;\n                float l = length(ab);\n                vec2 im = F;\n                f.z -= dot(r,vec2(-im.y,im.x))/(p.w*W*W);\n                f.xy += im*abs(dot(normalize(r),normalize(im)));\n            }\n        }\n        if (length(p.xy-P.xy)>1.*(r2+r1)) continue;\n        if (Ngon(p.xy,P)<0.) continue;\n        // My point in them :\n        for (float j = 0.; j < p.w; j++) {\n            vec2 u = p.xy+r1*an(p.z+2.*pi*j/p.w);\n            float m = dNgon(u,P,no);\n            if (m < 0.) {\n                vec2 r = u-p.xy;\n                vec2 dv = vel(r,V)-vel(r,v);\n                float l = length(r);\n                vec2 im = -2.*no/dt+dv;\n                f.z -= dot(r,vec2(-im.y,im.x))/(p.w*W*W);\n                f.xy += im*abs(dot(normalize(r),normalize(im)));\n                f.xy += .5*(V-v).xy*smoothstep(2.,1.,length(im));\n                h += 1.;\n            }\n        }\n        \n        // Their piont in me :\n        for (float j = 0.; j < P.w; j++) {\n            vec2 u = P.xy+r2*an(P.z+2.*pi*j/P.w);\n            float m = dNgon(u,p,no);\n            if (m < 0.) {\n                vec2 r = u-p.xy;\n                vec2 dv = vel(r,V)-vel(r,v);\n                float l = length(r);\n                vec2 im = 2.*no/dt+dv;\n                f.z -= dot(r,vec2(-im.y,im.x))/(W*W);\n                f.xy += im*abs(dot(normalize(r),normalize(im)));\n                f.xy += .5*(V-v).xy*smoothstep(2.,1.,length(im));\n                h += 1.;\n            }\n        }\n    }\n    // Walls \n    for (float j = 0.; j < p.w; j++) {\n        vec2 u = p.xy+r1*an(p.z+2.*pi*j/p.w);\n        vec2 r = u-p.xy;\n        vec2 im = vec2(0);\n        if (u.x<0.)im.x=1./dt;\n        if (u.y<0.)im.y=1./dt;\n        if (u.x>R.x)im.x=-1./dt;\n        //if(T>100.) if (u.y>R.y)im.y=-1./dt;\n        if (length(im)>0.) {\n            f.z -= dot(r,vec2(-im.y,im.x))/(W*W);\n            f.xy += im*abs(dot(normalize(r),normalize(im)));\n            f.xy *= .9;\n            h += 1.;\n        }\n    }\n    if (h>0.) f/=h;\n    f.y -= G;\n    v += dt*f;\n    p += dt*(f+v);\n    v *= L;\n    if (M.z>0.) v.xy += 3e-3*(p.xy-M.xy)*exp(-.01*length(p.xy-M.xy));\n    if (I<1) {\n        p = vec4(.5*R.x,2.*W*(1.+x),0,max(mod(x,8.),3.));\n        v = vec4(0,0,.01,0);\n    }\n    \n    \n    if (y==0.) Q = p;\n    if (y==1.) Q = v;\n    \n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main\n\n    if (U.y>2.) discard;\n    float x = floor(U.x);\n    float y = floor(U.y);\n    vec4 p = A(vec2(x,0)+.5);\n    vec4 v = A(vec2(x,1)+.5);\n    vec4 f = vec4(0);\n    float h = 0.;\n    float r1 = W/(2.*sin(pi/p.w));\n    for (float i = 0.; i < N; i++) if (i!=x)\n    {\n        vec4 P = A(vec2(i,0)+.5);\n        vec4 V = A(vec2(i,1)+.5);\n        vec2 no = vec2(0);\n        float r2 = W/(2.*sin(pi/P.w));\n        if (p.y<R.y&&P.y<R.y)\n        \n        if (length(p.xy-P.xy)>4.*(r2+r1)) continue;\n        // Snap together force :\n        for (float j = 0.; j < p.w; j++) {\n            float ca = mod(j+x,2.)*2.-1.;\n            vec2 a = p.xy+r1*an(p.z+2.*pi*j/p.w);\n            for (float k = 0.; k < P.w; k++) {\n                float cb = mod(k+i,2.)*2.-1.;\n                vec2 b = P.xy+r2*an(P.z+2.*pi*k/P.w);\n                vec2 r = p.xy-a;\n                vec2 ab = b-a;\n                float l = length(ab);\n                vec2 im = F;\n                f.z -= dot(r,vec2(-im.y,im.x))/(p.w*W*W);\n                f.xy += im*abs(dot(normalize(r),normalize(im)));\n            }\n        }\n        if (length(p.xy-P.xy)>1.*(r2+r1)) continue;\n        if (Ngon(p.xy,P)<0.) continue;\n        // My point in them :\n        for (float j = 0.; j < p.w; j++) {\n            vec2 u = p.xy+r1*an(p.z+2.*pi*j/p.w);\n            float m = dNgon(u,P,no);\n            if (m < 0.) {\n                vec2 r = u-p.xy;\n                vec2 dv = vel(r,V)-vel(r,v);\n                float l = length(r);\n                vec2 im = -2.*no/dt+dv;\n                f.z -= dot(r,vec2(-im.y,im.x))/(p.w*W*W);\n                f.xy += im*abs(dot(normalize(r),normalize(im)));\n                f.xy += .5*(V-v).xy*smoothstep(2.,1.,length(im));\n                h += 1.;\n            }\n        }\n        \n        // Their piont in me :\n        for (float j = 0.; j < P.w; j++) {\n            vec2 u = P.xy+r2*an(P.z+2.*pi*j/P.w);\n            float m = dNgon(u,p,no);\n            if (m < 0.) {\n                vec2 r = u-p.xy;\n                vec2 dv = vel(r,V)-vel(r,v);\n                float l = length(r);\n                vec2 im = 2.*no/dt+dv;\n                f.z -= dot(r,vec2(-im.y,im.x))/(W*W);\n                f.xy += im*abs(dot(normalize(r),normalize(im)));\n                f.xy += .5*(V-v).xy*smoothstep(2.,1.,length(im));\n                h += 1.;\n            }\n        }\n    }\n    // Walls \n    for (float j = 0.; j < p.w; j++) {\n        vec2 u = p.xy+r1*an(p.z+2.*pi*j/p.w);\n        vec2 r = u-p.xy;\n        vec2 im = vec2(0);\n        if (u.x<0.)im.x=1./dt;\n        if (u.y<0.)im.y=1./dt;\n        if (u.x>R.x)im.x=-1./dt;\n        //if(T>100.) if (u.y>R.y)im.y=-1./dt;\n        if (length(im)>0.) {\n            f.z -= dot(r,vec2(-im.y,im.x))/(W*W);\n            f.xy += im*abs(dot(normalize(r),normalize(im)));\n            f.xy *= .9;\n            h += 1.;\n        }\n    }\n    if (h>0.) f/=h;\n    f.y -= G;\n    v += dt*f;\n    p += dt*(f+v);\n    v *= L;\n    if (M.z>0.) v.xy += 3e-3*(p.xy-M.xy)*exp(-.01*length(p.xy-M.xy));\n    if (I<1) {\n        p = vec4(.5*R.x,2.*W*(1.+x),0,max(mod(x,8.),3.));\n        v = vec4(0,0,.01,0);\n    }\n    \n    \n    if (y==0.) Q = p;\n    if (y==1.) Q = v;\n    \n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}