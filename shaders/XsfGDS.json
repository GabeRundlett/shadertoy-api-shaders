{
    "Shader": {
        "info": {
            "date": "1377750247",
            "description": "input/output",
            "flags": 0,
            "hasliked": 0,
            "id": "XsfGDS",
            "likes": 213,
            "name": "I/O",
            "published": 3,
            "tags": [
                "2d",
                "sound",
                "shapes"
            ],
            "usePreview": 0,
            "username": "movAX13h",
            "viewed": 26260
        },
        "renderpass": [
            {
                "code": "// I/O fragment shader by movAX13h, August 2013\n\n#define SHOW_BLOCKS\n\nfloat rand(float x)\n{\n    return fract(sin(x) * 4358.5453123);\n}\n\nfloat rand(vec2 co)\n{\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5357);\n}\n\nfloat box(vec2 p, vec2 b, float r)\n{\n  return length(max(abs(p)-b,0.0))-r;\n}\n\nfloat sampleMusic()\n{\n\treturn 0.5 * (\n\t\t//texture( iChannel0, vec2( 0.01, 0.25 ) ).x + \n\t\t//texture( iChannel0, vec2( 0.07, 0.25 ) ).x + \n\t\ttexture( iChannel0, vec2( 0.15, 0.25 ) ).x + \n\t\ttexture( iChannel0, vec2( 0.30, 0.25 ) ).x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tconst float speed = 0.7;\n\tconst float ySpread = 1.6;\n\tconst int numBlocks = 70;\n\n\tfloat pulse = sampleMusic();\n\t\n\tvec2 uv = fragCoord.xy / iResolution.xy - 0.5;\n\tfloat aspect = iResolution.x / iResolution.y;\n\tvec3 baseColor = uv.x > 0.0 ? vec3(0.0,0.3, 0.6) : vec3(0.6, 0.0, 0.3);\n\t\n\tvec3 color = pulse*baseColor*0.5*(0.9-cos(uv.x*8.0));\n\tuv.x *= aspect;\n\t\n\tfor (int i = 0; i < numBlocks; i++)\n\t{\n\t\tfloat z = 1.0-0.7*rand(float(i)*1.4333); // 0=far, 1=near\n\t\tfloat tickTime = iTime*z*speed + float(i)*1.23753;\n\t\tfloat tick = floor(tickTime);\n\t\t\n\t\tvec2 pos = vec2(0.6*aspect*(rand(tick)-0.5), sign(uv.x)*ySpread*(0.5-fract(tickTime)));\n\t\tpos.x += 0.24*sign(pos.x); // move aside\n\t\tif (abs(pos.x) < 0.1) pos.x++; // stupid fix; sign sometimes returns 0\n\t\t\n\t\tvec2 size = 1.8*z*vec2(0.04, 0.04 + 0.1*rand(tick+0.2));\n\t\tfloat b = box(uv-pos, size, 0.01);\n\t\tfloat dust = z*smoothstep(0.22, 0.0, b)*pulse*0.5;\n\t\t#ifdef SHOW_BLOCKS\n\t\tfloat block = 0.2*z*smoothstep(0.002, 0.0, b);\n\t\tfloat shine = 0.6*z*pulse*smoothstep(-0.002, b, 0.007);\n\t\tcolor += dust*baseColor + block*z + shine;\n\t\t#else\n\t\tcolor += dust*baseColor;\n\t\t#endif\n\t}\n\t\n\tcolor -= rand(uv)*0.04;\n\tfragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 21,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}