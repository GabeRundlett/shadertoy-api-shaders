{
    "Shader": {
        "info": {
            "date": "1591651248",
            "description": "Testing out the granularity...",
            "flags": 0,
            "hasliked": 0,
            "id": "wlXcRM",
            "likes": 5,
            "name": "Xor Roller 2",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "Chris_M_Thomasson",
            "viewed": 338
        },
        "renderpass": [
            {
                "code": "// Chris M. Thomasson's Stupid Simple Xor Roller. ;^)\n// version: pre-alpha 0.0.3\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) \n{ \n    vec2 uv = fragCoord.xy / iResolution.xy; \n\n    int x = int(fragCoord.x); \n    int y = int(fragCoord.y); \n\n    int xy_xor = (x + iFrame) ^ (y);\n    //float s = .01 + abs(sin(iTime * .01)) * (abs(cos(iTime * sin(iTime * .05) * .001) * .01));\n    \n    float s = 0.89 + abs(sin(iTime * .0001)) * .1;\n    \n    float cr = mod(float(xy_xor) * 1.1 * s, 1.0);\n    float cg = cr;\n    float cb = cr;\n\t//float cg = mod(float(xy_xor) * abs(sin(iTime * 0.01)) * 1.234 * s, 1.0);\n    //float cb = mod(float(xy_xor) * 2.253 * s, 1.0);\n    \n    float dis = .5 + abs(sin(iTime * .5)) * .3;\n    \n    if (cr < dis)\n    {\n     \tcg = (cr / dis) * .1;\n        cb = (cr / dis) * .2;\n        cr = 0.;\n    }\n    \n    fragColor = vec4(cr, cg, cb, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}