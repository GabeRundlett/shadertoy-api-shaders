{
    "Shader": {
        "info": {
            "date": "1607163730",
            "description": "Port from glsl. It's a bit broken for some reason, not looking as intended. Going to fix later",
            "flags": 0,
            "hasliked": 0,
            "id": "3dVBWD",
            "likes": 4,
            "name": "Day idk",
            "published": 3,
            "tags": [
                "mdtmjvm"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 295
        },
        "renderpass": [
            {
                "code": "\n\nfloat r11(float g){return fract(sin(g*3.223)*43.20);}\n\n// WRIGHTER HERE \n// I HAVE NO CLUE WHAT IM GONNA MAKE LOL\n\n#define rot(j) mat2(cos(j), sin(j), -sin(j),cos(j))\n#define pi acos(-1.)\n\nfloat sdLine(vec2 p, vec2 a, vec2 b){\n  vec2 dir = normalize(b - a);\n  float slope = atan(dir.y,dir.x);\n  vec2 op = p;\n  p -= a;\n  p = p*rot(slope);\n  float d = length(p.y);\n  \n  d = max(d, -p.x);\n  \n  d = max(d, p.x - length(b-a)*0.3 );\n  return d;\n  }\n#define xor(a,b,c) min(max(a,-b), max(-a + c,b))\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n\n    // Time varying pixel color\n  float T = iTime;\n  float tbetween = 6.;\n  float seg = floor(T/tbetween);\n  \n  vec3 col = vec3(0);\n  vec2 p = uv;\n  float d = 10e5;\n  float dir = floor(r11(seg)*8.)*pi/4.;\n  \n  \n  float id = seg;\n  \n  for (float chrab = 0.; chrab < 8. ; chrab ++){\n    \n    p = uv;\n    p += ( normalize(p)*.2*float(r11(id*241.512) < 0.5)+ chrab*0.04*sin(T))*1.7*length(p);\n    p *= rot(dir);\n    if (r11(id*1.2 + 0.5) < 0.5){\n      d = 10e5;\n    \n    }\n    //T = fGlobalTime;\n    for ( float i = 0.; i < 6. + r11(id)*10. ; i ++){\n      \n      T += (1.*r11(id) + 0.1);\n      float r = r11(id + i + 1.45463*i*id);\n      \n      \n      if (r < 0.05){\n        p *= rot((0.2 + T*0.0001*r11(id + 0.4) + (T)*0.4*r11(id + i))*pi);\n        //p = abs(p) - 0.5;\n      }\n      p -= (T - seg*tbetween)*0.01*(r11(id + i*0.04));\n        \n      for (float k = 0.; k < 7.*r11(id*42.231+i) + 4.; k++){\n        vec2 luv = p;\n        luv.y += r11(i*421.1*id);\n        \n        vec2 ap = p;\n        if (r11(id*1.4124) < 0.1){\n          ap *= rot(pi/2.);\n        }\n        d = xor(d,sdLine(ap,vec2(-0.4,0),vec2(0.4,0)) - .05*r11(id+i*0.042), 0.1*r11(id + i));\n        \n      }\n      if(r11(id*i + 0.4) < 0.4){\n        d = xor(d, abs(length(p) - r11(id + i)) - 3.6*r11(id*21.4 + i*float(r11(id)> 0.5)), .7*r11(id));\n      }\n      p.y -= r11(id*1.231)*0.1;\n      p.x -= r11(id*1.231 + i)*0.5*sign(r11(id + i*4.)*2. - 1.);\n    \n      if (r11(id) > 0.7){\n        d = xor(d,p.y,0.1);\n      }\n      \n      if (r11(id + 0.24) < 0.1){\n        d = xor(d,p.x,0.4);\n      }\n    \n      \n    }\n    \n    #define pal(a,b,c,d,e) ((a) + (b)*sin((c)*(d) + e))\n    float coco = smoothstep(0.004,0.,d);\n    \n    if(r11(id*6.02351) > 0.5){\n    \n    //col += pal(0.5,0.5);\n      col += coco*pal(0.5,0.5,vec3(4.7,1.4,1.4),1. + vec3(sin(T*0.24),cos(T*0.1),sin(T*0.5)),id + T*0.1 + chrab*0.1);\n    \n    } else {\n      col[int(mod(chrab,3.))] += coco;\n    }\n    \n  }\n  \n  if(r11(id*1.02351) > 0.5){\n    //col = 1- col;\n  } \n  \n  \n  \n  \n  col = pow(col,vec3(0.4545));\n\n   fragColor = vec4(col,1.0);\n\n}\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}