{
    "Shader": {
        "info": {
            "date": "1439923652",
            "description": "Box blur. Use the mouse to control blur.\nMore information at: http://blog.demofox.org/2015/08/18/box-blur/",
            "flags": 0,
            "hasliked": 0,
            "id": "MllSDj",
            "likes": 15,
            "name": "DF Box Blur",
            "published": 3,
            "tags": [
                "2d",
                "blur"
            ],
            "usePreview": 1,
            "username": "demofox",
            "viewed": 3051
        },
        "renderpass": [
            {
                "code": "/*\n\nFor more information check out my blog:\nhttp://blog.demofox.org/2015/08/18/box-blur/\n\n*/\n\nconst int   c_samplesX    = 15;  // must be odd\nconst int   c_samplesY    = 15;  // must be odd\nconst float c_textureSize = 512.0;\n\n\nconst float c_pixelSize = (1.0 / c_textureSize);\nconst int   c_halfSamplesX = c_samplesX / 2;\nconst int   c_halfSamplesY = c_samplesY / 2;\n\nvec3 BlurredPixel (in vec2 uv)\n{   \n    int c_distX = iMouse.z > 0.0\n        ? int(float(c_halfSamplesX+1) * iMouse.x / iResolution.x)\n        : int((sin(iTime*2.0)*0.5 + 0.5) * float(c_halfSamplesX+1));\n    \n\tint c_distY = iMouse.z > 0.0\n        ? int(float(c_halfSamplesY+1) * iMouse.y / iResolution.y)\n        : int((sin(iTime*2.0)*0.5 + 0.5) * float(c_halfSamplesY+1));\n    \n    float c_pixelWeight = 1.0 / float((c_distX*2+1)*(c_distY*2+1));\n    \n    vec3 ret = vec3(0);        \n    for (int iy = -c_halfSamplesY; iy <= c_halfSamplesY; ++iy)\n    {\n        for (int ix = -c_halfSamplesX; ix <= c_halfSamplesX; ++ix)\n        {\n            if (abs(float(iy)) <= float(c_distY) && abs(float(ix)) <= float(c_distX))\n            {\n                vec2 offset = vec2(ix, iy) * c_pixelSize;\n            \tret += texture(iChannel0, uv + offset).rgb * c_pixelWeight;\n            }\n        }\n    }\n    return ret;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * vec2(1,-1);\n\tfragColor = vec4(BlurredPixel(uv), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}