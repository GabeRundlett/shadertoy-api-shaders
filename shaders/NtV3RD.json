{
    "Shader": {
        "info": {
            "date": "1640980413",
            "description": "Happy New 2022 Year!",
            "flags": 32,
            "hasliked": 0,
            "id": "NtV3RD",
            "likes": 5,
            "name": "Happy New 2022 Year",
            "published": 3,
            "tags": [
                "happynewyear"
            ],
            "usePreview": 0,
            "username": "yurka",
            "viewed": 305
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 data = texelFetch(iChannel0,ivec2(fragCoord),0);\n    fragColor = data;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/(iResolution.y / 2.0);\n    vec3 col = vec3(0.0, 0.0, 0.0);    \n    for (int i = 0; i < min(int(iResolution.y), 300); i++) {\n        vec4 V_o = texelFetch(iChannel1, ivec2(0, i), 0);\n        vec4 V_c = texelFetch(iChannel1, ivec2(1, i), 0);\n\n        vec2 obj = V_o.xy;\n\n        float dist = len2(uv - obj);\n\n        float glow = 0.0;\n        dist *= 40000.0;\n        if (dist < 1e-3)\n            glow = 1000.0;\n        else\n            glow += 1.0/dist;\n        col = col + V_c.xyz * glow;\n    }\n    vec4 data = texelFetch(iChannel0,ivec2(fragCoord),0);\n    fragColor = 0.9*data + vec4(col, 1.0);\n    //fragColor = V_c;\n    if (fragCoord.x < 0.1 || fragCoord.y < 0.1) {\n           fragColor = vec4(1.0, 0.0, 0.0, 0.0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec2 o = vec2(0, 0);\nvec2 v = vec2(0.009, 0.003);\n\nfloat len2(vec2 v)\n{\n    return v.x*v.x + v.y*v.y;\n}\n\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat random (in float _st) {\n    return fract(sin(dot(vec2(_st, 0.0),\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 V_o = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    \n    vec2 obj = V_o.xy;\n    vec2 vel = V_o.zw;\n    \n    if (fragCoord.x < 0.501) {\n        if (iTime < 0.1) {\n            float fact = 0.01;\n            //fragColor = vec4(random(vec2(1, fragCoord.y))*2.0 - 1.0, random(vec2(2, fragCoord.y))*2.0 - 1.0, fact*(random(vec2(3, fragCoord.y)) - 0.5), fact*(random(vec2(4, fragCoord.y)) - 0.5));\n            float ang = random(vec2(5, fragCoord.y)) * 3.141592653 * 2.0;\n            float mag = sqrt(random(vec2(7, fragCoord.y)));\n            fragColor = vec4(0.0, 0.0, fact*(sin(ang) * mag), fact*(cos(ang) * mag));\n        }  else {\n            obj = obj + vel;\n\n            if (obj.y > 1.0) {\n                obj.y = 1.0;\n                vel = reflect(vel, vec2(0.0, -1.0));\n            }\n            if (obj.x > iResolution.x * 1.0/iResolution.y) {\n                obj.x = iResolution.x * 1.0/iResolution.y;\n                vel = reflect(vel, vec2(-1.0, 0));\n            }\n            if (obj.y < -1.0) {\n                obj.y = -1.0;\n                vel = reflect(vel, vec2(0.0, 1.0));\n            }\n            if (obj.x < -iResolution.x * 1.0/iResolution.y) {\n                obj.x = -iResolution.x * 1.0/iResolution.y;\n                vel = reflect(vel, vec2(1.0, 0));\n            }\n            fragColor = vec4(obj.x, obj.y, vel.x, vel.y);\n        }\n    }\n     else \n        if (fragCoord.x < 1.501) {\n            float fact = 1.00;\n            fragColor = vec4(fact*random(vec2(1, fragCoord.y)), fact*random(vec2(2, fragCoord.y)), fact*random(vec2(3, fragCoord.y)), fact*random(vec2(4, fragCoord.y)));\n        }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}