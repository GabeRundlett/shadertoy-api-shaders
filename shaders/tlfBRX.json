{
    "Shader": {
        "info": {
            "date": "1597276135",
            "description": "Simple shader with some kind of fractal noise simulating a fluid-like motion. Also, I love flat colors.\nMouse x coordinate controls the speed of the motion. Mouse y coordinate controls the \"crispness\" of the wave.",
            "flags": 0,
            "hasliked": 0,
            "id": "tlfBRX",
            "likes": 3,
            "name": "Fluid Pastel",
            "published": 3,
            "tags": [
                "fractal",
                "noise",
                "beginner",
                "fluid",
                "pastel"
            ],
            "usePreview": 0,
            "username": "rikmazz",
            "viewed": 450
        },
        "renderpass": [
            {
                "code": "float plot(in vec2 _st, in float _blur, in float _f) {\n    float pct = step(-1.552, _st.y) - smoothstep(_f, _f+_blur/2., _st.y);\n    return pct;\n}\n\nfloat rand(in float _x) {\n    return fract(10000.*sin(_x));\n}\n\nfloat rand_step(in float _x) {\n    return rand(floor(_x));\n}\n\nfloat rand_interp_lin(in float _x) {\n    return mix(rand_step(_x-1.), rand_step(_x), fract(_x));\n}\n\nfloat noise(in float _x) {\n    return mix(rand_step(_x-1.), rand_step(_x), smoothstep(0.,1.,fract(_x)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float blur = 0.01;\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n\t\n    //rescale space coordinates\n    st.x = (st.x-0.812)*4.;\n    st.y *= 2.;\n    st.y -= 0.460;\n    \n    float timemul = iMouse.x/iResolution.x;\n    \n    float speed = 0.851*timemul;\n    float speed2 = 0.362*timemul;\n    float speed3 = 1.460*timemul;\n    float f = noise((st.x+iTime*speed));\n    float f2 = 0.5*noise(st.x/0.5);\n    float f3 = 0.25*noise((st.x+iTime*speed2)/0.25);\n    float f4 = 0.125*noise((st.x+iTime*speed3)/0.125);\n    vec3 color =vec3(255, 94, 87)/255.;\n    \n    vec3 bg_color = vec3(15, 188, 249)/255.;\n    float my = iMouse.y/iResolution.y;\n    float pct = plot(st, blur, (1.*f+(my+0.1)*f2+(my)*f3+(my)*f4)/(1.680)) ;\n\n    fragColor = pct*vec4(color,1.0) + (1.-pct)*vec4(bg_color,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}