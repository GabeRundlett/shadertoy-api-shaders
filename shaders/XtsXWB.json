{
    "Shader": {
        "info": {
            "date": "1439407873",
            "description": "THis is a test for background scroll based on https://www.shadertoy.com/view/ltB3Dc",
            "flags": 0,
            "hasliked": 0,
            "id": "XtsXWB",
            "likes": 1,
            "name": "Background Vertical Scroller",
            "published": 3,
            "tags": [
                "background",
                "scroll"
            ],
            "usePreview": 0,
            "username": "MrBodean",
            "viewed": 1450
        },
        "renderpass": [
            {
                "code": "const float pixelSize  =    1.00; // base pixelization \t\t\t   <- set this to desired pixel size\nconst float zoom       =   1.00; // zoom range\nconst float radius     = 3600.00; // planar movement radius\nconst float speed      =    0.05; // zoom / move speed\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfloat time   = iTime * speed;\nfloat scale  = pixelSize + ((sin(time / 3.7) + 1.0) / 2.0) * (zoom - 1.0) * pixelSize;\n\nvec2  center = iResolution.xy / 1.0;\nvec2  offset = vec2(0, sin(time)) * radius;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\nvoid mainImage( out vec4 color, in vec2 pixel )\n{\n    // add some movement:\n    pixel = ((pixel + offset) - center) / scale + center;\n\n    // basic sampling:\n    vec2 uv = floor(pixel) + 0.5;\n    \n    // subpixel filtering algorithm (comment out to compare):\n    uv += 1.0 - clamp((1.0 - fract(pixel)) * scale, 0.0, 1.0);\n\n   \tcolor = texture(iChannel0, uv  / iChannelResolution[0].xy);\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// alternative version with split-screen side-by-side comparison vs regular discrete-pixel rendering:\n// https://www.shadertoy.com/view/ltB3Dc\n\n\n\n\n\n\n\n\n\n\n\n\n//     try\n//    other\n//   bitmaps\n//     _|_\n//     \\ /\n//      V                      note: this technique doesn't work with bitmaps that use point sampling (nyan cat, 8x8 checkerboard)",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}