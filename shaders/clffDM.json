{
    "Shader": {
        "info": {
            "date": "1692983349",
            "description": "A radar sweep. can be customized a bit.",
            "flags": 0,
            "hasliked": 0,
            "id": "clffDM",
            "likes": 1,
            "name": "Radar Sweeper",
            "published": 3,
            "tags": [
                "radar",
                "circular",
                "sweep",
                "military",
                "battleship"
            ],
            "usePreview": 0,
            "username": "Falafel",
            "viewed": 192
        },
        "renderpass": [
            {
                "code": "\n//https://iquilezles.org/articles/palettes/\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 finalColor = vec3(0.0);\n    \n    // Speed of sweeps. The inner sweep will probably look shit if you don't adjust the values below\n    float innerSweepSpeed = 4.;\n    float outerSweepSpeed = .62;\n   \n    // Background sweep\n    finalColor.y = palette(uv.x * 0.1 - iTime * outerSweepSpeed + .25).y * 0.2;\n    \n    if (length(uv) <= 1.1) {\n       \n        // Outer circle\n        if (length(uv) >= 1.04) {\n            finalColor.y += palette(length(uv) * 15. + .53).y;\n        }\n        \n        if (length(uv) <= 1.06) {\n            // Vertical line\n            if (uv.x < .015 && uv.x > -.015) {\n            finalColor.y += palette(uv.x * 30. + .6).y * .8;\n            }\n            // Horizonal line\n            if (uv.y < .015 && uv.y > -.015) {\n                finalColor.y += palette(uv.y * 30. + .6).y * .8;\n            }\n            // Smaller inside circles\n            float temp = palette(length(uv) * 4.5 + .53).y;\n            finalColor.y += .2 + pow(temp, 100.) * .6;\n            \n            // Circular sweep. Don't recommend trying to change this, it's a pain.\n            vec2 d = vec2(sin(innerSweepSpeed * iTime), cos(innerSweepSpeed * iTime)) * length(uv);\n            vec2 d2 = vec2(sin(innerSweepSpeed * (iTime - 0.4)), cos(innerSweepSpeed * (iTime - 0.4))) * length(uv);\n            float val = length(d - uv) / length(uv);\n            float val2 = length(d2 - uv) / length(uv);\n            if (1./val > .45 && val2 > 1.8) {\n                finalColor.y += palette(log(val * 0.4 + 0.83)).y;\n            }\n        }\n    }\n    fragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}