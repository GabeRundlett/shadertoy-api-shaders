{
    "Shader": {
        "info": {
            "date": "1588323174",
            "description": "Propeller Airplane",
            "flags": 0,
            "hasliked": 0,
            "id": "3sXBW7",
            "likes": 1,
            "name": "Shader8_Dela Vega",
            "published": 3,
            "tags": [
                "midterms"
            ],
            "usePreview": 0,
            "username": "zerotojiro",
            "viewed": 297
        },
        "renderpass": [
            {
                "code": "float circle(vec2 uv, float radius, float blur,  vec2 pos)\n{\n     \n    float d = distance(pos,uv);\n    float value = smoothstep(radius, radius + blur, d);\n    \n    return value; \n}\n\nfloat rect (vec2 uv, vec2 pos, vec2 size)\n{\n\tfloat value = step(pos.x - size.x/2.,uv.x) - step(pos.x + size.x/2.,uv.x);\n    return value *= step(pos.y - size.y/2.,uv.y) - step(pos.y + size.y/2.,uv.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tfloat ratio = iResolution.x/iResolution.y;\n    uv.x *= ratio;\n    \n    vec2 shapePos = vec2(.5 * ratio, .5);\n    vec2 wingPos = vec2(.5 * ratio, .4);\n\tvec2 windowPos = vec2(.5 * ratio, .6);\n    vec2 finPos = vec2(.5 * ratio, .7 );\n    \n    float dist = distance(shapePos, uv) * 2.0;\n    \n    vec2 uv1 = uv;\n    uv1 -= shapePos;\n    \n    float angle = atan(uv1.y, uv1.x) + iTime;\n    \n    float back = circle(uv, .23, 0., shapePos);\n    float cap  = circle(uv, .06, 0., shapePos);\n    float window = circle(uv, .18, 0., windowPos);\n    \n    float wings = rect(uv, wingPos, vec2(1.3, .15));\n    float fin = rect(uv, finPos, vec2(.07, .3));\n\n    float radius = sin((angle+iTime*10.)*4.);\n\n    radius *= .6;\n    \n    float value = 1.-smoothstep(radius, radius +.1, dist);\n    \n    vec3 color;\n    color = mix(vec3(.5058, .7686, .9411), vec3(.5215, .0705, .0705),fin);\n    color = mix(vec3(.6509, .9686, .9686), color,  window);\n    color = mix(vec3(.5215, .0705, .0705), color, back);\n    color = mix(color, vec3(.5215, .0705, .0705), wings);\n    color = mix(color, vec3(.2), value);\n    color = mix(vec3(.9), color, cap);\n    \n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}