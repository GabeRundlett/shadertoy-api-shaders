{
    "Shader": {
        "info": {
            "date": "1595886081",
            "description": "Rainbow with a tan overlay that reminds me of scales",
            "flags": 0,
            "hasliked": 0,
            "id": "wlsfzn",
            "likes": 4,
            "name": "Rainbow Scales",
            "published": 3,
            "tags": [
                "rainbow"
            ],
            "usePreview": 0,
            "username": "t420babe",
            "viewed": 266
        },
        "renderpass": [
            {
                "code": "\n#ifdef GL_ES\nprecision highp float;\n#endif\n\n\n\nvec3 rainbow_scales(vec2 pos) {\n\n  float speed = 0.5;\n  float zoom = 4.0;\n  pos *= zoom;\n    \n  // vec2 movement = u_mouse;\n  float mod_time = mod(iTime, 400.0);\n  vec2 movement = vec2(mod_time * 4.0, 500.0);\n\n  for (int i = 1; i < 5; i++) {\n    pos.x += 0.003 / float(i) * tan(float(i) * 3.0 * pos.y + iTime / speed) + movement.x/ 20.0;\n    //pos.y += 0.3 / float(i) * cos(float(i) * 3.0 * pos.x + iTime * speed) + movement.y / 1000.0;\n    pos.y += 0.003 / float(i) * tan(float(i) * 3.0 * pos.x + iTime / speed) + movement.y / 10.0;\n  }\n\n  float g = cos(pos.x + pos.y + 1.0) * 0.5 + 0.5;\n  float b = sin(pos.x + pos.y + 1.0) * 0.5 + 0.5;\n  float r = (tan(pos.x + pos.y) + tan(pos.x + pos.y)) * 0.5 + 0.5;\n\n  return vec3(r, g, b);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n \t// Normalized pixel coordinates (from 0 to 1)\n    vec2 pos = fragCoord/iResolution.xy;\n    \n    vec3 color = rainbow_scales(pos);\n    fragColor = vec4(color, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}