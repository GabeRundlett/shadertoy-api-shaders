{
    "Shader": {
        "info": {
            "date": "1631977660",
            "description": "knock knock knock knock knock knock knock\n(In the game Space Station 13 (branch Goonstation) the 4 knocks play when an administrator messages you. This simulates the experience of really screwing up and getting bombarded with admin PMs.)",
            "flags": 8,
            "hasliked": 0,
            "id": "fsKGzd",
            "likes": 1,
            "name": "adminhelp.ogg but getting faster",
            "published": 3,
            "tags": [
                "sound",
                "ss13"
            ],
            "usePreview": 0,
            "username": "pali6",
            "viewed": 380
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0) * aa(loop(iTime + uv.x - 0.5));\n    \n    if(uv.x >= 0.499 && uv.x <= 0.501)\n        fragColor = vec4(1., 1., 1., 2.) - fragColor;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\n\nvec2 mainSound( int samp, float time )\n{\n    float time2 = loop(time);\n    float t = time / 0.004 * 2. * PI;\n    float a = sin(t);\n    a *= aa(time2);\n    return vec2( a );\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            },
            {
                "code": "#define PI 3.141592653589\n\nfloat loop(float time)\n{\n    float baseTime = time;\n    // time = pow(time + 1., 1.2) - 1.;\n    if(time < 0.)\n        return 0.;\n    \n    /*float p1 = 2. - (0.6 + 0.6 * tanh(time * 0.2 - 10.));\n    time /= p1;\n    time = fract(time);\n    time *= p1;\n    */\n    /*time = log(fract(1. + exp(time * 0.1)));\n    time /= 0.1;\n    time *= 4.;\n    */\n    const float Q = 6.;\n    const float M = 0.1;\n    time = (time + Q) * M - log(floor(exp((time + Q) * M)));\n    time /= M;\n    \n    time = time / 0.2;\n    if(time >= 4.)\n        return 0.;\n    time = fract(time);\n    time = time * 0.2;\n    return time;\n}\n\nfloat aa(float time)\n{\n    if(time <= 0.)\n        return 0.;\n    float t = time / 0.004 * 2. * PI;\n    float t2 = time / 0.040 * 2. * PI;\n    float a = 1.;\n    a *= 0.7 + 0.3 * (1. - cos(t2));\n    a *= pow((0.2 - time) / 0.2, 2.);\n    if(time <= 0.01) a *= time / 0.01;\n    return a;\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}