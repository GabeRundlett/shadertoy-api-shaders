{
    "Shader": {
        "info": {
            "date": "1652215594",
            "description": "Just a shader live coding training session.",
            "flags": 0,
            "hasliked": 0,
            "id": "ft2BWD",
            "likes": 13,
            "name": "Pew pew pew ball",
            "published": 3,
            "tags": [
                "livecoding"
            ],
            "usePreview": 0,
            "username": "Zavie",
            "viewed": 343
        },
        "renderpass": [
            {
                "code": "float pi = acos(-1.);\n\nfloat hash(vec2 co)\n{\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat shapy(float x)\n{\n    float cut = 0.98;\n    float x1 = clamp(x/cut,0., 1.);\n    float x2 = 1.-clamp((x-cut)/(1.-cut),0., 1.);\n    float tail = exp(-8.*(1.-x1));\n    float head = 1.-exp(-5.*x2);\n    return mix(tail,head,smoothstep(cut-0.05, cut+0.05, x));\n}\n\nfloat shapy2(float x, float k, float t)\n{\n    float a = fract(k*x);\n    float cut = fract(t*k);\n    return smoothstep(cut, cut, a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x * 2. - vec2(1., iResolution.y/iResolution.x);\n    \n    float t = iTime;\n\n    float angle = atan(uv.y, uv.x);\n    float a = angle / pi *0.5+0.5;\n\n    float rays = 160.;\n    float offset = hash(vec2(floor(a*rays)*rays))*5.;\n    vec2 c = vec2(0.);\n    vec2 dv = uv - c;\n    float d1 = abs(dv.x) + abs(dv.y);\n    float d2 = length(dv);\n    float d = mix(d1, d2, mix(-1., 1.2, smoothstep(0., 1.,abs(fract(t/16.) * 2. - 1.))));\n    d = -exp(-16.*d);\n    vec3 p1 = vec3(shapy(fract(d*10.-1.*t+offset)));\n\n\n    float c2 = shapy2(a, 2., t/11.);\n    float c4 = shapy2(a, 4., t/12.);\n    float c8 = shapy2(a, 8., t/13.);\n    vec3 color = p1*vec3(vec3(1., 0.2, 0.8)*c2 + vec3(0.8, 1., 0.2)*c4 + vec3(0.2, 0.8, 1.)*c8);\n\n    float glow = clamp(exp(-10.*d2-0.8)*10.,0., 1.);\n    color += glow * vec3(1., 0.9, 0.);\n    float disc = smoothstep(0.14, 0.15, d2);\n    color *= disc;\n\n    fragColor = vec4(color, 1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}