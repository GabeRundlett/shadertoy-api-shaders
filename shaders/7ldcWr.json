{
    "Shader": {
        "info": {
            "date": "1659683556",
            "description": "I didn't know what to expect and ended up with this. Homage to the nouns.",
            "flags": 32,
            "hasliked": 0,
            "id": "7ldcWr",
            "likes": 13,
            "name": "Noun O’ Clock  ⌐ⓝ°ⓒ ",
            "published": 3,
            "tags": [
                "2d",
                "nouns"
            ],
            "usePreview": 0,
            "username": "duvengar",
            "viewed": 284
        },
        "renderpass": [
            {
                "code": "// ⌐ⓝ°ⓒ\n// by @duvengar-2022\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//////////////////////////////////////////////////////////////////////////////////////\n#define T iTime\n#define R iResolution.xy\n\nvoid mainImage(out vec4 C, in vec2 U)\n{\n    \n \n   \t// glitch offset \n    vec2 V  = 1. - 2. * U / R;  \n    vec2 off = vec2(.4);\n\t\n    // colorize\n    float r = texture(iChannel0, U/ R - .01 * off).r;\n    float g = texture(iChannel0, U/ R + .00 * off).r;\n    float b = texture(iChannel0, U/ R + .01 * off).r;\n    C = vec4(r,g,b,1.);\n    \n  \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\n#define T iTime\n#define PI2 (2.*acos(-1.))\n#define ROT(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nfloat sdBox( in vec2 p, in vec2 b) {\n    vec2 q = abs(p) - b;\n   \n    return max(q.x,q.y);\n}\n\nfloat hash2(vec2 p){ \n\n\tvec3 p3  = fract(vec3(p.xyx) * .2831);\n    p3 += dot(p3, p3.yzx + 12.1233);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n\nfloat starf(vec2 uv, float i){\n\nuv.x -=iTime*0.2;\n\nfloat star = hash2(floor(uv.yx*80.));\n   vec2 starsuv = .5-fract(uv*80.);\n   float sstar = star > .997 ? 1.:.0;\nreturn i*sstar;\n}\n\n\nfloat fill(float s){\n\nreturn smoothstep(0.003,0.,s);\n\n}\n\nfloat flow( vec2 u, float s, float d ){\n\nreturn sin(3.*iTime+u.y*s)*length(-u.y-d);\n\n}\n\n\nvec3 makeGlasses( vec2 u ){\n   float glasses = sdBox( vec2(abs(u.x),u.y-.23) + vec2(-0.08,0.05), vec2(.062, .062));\n   float glasses2 = sdBox( vec2(abs(u.x),u.y-.23) + vec2(-0.08,0.05), vec2(.042, .042));\n   float glasses2b = sdBox( vec2(abs(u.x+.019),u.y-.23) + vec2(-0.08,0.05), vec2(.023, .042));\n   float glasses3 = sdBox( u - vec2(0.,0.2), vec2(.03, .01));\n   float glasses4 = sdBox( u - vec2(0.,0.2), vec2(.03, .01));\n   float glasses5 = sdBox( u - vec2(-0.17,0.2), vec2(.03, .01));\n   float glasses6 = sdBox( u - vec2(-0.2,0.18), vec2(.01, .03));\n   \n   float Glasses = glasses/glasses2;\n   Glasses = min(Glasses,glasses3);\n   Glasses = min(Glasses,glasses5);\n   Glasses = min(Glasses,glasses6);\n    \n   return vec3(Glasses, glasses2, glasses2b);\n\n}\n\n\nvoid mainImage( out vec4 S, in vec2 UV )\n{\n  \n   vec2 uv = (UV-R*.5)/R.y;\n   uv*= 1.;\n   vec2 nuv = (UV-R*.5)/R.y;\n   nuv.y += 0.1;\n   vec2 suv = (UV-R*.5)/R.y;\n \n   vec2 uv2 = uv;\n   vec2 uv3 = uv;\n    \n   uv.x += 0.02*sin(flow(uv, 10., 1.))*smoothstep(uv.y-.5, .1, 0.);\n   uv.y += 0.1;\n    \n   uv2.x += 0.045*sin(flow(uv, 7., .5))*smoothstep(uv2.y-.5, .1, 0.);\n   uv2.y += 0.1;\n    \n   uv3.x += 0.07*sin(flow(uv, 5., .5))*smoothstep(uv2.y-.5, .1, 0.);\n   uv3.y += 0.1;\n    \n   vec2 ruv = (uv2-vec2(0.0,.1)) * ROT(-iTime);\n   vec2 ruv2 = (uv2-vec2(0.0,.1)) * ROT(-iTime*20.);\n \n   float steps = 25.;\n   vec2 id = floor(suv * steps);\n   float idfactor = ((hash2(suv)))/steps*10.;\n\n   \n   \n   vec2 muv = mod(vec2(iTime,.0)-uv*steps,1.)-.5 ;\n   vec2 muv2 = mod(uv*steps*.5,1.)-.5 ;\n   muv = vec2(muv.x, uv.y);\n   muv2 = vec2(uv.x, muv2.y);\n    \n   vec2 muv3 = muv + vec2(.3,.0);\n   vec2 muv4 = muv2 + vec2(.0,.15);\n   vec2 sluv = suv;\n   suv /= +.5+dot(suv,suv);\n    \n   float kong = sdBox( uv + vec2(-0.05,-0.39), vec2(.03, .1));\n   vec2 uvt = uv;\n   uvt.y += sin(.9+-uv.x*20.)*0.03;\n   float kong2 = sdBox( uvt + vec2(-0.015,-0.42), vec2(.052, .01));\n   float kong3 = sdBox( uv + vec2(-0.035,-0.295), vec2(.02, .005));\n   float kong4 = sdBox( uv + vec2(-0.08,-0.44), vec2(.015, .02));\n   \n   float kongt = sdBox( (uv) + vec2(-0.09,-0.435), vec2(.005, .005));\n   float kongt2 = sdBox( (uv) + vec2(-0.07,-0.435), vec2(.005, .005));\n   float kongt3 = sdBox( (uv) + vec2(-0.05,-0.435), vec2(.005, .005));\n   float kongt4 = sdBox( (uv) + vec2(-0.03,-0.435), vec2(.005, .005));\n   \n   \n   float skyline = sdBox( uv - vec2(-.75,-0.3), vec2(.1, .2));\n   float skyline2 = sdBox( uv - vec2(-.25,-0.45), vec2(.07, .2));\n   float skyline3 = sdBox( uv - vec2(-.45,-0.35), vec2(.1, .2));\n   float skyline4 = sdBox( uv - vec2(.25,-0.45), vec2(.1, .2));\n   float skyline5 = sdBox( uv - vec2(.5,-0.3), vec2(.1, .25));\n   float skyline6 = sdBox( uv - vec2(.7,-0.3), vec2(.06, .2));\n   float skyline7 = sdBox( uv - vec2(.9,-0.3), vec2(.06, .3));\n   float skyline8 = sdBox( uv - vec2(-.8,-0.2), vec2(.06, .2));\n   float skyline9 = sdBox( uv - vec2(-.6,-0.4), vec2(.4, .1));\n   float skyline10 = sdBox( uv - vec2(.5,-0.3), vec2(.2, .1));\n   float skyline11 = sdBox( uv - vec2(.7,-0.4), vec2(.2, .1));\n    \n \n   float towerp = sdBox( uv + vec2(0.0,0.5), vec2(.08, .55)); \n   float towerp2 = sdBox( uv - vec2(0.0,0.315), vec2(.06, .01));\n   float towerp3 = sdBox( uv - vec2(0.0,0.258), vec2(.07, .004));\n   float towerp4 = sdBox( uv - vec2(0.0,0.212), vec2(.03, .03));\n   float towerp5 = sdBox( vec2(abs(uv.x),uv.y) - vec2(0.046,0.212), vec2(.004, .03));\n   float towerp6 = sdBox( vec2(abs(uv.x),uv.y) - vec2(0.066,0.212), vec2(.004, .03));\n   float towerp7 = sdBox( abs(uv2-vec2(0.0,.1)) - vec2(0.075, .055),vec2(.004, .004));\n   \n   float tower = sdBox( uv- vec2(0.0,-0.3), vec2(.08, .55));\n   float tower2 = sdBox( uv - vec2(0.0,0.265), vec2(.07, .02));\n   float tower3 = sdBox( uv - vec2(0.0,0.3), vec2(.06, .04));\n   float tower4 = sdBox( uv - vec2(0.0,0.34), vec2(.05, .01));\n   float tower5 = sdBox( uv - vec2(0.0,0.35), vec2(.04, .01));\n   float tower6 = sdBox( uv - vec2(0.0,0.36), vec2(.03, .03));\n   float tower7 = sdBox( uv - vec2(0.0,0.39), vec2(.02, .01));\n   float tower8 = sdBox( uv - vec2(0.0,0.427), vec2(.006, .025));\n    \n   float pattern = sdBox( muv - vec2(0.0,0.0), vec2(.15, .9));\n   float pattern2 = sdBox( muv3 - vec2(0.0,0.0), vec2(.15, .9));\n   float patternh = sdBox( muv2 - vec2(0.0,0.0), vec2(.25, .075));\n   float patternh2 = sdBox( muv4 - vec2(0.0,0.0), vec2(.25, .075));\n    \n   float clockbox = sdBox( uv2 - vec2(0.0,0.1), vec2(.1, .08));\n   float clockboxin = sdBox( uv2 - vec2(0.0,0.1), vec2(.09, .07));\n    \n   float clock = sdBox( uv2 - vec2(0.0,0.1), vec2(.025, .04));\n   float clock1 = sdBox( uv2 - vec2(0.0,0.1), vec2(.045, .02));\n   float clock2 = sdBox( uv2 - vec2(0.0,0.1), vec2(.035, .03));\n    \n   float needle = sdBox( ruv - vec2(0.0,0.01), vec2(.005, .013));\n   float needle2 = sdBox( ruv2 - vec2(0.01,0.0), vec2(.016 , .005));\n    \n   float Tower = min( tower, clockbox);\n   Tower = min( Tower, tower2);\n   Tower = min( Tower, tower3);\n   Tower = min( Tower, tower4);\n   Tower = min( Tower, tower5);\n   Tower = min( Tower, tower6);\n   Tower = min( Tower, tower7);\n   Tower = min( Tower, tower8);\n   \n   float Clock = min(clock, clock1);\n   Clock = min(Clock, clock2);\n    \n   float Needle = min(needle, needle2);\n\n    \n   float Skyline = skyline;\n   Skyline = min(Skyline,skyline2);\n   Skyline = min(Skyline,skyline3);\n   Skyline = min(Skyline,skyline4);\n   Skyline = min(Skyline,skyline5);\n   Skyline = min(Skyline,skyline6);\n   Skyline = min(Skyline,skyline7);\n   Skyline = min(Skyline,skyline8);\n   Skyline = min(Skyline,skyline9);\n   Skyline = min(Skyline,skyline10);\n   Skyline = min(Skyline,skyline11);\n      \n   vec3 Glasses = makeGlasses(uv3);\n     \n   float Pattern = max((pattern/patternh),towerp);\n   Pattern = max(Pattern,clock-clockbox/clockboxin);\n   Pattern = min(Pattern,clockboxin);\n     \n   float Pattern2 = max(min(pattern2,patternh2),towerp);\n   Pattern2 = max(Pattern2,clock-clockbox/clockboxin);\n   Pattern2 = min(Pattern2,clockboxin);\n     \n   float Pattern3 = max (pattern, towerp2);\n   Pattern3 = min(Pattern3,towerp3);\n   Pattern3 = min(Pattern3,towerp4);\n   Pattern3 = min(Pattern3,towerp5);\n   Pattern3 = min(Pattern3,towerp6);\n    \n   float Kong = kong;\n   Kong = min(Kong, kong2);\n   Kong = min(Kong, kong3);\n   Kong = min(Kong, kong4);\n    \n   float Kongt = kongt;\n   Kongt = min(Kongt, kongt2);\n   Kongt = min(Kongt, kongt3);\n   Kongt = min(Kongt, kongt4);\n\n   float Mask = min(Tower,Glasses.y);\n   Mask = min(Mask,smoothstep( .0,.003,Glasses.y));\n \n   float stars = starf(suv, idfactor);\n   float maskfill = smoothstep(0.003,0.,Mask);\n    \n   //float towerstroke = smoothstep(0.003,0.,abs(Tower)-.0003);\n   float towerfill = fill(Tower);\n   float glassesfill = fill(Glasses.x);\n   float paternfill = fill(Pattern);\n   float paternfill2 = fill(Pattern2);\n   float paternfill3 = fill(Pattern3);\n   float paternfill4 = fill(towerp7);\n   float clockfill = fill(Clock);\n   float needlefill = fill(Needle);\n   float antennafill =fill(tower8);\n   float skylinefill =fill(Skyline);\n   float kongfill =fill(Kong);\n    \n    \n   float lines = 0.1*smoothstep(.1,.0,length(fract(.25+(suv.y*steps))-.5));\n   lines = max(length(suv.y-.5)*lines,maskfill);\n    \n    \n   vec3 col = .01*vec3(1.-length(uv));\n   col += 0.3*lines;\n   vec3 g = makeGlasses(mod(vec2(-iTime*0.2,.0)+nuv*vec2(5.),1.)-.5);\n   float c= 0.;\n   c += .1*fill(g.x);\n   c -= 5.*clamp(maskfill,.0,1.);\n   c += min(stars, 1.-maskfill);\n   float d = smoothstep(1., 0., length(suv))-maskfill;\n   col += .3*d;\n   c = clamp(c, .0,1.);\n    \n   c+= 0.1*pow(hash2(iTime+suv*3423.456),2.);\n    \n   c -= 0.15*towerfill;\n   c += clockfill;\n   c += 0.1*paternfill;\n   c += 0.05*paternfill2;\n   c += 0.2*paternfill3;\n   c += 0.1*antennafill;\n   c -= needlefill*1.2;\n   c -= paternfill4*.15;\n   c -= glassesfill*2.;\n    \n   col+=c;\n\n   vec3 gl  = vec3(.5,.5,.5)* vec3(glassesfill);\n   gl += smoothstep(.0003,.0,Glasses.y);\n   gl -= 2.*smoothstep(.0003,.0,Glasses.z);\n   col = clamp(col, vec3(.0),vec3(1.));\n   col += gl;\n   col -= skylinefill;\n   \n   vec3 kglasses = makeGlasses((uv-vec2(.051,.42))*3.5);\n   float kongmask = max(kongfill, fill(kglasses.x));\n   kongmask = max(kongmask,fill(kglasses.y));\n   col = clamp(col, vec3(.0),vec3(1.));\n   col -= min(kongmask,kglasses.y);\n   col -= min(kongmask,kglasses.y);\n   col.b -= 1.*kongfill;\n    \n   col += fill(Kongt);\n   col.r+= .5*fill(kglasses.r);\n   col += 2.*fill(kglasses.g);\n   col-= 2.*fill(kglasses.b);\n\n\n   S = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}