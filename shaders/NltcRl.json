{
    "Shader": {
        "info": {
            "date": "1660332488",
            "description": "More simple patterns",
            "flags": 8,
            "hasliked": 0,
            "id": "NltcRl",
            "likes": 7,
            "name": "Iijtunnel music remix 2",
            "published": 3,
            "tags": [
                "music",
                "iij"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 348
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 U =( 2.*fragCoord-iResolution.xy)/iResolution.y;\n\n     float b=sqrt(length(U));\n  \n  float t=iTime*.5;U=fract(vec2(b,abs(atan(U.x,U.y))));\n\n  vec2 c=U*25.;\n  \n  c.x += iTime*100.;\n\n  U=floor(mod((c),vec2(256*2)));\n\n  float d=b*mod((U.x*U.x+U.y*U.y),U.x-U.y)/256.;\n\n  fragColor=vec4(fract(d*U.x),fract(d*U.y),d,1.);\n    \n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//double spaced so it looks like more work\n\n#define fmod(x,y) mod(floor(x),y)\n#define fpow(x,y) pow(y,fmod(x,y))\n\nfloat song(float t, float d){\n\n  return\n      pow(2.,mod(t*t*(floor(t/(d))),d)/6.+7.)\n      //pow(2.,mod(t*t*(floor(t/2./(d))),d+mod(t,d))/6.+7.)\n\n      //pow(2.,floor(sqrt(mod(t*t*(floor(t/(d))),d*d)))/6.+7.)\n\n      //pow(2.,mod(t*t*(floor(t/(d))),d*2.)/12.+d/2.-1.)\n      //pow(2.,mod((floor(t*t*t/(d))),d)/6.+7.)\n      //pow(2.,mod((t*floor(t*t/(d))),d)/6.+7.)\n      //pow(2.,mod((t*floor(t*t/(d))),d)/6.+d/2.-1.)\n\n\n      //pow(2.,mod(t/d*(floor(t*t)),d)/5.+7.)\n      //pow(2.,mod(t*t/d*(floor(t)),d)/5.+7.)\n      ;\n}\n\nvec2 mainSound(int samp, float time){\n  \n  //time += fpow(time*4.,2.)*fpow(time,2.);\n  \n  float t=(time+10.)*4.,\n  m1=\n      1.+mod(floor(t*2.),2.)\n      //1.+mod(floor(t+floor(t/2.)),2.)\n      //1.+mod(floor(t/4.),2.)\n  ,\n  t1=t/m1,\n\n  m=64.,\n  a=\n      64.*sqrt(1.-sqrt(fract(t)))*.2,\n      //sqrt(1.-sqrt(fract(t1)))*.2,\n  nb=\n      time*min(song(floor(t1),m/4.),song(floor(t*(2.)),m/2.))\n      //max(song(floor(t1),m/4.),song(floor(t1*(2.)),m/4.))\n      //max(song(floor(t1),m/4.),song(floor(t1*(2.)),m/4.))/4.+64.+m1*2.\n\n  ;\n\n\n  return\n      abs(.5-vec2(fract(nb*.998),fract(nb)))*a\n      //log(abs(.5-vec2(fract(nb*.998),fract(nb)))*a)/2.\n  ;\n\n}\n\n/*\nvec2 mainSound(int samp, float time){\n\n  float t=(time+10.)*8.,a=sqrt(1.-fract(t/2.))*.2,\n  \n  nb = pow(2.,mod(floor(t/2.)*floor(t)*floor(t/16.),16.)/6.+7.);\n\n  return vec2(fract(time*nb*.998)*a\n\n   ,fract(time*nb)*a);\n\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}