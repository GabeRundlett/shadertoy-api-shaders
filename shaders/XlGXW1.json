{
    "Shader": {
        "info": {
            "date": "1484059141",
            "description": "Some nice pixelated mountains, with parallax scrolling, fake volumetric light and fog. Nothing too impressive, was just feeling creative :)",
            "flags": 32,
            "hasliked": 0,
            "id": "XlGXW1",
            "likes": 11,
            "name": "Pixel Mountains",
            "published": 3,
            "tags": [
                "2d",
                "rays",
                "pixel",
                "volumetric",
                "mountain"
            ],
            "usePreview": 1,
            "username": "jackdavenport",
            "viewed": 1314
        },
        "renderpass": [
            {
                "code": "#define BLUR_SAMPLES 128\n#define BLUR_RADIUS .025\n#define BLUR_BRIGHTNESS .7\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 px = iResolution.xy / 4.;\n    vec2 uv = floor((fragCoord/iResolution.xy)*px)/px;\n    \n    fragColor = texture(iChannel0, uv);\n    fragColor.a = 1.;\n    \n    vec2  c = (iResolution.xy*vec2(.2,.8))/iResolution.xy;\n    vec3  s = vec3(0.);\n    float w = 1./float(BLUR_SAMPLES);\n    for(int i = 0; i < BLUR_SAMPLES; i++) {\n        s  += texture(iChannel0,uv).a;\n        uv += (c-uv) * BLUR_RADIUS;\n    }\n    fragColor.xyz += s*w*BLUR_BRIGHTNESS;\n    fragColor.xyz  = clamp(fragColor.xyz,0.,1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define SET(col) fragColor.xyz = col; fragColor.a = 0.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord/iResolution.xy;\n    float xPos = iTime*.25;\n    \n    fragColor.a   = clamp(1.-(length(iResolution.xy*vec2(.2,.8)-fragCoord)-30.),0.,1.);\n    fragColor.xyz = vec3(.1,.1,.3);\n    fragColor.xyz += vec3(.5,.5,1.) * fragColor.a;\n        \n    if(uv.y < texture(iChannel0, vec2(uv.x+xPos*.1,0.)).x*.8) {\n        SET(vec3(.1));\n    }\n    if(uv.y < texture(iChannel0, vec2(uv.x+xPos*.3,cos(uv.x+xPos*.3)*.5+.5)).x*.7) {\n        SET(vec3(.2));\n    }\n    if(uv.y < texture(iChannel0, vec2(uv.x+xPos*.5,sin(uv.x+xPos*.5)*.5+.5)).x*.9) {\n        SET(vec3(.5));\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}