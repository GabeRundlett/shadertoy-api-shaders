{
    "Shader": {
        "info": {
            "date": "1628400374",
            "description": "Mercedes MAPM",
            "flags": 0,
            "hasliked": 0,
            "id": "fljSzd",
            "likes": 15,
            "name": "UI Test 3",
            "published": 3,
            "tags": [
                "ui"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 357
        },
        "renderpass": [
            {
                "code": "#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define S(p,d,b) smoothstep(fwidth(p.y),0.0,d)\n#define B(p,s) max(abs(p).x-s.x,abs(p).y-s.y)\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n#define Slice(p,a) dot(p,vec2(cos(a),sin(a)))\n#define PURPLE vec3(0.8,0.6,0.9)\n#define GREEN vec3(0.1,0.8,0.6)\n\nfloat dLine(vec2 p, vec2 a, vec2 b, float w){\n    vec2 v = normalize(b-a);\n    vec2 right = normalize(cross(vec3(v,0.0),vec3(0.0,0.0,1.0)).xy);\n    vec2 newRightVec = right*(w*0.5);\n    vec2 a1 = a+newRightVec, a2 = a-newRightVec, b1 = b+newRightVec, b2 = b-newRightVec;\n    vec2 mida = vec2((a1.x + b1.x) * 0.5, (a1.y + b1.y) * 0.5);\n    vec2 midb = vec2((a2.x + b2.x) * 0.5, (a2.y + b2.y) * 0.5);\n    \n    float rad1 = -atan(b1.x-a1.x,b1.y-a1.y);\n    float rad2 = -atan(a2.x-a1.x,a2.y-a1.y);\n    \n    float mad = Slice(p-mida,rad1);\n    float mbd = Slice(p-midb,rad1);\n    \n    float ad = Slice(p-a,rad2);\n    float bd = Slice(p-b,rad2);\n    float d = max(max(mad,-mbd),max(-ad,bd));\n    return d;\n}\n\n// distance 2d digital alarm font\nconst float cDefault[7] = float[](0.,0.,0.,0.,0.,0.,0.);\nconst float c1[7] = float[](10.,0.,0.,10.,10.,10.,10.);\nconst float c2[7] = float[](0.,0.,10.,0.,0.,10.,0.);\nconst float c3[7] = float[](0.,0.,0.,0.,10.,10.,0.);\nconst float c4[7] = float[](10.,0.,0.,10.,10.,0.,0.);\nconst float c5[7] = float[](0.,10.,0.,0.,10.,0.,0.);\nconst float c6[7] = float[](0.,10.,0.,0.,0.,0.,0.);\nconst float c7[7] = float[](0.,0.,0.,10.,10.,10.,10.);\nconst float c8[7] = float[](0.,0.,0.,0.,0.,0.,0.);\nconst float c9[7] = float[](0.,0.,0.,0.,10.,0.,0.);\nconst float c0[7] = float[](0.,0.,0.,0.,0.,0.,10.);\nconst float cTBase[7] = float[](0.,10.,10.,10.,10.,10.,10.);\nconst float cKBase[7] = float[](10.,10.,0.,10.,0.,0.,0.);\nconst float cYBase[7] = float[](10.,0.,0.,0.,10.,0.,0.);\n\nconst vec2 digitVPos = vec2(0.08,0.073);\nconst vec2 digitHPos = vec2(0.0,0.15);\n\nfloat dDigitV(vec2 p){\n    float d = B(p,vec2(0.02,0.1));\n    p = abs(p);\n    p-=vec2(0.02,0.05);\n    d = max(Slice(p,44.775),d);\n    return d;\n}\n\nfloat dDigitH(vec2 p){\n    p*=Rot(radians(90.0));\n    float d = dDigitV(p);\n    return d;\n}\n\nfloat dDigitBase(vec2 p, float[7] char){\n    vec2 prevP = p;\n    float d = 10.0;\n    float d2 = 10.0;\n    // 1\n    d = (char[0])+dDigitH(p-digitHPos);\n    // 2\n    d2 = (char[1])+dDigitV(p-digitVPos);\n    d = min(d,d2);\n    // 3\n    d2 = (char[2])+dDigitV(p+vec2(-digitVPos.x,digitVPos.y));\n    d = min(d,d2);\n    // 4\n    d2 = (char[3])+dDigitH(p+digitHPos);\n    d = min(d,d2);\n    // 5\n    d2 = (char[4])+dDigitV(p+digitVPos);\n    d = min(d,d2);\n    // 6\n    d2 = (char[5])+dDigitV(p+vec2(digitVPos.x,-digitVPos.y));\n    d = min(d,d2);\n    // 7\n    d2 = (char[6])+dDigitH(p);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat dDigitNumber(vec2 p, int num){\n    float d = 100.0;\n    if(num == 0){\n        d = dDigitBase(p,c0);\n    } else if(num == 1){\n        d = dDigitBase(p,c1);\n    } else if(num == 2){\n        d = dDigitBase(p,c2);\n    } else if(num == 3){\n        d = dDigitBase(p,c3);\n    } else if(num == 4){\n        d = dDigitBase(p,c4);\n    } else if(num == 5){\n        d = dDigitBase(p,c5);\n    } else if(num == 6){\n        d = dDigitBase(p,c6);\n    } else if(num == 7){\n        d = dDigitBase(p,c7);\n    } else if(num == 8){\n        d = dDigitBase(p,c8);\n    } else if(num == 9){\n        d = dDigitBase(p,c9);\n    }\n    \n    return d;\n}\n\nfloat dDrawNumbers(vec2 p){\n    float t = iTime*7.0;\n\n    float d = dDigitNumber(p,int(mod(t*2.0,10.0)));\n    float d2 = dDigitNumber(p+vec2(0.22,0.0),int(mod(t*0.5,10.0)));\n    d = min(d,d2);\n    d2 = dDigitNumber(p+vec2(-0.22,0.0),int(mod(t,10.0)));\n    d = min(d,d2);\n    return d;\n}\n\n// noise function from https://www.shadertoy.com/view/Xd3GD4\n//-----------------------------------------------------------------------------\nvec2 hash( vec2 p ){\n    p = vec2( dot(p,vec2(127.1,311.7)),\n             dot(p,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\nfloat noise2d( in vec2 p ){\n    const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n    \n    vec2 i = floor( p + (p.x+p.y)*K1 );\n    \n    vec2 a = p - i + (i.x+i.y)*K2;\n    vec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0);\n    vec2 b = a - o + K2;\n    vec2 c = a - 1.0 + 2.0*K2;\n    \n    vec3 h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n    \n    vec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n    \n    return dot( n, vec3(70.0) );\n}\n\nvec3 UIItem1(vec2 p, vec3 col){\n    vec2 prevP = p;\n    \n    p.x+=sin(3.0*p.y+iTime*0.5)*1.2*cos(-2.0*p.x+iTime*0.7)*0.3;\n    vec2 gv = fract(p*25.0);\n    \n    float thick = 0.1;\n    float d = B(gv,vec2(2.0,thick));\n    d = min(d,B(gv,vec2(thick,2.0)));\n    \n    p = prevP;\n    d = max((length(p)-0.38),d);\n    \n    col = mix(col,vec3(0.0),S(p,d,0.0));\n    \n    float r = 5.0;\n    int index = 0;\n    for(float i = 0.02; i<=0.08; i+= 0.01){\n        vec2 pos = p-vec2(-0.35,-0.35);\n        pos *= Rot(radians(-iTime*r*10.0));\n        d = abs(length(pos)-(0.05+i))-0.001;\n        float a = radians(-15.*(i*100.0));\n        d = max(min(dot(pos,vec2(cos(a),sin(a))),dot(pos,vec2(cos(-a),sin(-a)))),d);\n        \n        vec3 lcol = (index%2 == 0)?PURPLE:GREEN;\n        col = mix(col,lcol,S(p,d,0.0));\n        r+=2.0;\n        index++;\n    }\n    \n    p = prevP;\n    \n    vec2 pos = p-vec2(-0.35,-0.35);\n    pos.y = abs(pos.y);\n    d = dLine(pos,vec2(-0.04,0.04),vec2(0.05,0.0),0.001);\n    float d2 = dLine(pos,vec2(-0.01,0.00),vec2(0.05,0.0),0.001);\n    d = min(d,d2);\n    d2 = dLine(pos,vec2(-0.04,0.04),vec2(-0.03,0.0),0.001);\n    d = min(d,d2);\n    d2 = dLine(pos,vec2(-0.04,0.04),vec2(-0.03,0.0),0.001);\n    d = min(d,d2);\n    d2 = dLine(pos,vec2(-0.04,0.04),vec2(-0.01,0.0),0.001);\n    d = min(d,d2);\n    \n    p = prevP;\n    col = mix(col,vec3(0.0),S(p,d,0.0));\n    \n    d = abs(length(p-vec2(-0.42,0.3))-0.07)-0.01;\n    p = prevP;\n    col = mix(col,vec3(0.0),S(p,d,0.0));\n    d = abs(length(p-vec2(-0.42,0.3))-0.07)-0.01;\n    \n    p-=vec2(-0.42,0.3);\n    p*=Rot(radians(iTime*30.0));\n    d = max(p.y,d);    \n    \n    p = prevP;\n    col = mix(col,GREEN,S(p,d,0.0)); \n    \n    d = abs(length(p-vec2(0.35,-0.4))-0.05)-0.01;\n    p = prevP;\n    col = mix(col,vec3(0.0),S(p,d,0.0));\n    d = abs(length(p-vec2(0.35,-0.4))-0.05)-0.01;\n    \n    p-=vec2(0.35,-0.4);\n    p*=Rot(radians(-iTime*50.0));\n    d = max(p.y,d);    \n    \n    p = prevP;\n    col = mix(col,PURPLE,S(p,d,0.0));     \n    \n    return col;\n}\n\nvec3 UIItem2(vec2 p, vec3 col){\n    vec2 prevP = p;\n    \n    p*=Rot(radians(-60.0));\n    float d = abs(length(p)-0.283)-0.02;\n    \n    float a = radians(30.0);\n    float a2 = radians(abs(sin(iTime*0.5)*150.0));\n    d = max(-min(dot(p,vec2(cos(a),sin(a))),-dot(p,vec2(cos(-a2),sin(-a2)))),d);    \n    \n    p = prevP;\n    col = mix(col,PURPLE,S(p,d,0.0));\n    \n    p = DF(p,4.0);\n    p = abs(p);\n    p -= vec2(0.2);\n    d = B(p*Rot(radians(45.0)),vec2(0.002,0.025));\n    \n    p = prevP;\n    p = DF(p,8.0);\n    p = abs(p);\n    p -= vec2(0.2);\n    float d2 = B(p*Rot(radians(45.0)),vec2(0.001,0.017));\n    d = min(d,d2);\n    \n    p = prevP;\n    \n    a = radians(-50.0);\n    d = max(min(dot(p,vec2(cos(a),sin(a))),-dot(p,vec2(cos(-a),sin(-a)))),d);\n    d2 = abs(length(p)-0.283)-0.001;\n    d = min(d,d2);\n    \n    col = mix(col,vec3(0.0),S(p,d,0.0));\n    \n    \n    d = abs(length(p)-0.169)-0.001;\n    d = max(-p.y-0.002,d);\n    col = mix(col,GREEN,S(p,d,0.0));\n    \n    \n    p = DF(p,4.0);\n    p = abs(p);\n    p -= vec2(0.13);\n    d = B(p*Rot(radians(45.0)),vec2(0.002,0.015));\n    \n    p = prevP;\n    p = DF(p,8.0);\n    p = abs(p);\n    p -= vec2(0.128);\n    d2 = B(p*Rot(radians(45.0)),vec2(0.001,0.012));\n    d = min(d,d2);\n    \n    p = prevP;\n    d = max(-p.y-0.002,d);\n    \n    col = mix(col,vec3(0.0),S(p,d,0.0));\n    \n    p = prevP;\n    p = DF(p,16.0);\n    p = abs(p);\n    p -= vec2(0.14);\n    d = B(p*Rot(radians(45.0)),vec2(0.005,0.002));\n    \n    p = prevP;\n    a = radians(-48.0);\n    d = max(-min(dot(p,vec2(cos(a),sin(a))),-dot(p,vec2(cos(-a),sin(-a)))),d);\n    \n    p = prevP;\n    col = mix(col,PURPLE,S(p,d,0.0));    \n    \n    p = prevP;\n    p = DF(p,16.0);\n    p = abs(p);\n    p -= vec2(0.14);\n    d = B(p*Rot(radians(45.0)),vec2(0.005,0.005));\n    \n    p = prevP;\n    a = radians(-48.0);\n    a2 = radians(2.0);\n    d = max(-min(dot(p,vec2(cos(a),sin(a))),-dot(p,vec2(cos(a2),sin(a2)))),d);\n    \n    p = prevP;\n    col = mix(col,vec3(0.0),S(p,d,0.0));\n    \n    d = abs(length(p)-0.17)-0.002;\n    d = max(p.y+0.13,d);\n    col = mix(col,PURPLE,S(p,d,0.0));\n    \n    d = dDrawNumbers(p*3.5);\n    col = mix(col,vec3(0.0),S(p,d,0.0));\n    \n    d = dDigitNumber((p-vec2(0.0,-0.13))*8.0,9);\n    col = mix(col,vec3(0.0),S(p,d,0.0));\n    \n    return col;\n}\n\nvec3 UIItem3(vec2 p, vec3 col){\n    vec2 prevP = p;\n    float d = length(p-vec2(0.15,0.0))-0.2;\n    p.x += iTime*0.1;\n    \n    float n = noise2d(p*73.0)*3.0;\n    \n    p = prevP;\n    col = mix(col,PURPLE*0.9,S(p,d,0.0));\n    col = mix(col,GREEN,S(p,max(d,d*n),0.0));\n    \n    d = length(p-vec2(-0.15,0.0))-0.2;\n    \n    p.x += iTime*0.12;\n    n = noise2d(p*75.0)*2.0;\n    p = prevP;\n    col = mix(col,GREEN*0.9,S(p,d,0.0));\n    col = mix(col,PURPLE,S(p,max(d,d*n),0.0));\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    uv*=1.1;\n    vec3 col = vec3(1.0);\n    col = UIItem1(uv-vec2(0.4,0.05),col);    \n    col = UIItem2((uv-vec2(-0.52,-0.2))*1.1,col); \n    col = UIItem3((uv-vec2(-0.52,0.3))*1.3,col); \n    \n    // frame\n    float d = abs(B(uv,vec2(0.88,0.49)))-0.01;\n    float d2 = B(uv-vec2(-0.16,0.),vec2(0.01,1.0));\n    d = min(d,d2);\n    d2 = B(uv-vec2(-0.6,0.11),vec2(0.45,0.01));\n    d = min(d,d2);\n    col = mix(col,vec3(0.0),S(uv,d,0.0));\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}