{
    "Shader": {
        "info": {
            "date": "1613291665",
            "description": "golfing  [url]https://shadertoy.com/view/WltBzs[/url],\nshort version of \"random pixel sprites\" by stb. [url]https://shadertoy.com/view/3ttfzl[/url]\n",
            "flags": 0,
            "hasliked": 0,
            "id": "3ldBzs",
            "likes": 11,
            "name": "random pixel sprites - golf (583",
            "published": 3,
            "tags": [
                "procedural",
                "pixel",
                "random",
                "sprite",
                "sprites"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 407
        },
        "renderpass": [
            {
                "code": "// Golfing https://shadertoy.com/view/WltBzs ( 866 chars )\n// Short version of \"random pixel sprites\" by stb. https://shadertoy.com/view/3ttfzl ( 2371 chars )\n\n\n#define H(p)     fract( sin(p) * 4e3 )\n#define h(p)     H( (p+floor(q)) * mat2x3(R,K,.7*R) )\n#define N(p,z) ( q = vec3(p,z) / .1,                     \\\n                 f = fract(q), f *= f*(3.-f-f),          \\\n                 mix( mix( h()     , h(o.xyy), f.x ),    \\\n                      mix( h(o.yxy), h(o.xxy), f.x ),    \\\n                      f.y ) - .5                         \\\n               )\n\nvoid mainImage( out vec4 O, vec2 p ) {\n    vec2 R = iResolution.xy, K = R.yx, o = vec2(1,0);\n    vec3 q,f;\n\tp = ( p - iMouse.xy ) / 72.;   \n    p.y += .5 * iTime; \n    \n    float z = 54. * H( dot( ceil(p), R ) );\n    \n    p = fract( ceil(p*24.) / 24. ) - .5; \n    p.x = abs(p.x); \n\n#define M(p)   length( p - .3* N(p,z) ) > .27 \n    bool m = M(p), b = m;\n    for ( int k=0; k<9; k++ )\n        b = b && M( p - vec2(k%3-1,k/3-1) / 24. );    \n        \n     O.rgb =  b||m  ? vec3( b )\n                    : pow( H(  vec3( ceil( p/.213  - 2.17*N(p,0) - z ), z )\n                             * mat3(R,K,.7*K,.7*R,.9*R)), \n                           vec3(.75) ); \n}\n\n\n\n\n\n\n/* // --- 596 chars\n\n#define R        iResolution.xy\n#define H(p)     fract( sin(p) * 4e3 )\n#define h(p)     H( (p+i) * mat2x3(R.xyyx,.7*R) )\n#define N(p,z) ( q = vec3(p,z) / .1,                     \\\n                 i = floor(q),                           \\\n                 f = fract(q), f *= f*(3.-f-f),          \\\n                 mix( mix( h()     , h(o.xyy), f.x ),    \\\n                      mix( h(o.yxy), h(o.xxy), f.x ),    \\\n                      f.y ) - .5                         \\\n               )\n\nvoid mainImage( out vec4 O, vec2 p ) {\n    vec3 q,i,f, o = vec3(1,0,0);\n\tp = 5.* ( p - iMouse.xy ) / R.y;   \n    p.y += .5 * iTime; \n    \n    float z = 54. * H( dot( ceil(p), R ) );\n    \n    p = fract( ceil(p*24.) / 24. ) - .5; \n    p.x = abs(p.x); \n\n#define M(p)   length( p - .3* N(p,z) ) > .27 \n    bool m = M(p), b = m;\n    for ( int k=0; k<9; k++ )\n        b = b && M( p - vec2(k%3-1,k/3-1) / 24. );    \n        \n     O.rgb =  b||m  ? vec3( b )\n                    : pow( H(  vec3( ceil( p/.213  - 2.17*N(p,0) - z ), z )\n                             * mat3(R.xyyx,.7*R.yxxy,.9*R)), \n                           vec3(.75) ); \n}\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}