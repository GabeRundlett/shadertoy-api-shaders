{
    "Shader": {
        "info": {
            "date": "1672478243",
            "description": "guessing matrix order and vec*matrix order in computer languages is always a nightmare.\nA quick test to check: U * mat2(1,0,0,0) ,  U * mat2(0,1,0,0), etc.\nâ†’ vec * mat =  horizontal * mat( vertical v1,v2 ) = vec2( dot(vec,v1), dot(vec,v2) ).",
            "flags": 0,
            "hasliked": 0,
            "id": "dlsGW2",
            "likes": 8,
            "name": "matrix order, matrix mul",
            "published": 3,
            "tags": [
                "matrix",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 273
        },
        "renderpass": [
            {
                "code": "#define S(v)  smoothstep( 6./R.y, 0., v )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n     vec2 R = iResolution.xy, U = u/R, V;\n  // O = vec4( U * mat2( 1,0, 0,0 ) , 0,0 );  //  red horizontal gradient\n  // O = vec4( U * mat2( 0,1, 0,0 ) , 0,0 );  //  red vertical gradient\n  // O = vec4( U * mat2( 0,0, 1,0 ) , 0,0 );  //  green horizontal gradient\n  // O = vec4( U * mat2( 0,0, 0,1 ) , 0,0 );  //  green vertical gradient\n     \n  // O = vec4( mat2( 1,0, 0,0 ) * U , 0,0 );  //  red horizontal gradient\n  // O = vec4( mat2( 0,1, 0,0 ) * U , 0,0 );  //  green horizontal gradient\n  // O = vec4( mat2( 0,0, 1,0 ) * U , 0,0 );  //  red vertical gradient\n  // O = vec4( mat2( 0,0, 0,1 ) * U , 0,0 );  //  green vertical gradient\n  \n     int i = ( iFrame/60) % 4;\n     O *= 0.; O[i]++;                         // set a matrix component to one, rest = 0\n     O = vec4( U * mat2(O) , 0,0);\n\n     U = 2.*( u+u - R ) / R.y;                // --- draw the boxes\n     if ( U.y > 1. && abs(U.x) < 2. ) {\n         V = abs(fract(U)-.5);\n         float a = max(V.x,V.y)-.2;\n         O += S( abs(a) );                    // frame box\n         if ( int(U.x+2.) == i ) O += S( a ); // plain box\n     }\n     \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}