{
    "Shader": {
        "info": {
            "date": "1580216516",
            "description": "Simple Menger.",
            "flags": 0,
            "hasliked": 0,
            "id": "ttK3Wt",
            "likes": 15,
            "name": "Sponge Tunnel",
            "published": 3,
            "tags": [
                "cineshadermengerspongeraymarching"
            ],
            "usePreview": 0,
            "username": "hatuxes",
            "viewed": 28001
        },
        "renderpass": [
            {
                "code": "const float pi=acos(-1.0);\nconst float pi2=pi*2.0;\n\nmat2 rot(float a){\n    float c=cos(a), s=sin(a);\n    return mat2(c, s, -s, c);\n}\n\nvec2 pmod(vec2 p, float r){\n    float a=atan(p.x, p.y)+pi/r;\n    float n=pi2*(-sin(0.42*iTime)*sin(0.42*iTime)+0.35)/r;\n    a=floor(a/n)*n-pi;\n    return p*rot(-a);\n}\n\nfloat crossf(vec3 p, float r){\n    p=abs(p);\n    float dxy=max(p.x, p.y);\n    float dyz=max(p.y, p.z);\n    float dxz=max(p.z, p.x);\n    return min(dxy, min(dyz, dxz))-r;\n}\n\nfloat boxf(vec3 p, vec3 b){\n    p=abs(p)-b;\n    return length(max(p, 0.0))+min(max(p.x, max(p.y, p.z)), 0.0);\n}\n\n\nfloat mengersponge(vec3 p, float scale, float width){\n    float d=boxf(p, vec3(1.0));\n    float s=1.0;\n    for(int i=0; i<5; i++){\n        vec3 a=mod(p*s, 2.0)-1.0;\n        s*=scale;\n        vec3 r=1.0-scale*abs(a);\n        float c=crossf(r, width)/s;\n        d=max(d,c);\n    }\n    return d;\n}\n\nfloat map(vec3 p){\n    p=mod(p, 4.0)-2.0;\n    return mengersponge(p, 3.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=(fragCoord.xy*2.0-iResolution.xy)/min(iResolution.x, iResolution.y);\n    vec3 ro=vec3(0.0, 0.0, 8.0*iTime);\n    vec3 rd=normalize(vec3(uv, 0.8*sin(0.58*iTime)));\n    vec3 col=vec3(0);\n    float dp=0.0, dpp=0.0;\n    for(int i=0; i<99; i++){\n        vec3 pos=ro+rd*dp;\n        pos.xy*=rot(0.1*iTime);\n        pos.xy=pmod(pos.xy, 8.0);\n        float d=map(pos);\n        if(d<0.00001){\n            col=vec3(1.0-float(i)*0.02);\n            break;\n        }\n        dp+=d*0.8;\n        dpp=d*75.516;\n    }\n    fragColor=vec4(col, dpp);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}