{
    "Shader": {
        "info": {
            "date": "1598354001",
            "description": "asdfasdf",
            "flags": 0,
            "hasliked": 0,
            "id": "3ljBzh",
            "likes": 3,
            "name": "castle45",
            "published": 3,
            "tags": [
                "adfasdf"
            ],
            "usePreview": 0,
            "username": "lennyjpg",
            "viewed": 274
        },
        "renderpass": [
            {
                "code": "float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.x;\n    float t = iTime * .1;\n    //float cc = length(uv-0.5)*0.8;\n    uv.x += t;\n    vec2 u = uv;\n    u *= 7.0; \n    u *= floor(u.y + 1.);\n    u.x += step(1.,mod(u.y,2.))*.5; // x offset\n   // float g = rand(vec2(floor(u.x),floor(u.y)));\n   // g+=sin(uv.x*20.0+t*10.0)*0.2;\n    u = fract(u);\n    float h = .35;\n    if(u.y < h){\n        u.y = h;  \n    }\n    vec2 off = vec2(0.5,h);\n    float d = length(u - off);  \n    float r = smoothstep(d , d*1.1, .45);\n    float k = r;\n    if(uv.y > .38){\n        float q = fract(uv.x*5.0+uv.y*3.0) - uv.y * 6. + 2.3;\n        k = step(q,0.0);\n    }\n    //k=min(k,step(cc,0.5));\n    vec3 colorA = vec3(1.,.9,.8),\n     colorB = vec3(.05,0.,.1),\n     colorC = mix(colorA, colorB, k);\n    fragColor = vec4(colorC, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}