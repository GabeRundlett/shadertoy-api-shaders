{
    "Shader": {
        "info": {
            "date": "1661916085",
            "description": "Chladni",
            "flags": 0,
            "hasliked": 0,
            "id": "flVyzV",
            "likes": 4,
            "name": "Chladni plate Audio Visualizer",
            "published": 3,
            "tags": [
                "chladni"
            ],
            "usePreview": 0,
            "username": "SamOrantin",
            "viewed": 326
        },
        "renderpass": [
            {
                "code": "\n#define PI 3.1415\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float freqs[4];\n    freqs[0] = texture( iChannel0, vec2( 0.01, 0.25 ) ).x;\n\tfreqs[1] = texture( iChannel0, vec2( 0.07, 0.25 ) ).x;\n\tfreqs[2] = texture( iChannel0, vec2( 0.15, 0.25 ) ).x;\n\tfreqs[3] = texture( iChannel0, vec2( 0.90, 0.25 ) ).x;\n    \n    float n = 4.*(pow(freqs[0],1.)-.5) +(2.0+sin(iTime/2.))*2.+ iMouse.x/112.;//(2.0+sin(iTime/2.))*2.;\n    float m = iMouse.y/iResolution.y;\n    m = 0.;\n    n = 4.*(pow(freqs[0],1.)-.5) +(2.0+sin(iTime/2.))*2.;\n    // n = 4.1;\n    int passes= 0;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -=.5;\n    float asp = iResolution.x/iResolution.y;\n    uv.x*=asp;\n    \n    float d, col;\n  \n\t\n\t//radio\n    //edgecenter\n    uv+=vec2(0.,0.5);\n    d = length(uv);\n   \tcol += cos(2.*PI*n*d + m*float(passes));\n    passes++;\n    uv-=vec2(0.,0.5);\n    \n    uv-=vec2(0.,0.5);\n    d = length(uv);\n   \tcol += cos(2.*PI*n*d + m*float(passes));\n    passes++;\n    uv+=vec2(0.,0.5);\n    \n    uv+=vec2(0.5,0.);\n    d = length(uv);\n   \tcol += cos(2.*PI*n*d + m*float(passes));\n    passes++;\n    uv-=vec2(0.5,0.);\n    \n    uv-=vec2(0.5,0.);\n    d = length(uv);\n   \tcol += cos(2.*PI*n*d + m*float(passes));\n    passes++;\n    uv+=vec2(0.5,0.);\n    \n    //corner\n    uv+=0.5;\n    d = length(uv);\n   \tcol += cos(2.*PI*n*d + m*float(passes));\n    passes++;\n    uv-=0.5;\n    \n    uv-=0.5;\n    d = length(uv);\n   \tcol += cos(2.*PI*n*d + m*float(passes));\n    passes++;\n    uv+=0.5;\n    \n    uv+=vec2(0.5,-.5);\n    d = length(uv);\n   \tcol += cos(2.*PI*n*d + m*float(passes));\n    passes++;\n    uv-=vec2(0.5,-.5);\n    \n    uv-=vec2(0.5,-.5);\n    d = length(uv);\n   \tcol += cos(2.*PI*n*d + m*float(passes));\n    passes++;\n    uv+=vec2(0.5,-.5);\n    \n    col += 5.*freqs[3];\n    col *= .3 + 3.*freqs[3];\n    col /= float(passes);\n\n    col = step(uv.x,.5)*step(-.5,uv.x)*col;\n    \n    float col1 = smoothstep(-0.5,0.5,col);\n    \n    col1 = col1*(1.-col1)*4.;\n    \n    vec3 a = vec3(0.5,0.5,0.5);\n    vec3 b = vec3(0.5,0.5,0.5);\n    vec3 c = vec3(2.4,2.4,2.4);\n    vec3 d1 = vec3(0.0,0.33,0.67);\n    \n    vec3 col2 = a + b*cos(2.*PI*(c*(max(col , col1)+iTime*0.3) + d1));\n\n    //vec4 c = vec4(1.-abs(col));\n    \n    fragColor = vec4(col2,1.);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 35,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}