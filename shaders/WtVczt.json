{
    "Shader": {
        "info": {
            "date": "1611589383",
            "description": "experiment with colors and time using noise function. ",
            "flags": 0,
            "hasliked": 0,
            "id": "WtVczt",
            "likes": 0,
            "name": "wormhole memory",
            "published": 3,
            "tags": [
                "noise",
                "texture",
                "circle",
                "gradient",
                "metallic"
            ],
            "usePreview": 0,
            "username": "YitingLiu",
            "viewed": 257
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592653\n\nvec2 random2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\n// Gradient Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/XdXGW8\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //vec2 st = fragCoord.xy/iResolution.xy;\n    //st.x *= iResolution.x/iResolution.y;\n    \n    // suggested by @FabriceNeyret2 \n    vec2 st = fragCoord / iResolution.y;  \n    vec3 color = vec3(0.0);\n\n    float t = 1.0;\n    // Uncomment to animate\n     t = abs(1.0-sin(iTime*.1))*0.5;\n    // Comment and uncomment the following lines:\n    st /= noise(st*2.)*t; // Animate the coordinate space\n    color = vec3(1.) * smoothstep(0.1,0.8,noise(st)); // Big black drops\n    color -= smoothstep(0.1,0.5,noise(st*10.)); // Black splatter\n    color += smoothstep(1.-cos(iTime),1.-cos(iTime)+0.2,noise(st*10.)); // Holes on splatter\n\n    vec3 col = 0.5 + 0.5*cos(iTime+st.xyx+vec3(0,2,4));\n\n    fragColor = vec4(color*noise(st)/col/1e2-col*vec3(PI,(cos(st.x)-sin(st.y))*0.5, atan(st.y,st.x)),1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}