{
    "Shader": {
        "info": {
            "date": "1640209624",
            "description": "Wanted to recreate the effect where leader characters \"stamp\" trail characters behind themselves.\n\nMerry Matrix Christmas everybody :)\n\nTODO:\n-find better characters",
            "flags": 0,
            "hasliked": 0,
            "id": "slVSzh",
            "likes": 13,
            "name": "Matrix code rain",
            "published": 3,
            "tags": [
                "2d",
                "rain",
                "code",
                "matrix"
            ],
            "usePreview": 0,
            "username": "paz7",
            "viewed": 507
        },
        "renderpass": [
            {
                "code": "//shader properities to play with\nfloat rows = 64.;\nfloat columns = 128.;\nfloat speed = 0.05;\n\nfloat gridRows(float t){\n    return fract(ceil(t*rows)/rows);\n}\n\nfloat gridColumns(float t){\n    return fract(ceil(t*columns)/columns);\n}\n\n//indecies of the gird\nvec2 grid(vec2 t){\n    return vec2(gridColumns(t.x),gridRows(t.y));\n}\n//UVs of grid tiles\nvec2 gridUV(vec2 t){\n\n    return vec2(fract(t.x*columns),fract(t.y*rows));\n}\n\nfloat leader(vec2 uv, float xpos, float yOffset){\n    //snap to grid on the x axis\n    xpos = gridColumns(xpos);\n    uv.x = gridColumns(uv.x);\n    \n    float leader = floor((fract(abs(-yOffset-1./rows - uv.y))+1./rows));//horizontal mask\n    leader *= floor(1.-(abs(xpos-uv.x)));//vertical mask\n    return clamp01(leader);\n}\n\nfloat trail(vec2 uv, float xpos, float yOffset){\n    //snap both axes\n    uv = grid(uv);\n    xpos = gridColumns(xpos);\n    yOffset = gridRows(yOffset);\n    \n    float trail = 1.-(fract(abs(-yOffset-uv.y))+1./rows);//trail    \n    trail = clamp01(trail*2.-1.);//remap\n    trail *= floor(1.-(abs(xpos-uv.x)));//vertical mask    \n    return trail;\n}\n\nfloat character(vec2 screenUV, vec2 uv, float index){   \n    index += floor(screenUV.x * columns)/256.;//offset by position\n    index += floor((iTime)*speed*columns/5.)/256.;//offset by time\n    index = fract(index)*255.;//remap to 0.-255.;\n    index = floor(index);\n    \n    vec2 charUV = fract(uv/16.);\n    charUV.x += floor(mod(index,16.))/16.;\n    charUV.y += floor(index/16.)/16.;\n    \n    return texture(iChannel0,charUV).x;\n}\n\nfloat trailCharacter(vec2 uv){\n    return character(uv,gridUV(uv),grid(uv).y);\n}\n\nfloat leaderCharacter(vec2 uv, vec2 time){\n    return character(uv,gridUV(uv+fract(time*rows)/rows),grid(uv+fract(time*rows)/rows).y);\n}\n\n//credit: https://www.flickr.com/photos/kynd/9546075099/\nfloat func(float t){\n    t = t*2. - 1.;\n    return 1. - pow(max(0.,abs(t)*2.-1.),2.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 screenUV = fragCoord/iResolution.xy;\n\n    vec2 uv = screenUV;\n    vec2 uv2 = screenUV;\n    vec2 uv3 = screenUV;\n    \n    float t = fract(iTime*speed*2.);\n    float t2 = fract(iTime*speed*2.+0.33);\n    float t3 = fract(iTime*speed*2.+0.66);\n    float alpha = func(t);\n    float alpha2 = func(t2);\n    float alpha3 = func(t3);\n    \n    uv*=(1.-t)*4.;\n    uv+=(0.5*t)*4.;\n    uv2*=(1.-t2)*4.;\n    uv2+=(0.5*t2)*4.;\n    uv3*=(1.-t3)*4.;\n    uv3+=(0.5*t3)*4.; \n    \n    vec3 col = vec3(0.);\n    vec2 time = vec2(0.,1.)*iTime*speed;    \n    float layer = 0.;        \n    col = vec3(0.);   \n    time = vec2(0.,1.)*(iTime)*speed;\n    \n    layer += trail(uv,uv.x, time.y+random01(gridColumns(uv.x)*321.421)) * trailCharacter(uv) * alpha;\n    layer += leader(uv, uv.x, time.y+random01(gridColumns(uv.x)*321.421)) * leaderCharacter(uv,time) * alpha * 2.;\n\n    layer += trail(uv2,uv2.x, time.y+random01(gridColumns(uv2.x)*321.421)) * trailCharacter(uv2) * alpha2;\n    layer += leader(uv2,uv2.x, time.y+random01(gridColumns(uv2.x)*321.421)) * leaderCharacter(uv2,time) * alpha2 * 2.;\n\n    layer += trail(uv3,uv3.x, time.y+random01(gridColumns(uv3.x)*321.421)) * trailCharacter(uv3) * alpha3;\n    layer += leader(uv3,uv3.x, time.y+random01(gridColumns(uv3.x)*321.421)) * leaderCharacter(uv3,time) * alpha3 * 2.;\n    \n    col.x = layer;\n    float final = clamp01(layer);    \n    final = final + final * texture(iChannel1,fragCoord/iResolution.xy).r * 3.;\n    col = hsv2rgb(0.25,1.-pow(final,25.),1.)*final;\n    \n    /*//step by step of a single character\n    col = vec3(0.);\n    uv = fragCoord/iResolution.xy;\n    if(uv.x<.125){\n        col = leader(uv,0.01, time.y) * vOne;\n    }else if(uv.x<.25){\n        col = trail(uv,0.126, time.y) * vOne;\n    }else if(uv.x<.375){\n        col = leader(uv,0.251, time.y) * vOne;\n        col += trail(uv,0.251, time.y) * vOne;\n    }else if(uv.x<.5){\n        col = trailCharacter(uv) * vOne;\n    }else if(uv.x<.625){\n        col = leaderCharacter(uv,time) * vOne;\n    }else{\n        col = trail(uv,0.8, time.y) * trailCharacter(uv) * vOne;\n        col += leader(uv,0.8, time.y) * leaderCharacter(uv,time) * vOne;\n    }*/\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define vOne vec3(1.);\n\nfloat random01(float seed){\n    return fract(sin(dot(vec2(seed), vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat clamp01(float t){\n    return clamp(t,0.,1.);\n}\n\nvec2 clamp01(vec2 t){\n    return clamp(t,0.,1.);\n}\n\nvec3 hsv2rgb(float h, float s, float v)\n{\n    vec3 c = vec3(h,s,v);\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}