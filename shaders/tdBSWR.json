{
    "Shader": {
        "info": {
            "date": "1553461392",
            "description": "Originally written on my phone during a bus ride, updated a bit later.",
            "flags": 64,
            "hasliked": 0,
            "id": "tdBSWR",
            "likes": 12,
            "name": "Channel Soup",
            "published": 3,
            "tags": [
                "fbm",
                "plasma",
                "rgb",
                "smoke"
            ],
            "usePreview": 0,
            "username": "Blokatt",
            "viewed": 1006
        },
        "renderpass": [
            {
                "code": "// Channel Soup\n// 24/03/19:\n// Tiny thing written by @blokatt on his phone (hence why the code might be messy).\n// Might clean it up later, right now, I'm lazy.\n// 10/04/19: Update.\n\n\nmat2 rotate(float a) {\n  return mat2(\n    cos(a), -sin(a),\n    sin(a), cos(a));\n}\n\nfloat rand(vec2 p){\n\treturn fract(sin(dot(p, vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat valueNoise(vec2 uv){\n    vec2 i = fract(uv);\n    vec2 f = floor(uv);\n\tfloat a = rand(f);\n    float b = rand(f + vec2(1.0, 0.0));\n    float c = rand(f + vec2(0.0, 1.0));\n    float d = rand(f + vec2(1.0, 1.0));    \n    return mix(mix(a, b, i.x), mix(c, d, i.x), i.y);\n}\n\nfloat noise(vec2 uv){\n    float v = 0.;\n    float freq = 1.;\n    float amp = 0.4;\n    uv  += 2.;\n    for (int i = 0; i < 5; ++i) {\n    \tv += valueNoise((uv + iTime) * freq) * amp;\n        amp *= .6;\n        freq *= 1.75;\n    }\n\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  float time = iTime;\n  vec2 uv = fragCoord/iResolution.xy - .5;\n  uv.x *= iResolution.x / iResolution.y;\n  uv *= .5;  \n  vec2 nuv = uv;\n  uv *= rotate((length(uv) * 5. + time * .5));\n  uv *= 20. - length(uv) * 5.;\n  uv *= 1.5 + 2. * ((sin(time * .2 + length(uv) * .8) * .5) + .5);\n  vec3 color =vec3(1);\n    \n  float coff = 1. + length(uv) * .01;\n  color.r = sin(uv.y * uv.x + time * 5.) + cos(uv.y  + time) * 3.;\n  color.g = sin(uv.y * uv.x + time * 5. + .4 * coff) + cos(uv.y + time + .5 * coff) * 3.;\n  color.b = sin(uv.y * uv.x + time * 5. + .8 * coff) + cos(uv.y + time + 1. * coff) * 3.;\n  color *= 1.2 - pow(length(nuv), .1);\n\n  float overlay = noise(uv + vec2(noise(uv), noise(uv * 2.)) *  rotate(noise(uv)));\n  overlay = (overlay - .5) * 5. + .5;\n  fragColor = vec4(color - (.3 * overlay), 1.0 );\n\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 33777,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/odditica/scuttlemorph"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}