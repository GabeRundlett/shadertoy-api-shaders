{
    "Shader": {
        "info": {
            "date": "1715196657",
            "description": "sincos 3d of ChunderFPV in crossview",
            "flags": 0,
            "hasliked": 0,
            "id": "XfVXWD",
            "likes": 3,
            "name": "sincos 3d (Crossview)",
            "published": 3,
            "tags": [
                "3d",
                "raymarch",
                "wave",
                "sine",
                "trig",
                "crossview"
            ],
            "usePreview": 0,
            "username": "midt",
            "viewed": 104
        },
        "renderpass": [
            {
                "code": "#define A(v) mat2(cos(m.v+radians(vec4(0, -90, 90, 0))))  // rotate\n#define W(v) length(vec3(p.yz-v(p.x+vec2(0, pi_2)+t), 0))-lt  // wave\n//#define W(v) length(p-vec3(round(p.x*pi)/pi, v(t+p.x), v(t+pi_2+p.x)))-lt  // wave\n#define P(v) length(p-vec3(0, v(t), v(t+pi_2)))-pt  // point\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    float shift = 0.0;\n    if(U.x >= iResolution.x / 2.0) {\n        U.x -= iResolution.x / 2.0;\n        shift = 1.0;\n    }\n    \n    float lt = .1, // line thickness\n          pt = .3, // point thickness\n          pi = 3.1416,\n          pi2 = pi*2.,\n          pi_2 = pi/2.,\n          t = iTime*pi,\n          s = 1., d = 0., i = d;\n    vec2 R = vec2(iResolution.x / 2.0, iResolution.y),\n         m = (iMouse.xy-.5*R)/R.y*4.;\n    vec3 o = vec3(-shift, 0, -7), // cam\n         u = normalize(vec3((U-.5*R)/R.y, 1)),\n         c = vec3(0), k = c, p;\n    if (iMouse.z < 1.) m = -vec2(t/20.-pi_2, 0);\n    mat2 v = A(y), h = A(x); // pitch & yaw\n    for (; i++<50.;) // raymarch\n    {\n        p = o+u*d;\n        p.yz *= v;\n        p.xz *= h;\n        p.x -= 3.;\n        if (p.y < -1.5) p.y = 2./p.y;\n        k.x = min( max(p.x+lt, W(sin)), P(sin) );\n        k.y = min( max(p.x+lt, W(cos)), P(cos) );\n        s = min(s, min(k.x, k.y));\n        if (s < .001 || d > 100.) break;\n        d += s*.5;\n    }\n    c = max(cos(d*pi2) - s*sqrt(d) - k, 0.);\n    c.gb += .1;\n    C = vec4(c*.4 + c.brg*.6 + c*c, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}