{
    "Shader": {
        "info": {
            "date": "1671882528",
            "description": "Just messing around on christmas day! (Published late lol)",
            "flags": 0,
            "hasliked": 0,
            "id": "mllGD7",
            "likes": 0,
            "name": "Golden Piggy",
            "published": 3,
            "tags": [
                "raymarching",
                "rotation",
                "pig"
            ],
            "usePreview": 0,
            "username": "OzoneOnYou",
            "viewed": 117
        },
        "renderpass": [
            {
                "code": "#define MAX_STEPS 100\n#define MAX_DISTANCE 100.\n#define PRECISION 0.01\n\nstruct object{\n    float sD;\n    vec3 col;\n};\n\nmat3 rotateX(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat3(\n        vec3(1, 0, 0),\n        vec3(0, c, -s),\n        vec3(0, s, c)\n    );\n}\n\nmat3 rotateY(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat3(\n        vec3(c, 0, s),\n        vec3(0, 1, 0),\n        vec3(-s, 0, c)\n    );\n}\n\nmat3 rotateZ(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat3(\n        vec3(c, -s, 0),\n        vec3(s, c, 0),\n        vec3(0, 0, 1)\n    );\n}\n\nfloat smin( float a, float b, float k )\n{\n    float h = max( k-abs(a-b), 0.0 )/k;\n    return min( a, b ) - h*h*k*(1.0/4.0);\n}\n\nfloat sdCapsule( vec3 p, vec3 a, vec3 b, float r )\n{\n  vec3 pa = p - a, ba = b - a;\n  float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n  return length( pa - ba*h ) - r;\n}\n\nfloat sdSphere(vec3 p, vec3 q, float r){\n    return length(p-q) - r;\n}\n\nfloat sdRoundBox( vec3 p, vec3 b, float r )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n}\n\nfloat dot2(in vec3 v ) { return dot(v,v); }\nfloat sdRoundCone(vec3 p, vec3 a, vec3 b, float r1, float r2)\n{\n  vec3  ba = b - a;\n  float l2 = dot(ba,ba);\n  float rr = r1 - r2;\n  float a2 = l2 - rr*rr;\n  float il2 = 1.0/l2;\n    \n  vec3 pa = p - a;\n  float y = dot(pa,ba);\n  float z = y - l2;\n  float x2 = dot2( pa*l2 - ba*y );\n  float y2 = y*y*l2;\n  float z2 = z*z*l2;\n\n  float k = sign(rr)*rr*rr*x2;\n  if( sign(z)*a2*z2>k ) return  sqrt(x2 + z2)        *il2 - r2;\n  if( sign(y)*a2*y2<k ) return  sqrt(x2 + y2)        *il2 - r1;\n                        return (sqrt(x2*a2*il2)+y*rr)*il2 - r1;\n}\n\nfloat sdHexPrism( vec3 p, vec2 h )\n{\n  const vec3 k = vec3(-0.8660254, 0.5, 0.57735);\n  p = abs(p);\n  p.xy -= 2.0*min(dot(k.xy, p.xy), 0.0)*k.xy;\n  vec2 d = vec2(\n       length(p.xy-vec2(clamp(p.x,-k.z*h.x,k.z*h.x), h.x))*sign(p.y-h.x),\n       p.z-h.y );\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nobject sminObj(object a, object b, float k){\n    if(a.sD<b.sD) return object(smin(a.sD, b.sD, k), a.col);\n    return object(smin(a.sD, b.sD, k), b.col);\n}\n\nobject minObj(object a, object b){\n    if(a.sD < b.sD) return a;\n    return b;\n}\n\nobject sdScene(vec3 p){\n    p = p*rotateY(iTime*0.2)*rotateZ(clamp(cos(iTime*4.)/6., 0., 1.));\n    p -= vec3(0, clamp(sin(iTime*4.), 0., 1.), 0);\n    object belly = object(sdCapsule(p, vec3(-.3, 0, 0),       vec3(.5, 0, 0),        .5),  vec3(0.96, 0.9, 0.55));\n    \n    object leg1  = object(sdCapsule(p, vec3(-.4, -.45, .25),  vec3(-.45, -.5, .3),   0.2), vec3(0.96, 0.9, 0.55));\n    object leg2  = object(sdCapsule(p, vec3(.6, -.45, .25),   vec3(.65, -.5, .3),    .2),  vec3(0.96, 0.9, 0.55));\n    object leg3  = object(sdCapsule(p, vec3(-.4, -.45, -.25), vec3(-.45, -.5, -.3),  0.2), vec3(0.96, 0.9, 0.55));\n    object leg4  = object(sdCapsule(p, vec3(.6, -.45, -.25),  vec3(.65, -.5, -.3),   .2),  vec3(0.96, 0.9, 0.55));\n    \n    object nose  = object(sdRoundBox(p-vec3(0.9, 0, 0),vec3(0.1), 0.1), vec3(0.96, 0.9, 0.55));\n    object tail  = object(sdSphere(p, vec3(-0.7, 0.3, 0), 0.1), vec3(0.96, 0.9, 0.55));\n    \n    object ear1  = object(sdRoundCone(p, vec3(0.65, 0.3, 0.15), vec3(0.65, 0.5, 0.3), 0.15, 0.05), vec3(0.96, 0.9, 0.55));\n    object ear2  = object(sdRoundCone(p, vec3(0.65, 0.3, -.15), vec3(0.65, 0.5, -.3), 0.15, 0.05), vec3(0.96, 0.9, 0.55));\n    \n    object stand = object(sdHexPrism(p*rotateZ(-clamp(cos(4.)/6., 0., 1.))*rotateX(radians(90.)) - vec3(0, 0, -0.9-clamp(sin(iTime*4.), 0., 1.)), vec2(2, 0.2)), vec3(1));\n    return minObj(sminObj(sminObj(sminObj(sminObj(sminObj(sminObj(sminObj(sminObj(belly, ear2, 0.05), ear1, 0.05), tail, 0.1), nose, 0.1), leg4, 0.2), leg3, 0.2), leg2, 0.2), leg1, 0.2), stand);\n}\n\nobject raymarch(vec3 rO, vec3 rD){\n    object cO;\n    float sD;\n    for(int i=0;i<MAX_STEPS;i++){\n        cO = sdScene(rO + rD*sD);\n        sD+= cO.sD;\n        if(sD>MAX_DISTANCE||cO.sD<PRECISION) break;\n    }\n    cO.sD = sD;\n    return cO;\n}\n\nvec3 getNormal(vec3 p){\n    vec2 error = vec2(.01, 0);\n    return normalize(sdScene(p).sD - vec3(sdScene(p-error.xyy).sD,\n                                          sdScene(p-error.yxy).sD,\n                                          sdScene(p-error.yyx).sD));\n}\n\nfloat shadow(vec3 rO, vec3 rD, vec3 col){\n    if(col ==vec3(0.96, 0.9, 0.55))return 1.;\n    object cO;\n    float sD;\n    for(int i=0;i<MAX_STEPS;i++){\n        cO = sdScene(rO + rD*sD);\n        sD+= cO.sD;\n        if(cO.sD<PRECISION) return 0.3;\n    }\n    return 1.;\n}\n\nvec3 compute(object o, vec3 rO, vec3 rD, vec2 fragCoord){\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 light = vec3(0, 10, 0);\n    vec3 normal = getNormal(rO+rD*o.sD);\n    float objectShadow = clamp(dot(normal, normalize(light)), 0.3, 1.);\n    float globalShadow = shadow(rO+rD*o.sD +normal*PRECISION*10., normalize(light), o.col);\n    float highlight = dot(normalize(light), normalize(reflect(rD, normal)));\n    highlight = pow(clamp(highlight, 0., 1.), 20.);\n    \n    float fogAmount = 1.0 - exp( -o.sD*0.05 );\n    vec3 fogColor = vec3(0.5, 0.5, 0.5);\n    vec3 col = mix( o.col*globalShadow*objectShadow+texture(iChannel0, normalize(normal+rO+rD*o.sD)).rgb*0.05 + highlight, fogColor, fogAmount );\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y;\n\n    vec3 rO = vec3(0, 1, -5);\n    vec3 rD = vec3(uv.x, uv.y, 1);\n\n    object raymarch = raymarch(rO, rD);\n    vec3 col = compute(raymarch, rO, rD, fragCoord);\n\n    fragColor = vec4(col,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 24,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}