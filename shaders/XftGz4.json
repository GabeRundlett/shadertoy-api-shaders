{
    "Shader": {
        "info": {
            "date": "1711450799",
            "description": "Stars parallax effect",
            "flags": 0,
            "hasliked": 0,
            "id": "XftGz4",
            "likes": 4,
            "name": "Stars parallax",
            "published": 3,
            "tags": [
                "mouseparallaxrandom"
            ],
            "usePreview": 0,
            "username": "gtouzali",
            "viewed": 181
        },
        "renderpass": [
            {
                "code": "vec2 rand(vec2 co){\n    return vec2(\n        fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453),\n        fract(cos(dot(co.yx ,vec2(8.64947,45.097))) * 43758.5453)\n    )*2.0-1.0;\n}\n\nfloat dots(in vec2 uv)\n{\n    vec2 g = floor(uv);\n    vec2 f = fract(uv)*4.0-2.0;\n    vec2 r = rand(g)*3.5;\n    \n    return length(f+r) + 0.1 * abs(cos(0.7 * iTime + rand(uv).x));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy - 0.5;\n\tuv.x *= iResolution.x/iResolution.y;\n    \n    vec2 mouse = (iMouse.xy / iResolution.xy - 0.5) * iResolution.x/iResolution.y;\n    \n    float d = smoothstep(.2, .22,dots((uv + 0.4 * mouse) * 20.0));\n    d = min(smoothstep(.2, .22,dots((uv + mouse) * 15.0)), d);\n    d = min(smoothstep(.2, .22,dots((uv + 1.5 * mouse) * 14.0)), d);\n    d = min(smoothstep(.2, .22,dots((uv + 0.1 * mouse) * 25.0)), d);\n    \n\tfragColor = vec4(vec3(1. - d ), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}