{
    "Shader": {
        "info": {
            "date": "1562335808",
            "description": "A 3D representation of an Ottawa, Ontario based local tech meetup logo.",
            "flags": 0,
            "hasliked": 0,
            "id": "Wt23RV",
            "likes": 4,
            "name": "Tech Sphere Logo",
            "published": 3,
            "tags": [
                "raymarching",
                "sdf",
                "logo",
                "sphere",
                "tech",
                "maze",
                "circuit",
                "techsphere"
            ],
            "usePreview": 0,
            "username": "BeardThings",
            "viewed": 387
        },
        "renderpass": [
            {
                "code": "float rand(vec2 co)\n{\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat maze(vec2 uv,float s)\n{\n    uv = floor(uv*s);\n    vec2 ev = 1.0-mod(uv,2.0);\n    float v = ev.x*ev.y;\n    vec2 d=mod(uv,2.0);\n    float n = step(rand(uv-d), 0.5);\n    d*=vec2(1.0-n,n)*(1.0-d.x*d.y);\n    float m=(d.x+d.y);\n    return (m*(1.0-v)+v)*(1.0-step(0.8,rand(floor(uv/2.0))));\n}\n\nvec3 r_y(vec3 p, float r)\n{\n    mat3x3 ry = mat3x3(vec3(cos(r),0.,sin(r)),vec3(0.,1.,0.),vec3(-sin(r),0.,cos(r))); \n    return ry*p;\n}\n        \nvec3 r_x(vec3 p, float r)\n{\n    mat3x3 rx = mat3x3(vec3(1.,0.,0.),vec3(0.,cos(r),-sin(r)),vec3(0.,sin(r),cos(r)));  \n    return rx*p;\n}\n\nvec3 r_z(vec3 p, float r)\n{\n    mat3x3 rz = mat3x3(vec3(cos(r),-sin(r),0.),vec3(sin(r),cos(r),0.),vec3(0.,0.,1.));\n    return rz*p;\n}\n\nfloat sphr(vec3 p, float r) {return length(p)-r;}\nfloat rbn(vec3 p, float r, float h) {return max(abs(length(p.xz)-r),abs(p.y)-h);}\nfloat bx(vec3 p, float he) {return length(max(abs(p)-he,0.));}\n\nfloat rbn_sdf(vec3 p,float ha)\n{\n    float hs=p.x+0.4;\n    float vs=p.y;\n    \n    const vec3 h_off=vec3(0.04,0.05,0.);\n    const vec3 v_off=vec3(0.,-0.025,0.);\n    float hr=rbn(p-h_off,0.68+hs*0.1,0.055+ha);\n    hr+=step(0.3,p.x);\n    \n    float vr=rbn(r_z(p-v_off,3.14/2.0),0.67+vs*0.1,0.06+ha);\n    vr+=step(0.1,p.y);\n    \n   \treturn min(hr,vr);\n}\n\nfloat sphr_sdf(vec3 p)\n{\n    return sphr(p, 0.55);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float a=iResolution.x/iResolution.y,d=0.;\n    vec2 uv=fragCoord/iResolution.xy*2.-1.;\n    vec3 vd=vec3(0.,0.,1.)+vec3(1.,0.,0.)*uv.x*a+vec3(0.,1.,0.)*uv.y,vp=vec3(0.,0.,-1.);\n    vec4 f=vec4(.95);\n    \n    float rbn_a=0.;\n\tfor(int i=0;i<48;i++)\n    {\n        if (abs(uv.x) > 0.5f) break;\n        \n        const float E = .002;\n        \n        vec3 p=vp+vd*d;\n        vec3 rp=r_z(r_x(r_y(p,.15),.05),.1);\n        \n        float rbn_d;\n        {\n            float rbn_dl=rbn_sdf(rp,0.01);\n            rbn_dl+=step(-0.04,rp.x)*step(rp.x,0.079)*step(rp.y,0.1)*step(rp.z,-0.7);\n            if(rbn_dl<=E*1.5)\n            {\n                f=vec4(1.);\n                rbn_a=max(rbn_a, 1.0-max(rbn_dl-E,0.)/(E*0.5));\n            }\n            \n            float rbn_ds=rbn_sdf(rp,0.);\n            if(rbn_ds<=E*1.3)\n            {\n                const float pi=3.1415;\n                \n                vec3 n=normalize(rp);\n                float t=atan(n.z,n.x)+pi*0.5;\n                \n                vec2 uv=vec2(t,acos(n.y));\n               \t\n                t=t/pi;\n                float e=mod(iTime*0.2,2.0);\n                e=mix(e,-1.0+fract(e),step(1.0,e));\n                float a=pow(1.0-abs(e-t)/2.0,50.0);\n                \n                vec4 g = vec4(1.,0.8,0.,1.);\n                vec4 tf=mix(vec4(.3,.7,.3,1.),g,maze(uv,150.)*max(a*1.5,0.4));\n                f=mix(vec4(1.),tf,1.0-max(rbn_ds-E,0.)/(E*0.3));\n            }\n            \n            rbn_d=min(rbn_dl,rbn_ds);\n            if(rbn_d<=E)break;\n        }\n        \n        float sphr_d;\n        {\n            sphr_d=sphr_sdf(rp);\n            if(sphr_d<=E)\n            {   \n                const vec3 ld=normalize(vec3(0.,.1,-1));\n                \n                float sdd=0.0;\n                float sv=1.;\n                for(int si=0;si<8;si++)\n                {\n                    float sd=rbn_sdf(rp+(1.-sdd)*ld,0.01);\n                    if(sd<=E*2.)\n                    {\n                        sv=min(sv,max(sd-E,0.)/E);\n                    }\n                    sdd+=sd;\n                }\n                f=mix(vec4(.7,.73,.75,1.)*max(sv,0.75),f,rbn_a);\n                break;\n            }\n        }\n        \n        d+=min(rbn_d,sphr_d)*0.9;\n    }\n    \n    \n    fragColor=f;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}