{
    "Shader": {
        "info": {
            "date": "1570239124",
            "description": "stretch filter in apple photobooth",
            "flags": 2,
            "hasliked": 0,
            "id": "WsyGDw",
            "likes": 2,
            "name": "photobooth stretch",
            "published": 3,
            "tags": [
                "photobooth"
            ],
            "usePreview": 0,
            "username": "asubaba",
            "viewed": 663
        },
        "renderpass": [
            {
                "code": "mat2 rebase(vec2 v)\n{\n\treturn mat2(v.x, 0.0, 0.0, v.y);   \n}\n\nvec2 bottomLeft = vec2(0.0, 0.0);\nvec2 topRight   = vec2(0.5, 0.5);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv -= vec2(0.5, 0.5);\n    \n\tfloat interpX = smoothstep(uv.x, bottomLeft.x, bottomLeft.x - bottomLeft.x/2.0) - smoothstep(uv.x, topRight.x, topRight.x - topRight.x/2.0);\n\tfloat interpY = smoothstep(uv.y, bottomLeft.y, bottomLeft.y - bottomLeft.y/2.0) - smoothstep(uv.y, topRight.y, topRight.y - topRight.y/2.0);\n    \n    float interp = interpX * interpY;\n    \n    uv *= ((1.0 - interp) * rebase(vec2(1.0)) + interp * rebase(vec2(uv.x*2.0, uv.y*2.0))); \n\n    uv += vec2(0.5, 0.5);\n    \n    \n    vec4 tex = texture(iChannel0, uv);\n\t\n    \n    // Output to screen\n    fragColor = tex;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}