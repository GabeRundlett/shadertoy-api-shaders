{
    "Shader": {
        "info": {
            "date": "1504905575",
            "description": "Box Loop: https://www.shadertoy.com/view/ldSfWm\nBox Loop 3: https://www.shadertoy.com/view/tlsSzr",
            "flags": 0,
            "hasliked": 0,
            "id": "lllyWN",
            "likes": 5,
            "name": "Box Loop 2",
            "published": 3,
            "tags": [
                "2d",
                "loop",
                "distance"
            ],
            "usePreview": 0,
            "username": "mlkn",
            "viewed": 619
        },
        "renderpass": [
            {
                "code": "#define NUM_LINES 7\n#define BOX_SIZE 0.4\n#define LOOP_PERIOD 1.2\n\n#define M_PI 3.14159265\n#define SQRT_2 1.4142135\n\nfloat t = 0.0;\n\n// https://www.shadertoy.com/view/MstGRr\nfloat getBoxDist(vec2 p, vec2 size, float radius) {\n\tsize -= vec2(radius);\n\tvec2 d = abs(p) - size;\n  \treturn min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n}\n\nvec2 rotateAroundPoint(vec2 p, vec2 c, float angle) {\n\tvec2 t = p - c;\n    vec2 rot = vec2(\n        cos(angle) * t.x - sin(angle) * t.y,\n        sin(angle) * t.x + cos(angle) * t.y\n    );\n\treturn c + rot;\n}\n\nfloat linesTriangle(float x, float y) {\n    float lineWidth = BOX_SIZE / float(NUM_LINES);\n\n    for (int i = 0; i < NUM_LINES; i++) {\n        float fi = float(i);\n        float progress = max((0.5 - t + fi * 0.07) * BOX_SIZE, 0.0);\n        float lOffset = fi * lineWidth;\n        vec2 l = vec2(x, y) - vec2(0.0, lOffset);\n\n        if (l.y > BOX_SIZE + progress && l.y < BOX_SIZE + lineWidth &&\n            l.x - l.y + BOX_SIZE * 2.0 > lOffset &&\n            -l.x - l.y + BOX_SIZE * 2.0 > lOffset) {\n            return 0.0;\n        }\n    }\n    return 1.0;\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord)\n{\n    vec2 p = fragCoord.xy / iResolution.xy;\n    float aspectRatio = iResolution.x / iResolution.y;\n    p.x *= aspectRatio;\n    vec2 center = vec2(0.5 * aspectRatio, 0.5);\n    \n    t = mod(iDate.w, LOOP_PERIOD) / LOOP_PERIOD;\n    \n    float rot = max(min(t * 2.5 - 0.4, 1.0), 0.0) * M_PI / 4.0;\n    p = rotateAroundPoint(p, center, rot);\n    \n    float scale =  1.0 + t * (SQRT_2 - 1.0);\n    vec2 c = (p - center) * scale;\n    \n    float d = getBoxDist(c, vec2(BOX_SIZE), 0.0);\n    d = smoothstep(0.0, 0.001, d);\n    // d = smoothstep(d, 0.001, 0.0); // debug\n    \n    float triangles = linesTriangle(c.x, c.y) * linesTriangle(c.x, -c.y) * \n        linesTriangle(c.y, c.x) * linesTriangle(c.y, -c.x);\n    d = min(d, triangles);\n\n\tfragColor = vec4(vec3(d),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}