{
    "Shader": {
        "info": {
            "date": "1684297985",
            "description": "testing buffers. to be ported on Satellite",
            "flags": 32,
            "hasliked": 0,
            "id": "ctVGzK",
            "likes": 4,
            "name": "adding lines in buffers",
            "published": 3,
            "tags": [
                "buffers"
            ],
            "usePreview": 0,
            "username": "mkundera",
            "viewed": 155
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspect = iResolution.x / iResolution.y ; \n    \n    vec2 uv = fragCoord/iResolution.xy*vec2(aspect,1.0);\n    \n    vec4 textureColor = texture(iChannel0, fragCoord/iResolution.xy);\n    \n    textureColor *= 0.96;\n    \n    vec2 circ_center = 0.5*vec2(aspect*(1.0+cos(2.0*iTime)),(1.0 + sin(2.0*iTime)));\n    \n    vec2 circ_center_2 = 0.5*vec2(aspect*(1.0 + cos(3.7*iTime)),(1.0 + sin(2.5*iTime)));\n    \n    float circ = step(0.06, distance(uv, circ_center)) - step(0.03, distance(uv, circ_center));\n    \n    float circ2 = step(0.06, distance(uv, circ_center_2)) - step(0.03, distance(uv, circ_center_2));\n    vec4 circ_color = vec4(1.0);\n    textureColor = mix(textureColor, circ_color, -circ);\n    textureColor = mix(textureColor, circ_color, -circ2);\n    \n    \n    \n    // line sdf (from https://www.shadertoy.com/view/3s2fDG)\n    vec2 line_direction = circ_center - circ_center_2;\n    vec2 point_on_line = circ_center_2;\n    float segment_length = length(line_direction);\n    \n    float projected_distance = dot(normalize(line_direction), uv - point_on_line);\n    vec2 closest_point = point_on_line + projected_distance * line_direction / segment_length;\n\n    float distance_from_line =  length(closest_point - uv);\n    float distance_from_start = - projected_distance;\n    float distance_from_end =  -segment_length + projected_distance;\n    \n    float distance_from_capsule = max(distance_from_line, distance_from_start);\n    distance_from_capsule = max(distance_from_capsule, distance_from_end);\n  \n    \n    float brush_size = 0.02;\n\n    vec3 brush_color = vec3(segment_length*0.3,0.5,0.1 + segment_length*0.5);\n    vec4 brush_c = vec4(brush_color, 1.0);\n  \n    float brush = 1.0 - min(distance_from_capsule, brush_size) / brush_size;\n    brush *= 2.0;\n    brush = clamp(brush, 0.0, 1.0);\n    \n    textureColor = mix(textureColor, brush_c, brush);\n    \n    fragColor = textureColor;\n    \n    \n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}