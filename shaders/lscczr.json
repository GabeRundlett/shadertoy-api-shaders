{
    "Shader": {
        "info": {
            "date": "1517767762",
            "description": "Initializes randomly based on time. Use the mouse to draw. Feel free to play around and change the \"#define\" parameters :)",
            "flags": 32,
            "hasliked": 0,
            "id": "lscczr",
            "likes": 6,
            "name": "Conway's Game Of Life",
            "published": 3,
            "tags": [
                "2d",
                "simulation",
                "random",
                "automata",
                "conway",
                "gameoflife"
            ],
            "usePreview": 0,
            "username": "Kosro",
            "viewed": 1505
        },
        "renderpass": [
            {
                "code": "#define ZOOM 1.0 //Has to be the same in Buf A and Image\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * ZOOM;\n\tfragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define ZOOM 1.0 //Has to be the same in Buf A and Image\n#define DENSITY 0.05\n#define RADIUS 10.0\n\nfloat get(vec2 coord) {\n    return texture(iChannel0, coord).r;\n}\n\nfloat rand(vec2 co){\n  \treturn fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * length(iDate));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 map = 1.0 / iResolution.xy;\n    vec2 uv = fragCoord * map;\n    \n    float state = texture(iChannel0,uv).r;\n    \n    float neighbourCount = 0.0;\n    \n    neighbourCount += get(uv + vec2( 0.0, 1.0) * map);\n    neighbourCount += get(uv + vec2( 0.0,-1.0) * map);\n    neighbourCount += get(uv + vec2( 1.0, 0.0) * map);\n    neighbourCount += get(uv + vec2(-1.0, 0.0) * map);\n\tneighbourCount += get(uv + vec2( 1.0, 1.0) * map);\n    neighbourCount += get(uv + vec2( 1.0,-1.0) * map);\n    neighbourCount += get(uv + vec2(-1.0, 1.0) * map);\n    neighbourCount += get(uv + vec2(-1.0,-1.0) * map);\n    \n    if(neighbourCount == 2.0 && state == 1.0 || neighbourCount == 3.0)\n    \tfragColor= vec4(1.0);\n    else\n    \tfragColor= vec4(0.0);\n    \n    if(iMouse.z > 0.0)\n    \tfragColor = max(fragColor,vec4(step(length(iMouse.xy * ZOOM - fragCoord),RADIUS)));\n    else if (iFrame < 2)\n        fragColor = vec4(step(rand(uv),DENSITY));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}