{
    "Shader": {
        "info": {
            "date": "1483896648",
            "description": "Just another Mandelbrot fractal",
            "flags": 0,
            "hasliked": 0,
            "id": "XtKSDz",
            "likes": 3,
            "name": "Mandelflow",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "_undex",
            "viewed": 658
        },
        "renderpass": [
            {
                "code": "#define AA 3\n#define time iTime\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0.0);\n    for( int m=0; m<AA; m++ )\n    for( int n=0; n<AA; n++ )\n    {\n        vec2 p = -1.0 + 2.0 * (fragCoord.xy+vec2(float(m),float(n))/float(AA)) / iResolution.xy;\n        p.x *= iResolution.x/iResolution.y;\n        \n        float t = smoothstep(0.0,1.0,((-cos(time*.1)+1.0)/2.0));\n        \n        float zoom = 1.0/(t*63.0+1.0);\n        \n        vec2 c = vec2(-p.y-0.5,p.x);\n        c -= t*vec2(-2.94,4.1)*8.0;\n        c *= zoom;\n        vec2 z = vec2(0.0);\n        vec2 w = c;\n    \tint k=0;\n        for(int i=0; i<60; i++ )\n    \t{\n            z = c + vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y );\n            w = 0.985*w+0.015*vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y )/dot(z,z);\n            if( dot(z,z)>1024.0 ){k=i;break;}\n        }\n        \n        if(dot(z,z)>1024.0)\n        \tcol +=vec3(0.9,0.0,0.0)*(float(k)/50.0)+vec3(0.0,w.x,abs(w.y))*0.9;\n    }\n    col /= float(AA*AA);\n    fragColor = vec4( col, 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}