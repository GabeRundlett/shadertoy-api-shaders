{
    "Shader": {
        "info": {
            "date": "1570934825",
            "description": "Rightpoint Logo",
            "flags": 0,
            "hasliked": 0,
            "id": "WdyGDV",
            "likes": 0,
            "name": "Rightpoint Logo",
            "published": 3,
            "tags": [
                "raymarching"
            ],
            "usePreview": 0,
            "username": "ssartell",
            "viewed": 202
        },
        "renderpass": [
            {
                "code": "float farClip = 20.0;\nfloat pi = 3.14159;\nvec3 black = vec3(0.02);\nvec3 red = vec3(0.4, 0.0, 0.0);\n\nfloat join( float d1, float d2 ) {\n\treturn min(d1,d2);\n}\n\nfloat subtraction( float d1, float d2 ) {\n\treturn max(-d1,d2);\n}\n\nfloat intersection( float d1, float d2 ) {\n\treturn max(d1,d2);\n}\n\nfloat box(vec3 p, vec3 b) {\n\tvec3 q = abs(p) - b;\n\treturn length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat cylinder( vec3 p, vec3 c ) {\n\treturn length(p.xz-c.xy)-c.z;\n}\n\nfloat bigP(vec3 p) {\n\tvec3 p1 = p + vec3(0.2, 0.1, 0.0);\n\tfloat d = box(p1, vec3(0.1, 0.5, 0.1));\n\n\tp1 = p + vec3(-0.1, -0.1, 0.0);\n\td = join(\n\t\td,\n\t\tsubtraction(\n\t\t\tcylinder(p1.xzy, vec3(0.0, 0.0, 0.1)),\n\t\t\tintersection (\n\t\t\t\tcylinder(p1.xzy, vec3(0.0, 0.0, 0.3)),\n\t\t\t\tbox(p1 + vec3(-0.3, 0.0, 0.0), vec3(0.3, 0.3, 0.1))\n\t\t\t)\n\t\t)\n\t);\n\n\td = join(\n\t\td,\n\t\tjoin(\n\t\t\tbox(p + vec3(0.0, -0.3, 0.0), vec3(0.1)),\n\t\t\tbox(p + vec3(0.0, 0.1, 0.0), vec3(0.1))\n\t\t)\n\t);\n\n\treturn d;\n}\n\nfloat bigR(vec3 p) {\n\tfloat d = bigP(p);\n\n\tvec3 p1 = vec3(p.x + p.y / 2.3, p.y, p.z);\n\n\td = join(\n\t\td,\n\t\tbox(p1 + vec3(-0.05, 0.3, 0.0), vec3(0.105, 0.3, 0.1))\n\t);\n\n\treturn d;\n}\n\nvec2 map(vec3 p) {\n\tp = vec3(-p.z, p.y - 0.2, p.x);\n\n\tfloat d = box(p + vec3(0.0, 0.25, 0.0), vec3(0.85, 0.65, 0.1));\n\tif (d > 0.1) {\n\t\treturn vec2(d, 0.0);\n\t}\n\n\tfloat d1 = join(\n\t\tbigR(p + vec3(0.45, 0.0, 0.0)),\n\t\tbigP(p + vec3(-0.45, 0.0, 0.0))\n\t);\n\n\tfloat d2 = box(p + vec3(0.4, 0.85, 0.0), vec3(0.35, 0.1, 0.1));\n\n\tif (d1 < d2) {\n\t\treturn vec2(d1, 1.0);\n\t} else {\n\t\treturn vec2(d2, 2.0);\n\t}\n}\n\nvec3 calcNormal(vec3 p) {\n\tvec2 e = vec2(0.0001, 0.0);\n\treturn normalize(vec3(\n\t\tmap(p + e.xyy).x - map(p - e.xyy).x,\n\t\tmap(p + e.yxy).x - map(p - e.yxy).x,\n\t\tmap(p + e.yyx).x - map(p - e.yyx).x));\n}\n\nvec2 marchRay(vec3 ro, vec3 rd) {\n\tfloat t = 0.0;\n\tfloat g = 0.0;\n\tfor(int i = 0; i < 100; i++) {\n\t\tvec3 p = ro + t * rd;\n\t\tvec2 res = map(p);\n\t\tfloat h = res.x;\n\t\tg = res.y;\n\t\tif (h < 0.0001) return vec2(t, g);\n\t\tt += h;\n\t\tif (t > farClip) return vec2(0.0, 0.0);\n\t}\n\treturn vec2(t, g);\n}\n\nfloat gain(float x, float k) \n{\n    float a = 0.5*pow(2.0*((x<0.5)?x:1.0-x), k);\n    return (x<0.5)?a:1.0-a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n\t\n\tfloat angle1 = gain(fract(iTime / 5.0), 5.0) * 2.0 * pi;\n\tvec2 rot = vec2(angle1, 0.0);\n\tif (iMouse.z > 0.0) {\n\t\trot = 8.0 * (iMouse.xy - 0.5 * iResolution.xy) / iResolution.xy;\n\t}\n\n\tfloat r = 3.4;\n\n\tvec3 ro = vec3(r * cos(rot.x), rot.y, r * sin(rot.x));\n\tvec3 ta = vec3(0.0, 0.0, 0.0);\n\n\t// camera axes\n\tvec3 ww = normalize(ta - ro);\n\tvec3 uu = normalize(cross(ww, vec3(0,1,0)));\n\tvec3 vv = normalize(cross(uu, ww));\n\n\tvec3 rd = normalize(p.x*uu + p.y*vv + 1.5*ww);\n\n\tvec2 res = marchRay(ro, rd);\n\tfloat t = res.x;\n\tfloat g = res.y;\t\n\t\n\tvec3 col = vec3(1.0);\n\n\tif (t > 0.0) {\n\t\tcol = vec3(0.0);\n\t\tvec3 p = ro + t * rd;\n\n\t\tvec3 n = calcNormal(p);\n        vec3 l = normalize(vec3(1.0, 0.1, -0.2));\n\t\tvec3 r = reflect(-l, n);\n\n\t\tfloat ndotl = max(dot(n,l), 0.0);\n\t\tfloat rdotv = max(dot(-rd, r), 0.0);\n\n\t\tvec3 alb = black;\n\t\tif (g == 2.0) {\n\t\t\talb = red;\n\t\t}\n\n\t\tcol = alb * (ndotl * 0.7 + 0.3) + vec3(1.0) * pow(rdotv, 1000.0);\n\t}\n\n\tcol = pow(col, vec3(1.0 / 2.2));\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}