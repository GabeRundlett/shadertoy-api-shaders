{
    "Shader": {
        "info": {
            "date": "1556695121",
            "description": " ",
            "flags": 0,
            "hasliked": 0,
            "id": "wlXGzB",
            "likes": 2,
            "name": "weird_smiley",
            "published": 3,
            "tags": [
                "raytracing",
                "raymarching",
                "glsl",
                "recursive",
                "shader",
                "smiley",
                "trignometry",
                "satisfying"
            ],
            "usePreview": 0,
            "username": "s_das",
            "viewed": 442
        },
        "renderpass": [
            {
                "code": "#define s(a,b,t) smoothstep(a,b,t)\n#define sat(x) clamp(x, 0., 1.)\n#define da iTime\nfloat remap01(float a, float b, float t){\n    return sat((t-a)/(b-a));\n}\n\nfloat remap(float a, float b, float c, float d, float t){\n    return sat((t-a)/(b-a))*(d-c) + c;\n}\nvec2 within(vec2 uv, vec4 rect){\n    return (uv - rect.xy)/(rect.zw - rect.xy);\n} \n\nvec4 Eye(vec2 uv){\n    uv -= .5;\n    vec4 col = vec4(0.);\n    vec4 iris = vec4(.3,.5,1.,1.);\n    \n    float d = length(uv);\n    col = mix(vec4(1.), iris, s(.1,.7,d)*.5);\n\n    col.rgb *= 1. - s(0.45, 0.5, d)*.5*sat(-uv.x-uv.y);\n\n    col.rgb = mix(col.rgb, vec3(0.), s(.3,.25,d));\n\n    iris.rgb *= 1. + s(.3, .05, d);\n    //if(da>5.)\n    d = length( uv*cos(da-uv) + atan(uv.y*-tan(da)*uv.x));\n    d = atan(d);\n    d = pow(d,(sin(da)+1.)/4.);\n    col.rgb = mix(col.rgb, iris.rgb, s(.28, .25, d));\n\n    col.rgb = mix(col.rgb, vec3(0.), s(.16, 0.14, d));\n    \n    float highlight = s(.1, .05, length(uv - vec2(-.15,.15)));\n    highlight += s(.09, 0.03, length(uv + vec2(-.08,.08)));\n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    col.a = s(.5, .48, d);\n\n    return col;\n}   \n\nvec4 Mouth(vec2 uv){\n    uv -= .5;\n    vec4 col = vec4(0.5, .18, .05, 1.);\n    uv.y *= atan(da,uv.y);\n    uv.y -=  tan(uv.x+da)*uv.x*uv.x*uv.x*sin(iTime*2.)*5. ;\n    uv.y += uv.x*uv.x*sin(da*2.)*tan(uv.x*-uv.y-da);\n    float d = length(uv);\n    col.a = s(.5,.48,d);\n\n    float td = length(uv - vec2(0., .6));\n    vec3 tc = vec3(1.)*s(.6, .35, d);\n    col.rgb = mix(col.rgb, tc, s(.4, .39,td));\n    \n    td = length(uv + vec2(0., .5));\n    col.rgb = mix(col.rgb, vec3(1., .5, .5),s(.5,.4,td));\n    return col;\n}\n\nvec4 Head(vec2 uv){\n    vec4 col = vec4(1.);\n    \n    float d = length(uv);\n    \n    col.a = s(0.5, 0.49, d);\n\n    float edge = remap01(0.35, 0.5, d);\n    edge *= edge;\n    col.rgb *=  1. - edge*.5;\n\n    col.rgb = mix(col.rgb, vec3(.2,.5,.9), s(.485,.49,d));\n\n    float highlight = s(0.41, 0.405, d) ;\n    highlight *= remap(0.41, 0.0, .75, 0., uv.y);\n    col.rgb = mix(col.rgb, vec3(1.),highlight);\n\n    d = length(uv - vec2(.25, -.2) );\n    float cheek = s(0.2, 0.01,d)*.3;\n    cheek *= s(0.18, 0.17, d);\n    col.rgb = mix(col.rgb, vec3(1., .1, .1), cheek);\n\n\n    return col;\n}\n\nvec4 Smiley(vec2 uv){\n    vec4 col = vec4(0.);\n    uv.x = abs(uv.x);\n    vec4 head = Head(uv);\n    vec4 eye = Eye( within(uv, vec4(0.03, -0.1, .37, .24)) );\n    vec4 mouth = Mouth( within(uv, vec4(-.3, -0.4, .3, -.1)) );\n    \n    col = mix(col, head, head.r);\n    col = mix(col, eye, eye.a);\n    col = mix(col, mouth, mouth.a);\n    \n    return col;\n}\n\nvoid mainImage(out vec4 FragColor, in vec2 FragCoord ){\n    vec2 uv = FragCoord.xy/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n\n\n    vec4 col = Smiley(uv+dot((sin(da)+1.)/2.,uv.x));\n\n    if(da<5.)\n        col = Smiley(uv);\n\n    FragColor = col;\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}