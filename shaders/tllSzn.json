{
    "Shader": {
        "info": {
            "date": "1561911731",
            "description": "Trying to mimic a Piet Mondrian painting:\nhttps://thebookofshaders.com/07/",
            "flags": 0,
            "hasliked": 0,
            "id": "tllSzn",
            "likes": 8,
            "name": "Simple Mondrian",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "nkaretnikov",
            "viewed": 855
        },
        "renderpass": [
            {
                "code": "// Public domain.\n\n#define SHIFT .5\n\nvec3 rect(vec3 color, vec2 uv, vec2 bl, vec2 tr)\n{\n    float res = 1.;\n    \n    // Bottom left.\n    bl = step(bl, uv);  // if arg2 > arg1 then 1 else 0\n    res = bl.x * bl.y;  // similar to logic AND\n    \n    // Top right.\n    tr = step(SHIFT - tr, SHIFT - uv);\n    res *= tr.x * tr.y;\n    \n    return res * color;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1).\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // Remap coordinates to make 0.0 be at the center.\n    uv -= SHIFT;\n    \n    // Account for the aspect ratio.\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Paint colors.\n    vec3 red    = vec3(.667, .133, .141);\n    vec3 blue   = vec3(0.,   .369, .608);\n    vec3 yellow = vec3(1.,   .812, .337);\n    vec3 beige  = vec3(.976, .949, .878);\n    vec3 black  = vec3(0.);\n    vec3 white  = vec3(1.);\n    \n    // Output color.\n    vec3 color = black;\n    \n    color += rect(beige,          uv, vec2(-.5, -.5), vec2(.5,  .5));\n    color -= rect(beige - red,    uv, vec2(-.5,  .1), vec2(-.3, .5));\n    color -= rect(beige - yellow, uv, vec2(.45,  .1), vec2(.5,  .5));\n    color -= rect(beige - blue,   uv, vec2(.25, -.5), vec2(.5, -.45));\n    \n    // Vertical black lines.\n    color -= rect(white, uv, vec2(-.44, .1), vec2(-.42, .5));\n    color -= rect(white, uv, vec2(-.3, -.5), vec2(-.28, .5));\n    color -= rect(white, uv, vec2(.43, -.5), vec2(.45,  .5));\n    color -= rect(white, uv, vec2(.23, -.5), vec2(.25,  .5));\n    \n    // Horizontal black lines.\n    color -= rect(white, uv, vec2(-.5,  .28), vec2(.5, .30));\n    color -= rect(white, uv, vec2(-.5,  .08), vec2(.5, .1));\n    color -= rect(white, uv, vec2(-.5, -.45), vec2(.5, -.43));\n    \n    // Output to screen.\n    fragColor = vec4(color, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}