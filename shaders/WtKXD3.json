{
    "Shader": {
        "info": {
            "date": "1583736774",
            "description": "trying some stuff",
            "flags": 0,
            "hasliked": 0,
            "id": "WtKXD3",
            "likes": 3,
            "name": "Breathing thingy",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "hazenn",
            "viewed": 278
        },
        "renderpass": [
            {
                "code": "const float PI = 3.1415;\nmat2 rot(float a) {\n    float s=sin(a),c=cos(a);\n    return mat2(c,-s,s,c);\n}\n\nfloat triwave(float x)\n{\n\treturn 1.0-4.0*abs(0.5-fract(0.5*x + 0.25));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    float offset = 1. - sin(iTime);\n    \n\tvec2 f = abs(uv);\n    vec2 e = floor(f);\n    \n    for (int i=0;i<6;i++){\n    f *= 3.;\n    e = floor(f-offset); f = fract(f); \n    f = f * ( ((e.x == 0.) && (e.y == 0.))?0.:1. );\n    }\n    \n    \n    \n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    col = smoothstep(0.1,0.,dot(f,f)) * col;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}