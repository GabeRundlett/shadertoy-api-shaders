{
    "Shader": {
        "info": {
            "date": "1687916337",
            "description": "All year long I'm going to just focus on truchet tiles and the likes! \nStair into the center of the vortex! ",
            "flags": 0,
            "hasliked": 0,
            "id": "mdXyD7",
            "likes": 15,
            "name": "Year of Truchets #044",
            "published": 3,
            "tags": [
                "2d",
                "warp",
                "truchet"
            ],
            "usePreview": 0,
            "username": "byt3_m3chanic",
            "viewed": 249
        },
        "renderpass": [
            {
                "code": "/** \n\n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n    \n    Year of Truchets #044\n    06/27/2023  @byt3_m3chanic\n    Truchet Core \\M/->.<-\\M/ 2023 \n    \n*/\n\n#define R           iResolution\n#define T           iTime\n#define M           iMouse\n#define PI          3.141592653\n\nmat2 rot(float a) {return mat2(cos(a),sin(a),-sin(a),cos(a));}\nfloat hash21(vec2 a) {return fract(sin(dot(a,vec2(27.609,57.583)))*43758.5453);}\n\nvoid mainImage( out vec4 O, in vec2 F ) {\n    mat2 r45 = rot(.785398);\n    vec2 uv = (2.*F-R.xy)/max(R.x,R.y);\n \n    // upscale\n    float scale = .6365;\n\n    // warp and turn\n    uv *= rot(-T*.3);\n    uv = vec2(log(length(uv)), atan(uv.y, uv.x))*scale;\n    uv.x -= T*.7;\n    \n    vec2 vv = uv;\n\n    // background patterns\n    vec3  C = fract(6.*(vv.x+T*.6))<.5 ? vec3(.1,0,0):vec3(0,0,.075);\n\n    float px = fwidth(uv.x); \n    \n    vec2 id = floor(uv), q = fract(uv)-.5;\n    float hs = hash21(id.xy);\n\n    if(hs>.5) q = vec2(-q.y,q); \n    hs = fract(hs*575.913);\n    \n    float wd = .015, mv = .095;\n    vec2 q2 = q;\n\n    vec2 pq = length(q.xy-vec2(-.5,.5))<length(q.xy+vec2(-.5,.5))? q.xy-vec2(-.5,.5) : q.yx+vec2(-.5,.5);\n  \n    pq *= r45;\n    q2 *= r45;\n \n    // main pattern\n    float d = length(pq.x);\n    d=abs(d)-mv;\n    \n    // alt pattern\n    if(hs>.85) d = min(length(q2.x),length(q2.y))-mv;\n    \n    // posts\n    float b = length(abs(q)-.5)-(mv*1.75);\n    d = min(b,d);\n    d = max(d,-(b+.075));\n    float md = d;\n    \n    d=abs(d)-wd;\n    \n    // grid lines\n    float d2 = abs(max(abs(q.x),abs(q.y))-.5)-.01;\n    d2 = max(d2,-(b+.075));\n    vec3 clr = vec3(.4);\n\n    // color mixdown\n    if(M.z>0.) C = mix(C,vec3(.3),smoothstep(px,-px,d2));\n\n    C = mix(C,C*.35,smoothstep(.075+px,-px,d-.015));\n    C = mix(C,clr,smoothstep(px,-px,d));\n    C = mix(C,vec3(.0025),smoothstep(px,-px,md));\n\n    // gamma and output\n    C = pow(C,vec3(.4545));\n    O = vec4(C,1.);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}