{
    "Shader": {
        "info": {
            "date": "1636984454",
            "description": "Original shade here - https://www.shadertoy.com/view/st3GDs\nThis is the same shader but using a different render node using a local illumination, non path tracing version",
            "flags": 0,
            "hasliked": 0,
            "id": "7ltGDl",
            "likes": 5,
            "name": "A green thing in a bathroom RT",
            "published": 3,
            "tags": [
                "materialmaker",
                "nodes"
            ],
            "usePreview": 1,
            "username": "PauloFalcao",
            "viewed": 274
        },
        "renderpass": [
            {
                "code": "// A green thing in a bathroom - Realtime Version\n//\n// Original shade here - https://www.shadertoy.com/view/st3GDs\n//\n// This is the same shader but using a different render node, plus some animated parameters\n// Using local illumination, non path tracing version\n//\n// By https://twitter.com/paulofalcao\n//\n//\n// To generate your own shaders you need:\n//\n// - Material Maker - https://rodzilla.itch.io/material-maker\n// - My Ray Marching library - https://github.com/paulofalcao/MaterialMakerRayMarching\n// \n// Here is a 2 hour video explaining how to use it - https://youtu.be/PvmIohbf93Q\n// \n\n/* Generated by Material Maker */\n\n#define SEED_VARIATION 0.0\n\n//---\n\nfloat rand(vec2 x) {\n    return fract(cos(mod(dot(x, vec2(13.9898, 8.141)), 3.14)) * 43758.5453);\n}\n\nvec2 rand2(vec2 x) {\n    return fract(cos(mod(vec2(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t      dot(x, vec2(3.4562, 17.398))), vec2(3.14))) * 43758.5453);\n}\n\nvec3 rand3(vec2 x) {\n    return fract(cos(mod(vec3(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t\t  dot(x, vec2(3.4562, 17.398)),\n                              dot(x, vec2(13.254, 5.867))), vec3(3.14))) * 43758.5453);\n}\n\nvec3 rgb2hsv(vec3 c) {\n\tvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\tvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n\tvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n\n\tfloat d = q.x - min(q.w, q.y);\n\tfloat e = 1.0e-10;\n\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c) {\n\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nfloat param_rnd(float minimum, float maximum, float seed) {\n\treturn minimum+(maximum-minimum)*rand(vec2(seed));\n}\n//Adapted from https://iquilezles.org/articles/distfunctions - Finite Repetition\n\nvec3 opRepLim(vec3 p,vec3 c,vec3 l){\n    p+=(c*l)/2.0;\n    return p-c*clamp(floor(p/c+0.5),vec3(0.0),l);\n}vec3 MFSDF_Obj_Maker_rotate3d(vec3 p, vec3 a) {\n\tvec3 rv;\n\tfloat c;\n\tfloat s;\n\tc = cos(a.x);\n\ts = sin(a.x);\n\trv.x = p.x;\n\trv.y = p.y*c+p.z*s;\n\trv.z = -p.y*s+p.z*c;\n\tc = cos(a.y);\n\ts = sin(a.y);\n\tp.x = rv.x*c+rv.z*s;\n\tp.y = rv.y;\n\tp.z = -rv.x*s+rv.z*c;\n\tc = cos(a.z);\n\ts = sin(a.z);\n\trv.x = p.x*c+p.y*s;\n\trv.y = -p.x*s+p.y*c;\n\trv.z = p.z;\n\treturn rv;\n}\nvec4 brick(vec2 uv, vec2 bmin, vec2 bmax, float mortar, float round, float bevel) {\n\tfloat color;\n\tvec2 size = bmax - bmin;\n\tfloat min_size = min(size.x, size.y);\n\tmortar *= min_size;\n\tbevel *= min_size;\n\tround *= min_size;\n\tvec2 center = 0.5*(bmin+bmax);\n    vec2 d = abs(uv-center)-0.5*(size)+vec2(round+mortar);\n    color = length(max(d,vec2(0))) + min(max(d.x,d.y),0.0)-round;\n\tcolor = clamp(-color/bevel, 0.0, 1.0);\n\tvec2 tiled_brick_pos = mod(bmin, vec2(1.0, 1.0));\n\treturn vec4(color, center, tiled_brick_pos.x+7.0*tiled_brick_pos.y);\n}\n\nvec3 brick_random_color(vec2 bmin, vec2 bmax, float seed) {\n\tvec2 center = 0.5*(bmin + bmax);\n\treturn rand3(fract(center + vec2(seed)));\n}\n\nvec3 brick_uv(vec2 uv, vec2 bmin, vec2 bmax, float seed) {\n\tvec2 center = 0.5*(bmin + bmax);\n\tvec2 size = bmax - bmin;\n\tfloat max_size = max(size.x, size.y);\n\treturn vec3(0.5+(uv-center)/max_size, rand(fract(center)+vec2(seed)));\n}\n\nvec3 brick_corner_uv(vec2 uv, vec2 bmin, vec2 bmax, float mortar, float corner, float seed) {\n\tvec2 center = 0.5*(bmin + bmax);\n\tvec2 size = bmax - bmin;\n\tfloat max_size = max(size.x, size.y);\n\tfloat min_size = min(size.x, size.y);\n\tmortar *= min_size;\n\tcorner *= min_size;\n\treturn vec3(clamp((0.5*size-vec2(mortar)-abs(uv-center))/corner, vec2(0.0), vec2(1.0)), rand(fract(center)+vec2(seed)+ceil(vec2(uv-center))));\n}\n\nvec4 bricks_rb(vec2 uv, vec2 count, float repeat, float offset) {\n\tcount *= repeat;\n\tfloat x_offset = offset*step(0.5, fract(uv.y*count.y*0.5));\n\tvec2 bmin = floor(vec2(uv.x*count.x-x_offset, uv.y*count.y));\n\tbmin.x += x_offset;\n\tbmin /= count;\n\treturn vec4(bmin, bmin+vec2(1.0)/count);\n}\n\nvec4 bricks_rb2(vec2 uv, vec2 count, float repeat, float offset) {\n\tcount *= repeat;\n\tfloat x_offset = offset*step(0.5, fract(uv.y*count.y*0.5));\n\tcount.x = count.x*(1.0+step(0.5, fract(uv.y*count.y*0.5)));\n\tvec2 bmin = floor(vec2(uv.x*count.x-x_offset, uv.y*count.y));\n\tbmin.x += x_offset;\n\tbmin /= count;\n\treturn vec4(bmin, bmin+vec2(1.0)/count);\n}\n\nvec4 bricks_hb(vec2 uv, vec2 count, float repeat, float offset) {\n\tfloat pc = count.x+count.y;\n\tfloat c = pc*repeat;\n\tvec2 corner = floor(uv*c);\n\tfloat cdiff = mod(corner.x-corner.y, pc);\n\tif (cdiff < count.x) {\n\t\treturn vec4((corner-vec2(cdiff, 0.0))/c, (corner-vec2(cdiff, 0.0)+vec2(count.x, 1.0))/c);\n\t} else {\n\t\treturn vec4((corner-vec2(0.0, pc-cdiff-1.0))/c, (corner-vec2(0.0, pc-cdiff-1.0)+vec2(1.0, count.y))/c);\n\t}\n}\n\nvec4 bricks_bw(vec2 uv, vec2 count, float repeat, float offset) {\n\tvec2 c = 2.0*count*repeat;\n\tfloat mc = max(c.x, c.y);\n\tvec2 corner1 = floor(uv*c);\n\tvec2 corner2 = count*floor(repeat*2.0*uv);\n\tfloat cdiff = mod(dot(floor(repeat*2.0*uv), vec2(1.0)), 2.0);\n\tvec2 corner;\n\tvec2 size;\n\tif (cdiff == 0.0) {\n\t\tcorner = vec2(corner1.x, corner2.y);\n\t\tsize = vec2(1.0, count.y);\n\t} else {\n\t\tcorner = vec2(corner2.x, corner1.y);\n\t\tsize = vec2(count.x, 1.0);\n\t}\n\treturn vec4(corner/c, (corner+size)/c);\n}\n\nvec4 bricks_sb(vec2 uv, vec2 count, float repeat, float offset) {\n\tvec2 c = (count+vec2(1.0))*repeat;\n\tfloat mc = max(c.x, c.y);\n\tvec2 corner1 = floor(uv*c);\n\tvec2 corner2 = (count+vec2(1.0))*floor(repeat*uv);\n\tvec2 rcorner = corner1 - corner2;\n\tvec2 corner;\n\tvec2 size;\n\tif (rcorner.x == 0.0 && rcorner.y < count.y) {\n\t\tcorner = corner2;\n\t\tsize = vec2(1.0, count.y);\n\t} else if (rcorner.y == 0.0) {\n\t\tcorner = corner2+vec2(1.0, 0.0);\n\t\tsize = vec2(count.x, 1.0);\n\t} else if (rcorner.x == count.x) {\n\t\tcorner = corner2+vec2(count.x, 1.0);\n\t\tsize = vec2(1.0, count.y);\n\t} else if (rcorner.y == count.y) {\n\t\tcorner = corner2+vec2(0.0, count.y);\n\t\tsize = vec2(count.x, 1.0);\n\t} else {\n\t\tcorner = corner2+vec2(1.0);\n\t\tsize = vec2(count.x-1.0, count.y-1.0);\n\t}\n\treturn vec4(corner/c, (corner+size)/c);\n}// https://www.shadertoy.com/view/XsX3zB\n//\n// The MIT License\n// Copyright Â© 2013 Nikita Miropolskiy\n// \n// ( license has been changed from CCA-NC-SA 3.0 to MIT\n//\n//   but thanks for attributing your source code when deriving from this sample \n//   with a following link: https://www.shadertoy.com/view/XsX3zB )\n//\n//\n// if you're looking for procedural noise implementation examples you might \n// also want to look at the following shaders:\n// \n// Noise Lab shader by candycat: https://www.shadertoy.com/view/4sc3z2\n//\n// Noise shaders by iq:\n//     Value    Noise 2D, Derivatives: https://www.shadertoy.com/view/4dXBRH\n//     Gradient Noise 2D, Derivatives: https://www.shadertoy.com/view/XdXBRH\n//     Value    Noise 3D, Derivatives: https://www.shadertoy.com/view/XsXfRH\n//     Gradient Noise 3D, Derivatives: https://www.shadertoy.com/view/4dffRH\n//     Value    Noise 2D             : https://www.shadertoy.com/view/lsf3WH\n//     Value    Noise 3D             : https://www.shadertoy.com/view/4sfGzS\n//     Gradient Noise 2D             : https://www.shadertoy.com/view/XdXGW8\n//     Gradient Noise 3D             : https://www.shadertoy.com/view/Xsl3Dl\n//     Simplex  Noise 2D             : https://www.shadertoy.com/view/Msf3WH\n//     Voronoise: https://www.shadertoy.com/view/Xd23Dh\n//\n//\n//\n\n// discontinuous pseudorandom constly distributed in [-0.5, +0.5]^3 */\nvec3 XsX3zB_oct_random3(vec3 c) {\n\tfloat j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));\n\tvec3 r;\n\tr.z = fract(512.0*j);\n\tj *= .125;\n\tr.x = fract(512.0*j);\n\tj *= .125;\n\tr.y = fract(512.0*j);\n\treturn r-0.5;\n}\n\n// skew constants for 3d simplex functions\nconst float XsX3zB_oct_F3 =  0.3333333;\nconst float XsX3zB_oct_G3 =  0.1666667;\n\n// 3d simplex noise\nfloat XsX3zB_oct_simplex3d(vec3 p) {\n\t // 1. find current tetrahedron T and it's four vertices\n\t // s, s+i1, s+i2, s+1.0 - absolute skewed (integer) coordinates of T vertices\n\t // x, x1, x2, x3 - unskewed coordinates of p relative to each of T vertices\n\t \n\t // calculate s and x\n\t vec3 s = floor(p + dot(p, vec3(XsX3zB_oct_F3)));\n\t vec3 x = p - s + dot(s, vec3(XsX3zB_oct_G3));\n\t \n\t // calculate i1 and i2\n\t vec3 e = step(vec3(0.0), x - x.yzx);\n\t vec3 i1 = e*(1.0 - e.zxy);\n\t vec3 i2 = 1.0 - e.zxy*(1.0 - e);\n\t \t\n\t // x1, x2, x3\n\t vec3 x1 = x - i1 + XsX3zB_oct_G3;\n\t vec3 x2 = x - i2 + 2.0*XsX3zB_oct_G3;\n\t vec3 x3 = x - 1.0 + 3.0*XsX3zB_oct_G3;\n\t \n\t // 2. find four surflets and store them in d\n\t vec4 w, d;\n\t \n\t // calculate surflet weights\n\t w.x = dot(x, x);\n\t w.y = dot(x1, x1);\n\t w.z = dot(x2, x2);\n\t w.w = dot(x3, x3);\n\t \n\t // w fades from 0.6 at the center of the surflet to 0.0 at the margin\n\t w = max(0.6 - w, 0.0);\n\t \n\t // calculate surflet components\n\t d.x = dot(XsX3zB_oct_random3(s), x);\n\t d.y = dot(XsX3zB_oct_random3(s + i1), x1);\n\t d.z = dot(XsX3zB_oct_random3(s + i2), x2);\n\t d.w = dot(XsX3zB_oct_random3(s + 1.0), x3);\n\t \n\t // multiply d by w^4\n\t w *= w;\n\t w *= w;\n\t d *= w;\n\t \n\t // 3. return the sum of the four surflets\n\t return dot(d, vec4(52.0));\n}vec2 transform2_clamp(vec2 uv) {\n\treturn clamp(uv, vec2(0.0), vec2(1.0));\n}\n\nvec2 transform2(vec2 uv, vec2 translate, float rotate, vec2 scale) {\n \tvec2 rv;\n\tuv -= translate;\n\tuv -= vec2(0.5);\n\trv.x = cos(rotate)*uv.x + sin(rotate)*uv.y;\n\trv.y = -sin(rotate)*uv.x + cos(rotate)*uv.y;\n\trv /= scale;\n\trv += vec2(0.5);\n\treturn rv;\t\n}vec4 sdf3dc_union(vec4 a, vec4 b) {\n\treturn vec4((a.w<b.w)?vec4(a):vec4(b));\n}\nvec4 sdf3dc_sub(vec4 a, vec4 b) {\n\treturn vec4((-a.w>b.w)?vec4(a.xyz,-a.w):vec4(b));\n}\nvec4 sdf3dc_inter(vec4 a, vec4 b) {\n\treturn vec4((a.w>b.w)?vec4(a):vec4(b));\n}vec3 v4v4_rotate(vec3 p, vec3 a) {\n\tvec3 rv;\n\tfloat c;\n\tfloat s;\n\tc = cos(a.x);\n\ts = sin(a.x);\n\trv.x = p.x;\n\trv.y = p.y*c+p.z*s;\n\trv.z = -p.y*s+p.z*c;\n\tc = cos(a.y);\n\ts = sin(a.y);\n\tp.x = rv.x*c+rv.z*s;\n\tp.y = rv.y;\n\tp.z = -rv.x*s+rv.z*c;\n\tc = cos(a.z);\n\ts = sin(a.z);\n\trv.x = p.x*c+p.y*s;\n\trv.y = -p.x*s+p.y*c;\n\trv.z = p.z;\n\treturn rv;\n}\nvec4 MFSDF_Union(vec4 in1,vec4 in2,vec4 in3,vec4 in4,vec4 in5,vec4 in6,vec4 in7,vec4 in8){\n    vec4 t=(in1.w<in2.w)?vec4(in1):vec4(in2);\n    t=(t.w<in2.w)?vec4(t):vec4(in2);\n    t=(t.w<in3.w)?vec4(t):vec4(in3);\n    t=(t.w<in4.w)?vec4(t):vec4(in4);\n    t=(t.w<in5.w)?vec4(t):vec4(in5);\n    t=(t.w<in6.w)?vec4(t):vec4(in6);\n    t=(t.w<in7.w)?vec4(t):vec4(in7);\n    t=(t.w<in8.w)?vec4(t):vec4(in8);\n    return t;\n}\n\nfloat mfsdf3d_smooth_union_f(float a,float b,float k){\n\tfloat h = max( k-abs(a-b), 0.0 )/k;\n\treturn min(a,b)-h*h*k*0.25;\n}\n\nvec4 mfsdf3d_smooth_union(vec4 a, vec4 b, float k) {\n    float e=0.001;\n    k=max(k,e);\n    float h=mfsdf3d_smooth_union_f(a.w,b.w,k);\n\tvec2 n=normalize(vec2(mfsdf3d_smooth_union_f(a.w+e,b.w,k)-mfsdf3d_smooth_union_f(a.w-e,b.w,k),\n                          mfsdf3d_smooth_union_f(a.w,b.w+e,k)-mfsdf3d_smooth_union_f(a.w,b.w-e,k)));\n    return vec4(mix(a.xyz,b.xyz,atan(abs(n.y),abs(n.x))/(3.14159265359/2.0)),h);\n}\n\nfloat mfsdf3d_smooth_subtraction_f(float a,float b,float k){\n\tfloat h = max( k-abs(-a-b), 0.0 )/k;\n\treturn max(-a,b)+h*h*k*0.25;\n}\n\nvec4 mfsdf3d_smooth_subtraction(vec4 a, vec4 b, float k) {\n    float e=0.001;\n    k=max(k,e);\n\tfloat h=mfsdf3d_smooth_subtraction_f(a.w,b.w,k);\n\tvec2 n=normalize(vec2(mfsdf3d_smooth_subtraction_f(a.w+e,b.w,k)-mfsdf3d_smooth_subtraction_f(a.w-e,b.w,k),\n                          mfsdf3d_smooth_subtraction_f(a.w,b.w+e,k)-mfsdf3d_smooth_subtraction_f(a.w,b.w-e,k)));\n    return vec4(mix(a.xyz,b.xyz,atan(abs(n.y),abs(n.x))/(3.14159265359/2.0)),h);\n}\n\nfloat mfsdf3d_smooth_intersection_f(float a,float b,float k){\n\tfloat h = max( k-abs(a-b), 0.0 )/k;\n\treturn max(a,b)+h*h*k*0.25;\n}\n\nvec4 mfsdf3d_smooth_intersection(vec4 a, vec4 b, float k) {\n    float e=0.001;\n    k=max(k,e);\n\tfloat h=mfsdf3d_smooth_intersection_f(a.w,b.w,k);\n\tvec2 n=normalize(vec2(mfsdf3d_smooth_intersection_f(a.w+e,b.w,k)-mfsdf3d_smooth_intersection_f(a.w-e,b.w,k),\n                          mfsdf3d_smooth_intersection_f(a.w,b.w+e,k)-mfsdf3d_smooth_intersection_f(a.w,b.w-e,k)));\n    return vec4(mix(a.xyz,b.xyz,atan(abs(n.y),abs(n.x))/(3.14159265359/2.0)),h);\n}vec2 twist_rot(vec2 v, float a) {\n\ta=a*0.01745329251;\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(vec2(c, -s),vec2(s, c));\n\treturn m * v;\n}\n\nvec3 twistX(vec3 v, float a){\n\tv.yz=twist_rot(v.yz,v.x*a);\n\treturn v;\n}\n\nvec3 twistY(vec3 v, float a){\n\tv.xz=twist_rot(v.xz,v.y*a);\n\treturn v;\n}\n\nvec3 twistZ(vec3 v, float a){\n\tv.xy=twist_rot(v.xy,v.z*a);\n\treturn v;\n}\n\nconst float PI=3.14159265359;\n\nvec2 equirectangularMap(vec3 dir) {\n\tvec2 longlat = vec2(atan(dir.y,dir.x),acos(dir.z));\n \treturn longlat/vec2(2.0*PI,PI);\n}\n\n\n//Simple HDRI START\n\n//Hash without Sine Dave_Hoskins\n//https://www.shadertoy.com/view/4djSRW \nfloat Simple360HDR_hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat Simple360HDR_noise(vec2 v){\n  vec2 v1=floor(v);\n  vec2 v2=smoothstep(0.0,1.0,fract(v));\n  float n00=Simple360HDR_hash12(v1);\n  float n01=Simple360HDR_hash12(v1+vec2(0,1));\n  float n10=Simple360HDR_hash12(v1+vec2(1,0));\n  float n11=Simple360HDR_hash12(v1+vec2(1,1));\n  return mix(mix(n00,n01,v2.y),mix(n10,n11,v2.y),v2.x);\n}\n\nfloat Simple360HDR_noiseOct(vec2 p){\n  return\n    Simple360HDR_noise(p)*0.5+\n    Simple360HDR_noise(p*2.0+13.0)*0.25+\n    Simple360HDR_noise(p*4.0+23.0)*0.15+\n    Simple360HDR_noise(p*8.0+33.0)*0.10+\n    Simple360HDR_noise(p*16.0+43.0)*0.05;\n}\n\nvec3 Simple360HDR_skyColor(vec3 p){\n\tvec3 s1=vec3(0.2,0.5,1.0);\n\tvec3 s2=vec3(0.1,0.2,0.4)*1.5;\n    vec3 v=(Simple360HDR_noiseOct(p.xz*0.1)-0.5)*vec3(1.0);\n\tfloat d=length(p);\n    return mix(s2+v,s1+v*(12.0/max(d,20.0)),clamp(d*0.1,0.0,1.0));\n}\n\nvec3 Simple360HDR_floorColor(vec3 p){\n    vec3 v=(Simple360HDR_noiseOct(p.xz*0.1)*0.5+0.25)*vec3(0.7,0.5,0.4);\n    return v;\n}\n\nvec3 Simple360HDR_renderHDR360(vec3 rd, vec3 sun){\n    vec3 col;\n\tvec3 p;\n\tvec3 c;\n\tif (rd.y>0.0) {\n        p=rd*(5.0/rd.y);\n        c=Simple360HDR_skyColor(p);\n    } else {\n        p=rd*(-10.0/rd.y);\n        c=Simple360HDR_floorColor(p);\n\t\tc=mix(c,vec3(0.5,0.7,1.0),clamp(1.0-sqrt(-rd.y)*3.0,0.0,1.0));\n\t}\n\tvec3 skycolor=vec3(0.1,0.45,0.68);\n\tfloat d=length(p);\n\t\n\tfloat ds=clamp(dot(sun,rd),0.0,1.0);\n\tvec3 sunc=(ds>0.9997?vec3(2.0):vec3(0.0))+pow(ds,512.0)*4.0+pow(ds,128.0)*vec3(0.5)+pow(ds,4.0)*vec3(0.5);\n    if (rd.y>0.0){\n\t\tc+=vec3(0.3)*pow(1.0-abs(rd.y),3.0)*0.7;\n\t} \n    return c+sunc;\n}\n\nvec3 Simple360HDR_make360hdri(vec2 p, vec3 sun){\n    float xPI=3.14159265359;\n    vec2 thetaphi = ((p * 2.0) - vec2(1.0)) * vec2(xPI,xPI/2.0); \n    vec3 rayDirection = vec3(cos(thetaphi.y) * cos(thetaphi.x), sin(thetaphi.y), cos(thetaphi.y) * sin(thetaphi.x));\n    return Simple360HDR_renderHDR360(rayDirection,sun);\n}\n//Simple HDRI END\n\nconst float p_o15436_CamX = -3.342999935;\nconst float p_o15436_LookAtX = 1.984000000;\nconst float p_o15436_LookAtY = 1.984000000;\nconst float p_o15436_LookAtZ = -0.406000000;\nconst float p_o15436_CamD = 1.133000000;\nconst float p_o15436_CamZoom = 1.000000000;\nconst float p_o15436_SunX = -1.477000000;\nconst float p_o15436_SunY = 3.016000000;\nconst float p_o15436_SunZ = 1.352000000;\nconst float p_o15436_AmbLight = 0.250000000;\nconst float p_o15436_AmbOcclusion = 0.000000000;\nconst float p_o15436_Shadow = 0.000000000;\nconst float p_o15436_Gamma = 1.346000000;\nconst float p_o10143_BaseColor_r = 1.000000000;\nconst float p_o10143_BaseColor_g = 1.000000000;\nconst float p_o10143_BaseColor_b = 1.000000000;\nconst float p_o10143_BaseColor_a = 1.000000000;\nconst float p_o10143_Metallic = 0.000000000;\nconst float p_o10143_Specular = 0.500000000;\nconst float p_o10143_Roughness = 0.000000000;\nconst float p_o10143_Emission = 10.000000000;\nconst float p_o10143_Normal = 0.000000000;\nconst float p_o10143_Alpha = 0.000000000;\nconst float p_o10143_AmbientOcclusion = 0.000000000;\nconst float p_o10143_scale = 1.000000000;\nconst float p_o10143_TranlateX = 0.000000000;\nconst float p_o10143_TranlateY = 3.512000000;\nconst float p_o10143_TranlateZ = 0.000000000;\nconst float p_o10143_RotateX = 0.000000000;\nconst float p_o10143_RotateY = 0.250000000;\nconst float p_o10143_RotateZ = 0.000000000;\nvec3 o10143_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o10143_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10143_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10143_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o10143_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o10143_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o10143_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10143_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o10142_X = 1.000000000;\nconst float p_o10142_Y = 1.000000000;\nconst float p_o10142_Z = 0.400000000;\nconst float p_o10142_RepX = 1.000000000;\nconst float p_o10142_RepY = 1.000000000;\nconst float p_o10142_RepZ = 6.000000000;\nconst float p_o10141_l = 2.880000000;\nconst float p_o10141_r = 0.120000000;\nfloat o10143_input_sdf3d(vec3 p, float _seed_variation_) {\nvec2 o10141_0_d = abs(vec2(length((opRepLim((p),vec3(p_o10142_X,p_o10142_Y,p_o10142_Z)*2.0,vec3(p_o10142_RepX-1.0,p_o10142_RepY-1.0,p_o10142_RepZ-1.0))).yz),(opRepLim((p),vec3(p_o10142_X,p_o10142_Y,p_o10142_Z)*2.0,vec3(p_o10142_RepX-1.0,p_o10142_RepY-1.0,p_o10142_RepZ-1.0))).x)) - vec2(p_o10141_r,p_o10141_l);\nfloat o10141_0_1_sdf3d = min(max(o10141_0_d.x,o10141_0_d.y),0.0) + length(max(o10141_0_d,0.0));\nfloat o10142_0_1_sdf3d = o10141_0_1_sdf3d;\n\nreturn o10142_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o10143(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o10143_TranlateX,p_o10143_TranlateY,p_o10143_TranlateZ),vec3(p_o10143_RotateX,p_o10143_RotateY,p_o10143_RotateZ)*6.28318530718)/p_o10143_scale;\n\tfloat sdf=o10143_input_sdf3d(uv.xyz, _seed_variation_)*p_o10143_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o10143_AmbientOcclusion*o10143_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o10143_Alpha*o10143_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o10143_Normal*o10143_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o10143_Emission*o10143_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o10143_Roughness*o10143_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o10143_Specular*o10143_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o10143_Metallic*o10143_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o10143_BaseColor_r, p_o10143_BaseColor_g, p_o10143_BaseColor_b, p_o10143_BaseColor_a).rgb*o10143_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o10168_x = 3.701340000;\nconst float p_o10168_y = 0.000000000;\nconst float p_o10168_z = 0.000000000;\nconst float p_o10156_BaseColor_r = 1.000000000;\nconst float p_o10156_BaseColor_g = 1.000000000;\nconst float p_o10156_BaseColor_b = 1.000000000;\nconst float p_o10156_BaseColor_a = 1.000000000;\nconst float p_o10156_Metallic = 0.705000000;\nconst float p_o10156_Specular = 0.373000000;\nconst float p_o10156_Roughness = 1.000000000;\nconst float p_o10156_Emission = 0.000000000;\nconst float p_o10156_Normal = 0.000000000;\nconst float p_o10156_Alpha = 0.000000000;\nconst float p_o10156_AmbientOcclusion = 0.000000000;\nconst float p_o10156_scale = 1.000000000;\nconst float p_o10156_TranlateX = 0.000000000;\nconst float p_o10156_TranlateY = 0.000000000;\nconst float p_o10156_TranlateZ = 0.000000000;\nconst float p_o10156_RotateX = 0.000000000;\nconst float p_o10156_RotateY = 0.000000000;\nconst float p_o10156_RotateZ = 0.000000000;\nconst float p_o10193_translate_x = -0.530000000;\nconst float p_o10193_translate_y = -0.010000000;\nconst float p_o10191_translate_x = 6.470000000;\nconst float p_o10191_translate_y = 3.123150000;\nconst float p_o10191_rotate = 197.957800000;\nconst float p_o10191_scale_x = 1.000000000;\nconst float p_o10191_scale_y = 1.000000000;\nconst float seed_o10189 = 0.692989000;\nconst float p_o10189_repeat = 1.000000000;\nconst float p_o10189_rows = 1.930000000;\nconst float p_o10189_columns = 1.930000000;\nconst float p_o10189_row_offset = 1.000000000;\nconst float p_o10189_mortar = 0.000000000;\nconst float p_o10189_bevel = 0.000000000;\nconst float p_o10189_round = 0.000000000;\nconst float p_o10189_corner = 0.000000000;\nconst float p_o10190_f = 0.000000000;\nconst float p_o10175_g_0_pos = 0.190909000;\nconst float p_o10175_g_0_r = 1.000000000;\nconst float p_o10175_g_0_g = 1.000000000;\nconst float p_o10175_g_0_b = 1.000000000;\nconst float p_o10175_g_0_a = 1.000000000;\nconst float p_o10175_g_1_pos = 0.390909000;\nconst float p_o10175_g_1_r = 0.507812977;\nconst float p_o10175_g_1_g = 0.451000005;\nconst float p_o10175_g_1_b = 0.353087991;\nconst float p_o10175_g_1_a = 1.000000000;\nconst float p_o10175_g_2_pos = 0.663636000;\nconst float p_o10175_g_2_r = 1.000000000;\nconst float p_o10175_g_2_g = 1.000000000;\nconst float p_o10175_g_2_b = 1.000000000;\nconst float p_o10175_g_2_a = 1.000000000;\nvec4 o10175_g_gradient_fct(float x) {\n  if (x < p_o10175_g_0_pos) {\n    return vec4(p_o10175_g_0_r,p_o10175_g_0_g,p_o10175_g_0_b,p_o10175_g_0_a);\n  } else if (x < p_o10175_g_1_pos) {\n    return mix(vec4(p_o10175_g_0_r,p_o10175_g_0_g,p_o10175_g_0_b,p_o10175_g_0_a), vec4(p_o10175_g_1_r,p_o10175_g_1_g,p_o10175_g_1_b,p_o10175_g_1_a), ((x-p_o10175_g_0_pos)/(p_o10175_g_1_pos-p_o10175_g_0_pos)));\n  } else if (x < p_o10175_g_2_pos) {\n    return mix(vec4(p_o10175_g_1_r,p_o10175_g_1_g,p_o10175_g_1_b,p_o10175_g_1_a), vec4(p_o10175_g_2_r,p_o10175_g_2_g,p_o10175_g_2_b,p_o10175_g_2_a), ((x-p_o10175_g_1_pos)/(p_o10175_g_2_pos-p_o10175_g_1_pos)));\n  }\n  return vec4(p_o10175_g_2_r,p_o10175_g_2_g,p_o10175_g_2_b,p_o10175_g_2_a);\n}\nconst float p_o10170_scale = 5.635000000;\nconst float p_o10170_scale_x = 1.000000000;\nconst float p_o10170_scale_y = 1.000000000;\nconst float p_o10170_scale_z = 1.000000000;\nconst float p_o10170_transx = 0.000000000;\nconst float p_o10170_transy = 0.000000000;\nconst float p_o10170_transz = 0.000000000;\nconst float p_o10170_persistence = 0.500000000;\nconst float p_o10170_brightness = 0.000000000;\nconst float p_o10170_contrast = 7.556000000;\nfloat o10170_fbm(vec3 coord, float persistence, float _seed_variation_) {\n\tfloat normalize_factor = 0.0;\n\tfloat value = 0.0;\n\tfloat scale = 1.0;\n\tfloat size = 1.0;\n\tfor (int i = 0; i < 6; i++) {\n\t\tvalue += XsX3zB_oct_simplex3d(coord*size) * scale;\n\t\tnormalize_factor += scale;\n\t\tsize *= 2.0;\n\t\tscale *= persistence;\n\t}\n\treturn value / normalize_factor;\n}\n\nfloat o10170_bc(float f,float contrast, float brightness, float _seed_variation_) {\n\treturn f*contrast+brightness+0.5-contrast*0.5;\n}\nvec3 o10156_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\nvec4 o10189_0_rect = bricks_rb((((p).yz+vec2(0.5))-vec2(p_o10193_translate_x, p_o10193_translate_y)), vec2(p_o10189_columns, p_o10189_rows), p_o10189_repeat, p_o10189_row_offset);\nvec4 o10189_0 = brick((((p).yz+vec2(0.5))-vec2(p_o10193_translate_x, p_o10193_translate_y)), o10189_0_rect.xy, o10189_0_rect.zw, p_o10189_mortar*1.0, p_o10189_round*1.0, max(0.001, p_o10189_bevel*1.0));\nvec3 o10189_1_2_rgb = brick_random_color(o10189_0_rect.xy, o10189_0_rect.zw, float((seed_o10189+_seed_variation_)));\nvec3 o10170_0_out = vec3(o10170_bc(o10170_fbm((vec3(p_o10190_f,(transform2((((p).yz+vec2(0.5))-vec2(p_o10193_translate_x, p_o10193_translate_y)), vec2(p_o10191_translate_x*(2.0*(dot(o10189_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o10191_translate_y*(2.0*(dot(o10189_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o10191_rotate*0.01745329251*(2.0*(dot(o10189_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o10191_scale_x*(2.0*1.0-1.0), p_o10191_scale_y*(2.0*1.0-1.0)))).x,(transform2((((p).yz+vec2(0.5))-vec2(p_o10193_translate_x, p_o10193_translate_y)), vec2(p_o10191_translate_x*(2.0*(dot(o10189_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o10191_translate_y*(2.0*(dot(o10189_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o10191_rotate*0.01745329251*(2.0*(dot(o10189_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o10191_scale_x*(2.0*1.0-1.0), p_o10191_scale_y*(2.0*1.0-1.0)))).y)).xyz*vec3(p_o10170_scale_x,p_o10170_scale_y,p_o10170_scale_z)*0.5*p_o10170_scale+vec3(p_o10170_transx,p_o10170_transy,p_o10170_transz),p_o10170_persistence, _seed_variation_)*0.5+0.5,p_o10170_contrast,p_o10170_brightness, _seed_variation_));vec3 o10170_0_1_tex3d = clamp(o10170_0_out,vec3(0),vec3(1));\nvec3 o10175_0_1_tex3d = o10175_g_gradient_fct(dot(o10170_0_1_tex3d, vec3(1.0))/3.0).rgb;\nvec3 o10190_0_1_rgb = o10175_0_1_tex3d.rgb;\nvec4 o10191_0_1_rgba = vec4(o10190_0_1_rgb, 1.0);\nvec4 o10193_0_1_rgba = o10191_0_1_rgba;\nvec3 o10192_0_1_tex3d = ((o10193_0_1_rgba).rgb);\n\nreturn o10192_0_1_tex3d;\n}\nfloat o10156_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10156_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o10194_g_0_pos = 0.000000000;\nconst float p_o10194_g_0_r = 1.000000000;\nconst float p_o10194_g_0_g = 1.000000000;\nconst float p_o10194_g_0_b = 1.000000000;\nconst float p_o10194_g_0_a = 1.000000000;\nconst float p_o10194_g_1_pos = 1.000000000;\nconst float p_o10194_g_1_r = 0.000000000;\nconst float p_o10194_g_1_g = 0.000000000;\nconst float p_o10194_g_1_b = 0.000000000;\nconst float p_o10194_g_1_a = 1.000000000;\nvec4 o10194_g_gradient_fct(float x) {\n  if (x < p_o10194_g_0_pos) {\n    return vec4(p_o10194_g_0_r,p_o10194_g_0_g,p_o10194_g_0_b,p_o10194_g_0_a);\n  } else if (x < p_o10194_g_1_pos) {\n    return mix(vec4(p_o10194_g_0_r,p_o10194_g_0_g,p_o10194_g_0_b,p_o10194_g_0_a), vec4(p_o10194_g_1_r,p_o10194_g_1_g,p_o10194_g_1_b,p_o10194_g_1_a), ((x-p_o10194_g_0_pos)/(p_o10194_g_1_pos-p_o10194_g_0_pos)));\n  }\n  return vec4(p_o10194_g_1_r,p_o10194_g_1_g,p_o10194_g_1_b,p_o10194_g_1_a);\n}\nfloat o10156_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\nvec4 o10189_0_rect = bricks_rb((((p).yz+vec2(0.5))-vec2(p_o10193_translate_x, p_o10193_translate_y)), vec2(p_o10189_columns, p_o10189_rows), p_o10189_repeat, p_o10189_row_offset);\nvec4 o10189_0 = brick((((p).yz+vec2(0.5))-vec2(p_o10193_translate_x, p_o10193_translate_y)), o10189_0_rect.xy, o10189_0_rect.zw, p_o10189_mortar*1.0, p_o10189_round*1.0, max(0.001, p_o10189_bevel*1.0));\nvec3 o10189_1_2_rgb = brick_random_color(o10189_0_rect.xy, o10189_0_rect.zw, float((seed_o10189+_seed_variation_)));\nvec3 o10170_0_out = vec3(o10170_bc(o10170_fbm((vec3(p_o10190_f,(transform2((((p).yz+vec2(0.5))-vec2(p_o10193_translate_x, p_o10193_translate_y)), vec2(p_o10191_translate_x*(2.0*(dot(o10189_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o10191_translate_y*(2.0*(dot(o10189_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o10191_rotate*0.01745329251*(2.0*(dot(o10189_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o10191_scale_x*(2.0*1.0-1.0), p_o10191_scale_y*(2.0*1.0-1.0)))).x,(transform2((((p).yz+vec2(0.5))-vec2(p_o10193_translate_x, p_o10193_translate_y)), vec2(p_o10191_translate_x*(2.0*(dot(o10189_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o10191_translate_y*(2.0*(dot(o10189_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o10191_rotate*0.01745329251*(2.0*(dot(o10189_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o10191_scale_x*(2.0*1.0-1.0), p_o10191_scale_y*(2.0*1.0-1.0)))).y)).xyz*vec3(p_o10170_scale_x,p_o10170_scale_y,p_o10170_scale_z)*0.5*p_o10170_scale+vec3(p_o10170_transx,p_o10170_transy,p_o10170_transz),p_o10170_persistence, _seed_variation_)*0.5+0.5,p_o10170_contrast,p_o10170_brightness, _seed_variation_));vec3 o10170_0_1_tex3d = clamp(o10170_0_out,vec3(0),vec3(1));\nvec3 o10175_0_1_tex3d = o10175_g_gradient_fct(dot(o10170_0_1_tex3d, vec3(1.0))/3.0).rgb;\nvec3 o10190_0_1_rgb = o10175_0_1_tex3d.rgb;\nvec4 o10191_0_1_rgba = vec4(o10190_0_1_rgb, 1.0);\nvec4 o10193_0_1_rgba = o10191_0_1_rgba;\nvec3 o10192_0_1_tex3d = ((o10193_0_1_rgba).rgb);\nvec3 o10194_0_1_tex3d = o10194_g_gradient_fct(dot(o10192_0_1_tex3d, vec3(1.0))/3.0).rgb;\n\nreturn (dot(o10194_0_1_tex3d, vec3(1.0))/3.0);\n}\nvec3 o10156_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o10156_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o10156_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10156_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o10161_X = 1.000000000;\nconst float p_o10161_Y = 0.260000000;\nconst float p_o10161_Z = 0.260000000;\nconst float p_o10161_RepX = 1.000000000;\nconst float p_o10161_RepY = 24.000000000;\nconst float p_o10161_RepZ = 24.000000000;\nconst float p_o10160_sx = 0.050000000;\nconst float p_o10160_sy = 0.235000000;\nconst float p_o10160_sz = 0.235000000;\nconst float p_o10160_r = 0.020000000;\nfloat o10156_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o10160_0_q = abs((opRepLim((p),vec3(p_o10161_X,p_o10161_Y,p_o10161_Z)*2.0,vec3(p_o10161_RepX-1.0,p_o10161_RepY-1.0,p_o10161_RepZ-1.0)))) - vec3(p_o10160_sx, p_o10160_sy, p_o10160_sz);\nfloat o10160_0_1_sdf3d = length(max(o10160_0_q,0.0))+min(max(o10160_0_q.x,max(o10160_0_q.y,o10160_0_q.z)),0.0)-p_o10160_r;\nfloat o10161_0_1_sdf3d = o10160_0_1_sdf3d;\n\nreturn o10161_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o10156(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o10156_TranlateX,p_o10156_TranlateY,p_o10156_TranlateZ),vec3(p_o10156_RotateX,p_o10156_RotateY,p_o10156_RotateZ)*6.28318530718)/p_o10156_scale;\n\tfloat sdf=o10156_input_sdf3d(uv.xyz, _seed_variation_)*p_o10156_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o10156_AmbientOcclusion*o10156_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o10156_Alpha*o10156_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o10156_Normal*o10156_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o10156_Emission*o10156_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o10156_Roughness*o10156_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o10156_Specular*o10156_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o10156_Metallic*o10156_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o10156_BaseColor_r, p_o10156_BaseColor_g, p_o10156_BaseColor_b, p_o10156_BaseColor_a).rgb*o10156_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o10167_x = -0.049000000;\nconst float p_o10167_y = 0.000000000;\nconst float p_o10167_z = 0.000000000;\nconst float p_o10162_BaseColor_r = 0.324218988;\nconst float p_o10162_BaseColor_g = 0.324218988;\nconst float p_o10162_BaseColor_b = 0.324218988;\nconst float p_o10162_BaseColor_a = 1.000000000;\nconst float p_o10162_Metallic = 0.000000000;\nconst float p_o10162_Specular = 0.000000000;\nconst float p_o10162_Roughness = 1.000000000;\nconst float p_o10162_Emission = 0.000000000;\nconst float p_o10162_Normal = 0.000000000;\nconst float p_o10162_Alpha = 0.000000000;\nconst float p_o10162_AmbientOcclusion = 0.000000000;\nconst float p_o10162_scale = 1.000000000;\nconst float p_o10162_TranlateX = 0.000000000;\nconst float p_o10162_TranlateY = 0.000000000;\nconst float p_o10162_TranlateZ = 0.000000000;\nconst float p_o10162_RotateX = 0.000000000;\nconst float p_o10162_RotateY = 0.000000000;\nconst float p_o10162_RotateZ = 0.000000000;\nvec3 o10162_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o10162_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10162_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10162_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o10162_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o10162_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o10162_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10162_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o10166_sx = 0.000000000;\nconst float p_o10166_sy = 6.270000000;\nconst float p_o10166_sz = 6.140000000;\nconst float p_o10166_r = 0.000000000;\nfloat o10162_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o10166_0_q = abs((p)) - vec3(p_o10166_sx, p_o10166_sy, p_o10166_sz);\nfloat o10166_0_1_sdf3d = length(max(o10166_0_q,0.0))+min(max(o10166_0_q.x,max(o10166_0_q.y,o10166_0_q.z)),0.0)-p_o10166_r;\n\nreturn o10166_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o10162(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o10162_TranlateX,p_o10162_TranlateY,p_o10162_TranlateZ),vec3(p_o10162_RotateX,p_o10162_RotateY,p_o10162_RotateZ)*6.28318530718)/p_o10162_scale;\n\tfloat sdf=o10162_input_sdf3d(uv.xyz, _seed_variation_)*p_o10162_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o10162_AmbientOcclusion*o10162_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o10162_Alpha*o10162_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o10162_Normal*o10162_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o10162_Emission*o10162_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o10162_Roughness*o10162_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o10162_Specular*o10162_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o10162_Metallic*o10162_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o10162_BaseColor_r, p_o10162_BaseColor_g, p_o10162_BaseColor_b, p_o10162_BaseColor_a).rgb*o10162_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o10209_ax = 0.000000000;\nconst float p_o10209_ay = 90.000000000;\nconst float p_o10209_az = 0.000000000;\nconst float p_o10210_BaseColor_r = 1.000000000;\nconst float p_o10210_BaseColor_g = 1.000000000;\nconst float p_o10210_BaseColor_b = 1.000000000;\nconst float p_o10210_BaseColor_a = 1.000000000;\nconst float p_o10210_Metallic = 0.000000000;\nconst float p_o10210_Specular = 0.000000000;\nconst float p_o10210_Roughness = 1.000000000;\nconst float p_o10210_Emission = 0.000000000;\nconst float p_o10210_Normal = 0.000000000;\nconst float p_o10210_Alpha = 0.000000000;\nconst float p_o10210_AmbientOcclusion = 0.000000000;\nconst float p_o10210_scale = 1.000000000;\nconst float p_o10210_TranlateX = 0.000000000;\nconst float p_o10210_TranlateY = 4.420000000;\nconst float p_o10210_TranlateZ = 0.000000000;\nconst float p_o10210_RotateX = 0.000000000;\nconst float p_o10210_RotateY = 0.000000000;\nconst float p_o10210_RotateZ = 0.000000000;\nvec3 o10210_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o10210_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10210_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10210_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o10210_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o10210_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o10210_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10210_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o10214_sx = 4.250000000;\nconst float p_o10214_sy = 0.250000000;\nconst float p_o10214_sz = 4.010000000;\nconst float p_o10214_r = 0.010000000;\nfloat o10210_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o10214_0_q = abs((p)) - vec3(p_o10214_sx, p_o10214_sy, p_o10214_sz);\nfloat o10214_0_1_sdf3d = length(max(o10214_0_q,0.0))+min(max(o10214_0_q.x,max(o10214_0_q.y,o10214_0_q.z)),0.0)-p_o10214_r;\n\nreturn o10214_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o10210(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o10210_TranlateX,p_o10210_TranlateY,p_o10210_TranlateZ),vec3(p_o10210_RotateX,p_o10210_RotateY,p_o10210_RotateZ)*6.28318530718)/p_o10210_scale;\n\tfloat sdf=o10210_input_sdf3d(uv.xyz, _seed_variation_)*p_o10210_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o10210_AmbientOcclusion*o10210_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o10210_Alpha*o10210_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o10210_Normal*o10210_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o10210_Emission*o10210_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o10210_Roughness*o10210_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o10210_Specular*o10210_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o10210_Metallic*o10210_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o10210_BaseColor_r, p_o10210_BaseColor_g, p_o10210_BaseColor_b, p_o10210_BaseColor_a).rgb*o10210_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o10267_x = 0.000000000;\nconst float p_o10267_y = -0.119530000;\nconst float p_o10267_z = 0.000000000;\nconst float p_o10268_xyz = 1.785000000;\nconst float p_o10268_x = 1.000000000;\nconst float p_o10268_y = 1.000000000;\nconst float p_o10268_z = 1.000000000;\nconst float p_o10266_ax = 0.000000000;\nconst float p_o10266_ay = 90.000000000;\nconst float p_o10266_az = 90.000000000;\nconst float p_o10259_BaseColor_r = 1.000000000;\nconst float p_o10259_BaseColor_g = 1.000000000;\nconst float p_o10259_BaseColor_b = 1.000000000;\nconst float p_o10259_BaseColor_a = 1.000000000;\nconst float p_o10259_Metallic = 0.705000000;\nconst float p_o10259_Specular = 0.917000000;\nconst float p_o10259_Roughness = 1.000000000;\nconst float p_o10259_Emission = 0.000000000;\nconst float p_o10259_Normal = 0.000000000;\nconst float p_o10259_Alpha = 0.000000000;\nconst float p_o10259_AmbientOcclusion = 0.000000000;\nconst float p_o10259_scale = 1.000000000;\nconst float p_o10259_TranlateX = 0.000000000;\nconst float p_o10259_TranlateY = 0.000000000;\nconst float p_o10259_TranlateZ = 0.000000000;\nconst float p_o10259_RotateX = 0.000000000;\nconst float p_o10259_RotateY = 0.000000000;\nconst float p_o10259_RotateZ = 0.000000000;\nconst float p_o10245_translate_x = -0.530000000;\nconst float p_o10245_translate_y = -0.010000000;\nconst float p_o10243_translate_x = 2.180000000;\nconst float p_o10243_translate_y = 4.575000000;\nconst float p_o10243_rotate = 456.220000000;\nconst float p_o10243_scale_x = 1.000000000;\nconst float p_o10243_scale_y = 1.000000000;\nconst float seed_o10242 = 0.692989000;\nconst float p_o10242_repeat = 1.000000000;\nconst float p_o10242_rows = 1.930000000;\nconst float p_o10242_columns = 1.930000000;\nconst float p_o10242_row_offset = 1.000000000;\nconst float p_o10242_mortar = 0.000000000;\nconst float p_o10242_bevel = 0.000000000;\nconst float p_o10242_round = 0.000000000;\nconst float p_o10242_corner = 0.000000000;\nconst float p_o10241_f = 0.000000000;\nconst float p_o10227_g_0_pos = 0.081110000;\nconst float p_o10227_g_0_r = 0.000000000;\nconst float p_o10227_g_0_g = 0.000000000;\nconst float p_o10227_g_0_b = 0.000000000;\nconst float p_o10227_g_0_a = 1.000000000;\nconst float p_o10227_g_1_pos = 0.390909000;\nconst float p_o10227_g_1_r = 0.796875000;\nconst float p_o10227_g_1_g = 0.604830027;\nconst float p_o10227_g_1_b = 0.333068997;\nconst float p_o10227_g_1_a = 1.000000000;\nconst float p_o10227_g_2_pos = 0.772019000;\nconst float p_o10227_g_2_r = 0.000000000;\nconst float p_o10227_g_2_g = 0.000000000;\nconst float p_o10227_g_2_b = 0.000000000;\nconst float p_o10227_g_2_a = 1.000000000;\nvec4 o10227_g_gradient_fct(float x) {\n  if (x < p_o10227_g_0_pos) {\n    return vec4(p_o10227_g_0_r,p_o10227_g_0_g,p_o10227_g_0_b,p_o10227_g_0_a);\n  } else if (x < p_o10227_g_1_pos) {\n    return mix(vec4(p_o10227_g_0_r,p_o10227_g_0_g,p_o10227_g_0_b,p_o10227_g_0_a), vec4(p_o10227_g_1_r,p_o10227_g_1_g,p_o10227_g_1_b,p_o10227_g_1_a), ((x-p_o10227_g_0_pos)/(p_o10227_g_1_pos-p_o10227_g_0_pos)));\n  } else if (x < p_o10227_g_2_pos) {\n    return mix(vec4(p_o10227_g_1_r,p_o10227_g_1_g,p_o10227_g_1_b,p_o10227_g_1_a), vec4(p_o10227_g_2_r,p_o10227_g_2_g,p_o10227_g_2_b,p_o10227_g_2_a), ((x-p_o10227_g_1_pos)/(p_o10227_g_2_pos-p_o10227_g_1_pos)));\n  }\n  return vec4(p_o10227_g_2_r,p_o10227_g_2_g,p_o10227_g_2_b,p_o10227_g_2_a);\n}\nconst float p_o10216_scale = 2.706000000;\nconst float p_o10216_scale_x = 1.000000000;\nconst float p_o10216_scale_y = 1.000000000;\nconst float p_o10216_scale_z = 1.000000000;\nconst float p_o10216_transx = 0.000000000;\nconst float p_o10216_transy = 0.000000000;\nconst float p_o10216_transz = 0.000000000;\nconst float p_o10216_persistence = 0.500000000;\nconst float p_o10216_brightness = 0.000000000;\nconst float p_o10216_contrast = 14.000000000;\nfloat o10216_fbm(vec3 coord, float persistence, float _seed_variation_) {\n\tfloat normalize_factor = 0.0;\n\tfloat value = 0.0;\n\tfloat scale = 1.0;\n\tfloat size = 1.0;\n\tfor (int i = 0; i < 12; i++) {\n\t\tvalue += XsX3zB_oct_simplex3d(coord*size) * scale;\n\t\tnormalize_factor += scale;\n\t\tsize *= 2.0;\n\t\tscale *= persistence;\n\t}\n\treturn value / normalize_factor;\n}\n\nfloat o10216_bc(float f,float contrast, float brightness, float _seed_variation_) {\n\treturn f*contrast+brightness+0.5-contrast*0.5;\n}\nvec3 o10259_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\nvec4 o10242_0_rect = bricks_rb((((p).yz+vec2(0.5))-vec2(p_o10245_translate_x, p_o10245_translate_y)), vec2(p_o10242_columns, p_o10242_rows), p_o10242_repeat, p_o10242_row_offset);\nvec4 o10242_0 = brick((((p).yz+vec2(0.5))-vec2(p_o10245_translate_x, p_o10245_translate_y)), o10242_0_rect.xy, o10242_0_rect.zw, p_o10242_mortar*1.0, p_o10242_round*1.0, max(0.001, p_o10242_bevel*1.0));\nvec3 o10242_1_2_rgb = brick_random_color(o10242_0_rect.xy, o10242_0_rect.zw, float((seed_o10242+_seed_variation_)));\nvec3 o10216_0_out = vec3(o10216_bc(o10216_fbm((vec3(p_o10241_f,(transform2((((p).yz+vec2(0.5))-vec2(p_o10245_translate_x, p_o10245_translate_y)), vec2(p_o10243_translate_x*(2.0*(dot(o10242_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o10243_translate_y*(2.0*(dot(o10242_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o10243_rotate*0.01745329251*(2.0*(dot(o10242_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o10243_scale_x*(2.0*1.0-1.0), p_o10243_scale_y*(2.0*1.0-1.0)))).x,(transform2((((p).yz+vec2(0.5))-vec2(p_o10245_translate_x, p_o10245_translate_y)), vec2(p_o10243_translate_x*(2.0*(dot(o10242_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o10243_translate_y*(2.0*(dot(o10242_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o10243_rotate*0.01745329251*(2.0*(dot(o10242_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o10243_scale_x*(2.0*1.0-1.0), p_o10243_scale_y*(2.0*1.0-1.0)))).y)).xyz*vec3(p_o10216_scale_x,p_o10216_scale_y,p_o10216_scale_z)*0.5*p_o10216_scale+vec3(p_o10216_transx,p_o10216_transy,p_o10216_transz),p_o10216_persistence, _seed_variation_)*0.5+0.5,p_o10216_contrast,p_o10216_brightness, _seed_variation_));vec3 o10216_0_1_tex3d = clamp(o10216_0_out,vec3(0),vec3(1));\nvec3 o10227_0_1_tex3d = o10227_g_gradient_fct(dot(o10216_0_1_tex3d, vec3(1.0))/3.0).rgb;\nvec3 o10241_0_1_rgb = o10227_0_1_tex3d.rgb;\nvec4 o10243_0_1_rgba = vec4(o10241_0_1_rgb, 1.0);\nvec4 o10245_0_1_rgba = o10243_0_1_rgba;\nvec3 o10244_0_1_tex3d = ((o10245_0_1_rgba).rgb);\n\nreturn o10244_0_1_tex3d;\n}\nfloat o10259_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10259_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o10246_g_0_pos = 0.000000000;\nconst float p_o10246_g_0_r = 0.066405997;\nconst float p_o10246_g_0_g = 0.066405997;\nconst float p_o10246_g_0_b = 0.066405997;\nconst float p_o10246_g_0_a = 1.000000000;\nconst float p_o10246_g_1_pos = 1.000000000;\nconst float p_o10246_g_1_r = 1.000000000;\nconst float p_o10246_g_1_g = 1.000000000;\nconst float p_o10246_g_1_b = 1.000000000;\nconst float p_o10246_g_1_a = 1.000000000;\nvec4 o10246_g_gradient_fct(float x) {\n  if (x < p_o10246_g_0_pos) {\n    return vec4(p_o10246_g_0_r,p_o10246_g_0_g,p_o10246_g_0_b,p_o10246_g_0_a);\n  } else if (x < p_o10246_g_1_pos) {\n    return mix(vec4(p_o10246_g_0_r,p_o10246_g_0_g,p_o10246_g_0_b,p_o10246_g_0_a), vec4(p_o10246_g_1_r,p_o10246_g_1_g,p_o10246_g_1_b,p_o10246_g_1_a), ((x-p_o10246_g_0_pos)/(p_o10246_g_1_pos-p_o10246_g_0_pos)));\n  }\n  return vec4(p_o10246_g_1_r,p_o10246_g_1_g,p_o10246_g_1_b,p_o10246_g_1_a);\n}\nfloat o10259_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\nvec4 o10242_0_rect = bricks_rb((((p).yz+vec2(0.5))-vec2(p_o10245_translate_x, p_o10245_translate_y)), vec2(p_o10242_columns, p_o10242_rows), p_o10242_repeat, p_o10242_row_offset);\nvec4 o10242_0 = brick((((p).yz+vec2(0.5))-vec2(p_o10245_translate_x, p_o10245_translate_y)), o10242_0_rect.xy, o10242_0_rect.zw, p_o10242_mortar*1.0, p_o10242_round*1.0, max(0.001, p_o10242_bevel*1.0));\nvec3 o10242_1_2_rgb = brick_random_color(o10242_0_rect.xy, o10242_0_rect.zw, float((seed_o10242+_seed_variation_)));\nvec3 o10216_0_out = vec3(o10216_bc(o10216_fbm((vec3(p_o10241_f,(transform2((((p).yz+vec2(0.5))-vec2(p_o10245_translate_x, p_o10245_translate_y)), vec2(p_o10243_translate_x*(2.0*(dot(o10242_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o10243_translate_y*(2.0*(dot(o10242_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o10243_rotate*0.01745329251*(2.0*(dot(o10242_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o10243_scale_x*(2.0*1.0-1.0), p_o10243_scale_y*(2.0*1.0-1.0)))).x,(transform2((((p).yz+vec2(0.5))-vec2(p_o10245_translate_x, p_o10245_translate_y)), vec2(p_o10243_translate_x*(2.0*(dot(o10242_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o10243_translate_y*(2.0*(dot(o10242_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o10243_rotate*0.01745329251*(2.0*(dot(o10242_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o10243_scale_x*(2.0*1.0-1.0), p_o10243_scale_y*(2.0*1.0-1.0)))).y)).xyz*vec3(p_o10216_scale_x,p_o10216_scale_y,p_o10216_scale_z)*0.5*p_o10216_scale+vec3(p_o10216_transx,p_o10216_transy,p_o10216_transz),p_o10216_persistence, _seed_variation_)*0.5+0.5,p_o10216_contrast,p_o10216_brightness, _seed_variation_));vec3 o10216_0_1_tex3d = clamp(o10216_0_out,vec3(0),vec3(1));\nvec3 o10227_0_1_tex3d = o10227_g_gradient_fct(dot(o10216_0_1_tex3d, vec3(1.0))/3.0).rgb;\nvec3 o10241_0_1_rgb = o10227_0_1_tex3d.rgb;\nvec4 o10243_0_1_rgba = vec4(o10241_0_1_rgb, 1.0);\nvec4 o10245_0_1_rgba = o10243_0_1_rgba;\nvec3 o10244_0_1_tex3d = ((o10245_0_1_rgba).rgb);\nvec3 o10246_0_1_tex3d = o10246_g_gradient_fct(dot(o10244_0_1_tex3d, vec3(1.0))/3.0).rgb;\n\nreturn (dot(o10246_0_1_tex3d, vec3(1.0))/3.0);\n}\nvec3 o10259_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o10259_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o10259_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10259_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o10263_X = 1.000000000;\nconst float p_o10263_Y = 0.260000000;\nconst float p_o10263_Z = 0.260000000;\nconst float p_o10263_RepX = 1.000000000;\nconst float p_o10263_RepY = 24.000000000;\nconst float p_o10263_RepZ = 24.000000000;\nconst float p_o10222_sx = 0.050000000;\nconst float p_o10222_sy = 0.235000000;\nconst float p_o10222_sz = 0.235000000;\nconst float p_o10222_r = 0.020000000;\nfloat o10259_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o10222_0_q = abs((opRepLim((p),vec3(p_o10263_X,p_o10263_Y,p_o10263_Z)*2.0,vec3(p_o10263_RepX-1.0,p_o10263_RepY-1.0,p_o10263_RepZ-1.0)))) - vec3(p_o10222_sx, p_o10222_sy, p_o10222_sz);\nfloat o10222_0_1_sdf3d = length(max(o10222_0_q,0.0))+min(max(o10222_0_q.x,max(o10222_0_q.y,o10222_0_q.z)),0.0)-p_o10222_r;\nfloat o10263_0_1_sdf3d = o10222_0_1_sdf3d;\n\nreturn o10263_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o10259(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o10259_TranlateX,p_o10259_TranlateY,p_o10259_TranlateZ),vec3(p_o10259_RotateX,p_o10259_RotateY,p_o10259_RotateZ)*6.28318530718)/p_o10259_scale;\n\tfloat sdf=o10259_input_sdf3d(uv.xyz, _seed_variation_)*p_o10259_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o10259_AmbientOcclusion*o10259_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o10259_Alpha*o10259_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o10259_Normal*o10259_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o10259_Emission*o10259_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o10259_Roughness*o10259_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o10259_Specular*o10259_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o10259_Metallic*o10259_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o10259_BaseColor_r, p_o10259_BaseColor_g, p_o10259_BaseColor_b, p_o10259_BaseColor_a).rgb*o10259_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o10264_x = -0.058000000;\nconst float p_o10264_y = 0.000000000;\nconst float p_o10264_z = 0.000000000;\nconst float p_o10223_BaseColor_r = 0.324218988;\nconst float p_o10223_BaseColor_g = 0.324218988;\nconst float p_o10223_BaseColor_b = 0.324218988;\nconst float p_o10223_BaseColor_a = 1.000000000;\nconst float p_o10223_Metallic = 0.000000000;\nconst float p_o10223_Specular = 0.000000000;\nconst float p_o10223_Roughness = 1.000000000;\nconst float p_o10223_Emission = 0.000000000;\nconst float p_o10223_Normal = 0.000000000;\nconst float p_o10223_Alpha = 0.000000000;\nconst float p_o10223_AmbientOcclusion = 0.000000000;\nconst float p_o10223_scale = 1.000000000;\nconst float p_o10223_TranlateX = 0.000000000;\nconst float p_o10223_TranlateY = 0.000000000;\nconst float p_o10223_TranlateZ = 0.000000000;\nconst float p_o10223_RotateX = 0.000000000;\nconst float p_o10223_RotateY = 0.000000000;\nconst float p_o10223_RotateZ = 0.000000000;\nvec3 o10223_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o10223_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10223_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10223_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o10223_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o10223_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o10223_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10223_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o10221_sx = 0.000000000;\nconst float p_o10221_sy = 6.270000000;\nconst float p_o10221_sz = 6.140000000;\nconst float p_o10221_r = 0.000000000;\nfloat o10223_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o10221_0_q = abs((p)) - vec3(p_o10221_sx, p_o10221_sy, p_o10221_sz);\nfloat o10221_0_1_sdf3d = length(max(o10221_0_q,0.0))+min(max(o10221_0_q.x,max(o10221_0_q.y,o10221_0_q.z)),0.0)-p_o10221_r;\n\nreturn o10221_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o10223(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o10223_TranlateX,p_o10223_TranlateY,p_o10223_TranlateZ),vec3(p_o10223_RotateX,p_o10223_RotateY,p_o10223_RotateZ)*6.28318530718)/p_o10223_scale;\n\tfloat sdf=o10223_input_sdf3d(uv.xyz, _seed_variation_)*p_o10223_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o10223_AmbientOcclusion*o10223_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o10223_Alpha*o10223_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o10223_Normal*o10223_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o10223_Emission*o10223_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o10223_Roughness*o10223_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o10223_Specular*o10223_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o10223_Metallic*o10223_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o10223_BaseColor_r, p_o10223_BaseColor_g, p_o10223_BaseColor_b, p_o10223_BaseColor_a).rgb*o10223_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o10215_x = 0.000000000;\nconst float p_o10215_y = 1.071000000;\nconst float p_o10215_z = 0.000000000;\nconst float p_o10155_correction = 0.000000000;\nconst float p_o10148_k = 0.062000000;\nconst float p_o10149_BaseColor_r = 0.000000000;\nconst float p_o10149_BaseColor_g = 0.000000000;\nconst float p_o10149_BaseColor_b = 0.000000000;\nconst float p_o10149_BaseColor_a = 1.000000000;\nconst float p_o10149_Metallic = 0.250000000;\nconst float p_o10149_Specular = 1.000000000;\nconst float p_o10149_Roughness = 0.000000000;\nconst float p_o10149_Emission = 0.000000000;\nconst float p_o10149_Normal = 0.000000000;\nconst float p_o10149_Alpha = 0.000000000;\nconst float p_o10149_AmbientOcclusion = 0.000000000;\nconst float p_o10149_scale = 0.306000000;\nconst float p_o10149_TranlateX = 0.000000000;\nconst float p_o10149_TranlateY = 0.000000000;\nconst float p_o10149_TranlateZ = 0.000000000;\nconst float p_o10149_RotateX = 0.000000000;\nconst float p_o10149_RotateY = 0.000000000;\nconst float p_o10149_RotateZ = 0.000000000;\nvec3 o10149_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o10149_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10149_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10149_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o10149_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o10149_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o10149_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10149_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o10153_X = 0.500000000;\nconst float p_o10153_Y = 0.500000000;\nconst float p_o10153_Z = 0.500000000;\nconst float p_o10153_RepX = 14.000000000;\nconst float p_o10153_RepY = 14.000000000;\nconst float p_o10153_RepZ = 17.000000000;\nconst float p_o10154_r = 0.320000000;\nfloat o10149_input_sdf3d(vec3 p, float _seed_variation_) {\nfloat o10154_0_1_sdf3d = length((opRepLim((p),vec3(p_o10153_X,p_o10153_Y,p_o10153_Z)*2.0,vec3(p_o10153_RepX-1.0,p_o10153_RepY-1.0,p_o10153_RepZ-1.0))))-p_o10154_r;\nfloat o10153_0_1_sdf3d = o10154_0_1_sdf3d;\n\nreturn o10153_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o10149(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o10149_TranlateX,p_o10149_TranlateY,p_o10149_TranlateZ),vec3(p_o10149_RotateX,p_o10149_RotateY,p_o10149_RotateZ)*6.28318530718)/p_o10149_scale;\n\tfloat sdf=o10149_input_sdf3d(uv.xyz, _seed_variation_)*p_o10149_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o10149_AmbientOcclusion*o10149_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o10149_Alpha*o10149_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o10149_Normal*o10149_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o10149_Emission*o10149_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o10149_Roughness*o10149_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o10149_Specular*o10149_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o10149_Metallic*o10149_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o10149_BaseColor_r, p_o10149_BaseColor_g, p_o10149_BaseColor_b, p_o10149_BaseColor_a).rgb*o10149_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o10137_BaseColor_r = 0.159263998;\nconst float p_o10137_BaseColor_g = 1.000000000;\nconst float p_o10137_BaseColor_b = 0.000000000;\nconst float p_o10137_BaseColor_a = 1.000000000;\nconst float p_o10137_Metallic = 0.547000000;\nconst float p_o10137_Specular = 0.500000000;\nconst float p_o10137_Roughness = 0.059000000;\nconst float p_o10137_Emission = 0.000000000;\nconst float p_o10137_Normal = 0.000000000;\nconst float p_o10137_Alpha = 0.000000000;\nconst float p_o10137_AmbientOcclusion = 0.000000000;\nconst float p_o10137_scale = 1.000000000;\nconst float p_o10137_TranlateX = 0.000000000;\nconst float p_o10137_TranlateY = 0.000000000;\nconst float p_o10137_TranlateZ = 0.000000000;\nconst float p_o10137_RotateX = 0.000000000;\nconst float p_o10137_RotateY = 0.000000000;\nconst float p_o10137_RotateZ = 0.000000000;\nvec3 o10137_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o10137_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10137_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10137_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o10137_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o10137_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o10137_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o10137_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o10147_sx = 0.250000000;\nconst float p_o10147_sy = 0.250000000;\nconst float p_o10147_sz = 1.940000000;\nconst float p_o10147_r = 0.280000000;\nfloat o10137_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o10147_0_q = abs((p)) - vec3(p_o10147_sx, p_o10147_sy, p_o10147_sz);\nfloat o10147_0_1_sdf3d = length(max(o10147_0_q,0.0))+min(max(o10147_0_q.x,max(o10147_0_q.y,o10147_0_q.z)),0.0)-p_o10147_r;\n\nreturn o10147_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o10137(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o10137_TranlateX,p_o10137_TranlateY,p_o10137_TranlateZ),vec3(p_o10137_RotateX,p_o10137_RotateY,p_o10137_RotateZ)*6.28318530718)/p_o10137_scale;\n\tfloat sdf=o10137_input_sdf3d(uv.xyz, _seed_variation_)*p_o10137_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o10137_AmbientOcclusion*o10137_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o10137_Alpha*o10137_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o10137_Normal*o10137_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o10137_Emission*o10137_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o10137_Roughness*o10137_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o10137_Specular*o10137_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o10137_Metallic*o10137_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o10137_BaseColor_r, p_o10137_BaseColor_g, p_o10137_BaseColor_b, p_o10137_BaseColor_a).rgb*o10137_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}vec4 o15436_input_mfsdf(vec4 p, float _seed_variation_) {\nvec4 o10143_0_1_v4v4 = PBRObjectMaker_o10143((p), _seed_variation_);\nvec4 o10156_0_1_v4v4 = PBRObjectMaker_o10156((vec4((p).xyz-vec3(p_o10168_x, p_o10168_y, p_o10168_z),(p).w)), _seed_variation_);\nvec4 o10162_0_1_v4v4 = PBRObjectMaker_o10162((vec4((vec4((p).xyz-vec3(p_o10168_x, p_o10168_y, p_o10168_z),(p).w)).xyz-vec3(p_o10167_x, p_o10167_y, p_o10167_z),(vec4((p).xyz-vec3(p_o10168_x, p_o10168_y, p_o10168_z),(p).w)).w)), _seed_variation_);\nvec4 o10167_0_1_v4v4 = o10162_0_1_v4v4;\nvec4 o10169_0_1_v4v4 = sdf3dc_union(o10156_0_1_v4v4, o10167_0_1_v4v4);\nvec4 o10168_0_1_v4v4 = o10169_0_1_v4v4;\nvec4 o10156_0_3_v4v4 = PBRObjectMaker_o10156((vec4((vec4(vec3(abs((p).x),(p).yz),(p).w)).xyz-vec3(p_o10168_x, p_o10168_y, p_o10168_z),(vec4(vec3(abs((p).x),(p).yz),(p).w)).w)), _seed_variation_);\nvec4 o10162_0_3_v4v4 = PBRObjectMaker_o10162((vec4((vec4((vec4(vec3(abs((p).x),(p).yz),(p).w)).xyz-vec3(p_o10168_x, p_o10168_y, p_o10168_z),(vec4(vec3(abs((p).x),(p).yz),(p).w)).w)).xyz-vec3(p_o10167_x, p_o10167_y, p_o10167_z),(vec4((vec4(vec3(abs((p).x),(p).yz),(p).w)).xyz-vec3(p_o10168_x, p_o10168_y, p_o10168_z),(vec4(vec3(abs((p).x),(p).yz),(p).w)).w)).w)), _seed_variation_);\nvec4 o10167_0_3_v4v4 = o10162_0_3_v4v4;\nvec4 o10169_0_3_v4v4 = sdf3dc_union(o10156_0_3_v4v4, o10167_0_3_v4v4);\nvec4 o10168_0_3_v4v4 = o10169_0_3_v4v4;\nvec4 o10208_0_1_v4v4 = o10168_0_3_v4v4;\nvec4 o10156_0_5_v4v4 = PBRObjectMaker_o10156((vec4((vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).w)).xyz-vec3(p_o10168_x, p_o10168_y, p_o10168_z),(vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).w)).w)), _seed_variation_);\nvec4 o10162_0_5_v4v4 = PBRObjectMaker_o10162((vec4((vec4((vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).w)).xyz-vec3(p_o10168_x, p_o10168_y, p_o10168_z),(vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).w)).w)).xyz-vec3(p_o10167_x, p_o10167_y, p_o10167_z),(vec4((vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).w)).xyz-vec3(p_o10168_x, p_o10168_y, p_o10168_z),(vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o10209_ax, p_o10209_ay, p_o10209_az)*0.01745329251), (p).w)).w)).w)).w)), _seed_variation_);\nvec4 o10167_0_5_v4v4 = o10162_0_5_v4v4;\nvec4 o10169_0_5_v4v4 = sdf3dc_union(o10156_0_5_v4v4, o10167_0_5_v4v4);\nvec4 o10168_0_5_v4v4 = o10169_0_5_v4v4;\nvec4 o10208_0_3_v4v4 = o10168_0_5_v4v4;\nvec4 o10209_0_1_v4v4 = o10208_0_3_v4v4;\nvec4 o10210_0_1_v4v4 = PBRObjectMaker_o10210((p), _seed_variation_);\nvec4 o10259_0_1_v4v4 = PBRObjectMaker_o10259((vec4(v4v4_rotate((vec4((vec4((p).xyz-vec3(p_o10267_x, p_o10267_y, p_o10267_z),(p).w)).xyz/vec3(p_o10268_x, p_o10268_y, p_o10268_z)/p_o10268_xyz,(vec4((p).xyz-vec3(p_o10267_x, p_o10267_y, p_o10267_z),(p).w)).w)).xyz, -vec3(p_o10266_ax, p_o10266_ay, p_o10266_az)*0.01745329251), (vec4((vec4((p).xyz-vec3(p_o10267_x, p_o10267_y, p_o10267_z),(p).w)).xyz/vec3(p_o10268_x, p_o10268_y, p_o10268_z)/p_o10268_xyz,(vec4((p).xyz-vec3(p_o10267_x, p_o10267_y, p_o10267_z),(p).w)).w)).w)), _seed_variation_);\nvec4 o10223_0_1_v4v4 = PBRObjectMaker_o10223((vec4((vec4(v4v4_rotate((vec4((vec4((p).xyz-vec3(p_o10267_x, p_o10267_y, p_o10267_z),(p).w)).xyz/vec3(p_o10268_x, p_o10268_y, p_o10268_z)/p_o10268_xyz,(vec4((p).xyz-vec3(p_o10267_x, p_o10267_y, p_o10267_z),(p).w)).w)).xyz, -vec3(p_o10266_ax, p_o10266_ay, p_o10266_az)*0.01745329251), (vec4((vec4((p).xyz-vec3(p_o10267_x, p_o10267_y, p_o10267_z),(p).w)).xyz/vec3(p_o10268_x, p_o10268_y, p_o10268_z)/p_o10268_xyz,(vec4((p).xyz-vec3(p_o10267_x, p_o10267_y, p_o10267_z),(p).w)).w)).w)).xyz-vec3(p_o10264_x, p_o10264_y, p_o10264_z),(vec4(v4v4_rotate((vec4((vec4((p).xyz-vec3(p_o10267_x, p_o10267_y, p_o10267_z),(p).w)).xyz/vec3(p_o10268_x, p_o10268_y, p_o10268_z)/p_o10268_xyz,(vec4((p).xyz-vec3(p_o10267_x, p_o10267_y, p_o10267_z),(p).w)).w)).xyz, -vec3(p_o10266_ax, p_o10266_ay, p_o10266_az)*0.01745329251), (vec4((vec4((p).xyz-vec3(p_o10267_x, p_o10267_y, p_o10267_z),(p).w)).xyz/vec3(p_o10268_x, p_o10268_y, p_o10268_z)/p_o10268_xyz,(vec4((p).xyz-vec3(p_o10267_x, p_o10267_y, p_o10267_z),(p).w)).w)).w)).w)), _seed_variation_);\nvec4 o10264_0_1_v4v4 = o10223_0_1_v4v4;\nvec4 o10265_0_1_v4v4 = sdf3dc_union(o10259_0_1_v4v4, o10264_0_1_v4v4);\nvec4 o10266_0_1_v4v4 = o10265_0_1_v4v4;\nvec4 o_o10268_0=o10266_0_1_v4v4;vec4 o10268_0_1_v4v4 = vec4(o_o10268_0.xyz,o_o10268_0.w*min(min(p_o10268_x, p_o10268_y), p_o10268_z)*p_o10268_xyz);\nvec4 o10267_0_1_v4v4 = o10268_0_1_v4v4;\nvec4 o10207_0_1_v4v4 = MFSDF_Union(o10168_0_1_v4v4,o10208_0_1_v4v4,o10209_0_1_v4v4,o10210_0_1_v4v4,o10267_0_1_v4v4,o10267_0_1_v4v4,vec4(0.0,0.0,0.0,9999999.0),vec4(0.0,0.0,0.0,9999999.0));\nvec4 o10149_0_1_v4v4 = PBRObjectMaker_o10149((vec4(twistZ((vec4((p).xyz-vec3(p_o10215_x, p_o10215_y, p_o10215_z),(p).w)).xyz,(sin(iTime)*90.0)),(vec4((p).xyz-vec3(p_o10215_x, p_o10215_y, p_o10215_z),(p).w)).w)), _seed_variation_);\nvec4 o10137_0_1_v4v4 = PBRObjectMaker_o10137((vec4(twistZ((vec4((p).xyz-vec3(p_o10215_x, p_o10215_y, p_o10215_z),(p).w)).xyz,(sin(iTime)*90.0)),(vec4((p).xyz-vec3(p_o10215_x, p_o10215_y, p_o10215_z),(p).w)).w)), _seed_variation_);\nvec4 o10148_0_1_v4v4 = mfsdf3d_smooth_subtraction(o10149_0_1_v4v4, o10137_0_1_v4v4,p_o10148_k);\nvec4 o10155_0_o=o10148_0_1_v4v4;vec4 o10155_0_1_v4v4 = vec4(o10155_0_o.xyz,o10155_0_o.w/(1.0+p_o10155_correction));\nvec4 o10215_0_1_v4v4 = o10155_0_1_v4v4;\nvec4 o10136_0_1_v4v4 = MFSDF_Union(o10143_0_1_v4v4,o10207_0_1_v4v4,o10215_0_1_v4v4,vec4(0.0,0.0,0.0,9999999.0),vec4(0.0,0.0,0.0,9999999.0),vec4(0.0,0.0,0.0,9999999.0),vec4(0.0,0.0,0.0,9999999.0),vec4(0.0,0.0,0.0,9999999.0));\n\nreturn o10136_0_1_v4v4;\n}\nvec3 o15436_input_hdri(vec2 uv, float _seed_variation_) {\n\nreturn Simple360HDR_make360hdri(vec2((uv).x,-(uv).y+1.0),normalize(vec3(-p_o15436_SunX,p_o15436_SunY,-p_o15436_SunZ)));\n}\n\n//tetrahedron normal by PauloFalcao\n//https://www.shadertoy.com/view/XstGDS\nvec3 normal_o15436(vec3 p, float _seed_variation_) {  \n  const vec3 e=vec3(0.01,-0.001,0.0);\n  float v1=o15436_input_mfsdf(vec4(p+e.xyy,0.0), _seed_variation_).w;\n  float v2=o15436_input_mfsdf(vec4(p+e.yyx,0.0), _seed_variation_).w;\n  float v3=o15436_input_mfsdf(vec4(p+e.yxy,0.0), _seed_variation_).w;\n  float v4=o15436_input_mfsdf(vec4(p+e.xxx,0.0), _seed_variation_).w;\n  return normalize(vec3(v4+v1-v3-v2,v3+v4-v1-v2,v2+v4-v3-v1));\n}\n\nvoid march_o15436(inout float d,inout vec3 p,float dS, vec3 ro, vec3 rd, float _seed_variation_) {\n    for (int i=0; i < 64; i++) {\n    \tp = ro + rd*d;\n        dS = o15436_input_mfsdf(vec4(p,0.0), _seed_variation_).w;\n        d += dS;\n        if (d > 14.0 || abs(dS) < 0.001) break;\n    }\n}\n\nvec3 raymarch_o15436(vec2 uv, float _seed_variation_) {\n    uv-=0.5;\n\tvec3 cam=vec3(p_o15436_CamX,(sin(iTime*0.5)*0.8+1.3),(sin(iTime*0.9)*2.0))*p_o15436_CamZoom;\n\tvec3 lookat=vec3(p_o15436_LookAtX,p_o15436_LookAtY,p_o15436_LookAtZ);\n\tvec3 ray=normalize(lookat-cam);\n\tvec3 cX=normalize(cross(vec3(0.0,1.0,0.0),ray));\n\tvec3 cY=normalize(cross(cX,ray));\n\tvec3 rd = normalize(ray*p_o15436_CamD+cX*uv.x+cY*uv.y);\n\tvec3 ro = cam;\n\t\n\tfloat d=0.;\n\tvec3 p=vec3(0);\n\tfloat dS=0.0;\n\tmarch_o15436(d,p,dS,ro,rd, _seed_variation_);\n\t\n    vec3 color=vec3(0.0);\n\tvec3 objColor=o15436_input_mfsdf(vec4(p,1.0), _seed_variation_).xyz;   // 1 - BaseColor (r,g,b,sdf) linear (0-1) \n\tfloat objSpecular=o15436_input_mfsdf(vec4(p,4.0), _seed_variation_).x*0.2;  // 4 - Specular  (v,0,0,sdf)\n\tfloat objRoughness=o15436_input_mfsdf(vec4(p,5.0), _seed_variation_).x; // 5 - Roughness (v,0,0,sdf)\n\tvec3 light=normalize(vec3(p_o15436_SunX,p_o15436_SunY,p_o15436_SunZ));\n\tif (d<14.0) {\n\t    vec3 n=normal_o15436(p, _seed_variation_);\n\t\tfloat l=clamp(dot(-light,-n),0.0,1.0);\n\t\tvec3 ref=normalize(reflect(rd,-n));\n\t\tfloat r=clamp(dot(ref,light),0.0,1.0);\n\t\tcolor=max(vec3(p_o15436_AmbLight),max(l,p_o15436_AmbLight))*objColor+4.0*pow(r,pow(256.0,(1.0-objRoughness)))*objSpecular;\n\t\t//reflection\n\t\td=0.01;\n\t\tmarch_o15436(d,p,dS,p,ref, _seed_variation_);\n\t\tvec3 objColorRef=vec3(0);\n\t\tif (d<14.0) {\n\t\t\tobjColorRef=o15436_input_mfsdf(vec4(p,1.0), _seed_variation_).xyz;\n\t\t\tn=normal_o15436(p, _seed_variation_);\n\t\t\tl=clamp(dot(-light,-n),0.0,1.0);\n\t\t\tobjColorRef=max(l,p_o15436_AmbLight)*objColorRef;\n\t\t} else {\n\t\t\tobjColorRef=o15436_input_hdri(equirectangularMap(ref.xzy), _seed_variation_).xyz;\n\t\t}\n\t\tcolor=mix(color,objColorRef,objSpecular);\n\t} else {\n\t\tcolor=o15436_input_hdri(equirectangularMap(rd.xzy), _seed_variation_).xyz;\n\t}\n\treturn pow(color,vec3(1.0/p_o15436_Gamma));\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\nfloat minSize = min(iResolution.x, iResolution.y);\nfloat _seed_variation_ = SEED_VARIATION;\nvec2 UV = vec2(0.0, 1.0) + vec2(1.0, -1.0) * (fragCoord-0.5*(iResolution.xy-vec2(minSize)))/minSize;\nvec3 o15436_0_1_rgb = raymarch_o15436((UV), _seed_variation_);\nfragColor = vec4(o15436_0_1_rgb, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}