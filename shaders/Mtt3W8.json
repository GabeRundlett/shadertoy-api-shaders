{
    "Shader": {
        "info": {
            "date": "1469111654",
            "description": "afgafg",
            "flags": 0,
            "hasliked": 0,
            "id": "Mtt3W8",
            "likes": 0,
            "name": "Random voronoi 1 kino",
            "published": 3,
            "tags": [
                "afga"
            ],
            "usePreview": 0,
            "username": "Imsure1200q_1UWE130",
            "viewed": 616
        },
        "renderpass": [
            {
                "code": "float map( vec3 p )\n{\n    return length(p) - 1.0;\n}\nfloat formPos(float s, vec2 canvas, float maxx)\n{\n    return s / (canvas.x / canvas.y) * maxx;\n}\nfloat formray(float m, float s, float x)\n{\n    return m * s / x * mod(length(s),m*x/fract(s/m));\n}\nfloat formHike(float hike)\n{\n    return fract(hike*sin(hike / hike));\n}\nfloat trace(vec3 shape, vec3 rd)\n{\n    float t = 0.0;\n    for(int i = 0; i < 24; i++)\n    {\n        vec3 p = rd / shape;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\nvec3 formRelev(float s, vec2 canvas, float minimum, vec3 td, float time)\n{\n    float p = formPos(s, canvas, float(dot(td,td)));\n    float x = p / formray(minimum, smoothstep(0.0,1.0,float(sin(td*vec3(p)))),0.1);\n    float vx = x / p * (canvas.x / canvas.y) + max(x,minimum);\n    float rx = vx * x / p * sin(time);\n    float mixed = p / x * (rx - mod(x, vx) * minimum);\n    vec3 arc = vec3(p / fract(cos(formHike(1.1 * 2.0 * sin(float(iTimeDelta)+iTime)/(canvas.x/canvas.y)*2.0))));\n    return vec3(arc[1] * 2.0, arc[0] / length(s), arc[2] + sin(time));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 shape = formRelev(1.0, uv, 3.1, normalize(vec3(uv,1.0)), iTime / length(fragCoord.x));\n    float t = trace(shape, normalize(vec3(uv, 1.0)));\n    float fog = 1.0 / (1.0 * t * t * 0.1);\n    fragColor = vec4(vec3(fog),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}