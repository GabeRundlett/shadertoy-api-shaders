{
    "Shader": {
        "info": {
            "date": "1577101557",
            "description": "animated arrow",
            "flags": 0,
            "hasliked": 0,
            "id": "tldGRX",
            "likes": 1,
            "name": "Animated arrow",
            "published": 3,
            "tags": [
                "animation"
            ],
            "usePreview": 0,
            "username": "dtsmio",
            "viewed": 358
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415\n\nvoid rotate2d(inout vec2 v, float a) {\n    mat2 m = mat2(cos(a), -sin(a), sin(a), cos(a));\n    v = m * v;\n}\n\nfloat arrow(vec2 av) {\n    \n    float line1 = length(av - vec2(0., clamp(av.y, -0.2, 0.2)));\n    line1 = smoothstep(0.06, 0.05, line1);\n    \n    vec2 rav = av;\n    rav.y += 0.23;\n    rotate2d(rav, PI/4.);\n    \n    float line2 = length(rav - vec2(0., clamp(rav.y, 0., 0.2)));\n    line2 = smoothstep(0.06, 0.05, line2);\n\n    rotate2d(rav, -PI/2.);\n    float line3 = length(rav - vec2(0., clamp(rav.y, 0., 0.2)));\n    line3 = smoothstep(0.06, 0.05, line3);\n    \n    return clamp(line1 + line2 + line3, 0., 1.);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n    vec3 col = vec3(0);\n\n    float time = fract(iTime / 1000.) * 600.;\n    \n    float at = fract(time); // 0..1\n    at -= 0.5;\n\tat *= at * at;\n    \n    vec2 av = uv;\n    av.y += at * 6.;\n\tfloat a = arrow(av);\n    \n    float cir = length(uv);\n    cir = smoothstep(0.36, 0.35, cir);\n    \n    float ca = fract(time); // 0..1\n    ca = (ca * 6. - 1.);\n    ca *= -ca;\n    ca += 1.;\n    ca /= 2.;\n    ca = clamp(ca, 0., 1.);\n    float cir2 = length(uv - vec2(0., .65 + ca/12.));\n    cir2 = smoothstep(0.26 + ca/1., 0.15 + ca/4., cir2);\n    \n    \n    float ca2 = fract(time); // 0..1\n    ca2 = (ca2 * 6. - 5.);\n    ca2 *= -ca2;\n    ca2 += 1.;\n    ca2 /= 2.;\n    ca2 = clamp(ca2, 0., 1.);\n    float cir3 = length(uv - vec2(0., -.65 + ca2/12.));\n    cir3 = smoothstep(0.26 + ca2/1., 0.15 + ca2/4., cir3);\n\t    \n    col = vec3(cir - a - cir2 - cir3);\n    \n    fragColor = vec4(col,1.0);\n}\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}