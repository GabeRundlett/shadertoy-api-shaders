{
    "Shader": {
        "info": {
            "date": "1714696710",
            "description": "noises as energy rays",
            "flags": 8,
            "hasliked": 0,
            "id": "lfySRz",
            "likes": 6,
            "name": "Noise as Electricity rays",
            "published": 3,
            "tags": [
                "noise",
                "fbm",
                "electricity",
                "energy"
            ],
            "usePreview": 0,
            "username": "SONENEIS",
            "viewed": 176
        },
        "renderpass": [
            {
                "code": "#define sat(x) clamp(x,0.0,1.0)\n\nmat2 rot(float a){return mat2(cos(a),-sin(a),sin(a),cos(a));}\n\nfloat hash(vec3 p){\n\tp  = fract(p*0.3183099+0.1) * 17.0;\n\treturn fract(p.x*p.y*p.z*(p.x+p.y+p.z));\n\t//return fract(cos(2932.9286*sin(dot(sin(p*2938.2982),vec3(2937.9282,8279.1178,1182.3382)))));\n}\n\nfloat noise(vec3 x){\n\tvec3 i = floor(x), f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\treturn mix(mix(mix(hash(i),hash(i+vec3(1,0,0)),f.x),\n\t\tmix(hash(i+vec3(0,1,0)),hash(i+vec3(1,1,0)),f.x),f.y),\n\t\tmix(mix(hash(i+vec3(0,0,1)),hash(i+vec3(1,0,1)),f.x),\n\t\tmix(hash(i+vec3(0,1,1)),hash(i+vec3(1,1,1)),f.x),f.y),f.z);\n}\n\nfloat fbm(vec3 p,float m){\n\tfloat f = 0.0;\n\tf += 0.5000*noise(p); p = m*p*2.01;\n\tf += 0.2500*noise(p); p = m*p*2.02;\n\tf += 0.1250*noise(p); p = m*p*2.03;\n\tf += 0.0625*noise(p); p = m*p*2.01;\n\treturn f;\n}\n\nfloat tnoise(vec3 x){\n\treturn texture(iChannel0,0.005*x).r;\n}\n\nfloat tfbm(vec3 p,float m){\n\tfloat f = 0.0;\n\tf += 0.5000*tnoise(p); p = m*p*2.01;\n\tf += 0.2500*tnoise(p); p = m*p*2.02;\n\tf += 0.1250*tnoise(p); p = m*p*2.03;\n\tf += 0.0625*tnoise(p); p = m*p*2.01;\n\treturn f;\n}\n\nvoid mainImage(out vec4 fragColor,vec2 fragCoord){\n\tvec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n\tvec3 col = vec3(0.0);\n\n\tif(tnoise(vec3(sin(iTime)*20.0,uv.y*2.0,0)*5.0) < 0.5){\n\t\tcol += 0.003/abs(uv.y+0.55-(tnoise(vec3(uv.x-iTime*1.5,iTime*1.0,0)*62.0)*0.2));\n\t\tcol += 0.003/abs(uv.y-0.45-(noise(vec3(uv.x+iTime*1.5,iTime*1.0,0)*12.0)*0.1));\n\t\tcol += 0.004/abs(uv.y+0.1-(tfbm(vec3(uv.x,uv.y+iTime*1.5,0)*25.0,1.0)*0.35));\n\t}\n\tif(mod(iTime*0.5,2.0) < 1.0) col *= vec3(0.8,0.8,2);\n\telse col *= vec3(2,1.5,0.5);\n    \n    col = pow(col,vec3(0.8));\n    \n\tcol *= sin(uv.y*750.0)*0.5+0.5;\n\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "volume",
                        "id": 39,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 mainSound(int samp,float time){\n    if(mod(2.0*sin(time),2.0) < 0.9)\n        return vec2(sin(220.0*time)*(1.5+1.5*texture(iChannel0,0.1*vec2(time))));\n    else return vec2(sin(220.0*time)*0.9);\n    //return vec2(sin(220.0*time)*(sin(time*5.0)*2.0+0.5));\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    }
                ],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}