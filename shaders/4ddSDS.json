{
    "Shader": {
        "info": {
            "date": "1461245456",
            "description": "Based on shane shader : [url=https://www.shadertoy.com/view/ll2SRy]Transparent Cube Field[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "4ddSDS",
            "likes": 118,
            "name": "Fur Space 3",
            "published": 3,
            "tags": [
                "space",
                "fur",
                "3"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 15969
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - @Aiekick/2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Tuned via XShade (http://www.funparadigm.com/xshade/)\n\n/* \n\tBased on shane shader : https://www.shadertoy.com/view/ll2SRy\n*/\n\nmat3 getRotZMat(float a){return mat3(cos(a),-sin(a),0.,sin(a),cos(a),0.,0.,0.,1.);}\n\nfloat dstepf = 0.0;\n\nfloat map(vec3 p)\n{\n\tp.x += sin(p.z*1.8);\n    p.y += cos(p.z*.2) * sin(p.x*.8);\n\tp *= getRotZMat(p.z*0.8+sin(p.x)+cos(p.y));\n    p.xy = mod(p.xy, 0.3) - 0.15;\n\tdstepf += 0.003;\n\treturn length(p.xy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord - iResolution.xy*.5 )/iResolution.y;\n    vec3 rd = normalize(vec3(uv, (1.-dot(uv, uv)*.5)*.5)); \n    vec3 ro = vec3(0, 0, iTime*1.26), col = vec3(0), sp;\n\tfloat cs = cos( iTime*0.375 ), si = sin( iTime*0.375 );    \n    rd.xz = mat2(cs, si,-si, cs)*rd.xz;\n\tfloat t=0.06, layers=0., d=0., aD;\n    float thD = 0.02;\n\tfor(float i=0.; i<250.; i++)\t\n\t{\n        if(layers>15. || col.x > 1. || t>5.6) break;\n        sp = ro + rd*t;\n        d = map(sp); \n        aD = (thD-abs(d)*15./16.)/thD;\n        if(aD>0.) \n\t\t{ \n            col += aD*aD*(3.-2.*aD)/(1. + t*t*0.25)*.2; \n            layers++; \n\t\t}\n        t += max(d*.7, thD*1.5) * dstepf; \n\t}\n    col = max(col, 0.);\n    col = mix(col, vec3(min(col.x*1.5, 1.), pow(col.x, 2.5), pow(col.x, 12.)), \n              dot(sin(rd.yzx*8. + sin(rd.zxy*8.)), vec3(.1666))+0.4);\n    col = mix(col, vec3(col.x*col.x*.85, col.x, col.x*col.x*0.3), \n             dot(sin(rd.yzx*4. + sin(rd.zxy*4.)), vec3(.1666))+0.25);\n\tfragColor = vec4( clamp(col, 0., 1.), 1.0 );\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}