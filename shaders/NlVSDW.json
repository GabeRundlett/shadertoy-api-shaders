{
    "Shader": {
        "info": {
            "date": "1640706878",
            "description": "added too much stuff, looks okay",
            "flags": 0,
            "hasliked": 0,
            "id": "NlVSDW",
            "likes": 4,
            "name": "glass spirals thing",
            "published": 3,
            "tags": [
                "e"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 278
        },
        "renderpass": [
            {
                "code": "#define pi 3.14159\n\nfloat func(float a, float b) {\n    return tanh(a * b) / tanh(a);\n}\n\nfloat crv(float a, float b) {\n    float tr = 2. * max(fract(b), fract(-b)) - 1.;\n    tr *= tr * (3. - 2. * tr);\n    return func(a, 1. - func(a, tr));\n}\n\nvec3 crv(float a, vec3 v) {\n    return vec3(crv(a,v.x), crv(a, v.y), crv(a, v.z));\n}\n\nfloat thc(float a, float b) {\n    return func(a, cos(b));\n}\n\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b * crv(4., 6.28318*(c*t+d) ); // dont think 2pi is needed \n}\n\nfloat h21 (vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n    uv *= 0.8;\n    float a = 3. * atan(uv.y, uv.x);\n    float r = (1. + 0.5 * crv(1., (2./3.) * 0.5 * a / pi - 0.2 * iTime)) * length(uv);\n    //r = log(10. * r +crv(0.1, 0.5 * a /pi + 0. * r));\n    r = log(r + 0.58* cos(r));\n     \n    float b0 = 0.5 + (1. + thc(2., 4. * a + 10. * r + thc(4., 24. * r - iTime) + iTime));\n    float b01 = thc(4., 3. * a + 10. * cos(iTime) * r - iTime);\n    float b = b0 * b01 * (1. + cos(a + 10. * r - iTime));\n    float b2 = 10. * cos(3.5 * a + 10. * cos(a - 1. * iTime) +  10. * r - iTime);\n\n    float d = crv(b2 * b, 0.5 * a / pi + 2. * r - iTime);\n    float k = 480. - 40. * b0 * b01 * b; // 0.5 * b;\n    k = clamp(k, -1., 1.);\n    float s = smoothstep(-k, k, -d + 0.8 * b);\n    \n   // s = sqrt(s);\n    s *= 0.95 + 0.1 * h21(vec2(s));\n   //s = s * s * (3. - 2. * s);\n   // s *= 2. * s;\n\n  //  float s2 = clamp(2. * r * crv(10., 0.5 * a / pi + 3. * r + iTime),0.,1.);\n    \n    vec3 e = vec3(1.);\n    vec3 col = s * pal(s + 0.1 * iTime, e, e, e, vec3(0.,0.33,0.66));\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}