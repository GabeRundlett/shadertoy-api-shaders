{
    "Shader": {
        "info": {
            "date": "1553537291",
            "description": "Sum of polar angle relative to point distrib. Right: * random sign.\n= perturbation field of [url]https://shadertoy.com/view/3slXDf[/url], ( borrowed from [url]https://shadertoy.com/view/tdsSzs[/url] and [url]https://www.shadertoy.com/view/4t3SWN[/url]  ).",
            "flags": 0,
            "hasliked": 0,
            "id": "WdBXDh",
            "likes": 29,
            "name": "Gabor-noise / reac-diff like 2",
            "published": 3,
            "tags": [
                "noise",
                "texture",
                "diffusion",
                "short",
                "golf",
                "reaction",
                "fingerprint",
                "gabornoise",
                "ajax"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1009
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/3slXDf\n\n// simplified from skaplun's \"AFC Ajax\" https://shadertoy.com/view/tdsSzs\n// borrowing diviaki's \"fingerprint\" https://www.shadertoy.com/view/4t3SWN\n\n#define hash(p) (-1. + 2.* fract(sin( (p) * vec3(63.31,395.467,1) ) *43141.59265) )\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2 R = iResolution.xy,\n         V = ( 2.*u - R ) / R.y,\n         U = 45.* vec2( abs(V.x) - .5*R.x/R.y, V.y );\n    \n    float a = 0., s = 1.;\n\n    for(float i=0.; i<100.; i++){\n        vec3 h = 30.*hash(i);\n     // h.xy *=  mat2(cos( h.z/1e2*iTime + vec4(0,33,11,0))); // https://www.shadertoy.com/view/XlsyWX\n        if (V.x>0.) s = sign(h.z);\n    \ta += s * atan(U.x-h.x, U.y-h.y); // + .05*h.z*iTime;\n    }\n\n  // --- fingertips\n  //O = vec4( .5+.5*sin( 3.14*length(U) +a ) );\n    \n  // --- display perturbating field\n    O = ( .6 + .6 * cos( a + vec4(0,23,21,0)  ) ); // https://www.shadertoy.com/view/ll2cDc\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}