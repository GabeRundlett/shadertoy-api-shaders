{
    "Shader": {
        "info": {
            "date": "1526408864",
            "description": "techTranscendence \nusing some nice voronoi maths from here by csbdev https://www.shadertoy.com/view/MdtBz2",
            "flags": 0,
            "hasliked": 0,
            "id": "4dcBzX",
            "likes": 39,
            "name": "techTranscendence",
            "published": 3,
            "tags": [
                "tech"
            ],
            "usePreview": 1,
            "username": "netgrind",
            "viewed": 1182
        },
        "renderpass": [
            {
                "code": "//using some nice voronoi maths from here by csbdev https://www.shadertoy.com/view/MdtBz2\n\n#define speed .2\n\nfloat chebychev(vec3 a, vec3 b)\n{\n    return max(max(abs(a.x - b.x), abs(a.y - b.y)), abs(a.z - b.z));\n}\n\n\nfloat manhattan(vec3 a, vec3 b)\n{\n    vec3 d = abs(a - b);\n    return d.x + d.y + d.z;\n}\n\n// iq\nvec3 random3f( vec3 p )\n{\n    return fract(sin(vec3( dot(p,vec3(1.0,57.0,113.0)), \n                           dot(p,vec3(57.0,113.0,1.0)),\n                           dot(p,vec3(113.0,1.0,57.0))))*43758.5453);\n}\n\nfloat voronoi3(vec3 p)\n{\n    vec3 fp = floor(p);\n    \n    float d1 = 1./0.;\n    float d2 = 1./0.;\n    \n    for(int i = -1; i < 2; i++)\n    {\n        for(int j = -1; j < 2; j++)\n        {\n            for(int k = -1; k < 2; k++)\n            {\n                vec3 cur_p = fp + vec3(i, j, k);\n                \n                vec3 r = random3f(cur_p);\n                \n                float cd = 0.0;                    \n                cd = chebychev(p, cur_p + r);\n                d2 = min(d2, max(cd, d1));\n                d1 = min(d1, cd);\n            }\n        }\n    }\n    return clamp(max(0.0, 16.0 * (d2-d1)), 0.0, 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float piT = iTime*3.14159*speed;\n    float linearT = iTime*speed;\n    fragCoord -= iResolution.xy*.5;\n    \n    vec2 uv = fragCoord/iResolution.y;\n    \n    uv*=20.+pow(smoothstep(.3, -.3, sin(piT+.8-length(uv)*.1)), 1.)*100.;\n    \n    \n\tvec3 c = vec3(0.);\n    uv = abs(uv);\n    uv.x-=linearT*.5;\n    float d = uv.x + uv.y;\n    linearT-= d*.1;\n    uv-=33.333;\n    vec2 off = vec2(sin(cos(piT)-d), cos(sin(piT)+d))*.05;\n    float amp = 1.;\n    for(float i = 2.; i<8.; i++){\n        vec3 m = vec3(\n    \tvoronoi3(vec3(uv,i*5.+ abs(mod(linearT+.15, 2.5)-1.25))),\n    \tvoronoi3(vec3(uv,i*5.+ abs(mod(linearT+.1, 2.5)-1.25))),\n    \tvoronoi3(vec3(uv,i* 5.+ abs(mod(linearT+.05, 2.5)-1.25)))  //*/      \n        );\n        m = pow(m, vec3(2.));\n    \tuv*= .666;\n        uv+=i;\n        if(floor(mod(i, 2.))==1.){\n            c*=m;\n            uv.x+=sin(piT)*amp;\n            //uv.y+=cos(t)*amp;\n        }else{\n            c+=m;\n            uv.x-=sin(piT)*amp;\n            //uv.y-=cos(t)*amp;\n        }\n    \n    }\n    c = c*.333;\n    // Output to screen\n    fragColor = vec4(c,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "volume",
                        "id": 40,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}