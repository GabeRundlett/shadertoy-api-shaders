{
    "Shader": {
        "info": {
            "date": "1694204465",
            "description": "Brush patterns research",
            "flags": 0,
            "hasliked": 0,
            "id": "mljfzy",
            "likes": 30,
            "name": "Noise Worlds",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "leon",
            "viewed": 305
        },
        "renderpass": [
            {
                "code": "\n// Noise Worlds\n// Leon Denise\n// 2023/09/08\n\n// gyroid pattern\nfloat gyroid (vec3 p)\n{\n    return dot(sin(p),cos(p.yzx));\n}\n\n// noise\nfloat fbm (vec2 p)\n{\n    vec3 q = vec3(p, 0);\n    float result = 0., a = .5;\n    for (float i = 0.; i < 4.; ++i, a /= 2.)\n    {\n        q += (result-.5);\n        result += gyroid(q/a)*a;\n    }\n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // coordinates\n    vec2 p = 2.*(2.*fragCoord-iResolution.xy)/iResolution.y;\n    p += iTime * 0.1;\n    \n    // shape\n    float e = .3;\n    float diff = abs(fbm(p+vec2(0,e))-fbm(p-vec2(0,e)))/e;\n    float circle = length(fract(p*.5)-.5);\n    float thin = smoothstep(.5,.0,circle) * 2.;\n    float shape = smoothstep(.01/thin,0.,diff-thin+.1);\n    fragColor = vec4(shape);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}