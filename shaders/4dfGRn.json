{
    "Shader": {
        "info": {
            "date": "1357136829",
            "description": "A Julia set (fractal). It uses orbit traps for coloring",
            "flags": 0,
            "hasliked": 0,
            "id": "4dfGRn",
            "likes": 62,
            "name": "Julia - Traps 2",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "julia",
                "juliaset",
                "orbittrap",
                "traps",
                "orbittraps"
            ],
            "usePreview": 0,
            "username": "iq",
            "viewed": 6394
        },
        "renderpass": [
            {
                "code": "// Copyright Inigo Quilez, 2013 - https://iquilezles.org/\n// I am the sole copyright owner of this Work.\n// You cannot host, display, distribute or share this Work in any form,\n// including physical and digital. You cannot use this Work in any\n// commercial or non-commercial product, website or project. You cannot\n// sell this Work and you cannot mint an NFTs of it.\n// I share this Work for educational purposes, and you can link to it,\n// through an URL, proper attribution and unmodified screenshot, as part\n// of your educational material. If these conditions are too restrictive\n// please contact me and we'll definitely work it out.\n\n// Julia - Traps 1 : https://www.shadertoy.com/view/4d23WG\n// Julia - Traps 2 : https://www.shadertoy.com/view/4dfGRn\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n\n    float time = 30.0 + 0.1*iTime;\n    vec2 cc = 1.1*vec2( 0.5*cos(0.1*time) - 0.25*cos(0.2*time), \n\t                    0.5*sin(0.1*time) - 0.25*sin(0.2*time) );\n\n\tvec4 dmin = vec4(1000.0);\n    vec2 z = p;\n    for( int i=0; i<64; i++ )\n    {\n        z = cc + vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y );\n\n\t\tdmin=min(dmin, vec4(abs(0.0+z.y + 0.5*sin(z.x)), \n\t\t\t\t\t\t\tabs(1.0+z.x + 0.5*sin(z.y)), \n\t\t\t\t\t\t\tdot(z,z),\n\t\t\t\t\t\t    length( fract(z)-0.5) ) );\n    }\n    \n    vec3 col = vec3( dmin.w );\n\tcol = mix( col, vec3(1.00,0.80,0.60),     min(1.0,pow(dmin.x*0.25,0.20)) );\n    col = mix( col, vec3(0.72,0.70,0.60),     min(1.0,pow(dmin.y*0.50,0.50)) );\n\tcol = mix( col, vec3(1.00,1.00,1.00), 1.0-min(1.0,pow(dmin.z*1.00,0.15) ));\n\n\tcol = 1.25*col*col;\n    col = col*col*(3.0-2.0*col);\n\t\n    p = fragCoord/iResolution.xy;\n\tcol *= 0.5 + 0.5*pow(16.0*p.x*(1.0-p.x)*p.y*(1.0-p.y),0.15);\n\n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}