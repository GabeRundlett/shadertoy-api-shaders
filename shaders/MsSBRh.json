{
    "Shader": {
        "info": {
            "date": "1499361200",
            "description": "The inverse function of the smoothstep y(x) = x²(3-2x) has analytic inverse. Cubic as it is, it involves some trigonometric computations. In yellow, the inverse_smoothstep. In gray, the smoothstep of the inverse_smoothstep, which gives the identity.",
            "flags": 0,
            "hasliked": 0,
            "id": "MsSBRh",
            "likes": 47,
            "name": "Inverse Smoothstep",
            "published": 3,
            "tags": [
                "2d",
                "smoothstep",
                "cubic",
                "inverse"
            ],
            "usePreview": 0,
            "username": "iq",
            "viewed": 8319
        },
        "renderpass": [
            {
                "code": "// The MIT License\n// Copyright © 2017 Inigo Quilez\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// The inverse function of smoothstep, y(x) = x²·(3-2x), has analytic inverse. \n// Cubic as it is, it involves some trigonometric computations. Surely enought\n// that can be approximated but that's not the point of this shader. Computing\n// the exact inverse is.\n// \n// In yellow, the inverse_smoothstep. In gray, the smoothstep of the\n// inverse_smoothstep, which gives the identity. In blue, the smoothstep for \n// reference and symmetry of the image.\n//\n// More info on its derivation here:\n//\n// https://iquilezles.org/articles/ismoothstep\n//\n\n\n// inverse of y = x²(3-2x)\nfloat inverse_smoothstep( float x )\n{\n    return 0.5-sin(asin(1.0-2.0*x)/3.0);\n}\n\n// y = x²(3-2x)\nfloat my_smoothstep( float x )\n{\n    return x*x*(3.0-2.0*x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t\n    float dx = 1.0/iResolution.y;\n    vec2  p = ( vec2((iResolution.y-iResolution.x)/2.0,0.0)+fragCoord)/iResolution.y;\n    \n    vec3 col = vec3(0.0);\n    \n    if( p.x>0.0 && p.x<1.0 )\n    {\n        // background\n        col = vec3( 0.2 + 0.02*mod(floor(p.x*10.0)+floor(p.y*10.0),2.0) );\n\n        // gray: smoothstep of inverse_smoothstep = identity\n        {\n        float y = my_smoothstep( inverse_smoothstep( p.x ) );\n        float di = abs(p.y-y)/0.002;\n        col = mix( col, vec3(0.5,0.5,0.5), 1.0-smoothstep(0.0, 1.5, di ) );\n        }\n\n        // blue: smoothstep\n        {\n        float y = my_smoothstep( p.x );\n        float di = abs(p.y-y)/0.002;\n        col = mix( col, vec3(0.0,0.4,0.8), 1.0-smoothstep( 0.0, 2.0, di ) );\n        }\n        \n        // yellow: inverse_smoothstep\n        {\n        float y = inverse_smoothstep( p.x );\n        float di = abs(p.y-y)/0.002;\n        col = mix( col, vec3(1.0,0.7,0.0), 1.0-smoothstep( 0.0, 2.0, di ) );\n        }\n    }\n    \n    fragColor = vec4( col, 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}