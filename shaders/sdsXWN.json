{
    "Shader": {
        "info": {
            "date": "1618682428",
            "description": "Distance to a tractrix curve.",
            "flags": 0,
            "hasliked": 0,
            "id": "sdsXWN",
            "likes": 7,
            "name": "Distance to Tractrix Star",
            "published": 3,
            "tags": [
                "2d",
                "sdf",
                "distance",
                "cubic",
                "tractrix"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 268
        },
        "renderpass": [
            {
                "code": "// Check @iq's comment for a generalized version\nfloat sdTractrix(in vec2 p) {\n    p = abs(p);\n    if (p.y > p.x) p = p.yx;\n    if (p.x > 1.0) return length(vec2(p.x - 1.0, p.y));\n\n    float c = 3.0 - p.x - p.y;\n    vec2 pq = vec2(c, 0.5 * c + p.y) * 0.5 - 0.75;\n    float ppp = pq.x * pq.x * pq.x, qq = pq.y * pq.y;\n\n    float p2 = abs(pq.x), v1 = 1.5 / pq.x * pq.y, root, dist;\n    if (qq * 0.25 + ppp / 27.0 > 0.0) {\n        float v2 = v1 * sqrt(3.0 / p2);\n        if (pq.x < 0.0) root = sign(pq.y) * cosh(acosh(v2 * -sign(pq.y)) / 3.0);\n        else root = sinh(asinh(v2) / 3.0);\n        root = -2.0 * sqrt(p2 / 3.0) * root + 0.5;\n    }\n\n    else root = 2.0 * sqrt(-pq.x / 3.0) * cos(acos(v1 * sqrt(-3.0 / pq.x)) / 3.0) + 0.5;\n    vec2 cp = vec2(root, 1.0 - root);\n    float s = 1.0 - sqrt(p.x);\n\n    return length(p - cp * cp) * sign(p.y - s * s);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 center = 0.5 * iResolution.xy;\n    vec2 uv = (fragCoord - center) / iResolution.y * 2.5;\n\n    float d = sdTractrix(uv);\n\n    // Nice colors from iq\n    vec3 color = 1.0 - sign(d) * vec3(0.1, 0.4, 0.7);\n\tcolor *= 1.0 - exp(-4.0 * abs(d));\n\tcolor *= 0.8 + 0.2 * cos(140.0 * d);\n\tcolor = mix(color, vec3(1.0), 1.0 - smoothstep(0.0, 0.015, abs(d)));\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}