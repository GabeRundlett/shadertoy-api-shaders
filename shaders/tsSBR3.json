{
    "Shader": {
        "info": {
            "date": "1590493712",
            "description": "Looking at the garden through the glass block",
            "flags": 0,
            "hasliked": 0,
            "id": "tsSBR3",
            "likes": 7,
            "name": "Moving Glass Garden - fork",
            "published": 3,
            "tags": [
                "glass",
                "green",
                "block",
                "garden"
            ],
            "usePreview": 0,
            "username": "alvarobyrne",
            "viewed": 396
        },
        "renderpass": [
            {
                "code": "// Fork of \"Glass Garden\" by TAKUSAKU. https://shadertoy.com/view/3s2Bzy\n// 2020-05-26 11:46:54\n\nfloat rand (in vec2 _st) {\n    return fract(sin(dot(_st.xy, vec2(-0.370,0.200+0.0002*sin(iTime*0.1))))*757.161);\n}\n\nfloat noise (in vec2 _st) {\n\tconst vec2 d = vec2(0.0, 1.0);\n    vec2 b = floor(_st);\n    vec2 f = smoothstep(vec2(0.), vec2(0.5), fract(_st));\n    float m1 = mix(rand(b), rand(b + d.yx), f.x);\n    float m2 = mix(rand(b + d.xy), rand(b + d.yy), f.x);\n\treturn mix(m1, m2, f.x);\n}\n\nfloat fbm ( in vec2 _st) {\n    float v = 0.23 + 0.05 * sin(iTime*0.2);\n    float a = .5;\n    // Rotate to reduce axial bias\n    mat2 rot = mat2(cos(0.5), sin(0.5)+sin(iTime*0.01), -sin(0.5), acos(0.5));\n    for (int i = 0; i < 5; ++i) {\n        v += a * noise(_st);\n        _st = rot * _st * 8.0;\n        a *= 0.32;\n    }\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = (fragCoord * 2. - iResolution.xy) / min(iResolution.x, iResolution.y) * 1.7;\n   \n    vec2 co = st;\n    co.x += 0.9*sin(iTime);\n    co.y += 4.;\n\n    float len;    \n    for (int i = 0; i < 3; i++) {\n        len = length(co);\n        co.x +=  sin(co.y + iTime * 0.620)*0.;\n        co.y +=  cos(co.x + iTime * 0.164)*0.1;\n    }\n    len -= 3.;\n     \n    vec3 col = vec3(0.);\n\n    vec2 q = vec2(0.);\n    q.x = fbm( st + 1.0);\n    q.y = fbm( st + vec2(-0.450,0.650));\n\n    vec2 r = vec2(0.);\n    r.x = fbm( st + 1.0*q + vec2(0.570,0.520)+ 0.16*iTime );\n    r.y = fbm( st + 1.0*q + vec2(0.340,-0.570)+ 0.1*iTime);\n    \n    for (float i = 0.; i < 3.; i++) {\n        r += 1.0 / abs(mod(st.xy+vec2(0.4*iTime,0.), 0.732* i) * 10.) * 1.;// Glass block grid\n    }\n    float f = fbm(st+r);\n    \n    col = mix(col, cos(len + vec3(0.0, 1.0, 0.3)), 1.0);\n    col = mix(vec3(0.562,0.680,0.482), vec3(0.357,0.518,0.600), col);\n    \n    fragColor = vec4(2.0*(f*f*f*f+.6*f*f+.5*f)*col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}