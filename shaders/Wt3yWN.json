{
    "Shader": {
        "info": {
            "date": "1609048152",
            "description": "Pixel values by frequency ranging from 400 THz at uv.x = 0 to 790 THz at uv.x = 1. https://en.wikipedia.org/wiki/Visible_spectrum",
            "flags": 0,
            "hasliked": 0,
            "id": "Wt3yWN",
            "likes": 1,
            "name": "Visible Spectrum",
            "published": 3,
            "tags": [
                "spectrum"
            ],
            "usePreview": 0,
            "username": "redmenace07",
            "viewed": 305
        },
        "renderpass": [
            {
                "code": "vec3 pixelFromFreq(float freq /* x100 THz */ ) {\n    return step(4.0, freq) * step(freq, 5.2) * vec3(1.0, (freq - 4.0)/1.2, 0.0)\n        + step(5.2, freq) * step(freq, 5.65) * vec3(1.0 - (freq - 5.2)/0.45, 1.0, 0.0)\n        + step(5.65, freq) * step(freq, 6.1) * vec3(0.0, 1.0, (freq - 5.65)/0.45)\n        + step(6.1, freq) * step(freq, 6.45) * vec3(0.0, 1.0 - (freq - 6.1)/0.35, 1.0)\n        + step(6.45, freq) * step(freq, 7.9) * vec3((freq - 6.45)/1.45, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float freq = 4.0 + 3.9 * uv.x;\n\n    vec3 col = pixelFromFreq(freq);\n\n    // Output to screen\n    fragColor = vec4(col * 0.1 * (step(0.008, mod(freq, 0.5)) + 9.0), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}