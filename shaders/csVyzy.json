{
    "Shader": {
        "info": {
            "date": "1696266220",
            "description": "PC 4k intro for Linux released at Deadline 2023\nPouet: https://www.pouet.net/prod.php?which=95215",
            "flags": 64,
            "hasliked": 0,
            "id": "csVyzy",
            "likes": 19,
            "name": "l'enveloppe",
            "published": 3,
            "tags": [
                "2d",
                "intro",
                "demoscene",
                "deadline2023"
            ],
            "usePreview": 0,
            "username": "NinjaKoala",
            "viewed": 315
        },
        "renderpass": [
            {
                "code": "vec2 p0;\nvec2 p1;\nvec2 p2;\nvec2 p3;\n\nvec2 q0;\nvec2 q1;\nvec2 q2;\nvec2 q3;\n\nfloat spb;\nfloat spm;\n\nfloat eventm3;\nfloat eventm2;\nfloat eventm1;\nfloat event0;\nfloat event0p5;\nfloat event1;\nfloat event1p5;\nfloat event2;\nfloat event2p3;\nfloat event2p5;\nfloat event2p6;\nfloat event2p7;\nfloat event3;\nfloat event3p5;\nfloat event4;\nfloat event4p2;\nfloat event4p3;\nfloat event4p4;\nfloat event4p5;\nfloat event4p6;\nfloat event4p7;\nfloat event5;\nfloat event5p5;\nfloat event6;\nfloat event6p5;\nfloat event7;\nfloat event8;\nfloat event8p5;\nfloat event9;\nfloat event10;\nfloat event11;\nfloat event11p5;\nfloat event12;\nfloat event13;\nfloat event14;\nfloat event15;\nfloat event16;\nfloat event17;\nfloat event18;\nfloat event19;\nfloat event20;\n\nfloat pi = 3.1416;\n\nfloat rad = .4;\nfloat big = 1e6;\n\nvec3 col1 = vec3(.85,.3,.2);\nvec3 col2 = vec3(.2,.5,.2);\nvec3 col3 = vec3(.1,.4,.4);\n\nvec4 random_curve[] = vec4[](vec4(-5./14., 11./70., 17./80., 25./66.), vec4(-13./61., 33./89., -2./51., -3./92.), vec4(-15./56., -1./4., 1./63., 4./19.));\n\nmat2 rot(float deg){\n\treturn mat2(cos(deg),sin(deg),-sin(deg),cos(deg));\n}\n\nfloat beat_time(float t){\n\tfloat a = 2.*pi / spb;\n\treturn t + sin(a*t)/a;\n}\n\nvec2 cubic_bezier(vec2 p0, vec2 p1, vec2 p2, vec2 p3, float t){\n\treturn mix(mix(mix(p0,p1,t),mix(p1,p2,t),t),mix(mix(p1,p2,t),mix(p2,p3,t),t),t);\n}\n\nvec2 cubic_bezier_diff(vec2 p0, vec2 p1, vec2 p2, vec2 p3, float t){\n\treturn mix(mix(p1,p2,t),mix(p2,p3,t),t)-mix(mix(p0,p1,t),mix(p1,p2,t),t);\n}\n\n\n\nvec2 parametric(float t, float curve){\n\tif(curve == 4.){\n\t\tif(t < .5){\n\t\t\treturn cubic_bezier(p0,p1,p2,p3,2.*t);\n\t\t}\n\t\treturn cubic_bezier(q0,q1,q2,q3,2.*t-1.);\n\t}\n\n\tt *= 2.*pi;\n\n\tif(curve == 0.){\n\t\treturn rad*vec2(sin(t),cos(t));\n\t}\n\tif(curve == 1.){\n\t\tt*=.5;\n\t\treturn rad*cos(3.*t)*vec2(sin(t),cos(t));\n\t}\n\tif(curve == 2.){\n\t\treturn .4*rad*vec2(2.*cos(t)+cos(2.*t),-2.*sin(t)+sin(2.*t)).yx-vec2(0.,.12);\n\t}\n\tif(curve == 3.){\n\t\treturn 1.2*rad*t*vec2(sin(3.*t),cos(3.*t))/2./pi;\n\t}\n\tif(curve == 5.){\n\t\tvec2 val=vec2(0);\n\t\tfor(int i=1;i<4;i++){\n\t\t\tval += random_curve[i-1].xz * cos(float(i)*t) / float(i);\n\t\t\tval += random_curve[i-1].yw * sin(float(i)*t) / float(i);\n\t\t}\n\n\t\treturn val;\n\t}\n}\n\nvec2 parametric_diff(float t, float curve){\n\tif(curve == 4.){\n\t\tif(t < .5){\n\t\t\treturn 2.*cubic_bezier_diff(p0,p1,p2,p3,2.*t);\n\t\t}\n\t\treturn 2.*cubic_bezier_diff(q0,q1,q2,q3,2.*t-1.);\n\t}\n\n\tt *= 2.*pi;\n\t\n\tif(curve == 0.){\n\t\treturn 2.*pi*rad*vec2(cos(t),-sin(t));\n\t}\n\tif(curve == 1.){\n\t\tt*=.5;\n\t\treturn rad*2.*pi*vec2(cos(3.*t)*cos(t) - 3.*sin(3.*t)*sin(t),-3.*cos(t)*sin(3.*t) - cos(3.*t)*sin(t));\n\t}\n\tif(curve == 2.){\n\t\tif(abs(t) < 1./big){\n\t\t\treturn vec2(0,1);\n\t\t}\n\t\treturn .4*rad*4.*pi*vec2(-sin(t)-sin(2.*t),-cos(t)+cos(2.*t)).yx;\n\t}\n\tif(curve == 3.){\n\t\treturn 1.2*rad*vec2(3.*t*cos(3.*t) + sin(3.*t),-3.*t*sin(3.*t) + cos(3.*t));\n\t}\n\tif(curve == 5.){\n\t\tvec2 val = vec2(0);\n\t\tfor(int i=1;i<4;i++){\n\t\t\tval += float(i) * random_curve[i-1].yw * cos(float(i)*t) / float(i);\n\t\t\tval -= float(i) * random_curve[i-1].xz * sin(float(i)*t) / float(i);\n\t\t}\n\t\treturn pi*val;\n\t}\n}\n\nvec3 get_normal(float t, float curve){\n\tvec2 p0 = parametric(t,curve);\n\tvec2 tang = normalize(parametric_diff(t,curve));\n\n\treturn vec3(tang,-dot(tang,p0));\n}\n\nvec3 get_tangent(float t, float curve){\n\tvec2 p0 = parametric(t,curve);\n\tvec2 tang = parametric_diff(t,curve);\n\tvec2 nor = normalize(vec2(tang.y,-tang.x));\n\n\treturn vec3(nor,-dot(nor,p0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    p0=vec2(-.5*iResolution.x/iResolution.y,.4);\n    p1=vec2(-.3,.2);\n    p2=vec2(.2,-.1);\n    p3=vec2(.0,-.5);\n\n    q0=vec2(.5*iResolution.x/iResolution.y,-.2);\n    q1=vec2(.4,-.1);\n    q2=vec2(.8,.2);\n    q3=vec2(.3,.5);\n\n\tspb = 60. / 130.;\n\tspm = 4. * spb ;\n\n\teventm3=0.;\n\teventm2=eventm3+1.*spb;\n\teventm1=eventm2+7.*spb;\n\tevent0=eventm1+7.*spb;\n\tevent0p5=event0+1.*spb;\n\tevent1=event0+5.*spb;\n\tevent1p5=event0+6.*spb;\n\tevent2=event1+4.*spb;\n\tevent2p3=event2+2.*spb;\n\tevent2p5=event2+4.*spb;\n\tevent2p6=event2+6.*spb;\n\tevent2p7=event2+8.*spb;\n\tevent3=event2+10.*spb;\n\tevent3p5=event3+1.*spb;\n\tevent4=event3+3.*spb;\n\tevent4p2=event3+10.*spb;\n\tevent4p3=event3+12.*spb;\n\tevent4p4=event3+22.*spb;\n\tevent4p5=event3+24.*spb;\n\tevent4p6=event3+28.*spb;\n\tevent4p7=event3+30.*spb;\n\tevent5=event4+26.*spb;\n\tevent5p5=event5+1.*spb;\n\tevent6=event5+3.*spb;\n\tevent6p5=event6+2.*spb;\n\tevent7=event6+8.*spb;\n\tevent8=event7+16.*spb;\n\tevent8p5=event8+1.*spb;\n\tevent9=event8+21.*spb;\n\tevent10=event9+20.*spb;\n\tevent11=event10+20.*spb;\n\tevent11p5=event11+1.*spb;\n\tevent12=event11+3.*spb;\n\tevent13=event12+2.*spb;\n\tevent14=event13+20.*spb;\n\tevent15=event14+2.*spb;\n\tevent16=event15+2.*spb;\n\tevent17=event16+18.*spb;\n\tevent18=event17+0.*spb;\n\tevent19=event18+8.*spb;\n\tevent20=96.;\n\n\tvec2 uv = gl_FragCoord.xy / iResolution.xy;\n\tuv -=.5;\n\tuv.x *= iResolution.x / iResolution.y;\n\n\tfloat border = 1./iResolution.y;\n\tfloat dis = big;\n\tfloat curve, speed, lb, ub, radius, stepsize, zoom, thickness, deg;\n\n\tvec3 bg_col = vec3(.11);\n\n\tvec3 col = bg_col;\n\tvec3 line_col;\n\n\tvec2 mid;\n\n\tcurve = 0.;\n\tstepsize = .01;\n\tmid = vec2(0);\n\tradius = 1.;\n\tlb = 0.;\n\tub = 0.;\n\tspeed = 0.;\n\tzoom = 1.;\n\tthickness = .001;\n\tdeg = 0.;\n\n\tif(iTime < event20){\n\t\tstepsize = .001;\n\t\tcurve = 5.;\n\t\tub = .69-clamp((iTime-event15)/(event17-event15),0.,.69);\n\t\tub = .47-ub*ub;\n\n\t\tfloat lb_offset = .1;\n\n\t\tlb = clamp(ub - lb_offset,0.,1.);\n\n\t}\n\tif(iTime < event14){\n\t\tub = (iTime-event11)/(event14-event11)*.7;\n\n\t\tfloat lb_offset = mix(0.,.1,clamp((iTime-event11p5)/(event12-event11p5),0.,1.));\n\t\tlb_offset = mix(lb_offset,0.,clamp((iTime-event13)/(event14-event13),0.,1.));\n\n\t\tlb = clamp(ub - lb_offset,0.,1.);\n\t}\n\tif(iTime < event11){\n\t\tcurve = 1.;\n\t\tzoom = .5;\n\t\tstepsize = .01;\n\n\t\tlb = floor(smoothstep(event10,event11,iTime)/stepsize)*stepsize;\n\t\tub = smoothstep(event8p5,event9,iTime);\n\n\t\tmid = -parametric(ub,curve);\n\n\t\tvec2 nor = get_tangent(ub,curve).xy;\n\t\tvec2 tang = get_normal(ub,curve).xy;\n\n\t\tspeed = 0.;\n\n\t\tif(iTime > event9){\n\t\t\tspeed = -2.*stepsize;\n\t\t}\n\t\tub *= (1.-stepsize);\n\t}\n\tif(iTime < event8){\n\t\tmid = vec2(0);\n\t\tcurve = 2.;\n\t\tradius = 1000.;\n\t\tlb = 0.;\n\t\tub = smoothstep(event5p5,event6,iTime) * (1. - stepsize);\n\t\tfloat pulse = .4*sin(beat_time(iTime-event5p5)*2.*pi);\n\t\tzoom = 1.;\n\t\tspeed = 0.;\n\t\tif(iTime > event6){\n\t\t\tzoom = 1. - pulse;\n\t\t}\n\t\tif(iTime > event7){\n\t\t\tlb = floor(smoothstep(event7,event8,iTime)/stepsize)*stepsize;\n\t\t}\n\t}\n\tif(iTime < event5){\n\t\tcurve = 1.;\n\t\tradius = 1.;\n\t\tlb = floor(smoothstep(event4p6,event4p7,iTime)/stepsize)*stepsize;\n\t\tub = smoothstep(event3p5,event4,iTime) * (1. - stepsize);\n\t\tspeed = -2.*stepsize;\n\t\tmid = mix(vec2(.5,0),vec2(-.3,-.1),smoothstep(event4p2,event4p3,iTime));\n\t\tzoom = mix(1.,.6,smoothstep(event4p2,event4p3,iTime));\n\t\tdeg = mix(0.,pi/3.,smoothstep(event4p2,event4p3,iTime));\n\t\tmid = mix(mid,vec2(-.6,.4),smoothstep(event4p4,event4p5,iTime));\n\t\tzoom = mix(zoom,1.2,smoothstep(event4p4,event4p5,iTime));\n\t\tdeg = mix(deg,pi*2./3.,smoothstep(event4p4,event4p5,iTime));\n\t}\n\tif(iTime < event3){\n\t\tdeg = 0.;\n\t\tstepsize = .005;\n\t\tzoom = .3;\n\t\tmid = vec2(-.1,.1);\n\t\tcurve = 3.;\n\t\tlb = floor(smoothstep(event2p7,event3,iTime)/stepsize)*stepsize;\n\t\tub = 1.;\n\t\tspeed = 0.;\n\t}\n\tif(iTime < event2p7){\n\t\tzoom = .3;\n\t\tlb = 0.;\n\t\tub = smoothstep(event2p6,event2p7,iTime);\n\t}\n\tif(iTime < event2p6){\n\t\tstepsize = .008;\n\t\tzoom = .5;\n\t\tmid = vec2(.2,.2);\n\t\tlb = floor(smoothstep(event2p5,event2p6,iTime)/stepsize)*stepsize;\n\t\tub = 1.;\n\t}\n\tif(iTime < event2p5){\n\t\tlb = 0.;\n\t\tub = smoothstep(event2p3,event2p5,iTime);\n\t}\n\tif(iTime < event2p3){\n\t\tstepsize = .01;\n\t\tzoom = 1.;\n\t\tmid = vec2(0);\n\t\tlb = floor(smoothstep(event2,event2p3,iTime)/stepsize)*stepsize;\n\t\tub = 1.;\n\t}\n\tif(iTime < event2){\n\t\tlb = 0.;\n\t\tub = smoothstep(event1p5,event2,iTime);\n\t}\n\tif(iTime < event1p5){\n\t\tcurve = 0.;\n\t\tlb = 0.;\n\t\tub = 1. - stepsize;\n\t\tzoom = mix(1.,.3,smoothstep(event1,event1p5,iTime));\n\t}\n\tif(iTime < event1){\n\t\tzoom = 1.;\n\t\tlb = 0.;\n\t\tub = smoothstep(event0p5,event1,iTime)*(1. - stepsize);\n\t}\n\tif(iTime < event0){\n\t\tcurve = 4.;\n\t\tlb = floor(smoothstep(eventm1,event0,iTime)/stepsize)*stepsize;\n\t\tub = 1.;\n\t}\n\tif(iTime < eventm1){\n\t\tlb = 0.;\n\t\tub = smoothstep(eventm2,eventm1,iTime);\n\t}\n\n\tborder *= zoom;\n\tuv *= zoom;\n\tuv -= mid;\n\n\tfor(float t=lb;t<ub;t+=stepsize){\n\t\tfloat tt = t+beat_time(iTime)*speed;\n\n\t\tvec2 p0 = parametric(tt,curve) * rot(deg);\n\t\tvec3 tang = get_tangent(tt,curve);\n\t\tvec3 nor = get_normal(tt,curve);\n\n\t\ttang.xy *= rot(deg);\n\t\tnor.xy *= rot(deg);\n\n\t\tdis = abs(length(p0+tang.xy*radius-uv)-radius)-thickness;\n\n\t\tfloat nor_dis = dot(vec3(uv,1),nor);\n\t\tline_col = mix(col1,mix(col2,col3,sign(nor_dis)*.5+.5),abs(nor_dis*2.));\n\n\t\tcol = mix(line_col,col,.5+.5*smoothstep(-border,border,dis));\n\n\t}\n\n\tcol = mix(col,bg_col,smoothstep(event18,event19,iTime));\n\n\tfragColor  = vec4(col,1);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 34836,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/user-843867424/lenveloppe"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}