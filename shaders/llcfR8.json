{
    "Shader": {
        "info": {
            "date": "1538580537",
            "description": "Curve Graphing",
            "flags": 0,
            "hasliked": 0,
            "id": "llcfR8",
            "likes": 3,
            "name": "Curve Graphing",
            "published": 3,
            "tags": [
                "2d",
                "graphing",
                "ploating"
            ],
            "usePreview": 0,
            "username": "hk_shao",
            "viewed": 666
        },
        "renderpass": [
            {
                "code": "#define LINE_SIZE 2.0\n#define GRID_LINE_SIZE 1.0\n#define GRID_AXIS_SIZE 3.0\n#define GRID_LINES 1.0\n#define GRAD_OFFS vec2(0.0001 * ZOOM, 0.0)\n#define GRAD(f, p) (vec2(f(p) - f(p + GRAD_OFFS.xy), f(p) - f(p + GRAD_OFFS.yx)) / GRAD_OFFS.xx)\n#define PLOT(f, c, d, p) d = mix(c, d, smoothstep(0.0, (LINE_SIZE / iResolution.y * ZOOM), abs(f(p) / length(GRAD(f,p)))))\n\n#define PI (atan(1.0) * 4.0)\n#define ZOOM 20.0\n\nfloat Func(vec2 p)\n{\n\tfloat y = tan(sin(iTime) * p.x) * cos(iTime);\n    \n\treturn p.y - y;\n}\n\nfloat Circle(vec2 p)\n{\n\tfloat z = p.x*p.x + p.y*p.y - 25.0;\n    \n\treturn z;\n}\n\nfloat Heart(vec2 p)\n{\n\tfloat z = pow(p.x, 2.0) + pow(p.y - pow(pow(p.x, 2.0),1.0 / 3.0), 2.0) - 4.0;\n    \n\treturn z;\n}\n\nfloat grid(vec2 p)\n{\n\tvec2 uv = mod(p,1.0 / GRID_LINES);\n\n\tfloat halfScale = 1.0 / GRID_LINES / 2.0;\n\n\tfloat gridRad = (GRID_LINE_SIZE / iResolution.y) * ZOOM;\n\tfloat grid = halfScale - max(abs(uv.x - halfScale), abs(uv.y - halfScale));\n\tgrid = smoothstep(0.0, gridRad, grid);\n\n\tfloat axisRad = (GRID_AXIS_SIZE / iResolution.y) * ZOOM;\n\tfloat axis = min(abs(p.x), abs(p.y));\n\taxis = smoothstep(axisRad - 0.05, axisRad, axis);\n\n\treturn min(grid, axis);\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = ((gl_FragCoord.xy - iMouse.xy) / iResolution.y) * ZOOM;\n\n\tvec3 col = vec3(grid(uv) * 0.45 + 0.55);\n\n\t\tPLOT(Circle, vec3(0,0,1), col, uv);\n\n\t\tPLOT(Heart, vec3(1,0,0), col, uv);\n\n\t\tPLOT(Func, vec3(1,0,1), col, uv);\n\n\tfragColor = vec4(col, 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}