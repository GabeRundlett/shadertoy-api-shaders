{
    "Shader": {
        "info": {
            "date": "1503160549",
            "description": "experiment",
            "flags": 0,
            "hasliked": 0,
            "id": "XtsyRr",
            "likes": 20,
            "name": "Dusty Noise",
            "published": 3,
            "tags": [
                "noise",
                "rizvannernoise"
            ],
            "usePreview": 0,
            "username": "rizvanner",
            "viewed": 959
        },
        "renderpass": [
            {
                "code": "float size = 1.0; //best 1.0\nfloat offsetIntensity = 5.0; //best 5.0\nfloat rotation = 360.0; //best 360.0\n\nfloat random(in vec2 p)\n{ \n      return fract(sin(dot(p.xy, vec2(12.9898,78.233))) * 43758.5453123); \n}\n\nfloat noise (in vec2 p)\n{\n  vec2 i = floor(p);\n  vec2 f = fract(p);\n\n  float a = random(i);\n  float b = random(i + vec2(1.0, 0.0));\n  float c = random(i + vec2(0.0, 1.0));\n  float d = random(i + vec2(1.0, 1.0));\n\n  vec2 u = f * f * (3.0 - 2.0 * f);\n\n  return mix(a, b, u.x) + (c - a)* u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\n\nfloat fbm(in vec2 p)\n{\n  float value = 0.0;\n  float amplitude = 1.;\n  float frequency = 2.;\n\n  for (int i = 0; i < 16; i++)\n  {\n    value += amplitude * noise(p);\n    p *= 3.;\n    amplitude *= .5;\n  }\n    \n  return value;\n}\n\nvec4 mainNoise(vec2 uv)\n{\n    return vec4( fbm(uv + (fbm(uv) * offsetIntensity) ) );\n}\n\nvec2 rotate(vec2 uv, float a)\n{\n\treturn vec2(uv.x*cos(a)-uv.y*sin(a),uv.y*cos(a)+uv.x*sin(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 aspect = vec2(iResolution.x / iResolution.y, 1.0);\n    vec2 uv = (fragCoord.xy / iResolution.xy) * aspect;\n\n    uv *= size;\n    \n\tfloat f = 0.0;\n    \n\tf  = 0.5000 * mainNoise( 1.0*uv ).r; uv = rotate(uv, radians(rotation * 0.8));\n\tf += 0.2500 * mainNoise( 4.0*uv ).r; uv = rotate(uv, radians(rotation * 0.7));\n\tf += 0.02500 * mainNoise( 8.0*uv ).r; uv = rotate(uv, radians(-rotation * 0.6));\n\tf += 0.00125 * mainNoise( 16.0*uv ).r; uv = rotate(uv, radians(rotation * 0.5));\n    \n\tf += 0.0250 * mainNoise( 32.0*uv ).r; uv = rotate(uv, radians(rotation * 0.4));\n    f += 0.0150 * mainNoise( 64.0*uv ).r; uv = rotate(uv, radians(-rotation * 0.3));\n    \n\tf = 0.8*f; //adjust brightness\n\n    \n\tfragColor = vec4(vec3(f), 1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}