{
    "Shader": {
        "info": {
            "date": "1690315465",
            "description": "and for the fun of it - here's another one ...because the bird deserves some attention - shortly after its death ;-)",
            "flags": 0,
            "hasliked": 0,
            "id": "DtXyzr",
            "likes": 34,
            "name": "death of a logo",
            "published": 3,
            "tags": [
                "logo",
                "x",
                "twitter"
            ],
            "usePreview": 0,
            "username": "flockaroo",
            "viewed": 420
        },
        "renderpass": [
            {
                "code": "// created by florian berger (flockaroo) - 2033\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// death of a logo\n\nfloat linstep(float a, float b, float x) { return clamp((x-a)/(b-a),0.,1.); }\nfloat smin(float a, float b, float k) { return mix(a,b,linstep(-2.*k,2.*k,a-b))-k*linstep(-2.*k,0.,-abs(a+b)); }\nfloat smax(float a, float b, float r) { return -smin(-a,-b,r); }\n\nfloat X11=0.;\n\nfloat distX2(vec2 p)\n{\n    float W=.8;\n    float H=1.;\n    float w1=.15;\n    float w2=.04;\n    float w3=.03;\n    float sr=.007;\n    float dX11=.015;\n    \n    float d=10000.;\n    \n    float d1,d2,dh,dThick;\n    dh=abs(p.y)-H*.5;\n    \n    vec2 Xn;\n    \n    Xn=normalize(vec2(H+.05-X11*.03,W+X11*.03));\n    float d10=dot(p,Xn);\n    d1=abs(d10)-w1*.5;\n    d1=smax(d1,dh,sr);\n    \n    Xn=normalize(vec2(-(H-.05+X11*.03),W-X11*.03));\n    float d20=dot(p,Xn);\n    d2=abs(d20+X11*(w2+dX11)*.5*sign(d10))-w2*.5;\n    d2=smax(d2,dh,sr);\n    \n    d=smin(d1,d2,sr);\n    d=smax(d,-d1-w3-X11*w1,sr);\n    d=smax(d,-abs(d20)+(dX11*(-1.5+2.*X11)),sr);\n    return d;\n}\n\nfloat D=.15;\nfloat distX(vec3 p)\n{\n    float sr=.007;\n    float d=distX2(p.xy);\n    float dThick=abs(p.z)-D*.5;\n    d=smax(d,dThick,sr);\n    return d;\n}\n\nfloat distTw2(vec2 p) {\n    float d1,d2,d=1000.;\n    d1=length(p)-1.;\n    d=min(d,d1);\n    d1=length(p-vec2(-.5,-.04))-.8;\n    d=max(d,-d1);\n    d=max(d,p.y);\n    d1=length(p-vec2(.647,.06))-.36;\n    d=min(d,d1);\n\n    float dw=1000.;\n    d1=length(p-vec2(.01,-.31))-.38;\n    d2=length(p-vec2(-.28,-.08))-.366;\n    d1=max(d1,-d2);\n    dw=min(dw,d1);\n    \n    d1=length(p-vec2(-.11,-.08))-.367;\n    d2=length(p-vec2(-.3,.235))-.366;\n    d1=max(d1,-d2);\n    dw=min(dw,d1);\n\n    d1=length(p-vec2(-.105,.17))-.367;\n    d2=length(p-vec2(.365,.955))-1.;\n    dw=min(dw,d1);\n    dw=min(dw,length(p-vec2(.3,0))-.3);\n    dw=max(dw,-d2);\n    \n    float ds=1000.;\n    d1=length(p-vec2(.66,.6))-.53;\n    d2=length(p-vec2(.73,1.07))-.8;\n    d1=max(d1,-d2);\n    d1=max(d1,-(p.x-.85));\n    ds=min(ds,d1);\n    d1=length(p-vec2(.5,.7))-.82;\n    d2=length(p-vec2(.9,1.))-.81;\n    d1=max(d1,-d2);\n    d1=max(d1,-(p.x-.85));\n    ds=min(ds,d1);\n    \n    d=min(d,dw);\n    d=min(d,ds);\n\n    return d;\n}\n\nfloat distTwX(vec3 p)\n{\n    p.xy+=vec2(.3,-.3);\n    float d=distTw2(p.xy);\n    d=smax(d,abs(p.z)-.15,.02);\n    if(iTime>2.0) d=smax(d,-distX2((p.xy-vec2(.63,.17))*7.)/7.,.007);\n    if(iTime>2.6) d=smax(d,-distX2((p.xy-vec2(.80,.17))*7.)/7.,.007);\n    float dz=length((p.xy-vec2(1.02,.2))*vec2(1.8,.65)*.8)-.1;\n    dz=smax(dz,dot(p.xy-vec2(1.02,.2),vec2(-.2,.9)),.017);\n    dz=smax(dz,-(abs(dot(p.xy-vec2(1.02,.2),vec2(1,0)))+.005-(p.y-.2)*.1),.02);\n    float dpy=(p.y/.2-1.);\n    dz=smax(dz,abs(p.z+D-.01-dpy*.15-.15*dpy*dpy)-.02,.01);\n    if(iTime>3.2) d=min(d,dz);\n    return d;\n}\n\nfloat distFloor(vec3 p)\n{\n    return p.z+.5;\n}\n\nfloat dist(vec3 p)\n{\n    float d=10000.;\n    d=min(d,distTwX(p.xzy/.7)*.7);\n    d=min(d,distFloor(p));\n    return d;\n}\n\nvec3 getGrad(vec3 p, float eps) \n{ \n    vec2 d=vec2(eps*.5,0); \n    return vec3(dist(p+d.xyy)-dist(p-d.xyy),dist(p+d.yxy)-dist(p-d.yxy),dist(p+d.yyx)-dist(p-d.yyx))/eps; \n}\n\nfloat DOF_Apert=.0;\nfloat DOF_FocalD=5.3;\n\n#define PIH 1.57079632679\n#define ROTM(ang) mat2(cos(ang-vec2(0,PIH)),-sin(ang-vec2(0,PIH)))\n\n#define RandTex iChannel1\n\nvoid getTrafo(inout vec3 pos, inout vec3 dir, vec2 fc)\n{\n    vec2 sc=(fc-iResolution.xy*.5)/iResolution.x*2.;\n    dir=normalize(vec3(0,0,-4.)+vec3(sc,0));\n    pos=vec3(0,0,5.5);\n    pos+=sin(iTime*100.*vec3(1,1.3,.7))*.1*step(2.0,iTime)*exp(-(iTime-2.0)/.07);\n    pos+=sin(iTime*100.*vec3(1.3,.7,1))*.1*step(2.6,iTime)*exp(-(iTime-2.6)/.07);\n    pos+=sin(iTime*100.*vec3(.7,1,1.3))*.1*step(3.2,iTime)*exp(-(iTime-3.2)/.07);\n    pos+=vec3(cos(iTime*2.*vec2(.7,1))*.01,0);\n    pos+=vec3(cos(iTime*3.*vec2(1,.7))*.005,0);\n    vec4 r=(texelFetch(RandTex,(ivec2(fc)+iFrame*ivec2(13,61))%256,0)-.5);\n    pos.xy+=r.xy*DOF_Apert;\n    dir.xy-=r.xy*DOF_Apert/DOF_FocalD;\n    float ph = iMouse.x/iResolution.x*10.+.45+cos(iTime*1.)*.05;\n    float th = iMouse.y/iResolution.y*10.+1.25;\n    pos.yz=ROTM(th)*pos.yz;\n    dir.yz=ROTM(th)*dir.yz;\n    pos.xy=ROTM(ph)*pos.xy;\n    dir.xy=ROTM(ph)*dir.xy;\n}\n\n#define PIH 1.57079632679\n\nvoid march(inout vec3 p, vec3 dir)\n{\n    for(int i=0;i<80;i++) {float d=dist(p); p+=dir*d; if(d<.001) break; }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec3 pos,dir;\n    getTrafo(pos,dir,fragCoord);\n\n    march(pos,dir);\n    vec3 n=normalize(getGrad(pos,.001));\n    float ao=1.; float sc=.01; for(int i=0;i<16;i++) { ao*=.88+.12*clamp(dist(pos+n*sc)/sc,0.,1.);  sc*=1.5; if(sc>1.) break; }\n    vec3 R=reflect(dir,n);\n    float fres=1.-abs(dot(dir,n));\n    fres*=fres*fres*fres;\n    fres=fres*.8+.2;\n    \n    float isFloor=0.; if (dist(pos)==distFloor(pos)) isFloor=1.;    \n    \n    fragColor.xyz=vec3(1);\n    fragColor.xyz=n*.1+.9;\n    fragColor.xyz*=mix(vec3(.2,.7,1),vec3(1),isFloor);\n    fragColor.xyz=mix(fragColor.xyz,texture(iChannel0,R).xyz,fres);\n    fragColor.xyz*=ao;\n    fragColor.w=1.;\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 27,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}