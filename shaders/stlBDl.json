{
    "Shader": {
        "info": {
            "date": "1651676696",
            "description": "Truchsine",
            "flags": 0,
            "hasliked": 0,
            "id": "stlBDl",
            "likes": 18,
            "name": "大龙猫 - Truchsine",
            "published": 3,
            "tags": [
                "sin",
                "truchet"
            ],
            "usePreview": 0,
            "username": "totetmatt",
            "viewed": 300
        },
        "renderpass": [
            {
                "code": "/*\n    Heavy inspiration from Flopine, Kamoshika and 0b5vr. Greets & thanks to them ! \n*/\nfloat fsnoise(vec2 c){\n    return fract(sin(dot(c, vec2(12.9898, 78.233))) * 43758.5453);\n}\nvec3 rot(vec3 p,vec3 ax,float t){\n    return mix(dot(ax,p)*ax,p,cos(t))+cross(ax,p)*sin(t);\n}\nfloat box(vec3 p,vec3 b){\n    vec3 q = abs(p)-b;\n    return length(max(vec3(0.),q))+min(0.,max(q.x,max(q.y,q.z)));\n}\nfloat box2(vec2 p,vec2 b){\n    vec2 q = abs(p)-b;\n    return length(max(vec2(0.),q))+min(0.,max(q.x,q.y));\n}\nvec2 sdf(vec3 p){\n    p = rot(p,normalize(vec3(-sqrt(4.),sqrt(2.),0.)),-.785/2.);\n    p.z +=iTime;\n    float gy = dot(asin(sin(p*3.)),asin(cos(p*7.)))*.1;\n    vec3 hp=p,tp=p;\n\n    vec2 h;\n    vec2 I = ceil(hp.xz);\n    hp.xz -=I-.5;\n    hp.y = abs(hp.y);\n    hp.z *= fsnoise(I)<.5 ? -1.:1.;\n    hp.z *=sign(p.y);\n    hp.xz +=hp.z > -hp.x ? -.5:.5;\n\n    vec2 q=vec2(length(hp.xz)-.5,hp.y);\n    h.x = abs(box2(q,vec2(.05)));\n    h.y = 1.;\n    \n    vec2 t;\n \n    tp.y +=clamp(asin(sin(tp.z*3.1415-.95)),-.75,.75)*.25;\n    tp.x = mod(tp.x,2.)-1.;\n    t = vec2(.9*box2(tp.xy+gy*.1,vec2(.05-abs(gy)*.2)),2.); \n \n  \n\n    \n    h = t.x < h.x  ? t:h;\n    return h;\n}\n#define q(s) s*sdf(p+s).x\nvec3 norm(vec3 p,float ee){vec2 e=vec2(-ee,ee);return normalize(q(e.xyy)+q(e.yxy)+q(e.yyx)+q(e.xxx));}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     vec2 uv = (fragCoord.xy -.5* iResolution.xy)/iResolution.y;\n    \n    vec3 ro = vec3(uv*5.,-10.);\n    vec3 rp = ro;\n    vec3 light = vec3(1.,2.,-3);\n    vec3 rd = normalize(vec3(0,0,1.));\n    vec3 col  = vec3(0.1);\n    float dd = 0.;\n    vec3 acc = vec3(0.);\n    for(float i=0.;i<64.;i++){\n        vec2 d = sdf(rp);\n        if(d.y ==2. && d.x <.5){\n            float act = step(.5,sin(rp.z-iTime));\n               if(act==0.) {\n                    rp+=rd*.1;\n                    continue;\n               }\n                acc += vec3(cos(rp.z+rp.x)*.5+.5,.1,sin(rp.z)*.5+.5)*act*exp(fract(iTime+floor(rp.z)*.5)*-abs(d.x)*i*i)/20.;\n                d.x = max(act > 0. ? .0005:d.x,abs(d.x));\n                \n            \n        }\n        dd+=d.x;\n        if(dd>50.) break;\n        rp +=rd*d.x;\n        if(d.x<.0001 && d.y == 1.){\n            vec3 n = norm(rp,.001);\n            vec3 n2 = norm(rp,.005);\n            float dif = max(0.,dot(normalize(light),n));\n            float qq = length(n-n2);\n            if(d.y == 1.){\n                col = dif*vec3(.1)+vec3(.1,.5,1.1)*dif*smoothstep(.1,0.35,qq);\n            } else {\n                col = dif*vec3(1.);\n            \n            }\n            break;\n        }\n    \n    }\n    fragColor = vec4(col+sqrt(acc),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}