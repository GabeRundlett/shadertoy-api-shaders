{
    "Shader": {
        "info": {
            "date": "1403870868",
            "description": "I'm playing with iq's tutorial on warping:\nhttps://iquilezles.org/articles/warp/warp.htm",
            "flags": 0,
            "hasliked": 0,
            "id": "lsfSRj",
            "likes": 8,
            "name": "test clouds with warping",
            "published": 3,
            "tags": [
                "clouds",
                "fbm",
                "warping"
            ],
            "usePreview": 0,
            "username": "antonOTI",
            "viewed": 900
        },
        "renderpass": [
            {
                "code": "mat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );\n\nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\n\nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n\n    f = f*f*(3.0-2.0*f);\n\n    float n = p.x + p.y*57.0;\n\n    float res = mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                    mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y);\n    return res;\n}\n\nfloat fbm( vec2 p )\n{\n    float f = 0.0;\n\n    f += 0.50000*noise( p ); p = m*p*2.02;\n    f += 0.25000*noise( p ); p = m*p*2.03;\n    f += 0.12500*noise( p ); p = m*p*2.01;\n    f += 0.06250*noise( p ); p = m*p*2.04;\n    f += 0.03125*noise( p );\n\n    return f/0.984375;\n}\n\nfloat beat = 0.;\n\nfloat pattern(vec2 p,out vec2 q,out vec2 r,out vec2 s)\n{\n\tfloat ct = 0.;\n\t\n\tfloat time = (iTime + sin(beat * 3.1416))*.1 ;\n\tq = vec2(fbm(p-vec2(cos(time),sin(time) )),fbm(p+vec2(4. +time*.25 ,2.8765-time*.25 )));\n\t\n\tr = vec2( fbm( p + 4.0*(q + vec2(1.7 - cos(time*.6),9.2 -  + time*.6 )) ),\n\t\t\t\t  fbm( p + 4.0*(q + vec2(8.3 - time*.6,2.8 + time*.6)) ) );\n\t\n\ts = vec2( fbm( r + 4.0*r + vec2(2.4 - sin(time*.6) , 15.01 + cos(time*.6)) ),\n\t\t\t\t   fbm( r + 4.0*(r + vec2(21.3 + time, 1.03 -time)) ) );\n\t\n\treturn fbm(p + 4. * s);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy *10.;\n\tvec2 q,r,s;\n\tfloat f = pattern(uv,q,r,s);\n\tvec3 col = mix(vec3(dot(q,r)),vec3(dot(q,s)),f);\n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}