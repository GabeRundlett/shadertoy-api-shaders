{
    "Shader": {
        "info": {
            "date": "1664179155",
            "description": "Paint with mouse. SPACE to erase.\nAs often, painting a uv field rather than directly splatting texture elements gives a far better result.\nTry other textures ( lines #9-11).\nNB: the shader doesn't need to run to work, and indeed even better that way ;-)",
            "flags": 48,
            "hasliked": 0,
            "id": "NlVBzW",
            "likes": 23,
            "name": "painting texture",
            "published": 3,
            "tags": [
                "paint",
                "viamapping"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 518
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 u )\n{\n    O = T(u);\n // O = texture(iChannel0,u/R,4.);                              // to simulate low uvGrid resolution\n \n    O /= (O.w + 1e-9);                                          // load and normalize texture coordinates\n // O *= step(1e-9,texture(iChannel0,u/R).w);                   // use with lowres uvGdrid ( cut mask bleeding )\n    \n    O = texture(iChannel1, 2.*O.xy);  O*=O*2.;                  // apply texture\n // O = texture(iChannel2, .5*O.xy);                            // try texture#2\n // O = sin(40.*O); O=clamp(O/fwidth(O),-1.,1.); O = .5+.5*O.x*O.yyyy; // checkers\n    \n // if (u.x<10. && u.y<10.*T(vec2(1)).x ) O++;                  // debug: cur layer\n // O += smoothstep(0.,-3./R.y, length(2.*u/R.y-T(0).xy)-.05 ); // debug: cur texture pos\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R    iResolution.xy\n#define T(U) texelFetch( iChannel0, ivec2(U), 0 )\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "#define keyDown(a)    ( texelFetch(iChannel3,ivec2(a,0),0).x > 0.)\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    O = iFrame<1 || keyDown(32)                  // init:\n          ? u==vec2(.5) ? vec4(.5*R/R.y,0,0)     //   pos in texture, prev mouse pos\n                        : O*0.                   //   reset drawing\n          :               T(u);                  // current drawing\n    \n    float i = T(vec2(1)).w,                      // current layer id\n          a = step(length(iMouse.wy),10.),       // demo mode\n          m = a==0. ? iMouse.z : 1.,             // mouse states\n          s = a==0. ? iMouse.w : ( iFrame%20==0 ? 1. : -1. ),\n          e = .03;\n    vec2  U = ( 2.*u - R ) / R.y,                // pixel position\n          M = a==0.\n                ? ( 2.* iMouse.xy - R ) / R.y    // mouse position\n                : .7*R/R.y*cos(iTime*vec2(1,2.71)+vec2(0,11)), // demo mode\n          D = M - T(0).zw,                       // mouse displacement       \n          d = normalize(D + 1e-9);               // normalize\n    mat2  r = mat2(d.x,d.y,-d.y,d.x);            // mouse frame related to displacement\n\n    \n    if (m>0.)\n        if (u==vec2(.5)) { O.xy += D*r; if(O.zw != M ) O.zw = M; } // current location in texture\n        else if (u==vec2(1.5) && s>0. )  O.w++;  // new paint layer\n        else if (s<0.) // && length(D)>0. )\n            if( length(U-M)<.1+e && O.z != i )   // layer overlap: replace\n                O = vec4( T(0).xy + (U-M)*r , i, 1);\n            else\n            O += smoothstep(e,-e,length(U-M)-.1) // splat new uv neighborhood\n              *  vec4( T(0).xy + (U-M)*r ,0,1);  // cumulates weight               \n           // *  texture(iChannel1, 2.*( T(0).xy + (U-M)*r ) ); // variant: directly splat texture\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    },
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}