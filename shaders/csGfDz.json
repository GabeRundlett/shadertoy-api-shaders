{
    "Shader": {
        "info": {
            "date": "1698098809",
            "description": "Based off https://www.youtube.com/watch?v=f4s1h2YETNY",
            "flags": 0,
            "hasliked": 0,
            "id": "csGfDz",
            "likes": 2,
            "name": "Fork Trippy Wal LilyIsTran 314",
            "published": 3,
            "tags": [
                "trippy"
            ],
            "usePreview": 0,
            "username": "LilyIsTrans",
            "viewed": 146
        },
        "renderpass": [
            {
                "code": "\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416,0.557);\n\n\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nfloat sdfCircle(vec2 uv) {\n    return length(uv) - 0.5;\n}\n\nfloat sdfHexagon( in vec2 p, in float r )\n{\n    const vec3 k = vec3(-0.866025404,0.5,0.577350269);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p)*sign(p.y);\n}\n\nfloat sdfHexagram( in vec2 p, in float r )\n{\n    const vec4 k = vec4(-0.5,0.8660254038,0.5773502692,1.7320508076);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= 2.0*min(dot(k.yx,p),0.0)*k.yx;\n    p -= vec2(clamp(p.x,r*k.z,r*k.w),r);\n    return length(p)*sign(p.y);\n}\n\nfloat sdf(vec2 uv) {\n    return sdfHexagram(uv, 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    const float PI = 3.14159265;\n    vec3 modTime = vec3(sin(length(uv) - iTime), sin(length(uv) - iTime - 2.0 * PI / 3.0), sin(length(uv) - iTime - 4.0 * PI / 3.0)) - iTime;\n    \n    for (float i = 0.0; i < 3.0; ++i)\n    {\n        uv = fract(uv * 1.618) - 0.5;\n\n        vec3 d = vec3(sdfHexagon(uv, sin(iTime)) * exp(-sdfHexagram(uv0, sin(iTime))));\n        vec3 col = palette(iTime*0.4 + sdf(uv0) + sdf(uv) + i*0.4);\n\n        d = abs(sin(d * 8.0 + modTime*0.6) / 8.0);\n        d = vec3(pow(0.01 / d.x, 1.2), pow(0.01 / d.y, 1.2), pow(0.01 / d.z, 1.2));\n\n\n\n        finalColor += col * d;\n    }\n    \n    \n    fragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}