{
    "Shader": {
        "info": {
            "date": "1595887338",
            "description": "Rainbow swirl with tan and cos",
            "flags": 0,
            "hasliked": 0,
            "id": "tllBRr",
            "likes": 1,
            "name": "Rainbow Swirl Crinkle",
            "published": 3,
            "tags": [
                "rainbow"
            ],
            "usePreview": 0,
            "username": "t420babe",
            "viewed": 228
        },
        "renderpass": [
            {
                "code": "#ifdef GL_ES\nprecision highp float;\n#endif\n\nvec3 rainbow_swirl_crinkle(vec2 pos) {\n  vec3 color = vec3(0.0);\n\n  float speed = 1.1;\n  float zoom = 1.0;\n  pos *= zoom;\n\n  vec2 movement = vec2(iTime, 1.0);\n\n  for (int i = 1; i < 3; i++) {\n    pos.x += 0.5 / float(i) * tan(float(i) * 5.0 * pos.y + iTime / speed) + movement.x/ 20.00;\n    pos.y -= 1.5 / float(i) * cos(float(i) * 15.5 * pos.x + iTime / speed) + movement.y / 30.0;\n  }\n\n  float g = cos(pos.y + pos.y + 1.0) * 0.5 + 0.5;\n  float b = sin(pos.x + pos.x + 1.0) * 0.5 + 0.5;\n  float r = (tan(pos.x * pos.y) + tan(pos.y + pos.x)) * 0.5 + 0.5;\n\n  return vec3(g, b, r);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n \t// Normalized pixel coordinates (from 0 to 1)\n    vec2 pos = fragCoord/iResolution.xy;\n    \n    vec3 color = rainbow_swirl_crinkle(pos);\n    fragColor = vec4(color, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}