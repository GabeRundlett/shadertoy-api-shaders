{
    "Shader": {
        "info": {
            "date": "1560069454",
            "description": "circles experiment",
            "flags": 0,
            "hasliked": 0,
            "id": "wtj3RG",
            "likes": 23,
            "name": "Vector sphere drilling",
            "published": 3,
            "tags": [
                "circles",
                "vector"
            ],
            "usePreview": 0,
            "username": "avin",
            "viewed": 776
        },
        "renderpass": [
            {
                "code": "#define RADIUS .475\n#define ISTEP .015\n\n#define SF 2./min(iResolution.x,iResolution.y)\n#define RADIUS_EXP2 RADIUS*RADIUS\n\n#define BLACK_COL vec3(16,22,27)/255.\n#define WHITE_COL vec3(245,248,250)/255.\n\nmat2 rot (float a){\n\tfloat ca = cos(a);\n    float sa = sin(a);\n    return mat2(ca,-sa,sa,ca);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n    \n    uv *= vec2(1.3333, 1.);  // /(.75,1.)\n\n    float m = 0.;                \n    for(float i = -RADIUS+fract(iTime*.25)*ISTEP; i<RADIUS; i+=ISTEP){\n                \n        vec2 iuv = uv - vec2(i, 0.);        \n        iuv *= rot(iTime*2. - i*10.);\n        \n        float l = length(iuv);\n        float r = sqrt(RADIUS_EXP2 - i*i);\n                \n        m += smoothstep(SF, .0, abs(r-l)) * smoothstep(.0, .075, iuv.y);        \n    }   \n    \n    vec3 col = mix(BLACK_COL, WHITE_COL, m);\n        \n    fragColor = vec4(col, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}