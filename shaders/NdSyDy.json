{
    "Shader": {
        "info": {
            "date": "1643986415",
            "description": "FM Sin waves",
            "flags": 8,
            "hasliked": 0,
            "id": "NdSyDy",
            "likes": 3,
            "name": "FM Sin waves - Sound",
            "published": 3,
            "tags": [
                "sound"
            ],
            "usePreview": 0,
            "username": "gfy_9001",
            "viewed": 236
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float f = 40. * 0.05;\n    float cf = 1. / f;\n    \n    float p = SinMod(iTime, cf, 0., 1.);\n    float s = SinMod(iTime, p, 0., 1.);\n    \n    vec3 modCol = sin(s) * vec3(0,2,4);\n    \n    vec2 uv = fragCoord / (iResolution.xy * 0.1);\n    vec3 col = cos(s+uv.xyx + modCol);\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float Amp(float a)\n{\n    return a * 0.1;\n}\n\nfloat SinWave(float f, float a, float t)\n{\n    return Amp(a) * sin(2. * PI * f * t);\n}\n\nvec2 mainSound(in int samp, float t)\n{\n    float f = 40.;\n    float cf = 1. / f;\n    \n    float p = SinMod(t, cf, 0., 1.);\n    float s = SinWave(p, 0.3, t);\n    \n    return vec2(s);\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            },
            {
                "code": "#define PI 3.1415926536\n\nfloat SinMod(float x, float b, float c, float d)\n{\n    float p = (2. * PI) / b;\n    return sin(p * (x + c)) + d;\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}