{
    "Shader": {
        "info": {
            "date": "1382578589",
            "description": "A software rasterizer in the GPU! Features a z-buffer and perspective-correct texture mapping.",
            "flags": 0,
            "hasliked": 0,
            "id": "MdS3Rz",
            "likes": 22,
            "name": "Rasterization",
            "published": 3,
            "tags": [
                "3d",
                "simple",
                "triangle",
                "texture",
                "rasterization",
                "polygon"
            ],
            "usePreview": 0,
            "username": "HLorenzi",
            "viewed": 1375
        },
        "renderpass": [
            {
                "code": "vec4 inTriangle(vec2 p0, vec2 p1, vec2 p2, vec2 p)\n{\n\tfloat a = 0.5*(-p1.y*p2.x + p0.y*(-p1.x + p2.x) + p0.x*(p1.y - p2.y) + p1.x*p2.y);\n\tfloat s = 1.0/(2.0*a)*(p0.y*p2.x - p0.x*p2.y + (p2.y - p0.y)*p.x + (p0.x - p2.x)*p.y);\n\tfloat t = 1.0/(2.0*a)*(p0.x*p1.y - p0.y*p1.x + (p0.y - p1.y)*p.x + (p1.x - p0.x)*p.y);\n\t\n\tif (s > 0.0 && t > 0.0 && 1.0 - s - t > 0.0) {\n\t\treturn vec4(1.0,s,t,1.0-s-t);\n\t} else {\n\t\treturn vec4(0.0,s,t,1.0-s-t);\n\t}\n}\n\nvoid triangle(inout vec4 c, vec2 p, int type, sampler2D tex, vec3 p0, vec3 p1, vec3 p2, vec2 t0, vec2 t1, vec2 t2)\n{\n\tfloat rx = iTime;\n\tfloat ry = iTime;\n\tfloat rz = iTime;\n\t\n\tfloat cx = cos(rx); float sx = sin(rx);\n\tfloat cy = cos(ry); float sy = sin(ry);\n\tfloat cz = cos(rz); float sz = sin(rz);\n\t\n\tmat4 transform1 =\n\t\tmat4(1, 0, 0, 0,\n      \t\t 0, 1, 0, 0,\n      \t\t 0, 0, 1, 0,\n\t\t\t 0, 0, -2.5, 1);\n\t\n\tmat4 transform2 =\n\t\tmat4(cz*cy, -sz*cy, sy, 0,\n\t\t\t sz*cx + cz*sy*sx, cz*cx - sz*sy*sx, -cy*sx, 0,\n\t\t\t sz*sx - cz*sy*cx,cz*sx + sz*sy*cx, cy*cx, 0,\n\t\t\t 0, 0, 0, 1);\n\t\n\tfloat n = 1.0;\n\tfloat f = 10.0;\n\tfloat r = 1.0 * iResolution.x / iResolution.y;\n\tfloat t = 1.0;\n\tmat4 projection =\n\t\tmat4(n/r, 0, 0, 0,\n      \t\t 0, n/t, 0, 0,\n      \t\t 0, 0, -(f+n)/(f-n), -1,\n\t\t\t 0, 0, -(2.0*f*n)/(f-n), 0);\n\t\n\tvec4 pt0 = vec4(0,0,0,0);\n\tvec4 pt1 = vec4(0,0,0,0);\n\tvec4 pt2 = vec4(0,0,0,0);\n\t\n\tpt0 = projection * transform1 * transform2 * vec4(p0,1);\n\tpt1 = projection * transform1 * transform2 * vec4(p1,1);\n\tpt2 = projection * transform1 * transform2 * vec4(p2,1);\n\t\n\t\n\tvec4 test = inTriangle(pt0.xy / pt0.w, pt1.xy / pt1.w, pt2.xy / pt2.w, p);\n\t\n\tif (test.x != 0.0) {\n\t\tfloat z = ((pt1.z * test.y) / pt1.w +\n\t\t\t\t   (pt2.z * test.z) / pt2.w +\n\t\t\t\t   (pt0.z * test.w) / pt0.w) /\n\t\t\t\t\t(test.y / pt1.w +\n\t\t\t\t\t test.z / pt2.w +\n\t\t\t\t\t test.w / pt0.w);\n\t\tif (z < c.w) {\n\t\t\tfloat tx = ((t1.x * test.y) / pt1.w +\n\t\t\t\t\t\t(t2.x * test.z) / pt2.w +\n\t\t\t\t\t\t(t0.x * test.w) / pt0.w) /\n\t\t\t\t\t   (test.y / pt1.w +\n\t\t\t\t\t\ttest.z / pt2.w +\n\t\t\t\t\t\ttest.w / pt0.w);\n\t\t\t\n\t\t\tfloat ty = ((t1.y * test.y) / pt1.w +\n\t\t\t\t\t\t(t2.y * test.z) / pt2.w +\n\t\t\t\t\t\t(t0.y * test.w) / pt0.w) /\n\t\t\t\t\t   (test.y / pt1.w +\n\t\t\t\t\t\ttest.z / pt2.w +\n\t\t\t\t\t\ttest.w / pt0.w);\n\t\t\t\t\n\t\t\tc = vec4(texture(tex, vec2(tx,ty)).xyz, z);\n\t\t}\n\t}\n}\n\nvec4 pixel(vec2 p)\n{\n\tvec4 color = vec4(1,1,1,1000);\n\t// Front\n\ttriangle(color, p, 0, iChannel0, vec3(-1,-1,-1),  vec3(1,-1,-1), vec3(-1,1,-1),\n\t\t\t\t\t              vec2(0,0),\t   vec2(1,0),\t  vec2(0,1));\n\t\n\ttriangle(color, p, 0, iChannel0, vec3(1,-1,-1),   vec3(1,1,-1),  vec3(-1,1,-1),\n\t\t\t\t\t              vec2(1,0),\t   vec2(1,1),\t  vec2(0,1));\n\t\n\t// Back\n\ttriangle(color, p, 0, iChannel0, vec3(-1,-1,1),   vec3(1,-1,1),  vec3(-1,1,1),\n\t\t\t\t\t              vec2(0,0),\t   vec2(1,0),\t  vec2(0,1));\n\t\n\ttriangle(color, p, 0, iChannel0, vec3(1,-1,1),    vec3(1,1,1),   vec3(-1,1,1),\n\t\t\t\t\t              vec2(1,0),\t   vec2(1,1),\t  vec2(0,1));\n\t\n\t\n\t// Right\n\ttriangle(color, p, 0, iChannel1, vec3(1,-1,-1),   vec3(1,-1,1),  vec3(1,1,-1),\n\t\t\t\t\t              vec2(0,0),\t   vec2(1,0),\t  vec2(0,1));\n\t\n\ttriangle(color, p, 0, iChannel1, vec3(1,-1,1),    vec3(1,1,1),   vec3(1,1,-1),\n\t\t\t\t\t              vec2(1,0),\t   vec2(1,1),\t  vec2(0,1));\n\t\n\t\n\t// Left\n\ttriangle(color, p, 0, iChannel1, vec3(-1,-1,-1),  vec3(-1,-1,1), vec3(-1,1,-1),\n\t\t\t\t\t              vec2(0,0),\t   vec2(1,0),\t  vec2(0,1));\n\t\n\ttriangle(color, p, 0, iChannel1, vec3(-1,-1,1),   vec3(-1,1,1),  vec3(-1,1,-1),\n\t\t\t\t\t              vec2(1,0),\t   vec2(1,1),\t  vec2(0,1));\n\t\n\t// Bottom\n\ttriangle(color, p, 0, iChannel2, vec3(-1,1,-1),   vec3(-1,1,1),  vec3(1,1,-1),\n\t\t\t\t\t              vec2(0,0),\t   vec2(1,0),\t  vec2(0,1));\n\t\n\ttriangle(color, p, 0, iChannel2, vec3(-1,1,1),    vec3(1,1,1),   vec3(1,1,-1),\n\t\t\t\t\t              vec2(1,0),\t   vec2(1,1),\t  vec2(0,1));\n\t\n\t// Top\n\ttriangle(color, p, 0, iChannel2, vec3(-1,-1,-1),  vec3(-1,-1,1), vec3(1,-1,-1),\n\t\t\t\t\t              vec2(0,0),\t   vec2(1,0),\t  vec2(0,1));\n\t\n\ttriangle(color, p, 0, iChannel2, vec3(-1,-1,1),   vec3(1,-1,1),  vec3(1,-1,-1),\n\t\t\t\t\t              vec2(1,0),\t   vec2(1,1),\t  vec2(0,1));\n\t\n\t\n\t// Thru-left-right\t\n\ttriangle(color, p, 0, iChannel2, vec3(-1.5,-0.5,0),  vec3(-1.5,0.5,0), vec3(1.5,-0.5,0),\n\t\t\t\t\t              vec2(0,0),\t   vec2(1,0),\t  vec2(0,1));\n\t\n\ttriangle(color, p, 0, iChannel2, vec3(-1.5,0.5,0),   vec3(1.5,0.5,0),  vec3(1.5,-0.5,0),\n\t\t\t\t\t              vec2(1,0),\t   vec2(1,1),\t  vec2(0,1));\t\n\t\n\ttriangle(color, p, 0, iChannel0, vec3(-1.5,0,-0.5),  vec3(-1.5,0,0.5), vec3(1.5,0,-0.5),\n\t\t\t\t\t              vec2(0,0),\t   vec2(1,0),\t  vec2(0,1));\n\t\n\ttriangle(color, p, 0, iChannel0, vec3(-1.5,0,0.5),   vec3(1.5,0,0.5),  vec3(1.5,0,-0.5),\n\t\t\t\t\t              vec2(1,0),\t   vec2(1,1),\t  vec2(0,1));\n\t\n\t\n\t// In the middle\n\ttriangle(color, p, 1, iChannel3, vec3(0,-1.5,-1.5),  vec3(0,-1.5,1.5), vec3(0,1.5,-1.5),\n\t\t\t\t\t              vec2(0,0),\t   vec2(1,0),\t  vec2(0,1));\n\t\n\ttriangle(color, p, 1, iChannel3, vec3(0,-1.5,1.5),   vec3(0,1.5,1.5),  vec3(0,1.5,-1.5),\n\t\t\t\t\t              vec2(1,0),\t   vec2(1,1),\t  vec2(0,1));\n\t\n\t\n\treturn color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv = uv * 2.0 - vec2(1.0,1.0);\n\tfragColor = pixel(uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 3,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg"
                    },
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 9,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}