{
    "Shader": {
        "info": {
            "date": "1572804841",
            "description": "Infinte Tunnel effect",
            "flags": 0,
            "hasliked": 0,
            "id": "MdfGRM",
            "likes": 5,
            "name": "Basic Tunnel effect ",
            "published": 3,
            "tags": [
                "tunnel"
            ],
            "usePreview": 0,
            "username": "Cha",
            "viewed": 512
        },
        "renderpass": [
            {
                "code": "float AR =  1.333; //iResolution.x /iResolution.y;\n\nvec4 red \t= vec4(0.0,1.0,1.0,1.0);\nvec4 green  = vec4(1.0,0.0,1.0,1.0);\nvec4 blue \t= vec4(1.0,1.0,0.0,1.0);\nvec4 white \t= vec4(1.0,1.0,1.0,1.0);\n\n//control params\nfloat whirl = 0.80;\nfloat kx \t= 1.0; //move forward/backwards\nfloat ky \t= 0.25; //'eye' rotation\nfloat reps \t= 1.5;\nfloat flashWidth = 0.125; \n\nvec4 ShadeFlash(float dist,float  angle, float speed, vec4 tint, float th, vec4 flashTint, float width)\n{\n\tfloat offset = speed*iTime*kx;\n\t//offset = floor(offset*flashWidth)/flashWidth;\n\tvec2 uvp  = vec2(1.0/(dist), angle) + offset;\n\t\n\tvec4 color = vec4(0.0);\n\t\n\t//uvp.x = floor(uvp.x*flashWidth)/flashWidth;\n\tfloat m = mod(uvp.x ,reps);\n\t///m = floor(m*flashWidth)/flashWidth;\n\n\t\n\t\tif(  m <flashWidth )\n\t\t{\n\t\t\tangle = abs(mod(angle +th,3.14159 ));\n\t\t\tif(angle > (0.25) && angle < (2.9))\n\t\t\t{\n\t\t\t\t//m = 1.25 + abs( m - flashWidth);\n\t\t\t\tcolor = tint;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn flashTint*3.0; \n\t\t\t}\n\t\t}\n\n\treturn color;\n}\n\nvec4 Shade(float dist,float  angle, float speed, vec2 fragCoord)\n{\n\tfloat mask = clamp(dist*dist*2.0, 0.0, 1.0);\n\t\n\tvec2 uv = fragCoord.xy / iResolution.xy ;\n\t\n\tfloat offsetX = speed*iTime*kx ;\n\tfloat offsetY = speed*iTime*ky ;\n\t\n\tvec2 uvp  = vec2(1.0/(dist), angle+whirl*dist);\n\t\n\tuvp.x  += offsetX; \n\tuvp.y  += offsetY; \n\t\n\tvec4 color   = texture(iChannel0, uvp*3.0   );\n\tcolor  \t\t*= (0.95*texture(iChannel1, uvp.xx) +0.05);\n\t//color  \t\t*= 0.9*texture(iChannel1, uvp.yy*0.5);\n\t///color \t\t*= texture(iChannel1, uvp.yy );\n\t\n\tfloat th = mod(2.3*iTime ,3.14159);\t\n\t\n\t/*vec4 A  = ShadeFlash(dist, angle , speed,     blue *1.00,       +th, red);\n\t B  = ShadeFlash(dist, angle , speed*1.5, blue *1.15,   -1.0*th, green);\n\tvec4 C  = ShadeFlash(dist, angle , speed*2.0, white *1.10,  +2.0*th, red*1.1);\n\tvec4 D  = ShadeFlash(dist, angle , speed*4.0, white *1.25,  -2.0*th, green*1.25);*/\n\t\n\tvec4 A  = ShadeFlash(dist, angle , speed*1.0, blue *5.0,  +0.5*th, white*5.5, 0.125);\n\tvec4 B  = ShadeFlash(dist, angle , speed*1.5, red  *5.0,  -1.0*th, white*1.5, 0.125);\n\tvec4 C  = ShadeFlash(dist, angle , speed*2.0, blue *5.0,  +1.5*th, white*2.0, 0.125);\n\tvec4 D  = ShadeFlash(dist, angle , speed*4.0, white*5.0,  -2.0*th, green*2.0, 0.125);\n\t//vec4 F =  A + B + C +D;\n\t\n\tvec4 F = A + B + D ;\n\t\n\tfloat n = length(F);\n\t\n\tif(n != 0.0)\n\t{\n\t\treturn mask*(2.5*color*F);\n\t\t//return mask*2.5*color*F;\n\t}\n\t\t\n\treturn mask*color;\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\tvec2  center= 0.162*vec2(cos(1.0*iTime), sin(1.1*iTime));\n\t\n\n\tuv  = 2.0*uv -1.0;\n\t\t\n\tfloat dist =  distance(uv , center);\n\tfloat angle = atan(uv.y-center.y,uv.x-center.x);\n\t\n\n\tfragColor = Shade(dist, angle, 0.65, fragCoord );\t\t\n\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 9,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg"
                    },
                    {
                        "channel": 3,
                        "ctype": "music",
                        "id": 18,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}