{
    "Shader": {
        "info": {
            "date": "1593762620",
            "description": "kind of just more experimenting\nuse mouse to control",
            "flags": 32,
            "hasliked": 0,
            "id": "wt2yz1",
            "likes": 4,
            "name": "cheap simple buffer bloom",
            "published": 3,
            "tags": [
                "simple",
                "cheap",
                "bloom",
                "buffers"
            ],
            "usePreview": 0,
            "username": "thefox231",
            "viewed": 585
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define strength iMouse.x / iResolution.x\n#define darken iMouse.y / iResolution.y\n\nfloat greenscreen(vec3 col) {\n    float g = length(col - vec3(0.,1.,0.));\n    return g;\n}\nfloat brightness(vec3 col) {\n    return (col.r + col.g + col.b) / 3.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n\tvec3 col = texture(iChannel0, uv).rgb;\n    \n    float scale = 0.98;\n    \n    vec2 uv2 = uv - 0.5;\n    uv2 = uv2 + 0.5 - (scale - 1.0) * 0.5;\n    uv2 *= scale;\n   \n    vec3 buffer = texture(iChannel1, uv2).rgb;\n  \tcol += min(buffer * greenscreen(buffer) * brightness(buffer), 1.0) * strength - darken;\n    \n    fragColor = vec4(col,1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}