{
    "Shader": {
        "info": {
            "date": "1723603555",
            "description": "Chromatic Aberration",
            "flags": 0,
            "hasliked": 0,
            "id": "lfXfDr",
            "likes": 0,
            "name": "Basic VHS",
            "published": 3,
            "tags": [
                "vhsfilter"
            ],
            "usePreview": 0,
            "username": "Dfreire",
            "viewed": 58
        },
        "renderpass": [
            {
                "code": "#define KERNEL_SIZE 9\n\nfloat kernel[KERNEL_SIZE] = float[](0.0275, 0.0675, 0.1150, 0.1530, 0.1790, 0.1530, 0.1150, 0.0675, 0.0275);\n\nfloat random(vec2 p) {\n    return fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float lineIntensity = 0.4;\n    float lineFrequency = 1.0 ;\n    float offset = 1.0 / iResolution.x;\n    vec2 uv = fragCoord.xy/ iResolution.xy;\n    vec2 distFromCenter = uv - 0.5;\n    vec2 distortedUV = vec2(0.0);\n\n// calculate scan line effect\n    float scanLine = sin(uv.y * iResolution.y * lineFrequency);\n    scanLine = smoothstep(0.4, 0.6, scanLine);\n    scanLine = mix(1.0, scanLine, lineIntensity);\n    \n// random frame skipping\n    float skip = random(floor(uv * 100.0)); \n    float chance = 0.2;\n\n    if (skip < chance) {\n        vec2 distortion = vec2(random(uv + vec2(0.0, 1.0)), random(uv + vec2(1.0, 0.0))) * 2.0 - 1.0;\n        distortion *= 0.1;\n        vec2 distortedUV = uv + distortion;\n    } else {\n        vec2 distortedUV = uv;\n    }\n\n    vec2 aberrated = 0.5 * pow(distFromCenter, vec2 (3.0, 3.0));\n    \n    vec4 color = vec4(0.0, 0.0, 0.0, 0.0);\n\n// gaussian blur\n    for (int i = 0; i < KERNEL_SIZE; ++i) {\n        float weight = kernel[i];\n        vec2 sampleUV = uv +vec2(float(i) - float(KERNEL_SIZE) / 2.0) * offset;\n        color += texture(iChannel0, sampleUV) * weight;\n    }\n\n    fragColor = vec4\n    (\n        texture(iChannel0, distortedUV - aberrated).r + 0.5,\n        texture(iChannel0, distortedUV).g + 0.5 ,\n        texture(iChannel0, distortedUV + aberrated).b + 0.5,\n        1.0\n       )* color *scanLine;\n    }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}