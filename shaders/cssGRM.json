{
    "Shader": {
        "info": {
            "date": "1665870046",
            "description": "path tracer",
            "flags": 32,
            "hasliked": 0,
            "id": "cssGRM",
            "likes": 17,
            "name": "Water Tunnel",
            "published": 3,
            "tags": [
                "tunnel"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 454
        },
        "renderpass": [
            {
                "code": "Main {\n    Q = A(U)/float(iFrame);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel1,(U))\n#define C(U) texture(iChannel2,(U)/R)\n#define D(U) texture(iChannel3,(U)/R)\n#define Main void mainImage (out vec4 Q, in vec2 U)\n#define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))\nvec3 hash(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy+p3.yzz)*p3.zyx);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "Main {\n    Q = vec4(0);\n    for (float x = -20.; x < 20.; x++)\n       Q += .5*exp(-x*x/8./8.)*(A(U+vec2(x,0))*2.-1.);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main {\n    Q = vec4(.3);\n    for (float x = -20.; x < 20.; x++)\n       Q += .002*exp(-x*x/8./8.)*A(U+vec2(0,x));\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "bool ignore_water;\nfloat map (vec3 p, inout float s, inout vec4 Q) {\n    \n    float r = 1e9;\n    Q = vec4(0);\n    s = 0.;\n    float h = p.y+.5*texture(iChannel2,.2*p.xz*600./R.x+0.5).x;\n        \n    { //tunnel\n        vec3 pt = p;\n        pt.x += .5*cos(pt.z);\n        vec2 uv = vec2(pt.z-.5,atan(pt.y,pt.x))*.5/3.14159;\n        vec4 c = B(uv);\n        pt.xy += .03*pt.xy*c.x;\n        float rt = 1.-length(pt.xy);\n        if (rt < r) {\n            r = rt;\n            Q = c;\n            s = .2;\n            if (h < 0.) s = 1.;\n            \n        }\n    }\n    { // light\n        vec3 pl = p;\n        pl.x += .5*cos(pl.z);\n        float rl = min(\n            length(pl.xy-vec2(.1,.8))-.02,\n            length(pl.xy-vec2(-.1,.8))-.02\n        );\n        if (rl < r) {\n            r = rl;\n            Q = vec4(6)+5.*sin(vec4(1,2,3,4)+pl.z);\n            s = 1.;\n        }\n    }\n    if (!ignore_water) { // water\n        h = abs(h)-.03;\n        if (h < r) {\n            r = h;\n            Q = vec4(.4,.8,1,1);\n            s = 0.;\n        }\n    }\n  \n    return r;\n}\nvec3 normal (vec3 p) {\n    vec2 e = vec2(1e-2,0);\n    float s = 0.; vec4 q = vec4(0);\n    return normalize(vec3(\n        map(p+e.xyy,s,q)-map(p-e.xyy,s,q),\n        map(p+e.yxy,s,q)-map(p-e.yxy,s,q),\n        map(p+e.yyx,s,q)-map(p-e.yyx,s,q)\n    ));\n}\nvoid scene (inout vec3 p, inout vec3 d, inout vec4 Q, float b) {\n    float r = 0.,s = 0.; vec3 n = vec3(0,0,1);\n    vec3 p0 = p; vec4 q = Q;\n    for (float i = 0.; i < 200.; i++)\n    {\n        r = map(p,s,q);\n        p += d*r;\n    }\n    n = normal(p);\n    if (s > 0.) {\n        d = reflect(d,n);\n        vec3 h = hash(vec2(b,iFrame));\n        h.xy = s*h.x*vec2(cos(6.28318530718*h.y),sin(6.28318530718*h.y));\n    \n        vec3 u = cross(d,vec3(1,0,0));\n        if (length(u)<.9) u = cross(d,vec3(0,1,0));\n        vec3 v = cross(d,u);\n        \n        d = normalize(d+u*h.x+v*h.y);\n        \n        Q *= q;\n    } else {\n        if (hash(vec2(3.+b,iTime)).x<.5) {\n            d = reflect(d,n);\n            Q *= q;\n        } else \n        { \n            d = refract(d,n,.5);\n        }\n    }\n    if (s == 0.) ignore_water = true;\n    else ignore_water = false;\n    p += 1e-3*d;\n}\n\n\nMain {\n    vec2 u = 2.*(U-.5*R)/R.y;\n    vec2 h = hash(vec2(iFrame,iTime)).xy;\n    h = sqrt(h.x)*vec2(cos(6.28318530718*h.y),sin(6.28318530718*h.y));\n    vec3 p = vec3(.4*u-.0*h-vec2(.1,0.),0);\n    vec3 d = normalize(vec3(u+.01*h,2));\n    Q = vec4(1);\n    ignore_water = false;\n    scene(p,d,Q,0.);\n    scene(p,d,Q,1.);\n    scene(p,d,Q,2.);\n    scene(p,d,Q,3.);\n    Q += A(U);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 2,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}