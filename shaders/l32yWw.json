{
    "Shader": {
        "info": {
            "date": "1727696958",
            "description": "Marching squares\n\nnot finished",
            "flags": 0,
            "hasliked": 0,
            "id": "l32yWw",
            "likes": 0,
            "name": "Marching squares",
            "published": 3,
            "tags": [
                "marchingsquares"
            ],
            "usePreview": 0,
            "username": "simplexqwe",
            "viewed": 51
        },
        "renderpass": [
            {
                "code": "#define ires iResolution\nfloat f(vec2 xy){\n    return 3.-length(xy-iMouse.xy/iResolution.y*zoom);\n}\n\n\nfloat DistLine(vec2 p,vec2 a,vec2 b){\n    vec2 ba = b-a;\n    vec2 pa = p-a;\n    float t = dot(ba,pa)/dot(ba,ba);\n    t=clamp(t,0.,1.);\n    vec2 c  = a+t*ba;\n    if((length(p-c))<=.015)return 1.; else return 0.;\n}\n\nfloat Sf(vec2 uv){\n\n    vec2 Iv = smoothstep (0., 1., fract (uv));\n    vec2 id = floor (uv) ;\n    \n    float bl = f (id);\n    float br = f (id+vec2(1,0));\n    float b  = mix (bl,br,Iv.x);\n    \n    float tl = f (id+vec2(0,1));\n    float tr = f (id+vec2(1,1));\n    float t  = mix (tl,tr,Iv.x);\n    \n    return mix(b,t,Iv.y);\n\n}\n\n\nvec4 S(vec2 uv){\n\n    vec2 id = floor (uv) ;\n    \n    float bl = f (id);\n    float br = f (id+vec2(1,0));\n    \n    float tl = f (id+vec2(0,1));\n    float tr = f (id+vec2(1,1));\n\n    \n    return vec4(bl,br,tl,tr);\n\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv   = fragCoord/ires.y;\n    uv*=zoom;\n    \n    vec2 uvn = vec2(mod(uv.x,1.),mod(uv.y,1.));\n    int uv1;\n    \n    if(uv.x*ires.y/ires.x>0.5*zoom)uv1 =0;else uv1 =1;\n\n    \n    vec4 lu  = lookup(S(uv),uv1);\n    \n    vec3 col =vec3(1.);\n    col.x = vec3(DistLine(uvn,lu.xy,lu.zw)).x;\n    col.y = f(uv);\n    if(abs((f(uv)))<=.01)col.z=1.; else col.z=0.;\n\n    fragColor = vec4(col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define zoom 10.\n\n\nfloat mid(float v1 , float v2){\n    return v1/(v1-v2);\n}\n\nvec4 lookup(vec4 v,int sw){\n\n    int vt1;\n    int vt2;\n    int vt3;\n    int vt4;\n\n    if(v.x>0.)vt1 =1;else vt1 =0;\n    if(v.y>0.)vt2 =2;else vt2 =0;\n    if(v.z>0.)vt3 =4;else vt3 =0;\n    if(v.w>0.)vt4 =8;else vt4 =0;\n    int vt  =  vt1+vt2+vt3+vt4;\n    \n    vec2[5] p;\n\n    switch(int(sw)){\n\n    case 0:\n\n    p =vec2[](vec2(mid(v.x,v.y),0.)\n                   ,vec2(0,mid(v.x,v.z))\n                   ,vec2(1,mid(v.y,v.w))\n                   ,vec2(mid(v.z,v.w),1.)\n                   ,vec2(2.,2.));break;\n    \n    case 1:\n                   \n    p = vec2[](vec2(0.5,0.),\n                     vec2(0.,0.5),\n                     vec2(1.,0.5),\n                     vec2(0.5,1.),\n                     vec2(2.,2.));break;\n}\n\n\n    vec4[]lo=vec4[](vec4(p[4],p[4]),vec4(p[0],p[1]),vec4(p[2],p[0]),vec4(p[1],p[2]),\n                    vec4(p[1],p[3]),vec4(p[0],p[3]),vec4(p[4],p[4]),vec4(p[2],p[3]),\n                    vec4(p[2],p[3]),vec4(p[4],p[4]),vec4(p[0],p[3]),vec4(p[1],p[3]),\n                    vec4(p[1],p[2]),vec4(p[0],p[2]),vec4(p[0],p[1]),vec4(p[4],p[4]));\n    return lo[vt];\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}