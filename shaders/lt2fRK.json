{
    "Shader": {
        "info": {
            "date": "1516562361",
            "description": "This is my first test of notepad paper for my website.",
            "flags": 0,
            "hasliked": 0,
            "id": "lt2fRK",
            "likes": 3,
            "name": "notepad paper 001",
            "published": 3,
            "tags": [
                "paper",
                "notepad"
            ],
            "usePreview": 0,
            "username": "catafest",
            "viewed": 737
        },
        "renderpass": [
            {
                "code": "// Created by Cătălin George Feștilă - http://free-tutorials.org\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// define math PI \n#define PI 3.14159265359\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// Normalized pixel coordinates\n    vec2 uv = (fragCoord.xy) / iResolution.xy;\n    vec2 auv=vec2(uv.x*iResolution.x/iResolution.y,uv.y);\n\n    vec3 col=vec3(1.,1,.95);\n    vec4 ink=vec4(0.,.8,.8,0.1);\n    ink.rgb+=col*0.009;\n\n    col=mix(col,ink.rgb,1.-clamp(64.+cos(auv.y*PI*64.)*64.,0.,1.));\n\n    col=mix(col,ink.bar,clamp((.5+(distance(auv.x,0.1)*-90.)),0.,1.));\n    vec4 tex=vec4(0.,0.,0.,1.);\n    col=mix(col,vec3(0.1),clamp(tex.r*0.1,0.,1.));\n\n    col*=clamp((1./inversesqrt(2.4-distance(vec2(0.5),uv))),0.,1.);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}