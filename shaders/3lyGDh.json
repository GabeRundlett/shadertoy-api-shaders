{
    "Shader": {
        "info": {
            "date": "1578778566",
            "description": "Check out the other ones from today here  https://imgur.com/a/pZUxRGK \n\n",
            "flags": 32,
            "hasliked": 0,
            "id": "3lyGDh",
            "likes": 27,
            "name": "Day 23 - glitchy stuff",
            "published": 3,
            "tags": [
                "glitch",
                "feedback"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 850
        },
        "renderpass": [
            {
                "code": "// I got inspired by victor_shepardson and made a bunch of glitchy stuff today\n// You can check some of them out here https://imgur.com/a/pZUxRGK \n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 uv = U/R.xy;\n\n    C = texture(iChannel0, uv);\n    C = clamp(C,0., 1.);\n    C =  0.01 + 0.9*C;\n    C = pow(C, vec4(0.45));\n}\n\n\n// Sharpen kernel from https://www.shadertoy.com/view/MtdXW4\n\n ",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\n\n\n//#define D C += T(U + C.yx*i*1.)*0.1; i *= i + 2.;\n#define D C += T(U + C.yz*i)*1.; i *= -1.2;\n#define F A += T(U + T(U + C.xy*i*200.).xy*0.3   )\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 uv = U/R.xy;\n\tuv *= 0.998;\n    vec2 i = vec2(1. - cos(uv.y*2.),-4. + sin(uv.x*2.));\n    C = mix(uv.yyxx,uv.yxyx, 0.5+sin(iTime)*0.55);\n    D\n    vec4 A =T(uv + C.yx);\n    D\n    F*-0.1;\n    D\n    D\n    F*+0.3;\n    D \n    F*-0.21;\n    D \n    F*+0.2;\n    D \n    F*-0.2;\n    F;\n    D \n    F*-0.9;\n    //vec4 SH = sharpen(iChannel0,U/R, R.xy);\n    //A -= SH*0.1;\n    D;\n    F*-0.3;\n    C = mix(sin(A*1.5), sin(C.barg*1.4), .1);\n    \n    if (iMouse.z > 0.){\n        float dMouse = length((U.xy - iMouse.xy)/iResolution.y);\n    \tC = mix(C, vec4(-0.,0.,0.2, 0.4) ,smoothstep(0.2,0.14, dMouse));\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "\n#define R iResolution.xy\n#define T(uv) texture(iChannel0, uv/R.xy)\n#define Neighbors vec4 n = A(U+vec2(0,1)), e = A(U+vec2(1,0)), s = A(U-vec2(0,1)), w = A(U-vec2(1,0)), m = 0.25*(n+e+s+w);\n\n\nvec4 sharpen(sampler2D channel,vec2 uv,vec2 res){\n    vec2 step = 1.0 / res;\n    float kernel [9];vec2 offset [9];\n\n\n    offset[0] = vec2(-step.x, -step.y);\n    offset[1] = vec2(0.0, -step.y);\n    offset[2] = vec2(step.x, -step.y);\n    \n    offset[3] = vec2(-step.x, 0.0);\n    offset[4] = vec2(0.0, 0.0);\n    offset[5] = vec2(step.x, 0.0);\n    \n    offset[6] = vec2(-step.x, step.y);\n    offset[7] = vec2(0.0, step.y);\n    offset[8] = vec2(step.x, step.y);\n    \n    kernel[0] = 0.0; kernel[1] = -0.25; kernel[2] = 0.0;\n    kernel[3] = -0.25; kernel[4] = 1.0; kernel[5] = -0.25;\n    kernel[6] = 0.0; kernel[7] = -0.25; kernel[8] = 0.0;\n    \n    vec4 sum = texture(channel, uv);\n    \n    for (int i = 0; i < 9; i++) {\n        vec4 color = texture(channel, uv + offset[i]);\n        sum += color * kernel[i]*2.;\n    }\n    return sum;\n}\n\nvec4 blur(sampler2D channel,vec2 uv,vec2 res){\n    vec2 step = 1.0 / res;\n    float kernel [9];vec2 offset [9];\n\n\n    offset[0] = vec2(-step.x, -step.y);\n    offset[1] = vec2(0.0, -step.y);\n    offset[2] = vec2(step.x, -step.y);\n    \n    offset[3] = vec2(-step.x, 0.0);\n    offset[4] = vec2(0.0, 0.0);\n    offset[5] = vec2(step.x, 0.0);\n    \n    offset[6] = vec2(-step.x, step.y);\n    offset[7] = vec2(0.0, step.y);\n    offset[8] = vec2(step.x, step.y);\n    \n    kernel[0] = 1.0; kernel[1] = 1.; kernel[2] = 1.0;\n    kernel[3] = 1.; kernel[4] = 1.0; kernel[5] = 1.;\n    kernel[6] = 1.0; kernel[7] = 1.; kernel[8] = 1.0;\n    \n    vec4 sum = vec4(0);\n    \n    for (int i = 0; i < 9; i++) {\n        vec4 color = texture(channel, uv + offset[i]);\n        sum += color * kernel[i];\n    }\n    sum /= 9.;\n\t\n    return sum;\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "\n#define T(uv) texture(iChannel0, uv/R.xy)\n\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 uv = U/R.xy;\n    \n    //C = sharpen(iChannel1,U/R.xy, R.xy);\n \tC = T(U);   \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}