{
    "Shader": {
        "info": {
            "date": "1612938132",
            "description": "I accidentally discovered this interesting shape by averaging distances.",
            "flags": 0,
            "hasliked": 0,
            "id": "wl3BRS",
            "likes": 19,
            "name": "Interesting Shape Discovery",
            "published": 3,
            "tags": [
                "3d",
                "raymarching",
                "distancefield",
                "sdf",
                "shape",
                "discovery"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 266
        },
        "renderpass": [
            {
                "code": "float Cube(in vec3 p) {\n    vec3 q = abs(p) - 0.75;\n    return max(q.x, max(q.y, q.z));\n}\n\nfloat mapScene(in vec3 p) {\n    float c = cos(iTime), s = sin(iTime);\n    p.xz *= mat2(c, -s, s, c);\n    p.yz *= mat2(c, -s, s, c);\n\n    return (Cube(p + vec3(-0.5,  0.0,  0.0)) +\n            Cube(p + vec3( 0.5,  0.0,  0.0)) +\n            Cube(p + vec3( 0.0, -0.5,  0.0)) +\n            Cube(p + vec3( 0.0,  0.5,  0.0)) +\n            Cube(p + vec3( 0.0,  0.0, -0.5)) +\n            Cube(p + vec3( 0.0,  0.0,  0.5))) / 6.0 + 0.08;\n}\n\nvec3 getNormal(in vec3 p) {\n    vec3 e = vec3(0.001, 0.0, 0.0);\n    return normalize(vec3(mapScene(p + e.xyy) - mapScene(p - e.xyy),\n                          mapScene(p + e.yxy) - mapScene(p - e.yxy),\n                          mapScene(p + e.yyx) - mapScene(p - e.yyx)));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\n    vec3 ro = vec3(0.0, 0.0, 5.0);\n    vec3 rd = normalize(vec3(uv, -1.0));\n\n    float t = 0.0;\n    for (int i=0; i < 100; i++) {\n        vec3 p = ro + rd * t;\n        float d = mapScene(p / 2.0) * 2.0;\n        if (d < 0.001) {\n            vec3 n = getNormal(p / 2.0);\n            vec3 l = vec3(-0.58, 0.58, 0.58);\n            fragColor.rgb += n * max(0.2, dot(n, l));\n            break;\n        }\n\n        if (t > 100.0) {\n            break;\n        }\n\n        t += d;\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}