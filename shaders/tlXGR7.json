{
    "Shader": {
        "info": {
            "date": "1555875047",
            "description": "raymarching test",
            "flags": 0,
            "hasliked": 0,
            "id": "tlXGR7",
            "likes": 1,
            "name": "nicso_first_test",
            "published": 3,
            "tags": [
                "raymarching"
            ],
            "usePreview": 0,
            "username": "nicso",
            "viewed": 349
        },
        "renderpass": [
            {
                "code": "float sphere(vec3 p, float r){\n    p = mod(p,3.)-3.*.5;\n    return length(p)-r;\n}\nfloat map (vec3 p){\n    return sphere(p,.5);\n}\nfloat diffuse(vec3 n, vec3 l){\n    return dot(n,normalize(l)) * .5 + .5;\n}\nvec3 get_normal(vec3 p){\n    vec2 eps = vec2(0.001,0.);\n    return normalize(vec3(  map(p+eps.xyy) - map(p-eps.xyy),\n                            map(p+eps.yxy) - map(p-eps.yxy),\n                            map(p+eps.yyx) - map(p-eps.yyx)));\n}\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    vec2 uv=fragCoord/iResolution.xy;\n    uv-=.5;    \n    uv.x*=iResolution.x/iResolution.y;\n    uv.x = abs(uv.x);\n    uv.y = abs(uv.y);\n    vec4 col = vec4(.2);\n\n    vec3 ro = vec3(0.,0.,-3.);\n    vec3 rd = normalize(vec3(uv,1.));\n    vec3 p = ro;\n    \n    p.x = sin(iTime * uv.y);    \n    p.y = sin(iTime * -uv.x);\n\n    bool hit = false;\n    float shading = 0.;\n    float dist = 100.;\n    for(float i=0.; i<dist; i++){\n        float d = map(p);\n        if(d<.05){\n            hit = true;\n            shading = i/dist;\n            break;\n        }\n        p += d * rd * 0.8;\n    }\n    if(hit){\n        vec3 n = get_normal(p);\n        vec3 l = vec3(.5,sin(iTime),-1.);\n        col.rgb = mix(vec3(.1,0.,.2), vec3(.8,0.,.3), vec3(diffuse(n,l)));\n    } \n    else col.rgb = vec3(0.);\n    \n\n    float t = length(ro-p);\n    \n    col.rgb = mix(col.rgb, vec3(31.0,2,30)/255.0, 1.-exp(-0.002*t*t));    \n    \n    \n    \n    fragColor=col;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}