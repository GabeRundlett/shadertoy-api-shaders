{
    "Shader": {
        "info": {
            "date": "1696045579",
            "description": "Making a vinyl",
            "flags": 0,
            "hasliked": 0,
            "id": "mdGcD1",
            "likes": 5,
            "name": "Vinyl - by hugolnx",
            "published": 3,
            "tags": [
                "art",
                "hugolnx",
                "vynil"
            ],
            "usePreview": 0,
            "username": "hugolnx",
            "viewed": 220
        },
        "renderpass": [
            {
                "code": "#define TWOPI 6.283185\n#define PI 3.14159\n#define DEG2RAD 3.14159 / 180.\n#define RAD2DEG 180. / 3.14159 \n#define C_VYNIL_1 vec3(0.05)\n#define C_VYNIL_2 vec3(0.2)\n#define C_VYNIL_1L vec3(0.2)\n#define C_VYNIL_2L vec3(0.6)\n#define C_BACK vec3(0.8, 0.8, 1.0)\n#define C_IN vec3(.5, .2, .2)\n#define RED vec3(1., 0., 0.)\n#define GRE vec3(0., 1., 0.)\n#define BLU vec3(0., 0., 1.)\n\n#define VYNIL_AREA_1 .05\n#define VYNIL_AREA_2 .25\n#define VYNIL_AREA_3 .35\n#define VYNIL_AREA_4 .85\n#define VYNIL_AREA_5 .9\n#define VYNIL_LINE_LEN .01\n\nfloat xstep(float minV, float maxV, float v) {return step(minV, v) * step(v, maxV);}\nfloat sat(float t) {return clamp(t, 0., 1.);}\nfloat normrange(float v, float minV, float maxV) { return sat((v-minV)/(maxV-minV)); }\nfloat xnormrange(float v, float minV, float maxV) { return normrange(v, minV, maxV) * xstep(minV, maxV, v); }\nfloat normAng(float a) { return mod(mod(a, TWOPI) + TWOPI, TWOPI); }\nfloat angDist(float a1, float a2) {\n  a1 = normAng(a1);\n  a2 = normAng(a2);\n  float diff1 = normAng(a1 - a2);\n  float diff2 = normAng(a2 - a1);\n  return min(diff1, diff2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy - 0.5) * vec2(iResolution.x/iResolution.y, 1) * 2.;\n\n    float d = length(uv);\n    \n    vec3 col = vec3(0, 0, 0);\n    float stepCircIn1 = xstep(0.          , VYNIL_AREA_1, d);\n    float stepCircIn2 = xstep(VYNIL_AREA_1, VYNIL_AREA_2, d);\n    float stepCircIn3 = xstep(VYNIL_AREA_2, VYNIL_AREA_3, d);\n    float stepCircIn4 = xstep(VYNIL_AREA_3, VYNIL_AREA_4, d);\n    float stepCircIn5 = xstep(VYNIL_AREA_4, VYNIL_AREA_5, d);\n    \n    float d5 = xnormrange(d, VYNIL_AREA_4, VYNIL_AREA_5);\n    float d4 = xnormrange(d, VYNIL_AREA_3, VYNIL_AREA_4);\n    float d3 = xnormrange(d, VYNIL_AREA_2, VYNIL_AREA_3);\n    float d2 = xnormrange(d, VYNIL_AREA_1, VYNIL_AREA_2);\n    float stepCircOut = step(VYNIL_AREA_5, d);\n    \n    col += stepCircOut * C_BACK;\n    col += stepCircIn1 * C_BACK;\n    \n    float uvAng = normAng(atan(uv.y, uv.x));\n    float lightAng = mod(30. + iTime/.01, 360.) * DEG2RAD;\n    float lightAngRange = 60. * DEG2RAD;\n    float lightAngDist = min(abs(angDist(uvAng, lightAng)), abs(angDist(uvAng, lightAng+PI))); \n    float lightStep = step(lightAngDist, lightAngRange*.5);\n    float lightStepSmooth = 1. - xnormrange(lightAngDist, 0., lightAngRange * .5);\n    float noLightStep = mod(lightStep + 1., 2.);\n    \n    float lsin = sin(d5 * TWOPI*(VYNIL_AREA_1/VYNIL_LINE_LEN));\n    vec3 col5 = vec3(0.);\n    \n    vec3 noLightColor = mix(C_VYNIL_1, C_VYNIL_2, lsin);\n    vec3 lightColor = mix(C_VYNIL_1L, C_VYNIL_2L, lsin);\n    col5 += stepCircIn5 * noLightStep * noLightColor;\n    col5 += stepCircIn5 * lightStep * mix(noLightColor, lightColor, lightStepSmooth);\n    col += col5;\n    \n    \n    vec3 col4 = vec3(0.);\n    float linesAmount = 5.;\n    float lsin4 = sin(xnormrange(fract(d4*linesAmount), .0, .15)*TWOPI);\n    vec3 noLightColor4 = mix(C_VYNIL_1, C_VYNIL_2, lsin4);\n    vec3 lightColor4 = mix(C_VYNIL_1L, C_VYNIL_2L, lsin4);\n    col4 += stepCircIn4 * noLightStep * noLightColor4;\n    col4 += stepCircIn4 * lightStep * mix(noLightColor4, lightColor4, lightStepSmooth);\n    col += col4;\n    \n    vec3 col3 = vec3(0.);\n    float linesAmount3 = 2.;\n    float lsin3 = sin(xnormrange(fract(d3*linesAmount3), .0, .25)*TWOPI);\n    vec3 noLightColor3 = mix(C_VYNIL_1*.9, C_VYNIL_2*.5, lsin3);\n    vec3 lightColor3 = mix(C_VYNIL_1*.9, C_VYNIL_2L*.5, lsin3);\n    col3 += stepCircIn3 * noLightStep * noLightColor3;\n    col3 += stepCircIn3 * lightStep * mix(noLightColor3, lightColor3, lightStepSmooth);\n    col += col3;\n    \n    \n    col += stepCircIn2 * mix(C_IN, C_IN*1.2, sat(sin(d2*PI)*2.));\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}