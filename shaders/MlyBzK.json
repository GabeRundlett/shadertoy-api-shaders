{
    "Shader": {
        "info": {
            "date": "1543151123",
            "description": "Based on the pattern displayed by my old Nexus 5X when it applied a system update (with some changes)",
            "flags": 0,
            "hasliked": 0,
            "id": "MlyBzK",
            "likes": 12,
            "name": "Android O System Update",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "_polymath",
            "viewed": 610
        },
        "renderpass": [
            {
                "code": "const float scale = .35,\n    width = .07,\n    loops = 4.,\n    tau = acos(-1.) * 2.,\n    totalAngle = loops * tau;\n\nvec3 hue(float theta) {\n\ttheta = fract(theta / tau + 10.) * 6.;\n    /*if (theta > 0.) {*/\n        if (theta < 1.) return vec3(1., theta, 0.); // r -> y\n        if (theta < 2.) return vec3(2. - theta, 1., 0.); // y -> g\n        if (theta < 3.) return vec3(0., 1., theta - 2.); // g -> c\n        if (theta < 4.) return vec3(0., 4. - theta, 1.); // c -> b\n        if (theta < 5.) return vec3(theta - 4., 0., 1.); // b -> m\n        /*if (theta < 6.)*/ return vec3(1., 0., 6. - theta); // m -> r\n    //}\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - iResolution.xy * .5)\n        / min(iResolution.y, iResolution.x) / scale;\n    float r = length(uv),\n        theta = atan(uv.y, uv.x);\n    \n    fragColor = vec4(0.,0.,0.,1.);\n    \n    for (float i = 0.; i < totalAngle; i += tau) {\n        float l = 1., phi = theta + i;\n        \n        l += sin(phi * .5 + iTime * .72) * .03;\n        l += sin(phi * .25 + iTime * .82) * .027;\n        l += sin(phi * .75 + iTime * .91) * .023;\n        \n        fragColor.rgb += hue(phi / loops)\n            * smoothstep(0., 2. / loops,\n                        1. - abs(r - l) * 15.);\n    }\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}