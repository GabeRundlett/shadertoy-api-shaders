{
    "Shader": {
        "info": {
            "date": "1547176934",
            "description": "bulat, kotak, triangle",
            "flags": 0,
            "hasliked": 0,
            "id": "wsfGRs",
            "likes": 1,
            "name": "Latihan 4",
            "published": 3,
            "tags": [
                "cgk2"
            ],
            "usePreview": 0,
            "username": "dennyraymond",
            "viewed": 343
        },
        "renderpass": [
            {
                "code": "float circle (vec2 uv, float blur, float r){\n\tfloat d = length(uv);\n    float c = smoothstep(r, r-blur,d);\n    return c;\n}\n\nfloat Band (float t, float start, float end, float blur){\n  float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    float stepFinal = step1 * step2;\n    return stepFinal;\n}\n\n\n\nfloat rectangle (vec2 uv, float blur, float left, float right, float bottom, float top) {\n    float r;\n    r = Band (uv.x, left, right, blur);\n    r *= Band (uv.y, bottom, top, blur);\n    return r;\n}\n\nfloat square (vec2 uv, float blur, float point) {\n  return rectangle (uv, blur, -point, point, -point, point);\n}\n\nfloat triangle (vec2 uv, float blur, float point) {\n    float t = uv.y;\n    return rectangle (uv, blur, -point+t, point-t, -point-t, point+t);\n}\n\nfloat line (vec2 uv, vec2 p, float len, float thick, float m) {\n    float c, x, y;\n    uv = uv - p;\n    x=uv.x;\n    y=uv.y;\n    y+=m*x;\n    c+= rectangle (vec2(x,y), 0.001, -len, len, -thick, thick);\n    return c;\n}\n\nfloat rectangle_line (vec2 uv, float len, float thick) {\n    float c=0.0;\n    c=c+line(uv, vec2(0.0,0.1), len, thick, 0.0); // atas\n    c=c+line(uv, vec2(0.0,-0.1), len, thick, 0.0); // bawah\n    c=c+line(uv, vec2(-0.1,0.0), thick, len, 0.0); // kiri\n    c=c+line(uv, vec2(0.1,0.0), thick, len, 0.0); // kanan\n    \n    return c;\n}\n\nfloat triangle_line (vec2 uv, float len, float thick) {\n    float c=0.0;\n    c=c+line(uv, vec2(0.7,0.0), len, thick, 1.0);// garis kanan\n    c=c+line(uv, vec2(.5,0.0), len, thick, -1.0); // garis kiri\n    c=c+line(uv, vec2(0.6,-0.1), len*2.0, thick, 0.0); // garis bawah\n    \n    return c;\n}\n\nfloat circle_lineDot (vec2 uv, float r, int num_segments){\n\t\n    float x = uv.x;\n    float y = uv.y;\n    float c = 0.;\n    float len = 0.1;\n    float thick = 0.001;\n    \n    r = r/float(num_segments);\n    for (int i=0; i<=num_segments;i++){\n    \tfloat z = 2.0f * 3.1415926f * float(i)/float(num_segments);\n       \tx = x + r * cos(z);\n        y = y + r * sin(z);\n        c += circle (vec2(x,y-.1),.001, .005);\n    }\n    return c;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n vec2 uv = fragCoord.xy/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    float row;\n    vec2 pos;\n    // Time varying pixel color\n    vec3 cols = vec3 (0.0);\n    \n    //try blocks\n    float x = uv.x;\n    float y = uv.y;\n    float c;\n    float rectangle_blocks = square(vec2(x,y+(-.3)),0.001,.1);\n    float triangle_blocks = triangle(vec2(x+(-.6),y+(-.3)),0.001, .1);\n    float circle_blocks1 = circle(vec2(x+.5,y+(-.3)),0.001, .13);\n    \n    //try empty blocks\n    float circle_blocks2 = circle(vec2(x+.5, y),0.001, .13);// circle line\n    float circle_blocks3 = circle(vec2(x+.5,y),0.001, .12); // will block the circle_blocks2\n    float rectangle_blocks1 = square(vec2(x,y),0.001, .12);\n    float rectangle_blocks2 = square(vec2(x,y),0.001, .11);\n    float triangle_blocks1 = triangle(vec2(x+-.6,y+.05),0.001, .14);\n    float triangle_blocks2 = triangle(vec2(x+-.6,y+.05),0.001, .13);\n    \n    //try part line\n    float rect_lines = rectangle_line(vec2(x,y+.3), 0.1, 0.0025); // (pos, length, thick)\n    float triangle_lines =triangle_line(vec2(x,y+.3), 0.1, 0.0025);\n    \n    \n    //try circle dot line\n    row = -.3;\n    \n    // masih belum keluar :( \n    float circle_lines = circle_lineDot(vec2(x+.5,y+.3),.7, 100);\n    //pos = vec2(-.5,row);\n    //c += circle_lineDot(vec2(-.5,row),.6, 100);\n    //float CircleDot = circle_lineDot(vec2(x,y), .6, 200);\n\n    // Output to screen\n    cols = vec3(1.0, 1.0, 0.0)*rectangle_blocks;\n    cols += vec3(1.0, 1.0, 0.0)*circle_blocks1;\n    cols += vec3(1.0, 1.0, 0.0)*circle_blocks2;\n    cols += vec3(0.0, 0.0, 0.0);\n    cols -= vec3(1.0, 1.0, .0)*circle_blocks3; // substract to get the black color\n    cols += vec3(1.0, 1.0, .0)*rectangle_blocks1;\n    cols += vec3(0.0, 0.0, 0.0);\n    cols -= vec3(1.0, 1.0, .0)*rectangle_blocks2;\n    cols += vec3(1.0, 1.0, .0)*triangle_blocks1;\n    cols += vec3(0.0, 0.0, 0.0);\n    cols -= vec3(1.0, 1.0, .0)*triangle_blocks2;\n    cols += vec3(1.0, 1.0, 0.0)*triangle_blocks;\n    //cols += vec3(1.0, 1.0, .0)*c;\n    cols += vec3(1.0, 1.0, 0.0)*circle_lines;\n    cols += vec3(1.0, 1.0, 0.0)*rect_lines;\n    cols += vec3(1.0, 1.0, 0.0)*triangle_lines;\n    \n    \n    fragColor = vec4(cols,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}