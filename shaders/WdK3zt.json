{
    "Shader": {
        "info": {
            "date": "1570758177",
            "description": "Distorted breathing kaleidoscopic plane",
            "flags": 0,
            "hasliked": 0,
            "id": "WdK3zt",
            "likes": 6,
            "name": "Distortion Breath",
            "published": 3,
            "tags": [
                "kaleidoscope",
                "trig"
            ],
            "usePreview": 0,
            "username": "shadeThrower",
            "viewed": 416
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float tme = iTime*.5;\n    float scale = 0.125;\n   \n    vec2 adjVec = vec2((sin(tme)*.5), (cos(tme)*.5));\n    vec2 uv = fragCoord/iResolution.xy;    \n    vec2 uvM;\n    float posMod;\n\n    uvM = mod(uv + normalize(uv-0.5)*adjVec, scale);\n    uv = normalize(uvM-vec2(scale/2.))*(adjVec+vec2(.5));\n\n    if(mod(floor((uv.x)/scale),2.) == 0.)\n            uvM.x = scale - uvM.x;\n    if(mod(floor((uv.y)/scale),2.) == 0.)\n            uvM.y = scale - uvM.y;\n\n    uvM += adjVec*length(uvM + adjVec - vec2(0.5));\n\n    // Time varying pixel color\n    vec3 col = vec3(0.5 + 0.5*tan((cos(tme)+2.)*8.*(uvM.x/sin(uvM.y+0.2+(cos(tme)/2.+1.)))),\n                    0.5 + 0.5*tan((sin(tme*1.2)+2.)*8.*(uvM.x/sin(uvM.y+0.2+(cos(tme)/2.+1.)))),\n                    0.5 + 0.5*tan((cos(tme*1.3)+3.)*8.*(uvM.x/sin(uvM.y+0.2+(sin(tme)/2.+1.)))));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}