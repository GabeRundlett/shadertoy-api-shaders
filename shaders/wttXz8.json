{
    "Shader": {
        "info": {
            "date": "1580414943",
            "description": "FBM noise domain warped several times",
            "flags": 0,
            "hasliked": 0,
            "id": "wttXz8",
            "likes": 61,
            "name": "Domain warped FBM noise",
            "published": 3,
            "tags": [
                "noise",
                "fbm",
                "warped",
                "cineshader"
            ],
            "usePreview": 1,
            "username": "liamegan",
            "viewed": 48294
        },
        "renderpass": [
            {
                "code": "\n\n\n\n\n\n\n    const int octaves = 6;\n\n\n\n    vec2 random2(vec2 st){\n      vec2 t = vec2(texture(iChannel0, st/1023.).x, texture(iChannel0, st/1023.+.5).x);\n      return t*t*4.;\n    }\n\n    // Value Noise by Inigo Quilez - iq/2013\n    // https://www.shadertoy.com/view/lsf3WH\n    float noise(vec2 st) {\n        vec2 i = floor(st);\n        vec2 f = fract(st);\n\n        vec2 u = f*f*(3.0-2.0*f);\n\n        return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \n                         dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                    mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \n                         dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n    }\n  \n    float fbm1(in vec2 _st) {\n      float v = 0.0;\n      float a = 0.5;\n      vec2 shift = vec2(100.0);\n      // Rotate to reduce axial bias\n      mat2 rot = mat2(cos(0.5), sin(0.5),\n                      -sin(0.5), cos(0.50));\n      for (int i = 0; i < octaves; ++i) {\n          v += a * noise(_st);\n          _st = rot * _st * 2.0 + shift;\n          a *= 0.4;\n      }\n      return v;\n    }\n  \n    float pattern(vec2 uv, float time, inout vec2 q, inout vec2 r) {\n\n      q = vec2( fbm1( uv * .1 + vec2(0.0,0.0) ),\n                     fbm1( uv + vec2(5.2,1.3) ) );\n\n      r = vec2( fbm1( uv * .1 + 4.0*q + vec2(1.7 - time / 2.,9.2) ),\n                     fbm1( uv + 4.0*q + vec2(8.3 - time / 2.,2.8) ) );\n\n      vec2 s = vec2( fbm1( uv + 5.0*r + vec2(21.7 - time / 2.,90.2) ),\n                     fbm1( uv * .05 + 5.0*r + vec2(80.3 - time / 2.,20.8) ) ) * .25;\n\n      return fbm1( uv * .05 + 4.0 * s );\n    }\n\n\n  vec2 getScreenSpace() {\n    vec2 uv = (gl_FragCoord.xy - 0.5 * iResolution.xy) / min(iResolution.y, iResolution.x);\n    \n    return uv;\n  }\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = getScreenSpace();\n\n      \n      float time = iTime / 10.;\n      \n      mat2 rot = mat2(cos(time / 10.), sin(time / 10.),\n                      -sin(time / 10.), cos(time / 10.));\n      \n      uv = rot * uv;\n      uv *= 0.9 * (sin(time)) + 3.;\n      uv.x -= time / 5.;\n      \n      vec2 q = vec2(0.,0.);\n      vec2 r = vec2(0.,0.);\n      \n      float _pattern = 0.;\n      \n      \n    _pattern = pattern(uv, time, q, r);\n    \n      vec3 colour = vec3(_pattern) * 2.;\n      colour.r -= dot(q, r) * 15.;\n      colour = mix(colour, vec3(pattern(r, time, q, r), dot(q, r) * 15., -0.1), .5);\n      colour -= q.y * 1.5;\n      colour = mix(colour, vec3(.2, .2, .2), (clamp(q.x, -1., 0.)) * 3.);\n      \n      fragColor = vec4(-colour + (abs(colour) * 2.), 1./length(q));\n}\n\n/** SHADERDATA\n{\n\t\"title\": \"Domain Warped FBM noise\",\n\t\"description\": \"\",\n\t\"model\": \"person\"\n}\n*/\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}