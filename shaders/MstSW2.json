{
    "Shader": {
        "info": {
            "date": "1461665459",
            "description": "Special thanks to Iain Melvin. Left his copy right in because it's still mostly his code.",
            "flags": 64,
            "hasliked": 0,
            "id": "MstSW2",
            "likes": 6,
            "name": "Audio Analyzer Tweaks",
            "published": 3,
            "tags": [
                "audioanalyzertweaks"
            ],
            "usePreview": 0,
            "username": "vox",
            "viewed": 697
        },
        "renderpass": [
            {
                "code": "// wavelet-ish visualizer 2\n\n// Iain Melvin 2014\n\n// comment this to turn off peak offset adjustment\n//#define OFFSET_ON\n\n\n#define PI 3.14159265359\n#define E 2.7182818284\n#define GR 1.61803398875\n#define EPS (.01*(1.0+saw(time)))\n\n#define time (float(__LINE__)+iTime/PI)\n\nfloat saw(float x)\n{\n    return acos(cos(x))/3.14;\n}\nvec2 saw(vec2 x)\n{\n    return acos(cos(x))/3.14;\n}\nvec3 saw(vec3 x)\n{\n    return acos(cos(x))/3.14;\n}\nvec4 saw(vec4 x)\n{\n    return acos(cos(x))/3.14;\n}\nvec3 phase(float map)\n{\n    return vec3(saw(map),\n                saw(4.0*PI/3.0+map),\n                saw(2.0*PI/3.0+map));\n}\n\nfloat get_max(){\n  // find max offset (there is probably a better way)\n  float jmax = 0.0;\n  float jmaxf=0.0;\n  float jf=0.0;\n  float ja;\n  for (int j=0;j<200;j++){\n    jf = jf+0.005;\n    ja = texture( iChannel0, vec2(jf,0.75)).x;\n    if ( ja>jmaxf) {jmax = jf;jmaxf = ja;}\n  }\n  return jmax;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  float px = 2.0*(uv.x-0.5);\n  float py = 2.0*(uv.y-0.5);\n\n  float dx = uv.x;\n  float dy = uv.y;\n\n  // alternative mappings\n  dx = abs(uv.x-0.5)*3.0;\n  //dx =1.0*atan(abs(py),px)/(3.14159*2.0);\n  //dy =2.0*sqrt( px*px + py*py );\n\t\n  const float pi2 = 3.14159*2.0;\n\n  // my wavelet \n  //float width = 1.0-dy; \n  //float width = (1.0-sqrt(dy)); // focus a little more on higher frequencies\n  float width = 1.0-(pow(dy,(1.0/4.0) )); // focus a lot more on higher frequencies\n  const float nperiods = 4.0; //num full periods in wavelet\n  const int numsteps = 256; // more than 100 crashes nvidia windows (would love to know why)\n  const float stepsize = 1.0/float(numsteps);\n  \n  float accr = 0.0;\n\n  float si_max=0.0;\n#ifdef OFFSET_ON\n    si_max=get_max();\n#endif\n    \n  // x is in 'wavelet packet space'\n  for (float x=-1.0; x<1.0; x+=stepsize){\n\t\n\t// the wave in the wavelet \n    float yr = sin((dx+x*nperiods*pi2)); \n    \n    // get a sample - center at uv.x, offset by width*x\n    float si = dx + width*x;\n\n      si+=si_max;\n\n\t  if (si>0.0 || si<1.0){\n        \n\t\t// take sample and scale it to -1.0 -> +1.0\n\t\tfloat s = 2.0*( texture( iChannel0, vec2(si,0.75)).x - 0.5 + (12.5/256.0) ); \n         \t\n\t\t// multiply sample with the wave in the wavelet\n\t    float sr=yr*s;\n         \n\t    // apply packet 'window'\n        float w = 1.0-abs(x);\n\t    sr*=w;\n\n\t\t// accumulate\n        accr+=sr;\n \t  }\n  }\n\n  float y=accr; //; //0.0*abs(accr)/accn;\n \n  fragColor = vec4( clamp(y, 0.0, 1.0)*phase(y+iTime+py*PI),1.0);\n\n\n \n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 2903,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/desertdwellers/crossing-beyond-govinda-remix"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}