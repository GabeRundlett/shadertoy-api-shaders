{
    "Shader": {
        "info": {
            "date": "1632334444",
            "description": "d",
            "flags": 0,
            "hasliked": 0,
            "id": "fdVGDc",
            "likes": 4,
            "name": "rr",
            "published": 3,
            "tags": [
                "ss"
            ],
            "usePreview": 0,
            "username": "aliva",
            "viewed": 219
        },
        "renderpass": [
            {
                "code": "const float SceneDurationSeconds = 400.;\nconst float Complexity = 18.;\n\nvec4 hash42(vec2 p)\n{\n\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.7031, 1500, .0953, .3099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\nvoid mainImage(out vec4 o, vec2 C)\n{\n    vec2 uv = C/max(iResolution.x, iResolution.y);\n    uv.x --;\n    uv /= 4.;\n\n    float scene = floor((iTime+98.)/SceneDurationSeconds);\n    vec4 hscene = hash42(vec2(scene));\n    uv += scene;\n    \n    float t = iTime*mix(.01,.06,hscene.y);\n    uv -= t*.5;\n\n    vec2 uvn = C/iResolution.xy-.5;\n    float ds = max(abs(uvn.x), abs(uvn.y))*4.;\n    \n    for (float i = 1.; i < Complexity; ++ i) {\n        vec2 c = floor(uv);\n        vec4 h = hash42(c);\n        vec2 p = fract(uv);\n        vec2 a = abs(p-.5);\n        float sd = .5-max(a.x, a.y);\n        o = h*sqrt(sd)*4.;\n        uv *= 2.;\n        float sc = 1./i;\n        uv += fract(abs(fract(uv.yx/sc+t)-.5)*sc-1.) * sign(hscene.x - .5);\n    }\n  \n}\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}