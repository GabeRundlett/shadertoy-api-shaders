{
    "Shader": {
        "info": {
            "date": "1480887814",
            "description": "Testing inverse brown distortion\nhttps://en.wikipedia.org/wiki/Distortion_(optics)#Software_correction",
            "flags": 32,
            "hasliked": 0,
            "id": "XlVGRw",
            "likes": 0,
            "name": "Brown Distortion Model",
            "published": 3,
            "tags": [
                "lensdistortion"
            ],
            "usePreview": 0,
            "username": "BastuAnka",
            "viewed": 783
        },
        "renderpass": [
            {
                "code": "#define K1 0.03\n#define K2 -0.01\n#define K3 -0.0\n#define P1 0.0\n#define P2 0.0\n\nvec2 undistort(vec2 u) {\n    float r2 = dot(u,u);\n    float r4 = r2*r2;\n    float r6 = r4*r2;\n    vec2 d = u*(1.0 + K1*r2 + K2*r4 + K3*r6);\n    d.x = d.x + P2*(r2 + 2.0*u.x*u.x) + 2.0*P1*u.x*u.y;\n\td.y = d.y + P1*(r2 + 2.0*u.y*u.y) + 2.0*P2*u.x*u.y;\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n\tvec2 Pu = 2.0*fragCoord.xy / iResolution.xy - 1.0;\n\t\n    vec2 Pd = undistort(Pu);\n\tfragColor = texture(iChannel0, 0.5*(Pd+1.0) );\n    //fragColor = texture(iChannel1, 0.5*(Pd+1.0) );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define K1 0.03\n#define K2 -0.01\n#define K3 -0.0\n#define P1 0.0\n#define P2 0.0\n\nvec2 undistort(vec2 u) {\n    float r2 = dot(u,u);\n    float r4 = r2*r2;\n    float r6 = r4*r2;\n    vec2 d = u*(1.0 + K1*r2 + K2*r4 + K3*r6);\n    d.x = d.x + P2*(r2 + 2.0*u.x*u.x) + 2.0*P1*u.x*u.y;\n\td.y = d.y + P1*(r2 + 2.0*u.y*u.y) + 2.0*P2*u.x*u.y;\n    return d;\n}\n\nvec2 distort(vec2 d) {\n    vec2 u = d;\n    vec2 t;\n    for(int i=0; i<500; i++) {\n        float r2 = dot(u,u);\n    \tfloat r4 = r2*r2;\n    \tfloat r6 = r4*r2;\n        t = u;\n        u.x = d.x - P2*(r2 + 2.0*u.x*u.x) - 2.0*P1*u.x*u.y;\n        u.y = d.y - P1*(r2 + 2.0*u.y*u.y) - 2.0*P2*u.x*u.y;\n\t\tu = u/(1.0 + K1*r2 + K2*r4 + K3*r6);\n        \n        vec2 v = u-t;\n        if(dot(v,v) < 0.0001) {\n            break;\n        }\n    }\n    return u;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 Pd = 2.0*fragCoord.xy / iResolution.xy - 1.0;\n\t\n    vec2 Pu = distort(Pd);\n\tfragColor = texture(iChannel0, 0.5*(Pu+1.0) );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}