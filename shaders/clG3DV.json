{
    "Shader": {
        "info": {
            "date": "1684654747",
            "description": "A zellij tile pattern.",
            "flags": 8,
            "hasliked": 0,
            "id": "clG3DV",
            "likes": 6,
            "name": "Zellij pattern 12 (music)",
            "published": 3,
            "tags": [
                "fractal",
                "arabesque",
                "zellij"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 236
        },
        "renderpass": [
            {
                "code": "vec2 triangle_wave(vec2 a){\n    vec2 a2 =\n        vec2(1.,0.5)\n    ,\n    a1 = a+a2;\n    return\n        abs(fract((a1)*(a2.x+a2.y))-.5)\n    ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = .5*8.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv.y += (iTime/2.0,iTime/3.0)/t1/8.0;\n    if(iMouse.z>.5)\n    uv = uv.xy + iMouse.xy / iResolution.xy/t1;\n    vec2 t2 = vec2(0.);\n    bool b = true;\n    uv.y = mod(uv.y,.5)-.25;\n    uv.x = mod(uv.x,1.);\n    for(int k = 0; k < 12; k++){\n        uv =\n            abs(.5-uv-t2*sign(uv.y-uv.x))/1.5\n            //abs(-.5*sign(uv.y-uv.x)-uv-t2)/1.5\n        ;\n        b = uv.y<uv.x;\n        if(b) uv = uv.yx;\n        t2 =\n            triangle_wave(uv-.5*sign(uv.x-uv.y)).yx\n        ;\n        uv =\n            t2-triangle_wave(uv.yx).yx\n        ;\n        col.x =\n            max((t2.y+t2.x),col.x)\n        ;\n        col =\n            abs(col-1.+col.x);\n            //max((col-1.+col.x/1.5),(1.-col-col.yzx));\n    }\n    if (!b) col = abs(1.-col);\n    fragColor = vec4(min(col,vec3(1.)),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float fmod(float a, float b){\n    //a = a/2. + floor(a/2.)/b*8.;\n    return\n        mod(floor(a),b)\n        //mod(floor(a)*floor(a/b),b)\n        //floor(mod(a*4./b,b))\n        //floor(mod(floor(a+floor(a/2.)),b))\n    ;\n}\n\nvec2 mainSound(int samp, float time){\n  float s1 =\n      4.*pow(2.,fmod(1.-time/2./8.,2.)),\n  s2 = 8.,\n  m0 = pow(2.,fmod(time/s1,3.)),\n  t = time/m0/2.,\n  m1 = fmod(t,s1);\n  t = pow(2.,fmod(-t*4.+m1,2.))*t/(1.+fmod(m1+floor(t*2.)+floor(t/2.),2.));\n  float\n  m3 =\n      floor(fmod(time*m0*s1,s1)/2.)\n  ;\n  float m2 =\n      1. + fmod(t*s1,s1/2.);\n  ;\n  float a=\n      128.*pow((1.-(fract(t*s1)/5.))/5.,2.)\n  ;\n  float nb = pow(2.,(m3+m2-m1)/5.+8.);\n  return\n      abs(.5-1.*vec2(fract(time*nb*.998),fract(time*nb)))*a\n  ;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}