{
    "Shader": {
        "info": {
            "date": "1572922954",
            "description": "Experimenting with rotations and matrices. essentially equivalent to using a rotate function for 2 variables, but it's all contained in a matrix.",
            "flags": 0,
            "hasliked": 0,
            "id": "wdtXWj",
            "likes": 1,
            "name": "rotation matrices",
            "published": 3,
            "tags": [
                "mouse",
                "cubemap",
                "matrix"
            ],
            "usePreview": 0,
            "username": "Veggiebob",
            "viewed": 599
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    float aspect = iResolution.y / iResolution.x;\n    uv.x /= aspect;\n\tvec2 mouse = iMouse.xy/iResolution.xy - 0.5;\n    \n    // Time varying pixel color\n    vec3 col = vec3(0.);\n    float ztheta = -mouse.y * 3.14159;\n    float xtheta = mouse.x * 3.14159;\n    mat3 zrot = mat3(\n        vec3(cos(ztheta), sin(ztheta), 0.),\n        vec3(-sin(ztheta), cos(ztheta), 0.),\n        vec3(0., 0., 1.)\n    );\n    mat3 xrot = mat3(\n        vec3(cos(xtheta), 0., -sin(xtheta)),\n        vec3(0., 1., 0.),\n        vec3(sin(xtheta), 0., cos(xtheta))\n    );\n    \n    vec3 shift = vec3(\n        cos(uv.x),\n        sin(uv.y),\n        sin(uv.x)\n    );\n    \n    vec3 look = normalize(xrot * zrot * shift);\n    col = texture(iChannel0, look).rgb;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 22,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}