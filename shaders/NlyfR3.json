{
    "Shader": {
        "info": {
            "date": "1664893637",
            "description": "basic lever",
            "flags": 0,
            "hasliked": 0,
            "id": "NlyfR3",
            "likes": 5,
            "name": "basic lever",
            "published": 3,
            "tags": [
                "basiclever"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 204
        },
        "renderpass": [
            {
                "code": "//por jorge2017a2\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n/// y El grande Grupo de Shadertoy\n///basic lever-----4-oct-2022\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n\n#define S(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n#define S2(d,b) smoothstep(8.0*antialiasing(1.5),0.,d - (b) )\n\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{  vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nvec2 cs(float x)\n{ return vec2(cos(x),sin(x) );}\n\n\n\nvec3 brazoPalanca(vec2 p, vec3 colOut)\n{    float l1,l2,l3,l4a,l4b,l5a,l5b;\n    float a1, a2,a3,a4a,a4b,a5a,a5b;\n    vec2 p0,p1,p2,p3,p4a, p4b,p5a,p5b;\n    \n    float t=iTime*0.5;\n    l1=-2.5;\n    l2=3.5;\n    l3=4.5;\n    p0=vec2(0.0,0.0);\n     a1=radians(360.*sin(t*1.0));\n    float b=asin(-(l1*sin(a1))/l2); //referencia  https://www.desmos.com/calculator/eb4arug8ln\n    a2=b;\n    a3=radians(0.0);\n    \n    p1=p0+l1*cs(a1);\n    p2=vec2(l1*cos(a1)+l2*cos(a2),0.0); ///caso  especial\n    p3=p2+l3*cs(a3);\n   \n    float ds3= sdCircle(p-p2,l2);\n    float ds4b= sdCircle(p,abs(l1));\n    float db1= sdBox(p-p3, vec2(0.5) );\n    \n    float d1= sdSegment(p,p0,p1);\n    float d2= sdSegment(p,p1,p2);\n    float d3= sdSegment(p,p2,p3);\n    float d4= sdSegment(p-vec2(abs(l1)+l2+l3+0.5,0.0),vec2(0.0,3.0),vec2(0.0,-3.0));\n    \n    float db2= sdBox(p-vec2(8.0,0.9), vec2(3.0,0.25) );\n    float db3= sdBox(p-vec2(8.0,-0.9), vec2(3.0,0.25) );\n    \n    vec3 col=colOut;\n    col= DrawFigBorde(vec3(1.0,0.0,0.0), col,abs(d4)-0.1 ); //pared\n    col= DrawFigBorde(colOut, col,ds4b-0.1 );\n    col= DrawFigBorde(col, col,ds3-0.1 );\n    col= DrawFigBorde(vec3(0.0), col,abs(d1)-0.1 );\n    col= DrawFigBorde(vec3(1.0,0.0,0.0), col,abs(d2)-0.1 );\n    col= DrawFigBorde(vec3(0.0,0.0,1.0), col,abs(d3)-0.1 );\n    col= DrawFigBorde(vec3(0.0), col,db1 );\n    col= DrawFigBorde(vec3(0.0,1.0,0.0), col,db2);\n    col= DrawFigBorde(vec3(0.0,1.0,0.0), col,db3);\n    return col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   vec2 uv = ( 2.*fragCoord - iResolution.xy ) /iResolution.y;    \n    \n    uv-=vec2(0.0,-0.5);\n    float esc=8.0;\n    uv*=esc;\n    vec3 col=vec3(0.0,0.5,1.5);\n    col= brazoPalanca(uv-vec2(-5.0,5.0), col);\n    \n     //vignette\n    vec2 u = fragCoord/iResolution.xy;\n    uv = u; uv *=  1.0 - uv.yx;\n    float vig = uv.x*uv.y * 15.0; // multiply with sth for intensity\n    vig = pow(vig, 0.25); // change pow for modifying the extend of the  vignette\n    col+=(col+ 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)))/4.0;\n    fragColor = vec4(col*vig,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}