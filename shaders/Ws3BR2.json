{
    "Shader": {
        "info": {
            "date": "1607640126",
            "description": "Trying out a concept learned in math class recently. Code is pretty ugly tho",
            "flags": 0,
            "hasliked": 0,
            "id": "Ws3BR2",
            "likes": 7,
            "name": "Block-centric",
            "published": 3,
            "tags": [
                "2d",
                "mouse",
                "barycentric",
                "city"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 354
        },
        "renderpass": [
            {
                "code": "// Cole Peterson\n#define R iResolution.xy\n#define m vec2(R.x/R.y*(iMouse.x/R.x-.5),iMouse.y/R.y-.5)\n#define ss(a, b, t) smoothstep(a, b, t)\n\n\nfloat point(vec2 p, float r){\n \treturn ss(0.003, 0.0, length(p) - r);   \n}\nmat2 rot(float a) {\n    return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\nvec3 drawTriangle(vec3 col, vec2 uv, vec2 A, vec2 B, vec2 C){\n    col = mix(col, vec3(1., 0., 0.), point(A.xy-uv, 0.006));\n    col = mix(col, vec3(1., 0., 0.), point(B.xy-uv, 0.006));\n    col = mix(col, vec3(1., 0., 0.), point(C.xy-uv, 0.006));\n    return col;\n}\n\n\nfloat hash13(vec3 p3){\n\tp3  = fract(p3 * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    vec2 uv = vec2(u.xy - 0.5*R.xy)/R.y;\n    uv*= 1.0;\n    \n    vec3 col = vec3(1);\n    float scl = 0.25 + (.5+.3*sin(iTime*.5))*.3;\n    \n    //vec2 A = m;\n    vec2 A = vec2(0., -.17)*scl;\n    vec2 B = vec2(-0.1, -0.25)*scl;\n    vec2 C = vec2(0.1, -0.25)*scl;\n    \n    if(iMouse.z > 0.0) A = m;\n    \n    vec3 M = vec3(uv.x, uv.y, 1.);\n    \n    vec3 A3 = vec3(A, 1.);\n    vec3 B3 = vec3(A, 1.);\n    vec3 C3 = vec3(A, 1.);\n    \n    mat3 mat = mat3(vec3(A, 1.), vec3(B, 1.), vec3(C, 1.));\n    \n    vec3 bc = inverse(mat) * M;\n    \n    \n    bc.yz *= rot(iTime*.2);\n    bc.y -= iTime*4.;\n    \n    //bc.y += cos(bc.z*3.6 + iTime*8.)*0.03;\n    //bc.z += sin(bc.y*3.6 + iTime*8.)*0.03;\n    \n   \tvec3 id = floor(bc);\n    \n    float sY = floor(mod(id.y, 2.))*2. - 1.;\n    \n   \n    id = floor(bc);\n    vec3 rbc = fract(bc-.5)-.5;\n   \n    vec2 dim = vec2(3);\n    \n   \tcol = vec3(0.03);\t\n    \n    vec2 ridBIG = floor(mod(id.zy, (2.*dim.x - 1.)*14.));\n    \n    if(ridBIG.x < 5. || ridBIG.y < 0.)\n        dim = vec2(3);\n    else\n        dim = vec2(2);\n    \n    \n    vec2 rid = mod(id.zy, 2.*dim.x - 1.);\n    \n    if(rid.x == 3.) rid.x = 0.;\n    if(rid.y == 3.) rid.y = 0.;\n    \n    \n    float chng = floor(mod((rid.x + dim.x-1.) / (dim.x + dim.x-1.), 2.));\n    \n    vec2 p = vec2(0., 0.);\n    \n    float block = min(step(dim.x, abs(rid.y-p.x)) + \n                      step(dim.y, abs(rid.x-p.y)), 1.);\n    \n    \n    bc.z += iTime * cos(id.y);\n    bc.y += iTime * cos(id.z);\n    vec3 rbc2 = fract(bc)-.5;\n    \n    float t = id.y*0.14 + id.z*0.14;\n    //vec3 c = .5+.2*cos(vec3(2.2, 3.3, 1.3) * t);\n    vec3 c = .5 + .4*cos(vec3(2.2, 3.3, 1.3)*t);\n    col = mix(c, col, block);\n    \n    \n    vec2 ra = vec2(1.-step(.5, chng), step(.5, chng));\n    float re = rbc2.z*ra.x + rbc2.y*ra.y;\n    float road = abs(dot(ra, abs(rbc.yz)-.5));\n    float stripe = (ss(.04,.0, road-.01));\n    stripe *= ss(.04, .0, abs(re)-.2);\n  \t\n    col = mix(col, vec3(1., 1., 1.), stripe*block);\n    \n    \n    \n    col *= ss(0.8, .0, length(vec2(uv.x, uv.y*1.8))-.5);\n    \n    //col += (1.-step(0.026, abs(rbc.y) - 0.01))*.4 *(.5+.5*cos(iTime));\n    //col += (1.-step(0.026, abs(rbc.z) - 0.01))*.4*(.5+.5*cos(iTime));\n    \n    vec3 rbc3 = fract((bc - vec3(0., iTime, iTime))*0.2)-.5;\n    \n    \n    if(iMouse.z > 0.0) col = drawTriangle(col, uv, A, B, C);\n    \n    f = vec4(pow(max(col, 0.), vec3(1./2.2)), 1);\n\n    //f = vec4(col, 1.0);\n}\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}