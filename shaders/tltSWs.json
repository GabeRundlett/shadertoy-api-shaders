{
    "Shader": {
        "info": {
            "date": "1581982370",
            "description": "A very very simple fractal, just shift, mirror, rotate and scale space ;)\n\nThis a more elegant way to do my old \"basic fractal\" - https://www.shadertoy.com/view/Mss3Wf ",
            "flags": 0,
            "hasliked": 0,
            "id": "tltSWs",
            "likes": 20,
            "name": "Basic Fractal Zero",
            "published": 3,
            "tags": [
                "2d",
                "fractal"
            ],
            "usePreview": 0,
            "username": "PauloFalcao",
            "viewed": 1166
        },
        "renderpass": [
            {
                "code": "//Basic Fractal Zero by @paulofalcao\n\nconst int maxIterations=6;\n\n//generic rotation formula\nmat2 rot(float a){\n    float c=cos(a);float s=sin(a);\n    return mat2(c,-s,s,c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\t//normalize stuff\n    vec2 R=iResolution.xy,uv=(fragCoord-0.5*R)/R.x;\n    \n\t//global zoom\n\tuv*=sin(iTime)*0.5+1.5;\n    \n\t//shift, mirror, rotate and scale 6 times...\n\tfor(int i=0;i<maxIterations;i++){\n        uv*=2.1;          //<-Scale\n        uv*=rot(iTime);   //<-Rotate\n\t\tuv=abs(uv);       //<-Mirror\n        uv-=0.5;          //<-Shift\n\t}\n\n\t//draw a circle\n\tfragColor=vec4(length(uv)<0.4);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}