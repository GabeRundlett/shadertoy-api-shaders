{
    "Shader": {
        "info": {
            "date": "1674052357",
            "description": "simplified code + unfolding + rotation",
            "flags": 0,
            "hasliked": 0,
            "id": "dljGD3",
            "likes": 6,
            "name": "Zozuar Flower Remix",
            "published": 3,
            "tags": [
                "flower",
                "remix"
            ],
            "usePreview": 0,
            "username": "drliquidglitch",
            "viewed": 320
        },
        "renderpass": [
            {
                "code": "// Remix of MLA's remix of https://twitter.com/zozuar/status/1612919479582728232\n\nvec3 hsv(float h, float s, float v) {\n  vec3 rgb = clamp( abs(mod(h*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n  // x²(3-2x) = 3x²-2x³, f'(x) = 6x-6x² = 6x(1-x)\n  // f'(x) = 1-x², f = 0.5*(3.0*x-x³)\n  rgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing       \n  return v * mix( vec3(1.0), rgb, s);\n}\n\nmat2 rotate2D(float t) {\n  return mat2(cos(t),sin(t),-sin(t),cos(t));\n}\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n  float time = iTime;\n  fragCoord.x += 140.0*cos(iTime) * sin(0.01 * fragCoord.y);\n  fragCoord.y += 88.88*cos(iTime) * sin(0.01 * fragCoord.x);\n  fragColor = vec4(0);\n  vec2 uv = 0.3*(2.0*fragCoord-iResolution.xy)/iResolution.y;\n  vec3 ro = vec3(0,0,-0.6);\n  vec3 rd = vec3(uv,1);\n  float t = 0.0;\n  vec2 m = 2.0*(iMouse.xy/iResolution.xy - 0.5); \n  for (float i = 0.0; i < 1e2; i++) {\n    vec3 p = ro+t*rd-i/2e5;\n    \n      p.z -= abs(sin(iTime*0.1));\n      p.yz *= rotate2D(sin(iTime*0.1));\n      p.xz *= rotate2D(cos(iTime*0.1));\n    \n    p.yz *= rotate2D(0.2);\n\n    float r = length(p);\n    float e = asin(-p.z/r)-0.1/r;  // DE\n    float rot = cos(iTime*0.2); // rotational symmetry\n    vec3 q = vec3(log(r)-time,e,rot*atan(p.x,p.y)); // log spherical?\n    for (float scale = 1.0; scale<1e2; scale += scale) {\n      e += pow(abs(dot(sin(q.yxz*scale),cos(q*scale))),0.2)/scale; // FBM?\n    }\n    t += e*r*0.1; // Attenuate DE\n    if (t > 50.0) break;\n    float k = max(e*r*1e4,0.7);\n    k = pow(k,0.4);\n    fragColor.rgb += hsv(0.4-.02/r,k,0.02/exp(k));\n  }\n  fragColor *= 2.0/(1.0+fragColor);\n  fragColor = pow(fragColor,vec4(0.4545));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}