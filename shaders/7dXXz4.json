{
    "Shader": {
        "info": {
            "date": "1618338705",
            "description": "RGB Game of life style.",
            "flags": 32,
            "hasliked": 0,
            "id": "7dXXz4",
            "likes": 2,
            "name": "大龙猫 - Color of Game of Life",
            "published": 3,
            "tags": [
                "gameoflife"
            ],
            "usePreview": 0,
            "username": "totetmatt",
            "viewed": 254
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n       vec2 uv = fragCoord/iResolution.xy;   \n    fragColor = pow(texture(iChannel0 ,uv),vec4(.5,.4,.6,1.));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec3 pal(float t){\n    return .5+.5*cos(2.*3.141592*(1.*t+vec3(.0,.3,.7)));\n}\nmat2 rot(float a){\n    float c=cos(a),s=sin(a);\n    return mat2(c,-s,s,c);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\n       // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    vec2 id = (floor(uv*5.))*0.; // biome change, unused if *0.;\n        // Time varying pixel color\n    vec3 col = vec3(0.);\n\n    \n\n    \n    vec2 cpos = uv+vec2(sin(iTime),cos(iTime*.33))*.5;\n    float d = length(cpos)-.10-sin(iTime*.77)*.05+.05;\n    d= smoothstep(.01,.001,abs(d)-.0004);\n    col = vec3(d);\n    \n    \n    vec2 puv = ((uv*iResolution.y)+(.5*iResolution.xy))/iResolution.xy;\n    \n    vec4 acc = vec4(0.);\n    for(float x=-1.;x<=1.;x++){\n        for(float y=-1.;y<=1.;y++){\n               acc += texture(iChannel0,(puv+vec2(x,y)*.001));\n            }\n    }\n    \n    \n    vec4 pcol = vec4(0.,0.,0.,1.);\n    \n    for(int i=0;i<5;i++){\n        if(acc[i] >.3 && acc[i] <1.0 ){\n            if(acc[int(mod(float(i),3.))] >= 2.0*( acc[int(mod(float(i+1),3.))]  + acc[int(mod(float(i+2),3.))]) && \n            acc[i] >= .002*acc[int(mod(float(i+1)+mod(length(id),2.0),3.))]\n            ) {\n                pcol[i] += acc[i]+ acc[int(mod(float(i+1)+mod(length(id),2.0),3.))];\n                pcol[int(mod(float(i+1),3.))]= acc[int(mod(float(i+1)+mod(length(id),2.0),3.))]/2.*9.201;\n            } else {\n             //pcol[i] *= acc[i];\n            }\n        } else if(acc[i] >=1.0){ pcol[i]= acc[i]/9.201;}\n    }\n    pcol = pcol*1.001;\n    \n    \n    fragColor = vec4(col*pal(iTime*1.33+atan(cpos.x,cpos.y)*2.),1.0)+pcol;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}