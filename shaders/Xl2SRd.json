{
    "Shader": {
        "info": {
            "date": "1445917935",
            "description": "Like the transition of the old Windows pipes screensaver: https://youtu.be/XPZb8HoQgH8?t=30\n(Except that probably doesn't use a sine wave, it's probably more linear)\n",
            "flags": 0,
            "hasliked": 0,
            "id": "Xl2SRd",
            "likes": 14,
            "name": "2d Blocky Dissolve",
            "published": 3,
            "tags": [
                "2d",
                "effect",
                "transition",
                "dissolve"
            ],
            "usePreview": 0,
            "username": "1j01",
            "viewed": 2807
        },
        "renderpass": [
            {
                "code": "\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float resolution = 5.0;\n    vec2 lowresxy = vec2(\n    \tfloor(fragCoord.x / resolution),\n    \tfloor(fragCoord.y / resolution)\n    );\n    \n    if(sin(iTime) > rand(lowresxy)){\n\t\tfragColor = vec4(uv,0.5+0.5*sin(5.0 * fragCoord.x),1.0);\n        //fragColor = vec4(uv,0.5+0.5*sin(iTime * 5.0 * uv.x),1.0);\n        //fragColor = vec4(uv,0.5+0.5*sin(iTime * 5.0 * uv.x * sin(uv.x * uv.y * iTime)),1.0);\n        //fragColor = vec4(uv,0.5+0.5*sin(iTime * 5.0 * uv.x * sin(uv.x / uv.y * iTime / 500000.0)),1.0);\n\t\t//fragColor = vec4(uv,0.5+0.5*sin(iTime * 5.0 * uv.x * sin(uv.x * uv.y * iTime / 5000.0)),1.0);\n\t\t//fragColor = vec4(uv,0.5+0.5*sin(iTime * 500.0 * uv.x * sin(uv.y + iTime * 500.0)),1.0);\n\t\t//fragColor = vec4(uv,0.5+0.5*sin((uv.x + uv.y) * 500.0 * sin(iTime)),1.0);\n    }else{\n\t\tfragColor = vec4(0.0,0.0,0.0,1.0);\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}