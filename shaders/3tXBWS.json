{
    "Shader": {
        "info": {
            "date": "1597576471",
            "description": "Late night VJ session",
            "flags": 64,
            "hasliked": 0,
            "id": "3tXBWS",
            "likes": 20,
            "name": "The City At night",
            "published": 3,
            "tags": [
                "music",
                "lines",
                "audio",
                "glow",
                "glow",
                "dots"
            ],
            "usePreview": 0,
            "username": "gilesruscoe",
            "viewed": 920
        },
        "renderpass": [
            {
                "code": "#define AA 6.0 / iResolution.y\n\nfloat hash21(vec2 v) {\n    return fract(sin(dot(v, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat line(vec2 uv, vec2 a, vec2 b, float width)\n{\n    vec2 pa = uv - a;\n    vec2 ba = b - a;\n\tfloat h = clamp(dot(pa,ba) / dot(ba,ba), 0.0, 1.0);\t\n\treturn 1.0 - smoothstep(-AA, AA, length(pa - ba * h) - width);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float ar = iResolution.y / iResolution.x;\n    uv = uv * 2.0 - 1.0;\n    uv *= 1.0 + sin(iTime * 0.5) * 0.35;\n    \n    uv.y *= ar;\n\n    \n    vec3 comp = vec3(0.0);\n    float lines = 0.0;\n    for(int i = 0; i < 100; i++)\n    {\n       \tfloat ifloat = float(i);\n        vec2 seed = vec2(ifloat * 1.0, ifloat * 3.0);\n        vec2 pos = (vec2((hash21(seed) * 2.0 - 1.0) * 2.0,\n                         (hash21(seed*2.0) * 2.0 - 1.0)) * 0.5);\n        \n        float soundsample = texture( iChannel0, vec2(floor(abs(pos.x*0.5) * 32.0) / 32.0,0.0) ).x * 1.10;\n        if(soundsample < 0.55)\n            continue;\n\n        float burst = pow(soundsample, 5.0) * 20.0;\n        \n        pos.x += sin(iTime + ifloat) * 0.25;\n        pos.y += cos(iTime * 2.0 + ifloat) * 0.15;\n        float value = length(uv + pos) * 4.25;\n        \n        // circles\n        vec3 col = normalize(vec3(sin(pos.x*5.0) + 0.25, 0.1, sin(pos.y*10.0))) * 3.0;\n    \tcomp += clamp(col * smoothstep(value - AA, value + AA, 0.01 + burst * 0.02) * 0.155, vec3(0.0), vec3(1.0));\n        comp += clamp(col * smoothstep(value - 0.5, value + 0.5, 0.01 + burst * 0.075) * 0.01, vec3(0.0), vec3(1.0)) * 2.0;\n        \n        // Lines\n        float L = 0.0;\n        for(int j = 0; j < int(pow(soundsample, 3.0) * 15.8); j++)\n        {\n            float jfloat = float(j);\n            vec2 Lseed = vec2(jfloat, jfloat);\n            vec2 Lpos = (vec2((hash21(Lseed) * 2.0 - 1.0) * 2.0,\n                         (hash21(Lseed*2.0) * 2.0 - 1.0)) * 0.5);\n            Lpos.x += sin(iTime + jfloat) * 0.25;\n        \tLpos.y += cos(iTime * 2.0 + jfloat) * 0.15;\n            L = max(L, line(uv, -pos, -Lpos, 0.001));\n        }\n        lines += L;\n\n    }\n    comp *= 0.25;\n    comp += lines * 0.01;\n    vec3 bg = vec3(0.35*(uv.y * 0.5 + 0.5), 0.0, 0.15);\n    fragColor = vec4(bg + vec3(comp)*12.0, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 23837,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/clozee/evasion"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}