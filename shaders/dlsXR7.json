{
    "Shader": {
        "info": {
            "date": "1674514643",
            "description": "discovered ",
            "flags": 0,
            "hasliked": 0,
            "id": "dlsXR7",
            "likes": 10,
            "name": "just a pattern",
            "published": 3,
            "tags": [
                "pattern"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 254
        },
        "renderpass": [
            {
                "code": "\nfloat f_n_dpat1(vec2 o, float n){\n    o = abs(o);\n    float nd = max(o.x*n, o.y);\n    \n    if(o.x > abs(o.y-n)){\n        return o.x;\n    }\n    return o.y;\n    \n    return nd;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 o_fc = (fragCoord.xy-iResolution.xy*0.5)/iResolution.y;\n    vec2 o_fcorig = o_fc;\n    o_fc *= 20.;\n    vec2  o_fc_fract = fract(o_fc)-.5;\n\n    float n_t = iTime*2.;\n    \n    \n    float n_id = atan(floor(o_fc.x), floor(o_fc.y));\n    n_t+=n_id;\n    float n = f_n_dpat1(o_fc_fract, sin(n_t)*0.5+0.5)*2.;\n    n = (sin(n_t+n+n_id*33.)*.5+.7)*n;\n    fragColor = vec4(n);\n    fragColor = sqrt(fragColor);\n    fragColor.rb *= floor(o_fc)/5.;\n    fragColor.gb *= fract(length(fract(o_fc)-.5)+n_t*.2);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}