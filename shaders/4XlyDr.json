{
    "Shader": {
        "info": {
            "date": "1726062575",
            "description": "originals https://www.shadertoy.com/view/XXyGzh",
            "flags": 0,
            "hasliked": 0,
            "id": "4XlyDr",
            "likes": 2,
            "name": "colorful lines",
            "published": 3,
            "tags": [
                "lines",
                "color",
                "bright",
                "neon"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 81
        },
        "renderpass": [
            {
                "code": "#define tile_factor 0.2\n#define noise_factor 0.03\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\nvoid mainImage( out vec4 o, vec2 u )\n{\nvec4 O =o;\nvec2 C=u;\nO=vec4(0);\n\n    vec3 n1,q,r2=iResolution,\n    d2=normalize(vec3((C*2.-r2.xy)/r2.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<70.;\n        O.xyz+=mix(vec3(1),H(g*.1),.8)*1./e/8e3\n    )\n    {\n        n1=g*d2;\n       \n        a=30.;\n        n1=mod(n1-a,a*2.)-a;\n        s=2.;\n        for(int i=0;i++<8;){\n            n1=.3-abs(n1);\n            n1.x<n1.z?n1=n1.zyx:n1;\n            n1.z<n1.y?n1=n1.xzy:n1;\n            s*=e=1.4+sin(iTime*.1)*.1;\n            n1=abs(n1)*e-\n                vec3(\n                    5.+sin(iTime*.3+.5*sin(iTime*.3))*3.,\n                    120,\n                    8.+cos(iTime*.5)*5.\n                 );\n         }\n         g+=e=length(n1.yz)/s;\n    }\nvec2 position = u.xy / iResolution.xy;\nvec2 p = position * vec2(-1.0, -2.0);// vec2((position.x + 1.0)/2.0, position.y);\n\n\n   \nfloat t = iTime/300.0;\n\nvec2 waterCoord = vec2(p.x, 1.0-position.y);\nvec2 texCoordNormal0 = waterCoord * tile_factor;\ntexCoordNormal0 += t ;\n\nvec2 texCoordNormal1 = waterCoord * tile_factor;\ntexCoordNormal1.s -= t ;\ntexCoordNormal1.t += t ;\n\nvec3 normal0 = texture(iChannel1, texCoordNormal0).rgb * 2.0 - 1.0;\nvec3 normal1 = texture(iChannel1, texCoordNormal1).rgb * 2.0 - 1.0;\nvec3 normal = normalize(normal0 + normal1);\n\n//the final texture cooridnate is disturbed using the normal texture with some noise factor\np += noise_factor * normal.xy;\n    vec2 v = iResolution.xy;\n         u = 0.12*(u+u-v)/v.y;    \n         u*=texCoordNormal1;\n    vec4 z = o = vec4(1,2,3,0);\n     \n    for (float a = .5, t = iTime*0.12, i;\n         ++i < 15.;\n         o += (1. + cos(z+t))\n            / length((1.+i*dot(v+p,v*p))\n                   * sin(1.5*u/(.5-dot(u,u)) - 9.*u.yx+p.xy + t))\n         )  \n        v = cos(++t - 7.*u*p.xy*pow(a += .003, i)) - 5.*u,                \n        u += tanh(20. * dot(u *= mat2(cos(i + .02*t - vec4(0,11,33,0)))\n                           ,u)\n                      * cos(1e2*u.yx + t)) / 2e2\n           + .2 * a * u*texCoordNormal0\n           + cos(4./exp(dot(o,o)/1e2) + t) / 3e2;\n             \n     o = 15.6 / (min(o, 13.) + 164. / o)\n       - dot(u*texCoordNormal1 , u*p.xy) / 250.;\n     \n}\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}