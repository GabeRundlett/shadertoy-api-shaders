{
    "Shader": {
        "info": {
            "date": "1632420449",
            "description": "Some lighting (wrongly working)  and camera move. Quite happy with the result overall ",
            "flags": 0,
            "hasliked": 0,
            "id": "sdKGWt",
            "likes": 7,
            "name": "大龙猫 - Quicky#059",
            "published": 3,
            "tags": [
                "quicky"
            ],
            "usePreview": 0,
            "username": "totetmatt",
            "viewed": 290
        },
        "renderpass": [
            {
                "code": "mat2 rot(float a){float c=cos(a),s=sin(a);return mat2(c,-s,s,c);}\nvec3 ln ;\nvec2 sdf(vec3 p){\n\n    vec2 h;\n  vec3 ph=p;\n    ph.x += asin(.2*sin(p.y*10.))*.2;\n  h.x=length(ph.xz)-1.;\n    h.y=1.;\n  \n  \n  vec2 t;\n  vec3 pt = p;\n    pt.y +=+iTime*.35;\n    float idy = floor(pt.y);\n    pt.xz *=rot(iTime*.33+idy);\n    pt.xz = abs(pt.xz)-1.;\n \n    pt.y = fract(pt.y)-.5;\n    t.x  = min(.25,length(pt)-(.2+fract(iTime)*.2));\n    t.y = 2.+ mod(idy,2.);\n    ln = pt;\n   \n  h = t.x < h.x ? t:h;\n\n  \n    \n  \n  return h;\n }\n#define q(s) s*sdf(p+s).x\n\n float ao(vec3 rp, vec3 n, float k){\n    vec2 d = sdf(rp+n*k);\n    if(d.y==2.){\n       return 1.;\n      }\n     return d.x /k;\n   }\n\nvec3 norm(vec3 p,float ee){vec2 e= vec2(-ee,ee);return normalize(q(e.xyy)+q(e.yxy)+q(e.yyx)+q(e.xxx));}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n float timer = fract(iTime*.06);\n \n  vec3 col = vec3(.1);\n\n  vec3 ro = mix(vec3(0.,0.,-7.),vec3(0.,100.,-1.25),timer);\n  vec3 rt = mix(vec3(0.,0.,-0.),vec3(0.,110.,-0.),timer);\n  vec3 z = normalize(rt-ro);\n  vec3 x = normalize(cross(z,vec3(0.,-1.,0.)));\n  vec3 y = normalize(cross(z,x));\n  \n  vec3 rp = ro;\n  vec3 rd = mat3(x,y,z)*normalize(vec3(uv,1.));\n  \n  vec3 light = vec3(1.,2.,-3.);\n  float dd =0.;\n  vec3 acc = vec3(0.);\n  bool nohit = false;\n  for(float i=0.;i<=128.;i++){\n    \n      vec2 d = sdf(rp);\n    \n    dd +=abs(d.x);\n    if(dd > 60.){nohit= true; break;}\n    \n    if(d.y==2. && d.x <.1){\n      \n        acc += vec3(1.,.30,.0)*exp(-abs(d.x))/18.;\n        d.x = max(.002,abs(d.x));\n      }\n      if(d.x <.001){\n          vec3 l2 = normalize(ln);\n          vec3 n = norm(rp,.0003);\n          float diff = max(0.,dot(normalize(light-rp),n));\n          float diff2 = max(0.,dot(l2,n));\n     \n          if(d.y==1.) { \n            col = vec3(.1)*diff+ vec3(1.,.30,.0)*diff2;;  \n             rd = reflect(rd,n);\n             rp+=rd*.1;\n           \n          } else if (d.y==3.){\n              col = vec3(.1,.1,.1)*diff;\n                break;\n              }\n          \n    \n       \n          \n          }\n          rp+=rd*d.x;\n }\n  col +=acc;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}