{
    "Shader": {
        "info": {
            "date": "1612361896",
            "description": "Creating windy effect of stars. ",
            "flags": 64,
            "hasliked": 0,
            "id": "3ldfRN",
            "likes": 4,
            "name": "Is it the wind of stars?",
            "published": 3,
            "tags": [
                "math",
                "tutorial",
                "sin",
                "rotate",
                "atan",
                "cos",
                "hexagon",
                "stars",
                "hex",
                "tile",
                "wind",
                "max",
                "tan",
                "cloth",
                "coordinate",
                "theartofcode"
            ],
            "usePreview": 0,
            "username": "YitingLiu",
            "viewed": 335
        },
        "renderpass": [
            {
                "code": "//tutorial https://www.youtube.com/watch?v=VmrIDyYiJBA\n\nfloat HexDist(vec2 uv){\n  uv=abs(uv);\n  float c = dot (uv, normalize(vec2(1,1.73)));// 1.73 is from sqrt of (2 to the power of 2 - 1 to the power of 2)\n  c=max(c,uv.x);\n    \n   return c;\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvec4 HexCoords(vec2 uv){\n    vec2 r = vec2(1.,1.73);\n    vec2 h = r/2.;\n    \n    vec2 a = mod(uv,r)-h;\n    vec2 b = mod(uv-h,r)-h;\n    \n    vec2 gv = dot(a,a)<dot(b,b)?a:b; // shorter version of if statement \n    \n    vec2 id = (uv-gv)*rotate2d(3.1415*cos(iTime/100.));\n   \n    float x = atan(gv.x,gv.y);// which angle the x is at according to the center of y\n    float y = 0.5-HexDist(gv);// center of the hex\n    \n    return vec4(x,y,id.x,id.y);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0);\n    \n    uv*=8.;\n    vec4 hex= HexCoords(uv);\n    float c = smoothstep(.05,1.,hex.y*sin(hex.x+hex.z+iTime*0.6));\n    col+=c;\n    \n    col*=abs(uv.y-uv.x);  \n    \n    \n    /**\n    Moving Hex\n    col+=sin(HexDist(uv*10.+iTime));\n\n    */\n    \n    fragColor = vec4(col*(abs(sin(iTime*0.5))+0.1),1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 25361,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/yitingliu/dreamstate"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}