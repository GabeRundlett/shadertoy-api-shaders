{
    "Shader": {
        "info": {
            "date": "1479660884",
            "description": "Print-friendly and visually pleasing color Palette x8. Code is not efficiently implemented, will revisit soon.",
            "flags": 0,
            "hasliked": 0,
            "id": "4ltSWN",
            "likes": 2,
            "name": "Print-friendly Color Palette x8",
            "published": 3,
            "tags": [
                "colorpalette",
                "rgblabel",
                "printfriendly"
            ],
            "usePreview": 0,
            "username": "starea",
            "viewed": 464
        },
        "renderpass": [
            {
                "code": "/** \n * Print-friendly Color Palette x8\n * Link to demo: https://www.shadertoy.com/view/4ltSWN\n * starea @ ShaderToy\n */\n\n// Print-friendly Color Palette x8 starts, Ruofei Du\nvec3 RGBLabel(int i) {\n\tif (i == 0) return vec3(1.000, 1.000, 0.701);  else\n\tif (i == 1) return vec3(0.988, 0.834, 0.898);  else\n\tif (i == 2) return vec3(0.992, 0.805, 0.384); else\n\tif (i == 3) return vec3(0.775, 0.779, 0.875); else\n\tif (i == 4) return vec3(0.701, 0.871, 0.312); else\n\tif (i == 5) return vec3(0.553, 0.827, 0.780); else\n\tif (i == 6) return vec3(0.502, 0.694, 0.827); else\n\tif (i == 7) return vec3(0.984, 0.502, 0.347);\n    \n    \n\treturn vec3(0.0);\n}\n// Print-friendly Color Palette x8 ends, Ruofei Du\n\n// other references:\n// https://r-forge.r-project.org/scm/viewvc.php/*checkout*/pkg/sp/R/bpy.colors.R?root=rspatial\n// Backup experiments\n/*\nvec4 RGBLabelIQ(int i) {\n\treturn vec4(vec3(0.5) + vec3(0.5) * cos(6.28318 * (vec3(1.0) * float(i) / 8.0 + vec3(0.0, 0.33, 0.67))), 1.0); \n}\n\n// This may look better\nvec4 RGBColor(float r, float g, float b) {\n\treturn vec4(vec3(r, g, b) / 255.0, 1.0); \n}\n\nvec4 RGBLabelNew(int i) {\n\tif (i == 0) return RGBColor(255.0, 255.0, 179.0);  else\n\tif (i == 1) return RGBColor(252.0, 205.0, 229.0);  else\n\tif (i == 2) return RGBColor(190.0, 186.0, 218.0); else\n\tif (i == 3) return RGBColor(141.0, 211.0, 199.0); else\n\tif (i == 4) return RGBColor(179.0, 222.0, 105.0); else\n\tif (i == 5) return RGBColor(253.0, 180.0,  98.0); else\n\tif (i == 6) return RGBColor(128.0, 177.0, 211.0); else\n\tif (i == 7) return RGBColor(251.0, 128.0, 114.0); else\n\t\t\t\treturn RGBColor(0.0, 0.0, 0.0);\n}\n\nvec3 RGBtoHCV(in vec3 RGB)\n{\n\tfloat Epsilon = 1e-10;\n\tvec4 P = (RGB.g < RGB.b) ? vec4(RGB.bg, -1.0, 2.0 / 3.0) : vec4(RGB.gb, 0.0, -1.0 / 3.0);\n\tvec4 Q = (RGB.r < P.x) ? vec4(P.xyw, RGB.r) : vec4(RGB.r, P.yzx);\n\tfloat C = Q.x - min(Q.w, Q.y);\n\tfloat H = abs((Q.w - Q.y) / (6.0 * C + Epsilon) + Q.z);\n\treturn vec3(H, C, Q.x);\n}\n\nvec3 RGBtoHSV(in vec3 RGB)\n{\n\tfloat Epsilon = 1e-10;\n\tvec3 HCV = RGBtoHCV(RGB);\n\tfloat S = HCV.y / (HCV.z + Epsilon);\n\treturn vec3(HCV.x, S, HCV.z);\n}\n\nvec4 RGBLabelOld(int i) {\n\tif (i == 0) return RGBColor(127.0, 201.0, 127.0); else\n\tif (i == 1) return RGBColor(190.0, 174.0, 212.0); else\n\tif (i == 2) return RGBColor(253.0, 192.0, 134.0); else\n\tif (i == 3) return RGBColor(255.0, 255.0, 153.0); else\n\tif (i == 4) return RGBColor(56.0, 108.0, 176.0); else\n\tif (i == 5) return RGBColor(240.0, 2.0, 127.0); else\n\tif (i == 6) return RGBColor(191.0, 91.0, 23.0); else\n\tif (i == 7) return RGBColor(102.0, 102.0, 102.0); else\n\t\t\t\treturn RGBColor(0.0, 0.0, 0.0);\n}\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 col = RGBLabel(int(floor(uv.x * 9.0))); \n    float grey = dot(col, vec3(0.3, 0.59, 0.11));\n\tfragColor = vec4( (mod(iTime, 2.0) < 1.0) ? col : vec3(grey), 1.0); \n\tfragColor = vec4( (fragCoord.y / iResolution.y < 0.5) ? col : vec3(grey), 1.0); \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "/*\n\na = [\n(0.988, 0.834, 0.898),\n(0.992, 0.805, 0.384),\n(0.775, 0.779, 0.875),\n(0.701, 0.871, 0.312),\n(0.553, 0.827, 0.780),\n(0.502, 0.694, 0.827),\n(0.984, 0.502, 0.347),\n]\n\nfor i in a:\n    print('%.2f, %.2f, %.2f\\n' % ( i[0] * 255.0, i[1] * 255.0, i[2] * 255.0) )\n    \n    \n251.94, 212.67, 228.99\n\n252.96, 205.28, 97.92\n\n197.62, 198.65, 223.12\n\n178.75, 222.10, 79.56\n\n141.02, 210.88, 198.90\n\n128.01, 176.97, 210.88\n\n250.92, 128.01, 88.48\n    \n  \n*/",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}