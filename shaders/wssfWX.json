{
    "Shader": {
        "info": {
            "date": "1589209539",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "wssfWX",
            "likes": 6,
            "name": "infinite stairs - helix 1e",
            "published": 3,
            "tags": [
                "raymarching",
                "sdf",
                "spiral",
                "helix",
                "short",
                "helicoid"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 354
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/tdlfWX\n// variant of https://shadertoy.com/view/XsdBW8\n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float T = iTime, t=1.,a;\n    mat2  R = mat2( cos(-.3*T +vec4(0,33,11,0)) );\n    vec3  q = iResolution, A,\n          D = vec3(.3*(U+U-q.xy)/q.y, -1),        // ray direction\n          p = 30./q;                              // marching point along ray \n    O-=O;\n    for ( O++; O.x > 0. && t > .01 ; O-=.015 )\n        q = p.xzy - vec3(0,0,T),\n        q.xy *= R,\n        A = abs(q), t = abs(max(A.x,A.y)-6.)-2.,  // bounding hollow box\n        a = atan(q.y,q.x),\n        t = max(t, sin(a-floor(q.z*4.)/4.*1.047)),// helix: stairs side\n        t = max(t, sin(a-q.z*1.047+2.3) ),        // helix: roof side\n        p += .7*t*D;                              // step forward = dist to obj\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}