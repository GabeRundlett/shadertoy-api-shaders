{
    "Shader": {
        "info": {
            "date": "1495661741",
            "description": "A simple pattern. Using mod to make a pattern, but each cell has its own move parameters.",
            "flags": 0,
            "hasliked": 0,
            "id": "MdffDr",
            "likes": 4,
            "name": "Red triangles pattern",
            "published": 3,
            "tags": [
                "triangles",
                "red",
                "pattern",
                "rotation",
                "cell"
            ],
            "usePreview": 0,
            "username": "josemorval",
            "viewed": 625
        },
        "renderpass": [
            {
                "code": "float easingSinInOut(float t){\n   t = mod(t,1.0);\n   return 0.5*(1.0 - cos(3.14159 * t)); \n}\n\nfloat triDist(vec2 p){\n  float f = smoothstep(0.0,0.01,p.x-p.y);\n  f*=  smoothstep(0.0,0.01,-p.x-p.y);\n  f*=  smoothstep(0.0,0.01,0.5+p.y);\n  return f;\n}\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 p = fragCoord.xy/iResolution.xy;\n  p-=0.5;\n  p.x *= iResolution.x/iResolution.y;\n  p*=15.0;\n  \n  float t = mod(0.7*iTime,4.0);\n  p.x+=6.0*easingSinInOut(t)*(1.0-step(1.0,t));\n  p.x+=6.0*step(1.0,t)*(1.0-step(2.0,t));\n  p.x+=(6.0-6.0*easingSinInOut(t))*step(2.0,t)*(1.0-step(3.0,t));\n  p.x+=0.0*step(3.0,t)*(1.0-step(4.0,t));\n\n  p.y+=0.0*(1.0-step(1.0,t));  \n  p.y+=6.0*easingSinInOut(t)*step(1.0,t)*(1.0-step(2.0,t));\n  p.y+=6.0*step(2.0,t)*(1.0-step(3.0,t));\n  p.y+=(6.0-6.0*easingSinInOut(t))*step(3.0,t)*(1.0-step(4.0,t));\n  \n  float gridsize = 1.3;\n \n  vec2 pcenter = floor((p)/gridsize);\n \n  float angle = 1.0+iTime+10.0*sin(1.0*pcenter.y+1.0*iTime)*sin(1.0*pcenter.x+1.0*iTime);\n  angle = angle;\n \n  vec2 prot=mod(p,gridsize)-gridsize/2.0;\n  prot  = mat2(\n    cos(angle),\n    sin(angle),\n    -sin(angle),\n    cos(angle)\n  )*prot;\n \n  vec2 ptrans = prot-vec2(0.0,0.0);\n  float f = triDist(ptrans);\n \n  ptrans = mat2(\n    cos(3.14159/1.0),\n    sin(3.14159/1.0),\n    -sin(3.14159/1.0),\n    cos(3.14159/1.0)\n  )*prot;\n  ptrans = ptrans-vec2(0.0,-0.0);\n \n  f = max(f,triDist(ptrans));\n \n  float m = 0.5+0.5*sin(123.0*pcenter.x+5587.0*pcenter.y+3.0*iTime);\n  fragColor = vec4(m*f,0.0,0.0,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}