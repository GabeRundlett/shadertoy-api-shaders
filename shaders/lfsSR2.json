{
    "Shader": {
        "info": {
            "date": "1705480004",
            "description": "Fourier Synthesis SquareWave - SawTooth",
            "flags": 0,
            "hasliked": 0,
            "id": "lfsSR2",
            "likes": 3,
            "name": "Fourier SquareWave - SawTooth",
            "published": 3,
            "tags": [
                "fourier",
                "squarewave",
                "synthesis",
                "sawtooth"
            ],
            "usePreview": 0,
            "username": "tsakal",
            "viewed": 178
        },
        "renderpass": [
            {
                "code": "const float PI = acos(-1.),\n\t\t\tTAU = 2.*PI,\n            SCALE = 3.,\n            RAD = .96*SCALE;\nfloat T, lTHICK = 1.5, AR;\n//========================\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d ){\n    return a + b*cos( TAU*(c*t+d) );\n}\n//========================\nvec3 shadePoint(vec3 col, vec3 col1, float fValue, float thick) {\n    col = mix( col, col1, smoothstep( thick, .0, abs(fValue)/fwidth(fValue) ) );\n    return col;\n}\n//========================\nvec3 fourierSquareWave(vec3 col, vec2 p, int iTerms) {\n  // http://mathworld.wolfram.com/FourierSeriesSquareWave.html\n  float totalTerms = float(iTerms), fTerms = 1.+mod(floor(T), totalTerms),\n    \tW = .5*RAD, L = W*AR,\n    \tt, i,\n    \thMove=T, x=p.x+hMove, y=p.y-1.05*W,\n    \ttermValue, fourierValue = 0.,\n    \tth=atan(p.x,p.y);\n  vec3 termColor = pal(cos(th), vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.33,0.67) );\n  bool viewTerms = (fTerms<totalTerms);\n  for (t=0.; t<fTerms; t++){\n    i = 2.*t+1.;\n    termValue = cos(t*PI)*cos((i*PI/L)*x)*W/i;\n    fourierValue += termValue;\n    if (viewTerms) col = shadePoint(col, termColor, y-termValue, .5*lTHICK);\n  }\n  col = shadePoint(col, 1.-termColor, y-fourierValue, 1.25*lTHICK);\n  return col;\n}\n//========================\nvec3 fourierSawThooth(vec3 col, vec2 p, int iTerms) {\n  // http://mathworld.wolfram.com/FourierSeriesSawtoothWave.html\n  float totalTerms = float(iTerms), fTerms = 1.+mod(floor(T), totalTerms),\n    \tW = .25*RAD, L = W*AR,\n    \ti,\n    \thMove=T, x=p.x-hMove, y=p.y+2.1*W,\n    \ttermValue, fourierValue = 0.,\n    \tth=atan(p.x,p.y);\n  vec3 termColor = pal(sin(th), vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.33,0.67) );\n  bool viewTerms = (fTerms<totalTerms);\n  for (i=1.; i<=fTerms; i++){\n    termValue = -(W/i)*sin(i*PI*x/L);\n    fourierValue += termValue;\n    if (viewTerms) col = shadePoint(col, termColor, y-(fourierValue+termValue), .5*lTHICK);\n  }\n  col = shadePoint(col, 1.-termColor, y-fourierValue, 1.25*lTHICK);\n  return col;\n}\n//========================\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = (-iResolution.xy + 2.0*fragCoord.xy) / iResolution.y;\n  AR = iResolution.x / iResolution.y;\n  uv *= SCALE;\n  T = .5*iTime;\n  vec3 COL = vec3(0., 0., .15);\n  COL = fourierSquareWave(COL, uv, 8);\n  COL = fourierSawThooth(COL, uv, 8);\n  fragColor = vec4(COL, 1.);\n}\n//========================",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}