{
    "Shader": {
        "info": {
            "date": "1592101306",
            "description": "Hi there! I'm learning shaders, feedback is always welcome!\n\nhttps://thebookofshaders.com/06/\nExercise: animate a transition between a sunrise and sunset using u_time.",
            "flags": 0,
            "hasliked": 0,
            "id": "WlsyW4",
            "likes": 3,
            "name": "BoS - Dawn to Dusk Transition",
            "published": 3,
            "tags": [
                "bookofshaders"
            ],
            "usePreview": 0,
            "username": "zeta",
            "viewed": 410
        },
        "renderpass": [
            {
                "code": "const float TIME_SPEED = .2;\nconst float SUN_COLOR_SIZE = 3.;\n\nconst float PI = 3.14159265359;\n\nconst vec3[] sky = vec3[](\n    vec3(2., 28., 78.) / 255.,     // night\n    vec3(12., 228., 223.) / 255.   // day\n);\n\nconst vec3[] sun = vec3[](\n    vec3(255., 102., 0.) / 255.,   // dusk\n    vec3(255., 253., 195.) / 255.  // dawn\n);\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float time = iTime * TIME_SPEED;\n    float sun_h = sin(time);\n    \n    vec3 sky_col = mix(sky[0], sky[1], smoothstep(-1., 1., sun_h));\n    vec3 sun_col = mix(sun[0], sun[1], smoothstep(-1., 1., sun_h));\n    \n    vec3 col;\n    if (uv.y < sun_h) {\n    \tcol = mix(sky_col, sun_col, smoothstep(sun_h-(SUN_COLOR_SIZE/2.), sun_h, uv.y));\n    } else {\n        col = mix(sun_col, sky_col, smoothstep(sun_h, sun_h+(SUN_COLOR_SIZE/2.), uv.y));\n    }\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}