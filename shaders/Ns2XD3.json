{
    "Shader": {
        "info": {
            "date": "1621171355",
            "description": "potate",
            "flags": 0,
            "hasliked": 0,
            "id": "Ns2XD3",
            "likes": 27,
            "name": "Day 514",
            "published": 3,
            "tags": [
                "mdtmjvm",
                "kurzgesagt"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 431
        },
        "renderpass": [
            {
                "code": "\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    float pxSz = fwidth(uv.y);\n    \n    vec3 col = vec3(0);\n    \n    float sunH =  + sin(iTime*0.4)*0.1;\n    \n    float sunM = sunH*4. + 0.4;\n    col = mix(vec3(0.4,0.23,0.1 + sunM*0.)*4.4,vec3(0.2 - sunH*0.6,0.3+ sunH*0.4,0.5)*1.,smoothstep(0.,1.,uv.y*0.8 +0.5));\n    \n    {      \n        // sun\n        vec2 p = uv - vec2(0.1,+0.1+sunH*1.4);\n        float d = length(p) - 0.2;\n        float sh = smoothstep(0.5,0.0,abs(d));\n        \n        #define smm(a)  sin(a + sin(a))*0.05\n\n        col = mix(col, col*0.5*vec3(1,1,0.) + vec3(1. ,0.5,0.5)+ sin(d*2.)*sh * vec3(0.6,0.5,1.)*1.,smoothstep(fwidth(d),0.,d - 0.1 + smm(iTime))*0.4);\n        col = mix(col, col*0.5*vec3(1,1,0.) + vec3(1. ,0.6,0.5)+ sin(d*4.)*sh * vec3(0.6,0.5,1.)*1.,smoothstep(fwidth(d),0.,d - 0.2 + smm(iTime + 0.4))*0.12);\n        \n        col = mix(col,vec3(1. ,0.6,0.5)*1.5+ 1.*sin(-d*2.)*sh * vec3(0.6,0.5,1.)*1.,smoothstep(fwidth(d),0.,d+ smm(iTime + 0.1)*0.6));\n        \n        {\n            p *= 1. + smm(iTime)*3.;\n            float sm = sin(iTime)*0.02;\n            //p *= rot(sm*14. + iTime + sin(iTime) + pi);\n            //p *= rot( (iTime + sin(iTime))*float(mod(iTime,pi*8.)<pi*2.));\n            //p*= rot(sin(iTime)*float(mod(iTime,pi) < pi));\n            p*= rot((sin(iTime))*smoothstep(-0.5,1.,sin((iTime/2. + pi/2.))));\n            \n            \n            d = sdSegment( p - vec2(0,-0.05 + sin(p.x/0.1*pi/3. - pi/2.)*0.05), vec2(-0.1 + sm,0.),vec2(0.05+sm,0.) )-0.01;\n            p.x = abs(p.x);\n            p.x -= 0.15;\n            d = min(d,length(p)-0.03);\n            \n            col = mix(col,col*vec3(0.5,0.3,0.3)*2.,smoothstep(fwidth(d),0.,d));\n        \n        }  \n    }\n    {\n        // clouds\n        for(float cl = 0.; cl < 14.; cl++){\n        \n            float sc = 1.2;\n            float sl = 0.02*iTime*(1. + sin(cl*20.)*0.9);\n            float slid = floor(sl);\n            vec2 p = uv + vec2(0. + mod(sl,1.)*4. - 2.,sin(slid*15. + cl)*0.2 - 0.4);;\n            p *= sc;\n            p.x *= 0.9;\n            p *= rot(-0.32);\n            float d = 10e5;\n            //d = min(d, sdSegment( p + vec2(0,0.1), vec2(-0.1,0.), vec2(0.2,0. )) - 0.05);\n            for(float i = 0.; i < 2.; i++){\n                vec2 q = p;\n                float rad = 0.1 + sin(i)*0.04;\n                float rep = 2.;\n                float id = pModPolar(q, rep);\n                d = min(d, (length(q) - rad)/sc);    \n            \n                d = min(d,(length(q - vec2(0.1,0.)) - rad*0.5 - sin(id*20. + iTime + cos(id)*0.)*0.05*rad)/sc); \n                p *= rot(-0.05 + cl*11. + sin(i + cos(cl))*0.4);\n                p -= vec2(0.1,0.);\n             }\n             vec2 dd = vec2(dFdx(d),dFdy(d));\n             \n             float sh = smoothstep(0.1,0.0,abs(d))*0.1;\n             \n             //col = mix(col,col*1.*vec3(0.4,0.5,1),smoothstep(0.1,0.,d)*0.2);\n             \n             //col = mix(col,vec3(1.,0.59,0.44 + sin(uv.y*2. + d*10.)*0.1)*1.5,smoothstep(fwidth(d),0.,d)*0.8);\n             /*\n             col = mix(col,vec3(\n                 0.7 + sin(dd.x*21. + dd.y*10.)*4.*sh,\n                 0.2- sin(-dd.y*20.)*1.*smoothstep(0.0,0.0,abs(d)),\n                 0.34)*0.44,smoothstep(fwidth(d),0.,d));\n             */\n        }\n        \n    }\n    \n    {\n        // birbs\n        for(float cl = 0.; cl < 54.; cl++){\n        \n            float sc = 1.2;\n            float sl = 0.05*iTime*(1. + sin(cl*25.1)*0.2);\n            float slid = floor(sl);\n            vec2 p = uv + vec2(0. + mod(sl,1.)*4. - 2.,sin(slid*15. + cl)*0.2 - 0.3);;\n            p *= sc;\n            //p.x *= 0.9;\n            float d = 10e5;\n            //d = length(p) - 0.02;\n            float w = 0.02; float ww = 0.005;\n            //p.x = abs(p.x);\n            float m =  sin(cl + iTime*4.)*0.3;\n            float mm =  sin(cl + iTime*4. - 2.4)*0.3;\n            \n            p.y -= mm*0.1;\n            p *= rot(m);\n            \n            d = min(d,sdSegment( p, vec2(0.0,0.), vec2(w,0.) ) - ww);\n            p *= rot(-m*2.- pi);\n            \n            d = opSmoothUnion( d, sdSegment( p, vec2(0,0.), vec2(w,0.) ) - ww, 0.01 );\n\n            \n            //for(float i = 0.; i < 2.; i++){\n                //p.x = -p.x;\n                \n            \n            //}\n            \n            vec2 dd = vec2(dFdx(d),dFdy(d));\n            \n            \n            float sh = smoothstep(0.1,0.0,(d))*0.1;\n            col = mix(col,0.25+0.5*col*vec3(0.4,0.6,0.9)*1.,smoothstep(fwidth(d),0.,d));\n        \n        }\n        \n    }\n    \n    {\n        for(float cl = 0.; cl < 14.; cl++){\n        \n            float sc = 1.2;\n            float sl = 0.02*iTime*(1. + sin(cl*204.124)*0.5);\n            float slid = floor(sl);\n            vec2 p = uv + vec2(0. + mod(sl,1.)*4. - 2.,sin(slid*15. + cl)*0.2 - 0.4);;\n            p *= sc;\n            //p.x *= 0.9;\n            //p *= rot(-0.32);\n            float d = 10e5;\n            d = min(d, sdSegment( p + vec2(0,0.), vec2(-0.1,0.), vec2(0.2,0. )) - 0.05);\n            for(float i = 0.; i < 1.5 + sin(cl)*2.; i++){\n                p -= vec2(0.,0.1);\n             \n                vec2 q = p;\n                float cd =  sdSegment( p, vec2(-0.+ sin(i + cl*20.)*0.4,0.), vec2(0.2+ sin(i*20. + cl*4.)*0.4,0. )) - 0.05;\n                \n                d = opSmoothUnion(d, cd, 0.05 );\n\n                //d = min(d,);\n                \n            }\n            \n            //col = mix(col,col*1.*vec3(0.4,0.5,1),smoothstep(0.1,0.,d)*0.2);\n            col = mix(col,vec3(1.,0.59,0.44 + sin(uv.y*2. + d*10.)*0.1)*1.5,smoothstep(fwidth(d),0.,d)*0.8);\n             \n            /*\n             col = mix(col,vec3(\n                 0.7 + sin(dd.x*21. + dd.y*10.)*4.*sh,\n                 0.2- sin(-dd.y*20.)*1.*smoothstep(0.0,0.0,abs(d)),\n                 0.34)*0.44,smoothstep(fwidth(d),0.,d));\n             */\n        }\n        \n    }\n    {\n       for(float cl = 0.; cl < 14.; cl++){\n        \n            /*\n             col = mix(col,vec3(\n                 1. + smoothstep(fwidth(d),0.,d - dd.x*4. - 2.*dd.y)*0. ,\n                 0.59,\n                 0.44 + sin(uv.y*2. + d*10.)*0.1)*1.5,smoothstep(fwidth(d),0.,d)*0.8);\n             */\n             /*\n             col = mix(col,vec3(\n                 0.7 + sin(dd.x*21. + dd.y*10.)*4.*sh,\n                 0.2- sin(-dd.y*20.)*1.*smoothstep(0.0,0.0,abs(d)),\n                 0.34)*0.44,smoothstep(fwidth(d),0.,d));\n             */\n        }\n    }\n    \n    \n    {\n        #define pmod(p,a) mod(p,a) - 0.5*a\n        \n        float cnt = 19.;\n        float h = 0.7 ;\n        #define tsin(a) mix(sin(a),asin(sin(a)),0.8)\n            \n        {\n            vec2 p = uv + vec2(0,-0.3 + h);\n            float tm = p.x*3.  + iTime*0.15;\n            \n            \n            //#define geth(tm) (tsin(tm + tsin(tm*1.)))*0.1 - 0.2 + tsin(tm*5.)*0.02\n            #define geth(tm) ((sin(tm + sin(tm*1.)))*0.1 - 0.2 + sin(tm*5.)*0.02)\n            \n            //float d = p.y + (tsin(tm*2. + tsin(tm*3.)*0.5 + cos( + tm*2.)*2.)*0.1 + tsin(tm*1.5)*0.2)*0.4 - 0.3;\n            \n            float d = p.y + geth(tm);\n            \n            for(float i = 0.; i <4.; i++){\n                p = uv + vec2(0,-0.3 + h);\n            \n                float md = 0.4 + sin(i)*0.1;\n                float id = floor(tm/md)*md + 0.5*md;\n\n                float hh = geth(id);\n\n                p.x = pmod(tm,md);\n                p.x /= 3.;\n                float s = - 0.024 + sin(id*20. + i*20.)*0.01;\n                d = min(d, length(p + vec2(0,hh + 0.01)) +s);\n            \n            }\n            \n            \n            \n            col = mix(col,vec3(0.2 ,0.4 + sin(d*1.5)*0.4,0.34)*1.4,smoothstep(fwidth(d),0.,d));\n            \n        }\n        for(float terr = 0.; terr < cnt; terr++){\n            float terrIdx = terr/cnt;\n            vec2 p = uv + vec2(0,0.3 + terrIdx*h);\n            \n            float tm = p.x*1. + terrIdx + iTime*(1. + terrIdx*0.)*.1 ;\n            tm += sin(tm*2. + terrIdx*8.)*1.4;\n            #define gethb(tm) (sin(tm*1.+ terrIdx*18. + sin(tm*3.)*0.5 + cos( + tm*2.+ terrIdx*5.)*2.)*0.1 + sin(tm*1.5 + terrIdx*5.)*0.2)*0.24\n\n            float d = p.y + gethb(tm);\n            //float d = p.y + (sin(tm*2. + tsin(tm*3.)*0.5 + cos( + tm*2.)*2.)*0.1 + tsin(tm*1.5)*0.2)*0.4;\n            \n            if(terr>=0.){\n                vec2 q = p;\n                //float tm = p.x*3.  + iTime*0.15;\n            \n            \n                //#define geth(tm) (tsin(tm + tsin(tm*1.)))*0.1 - 0.2 + tsin(tm*5.)*0.02\n                //#define geth(tm) ((sin(tm + sin(tm*1.)))*0.1 - 0.2 + sin(tm*5.)*0.02)\n\n                //float d = p.y + (tsin(tm*2. + tsin(tm*3.)*0.5 + cos( + tm*2.)*2.)*0.1 + tsin(tm*1.5)*0.2)*0.4 - 0.3;\n\n                float db = p.y + gethb(tm);\n                \n                \n                \n                for(float i = 0.; i <1.; i++){\n                    p = uv + vec2(0,0.3 + terrIdx*h);\n                    float ltm = tm + sin(i + terr*20.);\n                    float md = 0.2 + sin(i+ terr*0.3)*0.5;\n                    float id = floor(ltm/md)*md + 0.5*md;\n\n                    float hh = gethb(id);\n                    \n                    p.x = pmod(ltm,md);\n                    p.x += sin(id)*md*0.1;\n                    \n                    \n                    float s = - 0.034 + sin(id*20. + i*20.)*0.03;\n                    p += vec2(0,hh );\n                    db = min(db, length(p) +s);\n                \n                    for(float j = 0.; j < 0.; j++){\n                        vec2 q = p;\n                        float rep = 1. + floor(sin(id + i*20.)*2.4);\n                        float idb = pModPolar(q, rep);\n                        q.x -= 0.02 + sin(idb*15. + j*20.)*0.035;\n                        p *= rot(2.5 + sin(j + i));\n                        db = min(db, length(q + vec2(0,0))-0.028 + sin(idb + id)*0.0);\n                \n                    }\n                    //db = min(db, length(p + vec2(0,hh -0.1)) +s);\n                    p=q;\n                }\n                \n                //col = mix(col,0.2*vec3(0.5 + sin(terrIdx*14.)*0.4,0.4 + sin(d*2.5)*0.4,0.34 + sin(d*4.5)*0.2)*1.4,smoothstep(fwidth(d),0.,db));\n                //col = mix(col,vec3(0.3 + sin(terrIdx*24.)*0.1 ,0.4 + sin(d*1.5)*0.4,0.34)*1.4,smoothstep(fwidth(db),0.,db));\n                \n                //col = mix(col,vec3(0.5 + sin(terrIdx*24.)*0.3,0.4 + sin(d*2.5)*0.2,0.34 + sin(d*4.5)*0.2)*1.4,smoothstep(fwidth(db),0.,db));\n            \n                \n            }\n            \n            col = mix(col,vec3(0.5 + sin(terrIdx*24.)*0.3,0.4 + sin(d*2.5)*0.2,0.34 + sin(d*4.5)*0.2)*1.4,smoothstep(fwidth(d),0.,d));\n            \n        }\n        \n        /*\n        vec2 p = uv + vec2(0,0.2);\n            \n        float tm = p.x*2. + iTime*(1.)*.2 ;\n            //tm += sin(tm*2.)*1.6;\n        p.y = p.y + (sin(tm*2. + sin(tm*3.)*0.5 + cos( + tm*2.)*2.)*0.1 + sin(tm*1.5)*0.2)*0.1 - 0.2;\n        \n        \n        float md = 1.;\n        float id = floor(p.x/md);\n        p.x += iTime + sin(iTime);\n        p.x = mod(p.x,md) - 0.5*md;\n        \n        float  d = sdSegment( p + vec2(sin(iTime+md)*0.1,0.), vec2(-0.2,0.), vec2(0.2,0.)) - 0.01;\n        */\n        /*\n        col = mix(col,vec3(\n                 1. ,\n                 0.59,\n                 0.44 + sin(uv.y*2. + d*10.)*0.1)*1.5,smoothstep(fwidth(d),0.,d)*0.8);\n          */   \n    }\n    \n    //col = vec3(1.,0.98,1.) - col*vec3(.5,0.8,1.);\n    \n    \n    \n    //col *= vec3(1,0.9,1.15);\n    col = pow(col,vec3(1.1,1.15,1.2));\n    col = pow(col,vec3(0.4545));\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define pi acos(-1.)\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\n#define iTime (iTime + 120.)*2.\n\nfloat pModPolar(inout vec2 p, float repetitions) {\n\tfloat angle = 2.*pi/repetitions;\n\tfloat a = atan(p.y, p.x) + angle/2.;\n\tfloat r = length(p);\n\tfloat c = floor(a/angle);\n\ta = mod(a,angle) - angle/2.;\n\tp = vec2(cos(a), sin(a))*r;\n\t// For an odd number of repetitions, fix cell index of the cell in -x direction\n\t// (cell index would be e.g. -5 and 5 in the two halves of the cell):\n\tif (abs(c) >= (repetitions/2.)) c = abs(c);\n\treturn c;\n}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat opSmoothUnion( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}