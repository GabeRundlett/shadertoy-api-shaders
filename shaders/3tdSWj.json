{
    "Shader": {
        "info": {
            "date": "1581761992",
            "description": "coeur",
            "flags": 0,
            "hasliked": 0,
            "id": "3tdSWj",
            "likes": 1,
            "name": "Mercoeur",
            "published": 3,
            "tags": [
                "coeur"
            ],
            "usePreview": 0,
            "username": "JulesFouchy",
            "viewed": 361
        },
        "renderpass": [
            {
                "code": "float heartSDF(vec2 uv){\n  \tfloat x = uv.x; float y = uv.y;\n    \n  \t//             L'ÉQUATION EST LÀ\n    \n    //     | | | | | | | | | | | | | | | | | |\n    //     v v v v v v v v v v v v v v v v v v\n\treturn pow(x*x + y*y - 1., 3.) - x*x*y*y*y;\n}\n\nfloat rand(vec2 id){\n  \tvec2 r = fract(id * vec2(127.34, 456.21));  \n \tr += dot(r, r+475.32);\n    return fract(r.x*r.y);\n}\n\nvec3 rand3(vec2 id){\n    return vec3(rand(id), rand(id*714.62), rand(id*164397.241));\n}\n\nfloat smin(float a, float b, float k) {\n    float res = exp2( -k*a ) + exp2( -k*b );\n    return -log2( res )/k;\n}\n\nfloat singlePuls(vec2 id, float phase){\n    float puls = 2.2 + 1.7*rand(id);\n    float s = 0.5*pow(sin(puls*(iTime + phase) + rand(id)*15.), 2.0);\n    return smin(s, 0., 32.);\n}\n\nfloat heartbeatPuls(vec2 id) {\n    return (singlePuls(id, 0.)\n         +  singlePuls(id, 0.35)) *0.5;\n}\n\nfloat heart(vec2 uv, vec2 id){\n    uv += 0.6* (rand(id)-0.5);\n    uv *= 2.8 * (1. + 4.*heartbeatPuls(id));\n    \n    float margin = 0.00001;\n    return smoothstep(margin, -margin, heartSDF(uv)) - smoothstep(margin, -margin, heartSDF(uv*1.14));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 heartCol = vec3(1.0, 0.2, 0.8);\n    vec3 backCol  = vec3(1.0, 0.65, 0.92);\n    //vec3 backCol  = vec3(255, 237, 110)/255.;\n    //vec3 backCol  = vec3(182, 196, 250)/255.;\n    //vec3 backCol  = vec3(255, 194, 89)/255.;\n    \n    vec2 uv = fragCoord/iResolution.y - vec2(0.5 * iResolution.x/iResolution.y, 0.5);\n   \tuv *= 4.;\n    \n    vec2 gv = fract(uv) - 0.5;\n    vec2 id = floor(uv);\n    \n    float t = 0.;\n    vec3 col = vec3(0.);\n    for (float x = -1.; x < 1.5; x+=1.){\n        for (float y = -1.; y < 1.5; y+=1.){\n            vec2 off = vec2(x, y);\n            float h = heart(gv - off, id + off);\n            t += h;\n            if (h>0.5)\n                col = heartCol + (rand3(id+off)-0.5)*vec3(0.3, 0.5, 0.5);\n        }\n    }\n    //t = min(t, 1.);\n    //col = t * heartCol + (1.-t) * backCol;\n    \n    if (t < 0.5)\n        col = backCol;\n\t\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}