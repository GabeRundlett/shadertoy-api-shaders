{
    "Shader": {
        "info": {
            "date": "1664812042",
            "description": "Testing a linear function for the rainbow palette proposed by IÃ±igo(//https://iquilezles.org/articles/palettes/).\nNo application yet.\nhttps://www.desmos.com/calculator/tw2ilmi1dg",
            "flags": 0,
            "hasliked": 0,
            "id": "NtyBWD",
            "likes": 3,
            "name": "Test linear Rainbow",
            "published": 3,
            "tags": [
                "rainbow",
                "linear"
            ],
            "usePreview": 0,
            "username": "Rloret",
            "viewed": 211
        },
        "renderpass": [
            {
                "code": "#define pi acos(-1.)\n//https://iquilezles.org/articles/palettes/\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 2.*pi*(c*t+d) );\n}\n\n\nfloat noise(vec3 a)\n{\n    return fract(sin(dot(a,vec3(132.341242,3.432432,17.34242)))*1435.432432);\n}\nvec3 Saw(vec3 x,vec3 d)\n{\n vec3 disp = x+d;\n return 2.0* abs(disp - round(disp));\n}\nvec3 RemapFrom01(vec3 x, float l, float h)\n{\n return l + x *(h-l);\n}\nvec3 ss( vec3 x )\n{\n  return x*x*(3.-2.0*x);\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = fragCoord/iResolution.xy;\n   float video = texture(iChannel0,uv).r;\n   //video=uv.x;\n   vec3 saw = Saw(vec3(video),vec3(0.5,1.-1./6.,1./6.));\n   //saw = RemapFrom01(saw,-1./2.,1.); // add this bit if you want all the channels to add up to max 1\n   saw = clamp(saw,0.,1.);\n   //saw = ss(saw); //adding a smoothstep to the linear version makes it approximate the cosine version\n   vec3 rainbow = palette(video,vec3(.5),vec3(.5),vec3(1.),vec3(0.,1./3.,2./3.));\n   fragColor = vec4(uv.y>.5?rainbow:saw,0);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}