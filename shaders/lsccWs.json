{
    "Shader": {
        "info": {
            "date": "1520662125",
            "description": "Worley mixed with fbm use the mouse",
            "flags": 0,
            "hasliked": 0,
            "id": "lsccWs",
            "likes": 2,
            "name": "Worley plus Fbm",
            "published": 3,
            "tags": [
                "2d",
                "learning"
            ],
            "usePreview": 0,
            "username": "felipunkerito",
            "viewed": 539
        },
        "renderpass": [
            {
                "code": "// The book of shaders + iq and some resources presented in https://www.shadertoy.com/view/MdGSzt\n\n#define PI acos( -1.0 )\n\n\nfloat hash( float n )\n{\n\n    return fract( sin( n ) * 45843.349 );\n    \n}\n\nfloat noise( in vec3 x )\n{\n\n    vec3 p = floor( x );\n    vec3 k = fract( x );\n    \n    k *= k * k * ( 3.0 - 2.0 * k );\n    \n    float n = p.x + p.y * 57.0 + p.z * 113.0; \n    \n    float a = hash( n );\n    float b = hash( n + 1.0 );\n    float c = hash( n + 57.0 );\n    float d = hash( n + 58.0 );\n    \n    float e = hash( n + 113.0 );\n    float f = hash( n + 114.0 );\n    float g = hash( n + 170.0 );\n    float h = hash( n + 171.0 );\n    \n    float res = mix( mix( mix ( a, b, k.x ), mix( c, d, k.x ), k.y ),\n                     mix( mix ( e, f, k.x ), mix( g, h, k.x ), k.y ),\n                     k.z\n    \t\t\t\t );\n    \n    return res;\n    \n}\n\nfloat fbm( in vec3 p )\n{\n\n    float f = 0.0;\n    f += 0.5000 * noise( p ); p *= 2.02;\n    f += 0.2500 * noise( p ); p *= 2.03;\n    f += 0.1250 * noise( p ); p *= 2.01;\n    f += 0.0625 * noise( p );\n    f += 0.0125 * noise( p );\n    return f / 0.9375;\n    \n}\n\n\nvec2 rand( vec2 p ) \n{\n    \n    return fract( sin ( vec2 ( dot ( p, vec2( 127.1, 311.7 ) ), \n                              dot( p, vec2( 0.310, 0.180 ) ) ) ) * 43758.5453);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ( -iResolution.xy + 2.0 * fragCoord ) / iResolution.y;\n\n    vec2 mou = iMouse.xy / iResolution.xy - 0.5;\n    \n    float wav = texture( iChannel0, vec2( 0.01, 0.25 ) ).x;\n    float fre = texture( iChannel0, vec2( 0.01, 0.015 ) ).x * 0.1;\n    \n    float r = length( uv  );\n    \n    float a = atan( uv.x, uv.y );\n    \n    uv = vec2( 1.0 / r + iTime * 0.1 + fre + mou.y, a ); \n    uv *= 30.0;\n    //uv.y = a * 6.0 / ( 2.0 * PI ) * 10.0; \n    \n    vec2 iUv = floor( uv );\n    vec2 fUv = fract( uv );\n    \n    float mDi = 1.0;\n    \n    for( int x = -1; x <= 1; x++ )\n        for( int y = -1; y <= 1; y++ )\n        \n    \t{\n    \n            \n            vec2 nei = vec2( float( x ), float( y ) );\n            \n            vec2 poi = rand( iUv + nei );\n            \n            poi = 0.5 + 0.5 * sin( poi * iTime * 3.1415 + wav );\n            \n            vec2 dif = nei + poi -fUv;\n            \n            float dist = length( dif );\n            \n            mDi = min( mDi, dist );\n\n    \n        }\n    \n    \n    vec3 col = vec3( mDi ) + fbm( vec3( uv + ( iTime * 0.1 ), wav ) );\n    col *= mix( mix( vec3( 1.0, 0.0, 0.0 ), vec3( 0.5, 0.5, 0.0 ), \n                    fbm( vec3( uv, wav ) ) ), vec3( 0.1 ) ,fbm( vec3( uv, 1.0 ) ) );\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 35,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}