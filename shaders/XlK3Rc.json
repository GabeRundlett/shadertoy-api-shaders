{
    "Shader": {
        "info": {
            "date": "1488349562",
            "description": "first shader!\nworking out metaballs.\nfreaky shader is freaky.",
            "flags": 0,
            "hasliked": 0,
            "id": "XlK3Rc",
            "likes": 2,
            "name": "stinky bones 001",
            "published": 3,
            "tags": [
                "metaballs",
                "n00b"
            ],
            "usePreview": 0,
            "username": "expertmouser",
            "viewed": 606
        },
        "renderpass": [
            {
                "code": "\nfloat sqr(float x) {\n    return x * x;\n}\n\nvec2 screenToWorld(vec2 sp) {\n    const float screenSize = 6.;\n    vec2 fp = ( sp.xy / iResolution.y );\n    fp.x = fp.x * screenSize - (screenSize * iResolution.x / iResolution.y) / 2.;\n    fp.y = fp.y * screenSize - screenSize / 2.;\n    \n    return fp;\n}\n\nvec2 warp(vec2 wp, float f, float s, float ts) {\n\tvec2 ret;\n    \n    vec2 v;\n\n    v.x = wp.x * cos(iTime * ts) + wp.y * sin(iTime * ts);;\n    v.y = wp.x * sin(iTime * ts) - wp.y * cos(iTime * ts);;\n    \n    ret.x = wp.x + cos(v.y * f) * s;\n    ret.y = wp.y + cos(v.x * f) * s;\n    \n    return ret;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 fp = screenToWorld( gl_FragCoord.xy );\n    \n    \n    const float spd1 =   1.01;\n    const float spd2 =  -1.21;\n    const float r    =  2.0;\n    float gt1 = spd1 * iTime;\n    float gt2 = spd2 * iTime;\n    \n    vec2 cp1 = vec2(sin(gt1), cos(gt1)) * r;\n    vec2 cp2 = vec2(sin(gt2), cos(gt2)) * r;\n    cp2 = screenToWorld(iMouse.xy);\n    \n    vec2 fpw1 = warp(fp,  5.0, 0.3,  0.3);\n    vec2 fpw2 = warp(fp, 17.0, 0.2, -0.1);\n   \n    float d = 0.0;\n    float d1 = max(distance(fpw1, cp1) + 0.3 , 0.0);\n    float d2 = max(distance(fpw2 ,cp2) + 0.5, 0.0);\n    d = d1 * d2 * 0.3;\n    d = 1.0 - (d * d);\n//    d = sin(d * 0.4) * 4.0;\n    if (d > 0.0) {\n        float od1 = distance(fp, cp1);\n        float od2 = distance(fp, cp2);\n        d = sin((od1 * od2 - iTime * 1.0) * 4.0) * 0.1 + 0.24;\n        fragColor = vec4(0.75 - d, 0, d, 1.0);\n    }\n    else if (d < -1.0) {\n        float od1 = distance(fp, cp1);\n        float od2 = distance(fp, cp2);\n        d = sin((od1 * od2 + iTime * 4.0) * 1.7) * 0.1 + 0.9;\n        fragColor = vec4(d, 1.7 - d, 0.0, 1.0);\n    }\n    else {\n    \td = abs(d - 0.5);\n    \tfragColor = vec4(-d);\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}