{
    "Shader": {
        "info": {
            "date": "1613565505",
            "description": "Crystall CA â†’ readable rules",
            "flags": 32,
            "hasliked": 0,
            "id": "wtcfWX",
            "likes": 2,
            "name": "Readable rule 30",
            "published": 3,
            "tags": [
                "color",
                "cellular",
                "buildings"
            ],
            "usePreview": 0,
            "username": "illus0r",
            "viewed": 374
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 FC )\n{\n    fragColor = texelFetch(iChannel0, ivec2(FC)/10,0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 o, in vec2 FC )\n{\n#define ROOF_START .002\n#define ROOF_LEFT_STOP .0002\n#define ROOF_RIGHT_STOP ROOF_LEFT_STOP\n#define ROOF_WALL_START -.00001 + .00002*uv.x\n#define COL transpose(mat3(uv.x*10.,0,1,   .4,.92,.0,   0,.7,1))\n//#define COL mat3(1,0,0,   0,1,0,   0,0,1)\n\n#define rnd(d) fract(sin(length(FC.xy+d)*999.))\n#define T(dx,dy) (texelFetch(iChannel0,ivec2(FC.xy+vec2(dx,dy))%int(iResolution.xy),0).rgb*inverse(COL))\n#define RULE(v,c) else if(T(-1,-1)[v[0]]>.5 && T(0,-1)[v[1]]>.5 && T(1,-1)[v[2]]>.5 && c)o[v[3]]=1.;\n\nconst ivec3 v = ivec3(0,1,2);\nvec2 uv = FC.xy/iResolution.xy;\n\nif(iFrame==0) o=vec4(0);\nelse if(iTime<.1||FC.y==.5)if(rnd(100.)<.5)o.r+=1.;else o.b+=1.;\n\nRULE(v.rrrr,true)\nRULE(v.rrbb,true)\nRULE(v.rbrb,true)\nRULE(v.rbbr,true)\nRULE(v.brrb,true)\nRULE(v.brbr,true)\nRULE(v.bbrr,true)\nRULE(v.bbbr,true)\n\no.rgb*=COL;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}