{
    "Shader": {
        "info": {
            "date": "1618612962",
            "description": "code is messy, I know. copy pasted from bonzomatic. \noriginally made during cookie collective live stream. ",
            "flags": 0,
            "hasliked": 0,
            "id": "fsXSWN",
            "likes": 14,
            "name": "Atomic Energy",
            "published": 3,
            "tags": [
                "raymarch",
                "glow"
            ],
            "usePreview": 0,
            "username": "Tater",
            "viewed": 430
        },
        "renderpass": [
            {
                "code": "float donut(vec3 p, vec2 t){ return length(vec2(length(p.xz)-t.x,p.y))-t.y;}\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define MAX_DIST 250.0\n#define STEP 128.0\nfloat g1 = 0.;\nvec2 Dist(vec3 p){\n  vec2 a = vec2(donut(p,vec2(1,0.5)),2.0);\n  vec2 b = vec2(length(p+vec3(0,1.0-abs(sin(iTime))*3.0,0))-0.5,1.0);\n  g1 += 0.01/(0.01+b.x*b.x);\n  b = (b.x < a.x) ? b:a;\n  return b;\n}\nvoid invert(inout float inv, float t, vec2 uv, float cap){\ninv = mix(inv,1.0-inv,step(sin(length(uv)*0.45-t)*0.5+0.6,cap));\n}\nvec2 Dist2(vec3 p){\n  float t= mod(iTime,200.0);\n  t = fract(t)*fract(t)+floor(t);\n  vec3 p2 = p;\n  \n  float modd = 42.0;\n  vec3 id = floor((p2+modd*0.5)/modd);\n  t+= id.x*2.0;\n  t+= id.z*2.0;\n  p2.yz*=rot(sin(t)*0.2);\n  p2.y +=sin(id.x+t)*12.0;\n  p2 = mod(p2+modd*0.5,modd)-modd*0.5;\n  p2.xy*=rot(t*(mod(abs(id.x),3.0)-1.0));\n  p2.zy*=rot(-t*0.5*(mod(abs(id.z),3.0)-1.0));\n  for(int i = 0; i < 4; i++){\n    p2 = abs(p2)-vec3(2,1,1);\n    p2.xy *=rot(0.5);\n    p2.zy *=rot(0.5+sin(t)*2.0);\n    p2.zx *=rot(0.5);\n  }\n  \n  return Dist(p2)*vec2(0.65,1.0);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n  float t = mod(iTime,200.0);\n  vec3 ro = vec3(t*3.0,0,-30);\n  vec3 rd = normalize(vec3(uv,1.05));\n  float dO = 0.0;\n  float shad = 0.0;\n  vec2 obj;\n  for(float i = 0.0; i <STEP; i++){\n    vec3 p = ro + rd*dO;\n    obj = Dist2(p);\n    dO += obj.x;\n    if(obj.x <0.001|| dO>MAX_DIST){\n      shad = i/STEP;\n      break;\n    }\n  }\n \n  vec3 col = vec3(0);\n \n  if(obj.y == 1.0){\n    shad= 1.0-shad;\n    col = vec3(shad)*vec3(0.2,0.5,0.8);\n  }\n  if(obj.y == 2.0){\n    shad= shad;\n    col = vec3(shad)*vec3(0.8,0.2,0.9);\n  }\n  col += g1*vec3(0.2,0.5,0.8)*0.2;\n  col = mix(col,vec3(0.235,0.075,0.369)*0.2,clamp(dO/MAX_DIST,0.0,1.0));\n  t = 0.6*t-2.0;\n  float inv = 0.0;\n  invert(inv,t,uv,0.5);\n  invert(inv,t,uv,0.466);\n  invert(inv,t,uv,0.433);\n  invert(inv,t,uv,0.4);\n  invert(inv,t,uv,0.366);\n  \n  col = mix(col*1.6,1.0-col,inv);\n  fragColor = vec4(min(col,1.0),0.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}