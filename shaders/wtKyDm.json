{
    "Shader": {
        "info": {
            "date": "1611165407",
            "description": "Creating glitch effect with dissolve impact. ",
            "flags": 0,
            "hasliked": 0,
            "id": "wtKyDm",
            "likes": 8,
            "name": "dissolve and disappear",
            "published": 3,
            "tags": [
                "mouse",
                "grid",
                "time",
                "sin",
                "color",
                "random",
                "cos",
                "rgb",
                "pattern",
                "fract",
                "step",
                "clamp",
                "offset",
                "tan",
                "fpos",
                "ipos",
                "atn"
            ],
            "usePreview": 0,
            "username": "YitingLiu",
            "viewed": 538
        },
        "renderpass": [
            {
                "code": "// inspiration code: https://thebookofshaders.com/edit.php#10/ikeda-03.frag\n// learned changeblae resolution size, fract, atan, patterns, and randoms ; used clamp, mouse\n\nfloat random (in float x) {\n    return fract(sin(x)*1e4);\n}\n\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nfloat pattern(vec2 st, vec2 v, float t) {\n    vec2 p = floor(st+v);\n    return step(t, random(100.+p*.000001)+random(p.x)*0.8 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n {\n //   vec2 st = fragCoord.xy/iResolution.xy;\n   vec2 st = (1.0 * fragCoord.xy - iResolution.xy) / min(iResolution.y, iResolution.x);\n   st.x *= iResolution.x/iResolution.y;\n\n    vec2 grid = vec2(100.0,50.);\n    st *= grid;\n\n    vec2 ipos = floor(st);  // integer\n    vec2 fpos = fract(st);  // fraction\n\n    vec2 vel = vec2(iTime*2.*min(grid.x,grid.y)); // time\n    vel *= vec2(1.)*sin(iTime)/1e4 * random(0.+max(ipos.x,ipos.y)); // direction\n\n    // Assign a random value base on the integer coord\n    vec2 offset = vec2(random(st),random(st*1e3)) ;\n    offset+=iTime/1e3;\n  \n    vec3 color = vec3(0.880,0.354,0.201);\n    color.r = pattern(st+offset,vel,0.5+iMouse.x/iResolution.x);\n    color.g = pattern(st,vel,0.5+iMouse.x/iResolution.x);\n    color.b = pattern(st-offset,vel,0.5+iMouse.x/iResolution.x);\n\n    // Margins\n    color /= step(sin(iTime*1.5),max(fpos.x,fpos.y));\n\n    fragColor = vec4(1.0-color*random(st)*1e3,clamp(abs(sin(iTime)), 0.8,1.0));\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}