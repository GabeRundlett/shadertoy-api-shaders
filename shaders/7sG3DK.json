{
    "Shader": {
        "info": {
            "date": "1632186046",
            "description": "track # 2",
            "flags": 0,
            "hasliked": 0,
            "id": "7sG3DK",
            "likes": 4,
            "name": "track # 2",
            "published": 3,
            "tags": [
                "track2"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 239
        },
        "renderpass": [
            {
                "code": "\n//https://iquilezles.org/articles/distfunctions2d\n\n///por jorge2017a2...2021-sep-\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define S2(d,b) smoothstep(antialiasing(0.05),b,d)\n\n\nvec2 rotatev2(vec2 p, float ang)\n{   float c = cos(ang);\n    float s = sin(ang);\n    return vec2(p.x*c - p.y*s, p.x*s + p.y*c);\n}\n\n///---------------------------\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}\n    \nvec2 opRep2D( in vec2 p, in vec2 c )\n\t{ vec2 q = mod(p+0.5*c,c)-0.5*c; return  q ;}\n\n///----------Operacion de Distancia--------\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n    \nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{\n  colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\nvec3 DrawFig(vec3 pColObj, vec3 colOut, float distObj )\n{  colOut = mix(colOut,pColObj ,S2( distObj,0.0));\nreturn colOut;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nvec3 nubes(vec2 p, vec3 colOut)\n{    \n    vec2 centro=vec2(0.0,0.0);\n    float c1= sdCircle(p-vec2(0.0,0.05), 0.105);\n    float c2= sdCircle(p-vec2(0.15,0.02), 0.065);\n    float c3= sdCircle(p-vec2(-0.15,0.02), 0.065);\n    float b1=sdBox(p-vec2(0.0,-0.04), vec2(0.22,0.045 ) );\n    \n    float res=unionSDF(c1, c2);\n    res=unionSDF(res, c3);\n    res=differenceSDF(res,b1 );\n    \n    colOut=DrawFigBorde(vec3(1.0), colOut, res );\n\treturn colOut;\n    \n}\n\n\nvec3 arbol(vec2 uv, vec3 col)\n{\n    float sdbtronco= sdBox(uv-vec2(0.5,0.0), vec2(0.0125,0.05));\n    float sdc1= sdCircle(uv-vec2(0.5,0.1), 0.05 );\n    \n    col=DrawFig(vec3(1.0,0.5,0.0), col, sdbtronco);\n    col=DrawFig(vec3(0.0,0.5,0.0), col, sdc1);\n    return col;\n}\n\n\nvec3 Carretera(vec2 p, vec3 col)\n{\n  \n  float sdb1= sdBox(p, vec2(0.08,3.0));\n  vec2 p2=p+vec2(0.0, -iTime*0.125);\n  p2.y= opRep1D(p2.y, 0.25 );\n  \n  float sdb2= sdBox(p2, vec2(0.003,0.025));\n  p.x=abs(p.x)-0.07;\n  float sdb3= sdBox(p, vec2(0.001,3.0));\n  col=DrawFig(vec3(0.45), col, sdb1);\n  col=DrawFig(vec3(1.0), col, sdb2);\n  col=DrawFig(vec3(1.0), col, sdb3);\n \n  return col;\n  \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord.xy-iResolution.xy)/max(iResolution.x,iResolution.y);    \n    vec3 col;\n    \n    vec2 pos=uv;\n     float horizon = 0.1;   //0.2\n     float fov = 0.5; \n\tfloat scaling = 0.1;\n\t\n\tvec3 p = vec3(pos.x, fov, pos.y - horizon);      \n\tvec2 s = vec2(p.x/p.z, p.y/p.z) * scaling;\n    vec2 s2 = vec2(p.x/p.z, p.y/p.z)*0.75;\n    \n    if (s.y<0.0)\n    { col=vec3(0.01,0.4,0.05)-uv.y;   }\n    else\n    {   col=vec3(0.1,0.1,0.8)-uv.y;// cielo\n        vec2 uv2=uv;\n        uv2.x+=mod(iTime*0.5, 3.0)-1.7;\n        col= nubes(uv2*1.5-vec2(0.0,0.4), col);\n        col= nubes(uv2*1.5-vec2(0.5,0.6), col);\n        col= nubes(uv2*2.5-vec2(-1.5,0.7), col);\n    }\n    if (s.y<0.0)\n    col= Carretera(s,col);\n    \n    \n    if (s.y<0.0)\n    {\n        float tt=mod(iTime,4.0);\n        vec2 p2=uv+vec2(-tt*0.125,tt*0.125);\n        vec2 p3=uv+vec2(tt*0.125,tt*0.125)+vec2(1.15,0.2);\n        col= arbol(p2,  col);\n        col= arbol(p3,  col);\n        col= arbol(p3-vec2(0.2,0.5),  col);\n        col= arbol(p2-vec2(-0.5,0.5),  col);\n    }    \n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}