{
    "Shader": {
        "info": {
            "date": "1663278514",
            "description": "something lol",
            "flags": 0,
            "hasliked": 0,
            "id": "fltBzB",
            "likes": 5,
            "name": "7segments display",
            "published": 3,
            "tags": [
                "2d",
                "time",
                "sdf",
                "text",
                "texture",
                "antialiasing",
                "number",
                "iq",
                "green",
                "font",
                "rain",
                "aa",
                "debug",
                "segment",
                "7",
                "timer",
                "print",
                "num",
                "soneneis",
                "sns"
            ],
            "usePreview": 0,
            "username": "SONENEIS",
            "viewed": 347
        },
        "renderpass": [
            {
                "code": "float sdCirc(vec2 uv,float r){\n  return length(uv) - r;\n}\nfloat sdRect(vec2 uv,vec4 rect,float r){\n  return length(max(abs(uv-rect.xy)-rect.zw,0.0)) - r;\n}\n\nfloat segm7(vec2 uv,int n1,int n2,int n3,int n4,int n5,int n6,int n7,int dp){\n  float res = 1.0;\n\n  //   ——1——\n  // |       |\n  // 2       3\n  // |       |\n  //   ——4——\n  // |       |\n  // 5       6\n  // |       |\n  //   ——7——   (dp)\n\n  if(n1 == 1) res = min(res,sdRect(uv,vec4(0.0,0.4,0.1,0.01),0.05));\n  if(n4 == 1) res = min(res,sdRect(uv,vec4(0.0,0.0,0.1,0.01),0.05));\n  if(n7 == 1) res = min(res,sdRect(uv,vec4(0.0,-0.4,0.1,0.01),0.05));\n  if(n3 == 1) res = min(res,sdRect(uv,vec4(0.2,0.2,0.01,0.1),0.05));\n  if(n2 == 1) res = min(res,sdRect(uv,vec4(-0.2,0.2,0.01,0.1),0.05));\n  if(n6 == 1) res = min(res,sdRect(uv,vec4(0.2,-0.2,0.01,0.1),0.05));\n  if(n5 == 1) res = min(res,sdRect(uv,vec4(-0.2,-0.2,0.01,0.1),0.05));\n  if(dp == 1) res = min(res,sdCirc(uv-vec2(0.35,-0.4),0.05));\n\n  return res;\n}\n\nfloat digit(vec2 uv,int d,int dp){\n  float res = 1.0;\n  \n  if(d == 0) res = min(res,segm7(uv,1,1,1,0,1,1,1,dp));\n  if(d == 1) res = min(res,segm7(uv,0,0,1,0,0,1,0,dp));\n  if(d == 2) res = min(res,segm7(uv,1,0,1,1,1,0,1,dp));\n  if(d == 3) res = min(res,segm7(uv,1,0,1,1,0,1,1,dp));\n  if(d == 4) res = min(res,segm7(uv,0,1,1,1,0,1,0,dp));\n  if(d == 5) res = min(res,segm7(uv,1,1,0,1,0,1,1,dp));\n  if(d == 6) res = min(res,segm7(uv,1,1,0,1,1,1,1,dp));\n  if(d == 7) res = min(res,segm7(uv,1,0,1,0,0,1,0,dp));\n  if(d == 8) res = min(res,segm7(uv,1,1,1,1,1,1,1,dp));\n  if(d == 9) res = min(res,segm7(uv,1,1,1,1,0,1,1,dp));\n\n  return res;\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n  vec2 uv = (2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n  vec3 col = vec3(0.0);\n  \n  float size = 1.0;\n  \n  int t = int(iTime*50.0);\n  int nUni = (t / 10  ) % 10;\n  int nTen = (t / 100 ) % 10;\n  int nHun = (t / 1000) % 10;\n  \n  //unit\n  col = mix(vec3(0.04,0.07,0.05),col,smoothstep(0.0,5.0/iResolution.y,digit(size*uv-vec2(0.7,0),8,1)));\n  col = mix(vec3(0.10,1.0,0.500),col,smoothstep(0.0,5.0/iResolution.y,digit(size*uv-vec2(0.7,0),nUni,0)));\n  //ten\n  col = mix(vec3(0.04,0.07,0.05),col,smoothstep(0.0,5.0/iResolution.y,digit(size*uv-vec2(0.0,0),8,1)));\n  col = mix(vec3(0.10,1.0,0.500),col,smoothstep(0.0,5.0/iResolution.y,digit(size*uv-vec2(0.0,0),nTen,0)));\n  //hendred\n  col = mix(vec3(0.04,0.07,0.05),col,smoothstep(0.0,5.0/iResolution.y,digit(size*uv-vec2(-0.7,0),8,1)));\n  col = mix(vec3(0.10,1.0,0.500),col,smoothstep(0.0,5.0/iResolution.y,digit(size*uv-vec2(-0.7,0),nHun,0)));\n  \n  fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}