{
    "Shader": {
        "info": {
            "date": "1532862084",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "ltccD7",
            "likes": 15,
            "name": "crowded cubes 7",
            "published": 3,
            "tags": [
                "raymarching",
                "sdf",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 672
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/Ml3cD7\n\n#define M      max(max(a.x,a.y),a.z)\n#define m      min(min(a.x,a.y),a.z)\n#define R(x,y) t = max(t, max(abs(q.x+q.y),abs(q.x-q.y)) /1.41 )  \n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float t = iTime,v,s,c,c2,n0,n1,n2;\n    mat2  R = mat2( sin(t/2.+vec4(0,33,11,0)) );\n    vec3  q = iResolution,\n          D = normalize(vec3(.3*(U+U-q.xy)/q.y, -1)),    // ray direction\n          p = 30./q, q0,a,b;                  // marching point along ray \n    O-=O;\n    for ( O++; O.x > 0. && t > .01 ; O-=.015 ) {\n        q = p,\n        q.xz *= R, q.yz *= R,                 // rotation\n        q0 = q; \n        \n        q = mod(q+10.,20.)-10.;               // large red cube\n        a = abs(q);\n        c = v = M-5.;\n      if (c<.5) {                             // BBox optim\n          \n        a = abs(5.-a); a = max(a,a.yzx); v = max(v, m-.3); n0=v;       \n        t = v;\n        \n        t = min(t, n2=length(q)-1.4);         // central sphere\n    \n        s = 2.*10./5.;\n        q = mod(q0,20./s)-10./s;              // medium cubes\n        a = abs(q);\n        c2 = v = M-7./s;         \n      if (c2<.5) {                            // BBox (slight) optim\n          \n        a = abs(7./s-a); a = max(a,a.yzx); v = max(v, m-.3/s);//n1=v;\n        v = max(v,c);     \n        t = min(t, v);\n\n        s = 6.*10./5.;\n        c = max(c,c2);\n        q = mod(q0-10./s,20./s)-10./s;        // small cubes\n        a = abs(q);\n        v = M-7./s;\n        a = abs(7./s-a); a = max(a,a.yzx); v = max(v, m-.3/s); n1=v;\n        v = max(v,c);  \n      }\n      }\n        t = min(t, v);\n\n        p += t*D;                             // step forward = dist to obj\n    }\n    if (t==n0) O *= vec4(1,.7,.7,1);          // coloring\n    if (t==n1) O *= vec4(.8,.8,1,1);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}