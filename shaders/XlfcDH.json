{
    "Shader": {
        "info": {
            "date": "1504550152",
            "description": "marching squares",
            "flags": 32,
            "hasliked": 0,
            "id": "XlfcDH",
            "likes": 20,
            "name": "marching squares paint",
            "published": 3,
            "tags": [
                "2d",
                "marchingsquares"
            ],
            "usePreview": 0,
            "username": "abje",
            "viewed": 1163
        },
        "renderpass": [
            {
                "code": "#define cellsize 50.0\n//line distance by iq\nfloat line( vec2 p, vec2 a, vec2 b ) \n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nbool getcellbool(vec2 pos) {\n    pos -=0.5;\n    return texelFetch(iChannel0, ivec2(pos*cellsize*0.49+iResolution.xy*0.5),0).x>0.0;\n}\n\nfloat getcell(vec2 pos) {\n    pos -=0.5;\n    return texelFetch(iChannel0, ivec2(pos*cellsize*0.49+iResolution.xy*0.5),0).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = ((fragCoord*2.0-iResolution.xy)/cellsize)+0.5;\n    vec2 muv = ((iMouse.xy*2.0-iResolution.xy)/cellsize);\n    \n    vec2 orig = floor(uv)+0.5;\n    \n    //vec2 closestcell = vec2(0.5);\n    //bool isfilled = getcell(orig);\n    \n    float len = length(orig-uv);\n    \n    vec2 c01 = vec2(-0.5, 0.5);\n    vec2 c11 = vec2( 0.5, 0.5);\n    vec2 c10 = vec2( 0.5,-0.5);\n    vec2 c00 = vec2(-0.5,-0.5);\n    float mass01 = getcell(orig+c01);\n    float mass11 = getcell(orig+c11);\n    float mass10 = getcell(orig+c10);\n    float mass00 = getcell(orig+c00);\n    \n\tvec2 inv = vec2(-1.0,1.0);\n    fragColor = max(vec4(1.0-4.0*length(orig-uv+c00)),vec4(0.0));\n    fragColor = max(vec4(1.0-4.0*length(orig-uv+c01)),fragColor);\n    fragColor = max(vec4(1.0-4.0*length(orig-uv+c11)),fragColor);\n    fragColor = max(vec4(1.0-4.0*length(orig-uv+c10)),fragColor);\n    \n    for (int i = 0; i < 4; i++) {\n        if (getcellbool(orig+c00)) {\n            vec2 pos1 = vec2(10.0);\n            vec2 pos2 = vec2(10.0);\n            if (getcellbool(orig+c01)&&getcellbool(orig+c10)||getcellbool(orig+c11)){\n                \n                if((mass11>0.0)!=((mass01>0.0)||(mass10>0.0))) {\n                    pos1 = mix(c10,c11,abs(sign(mass11)-max(mass10,mass11)));\n                    pos2 = mix(c01,c11,abs(sign(mass11)-max(mass01,mass11)));\n                }\n            } else if (getcellbool(orig+c01)) {\n                pos1 = mix(c00,c10,max(mass00,mass10));\n                pos2 = mix(c01,c11,max(mass01,mass11));\n            } else if (getcellbool(orig+c10)) {\n                pos1 = mix(c00,c01,max(mass00,mass01));\n                pos2 = mix(c10,c11,max(mass10,mass11));\n            } else {\n                pos1 = mix(c00,c01,max(mass00,mass01));\n                pos2 = mix(c00,c10,max(mass00,mass10));\n            }\n            fragColor = max(vec4(1.0-10.0*line(uv, orig+pos1, orig+pos2)),fragColor);\n\n        }\n        vec2 back1 = c00;\n        c00 = c01;\n        c01 = c11;\n        c11 = c10;\n        c10 = back1;\n        \n        float back2 = mass00;\n        mass00 = mass01;\n        mass01 = mass11;\n        mass11 = mass10;\n        mass10 = back2;\n\t}\n    \n    //fragColor = mix(fragColor, texture(iChannel0,fragCoord.xy/iResolution.xy),0.5);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define cellsize 50.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    //setting the previous frame pixel color to f\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord),0);\n    \n    //if the length from mouse is lower than length from previous mouse positions, set this length to closest and set a random color\n\t\n    \n    \n    vec2 uv = floor((fragCoord*2.0-iResolution.xy)/cellsize);\n    vec2 muv = floor((iMouse.xy*2.0-iResolution.xy)/cellsize);\n    if (iMouse.z > 0.0 && uv == muv)\n    fragColor = clamp(iTimeDelta+fragColor,vec4(0.0),vec4(1.0));\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}