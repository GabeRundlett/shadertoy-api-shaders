{
    "Shader": {
        "info": {
            "date": "1581984779",
            "description": "Sin Distortion makes everything more beautiful... :D\nA variation of https://www.shadertoy.com/view/tltSWs\n",
            "flags": 0,
            "hasliked": 0,
            "id": "wtdSWs",
            "likes": 7,
            "name": "Basic Fractal Zero Sin",
            "published": 3,
            "tags": [
                "2d",
                "fractal"
            ],
            "usePreview": 0,
            "username": "PauloFalcao",
            "viewed": 361
        },
        "renderpass": [
            {
                "code": "//Basic Fractal Sin by @paulofalcao\n\nconst int maxIterations=8;\n\n//generic rotation formula\nvec2 rot(vec2 uv,float a){\n    float c=cos(a);float s=sin(a);\n    return uv*mat2(c,-s,s,c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\t//normalize stuff\n\tvec2 uv=iResolution.xy;uv=-.5*(uv-2.0*fragCoord.xy)/uv.x;\n\n\t//global zoom\n\tuv*=sin(iTime)*2.5+5.5;\n\n\t//shift, mirror, rotate and scale 6 times...\n\tfor(int i=0;i<maxIterations;i++){\n        uv*=1.5;                        //<-Scale\n        uv=rot(uv,iTime);               //<-Rotate\n        uv+=sin(uv*sin(iTime)*8.0)*0.1; //<-Sin Distortion\n\t\tuv=abs(uv);                     //<-Mirror\n        uv-=0.5;                        //<-Shift\n\t}\n\n\t//draw a circle\n\tfloat c=length(uv)>0.2?0.0:1.0;\t\n\n\tfragColor = vec4(c,c,c,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}