{
    "Shader": {
        "info": {
            "date": "1511483426",
            "description": "Just learning ",
            "flags": 0,
            "hasliked": 0,
            "id": "lllBR7",
            "likes": 3,
            "name": "\"HelloWorld!!\"",
            "published": 3,
            "tags": [
                "trigonometry"
            ],
            "usePreview": 0,
            "username": "felipunkerito",
            "viewed": 649
        },
        "renderpass": [
            {
                "code": "float Circle( vec2 uv, vec2 p, float r, float blur )\n{\n\n\tfloat d = length(uv - p);\n    float c = smoothstep(r, r-blur, d);\n    return c;\n    \n}\n\nfloat Hash( float h )\n{\n\n    return h = fract(cos(h) * 5422.2465);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float c = 0.0;\n    \n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    float sizer = 1.0;\n    float steper = .1;\n    for(float i = -sizer; i<sizer; i+=steper)\n        for(float j = -sizer; j<sizer; j+=steper){\n    {\t\n        float timer = .5;\n        float resetTimer = 7.0;\n    \t//c = Circle(uv, vec2(0.0,0), sin(iTime*timer), 0.1);\n    \t//c -= Circle(uv, vec2(0.0,0.0), sin(iTime*timer+.2), 0.1);\n        if(c<=1.0){\n    \t\t\n            c += Circle(uv, vec2(i, j),sin(Hash(i))*cos(Hash(j))*(mod(iTime*timer, resetTimer)), sin(Hash(j)));\n        \n        }\n        else if(c>=1.0)\n        {\n            c -= Circle(uv, vec2(i, j),sin(Hash(i))*cos(Hash(j))*(mod(iTime*timer, resetTimer)), sin(Hash(j)));     \n        }\n        }\n    }\n    fragColor = vec4( vec3(c),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}