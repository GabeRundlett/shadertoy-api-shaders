{
    "Shader": {
        "info": {
            "date": "1714574606",
            "description": "A simple yet very cool looking animation. Perfect backdrop for a wild dorm techno party.",
            "flags": 0,
            "hasliked": 0,
            "id": "Xf3XWl",
            "likes": 4,
            "name": "Geometry lensing",
            "published": 3,
            "tags": [
                "circles",
                "colors",
                "art",
                "techno",
                "lensing"
            ],
            "usePreview": 0,
            "username": "Falafel",
            "viewed": 164
        },
        "renderpass": [
            {
                "code": "/* This animation is built using the code from this: https://www.shadertoy.com/view/mtyGWy\n   Watch the guy's tutorial here: Video URL: https://youtu.be/f4s1h2YETNY\n*/\n\n//https://iquilezles.org/articles/palettes/\nvec3 palette( float t ) {\n    vec3 a = vec3(0.1, 0.1, 0.1);\n    vec3 b = vec3(0.2, 0.1, 0.2);\n    vec3 c = vec3(0.7, 0.4, 0.8);\n    vec3 d = vec3(0.263 + sin(iTime),1.416,0.257);\n\n    return a + b*cos( 2.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    \n    // Cartesian to Polar conversion\n    float r = length(uv);\n    float theta = atan(uv.y, uv.x); // atan2 in some other languages\n\n    \n        theta = (3.0 / 4.0) * theta * sin(7.* sin(iTime * 0.02)); // Stretch it\n    \n    uv.x = r * cos(theta);\n    uv.y = r * sin(theta);\n    \n    \n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 6.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.4 + iTime*.4);\n\n        d = sin(d*8. + iTime)/8.;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2);\n\n        finalColor += col * d;\n    }\n        \n    fragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}