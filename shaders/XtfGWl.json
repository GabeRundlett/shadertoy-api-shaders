{
    "Shader": {
        "info": {
            "date": "1425945921",
            "description": "audio multiplied by itself.  red color is bass, green mids, blue treb.",
            "flags": 0,
            "hasliked": 0,
            "id": "XtfGWl",
            "likes": 1,
            "name": "Matrix Tunnel v2",
            "published": 3,
            "tags": [
                "2d",
                "fft",
                "color",
                "audio",
                "visualizer"
            ],
            "usePreview": 0,
            "username": "hunter",
            "viewed": 1560
        },
        "renderpass": [
            {
                "code": "//\n// Color version of: https://www.shadertoy.com/view/XlXGDf\n//\n// Based on: https://www.shadertoy.com/view/4dfSRS\n//\n\n#define PI 3.14159\n\nvec4 audioEq() {\n    float vol = 0.0;\n    \n    // bass\n    float lows = 0.0;\n    for(float i=0.;i<85.; i++){\n        float v =  texture(iChannel0, vec2(i/85., 0.0)).x;\n        lows += v*v;\n        vol += v*v;\n    }\n    lows /= 85.0;\n    lows = sqrt(lows);\n    \n    // mids\n    float mids = 0.0;\n    for(float i=85.;i<255.; i++){\n        float v =  texture(iChannel0, vec2(i/170., 0.0)).x;\n        mids += v*v;\n        vol += v*v;\n    }\n    mids /= 170.0;\n    mids = sqrt(mids);\n    \n    // treb\n    float highs = 0.0;\n    for(float i=255.;i<512.; i++){\n        float v =  texture(iChannel0, vec2(i/255., 0.0)).x;\n        highs += v*v;\n        vol += v*v;\n    }\n    highs /= 255.0;\n    highs = sqrt(highs);\n    \n    vol /= 512.;\n    vol = sqrt(vol);\n    \n    return vec4( lows * 1.5, mids * 1.25, highs * 1.0, vol ); // bass, mids, treb, volume\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = abs( 2.05 * ( uv - 0.5 ) );\n\n    vec4 eq = audioEq();\n\tfloat theta = 0.5 * ( 1.0 / ( PI * 0.5 ) ) * atan( uv.x, uv.y );\n\tfloat r = length( uv );\n\tfloat a = 0.01 - r;\n\tuv = vec2( theta, r );\n\n\tfloat t1 = texture( iChannel0, vec2( uv.x, 0.9 ) ).x;\n\tfloat t2 = texture( iChannel0, vec2( uv.y, 0.9 ) ).x;\n    float y = t1 * t2 * a * 16.9;\n    \n\tfragColor = vec4( sin( y * ( 3.0 * PI ) * eq.x ), \n                      sin( y * ( 2.0 * PI ) * eq.y ), \n                      sin( y * ( 2.0 * PI ) * eq.z ), \n                      1.0); \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 13,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}