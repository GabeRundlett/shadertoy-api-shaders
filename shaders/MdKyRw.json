{
    "Shader": {
        "info": {
            "date": "1521493742",
            "description": "many thanks to iq and his tutorials ",
            "flags": 0,
            "hasliked": 0,
            "id": "MdKyRw",
            "likes": 112,
            "name": "kaleidoscopic iterative function",
            "published": 3,
            "tags": [
                "raymarching",
                "kifs"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 6190
        },
        "renderpass": [
            {
                "code": "vec4 light;\nfloat ui;\nmat2 m,n,nn;\nfloat map (vec3 p) {\n    float d = length(p-light.xyz)-light.w;\n    d = min(d,max(10.-p.z,0.));\n    float t = 2.5;\n    for (int i = 0; i < 13; i++) {\n        t = t*0.66;\n        p.xy = m*p.xy;\n        p.yz = n*p.yz;\n        p.zx = nn*p.zx;\n        p.xz = abs(p.xz) - t;\n\n    }\n    d = min(d,length(p)-1.4*t);\n\n    return d;\n}\nvec3 norm (vec3 p) {\n    vec2 e = vec2 (.001,0.);\n    return normalize(vec3(\n        map(p+e.xyy) - map(p-e.xyy),\n        map(p+e.yxy) - map(p-e.yxy),\n        map(p+e.yyx) - map(p-e.yyx)\n    ));\n}\nvec3 dive (vec3 p, vec3 d) {\n    for (int i = 0; i < 20; i++) {\n        p += d*map(p);\n    }\n    return p;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 v = fragCoord/iResolution.xy*2.-1.;\n\tv.x *= iResolution.x/iResolution.y;\n    ui = 100.*iTime;\n    float y = -0.001*ui;\n    m = mat2(sin(y),cos(y),-cos(y),sin(y));\n    y = 0.0035*ui;\n    n = mat2(sin(y),cos(y),-cos(y),sin(y));\n    y = 0.0023*ui;\n    nn = mat2(sin(y),cos(y),-cos(y),sin(y));\n    vec3 r = vec3(0,0,-15.+2.*sin(0.01*ui));\n    light = vec4(10.*sin(0.01*ui),2,-23,1);\n    vec3 d = normalize(vec3(v,5.));\n    vec3 p = dive(r,d);\n    d = normalize(light.xyz-p);\n    vec3 no = norm(p);\n    vec3 col = vec3(.7,.8,.9);\n    vec3 bounce = dive(p+0.01*d,d);\n    col = mix(col,vec3(0),dot(no, normalize(light.xyz-p)));\n    if (length(bounce-light.xyz) > light.w+0.1) col *= 0.2;\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}