{
    "Shader": {
        "info": {
            "date": "1684399538",
            "description": "Use mouse to slide.",
            "flags": 0,
            "hasliked": 0,
            "id": "mlKGzc",
            "likes": 2,
            "name": "Image Transition SDF Mask",
            "published": 3,
            "tags": [
                "transition"
            ],
            "usePreview": 0,
            "username": "alphardex",
            "viewed": 367
        },
        "renderpass": [
            {
                "code": "vec4 getFromColor(vec2 uv){\n    return texture(iChannel0,uv);\n}\n\nvec4 getToColor(vec2 uv){\n    return texture(iChannel1,uv);\n}\n\nconst float PI=3.14159265359;\n\n// rotate\nmat2 rotation2d(float angle){\n    float s=sin(angle);\n    float c=cos(angle);\n    \n    return mat2(\n        c,-s,\n        s,c\n    );\n}\n\nvec2 rotate(vec2 v,float angle){\n    return rotation2d(angle)*v;\n}\n\nfloat sdBox(in vec2 p,in vec2 b)\n{\n    vec2 d=abs(p)-b;\n    return length(max(d,0.))+min(max(d.x,d.y),0.);\n}\n\nfloat opUnion(float d1,float d2)\n{\n    return min(d1,d2);\n}\n\nfloat opIntersection(float d1,float d2)\n{\n    return max(d1,d2);\n}\n\nfloat opSubtraction(float d1,float d2)\n{\n    return max(-d1,d2);\n}\n\nvec4 transition(vec2 uv){\n    float progress=iMouse.x/iResolution.x;\n    \n    float ratio=iResolution.x/iResolution.y;\n    \n    // SDF mask\n    vec2 grid=vec2(4.,4.);\n    \n    float pr=-2.*pow((2.*progress-1.),2.)+1.;\n    float offset=mix(0.,-.25,pr);\n    \n    // float angle=PI*.25/3.;\n    float angle=mix(0.,PI*.5,progress);\n    vec2 p1=uv;\n    p1=fract(p1*grid);\n    p1-=vec2(.5);\n    p1=rotate(p1,angle);\n    float d1=sdBox(p1,vec2(.5+offset,.75));\n    \n    vec2 p2=uv;\n    p2=fract(p2*grid);\n    p2-=vec2(.5);\n    p2=rotate(p2,angle+PI*.5);\n    float d2=sdBox(p2,vec2(.5+offset,.75));\n    \n    float d=opIntersection(d1,d2);\n    \n    float mask=1.-smoothstep(0.,.02,d);\n    \n    return mix(\n        getFromColor(uv)*mask,\n        getToColor(uv)*mask,\n        progress\n    );\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    vec2 uv=fragCoord/iResolution.xy;\n    \n    vec4 col=transition(uv);\n    \n    fragColor=col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}