{
    "Shader": {
        "info": {
            "date": "1700832320",
            "description": "Bilinear interpolation",
            "flags": 0,
            "hasliked": 0,
            "id": "dtKcDd",
            "likes": 0,
            "name": "My Bilinear Interpolation",
            "published": 3,
            "tags": [
                "filter"
            ],
            "usePreview": 0,
            "username": "Timmyswdswd",
            "viewed": 194
        },
        "renderpass": [
            {
                "code": "//Made as in https://upload.wikimedia.org/wikipedia/commons/c/c6/Bilininterp.png\n\nfloat Lerp(float x, float q1, float q2)\n{\n    float q = q1 + x*(q2-q1);\n    return q;\n}\n\nvec3 Rainbow(float h)\n{\n    const float PI = 3.14159265359;\n    h = clamp(h, 0.0, 1.0);\n    h *= 2.0/3.0;\n    \n    float r = (sin((h+1.0/3.0)*2.0*PI + PI/2.0)+1.0)/2.0;\n    float g = (sin((h+2.0/3.0)*2.0*PI + PI/2.0)+1.0)/2.0;\n    float b = (sin(h*2.0*PI + PI/2.0)+1.0)/2.0;\n    \n    vec3 col = vec3(r, g, b);\n    col = round(col*20.0)/20.0;\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.0, 0.0, 0.0);\n     \n    float q1 = 0.0;\n    float q2 = 1.2;\n    float q3 = 1.2;\n    float q4 = 0.5;\n    \n    float heigh1 = Lerp(uv.x, q1, q2);\n    float heigh2 = Lerp(uv.x, q3, q4);\n    float heigh = Lerp(uv.y, heigh1, heigh2);\n    \n    col = Rainbow(heigh);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}