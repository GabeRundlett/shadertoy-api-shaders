{
    "Shader": {
        "info": {
            "date": "1685125796",
            "description": "Simple fake refraction.\nIt doesn't look fantastic but if you squint your eyes long enough it will look like flowing water.",
            "flags": 0,
            "hasliked": 0,
            "id": "mttXzN",
            "likes": 8,
            "name": "Fake Water Refraction",
            "published": 3,
            "tags": [
                "refraction",
                "water"
            ],
            "usePreview": 0,
            "username": "s_fx",
            "viewed": 295
        },
        "renderpass": [
            {
                "code": "/*\n * Fake Water Refraction\n * (c) 2023 s.fx\n * \n * Modified and documented fork of\n * https://www.shadertoy.com/view/4t33z8\n * by thallippoli\n */\n\nconst float SCALE      = .1;                 // scale of noise texture\nconst float STRENGTH   = 1.5;                // amplitude of noise \nconst float OFFSET     = .03;                // offset amplitude\nconst float PI         = 3.1415926535897932; // it's just pi\nconst bool  BLUE_TINT  = true;               // toggle color grading\nconst vec3  BLUE       = vec3(.8, .8, 1.5);  // blue color for color grading\nconst float BLUE_RATIO = .5;                 // mix ratio for color grading\nconst bool  LIGHT      = true;               // toggle weird noise light effects\nconst float THRESHOLD  = .8;                 // threshold for dark areas in noise\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv     = fragCoord.xy / iResolution.xy;\n    vec2 warpUV = SCALE * uv;\n\n    // just shift the texture\n    vec2 st = warpUV + vec2(iTime * .1, iTime * .05);\n\n    // get value from noise (only one int8 channel) using coord and make it brighter\n    float warpedCol = texture(iChannel0, st).x * STRENGTH;\n\n    // offset for texture by calculating angle from noise\n    vec2 offset = OFFSET * vec2(cos(warpedCol * PI), sin(warpedCol * PI));\n\n    // query texture color at uv using offset vector\n    vec3 col = texture(iChannel1, uv + offset).rgb;\n\n    // give water blue tint\n    if (BLUE_TINT)\n        col = mix(col, col * BLUE, BLUE_RATIO);\n\n    // brighten up brick texture with noise\n    if (LIGHT)\n        col *= max(warpedCol, THRESHOLD);\n\n    fragColor = vec4(col,  1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}