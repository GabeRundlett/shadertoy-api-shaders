{
    "Shader": {
        "info": {
            "date": "1601837403",
            "description": "about a couple of weeks ago (2020-10-04) i began looking into Python.\nsoon enough i learned about a library called Pillow (PIL) and created this.\nit takes some image as an input and some colors as another input, it then will re-color the image",
            "flags": 32,
            "hasliked": 0,
            "id": "WsccDf",
            "likes": 2,
            "name": "Image Re-Painter",
            "published": 3,
            "tags": [
                "paint",
                "image",
                "repainter"
            ],
            "usePreview": 0,
            "username": "Miestrode",
            "viewed": 444
        },
        "renderpass": [
            {
                "code": "// Created by Yoav Greenland - 2020\n\n// This work is licensed under a Creative Commons\n// Attribution-ShareAlike 4.0 International License.\n\n// Repainting an image is always quite a feat when done well,\n// so why not automate it? well that's the idea I had.\n// Originally I had a more broad idea in mind, which was to\n// repaint images from other images of differing colors, but\n// this is a step in the right direction.\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0,uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Created by Yoav Greenland - 2020\n\n// This work is licensed under a Creative Commons\n// Attribution-ShareAlike 4.0 International License.\n\n// Repainting an image is always quite a feat when done well,\n// so why not automate it? well that's the idea I had.\n// Originally I had a more broad idea in mind, which was to\n// repaint images from other images of differing colors, but\n// this is a step in the right direction.\n\n// below is the optimized code I used:\n\nvec3 array[9] = vec3[](vec3(1.0,0.1,0.5),vec3(1.0,0.5,0.6),vec3(0.7,0.25,0.5),vec3(0.8,0.8,0.8),vec3(0.7,0.6,0.7),vec3(0.9,0.9,0.9),vec3(0.95,0.95,0.95),vec3(0.3,0.1,0.1), vec3(0.1,0.1,0.1));\n\nvec3 repaint(in vec3 icol)\n{\n    float min = 1.0;\n    \n    vec3 col;\n    \n    for(int i; i<9; i++)\n    {\n        float d = distance(vec3(icol),vec3(array[i]));\n        if(d<min)\n        {\n            col = array[i]; \n            min = d;\n        }\n    }\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    fragColor = vec4(repaint(texture(iChannel0,uv).xyz),1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}