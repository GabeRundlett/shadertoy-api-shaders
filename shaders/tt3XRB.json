{
    "Shader": {
        "info": {
            "date": "1581192352",
            "description": "All good things take time. \nPart 1 - simulate a wave for 500 frames\nPart 2 - simulate photons passing through the wave field make a nice caustic",
            "flags": 32,
            "hasliked": 0,
            "id": "tt3XRB",
            "likes": 14,
            "name": "Caustic Patience",
            "published": 3,
            "tags": [
                "wave",
                "light",
                "caustic"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 595
        },
        "renderpass": [
            {
                "code": "Main {\n\tQ = 5e-4*B(U)/(float(1+iFrame-O))*(R.y*R.x);\n    \n    if (iFrame < O)\n        Q = 0.5+.05*(A(U).yyyy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define O 500\n#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel1,(U)/R)\n#define Neighborhood vec4 n = A(U+vec2(0,1)), e = A(U+vec2(1,0)), s = A(U-vec2(0,1)), w = A(U-vec2(1,0)), m = 0.25*(n+e+s+w);\n#define Main void mainImage (out vec4 Q, vec2 U) \n// Dave H\nvec3 hash32(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy+p3.yzz)*p3.zyx);\n}\nvec4 hash44(vec4 p4)\n{\n\tp4 = fract(p4  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "Main {\n\tif (iFrame >= O) discard;\n    Q = A(U);\n    Neighborhood\n    \n    Q.x += m.y-Q.y;\n    Q.y += .4*Q.x;\n    Q.zw = 0.25*vec2(e.y-w.y,n.y-s.y);\n    if (iFrame < 1)\n   \tQ = vec4(0,0,0,0);\n    vec2 M = 0.5*R;\n    if (iMouse.z>0.) M = iMouse.xy;\n    Q.y += 7e-4*R.x*sin(float(iFrame)/70.)*10.*exp(-3.*dot(U-M,U-M)/R.x);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec4 P (vec2 U, vec3 p) {\n\treturn exp(-0.5*dot(U-p.xy,U-p.xy))*max(cos(p.z*6.2+vec4(1,2,3,4)),0.);\n}\nMain {\n    \n    if (iFrame < O) Q = vec4(0);\n    else {\n    Q = B(U);\n    #define N 250\n    for (int i = 0; i < N; i++) {\n        int I = (iFrame-O)*N+i;\n        vec4 h = hash44(vec4(U,i,iFrame));\n    \tvec3 p = 0.5*vec3(\n            (I%int(2.*R.x)),\n            (I/int(2.*R.x))%int(2.*R.y),\n            2.*h.x\n        );p.xy += h.xy*2.-1.;\n        vec2 g = A(p.xy).zw;\n        p.xy += 30.*g*(1.+p.z);\n        Q += P(U,p.xyz);\n    }\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main {\n    \n\tif (iFrame >= O) discard;\n\tQ = A(U);\n    Neighborhood\n    Q.x += m.y-Q.y;\n    Q.y += .4*Q.x;\n    Q.zw = 0.25*vec2(e.y-w.y,n.y-s.y);\n    if (iFrame < 1)\n   \tQ = vec4(0,0,0,0);\n    vec2 M = 0.5*R;\n    if (iMouse.z>0.) M = iMouse.xy;\n    Q.y += 7e-4*R.x*sin(float(iFrame)/30.)*10.*exp(-3.*dot(U-M,U-M)/R.x);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main {\n\tif (iFrame >= O) discard;\n\tQ = A(U);\n    Neighborhood\n    Q.x += m.y-Q.y;\n    Q.y += .4*Q.x;\n    Q.zw = 0.25*vec2(e.y-w.y,n.y-s.y);\n    if (iFrame < 1)\n   \tQ = vec4(0,0,0,0);\n    vec2 M = 0.5*R;\n    if (iMouse.z>0.) M = iMouse.xy;\n    Q.y += 7e-4*R.x*sin(float(iFrame)/8.)*10.*exp(-3.*dot(U-M,U-M)/R.x);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}