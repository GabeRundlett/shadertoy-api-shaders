{
    "Shader": {
        "info": {
            "date": "1649918125",
            "description": "mandelbrot",
            "flags": 0,
            "hasliked": 0,
            "id": "7tBczK",
            "likes": 1,
            "name": "分形3-2",
            "published": 3,
            "tags": [
                "mandelbrot"
            ],
            "usePreview": 0,
            "username": "yjx",
            "viewed": 215
        },
        "renderpass": [
            {
                "code": "float distancetoline(vec2 pos1,vec2 pos2,vec2 pos){\n    vec2 v1=pos1-pos;\n    vec2 v2=pos2-pos;\n    vec2 v3=pos1-pos2;\n    if(v1.x*v3.x+v1.y*v3.y>0. && v2.x*v3.x+v2.y*v3.y<0.){\n    return abs(v1.x*v2.y-v2.x*v1.y)/min(length(pos1-pos2),10000.);}\n    return 1.0;\n}//点到线段距离\n\nvec2 sq(vec2 z){\n    return vec2(z.x*z.x-z.y*z.y,2.*z.x*z.y);}//平方\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float cof=4.;\n\n    vec2 uv=vec2(0.);\n    vec2 uv2=vec2(0.);\n    vec2 Mouse=cof*(iMouse.xy-iResolution.xy*vec2(.5))/iResolution.x;\n    vec2 c=cof*(fragCoord-iResolution.xy*vec2(.5))/iResolution.x;\n\n    float iterations=0.0;\n\n    for(int i=0;i<100;i++){\n    if(dot(uv,uv)<10000.0){\n        uv=sq(uv)+c;\n        iterations+=1.0;}}\n\n    vec4 mandel=vec4(iterations/100.0,iterations/100.0,iterations/100.0,1.0);\n    vec4 linecolor=vec4(0.953,0.761,0.071,1.);\n    for(int i=0;i<100;i++){\n        mandel=mix(linecolor,mandel,\n        smoothstep(0.000,0.003,distancetoline(uv2,sq(uv2)+Mouse,c))\n        );\n        uv2=sq(uv2)+Mouse;}\n    fragColor=mandel;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}