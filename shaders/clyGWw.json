{
    "Shader": {
        "info": {
            "date": "1684073109",
            "description": "Not exactly the same because of usual platform difference between bonzo and st.",
            "flags": 64,
            "hasliked": 0,
            "id": "clyGWw",
            "likes": 11,
            "name": "[Revision 2023] Qualif",
            "published": 3,
            "tags": [
                "revision",
                "shadershowdown"
            ],
            "usePreview": 0,
            "username": "totetmatt",
            "viewed": 288
        },
        "renderpass": [
            {
                "code": "float bpm;\n  vec3 erot(vec3 p,vec3 ax,float t){return mix(dot(ax,p)*ax,p,cos(t))+cross(ax,p)*sin(t);}\nfloat txt(vec2 p,float t){\n     ivec2 i = ivec2(abs(p)*128.);\n      return dot(sin(float(i)),cos(float(i.yx)*t))+float(i.x&i.y)/128.;;\n  }\n  float rand(vec2 p){\n       return fract(535.55*sin(dot(p,vec2(85.5,479.5))));\n    }\n  vec3 path(vec3 p){\n    \n     vec3 o = vec3(0.);\n       o.x +=sin(p.z*.1)*2.;\n       o.x +=sin(p.z*.55)*.44;\n       o.y +=sin(p.z*.33)*.44;\n       o.y +=cos(p.z*.24)*.5;\n      return o;\n    }\n    float terr(vec3 p){\n        float d=0.;\n         for(float i=.5;i<5.;i+=i){\n           \n              d+= dot(asin(sin(erot(p*i,vec3(0.,1.,0),i))),vec3(.5))/i/4.;\n           }\n           \n           return d;\n      \n      }\nvec2 sdf(vec3 p){\n     vec2 h;\n     vec3 hp=p;\n  \n     vec3 ph= path(hp);\n  \n     float ff = 1.-tanh(abs(hp.x-ph.x)-1.);\n     h.x  = dot(hp,vec3(0.,1.,0.))+1.+ff+terr(hp)+texture(iChannel0,fract(vec2(.3+ff*.01))).r;;\n     h.y= 1.;\n  \n     vec2 t;\n     vec3 tp=p;\n     \n      tp-=ph;  \n      tp.y +=1.;\n   float gy = dot(sin(tp*1.5),cos(tp.zxy));\n    tp+=gy*.1;\n     tp= erot(tp,vec3(0,0,1),tp.z);\n  tp.xy= abs(tp.xy)-.2;tp.xy=abs(tp.xy)-.1;\n     t.x =  max(abs(tp.z-bpm)-5.,length(tp.xy)-.02);\n     t.y = 2.;\n     h=t.x < h.x ? t:h;\n     return h;\n  \n  }\n  #define q(s) s*sdf(p+s).x\n  \n  vec3 norm(vec3 p,float ee){vec2 e=vec2(-ee,ee);return normalize(q(e.xyy)+q(e.yxy)+q(e.yyx)+q(e.xxx));}\n  \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n  bpm = +iTime*2.;\n   bpm+=+rand(uv)*.1;\n  bpm = floor(bpm) + pow(fract(bpm),2.1);\nvec3 col = vec3(0.);\n// Imagine revision logo\n    //col.r= texture(iChannel1,clamp(uv+.5+texture(iChannel0,vec2(1.)*fract(floor(bpm)*.1+txt(uv,1.))).r,0.,1.)).r;\n   //  col.gb= texture(iChannel1,clamp(uv+.5+texture(iChannel0,vec2(1.)*fract(floor(bpm)*.1+txt(uv,2.)))).r,0.,1.)).gb;\n   \n  vec3 ro=vec3(1.,1.,bpm+cos(bpm)),rt=vec3(0.,0.,bpm+tanh(sin(bpm*.25))*15.);\n  ro+=path(ro);\n  rt+=path(rt);\n  vec3 z=normalize(rt-ro),x=normalize(cross(z,vec3(0.,-1.,0))),y=cross(z,x);  \n  vec3 rd = mat3(x,y,z)*normalize(vec3(uv,1.+sin(bpm)*.1));\n  \n  vec3 rp= ro;\n   vec3 acc= vec3(0.);\n  // AZERTY FOR THE WIN\n   float dd =0.;\n  vec3 light = normalize(vec3(1.,2.,-3.));\n  for(float i=0.;i++<128. && dd < 50.;){\n    \n      vec2 d = sdf(rp);\n    \n       if(d.y ==2.){\n          acc+=vec3(.0,.3,.7)*exp(-abs(d.x))/(50.-min(45.,texture(iChannel0,vec2(fract(.3+bpm+rp.z*.1))).r*100.));\n          d.x = max(.001,abs(d.x));\n         }\n      rp+=rd*d.x;\n      dd+=d.x;\n       if(d.x < .001){\n          vec3 n = norm(rp,.005);\n         vec3 n2 = norm(rp,.007);\n           float dif = max(0.,dot(light,n));\n            float fr= pow(1.+dot(rd,n),4.);\n             col = +dif * vec3(.1);\n             if(d.y==1.){\n                  col  += smoothstep(.001,.1,length(n-n2))+fr*vec3(1.,.7,.3)*max(0.,1.-abs(rp.z-bpm-5.)*.2);\n                  rd= reflect(rd,n);\n                  rp+=rd*.1;\n                  continue;\n               \n               }\n             break;\n         \n         }\n    }\n    col = mix(col,vec3(.1),(.5)-exp(-dd));\n  \n\n    // Output to screen\n    fragColor = vec4(sqrt(col+acc),1.);\n    }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 33304,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/alkama/dissonance"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}