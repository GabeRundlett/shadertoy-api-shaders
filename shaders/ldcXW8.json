{
    "Shader": {
        "info": {
            "date": "1458976868",
            "description": "code golf of hexagonal tiling.   \n\nchallenge: colors are not important as long as different for neighbors.",
            "flags": 0,
            "hasliked": 0,
            "id": "ldcXW8",
            "likes": 42,
            "name": "hexagonal tiling (149 chars)",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "grid",
                "hexagon",
                "pattern",
                "short",
                "onetweet"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 3358
        },
        "renderpass": [
            {
                "code": "// inspired from https://www.shadertoy.com/view/Xdt3D8\n\n\n// uh, yes, I forgot 104's version https://www.shadertoy.com/view/ltlSW4 , \n// which is 135 (without animation) :-/\n\n\n/**/ // 149 by coyote  - different coloring \n\nvoid mainImage( out vec4 o,  vec2 p ) {\n    p -= o.xy = fract( p*= mat2(10, 5.8, 0, 11.5) / iResolution.y );\n    o = ( (o.w=mod(p.x+p.y,3.)) < 2. ? p + o.w  :  p + step(o.yx,o.xy) ).xyxy / 15.;\n}\n\n\n/** // 162 by coyote\n\nvoid mainImage( out vec4 o,  vec2 p ) {\n    p -= o.xy = fract( p*= mat2(10, 5.8, 0, 11.5) / iResolution.y );\n    o = mod( (o.w = fract((p.x + p.y)/3.))<.6 \n            ?   o.w<.3 ?  p  :  ++p  \n            :  p + step(o.yx,o.xy) , 2.).xyxy;\n}\n\n\n\n/**  // 177\n\nvoid mainImage( out vec4 o,  vec2 p ) {\n\t\n\tvec2  R = iResolution.xy, f;\n\t\t    \n\tp -= f = fract( p= (p+p - R)*5./R.y  * mat2(1,.58,0,1.15) );\n    \n\tR = fract((p + p.y)/3.);\n\n    \n    o = mod( R.x<.6 ?   R.x<.3 ?  p  :  ++p  :  p + step(f.yx,f) , 2.).xyxy;\n\n  //o = .3+sin( R.x<.6 ?   R.x<.3 ?  p  :  ++p  :  p + step(f.yx,f)).xyxy;\n  //o = mod( R.x<.6 ?   p+step(.3,R.x) :  p+step(f.yx,f) ,2.).xyxy;\n}\n/**/  \n\n\n\n/**  // 183\n\nvoid mainImage( out vec4 o,  vec2 p ) {\n\t\n\tvec2  R = iResolution.xy,f;\n\t\t\n    p  = (p+p - R)*5./R.y; \n\tp -= f = fract(p+= vec2(.58,.15)*p.y);\n    \n\tR = fract((p + p.y)/3.);\n\n    //o = vec4(mod( R.x<.6 ?   R.x<.3 ?  p  :  ++p  :  p + step(f.yx,f) ,2.),0,1); \n    \n    f = R.x<.6 ?   R.x<.3 ?  p  :  ++p  :  p + step(f.yx,f);\n    o = mod(f.xyxy,2.);\n  //o += fract(length(f));\n}\n/**/  \n\n\n\n/**   // 191 chars\n\nvoid mainImage( out vec4 o,  vec2 p ) {\n\t\n\tvec2  R = iResolution.xy,f;\n\t\t\n    p  = (p+p - R)*5./R.y; \n    p += vec2(.58,.15)*p.y;\n\tf = fract(p);  p -= f;\n    \n\tfloat v = fract((p.x + p.y)/3.);\n    f =  v<.6 ?   v<.3 ?  p  :  ++p  :  p + step(f.yx,f) ; \n    \n    \n    o = mod(f.xyxy,2.);\n}\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}