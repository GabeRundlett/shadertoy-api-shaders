{
    "Shader": {
        "info": {
            "date": "1502293812",
            "description": "Arrow keys to move\n(this is probably not how games are supposed to be done... <.< oh well)",
            "flags": 48,
            "hasliked": 0,
            "id": "MsjBWK",
            "likes": 2,
            "name": "Fast Snek Game",
            "published": 3,
            "tags": [
                "2d",
                "game",
                "snake"
            ],
            "usePreview": 0,
            "username": "DJDoomz",
            "viewed": 770
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = texture(iChannel0,(fragCoord+4.)/iResolution.xy/4.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "const int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\nconst float speed = 1.;\n\n#define T(U) texelFetch(iChannel0,ivec2(U),0)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 dat = T(0);\n    vec2 pos = floor(dat.xy);\n    vec2 vel = fract(dat.xy);\n    vec2 dotpos = floor(dat.zw);\n    float len = fract(dat.w);\n    \n    if(iTime < .1)\n        fragColor = vec4(iResolution.xy/8.,60,20);\n    else\n    {\n        if(fragCoord.x < 1. && fragCoord.y < 1.)\n        {\n            if(iFrame%1!=0) //variable framerate\n            {\n            \tfragColor = dat;\n            }\n            else\n            {\n                #define key(c, a, b) if (texelFetch( iChannel1, ivec2(c,0),0 ).x > 0. ) vel = vec2(a,b)\n                //.1 = -1, .3 = 0, .6 = 1\n                key(KEY_LEFT , .1, .3);\n                key(KEY_RIGHT,  .6, .3);\n                key(KEY_UP,     .3, .6);\n                key(KEY_DOWN,   .3,.1);\n                if(vel.x > .2)\n                    if(vel.x > .5)\n                        pos.x += speed;\n                    else\n                        if(vel.y > .5)\n                            pos.y += speed;\n                        else\n                            pos.y -= speed;   \n                else\n                    pos.x -= speed;\n\n                pos = mod(pos, floor(iResolution.xy/4.));\n\n                if(length(pos-dotpos) < 3.)\n                {\n                    dotpos = floor(sin(323.84*vec2(324.35,5332.)+iTime)*9543.);\n                    dotpos = floor(mod(dotpos,iResolution.xy/5. - 25.))+12.;\n                    len += .005;\n                }\n                if(T(pos).r > 0.)\n                {\n                    pos = floor(iResolution.xy/8.);\n                    len = 0.;\n                }\n\n                pos+=vel;\n                dotpos.y += len;\n                fragColor = vec4(pos,dotpos);\n            }\n        }\n        else\n        {\n            len*=10000.;\n            fragColor = vec4(0);\n            \n            if(length(fragCoord-dotpos) < 1.+fract(iTime))\n             \tfragColor = vec4(0,0,1,-1);   \n            \n            float segnum = T(fragCoord).w;\n            if(T(fragCoord).g > 0.1 && segnum < len && len > 1.)\n                \tfragColor = vec4(vec3(.7+.3*sin(segnum/4.+iTime)),segnum+1.);\n            \n            if(length(fragCoord-pos) < 1.)\n                fragColor = vec4(0,1,0,1);\n            \n            if(fragCoord.x < 2. || fragCoord.x > iResolution.x/4. || fragCoord.y < 2. || fragCoord.y > iResolution.y/4.)\n                fragColor = vec4(1);\n        }\n    }\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}