{
    "Shader": {
        "info": {
            "date": "1600494243",
            "description": ".",
            "flags": 32,
            "hasliked": 0,
            "id": "td3yRN",
            "likes": 10,
            "name": "random diffusion",
            "published": 3,
            "tags": [
                "random",
                "diffusion"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 348
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\tO = fract(T(U)); }\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define T(U) texelFetch( iChannel0, ivec2(U) , 0 )",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "#define hash(p)      fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453)\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = T( U );\n    for (int i=0; i<9; i+= i==3 ? 2 : 1 ) {\n        vec2 D = vec2( i%3-1, i/3-1);\n        if ( hash(U+float(i)/11.+iTime) < .1 ) O =  max(O, T(U+D) );\n               //  +D\n    }\n    \n    if (iFrame%1==0) O += .99* vec4( length(U-iResolution.xy/2.) < 2. );\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}