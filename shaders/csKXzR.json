{
    "Shader": {
        "info": {
            "date": "1681984123",
            "description": "Orb menu GUI",
            "flags": 0,
            "hasliked": 0,
            "id": "csKXzR",
            "likes": 8,
            "name": "Orb menu",
            "published": 3,
            "tags": [
                "orb",
                "menu"
            ],
            "usePreview": 0,
            "username": "Peace",
            "viewed": 275
        },
        "renderpass": [
            {
                "code": "const float HALF_PI = 1.57079632679;\n\nfloat line(vec2 p, vec2 a, vec2 b)\n{\n\tvec2 pa = p - a;\n\tvec2 ba = b - a;\n\tfloat h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    return length(pa - ba * h);\n}\n\nfloat _u(vec2 uv, float w, float v) \n{\n    return length(vec2(\n                abs(length(vec2(uv.x,\n                                max(0.0,-(.4-v)-uv.y) ))-w)\n               ,max(0.,uv.y-.4)));\n}\n\nfloat _i(vec2 uv) \n{\n    return length(vec2(uv.x,max(0.,abs(uv.y)-.4)));\n}\n\nfloat _j(vec2 uv) \n{\n    uv.x+=.2;\n    uv.y+=.55;\n    float x = uv.x>0.&&uv.y<0.?\n                abs(length(uv)-.25)\n               :min(length(uv+vec2(0.,.25)),\n                    length(vec2(uv.x-.25,max(0.,abs(uv.y-.475)-.475))));\n    return x;\n}\n\nfloat _o(vec2 uv) \n{\n    return abs(length(vec2(uv.x,max(0.,abs(uv.y)-.15)))-.25);\n}\n\nfloat aa(vec2 uv) \n{\n    uv = -uv;\n    float x = abs(length(vec2(max(0.,abs(uv.x)-.05),uv.y-.2))-.2);\n    x = min(x,length(vec2(uv.x+.25,max(0.,abs(uv.y-.2)-.2))));\n    return min(x,(uv.x<0.?uv.y<0.:atan(uv.x,uv.y+0.15)>2.)?_o(uv):length(vec2(uv.x-.22734,uv.y+.254)));\n}\n\nfloat cc(vec2 uv) \n{\n    float x = _o(uv);\n    uv.y= abs(uv.y);\n    return uv.x<0.||atan(uv.x,uv.y-0.15)<1.14?x:\n                    min(length(vec2(uv.x+.25,max(0.0,abs(uv.y)-.15))),//makes df right \n                        length(uv+vec2(-.22734,-.254)));\n}\n\nfloat CC(vec2 uv) \n{\n    float x = abs(length(vec2(uv.x,max(0.,abs(uv.y-.1)-.25)))-.25);\n    uv.y -= .1;\n    uv.y= abs(uv.y);\n    return uv.x<0.||atan(uv.x,uv.y-0.25)<1.14?x:\n                    min(length(vec2(uv.x+.25,max(0.0,abs(uv.y)-.25))), \n                        length(uv+vec2(-.22734,-.354)));\n}\n\nfloat gg(vec2 uv) \n{\n    float x = _o(uv);\n    return min(x,uv.x>0.||atan(uv.x,uv.y+.6)<-2.?\n               _u(uv,0.25,-0.2):\n               length(uv+vec2(.23,.7)));\n}\n\nfloat ii(vec2 uv) \n{\n    return min(_i(uv),length(vec2(uv.x,uv.y - .75)));\n}\n\nfloat nn(vec2 uv) \n{\n    uv.y *= -1.;\n    float x = _u(uv,.25,.25);\n    uv.x+=.25;\n    return min(x,_i(uv));\n}\n\nfloat oo(vec2 uv) \n{\n    return _o(uv);\n}\n\nfloat rr(vec2 uv) \n{\n    uv.x -= .05;\n    float x =atan(uv.x,uv.y-0.15)<1.14&&uv.y>0.?_o(uv):length(vec2(uv.x-.22734,uv.y-.254));\n   \n    uv.x+=.25;\n    return min(x,_i(uv));\n}\n\nfloat tt(vec2 uv) \n{\n    uv.x *= -1.;\n    uv.y -= .4;\n    uv.x += .05;\n    float x = min(_j(uv),length(vec2(max(0.,abs(uv.x-.05)-.25),uv.y)));\n    return x;\n}\n\nfloat II(vec2 uv) \n{\n    uv.y -= .1;\n    float x = length(vec2(uv.x,max(0.,abs(uv.y)-.5)));\n    uv.y = abs(uv.y);\n    return min(x,length(vec2(max(0.,abs(uv.x)-.1),uv.y-.5)));\n}\n\nfloat OO(vec2 uv) \n{\n    return abs(length(vec2(uv.x,max(0.,abs(uv.y-.1)-.25)))-.25);\n}\n\nvec2 clc(vec2 uv, float cp, float w) \n{\n    return uv - vec2(cp - (w * .5), 0.);\n}\n\n#define ch(l,w) x = min(x, l(clc((uvo * s  - f), cp += w, w)));\n\n#define a_ ch(aa,0.9);\n#define c_ ch(cc,0.9);\n#define g_ ch(gg,0.9);\n#define i_ ch(ii,0.4);\n#define n_ ch(nn,0.9);\n#define o_ ch(oo,0.9);\n#define r_ ch(rr,0.9);\n#define t_ ch(tt,0.9);\n#define C_ ch(CC,0.9);\n#define I_ ch(II,0.9);\n#define O_ ch(OO,0.9);\n\nvec4 perm(vec4 x) { x = ((x * 34.0) + 1.0) * x; return x - floor(x * (1.0 / 289.0)) * 289.0; }\n\nfloat noise(vec3 p)\n{\n    vec3 a = floor(p);\n    vec3 d = p - a;\n    d = d * d * (3.0 - 2.0 * d);\n\n    vec4 b = a.xxyy + vec4(0.0, 1.0, 0.0, 1.0);\n    vec4 k1 = perm(b.xyxy);\n    vec4 k2 = perm(k1.xyxy + b.zzww);\n\n    vec4 c = k2 + a.zzzz;\n    vec4 k3 = perm(c);\n    vec4 k4 = perm(c + 1.0);\n\n    vec4 o1 = fract(k3 * (1.0 / 41.0));\n    vec4 o2 = fract(k4 * (1.0 / 41.0));\n\n    vec4 o3 = o2 * d.z + o1 * (1.0 - d.z);\n    vec2 o4 = o3.yw * d.x + o3.xz * (1.0 - d.x);\n\n    return o4.y * d.y + o4.x * (1.0 - d.y);\n}\n\nfloat fbm(vec3 p)\n{\n    return (noise(p * 1.5) + noise(p * 2.25 + 186.791) * 0.5) * 0.6;\n}\n\nfloat specular(vec3 light_dir, vec3 ray_dir, vec3 normal)\n{\n    return max(0.0, dot(normal, normalize(light_dir + ray_dir)));\n}\n\nfloat smin(float a, float b, float k)\n{\n    float h = clamp(0.5 + 0.5 * (a - b) / k, 0.0, 1.0);\n    return mix(a*a, b*b, h*h) - k * h * (1.0 - h);\n}\n\nvec2 smin2(float a, float b, float k)\n{\n    float h = max(k - abs(a - b), 0.0) / k;\n    float m = h * h * 0.5;\n    float s = m * k * 0.5;\n    return (a < b) ? vec2(a - s, m) : vec2(b - s, 1.0 - m);\n}\n\nvec4 getColor(vec2 uv, vec3 col, float seed)\n{\n    uv += (fbm(vec3(uv, iTime * 0.5) + seed) * 2.0 - 1.0) * 0.2;\n    float l = length(uv);\n    vec3 n = normalize(vec3(uv, -1.0));\n    vec3 light_dir = normalize(vec3(2.0, 2.0, -1.0));\n    vec3 view_dir = -normalize(vec3(uv, 1.0));\n    return vec4(col + 0.25 * pow(specular(light_dir, view_dir, n), 16.0), l);   \n}\n\nvec4 getOrbs(vec2 uv)\n{\n    const float smoothness = 0.75;\n    const float morphing = .5;\n    const float blending = 0.4;\n    \n    const float total_orbs = 4.0;\n    const float denom = 1.0 / total_orbs;\n    const float denom2 = 1.0 / (total_orbs - 1.0);\n    \n    vec2 o1off = uv * 1.2 - vec2(1.5, 2.5);\n    vec2 o2off = uv * 0.5 - vec2(-1.0, 0.2);\n    vec2 o3off = uv * 1.0 - vec2(2.5, 0);\n    vec2 o4off = uv * 1.3 - vec2(0.5, -2.5);\n    \n    vec4 o1c1 = getColor(o1off, vec3(1.0, 0.4, 0.7), 876.281);\n    vec4 o1c2 = getColor(o1off, vec3(0.7, 1.0, 0.7), 692.973);\n    vec4 o1c3 = getColor(o1off, vec3(1.0, 0.3, 0.6), 125.575);\n    \n    vec4 o2c1 = getColor(o2off, vec3(1.0, 0.55, 0.8), 8793.101);\n    vec4 o2c2 = getColor(o2off, vec3(0.2, 0.70, 1.00), 3789.79);\n    vec4 o2c3 = getColor(o2off, vec3(0.1, 0.60, 1.00), 2069.734);\n    \n    vec4 o3c1 = getColor(o3off, vec3(1.0, 0.5, 0.5), 4603.639);\n    vec4 o3c2 = getColor(o3off, vec3(0.8, 0.5, 1.0), 9222.128);\n    vec4 o3c3 = getColor(o3off, vec3(1.0, 0.7, 0.8), 1578.327);\n    \n    vec4 o4c1 = getColor(o4off, vec3(1.0, 0.5, 0.5), 7547.234);\n    vec4 o4c2 = getColor(o4off, vec3(1.0, 0.5, 0.9), 6827.066);\n    vec4 o4c3 = getColor(o4off, vec3(1.0, 0.5, 0.8), 9565.631);\n    \n    float i1 = smin(o4c1.w, smin(o3c1.w, smin(o2c1.w, o1c1.w, morphing), morphing), morphing);\n    float i2 = smin(o4c2.w, smin(o3c2.w, smin(o2c2.w, o1c2.w, morphing), morphing), morphing);\n    float i3 = smin(o4c3.w, smin(o3c3.w, smin(o2c3.w, o1c3.w, morphing), morphing), morphing);\n    \n    float s1 = smoothstep(1.0 + smoothness, 1.0 - smoothness, i1);\n    float s2 = smoothstep(1.0 + smoothness, 1.0 - smoothness, i2);\n    float s3 = smoothstep(1.0 + smoothness, 1.0 - smoothness, i3);\n    \n    vec3 c1 = s1 * (\n    o1c1.rgb * (denom + denom * (denom2 * (o2c1.w + o3c1.w + o4c1.w) - o1c1.w)) + \n    o2c1.rgb * (denom + denom * (denom2 * (o1c1.w + o3c1.w + o4c1.w) - o2c1.w)) + \n    o3c1.rgb * (denom + denom * (denom2 * (o1c1.w + o2c1.w + o4c1.w) - o3c1.w)) +\n    o4c1.rgb * (denom + denom * (denom2 * (o1c1.w + o2c1.w + o3c1.w) - o4c1.w))\n    );\n    \n    vec3 c2 = s2 * (\n    o1c2.rgb * (denom + denom * (denom2 * (o2c2.w + o3c2.w + o4c2.w) - o1c2.w)) + \n    o2c2.rgb * (denom + denom * (denom2 * (o1c2.w + o3c2.w + o4c2.w) - o2c2.w)) + \n    o3c2.rgb * (denom + denom * (denom2 * (o1c2.w + o2c2.w + o4c2.w) - o3c2.w)) +\n    o4c2.rgb * (denom + denom * (denom2 * (o1c2.w + o2c2.w + o3c2.w) - o4c2.w))\n    );\n    \n    vec3 c3 = s3 * (\n    o1c3.rgb * (denom + denom * (denom2 * (o2c3.w + o3c3.w + o4c3.w) - o1c3.w)) + \n    o2c3.rgb * (denom + denom * (denom2 * (o1c3.w + o3c3.w + o4c3.w) - o2c3.w)) + \n    o3c3.rgb * (denom + denom * (denom2 * (o1c3.w + o2c3.w + o4c3.w) - o3c3.w)) +\n    o4c3.rgb * (denom + denom * (denom2 * (o1c3.w + o2c3.w + o3c3.w) - o4c3.w))\n    );\n    \n    vec3 col = mix(c1, c2, smin2(i1, i2, blending).y);\n    col = mix(col, c3, smin2(smin(i1, i2, blending), i3, blending).y);\n    \n    return vec4(col, min(min(length(o1off.x), min(length(o2off), length(o3off))), length(o4off)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uvo = uv;\n    uv *= 4.0;\n    vec4 o = getOrbs(uv);\n    fragColor = vec4(o.rgb, 1.0);\n    \n    float px = 32.0/iResolution.x;\n    float x = 1.;\n    float cp = 0.;\n    \n    vec2 f = vec2(-5.3, 0.55);\n    float s = 6.0;\n    O_ r_ i_ g_ i_ n_\n    \n    f = vec2(-1.55, 8.25);\n    s = 16.0;\n    I_ n_ t_ r_ o_\n    \n    f = vec2(-2.0, -0.1);\n    s = 16.0;\n    C_ o_ n_ t_ a_ c_ t_\n    \n    float weight = 0.125;\n    float c = clamp(.6 + 16.0 * pow(x * x + 2.0 * x * x * x - 2.0 * x * x * x * x, 1.), 0.0, 1.0);\n    fragColor.rgb = mix(mix(o.rgb, vec3(1), c), o.rgb, smoothstep(weight - px, weight + px, x));\n    //fragColor.rgb = vec3(x);\n    //fragColor.rgb = vec3(o.a);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}