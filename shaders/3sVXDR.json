{
    "Shader": {
        "info": {
            "date": "1573786553",
            "description": "Simple Flame",
            "flags": 0,
            "hasliked": 0,
            "id": "3sVXDR",
            "likes": 6,
            "name": "Simple Flame (sk)",
            "published": 3,
            "tags": [
                "simpleflame"
            ],
            "usePreview": 0,
            "username": "shackle",
            "viewed": 608
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592654\n\nvec2 hash22(vec2 p)\n{\n    p = vec2(dot(p, vec2(127.1, 311.7)),\n        dot(p, vec2(269.5, 183.3)));\n\n    return -1.0 + 2.0 * fract(sin(p) * 43758.5453123);\n}\nfloat simplex_noise(vec2 p)\n{\n    const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n    vec2 i = floor(p + (p.x + p.y) * K1);\n    vec2 a = p - (i - (i.x + i.y) * K2);\n    vec2 o = (a.x < a.y) ? vec2(0.0, 1.0) : vec2(1.0, 0.0);\n    vec2 b = a - o + K2;\n    vec2 c = a - 1.0 + 2.0 * K2;\n    vec3 h = max(0.5 - vec3(dot(a, a), dot(b, b), dot(c, c)), 0.0);\n    vec3 n = h * h * h * h * vec3(dot(a, hash22(i)), dot(b, hash22(i + o)), dot(c, hash22(i + 1.0)));\n\n    return dot(vec3(70.0, 70.0, 70.0), n);\n}\nfloat fbm(vec2 p)\n{\n    float res=0.0;\n    float fre=1.0;\n    float ap=1.0;\n    for(int i=0;i<3;i++)\n    {\n       res+=ap*simplex_noise(p*fre);\n       fre*=1.5;\n       ap*=0.45;\n    }\n    return res;\n}\nfloat lerp(float a, float b, float x)\n{\n    return clamp((x - a) / (b - a), 0.0, 1.0);\n}\n\nvec3 Remap(float r)\n{\n    vec3 color0 = vec3(0.3,0.1,0.1);\n    vec3 color1 = vec3(0.6,0.3,0.3);\n    vec3 color2 = vec3(1.0, 0.6, 0.0);\n    vec3 color3 = vec3(1.0, 0.3, 0.0);\n    float step1 = 0.1;\n    float step2 = step1 + 0.2;\n    float step3 = step2 + 0.3;\n    float f1 = smoothstep(0.0, step1, r);\n    float f2 = smoothstep(step1, step2, r);\n    float f3 = smoothstep(step2, step3, r);\n    float f4 = smoothstep(step3, 1.0, r);\n\n    vec3 res = color0;\n    res += (color1 - color0) * f1;\n    res += (color2 - color1) * f2;\n    res += (color3 - color2) * f3;\n    res += -color3 * f4;\n    return res;\n}\nvec3 Draw(vec2 coord)\n{\n    float time = 8.0 * iTime;\n\n    float r = length(coord);\n\n    float angle = 0.5*atan(coord.y , coord.x)+0.25*PI; //0---0.5PI\n    float trace = r * (1.0 - 0.995 * sin(angle)) * 230.0;\n\n    vec2 c1 = coord * 10.0 + vec2(0.0, -time);\n    trace += 0.1 * smoothstep(0.05, 0.2, coord.y) * fbm(c1);\n\n    vec2 c2 = coord * 5.0 + vec2(0.0, 0.5*-time);\n    float f5 = 1.0 + 0.7 * fbm(c2);\n\n    return Remap(trace) * f5 * smoothstep(-0.05, 0.3, coord.y);\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    vec2 uv=fragCoord/iResolution.xy;\n\n    vec2 coord = uv - vec2(0.5, 0.1);\n    coord.x*=iResolution.x/iResolution.y;\n    \n\n    fragColor=vec4(Draw(coord),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}