{
    "Shader": {
        "info": {
            "date": "1620623136",
            "description": "How good does it get?",
            "flags": 0,
            "hasliked": 0,
            "id": "7djSzK",
            "likes": 15,
            "name": "Distance to Sine (three iters!)",
            "published": 3,
            "tags": [
                "2d",
                "sdf",
                "fast",
                "sine",
                "distance"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 515
        },
        "renderpass": [
            {
                "code": "// See: https://www.desmos.com/calculator/hvqys18zux\n// f: frequency\n// a: amplitude\nfloat sdSine(in vec2 p, in float f, in float a) {\n    f *= 3.14159265359 * a, p /= a; // Modify to handle varying amplitude\n    float r = 3.14159265359 / f, h = 0.5 * r, ff = f * f;\n    p = vec2(mod(p.x + h, r) - h, p.y * sign(r - mod(p.x + h, 2.0 * r))); // Remap\n\n    // Get closest on linear approximation\n    float t = clamp((0.818309886184 * f * p.y + p.x) / (0.669631069826 * ff + 1.0), -h, h);\n\n    // Three iterations of Newton-Raphson\n    for (int n=0; n < 3; n++) {\n        float k = t * f, c = cos(k), s = sin(k);\n        t -= ((s - p.y) * c * f + t - p.x) / ((c * c - s * s + s * p.y) * ff + 1.0);\n    }\n\n    return length(p - vec2(t, sin(t * f))) * a;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float unit = 2.0 / iResolution.y;\n\n    float f = mix(0.125, 8.0, 0.5 + 0.5 * sin(iTime));\n    float a = 0.25 + 0.125 * cos(iTime);\n    float d = sdSine(uv, f, a) * 2.0; // Shrink isolines\n\n    // Nice colors from iq\n    vec3 color = 1.0 - sign(d) * vec3(0.1, 0.4, 0.7);\n\tcolor *= 1.0 - exp(-4.0 * abs(d));\n\tcolor *= 0.8 + 0.2 * cos(140.0 * d);\n\tcolor = mix(color, vec3(1.0), 1.0 - smoothstep(0.0, 0.015, abs(d) * 0.8));\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}