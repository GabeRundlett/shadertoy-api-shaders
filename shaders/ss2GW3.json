{
    "Shader": {
        "info": {
            "date": "1618060111",
            "description": "licenced under love, peace and happyness ✌️",
            "flags": 0,
            "hasliked": 0,
            "id": "ss2GW3",
            "likes": 3,
            "name": "noisey color journey",
            "published": 3,
            "tags": [
                "noise",
                "color",
                "loop",
                "field",
                "multiple"
            ],
            "usePreview": 0,
            "username": "SimonOakey",
            "viewed": 254
        },
        "renderpass": [
            {
                "code": "/*licenced under love, peace and happyness ✌️ */\n\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n \n\n\n //generic rotation formula\nvec2 rot(vec2 uv,float a){\n\treturn vec2(uv.x*cos(a)-uv.y*sin(a),uv.y*cos(a)+uv.x*sin(a));\n}\n\n\n\nvec3 returnGrain(vec2 _uv, float amount){\n\t\n\t float x = (_uv.x + 4.0 ) * (_uv.y + 4.0 ) * (iTime * 10.0);\n\t vec4 grain = vec4(mod((mod(x, 13.0) + 1.0) * (mod(x, 123.0) + 1.0), 0.01)-0.005) *  amount;\n\t return grain.xyz;\n\t\n}\n\n\nfloat rand(vec2 n) { \n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n    vec2 ip = floor(p);\n    vec2 u = fract(p);\n    u = u*u*(3.0-2.0*u);\n\n    float res = mix(\n        mix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n        mix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n    return res*res;\n}\n\nconst mat2 mtx = mat2( 0.80,  0.60, -0.60,  0.80 );\n\nfloat fbm( vec2 p )\n{\n    float f = 0.0;\n/*\n    vec2 p1 = vec2(p.x*.6,p.y*.6 + time*.12);\n    f += 0.500000*noise( p1); p1 = mtx*p1*3.03;\n\t\n   \n\tvec2 p2 = vec2(p.x*1.6 + time*.3 ,p.y*2.6 );\n    f += 0.300000*noise( p2); \n\t\n\t\n\tvec2 p3 = vec2(p.x*3.6 - time*.6 ,p.y*6.6 );\n    f += 0.200000*noise( p3);\n\t\n vec2 p4 = vec2(p.x*13.6 - time*.6 ,p.y*16.6 );\n    f += 0.200000*noise( p4);\n\t*/\n\t\n    \n     //p.x *= texture(iChannel1, p).x*1.2;\n     //p.y *= texture(iChannel1, p).y*1.2;\n    \n\t\n\tfor(int i=0;i<11; i++){\n\n\tvec2 p1 = vec2(p.x*.4*float(i),p.y*.4*float(i));\n\t\t\n\tp1.x *=\tnoise(p1*.5+iTime*.1)*.4;\n\tp1.y *=\tnoise(p*.5-iTime*.1)*.4;\n    \n    \n\t\t\n    \tf += 0.8*noise(p1); p1 = mtx*p1*3.03;\t\n\t\t\n\t\n\t}\n\t\n\n    return f;\n}\n\nfloat pattern( in vec2 p )\n{\n\treturn fbm( p + fbm( p*2.3 + fbm( p*.33 ) ) );\n}\n\n\n\nvec3 hsv2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tfloat _x = iMouse.x;\n\n\tvec2 uv = gl_FragCoord.xy/iResolution.y;\n\t\n\t//uv.x = sin(uv.x*5.);\n\t\n\tuv.x += iResolution.y/iResolution.x;\n\t\n\tuv = rot(uv,iTime*.03);\n\t\n\tfloat shade = pattern(uv);\n\t\n\t\n\t\n\tvec3 col = vec3(\n\t\tsin(shade*.91+ iTime*.01)*1.75+.5 ,\n\t\tcos(shade*3.+ iTime*.13)*.75+.5 ,\n\t\tcos(shade*13.+ iTime*.13)*.5+.6 \n\t\t\t//shade*.7+.4\n\t);\n\t\n\tcol = hsv2rgb(col);\n\t\n\tcol += returnGrain(uv,9.);\n\t\n\tfragColor = vec4( col, 1.0 );\n\n}\n\n\n\n\n ",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}