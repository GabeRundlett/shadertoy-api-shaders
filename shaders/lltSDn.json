{
    "Shader": {
        "info": {
            "date": "1479094720",
            "description": "The hyperboloid of one sheet is a doubly-ruled surface: for every point on it, there are two different straight lines that pass through it.",
            "flags": 0,
            "hasliked": 0,
            "id": "lltSDn",
            "likes": 17,
            "name": "Hyperboloid",
            "published": 3,
            "tags": [
                "2d",
                "hyperboloid"
            ],
            "usePreview": 0,
            "username": "FreeFull",
            "viewed": 856
        },
        "renderpass": [
            {
                "code": "#define NUM_LINES 30\n\nconst float tau = 8.0*atan(1.0);\n\nfloat bump(float d) {\n    return 1.0/(1.0 + sqrt(d));\n}\n\nmat2 rot(float angle) {\n    float s = sin(angle), c = cos(angle);\n    return mat2(c,-s,\n                s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 col = vec3(0);\n    for(int i = 0; i < NUM_LINES; i++) {\n        float ifl = float(i) / float(NUM_LINES);\n        float angle = sin(ifl*tau + iTime/10.0)/1.3;\n        float offset = cos(ifl*tau + iTime/10.0);\n        float b = bump(abs((uv*rot(angle)).x + offset/2.0)*1.3);\n    \tcol += smoothstep(0.70, 1.0, b);\n    }\n    col *= 0.6;\n    col *= vec3(1.0, 0.75, 0.5);\n\tfragColor = vec4(vec3(col),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}