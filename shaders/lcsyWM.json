{
    "Shader": {
        "info": {
            "date": "1721207406",
            "description": "a simple loop animation",
            "flags": 0,
            "hasliked": 0,
            "id": "lcsyWM",
            "likes": 14,
            "name": "grid loop circle square",
            "published": 3,
            "tags": [
                "grid",
                "circle",
                "square",
                "loop"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 161
        },
        "renderpass": [
            {
                "code": "// Fork of \"triangle thing 2\" by jonasfrey. https://shadertoy.com/view/4cXcWN\n// 2024-07-17 08:10:00\n\nfloat f_n_sdf_rectangle( in vec2 o_p, in vec2 o_sidelength )\n{\n    vec2 o_d = abs(o_p)-o_sidelength;\n    return length(max(o_d,0.0)) + min(max(o_d.x,o_d.y),0.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 o_trn = ( fragCoord.xy - iResolution.xy*.5 ) / iResolution.yy;\n    o_trn*=1.5;\n    float n = (length(o_trn)-.5)/.5;\n    float nt = iTime *0.5;\n    vec2 o_scl = vec2(6., 6.);\n    vec2 o_scl_one = 1./ o_scl; \n    \n    float n_its = o_scl.x*o_scl.y;\n    float n_it_one_nor = 1./n_its;\n    float n_tau = 6.2831;\n    vec4 o_col = vec4(0.);\n    float n_min = 1.;\n    for(float n_it_nor = 0.; n_it_nor<1.; n_it_nor+=n_it_one_nor){\n    \n        float n_it = floor(n_it_nor*n_its);\n        float n_radians = n_tau * n_it_nor;\n        vec2 o_p = o_trn-vec2(\n            fract(n_it_nor*o_scl.x), \n            floor(n_it_nor*o_scl.x)*(1./o_scl.x)\n        )+.5;\n        \n        float nl = 1.-clamp(fract(n_it_nor+sin(iTime*0.5))*12.,0.,1.);\n        nl = sin(nl*n_tau/2.);\n        float n_size = .5+nl;\n        float n = f_n_sdf_rectangle(o_p, (1./o_scl/2.).yx*n_size);\n        float nc = length(o_p)-max(o_scl_one.x, o_scl_one.y)*.5*n_size;\n        n = nl*n + (1.-nl)*nc;\n        n /= n_size;\n        n_min = min(n_min, n);\n        //n = (n-n_size)/n_size;// signed distance field\n        n = 1.-pow(abs(n), 1./12.);\n        n = clamp(n, 0., 1.);\n        vec4 o_c = vec4(n_it_nor, 1.-n_it_nor, fract(n_it_nor+.5), 1.);\n        o_col += o_c*n;\n        //o_col += vec4(n);\n    }\n    float n2 = 1.-pow(abs(n_min), 1./9.);\n    fragColor = o_col*n2*2.;\n    //fragColor = sqrt(fragColor);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}