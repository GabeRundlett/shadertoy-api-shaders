{
    "Shader": {
        "info": {
            "date": "1578075262",
            "description": "Just a random thing I thought about",
            "flags": 0,
            "hasliked": 0,
            "id": "tlGGRR",
            "likes": 8,
            "name": "Truchet Noise",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "michael0884",
            "viewed": 402
        },
        "renderpass": [
            {
                "code": "\n//a rainbow colormap from Matlab\nfloat interpolate(float val, float y0, float x0, float y1, float x1) \n{\n    return (val-x0)*(y1-y0)/(x1-x0) + y0;\n}\n\nfloat base(float val) \n{\n    if ( val <= -0.75 ) return 0.0;\n    else if ( val <= -0.25 ) return interpolate( val, 0.0, -0.75, 1.0, -0.25 );\n    else if ( val <= 0.25 ) return 1.0;\n    else if ( val <= 0.75 ) return interpolate( val, 1.0, 0.25, 0.0, 0.75 );\n    else return 0.0;\n}\n\nvec3 jet_colormap(float v)\n{\n    return vec3(base(v - 0.5),base(v),base(v + 0.5));\n}\n\nvec3 jet_range(float v, float a, float b)\n{\n    return jet_colormap(2.*clamp((v-a)/(b-a),0.,1.) - 1.);\n}\n\n\nfloat hash(float p)\n{\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n\nvec3 truchet(vec2 p)\n{\n    float rnd = hash(floor(p.x) + floor(p.y)*1.55463);\n    bool cond = (rnd>0.5)?(mod(p.x,1.)+mod(p.y,1.)>1.):(mod(p.x,1.)+mod(p.y,1.)<1.);\n    return cond?jet_colormap(0.8*sin(5.*((1.-rnd)*p.x+rnd*p.y))):vec3(1.);\n}\n\nvec3 truchet_noise(vec2 p)\n{\n    float scale =1.;\n    float amp = 1.;\n    float norm = 0.;\n    vec3 col = vec3(0);\n    for(int i = 0; i < 5; i++)\n    {\n        vec3 trc = truchet(scale*p+2.*pow(scale,0.3)*vec2(sin(iTime),cos(iTime)));\n        col += amp*trc;\n        norm += amp;\n        if(length(trc) > 1.5) break; //if white\n        scale*= 1.7;\n        amp*=0.55;\n    }\n    return col/norm;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.x;\n\n    // Output to screen\n    fragColor = vec4(1.05*truchet_noise(10.*uv),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}