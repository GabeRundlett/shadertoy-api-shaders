{
    "Shader": {
        "info": {
            "date": "1514608878",
            "description": "Play with the sphere nigga",
            "flags": 0,
            "hasliked": 0,
            "id": "Xt2fzh",
            "likes": 1,
            "name": "SphereNoiser",
            "published": 3,
            "tags": [
                "raytracing",
                "pseudostochasticnumbers"
            ],
            "usePreview": 0,
            "username": "felipunkerito",
            "viewed": 630
        },
        "renderpass": [
            {
                "code": "// hash function by iq\n\nfloat hash(vec2 p)  // replace this by something better\n{\n    p  = 50.0*fract( p*0.3183099 + vec2(0.71,0.113));\n    return -1.0+2.0*fract( p.x*p.y*(p.x+p.y) );\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\n\nvec3 map( vec3 p )\n{\n\n\tvec3 dl = vec3( length( p ) - 1.5 );\n    vec3 dlOne = vec3( p.y + 2.0 );\n    if( dl.y < dlOne.y ) dlOne = dl;\n    return dlOne;\n\n}\n\nvec3 rayIntersect( vec3 ro, vec3 rd )\n{\n\n    vec3 t = vec3( 0.0, 0.0, 0.0);\n    int maxiter = 64;\n    \n    for(int i = 0; i < maxiter; ++i )\n    {\n    \n    \tvec3 hit = ro + rd * t;\n        vec3 d = map(hit);\n        t += d * vec3( 0.5 );\n    \n    }\n    \n    return t;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y; \n    \n    vec2 mouser = iMouse.xy / iResolution.y; \n    \n    vec3 ro = vec3( 0.0, 0.0, 2.5 );\n    vec3 rd = normalize( vec3( uv, -1.0 ) );\n    \n    float f = 0.0;\n    \n    float wav = texture(iChannel0, vec2( 0.0, 0.25 )).x;\n    wav *= 0.3;\n    float fft = texture(iChannel0, vec2( 0.0, 0.75 )).x;\n    fft *= 0.3;\n    \n    mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n    uv += iTime * 0.1; \n\tf  = 0.5000*noise( uv ); uv = m*uv;\n\tf += 0.2500*noise( uv ); uv = m*uv;\n\tf += 0.1250*noise( uv ); uv = m*uv;\n\tf += wav * 0.1 + 0.0625*noise( uv ); uv = m*uv;\n    fft += f * 0.4738*noise( uv ); uv = m*uv;\n    \n    vec3 hitter = vec3( rayIntersect( ro, rd ) );\n    hitter = 1.0 / (2.0 * hitter * hitter * 0.5 );\n    //hitter = smoothstep( hitter, 0.1, 1.2 );\n    vec3 hit = vec3( hitter * f ) * vec3( sin( fft * iMouse.x), f, cos( fft * iMouse.y * fft )  );\n    hit *= vec3(5.0);\n    \n    \n\tfragColor = vec4( hit, 1.0 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 35,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}