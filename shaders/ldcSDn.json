{
    "Shader": {
        "info": {
            "date": "1458824375",
            "description": "inspired by: [url=https://www.youtube.com/watch?v=wycjnCCgUes]Tame Impala - Feels Like We Only Go Backwards[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "ldcSDn",
            "likes": 19,
            "name": "Feels Like We Only Go Backwards",
            "published": 3,
            "tags": [
                "shapes",
                "tube",
                "minimal"
            ],
            "usePreview": 0,
            "username": "s23b",
            "viewed": 815
        },
        "renderpass": [
            {
                "code": "#define TAU 6.28318530718\n\nvec4 blend(vec4 c1, vec4 c2) {\n    return vec4(mix(c1.rgb, c2.rgb, c2.a), max(c1.a, c2.a)); \n}\n\n// antialiasing trick as suggested by Fabrice\nfloat aa(float value, float degree) {\n    return clamp(20. * degree * degree * sin((value + 1.) * TAU / 2.), 0., 1.);\n}\n\nvec4 shape(vec2 uv, float offset, float points) {\n    uv.y = -uv.y;\n    float l = length(uv);\n    vec2 tube = vec2(\n        fract((atan(uv.x, uv.y) / TAU + .5) * points),\n        1. / l);\n    tube.y /= cos((tube.x - .5) * TAU / points);\n    tube.y += offset;\n    float dist = (tube.y - offset) / 10.;\n\treturn vec4(vec3(aa(tube.y * 3., l) + smoothstep(0.1, .8,dist)), float(mod(tube.y, 20.) < 9.));\n}\n\nvec4 tube(vec2 uv, float offset) {\n    float l = length(uv);\n\treturn vec4(vec3(aa(4. / l + offset, l) + 1. - smoothstep(0.2, .5, l)), 1);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 R = iResolution.xy,\n\tuv = (2.*fragCoord - R) / R.y;\n    \n    float offset = iTime - 10.;\n    \n    // hash the number of points in the shape of the next sequence\n    float numPoints = 3. + floor(mod(sin(floor((offset + 10.) / 20.) * 123.456) * 123., 4.));\n    \n    vec4 c0 = tube(uv, offset * 2.);\n    vec4 c1 = shape(uv, -offset, numPoints);\n    \n    fragColor = blend(c0, c1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}