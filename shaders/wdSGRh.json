{
    "Shader": {
        "info": {
            "date": "1548105350",
            "description": "on OpenGL, with special values in first 2 components of a const uvec3,\nif transformed to a vec3 by applying uintBitsToFloat\nthere is a side effect on the following components of the vector (here: special value -0 instead of 0).\nBottom: no bug it not const",
            "flags": 0,
            "hasliked": 0,
            "id": "wdSGRh",
            "likes": 1,
            "name": "GLSL bug uintBitsToFloat 4b",
            "published": 3,
            "tags": [
                "glsl",
                "bug"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 403
        },
        "renderpass": [
            {
                "code": "#  define F   0xFFFF0000U    // happens to map to one of the NaN values\n#  define S   0x80000000U    // happens to map to special value -0\n                             // https://www.h-schmidt.net/FloatConverter/IEEE754.html\nuvec3 A = uvec3( F, S, 0U );\n\n#define Z  uint(min(0.,U.x)) // add to expr to prevent const\n                      \nvoid mainImage( out vec4 O, vec2 U )\n{\n    U = 2.*U/iResolution.xy;\n   \n#if 1    \n    // this case doesn't work\n    vec3 v = \n        U.y>1.? vec3( uintBitsToFloat(A.x), uintBitsToFloat(A.y  ), uintBitsToFloat(A.z))\n              : vec3( uintBitsToFloat(A.x), uintBitsToFloat(A.y+Z), uintBitsToFloat(A.z));\n \n      O = vec4( 1./v[ 2+ int(min(0.,U.x)) ] > 0. ); // display. 1/-0 = -infinity\n  //  O = vec4( floatBitsToUint( v[ 2+ int(min(0.,U.x)) ]) == 0U ); // display\n#else \n    // this case works\n    uvec3 V =   U.y>1. ? uvec3( floatBitsToUint(uintBitsToFloat(F)), floatBitsToUint(uintBitsToFloat(S  )), 0 )\n                       : uvec3( floatBitsToUint(uintBitsToFloat(F)), floatBitsToUint(uintBitsToFloat(S+Z)), 0 );\n    O = vec4(V[ 2+ int(min(0.,U.x)) ] == 0U ); // display\n#endif\n\n\n    if ( fract(U.y) < 4./iResolution.y ) O = vec4(1,0,0,0); // red separator\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}