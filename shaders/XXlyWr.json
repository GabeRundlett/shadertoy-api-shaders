{
    "Shader": {
        "info": {
            "date": "1726077904",
            "description": "Shadertoy implementation of growing Neural CA https://distill.pub/2020/growing-ca/\nI'm surprised nobody did a Shadertoy port of this before.\nTrained using my own library TensorFrost: https://github.com/MichaelMoroz/TensorFrost/tree/main/examples/ML/NCA",
            "flags": 48,
            "hasliked": 0,
            "id": "XXlyWr",
            "likes": 34,
            "name": "Neural CA - Lizard",
            "published": 3,
            "tags": [
                "ca",
                "cellularautomaton",
                "neural",
                "nca"
            ],
            "usePreview": 0,
            "username": "michael0884",
            "viewed": 506
        },
        "renderpass": [
            {
                "code": "//Shadertoy implementation of Growing (and regenerating) Neural Cellular Automatons\n//https://distill.pub/2020/growing-ca/\n\n//Given that there were already neural networks here, I'm surprised nobody made a port of this. \n//Tho I guess its not as obvious how to put 16(12 here) channels into a single buffer here.\n\n//I trained the model from scratch using my own library TensorFrost.\n//https://github.com/MichaelMoroz/TensorFrost/tree/main/examples/ML/NCA\n\n//This version is different from original NCAs in 2 ways, I've added a Laplacian kernel on top of the Sobel\n//kernels, this reduces checkerboard artifacts significantly (as now it can just learn diffusion equations)\n//Also the state was trained while quantized to 9 bits, as well as clamped between -1 1, \n//and with added constant noise\n//I also limited the neuron count to 64 so that the compile times are reasonable. 128 works too.\n\n//Press Space to change between Draw and Erase mode\n\n//MIT License\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    fragColor = texture(ch0, fragCoord*ZOOM/R); //zoomed in cause lizards are very tiny\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define ch0 iChannel0\n#define ch1 iChannel1\n#define ch2 iChannel2\n#define ch3 iChannel3\n\n#define R iResolution.xy\n\n#define LOAD(ch, pos) texelFetch(ch, ivec2(pos), 0)\n\n#define FIRE_RATE 1.0\n#define NOISE 0.005\n#define TIME_STEP 0.75\n//changing the space step works, but is significantly less stable than time step\n#define SPACE_STEP 1.0\n#define ZOOM 0.4\n\nuint packvec3(vec3 v)\n{\n    //get the exponent\n    float maxv = max(abs(v.x), max(abs(v.y), abs(v.z)));\n    int exp = clamp(int(ceil(log2(maxv))), -15, 15);\n    float scale = exp2(-float(exp));\n    uvec3 sv = uvec3(round(clamp(v*scale, -1.0, 1.0) * 255.0) + 255.0);\n    uint packed = uint(exp + 15) | (sv.x << 5) | (sv.y << 14) | (sv.z << 23);\n    return packed;\n}\n\nvec3 unpackvec3(uint packed)\n{\n    int exp = int(packed & 0x1Fu) - 15;\n    vec3 sv = vec3((packed >> 5) & 0x1FFu, (packed >> 14) & 0x1FFu, (packed >> 23) & 0x1FFu);\n    vec3 v = (sv - 255.0) / 255.0;\n    v *= exp2(float(exp));\n    return v;\n}\n\n//the most you can store with reasonable quality in 1 pixel\n//tho I suppose I could bring down the train quantization to 8 bit for 16 components...\nstruct vec12\n{\n    vec4 a;\n    vec4 b;\n    vec4 c;\n};\n\nvec12 LoadState(sampler2D ch, ivec2 pos)\n{\n    uvec4 data = floatBitsToUint(LOAD(ch, pos));\n    vec3 c0 = unpackvec3(data.x);\n    vec3 c1 = unpackvec3(data.y);\n    vec3 c2 = unpackvec3(data.z);\n    vec3 c3 = unpackvec3(data.w);\n    vec12 ca;\n    ca.a = vec4(c0.x, c1.x, c2.x, c3.x);\n    ca.b = vec4(c0.y, c1.y, c2.y, c3.y);\n    ca.c = vec4(c0.z, c1.z, c2.z, c3.z);\n    return ca;\n}\n\nvec4 StoreState(vec12 ca)\n{\n    uint packed0 = packvec3(vec3(ca.a.x, ca.b.x, ca.c.x));\n    uint packed1 = packvec3(vec3(ca.a.y, ca.b.y, ca.c.y));\n    uint packed2 = packvec3(vec3(ca.a.z, ca.b.z, ca.c.z));\n    uint packed3 = packvec3(vec3(ca.a.w, ca.b.w, ca.c.w));\n    return uintBitsToFloat(uvec4(packed0, packed1, packed2, packed3));\n}\n\nvec12 add(vec12 a, vec12 b)\n{\n    vec12 c;\n    c.a = a.a + b.a;\n    c.b = a.b + b.b;\n    c.c = a.c + b.c;\n    return c;\n}\n\nvec12 sub(vec12 a, vec12 b)\n{\n    vec12 c;\n    c.a = a.a - b.a;\n    c.b = a.b - b.b;\n    c.c = a.c - b.c;\n    return c;\n}\n\nvec12 mul(vec12 a, vec12 b)\n{\n    vec12 c;\n    c.a = a.a * b.a;\n    c.b = a.b * b.b;\n    c.c = a.c * b.c;\n    return c;\n}\n\nvec12 div(vec12 a, vec12 b)\n{\n    vec12 c;\n    c.a = a.a / b.a;\n    c.b = a.b / b.b;\n    c.c = a.c / b.c;\n    return c;\n}\n\nvec12 add(vec12 a, float b)\n{\n    vec12 c;\n    c.a = a.a + b;\n    c.b = a.b + b;\n    c.c = a.c + b;\n    return c;\n}\n\nvec12 sub(vec12 a, float b)\n{\n    vec12 c;\n    c.a = a.a - b;\n    c.b = a.b - b;\n    c.c = a.c - b;\n    return c;\n}\n\nvec12 mul(vec12 a, float b)\n{\n    vec12 c;\n    c.a = a.a * b;\n    c.b = a.b * b;\n    c.c = a.c * b;\n    return c;\n}\n\nvec12 div(vec12 a, float b)\n{\n    vec12 c;\n    c.a = a.a / b;\n    c.b = a.b / b;\n    c.c = a.c / b;\n    return c;\n}\n\nvec12 clamp12(vec12 a, float minVal, float maxVal)\n{\n    vec12 c;\n    c.a = clamp(a.a, minVal, maxVal);\n    c.b = clamp(a.b, minVal, maxVal);\n    c.c = clamp(a.c, minVal, maxVal);\n    return c;\n}\n\n\nvec4 LeakyReLU(vec4 X) { return max(X, 0.01*X); } \n\nvoid NCA(vec4 in0, vec4 in1, vec4 in2, vec4 in3, vec4 in4, vec4 in5, vec4 in6, vec4 in7, vec4 in8, vec4 in9, vec4 in10, vec4 in11, out vec4 out0, out vec4 out1, out vec4 out2) {\n//first layer\nvec4 h0_0=LeakyReLU(mat4(-.4694,-.1491,-.04974,-.1407,-.3457,-.2759,-.1307,-.2481,-.2784,-.3182,.031,-.1216,-.1464,.06688,-.1042,-.3824)*in0+\n   mat4(-.4497,.08516,.2484,-.06201,.08491,.05685,.02353,.2883,-.4666,-.3336,-.1484,-.4189,.2193,.1887,.09003,.3292)*in1+\n   mat4(-.2075,-.05128,-.4402,-.3158,-.2548,.06504,-.09409,-.2589,-.001399,-.5547,.2626,.245,.1669,.2693,-.2132,.2284)*in2+\n   mat4(-.3074,-.02865,-.1125,.1311,.163,-.1692,-.07875,.08057,.001099,-.02419,-.06281,-.1217,-.1926,.001907,.1501,-.1263)*in3+\n   mat4(-.1796,-.2348,.1227,.05672,-.1708,-.004356,-.00253,.0626,.07205,-.144,-.1129,.04176,.06199,-.08347,-.07558,-.03397)*in4+\n   mat4(.204,.01481,-.01934,.042,-.1969,-.05729,-.09696,-.1766,-.0005065,-.1206,-.05924,-.07778,-.01704,-.1004,-.2652,-.2542)*in5+\n   mat4(-.1037,-.06717,.02768,-.04337,.06686,.07716,.1402,-.1777,.07533,.02591,-.06593,-.01848,.1664,-.02606,-.06108,-.1298)*in6+\n   mat4(.0116,.2207,-.2132,-.09839,.0585,.06747,-.1543,.06383,.06828,-.1469,.1068,-.07901,.1341,.06922,.1361,.09745)*in7+\n   mat4(.01008,.06311,-.06199,.182,-.04937,-.01948,-.2188,-.1467,-.005945,-.01375,.254,.03411,-.07793,.08052,.1351,.1962)*in8+\n   mat4(.02882,-.1208,.3228,.1501,-.206,-.1858,-.14,-.1932,.185,.3252,-.1129,-.0587,.1438,.001745,.2023,.1989)*in9+\n   mat4(.1712,.05442,.1311,.08939,.1053,.05674,.05998,.0008327,-.02973,.02404,-.01079,-.09574,.01966,.01166,-.03117,.04253)*in10+\n   mat4(-.03474,.08007,.01658,-.01673,.1144,-.09219,-.1777,.03608,.04428,.06457,.04479,.05125,-.08243,-.05581,-.08608,-.113)*in11+\n   vec4(-.02876,.02546,-.06243,-.008957));\nvec4 h0_1=LeakyReLU(mat4(.02369,-.037,.4646,-.2016,.1465,-.3837,-.3201,-.1802,-.2929,-.2575,-.04343,-.3379,.1385,.1227,-.01498,-.2791)*in0+\n   mat4(-.4155,.09664,-.1002,-.5915,.1368,.04559,-.1405,.3441,-.03524,.0719,-.1067,-.3482,-.00813,.06722,.1272,.2993)*in1+\n   mat4(-.07812,-.3183,.1801,-.5419,.1148,-.2328,-.1563,-.2651,.5321,-.01679,.4816,-.4232,-.08907,-.2365,.3145,.154)*in2+\n   mat4(.03775,-.2528,.3273,.08946,-.07438,-.0234,-.007062,.2223,.1163,-.2619,-.1135,-.09784,.1054,-.03746,.1021,.0632)*in3+\n   mat4(.03923,-.1743,.1947,-.08312,.1938,-.13,.2143,-.1588,-.04718,-.0166,.04661,.08658,.04059,-.1259,-.07715,-.1299)*in4+\n   mat4(.03412,.04965,-.1781,-.08192,-.01882,.01627,.04953,-.1175,.02311,-.1268,-.06849,-.2548,.08298,-.04479,-.04404,.05164)*in5+\n   mat4(-.1518,.3187,-.3831,.1136,-.04196,-.1705,-.008369,-.01224,.1451,.167,.02472,.08153,.1514,.09477,-.04754,-.1777)*in6+\n   mat4(.01222,.2159,-.2032,-.1267,-.01268,-.2966,-.07822,-.1375,.1871,.06463,-.002453,.01665,.1352,.1946,-.08218,.1414)*in7+\n   mat4(-.04506,-.1225,.03788,.09945,.2686,.04022,-.04876,.07836,-.05696,.2481,-.002812,.1415,.03347,-.1191,.04407,-.129)*in8+\n   mat4(-.02711,.1546,-.2311,-.00624,-.07267,-.03591,.06166,-.1499,.2307,-.1663,-.07816,-.07913,-.003921,.1568,.08212,.07424)*in9+\n   mat4(.008645,.1655,.08376,.00893,.06814,-.05538,.1876,.007269,.08088,-.02531,.09476,.1248,-.00485,.102,-.1219,.0455)*in10+\n   mat4(.04894,.001525,-.1308,-.007511,.1501,-.04493,-.06246,-.04955,-.1396,-.04443,.03061,-.07835,-.0843,-.05619,-.1032,.02967)*in11+\n   vec4(.01992,-.128,.02451,.03475));\nvec4 h0_2=LeakyReLU(mat4(-.1162,-.4231,.005995,-.2732,-.3238,-.176,-.4293,.1105,-.2344,-.5194,-.1654,-.1196,.1067,-.1968,-.218,-.2076)*in0+\n   mat4(.1456,-.4294,-.6414,.1286,-.199,.2306,.3442,-.4088,-.121,-.1786,-.4593,-.03819,.1756,.5097,.5497,-.06227)*in1+\n   mat4(-.1189,-.7641,-.6728,-.128,.01288,-.267,-.274,-.4112,.07371,.2052,.1861,.1085,.1655,-.1006,.07588,.03925)*in2+\n   mat4(-.0462,.1321,-.04156,.04645,.1886,-.1519,.0766,-.2121,-.02985,-.002394,.1305,.02697,-.1399,.1046,-.2178,.09913)*in3+\n   mat4(-.2303,.1207,-.1936,.13,.07792,-.1487,-.091,-.0542,.3009,.0399,.1063,-.08861,-.04083,.1622,-.1699,.04574)*in4+\n   mat4(.03762,.00194,-.1603,.01628,-.06439,-.0761,.1005,-.09567,.2431,.0854,-.0564,-.1335,-.04409,-.0004547,-.01883,-.1356)*in5+\n   mat4(-.05213,-.1623,-.1029,.4654,-.2982,-.1412,-.205,-.00515,.113,-.1244,-.05912,.1343,.08847,.1281,.05151,.1604)*in6+\n   mat4(.00402,-.1353,.1298,-.01047,-.1497,.04523,-.09194,-.02998,.09816,.07772,.006007,.06348,-.1991,-.1377,-.07877,.09822)*in7+\n   mat4(-.1644,-.0661,.006602,-.09134,-.0007366,-.1054,-.2588,.09903,-.02277,-.1749,-.06931,.1115,.1119,.06228,.2716,-.09508)*in8+\n   mat4(.131,-.003696,-.02695,.06833,.2539,.1416,.04615,-.06349,.09131,-.05977,.09677,-.09644,-.1027,-.2942,.1791,.1052)*in9+\n   mat4(.006378,-.0478,.05555,.07847,-.1001,-.02213,.04546,.06765,-.05054,.003249,.09229,.04427,-.07579,.01478,.03996,.04595)*in10+\n   mat4(-.07517,-.03673,-.08105,.2221,-.04454,-.01997,-.03857,.155,-.02683,-.01208,.02128,.03715,-.09561,.04514,-.0899,.04325)*in11+\n   vec4(-.1983,-.2959,.1586,-.002781));\nvec4 h0_3=LeakyReLU(mat4(-.3348,-.3107,-.1153,-.4173,-.4008,-.1729,-.04108,-.283,.09514,-.203,-.3403,-.1057,-.05844,-.3443,-.3196,-.3111)*in0+\n   mat4(-.1093,-.2571,-.1555,-.01884,-.5282,.3104,-.2981,-.04755,-.2986,-.1182,-.1527,-.1359,.4146,.4123,.3196,.2809)*in1+\n   mat4(-.804,-.196,-.2054,-.6854,.0008948,-.2789,-.169,.08049,.03493,-.339,.02108,.08905,.1937,.18,-.1452,.4678)*in2+\n   mat4(.1552,.0665,-.1925,.1228,.01542,-.1748,.03529,-.1199,.1018,-.2932,-.08054,-.001566,-.1228,-.2116,.03376,.2305)*in3+\n   mat4(-.04596,-.364,.03865,.03348,.146,-.2772,.01079,-.033,.01745,.1239,.0402,-.03014,.06218,-.0522,-.1077,-.1473)*in4+\n   mat4(.1601,-.1224,-.2145,-.1503,.05115,-.1178,-.1767,.06258,-.1398,.2448,.1746,.1439,.1062,-.02217,-.05402,.01444)*in5+\n   mat4(-.4603,-.1533,.01022,.0638,.1121,.2171,.1977,.01584,.04242,-.03993,-.05189,.1358,-.07461,-.1048,.05799,.1248)*in6+\n   mat4(-.02233,.1934,.1815,.07322,-.3341,-.1677,-.121,.008048,.1956,.006609,.03972,-.0231,-.01629,-.06193,-.0325,.07564)*in7+\n   mat4(-.08594,.03265,.03679,-.0222,.1465,.07115,-.2029,-.1721,.155,-.1429,-.2578,.01051,-.03375,.06735,-.06638,.1536)*in8+\n   mat4(-.2453,-.0082,.2605,.3715,.03496,.07898,.2491,-.1847,-.1342,-.02799,.07676,-.04931,.1344,.1059,-.1085,.1491)*in9+\n   mat4(.07888,.07167,-.06084,.05103,-.1207,.02102,-.129,.003291,-.08466,-.1389,.0186,-.04736,.08694,-.01636,-.04403,.09925)*in10+\n   mat4(-.01708,.009183,-.05567,-.01895,.08885,.05032,-.04824,.06378,.02664,-.0967,-.1191,.02577,-.01627,.1083,-.00704,-.06345)*in11+\n   vec4(-.1146,-.2482,-.205,-.08453));\nvec4 h0_4=LeakyReLU(mat4(-.8535,-.07646,-.3207,-.4473,.1926,-.448,-.2485,-.2097,.7264,-.2801,.1898,-.4419,-.3466,-.01976,-.1179,-.05893)*in0+\n   mat4(.2354,.09885,-.04621,-.2203,-.122,.2054,-.2435,-.1209,-.1128,-.04841,-.2165,-.3943,-.06126,.2712,.1921,.5969)*in1+\n   mat4(-.03485,-.009411,.1082,-.6284,-.07529,-.1164,.1055,-.2725,.1788,.05551,-.1265,-.1706,-.009219,.1958,-.08446,.03364)*in2+\n   mat4(.005958,.1934,.3222,-.05333,.03267,.08688,.1017,-.0225,.07128,-.2017,-.1347,-.1683,-.0545,.211,.04289,-.01776)*in3+\n   mat4(.04379,-.005615,.1405,.07615,-.09824,-.2214,-.1823,-.1747,.0007193,.1423,.1208,.01546,-.02234,-.01552,.136,.08353)*in4+\n   mat4(.02821,.009568,-.1564,.08715,-.02255,-.2108,-.04386,-.122,-.06107,.1164,.2103,-.07971,-.06127,.117,-.2039,-.06275)*in5+\n   mat4(.09521,.148,.003956,.2672,.09528,.05488,-.2473,.1345,-.2785,.05584,.03064,-.3044,-.01843,.1568,.2609,.2176)*in6+\n   mat4(-.03125,.08093,-.2037,.1416,-.07701,.01598,-.1918,-.1167,-.04831,.02954,.004422,-.1066,.046,-.03265,.24,.0671)*in7+\n   mat4(.04399,.04662,.1641,-.1269,-.001965,.01757,.05091,.1243,-.03795,-.2813,.04362,-.01339,.02571,.1964,.03711,-.1324)*in8+\n   mat4(.04498,.1551,.2653,.1239,-.05966,-.001588,-.1076,.04646,-.3725,-.04868,-.1103,.1379,.1235,.2267,.1946,-.06742)*in9+\n   mat4(.009766,.2344,-.06645,.04565,.02042,.09743,-.05806,-.02545,.04872,-.08355,-.03869,-.02227,.02773,.1504,-.04995,.01843)*in10+\n   mat4(.04348,.1284,-.1006,-.08454,-.05136,.02083,-.04562,-.06188,.03152,.07127,.1192,-.03411,-.04696,-.122,-.07694,-.003035)*in11+\n   vec4(-.04303,-.02067,-.1099,-.1211));\nvec4 h0_5=LeakyReLU(mat4(-.8363,.03238,-.3404,-.3468,-.3523,.01216,-.2325,-.1867,-.1016,-.7596,-.3097,-.3276,.07997,.1477,-.1367,-.2331)*in0+\n   mat4(-.1688,.2086,-.297,-.08655,.4393,-.2246,-.1397,.1507,-.1027,-.1236,-.4261,-.2218,-.1358,.01601,.08679,.3186)*in1+\n   mat4(.2378,.09979,-.305,-.3263,-.1823,.02816,-.3057,-.1321,.5558,.2506,-.02797,-.02087,-.02313,-.2606,.2307,.1926)*in2+\n   mat4(.3169,.3034,.2718,-.4265,.01406,.1084,-.002554,.1728,-.2189,-.1356,-.01838,-.02319,-.1115,-.05889,.03232,-.2802)*in3+\n   mat4(-.07149,.01943,.115,-.2477,-.01685,.004138,.1808,-.04342,-.01371,-.03951,-.1475,.1504,.03363,-.09523,.01957,-.1887)*in4+\n   mat4(.1189,-.08035,-.04937,-.01891,-.06359,.05447,-.006276,-.2105,.08866,-.1136,-.1038,-.07487,.04193,-.02303,-.1308,.2162)*in5+\n   mat4(.04512,.1065,-.0396,.3448,.0327,.03697,-.107,-.06209,-.02775,.08716,-.08838,.02442,.004218,.07666,-.09829,-.2137)*in6+\n   mat4(-.1021,.01469,.1204,-.1038,.2599,-.09395,.1801,-.2837,-.08768,-.04438,.01625,-.03422,-.02044,.03966,.046,.06305)*in7+\n   mat4(.04418,.02307,.03787,.01215,.09108,-.09478,-.04735,.0129,.01515,.1569,.01763,.06752,.1072,.003841,-.06995,-.03617)*in8+\n   mat4(-.04031,.1607,.1426,.3058,-.05095,-.1533,.07176,.2647,-.02854,.4342,.1672,.03716,-.09561,.06498,-.1581,-.1655)*in9+\n   mat4(-.1235,.1106,.007812,.07713,.06538,.1549,-.1209,.02521,.1748,.1105,.02718,-.08072,-.1133,.0851,.02806,.02982)*in10+\n   mat4(.02521,.03511,-.02126,-.001042,.05661,.2632,.07662,.09229,.07479,.06368,.04112,-.006188,-.04623,.04856,.04137,-.004495)*in11+\n   vec4(.05437,.03321,-.1663,-.04049));\nvec4 h0_6=LeakyReLU(mat4(-.1154,-.6143,-.6663,-.5325,-.2842,-.3789,.1365,-.3522,.2009,.01902,.2271,.02351,-.1054,.08668,.1699,-.3586)*in0+\n   mat4(-.4688,.273,-.06328,-.5035,.04739,-.07949,-.1557,.03822,-.06958,.01169,-.1474,-.2455,.226,.1567,-.04158,-.1492)*in1+\n   mat4(.088,.178,.04775,.2028,-.07344,.2798,-.4724,.00178,-.1754,-.005991,-.09513,-.1317,-.04397,.02923,.1528,-.1736)*in2+\n   mat4(-.1899,-.08528,-.1236,-.451,-.0446,.1513,-.03311,.03407,-.1071,-.08604,.09407,-.2039,.1215,-.1568,.06545,-.01469)*in3+\n   mat4(-.1799,-.1837,.1409,-.06492,-.2376,-.1548,-.02911,.0237,-.1689,-.02024,-.06957,-.09901,-.07806,-.03022,.04858,-.1135)*in4+\n   mat4(.02322,.06694,.1498,.02431,.01999,-.1397,-.2374,-.02211,.2147,.2481,.0964,.197,-.0505,-.05335,-1.028e-05,.02883)*in5+\n   mat4(-.07551,-.05558,.211,.1359,.1457,-.1239,-.06588,-.1464,-.1473,.04792,-.02743,-.3181,-.09564,.2101,.04925,.1341)*in6+\n   mat4(.09425,-.08272,-.1258,.09574,.1698,-.1875,.1852,-.1978,.05615,-.02892,.128,.0003336,.143,-.02109,-.006688,-.07904)*in7+\n   mat4(-.05072,-.004299,.07837,-.1224,-.07904,-.06968,.1316,-.1008,-.01474,-.1071,-.1389,-.107,-.004243,-.02012,.06016,-.06147)*in8+\n   mat4(-.04767,.5547,-.1719,.01692,-.06295,.2811,.009001,.218,.001026,.04593,-.1481,-.3148,-.02884,-.1456,-.05272,-.1265)*in9+\n   mat4(.2302,.09748,.0002262,.02771,-.2324,.0229,-.1385,-.01044,.1088,-.02629,-.1366,.05622,-.1005,.1199,-.1593,.04604)*in10+\n   mat4(.2561,-.03514,.0375,-.03967,-.08013,-.01887,-.2063,-.006953,.02665,-.01575,.05151,-.03938,.001724,-.1872,-.2013,-.0208)*in11+\n   vec4(-.005684,-.2349,.04514,-.01612));\nvec4 h0_7=LeakyReLU(mat4(-.05174,-.124,-.4286,-.9016,-.007915,.2882,.3323,.2741,-.09564,-.3325,-.1,-.506,-.2615,-.1551,-.03663,.2301)*in0+\n   mat4(-.2883,.202,.1137,-.2179,-.06389,.329,.218,.0629,.08219,.09158,-.06387,-.1643,.04332,.0206,.3847,.06415)*in1+\n   mat4(.07149,-.1748,-.07068,.08498,.225,.1453,.1171,-.133,.04105,.3294,-.1398,-.114,.136,-.22,.1608,-.1707)*in2+\n   mat4(-.02004,.1263,.1323,.1257,-.05291,-.09917,-.03968,-.0719,.07202,.004693,.2034,-.3843,-.05628,.009868,-.1125,.1103)*in3+\n   mat4(.1776,.05915,.04773,.2502,-.09667,-.07818,-.1103,.09053,-.07686,.01343,.1985,-.068,.05768,.145,-.076,-.1539)*in4+\n   mat4(.08699,-.0751,.06464,-.1576,-.07856,.1062,.02049,.04234,-.01649,-.07951,-.1847,.001419,.1012,-.06694,.01293,.003996)*in5+\n   mat4(.07328,-.01314,.09656,-.03113,-.1482,-.09593,-.06109,-.1984,.1629,.1041,-.05186,-.1592,-.1728,-.1279,.04712,-.05171)*in6+\n   mat4(-.1371,-.04266,-.2517,-.1449,.02633,.1894,-.05852,-.1403,-.296,-.18,-.1076,.118,-.1695,-.2259,-.05177,.001374)*in7+\n   mat4(-.04301,.05311,.04926,.02648,-.2476,-.01813,-.1542,.06971,.1939,-.006696,.2465,-.1228,-.1648,.1455,.1336,-.0362)*in8+\n   mat4(.07793,.06712,.2584,.2333,.09849,-.1897,-.06322,-.08666,-.09203,-.07272,.01016,.2885,-.09738,.1333,.1162,.009847)*in9+\n   mat4(.1719,-.08917,.02786,-.01038,-.009721,-.01795,-.04301,.009647,-.02369,.02881,-.09855,-.06861,-.02131,-.2113,.009205,-.05454)*in10+\n   mat4(.06733,-.04655,.04559,-.002781,.1145,.05227,.02986,-.05463,-.1584,-.08854,-.1028,.05623,.05393,.2544,-.0006255,.08318)*in11+\n   vec4(.08951,.02177,-.2325,-.08375));\nvec4 h0_8=LeakyReLU(mat4(-.06635,-.1061,-.5324,.2402,.7892,-.09939,-.3445,-.3272,.2491,-.03834,-.04891,-.03525,-.25,-.1551,.09474,-.006182)*in0+\n   mat4(-.04021,-.1082,-.2097,-.2737,.02966,.2167,.1664,.1885,-.004826,-.3227,-.1755,-.3074,-.1034,.2583,-.2109,.2462)*in1+\n   mat4(.04808,-.6246,.1525,.03026,.1294,-.4183,-.06942,-.2438,-.248,-.01723,.2164,.05297,.1623,-.0306,.4319,.04391)*in2+\n   mat4(-.1617,.3268,-.1421,-.2753,-.2237,-.1872,.1551,-.1225,.2738,.1351,-.1133,-.3034,.05733,.1264,-.1667,-.01223)*in3+\n   mat4(-.035,.1742,-.1635,.001197,-.02618,.1982,-.195,-.2291,-.02471,.1549,-.07118,.246,-.01448,.09909,-.08976,-.0742)*in4+\n   mat4(.01353,.04214,-.1307,-.07722,-.04863,.02527,.1042,-.03047,.06926,-.05168,-.08931,-.3339,.01226,.01683,-.01487,.05509)*in5+\n   mat4(.04498,-.1518,.02629,.1296,.1251,.1929,-.02295,.1679,.09079,.1426,-.07231,-.01263,-.05613,-.1546,.02638,.02562)*in6+\n   mat4(.002966,-.09011,-.1344,.148,.02258,.03559,-.1394,-.1645,.003752,-.01079,-.02318,-.02241,-.0439,.03276,-.03444,-.06774)*in7+\n   mat4(-.06531,.2322,.04309,-.06737,.0301,-.1249,-.05749,-.01018,-.04246,-.1018,.05601,.2593,-.03576,.1725,-.0472,.04785)*in8+\n   mat4(.08796,.0709,-.142,-.1629,-.6404,.01272,.139,.003972,.0893,-.1702,.09901,-.145,.4268,.05486,-.07634,.01959)*in9+\n   mat4(.02875,.06765,-.02583,.06003,-.0009907,-.003262,.0128,-.06328,-.007952,-.01847,.1152,-.06245,.0171,.04222,-.01455,.01099)*in10+\n   mat4(-.05793,-.1345,.2158,.04542,.006804,.04517,-.03563,-.05768,-.0318,.02721,-.03365,.1314,-.05199,-.02685,-.1388,.03104)*in11+\n   vec4(-.1099,-.1519,-.0136,.03086));\nvec4 h0_9=LeakyReLU(mat4(.4706,.1694,.1019,-.1772,.09901,-.2035,-.1334,-.2589,-.362,-.3457,-.4258,-.361,-.1194,-.002483,-.2063,-.3156)*in0+\n   mat4(-.1395,-.6388,.007504,-.03486,-.003611,-.1065,-.03817,.5389,-.3453,.2389,-.29,-.7161,.3926,.1569,.6167,.1251)*in1+\n   mat4(-.2979,.1189,-.4008,-.009296,-.01377,.1349,-.3916,.1321,.2124,-.3607,.05497,-.2689,-.008788,-.01239,.181,.2984)*in2+\n   mat4(.2331,-.2828,.316,-.3025,.007247,.06202,-.2053,.07776,-.1043,.1725,.2191,.1665,.1064,-.03184,.07044,.03036)*in3+\n   mat4(-.2175,.08086,-.009793,.129,.02153,.04825,.02749,.1918,.1023,.1209,.09335,-.01898,.05419,.1533,.1758,.006824)*in4+\n   mat4(.07939,-.009894,.07774,-.01777,.04702,.1293,-.0838,-.1651,.2109,.1575,.1179,-.1343,.06031,.1076,.00862,.06732)*in5+\n   mat4(-.1252,-.09976,.2304,.1613,-.02403,-.09457,-.1498,.07116,.362,.2103,.3751,-.1291,-.1238,.005226,.05123,-.07736)*in6+\n   mat4(-.03933,-.007595,.1253,.2992,-.1407,.1708,.2486,.0472,.176,-.07732,.1638,.2048,-.04997,.0521,.08131,.03181)*in7+\n   mat4(-.1558,.196,-.01325,-.1497,-.0286,-.1159,.1364,-.05443,.02454,-.04831,.05047,-.1099,.07044,.06814,.04853,-.02985)*in8+\n   mat4(-.1273,-.08902,.1409,-.007013,-.1784,.03667,-.07543,-.01991,.1397,.2601,.1794,.1457,.06454,-.1065,.07265,-.05331)*in9+\n   mat4(-.0302,-.01113,.1373,.1044,-.09517,-.08497,-.01739,.03313,.1161,.04684,-.04085,-.1071,-.01303,.003716,.09288,.01863)*in10+\n   mat4(.02033,.002751,.07731,.04688,-.06836,-.07077,.05304,-.008999,.0919,-.05811,-.03524,-.05535,-.06973,-.1049,.05443,.0186)*in11+\n   vec4(-.009677,-.1691,-.1941,-.09596));\nvec4 h0_10=LeakyReLU(mat4(.6096,-2.427,.3938,.05417,.2993,-.3082,-.5158,-.4405,-.3198,.08456,.04646,-.6593,-.1602,-.2441,-.229,-.01752)*in0+\n   mat4(.03809,-.1452,.2056,-.2212,.1332,.08124,.2026,-.1551,-.4735,.1282,-.2452,-.3365,.2613,-.1929,-.09462,.2373)*in1+\n   mat4(-.1044,.09022,-.06589,-.4207,-.1574,.09832,-.3979,-.6419,-.02948,-.1092,.4835,-.1333,.124,-.02814,-.1945,-.007036)*in2+\n   mat4(.04289,.2188,.1211,-.01754,-.004119,.1239,.01648,.01938,.09826,.1832,-.07201,.02902,-.05368,-.03147,.01719,.008124)*in3+\n   mat4(.1382,-.0149,-.2268,.04114,-.06159,.138,.07384,-.1894,.08842,.09284,-.06248,.2553,.04284,.05297,-.009348,.005237)*in4+\n   mat4(-.1466,-.0119,-.06139,-.05962,-.01075,.1334,-8.681e-05,-.1845,-.02262,-.06084,.06406,.06922,-.1181,.0862,-.006219,-.09505)*in5+\n   mat4(.02483,-.3753,.07272,.2084,-.05426,-.1121,.1378,-.04631,-.02821,.03638,.08202,.05275,.09107,.01495,-.09934,-.0684)*in6+\n   mat4(.09167,.05956,.001076,.0974,-.1077,.06511,-.05291,.0566,-.03546,.04366,-.02054,.0649,.05693,-.0396,-.02618,.1603)*in7+\n   mat4(-.1405,-.03141,.1776,.1377,.1509,.001633,.03189,.1785,.07187,.02108,-.02393,.1282,.1087,.02232,.2073,-.07011)*in8+\n   mat4(-.3984,.4049,-.0452,-.08397,-.1598,.09827,.2169,-.1125,.0624,-.2884,-.1444,.2549,.1162,.01092,-.03516,.04062)*in9+\n   mat4(.2303,.09241,-.04103,-.02284,-.02758,-.0008731,-.05462,-.04732,.08308,-.02299,.04349,.02808,.05563,-.05527,.008809,-.01853)*in10+\n   mat4(-.1064,-.03554,.1126,-.119,.1483,.03948,-.0004302,-.08436,.0199,-.05628,.05814,-.03463,-.03539,-.03999,.06252,-.03652)*in11+\n   vec4(.06064,.05161,-.05483,-.02758));\nvec4 h0_11=LeakyReLU(mat4(-.05548,.08789,.01428,-.2476,-.2815,-.1556,.04008,-1.348,-.1052,-1.086,-.2306,-1.348,-.1208,.06568,-.3077,-1.327)*in0+\n   mat4(.1235,.04155,-.2455,.02796,.09257,.1524,-.01268,-.1851,-.3693,.1724,.03241,-.2434,.1881,-.1713,.1985,.3074)*in1+\n   mat4(.1019,.153,-.0522,-.02776,-.4633,.1077,-.174,-.1764,.02097,-.08517,.259,-.0863,-.05799,.1896,-.03376,-.2247)*in2+\n   mat4(-.2625,-.2069,-.1048,-.1822,.1195,-.2569,.055,-.0673,-.01712,.3544,-.002768,-.04453,-.1363,.06885,-.3267,.06131)*in3+\n   mat4(-.06922,-.09,-.4474,.066,.1703,-.1156,.08363,-.05035,.1599,-.0002143,-.1955,-.08035,.09741,-.0002213,-.1515,.01098)*in4+\n   mat4(.1803,.08127,.03489,-.01113,-.0496,-.1085,-.07883,-.1071,.1378,-.03305,-.1546,.09561,.08763,-.02956,.239,.01448)*in5+\n   mat4(-.2678,.03615,.144,.1052,.00388,-.08248,.07028,-.01142,.1036,.0644,.2033,-.2379,-.07346,.004191,.06675,.1571)*in6+\n   mat4(-.05962,.04616,.1058,-.002649,.03031,-.004756,-.05887,-.03787,.2,.06938,-.04804,-.02148,.07349,-.02566,-.01969,.02682)*in7+\n   mat4(.05606,-.06377,.06846,-.01483,.01967,.07233,.04853,.05065,.07016,.001245,.08266,-.0856,.03848,.003246,.04561,-.09418)*in8+\n   mat4(.1335,.01048,-.05241,-.006945,-.07156,-.2008,-.1438,-.2514,.01417,.659,.007134,.0222,.1091,-.1184,.08905,.3309)*in9+\n   mat4(-.06017,-.01242,.02201,.0242,-.01826,-.09005,-.01029,-.01584,-.03515,-.07796,.09815,-.04107,-.07115,-.0126,-.03377,.07991)*in10+\n   mat4(-.05015,.03137,-.0292,.004272,.02654,.003513,-.0005854,-.007819,-.01167,-.02038,.0851,-.01052,.04313,-.004626,-.03012,-.03913)*in11+\n   vec4(-.1375,.00546,.02013,.0665));\nvec4 h0_12=LeakyReLU(mat4(-.5683,.5489,.6866,-.2015,-.3003,.1008,-.3992,.04732,.1405,-.3192,1.098,-.03142,-.1991,.02022,-.02927,.1291)*in0+\n   mat4(-.1399,.06949,-.03785,.1273,.1942,-.1184,.1056,-.2095,-.4118,-.2973,.07008,-.3532,-.08876,.002117,.01998,-.07087)*in1+\n   mat4(-.01078,-.0373,.183,-.02263,-.07812,.07197,.1093,-.0624,-.4865,-.1645,-.1676,.1813,.1058,-.2051,.1066,.4267)*in2+\n   mat4(-.3081,-.1954,-.02253,-.05104,.173,.02838,.09517,.1351,-.01413,-.02543,.3005,.01393,.07882,-.1606,-.1309,.07419)*in3+\n   mat4(-.03658,-.1116,-.0009754,.07948,-.1199,.0943,.03236,-.07106,.00948,-.04953,-.01778,-.08217,-.00241,-.08356,.03779,-.004125)*in4+\n   mat4(.07792,.03598,-.03379,-.1244,-.07955,.05688,.06167,-.0773,-.1067,-.1046,-.05841,.07103,.002563,-.05135,-.01079,.1875)*in5+\n   mat4(.04609,-.3219,.01813,.1243,-.08595,-.1219,-.1327,.1623,-.08362,.001045,.3007,-.1873,.1529,-.1598,-.0261,-.1588)*in6+\n   mat4(-.165,-.07381,-.004579,-.1283,.01225,.004471,.09591,-.03716,.1088,.1905,.002297,.1467,.02456,.01245,-.07477,.07031)*in7+\n   mat4(.02734,-.03294,-.02094,.1186,-.1104,.1085,.02397,.1582,.01968,-.1293,.02735,-.02331,-.0847,.02834,.001029,.008283)*in8+\n   mat4(.2668,-.1389,-.1818,-.0539,.03853,-.04352,.2556,-.09246,.00817,-.1238,-.865,.08652,.02323,.07943,.02395,-.0508)*in9+\n   mat4(-.02399,.1563,.03969,-.1193,-.01969,-.1578,-.01998,-.03508,-.05411,.02386,.02804,-.003689,.1086,-.02848,-.05395,-.02533)*in10+\n   mat4(.0344,-.1316,-.04852,.01624,.2139,-.135,.0443,-.06068,.0644,.06653,-.0544,.01668,-.03787,-.1164,.04091,.1005)*in11+\n   vec4(-.1912,-.1264,.03284,-.07264));\nvec4 h0_13=LeakyReLU(mat4(.147,-.04138,.1306,.4482,.03704,-.4967,-.01855,.2257,-.04084,-.184,.2753,.3854,.01536,.003911,.1402,.1003)*in0+\n   mat4(.06272,.1296,-.02833,-.213,.03645,-.1293,.01109,-.05109,.2227,-.04539,-.2418,.09162,.05356,.3005,.2279,.02965)*in1+\n   mat4(-.08689,-.02533,-.1067,.04033,.2882,.02612,-.1466,-.2344,.1255,-.2321,-.2127,.09321,-.05363,.04337,-.3843,.08403)*in2+\n   mat4(-.01176,-.03964,.1996,-.09178,-.1183,-.004658,-.00819,-.05108,-.08641,-.2125,-.1307,.193,.2408,.08587,.2048,-.02865)*in3+\n   mat4(-.1431,-.02628,-.008499,.1517,.05784,-.06196,-.1064,-.01608,.1202,.06319,.1193,.05987,.09096,-.02148,.006129,-.1412)*in4+\n   mat4(.06631,.01321,-.1128,-.2048,.003166,-.2922,-.1637,.08311,-.01666,-.2209,.2314,-.1521,-.05997,-.01827,-.132,.01179)*in5+\n   mat4(.2356,.07317,-.08846,.05318,-.061,-.07382,-.1224,-.1133,-.08469,-.04126,.231,-.197,.03667,-.0275,-.02447,.1035)*in6+\n   mat4(.1789,.01691,.09497,-.01429,-.07644,-.004622,-.2062,.01687,.1216,.2346,.06186,.03303,.1056,.1668,.02543,.07845)*in7+\n   mat4(-.007694,.1608,.01939,.003008,.04498,-.01296,-.006271,.09774,.0132,.2593,-.06311,-.00583,.01037,.06285,-.1632,-.01138)*in8+\n   mat4(-.1112,.08552,.5084,-.292,-.03133,.2466,-.05089,.03025,.1076,-.1008,-.1361,-.3714,.2397,-.08016,.1579,.2615)*in9+\n   mat4(.1806,-.09199,.0746,.06638,.3187,-.08599,.004667,-.04169,-.08107,-.0973,.03093,-.1747,.005457,-.1658,.1048,-.02993)*in10+\n   mat4(.02634,.1754,-.02296,.006424,.1948,-.06404,.1278,.1762,-.05817,-.03019,.07045,.07392,.0517,.07985,-.06929,.0253)*in11+\n   vec4(-.1687,.05788,-.1665,.0028));\nvec4 h0_14=LeakyReLU(mat4(-.09682,.3211,.3777,-.5725,-.1561,-.09199,.1696,-.2365,.0883,-.2317,-.1987,-.02346,-.2945,-.05804,-.1094,-.09633)*in0+\n   mat4(.0175,-.1051,-.1039,.0687,.1205,.4495,.2808,-.08696,.03855,.02196,-.03401,.1195,.2189,.2764,.592,-.07234)*in1+\n   mat4(-.2358,-.06136,-.2804,-.2431,.0455,-.1895,-.2801,-.03217,-.3067,-.2178,-.06264,-.269,.08507,-.01678,.1439,-.3442)*in2+\n   mat4(.2696,.2483,-.2896,-.03604,.02836,.211,.1252,.0971,-.07813,-.00856,-.1027,-.2669,.15,.1859,-.09101,-.0112)*in3+\n   mat4(.23,.05893,-.1129,-.09519,-.02507,.07217,-.07206,-.07664,.2956,-.09805,-.02588,-.08031,.1221,.1357,-.09076,.1583)*in4+\n   mat4(.01488,-.1539,.04284,.0598,.08018,-.003613,-.0534,.07854,-.171,.1213,.107,.000148,.06411,.1112,-.04562,-.0958)*in5+\n   mat4(.02799,.09343,-.2078,.1015,-.1026,.05668,.04691,.04213,.04483,-.005955,-.03323,-.1334,-.0139,-.02206,-.05235,-.1578)*in6+\n   mat4(-.2491,-.1218,.1281,.2725,-.276,-.05532,-.2221,.0876,.04915,-.06875,-.04686,-.005738,.1185,-.04804,.1388,-.002127)*in7+\n   mat4(.2224,.2158,.1035,.118,-.09196,-.105,-.126,-.03989,.1936,-.2537,.01026,-.1448,.03863,-.1293,-.1006,-.02608)*in8+\n   mat4(.2162,.03807,-.1962,.2574,-.001334,-.03676,-.08106,.3535,-.1542,.1112,-.153,-.1254,.1085,.08236,.1655,-.108)*in9+\n   mat4(-.01791,.081,.08309,-.08634,-.03665,.1005,-.02072,.04873,.03065,-.01821,.04536,-.01894,-.08395,.01922,.09308,-.02551)*in10+\n   mat4(-.05461,.01994,-.02702,-.05401,.07096,.02833,-.07684,.05066,-.06716,-.01326,-.1057,.1569,-.02442,-.03094,-.04697,.2547)*in11+\n   vec4(-.09074,.06544,.07888,-.2427));\nvec4 h0_15=LeakyReLU(mat4(-.163,-.1787,.6455,-.518,-.4813,-.2333,-.1932,-.2321,-.1561,-.1583,-.326,-.5613,-.3534,-.4666,-.1051,-.3294)*in0+\n   mat4(-.005641,-.01528,.2814,-.5621,-.02124,.0517,-.4586,.2018,-.4213,-.04252,-.317,-.4375,-.01325,.1858,.07176,.5025)*in1+\n   mat4(-.3268,-.7775,-.1061,-.5569,-.004514,-.02841,-.1481,-.1134,.1211,.3215,.1648,-.07464,.1056,.1334,.02288,-.024)*in2+\n   mat4(.1093,.3537,.5045,-.1062,-.1952,.1464,.1407,-.01105,-.07,-.2544,-.02942,.1208,.1689,-.007441,.05567,.01327)*in3+\n   mat4(-.08969,.0256,.01677,.1159,.01692,.1482,.1997,-.1145,.08108,.04287,.03381,.1252,-.08386,.05772,-.05858,.1742)*in4+\n   mat4(.06175,.05506,-.09926,.05047,.1567,.01932,.03216,.01446,.04488,-.2119,-.08993,.01213,.2774,.07568,.008163,.003403)*in5+\n   mat4(-.04783,-.1674,.3889,-.2821,-.08964,.0698,-.1614,.07347,.1875,-.07646,-.006273,-.08537,.1101,-.1234,.1211,-.2353)*in6+\n   mat4(.01587,.1822,.1992,.04024,.2242,-.04137,.3393,-.197,.1344,.03187,-.0659,.05448,.03241,.1191,-.02289,.02759)*in7+\n   mat4(.02911,.1082,.06378,.147,-.06687,-.2271,-.105,-.02363,.1412,-.1954,-.07719,.09752,.04058,-.00542,.1823,.03123)*in8+\n   mat4(.1764,-.124,-.00649,-.1979,.01872,-.09363,-.1351,.1691,-.1685,-.04489,-.1561,.1498,.02672,.07524,.1798,-.2671)*in9+\n   mat4(-.01638,.1122,.09218,.05445,-.02445,.06744,-.1339,-.0386,-.1063,.01151,-.07251,.07773,-.04291,.0336,-.04223,-.09527)*in10+\n   mat4(.05132,-.02886,.05953,-.02047,.03213,.1155,.08953,-.0296,.08944,.004436,-.008929,.102,-.001775,.06417,.1069,.1033)*in11+\n   vec4(.02558,-.2372,-.04973,-.2935));\n//output layer\nout0=mat4(-.004705,-.05224,-.01156,-.1126,-7.536e-05,-.03473,-.01237,-.06728,-.004267,.01914,.006666,.03664,.01125,.08606,.04656,.1558)*h0_0+\n   mat4(-.01397,-.03274,-.003556,-.08075,.02204,.005986,-.009058,.05329,.001421,.04995,.01741,.06849,-.00361,.1224,.04891,.1548)*h0_1+\n   mat4(-.01718,.01591,-.005619,.005681,.08795,.0599,-.08526,.09994,.02757,.1721,.04118,.254,.01993,.03697,.008308,.0752)*h0_2+\n   mat4(-.03384,-.01692,-.01131,-.06761,.002678,.09082,.03353,.1132,.04321,.03304,.01433,.08737,.04754,.01515,-.02224,.008066)*h0_3+\n   mat4(.01376,-.04999,-.05105,.02286,-.01024,.05359,.01999,.08416,.01538,-.01007,.001172,-.01607,.1082,-.01085,.03834,.1271)*h0_4+\n   mat4(.01266,-.007904,-.01749,-.02655,-.006618,.004334,.01756,.02833,.01583,.08273,.04899,.1184,.0391,.05085,.01147,.1395)*h0_5+\n   mat4(.004125,-.03584,-.01253,-.04683,.06237,.04835,.0006223,.03026,-.003277,-.05362,-.02652,-.1014,-.01609,-.03617,-.02278,-.08126)*h0_6+\n   mat4(-.007437,-.001326,.007509,-.02843,.00414,-.006009,.006992,.03418,.03163,-.07304,-.03601,-.1419,.02506,-.001593,.008833,-.01473)*h0_7+\n   mat4(-.001859,-.1078,-.02442,.005223,-.02372,-.08679,-.05189,-.1472,-.003959,.007201,.01832,.003667,-.007511,.02991,.01826,.04814)*h0_8+\n   mat4(-.03785,.02235,.03432,.07701,-.02428,.01079,-.0005237,.0191,-.02801,.04027,.02282,-.06641,-.007,-.01489,-.002549,-.01225)*h0_9+\n   mat4(.006984,-.03952,-.0184,-.06867,.09258,-.004172,-.008706,.005524,-.005718,-.008172,-.01404,.01287,.01123,.07363,.05578,.08547)*h0_10+\n   mat4(-.01813,.03606,.01444,.1235,-.01658,.02963,.04837,.01832,.01055,.02993,.005571,.06796,.006236,.1315,.02826,.1958)*h0_11+\n   mat4(.01727,.007083,-.0008092,-.02185,-.02615,.01815,.01701,.01481,-.04021,.03467,-.0396,-.003662,-.002164,-.02254,-.009758,-.03765)*h0_12+\n   mat4(-.01932,-.006027,-.005351,-.01358,-.009496,.00619,-.00326,.03187,-.004717,.01217,-.004539,.01946,-.02423,-.007628,-.01564,.01452)*h0_13+\n   mat4(-.005945,.05528,.01782,.1121,-.009051,-.02547,-.006411,-.04219,.02848,-.04556,-.004729,.08708,.008814,-.01539,-.001998,-.04793)*h0_14+\n   mat4(-.006233,.07381,.04157,.1077,-.008047,-.06382,.02322,-.07407,-.007788,.04133,.01511,.07253,.08513,-.05869,-.02852,-.1217)*h0_15+\n   vec4(.00177,.008033,.006575,.00214);\nout1=mat4(.192,.06214,-.04452,-.01972,-.009229,.08012,.03822,.06729,.0945,.06824,.02171,-.06105,-.05487,-.07602,.0581,-.05752)*h0_0+\n   mat4(.04705,.0251,-.05731,-.05177,.06408,-.01149,-.007986,.1938,.01448,.1276,.003336,-.1197,-.0847,.02792,.06693,.1543)*h0_1+\n   mat4(.03798,-.07035,.01002,-.1736,.2004,-.08271,.07958,.1159,-.04363,.02012,.07942,-.02292,-.07237,.005381,-.004902,-.06887)*h0_2+\n   mat4(-.01707,-.2284,-.03763,-.09329,.08372,.06085,-.02654,.007215,.04491,-.07726,.1107,-.09973,-.1195,.1487,-.04185,-.004837)*h0_3+\n   mat4(-.08497,.05251,.01813,-.01691,.002807,.005225,-.05372,.009007,-.02958,-.01491,.07116,.01951,.2299,-.008877,-.01719,.1145)*h0_4+\n   mat4(-.1655,-.03473,.1435,-.0247,.03162,.09584,.07831,.04657,-.1312,-.02542,-.04688,.06221,.03436,.01342,-.1446,.09225)*h0_5+\n   mat4(.1317,-.09529,.01789,-.09077,-.04771,.02017,.01938,.05339,.01368,.01519,-.07388,-.04296,.06167,-.06532,.02701,.1195)*h0_6+\n   mat4(.05083,.02441,.1049,-.04524,-.1006,-.07388,.0006638,-.05155,.03118,-.1072,.008712,.03159,.07016,.07662,-.05083,-.177)*h0_7+\n   mat4(.03416,.01723,-.07174,.02851,.09878,.08366,.1305,-.03776,-.006226,.08494,.08277,-.05078,.04072,.04704,.03362,-.05974)*h0_8+\n   mat4(-.05179,-.09859,.1155,-.1262,.06727,-.1206,-.06172,.05969,.08244,.2436,.1905,-.03858,.09423,-.0776,.06149,-.0626)*h0_9+\n   mat4(.1113,-.01555,.1055,-.09837,.08994,-.0599,-.03254,-.003235,-.06077,-.08482,.03543,.08985,-.02429,-.1582,.08543,-.1196)*h0_10+\n   mat4(-.0215,.01032,.1111,-.1387,-.07603,-.1303,-.0967,.03347,.09842,-.05043,.1449,-.07114,-.08314,-.09045,.03733,.01918)*h0_11+\n   mat4(-.08784,-.1275,-.03276,.0686,.07154,-.1082,.05558,.03379,-.02245,-.03566,-.0007998,-.028,-.1315,.09229,.008598,.08866)*h0_12+\n   mat4(.01145,.1275,-.07216,-.009373,-.1014,-.01515,-.05785,-.04966,.09247,-.04275,.1268,-.02253,-.05188,.01153,-.1294,.01899)*h0_13+\n   mat4(.007848,-.0596,.1819,-.02459,.1062,.0475,.03223,-.1121,.05727,-.08975,.01323,.007457,.01468,.03004,-.00658,-.08488)*h0_14+\n   mat4(-.0295,.06205,.01176,-.03789,.03879,.1259,-.09666,.01031,.07953,-.1335,-.03431,.03811,.1632,-.1535,.07174,.2)*h0_15+\n   vec4(-.006885,.01079,-.03086,-.005081);\nout2=mat4(-.109,.1534,.03215,-.02681,.03084,-.1346,.06418,.0436,.09711,-.09474,.03837,.03951,-.1094,.1046,.1006,-.1332)*h0_0+\n   mat4(-.01084,.03706,-.1876,-.0004077,-.02322,-.02276,.1048,.01111,-.03543,.03988,.01821,-.0468,-.08267,-.02837,-.1191,.07688)*h0_1+\n   mat4(-.01491,-.01613,.04155,-.1018,-.3444,.1043,.00756,-.06519,-.09433,-.09419,-.002322,.02188,.1643,.04568,.01845,-.03726)*h0_2+\n   mat4(-.004238,.007931,.08426,-.1109,.1414,.08162,-.1526,.08648,-.0321,.01163,-.102,-.01111,-.09807,.09921,.07054,-.002852)*h0_3+\n   mat4(.141,-.1155,.05431,.01433,.07494,.01851,.03175,-.06886,-.1008,-.0556,.1477,-.01792,-.1947,-.01072,.01321,-.01694)*h0_4+\n   mat4(-.01919,.1239,-.05462,-.169,-.02552,.02012,.06178,.08081,.03224,.07627,-.03381,-.02951,-.1168,.05107,.07941,-.05175)*h0_5+\n   mat4(.1428,-.01334,.00379,-.002088,-.02315,-.0312,-.09834,-.05287,.05801,.02294,.07572,-.1105,-.09719,.03522,-.1126,-.002352)*h0_6+\n   mat4(.1144,-.01989,-.1198,.08227,-.04134,.001854,-.07257,.06187,.0876,.07918,-.172,.0005341,.02628,-.08438,.1288,.09054)*h0_7+\n   mat4(-.04401,-.0284,-.08093,-.109,-.1429,-.08245,-.09057,-.01744,.1791,-.05839,.01112,-.08468,-.01605,-.1367,.1198,.1193)*h0_8+\n   mat4(-.0201,-.01781,.007509,-.02112,-.1411,-.112,-.01999,-.05785,-.008094,.04458,-.0751,-.09483,.07271,-.2581,-.03928,.05167)*h0_9+\n   mat4(.02874,.1031,.05046,-.01993,.01966,-.02806,-.02479,.02681,.2625,-.01359,.02726,.01609,.02669,-.1692,-.0551,-.05114)*h0_10+\n   mat4(-.107,.1281,.03171,.06285,.05257,.05956,-.03079,-.06868,-.0883,.03127,.07328,-.02896,-.01401,.005051,.06487,-.1028)*h0_11+\n   mat4(.1109,.07424,.09634,-.02054,-.0638,-.05384,.04979,.09843,-.03491,-.04216,-.0371,.002165,.06267,.02583,.02005,-.007155)*h0_12+\n   mat4(-.0287,-.06541,-.03952,.05081,.06222,-.00445,-.01788,.06467,-.1053,.09674,.03912,-.01753,-.01518,.1353,.03331,-.08393)*h0_13+\n   mat4(-.0466,.1327,-.1169,.01063,-.00328,.0477,-.04724,-.00741,-.01383,-.08463,-.2258,.01391,.03936,.008162,.08196,.02719)*h0_14+\n   mat4(.04245,-.05364,.003468,.03961,.2034,-.00132,.006591,.1745,-.008694,.1214,.1411,.1277,-.03552,.1237,.1914,-.0688)*h0_15+\n   vec4(.02516,-.01844,.02203,.001078);\n}\nvec4 hash43(vec3 p)\n{\n\tvec4 p4 = fract(vec4(p.xyzx)  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\nvec12 noise(ivec2 pos, float time)\n{\n    vec12 o;\n    o.a = NOISE*(2.0 * hash43(vec3(pos, time)) - 1.0);\n    o.b = NOISE*(2.0 * hash43(vec3(pos, time+4541.0)) - 1.0);\n    o.c = NOISE*(2.0 * hash43(vec3(pos, time+451.0)) - 1.0);\n    \n    return o;\n}\n\nvec12 ComputeUpdate(sampler2D ch, ivec2 pos, float time)\n{\n    vec12 s00 = LoadState(ch, pos + ivec2(-1, -1));\n    vec12 s01 = LoadState(ch, pos + ivec2( 0, -1));\n    vec12 s02 = LoadState(ch, pos + ivec2( 1, -1));\n    vec12 s10 = LoadState(ch, pos + ivec2(-1,  0));\n    vec12 s11 = LoadState(ch, pos + ivec2( 0,  0));\n    vec12 s12 = LoadState(ch, pos + ivec2( 1,  0));\n    vec12 s20 = LoadState(ch, pos + ivec2(-1,  1));\n    vec12 s21 = LoadState(ch, pos + ivec2( 0,  1));\n    vec12 s22 = LoadState(ch, pos + ivec2( 1,  1));\n\n    //active only if alpha channels of neighbors are active\n    float is_active = float((s00.a.w > 0.1) || (s01.a.w > 0.1) || (s02.a.w > 0.1) || \n                     (s10.a.w > 0.1) || (s11.a.w > 0.1) || (s12.a.w > 0.1) &&\n                     (s20.a.w > 0.1) || (s21.a.w > 0.1) || (s22.a.w > 0.1));\n    \n    vec12 n = noise(pos, time);\n       \n    //[[0, 0, 0], [0, 1, 0], [0, 0, 0]]\n    vec12 identity = s11;\n\n    //[[-1, -2, -1], [0, 0, 0], [1, 2, 1]]\n    vec12 sobelx_0 = sub(s02, s00);\n    vec12 sobelx_1 = sub(mul(s12, 2.0), mul(s10, 2.0));\n    vec12 sobelx_2 = sub(s22, s20);\n    vec12 sobelx = add(add(sobelx_0, sobelx_1), sobelx_2);\n\n    //[[-1, 0, 1], [-2, 0, 2], [-1, 0, 1]]\n    vec12 sobely_0 = sub(s20, s00);\n    vec12 sobely_1 = sub(mul(s21, 2.0), mul(s01, 2.0));\n    vec12 sobely_2 = sub(s22, s02);\n    vec12 sobely = add(add(sobely_0, sobely_1), sobely_2);\n    \n    //rotating the poor lizards\n    float s = sin(time*0.1);\n    float c = cos(time*0.1);\n    \n    vec12 sobelA = add(mul(sobelx, c),mul(sobely, s));\n    vec12 sobelB = add(mul(sobelx, -s),mul(sobely, c));\n\n    //[[1, 2, 1], [2, -12, 2], [1, 2, 1]]\n    vec12 laplacian_0 = mul(add(add(s10, s01), add(s12, s21)), 2.0);\n    vec12 laplacian_1 = mul(s11, -12.0);\n    vec12 laplacian_2 = add(add(s00, s22), add(s02, s20));\n    vec12 laplacian = add(add(laplacian_0, laplacian_1),laplacian_2);\n    \n    laplacian = mul(laplacian, 1.0/(SPACE_STEP*SPACE_STEP));\n    sobelA = mul(sobelA, 1.0/(SPACE_STEP));\n    sobelB = mul(sobelB, 1.0/(SPACE_STEP));\n\n    vec12 delta;\n    NCA(identity.a, identity.b, identity.c, \n        sobelB.a, sobelB.b, sobelB.c,\n        sobelA.a, sobelA.b, sobelA.c,\n        laplacian.a, laplacian.b, laplacian.c,\n        delta.a, delta.b, delta.c);\n        \n    float mask = (hash43(vec3(pos, time+45521.0)).x < FIRE_RATE) ? 1.0 : 0.0;\n    \n    delta = mul(delta,TIME_STEP*mask);\n    \n    return clamp12(mul(add(add(identity,delta),n), is_active), -1.0, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "const int KEY_SPACE = 32;\nconst int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\n\nbool isKeyPressed(int KEY)\n{\n\treturn texelFetch( iChannel3, ivec2(KEY,2), 0 ).x > 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragCoord = floor(fragCoord);\n    ivec2 pos = ivec2(fragCoord);\n\n    vec12 state = ComputeUpdate(ch0, pos, iTime+fragCoord.x*0.2);\n    \n    if(iFrame < 5) \n    {\n        state.a = vec4(0.0);\n        state.b = vec4(0.0);\n        state.c = vec4(0.0);\n        \n        if(pos.x % 60 == 25 && pos.y % 60 == 25)\n            state.a.w = 1.0;\n    }\n    \n    ivec2 mouse = ivec2(ZOOM*iMouse.xy);\n\n    if(isKeyPressed(KEY_SPACE))\n    {\n        if(iMouse.z > 0. && distance(fragCoord, vec2(mouse))<20.0)\n        {\n            state.a = vec4(0.0);\n            state.b = vec4(0.0);\n            state.c = vec4(0.0);\n        }\n    }\n    else\n    {\n        if(iMouse.z > 0. && (mouse.x == pos.x) && (mouse.y == pos.y))\n        {\n            state.a.w = 1.0;\n        }\n    }\n  \n    \n    fragColor = StoreState(state);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragCoord = floor(fragCoord); \n    vec12 state = LoadState(ch0, ivec2(fragCoord));\n    \n    fragColor = state.a; //change state.a to .b/.c to see hidden channels\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}