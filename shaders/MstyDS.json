{
    "Shader": {
        "info": {
            "date": "1520104717",
            "description": "the $20 do-it-yourself kit",
            "flags": 0,
            "hasliked": 0,
            "id": "MstyDS",
            "likes": 21,
            "name": "SYSTEM",
            "published": 3,
            "tags": [
                "textures"
            ],
            "usePreview": 0,
            "username": "greendestruction",
            "viewed": 766
        },
        "renderpass": [
            {
                "code": "/* greetings to my friends */\n/* no textures were used to create this IFS based experiment */\n\nmat2 rot(float x) {\n    return mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nfloat map(vec3 p, float k) {\n    p.xz *= rot(k * 3.141592);\n\tvec3 a = abs(p);\n    float d = max(a.x, max(a.y, a.z)) - 1.0;\n    float s = 0.9;\n    d = max(d, s - max(a.y, a.z));\n    d = max(d, s - max(a.x, a.z));\n    d = max(d, s - max(a.x, a.y));\n    return d;\n}\n\nfloat trace(vec3 o, vec3 r, float k) {\n    float t = 0.0;\n    for (int i = 0; i < 16; ++i) {\n        t += map(o + r * t, k) * (1.0 - k * 0.75);\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 r = normalize(vec3(uv, 1.0 - dot(uv, uv) * 0.1));\n    vec3 o = vec3(4.0, 3.0, iTime * 3.0);\n    \n    r.xy *= rot(iTime * 0.125);\n    r.yz *= rot(3.141592 * -0.5);\n\n    vec3 fc = vec3(0.0);\n    \n    const int n = 7;\n    for (int i = 0; i < n; ++i) {\n        float u = float(i) / float(n - 1);\n        \n        float h = -u;\n        float pt = (h - o.y) / r.y;\n        vec3 w = o + r * pt;\n\n        float s = 8.0;\n        vec2 a = w.xz;\n        w.xz = (fract(w.xz / s) - 0.5) * s;\n\n        for (int j = 0; j <= i; ++j) {\n            w.xz = abs(w.xz) - 0.5;\n            w.xz *= rot(3.141592 * 0.125);\n        }\n        \n        vec3 tr = normalize(vec3(w.xz, 1.0));\n        vec3 to = vec3(0.0, 0.0, -2.0 - sin(a.x + a.y));\n        float t = trace(to, tr, u);\n        float d = map(to + tr * t, u);\n        \n        float tc = 1.0 / (1.0 + pt * pt * t * 0.01 + d * 100.0);\n        \n        vec3 fs = vec3(0.5);\n        vec3 fd = vec3(0.25);\n        \n        vec3 gc = vec3(1.0, 0.5, 0.0);\n        fd = mix(fd, fs * 20.0 * gc, floor(u));\n\n        vec3 uc = mix(fs, fd, tc) * tc;\n        \n        if (pt > 0.0) {\n            float b = float(i + 1) / float(n);\n        \tfc += uc * b * 2.0;\n        }\n    }\n    \n    fragColor = vec4(fc, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}