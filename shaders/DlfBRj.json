{
    "Shader": {
        "info": {
            "date": "1693154495",
            "description": "mouse controls camera\ninspiration: https://twitter.com/junkiyoshi/status/1695401421112492445",
            "flags": 0,
            "hasliked": 0,
            "id": "DlfBRj",
            "likes": 42,
            "name": "3D random generator",
            "published": 3,
            "tags": [
                "short",
                "reproduction"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 518
        },
        "renderpass": [
            {
                "code": "#define rot(a)    mat2(cos(a+vec4(0,11,33,0)))                  // rotation\n#define H(P)      fract(sin(ceil(P.x)*71.3))                    // random 1D\n//#define H(P)    fract(sin(ceil(P)*mat2(R,71)))                // random 2D\n\n#define T texture(iChannel0,             /* random digit SDF */  \\\n          (  vec2( c = int(10.*H(P)+ceil(P.y))%10, 12-c/16 )     \\\n            +( vec2(.25,.15) + vec2(.5,.7) * fract(P.xy) )       \\\n          ) /16. ) \n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t=9.,r,a; int c;\n    vec3  R = iResolution,\n          D = normalize( vec3(U+U, -2.*R.y) - R ),              // ray direction\n          p = vec3(0,0,10), q,P,                                // marching point along ray \n          C = iMouse.z > 0. ? 8.*iMouse.xyz/R -4.               // camera control\n                          : 3.* cos(.3*iTime + vec3(0,11,0));   // demo mode\n    for ( O=vec4(1); O.x > 0. && t > .01; O-=.01 )              // march scene\n        q = p, \n        q.yz *= rot(-C.y),                                      // rotations\n        q.xz *= rot(-C.x),\n        r = length(q.yz) - 4.,a = atan(q.x,r),\n        t =  abs( length(vec2(q.x,r)) - 1. ),                   // torus surface\n        P.xy = vec2( 4.*atan(q.z,q.y) , a ) /.628,              // surface parameterization\n        P.y = mod( P.y + 5.* sin( (.3+3.*H(P)) * iTime ), 10.), // columns rotation\n        t = max(   t,      T.w - .5 ),                          // draw torus-digits intersection\n     // t = max( a=t-.01,  T.w - .5 ),\n        p += .5*t*D;                                            // step forward = dist to obj  \n    \n    O *= O*O*O*1.5;                                             // color scheme\n // O *= texture(iChannel0,P.xy/10.).x;\n // O *= T.x;\n // if (t==a) O*=vec4(.3,0,0,0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}