{
    "Shader": {
        "info": {
            "date": "1686654687",
            "description": "All year long I'm going to just focus on truchet tiles and the likes! ",
            "flags": 0,
            "hasliked": 0,
            "id": "mdscRH",
            "likes": 21,
            "name": "Year of Truchets #036",
            "published": 3,
            "tags": [
                "2d",
                "warp",
                "truchet",
                "polar"
            ],
            "usePreview": 0,
            "username": "byt3_m3chanic",
            "viewed": 220
        },
        "renderpass": [
            {
                "code": "/** \n\n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n    \n    Year of Truchets #036\n    06/13/2023  @byt3_m3chanic\n    Truchet Core \\M/->.<-\\M/ 2023 \n    \n*/\n\n#define R           iResolution\n#define T           iTime\n#define M           iMouse\n#define PI         3.14159265359\n#define PI2        6.28318530718\n\nmat2 rot(float a) {return mat2(cos(a),sin(a),-sin(a),cos(a));}\nfloat hash21(vec2 a) {return fract(sin(dot(a,vec2(27.609,57.583)))*43758.5453);}\n\n//@iq of hsv2rgb\nvec3 hsv2rgb( in vec3 c ) {\n    vec3 rgb = clamp( abs(mod(c.x*6.+vec3(0,4,2),6.)-3.)-1., 0., 1.0 );\n    return c.z * mix( vec3(1), rgb, c.y);\n}\n\nvoid mainImage( out vec4 O, in vec2 F ) {\n    mat2 r45 = rot(.7853981634);\n    \n    vec3 C = vec3(.085);\n    vec2 uv = (2.*F-R.xy)/max(R.x,R.y);\n    vec2 vv = uv;\n\n    uv = uv-vec2(.3535,0);\n    if(vv.x>-.3) {\n        // background patterns\n        vec2 ft = fract((vv*8.+vec2(T*.2,0))*rot(.78))-.5;\n        C = mix(vec3(.1),vec3(.075),mod(floor(ft.x),3.)==0.?1.:0.);\n        // warp and turn\n        float scale = 1.91;   //7.//5.41//3.5;//2.545;//1.91;//1.2726;//.6365;\n        uv *= rot(-T*.035);\n        uv = vec2(log(length(uv)), atan(uv.y, uv.x))*scale;\n        uv.x -= T*.3;\n    \n    }else{\n        vec2 ft = fract((vv*32.)*rot(.78))-.5;\n        C = mix(vec3(.075),vec3(.1),mod(floor(ft.x),3.)==0.?1.:0.);\n        uv *= 10.;\n        uv.x -= T*.3;\n    }\n\n    float px = fwidth(uv.x); \n    \n    vec2 id = floor(uv), q = fract(uv)-.5;\n    float hs = hash21(id.xy);\n\n    if(hs>.5)  q.xy *= rot(1.5707);\n    hs = fract(hs*575.913);\n    \n    float wd = .01, mv = .12;\n\n    //q *= r45;\n    vec2 spc = vec2(-.5,.0);\n    vec2 p2 = vec2(length(q+spc),length(q-spc));\n    vec2 pq = p2.x<p2.y? q+spc : q-spc;\n  \n    pq *= r45;\n \n    // main pattern\n    float d = length(pq.x);\n    d=abs(d)-mv;\n    //d=1e5;\n    // alt pattern\n    if(hs>.85) d = min(length(q.x)-mv,length(q.y)-mv);\n    \n    // posts\n    float b = length(vec2(abs(q.x)-.5,q.y))-(mv*1.5);\n    b = min(length(vec2(q.x,abs(q.y)-.5))-(mv*1.5),b);\n    d = min(b,d);\n    d = max(d,-(b+.1));\n    float md = d;\n    \n    d=abs(d)-wd;\n    \n    // grid lines\n    float d2 = abs(max(abs(q.x),abs(q.y))-.5)-.01;\n    d2 = max(d2,-(b+.075));\n    vec3 clr = hsv2rgb(vec3((uv.x*.035),1.,.5));\n\n    // color mixdown\n    if(M.z>0.) C = mix(C,vec3(.3),smoothstep(px,-px,d2));\n\n    C = mix(C,C*.35,smoothstep(.075+px,-px,d));\n    C = mix(C,clr,smoothstep(px,-px,d));\n    C = mix(C,vec3(.0025),smoothstep(px,-px,md));\n    \n    if(vv.x<-.3&&vv.x>-.305) C = vec3(.25);\n    \n    // gamma and output\n    C = pow(C,vec3(.4545));\n    O = vec4(C,1.);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}