{
    "Shader": {
        "info": {
            "date": "1582123580",
            "description": "false 3D\n\nNB: also nice with more lines. e.g. O.a++ < 26 ; O.a/2.-iTime     or 39 / 3\n",
            "flags": 0,
            "hasliked": 0,
            "id": "wtKSzz",
            "likes": 10,
            "name": "vector graphics ( 194 chars )",
            "published": 3,
            "tags": [
                "2d",
                "vector",
                "fake3d",
                "2tweets",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 423
        },
        "renderpass": [
            {
                "code": "// readable version at the end ;-)\n\nvoid mainImage(out vec4 O, vec2 u) {\n    for ( vec2 A = iResolution.xy,\n               U = ( u+u - A ) / A.y;\n          O.a++ < 13.;\n          O = max(O, ( 2.- abs(A)/fwidth(A) ).y *(3.+A.x)/8. )\n        )\n        A = cos( (O.a-iTime)/2. + vec2(0,33) ),\n        A.y = length( U +vec2(0, U.y*.3-.13*A) ) -.6 -.2*A.y;\n}/*\n\n\n\n\n\n// --- 213 chars\n\n#define mainImage(O,u)                               \\\n    vec2 A = iResolution.xy,                         \\\n         U = ( u+u - A ) / A.y, V;                   \\\n    for (float a = 0.,l; a++ < 13.;  )               \\\n        A = cos(.5*a - .5*iTime + vec2(0,33)),       \\\n        V = U, V.y = (V.y-.1*A.x) *1.3,              \\\n        l = length(V) -.6 -.2*A.y,                   \\\n        O = max(O, sqrt( (1.- abs(l)/fwidth(l) )*(2.+A.x)/3. )) /*\n\n\n\n\n\n// --- 218 chars\n\n#define mainImage(O,u)                               \\\n    vec2 A = iResolution.xy,                         \\\n         U = ( u+u - A ) / A.y;                      \\\n    for (float a = 0.,l; a < 6.28; a += .5 )         \\\n        A = cos(a - .5*iTime + vec2(0,1.57)),        \\\n        l = length( ( U - vec2(0,.1*A.x) ) * vec2(1,1.3)) -.6-.2*A.y,\\\n        O = max(O, sqrt( (1.- abs(l)/fwidth(l) )*(2.+A.x)/3. )) /*\n\n\n\n\n\n// --- 254 chars\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = ( 2.*u - R ) / R.y, A;\n\n    for (float a = 0.,l; a < 6.283; a += .5 )\n        A = cos(a - .5*iTime + vec2(0,1.57)),\n        l = length( ( U - vec2(0,.1*A.x) ) * vec2(1,1.3))-.6-.2*A.y,\n        O = max(O, smoothstep(1.5,0.,abs(l)/fwidth(l)) * (2.+A.x)/3. );\n    O = sqrt(O);\n}  /*\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}