{
    "Shader": {
        "info": {
            "date": "1693645141",
            "description": "-",
            "flags": 0,
            "hasliked": 0,
            "id": "mlsBWs",
            "likes": 16,
            "name": "color shape",
            "published": 3,
            "tags": [
                "circle",
                "sinus",
                "colorshape"
            ],
            "usePreview": 0,
            "username": "jezersek",
            "viewed": 283
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord - iResolution.xy*0.5)/(max(iResolution.x, iResolution.y)*0.5);\n    \n    float t = iTime * 2.;\n    float pulse_t = sin(t*0.003)*100. + sin(t*.5);\n    vec2 dir = vec2(sin(pulse_t), cos(pulse_t));\n    float k = dot(dir, uv.xy);\n    \n    vec3 rainbow = vec3(0.5+sin(uv.x+t)*0.5, 0.5+cos(uv.y+t)*0.5, 1);\n    vec3 col = vec3(0);\n    int N = 20;\n    for(int i=0; i<N; i++){\n        float I = float(i)/10.;\n        float d = sqrt(pow(uv.x, 2.) + pow(uv.y, 2.)) + sin(k*15. + t*3. + I*3.)*(0.02+I*0.01) - .2 - I*0.1 + sin(t)*0.1;\n        float l = exp(-pow((d)*200., 2.));\n        col += l * I;\n    }\n    \n    col *= rainbow;\n \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}