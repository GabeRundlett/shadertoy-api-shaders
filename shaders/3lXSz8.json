{
    "Shader": {
        "info": {
            "date": "1561966526",
            "description": "I noticed some artifacts on my LCD display and they inspired me",
            "flags": 0,
            "hasliked": 0,
            "id": "3lXSz8",
            "likes": 5,
            "name": "Broken LCD backlight",
            "published": 3,
            "tags": [
                "brokenlcdbacklight"
            ],
            "usePreview": 0,
            "username": "oemfoe",
            "viewed": 472
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n    uv -= 0.5;\n    uv.y /= aspect;\n    \n    \n    uv.x -= .2;\n    vec2 c = uv.xy * 3.;\n    uv = vec2(0.);\n    int it = 0;\n    for (int i = 0; i < 50; i++){\n        uv = vec2(\n            uv.x * uv.x - uv.y * uv.y,\n            2. * uv.x * uv.y\n        ) + c;\n        \n        it = i;\n        if (length(uv) > 2.)\n            break;\n    }\n    \n    if (it < 49)\n        uv = c;\n    uv /= 3.;\n    uv.x += iTime / 4.;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec2 uv2 = mod(uv, 0.2) * 5. - 0.5;\n    col += 1. - length(uv2) * 2.;\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}