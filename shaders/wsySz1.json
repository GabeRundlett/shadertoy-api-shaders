{
    "Shader": {
        "info": {
            "date": "1573402316",
            "description": "An effect I did a long time ago on touch designer. Unfortunately some optimisations doesn't translate well from compute shader to shader toy. ",
            "flags": 32,
            "hasliked": 0,
            "id": "wsySz1",
            "likes": 34,
            "name": "LineTV",
            "published": 3,
            "tags": [
                "2d",
                "retro",
                "line",
                "tv",
                "databending"
            ],
            "usePreview": 0,
            "username": "xjorma",
            "viewed": 1790
        },
        "renderpass": [
            {
                "code": "// Created by David Gallardo - xjorma/2019\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n\nconst float LineRatio \t\t= 0.18;\nconst float Hardness\t\t= 0.5;\nconst float Width\t\t\t= 2.5;\nconst float Mode\t\t\t= 0.;\nconst float Speed\t\t\t= -0.01;\n\nconst int \tnbSample \t\t= 15; // Odd number only\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2\tuv = fragCoord / iResolution.xy;\n\n    float\ttex = texture(iChannel0, uv).g;\n    \t\n\tfloat width = Mode < .5 ? Width : 1. + tex;\n\n\tvec2 p[nbSample];\n\t\n\tfor(int i = 0 ; i < nbSample ; ++i)\n\t{\n\t\tfloat v = texture(iChannel0, uv.xy + vec2(float(i - (nbSample / 2 - 1)) / iResolution.x, 0.)).r;\n\t\tv += fract(iTime * Speed);\n\t\tp[i] = vec2(floor(v * LineRatio * iResolution.x),fract(v * LineRatio * iResolution.x)); \n\t}\n\n\tfloat c = 0.;\n\n\tfor(int i = 0 ; i < nbSample - 1 ; ++i)\n\t{\n\t\tif( p[i+1].x - p[i].x > 0.5 )\n\t\t{\n\t\t\tfloat v = float(i - (nbSample / 2 - 1)) + (1. - p[i].y) / ((1. - p[i].y) + p[i + 1].y);\n\t\t\tc += max(0.,1.-abs(v/width));\n\t\t}\n\t}\n\t\n\tvec3 color = mix(vec3(0),vec3(tex),pow(c,Hardness));\n\tfragColor = vec4(color,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Created by David Gallardo - xjorma/2019\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float sum = 0.;\n\n    for( float i = 0. ; i < fragCoord.x ; i++)\n\t{\n\t\tsum += texture(iChannel0, vec2(i, fragCoord.y) / iResolution.xy).g / iResolution.x;\n\t}\n    \n    float lum = texture(iChannel0, fragCoord / iResolution.xy).g;\n    \n    fragColor = vec4(sum, lum, 0, 1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}