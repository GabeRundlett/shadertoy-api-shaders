{
    "Shader": {
        "info": {
            "date": "1520718635",
            "description": "Some kind of rusted tunnel",
            "flags": 0,
            "hasliked": 0,
            "id": "4dGyzR",
            "likes": 12,
            "name": "SPACEJUNK",
            "published": 3,
            "tags": [
                "raymarch"
            ],
            "usePreview": 0,
            "username": "greendestruction",
            "viewed": 804
        },
        "renderpass": [
            {
                "code": "/* greetings to shadertoy friends everywhere! */\n/* no textures were harmed in the making of this shader */\n\nmat2 rot(float x) {\n    return mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nfloat map(vec3 p) {\n\tvec3 q = abs(p);\n    float c = 0.9;\n    float d = max(q.x, max(q.y, q.z)) - 1.0;\n    d = max(d, c - max(q.y, q.z));\n    d = max(d, c - max(q.x, q.z));\n    d = max(d, c - max(q.x, q.y));\n    return d;\n}\n\nfloat trace(vec3 o, vec3 r) {\n    float t = 0.0;\n    for (int i = 0; i < 16; ++i) {\n        t += map(o + r * t);\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 fc = vec3(0.0);\n    float m = 1.0;\n    \n    for (int n = 0; n < 5; ++n) {\n        vec3 po = vec3(0.0, 0.0, iTime * 0.5);\n        vec3 pr = normalize(vec3(uv, 1.0));\n        \n        pr.xz *= rot(sin(iTime * 0.25) * 0.25);\n\n        float td = 0.75 + float(n);\n        \n        float pt = 0.0;\n        for (int i = 0; i < 16; ++i) {\n            vec3 mp = po + pr * pt;\n            pt += td - length(mp.xy);\n        }\n\n        vec3 pw = po + pr * pt;\n        \n        pw.xy /= td;\n\n        float tc = 5.0;\n        \n        pw.xy *= rot(iTime * 0.125 * (mod(floor(pw.z / tc) + float(n), 2.0) * 2.0 - 1.0));\n        \n        pw.z = (fract(pw.z / tc) - 0.5) * tc;\n\n        vec3 st = vec3(atan(pw.y, pw.x) / 3.141592, length(pw), 1.0);\n\n        st.x = abs(st.x) - 0.5;\n        st.y -= 0.5;\n\n        st.xy *= 1.0 + float(n) * 0.125;\n\n        for (int i = 0; i < 8; ++i) {\n            st.xy = abs(st.xy) - 0.5;\n            st.xy *= rot(3.141592 * 0.25);\n            st *= 1.1;\n        }\n\n        st.xy /= st.z;\n\n        vec3 r = normalize(vec3(st.xy, 1.0));\n        vec3 o = vec3(0.0, 0.0, -4.0 - float(n));\n        \n        float t = trace(o, r);\n        vec3 w = o + r * t;\n        float fd = map(w);\n\n        float f = 1.0 / (1.0 + pt * pt * 0.1 + fd * 100.0);\n        \n        float tb = 1.0 / (1.0 + t * t * 0.1);\n        vec3 tex = mix(vec3(1.0, 0.25, 0.25), vec3(0.5, 1.0, 0.5), tb);\n        fc += tex * f * m;\n        m *= max(sign(fd - 0.1), 0.0);\n    }\n\n    fragColor = vec4(fc, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}