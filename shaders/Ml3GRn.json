{
    "Shader": {
        "info": {
            "date": "1467597882",
            "description": "Test for the first challenge",
            "flags": 0,
            "hasliked": 0,
            "id": "Ml3GRn",
            "likes": 1,
            "name": "[SH16A] Reduction test",
            "published": 3,
            "tags": [
                "testingtoreducethecode"
            ],
            "usePreview": 0,
            "username": "hat",
            "viewed": 627
        },
        "renderpass": [
            {
                "code": "#define J normalize(vec3\n                   \n//Sphere evaluation\nfloat S(in vec3 p,in float s){return sqrt(dot(p,p))-s;}\n\n\n//Distance function (spheres and plane)\nvec2 Z(in vec3 p){\n    vec2 r=vec2(p.y,13.);    \n    for(float i=0.;i< 25.;i++) {\n        vec4 a=vec4(floor(i/5.)-2.,mod(i,2.)==0.?.4:.25,mod(i,5.)-2.,floor(.5*i));\n        float o=S(p-a.xyz,a.y);\n        r=r.x<o?r:vec2(o,a.w);\n    }    \n    return r;\n}\n\n\n//Ray marching function\nvec2 R(in vec3 r,in vec3 R,in float a,in float b){\n    float t=a,m=0.;\n    for( int i=0;i<=63;i++){\n\t    vec2 r=Z(r+R*t);\n        t+=r.x;\n\t    m=r.y;\n    }\n    return vec2(t,t>b?-1.:m);\n}\n\n\n//Normal calculation\nvec3 N(in vec3 p){\n    float a=Z(p).x;\n\tvec3 e = vec3(.001,0.,0.);\n\treturn J(vec3(a-Z(p-e.xyy).x,a-Z(p-e.yxy).x,a-Z(p-e.yyx).x)));\n}\n\n\n//Rendering\nvec3 A( in vec3 r, in vec3 D ){ \n    vec3 c=vec3(.7,.9,1.)+D.y*vec3(.8);\n    vec2 u=R(r,D,0.,20.);\n    float t=u.x,m=u.y;\n    if( m>-0.5 ){\n        vec3 p=r+t*D,n=N(p),f=reflect(D,n);\n        \n        //Sphere colors\n        for(float i=0.;i< 13.;i++)c+=(vec3(1.-.08*i,.03*i,.06*i)-c)*step(-m,-i); \n        \n        //For the plane\n\t\tif(m > 12.5) {\n            if( mod(mod(floor(p.x),2.)+mod(floor(p.z),2.),2.)<.5)c=vec3(.4);\n            \n            //Textured tiles\n            else c=vec3(.5)*texture(iChannel0,(floor(25.6*p.xz+vec2(37.,17.))+.5)/256.,-100.).y;\n            \n            //Soft shadows\n            if(max(abs(p.x),abs(p.z))<1.5){\n                vec2 q=mod(p.xz+.5,1.)-.5;\n                c*=smoothstep(.0,.5,sqrt(dot(q,q)));\n            }\n        }\n        \n        //lighting\n  \t\tvec3  l=J(vec3(-.6,.7,-.5)));\n        float a=clamp(0.5*(1.+n.y),0.,1.),d=clamp(dot(n,l),0.,1.),s=pow(clamp(dot(f,l),0.,1.),16.);      \n        d *= float(R(p,l,.01,2.5).y==-1.);\n\t\tc*=d*vec3(1.2,1.02,.66)+a*vec3(.25,0.35,.5);\n\t\tc+=vec3(s*d);\n    }\n\treturn c;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 p=-1.+2.*fragCoord.xy/iResolution.xy;\n\tp.x *= iResolution.x/iResolution.y;\t\n\tvec3 r = vec3(3.*cos(5.),2.,3.*sin(5.));\n\tvec3 t = vec3(0.,-.2,.0);\n    vec3 w = J(t-r)),u = J(cross(w,vec3(0.,1.,0.)))),v = J(cross(u,w)));\n\tvec3 R = J(mat3(u,v,w)*vec3(p.xy,2.)));\n    fragColor=vec4(pow(A(r,R),vec3(.5)),1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}