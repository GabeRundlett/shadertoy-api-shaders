{
    "Shader": {
        "info": {
            "date": "1620439732",
            "description": "Bills Dios de la Destruccion",
            "flags": 0,
            "hasliked": 0,
            "id": "NdBSzy",
            "likes": 1,
            "name": "Bills Dios de la Destruccion",
            "published": 3,
            "tags": [
                "2d",
                "anime",
                "billsdiosdeladestruccion"
            ],
            "usePreview": 0,
            "username": "jorge2017a1",
            "viewed": 299
        },
        "renderpass": [
            {
                "code": "//por jorge2017a1 ----jorgeFloresP---7/may/2021\n// referencia \n////-------------------\n/// IQ funciones....librerias\n//https://www.shadertoy.com/view/tlGBW3\n//Created by manu210404 in 2021-03-13\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r; }\n\nvec3 ponerBorde(vec3 pColObj, vec3 colOut, float distObj )\n{\n  colOut = mix(colOut,pColObj ,S( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S(abs( distObj),0.0));\n  return colOut;\n}\n\nfloat opU(float d1, float d2) {return min(d1, d2); }\nconst vec3 colNegro=vec3(0.0);\nconst vec3 colGris=vec3(0.49,0.49,0.49);\nconst vec3 colGris2=vec3(0.6);\nconst vec3 colBlanco=vec3(1.0);\nconst vec3 colRojo=vec3(1.0,0.0,0.0);\nconst vec3 colAzul=vec3(0.0,0.0,1.0);\nconst vec3 colAzul2=vec3(0.0,0.0,0.2);\nconst vec3 colVerde=vec3(0.0,1.0,0.0);\n\n#define POLY(N) (in vec2 p, in vec2[N] v) {const int n=v.length();float d=dot(p-v[0],p-v[0]);float s=1.;for(int i=0,j=n-1;i<n;j=i,i++){vec2 e=v[j]-v[i];vec2 w=p-v[i];vec2 b=w-e*clamp(dot(w,e)/dot(e,e),0.,1.);d=min(d,dot(b,b));bvec3 cond=bvec3(p.y>=v[i].y,p.y<v[j].y,e.x*w.y>e.y*w.x);if(all(cond)||all(not(cond))) s=-s;}return s*sqrt(d);}\n//***------------****-----------****------------******-------\nfloat sdPoly33 POLY(33)\nvec2 pt33[ 33]=vec2[](  \nvec2(.34,.59),vec2(.31,.61),vec2(.30,.62),vec2(.30,.63),vec2(.30,.66),\nvec2(.27,.70),vec2(.26,.73),vec2(.27,.84),vec2(.28,.92),vec2(.29,.94),\nvec2(.28,.97),vec2(.30,.98),vec2(.31,.99),vec2(.33,.97),vec2(.38,.91),\nvec2(.43,.80),vec2(.45,.70),vec2(.47,.70),vec2(.52,.70),vec2(.53,.71),\nvec2(.55,.78),vec2(.58,.84),vec2(.61,.91),vec2(.65,.96),vec2(.66,.98),\nvec2(.69,.99),vec2(.69,.96),vec2(.71,.85),vec2(.71,.72),vec2(.69,.67),\nvec2(.69,.63),vec2(.64,.59),vec2(.34,.59) );\n\nfloat sdPoly26 POLY(26)\nvec2 pt26[ 26]=vec2[](  \nvec2(.33,.59),vec2(.45,.70),vec2(.46,.70),vec2(.52,.70),vec2(.53,.71),\nvec2(.64,.60),vec2(.64,.57),vec2(.63,.55),vec2(.62,.53),vec2(.62,.52),\nvec2(.59,.50),vec2(.57,.50),vec2(.56,.48),vec2(.56,.47),vec2(.54,.46),\nvec2(.51,.45),vec2(.46,.45),vec2(.45,.46),vec2(.43,.47),vec2(.43,.49),\nvec2(.39,.51),vec2(.38,.51),vec2(.38,.53),vec2(.36,.54),vec2(.35,.56),\nvec2(.33,.59) );\n\nfloat sdPoly7 POLY(7)\nvec2 pt7[ 7]=vec2[](  \nvec2(.37,.58),vec2(.40,.57),vec2(.44,.57),vec2(.45,.55),vec2(.44,.55),\nvec2(.40,.56),vec2(.37,.58) );\n\nfloat sdPoly5 POLY(5)\nvec2 pt5[ 5]=vec2[](  \nvec2(.52,.55),vec2(.54,.57),vec2(.61,.58),vec2(.59,.56),vec2(.52,.55) );\n\nfloat sdPoly7b POLY(7)\nvec2 pt7b[ 7]=vec2[](  \nvec2(.43,.61),vec2(.45,.59),vec2(.46,.58),vec2(.46,.58),vec2(.45,.59),\nvec2(.43,.61),vec2(.43,.61) );\n\nfloat sdPoly7c POLY(7)\nvec2 pt7c[ 7]=vec2[](  \nvec2(.52,.58),vec2(.53,.60),vec2(.55,.61),vec2(.55,.61),vec2(.53,.60),\nvec2(.52,.58),vec2(.52,.58) );\n\nfloat sdPoly7d POLY(7)\nvec2 pt7d[ 7]=vec2[](  \nvec2(.44,.54),vec2(.45,.54),vec2(.46,.55),vec2(.47,.55),vec2(.45,.54),\nvec2(.44,.54),vec2(.44,.54) );\n\nfloat sdPoly7e POLY(7)\nvec2 pt7e[ 7]=vec2[](  \nvec2(.52,.55),vec2(.53,.54),vec2(.54,.53),vec2(.54,.53),vec2(.53,.54),\nvec2(.52,.55),vec2(.52,.55) );\n\nfloat sdPoly10 POLY(10)\nvec2 pt10[ 10]=vec2[](  \nvec2(.48,.50),vec2(.47,.51),vec2(.46,.51),vec2(.47,.52),vec2(.49,.52),\nvec2(.52,.51),vec2(.52,.51),vec2(.51,.50),vec2(.50,.50),vec2(.48,.50) );\n\nfloat sdPoly3 POLY(3)\nvec2 pt3[ 3]=vec2[](  \nvec2(.49,.51),vec2(.49,.50),vec2(.49,.51) );\n\nfloat sdPoly17 POLY(17)\nvec2 pt17[ 17]=vec2[](  \nvec2(.43,.47),vec2(.45,.47),vec2(.46,.47),vec2(.48,.47),vec2(.50,.47),\nvec2(.52,.47),vec2(.54,.47),vec2(.56,.47),vec2(.56,.47),vec2(.54,.47),\nvec2(.52,.47),vec2(.50,.47),vec2(.48,.47),vec2(.46,.47),vec2(.45,.47),\nvec2(.43,.47),vec2(.43,.47) );\n\nfloat sdPoly13 POLY(13)\nvec2 pt13[ 13]=vec2[](  \nvec2(.43,.47),vec2(.43,.47),vec2(.43,.45),vec2(.44,.44),vec2(.49,.44),\nvec2(.53,.44),vec2(.56,.45),vec2(.56,.46),vec2(.56,.47),vec2(.54,.46),\nvec2(.47,.45),vec2(.44,.46),vec2(.43,.47) );\n\nfloat sdPoly25 POLY(25)\nvec2 pt25[ 25]=vec2[](  \nvec2(.43,.46),vec2(.55,.46),vec2(.56,.42),vec2(.78,.36),vec2(.81,.33),\nvec2(.82,.29),vec2(.85,.26),vec2(.88,.19),vec2(.89,.17),vec2(.90,.12),\nvec2(.89,.10),vec2(.10,.10),vec2(.09,.12),vec2(.08,.15),vec2(.10,.18),\nvec2(.10,.21),vec2(.13,.23),vec2(.15,.27),vec2(.17,.29),vec2(.17,.31),\nvec2(.20,.35),vec2(.23,.38),vec2(.42,.42),vec2(.43,.43),vec2(.43,.46) );\n\nfloat sdPoly18 POLY(18)\nvec2 pt18[ 18]=vec2[](  \nvec2(.19,.40),vec2(.35,.42),vec2(.36,.40),vec2(.39,.39),vec2(.47,.38),\nvec2(.56,.38),vec2(.60,.40),vec2(.63,.42),vec2(.79,.40),vec2(.78,.37),\nvec2(.73,.31),vec2(.64,.26),vec2(.51,.23),vec2(.37,.25),vec2(.27,.29),\nvec2(.21,.34),vec2(.19,.38),vec2(.19,.40) );\n\nfloat sdPoly5b POLY(5)\nvec2 pt5b[ 5]=vec2[](  \nvec2(.49,.35),vec2(.44,.31),vec2(.49,.27),vec2(.54,.32),vec2(.49,.35) );\n\nfloat sdPoly5c POLY(5)\nvec2 pt5c[ 5]=vec2[](  \nvec2(.21,.36),vec2(.34,.40),vec2(.36,.39),vec2(.24,.33),vec2(.21,.36) );\n\nfloat sdPoly5d POLY(5)\nvec2 pt5d[ 5]=vec2[](  \nvec2(.39,.37),vec2(.42,.37),vec2(.36,.27),vec2(.30,.28),vec2(.39,.37) );\n\nfloat sdPoly5e POLY(5)\nvec2 pt5e[ 5]=vec2[](  \nvec2(.56,.37),vec2(.59,.38),vec2(.68,.30),vec2(.62,.27),vec2(.56,.37) );\n\nfloat sdPoly5f POLY(5)\nvec2 pt5f[ 5]=vec2[](  \nvec2(.61,.39),vec2(.63,.40),vec2(.76,.37),vec2(.73,.34),vec2(.61,.39) );\n\nfloat sdPoly7f POLY(7)\nvec2 pt7f[ 7]=vec2[](  \nvec2(.37,.53),vec2(.39,.52),vec2(.40,.51),vec2(.40,.51),vec2(.39,.52),\nvec2(.37,.53),vec2(.37,.53) );\n\nfloat sdPoly7g POLY(7)\nvec2 pt7g[ 7]=vec2[](  \nvec2(.62,.54),vec2(.60,.53),vec2(.59,.52),vec2(.59,.51),vec2(.60,.53),\nvec2(.62,.53),vec2(.62,.54) );\n\nfloat sdPoly5g POLY(5)\nvec2 pt5g[ 5]=vec2[](  \nvec2(.47,.70),vec2(.43,.68),vec2(.44,.68),vec2(.48,.70),vec2(.47,.70) );\n\nfloat sdPoly5h POLY(5)\nvec2 pt5h[ 5]=vec2[](  \nvec2(.52,.70),vec2(.55,.67),vec2(.56,.67),vec2(.52,.70),vec2(.52,.70) );\n\nfloat sdPoly6 POLY(6)\nvec2 pt6[ 6]=vec2[](  \nvec2(.71,.83),vec2(.66,.82),vec2(.65,.80),vec2(.66,.79),vec2(.71,.79),\nvec2(.71,.83) );\n\nfloat sdPoly5i POLY(5)\nvec2 pt5i[ 5]=vec2[](  \nvec2(.17,.29),vec2(.17,.25),vec2(.18,.25),vec2(.17,.29),vec2(.17,.29) );\n\nfloat sdPoly9 POLY(9)\nvec2 pt9[ 9]=vec2[](  \nvec2(.28,.28),vec2(.26,.26),vec2(.23,.25),vec2(.19,.24),vec2(.19,.24),\nvec2(.23,.25),vec2(.26,.26),vec2(.28,.27),vec2(.28,.28) );\n\nfloat sdPoly7h POLY(7)\nvec2 pt7h[ 7]=vec2[](  \nvec2(.70,.28),vec2(.73,.26),vec2(.78,.24),vec2(.78,.24),vec2(.74,.26),\nvec2(.71,.28),vec2(.70,.28) );\n\nfloat sdPoly5j POLY(5)\nvec2 pt5j[ 5]=vec2[](  \nvec2(.82,.29),vec2(.81,.25),vec2(.81,.25),vec2(.82,.29),vec2(.82,.29) );\n//***------------****-----------****------------******-------\nvec3 RostroBills(in vec2 pp, vec3 col) \n{\n  vec2 p=pp;\n  \n   float sd1 = sdPoly33(p, pt33);\n   float sd2 = sdPoly26(p, pt26);\n   float sd3 = sdPoly7(p, pt7);\n   float sd4 = sdPoly5(p, pt5);\n   float sd5 = sdPoly7b(p, pt7b);\n   float sd6 = sdPoly7c(p, pt7c);\n   float sd7 = sdPoly7d(p, pt7d);\n   float sd8 = sdPoly7e(p, pt7e);\n   float sd9 = sdPoly10(p, pt10);\n   float sd10 = sdPoly3(p, pt3);\n   float sd11 = sdPoly17(p, pt17);\n   float sd12 = sdPoly13(p, pt13);\n   float sd13 = sdPoly25(p, pt25);\n   float sd14 = sdPoly18(p, pt18);\n   float sd15 = sdPoly5b(p, pt5b);\n   float sd16 = sdPoly5c(p, pt5c);\n   float sd17 = sdPoly5d(p, pt5d);\n   float sd18 = sdPoly5e(p, pt5e);\n   float sd19 = sdPoly5f(p, pt5f);\n   float sd20 = sdPoly7f(p, pt7f);\n   float sd21 = sdPoly7g(p, pt7g);\n   float sd22 = sdPoly5g(p, pt5g);\n   float sd23 = sdPoly5h(p, pt5h);\n   float sd24 = sdPoly6(p, pt6);\n   float sd25 = sdPoly5i(p, pt5i);\n   float sd26 = sdPoly9(p, pt9);\n   float sd27 = sdPoly7h(p, pt7h);\n   float sd28 = sdPoly5j(p, pt5j);\n   float sd29= sdCircle(p-vec2(0.55,0.56), 0.01 );\n   float sd30= sdCircle(p-vec2(0.43,0.56), 0.01 );\n   \n   sd1= opU(sd1, sd2) ;\n   col= ponerBorde(colGris,col,sd1);// 2 orejas\n   //col= ponerBorde(colGris,col,sd2);// rostro\n   col= ponerBorde(colBlanco,col,sd3);// ojo izq\n   col= ponerBorde(colBlanco,col,sd4);// ojo der\n   col= ponerBorde(colNegro,col,sd5); //linea ceja\n   col= ponerBorde(colNegro,col,sd6); //linea ceja\n   col= ponerBorde(colNegro,col,sd7);\n   col= ponerBorde(colNegro,col,sd8);\n   col= ponerBorde(colGris2,col,sd9); ///nariz\n   col= mix(col,colNegro,S( sd10,0.0));\n   col= ponerBorde(colRojo,col,sd11); \n   col= ponerBorde(vec3(0.4,0.4,0.6),col,sd13);  //cuerpo\n   col= ponerBorde(colVerde,col,sd12); //anillo \n   col= ponerBorde(colAzul2,col,sd14); //adorno\n   col= ponerBorde(colRojo,col,sd15);  //figura 1\n   col= ponerBorde(colAzul,col,sd16);  //figura 2\n   col= ponerBorde(colAzul,col,sd17);  //figura 2\n   col= ponerBorde(colAzul,col,sd18);  //figura 2\n   col= ponerBorde(colAzul,col,sd19);  //figura 2\n   col= ponerBorde(colNegro,col,sd20);  //linea 1\n   col= ponerBorde(colNegro,col,sd21);  //linea 2\n   col= ponerBorde(colNegro,col,sd22);  //linea 2\n   col= ponerBorde(colNegro,col,sd23);  //linea 2\n   col= ponerBorde(colAzul,col,sd24);  //cuadro\n   col= ponerBorde(colNegro,col,sd25);  //linea 2\n   col= ponerBorde(colNegro,col,sd26);  //linea 2\n   col= ponerBorde(colNegro,col,sd27);  //linea 2\n   col= ponerBorde(colNegro,col,sd28);  //linea 2\n   col= ponerBorde(colNegro,col,sd29);  //pupila\n   col= ponerBorde(colNegro,col,sd30);  //pupila\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    float t=iTime*1.0;\n    vec2 p=uv*0.5-vec2(-0.5,-0.6);\n    vec3 col=vec3(1.0); //vec3(0.25);\n    //col=RostroBills(p*0.5-vec2(0.0,0.0), col);\n    //col=RostroBills(p*0.5-vec2(-0.5,-0.25), col);\n    col=RostroBills(p+ vec2(0.5*sin(iTime),0.0), col);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}