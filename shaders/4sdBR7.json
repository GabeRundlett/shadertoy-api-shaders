{
    "Shader": {
        "info": {
            "date": "1524532374",
            "description": "...",
            "flags": 96,
            "hasliked": 0,
            "id": "4sdBR7",
            "likes": 4,
            "name": "spiral 001 - blacklight",
            "published": 3,
            "tags": [
                "hypnosis"
            ],
            "usePreview": 0,
            "username": "panoptimom",
            "viewed": 561
        },
        "renderpass": [
            {
                "code": "//adjust this number to change how much audio affects the spiral.\nfloat sensitivity = 1.;\n\nvec2 mo;\nvec2 uv;\nfloat ratio;\n\n\nfloat aud;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float currentAud = texture(iChannel0, (0.25+vec2(0.0,0.0)) / iChannelResolution[0].xy, -100.0 ).x;\n    aud += min(100.,currentAud*10.*sensitivity);\n    aud = max(0., aud);\n    float speed = 0.9420866;\n    float t0 = (-iTime)*speed;\n    float t1 = cos(t0);\n    float t2 = 0.5*t1+0.5;\n    float zoom=30.+sin(iTime*.25)*3.;\n    float ratio = iResolution.x/iResolution.y;\n\tvec2 uv = fragCoord.xy / iResolution.xy*1.-0.5;uv.x*=ratio;uv*=zoom;\n    vec2 mo = iMouse.xy / iResolution.xy*2.-1.;mo.x*=ratio;mo*=zoom;\n    \n    //mo = aud.xy;\n    //mo *= mo;\n    //uv += mo*20.;\n\n    \n    // uv / mo\n    vec2 uvo = uv;//-mo;\n    float phase=1.32961+sin(t2*.2);\n    float tho = length(uvo)*phase+t1;\n    float thop = t0*8.;\n    \n    // map spiral\n   \tuvo+=vec2(tho*cos(tho-1.025*thop),tho*sin(tho-1.025*thop));\n    //uvo *= .5+(sin(aud)*10.94);\n    uvo *= 2.85;\n    //uvo -=(heartRaw(fragCoord)*90.)-90.;\n    //uvo *=(heartRaw(fragCoord)*12.);\n    \n    //uvo += ;\n    float xSin = sin(iTime*.5)*3.;\n    float ySin = sin(iTime*.69)*3.;\n    uvo.x += sin(tho);\n    uvo.y -= sin(tho)+(mix(uv.y, ySin, tho)*.1);\n    \n    \n    // metaball\n    float mbr = 1.9+max(0.,aud*5.94);\n    float mb = mbr / dot(uvo,uvo)+.25;\n\n\t//display\n    float d0 = mb;\n    //float d0 = mb+(sin(mb)*(((-uvo.x*.05)+(cos(uvo.x*.0625)*1.)+24.*sin(t1*.125))*sin(t0*.123)*.05));\n    \n    float d = smoothstep(d0*.53,d0+.25,.5);\n    \n    //vec3 heart = heart(fragCoord);\n    //vec4 heartdark =  vec4(-heart.y, -heart.y, -heart.y, -heart.y)*2.;\n    //heart.y *= -1.;\n    \n        // Normalized pixel coordinates (from 0 to 1)\n    vec2 uvi = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos((t1*.21)+uvi.xyx+vec3(0,2,4));\n    col.r -= .25;\n    col.g = max(col.g-.5,.2);\n    // Output to screen\n    vec4 fragColorX = vec4(col,1.0);\n    \n\tfloat r = mix(1./d, d, 1.81)+(sin(t2*.022)*.0191)+(sin(uvo.y*.0325)*.25+(uvo.x*.0024))+(sin(aud)*.2);\n    float g = mix(1./d, d, 1.55)-(sin(t2*.028)*.4)-(cos(t1*.023)*.8+(aud*.1))+((cos(uvo.y*(.03125+((cos(t0*.1))*.03))))*1.9);\n    float b = mix(1./d, d, 1.34)+(sin(t1*.012)*.1)-(sin(t2*.056)*1.8)-(sin(t2*.0307)*.02-(uv.y*(t2*.032)*.2));\n    vec4 c = vec4(r-.5,g,b,1.);//+heartdark;\n    \n    fragColor = c * ((fragColorX*.5)+.3);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float aud;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float oldAud = texture(iChannel1, (0.25+vec2(0.0,0.0)) / iChannelResolution[0].xy, -100.0 ).x;\n    float currentAud = texture(iChannel0, (0.25+vec2(0.0,0.0)) / iChannelResolution[0].xy, -100.0 ).x;\n    //aud += min(100.,currentAud*8.)+oldAud;\n    //aud -= (iTimeDelta*.1);\n    //aud = max(0., aud);\n\n    fragColor = vec4(mix(oldAud, currentAud*2.,.1),0.0,1.0,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 14610,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/m-flanigan/gas-pop-iv"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}