{
    "Shader": {
        "info": {
            "date": "1533429358",
            "description": "Some feedback. ",
            "flags": 32,
            "hasliked": 0,
            "id": "llcczf",
            "likes": 20,
            "name": "hueish",
            "published": 3,
            "tags": [
                "hue",
                "feedback",
                "nearest"
            ],
            "usePreview": 0,
            "username": "aferriss",
            "viewed": 948
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    \n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 tc = uv;\n    float aspect = iResolution.x / iResolution.y;\n    \n    uv = uv * 2.0 - 1.0;\n    uv.x *= aspect;\n    \n   \tuv += vec2(sin(iTime) , cos(iTime))*0.025;\n    \n    float s = 1.0 - smoothstep(0.0, 0.6, length(max(abs(uv.x), abs(uv.y)) ));\n    s = sin(s);\n    \n    tc = 2.0 * tc - 1.0;\n    tc *= 0.999;\n    tc = tc * 0.5 + 0.5;\n    \n    vec3 h = texture(iChannel0, tc).rgb;\n    h = rgb2hsv(h);\n    h.r += iTime*0.1;\n    \n    vec2 texel = 1.0 / iResolution.xy;\n    vec2 d = texel*0.75;\n    vec3 p = texture(iChannel0, tc + vec2(sin(h.r*6.283),cos(h.r*6.283))*d ).rgb;\n\n    \n    vec3 c = vec3(s,0.0,0.0) + (p);\n    \n    c = clamp(c, vec3(0.0), vec3(1.0));\n    \n    c = rgb2hsv(c);\n    c.r += 0.002;\n        \n    c = hsv2rgb(c);\n    c = c.r > 0.99 ? fract(c.rgb) : c;\n    \n    fragColor = vec4(c , 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}