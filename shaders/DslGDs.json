{
    "Shader": {
        "info": {
            "date": "1667013302",
            "description": "Yet another fractal mosaic pattern.",
            "flags": 8,
            "hasliked": 0,
            "id": "DslGDs",
            "likes": 4,
            "name": "Fractal mosaic 33 (music)",
            "published": 3,
            "tags": [
                "fractal",
                "music",
                "mosaic",
                "rug"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 316
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    \n    vec3 col = vec3(0.);\n        \n    vec2 uv = (fragCoord)/iResolution.y/4.0;\n    \n    uv += vec2(iTime/2.0,iTime/3.0)/16.0;\n    if(iMouse.z>.5)\n    uv = uv.xy + iMouse.xy / iResolution.xy/4.;\n    vec2 uv1 = uv;\n    for(int k = 0; k < 6; k++){ \n        vec2 offset =\n            vec2(sign(uv.y-uv.x)*uv.x,uv.y)*2.\n            //vec2(sign(uv.y-uv.x)*sign(uv1.x-uv1.y)*mod(uv.x*2.,2.),mod(uv.y,2.)*2.)\n        ;\n        //offset += floor(uv.x-uv.y)/8.;\n\n        uv1 = uv;\n        uv = abs(fract(uv.yx-offset)-.5);\n        if(uv.y > uv.x) col = vec3(col.yz,abs(uv.x-uv.y));\n        //else uv *= uv;\n    }\n    \n    fragColor = vec4(min(col*2.,vec3(1.)),1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define fmod(x,y) mod(floor(x),y)\n//#define fmod(x,y) mod(floor((x)/(1.+mod(floor((x)/8.),2.))),y)\n#define fpow(x,y) pow(y,mod(floor(x),y))\nvec2 mainSound(int samp, float t){\n\n  //t += fpow(t*2.,2.);\n  //t = t*(1. + fmod(t*8./2.,2.))/2.;\n\n  float s1 =\n      8.,\n  m1 =\n      fmod(floor(t),s1);\n  //t = t + floor(t*s1+floor(t/s1))/s1;\n  t /=\n      (1.+fmod(floor(t*2.),2.))\n      //(1.+fmod(floor(t/(1.+m1)),2.))\n  ;\n  float m3 =\n      fmod((t*s1)/(m1+.5),s1);\n  t *=\n      (1.+fmod(floor(t*s1),2.))\n      //(1.+fmod(floor(t*s1)+floor(t/s1),2.))\n  ;\n      \n  float a=\n      sqrt((1.-sqrt(fract(t/s1))))*.2\n  ,\n\n  nb = pow(2.,(m3)/5.+7.);\n\n  return vec2(fract(t*nb*.998)*a\n   ,fract(t*nb)*a);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}