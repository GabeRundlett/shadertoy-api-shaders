{
    "Shader": {
        "info": {
            "date": "1588434009",
            "description": "Testing the effect of two patterns on perceived brightness.",
            "flags": 0,
            "hasliked": 0,
            "id": "wssfD7",
            "likes": 4,
            "name": "Brightness illusion test",
            "published": 3,
            "tags": [
                "opticalillusion",
                "glow",
                "brightness"
            ],
            "usePreview": 0,
            "username": "Zavie",
            "viewed": 518
        },
        "renderpass": [
            {
                "code": "/*\n\nA simple yet powerful brightness illusion.\nThe shader toggles two patterns to see how they contribute\nto the illusion.\n\n--\nZavie\n\n*/\n\nvec3 brightnessIllusion(vec2 uv,\n                        vec2 aspect_ratio,\n                        bool enable_glow,\n                        bool enable_texture,\n                        bool enable_stripes)\n{\n    float radius = 0.1;\n    float num_stripes = 72.;\n\n    vec2 p = (uv - 0.5) * aspect_ratio;\n    float d = length(p);\n    float isCircle = smoothstep(radius + 0.002, radius, d);\n\n    vec3 background = vec3(0.);\n    vec3 circle = vec3(1.);\n    float contrast = 1.;\n\n    vec3 color = background;\n    if (enable_texture)\n    {\n        color = texture(iChannel0, uv).rgb;\n        contrast = pow(1. + radius -d, 8.);\n    }\n    if (enable_stripes)\n    {\n    \tfloat angle = atan(p.y, p.x);\n    \tfloat isStripe = smoothstep(0.4, 0.6, abs(fract(angle * num_stripes * 0.5 / acos(-1.)) * 2. - 1.));\n        vec3 stripes = vec3(mix(0., 1., isStripe));\n        color = mix(color, stripes, contrast);\n    }\n    if (enable_glow)\n    {\n\t    vec3 glow = mix(vec3(1.), vec3(1., 1., 0.2), pow(1. + radius -d, 10.));\n    \tcolor = mix(color, glow, 1.-glow.b);\n    }\n    color = mix(color, circle, isCircle);\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 aspect_ratio = vec2(1, iResolution.y / iResolution.x);\n\n\tfloat t1 = abs(fract(iTime / 10.) * 2. - 1.);\n    bool enable_texture = t1 < 0.5;\n\n    bool enable_glow = uv.x > 0.5;\n    bool enable_stripes = uv.y > 0.5;\n    vec3 color = brightnessIllusion(fract(uv*2.),\n                                    aspect_ratio,\n                                    enable_glow,\n                                    enable_texture,\n                                    enable_stripes);\n\n    fragColor = vec4(pow(color, vec3(1./2.2)),1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}