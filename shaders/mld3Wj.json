{
    "Shader": {
        "info": {
            "date": "1683325291",
            "description": "All year long I'm going to just focus on truchet tiles and the likes!\n\nwow surprised that I made it to 17 truchet shaders so far!",
            "flags": 64,
            "hasliked": 0,
            "id": "mld3Wj",
            "likes": 24,
            "name": "Year of Truchets #017",
            "published": 3,
            "tags": [
                "2d",
                "truchet",
                "tile",
                "polarwarp"
            ],
            "usePreview": 0,
            "username": "byt3_m3chanic",
            "viewed": 448
        },
        "renderpass": [
            {
                "code": "/** \n\n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n    \n    Year of Truchets #017\n    05/05/2023  @byt3_m3chanic\n    \n    - music just for effect -\n    \n    All year long I'm going to just focus on truchet tiles and the likes!\n    Truchet Core \\M/->.<-\\M/ 2023 \n    \n*/\n\n#define R           iResolution\n#define T           iTime\n#define M           iMouse\n\n#define PI         3.14159265359\n#define PI2        6.28318530718\n\nfloat hash21(vec2 a) { return fract(sin(dot(a, vec2(27.609, 57.583)))*43758.5453);}\nmat2 rot(float a) { return mat2(cos(a),sin(a),-sin(a),cos(a));}\n//@iq hue palettes \nvec3 hue(float t){ return .35 + .4*cos(PI2*t*(vec3(.95,.97,.98)*vec3(0.098,0.345,0.843))); }\n\nfloat ck = 0., d2 = 0.;\nvec2 g = vec2(0), id = vec2(0);\n\nfloat makeTile(vec2 uv){\n\n    id = floor(uv);\n    vec2 q = fract(uv)-.5;\n    g = q;\n  \n    ck = mod(id.x+id.y,2.)*2.-1.;\n    float hs = hash21(id);\n\n    float wd = .12+.1*sin(uv.x*.75+T*2.5);\n    if(hs>.5) q *= rot(1.5707);\n    \n    vec2 sp = vec2(length(q-.5),length(q+.5));\n    vec2 p = sp.x<sp.y? q-.5 : q+.5;\n\n    // main pattern\n    float d = length(p)-.5;\n    d = abs(d)-wd;\n    \n    float c = min(length(q.x)-wd,length(q.y)-wd);\n    if (hs>.9) d = c;\n    \n    hs = fract(hs*413.372);\n    if (hs>.9) d = min(length(abs(q)-vec2(.5,0))-wd,length(q.x)-wd);\n    if (hs<.1) d = min(abs(length(q)-.2)-wd,max(c,-(length(q)-.2)));\n\n    d2 = abs(max(abs(q.x),abs(q.y))-.5)-.005;\n\n    return d;\n}\n\nvoid mainImage( out vec4 O, in vec2 F ) {\n\n    vec3 C = vec3(.01);\n    \n    vec2 uv = (2.*F-R.xy)/max(R.x,R.y);\n    vec2 vv = uv;\n   \n    float fd = (uv.y+.25)*1.35;\n    fd = clamp(1.,0.,fd);\n\n    \n    uv *= rot(-T*.11);\n    uv = vec2(log(length(uv)), atan(uv.y, uv.x))*5.41;  //3.5;//2.545;//1.91;//1.2726;//.63;\n    uv.x -= T*.35;\n        \n    vec3 clr = hue((uv.x+2.)*.209);\n    vec3 clx = hue((uv.x+2.)*.41);\n\n    float px = fwidth(uv.x); \n    float d = makeTile(uv);\n\n    float s = smoothstep(.075+px,-px,d);\n    d2 = smoothstep(px,-px,d2);\n\n    C = mix(C,vec3(.125),d2);\n    C = mix(C,C*.3,s);\n    \n    float d3 = smoothstep(px,-px,abs(d)-.04);\n    float d4=mix(d,0.,fd);\n    \n    d4 = smoothstep(px,-px,d4+.1);\n    d = smoothstep(px,-px,d);\n    \n    C = mix(C,clr,d);\n    C = mix(C,C*.1,d3);\n    C = mix(C,clamp(C+.3,C,vec3(1)),d4);\n    \n    float v = length(vv)-.0005;\n    v = smoothstep(.2,.0,v);\n    C = mix(C,vec3(.01),clamp(0.,.7,v));\n    C = pow(C,vec3(.4545));\n    O = vec4(C,1.);\n}\n\n\n\n    \n    \n        \n    \n        \n    \n        \n    \n        \n    \n    ",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 33221,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/thegardensofbabylon/carlita-movimiento-1"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}