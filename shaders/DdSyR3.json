{
    "Shader": {
        "info": {
            "date": "1687988827",
            "description": "Hello, ShaderToy!",
            "flags": 0,
            "hasliked": 0,
            "id": "DdSyR3",
            "likes": 9,
            "name": "Trippy Spiral Tunnel",
            "published": 3,
            "tags": [
                "tunnel",
                "spiral",
                "trippy"
            ],
            "usePreview": 0,
            "username": "martysh12",
            "viewed": 226
        },
        "renderpass": [
            {
                "code": "float grid(vec2 p) {\n    return mod(floor(p.x) + floor(p.y), 2.);\n}\n\nfloat tunnel(vec2 uv, float dist)\n{\n    vec2 tun = vec2(dist / ((sin(iTime * 3.) + 1.) / 6. + 1.), atan(uv.y, uv.x));\n    tun.x += iTime / 4. + sin(iTime * 3.) * 0.1;\n    tun.y += iTime / 12. + tun.x / 2.;\n    float checker = grid(tun * 7.);\n    \n    return checker;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    \n    uv.x -= sin(iTime) / 12.;\n    uv.y -= cos(iTime) / 24.;\n    \n    uv.x /= iResolution.y / iResolution.x;\n    \n    float dsq = 1. / (pow(pow(uv.x * uv.x, 4.0) + pow(uv.y * uv.y, 4.0), 1.0 / 8.0)) * .2;\n    float dci = 1. / length(uv) * .2;\n    float dist = mix(dci, dsq, sin(iTime) * 0.5 + 0.5);\n    \n    vec3 finalColor = vec3(tunnel(uv, dist));\n    \n    finalColor += min(1. - dist / 4., 0.0);\n    \n    fragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}