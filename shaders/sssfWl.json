{
    "Shader": {
        "info": {
            "date": "1645560838",
            "description": "different view of https://shadertoy.com/view/NslBWs .\nthat shader effectively assigns the intensity of each pixel as the height of each of these stacks.\nI was curious to see the structure within the stacks.",
            "flags": 32,
            "hasliked": 0,
            "id": "sssfWl",
            "likes": 10,
            "name": "Collatz Conjecture 2",
            "published": 3,
            "tags": [
                "math"
            ],
            "usePreview": 0,
            "username": "elenzil",
            "viewed": 277
        },
        "renderpass": [
            {
                "code": "// Fork of \"Collatz Conjecture.\" by RJVB09. https://shadertoy.com/view/NslBWs\n// 2022-02-22 19:56:00\n\nvoid mainImage( out vec4 RGBA, in vec2 XY )\n{\n    int n = int(texelFetch(iChannel0, ivec2(XY), 0).r);\n    \n    RGBA = vec4(vec3(float(n) / 300.0), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\nvoid mainImage( out vec4 RGBA, in vec2 XY )\n{\n    ivec2 IJ = ivec2(XY);\n    \n    int n;\n    \n    const int maxHeight = 300;\n    \n    if (IJ.y % maxHeight == 0) {\n        n = IJ.x + (IJ.y / maxHeight) * int(iResolution.x);\n    }\n    else {    \n        n = int(texelFetch(iChannel0, ivec2(IJ.x, IJ.y - 1), 0).r);\n\n        if (n > 1) {\n            if (n % 2 == 1)\n            {\n                n = n * 3 + 1;\n            }\n            else\n            {\n                n /= 2;\n            }\n        }\n    }\n    \n    if (iMouse.z > 1.0) {\n        n = 0;\n    }\n    \n    RGBA = vec4(float(n));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}