{
    "Shader": {
        "info": {
            "date": "1614957564",
            "description": "Ripples",
            "flags": 0,
            "hasliked": 0,
            "id": "tlyBDG",
            "likes": 1,
            "name": "Ripple [ppxxll]",
            "published": 3,
            "tags": [
                "procedural",
                "noise",
                "fbm",
                "warp",
                "blue",
                "ice",
                "warped"
            ],
            "usePreview": 0,
            "username": "robclouth",
            "viewed": 217
        },
        "renderpass": [
            {
                "code": "/*\n@title Ripple\n@author robclouth\n*/\n\nconst float xScale = 0.1; // @param min 0, max 1\nconst float yScale = 0.1; // @param min 0, max 1\n\n\nfloat prand(vec2 uv) {\n    return fract(sin(dot(mod(uv,153.789),vec2(12.9898,78.233)))*43758.5453) - 0.5;\n}\n\nfloat fprand(vec2 uv, float f){\n    vec2 sp = uv*f;\n    vec2 isp = floor(sp);\n    vec2 fsp = fract(sp);\n    \n    float a = prand(isp+0.5);\n    float b = prand(isp+0.5+vec2(1.0,0.0));\n    float c = prand(isp+0.5+vec2(0.0,1.0));    \n    float d = prand(isp+0.5+vec2(1.0,1.0));\n    float wx = smoothstep(0.0, 1.0, fsp.x);\n    float wy = smoothstep(0.0, 1.0, fsp.y);\n    return mix(mix(a,b,wx), mix(c,d,wx), wy);\n    \n}\n\nfloat perlin(vec2 uv, int octaves, float f0, float fmul, float v0, float vmul){\n    float val = 0.0;\n    float frq = f0;\n    float wei = v0;\n    float time = mod(iTime, 1000.0);\n    \n    for (int i=0; i<octaves; i++) {\n        val += wei * texture(iChannel1, uv*vec2(xScale, yScale)*frq*0.1 + vec2(time*0.001)).r;\n        frq *= fmul;\n        wei *= vmul;\n    }\n   \n    return val;\n}\n\nfloat pdef(vec2 uv) {\n    //return perlin(uv, 11, 0.8, 1.7, 1.5, 0.65);\n    return perlin(uv, 7, 1.0, 1.9, 0.3,0.8);\n}\n\nvec2 warped(vec2 uv) {\n    return uv + vec2(vec2(pdef(uv+pdef(uv)), pdef(uv+pdef(uv+3.145)+1.25)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/max(iResolution.x, iResolution.y);\n    fragColor = texture(iChannel0, warped(uv));\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 2,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}