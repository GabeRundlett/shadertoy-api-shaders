{
    "Shader": {
        "info": {
            "date": "1618930622",
            "description": "we did this with Cookie Collective on a stream. ",
            "flags": 0,
            "hasliked": 0,
            "id": "NsfXRf",
            "likes": 20,
            "name": "Cookie casual Shader Showdown ",
            "published": 3,
            "tags": [
                "shader",
                "design",
                "showdown"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 433
        },
        "renderpass": [
            {
                "code": "#define pmod(p,a) mod(p ,a) - 0.5*a\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\nfloat nois(vec3 _p){\n  vec4 p = vec4(_p,1. + iTime);\n  float n = 0.;\n  float amp = 1.;\n  for(int i = 0; i < 5; i++){\n  \n    p.xz *= rot(0.5);\n    p.wz *= rot(0.5);\n    p.yz *= rot(0.5);  \n    n += dot(sin(p),cos(p))*amp;\n  \n    amp *= 0.7;\n    p *= 1.5;\n  }\n  return n;\n}\nfloat N = 0.;\n\nvec3 pal(float m){return pow(0.5 + 0.5*sin(m + vec3(-0.5,-0.,0.5)),vec3(0.2));}\n\nfloat map(vec3 p){\n  N = nois(p*4.)*0.1;\n  float d = 10e5;\n  for(float i = 0.; i < 5.; i++){\n    p.xz *= rot(0.4 + (iTime + sin(iTime + i*11.5))*0.2);\n    p.yz *= rot(0.4 + (iTime + sin(iTime + i))*0.2);\n    d = min(d, length(p.xz) - 0.04 - N*0.5);\n    \n  }\n  return d;\n}\n\nfloat sdBox(vec2 p, vec2 s){p = abs(p) -s; return max(p.x,p.y);}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\t\t\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n\n    \n    vec3 col = vec3(1);\n  \n  float pxsz = fwidth(uv.x);\n  {\n    vec3 c = vec3(0.6,0.2,0.7) + sin(uv.xyx*20.)*0.3;\n    \n    float md = 0.1;\n    \n    vec2 p = uv;\n    p.x += (sin(iTime) + iTime+ cos(iTime*1.5))*0.2;\n    vec2 id = floor(p/md);\n    float m = (sin(id.x + iTime + cos(id.y)*3.));\n    c = pal(uv.x + id.x);\n    p = pmod(p,md);\n    p *= rot(m + iTime);\n    \n    float d = abs(p.x);\n    d = min(d,abs(p.y));\n    \n    d = max(d,abs(length(p)- m*md*0.5) - 0.01);\n    \n    col = mix(col,c,smoothstep(pxsz,0.,d - 0.003));\n  }\n  {\n    vec3 c = vec3(0.6,0.2,0.7) + sin(uv.xyx*20.)*0.3;\n    \n    float md = 0.2;\n    \n    vec2 p = uv;\n    p += 0.05;\n    p.x += (sin(iTime) + iTime+ cos(iTime*1.5))*0.1;\n    vec2 id = floor(p/md);\n    float m = (sin(id.x + iTime + cos(id.y)*3.));\n    c = pal(uv.x + id.x);\n    p = pmod(p,md);\n    //p *= rot(m + iTime);\n    \n    float d = abs(p.x);\n    d = min(d,abs(p.y));\n    \n    //d = max(d,abs(length(p)- m*md*0.5) - 0.01);\n    \n    col = mix(col,c,smoothstep(pxsz,0.,d - 0.0001));\n  }\n  \n  \n  \n  {\n    vec3 p = vec3(0,0,-2);\n    vec3 rd = normalize(vec3(uv,1));\n    bool hit = false; float t= 0.;\n   \n    for(int i = 0; i < 60; i++){\n      float d = map(p);\n      if(d < 0.01){\n        hit = true;\n        break;\n      }\n      \n      p += rd*d;\n    }\n    if(hit){\n      //col = 1.-col;\n      col = vec3(1);\n      col = mix(col,pow(pal(p.x + p.y + sin(p.x)),vec3(2.)),nois(p*4.)*0.6);\n    }\n  }\n  \n  #define xor(a,b,c) min(max(a + c,-(b)),max(b,-(a)))\n  {\n    vec2 p = uv;\n    \n    float d = 10e5;\n    for(float i = 0.; i < 5.; i++){\n      float m = sin(iTime+i + cos(iTime+i));\n      vec2 q = p + vec2(m,0.)*0.2;\n      d = xor(d,abs(length(q) - length(sin(iTime+m))*0.2 ) - 0.01*m,-0.01);\n    }\n    col = mix(col,1.2-col,smoothstep(pxsz,0.,d));\n    \n  }\n  \n  {\n    vec2 p = uv;\n    p.y = abs(p.y) - 0.45;\n    float id = floor(p.x/0.1+ iTime*4. + cos(iTime+ sign(uv.y)*2. - 1.) + sign(uv.y)*2. - 1.);\n    \n    float d = abs(p.t) - 0.1;\n    \n    \n    col = mix(col,1.2-col*pal(id),smoothstep(pxsz,0.,d));\n    col = mix(col,1.2-col*pal(id*2.),smoothstep(pxsz,0.,abs(d) - 0.02));\n    \n    \n  }\n  \n  {\n    vec2 p = uv;\n    //p.y = abs(p.x) - 0.45;\n    \n    float d = abs(p.x - 0.6) - 0.1;\n    d = sdBox(p.x - vec2(0.5,0.),vec2(0.1,0.3));\n    \n    col = mix(col,1.-col*(0.6 + 0.5*pal(uv.y*4.)),smoothstep(pxsz,0.,d));\n    //col = mix(col,1.2-col*pal(id*2.),smoothstep(pxsz,0.,abs(d) - 0.02));\n    \n    \n  }\n  //col = 1. - col;\n  \n  //col = smoothstep(vec3(0),vec3(1.,0.9,1.1),col);\n  //col = pow();\n  \n  col = pow(col,vec3(0.4545));\n  fragColor = vec4(col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}