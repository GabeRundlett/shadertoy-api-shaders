{
    "Shader": {
        "info": {
            "date": "1491332995",
            "description": "Basic clockwise square example",
            "flags": 0,
            "hasliked": 0,
            "id": "ldScRm",
            "likes": 2,
            "name": "Basic clockwise square example",
            "published": 3,
            "tags": [
                "basicclockwisesquareexample"
            ],
            "usePreview": 0,
            "username": "barakooda",
            "viewed": 601
        },
        "renderpass": [
            {
                "code": "//Barakooda 4/4/2017\n//white rectangle\n\nfloat whiteRectangle(vec2 uv)\n\t{\n        // creating buttom left rectangle point\n        vec2 bl = step(vec2(-.1),uv);\n\n\n        // creating top right rectangle point\n        vec2 tr = step(vec2(-.1),-uv);\n\n        // multiplie step layers\n        return tr.x * tr.y * bl.x * bl.y ;\n\t}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    //noramelize \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    //window aspect\n    float aspect = iResolution.y/iResolution.x;\n    \n    //axis change from 0 - 1.0 to -1.0 - 1.0\n\tuv = uv * 2. - 1.;\n    \n   \n    \n    // createing translation data.\n    vec2 translate = vec2(-cos(iTime),sin(iTime));\n   \n    //Strecth y axis\n    uv.y*=aspect;\n    \n    //adding translation to uv\n    uv += translate*0.45;   \n    \n    \n\n\t//creating square    \n    float color = whiteRectangle(uv);\n   \n    \n    //final\n\tfragColor = vec4(vec3(color),1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}