{
    "Shader": {
        "info": {
            "date": "1544731564",
            "description": "Made on bonzomatic to get into shape for shader showdown :)",
            "flags": 0,
            "hasliked": 0,
            "id": "WdlGzn",
            "likes": 5,
            "name": "ShaderDojo 002",
            "published": 3,
            "tags": [
                "raymarching",
                "training",
                "shadershowdown",
                "cookie"
            ],
            "usePreview": 0,
            "username": "antonOTI",
            "viewed": 484
        },
        "renderpass": [
            {
                "code": "\n#define fGlobalTime (iTime)\n\nmat2 rot(float a)\n{\n  float ca = cos(a);float sa = sin(a);\n  return mat2(ca,-sa,sa,ca);\n}\n\nfloat fbm(vec2 p)\n{\n  mat2 m = mat2(.8,-.6,.6,.8);\n  float acc = 0.;\n  p *= -m * m * .5;\n  for(float i = 1.; i < 6.; ++i)\n  {\n    p += vec2(i * 1251.675, i * 6568.457) + vec2(fGlobalTime * .3);\n    p *= m;\n    acc += (sin(p.x * i) + cos(p.y * i)) * 1./(i * .5);\n  }\n\n  return acc;\n}\n\nfloat height = 0.;\nint id = 0;\n\nfloat map(vec3 p)\n{\n\n  p.yz *= rot(sin(fGlobalTime * .1) * .2 + .1);\n  p.xz *= rot(fGlobalTime * .1);\n\n  float dist = 1000.;\n  vec3 cp = p;\n\n  p.y += fbm(p.xz * 2.) * .1;\n  float plan = p.y +.45;\n  height = p.y + .65;\n  dist = min(plan,dist);\n  \n  p = cp;\n  float sph = length(p) - 4.;\n  dist = max(dist, sph);\n  if(dist < .01) id = 1;\n\n  p = cp;\n  p.y += 5.;\n  p.xz /= 4.;\n  p.y *= 2.;\n//  p.y = max(p.y, 0.);\n  p = abs(p);\n  float cube = max(p.x, max(p.y,p.z)) - 1.;\n  dist = min(dist, cube);\n  if(cube < .01) id = 2;\n\n  return dist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \tvec2 uv = (fragCoord.xy-.5*iResolution.xy)/iResolution.y;\n    \n  vec3 ro = vec3(0.,4.,-15.);\n  vec3 rd = normalize(vec3(uv,1));\n  vec3 cp = ro;\n  rd.zy *= rot(-.3);\n\n\n  float st = 0.;\n  float cd = 0.;\n  for(;st < 1.; st += 1./128.)\n  {\n    cd = map(cp);\n    if(cd < .01) break;\n    cp += rd * cd * .45;\n  }\n\n  vec4 sky = mix(vec4(0.1,0.1,.1,0.),vec4(.6,.6,.9,1.), smoothstep(-.1,-.0, rd.y));\n\n  fragColor = sky ;\n\n  if(id == 1)\n  {\n    fragColor = mix(vec4(.2,.3,.6,0.) * 1.5, vec4(1.) * 2.5, height * .8 + .2) * pow(1. - st,2.);\n  }\n  if(id == 2)\n  {\n    fragColor = vec4(.8,.8,.6,1.) * (1. - st) * clamp(pow(length(cp.xz * .46), .8),0.,1.);\n  }\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}