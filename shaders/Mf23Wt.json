{
    "Shader": {
        "info": {
            "date": "1704814497",
            "description": "A visualization + audio of a square wave (or so it seems!) made only with sine waves\n\nhttps://en.wikipedia.org/wiki/Square_wave#Fourier_analysis",
            "flags": 8,
            "hasliked": 0,
            "id": "Mf23Wt",
            "likes": 4,
            "name": "Square wave fourier analysis ",
            "published": 3,
            "tags": [
                "pulse",
                "sound",
                "wave",
                "square",
                "fourier"
            ],
            "usePreview": 0,
            "username": "aerowave",
            "viewed": 239
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    int iter = clamp(int(pow(iTime, 2.0)), 0, 64);\n    float shift = max((iTime - 8.0) / 8.0, 0.0);\n\n    vec3 col = vec3(wave(uv.x, iter, shift) * 0.5 + 0.5 > uv.y ? 1 : 0);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "const float PI = asin(1.0) * 2.0;\n\nuint murmurHash11(uint src) {\n    const uint M = 0x5bd1e995u;\n    uint h = 1190494759u;\n    src *= M; src ^= src>>24u; src *= M;\n    h *= M; h ^= src;\n    h ^= h>>13u; h *= M; h ^= h>>15u;\n    return h;\n}\n\n// 1 output, 1 input\nfloat hash11(float src) {\n    uint h = murmurHash11(floatBitsToUint(src));\n    return uintBitsToFloat(h & 0x007fffffu | 0x3f800000u) - 1.0;\n}\n\nfloat wave(in float t, in int k, in float shift) {\n    float total = 0.0;\n    for (int i = 1; i < k + 1; i++) {\n        total += sin(2.0 * PI * ((2.0 * float(i) - 1.0) * t + hash11(float(i)) * shift)) / (2.0 * float(i) - 1.0);\n    }\n    return total / 2.0;\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "vec2 mainSound( int samp, float time )\n{\n    int iter = clamp(int(pow(time, 2.0)), 0, 64);\n    float shift = max((time - 8.0) / 8.0, 0.0);\n\n    \n    return vec2(wave(mod(time, 1.0/220.0) * 220.0, iter, shift));\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}