{
    "Shader": {
        "info": {
            "date": "1446320397",
            "description": "See also the tri-tree version [url]https://www.shadertoy.com/view/Mt2XDc[/url],\nbinary-tree version [ MtlyRH ]\nand video versions: [url]https://www.shadertoy.com/view/MtBSDV[/url] , [url]https://www.shadertoy.com/view/ltBSDV[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "lljSDy",
            "likes": 217,
            "name": "quadtree 3",
            "published": 3,
            "tags": [
                "short",
                "quadtree"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 10313
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 o,  vec2 U )\n{\n    o -= o;\n    float r=.1, t=iTime, H = iResolution.y;\n    U /=  H;                              // object : disc(P,r)\n    vec2 P = .5+.5*vec2(cos(t),sin(t*.7)), fU;  \n    U*=.5; P*=.5;                         // unzoom for the whole domain falls within [0,1]^n\n    \n    o.b = .25;                            // backgroud = cold blue\n    \n    for (int i=0; i<7; i++) {             // to the infinity, and beyond ! :-)\n        fU = min(U,1.-U); if (min(fU.x,fU.y) < 3.*r/H) { o--; break; } // cell border\n    \tif (length(P-.5) - r > .7) break; // cell is out of the shape\n\n                // --- iterate to child cell\n        fU = step(.5,U);                  // select child\n        U = 2.*U - fU;                    // go to new local frame\n        P = 2.*P - fU;  r *= 2.;\n        \n        o += .13;                         // getting closer, getting hotter\n    }\n               \n\to.gb *= smoothstep(.9,1.,length(P-U)/r); // draw object\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* // for the record: a 282 chars version\n\nvoid mainImage( out vec4 o, vec2 U )\n{\n    float r=.1, t=iDate.w, H = iResolution.y;\n    U *=  .5/H;  \n    vec2 P = .25+.25*vec2(cos(t),sin(t*.7)), f;  \n     \n    o -= o; o.b = .25;  \n    \n    for (int i=0; i<7; i++) { \n        f = min(U,1.-U); if (min(f.x,f.y) < 3.*r/H)  o--; \n    \tif (length(P-.5) - r < .7)\n        \tf = step(.5,U), \n        \tU += U - f,          \n        \tP += P - f,  r += r,       \n        \to += .13;    \n    }\n               \n\to.gb *= step(r,length(P-U));  \n}\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}