{
    "Shader": {
        "info": {
            "date": "1591610943",
            "description": "t[url]https://shadertoy.com/view/wllyzH[/url] was looping on disks splatting.\nTo make it loopless,  find which disk might cover the cur pixel.\nHere disks can be larger than spiral strips, so we still have to sum over a span ( mouse click & see img below).",
            "flags": 0,
            "hasliked": 0,
            "id": "wtsczN",
            "likes": 38,
            "name": "Expnd. Fibonacci Flower loopless",
            "published": 3,
            "tags": [
                "fibonacci",
                "loopless"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 881
        },
        "renderpass": [
            {
                "code": "// looplessing julianlumia's \"Expanding Fibonacci Flower\" https://shadertoy.com/view/wllyzH\n\nvoid mainImage(out vec4 O, vec2 u) {            \n    vec2  R = iResolution.xy,                               \n          U = u+u-R, A = abs(U);                            \n    float m = 1e6, \n          r = max(A.x, A.y)*.06,                       // disk radius\n          X = floor(sin(iTime)*95.+95.),               // smaller disk index\n          D = 24. * r/R.y/.06,                         // spiral strips window (disk coverage)\n         PI = 3.1415927,\n          a = atan(-U.y,U.x), l = length(U)/R.y*15., \n         x1 = ( a -iTime/2.) / 2.307, L = 2.*PI/2.307,\n         x2 = l*l +  X,\n          k = round((x2-x1)/L),\n          x = round( x1 + L*k);                        // disk center\n    if (x>=X) D = 2. + D*sqrt( x - X ) / sqrt(2e2);    // update strip window according to local spiral width\n    O-=O; \n    if (iMouse.z>0.) O += U.y > 0. ? fract(x1+k*L)       // top:    show underlying spirals\n                                   : floor(2.*D/2.3)/23.;// bottom: show strip window size: white=22\n    for( float d = -D; d <= D; d+=2.307)  { \n        k = round((x2+d-x1)/L), x = round( x1 + L*k);\n        if (x>=X && x<=2e2 )\n      //for (x=0.; x++<2e2;) {                  // initial loop on disks\n        m = min( m,  length( U - R.y*sqrt( x - X ) / 15.\n                                 *cos (x * 2.307 + iTime/2. + vec2(0,PI/2.))) ) ;  \n       }\n    O += vec4(0,1,abs(U/R).yy) * clamp(.5-(m-r)/3., 0.,1. );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}