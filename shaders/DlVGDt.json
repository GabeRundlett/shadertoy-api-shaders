{
    "Shader": {
        "info": {
            "date": "1684873177",
            "description": "chica#2",
            "flags": 0,
            "hasliked": 0,
            "id": "DlVGDt",
            "likes": 4,
            "name": "chica#2",
            "published": 3,
            "tags": [
                "chica2"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 201
        },
        "renderpass": [
            {
                "code": "//por jorge2017a2\n//chica#2\n//23-may-2023---\n//referencia fondo //https://www.shadertoy.com/view/mtyGWy\n\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(5.0*antialiasing(1.0),b,d)\n#define PI 3.141516\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\ncolOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.001,0.0));\nreturn colOut;\n}\nvec3 DrawFigBordeCoL(vec3 pColObj, vec3 colOut, float distObj , vec3 colBorde )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,colBorde ,S2(abs( distObj)-0.01,0.0));\n  return colOut;\n}\n\nvec3 DrawFigDelgado(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj-0.001,0.0)); return colOut; }\n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n///oneshade    \nvec2 Rotate(in vec2 p, in vec2 o, in float r) \n{   float c = cos(r), s = sin(r);\n    return (p - o) * mat2(c, -s, s, c) + o;\n}\n\nfloat sdCircle( vec2 p, float r )\n{return length(p) - r; }\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b; return length(max(d,0.0)) + min(max(d.x,d.y),0.0); }\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\nvec2 pa = p-a, ba = b-a;\nfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\nreturn length( pa - ba*h );\n}\n\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n\n\nfloat sdTrapezoid( in vec2 p, in float r1, float r2, float he )\n{\n    vec2 k1 = vec2(r2,he);\n    vec2 k2 = vec2(r2-r1,2.0*he);\n    p.x = abs(p.x);\n    vec2 ca = vec2(p.x-min(p.x,(p.y<0.0)?r1:r2), abs(p.y)-he);\n    vec2 cb = p - k1 + k2*clamp( dot(k1-p,k2)/dot2(k2), 0.0, 1.0 );\n    float s = (cb.x<0.0 && ca.y<0.0) ? -1.0 : 1.0;\n    return s*sqrt( min(dot2(ca),dot2(cb)) );\n}\n\nvec2 p0_; //punto uv\nvec2 pt0; //punto pos0\nfloat DistL;\nvec3 ColL;  //color linea\nvec3 ColO;  //color salida Out\n\nvoid L( vec2 p1)\n{   DistL=sdSegment(p0_, pt0, p1 );\n    ColO= DrawFigBorde(ColL, ColO,DistL); //cabeza\n    pt0 = p1;\n}\nvoid SZ(vec2 p ){pt0 = p;}\nvoid M(vec2 p1){pt0 = p1;}\nvoid C(vec3 pcol){ColL=pcol;}\n\n\nvec3 PeloSup(vec2 p ,vec3 col )\n{\nvec3 colc;\nfloat r1;\nvec2 p1;\nfloat d1;\nr1 = 0.6;\np1 = vec2(1.57, 0.87);\nd1 = sdCircle(p- p1, r1);\n//---------;\nfloat r2;\nvec2 p2;\nfloat d2;\nr2 = 0.6;\np2 = vec2(1.66, 1.09);\nd2 = sdCircle(p- p2, r2);\nfloat r3;\nvec2 p3;\nfloat d3;\nr3 = 0.6;\np3 = vec2(2.02, 0.38);\nd3 = sdCircle(p- p3, r3);\nfloat df, df1,df2, df3;\n\n\n    df1 = differenceSDF(d1, d2);\n    df2 = intersectSDF(d1, d3);\n    df3 = intersectSDF(d2, d3);\n    df = unionSDF(df1, df2);\n    df = unionSDF(df, df3);\n    col = DrawFigBorde(vec3(1., 0.5, 0.), col, df);\n    \n    return  col;\n}\n\nvec3 OjoIzq(vec2 p  ,vec3 col )\n{\nvec3 colc;\nvec2 p1;\nfloat r1, d1,r2,d2,d1a,d1b,d2a,dfa,dfb;\nvec2 p2;\n    colc = vec3(0.43, 0.65, 0.74);\n    r1 = 0.2;\n    p1 = vec2(1.26, 1.22);\n    d1 = sdCircle(p- p1, r1);\n    r2 = 0.2;\n    p2 = vec2(1.3, 1.05);\n    d2 = sdCircle(p- p2, r2);\n\n    dfa = intersectSDF(d1, d2);\n    col = DrawFigBorde(vec3(1.), col, dfa);\n\n////cornea;\ncolc = vec3(0.48, 0.66, 0.76);\nr1 = 0.08;\np1 = vec2(1.3, 1.11);\nd1 = sdCircle(p- p1, r1);\n    col = DrawFigBorde(colc, col, d1);\n////iris;\nfloat r3;\nvec2 p3;\nfloat d3;\nr3 = 0.02;\np3 = vec2(1.3, 1.11);\nd3 = sdCircle(p- p3, r3);\n    col = DrawFigBorde(vec3(0.), col, d3);\n    \n    return col;\n}\n\nvec3 ojoDer(vec2 p,  vec3 col  ) \n{\nfloat r1,d1,r2,d2,dt,r3,d3,r4,d4;\nvec2 p1,p2,p3,p4;\n\nvec3 colc;\nr3 = 0.2;\np3 = vec2(1.76, 1.23);\nd3 = sdCircle(p- p3, r3);\nr4 = 0.2;\np4 = vec2(1.73, 1.04);\nd4 = sdCircle(p- p4, r4);\n    dt = intersectSDF(d3, d4);\n    col = DrawFigBorde(vec3(1., 1., 1.), col, dt);\n////cornea;\n\n\nr2 = 0.08;\np2 = vec2(1.76, 1.11);\nd2 = sdCircle(p- p2, r2);\ncolc = vec3(0.48, 0.66, 0.76);\n    col = DrawFigBorde(colc, col, d2);\n////iris;\nr4 = 0.02;\np4 = vec2(1.75, 1.11);\nd4 = sdCircle(p- p4, r4);\n    col = DrawFigBorde(vec3(0.), col, d4);\n    return  col;\n}\n\nvec3 Rostro(vec2 p, vec3 col )\n{\nvec2 p3,med ,med3,pos, med2;\nfloat d1,d2,d3,dt;\nvec3 colc;\ncolc = vec3(0.43, 0.65, 0.74);\ncolc = vec3(0.96, 0.85, 0.8);\n\n\npos = vec2(1.53, 1.05);\nmed = vec2(0.44, 0.53);\nd1 = sdEllipse(p- pos, med);\npos = vec2(1.53, 1.17);\nmed = vec2(0.4, 0.43);\nd2 = sdEllipse(p- pos, med);\npos = vec2(1.53, 1.24);\nmed = vec2(0.31, 0.43);\nd3 = sdEllipse(p- pos, med);\n    ;\n    dt = unionSDF(d1, d2);\n    dt = unionSDF(dt, d3);\n    col = DrawFigBorde(colc, col, dt);\n    return col;\n}\n\n\nvec3 nariz(vec2 p ,vec3 col )\n{\nvec2 p1, p2, p3;\nColO = col;\np0_ = p;\np1 = vec2(1.51, 1.19);\np2 = vec2(1.61, 1.24);\np3 = vec2(1.57, 1.32);\nSZ(p1); M(p1); C(vec3(0.));\nL(p1); L(p2); L(p3);\n    col = ColO;\n    return col;\n}\n\nvec3 boca(vec2 p,vec3 col)\n{\nvec2 p1,p2,p3, p4, p5,p6,p7,p8,p9;\nColO = col;\np0_ = p;\np1 = vec2(1.39, 1.42);\np2 = vec2(1.5, 1.43);\np3 = vec2(1.5, 1.44);\np4 = vec2(1.61, 1.46);\np5 = vec2(1.65, 1.47);\np6 = vec2(1.54, 1.49);\np7 = vec2(1.46, 1.48);\np8 = vec2(1.43, 1.44);\np9 = vec2(1.4, 1.44);\nSZ(p1); M(p1); C(vec3(0.));\n    L(p1); L(p2); L(p3); L(p4); L(p5);;\n    L(p6); L(p7); L(p8); L(p9);;\n    col = ColO;\n    \n    return  col;\n}\n\nvec3 Cuello(vec2 p ,vec3 col)\n{\nfloat l1, t1, an1;\nfloat al1;\nvec2 pos, med;\nfloat d1cu;\nvec3 colc;\ncolc = vec3(0.94, 0.88, 0.82);\n\npos = vec2(1.52, 1.82);;\nmed = vec2(0.175, 0.25);\nd1cu = sdBox(p- pos, med);\ncol = DrawFigBorde(colc, col, d1cu);\nfloat r1;\nvec2 p1;\nfloat d1;\nr1 = 0.27;\np1 = vec2(1.52, 1.49);\nd1 = sdCircle(p- p1, r1);\nfloat r2;\nvec2 p2;\nfloat d2;\nr2 = 0.27;\np2 = vec2(1.52, 1.58);\nd2 = sdCircle(p- p2, r2);\nfloat df;\n    df = differenceSDF(d2, d1);\n    df = intersectSDF(df, d1cu);\n    col = DrawFigBorde(vec3(0.), col, df);\n    return col;\n}\n\nvec3 Cuerpo(vec2 p,vec3 col )\n{\nvec2 pos;\nvec2 med;\nfloat d1cu;\npos = vec2(1.52, 2.8);\nmed = vec2(0.25, 0.71);\nd1cu = sdBox(p- pos, med);\nfloat d2cu,r1, r2, he, d1;\n\nr1 = 0.525;\nr2 = 0.455;\nhe = 0.29; \n\npos = vec2(1.5, 3.3);\nd2cu = sdTrapezoid(p- pos, r1, r2, he);\n//-----------\nfloat r3;\nvec2 p3;\nfloat d3;\nr3 = 0.4;\np3 = vec2(1.27, 2.78);\nd3 = sdCircle(p- p3, r3);\nfloat r4;\nvec2 p4;\nfloat d4;\nr4 = 0.4;\np4 = vec2(1.81, 2.76);\nd4 = sdCircle(p- p4, r4);\nfloat dt;\n    dt = unionSDF(d1cu, d2cu);\n    dt = unionSDF(dt, d3);\n    dt = unionSDF(dt, d4);\nfloat st;\n\nr1 = 0.25;\nr2 = 0.565;\nhe = 0.275;\npos = vec2(1.53, 2.2);\n////camisa;\nd1 = sdTrapezoid(p- pos, r1, r2, he);\n    dt = unionSDF(dt, d1);\n ////cintura;\nr1 = 0.43;\nr2 = 0.62;\nhe = 0.275;\npos = vec2(1.525, 3.855);\nd1 = sdTrapezoid(p- pos, r1, r2, he);\n//-------------;\nvec3 colc;\ncolc = vec3(0.96, 0.85, 0.8);\n    col = DrawFigBorde(colc, col, d1);\n    col = DrawFigBorde(vec3(1.), col, dt);\n    return col;\n}\n\n\nvec3 pestanaIzq(vec2 p,vec3 col)\n{\nfloat r1,d1;\nvec2 p1;\n\nr1 = 0.2;\np1 = vec2(1.29, 1.03);\nd1 = sdCircle(p- p1, r1);\nfloat r2;\nvec2 p2;\nfloat d2;\nr2 = 0.24;\np2 = vec2(1.29, 1.1);\nd2 = sdCircle(p- p2, r2);\nfloat dt;\n    dt = differenceSDF(d1, d2);\n    col = DrawFigBorde(vec3(0.), col, dt);\n    return col;\n}\n\nvec3 pestanaDer(vec2 p,vec3 col )\n{\nfloat r1;\nvec2 p1;\nfloat d1;\nr1 = 0.19;\np1 = vec2(1.75, 1.05);\nd1 = sdCircle(p- p1, r1);\nfloat r2;\nvec2 p2;\nfloat d2;\nr2 = 0.24;\np2 = vec2(1.75, 1.12);\nd2 = sdCircle(p- p2, r2);\nfloat dt;\n    dt = differenceSDF(d1, d2);\n    col = DrawFigBorde(vec3(0.), col, dt);\n    return  col;\n}\n\nvec3 BrazoIzq(vec2 p ,vec3 col)\n{\nvec2 pos;\nvec2 med;\nfloat d1cu, d2cu;\nfloat ang;\nvec2 pr;\nvec3 colc;\nfloat dt;\npos = vec2(0.78, 2.8);;\nmed = vec2(0.38 / 2., 1.95 / 2.);\n    ang = -18. * PI / 180.;\n    pr = Rotate(p- pos, med/ 2., ang);\n    dt = sdBox(pr, med);\n    colc = vec3(0.96, 0.87, 0.83);\n////diferencia brazo;\npos = vec2(0.94 / 2., 1.9 / 2.);;\nmed = vec2(0.36, 0.165);\nang = 12. * PI / 180.;\npr = Rotate(p- pos, med/ 2., ang);\nd2cu = sdBox(pr- pos, med);\n    dt = differenceSDF(dt, d2cu);\n    col = DrawFigBorde(colc, col, dt);\n    return col;\n}\n\nvec3 BrazoDer(vec2 p,vec3 col)\n{\nvec2 pos,med;\nfloat d1cu, ang;\nvec2 pr;\nvec3 colc;\nfloat dt;\npos = vec2(2.21, 2.74);;\nmed = vec2(0.19, 0.915);\nd1cu = sdBox(p- pos, med);\n    ang = 15. * PI / 180.;\n    pr = Rotate(p- pos, med/ 2., ang);\n    dt = sdBox(pr, med);\n    colc = vec3(0.96, 0.85, 0.8);\npos = vec2(2.13 / 2., 1.6 / 2.);\nmed = vec2(0.36, 0.165);\n\n\nfloat d2cu;\nang = -12. * PI / 180.;\npr = Rotate(p- pos, med/ 2., ang);\nd2cu = sdBox(pr- pos, med);\n    dt = differenceSDF(dt, d2cu);\n    col = DrawFigBorde(colc, col, dt);\n    return col;\n}\n\nvec3 Lineas01(vec2  p ,vec3 col ) \n{\nvec2 p1, p2, p3, p4, p5;\np1 = vec2(1.49, 2.52);\np2 = vec2(1.58, 2.67);\np3 = vec2(1.59, 2.73);\np0_ = p;\nColO = col;\nSZ(p1); M(p1); C(vec3(0.));\nL(p1); L(p2); L(p3);;\np1 = vec2(1.25, 3.09);\np2 = vec2(1.61, 3.05);\nSZ(p1); M(p1); C(vec3(0.));\nL(p1); L(p2);;\np1 = vec2(1.5, 3.01);\np2 = vec2(1.85, 3.09);\nSZ(p1); M(p1); C(vec3(0.));\nL(p1); L(p2);;\ncol = ColO;\n    return col;\n}\n\nvec3 CejaIzq(vec2 p ,vec3 col ) \n{\nvec2 p1, p2, p3, p4, p5;\np1 = vec2(1.44, 1.12);\np2 = vec2(1.36, 1.03);\np3 = vec2(1.28, 1);\np4 = vec2(1.21, 1);\np5 = vec2(1.17, 0.95);\nColO = col;\np0_ = p;\nSZ(p1); M(p1); C(vec3(0.));\nL(p1); L(p2); L(p3); L(p4); L(p5);;\np1 = vec2(1.21, 1.01);\np2 = vec2(1.15, 1.03);\np3 = vec2(1.11, 1);\nSZ(p1); M(p1); C(vec3(0.));\nL(p1); L(p2); L(p3);;\ncol = ColO;\n    return col;\n}\n\nvec3 CejaDer(vec2 p ,vec3 col)\n{\nvec2 p1, p2, p3, p4, p5;\np1 = vec2(1.59, 1.09);\np2 = vec2(1.66, 1.01);\np3 = vec2(1.77, 1);\np4 = vec2(1.82, 1.02);\np5 = vec2(1.85, 0.96);\np0_ = p;\nColO = col;\nSZ(p1); M(p1); C(vec3(0.));\nL(p1); L(p2); L(p3); L(p4); L(p5);;\np1 = vec2(1.81, 1.01);\np2 = vec2(1.89, 1.03);\np3 = vec2(1.94, 0.98);\nSZ(p1); M(p1); C(vec3(0.));\nL(p1); L(p2); L(p3);;\ncol = ColO;\n    return col;\n}\n\nvec3 chica2(vec2 p , vec3 col ) \n{\n   col = Cuello(p, col);\n    col = BrazoIzq(p, col);\n    col = BrazoDer(p-vec2(0.05,0.05), col);\n    col = Cuerpo(p, col);\n    col = Rostro(p, col);\n    col = pestanaIzq(p, col);\n    col = nariz(p, col);\n    col = PeloSup(p, col);\n    col = pestanaDer(p, col);\n    col = OjoIzq(p, col);\n    col = ojoDer(p, col);\n    col = boca(p, col);\n    col = Lineas01(p, col);\n    col = CejaIzq(p, col);\n    col = CejaDer(p, col);\n    return col;\n}\n\n\n//https://www.shadertoy.com/view/mtyGWy\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\nuv.x *= iResolution.x/iResolution.y;\nvec2 uv0=uv;\nuv-=vec2(-0.5,-0.75); uv*=2.5;\n    vec3 col=vec3(1.0,2.0,3.0);\n    uv0*=2.0;\n    float d=sin(uv0.x+iTime)+uv0.y;\n    col = palette(d+iTime);\n\td=sin(d*8.0+iTime/8.0);\n\td=abs(d);\n\td=0.5/d;\n\tcol*=d;\n    col=chica2(vec2(uv.x,-uv.y+4.0),col );\nfragColor = vec4(col,1.0);\n}\n\n\n\n\n\n\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float sdEllipse( in vec2 p, in vec2 ab )\n{\n    p = abs(p); if( p.x > p.y ) {p=p.yx;ab=ab.yx;}\n    float l = ab.y*ab.y - ab.x*ab.x;\n    float m = ab.x*p.x/l;      float m2 = m*m; \n    float n = ab.y*p.y/l;      float n2 = n*n; \n    float c = (m2+n2-1.0)/3.0; float c3 = c*c*c;\n    float q = c3 + m2*n2*2.0;\n    float d = c3 + m2*n2;\n    float g = m + m*n2;\n    float co;\n    if( d<0.0 )\n    {\n        float h = acos(q/c3)/3.0;\n        float s = cos(h);\n        float t = sin(h)*sqrt(3.0);\n        float rx = sqrt( -c*(s + t + 2.0) + m2 );\n        float ry = sqrt( -c*(s - t + 2.0) + m2 );\n        co = (ry+sign(l)*rx+abs(g)/(rx*ry)- m)/2.0;\n    }\n    else\n    {\n        float h = 2.0*m*n*sqrt( d );\n        float s = sign(q+h)*pow(abs(q+h), 1.0/3.0);\n        float u = sign(q-h)*pow(abs(q-h), 1.0/3.0);\n        float rx = -s - u - c*4.0 + 2.0*m2;\n        float ry = (s - u)*sqrt(3.0);\n        float rm = sqrt( rx*rx + ry*ry );\n        co = (ry/sqrt(rm-rx)+2.0*g/rm-m)/2.0;\n    }\n    vec2 r = ab * vec2(co, sqrt(1.0-co*co));\n    return length(r-p) * sign(p.y-r.y);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}