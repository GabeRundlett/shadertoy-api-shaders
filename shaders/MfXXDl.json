{
    "Shader": {
        "info": {
            "date": "1705870078",
            "description": "i have been staring at this for 3 hours",
            "flags": 0,
            "hasliked": 0,
            "id": "MfXXDl",
            "likes": 4,
            "name": "star bubbles",
            "published": 3,
            "tags": [
                "colorful"
            ],
            "usePreview": 0,
            "username": "hootis",
            "viewed": 346
        },
        "renderpass": [
            {
                "code": "mat2 rotationMatrix(float ang)\n{\n\tang *= 3.1415926535 / 180.0;\n    float s = sin(ang);\n    float c = cos(ang);\n    return mat2(c, -s, s, c);\n}\n\nfloat sdStar5(in vec2 p, in float r, in float rf)\n{\n    const vec2 k1 = vec2(0.809016994375, -0.587785252292);\n    const vec2 k2 = vec2(-k1.x,k1.y);\n    p.x = abs(p.x);\n    p -= 2.0*max(dot(k1,p),0.0)*k1;\n    p -= 2.0*max(dot(k2,p),0.0)*k2;\n    p.x = abs(p.x);\n    p.y -= r;\n    vec2 ba = rf*vec2(-k1.y,k1.x) - vec2(0,1);\n    float h = clamp( dot(p,ba)/dot(ba,ba), 0.0, r );\n    return length(p-ba*h) * sign(p.y*ba.x-p.x*ba.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec2 uv1 = uv;\n    mat2 transform = rotationMatrix(iTime * 5.0) * ((sin(iTime * 2.0) / 15.0) - 0.9);\n    \n    uv *= transform;\n    uv0 *= transform;\n    uv1 *= transform;\n    \n    uv.x += (uv0.y > 0.0) ? iTime + abs(sin(iTime)) : -(iTime + abs(cos(iTime)));\n    uv = (fract(uv) - 0.5) * rotationMatrix((-iTime * 5.) - 35.0);\n    \n    float d = (0.02 / abs(sdStar5(uv, 0.3, 0.5) - 0.1)) + (0.02 / -(length(uv) - 0.41));\n    vec3 col = ((uv0.y > 0.0) ? vec3(3, 2, 1) : vec3(2, 1, 3)) * (d * (0.5 + 0.5 * cos(iTime + uv0.xyx + vec3(0, 2, 4))));\n    \n    float d1 = (0.02 / abs(sdStar5(uv1, 0.7, 0.45) - 0.3)) + (0.2 / -(length(uv1) - 2.5));\n    float d2 = step(0.02, length(uv) - 0.41);\n    vec3 bg = 0.5 + 0.5 * cos(iTime + uv0.xyx + vec3(0, 2, 4));\n    bg *= d2;\n    bg *= d1;\n    \n    fragColor = vec4(clamp(col, 0.0, 1.0) + bg, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}