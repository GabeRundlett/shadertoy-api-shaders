{
    "Shader": {
        "info": {
            "date": "1690129968",
            "description": "infinite widget",
            "flags": 0,
            "hasliked": 0,
            "id": "cdSfDV",
            "likes": 26,
            "name": "infinite widget",
            "published": 3,
            "tags": [
                "graphicdesign",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 1725
        },
        "renderpass": [
            {
                "code": "#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define B(p,s) max(abs(p).x-s.x,abs(p).y-s.y)\n#define deg45 .707\n#define R45(p) (( p + vec2(p.y,-p.x) ) *deg45)\n#define Tri(p,s) max(R45(p).x,max(R45(p).y,B(p,s)))\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n#define SkewX(a) mat2(1.0,tan(a),0.0,1.0)\n#define seg_0 0\n#define seg_1 1\n#define seg_2 2\n#define seg_3 3\n#define seg_4 4\n#define seg_5 5\n#define seg_6 6\n#define seg_7 7\n#define seg_8 8\n#define seg_9 9\n\nfloat segBase(vec2 p){\n    vec2 prevP = p;\n    \n    float size = 0.02;\n    float padding = 0.05;\n\n    float w = padding*3.0;\n    float h = padding*5.0;\n\n    p = mod(p,0.05)-0.025;\n    float thickness = 0.005;\n    float gridMask = min(abs(p.x)-thickness,abs(p.y)-thickness);\n    \n    p = prevP;\n    float d = B(p,vec2(w*0.5,h*0.5));\n    return d;\n}\n\nfloat seg0(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    float mask = B(p,vec2(size,size*2.7));\n    d = max(-mask,d);\n    return d;\n}\n\nfloat seg1(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x+=size;\n    p.y+=size;\n    float mask = B(p,vec2(size*2.,size*3.7));\n    d = max(-mask,d);\n    \n    p = prevP;\n    \n    p.x+=size*1.9;\n    p.y-=size*3.2;\n    mask = B(p,vec2(size,size+0.01));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg2(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x+=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x-=size;\n    p.y+=0.05;\n    mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg3(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.y = abs(p.y);\n    p.x+=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x+=0.06;\n    mask = B(p,vec2(size,size+0.01));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg4(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    \n    p.x+=size;\n    p.y+=0.08;\n    float mask = B(p,vec2(size*2.,size*2.0));\n    d = max(-mask,d);\n\n    p = prevP;\n    \n    p.y-=0.08;\n    mask = B(p,vec2(size,size*2.0));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg5(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x-=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x+=size;\n    p.y+=0.05;\n    mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg6(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x-=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.y+=0.05;\n    mask = B(p,vec2(size,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg7(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x+=size;\n    p.y+=size;\n    float mask = B(p,vec2(size*2.,size*3.7));\n    d = max(-mask,d);\n    return d;\n}\n\n\nfloat seg8(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.y = abs(p.y);\n    p.y-=0.05;\n    float mask = B(p,vec2(size,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg9(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.y-=0.05;\n    float mask = B(p,vec2(size,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x+=size;\n    p.y+=0.05;\n    mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat segDot(vec2 p){\n    vec2 prevP = p;\n    p*=SkewX(-0.4);\n    float size = 0.03;\n    p.y = abs(p.y)-0.07;\n    float d = B(p,vec2(size));\n    return d;\n}\n\nfloat checkChar(int targetChar, int char){\n    return 1.-abs(sign(float(targetChar) - float(char)));\n}\n\nfloat drawFont(vec2 p, int char){\n    p*=SkewX(-0.4);\n    float d = seg0(p)*checkChar(seg_0,char);\n    d += seg1(p)*checkChar(seg_1,char);\n    d += seg2(p)*checkChar(seg_2,char);\n    d += seg3(p)*checkChar(seg_3,char);\n    d += seg4(p)*checkChar(seg_4,char);\n    d += seg5(p)*checkChar(seg_5,char);\n    d += seg6(p)*checkChar(seg_6,char);\n    d += seg7(p)*checkChar(seg_7,char);\n    d += seg8(p)*checkChar(seg_8,char);\n    d += seg9(p)*checkChar(seg_9,char);\n    \n    return d;\n}\n\nfloat random (vec2 p) {\n    return fract(sin(dot(p.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\n// principal value of logarithm of z\n// https://gist.github.com/ikr7/d31b0ead87c73e6378e6911e85661b93\nvec2 clog (vec2 z) {\n\treturn vec2(log(length(z)), atan(z.y, z.x));\n}\n\n// The following code will return the Droste Zoom UV.\n// by roywig https://www.shadertoy.com/view/Ml33R7\nvec2 drosteUV(vec2 p){\n    float speed = 0.25;\n    float animate = mod(iTime*speed,2.07);\n    float rate = sin(iTime*0.5);\n    //p = clog(p)*mat2(1,.11,rate*0.5,1);\n    p = clog(p);\n    p = exp(p.x-animate) * vec2( cos(p.y), sin(p.y));\n    vec2 c = abs(p);\n    vec2 duv = .5+p*exp2(ceil(-log2(max(c.y,c.x))-2.));\n    return duv;\n}\n\n// circle animation\nfloat widgetItem0(vec2 p, float rval){\n    vec2 prevP = p;\n    \n    float d = abs(length(p)-0.12)-0.005;\n    p*=Rot(radians(iTime*60.*rval));\n    d = max((abs(p.y)-0.05),d);\n    float d2 = abs(length(p)-0.12)-0.03;\n    d2 = max(-(abs(p.y)-0.05),d2);\n    d = min(d,abs(d2)-0.005);\n    \n    d2 = abs(length(p)-0.03)-0.005;\n    d = min(d,d2);\n    \n    p.y = abs(p.y)-0.135;\n    d2 = Tri(p,vec3(0.03));\n    d = min(d,d2);\n    \n    p = prevP;\n    p*=Rot(radians(sin(iTime*0.5)*-100.));\n    p.y = abs(p.y)-0.175;\n    p.y*=-1.;\n    d2 = abs(Tri(p,vec3(0.04)))-0.005;\n    d = min(d,d2);    \n    \n    return d;\n}\n\n// clock animation\nfloat widgetItem1(vec2 p){\n    vec2 prevP = p;\n    \n    p*=Rot(radians(iTime*30.));\n    p = DF(p,8.);\n    p-=0.25;\n    p*=Rot(radians(45.));\n    float d = B(p,vec2(0.005,0.03)); \n    \n    p = prevP;\n    \n    p*=Rot(radians(iTime*30.));\n    p = DF(p,4.);\n    p-=0.27;\n    p*=Rot(radians(45.));\n    float d2 = B(p,vec2(0.005,0.05));     \n    \n    d = min(d,d2);\n    \n    p = prevP;\n    \n    p*=Rot(radians(sin(iTime)*180.));\n    p.y = abs(p.y);\n    p.y-=0.28;\n    p.y*=0.07;\n    d2 = Tri(p,vec2(0.05));\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = length(p)-0.03;\n    d = min(d,d2);\n    \n    return d;\n}\n\n// digit number animation\nfloat widgetItem2(vec2 p){\n    vec2 prevP = p;\n    p*=1.05;\n    float d = drawFont(p-vec2(-0.35,0.0),int(mod(iTime,9.)));\n    float d2 = drawFont(p-vec2(-0.15,0.0),int(mod(iTime*2.,9.)));\n    d = min(d,d2);\n    d2 = drawFont(p-vec2(0.15,0.0),int(mod(iTime*15.,9.)));\n    d = min(d,d2);\n    d2 = drawFont(p-vec2(0.35,0.0),int(mod(iTime*30.,9.)));\n    d = min(d,d2);\n    d2 = segDot(p);\n    d = min(d,d2);\n    return abs(d)-0.002;\n}\n\n// slider animation\nfloat widgetItem3(vec2 p){\n    vec2 prevP = p;\n    float d = B(p,vec2(0.42,0.002));\n    p.x += sin(iTime)*0.35;\n    d = max(-(length(p)-0.02),d);\n    p = prevP;\n    p.x = abs(p.x)-0.42;\n    float d2 = B(p,vec2(0.002,0.03));\n    d = min(d,d2);\n    p = prevP;\n    p.x += sin(iTime)*0.35;\n    d2 = abs(length(p)-0.02)-0.002;\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x-=iTime*0.1;\n    p.x = mod(p.x,0.06)-0.03;\n    d2 = length(p)-0.008;\n    p = prevP;\n    d2 = max((abs(p.x)-0.4),d2);\n    p.x += sin(iTime)*0.35;\n    d2 = max(-(length(p)-0.02),d2);\n    d = min(d,d2);\n    \n    \n    p = prevP;\n    p*=15.;\n    p.x+=iTime*1.5;\n    d2 = sin(p.y*0.6)*0.23+cos(p.x*1.5)*0.2;\n    d2 = abs(d2)-0.005;\n    p = prevP;\n    d2 = max(abs(p.x)-0.4,d2);\n    d2 = max(abs(p.y)-0.2,d2);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat widgetItem4(vec2 p){\n    vec2 prevP = p;\n    float d = B(p,vec2(0.42,0.002));\n    p.x = abs(p.x)-0.42;\n    float d2 = B(p,vec2(0.002,0.05));\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x-=iTime*0.1;\n    p.x = mod(p.x,0.06)-0.03;\n    d2 = B(p,vec2(0.002,0.025));\n    p = prevP;\n    d2 = max((abs(p.x)-0.4),d2);\n    d = min(d,d2);\n    \n    p.x -= sin(iTime*1.1)*-0.35;\n    p.y = abs(p.y)-0.05;\n    p.y*=-1.;\n    d2 = abs(Tri(p,vec2(0.03)))-0.002;\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat widgetItem5(vec2 p){\n    vec2 prevP = p;\n    float d = B(p,vec2(0.002,0.42));\n    p.y -= sin(iTime)*0.33;\n    p*=Rot(radians(45.));\n    d = max(-B(p,vec2(0.03)),d);\n    p = prevP;\n    p.y = abs(p.y)-0.42;\n    float d2 = B(p,vec2(0.03,0.002));\n    d = min(d,d2);\n    p = prevP;\n    p.y -= sin(iTime)*0.33;\n    p*=Rot(radians(45.));\n    d2 = abs(B(p,vec2(0.03)))-0.002;\n    d = min(d,d2);\n    return d;\n}\n\nfloat widgetItem6(vec2 p){\n    vec2 prevP = p;\n    float d = B(p,vec2(0.002,0.42));\n    p.y = abs(p.y)-0.42;\n    float d2 = B(p,vec2(0.05,0.002));\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y+=iTime*0.1;\n    p.y = mod(p.y,0.06)-0.03;\n    d2 = B(p,vec2(0.025,0.002));\n    p = prevP;\n    d2 = max((abs(p.y)-0.4),d2);\n    d = min(d,d2);\n    \n    p.y -= sin(iTime*1.1)*-0.35;\n    p.x = abs(p.x)-0.05;\n    p*=Rot(radians(-90.));\n    d2 = abs(Tri(p,vec2(0.03)))-0.002;\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat pattern1(vec2 p){\n    float d = abs(B(p-vec2(0.002),vec2(0.5)))-0.004;\n    \n    float d2 = widgetItem1(p);\n    d = min(d,d2);\n    return d;\n}\n\nfloat pattern2(vec2 p){\n    float d = abs(B(p-vec2(0.002,0.002+0.25),vec2(0.5,0.25)))-0.004;\n    float d2 = abs(B(p-vec2(0.002,0.002-0.25),vec2(0.5,0.25)))-0.004;\n    d = min(d,d2);\n        \n    d2 = widgetItem3(p-vec2(0,0.25));\n    d = min(d,d2);\n    d2 = widgetItem4(p-vec2(0,-0.25));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat pattern3(vec2 p){\n    float d = abs(B(p-vec2(0.002+0.25,0.002),vec2(0.25,0.5)))-0.004;\n    float d2 = abs(B(p-vec2(0.002-0.25,0.002),vec2(0.25,0.5)))-0.004;\n    \n    d = min(d,d2);\n    \n    d2 = length(p-vec2(0.25,0.0))-0.2;\n    d2 = widgetItem5(p-vec2(0.25,0.0));\n    d = min(d,d2);\n    d2 = length(p-vec2(-0.25,0.0))-0.2;\n    d2 = widgetItem6(p-vec2(-0.25,0.0));\n    d = min(d,d2);    \n    \n    return d;\n}\n\nfloat pattern4(vec2 p, float rval){\n    vec2 prevP = p;\n    float d = abs(B(p-vec2(0.002+0.25,0.002+0.25),vec2(0.25)))-0.004;\n    float d2 = abs(B(p-vec2(0.002-0.25,0.002+0.25),vec2(0.25)))-0.004;\n    d = min(d,d2);\n    d2 = abs(B(p-vec2(0.002,0.002-0.25),vec2(0.5,0.25)))-0.004;\n    d = min(d,d2);\n    \n    p.x = abs(p.x);\n    p.x-=0.25;\n    p*= vec2(sign(prevP.x),1);\n    d2 = widgetItem0(p-vec2(0.0,0.25),-rval);\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = widgetItem2(p-vec2(0.0,-0.25));\n    d = min(d,d2);  \n    \n    return min(d,d2);\n}\n\nfloat pattern5(vec2 p, float rval){\n    vec2 prevP = p;\n    float d = abs(B(p-vec2(0.002+0.25,0.002-0.25),vec2(0.25)))-0.004;\n    float d2 = abs(B(p-vec2(0.002-0.25,0.002-0.25),vec2(0.25)))-0.004;\n    d = min(d,d2);\n    d2 = abs(B(p-vec2(0.002,0.002+0.25),vec2(0.5,0.25)))-0.004;\n    d = min(d,d2);\n    \n    p.x = abs(p.x);\n    p.x-=0.25;\n    p*= vec2(sign(prevP.x),1);\n    d2 = widgetItem0(p-vec2(0.0,-0.25),-rval);\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = widgetItem2(p-vec2(0.0,0.25));\n    d = min(d,d2);  \n    \n    return min(d,d2);\n}\n\nvec3 draw(vec2 p, vec3 col, float size){\n    vec2 prevP = p;\n    \n    p*=size;\n    vec2 id = floor(p);\n    vec2 gr = fract(p)-0.5;\n    float n = random(id);\n    \n    if(n<0.2){\n        float d = pattern1(gr);\n        col = mix(col, vec3(1.), S(d,0.0));\n    } else if(n>=0.2 && n<0.35){\n        float d = pattern2(gr);\n        col = mix(col, vec3(1.), S(d,0.0));\n    } else if(n>=0.35 && n<0.5){\n        float d = pattern3(gr);\n        col = mix(col, vec3(1.), S(d,0.0));\n    } else if(n>=0.5 && n<0.75){\n        float d = pattern4(gr,n);\n        col = mix(col, vec3(1.), S(d,0.0));\n    } else {\n        float d = pattern5(gr,n);\n        col = mix(col, vec3(1.), S(d,0.0));\n    }\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 prevP = p;\n    \n    p = drosteUV(p);\n    //p.y-=iTime*0.1;\n    vec3 col = vec3(0.);\n    col =draw(p,col,4.);\n    p = prevP;\n    col*=B(p,vec2(0.1));\n \n    fragColor = vec4(sqrt(col),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}