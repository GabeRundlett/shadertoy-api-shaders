{
    "Shader": {
        "info": {
            "date": "1700600768",
            "description": "Small utility to use in your projects!",
            "flags": 32,
            "hasliked": 0,
            "id": "clKyWy",
            "likes": 1,
            "name": "Small mouse drag code",
            "published": 3,
            "tags": [
                "mouse",
                "scroll",
                "infinite",
                "drag",
                "scrolling"
            ],
            "usePreview": 0,
            "username": "fishy",
            "viewed": 158
        },
        "renderpass": [
            {
                "code": "// Not trying to make this bit small,\n// but I am trying to make the contents of Buf. A small\n\n#define mouseDrag (texelFetch(iChannel0, ivec2(0, 0), 0).xy)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 mo = (mouseDrag * 2.0 - iResolution.xy) / iResolution.y;\n\n    fragColor = texture(iChannel1, (uv - mo));\n    fragColor += vec2(smoothstep(0.1, 0.05, length(uv - mo)), 1).xxxy;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Can it get smaller?\n\n// -2 by MysteryPancake:\n//  -1 d.xy = iFrame > 0 ? r(p.x) : vec2(0);\n//  -1 by removing trailing zeroes if(iMouse.w > 0.)\n\n#define r(i) texelFetch(iChannel0, ivec2(i, 0), 0).xy\n#define w(i, t) if (i == p.x) d.rg = t;\n\nvoid mainImage(out vec4 d, vec2 c)\n{\n    ivec2 p = ivec2(c);\n    d.xy = iFrame > 0? r(p.x) : vec2(0);\n    \n    if(iMouse.w > 0.)\n    {\n        w(1, r(0));\n    }\n    else\n        w(0, r(1) + iMouse.xy - abs(iMouse.zw));\n}\n\n/*\nOriginal (232 chars)\n\n\n#define r(i) texelFetch(iChannel0, ivec2(i, 0), 0).xy\n#define w(i, t) if (i == p.x) d.rg = t;\n\nvoid mainImage(out vec4 d, vec2 c)\n{\n    ivec2 p = ivec2(c);\n    d.xy = iFrame == 0? vec2(0) : r(p.x);\n    \n    if(iMouse.w > 0.0)\n    {\n        w(1, r(0));\n    }\n    else\n        w(0, r(1) + iMouse.xy - abs(iMouse.zw));\n}\n\n*/",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}