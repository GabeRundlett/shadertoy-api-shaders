{
    "Shader": {
        "info": {
            "date": "1645138668",
            "description": "A Truchet kaleidoscope like effect done by sampling a video trough a Truchet shaped UV.",
            "flags": 0,
            "hasliked": 0,
            "id": "NdsyDS",
            "likes": 3,
            "name": "Kaleidoscope Truchet",
            "published": 3,
            "tags": [
                "truchet"
            ],
            "usePreview": 0,
            "username": "Pelegefen",
            "viewed": 239
        },
        "renderpass": [
            {
                "code": "#define PI 3.1465\n#define TAU 6.283185307179586\n\n\nconst float _Scale = 5.;\nconst float _Smoothness = 0.21;\n\n\n\nfloat hash21(vec2 n){\n\n   return fract(sin(dot(n.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat rand01(vec2 p)\n{\n      return ceil(hash21(p) * 2. - 1.);\n}\n\nvec2 rot(vec2 p, float rad)\n{\n    float s = sin(rad);\n    float c = cos(rad);\n    return p*mat2(c,s,-s,c);\n\n}\n\n\n\nvec2 Tuv(vec2 uv)\n{\n\n\n\n        vec2 guv = fract(uv);\n                vec2 guv1 = fract(uv);\n\n        vec2 id = floor(uv);\n\n  \n   // if(mod(id.x  , 2.) == 0.)\n   // vec2 rguv =  rot(guv +vec2(1.0)  ,fract(iTime *.1)* TAU );\n    if(rand01(id) == 0.)\n        guv.x = 1. - guv.x;\n        \n        \n     float f = _Smoothness;\n    float line1 = smoothstep(0.711 - f,0.7111 + f,guv.x + guv.y);\n        \n    float line2 = smoothstep(1.31 + f,1.3 - f,guv.x + guv.y);\n    \n    float corner1 = smoothstep(0.31 + f,0.3 - f ,guv.x + guv.y);\n\n    float corner2 = smoothstep(1.711 - f ,1.7111 + f,guv.x + guv.y);\n\n    float tr = ((line1 * line2) + (corner1 + corner2));\n    \n    return vec2(tr, tr * length(guv -.5));\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy -.5* iResolution.xy)/iResolution.y;\n    vec2 ouv = uv;\n     uv += iTime *.05;\n\n        uv *= vec2(_Scale);\n        \n        vec2 tuv = Tuv(uv);\n        \n        vec2 ttuv = Tuv(tuv * 5.3);\n        \n       \n       vec3 col =  vec3(tuv,0.);\n       col = texture(iChannel0,tuv).xyz;\n       // col =  vec3(abs(tr * (guv.x - guv.y)*.5) );\n\n      //  vec3 col2 =fract(abs(rot( ouv,iTime / TAU).xyy  ) )+.5;\n       // col = mix(col2.yxx,col2,tr);\n          //col = vec3(guv,0.);\n         // float g = smoothstep(.011,.01,guv1.x) + smoothstep(.011,.01,guv1.y);\n      // col = vec3( max( g,col.r ),col.g - g,col.b - g) ; \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}