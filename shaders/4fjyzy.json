{
    "Shader": {
        "info": {
            "date": "1722526914",
            "description": "A spiral where 1 turn equals 1 octave.",
            "flags": 4,
            "hasliked": 0,
            "id": "4fjyzy",
            "likes": 0,
            "name": "Fork Spiral spe antinoun 857",
            "published": 3,
            "tags": [
                "visualization",
                "audio",
                "microphone"
            ],
            "usePreview": 0,
            "username": "antinoun",
            "viewed": 74
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265358979323846\n\nfloat nturns   = 10.;\nfloat vol_min  = 0.; // Minimum volume that shows up\nfloat vol_max  = 1.; // Volume that saturates the color\n\n// Musical parameters\nfloat A        = 440.0 / 2.;       // Lowest note\nfloat tet_root = 1.05946309435929; // 12th root of 2\n\n// Spiral visual parameters from https://www.shadertoy.com/view/WtjSWt\nfloat dis      = .05;\nfloat width    = .02;\nfloat blur     = .02;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2  uv     = fragCoord.xy / iResolution.xy;\n    float aspect = iResolution.xy.x / iResolution.xy.y;\n    \n    vec2 uvcorrected = uv - vec2(0.5, 0.5);\n    uvcorrected.x   *= aspect;\n\n    float angle      = atan(uvcorrected.y, uvcorrected.x);\n    float offset     = length(uvcorrected) + (angle/(2. * PI)) * dis;\n    float which_turn = floor(offset / dis);\n    float cents      = (which_turn - (angle / 2. / PI)) * 1200.;\n    float freq       = A * pow(tet_root, cents / 100.);\n    float bin        = freq / iSampleRate;\n    float bri        = texture(iChannel0, vec2(bin, 0.25)).x;\n    \n    bri = (bri - vol_min) / (vol_max - vol_min);\n    bri = max(bri, 0.);\n    \n    // Control the curve of the color mapping. Try e.g. 2. or 4.\n    bri = pow(bri, 2.);\n\n    vec3 lineColor;\n    if (bri < 0.5) {\n        lineColor = vec3(bri/.5, 0., bri/.5);\n    } else {\n        lineColor = vec3(1., (bri - .5) * 2., 1.);\n    }\n\n    float circles = mod(offset, dis);\n    vec3  col     = bin > 1. ? vec3(0., 0., 0.) :\n                    (smoothstep(circles-blur,circles,width) -\n                     smoothstep(circles,circles+blur,width)) * lineColor;\n    \n    fragColor     = vec4(col, 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "mic",
                        "id": 32,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/mic.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}