{
    "Shader": {
        "info": {
            "date": "1712292498",
            "description": "While I was doing some exploration for a client I did this version inspired by the Sakura season mix with gloomy day in Seoul.\nAfter a while the shader start doing some weird stuffs, but as always I kinda like it !\nIts like the day keep going on.",
            "flags": 0,
            "hasliked": 0,
            "id": "4cyGRR",
            "likes": 2,
            "name": "Sakura Rain ðŸŒ¸",
            "published": 3,
            "tags": [
                "noise",
                "fbm",
                "rain",
                "sakura"
            ],
            "usePreview": 0,
            "username": "Makio64",
            "viewed": 153
        },
        "renderpass": [
            {
                "code": "//noise & fbm from : https://www.shadertoy.com/view/Xds3Rj\nfloat hash(float x)\n{\n\treturn fract(21654.6512 * sin(385.51 * x));\n}\n\nfloat hash(vec2 p)\n{\n\treturn fract(21654.65155 * sin(35.51 * p.x + 45.51 * p.y));\n}\n\nfloat lhash(float x, float y)\n{\n\tfloat h = 0.0;\n\t\n\tfor(int i = 0;i < 5;i++)\n\t{\n\t\th += (fract(21654.65155 * float(i) * sin(35.51 * x + 45.51 * float(i) * y * (5.0 / float(i))))* 2.0 - 1.0) / 10.0;\n\t}\n\treturn h / 5.0 + 0.02;\n\treturn (fract(21654.65155 * sin(35.51 * x + 45.51 * y))* 2.0 - 1.0) / 20.0;\n}\n\nfloat noise(vec2 p)\n{\n\tvec2 fl = floor(p);\n\tvec2 fr = fract(p);\n\t\n\tfr.x = smoothstep(0.0,1.0,fr.x);\n\tfr.y = smoothstep(0.0,1.0,fr.y);\n\t\n\tfloat a = mix(hash(fl + vec2(0.0,0.0)), hash(fl + vec2(1.0,0.0)),fr.x);\n\tfloat b = mix(hash(fl + vec2(0.0,1.0)), hash(fl + vec2(1.0,1.0)),fr.x);\n\t\n\treturn mix(a,b,fr.y);\n}\n\n//Fractal Brownian Motion \nfloat fbm(vec2 p)\n{\n\tfloat v = 0.0, f = 1.0, a = 0.5;\n\tfor(int i = 0;i < 5; i++)\n\t{\n\t\tv += noise(p * f) * a;\n\t\tf *= 2.0;\n\t\ta *= 0.5;\n\t}\n\treturn v;\n}\n\n//Fun start here\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv = uv*2.0 -1.0;\n\tuv.x *= iResolution.x / iResolution.y;\t\n\n    //sakura color with some rgb variation\n    float r = noise(uv*2.)*.25+.75;\n    float g = 0.31 + .2 * abs(sin(iTime));\n    float b = 0.5  + .2 *abs(cos(iTime*.7));\n    vec3 sakuraCol = vec3(r,g,b);\n    \n    //start the noise at time 1000, change to 0 to see the dive into the noise\n    vec3 maskRain = vec3( fbm(uv+vec2(0.,iTime+noise(uv*(1000.+iTime*5.)))) );\n\tvec3 col = maskRain;\n\n    //float mask = fbm(iTime+vec2(noise(uv*0.5+vec2(sin(iTime*.2),iTime*.1)),iTime+noise(uv*1.7+vec2(0.*0.3,iTime*.1)))*4.);\n    //float mask = fbm(uv+vec2(0.,iTime))+.1;\n    \n    // test\n    col *= sakuraCol *1.2;\n    // col = mix(col, sakuraCol, mask);\n    // col *= mask;\n    \n    //col = vec3(mask); // debug the mask\n    //col = vec3(maskRain + .5); // debug the mask\n    //col = sakuraCol;// debug the sakura\n   \n    fragColor = vec4(col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}