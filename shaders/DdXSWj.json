{
    "Shader": {
        "info": {
            "date": "1669539897",
            "description": "Graphic Design Experiment 4",
            "flags": 0,
            "hasliked": 0,
            "id": "DdXSWj",
            "likes": 32,
            "name": "Graphic Design Experiment 4",
            "published": 3,
            "tags": [
                "font",
                "graphicdesign",
                "cineshader"
            ],
            "usePreview": 1,
            "username": "yasuo",
            "viewed": 2811
        },
        "renderpass": [
            {
                "code": "#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define B(p,s) max(abs(p).x-s.x,abs(p).y-s.y)\n#define Tri(p,s,a) max(-dot(p,vec2(cos(-a),sin(-a))),max(dot(p,vec2(cos(a),sin(a))),max(abs(p).x-s.x,abs(p).y-s.y)))\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n\n#define FS 0.46 // font size\n#define FGS FS/5. // font grid size\n//#define OUTLINE\n\n// fully modified version of the Letterform Variations font\n#define char_0 0\n#define char_1 1\n#define char_2 2\n#define char_3 3\n#define char_4 4\n#define char_5 5\n#define char_6 6\n#define char_7 7\n#define char_8 8\n#define char_9 9\n#define char_A 10\n#define char_B 11\n#define char_C 12\n#define char_D 13\n#define char_E 14\n#define char_F 15\n#define char_G 16\n#define char_H 17\n#define char_I 18\n#define char_J 19\n#define char_K 20\n#define char_L 21\n#define char_M 22\n#define char_N 23\n#define char_O 24\n#define char_P 25\n#define char_Q 26\n#define char_R 27\n#define char_S 28\n#define char_T 29\n#define char_U 30\n#define char_V 31\n#define char_W 32\n#define char_X 33\n#define char_Y 34\n#define char_Z 35\n\nfloat random (vec2 p) {\n    return fract(sin(dot(p.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nfloat charA(vec2 p){\n    vec2 prevP = p;\n    float d = B(p-vec2(0.0,FGS*4.),vec2(FS,FGS));\n    float d2 = B(p,vec2(FS,FGS));\n    d = min(d,d2);\n    p.x = abs(p.x);\n    d2 = B(p-vec2(FGS*4.,0.),vec2(FGS,FS));\n    d = min(d,d2);\n    return d;\n}\n\nfloat charB(vec2 p) {\n    vec2 prevP = p;\n    p.y = abs(p.y);\n    float d = B(p-vec2(0.0,FGS*4.),vec2(FS,FGS));\n    p = prevP;\n    float d2 = B(p-vec2(-FGS,0.0),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    \n    d2 = B(p-vec2(-FGS*4.,0.),vec2(FGS,FS));\n    d = min(d,d2);\n    \n    p.y = abs(p.y);\n    p-=vec2(FGS*2.,FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charC(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(0.0,FGS*4.),vec2(FS,FGS));\n    \n    float d2 = B(p-vec2(FGS*2.,-FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    \n    d2 = B(p-vec2(-FGS*4.,FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p-=vec2(-FGS*2.,-FGS*2.);\n    p*=Rot(radians(-45.));\n    \n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charD(vec2 p){\n    vec2 prevP = p;\n    p.y=abs(p.y);\n    float d = B(p-vec2(0.0,FGS*4.),vec2(FS,FGS));\n    p = prevP;\n    float d2 = B(p-vec2(FGS*4.,0.),vec2(FGS,FS));\n    d = min(d,d2);\n    \n    d2 = B(p,vec2(FGS,FS));\n    d = min(d,d2);\n    return d;\n}\n\nfloat charE(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = charC(p);\n    float d2 = B(p,vec2(FS,FGS));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charF(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(0.0,FGS*4.),vec2(FS,FGS));\n    \n    float d2 = B(p-vec2(-FGS,0.),vec2(FGS*4.,FGS));\n    d = min(d,d2);\n    \n    d2 = B(p-vec2(-FGS*4.,FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p-=vec2(0.,-FGS*2.);\n    \n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charG(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = charC(p);\n    float d2 = B(p-vec2(FGS*2.,0.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    d2 = B(p-vec2(FGS*4.,-FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charH(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(FGS*4.,0.0),vec2(FGS,FS));\n    \n    float d2 = B(p-vec2(0.0,0.0),vec2(FGS,FS));\n    d = min(d,d2);\n    d2 = B(p-vec2(FGS*2.,0.0),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    p.y = abs(p.y);\n    d2 = B(p-vec2(-FGS*2.,FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charI(vec2 p) {\n    vec2 prevP = p;\n    p.y = abs(p.y);\n    float d = B(p-vec2(0.,FGS*4.),vec2(FS,FGS));\n    p = prevP;\n    float d2 = B(p,vec2(FGS,FS));\n    d = min(d,d2);\n    d2 = B(p,vec2(FS,FGS));\n    d = min(d,d2);\n    return d;\n}\n\nfloat charJ(vec2 p) {\n    vec2 prevP = p;\n    float d = B(p-vec2(0.,FGS*4.),vec2(FS,FGS));\n    \n    float d2 = B(p-vec2(0.,FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    d2 = B(p-vec2(-FGS*4.,-FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p-=vec2(-FGS*2.,-FGS*2.);\n    p*=Rot(radians(45.));\n    \n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);    \n    \n    return d;\n}\n\nfloat charK(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(FGS*4.,FGS*2.),vec2(FGS,FGS*3.));\n    \n    float d2 = B(p,vec2(FS,FGS));\n    d = min(d,d2);\n    \n    d2 = B(p-vec2(-FGS*4.,0.0),vec2(FGS,FS));\n    d = min(d,d2);\n    \n    d2 = B(p-vec2(FGS*2.,-FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charL(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(-FGS*4.,FGS*2.),vec2(FGS,FGS*3.));\n    \n    float d2 = B(p-vec2(FGS*2.,-FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    \n    \n    p-=vec2(-FGS*2.,-FGS*2.);\n    p*=Rot(radians(-45.));\n    \n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charM(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p,vec2(FS,FGS));\n    \n    float d2 = B(p,vec2(FGS,FS));\n    d = min(d,d2);\n    \n    p.x = abs(p.x);\n    d2 = B(p-vec2(FGS*4.,-FGS),vec2(FGS,FGS*4.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charN(vec2 p) {\n    vec2 prevP = p;\n    \n    p.x = abs(p.x);\n    float d = B(p-vec2(FGS*4.,0.),vec2(FGS,FS));\n    \n    p = prevP;\n    float d2 = B(p,vec2(FGS,FS));\n    d = min(d,d2);\n    \n    d2 = B(p-vec2(-FGS*2.,FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n        \n    d2 = B(p-vec2(FGS*2.,-FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charO(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(FGS*4.,FGS*2.),vec2(FGS,FGS*3.));\n    \n    p = prevP;\n    float d2 = B(p-vec2(FGS*2.,FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n\n    d2 = B(p-vec2(-FGS*2.,-FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    \n    d2 = B(p-vec2(-FGS*4.,-FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p-=vec2(-FGS*2.,FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p =prevP;    \n    p-=vec2(FGS*2.,-FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charP(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(0.,FGS*4.),vec2(FS,FGS));\n    \n    float d2 = B(p,vec2(FS,FGS));\n    d = min(d,d2);\n    \n    d2 = B(p-vec2(-FGS*2.,0.),vec2(FGS,FS));\n    d = min(d,d2);\n        \n    d2 = B(p-vec2(FGS*4.,FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charQ(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = charO(p);\n    \n    p-=vec2(FGS*2.,-FGS*2.);\n    p*=Rot(radians(45.));\n    float d2 = B(p,vec2(FGS*3.,FGS));\n    d = min(d,d2);\n\n    return d;\n}\n\nfloat charR(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(0.,FGS*4.),vec2(FS,FGS));\n    \n    float d2 = B(p,vec2(FS,FGS));\n    d = min(d,d2);\n    \n    d2 = B(p-vec2(-FGS*4.,0.),vec2(FGS,FS));\n    d = min(d,d2);\n        \n    d2 = B(p-vec2(FGS*4.,FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n        \n    d2 = B(p-vec2(0.0,-FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);    \n            \n    d2 = B(p-vec2(FGS*2.,-FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);  \n    \n    return d;\n}\n\nfloat charS(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(FGS*2.,FGS*4.),vec2(FGS*3.,FGS));\n    \n    float d2 = B(p,vec2(FS,FGS));\n    d = min(d,d2);\n    \n    p-=vec2(-FGS*2.,FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = B(p-vec2(-FGS*2.,-FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    \n    p-=vec2(FGS*2.,-FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charT(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(0.,FGS*2.),vec2(FS,FGS));\n    \n    p*=Rot(radians(45.));\n    float d2 = B(p,vec2(FGS,FS*1.2));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charU(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(0.,-FGS*2.),vec2(FS,FGS));\n    \n    p.x = abs(p.x);\n    float d2 = B(p-vec2(FGS*2.,0.),vec2(FGS,FS));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charV(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(-FGS*4.,0.),vec2(FGS,FS));\n    \n    p*=Rot(radians(45.));\n    float d2 = B(p,vec2(FGS,FS*1.2));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charW(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(-FGS*4.,0.),vec2(FGS,FS));\n    \n    p*=Rot(radians(45.));\n    float d2 = B(p,vec2(FGS,FS*1.2));\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = B(p,vec2(FGS,FS));\n    d = min(d,d2);\n    \n    p-=vec2(FGS*2.,-FGS*2.);\n    p*=Rot(radians(-45.));\n    d2 = B(p,vec2(FGS*3.,FGS));\n    d = min(d,d2);    \n    \n    return d;\n}\n\nfloat charX(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(-FGS*4.,FGS*2.),vec2(FGS,FGS*3.));\n    \n    p*=Rot(radians(45.));\n    float d2 = B(p,vec2(FGS,FS*1.2));\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = B(p-vec2(FGS*4.,-FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    d2 = B(p,vec2(FS,FGS));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charY(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(-FGS*4.,FGS*2.),vec2(FGS,FGS*3.));\n    \n    float d2 = B(p-vec2(0.,-FGS),vec2(FGS,FGS*4.));\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = B(p-vec2(FGS*4.,FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    d2 = B(p,vec2(FS,FGS));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat charZ(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(-FGS*4.,FGS*3.),vec2(FGS,FGS*2.));\n    \n    p*=Rot(radians(45.));\n    float d2 = B(p,vec2(FGS,FS*1.2));\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = B(p-vec2(FGS*4.,-FGS*3.),vec2(FGS,FGS*2.));\n    d = min(d,d2);\n    \n    p.y = abs(p.y);\n    d2 = B(p-vec2(0., FGS*4.),vec2(FS,FGS));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat char1(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(-FGS*2.,FGS*4.),vec2(FGS*3.,FGS));\n    \n    float d2 = B(p,vec2(FGS,FS));\n    d = min(d,d2);\n\n    d2 = B(p-vec2(0.,-FGS*4.),vec2(FS,FGS));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat char2(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(FGS*2.,FGS*4.),vec2(FGS*3.,FGS));\n    \n    float d2 = B(p-vec2(FGS*4.,FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    d2 = B(p-vec2(FGS*2.,0.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    \n    d2 = B(p-vec2(0.,-FGS*4.),vec2(FS,FGS));\n    d = min(d,d2);\n    \n    p-=vec2(-FGS*2.,FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p = prevP;\n    p-=vec2(-FGS*2.,-FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);    \n    \n    return d;\n}\n\nfloat char3(vec2 p) {\n    vec2 prevP = p;\n    \n    p.y = abs(p.y);\n    float d = B(p-vec2(0.,FGS*4.),vec2(FS,FGS));\n    \n    p = prevP;\n    p.x = abs(p.x);\n    float d2 = B(p-vec2(FGS*4.,-FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = B(p-vec2(FGS*2.,0.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    \n\n    p-=vec2(FGS*2.,FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);   \n\n    return d;\n}\n\nfloat char4(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(0.,-FGS*2.),vec2(FS,FGS));\n    \n    float d2 = B(p-vec2(-FGS*2.,0.),vec2(FGS,FS));\n    d = min(d,d2);\n    \n    d2 = B(p-vec2(FGS*2.,-FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n\n    return d;\n}\n\nfloat char5(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(0.,FGS*4.),vec2(FS,FGS));\n    \n    float d2 = B(p,vec2(FS,FGS));\n    d = min(d,d2);\n    \n    d2 = B(p-vec2(-FGS*4.,FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = B(p-vec2(-FGS*2.,-FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    \n    p-=vec2(FGS*2.,-FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat char6(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(FGS*2.,FGS*4.),vec2(FGS*3.,FGS));\n    \n    float d2 = B(p,vec2(FS,FGS));\n    d = min(d,d2);\n    \n    p-=vec2(-FGS*2.,FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = B(p-vec2(0.,-FGS*4.),vec2(FS,FGS));\n    d = min(d,d2);\n    \n    p.x = abs(p.x);\n    d2 = B(p-vec2(FGS*4.,-FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat char7(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p,vec2(FS,FGS));\n    \n    p*=Rot(radians(45.));\n    float d2 = B(p,vec2(FGS,FS*1.2));\n    d = min(d,d2);\n    \n    p = prevP;\n\n    \n    d2 = B(p-vec2(0., FGS*4.),vec2(FS,FGS));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat char8(vec2 p) {\n    vec2 prevP = p;\n    \n    p.y = abs(p.y);\n    float d = B(p-vec2(0., FGS*4.),vec2(FS,FGS));\n    \n    p = prevP;\n    p*=Rot(radians(45.));\n    float d2 = B(p,vec2(FGS,FS*1.2));\n    d = min(d,d2);\n    \n    p = prevP;\n    p*=Rot(radians(-45.));\n    d2 = B(p,vec2(FGS,FS*1.2));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat char9(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(FGS*4.,FGS*2.),vec2(FGS,FGS*3.));\n    \n    p = prevP;\n    float d2 = B(p-vec2(FGS*2.,FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n\n    d2 = B(p-vec2(-FGS*2.,-FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    \n    d2 = B(p,vec2(FS,FGS));\n    d = min(d,d2);\n    \n    p-=vec2(-FGS*2.,FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p =prevP;    \n    p-=vec2(FGS*2.,-FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat char0(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(-FGS*4.,0.),vec2(FGS,FS));\n    \n    float d2 = B(p-vec2(-FGS*2.,FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n\n    d2 = B(p-vec2(0.0,-FGS*4.),vec2(FS,FGS));\n    d = min(d,d2);\n    \n    p-=vec2(FGS*2.,FGS*2.);\n    p*=Rot(radians(-45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p =prevP;  \n    d2 = B(p-vec2(FGS*4.,-FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat checkChar(int targetChar, int char){\n    return 1.-abs(sign(float(targetChar) - float(char)));\n}\n\nfloat drawFont(vec2 p, int char){\n    float d = char0(p)*checkChar(char_0,char);\n    d += char1(p)*checkChar(char_1,char);\n    d += char2(p)*checkChar(char_2,char);\n    d += char3(p)*checkChar(char_3,char);\n    d += char4(p)*checkChar(char_4,char);\n    d += char5(p)*checkChar(char_5,char);\n    d += char6(p)*checkChar(char_6,char);\n    d += char7(p)*checkChar(char_7,char);\n    d += char8(p)*checkChar(char_8,char);\n    d += char9(p)*checkChar(char_9,char);\n    d += charA(p)*checkChar(char_A,char);\n    d += charB(p)*checkChar(char_B,char);\n    d += charC(p)*checkChar(char_C,char);\n    d += charD(p)*checkChar(char_D,char);\n    d += charE(p)*checkChar(char_E,char);\n    d += charF(p)*checkChar(char_F,char);\n    d += charG(p)*checkChar(char_G,char);\n    d += charH(p)*checkChar(char_H,char);\n    d += charI(p)*checkChar(char_I,char);\n    d += charJ(p)*checkChar(char_J,char);\n    d += charK(p)*checkChar(char_K,char);\n    d += charL(p)*checkChar(char_L,char);\n    d += charM(p)*checkChar(char_M,char);\n    d += charN(p)*checkChar(char_N,char);\n    d += charO(p)*checkChar(char_O,char);\n    d += charP(p)*checkChar(char_P,char);\n    d += charQ(p)*checkChar(char_Q,char);\n    d += charR(p)*checkChar(char_R,char);\n    d += charS(p)*checkChar(char_S,char);\n    d += charT(p)*checkChar(char_T,char);\n    d += charU(p)*checkChar(char_U,char);\n    d += charV(p)*checkChar(char_V,char);\n    d += charW(p)*checkChar(char_W,char);\n    d += charX(p)*checkChar(char_X,char);\n    d += charY(p)*checkChar(char_Y,char);\n    d += charZ(p)*checkChar(char_Z,char);\n    \n    float a = radians(45.);\n    p = abs(p)-0.37;\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    \n    #ifdef OUTLINE\n        return abs(d)-0.01;\n    #endif\n    \n    return d;\n}\n\nfloat dSlopeLines(vec2 p){\n    float lineSize = 24.;\n    float d = tan((mix(p.x,p.y,0.7)+(-iTime*1.5/lineSize))*lineSize)*lineSize;\n    return d;\n}\n\nfloat blocks(vec2 p){\n    vec2 prevP = p;\n    \n    p.x = mod(p.x,0.24)-0.12;\n    float d = B(p, vec2(FGS*0.55));\n    p = prevP;\n    p.x+=0.12;\n    p.x = mod(p.x,0.24)-0.12;\n    p.y = abs(p.y)-0.12;\n    float d2 = B(p, vec2(FGS*0.55));\n    return min(d,d2);\n}\n\nfloat blocks2(vec2 p){\n    p.y = mod(p.y,0.92)-0.46;\n    vec2 prevP = p;\n    p.y-=FGS*2.5;\n    float d = abs(B(p,vec2(FGS*1.7)))-0.03;\n    float d2 = B(p,vec2(FGS*0.5));\n    d = min(d,d2);\n    p = prevP;\n    p.y-=-FGS*2.5;\n    d2 = abs(B(p,vec2(FGS)))-0.03;\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat cubicInOut(float t) {\n  return t < 0.5\n    ? 4.0 * t * t * t\n    : 0.5 * pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\nfloat getTime(float t, float duration){\n    return clamp(t,0.0,duration)/duration;\n}\n\nfloat drawFonts4GridsSpace(int char, float scale, vec2 grd, vec2 prevGrd, vec2 pa, vec2 pb, vec2 pc, vec2 pd){\n    grd-=pa;\n    grd*=scale;\n\n    float d = drawFont(grd,char);\n    grd = prevGrd;\n\n    grd -=pb;\n    grd*=scale;\n    float d2 = drawFont(grd,(char+1>=35)?10:char+1);\n    d = min(d,d2);\n    grd = prevGrd;\n\n    grd -=pc;\n    grd*=scale;\n    d2 = drawFont(grd,(char+2>=35)?10:char+2);\n    d = min(d,d2);\n    grd = prevGrd;\n\n    grd -=pd;\n    grd*=scale;\n    d2 = drawFont(grd,(char+3>=35)?10:char+3);\n    d = min(d,d2);\n    return d;\n}\n\nfloat gridSystem(vec2 p){\n    vec2 prevP = p;\n    p*=3.;\n    p.y+=iTime*0.5;\n    vec2 id = floor(p);\n    vec2 grd = fract(p)-0.5;\n    \n    float n = random(id);\n    float nChar = random(id)*35.0;\n    int char = int(nChar);\n    float d = drawFont(grd,char);\n    if(n>=0.1 && n<0.2 && char < 10){\n        int num = int(mod(iTime*float(nChar),10.0));\n        d = drawFont(grd,num);\n    }\n    \n    float d2 = 10.;\n    \n    vec2 prevGrd = grd;\n    float scale = 2.1;\n    if(n>=0.2 && n<0.5){\n    \n        float frame = mod(iTime,10.0);\n        float time = frame;\n\n        vec2 pa = vec2(-0.24,0.24);\n        vec2 pb = vec2(-0.24,-0.24);\n        vec2 pc = vec2(0.24,-0.24);\n        vec2 pd = vec2(0.24,0.24);\n        if(frame>=1. && frame<3.){\n            time = getTime(time-1.,0.6);\n            float val = cubicInOut(time)*0.48;\n            pa = vec2(-0.24,0.24-val);\n            pb = vec2(-0.24+val,-0.24);\n            pc = vec2(0.24,-0.24+val);\n            pd = vec2(0.24-val,0.24);\n        } else if(frame>=3. && frame<5.){\n            time = getTime(time-3.,0.6);\n            float val = cubicInOut(time)*0.48;\n            pa = vec2(-0.24+val,-0.24);\n            pb = vec2(0.24,-0.24+val);\n            pc = vec2(0.24-val,0.24);\n            pd = vec2(-0.24,0.24-val);\n        } else if(frame>=5. && frame<7.){\n            time = getTime(time-5.,0.6);\n            float val = cubicInOut(time)*0.48;\n            pa = vec2(0.24,-0.24+val);\n            pb = vec2(0.24-val,0.24);\n            pc = vec2(-0.24,0.24-val);\n            pd = vec2(-0.24+val,-0.24);\n        } else if(frame>=7. && frame<10.){\n            time = getTime(time-7.,0.6);\n            float val = cubicInOut(time)*0.48;\n            pa = vec2(0.24-val,0.24);\n            pb = vec2(-0.24,0.24-val);\n            pc = vec2(-0.24+val,-0.24);\n            pd = vec2(0.24,-0.24+val);\n        }\n        \n        d = drawFonts4GridsSpace(char, scale, grd, prevGrd, pa, pb, pc, pd);\n        \n    } else if(n>=0.5 && n<0.6){\n        // up\n        grd-=vec2(-0.24,0.24);\n        grd*=scale;\n        d = drawFont(grd,char);\n        grd = prevGrd;\n        \n        grd -= vec2(0.24,0.24);\n        grd*=scale;\n        d2 = drawFont(grd,(char+1>=35)?10:char+1);\n        d = min(d,d2);\n        grd = prevGrd;\n        \n        float d3 = B(grd-vec2(0.,-0.24),vec2(0.46,0.22));\n        \n        float dir = (n>=0.55)?-1.:1.;\n        grd.x*=dir;\n        grd.x+=iTime*n*0.5;\n        grd.x = mod(grd.x,0.2)-0.1;\n        grd.x+=0.1;\n        grd-=vec2(0.,-0.24);\n        grd*=Rot(radians(-90.));\n        \n        d2 = Tri(grd,vec2(FGS*2.),radians(45.));\n        float mask = Tri(grd-vec2(0.0,-FGS),vec2(FGS*2.),radians(45.));\n        d2 = max(-mask,d2);\n        d2 = max(d3,d2);\n        d2 = min(d2,abs(d3)-0.01);\n        d = min(d,d2);\n        \n    } else if(n>=0.7 && n<0.8){\n        // down\n        grd-=vec2(-0.24,-0.24);\n        grd*=scale;\n        d = drawFont(grd,char);\n        grd = prevGrd;\n        \n        grd -= vec2(0.24,-0.24);\n        grd*=scale;\n        d2 = drawFont(grd,(char+1>=35)?10:char+1);\n        d = min(d,d2);\n        grd = prevGrd;        \n        \n        float d3 = B(grd-vec2(0.,0.24),vec2(0.46,0.22));\n        \n        float dir = (n>=0.75)?-1.:1.;\n        grd.x += dir*iTime*0.2;\n        d2 = blocks(grd-vec2(0.,0.24));\n        d2 = max(d3,d2);\n        d2 = min(d2,abs(d3)-0.01);\n        d = min(d,d2);\n    } else if(n>=0.8 && n<0.9){\n        // left\n        grd-=vec2(-0.24,0.24);\n        grd*=scale;\n        d = drawFont(grd,char);\n        grd = prevGrd;        \n        \n        grd -= vec2(-0.24,-0.24);\n        grd*=scale;\n        d2 = drawFont(grd,(char+1>=35)?10:char+1);\n        d = min(d,d2);\n        grd = prevGrd;     \n        \n        \n        float d3 = B(grd-vec2(0.24,0.0),vec2(0.22,0.46));\n        \n        grd-=vec2(0.24,0.0);\n        d2 = dSlopeLines(grd);\n        d2 = max(d3,d2);\n        d2 = min(d2,abs(d3)-0.01);\n        d = min(d,d2);\n    } else if(n>=0.9 && n<1.){\n        // right\n        grd-=vec2(0.24,0.24);\n        grd*=scale;\n        d = drawFont(grd,char);\n        grd = prevGrd;            \n        \n        grd -= vec2(0.24,-0.24);\n        grd*=scale;\n        d2 = drawFont(grd,(char+1>=35)?10:char+1);\n        d = min(d,d2);\n        grd = prevGrd;   \n        \n        float d3 = B(grd-vec2(-0.24,0.0),vec2(0.22,0.46));\n        \n        float dir = (n>=0.95)?-1.:1.;\n        grd.y += dir*iTime*0.2;\n        d2 = blocks2(grd-vec2(-0.24,0.0));\n        d2 = max(d3,d2);\n        d2 = min(d2,abs(d3)-0.01);\n        \n        d = min(d,d2);\n    }\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n\n    vec3 col =vec3(0.0);\n\n    float d = gridSystem(p);\n\n    col = mix(col,vec3(1.),S(d,0.0));\n\n    fragColor = vec4(sqrt(col),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}