{
    "Shader": {
        "info": {
            "date": "1574444887",
            "description": "today’s Nodevember theme is “Star”. here is a star!",
            "flags": 0,
            "hasliked": 0,
            "id": "3sKXRK",
            "likes": 14,
            "name": "star field",
            "published": 3,
            "tags": [
                "spiral",
                "star",
                "psychedelic",
                "nodevember"
            ],
            "usePreview": 0,
            "username": "mahalis",
            "viewed": 525
        },
        "renderpass": [
            {
                "code": "// license: CC BY-NC https://creativecommons.org/licenses/by-nc/4.0/\n\nvec2 r(vec2 p, float a) {\n    float c = cos(a);\n    float s = sin(a);\n    return vec2(c * p.x - s * p.y, s * p.x + c * p.y);\n}\n\nfloat oneArmDistance(vec2 p) {\n    float d = dot(p, vec2(0.0, 1.0));\n    d = max(d, -dot(vec2(abs(p.x), p.y), normalize(vec2(-1.0,0.3))) - 0.1);\n    return d;\n}\n\nvec3 palette(float v) {\n    return vec3(0.6,0.3,0.8) + vec3(0.2,0.5,0.2) * cos(6.28318 * (v + vec3(0.0, 0.665, 0.667)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord - iResolution.xy / 2.) / iResolution.y;\n\n    uv.y = -uv.y;\n    \n    uv *= (2.5 + sin(iTime * 0.23) * 0.5);\n    float radius = length(uv);\n    uv = r(uv, pow(radius * 0.5, 2.0) * -0.2);\n    \n    float d = 1e5;\n    for (int i = 0; i < 5; i++) {\n        float a = float(i) * 6.283 / 5.0 + iTime * 0.2;\n        d = min(d, oneArmDistance(r(uv, a)));\n    }\n    \n    float innerMask = smoothstep(fwidth(d),0.0, d);\n    \n    float angle = atan(uv.y, uv.x) - 0.2 * pow(radius * 0.5,2.0);\n    d -= 0.05 * (sin(angle * 11. + iTime * 1.1 + radius * 0.3) + 0.5 * cos(angle * 19. + iTime * 1.31 + radius * 0.4)) * max(radius - 0.3, 0.);\n    \n    float outerDistance = floor(d * 15.0 - iTime * 0.3);\n    \n    vec3 outerColor = clamp(palette(outerDistance * 0.2 - iTime * 0.1 + angle / 3.1416), 0.0, 1.0);\n    \n    vec3 c = mix(pow(outerColor, vec3(1.4)) * 1.2, vec3(0.0), innerMask);\n\n    fragColor = vec4(vec3(c),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}