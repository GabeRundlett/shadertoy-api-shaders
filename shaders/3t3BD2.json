{
    "Shader": {
        "info": {
            "date": "1613442817",
            "description": "See [url=https://youtu.be/I8fmkLK1OKg]the tutorial video this is from[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "3t3BD2",
            "likes": 14,
            "name": "Perfect Pistons Example 1",
            "published": 3,
            "tags": [
                "domainrepetition",
                "pistons"
            ],
            "usePreview": 0,
            "username": "blackle",
            "viewed": 785
        },
        "renderpass": [
            {
                "code": "//CC0 1.0 Universal https://creativecommons.org/publicdomain/zero/1.0/\n//To the extent possible under law, Blackle Mori has waived all copyright and related or neighboring rights to this work.\n\nfloat piston(vec2 p, float width, float height) {\n    p.x = abs(p.x) - width;\n    p.y -= height;\n    return length(max(p,0.0)) + min(0.0, max(p.x,p.y));\n}\n\nfloat scene(vec2 p) {\n    float center = floor(p.x) + 0.5;\n    float neighbour = center + ((p.x < center) ? -1.0 : 1.0);\n\n    float width = 0.3;\n    float height = sin(iTime + center)*2.;\n    float me = piston(p - vec2(center, 0), width, height);\n    float next = piston(p - vec2(neighbour, 0), width, 2.0);\n    return min(me, next);\n}\n\nvec3 shadeDistance(float d) {\n    float dist = d*100.0;\n    float banding = max(sin(dist), 0.0);\n    float strength = sqrt(1.-exp(-abs(d)*2.));\n    float pattern = mix(strength, banding, (0.6-abs(strength-0.5))*0.3);\n    \n    vec3 color = vec3(pattern);\n    \n    color *= d > 0.0 ? vec3(1.0,0.56,0.4) : vec3(0.4,0.9,1.0);\n\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 mouse = (iMouse.xy-0.5*iResolution.xy)/iResolution.y;\n    uv*=5.;\n    mouse*=5.;\n\n    float mousedist = scene(mouse);\n    vec3 col = shadeDistance(scene(uv));\n    if (distance(mouse, uv) < abs(mousedist) && iMouse.z > 0.) col *=0.5;\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}