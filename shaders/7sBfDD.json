{
    "Shader": {
        "info": {
            "date": "1646312377",
            "description": " please upload please upload please upload please upload please upload please upload ",
            "flags": 0,
            "hasliked": 0,
            "id": "7sBfDD",
            "likes": 49,
            "name": "Interactive 2.5D Squiggles",
            "published": 3,
            "tags": [
                "fun"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 1183
        },
        "renderpass": [
            {
                "code": "#define pi 3.14159\n\nmat2 Rot(float a) {\n    float c = cos(a), s = sin(a);\n    return mat2(c, -s, s, c);\n}\n\nvec3 pal(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d) {\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec2 ms  = (iMouse.xy - 0.5 * iResolution.xy) / iResolution.y;\n    \n    // change me! (and uncomment for loop stuff below)\n    float A = 1.;    // -1. // 0.\n    float r = 0.3;   // 0.6\n    float th = 0.02; // 0.12\n    \n    vec2 dir = uv - ms;\n    float a = atan(dir.x, dir.y);\n    float s = 0.;\n    \n    // n is higher than it needs to be but works fine\n    float n = 20.;\n    float k = 6./iResolution.y;\n    \n    for (float i = n; i > 0.; i--) {\n        float io = A * 2. * pi * i / n;\n        float sc = -4. - 0.5 * i + 0.9 * cos(io - 9. * length(dir) + iTime);\n        vec2 fpos = fract(sc * uv + 0.5 * i * ms) - 0.5;\n        //fpos = abs(fpos) - 0.25;\n        fpos *= Rot(a); // a + io // 5. * a // a + 3. * atan(fpos.x, fpos.y)\n        float d = abs(fpos.x);\n        s *= 0.865;\n        s += step(0., s) * smoothstep(-k, k, -abs(d - r) + th); \n    }\n    \n    float val = s * 0.1 + 0.72 + 0. * iTime - 0.23 * pow(dot(dir,dir), 0.25);\n    val = clamp(val, 0.4, 1.);\n    vec3 e = vec3(1);\n    vec3 col = 0.5 * pal(val, e, e, e, 0.24 * vec3(0,1,2)/3.);   \n    col = smoothstep(0., 1., col);\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}