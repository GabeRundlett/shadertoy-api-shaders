{
    "Shader": {
        "info": {
            "date": "1559321838",
            "description": "Randomized breadth first search with random walk of colors.",
            "flags": 32,
            "hasliked": 0,
            "id": "wlSGDh",
            "likes": 13,
            "name": "Breadth First Search",
            "published": 3,
            "tags": [
                "algorithms",
                "bfs"
            ],
            "usePreview": 0,
            "username": "emh",
            "viewed": 1244
        },
        "renderpass": [
            {
                "code": "float rand(vec2 co){\n\treturn fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float m = length(iResolution.xy);\n    vec4 t = texture(iChannel0, fragCoord.xy / iResolution.xy);\n    vec4 c = vec4(0.0);\n    c.r = rand(vec2(t.x * 13.29, t.x * 29.13));\n    c.g = rand(vec2(t.x * 17.29, t.x * 23.13));\n    c.b = rand(vec2(t.x * 12.59, t.x * 21.93));\n    if (length(c.rgb) > 0.0) {\n    \tc.rgb = normalize(c.rgb);\n    }\n    //c *= (1.0 - 25.0 * t.y / m);\n    c *= abs(t.z) * pow(0.998, t.w);\n    fragColor = c;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float rand(vec2 co){\n\treturn fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nconst int dim = 5;\nconst float spawnSpeed = 2.0;\nconst float lifeTime = 2.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec4 init = vec4(0.0);\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 v = texture(iChannel0, uv);\n    \n    int iv = int(floor(iTime * spawnSpeed));\n    float x = rand(vec2(13.765845, 29.3467547) + 1.13 * vec2(iv, iv));\n    float y = rand(vec2(17.457645, 137.4565) + 2.97 * vec2(iv, iv));\n    vec2 xy = abs(vec2(x, y));\n    ivec2 ixy = ivec2(floor(xy * iResolution.xy));\n    if (ivec2(fragCoord) == ixy) {\n        init.x = iTime + lifeTime;\n        init.y = 0.0;\n        init.z = v.z > 0.0 ? v.z : 1.0;\n        init.w = 0.0;\n        fragColor = init;\n    } else {\n        int dim2 = 2 * dim + 1;\n        int maxi = dim2 * dim2;\n        int starti = int(floor(rand(uv + vec2(iTime, iTime)) * float(maxi)));\n        for (int i = starti; i <= starti + maxi; i++) {\n            int dx = (i % maxi) % dim2 - dim;\n            int dy = (i % maxi) / dim2 - dim;\n            vec2 uv = (fragCoord + vec2(dx, dy)) / iResolution.xy;\n            vec4 t = texture(iChannel0, uv);\n            if (t.x >= 1.0 && \n                (iTime < t.x || v.x == t.x) &&\n                (v.x <= 0.0 || t.x <= 0.0 || v.x == t.x || iTime >= v.x)) {\n                float fdx = float(dx);\n                float fdy = float(dy);\n                float dd = length(vec2(fdx, fdy));\n                float d = t.y + dd;\n                if (d <= t.w) {\n                    v.x = t.x;\n                    v.y = float(d) + (1.0 * (rand(fragCoord + v.x) - 0.0));\n                    v.z = t.z + 0.5 * (rand(fragCoord + v.y) - 0.5);\n                    v.z = clamp(v.z, -5.0, 5.0);\n                    //v.w = t.w + 1.0;\n                    v.w = t.w;\n                }\n            }\n        }\n        v.w = v.w * 0.99 + float(dim);\n        fragColor = v;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}