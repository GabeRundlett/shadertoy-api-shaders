{
    "Shader": {
        "info": {
            "date": "1569344735",
            "description": "Winning shader made at EVOKE 2019 Shader Showdown. First round against Alkama / Calodox ^ The Planet of Leather Moomins\nLive coded on stage in 25 minutes.",
            "flags": 0,
            "hasliked": 0,
            "id": "wtSXDw",
            "likes": 22,
            "name": "Shader Showdown EVOKE-19 Round 1",
            "published": 3,
            "tags": [
                "time",
                "clouds",
                "demoscene",
                "volumetric",
                "abstract",
                "specular",
                "laser",
                "limit",
                "live",
                "battle",
                "shadershowdown",
                "turbine",
                "gloss",
                "industrial"
            ],
            "usePreview": 0,
            "username": "evvvvil",
            "viewed": 1304
        },
        "renderpass": [
            {
                "code": "// Winning shader made at EVOKE 2019 Shader Showdown,\n// First round against Alkama / Calodox ^ The Planet of Leather Moomins\n\n// The \"Shader Showdown\" is a demoscene live-coding shader battle competition.\n// 2 coders battle for 25 minutes making a shader on stage. No google, no cheat sheets.\n// The audience votes for the winner by making noise or by voting on their phone.\n\n// \"I'd halve the price of cigarettes, double the tax on health food, then I'd declare war on France.\" Mark E. Smith on what he would do if he was prime minister.\n\nvec2 s,v,e=vec2(.00035,-.00035);float t,tt,g,de,cr,f,ff;vec3 np,cp,pp,po,no,ld,al;vec4 su=vec4(0);\nfloat bo(vec3 p,vec3 r){vec3 q=abs(p)-r;return max(max(q.x,q.y),q.z);}\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));} \nvec2 fb(vec3 p)\t\n{\n  p.xy*=r2(tt);cp=p;\n  pp=abs(p)-vec3(0,0,3);\n  vec2 h,t=vec2(bo(p,vec3(.6,.6,4.3)),3);\n  t.x=min(bo(pp,vec3(.2,3.9,.2)),t.x);\n  t.x=min(bo(pp,vec3(3.9,.2,.2)),t.x);\n  h=vec2(length(cp.xy)-4.,5);\n  h.x=max(h.x,-(length(cp.xy)-3.8));\n  h.x=max(h.x,bo(pp,vec3(4,4,1)));\n  h.x=min(h.x,bo(pp,vec3(1)));\n  t=t.x<h.x?t:h;\n  h=vec2(bo(pp,vec3(.8,1.2,.8)),6);\n  h.x=min(h.x,bo(pp,vec3(1.2,.8,.8)));\n  h.x=min(h.x,bo(abs(abs(p)-vec3(0,0,1))-vec3(0,0,.5),vec3(.4,.8,.4)));\n  h.x=min(h.x,length(p)-.1);\n  t=t.x<h.x?t:h;\n  h=vec2(bo(p,vec3(-.05,25,-.05)),6);\n  t=t.x<h.x?t:h;\n  g+=0.1/(0.1+h.x*h.x*20.);\n  t.x*=0.7;\n  return t;\n}\nvec2 mp( vec3 p )\n{ \n  p.xy*=r2(sin(p.z*0.2)*0.2);\n  np=p;\n  np.z=mod(p.z+tt*10.,60.)-30.;\n  for(int i=0;i<5;i++){\n    np=abs(np)-vec3(2,2,3.8);\n    np.xy*=r2(1.);\n    np.xz*=r2(.5);    \n    np.xz-=2.;\n  }\n  vec2 h,t=fb(np);\n  h=vec2(1.2*bo(abs(np*.5)-vec3(4,0,0),vec3(.5,.5,10)),6);    \n  h.x=min(.8*length(abs(p.xy)-vec2(20,0.5))-(.6+sin(np.z*.2)*.5),h.x);\n  t=t.x<h.x?t:h;\n  return t;\n}\nvec2 tr( vec3 ro, vec3 rd )\n{\n  vec2 h,t=vec2(.1);\n  for(int i=0;i<128;i++){\n    h=mp(ro+rd*t.x);\n    if(h.x<.0001||t.x>70.) break;\n    t.x+=h.x;t.y=h.y;    \n  }\n  if(t.x>70.) t.y=0.;  \n  return t;\n}\nfloat noi(vec3 p){\n  vec3 f=floor(p),s=vec3(7,157,113);\n  p-=f;vec4 h=vec4(0,s.yz,s.y+s.z)+dot(f,s);\n  p=p*p*(3.-2.*p);\n  h=mix(fract(sin(h)*43758.5),fract(sin(h+s.x)*43758.5),p.x);\n  h.xy=mix(h.xz,h.yw,p.y);\n  return mix(h.x,h.y,p.z);\n}\nfloat cno(vec3 p,float k){\n  float f=0.; p.z+=tt*k;\n  f+=0.5*noi(p);p=2.1*p;\n  f+=0.25*noi(p+1.);p=2.2*p;\n  f+=0.125*noi(p+2.);p=2.3*p;\n  return f;\n}\nfloat cmp( vec3 p)\n{\n  float t=.8*bo(p-vec3(0,-68,0),vec3(50,50.+sin(p.z*.2)*3.-sin(p.x*.2)*3.,250));\n  p.xy*=r2(sin(p.z*0.2)*0.2);\n  p.z=mod(p.z+tt*10.+30.,60.)-30.;\n  t=min(t,.8*length(abs(p)-vec3(8.,4.+sin(tt)*6.,2.))-(sin(tt)*7.));\n  return t;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=(fragCoord.xy/iResolution.xy-0.5)/vec2(iResolution.y/iResolution.x,1);\n    tt=mod(iTime,62.83);\n    vec3 ro=vec3(35.-cos(tt*1.05)*10.,sin(tt*1.05)*10.,-5),\n    cw=normalize(vec3(0)-ro),\n    cu=normalize(cross(cw,vec3(cos(tt*0.2-0.5),1,0))),\n    cv=normalize(cross(cu,cw)),\n    rd=mat3(cu,cv,cw)*normalize(vec3(uv,0.5)),co,fo,\n    ld=normalize(vec3(.2,.5,.1));\n    co=fo=vec3(.2,.6,.5)+((length(uv)-.5));\n    s=tr(ro,rd);t=s.x;    \n    if(s.y>0.){\n        vec3 po=ro+rd*t,no=normalize(e.xyy*mp(po+e.xyy).x+e.yyx*mp(po+e.yyx).x+e.yxy*mp(po+e.yxy).x+e.xxx*mp(po+e.xxx).x);\n        co=mix(mix(pow(max(dot(reflect(-ld,no),-rd),0.),exp2(11.*cno(np*.5,0.)))+(s.y==5.?vec3(.1,.2,.6):vec3(s.y<5.?0.:0.5))*(clamp(mp(po+no*.2).x/.2,0.,1.)*clamp(mp(po+no*.4).x/.4,0.,1.)+.1)*(max(0.,dot(no,ld))+smoothstep(0.,1.,mp(po+ld*.4).x/.4)+smoothstep(0.,1.,mp(po+ld*2.).x/2.)),fo,min(pow(1.+dot(no,rd),4.),.5)),fo,1.-exp(-.000005*t*t*t));\n    }\n    cr=cmp(ro-1.)+fract(dot(sin(uv*476.567+uv.yx*785.951),vec2(984.156)));\n    for(int i=0;i<120;i++){\n        cp=ro+rd*(cr+=1./3.);\n        if(su.a>.99||cr>t) break;\n        de=clamp(-cmp(cp)+2.*cno(cp,10.),0.,1.);\n        su+=vec4(vec3(mix(1.,0.,de)*de),de)*(1.-su.a);\n    }\n    fragColor = vec4(pow(mix(co,mix(su.xyz,fo,1.-exp(-.000005*cr*cr*cr)),su.a*.9)+g*0.3,vec3(0.45)),1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}