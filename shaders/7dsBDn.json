{
    "Shader": {
        "info": {
            "date": "1644741908",
            "description": "based on:\nhttps://neort.io/product/bvcrf5s3p9f7gigeevf0",
            "flags": 0,
            "hasliked": 0,
            "id": "7dsBDn",
            "likes": 3,
            "name": "hexagon test 2022 2 13",
            "published": 3,
            "tags": [
                "primitive"
            ],
            "usePreview": 0,
            "username": "takahiroando",
            "viewed": 266
        },
        "renderpass": [
            {
                "code": "#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nfloat sdHexagon( in vec2 p, in float r )\n{\n    const vec3 k = vec3(-0.866025404,0.5,0.577350269);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p)*sign(p.y);\n}\n\nfloat map(vec3 p){\n    p.xy*=rot(iTime*.5);\n    p.xz*=rot(iTime*.3);\n    float sdf2d=sdHexagon(p.xy,.8);\n    return sdHexagon(vec2(sdf2d,p.z),.3);\n    // return length(vec2(sdf2d,p.z)) - .3;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=(gl_FragCoord.xy-.5*iResolution.xy)/iResolution.y;\n    vec3 rd=normalize(vec3(uv,1));\n    vec3 p=vec3(0.0,0,-3);\n    float d=1.,i;\n    for(;++i<99.&&d>.001;)p+=rd*(d=map(p));\n    if(d<.001)fragColor+=3./i;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}