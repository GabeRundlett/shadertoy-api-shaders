{
    "Shader": {
        "info": {
            "date": "1626302447",
            "description": "Game of life in Shader form.",
            "flags": 32,
            "hasliked": 0,
            "id": "slXXzl",
            "likes": 0,
            "name": "My Game Of Life Shader Attempt",
            "published": 3,
            "tags": [
                "gameoflife"
            ],
            "usePreview": 0,
            "username": "CharmingSalmon",
            "viewed": 245
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Output to screen\n    fragColor = texelFetch(iChannel1, ivec2(fragCoord.xy),0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n //Pause if mouse is down\n  if(iMouse.z > 0.) {\n  fragColor = texelFetch(iChannel0,ivec2(fragCoord),0);\n  return;}\n  \n  //Count neighbors\n  int neighborCount = 0;\n  for(int adj_col = -1; adj_col <= 1; adj_col++){\n    for(int adj_row = -1; adj_row <= 1; adj_row++){\n    if(adj_col == 0 && adj_row==0) continue;\n     if(texelFetch(iChannel0, ivec2(fragCoord.xy - vec2(adj_col,adj_row)),0) == vec4(1)){\n     neighborCount++;\n     }\n    }\n  }\n\n  //Adjust state as appropriate\n  switch(neighborCount){\n  case 8:\n  fragColor = vec4(1);\n  break;\n  case 3:\n  fragColor = vec4(1);\n  break;\n  case 2:\n  if(texelFetch(iChannel0,ivec2(fragCoord.xy),0) == vec4(1)){\n      fragColor = vec4(1);\n  } else {fragColor = vec4(0);}\n  break;\n  default:\n  fragColor = vec4(0);\n  }\n  \n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "float rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  if (iFrame == 0 && fragCoord == vec2(0)) {\n      fragColor = vec4(iTime);\n      return;\n  }\n  if(iTime - texelFetch(iChannel0, ivec2(0),0).r < 1.5) {\n  vec2 size = vec2(textureSize(iChannel1,0));\n  if(rand(fragCoord + iMouse.xy) > 0.5) {\n  fragColor = vec4(1);\n  }\n  //fragColor = vec4(texelFetch(iChannel1, ivec2(mod(fragCoord.xy/2.,size.xy)), 0).r);\n  return;\n  }\n  \n \n  \n  ivec2 dist = ivec2(abs(fragCoord.xy - iMouse.xy));\n  if(dist.x <= 1 && dist.y <= 1){\n      fragColor = vec4(1);\n  } else {\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord.xy),0);\n    }\n}\n\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    //Gravity warp\n       vec2 gravity = vec2(0.,0.);\n  //Gravity Calculation\n for(int adj_col = -3; adj_col <= 3; adj_col++){\n    for(int adj_row = -3; adj_row <= 3; adj_row++){\n    if(adj_col == 0 && adj_row==0) continue;\n    if(texelFetch(iChannel0,ivec2(fragCoord+vec2(adj_col,adj_row)),0) == vec4(1.))\n       gravity += vec2(adj_col,adj_row) * 1e5;\n    }\n  }\n  if(1./gravity.x < 1e-6 || 1./gravity.y < 1e-6) {\n  fragColor = texelFetch(iChannel0,ivec2(fragCoord),0); return;\n  }\n  //fragColor = vec4(ceil(1./gravity.x),ceil(1./gravity.y),1,1) * texelFetch(iChannel0,ivec2(fragCoord),0);\n  fragColor = texelFetch(iChannel0,ivec2(fragCoord-ceil(1./gravity)),0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}