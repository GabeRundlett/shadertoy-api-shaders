{
    "Shader": {
        "info": {
            "date": "1479934744",
            "description": "After Sol Lewitt's Complex Form with Black and White Bands.\n\nfor Codevember 2016, day 22.",
            "flags": 0,
            "hasliked": 0,
            "id": "MtcXD7",
            "likes": 27,
            "name": "Complex Form with Spirals",
            "published": 3,
            "tags": [
                "voronoi",
                "spiral",
                "codevember"
            ],
            "usePreview": 0,
            "username": "xorxor",
            "viewed": 1293
        },
        "renderpass": [
            {
                "code": "// Complex Form with Black and White Spirals\n// Created by XORXOR, 2016\n// Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)\n//\n// Thanks to iq for voronoi\n// https://www.shadertoy.com/view/ldl3W8\n\n#define ANIMATE\n\nvec2 hash( vec2 p )\n{\n    return fract( sin( vec2( p.x * p.y, p.x + p.y ) ) * vec2( 234342.1459123, 373445.3490423 ) );\n}\n\n// iq's voronoi\n// https://www.shadertoy.com/view/ldl3W8\nvec4 voronoi( in vec2 x )\n{\n    vec2 n = floor( x );\n    vec2 f = fract( x );\n\n    //----------------------------------\n    // first pass: regular voronoi\n    //----------------------------------\n    vec2 mg, mr, mo;\n\n    float md = 8.0;\n    for( int j=-1; j<=1; j++ )\n    for( int i=-1; i<=1; i++ )\n    {\n        vec2 g = vec2(float(i),float(j));\n        vec2 o = hash( n + g );\n        #ifdef ANIMATE\n        o = 0.5 + 0.3*sin( iTime + 6.2831*o );\n        #endif\n        vec2 r = g + o - f;\n        float d = dot(r,r);\n\n        if( d<md )\n        {\n            md = d;\n            mr = r;\n            mg = g;\n            mo = o;\n        }\n    }\n\n    //----------------------------------\n    // second pass: distance to borders\n    //----------------------------------\n    md = 8.0;\n    for( int j=-2; j<=2; j++ )\n    for( int i=-2; i<=2; i++ )\n    {\n        vec2 g = mg + vec2(float(i),float(j));\n        vec2 o = hash( n + g );\n        #ifdef ANIMATE\n        o = 0.5 + 0.3*sin( iTime + 6.2831*o );\n        #endif\n        vec2 r = g + o - f;\n\n        if( dot(mr-r,mr-r)>0.00001 )\n        md = min( md, dot( 0.5*(mr+r), normalize(r-mr) ) );\n    }\n\n    return vec4( md, mr, mo.x + mo.y );\n}\n\nvoid mainImage( out vec4 O, vec2 p )\n{\n    vec2 b = 6.0 * p / iResolution.x;\n    vec4 v = voronoi( b );\n    vec2 q = v.yz;\n\n    float a = iTime + atan( sign( v.w - 1.0 ) * q.y, q.x );\n    float l = length( q * 5.0 / ( sqrt( v.x ) ) ) + 0.319 * a;\n    float m = mod( l, 2.0 );\n#if 1 // sharpening by s23b\n    float w = min( fwidth( mod( l + 1.5, 2.0 ) ), fwidth( mod( l + 0.5, 2.0 ) ) ) / 2.0;\n\tfloat o = ( 1.0 - smoothstep( 1.85 - w, 1.85 + w, m ) ) * smoothstep( 1.15 - w, 1.15 + w, m );\n#else\n    float o = ( 1.0 - smoothstep( 1.7, 2.0, m ) ) * smoothstep( 1.0, 1.3, m );\n#endif\n    o = mix( 0.0, o, smoothstep( 0.04, 0.07, v.x ) );\n\n    O = vec4( vec3( o ), 1.0 );\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}