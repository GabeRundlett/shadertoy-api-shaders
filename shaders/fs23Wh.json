{
    "Shader": {
        "info": {
            "date": "1617341045",
            "description": "code is a bit of a mess but I really wanted to try this trick. Maybe I'll make a better thing with it later. ",
            "flags": 0,
            "hasliked": 0,
            "id": "fs23Wh",
            "likes": 9,
            "name": "Square Cycler",
            "published": 3,
            "tags": [
                "2d",
                "squares",
                "overlapping"
            ],
            "usePreview": 0,
            "username": "Tater",
            "viewed": 381
        },
        "renderpass": [
            {
                "code": "#define rot(a) mat2( cos(a),-sin(a),sin(a),cos(a) )\n#define pi 3.141592653\nfloat smoothtrig(float b, float wv){\nreturn sqrt((1.0+b*b)/(1.0+b*b*wv*wv))*wv;\n}\n\nfloat squares(vec2 uv, float t)\n{  \n    float wdth = .5*iResolution.x/iResolution.y-0.1;\n    \n    vec2 cent = vec2(wdth,0.38)\n                *clamp(vec2(smoothtrig(4.0,sin(t*2.0)),smoothtrig(4.0,cos(t*2.0))),-.95,.95);\n    vec2 d = abs(uv+cent);\n    \n    float o = step(max(d.x,d.y),0.15);\nreturn o;\n}\nfloat rects(vec2 uv, float t)\n{\n    uv*=rot(t);\n    vec2 cent = vec2(sin(t*3.5)+1.5,cos(t*3.5)+1.5);\n    vec2 d = abs(uv*cent);\n    \n    float o = step(max(d.x,d.y),0.3);\n          o -= step(max(d.x,d.y),0.15);        \nreturn o;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n    vec2 R = iResolution.xy;\n    vec2 uv = (fragCoord-.5*R.xy)/R.y;\n    vec2 uv2 = uv;\n    //uv = abs(uv);\n    //uv*=length(uv)*3.0;\n    float c = 10.0;\n    vec3 col= 0.5*vec3(30.,14.,256.)/256.*length(uv*0.6);\n    \n    for(float i = 0.; i<c; i++){\n        uv2*=rot(-i*-0.03);\n        uv*=1.0+(i/c)*0.1;\n        col.r += (1.3/c)*rects(uv2,t+i*0.1)*2.0;\n        col.g += (1.3/c)*rects(uv2,t+i*0.1);\n        \n        col.r += (1.2/c)*squares(uv,t+i*0.01)+(1.2/c)\n                        *squares(uv,t+i*0.01+pi/2.0); \n        col   +=((1.2/c)*squares(uv,t+i*0.01+pi/4.0)+(1.2/c)\n                        *squares(uv,t+i*0.01+pi*0.75))\n                        *vec3(31.,255.,255.)/256.; \n    }\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}