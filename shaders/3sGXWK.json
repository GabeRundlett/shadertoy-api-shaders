{
    "Shader": {
        "info": {
            "date": "1574965525",
            "description": "golfing of my previous [url]https://shadertoy.com/view/lllyzr[/url]  ( 526 chars )\n\n( hard work for just 22% compression... )",
            "flags": 0,
            "hasliked": 0,
            "id": "3sGXWK",
            "likes": 6,
            "name": "Celtic knot 3 - ( 399 chars )",
            "published": 3,
            "tags": [
                "2d",
                "pattern",
                "knot",
                "canvas",
                "short",
                "weaving",
                "golf",
                "celtic",
                "3tweets"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 508
        },
        "renderpass": [
            {
                "code": "// golfing of https://shadertoy.com/view/lllyzr  ( 526 chars )\n\n// -13 chars by Coyote -> 399 chars\n\n#define D(l)   W = abs(l)-.3,                       \\\n               W.y = abs( W - 4.*p ).x,             \\\n               S = smoothstep( 8.*p, Z, W),         \\\n               R -= R.y * S.x * vec2( S.y, 1 )                   //\n#define L(a) U.a += S.a*1.57,  D( Z + 1.41* (length(U) - 1.11) ) //\nvoid mainImage(out vec4 O, vec2 u) {\n\tvec2  R = .5*iResolution.xy,\n          Z = R-R,\n          p = 5. / R.yy,\n          W = ceil( 4.5 * R/R.y ),\n          U = p * ( u - R ) -.5,\n          S =   sign(U),\n          I = S*ceil(U);\n    U = fract(U)*2.-1.;  R/=R;\n    mod(I.x+I.y,2.) > 0.\n        ? U = R - abs(U), D( U + U.y )\n        : I.x >  W.x ? R\n        : I.x == W.x ? L(x)\n        : I.y >  4.5 ? L(y)\n        : ( I = ( 2.*mod( I,2.) -1. ) * U.y,\n            D( U - I ),\n            D( U + I ) );\n    O += R.x;\n}/*\n\n\n\n\n\n\n// --- 412 chars \n\n#define D(l)   S = smoothstep( 8.*p, 0., vec2( W = abs(l)-.3, abs(W-4.*p) ) ),\\\n               R -= R.y * S.x * vec2( S.y, 1)                          //\n#define L(a) ( U.a += S.a*1.57,  D ( ( length(U) - 1.11 ) *1.41 )  )   //\n#define mainImage(O,u)                              \\\n\tvec2  R = iResolution.xy;                       \\\n    float N = 4.5,                                  \\\n          p = 10. / R.y,   /* (N+N+1.) * /           \\\n          W = ceil(N*R.x/R.y);                      \\\n\tvec2  U = p * ( u - .5*R ) -.5,                 \\\n          S =   sign(U),                            \\\n          I = S*ceil(U);                            \\\n    U = fract(U)*2.-1.;  R/=R;                      \\\n    mod(I.x+I.y,2.) > 0.                            \\\n        ? U = 1.-abs(U), D( U.x + U.y )             \\\n        : I.x >  W ? R                              \\\n        : I.x == W ? L(x)                           \\\n        : I.y >  N ? L(y)                           \\\n        : ( N = ( 2.*mod( I.x,2.) -1. ) * U.y,      \\\n            D( U.x - N ),                           \\\n            D( U.x + N ) );                         \\\n    O += R.x                                       /*\n\n\n\n\n\n\n// --- 424 chars\n\n#define S(v)  smoothstep( p+p, 0., v)                                //\n#define D(l)  F -= F.y * S( W = abs(l)-.3 ) * vec2( S(abs(W-p)), 1)  //\np = 4.*\nO += F.xxxy\n\n\n\n// --- 436 chars\n\n#define S(v)  smoothstep( p+p, 0., v)                                   //\n#define D(l)  O -= O.a * S( W = abs(l)-.3 ) * vec2( S(abs(W-p)), 1).xxxy//\n#define L(a)  ( U.a += S.a*1.57,  D ( abs( length(U) - 1.11 ) *1.41 )  )//\nvoid mainImage( out vec4 O, vec2 u )\n{\n\tvec2  R = iResolution.xy;\n    float N = 4.5, \n          W = ceil(N*R.x/R.y),\n          p = 4. * (N+N+1.) / R.y; \n\tvec2  U = p/8. * ( u+u - R ) -.5, \n          S =   sign(U),\n          I = S*ceil(U);     \n    U = fract(U)*2.-1.;\n    O++;  \n    mod(I.x+I.y,2.) > 0. \n        ? U = 1.-abs(U), D( U.x + U.y )\n        : I.x >  W ? O              \n        : I.x == W ? L(x) \n        : I.y >  N ? L(y)\n        : ( N = ( 2.*mod( I.x,2.) -1. ) * U.y,\n            D( U.x - N ),\n            D( U.x + N ) ) ; \n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}