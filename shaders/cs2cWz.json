{
    "Shader": {
        "info": {
            "date": "1687681469",
            "description": "mouse controls camera\ninspiration:\nhttps://twitter.com/mariuswatz/status/1670382116310319104/photo/1\nhttps://www.deutsches-museum.de/assets/_processed_/d/6/csm_LRD_Zeppelin_Hindenburg_Archiv_BN_43561_72ceb33fc4.jpg",
            "flags": 0,
            "hasliked": 0,
            "id": "cs2cWz",
            "likes": 42,
            "name": "truss structures: Zeppelin",
            "published": 3,
            "tags": [
                "short",
                "reproduction",
                "truss"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 506
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/cs2yWz\n//        and https://shadertoy.com/view/dssyDs\n\n#define rot(a)    mat2(cos(a+vec4(0,11,33,0)))                      // rotation\n#define ring(P,l) 4.* vec3( length(P.xz)-l, P.y, l*atan(P.x,P.z) )  // ring coordinates\n\n#define T(q) (                                       /* truss structure   */ \\\n        q.xy = length(q.xy) * cos( mod(atan(q.y,q.x)+1.05,2.1)-1.05 + vec2(0,11) ), \\\n        q.z = mod(q.z,2.) - 1.,                      /* z-repeat          */ \\\n        q.x -= .5,                                   /* faces = 0yz plane */ \\\n        min( length(vec2(q.x,abs(q.y)-.87)) -.1,                             \\\n             max(length(vec2(q.x,.87*abs(q.z)+.5*q.y-.5))-.1, abs(q.y)-.9) ) \\\n     )\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t=9.,l;\n    vec3  R = iResolution,\n          D = normalize(vec3(U+U, -2.*R.y) - R),                    // ray direction\n          p = vec3(0,0,15), P,q,                                    // marching point along ray \n          C = iMouse.z > 0. ? 6.*iMouse.xyz/R -3.                   // camera control\n                            : 3.* cos(.3*iTime + vec3(0,11,0));     // demo mode\n\n    for ( O=vec4(1); O.x > 0. && t > .01; O-=.01 )                  // march scene\n        q = p, \n        q.yz *= rot(-C.y),                                          // rotations\n        q.xz *= rot(-C.x),\n        P = q,                                                      // --- longitudal beams\n        P.xy = length(P.xy) * cos( mod(atan(P.y,P.x)+.314,.628)-.314 + vec2(0,11) ), // 10-folds rot symmetry\n        P.x += 5.,\n        P = ring(P,10.),                                            // ring coordinates\n        t = T(P),                                                   // large structure\n        P = q,                                                      // --- latitudal beams\n        l = sqrt( 1e2 - P.z*P.z ) - 5.,                             // ring radius\n        P.z = mod(P.z,3.) - 1.5,                                    // z-repeat\n        P = ring(P.xzy, l ),                                        // ring coordinates\n        t = min(t, T(P)),\n        p += .1*t*D;                                                // step forward = dist to obj  \n    \n   O *= O*O*O*2.;                                                   // color scheme \n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}