{
    "Shader": {
        "info": {
            "date": "1699614699",
            "description": "Spiral",
            "flags": 0,
            "hasliked": 0,
            "id": "cltyzs",
            "likes": 11,
            "name": "Spiral shader",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "bigmazi",
            "viewed": 228
        },
        "renderpass": [
            {
                "code": "#define pi 3.14159265359\n#define tau 6.28318530718\n\nfloat lerp(float a, float b, float cf)\n{\n    return a + (b - a) * cf;\n}\n\nfloat remap(float x, float a, float b, float A, float B)\n{\n    float cf = (x - a) / (b - a);\n    return lerp(A, B, cf);\n}\n\nfloat circle(float x, float y, float r)\n{\n    return length(vec2(x, y)) - r;\n}\n\nfloat ring(float c, float thickness)\n{\n    float res = 1.0 - abs(c) / thickness;\n    return clamp(res, 0.0, 1.0);\n}\n\nvec2 rotate(vec2 v, float a)\n{\n    float x = v.x;\n    float y = v.y;\n    \n    float sina = sin(a);\n    float cosa = cos(a);\n    \n    float xx = x * cosa - y * sina;\n    float yy = y * cosa + x * sina;\n    \n    return vec2(xx, yy);\n}\n\nfloat spiral(float r0, float dr, float thickness, vec2 uv)\n{    \n    float k = 0.0;\n    \n    for (float r = r0; r >= 0.0; r -= dr)\n    {\n        float ang = atan(uv.y, uv.x);\n        \n        float factor = (r - dr) / r;\n        float rk = remap(ang, -pi, pi, factor, 1.0);\n\n        float c = circle(uv.x, uv.y, r * rk);\n        c = ring(c, thickness);\n        \n        k = max(k, c);\n    }\n    \n    return k;\n}\n\nvec2 disturb(vec2 uv, float periods, float ampl)\n{\n    float a = atan(uv.y, uv.x);\n    a *= periods;\n    \n    return vec2(\n        remap(sin(a), -1.0, 1.0, -ampl, ampl),        \n        remap(cos(a), -1.0, 1.0, -ampl, ampl)\n    );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= 2.0; uv -= 1.0; uv.x *= iResolution.x / iResolution.y;\n    \n    //uv += disturb(uv, 25.0, 0.025);\n    \n    float bias = mod(iTime * 2.0, tau) - pi;\n    uv = rotate(uv, bias);\n    \n    float dr = 0.15;\n    float thickness = 0.01;\n    float r = 0.8;\n    \n    float k = 0.0;\n    \n    for (float i = 0.0; i < 5.0; ++i)\n    {        \n        float offset = i * -0.02;\n        k = max(k, spiral(r + offset, dr, thickness, uv));\n    }\n        \n    k = smoothstep(0.05, 0.9, k);\n    \n    vec3 clr = vec3(0.7, 0.7, 0.7) * k;\n    fragColor = vec4(clr, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}