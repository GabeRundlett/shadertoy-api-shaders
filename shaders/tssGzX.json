{
    "Shader": {
        "info": {
            "date": "1547100344",
            "description": "Fractal Flower",
            "flags": 0,
            "hasliked": 0,
            "id": "tssGzX",
            "likes": 9,
            "name": "Fractal Flower",
            "published": 3,
            "tags": [
                "fractal",
                "flower"
            ],
            "usePreview": 0,
            "username": "Jamesika",
            "viewed": 576
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592654\n\nvec2 ToPolar(vec2 pos)\n{\n   \tfloat r = length(pos);\n    // a (0, 2*PI)\n    float a = atan(-pos.y,-pos.x)+PI;\n    return vec2(r,a);\n}\n\nvec2 Rotate(vec2 pos, float angle)\n{\n\treturn mat2(cos(angle), -sin(angle), sin(angle), cos(angle))*pos;\n}\n\nfloat Shake(float from,float to,float rate)\n{\n    return from + (to-from)*(sin(iTime*rate)*0.5+0.5);\n}\n\nvec3 Rgb2hsb(in vec3 c )\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz),\n                 vec4(c.gb, K.xy),\n                 step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r),\n                 vec4(c.r, p.yzx),\n                 step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)),\n                d / (q.x + e),\n                q.x);\n}\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 Hsb2rgb(in vec3 c )\n{\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\n// Draw a piece of leaf points to RIGHT ((0,0)->(1,0))\n// width (0.,1.)\nfloat DrawLeaf(vec2 pos, float radius, float width)\n{\n    // width = 1 -> angle = 2*PI\n\n    vec2 polar = ToPolar(pos);\n\t// limit distance\n    width *= smoothstep(radius,0.0,polar.x);\n    // limit angle\n    float w = abs(polar.y-PI)/PI;// 0 ~ 1 ~ 0\n    float c = step(1.0-width,w)*0.2 +  smoothstep(1.0-width,1.0,w);\n\n    return c*step(polar.x,radius);\n}\n\n// draw several patterns\nfloat DrawComponents(vec2 pos, float radius)\n{\n    radius *= Shake(1.,1.5,1.);\n    float width = Shake(0.15,0.85,1.5);\n\treturn \n        DrawLeaf(pos, radius, width) + // Basic leaf\n        0.3*DrawLeaf(pos, radius*1.5, pow(width*0.3,1.5)); \t// Thin Leaf\n}\n\nfloat Fbm(vec2 pos, float radius)\n{\n    const int n = 6;\n    \n    vec2 center = vec2(0.0);\n    float angle = PI/4.*Shake(1.0,1.8,1.0);\n    \n    pos.y = abs(pos.y);\n    float c = DrawComponents(pos,radius);\n\tfor(int i = 0;i<n;i++)\n    {\n        // move to next position\n        pos -= vec2(0.8,0.6)*Shake(0.0,0.6,0.5)*radius;\n        pos = Rotate(pos,angle);\n        pos.y = abs(pos.y);\n\n        radius /= 2.*Shake(0.65,1.,1.2);\n       \tc += DrawComponents(pos,radius)*pow(0.5,float(i));\n    }\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 pos = 500.0*(2.0*fragCoord - iResolution.xy)/iResolution.y;\n\t\n    pos = Rotate(pos, iTime*0.5+Shake(1.,3.5,1.));\n    \n    const int n = 6;\n    float c = 0.0;\n    for(int i = 0;i<n;i++)\n    {\n    \tpos = Rotate(pos,2.0*PI/(float(n)));\n        c += Fbm(pos, 250.);\n    }\n   \t\n    c = smoothstep(0.0,5.0,c)*2.0;\n    \n    vec2 polar = ToPolar(pos);\n    \n    vec3 backColor = Rgb2hsb(vec3(0.1,0.15,0.2)*0.3);\n    backColor.x = fract(iTime*0.1)+smoothstep(0.0,1000.0,polar.x)*0.1;\n    backColor = Hsb2rgb(backColor);\n    \n    // color it\n    vec3 col = \n        backColor*pow(1.5-length(uv-vec2(0.5)),2.0) + \n        vec3(0.4,0.8,0.88)*pow(c,0.8);\n    \n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}