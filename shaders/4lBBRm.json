{
    "Shader": {
        "info": {
            "date": "1514981752",
            "description": "This is a work in progress to simulate water",
            "flags": 0,
            "hasliked": 0,
            "id": "4lBBRm",
            "likes": 28,
            "name": "Test water ripple",
            "published": 3,
            "tags": [
                "2d",
                "water",
                "filter",
                "ripple"
            ],
            "usePreview": 1,
            "username": "luluco250",
            "viewed": 2039
        },
        "renderpass": [
            {
                "code": "#define CORRECT_TEXTURE_SIZE 0\n#define TEXTURE_DOWNSCALE 2.0\n\n#define VIEW_HEIGHT 0\n#define VIEW_NORMALS 0\n#define CHEAP_NORMALS 0\n\n#define nsin(x) (sin(x) * 0.5 + 0.5)\n\nfloat rand(vec2 uv, float t) {\n    float seed = dot(uv, vec2(12.3435, 25.3746));\n    return fract(sin(seed) * 234536.3254 + t);\n}\n\nvec2 scale_uv(vec2 uv, vec2 scale, vec2 center) {\n\treturn (uv - center) * scale + center;\n}\n\nvec2 scale_uv(vec2 uv, vec2 scale) {\n    return scale_uv(uv, scale, vec2(0.5));\n}\n\nfloat create_ripple(vec2 coord, vec2 ripple_coord, float scale, float radius, float range, float height) {\n\tfloat dist = distance(coord, ripple_coord);\n    return sin(dist / scale) * height * smoothstep(dist - range, dist + range, radius);\n}\n\nvec2 get_normals(vec2 coord, vec2 ripple_coord, float scale, float radius, float range, float height) {\n    return vec2(\n        create_ripple(coord + vec2(1.0, 0.0), ripple_coord, scale, radius, range, height) -\n        create_ripple(coord - vec2(1.0, 0.0), ripple_coord, scale, radius, range, height),\n        create_ripple(coord + vec2(0.0, 1.0), ripple_coord, scale, radius, range, height) -\n        create_ripple(coord - vec2(0.0, 1.0), ripple_coord, scale, radius, range, height)\n    ) * 0.5;\n}\n\nvec2 get_center(vec2 coord, float t) {\n    t = round(t + 0.5);\n    return vec2(\n        nsin(t - cos(t + 2354.2345) + 2345.3),\n        nsin(t + cos(t - 2452.2356) + 1234.0)\n    ) * iResolution.xy;\n}\n\nvoid mainImage(out vec4 color, vec2 coord) {\n    vec2 ps = vec2(1.0) / iResolution.xy;\n    vec2 uv = coord * ps;\n    \n    #if CORRECT_TEXTURE_SIZE\n    vec2 tex_size = vec2(textureSize(iChannel0, 0));\n    uv = scale_uv(uv, (iResolution.xy / tex_size) * float(TEXTURE_DOWNSCALE));\n    #endif\n    \n    float timescale = 1.0;\n    float t = fract(iTime * timescale);\n    \n    vec2 center = (iMouse.z > 0.0) ? iMouse.xy : get_center(coord, iTime * timescale);\n    \n    #if CHEAP_NORMALS\n    float height = create_ripple(coord, center, t * 100.0 + 1.0, 100.0, 200.0, 1000.0);\n    vec2 normals = vec2(dFdx(height), dFdy(height));\n    #else\n    vec2 normals = get_normals(coord, center, t * 100.0 + 1.0, 100.0, 200.0, 1000.0);\n    #endif\n    \n    #if VIEW_HEIGHT\n    color = vec4(height);\n    #elif VIEW_NORMALS\n    color = vec4(normals, 0.5, 1.0);\n    #else\n    color = texture(iChannel0, uv + normals * ps);\n    #endif\n    \n    //t = round(iTime) * 20.0;\n    \n    //t = iTime;    \n    //color = vec4(rand(uv, t));\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}