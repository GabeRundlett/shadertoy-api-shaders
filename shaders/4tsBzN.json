{
    "Shader": {
        "info": {
            "date": "1511198563",
            "description": "The frame rate doubles if bufA::offset falls in a different warp than (0,0).\napplication: Divergence is a problem only if in the same warp.\n\nAllows to test warp size and placing. nVidia: warp = 4x8, aligned with window.\nAuto adjust to you GPU power",
            "flags": 32,
            "hasliked": 0,
            "id": "4tsBzN",
            "likes": 4,
            "name": "testing warps - fragSniffer",
            "published": 3,
            "tags": [
                "fps",
                "gpu",
                "perfmeter",
                "compilation"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 899
        },
        "renderpass": [
            {
                "code": "// more GPU reverse engineering (aka fragSniffing) here: https://hal.inria.fr/hal-01643579\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n\tO = texelFetch(iChannel0, ivec2(U), 0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Warp tester. Warps are 4x8 pixels (on nvidia), aligned with window coordinates\n\n//#define offset vec2(3,7) // this one falls in same warp than (0,0)\n  #define offset vec2(9,7) // this one falls in another warp than (0,0)\n\n\nvoid mainImage( out vec4 O, vec2 U )\n{                                       // N will adjust depending on your GPU power\n    int N = iFrame==0 ? 300000 : int( texelFetch(iChannel0, ivec2(0),0).a );\n                                 \n    U -= .5;\n    if ( U==vec2(0) ) \n        for(int i = 0; i< N; i++) \n            O.b += sin(iTime);\n        \n    else if ( U==offset && iFrame>30)   // diverging costly branch...\n        for(int i = 0; i< N; i++)       // ...only if offset is in the same warp than (0,0)\n            O.b += cos(iTime);\n    \n    else {                              // draw performance curve\n        O = texelFetch(iChannel0, ivec2(U-vec2(1,0)), 0);\n        O += float(U.x==0. && U.y < iResolution.y/(iTimeDelta*65.) ); // top = 65 fps\n        if (mod(U.y,10.*iResolution.y/65.) < 1.) O = vec4(1,0,0,0);   // red line every 10 fps\n    }\n    \n    O.a = iFrame<30 && U==vec2(0) && iResolution.y>200.  // use 30 frames to adjust to your computer\n        ? float(N) * (.8 + .2*(1./31.)/iTimeDelta ) // relaxation towards 30fps goal.\n        : float(N);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}