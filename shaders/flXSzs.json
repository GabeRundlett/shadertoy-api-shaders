{
    "Shader": {
        "info": {
            "date": "1626280418",
            "description": "Simple SDF antialiasing. You can click to see with aa off.",
            "flags": 0,
            "hasliked": 0,
            "id": "flXSzs",
            "likes": 1,
            "name": "SDF antialiasing",
            "published": 3,
            "tags": [
                "sdf",
                "antialiasing",
                "rectangle"
            ],
            "usePreview": 0,
            "username": "Apos",
            "viewed": 355
        },
        "renderpass": [
            {
                "code": "// https://iquilezles.org/articles/distfunctions2d\n// https://drewcassidy.me/2020/06/26/sdf-antialiasing/\n\nfloat SDFCircle(vec2 p, float r) {\n    return length(p) - r;\n}\nfloat SDFRect(vec2 p, vec2 b) {\n    vec2 d = abs(p) - b;\n    return length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n}\nfloat Antialias(float d, float size) {\n    float texel = 1.0 / iResolution.y;\n    return mix(0.0, 1.0, smoothstep(0.0, texel * size, d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    float d  = 0.0;\n    \n    if (uv.x < 0.5) {\n        d = SDFRect(p + vec2(1., 0.), vec2(0.3, 0.5));\n    } else {\n        d = SDFCircle(p - vec2(1.0, 0.), 0.2);\n    }\n\n    // Output to screen\n    if (iMouse.z > 0.0) {\n        fragColor = mix(vec4(1.0), vec4(0), Antialias(d, 0.0));\n    } else {\n        fragColor = mix(vec4(1.0), vec4(0), Antialias(d, 4.0));\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}