{
    "Shader": {
        "info": {
            "date": "1603908680",
            "description": "mouse control\n[url]https://inktober.com/[/url]\n#inktober2020 themes: [img]https://i.imgur.com/b3gMiu0.png[/img]\n",
            "flags": 0,
            "hasliked": 0,
            "id": "WdKcD3",
            "likes": 8,
            "name": "Fab28 #inktober2020 \"float\"",
            "published": 3,
            "tags": [
                "short",
                "golf",
                "inktober2020"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 321
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/wsGyRm\n\n#define rot(a)    mat2( cos(a+vec4(0,11,33,0)) )           // rotation                  \n#define C(a,l,L)  max(  length((a).xy) -l, abs(a).z -L )   // cylinder\n#define B(a)      max( a.x, max(a.y, a.z) ) -2.            // cube\n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float t=9., a,b,c;\n    vec3  r = iResolution, M = iMouse.xyz/r,\n          D = normalize(vec3( U+U, -3.*r.y ) - r ),      // ray direction\n          p = 50./r, q,q1,q2;                            // marching point along ray \n#define R(t) rot(t*iTime)\n    \n    for ( O-=O ; O.x < 1. && t > .01 ; O+=.02 )\n        q = p, t=9.,\n        q.yz *= rot(.8 + 2. *M.y),                       // rotations\n        q.xz *= rot(   - 6.3*M.x),\n        q = q.xzy,\n        t = max( -C( q, 9.,11.), C( q, 10.,10.)),        // mug\n        t = min(t, a = C( q, 9.,8.)),                    // liquid\n        q1 = q - vec3(2.*cos(.5*iTime+vec2(0,11)),7.5), \n        q2 = q - vec3(6.*sin(.2*iTime+vec2(0,11)),7.5),\n        q1.xy *= R(.1),  q1.yz *= R(.1),\n        q2.xy *= R(-.1), q2.yz *= R(-.1),\n        t = min(t, b = min( B(abs(q1)), B(abs(q2) )) ),  // ice cubes\n        p += t*D;                                        // step forward = dist to obj          \n\n    if(O.x>1.) return;\n    if (a==t) O = vec4(0,.5,.8,0);                       // coloring\n    else if (b==t) O *= vec4(4,4,8,0);\n    else O *= vec4( 0,0,1,0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}