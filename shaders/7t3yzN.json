{
    "Shader": {
        "info": {
            "date": "1659357879",
            "description": "how are your camera colors ?\nPut camera against screen on a white area. E.g. fullscreen +  bottom-left corner.\nFor mine ( Logi 720p / auto-balance / linux ) R,G,B values differs, as their vignetting profile.\nAlso, it changes if I turn my camera by 90Â° !",
            "flags": 18,
            "hasliked": 0,
            "id": "7t3yzN",
            "likes": 4,
            "name": "calibrate your webcam",
            "published": 3,
            "tags": [
                "calibration",
                "webcam",
                "vignetting"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 600
        },
        "renderpass": [
            {
                "code": "#define keyToggle(a)  ( texelFetch(iChannel3,ivec2(a,2),0).x > 0.)\n#define S(v)            smoothstep(1., 0., abs(v)/fwidth(v) )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = u/R;\n\n    O = texture(iChannel0, U);\n    \n        // --- color profile along horizontal axis\n    vec4 V = texture(iChannel0, vec2(U.x,.5) ); V.a = .5; // video central line + ref .5\n\n    float x = abs(2.*U.x-1.);  \n    if keyToggle(32) V *= 1. + vec4(.07,.03,0,0) + vec4(.6,.2,.2,0)*x*x; // correction for my Logi720p\n \n    V = S( U.y - V ); // draw RGB profile for mid-line.\n    O = mix( O, vec4(1,0,0,1), V.r );\n    O = mix( O, vec4(0,1,0,1), V.g );\n    O = mix( O, vec4(0,0,1,1), V.b );\n    O = mix( O, vec4(1), V.a );\n    \n        // --- color profile along vertical axis\n    V = texture(iChannel0, vec2(.5,U.y) ); V.a = .5; // video central column + ref .5\n    float y = abs(2.*U.y-1.);  \n    if keyToggle(32) V *= 1. + vec4(.07,.03,0,0) + vec4(.18,.18,.18,0)*y*y; // correction for my Logi720p\n\n    V = S( U.x - V ); // draw RGB profile for mid-line.\n    O = mix( O, vec4(1,0,0,1), V.r );\n    O = mix( O, vec4(0,1,0,1), V.g );\n    O = mix( O, vec4(0,0,1,1), V.b );\n    O = mix( O, vec4(1), V.a );\n    \n // O *= 1. + vec4(.07,.03,0,0) + vec4(.6,.2,.2,0)*x*x + vec4(.18,.18,.18,0)*y*y;\n    \n        // --- white corner for qualibration.\n    if (max(U.x,U.y)<.15) O = vec4(1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}