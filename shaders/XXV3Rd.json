{
    "Shader": {
        "info": {
            "date": "1718094040",
            "description": "https://www.youtube.com/watch?v=hqSOrmcaQFM\nhttps://www.youtube.com/watch?v=1ryeRUGj_As",
            "flags": 8,
            "hasliked": 0,
            "id": "XXV3Rd",
            "likes": 10,
            "name": "Yurgen's Tune",
            "published": 3,
            "tags": [
                "simple",
                "music",
                "piano",
                "tune",
                "wingfeather"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 187
        },
        "renderpass": [
            {
                "code": "// Modified version of font loader from https://www.shadertoy.com/view/ltcXzs\nvoid drawChar(inout vec3 color, in vec3 charColor, in vec2 uv, in vec2 pos, in vec2 size, in int char) {\n    uv = (uv - pos) / size + 0.5;\n    vec2 charUv = uv / 16.0;\n    vec2 dfdx = dFdx(charUv);\n    vec2 dfdy = dFdy(charUv);\n    if (all(lessThan(abs(uv - 0.5), vec2(0.5)))) {\n        float val = textureGrad(iChannel0, charUv + fract(vec2(char, 15 - char / 16) / 16.0), dfdx, dfdy).r;\n        color = mix(color, charColor, val);\n    }\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Default shader\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 color = 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0.0, 2.0, 4.0));\n    fragColor = vec4(color, 1.0);\n\n    // Correct aspect ratio\n    uv.x *= iResolution.x / iResolution.y;\n\n    // \"Sound In\" notification\n    drawChar(fragColor.rgb, vec3(1.0), uv, vec2(0.3, 0.3), vec2(0.1), 83); // S\n    drawChar(fragColor.rgb, vec3(1.0), uv, vec2(0.4, 0.3), vec2(0.1), 79); // O\n    drawChar(fragColor.rgb, vec3(1.0), uv, vec2(0.5, 0.3), vec2(0.1), 85); // U\n    drawChar(fragColor.rgb, vec3(1.0), uv, vec2(0.6, 0.3), vec2(0.1), 78); // N\n    drawChar(fragColor.rgb, vec3(1.0), uv, vec2(0.7, 0.3), vec2(0.1), 68); // D\n\n    drawChar(fragColor.rgb, vec3(1.0), uv, vec2(0.9, 0.3), vec2(0.1), 73); // I\n    drawChar(fragColor.rgb, vec3(1.0), uv, vec2(1.0, 0.3), vec2(0.1), 78); // N\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define k 50.0\n#define E(a,b)(smoothstep(-1.,1.,k*(t-a)/(b-a))+smoothstep(-1.,1.,k*(b-t)/(b-a))-1.)\n#define P(f,a,b)sound+=sin(6.28318530718*fract(2.0*f*(t-a)))*E(a,b)\nvec2 mainSound(int samp, float t) {\n    float sound = 0.0;\n    P(48.999,14.6,15.3);P(48.999,32.6,33.3);P(48.999,66.333,67.1);P(55.0,13.467,14.333);P(55.0,31.467,32.367);\n    P(55.0,65.233,66.1);P(55.0,73.1,74.967);P(65.406,5.6,6.333);P(65.406,11.233,11.967);P(65.406,23.6,24.333);\n    P(65.406,29.233,29.967);P(65.406,35.967,36.533);P(65.406,40.467,40.9);P(65.406,56.233,56.633);P(65.406,62.967,63.7);\n    P(65.406,71.967,72.733);P(65.406,75.333,75.5);P(65.406,75.733,75.833);P(65.406,76.1,76.233);P(73.416,4.5,5.367);\n    P(73.416,10.1,10.933);P(73.416,14.6,15.333);P(73.416,22.467,23.3);P(73.416,28.1,28.867);P(73.416,32.6,33.3);\n    P(73.416,37.1,37.533);P(73.416,52.833,53.267);P(73.416,57.333,57.767);P(73.416,61.833,62.667);P(73.416,66.333,67.1);\n    P(73.416,70.833,71.667);P(73.416,76.467,76.6);P(73.416,76.833,76.967);P(73.416,77.233,77.333);P(82.407,0.0,0.8);\n    P(82.407,1.1,1.9);P(82.407,2.233,3.0);P(82.407,3.367,4.133);P(82.407,6.733,7.6);P(82.407,7.867,8.6);\n    P(82.407,8.967,9.8);P(82.407,12.333,13.167);P(82.407,13.467,14.3);P(82.407,15.733,16.533);P(82.407,16.833,17.6);\n    P(82.407,17.967,18.7);P(82.407,19.1,19.833);P(82.407,20.233,21.033);P(82.407,21.333,22.067);P(82.407,24.733,25.567);\n    P(82.407,25.833,26.567);P(82.407,26.967,27.767);P(82.407,30.333,31.133);P(82.407,31.467,32.333);P(82.407,33.733,34.467);\n    P(82.407,34.833,35.567);P(82.407,36.333,36.733);P(82.407,38.233,38.633);P(82.407,40.833,41.233);P(82.407,41.6,42.0);\n    P(82.407,44.967,45.733);P(82.407,47.233,48.033);P(82.407,48.333,49.167);P(82.407,49.467,50.233);P(82.407,50.6,51.3);\n    P(82.407,51.733,52.1);P(82.407,53.967,54.4);P(82.407,55.1,55.533);P(82.407,56.6,56.967);P(82.407,58.467,58.9);\n    P(82.407,59.6,60.0);P(82.407,60.733,61.533);P(82.407,64.1,64.933);P(82.407,65.233,66.1);P(82.407,67.467,68.3);\n    P(82.407,68.6,69.4);P(82.407,69.733,70.5);P(82.407,73.1,75.0);P(82.407,77.6,78.0);P(82.407,78.167,78.5);\n    P(82.407,83.233,84.033);P(82.407,84.333,85.1);P(82.407,85.467,87.667);P(87.307,80.967,81.8);P(87.307,82.1,82.9);\n    P(97.999,5.6,6.333);P(97.999,11.233,12.0);P(97.999,23.6,24.333);P(97.999,29.233,29.967);P(97.999,36.733,37.1);\n    P(97.999,38.6,38.967);P(97.999,41.233,41.467);P(97.999,41.967,42.333);P(97.999,46.467,46.8);P(97.999,52.1,52.467);\n    P(97.999,54.333,54.7);P(97.999,55.467,55.833);P(97.999,56.967,57.333);P(97.999,58.833,59.233);P(97.999,59.967,60.367);\n    P(97.999,62.967,63.7);P(97.999,71.967,72.733);P(97.999,75.333,75.5);P(97.999,75.733,75.833);P(97.999,76.1,76.233);\n    P(97.999,78.733,79.467);P(97.999,79.833,80.667);P(110.0,4.5,5.367);P(110.0,10.1,10.9);P(110.0,22.467,23.3);\n    P(110.0,28.1,28.867);P(110.0,37.833,38.233);P(110.0,46.1,46.467);P(110.0,53.6,53.967);P(110.0,58.1,58.467);\n    P(110.0,61.833,62.667);P(110.0,70.833,71.667);P(110.0,76.467,76.6);P(110.0,76.833,76.933);P(110.0,77.233,77.3);\n    P(123.47,0.0,0.8);P(123.47,1.1,1.867);P(123.47,2.233,3.0);P(123.47,3.367,4.1);P(123.47,6.733,7.6);\n    P(123.47,7.867,8.6);P(123.47,8.967,9.8);P(123.47,12.333,13.167);P(123.47,15.733,16.533);P(123.47,16.833,17.6);\n    P(123.47,17.967,18.733);P(123.47,19.1,19.833);P(123.47,20.233,21.033);P(123.47,21.333,22.067);P(123.47,24.733,25.533);\n    P(123.47,25.833,26.567);P(123.47,26.967,27.767);P(123.47,30.333,31.067);P(123.47,33.733,34.467);P(123.47,34.833,35.533);\n    P(123.47,38.967,39.367);P(123.47,42.333,42.433);P(123.47,45.733,46.2);P(123.47,47.233,48.033);P(123.47,48.333,49.167);\n    P(123.47,49.467,50.267);P(123.47,50.6,51.3);P(123.47,52.467,52.833);P(123.47,54.733,55.1);P(123.47,55.833,56.233);\n    P(123.47,59.233,59.6);P(123.47,60.333,60.467);P(123.47,60.733,61.567);P(123.47,64.1,64.9);P(123.47,67.467,68.3);\n    P(123.47,68.6,69.433);P(123.47,69.733,70.5);P(123.47,77.6,77.967);P(123.47,78.167,78.5);P(123.47,83.233,84.067);\n    P(123.47,84.333,85.1);P(123.47,85.467,87.667);P(130.81,80.967,81.767);P(130.81,82.1,82.9);P(146.83,78.733,79.467);\n    P(146.83,79.833,80.667);P(164.81,0.0,0.8);P(164.81,3.367,3.567);P(164.81,3.733,3.867);P(164.81,4.1,4.533);\n    P(164.81,6.733,8.667);P(164.81,8.967,9.8);P(164.81,12.333,13.167);P(164.81,15.733,17.7);P(164.81,17.967,18.733);\n    P(164.81,21.333,21.533);P(164.81,21.733,21.833);P(164.81,22.1,22.5);P(164.81,24.733,26.633);P(164.81,26.967,27.767);\n    P(164.81,30.333,31.167);P(164.81,33.733,35.533);P(164.81,39.333,40.1);P(164.81,41.6,42.8);P(164.81,44.967,45.733);\n    P(164.81,47.233,49.567);P(164.81,55.1,56.067);P(164.81,56.233,57.367);P(164.81,60.733,61.5);P(164.81,64.1,64.933);\n    P(164.81,67.833,68.067);P(164.81,68.233,68.367);P(164.81,68.6,69.433);P(164.81,69.733,70.467);P(164.81,73.1,75.0);\n    P(164.81,88.067,88.9);P(164.81,92.233,92.3);P(196.0,1.467,1.867);P(196.0,2.233,2.633);P(196.0,6.167,6.4);\n    P(196.0,10.5,10.867);P(196.0,11.233,11.6);P(196.0,14.967,15.367);P(196.0,19.467,19.833);P(196.0,20.233,20.6);\n    P(196.0,24.167,24.4);P(196.0,28.467,28.867);P(196.0,29.233,29.633);P(196.0,32.967,33.367);P(196.0,46.467,46.833);\n    P(196.0,51.733,52.9);P(196.0,53.967,54.367);P(196.0,58.467,60.533);P(196.0,62.233,62.633);P(196.0,62.967,63.333);\n    P(196.0,66.733,67.2);P(196.0,71.233,71.633);P(196.0,71.967,72.333);P(196.0,75.333,75.9);P(196.0,76.1,76.533);\n    P(196.0,83.233,87.667);P(196.0,89.867,90.1);P(196.0,90.467,91.2);P(220.0,1.1,1.5);P(220.0,2.6,3.0);\n    P(220.0,4.5,5.4);P(220.0,5.6,6.233);P(220.0,10.1,10.5);P(220.0,11.6,12.0);P(220.0,13.467,13.933);\n    P(220.0,14.033,14.133);P(220.0,14.233,14.4);P(220.0,14.6,14.967);P(220.0,19.1,19.5);P(220.0,20.6,20.967);\n    P(220.0,22.467,23.333);P(220.0,23.6,24.2);P(220.0,28.1,28.467);P(220.0,29.6,29.967);P(220.0,31.467,31.9);\n    P(220.0,32.033,32.167);P(220.0,32.233,32.467);P(220.0,32.6,33.0);P(220.0,46.1,46.467);P(220.0,54.333,54.733);\n    P(220.0,61.833,62.267);P(220.0,63.333,63.767);P(220.0,65.233,65.767);P(220.0,65.967,66.167);P(220.0,66.333,66.7);\n    P(220.0,70.833,71.233);P(220.0,72.333,72.767);P(220.0,76.467,76.967);P(220.0,77.233,77.567);P(220.0,80.967,83.233);\n    P(220.0,89.267,89.9);P(220.0,91.2,91.5);P(246.94,0.733,1.167);P(246.94,9.733,10.133);P(246.94,18.733,19.167);\n    P(246.94,27.733,28.167);P(246.94,38.233,40.167);P(246.94,40.467,41.533);P(246.94,45.733,46.2);P(246.94,54.733,55.1);\n    P(246.94,61.467,61.9);P(246.94,70.467,70.9);P(246.94,77.6,78.133);P(246.94,83.233,87.667);P(246.94,88.867,89.3);\n    P(261.63,80.967,83.233);P(293.66,37.1,38.3);P(293.66,78.733,80.933);P(329.63,35.967,37.167);P(329.63,78.167,78.767);\n    P(46.249,43.833,44.633);P(69.296,73.1,75.0);P(92.499,37.467,37.833);P(92.499,42.667,43.567);P(92.499,46.833,47.2);\n    P(92.499,53.233,53.6);P(92.499,57.733,58.1);P(116.54,42.767,43.5);P(138.59,42.8,43.5);P(185.0,1.867,2.3);\n    P(185.0,3.0,3.4);P(185.0,6.333,6.733);P(185.0,10.833,11.333);P(185.0,11.967,12.367);P(185.0,15.333,15.767);\n    P(185.0,19.833,20.3);P(185.0,20.967,21.4);P(185.0,24.333,24.767);P(185.0,28.833,29.3);P(185.0,29.967,30.4);\n    P(185.0,33.333,33.767);P(185.0,42.8,44.667);P(185.0,46.833,47.267);P(185.0,52.833,53.967);P(185.0,57.333,58.533);\n    P(185.0,62.6,63.067);P(185.0,63.733,64.133);P(185.0,67.1,67.333);P(185.0,67.467,67.867);P(185.0,71.6,72.067);\n    P(185.0,72.733,73.167);P(185.0,90.067,90.567);P(185.0,91.467,92.267);\n    return vec2(sound * 0.29);\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}