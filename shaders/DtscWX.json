{
    "Shader": {
        "info": {
            "date": "1691259214",
            "description": "Suggestions/improvements are welcome!",
            "flags": 0,
            "hasliked": 0,
            "id": "DtscWX",
            "likes": 17,
            "name": "Wave Library (desmos)",
            "published": 3,
            "tags": [
                "wave",
                "triangle",
                "sin",
                "circle",
                "cos",
                "square",
                "bounce",
                "graph",
                "function",
                "periodic",
                "spring",
                "saw",
                "easing",
                "sawtooth",
                "elastic",
                "desmos"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 248
        },
        "renderpass": [
            {
                "code": "#define D(v) d = min(d, length(u - vec2(.6*v, h))); h -= 0.08;\n#define F(c1,c2,c3) O += vec4(c1,c2,c3,0) * smoothstep(-2./R.y,2./R.y,.028-d); d = 1e5;\n                    \nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy,\n         u = (U+U-R)/R.y;\n         \n    float t = iTime,\n          h = 0.9,\n          d = 1e5;\n    \n    O *= 0.;\n    \n    // Cyan\n    D(cos(t)) \n    D(cosSkewL(t))\n    D(cosSkewR(t))\n    F(0,1,1)\n    \n    // Yellow\n    D(tri(t)) \n    D(triSoft(t, 5.))\n    D(triCos(t));   \n    F(1,1,0)\n    \n    // Pink\n    D(saw(2.*t)) \n    D(sawSoftU(2.*t, 4.))\n    D(sawSoftO(2.*t, 0.6))\n    F(1,0,1)\n\n    // Green\n    D(squSoft1(t, 9.)) \n    D(squSoft2(t, 9.))\n    D(squSoft3(t, 9.))\n    F(0,1,0)\n    \n    // Red\n    D(cir(2.*t/pi+1.)) \n    F(1,.5,.5)\n    \n    // Blue\n    D(mulWav(t, 4., 0.5)) \n    D(mulWav(t, 4., -0.75))\n    D(mulWav2(t, 3., 0.3, 3.))\n    F(.5,.5,1)\n    \n    // Light pink\n    D(wobBi(t, 12., 14.)) \n    D(wobUni(t/pi-.5, 7., 20., 15., 20.))\n    D(wobSoft(2.*t/pi-1., 8., 22., 4.))\n    F(1,.5,1)\n    \n    // White\n    D(wei(.5*t, 1., 1.))\n    D(wei2(.5*t, 1., 1., 0.5))\n    D(wei3(.5*t, 1., 1., 0.5)) // disappears at 0 :(\n    F(1,1,1)\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Todo: improve mulwav2, add bounce wave, delete wei3?\n\n#define pi 3.14159\n#define tanh2(a) ((exp2(a)-1.)/(exp2(a)+1.))\n#define atanh2(x) log2((1.+(x))/(1.-(x)))\n\n// Skew cos sin \n// https://www.desmos.com/calculator/1co5kkgpzk\n#define cosSkew(x,a) sqrt(4.-a*a)*cos(x)/(2.+a*sin(x))\n#define cosSkewL(x) sqrt(3.)*cos(x)/(2.+sin(x))\n#define cosSkewR(x) sqrt(3.)*cos(x)/(2.-sin(x))\n#define sinSkewL(x) sqrt(3.)*sin(x)/(2.-cos(x))\n#define sinSkewR(x) sqrt(3.)*sin(x)/(2.+cos(x))\n\n// Triangle\n// https://www.desmos.com/calculator/gbzybnz3ap\n#define tri(x) (2.*abs(1.-mod(x/pi,2.))-1.)\n#define triCos(x) tan(pi/4.*cos(x))\nfloat triSoft(float x, float a) {\n    float b = 1. - exp2(-max(1e-5, a));\n    return asin(b * cos(x)) / asin(b);\n}\n\n// Saw\n// https://www.desmos.com/calculator/sq7rw2sfev\n#define saw(x) (1.-mod(x/pi,2.))\nfloat sawSoftU(float x, float a) {\n    float m = 1. - mod(x / pi, 2.);\n    return m * (1. - pow(m, 2. * floor(a)));\n}\n#define sawSoftO(x,a) atan(a*sin(x)/(1.-a*cos(x)))/atan(a/sqrt(1.-a*a))\n#define sawSquSoftO(x,a,b) tanh2(a*b*sin(x)/(1.-a*cos(x)))/tanh2(a*b/sqrt(1.-a*a))\n\n// Square\n// https://www.desmos.com/calculator/cgvbcbg99d\n#define squ(x,p) sign(mod(x,p+p)-p)\n#define squSoft1(x,a) tanh2((a)*cos(x))/tanh2(a)\n#define squSoft2(x,a) (1.+abs(a))*cos(x)/(1.+abs(a*cos(x)))\n#define squSoft3(x,a) sign(cos(x))*(1.-exp2(-abs(a*cos(x))))/(1.-exp2(-abs(a)))\n\n// Pulse (multi wave is soft pulse)\n// https://www.desmos.com/calculator/eoviatvrdo\n#define pul(x,a,p) sign(mod(-x,p)+a-p)\n\n// Circle\n// https://www.desmos.com/calculator/1xmbt1wzjn\nfloat cir(float x) {\n    float m = mod(x, 2.) - 1.;\n    return sign(2. - mod(x, 4.)) * sqrt(1. - m * m);\n}\n\n// Multi wave\n// https://www.desmos.com/calculator/agixzs0m99\n#define mulWav(x,a,o) tanh2(a*(atanh2(cos(x))-atanh2(o)))\n\n// https://www.desmos.com/calculator/xiqfros6no\nfloat mulWav2(float x, float a, float o, float n) {\n    float ix = cos(x) / pow(1. - pow(abs(cos(x)), n), 1./n);\n    float io = o / pow(1. - pow(abs(o), n), 1./n);\n    float v = a * (ix - io);\n    return v / pow(1. + pow(abs(v), n), 1./n);\n}\n\n// Spring\n// https://www.desmos.com/calculator/erxxo0vibc\n#define wobBi(x,a,b) sign(cos(x))*(1.-exp2(-(a)*abs(cos(x)))*cos((b)*abs(cos(x))))\n\n// https://www.desmos.com/calculator/gbkax818fx\nfloat wobUni(float x, float a1, float b1, float a2, float b2) {\n    x = mod(x, 2.);\n    float f1 = 1. - exp(-a1 * x) * cos(b1 * x); \n    float f2 = exp(-a2 * (x-1.)) * cos(b2 * (x-1.));\n    f2 = mix(1., f2, step(1., x));\n    return 1. - 2. * f1 * f2;\n}\n\n// https://www.shadertoy.com/view/ctfcW4\nfloat wobSoft(float x, float a, float b, float n) {\n    float s = sign(mod(x, 4.) - 2.);    \n    x = mod(x, 2.); \n    float v = min(1., x);\n    float f = 1. - exp(-a * x) * cos(b * x);\n    float g = pow(1. - pow(1.-x, n), 1./n);   \n    float l = mix(mix(f, g, v), \n                  1. - exp(-7. * sqrt(x)), \n                  1. - pow(v, .1));     \n    return l * s;    \n}\n\n// Weird\n// https://www.desmos.com/calculator/wlf8nghsp8\n#define wei(x,a,b) cos(pi*tanh(a+b*tan(x)))\nfloat wei2(float x, float a, float b, float c) {\n    float p = c * pi;\n    float s = cos(p);\n    return 2. * (cos(p*tanh(a+b*tan(x)))-s) / (1.-s) - 1.;\n}\nfloat wei3(float x, float a, float b, float c) {\n    float p = c * pi;\n    float s = cos(p);\n    return 2. * (cos(p*tanh2(a+b*tan(x)))-s) / (1.-s) - 1.;\n}\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}