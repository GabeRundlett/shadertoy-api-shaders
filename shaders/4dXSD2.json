{
    "Shader": {
        "info": {
            "date": "1406729356",
            "description": "2D Chladni patterns visualized by their knot lines.",
            "flags": 0,
            "hasliked": 0,
            "id": "4dXSD2",
            "likes": 12,
            "name": "chladni",
            "published": 3,
            "tags": [
                "plasma",
                "chladni",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "386dx25",
            "viewed": 7995
        },
        "renderpass": [
            {
                "code": "/*\t2D Chladni patterns by www.386dx25.de.\n    For a nice and concise description see this nice article by Paul Bourke:\n\thttp://paulbourke.net/geometry/chladni/\n*/\nconst float pi = 3.1415926535897932384;\n\n// Edge lengths of the rectangular plate. Note that in reality only \n// for the case a=b degenerate eigenmodes appear, leading to the \n// superimposition as implemented here.\nfloat a = 1.0;\nfloat b = 1.0;\n\n// Chladni eigenmodes\nfloat chladni( float m, float n, vec2 uv )\n{\t\n\t// cos()*cos() for modes of a plate fixed at its center\n\t// sin()*sin() for modes of a plate fixed at its border (boring)\n\treturn cos(n*pi*uv.x/a)*cos(m*pi*uv.y/b);\n}\n\n// Eigenfrequencies (not used)\nfloat omega( float m, float n )\n{\n\tconst float rho = 1.0;\n\tconst float eta = 1.0;\t\n\treturn pi * sqrt( (rho/eta) * (m/a)*(m/a) + (n/b)*(n/b) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// Domain [-.5,-.5]x[.5,.5]\n    float aspect = iResolution.x / iResolution.y;\n\tvec2 uv = fragCoord.xy / iResolution.y - vec2(aspect*0.5,0.5);\n\t\n\t// Knot numbers  \n#ifdef IS_CINESHADER\n\tvec2 mn = (1.0+0.5*cos(0.25*iTime))*vec2(4.0,2.0); //21.0 * iMouse.xy / iResolution.xy;\n#else\n\tvec2 mn = 7.0 * iMouse.xy / iResolution.xy;\n#endif\n    \n\t// Superposition coefficients\n\tfloat theta = -iTime*0.5;\n\tmat2 R = mat2( cos(theta), sin(theta), -sin(theta), cos(theta) );\n\tvec2 c = R * vec2(1.0,-1.0);\n\t\n\t// Superposition of eigenmodes\n\tfloat u = c.x*chladni(mn.x,mn.y,uv) + c.y*chladni(mn.y,mn.x,uv);\n\t\n\t// Shift-scale from [-1,1] to [0,1]\t\t\n\tu = (0.5+u/2.0);\n\t\n\t// Visualize knot lines (i.e. zero-crossings)\n    float lines = 0.0;\n    float thickness = 0.015;\n    for(float delta=-0.6; delta < 1.2; delta+=0.2)\n        //u += step( abs(v-delta), 0.5*thickness );\n        lines += smoothstep(abs(u-delta)-thickness, abs(u-delta)+thickness, thickness);\n\n    // Cineshader uses alpha for 2.5D depth effect\n    float alpha = 0.0;\n#ifdef IS_CINESHADER\n    float vignette = max(1.0-16.0*length(uv*uv*uv),0.0);\n    lines *= vignette;\n    u *= vignette;\n    alpha = u*u+0.1*sqrt(sqrt(lines));\n#endif\n    \n\tfragColor = vec4(lines*vec3(1.0),alpha);\n}\n/** SHADERDATA\n{\n\t\"title\": \"chladni\",\n\t\"description\": \"2D Chladni patterns visualized by their knot lines.\",\n\t\"model\": \"person\"\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}