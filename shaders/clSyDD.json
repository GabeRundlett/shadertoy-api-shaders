{
    "Shader": {
        "info": {
            "date": "1691776586",
            "description": "quadtree",
            "flags": 0,
            "hasliked": 0,
            "id": "clSyDD",
            "likes": 11,
            "name": "quadtree distance of edge",
            "published": 3,
            "tags": [
                "tree",
                "quad",
                "quadtree"
            ],
            "usePreview": 0,
            "username": "lanx06",
            "viewed": 218
        },
        "renderpass": [
            {
                "code": "#define T iTime*0.5\n//#define pix 1.8/iResolution.y\nfloat shape(vec2 uv,int i){\n    vec2 l = uv-0.5;\n    float thin=0.15;\n    float radius=0.5;\n    float pix=1.3*float(1<<i)/iResolution.y;\n\n    float a= smoothstep(radius+pix,radius-pix,length(l));\n    //float a= smoothstep(pix,-pix,abs(length(l)-radius)-thin);\n    return a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float n=500.0;\n    float pix= 1.3/iResolution.y;\n    float scale=iResolution.y*0.7;\n\n    vec2 st = (fragCoord/scale);\n    vec2 uv=fract(st);\n    float r=0.35;\n    vec2 p=vec2(cos(T),sin(T*0.333))*0.5+vec2(iResolution.x/scale*0.5,0.5);\n    if((iMouse.z > 1.0))\n        p=iMouse.xy/scale;\n    vec2 origin=0.5+floor(st);\n    float l;\n    vec3 col ;\n    int i=0;\n    for(i=0;i<6;i++){\n        float size=pow(0.5,float(i+1));\n        float r2=size;\n        l=distance(p,origin);\n        //not interset\n        if(l>=r2+r)\n            break;\n        //interset\n        else if(l> max(r2,r)-2.0*min(r2,r))\n            ;\n        //contain\n        else if(r2<=r)\n            break;\n        origin+=(step(vec2(0.5),uv)-0.5)*size;\n        uv=fract((uv-0.5)*2.0);   \n    }\n    col.rgb=vec3(shape(uv,i));\n    //col.rg=vec2(origin);\n    float v=smoothstep(pix,-pix,length(st-p)-r);\n    col.rgb=mix(1.0-col.rgb,col.rgb,v);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}