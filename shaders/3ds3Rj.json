{
    "Shader": {
        "info": {
            "date": "1546873676",
            "description": "Saw this formula on TikTok...",
            "flags": 0,
            "hasliked": 0,
            "id": "3ds3Rj",
            "likes": 8,
            "name": "HeartCurve",
            "published": 3,
            "tags": [
                "heart",
                "1d",
                "function"
            ],
            "usePreview": 0,
            "username": "EvilRyu",
            "viewed": 643
        },
        "renderpass": [
            {
                "code": "// Created by evilryu\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define PI 3.14159265\n\nfloat love_curve(in float x, in float a)\n{\n    // abs(x) to avoid the result being complex number\n    // but seems some systems handle it well without the abs()\n    return pow(abs(x),2./3.)+0.9*sqrt(3.3-x*x)*sin(a*PI*x);\n}\n\nfloat grad_love_curve(float x, float a)\n{\n\t// abs(x) in the pow\n\treturn -0.9*x*sin(a*PI*x)/sqrt(3.3-x*x)+\n        \t0.9*a*PI*sqrt(3.3-x*x)*cos(a*PI*x)+\n        \t0.666667/pow(abs(x),1./3.);\n\n}\nvec2 getsubpixel(int id,vec2 fragCoord)\n{\n\tvec2 aa=vec2(floor((float(id)+0.1)*0.5),mod(float(id),2.0));\n\treturn vec2((2.0*fragCoord.xy+aa-iResolution.xy)/iResolution.y);\n}\n\n\nvec2 barrel(vec2 p)\n{   \n    float k=.03;\n    float r=p.x*p.x+p.y*p.y;\n    p*=1.6+k*r+k*r*r;\n    return p;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 q=fragCoord/iResolution.xy;\n     \n    vec3 tot=vec3(0.);\n    for(int i=0;i<4;++i)\n    {\n        vec2 p=getsubpixel(i,fragCoord);\n        \n        if(abs(p.x)-0.72>0.)\n            continue;\n        \n        p.x-=0.001;\n        p.y+=0.2;\n \n        p*=2.5;\n        float eps = 0.00001;\n\n        float f, df, d;\n\n        float t=1.0/iResolution.y;\n\n        f=love_curve(p.x, (sin(iTime*0.5)*0.5+0.5)*16.);\n        //df=(f-love_curve(p.x+eps, (sin(iTime)*0.5+0.5)*16.))/eps;\n        df=grad_love_curve(p.x,(sin(iTime*0.5)*0.5+0.5)*16.);\n        d=abs(p.y-f)/sqrt(1.0+df*df);\n\n        vec3 col=vec3(0.0);\n        col=mix(col, vec3(0.,0.7,0.), 1.-smoothstep(0., t*2., d/2.5));\n        tot+=col;\n    }\n    tot/=4.0;\n    \n    vec2 p=2.*q-1.;\n    p=barrel(p);\n    p.x*=iResolution.x/iResolution.y;\n    \n    p=mod(p,0.5)-.25;\n    tot=mix(tot,vec3(0.,0.1,0.0),smoothstep(0.,0.01,p.x)-smoothstep(0.01,0.02,p.x));\n    tot=mix(tot,vec3(0.,0.1,0.0),smoothstep(0.,0.01,p.y)-smoothstep(0.01,0.02,p.y));\n    \n    \n    tot=pow(clamp(tot,0.0,1.0),vec3(0.45)); \n    tot*=0.5+0.5*pow(16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.8);  // vigneting\n    fragColor.xyz=tot;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}