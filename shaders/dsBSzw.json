{
    "Shader": {
        "info": {
            "date": "1670049871",
            "description": "A short and simple procedural Houndstooth pattern in both branched and branchless variations. \nBranchless variation has built in Anti-Aliasing as a side effect.",
            "flags": 0,
            "hasliked": 0,
            "id": "dsBSzw",
            "likes": 4,
            "name": "Branchless Houndstooth Pattern",
            "published": 3,
            "tags": [
                "procedural",
                "branchless",
                "houndstooth"
            ],
            "usePreview": 0,
            "username": "Offline",
            "viewed": 218
        },
        "renderpass": [
            {
                "code": "#define SHARPNESS 100.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fract(fragCoord / iResolution.y * 8.);\n\n    //vec2 mask = step(.5, uv); // With step()\n    vec2 mask = clamp((uv - .5) * SHARPNESS, 0., 1.); // Without step()\n   \n    //float color = step(.5, fract(abs(uv.x - uv.y) * 2.)); // With step()\n    float color = clamp((abs((fract(abs(uv.x-uv.y)*2.+.25)-.5)*2.)-.5)*SHARPNESS/5.,0.,1.); // Without step() \n    \n    color = max(color, min(mask.x, mask.y)) * max(mask.x, mask.y); // Masking\n    \n    fragColor = vec4(color);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}