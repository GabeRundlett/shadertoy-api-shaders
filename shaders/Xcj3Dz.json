{
    "Shader": {
        "info": {
            "date": "1704091441",
            "description": "Happy new year!!!",
            "flags": 0,
            "hasliked": 0,
            "id": "Xcj3Dz",
            "likes": 27,
            "name": "HappyNewYear2024",
            "published": 3,
            "tags": [
                "graphicdesign",
                "cineshader"
            ],
            "usePreview": 1,
            "username": "yasuo",
            "viewed": 831
        },
        "renderpass": [
            {
                "code": "#define MAX_STEPS 64\n#define MAX_DIST 64.\n#define SURF_DIST .001\n#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.5),-antialiasing(1.5),d - b)\n#define B(p,s) max(abs(p).x-s.x,abs(p).y-s.y)\n#define deg45 .707\n#define R45(p) (( p + vec2(p.y,-p.x) ) *deg45)\n#define Tri(p,s) max(R45(p).x,max(R45(p).y,B(p,s)))\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n#define SkewX(a) mat2(1.0,tan(a),0.0,1.0)\n#define SkewY(a) mat2(1.0,0.0,tan(a),1.0)\n#define LINE_THICK 0.012\n#define char_0 1\n#define char_2 2\n#define char_4 3\n#define char_A 4\n#define char_E 5\n#define char_H 6\n#define char_N 7\n#define char_P 8\n#define char_R 9\n#define char_W 10\n#define char_Y 11\n\nfloat random (vec2 p) {\n    return fract(sin(dot(p.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nvec2 combine(vec2 val1, vec2 val2 ){\n    return (val1.x < val2.x)?val1:val2;\n}\n\nfloat coolFontBase(vec2 p, float thick){    \n    float d = abs(p.x)-thick;\n    p.x = abs(p.x)-0.1;\n    float d2 = abs(p.x)-thick;\n    d = min(d,d2);\n    d = max(abs(p.y)-0.15,d);\n    d = max(-(abs(p.y)-0.05),d);\n    return d;\n}\n\nfloat coolArrow(vec2 p, float thick){\n    float a = radians(-45.);\n    float d = abs(dot(p,vec2(cos(a),sin(a))))-thick;\n    a = radians(45.);\n    float d2 = abs(dot(p,vec2(cos(a),sin(a))))-thick;\n    d = min(d,d2);\n    return d;\n}\n\nfloat coolA(vec2 p){\n    vec2 prevP = p;\n    float d = coolFontBase(p,LINE_THICK);\n    p.y=abs(p.y)-0.25;\n    float d2 = coolArrow(p,LINE_THICK);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.1;\n    d2 = abs(p.x)-LINE_THICK;\n    d2 = max(abs(p.y)-0.15,d2);\n    d = min(d,d2);\n    p = prevP;\n    d2 = abs(p.x)-LINE_THICK;\n    d2 = max(p.y+0.05,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    return max(abs(p.x)-0.1-LINE_THICK,max(abs(p.y)-0.25,d));\n}\n\n\nfloat coolB(vec2 p){\n    vec2 prevP = p;\n    float d = coolFontBase(p,LINE_THICK);\n    p.y=abs(p.y)-0.25;\n    float d2 = coolArrow(p,LINE_THICK);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x += 0.1;\n    d2 = abs(p.x)-LINE_THICK;\n    d2 = max(abs(p.y)-0.15,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    float a = radians(-45.);\n    p.y = abs(p.y)+0.05;\n    d2 = abs(dot(p,vec2(cos(a),sin(a))))-LINE_THICK;\n    d = min(d,d2);\n    \n    p = prevP;\n    return max(abs(p.x)-0.1-LINE_THICK,max(abs(p.y)-0.25,d));\n}\n\nfloat coolE(vec2 p){\n    vec2 prevP = p;\n    float d = coolFontBase(p,LINE_THICK);\n    p.y=abs(p.y)-0.25;\n    float d2 = coolArrow(p,LINE_THICK);\n    d = min(d,d2);\n    \n    p = prevP;\n    float a = radians(45.);\n    p.y = abs(p.y)+0.05;\n    d2 = abs(dot(p,vec2(cos(a),sin(a))))-LINE_THICK;\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x-=0.05;\n    d2 = coolArrow(p,LINE_THICK);\n    d2 = max(-prevP.x-LINE_THICK,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    return max(abs(p.x)-0.1-LINE_THICK,max(abs(p.y)-0.25,d));\n}\n\nfloat coolH(vec2 p){\n    vec2 prevP = p;\n    float d = coolFontBase(p,LINE_THICK);\n    p.y=abs(p.y)-0.25;\n    float d2 = coolArrow(p,LINE_THICK);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.1;\n    d2 = abs(p.x)-LINE_THICK;\n    d2 = max(abs(p.y)-0.15,d2);\n    d = min(d,d2);\n    p = prevP;\n    \n    d2 = abs(p.x)-LINE_THICK;\n    \n    d2 = max(-(abs(p.y)-0.05),d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    return max(abs(p.x)-0.1-LINE_THICK,max(abs(p.y)-0.25,d));\n}\n\nfloat coolN(vec2 p){\n    vec2 prevP = p;\n    float d = coolFontBase(p,LINE_THICK);\n    d = max(p.y,d);\n    p.y+=0.15;\n    float d2 = coolArrow(p,LINE_THICK);\n    d2 = max(p.y,d2);\n    d = min(d,d2);\n    p = prevP;\n    p.y-=0.25;\n    d2 = coolArrow(p,LINE_THICK);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.1;\n    p.y+=0.05;\n    d2 = abs(p.x)-LINE_THICK;\n    d2 = max(abs(p.y)-0.2,d2);\n    d = min(d,d2);\n    p = prevP;\n    d2 = abs(p.x)-LINE_THICK;\n    d2 = max(abs(p.y)-0.15-LINE_THICK,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    return max(abs(p.x)-0.1-LINE_THICK,max(abs(p.y)-0.25,d));\n}\n\nfloat coolO(vec2 p){\n    vec2 prevP = p;\n    float d = coolFontBase(p,LINE_THICK);\n    p.y=abs(p.y)-0.25;\n    float d2 = coolArrow(p,LINE_THICK);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.1;\n    d2 = abs(p.x)-LINE_THICK;\n    d2 = max(abs(p.y)-0.15,d2);\n    d = min(d,d2);\n    p = prevP;\n    d2 = abs(p.x)-LINE_THICK;\n    d2 = max(abs(p.y)-0.1,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    return max(abs(p.x)-0.1-LINE_THICK,max(abs(p.y)-0.25,d));\n}\n\nfloat coolP(vec2 p){\n    vec2 prevP = p;\n    float d = coolFontBase(p,LINE_THICK);\n    p.y-=0.25;\n    float d2 = coolArrow(p,LINE_THICK);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x += 0.1;\n    p.y+=0.1;\n    d2 = abs(p.x)-LINE_THICK;\n    d2 = max(abs(p.y)-0.2,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    float a = radians(-45.);\n    p.y+=0.15;\n    d2 = abs(dot(p,vec2(cos(a),sin(a))))-LINE_THICK;\n    d2 = max(p.y-LINE_THICK,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = min(p.x-LINE_THICK,-p.y);\n    d = max(d2,d);\n    \n    p = prevP;\n    a = radians(-45.);\n    p.y+=0.05;\n    d2 = abs(dot(p,vec2(cos(a),sin(a))))-LINE_THICK;\n    d2 = max(-prevP.x-LINE_THICK,d2);\n    d = min(d,d2);\n\n    p = prevP;\n    return max(abs(p.x)-0.1-LINE_THICK,max(abs(p.y)-0.25,d));\n}\n\nfloat coolR(vec2 p){\n    vec2 prevP = p;\n    float d = coolB(p);\n    \n    p = prevP;\n    p.y+=0.25;\n    float d2 = abs(p.x)-LINE_THICK;\n    d2 = max(abs(p.y)-0.1,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    return max(abs(p.x)-0.1-LINE_THICK,max(abs(p.y)-0.25,d));\n}\n\nfloat coolS(vec2 p){\n    float thick = 0.003;\n    vec2 prevP = p;\n    float d = coolFontBase(p,thick);\n    float a = radians(-45.);\n    p.y=abs(p.y)-0.25;\n    float d2 = coolArrow(p,thick);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y+=0.05;\n    a = radians(45.);\n    d2 = max(prevP.x-thick,abs(dot(p,vec2(cos(a),sin(a))))-thick);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x-=0.1;\n    p.y+=0.05;\n    a = radians(45.);\n    d2 = max(-prevP.x-thick,abs(dot(p,vec2(cos(a),sin(a))))-thick);\n    d = min(d,d2);\n    \n    p = prevP;\n    a = radians(-62.);\n    d2 = abs(dot(p,vec2(cos(a),sin(a))))-thick;\n    p = prevP;\n    a = radians(45.);\n    d2 = max(-(abs(dot(p,vec2(cos(a),sin(a))))-0.035),d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    return max(abs(p.x)-0.1-thick,max(abs(p.y)-0.25,d));\n}\n\nfloat coolW(vec2 p){\n    vec2 prevP = p;\n    float d = coolFontBase(p,LINE_THICK);\n    p.y+=0.15;\n    float d2 = coolArrow(p,LINE_THICK);\n    d2 = max(p.y,d2);\n    d = min(d,d2);\n    p = prevP;\n    p.y-=0.25;\n    d2 = coolArrow(p,LINE_THICK);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y+=0.05;\n    p.x = abs(p.x)-0.1;\n    d2 = abs(p.x)-LINE_THICK;\n    d2 = max(abs(p.y)-0.2,d2);\n    d = min(d,d2);\n    p = prevP;\n    p.y-=0.15;\n    d2 = abs(p.x)-LINE_THICK;\n    d2 = max(abs(p.y)-0.2,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y+=0.1;\n    d2 = min(-(abs(p.x)-0.03), -(abs(p.y)-0.05));\n    d = max(d2,d);\n    \n    p = prevP;\n    return max(abs(p.x)-0.1-LINE_THICK,max(abs(p.y)-0.25,d));\n}\n\nfloat cool0(vec2 p){\n    float d = coolO(p);\n    return d;\n}\n\nfloat coolY(vec2 p){\n    vec2 prevP = p;\n    p.y*=0.95;\n    float d = coolFontBase(p,LINE_THICK);\n    p = prevP;\n    float a = radians(-45.);\n    p.y+=0.25;\n    float d2 = coolArrow(p,LINE_THICK);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y-=0.15;\n    d2 = coolArrow(p,LINE_THICK);\n    d2 = max(-p.y,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y+=0.05;\n    a = radians(45.);\n    d2 = max(prevP.x-LINE_THICK,abs(dot(p,vec2(cos(a),sin(a))))-LINE_THICK);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x -= 0.1;\n    d2 = abs(p.x)-LINE_THICK;\n    d2 = max((abs(p.y)-0.07),d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    a = radians(-62.);\n    d2 = abs(dot(p,vec2(cos(a),sin(a))))-LINE_THICK;\n    p = prevP;\n    a = radians(45.);\n    d2 = max(-(abs(dot(p,vec2(cos(a),sin(a))))-0.035),d2);\n    d2 = max(p.x,d2);\n    d = min(d,d2);\n    \n    p.x = abs(p.x)-0.1;\n    d2 = abs(p.x)-LINE_THICK;\n    d2 = max(-p.y+0.05,d2);\n    d = min(d,d2);    \n    \n    p = prevP;\n    return max(abs(p.x)-0.1-LINE_THICK,max(abs(p.y)-0.25,d));\n}\n\nfloat cool2(vec2 p){\n    vec2 prevP = p;\n    float d = coolFontBase(p,LINE_THICK);\n    float a = radians(-45.);\n    p.y-=0.25;\n    float d2 = coolArrow(p,LINE_THICK);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y+=0.05;\n    a = radians(45.);\n    d2 = max(prevP.x-(LINE_THICK-0.055),abs(dot(p,vec2(cos(a),sin(a))))-LINE_THICK);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x+=0.1;\n    p.y+=0.05;\n    a = radians(-45.);\n    d2 = max(prevP.x-LINE_THICK,abs(dot(p,vec2(cos(a),sin(a))))-LINE_THICK);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y+=0.05;\n    a = radians(-45.);\n    d2 = abs(dot(p,vec2(cos(a),sin(a))))-LINE_THICK;\n    p = prevP;\n    d2 = max(-p.x-LINE_THICK,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y+=0.05;\n    d2 = abs(p.y)-LINE_THICK;\n    d2 = max(-p.x,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y+=0.25-LINE_THICK;\n    d2 = abs(p.y)-LINE_THICK;\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.1;\n    d2 = abs(p.x)-LINE_THICK;\n    p = prevP;\n    d2 = max(p.y+0.1,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    return max(abs(p.x)-0.1-LINE_THICK,max(abs(p.y)-0.25,d));\n}\n\nfloat cool4(vec2 p){\n    vec2 prevP = p;\n    float d = coolFontBase(p,LINE_THICK);\n    p.y-=0.25;\n    float d2 = coolArrow(p,LINE_THICK);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x -= 0.1;\n    //p.y-=0.1;\n    d2 = abs(p.x)-LINE_THICK;\n    d2 = max(abs(p.y)-0.1,d2);\n    d = min(d,d2);\n    \n    \n    p = prevP;\n    float a = radians(45.);\n    p.y+=0.05;\n    d2 = abs(dot(p,vec2(cos(a),sin(a))))-LINE_THICK;\n    p = prevP;\n    d2 = max(p.x-LINE_THICK,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = min(-p.x-LINE_THICK-0.05,-p.y-0.045);\n    d = max(d2,d);\n    \n    p = prevP;\n    a = radians(-45.);\n    p.y+=0.25;\n    d2 = abs(dot(p,vec2(cos(a),sin(a))))-LINE_THICK;\n    d2 = max(-prevP.x-LINE_THICK,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = abs(p.x)-LINE_THICK;\n    d2 = max(-(abs(p.y)-0.1),d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    return max(abs(p.x)-0.1-LINE_THICK,max(abs(p.y)-0.25,d));\n}\n\nfloat checkChar(int targetChar, int char){\n    return 1.-abs(sign(float(targetChar) - float(char)));\n}\n\nfloat drawFont(vec2 p, int char, float size){\n    p*=size;\n    vec2 prevP = p;\n    float dd=length(p*2.8);\n    float z = sqrt(1.0 - dd * dd);\n    float r = atan(dd, z) / 3.14159;\n    float a = atan(p.y, p.x)*0.01;\n    \n    p *= vec2(r*cos(a)-0.9,r*sin(a)-1.2);\n    p*=-1.;\n    \n    float d = coolA(p)*checkChar(char_A,char);\n    d += coolE(p)*checkChar(char_E,char);\n    d += coolH(p)*checkChar(char_H,char);\n    d += coolN(p)*checkChar(char_N,char);\n    d += coolP(p)*checkChar(char_P,char);\n    d += coolR(p)*checkChar(char_R,char);\n    d += coolW(p)*checkChar(char_W,char);\n    d += coolY(p)*checkChar(char_Y,char);\n    d += cool0(p)*checkChar(char_0,char);\n    d += cool2(p)*checkChar(char_2,char);\n    d += cool4(p)*checkChar(char_4,char);\n    \n    // eliminate the artifact when it extrudes\n    p = prevP;\n    d = max(abs(p.x)-0.2,d);\n    d = max(abs(p.y)-0.25,d);\n    return d;\n}\n\nfloat drawHappy(vec2 p){\n    float d = drawFont(p-vec2(-0.5,0.0),char_H,1.);\n    float d2 = drawFont(p-vec2(-0.25,0.0),char_A,1.);\n    d = min(d,d2);\n    d2 = drawFont(p,char_P,1.);\n    d = min(d,d2);\n    d2 = drawFont(p-vec2(0.25,0.0),char_P,1.);\n    d = min(d,d2);\n    d2 = drawFont(p-vec2(0.5,0.0),char_Y,1.);\n    d = min(d,d2);\n    return d;\n}\n\nfloat drawNew(vec2 p){\n    float d = drawFont(p-vec2(-0.25,0.0),char_N,1.);\n    float d2 = drawFont(p,char_E,1.);\n    d = min(d,d2);\n    d2 = drawFont(p-vec2(0.25,0.0),char_W,1.);\n    d = min(d,d2);\n    return d;\n}\n\nfloat drawYear(vec2 p){\n    float d = drawFont(p-vec2(-0.375,0.0),char_Y,1.);\n    float d2 = drawFont(p-vec2(-0.125,0.0),char_E,1.);\n    d = min(d,d2);\n    d2 = drawFont(p-vec2(0.125,0.0),char_A,1.);\n    d = min(d,d2);\n    d2 = drawFont(p-vec2(0.375,0.0),char_R,1.);\n    d = min(d,d2);\n    return d;\n}\n\nfloat drawNewYear(vec2 p){\n    float d = drawNew(p-vec2(-0.65,0.0));\n    float d2 = drawYear(p-vec2(0.55,0.0));\n    d = min(d,d2);\n    return d;\n}\n\nfloat draw2024(vec2 p){\n    float d = drawFont(p-vec2(-0.9,0.0),char_2,0.5);\n    float d2 = drawFont(p-vec2(-0.3,0.0),char_0,0.5);\n    d = min(d,d2);\n    d2 = drawFont(p-vec2(0.3,0.0),char_2,0.5);\n    d = min(d,d2);\n    d2 = drawFont(p-vec2(0.9,0.0),char_4,0.5);\n    d = min(d,d2);\n    return d;\n}\n\nfloat arrow(vec2 p){\n    p*=Rot(radians(-90.));\n    vec2 prevP = p;\n    p.y-=0.19;\n    p.x*=1.8;\n    float d = Tri(p,vec2(0.2));\n    p = prevP;\n    p.y+=0.06;\n    float d2 = B(p,vec2(0.05,0.1));\n    d = min(d,d2);\n    return d;\n}\n\nfloat drawArrows(vec2 p){\n    vec2 prevP = p;\n    p.x=abs(p.x);\n    p.x+=iTime*0.3;\n    p.x+=0.24;\n    p.x=mod(p.x,0.5)-0.25;\n    float d = abs(arrow(p))-0.015;\n    p = prevP;\n    d = max(abs(p.x)-1.8,d);\n    d = max(-(abs(p.x)-0.7),d);\n    return d;\n}\n\nfloat arrow2(vec2 p){\n    p*=Rot(radians(90.));\n\n    vec2 prevP = p;\n    p.y-=0.15;\n    float d = Tri(p,vec2(0.2));\n    p = prevP;\n    p.y-=0.05;\n    return abs(max(-Tri(p,vec2(0.2)),d))-0.01;\n}\n\nfloat drawArrows2(vec2 p){\n    vec2 prevP = p;\n    p.x=abs(p.x);\n    p.x-=iTime*0.2;\n    p.x+=0.3;\n    p.x=mod(p.x,0.3)-0.15;\n    float d = arrow2(p);\n    p = prevP;\n    d = max(abs(p.x)-1.85,d);\n    d = max(-(abs(p.x)-1.3),d);\n    return d;\n}\n\nfloat drawGraphics(vec2 p){\n    vec2 prevP = p;\n    float d = drawHappy(p-vec2(0.0,0.75));\n    float d2 = draw2024(p);\n    d = min(d,d2);\n    \n    d2 = abs(B(p,vec2(1.35,0.47)))-0.01;\n    p*=Rot(radians(30.*iTime+45.));\n    float mask = abs(p.x)-0.42;\n    d2 = max(-mask,d2);\n\n    d2 = max(-(abs(prevP.y)-0.3),d2);\n    d = min(d,d2);\n    \n    return d;\n}\n\nvec2 GetDist(vec3 p) {\n    vec3 prevP = p;\n    float d = drawGraphics(p.xy);\n    d = max(abs(p.z)-0.05,d);\n    \n    float d2 = drawArrows(p.xy-vec2(0.0,0.75));\n    d2 = max(abs(p.z)-0.05,d2);\n    vec2 res = combine(vec2(d,0),vec2(d2,1));\n    \n    d2 = drawArrows2(p.xy);\n    d2 = max(abs(p.z)-0.05,d2);\n    res = combine(res,vec2(d2,2));\n    \n    return res;\n}\n\nvec2 RayMarch(vec3 ro, vec3 rd, int stepnum) {\n    vec2 dO = vec2(0.0);\n    \n    for(int i=0; i<stepnum; i++) {\n        vec3 p = ro + rd*dO.x;\n        vec2 dS = GetDist(p);\n        \n        dO.y = dS.y;\n        \n        if(dO.x>MAX_DIST || abs(dS.x)<SURF_DIST) break;\n        \n        dO.x += dS.x;\n    }\n    \n    return dO;\n}\n\nvec3 GetNormal(vec3 p) {\n    float d = GetDist(p).x;\n    vec2 e = vec2(.001, 0);\n    \n    vec3 n = d - vec3(\n        GetDist(p-e.xyy).x,\n        GetDist(p-e.yxy).x,\n        GetDist(p-e.yyx).x);\n    \n    return normalize(n);\n}\n\nvec3 R(vec2 uv, vec3 p, vec3 l, float z) {\n    vec3 f = normalize(l-p),\n        r = normalize(cross(vec3(0,1,0), f)),\n        u = cross(f,r),\n        c = p+f*z,\n        i = c + uv.x*r + uv.y*u,\n        d = normalize(i-p);\n    return d;\n}\n\nvec3 diffuseMaterial(vec3 n, vec3 rd, vec3 p, vec3 col) {\n    vec3 diffCol = vec3(0.0);\n    vec3 lightDir = normalize(vec3(1,10,-10));\n    float diff = clamp(dot(n,lightDir),0.0,1.0);\n    float skyDiff = clamp(0.5+0.5*dot(n,vec3(0,1,0)),0.0,1.0);\n    float bounceDiff = clamp(0.5+0.5*dot(n,vec3(0,-1,0)),0.0,1.0);\n    diffCol = col*vec3(-0.5)*diff;\n    diffCol += col*vec3(1.)*skyDiff;\n    diffCol += col*vec3(0.8)*bounceDiff;\n    diffCol += col*pow(max(dot(rd, reflect(lightDir, n)), 0.0), 5.); // spec\n        \n    return diffCol;\n}\n\n// IQ's 3D noise function.\nfloat noise3d( vec3 p )\n{\n    p*=0.6;\n\tconst vec3 s = vec3(27, 111, 57);\n\tvec3 ip = floor(p); p -= ip; \n    vec4 h = vec4(0., s.yz, s.y + s.z) + dot(ip, s);\n    p = p*p*(3. - 2.*p); \n    h = mix(fract(sin(h) * 43758.545), fract(sin(h + s.x) * 43758.545), p.x);\n    h.xy = mix(h.xz, h.yw, p.y);\n    return mix(h.x, h.y, p.z); \n}\n\nvec3 silver(vec3 rd) {\n    rd.y+=noise3d(rd*1000.);\n    float k = rd.y*0.5+0.5;\n    rd.xy*=Rot(radians(0.5*iTime*30.));\n    rd.x = mod(rd.x,0.3)-0.15;\n    float d = abs(rd.x)-0.2;\n    vec3 col = mix(vec3(.1,.1,.1),vec3(0.7),k+d);\n    return col;\n}\n\nvec3 holoTex(vec2 p){\n    p*=20.;\n    vec2 gv = fract(p)-0.5;\n    gv*=Rot(0.05*iTime*20.);\n    vec2 prevGV = gv;\n    vec3 col = vec3(0.0);\n    \n    gv*=0.8;\n    gv*=Rot(radians(-45.));\n    float d = 1.0-(abs(gv.x)-0.01);\n    gv = prevGV;\n    gv*=Rot(radians(45.));\n    float d2 = abs(gv.x)-0.01;\n    col+=mix(d,d2,0.5);\n    return col;\n}\n\nvec3 materials(int mat, vec3 n, vec3 rd, vec3 p, vec3 col){\n    \n    if (mat == 1){\n        p.x=abs(p.x);\n        p.x+=iTime*0.3;\n    } else if (mat == 2){\n        p.x=abs(p.x);\n        p.x-=iTime*0.2;\n    }\n\n    vec3 r = reflect(p,n);\n    col = diffuseMaterial(n,rd,p,silver(r)*holoTex(r.xy)*3.);\n    return col;\n}\n\nfloat bg(vec2 p){\n    vec2 prevP = p;\n    p.y-=iTime*0.1;\n    p*=1.8;\n    p.y*=1.5;\n    p.x = mod(p.x,0.2)-0.1;\n    p.y = mod(p.y,0.5)-0.25;\n    float d = coolS(p);\n    return d;\n}\n\nfloat star(vec2 p){\n    vec2 prevP = p;\n    p = DF(p,1.);\n    p-=0.03;\n    p*=Rot(radians(45.));\n    p*=vec2(3.,0.7);\n    float d = Tri(p,vec2(0.03));\n    return d;\n}\n\nfloat bgArrows(vec2 p){\n    p*=2.;\n    p.y-=iTime*0.5;\n    p.y = mod(p.y,0.4)-0.2;\n    p*=Rot(radians(90.));\n    float d = arrow(p);\n    return d;\n}\n\nfloat bgStars(vec2 p){\n    p.y-=iTime*0.3;\n    p.y = mod(p.y,0.2)-0.1;\n    p*=Rot(radians(90.));\n    float d = star(p);\n    return d;\n}\n\nfloat crown(vec2 p){\n    vec2 prevP = p;\n    p.x*=3.;\n    float d = Tri(p,vec2(0.1));\n    p = prevP;\n    p.x = abs(p.x)-0.06;\n    p.y+=0.035;\n    p.x*=3.;\n    p*=Rot(radians(5.));\n    float d2 = Tri(p,vec2(0.07));\n    d = min(d,d2);\n    \n    \n    p = prevP;\n    p.y+=0.11;\n    d2 = B(p,vec2(0.075,0.02));\n    d = min(d,d2);\n    d = max((abs(prevP.x)-0.075),d);\n    \n    p = prevP;\n    p.y-=0.02;\n    d2 = length(p)-0.01;\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y+=0.02;\n    p.x = abs(p.x)-0.06;\n    d2 = length(p)-0.01;\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat bgCrowns(vec2 p){\n    p.y-=iTime*0.3;\n    p*=2.5;\n    \n    p.y+=0.25;\n    p.y = mod(p.y,0.5)-0.25;\n    p.y-=0.05;\n    float d = crown(p);\n    return d;\n}\n\nfloat aboveBg(vec2 p){\n    vec2 prevP = p;\n    p = DF(p,5.);\n    p-=0.1;\n    p*=Rot(radians(45.));\n    float d = bgArrows(p);\n    p = prevP;\n    \n    p*=Rot(radians(9.));\n    p = DF(p,5.);\n    p-=0.1;\n    p*=Rot(radians(45.));\n    float d2 = bgStars(p);\n    d = min(d,d2);\n    p = prevP;\n    \n    p*=Rot(radians(9.));\n    p = DF(p,5.);\n    p-=0.1;\n    p*=Rot(radians(45.));\n    d2 = bgCrowns(p);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat barcode(vec2 p){\n     vec2 prevP = p;\n     p.x+=iTime*0.05;\n     p*=60.;\n     p.y = 0.0;\n     vec2 gv = fract(p)-0.5;\n     vec2 id = floor(p);\n     float n = random(id);\n     float d = B(gv,vec2(clamp(n*0.5,0.1,0.5),1.));\n     return d;\n}\n\nfloat drawBarcode(vec2 p){\n    vec2 prevP = p;\n    float d = barcode(p);\n    d = max(B(p,vec2(0.15,0.06)),d);\n    p.x = abs(p.x)-0.145;\n    float d2 = B(p-vec2(0.0,-0.07),vec2(0.003,0.005));\n    d = min(d,d2);\n    p = prevP;\n    \n    p.x = abs(p.x)-0.05;\n    d2 = B(p-vec2(0.0,-0.07),vec2(0.02,0.005));\n    d = min(d,d2);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 prevUV = uv;\n    \n    vec2 m =  iMouse.xy/iResolution.xy;\n    \n    vec3 ro = vec3(0, 0, -2.2);\n    if(iMouse.z>0.){\n        ro.yz *= Rot(m.y*3.14+1.);\n        ro.y = max(-0.9,ro.y);\n        ro.xz *= Rot(-m.x*6.2831);\n    } else {\n        ro.yz *= Rot(radians(-5.0));\n        ro.xz *= Rot(radians(sin(iTime*0.3)*5.0));\n    }\n    \n    vec3 rd = R(uv, ro, vec3(0,0.0,0), 1.0);\n    vec2 d = RayMarch(ro, rd, MAX_STEPS);\n    vec3 col = vec3(.0);\n\n    vec3 p = ro + rd * d.x;\n    vec3 n = GetNormal(p);\n    if(d.x<MAX_DIST) {\n\n        int mat = int(d.y);\n        col = materials(mat,n,rd,p,col);\n    } else {\n        float dd = bg(uv);\n        col = mix(col,vec3(0.3),S(dd,0.0));\n        \n        dd = aboveBg(uv);\n        col = mix(col,vec3(length(uv)-0.3)*0.5,S(dd,0.0));\n        \n        uv*=2.5;\n        dd = drawNewYear(uv-vec2(0.0,-0.85));\n        col = mix(col,diffuseMaterial(n,rd,p,silver(uv.xyx)*2.),S(dd,0.0));\n        \n        uv = prevUV;\n        uv.x-=0.02;\n        uv.y+=0.02;\n        uv*=2.15;\n        dd = draw2024(uv);\n        col = mix(col,vec3(0.3),S(dd,0.0));\n        \n        uv.x+=0.02;\n        uv.y-=0.01;\n        dd = drawHappy(uv-vec2(0.,0.72));\n        col = mix(col,vec3(0.3),S(dd,0.0));\n        \n        uv = prevUV;\n        uv.x = abs(uv.x)-0.63;\n        uv.y+=0.33;\n        dd = drawBarcode(uv);\n        col = mix(col,vec3(0.9),S(dd,0.0));\n    }\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}