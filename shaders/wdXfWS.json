{
    "Shader": {
        "info": {
            "date": "1588952867",
            "description": "reference images:https://thehundreds.com/products/adam-bomb-puzzle?variant=31914407297098",
            "flags": 0,
            "hasliked": 0,
            "id": "wdXfWS",
            "likes": 11,
            "name": "Adam Bomb",
            "published": 3,
            "tags": [
                "reproduction"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 389
        },
        "renderpass": [
            {
                "code": "#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n\n// https://iquilezles.org/articles/distfunctions2d\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n// https://iquilezles.org/articles/distfunctions2d\nfloat sdTriangle( in vec2 p, in vec2 p0, in vec2 p1, in vec2 p2 )\n{\n    vec2 e0 = p1-p0, e1 = p2-p1, e2 = p0-p2;\n    vec2 v0 = p -p0, v1 = p -p1, v2 = p -p2;\n    vec2 pq0 = v0 - e0*clamp( dot(v0,e0)/dot(e0,e0), 0.0, 1.0 );\n    vec2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\n    vec2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\n    float s = sign( e0.x*e2.y - e0.y*e2.x );\n    vec2 d = min(min(vec2(dot(pq0,pq0), s*(v0.x*e0.y-v0.y*e0.x)),\n                     vec2(dot(pq1,pq1), s*(v1.x*e1.y-v1.y*e1.x))),\n                     vec2(dot(pq2,pq2), s*(v2.x*e2.y-v2.y*e2.x)));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nvec3 lineTex(vec2 uv)\n{\n    float stripeSize = 50.0;\n    float t = iTime*10.0;\n    return vec3(tan((uv.x+uv.y+(-t/stripeSize))*stripeSize)*stripeSize,tan((uv.x+uv.y+(-t/stripeSize))*stripeSize)*stripeSize,tan((uv.x+uv.y+(-t/stripeSize))*stripeSize)*stripeSize);\n}\n\nvec3 bom(vec2 p, vec3 col){\n    vec2 prevP = p;\n    col = mix(col,vec3(0.0),S( length(p)-0.25,0.0)); // bg\n    \n    p.x*=0.95;\n    col = mix(col,vec3(0.0),S( length(p-vec2(0.0,0.27))-0.07,0.0));\n    \n\tp = prevP;\n    float d = abs(length(p)-0.25)-0.005;\n    \n    vec2 p2 = p-vec2(0.0,0.3);\n    p2.y*=1.7;\n    \n    d = max(-sdBox(p-vec2(0.0,0.25),vec2(0.07,0.05)),d);\n    \n    float d2 = abs(length(p2)-0.07)-0.006;\n    d = min(d,d2);\n    \n    vec2 p3 = p-vec2(0.0,0.25);\n    float d3 = abs(sdBox(p3,vec2(0.07,0.05)))-0.006;\n    d3 = max(-(length(p2)-0.07),d3);\n    d = min(d,d3);\n    \n    vec2 p4 = p-vec2(0.0,0.2);\n    p4.y*=1.7;\n    float d4 = abs(length(p4)-0.07)-0.006;\n    d4 = max((p4.y),d4);\n    d = min(d,d4);\n    d = max(-(length(p4)-0.065),d);\n    \n    vec2 p5 = p-vec2(0.02,0.03);\n    p5*=Rot(radians(-20.0));\n    p5.x*=2.0;\n    \n    float d5 = length(p5)-0.07;\n    d = min(d,d5);\n    \n    vec2 p6 = p-vec2(0.013,0.05);\n    p6*=Rot(radians(-20.0));\n    p6.x*=3.0;\n    p6.y*=1.8;\n    \n    float d6 = length(p6)-0.07;\n    d = max(-d6,d);\n    \n    vec2 p7 = p-vec2(0.12,0.09);\n    p7*=Rot(radians(-20.0));\n    p7.x*=2.0;\n    p7.y*=1.1;\n    \n    float d7 = length(p7)-0.07;\n    d = min(d,d7);\n    \n    vec2 p8 = p-vec2(0.115,0.105);\n    p8*=Rot(radians(-20.0));\n    p8.x*=3.2;\n    p8.y*=2.0;\n    \n    float d8 = length(p8)-0.07;\n    d = max(-d8,d);\n    \n    float d9 = length(p)-0.22;\n    p.y*=0.8;\n    float d10 = length(p)-0.2;\n    d9 = max(-d10,d9);\n    d9 = max(p.x,d9);\n    p = prevP;\n    \n    float d11 = sdBox((p-vec2(0.0,0.15))*Rot(radians(-20.0)),vec2(0.3,0.015));\n    d9 = max(-d11,d9);\n    \n    d = min(d,d9);\n\n    vec2 p9 = p-vec2(0.1,-0.14);\n    p9*=Rot(radians(-40.0));\n    p9.y*=2.0;\n    float d12 = length(p9)-0.08;\n    \n    vec2 p10 = p-vec2(0.16,-0.17);\n    p10*=Rot(radians(0.0));\n    p10.x*=2.0;\n    float d13 = length(p10)-0.08;\n    d12 = max(-d13,d12);\n    \n    d = min(d,d12);\n    \n    vec2 p11 = p-vec2(-0.04,0.2);\n    float d14 = sdBox(p11,vec2(0.007,0.028));\n    d = min(d,d14);\n        \n    vec2 p12 = p-vec2(-0.04,0.255);\n    float d15 = sdBox(p12,vec2(0.007,0.011));\n    d = min(d,d15);\n    \n    \n    col = mix(col,vec3(1.0),S(d,0.0));\n    \n    \n    vec2 p13 = p-vec2(0.0,0.37);\n    const float k = 3.0;\n    float c = cos(k*p13.y);\n    float s = sin(k*p13.y);\n    mat2  m = mat2(c,-s,s,c);\n    \n    \n    d = sdBox((p13*m)*Rot(radians(10.0)),vec2(0.022,0.07));\n    col = mix(col,lineTex(p),S(d,0.0));\n    \n    return col;\n}\n\nvec3 fire(vec2 p, vec3 col) {\n    vec2 prevP = p;\n    float d = sdTriangle(p,vec2(0.0,0.2),vec2(0.1,-0.2),vec2(-0.1,-0.2));\n    \n    p.x = abs(p.x);\n    vec2 p2 = (p-vec2(0.15,-0.1));\n    p2*=Rot(radians(45.0));\n    \n    float d2 = sdTriangle(p2,vec2(0.0,0.15),vec2(0.1,-0.1),vec2(-0.1,-0.1));\n    d = min(d,d2);\n    \n    p2 = (p-vec2(0.15,-0.2));\n    p2*=Rot(radians(100.0));\n    d2 = sdTriangle(p2,vec2(0.0,0.3),vec2(0.06,-0.1),vec2(-0.06,-0.1));\n    d = min(d,d2);\n    \n    p2 = (p-vec2(0.15,-0.25));\n    p2*=Rot(radians(110.0));\n    d2 = sdTriangle(p2,vec2(0.0,0.1),vec2(0.03,-0.1),vec2(-0.03,-0.1));\n    d = min(d,d2);\n    \n    p2 = (p-vec2(0.15,-0.3));\n    p2*=Rot(radians(130.0));\n    d2 = sdTriangle(p2,vec2(0.0,0.23),vec2(0.06,-0.1),vec2(-0.06,-0.1));\n    d = min(d,d2);\n    \n    col = mix(col,vec3(0.8,0.7,0.0),S(d,0.0));\n    \n    col = mix(col,vec3(0.7,0.3,0.0),S(abs(d)-0.01,0.0));\n    return col;\n}\n\nvec3 chara(vec2 p, vec3 col) {\n    vec2 prevP = p;\n    \n    p*=1.0+sin(iTime*6.0)*0.05;\n    col = fire(p-vec2(0.0,0.43),col);\n    \n    p = prevP;\n    col = bom(p,col);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\tvec2 prevUV = uv;\n    vec3 col = vec3(0.0);\n\tfloat t = iTime*0.1;\n    \n    uv-=t;\n    uv*=1.5;\n    uv.x = mod(uv.x,0.52)-0.26;\n    uv.y = mod(uv.y,1.1)-0.55;\n    col = bom(uv,col);\n    uv = prevUV;\n    \n    uv-=t;\n    uv*=1.5;\n    uv.x += 0.26;\n    uv.x = mod(uv.x,0.52)-0.26;\n    \n    uv.y -= 0.55;\n    uv.y = mod(uv.y,1.1)-0.55;\n    \n    col = bom(uv,col);\n    \n    uv = prevUV;\n    uv*=1.5;\n    col = chara((uv-vec2(0.7,0.35))*Rot(radians(120.0)),col);\n    \n    uv = prevUV;\n    uv*=1.2;\n    col = chara((uv-vec2(-0.6,0.2))*Rot(radians(200.0)),col);\n        \n    uv = prevUV;\n    uv*=1.3;\n    col = chara((uv-vec2(0.85,-0.35))*Rot(radians(260.0)),col);\n    \n    uv = prevUV;\n    col = chara(uv-vec2(0.0,-0.2),col);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}