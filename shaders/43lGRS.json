{
    "Shader": {
        "info": {
            "date": "1707603207",
            "description": "Voronoi with normals",
            "flags": 0,
            "hasliked": 0,
            "id": "43lGRS",
            "likes": 3,
            "name": "Voronoi with normals and uids",
            "published": 3,
            "tags": [
                "voronoi",
                "noise",
                "normals"
            ],
            "usePreview": 0,
            "username": "ianertson",
            "viewed": 146
        },
        "renderpass": [
            {
                "code": "#define R iResolution.xy\n#define T (iTime)\n#define M_PI 3.14159265358979323846264338327950288\n#define TAU (M_PI*2.0)\n#define FUI floatBitsToUint\n\nfloat smin(float a, float b, float k) {float h = clamp(0.5 + 0.5*(a-b)/k, 0.0, 1.0); return mix(a, b, h) - k*h*(1.0-h); }\nfloat smax(float a, float b, float k) {return smin(a, b, -k); }\nfloat sgt(in float a, in float b, in float s) {float h = clamp(0.5 + 0.5 * (a - b) / s, 0.0, 1.0); return mix(0.0, 1.0, h*h*(3.0-2.0*h));}\nfloat slt(in float a, in float b, in float s) {float h = clamp(0.5 + 0.5 * (b - a) / s, 0.0, 1.0); return mix(0.0, 1.0, h*h*(3.0-2.0*h));}\n\nfloat hash21(vec2 ip, float seed) {\n  uvec2 p = FUI(ip); uint s = FUI(seed); uvec2 k = ~p + ~s;\n  p ^= p << 17U; p ^= p >> 13U; p ^= p << 5U;\n  p += (p ^ k) + p * k; p *= 1013U; p ^= (p >> 4U);\n  return float(p.x * k.y + p.y + p.y * k.x + k.y) / float(0xFFFFFFFFU);\n}\n\n// {\n//   {x, y} // uid\n//   {x, y} // normal\n//   {x, y} // distances\n// }\nmat3x2 voro(in vec2 p, in float seed, float k){\n  vec2 Pi = floor(p); vec2 Pf = fract(p);\n  float dmin = 1e20; float dmi = 10.0; float dma = -dmi;\n  vec2 off = vec2(0.0); vec2 dif = vec2(0.0);\n  for(int j=-1; j<=1; j++){\n    for(int i=-1; i<=1; i++){\n      vec2 lattice = vec2(i,j);\n      vec2 offset = vec2(\n      hash21(Pi+lattice, seed+3.328123),\n      hash21(Pi+lattice, seed+5.58931));\n      vec2 diff = lattice + offset - Pf;\n      float ne = dot(diff, diff);\n      float lt = slt(ne, dmi, k);\n      float gt = sgt(ne, dma, k);\n      dmi = smin(dmi, ne, k);\n      dma = smax(dma, ne, k);\n      off = mix(off, offset, lt);\n      dif = mix(dif, diff, lt);\n    }\n  }\n\n  return mat3x2(off, dif, vec2(dmi, dma));\n}\n\n\n////////////////////////////////////////////////////////\n\nvoid mainImage(out vec4 o, in vec2 fc) {\n  vec3 col = vec3(0.0);\n  vec2 uv = (fc-0.5*R.xy)/R.y;\n  vec4 m = vec4((iMouse.xy-0.5*R.xy)/R.y,iMouse.zw);\n  const float seed = 3.3214;\n  float zoom = mix(7.0, 16.0, 0.5+0.5*sin(T));\n  #define VO(UV) voro((UV), seed, 0.25)\n\n  vec2 c = (0.5*R.xy)/R.y;\n  vec2 tx = (1.0/R.yy)*24.;\n  \n  float t = T*2.5;\n\n  if (uv.x <= 0.0 && uv.y <= 0.0) {\n      uv = uv + vec2(c.x*0.5, c.y) + (tx*vec2(sin(t+0.72), cos(t)));\n      col += VO(uv*zoom)[0].xyy;\n  } else if (uv.x >= 0.0 && uv.y >= 0.0) {\n      uv = uv + vec2(-c.x*0.5, 0) + tx*vec2(cos(t), sin(t));\n      col += normalize(VO(uv*zoom)[1].xxy);\n  } else if (uv.x <= 0.0 && uv.y >= 0.0) {\n      uv = uv + vec2(c.x*0.5, -c.y*0.5) + tx * vec2(sin(t-0.05), cos(t+0.15));\n      col += VO(uv*zoom)[2].x;\n  } else {\n      col += hash21(uv + vec2(sin(1e-6*t+1.9585), cos(1e-6*t*0.934)), seed);\n  }\n  \n  o = vec4(col, 1.0);\n}\n    ",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}