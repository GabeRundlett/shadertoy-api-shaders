{
    "Shader": {
        "info": {
            "date": "1719580797",
            "description": "Taking lerp out on a walk with overlapping squares, multi-tap loop. Just messing with id's and timing to make some patterns.\n    ",
            "flags": 0,
            "hasliked": 0,
            "id": "XX3SWj",
            "likes": 27,
            "name": "Byt3-daily-003",
            "published": 3,
            "tags": [
                "2d",
                "animation",
                "lerp",
                "box",
                "motion",
                "hash"
            ],
            "usePreview": 0,
            "username": "byt3_m3chanic",
            "viewed": 257
        },
        "renderpass": [
            {
                "code": "/** \n\n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n    \n    Taking lerp out on a walk with overlapping squares, multi-tap loop. Just messing with\n    id's and timing to make some patterns.\n    \n    Byt3-daily-002\n    06/27/2024  @byt3_m3chanic\n    \n    *with golfing edits from \n    \n*/\n\n#define R     iResolution\n#define T     iTime\n#define M     iMouse\n\n#define PI    3.141592653\n#define PI2   6.283185307\n\n#define S(t)     smoothstep(px,-px,t)\n\nmat2 rot(float a) { return mat2(cos(a),sin(a),-sin(a),cos(a)); }\nfloat hash21(vec2 a) { return fract(sin(dot(a, vec2(27.609, 57.583)))*43758.5453); }\nfloat lsp(float begin, float end, float t) { return clamp((t - begin) / (end - begin), 0.0, 1.0); }\nfloat eoc(float t) { return t = --t * t * t + 1.; }\n\nfloat box( in vec2 p, in vec2 b ) {\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nconst float scale = 12.;\nfloat time;\n\nvoid mainImage( out vec4 fragColor, in vec2 F )\n{\n    float tmod;\n    time = T+100.;\n    \n    vec2 uv = (2.*F-R.xy)/max(R.x,R.y);\n\n    uv.x+=T*.048;\n    uv*=scale;\n    float px = fwidth(uv.x);\n\n    float t = .5+10.*sin((uv.y-uv.x)*3.);\n    vec3 C = mix(vec3(0),vec3(.1),S(t));\n\n    vec2 vv = fract(uv)-.5;\n    vec2 id = floor(uv);\n    \n    float d = box(vv,vec2(.3))-.1;\n    C += .1*S(abs(d)-.01);\n     \n    for(int y=-1;y<=1;y++) {\n        for(int x=-1;x<=1;x++) {\n\n            vec2 offset = vec2(x,y);\n\n            float rx = hash21(id+offset);  \n            float mid = floor(mod(abs(rx*10.),10.));\n       \n            vec3 cx = mix(vec3(0,1,1),vec3(1,.5,0),rx);\n            \n            tmod = mod(time*(.25+rx), 17.);\n \n            //movement\n            float t3 = lsp(mid, mid+2., tmod);\n            t3 = eoc(t3); t3 = t3*t3*t3;\n            float t4 = lsp(mid+2., mid+4., tmod);\n            t4 = eoc(t4); t4 = t4*t4*t4;\n            float t5 = lsp(mid+4., mid+6., tmod);\n            t5 = eoc(t5); t5 = t5*t5*t5;\n            float t6 = lsp(mid+6., mid+8., tmod);\n            t6 = eoc(t6); t6 = t6*t6*t6;\n\n            rx = fract(rx*4321.7);\n            vec2 vx = vec2((t3-t5),(t4-t6))*.8;\n            vec2 pos = vv-offset+vec2(.4,.4)-vx;\n            \n            pos *=rot((t3+t5+t4+t6)*PI);\n            float s = rx>.9?length(pos)-.4:box(pos,vec2(.3))-.125;\n            float n = abs(s)-.025;\n            \n            rx = fract(rx*4321.7);\n            C = mix(C,cx,S(rx>.8 ? s : n ));\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(C,1);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}