{
    "Shader": {
        "info": {
            "date": "1710454524",
            "description": "Galaxy based on \nhttps://www.shadertoy.com/view/lty3Rt",
            "flags": 0,
            "hasliked": 0,
            "id": "XX2XWR",
            "likes": 2,
            "name": "Galaxy Background_",
            "published": 3,
            "tags": [
                "galaxy"
            ],
            "usePreview": 0,
            "username": "luisgustavops",
            "viewed": 199
        },
        "renderpass": [
            {
                "code": "// Galaxy shader\n//\n// Created by Frank Hugenroth  /frankenburgh/   07/2015\n// Released at nordlicht/bremen 2015\n\n#define SCREEN_EFFECT 0\n\n// random/hash function              \nfloat hash( float n )\n{\n  return fract(cos(n)*41415.92653);\n}\n\n// 2d noise function\nfloat noise( in vec2 x )\n{\n  vec2 p  = floor(x);\n  vec2 f  = smoothstep(0.0, 1.0, fract(x));\n  float n = p.x + p.y*57.0;\n\n  return mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n    mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y);\n}\n\nfloat noise( in vec3 x )\n{\n  vec3 p  = floor(x);\n  vec3 f  = smoothstep(0.0, 1.0, fract(x));\n  float n = p.x + p.y*57.0 + 113.0*p.z;\n\n  return mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n    mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y),\n    mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n    mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n}\n\nmat3 m = mat3( 0.00,  1.60,  1.20, -1.60,  0.72, -0.96, -1.20, -0.96,  1.28 );\n\n// Fractional Brownian motion\nfloat fbmslow( vec3 p )\n{\n  float f = 0.5000*noise( p ); p = m*p*1.2;\n  f += 0.2500*noise( p ); p = m*p*1.3;\n  f += 0.1666*noise( p ); p = m*p*1.4;\n  f += 0.0834*noise( p ); p = m*p*1.84;\n  return f;\n}\n\nfloat fbm( vec3 p )\n{\n  float f = 0., a = 1., s=0.;\n  f += a*noise( p ); p = m*p*1.149; s += a; a *= .75;\n  f += a*noise( p ); p = m*p*1.41; s += a; a *= .75;\n  f += a*noise( p ); p = m*p*1.51; s += a; a *= .65;\n  f += a*noise( p ); p = m*p*1.21; s += a; a *= .35;\n  f += a*noise( p ); p = m*p*1.41; s += a; a *= .75;\n  f += a*noise( p ); \n  return f/s;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat time =  0.2\n    ;\n\n\tvec2 xy = -1.0 + 2.0*fragCoord.xy / iResolution.xy;\n\n\t// fade in (1=10sec), out after 8=80sec;\n\tfloat fade = 0.7;\n\t// start glow after 5=50sec\n\tfloat fade2= 0.7;\n\tfloat glow = 0.7;\n\t\n\t\n\t// get camera position and view direction\n\tvec3 campos = vec3(500.0, 850., -.0-cos((time-1.4)/2.)*2000.); // moving\n\tvec3 camtar = vec3(0., 0., 0.);\n\t\n\tfloat roll = 0.34;\n\tvec3 cw = normalize(camtar-campos);\n\tvec3 cp = vec3(sin(roll), cos(roll),0.0);\n\tvec3 cu = normalize(cross(cw,cp));\n\tvec3 cv = normalize(cross(cu,cw));\n\tvec3 rd = normalize( xy.x*cu + xy.y*cv + 1.6*cw );\n\n\tvec3 light   = normalize( vec3(  0., 0.,  0. )-campos );\n\tfloat sundot = clamp(dot(light,rd),0.0,1.0);\n\n\t// render sky\n\n    // galaxy center glow\n     vec3 col = vec3(  0., 0.,  0. );\n    // moon haze\n     col += 0.3*vec3(0.8,0.9,1.2)*pow( sundot, 8.0 );\n\n\t// stars\n\tvec3 stars = 85.5*vec3(pow(fbmslow(rd.xyz*312.0), 7.0))*vec3(pow(fbmslow(rd.zxy*440.3), 8.0));\n\t\n\t// moving background fog\n    vec3 cpos = 1500.*rd + vec3(831.0-time*30., 321.0, 1000.0);\n    col += vec3(0.4, 0.5, 1.0) * ((fbmslow( cpos*0.0035 ) - .5));\n\n\tcpos += vec3(831.0-time*33., 321.0, 999.);\n    col += vec3(0.6, 0.3, 0.6) * 10.0*pow((fbmslow( cpos*0.0045 )), 10.0);\n\n\tcpos += vec3(3831.0-time*39., 221.0, 999.0);\n    col += 0.03*vec3(0.6, 0.0, 0.0) * 10.0*pow((fbmslow( cpos*0.0145 )), 2.0);\n\n\t// stars\n\tcpos = 1500.*rd + vec3(831.0, 321.0, 999.);\n\tcol += stars*fbm(cpos*0.0021);\n\t\n\t\n\t\n\n    // haze\n\n\n    \n  \n\tfragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}