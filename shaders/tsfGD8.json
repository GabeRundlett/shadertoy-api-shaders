{
    "Shader": {
        "info": {
            "date": "1545988510",
            "description": "It should be rather called \"press yourself with the abundance of you\", but the name field is too short for that. Use your mouse to look around.",
            "flags": 2,
            "hasliked": 0,
            "id": "tsfGD8",
            "likes": 6,
            "name": "narcissistic pressure",
            "published": 3,
            "tags": [
                "mouse",
                "camera",
                "endless",
                "loop",
                "rotation",
                "perspective",
                "double",
                "hydraulic",
                "press",
                "narcissistic"
            ],
            "usePreview": 0,
            "username": "morisil",
            "viewed": 1057
        },
        "renderpass": [
            {
                "code": "#define SCALE 2.0\n\n#define SPEED 1.0\n\n#define WOBBLING_SPEED 0.9\n\n#define WOBBLING_IMPACT 0.2\n\n#define AIR_PERSPECTIVE 1.0\n\nmat2 rotate2d(float angle){\n    return mat2(\n        cos(angle), -sin(angle),\n        sin(angle), cos(angle)\n    );\n}\n\nvec2 toCanonicalCoordinates(vec2 pixel) {\n    return (pixel -.5 * iResolution.xy) / iResolution.y;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 point = toCanonicalCoordinates(fragCoord);\n    vec2 mouse = toCanonicalCoordinates(iMouse.xy);\n    point += vec2(0, mouse.y);\n    point *= rotate2d(sin(iTime * WOBBLING_SPEED) * WOBBLING_IMPACT);\n    vec2 trans = vec2(point.x / point.y, 1.0 / point.y);\n    trans *= rotate2d(mouse.x);\n    // double press effect\n    trans *= SCALE + (sin(iTime * SPEED) * SCALE);\n    //vec2 inner = 1.0 - mod(trans + 0.5, 1.0);\n    fragColor = texture(iChannel0, trans);\n    fragColor *= pow(abs(point.y * 2.0), AIR_PERSPECTIVE);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}