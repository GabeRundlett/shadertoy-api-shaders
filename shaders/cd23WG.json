{
    "Shader": {
        "info": {
            "date": "1668079260",
            "description": "complex plot 1-z^n - log(abs(f))",
            "flags": 0,
            "hasliked": 0,
            "id": "cd23WG",
            "likes": 2,
            "name": "complex plot 1-z^n - log(abs(f))",
            "published": 3,
            "tags": [
                "2d",
                "complex"
            ],
            "usePreview": 0,
            "username": "kanayuki",
            "viewed": 200
        },
        "renderpass": [
            {
                "code": "vec2 times(vec2 a, vec2 b)\n{\n    float re = a.x*b.x-a.y*b.y;\n    float im = a.x*b.y+a.y*b.x;\n    return vec2(re, im);\n}\n\nvec2 power(vec2 a, int n)\n{\n    vec2 res = a;\n    for(int i=0; i<n-1; i++) res=times(res,a);\n    return res;    \n}\n\nmat2 rm(float t)\n{\n    return mat2(cos(t),-sin(t),sin(t),cos(t));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y*1.5;\n    uv *=rm(iTime);\n\n    vec2 z = vec2(1,0)-power(uv,5);\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float a = mod(log(length(z)),0.5);\n    col *= a+ 0.25*z.x/length(z)+0.75;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}