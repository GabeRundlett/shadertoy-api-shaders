{
    "Shader": {
        "info": {
            "date": "1572888628",
            "description": "Morphing letters SDF.",
            "flags": 32,
            "hasliked": 0,
            "id": "wd3XW2",
            "likes": 12,
            "name": "fire font morph",
            "published": 3,
            "tags": [
                "font",
                "2tweets",
                "morphing",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 620
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/wscSW2\n// golfing of https://shadertoy.com/view/ltcXzs\nvoid mainImage(out vec4 O, vec2 U) { mi }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage(out vec4 O, vec2 U) { mi }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define C(U) texture( iChannel0, U*2./H/16. + fract( vec2( int(++t), 15-int(t)/16 ) / 16. ) ).w - .5//\n#define mi                                                          \\\n    float H = iResolution.y, t = 3.*iTime;                          \\\n    O =  texelFetch(iChannel1, ivec2(U)-1, 0) * vec4(.99,.98,.97,1) \\\n        + .01 * max(0., 1.-H* mix( C(U), C(U), fract(t) ) ); // variant: smoothstep(0.,1.,fract(t))",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}