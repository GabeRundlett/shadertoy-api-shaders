{
    "Shader": {
        "info": {
            "date": "1684064691",
            "description": "XY Grids",
            "flags": 0,
            "hasliked": 0,
            "id": "dlVGDD",
            "likes": 0,
            "name": "XY Grids_learn",
            "published": 3,
            "tags": [
                "grids"
            ],
            "usePreview": 0,
            "username": "afterlifevj",
            "viewed": 153
        },
        "renderpass": [
            {
                "code": "#define SCALE 6.0\n#define R iResolution.xy\n#define M iMouse\n#define PI 3.14159265358979\n\n// gradient map ( equation, time, hardness, shadow, reciprocals )\nfloat gm(float eq, float t, float h, float s, bool i)\n{\n    float sg = min(abs(eq), 1.0/abs(eq)); // smooth gradient\n    float og = abs(sin(eq*PI-t)); // oscillating gradient\n    if (i) og = min(og, abs(sin(PI/eq+t))); // reciprocals\n    return pow(1.0-og, h)*pow(sg, s);\n}\n\nvoid mainImage(out vec4 RGBA, in vec2 XY)\n{\n    float t = iTime/2.0;\n    float z = (M.z > 0.0) ? SCALE/2.0/(M.y/R.y): SCALE; // zoom\n    float h = 5.0; // hardness\n    float s = 0.25; // shadow\n    bool rc = false; // reciprocals\n    vec3 bg = vec3(0); // black background\n    \n    float aa = 2.0; // anti-aliasing\n    for (float j = 0.0; j < aa; j++)\n    for (float k = 0.0; k < aa; k++)\n    {\n        vec3 c = vec3(0);\n        vec2 o = vec2(j, k)/aa;\n        vec2 sc = (XY-0.5*R+o)/R.y*z; // screen coords\n        float x2 = sc.x*sc.x;\n        float y2 = sc.y*sc.y;\n\n        // square root grids\n        c += gm(x2, t, h, s, rc); // x\n        c += gm(y2, 0.0, h, s, rc); // y\n        c += gm(x2+y2, t, h, s, rc); // addition\n        c += gm(x2-y2, t, h, s, rc); // subtraction\n        c += gm(x2*y2, t, h, s, rc); // multiplication\n        c += gm(x2/y2, t, h, s, rc); // division\n        \n        bg += c;\n    }\n    bg /= aa*aa;\n    \n    bg *= sqrt(bg)*0.5; // brightness & contrast\n    RGBA = vec4(bg, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}