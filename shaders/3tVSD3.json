{
    "Shader": {
        "info": {
            "date": "1588323618",
            "description": "Solar simulation system with twinkling stars",
            "flags": 0,
            "hasliked": 0,
            "id": "3tVSD3",
            "likes": 1,
            "name": "Shader6_Dela Vega",
            "published": 3,
            "tags": [
                "midterms"
            ],
            "usePreview": 0,
            "username": "zerotojiro",
            "viewed": 337
        },
        "renderpass": [
            {
                "code": "float circle(vec2 uv, float radius, float blur,  vec2 pos)\n{\n     \n    float d = distance(pos,uv);\n    float value = smoothstep(radius, radius + blur, d);\n    \n    return value; \n}\n\nmat2 rotate2d(float angle)\n{\n    return mat2(cos(angle),-sin(angle), sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tfloat ratio = iResolution.x/iResolution.y;\n    \n    uv.x *= ratio;\n    \n    vec2 center = vec2(.5*ratio, .5);\n    vec2 mercPos = vec2(.5*ratio, .65);\n    vec2 venPos = vec2(.5*ratio, .75);\n    vec2 eartPos = vec2(.5*ratio, .88);\n    vec2 moonPos = vec2(.5*ratio, .95);\n    vec2 marsPos = vec2(.5*ratio, 1.1);\n    vec2 starPos1 = vec2(.35*ratio,.65);\n    vec2 starPos2 = vec2(.15*ratio,.45);\n    vec2 starPos3 = vec2(.5*ratio,.2);\n    vec2 starPos4 = vec2(.7*ratio,.8);\n    vec2 starPos5 = vec2(.9*ratio,.3);\n    \n    vec2 uv1 = uv;\n    vec2 uv2 = uv;\n    vec2 uv3 = uv;\n    vec2 uv5 = uv;\n    \n    float sun = circle(uv, .08, .04, center);\n    float star = circle(uv,.0015*(sin(iTime*5.)+0.5),0.005, starPos1);\n    float star2 = circle(uv,.0015*(sin(iTime*7.)+0.5),0.005, starPos2);\n    float star3 = circle(uv,.0015*(sin(iTime*6.)+0.5),0.005, starPos3);\n    float star4 = circle(uv,.0015*(sin(iTime*8.)+0.5),0.005, starPos4);\n    float star5 = circle(uv,.0015*(sin(iTime*9.)+0.5),0.005, starPos5);\n    \n    uv1 -= center;\n    uv1 *= rotate2d((iTime)*2.);\n    uv1 += center;\n    \n    uv2 -= center;\n    uv2 *= rotate2d((iTime)*1.5);\n    uv2 += center;\n    \n    uv3 -= center;\n    uv3 *= rotate2d((iTime)*1.);\n    uv3 += center;\n    \n    vec2 uv4 = uv3;\n    \n    uv5 -= center;\n    uv5 *= rotate2d((iTime)*1.2);\n    uv5 += center;\n    \n    uv4 -= eartPos;\n    uv4 *= rotate2d((iTime)*3.);\n    uv4 += eartPos;\n\n    \n    float merc = circle(uv1, .008, .01, mercPos);\n    float ven = circle(uv2, .015, .01, venPos);\n    float earth = circle(uv3, .03, .01, eartPos);\n    float moon = circle(uv4, .001, .01, moonPos);\n    float mars = circle(uv5, .035, .01, marsPos);\n    \n    vec3 col = mix(vec3(1., 1., 0.), vec3(0.), sun);\n    col += mix(vec3(1.,1.,1.),vec3(0,0,0),star);\n    col += mix(vec3(1.,1.,1.),vec3(0,0,0),star2);\n    col += mix(vec3(1.,1.,1.),vec3(0,0,0),star3);\n    col += mix(vec3(1.,1.,1.),vec3(0,0,0),star4);\n    col += mix(vec3(1.,1.,1.),vec3(0,0,0),star5);\n    col = mix(vec3(.949, .7176, .5529), col, merc);\n    col = mix(vec3(.949, .5529, .6235), col, ven);\n    col = mix(vec3(0., .0, 1.), col, earth);\n    col = mix(vec3(.9), col, moon);\n    col = mix(vec3(1., 0., 0.), col, mars);\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}