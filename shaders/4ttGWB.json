{
    "Shader": {
        "info": {
            "date": "1471339740",
            "description": "base is almost the same as https://www.shadertoy.com/view/XtdGRs",
            "flags": 0,
            "hasliked": 0,
            "id": "4ttGWB",
            "likes": 21,
            "name": "Crash Effect",
            "published": 3,
            "tags": [
                "effect"
            ],
            "usePreview": 0,
            "username": "phi16",
            "viewed": 999
        },
        "renderpass": [
            {
                "code": "float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 pattern(vec2 p){ // (distance,region)\n    p *= 3.;\n    p += 0.5;\n    float d = 1000000.;\n    float t = iTime;\n    float e = 0.1;// random seed\n    for(int i=0;i<20;i++){\n        float w = pow(2.,float(i));\n        float f,r;\n\t\tvec2 v;\n        \n        f = rand(vec2(0,float(i))+e);\n        f *= f;\n        r = rand(vec2(1,float(i))+e) * 3.141592 * 2.;\n        v = vec2(cos(r),sin(r));\n        if(dot(p,v) < f)e+=w;\n        else e-=w;\n       \tfloat u = abs(dot(p,v)-f);\n        d = min(u,d);\n    }\n    return vec2(d,e);\n}\n\nvec2 normal(vec2 p){\n    vec2 e = vec2(0.0001,0);\n    return normalize(vec2(\n        pattern(p+e.xy).x - pattern(p-e.xy).x,\n        pattern(p+e.yx).x - pattern(p-e.yx).x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 R = iResolution.xy; \n    vec2 def = fragCoord / R;\n\tvec2 uv = (2.*fragCoord.xy - R)/R.y;\n    \n    vec2 res = pattern(uv);\n    float dist = res.x<0.2?1.0-5.0*res.x:0.0;\n    vec2 n2 = normal(uv);\n    vec3 n = normalize(vec3(n2*dist,2.0));\n    vec2 diff = vec2(rand(vec2(0.,res.y)),rand(vec2(1.,res.y))) * 2.0 - 1.0;\n    diff /= 6.0;\n    vec3 point = vec3(vec2(uv.x,-uv.y) + diff,0.9);\n    float r1 = -0.3;\n    float r2 = 0.9 + iTime/10.0;\n    point *= mat3(1,0,0,0,cos(r1),sin(r1),0,-sin(r1),cos(r1));\n    point *= mat3(cos(r2),0,sin(r2),0,1,0,-sin(r2),0,cos(r2));\n    vec3 u = texture(iChannel0,point).xyz;\n    u *= pow(1.-dist,0.1);\n    fragColor = vec4(u,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 22,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}