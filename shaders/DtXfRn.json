{
    "Shader": {
        "info": {
            "date": "1692474231",
            "description": "Three colored rings",
            "flags": 0,
            "hasliked": 0,
            "id": "DtXfRn",
            "likes": 0,
            "name": "Three colored rings",
            "published": 3,
            "tags": [
                "colors"
            ],
            "usePreview": 0,
            "username": "lennon27",
            "viewed": 130
        },
        "renderpass": [
            {
                "code": "vec3 getCirclePixel(vec3 circleColor, float circleSize, float circleWidth, vec2 fragCoord)\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    float distance = length(uv);\n    float circleDistance = abs(distance - circleSize);\n    \n    vec3 bgColor = vec3(1.0, 1.0, 1.0);\n    vec3 color = circleColor + bgColor * circleDistance;\n    color.x = step(circleWidth, color.x);\n    color.y = step(circleWidth, color.y);\n    color.z = step(circleWidth, color.z);\n    \n    return color;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec3 blueCircle = getCirclePixel(vec3(0.0, 0.0, 1.0), 0.5, 0.075, fragCoord + vec2(130, 30));\n    vec3 redCircle = getCirclePixel(vec3(1.0, 0.0, 0.0), 0.5, 0.075, fragCoord + vec2(0, -20));\n    vec3 greenCircle = getCirclePixel(vec3(0.0, 1.0, 0.0), 0.5, 0.075, fragCoord + vec2(-130, 30));\n    \n    vec3 color = vec3(1.0, 1.0, 1.0);\n    if (color == vec3(1.0, 1.0, 1.0)) color *= blueCircle;\n    if (color == vec3(1.0, 1.0, 1.0)) color *= redCircle;\n    if (color == vec3(1.0, 1.0, 1.0)) color *= greenCircle;\n    \n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}