{
    "Shader": {
        "info": {
            "date": "1698071260",
            "description": "watercolour moss thingy i made for a backround",
            "flags": 0,
            "hasliked": 0,
            "id": "DsVfRm",
            "likes": 2,
            "name": "watercolour Moss",
            "published": 3,
            "tags": [
                "simplex"
            ],
            "usePreview": 0,
            "username": "gustav",
            "viewed": 171
        },
        "renderpass": [
            {
                "code": "const float PERLIN_SEED = 0.;\n\nfloat random(vec2 xy) {\n    return fract(sin(dot(xy, vec2(12.9898 - PERLIN_SEED, 78.233 + PERLIN_SEED))) * 43758.5453 + PERLIN_SEED);\n}\n\nfloat interpolate(float a, float b, float x) {\n    return mix(a, b, (1.0 - cos(x * 3.1415927)) * 0.5);\n}\n\n\nvec2 hash(vec2 p) {\n    p = vec2(dot(p, vec2(127.1, 311.7)), dot(p, vec2(269.5, 183.3)));\n    return -1.0 + 2.0 * fract(sin(p) * 43758.5453123);\n}\n\nfloat noise(in vec2 p) {\n    const float K1 = 0.366025404;\n    const float K2 = 0.211324865;\n    vec2 i = floor(p + (p.x + p.y) * K1);\n    vec2 a = p - i + (i.x + i.y) * K2;\n    float m = step(a.y, a.x);\n    vec2 o = vec2(m, 1.0 - m);\n    vec2 b = a - o + K2;\n    vec2 c = a - 1.0 + 2.0 * K2;\n    vec3 h = max(0.5 - vec3(dot(a, a), dot(b, b), dot(c, c)), 0.0);\n    vec3 n = h * h * h * h * vec3(dot(a, hash(i + 0.0)), dot(b, hash(i + o)), dot(c, hash(i + 1.0)));\n    return dot(n, vec3(70.0));\n}\n\n\nfloat perlinNoise(vec2 uv) {\n    \n    float f = 0.0;\n    for (int i = 0; i < 8; i++) {\n        f += pow(0.5, float(i)) * noise(uv);\n        mat2 m = mat2(1.6, 1.2, -1.2, 1.6);\n        uv = m * uv;\n    }\n    return 0.5 + 0.5 * f;\n}\n\n\n\nconst mat4 FOREGROUND_COLORS = mat4(\n    34.0, 34.0, 42.0, 256.0,\n    232.0, 141.0, 122.0, 256.0,\n    90.0, 188.0, 94.0, 256.0,\n    161.0, 90.0, 188.0, 256.0\n) / 256.0;\n\nconst vec4 BACKGROUND_COLOR = vec4(0., 255., .0, 255.) / 256.0;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 p = (fragCoord.xy / iResolution.xy) * 5.3;\n    float seed = 1.0;\n\n    float r = perlinNoise(p + iTime * 0.03);\n    vec4 fgColor = FOREGROUND_COLORS[0];\n\n    float noiseScale = 0.054 + 0.075 * mod(seed, 3.0);\n    float numLayers = 2.0 + 2.0 * mod(seed, 5.0);\n    seed *= numLayers;\n    float v = 0.0;\n\n    for (float i = 0.0; i < numLayers; i++) {\n        v += step(0.7, noiseScale * perlinNoise(p + vec2(i + seed)) + r) / numLayers;\n        noiseScale += 0.5;\n    }\n\n    vec4 finalColor = mix(FOREGROUND_COLORS[0] * 1.6, fgColor, v);\n\n    seed = 8.0;\n    r = perlinNoise(p + 20.0 + iTime * 0.03);\n    fgColor = FOREGROUND_COLORS[0];\n\n    noiseScale = 0.054 + 0.075 * mod(seed, 3.0);\n    numLayers = 8.0 + 2.0 * mod(seed, 5.0);\n    seed *= numLayers;\n    v = 0.0;\n\n    for (float i = 0.0; i < numLayers; i++) {\n        v += step(0.3, noiseScale * perlinNoise(p + vec2(i + seed)) + r) / numLayers;\n        noiseScale += 0.05;\n    }\n\n    fragColor = mix(BACKGROUND_COLOR, finalColor, v);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}