{
    "Shader": {
        "info": {
            "date": "1587308724",
            "description": "based on the [url=https://www.shadertoy.com/view/3d2cRV]Shader[/url] of notargs\n\nvariation of [url=https://www.shadertoy.com/view/WdSyWV]Web 1[/url]\n\nalso better in fullscreen",
            "flags": 0,
            "hasliked": 0,
            "id": "3djyWG",
            "likes": 9,
            "name": "Web 2",
            "published": 3,
            "tags": [
                "web",
                "trabeculum"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 478
        },
        "renderpass": [
            {
                "code": "// based on the shader of notargs\n// https://www.shadertoy.com/view/3d2cRV\n\n// Web 1 : https://www.shadertoy.com/view/WdSyWV\n// Web 2 : https://www.shadertoy.com/view/3djyWG#\n\n// final\nconst vec4 colorBalance = vec4(0.3,0.7,0.5,0.3);\nconst vec3 uColor = vec3(0.5,1,0);\nconst vec3 uFog = vec3(0.005,0.001,0.0035);\nconst vec3 uLightDir = vec3(-1,-1,1);\n\n// shape\nconst vec3 uRatio = vec3(-0.37762,0.36364,0);\nconst float uRot = 0.1;\nconst vec2 uvOffset = vec2(2.69231,1.71329);\n\nfloat camZ = 0.0;\n\nvec2 path(float t)\n{\n\treturn vec2(cos(t * uRot) * 0.7, \n                sin(t * uRot) * 0.5) * uvOffset;\t\n}\n\nfloat map(vec3 p)\n{\n\tfloat a = p.z * uRot;\n    p.xy *= mat2(cos(a),sin(a),-sin(a),cos(a));\n    float th = mix(0.001, 0.06, cos(camZ - p.z)*0.5+0.5);\n    return th-length(\n        sin(p.xyz)*uRatio.x+\n        sin(p.zxy)*uRatio.y+\n        sin(p.yzx)*uRatio.z);\n}\n\nvec3 nor(vec3 p, float prec)\n{\n\tvec3 e = vec3(prec,0,0);\n\treturn normalize(vec3(\n\t\tmap(p+e)-map(p-e),\n\t\tmap(p+e.yxz)-map(p-e.yxz),\n\t\tmap(p+e.zyx)-map(p-e.zyx)));\n}\n\nvoid mainImage(out vec4 e, in vec2 v)\n{\n    vec3 rd = normalize(.5 - vec3(v,1)/iResolution.y);\n    camZ = iTime * -5.0;\n\tvec3 ro = vec3(uvOffset + path(camZ),camZ);\n\tvec3 p = vec3(0);\n\t\n\tfloat d = 0.0, s = d;\n    for(int i=0;i<250;i++)\n    {\n\t\tif (abs(s)<d*d*1e-6) break;\n\t\td += s = map(p);\n\t\tp = ro + rd * d;\n    }\n\t\n\tvec3 ld = normalize(uLightDir);\n\tvec3 n = nor(p, 0.01);\n\tfloat diff = max(dot(n,-ld),0.0);\n\tfloat spec = max(dot(reflect(ld,n), rd),0.0);\n\tvec3 col = sin(d*uColor)*0.5+0.5;\n\tvec3 fog = exp(-uFog*d*d);\n    vec3 c = \n\t\tdiff * colorBalance.x * fog.x + \n\t\tcol * colorBalance.y * fog.y + \n\t\tsqrt(spec * colorBalance.z * 10.0) * colorBalance.w * fog.z;\n\t\n\te = vec4(c, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}