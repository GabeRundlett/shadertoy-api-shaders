{
    "Shader": {
        "info": {
            "date": "1514748470",
            "description": "A friend of mine designed this function years ago, and I thought it would be fun to make a shader to explore it in real-time. You can read more about it here:\nhttp://www.traipse.com/poster/",
            "flags": 0,
            "hasliked": 0,
            "id": "MtBBRW",
            "likes": 1,
            "name": "Drew's Poster",
            "published": 3,
            "tags": [
                "procedural",
                "2d"
            ],
            "usePreview": 0,
            "username": "TheHead",
            "viewed": 268
        },
        "renderpass": [
            {
                "code": "#define M_PI 3.14159266\n\n#define ROTATIONS_PER_SECOND (1.0 / 37.345)\n\n#define ZOOMS_PER_SECOND (1.0 / 23.384)\n#define MAX_ZOOM 5.0\n#define MIN_ZOOM 0.8\n\n#define DX_PER_SECOND (1.0 / 25.894)\n#define DY_PER_SECOND (1.0 / 17.127)\n#define MAX_DX 0.3\n#define MAX_DY 0.3\n\nfloat swirl(in vec2 p, in int m, in float s)\n{\n    float d;\n    \n    if (p == vec2(0.0,0.0)) {\n        return 0.0;\n    }\n    \n    d = length(p);\n\n    return cos(float(m)*(atan(p.y, p.x) + s*d))*0.5 + 0.5;\n}\n\nfloat sink(in vec2 p, in float r)\n{\n    float d = length(p);\n    \n    d = d/r - 1.0;\n    d = max(d, 0.0);\n\n    return 1.0 - 1.0/exp(d);\n}\n\nfloat ripple(in vec2 p, in float r)\n{\n    float d = length(p);\n\n    return cos(d/r*M_PI)*0.5 + 0.5;\n}\n\nvec2 bulge(in vec2 p, in vec2 c, float r, float e)\n{\n    vec2 v;\n    float d;\n    \n    v = p - c;\n    d = length(v);\n    if (d == 0.0) {\n        return p;\n    }\n    \n    v /= d;\n    \n    d = pow(d/r, e)*r;\n    return c + v * d;\n}\n\nfloat fn(in vec2 p)\n{\n    float f;\n    float a;\n    vec2 d;\n    \n    p.y = 1.0 - p.y;\n    \n    d = p;\n    \n    p = bulge(p, vec2(0.5, 0.7), 0.6, 3.0);\n    \n    a = 0.1;\n    f = ripple(d - vec2(0.4, 0.4), a)\n        + ripple(d - vec2(0.8, 0.1), a)\n        + ripple(d - vec2(0.9, 0.3), a)\n        + ripple(d - vec2(0.3, 0.8), a)\n        + ripple(d - vec2(0.7, 0.1), a)\n        + ripple(d - vec2(0.4, 0.5), a);\n    f /= 6.0;\n    \n    a *= sink(d - vec2(0.5, 0.7), 0.4);\n    if (a > 0.0) {\n        p.x += cos(f*2.0*M_PI*2.0)*a;\n        p.y += sin(f*2.0*M_PI*2.0)*a;\n    }\n    \n    a = 0.01;\n    f = ripple(p - vec2(0.2, 0.4), a)\n        + ripple(p - vec2(0.4, 0.2), a)\n        + ripple(p - vec2(0.6, 0.8), a)\n        + ripple(p - vec2(0.1, 0.2), a)\n        + ripple(p - vec2(0.9, 0.2), a)\n        + ripple(p - vec2(0.2, 0.3), a);\n    f /= 6.0;\n    \n    p.x += cos(f*2.0*M_PI*2.0)*a;\n    p.y += sin(f*2.0*M_PI*2.0)*a;\n    \n    f = pow(swirl(p - vec2(0.5, 0.7), 3, 12.0), 0.7);\n    f *= sink(p - vec2(0.5, 0.7), 0.005);\n\n    return f;\n}\n\nvec2 rotate(in vec2 p, in vec2 origin, in float rad)\n{\n    float s = sin(rad);\n    float c = cos(rad);\n    \n    mat2 m = mat2(c, -s, s, c);\n\n    return m * (p - origin) + origin;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord / iResolution.y;\n    uv.x -= iResolution.x / (4.0 * iResolution.y);\n    \n    // Rotate around the center of interest at the desired rate.\n    vec2 rotateAround = vec2(0.5, 0.5);\n    uv = rotate(uv, rotateAround, iTime * 2.0 * M_PI * ROTATIONS_PER_SECOND);\n    \n    // Get a pair of sine waves with the desired periods and ranges for translation.\n    vec2 d;\n    d.x = sin(iTime * 2.0 * M_PI * DX_PER_SECOND) * MAX_DX;\n    d.y = sin(iTime * 2.0 * M_PI * DY_PER_SECOND) * MAX_DY;\n    uv += d;\n    \n    // Get a sine wave with the desired period on the range [0,1], starting zoomed out.\n    float zoom = (-cos(iTime * 2.0 * M_PI * ZOOMS_PER_SECOND) + 1.0) / 2.0;\n    uv /= mix(MIN_ZOOM, MAX_ZOOM, zoom);\n    \n    float f = fn(uv);\n    \n    fragColor = vec4(f, f, f, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}