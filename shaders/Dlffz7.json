{
    "Shader": {
        "info": {
            "date": "1692728931",
            "description": "Just a simple fractal design",
            "flags": 0,
            "hasliked": 0,
            "id": "Dlffz7",
            "likes": 1,
            "name": "Greenosys",
            "published": 3,
            "tags": [
                "fractal",
                "fantasy"
            ],
            "usePreview": 0,
            "username": "Jayzeen",
            "viewed": 183
        },
        "renderpass": [
            {
                "code": "vec3 palette( float t ) {\n    vec3 a = vec3(0.341,0.867,1.000);\n    vec3 b = vec3(0.255,0.439,0.984);\n    vec3 c = vec3(1.000,0.757,0.659);\n    vec3 d = vec3(0.333,0.925,0.969);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i=0.0; i<4.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n    \n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0)  + i*.4 + iTime*.2);\n\n        d = sin(d * 10. + iTime)/4.;\n        d = abs(d);\n\n        d = 0.01 / d ;\n\n        finalColor += col * d;\n    \n    }\n    \n     // Output to screen\n    fragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}