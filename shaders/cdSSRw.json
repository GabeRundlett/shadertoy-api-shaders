{
    "Shader": {
        "info": {
            "date": "1670011249",
            "description": "A stranger symmetry.\nSome trippy places there with the mouse.. \nadded mouse and color action - tmm",
            "flags": 0,
            "hasliked": 0,
            "id": "cdSSRw",
            "likes": 1,
            "name": "Interactive Kaleidoscope 2",
            "published": 3,
            "tags": [
                "kaleidoscope"
            ],
            "usePreview": 0,
            "username": "timmaffett",
            "viewed": 225
        },
        "renderpass": [
            {
                "code": "// Fork of \"Simple Kaleidoscope 2\" by TekF. https://shadertoy.com/view/Xll3Wj\n// 2022-12-02 19:47:33\n\nconst float tau = 6.2831853;\n    \n  \nvec4 hsb2rgb( in vec4 c )\n{\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return vec4(c.z * mix( vec3(1.0), rgb, c.y), 1.);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy-.5*iResolution.xy) * 7.2 / iResolution.y;\n    \n vec2 mouse = (iMouse.xy == vec2(0.)) ? vec2(1.0) : iMouse.xy/iResolution.xy;\n    mouse.x = clamp(mouse.x, 0.25, 0.75 );\n    mouse.y = clamp(mouse.y, 0.25, 0.75 );\n    float r = 1.0 * 1./fract(cos(iTime/10.0/41.*31.));\n    r = clamp( r, 0.5, 1.0 );\n    float a = iTime*.1;\n    float c = cos(a)*r * clamp(mouse.x/mouse.y, 0.4, 1.0);\n    float s = sin(a)*r * clamp(mouse.y/mouse.x, 0.4, 1.0);\n    for ( int i=0; i<10; i++ )\n    {\n    \t//uv = abs(uv);\n        \n        // higher period symmetry\n        float t = atan(uv.x,uv.y);\n        const float q = 7. / tau;\n\t\tt *= q;\n        t = abs(fract(t*.5+.5)*2.0-1.0);\n        t /= q;\n        uv = length(uv)*vec2(sin(t),cos(t));\n        \n        uv -= .7;\n        uv = uv*c + s*uv.yx*vec2(1,-1);\n    }\n    vec4 ff = hsb2rgb( vec4(length(uv)*c*s*a, 1., 1., 1.) );\n    vec4 fc = .5+.5*sin(iTime+vec4(13,17,23,1)*texture( iChannel0, uv*vec2(1,-1)+.5, -1.0 ));\n     fragColor = mix( ff, fc, 0.7 );\n}\n\n/*void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy-.5*iResolution.xy) * 5. / iResolution.y;\n\n    float r = 1.0;\n    float a = iTime*.1;\n    float c = cos(a)*r;\n    float s = sin(a)*r;\n    for ( int i=0; i<32; i++ )\n    {\n    \tuv = abs(uv);\n        uv -= exp(float(-2*i))+.1;\n        uv = uv*c + s*uv.yx*vec2(1,-1);\n    }\n        \n    fragColor = .5+.5*sin(iTime+vec4(13,17,23,1)*texture( iChannel0, clamp( uv*vec2(1,-1)+.5, .0, 1. ), -1.0 ));\n}*/",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}