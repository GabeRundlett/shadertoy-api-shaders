{
    "Shader": {
        "info": {
            "date": "1702691634",
            "description": "2d perspective-02",
            "flags": 0,
            "hasliked": 0,
            "id": "XffGR8",
            "likes": 16,
            "name": "2d perspective-02",
            "published": 3,
            "tags": [
                "2dperspective02"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 183
        },
        "renderpass": [
            {
                "code": "//por jorge2017a2\n//2d perspective-02\n//--15-dic-2023-\n//\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(7.0*antialiasing(0.5),b,d)\n#define PI     3.14159265\n\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}    \n\nvec3 DrawFigBordev2(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj+0.05,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.05,0.0));\n  return colOut;\n}\n\n///oneshade    \nvec2 Rotate(in vec2 p, in vec2 o, in float r) \n{   float c = cos(r), s = sin(r); return (p - o) * mat2(c, -s, s, c) + o; }\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nfloat tau = atan(1.0) * 8.0;\nvec2 opAngRep( vec2 p, float a )\n{\tvec2 polar = vec2(atan(p.y, p.x), length(p.xy));\n    polar.x = mod(polar.x + a / 2.0, a) - a / 2.0;\n    return vec2(polar.y * vec2(cos(polar.x),sin(polar.x)));\n}\n\nvec2 opAngRepFull( vec2 p, float numItem )\n{   vec2 rep2 = opAngRep(p, tau / numItem);  return rep2; }\n\nvec3 circulos(vec2 p, vec3 colOut,vec3 colIn ,float z)\n{float df=9999.9;\n    int x, y;\n    int xmax, ymax;\n    xmax=5;\n    ymax=5;\n    float d1,d2,d3;\n    \n    p=vec2(p.x/z, p.y/z);\n    d1=sdCircle(p, 1.0 );\n    d2=sdCircle(p, 1.5 );\n    d3=sdCircle(p, 2.0 );\n    vec2 p2=opAngRepFull( p, 5.);\n    vec2 p3=opAngRepFull( p, 8.);\n    vec2 p4=opAngRepFull( p, 8.);\n    vec2 tmp= Rotate(p, vec2(0.0), radians(iTime*30.0));\n    vec2 p5=opAngRepFull(tmp, 12.);\n \n    float d1a= sdBox(p2-vec2(0.5,0.0), vec2(0.2,0.5) );\n    float d2a= sdBox(p3-vec2(0.5+2.0*sin(iTime),0.2), vec2(0.4,0.2) );\n    float d3a= sdBox(p4-vec2(1.0+2.0*abs(sin(iTime-5.0)),0.2), vec2(0.3,0.5) );\n    float d4a= sdBox(p5-vec2(2.5,0.2), vec2(0.6,0.15) );\n    \n    colOut=DrawFigBordev2(vec3(0.75,0.0,0.2),colOut, d3);\n    colOut=DrawFigBordev2(vec3(0.0,0.75,0.2),colOut, d3a);\n    colOut=DrawFigBordev2(vec3(0.5,0.5,0.0),colOut, d4a);\n    colOut=DrawFigBordev2(vec3(0.5,0.1,0.2),colOut, d2);\n    colOut=DrawFigBordev2(colIn,colOut, d1);\n    colOut=DrawFigBordev2(vec3(0.3,0.5,0.2),colOut, d2a);\n    colOut=DrawFigBordev2(vec3(0.0,0.7,0.2),colOut, d1a);\n    return colOut;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   vec2 uv = fragCoord.xy/iResolution.xy;\n    uv.xy = vec2(uv.x*2.-1., uv.y*2.-1.);\n    uv.x *= iResolution.x/iResolution.y;\n    float esc=7.0;\n    uv*=esc;\n    vec2 uv0=uv;\n    vec3 col= vec3(0.2);\n    col= circulos(uv,col,vec3(1.0,0.0,0.0),2.0);\n    col= circulos(uv*3.0-vec2(20.0,0.0),col,vec3(1.0,0.0,0.5),2.2);\n    col= circulos(uv*3.0-vec2(-20.0,0.0),col,vec3(1.0,0.2,0.0),2.2);    \n    col=pow(col,  vec3(0.554545));\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}