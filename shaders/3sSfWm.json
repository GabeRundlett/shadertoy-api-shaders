{
    "Shader": {
        "info": {
            "date": "1590132187",
            "description": "Derived from The Book Of Shaders (https://thebookofshaders.com/07/), animated with a cosine function.\n\nCreated for school : R.P",
            "flags": 0,
            "hasliked": 0,
            "id": "3sSfWm",
            "likes": 2,
            "name": "Distance wave field",
            "published": 3,
            "tags": [
                "wave",
                "circle",
                "distance"
            ],
            "usePreview": 0,
            "username": "LowSpecCorgi",
            "viewed": 352
        },
        "renderpass": [
            {
                "code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 st = fragCoord.xy/iResolution.xy;\n  st.x *= iResolution.x/iResolution.y;\n  vec3 color = vec3(0.0);\n  float d = 0.0;\n\n  // Remap the space to -1. to 1.\n  st = st *2.-1.;\n\n  // Make the distance field\n  d = length( abs(st)-.3 );\n  //d = length( min(abs(st)-.3,0.) );\n  //d = length( max(abs(st)-.3,0.) );\n\n  // Visualize the distance field\n  fragColor = vec4(vec3(fract(d*cos(iTime)*cos(iMouse)*20.0)),1.0);\n\n  // Drawing with the distance field\n  // gl_FragColor = vec4(vec3( step(.3,d) ),1.0);\n  // gl_FragColor = vec4(vec3( step(.3,d) * step(d,.4)),1.0);\n  // gl_FragColor = vec4(vec3( smoothstep(.3,.4,d)* smoothstep(.6,.5,d)) ,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}