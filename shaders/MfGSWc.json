{
    "Shader": {
        "info": {
            "date": "1715849820",
            "description": "Wave",
            "flags": 0,
            "hasliked": 0,
            "id": "MfGSWc",
            "likes": 4,
            "name": "Fractal Wave",
            "published": 3,
            "tags": [
                "wave"
            ],
            "usePreview": 0,
            "username": "haiyoucuv",
            "viewed": 190
        },
        "renderpass": [
            {
                "code": "float Hash(vec2 uv) {\n    float h = dot(uv, vec2(112.1, 411.6));\n    return fract(sin(h) * 33262.2616813);\n}\n\nfloat Noise(vec2 uv) {\n\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    vec2 alpha = f * f * (3.0 - 2.0 * f);\n\n    float a = Hash(i);\n    float b = Hash(i + vec2(1.0, 0.0));\n    float c = Hash(i + vec2(0.0, 1.0));\n    float d = Hash(i + vec2(1.0, 1.0));\n\n    return -1.0 + 2.0 * mix(\n        mix(a, b, alpha.x),\n        mix(c, d, alpha.x),\n        alpha.y\n    );\n}\n\nfloat Wave(vec2 uv, float strength) {\n    uv += Noise(uv);\n    vec2 sv = 1.0 - abs(sin(uv));\n    vec2 cv = abs(cos(uv));\n    sv = mix(sv, cv, sv);\n\n    return pow(1.0 - pow(sv.x * sv.y, 0.65), strength);\n}\n\nfloat Fractal(vec2 uv, float time, float freq, float amp, float strength) {\n    mat2 octave = mat2(\n        1.6, 1.2,\n        -1.2, 1.\n    );\n\n    uv.x *= 0.75;\n\n    float d, h = 0.0;\n\n    for (int i = 0; i < 5; i++) {\n        d = Wave((uv + time) * freq, strength);\n        d += Wave((uv - time) * freq, strength);\n        h += d * amp;\n        uv = octave * uv;\n        freq *= 1.9;\n        amp *= 0.22;\n        strength = mix(strength, 1.0, 0.2);\n    }\n\n    return h;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    uv *= 10.0;\n\n    float h = Fractal(uv, iTime, 0.2, 0.45, 5.0);\n\n    fragColor = vec4(h, h, h, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}