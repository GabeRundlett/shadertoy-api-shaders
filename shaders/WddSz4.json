{
    "Shader": {
        "info": {
            "date": "1571611960",
            "description": "That doesn't go there",
            "flags": 0,
            "hasliked": 0,
            "id": "WddSz4",
            "likes": 3,
            "name": "Shadertober 18 - Misfit",
            "published": 3,
            "tags": [
                "inktober",
                "shadertober",
                "misfit",
                "backwardscaptain"
            ],
            "usePreview": 0,
            "username": "BackwardsCap",
            "viewed": 323
        },
        "renderpass": [
            {
                "code": "vec2 map(vec3 p)\n{\n    vec3 rp = p;\n    rp.x-=10.;\n    p.x+=10.;\n    vec3 bp = p;\n    p.xz*=rot(iTime);\n   \tbp.xz*=rot(iTime);\n    float w =box(p,vec3(5,.5,5));\n    float s = sphere(p,3.);\n    w=max(w,-s);\n    float yd = 10.;\n    float t =cos(iTime*2.)*yd;    \n    float dur = 3.143;\n    float tf = (iTime*2.)/dur;\n    float ti = floor(tf);\n    float tti = clamp(fract(tf)*1.2,.5,.6)*10.;\n\tbp.y-=t;\n    bp.xz*=rot(-(ti+tti)*PI/4.);\n    bp.xy*=rot(-(ti+tti)*PI/4.);\n    \n    float b = box(bp,vec3(2.5));\n    float bs = sphere(bp,3.);\n    b=mix(b,bs,1.-abs(t)/yd);\n    rp.xz*=rot(-iTime);\n    float b2 = box(rp,vec3(5,.5,5));\n    float s2 = sphere(rp,3.);\n    float ct = (1.+cos(iTime*4.))/2.;\n    vec3 rrp = rp;\n    rrp.xz*=rot((ti+tti)*PI/4.);\n    s2=mix(s2,box(rrp,vec3(3)),ct);\n    b2=max(b2,-s2);\n    rp.y-=3.+abs(t/1.5);\n    tti = clamp(fract(tf)*1.2,0.,.1)*10.;\n    rp.xz*=rot((ti+tti)*PI/4.);\n    \n    float b3 = box(rp,vec3(3));\n    float m = 0.0;\n    float r = min(w,b);\n    r=min(r,b2);\n    r=min(r,b3);\n    if(r==b||r==b3)m=1.;\n    return vec2(r,m);\n}\n\nvec2 ray(vec3 ro, vec3 rd)\n{\n    float t = 0., m=0.;\n    for(int i=0;i<128;i++)\n    {\n        vec3 p = ro+rd*t;\n        vec2 s = map(p);\n        m=s.y;\n        if(s.x<0.00001)break;\n        t+=s.x;\n        if(t>MAX_DIST){t=-1.;break;}\n    }\n    return vec2(t,m);\n}\n\nvec3 normal(vec3 p)\n{\n    vec2 e = vec2(0.00005,0);\n    return normalize(vec3(\n        map(p+e.xyy).x-map(p-e.xyy).x,\n        map(p+e.yxy).x-map(p-e.yxy).x,\n        map(p+e.yyx).x-map(p-e.yyx).x\n        ));\n}\n\nvoid mainImage( out vec4 c, in vec2 f )\n{\n    vec2 uv = (2.*f-iResolution.xy)/iResolution.y;\n    \n    vec3 ro = vec3(0,10,-30);\n    vec3 ta = vec3(0,1,0);\n    vec3 cf = normalize(ta-ro);\n    vec3 cu = normalize(cross(cf,vec3(0,1,0)));\n    vec3 cr = normalize(cross(cu,cf));\n    vec3 rd = normalize(uv.x*cu+uv.y*cr+2.*cf);\n    \n    vec2 r = ray(ro,rd);\n    \n    vec3 col = vec3(1);\n    \n    if(r.x>0.)\n    {\n        vec3 mate = vec3(.5);\n        if(r.y>.5)mate=vec3(3.);\n        vec3 p = ro+rd*r.x;\n        vec3 n = normal(p);\n        vec3 sun = normalize(vec3(0.,.5,-.5));\n        float dif = clamp(dot(n,sun),0.,1.);\n        float sky = clamp(dot(n,vec3(0,1,0)),0.,1.);\n        float bou = clamp(dot(n,vec3(0,-1,0)),0.,1.);\n        col =mate* vec3(.1,.2,.3)*dif;\n        col+=mate*vec3(0.2,.3,.5)*sky;\n        col+=bou*.5;\n        \n    }\n    c.rgb=col;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define MAX_DIST 100.0\n#define PI 3.1415927\n\nmat2 rot(float x)\n{\n    float s = sin(x);\n    float c = cos(x);\n    return mat2(c,-s,s,c);\n}\n\nfloat box(vec3 p, vec3 d)\n{\n  vec3 q = abs(p) - d;\n  return min(max(q.x,max(q.y,q.z)),0.0)+length(max(q,0.0));\n}\n\nfloat sphere(vec3 p, float d)\n{\n    return length(p)-d;\n}\n\nfloat sphere(vec3 p, float d, vec3 s)\n{\n    p/=s;\n    return sphere(p,d);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}