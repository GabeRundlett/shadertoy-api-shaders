{
    "Shader": {
        "info": {
            "date": "1685455859",
            "description": "example of truchet avoiding collisions with the green dot.\n\nWIP: I don't know why the door close not smoothly after the green dot.",
            "flags": 0,
            "hasliked": 0,
            "id": "Dl3SD7",
            "likes": 18,
            "name": "animated truchet avoidance",
            "published": 3,
            "tags": [
                "2d",
                "truchet",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 324
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/DlcXW7\n\n#define S(v)   smoothstep( 9./R.y, 0., v )                          // AAÂ draw\n#define H(I,t) fract(1e4*sin(dot(I+floor(t),R-17.))) < .5           // random swap ?\n#define D(I,t) I == vec2(floor(2.5+t))                              // passing dot ?\n#define C(I,t) H(I,t) || D(I,t+.5) || D(I+1.,t+.5)                     // all swap conditions\n//#define A(t) clamp( fract(t)*2. -.5, 0., 1. )                     // turn ( 1 = pi/2 )\n//#define A(t) smoothstep(0.,1., fract( t )  )                      // versions with easing\n  #define A(t) smoothstep(0.,1., fract(t)*1.4 -.2 )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    float t = iTime, a;\n    vec2 R = iResolution.xy,\n         V = 5.* u / R.y, U = V + t,\n         I = floor(U),                                              // Cell id\n         F = fract(U)-.5;                                           // cell local coords\n    bool     b =  C(I,t),                                           // swap this cell ? if random or passing dot\n         B = b == C(I,t-1.);                                        // same state that previously ?\n    a =  b  ? B ? 1. : A( t)                                        // swap :   keep or turn depending on previous state\n            : B ? 0. : A(-t);                                       // no swap: keep or turn depending on previous state\n  \n    F *= mat2(cos(1.57*a+vec4(0,11,33,0)));                         // rotate cell from prev to new configuration\n    O = vec4(  S( abs( min(length(F-.5),length(F+.5)) - .5 ) -.1 )  // draw truchet\n             * S(length(F)-.5) );\n    \n    O.g += S(length(V-2.5)-.1);                                     // draw green dot\n  //O.r += .4*mod(I.x+I.y,2.);                                      // debug: show tiles\n  //O.r += .4*float(b != H(I,t));       // debug: tile changed for dot\n  //O.b += .5*float(!B);                // debug: tile changed since t-1\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}