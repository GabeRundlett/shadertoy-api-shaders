{
    "Shader": {
        "info": {
            "date": "1715208819",
            "description": "inspiration https://www.shadertoy.com/view/lcKSzD",
            "flags": 0,
            "hasliked": 0,
            "id": "lfVXWW",
            "likes": 4,
            "name": "twinkle star",
            "published": 3,
            "tags": [
                "star"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 168
        },
        "renderpass": [
            {
                "code": "float f_n_rnd_nor(float n ){\n\n    return fract(n*(n/14161729.+n+sin(n*506683.)));\n}\nfloat f_n_flickering_star(\n    vec2 o, \n    float n_seed\n){\n    o = abs(o)*2.;\n    float n = 1.-length(o)*4.;\n    float nd = (o.x*o.y)*(f_n_rnd_nor(iTime+n_seed)+.1)*2000.;\n    n = clamp(n, 0., 1.);\n    nd = (1.-nd)*n;\n    return nd;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ((fragCoord-(.5*iResolution.xy))/iResolution.yy)-.5;\n    float n_min = 1.;\n    float n_its = 100.;\n    float n_t = iTime*0.000002;\n    for(float n_it_nor = 0.; n_it_nor < 1.; n_it_nor+=(1./n_its)){\n        float nr = f_n_rnd_nor(n_it_nor*2000.);\n        \n        vec2 o = (vec2(\n            f_n_rnd_nor(n_it_nor+n_t),\n            f_n_rnd_nor(1.-n_it_nor+n_t)\n        )-uv-1.)*(1.+(nr*100.));\n        float n = 1.-f_n_flickering_star(o, n_it_nor);\n        //n = length(o);\n        if(n < n_min){\n            n_min = n;\n        }\n    }\n    fragColor = vec4(1.-n_min);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}