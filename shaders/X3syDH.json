{
    "Shader": {
        "info": {
            "date": "1726111785",
            "description": "use periodic function to solve color array mapping problem",
            "flags": 0,
            "hasliked": 0,
            "id": "X3syDH",
            "likes": 2,
            "name": "Colorful Bands",
            "published": 3,
            "tags": [
                "color",
                "periodic",
                "band"
            ],
            "usePreview": 0,
            "username": "liuming",
            "viewed": 73
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592653\nconst int size = 6;\nconst vec3 colorArr[size] = vec3[](vec3(0.88,0.89,0.92), vec3(0.82,0.76,0.84), vec3(0.52,0.44,0.61), vec3(0.27,0.28,0.47), vec3(0.36,0.49,0.70), vec3(0.71,0.79,0.84));\nconst float area_num = 100.0;\n\nfloat getAngle(vec2 uv, vec2 center, vec2 start){\n    vec2 a = start - center;\n    vec2 b = uv - center;\n    float cosTheta = dot(a,b)/length(a)/length(b);\n    float theta = acos(cosTheta);\n    float dir = a.x*b.y-a.y*b.x;\n    if(dir<=1e-6){\n        theta = abs(theta) + PI;\n    }\n    return theta;\n}\n\nvec2 rotate(vec2 p, float theta){\n    float x = p.x*cos(theta) - p.y*sin(theta);\n    float y = p.x*sin(theta) + p.y*cos(theta);\n    return vec2(x,y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.x;\n    //uv = fract(uv*area_num);\n    vec2 center = vec2(0.0, 0.0);\n    vec2 start = vec2(1.0, 0.0);\n    start = rotate(start,iTime*0.2);\n    vec3 color;\n    \n    //float x_step = 1.0/float(area_num);\n    //int index = int(floor(uv.x/x_step));\n    float angle_step = 2.0*PI/float(area_num);\n    int index = int(floor(getAngle(uv,center,start)/angle_step));\n    \n    int i = int(mod(float(index),float(size)));\n    color = colorArr[i];\n\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}