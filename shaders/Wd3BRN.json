{
    "Shader": {
        "info": {
            "date": "1604438820",
            "description": "2D clouds using 3D noise",
            "flags": 0,
            "hasliked": 0,
            "id": "Wd3BRN",
            "likes": 4,
            "name": "in the sky",
            "published": 3,
            "tags": [
                "2d",
                "3d",
                "noise",
                "clouds"
            ],
            "usePreview": 0,
            "username": "miloszmaki",
            "viewed": 696
        },
        "renderpass": [
            {
                "code": "#define NUM_CLOUDS 10\n#define CLOUD_PARTS 10\n#define SPEED 0.008\n\n#define saturate(x) clamp(x,0.,1.)\n#define rgb(r,g,b) (vec3(r,g,b)/255.)\n\nfloat rand(float x) { return fract(sin(x) * 71.5413); }\n\nfloat rand(vec3 x) { return rand(dot(x, vec3(1.4251, 1.5128, 1.7133))); }\n\nfloat noise(vec3 x)\n{\n    vec3 i = floor(x);\n    vec3 f = x-i;\n    f *= f*(3.-2.*f);\n    return mix(\n        mix(\n            mix(rand(i+vec3(0,0,0)), rand(i+vec3(1,0,0)), f.x),\n        \tmix(rand(i+vec3(0,1,0)), rand(i+vec3(1,1,0)), f.x),\n            f.y),\n        mix(\n            mix(rand(i+vec3(0,0,1)), rand(i+vec3(1,0,1)), f.x),\n        \tmix(rand(i+vec3(0,1,1)), rand(i+vec3(1,1,1)), f.x),\n            f.y),\n        f.z);\n}\n\nfloat fbm(vec3 x)\n{\n    float r = 0.0, s = 1.0, w = 1.0;\n    for (int i=0; i<5; i++)\n    {\n        s *= 2.0;\n        w *= 0.5;\n        r += w * noise(s * x);\n    }\n    return r;\n}\n\nfloat cloud(int i, vec2 c, float r, vec2 p, float ch)\n{\n    vec2 x = p - c;\n    x.y *= 3.;\n    float l = length(x);\n    float n = 0.1 + 0.9*fbm(vec3(x.x*ch,x.y*ch, float(i) + iTime*SPEED*5.));\n    \n    return l*n - r;\n}\n\nvec3 render(vec2 uv)\n{\n    // sky\n    vec3 sky = mix(rgb(186, 240, 255), rgb(59, 182, 217), uv.y);\n    vec3 color = sky;\n    // clouds\n    float dmin = 1.;\n    for (int i=0; i<NUM_CLOUDS; i++) {\n    \tvec2 pos0 = vec2(-1, -1) + vec2(2, 2) * vec2(rand(float(i)+234.230), rand(float(i)+173.1523));\n        pos0.x += SPEED * iTime * (1. + rand(float(float(i)*34.35)));\n        pos0.x = mod(pos0.x + 1.0, 2.0) - 1.0;\n        pos0.x *= 3.;\n        pos0.y = pos0.y * 0.8 + 0.2;\n        for (int j=0; j<CLOUD_PARTS; j++) {\n            vec2 pos = pos0;\n            int id = i*CLOUD_PARTS+j;\n            float s = 0.7;\n            pos.x += (rand(float(id)+5.3451)-0.5)*0.5*s;\n            pos.y += (rand(float(id)+11.7013)-0.5)*0.2*s;\n            float d = cloud(id, pos, s*0.15*(rand(float(id))+1.), uv, 2.5/s);\n            if (d<dmin) dmin = d;\n        }\n    }\n    if (dmin<0.) {\n        float a1 = smoothstep(0.0, -0.03, dmin);\n        float a2 = smoothstep(-0.02, -0.12, dmin);\n        vec3 col = mix(vec3(1,1,1), sky*0.4+0.6, a2);\n        color = mix(color, col, a1);\n    }\n    \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n\tfragColor = vec4(render(uv),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}