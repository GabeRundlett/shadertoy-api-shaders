{
    "Shader": {
        "info": {
            "date": "1669666940",
            "description": "Blackbody spectrum using Planck's law (I just copied the function from Wikipedia: https://en.wikipedia.org/wiki/Planck%27s_law#The_law) and an eye response curve (based on: https://commons.wikimedia.org/wiki/File:Cone-fundamentals-with-srgb-spectrum.svg)",
            "flags": 0,
            "hasliked": 0,
            "id": "mssXWX",
            "likes": 3,
            "name": "Blackbody spectrum",
            "published": 3,
            "tags": [
                "spectrum",
                "blackbody"
            ],
            "usePreview": 0,
            "username": "fishy",
            "viewed": 232
        },
        "renderpass": [
            {
                "code": "#define HPI 1.57079632679\n#define PI 3.14159265359\n#define TAU 6.28318530718\n#define sat(x) clamp(x, 0.0, 1.0)\n\nfloat blackbody(float v, float t)\n{\n    return 2.*v*v*v*(1./(exp(v/t) - 1.));\n}\n\nfloat responseCurve(float w, float p, float v)\n{\n    return sin(TAU*sat((v-p)/w + 0.5) - HPI)*0.5+0.5;\n}\n\nvec3 eyeResponsivity(float v)\n{\n    return vec3(responseCurve(100., 440., v),\n                responseCurve(200., 550., v),\n                responseCurve(200., 600., v)\n                );\n}\n\nvec3 getBlackbodyColor(float steps, float t)\n{\n    vec3 col = vec3(0);\n    vec3 m = vec3(0);\n    float stInc = 300./steps;\n    for(float v = 400.; v < 700.; v += stInc)\n    {\n        vec3 r = eyeResponsivity(v);\n        m += r;\n        col += blackbody(v, t)*r*vec3(0.11, 0.59, 0.3);\n    }\n    return col/m;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Output to screen\n    fragColor = vec4(sqrt(getBlackbodyColor(20., uv.x*50.+15.) / (1.0 + getBlackbodyColor(20., uv.x*50.+15.))),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}