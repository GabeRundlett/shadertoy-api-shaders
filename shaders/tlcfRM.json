{
    "Shader": {
        "info": {
            "date": "1612416041",
            "description": "Anyone know any tricks to get rid of the ugly artifacts here? I know its because offseting the steps messes with the distance function so I guess I'm looking for ways to compensate for that in general (besides just decreasing the march step bias.)",
            "flags": 0,
            "hasliked": 0,
            "id": "tlcfRM",
            "likes": 9,
            "name": "To The Top",
            "published": 3,
            "tags": [
                "3d",
                "stairs"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 381
        },
        "renderpass": [
            {
                "code": "// Cole Peterson\n\n#define R iResolution.xy\n\n#define ss(a, b, t) smoothstep(a, b, t)\n#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n#define tA(p) texture(iChannel0, p)\n#define tB(p) texture(iChannel1, p)\n\nfloat sub(float d1, float d2){return max(-d1, d2);}\n\nfloat box( vec3 p, vec3 b ){\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nvec3 rep(vec3 p, vec3 b){return mod(p, b) - b*0.5;}\n\n#define stepWidth 0.2\n#define stepHeight 0.25\n#define stepLength 4.0\n\n#define b vec3(0., 8., stepWidth*2.0)\n\nfloat map(vec3 rp){\n    float d = 99.;\n    rp += vec3(-1.3, 3.65+iTime - 5., -12. + iTime);\n    vec3 p = rp;\n    \n    vec3 id = floor(p / b);\n    \n    p.y -= id.z*0.4; // Offset for stairs\n    p = rep(p, b);\n    \n    d = min(box(p, vec3(stepLength, stepHeight, stepWidth)), d);\n    d = min(stepLength - abs(rp.x), d);\n    \n    rp = mod(rp, vec3(12.))-b*0.5;\n    d = sub(box(rp, vec3(6.0, 6.0, 6.0)), d);\n    \n    return d;\n}\nvec3 normal( in vec3 pos ){\n    vec2 e = vec2(0.002, -0.002);\n    return normalize(\n        e.xyy * map(pos + e.xyy) + \n        e.yyx * map(pos + e.yyx) + \n        e.yxy * map(pos + e.yxy) + \n        e.xxx * map(pos + e.xxx));\n}\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    vec2 uv = 2.*vec2(u.xy - 0.5*R.xy)/R.y;\n    \n    vec3 rd = normalize(vec3(uv, 0.9));\n    vec3 ro = vec3(0.);\n    \n    rd.yz*=rot(-.2+cos(iTime*3.)*0.02);\n    rd.xz*=rot(-.2);\n    \n    float t = 0., d = 0., ns = 0.;   \n    \n    for(int i = 0; i < 80; i++){\n    \td = map(ro + rd*t); \t   \n        if(abs(d) < .002){\n            break;\n        }\n        t += d * .7;\n        ns++;\n    }   \n    vec3 p = ro + rd*t;\n    vec3 n = normal(p);\n    \n    vec3 lp = vec3(0., 5.0, .1);\n    vec3 ld = lp-p;\n    \n    float dif = max(dot(n, ld), .1);\n    float dd = length(ld);\n    float fal = 1.9/(dd*dd) + (cos(iTime*44.)+cos(iTime*32.))*0.0005;\n    \n    p += vec3(-1., 3.+iTime - 5., -12. + iTime);\n    \n    vec3 id = floor(p / b);\n    float o = cos(id.z*2233.3)*.5;\n    \n    p.x*=.5;\n    vec3 col = (abs(n.x)>.99) ? tB(p.yz*.2).xyz : mix(tB((p.xy+o)*.2).xyz, tA(p.xz*.2).xyz, abs(n.y));\n    col *= dif * fal;\n    \n    //col *= max(ss(2.0, 0.4, ns/24.), 0.0);\n    \n    col = mix(vec3(.12), col, exp(-t*t*t*0.00001));\n    \n    \n    \n    col *= 4.;\n    col = col.xyy*col.xyy*col.xyy;\n    \n    \n    //col -= fwidth(p-ro)*1.;\n    //col *= 10.*fwidth(t);\n    \n    //col*=ss(.9,.895, abs(uv.y));\n    f = vec4(sqrt(clamp(col, 0.0, 1.0)), 1.0);\n    //f = vec4(10.*fwidth(p-ro),1); return;\n    //f = vec4(10.*fwidth(t)); return;\n}\n\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 46,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}