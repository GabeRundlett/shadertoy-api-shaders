{
    "Shader": {
        "info": {
            "date": "1517398316",
            "description": "Another audio reactive experiment",
            "flags": 64,
            "hasliked": 0,
            "id": "XtjfD3",
            "likes": 10,
            "name": "In Berlin after Sandy",
            "published": 3,
            "tags": [
                "music",
                "audio",
                "symmetry"
            ],
            "usePreview": 0,
            "username": "hamoid",
            "viewed": 900
        },
        "renderpass": [
            {
                "code": "const float PI = 3.14159;\nvoid mainImage( out vec4 O, in vec2 uv ) {\n    uv /= iResolution.y;   \n    float t = iChannelTime[0] / 180.;\n    uv.x -= t*.5;\n    uv.y += iResolution.y/(iResolution.x*t*5.);\n    \n    vec2 m = uv - 0.5;\n    float a = atan(m.x, m.y) / PI;\n    a = abs(a);\n    float d = length(m) / 0.7;\n\n    // look at low freqs\n    float v1 = texture(iChannel0, vec2(a * .3, .0)).r;\n    v1 *= smoothstep(.8-t, .9, sin(d*20.-iTime - t*2.*v1));\n    v1 *= .5 + .5 * cos(d * 7.5 + PI);\n\n    // look at high freqs\n    float v2 = 5. * texture(iChannel0, vec2(d * .7 + .3, .0)).r;\n    \n    d = d + v2 + t * 6.;   \n    vec3 c = vec3(v1) + \n        v2 * (.5 + .5 * vec3(sin(d*2.), sin(d*1.5), sin(d)));\n\n    O = vec4(c, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 13301,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/hamoid/in-berlin-after-sandy"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}