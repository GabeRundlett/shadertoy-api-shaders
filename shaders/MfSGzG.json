{
    "Shader": {
        "info": {
            "date": "1704341447",
            "description": "l",
            "flags": 0,
            "hasliked": 0,
            "id": "MfSGzG",
            "likes": 1,
            "name": "SDF Study 2DCircle",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "cirnobaka",
            "viewed": 123
        },
        "renderpass": [
            {
                "code": "#define uvTiling 1.0\n\n\n\n\nvec2 TransUVToCenter(in vec2 fragCoord)\n{\n    return uvTiling * 2.0 * (fragCoord - 0.5 * iResolution.xy) / min(iResolution.x, iResolution.y);\n}\n\nfloat CalSDF2D(in vec2 uv, in float r)\n{\n    return length(uv) - r;\n}\n\n// closest point\nvec2 CalClosestPoint( in vec2 mousPos, in float r)\n{\n    vec2 pos = mousPos /  sqrt(mousPos.x * mousPos.x + mousPos.y * mousPos.y) * r;\n    return pos;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float r = 0.5 + 0.2 * sin(iTime);\n    vec2 uv = TransUVToCenter(fragCoord);\n    //SDF\n    float SD = CalSDF2D(uv, r);\n    vec3 c1 = 1. - sign(SD) * vec3(0.1, 0.4, 0.7); //区分内外\n    float c2 = 1. - exp(-3. * abs(SD));\n    float DisLine = 0.8 + 0.2 * sin(100. * abs(SD));\n    vec3 Col =  c1 * c2 * DisLine  * vec3(1.0, 1.0, 1.0);\n    Col = mix(Col, vec3(1.0, 1.0, 1.0), smoothstep(0.01, 0.0, abs(SD)));\n\n    //Mouse Click\n    if(iMouse.z > 0.01)\n    {\n        vec2 mousePos = TransUVToCenter(iMouse.xy);\n        float SDMouse = CalSDF2D(mousePos,r);\n        Col = mix(Col, vec3(0.0, 1.0, 1.0), smoothstep(0.01, 0.0, abs(length(uv - mousePos) - abs(SDMouse))));\n        Col = mix(Col, vec3(0.0, 1.0, 1.0), smoothstep(0.05, 0.0, length(uv - mousePos)));\n        \n        //Draw Closest Point\n        vec2 ClosePointPos = CalClosestPoint(mousePos, r);\n        Col = mix(Col, vec3(1.0, 0.0, 0.0), smoothstep(0.05, 0.0, length(uv - ClosePointPos)));\n    }\n    //---output---\n    fragColor = vec4(Col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}