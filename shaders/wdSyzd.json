{
    "Shader": {
        "info": {
            "date": "1587905202",
            "description": "https://markd87.github.io/posts/2016/05/06/wave-circles.html",
            "flags": 0,
            "hasliked": 0,
            "id": "wdSyzd",
            "likes": 7,
            "name": "Wave circles",
            "published": 3,
            "tags": [
                "2d",
                "wave",
                "circle",
                "transversewave"
            ],
            "usePreview": 0,
            "username": "sheepmaster",
            "viewed": 440
        },
        "renderpass": [
            {
                "code": "const float PERIOD_S = 1.7;\n\nconst float TILE_WIDTH = 36.;\n\nconst float DOT_RADIUS = 8.;\nconst float CIRCLE_RADIUS = 0.8 * TILE_WIDTH;\nconst float CIRCLE_LINE_WIDTH = 3.;\n\nconst float TAU = 8. * atan(1.);\n\nconst vec2 k = vec2(TAU / 7., - TAU / 7.);\n\nfloat disk(vec2 uv, vec2 center, float radiusPx, float scale) {\n    return smoothstep((radiusPx - .5) * scale, (radiusPx + .5) * scale, length(uv - center));\n}\n\nfloat circle(vec2 uv, vec2 center, float radius, float lineWidthPx, float scale) {\n    return smoothstep(0.0, lineWidthPx * scale, abs(length(uv - center) - radius));\n}\n\nfloat circleAndDot(vec2 ij, vec2 uv, float scale) {\n\tfloat circle = circle(uv, vec2(0.), CIRCLE_RADIUS * scale, CIRCLE_LINE_WIDTH, scale);\n\n    float theta = iTime / PERIOD_S * TAU + dot(ij, k);\n    vec2 pointPos = CIRCLE_RADIUS * scale * vec2(sin(theta), cos(theta));\n    float point = disk(uv, pointPos, DOT_RADIUS, scale);\n\n    return min(circle, point);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float scale = 1. / TILE_WIDTH;\n    vec2 fragCoordScaled = fragCoord * scale;\n\n    vec2 ij = vec2(floor(fragCoordScaled));\n\tvec2 uv = 2. * fragCoordScaled - 2. * ij - 1.;\n    \n    vec2 ijShifted = vec2(floor(fragCoordScaled + 0.5) - 0.5);\n\tvec2 uvShifted = 2. * fragCoordScaled - 2. * ijShifted - 1.;\n\n\tfragColor = vec4(vec3(1. - min(circleAndDot(ij, uv, scale), circleAndDot(ijShifted, uvShifted, scale))), 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}