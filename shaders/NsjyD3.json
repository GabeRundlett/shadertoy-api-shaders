{
    "Shader": {
        "info": {
            "date": "1644234655",
            "description": "A fun little shader I made to experiment with polar coordinates",
            "flags": 0,
            "hasliked": 0,
            "id": "NsjyD3",
            "likes": 9,
            "name": "malleable shape",
            "published": 3,
            "tags": [
                "abstract",
                "polar",
                "shape"
            ],
            "usePreview": 0,
            "username": "MarcoF",
            "viewed": 223
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n\nvec2 rotate(vec2 original, float angle, vec2 pivot) {\n    mat2 rotation  = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    vec2 final = original;\n    final -= pivot;\n    final *= rotation;\n    final += pivot;\n    return final;\n}\n\nvec2 cart2pol(vec2 uv) {\n    float r = length(uv);\n    float a = atan(uv.y, uv.x);\n    a = mod(a, PI * 2.0);\n    return vec2(r, a);\n}\n\n//  Function from Inigo Quilez\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0), 6.0)-3.0)-1.0,0.0,1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nfloat easySmoothstep(float edge, float smoothness, float x){\n\treturn smoothstep(edge - smoothness, edge + smoothness, x);\n}\n\nfloat nSpikes = 3.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord - (fragColor.xy = iResolution.xy) ) / fragColor.y ;\n    \n    float t = mod(iTime * 0.2, PI*2.0);\n    \n    uv = rotate(uv, t, vec2(0.0));\n    \n    vec2 polarUv = cart2pol(uv);\n    \n    vec3 hsb = vec3(1.0);\n\n\thsb.y = 0.6;\n    \n    hsb.z = (1. - polarUv.x) * 0.5 + 0.5;\n    \n    hsb.x = -fract(iTime * 0.1);\n    \n    t = sin(iTime * 1.0);\n    \n    float s = 0.5 + t * sin(polarUv.y * nSpikes) * 0.1;\n    \n    float c = easySmoothstep(s, 0.05, polarUv.x);\n    \n    if (c < 0.5) {\n\t\thsb.x += polarUv.x * 0.2;\n\t}\n\telse {\n\t\thsb.x += polarUv.x * 0.1;\n\t\thsb.x = mod(hsb.x + 0.2, 1.0);\n\t}\n    \n    if (c >= 0.5) {\n        hsb.z *= smoothstep(0.5, 0.6, c);\n    }\n    else {\n        hsb.z *= smoothstep(0.5, 0.4, c);\n    }\n    \n    vec3 col = hsb2rgb(hsb);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}