{
    "Shader": {
        "info": {
            "date": "1651463208",
            "description": "Just playing around, trying to make it somewhat interactive as well\n\nfrom ",
            "flags": 0,
            "hasliked": 0,
            "id": "7tXfWj",
            "likes": 0,
            "name": "Fork Noise Creep",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "isaul",
            "viewed": 203
        },
        "renderpass": [
            {
                "code": "/** Uses fbm / noise aparatus from iq's clouds on shadertoy, **/\n/** some digits were changed to protect the innocent **/\n\nmat3 m = mat3( 0.0,  0.8,  0.70,\n              -0.60,  0.36, -0.68,\n              -0.90, -0.19,  0.14 );\n\nfloat cubicPulse( float c, float w, float x )\n{\n    x = abs(x - c);\n    if(x > w) { return 0.0; }\n    x /= w;\n    return 1.0 - x*x*(3.0-2.0*x);\n}\n\nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0 + 113.0*p.z;\n\n    float res = mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                        mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y),\n                    mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                        mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n    return 1.0 - sqrt(res);\n}\n\nfloat fbm( vec3 p )\n{\n    float f;    \n    f  = 0.5000*noise( p ); p = m*p*3.02;\n    f += 0.200*noise( p ); p = m*p*1.0130;\n    f += 0.0275*noise( p ); p = m*p*2.02;\n    f += 0.00513*noise(p * 2.00);\n    return f;\n}\n\nfloat iat(in vec2 q) {\n  return fbm(vec3(q + .2 * vec2(iTime, iTime), 0.));\n}\n\nvec2 normz(vec2 x) {\n\treturn x == vec2(1.0) ? vec2(0.0) : normalize(x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 q = fragCoord.xy / iResolution.x;\n  \n  if (iMouse.z > 0.0) {\n    \tvec2 d = (fragCoord.xy - iMouse.xy) / iResolution.x;\n        vec2 m = 0.05 * normz(d) * exp(-length(d) / 0.1);\n        \n        q.xy += m;\n  }\n\n  vec2 n = q + vec2(0.0, 0.001);\n  vec2 e = q + vec2(0.001, 0.0);\n\n  float i  = iat(q * 15.0);\n  float ni = iat(n * (15.0 * i));\n  float ei = iat(e * 15.0);\n  \n  vec3 no = (normalize(vec3( (ni - ei), (ei - ni), sqrt((ei - ni)*(ei - ni) + (ni - ei)*(ni - ei)))));\n  float dif = 1.2 * dot( no, normalize(vec3(-0.13, 0.8, .97)));\n  vec3 col = vec3(0.1,0.1,tan(i*e)) / 0.3;\n  col *= dif;\n  fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}