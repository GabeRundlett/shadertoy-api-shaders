{
    "Shader": {
        "info": {
            "date": "1642519455",
            "description": "Rainy day shader #1 of 6",
            "flags": 8,
            "hasliked": 0,
            "id": "7sXcRs",
            "likes": 12,
            "name": "Party Box II",
            "published": 3,
            "tags": [
                "music"
            ],
            "usePreview": 0,
            "username": "eiffie",
            "viewed": 356
        },
        "renderpass": [
            {
                "code": "#define time iTime\n#define rez iResolution\nvec3 mcol=vec3(0.0),blm=vec3(0.0);\nfloat dL=1000.,tim;\nfloat DE(vec3 p0){\n  vec4 p=vec4(abs(mod(p0,4.)-2.)-1.,1.1);\n  vec2 c=vec2(-.4,-.76);\n  for(int n=0;n<4;n++){\n    p.xy=abs(p.xy+1.0)-1.0;\n    p*=2.0/clamp(dot(p.xyz,p.xyz),0.25,1.0);\n    if(p.y>p.z)p.yz=p.zy;\n    if(p.x>p.y)p.xy=p.yx;\n    p.yz+=c;\n    if(n==2){\n      float d=length(p.xyz/p.w);\n      if(d<dL)dL=d;\n      blm+=abs(sin(p0))/(1.+dL*dL*20000.);\n    }\n    if(n==3 && mcol.x>0.0)mcol+=vec3(1.)+30.*abs(p.xyz)/p.w;\n  }\n  return (abs(p.z)-1.0)/p.w;\n}\nfloat DEL(vec3 p0){\n  vec4 p=vec4(abs(mod(p0,4.)-2.)-1.,1.1);\n  vec2 c=vec2(-.4,-.76);\n  for(int n=0;n<3;n++){\n    p.xy=abs(p.xy+1.0)-1.0;\n    p*=2.0/clamp(dot(p.xyz,p.xyz),0.25,1.0);\n    if(p.y>p.z)p.yz=p.zy;\n    if(p.x>p.y)p.xy=p.yx;\n    p.yz+=c;\n  }\n  return length((p.xyz+sin(p0+vec3(tim,.8*tim+1.,.3*tim+2.))*2.)/p.w);\n}\nvec3 normal(vec3 p, float d){//from dr2\n  vec2 e=vec2(d,-d);vec4 v=vec4(DE(p+e.xxx),DE(p+e.xyy),DE(p+e.yxy),DE(p+e.yyx));\n  return normalize(2.*v.yzw+vec3(v.x-v.y-v.z-v.w));\n}\nvec3 lightDir(vec3 p, float d){//modified dr2 for light direction\n  vec2 e=vec2(d,-d);vec4 v=vec4(DEL(p+e.xxx),DEL(p+e.xyy),DEL(p+e.yxy),DEL(p+e.yyx));\n  return -normalize(2.*v.yzw+vec3(v.x-v.y-v.z-v.w));\n}\nvec3 sky(vec3 rd, vec3 L){\n  return rd*.1+0.4*dot(rd,L)+0.6;\n}\nfloat rnd;\nvoid randomize(in vec2 p){rnd=fract(float(time)+sin(dot(p,vec2(13.3145,117.7391)))*42317.7654321);}\n\nfloat ShadAO(in vec3 ro, in vec3 rd,in float dL){\n float t=0.01*rnd,s=1.0,d,mn=0.01;\n for(int i=0;i<12;i++){\n  d=max(DE(ro+rd*t)*1.5,mn);\n  s=min(s,d/t+t*0.5);\n  t+=d;\n  if(d>dL)break;\n }\n return s;\n}\nvec3 scene(vec3 ro, vec3 rd){\n  float t=DE(ro),d,px=clamp(cos(iTime*.5)*50.,.5,50.)/rez.x;\n  t=min(t,dL)*rnd;\n  for(int i=0;i<64;i++){\n    t+=d=DE(ro+rd*t);\n    if(t>50.0 || d<px*t)break;\n  }\n  vec3 L=normalize(vec3(0.4,0.025,0.5));\n  vec3 col=sky(rd,L);\n  if(d<px*t*5.0){\n    mcol=vec3(0.001);\n    vec3 so=ro+rd*t;\n    vec3 N=normal(so,d);\n    vec3 scol=mcol*0.25;\n    d=DEL(so);\n    L=lightDir(so,d);\n    float dif=0.5+0.5*dot(N,L);\n    float vis=clamp(dot(N,-rd),0.05,1.0);\n    float fr=pow(1.-vis,5.0);\n    float shad=ShadAO(so,L,d*.5);\n    col=(scol*dif/(1.+dL*dL)+fr*sky(reflect(rd,N),L))*shad;\n  }\n  return (col+blm)/t;\n}\nmat3 lookat(vec3 fw){vec3 up=vec3(0.0,1.0,0.0),rt=-normalize(cross(fw,up));return mat3(rt,normalize(cross(rt,fw)),fw);}\nvec3 path(float t){t*=.5;\n  return vec3(t,sin(t*5.)*.1,cos(t)*5.); \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n randomize(fragCoord);tim=time*5.;\n vec3 ro=path(iTime),fw=normalize(path(iTime+0.001)+vec3(0,.002,0)-ro);\n vec3 rd=lookat(fw)*normalize(vec3((iResolution.xy-2.0*fragCoord)/iResolution.y,1.0));\n fragColor=vec4(scene(ro,rd),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define bps 8.0 \nfloat rnd(float t){return fract(sin(mod(t,32.123)*32.123)*41.123);} \nvec2 nofs(float n){//the song's \"random\" ring \n  float r=0.5+0.5*rnd(floor(n));//random volume as well \n  n=mod(n,8.0); \n  if(n<1.0)n= -2.0; \n  else if(n<2.0)n= 0.0; \n  else if(n<3.0)n= 2.0; \n  else if(n<4.0)n= -4.0; \n  else if(n<5.0)n= 6.0; \n  else if(n<6.0)n= -5.0; \n  else if(n<7.0)n= -3.0; \n  else n=6.0;\n  return vec2(n,r); \n} \nfloat scale(float note){//throws out dissonant tones \n  float n2=mod(note,12.); \n  if((n2==1.)||(n2==2.)||(n2==4.)||(n2==6.)||(n2==8.)||(n2==9.)||(n2==11.))note=-100.;//pentatonic minor\n  return note; \n} \n// note number to frequency  from https://www.shadertoy.com/view/ldfSW2 \nfloat ntof(float n){return (n>0.0)?440.0 * pow(2.0, (n - 67.0) / 12.0):0.0;} \nconst float PI=3.14159; \nfloat Cos(float a){return cos(mod(a,PI*2.));} \nfloat Sin(float a){return Cos(a+PI/2.);} \nstruct instr{float att,fo,vibe,vphas,phas,dtun;}; \nvec2 I(float n,float t,float bt,instr i){//note,time,bt 0-8,instrument \n float f=ntof(scale(n));if(f<12.)return vec2(0.0);f-=bt*i.dtun;f*=t*PI*2.; \n f=exp(-bt*i.fo)*(1.0-exp(-bt*i.att))*Sin(f+Cos(bt*i.vibe*PI/8.+i.vphas*PI/2.)*Sin(f*i.phas))*(1.0-bt*0.125); \n n+=t;return vec2(f*Sin(n),f*Cos(n));\n} \nvec2 mainSound(int samp, float time){//att,fo,vibe,vphs,phs,dtun\n instr epiano=instr(20.0,0.05,1.5,0.1,0.505,0.001);//silly fm synth instruments \n instr sitar=instr(30.0,0.1,4.0,0.0,0.2525,0.0025); \n instr bassdrum=instr(500.0,1.0,4.0,0.76,1.0,0.5); \n instr stick=instr(100.0,30.0,10.5,0.0,2.3131,1000.0); \n instr pluckbass=instr(500.0,2.0,1.5,0.0,0.125,0.005); \n instr bass=instr(20.0,0.2,2.0,0.0,0.5,0.005); \n float tim=time*bps,b0,b1,b2,t0,t1,t2; \n vec2 a=vec2(0.0);//accumulator \n for(float i=0.;i<8.;i+=1.){//go back 8 beats and add note tails \n   b0=floor(tim);b1=floor(tim*0.5);b2=floor(tim*0.25); \n   vec2 n2=nofs(b2*0.125)+nofs(b2*0.5)+nofs(b2);//build notes on top of notes like fbm \n   vec2 n1=n2+nofs(b1),n0=n1+nofs(b0); \n   t0=fract(tim)+i; \n   a+=I(n0.x+72.0,time,t0,sitar)*n0.y*.5;\n   if(mod(i,1.)<1.)a+=I(n0.x+93.0,time+Sin(t0*272.0),t0,stick)*n0.y;  \n   if(mod(i,2.)<1.){//notes that play every 2 beats \n     t1=fract(tim*0.5)*2.0+i;\n     a+=I(n1.x+67.0,time,t1,epiano)*n1.y;\n     a+=I(n1.x+65.0,time,t1,epiano)*n1.y; \n     a+=I(n1.x+60.0,time,t1,epiano)*n1.y; \n     a+=I(n1.x+36.0,time,t1,pluckbass)*n1.y*4.0;\n     if(mod(i,4.)<1.){//every 4 \n       t2=fract(tim*0.25)*4.0+i;\n       a+=I(n2.x+48.0,time,t2,bass)*8.0; \n       a+=I(n2.x+32.0,t2/bps+0.008*sin(t2*5.0),t2,bassdrum)*12.0;\n       a+=I(n2.x+31.0,t2/bps+0.008*sin(t2*6.0),t2,bassdrum)*12.0;\n     } \n   } \n   tim-=1.;//go back in time to find old notes still decaying \n } \n return clamp(a/48.0,-1.,1.); \n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}