{
    "Shader": {
        "info": {
            "date": "1676470883",
            "description": "You can change the s curve curvature with the CURVE define at line 2",
            "flags": 0,
            "hasliked": 0,
            "id": "dtjSRd",
            "likes": 1,
            "name": "Linear vs Sin vs Scurve",
            "published": 3,
            "tags": [
                "sin",
                "linear",
                "scurve",
                "scurve"
            ],
            "usePreview": 0,
            "username": "djancool",
            "viewed": 177
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n#define CURVE 3.0\n\nfloat s_curve(float x, float p)\n{\n    float x1 = pow(x, p);\n    float x2 = pow(1.0 - x, p);\n    return x1 / (x1 + x2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy * vec2(iResolution.x / iResolution.y, 1.0);\n    float dim = iResolution.x / iResolution.y;\n\n    float time = iTime * 0.2;\n    float time_frac = fract(time);\n    float time_pyr = min(time_frac, 1.0 - time_frac) * 2.0;\n\n    float s_offset = s_curve(time_pyr , CURVE);\n    float sin_offset = sin(time * PI * 2.0 + 1.5 * PI) * 0.5 + 0.5;\n    float l_offset = time_pyr;  \n    \n    float sphere1 = step(length(uv - vec2(0.1, 0.15) - vec2(s_offset * 1.575, 0.0)),  0.075);\n    float sphere2 = step(length(uv - vec2(0.1, 0.5) - vec2(sin_offset * 1.575, 0.0)), 0.075);\n    float sphere3 = step(length(uv - vec2(0.1, 0.85) - vec2(time_pyr * 1.575, 0.0)),  0.075);\n    float spheres = sphere1 + sphere2 + sphere3;\n\n    float gradient1 = uv.x / dim * float(uv.y > 0.6667);\n    float gradient2 = sin(uv.x / dim * PI * 0.5) * float(uv.y > 1.0/3.0 && uv.y < 2.0/3.0);\n    float gradient3 = s_curve(uv.x / dim, CURVE) * float(uv.y < 1.0/3.0);\n    float gradient = gradient1 + gradient2 + gradient3;\n    //gradient *= 1.0;\n    \n    vec3 col = mix(vec3(gradient), vec3(0.925,0.557,0.557), spheres);\n    col = pow(col, vec3(2.2));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}