{
    "Shader": {
        "info": {
            "date": "1705769598",
            "description": "Coordinates distorted by a chessboard pattern leading to a lot of discontinuities which make it look like broken glass",
            "flags": 0,
            "hasliked": 0,
            "id": "4fXXWX",
            "likes": 5,
            "name": "Storm of broken glass",
            "published": 3,
            "tags": [
                "noise",
                "palette",
                "glass"
            ],
            "usePreview": 0,
            "username": "ikucha",
            "viewed": 191
        },
        "renderpass": [
            {
                "code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n// copy from https://www.shadertoy.com/view/4sc3z2\n\n#define MOD3 vec3(.1031,.11369,.13787)\n\nvec3 hash33(vec3 p3)\n{\n\tp3 = fract(p3 * MOD3);\n    p3 += dot(p3, p3.yxz+19.19);\n    return -1.0 + 2.0 * fract(vec3((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y, (p3.y+p3.z)*p3.x));\n}\nfloat perlin_noise(vec3 p)\n{\n    vec3 pi = floor(p);\n    vec3 pf = p - pi;\n    \n    vec3 w = pf * pf * (3.0 - 2.0 * pf);\n    \n    return \tmix(\n        \t\tmix(\n                \tmix(dot(pf - vec3(0, 0, 0), hash33(pi + vec3(0, 0, 0))), \n                        dot(pf - vec3(1, 0, 0), hash33(pi + vec3(1, 0, 0))),\n                       \tw.x),\n                \tmix(dot(pf - vec3(0, 0, 1), hash33(pi + vec3(0, 0, 1))), \n                        dot(pf - vec3(1, 0, 1), hash33(pi + vec3(1, 0, 1))),\n                       \tw.x),\n                \tw.z),\n        \t\tmix(\n                    mix(dot(pf - vec3(0, 1, 0), hash33(pi + vec3(0, 1, 0))), \n                        dot(pf - vec3(1, 1, 0), hash33(pi + vec3(1, 1, 0))),\n                       \tw.x),\n                   \tmix(dot(pf - vec3(0, 1, 1), hash33(pi + vec3(0, 1, 1))), \n                        dot(pf - vec3(1, 1, 1), hash33(pi + vec3(1, 1, 1))),\n                       \tw.x),\n                \tw.z),\n    \t\t\tw.y);\n}\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/lt2GDc\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat chess(vec2 v){\n    vec2 i = floor(v);\n    return mod(i.x+i.y, 2.);\n}\n\nmat2 rotate(float angle){\n    angle = -radians(angle);\n    return mat2(cos(angle), -sin(angle)\n               ,sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    \n    st+=1.;\n    st*=10.;\n    \n    float k = 1.;\n    for(float i = 1.; i<=8.;i++){\n        vec2 offset = vec2(0.);\n        offset.x = 0.6*sin(0.32456*iTime*i)*chess(i*st*rotate(i*23.34576+iTime)/10.);\n        offset.y = 0.6*sin(0.5245677*iTime*i)*chess(i*st*rotate(i*17.23467+iTime)/10.);\n        st+= offset;\n    }\n    vec3 color = pal(0.5*perlin_noise(vec3(st, 0.5*iTime))+0.5, vec3(0.5),vec3(0.5),vec3(2.0,1.0,0.0),vec3(0.5,0.20,0.25));\n    \n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}