{
    "Shader": {
        "info": {
            "date": "1727522603",
            "description": "originals fractal 62 and quasar by kishimisu",
            "flags": 0,
            "hasliked": 0,
            "id": "M3jcR3",
            "likes": 1,
            "name": "color quasar pulsation",
            "published": 3,
            "tags": [
                "star",
                "pulsation",
                "quasar"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 57
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\n\n#define r(a) mat2(cos(a + asin(vec4(0,1,-1,0))))\n\n#define X(p) p *= r(round(atan(p.x, p.y) * 4.) / 4.)\n\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    \n     vec3  p =vec3(0.) ;\n   vec3  R = iResolution;\n   vec4 O2 =O;\n   vec2 F= C;\n   vec2 uv = F/iResolution.xy-.5;\n    float i=0.;\n   float t=0.;\n   float d=0.;\n   float a=0.;\n   float b=0.;\n   float t2 = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv) + .57)) * 21.2;\n\tfloat si = sin(t2);\n\tfloat co = cos(t2);\n\tmat2 ma = mat2(co, si, -si, co);\n    \n    float T2 = iTime * .5 + .5;\n             \n    for(O2  *= i; i++ < 44.; O2  += .11 * (02. + atan(a + t*.3 - T2*.8 + vec4(1,1,2,0))) \n                  / (1. + abs(d)*100.) ){\n        \n       \n        p = t * normalize(vec3(F+F-R.xy, R.y));\n       \n        p.z  -= 4.;\n     \n       p.zx*=mat2(cos(iTime*1.01),sin(iTime*1.01),-sin(iTime*1.01), cos(iTime*1.01));\n      p.yz*=mat2(cos(iTime*1.01),sin(iTime*1.01),-sin(iTime*1.01), cos(iTime*1.01));\n         \n        X(p.zx) ;\n        \n      \n       X(p.yx);\n      \n        p.x = mod(b = p.x - T2, 1.5) - .25;\n        \n        t  += d = length(p) - (2. - smoothstep(b+2., b, T2)*30.)\n                            * (cos(T2/6.+1.)+1.) / 2e2;\n                            }\n                            O2.rgb*=vec3(0.5,0.3,0.7)*10.;\n    \n    vec3 p2,q,r=iResolution,\n    d2=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<70.;\n        O.xyz+=mix(vec3(1),H(g*.1),.8)*3./e/8e3\n    )\n    {\n        p2=g*d2;\n   \n        \n      p2.zx*=mat2(cos(iTime*1.01),sin(iTime*1.01),-sin(iTime*1.01), cos(iTime*1.01));\n      p2.yz*=mat2(cos(iTime*1.01),sin(iTime*1.01),-sin(iTime*1.01), cos(iTime*1.01));\n           X(p2.zx) ;\n         \n        a=35.;\n        p2=mod(p2-a,a*2.)-a;\n         \n        s=2.;\n       \n        for(int i=0;i++<8;){\n          \n            p2=.3-abs(p2);\n            \n            p2.x<p2.z?p2=p2.zyx:p2;\n            p2.z<p2.y?p2=p2.xzy:p2;\n             \n            s*=e=1.25+sin(iTime*0.11)*.1;\n            p2=abs(p2)*e-\n                vec3(\n                    5.+sin(iTime*.03+.5)*3.,\n                   70,\n                    8.+cos(iTime*.5)*5.\n                 )+O2.rgb;\n                  X(p2.yx);\n         }\n         g+=e=length(p2.yyzz)/s;\n    }\n    O+=O2;\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}