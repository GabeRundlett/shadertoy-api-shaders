{
    "Shader": {
        "info": {
            "date": "1723252933",
            "description": "flash warning",
            "flags": 0,
            "hasliked": 0,
            "id": "4flfRr",
            "likes": 0,
            "name": "aug92024v2",
            "published": 3,
            "tags": [
                "wave",
                "spiral",
                "fibonacci",
                "logarithmic",
                "golden"
            ],
            "usePreview": 0,
            "username": "brendanluu",
            "viewed": 84
        },
        "renderpass": [
            {
                "code": "// Fork of \"aug92024 \" by brendanluu. https://shadertoy.com/view/XflfRr\n// 2024-08-10 01:20:15\n\n// Fork of \"jul172024 \" by brendanluu. https://shadertoy.com/view/MfscRB\n// 2024-08-10 01:10:25\n\nvec3 palette(float t) {\n    vec3 a = vec3(1.000,1.000,1.000);\n    vec3 b = vec3(1.000,0.000,0.584);\n    vec3 c = vec3(1.000,0.000,0.682);\n    vec3 d = vec3(1.000,0.000,0.435);\n    \n    return a + b*cos(6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy * 888.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y; \n    vec2 uv0 = uv;\n    \n    uv = -cos(floor(uv * .01) -0.5+iTime);\n   \n    float d = length(uv);\n    \n    vec3 col = palette(d + length(uv0));\n        \n    d = step(cos(d/0.01 + (iTime)*60.25), .01);\n\n    \n    d = 0.1 / d;\n    \n    col /= d*cos(iTime*1000.);\n    \n    fragColor = vec4(col, 1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}