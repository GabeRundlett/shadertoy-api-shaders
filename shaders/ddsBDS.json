{
    "Shader": {
        "info": {
            "date": "1689146014",
            "description": "a shader that generator a noise partten",
            "flags": 0,
            "hasliked": 0,
            "id": "ddsBDS",
            "likes": 1,
            "name": "SmoothNoise4489",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "shaderNoob4489",
            "viewed": 71
        },
        "renderpass": [
            {
                "code": "float N21(vec2 p)\n{\n    return fract(sin(p.x * 100. + p.y * 6574.) * 5647.);\n}\n\nfloat SmoothNoise(vec2 uv)\n{\n    vec2 lv = fract(uv);\n    lv = lv * lv * (3. - 2. * lv);\n    vec2 id = floor(uv);\n    \n    float bl = N21(id);\n    float br = N21(id + vec2(1., 0.));\n    float b = mix(bl, br, lv.x);\n    \n    float tl = N21(id + vec2(0., 1.));\n    float tr = N21(id + vec2(1., 1.));\n    float t = mix(tl, tr, lv.x);\n    \n    return mix(b, t, lv.y);\n}\n\nfloat SmoothNoise2(vec2 uv)\n{\n    float c = SmoothNoise(uv * 4.);\n    c += SmoothNoise(uv * 8.) * .5;\n    c += SmoothNoise(uv * 16.) * .25;\n    c += SmoothNoise(uv * 32.) * .125;\n    c += SmoothNoise(uv * 64.) * .0625;\n    return c / 1.9375;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv += iTime * .1;\n    float c = SmoothNoise2(uv);\n    vec3 col = vec3(c);\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}