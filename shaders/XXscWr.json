{
    "Shader": {
        "info": {
            "date": "1726062202",
            "description": "originals https://www.shadertoy.com/view/7sX3WN",
            "flags": 0,
            "hasliked": 0,
            "id": "XXscWr",
            "likes": 1,
            "name": "vision",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 64
        },
        "renderpass": [
            {
                "code": "float st=.025, maxdist=15.;\nvec3 ldir=vec3(0.,-1.,-1.),col=vec3(0.);\n\nmat2 rot(float a) {\nfloat s=sin(a),c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nvec3 fractal(vec2 p) {\n    vec2 pos=p;\n    float d, ml=100.;\n    vec2 mc=vec2(100.);\n    p=abs(fract(p*.1)-.5);\n    vec2 c=p;\n    for(int i=0;i<8;i++) {\n        d=dot(p,p);\n        p=abs(p+1.)-abs(p-1.)-p;\n    p=p*-1.5/clamp(d,.5,1.)-c;\n        mc=min(mc,abs(p));\n        if (i>2) ml=min(ml*(1.+float(i)*.1),abs(p.y-.5));\n    }\n    mc=max(vec2(0.),1.-mc);\n    mc=normalize(mc)*.8;\n    ml=pow(max(0.,1.-ml),6.);\n    return vec3(mc,d*.4)*ml*(step(0.5,fract(d*.1+iTime*1.0+pos.x*.2)))-ml*.1;\n}\n\nfloat map(vec2 p) {\n    vec2 pos=p;\nfloat t2 = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(p.xy) + .07)) * 2.2;\nfloat si = sin(t2);\nfloat co = cos(t2);\nmat2 ma = mat2(co, si, -si, co);\n    p*=ma;\n    float t=iTime*1.;\n    col+=fractal(p);\n    vec2 p2=abs(.5-fract(p*ma*8.+4.));\nfloat h=0.2+cos(iTime);\n       p.y+=ceil(p.x);\n           h*=ceil(p.y);\n    p=floor(p*2.+1.);\n    float l=length(p2*p2);\n   \n   \n   \n    t*=.5;\n\n    return h*l;\n}\n\nvec3 normal(vec2 p, float td) {\nvec2 eps=vec2(1.,.011);\n    return normalize(vec3(map(p+eps.yx)-map(p-eps.yx),2.*eps.y,map(p+eps.xy)-map(p-eps.xy)));\n}\n\nvec2 hit(vec3 p) {\n    float h=map(p.xz);\n    return vec2(step(p.y,h),h);\n}\n\nvec3 bsearch(vec3 from,vec3 dir,float td) {\n    vec3 p;\n    st*=-.5;\n    td+=st;\n    float h2=1.;\n    for (int i=0;i<20;i++) {\n        p=from+td*dir;\n        float h=hit(p).x;\n        if (abs(h-h2)>.001) {\n            st*=-.5;\n       h2=h;\n        }\n        td+=st;\n    }\nreturn p;\n}\n\nvec3 shade(vec3 p,vec3 dir,float h,float td) {\n    ldir=normalize(ldir);\ncol=vec3(0.);\n    vec3 n=normal(p.xz,td);\ncol*=.25;\n    float dif=max(0.,dot(ldir,-n));\n    vec3 ref=reflect(ldir,dir);\n    float spe=pow(max(0.,dot(ref,-n)),8.);\n    return col+(dif*.5+.2+spe*vec3(1.,.8,.5))*.2;\n}\n\n\nvec3 march(vec3 from,vec3 dir) {\nvec3 p, col=vec3(0.);\n    float td=.5, k=0.;\n    vec2 h;\n    for (int i=0;i<600;i++) {\n    p=from+dir*td;\n        h=hit(p);\n        if (h.x>.5||td>maxdist) break;\n        td+=st;\n    }\n    if (h.x>.5) {\n        p=bsearch(from,dir,td);\n    col=shade(p,dir,h.y,td);\n    } else {\n    }\ncol=mix(col,2.*vec3(mod(gl_FragCoord.y,4.)*.1),pow(td/maxdist,3.));\n    return col*vec3(.9,.8,1.);\n}\n\nmat3 lookat(vec3 dir,vec3 up) {\ndir=normalize(dir);vec3 rt=normalize(cross(dir,normalize(up)));\n    return mat3(rt,cross(rt,dir),dir);\n}\n\nvec3 path(float t) {\nreturn vec3(cos(t)*5.5,1.5-cos(t)*.0,sin(t*2.))*2.5;\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.y;\nfloat t=iTime*.0;\n    vec3 from=path(t);\n    vec3 dir=normalize(vec3(uv,.7));\n    vec3 adv=path(t+.1)-from;\n    dir=lookat(adv+vec3(0.,-.2-(1.+sin(t*2.)),0.),vec3(adv.x*.1,1.,0.))*dir;\n    vec3 col=march(from, dir)*1.5;\n    fragColor = vec4(col,1.);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}