{
    "Shader": {
        "info": {
            "date": "1714876927",
            "description": "Make some art with your mouse.",
            "flags": 32,
            "hasliked": 0,
            "id": "XfVSzW",
            "likes": 18,
            "name": "Fluid Art",
            "published": 3,
            "tags": [
                "fluid"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 238
        },
        "renderpass": [
            {
                "code": "// Fork of \"Caustic After 5k Frames\" by wyatt. https://shadertoy.com/view/lcGGRD\n// 2024-05-05 01:41:18\n\n// Fork of \"Nothing New\" by wyatt. https://shadertoy.com/view/Xf33zX\n// 2024-04-06 01:33:32\n\nMain {\n    Q.xyz = normalize(B(U).xyz)*2.-.5;\n    \n }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define M 5000\n\n#define R iResolution.xy\n#define Main void mainImage(out vec4 Q, in vec2 U)\n\n#define A(U) texelFetch(iChannel0,ivec2(U),0)\n#define B(U) texelFetch(iChannel1,ivec2(U),0)\n#define C(U) texelFetch(iChannel2,ivec2(U),0)\n#define D(U) texelFetch(iChannel3,ivec2(U),0)\n\n#define vel(v) (v)*inversesqrt(1.+dot(v,v))\n\n#define inside(v) ((v).x>0.&&(v).y>0.&&(v).x<R.x&&(v).y<R.y)\n\nfloat ln (vec3 p, vec3 a, vec3 b) { \n    return length(p-a-(b-a)*(dot(p-a,b-a)/dot(b-a,b-a)));\n}\n #define UIF (1.0 / float(0xffffffffU))\nuint baseHash(uvec2 p){\n    p = 1103515245U*((p >> 1U)^(p.yx));\n    uint h32 = 1103515245U*((p.x)^(p.y>>3U));\n    return h32^(h32 >> 16);\n}\nvec3 hash(vec2 x){\n    uint n = baseHash(floatBitsToUint(x));\n    uvec3 rz = uvec3(n, n*16807U, n*48271U);\n    return vec3((rz >> 1) & uvec3(0x7fffffffU))/float(0x7fffffff);\n}\n#define pi 3.141592659\n\nfloat ln (vec2 p, vec2 a, vec2 b) { \n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "Main {\n\n    Q = A(U);\n    vec4 bb = B(U);\n    vec2 m = vec2(0), n = Q.xy;\n    for (int x = -1; x <= 1; x++)\n    for (int y = -1; y <= 1; y++)\n    if (x*x+y*y<=4)\n    if (x!=0||y!=0) {\n        vec2 v = vec2(x,y);\n        vec4 q = A(U+v);\n        vec4 b = B(U+v);\n        if (inside(U+v))\n        Q.xy -= .01*q.w*(1.+length(b.xyz-bb.xyz))*v/dot(v,v);\n        m += 1./8.*(q.xy-n.xy);\n    }\n    Q.xy += .5*m.xy;\n    if (length(Q.xy)>1.) Q.xy = normalize(Q.xy);\n    if (U.x<1.||U.y<1.||R.x-U.x<1.||R.y-U.y<1.)Q.xy *= 0.;\n    if (iFrame < 1) {\n        Q = vec4(0,0,0,1);\n    }\n    \n    vec4 mo = D(vec2(0));\n    if (length(mo.xy-mo.zw)>0.) {\n       \n       vec2 v = (mo.xy-mo.zw)/5.;\n       if (length(v)>1.) v = normalize(v);\n       Q.xy += exp(-.25 *ln(U,mo.xy,mo.zw))*v;\n    } else {\n       if (iMouse.z>0.&&length(U-iMouse.xy)< 20.) Q.w = 10.,Q.xy=vec2(0);\n    }\n    \n    Q.xy *= .995;\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main {\n\nQ = A(U);\nvec4 dQ = vec4(0);\n#define K (1./8.)\nfor (int x = -1; x <= 1; x++)\nfor (int y = -1; y <= 1; y++)\nif (x!=0||y!=0) {\n    vec2 v = vec2(x,y);\n    vec2 W = U+v;\n    vec4 q = A(W);\n\n    vec2 a = vel(Q.xy),\n         b = vel(q.xy)+v;\n    float ab = dot(v,b-a);\n    if (inside(W)&&abs(ab)>0.) {\n        float i = dot(v,(0.5*v-a))/ab;\n        float j = .5+.1*clamp(1.-q.w,0.,1.);\n        float k = .5+.1*clamp(1.-Q.w,0.,1.);\n        float wa = K*Q.w*min(i,j)/j;\n        float wb = K*q.w*max(k+i-1.,0.)/k;\n        dQ += vec4(Q.xyz,1)*wa+vec4(q.xyz,1)*wb;\n    } else {\n        dQ += K*Q.w*vec4(Q.xyz,1);\n    }\n\n}\nif (dQ.w>0.) dQ.xyz /= dQ.w;\nQ = dQ;\nif (length(Q.xy)>1.) Q.xy = normalize(Q.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main {\n\nQ = A(U);\nvec4 O = B(U);\nvec4 dQ = vec4(0);\n#define K (1./8.)\nfor (int x = -1; x <= 1; x++)\nfor (int y = -1; y <= 1; y++)\nif (x!=0||y!=0) {\n    vec2 v = vec2(x,y);\n    vec2 W = U+v;\n    vec4 q = A(W);\n    vec4 o = B(W);\n\n    vec2 a = vel(Q.xy),\n         b = vel(q.xy)+v;\n    float ab = dot(v,b-a);\n    if (inside(W)&&abs(ab)>0.) {\n        float i = dot(v,(0.5*v-a))/ab;\n        float j = .5+.0*clamp(1.-q.w,0.,1.);\n        float k = .5+.0*clamp(1.-Q.w,0.,1.);\n        float wa = K*Q.w*min(i,j)/j;\n        float wb = K*q.w*max(k+i-1.,0.)/k;\n        dQ += vec4(O.xyz,1)*wa+vec4(o.xyz,1)*wb;\n    } else {\n        dQ += K*O.w*vec4(O.xyz,1);\n    }\n\n}\nif (dQ.w>0.) dQ.xyz /= dQ.w;\nQ = dQ;\nvec4 mo = D(U);\nif (length(mo.xy-mo.zw)==0.){\n    if (iMouse.z>0.&&length(U-iMouse.xy)< 20.) Q = .5 +.5*sin(iTime+vec4(1,2,3,4));\n}\nif (iFrame < 1) {\n    Q = vec4(.9);\n}\n\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// keep track of mouse\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 p = texture(iChannel0,fragCoord/iResolution.xy);\n    if (iMouse.z>0.) {\n        if (p.z>0.) fragColor =  vec4(iMouse.xy,p.xy);\n    \telse fragColor =  vec4(iMouse.xy,iMouse.xy);\n    }\n    else fragColor = vec4(-iResolution.xy,-iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}