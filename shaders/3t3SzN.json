{
    "Shader": {
        "info": {
            "date": "1580462773",
            "description": "Bifurcation diagram for the Logistic Map.",
            "flags": 32,
            "hasliked": 0,
            "id": "3t3SzN",
            "likes": 3,
            "name": "Logistic Map Bifurcation",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "map",
                "chaos",
                "logistic",
                "bifurcation",
                "logisticmap"
            ],
            "usePreview": 0,
            "username": "Txoka",
            "viewed": 344
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 Q, in vec2 U ){\n    float y=U.y/iResolution.y;\n\tint id=int(U.x);\n    float mindist=1e10;\n    for(int i=0;i<int(iResolution.y);i++){\n    \tfloat n=texelFetch(iChannel0,ivec2(id,i),0).x;\n    \tfloat dist=abs(n-y);\n   \t\tmindist=min(mindist,dist);\n    }\n    Q=vec4(1.-exp(-100.*mindist));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 Q, in vec2 U ){\n    float e=U.x/iResolution.x*4.;\n    float n=U.y/iResolution.y;\n    for(int i=0;i<400;i++)n=next(e,n);\n\tQ=vec4(n);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "float next(float e, float x){\n    return e*x*(1.-x);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}