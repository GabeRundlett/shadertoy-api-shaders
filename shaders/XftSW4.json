{
    "Shader": {
        "info": {
            "date": "1713928815",
            "description": "I like the pattern of polar rectangles orbiting, sort of sci fi looking. Here it looks retro",
            "flags": 0,
            "hasliked": 0,
            "id": "XftSW4",
            "likes": 4,
            "name": "Marble Focal Point",
            "published": 3,
            "tags": [
                "2d",
                "circles",
                "colorful",
                "marble",
                "arc",
                "sector"
            ],
            "usePreview": 0,
            "username": "isaacchurchill",
            "viewed": 207
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265\n\n\nvec3 palette(float i)\n{\n    return 0.5 + 0.5 * cos(i + vec3(0.0, 2.0 * PI / 3.0, 4.0 * PI / 3.0));\n}\n\nfloat sector(float r, float theta, float r1, float r2, float theta1, float theta2, float aa_dist)\n{\n    r = max(r, 0.001);\n    theta1 = mod(theta1 + PI, PI * 2.0) - PI;\n    theta2 = mod(theta2 + PI, PI * 2.0) - PI;\n    bool reverse = theta1 > theta2;\n    if (reverse) {\n        float temp = theta1;\n        theta1 = theta2;\n        theta2 = temp;\n    }\n    float r_grad = smoothstep(r1 - aa_dist, r1, r)\n                 * smoothstep(-r2 - aa_dist, -r2, -r);\n    float theta_grad = smoothstep(theta1 - aa_dist / r, theta1, theta)\n                     * smoothstep(-theta2 - aa_dist / r, -theta2, -theta);\n    if (reverse) {\n        theta_grad = 1.0 - theta_grad;\n    }\n    return r_grad * theta_grad;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy ) / iResolution.y;\n    float aa_dist = 4.0 / iResolution.y;\n\n    float theta = atan(uv.y, uv.x);\n    float r = length(uv);\n    \n    vec3 col = vec3(smoothstep(-1.0, 0.0, -r)) * 0.3 * (1.4 + sin(iTime));\n    for (float i = 0.0; i < 15.0; i++) {\n        float r1 = i * 0.15 + 0.1;\n        float r2 = r1 + 0.05;\n        float theta1 = iTime * (cos(i) + 0.1) * 3.0;\n        float theta2 = theta1 + i * 0.5 + 2.5;\n        float intensity = sector(r, theta, r1, r2, theta1, theta2, aa_dist);\n        vec3 hue = palette(i);\n        col = mix(col, hue * intensity, intensity);\n    }\n    \n    r *= 15.0;\n    if (r < 1.0) {\n        float inner_grad = 1.0 - r * r;\n        col = vec3(inner_grad);\n    }\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}