{
    "Shader": {
        "info": {
            "date": "1479911522",
            "description": "Simple exercise on working out a lens shader.",
            "flags": 0,
            "hasliked": 0,
            "id": "MtjSzc",
            "likes": 6,
            "name": "Lens Distortion Simple",
            "published": 3,
            "tags": [
                "distortion",
                "lens",
                "camera"
            ],
            "usePreview": 0,
            "username": "docwhite",
            "viewed": 1255
        },
        "renderpass": [
            {
                "code": "vec4 checker(vec2 coord, vec4 col1, vec4 col2)\n{\n    \n    int _x = int(floor(coord.x*140.0));\n    float x_mod = mod(float(_x), 2.0);\n    int x_intmod = int(x_mod);\n    \n    int _y = int(floor(coord.y*140.0));\n    float y_mod = mod(float(_y), 2.0);\n    int y_intmod = int(y_mod);\n    \n    if (x_intmod == 0 && y_intmod == 0)\n    {\n    \treturn col1;\n    }\n    else\n    {\n        return col2;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n\tvec4 a_colour = vec4(1.0, 0.0, 0.0, 1.0);\n    vec4 b_colour = vec4(0.0, 1.0, 0.0, 1.0);\n    \n    \n    float PI = 3.1415926535;\n    \n    float aperture = 80.0;\n    float apertureHalf = 0.5 * aperture * (PI / 180.0);\n    float maxFactor = sin(apertureHalf);\n    \n    vec2 xy = 2.0 * uv.xy - 1.0;\n    float d = length(xy);\n    \n    if (d < (2.0 - maxFactor))\n    {\n    \td = length(xy * maxFactor);\n        float z = sqrt(1.0 - d * d);\n        float r = atan(d, z) / PI;\n        float phi = atan(xy.y, xy.x);\n        uv.x = r * cos(phi) + 0.5;\n        uv.y = r * sin(phi) + 0.5;\n    }\n    else\n    {\n        uv = uv.xy;\n    \n    }\n\n    vec4 finalcol = checker(uv.xy, a_colour, b_colour);\n    fragColor = finalcol;\n    //fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    \n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}