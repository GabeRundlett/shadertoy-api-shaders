{
    "Shader": {
        "info": {
            "date": "1611604734",
            "description": "potat",
            "flags": 0,
            "hasliked": 0,
            "id": "ttVcRt",
            "likes": 36,
            "name": "Day 405",
            "published": 3,
            "tags": [
                "mdtmjvm"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 533
        },
        "renderpass": [
            {
                "code": "\n#define slices 180.\n\nconst float disp = 0.4;\n\nconst float eps = 0.01;\n\nconst float width = 0.00035;\n\nfloat fun(float p, float py){\n    \n    float f = sin(p + iTime + cos(py*0.05 + sin(p))*0.7)*sin(py*0.1 + iTime*0.2);\n    \n    //f = cos(p*0.4- iTime + py)*cos(p*0.4*sin(p) + iTime)*(sin(py + iTime));\n    //f = sin(p*0.5 + sin(py))*(cos(py*0.1 + iTime));\n    \n    f *= mix(\n        smoothstep(0.,1.,abs(p + sin(py)*0.1)),\n        smoothstep(0.,1.,abs(p + sin(py*0.3 + iTime)*0.1)),\n        0.5 + sin(iTime*0.4 )*0.5\n        );\n    \n    return f*disp;\n}\n\n\n\nfloat graph(float y, float fn0, float fn1, float pixelSize){\n  return smoothstep(pixelSize ,0., \n                    abs(fn0-y)/length(vec2((fn1-fn0)/eps,1.))- width);\n}\nfloat graphNoAbs(float y, float fn0, float fn1, float pixelSize){\n  return smoothstep(pixelSize,0., \n                    -(fn0-y)/length(vec2((fn1-fn0)/eps,1.)) - width);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    \n    vec3 col = vec3(0);\n\n    \n    float pixelSize = dFdx(uv.x)*1.25;\n    \n    for(float i = 0.; i < slices; i++ ){\n        vec2 p = uv + vec2(0.,i/slices*2. - 0.8);\n        \n        //float funIdx = p.x*4. + sin(p.y*i/slices*2. + iTime)*1.5*sin(p.x - iTime);\n        float funIdx = p.x;\n        \n        col -= graphNoAbs( p.y + 0.0, fun(funIdx,i), fun(funIdx+eps,i), pixelSize);\n        col = max(col,0.);\n        col = mix(col, vec3(1), graph( p.y, fun(funIdx,i), fun(funIdx+eps,i), pixelSize ));\n        \n    }\n    \n    \n    col = 1. - col;\n    \n    \n    col = pow(col,vec3(0.4545));\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}