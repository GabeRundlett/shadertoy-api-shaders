{
    "Shader": {
        "info": {
            "date": "1654610160",
            "description": "Just a simple chroma key shader for greenscreens.",
            "flags": 0,
            "hasliked": 0,
            "id": "NsKyRw",
            "likes": 1,
            "name": "Britney Inside",
            "published": 3,
            "tags": [
                "simple",
                "chroma",
                "screen",
                "greenscreen",
                "shader",
                "green",
                "key",
                "mask",
                "alpha"
            ],
            "usePreview": 0,
            "username": "Sergeindamix",
            "viewed": 194
        },
        "renderpass": [
            {
                "code": "#define s(x) smoothstep(0.15, 0.3, x * 1.1 - 0.1)\n\nvec3 chromaKey(vec3 x, vec3 y){\n\tvec2 c = s(vec2(x.g - x.r * x.y, x.g));\n    \n    return mix(x, y, c.x * c.y);\n}\n\nvec3 getTexture(vec2 p){\n\tvec4 s = texture(iChannel0, p);\n    return s.xyz * s.w;\n}\n\nvec3 getTexture1(vec2 p){\n\tvec4 s = texture(iChannel1, p);\n    return s.xyz * s.w;\n}\nconst mat2 rot = mat2( 0.6,  0.2, -0.2,  0.6 );\n\nvec2 hash( float n )\n{\n    float sn = sin(n);\n    return fract(vec2(sn,sn*42125.13));\n}\n\nfloat circleNoise( vec2 uv )\n{\n    float uv_y = floor(uv.y);\n    uv.x += uv_y*.31;\n    vec2 f = fract(uv);\n    vec2 h = hash(floor(uv.x)*uv_y);\n    float m = (length(f-.25-(h.x*.5)));\n    float r = h.y*.25;\n    return m = smoothstep(r-.10*r,r,h.x);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv *= sin(iTime*.5)+2.0;\n    uv += iTime*.4;\n    vec2 orig=uv;\n    vec2 offset=vec2(cos(iTime)*.5,sin(iTime)*.25);\n    uv=orig+=offset;\n    \n    \n    float m = 1.0;\n    for(float i=1.;i<=3.;i++)\n    {\n    \tuv = uv*rot*2.0+1121.13;\n    \tm *= clamp(circleNoise(uv)+.25*i,0.,1.);  \n    }    \n    fragColor = vec4(m);\n    if(fragColor.x>=.125)fragColor=texture(iChannel0,orig);\n\tif(fragColor.x>=.075 && fragColor.x<=.09375)fragColor=mix(fragColor,texture(iChannel3,orig),offset.x);\n\tif(fragColor.x>=.5)fragColor=texture(iChannel2,orig);\n\t//if(fragColor.x<=.06)fragColor=texture(iChannel1,orig);\n\t\n  \n    \n    vec3 background = getTexture1(uv);\n    \n    \n    uv=(fragCoord.xy -.5* iResolution.xy)/iResolution.y;\n    float mask = smoothstep(0.,.1,1.-length(uv)-.5);\n    \n    vec3 color = getTexture(uv);\n         color = chromaKey(color, background);\n         \n         vec2 LEFTTOP =vec2(.5,.5);\n         vec4 lt;\n         vec4 lb;\n         vec4 rt;\n         vec4 rb;\n         \n         //LT\n        if(orig.x>=LEFTTOP.x || orig.y<=LEFTTOP.y){lt=texture(iChannel0,orig/LEFTTOP);}\n        //LB \n        if(orig.x>=LEFTTOP.x || orig.y>=LEFTTOP.y){lb=texture(iChannel1,orig/LEFTTOP);}\n        //RT\n        if(orig.x<=LEFTTOP.x || orig.y<=LEFTTOP.y){rt=texture(iChannel2,orig/LEFTTOP);}\n        //RB\n        if(orig.x<=LEFTTOP.x || orig.y>=LEFTTOP.y){rb=texture(iChannel3,orig/LEFTTOP);}\n        \n        \n        \n        if( lt.x==0. )color=chromaKey(texture(iChannel0,orig/LEFTTOP).rgb, lb.rgb);\n        if( rt.x==0. )color=chromaKey(texture(iChannel0,orig/LEFTTOP).rgb, rb.rgb);\n        if( lb.x==0.)color=chromaKey(texture(iChannel2,orig/LEFTTOP).rgb, rb.rgb);\n        if( rb.x==0.)color=chromaKey(texture(iChannel2,orig*.5+.0125).rgb, lb.rgb);\n    \n\t//fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 2,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    },
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}