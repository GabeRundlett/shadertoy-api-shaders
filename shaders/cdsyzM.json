{
    "Shader": {
        "info": {
            "date": "1686681779",
            "description": "A colorful spiral",
            "flags": 32,
            "hasliked": 0,
            "id": "cdsyzM",
            "likes": 14,
            "name": "BC: Color Sprial",
            "published": 3,
            "tags": [
                "spiral",
                "color",
                "colorsphere"
            ],
            "usePreview": 0,
            "username": "BackwardsCap",
            "viewed": 284
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0, uv).rgb;\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "mat2 rot(float a)\n{\n    return mat2(cos(a), sin(a), -sin(a), cos(a));\n}\n\nfloat circle(vec2 p, float r)\n{\n    return smoothstep(3./iResolution.y,0.,length(p)-r);\n}\n\nvec3 color(vec2 p, float r, float off)\n{\n    vec2 auv = vec2(atan(p.x,p.y), length(p));\n    float time = iTime + off;\n    float o = sin(time+p.x*3.*cos(auv.x*2.)*10.)*0.01;\n    float f = cos(time - auv.x*2.);\n    float s = r + cos(time+p.y)*o*r;\n\n    return vec3(circle(p + o, s),\n                circle(p - o * f, s),\n                circle(p - o, s));\n}\n\nvec3 drawLines(vec2 p, float offset, float width)\n{\n    vec3 c = color(p, width, offset);\n    c *= (1.0 - color(p, width * 0.99, offset));\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    uv /= 8.0;\n        \n    vec3 col = drawLines(uv, 0.0, 0.1);\n    \n    float iter = 40.0;\n    for(float i=0.0;i<iter;i++)\n    {\n        uv *= rot(3.1415927/iter);\n        uv *= 1.01;\n        col += drawLines(uv, i/iter, 0.1);\n    }\n    \n    col /= 3.0;\n            \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0, uv).rgb;\n    \n    float fade = .45;\n    float up = 1.5;\n    float sway = 0.005;\n    col += texture(iChannel1, (uv-(up/8.75+vec2(cos(iTime),sin(iTime))*sway))*up).bgr * fade;\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}