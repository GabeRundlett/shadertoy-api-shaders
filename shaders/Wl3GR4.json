{
    "Shader": {
        "info": {
            "date": "1581671952",
            "description": "Not the effect I was going for but sorta cool. Not really optimized so it might be slow.",
            "flags": 0,
            "hasliked": 0,
            "id": "Wl3GR4",
            "likes": 5,
            "name": "Secret Box",
            "published": 3,
            "tags": [
                "3d",
                "glass",
                "oops"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 386
        },
        "renderpass": [
            {
                "code": "// Plento\nvec2 R;\n\n#define FAR 32.\n\nconst float pi = 3.14159;\n\nmat2 rot(float a){return mat2(cos(a), -sin(a), sin(a), cos(a));}\n\nfloat sdBox( vec3 p, vec3 b ){\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat opsub( float d1, float d2 ) { return max(-d1,d2); }\n\nfloat minDist = 999.;\nfloat mat = -1.0;\n\nvoid cd(float tDist, float m, out float tmat){\n\tif(tDist <minDist){\n\t\tminDist = tDist;\n\t\tmat = m;\n\t\ttmat = m;\n\t}\n}\n\nconst vec3 gd = vec3(1.4, 0.5, 0.5);\n\nfloat frame(vec3 p){\n    float d = sdBox(p, gd+.05);\n    d = opsub(sdBox(p, vec3(gd.x-.05, gd.y-.05, gd.z + 1.)),d );\n    d = opsub(sdBox(p, vec3(gd.x+1., gd.y-.05, gd.z -.05)),d );\n    d = opsub(sdBox(p, vec3(gd.x-.05, gd.y+1., gd.z -.05)),d );\n    \n    return d;\n}\n\nvec2 map(vec3 rp){\n    float d = 999.;\n    float hmat = 0.;\n    \n \tvec3 p0 = rp - vec3(0.0, 0.0, 3.0);\n    vec3 p1 = rp - vec3(0.0, 0.0, 3.0);\n    \n    p0.xy *= rot(iTime*.4);\n    p0.xz *= rot(iTime*.3);\n    p0.yz *= rot(-sin(iTime)*.2);\n    \n    d = min(d, abs(sdBox(p0, gd)) - 0.005);\n    cd(d, 0., hmat);\n    \n    d = min(d, frame(p0));\n    cd(d, 2., hmat);\n    \n    d = min(d, length(p1)-.1);\n    cd(d, 1., hmat);     \n    \n    rp.xy *= rot(iTime);\n    vec3 p2 = rp - vec3(.3*sin(iTime*2.), 0.0,3. + .3*cos(iTime*2.) );\n    d = min(d, length(p2)-.05);\n    \n    \n    cd(d, 3., hmat); \n    \n    return vec2(d, hmat);\n}\nvec3 normal( in vec3 pos ){\n    vec2 e = vec2(0.002, -0.002);\n    return normalize(\n        e.xyy * map(pos + e.xyy).x + \n        e.yyx * map(pos + e.yyx).x + \n        e.yxy * map(pos + e.yxy).x + \n        e.xxx * map(pos + e.xxx).x);\n}\n\nvec2 march(vec3 rd, vec3 ro){\n \tfloat t = 0.;   \n    vec2 d = vec2(0);\n    \n    for(int i = 0; i < 64; i++){\n    \td = map(ro + rd*t); \t   \n        \n        if(abs(d.x) < 0.002)break;\n        if(t > FAR){t = FAR;break;}\n        t += d.x * 0.9;\n    }   \n    \n    return vec2(t, d.y);\n}\nvec3 color(vec3 p, vec3 rd, vec3 n, float t, float m){\n    vec3 lp = vec3(0., 4.0, -5.0);\n    vec3 ld = normalize(lp-p);\n   \tvec3 ref = reflect( rd, n );\n    \n    float lgd = length(lp - p);\n    float faloff = 1.-exp(-(4. / lgd));\n    \n    float spec = pow(max(dot(normalize(reflect(ld, n)), rd), 0.), 32.);\n    float dom = smoothstep(-0.2, 0.2, ref.y);\n    float dif = max(dot(n, ld), .0);\n    \n    vec3 col = vec3(0);    \n    vec3 lig = vec3(0);\n    \n    \n    if(t < FAR){\n    \tif(m == 0.)col = vec3(0.2, 0.3, 0.3);\n    \tif(m == 1.)col = vec3(1.0, 0., 0.);\n    \tif(m == 2.)col = vec3(.01);\n    \tif(m == 3.)col = vec3(0., 0.4, 1.);\n    \n    \tlig += .15*dom*vec3(0.4,0.6,1.3)*dom;\n    \tlig += 2.*dif*vec3(1., 1., 1.) * faloff;\n    \tcol *= lig;\n    \tcol += vec3(0.85, 0.83, 0.85) * spec * .2;\n    }\n    else col = vec3(.2);\n    \n\treturn col;   \n}\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    R = iResolution.xy;\n    vec2 uv = vec2(u.xy - 0.5*R.xy)/R.y;\n   \n    vec3 rd = normalize(vec3(uv, 1.0));\n    rd = normalize(vec3(uv, 1.0 - dot(uv, uv) * 0.5));\n    vec3 ro = vec3(0);\n    \n    vec2 t = march(rd, ro);\n    vec3 p = ro+rd*t.x;\n    vec3 n = normal(p);\n    \n    vec3 col = vec3(0);\n    \n    float na = 0.;\n    \n    vec3 acol = vec3(0);\n    vec3 bcol = vec3(0);\n    vec3 ccol = vec3(0);\n    \n    col = color(p, rd, n, t.x, t.y);\n    na++;\n    \n    if(t.y == 0.){\n        minDist = 999.;\n        mat = -1.;\n        \n        p -= n*.18;\n        \n        rd = refract(rd, n, .5);\n        \n        vec2 t2 = march(rd, p);\n    \tvec3 p2 = p+rd*t2.x;\n    \tvec3 n2 = normal(p2);   \n        \n        col += color(p2, rd, n2, t2.x, t2.y);\n        na++;\n        \n        /*\n        if(t2.y == 0.){\n            minDist = 999.;\n        \tmat = -1.;\n        \tcol.b+=.1;\n            p2 -= n2*.1;\n            \n            rd = refract(rd, n2, .93);\n            \n            vec2 t3 = march(rd, p2);\n    \t\tvec3 p3 = p2+rd*t3.x;\n    \t\tvec3 n3 = normal(p3);\n            \n            col += color(p3, rd, n3, t3.x, t3.y);\n            na++;\n           \n        } \n*/\n    }\n    col /= na;\n    \n    \n    \n    vec2 v = u / R;\n    v *=  1. - v.yx;\n    float vig = v.x*v.y * 15.; \n    vig = pow(vig, .35); \n    col *= vig;\n    \n    f = vec4(sqrt(clamp(col, 0.0, 1.0)), 1.0);\n}\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}