{
    "Shader": {
        "info": {
            "date": "1474392598",
            "description": "Interpolating the scale of a perturbation (top) without creating parasitic motion (as in bottom).",
            "flags": 0,
            "hasliked": 0,
            "id": "MlGGW1",
            "likes": 6,
            "name": "Tuning noise without sliding pb3",
            "published": 3,
            "tags": [
                "noise",
                "filtering",
                "interpolation",
                "smartblend"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1327
        },
        "renderpass": [
            {
                "code": "// for scaling issue, see https://www.shadertoy.com/view/llGGW1\n\n\n// --- noise from from IQ's https://www.shadertoy.com/view/XdXGW8\nvec2 hash( vec2 p )\n{\n\tp = vec2( dot(p,vec2(127.1,311.7)),\n\t\t\t  dot(p,vec2(269.5,183.3)) );\n\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise(  vec2 p )\n{\n    vec2 i = floor( p ), f = fract( p ), u = f*f*(3.-2.*f);\n    return mix( mix( dot( hash( i + vec2(0,0) ), f - vec2(0,0) ), \n                     dot( hash( i + vec2(1,0) ), f - vec2(1,0) ), u.x),\n                mix( dot( hash( i + vec2(0,1) ), f - vec2(0,1) ), \n                     dot( hash( i + vec2(1,1) ), f - vec2(1,1) ), u.x), u.y);\n}\n// ---\n\n\nvoid mainImage( out vec4 O, vec2 uv )\n{\n    vec2 R = iResolution.xy,\n         U = uv/R;\n    O-=O; if (abs(U.y-.5)<1./R.y) return;\n    \n    float l = 1.+4.*(.5-.5*cos(10.*U.x));                             // noise scaling\n    if (U.y<.5)\n        O += noise((uv-R/2.)/exp2(l));\n    else\n        O +=   mix(noise(uv/exp2(floor(l))),noise(uv/exp2(ceil(l))),fract(l));\n   \n    O = vec4(.5+.5*sin(20.*(U.x+U.y)+O.x));                            // marble pattern\n    O = sqrt(O);                                                       // gamma correction\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}