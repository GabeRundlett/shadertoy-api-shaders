{
    "Shader": {
        "info": {
            "date": "1571927627",
            "description": "a thing i made while eating beans at *2* AM, not 3 AM, big difference.",
            "flags": 32,
            "hasliked": 0,
            "id": "tlBXWc",
            "likes": 8,
            "name": "feedback fractal",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "feedback"
            ],
            "usePreview": 0,
            "username": "unnick",
            "viewed": 389
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = sin(texelFetch(iChannel0, ivec2(fragCoord), 0).x * TAU * vec3(1.,1.1,1.2)).xyzz * .5 + .5;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define TAU 6.283184\n\nmat2 rotMat2d(float a) {\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c,s,-s,c);\n}\n\nvec2 r2smpl(int i) {\n    return fract(vec2(1.6180339, 1.3247179) * float(i));\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //yeah, good luck trying to understand this.\n    vec2 pos = ((fragCoord + r2smpl(iFrame+int(dot(fragCoord, vec2(34., 43.)))) * 2. - 1.)*2. - iResolution.xy) / iResolution.y;\n    vec2 mpos = (iMouse.xy*2. - iResolution.xy) / iResolution.y;\n    pos = abs(pos);\n    if(pos.x < pos.y) pos.xy = pos.yx;\n    if(dot(pos,pos) < .1) pos /= dot(pos,pos) * (1. / .1);\n    pos.x -= .01;\n    pos.y += mpos.y * .5;\n    pos = vec2(pos.x*pos.x - pos.y*pos.y, 2.*pos.x*pos.y);\n    if(dot(pos,pos) < .2) pos /= dot(pos,pos) * (1. / .2);\n    pos *= rotMat2d(mpos.x) * 1.1;\n    vec2 uv = pos * iResolution.y / iResolution.xy * .5 + .5;\n    float tmp = texelFetch(iChannel0, ivec2(fragCoord), 0).x * .7;\n    tmp += (texture(iChannel0, uv) + .03).x * .3;\n    tmp = min(tmp, 3.);\n    tmp *= (uv.x >= 0. && uv.x < 1. ? 1. : 0.);\n    tmp *= (uv.y >= 0. && uv.y < 1. ? 1. : 0.);\n    fragColor = vec4(tmp);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}