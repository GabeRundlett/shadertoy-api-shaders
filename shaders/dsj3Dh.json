{
    "Shader": {
        "info": {
            "date": "1667578783",
            "description": "A simple and commented out slit scan shader",
            "flags": 34,
            "hasliked": 0,
            "id": "dsj3Dh",
            "likes": 1,
            "name": "Simple Slit Scan",
            "published": 3,
            "tags": [
                "slitscan",
                "men"
            ],
            "usePreview": 0,
            "username": "Trixelized",
            "viewed": 364
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // We don't do anything special here\n    // Simply draw Buffer A\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define extra_frame_delay 120.0\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // get the screen UV and the vertical 'slit' position\n    vec2 uv = fragCoord/iResolution.xy;\n    float slitpos = mod(float(iFrame), iResolution.y + extra_frame_delay);\n    \n    // sample the previous frame\n    vec3 last = texture(iChannel0, uv).rgb;\n    vec3 col = last;\n    \n    // draw the 1-pixel thin new slit\n    float slit = (step(slitpos - fragCoord.y, 1.0));\n    col = mix(col, texture(iChannel1, uv).rgb, slit);\n    \n    // draw the red bar above the slit\n    float bar = (step(slitpos - fragCoord.y, 0.0) * step(-9.0, slitpos - fragCoord.y));\n    col = mix(col, vec3(1.0, 0.0, 0.0), bar);\n    \n    fragColor = vec4(col, 1.0);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}