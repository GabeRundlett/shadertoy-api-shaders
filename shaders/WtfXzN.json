{
    "Shader": {
        "info": {
            "date": "1562204475",
            "description": "If you want to learn about dynamical thermal systems and differential equations and graphics programming, this would be a rewarding activity to do:\n[url]http://wyattflanders.com/AreYouKiddingMe.pdf[/url]\n",
            "flags": 32,
            "hasliked": 0,
            "id": "WtfXzN",
            "likes": 17,
            "name": "Wave Lesson",
            "published": 3,
            "tags": [
                "tutorial",
                "differentialequations",
                "dynamicalsystems"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 800
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 color, in vec2 U )\n{\n   vec4 a = texture(iChannel0,U/iResolution.xy);\n   color.x = (.1*log(1.+a.x*a.x));\n   color.y = (.1*log(1.+.1*a.x*a.x+.1*a.z*a.z));;\n   color.z = (.1*log(1.+a.z*a.z));\n   \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 color, in vec2 U )\n{\n   vec4 average = (\n       texture(iChannel0,(U+vec2(1,0))/iResolution.xy)+\n       texture(iChannel0,(U+vec2(0,1))/iResolution.xy)+\n       texture(iChannel0,(U-vec2(1,0))/iResolution.xy)+\n       texture(iChannel0,(U-vec2(0,1))/iResolution.xy))/4.;\n   color = texture(iChannel0,U/iResolution.xy);\n   #define k .15\n    /**\n     // Diffusion\n       color.x += k*(average.x - color.x);\n\t**/\n    /**\n        Wave Equation\n\t\tcolor.y += average.x - color.x;\n   \t\tcolor.x += k*color.y;\n    **/\n    /**\n\t // Quantum Wave\n\t\tcolor.y += average.x - color.x - color.x;\n   \t\tcolor.x += k*color.y;\n\t**/\n    /**\n   \t // Gravity :\n    \tcolor.y += average.x - color.x - sign(color.x);\n   \t\tcolor.x += k*color.y;\n\n    **/\n    /**/\n     // Electrodynamics :\n       color.y += average.x - color.x;\n       color.w += average.z - color.z;\n       if (length(color.xz) > 0.) color.yw -= color.xz/length(color.xz);\n       //if (length(color.x) > 0.) color.y += .5*color.x/length(color.x);\n       //if (length(color.z) > 0.) color.w += .5*color.z/length(color.z);\n       color.x += k*color.y;\n       color.z += k*color.w;\n\t/**/\n    /**\n\t // Chromodynamics : \n\t\thttps://www.shadertoy.com/view/ttXXRr\n\t**/\n    /**\n\t // Unification : \n\t\thttps://www.shadertoy.com/view/wllSRr\n\t**/\n   if ((iMouse.z>0. && length(iMouse.xy-U) < 15.)||(iFrame < 50 && length(U-0.5*iResolution.xy)<60.))\n        color.xz = vec2(cos(3.*iTime),sin(3.*iTime));\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}