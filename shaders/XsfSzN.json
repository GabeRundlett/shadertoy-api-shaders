{
    "Shader": {
        "info": {
            "date": "1397238146",
            "description": "SPACE toggles texture and grid\nR toggles orthogonal or bi-spiral",
            "flags": 16,
            "hasliked": 0,
            "id": "XsfSzN",
            "likes": 0,
            "name": "spiral distortion",
            "published": 3,
            "tags": [
                "distortion"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 939
        },
        "renderpass": [
            {
                "code": "\nbool keyToggle(int ascii) \n{\treturn (texture(iChannel2,vec2((.5+float(ascii))/256.,0.75)).x > 0.);  }\n\n// --- noise functions from https://www.shadertoy.com/view/XslGRr\n// Created by inigo quilez - iq/2013\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nmat3 m = mat3( 0.00,  0.80,  0.60,\n              -0.80,  0.36, -0.48,\n              -0.60, -0.48,  0.64 );\n\nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\n    f = f*f*(3.0-2.0*f);\n\n    float n = p.x + p.y*57.0 + 113.0*p.z;\n\n    float res = mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                        mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y),\n                    mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                        mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n    return res;\n}\n\nfloat fbm( vec3 p )\n{\n    float f;\n    f  = 0.5000*noise( p ); p = m*p*2.02;\n    f += 0.2500*noise( p ); p = m*p*2.03;\n    f += 0.1250*noise( p ); p = m*p*2.01;\n    f += 0.0625*noise( p );\n    return f;\n}\n// --- End of: Created by inigo quilez --------------------\n\nfloat mynoise(vec3 p)  { return 1.-abs(2.*noise(p)-1.); }\n\nvec3 advec(vec3 p, vec2 offset, float t) \n{ \n\treturn p/vec3(1.+10.*t*iMouse.y/iResolution.y,1.,1.);\n\t//\treturn vec3(p.xy*mix(vec2(1.),offset,t),0.); \n}\n\t\nfloat mulnoise(vec2 pos, vec2 offset) {\n    float f=1.,q=1., r = pow(2.02,.2);\n\tvec3 p=vec3(pos,0.5);\n\tfor (int i=0; i<16; i++) {\n    \tf  *= 1.54*mynoise( advec(p,offset,q) ); \n\t\tp = p*r; \n\t\t//p = m*p*r; \n\t\tq *= 1./r;\n\t}\n    return f;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.* (fragCoord.xy / iResolution.y-vec2(.9,.5));\n\tfloat r = length(uv), a = atan(uv.y, uv.x);\n\tuv = vec2(.5+a/6.283,r); // mappemonde\n\n\tvec2 mouse = 3.1415*vec2(1.,.5)*iMouse.xy/ iResolution.xy, c=cos(mouse),s=sin(mouse);\n\tif (!keyToggle(82)) \n\t  uv *=  mat2(c.x,-s.x, s.x,c.x);\n\telse \n\t\tuv *=  mat2(c.x,s.x, s.x,c.x);\n\tuv *= vec2(1.,3.1415);\n\tvec2 offset = vec2(c.y,s.y)/max(abs(c.y),abs(s.y)); // ((abs(c.y)+abs(s.y))/sqrt(2.));\n\t// uv *= offset;\n\tvec3 col ;\n\n\tif (!keyToggle(32)) {\n\t\tuv *= offset;\n\t\tcol.rg = pow(abs(cos(uv*30.)),vec2(16.));\n\t\tvec2 p = pow(abs(cos(uv*30.*5.)),vec2(24.));\n\t\tcol = col + (1.-col.r-col.g)*vec3(p.x+p.y);\n\t} else \n\t\tcol = vec3(.1*mulnoise(vec2(213.123,-546.456)+10.*uv,offset));\n\t\t//col = texture(iChannel0,uv).rgb;\n\n\tfragColor.rgb = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}