{
    "Shader": {
        "info": {
            "date": "1656521729",
            "description": "An animation for the NEW CHITOSE AIRPORT GIF AWARD 2022\nThe view from the passenger window.",
            "flags": 0,
            "hasliked": 0,
            "id": "sddfWN",
            "likes": 10,
            "name": "The passenger window",
            "published": 3,
            "tags": [
                "newchitose2022gif"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 239
        },
        "renderpass": [
            {
                "code": "#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\n// thx iq! https://iquilezles.org/articles/distfunctions/\nfloat smin( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); \n}\n\n// thx iq! https://iquilezles.org/articles/distfunctions2d/\nfloat sdBox(vec2 p, vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvec2 Hash22(vec2 p) {\n    p = fract(p*vec2(234.56,789.34));\n    p+=dot(p,p+34.56);\n    return fract(p+p);\n}\n\nfloat planeBody(vec2 p){\n    vec2 prevP = p;\n    float w = 0.15;\n    p.x -= clamp( p.x, -w, w );\n    float d = length(p)-0.05;\n    p = prevP;\n    float a = radians(-75.0);\n    p.y+=0.04;\n    float mask = dot(p,vec2(cos(a),sin(a)));\n    d = max(mask,d);\n    p = prevP;\n    \n    p.x+=0.19;\n    p.y+=0.02;\n    p.y*=2.0;\n    float d2 = length(p)-0.04;\n    \n    d = smin(d,d2,0.05);\n    \n    return d;\n}\n\nfloat planeWingL(vec2 p){\n    vec2 prevP = p;\n    float d = sdBox(p,vec2(0.07,0.08));\n    \n    float a = radians(20.0);\n\n    p.x+=0.03;\n    float mask = dot(p,vec2(cos(a),sin(a)));\n    d = max(-mask,d);\n    p = prevP;\n    \n    a = radians(10.0);\n    p.x-=0.03;\n    mask = dot(p,vec2(cos(a),sin(a)));\n    d = max(mask,d);\n    \n    return d;\n}\n\nfloat planeWingL_rear(vec2 p){\n    vec2 prevP = p;\n    float d = sdBox(p,vec2(0.06,0.03));\n    \n    float a = radians(40.0);\n\n    p.x+=0.03;\n    float mask = dot(p,vec2(cos(a),sin(a)));\n    d = max(-mask,d);\n    p = prevP;\n    \n    a = radians(30.0);\n    p.x-=0.03;\n    mask = dot(p,vec2(cos(a),sin(a)));\n    d = max(mask,d);\n    \n    return d;\n}\n\nfloat planeWingR(vec2 p){\n    vec2 prevP = p;\n    float d = sdBox(p,vec2(0.07,0.05));\n    \n    float a = radians(-20.0);\n\n    p.x+=0.03;\n    float mask = dot(p,vec2(cos(a),sin(a)));\n    d = max(-mask,d);\n    p = prevP;\n    \n    a = radians(-10.0);\n    p.x-=0.03;\n    mask = dot(p,vec2(cos(a),sin(a)));\n    d = max(mask,d);\n    \n    return d;\n}\n\nvec3 plane(vec2 p, vec3 col){\n    p.x = mod(p.x,1.2)-0.6;\n    \n    vec2 prevP = p;\n    float d = planeBody(p);\n    col = mix(col,vec3(1.0),S(d,0.0));\n    \n    // front window\n    d = sdBox(p-vec2(-0.18,0.02),vec2(0.03,0.012));\n    d = max(planeBody(p),d);\n    col = mix(col,vec3(0.8,0.9,1.0),S(d,0.0));\n    \n    // passenger windows\n    p.x=abs(p.x)-0.02;\n    p.x=abs(p.x)-0.02;\n    p.x=abs(p.x)-0.02;\n    p.x=abs(p.x)-0.02;\n    d = sdBox(p-vec2(0.0,0.02),vec2(0.003,0.003))-0.01;\n    col = mix(col,vec3(0.8,0.9,1.0),S(d,0.0));\n    \n    p = prevP;\n    d = sdBox(p-vec2(-0.12,0.005),vec2(0.015,0.03));\n    col = mix(col,vec3(0.95),S(d,0.0));\n    \n    // body paint\n    \n    d = sdBox(p-vec2(0.0,-0.06),vec2(0.3,0.03));\n    d = max(planeBody(p),d);\n    col = mix(col,vec3(0.2,0.6,1.),S(d,0.0));\n    \n    p = prevP;\n    p.x+=0.04;\n    p.y+=0.09;\n    d = planeWingL(p);\n    col = mix(col,vec3(0.9),S(d,0.0));\n    p = prevP;\n    \n    p.x+=0.04;\n    p.y-=0.1;\n    d = planeWingR(p);\n    col = mix(col,vec3(0.9),S(d,0.0));\n    p = prevP;\n    \n    p.x-=0.16;\n    p.y-=0.08;\n    p.x*=1.5;\n    p.y*=1.4;\n    d = planeWingR(p);\n    col = mix(col,vec3(0.9),S(d,0.0));\n    \n    p = prevP;\n    \n    p.x-=0.17;\n    p.y+=0.01;\n    p.x*=1.5;\n    d = planeWingL_rear(p);\n    col = mix(col,vec3(0.9),S(d,0.0));\n    \n    return col;\n}\n\nvec3 airship(vec2 p, vec3 col){\n    p.x+=0.6;\n    p.x = mod(p.x,1.2)-0.6;\n    p.y+=sin(iTime*0.5)*0.03;\n    vec2 prevP = p;\n\n    p.x-=0.16;\n    float d = sdBox(p,vec2(0.03,0.08));\n    float a = radians(-30.0);\n    p.y = abs(p.y)-0.04;\n    p.y -=0.05;\n\n    float mask = dot(p,vec2(cos(a),sin(a)));\n    d = max(-mask,d);\n    col = mix(col,vec3(0.3,0.7,1.0),S(d,0.0));\n    p = prevP;\n\n    p.y+=0.1;\n    d = sdBox(p,vec2(0.06,0.03));\n    a = radians(25.0);\n    p.x+=0.04;\n    mask = dot(p,vec2(cos(a),sin(a)));\n    d = max(-mask,d);\n    col = mix(col,vec3(0.3,0.7,1.0),S(d,0.0));\n\n    p.y+=0.005;\n    float d2 = sdBox(p,vec2(0.05,0.008));\n    d2 = max(d,d2);\n    col = mix(col,vec3(0.6,0.9,1.0),S(d2,0.0));\n\n    p = prevP;\n    \n\n    p.x*=0.5;\n    p.y*=1.2;\n    d = length(p)-0.1;\n    col = mix(col,vec3(1.0,0.95,0.90),S(d,0.0));\n    \n    p.y*=2.5;\n    d = length(p)-0.1;\n    col = mix(col,vec3(0.3,0.7,1.0),S(d,0.0));\n    p = prevP;\n    \n    return col;\n}\n\nfloat cloud(vec2 p, float r){\n    vec2 prevP = p;\n    p.x = abs(p.x)-0.02;\n    float d = length(p)-0.04;\n    p = prevP;\n    p.y-=0.06;\n    p.x-=0.06;\n    \n    vec2 n = Hash22(vec2(r));\n    vec2 p2 = sin(n*iTime*5.0)*0.02;\n    \n    float d2 = length(p-p2)-0.05;\n    d = smin(d,d2,0.05);\n    p.x+=0.06;\n    p.y-=0.01;\n    \n    n = Hash22(vec2(r));\n    p2 = sin(n*iTime*4.5)*0.02;    \n    \n    d2 = length(p-p2)-0.05;\n    d = smin(d,d2,0.05);\n    \n    p = prevP;\n    p.y-=0.025;\n    p.x-=0.02;\n    p.x = abs(p.x)-0.08;\n    d2 = length(p)-0.05;\n    d = smin(d,d2,0.03);\n    return d;\n}\n\nvec3 clouds(vec2 p, vec3 col, float n){\n    p.x = mod(p.x,0.8)-0.4;\n    vec2 prevP = p;\n    float d = cloud(p,n);\n    col = mix(col,vec3(0.98),S(d,0.0));\n    d = abs(cloud(p,n))-0.005;\n    col = mix(col,vec3(0.9),S(d,0.0));\n    return col;\n}\n\nvec3 staticPassengerWindow(vec2 p, vec3 col){\n    p.x+=0.6;\n    p.x = mod(p.x,1.2)-0.6;\n    float mask = sdBox(p,vec2(0.25,0.35))-0.05;\n\n    col = mix(col,vec3(1.0),S(mask,0.0));\n    \n    float d = sdBox(p-vec2(0.0,0.0),vec2(0.25,0.35))-0.05;\n\n    d = max(mask,d);\n    col = mix(col,vec3(0.9),S(d,0.0));\n    d = sdBox(p-vec2(0.0,-0.35),vec2(0.1,0.01));\n    col = mix(col,vec3(0.8),S(d,0.0));\n    \n    d = abs(sdBox(p,vec2(0.26,0.36))-0.05)-0.02;\n    col = mix(col,vec3(0.85),S(d,0.0));\n    return col;\n}\n\nfloat cubicInOut(float t) {\n  return t < 0.5\n    ? 4.0 * t * t * t\n    : 0.5 * pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\nfloat getTime(float t, float duration){\n    return clamp(t,0.0,duration)/duration;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 prevUV = uv;\n    \n    float glitchBlock = 30.0;\n    vec2 uv2 = fract(uv*glitchBlock)-0.5;\n    vec2 id = floor(uv2);\n    \n    vec2 n2 = fract(sin(id*123.456)*789.125);\n    n2+=dot(id.x,id.y*567.89);\n    \n    float glitchDist = 0.02;\n    float glitchTime = iTime*10.0;\n    uv.x-=(fract(floor(uv.y+n2.y*glitchBlock)*glitchTime)*glitchDist);\n    uv.x+=sin(floor(uv.y*glitchBlock*10.0)*iTime*30.)*0.01;\n    \n    vec2 prevMainUV = uv;\n    \n    \n    uv = prevMainUV;\n    vec3 col = mix(vec3(0.8,0.9,1.0),vec3(0.5,0.8,0.9),uv.y+0.7);\n    float d = length(uv-vec2(0.15,0.2))-0.13;\n    col = mix(col,vec3(1.0,0.9,0.8),S(d,-0.1));\n    \n    \n    uv.x+=iTime*0.2;\n    col = clouds(uv-vec2(0.,0.12),col,0.3);\n    uv = prevMainUV;\n    \n    uv.x+=iTime*0.25;\n    uv.x+=0.55;\n    uv.y+=0.23;\n    col = airship(uv,col);\n    uv = prevMainUV;    \n    \n    uv.x+=iTime*0.1;\n    col = clouds(uv-vec2(0.4,-0.2),col,0.21);  \n    uv = prevMainUV;\n  \n    uv.x+=iTime*0.3;\n    uv.x+=0.55;\n    col = plane(uv,col);\n    uv = prevUV;\n    \n    bool displayWindows = true;\n    float frame = mod(iTime,15.);    \n    float time = frame;\n    float zoom = 0.0;\n    if(frame<1.5){\n        time = getTime(time,1.5);\n        zoom = cubicInOut(time)*2.0;\n    } else if(frame>=1.5 && frame<11.5){\n        zoom = 2.0;\n    } else {\n        time = getTime(time-11.5,1.5);\n        zoom = 2.0-(cubicInOut(time)*2.0);\n    }\n    \n    //fragColor = vec4(col,1.0);\n    //return;\n    \n    uv*=3.0-zoom;\n    \n    float mask = sdBox(uv,vec2(0.25,0.35))-0.05;\n    d = max(-mask,0.0);\n    col = mix(col,vec3(1.0),S(d,0.0));\n    \n    float animY = 0.0;\n    \n    if(frame>=1.5 && frame<7.){\n        time = getTime(time-1.5,1.5);\n        animY = cubicInOut(time)*0.7;\n        displayWindows = false;\n    } else if(frame>=7. && frame<10.) {\n        animY = 0.7;\n        displayWindows = false;\n    } else if(frame>=10. && frame<11.5){\n        time = getTime(time-10.,1.5);\n        animY = 0.7-(cubicInOut(time)*0.7);\n        displayWindows = false;\n    } else {\n        displayWindows = true;\n    }\n    \n    d = sdBox(uv-vec2(0.0,animY),vec2(0.25,0.35))-0.05;\n\n    d = max(mask,d);\n    col = mix(col,vec3(0.9),S(d,0.0));\n    d = sdBox(uv-vec2(0.0,-0.35+animY),vec2(0.1,0.01));\n    col = mix(col,vec3(0.8),S(d,0.0));\n    \n    d = abs(sdBox(uv,vec2(0.26,0.36))-0.05)-0.02;\n    col = mix(col,vec3(0.85),S(d,0.0));    \n    \n    \n    if(displayWindows)col = staticPassengerWindow(uv,col);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}