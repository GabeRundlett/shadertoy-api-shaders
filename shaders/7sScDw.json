{
    "Shader": {
        "info": {
            "date": "1643604665",
            "description": "you can make a finger heart to your love by this shader. Just set iChannel0 a finger heart picture of you, nnd set iChannel1 a picture of your love.\nSay love loudly to him or her.",
            "flags": 2,
            "hasliked": 0,
            "id": "7sScDw",
            "likes": 2,
            "name": "Make Finger Heart 2 your love",
            "published": 3,
            "tags": [
                "fingerheart"
            ],
            "usePreview": 0,
            "username": "ololeecn",
            "viewed": 316
        },
        "renderpass": [
            {
                "code": "/*\n000 000 000\n001 101 100\n011 111 110 \n111 222 111\n111 222 111\n011 222 110\n001 111 100\n000 111 000\n000 010 000\n*/\n\n#define N 9\n#define CN N/3\n#define PINK vec3(0.945,0.62,0.761)\nint picMap[N*N] =int[](\n0,0,0,0,0,0,0,0,0,\n0,0,1,1,0,1,1,0,0,\n0,1,1,1,1,1,1,1,0,\n1,1,1,2,2,2,1,1,1,\n1,1,1,2,2,2,1,1,1,\n0,1,1,2,2,2,1,1,0,\n0,0,1,1,1,1,1,0,0,\n0,0,0,1,1,1,0,0,0,\n0,0,0,0,1,0,0,0,0);\n\n\n\n/*\nit will devide image to N*N parts.\n*/\nvec2 tri(vec2 x,float devide){\n    return mod(x,1.0/devide)*devide;\n}\n\n/*\n make picture more brightly\n*/\nvec4 whitening(vec4 inputColor,float fractor){\n    return log(inputColor*(fractor-1.0)+1.0)/log(fractor);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    int xindex = int(uv.x*float(N));\n    int yindex = (N-1) - int(uv.y*float(N));\n    int value = picMap[yindex*N+xindex];\n    fragColor = mix(whitening(texture(iChannel0,tri(uv,float(N))),4.0),vec4(PINK,1.0),smoothstep(float(value),0.8,1.0));\n    fragColor = mix(whitening(texture(iChannel1,tri(uv,float(N))),5.0),fragColor,step(float(value),1.0));\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    },
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}