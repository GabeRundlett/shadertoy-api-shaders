{
    "Shader": {
        "info": {
            "date": "1568233389",
            "description": "ref: [url]https://www.youtube.com/watch?v=o8R8fwegHsk[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "wd33R7",
            "likes": 27,
            "name": "rotating crosses 2",
            "published": 3,
            "tags": [
                "tiling",
                "cross",
                "gif",
                "short",
                "golf",
                "reproduction",
                "escherlike"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 550
        },
        "renderpass": [
            {
                "code": "// Fork of  https://shadertoy.com/view/wd3GR7\n\n#define R     (iResolution.xy)\n#define S(v)   smoothstep( 13./R.y , -13./R.y, v )\n#define rot(a) mat2(cos( a + vec4(0,33,11,0) ))       // from https://www.shadertoy.com/view/XlsyWX\nfloat t = 3.14/4., s;\n\nfloat draw(vec2 U, float r) {                         // --- draw rotating cross\n    U = 3.*(fract(U)-.5) *s;      \n    vec2 A = abs( U * rot( iTime +.46*r ) );          // .46 ~= atan(1/2)\n    return S( max(A.x,A.y) - 1.5 ) * S( min(A.x,A.y) - .5 ); // cross\n}\n    \nvoid mainImage( out vec4 O, vec2 U ) {\n    O-=O;\n    U = 2.7* (U+U-R)/R.y * rot(.46);                  // coords normalized + tilted                 \n    U /= s = 1.6* ( 1.+ max( abs(sin(t+=iTime)) ,abs(cos(t)) ) - .707 );// breathing \n    O += draw(U,-1.); U+=.5; O += draw(U,-1.);        // ( debug: O.r=  *1 *.5 )\n    U.x = .5-U.x;                                     // contra-rotative\n    O += draw(U, 1.); U+=.5; O += draw(U, 1.);        // ( debug: O.g=  *1 *.5 )\n    O = sqrt(O);                                      // to sRGB\n}\n\n\n\n\n\n\n\n/*\n\n// for those wandering, the code golfed version is 357 chars ;-p\n\n#define S(v)   smoothstep( 13./R , -13./R, v )                         //\n#define r(a) mat2(cos( a.46 + vec4(0,33,11,0) ))                       //\n#define D(k,d) ( A = abs( (3.*(fract(k+U)-.5) *s) * r( iTime d ) ),     \\\n               S( max(A,A.x) - 1.5 ) * S( min(A,A.x) - .5 )         ).y//\n#define mainImage(O,u)                                                  \\\nfloat s = .79+iTime;                                                    \\\n    vec2 A, R = iResolution.xy,                                         \\\n    U = 2.7* (u+u-R)/R.y * r();                                         \\\n    U /= s = 1.6* ( 1.+ max( abs(sin(s)) ,abs(cos(s)) ) -.73 );         \\\n    O += D(,-); O += D(.5,-);                                           \\\n    U.x = .5-U.x;                                                       \\\n    O += D(,+); O += D(.5,+)                                           /*\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}