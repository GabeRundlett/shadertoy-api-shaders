{
    "Shader": {
        "info": {
            "date": "1473425933",
            "description": "wavy",
            "flags": 0,
            "hasliked": 0,
            "id": "4ly3zD",
            "likes": 2,
            "name": "NAFORB1",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "abstract"
            ],
            "usePreview": 0,
            "username": "parameterized",
            "viewed": 648
        },
        "renderpass": [
            {
                "code": "float rand(vec2 n)\n{\n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\n//(n1x, n1y, n2x, n2y) n=closest points\nvec4 voronoi(vec2 pos, float jitter)\n{\n\tvec2 posi = floor(pos);\n\tvec2 pos2 = vec2(0, 0);\n\tfloat dist = 0.0;\n\tvec2 n1 = vec2(0, 0);\n\tvec2 n2 = vec2(0, 0);\n\tfloat n1d = 1.0/0.0;\n\tfloat n2d = 1.0/0.0;\n\tfor (int i=-2; i < 2; i++) {\n\t\tfor (int j=-2; j < 2; j++) {\n\t\t\tpos2 = posi+vec2(i,j)+vec2(0.5)+(vec2(rand(posi+vec2(i,j)), rand(posi+vec2(i,j)+0.5))*2.0-1.0)*jitter*0.5;\n\t\t\tdist = dot(pos-pos2, pos-pos2);\n\t\t\tif (dist < n2d) {\n\t\t\t\tif (dist < n1d) {\n\t\t\t\t\tn2d = n1d;\n\t\t\t\t\tn1d = dist;\n\t\t\t\t\tn2 = n1;\n\t\t\t\t\tn1 = pos2;\n\t\t\t\t} else {\n\t\t\t\t\tn2d = dist;\n\t\t\t\t\tn2 = pos2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn vec4(n1, n2);\n}\n\nvec4 voronoi(vec2 pos)\n{\n\treturn voronoi(pos, 1.0);\n}\n\nvec4 mod289(vec4 x)\n{\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x)\n{\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec2 fade(vec2 t) {\n    return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\nfloat cnoise(vec2 P)\n{\n    vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\n    vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\n    Pi = mod289(Pi);\n    vec4 ix = Pi.xzxz;\n    vec4 iy = Pi.yyww;\n    vec4 fx = Pf.xzxz;\n    vec4 fy = Pf.yyww;\n\n    vec4 i = permute(permute(ix) + iy);\n\n    vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0 ;\n    vec4 gy = abs(gx) - 0.5 ;\n    vec4 tx = floor(gx + 0.5);\n    gx = gx - tx;\n\n    vec2 g00 = vec2(gx.x,gy.x);\n    vec2 g10 = vec2(gx.y,gy.y);\n    vec2 g01 = vec2(gx.z,gy.z);\n    vec2 g11 = vec2(gx.w,gy.w);\n\n    vec4 norm = taylorInvSqrt(vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11)));\n    g00 *= norm.x;\n    g01 *= norm.y;\n    g10 *= norm.z;\n    g11 *= norm.w;\n\n    float n00 = dot(g00, vec2(fx.x, fy.x));\n    float n10 = dot(g10, vec2(fx.y, fy.y));\n    float n01 = dot(g01, vec2(fx.z, fy.z));\n    float n11 = dot(g11, vec2(fx.w, fy.w));\n\n    vec2 fade_xy = fade(Pf.xy);\n    vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\n    float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\n    return 2.3 * n_xy;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec4 pixel = vec4(1);\n\tvec2 uv = fragCoord.xy/max(iResolution.x, iResolution.y)\n\t\t\t\t- iResolution.xy/max(iResolution.x, iResolution.y)/2.0;\n\tvec2 globalOffset = vec2(sin(iTime)*0.05, cos(iTime)*0.05);\n\tvec2 uvgo = uv + globalOffset;\n\tpixel.rgb = vec3(40.0/255.0, 110.0/255.0, 160.0/255.0);\n\tfloat freq = 16.0;\n\tfloat p1 = cnoise(uvgo*freq);\n\tfreq = 32.0;\n\tfloat p2 = cnoise((uvgo+p1*0.04)*freq);\n\tfreq = 512.0;\n\tfloat p3 = cnoise(uvgo*freq);\n\tpixel.rgb += (p3*2.0-1.0)*0.02+(p2*2.0-1.0 > 0.2 ? 0.05 : (p2 < 0.2 ? -0.05 : 0.0));\n\tfreq = 12.0;\n\tfreq += (p1*2.0-1.0)*(2.0+sin(iTime)*0.2);\n\tvec4 v1 = voronoi(uvgo*freq, 0.5);\n\tpixel.rgb -= max(abs(uv.x*freq-v1.x), abs(uv.y*freq-v1.y)) < 0.3 ? 0.1 : 0.0;\n\tfreq = 12.0;\n\tfreq += (p1*2.0-1.0)*(2.0+sin(iTime)*0.2);\n\tvec4 v2 = voronoi((uvgo+vec2(0.0, 0.08))*freq, 0.5);\n\tpixel.rgb += max(abs(uv.x*freq-v2.x), abs(uv.y*freq-v2.y)) < 0.3 ? 0.1 : 0.0;\n\tpixel.rgb -= pow(distance(vec2(0), uv)/(1.0+sin(iTime*2.0)/12.0), 2.0);\n\tfragColor = pixel;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}