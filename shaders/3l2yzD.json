{
    "Shader": {
        "info": {
            "date": "1593869190",
            "description": "Modded version of IQ's parabola segment (Capped) - not sure if this is 100% correct!\n( original here: https://www.shadertoy.com/view/3lSczz )",
            "flags": 0,
            "hasliked": 0,
            "id": "3l2yzD",
            "likes": 3,
            "name": "ParabolaCapped",
            "published": 3,
            "tags": [
                "cappedparabolasegment"
            ],
            "usePreview": 0,
            "username": "jj99",
            "viewed": 289
        },
        "renderpass": [
            {
                "code": "// Modded version of IQ's parabola segment (Capped) - not sure if this is 100% correct!\n// Use at your own risk!! :)\n\nfloat sdParabolaCapped( in vec2 pos, in float wi, in float he, float thickness )\n{\n    pos.x = abs(pos.x);\n\n    float ik = wi*wi/he;\n    float p = ik*(he-pos.y-0.5*ik)/3.0;\n    float q = pos.x*ik*ik*0.25;\n    \n    float h = q*q - p*p*p;\n    float r = sqrt(abs(h));\n\n    float x = (h>0.0) ? \n        // 1 root\n        pow(q+r,1.0/3.0) - pow(abs(q-r),1.0/3.0)*sign(r-q) :\n        // 3 roots\n        2.0*cos(atan(r/q)/3.0)*sqrt(p);\n    \n    x = min(x,wi);\n    \n    float d =  length(pos-vec2(x,he-x*x/ik))-thickness;\t// * sign(ik*(pos.y-he)+pos.x*pos.x);\n    \n    // cap test...\n    vec2 ep = pos-vec2(wi,0.0);\n    vec2 mp = pos-vec2(0.0,he);\n    return max(d, dot(ep,normalize(mp-ep)));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n        \n    // animate\n    float t = iTime/2.0;\n    \n\tfloat w = 0.7+0.69*sin(iTime*1.1+0.0);\n    float h = 0.3+0.55*sin(iTime*1.3+2.0);\n    \n    // sdf\n    float d = sdParabolaCapped( p, w, h, 0.05 );\n    \n    // colorize\n    vec3 col = (d>0.0) ? vec3(0.9,0.6,0.3) : vec3(1.0,1.1,1.2);\n\tcol *= 1.0 - exp(-4.0*abs(d));\n\tcol *= 0.7 + 0.2*cos(110.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(d)) );\n\n\n\tfragColor = vec4(col,1.0);\n}\n ",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}