{
    "Shader": {
        "info": {
            "date": "1512406552",
            "description": "Radial Repeat Around Rounded Qua",
            "flags": 0,
            "hasliked": 0,
            "id": "XlXBRj",
            "likes": 3,
            "name": "RadialRepeat Around Rounded Quad",
            "published": 3,
            "tags": [
                "radial",
                "rounded",
                "repeat",
                "around",
                "qua"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 508
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2017 (twitter:@aiekick)\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// link : https://www.shadertoy.com/view/XlXBRj\n\nfloat df(vec2 p)\n{\n\treturn length(max(abs(p) - vec2(5.0*(sin(iTime *0.5)*0.5+0.5),1.0),0.0));\n}\n\nvec2 nor(vec2 p, float prec)\n{\n\tvec2 e = vec2(prec, 0.0);\n\tfloat x = df(p+e.xy) - df(p-e.xy);\n\tfloat y = df(p+e.yx) - df(p-e.yx);\n\treturn normalize(vec2(x,y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy * 2. - iResolution.xy) / iResolution.y*10.;\n\t\n\tvec2 n = normalize(uv * 0.1 + nor(uv, 0.1));\n\tuv = vec2(atan(n.x,n.y)/radians(180.)*4., df(uv)*0.4);\n\t\n\tuv.x *= floor(uv.y)+1.;\n\tuv.x += floor(uv.y) * iTime * 0.5 * (sign(mod(floor(uv.y), 2.))*2.-1.);\n\tuv = abs(fract(uv)-0.5);\n\tfloat d = max(abs(uv.x), abs(uv.y));\n\tfragColor = vec4(d);\n\t//fragColor = vec4(1.-d);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}