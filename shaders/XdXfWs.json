{
    "Shader": {
        "info": {
            "date": "1498706431",
            "description": "1d cellular automaton, click to reset to a random initial condition. This was a collab with rodolphito",
            "flags": 32,
            "hasliked": 0,
            "id": "XdXfWs",
            "likes": 20,
            "name": "Colored Smoke",
            "published": 3,
            "tags": [
                "1d",
                "cellular",
                "automaton"
            ],
            "usePreview": 0,
            "username": "Ebanflo",
            "viewed": 939
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n    fragColor = pow(fragColor, 2.0 * vec4(dot(fragColor, fragColor)));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec4 func1(vec4 arg){\n    vec4 result = vec4(0);\n    result += 1.0 / arg;\n    result += 1.0 / (arg - .5);\n    result += 1.0 / (arg - 1.0);\n    result *= .01;\n    result += .5;\n    result = clamp(result, 0.0, 1.0);\n    return result;\n}\n\nvec4 func2(vec4 arg){\n    vec4 result = vec4(0);\n    result += 1.0 / (1.0 - (4.0 * arg - 1.0) * (4.0 * arg - 1.0));\n    result -= 1.0 / (1.0 - (4.0 * arg - 3.0) * (4.0 * arg - 3.0));\n    result *= .05;\n    result += .5;\n    result = clamp(result, 0.0, 1.0);\n    return result;\n}\n\nvec4 func3(vec4 arg){\n    vec4 result = vec4(1);\n    result -= .01 * arg / (arg - .5);\n    result *= 1.0 - arg;\n    result = clamp(result, 0.0, 1.0);\n    return result;\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(iFrame < 10 && fragCoord.y < 1.0) fragColor = texture(iChannel1, \n                                                  vec2(fragCoord.x / iResolution.x, .1));\n    else if(fragCoord.y < 1.0){\n        vec4 a = texture(iChannel0, fract((fragCoord + vec2(1, 0)) / iResolution.xy));\n        vec4 b = texture(iChannel0, fract((fragCoord + vec2(0, 0)) / iResolution.xy));\n        vec4 c = texture(iChannel0, fract((fragCoord - vec2(1, 0)) / iResolution.xy));\n        vec4 samp1 = texture(iChannel0,\n                             vec2(fract((b.x + b.y + b.z) * .333333 + fragCoord.x / iResolution.x), 0));\n        fragColor = mix(mix(a,c,sin(1000.0 * b)*.5+.5), func1(samp1), .05);\n    }\n    else fragColor = texture(iChannel0, (fragCoord - vec2(0, 1)) / iResolution.xy);\n    if(!(iFrame == 0) && !(iMouse.xy == vec2(0)) && iMouse.xy == iMouse.zw && fragCoord.y < 1.0){\n        fragColor = texture(iChannel1, vec2(fragCoord.x / iResolution.x, fract(iTime)));\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}