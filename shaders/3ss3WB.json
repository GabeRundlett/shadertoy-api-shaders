{
    "Shader": {
        "info": {
            "date": "1547405714",
            "description": "lines and accents",
            "flags": 0,
            "hasliked": 0,
            "id": "3ss3WB",
            "likes": 4,
            "name": "line5",
            "published": 3,
            "tags": [
                "loop"
            ],
            "usePreview": 0,
            "username": "nabehide",
            "viewed": 452
        },
        "renderpass": [
            {
                "code": "#define time iTime\n\nconst float PI = 3.14159265358979;\n\nconst int Nline = 5;\n\nconst float speed = 10.0;\nconst float period = 15.0;  // actualPeriod = period / speed\nconst float offsetTime = 2.*period;\n\nconst float variance = 5.0;  // less than period/3.\nconst float vTime = 5.0;  // less than period/3.\nconst float vLight = 5.0;\n\nconst vec3 color1 = vec3(1.00, 0.21, 0.01);\nconst vec3 color2 = vec3(0.01, 1.00, 0.21);\nconst vec3 color3 = vec3(0.21, 0.01, 1.00);\n\nmat2 rot(float t){\n    return mat2(cos(t),-sin(t),sin(t),cos(t));\n}\n\nfloat rand(vec2 co){                                             \n  return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat line(vec2 p){\n    float w = 0.01;\n    float d = 0.01;\n    // return smoothstep(w+d, w, abs(p.y));\n    // return 0.1/pow(p.y, 1.0);\n    return min(0.03/pow(p.y, 1.0),10.0);\n}\n\nfloat point(vec2 p){\n    return 0.03/length(p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 p = (fragCoord*2. - iResolution.xy) / min(iResolution.x, iResolution.y);\n    vec3 draw = vec3(0.);\n    \n    for (int i=0; i<Nline; i++){\n        float r1 = rand(vec2(float(i), floor((time+offsetTime)*speed/period)+0.1));\n        float r2 = rand(vec2(float(i), floor((time+offsetTime)*speed/period)+0.2));\n        float r3 = rand(vec2(float(i), floor((time+offsetTime)*speed/period)+0.3));\n        float r4 = rand(vec2(float(i), floor((time+offsetTime)*speed/period)+0.4));\n\n        float t = mod((time+offsetTime)*speed, period) - period/2.;\n\n        vec3 color;\n        if (r3 <= 0.333) \t\tcolor = color1;\n        else if (r3 <= 0.666)\tcolor = color2;\n        else\t\t\t\t\tcolor = color3;\n\n        vec2 pos = (p - vec2(0., r2*1.8-0.9)) * rot(r1 * r2 * PI);\n        \n        float direction = 1.0;\n        if (r4 < 0.5) {\n            direction = -1.0;\n        }\n        float strength = 1.0 / pow(t+r1*variance,0.5);\n        \n\t    draw += line(pos) * point(pos - vec2(t+r1*variance,0.)*direction) * color * strength;\n    }\n    \n    fragColor = vec4(draw,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}