{
    "Shader": {
        "info": {
            "date": "1669438908",
            "description": "signed distance fields",
            "flags": 0,
            "hasliked": 0,
            "id": "7dVcDR",
            "likes": 0,
            "name": "SDF boxes",
            "published": 3,
            "tags": [
                "sdf"
            ],
            "usePreview": 0,
            "username": "Zyphery",
            "viewed": 116
        },
        "renderpass": [
            {
                "code": "float distToBox(vec2 pos, float rotation, vec2 size, vec2 uv) {\n    float cr = cos(rotation);\n    float sr = sin(rotation);\n    \n    uv -= pos;\n    uv = vec2(uv.x * cr - uv.y * sr, uv.x * sr + uv.y * cr);\n    \n    vec2 q = abs(uv) - size;\n    return length(max(q,0.0f));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord;\n\n    // Time varying pixel color\n    vec3 col;\n    \n    float b0 = distToBox(iMouse.xy, iTime * 0.5, vec2(200,80), uv);\n    float b1 = distToBox(vec2(50,100), iTime * 0.25, vec2(50,100), uv);\n    //float b1 = distToBox(vec2(50,100), iTime / 2.0, vec2(10,50), uv);\n    \n    col = vec3(min(sin(0.1 * b0), sin(0.1 * b1)));\n    //col = vec3(sin(0.1 * b0));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}