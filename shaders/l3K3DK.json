{
    "Shader": {
        "info": {
            "date": "1718962532",
            "description": "learn to raymarch\ndolly zoom",
            "flags": 0,
            "hasliked": 0,
            "id": "l3K3DK",
            "likes": 2,
            "name": "Infinite Cube Field",
            "published": 3,
            "tags": [
                "raymarching"
            ],
            "usePreview": 0,
            "username": "ShadeWhizz",
            "viewed": 89
        },
        "renderpass": [
            {
                "code": "mat3 rotmat3(float a, float b, float c) {\n    float ca = cos(a), sa = sin(a);\n    float cb = cos(b), sb = sin(b);\n    float cc = cos(c), sc = sin(c);\n\n    return mat3(\n        cb * cc, cc * sa * sb - ca * sc, ca * cc * sb + sa * sc,\n        cb * sc, ca * cc + sa * sb * sc, -cc * sa + ca * sb * sc,\n        -sb,     cb * sa,                ca * cb\n    );\n}\n\nfloat sdCube(vec3 p) {\n    vec3 d = abs(p) - 0.5;\n    return length(max(d, 0.0)) + min(max(d.x, max(d.y, d.z)), 0.0);\n}\n\nvec3 repeat(vec3 p, float x) {\n    return mod(p, x) - x/2.;\n}\n\nfloat sdf(vec3 p) {\n    p = repeat(p, 4.0 /*- sin(iTime)*/);\n    p = p*rotmat3(iTime*0.6, iTime*0.1, iTime*0.2);\n    return sdCube(p)*.9;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec3 ro = vec3(0., 0., -1.);\n    vec3 rd = normalize(vec3(uv, 1.5 + 0.25*sin(iTime)));\n    rd = rd*rotmat3(iTime*.2, 0.1*cos(.1*iTime), iTime*.2);\n    vec3 col = vec3(0);\n    int i; float t;\n    for (i = 0; i < 100; i++) {\n        vec3 p = ro + rd * t; // position along the ray\n        float d = sdf(p);     // current distance to the scene\n        t += d;               // \"march\" the ray\n        if (d < 0.01) {\n            // hit\n            //col = palette(t*.04 + float(i)*.005);\n            col = vec3(1., 1., 1.);\n            float ao = 1.0 - float(i)/128.;\n            col *= ao;\n            col.xz *= exp(-t/500.0);\n            break;\n        } else if (t > 1000.) {\n            // miss\n            break;\n        }\n    }\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}