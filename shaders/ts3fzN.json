{
    "Shader": {
        "info": {
            "date": "1604483168",
            "description": "an intersting effect",
            "flags": 0,
            "hasliked": 0,
            "id": "ts3fzN",
            "likes": 17,
            "name": "grid uv",
            "published": 3,
            "tags": [
                "2d",
                "fract"
            ],
            "usePreview": 0,
            "username": "jcyuan",
            "viewed": 501
        },
        "renderpass": [
            {
                "code": "#define GRID 8.\n#define STRIPS 6.\n#define SPEED 5.\n#define ANTI 3.\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec2 ouv = uv;\n    uv = fract(uv * GRID);\n    ouv = floor(ouv * GRID) / GRID;\n\n    float r = length(uv - .5) + .5;\n    vec3 col = vec3(0.);\n\n    float d = sin(STRIPS * atan(ouv.y, ouv.x) - SPEED * iTime);\n    d = (d + 1.) * .5;\n\n    float aw = ANTI * GRID / iResolution.y * .5;\n    vec3 stripColor = smoothstep(r - aw, r + aw, 1. - d) * vec3(1., .0, .0);\n    vec3 restColor = smoothstep(r - aw, r + aw, d) * vec3(1.);\n\n    col += mix(stripColor, restColor, d);\n    \n    fragColor = vec4(pow(col, vec3(.454545)), 1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}