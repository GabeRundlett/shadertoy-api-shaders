{
    "Shader": {
        "info": {
            "date": "1459085714",
            "description": "denim",
            "flags": 0,
            "hasliked": 0,
            "id": "XdtSWH",
            "likes": 17,
            "name": "denim",
            "published": 3,
            "tags": [
                "2d",
                "texture",
                "denim",
                "jeans"
            ],
            "usePreview": 0,
            "username": "randomekek",
            "viewed": 837
        },
        "renderpass": [
            {
                "code": "// implements this photoshop texture:\n// https://indidesigns.wordpress.com/photoshop-basicstutorials/jeans-texture-seams-tutorial/\n\nconst float pi=3.14159;\n\nconst float base_scale=4.5;\nconst float diffuse_scale=2.0;\nconst float diffuse_level=0.6;\nconst vec3 denim_dark=vec3(90., 100., 170.)/255.;\nconst vec3 denim_light=vec3(150.,170.,200.)/255.;\nconst vec3 thread_color=vec3(130.,150.,180.)/255.;\nconst vec3 stitch_color=vec3(150.,90.,40.)/255.;\nconst float thread_angle=-30.0/180.0*pi;\nconst float thread_size=3.0;\nconst vec2 thread_a = thread_size * vec2(cos(thread_angle), -sin(thread_angle));\nconst vec2 thread_b = thread_size * vec2(cos(-thread_angle), -sin(-thread_angle));\nconst float seam_repeat = 50.0;\nconst float seam_size = 5.0;\nconst float stitch_width=0.4;\nconst float stitch_offset=6.0;\nconst float stitch_repeat=4.5;\nconst float stitch_shadow=4.0;\n\nvec4 noise(in vec2 x) {\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\tvec2 uv = p.xy + f.xy;\n\treturn texture( iChannel0, (uv+ 0.5)/256.0, -100.0 );\n}\n\nfloat fbm(in vec2 x) {\n    return (0.25*noise(x*0.25).x + 0.5*noise(x).x + 0.25*noise(x*2.1).y + 0.125*noise(x*4.1).z)/(0.25+0.5+0.25+0.125);\n}\n\nfloat halftone(in vec2 x) {\n    vec2 box = floor(x);\n    vec2 inner = -1.0 + 2.0 * fract(x);\n    return clamp(1.0 - (mod(box.x + box.y, 2.0) * (1.0 - 0.9 * length(inner))), 0.0, 1.0);\n}\n\nfloat lighten(in float x, in float level) {\n    return mix(1.0, x, level);\n}\n\nvec2 diffuse(in vec2 x) {\n    return x + diffuse_level * (-1.0 + 2.0 * noise(x * diffuse_scale).xy);\n}\n\nfloat seam_pos(in float x) {\n    float pos = clamp(mod(x, seam_repeat), 0.0, 2.5*seam_size) / seam_size;\n    float valley = 2.0*abs(0.5-pos);\n    return mix(pos < 0.5 ? valley : (pos < 1.0 ? 2.0 - valley : 1.0), 1.0, .7);\n}\n\nfloat stitch_pos(in vec2 uv, in float offset) {\n    float x = mod(uv.x - offset, seam_repeat);\n    float y = fract(uv.y / stitch_repeat);\n    return step(0.0, x) * (1.0 - step(stitch_width, x)) * step(0.0, y) * (1.0 - step(0.7, y));\n}\n\nfloat shadow(in float x, in float offset1, in float offset2) {\n \tfloat pos = mod(x, seam_repeat);\n    float delta = smoothstep(offset1-stitch_shadow, offset1+stitch_shadow, pos) * (1.0 - smoothstep(offset2-stitch_shadow, offset2+stitch_shadow, pos));\n    return 1.0 - mix(0.0, delta, 0.15);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / base_scale;\n    vec3 base = mix(denim_light, denim_dark, halftone(diffuse(uv)));\n    float stretch = lighten(fbm(uv * vec2(1.9, 0.3)), 0.3);\n    vec2 threads = noise(uv*4.0).xy * smoothstep(0.5, 1.0, sin(vec2(dot(thread_a, uv), dot(thread_b, uv))));\n    vec3 denim = mix(base*stretch, thread_color, threads.x + 0.3 * threads.y);\n    \n    float seam = seam_pos(uv.x);\n    float stitch = stitch_pos(uv, stitch_offset) + stitch_pos(uv, 4.0+stitch_offset);\n    float stitch_shadow = shadow(uv.x, stitch_offset, 4.0+stitch_offset);\n\tfragColor = vec4(mix(denim * seam * stitch_shadow, stitch_color, stitch), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}