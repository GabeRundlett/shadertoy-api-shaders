{
    "Shader": {
        "info": {
            "date": "1676241110",
            "description": "Para dibujar un círculo en Glsl, necesitas calcular la distancia al centro del círculo usando las coordenadas de textura o de fragmento. Luego, puedes usar una función como smoothstep o step para crear un borde suave o duro para el círculo, dependiendo de",
            "flags": 0,
            "hasliked": 0,
            "id": "DtSXRy",
            "likes": 1,
            "name": "Circulo-creado con bing chat",
            "published": 3,
            "tags": [
                "learning"
            ],
            "usePreview": 0,
            "username": "Sergeindamix",
            "viewed": 151
        },
        "renderpass": [
            {
                "code": "vec3 circleColor = vec3(1,0,0); // the color of the circle\nvec3 borderColor = vec3(0,0,0); // the color of the border\nuniform float radius; // the radius of the circle\nfloat borderThickness = 1.0; // the thickness of the border\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv = uv * 2.0 - 1.0;\n    // Calculate the distance to the center\n    float d = length(uv);\n    // Create a smooth border\n    float t = 1.0 - smoothstep(0.0, borderThickness, abs(radius-d));\n    // Mix the colors according to the border\n    \n    vec3 color = mix(vec3(0,0,0), vec3(1,0,0), t);\n    // Set the alpha channel according to the distance\n    float alpha = step(d, radius);\n    // Output the final color\n    // Output to screen\n    fragColor = vec4(color, alpha);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}