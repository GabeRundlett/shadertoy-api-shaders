{
    "Shader": {
        "info": {
            "date": "1707330516",
            "description": "it's a bubble experiment yo",
            "flags": 0,
            "hasliked": 0,
            "id": "l3XGDn",
            "likes": 2,
            "name": "Fork bubs JesseHufst 540",
            "published": 3,
            "tags": [
                "bubble"
            ],
            "usePreview": 0,
            "username": "JesseHufstetler",
            "viewed": 168
        },
        "renderpass": [
            {
                "code": "\nfloat myTime = 0.;\nfloat oldTime = 0.;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = (iResolution.x + iResolution.y)/2.;\n    fragColor = vec4(0.0,0.0,0.0,1.0);\n\n    int bubs = 4;\n    \n    for( int i=0; i<bubs; i++ )\n\t{\n        \n        vec2 bubbleCenter = iResolution.xy/2.0;\n        bubbleCenter.y = iResolution.y/2.*(sin(float(i)*3.7+iTime/19.*float(i+1))+1.);\n        float radius = scale/(1.+float(bubs)/7.);\n        bubbleCenter.x = iResolution.x/2.*(sin(float(i)*7.3+iTime/17.*float(i+1))+1.);\n        float dis = length( fragCoord - bubbleCenter);\n        float disN = dis/radius;\n        float disN2 = sqrt(sqrt(sqrt(sqrt(disN))));\n        float rMult = (sin(float(i)*2.17)+1.)/2.;\n        float gMult = .5;//float(i)/(float(bubs)+7.)+.2;\n        float bMult = 1.-rMult;\n        rMult = (rMult + .5)/2.;\n        rMult = (rMult + .5)/2.;\n        bMult = (bMult + .5)/2.;\n        bMult = (bMult + .5)/2.;\n        if (dis < radius) {\n            fragColor.x += (1.-disN2)*rMult;\n            fragColor.y += (1.-disN2)*gMult;\n            fragColor.z += (1.-disN2)*bMult;\n        }\n\t}\n    \n    setNSeed();\n    fragColor += fragColor;\n    fragColor += fragColor;\n    fragColor += fragColor;\n    fragColor += fragColor;\n    //fragColor += fragColor;\n    //fragColor += fragColor;\n    //fragColor *= fragColor;\n    //fragColor *= fragColor;\n    \n    \n    \n    vec4 rand = vec4(rand(), rand(), rand(), 1.)/13.;\n    fragColor += rand;\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\nconst ivec2 FS_ADDR = ivec2(0.0);\n\nconst vec4 fs_stt = vec4(1.0);\n\nuint seed = 0u;\n\nvoid setSeed(uint s) {\n    seed = s;\n}\n\nuint hash(uint s) {\n    s ^= 2747636419u;\n    s *= 2654435769u;\n    s ^= s >> 16;\n    s *= 2654435769u;\n    s ^= s >> 16;\n    s *= 2654435769u;\n    return s;\n}\n\nuint randI() {\n    seed = hash(seed);\n    return seed;\n}\n\nfloat rand() {\n    uint rn = randI();\n    rn %= 1000000000u;\n    float rs = float(rn);\n    rs /= 1000000000.0;\n    return rs;\n}\n\n#define setNSeed() setSeed(uint(iResolution.x*fragCoord.y+fragCoord.x + float(hash(uint(iTime*1000.0))%1000u)))\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}