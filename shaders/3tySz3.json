{
    "Shader": {
        "info": {
            "date": "1583374404",
            "description": "Spin",
            "flags": 0,
            "hasliked": 0,
            "id": "3tySz3",
            "likes": 2,
            "name": "Rotunda Spin",
            "published": 3,
            "tags": [
                "spin"
            ],
            "usePreview": 0,
            "username": "hzhou17",
            "viewed": 106
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926\n#define S(a, b, t) smoothstep(a, b, t)\n#define sat(x) clamp(x, 0., 1.)\n\nfloat remap(float a, float b, float c, float d, float t)\n{\n  return (c + (d-c) * (t-a)/(t-b));\n}\n\nfloat remap01(float a, float b, float t)\n{\n  return sat((t-a)/(b-a));             \n}\n\nfloat Circle(vec2 uv, vec2 p, float r, float blur)\n{\n    float d = length(uv -p);//distance from orgin (bottom left)\n    float c = smoothstep(r, r - blur, d);\n    return c;\n}\n\nmat2 rotate2d(float angle)\n{\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\n\nfloat Band(float t, float start, float end, float blur)\n{\n    float step1 = smoothstep(start - blur, start + blur, t);\n\tfloat step2 = smoothstep(end + blur, end - blur, t);\n\n\treturn step1 * step2;\n}\n\nfloat Rect(vec2 uv, float left, float right, float bottom, float top, float blur)\n{\n    float band1 = Band(uv.x, left, right, blur);\n    float band2 = Band(uv.y, bottom, top, blur);\n\t\n    return band1 * band2;\n}\n\nfloat Tri(vec2 uv, float blur)\n{\n    float tri1 = Band(uv.x, -.5+uv.y, .5-uv.x, blur);\n    float tri2 = Band(uv.y, -.5, .5, blur); \n    \n    return tri1*tri2;\n}\n\n//################################################################################################\n//################################################################################################\n\nfloat Diamond (vec2 uv)\n\n{\n    uv *=  rotate2d(PI/2.);\n\n    uv *= mat2(-1.,.6, 1.,.6); //Scale\n\n    float mask = Rect(uv, -.03, .03, -.03, .03, .001);\n\n    return mask;  \n}\n\nfloat DiamondRing(vec2 uv)\n{\n    uv *=  rotate2d(PI/16.);\n    \n    float mask = 0.;\n    for (float i = 0.; i <= 2.* PI; i+= PI/8.) // thick 8 lines\n    {\n       uv *=  rotate2d(i);\n        \n       uv += vec2(0., .395);\n\t\n       mask += Diamond(uv); \n        \n       uv -= vec2(0., .395);\n    }\n    return mask; \n}\n\nfloat Triangle(vec2 uv)\n{\n    //uv *=  rotate2d(PI/4.);\n\n    //uv *= mat2(-1.,.6, 1.,.6); //Scale\n    \n    uv *= 2.;\n\n    float mask = Tri(uv, .001);\n\n    return mask;  \n}\n\nfloat TriRing(vec2 uv)\n{\n    uv *=  rotate2d(PI/16.);\n    \n    float mask = 0.;\n    for (float i = 0.; i <= 2.* PI; i+= PI/8.) // thick 8 lines\n    {\n       uv *=  rotate2d(i);\n        \n       uv += vec2(0., .295);\n\t\n       mask += Triangle(uv); \n        \n       uv -= vec2(0., .295);\n    }\n    return mask; \n}\n\n\n\n\n\nvec4 CenterCircle(vec2 uv)\n{\n    float d = length(uv);\n    \n\tvec4 col = vec4(0.);\n    col.a = S(.15, .149, d);            \n    \n    float brownLine3 = S(.15, .148, d);\n    col.rgb = mix(col.rgb, vec3(0.31, 0.196, 0.14), brownLine3); \n    \n    \n    \n    float greenRing = S(.148, .146, d);\n    col.rgb = mix(col.rgb, vec3(.678, .910, .931), greenRing);      \n    \n    \n    \n    float purpleRing = S(.136, .135, d);\n   \tcol.rgb = mix(col.rgb, vec3(.757, .773, 925), purpleRing);    \n    \n    \n    float blueCenter = S(.126, .125, d);\n    col.rgb = mix(col.rgb, vec3(0.8, 0.894, 0.996), blueCenter);  \n    \n    \n    \n    \n \n    return col;\n\n}\n\nvec4 Base(vec2 uv)\n{\n    \n\tvec4 col = vec4(0.937, 0.937, 0.812, 1.);\n    \n    //d = distance\n    float d = length(uv);\n    \n    col.a = S(.5, .49, d);\n    \n    \n    float edgeShade = remap01(.45, .5, d);\n        \n    edgeShade *= edgeShade;\n    col.rgb *= 1. - edgeShade * .5;\n    \n\n    \n    col.rgb = mix(col.rgb, vec3(0.937, 0.937, 0.812), S(.475, .485, d)); //edge shadow\n    \n    col.rgb = mix(col.rgb, vec3(0.31, 0.196, 0.14), S(.48, .49, d));   //Brown outline\n    \n    \n    float purpleOutter = S(.445, .435, d); //purple outter ring\n    \n    col.rgb = mix(col.rgb, vec3(.757, .773, 925), purpleOutter);\n    \n    \n    float green = S(.43, .42, d);//green ring\n    col.rgb = mix(col.rgb, vec3(.678, .910, .931), green);\n    \n    \n    float purpleInner = S(.37, .36, d); //purple inner ring\n    \n    col.rgb = mix(col.rgb, vec3(.757, .773, 925), purpleInner);\n    \n    float yellowCenter1 = S(.355, .345, d);\n    col.rgb = mix(col.rgb, vec3(0.925, 0.953, 0.957), yellowCenter1);\n    \n    \n    float brownLine1 = S(.28, .279, d);\n    col.rgb = mix(col.rgb, vec3(0.31, 0.196, 0.14), brownLine1);\n    \n    float yellowCenter2 = S(.279, .277, d);\n    col.rgb = mix(col.rgb, vec3(0.925, 0.953, 0.957), yellowCenter2);    \n    \n    \n    float brownLine2 = S(.205, .203, d);\n    col.rgb = mix(col.rgb, vec3(0.31, 0.196, 0.14), brownLine2);\n    \n    \n    float yellowCenter3 = S(.203, .202, d);\n    col.rgb = mix(col.rgb, vec3(0.925, 0.953, 0.957), yellowCenter3);   \n    \n    \n    float brownLine3 = S(.15, .148, d);\n    col.rgb = mix(col.rgb, vec3(0.31, 0.196, 0.14), brownLine3);    \n    \n    \n    float yellowCenter4 = S(.148, .146, d);\n    col.rgb = mix(col.rgb, vec3(0.8, 0.894, 0.996), yellowCenter4);  \n    \n        \n    \n    return col;\n}\n\n\n\nfloat Thick8LinesMask(vec2 uv)\n{\n    float mask = 0.;\n\n    for (float i = .0; i <= 2.* PI; i+= PI/4.) // thick 8 lines\n    {\n       uv *=  rotate2d(i);\n       mask = max(mask, Rect(uv, -.005, .005, -.49, .49, .001));\n    }\n    return mask;\n}\n\nfloat LightLinesMask(vec2 uv)\n{\n    float mask = 0.;\n\n    for (float i = .0; i <= 2.* PI; i+= PI/32.) // thick 8 lines\n    {\n       uv *=  rotate2d(i);\n       mask = max(mask, Rect(uv, -.001, .001, -.49, .49, .001));\n    }\n    return mask;\n}\n\nvec4 Rotunda(vec2 uv)\n{\n    vec4 lineColor = vec4(0.31, 0.196, 0.14, 1.);\n    vec4 diamondColor = vec4(0.906, 0.451, 0.529, 1.);\n    vec4 triColor = vec4(.678, .910, .931, 1.);\n    \n\tvec4 col = vec4(0.5, 0.5, 0.5, 1.);\n    \n    vec4 base = Base(uv);\n    \n    float thicklines = Thick8LinesMask(uv);\n    \n    float lightlines = LightLinesMask(uv);\n    \n    float diamondRing = DiamondRing(uv);\n    \n    float triRing = TriRing(uv);\n    \n    vec4 center = CenterCircle(uv);\n    \n    \n    col = mix(col, base, base.a);\n    \n    col = mix(col, lineColor, thicklines);\n    \n    col = mix(col, center, center.a);\n    \n    col = mix(col, triColor, triRing);   \n    \n    col = mix(col, diamondColor, diamondRing);\n    \n    //col = mix(col, lineColor, lightlines);\n    \n\n    return col;\n\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n   vec2 uv = fragCoord/iResolution.xy;\n\n\tuv -= .5;\n    uv.x *=\tiResolution.x/iResolution.y;\n\t\n    \n    uv *=  rotate2d(iTime/3.);\n    \n\tuv *= 1.5;\n    \n\n    \n    fragColor = Rotunda(uv);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}