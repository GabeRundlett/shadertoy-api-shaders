{
    "Shader": {
        "info": {
            "date": "1465365378",
            "description": "A goban. (still buggy)",
            "flags": 32,
            "hasliked": 0,
            "id": "XsyXzV",
            "likes": 2,
            "name": "Goban Test.",
            "published": 3,
            "tags": [
                "go",
                "goban",
                "board"
            ],
            "usePreview": 0,
            "username": "zeletochoy",
            "viewed": 613
        },
        "renderpass": [
            {
                "code": "//#define DEBUG\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    float ar = iResolution.x / iResolution.y;\n    \n    // Remap for square board between 0 and 1\n    uv.x = uv.x - fract(ar)/2.0;\n    \n    // Remap pos between 0 and 18\n    vec2 p = 19.0*uv;\n    vec2 c = clamp(p, 0.0, 19.0);\n    \n    // Draw the lines\n    float thk = 0.027;\n    float back = step(thk, min(abs(p.x+0.5 - floor(p.x+1.0)),\n                               abs(p.y+0.5 - floor(p.y+1.0))));\n    // Cut the border\n    back = max(back, step(-0.5, -min(p.x, p.y)));\n    back = max(back, step(18.5, max(p.x, p.y)));\n    \n    // Draw the dots\n    float rad = 0.2;\n    back = min(back, step(rad/6.0, distance((p-0.5)/6.0+0.5, floor(p/6.0+1.0))));\n    \n    // Get the board state\n    vec2 center = floor(c) + 0.5;\n    float player = texture(iChannel0, center/19.0).x;\n    float stones = player*step(0.52, 1.0-distance(fract(p), vec2(0.5)));\n    \n    // Draw the border\n    back = min(back, step(9.5, 19.0-abs(p.x - 9.5)));\n    stones = min(stones, step(9.5, 19.0-abs(p.x - 9.5)));\n\n    // Final mix\n    vec3 col = clamp(vec3(0.6, 0.4, 0.0)*back + stones, 0.0, 1.0);\n\n#ifdef DEBUG\n    if (max(fragCoord.x, fragCoord.y) < 95.0)\n        col = texture(iChannel0, fragCoord/95.).xyz;\n#endif\n\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p = 19.0 * uv;\n    \n    // Remap mouse to board\n    float ar = iResolution.x / iResolution.y;\n    vec2 mouse = iMouse.xy / iResolution.y;\n    mouse.x -= fract(ar)/2.0;\n    mouse *= 19.0;\n    \n    // Get old mouse state\n    float old_mouse = texture(iChannel0, vec2(0.5)).z;\n\n    // Get current mouse state\n    float new_mouse = iMouse.z;\n\n    // Check change\n    bool click = old_mouse < 0.5 && new_mouse > 0.5;\n    vec2 point = floor(p)/18.0;\n    float state = texture(iChannel0, point).x;\n    float player = texture(iChannel0, mouse/19.0).y;\n    if (abs(player) < 0.0001)\n        player = -1.0;\n    \n    if (iFrame == 0)\n    {\n        fragColor = vec4(0, 0, 0, 1);\n        return;\n    }\n\n    if (abs(state) < 0.01 // On empty spot\n        && click // Mouse clicked\n        && distance(floor(mouse), floor(p)) < 0.001) //In mouse square\n    {\n        state = player;\n        player = -player;\n\t}\n    \n    fragColor = vec4(state, player, new_mouse, 0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}