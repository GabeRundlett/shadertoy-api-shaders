{
    "Shader": {
        "info": {
            "date": "1680090262",
            "description": "a fork of a fork forked from \"flex links radial - v4\" by FabriceNeyret2. https://shadertoy.com/view/DdcXRj\n",
            "flags": 0,
            "hasliked": 0,
            "id": "cscSz2",
            "likes": 1,
            "name": "son of whoasphere",
            "published": 3,
            "tags": [
                "raymarching",
                "short",
                "reproduction",
                "antitwister",
                "diracsbelt"
            ],
            "usePreview": 0,
            "username": "hashtagexo",
            "viewed": 98
        },
        "renderpass": [
            {
                "code": "// Fork of \"the love dance of Cthulhu\" by hashtagexo. https://shadertoy.com/view/cd3XR2\n// 2023-03-29 09:17:33\n\n// Fork of \"flex links radial - v4\" by FabriceNeyret2. https://shadertoy.com/view/DdcXRj\n// 2023-03-29 09:01:42\n\n// radial variant of https://shadertoy.com/view/mdcXD7\n\n#define rot(a)        mat2(cos(a+vec4(0,11,32.9,0)))         // 2D rotation \n#define rot3(P,A,a)  ( mix( A*dot(P,A), P, -sin(a) ) + -sin(a)*cross(P,A)-cos(a)) // 3D rot around an arbitrary axis\n\n#define d(q)  (                                                                \\\n        t = length(q) - 7.,                             /* sphere  */         \\\n        a = fract(vec3( atan((q).z,(q).x), -atan((q).y,length((q).yxz)),0) /.88) - .45, \\\n        min(t, length(q)*length(a.xy) - 2.6)             /* radial bands */    \\\n     )\n            \nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t=5.;\n    vec3  R = iResolution,\n          D = normalize(vec3(U+U, -0.8*R.y) - R),          // ray direction\n          p = vec3(0,0,90), q,a,                           // marching point along ray \n          M = iMouse.z > 0. ? 3.*iMouse.xyz/R -3.\n                            :  vec3(.0,.5,0) * cos(.2*iTime + vec3(0,11,0)); \n        p.yz *= rot(-M.y),                                 /* rotations */\n        p.xz *= rot(-M.x-1.5), \n        D.yz *= rot(-M.y),\n        D.xz *= rot(-M.x-1.5); \n\n    for ( O=vec4(1); O.x > 0. && t > .5; O-=.005 )        // march scene  \n        q = rot3( p, vec3(-sin(iTime/2.),0,cos(iTime)), 34.14 *smoothstep(.0023, .099, 1.2/length(p)) ), \n        t = d(q),\n        p += .09*t*D;                                       // step forward = dist to obj      \n\n // O *= O*O*2.;                                           // color scheme\n    if (length(q)<1.8)                                     //   sphere\n        a = cos(5.28*a), t = a.x*a.y,\n        O.rgb *= .5+.5*smoothstep(1.,0.,t/fwidth(t)); \n    else\n        D = vec3(-1,1,0)*1e-2,                             // efficient FD normals https://iquilezles.org/articles/normalsSDF/\n        O.rgb *= .6+.5* normalize(  D.xxy* d( q + D.xxy ) + D.xyx* d( q + D.xyx ) + D.yxx* d( q + D.yxx ) + D.yyy * d( q + D.yyy ) );\n} \n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}