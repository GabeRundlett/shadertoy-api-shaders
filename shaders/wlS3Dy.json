{
    "Shader": {
        "info": {
            "date": "1560927106",
            "description": "笑脸学习",
            "flags": 0,
            "hasliked": 0,
            "id": "wlS3Dy",
            "likes": 0,
            "name": "笑脸",
            "published": 3,
            "tags": [],
            "usePreview": 0,
            "username": "long",
            "viewed": 168
        },
        "renderpass": [
            {
                "code": "float Circle(vec2 uv, vec2 p, float r, float blur) {\n\tfloat d = length(uv-p);\n    float c = smoothstep(r, r-blur, d);\n    \n    return c;\n}\n\nfloat Smiley(vec2 uv, vec2 p, float size) {\n    uv -= p;\n    uv /= size;\n    \n    float mask = Circle(uv, vec2(0.), .45, .05);\n    \n    mask -= Circle(uv, vec2(-.13, .2), .07, .01);\n    mask -= Circle(uv, vec2(.13, .2), .07, .01);\n    \n    float mouth = Circle(uv, vec2(0., 0.), .3, .02);\n    mouth -= Circle(uv, vec2(0., .1), .3, .02);\n    \n    mask -= mouth;\n\n    return mask;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n    uv -=0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 col = vec3(0.);\n    \n    float t = iTime;\n    vec2 p = vec2(cos(t)*.3, sin(t)*.3);\n    \n    float mask = Smiley(uv, p, .3);\n    \n    \n    col = vec3(1., 1., 0.)*mask;\n    \n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}