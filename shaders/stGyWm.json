{
    "Shader": {
        "info": {
            "date": "1661558903",
            "description": "just fooling around.\nfullscreen! webcam by default, click for shirley.",
            "flags": 34,
            "hasliked": 0,
            "id": "stGyWm",
            "likes": 25,
            "name": "namble bamble 2",
            "published": 3,
            "tags": [
                "video"
            ],
            "usePreview": 0,
            "username": "elenzil",
            "viewed": 810
        },
        "renderpass": [
            {
                "code": "// Fork of \"namble bamble\" by elenzil. https://shadertoy.com/view/NtyyWm\n// 2022-08-27 00:06:34\n\nvoid mainImage( out vec4 RGBA, in vec2 XY )\n{\n    float cellSize = 20.0;\n    float margin   = 0.75;\n    \n    vec2 p = mod(XY + cellSize / 2.0, cellSize) - cellSize / 2.0;\n    vec2 cellP = floor(XY / cellSize + 0.5) * cellSize;\n    \n    float t = iTime * 0.92;\n    \n    vec2 xy = cellP - iResolution.xy / 2.0;\n    if (length(xy) < 0.001) {\n        t = 0.0;\n    }\n    else {\n        t = atan(xy.y, xy.x) + 3.14159 / 2.0;\n    }\n    \n    t += iTime * 2.2;\n    \n    if (iMouse.z < 10.0) {\n    //    t *= 0.0;\n    }\n    \n    float q = texelFetch(iChannel0, ivec2(cellP), 0).r;\n    float rate = q;\n    rate *= 2.0;\n    \n    float theta = t + rate * 3.14159;\n    vec2 rayDir = vec2(cos(theta), sin(theta));\n    \n    float d = abs(rayDir.x * p.y - rayDir.y * p.x) - margin;\n    if (length(p) > cellSize / 2.0 - margin * 2.0) {\n        d = 1e9;\n    }\n    \n    float c = smoothstep(margin, 0.0, d);\n    \n    RGBA = vec4(c, c, c, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iFrame % 1 == 0) {\n        if (iMouse.z < 1.0) {\n            fragColor = texture(iChannel0, vec2(iResolution.x - 1.0 - fragCoord.x, fragCoord.y)/iResolution.xy, 3.0);\n        }\n        else {\n            fragColor = texture(iChannel2, vec2(fragCoord.x, fragCoord.y)/iResolution.xy, 3.0);\n        }\n    }\n    else {\n        fragColor = texelFetch(iChannel1, ivec2(fragCoord), 0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    },
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}