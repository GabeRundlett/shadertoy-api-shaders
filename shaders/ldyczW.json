{
    "Shader": {
        "info": {
            "date": "1521212154",
            "description": "Not all of Plato's solids were keepers.",
            "flags": 32,
            "hasliked": 0,
            "id": "ldyczW",
            "likes": 37,
            "name": "Plato's Sketches",
            "published": 3,
            "tags": [
                "drawing",
                "solids"
            ],
            "usePreview": 0,
            "username": "eiffie",
            "viewed": 1036
        },
        "renderpass": [
            {
                "code": "//No math here try Buf A\nvoid mainImage(out vec4 O, in vec2 U){\n   O=U.y<1.0?vec4(1.0):texture(iChannel0,U/iResolution.xy);\n}\n\n//It is left as a challenge to the reader to create the reciprocal shader that\n//calculates the vertices of the tetrahedron, cube and docedahedron without\n//knowing angles, lengths etc",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//This is where the math should be.. somewhere here\n#define load(a) texture(iChannel0,vec2(a+0.5)/iResolution.xy)\n#define MAX_VERTS 48\nfloat Tube(vec2 pa, vec2 ba){return length(pa-ba*clamp(dot(pa,ba)/dot(ba,ba),0.0,1.0));}\nfloat scrib(vec3 P){vec2 p=vec2(2.0*P.x+3.0*P.y-P.z,(P.x-2.0*P.y+0.5*P.z)*50.0)/64.0;return pow(texture(iChannel1,vec2(p)).r,1.5);}\nvoid mainImage(out vec4 O, in vec2 U){\n   float tm=float(iFrame),d=20.0,t1=-20.0,t2=20.0;\n   if(U.y<1.0 && mod(tm,500.0)<1.0){O=vec4(sin(U.x+tm),sin(sin(U.x+3.0)*1276.54),U.x*0.01,0.0);return;}\n   int verts=6*int(exp2(mod(float(iFrame/500),5.0)-1.0));\n   vec2 uv=(2.0*U-iResolution.xy)/iResolution.y*1.5;\n   if(verts<6){verts=4;uv*=1.5;}  \n   vec3 N,ro=vec3(uv+2.5*vec2(sin(2.0*tm),cos(2.0*tm))/iResolution.y,-3.0);\n   O=texture(iChannel0,U/iResolution.xy);\n   for(int i=0;i<MAX_VERTS;i++){if(i>=verts)break;\n      vec4 v2=load(vec2(i,0.0));\n      if(U.y<1.0){if(i!=int(U.x)){float r=length(O.xyz-v2.xyz);if(r<d){d=r;O.w=float(i);}}\n      }else {\n          d=min(d,Tube(uv-v2.xy,load(vec2(v2.w,0.0)).xy-v2.xy));\n          float t=(dot(v2.xyz,ro)-1.0)/v2.z;\n      \t  if(v2.z>0.0){if(t>t1){N=v2.xyz;t1=t;}}else if(t<t2)t2=t;\n      }\n   }\n   if(U.y<1.0){\n      float sp=0.8-0.0008*mod(tm,500.0);sp=pow(sp,9.0);\n      O.xyz+=(O.xyz-load(vec2(O.w,0.0)).xyz)/(d*d)*sp;\n      float r=length(O.xyz);\n      O.xyz-=sign(r-1.0)*O.xyz/r*sp*(1.0+0.02*float(verts));\n   }else{\n      d=smoothstep(6.0/iResolution.y,0.0,d)*0.05;\n      O=vec4(1.0)-((vec4(1.0)-O)*0.95+d);\n      U=mod(U,20.0);if(min(U.x,U.y)<1.0)O.x*=0.98;\n      if(t1<t2)O=mix(O,vec4(dot(vec3(0.707),N)*0.4+0.45),0.2*pow(max(fract(tm/500.0)-(2.0*uv.y-uv.x)*0.05,0.0),4.0)*scrib(vec3(uv,t1)+N));\n   }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}