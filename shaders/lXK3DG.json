{
    "Shader": {
        "info": {
            "date": "1718185638",
            "description": "pixelation ",
            "flags": 0,
            "hasliked": 0,
            "id": "lXK3DG",
            "likes": 1,
            "name": "pixalation fractal room",
            "published": 3,
            "tags": [
                "fractal",
                "pixel",
                "room",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 276
        },
        "renderpass": [
            {
                "code": "/*original https://www.shadertoy.com/view/DtGyWh*/\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*2.3+vec3(50.,23,21))*2.5+.5)\nfloat Square=280.0;\n\n\n#define CENTER vec2(0.5, 0.5)\n#define PI 3.1415926\n\n#define force 0.08\n#define thickness 0.075\n#define feathering 0.1\n#define aberrationOffset 0.006\n#define flashIntensity 3.0\n\nvec2 centerScaleUV(vec2 UV, vec2 factor) {\n    return (UV - vec2(0.5)) * factor + vec2(0.5);\n}\n\nfloat easeOutSine(float t) {\n  return sin((t * PI) / 2.0);\n}\n\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    vec2 uv=C.xy/iResolution.xy-.5;\nuv.y*=iResolution.y/iResolution.x;\n    float time=1.055;\n\n  \n   \n    float count=time*Square;\n   \n  \n\n    vec3 n1,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<110.;\n        O.xyz+=mix(vec3(1),H(g*.1),sin(.8))*1./e/8e3\n    )\n    {\n         d.xy=(floor(uv*count)/count)*20.;\n         n1.z*=cos(iTime);\n        n1=g*d;\n        \n         n1.zy*=mat2(cos(iTime), sin(iTime), - sin(iTime),cos(iTime));\n                  n1.xz*=mat2(cos(iTime), sin(iTime), - sin(iTime),cos(iTime));\n  \n     \n   \n        a=20.;\n        n1=mod(n1-a,a*2.)-a;\n        s=5.;\n        for(int i=0;i++<8;){\n            n1=.3-abs(n1);\n            \n            n1.x<n1.z?n1=n1.zyx:n1;\n            n1.z<n1.y?n1=n1.xzy:n1;\n            n1.y<n1.x?n1=n1.zyx:n1;\n            \n            s*=e=1.4+sin(iTime*.234)*.1;\n            n1=abs(n1)*e-\n                vec3(\n                    5.+cos(iTime*.3+.5*cos(iTime*.3))*3.,\n                    120,\n                    8.+cos(iTime*.5)*5.\n                 );\n         }\n       //  g+=e=length(p.yz)/s;\n         g+=e=length(n1.yx)/s;\n    }\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}