{
    "Shader": {
        "info": {
            "date": "1671264429",
            "description": "A series of morphing fractal patterns that vaguely resemble circuit boards.",
            "flags": 8,
            "hasliked": 0,
            "id": "mtf3R8",
            "likes": 4,
            "name": "Circuit board patterns",
            "published": 3,
            "tags": [
                "fractal",
                "circuit"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 252
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec2 uv = (fragCoord)/iResolution.y*2.,\n    offset = vec2(0);\n    vec3 col = vec3(0);\n    vec2 uv1 = uv;\n    for(int k = 0; k < 6; k++){\n        offset =\n            abs(fract(vec2(-uv.x-.5,uv.y)-floor(iTime)/16./16.)-.5)\n        ;\n        uv =\n            abs(fract(uv.yx-offset-floor(iTime)/16.)-.5)\n        ;\n        if(uv.x > uv.y)col = vec3(col.yz,abs(uv.x-uv.y));\n    }  \n    fragColor = vec4(min(col*2.,vec3(1.)),1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define fmod(x,y) mod(floor(x),y)\n#define fmax(x,y,z) max(fmod(x,z),fmod(y,z))\n\nvec2 mainSound(int samp, float time){\n  \n  float s1 =\n      5.,\n\n  s2 = 7.,\n  t=\n      time\n  ,\n  m1 =\n      fmax(t*s1,t/s1+s1,s2)\n  ,\n  m4 =\n      fmax(t*s1,t*s1+s1,s2)\n  ,\n  m3 =\n      fmax(t*s1,(t+m4)*s1/(m1+.5),s2);  \n\n  float m2 =\n      1. + fmax(t/s1*2.,t/s1,s1);\n  ;\n  \n  float a=\n      pow((1.-sqrt(fract(t)))/4.,2.)\n  ,\n\n  nb = pow(2.,(m3+m2)/5.+7.);\n\n  return\n      vec2(fract(time*nb*.998)*a,fract(time*nb)*a)\n  ;\n\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}