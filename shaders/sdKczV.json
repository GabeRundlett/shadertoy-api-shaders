{
    "Shader": {
        "info": {
            "date": "1655235142",
            "description": "3 dots emitting colorful waves circle a common center point",
            "flags": 0,
            "hasliked": 0,
            "id": "sdKczV",
            "likes": 1,
            "name": "3 ringsources circeling",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "hk",
            "viewed": 79
        },
        "renderpass": [
            {
                "code": "float PI = 3.141;\n\n\nvec3 ringy(vec2 center, vec3 color, float time) {\n\tfloat mx    = max(iResolution.x, iResolution.y);\n\tvec2  uv    = gl_FragCoord.xy / mx;\n\t\n\tfloat rings = smoothstep(0.99, 0.991, sin(time - distance(uv, center) * 255.0));\n\tvec3  dotty = vec3(smoothstep(0.0011, 0.001, distance(uv, center)));\n\tvec3  circle_source = dotty + vec3(rings) * color;\n\treturn circle_source;\n}\n\n\nvec2 getCenter(float phase, float t) {\n    float mx = max(iResolution.x, iResolution.y);\n    return vec2(iResolution / mx * 0.5)\n        + vec2(\n            sin(t / 10.0 + 2.0 * PI * phase/(2.0*PI)) * 0.1, \n            cos(t / 10.0 + 2.0 * PI * phase/(2.0*PI)) * 0.1);\n}\n\nvec3 getColor(vec2 r, vec2 g, vec2 b, vec2 c) {\n    float mx = max(iResolution.x, iResolution.y);\n    vec2  uv = gl_FragCoord.xy / mx;\n    \n    return vec3(\n        smoothstep(r.x, r.y, distance(uv, c)),\n        smoothstep(g.x, g.y, distance(uv, c)),\n        smoothstep(b.x, b.y, distance(uv, c)));\n}\n\n\nvoid mainImage(out vec4 out_color, in vec2 fragCoord) {\n    float mx = max(iResolution.x, iResolution.y);\n    vec2  uv = gl_FragCoord.xy / mx;\n    float t_wave = iTime * 10.0;\n    float t_spin = iTime *  5.0;\n\t\n    vec2 c1_center = getCenter(2.0/3.0 * PI, t_spin);\n    vec2 c2_center = getCenter(4.0/3.0 * PI, t_spin);\n    vec2 c3_center = getCenter(2.0     * PI, t_spin);\n    \n    vec3 c1_color = getColor(vec2(0.1, 0.05), vec2(0.3, 0.2),  vec2(0.2, 0.1),  c1_center);\n    vec3 c2_color = getColor(vec2(0.3, 0.2),  vec2(0.2, 0.1),  vec2(0.1, 0.05), c2_center);\n    vec3 c3_color = getColor(vec2(0.2, 0.1),  vec2(0.1, 0.05), vec2(0.3, 0.2),  c3_center);\n\n\tvec3 scene = ringy(c1_center, c1_color, t_wave)\n        + ringy(c2_center, c2_color, t_wave)\n        + ringy(c3_center, c3_color, t_wave);\n\tout_color = vec4(scene, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}