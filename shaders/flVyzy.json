{
    "Shader": {
        "info": {
            "date": "1661750439",
            "description": "A fractal rug pattern.",
            "flags": 8,
            "hasliked": 0,
            "id": "flVyzy",
            "likes": 4,
            "name": "Black and gold rug",
            "published": 3,
            "tags": [
                "fractal",
                "carpet",
                "rug"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 239
        },
        "renderpass": [
            {
                "code": "vec2 triangle_wave(vec2 a){\n    return abs(fract((a+vec2(1.,0.5))*1.5)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 8.*4.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = 1.5;\n        vec2 t2 = vec2(0.);\n        for(int k = 0; k < 12; k++){\n            uv = (uv+t2)/scale;\n            t2 = -triangle_wave(uv-.5);\n            //t2 = abs(t2);\n\n            uv = t2-triangle_wave(uv.yx);\n            float c1 = uv.y-uv.x;\n            col = abs(max(col-col.yzx,(vec3(c1,col.yz))));\n            if(t2.x < t2.y) col = col.yzx;\n            //else col = abs(col.x-col.yzx);\n\n            //if(t2.x*uv.x < t2.y*uv.y) col = col.yzx;\n            //if(t2.x-t2.y > uv.x-uv.y) col = col.yzx;\n\n\n        }\n    fragColor = vec4(col*2.,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define fmod(a,b) mod(floor(a),b)\n\nvec2 mainSound(int samp, float time){\n  \n  float t=(time);\n  \n  float m1 = fmod(t/8.,4.),\n  m3 = fmod(t*4./abs(2.5-m1),4.);\n  \n  t *= 16.;\n  float m2 = 1. + min(fmod(t/4.,2.),t);\n\n  t /= max(m2,m1+1.);\n  float m4 = fmod(t/2.,4.);\n  \n  float a=pow(1.-log(1./8.+.25*fract(t/2.)),2.),\n  \n  nb = pow(2.,(m3-m4)/3.+7.5);\n\n  return abs(.5-vec2(fract(time*nb*.998),fract(time*nb)))*a;\n\n}\n\n/*\nvec2 mainSound(int samp, float time){\n  \n  float t=(time)*4.;\n  \n  float m1 = mod(floor(t/4.),4.),\n  m3 = mod(floor(t*4./abs(2.5-m1)),4.),\n  m4 = (mod(floor(t*4.),8.)+m3)/8.,\n  t1 = 2.+m1;\n  //t /= floor(1.+mod(t*2.,2.));\n  \n  t *= 16.;\n  float m2 = 1. + min(mod(floor(t/4.),2.),t);\n\n  t /= max(m2,m1+1.);\n  \n  float a=sqrt(1.-fract(t/8.))*.2,\n  \n  nb = pow(2.,mod(floor(t/8.),8.)/4.+m3+6.5)*(1.-mod(floor(t/2.),t1)/t1);\n  //nb = pow(2.,mod(floor(t),8.)/2.+7.)*(1.-mod(floor(t/2.),t1)/t1);\n\n\n  return vec2(fract(time*nb*.998)*a\n\n   ,fract(time*nb)*a);\n\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}