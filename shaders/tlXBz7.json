{
    "Shader": {
        "info": {
            "date": "1596370643",
            "description": "This is my take on Christopher Sims's Tron Noise... built from scratch to fit in a Shadertoy. Did not look at the source code and simply started from the output on Twitter. The original is to be found here: https://github.com/chrisloop/TronNoise",
            "flags": 32,
            "hasliked": 0,
            "id": "tlXBz7",
            "likes": 26,
            "name": "My take on chrisloop's TronNoise",
            "published": 3,
            "tags": [
                "noise",
                "tron",
                "chrisloop"
            ],
            "usePreview": 0,
            "username": "toomuchvoltage",
            "viewed": 752
        },
        "renderpass": [
            {
                "code": "/***********************************************************\n\n   My take on Christopher Sims' Tron Noise without looking at the source! ;)\n   Reference: https://twitter.com/csims314/status/1288964499387678727\n\t\t\t  https://github.com/chrisloop/TronNoise\n   All noise is modified iq noise : https://www.shadertoy.com/view/Msf3WH\n\n   Covered under the MIT license:\n\n   Copyright (c) 2020 TooMuchVoltage Software Inc.\n\n   Permission is hereby granted, free of charge, to any person obtaining a copy\n   of this software and associated documentation files (the \"Software\"), to deal\n   in the Software without restriction, including without limitation the rights\n   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   copies of the Software, and to permit persons to whom the Software is\n   furnished to do so, subject to the following conditions:\n\n   The above copyright notice and this permission notice shall be included in all\n   copies or substantial portions of the Software.\n\n   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   SOFTWARE.\n\n\n   Hit me up! :)\n   Twitter: twitter.com/toomuchvoltage\n   Facebook: fb.com/toomuchvoltage\n   YouTube: youtube.com/toomuchvoltage\n   Mastodon: https://mastodon.gamedev.place/@toomuchvoltage\n   Website: www.toomuchvoltage.com\n\n************************************************************/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    fragColor = texture (iChannel0, uv) + texture (iChannel1, uv) * 2.0;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "/***********************************************************\n\n   My take on Christopher Sims' Tron Noise without looking at the source! ;)\n   Reference: https://twitter.com/csims314/status/1288964499387678727\n\t\t\t  https://github.com/chrisloop/TronNoise\n   All noise is modified iq noise : https://www.shadertoy.com/view/Msf3WH\n\n   Covered under the MIT license:\n\n   Copyright (c) 2020 TooMuchVoltage Software Inc.\n\n   Permission is hereby granted, free of charge, to any person obtaining a copy\n   of this software and associated documentation files (the \"Software\"), to deal\n   in the Software without restriction, including without limitation the rights\n   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   copies of the Software, and to permit persons to whom the Software is\n   furnished to do so, subject to the following conditions:\n\n   The above copyright notice and this permission notice shall be included in all\n   copies or substantial portions of the Software.\n\n   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   SOFTWARE.\n\n\n   Hit me up! :)\n   Twitter: twitter.com/toomuchvoltage\n   Facebook: fb.com/toomuchvoltage\n   YouTube: youtube.com/toomuchvoltage\n   Mastodon: https://mastodon.gamedev.place/@toomuchvoltage\n   Website: www.toomuchvoltage.com\n\n************************************************************/\n\nvec2 hash( vec2 p ) // replace this by something better\n{\n\tp = vec2( dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)) );\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise( in vec2 p )\n{\n    const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\n\tvec2  i = floor( p + (p.x+p.y)*K1 );\n    vec2  a = p - i + (i.x+i.y)*K2;\n    float m = step(a.y,a.x); \n    vec2  o = vec2(m,1.0-m);\n    vec2  b = a - o + K2;\n\tvec2  c = a - 1.0 + 2.0*K2;\n    vec3  h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n\tvec3  n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n    return dot( n, vec3(70.0) );\n}\n\nfloat remap(float value, float low1, float high1, float low2, float high2)\n{\n    return clamp (low2 + (value - low1) * (high2 - low2) / (high1 - low1), low2, high2);\n}\n\nfloat hatch(vec2 uv, vec2 scrUV, float inpTime)\n{\n    float inp = (noise ((floor (scrUV) + vec2(inpTime)) * 0.3333) + 1.0) * 0.5;\n    float inp2 = (noise (( floor (scrUV * 0.1) + vec2(inpTime * 0.5 + 150.0)) * 0.3333) + 1.0) * 0.5;\n    inp2 = remap (inp2, 0.3, 1.0, 0.0, 1.0);\n    inp = mix (inp, 0.5, pow (inp2 * 18.0, 0.6));\n\n    if ( inp > 0.9 )\n    {\n        if (abs (uv.x - uv.y) < 0.1)\n        {\n            if ( length(uv - vec2 (0.5)) < 0.707 * (inp - 0.9) * 10.0 ) return 1.0;\n            else return 0.0;\n        }\n        else return 0.0;\n    }\n    else if ( inp < 0.1 )\n    {\n        if (abs ((1.0 - uv.x) - uv.y) < 0.1)\n        {\n            if ( length(uv - vec2 (0.5)) < 0.707 * (1.0 - inp * 10.0) ) return 1.0;\n            else return 0.0;\n        }\n        else return 0.0;\n    }\n    else\n        return 0.0;\n}\n\nfloat hatch2(vec2 uv, vec2 scrUV)\n{\n    return hatch (uv, scrUV, iTime + 200.0) + \n\t\t   hatch (uv + vec2(0.5, -0.5), scrUV, iTime + 300.0) +\n\t\t   hatch (uv + vec2(-0.5, 0.5), scrUV, iTime + 400.0) +\n\t\t   hatch (uv + vec2(-0.5, -0.5), scrUV, iTime + 500.0) +\n\t\t   hatch (uv + vec2(0.5, 0.5), scrUV, iTime + 600.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float whr = iResolution.x/iResolution.y;\n    vec2 uv = fragCoord/iResolution.xy * vec2 (whr, 1.0) * 40.0;\n    \n    float noiseVal = clamp (hatch2(fract (uv), uv), 0.0, 1.0);\n    float colorVal = (noise(uv / 75.0) + 1.0) * 0.5;\n    vec3 outCol = mix (vec3 (1.0, 0.5, 0.5), vec3 (1.0, 0.5, 1.0), colorVal) * noiseVal;\n\n    fragColor = vec4(outCol,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "/***********************************************************\n\n   My take on Christopher Sims' Tron Noise without looking at the source! ;)\n   Reference: https://twitter.com/csims314/status/1288964499387678727\n\t\t\t  https://github.com/chrisloop/TronNoise\n   All noise is modified iq noise : https://www.shadertoy.com/view/Msf3WH\n\n   Covered under the MIT license:\n\n   Copyright (c) 2020 TooMuchVoltage Software Inc.\n\n   Permission is hereby granted, free of charge, to any person obtaining a copy\n   of this software and associated documentation files (the \"Software\"), to deal\n   in the Software without restriction, including without limitation the rights\n   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   copies of the Software, and to permit persons to whom the Software is\n   furnished to do so, subject to the following conditions:\n\n   The above copyright notice and this permission notice shall be included in all\n   copies or substantial portions of the Software.\n\n   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   SOFTWARE.\n\n\n   Hit me up! :)\n   Twitter: twitter.com/toomuchvoltage\n   Facebook: fb.com/toomuchvoltage\n   YouTube: youtube.com/toomuchvoltage\n   Mastodon: https://mastodon.gamedev.place/@toomuchvoltage\n   Website: www.toomuchvoltage.com\n\n************************************************************/\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 pixelWH = 1.0/iResolution.xy;\n\n    vec4 finalRes = vec4(0.0);\n    float totalW = 0.0;\n    for (int i = -5; i != 6; i++)\n    {\n        vec4 neighFetch = texture (iChannel0, uv + vec2 (0.0, float(i) * pixelWH.y));\n        finalRes += neighFetch;\n    }\n\tfinalRes /= 11.0;\n    \n    fragColor = finalRes;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "/***********************************************************\n\n   My take on Christopher Sims' Tron Noise without looking at the source! ;)\n   Reference: https://twitter.com/csims314/status/1288964499387678727\n\t\t\t  https://github.com/chrisloop/TronNoise\n   All noise is modified iq noise : https://www.shadertoy.com/view/Msf3WH\n\n   Covered under the MIT license:\n\n   Copyright (c) 2020 TooMuchVoltage Software Inc.\n\n   Permission is hereby granted, free of charge, to any person obtaining a copy\n   of this software and associated documentation files (the \"Software\"), to deal\n   in the Software without restriction, including without limitation the rights\n   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   copies of the Software, and to permit persons to whom the Software is\n   furnished to do so, subject to the following conditions:\n\n   The above copyright notice and this permission notice shall be included in all\n   copies or substantial portions of the Software.\n\n   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   SOFTWARE.\n\n\n   Hit me up! :)\n   Twitter: twitter.com/toomuchvoltage\n   Facebook: fb.com/toomuchvoltage\n   YouTube: youtube.com/toomuchvoltage\n   Mastodon: https://mastodon.gamedev.place/@toomuchvoltage\n   Website: www.toomuchvoltage.com\n\n************************************************************/\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 pixelWH = 1.0/iResolution.xy;\n\n    vec4 finalRes = vec4(0.0);\n    float totalW = 0.0;\n    for (int i = -5; i != 6; i++)\n    {\n        vec4 neighFetch = texture (iChannel0, uv + vec2 (float(i) * pixelWH.x, 0.0));\n        finalRes += neighFetch;\n    }\n\tfinalRes /= 11.0;\n    \n    fragColor = finalRes;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}