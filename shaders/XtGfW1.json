{
    "Shader": {
        "info": {
            "date": "1542302429",
            "description": "first shader w/ textures.\ngenerating U and V based on the distances\nfrom two independent points.\nmouse in lower-left for auto-pilot.",
            "flags": 0,
            "hasliked": 0,
            "id": "XtGfW1",
            "likes": 4,
            "name": "Other UVs",
            "published": 3,
            "tags": [
                "uv",
                "textures"
            ],
            "usePreview": 0,
            "username": "elenzil",
            "viewed": 480
        },
        "renderpass": [
            {
                "code": "// first shader w/ textures.\n// generating U and V based on the distances\n// from two independent points.\n// mouse in lower-left for auto-pilot.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float speed  = 0.5;\n    \n    vec2 scaler = vec2(sin(iTime * speed * 0.3) * 0.1 + 0.12);\n    \n    vec2 p = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    vec2 q;\n    vec2 m;\n    \n    bool autoPilot = (iMouse.x + iMouse.y) < 50.0;\n    \n    if (autoPilot) {\n      q.x = cos( 1.21 * iTime * speed);\n      q.y = sin( 1.01 * iTime * speed);\n      m.x = cos(-1.31 * iTime * speed);\n      m.y = sin(-2.41 * iTime * speed);\n    }\n    else {\n      q = vec2(0.0);\n      m = (iMouse.xy * 2.0 - iResolution.xy) / iResolution.y;\n    }\n    \n    p *= scaler;\n    q *= scaler;\n    m *= scaler;\n    \n    m = m - p;\n    q = q - p;\n\n    \n    float qd = sin(sqrt(sqrt(length(q))) * 20.0);\n    float md = sin(sqrt(sqrt(length(m))) * 20.0);\n    \n    vec2 t = vec2(qd, md);\n\n\tvec2 uv = abs(t);\n\tvec4 tc = texture(iChannel0, uv);\n\tfragColor = tc;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}