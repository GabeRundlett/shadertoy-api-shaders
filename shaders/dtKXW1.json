{
    "Shader": {
        "info": {
            "date": "1686078408",
            "description": "A zellij tile pattern.",
            "flags": 8,
            "hasliked": 0,
            "id": "dtKXW1",
            "likes": 8,
            "name": "Zellij pattern 15 (music)",
            "published": 3,
            "tags": [
                "fractal",
                "mosaic",
                "arabesque",
                "zellij"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 328
        },
        "renderpass": [
            {
                "code": "vec2 f1(vec2 a){\n    return\n        fract(a)\n        //max(abs(.5-fract(a.yx)),abs(.5-fract(a+.5)))\n        //fract(a+fract(a/2.)/2.)\n        //fract(a+fract(a*2.+.5)/2.)\n        //fract(a-fract(a*4.)/2.)\n        //min(abs(fract(a)-.5),abs(fract(a*1.5)-.5))\n\n        //fract(a+floor(a.yx*2.)/32.)\n        //fract(a-floor(-a.yx*2.)/16.)\n        \n    ;\n}\n\nvec2 triangle_wave(vec2 a){\n    vec2 a2 =\n        vec2(1.,0.5)\n        //-vec2(1.,0.5)\n        //vec2(1.+sign(a.x)/2.,0.5-sign(a.x)/2.)\n    ,\n    a1 = a+a2;\n    return\n        abs(f1((a1)*(a2.x+a2.y))-.5)\n    ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 1.;\n    vec2 uv = (fragCoord)/iResolution.x/t1/2.0;\n    uv.y += (iTime/2.0,iTime/3.0)/t1/8.0;\n    if(iMouse.z>.5)\n    uv = uv.xy + iMouse.xy / iResolution.xy/t1;\n    vec2 t2 = vec2(0.);\n    bool b = true;\n    uv.y = mod(uv.y,.25)+ .5 - .125;\n    uv.x = mod(uv.x,.25)+ .5 - .125;\n    //uv.x = mod(uv.x,.25)+.25;\n    for(int k = 0; k < 6; k++){\n        uv =\n            abs(.5-uv-t2)/1.5\n            //abs(.5-max(uv,t2)-t2/1.5)\n            //abs(-.5*sign(t2.y-t2.x)-uv-t2)/1.5\n            //abs(-.5*sign(uv.y-uv.x)-uv-t2)/1.5\n        ;\n        //uv.x -= .5;\n        //if(uv.y<uv.x)\n        \n        //red and silver and blue pattern\n        //uv = abs(fract(vec2(uv+vec2(.5,1.5))*1.5)-.5)/1.5;\n\n        //uv = abs(fract(vec2(uv+vec2(.5,1.5))*3.)-.5)/3.;\n        b =\n            uv.y<uv.x\n            //uv.y<uv.x||!b\n            //uv.y<uv.x&&t2.y<t2.x\n            //uv.y>uv.x||t2.y>t2.x\n            //uv.y>uv.x||t2.y<t2.x\n        ;\n        if(\n            b\n            //b||t2.y>t2.x\n        ){\n            uv = uv.yx;\n            //k -= 1;\n        }\n        t2 =\n            triangle_wave(uv-.5).yx\n            //triangle_wave(uv-.5+floor(.5+t2.y+t2.x)).yx\n            //triangle_wave(uv-.5).yx*(1.5-mod(floor(uv.y),2.)/2.)\n        ;\n        uv =\n            t2-triangle_wave(uv.yx).yx*sign(.5-uv.y)\n            //t2-triangle_wave(uv.yx+.5).yx-triangle_wave(uv.yx).yx*sign(.5-uv.y)\n            //t2-triangle_wave(uv.yx+fract(uv.x/1.5)).yx*sign(.5-uv.y)\n        ;\n        vec2 uv1 =\n            //triangle_wave(uv.yx)\n            uv\n        ;\n        col.x =\n            //t2.x\n            max((t2.y+uv.x),col.x)\n            //max((t2.y-uv.x),1.-col.x)\n            //max((uv.y+uv.x),col.x)\n            //max(fract(t2.y-uv.x+iTime/4.),1.-col.x)\n            //max((t2.y+uv.x),col.x*(t2.y-uv.x))\n            //max((t2.y-uv.x),col.x)\n            \n        ;\n        //if(t2.y<t2.x||b)\n        col =\n            abs(col-(1.+col.x*sign(uv1.x-uv1.y)))\n            //vec3(col.zx,max(col.y,max(uv.y-uv.x,0.)))\n            //max((col-1.+col.x/1.5),(1.-col-col.yzx))\n        ;\n        //col=col.yzx;\n        //if(t2.x>t2.y) col=col.yzx;\n        //else col = 1.-col;\n        //if(uv.x<uv.y) uv.y -= .5;\n        //if(uv.x < .5) uv.x += .5;\n        //if(uv.y < .5) uv.y += .5;\n\n    }\n    if (!b) col = abs(1.-col);\n    fragColor = vec4(min(col,vec3(1.)),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float fract1(float a){\n    return\n        fract(a)\n        //fract(a+pow(fract(a*2.),2.))\n    ;\n}\n\nfloat mod1(float a, float b){\n    return\n        mod(a,b)\n        //mod(a-mod(a,2.),b)\n        //floor(mod(a,b)-mod(a/2.,b)+1.)\n    ;\n}\n\nfloat fmod2(float a, float b){\n    return b*mod1(floor(a),b);\n}\n\nfloat sqmod(float a, float b){\n    float m1 = mod1(floor(a),b);\n    return floor(m1*m1/b);\n}\n\nfloat fmod1(float a, float b){\n    /*\n    for(int i = 0; i < 3; i++){\n        a += floor(a/8.)*8.;\n    }\n    */\n    \n    //a += floor(a/8.)/b*8.*8.;\n    //a = a/2. + floor(a/2.)/b*8.;\n    /*\n    for(float i = 0.; i < mod(floor(a/2.),2.); i++){\n        a += mod(floor(a/8.),2.)*i;\n    }\n    */\n    return\n        mod1(floor(-a/2.),b)\n        //floor(mod(mod(floor(-a/2.),b*1.5),b))\n        //mod(floor(floor(floor(a)*b)/8.),b)\n        //mod(floor(-(a+b)/2.),b)\n        //mod(mod(floor(-a/8.),b*2.),8.)\n        //mod(mod(floor(-a/4.+4.),floor(a/8.+4.)),b)\n        //mod(mod(floor(a/2.+4.),floor(a/8.+4.)),b)\n        //floor(mod(floor(-a),16.)*b/16.)\n        //sqmod(a/2.,b*8.)\n        //mod(floor(-a/2.+fmod2(a/2.,4.)),b)\n        //mod(floor(a/(9.-b)),b)\n        //mod(floor(-a/8.+mod(floor(-a/4.),8.)),b)\n        //mod(floor(a*2.+mod(floor(-a*2./8.*b),b))\n        //mod(floor(-a/2.+mod(floor(-a/2./8.*b),b)),b)\n        //max(mod(floor(-a/2.),b),mod(floor(-a/4.),b))\n        //mod(floor(a*sign(.5-mod(floor(a/8./b),2.))/2.),b)\n        //mod(floor(-a/2./pow(2.,mod(floor(a/8.),2.))),b)\n        //b-mod(floor(-a/2.),b)-1.\n        //mod(floor((b-a)/2.),b)\n        //mod(floor(a/4.)*floor(a/8./b),b)\n        //floor(mod(floor(a*4.)/b,b))\n        //floor(mod(floor(a+floor(a/2.)),b))\n    ;\n}\n\nfloat fmod(float a, float b){\n    //a += floor(a/8.)*b;\n    return\n        fmod1(a,b)\n        //mod(floor(a/2.)+2.,b)\n        //fmod1(a+fmod1(a*8.,8.)/b,b)\n    ;\n}\n\nfloat t1(float t){\n    return\n        t\n        //t+floor(t*4.)/8.\n    ;\n}\n\nvec2 mainSound(int samp, float time){\n  float s1 =\n      8.,\n  m0 = pow(2.,1.+fmod(time,2.)),\n  t = time/m0/2.,\n  m1 = fmod(t1(t),s1);\n  /*\n  for(int i = 0; i < 3; i++){\n      time += mod(floor(time*4.),2.)/2.;\n  }\n  */\n  t =\n      t/(1.+fmod(m1+floor(t1(t)*2.)+floor(t1(t)/2.),2.))\n      //t/(1.+fmod(m1+floor(time*2.)+floor(time/2.),2.))\n      //s1/4.*pow(2.,fmod(t+m1,2.))*t/(1.+fmod(m1+floor(t)+floor(t/2.),2.))\n  ;\n  float\n  m3 =\n      floor(fmod(-t1(time)*m0*s1,s1)/2.)\n      //floor(fmod(-t*m0*s1*8.,s1)/2.)\n  ;\n  float m2 =\n      1. + fmod(t1(t)*s1,s1/2.)\n      //1. + fmod(t*s1,1.+m3)\n      //1. + fmod(t/s1,1.+m3)\n  ;\n  float a=\n      128.*pow((1.-(fract(t1(t)*s1)/5.))/5.,2.)\n      //(1.-log(fract(t1(t/2.)*s1)/4.))\n      //pow(2.,2.-log(fract(t*s1)))\n      //pow(log(fract(t*s1)/16.),2.)\n  ;\n  float nb = pow(2.,(floor(m3*m2/2.)-m1)/5.+8.5);\n  return\n      abs(.5-1.*vec2(fract1(time*nb*.998),fract1(time*nb)))*a\n      //abs(a/16.-abs(.5-vec2(fract1(time*nb*.998),fract1(time*nb)))*a)\n  ;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}