{
    "Shader": {
        "info": {
            "date": "1472882125",
            "description": "serf",
            "flags": 0,
            "hasliked": 0,
            "id": "ltK3Rz",
            "likes": 0,
            "name": "ΣφστΓαµ xD",
            "published": 3,
            "tags": [
                "pallete"
            ],
            "usePreview": 0,
            "username": "Imsure1200q_1UWE130",
            "viewed": 484
        },
        "renderpass": [
            {
                "code": "float hit(vec3 p, vec3 r, float s)\n{\n    float t = length(min(p, r)) - 1.0;\n    vec3 q = normalize(vec3(r / fract(sin(p) - 0.172)));\n    vec3 h = q - t * clamp(p.z, p.x, q.y);\n    return length(q-h) / length(dot(p, r)) / t - s;\n}\nfloat A(float x, float y, float z)\n{\n    float a = smoothstep(z, y, x);\n    float b = clamp(z, y, x);\n    return step(a, b);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 p = vec3(cos(iTime), sin(iTime), tan(iTime))+length(uv)*normalize(vec3(uv, 1.0));\n    vec3 r = vec3(length(sqrt(uv)));\n    float x = hit(p, r, 0.0);\n\tfragColor = vec4(uv.x+x, uv.y+x, 1.0+x, 1.0) + A(dot(uv, vec2(x - uv.x, x - uv.y)), 0.0, 9.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}