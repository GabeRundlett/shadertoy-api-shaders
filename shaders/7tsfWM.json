{
    "Shader": {
        "info": {
            "date": "1650991361",
            "description": "procedural sky with clouds and sun",
            "flags": 0,
            "hasliked": 0,
            "id": "7tsfWM",
            "likes": 6,
            "name": "Procedural sky",
            "published": 3,
            "tags": [
                "procedural",
                "sun",
                "clouds",
                "sky"
            ],
            "usePreview": 0,
            "username": "rabbitator",
            "viewed": 840
        },
        "renderpass": [
            {
                "code": "#define st smoothstep\n\nfloat noise(vec2 p) {\n  return fract(sin(p.x * 83.876 + p.y * 76.123) * 3853.875);\n}\n\nfloat perlin(vec2 uv, float iters) {\n  float c = 1.0;\n  for (float i = 0.0; i < iters; i++) {\n    float p = pow(2.0, i + 1.0);\n    vec2 luv = uv * vec2(p) + iTime * 0.2;\n    vec2 gv = st(0.0, 1.0, fract(luv));\n    vec2 id = floor(luv);\n    float lb = noise(id + vec2(0.0, 0.0));\n    float rb = noise(id + vec2(1.0, 0.0));\n    float lt = noise(id + vec2(0.0, 1.0));\n    float rt = noise(id + vec2(1.0, 1.0));\n    float b = mix(lb, rb, gv.x);\n    float t = mix(lt, rt, gv.x);\n    c += 1.0 / p * mix(b, t, gv.y);\n  }\n  return c / 2.0;\n}\n\nfloat dst_sun(vec2 uv) {\n  return st(0.42, 0.35, sqrt(length(uv - vec2(33.8, 34.7))));\n}\n\nfloat dst_cldsun(vec2 uv) {\n  return 0.8 * st(0.6, 0.2, sqrt(length(uv - vec2(33.8, 34.7))));\n}\n\nfloat dst_galo(vec2 uv) {\n  return st(1.0, 0.1, pow(length(uv - vec2(33.8, 34.7)), 0.4));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = (gl_FragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n  uv *= 5.0;\n  uv += 33.0;\n\n  vec3 sky = vec3(0.3, 0.5, 0.8);\n  vec3 cloud = 0.85 * vec3(1.0, 1.0, 1.0);\n  vec3 galo = vec3(1.0, 0.9, 0.8);\n  vec3 sun = vec3(1.0, 1.0, 0.98);\n  vec3 cld_sun = 1.3 * vec3(1.0, 1.0, 0.75);\n\n  float j = sin(2.0) * 0.1 + 0.7;\n  float dst_cloud = st(j, j + 0.1, perlin(uv, 8.0));\n  float dst_sun = dst_sun(uv);\n\n  vec3 color = mix(sky, galo, dst_galo(uv));\n  color = mix(color, sun, dst_sun);\n  color = mix(color, cloud, dst_cloud);\n  color = mix(color, mix(color, cld_sun, dst_cldsun(uv)), dst_cloud);\n  fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}