{
    "Shader": {
        "info": {
            "date": "1598396086",
            "description": "source : https://www.youtube.com/watch?v=zXsWftRdsvU\nMy Game : https://play.google.com/store/apps/details?id=com.BigBUFF.OnetIconConnect",
            "flags": 0,
            "hasliked": 0,
            "id": "Wl2fzR",
            "likes": 1,
            "name": "23. Value Noise",
            "published": 3,
            "tags": [
                "valuenoise"
            ],
            "usePreview": 0,
            "username": "altera0",
            "viewed": 258
        },
        "renderpass": [
            {
                "code": "/*\n\nQuestion And Answer. !\n\nMrSerozka\n4 months ago\nOn my PC that noise eventually become more vague until just gray screen.\n(when I open your shadertoy too). Why is that?\n\n\nThe Art of Code\n4 months ago\nIt could be that your graphics card doesn't have a very precise sine implementation for the random function. Try a different noise function. You could take one from a ShaderToy called 'hash without sine'\n\n*/\n\nfloat N21( vec2 p ) {\n   //float c = fract( sin (p.x*100.0 + p.y * 6574.0) * 5647.0 );\n    \n   float c = fract( sin (p.x*190.0 + p.y * 65.0) * 56.0 );\n   return c;\n}\n\nfloat SmoothNoise( vec2 uv ) {\n    \n    vec2 lv = fract(uv ); // level\n    //lv = smoothstep( 0.0 , 1.0 , lv );\t\t// smoothstep lv\n    lv = lv * lv * ( 3.0 - 2.0 * lv );\n    \n    vec2 id = floor(uv ); // id\n    \n    \n    float bl = N21( id );\n    float br = N21( id + vec2( 1 , 0 ) );\n    float b = mix( bl , br , lv.x );\n    \n    \n    float tl = N21( id + vec2( 0 , 1 ));\n    float tr = N21( id + vec2( 1 , 1 ));\n    float t = mix( tl , tr , lv.x );\n    \n    \n    float c = mix( b , t , lv.y );\n    \n \n    return c;\n}\n\n \nfloat SmoothNoise2( vec2 uv ) {\n  \tfloat c = 0.0;\n    \n    c += SmoothNoise( uv * 4.0  ) * 1.0;\n    c += SmoothNoise( uv * 8.0  ) * 0.5;\n    c += SmoothNoise( uv * 16.0 ) * 0.25;\n    c += SmoothNoise( uv * 32.0 ) * 0.125;\n    c += SmoothNoise( uv * 64.0 ) * 0.0625;\n    \n    c /= 2.0;   \n    return c;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n\n    \n    uv += iTime * 1.0;\n    float c = SmoothNoise2( uv );\n    \n    \n    vec3 col = vec3(c);\n    //col.rg = id * 0.1;\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}