{
    "Shader": {
        "info": {
            "date": "1603016399",
            "description": "Color conversions:\nLCh(ab) ↔ Lab ↔ XYZ ↔ sRGB\nLCh(uv) ↔ Luv ↔ XYZ ↔ sRGB",
            "flags": 0,
            "hasliked": 0,
            "id": "3dKyWm",
            "likes": 7,
            "name": "CIE Lab, Luv, LCh",
            "published": 3,
            "tags": [
                "lab",
                "lch",
                "cielab",
                "cielch",
                "luv",
                "cie",
                "cieluv"
            ],
            "usePreview": 0,
            "username": "thepheer",
            "viewed": 589
        },
        "renderpass": [
            {
                "code": "#define rep(m, x) (mod(x, 2.0*(m)) - (m))\n#define sdf(w, d) smoothstep(1.5*(w), 0.0, d)\n#define plot(w, x, y) sdf(w, abs((x) - (y)))\n#define range(x, a, b) ((a) <= (x) && (x) < (b))\n\nvoid mainImage(out vec4 rgba, vec2 xy) {\n    vec2 px = 1.0/iResolution.xy;\n    vec2 uv = xy*px;\n    \n    float tau = radians(360.0);\n    float L = 0.50 + 0.49*sin(tau*(0.2*uv.x - 0.1*iTime));\n    float C = L*(1.0 - L);\n    float h = tau*(fract(uv.x + 0.5*iTime) - 0.5);\n\n    // LCh → Lab → sRGB → Lab → LCh\n    vec3 LCh1 = vec3(L, C, h);\n    vec3 Lab1 = LCh_to_Lab(LCh1);\n    vec3 sRGB = Lab_to_sRGB(Lab1);\n    vec3 Lab2 = sRGB_to_Lab(sRGB);\n    vec3 LCh2 = Lab_to_LCh(Lab2);\n    \n    float dashed = sdf(1.0, abs(rep(6.0, xy.x)) - 4.0);\n    float dotted = sdf(1.0, abs(rep(2.0, xy.x)));\n    vec3 split = 0.025*vec3(-1.0, 0.0, 1.0);\n    \n    vec3 plots =\n        plot(px.y, uv.y, 0.500)*dotted*0.1 +\n        plot(px.y, uv.y, 0.100)*dotted*0.1 +\n        plot(px.y, uv.y, 0.775 + 1e3*(LCh2 - LCh1) - split) +\n        plot(px.y, uv.y, 0.625 + 2e4*(Lab2 - Lab1) - split) +\n        plot(px.y, uv.y, 0.100 + 0.4*sRGB);\n\n    vec3 rgb =\n        range(uv.y, 0.9, 1.0) ? sRGB :\n    \tplots;\n\n    rgba = vec4(sRGB_OETF(rgb), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define diag3(v) mat3((v).x, 0.0, 0.0, 0.0, (v).y, 0.0, 0.0, 0.0, (v).z)\n#define xyY_to_XYZ(x, y, Y) vec3(Y/y*x, Y, Y/y*(1.0 - x - y))\n#define xy_to_XYZ(x, y) vec3(x/y, 1.0, (1.0 - x - y)/y)\n#define xy_to_xyz(x, y) vec3(x, y, 1.0 - x - y)\n\nconst mat3 BFD = mat3(0.8951, -0.7502, 0.0389, 0.2664, 1.7135, -0.0685, -0.1614, 0.0367, 1.0296);\n\nconst vec3 D50 = xy_to_XYZ(0.34567, 0.35850);\nconst vec3 D65 = xy_to_XYZ(0.31271, 0.32902);\nconst mat3 D65_TO_D50 = inverse(BFD)*diag3((BFD*D50)/(BFD*D65))*BFD;\n\nconst mat3 sRGB = mat3(xy_to_XYZ(0.64, 0.33), xy_to_XYZ(0.30, 0.60), xy_to_XYZ(0.15, 0.06));\nconst mat3 sRGB_TO_XYZ_D65 = sRGB*diag3(inverse(sRGB)*D65);\nconst mat3 sRGB_TO_XYZ_D50 = D65_TO_D50*sRGB_TO_XYZ_D65;\nconst mat3 XYZ_D65_TO_sRGB = inverse(sRGB_TO_XYZ_D65);\nconst mat3 XYZ_D50_TO_sRGB = inverse(sRGB_TO_XYZ_D50);\n\nvec3 sRGB_OETF(vec3 c) {\n    vec3 a = 12.92*c;\n    vec3 b = 1.055*pow(c, vec3(1.0/2.4)) - 0.055;\n    return mix(a, b, greaterThan(c, vec3(0.00313066844250063)));\n}\n\nvec3 sRGB_EOTF(vec3 c) {\n    vec3 a = c/12.92;\n    vec3 b = pow((c + 0.055)/1.055, vec3(2.4));\n    return mix(a, b, greaterThan(c, vec3(0.0404482362771082)));\n}\n\n// LCh(ab) ↔ Lab ↔ XYZ ↔ sRGB\n\nvec3 XYZ_to_Lab(vec3 XYZ, vec3 XYZw) {\n    vec3 t = XYZ/XYZw;\n    vec3 a = pow(t, vec3(1.0/3.0));\n    vec3 b = 841.0/108.0*t + 4.0/29.0;\n    vec3 c = mix(b, a, greaterThan(t, vec3(216.0/24389.0)));\n    return vec3(1.16*c.y - 0.16, vec2(5.0, 2.0)*(c.xy - c.yz));\n}\n\nvec3 Lab_to_XYZ(vec3 Lab, vec3 XYZw) {\n    float L = (Lab.x + 0.16)/1.16;\n    vec3 t = vec3(L + Lab.y/5.0, L, L - Lab.z/2.0);\n    vec3 a = pow(t, vec3(3.0));\n    vec3 b = 108.0/841.0*(t - 4.0/29.0);\n    return XYZw*mix(b, a, greaterThan(t, vec3(6.0/29.0)));\n}\n\nvec3 LCh_to_Lab(vec3 LCh) {\n    return vec3(LCh.x, LCh.y*vec2(cos(LCh.z), sin(LCh.z)));\n}\n\nvec3 Lab_to_LCh(vec3 Lab) {\n    return vec3(Lab.x, length(Lab.yz), atan(Lab.z, Lab.y));\n}\n\nvec3 sRGB_to_Lab(vec3 sRGB) {\n    return XYZ_to_Lab(sRGB_TO_XYZ_D50*sRGB, D50);\n}\n\nvec3 Lab_to_sRGB(vec3 Lab) {\n    return XYZ_D50_TO_sRGB*Lab_to_XYZ(Lab, D50);\n}\n\n// LCh(uv) ↔ Luv ↔ XYZ ↔ sRGB\n\n#define XYZ_to_uv(XYZ) vec2(4.0, 9.0)*XYZ.xy/(XYZ.x + 15.0*XYZ.y + 3.0*XYZ.z)\n#define xy_to_uv(xy) vec2(4.0, 9.0)*xy/(-2.0*xy.x + 12.0*xy.y + 3.0)\n#define uv_to_xy(uv) vec2(9.0, 4.0)*uv/(6.0*uv.x - 16.0*uv.y + 12.0)\n\nvec3 XYZ_to_Luv(vec3 XYZ, vec3 XYZw) {\n    float Y = XYZ.y/XYZw.y;\n    float L = Y > 216.0/24389.0 ? 1.16*pow(Y, 1.0/3.0) - 0.16 : 24389.0/2700.0*Y;\n    return vec3(L, 13.0*L*(XYZ_to_uv(XYZ) - XYZ_to_uv(XYZw)));\n}\n\nvec3 Luv_to_XYZ(vec3 Luv, vec3 XYZw) {\n\tvec2 uv = Luv.yz/(13.0*Luv.x) + XYZ_to_uv(XYZw);\n    float Y = Luv.x > 0.08 ? pow((Luv.x + 0.16)/1.16, 3.0) : 2700.0/24389.0*Luv.x;\n    float X = (9.0*uv.x)/(4.0*uv.y);\n    float Z = (12.0 - 3.0*uv.x - 20.0*uv.y)/(4.0*uv.y);\n    return XYZw.y*vec3(Y*X, Y, Y*Z);\n}\n\nvec3 LCh_to_Luv(vec3 LCh) {\n    return vec3(LCh.x, LCh.y*vec2(cos(LCh.z), sin(LCh.z)));\n}\n\nvec3 Luv_to_LCh(vec3 Luv) {\n    return vec3(Luv.x, length(Luv.yz), atan(Luv.z, Luv.y));\n}\n\nvec3 sRGB_to_Luv(vec3 sRGB) {\n    return XYZ_to_Luv(sRGB_TO_XYZ_D65*sRGB, D65);\n}\n\nvec3 Luv_to_sRGB(vec3 Luv) {\n    return XYZ_D65_TO_sRGB*Luv_to_XYZ(Luv, D65);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}