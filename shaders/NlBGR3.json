{
    "Shader": {
        "info": {
            "date": "1624317444",
            "description": "Use the mouse X and Y to change the two curve parameters.\n\nThis curve is based around a simple exponential curve, \"y=pow(x, a)\". I wanted to have a different exponent at each end, so I started playing with curves like \"y=pow(x, lerp(a, b, x))\".",
            "flags": 0,
            "hasliked": 0,
            "id": "NlBGR3",
            "likes": 1,
            "name": "Double-exponent 2D curve",
            "published": 3,
            "tags": [
                "curve",
                "interpolation"
            ],
            "usePreview": 0,
            "username": "heyx3",
            "viewed": 271
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mUV = iMouse.xy / iResolution.xy;\n    \n    //Pick the two exponents based on the mouse coordinates.\n    vec2 exponents = mix(vec2(0.11111), vec2(5.0),\n                         //Apply a curve so the small values are more spread out:\n                         pow(mUV, vec2(2.0)));\n    \n    //Calculate the curve.\n    float graphY = pow(uv.x, mix(exponents.x, exponents.y, uv.x));\n    \n    //Color the area under the curve black.\n    fragColor = vec4(vec3(step(graphY, uv.y)), 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}