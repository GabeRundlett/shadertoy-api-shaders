{
    "Shader": {
        "info": {
            "date": "1587896629",
            "description": "Golfing 1227 chars \"Starry blur\" by nimitz. [url]https://shadertoy.com/view/tsXBRH[/url]\ncould it be shorter ? ;-)",
            "flags": 0,
            "hasliked": 0,
            "id": "wdsBz4",
            "likes": 11,
            "name": "Starry blur ( 544 chars )",
            "published": 3,
            "tags": [
                "blur",
                "short",
                "quick",
                "artistic",
                "lic",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 612
        },
        "renderpass": [
            {
                "code": "// Golfing 1227 \"Starry blur\" by nimitz. https://shadertoy.com/view/tsXBRH\n\n// --- ( getting obfuscated )\n\n#define R    iResolution.xy//\n#define H(x) fract( 4e5* sin( ceil(x+p) *mat2(R-1.,R*R) ) ) * 2. - 1.//\n#define D    dot( f - n//\nvec2 N( vec2 p ) {     // 2d gradient noise & analytic derivatives\n    vec2  f = fract(p), F = f*f,\n          u = F*f* (6.*F-15.*f+10.),\n          n = vec2(0,1),\n          a = H(), b = H(n.yx), c = H(n), d = H(1.);\n    return a + mat2(b-a,c-a) * u + u.x*u.y * (a-b-c+d) \n             + 30.*  F* (F-f-f+1.)\n                  * (  u.yx * ( D.x,a) - D.yx,b) - D,c) + D.y,d) ) \n                     + vec2( D.yx,b) , D,c) ) \n                     - D.x,a) );\n}\n#define F normalize( N(P+P) + .3* N(P*8.) ).yx// *v(1,-1) makes it divergence-free\nvoid mainImage(out vec4 O, vec2 U) { O-=O;\n    vec2 p = U/R.y, P = p, d = F;\n    for(float i = 0. ; ++i < 16. ; d = ( d + F )/2. )\n        P = p + d*vec2(i,-i)/2e2 * ( sin(iTime)/4.+.6 ),\n        O += texture(iChannel0, P).bgra;\n    O *=  smoothstep(-.25,.9,p.y) /11.;\n} /*\n\n\n\n\n// --- 568 chars\n        \n        #define R iResolution.xy//\n#define H(x) fract( 4e5* sin( (x+i) *mat2(R-1.,R*R) ) ) * 2. - 1.//\nvec2 N( vec2 p ) {\n    vec2  i = ceil(p), f = fract(p), F=f*f,\n          u = F*f* (6.*F-15.*f+10.),\n          n = vec2(0,1),\n          a = H(), b = H(n.yx), c = H(n), d = H(1.);\n    float A = dot(  a, f  ),\n          B = dot(  b, f - n.yx ),\n          C = dot(  c, f - n );\n    return a + mat2(b-a,c-a) *u + u.x*u.y*(a-b-c+d) \n           + 30.*  F* (F-f-f+1.)\n                * ( u.yx*(A-B-C+dot(d,f-1.)) + vec2(B,C) - A );\n}\n#define F(p) normalize( ( N(p+p) + N(p*8.)*.3 ).yx *vec2(1,-1) )//\n#define mainImage(O,U)                            \\\n    vec2 p = U/R.y, d = F(p), P;                  \\\n    for(float i = 0.; i < 15.; i++)               \\\n        P = p + d*i/2e2 * ( sin(iTime)/4.+.6 ),   \\\n        O += texture(iChannel0, P).bgra,          \\\n        d = (d + F(P) )/2.;                       \\\n    O *=  smoothstep(-.25,.9,p.y) /11.           /*\n\n\n\n\n// --- 701 chars\n\nfloat n = 15.;\n#define R iResolution.xy\n\n#define H(x) ( fract( 4e5* sin( (x)*mat2(R-1.,R*R) ) ) * 2. - 1.)\n\nvec2 N( vec2 p )\n{\n    vec2 i = ceil(p), f = fract(p),\n         u = f*f*f*(f*(f*6.-15.)+10.),\n        du = 30.*f*f*(f*(f-2.)+1.),\n         n = vec2(0,1),\n        ga = H( i ),\n        gb = H( i + n.yx ),\n        gc = H( i + n ),\n        gd = H( i + 1. );\n    \n    float va = dot( ga, f  ),\n          vb = dot( gb, f - n.yx ),\n          vc = dot( gc, f - n ),\n          vd = dot( gd, f - 1. );\n    return ga + mat2(gb-ga,gc-ga) *u + u.x*u.y*(ga-gb-gc+gd) + \n           du * ( u.yx*(va-vb-vc+vd) + vec2(vb,vc) - va );\n}\n\n#define F(p) normalize( ( N(p*2.) + N(p*8.)*.3 ).yx *vec2(1,-1) )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 q = U/R,  v = 4.*q*(1.-q),\n         p = U/R.y,\n         d = F(p), P;    \n    O-=O;\n    \n    for(float i = 0.; i < n; i++)\n        P = p + d*i/2e2 * ( sin(iTime)/4.+.6 ),\n        O += textureLod(iChannel0, P,0.).bgra,\n        d = (d + F(P) )/2.;\n    \n    O *=  smoothstep(-.25,.9,q.y) *1.35/n\n\t  * ( pow(v.x*v.y, .15)*.4 + .6 );\n}\n\n/**/   \n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}