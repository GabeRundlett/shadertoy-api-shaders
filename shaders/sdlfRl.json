{
    "Shader": {
        "info": {
            "date": "1645236638",
            "description": "e",
            "flags": 0,
            "hasliked": 0,
            "id": "sdlfRl",
            "likes": 12,
            "name": "Fractal nice colors",
            "published": 3,
            "tags": [
                "e"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 245
        },
        "renderpass": [
            {
                "code": "mat2 Rot(float a) {\n    float s = sin(a), c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec2 ouv = uv;\n      \n    float m = 0.16;\n    float th = 0.8 * iTime;\n    float n = 4.; // other values look cool too\n    vec2 id = vec2(1.);\n    for(float i = 0.; i < n; i++) {      \n        uv *= Rot(2. * pi * h21(id) + length(ouv) + 0.2 * iTime);\n       \n        id *= 0.5;\n        id += vec2(step(uv.x, 0.), step(uv.y, 0.));\n        \n        th += 0.5 * pi / n * cos(th); // can remove cos(th)\n        \n        vec2 p = 0.5 * vec2(thc(8., th), ths(8., th)) - 0.5;\n        uv = abs(uv - 0.5 * m * abs(p) + 0. * m) - m;\n        m *= 0.5;\n    }\n       \n    // maybe dont include 0.1*length(ouv)\n    float h = h21(id + floor(h21(id) + 0.1 * length(ouv) + 0.2 * iTime));\n    h = smoothstep(0., 1., h);\n    \n    float d = length(uv);\n    float k = 2.4;//mix(0.1, 2., 0.5 + 0.5 * thc(3., 2. * pi * h + iTime)); //1./iResolution.y;\n    float s = smoothstep(-k, k, -d + 2.* m); //2m not needed\n     \n    vec3 e = vec3(1.);\n    vec3 col = s * pal(0.4 * ouv.y + h, e, e, e, 0.45 * vec3(0,1,2)/3.);\n    col = sqrt(col);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define pi 3.14159\n\n#define thc(a,b) tanh(a*cos(b))/tanh(a)\n#define ths(a,b) tanh(a*sin(b))/tanh(a)\n#define sabs(x) sqrt(x*x+1e-2)\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat h21 (vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat mlength(vec2 uv) {\n    return max(abs(uv.x), abs(uv.y));\n}\n\nfloat mlength(vec3 uv) {\n    return max(max(abs(uv.x), abs(uv.y)), abs(uv.z));\n}\n\nfloat smin(float a, float b)\n{\n    float k = 0.12;\n    float h = clamp(0.5 + 0.5 * (b-a) / k, 0.0, 1.0);\n    return mix(b, a, h) - k * h * (1.0 - h);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}