{
    "Shader": {
        "info": {
            "date": "1611285168",
            "description": "I followed another of the Art of Code's tutorials, this time on hexagonal tiling: [url=https://www.youtube.com/watch?v=VmrIDyYiJBA]https://www.youtube.com/watch?v=VmrIDyYiJBA[/url]",
            "flags": 2,
            "hasliked": 0,
            "id": "WtyyRK",
            "likes": 37,
            "name": "Hexagonal Pixelation Effect",
            "published": 3,
            "tags": [
                "webcam",
                "tiling",
                "pixelate",
                "hexagonal"
            ],
            "usePreview": 1,
            "username": "oneshade",
            "viewed": 1309
        },
        "renderpass": [
            {
                "code": "#define TILINGS 20.0\n\nfloat hexDist(in vec2 p) {\n    p = abs(p);\n    float edgeDist = dot(p, normalize(vec2(1.0, 1.73)));\n    return max(edgeDist, p.x);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * TILINGS;\n    float unit = 2.0 * TILINGS / iResolution.y;\n\n    vec2 rep = vec2(1.0, 1.73); // 1.73 ~ sqrt(3)\n    vec2 hrep = 0.5 * rep;\n    vec2 a = mod(uv, rep) - hrep;\n    vec2 b = mod(uv - hrep, rep) - hrep;\n    vec2 hexUv = dot(a, a) < dot(b, b) ? a : b;\n    vec2 cellId = uv - hexUv;\n\n    vec2 sampleUv = cellId / TILINGS;\n    sampleUv.x *= iResolution.y / iResolution.x;\n    float brightness = dot(texture(iChannel0, sampleUv + 0.5).rgb, vec3(1.0 / 3.0));\n    fragColor = vec4(smoothstep(unit, 0.0, hexDist(hexUv) - brightness * 0.5));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}