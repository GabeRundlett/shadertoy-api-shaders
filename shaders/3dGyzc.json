{
    "Shader": {
        "info": {
            "date": "1603323340",
            "description": "Fractal parameterised by audio",
            "flags": 0,
            "hasliked": 0,
            "id": "3dGyzc",
            "likes": 6,
            "name": "Fractal VJ",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "henrmota",
            "viewed": 298
        },
        "renderpass": [
            {
                "code": "#define PI 3.14155\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \tvec2 uv = (fragCoord.xy -0.5*iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    vec3 col = vec3(0);\n    uv*=2.0;\n    float freq = smoothstep(0.3, 0.7,(\n        texture(iChannel0, vec2(0., 0.)).x + \n        texture(iChannel0, vec2(0.25, 0.25)).x + \n        texture(iChannel0, vec2(0.5, 0.5)).x +\n        texture(iChannel0, vec2(0.75, 0.75)).x + \n        texture(iChannel0, vec2(1., 1.)).x) / 5.);\n    \n\tfloat onePixel = 1./iResolution.y;\n    /*\n    \n    \n    col.rg += sin(uv * 100.);\n    //col += m;\n    */\n    float angle = 5./6. * PI;\n    vec2 rv = vec2(sin(angle), cos(angle));\n    uv.x = abs(uv.x);\n    uv.y -= 0.3;\n    uv -= max(0., dot(uv - vec2(0.5, 0), rv))*rv*2.0;\n    \n    angle = mix(2./3., 2.15/3., freq) * PI;\n    rv = vec2(sin(angle), cos(angle));\n   \tuv.x += 0.5;\n    float rescale = 1.;\n    for(int i = 0; i < 7; i++) {\n      uv *= 3.0;\n      rescale *= 3.0;\n      uv.x -= 1.5;\t\n      uv.x = abs(uv.x);\n      uv.x -= 0.5;\n   \t  uv -= min(0., dot(uv, rv))*rv*2.0;\n    }\n    \n   \n    uv/=rescale;\n    float lineDistance = distance(uv, vec2(clamp(uv.x, -1., 1.), 0.));\n    \n    //col.r += sin(uv.y * 0.5);\n    // Output to screen\n    col+= pow(texture(iChannel0, uv).r, 0.5) * texture(iChannel1,  fract(uv + freq*0.01)).rgb; \n    col.rgb += pow(smoothstep(mix(2., 20., freq) * onePixel, onePixel * 0.9, lineDistance), 3.);\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 35,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}