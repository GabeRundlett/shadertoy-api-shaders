{
    "Shader": {
        "info": {
            "date": "1721324939",
            "description": "Familiar [url=https://en.wikipedia.org/wiki/Checker_shadow_illusion]checker shadow illusion[/url], now in 1bit color!\nMouse click for grayscale.",
            "flags": 0,
            "hasliked": 0,
            "id": "lcfyRj",
            "likes": 7,
            "name": "Checker shadow illusion, 1bit",
            "published": 3,
            "tags": [
                "dither",
                "optical",
                "illusion"
            ],
            "usePreview": 0,
            "username": "FordPerfect",
            "viewed": 191
        },
        "renderpass": [
            {
                "code": "// Public Domain under http://unlicense.org, see link for details.\n\n// Familiar checker shadow illusion, now in 1bit color.\n// Mouse click for grayscale.\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    float h=3.0;\n    float H=2.0;\n    float R=1.0;\n    float r=0.25;\n    vec2 C=vec2(3.0,-5.0);\n    vec2 n=normalize(vec2(-2,1));\n    vec2 xy=(2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 ro=vec3(0,h,0);\n    vec3 rd=normalize(vec3(xy+vec2(0,-0.25),-1.0));\n    vec3 col=vec3(0.625);\n    if(rd.y<0.0)\n    {\n        vec2 xz=(ro-rd*h/rd.y).xz;\n        vec2 uv=0.5*mat2(0.6,-0.8,0.8,0.6)*xz;\n        col=vec3(0.5)+0.5*mod(dot(floor(uv),vec2(1)),2.0);\n        col=mix(col,vec3(0.75),smoothstep(-0.25,0.0,rd.y));\n        vec2 d=xz-C;\n        if(dot(n,d)>0.0) col*=0.5+0.5*smoothstep(R+0.05*dot(n,d),R+0.5*dot(n,d),abs(n.x*d.y-n.y*d.x));\n        vec2 A=rd.xz,B=ro.xz-C;\n        float a=dot(A,A),b=dot(A,B),c=dot(B,B)-R*R;\n        float t=b*b-a*c;\n        if(t>0.0)\n        {\n            t=(-b-sqrt(t))/a;\n            vec3 D=ro+t*rd;\n            if(D.y>0.0)\n            {\n                if(D.y<H) col=vec3(0.5+0.375*normalize(D.xz-C).x);\n                else\n                {\n                    t=(H-h)/rd.y;\n                    D=ro+t*rd;\n                    if(length(D.xz-C)<R) col=vec3(0.625);\n                }\n            }\n        }\n    }\n    // Dithering.\n    const int M[16]=int[16](\n         0, 8, 2,10,\n        12, 4,14, 6,\n         3,11, 1, 9,\n        15, 7,13, 5);\n    if(iMouse.z<=0.0) col=floor(col+(float(M[(int(fragCoord.x)&3)+4*(int(fragCoord.y)&3)])+0.5)/16.0);\n    col=mix(12.92*col,1.055*pow(col,vec3(1.0/2.4))-0.055,step(0.0031308,col)); // sRGB\n    fragColor=vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}