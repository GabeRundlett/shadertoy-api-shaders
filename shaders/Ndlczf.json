{
    "Shader": {
        "info": {
            "date": "1642458696",
            "description": ":)",
            "flags": 0,
            "hasliked": 0,
            "id": "Ndlczf",
            "likes": 21,
            "name": "Tree Blossom",
            "published": 3,
            "tags": [
                "tree",
                "kifs"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 387
        },
        "renderpass": [
            {
                "code": "#define R iResolution.xy\n#define T iTime\n#define dT iTimeDelta\n#define I iFrame\n#define N 250\n#define Main void mainImage(out vec4 Q, in vec2 V)\n#define ei(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\nvec4 hash(vec4 p4)\n{\n\tp4 = fract(p4  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\nMain {\n    Q = vec4(0);\n   \n        vec3 U = vec3((V-.5*R)/R.y,0);\n        U.y += .5;\n        vec4 h = hash(vec4(I/N));\n        vec4 uh = hash(vec4(V,V));\n        float M =  30.;\n        float l = .3;\n        float s = 1.;\n        vec2 v = vec2(0);\n        for (float i = 1.; i < M; i++) {\n            vec2 p = U.xy;\n            vec2 a = vec2(0);\n            vec2 b = vec2(0,l);\n            float x = clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.);\n            float ln = length(p-a-(b-a)*x)-.5*(dot(a-b,a-b))*mix(1.,.6,x);\n            \n            float sml = smoothstep(1e-3,.8e-3,ln);\n            vec4 c = 1.5*(.5*i/M+.5+uh.y*(1.-exp(-1e4*ln*ln)))*\n                 (.3+(i+x)/M)*sin(1.5*(i+x)/M*(1.+2.5*h.y)*vec4(1,2,3,4));\n             Q = max(Q,c*sml);\n             U.y -= l;\n             s = sign(U.x);\n             vec4 ih = hash(vec4(i,I/N,0,0));\n             if (hash(vec4(U.xy,i,T)).x<.3)\n             s *= -1.;\n             U.x = s*(U.x);\n             a += ih.w*s;\n             U.xy *= ei(ih.x+.5*h.z-h.y*i/M);\n             l *= .6+.2*i/M-.2*s*(ih.y*2.-1.);\n        }\n    if (I%(N)==0) Q = (.2+.2*sin(T+V.y/R.y+vec4(1,2,3,4)))*(1.-exp(-.5*length(V)));\n    else if (length(Q)<1e-3) discard;\n\n}\n      ",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}