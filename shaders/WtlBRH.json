{
    "Shader": {
        "info": {
            "date": "1596078926",
            "description": "Using easing functions\nMusic: Glue by Bicep on Channel0",
            "flags": 64,
            "hasliked": 0,
            "id": "WtlBRH",
            "likes": 2,
            "name": "WhenImAlone",
            "published": 3,
            "tags": [
                "magenta",
                "easingfunctions"
            ],
            "usePreview": 0,
            "username": "t420babe",
            "viewed": 252
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926535\n\nfloat plot(vec2 pos, float pct, float width){\n  float upper = smoothstep( pct - width, pct, pos.y);\n  float lower = smoothstep( pct, pct + width, pos.y);\n  return upper - lower;\n}\n\nvec3 scene(in vec2 fragCoord, float song_time) {\n  vec3 color = vec3(0.0);\n  float ratio = iResolution.x / iResolution.y;\n  vec2 uv = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y *2.25 + 0.1;\n  float norm = (uv.x / ratio + 1.0) / 2.0;\n  float wave = texelFetch(iChannel0, ivec2(norm * 512.0, 1), 0).x;\n   \n\n  float mod_time = mod(song_time * 0.2, uv.x);\n  float y = easeInOutQuart(mod_time);\n\n  y+= easeInOutCubic(pow(uv.x, uv.y));\n  float func2 = plot(vec2(wave), y, 1.08);\n\n  float pct = 0.0;\n  return (1.0 - func2) * color * wave + func2 * vec3(1.0, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec3 color = vec3(0.0);\n    float song_duration = 268.5;\n    float song_time = mod(iTime, song_duration);\n    color = scene(fragCoord, song_time);\n    fragColor = vec4(color,1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 23533,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/user-847010156/bicep-glue-original-mix"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "/* All easing functions from https://easings.net/# */\nfloat easeInCubic(float x) {\n  return pow(x, 3.0);\n}\n\nfloat easeOutCubic(float x) {\n  return 1.0 - pow(1.0 - x, 3.0);\n}\n\nfloat easeInOutCubic(float x) {\n  if (x < 0.5) {\n    return 4.0 * easeInCubic(x);\n  } else {\n    return 1.0 - pow(-2.0 * x + 2.0, 3.0) / 2.0;\n  }\n}\n\nfloat easeInQuart(float x) {\n  return pow(x, 4.0);\n}\n\nfloat easeOutQuart(float x) {\n  return 1.0 - pow(1.0 - x, 4.0);\n}\n\nfloat easeInOutQuart(float x) {\n  if (x < 0.5) {\n    return 8.0 * easeInQuart(x);\n  } else {\n    return 1.0 - pow(-2.0 * x + 2.0, 4.0);\n  }\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}