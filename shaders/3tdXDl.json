{
    "Shader": {
        "info": {
            "date": "1581961262",
            "description": "Plitch ... Platch ...",
            "flags": 0,
            "hasliked": 0,
            "id": "3tdXDl",
            "likes": 3,
            "name": "Running Stickfigure",
            "published": 3,
            "tags": [
                "walk"
            ],
            "usePreview": 0,
            "username": "pyBlob",
            "viewed": 188
        },
        "renderpass": [
            {
                "code": "const float pi = radians(180.);\nfloat smin(float a, float b, float k)\n{\n    return -log(exp(-k*a)+exp(-k*b))/k;\n}\nmat3 Tx(float a)\n{\n    float c=cos(a), s=sin(a);\n    return mat3(1,0,0, 0,c,-s, 0,s,c);\n}\nmat3 Ty(float a)\n{\n    float c=cos(a), s=sin(a);\n    return mat3(c,0,s, 0,1,0, -s,0,c);\n}\nfloat sphere(vec3 x, float r)\n{\n    return length(x) - r;\n}\nfloat square(vec3 x, float r)\n{\n    return length(vec3(max(vec2(0.), abs(x.xz)-r), x.y));\n}\nfloat cube(vec3 x, float r)\n{\n    return length(max(vec3(0.), abs(x)-r));\n}\nfloat capsule(vec3 x, vec3 b, float r)\n{\n    vec3 m = b / 2.;\n    vec3 n = normalize(b);\n    float l = length(b - m);\n    x -= m;\n    return length(vec4(cross(x, n), max(0., abs(dot(x, n))-l))) - r;\n}\nstruct Arm\n{\n    float a, b;\n};\nstruct Body\n{\n    vec3 x;\n    vec4 rippleLeft, rippleRight;\n    Arm legLeft, legRight;\n    Arm armLeft, armRight;\n    float y;\n    float headY;\n};\nfloat arm(vec3 x, Arm joints)\n{\n    float r = 1e8;\n    x -= vec3(0.1,0,0);\n    x = x * Tx(-joints.a);\n    r = min(r, capsule(x, vec3(.20, -.20, 0), .1));\n    x -= vec3(.20, -.20, 0);\n    x = x * Tx(-joints.b);\n    r = min(r, capsule(x, vec3(.05, -.35, 0), .1));\n    x -= vec3(.05, -.35, 0);\n    return r;\n}\nfloat leg(vec3 x, Arm joints)\n{\n    float r = 1e8;\n    x = x * Tx(-joints.a);\n    r = min(r, capsule(x, vec3(.15, -.45, 0), .1));\n    x -= vec3(.15, -.45, 0);\n    x = x * Tx(-joints.b);\n    r = min(r, capsule(x, vec3(.05, -.45, 0), .1));\n    x -= vec3(.05, -.45, 0);\n    r = min(r, sphere(x, .1));\n    return r;\n}\nvec3 mirror(vec3 x)\n{\n\treturn vec3(-x.x, x.yz);\n}\nvoid figure(inout float r, vec3 x, Body joints)\n{\n    x.y -= joints.y;\n    vec3 hip = vec3(0, 1., 0);\n    vec3 neck = vec3(0, 1.45, 0);\n    vec3 head = vec3(0, 1.80 + joints.headY, 0);\n    vec2 arms = vec2(\n    \tarm(mirror(x - neck), joints.armLeft),\n    \tarm(x - neck, joints.armRight)\n    );\n    vec2 legs = vec2(\n        leg(mirror(x - hip), joints.legLeft),\n    \tleg(x - hip, joints.legRight)\n\t);\n    float c = capsule(x - hip, neck-hip, .1);\n    float b = smin(min(arms.x, arms.y), c, 15.);\n    r = min(r, smin(min(legs.x, legs.y), b, 25.));\n    r = min(r, sphere(x-head, .15));\n}\nfloat fade(float p)\n{\n    float c = cos(p * pi);\n    return c*c;\n}\nvoid walkHeight(out float y, float t0)\n{\n    \tfloat t = fract(t0);\n        float f, w = 1e-10;\n        f = fade(t - 0.00); w += f; y += f * +0.2f;\n        f = fade(t - 0.20); w += f; y += f * +0.0f;\n        f = fade(t - 0.40); w += f; y += f * +0.0f;\n        f = fade(t - 0.60); w += f; y += f * +0.0f;\n        f = fade(t - 0.80); w += f; y += f * +0.0f;\n        y /= w;\n}\nvoid walkCycle(out Arm arm, out Arm leg, float phase, float t0)\n{\n    {\n    \tfloat t = fract(t0 + phase);\n        float f, w = 1e-10;\n        f = fade(t - 0.00); w += f; leg.a += f * +1.5f; leg.b += f * -1.7f;\n        f = fade(t - 0.20); w += f; leg.a += f * +0.0f; leg.b += f * -0.0f;\n        f = fade(t - 0.40); w += f; leg.a += f * -1.5f; leg.b += f * +0.5f;\n        f = fade(t - 0.60); w += f; leg.a += f * +0.0f; leg.b += f * -0.9f;\n        f = fade(t - 0.80); w += f; leg.a += f * +0.0f; leg.b += f * -0.0f;\n        leg.a /= w;\n        leg.b /= w;\n    }\n    {\n    \tfloat t = fract(t0 + phase + .5);\n        float f, w = 1e-10;\n        f = fade(t - 0.00); w += f; arm.a += f * +1.0f; arm.b += f * +0.5f;\n        f = fade(t - 0.20); w += f; arm.a += f * -0.0f; arm.b += f * -0.0f;\n        f = fade(t - 0.40); w += f; arm.a += f * -1.0f; arm.b += f * -0.5f;\n        f = fade(t - 0.60); w += f; arm.a += f * +0.0f; arm.b += f * -0.0f;\n        f = fade(t - 0.80); w += f; arm.a += f * +0.0f; arm.b += f * -0.0f;\n        arm.a /= w;\n        arm.b /= w;\n    }\n}\nfloat rounded_square(vec3 x, float r)\n{\n    vec3 y = vec3(x.x, 0, x.z);\n    return length(vec2(x.y, max(0., square(y, r) - .1)));\n}\nfloat tile(vec3 x)\n{\n    float r = 1e8;\n    r = min(r, rounded_square(x, .7));\n    r = min(r, rounded_square(x - vec3(0,-.05,0), .75));\n    return r;\n}\nfloat rippleHeight(vec3 x, vec4 ripple)\n{\n    float l = length(x.xz-ripple.xz);\n    float t = ripple.w;\n    float source = 1. - exp(-pow(l*10.,2.));\n    float front = exp(-pow(l*3.-t*5.,2.));\n    float falloff = 1./(1.+l*l) * (1. - smoothstep(.5, 1., t));\n\treturn .02*sin(l*40.) * source * front * falloff;\n}\nfloat scene(vec3 x, Body joints)\n{\n    float r = 1e8;\n    float scale = 1.;\n    vec3 gx = vec3(x - -joints.x);\n    gx.z = mod(gx.z, 2.2);\n    for (float i=-1. ; i<=1. ; i+=1.)\n    {\n        float ripple = 0.;\n        ripple += rippleHeight(x, joints.rippleLeft);\n    \tripple += rippleHeight(x, joints.rippleRight);\n    \tr = min(r, tile(gx - vec3(0,ripple,2.2*i)));\n    }\n    figure(r, x, joints);\n    return r / scale;\n}\n#define saw(x) abs(fract((x)/2.)*2.-1.)\n#define R iResolution\nvec4 zview(float z)\n{\n\tz = log(z) * 10.;\n    return vec4(saw(z*4.), saw(z*2.), saw(z*1.), 1.);\n}\nvec3 getNormal(vec3 p, Body joints){\n\tvec2 t = vec2(0.0002, 0);\n\treturn normalize(\n    \tscene(p, joints) - vec3(\n        \tscene(p - t.xyy, joints),\n        \tscene(p - t.yxy, joints),\n        \tscene(p - t.yyx, joints)\n        )\n    );\n}\nvec4 crotate(vec4 c, float t)\n{\n    vec4 c2 = c;\n    c2.xyz *= Ty(t);\n    return mix(c, c2, .5);\n}\nvoid mainImage( out vec4 C, in vec2 o )\n{\n    vec2 uv = (o-R.xy/2.)/R.y;\n    float t = iTime * .1;\n    t = -2.0;\n    vec3 dx = normalize(vec3(uv,-1)) * Tx(-.35) * Ty(t);\n    vec3 x = vec3(-2,3,5) * Ty(t);\n    float z = 0.;\n    Body joints;\n    int i=0;\n    {\n        float t = iTime;\n        float v = 2.2;\n        joints.x = vec3(0, 0, -.3-v * t);\n        {\n            float rt = t + .0;\n            joints.rippleLeft = vec4(-0.20, 0, -.3 + v * fract(rt), rt-floor(rt));\n        }\n        {\n            float rt = t + .5;\n            joints.rippleRight = vec4(0.20, 0, -.3 + v * fract(rt), rt-floor(rt));\n        }\n        walkHeight(joints.y, t * 2.);\n        walkCycle(joints.armLeft, joints.legLeft, .0f, t);\n        walkCycle(joints.armRight, joints.legRight, .5f, t);\n        float y1;\n        walkHeight(y1, t * 2. - .1);\n        joints.headY = (y1 - joints.y) * .5;\n    }\n    bool found = true;\n    for ( ; i<100 ; ++i)\n    {\n        float r = scene(x+dx*z, joints);\n        if (z > 100.)\n        {\n            found = false;\n            break;\n        }\n        if (r<z*1e-3 || z > 100.)\n            break;\n        z += r * .5;\n    }\n    C = pow(texture(iChannel0, (dx * Ty(-.5)).xy).zyxw, vec4(1.5))*.3;\n    if (found)\n    {\n        vec3 p = x+dx*z;\n        vec3 normal = getNormal(p, joints);\n        //C = vec4(.5+.5*normal, 1.);\n        vec4 M = vec4(1);\n        if (p.y <= .1)\n        {\n            vec3 pg = p + joints.x;\n            M = crotate(texture(iChannel1, pg.xz), dot(pg.xz, vec2(.5, -.3)));\n        }\n        if (p.y <= -.025)\n            M = vec4(1,1,1, .2);\n        M.xyz *= vec3(.05 + .9 * max(0.,normal.y));\n        M.xyz *= exp(-.2*(z-6.));\n        C = mix(C, M, M.w);\n    }\n    C = sqrt(C);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 3,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}