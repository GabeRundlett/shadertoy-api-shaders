{
    "Shader": {
        "info": {
            "date": "1645852766",
            "description": "An elaborately detailed rug pattern.",
            "flags": 0,
            "hasliked": 0,
            "id": "ssBfzm",
            "likes": 2,
            "name": "Embroidered rug 3",
            "published": 3,
            "tags": [
                "fractal",
                "rug"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 217
        },
        "renderpass": [
            {
                "code": "//change these constants to get different patterns!\n#define iterations 2\n#define modulo 3\n\n\n#define c1 vec3(1.,0.5,1.5)\n\nvec2 triangle_wave(vec2 a,float scale){\n    return abs(fract((a+c1.xy)*scale)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 4.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = c1.z;\n    vec2 t2 = vec2(0.);\n    vec2 t3 = vec2(0.);   \n    for(int k = 0; k < 6*iterations; k++){\n        uv -= (t2.yx)/(scale)+float(k%modulo);\n        t2 = triangle_wave(uv.yx-.5,scale);\n        //uv = min(uv,t2);\n        t3 = -triangle_wave(uv,scale);\n        //t3 /= float(1+k%3);\n        uv.yx = -(t2+t3);\n        col.x = 1.-abs(-uv.y+uv.x+col.x);\n        //col.x = 1.-abs(uv.y+uv.x-col.x);\n        col = col.yzx;\n        uv /= scale*scale;\n        //uv /= scale*(scale)+uv.x-uv.y;\n        //uv *= (t2.y-t2.x+1.);\n    }\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}