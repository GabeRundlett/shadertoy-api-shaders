{
    "Shader": {
        "info": {
            "date": "1458569527",
            "description": "This is modified version of https://www.shadertoy.com/view/4lf3Rj<br/><br/>I started playing with that code and just after some tweaks got inspired by Interstellar <img src=\"/img/emoticonLaugh.png\"/>.",
            "flags": 64,
            "hasliked": 0,
            "id": "4scSWn",
            "likes": 13,
            "name": "Bright blackhole",
            "published": 3,
            "tags": [
                "sun",
                "planet",
                "blackhole"
            ],
            "usePreview": 1,
            "username": "cooler",
            "viewed": 1492
        },
        "renderpass": [
            {
                "code": "//It is modified version of https://www.shadertoy.com/view/4lf3Rj -> author Kali\n//:)\n\n\n\n// rendering params\nconst float sphsize=.7; // planet size\nconst float dist=.77; // distance for glow and distortion\nconst float perturb=0.55; // distortion amount of the flow around the planet\nconst float displacement=0.50; // hot air effect\nconst float windspeed=.1; // speed of wind flow\nconst float steps=110.; // number of steps for the volumetric rendering\nconst float stepsize=.025; \nconst float brightness=.56;\nconst vec3 planetcolor=vec3(0.55,0.4,0.3);\nconst float fade=.005; //fade by distance\nconst float glow=2.0; // glow amount, mainly on hit side\n\n\n// fractal params\nconst int iterations=13; \nconst float fractparam=.7;\nconst vec3 offset=vec3(1.5,2.,-1.5);\n\n\nfloat wind(vec3 p) \n{\n\tfloat d=max(0.0,dist-max(0.,length(p)-sphsize)/sphsize)/dist; // for distortion and glow area\n\tfloat x=max(0.8,p.x*0.5); // to increase glow on left side\n    \n\tp.y*=1.+max(0.2,-p.x-sphsize*0.70)*10.; // left side distortion (cheesy)\n\tp-=d*normalize(p)*perturb; // spheric distortion of flow\n\tp+=vec3(iTime*windspeed,0.5,0.5); // flow movement\n\tp=abs(fract((p+offset)*.1)-.5); // tile folding \n\tfor (int i=0; i<iterations; i++) \n    {  \n\t\tp=abs(p)/dot(p,p)-fractparam; // the magic formula for the hot flow\n\t}\n\treturn length(p)*(1.+d*glow*x)+d*glow*x; // return the result with glow applied\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// get ray dir\t\n\tvec2 uv = fragCoord.xy / iResolution.xy-.5;\n\tvec3 dir=vec3(uv,1.);\n\tdir.x*=iResolution.x/iResolution.y;\n\tvec3 from=vec3(0.,0.,-2.+texture(iChannel0,uv*.5+iTime).x*stepsize); //from+dither\n    \n\n    // volumetric rendering\n\tfloat v=0., l=-0.0001, t=iTime*windspeed*.2;\n\tfor (float r=10.;r<steps;r++)\n    {\n\t\tvec3 p=from+r*dir*stepsize;\n\t\tfloat tx=texture(iChannel0,uv*.2+vec2(t,0.)).x*displacement; // hot air effect\n        v+=min(10.,wind(p))*max(0.,1.-r*fade); \n\n    }\n   \n    v/=steps; v*=brightness; // average values and apply bright factor\n\tvec3 col=vec3(v*1.25,v*v,v*v*v)+l*planetcolor; // set color\n\tcol*=1.-length(pow(abs(uv),vec2(5.)))*14.; // vignette (kind of)\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "musicstream",
                        "id": 2507,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/izinsiz/inter-dooark-hans-zimmer"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}