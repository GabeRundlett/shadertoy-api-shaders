{
    "Shader": {
        "info": {
            "date": "1624766506",
            "description": "cleaner version of what I made during demozoo.livecode release shader jam. ",
            "flags": 0,
            "hasliked": 0,
            "id": "st23WR",
            "likes": 23,
            "name": "Candy Gum Drops",
            "published": 3,
            "tags": [
                "waves",
                "sss",
                "raymarch",
                "water"
            ],
            "usePreview": 0,
            "username": "Tater",
            "viewed": 544
        },
        "renderpass": [
            {
                "code": "#define STEPS 128.0\n#define MDIST 225.0\n#define pi 3.1415965\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define pmod(p,x) (mod(p,x) - (x)*0.5)\n\nfloat box(vec3 p, vec3 b){\n    vec3 d = abs(p)-b;\n    return max(d.x,max(d.y,d.z));\n}\nfloat smin(float a,float b, float k){ \n    float h=max(0.,k-abs(a-b));\n    return min(a,b)-h*h*.25/k;\n}\n\n//iq palette\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d ){\n    return a + b*cos( 6.28318*(c*t+d) );\n}\nfloat sat(float a) {return clamp(a,0.0,1.0);}\n\nfloat anim(){\n    //return 0.0;\n    return sat(sin(iTime*0.3)*2.5-1.0);\n}\nfloat rand(vec2 a){\n    return fract(sin(dot(a,vec2(43.234,21.4343)))*94544.3434343)-0.5;\n}\nfloat ssRemap (float t,float s1, float s2, float c){\n    return 0.5*(s2-s1)*(t-asin(cos(t*pi)/sqrt(c*c+1.0))/pi)+s1*t;  \n}\nfloat ball(vec3 p, float t){\n    //Ball\n    float scl = 100.0+anim()*50.0; \n    vec3 po = p;\n    p.y+=(fract(t)*scl-0.5*scl);\n    float a = length(p)-1.0-anim();\n    return a;\n\n}\nfloat wave(vec3 p, float t){\n    float dist = length(p.xz)-mod(t+0.5,1.0)*55.0+0.5;\n    dist = min(dist,0.0);\n    float wave = 1.*sin(dist)*exp(-abs(length(dist*0.2)));\n    wave*=max(0.0,1.0-fract(t+0.5)*2.0);\n    return wave;\n}\nvec2 map(vec3 p){\n    vec2 a = vec2(1);\n    vec2 b = vec2(2);\n    \n    float t = iTime*0.25;\n    \n    vec3 po2 = p;\n    p.y= ssRemap(p.y*0.7,-0.2,0.6,.3);\n\n    p.y=mix(po2.y,p.y,sat(anim()));\n    vec3 po = p;\n    \n    float balls = 10.0;\n    float wav = 0.0;\n    for(float i = 0.0; i<balls; i++){\n        p = po2;\n        \n        t+=1.0/balls;\n        \n        float mag = 15.0;\n        p.x+=rand(vec2(floor(t),i))*mag;\n        p.z+=rand(vec2(floor(t),i*1.5))*mag; \n\n        //a.x = smin(a.x,ball(p,t),1.0); \n        \n        b = vec2(ball(p,t),i+3.0);\n        \n        a=(a.x<b.x)?a:b;\n        \n        wav+=wave(p,t)*1.5;\n    }\n        \n    t=iTime*4.5;\n    p=po;\n    wav+=sin(p.z*0.8+t)*0.1+sin(p.x*0.8+t)*0.1;\n    wav+=sin(p.z*0.3-t)*0.2+sin(p.x*0.2-t*2.0)*0.2;\n    \n    b.x = p.y+wav;\n    b.y = 2.0;\n    a.x=smin(a.x,p.y+wav,0.4);\n    \n    a=(a.x<b.x)?a:b;\n    \n    return a;\n}\nvec3 norm(vec3 p){\n    vec2 e = vec2(0.01,0);\n    return normalize(map(p).x-vec3(\n    map(p-e.xyy).x,\n    map(p-e.yxy).x,\n    map(p-e.yyx).x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    \n    vec3 ro = vec3(0,15,-30);\n    ro.y+=sin(iTime)*3.0;\n\n    ro.xz*=rot(iTime*0.2);\n\n    vec3 lk = vec3(0,0,0);\n    vec3 f = normalize(lk-ro);\n    vec3 r = normalize(cross(vec3(0,1,0),f));\n    vec3 rd = normalize(f*1.0+uv.x*r+uv.y*cross(f,r));\n    \n    vec3 p = ro;\n    float dO, shad;\n    vec2 d;\n    \n    for(float i =0.0; i<STEPS; i++){\n        p = ro+rd*dO;\n        d = map(p);\n        dO+=d.x*0.8;\n        \n        if((d.x)<0.01){\n            shad = i/STEPS;\n            break;\n        }\n        if(dO>MDIST){\n            dO=MDIST;\n            p = ro+rd*dO;\n            d.y=0.0;\n            break;\n        }\n        shad = 1.0;\n    }\n    vec3 n = norm(p);\n    //vec3 ld = vec3(1,1,1);\n    vec3 ld=normalize(vec3(1,1.3,2));\n    vec3 h = normalize(ld - rd);\n    float spec = pow(max(dot(n, h),0.), 20.);\n    shad = 1.0-shad;\n    \n    col = vec3(shad);\n\n    float sss=0.;\n\n    //sss stolen from nusan\n    for(float i=1.; i<20.; ++i){\n        float dist = i*2.;\n        sss += smoothstep(0.,1.,map(p+ld*dist).x/dist);\n    }\n \n    vec3 al;\n    if(d.y==2.0)al = vec3(0.220,0.741,1.000);\n    if(d.y>2.0)al = 1.4*pal(d.y/10.0, vec3(0.5),vec3(0.5),vec3(1),vec3(0,0.33,0.66) );\n   \n    \n    \n    //I'm sorry for butchering these lighting equations, I have no idea what I am doing\n    col = shad*vec3(sss)*al;\n    col+=spec*0.3;\n\n    \n    //Sky\n    p.y-=5.0;\n        \n    vec3 sky = mix(vec3(0.012,0.471,0.647),vec3(0.145,0.118,0.522),clamp(p.y*0.05,0.0,1.0));\n    \n    col = mix(col,clamp(sky*3.0,0.0,2.0),dO/MDIST);\n        \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}