{
    "Shader": {
        "info": {
            "date": "1526233875",
            "description": "Just drew a fun little shader logo",
            "flags": 0,
            "hasliked": 0,
            "id": "lstfzX",
            "likes": 5,
            "name": "Bismuth Sunshine",
            "published": 3,
            "tags": [
                "time",
                "logo",
                "rotate",
                "fun",
                "polar",
                "playground",
                "chill",
                "bismuth"
            ],
            "usePreview": 0,
            "username": "BeardThings",
            "viewed": 788
        },
        "renderpass": [
            {
                "code": "#define ROTATE 0\n\nconst float PI = 3.1415926535897932384828433832795028841971693993751058209749445;\n\nfloat DrawGrid(vec2 coord)\n{\n    vec2 gridDist = abs(coord - round(coord)) * 2.0;\n    vec2 gridActive = smoothstep(vec2(0.1), vec2(0.0), gridDist);\n    return min(gridActive.x + gridActive.y, 1.0);\n}\n\nvec2 ToPolar(vec2 v)\n{\n    return vec2(atan(v.y, v.x), length(v));\n}\n\nfloat f(float r)\n{\n    return mod(r * 10.0 + iTime, 1.0);\n}\n\nvec4 Polar(vec2 polar)\n{\n    polar.x = polar.x + PI;\n    polar.x /= PI * 2.0;\n    \n    //polar.y = mod(polar.y, 2.0);\n    \n    float r = 3.0 + f(polar.x) * (sin(iTime * 0.1f + polar.x * PI * 2.0 * 5.0) + 1.5);\n    float d = pow(max(1.0 - abs(polar.y - r), 0.0), 10.0) * 2.0;\n    float d2 = pow(max(1.0 - abs(polar.y - r + 0.5), 0.0), 1.0) * 0.3;\n    \n    float rc = (sin(polar.x * PI * 2.0 + iTime) * 0.5 + 0.5);\n    float gc = (sin(polar.x * PI * 2.0 + PI * 0.5 + iTime) * 0.5 + 0.5);\n    float bc = (sin(polar.x * PI * 2.0 + PI + iTime) * 0.5 + 0.5);\n    \n    vec4 c = vec4(rc, gc, bc, 1.0);\n    return c * d + c * d2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 coord = fragCoord/iResolution.xy * 2.0 - 1.0;\n    coord.x /= iResolution.y / iResolution.x;\n    \n    #if ROTATE\n    coord *= 50.0;\n    \n    float t = iTime * 0.2;\n    mat2 m = mat2(cos(t), sin(t), -sin(t), cos(t));\n    vec2 rcoord = coord * m;\n    rcoord = mod(rcoord, vec2(20.0, 20.0)) - 10.;\n    \n    vec4 baseGrid = vec4(DrawGrid(coord * 0.3));\n    \n    fragColor = baseGrid * 0.15 + Polar(ToPolar(rcoord));\n    #else // ROTATE\n    \n    coord *= 10.0;\n    vec4 baseGrid = vec4(DrawGrid(coord * 0.5));\n    \n    vec2 op = ToPolar(coord);\n    vec2 p = op;\n    p.y = mod(p.y * 2.0, 5.5f);\n    fragColor = baseGrid * 0.15 + Polar(p) * (1.0 - op.y / 10.0f);\n    #endif\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}