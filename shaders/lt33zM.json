{
    "Shader": {
        "info": {
            "date": "1468347367",
            "description": "A procedural rain generator.",
            "flags": 0,
            "hasliked": 0,
            "id": "lt33zM",
            "likes": 23,
            "name": "Rain Generator",
            "published": 3,
            "tags": [
                "procedural"
            ],
            "usePreview": 0,
            "username": "TheBinaryCodeX",
            "viewed": 1287
        },
        "renderpass": [
            {
                "code": "\nconst int LAYERS = 6;             // number of layers of drops\n\nconst float SCALE = 128.0;        // overall scale of the drops\nconst float LENGTH = 16.0;        // length of the drops\nconst float LENGTH_SCALE = 0.8;   // how much the drop length changes every layer\nconst float FADE = 0.6;           // how much the drops fade every layer\n\nconst float SPEED = 8.0;          // how fast the drops fall\n\nconst vec3 DROP_COLOR = vec3(0.54, 0.8, 0.94);\nconst vec3 BG_COLOR = vec3(0.23, 0.38, 0.6);\n\nhighp float rand(vec2 co)\n{\n\thighp float a = 12.9898;\n\thighp float b = 78.233;\n\thighp float c = 43758.5453;\n\thighp float dt = dot(co.xy, vec2(a, b));\n\thighp float sn = mod(dt, 3.14);\n\n\treturn fract(sin(sn) * c);\n}\n\nfloat rainFactor(vec2 uv, float scale, float dripLength, vec2 offset, float cutoff)\n{\n    vec2 pos = uv * vec2(scale, scale / dripLength) + offset;\n    vec2 dripOffset = vec2(0, floor(rand(floor(pos * vec2(1, 0))) * (dripLength - 0.0001)) / dripLength);\n    float f = rand(floor(pos + dripOffset));\n    \n    return step(cutoff, f);\n}\n\nvec4 over(vec4 a, vec4 b)\n{\n    return vec4(mix(b, a, a.a).rgb, max(a.a, b.a));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n    uv.x *= aspect;\n    \n    vec4 finalColor = vec4(0);\n    \n    float dropLength = LENGTH;\n    float alpha = 1.0;\n    \n    for (int i = 0; i < LAYERS; i++)\n    {\n        float f = rainFactor(uv, SCALE, dropLength, vec2(SCALE * float(i), iTime * SPEED), 0.95);\n        \n        vec4 color = vec4(DROP_COLOR, f * alpha);\n        \n        finalColor = over(finalColor, color);\n        \n        dropLength *= LENGTH_SCALE;\n        alpha *= FADE;\n    }\n    \n    finalColor = over(finalColor, vec4(BG_COLOR, 1.0));\n    \n\tfragColor = finalColor;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}