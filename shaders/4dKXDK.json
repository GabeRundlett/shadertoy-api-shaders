{
    "Shader": {
        "info": {
            "date": "1466699970",
            "description": "trying to generate some background for a game",
            "flags": 0,
            "hasliked": 0,
            "id": "4dKXDK",
            "likes": 11,
            "name": "Procedural background",
            "published": 3,
            "tags": [
                "2d",
                "background",
                "mountains"
            ],
            "usePreview": 0,
            "username": "antonOTI",
            "viewed": 1035
        },
        "renderpass": [
            {
                "code": "\n#define LEVEL_NUMBER 10.\n\n#define SF 15.\n\n#define bsin(x) (sin(x) * .5 + .5)\n\n#define NB_COLORS 4\nvec3 mColors[NB_COLORS];\nvoid init()\n{\n    mColors[0] = vec3(0.3,.00,.50)*.9;\n    mColors[1] = vec3(0.3,.01,.50)*.8;\n    mColors[2] = vec3(0.3,.00,.49)*.7;\n    mColors[3] = vec3(0.3,.00,.49)*.6;\n}\n\nfloat fbm(float x)\n{\n    float r  = bsin(x * 0001.9 ) * 0.25000;\n \tr \t\t+= bsin(x * 002.54 ) * 0.25000;\n \tr \t\t+= bsin(x * 0006.5 ) * 0.17000;\n    \n    r *= .7;\n    r += .7;\n    \n    return floor(r * SF) / SF;\n}\n\nfloat mountain(float x)\n{\n    float d = SF;\n    float f1 = fbm(floor(x * SF) / SF);\n    float f2 = fbm((floor(x * SF) + 1.) / SF);\n    return f1 + (f2 - f1) * fract(x*d);\n}\n\nvoid applyMountain(inout vec3 col,float height,float xCoord, vec3 mColor)\n{\n    float m = mountain(xCoord);\n \tcol = mix(col,mColor,step(height,m));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    init();\n\tvec2 uv = fragCoord.xy / 400.;\n    \n    uv.x += floor(uv.y/1.2) * 3.;\n    uv.y = mod(uv.y,1.2);\n    \n    \n    uv.x +=+ iTime *.15;\n    \n\t\n    vec3 col = mColors[NB_COLORS-1];\n    applyMountain(col,uv.y         , uv.x          , mColors[0]);\n    applyMountain(col,uv.y + .25   , uv.x + 7.6    , mColors[1]);\n    applyMountain(col,uv.y + .5    , uv.x + 62.2   , mColors[2]);\n    applyMountain(col,uv.y + .75   , uv.x + 1413.7 , mColors[3]);\n    \n    fragColor = vec4(col,1.);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}