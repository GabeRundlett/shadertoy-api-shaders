{
    "Shader": {
        "info": {
            "date": "1701443320",
            "description": "fur",
            "flags": 0,
            "hasliked": 0,
            "id": "DttBRf",
            "likes": 3,
            "name": "some fur",
            "published": 3,
            "tags": [
                "fur"
            ],
            "usePreview": 0,
            "username": "ich",
            "viewed": 209
        },
        "renderpass": [
            {
                "code": "float gray(vec3 c) {\n    return 1./4. * dot(vec3(1, 2, 1), c);\n}\n\nvec2 surface_uv(vec2 p, float dist) {\n    p /= dist + 1.;\n    p.x += dist * abs(.5 + .5*cos(p.x*3.)*sin(p.y*2.));\n    p.y += .1 * dist * pow(dist + 1., 2.);\n    p.x += dist * sin(p.x + iTime);\n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aa = 2. / iResolution.y;\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 p = (fragCoord - iResolution.xy*.5) / iResolution.y;\n    \n    vec3 col = vec3(0);\n    p *= iResolution.y/360.;\n    \n    float bc = gray(texture(iChannel0, p).rgb);\n    col.g = bc;\n    \n    const float layers = 20.;\n    const float extrusion = .002;\n    \n    for (float i = 0.; i < layers; ++i) {\n        vec2 suv = surface_uv(p, i * extrusion);\n        float sc = gray(texture(iChannel0, suv / 10.).rgb);\n        \n        //float fur = gray(texture(iChannel0, suv).rgb);\n        float fur = gray(texture(iChannel1, suv).rgb);\n        \n        fur = smoothstep(.1, .2, fur);\n        //fur = step(.1, fur);\n        //col.r = fur;\n        \n        float fc = fur * sc;\n        \n        col.g = mix(col.g, fc, fur) * (.8+.2*sqrt((i+1.)/layers));\n        //col.g += (fc * fur) / (i + 2.);\n        //col.r = fur;\n    }\n    \n    col = vec3(1, .9, .8) * sqrt(col.g)/2.;\n\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 46,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}