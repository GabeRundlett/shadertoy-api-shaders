{
    "Shader": {
        "info": {
            "date": "1659661191",
            "description": "A colorful background which swirls around.",
            "flags": 0,
            "hasliked": 0,
            "id": "stcyW8",
            "likes": 7,
            "name": "swirly background",
            "published": 3,
            "tags": [
                "2d",
                "noise",
                "animated",
                "background"
            ],
            "usePreview": 0,
            "username": "hazysu",
            "viewed": 341
        },
        "renderpass": [
            {
                "code": "// Noise code from https://www.shadertoy.com/view/MtcGRl\nvec2 GetGradient(vec2 intPos, float t) {\n    float rand = fract(sin(dot(intPos, vec2(12.9898, 78.233))) * 43758.5453);;\n    float angle = 6.283185 * rand + 4.0 * t * rand;\n    return vec2(cos(angle), sin(angle));\n}\n\n\nfloat Pseudo3dNoise(vec3 pos) {\n    vec2 i = floor(pos.xy);\n    vec2 f = pos.xy - i;\n    vec2 blend = f * f * (3.0 - 2.0 * f);\n    float noiseVal = \n        mix(\n            mix(\n                dot(GetGradient(i + vec2(0, 0), pos.z), f - vec2(0, 0)),\n                dot(GetGradient(i + vec2(1, 0), pos.z), f - vec2(1, 0)),\n                blend.x),\n            mix(\n                dot(GetGradient(i + vec2(0, 1), pos.z), f - vec2(0, 1)),\n                dot(GetGradient(i + vec2(1, 1), pos.z), f - vec2(1, 1)),\n                blend.x),\n        blend.y\n    );\n    return noiseVal / 0.7; // normalize to about [-1..1]\n}\n\n// Color conversion from https://www.shadertoy.com/view/XljGzV\n\nvec3 hsl2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\nvec3 c1 = vec3(0.7750, 0.4800, 0.2300);\nvec3 c2 = vec3(0.9361, 0.4100, 0.5600);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / ((max(iResolution.x, iResolution.y)/10.0) + 800.0);\n    float noiseValA = 0.5 + 0.5 * Pseudo3dNoise(vec3(uv.x * 2.6, uv.y * 2.6, iTime / 20.0));\n    float noiseValB = 0.5 + 0.5 * Pseudo3dNoise(vec3(uv.x * 4.0, uv.y * 4.0, max(sin(noiseValA) * 2.0, 0.8) * 8.0 + iTime / 10.0));\n    fragColor.rgb = hsl2rgb(mix(c1, c2, noiseValB));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}