{
    "Shader": {
        "info": {
            "date": "1691814994",
            "description": "An arabesque knot pattern.\nClick and drag to move around.",
            "flags": 40,
            "hasliked": 0,
            "id": "DlScWw",
            "likes": 8,
            "name": "Arabesque knots 6 (music)",
            "published": 3,
            "tags": [
                "fractal",
                "music",
                "knot",
                "arabesque"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 208
        },
        "renderpass": [
            {
                "code": "vec2 f1(vec2 a){\n    return\n        fract(a)\n    ;\n}\n\nvec2 triangle_wave(vec2 a){\n    vec2 a2 =\n        vec2(1.,0.5)\n    ,\n    a1 = a+a2;\n    return\n        abs(f1((a1)*(a2.x+a2.y))-.5)\n    ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 8.;\n    vec2 draggedPos = texelFetch(iChannel0, ivec2(1,0), 0).xy;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    uv -= draggedPos/iResolution.y/t1;\n    vec2 t2 = vec2(0.);\n    for(int k = 0; k < 7; k++){\n        uv =\n            abs(.5+uv+t2)\n        ;\n        \n        //if(uv.y>uv.x) uv = uv.yx-vec2(.5,1.5); else if((k)%3 == 1) uv -= vec2(.5,1.5); else uv *= 1.5;\n        if(uv.y>uv.x) uv = uv.yx-vec2(.5,1.5); else uv *= 1.5; if((k)%3 == 0) uv -= vec2(.5,1.5); \n        //if(uv.y>uv.x) uv = (uv.yx-vec2(.5,1.5))*1.5;\n        t2 =\n            -triangle_wave(uv-.5)\n        ;\n        uv =\n            t2-triangle_wave(uv.yx)\n        ;\n        col =\n            vec3(col.zx,max(uv.x-uv.y,0.))\n            //vec3(col.zx,max(uv.x-uv.y,col.y))\n        ;\n    }\n    fragColor = vec4(col*2.,1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\nfloat fmod(float a, float b){\n    return\n        //mod(floor(8./b+a*b/8./2.),b)\n        mod(floor(16./b+a*b/8.),b)\n        //mod(floor(8./b-a*b/8.),b)\n        //mod(floor(a*b/8.),b)\n    ;\n}\n\nvec2 mainSound(int samp, float time){\n  time /= 2.;\n  float s1 =\n      8.,\n  s2 = 8.,\n  t = time/4.,\n  m1 = fmod(t*8.,s1/2.),\n  p1 = pow(2.,m1)\n  ;\n  t = \n      s1*pow(2.,fmod(t*16.+m1,2.))*t/(1.+fmod(floor(t*4.),2.))\n  ;\n  float\n  m3 =\n      floor(fmod(time*8.*p1,s1/2.)/2.)\n  ;\n  float m2 =\n      1. + fmod(t*8.,s1/2.);\n  ;\n  float a=\n      128.*pow((1.-sqrt(fract(t)/2.))/2.,2.)\n  ;\n  float nb =\n      pow(2.,(m3/2.+m2-m1)/2.5+8.)\n      //pow(2.,(m3+m2-m1)/7.+8.)\n  ;\n  return\n      abs(.5-1.*vec2(fract(time*nb*.998),fract(time*nb)))*a\n      //log(1.+abs(a/16.-abs(.5-1.*vec2(fract(time*nb*.998),fract(time*nb)))*a))\n  ;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            },
            {
                "code": "//from https://www.shadertoy.com/view/dtGGzK\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 col = vec4(0);\n    if (floor(fragCoord) == vec2(1,0)) {\n        vec2 prevpos = texelFetch(iChannel0, ivec2(1,0), 0).zw; //previous dragged mouse pos\n        vec4 mp = texelFetch(iChannel0, ivec2(2,0), 0); //prev mouse pos\n        vec4 m = iMouse; //current mouse pos\n        \n        //if mouse button up\n        if (m.z < 0.0 && mp.z >= 0.0){\n            col = texelFetch(iChannel0, ivec2(1,0), 0).xyxy;\n        } else if (m.z >= 0.0){\n            col = vec4(m.xy - abs(m.zw) + prevpos, prevpos);\n        } else {\n            col = texelFetch(iChannel0, ivec2(1,0), 0);\n        }\n    }\n    //the last mouse position\n    if (floor(fragCoord) == vec2(2,0)) {\n        col = iMouse;\n    }\n    fragColor = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}