{
    "Shader": {
        "info": {
            "date": "1717773744",
            "description": "just iterating over someone's fractal",
            "flags": 0,
            "hasliked": 0,
            "id": "X3GGRy",
            "likes": 12,
            "name": "flying-eggs",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "faceless33",
            "viewed": 160
        },
        "renderpass": [
            {
                "code": "mat2 rotate2D(float a) {\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, s, -s, c);\n}\n\nvec3 hsv(float h, float s, float v) {\n    vec4 t = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(vec3(h) + t.xyz) * 6.0 - vec3(t.w));\n    return v * mix(vec3(t.x), clamp(p - vec3(t.x), 0.0, 1.0), s);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 r = iResolution.xy;\n    float t = iTime;\n\n    vec3 o = vec3(0.);\n\n\n    float g = 0.101;\n    for (float i = 0.; i < 99.; i++) {\n\n            float e = 1.;\n        float s = 1.;\n        vec3 p = vec3((fragCoord.xy - 0.5 * r) / r.y - vec2(0., 18.28+1.0*sin(iTime*.051)), g);\n        p.xz *= rotate2D(t * 0.03);\n        s = 1.5;\n        for (int j = 0; j < 9; j++) {\n            p = vec3(1.+1.*sin(iTime*.2), 5., 2.) - abs(abs(p) * e - vec3(4., 4., 5.));\n            s *= e = max(1., 17. / dot(p, p));\n        }\n        g += mod(length(p.xz)*.4, p.y*22.) / s;\n        s = log(s);\n        o.rgb += hsv(e - g, 0.5, 1.1*s / 7e2);\n    }\n\n    fragColor = vec4(o, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}