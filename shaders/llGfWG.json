{
    "Shader": {
        "info": {
            "date": "1543815209",
            "description": "floppy",
            "flags": 0,
            "hasliked": 0,
            "id": "llGfWG",
            "likes": 4,
            "name": "floppy",
            "published": 3,
            "tags": [
                "floppy"
            ],
            "usePreview": 0,
            "username": "nabehide",
            "viewed": 439
        },
        "renderpass": [
            {
                "code": "const float PI = 3.14159265;\nconst float period = 5.;\nconst float offset = period/2.;\n\nvec3 colorBody = vec3(0.5, 0.9, 0.5);\nvec3 colorMetal = vec3(0.3, 0.3, 0.3);\nvec3 colorLabelBody = vec3(0.1, 0.1, 0.1);\n\nmat2 rot(float t){\n    return mat2(cos(t), -sin(t), sin(t), cos(t));\n}\n\nfloat square(vec2 p, vec2 size) {\n    return smoothstep(size.y, size.y-0.0001, -p.y)\n         * smoothstep(size.y, size.y-0.0001,  p.y)\n         * smoothstep(size.x, size.x-0.0001, -p.x)\n         * smoothstep(size.x, size.x-0.0001,  p.x);\n}\n\nfloat corner(vec2 p, float size){\n    return smoothstep(size, size-0.0001, (p*rot(-0.25*PI)).x);\n}\n\nvec3 body(vec2 p){\n    return square(p, vec2(0.9, 0.9)) * corner(p, 1.2) * colorBody;\n}\n\nvec3 metal(vec2 p){\n    vec3 draw = vec3(0.0, 0.0, 0.0);\n    \n    draw += square(p-vec2(0.0, 0.6), vec2(0.5, 0.3));\n    \n    /*\n    vec2 s1 = vec2(square(p-vec2(0.0, 0.6), vec2(0.5, 0.3)));\n    vec2 s2 = vec2(square(p-vec2(0.0, 0.6), vec2(0.5, 0.3)) * smoothstep(0.0, 0.0-0.00001, (p*rot(0.25*PI)).x));\n    vec2 d = mix(s1, s2, 0.9);\n    draw += mix(vec3(1), vec3(0), step(d.x, d.y));\n    */\n    \n    draw -= square(p-vec2(0.2, 0.6), vec2(0.1, 0.2));\n    return draw * colorMetal;\n}\n\nvec3 label(vec2 p){\n    vec3 draw = vec3(0.0, 0.0, 0.0);\n    draw += square(p-vec2(0.0, -0.5), vec2(0.7, 0.4));\n    return draw * colorLabelBody;\n}\n\nfloat halfRing(vec2 p, float size, float width){\n    float draw = 0.0;\n    draw += smoothstep(size, size-0.00001, length(p));\n    draw -= smoothstep(size-width, size-width-0.00001, length(p));\n    draw *= smoothstep(0.0, 0.0-0.00001, -p.x);\n    return draw;\n}\n\nvec3 logo(vec2 p){\n    vec3 draw = vec3(0.0, 0.0, 0.0);\n\n    vec2 pos = vec2(0.6, 0.75);\n\n    // H\n    draw += square(p-pos, vec2(0.005, 0.05));\n\n    draw += square(p-pos-vec2(0.015,  0.03), vec2(0.005, 0.02));\n    draw += square(p-pos-vec2(0.015, -0.03), vec2(0.005, 0.02));\n\n    draw += square(p-pos-vec2(0.03,   0.01), vec2(0.02, 0.005));\n    draw += square(p-pos-vec2(0.03,  -0.01), vec2(0.02, 0.005));\n\n    draw += square(p-pos-vec2(0.045,  0.03), vec2(0.005, 0.02));\n    draw += square(p-pos-vec2(0.045, -0.03), vec2(0.005, 0.02));\n\n    draw += square(p-pos-vec2(0.06,   0.0 ), vec2(0.005, 0.05));\n\n    // )\n    draw += halfRing(p-pos-vec2(0.07, 0.0),  0.05, 0.01);\n    draw += halfRing(p-pos-vec2(0.07, 0.0), 0.035, 0.01);\n\n    return draw;\n}\n\nvec3 arrow(vec2 p){\n    vec3 draw = vec3(0.0, 0.0, 0.0);\n    \n    draw += square(p-vec2(-0.8, 0.7), vec2(0.02, 0.05));\n    draw += square(p-vec2(-0.8, 0.8), vec2(0.04, 0.05))\n          * smoothstep(-0.34, -0.34-0.00001, (p*rot(-0.15*PI)).x)\n          * smoothstep( 1.09,  1.09-0.00001, -(p*rot( 0.15*PI)).x);    \n    \n    return draw;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (gl_FragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    vec3 draw = vec3(0.);\n\n    draw += body(p);\n\n    draw += metal(p);\n\n    draw += label(p);\n\n    draw += logo(p);\n\n    draw += arrow(p);\n\n    \n    fragColor = vec4(draw,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}