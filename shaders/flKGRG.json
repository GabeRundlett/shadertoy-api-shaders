{
    "Shader": {
        "info": {
            "date": "1637960324",
            "description": "Kinda like the Desmos Graphing Calculator",
            "flags": 0,
            "hasliked": 0,
            "id": "flKGRG",
            "likes": 3,
            "name": "Desmos I Guess.SV",
            "published": 3,
            "tags": [
                "desmos"
            ],
            "usePreview": 0,
            "username": "turtlelover891",
            "viewed": 423
        },
        "renderpass": [
            {
                "code": "//So basically, Desmos Graphing Calculator\n\n//equation function with color\nvec3 func(float w, float y, float e, vec3 col){\n    float sol = smoothstep(-1./w, 1./w, 1./w-abs(e-y));\n    return col*sol;\n}\n\n//equation function white\nfloat func(float w, float y, float e){\n    return smoothstep(-1./w, 1./w, 1./w-abs(e-y));\n}\n\n//use pi as needed\nconst float pi = acos(-1.);\n\n//=====================================================\n//Create your own custom functions\n//If a function is in another function, make sure that the function\n//on the inside is initialized before the function on the outside\n\nfloat a(float x, float t){\n    return sin(x*3.-(t*5.));\n}\n\nfloat b(float x, float t){\n    return sin(x+t*5.)*2.-sin(t);\n}\n\nfloat ab(float x, float t){\n    return b(x, t)+(sin(x)/2.+.5)*(a(x, t)-b(x, t));\n}\n\n//=====================================================\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy;\n    vec3 col = vec3(0.);\n    float w = 1.;\n    w = clamp(iMouse.x/5., 2., R.x);\n    float x = fragCoord.x-R.x/2.;\n    float y = fragCoord.y;\n    if(iMouse.xy == vec2(0.)){\n        w = R.x/15.;\n        y /= w;\n        y -= R.y/w/2.;\n    }else{\n    y /= w;\n    y -= clamp(iMouse.y/w, 0., R.y/w);}\n    x /= w;\n\n    float t = iTime;\n    //grid lines\n    col += func(w, y, floor(y))/7.; col += func(w, y, 0.)/4.;\n    col += func(w, x, floor(x))/7.; col += func(w, x, 0.)/4.;\n\n    //The Function 'func' is how you display stuff\n    //The first parameter is w, the width of the line.\n    //Multiply or divide it to grow or shrink the width\n    //The second parameter is the axis, usually use y \n    //The third parameter is the function itself\n    //You can color the function by adding a fourth parameter\n    //Use vec3 for r, g, and b values\n\n    //=========================================================================== \n\n    //col += func(w,  y,  a(x, t),  vec3(1, 0, 0));      //red sin wave\n    //col += func(w,  y,  b(x, t),  vec3(0, 0, 1));      //blue  sin wave\n    col += func(w/2., y, ab(x, t),vec3(0, 1, 0));      //green sin wave\n    //col += func(w, y, x+7.5);                    //white diagonal line\n    //col += func(w, y, -x*x+7.5);                 //white upside down parabola\n    //col += func(w, 2., sqrt(pow(x-3., 2.) + pow(y-2., 2.)));//white circle\n    //col += func(w, x, pi);//white vertical line\n\n    //===========================================================================\n\n    //makes background not entirely black\n    col += vec3(0.075);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}