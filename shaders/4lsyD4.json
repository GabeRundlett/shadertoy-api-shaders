{
    "Shader": {
        "info": {
            "date": "1504855941",
            "description": "Compares the new volume noise texture to the classic 3D noise by iq.",
            "flags": 0,
            "hasliked": 0,
            "id": "4lsyD4",
            "likes": 9,
            "name": "Volume noise comparison",
            "published": 3,
            "tags": [
                "procedural",
                "noise",
                "volume"
            ],
            "usePreview": 0,
            "username": "ThomasSchander",
            "viewed": 1103
        },
        "renderpass": [
            {
                "code": "// Test for my other shaderToy: https://www.shadertoy.com/view/4dSBDt\n\nfloat classicNoise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n\tvec2 rg = textureLod( iChannel0, (uv+0.5)/256.0, 0.0).yx;\n\treturn mix( rg.x, rg.y, f.z );\n}\n\n#define MATCH_ANIMATION_INTERPOLATION\nfloat VolumeNoise( in vec3 x )\n{    \n#ifdef MATCH_ANIMATION_INTERPOLATION\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    return textureLod(iChannel1, (p+f+0.5)/32.0, 0.0).x;\n#else\n    return textureLod(iChannel1, x/32.0, 0.0).x;    \n#endif\n}\n\nfloat hash(vec3 p)  // from https://www.shadertoy.com/view/4sfGzS\n{\n    p  = fract( p*0.3183099+.1 );\n\tp *= 17.0;\n    return fract( p.x*p.y*p.z*(p.x+p.y+p.z) );\n}\n\nfloat hashNoise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n\t\n    return mix(mix(mix( hash(p+vec3(0,0,0)), \n                        hash(p+vec3(1,0,0)),f.x),\n                   mix( hash(p+vec3(0,1,0)), \n                        hash(p+vec3(1,1,0)),f.x),f.y),\n               mix(mix( hash(p+vec3(0,0,1)), \n                        hash(p+vec3(1,0,1)),f.x),\n                   mix( hash(p+vec3(0,1,1)), \n                        hash(p+vec3(1,1,1)),f.x),f.y),f.z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t\n    vec2 uv = fragCoord / vec2(iResolution.xy);\n    uv.y /= iResolution.x/iResolution.y;\n    if(uv.x < 0.333)\n\t\tfragColor = vec4( VolumeNoise(vec3(uv*200.0, iTime)) );\n    else if(uv.x < 0.66 )\n        fragColor = vec4( classicNoise(vec3(uv*200.0, iTime)) );\n    else\n        fragColor = vec4( hashNoise(vec3(uv*200.0, iTime)) );\n    \n    if(abs(uv.x-0.333) < 0.002 || abs(uv.x-0.66) < 0.002)\n        fragColor = vec4(1.0, 1.0, 0.0, 0.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "volume",
                        "id": 39,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}