{
    "Shader": {
        "info": {
            "date": "1633012153",
            "description": "reverse LOD, or TopDown painting:\nuser first sketched the colors at low res ( here, the dark olive color )\nthen zoom to add details while preserving the local average color ( painter above ).\nMore natural way to design natural as well as anatomical scenes",
            "flags": 32,
            "hasliked": 0,
            "id": "NscSDH",
            "likes": 3,
            "name": "paint conserving average color",
            "published": 3,
            "tags": [
                "mipmap",
                "paint",
                "topdown",
                "lop"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 355
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    O = U.x/R.x>.1 ? T(U)                              // show paint\n                   : texelFetch(iChannel1,ivec2(U),0); // show palette\n    \n    float d = length(U-.95*R);                         // show target color\n    O = mix( O, vec4(0), S(d-R.y/14.) );\n    O = mix( O, target,  S(d-R.y/15.) );\n    \n // O = pow( O, vec4(1./2.2) ); // should be converted to sRGB, but then I need better hue\n} ",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// =========== paint manager =====================\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n     vec4 paint = texelFetch(iChannel1,ivec2(0),0); // vec4(0,1,0,1) + 1e-5;\n\n   if ( iFrame < 1 ) { O = target ; return; } \n    O = T(U);\n    \n    vec4 T = texture(iChannel0, U/R, 99.);\n    // goal: replace target  with ~ texture(iChannel0, U/R, 7.)\n    O *= target / mix(T, paint, 3.14*20.*20./R.x/R.y );\n    O = mix( O, paint, S(length(U-iMouse.xy)-20. ) );\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define target   vec4(.3,.6, .1, 1) // target average color\n\n// --- utils https://www.shadertoy.com/view/llySRh\n#define T(U)     texelFetch(iChannel0, ivec2(U), 0 )\n#define R        iResolution.xy\n#define hue(v)  ( .6 + .6 * cos( 6.3*(v)  + vec4(0,23,21,0)  ) )\n#define S(v)     smoothstep(1.5,0.,v)",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "// =========== palette manager ===========================\n\nvec4 col( vec2 U ) {\n    float x = U.x/.05 - 1.;\n    return x < 0. ? hue(U.y)*(1.+x) : mix(hue(U.y),vec4(1), x);\n}\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 U = u/R, M = iMouse.xy/R;\n    if ( U.x > .1 ) return;\n   \n    O = u == vec2(.5)\n         ? iMouse.z>0. && M.x < .1 ? col(M) : T(u)\n         : col(U);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}