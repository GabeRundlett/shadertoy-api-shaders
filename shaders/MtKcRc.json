{
    "Shader": {
        "info": {
            "date": "1537214272",
            "description": "A teeny UV modulo experiment.\nFull screen viewing recommended.\nTry changing the textures!\nLeft click shifts time.",
            "flags": 0,
            "hasliked": 0,
            "id": "MtKcRc",
            "likes": 13,
            "name": "Krasohled",
            "published": 3,
            "tags": [
                "reflection",
                "kaleidoscope",
                "trippy",
                "mirror",
                "geometry"
            ],
            "usePreview": 0,
            "username": "Blokatt",
            "viewed": 1337
        },
        "renderpass": [
            {
                "code": "/*\n  Krasohled 1.0\n   Written by Blokatt (Jan Vorisek)\n  blokatt.net | @blokatt | github.com/blokatt\n   20/09/18\n*/\n\n#define SPEED 0.75\n#define TIME_SHIFT -1.\n#define SEGMENTS 20.0\n#define NOISE_ALPHA 0.005\n#define SHARPNESS 1.81\n\n#define PI 3.141592653589793238462643\n#define TAU PI * 2.0\n\n\nmat2 rot(in float a){\n    return mat2(cos(a),-sin(a),\n                sin(a),cos(a));\n}\n\nvec4 tex(in vec2 uv, in float time){\n    float t = sin(time * .1) * .5 + .5;   \n    float l = length(uv - .5);\n    uv = (uv - .5) * rot(-time * .4 + (l * 1.3)) + .5;    \n    uv.x += sin(time * .05 + .2);\n    uv.y += cos(time * .025 + .4);\n    \n    return  mix(\n        \tmix( \n        \tmix(texture(iChannel0, uv),\n                texture(iChannel1, uv * 1.5), clamp(0., t * 4., 1.)),\n            \ttexture(iChannel2, uv * 1.5), clamp(0., t * 4. - 2., 1.)), \n            \ttexture(iChannel3, uv * 1.), clamp(0., t * 4. - 3., 1.));\n}\n\n\nfloat smoothmod(float v, float d){\n\tfloat res = mod(v, d);\n    return res * (1. - smoothstep(d - d / SHARPNESS, d, res)); \n}\n\nvec4 weird(in vec2 inUv, in float time){   \n   \ttime = time * SPEED + TIME_SHIFT + iMouse.x /iResolution.x;\n    inUv -= .5;   \n    inUv.x *= iResolution.x / iResolution.y;\n    vec2 uv = inUv;\n    float baseA = atan(uv.y, uv.x);\n    float l = length(uv) + sin(baseA * 5. - time) * sin(time * .1 + .7) * .005;          \n    float a = baseA + l * (.5 + .2 * sin(l * 5. + time * 2.5 + .2));    \n    a = time + smoothmod(a + 1. * (time * .5 - l) + 2. + 2. * sin(time * .1), TAU / SEGMENTS) + (TAU / 10.) * (1. -  (smoothstep(1.0, 1.02, smoothmod(a, TAU / 10.) * (2. / (TAU / 10.))) / 2.));    \n    uv = vec2(cos(a) * l, sin(a) * l);\n    uv *= (1. + l + sin(time * .5) * 2.);\n    vec4 outCol = tex(vec2(uv.x, uv.y) + .5, time) * (1. + 7. * smoothstep(.8, 1.4, l));\n    return outCol - (NOISE_ALPHA * texture(iChannel3, inUv * 9. * rot(-time * 1.)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 t0 = vec4(weird(uv, iTime - .02).r, weird(uv, iTime).g, weird(uv, iTime + .02).b, 1.);\n    vec4 t1 = vec4(weird(uv, iTime - .02 - .01).r, weird(uv, iTime - .01).g, weird(uv, iTime + .02 - .01).b, 1.);\n    vec4 t2 = vec4(weird(uv, iTime - .02 - .02).r, weird(uv, iTime - .02).g, weird(uv, iTime + .02 - .02).b, 1.);\n    fragColor = mix(mix(t0, t1, .5), t2, .5) * vec4(1., .75, .9, 1.) + vec4(.01, 0., .02, 1.);\n    //fragColor = tex(uv, iTime);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}