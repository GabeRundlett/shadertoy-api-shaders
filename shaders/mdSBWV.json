{
    "Shader": {
        "info": {
            "date": "1690139921",
            "description": "Simple animation utilizing knowledge from scalar field physics. The result is quite pretty, I think :)",
            "flags": 0,
            "hasliked": 0,
            "id": "mdSBWV",
            "likes": 5,
            "name": "Scalar Field Mushroom",
            "published": 3,
            "tags": [
                "colors",
                "repetition",
                "scalarfield"
            ],
            "usePreview": 0,
            "username": "almorgan",
            "viewed": 204
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592\n#define EPSILON .004\n\nstruct Source\n{\n    float c; // charge\n    vec2 r;  // position\n};\n\nSource sources[4] = Source[4](\n    Source(1.0, vec2(0.0, -0.1)),\n    Source(-1.0, vec2(0.0, 0.1)),\n    Source(-1.0, vec2(-0.1, 0.0)),\n    Source(-1.0, vec2(0.1, 0.0))\n    );\n\nconst vec3 a = vec3(0.5, 0.5, 0.5);\nconst vec3 b = vec3(0.5, 0.5, 0.5);\nconst vec3 c = vec3(1.0, 1.0, 1.0);\nconst vec3 d = vec3(0.263,0.416,0.557);\n\nvec3 palette( float t ) {\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvec2 rotate(vec2 uv, float th)\n{\n    return mat2(cos(th), sin(th), -sin(th), cos(th)) * uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy; // <0, 1>\n    uv -= 0.5; // <-0.5,0.5>\n    uv.x *= iResolution.x/iResolution.y; // fix aspect ratio\n\n    \n    vec3 col = vec3(0.0);\n    float force_const = 0.01;\n    float force = 0.0;\n    float t = 0.2*iTime;\n\n    for (int i = 0; i < sources.length(); i++)\n    {\n        sources[i].r = rotate(sources[i].r, 2.0*PI*sin(t));\n\n        vec2 r   = sources[i].r - uv;\n        force += sin(t)*sources[i].c*force_const / (dot(r, r) + EPSILON);\n    }\n\n    col = palette(force);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}