{
    "Shader": {
        "info": {
            "date": "1726575523",
            "description": "click to add divergence\nsame as https://www.shadertoy.com/view/4Xlyzs\nbut instead gauss shaped conv in bufferB, its wave() shaped conv in bufferB",
            "flags": 32,
            "hasliked": 0,
            "id": "X3syzs",
            "likes": 12,
            "name": "curlus wavus",
            "published": 3,
            "tags": [
                "convolution"
            ],
            "usePreview": 0,
            "username": "lomateron",
            "viewed": 104
        },
        "renderpass": [
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\n#define B(u) texture(iChannel1,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec4 b = B(u);\n    fragColor = sqrt(vec4(0,(b.xy+.5)*length(b.xy),0))*2.;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\n#define B(u) texture(iChannel1,(u)/iResolution.xy)\nfloat customa = .28;\nfloat customb = .22;\nfloat customc = 1.19;\nfloat wave(float l)\n{\n    float t   = 8.*customa;      //how expanded is the wave\n    float wid = 4.*customb;      //wave width\n    float c   = 1./wid;\n    return 1./l*(-(t - l)*exp(-pow(t - l,2.)/c/c)\n                 +(t + l)*exp(-pow(t + l,2.)/c/c));\n}\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    float rZ = 6.;\n    float et = 0.;\n    vec2 d  = B(u).xy;\n    vec2 v1 = vec2(0);\n    vec2 v2 = vec2(0);\n    for(float y=-rZ; y<=rZ; y+=1.){\n    for(float x=-rZ; x<=rZ; x+=1.){\n        vec2 xy = vec2(x,y);\n        float l2 = dot(xy,xy);\n        if(l2<.1 || l2>rZ*rZ+.1){continue;}\n        vec2 d2 = B(u+xy).xy;\n        float l = sqrt(l2);\n        float e  = wave(l);  et+=e*e;\n        v1 += pow(dot(d2-d,vec2( x,y)/l)*e,2.);//abs divergence\n        v2 += pow(dot(d2-d,vec2(-y,x)/l)*e,2.);//abs curl\n    }}\n    fragColor = vec4(sqrt(v1/et),sqrt(v2/et));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\n#define B(u) texture(iChannel1,(u)/iResolution.xy)\nfloat customa = .28;\nfloat customb = .22;\nfloat customc = 1.19;\nfloat wave(float l)\n{\n    float t   = 8.*customa;      //how expanded is the wave\n    float wid = 4.*customb;      //wave width\n    float c   = 1./wid;\n    return 1./l*(-(t - l)*exp(-pow(t - l,2.)/c/c)\n                 +(t + l)*exp(-pow(t + l,2.)/c/c));\n}\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    float rZ = 6.;\n    vec2 d  = B(u).xy;\n    vec2 v  = vec2(0);\n    float et = 0.;\n    for(float y=-rZ; y<=rZ; y+=1.){\n    for(float x=-rZ; x<=rZ; x+=1.){\n        vec2  xy = vec2(x,y);\n        float l2 = dot(xy,xy);\n        if(l2<.1 || l2>rZ*rZ+.1){continue;}\n        vec2 c2 = A(u+xy).zw;\n        float l  = sqrt(l2);\n        float e  = wave(l);  et+=abs(e);\n        v += xy/l*c2*e;\n    }}\n    if(iFrame==0)\n    {\n        vec2 r = vec2(dot(u, vec2(14.9898, 78.85638)),\n                      dot(u, vec2(27.237247, 163.87563)));\n             r = fract(sin(r) * vec2(43758.5453,23625.753281));\n        vec2 k = 2.*(u*2.-iResolution.xy)/iResolution.y;\n        v = normalize(k)*.2;\n        //v = -8f*u/exp(dot(u,u));\n        v = 22.*r;///exp(dot(k,k));\n    }\n    if(iMouse.z>0.)\n    {\n        vec2 m = 22.*(u-iMouse.xy)/iResolution.y;\n        v += m*exp(-dot(m,m));\n    }\n    fragColor = vec4(d+(v/et*customc*22.-d)*.3,0,0);\n    //fragColor = d+ v/et*customc*4.;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}