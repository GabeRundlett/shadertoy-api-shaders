{
    "Shader": {
        "info": {
            "date": "1587322714",
            "description": "3Ding\nKind of like the unintentional  color / cellshading like effect ",
            "flags": 0,
            "hasliked": 0,
            "id": "3sByRc",
            "likes": 4,
            "name": "大龙猫 - Quicky#035",
            "published": 3,
            "tags": [
                "quicky"
            ],
            "usePreview": 0,
            "username": "totetmatt",
            "viewed": 345
        },
        "renderpass": [
            {
                "code": "\nfloat sdEllipsoid( vec3 p, vec3 r )\n{\n  float k0 = length(p/r);\n  float k1 = length(p/(r*r));\n  return k0*(k0-1.0)/k1;\n}\n#define ITER 32.\n#define PI 3.141592\n#define bpm iTime * (130/60)\nfloat sdVerticalCapsule( vec3 p, float h, float r )\n{\n  p.y -= clamp( p.y, 0.0, h );\n  return length( p ) - r;\n}\nmat2 r(float a){\n    float c=cos(a),s=sin(a);\n    return mat2(c,s,-s,c);\n}\nfloat sdTorus( vec3 p, vec2 t )\n{\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  return length(q)-t.y;\n}\nfloat fig(vec3 p,float offset) {\n     p.yz = p.zy;\n     p.xy*=r(p.z*2.+iTime+offset);\n     \n     \n     //float t = fract(iTime*.1)*10. <= 5. ? iTime*8. : floor(iTime*8.) ;\n     float  t = iTime*4.;\n     return sdTorus(p,vec2(.4+sin(offset+t+atan(p.x,p.z)*6.)*.2+.75,.05))*.4;\n}\nvec2 SDF(vec3 p) {\n     float f = 100.;\n     float id = 0.;\n     for(float i=0.;i<=1.;i+=1./6.){\n         float o = fig(p,i*acos(-1.)/(4.+sin(iTime+i)));\n         \n         f = min(f,o);\n         if(f == o) id = i;\n     \n     }\n     \n     return vec2(id,f);\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n     \n    vec3 ro =vec3(0.,0.,-3.),\n    p = ro,\n    rd = normalize(vec3(uv,1.)),\n    col = vec3(0);\n     \n    float shad = 0.;\n    bool hit = false;\n    vec2 d = vec2(0.);\n    for(float i=0.;i < ITER; i++) {\n        d = SDF(p);\n        if(d.y< 0.001) {\n            hit = true;\n            shad = i / ITER;\n            break;\n        }\n        p += d.y*rd;\n    }\n    \n    if(hit) {\n      \n        col = vec3(1.-shad*d.x,1.10*shad*(1./d.x),smoothstep(.1,0.9,d.x));\n      \n\n    }\n    \n     \n     \n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}