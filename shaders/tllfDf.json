{
    "Shader": {
        "info": {
            "date": "1598211723",
            "description": "Source :  https://www.youtube.com/watch?v=YJ4iyff7zbk \nMy Onet Game : https://play.google.com/store/apps/details?id=com.SimpleBox.EnglishWordConnect",
            "flags": 0,
            "hasliked": 0,
            "id": "tllfDf",
            "likes": 0,
            "name": "20. Function Smoothing Explained",
            "published": 3,
            "tags": [
                "functionsmoothing"
            ],
            "usePreview": 0,
            "username": "altera0",
            "viewed": 281
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) /iResolution.y;\n\t\n    \n    float aspectRatio = iResolution.x / iResolution.y;\n    \n    uv.x = (uv.x + 0.5 * aspectRatio ) * 2.0;\n    uv.y = uv.y + 0.5;// / aspectRatio ;\n    \n\n    float k = (( ( iMouse.xy / iResolution.xy ) ) * 5.0).x; \n    \n    vec3 col = vec3(0);\n    \n    //k = 0.0;\n    \n    float a = sqrt(uv.x);\n    float b = ( 2.0 - uv.x ) * ( 2.0- uv.x );\n    //float minValue = min( a , b );\n    float h2 = max( 0.0 , min( 1.0 , (b-a)/k + 0.5));\n    float m = h2 * ( 1.0 - h2 ) * k;\n    float l = h2 * a + ( 1.0 - h2 ) * b - m *0.5;\n\n    \n    \n    col =vec3(1) -  vec3( step( l , uv.y) )* vec3( 0.8 , 0.2 , 0.1 );\n        \n    \n    \n    \n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}