{
    "Shader": {
        "info": {
            "date": "1724295898",
            "description": "animated white grid over blue background",
            "flags": 0,
            "hasliked": 0,
            "id": "4flfWB",
            "likes": 1,
            "name": "O2-8-like",
            "published": 3,
            "tags": [
                "oxygen"
            ],
            "usePreview": 0,
            "username": "MrNoises",
            "viewed": 71
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 bgColor = vec3(1.0);  // White background\n    float gridSize = 20.0, lineWidth = 1.0, zoom = 12.0;\n    float aspect = iResolution.x / iResolution.y;\n    vec2 uv = fragCoord.xy / zoom, correctedGridSize = vec2(gridSize * aspect, gridSize);\n    float t = iTime * 0.1, freq = 0.1, amp = 5.0;\n\n    uv += vec2(\n        sin(uv.y * freq + t) * amp + sin(uv.x * freq * 1.5 + t * 1.2) * amp * 0.8 + cos((uv.x + uv.y) * freq * 0.5 + t * 0.5) * amp * 0.6,\n        sin(uv.x * freq + t) * amp + sin(uv.y * freq * 1.5 + t * 1.2) * amp * 0.8 + cos((uv.x + uv.y) * freq * 0.5 + t * 0.5) * amp * 0.6\n    );\n\n    vec2 gridCoord = mod(uv, iResolution.xy / correctedGridSize);\n    float lineDist = min(min(gridCoord.x, (iResolution.x / correctedGridSize.x) - gridCoord.x), min(gridCoord.y, (iResolution.y / correctedGridSize.y) - gridCoord.y));\n    vec3 finalColor = mix(bgColor, vec3(0.0, 0.0, 1.0), smoothstep(0.0, lineWidth, lineDist));  // Blue grid lines\n    \n    fragColor = vec4(finalColor, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}