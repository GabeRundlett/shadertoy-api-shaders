{
    "Shader": {
        "info": {
            "date": "1625450956",
            "description": "My first GLSL shader!",
            "flags": 0,
            "hasliked": 0,
            "id": "7tfSWr",
            "likes": 4,
            "name": "RippleWave",
            "published": 3,
            "tags": [
                "trippy",
                "psychodelic"
            ],
            "usePreview": 0,
            "username": "ZenithGD",
            "viewed": 274
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265\n#define sides 9.0\n\nfloat ripple(float d)\n{\n    return d / 3.0 + sin(30.0 * d * d - 5.0 * (iTime + sin(6.0 * iTime) / 10.0) ) / 2.0 * sqrt(d * d + 1.0) + 0.5;\n}\n\nfloat angle(vec2 v)\n{\n    return acos(dot(normalize(v),vec2(0.0, 1.0)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float angleNorm = fract(angle(fragCoord / iResolution.xy - vec2(0.5, 0.5)) / ( 2.0 * PI ));\n    \n    float d = sin(2.0 * sides * PI * angleNorm + PI/2.0)/(50.0 * (sin(2.0 * iTime) + 2.0)) + 1.0 - distance(vec2(0.5, 0.5), vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y)); \n                  ;\n    \n    float r = ripple(d);\n    \n    // Output to screen\n    vec4 nv   = vec4(abs(sin(iTime + PI / 4.0)) * r * d * d + abs(sin(iTime)) / 2.0, \n                     abs(cos(iTime + PI / 2.0)) * r * (1.0 - d * d / 2.0),\n                     abs(cos(iTime + PI / 4.0)) * r * (1.0 - d),\n                     1.0);\n    fragColor = nv;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}