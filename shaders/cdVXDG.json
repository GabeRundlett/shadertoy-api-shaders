{
    "Shader": {
        "info": {
            "date": "1681547256",
            "description": "A zellij tile pattern.",
            "flags": 8,
            "hasliked": 0,
            "id": "cdVXDG",
            "likes": 7,
            "name": "Zellij pattern 4",
            "published": 3,
            "tags": [
                "fractal",
                "music",
                "zellige"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 184
        },
        "renderpass": [
            {
                "code": "vec2 f1(vec2 a){\n    return\n        abs(fract(a)-.5)\n        //min(abs(fract(a*2.)-.5),abs(fract(a)-.5))\n    ;\n}\n\nvec2 triangle_wave(vec2 a){\n    vec2 a2 =\n        vec2(1.,0.5)\n    ,\n    a1 = a+a2;\n    return\n        f1((a1)*(a2.x+a2.y))\n    ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 1.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    if(iMouse.z>.5)\n    uv = uv.xy + iMouse.xy / iResolution.xy/t1;\n    vec2 t2 = vec2(0.);\n    for(int k = 0; k < 6; k++){\n        uv =\n            abs(.5+uv+t2)/1.5\n        ;\n        if(uv.x>0.) uv.x -= .5;\n\n        t2 =\n            -triangle_wave(uv.yx+.5)\n        ;\n        uv =\n            t2-triangle_wave(uv)\n        ;\n        \n        col =\n            vec3(col.zx,max(abs(uv.x-uv.y)*sign(t2.x-t2.y),0.))\n        ;\n        //if(uv.y<uv.x) col=col.yzx;\n    }\n    fragColor = vec4(col*2.,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float fmod(float a, float b,float f1){\n    return\n        mod(floor(a/f1),b)\n        //mod(floor(a/f1)*floor(a),b)\n    ;\n}\n\nvec2 mainSound(int samp, float time){\n  float f1 = pow(2.,2.+mod(floor(time/2.),2.));\n  float s1 = 8.,\n  t=time/(1.+fmod(time,2.,f1)),\n  m3 =\n      fmod(floor(t*f1+fmod(t,s1,f1)),s1,f1)\n  ;\n  t *= f1*f1/(1.+fmod(t/s1,2.,f1));\n  float a=sqrt((1.-sqrt(max(fract(t/s1/s1/2.),fract(t/s1/2.)))))*.2,\n  nb = time*pow(2.,(m3+1. + fmod(t/s1,s1,f1))/5.+6.5);\n  return abs(.5-vec2(fract(nb*.998),fract(nb)))*a;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}