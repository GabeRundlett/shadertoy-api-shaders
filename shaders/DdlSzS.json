{
    "Shader": {
        "info": {
            "date": "1669129530",
            "description": "i am viewing a few of my screens under my microscope, therefore this shader can be used to compare\n\nmy current tests \nhttps://youtu.be/SU-Ut8GnZTc\nhttps://youtu.be/0SJ5WlnCmwA\nhttps://youtu.be/eXxBXS3zL98",
            "flags": 0,
            "hasliked": 0,
            "id": "DdlSzS",
            "likes": 2,
            "name": "microscope screen test",
            "published": 3,
            "tags": [
                "microscope"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 169
        },
        "renderpass": [
            {
                "code": "//https://stackoverflow.com/questions/72479232/shader-fails-on-mobile\nprecision highp float; // Define float precision\nprecision highp int;   // Define int precision\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\n    bool b_matepad = false;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    vec4[] a_o_col = vec4[](\n        vec4(1.),\n        vec4(0.), \n        vec4(0.5), \n        vec4(mod(iTime,1.)),\n        vec4(float(mod(iTime,2.) > 1.))\n    );\n    \n    float n_index = mod(fragCoord.x, float(a_o_col.length()));\n    if(!b_matepad){\n        fragColor = a_o_col[int(n_index)];\n    }\n    \n    // the above array technique is not working on my huawei matepad so i try this\n    n_index = mod(fragCoord.x, 2.);\n    float n = 5.;\n    \n    if(b_matepad){\n\n        uv.x = mod(uv.x * (iResolution.x/n), 1.0);\n        if(uv.x >= (1./n)*0.){\n            fragColor = vec4(1.);\n        }\n        if(uv.x >= (1./n)*1.){\n            fragColor = vec4(0.);\n        }\n        if(uv.x >= (1./n)*2.){\n            fragColor = vec4(0.5);\n        }\n        if(uv.x >= (1./n)*3.){\n            fragColor = vec4(mod(iTime,1.));\n        }\n        if(uv.x >= (1./n)*4.){\n            fragColor = vec4(float(mod(iTime,2.) > 1.));\n        }\n    \n    }\n\n\n    // Output to screen\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}