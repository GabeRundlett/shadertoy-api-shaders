{
    "Shader": {
        "info": {
            "date": "1570428782",
            "description": "Basically just distorting the uv.y by a function of x which gives a 3d effect kinda like if you were looking parallel into the xy plane. Added spinny stuff.",
            "flags": 0,
            "hasliked": 0,
            "id": "WsKGR1",
            "likes": 10,
            "name": "Fake 3d sections",
            "published": 3,
            "tags": [
                "2d",
                "fake3d"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 569
        },
        "renderpass": [
            {
                "code": "vec2 R;\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);}\nvoid mainImage( out vec4 f, in vec2 u )\n{\n    R = iResolution.xy;\n    vec2 uv = vec2(u.xy - .5*R.xy)/R.y;\n    vec3 col = vec3(1);\n    \n    uv.y*=exp(abs(cos(uv.x*2.)));\n    uv.y+=iTime*.43;\n    uv.x*=3.;\n    \n\tvec2 fuv = fract(uv*6.);\n    vec2 id1 = floor(uv*3.);\n    \n    float rev = 2.*mod(id1.y, 2.)-1.;\n    col*=min(smoothstep(.4,.9, abs(uv.x*.5 + .55))+.6,1.2);\n    uv.x += mod(iTime*rev + id1.y*.3,2.) \n        * mod(floor(iTime*rev + id1.y*.3), 2.);\n    \n    vec2 id = floor(uv*6.);\n    \n    float chk = mod(id.y+id.x,2.);\n   \n    col*=mix(vec3(1., 0., .5), vec3(.0,.6, .2), hash12(id));\n    col *= smoothstep(.7, .12,abs(fuv.y-.5))*chk;\n \n    f = vec4(col, 1.)*.8;\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}