{
    "Shader": {
        "info": {
            "date": "1721594025",
            "description": "Using  the single pass algorithm from Simplest detailed fluid (https://www.shadertoy.com/view/7t3SDf) by Davidar.",
            "flags": 32,
            "hasliked": 0,
            "id": "MclcDB",
            "likes": 16,
            "name": "Waterfall 7",
            "published": 3,
            "tags": [
                "fluid"
            ],
            "usePreview": 0,
            "username": "guil",
            "viewed": 241
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 C, in vec2 fragCoord )\n{\n    vec2 u = fragCoord/iResolution.xy;\n    vec4 a = texture(iChannel0,u);\n    C = .5*a.z*vec4(1,1.2,2,1);\n    if (u.x < 0.2&&u.y < 0.7) C = vec4(0.2);\n    if (u.x < 0.5&&u.y < 0.4) C = vec4(0.2);\n    if (u.y < 0.05) C = vec4(0.2);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\n\n#define ks 5.0   //kernel convolution size\n#define kf 0.7   //kernel factor : 1/(2*sigmaÂ²)\n#define gf 0.03  //gravity force\n#define af .7    //attraction force \n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec4  o = vec4(0);\n    \n    for(float i=-ks; i<=ks; i++){\n    for(float j=-ks; j<=ks; j++){\n      vec2 d = vec2(i,j);\n      vec2 v = A(u+d).xy-vec2(0,gf);       \n      o += A(u+d).z                                // neighbour mass\n         * exp(-dot(v+d,v+d)*kf) / 3.1416 *kf      // normalised Gaussian\n         * vec4(v + af*(1.- A(u+d).z)*(v+d),1,1);    // velocity contribution\n    }}\n   \n    if(o.z!=0.){o.xy /= o.z;}             //calculate the average velocity \n    float l = length(o.xy);\n    if (l>3.)o.xy /= l/3.;                    //clamp velocity to avoid mass leakage\n     // Boundaries\n    vec2 v = o.xy;            \n    vec2 p = u/iResolution.xy;\n    if(p.x<.02&&v.x<0.)v.x =-v.x;\n    if(p.y<.05&&v.y<0.)v.y =-v.y;\n    if(p.y>.95)o.z=0.;\n    if(p.y<.4&&p.x<.5&&v.x<0.)v.x =-v.x;\n    if(p.y<.4&&p.x<.5&&v.y<0.)v.y =-v.y;\n    if(p.y<.7&&p.x<.2&&v.x<0.)v.x =-v.x;\n    if(p.y<.7&&p.x<.2&&v.y<0.)v.y =-v.y;\n    o.xy=v;\n    \n    if(iMouse.z>0.)                       //mouse click adds velocity\n    {\n        vec2 m = 8.*(u-iMouse.xy)/iResolution.y;\n        o += vec4(m,0,0)*exp(-dot(m,m));\n    }\n    \n    vec2 m = 20.*(u-iResolution.xy*vec2(.1,.8))/iResolution.y;\n        o += .04*vec4(-.5,0,1,1)*exp(-dot(m,m));\n    fragColor = o;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}