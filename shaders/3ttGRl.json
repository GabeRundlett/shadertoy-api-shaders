{
    "Shader": {
        "info": {
            "date": "1577240069",
            "description": "fire\n/*\n*算法来自：https://blog.csdn.net/tjw02241035621611/article/details/80045381\n*algorithm from https://blog.csdn.net/tjw02241035621611/article/details/80045381\n*/",
            "flags": 0,
            "hasliked": 0,
            "id": "3ttGRl",
            "likes": 1,
            "name": "fire fire",
            "published": 3,
            "tags": [
                "fire"
            ],
            "usePreview": 0,
            "username": "changjiu",
            "viewed": 342
        },
        "renderpass": [
            {
                "code": "/*\n*算法来自：https://blog.csdn.net/tjw02241035621611/article/details/80045381\n*algorithm from https://blog.csdn.net/tjw02241035621611/article/details/80045381\n*/\n\n#define HASHSCALE1 .1031\n#define PI 3.14159265\n\nvec3 _Color = vec3(1.0,0.3,0.0);\nfloat _GridSize = 30.;\nfloat _RotSpd = 0.5;\nfloat _YSpd = 0.7;\n\nfloat Hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 acc = vec3(0.0,0.0,0.0);\n\n    float rotDeg = 3.*_RotSpd * iTime;\n    float yOffset = 4.*_YSpd* iTime;\n\n    vec2 coord = uv*_GridSize - vec2(0.,yOffset);//整体沿y轴上升\n    if (abs(mod(coord.y,2.0))<1.0){\n        coord.x += 0.5;\n    }\n    vec2 gridIndex = vec2(floor(coord));\n    float rnd = Hash12(gridIndex);//根据ID 获取hash值\n    // 弥补y轴上升的逆差 获取原来的y值 \n    // 同时因为gridIndex = floor(coord) 的原因  会让tempY值在锁定固定的grid的同时越来越大;\n    float tempY = gridIndex.y + yOffset ;\n    float life = min(10.0*(1.0-min((tempY)/(24.0-20.0*rnd),1.0)),1.0);\n    if (life>0.0 ) {\n        float size = 0.08*rnd;//让大小随机化\n        float deg = 999.0*rnd*2.0*PI + rotDeg*(0.5+0.5*rnd);//添加旋转随机化\n        vec2 rotate = vec2(sin(deg),cos(deg));//单位圆旋转偏移\n        float radius =  0.5-size*0.2;\n        vec2 cirOffset = radius*rotate;//\n        vec2 part = fract(coord-cirOffset) - 0.5 ;//让格子自己旋转起来 位置变 方向不变\n        float len = length(part);\n        float sparksGray = max(0.0,1.0 -len/size);//画圆\n        float sinval = sin(PI*1.*(0.3+0.7*rnd)*iTime+rnd*10.);//加点亮度的变化实现闪烁 \n        float period = clamp(pow(pow(sinval,5.),5.),0.,1.);\n        float blink =(0.8+0.8*abs(period));\n        acc = life*sparksGray*_Color*blink;\n    }\n\n    // Output to screen\n    fragColor = vec4(acc,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}