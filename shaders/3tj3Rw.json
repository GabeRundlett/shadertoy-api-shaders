{
    "Shader": {
        "info": {
            "date": "1558970352",
            "description": "OTM",
            "flags": 0,
            "hasliked": 0,
            "id": "3tj3Rw",
            "likes": 6,
            "name": "OTM",
            "published": 3,
            "tags": [
                "2d",
                "flat",
                "pattern",
                "panel",
                "mono"
            ],
            "usePreview": 0,
            "username": "lennyjpg",
            "viewed": 670
        },
        "renderpass": [
            {
                "code": "bool tick(int i, int s){\n    return (i-s+6)%6 == 0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord - iResolution.xy ) / iResolution.y; \n    vec2 mouse = iMouse.xy/iResolution.xy;\n    uv+=mouse*2.;\n    float t = iTime * 5.0;\n    //t += sin(t)+1.0;\n    float res = 5., speed = 0.0137, offset = t * .1;\n    offset *= ceil(uv.y * res) *.25 + 1.5;\n    float flip =  round( fract(uv.y * .5 * res ));\n    uv.x += (flip-.5) * offset;\n    float pw = res*1.5/iResolution.y;\n    \n    vec2 u = uv * res; \n    int i = int(ceil(u.x) + ceil(u.y));\n    u = fract(u);\n    float k = 0.,\n        a = u.y + u.x, b = u.y - u.x,\n        c = length(u - .5);\n\n    if(tick(i, 2)){\n        float g = step(.0, u.y - .5);\n        k += smoothstep(.5 - pw, .5, c) + step(.8, b + .2);\n        k += smoothstep(.15, .15 - pw, c+g);\n        k += smoothstep(.05, .05 - pw,  length(vec2(abs(u.x - .5), u.y - .5) - .1));\n    }else if(tick(i, 3)){\n        k += step(1. - abs(b), .7) - step(.5 - u.y, 0.) + step(.9 - b, .1);\n    }else if(tick(i, 5) || tick(i , 4)){\n        k += step(.3, abs(b)) - step(1.3 - u.x, .4);        \n    }\n    \n    if(tick(i, 4)){\n        k-= step(abs(1. - b), .6);\n    }else if(tick(i, 0)){\n        k += step( abs(b + 1.), .5);\n    }else if(tick(i, 1) ){\n        k += 1.;\n    }\n\n    if(flip == 1.) k = 1. - k;\n    vec3 front = vec3(1., .1, .3), back = vec3(.2, .1, .2);\n    fragColor = vec4(mix(front, back, clamp(k, 0., 1.)), 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}