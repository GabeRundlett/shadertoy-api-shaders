{
    "Shader": {
        "info": {
            "date": "1544886696",
            "description": "2D version.\nA ray-traced 3D-one is available here: [url]https://www.shadertoy.com/view/ldXGz2[/url]\n",
            "flags": 0,
            "hasliked": 0,
            "id": "tdXGRH",
            "likes": 2,
            "name": "SGI logo ( 345 chars ) ",
            "published": 3,
            "tags": [
                "logo",
                "sgi",
                "short",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 488
        },
        "renderpass": [
            {
                "code": "// C = (mask,grey). S(): blend( C , AAmask(line(a,b)) * col )\n#define S(a,b)   v = b-a,                                \\\n    C += (1.-C.x)                                        \\\n          * smoothstep( 3./R.y, 0.,                      \\\n                        v.x = length( U-a - v * clamp( dot(U-a, v) / dot(v,v), 0., 1.)) -.1) \\\n          * vec2( 1, cos(15.*v)                         //\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2 R = iResolution.xy, U = u+u - R ,\n         A = vec2(.5,.55), B = vec2(.6,.15), C=A-A, v;\n    U =   length( U /= R.y )        /* .95: 3/pi */\n        * cos( abs( mod( atan(U.y,U.x)*.95 - .5, 2.) - 1. )/.95 +vec2(0,11));\n    S( vec2(.2,0), A )      );\n    S( A, B )            *.8);\n    S( B, vec2(.1,.15) ) *.5);\n    O += C.y; }                                            /*\n\n\n\n\n\n\n// --- 377 chars\n\n// C = (mask,grey). S(): blend C * AAmask * col \n#define S(a,b,c) C += (1.-C.x)                                  \\\n                     * smoothstep( 3./R.y, 0., v.x= L(a,b)-.1 ) \\\n                     * vec2( 1, c*cos(15.*v) ) // texture(iChannel0,vec2(v,0)).ra //\n#define L(a,b) ( d=b-a, length( U-a - d * clamp( dot(U-a, d) / dot(d, d), 0., 1.))) // https://www.shadertoy.com/view/4dcfW8\n#define mainImage( O, u )                                \\\n    vec2 R = iResolution.xy, U = ( u+u - R ) / R.y,      \\\n         A = vec2(.5,.55), B = vec2(.6,.15), C=A-A, d,v; \\\n    U =   length(U)                                      \\\n        * cos( abs( fract(atan(U.y,U.x)*.477 - .25) - .5 )/.477 +vec2(0,11)); \\\n    S( vec2(.2,0), A , 1.);                              \\\n    S( A, B , .8);                                       \\\n    S( B, vec2(.1,.15) , .5);                            \\\n    O += C.y                                            /*\n\n\n\n\n\n\n// --- plein grey: 366 chars /**\n\n#define S(a,b,c) C += (1.-C.y) *smoothstep( 3./R.y, 0., L(a,b)-.1 ) * vec2(c,1) //\n#define L(a,b) ( _d=b-a, length( U-a - _d * clamp( dot(U-a, _d) / dot(_d, _d), 0., 1.))) // https://www.shadertoy.com/view/4dcfW8\n//\n#define mainImage( O, u )                                \\\n    vec2 R = iResolution.xy, U = ( u+u - R ) / R.y,      \\\n         A = vec2(.5,.55), B = vec2(.6,.15), C=A-A, _d;  \\\n    U =   length(U)                                      \\\n        * cos( abs( fract(atan(U.y,U.x)*.477 - .25) - .5 )/.477 +vec2(0,11)); \\\n    S( vec2(.2,0), A , 1. );                             \\\n    S( A, B , .7 );                                      \\\n    S( B, vec2(.1,.15), .5);                             \\\n    O += C.x                                            /*\n\n\n\n\n\n\n/** // --- base: (& masking) 387 chars\n\n#define S(a,b,c) C += (1.-C.y) *smoothstep( 3./R.y, 0., L(a,b)-.1 ) * vec2(c,1)\n\nvec2 _d; // https://www.shadertoy.com/view/4dcfW8\n#define L(a,b) ( _d=b-a, length( U-a - _d * clamp( dot(U-a, _d) / dot(_d, _d), 0., 1.)))\n   \nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = ( u+u - R ) / R.y,\n         A = vec2(.5,.55), B = vec2(.6,.15), C=A-A;\n\n    U =   length(U)   // .477: 3/(2pi) 2.09 : 2pi/3\n        * cos( abs( fract(atan(U.y,U.x)*.477 - .25) - .5 )/.477 +vec2(0,11));\n\n    S( vec2(.2,0), A , 1. );\n    S( B, A , .7 );\n    S( B, vec2(.1,.15), .5);\n    O += C.x;\n}\n\n\n\n\n\n\n/** // --- base: 408 chars \n\n#define S(d) smoothstep( 3./R.y, 0., d )\n\nfloat L(vec2 p, vec2 a,vec2 b) { // https://www.shadertoy.com/view/4dcfW8\n    p -= a, b -= a;\n\tfloat h = clamp(dot(p, b) / dot(b, b), 0., 1.);   // proj coord on line\n\treturn length(p - b * h);                         // dist to segment\n}\n    \nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = ( u+u - R ) / R.y,\n         A = vec2(.5,.55), B = vec2(.6,.15);\n    float a = atan(U.y,U.x), l = length(U);\n    a = abs( mod(a*3. - 3.14/2.,6.28) - 3.14 )/ 3.;\n    U = l * vec2(cos(a),sin(a));\n\n    O +=    S( L ( U, vec2(.2,0), A ) - .1 )\n       + .7*S( L ( U, B, A ) - .1 )\n       + .5*S( L ( U, B, vec2(.1,.15) ) - .1 );\n}\n/**/",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}