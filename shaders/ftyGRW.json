{
    "Shader": {
        "info": {
            "date": "1637201514",
            "description": "stochastic texture synthesis by example",
            "flags": 32,
            "hasliked": 0,
            "id": "ftyGRW",
            "likes": 4,
            "name": "Stochastic texture synthesis",
            "published": 3,
            "tags": [
                "texture",
                "synthesis",
                "stochastic"
            ],
            "usePreview": 0,
            "username": "public_int_i",
            "viewed": 366
        },
        "renderpass": [
            {
                "code": "//Ethan Alexander Shulman xaloez.com 2021 CC0 public domain\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel1,ivec2(texelFetch(iChannel0,ivec2(fragCoord),0).xy),0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//Ethan Alexander Shulman xaloez.com 2021 CC0 public domain\n\n/*detail size in pixels, higher value is more accurate to source texture\nbut takes longer to resolve noise*/\n#define DETAIL_SIZE 2\n\n\n//uvec4 seed, returns uvec4 hash\nuvec4 hash(uvec4 seed) {\n    uvec4 h = (0x6A7F8FAAu^seed)*0x01000193u;\n    h = ((h.wxyz>>3u)^h^seed.yzwx)*0x01000193u;\n    h = ((h.zwxy>>8u)^h^seed.wxyz)*0x01000193u;\n    return h^(h>>11u);\n}\n#define I2F (1./float(0xFFFFFFFFu))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    #define SS iChannelResolution[1]\n    uvec4 hv = hash(uvec4(fragCoord.xyy,iDate.w*100.));\n    if (iFrame < 60 || iMouse.w > 0.) {\n        //initialize\n        fragColor = vec4(hv.xy%uvec2(SS.xy),0,1);\n        return;\n    }\n    \n    float mdst = 0.;\n    vec2 sc = texelFetch(iChannel0,ivec2(fragCoord),0).xy,\n        mc = sc, oscale = vec2(1u+hv.zw%uint(DETAIL_SIZE));\n    vec4 sv = pow(texelFetch(iChannel1,ivec2(sc.xy),0),vec4(2.2));\n    for (float x = -1.; x < 2.; x++) {\n        for (float y = -1.; y < 2.; y++) {\n            vec2 off = vec2(x,y)*oscale,\n                px = fragCoord+off;\n            if (min(px.x,px.y) < 0. || max(px.x-iResolution.x,px.y-iResolution.y) >= 0. ||\n                (x ==0. && y == 0.)) continue;\n            \n            vec2 oc = texelFetch(iChannel0,ivec2(px),0).xy,\n                c0 = sc+off, c1 = oc-off;\n            if (min(c0.x,c0.y) < 0. || max(c0.x-SS.x,c0.y-SS.y) >= 0. ||\n               min(c1.x,c1.y) < 0. || max(c1.x-SS.x,c1.y-SS.y) >= 0.) continue;  \n            vec4 ov = pow(texelFetch(iChannel1,ivec2(oc),0),vec4(2.2));\n            float dst = length(ov.xyz-pow(texelFetch(iChannel1,ivec2(sc+off),0).xyz,vec3(2.2)))-\n                        length(sv.xyz-pow(texelFetch(iChannel1,ivec2(oc-off),0).xyz,vec3(2.2)));\n            if (dst > mdst) {\n                mc = oc-off;\n                mdst = dst;\n            }\n        }\n    }\n    \n    fragColor = vec4(mc,0,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}