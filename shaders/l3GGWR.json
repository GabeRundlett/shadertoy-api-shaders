{
    "Shader": {
        "info": {
            "date": "1717491835",
            "description": "ha ha ha",
            "flags": 0,
            "hasliked": 0,
            "id": "l3GGWR",
            "likes": 3,
            "name": "blue ink",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "DeMaCia",
            "viewed": 167
        },
        "renderpass": [
            {
                "code": "\nfloat randomNoise(vec2 p)\n{\n    return fract((sin(dot(p,vec2(127.1,311.7)))*43758.5453123));\n}\n\nfloat BINoise(vec2 p)\n{//Bilinear interpolation\n\n    float tiles = 50.;\n\n    vec2 base = floor(p/tiles);\n    p = fract(p/tiles);\n    vec2 f = smoothstep(0., 1., p);\n\n    float q11 = randomNoise(base);\n    float q12 = randomNoise(vec2(base.x, base.y+1.));\n    float q21 = randomNoise(vec2(base.x+1., base.y));\n    float q22 = randomNoise(vec2(base.x+1., base.y+1.));\n\n    float r1 = mix(q11, q21, f.x);\n    float r2 = mix(q12, q22, f.x);\n\n    return mix (r1, r2, f.y);\n} \n\n\nvec2 gradn(vec2 p)\n{\n\tfloat ep = .09;\n\tfloat gradx = BINoise(vec2(p.x+ep, p.y))-BINoise(vec2(p.x-ep, p.y));\n\tfloat grady = BINoise(vec2(p.x, p.y+ep))-BINoise(vec2(p.x, p.y-ep));\n\treturn vec2(gradx,grady);\n}\n\nmat2 makeRotM2(float theta){\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat2(c, -s, s, c);\n}\n\nfloat perlinNoise(vec2 p)\n{\n    float t = iTime*3.;\n\tfloat a = .5;\n\tfloat total = 0.;\n\tvec2 bp = p;\n\n\tfor (float i = 1.; i < 7.; i++ )\n\t{\n\t\tp += t*1.6;\n\t\tbp -= t*2.6;\n\t\t\n\t\tvec2 gr = gradn(i*p*.34+t*1.)*100.*100.;\n\t\t\n\t\tgr *= makeRotM2(i*t*.05+.8);\n\t\t\n\t\tp += gr;\n\t\t\n\t\ttotal += (sin(BINoise(p)*7.)*.5+.5)*a;\n\t\t\n\t\tp = mix(bp, p, .77);\n\t\t\n\t\ta *= .75;\n\t\tp *= 2.;\n        bp *= 1.5;\n\t}\n\treturn total;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime*1.2;\n\n    vec2 d1 = vec2(t*1., t*.5);\n    vec2 d2 = vec2(t*2., t*-4.);\n    vec2 d3 = vec2(t*-6., t*8.);\n\n    float p1 = perlinNoise(fragCoord - d1);\n    float p2 = perlinNoise(fragCoord + d2);\n    float p3 = perlinNoise(fragCoord - d3);\n\n    float pn = mix(p1, p2, p3);  \n        \n    vec3 color1 = vec3(.2, .65, .95);\n    vec3 color2 = vec3(1., 1., 1.);\n\n    fragColor = vec4(mix(color1, color2, pn), 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}