{
    "Shader": {
        "info": {
            "date": "1530245324",
            "description": "A very cool backgroun for some forums, thanks for iq!",
            "flags": 0,
            "hasliked": 0,
            "id": "4dKBWG",
            "likes": 22,
            "name": "CoolBackground",
            "published": 3,
            "tags": [
                "2d",
                "cool"
            ],
            "usePreview": 0,
            "username": "Kasug",
            "viewed": 907
        },
        "renderpass": [
            {
                "code": "// Thanks iq for this tutorial!\n\n//大概思想就是把屏幕分成若干相等网格，每个网格取一个随机点作为连接处，通过Line函数连接点，并画出线。\n//原教程链接：https://www.youtube.com/watch?v=3CycKKJiwis\n#define S(a,b,t) smoothstep(a,b,t)\n\nfloat DistLine(vec2 p,vec2 a,vec2 b){\n\tvec2 pa = p-a;\n    vec2 ba = b-a;\n    float t = clamp(dot(pa,ba) / dot(ba,ba),0.,1.);\n    return length(pa - ba * t);\n}\n\nfloat N21(vec2 p){\n\tp = fract(p * vec2(233.34,851.73));\n    p += dot(p, p + 23.45);\n    return fract(p.x * p.y);\n}\n\nvec2 N22(vec2 p){\n\tfloat n =N21(p);\n    return vec2(n,N21(p+n));\n    \n}\n\nvec2 GetPos(vec2 id,vec2 offs){\n      \n    \n    vec2 n = N22(id + offs) * iTime;\n    \n    return offs + sin(n) * .4;\n}\n\nfloat Line(vec2 p,vec2 a,vec2 b){\n\tfloat d = DistLine(p,a,b);\n    float m = S(.03,.01,d);\n    \n    m *= S(1.2,.8,length(a - b));\n    \n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n\n    float m = 0.;\n    \n    uv *= 5.;\n    \n    vec2 gv = fract(uv) - .5;\n    vec2 id = floor(uv);\n    \n\n    \n    vec2 p[9];\n    int i = 0;\n    for(float y = -1.;y <= 1.; y++){\n        for(float x = -1.;x <= 1.; x++){\n        \tp[i++] = GetPos(id,vec2(x,y));\n\t\t\t\t\n        }\n    }\n    \n    //控制连接处闪耀\n    float t = iTime * 10.;\n    for(int i=0;i<9;i++){\n        \n    \tm += Line(gv,p[4],p[i]);\n        \n        vec2 j = (p[i] - gv) * 20.;\n        float sparkle = 1. / dot(j,j);\n        \n        m+=sparkle * (sin(t + p[i].x * 10.) * .5 + .5);\n            \n    }\n    \n    m += Line(gv,p[1],p[3]);\n    m += Line(gv,p[1],p[5]);\n    m += Line(gv,p[7],p[3]);\n    m += Line(gv,p[7],p[5]);\n    \n    vec3 col = vec3(m);\n   \n    //网格线\n    //if(gv.x > .48 || gv.y >.48) col = vec3(1,0,0);    \n    \n    \n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}