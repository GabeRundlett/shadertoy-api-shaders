{
    "Shader": {
        "info": {
            "date": "1472127126",
            "description": "more like fir",
            "flags": 0,
            "hasliked": 0,
            "id": "XtdGDf",
            "likes": 1,
            "name": "WAVES",
            "published": 3,
            "tags": [
                "waves"
            ],
            "usePreview": 0,
            "username": "Imsure1200q_1UWE130",
            "viewed": 565
        },
        "renderpass": [
            {
                "code": "float pi = acos(0.)*2.;\nvec3 b( vec2 p, float s )\n{\n    vec2 x = smoothstep(vec2(s), p/2.0, p/5.0);\n    vec3 q = normalize(vec3(x, 1.0));\n    vec3 i = vec3(x, q.z/q.x);\n    float k = length(sqrt(s));\n    return abs(sin(q-i*k)) - clamp(q.x, q.z, s/k);\n}\nvec2 i( vec2 p, float s, float s2 )\n{\n    float x = smoothstep(float(p), s, s2/s);\n    vec2 q = p / x * distance(s, s2);\n    vec3 pos = b(p, s);\n    float pSep = max(min(pos.x, pos.z), min(pos.y, pos.z));\n    return q + pSep * -(iTime / 2.0) / pos.xy;\n}\nfloat s( float u ) {\n    \n    float sum = 0.;\n    \n    for( float i = 1.; i < u; i++) {\n        \n        sum += 1. / pow(float(2.), float(i));\n        \n    }\n    \n    return sum;\n    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    if(uv.y >= 0.3/length(texture(iChannel0, i(uv, 2.0, 3.0)))){\n        fragColor = vec4(cos(uv.y)) + vec4(-0.025, 0.025, 0.6, 0.5) - vec4(0.8);\n        fragColor += texture(iChannel1, vec2(uv.x * 1.01 - (iTime / 60.0), uv.y* 5.0) )  - 0.8 + 0.4;\n    }\n    else fragColor = vec4(sin(uv.y)) + vec4(0.9, 0.5, 0.025, 0.5) - vec4(0.1) + sin(iTime)/32. + 1./32.;\n    \n    fragColor *= sin(min(iTime/2.,pi/2.));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 14,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 45,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}