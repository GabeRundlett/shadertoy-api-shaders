{
    "Shader": {
        "info": {
            "date": "1482333543",
            "description": "tribute to William Latham early computer art \nhttps://www.google.com/search?q=william+latham&tbm=isch\nhttp://www.phoenixbrighton.org/archive/2013-2/william-latham-mutator-1-2/\n",
            "flags": 0,
            "hasliked": 0,
            "id": "4tyXRR",
            "likes": 2,
            "name": "sphere art 1",
            "published": 3,
            "tags": [
                "sphere",
                "mutator",
                "latham"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 661
        },
        "renderpass": [
            {
                "code": "// tribute to William Latham early computer art\n//      https://www.google.com/search?q=william+latham&tbm=isch\n//      http://www.phoenixbrighton.org/archive/2013-2/william-latham-mutator-1-2/\n// Sphere engine from https://www.shadertoy.com/view/XlGXRR\n\nfloat t;\n\nvoid sphere(inout vec4 O, vec2 U, vec2 P, float r, vec3 C) {\n    r = length(U-P)/r; if (r>1.) return;\n\n    U = normalize(U-P)*r;\n    float A = (1.-O.a) * smoothstep(1.,.9,r);\n    vec3 N = vec3(U,sqrt(1.-dot(U,U)));\n    O.rgb += A * clamp(  C*(.2 + max(0.,(-N.x+N.y+N.z)/1.732))    // ambiant, diffus\n                       + pow(max(0.,dot(N,normalize(vec3(-1,1,2.73)))),50.) // spec\n                       ,0.,1.);               // L=(-1,1,1), E=(0,0,1), z toward eye \n    O.a += A;\n}\n\n\nvoid partic(inout vec4 O, vec2 U, vec2 P, vec2 D, float dl) {\n    float a = sin(t), c = cos(6.28/30.*a), s = sin(6.28/30.*a), k;\n    for (float i=0.; i<30.; i++) {\n        k = exp(-i/15.);\n        sphere(O, U, .5*P+vec2(i,-i)/100.,.1*k, vec3(1,k*vec2(1,.8)));\n        P += dl*k*D; D *= mat2(c,-s,s,c);\n    }\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy, P,D;\n         U = (U+U-R)/R.y;\n    float dl = .2, c=cos(6.28/30.), s=sin(6.28/30.);\n    O -= O; t = iTime;\n    \n    P = vec2(sin(t),-cos(t)); D = vec2(-P.y,P.x);\n    for (int i=0; i<30; i++) {\n        partic(O, U, P, vec2(D.y,-D.x), dl);\n        P += dl*D; D *= mat2(c,-s,s,c);\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}