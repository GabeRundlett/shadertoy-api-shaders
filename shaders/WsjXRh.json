{
    "Shader": {
        "info": {
            "date": "1552920319",
            "description": "Plotted mie phase function. Used miePlot for the values",
            "flags": 0,
            "hasliked": 0,
            "id": "WsjXRh",
            "likes": 7,
            "name": "Mie phase function plot",
            "published": 3,
            "tags": [
                "approximation",
                "scattering",
                "function",
                "plot",
                "scatter",
                "mie",
                "phase"
            ],
            "usePreview": 0,
            "username": "robobo1221",
            "viewed": 726
        },
        "renderpass": [
            {
                "code": "const float rLOG10 = 1.0 / log(10.0);\n\n#define log10(x) (log(x) * rLOG10)\n\nfloat miePhase(float x){\n    // Intensity over angle (0 - 1)\n\tconst float sequence[] = float[](29659675.4227421,\n                                   91758.923654224200,\n                                   37320.296214284000,\n                                   28066.601458819600,\n                                   21027.251344058400,\n                                   16310.968898640700,\n                                   12187.180917085000,\n                                   8169.5996023342200,\n                                   5618.4983962094500,\n                                   4275.1472670324400,\n                                   2986.2820254393800,\n                                   2127.1288575589600,\n                                   1267.9741978769500,\n                                   861.77090736684900,\n                                   596.21633800083400,\n                                   371.01084782136700,\n                                   249.90308420789800,\n                                   180.97746876057900,\n                                   126.05228476620100,\n                                   109.38945225537900,\n                                   91.516898312176700,\n                                   100.84723482799600,\n                                   120.37414936093400,\n                                   109.65328959730700,\n                                   207.25179386800900,\n                                   247.62389936783100,\n                                   228.29993034999200,\n                                   524.15170880168600,\n                                   1555.9073046701200,\n                                   1079.1388376242800,\n                                   816.24880376352600,\n                                   693.05059667156800,\n                                   579.67135735937600,\n                                   556.40065520288300,\n                                   633.25667846384300,\n                                   765.75782571805000,\n                                   2576.4971263391400);\n    \n    const float arrayLength = float(sequence.length());\n    x *= 1.0 - (1.0 / arrayLength);\n    \n    float fl = floor(x * arrayLength);\n    int ifl = int(fl);\n    \n    float fr = fract(x * arrayLength);\n          //fr = fr * fr * (3.0 - 2.0 * fr);\n    \n    float d1 = sequence[ifl];\n    float d2 = sequence[(ifl + 1) % int(arrayLength)];\n    \n    float phase = mix(log10(d1), log10(d2), fr);\n    \n    return phase;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2.*fragCoord - iResolution.xy ) / iResolution.x * 0.7;\n    \n    float phase = miePhase(abs(atan(uv.y, uv.x) / acos(-1.0)));\n\n    vec3 color = vec3(0.0);\n         color = vec3(step(length(uv) * 10.0 + 1.35, phase));\n    \n         color = mix(color, vec3(1.0, 0.0, 0.0), step(abs(uv.x), 1.0 / iResolution.x));\n         color = mix(color, vec3(1.0, 0.0, 0.0), step(abs(uv.y), 1.0 / iResolution.y));\n\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}