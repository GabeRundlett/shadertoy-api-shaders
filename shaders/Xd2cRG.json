{
    "Shader": {
        "info": {
            "date": "1492644413",
            "description": "2 frequencies per 'dot'",
            "flags": 0,
            "hasliked": 0,
            "id": "Xd2cRG",
            "likes": 5,
            "name": "dot grid thing",
            "published": 3,
            "tags": [
                "2d",
                "visualizer",
                "visualiser",
                "dots"
            ],
            "usePreview": 0,
            "username": "laney",
            "viewed": 709
        },
        "renderpass": [
            {
                "code": "\n\nfloat circle(vec2 p, float radius) {\n \treturn length(p)-radius;   \n}\n\nvec2 dist(vec2 p, vec2 ns, vec2 split, float totalSquares) {\n \tfloat amp1 = texture(iChannel0, vec2((ns.x + ns.y*split.x)/totalSquares, 0.25)).x;\n    float amp2 = texture(iChannel0, vec2(mod(ns.x + ns.y*split.x +1., totalSquares)/totalSquares, 0.25)).x;\n \treturn vec2(circle(p, 0.5 + 0.9*amp1), circle(p, 0.40 + 0.60*amp2)); \n    \n}\n\nfloat smin( float a, float b, float k )\n{\n    float res = exp( -k*a ) + exp( -k*b );\n    return -log( res )/k;\n}\n\nconst float ySplit = 10.0;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 aspect = vec2(iResolution.x/iResolution.y, 1.0);\n    vec2 split = vec2(floor(aspect*vec2(ySplit)));\n    float totalSquares = split.x*split.y;\n\tvec2 ns = floor(uv*split);\n    vec2 p = vec2(fract(uv*split))*2.0-vec2(1.0);\n        \n\n   \tvec2 c = dist(p, ns, split, totalSquares);\n   \tvec2 w = dist(p+vec2(2.0,0.0), ns+vec2(-1.0,0.0), split, totalSquares);\n   \tvec2 nw = dist(p+vec2(2.0,-2.0), ns+vec2(-1.0,1.0), split, totalSquares);\n   \tvec2 ne = dist(p+vec2(-2.0,-2.0), ns+vec2(1.0,1.0), split, totalSquares);\n   \tvec2 sw = dist(p+vec2(2.0,2.0), ns+vec2(-1.0,-1.0), split, totalSquares);\n   \tvec2 se = dist(p+vec2(-2.0,2.0), ns+vec2(1.0,-1.0), split, totalSquares);\n   \tvec2 e = dist(p+vec2(-2.0,0.0), ns+vec2(1.0,0.0), split, totalSquares);\n   \tvec2 s = dist(p+vec2(0.0,2.0), ns+vec2(0.,-1.0), split, totalSquares);\n   \tvec2 n = dist(p+vec2(0.0,-2.0), ns+vec2(0.,1.0), split, totalSquares);\n\n    float k = 3.0;\n    float d1 = smin(c.x, w.x, k);\n    d1 = smin(d1, e.x, k);\n    d1 = smin(d1, n.x, k);\n    d1 = smin(d1, s.x, k); \n    d1 = smin(d1, nw.x, k); \n    d1 = smin(d1, ne.x, k); \n    d1 = smin(d1, sw.x, k); \n    d1 = smin(d1, se.x, k); \n    \n    float d2 = smin(c.y, w.y, k);\n    d2 = smin(d2, e.y, k);\n    d2 = smin(d2, n.y, k);\n    d2 = smin(d2, s.y, k); \n    d2 = smin(d2, nw.y, k); \n    d2 = smin(d2, ne.y, k); \n    d2 = smin(d2, sw.y, k); \n    d2 = smin(d2, se.y, k); \n    \n\tfragColor = \n        vec4(0.1,0.1,0.1,1.0) *  (1.0 - d1) +\n        vec4(.3,0.5,0.3,1.0) *  (1.0 - smoothstep(0., 0.15, d1)) +\n        vec4(0.5,0.2,0.1,1.0) *  (1.0 - smoothstep(0., 0.1, d2));\n  \n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 35,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}