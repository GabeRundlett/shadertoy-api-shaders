{
    "Shader": {
        "info": {
            "date": "1645278432",
            "description": "CC0: Spiral \"domain mapping\"\nWas tinkering with getting a spiral domain mapping to work.\nWhile there are distortions I think it it turned out well enough to be useful to me",
            "flags": 0,
            "hasliked": 0,
            "id": "fsffDS",
            "likes": 22,
            "name": "Spiral \"domain mapping\"",
            "published": 3,
            "tags": [
                "2d",
                "domain",
                "spiral"
            ],
            "usePreview": 0,
            "username": "mrange",
            "viewed": 660
        },
        "renderpass": [
            {
                "code": "// CC0: Spiral \"domain mapping\"\n// Was tinkering with getting a spiral domain mapping to work.\n// While there are distortions I think it it turned out well enough to be useful to me\n\n\n#define RESOLUTION  iResolution\n#define TIME        iTime\n#define PI          3.141592654\n#define TAU         (2.0*PI)\n\n\n// License: MIT OR CC-BY-NC-4.0, author: mercury, found: https://mercury.sexy/hg_sdf/\nfloat mod1(inout float p, float size) {\n  float halfsize = size*0.5;\n  float c = floor((p + halfsize)/size);\n  p = mod(p + halfsize, size) - halfsize;\n  return c;\n}\n\nfloat spiralLength(float b, float a) {\n  // https://en.wikipedia.org/wiki/Archimedean_spiral\n  return 0.5*b*(a*sqrt(1.0+a*a)+log(a+sqrt(1.0+a*a)));\n}\n\nvoid spiralMod(inout vec2 p, float a) {\n  vec2 op     = p;\n  float b     = a/TAU;\n  float  rr   = length(op);\n  float  aa   = atan(op.y, op.x);\n  rr         -= aa*b;\n  float nn    = mod1(rr, a);\n  float sa    = aa + TAU*nn;\n  float sl    = spiralLength(b, sa);\n  p           = vec2(sl, rr);\n}\n\n\n// License: Unknown, author: nmz (twitter: @stormoid), found: https://www.shadertoy.com/view/NdfyRM\nfloat sRGB(float t) { return mix(1.055*pow(t, 1./2.4) - 0.055, 12.92*t, step(t, 0.0031308)); }\n// License: Unknown, author: nmz (twitter: @stormoid), found: https://www.shadertoy.com/view/NdfyRM\nvec3 sRGB(in vec3 c) { return vec3 (sRGB(c.x), sRGB(c.y), sRGB(c.z)); }\n\n// License: Unknown, author: Unknown, found: don't remember\nfloat hash(float co) {\n  return fract(sin(co*12.9898) * 13758.5453);\n}\n\nvec2 toPolar(vec2 p) {\n  return vec2(length(p), atan(p.y, p.x));\n}\n\nfloat circle(vec2 p, float r) {\n  return length(p) - r;\n}\n\n// https://iquilezles.org/articles/distfunctions2d\nfloat vesica(vec2 p, float r, float d) {\n  p = abs(p);\n  float b = sqrt(r*r-d*d);\n  return ((p.y-b)*d>p.x*b) ? length(p-vec2(0.0,b))\n                           : length(p-vec2(-d,0.0))-r;\n}\n\n// https://iquilezles.org/articles/smin\nfloat pmin(float a, float b, float k) {\n  float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n  return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat pmax(float a, float b, float k) {\n  return -pmin(-a, -b, k);\n}\n\nfloat eye(vec2 p, float h) {\n  float a  = mix(0.0, 0.85, smoothstep(0.995, 1.0, cos(TAU*(TIME+h)/5.0)));\n  const float b = 4.0;\n  float rr = mix(1.6, b, a);\n  float dd = mix(1.12, b, a);\n  \n  vec2 p0 = p;\n  p0 = p0.yx;\n  float d0 =  vesica(p0, rr, dd);\n  float d5 = d0;\n\n  vec2 p1 = p;\n  p1.y -= 0.28;\n  float d1 = circle(p1, 0.622);\n  d1 = max(d1,d0);\n\n  vec2 p2 = p;\n  p2 -= vec2(-0.155, 0.35);\n  float d2 = circle(p2, 0.065);\n\n  vec2 p3 = p;\n  p3.y -= 0.28;\n  p3 = toPolar(p3);\n  float n3 = mod1(p3.x, 0.05);\n  float d3 = abs(p3.x)-0.0125*(1.0-length(p1));\n\n  vec2 p4 = p;\n  p4.y -= 0.28;\n  float d4 = circle(p4, 0.285);\n\n  d3 = max(d3,-d4);\n\n  d1 = pmax(d1,-d2, 0.0125);\n  d1 = max(d1,-d3);\n\n  float t0 = abs(0.9*p.x);\n  t0 *= t0;\n  t0 *= t0;\n  t0 *= t0;\n  t0 = clamp(t0, 0.0, 1.0);\n  d0 = abs(d0)-mix(0.0125, -0.0025, t0);\n\n\n  float d = d0;\n  d = pmin(d, d1, 0.0125);\n  return d;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 q  = fragCoord/RESOLUTION.xy;\n  vec2 p  = -1. + 2. * q;\n  p.x     *= RESOLUTION.x/RESOLUTION.y;\n  \n  float aa = 2.0/RESOLUTION.y;\n  vec3 col = vec3(1.0);\n\n  float a = 0.25;\n  \n  vec2 sp = p;\n  spiralMod(sp, a);\n  sp.x += -TIME*0.2;\n  vec2 msp = sp;\n  float nsp = mod1(msp.x, a);\n  \n  float z = a*0.4;\n  \n  float dd = length(msp)-z;\n  \n  float h = hash(nsp+123.4);\n  \n  float de = eye(msp/z,h)*z;\n  de -= 0.25*aa;\n  \n  col = mix(vec3(1.0-abs(2.0*sp.y/a)), vec3(0.0), smoothstep(aa, -aa, de));\n  col *= smoothstep(0.0, 0.4, length(p));\n  \n  col = sRGB(col);\n  fragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}