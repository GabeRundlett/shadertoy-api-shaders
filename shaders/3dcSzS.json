{
    "Shader": {
        "info": {
            "date": "1572216185",
            "description": "Explore the relationship between the Mandelbrot set and the Julia sets.",
            "flags": 0,
            "hasliked": 0,
            "id": "3dcSzS",
            "likes": 0,
            "name": "Shadertober 27 Julia -jaburns",
            "published": 3,
            "tags": [
                "fractal",
                "julia",
                "mandelbrot"
            ],
            "usePreview": 0,
            "username": "jaburns",
            "viewed": 390
        },
        "renderpass": [
            {
                "code": "float map( vec2 z, vec2 c )\n{\n    float i = 0.;\n    \n    for( ; i < 150.; ++i ) {\n        z = vec2(\n            z.r*z.r - z.g*z.g + c.r,\n            2.*z.r*z.g + c.g\n        );  \n        if (length(z) > 40.) break;\n    }\n    \n    if (i >= 150.) return 0.;\n    \n    i = i - log(length(z)) / log(40.);\n    \n    return( i / 35. );\n}\n\nfloat sampJulia( vec2 uv, vec2 muv, vec2 offset )\n{\n    return map( uv + offset / iResolution.xy, muv );\n}\n\nfloat sampMandelbrot( vec2 uv, vec2 offset )\n{\n    return map( vec2( 0 ), uv + offset / iResolution.xy );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv  = 2.*( fragCoord/iResolution.yy - vec2(.5 * iResolution.x/iResolution.y, .5) ) - vec2(.5, 0);\n    vec2 muv;\n    \n    if( iMouse.z > 0.0 ) {\n        muv = 2.*( iMouse.xy/iResolution.yy - vec2(.5 * iResolution.x/iResolution.y, .5) ) - vec2(.5, 0);\n    } else {\n        float t = .1*iTime;\n        muv = vec2(.9*sin( t ) - .4, .8*cos( t ));\n    }\n    \n    float lm = length(uv - muv) + .01;\n    float c = clamp(.0002 / lm /lm, 0., 1.);\n    \n    float ja = sampJulia(uv, muv, vec2(-.75, .25));\n    float jb = sampJulia(uv, muv, vec2(-.25,-.75));\n    float jc = sampJulia(uv, muv, vec2( .25, .75));\n    float jd = sampJulia(uv, muv, vec2( .75,-.25));\n    float j = 0.25*(ja + jb + jc + jd);\n    \n    float ma = sampMandelbrot(uv, vec2(-.75, .25));\n    float mb = sampMandelbrot(uv, vec2(-.25,-.75));\n    float mc = sampMandelbrot(uv, vec2( .25, .75));\n    float md = sampMandelbrot(uv, vec2( .75,-.25));\n    float m = 0.25*(ma + mb + mc + md);\n\n    fragColor = vec4(c, j, m, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}