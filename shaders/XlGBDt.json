{
    "Shader": {
        "info": {
            "date": "1544433235",
            "description": "Thanks iq!",
            "flags": 0,
            "hasliked": 0,
            "id": "XlGBDt",
            "likes": 0,
            "name": "Noise2D ",
            "published": 3,
            "tags": [
                "2d",
                "noise"
            ],
            "usePreview": 0,
            "username": "felipunkerito",
            "viewed": 818
        },
        "renderpass": [
            {
                "code": "#define VALUENOISE\n\n\nfloat hash( vec2 a )\n{\n\n    return fract( sin(  dot( a, vec2( 3433.8, 3843.98) ) ) * 45933.8 );\n\n}\n\n/*\nfloat noise( vec2 uv )\n{\n    \n    vec2 lv = fract( uv );\n    lv = lv * lv * ( 3.0 - 2.0 * lv );\n    vec2 id = floor( uv );\n    \n    vec2 bIn = vec2( hash( id ), hash( id + vec2( 1, 0 ) ) );\n    \n    vec2 tIn = vec2( hash( id + vec2( 0, 1 ) ), hash( id + vec2( 1 ) ) );\n    \n    vec2 bT = vec2( mix( bIn.x, bIn.y, lv.x ), mix( tIn.x, tIn.y, lv.x ) );\n    \n    float c = mix( bT.x, bT.y, lv.y );\n    \n    return c;\n\n}\n*/\n\n// Succint version by Fabrice\nfloat noise( vec2 U )\n{\n    vec2 id = floor( U );\n          U = fract( U );\n    U *= U * ( 3. - 2. * U );  \n    \n    vec2 A = vec2( hash(id)            , hash(id + vec2(0,1)) ),  \n         B = vec2( hash(id + vec2(1,0)), hash(id + vec2(1,1)) ),  \n         C = mix( A, B, U.x);\n    \n    return mix( C.x, C.y, U.y );\n}\n\n\nfloat noise( in vec3 x )\n{\n\n\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n\n    vec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n    vec2 rg = textureLod( iChannel0, (uv+ 0.5)/256.0, 0.0 ).yx;\n    return mix( rg.x, rg.y, f.z );\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = vec3( 0 );\n    \n    #ifdef VALUENOISE\n    \n    col = vec3( noise( uv * 20.0 + iTime ) );\n    \n    #else\n    \n    col = vec3( noise( vec3( uv * 20.0 + iTime * 0.3, 1.0 ) ) );\n\n    #endif\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}