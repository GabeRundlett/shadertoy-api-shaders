{
    "Shader": {
        "info": {
            "date": "1692554532",
            "description": "Green if inside the box, red if outside",
            "flags": 0,
            "hasliked": 0,
            "id": "dlsBRr",
            "likes": 1,
            "name": "Handling Clicks",
            "published": 3,
            "tags": [
                "mouse"
            ],
            "usePreview": 0,
            "username": "LeifMessinger",
            "viewed": 124
        },
        "renderpass": [
            {
                "code": "//Macros from here https://www.shadertoy.com/view/llySRh\n#define mouseUp      ( iMouse.z < 0. )                  // mouse up even:   mouse button released (well, not just that frame)\n#define mouseDown    ( iMouse.z > 0. )                    // mouse down even: mouse button is down\n#define mouseClicked ( iMouse.w < 0. )                  // mouse clicked:   mouse button currently clicked\n\nconst bool PERSISTENT_MOUSE = false; //If you click in the rectangle, it'll stay green even if you drag it out.\n\nbool insideBox(vec2 bottomCorner, vec2 boxSize, vec2 position){\n    vec2 relativeDistanceFromCorner = position - bottomCorner;\n\n    return ((relativeDistanceFromCorner.x >= 0.0f) && (relativeDistanceFromCorner.x <= boxSize.x)) && ((relativeDistanceFromCorner.y >= 0.0f) && (relativeDistanceFromCorner.y <= boxSize.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 boxSize = vec2(50.0f, 100.0f);\n    vec2 boxPosition = vec2(100.0f, 50.0f);\n\n    float brightness = insideBox(boxPosition, boxSize, fragCoord)? 1.0f : 0.0f;\n\n    vec3 col;\n\n    if(mouseDown){\n        vec2 mouse = PERSISTENT_MOUSE? iMouse.zw : iMouse.xy;\n        if(insideBox(boxPosition, boxSize, abs(mouse))){\n            col = vec3(0.0f, brightness, 0.0f);\n        }else{\n            col = vec3(brightness, 0.0f, 0.0f);\n        }\n    }else{\n        col = vec3(brightness, brightness, brightness);\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}