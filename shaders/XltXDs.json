{
    "Shader": {
        "info": {
            "date": "1482230883",
            "description": "Noise-based texture mixer",
            "flags": 0,
            "hasliked": 0,
            "id": "XltXDs",
            "likes": 2,
            "name": "Noise-based texture mixer",
            "published": 3,
            "tags": [
                "procedural",
                "noise",
                "textures",
                "mixer"
            ],
            "usePreview": 0,
            "username": "josemorval",
            "viewed": 694
        },
        "renderpass": [
            {
                "code": "//Noise-based texture mixer\n//Based on https://www.shadertoy.com/view/lsf3WH\n\n\nfloat hash(vec2 p)\n{\n    p  = 50.0*fract( p*0.3183099 );\n    return -1.0+2.0*fract( p.x*p.y*(p.x+p.y) );\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n    \n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\n// -----------------------------------------------\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.xy;\n\n    vec2 uv = p*vec2(iResolution.x/iResolution.y,1.0);\n    \n    float f = 0.0;\n\n\n    uv *= 8.0;\n    \n    mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n    f  = 0.5000*noise( uv ); uv = m*uv;\n    f += 0.2500*noise( uv ); uv = m*uv;\n    f += 0.1250*noise( uv ); uv = m*uv;\n    f += 0.0625*noise( uv ); uv = m*uv;\n\n    f = 0.5 + 0.5*f;\n    \n    uv = p*vec2(iResolution.x/iResolution.y,1.0);\n\n    //Parametro de tileado para las texturas\n    float til = 3.0;\n    \n    vec4 col1 = texture(iChannel0,til*uv);\n    vec4 col2 = texture(iChannel1,til*uv);\n    \n    uv = (p-0.5)*vec2(iResolution.x/iResolution.y,1.0);\n\n    float vig = 1.0/(1.0+1.0*dot(uv,uv));\n    \n    float fmix = smoothstep(0.4,0.7,f);\n    \n    vec4 mixColor = col1*(1.0-fmix)+col2*fmix;\n    \n    fragColor = mixColor*vig;\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}