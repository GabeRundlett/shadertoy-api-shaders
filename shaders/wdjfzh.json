{
    "Shader": {
        "info": {
            "date": "1589520670",
            "description": "Variation of frosted glass effect.\n\nUPD1: slightly reworked",
            "flags": 0,
            "hasliked": 0,
            "id": "wdjfzh",
            "likes": 2,
            "name": "Frosted Glass / Noise Blur",
            "published": 3,
            "tags": [
                "noise",
                "blur",
                "glass",
                "frosted"
            ],
            "usePreview": 0,
            "username": "3ck5t3r",
            "viewed": 705
        },
        "renderpass": [
            {
                "code": "//float centStepRnd(vec2 st, float steps)\n//{\n//    return floor(random(st) * steps);\n//}\n\n//float normStepRnd(vec2 st, float steps)\n//{\n//    return floor(random(st) * steps) / (steps - 1.0);\n//}\n\n//float random (vec2 st)\n//{\n//    return fract(sin(dot(st.xy,\n//                         vec2(12.9898,78.233)))*\n//        43758.5453123);\n//}\n\nfloat difRandom (vec2 st, float seedShift)\n{\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        (43758.5453123 + seedShift * 30.0));\n}\n\nfloat rndCentered(vec2 st, float steps, float seedShift)\n{\n    return floor(difRandom(st, seedShift) * steps) * 2.0\n        - steps / 2.0;\n}\n\nvec2 rndField(vec2 st, float steps, float seedShift)\n{\n    return vec2(rndCentered(st, steps, seedShift), \n                rndCentered(st, steps, seedShift - 500.0));\n}\n\nvec2 shiftSt(vec2 fragCoord, vec2 shift)\n{\n    return (fragCoord.xy + shift) / iResolution.xy;\n}\n\nvec4 rndNoise (vec2 fragCoord, vec2 st,\n                     float steps, float accuracy)\n{\n    vec4 clr;\n    vec4 color;\n\n    for (float i; i < accuracy; i++)\n    {\n        clr = texture(iChannel0, shiftSt(\n            fragCoord, rndField(st, steps, i)));\n        color += clr;\n    }\n    \n\treturn color / accuracy;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float accuracy = 30.0;\n\tfloat steps = 50.0;\n    vec2 st = fragCoord.xy / iResolution.xy; \n\tvec4 color = texture(iChannel0, st);\n    float lightness = (color.x + color.y + color.z) / 3.0;\n    float difference = abs(lightness - 0.7);\n\tvec4 lightedNoise = (rndNoise(fragCoord, st, steps, accuracy) + vec4(1.0, 1.0, 1.0, 9.0)) / 2.0;\n    fragColor = color;\n//\tfragColor = color * 0.2 + rndNoise(fragCoord, st, steps, accuracy) * 0.8;\n    fragColor = color * (1.0 - difference) + lightedNoise * difference;\n}\n\n\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}