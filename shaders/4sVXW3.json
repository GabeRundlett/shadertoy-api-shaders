{
    "Shader": {
        "info": {
            "date": "1467071060",
            "description": "This is a simplification of my previous shader: [url]https://www.shadertoy.com/view/Mdy3Dw[/url]\nI wanted to make the SMALLEST Mandelbrot ... can you make it smaller?  :)",
            "flags": 0,
            "hasliked": 0,
            "id": "4sVXW3",
            "likes": 7,
            "name": "Smallest Mandelbrot-80 chars",
            "published": 3,
            "tags": [
                "2d",
                "short",
                "tweet",
                "2tc"
            ],
            "usePreview": 0,
            "username": "GregRostami",
            "viewed": 948
        },
        "renderpass": [
            {
                "code": "// 80 chars - o is already 0.0, so o-=o was removed.\n\nvoid mainImage(out vec4 o, vec2 u) {\nwhile(o.a++<98.) o.rg = u/iResolution.y - o.gr*mat2(-o.g,o.rrg); }  /*\t\n\n\n// 85 chars - using #define trick\n\n#define mainImage(o,u)\t\\\no-=o;\t\\\nwhile(o.a++<97.)o.rg=u/iResolution.y-mat2(-o.g,o.rrg)*o.gr\t\n\n    \n// 103 chars - I was schooled by akohdr, who reduced the matrix by 3 chars!!\n\nvoid mainImage(out vec4 o,vec2 u) \n{\n    o-=o;\n    for (int i=0; i++ < 97;) \n       o.rg = u/iResolution.y - mat2(-o.g,o.rrg)*o.gr;\n}\n\n\n// 107 chars - Original shader\n\nvoid mainImage(out vec4 o,vec2 u) \n{\n    o-=o;\n    for (int i=0; i < 97; i++) \n       o.rg = u/iResolution.y - mat2(o.rg,-o.g,o.r)*o.rg;\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}