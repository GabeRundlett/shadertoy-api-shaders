{
    "Shader": {
        "info": {
            "date": "1618678736",
            "description": "The storm has finally faded, and all the monsters are gone too.",
            "flags": 0,
            "hasliked": 0,
            "id": "sslSWN",
            "likes": 6,
            "name": "Sunset at Sea",
            "published": 3,
            "tags": [
                "landscape"
            ],
            "usePreview": 0,
            "username": "shophorn",
            "viewed": 349
        },
        "renderpass": [
            {
                "code": "// Author: Leo Tamminen leo@leotamminen.fi\n// Title: Sunset at sea\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvec3 skyBase            = vec3(0.160,0.706,0.920) * 0.544;\nvec3 waterBase          = vec3(0.162,0.875,0.526);\nvec3 sunDiscColor       = vec3(0.990,0.254,0.005) * 19.016;\nvec3 haloBaseColor      = vec3(1.0,0.236,0.025) * 4.824;\nvec3 haloTopColor       = vec3(0.995,0.857,0.118) * -0.392;\n\nvec2 discPosition       = vec2(0.790,0.150);\nfloat discSize          = 0.03;\nfloat discFeather       = 0.001;\nfloat discIntensity     = 10.;\n\nvec2 haloPosition       = vec2(0.760,0.600);\nfloat haloSize          = 0.536;\nfloat haloFeather       = 0.1;\nfloat haloIntensity     = 2.824;\n\nfloat skyline           = 0.236;\nfloat horizonWidth      = 0.026;\n\nvec2 effectResolution = vec2(20., 10.);\nfloat exposure  = 0.824;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    \n\t\n    \n    float waterSkyFactor    = smoothstep(skyline - horizonWidth, skyline + horizonWidth, st.y);\n    vec3 overlayColor       = mix(waterBase, vec3(1), waterSkyFactor);\n    st.y                    = mix(1.0 - st.y / skyline, (st.y - skyline) / (1.0 - skyline), waterSkyFactor);\n                            \n    \n    float time              = iTime * 0.05;\n    float waveOffset        = pow(1. - st.y, 5.);\n    float waveScale         = 100.;\n    float wave              = sin((time + waveOffset) * waveScale) * st.y;\n\n    st.x                    += (1.0 - waterSkyFactor) * (wave * 0.05);\n\n        \n    /// Sky base colour is gradient up and down from skyline. Overlaycolor will darken the water (lower) part.\n    vec3 skyColor           = mix(skyBase, pow(skyBase, vec3(3.0)), st.y) * overlayColor;\n    vec3 horizonColor       = vec3(1.0 - abs(waterSkyFactor * 2.0 - 1.0)) * 0.5;\n    \n    /// SUN COLOR ----------------------------\n    float discDistance      = distance(discPosition, st);\n    float discGradient      = 1.0 - smoothstep(discSize - discFeather, discSize + discFeather, discDistance);\n\n    float shapeGradient     = 1.0 - smoothstep(haloSize - haloFeather, haloSize + haloFeather, distance(haloPosition, st));\n\n    float colorGradient     = smoothstep(0.0, 1.0, (st.y - haloPosition.y + haloSize) / (haloSize * 2.0));\n    vec3 haloColor          = mix(haloBaseColor, haloTopColor, colorGradient);\n\n    vec2 haloFalloffPoint   = haloPosition - normalize(haloPosition - discPosition) * haloSize;\n    float haloFalloff       = pow(1.0 - clamp(distance(st, haloFalloffPoint) / (haloSize * 2.0), 0.0, 1.0), 2.312);\n\n    vec3 sunColor           = sunDiscColor * discGradient * discIntensity\n                            + haloColor * shapeGradient * haloFalloff * haloIntensity;\n    /// --------------------------------------\n    \n    vec3 color  = vec3(0.0);\n    color       += skyColor;    \n    color       += sunColor;\n    color       += horizonColor;\n\n    color           = vec3(1.0) - exp(-color * exposure);\n\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}