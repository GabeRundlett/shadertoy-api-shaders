{
    "Shader": {
        "info": {
            "date": "1597964706",
            "description": "i specifically made it easily editable\nmouse to control dither threshold",
            "flags": 0,
            "hasliked": 0,
            "id": "wtlBWf",
            "likes": 1,
            "name": "color palette forcer",
            "published": 3,
            "tags": [
                "post",
                "color",
                "palette"
            ],
            "usePreview": 0,
            "username": "thefox231",
            "viewed": 386
        },
        "renderpass": [
            {
                "code": "#define ditherThreshold iMouse.x / iResolution.x\n\n// https://coolors.co/\nconst int colorsSize = 7;\nvec3 colors[colorsSize] = vec3[](\n    // trans\n    vec3(91, 206, 250),\n    vec3(245, 169, 184),\n    vec3(255, 255, 255),\n    // enby\n    vec3(240, 183, 25),\n    vec3(252, 236, 217),\n    vec3(181, 84, 192),\n    vec3(56, 41, 36)\n);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    for (int i = 0; i < colorsSize; i++) {\n        colors[i] = colors[i] / 255.;\n        //colors[i] = colors[i] * (sin(iTime + float(i)) * 0.5 + 1.0);\n    }\n    \n    vec2 uv = fragCoord/iResolution.xy;\n\tvec3 col = texture(iChannel0, uv).rgb;\n    \n    // comparasion\n    float mDist[colorsSize];\n    float minDist = 9999.9;\n    int mIndex = 0;\n    int mOldIndex;\n    \n    for (int i = 0; i < colorsSize; i++) {\n        vec3 compareCol = colors[i];\n        \n        vec3 distVec = abs(col - compareCol);\n        float dist = (distVec.r + distVec.g + distVec.b) / 3.0;\n        \n        mDist[i] = dist;\n        if (dist < minDist) {\n            mOldIndex = mIndex; // terrible\n            mIndex = i;\n            minDist = dist;\n        }\n    }\n    \n    // dithering (worst possible way to do it)\n    \n    vec3 col1 = colors[mIndex];\n    vec3 col2 = colors[mOldIndex];\n    float dist1 = mDist[mIndex];\n    float dist2 = mDist[mOldIndex];\n    \n    col = col1;\n    if ((dist2 - dist1) <= ditherThreshold && mod(fragCoord.x + fragCoord.y, 2.) == 0.) col = col2;\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}