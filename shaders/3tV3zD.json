{
    "Shader": {
        "info": {
            "date": "1578426230",
            "description": "re-golfing [url]https://shadertoy.com/view/4lyBDW[/url] ( 324 chars )\nRely on hardware derivative + MIPmap : quite approximative. probably too much.\n\nNB: h,v should be doubled, but unsteady. Or double just its use for O.zw -= ?",
            "flags": 32,
            "hasliked": 0,
            "id": "3tV3zD",
            "likes": 12,
            "name": "Shortest Fluid Demo (231 ch)",
            "published": 3,
            "tags": [
                "fluid",
                "demo",
                "2tweets",
                "golf",
                "shortest"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 505
        },
        "renderpass": [
            {
                "code": "// re-golfing https://shadertoy.com/view/4lyBDW ( 324 chars )\n// variant of https://shadertoy.com/view/ttyGWD\nvoid mainImage(out vec4 O, vec2 U) { mi }\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// variant of https://shadertoy.com/view/ttyGWD\nvoid mainImage(out vec4 O, vec2 U) { mi }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// + 3 for alternate init (fix strange compatibility issue)\n\n// Storage: x:pressure,  y: density,  zw: speed*dt\n// -> eqns read:  advec all ;  p += -lapl(p) -div(V)\n//                V -= grad(p) or 0 outside ; source: dens=1,Vx=1\n\n#define T texture(iChannel0,                        //\n#define mi                                           \\\n    vec2 R = iResolution.xy,                         \\\n         d = length( U+U - R ) / R;                  \\\n    vec4 D = -T U/R), h = dFdx(D), v = dFdy(D);      \\\n     /* see older version for better derivatives */  \\\n /* O = iFrame < 1 ? O-O : T(D.zw,);    old init */  \\\n    O = T (D.zw+U)/R);               /* alt init */  \\\n    O.x = T U/R,1.).x - (h.z+v.w)/20.;               \\\n    O.zw -= d.y > 1. ? O.zw : vec2(h.x,v);           \\\n    d.y < .02 ? O.zy = R/R : R;                      \\\n    iFrame < 1 ? O-=O : O;           /* alt init */ /*\n        \n     \n\n\n\n// --- 243 chars + 3 for alternate init\n        \n#define T(a,l) texture(iChannel0, (a+U)/R, l+0.)    //\n#define mainImage( O, u )                            \\\n    vec2 U = u,                                      \\\n         R = iResolution.xy,                         \\\n         d = length( U+U - R ) / R;                  \\\n    vec4 D = -T(,), h = dFdx(D), v = dFdy(D);        \\\n      /* h = T(-O.wz,)-T(O.wz,), v = T(-O.zw,)-T(O.zw,); better derivatives */ \\\n /* O = iFrame < 1 ? O-O : T(D.zw,);    old init * /  \\\n    O = T(D.zw,);                    /* alt init * /  \\\n    O.x = T(,1.).x - (h.z+v.w)/20.;                  \\\n    O.zw -= d.y > 1. ? O.zw : vec2(h.x,v);           \\\n    d.y < .02 ? O.zy = R/R : R;                      \\\n    iFrame < 1 ? O-=O : O            /* alt init * /\n        \n/**/",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}