{
    "Shader": {
        "info": {
            "date": "1469277778",
            "description": "Minimalist image of a radial dotted field. The lowest frequency playing on iChannel1 (Buf A)  generates the ripples.",
            "flags": 32,
            "hasliked": 0,
            "id": "4ttGW4",
            "likes": 54,
            "name": "Reactive Radial Ripples",
            "published": 3,
            "tags": [
                "2d",
                "ripples",
                "reactive",
                "minimalist"
            ],
            "usePreview": 0,
            "username": "glk7",
            "viewed": 2638
        },
        "renderpass": [
            {
                "code": "// Created by genis sole 2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International.\n\nfloat hash(in vec2 p) {\n    float r = dot(p,vec2(12.1,31.7)) + dot(p,vec2(299.5,78.3));\n\n\treturn fract(sin(r)*4358.545);\n}\n\n//From https://iquilezles.org/articles/palettes\nvec3 pal(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvec3 color(vec2 p) {\n    return pal(0.55+hash(p)*0.2, \n               vec3(0.5), vec3(0.5), vec3(1.0), \n               vec3(0.0, 0.1, 0.2)) * 1.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n  \n   \tvec2 v = iResolution.xy;\n\tv = (fragCoord.xy  - v*0.5) / max(v.x, v.y) + vec2(0.2, 0.0);\n    vec2 a = vec2(length(v), atan(v.y, v.x));\n   \n\tconst float pi = 3.1416;\n    const float k = 14.0;\n    const float w = 4.0;\n    const float t = 1.0;\n    \n    float i = floor(a.x*k);\n    float b = texture(iChannel1, \n                        vec2(0.0, \n                             mod(float(iFrame)-i*4.0, iChannelResolution[1].y)) /\n                        \t\t\t\t\t\t\t  iChannelResolution[1].y).r;\n    a = vec2((i + 0.3 + b*0.35)*(1.0/k), \n             (floor(a.y*(1.0/pi)*(i*w+t)) + 0.5 ) * pi/(i*w+t));\n   \n    vec3 c = color(vec2(i,a.y));\n    \n    a = vec2(cos(a.y), sin(a.y)) * a.x;\n\t\n    c *= smoothstep(0.002, 0.0, length(v-a) - 0.02);\n    c *= step(0.07, length(v));\n    c += vec3(1.0, 1.0, 0.6) * smoothstep(0.002, 0.0, length(v) - 0.03 - b*0.03);\n    \n    fragColor = vec4(pow(c, vec3(0.5454)), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Created by genis sole 2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International.\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    if (fragCoord.y == mod(float(iFrame) + 0.5, iResolution.y)) {\n        fragColor = texture(iChannel1, vec2(0.0));\n        \n    \treturn;\n    }\n    \n\tfragColor = texture(iChannel2, fragCoord / iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "music",
                        "id": 35,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}