{
    "Shader": {
        "info": {
            "date": "1583678283",
            "description": "Experimenting futuristic UI design ",
            "flags": 0,
            "hasliked": 0,
            "id": "WtGSD3",
            "likes": 31,
            "name": "featuristic UI test2",
            "published": 3,
            "tags": [
                "ui"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 843
        },
        "renderpass": [
            {
                "code": "#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define  uicol vec3(0.2,0.75,0.7)*1.3\n#define hash(h) fract(sin(h) * 43758.5453123)\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdTriangleIsosceles( in vec2 p, in vec2 q )\n{\n    p.x = abs(p.x);\n    vec2 a = p - q*clamp( dot(p,q)/dot(q,q), 0.0, 1.0 );\n    vec2 b = p - q*vec2( clamp( p.x/q.x, 0.0, 1.0 ), 1.0 );\n    float s = -sign( q.y );\n    vec2 d = min( vec2( dot(a,a), s*(p.x*q.y-p.y*q.x) ),\n                  vec2( dot(b,b), s*(p.y-q.y)  ));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nfloat sdPie( in vec2 p, in vec2 c, in float r )\n{\n    p.x = abs(p.x);\n    float l = length(p) - r;\n    float m = length(p-c*clamp(dot(p,c),0.0,r)); // c = sin/cos of the aperture\n    return max(l,m*sign(c.y*p.x-c.x*p.y));\n}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n// http://mercury.sexy/hg_sdf/\nvec2 pModPolar(inout vec2 p, float repetitions, float fix) {\n    float angle = 2.0*3.14159265/repetitions;\n    float a = atan(p.y, p.x) + angle/2.;\n    float r = length(p);\n    float c = floor(a/angle);\n    a = mod(a,angle) - angle/2.*fix;\n    p = vec2(-cos(a), sin(a))*r;\n\n    return p;\n}\n\nvec3 UI(vec2 uv, vec3 col, float t) {\n    vec2 uiuvref = uv;\n\n    uv = mod(uv,0.2)-0.1;\n    float d = sdBox(uv,vec2(0.0005,0.01));\n    float d2 = sdBox(uv,vec2(0.01,0.0005));\n    d = min(d,d2);\n    col = mix(col,uicol*0.4,S(d,0.0)); \n    \n    // center UI\n    mat2 r = Rot(radians(t*10.0));\n\n    uv = uiuvref;\n    uv*= 0.4;\n    uv*=Rot(radians(t*10.0)+radians(-3.0));\n    uv.yx = pModPolar(uv.yx,60.0,1.8);\n    d = sdBox(uv,vec2(0.0002,0.17));\n    uv = uiuvref;\n\n    uv*= 0.4;\n    uv*=r;\n    uv.yx = pModPolar(uv.yx,60.0,1.8);\n    d2 = sdBox(uv,vec2(0.0002,0.16));\n\n    d = min(d,d2);\n    d = max(-(length(uv)-0.15),d);\n    col = mix(col,(uicol),S(d,-0.001));\n    \n    uv = uiuvref;\n    d = abs(length(uv)-0.36)-0.001;\n    col = mix(col,(uicol),S(d,-0.001));\n\n    d = abs(length(uv)-0.08)-0.01;\n    d2 = sdPie(uv*Rot(radians(-t*50.0)),vec2(0.2,0.21),0.12);\n    d = max(d2,d);\n    col = mix(col,uicol,S(d,-0.001));\n\n    uv*=Rot(radians(t*50.0));\n    d = abs(length(uv)-0.345)-0.002;\n    d2 = sdBox(uv,vec2(0.05,0.7));\n    d = max(d2,d);\n    col = mix(col,uicol,S(d,-0.001));\n    \n    uv = uiuvref;\n    uv*=Rot(radians(-sin(t*1.5)*270.0));\n    d = abs(length(uv)-0.32)-0.002;\n    d2 = sdBox(uv,vec2(0.07,0.7));\n    d = max(d2,d);\n    col = mix(col,uicol,S(d,-0.001));\n    \n    uv = uiuvref;\n    uv*=Rot(radians(-sin(t*1.2)*180.0));\n    d = abs(length(uv)-0.05)-0.002;\n    d2 = sdBox(uv,vec2(0.04,0.8));\n    d = max(-d2,d);\n    col = mix(col,uicol,S(d,-0.001));    \n    \n    uv = uiuvref;\n    uv*= 0.55;\n    uv*=Rot(radians(-t*15.0));\n    uv.yx = pModPolar(uv.yx,70.0,1.8);\n    d = sdBox(uv,vec2(0.0005,0.17));\n    d = max(-(length(uv)-0.15),d);\n    col = mix(col,uicol,S(d,-0.001));\n    \n    \n    uv = uiuvref;\n    uv*= 0.85;\n    uv*=Rot(radians(t*20.0));\n    uv.yx = pModPolar(uv.yx,40.0,1.8);\n    d = sdBox(uv,vec2(0.0005,0.17));\n    d = max(-(length(uv)-0.15),d);\n    col = mix(col,uicol,S(d,-0.001));    \n    \n    uv = uiuvref;\n    d = length(uv)-0.03+sin(t*2.0)*0.005;\n    col = mix(col,uicol,S(d,-0.001)); \n    \n    uv = uiuvref;\n    uv*=1.0+sin(t*5.0)*0.05;\n    uv*=Rot(radians(t*50.0));\n    d =abs(sdBox(uv,vec2(0.11)))-0.001;\n    d2 = sdBox(uv,vec2(0.07,0.21));\n    d = max(-d2,d);\n    d2 = sdBox(uv,vec2(0.21,0.07));\n    d = max(-d2,d);\n    col = mix(col,uicol,S(d,-0.001)); \n    \n    uv = uiuvref;\n\tfloat numBar = 20.0;\n    float deg = 360.0/numBar;\n    vec2 pos = vec2(0.0,0.0);\n    for(float i = 0.0; i<numBar; i+=1.0) {\n\t\tfloat rotVal = radians(i*deg+t*10.0)+radians(2.5);\n        float rotVal2 = radians(i*deg+t*10.0)+radians(10.0);\n        \n    \tmat2 m = Rot(rotVal);\n        mat2 m2 = Rot(rotVal);\n        float animateVal = sin(hash(i)*(i*deg)*t*0.1)*0.01;\n        float animateVal2 = sin(hash(i)*(i*deg)*t*0.07)*0.02;\n        float bdist = 0.45;\n        float bdist2 = 0.46;\n        float x = pos.x+cos(rotVal)*(bdist+animateVal);\n        float y = pos.y+sin(rotVal)*(bdist+animateVal);\n        float bar = sdBox((uv+vec2(y, x))*m, vec2(0.001,0.03+animateVal));\n        x = pos.x+cos(rotVal2)*(bdist2+animateVal2);\n        y = pos.y+sin(rotVal2)*(bdist2+animateVal2);\n        float b = length(uv+vec2(y, x))-0.01;\n        b =  min(b,bar);\n    \tcol = mix( col, uicol, S(b,0.0) );\n    }\n    \n    uv = uiuvref;\n    deg = 360.0/20.0;\n    for(float i = 0.0; i<numBar; i+=1.0) {\n\t\tfloat rotVal = radians(i*deg-t*30.0)+radians(45.0);\n    \tmat2 m = Rot(rotVal);\n        float bdist = 0.25;\n        float x = pos.x+cos(rotVal)*bdist;\n        float y = pos.y+sin(rotVal)*bdist;\n        float b = sdTriangleIsosceles((uv+vec2(y, x))*m, vec2(0.015,0.02));\n    \tcol = mix( col, uicol, S(b,0.0) );\n    }\n    \n    float dist = 0.33;\n    uv = uiuvref;\n    uv*= Rot(radians(-sin(t*1.1)*150.0));\n    uv.x -= dist;\n    uv.y -= dist;\n    \n    d = sdTriangleIsosceles(uv*Rot(radians(-140.0)),vec2(0.015,0.02));\n    col = mix(col,uicol,S(d,-0.001)); \n    \n    uv = uiuvref;\n    uv*= Rot(radians(-sin(t*1.3)*160.0)+radians(45.0));\n    uv.x -= dist;\n    uv.y -= dist;\n    \n    d = sdTriangleIsosceles(uv*Rot(radians(-140.0)),vec2(0.015,0.02));\n    col = mix(col,uicol,S(d,-0.001)); \n        \n    uv = uiuvref;\n    uv*= Rot(radians(sin(t*1.4)*180.0)+radians(90.0));\n    uv.x -= dist;\n    uv.y -= dist;\n    \n    d = sdTriangleIsosceles(uv*Rot(radians(-140.0)),vec2(0.015,0.02));\n    col = mix(col,uicol,S(d,-0.001)); \n            \n    uv = uiuvref;\n    uv*= Rot(radians(sin(-t*1.6)*270.0)+radians(120.0));\n    uv.x -= dist;\n    uv.y -= dist;\n    \n    d = sdTriangleIsosceles(uv*Rot(radians(-140.0)),vec2(0.015,0.02));\n    col = mix(col,uicol,S(d,-0.001)); \n    \n    // graph\n    uv = uiuvref;\n    uv.x = abs(uv.x);\n    uv.x -= 0.67;\n    uv.y += 0.3;\n    \n    uv.y = mod(uv.y,0.042)-0.021;\n    d = sdBox(uv,vec2(0.1,0.01));\n    \n    uv = uiuvref;\n    uv.x = abs(uv.x);\n    uv.x -= 0.67;\n    uv.y += 0.3;\n    d = max(uv.y-0.5,d);\n    d = max(-(uv.y-0.09),d);\n    col = mix(col,uicol*0.5,S(d,-0.001)); \n    \n    uv = uiuvref;\n    uv.x = abs(uv.x);\n    uv.x -= 0.67;\n    uv.y -= 0.12;\n    \n    for(float i = 1.0; i<=10.0; i+=1.0) {\n        float x = 0.0;\n        float y = i*0.042-0.105;\n        float w = abs(sin(hash(i)*t*3.0)*0.1);\n        d = sdBox(uv+vec2(-0.1+w,y),vec2(w,0.01));\n        col = mix(col,uicol,S(d,-0.001)); \n    }\n    \n    dist = 0.205;\n    uv = uiuvref;\n    uv*= Rot(radians(t*30.0)+radians(170.0));\n    uv.x -= dist;\n    uv.y -= dist;\n    \n    d = abs(length(uv)-0.015)-0.001;\n    col = mix(col,uicol,S(d,-0.001)); \n    \n    uv = uiuvref;\n    uv = abs(uv);\n    uv.x -=1.2;\n    uv.y -=0.7;\n    \n    d = sdSegment(uv,vec2(-0.43,-0.3),vec2(-0.65,-0.3))-0.001;\n    d2 = sdSegment(uv,vec2(-0.65,-0.3),vec2(-0.77,-0.4))-0.001;\n    d = min(d,d2);\n    col = mix(col,uicol,S(d,-0.001)); \n    \n    uv = uiuvref;\n    uv = abs(uv);\n    uv.x -=1.39;\n    uv.y -=0.73;\n    \n    d = sdBox(uv+vec2(0.74,0.36),vec2(0.010+sin(t*5.0)*0.003+0.007));\n    d2 = sdBox(uv+vec2(0.69,0.36),vec2(0.010+sin(t*6.0)*0.003+0.007));\n    d = min(d,d2);\n    float d3 = sdBox(uv+vec2(0.64,0.36),vec2(0.010+sin(t*7.0)*0.003+0.007));\n    d = min(d,d3);\n    col = mix(col,uicol,S(d,-0.001)); \n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 uiuvref = uv;\n   \n    vec3 col = .94*max(mix(vec3(0.0,0.2,0.3)+(.1-length(uv)/3.),vec3(1),.1),0.);\n    \n    float t = mod(iTime,8000.0);\n    \n    // UI\n    float uvy = sin((t+2.0)*0.6)*1.2;\n\tif (uv.y+uvy > 0.5 && uv.y+uvy < 0.52) {\n        uv.x += sin(uv.y*2.0)*0.1;\n    }\n    col = UI(uv,col,t);\n    \n    float dt = dot(uv, vec2(12.9898, 78.233));\n    float noise = fract(sin(dt) * 43758.5453 + t);\n    vec3 grain = vec3(noise) * (1.0 - col);\n    col+=grain*0.15;    \n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}