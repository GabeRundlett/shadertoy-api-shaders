{
    "Shader": {
        "info": {
            "date": "1614425950",
            "description": "shader challenge ",
            "flags": 0,
            "hasliked": 0,
            "id": "wtGfWw",
            "likes": 9,
            "name": "shader challenge 20210227",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "butadiene",
            "viewed": 324
        },
        "renderpass": [
            {
                "code": "#define time mod(iTime,1000.)\nfloat PI = 3.1415926535;\n#define bpm 120.\nvec2 pmod(vec2 p,float n){\n  float np = 2.0*PI/n;\n  float r = atan(p.x,p.y)-0.5*np;\n  r = mod(r,np)-0.5*np;\n  return length(p.xy)*vec2(cos(r),sin(r));\n  \n  }\n\nfloat func(float x, float y, float z) {\n    z = fract(z), x /= pow(2.,z), x += z*y;\n    float v = 0.;\n    for(int i=0;i<6;i++) {\n        v += asin(sin(x)) * (1.-cos((float(i)+z)*1.0472));\n        v /= 2., x /= 2., x += y;\n    }\n    return v * pow(2.,z);\n}\n\n\nmat2 rot (float r){\n  \n  return mat2(cos(r),sin(r),-sin(r),cos(r));\n  }\n\n vec3 outco(vec2 p){\n  vec3 col = vec3(0);\n   vec2 ssp = p;\n  float iter = 6.;\n  float sit = 1.+floor(mod(time*bpm/60.,iter));\n  for(int i = 0;i<6;i++){\n    if(sit>float(i)){\n       p *= rot(PI*float(i)/iter);\n       p = pmod(p,3.);\n    \n      col += vec3(func(p.x,time*3.,-0.1*time));\n      p = ssp;\n     }\n   \n  }\n  col /= sit;\n  col *= (12.+sit)/12.;\n  return col;\n  }\n  \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p =uv- 0.5;\n\tp /= vec2(iResolution.y / iResolution.x, 1);\n    vec2 sp = p;\n    vec3 col = vec3(0);\n  \n    p *= 100.;\n\n    p = sp;\n    p += 0.1*func(uv.x*100.,uv.y*100.,time)*pow(abs(sin(8.*time*bpm/60.)),16.);\n    float  scale = 800.;\n    p *= scale;\n    vec2 ep = 0.5*scale*vec2(0.01,0.01)*(uv-0.5);\n    col.b += outco(p).r;\n    p += ep;\n    col.g += outco(p).r;\n    p -=2.*ep; \n    col.r += outco(p).r;\n\n  \n  col *= 0.2+pow(abs(sin(4.*time*108./60.)),2.);\n  col = 1.5*pow(col,vec3(1.4,1.4,1.2));\n    fragColor = vec4(col,0.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}