{
    "Shader": {
        "info": {
            "date": "1595195826",
            "description": "My semifinal Shader Showdown result @ Solskogen 2020 demoparty.\n25 minutes round.\n(I ultimately got defeated by the great evvvvil)",
            "flags": 0,
            "hasliked": 0,
            "id": "3lBcWy",
            "likes": 11,
            "name": " Solskogen 2020 Semifinal",
            "published": 3,
            "tags": [
                "raymarching",
                "distancefield",
                "demoscene",
                "liveshading"
            ],
            "usePreview": 0,
            "username": "Alkama",
            "viewed": 471
        },
        "renderpass": [
            {
                "code": "float pi=acos(-1.),t,d;\nmat2 rot(float a) { float c=cos(a),s=sin(a); return mat2(c,s,-s,c); }\nfloat cube(vec3 p, vec3 s) { vec3 b=abs(p)-s; return max(max(b.x,b.y),b.z); }\nfloat scene(vec3 p) {\n  vec3 pp=p;\n  float s=1.;\n  float a=1.5;\n  for(int i=0; i<5; i++) {\n    p = 2.*clamp(p,-a,a)-p;\n    float r=max(1., .4/dot(p,p));\n    p*=r;\n    s*=r;\n  }\n  p.xz*=rot(t*10.);\n  return cube(p, vec3(.2, 2., .2))/s;\n}\nvec3 norm(vec3 p) { vec2 e=vec2(.0001,0); return normalize(scene(p)-vec3(scene(p-e.xyy),scene(p-e.yxy),scene(p-e.yyx))); }\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy-.5)*vec2(iResolution.x / iResolution.y, 1);\n    t=mod(.1*iTime,10.*pi);\n    vec2 uv2=uv;\n    uv/=1.5-length(uv);\n    vec3 o,tg,f,s,u,dir,col;\n    o.y+=.02+.02*sin(t);\n    o+=.04*vec3(sin(t),sin(t),cos(t));\n    tg.y=-.02*sin(t);\n    f=normalize(tg-o);\n    s=normalize(cross(vec3(.5*sin(t*5.),1,0),f));\n    u=normalize(cross(f,s));\n    dir=normalize(f*.8+uv.x*s+uv.y*u);\n    vec3 lp=vec3(.1);\n    lp.xz+=vec2(sin(t*10.),cos(t*10.));\n    vec3 p=o;\n    float side=sign(scene(p));\n    for(int i=0;i<200;i++) {\n        float h=scene(p)*side*.5;\n        if(h<.0001*d) {\n            vec3 n=norm(p)*side;\n            vec3 ld=normalize(lp-p);\n            float df=max(0.,dot(n,ld));\n            float sp=pow(max(0.,dot(dir,reflect(ld,n))), 5.);\n            float fr=pow(abs(1.-dot(n,-dir)), .5);\n            vec3 fromage=acos(normalize(dir-p));\n            col+=.5*vec3(.1*df+fromage*sp*fr);\n            p-=n*.005;\n            side*=-1.;\n        }\n        if(d>.2) break;\n        d+=h;\n        p+=dir*h;\n    }\n    col= mix(col,.09*vec3(.9,.9,1.),5.-exp(-d));\n    col*=pow(1.5-length(uv2),3.);\n    fragColor = vec4(pow(col,vec3(1./1.7)),1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}