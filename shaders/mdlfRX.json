{
    "Shader": {
        "info": {
            "date": "1689021034",
            "description": "recursive function application, blending",
            "flags": 0,
            "hasliked": 0,
            "id": "mdlfRX",
            "likes": 0,
            "name": "weird fluid?",
            "published": 3,
            "tags": [
                "weirdcolors"
            ],
            "usePreview": 0,
            "username": "Elyades",
            "viewed": 156
        },
        "renderpass": [
            {
                "code": "vec3 palette1( float t ) {\n    //by Inigo Quilez\n    vec3 a = vec3(0.5,0.5,0.5);\n    vec3 b = vec3(0.5,0.5,0.5);\n    vec3 c = vec3(0.5,0.5,0.5);\n    vec3 d = vec3(0.1,0.1,0.2);\n\n    return vec3(a + b*cos(6.28318530718*(c*(t) + d)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy - 0.5)*2.0;\n    \n    vec2 dummyuv = uv;\n    float weight = 1.0 - sin(iTime/3.0);\n    int currentIndex = int(iTime/3.0);\n    \n    \n    \n    for (int i = 0; i < currentIndex; i++){uv.x += cos(uv.y*4.0 + uv.x*5.0); uv.y += sin(uv.y*4.0- uv.x/5.0);}\n    dummyuv = uv; dummyuv.x += cos(dummyuv.y*4.0 + dummyuv.x*5.0); dummyuv.y += sin(dummyuv.y*4.0- dummyuv.x/5.0);\n    vec3 color = vec3(0.0);\n    \n    uv = weight*uv + (1.0-weight)*dummyuv;\n    \n    float d = length(uv - vec2(uv.y,uv.x));\n    color += smoothstep(0.03,0.02,d);\n    color.rg = exp(uv);\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}