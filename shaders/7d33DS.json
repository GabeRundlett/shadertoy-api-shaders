{
    "Shader": {
        "info": {
            "date": "1630569934",
            "description": "Some sort of a dynamic dithering effect that's basically a cellular automaton when you think about it.",
            "flags": 32,
            "hasliked": 0,
            "id": "7d33DS",
            "likes": 2,
            "name": "cellular dithering",
            "published": 3,
            "tags": [
                "automata",
                "cell",
                "dithering"
            ],
            "usePreview": 0,
            "username": "pali6",
            "viewed": 319
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R 2\n#define UPDATE_PROB 0.1\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(iFrame == 0)\n    {\n        fragColor = vec4(0);\n        return;\n    }\n    vec2 uv = fragCoord/iResolution.xy;\n    if(rand(uv + vec2(iTime)) > UPDATE_PROB)\n    {\n        fragColor = texture(iChannel0, uv);\n        return;\n    }\n    float avgL = 0.;\n    float avgBL = 0.;\n    float count = 0.;\n    for(int dx = -R; dx <= R; dx++)\n    {\n        for(int dy = -R; dy <= R; dy++)\n        {\n            vec4 pix = texture(iChannel1, uv + vec2(dx, dy) / iResolution.xy);\n            vec4 pixB = texture(iChannel0, uv + vec2(dx, dy) / iResolution.xy);\n            float mul = 1. / (1. + length(vec2(dx, dy)));\n            count += mul;\n            avgL += (pix.r + pix.g + pix.b) / 3. * mul;\n            avgBL += (pixB.r + pixB.g + pixB.b) / 3. * mul;\n        }\n    }\n    avgL /= count;\n    avgBL /= count;\n    fragColor = abs(avgBL - avgL) < 0.05 ? texture(iChannel0, uv) : avgBL > avgL ? vec4(0,0,0,1) : vec4(1,1,1,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}