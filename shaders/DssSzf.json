{
    "Shader": {
        "info": {
            "date": "1669323619",
            "description": "sun in the sky ",
            "flags": 0,
            "hasliked": 0,
            "id": "DssSzf",
            "likes": 4,
            "name": "Sun in the sky",
            "published": 3,
            "tags": [
                "sun",
                "sky"
            ],
            "usePreview": 0,
            "username": "Issam_X_Mhadhbi",
            "viewed": 171
        },
        "renderpass": [
            {
                "code": "float sunR = 0.05 ; \nvec3 sunColor = vec3(1.0,1.0,0.8) ; \nvec2 sunpos = vec2(0.5, 0.5  ) ; \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    sunpos  = sunpos*vec2(iResolution.x/iResolution.y,1.0) ; \n    vec2 p = fragCoord.xy / iResolution.xy;\n\tvec2 uv = p *vec2(iResolution.x/iResolution.y,1.0); \n    vec3 colorup = vec3(9,108,167) ; \n    vec3 colordown = vec3(250,242,239) ; \n    colordown = normalize(colordown) ;\n    colorup = normalize(colorup) ; \n    vec3 mixed = mix(colordown,colorup,p.y) ; \n    fragColor = vec4(mixed,1.0); \n    float distance_cubic = (uv.x - sunpos.x)*(uv.x - sunpos.x) + (uv.y - sunpos.y)*(uv.y - sunpos.y) ; \n    if (distance_cubic < sunR*sunR ){\n\n    \tfragColor = vec4(sunColor,1.0) ; \n    }\n    else{\n\n    \tfragColor = vec4(mix(mixed , sunColor, (sunR*sunR)/distance_cubic),1) ; \n    }\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}