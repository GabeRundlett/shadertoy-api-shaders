{
    "Shader": {
        "info": {
            "date": "1534832122",
            "description": "Random wip mistake",
            "flags": 0,
            "hasliked": 0,
            "id": "MtyyRz",
            "likes": 6,
            "name": "Trig Flowers",
            "published": 3,
            "tags": [
                "blend"
            ],
            "usePreview": 0,
            "username": "momoro",
            "viewed": 552
        },
        "renderpass": [
            {
                "code": "\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvec4 blend(vec4 bg, vec4 fg) {\n    vec4 c = vec4(0.);\n    c.a = 1.0 - (1.0 - fg.a) * (1.0 - bg.a);\n    if(c.a < .00000) return c;\n    \n    c.r = fg.r * fg.a / c.a + bg.r * bg.a * (1.0 - fg.a) / c.a;\n    c.g = fg.g * fg.a / c.a + bg.g * bg.a * (1.0 - fg.a) / c.a;\n    c.b = fg.b * fg.a / c.a + bg.b * bg.a * (1.0 - fg.a) / c.a;\n    \n    return c;\n} \n\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 st = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n\tvec2 ost = st;\n    \n    \n    st += vec2(-0.550,0.720) * 1.152;\n    st *= -0.484;\n\n    st *= length(st * 1.168);\n  //  st.x *= atan(st.x, st.y) * -0.264 + cos(st.x * 10.);\n    st += sin(iTime/5.) / 50.;\n\n\tvec4 color = vec4(1.);\n\n    float f = distance(vec2(0.), st.xy);\n    float d = f;\n    \n    \n    float a = atan(st.x, st.y)*3. + tan((d*.1+iTime/5.)) * .1;\n    f = sin(a) + f;\n    f = sin(a*2.) * cos(a*1.);\n    \n    st *= f;\n    \n    for(float i=0.; i<60.; i++) {\n        vec2 uv = st;\n        uv *= i/7.768 + 1.;\n  \n        uv += vec2(0.020,-0.020) * i;\n\t\t\n        float f = length(uv);\n        f = 1.0 - smoothstep(0.0, fwidth(f *1000.5), f - -.003);\n        \n        float m = mod(i, 2.);\n       \n        vec4 c;\n        \n        if(m == 0.) {\n    \t\tvec3 orange = vec3(0.945,0.502,0.281);\n            float a = 1.280;\n\t    \tc = vec4(orange, a * f);\n\n        } else if(m == 1.) {\n            vec3 green = vec3(0.351,0.865,0.205);\n            float a = 1.184;;\n\t    \tc = vec4(green, a * f);\n        } \n        \n        color = blend(color, c);\n    }\n    \n     for(float i=0.; i<5.; i++) {\n        vec2 uv = st;\n        uv *= i/7.768 + 1.;\n        uv *= 1.108;\n  \n         uv += vec2(-0.010,0.060);\n        uv += vec2(0.020,0.030) * i;\n\t\t\n        float f = length(uv);\n        f = 1.0 - smoothstep(0.0, fwidth(f * 1.5), f - 0.124);\n        \n        float m = mod(i, 2.);\n       \n        vec4 c;\n        \n    \tvec3 blue = vec3(0.910,0.310,0.533);\n        float a = i / 6. * 0.924;\n\t    c = vec4(blue, a * f);\n        \n        color = blend(color, c);\n    }\n    \n\n    color.rgb *= vec3(1.790,1.645,0.433);\n\n\tcolor.rgb = rgb2hsv(color.rgb);\n    color.y = .85 * f;\n    color.y = clamp(color.y, 0., 1.);\n    color.y *= 1.4;\n    color.x += 0.708 + ost.y/8.;\n    color.rgb = hsv2rgb(color.rgb);\n\n\n    \n    fragColor = color;\n} ",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}