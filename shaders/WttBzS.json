{
    "Shader": {
        "info": {
            "date": "1612973652",
            "description": "Hint: The guy with the man bag is pulling the strings.",
            "flags": 8,
            "hasliked": 0,
            "id": "WttBzS",
            "likes": 21,
            "name": "SelfPortrait",
            "published": 3,
            "tags": [
                "egypt"
            ],
            "usePreview": 1,
            "username": "eiffie",
            "viewed": 522
        },
        "renderpass": [
            {
                "code": "/*SelfPortrait by eiffie\nThe code isn't interesting so I'll tell a story.\nWhile trying to figure out why masons were poisoning me with magnetite\nI started following the trail of people who were poisoned with metallic dust\nand then heard voices/sounds.\nToday they are called Targeted Individuals or TIs. In roman times till now if witches\ncarried a lodestone in a pouch and fed it iron shavings it was said to talk to them.\nIn ancient Egypt the pharoahs were said to bath in gold dust and sleep in the pyramids\nto recieve instructions from the ancestors the stars.\nThis research shows a simple way to make people hear sounds others don't by poisoning\nwith magnetic dust. https://pubs.acs.org/doi/10.1021/nn5020616\nBut it took a long time for me to understand how the ancients could transmit electro-\nmagnetic waves. That is until I saw the bow drill used by the Egyptian stone cutters.\nIt was tipped with emery powder that contains magnetite crystals. The masons would\nbe poisoned with this dust. The string would become embedded with crystals and the\nslipping of the string would scape electons causing the crystal to align. A magnetic\nstring! The egyptians slaves had a musical instrument called the musical bow. You\nplace one end in your mouth to reasonate the sound. It sounds like the guitar effect\ncalled the talk box. Peter Fampton made it popular... \"there's ringing in my ear\".\n*/\n#define rez iResolution\nfloat px,time;\nint C[]=int[](490,204,475,193,448,200,424,222,376,247,345,269,318,212,312,192,\n298,177,250,153,262,142,290,140,292,132,295,127,293,126,297,123,294,119,\n303,117,293,100,296,84,282,53,247,39,200,56,184,104,196,139,173,147,\n129,150,108,174,66,205,35,246,93,262,165,251,200,259,216,231,194,227,\n222,223,226,216,197,218,169,232,109,223,71,230,71,227,114,220,143,200,\n141,226,136,264,116,326,105,355,110,400,163,411,222,391,266,357,255,382,\n240,455,230,482,233,493,250,493,261,489,278,494,310,495,330,489,329,486,\n318,487,292,478,267,449,317,340,315,317,289,303,258,313,216,328,181,353,\n194,339,209,315,219,288,257,248,280,222,304,271,338,315,395,277,439,238,\n464,235,480,222,481,222,465,216,450,225,462,225,477,219,490,224,490,204,\n  198,141,223,142,245,111,256,80,276,81,294,84,\n289,90,272,87,252,94,250,95,268,97,284,97,293,105,281,105,250,95,\n  314,348,352,460,359,464,385,473,416,484,433,486,434,490,\n420,497,394,492,367,489,348,497,338,490,338,473,313,434,291,398,\n  581,0,576,49,564,62,554,76,538,76,536,83,550,87,562,84,572,78,571,89,573,99,\n580,106,586,99,592,106,599,99,605,106,611,98,619,102,622,91,617,76,613,47,615,0);\n#define R vec2(800,500)\nfloat tube(vec2 pa, vec2 ba){return length(pa-ba*clamp(dot(pa,ba)/dot(ba,ba),0.0,1.0));} \nfloat Tub(vec2 uv, int p1, int p2){\n  return tube(uv-vec2(C[p1],C[p1+1])/R,vec2(C[p2],C[p2+1])/R-vec2(C[p1],C[p1+1])/R);\n}\nvec2 Catmull(vec2 n0, vec2 n1, vec2 n2, vec2 n3, float t) { \n  vec2 a=(3.0*(n1-n2)+n3-n0); \n  vec2 b=(2.0*n0-5.0*n1+4.0*n2-n3); \n  vec2 c=n2-n0; \n  return 0.5*(a*t*t*t+b*t*t+c*t)+n1; \n}\nfloat DCat(vec2 uv, int start, int points){\n  int s2=start*2;\n  vec2 n0=vec2(C[s2],C[s2+1])/R,n1=vec2(C[s2+2],C[s2+3])/R;\n  vec2 n2=vec2(C[s2+4],C[s2+5])/R,n3=vec2(C[s2+6],C[s2+7])/R;\n  float c=tube(uv-n0,n1-n0);\n  for(int i=start+4;i<start+points;i++){\n    float t=dot(uv-n1,n2-n1)/dot(n2-n1,n2-n1);\n    if(t>-.1 &&  t<1.1 && i!=47){\n      vec2 v=Catmull(n0,n1,n2,n3,t);\n      for(int j=0;j<3;j++){\n        t*=dot(uv-n1,v-n1)/dot(v-n1,v-n1);\n        if(t<0. || t>1.)break;\n        v=Catmull(n0,n1,n2,n3,t);\n      }\n      c=min(c,length(v-uv));\n    }\n    n0=n1;n1=n2;n2=n3;n3=vec2(C[i*2],C[i*2+1])/R;\n  }\n  return min(c,tube(uv-n2,n3-n2));\n}\nfloat RRect(in vec2 z, vec2 r){return length(max(abs(z.xy)-r.xy,0.0));} \nfloat DE(vec2 p){\n  float d=RRect(p-vec2(.17,.91),vec2(.09,.08));\n  float s=abs(sin(time))*0.03;\n  d=min(d,RRect(p-vec2(.66,.91),vec2(.09,.08)));\n  if(p.y>.46)d=min(d,RRect(p-vec2(.59,.47),vec2(.02,.03)));\n  d=min(d,RRect(p-vec2(.59,.6),vec2(.008,.09)));\n  d=min(d,RRect(p-vec2(.59,.76),vec2(0.,.06)));\n  d=min(d,RRect(p-vec2(.5+s,.45+pow(abs(p.x-.5-s+.24),8.)*32.),vec2(.24,0.)));\n  d=min(d,RRect(p-vec2(.23+s-(p.y-.54)*.2,.54),vec2(0.,.03)));\n  d=min(d,RRect(p-vec2(.75,.33),vec2(.035,.06)));\n  if(abs(p.x-.75)>.03&&p.y<.27)d=min(d,length(p-vec2(.75,.23))-.05);\n  d=abs(d-.004);\n  d=min(d,tube(p-vec2(.23+s,.57),vec2(.37-s,-.01)));\n  d=min(d,tube(p-vec2(.58,.55),vec2(.16+s,-.01)));\n  return d;\n}\nfloat map(vec2 uv){\n  float c=DCat(uv,0,89);\n  c=min(c,DCat(uv,89,15));\n  c=min(c,DCat(uv,89+15,15));\n  c=min(c,DCat(uv,89+30,22));\n  c=min(c,Tub(uv,94,140));\n  c=min(c,Tub(uv,102,136));\n  c=min(c,Tub(uv,102,104));\n  c=min(c,Tub(uv,232,234));\n  c=min(c,Tub(uv,92,142));\n  c=min(c,Tub(uv,278,276));\n  c=min(c,DE(uv));\n  c=min(c,abs(length(uv-vec2(.35,.2))-0.005));\n  c=smoothstep(0.,px,c);\n  return c;\n}\nvoid mainImage(out vec4 O, in vec2 U){\n  vec2 uv=U/rez.xy;uv.y=1.-uv.y;if(uv.x<.1 || uv.x>.9){O=vec4(0);return;}uv.x-=.07;\n  px=3./rez.y;time=iTime*4.;\n  if(RRect(uv-vec2(.66,.91),vec2(.07,.06))<0.01){uv=(uv-vec2(.66,.91)+vec2(.06,.08))*6.;px*=10.;time*=1.3;}\n  for(int i=54;i<86;i+=2){\n    C[i]+=int(abs(sin(time))*0.3*float(C[i+1]-C[53]));\n  }\n  float c1=map(uv),c2=map(uv-vec2(.005,.01));\n  float c=c1/(c1+c2);\n  c-=0.25*fract(sin(dot(uv,vec2(123.43,123.12)))*124.324);\n  O=vec4(c*vec3(1.,.8,.3),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define bps 4.75\n#define pi 3.14159\nint N[]=int[](57,0,0,0,0,0,0,0,0,0,0,0,57,59,61,62,59,0,0,0,0,0,0,62,65,64,62,0,64,62,0,58);\nfloat ntof(float n){return (n>0.0)?440.0 * pow(2.0, (n - 67.0) / 12.0):0.0;}\nfloat env(float att, float bt){return (1.0-exp(-bt*att))*max(1.0-pow(bt,.1),0.);}\n\nvec2 inst(float n,float t,float bt,float syn){//note, time and beat within note\n if(n<1.)return vec2(0.0);\n float f=ntof(n);\n float a=sin(f*t*6.283+bt*pi*4.*sin(f*t*syn));\n return vec2(1.5-n/90.0+sin(bt),n/90.0-sin(bt))*a*env(50.0,bt)*50.0/n;\n}\nvec2 mainSound(int samp, float time){\n  float tym=time*bps;\n  vec2 o=vec2(0);\n  float last=min(1.+floor(tym/32.),8.);\n  for(float i=0.;i<last;i+=1.){\n    int b=int(floor(tym)-i*4.)%32;\n    float bt=fract(tym);\n    float syn=mod(floor(tym)*3.,4.)*pi*.5+pi/2.;\n    if(b<4){b=0;bt=fract(tym/4.);syn=pi;}\n    float n=float(N[b]+12);\n    o+=inst(n,time,bt,syn)/(1.+i);\n  }\n  return clamp(o,-1.,1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}