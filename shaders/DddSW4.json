{
    "Shader": {
        "info": {
            "date": "1679822987",
            "description": "Prompt: Can you write a shadertoy raymarching of a cube? Make the cube blue and spin.\n",
            "flags": 0,
            "hasliked": 0,
            "id": "DddSW4",
            "likes": 1,
            "name": "GPT4 raymarched cube",
            "published": 3,
            "tags": [
                "raymarching",
                "cube",
                "gpt4"
            ],
            "usePreview": 0,
            "username": "mystery",
            "viewed": 181
        },
        "renderpass": [
            {
                "code": "// Simple raymarching example of a spinning blue cube on Shadertoy\n\nvec3 rotate(vec3 p, vec3 angles) {\n    vec3 c = cos(angles);\n    vec3 s = sin(angles);\n\n    mat3 rx = mat3(\n        1.0, 0.0, 0.0,\n        0.0, c.x, -s.x,\n        0.0, s.x, c.x\n    );\n\n    mat3 ry = mat3(\n        c.y, 0.0, s.y,\n        0.0, 1.0, 0.0,\n        -s.y, 0.0, c.y\n    );\n\n    mat3 rz = mat3(\n        c.z, -s.z, 0.0,\n        s.z, c.z, 0.0,\n        0.0, 0.0, 1.0\n    );\n\n    return rz * ry * rx * p;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord.xy - iResolution.xy * 0.5) / iResolution.y;\n\n    // Camera and ray setup\n    vec3 camPos = vec3(0.0, 0.0, 5.0);\n    vec3 rayDir = normalize(vec3(uv, -1.0));\n\n    // Rotating the scene\n    float angle = iTime;\n    vec3 angles = vec3(angle, angle, angle);\n\n    // Raymarching\n    float t = 0.0;\n    for (int i = 0; i < 64; ++i) {\n        vec3 p = camPos + t * rayDir;\n        vec3 rotatedP = rotate(p, angles);\n        float d = length(max(abs(rotatedP) - vec3(1.0), 0.0)) - 0.1;\n        if (d < 0.001) break;\n        t += d;\n    }\n\n    // Coloring the cube\n    vec3 color = vec3(0.0, 0.0, 1.0) * (1.0 - t * 0.1);\n    fragColor = vec4(color, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}