{
    "Shader": {
        "info": {
            "date": "1712299831",
            "description": "I hope you had fun at Revision Shadershowdown.\nOne day I'll beat evvvvil, one day !!! :D ",
            "flags": 64,
            "hasliked": 0,
            "id": "XcyGRz",
            "likes": 12,
            "name": "[Revision 2024] Qualif",
            "published": 3,
            "tags": [
                "noise",
                "terrain",
                "fov"
            ],
            "usePreview": 1,
            "username": "totetmatt",
            "viewed": 404
        },
        "renderpass": [
            {
                "code": "\nfloat bpm,frw;\n\nvec3 erot(vec3 p,vec3 ax,float t){\n  return mix(dot(ax,p)*ax,p,cos(t))+cross(ax,p)*sin(t);\n  }\nfloat txt(vec2 p){\n  \n  float t=  floor(bpm)+smoothstep(.1,.9,fract(bpm));\n   p = erot(p.xyy,vec3(0.,0.,1),t*(step(.3,length(p))-.5)).xy;\n  return texture(iChannel0,clamp(p*vec2(1.,-1.),-.5,.5)-.5).x;\n  }\nvec3 path(vec3 p){\n  \n   vec3 o = vec3(0.);\n   o.x +=sin(p.z*.01)*30.;\n    o.x +=tanh(cos(p.z*.053)*4.)*5.;;\n   o.y +=cos(p.z*.033)*20.;;\n    o.y +=tanh(sin(p.z*.043)*4.)*5.;;\n   return o;\n  }\nmat3 orth(vec3 p){\n   vec3 z = normalize(p),x=vec3(z.z,0.,-z.x);\n   return mat3(x,cross(z,x),z);\n  }\nfloat box(vec2 p,vec2 b){p=abs(p)-b;return length(max(vec2(0.),p))+min(0.,max(p.x,p.y));}\nvec3 cy(vec3 p,float pump){\n  \n    vec4 s = vec4(0.);\n    mat3 o = orth(vec3(-1.,2.,-3.));\n    for(float i=0.;i++<5.;){\n         p*=o;\n         p+=sin(p.xyz);\n         s+=vec4(cross(sin(p),cos(p.yzx)),1.);\n         s*=pump;\n         p*=2.;\n      }\n      return s.xyz/s.w;\n  }\nvec3 pcg3d(vec3 p){\n  \n   uvec3 q= floatBitsToUint(p)*123457u+1234567890u;\n    q.x +=q.y*q.z;q.y +=q.x*q.z;q.z +=q.y*q.x;\n  q^=q>>16u;\n  q.x +=q.y*q.z;q.y +=q.x*q.z;q.z +=q.y*q.x;\n  return vec3(q)/float(-1U);\n  }\nvec2 sdf(vec3 p){\n  vec3 c = cy(p,2.);\n    vec3 ph =path(p);\n    vec3 hp=p-ph;\n   vec2 h;\n  h.x = box(hp.xy-c.yz*.4,vec2(1.,2.));\n  h.y = 1.+step(.9,fract(p.y))+length(c);\n  \n  vec3 tp=p-c*.4;\n  vec2 t;\n  t.x = dot(vec3(0.,1.,0),tp)-step(-10.,-p.z)*100.+dot(sin(tp*.45),cos(tp.yzx*.12))/.13;\n  h.x = max(-h.x,t.x*.13);\n  \n  \n  tp=p-ph;\n  \n  tp.z = mod(tp.z,10.)-5.;\n  tp=erot(tp,vec3(0.,1.,0),bpm+floor(p.z/10.));\n  vec2 q =vec2((1.-txt(tp.xy))*.1,abs(tp.z));\n  t.x = max(length(tp.xy)-.5, length(max(vec2(0.),q))+min(0.,max(q.x,q.y)));\n  \n  h=t.x< h.x ? t:h;\n  \n  \n    tp=p-ph;\n \n \n  t.x = max(abs(tp.z-frw)-2., length(tp.xy)-abs(length(c)*.7));\n  t.y = -1.;\n  h=t.x< h.x ? t:h;\n  return h;\n  \n  }\n  \n #define q(s) s*sdf(p+s).x\n  vec3 norm(vec3 p,float ee){vec2 e=vec2(-ee,ee);return normalize(q(e.xyy)+q(e.yxy)+q(e.yyx)+q(e.xxx));}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n bpm = 174./60.*iTime;\n frw = bpm *4.;\n    vec3 rnd= pcg3d(vec3(uv,bpm));\n  float wheeeee = clamp(tanh(sin(bpm*.125+rnd.x*.1)*4.),0.,1.);\n\tvec3 col = vec3(0.);\n  uv *= 1.-.5*step(.4,abs(uv.y));\n  \n  uv = erot(uv.xyy,vec3(0.,0.,1),sin(bpm*0.125+cos(bpm*.5))).xy;\n  vec3 ro= vec3(0.5,0.5,-5.+frw),rt=vec3(0.,0.,5.+frw);\n  ro=erot(ro,vec3(0.,0.,1),bpm*.5);\n  ro+=path(ro);\n  rt+=path(rt);\n  vec3 rd= orth(rt-ro)*normalize(vec3(uv,1.-.9*wheeeee));\n  vec3 rp=ro;\n  vec3 acc=vec3(0.);\n  vec3 light =vec3(1.,2.,-3.+frw);\n  light +=path(light);\n  vec2 d;\n  float rl=0.,i=0.;;\n  for(;i++<128.;){\n    \n      d = sdf(rp);\n      if(d.y <=0.){\n            vec3 cc= d.y ==-1. ? sin(vec3(.2,.5,.9)+rp.z)*.5 :vec3(.2,.5,.9);\n           acc+=cc*exp(-abs(d.x))/10.;\n         \n          d.x = max(.001,abs(d.x));\n        }\n      rl+=d.x;\n      rp=ro+rd*rl;\n     if(d.x< .001)break;\n     }\n     if(d.x< .001){\n         vec3 n = norm(rp,.001); \n         vec3 ld = normalize(light-rp);\n        float dif = max(0.,dot(ld,n));\n        float spc = max(0.,pow(dot(reflect(ld,n),rd),32.));\n        float sss = clamp(sdf(rp+ld*.4).x/.4,0.,1.);\n         float fre = pow(1.+dot(rd,n),4.);\n         vec3 cc= d.y >1.9 ? vec3(.9,.5,.2)*sqrt(texture(iChannel1,vec2(fract(iTime+rp.z+d.y))).r)*3.:vec3(.2);\n         col = cc*(dif+sss*.5)+spc*vec3(.9,.5,.2);\n         col = mix(vec3(.1),col,1.-fre);\n       }\n       col = mix(col,mix(vec3(.2,.5,.9),vec3(.9,.5,.2),uv.y),1.-exp(-.0001*rl*rl));\n    \n    // Output to screen\n    fragColor = vec4(col+acc,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "musicstream",
                        "id": 37108,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/lug00ber/flipside-lug00ber-lovin-u"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}