{
    "Shader": {
        "info": {
            "date": "1510426288",
            "description": "Implementation from this: https://stackoverflow.com/questions/13501081",
            "flags": 0,
            "hasliked": 0,
            "id": "Ml2yD3",
            "likes": 5,
            "name": "Bicubic filtering",
            "published": 3,
            "tags": [
                "2d",
                "filter",
                "bicubic"
            ],
            "usePreview": 1,
            "username": "luluco250",
            "viewed": 798
        },
        "renderpass": [
            {
                "code": "vec2 scale_uv(vec2 uv, vec2 scale, vec2 center) {\n    return (uv - center) * scale + center;\n}\n\nvec4 cubic(float v)\n{\n    vec4 n = vec4(1.0, 2.0, 3.0, 4.0) - v;\n    vec4 s = n * n * n;\n    vec4 o;\n    o.x = s.x;\n    o.y = s.y - 4.0 * s.x;\n    o.z = s.z - 4.0 * s.y + 6.0 * s.x;\n    o.w = 6.0 - o.x - o.y - o.z;\n    return o;\n}\n\nvec4 textureBicubic(sampler2D sampler, vec2 texCoords){\n\n   vec2 texSize = vec2(textureSize(sampler, 0));\n   vec2 invTexSize = 1.0 / texSize;\n\n   texCoords = texCoords * texSize - 0.5;\n\n\n    vec2 fxy = fract(texCoords);\n    texCoords -= fxy;\n\n    vec4 xcubic = cubic(fxy.x);\n    vec4 ycubic = cubic(fxy.y);\n\n    vec4 c = texCoords.xxyy + vec2 (-0.5, +1.5).xyxy;\n\n    vec4 s = vec4(xcubic.xz + xcubic.yw, ycubic.xz + ycubic.yw);\n    vec4 offset = c + vec4 (xcubic.yw, ycubic.yw) / s;\n\n    offset *= invTexSize.xxyy;\n\n    vec4 sample0 = texture(sampler, offset.xz);\n    vec4 sample1 = texture(sampler, offset.yz);\n    vec4 sample2 = texture(sampler, offset.xw);\n    vec4 sample3 = texture(sampler, offset.yw);\n\n    float sx = s.x / (s.x + s.y);\n    float sy = s.z / (s.z + s.w);\n\n    return mix(\n       mix(sample3, sample2, sx), mix(sample1, sample0, sx)\n    , sy);\n}\n\nvoid mainImage(out vec4 color, vec2 coord) {\n    vec2 ps = vec2(1.0) / iResolution.xy;\n    vec2 uv = coord * ps;\n    \n    vec2 uv_scaled = scale_uv(uv, vec2(1.0 / 4.0), vec2(0.575, 0.425));\n    \n    float t = sin(iTime) * 0.5 + 0.5;\n    \n    if (uv.x < t)\n    \tcolor = texture(iChannel0, uv_scaled);\n    else\n    \tcolor = textureBicubic(iChannel0, uv_scaled);\n    \n    color = mix(color, 1.0 - color, step(distance(uv.x, t), ps.x * 0.5));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}