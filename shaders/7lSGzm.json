{
    "Shader": {
        "info": {
            "date": "1623566494",
            "description": "Accidentally created this cool look while experimenting with voronoi patterns.",
            "flags": 0,
            "hasliked": 0,
            "id": "7lSGzm",
            "likes": 14,
            "name": "Bulls Eyes",
            "published": 3,
            "tags": [
                "voronoi",
                "stripes",
                "target",
                "blobbies"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 201
        },
        "renderpass": [
            {
                "code": "// https://iquilezles.org/articles/smin\nfloat smin(in float a, in float b, in float k) {\n    float h = clamp(0.5 + 0.5 * (b - a) / k, 0.0, 1.0);\n    return mix(b, a, h) - k * h * (1.0 - h);\n}\n\n// Hash from \"Hash without Sine\" by Dave_Hoskins (https://www.shadertoy.com/view/4djSRW)\nfloat Hash11(in float x) {\n    x = fract(x * 0.1031);\n    x *= x + 33.33;\n    x *= x + x;\n    return fract(x);\n}\n\n// Random cycling points\nvec2 getPoint(in vec2 cell) {\n    float freq = Hash11(dot(cell, vec2(393.84, 673.48))) * 6.0 - 3.0;\n    float phase = Hash11(dot(cell, vec2(348.46, 183.37)));\n    float amp = Hash11(dot(cell, vec2(275.35, 741.69)));\n    float t = iTime * freq + phase;\n    return cell + 0.5 + 0.5 * vec2(cos(t), sin(t)) * amp;\n}\n\nfloat voronoi(in vec2 p, in float smoothness) {\n    vec2 cell = floor(p);\n    float minDist = 1e20;\n    for (int i=-1; i < 2; i++) {\n        for (int j=-1; j < 2; j++) {\n            vec2 curCell = cell + vec2(i, j);\n            vec2 curPoint = getPoint(curCell);\n            minDist = smin(minDist, length(p - curPoint), smoothness);\n        }\n    }\n\n    return sin(minDist * 40.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    fragColor = vec4(smoothstep(0.5, 0.0, voronoi(uv * 4.0, 0.2) - 0.5));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}