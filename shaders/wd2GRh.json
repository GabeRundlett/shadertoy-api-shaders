{
    "Shader": {
        "info": {
            "date": "1548188693",
            "description": "Linfinity norm sqrt_n(sum |v|^n) tends toward the extrema.\nUse MIPmap to compute.  Trying serveral values for n -> red:100 green:50 blue:25 yellow:12\nBut n too high rise precision issues.\n\nNot very good :-(  (not only because of buggy MIPmap for non-pow2)",
            "flags": 32,
            "hasliked": 0,
            "id": "wd2GRh",
            "likes": 1,
            "name": "cheap image extrema",
            "published": 3,
            "tags": [
                "norm",
                "gpmipmap",
                "extrema",
                "linfinity"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 597
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    O = T(U);\n    vec2 R = iResolution.xy;\n    vec4 M = pow( R.x*R.y*textureLod( iChannel1, vec2(.5), 99.),vec4(1./N)),\n         E = abs(O.x-M);\n\n    //if ( U.x/R.x > .5) \n    {\n        if (O.x>M.z) O *= vec4(0,1,1,0);\n        // draw isovalues around extrema detected by N[i]\n        O =   E.x < .01 ? vec4(1,0,0,0)\n            : E.y < .01 ? vec4(0,1,0,0)\n            : E.z < .01 ? vec4(0,0,1,0)\n            : E.w < .01 ? vec4(1,1,0,0)\n            : O;\n    }\n    \n    //if ( floor(U.x)==R.x/2. ) O = vec4(0,0,1,0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// --- source image\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = texture(iChannel0, U/iResolution.xy);\n    \n    // large flat same-intensity areas is bad for the metrics : add rand\n    //O +=  .01*fract(sin(dot(U, vec2(12.9898, 78.233))) * 43758.5453);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define N vec4(100,50,25,12)   // degree for power approaching L infinity\n\n#define T(U) texelFetch( iChannel0, ivec2(U), 0 )",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "// --- computes approx L_infinity for various values N[i]\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = abs(T(U));\n    O = pow(vec4(O.x),vec4(N));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}