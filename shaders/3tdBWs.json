{
    "Shader": {
        "info": {
            "date": "1613681291",
            "description": "Simple test of two nodes connected with a \"line\" (box) segment.",
            "flags": 0,
            "hasliked": 0,
            "id": "3tdBWs",
            "likes": 1,
            "name": "Graph Connection Test",
            "published": 3,
            "tags": [
                "2d",
                "sdf"
            ],
            "usePreview": 0,
            "username": "pprovins",
            "viewed": 274
        },
        "renderpass": [
            {
                "code": "float circleDist( in vec2 uv, in vec2 pos, in float r ) {\n    return length(uv - pos) - r;\n}\n\nfloat boxDist( in vec2 p, in vec2 a, in vec2 b, in float r ) {\n    vec2 ba = b-a, pa = p-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    vec2  q = pa-h*ba;\n    float d = length(q);\n    return d - r;//vec3(d-r,q/d);\n}\n\nfloat circleScene(in vec2 p) {\n    float c = circleDist(p, vec2(-1.0, -0.2), 0.5);\n    float c2 = circleDist(p, vec2(1.0, 0.0), 0.5);\n    return min(c, c2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n\n\tfloat d = circleScene(p);\n    float d2 = boxDist(p, vec2(-1.0, -0.2), vec2(1.0, 0.0), 0.15);\n    \n\t// color circles ...\n    vec3 col = vec3(0.9,0.1,0.1);\n    if (d > 0.0) { \n        col = vec3(1.0,1.0,1.0) * (pow(d, 0.25));\n    }\n    \n    // draw the connections ...\n    if (d2 < 0.0 && d2 < d) {\n        col = vec3(0.0, 0.0, 0.0);\n    }\n\n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}