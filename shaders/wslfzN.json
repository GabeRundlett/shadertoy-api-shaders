{
    "Shader": {
        "info": {
            "date": "1610576981",
            "description": "h65",
            "flags": 0,
            "hasliked": 0,
            "id": "wslfzN",
            "likes": 1,
            "name": "oct13",
            "published": 3,
            "tags": [
                "noob"
            ],
            "usePreview": 0,
            "username": "merrecurent_",
            "viewed": 226
        },
        "renderpass": [
            {
                "code": "vec3 Rect(vec2 cord, float len, float wid)\n{\n    \n\tif(abs(tan(cord.x)) <= len/wid)\n        if (cord.y <= wid/abs(cos(cord.x)))\n            return vec3(1., 1., 0.);\n        else return vec3(.54, .6, 1.);\n    else\n       if (cord.y <= len/abs(sin(cord.x)))\n           return vec3(.5, 1., 0.);\n        else return vec3(.6, .75, 1.);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    //uv -= vec2(.62, .59);\n    uv *= 5.;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 new = fract(uv);\n    new -= .5;\n    \n    vec2 polar = vec2(atan(new.x, new.y), length(new));\n    polar.y*= 2.*polar.y;\n    \n    vec2 copy = vec2(atan(new.x, new.y), length(new));\n    new = vec2(polar.x*2. + iTime, polar.y);\n    \n    vec3 figure = Rect(new, .3, .3)\n        \t\t - Rect(new, .2, .2);\n    \n    //vec3 col = vec3(figure);\n    // Output to screen\n    fragColor = vec4(figure,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}