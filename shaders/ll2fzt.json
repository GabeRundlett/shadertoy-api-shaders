{
    "Shader": {
        "info": {
            "date": "1516909323",
            "description": "Based off of:\nHeart 3D https://www.shadertoy.com/view/4lK3Rc\nFake Glints https://www.shadertoy.com/view/Md2Xzm\n",
            "flags": 64,
            "hasliked": 0,
            "id": "ll2fzt",
            "likes": 13,
            "name": "Amortentia",
            "published": 3,
            "tags": [
                "heart",
                "valentine",
                "glitter"
            ],
            "usePreview": 0,
            "username": "tachyonflux",
            "viewed": 1484
        },
        "renderpass": [
            {
                "code": "#define time iTime\n#define FAR 30.\n#define ITR 100\n\n#define LIGHT_COLOR vec3(240.0 / 255.0,  64.0 / 255.0,  64.0 / 255.0)\n#define PRIMARY_INTENSITY 1.3\n#define PRIMARY_CONCENTRATION 6.0\n#define SECONDARY_INTENSITY 5.0\n#define SECONDARY_CONCENTRATION 0.9\n#define AMBIENT 0.3\n\n//The lack of reflections give it a different but still interesting look\n#define REFLECTIONS\n\nmat2 mm2(in float a){float c = cos(a), s = sin(a);return mat2(c,-s,s,c);}\n\nvec2 Noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n\tvec4 rg = textureLod( iChannel0, (uv+0.5)/256.0, 0.0 );\n\treturn mix( rg.yw, rg.xz, f.z );\n}\n\nfloat length16( vec3 p )\n{\n\tp = p*p; p = p*p; p = p*p;p = p*p;\n\treturn pow(p.x+p.y+p.z, 1.0/16.0 );\n}\n\nfloat almostIdentity( float x, float m, float n )\n{\n    if( x>m ) return x;\n    float a = 2.0*n - m;\n    float b = 2.0*m - 3.0*n;\n    float t = x/m;\n    return (a*t + b)*t*t + n;\n}\n\nfloat map(vec3 q)\n{\n\n    float r = 1.0;\n    q.y -= r;\n    float ani = pow( 0.5+0.5*sin(6.28318*iTime), 4.0 );\n    q *= 1.0 - 0.2*vec3(1.0,0.5,1.0);\n\n    float x = abs(q.x);\n    \n    x = almostIdentity( x, 0.25, 0.1 ); // remove discontinuity (https://iquilezles.org/articles/functions)\n        \n    float y = q.y;\n    float z = q.z;\n    y = 4.0 + y*1.2 - x*sqrt(max((20.0-x)/15.0,0.0));\n    z *= 2.0 - y/15.0;\n    float d = sqrt(x*x+y*y+z*z) - r;\n    d = d/3.0;\n    \n    return d;\n}\n\n\n//Based on TekF's \"Anisotropic Highlights\" (https://www.shadertoy.com/view/XdB3DG)\nvec3 shade( vec3 pos, vec3 rd, vec3 normal, vec3 ligt )\n{\n    vec3 lcol = LIGHT_COLOR;\n    float nl = dot(normal,ligt);\n\tvec3 light = lcol*max(.0,nl)*1.5;\n\tvec3 h = normalize(ligt-rd);\n    vec3 rf = reflect(rd,normal);\n\n\tvec3 coord = pos*.5;\n\tcoord.xy = coord.xy*.7071+coord.yx*.7071*vec2(1,-1);\n\tcoord.xz = coord.xz*.7071+coord.zx*.7071*vec2(1,-1);\n    vec3 coord2 = coord;\n    \n    //displacement of the noise grabs to create the glinting effect\n    #if 1    \n    vec3 ww = fwidth(pos);\n    coord.xy -= h.xz*20.*ww.xy;\n    coord.xz -= h.xy*20.*ww.xz;\n    coord2.xy -= h.xy*5.*ww.xy;\n    coord2.xz -= h.xz*5.*ww.xz;\n    #endif\n\t\n    //first layer (inner glints)\n    float pw = .21*((iResolution.x));\n\tvec3 aniso = vec3( Noise(coord*pw), Noise(coord.yzx*pw).x )*2.0-1.0;\n    aniso -= normal*dot(aniso,normal);\n\tfloat anisotropy = min(1.,length(aniso));\n\taniso /= anisotropy;\n\tanisotropy = .55;\n\tfloat ah = abs(dot(h,aniso));\n    float nh = abs(dot(normal,h));\n\tfloat q = exp2((1.1-anisotropy)*3.5);\n\tnh = pow( nh, q*PRIMARY_CONCENTRATION );\n\tnh *= pow( 1.-ah*anisotropy, 10.0 );\n\tvec3 glints = lcol*nh*exp2((1.2-anisotropy)*PRIMARY_INTENSITY);\n    glints *= smoothstep(.0,.5,nl);\n    \n    //second layer (outer glints)\n    pw = .145*((iResolution.x));\n    vec3 aniso2 = vec3( Noise(coord2*pw), Noise(coord2.yzx*pw).x )*2.0-1.0;\n    anisotropy = .6;\n    float ah2 = abs(dot(h,aniso2));\n    float q2 = exp2((.1-anisotropy)*3.5);\n    float nh2 = pow( nh, q2*SECONDARY_CONCENTRATION );\n    nh2 *= pow( 1.-ah2*anisotropy, 150.0 );\n    vec3 glints2 = lcol*nh2*((1.-anisotropy)*SECONDARY_INTENSITY);\n    glints2 *= smoothstep(.0,.4,nl);\n\t\n    \n    #ifdef REFLECTIONS\n    vec3 reflection = texture(iChannel1,rf).rgb;\n    #else\n    vec3 reflection = vec3(0);\n    #endif\n    \n\tfloat frnl = pow(1.0 + dot(normal,rd), 2.0);\n\tfrnl = mix( 0.0, 0.25, frnl );\n    \n\treturn \n        mix(light*vec3(0.3), reflection, frnl) +\n        glints +\n        glints2 +\n        reflection*0.015*(clamp(nl,0.,1.))+ reflection*0.005 +\n        lcol * AMBIENT;\n}\n\n\n\nfloat march( vec3 pos, vec3 ray )\n{\n\tfloat d = 0.;\n\tfloat h;\n\tfor( int i=0; i < ITR; i++ )\n\t{\n\t\th = map( pos+d*ray );\n\t\tif ( h < .005 || d > FAR )break;\n\t\td = d+h;\n\t}\n\t\n\tif (d > FAR)return 0.;\t\n\telse return d;\n}\n\nvec3 normal(in vec3 p, in vec3 rd)\n{  \n    vec2 e = vec2(-1., 1.)*0.01;   \n\tvec3 n = (e.yxx*map(p + e.yxx) + e.xxy*map(p + e.xxy) + \n\t\t\t\t\t e.xyx*map(p + e.xyx) + e.yyy*map(p + e.yyy) );\n    \n    //from TekF (error checking)\n\tfloat gdr = dot (n, rd );\n\tn -= max(.0,gdr)*rd;\n    return normalize(n);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//setup\n    vec2 p = fragCoord.xy/iResolution.xy-0.5;\n\tp.x*=iResolution.x/iResolution.y;\n\tvec2 um = iMouse.xy / iResolution.xy-.5;\n\tum.x *= iResolution.x/iResolution.y;\n\n\t//Camera\n    vec3 ro = vec3(0.0,-2.2,-5.0);\n\tvec3 rd = normalize(vec3(p,1.5));\n    mat2 mx = mm2(time*0.24 + um.x*6.0 + 5.3);\n    //mat2 my = mm2(0.); \n    ro.xz *= mx;rd.xz *= mx;\n    //ro.xy *= my;rd.xy *= my;\n\t\n\tvec3 col = vec3(0);\n\t\n\tfloat t = march( ro, rd );\n\tif ( t > .0 )\n\t{\n        vec3 ligt = normalize(vec3(1.,1,-.2));\n\t\tvec3 p = ro + rd*t;\n\t\tvec3 n = normal(p,rd);\n        col = shade( p, rd, n, ligt);\n\t\t\n\t}\n\telse\n\t{\n        #ifdef NO_REFLECTIONS\n        col = vec3(0);\n        #else\n        col = texture(iChannel1,rd).rgb;\n        #endif\n\t}\n\n    \n\tfragColor = vec4(pow(col,vec3(.85)),1);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "cubemap",
                        "id": 24,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "musicstream",
                        "id": 13253,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/megannicole-musicpop/09-baby-i-love-you"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}