{
    "Shader": {
        "info": {
            "date": "1697624804",
            "description": "based on this tutorial: https://www.youtube.com/watch?v=f4s1h2YETNY\nas well as this shader: https://www.shadertoy.com/view/wd3XzS",
            "flags": 64,
            "hasliked": 0,
            "id": "mdcfDS",
            "likes": 1,
            "name": "sparkly fractal audio visualizer",
            "published": 3,
            "tags": [
                "psychedelic",
                "visualizer"
            ],
            "usePreview": 0,
            "username": "lauriparonen",
            "viewed": 228
        },
        "renderpass": [
            {
                "code": "/*  audio processing logic borrowed from https://www.shadertoy.com/view/wd3XzS */\nfloat sigmoid(float x)\n{\n    return 1. / (1. + exp(x));\n}\n   \nvec3 sigmoid(vec3 xyz)\n{\n    return vec3(sigmoid(xyz.x), sigmoid(xyz.y), sigmoid(xyz.z));\n}\n\nfloat sampleAt(float f)\n{\n    return texture(iChannel0, vec2(f / 16.0, 0)).x;\n}\n\nfloat sampleMultiple(float f)\n{\n    float delta = .1;\n    return 0.1 * (sampleAt(f - 2. * delta) + sampleAt(f - delta) + sampleAt(f) + sampleAt(f + delta) + sampleAt(f + 2. * delta));\n}\n\n\nvec3 palette( in float t )\n{\n    /* \n        gotten from http://dev.thi.ng/gradients/\n        find a gradient you like and change the values of the four vectors\n        respectively to the values of the vector of coefficients on the page\n        \n        e.g.: \n        \n        [[0.500 0.500 0.500] [0.500 0.500 0.500] [1.000 1.000 1.000] [0.000 0.333 0.667]]\n              \n        â€”>\n              \n        vec3 a = vec3(0.500, 0.500, 0.500);\n        vec3 b = vec3(0.500, 0.500, 0.500);\n        vec3 c = vec3(1.000, 1.000, 1.000);\n        vec3 d = vec3(0.000, 0.333, 0.667);\n        \n    */\n    \n    vec3 a = vec3(0.678, -1.502, 0.388);\n    vec3 b = vec3(-0.252, 0.054, 0.450);\n    vec3 c = vec3(-2.892, 2.168, 0.930);\n    vec3 d = vec3(-1.252, -0.918, -1.582);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat MAX_ITER = 3.5; // edit this value to alter the complexity of the figure\n                      // large number -> lots of details\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;  \n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < MAX_ITER; i++) { \n    \n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n        \n        float amplitude = sampleMultiple(d * d);\n\n        d -= .8 * amplitude;\n        \n        vec3 col = palette(length(uv0) + sampleMultiple(1.0));\n        \n        float weird = sigmoid(abs(uv.x) * abs(uv.y));\n\n        float speed = 3. * amplitude * sin(sampleMultiple(d) * weird * 0.05) * 0.1;\n\n        float brightness = 1.5 * amplitude * sigmoid(sin(d * d * 16. - speed * iTime + 2. * speed * amplitude));\n\n        //d += sin(d*15. + iTime)/15.; \n        d += sin(d*0.1 + sampleMultiple(1.0)/10.);\n        d = abs(d);\n\n        d = 0.02 / d;\n\n        col *= brightness;\n\n        finalColor += col * d;\n        \n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 34945,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/lamiatunes/altus-i"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}