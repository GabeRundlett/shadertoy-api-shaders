{
    "Shader": {
        "info": {
            "date": "1647229190",
            "description": "I made it when I was bored at work :)",
            "flags": 0,
            "hasliked": 0,
            "id": "7dSBD3",
            "likes": 20,
            "name": "China Flag",
            "published": 3,
            "tags": [
                "2d",
                "flag"
            ],
            "usePreview": 0,
            "username": "Delincoter",
            "viewed": 717
        },
        "renderpass": [
            {
                "code": "/*\n\"Waviness factor\" and \"Vignette\" cited from https://www.shadertoy.com/view/3lyGRd\n*/\n\n#define S(a,b,t) smoothstep(a,b,t) \n#define PI 3.1415927\n\nmat2 Rot(float a)\n{\n    float s = sin(a), c = cos(a);\n    \n    return mat2(c, -s, s, c);\n}\n\nfloat DrawGrid(vec2 uv)\n{\n    vec2 gv = fract(uv * 10. - 0.025);\n    \n    float grid = 0.;\n    \n    if(gv.x > .95) grid = 1.;\n    if(gv.y > .95) grid = 1.;\n    \n    return grid;\n}\n\nfloat Star(vec2 uv, float feature)\n{\n    uv.x = abs(uv.x);\n    \n    float S1 = 0.11;\n    float S2 = S1 - feature;\n    \n    float side1 = S(S1, S2, uv.y);\n    \n    vec2 dv = Rot(0.4*PI*2.) * uv;\n    float side2 = S(S1, S2, dv.y);\n    \n    dv = Rot(0.4*PI*3.) * uv;\n    float side3 = S(S1, S2, dv.y);\n    \n    dv = Rot(0.4*PI*4.) * uv;\n    float side4 = S(S1, S2, dv.y);\n    \n    return side2*side4+side1*side3;\n}\n\nfloat StarLayer(vec2 uv)\n{\n    float star1 = Star((uv+vec2(0.4, 0.))*1.1, .01);\n    \n    float star2 = Star(((uv+vec2(-0.1, 0.4))*3.1)* Rot(0.5), .02);\n    \n    float star3 = Star(((uv+vec2(-0.3, 0.2))*3.1), .02);\n    \n    float star4 = Star(((uv+vec2(-0.3, -0.1))*3.1)* Rot(-0.25), .02);\n    \n    float star5 = Star(((uv+vec2(-0.1, -0.3))*3.1)* Rot(0.5), .02);\n    \n    return star1+star2+star3+star4+star5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 st = uv;\n\n    uv -= .5;  \n    uv.x *= iResolution.x/iResolution.y;\n  \n    uv *= 2.;\n    uv += vec2(iResolution.x/iResolution.y*0.5, -0.5);\n    \n    float w = sin((uv.x + uv.y - iTime * .75 + sin(1.5 * uv.x + 4.5 * uv.y) * PI * .3)\n                  * PI * .6); // fake waviness factor  \n    uv *= 1. + (.036 - .036 * w);\n    \n    //float tex = texture(iChannel0, uv * 200.).r;\n      \n    vec3 col = vec3(0.870588,0.1607843,0.0627451);\n    col = mix(col, vec3(1., 0.8705882, 0.), clamp(StarLayer(uv),0.,1.));\n    col += w * .15;\n    //col *= tex*2.;\n    \n    float v = 16. * st.x * (1. - st.x) * st.y * (1. - st.y); // vignette\n    col *= vec3(1. - .25 * exp2(-4.5 * v));\n    \n    //col += DrawGrid(uv)*.5; // grid\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 9,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}