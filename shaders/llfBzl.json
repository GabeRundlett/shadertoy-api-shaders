{
    "Shader": {
        "info": {
            "date": "1512876243",
            "description": "Some sine waves interacting in the most classical manner, I am a total noob, so any comments would be appreciated \n",
            "flags": 0,
            "hasliked": 0,
            "id": "llfBzl",
            "likes": 7,
            "name": "Entanglement",
            "published": 3,
            "tags": [
                "math",
                "wave",
                "sin",
                "trig",
                "input",
                "user"
            ],
            "usePreview": 0,
            "username": "felipunkerito",
            "viewed": 753
        },
        "renderpass": [
            {
                "code": "// Licensed under IDGF licence which states that everything I have written can be used for whatever\n// the fuck you want including monetization or what not,\n// IDGF stands for I Dont Give a Fuck  \n\nfloat hasher( float hash )\n{\n\n\treturn fract(sin(54556.46 * hash));\n\n}\n\nfloat trig( float dist, float decay, float frequency, float amplitude, float speed )\n{\n\n\treturn exp(-decay * dist) *  \n    sin(dist * frequency + ((iTime) * speed)) * amplitude;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    vec2 m = iMouse.xy / iResolution.y;\n    float freq = (50.0);\n    float ampl = 2.1;\n    vec2 center = m;\n    float n = .3;\n    vec2 cir = vec2( 0.7 + n * sin( iTime ), 0.5 + n * cos( iTime ) );\n    vec2 centerOne = vec2( cir.x, cir.y );\n    float dist = length(uv - center);\n    float distOne = length(uv - centerOne);\n    float decay = 5.8;\n    float trigger = dist * distOne;\n    float speed = 2.0;\n    float triggy = 0.0;\n    float maxiter = 5.0;\n    triggy = trig(trigger, decay, freq, ampl, speed);\n    \n    float colourer = mix( triggy*(iTime),0.2, 1.0 );\n    vec3 rgb = vec3( min( triggy, colourer), min( triggy, colourer ), min( triggy, colourer ) );\n    fragColor = vec4( triggy, rgb );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}