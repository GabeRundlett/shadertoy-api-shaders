{
    "Shader": {
        "info": {
            "date": "1672570766",
            "description": "Truchet Patterns\nhttps://archive.bridgesmathart.org/2018/bridges2018-39.pdf\nhttps://www.behance.net/gallery/75203387/Criollabat-A\nhttps://www.behance.net/gallery/111788293/Sbastien-Truchet-Typeface",
            "flags": 0,
            "hasliked": 0,
            "id": "Dlf3DX",
            "likes": 6,
            "name": "Truchet Patterns",
            "published": 3,
            "tags": [
                "patterns",
                "truchet"
            ],
            "usePreview": 0,
            "username": "lanx06",
            "viewed": 229
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926538\nfloat sin_lerp(float a,float b,float t){\n    float tem=(1.0-cos(t*PI))/2.0;\n    return a*(1.0-tem)+b*tem;\n}\nfloat random(float seed){\n    return fract(sin(seed+1.) * 43758.5453);\n}\nfloat curl_random(float seed,float offset,float freq){\n    return sin_lerp(random(offset+floor(mod(seed,freq))),random(offset+floor(mod(seed+1.,freq))),abs(seed-floor(seed)));\n}\nvec2 dir4[4]=vec2[](vec2(1.0,0.0),vec2(0.0,1.0),vec2(0.0,-1.0),vec2(-1.0,0.0));\nvec2 dir2_1[4]=vec2[](vec2(1.0,1.0),vec2(1.0,-1.0),vec2(-1.0,-1.0),vec2(-1.0,1.0));\nvec2 dir8[8]=vec2[](vec2(1.0,0.0),vec2(1.0,1.0),vec2(0.0,1.0),vec2(1.0,-1.0),vec2(0.0,-1.0),vec2(-1.0,-1.0),vec2(-1.0,0.0),vec2(-1.0,1.0));\nvec2 dir4_1[4]=vec2[](vec2(1.0,1.0),vec2(-1.0,-1.0),vec2(1.0,-1.0),vec2(-1.0,1.0));\n\nfloat shape(vec2 uv,vec2 dir){\n\n    vec2 l = uv-0.5;\n    l+=dir;\n    float pix =0.02;\n    float thin=0.05;\n    float radius=0.60;\n    float offset=curl_random(iTime,0.,100.0);\n    radius+=(offset-0.5)*radius;\n    //circles https://youtu.be/2R7h76GoIJM?t=1027\n    float a= smoothstep(pix,-pix,abs(length(l)-radius)-thin);\n    radius=1.0-radius;\n    float c= smoothstep(radius+thin+pix,\n                      radius+thin-pix,\n                      length(l));\n    \n    float d= smoothstep(radius-thin+pix,\n                      radius-thin-pix,\n                      length(l));\n    return max(a,c-d);\n}\n\nfloat shape_4(vec2 st,int type){\n    float color=0.0;\n    #define loop2 2\n    if(type<1)\n        for(int i=0;i<2;i++)\n            color=max(color,shape(st,dir4_1[i]/2.0)); \n    else if(type<2)\n        for(int i=2;i<4;i++)\n            color=max(color,shape(st,dir4_1[i]/2.0));\n    else\n        for(int i=0;i<4;i++)\n            color=max(color,shape(st,dir4_1[i]/2.0));\n    return color;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 st = fragCoord/iResolution.y;\n    vec3 color = vec3(0.0);\n    float tem=0.0;\n    float n=50.0;\n    //st=mod(fragCoord,n)/n;\n    st=fract(fragCoord/n);\n    vec2 id=floor(fragCoord/n);\n    float v=curl_random(iTime*0.03,id.x+id.y*n,1000.0);\n    tem=shape_4(st,int(v*3.0));\n    color=mix(vec3(0.058, 0.96, 0.678),vec3(1, 0, 0.38),tem);\n    fragColor = vec4(color,1.0);\n}\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}