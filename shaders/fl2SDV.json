{
    "Shader": {
        "info": {
            "date": "1628679625",
            "description": "porting Own_Army5576's https://www.desmos.com/calculator/hnsjwwp02s\n\n( of course it would be cooler with a procedural maze + trajectory :-D \n  Sketched here: https://www.shadertoy.com/view/stjXWV \n)",
            "flags": 0,
            "hasliked": 0,
            "id": "fl2SDV",
            "likes": 43,
            "name": "infinite maze",
            "published": 3,
            "tags": [
                "infinite",
                "maze"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 596
        },
        "renderpass": [
            {
                "code": "// porting Own_Army5576's  https://www.desmos.com/calculator/hnsjwwp02s\n// see https://old.reddit.com/r/desmos/comments/ovpnyg/desmos_challenge_12_mazes/h7k89oz/\n\n// draw line segment https://www.shadertoy.com/view/llySRh\nfloat D(vec2 p, vec2 a, vec2 b) { \n    p -= a, b -= a;\n    float h = clamp(dot(p, b) / dot(b, b), 0., 1.);\n    p -= b * h;\n    return dot(p,p);\n}\n#define S(v) smoothstep( 9./R.y, 0., v )    \n\n// draw poly-line.  NB: GLSL func can't have vec2[] parameter â†’ macro\n#define L( U, L, n, s )                                          \\\n    for( a = L[i=0] ; i < n ; a=b, i++ ) {                       \\\n        b = L[i];                                                \\\n        if (b.x==99.) a = L[++i], b = L[++i];                    \\\n        m = min(m, D(U,a*s,b*s) );                               \\\n    } \n\n// maze tile\nvec2 L[] = vec2[] (\n    vec2(5,-5),vec2(3,-5),vec2(3,-7),vec2(  1,-7),vec2(1,-9),vec2(9,-9),vec2(9,9),vec2(-9,9),vec2(-9,-9),vec2(-1,-9),vec2(-1,-5),vec2(1,-5),vec2(1,-3),vec2(99),\n    vec2(3,-3),vec2(7,-3),vec2(7,-7),vec2(7,7),vec2(99),\n    vec2(5,-9),vec2(5,-7),vec2(99),\n    vec2(5,9),vec2(5,3),vec2(99),\n    vec2(5,-1),vec2(5,1),vec2(3,1),vec2(3,7),vec2(99),\n    vec2(1,9),vec2(1,5),vec2(99),\n    vec2(-1,3),vec2(-1,7),vec2(99),\n    vec2(-3,9),vec2(-3,5),vec2(-5,5),vec2(-5,1),vec2(-5,5),vec2(-7,5),vec2(-7,7),vec2(-5,7),vec2(99),\n    vec2(-3,-1),vec2(-7,-1),vec2(-7,3),vec2(-7,-3),vec2(-5,-3),vec2(99),\n    vec2(-7,-5),vec2(-3,-5),vec2(-3,-3),vec2(-3,-7),vec2(-7,-7),vec2(99),\n    vec2(1,-3),vec2(3,-3),vec2(3,3),vec2(-3,3),vec2(-3,-3),vec2(-1,-3)\n  );\n// solved trajectory  \nvec2 T[] = vec2[] ( \n   vec2(0,-9),vec2(0,-6),vec2(2,-6),vec2(2,-4),vec2(4,-4),vec2(6,-4),vec2(6,-6),vec2(6,-8),vec2(8,-8),vec2(8,-6),vec2(8,-4),vec2(8,-2),vec2(8,0),\n   vec2(8,2),vec2(8,4),vec2(8,6),vec2(8,8),vec2(6,8),vec2(6,6),vec2(6,4),vec2(6,2),vec2(4,2),vec2(4,4),vec2(4,6),vec2(4,8),vec2(2,8),vec2(2,6),\n   vec2(2,4),vec2(0,4),vec2(0,6),vec2(0,8),vec2(-2,8),vec2(-2,6),vec2(-2,4),vec2(-4,4),vec2(-4,2),vec2(-4,0),vec2(-6,0),vec2(-6,2),vec2(-6,4),\n   vec2(-8,4),vec2(-8,2),vec2(-8,0),vec2(-8,-2),vec2(-8,-4),vec2(-8,-6),vec2(-8,-8),vec2(-6,-8),vec2(-4,-8),vec2(-2,-8),vec2(-2,-6),vec2(-2,-4),vec2(0,-4),vec2(0,-3) \n  );\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2  R = iResolution.xy,\n          U = 3.*( 2.*u - R ) / R.y, a,b;\n\n    float s = .33+.67*exp2( mod(iTime,2.) ), // original: 1. + mod(iTime,2.);\n          m =  99., l;\n    \n    int i,z,p = T.length(), n = int(26.5*(s-1.)+1.);\n    for ( z=0; z < 3; s/=3., z++ ) {                    // fractal levels\n        if (z==2) p = n;                                // full L0,L1, evol L2\n        L( U, T, p, s);                                 // draw trajectory tile\n    }\n    l = m; s*=27.;\n    \n    for ( z=0; z < 6; s/=3., z++ )                      // fractal levels\n        L( U, L, L.length(), s );                       // draw maze tile\n\n    O = vec4(1);                                        // paint\n    O -= m==l ? S( sqrt(m) - 20./R.y ) * vec4(0,1,1,0)\n              : vec4( S( sqrt(m)));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}