{
    "Shader": {
        "info": {
            "date": "1617381917",
            "description": "This is just a little test to see how fast my GPU can render a Mandelbrot Set. It works much better than i expected!",
            "flags": 0,
            "hasliked": 0,
            "id": "NdB3WD",
            "likes": 0,
            "name": "Mandelbrot Set Smooth 2",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "me_123",
            "viewed": 273
        },
        "renderpass": [
            {
                "code": "vec4 load(in int x, in int y) {\n\treturn texelFetch(iChannel0, ivec2(x, y), 0);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \tvec2 mouse = iMouse.xy/iResolution.xy;\n    vec2 uv = (fragCoord.xy/iResolution.xy)-0.5;\n    float zoom = 2.;//10.-iTime;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= zoom;\n    //uv -= vec2(0., 0.)+load(1, 0).xy*vec2(iResolution.x/iResolution.y, 1)*zoom;\n    vec2 z = vec2(0, 0);\n    vec2 c = uv;\n    float itr = 1.;\n    int m = clamp(iFrame, 1, 100);\n    for (int i = 0; i < m; i += 1) {\n    \tz = vec2(z.x*z.x - z.y*z.y, 2.*z.x*z.y)+c;\n        if (length(z) > clamp(iTime, 0.0, 2.0)){\n            break;\n\t\t}\n        itr *= length(z)/2.0;\n    }\n    vec3 col = vec3(pow((itr*10.0)/5.0, 0.1));\n    uv -= load(1, 0).xy*vec2((iResolution.x/iResolution.y), 1);\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}