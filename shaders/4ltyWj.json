{
    "Shader": {
        "info": {
            "date": "1534108700",
            "description": "Modeling dispersion of waves on a 2D membrane. Commonly used for audio reverb.\n\nUse the mouse to draw.",
            "flags": 32,
            "hasliked": 0,
            "id": "4ltyWj",
            "likes": 11,
            "name": "Waveguide mesh",
            "published": 3,
            "tags": [
                "water",
                "physics",
                "membrane",
                "waveguide"
            ],
            "usePreview": 0,
            "username": "gleurop",
            "viewed": 951
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float v = texture(iChannel0, uv).x;\n    fragColor = vec4(v);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec4 bufB( in vec2 coord )\n{\n    vec2 uv = coord/iResolution.xy;\n    return texture(iChannel1, uv)*2.0-1.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 c )\n{\n    vec2 uv = c/iResolution.xy;\n    vec2 e = vec2(1, 0);\n    float v = 0.5*(bufB(c-e.xy).x + bufB(c-e.yx).y + bufB(c+e.xy).z + bufB(c+e.yx).w);\n    fragColor = vec4(v);\n    if (iMouse.z > 0.0)\n    \tfragColor += vec4(sin(max(0.0,25.0-0.5*distance(c, iMouse.xy))));\n    fragColor = fragColor*0.5+0.5;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "const float DECAY = 0.999;\n\nfloat bufA( in vec2 coord )\n{\n    vec2 uv = coord/iResolution.xy;\n    return texture(iChannel0, uv).a*2.0-1.0;\n}\nvec4 bufB( in vec2 coord )\n{\n    vec2 uv = coord/iResolution.xy;\n    return texture(iChannel1, uv)*2.0-1.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 c )\n{\n    vec2 uv = c/iResolution.xy;\n    vec2 e = vec2(1, 0);\n    float p = bufA(c);\n    fragColor = vec4(\n    \tp-bufB(c+e.xy).z,\n        p-bufB(c+e.yx).w,\n        p-bufB(c-e.xy).x,\n        p-bufB(c-e.yx).y\n    )*DECAY*0.5+0.5;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}