{
    "Shader": {
        "info": {
            "date": "1556386493",
            "description": "[url]https://en.wikipedia.org/wiki/Fibonacci_spiral[/url] Box sides = Fibonacci sequence.\nCompare to golden log spiral: [url]https://www.shadertoy.com/view/wtlGD4[/url]\n\nNB: very inelegant way for now: all explicit. ",
            "flags": 0,
            "hasliked": 0,
            "id": "tllGD4",
            "likes": 3,
            "name": "Fibonacci spiral",
            "published": 3,
            "tags": [
                "spiral",
                "fibonacci",
                "short",
                "log",
                "golden"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 978
        },
        "renderpass": [
            {
                "code": "// Very inelegant way for now: all explicit.\n// See no-data version here: https://www.shadertoy.com/view/3lf3DM\n\nint[]  F = int[](1,1,2,3,5,8,13,21,34); // Fibonacci numbers\nvec2[] S = vec2[]( vec2(0,0), vec2(1,0), vec2(0,2), vec2(-3,2), vec2(-3,-1),vec2(2,2),vec2(-3,15), vec2(-24,15), vec2(-24,-6));\n// Fn = Fn-2 + Fn-1    Sn = ?\n\n// #define S(v) min( 1., abs(v)/p  )    // lazy AA\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = 16.* ( u+u - R ) / R.y, P,C;\n    float l,r, p = 90./R.y;\n    O = vec4(1);\n    \n    int n = F.length();\n    for (int i=0; i<n; i++) {\n        r = float(F[i])/2.;\n        C = S[i]+r*vec2(1,-1);          // box center & radius\n        P = abs( C - U );\n        l = max(P.x,P.y) - r;\n        if ( l < p/4.) {                // in box: draw arc and box\n            C += r* vec2(1)*mat2(cos( float(i)*1.57 + vec4(0,33,11,0))); // https://www.shadertoy.com/view/XlsyWX\n            O = mix(vec4(1,0,0,1), .98+.02*cos( float(i)  + vec4(0,23,21,0)  ), min(1.,abs(length(C-U)-2.*r)/p) ); // https://www.shadertoy.com/view/ll2cDc\n            O = min(O, abs(l)*2./p );\n        }\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}