{
    "Shader": {
        "info": {
            "date": "1585102367",
            "description": "wip",
            "flags": 0,
            "hasliked": 0,
            "id": "3dXcR2",
            "likes": 5,
            "name": "PAG_20151110_VHS",
            "published": 3,
            "tags": [
                "filter"
            ],
            "usePreview": 0,
            "username": "h3r3x3",
            "viewed": 609
        },
        "renderpass": [
            {
                "code": "// Fork of \"20151110_VHS\" by FMS_Cat. https://shadertoy.com/view/XtBXDt\n// 2020-03-25 02:11:48\n\n#define time iTime\n#define resolution ( iResolution.xy )\n#define iChannel0 iChannel0\n#define gl_FragCoord fragCoord\n#define gl_FragColor fragColor\n\n#define PI 3.14159265\n\nvec3 tex2D( sampler2D _tex, vec2 _p ){\n  vec3 col = texture( _tex, _p ).xyz;\n  if ( 0.5 < abs( _p.x - 0.5 ) ) {\n    col = vec3( 0.1 );\n  }\n  return col;\n}\n\nfloat hash( vec2 _v ){\n  return fract( sin( dot( _v, vec2( 89.44, 19.36 ) ) ) * 22189.22 );\n}\n\nfloat iHash( vec2 _v, vec2 _r ){\n  float h00 = hash( vec2( floor( _v * _r + vec2( 0.0, 0.0 ) ) / _r ) );\n  float h10 = hash( vec2( floor( _v * _r + vec2( 1.0, 0.0 ) ) / _r ) );\n  float h01 = hash( vec2( floor( _v * _r + vec2( 0.0, 1.0 ) ) / _r ) );\n  float h11 = hash( vec2( floor( _v * _r + vec2( 1.0, 1.0 ) ) / _r ) );\n  vec2 ip = vec2( smoothstep( vec2( 0.0, 0.0 ), vec2( 1.0, 1.0 ), mod( _v*_r, 1. ) ) );\n  return ( h00 * ( 1. - ip.x ) + h10 * ip.x ) * ( 1. - ip.y ) + ( h01 * ( 1. - ip.x ) + h11 * ip.x ) * ip.y;\n}\n\nfloat noise( vec2 _v ){\n  float sum = 0.;\n  for( int i=1; i<9; i++ )\n  {\n    sum += iHash( _v + vec2( i ), vec2( 2. * pow( 2., float( i ) ) ) ) / pow( 2., float( i ) );\n  }\n  return sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 uv = gl_FragCoord.xy / resolution;\n  vec2 uvn = uv;\n  vec3 col = vec3( 0.0 );\n\n  // tape wave\n  uvn.x += ( noise( vec2( uvn.y, time ) ) - 0.5 )* 0.005;\n  uvn.x += ( noise( vec2( uvn.y * 100.0, time * 10.0 ) ) - 0.5 ) * 0.01;\n\n  // tape crease\n  float tcPhase = clamp( ( sin( uvn.y * 8.0 - time * PI * 1.2 ) - 0.92 ) * noise( vec2( time ) ), 0.0, 0.01 ) * 10.0;\n  float tcNoise = max( noise( vec2( uvn.y * 100.0, time * 10.0 ) ) - 0.5, 0.0 );\n  uvn.x = uvn.x - tcNoise * tcPhase;\n\n  // switching noise\n  float snPhase = smoothstep( 0.03, 0.0, uvn.y );\n  uvn.y += snPhase * 0.3;\n  uvn.x += snPhase * ( ( noise( vec2( uv.y * 100.0, time * 10.0 ) ) - 0.5 ) * 0.2 );\n    \n  col = tex2D( iChannel0, uvn );\n  col *= 1.0 - tcPhase;\n  col = mix(\n    col,\n    col.yzx,\n    snPhase\n  );\n\n  // bloom\n  for( float x = -4.0; x < 2.5; x += 1.0 ){\n    col.xyz += vec3(\n      tex2D( iChannel0, uvn + vec2( x - 0.0, 0.0 ) * 7E-3 ).x,\n      tex2D( iChannel0, uvn + vec2( x - 2.0, 0.0 ) * 7E-3 ).y,\n      tex2D( iChannel0, uvn + vec2( x - 4.0, 0.0 ) * 7E-3 ).z\n    ) * 0.1;\n  }\n  col *= 0.6;\n\n  // ac beat\n  col *= 1.0 + clamp( noise( vec2( 0.0, uv.y + time * 0.2 ) ) * 0.6 - 0.25, 0.0, 0.1 );\n\n  gl_FragColor = vec4( col, 1.0 );\n}\n\n#undef gl_FragCoord\n#undef gl_FragColor",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}