{
    "Shader": {
        "info": {
            "date": "1631209149",
            "description": "test",
            "flags": 4,
            "hasliked": 0,
            "id": "7sV3RD",
            "likes": 3,
            "name": "testbsp4",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "BSPCo",
            "viewed": 286
        },
        "renderpass": [
            {
                "code": "//-----------------------------------------------------\n// Radial Sound Visualizer                     5/2015\n// Based on 'Input-Sound' by IQ\n// now switch between 2 views\n//-----------------------------------------------------\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // create pixel coordinates\n\tvec2 uv = (fragCoord.xy / iResolution.xy);\n\n    // for radial view click to left side, \n    // for xy view click to right side\n    if (iMouse.x / iResolution.x < 0.5)\n      uv = vec2( .75*length(uv-0.5), atan(abs(uv.y-0.5), abs(uv.x-0.5)) );\n\n    float value, fft, wave;\n    value = abs(uv.x-0.5);\n    \n    // first texture row is frequency data\n\tfft  = texture( iChannel0, vec2(value,.37) ).x; \n\t\n  \t// second texture row is the sound wave\n\twave = texture( iChannel0, vec2(value,-.48) ).x;\n\t\n\t// convert frequency to colors\n\tvec3 col = vec3( 25.0*fft*(1.0-fft)*(0.2+01.24*sin(iTime))\n                    , fft+1.3*sin(0.22*iTime)\n                    , 1.5-fft-1.4*sin(0.33*iTime) ) * fft;\n    \n    // add wave form on top\t\n\tvalue = (uv.y < 1.0) ? uv.y : uv.y - 1.0;\n\tcol += 0.8 -  smoothstep( 0.0, 0.15, abs(wave - value) );\n\t\n\t// output final color\n\tfragColor = vec4(col,50.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "mic",
                        "id": 32,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/mic.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}