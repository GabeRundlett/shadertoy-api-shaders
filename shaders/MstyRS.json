{
    "Shader": {
        "info": {
            "date": "1519407529",
            "description": "This is a golfed versions of Falken's:\n[url]https://www.shadertoy.com/view/4djBRm[/url]\nPlease help me make this shorter.",
            "flags": 0,
            "hasliked": 0,
            "id": "MstyRS",
            "likes": 8,
            "name": "Shortest Tunnel - 108 chars",
            "published": 3,
            "tags": [
                "2d",
                "tunnel",
                "short",
                "onetweet",
                "golf"
            ],
            "usePreview": 0,
            "username": "GregRostami",
            "viewed": 757
        },
        "renderpass": [
            {
                "code": "// 108 chars - Fabrice did ... you know ... what only Fabrice can do! :)\n\nvoid mainImage(out vec4 o, vec2 u) {\n\to = texture( iChannel0, vec2(iTime + .3/length(o.xy=u/iResolution.y-.7),\n                                 atan(o.y, o.x)/3.14) ); }/*\n\n        \n// 112 chars - My favroite version.\n\n#define mainImage(o,U)           \\\n    vec2 u = U/iResolution.y-.7; \\\n\to = texture( iChannel0, vec2(atan(u.y, u.x)/3.14, iTime + .3/length(u)) )\n\n\n\n// 107 chars - Shorter, but not my favorite.\n\n#define mainImage(o,U)           \\\n    vec2 u = U/iResolution.y-.7; \\\n\to = texture( iChannel0, vec2(atan(u.y, u.x), iTime + .3/length(u)) )\n\n\n\n// 391 chars - Original shader by Falken:\n\nconst float TUNNEL_SIZE  = 0.25;\t// smaller values for smaller/thinner tunnel\nconst float TUNNEL_SPEED = 0.5;\t\t// speed of tunnel effect, negative values ok\n\nconst float PI = 3.141592;\n\nvec2 tunnel(vec2 uv, float size, float time)\n{\n    vec2 p  = -1.0 + (2.0 * uv);\n    float a = atan(p.y, p.x);\n    float r = sqrt(dot(p, p));\n    return vec2(a / PI, time + (size / r));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = tunnel(uv, TUNNEL_SIZE, iTime * TUNNEL_SPEED);\n\tfragColor = texture(iChannel0, uv);\n}\n*/",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}