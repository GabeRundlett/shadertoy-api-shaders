{
    "Shader": {
        "info": {
            "date": "1560364575",
            "description": "ecec",
            "flags": 32,
            "hasliked": 0,
            "id": "WlSGz3",
            "likes": 0,
            "name": "power game)))",
            "published": 3,
            "tags": [
                "edc"
            ],
            "usePreview": 0,
            "username": "MODer",
            "viewed": 378
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    \n    \n    \n    \n    \n    fragColor = texture(iChannel0,uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float p;\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    \n    p = texture(iChannel0,uv).x;\n    \n    fragColor = vec4(vec3(p),1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec2 uv(vec2 uv, vec2 si, vec2 add){\n    return (uv+add)/si;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float g;\n    float f;\n    \n    f = 0.99;\n    g = texture(iChannel0,uv(fragCoord.xy,iResolution.xy,vec2(0.)) ).x/2.;\n    \n    \n    if(n(fragCoord.xy, iMouse.xy, 70.) == 1){g =+ 1.;}\n    \n    \n    \n    for(int h = 0; h < 4; h++){\n        g = pow(g,f);\n        g += pow(texture(iChannel0,uv(fragCoord.xy,iResolution.xy,\n                                 vec2(sin(float(h)*3.14/2.),cos(float(h)*3.14/2.))\n                                )).x/(2.*4.), f);\n    }\n    g = pow(g, 1./f);\n    \n    g = min(g, 1.);\n    fragColor = vec4(vec3(g),1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "\nint n(vec2 cor, vec2 p, float s){\n    if((cor.x+s) > p.x){\n        if((cor.x-s) < p.x){\n            if((cor.y+s) > p.y){\n                if((cor.y-s) < p.y){\n                    return 1;}}}}\n    return 0;\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}