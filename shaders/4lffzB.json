{
    "Shader": {
        "info": {
            "date": "1512220745",
            "description": "The frame rate doubles if bufA::offset is computed on a different SM than (0,0).\nNot only there are warps and groups, but also SM, statically associated to screen regions.\n\nAuto adjust to you GPU power",
            "flags": 32,
            "hasliked": 0,
            "id": "4lffzB",
            "likes": 2,
            "name": "testing SM/GPC - fragSniffer",
            "published": 3,
            "tags": [
                "warp",
                "fps",
                "sm",
                "gpu",
                "perfmeter",
                "compilation",
                "sp"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 673
        },
        "renderpass": [
            {
                "code": "// variant of  https://shadertoy.com/view/4tsBzN\n// more GPU reverse engineering (aka fragSniffing) here: https://hal.inria.fr/hal-01643579\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n\tO = texelFetch(iChannel0, ivec2(U), 0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Warp/SM/GPC tester. \n\n#define warp vec2(4,8)    // on nvidia warps are 4x8 pixels, aligned with window coordinates\n#define T 1               // repeat each cell\n\nvoid mainImage( out vec4 O, vec2 U )\n{                                        // N will adjust depending on your GPU power\n    int N = iFrame==0 ? 300000 : int( texelFetch(iChannel0, ivec2(0),0).a );\n                                 \n    if ( floor(U/warp) == vec2(0) ) {    // --- eval(0,0). Simpler and free to compute the full warp\n        for(int i = 0; i< N; i++) \n            O.b += sin(iTime);\n        \n         O.a = iFrame<30  && iResolution.y>200.         // use 30 frames to adjust to your computer\n            ? float(N) * (.8 + .2*(1./31.)/iTimeDelta ) // relaxation towards 30fps goal.\n            : float(N);\n    }       \n    else                                 // --- offset of second sample evaluation \n    { \n        O = texelFetch(iChannel0, ivec2(U), 0);   \n        vec2 V = floor(U/warp), R = floor(iResolution.xy/warp);\n        if (  // V == U/warp &&         // if commented: simpler and free to compute the full warp\n              (iFrame-30)/T == int(V.x+V.y*R.x) ) {     // diverging costly branch...\n            for(int i = 0; i< N; i++)                   // ...only if offset is in the same warp than (0,0)\n                O.a += cos(iTime);\n    \n             O.rgb += 1./float(T)/(iTimeDelta*60.) ;    // draw performance map. max = 60 fps\n     }  } \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}