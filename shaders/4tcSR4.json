{
    "Shader": {
        "info": {
            "date": "1478268625",
            "description": "Day 3 - Trying out the smooth minimum on 2 shapes\nFollowing super tutorial from hughsk\nhttps://hughsk.io/fragment-foundry/chapters/09b-blending-shapes.html",
            "flags": 0,
            "hasliked": 0,
            "id": "4tcSR4",
            "likes": 9,
            "name": "#codevember - 03",
            "published": 3,
            "tags": [
                "noob",
                "smoothmin",
                "codevember"
            ],
            "usePreview": 0,
            "username": "jcksmssng",
            "viewed": 925
        },
        "renderpass": [
            {
                "code": "float map(float value, float oldMin, float oldMax, float newMin, float newMax) {\n    return newMin + (newMax - newMin) * (value - oldMin) / (oldMax - oldMin);\n}\n\n// Smooth minimum by the great iquilezles.org\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat circle ( vec2 point, vec2 orig, float radius ) {\n   \treturn length(point - orig) - radius;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Fixes the aspect ratio to match a square frame\n\t// get values between -1 and +1 for the current pixel\n    vec2 res = iResolution.xy;\n\tvec2 uv = (2.0 * fragCoord - res) / res.y;\n    float radius = 0.5;\n    \n    // Create the circles and apply smooth min to them\n    float circle1 = circle(uv, vec2(sin(iTime) * .9, 0.0), radius);\n    float circle2 = circle(uv, -1.0 * vec2(sin(iTime) * .9, 0.0), radius);\n    float dist = smin(circle1, circle2, .3);\n    \n    // Put back the pos.x in a (0.0, 1.0) coordinates\n    // Then if dir is < 0.0 return the pos otherwise 1.0 - pos\n    float m = map(uv.x, -1.0, 1.0, 0.0, 1.0);\n    float c = dist < 0.0 ? m : 1.0 - m;\n\tvec3 color = vec3(.5 * c, .18, .2 * c);\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}