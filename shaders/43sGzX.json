{
    "Shader": {
        "info": {
            "date": "1707772985",
            "description": "Sobel. Set the option pre-processor variable.\n1: Edge detection\n2: Gradient\n3: Angle\n4: Brightness (Of original)\n5: Direction\n6: Outlines",
            "flags": 0,
            "hasliked": 0,
            "id": "43sGzX",
            "likes": 0,
            "name": "Sobel???",
            "published": 3,
            "tags": [
                "sobel"
            ],
            "usePreview": 0,
            "username": "pathtracerenthusiast",
            "viewed": 156
        },
        "renderpass": [
            {
                "code": "#define S(uv) texture(iChannel0,uv).xyz\n#define Idx(I,J) int(I+1.0)+3*int(J+1.0)\n#define R iResolution.xy\n\n#define OPTION 0\n#define RADIUS 1.0\n\nfloat intensity(vec3 color) {\n    return sqrt(dot(color*color,vec3(0.299,0.587,0.114)));\n}\n\nvec3 sobelX(vec3 samples[9]) {\n    vec3 bl =     samples[Idx(-1.0,-1.0)];\n    vec3 l =  2.0*samples[Idx(-1.0, 0.0)];\n    vec3 tl =     samples[Idx(-1.0, 1.0)];\n    vec3 br =    -samples[Idx( 1.0,-1.0)];\n    vec3 r = -2.0*samples[Idx( 1.0, 0.0)];\n    vec3 tr =    -samples[Idx( 1.0, 1.0)];\n    return bl+l+tl+br+r+tr;\n}\n\nvec3 sobelY(vec3 samples[9]) {\n    vec3 bl =    -samples[Idx(-1.0,-1.0)];\n    vec3 b = -2.0*samples[Idx( 0.0,-1.0)];\n    vec3 br =    -samples[Idx( 1.0,-1.0)];\n    vec3 tl =     samples[Idx(-1.0, 1.0)];\n    vec3 t =  2.0*samples[Idx( 0.0, 1.0)];\n    vec3 tr =     samples[Idx( 1.0, 1.0)];\n    return bl+b+br+tl+t+tr;\n}\n\nvec4 sobel(vec3 samples[9]) { // x part is the strength of the gradient\n    vec3 x = sobelX(samples); //yz part is the gradient\n    vec3 y = sobelY(samples); //w part is the angle of the gradient\n    return vec4(intensity(sqrt(x*x + y*y)),intensity(x),intensity(y),atan(y,x));\n}\n\nvoid mainImage( out vec4 o, in vec2 i ) {\n    vec3 samples[9];\n    for (float I = -1.0; I < 2.0; I ++) {\n        for (float J = -1.0; J < 2.0; J ++) {\n            samples[Idx(I,J)] = S((i+vec2(I,J)*RADIUS)/R);\n        }\n    }\n    vec4 s = sobel(samples);\n    #if OPTION == 1\n    o = vec4(vec3(s.x),1.0);\n    #elif OPTION == 2\n    o = vec4(0.5+0.5*s.yz,0.0,1.0);\n    #elif OPTION == 3\n    o = vec4(vec3(s.w/6.8319),1.0);\n    #elif OPTION == 4\n    o = vec4(vec3(intensity(samples[Idx(0.,0.)])),1.0);\n    #elif OPTION == 5\n    o = vec4(0.5+0.5*s.x*vec2(cos(s.w),sin(s.w)),0.0,1.0);\n    #elif OPTION == 6\n    o = vec4(S(i/R)*(1.0-s.x*s.x),1.0);\n    #else\n    o = vec4(S(i/R),1.0);\n    #endif\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}