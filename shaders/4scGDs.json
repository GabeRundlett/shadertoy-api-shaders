{
    "Shader": {
        "info": {
            "date": "1452676505",
            "description": "simple shader for glow",
            "flags": 0,
            "hasliked": 0,
            "id": "4scGDs",
            "likes": 7,
            "name": "glow heart",
            "published": 3,
            "tags": [
                "2d",
                "simple"
            ],
            "usePreview": 0,
            "username": "CCFSA",
            "viewed": 806
        },
        "renderpass": [
            {
                "code": "// heart function refer to https://www.shadertoy.com/view/MsSXzh\n//\n// formula SRC: http://mathworld.wolfram.com/HeartCurve.html\n\nfloat heartRadius(float theta)\n{\n    return 2. - 2.*sin(theta) + sqrt(abs(cos(theta)))*sin(theta)/(1.4 + sin(theta));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 _BgColor = vec4(0,0,0,0);\n    vec2 originalPos = (2.0 * fragCoord - iResolution.xy)/iResolution.yy;\n    vec2 pos = originalPos;\n    pos.y -= 0.5;        \t\n\n    pos.x /= (0.05*sin(iTime*5.0) + 0.8);\n    pos.y /= (0.05*cos(iTime*11.0) + 0.8);\n    //float a = pow(pos.x*pos.x + pos.y*pos.y - 1, 3);      \t\n    //float b = pos.x*pos.x*pos.y*pos.y*pos.y;\n\n    float theta = atan(pos.y, pos.x);\n    float r = heartRadius(theta);\n\n    // èƒŒæ™¯è‰²\n    fragColor = _BgColor;\n    fragColor = mix(fragColor, vec4(0.5*sin(iTime*4.0),0.69*cos(iTime*2.0),0.94,1.0), \n                     smoothstep(0.0, length(pos), r/8.0));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}