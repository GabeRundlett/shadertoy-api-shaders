{
    "Shader": {
        "info": {
            "date": "1623767618",
            "description": "fractal",
            "flags": 0,
            "hasliked": 0,
            "id": "sljGWz",
            "likes": 11,
            "name": "Fractal 58_gaz",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "gaz",
            "viewed": 373
        },
        "renderpass": [
            {
                "code": "float SUM; \nfloat TIME;\nfloat T;\n\nvoid Q(float interval){\n  T=clamp((TIME-SUM)/interval,0.,1.);\n  SUM=SUM+interval;\n}\n\nfloat apollonian(inout vec3 p)\n{\n    p=mod(p-2.,4.)-2.;\n    \n    float r=12.5;\n    float x=5.2;\n    float y=7.1;\n    float z=2.5;\n        \n    SUM=0.;\n    TIME = mod(iTime,18.);\n    Q(2.);\n    r+=T*T*3.;\n    Q(2.);\n    x-=T*T*5.;\n    Q(2.);\n    z-=T*T*2.;\n    Q(2.);\n    y-=T*T*3.;\n    Q(2.);\n    r+=T*T*2.;\n    Q(2.);\n    x+=T*T*2.;\n    Q(2.);\n    y+=T*T*3.;\n    Q(2.);\n    z+=T*T*4.;\n          \n    float e,s=2.;\n    for(int i=0;i<6;i++){\n        p=abs(p-vec3(x,y,z)*.05)-vec3(x,y,z-.3);\n        e=(r+.2)/clamp(dot(p,p),.1,r);\n        s*=e;\n        p=abs(p)*e;\n    }\n    return min(length(p.xz),p.y)/s;\n}\n\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    vec3 p,r=iResolution;\n    vec3 ro=eye(iTime);\n    vec3 ta =target(iTime);\n    vec3 rd=lookat(ro,ta,vec3(0,1,0))*normalize(vec3((C-.5*r.xy)/r.y,1));\n    \n    for(float i=1.,g=1.5,e;i<99.;i++)\n    {\n        p=g*rd+ro;\n        g+=e=apollonian(p)+.001;\n        O.rgb+=mix(vec3(1),hue(length(p)*.2),.6)*.002/e/i;\n    }\n\n    for(float i=1.,g=0.,e;i<99.;i++){\n        p=g*rd+ro;\n        p=mod(p-.2,1.)-.5;\n        g+=e=length(p.xz)-.005;\n        e<.001?O.g+=.2/i:i;\n    }\n\n    for(float i=1.,g=0.,e;i<99.;i++){\n        p=g*rd+ro;\n        p=mod(p-.5,1.)-.5;\n        g+=e=length(p.yz)-.005;\n        e<.001?O.r+=.2/i:i;\n    }\n\n    for(float i=1.,g=0.,e;i<99.;i++){\n        p=g*rd+ro;\n        \n        p=mod(p+.1,1.)-.5;\n        g+=e=length(p.xy)-.005;\n        e<.001?O.b+=.3/i:i;\n    }\n    O.xyz = min(O.xyz, .95);\n    O.xyz = pow(O.xyz, vec3(.8,1.2,3.));\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define PI acos(-1.0)\n#define TAU PI*2.0\n\n#define hue(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\n#define hash(n) fract(sin(n)*5555.0)\n\nvec3 randVec(float n)\n{\n    float a=(hash(n)*2.-1.)*TAU,b=asin(hash(n+215.3)*2.-1.);\n    return vec3(cos(a),sin(a)*cos(b),sin(a)*sin(b));\n}\n\nvec3 randCurve(float t,float n)\n{\n    t*=0.15;\n    vec3 p = vec3(0);\n    for (int i=0; i<3; i++)\n    {\n        p += randVec(n+=365.)*sin((t*=1.3)+sin(t*0.6)*0.5);\n    }\n    return p;\n}\n\nvec3 eye(float time){\n    float seed=12713.0;\n    return randCurve(time,seed)*5.0;\n}\n\nvec3 target(float time){\n    float seed=12713.0;\n    return randCurve(time+2.5,seed)*5.0;\n}\n\nmat3 lookat(vec3 eye, vec3 target, vec3 up)\n{\n    vec3 w = normalize(target-eye), u = normalize(cross(w,up));\n    return mat3(u,cross(u,w),w);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}