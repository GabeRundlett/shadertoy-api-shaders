{
    "Shader": {
        "info": {
            "date": "1726420113",
            "description": "source https://glslsandbox.com/e#63317.0",
            "flags": 0,
            "hasliked": 0,
            "id": "l3fyR2",
            "likes": 0,
            "name": "tunnel triangle",
            "published": 3,
            "tags": [
                "tunnel",
                "triangle",
                "rotate"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 70
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\n\nfloat DEG2RAG = 0.0174532925199;\n#define time iTime\n#define resolution iResolution.xy\n\nfloat tri2(vec2 pos)\n{\n\tfloat a = dot(pos, vec2(sin( 60.0*DEG2RAG), cos( 60.0*DEG2RAG)));\n\tfloat b = dot(pos, vec2(sin(-60.0*DEG2RAG), cos(-60.0*DEG2RAG)));\t\n\tfloat c = -pos.y;\n\tfloat d = 0.2*(60.0*DEG2RAG);\n\t\t\t\n\tfloat u1 = a - d*0.25;\n\tfloat v1 = b - d*0.25;\n\tfloat w1 = c - d*0.30;\n\t\n\tfloat u2 = c + d*1.25;\n\tfloat v2 = b + d*1.25;\n\tfloat w2 = a + d*1.25;\n\t\n\tfloat t1 = min(u2, min(u1, v1));\n\tfloat t2 = min(v2, min(w1, u1));\n\tfloat t3 = min(w2, min(v1, w1));\n\t\n\tfloat res = max(max(t1, t2), t3);\n\treturn 0.0022/abs(res);\n}\n\n\nfloat tri(vec2 pos)\n{\n\tfloat a = dot(pos, vec2(sin( 60.0*DEG2RAG), cos( 60.0*DEG2RAG)));\n\tfloat b = dot(pos, vec2(sin(-60.0*DEG2RAG), cos(-60.0*DEG2RAG)));\t\n\tfloat c = -pos.y;\n\t\t\t\t\n\tfloat result = 0.002/abs(min(min(0.05-a,0.05-b), 0.05-c));\n\treturn result;\n}\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    \n    vec2 pos = (2.0*C.xy - resolution.xy)/max(resolution.x, resolution.y) / 16.0;\n    vec3 p,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<70.;\n        O.xyz+=mix(vec3(3),H(g*1.1),.8)*7./e/8e3\n    )\n    {\n        p=g*d;\n          float xtime =iTime * 1.2;\n       mat2 rot = mat2(cos(xtime),-sin(xtime), \n\t\t\tsin(xtime), cos(xtime));\n   \n\t\n\tfloat xzoom = 1.5;\n\tfloat zoom = xzoom/(mod(-iTime , xzoom)+xzoom)*3.0-1.0;\n     p.xy*=rot;\n     \nvec3 result = vec3(0.0);\n\tfor(int i = 0 ; i < 10 ; i++)\n\t{\n\t\tresult += vec3(tri(pos), tri(-pos*0.5), tri2(pos));\n\t\tpos /= 0.25;\n        pos*=zoom;\n      \n\t}\n        a=30.;\n        p=mod(p-a,a*2.)-a;\n        s=0.5;\n        for(int i=0;i++<8;){\n            p=.25-abs(p);\n          \n            p.x<p.z?p=p.zyx:p;\n            p.z<p.y?p=p.xzy:p;\n            s*=e=1.2+sin(iTime*.01)*.1;\n            p=abs(p)*e-\n                vec3(\n                    5.*3.,\n                    120,\n                    8.*5.\n                 )*result;\n         }\n         g+=e=length(p.zxxz)/s;\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}