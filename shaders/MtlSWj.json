{
    "Shader": {
        "info": {
            "date": "1439872786",
            "description": "Gaussian blur. Use the mouse to control blur",
            "flags": 0,
            "hasliked": 0,
            "id": "MtlSWj",
            "likes": 39,
            "name": "DF Gaussian Blur",
            "published": 3,
            "tags": [
                "2d",
                "blur"
            ],
            "usePreview": 1,
            "username": "demofox",
            "viewed": 7278
        },
        "renderpass": [
            {
                "code": "const int   c_samplesX    = 15;  // must be odd\nconst int   c_samplesY    = 15;  // must be odd\nconst float c_textureSize = 512.0;\n\nconst int   c_halfSamplesX = c_samplesX / 2;\nconst int   c_halfSamplesY = c_samplesY / 2;\nconst float c_pixelSize = (1.0 / c_textureSize);\n\nfloat Gaussian (float sigma, float x)\n{\n    return exp(-(x*x) / (2.0 * sigma*sigma));\n}\n\nvec3 BlurredPixel (in vec2 uv)\n{\n    float c_sigmaX      = iMouse.z > 0.0 ? 5.0 * iMouse.x / iResolution.x : (sin(iTime*2.0)*0.5 + 0.5) * 5.0;\n\tfloat c_sigmaY      = iMouse.z > 0.0 ? 5.0 * iMouse.y / iResolution.y : c_sigmaX;\n    \n    float total = 0.0;\n    vec3 ret = vec3(0);\n        \n    for (int iy = 0; iy < c_samplesY; ++iy)\n    {\n        float fy = Gaussian (c_sigmaY, float(iy) - float(c_halfSamplesY));\n        float offsety = float(iy-c_halfSamplesY) * c_pixelSize;\n        for (int ix = 0; ix < c_samplesX; ++ix)\n        {\n            float fx = Gaussian (c_sigmaX, float(ix) - float(c_halfSamplesX));\n            float offsetx = float(ix-c_halfSamplesX) * c_pixelSize;\n            total += fx * fy;            \n            ret += texture(iChannel0, uv + vec2(offsetx, offsety)).rgb * fx*fy;\n        }\n    }\n    return ret / total;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * vec2(1,-1);\n\tfragColor = vec4(BlurredPixel(uv), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}