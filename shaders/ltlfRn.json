{
    "Shader": {
        "info": {
            "date": "1511244056",
            "description": "fractal",
            "flags": 0,
            "hasliked": 0,
            "id": "ltlfRn",
            "likes": 17,
            "name": "first fractal attempt",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "ShnitzelKiller",
            "viewed": 2805
        },
        "renderpass": [
            {
                "code": "#define iters 30\n#define tol 0.05\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //vec2 c = (iMouse.xy/iResolution.xy - vec2(0.5))*2.;\n    vec2 c = vec2(-0.25 + 0.17*cos(iTime/2.+1.5),-0.25 + 0.17*sin(iTime/2.+1.8));\n\tvec2 uv = (fragCoord.xy / iResolution.y - vec2(0.5*iResolution.x/iResolution.y, 0.5)).yx*1.5;\n    \n    int i;\n    for (i=0; i<iters; i++) {\n        uv = 0.5*abs(uv) / dot(uv, uv) + c;\n    }\n    //fragColor = dot(uv, uv) < tol ? vec4(1.) : vec4(0., 0., 0., 1.);\n    fragColor = vec4(vec3(abs(dot(uv, uv) - tol)*2.), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}