{
    "Shader": {
        "info": {
            "date": "1585609512",
            "description": "What do you see there?",
            "flags": 0,
            "hasliked": 0,
            "id": "3sscDj",
            "likes": 4,
            "name": "What am I looking at?",
            "published": 3,
            "tags": [
                "trippy"
            ],
            "usePreview": 0,
            "username": "BigETI",
            "viewed": 341
        },
        "renderpass": [
            {
                "code": "const float beginZoomFactor = 20.0f;\n\nconst float endZoomFactor = 100.0f;\n\nconst float quarterPi = 0.78539816339f;\n\nconst float pi = 3.14159265359f;\n\nconst float doublePi = 6.28318530718f;\n\nconst float turnsPerSecond = 2.0f;\n\nconst vec2 movementSpeed = vec2(-200.0f, -200.0f);\n\nconst float zoomSpeed = 0.03125f;\n\nconst float spacing = 8.0f;\n\nconst float seperation = 32.0f;\n\nconst vec3 positions[] = vec3[]\n(\n    vec3(0.0f, 0.0f, 0.0f),\n    vec3(0.0f, spacing, 0.0f),\n    vec3(0.0f, -spacing, 0.0f),\n    vec3(spacing, 0.0f, 0.0f),\n    vec3(-spacing, 0.0f, 0.0f),\n    vec3(spacing * cos(quarterPi), spacing * sin(quarterPi), 0.0f),\n    vec3(-spacing * cos(quarterPi), spacing * sin(quarterPi), 0.0f),\n    vec3(spacing * cos(quarterPi), -spacing * sin(quarterPi), 0.0f),\n    vec3(-spacing * cos(quarterPi), -spacing * sin(quarterPi), 0.0f)\n);\n    \nvec4 AlphaBlend(const in vec4 bottom, const in vec4 top)\n{\n    float alpha = top.a + bottom.a * (1.0f - top.a);\n    return vec4((top.rgb * top.a + bottom.rgb * bottom.a * (1.0f - top.a)) / alpha, alpha);\n}\n\nvec4 Sphere(const in vec3 position, const in vec4 innerColor, const in vec4 outerColor, const in vec2 uv)\n{\n    vec4 ret = vec4(0.0f);\n    vec2 offset_uv = uv - position.xy;\n    if ((offset_uv.x * offset_uv.x) + (offset_uv.y * offset_uv.y) < 1.0f)\n    {\n        float view_dot_normal = dot(vec3(0.0f, 0.0f, 1.0f), vec3(offset_uv.x, offset_uv.y, sqrt(1.0f - (offset_uv.x * offset_uv.x) - (offset_uv.y * offset_uv.y))));\n        ret = clamp((innerColor * view_dot_normal) + (outerColor * (1.0f - view_dot_normal)), 0.0f, 1.0f);\n    }\n    return ret;\n}\n\nvec4 Spheres(const in vec4 backgroundColor, const in vec4 innerColor, const in vec4 outerColor, const in vec2 uv, const in bool revert)\n{\n    vec4 ret = backgroundColor;\n    for (int index = 0; index < positions.length(); index++)\n    {\n        float theta = iTime * doublePi * (revert ? -turnsPerSecond : turnsPerSecond);\n        float cos_theta = cos(theta);\n        float sin_theta = sin(theta);\n        vec3 position = vec3((positions[index].x * cos_theta) - (positions[index].y * sin_theta), (positions[index].x * sin_theta) + (positions[index].y * cos_theta), positions[index].z);\n        ret = AlphaBlend(ret, Sphere(position, innerColor, outerColor, mod(uv + (seperation * 0.5f), seperation) - (seperation * 0.5f)));\n    }\n    return ret;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec4 color = vec4(0.125f, 0.125f, 0.25f, 1.0f);\n    vec2 uv = ((fragCoord - iMouse.xy - (iResolution.xy * 0.5f)) * mix(endZoomFactor, beginZoomFactor, (cos(iTime * doublePi * zoomSpeed) * 0.5f) + 0.5f) / iResolution.y) + vec2(movementSpeed.x * cos(iTime), movementSpeed.y * sin(iTime));\n    color = Spheres(color, vec4(1.0f, 0.75f, 0.75f, 0.75f), vec4(1.0f, 0.25f, 0.25f, 0.75f), uv, false);\n    color = Spheres(color, vec4(0.75f, 1.0f, 0.75f, 0.75f), vec4(0.25f, 1.0f, 0.25f, 0.75f), uv + vec2(seperation * 0.5f, seperation * 0.5f), false);\n    color = Spheres(color, vec4(0.75f, 1.0f, 0.75f, 0.75f), vec4(0.25f, 1.0f, 0.25f, 0.75f), uv + vec2(0.0f, seperation * 0.5f), true);\n    color = Spheres(color, vec4(0.75f, 0.75f, 1.0f, 0.75f), vec4(0.25f, 0.25f, 1.0f, 0.75f), uv + vec2(seperation * 0.5f, 0.0f), true);\n    fragColor = vec4(color.xyz, 1.0f);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}