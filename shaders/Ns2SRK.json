{
    "Shader": {
        "info": {
            "date": "1620578592",
            "description": "Cloud shader generated from this tutorial:\nhttps://www.youtube.com/watch?v=hwa6XRXd1xQ",
            "flags": 0,
            "hasliked": 0,
            "id": "Ns2SRK",
            "likes": 5,
            "name": "Cloud Shader",
            "published": 3,
            "tags": [
                "cloudshader"
            ],
            "usePreview": 0,
            "username": "spectajin",
            "viewed": 350
        },
        "renderpass": [
            {
                "code": "float noise(vec2 pq) {\n    return fract(\n        sin(\n        (pq.x * 19.) + iTime/11111111150. + \n        (pq.y * 180.) + iTime/11111111150.)* 360.);\n}\n\nfloat noiseSmooth(vec2 pq) {\n    vec2 index = floor(pq);\n    \n    vec2 frag = fract(pq);\n    frag = smoothstep(0.0, 1.0, frag);\n    \n    float topLeft = noise(index);\n    float topRight = noise(index + vec2(1,0));\n    float top = mix(topLeft,topRight, frag.x);\n    \n    float bottomLeft = noise(index + vec2(0,1));\n    float bottomRight = noise(index + vec2(1,1));\n    float bottom = mix(bottomLeft, bottomRight, frag.x);\n    \n    return mix(top, bottom, frag.y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 sky = vec3(0.09, 0.7, 1.5) * (1.5 - uv.y) / (1.5 - uv.y) * 0.5; \n    \n    // uv += iMouse.xy / 20.;\n    uv.x += iTime / 35.;\n    \n    vec2 uv2 = uv;\n    \n     \n    uv2 += sin(iTime / 120.);\n    vec2 uv3 = uv;\n    uv3 += cos(iTime / 90.);\n     \n     \n    // Time varying pixel color\n    vec3 col = vec3(noiseSmooth(uv * 2.));\n    col += vec3(noiseSmooth(uv3 * 32.)) * 0.125;\n    col += vec3(noiseSmooth(uv3 * 64.)) * 0.0625;\n    col += vec3(noiseSmooth(uv2 * 16.)) * 0.25;\n    col += vec3(noiseSmooth(uv * 8.)) * 0.5;\n    col /= 1.5;\n    \n    col *= smoothstep(0.2, 0.9, (col + vec3(noiseSmooth(uv2 * 8.)) * 0.5)-0.1);\n    col = mix(vec3(1.), sky, 1. - col);\n     \n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}