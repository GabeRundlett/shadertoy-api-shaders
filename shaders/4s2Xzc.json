{
    "Shader": {
        "info": {
            "date": "1414495914",
            "description": "A 2D texture effect really, made by applying TekF's \"Retro Parallax\" shader's technique (https://www.shadertoy.com/view/4sSGD1) to my \"Fly\" shader (https://www.shadertoy.com/view/XsX3Rn). Motion blur added for fun. No raymarching used for this.",
            "flags": 0,
            "hasliked": 0,
            "id": "4s2Xzc",
            "likes": 50,
            "name": "Cave",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "motionblur"
            ],
            "usePreview": 0,
            "username": "iq",
            "viewed": 8078
        },
        "renderpass": [
            {
                "code": "// Copyright Inigo Quilez, 2014 - https://iquilezles.org/\n// I am the sole copyright owner of this Work.\n// You cannot host, display, distribute or share this Work in any form,\n// including physical and digital. You cannot use this Work in any\n// commercial or non-commercial product, website or project. You cannot\n// sell this Work and you cannot mint an NFTs of it.\n// I share this Work for educational purposes, and you can link to it,\n// through an URL, proper attribution and unmodified screenshot, as part\n// of your educational material. If these conditions are too restrictive\n// please contact me and we'll definitely work it out.\n\n#define HSAMPLES 100    // try 512\n#define MSAMPLES   8    // try  12\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2  p = (-iResolution.xy+2.0*fragCoord.xy)/iResolution.y;\n    float t =  12.25 + iTime;\n\t\n    float an = 0.2*sin( -0.5*t );\n    float co = cos( an ), si = sin( an );\n    p = mat2(co,-si,si,co) * p;\n    \n    float ra = texture( iChannel1, fragCoord.xy/iChannelResolution[1].xy ).x;\n    \n    vec3 tot = vec3(0.0);\n    for( int j=0; j<MSAMPLES; j++ )\n    {\n        float time = t + 0.5*(1.0/24.0)*(float(j)+ra)/float(MSAMPLES);\n        vec2  offset = time*vec2(0.03,0.015);\n\t\n        vec3 uv;\n        for( int i=0; i<HSAMPLES; i++ )\n        {\n            uv.z = (float(i)+ra)/float(HSAMPLES-1);\n            uv.xy = offset + vec2(p.x,1.0)/abs(p.y) * (0.001+0.0125*uv.z) * 0.5 + sign(p.y)*0.1;\n            if( texture( iChannel0, uv.xy ).x < uv.z )\n                break;\n        }\n    \n        vec2  uv2 = offset + vec2(p.x-0.04,1.0)/abs(p.y) * (0.001+0.0125*uv.z) * 0.5 + sign(p.y)*0.1;\n        float dif = clamp( texture(iChannel0, uv.xy).x - texture(iChannel0, uv2.xy).x, 0.0, 1.0 );\n        vec3  col = vec3(2.0);\n        col *= 0.2+0.9*texture( iChannel0, 24.0*uv.xy, 0.0 ).xyz;\n        col *= 0.5+0.5*texture( iChannel0, 128.0*uv.xy, 0.0 ).xyz;\n        col *= 1.0-1.0*uv.z;\n        col *= vec3(0.4,0.56,0.7)*0.7 + vec3(16.0,9.0,3.0)*dif;\n        col *= clamp(3.0*abs(p.y)  - 0.6*uv.z + 0.1,0.0,2.0);\n        tot += col;\n    }\n    tot /= float(MSAMPLES);\n \n    fragColor = vec4( tot*smoothstep(0.0,2.0,iTime), 1.0 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}