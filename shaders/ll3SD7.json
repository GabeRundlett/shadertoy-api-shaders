{
    "Shader": {
        "info": {
            "date": "1479916351",
            "description": "Testing noise convergence and stats, click to view histogram.",
            "flags": 32,
            "hasliked": 0,
            "id": "ll3SD7",
            "likes": 9,
            "name": "noise convergence test",
            "published": 3,
            "tags": [
                "test",
                "noise",
                "convergence"
            ],
            "usePreview": 0,
            "username": "public_int_i",
            "viewed": 491
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 samp = texture(iChannel0, uv);\n\tfragColor = vec4(clamp(.5+(samp.x/samp.y-0.5)*(pow(10.,2.*uv.x)),0.,1.));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\nvec4 hash(vec4 a) {\n\treturn fract(abs(sin(a.ywxz*766.345)+cos(normalize(a)*4972.92855))*2048.97435+abs(a.wxyz)*.2735);\n}\n\n#define PI 3.14159265358979\n\n#define rand1(u) fract((fract(u.x*.87654321)+fract(u.y*.987654321)+iTime)*PI)\n//#define rand1(u) hash(u.xyxy*.97234+float(iFrame)*.13131).x\n#define rand2(u) texelFetch(iChannel1,ivec2(mod(u+float(iFrame)*vec2(299.89723,33.87234),1024.)),0).x\n\nvoid mainImage( out vec4 o, in vec2 u)\n{\n    if (iFrame == 0) {\n        o = vec4(0);\n        return;\n    }\n    \n    float div = u.y-iResolution.y*.5,v;\n    if (abs(div) < 1.) v = .3;\n    else if (div > 0.) v = rand1(u);\n    else v = rand2(u);\n\to = texelFetch(iChannel0,ivec2(u),0)+vec4(v,1,0,0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}