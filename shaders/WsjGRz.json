{
    "Shader": {
        "info": {
            "date": "1547995546",
            "description": "This is a practice of fractal brownian motion and domain wraping.\nThe fbm is applied on a basic 2D noise and domain wraping corresponds to 3 pass on the fbm.",
            "flags": 0,
            "hasliked": 0,
            "id": "WsjGRz",
            "likes": 11,
            "name": "fbm and domain wraping",
            "published": 3,
            "tags": [
                "noise",
                "fbm",
                "palette",
                "domainwraping"
            ],
            "usePreview": 0,
            "username": "Eseris",
            "viewed": 728
        },
        "renderpass": [
            {
                "code": "// #define DEBUG_PALETTE\n\nfloat hash21(vec2 v) {\n    return fract(sin(dot(v, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat noise(vec2 uv) {\n\tvec2 f = fract(uv);\n\tvec2 i = floor(uv);\n\tf = f * f * (3. - 2. * f);\n\treturn mix(\n\t\tmix(hash21(i), hash21(i + vec2(1,0)), f.x),\n\t\tmix(hash21(i + vec2(0,1)), hash21(i + vec2(1,1)), f.x), f.y);\n}\n\nfloat fbm(vec2 uv) {\n\tfloat freq = 2.;\n\tfloat amp = .5;\n\tfloat gain = .54;\n\tfloat v = 0.;\n\tfor(int i = 0; i < 6; ++i) {\n\t\tv += amp * noise(uv);\n\t\tamp *= gain;\n\t\tuv *= freq;\n\t}\n\treturn v;\n}\n\nfloat fbmPattern(vec2 p, out vec2 q, out vec2 r) {\n\tfloat qCoef = 2.;\n\tfloat rCoef = 3.;\n\tq.x = fbm(p             + .0  * iTime);\n\tq.y = fbm(p             - .02 * iTime + vec2(10., 7.36));\n\tr.x = fbm(p + qCoef * q + .1  * iTime + vec2(5., 3.));\n\tr.y = fbm(p + qCoef * q - .07 * iTime + vec2(10., 7.36));\n\treturn fbm(p + rCoef * r + .1 * iTime);\n}\n\nvec3 basePalette(float t) {\n\treturn .5 + .6 * cos(6.283185 * (-t + vec3(.0, .1, .2) - .2));\n}\n\nvec3 smokePalette(float t) {\n\treturn vec3(.6, .5, .5) \n\t\t+ .5 * cos(6.283185 * (-vec3(1., 1., .5) * t + vec3(.2, .15, -.1) - .2));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord/iResolution.yy;\n\n\tfloat scale = 5.;\n\tvec3 col = vec3(.1);\n\tfloat n;\n\n\tvec2 q;\n\tvec2 r;\n\tn = fbmPattern(scale * uv, q, r);\n\tvec3 baseCol = basePalette(r.x);\n\tvec3 smokeCol = smokePalette(n);\n\n\tcol = mix(baseCol, smokeCol, pow(q.y, 1.3));\n\n#ifdef DEBUG_PALETTE\n    float x = fragCoord.x / iResolution.x;\n\tcol = mix(col, basePalette(x), step(abs(uv.y - .03), .02));\n\tcol = mix(col, smokePalette(x), step(abs(uv.y - .08), .02));\n#endif\n\n\tfragColor = vec4(col, 1);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}