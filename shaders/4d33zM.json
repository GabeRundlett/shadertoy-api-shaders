{
    "Shader": {
        "info": {
            "date": "1448521099",
            "description": "Can you compress it or make it smallest?Ok let us challenge it! The smallest is winner. Codegolf.\nRules : you can change all the code and the scale and position,but make it similar to the original appearance.:)",
            "flags": 0,
            "hasliked": 0,
            "id": "4d33zM",
            "likes": 5,
            "name": "Smallest Haunted Galloper(158)",
            "published": 3,
            "tags": [
                "3d",
                "uv",
                "challenge",
                "codegolf",
                "samllest"
            ],
            "usePreview": 0,
            "username": "834144373",
            "viewed": 893
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage( out vec4 o, vec2 i ) {\n    i.x*=.8;\n    float L=length(i=i/iResolution.xy*.5-.25);\n    \n    o = texture(iChannel0,.75 + 3.*i - i/L/.89 -.6*iDate.wx);\n    o += o -= sqrt(L)*(o+.7); \n}\n\n//the newsmallest version is 154 chars now!\n//And the version and the shader is belong to coyote! Cheers!:)\n//-----------------------------------------------------\n/*\nvoid mainImage( out vec4 o, vec2 i ) {\n    i.x*=.8;\n    float L=length(i=i/iResolution.xy*.5-.25);\n    \n    o = texture(iChannel0,.75 + 3.*i-i/L-.6*iDate.wx); \n    o += o -= sqrt(L)*(o+.7); \n}\n*/\n//------------------------------------------------------\n\n/*\n//the newsmallest version is 170 chars !\nvoid mainImage( out vec4 o, vec2 i ) {\n    i.x*=.8;\n    float L=length(i=i/iResolution.xy*.5-.25);\n    \n    //to reduce 1 char to 171 by coyote\n    o = texture(iChannel0,.8 - smoothstep(.3,0.,L)*i/L-.6*iDate.wx-i); //coyote\n    o += o -= sqrt(L)*(o+.7);   //coyote\n    ***\n\t\to = 2.*texture(iChannel0,.75 - i/L * smoothstep(.3,0.,L)-.6*iDate.wx-i);//-4 chars to 174 by FabriceNeyret2\n\t\to -= sqrt(L)*(o+1.4);// by FabriceNeyret2\n    ***\n}\n*/\n\n\n/*\n    //the new smallest is 172 chars\n    void mainImage( out vec4 o, vec2 i ) {\n\n        //i/=iResolution.xy/.5; \n        i.x*=.8;\n\n        float L=length(i=i/iResolution.xy*.5-.25); //-2 to 172 by coyote.\n\n        //float L=length(i-=.25);    //-1 by coyote again.\n\n        o = 2.*texture(iChannel0,.75 - i/L * smoothstep(.3,0.,L)-.6*iDate.wx-i);//-4 chars to 174 by FabriceNeyret2\n        //o = 2.*texture(iChannel0,.75-i/L * smoothstep(.2,-.1,L-.1)-.6*iDate.wx-i);//178 by coyote\n     **    \n        float L=length(i-.25);\n        o = 2.*texture(iChannel0,( .25-i)/L * smoothstep(.2,-.1,L-.1)-.6*iDate.wx-i);\n     **    \n        o -= sqrt(L)*(o+1.4);// by FabriceNeyret2\n\n    }\n*/\n\n\n//another 179 chars version by FabriceNeyret2\n/*\nvoid mainImage( out vec4 o, vec2 i ) {\n    \n    i /= iResolution.xy*2.;\n\n    float  L= length(i-.25);\n\n    i += (i-.25)/L * smoothstep(.2,-.1,L-.1);\n    i.x += .6*iDate.w;\n\t\n    o = 2.*texture(iChannel0,-i); o -= sqrt(L)*(o+1.4);\n}\n*/\n\n//the new 183 chars version!\n/*\nvoid mainImage( out vec4 o, vec2 i ) {\n    \n    i/=iResolution.xy/.5;\n    i.x*=.8;\n\n    float L=length(i-.25);\n\t\n    \n    i += (i-.25)/L * smoothstep(.2,-.1,L-.1)+.6*iDate.wx; //coyote to 183 chars\n    \n    //i += (i-.25)/L * smoothstep(.2,-.1,L-.1);\n    //i.x += .6*iDate.w;//FabriceNeyret2\n    //i.x += .6*iTime; \n\t\n    o = 2.*texture(iChannel0,-i); o -= sqrt(L)*(o+1.4); //FabriceNeyret2 to 187 chars\n    //o = 2.*mix(texture(iChannel0,-i),vec4(-.7),sqrt(L)); //FabriceNeyret2\n    //o = mix(texture(iChannel0,-i),vec4(-.7),sqrt(L));\n    //o += o;\n}\n*/\n\n//the 197 chars version from coyote.\n/*\nvoid mainImage( out vec4 o, vec2 i ) {\n    \n    i/=iResolution.xy/.5;\n    i.x*=.8;\n\n    float L=length(i-.25);\n\n    i += (i-.25)/L * smoothstep(.2,-.1,L-.1);\n    i.x += .6*iTime;\n\n    o = mix(texture(iChannel0,-i),vec4(-.7),sqrt(L));\n    \n    o += o;\n}\n*/\n\n//here is the origin version by 834144373\n//https://www.shadertoy.com/view/ltlXzj\n/*\n//#define lig iMouse.y/iResolution.y;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv1 = fragCoord.xy / iResolution.xy ;\n    uv1 *= 0.5;uv1.x *= .8;\n    vec2 uv2 = uv1 - 0.5*0.5;\n\t\n    float d2 = length(uv2);\n    vec2 dir = normalize(uv2);\n    \n    uv1 += dir*smoothstep(.2,-0.1,d2-0.1);\n    uv1.x += 0.6*iTime;\n    \n\tvec3 col = texture(iChannel0,uv1).xyz;\n    col = mix(col,vec3(-0.7),sqrt(d2));\n    \n    col -= pow(col,vec3(4.));\n    col *=2.;\n    //here you can use this lig\n    //col *=1.+lig;\n\tfragColor = vec4(col,1.0);\n}\n\n\n*/\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}