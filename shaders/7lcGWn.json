{
    "Shader": {
        "info": {
            "date": "1635957352",
            "description": "my first attempt at making a shader",
            "flags": 0,
            "hasliked": 0,
            "id": "7lcGWn",
            "likes": 1,
            "name": "Rotating circle in circle",
            "published": 3,
            "tags": [
                "beginner",
                "circle"
            ],
            "usePreview": 0,
            "username": "LargeBee",
            "viewed": 216
        },
        "renderpass": [
            {
                "code": "/*\nUsed Part 1 and 2 of the tutorial by the art of code\nhttps://www.youtube.com/watch?v=u5HAYVHsasc\nhttps://www.youtube.com/watch?v=GgGBR4z8C9o\n\nand borrowed some code from this shader\nhttps://www.shadertoy.com/view/XsGfWw\n*/\n\nfloat Circle (vec2 uv, vec2 p, float r, float blur)\n{\n    float d = length(uv - p);\n    float c = smoothstep(r, r - blur, d);\n\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Normalize coordinates to values 0 -> 1\n    vec2 uv = fragCoord/iResolution.xy; //0 -> 1\n\n    //Map centre to origin\n    uv -= 0.5;                           //-0.5 -> 0.5\n\n    //Multiply uv.x by aspect ratio of screen\n    uv.x *= iResolution.x/iResolution.y;\n\n    float c = Circle(uv, vec2(0, 0), 0.4, 0.05);\n\n    float speed = 1.0;\n    float rotDist = 4.0;\n    vec2 pos = vec2(sin(iTime * speed) / rotDist, cos(iTime * speed) / rotDist);\n    c -= Circle(uv, pos, 0.1, 0.01);\n\n    //Output colour per pixel\n    fragColor = vec4(vec3(c), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}