{
    "Shader": {
        "info": {
            "date": "1651424371",
            "description": "30 Second timelapse:\nhttps://youtube.com/shorts/ffZjn80hv8c",
            "flags": 0,
            "hasliked": 0,
            "id": "stlBWB",
            "likes": 6,
            "name": "30 Minutes 4/16",
            "published": 3,
            "tags": [
                "3d",
                "trippy",
                "reflective"
            ],
            "usePreview": 0,
            "username": "scry",
            "viewed": 296
        },
        "renderpass": [
            {
                "code": "#define time iTime*0.1\n#define pi 3.14159265\n#define deg pi/180.\n\nmat2 r2d(float a) {\n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nfloat sdBox(vec3 p, vec3 s) {\n    return max(abs(p.z)-s.z,max(abs(p.x)-s.x,abs(p.y)-s.y));\n}\n\nvec3 isor(vec3 p) {\n    p.yz *= r2d(deg*35.265);\n    p.xz *= r2d(deg*45.);\n    return p;\n}\n\n//from https://stackoverflow.com/questions/15095909/from-rgb-to-hsv-in-opengl-glsl\n// All components are in the range [0…1], including hue.\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\n \n\n// All components are in the range [0…1], including hue.\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\n//#define dtime time*hill(time,10.)\nfloat bitm(vec2 uv,int c) {\n    float h = 5.;\n    float w = 3.;\n    int p = int(pow(2.,w));\n    float line1 = 9591.;\n    uv = floor(vec2(uv.x*w,uv.y*h))/vec2(w,w);\n    float c1 = 0.;\n    float cc = uv.x + uv.y*w;\n    c1 = mod( floor( float(c) / exp2(ceil(cc*w-0.6))) ,2.);\n    c1 *= step(0.,uv.x)*step(0.,uv.y);\n    c1 *= step(0.,(-uv.x+0.99))*step(0.,(-uv.y+1.6));\n    return (c1);\n}\n \n\nvec3 slogo(vec2 uv, float ar, float size) {\n    vec2 px = vec2(1./3.,1./5.);\n    float ls = 4.1;\n    uv.x = 0.993-uv.x;\n    uv *= 8.*ls*(1./size);\n    ls += 2.;\n    float ul = length(uv);\n    uv -= px.yx*0.5*0.5*ls;\n    ul = length(vec2(uv.x*0.5,uv.y)-0.5);\n    uv.x *= ar*1.75;\n    int s = 29671;\n    int c = 29263;\n    int r = 31469;\n    int y = 23186;\n    uv.x= 5.-uv.x;\n    float b = bitm(uv,s);\n    uv.x -= 1./3.*4.;\n    b += bitm(uv,c);\n    uv.x -= 1./3.*4.;\n    b += bitm(uv,r);\n    uv.x -= 1./3.*4.;\n    b += bitm(uv,y);\n    float rr = step(0.,uv.x+px.x*13.)*step(0.,uv.y+px.y)*step(0.,(-uv.x+px.x*4.))*step(0.,(-uv.y+px.y*6.));\n    b = clamp(b,0.,1.);\n    //b = rr*floor(b);\n    //float ptime = iTime;\n    vec3 l = hsv2rgb(vec3(b+iTime/40.,0.1,rr-b*1.9))*rr;\n    //l -= length(uv)*0.5;\n    //l -= ul*rr*0.6;\n    l -= 0.1-clamp(ul*0.1,rr*1.-b,0.1);\n    //l -= 3.-ul*2;\n    //l = clamp(l,-1.,1.);\n    return vec3(l);\n}\n\n\nvec4 map(vec3 p) {\n    vec3 o = p;\n    p.z -= 1.;\n    p.yz *= r2d(deg*35.265*sin(time));\n    p.xz *= r2d(deg*45.+time);\n    vec3 ob = isor(p);\n    float d = -sdBox(p,vec3(1.01));\n    d = min(d,sdBox(ob,vec3(0.01)));\n    //p.xz *= r2d(deg*45.);\n    p.xz = abs(p.xz);\n    p.xz *= r2d(deg*45.);\n    p.xy *= r2d(deg*45.);\n    p.xy = -abs(p.xy)+0.75;\n    p.xy *= r2d(-deg*45.);\n    p.xyz -= 0.5;\n    float pf = 3.;\n    p = (fract(p*pf)-0.5)/pf;\n    p.y = abs(p.y);\n    p.xz = abs(p.xz);\n    p.xz *= r2d(deg*45.);\n    p.xy *= r2d(deg*20.);\n    \n    p.x += 0.15;\n    d = min(d,max(sdBox(p,vec3(mix(0.15,0.2,sin(ob.y*4.+time)*0.5+0.5))),-(length(o.z)-0.075)));\n    //d = max(d,-(length(o.z)-0.075));\n    return vec4(p,d);\n}\n\nvec2 RM(vec3 ro, vec3 rd) {\n    float dO = 0.;\n    float ii = 0.;\n    for (int i=0;i<120;i++) {\n        vec3 p = ro+rd*dO;\n        float dS = map(p).w;\n        dO += dS;\n        ii *= 0.01;\n        if (dO > 100. || dS < 0.001) {break;}\n    }\n    return vec2(dO,ii);\n}\n\nvec3 calcNorm(vec3 p) {\n    vec2 h = vec2(0.001,0.);\n    return normalize(vec3(\n        map(p+h.xyy).w-map(p-h.xyy).w,\n        map(p+h.yxy).w-map(p-h.yxy).w,\n        map(p+h.yyx).w-map(p-h.yyx).w\n    ));\n}\n\nvec3 colo(vec3 p, vec3 n, vec2 d) {\n    //vec3 col = sin(n+d.y*20.);\n    vec3 col = 1.-d.xxx*0.6;\n    col *= sin(vec3(0.3,0.36,0.5)*d.x*5.+vec3(0.3,0.8,0.1)*d.y*200.);\n    return clamp(col,0.,1.);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 R = iResolution.xy;\n    vec2 tv = uv;\n    float ar = R.x/R.y;\n    uv -= 0.5;\n    uv.x *= ar;\n    float c = length(uv);\n    vec3 col = vec3(0.);\n    vec3 ro = vec3(0.);\n    vec3 rd = normalize(vec3(uv,1.));\n    vec2 d = RM(ro,rd);\n    vec3 p = ro+rd*d.x;\n    vec3 n = calcNorm(p);\n    float rl = 0.99;\n    //col += d.xxx/5.;\n    //col = n;\n    col += colo(p,n,d);\n    for (int i=0;i<9;i++) {\n        ro = p+n*0.003;\n        rd = reflect(rd,n);\n        d = RM(ro,rd);\n        p = ro+rd*d.x;\n        n = calcNorm(p);\n        col += colo(p,n,d)*rl;\n        rl *= rl;\n    }\n    col *= 0.4;\n    col -= 0.2;\n    //col *= rl+0.5;\n    \n    //col -= sin(c*1400.)*0.06;\n    col += slogo(tv,ar,1.)/40.;\n    //col -= sin(d.x*35200.)*0.05;\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}