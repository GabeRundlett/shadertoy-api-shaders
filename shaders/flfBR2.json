{
    "Shader": {
        "info": {
            "date": "1651091454",
            "description": "Signed distance field for rectangle",
            "flags": 0,
            "hasliked": 0,
            "id": "flfBR2",
            "likes": 1,
            "name": "Rectangle Distance Field",
            "published": 3,
            "tags": [
                "distancefield",
                "rectangle",
                "box"
            ],
            "usePreview": 0,
            "username": "VPaltoDance",
            "viewed": 497
        },
        "renderpass": [
            {
                "code": "#define COLOR_WHITE vec3(1.0)\n#define COLOR_BLACK vec3(0.0)\n#define COLOR_MAGENDA vec3(1.0, 0.0, 1.0)\n\n#define BOX_RECT vec2(0.6, 0.3)\n#define BOX_COLOR1 vec3(0.2, 0.7, 0.9)\n#define BOX_COLOR2 vec3(0.9, 0.7, 0.2)\n\nfloat calculateBoxSDF(vec2 point, vec2 boxRect)\n{\n   vec2 delta = abs(point) - boxRect;\n   return length(max(delta, 0.0)) + min(max(delta.x,delta.y),0.0); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0 * fragCoord - iResolution.xy ) / iResolution.y;\n\n    float distField = calculateBoxSDF(uv, BOX_RECT);\n    \n    vec3 finalColor = mix(COLOR_WHITE, BOX_COLOR2, sign(distField));\n    finalColor *= 1.0 - exp(-2.0*abs(distField));;\n    finalColor *= 0.8 + 0.2 * cos(150.0 * distField);\n    finalColor = mix(finalColor, COLOR_WHITE, 1.0 - smoothstep(0.0, 0.02, abs(distField)));\n    \n    fragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}