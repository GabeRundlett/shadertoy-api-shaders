{
    "Shader": {
        "info": {
            "date": "1513731060",
            "description": "Left is nearest neighbor, middle is improved filtering, right is standard mip-mapping. Use screen-space derivatives for anti-aliasing. Click to change scale.",
            "flags": 0,
            "hasliked": 0,
            "id": "MllBWf",
            "likes": 19,
            "name": "Pixel Art Filtering",
            "published": 3,
            "tags": [
                "2d",
                "pixelart"
            ],
            "usePreview": 0,
            "username": "Klems",
            "viewed": 3222
        },
        "renderpass": [
            {
                "code": "\n// this work is licenced under a CC0 1.0 Universal License\n// https://creativecommons.org/publicdomain/zero/1.0/\n\n#define PI 3.14159265359\n#define rot(a) mat2(cos(a+PI*vec4(0,1.5,0.5,0)))\n\nvec4 myTexture(vec2 uv) {\n    \n    vec2 res = iChannelResolution[0].xy;\n    uv = uv*res + 0.5;\n    \n    // tweak fractionnal value of the texture coordinate\n    vec2 fl = floor(uv);\n    vec2 fr = fract(uv);\n    vec2 aa = fwidth(uv)*0.75;\n    fr = smoothstep( vec2(0.5)-aa, vec2(0.5)+aa, fr);\n    \n    uv = (fl+fr-0.5) / res;\n    return texture(iChannel0, uv);\n    \n}\n\nvec4 nearest(vec2 uv) {\n    uv *= iChannelResolution[0].xy;\n    uv = floor(uv)+0.5;\n    uv /= iChannelResolution[0].xy;\n    return textureLod(iChannel0, uv, 0.0);\n}\n\nvec4 mipmap(vec2 uv) {\n    return texture(iChannel0, uv);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = (fragCoord.xy - iResolution.xy*0.5) / iResolution.x;\n    vec2 prevUV = uv;\n    \n    uv *= rot(iTime*0.2);\n    uv.x *= iChannelResolution[0].y / iChannelResolution[0].x;\n    uv *= 4.0 + exp2(iMouse.x*0.01);\n    \n\tfragColor = myTexture(uv).rrrr;\n    \n    if (prevUV.x < -0.25) fragColor = nearest(uv).rrrr;\n    if (prevUV.x > 0.25) fragColor = mipmap(uv).rrrr;\n    \n    if (abs(prevUV.x+0.25) < 0.005) fragColor.rgb = vec3(0);\n    if (abs(prevUV.x-0.25) < 0.005) fragColor.rgb = vec3(0);\n    \n    \n    \n    \n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}