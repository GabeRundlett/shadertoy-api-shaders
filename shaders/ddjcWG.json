{
    "Shader": {
        "info": {
            "date": "1688126380",
            "description": "any golf suggestions welcome :)\n\npartly inspired by Xor's shader: https://www.shadertoy.com/view/7lyBRR",
            "flags": 0,
            "hasliked": 0,
            "id": "ddjcWG",
            "likes": 27,
            "name": "Hell Texture [209 Chars]",
            "published": 3,
            "tags": [
                "texture",
                "tweet",
                "onetweet",
                "golf",
                "furry",
                "250chars"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 410
        },
        "renderpass": [
            {
                "code": "// -8 thanks to coyote  [213]\n// -4 thanks to Fabrice [209] :O\nvoid mainImage( out vec4 O, vec2 u )\n{ \n    float t = .05*iTime, i;\n    u = u/iResolution.y + t;\n    O *= 0.;\n    for( O.yz++; \n         i++ < 9.;\n         O = cos(  .4* cos( u.x - t ) \n                 + 1.04 * O\n                 + 1. / ( 1. + length( fract(  u = u *.8* mat2(-2,1,1,2)  \n                                                   + .4*O.x* cos( t - vec2(0,1) )\n                                            )   \n                                       -.5 )))\n       ) t += 5.*O.x;\n}\n\n// original\n/*\nvoid mainImage( out vec4 O, in vec2 u )\n{ \n    float t = .05*iTime;\n    u = u/iResolution.y + t;        \n    O = vec4(0, 1, 1, 0); // change O.x for more motion. could do O * t\n\n    // interesting values to change:\n    // .4*cos(...)         noisy\n    // .4*O.x*cos(...)     aligned\n    // 1.*length(fract(... dotty\n    // 1.04*O+...          saturate/inflate\n    // replace cos(u.x-...) with u.y, or length(u), a*u.x+b*u.y etc. \n    for (int i = 0; i++ < 9;) \n    O = cos(.4*cos(u.x-(t+=5.*O.x))+1.04*O+1.\n          /(1.+length(fract(\n            u=u*.8*mat2(-2,1,1,2)+.4*O.x*cos(t-vec2(0,1)))   \n            -.5)));\n}\n//*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}