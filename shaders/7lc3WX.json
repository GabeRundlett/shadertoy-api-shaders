{
    "Shader": {
        "info": {
            "date": "1646081435",
            "description": "get audacity for audio program. \n\n\n\nfrom waves, sound, wave, music, colors, beginner, audio, visualizer, easy, sounds\nCreated by ADOB in 2015-04-10\n",
            "flags": 64,
            "hasliked": 0,
            "id": "7lc3WX",
            "likes": 4,
            "name": "Fork Fork Waves gchipunov 330",
            "published": 3,
            "tags": [
                "waves",
                "sound",
                "wave",
                "music",
                "colors",
                "beginner",
                "audio",
                "visualizer",
                "easy",
                "soundscreatedbyadobin20150410"
            ],
            "usePreview": 0,
            "username": "gchipunov",
            "viewed": 292
        },
        "renderpass": [
            {
                "code": "// oringal createor https://www.shadertoy.com/user/ADOB\n// remixer coder: https://www.shadertoy.com/user/gchipunov\nfloat squared(float value) { return value * value; }\n\nfloat getAmp(float frequency) { return texture(iChannel0, vec2(frequency / 512.0, 0)).x; }\n\nfloat getWeight(float f) {\n    return (+ getAmp(f-2.0) + getAmp(f-1.0) + getAmp(f+2.0) + getAmp(f+1.0) + getAmp(f)) / 5.0; }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n\tvec2 uvTrue = fragCoord.xy / iResolution.xy;\n    vec2 uv = -1.0 + 2.0 * uvTrue;\n    \n\tfloat lineIntensity;\n    float glowWidth;\n    vec3 color = vec3(0.0);\n    \n\tfor(float i = 0.0; i < 5.0; i++) {\n        \n\t\tuv.y += (0.2 * sin(uv.x + i*7.0 - iTime * 5.6));\n        float Y = uv.y + getWeight(squared(i) * 50.0) *\n            (texture(iChannel0, vec2(uvTrue.x, 1)).x - 0.5);\n        lineIntensity = 0.4 + squared(2.6 * abs(mod(uvTrue.x + i / 0.3 + iTime,2.0) - 1.0));\n\t\tglowWidth = abs(lineIntensity / ((100.0 - abs(uvTrue.x - i)) * Y));\n       // float k = i;\n        if(i== 0.0f)\n       {\n\t\tcolor += vec3(glowWidth * (2.0 + tan(iTime * 0.13)),\n                      glowWidth * (2.0 - sin(iTime * 0.23)),\n                 //     glowWidth * (2.0 - cos(iTime * 0.19)));\n                       glowWidth * (1.0 - tan(iTime * 0.19)*55.0));\n       }\n           else   if(i== 1.0f)\n        {\n \t\tcolor += vec3(glowWidth * (2.0 + sin(iTime * 0.13)),\n                      glowWidth * (2.0 - sin(iTime * 0.01)/5.0),\n                      glowWidth * (2.0 - cos(iTime * 0.01)));\n               //        glowWidth * (2.0 - tan(iTime * 0.19)));           \n        }\n         else   if(i== 2.0f)\n        {\n \t\tcolor += vec3(glowWidth * (2.0 + cos(iTime * 0.13)),\n                      glowWidth * (0.5 - sin(iTime * 0.23)),\n                      glowWidth * (2.0 - cos(iTime * 0.19)));\n               //        glowWidth * (2.0 - tan(iTime * 0.19)));           \n        }\n        else\n        {\n \t\tcolor += vec3(glowWidth/2.0 * (1.0 + tan(iTime * 0.13)),\n                      glowWidth/2.0 * (4.0 - sin(iTime * 0.23)),\n                      glowWidth/2.0 * (1.0 - cos(iTime * 0.19)));\n               //        glowWidth * (2.0 - tan(iTime * 0.19)));           \n        }\n        \n\t}\t\n\tcolor = color + cos(color)/44.0;\n    color = color - tan(iTime * 0.13)/555.0;\n    \n\tfragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 23674,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/zubnid/zeldabetamax"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}