{
    "Shader": {
        "info": {
            "date": "1642545337",
            "description": "My participation to genuary 2022\nColor gradients gone wrong.",
            "flags": 32,
            "hasliked": 0,
            "id": "7dsyRl",
            "likes": 8,
            "name": "Genuary 2022 - Day16",
            "published": 3,
            "tags": [
                "gradient",
                "generative",
                "genuary",
                "2022"
            ],
            "usePreview": 0,
            "username": "z0rg",
            "viewed": 286
        },
        "renderpass": [
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n    vec3 col = texture(iChannel0, uv).xyz;\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\n#define sat(a) clamp(a, 0., 1.)\nfloat seed;\nfloat rand()\n{\n    seed++;\n    return hash11(seed);\n}\n\nfloat _sqr(vec2 uv, vec2 s)\n{\n    vec2 l = abs(uv)-s;\n    return max(l.x, l.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float shp = iResolution.x*.5;\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.xx;\n    vec2 ouv = fragCoord/iResolution.xy;\n    seed=texture(iChannel1,uv).x;\n    seed+=fract(iTime);\n    float str = 4.;\n    vec3 col = vec3(0.090,0.031,0.153);\n    vec2 sz = vec2(.1, .2);\n    \n    float spc = .15;\n    vec2 ps1 = uv-vec2(-spc, 0.);\n    vec3 ps1col = mix(vec3(0.082,0.424,0.965), vec3(0.000,1.000,0.624), sat((ps1.y)*str));\n    col = mix(col, ps1col, 1.-sat(_sqr(ps1, sz)*shp));\n    \n    vec2 ps2 = uv-vec2(spc,0.);\n    vec3 ps2col = mix(vec3(0.192,0.004,0.412), vec3(0.773,0.114,0.600), sat((ps2.y)*str));\n    col = mix(col, ps2col, 1.-sat(_sqr(ps2, sz)*shp));\n    \n    vec3 rgb = vec3(0.);\n    if (iFrame == 0)\n        rgb = col;\n    else\n    {\n        vec3 prev = texelFetch(iChannel0, ivec2(fragCoord+15.*(vec2(rand(), rand())-.5)), 0).xyz;\n        rgb = prev;\n    }\n    \n    fragColor = vec4(rgb,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\n// Stolen from 0b5vr here https://www.shadertoy.com/view/ss3SD8\nfloat hash11(float p)\n{\n    return (fract(sin((p)*114.514)*1919.810));\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}