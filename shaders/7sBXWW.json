{
    "Shader": {
        "info": {
            "date": "1620220716",
            "description": "girl bunny -dragon",
            "flags": 0,
            "hasliked": 0,
            "id": "7sBXWW",
            "likes": 7,
            "name": "girl bunny -dragon",
            "published": 3,
            "tags": [
                "points",
                "poly",
                "girlbunnydragon",
                "2ddraw"
            ],
            "usePreview": 1,
            "username": "jorge2017a1",
            "viewed": 352
        },
        "renderpass": [
            {
                "code": "//por jorge2017a1 ----jorgeFloresP---5/may/2021\n// referencia \n////-------------------\n/// IQ funciones....librerias\n//https://www.shadertoy.com/view/tlGBW3\n//Created by manu210404 in 2021-03-13\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r; }\n\nvec3 ponerBorde(vec3 pColObj, vec3 colOut, float distObj )\n{\n  colOut = mix(colOut,pColObj ,S( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S(abs( distObj),0.0));\n  return colOut;\n}\n\n#define POLY(N) (in vec2 p, in vec2[N] v) {const int n=v.length();float d=dot(p-v[0],p-v[0]);float s=1.;for(int i=0,j=n-1;i<n;j=i,i++){vec2 e=v[j]-v[i];vec2 w=p-v[i];vec2 b=w-e*clamp(dot(w,e)/dot(e,e),0.,1.);d=min(d,dot(b,b));bvec3 cond=bvec3(p.y>=v[i].y,p.y<v[j].y,e.x*w.y>e.y*w.x);if(all(cond)||all(not(cond))) s=-s;}return s*sqrt(d);}\n\nfloat sdPoly32 POLY(32)\nvec2 pt32[ 32]=vec2[](  \nvec2(.54,.79),vec2(.29,.65),vec2(.29,.60),vec2(.29,.60),vec2(.29,.59),\nvec2(.27,.60),vec2(.25,.60),vec2(.24,.59),vec2(.24,.57),vec2(.24,.54),\nvec2(.25,.53),vec2(.28,.52),vec2(.29,.51),vec2(.31,.50),vec2(.32,.51),\nvec2(.34,.51),vec2(.36,.51),vec2(.36,.49),vec2(.37,.48),vec2(.45,.45),\nvec2(.48,.44),vec2(.51,.44),vec2(.54,.45),vec2(.61,.48),vec2(.63,.50),\nvec2(.65,.51),vec2(.65,.53),vec2(.67,.61),vec2(.67,.62),vec2(.68,.65),\nvec2(.69,.68),vec2(.54,.79) );\n\nfloat sdPoly11 POLY(11)\nvec2 pt11[ 11]=vec2[](  \nvec2(.26,.52),vec2(.28,.47),vec2(.29,.42),vec2(.30,.38),vec2(.34,.33),\nvec2(.38,.27),vec2(.39,.28),vec2(.39,.38),vec2(.37,.45),vec2(.36,.49),\nvec2(.26,.52) );\n\n\nfloat sdPoly18 POLY(18)\nvec2 pt18[ 18]=vec2[](  \nvec2(.67,.61),vec2(.70,.62),vec2(.70,.52),vec2(.70,.45),vec2(.69,.40),\nvec2(.66,.34),vec2(.63,.29),vec2(.60,.27),vec2(.61,.30),vec2(.62,.33),\nvec2(.62,.36),vec2(.60,.34),vec2(.57,.33),vec2(.59,.36),vec2(.62,.41),\nvec2(.62,.45),vec2(.62,.59),vec2(.67,.61) );\n\nfloat sdPoly24 POLY(24)\nvec2 pt24[ 24]=vec2[](  \nvec2(.11,.45),vec2(.16,.46),vec2(.26,.47),vec2(.66,.61),vec2(.70,.62),\nvec2(.73,.63),vec2(.76,.65),vec2(.78,.67),vec2(.77,.71),vec2(.75,.75),\nvec2(.71,.79),vec2(.65,.82),vec2(.51,.86),vec2(.44,.87),vec2(.36,.86),\nvec2(.27,.83),vec2(.22,.79),vec2(.18,.74),vec2(.17,.66),vec2(.17,.59),\nvec2(.18,.57),vec2(.17,.54),vec2(.15,.49),vec2(.11,.45) );\n\nfloat sdPoly11b POLY(11)\nvec2 pt11b[ 11]=vec2[](  \nvec2(.33,.76),vec2(.25,.92),vec2(.24,.96),vec2(.25,1.00),vec2(.45,1.00),\nvec2(.40,.96),vec2(.40,.95),vec2(.39,.94),vec2(.40,.93),vec2(.41,.80),\nvec2(.33,.76) );\n\nfloat sdPoly11c POLY(11)\nvec2 pt11c[ 11]=vec2[](  \nvec2(.54,.82),vec2(.61,.99),vec2(.62,1.00),vec2(.83,1.00),vec2(.76,.96),\nvec2(.74,.94),vec2(.72,.93),vec2(.69,.88),vec2(.69,.86),vec2(.63,.80),\nvec2(.54,.82) );\n\nfloat sdPoly13 POLY(13)\nvec2 pt13[ 13]=vec2[](  \nvec2(.32,.75),vec2(.36,.78),vec2(.40,.80),vec2(.53,.82),vec2(.63,.80),\nvec2(.65,.78),vec2(.64,.77),vec2(.58,.79),vec2(.51,.79),vec2(.43,.78),\nvec2(.37,.76),vec2(.33,.74),vec2(.32,.75) );\n\nfloat sdPoly9 POLY(9)\nvec2 pt9[ 9]=vec2[](  \nvec2(.58,.68),vec2(.59,.69),vec2(.61,.69),vec2(.63,.68),vec2(.63,.68),\nvec2(.61,.69),vec2(.59,.69),vec2(.58,.68),vec2(.58,.68) );\n\nfloat sdPoly9b POLY(9)\nvec2 pt9b[ 9]=vec2[](  \nvec2(.39,.67),vec2(.42,.68),vec2(.43,.68),vec2(.47,.67),vec2(.47,.67),\nvec2(.43,.68),vec2(.42,.68),vec2(.39,.68),vec2(.39,.67) );\n\nfloat sdPoly7 POLY(7)\nvec2 pt7[ 7]=vec2[](  \nvec2(.37,.59),vec2(.46,.57),vec2(.45,.61),vec2(.44,.63),vec2(.42,.64),\nvec2(.39,.63),vec2(.37,.59) );\n\nfloat sdPoly10 POLY(10)\nvec2 pt10[ 10]=vec2[](  \nvec2(.58,.58),vec2(.62,.58),vec2(.63,.59),vec2(.63,.61),vec2(.63,.63),\nvec2(.62,.63),vec2(.60,.63),vec2(.59,.63),vec2(.58,.61),vec2(.58,.58) );\n\nfloat sdPoly8 POLY(8)\nvec2 pt8[ 8]=vec2[](  \nvec2(.43,.58),vec2(.43,.60),vec2(.43,.61),vec2(.42,.63),vec2(.39,.63),\nvec2(.38,.62),vec2(.38,.59),vec2(.43,.58) );\n\nfloat sdPoly9c POLY(9)\nvec2 pt9c[ 9]=vec2[](  \nvec2(.57,.58),vec2(.61,.58),vec2(.62,.61),vec2(.61,.62),vec2(.60,.63),\nvec2(.59,.63),vec2(.58,.61),vec2(.58,.60),vec2(.57,.58) );\n\nfloat sdPoly11d POLY(11)\nvec2 pt11d[ 11]=vec2[](  \nvec2(.54,.57),vec2(.55,.56),vec2(.55,.55),vec2(.55,.55),vec2(.54,.54),\nvec2(.54,.54),vec2(.55,.55),vec2(.56,.55),vec2(.55,.56),vec2(.55,.57),\nvec2(.54,.57) );\n\nfloat sdPoly8b POLY(8)\nvec2 pt8b[ 8]=vec2[](  \nvec2(.49,.51),vec2(.51,.51),vec2(.52,.52),vec2(.53,.52),vec2(.54,.51),\nvec2(.53,.51),vec2(.51,.52),vec2(.49,.51) );\n\nfloat sdPoly9d POLY(9)\nvec2 pt9d[ 9]=vec2[](  \nvec2(.49,.51),vec2(.51,.51),vec2(.52,.51),vec2(.54,.51),vec2(.54,.51),\nvec2(.53,.50),vec2(.51,.50),vec2(.50,.51),vec2(.49,.51) );\n\nfloat sdPoly10b POLY(10)\nvec2 pt10b[ 10]=vec2[](  \nvec2(.31,.51),vec2(.33,.51),vec2(.34,.52),vec2(.35,.51),vec2(.36,.50),\nvec2(.36,.49),vec2(.34,.48),vec2(.33,.48),vec2(.31,.50),vec2(.31,.51) );\n\nfloat sdPoly9e POLY(9)\nvec2 pt9e[ 9]=vec2[](  \nvec2(.66,.54),vec2(.66,.54),vec2(.68,.54),vec2(.69,.53),vec2(.68,.52),\nvec2(.67,.51),vec2(.66,.51),vec2(.65,.51),vec2(.66,.54) );\n\nfloat sdPoly12 POLY(12)\nvec2 pt12[ 12]=vec2[](  \nvec2(.25,.57),vec2(.25,.59),vec2(.26,.59),vec2(.27,.59),vec2(.29,.57),\nvec2(.29,.55),vec2(.30,.54),vec2(.31,.53),vec2(.29,.53),vec2(.28,.53),\nvec2(.25,.54),vec2(.25,.57) );\n\nfloat sdPoly29 POLY(29)\nvec2 pt29[ 29]=vec2[](  \nvec2(.00,.35),vec2(.07,.40),vec2(.12,.45),vec2(.14,.46),vec2(.36,.47),\nvec2(.36,.48),vec2(.59,.47),vec2(.59,.47),vec2(.65,.45),vec2(.71,.44),\nvec2(.74,.40),vec2(.75,.36),vec2(.79,.25),vec2(.80,.16),vec2(.89,.07),\nvec2(.72,.07),vec2(.70,.10),vec2(.68,.14),vec2(.65,.13),vec2(.61,.10),\nvec2(.57,.07),vec2(.01,.07),vec2(.11,.10),vec2(.14,.12),vec2(.16,.16),\nvec2(.16,.23),vec2(.14,.29),vec2(.00,.21),vec2(.00,.35) );\n\nfloat sdPoly7b POLY(7)\nvec2 pt7b[ 7]=vec2[](  \nvec2(.50,.30),vec2(.52,.26),vec2(.53,.23),vec2(.53,.23),vec2(.52,.26),\nvec2(.50,.30),vec2(.50,.30) );\n\nfloat sdPoly7c POLY(7)\nvec2 pt7c[ 7]=vec2[](  \nvec2(.19,.32),vec2(.22,.30),vec2(.21,.27),vec2(.21,.27),vec2(.22,.30),\nvec2(.20,.32),vec2(.19,.32) );\n\nfloat sdPoly7d POLY(7)\nvec2 pt7d[ 7]=vec2[](  \nvec2(.69,.37),vec2(.68,.35),vec2(.72,.28),vec2(.73,.28),vec2(.69,.35),\nvec2(.70,.37),vec2(.69,.37) );\n\nfloat sdPoly5 POLY(5)\nvec2 pt5[ 5]=vec2[](  \nvec2(.13,.29),vec2(.21,.34),vec2(.21,.34),vec2(.13,.29),vec2(.13,.29) );\n\nfloat sdPoly7e POLY(7)\nvec2 pt7e[ 7]=vec2[](  \nvec2(.38,.63),vec2(.38,.63),vec2(.37,.63),vec2(.37,.63),vec2(.38,.63),\nvec2(.38,.62),vec2(.38,.63) );\n\nfloat sdPoly7f POLY(7)\nvec2 pt7f[ 7]=vec2[](  \nvec2(.38,.62),vec2(.37,.62),vec2(.36,.62),vec2(.36,.62),vec2(.37,.62),\nvec2(.38,.61),vec2(.38,.62) );\n\nfloat sdPoly7g POLY(7)\nvec2 pt7g[ 7]=vec2[](  \nvec2(.38,.60),vec2(.36,.60),vec2(.35,.60),vec2(.35,.60),vec2(.36,.60),\nvec2(.38,.60),vec2(.38,.60) );\n\nfloat sdPoly7h POLY(7)\nvec2 pt7h[ 7]=vec2[](  \nvec2(.63,.63),vec2(.64,.62),vec2(.65,.63),vec2(.65,.63),vec2(.64,.62),\nvec2(.63,.62),vec2(.63,.63) );\n\nfloat sdPoly7i POLY(7)\nvec2 pt7i[ 7]=vec2[](  \nvec2(.63,.61),vec2(.64,.61),vec2(.66,.61),vec2(.66,.61),vec2(.64,.61),\nvec2(.63,.61),vec2(.63,.61) );\n\n\nfloat sdPoly20 POLY(20)\nvec2 pt20[ 20]=vec2[](  \nvec2(.16,.23),vec2(.17,.22),vec2(.26,.25),vec2(.36,.27),vec2(.40,.27),\nvec2(.52,.22),vec2(.66,.28),vec2(.69,.29),vec2(.72,.27),vec2(.74,.23),\nvec2(.73,.18),vec2(.68,.14),vec2(.65,.14),vec2(.55,.06),vec2(.00,.06),\nvec2(.09,.10),vec2(.13,.11),vec2(.16,.15),vec2(.16,.23),vec2(.16,.23) );\n\n\nfloat sdPoly16 POLY(16)\nvec2 pt16[ 16]=vec2[](  \nvec2(.36,.47),vec2(.40,.45),vec2(.46,.42),vec2(.50,.42),vec2(.51,.42),\nvec2(.57,.45),vec2(.57,.46),vec2(.59,.47),vec2(.60,.42),vec2(.59,.35),\nvec2(.57,.30),vec2(.56,.30),vec2(.51,.41),vec2(.44,.29),vec2(.38,.41),\nvec2(.36,.47) );\n\nconst vec3 colPelo=vec3(0.79,0.51,0.37);\nconst vec3 colPiel=vec3(0.98,0.92,0.82);\nconst vec3 colPiel2=vec3(0.88,0.82,0.72);\nconst vec3 colNegro=vec3(0.0);\nconst vec3 colGris=vec3(0.55);\nconst vec3 colBlanco=vec3(1.0);\nconst vec3 colRojo=vec3(1.0,0.0,0.0);\n\nvec3 RostroChica(in vec2 pp, vec3 col) \n{\n  vec2 p=pp;\n  \n   \n   float sd1 = sdPoly32(p, pt32); \n   float sd2 = sdPoly11(p, pt11);\n   float sd3 = sdPoly18(p, pt18);\n   float sd4 = sdPoly24(p, pt24);\n   float sd5 = sdPoly11b(p,pt11b);\n   float sd6 = sdPoly11c(p,pt11c);\n   float sd7 = sdPoly13(p,pt13);\n   float sd8 = sdPoly9(p,pt9);\n   float sd9 = sdPoly9b(p,pt9b);\n   float sd10 = sdPoly7(p,pt7);\n   float sd11 = sdPoly10(p,pt10);\n   float sd12 = sdPoly8(p,pt8);\n   float sd13 = sdPoly9c(p,pt9c);\n   float sd14 = sdPoly11d(p,pt11d);\n   float sd15 = sdPoly8b(p,pt8b);\n   float sd16 = sdPoly9d(p,pt9d);\n   float sd17 = sdPoly10b(p,pt10b);\n   float sd18 = sdPoly9e(p,pt9e);\n   float sd19 = sdPoly12(p,pt12);\n   float sd20 = sdPoly29(p,pt29);\n   float sd21 = sdPoly7b(p,pt7b);\n   float sd22 = sdPoly7c(p,pt7c);\n   float sd23 = sdPoly7d(p,pt7d);\n   float sd24 = sdPoly5(p,pt5);\n   float sd25 = sdPoly7e(p,pt7e);\n   float sd26 = sdPoly7f(p,pt7f);\n   float sd27 = sdPoly7g(p,pt7g);\n   float sd28 = sdPoly7h(p,pt7h);\n   float sd29 = sdPoly7i(p,pt7i);\n   float sd30 = sdPoly20(p,pt20);\n   float sd31 = sdPoly16(p,pt16);\n   float sd32= sdCircle( p-vec2(0.4,0.60), 0.01 );\n   float sd33= sdCircle( p-vec2(0.59,0.59), 0.01 );\n   \n   col= ponerBorde(colPiel,col,sd20); // cuerpo\n   col= ponerBorde(colPelo,col,sd2); //pelo1\n   col= ponerBorde(colPelo,col,sd3); //pelo2\n   col= ponerBorde(colPelo,col,sd4); //pelo3\n   col= ponerBorde(colPiel,col,sd1); //rostro\n   col= ponerBorde(colGris,col,sd5); //colita 1\n   col= ponerBorde(colGris,col,sd6); //colita 2\n   col= ponerBorde(colGris,col,sd7); //centro colita \n   col= ponerBorde(colNegro,col,sd8); // ceja izq\n   col= ponerBorde(colNegro,col,sd9); // ceja der\n   col= ponerBorde(colBlanco,col,sd10); // ojo izq\n   col= ponerBorde(colBlanco,col,sd11); // ojo der\n   col= ponerBorde(colGris,col,sd12); //  pupila izq\n   col= ponerBorde(colGris,col,sd13); // pupila der\n   col= ponerBorde(colGris,col,sd14); // nariz\n   col= ponerBorde(colRojo,col,sd15); // labio sup\n   col= ponerBorde(colRojo,col,sd16); // labio inf\n   col= ponerBorde(colRojo,col,sd17); // bola\n   col= ponerBorde(colRojo,col,sd18); // bola 2\n   col= ponerBorde(colPiel2,col,sd19); // oreja\n   col= ponerBorde(colPiel2,col,sd21); // linea busto\n   col= ponerBorde(colPiel2,col,sd22); // linea axila\n   col= ponerBorde(colNegro,col,sd23); // \n   col= ponerBorde(colNegro,col,sd24); // linea 2 axila\n   col= ponerBorde(colNegro,col,sd25); //\n   col= ponerBorde(colNegro,col,sd26); //\n   col= ponerBorde(colNegro,col,sd27); //\n   col= ponerBorde(colNegro,col,sd28); //\n   col= ponerBorde(colNegro,col,sd29); //\n   col= ponerBorde(colNegro,col,sd30); // ropa\n   col= ponerBorde(colNegro,col,sd31); // ropa\n   \n   col = mix(col,colNegro ,S( sd32,0.0));\n   col = mix(col,colNegro ,S( sd33,0.0));\n   \n  return col;\n}\nconst vec4 red = vec4( 0.8, 0.1 ,0.2, 1.0 ) ;\nconst vec4 blue = vec4(0.0, 0.0 ,1.0,1 );\n\nvec4 fondo( vec2 pp)\n{\n    vec2 p=pp;\n    vec4 color = vec4( 1.0 );\n\tfloat xOffset = 0.5*sin(iTime);\n    //rays\n    float r = cos( atan( p.y, p.x + xOffset ) * 16.0 );\n    float f = smoothstep( r, r + 0.1, length( p )*0.25 );\n\tcolor = mix( blue, color, f );\n    //circle\n    r = 0.6;\n    f = smoothstep( r, r + 0.01, length( p + vec2( xOffset, 0.0 ) ) );\n    color = mix( red, color, f );\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   vec2 uv = (fragCoord-iResolution.xy)/iResolution.y;\n    //posicion\n    vec2 p=uv+vec2(1.5,0.9);\n    p*=1.7;\n    p.x*=0.7;\n    p.y*=0.5; p.y+=0.15;\n    vec4 colf=fondo(p*1.0);\n    vec3 col=colf.xyz;\n     col= RostroChica( p,col*2.0);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}