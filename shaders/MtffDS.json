{
    "Shader": {
        "info": {
            "date": "1513110497",
            "description": "Simulating Rorschach's mask pattern. ",
            "flags": 0,
            "hasliked": 0,
            "id": "MtffDS",
            "likes": 1,
            "name": "Rorschach Mask",
            "published": 3,
            "tags": [
                "noise",
                "fluid"
            ],
            "usePreview": 0,
            "username": "ab1093996300",
            "viewed": 586
        },
        "renderpass": [
            {
                "code": "float rand(float t)\n{\n    return fract(sin(t*8415.281)*3810.3821);\n}\n\nfloat rand2(vec2 st)\n{\n    return fract(sin(dot(st, vec2(17.1831, 48.218)))*8471.831);\n}\n\nfloat noise(vec2 st)\n{\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    \n    float a = rand2(i);\n    float b = rand2(i + vec2(1.0, 0.0));\n    float c = rand2(i + vec2(0.0, 1.0));\n    float d = rand2(i + vec2(1.0, 1.0));\n    \n    vec2 u = smoothstep(0.0, 1.0, f);\n    \n    return (a * (1.0-u.x) * (1.0-u.y) + \n            b * u.x * (1.0 - u.y) + \n            c * (1.0-u.x) * u.y + \n            d * u.x * u.y);\n}\n\nmat2 rotate2d(float a)\n{\n    return mat2(cos(a), -sin(a),\n                sin(a), cos(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st = 2.0 * (st - 0.5);\n    st.x *= iResolution.x/iResolution.y;\n    \n    st *= 3.0;\n    st.x = abs(st.x) - 1.0*iTime;\n    float d = 0.35;\n    \n    float r = noise(st * rotate2d(-0.01*iTime));\n    float c = smoothstep(d, d+0.02, r);\n    fragColor = vec4(vec3(c), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}