{
    "Shader": {
        "info": {
            "date": "1672788321",
            "description": "Shape comes from floating point precision errors when running fract(sin(x)) with a very large x. Looks bad when fullscreened.",
            "flags": 32,
            "hasliked": 0,
            "id": "dl2GRz",
            "likes": 3,
            "name": "StarFinger",
            "published": 3,
            "tags": [
                "noise",
                "stars",
                "precisionerrors"
            ],
            "usePreview": 0,
            "username": "JB_0x0003",
            "viewed": 192
        },
        "renderpass": [
            {
                "code": "\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2\t\tu_resolution;\nuniform float \t\tu_time;\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n\n\n\tvec2 st = fragCoord.xy/iResolution.xy;\n\n\tvec3 color = texture(iChannel0,st).xyz;\n    color += texture(iChannel1,st).xyz * 0.4;\n    //color = vec3(1.0,1.0,1.0);\n\tfragColor = vec4(color,1.0);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2\t\tu_resolution;\nuniform float \t\tu_time;\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n\n\n\tvec2 st = fragCoord.xy/iResolution.xy;   \n    vec2 Center1 = vec2(0.1,0.0);\n    vec2 Center2 = vec2(1.0,0.9);\n\tvec2 stRelCenter1 = st - Center1;\n    vec2 stRelCenter2 = st - Center2;\n    \n    \n    st += vec2(0.5,0.4);\n\tst *= 2.4;\n    \n    vec3 color1 = vec3(1.0, 0.0, 1.0);\n    vec3 color2 = vec3(1.0, 0.7, 0.0);\n    vec2 centerColor = vec2(1.5,1.0);\n    \n    //vec2 stColor = st - CenterColor;\n    vec2 stColor = st / sqrt(st.x * st.x + st.y * st.y);\n    centerColor /= sqrt(centerColor.x * centerColor.x + centerColor.y * centerColor.y);\n    centerColor = centerColor;\n    float theta = acos( dot(centerColor, stColor));\n    \n    vec3 hue = mix(color1, color2, theta * 2.345);\n\t\n\tst.x = sqrt( ((stRelCenter1.x * stRelCenter1.x ) + ( stRelCenter1.y * stRelCenter1.y  )) * abs( st.x + st.y - 2.0 ))\n                    - sqrt((( stRelCenter2.x * stRelCenter2.x  ) + ( stRelCenter2.y * stRelCenter2.y  ) ) * abs(st.x + st.y - 2.0) )  ;\n    st.y = st.x;\n    \n\tfloat distFromCenter = sqrt((st.x * st.x) + (st.y * st.y));\n\n\tfloat noise = fract(sin(dot(st.xy,\n\t\t\t\tvec2(8.989, 11.448)\n\t\t\t\t)) * 70000000.0 + \n\t\t\t\tmix(1.3928,100.1093, fract(sin(\n\t\t\t\t\tiTime * 0.003 * pow(distFromCenter,0.4))))  );\n\n    noise = pow(noise,3.9) ;\n    //noise = st.x;\n    vec3 color = vec3(hue * noise);\n\tfragColor = vec4(color,1.0);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2\t\tu_resolution;\nuniform float \t\tu_time;\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n\n\n\tvec2 st = fragCoord.xy/iResolution.xy;\n    ivec2 pos = ivec2(fragCoord.xy);\n    \n\tvec3 fresh = texture(iChannel0,st).xyz;\n    vec3 old = texture(iChannel1,st).xyz;\n    \n    vec3 color = old * 0.6 + fresh * 0.5;\n    \n\tfragColor = vec4(color,1.0);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    ivec2 pos = ivec2(fragCoord.xy);\n    \n    vec3 glow = vec3(0.0);\n    vec3 fetch = vec3(0.0);\n    int kernelRadius = 2;\n    int kernelDiameter = kernelRadius * 2 + 1;\n    \n    for (int i = 0; i < kernelDiameter; ++i){\n    \n        for (int j = 0; j < kernelDiameter; ++j){\n        \n            fetch = texelFetch(iChannel0, ivec2(pos.x -2 + i, pos.y -2 + j),0).xyz;\n            fetch.x = pow(fetch.x, 2.0);\n            fetch.y = pow(fetch.y, 2.0);\n            fetch.z = pow(fetch.z, 2.0);\n            \n            fetch = fetch * (1.0 - float(abs(i - kernelRadius) + abs(j - kernelRadius)) * 0.2 );\n            \n            glow += fetch;\n        }\n    \n    }\n    \n    //glow *= 0.5;\n    \n    \n    vec3 color = glow;\n    \n\tfragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}