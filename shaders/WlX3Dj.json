{
    "Shader": {
        "info": {
            "date": "1557591112",
            "description": "A small test implementation of conway's game of life\n\nSimply click on the screen to place a clump of cells",
            "flags": 32,
            "hasliked": 0,
            "id": "WlX3Dj",
            "likes": 2,
            "name": "Game of Life test",
            "published": 3,
            "tags": [
                "game",
                "life",
                "backbuffer"
            ],
            "usePreview": 0,
            "username": "clepirelli",
            "viewed": 567
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(texture(iChannel0, fragCoord / iResolution.xy).rgb, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv    = fragCoord / iResolution.xy;\n    vec2 originalUV = uv;\n    uv.y *= iResolution.y/iResolution.x;\n    \n    vec2 pixel = vec2(1.0)/iResolution.xy;\n    \n    vec2 mouseUV = iMouse.xy/iResolution.xy;\n    mouseUV.y *= iResolution.y/iResolution.x;\n    \n    bool written = length(uv - mouseUV) < pixel.x;\n    \n    if(written)\n    {\n    \tfragColor = texture(iChannel0, originalUV) + vec4(written);\n        return;\n    }\n    \n    bool alive = texture(iChannel0, originalUV).r >= 1.0;\n    int neighbors = 0;\n    \n    for(float i = -1.0; i <= 1.0; i++)\n    {\n        for(float j = -1.0; j<=1.0; j++)\n        {\n            bool thisPixel = (i== 0.0 && j == 0.0);\n            neighbors += int(!thisPixel && \n               texture(iChannel0, originalUV + \n                       vec2(i * pixel.x, j * pixel.y)).r > .2);\n        }\n    }\n\n    alive = alive && !(neighbors <= 1 || neighbors > 3) || !alive &&  (neighbors == 3);\n\n                \n    fragColor = vec4(vec3(alive), 1.0f);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}