{
    "Shader": {
        "info": {
            "date": "1599312242",
            "description": "transparent distortion",
            "flags": 0,
            "hasliked": 0,
            "id": "ttBBRK",
            "likes": 6,
            "name": "Transparent Distortion",
            "published": 3,
            "tags": [
                "transparency"
            ],
            "usePreview": 0,
            "username": "kekwizard",
            "viewed": 279
        },
        "renderpass": [
            {
                "code": "#define MAX_STEPS 64\n#define MIN_DIST 0.0001\n#define PI 3.14159265359\n\nfloat time = 0.;\nvec3 transPos = vec3(0.0, 0.0, 0.0);\n\nfloat hash( float n ) { return fract(sin(n)*753.5453123); }\n\n\nmat2 rotate2(float angle)\n{\n\treturn mat2(cos(angle), sin(angle), -sin(angle), cos(angle));   \n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat sdSphere( vec3 p, float s )\n{\n  return length( p ) - s;\n}\n\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat opSubtraction( float d1, float d2 ) { return max(-d1,d2); }\n\nvec2 circle(float t, float r) {\n\treturn r * vec2( sin(t), cos(t) );\n}\n\nfloat map(vec3 position)\n{\n    \n    vec3 p = position;\n\n    float map = 1.0;\n    \n    float displacement = sin(iTime + 5.*p.x)*cos(iTime * 1.1 + 5.*p.y)*sin(iTime * 1.2 + 5.*p.z);\n    float tsphereOuter = sdSphere(p, 1.0f) + .1 * displacement;\n    \n    map = min(map, tsphereOuter);\n        \n    int rCircles = 10;\n    for(int i = 0; i < rCircles; i++) {\n    \tfloat k = float(i) / float(rCircles);\n        vec2 circleOffset = circle(iTime + k * 2. * PI, 1.3);\n\n        float tsphereInner = sdSphere(p + vec3(circleOffset.x, 0.2 * sin(iTime + k * 4. * PI), circleOffset.y), 0.15) + 0.1 * displacement;\n        map = min(map, tsphereInner);\n\n    }\n    return map;\n}\n\nvoid steadyRotate(inout vec3 orig, inout vec3 dir) {\n    \n    //vec3 tone = orig - transPos;\n    //vec3 ttwo = dir - transPos;\n    \n\tmat2 ra = rotate2(time * 0.47 + sin(time* 0.247));\n    mat2 rb = rotate2(time * 0.31 + sin(time* 0.131));\n    mat2 rc = rotate2(time * 0.131 + sin(time* 0.4131));\n    \n    orig.yz *= ra;\n    dir.yz *= ra;\n    \n    orig.xz *= rb;\n    dir.xz *= rb;\n    \n    orig.xy *= rc;\n    dir.xy *= rc;\n    \n    \n}\n\nvec3 hash33(vec3 p){ \n    \n    float n = sin(dot(p, vec3(7, 157, 113)));    \n    return fract(vec3(2097152, 262144, 32768)*n); \n}\n\n\nvoid mainImage( out vec4 fragColor, vec2 fragCoord ) {\n\n    vec2 uv = (fragCoord - iResolution.xy*.5 )/iResolution.y;\n    vec3 rd = normalize(vec3(uv, (1.-dot(uv, uv)*.5)*.5));\n    // rd.z = 0.5;\n    \n    vec3 ro = vec3(0., 0., -2.), col = vec3(0), sp;\n\tfloat t=0., layers=0., d, aD;\n    \n    float thD = .0285;\n\t\n\tfor(int i=0; i<55; i++)\t{\n        \n        if(layers>15. || col.x>1. || t>10.) break;\n        sp = ro + rd*t;\n\t\t\n        d = map(sp);\n        \n        aD = (thD-abs(d)*15./16.)/thD;\n        \n        if(aD>0.) { \n            col += aD*aD*(3. - 2.*aD)/(1. + t*t*.5)*.2; \n            layers++; \n        }\n\n        t += max(abs(d) * 0.5, thD * 1.0); \n        \n\t\t\t    \n\t}\n    \n    // col = max(col, 0.); // ?\n    \n    // Orange\n    /*\n    col = mix(col, vec3(min(col.x*1.5, 1.), pow(col.x, 2.5), pow(col.x, 12.)), \n              dot(sin(rd.yzx*8. + sin(rd.zxy*8.)), vec3(.1666))+0.4);*/\n    \n    \n\t// Green\n    col = mix(col, vec3(col.x*col.x*.85, col.x, col.x*col.x*.3), \n             dot(sin(rd.yzx*4. + sin(rd.zxy*4.)), vec3(.1666)) + .25);\n    \n\n\tfragColor = vec4(clamp(col, 0., 1.), 1);\n    \n     \n }\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}