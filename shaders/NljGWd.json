{
    "Shader": {
        "info": {
            "date": "1624990191",
            "description": "First general purpose mipmap experiment. Adjust the diffusion with the mouse (defaults when mouse is not down).",
            "flags": 32,
            "hasliked": 0,
            "id": "NljGWd",
            "likes": 26,
            "name": "Mipmap Diffusion",
            "published": 3,
            "tags": [
                "mipmap",
                "diffusion",
                "gpmipmap",
                "colortrails"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 376
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Sync iTime with the frame\n#define iTimeDelta 0.01\n#define iTime (float(iFrame) * iTimeDelta)\n\nstruct View {\n    vec2 pos;\n    mat2 ori;\n};\n\n// https://www.shadertoy.com/view/4djSRW\nfloat Hash11(in float x) {\n    x = fract(x * 0.1031);\n    x *= x + 33.33;\n    x *= x + x;\n    return fract(x);\n}\n\nvec3 Hash23(in vec2 p) {\n\tvec3 p3 = fract(p.xyx * vec3(0.1031, 0.103, 0.0973));\n    p3 += dot(p3, p3.yxz + 33.33);\n    return fract((p3.xxy + p3.yzz) * p3.zyx);\n}\n\nvec2 Hash12(in float t) {\n\tvec3 p3 = fract(t * vec3(0.1031, 0.1030, 0.0973));\n\tp3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx + p3.yz) * p3.zy);\n}\n\nView getView(in float t) {\n    float id = floor(t), local = fract(t);\n    vec2 a = Hash12(id), b = Hash12(id + 1.0), c = Hash12(id + 2.0);\n    vec2 mid1 = 0.5 * (a + b), mid2 = 0.5 * (b + c);\n\n    vec2 pos = mix(mix(mid1, b, local), mix(b, mid2, local), local);\n    vec2 dir = normalize(mid1 * (local - 1.0) + (1.0 - 2.0 * local) * b + mid2 * local);\n\n    return View(pos, mat2(dir.y, -dir.x, dir));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float diffusion = iMouse.z > 0.0 ? mix(0.0, 3.0, iMouse.x / iResolution.x) : 1.0;\n    fragColor = texture(iChannel0, fragCoord / iResolution.xy, diffusion);\n\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * 4.0;\n    float unit = 8.0 / iResolution.y;\n\n    View view = getView(iTime * 0.1);\n    uv -= view.pos * 50.0 - 25.0;\n    uv *= view.ori;\n\n    vec2 cell = round(uv);\n    uv = uv - cell;\n\n    float freq1 = Hash11(dot(cell, vec2(393.84, 673.48))) * 30.0 - 15.0;\n    float freq2 = Hash11(dot(cell, vec2(492.843, 596.395))) * 30.0 - 15.0;\n    float phase = Hash11(dot(cell, vec2(348.46, 183.37)));\n    float amp = Hash11(dot(cell, vec2(275.35, 741.69))) * 0.4;\n    uv -= vec2(cos(iTime * freq1 + phase), sin(iTime * freq2 + phase)) * amp;\n\n    fragColor = vec4(mix(fragColor.rgb, Hash23(cell), smoothstep(unit, 0.0, length(uv) - 0.1)), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}