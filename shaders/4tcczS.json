{
    "Shader": {
        "info": {
            "date": "1532956339",
            "description": "Just a simple pattern. Learn from https://thebookofshaders.com/09/",
            "flags": 0,
            "hasliked": 0,
            "id": "4tcczS",
            "likes": 2,
            "name": "Simple pattern",
            "published": 3,
            "tags": [
                "pattern"
            ],
            "usePreview": 0,
            "username": "xiaoiver",
            "viewed": 964
        },
        "renderpass": [
            {
                "code": "float circle(in vec2 _st, in float _radius) {\n    vec2 l = _st-vec2(0.5);\n    //return 1.-smoothstep(_radius-9./iResolution.y,\n      //                   _radius+9./iResolution.y,\n       //                  dot(l,l)*4.0);\n    return smoothstep(_radius+9./iResolution.y,\n                         _radius-9./iResolution.y,\n                         dot(l,l)*4.0);\n}\n\nfloat circlePattern(vec2 st, float r) {\n    return  circle(st+vec2(0.,-.5), r)+\n            circle(st+vec2(0.,.5), r)+\n            circle(st+vec2(-.5,0.), r)+\n            circle(st+vec2(.5,0.), r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    uv *= 3.0;      // Scale up the space by 3\n    uv = fract(uv); // Wrap arround 1.0\n\n    // Now we have 3 spaces that goes from 0-1\n    //vec3 col = mix(vec3(0),\n    //               vec3(0.973,0.843,0.675),\n    //               circlePattern(uv,1.0));\n\n    fragColor = vec4(0.973,0.843,0.675,1.0) * circlePattern(uv, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}