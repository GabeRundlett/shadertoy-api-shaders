{
    "Shader": {
        "info": {
            "date": "1550507438",
            "description": "A simple color separation example using matrix 2d rotation and distance fields.",
            "flags": 0,
            "hasliked": 0,
            "id": "wdlXRn",
            "likes": 4,
            "name": "Color Separation Lesson",
            "published": 3,
            "tags": [
                "distancefields",
                "animation",
                "matrix",
                "rotation",
                "rotation",
                "chromaticabberation",
                "colorseperation",
                "matrix2d",
                "learningartofshaders"
            ],
            "usePreview": 0,
            "username": "synergyseeker1",
            "viewed": 898
        },
        "renderpass": [
            {
                "code": "const float TWO_PI = 6.28;\nconst float PI = 3.14;\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),sin(_angle),cos(_angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){   \n\t// normailze and adjsut for ratio\n    vec2 res = iResolution.xy,\n    uv = (fragCoord*2.0-res ) / res.y;\n    //initilize color\n\tvec4 background = vec4(.2,.7,.7,1.0);\n    background*=-length(uv); \n    vec4 color = vec4(.3,.7,.8,1.0);\n    \n\t// calculate fragment distance from center\n    float d = length(uv); \n \t//apply effect to each color channel\n    for(int i=0;i<=3;i++) {\n        uv= rotate2d(iTime*.5)*uv;\n        uv*=uv/d*(sin(d - iTime*.5));\n        color[i]*=.2/length(sqrt(uv*3.0)-.5);\n    }\n    //output final color\n\tfragColor = mix(background, color, color.a);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}