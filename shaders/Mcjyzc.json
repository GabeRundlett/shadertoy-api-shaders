{
    "Shader": {
        "info": {
            "date": "1722776973",
            "description": "subsurface scattering with mandelbulb.",
            "flags": 32,
            "hasliked": 0,
            "id": "Mcjyzc",
            "likes": 10,
            "name": "Jade Artifact",
            "published": 3,
            "tags": [
                "raymarching",
                "mandelbulb",
                "light",
                "volumetric"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 166
        },
        "renderpass": [
            {
                "code": "// Fork of \"Scattered Rays\" by wyatt. https://shadertoy.com/view/Xfjczc\n// 2024-08-04 11:57:33\n\nMain {\n\n    Q = .6*B(U)/float(iFrame);\n    if (A(U).x==0.)Q += .2*sin(0.+2.*U.y/R.y+U.x/R.x*vec4(1,2,3,4));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel1,(U)/R)\n#define Main void mainImage(out vec4 Q, in vec2 U) \n#define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))\nfloat map (vec3 p) {\n    p *= 1.5;\n    p.xz *= ei(-.4);\n        p.yz *= ei(.1);\n    p.x += .1;\n    vec3 w = p;\n    float dz = 1.;\n    for (float i = 0.; i < 3.; i++) {\n    \n        dz = 4.0*pow(length(w),3.)*dz;\n      \n        float r = length(w);\n        float b = 4.0*acos( w.z/r)+.7;\n        float a = 4.0*atan( w.y, w.x );\n        w = p + pow(r,4.0) * vec3( sin(b)*cos(a), sin(b)*sin(a), cos(b) );\n        \n        if (length(w)>20.) break;\n    }\n\n    return 0.1*log(dot(w,w))*length(w)/dz;\n}\nvec3 normal (vec3 p) {\n    vec2 e = vec2(1e-4,0);\n    return normalize(vec3(\n        map(p+e.xyy)-map(p-e.xyy),\n        map(p+e.yxy)-map(p-e.yxy),\n        map(p+e.yyx)-map(p-e.yyx)\n    ));\n}\nvec4 hash44(vec4 p4)\n{\n\tp4 = fract(p4  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\n#define pi 3.14159265359",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "\nMain {\n    if (iFrame >0) {Q = A(U);return;}\n    vec3 p = vec3(0,0,-1);\n    vec3 d = normalize(vec3(2.*(U-.5*R)/R.y,1));\n    Q = vec4(0);\n    \n    for (float i = 0.;i < 150.; i++) {\n        float m = map(p);\n        p += d*m;\n        \n        if (m < 1e-4) {Q.xyz = p;break;}\n        if (m > 10.) break;\n    }\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main {\n    Q = B(U);\n    vec3 p = A(U).xyz;\n    vec3 o = normalize(vec3(2.*(U-.5*R)/R.y,1));\n    vec3 light = vec3(-4,3,-5);\n    vec4 h = hash44(vec4(U,iTime,iFrame));\n    float a = h.x*2.*pi;\n    float b = h.y*pi;\n    vec3 n = normal(p);\n    vec3 d = reflect(o,n);\n    if (h.w < .95) d = refract(o,n,.8);\n    d += .1*vec3(vec2(cos(a),sin(a))*sin(b),cos(b));\n    d = normalize(d);\n    //p += .01*d;\n    for (float i = 0.; i < 50.; i++){\n        float n = map(p);\n        float m = min(n,length(p-light)-2.);\n        p += d*max(abs(m),.01);\n        vec4 h = hash44(vec4(p*1000.,i));\n        float a = h.x*2.*pi;\n        float b = h.y*pi;\n        vec3 dd = pow(h.z*h.w,2.)*vec3(vec2(cos(a),sin(a))*sin(b),cos(b));\n        if (m < 0.0) d = normalize(d+10.*dd);\n        if (m > 10.) break;\n    \n    }\n    \n    Q.xyz += 100.*(exp(-4.*max(length(p-light)-2.,0.)))*max(sin(-2.+6.*d.y+vec3(1,2,3)),0.);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}