{
    "Shader": {
        "info": {
            "date": "1564646702",
            "description": "Funky version of https://www.shadertoy.com/view/3lsSDl and https://www.shadertoy.com/view/Md2fzm\n\nThanks Fabrice !",
            "flags": 0,
            "hasliked": 0,
            "id": "WlsSDl",
            "likes": 10,
            "name": "Kis-Snowflakes Trippy 252c",
            "published": 3,
            "tags": [
                "triangle",
                "tiling",
                "kisrhombille",
                "reptile",
                "equerre"
            ],
            "usePreview": 0,
            "username": "ttoinou",
            "viewed": 531
        },
        "renderpass": [
            {
                "code": "#define mainImage(z,u)                              \\\n    vec2 A=u-u,B=A,C=z.xw, G, b = u/iResolution.y;     \\\n    B.x = 1.7;                               \\\n    float a, k=.0,i=0.; \\\n    for(; i++ < 11. ; C = (b-G)/3., k *= 3. )  \\\n        a = dot( normalize(G = b-A-B), normalize(B+B-A) ), \\\n        A = a < -.5 ? A : (k++,B + C),    \\\n        B = a >  .5 ? k++, B : C;        \\\n    k/=2e3; \\\n    z = cos( iTime + vec4(11,9,7,1)*k ) / sin(iTime-a*.6+k)/*\n        \n// 261 chars thanks to Fabrice !\n#define mainImage(z,u)                              \\\n    vec2 A=u-u,B=A,C=A, G, b = u/iResolution.y;     \\\n    B.x = 1.7; C.y++;                               \\\n    float a, k=.0,i=0.; \\\n    for(; i++ < 11. ; C = (b-G)/3., k *= 3. )  \\\n        a = dot( normalize(G = b-A-B), normalize(B+B-A) ), \\\n        A = a < -.5 ? A : (k++,B + C),    \\\n        B = a >  .5 ? k++, B : C;        \\\n    k/=2e3; \\\n    z = tanh( cos( iTime + vec4(11,9,7,1)*k ) / sin(iTime-a*.6+k) )\n    \n           \n//212 char without animation https://www.shadertoy.com/view/3lsSDl\n\nvoid mainImage( out vec4 z, vec2 b )\n{\n    vec2 A,B,C  ,E,G;\n    float d,k = .0; // turning z.a into d + introducing snake k => cost 7 chars\n    z -= z;\n    A=B=C -= C;\n    //A=B=C=z.xy -= C; // doesnt save any char\n    \n    b /= 6e2; // b /= 2.*iResolution.y;\n    \n    \n    B.x = 1.7; // 1.7320 // sqrt(3)\n    C.y = 1.;\n    \n    \n    for(int i = 0 ; i < 11 ; i++, k *= 3.)\n    //for(; z.a < 17. ; z.a++) saves 2 char but makes it crash, need int loop not float\n    //{\n        // A is doubled for char optinization, saves 8 chars\n\n        //D = A + B,\n        \n        //G = b - D,\n        //E = B*3. - D,\n        // becomes when removing D :\n\n        //D = A + B,\n       // G = b - A - B\n       // E = B + B - A,\n\t\t\n        \n        G = b - A - B,\n        E = B + B - A,\n        \n        // d = cos( angle )\n        d = dot(G,E)/length(G)/length(E),\n        // find approximation of distance ?!\n        // would let me optimize G and E expression after\n        \n        // ACD Triangle : cos(angle) < -1/2 = COS(2PI/3)\n        A =   d < -.5\n            ? //z.r = .9 - z.g, // coloring\n             A // ACD => A stays the same \n        \n            : (k++, // k += 2 for EBD, k++ for ECD\n               B + C) // was previously temporary E\n        ,\n            \n        \n        // EBD Triangle : cos(angle) > 1/2 = COS( PI/3)\n        B =   d > .5\n            ? //z.g -=- z.b , // coloring\n             \n             k++,B // => EBD B stays the same\n                \n            : C\n        ,\n        \n        // G = b - (A+B) => A+B = b - G  saves 2 chars\n        C = (b-G)/3.;\n    //}       \n    \n    // https://www.shadertoy.com/view/XsSBWm\n    //z = vec4(sin(iTime/9.)*23.+43.,33.,23.,1.)*200.;\n    \n    //z = tanh(\n    //    mod(vec4(k),z)\n    //    / (z-1.)\n    //);\n    \n    \n    // not bad :\n    //z = tanh( cos( iTime + vec4(9,5,2,1)*k/1e4 )*2. + 1. );\n    \n    \n    //z = tanh( cos( iTime + vec4(11,9,7,1)*k/5e3 )*vec4(3,1,4,1) +cos(d) );\n    //z = tanh( cos( iTime + vec4(11,9,7,1)*k/5e3 ) * (.5+cos(iTime-d)) );\n    //z = tanh( cos( iTime + vec4(11,9,7,1)*k/5e3 ) / (.5+cos(iTime-d)) );\n    k/=2e3;\n    z = tanh( cos( iTime + vec4(11,9,7,1)*k ) / sin(iTime-d*.6+k) );\n    //z = tanh( cos( iTime + vec4(11,9,7,1)*k/5e3 )  ) * (1.+cos(iTime-d+k/1e3));\n   \n    //https://www.shadertoy.com/view/XsBfDm\n    //float k = 13.;\n    //k = mod(float(PinwheelID),k)/(k-1.);\n    \n    //vec4 col = cos( vec4(3.,5.,7.,1.)*k*.75 + iTime*1. + float(PinwheelID)/19. )*.5+.5;\n    //col *= sqrt( fft( repeat( k*2. + .05 ,1.) , .0 ).r - .1 )*4.;\n    \n    \n    //z = tanh( vec4(k)/5e5 \n    //float e = sqrt(10.);\n    //z = abs( vec4(  mod(iTime*.2,e) - mod(k,e) ) );\n    \n    //z =tanh( cos( iTime*1. + vec4(9,5,2,1)*k )*1. + k/2e4 );\n    \n    //z /= cos(iTime - k*8. + z.bgrb)+.5;\n    \n    \n}*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}