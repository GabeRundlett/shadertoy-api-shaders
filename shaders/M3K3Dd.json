{
    "Shader": {
        "info": {
            "date": "1718456211",
            "description": "from gaz",
            "flags": 0,
            "hasliked": 0,
            "id": "M3K3Dd",
            "likes": 9,
            "name": "fractalic house",
            "published": 3,
            "tags": [
                "fractal",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 314
        },
        "renderpass": [
            {
                "code": "/*source from shadertoy  profile gaz*/\n#define R(a)a=vec2(a.x+a.y,a.x-a.y)*.7\n#define G(a,n)R(a);a=abs(a+0.02)-n;R(a)\nfloat happy_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\n vec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\nvoid mainImage(out vec4 O, vec2 C) {\n    O=vec4(0);\n    vec2 cPos = -1.0 + 2.0 * C.xy / iResolution.xy;\n   \n       \n    // distance of current pixel from center\nfloat cLength = length(cPos);\n    vec2 uv2 = (C - .5*iResolution.xy ) / iResolution.y;\n    vec3 col = palette(length(uv2) +.4 + iTime*.4);\nvec2 uv = C.xy*2./iResolution.xy+(cPos/cLength)*cos(cLength*1.0-iTime*4.0) * 0.03;\nfor(float g,e,i;i++<45.;){\n    vec3 p=g*vec3((C*2.-iResolution.xy)/iResolution.y,1);\n       // pixel position normalised to [-1, 1]\np.z+=-iTime;\n     p.xy+=uv;\n     p.xz+=uv;\n  p.yx*=mat2(cos(iTime*0.5),sin(iTime*0.5),-sin(iTime*0.5) ,cos(iTime*0.5));\n \n \n        p=fract(p)-.5;\n     \n       \n        G(p.xy,.3);\n        G(p.zy,.11);\n        G(p.yx,.15);\n        g+=e=.6*length(p.xz)-.01;\n        e<.01?O+=abs(cos(p.z*99.))/i:O*col.x;\n    }\n     uv2 *= 2.0 * ( cos(iTime * 2.0) -2.5); // scale\n   \n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;  // anim between 0.9 - 1.1\n    O*= vec4(happy_star(uv2, anim) * vec3(0.25,0.1,5.55), 1.0);\n}\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}