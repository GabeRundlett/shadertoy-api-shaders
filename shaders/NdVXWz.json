{
    "Shader": {
        "info": {
            "date": "1634485906",
            "description": "Yummy Pixelized IceCreamSwirl. :P",
            "flags": 0,
            "hasliked": 0,
            "id": "NdVXWz",
            "likes": 7,
            "name": "Pixelized IceCreamSwirl",
            "published": 3,
            "tags": [
                "swirl",
                "pixel",
                "icecream",
                "pixelized"
            ],
            "usePreview": 0,
            "username": "foxic",
            "viewed": 316
        },
        "renderpass": [
            {
                "code": "\n#define PixelSize 32.\n\nvec2 rotate2D(vec2 _st,float _angle){\n    _st=mat2(cos(_angle),-sin(_angle),\n    sin(_angle),cos(_angle))*_st;\n    return _st;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - iResolution.xy / 2.0) / iResolution.y;\n    uv = ceil(uv*PixelSize)/PixelSize; //pixelise\n\n    vec2 uv1 = rotate2D(uv, (length(uv*5.)+iTime)*2. );\n    uv += vec2(0.,0.025);\n    vec2 uv2 = rotate2D(uv, (length(uv*5.)+iTime)*2. );\n    \n    \n    vec3 col1 = vec3(0.97,0.5,0.74);\n    vec3 col2 = vec3(0.03);\n    vec3 col3 = mix(col1,col2,0.8);\n    col2 = mix(col3,col2,float((uv2.x) > 0.05));\n    \n    vec3 col = mix(col1,col2,float((uv1.x) > 0.));\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}