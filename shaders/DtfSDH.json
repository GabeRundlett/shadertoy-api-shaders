{
    "Shader": {
        "info": {
            "date": "1674649365",
            "description": "chronos' audio visualizer modified to use channel 0.",
            "flags": 0,
            "hasliked": 0,
            "id": "DtfSDH",
            "likes": 2,
            "name": "Basic Audio Visualizer Modified",
            "published": 3,
            "tags": [
                "simple"
            ],
            "usePreview": 0,
            "username": "Spheroidon",
            "viewed": 226
        },
        "renderpass": [
            {
                "code": "/* Simple audio visualizer by chronos\n// Feel free to use any part of the code and/or improve it further\n// Drop a link in the comments! :)\n// \n// Recommended tracks:\n// https://soundcloud.com/kubbi/pathfinder\n// https://soundcloud.com/wearecastor/rad\n// https://soundcloud.com/jco-de/coronoid-soundtrack\n//\n*/\n\n#define WIDTH 1.0\n\nfloat audio_freq( in sampler2D channel, in float f) { return texture( channel, vec2(f, 0.25) ).x; }\nfloat audio_ampl( in sampler2D channel, in float t) { return texture( channel, vec2(t, 0.75) ).x; }\n\nvec3 B2_spline(vec3 x) { // returns 3 B-spline functions of degree 2\n    vec3 t = 3.0 * x;\n    vec3 b0 = step(0.0, t)     * step(0.0, 1.0-t);\n\tvec3 b1 = step(0.0, t-1.0) * step(0.0, 2.0-t);\n\tvec3 b2 = step(0.0, t-2.0) * step(0.0, 3.0-t);\n\treturn 0.5 * (\n    \tb0 * pow(t, vec3(2.0)) +\n    \tb1 * (-2.0*pow(t, vec3(2.0)) + 6.0*t - 3.0) + \n    \tb2 * pow(3.0-t,vec3(2.0))\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 centered = 2.0 * uv - 1.0;\n    centered.x *= iResolution.x / iResolution.y;\n\n    float dist2 = dot(centered, centered);\n    float clamped_dist = smoothstep(0.0, 1.0, dist2);\n    float arclength    = abs(atan(centered.y, centered.x) / radians(360.0))+0.01;\n    \n    // Color variation functions\n    float t = iTime / 100.0;\n    float polychrome = (1.0 + sin(t*10.0))/2.0; // 0 -> uniform color, 1 -> full spectrum\n    vec3 spline_args = fract(vec3(polychrome*uv.x-t) + vec3(0.0, -1.0/3.0, -2.0/3.0));\n    vec3 spline = B2_spline(spline_args);\n    \n    float f = abs(centered.y);\n    vec3 base_color  = vec3(1.0, 1.0, 1.0) - f*spline;\n    vec3 flame_color = pow(base_color, vec3(3.0));\n    vec3 disc_color  = 0.20 * base_color;\n    vec3 wave_color  = 0.10 * base_color;\n    vec3 flash_color = 0.05 * base_color;\n    \n    float sample1 = audio_freq(iChannel0, abs((uv.x - .5) / WIDTH) + 0.01);\n    float sample2 = audio_ampl(iChannel0, clamped_dist);\n    float sample3 = audio_ampl(iChannel0, arclength);\n    \n    float disp_dist = smoothstep(-0.2, -0.1, sample3-dist2);\n    disp_dist *= (1.0 - disp_dist);\n\t\n    vec3 color = vec3(0.0);\n    \n    // spline debug\n    // vec3 s = smoothstep(-0.01, 0.01, spline-uv.y); color += (1.0-s) * s;\n    \n    float v = abs(uv.y - 0.5);\n    color += flame_color * smoothstep(v, v*8.0, sample1);\n    color += disc_color  * smoothstep(0.5, 1.0, sample2) * (1.0 - clamped_dist);\n    color += flash_color * smoothstep(0.5, 1.0, sample3) * clamped_dist;\n    color += wave_color  * disp_dist;\n    color = pow(color, vec3(0.4545));\n\tfragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 13,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}