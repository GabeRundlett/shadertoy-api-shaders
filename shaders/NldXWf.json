{
    "Shader": {
        "info": {
            "date": "1640141511",
            "description": "I've been really enjoying [url=https://www.shadertoy.com/user/lomateron]lomateron[/url]'s fluid simulations lately, so in an effort to understand them, I ended up simplifying/abstracting several and combining them into a single generalised shader",
            "flags": 32,
            "hasliked": 0,
            "id": "NldXWf",
            "likes": 67,
            "name": "Metalomateron",
            "published": 3,
            "tags": [
                "convolution"
            ],
            "usePreview": 0,
            "username": "davidar",
            "viewed": 845
        },
        "renderpass": [
            {
                "code": "// Original shaders by lomateron.\n// I find it rather pleasing how the core loop for each of the buffers can be distilled into a short one-liner,\n// such complex behaviour from quite simple systems!\n\nMAIN {\n    vec4 a = Du;\n    if(SHADER == 2) { // veinss\n        r = sin(a.x*4.+vec4(1,3,5,4))*.25 + sin(a.y*4.+vec4(1,3,2,4))*.25 + .5;\n    } else if(SHADER == 3) { // exploding blobs\n        r = a.z+a.z*sin(length(a.xy)+vec4(1,2,3,4));\n    } else if(SHADER == 4) { // wigli wires\n        r = sin(a.x*2.+vec4(1,2,3,4)+0.)*.25 + sin(a.y*2.+vec4(1,2,3,4)+0.)*.25 + .5;\n    } else if(SHADER == 5) { // spirals vs ghosts\n        r = pow(a.z,.15)*(cos(length(a.xy)*2.+vec4(0,2,4,6)+3.)*.3+.7);\n    } else if(SHADER == 6) { // radioactive space balls\n        r = sin(pow(a.z,.15)*5.+vec4(1,2,3,4))*.5+.5;\n    } else if(SHADER == 7) { // exotic smoke\n        r = a.xxyz*.1+sin(pow(a.z,.2)*2.+vec4(1,2,3,4))*.5+.5;\n    }\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define GRID vec2(3,2)\n#define CELL ivec2(GRID * u/R)\n#define SHADER (2 + CELL.x + int(GRID.x)*CELL.y)\n\n#define MAIN void mainImage( out vec4 r, in vec2 u )\n#define R iResolution.xy\n\n#define UV fract(GRID * u/R)\n\n// convolutions\n#define CONV(z) for(int i=-z; i<=z; ++i) for(int j=-z; j<=z; ++j)\n#define CONVO(z) CONV(z) if(0. < length(ij) && length(ij) <= float(z))\n\n// gaussian\n#define G(c) exp(-dot(c,c))\n\n// textures\n#define UVCOORD(u) ((vec2(CELL) + fract(GRID * (u)/R)) / GRID)\n#define A(u) texture(iChannel0,UVCOORD(u))\n#define B(u) texture(iChannel1,UVCOORD(u))\n#define C(u) texture(iChannel2,UVCOORD(u))\n#define D(u) texture(iChannel3,UVCOORD(u))\n\n#define Au A(u)\n#define Bu B(u)\n#define Cu C(u)\n#define Du D(u)\n\n#define Ai A(u+ij)\n#define Bi B(u+ij)\n#define Ci C(u+ij)\n#define Di D(u+ij)\n\n#define Ad (Ai - Au)\n#define Bd (Bi - Bu)\n#define Cd (Ci - Cu)\n#define Dd (Di - Du)\n\n// rotation\n#define rot90(b) ((b).yx * vec2(-1,1))\n\n// safe division\n#define normz(v) (length(v) == 0. ? v : normalize(v))\n#define recip(s) ((s) == 0. ? 1. : 1./(s))\n\n#define ij vec2(i,j)\n#define nij normz(ij)\n#define lij length(ij)\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "#define Dp vec2(dot(nij, Dd.xy), dot(nij, rot90(Dd.xy)))\n\nMAIN {\n    r = vec4(0);\n    vec4 w = vec4(0);\n    if(SHADER == 2) {\n        float z = .5*.5 / 3.14; // gaussian normalisation const\n        CONV(6) r += z * G(.5 * ij) * vec4(Dp.x, abs(Dp.y), 1,1);\n    } else if(SHADER == 3) {\n        CONV(8) r += .375 * lij * G(.375 * ij) * vec4(nij * Dd.z, Dp * Di.z);\n    } else if(SHADER == 4) {\n        CONV(4) r.x += length(Dd.xy);\n    } else if(SHADER == 5) {\n        w = vec4(.7, .175, .1, 1);\n    } else if(SHADER == 6) {\n        w = vec4(.66, .25, .1, 1);\n    //} else if(SHADER == 7.5) {\n    //    w = vec4(2, .5, 1, 1);\n    //} else if(SHADER == 8.5) {\n    //    CONVO(8) r += vec4(vec2(length(Dd.xy) * sin(dot(ij/8., rot90(Dd))*6.)), dot(nij, rot90(Dd)), 0);\n    } else if(SHADER == 7) {\n        w = vec4(0,0,1,1);\n    //} else if(SHADER == 9) {\n    //    CONV(8) r += dot(Di.xy,ij/4.)*G(ij/4.);\n    }\n    if(w.w != 0.) CONVO(8) r += vec4(nij * Dd.z * cos(w.x * lij) * G(w.y * lij) * w.z, Dp);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "MAIN {\n    r = Du;\n    vec4 w = vec4(0);\n    if(SHADER == 2) {\n        w = vec4(1, 1, .5, 3);\n    } else if(SHADER == 3) {\n        w = vec4(-.0225 * Du.z, 1, .375, 2);\n    } else if(SHADER == 4) {\n        w = vec4(-.00675, 1, .75, 0);\n    } else if(SHADER == 5 || SHADER == 7) {\n        w = vec4(1./8e3, 1, 0, 1);\n    //} else if(SHADER == 8.5) {\n    //    w = vec4(-1e-6, 0, 1./8., 1);\n    //} else if(SHADER == 9) {\n    //    w = vec4(-.0015, 1, .5, 0);\n    }\n    CONVO(8)\n        r.xy += w.x * mix(Ai.xy, vec2(1), w.y) * G(w.z * ij)\n            * ( w.w == 0. ? ij * Ai.x\n              : w.w == 1. ? nij * Ai.z\n              : w.w == 2. ? rot90(ij) * Ai.w\n              : nij * (Ai.x*.1 + Ad.y*.5));\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "MAIN {\n    r = Bu;\n    float w = 1.;\n    if(SHADER == 1) {\n        r = Du;\n    } else if(SHADER == 3) {\n        r += Au * (Bu.z-.5);\n        w = .5;\n    } else if(SHADER == 5) {\n        r += Au;\n        w = 1.5;\n    } else if(SHADER == 6) {\n        r = Du + Au;\n        w = 1./.75;\n    //} else if(SHADER == 7.5) {\n    //    r += Au;\n    } else if(SHADER == 7) {\n        r += Au * (Bu.z-.5)*.3;\n    //} else if(SHADER == 9) {\n    //    r = Du;\n    //    w = 1./6. * (sin(Du.z*3.)*2.+4.);\n    }\n    float s = 0.;\n    CONV(8) s += G(w * (r.xy + ij));\n    r = vec4(r.xy, recip(s), 0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "MAIN {\n    r = vec4(0);\n    vec4 w = vec4(0);\n    /*if(SHADER == 1) {\n        CONV(6) r += Di.z * G(Ci.xy+ij) * vec4(Ci.xy+(Ci.xy+ij)*(.8-Di.z),Ci.z,1);\n    } else*/ if(SHADER == 2 || SHADER == 4) {\n        w = vec4(0,1,0,0);\n    } else if(SHADER == 3) {\n        w = vec4(1, .5, 0, 0);\n    } else if(SHADER == 5) {\n        w = vec4(1, 1.5, 0, 0);\n    } else if(SHADER == 6) {\n        w = vec4(2, 1./.75, 0, 0);\n    } else if(SHADER == 7) {\n        w = vec4(1,1,0,0);\n    //} else if(SHADER == 9) {\n    //    CONV(6) r += vec4((Bi * Ci.z * G((Bi.xy-ij)/6. * (sin(Bi.z*3.)*2.+4.))).xyz, 0);\n    }\n\n    CONV(8) r += (w.x == 0. ? 1. : w.x == 1. ? Bi.z : Di.z) * G(w.y * (Ci.xy - ij)) * vec4(Ci.xyz, 1);\n    r.xy *= recip(r.w);\n\n    int scales[9] = int[](0,22,4,4,8,16,8,8,2);\n    float scale = float(scales[SHADER-1]);\n    if(iMouse.z>0.) {\n        vec2 m = scale*(u-iMouse.xy)/R.y;\n        r += vec4(m,0,0)*G(m)*.1;\n    }\n    if(iFrame < 2) {\n        vec2 m = scale * (UV - 0.5);\n        //if(SHADER == 9) r = vec4(.1*G(m));\n        r = vec4(m,1,1)*G(m);\n    }\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}