{
    "Shader": {
        "info": {
            "date": "1589409695",
            "description": "hmmm i would need a 3d costas array?\n\nhttps://en.wikipedia.org/wiki/Primitive_root_modulo_n",
            "flags": 0,
            "hasliked": 0,
            "id": "tdjfzR",
            "likes": 2,
            "name": "costasArray2",
            "published": 3,
            "tags": [
                "dither",
                "costas",
                "costasarray"
            ],
            "usePreview": 0,
            "username": "ollj",
            "viewed": 489
        },
        "renderpass": [
            {
                "code": "//self: https://www.shadertoy.com/view/tdjfzR\n/*\ncostas array is pattern free\nIn theory ideal for dithering\nThe greyscaling gradient is BASIC, and can easily be more distorted\n,by adding any ;u.x+=u.y*b; b!=0 offset\n*/\n\n#define base1 2.\n#define period 29.\n//the pairs (3,5) (3,7) (5,7)  make costas arrays\n//the pairs (2,11) (2,13) (2,29) look a lot like they make costas arrays\n//the function below fails for too large [base1] values\n//and it breaks for period>=37\n#define base2 base1\n\n#define zoom (iResolution.y/period)\n\n//welch-construction of costas array both inputs are primes.\n//original by ollj, faster variant by FabriceNeyret2 \n//because foercing i into type int is irrelevant \n//within the small precision of pow() in 32 bit.\nfloat CostasWelch(float x,float b){\n // return mod( round(      exp2(mod(x,period)) ) , period );\n   return mod( round(     pow(b,mod(x,period)) ) , period );      // not exactly indentical\n // return float(int( .5 + pow(b,mod(x,period)) ) % int(period));  // not exactly indentical\n // return float(int(round(pow(b,mod(x,period)))) % int(period));  // original\n}\n\nvoid mainImage(out vec4 O, vec2 u\n){//u=u.yx\n ;float c=0.\n ;if(u.x<(period-1.)*zoom\n   &&u.y<(period-1.)*zoom\n ){\n  ;u=floor(u/zoom)\n  ;c=CostasWelch(u.x,base1)\n  ;if(mod(floor(iTime),2.)==1.\n  ){if(u.y+1.==c)c=period-1.;else c=0.;}//monochrome\n  else  c=mod(-c+u.y,period+1.)       //greyscale\n  ;\n  ;\n  ;if(mod(floor(iTime),3.)==1.\n  ){ \n  ;\n  ;//+1 iteration to break the linear gradient\n  ;c=CostasWelch(c,base2)//maybe a different base, that is a costas array (of same period)\n  ;if(mod(floor(iTime),2.)==1.\n  ){if(u.y+1.==c)c=period-1.;else c=0.\n   ;}\n  else  c=mod(-c+u.y,period+1.)\n  ;}\n/**/\n  ;\n  ;c=c/(period-2.)//gradient\n  ;}\n ;O=vec4(c,c,c,1.0)\n ;}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}