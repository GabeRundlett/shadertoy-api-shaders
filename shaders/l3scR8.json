{
    "Shader": {
        "info": {
            "date": "1725862646",
            "description": "projectors",
            "flags": 0,
            "hasliked": 0,
            "id": "l3scR8",
            "likes": 0,
            "name": "sep82024",
            "published": 3,
            "tags": [
                "popart"
            ],
            "usePreview": 0,
            "username": "brendanluu",
            "viewed": 61
        },
        "renderpass": [
            {
                "code": "// Simple 2D noise function\nfloat noise(vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalize pixel coordinates\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    // Time variable for animation\n    float t = iTime * 1.5;\n    \n    // Create the central dot (head)\n    float head = smoothstep(0.6, 0.07, length(uv));\n    \n    // Create two swooping arms\n    float leftArm = 0.0;\n    float rightArm = 0.0;\n    \n    // Parameters for arm movement\n    float frequency = 1.5;\n    float amplitude = 0.8;\n    \n    // Left arm\n    vec2 leftUV = uv + vec2(0.2, 0.0);\n    float leftPhase = sin(t * 0.7) * 0.5;\n    float leftCurve = sin(leftUV.x * 3.0 + t) * 0.1;\n    leftArm = smoothstep(0.06, 0.055,  // Increased thickness here\n        abs(leftUV.y - amplitude * sin(leftUV.x * frequency + t + leftPhase) + leftCurve));\n    \n    // Right arm\n    vec2 rightUV = uv - vec2(0.2, 0.0);\n    float rightPhase = cos(t * 0.8) * 0.5;\n    float rightCurve = sin(rightUV.x * 2.5 - t) * 0.1;\n    rightArm = smoothstep(0.06, 0.055,  // Increased thickness here\n        abs(rightUV.y - amplitude * sin(rightUV.x * frequency - t + rightPhase) + rightCurve));\n    \n    // Add thickness variation to arms\n    leftArm *= 1.0 + 0.2 * sin(leftUV.x * 10.0 + t * 2.0);\n    rightArm *= 1.0 + 0.2 * sin(rightUV.x * 8.0 - t * 2.0);\n    \n    // Combine head and arms, inverting the color where arms overlap\n    float pattern = head * (1.0 - max(leftArm, rightArm));\n    \n    // Add some organic distortion using the simple noise function\n    pattern += 0.15 * noise(uv * 998.0 + t);\n    \n    // Enhance contrast\n    pattern = smoothstep(0.2, 0.8, pattern);\n    \n    // Output final color (white pattern on black background)\n    fragColor = vec4(vec3(pattern), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}