{
    "Shader": {
        "info": {
            "date": "1405671704",
            "description": "Used filter width (fwidth) to antialias edges (no supersampling). See the jagged edges in the left side of the screen vs the smooth edges in the right side. Both pre and post gamma filtering are implemented (move mouse to change the areas)",
            "flags": 0,
            "hasliked": 0,
            "id": "4ssSRl",
            "likes": 92,
            "name": "Antialias / filtering",
            "published": 3,
            "tags": [
                "2d",
                "antialias",
                "filtering"
            ],
            "usePreview": 0,
            "username": "iq",
            "viewed": 12137
        },
        "renderpass": [
            {
                "code": "// The MIT License\n// Copyright Â© 2014 Inigo Quilez\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// https://www.youtube.com/c/InigoQuilez\n// https://iquilezles.org\n// distance to a line (can't get simpler than this)\nfloat line( in vec2 a, in vec2 b, in vec2 p )\n{\n\tvec2 pa = p - a;\n\tvec2 ba = b - a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n\treturn length( pa - ba*h );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (-iResolution.xy + 2.0*fragCoord.xy) / iResolution.yy;\n\tvec2 q = p;\n\t\n\tvec2 c = vec2(0.0);\n\tif( iMouse.z>0.0 ) c=(-iResolution.xy + 2.0*iMouse.xy) / iResolution.yy;\n\t\n    // background\t\n\tvec3 col = vec3(0.5,0.85,0.9)*(1.0-0.2*length(p));\n\tif( q.x>c.x && q.y>c.y ) col = pow(col,vec3(2.2));\n\n    // zoom in and out\t\n\tp *= 1.0 + 0.2*sin(iTime*0.4);\n\t\n\t\n\t// compute distance to a set of lines\n    float d = 1e20;\t\n\tfor( int i=0; i<7; i++ )\n\t{\n        float anA = 6.2831*float(i+0)/7.0 + 0.15*iTime;\n        float anB = 6.2831*float(i+3)/7.0 + 0.20*iTime;\n\t\tvec2 pA = 0.95*vec2( cos(anA), sin(anA) );\t\t\n        vec2 pB = 0.95*vec2( cos(anB), sin(anB) );\t\t\n\t\tfloat h = line( pA, pB, p );\n\t\td = min( d, h );\n\t}\n\n    // lines/start, left side of screen\t: not filtered\n\tif( q.x<c.x )\n\t{\n\t\tif( d<0.12 ) col = vec3(0.0,0.0,0.0); // black \n\t\tif( d<0.04 ) col = vec3(1.0,0.6,0.0); // orange\n\t}\n    // lines/start, right side of the screen: filtered\n\telse\n\t{\n\t\tfloat w = 0.5*fwidth(d); \n\t\tw *= 1.5; // extra blur\n\t\t\n\t\tif( q.y<c.y )\n\t\t{\n\t\tcol = mix( vec3(0.0,0.0,0.0), col, smoothstep(-w,w,d-0.12) ); // black\n\t\tcol = mix( vec3(1.0,0.6,0.0), col, smoothstep(-w,w,d-0.04) ); // orange\n\t\t}\n\t\telse\n\t\t{\n\t\tcol = mix( pow(vec3(0.0,0.0,0.0),vec3(2.2)), col, smoothstep(-w,w,d-0.12) ); // black\n\t\tcol = mix( pow(vec3(1.0,0.6,0.0),vec3(2.2)), col, smoothstep(-w,w,d-0.04) ); // orange\n\t\t}\n\t}\n\t\n\n\tif( q.x>c.x && q.y>c.y )\n\t\tcol = pow( col, vec3(1.0/2.2) );\n\t\n    // draw left/right separating line\n\tcol = mix( vec3(0.0), col, smoothstep(0.007,0.008,abs(q.x-c.x)) );\n\tcol = mix( col, vec3(0.0), (1.0-smoothstep(0.007,0.008,abs(q.y-c.y)))*step(0.0,q.x-c.x) );\n\t\n\t\n\tfragColor = vec4( col, 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}