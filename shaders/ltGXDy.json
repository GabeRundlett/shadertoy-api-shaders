{
    "Shader": {
        "info": {
            "date": "1485690262",
            "description": "offsetting the radius for extra blobiness",
            "flags": 0,
            "hasliked": 0,
            "id": "ltGXDy",
            "likes": 11,
            "name": "baby's first metaballs",
            "published": 3,
            "tags": [
                "2d",
                "metaball"
            ],
            "usePreview": 0,
            "username": "percentcer",
            "viewed": 916
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const int kNum = 4;\n    float sum_of_influence = 0.;\n    \n    for (int i = 0; i < kNum; ++i)\n    {\n        float idx = float(i+1);\n        \n        vec2 position = vec2(\n            //            \"wiggliness\"                             |   15% of the screen   |  start at the ctr\n            (cos(iTime * 0.5) + cos(iTime * idx * .3)) * (iResolution.x * .17) + iResolution.x / 2.,\n            (sin(iTime * 0.3) + sin(iTime * idx * .7)) * (iResolution.y * .15) + iResolution.y / 2.\n            );\n        float radius = (iResolution.x * .01) * idx;\n        float dist = distance(fragCoord.xy, position);\n        \n        // wiggle the distance to the ball based on direction of ball to point\n        vec2 direction = normalize(fragCoord.xy - position);\n        float angle = atan(direction.y, direction.x);\n        float perimeter_offset = sin(angle * 7.) + sin((iTime + angle) * 3. * idx);\n        radius += perimeter_offset * (radius * .1); // at most 10% adjustment\n        \n        float influence = radius / dist;\n        \n        sum_of_influence += influence;\n    }\n    \n    // this creates a pulsing external color with a sharp falloff\n    float pulse = abs(sin(iTime)) * 10. + 4.;\n    float color = pow(sum_of_influence, pulse);\n    \n    if (color <= 1.)\n    {\n        // base color is a function of how close you are to being \"inside\" a metaball\n        // left and right make you more blue, up and down make you more red\n        vec2 st = fragCoord.xy / iResolution.xy;\n        fragColor = vec4(\n            color * (1. - (abs(st.x - .5) / .5)),\n            0.,\n            color * (1. - (abs(st.y - .5) / .5)),\n            1.0);\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}