{
    "Shader": {
        "info": {
            "date": "1612796410",
            "description": "Built an erector set menger for my robot spider monkeys to replace that matchstick disaster. I don't have any robot spider monkeys yet but I'm cautiously optimistic. Its like honey to a bee.",
            "flags": 8,
            "hasliked": 0,
            "id": "tldfWN",
            "likes": 24,
            "name": "Erector Set Menger",
            "published": 3,
            "tags": [
                "menger"
            ],
            "usePreview": 0,
            "username": "eiffie",
            "viewed": 536
        },
        "renderpass": [
            {
                "code": "//erector set menger by eiffie\n#define time iTime\n#define rez iResolution\nvec3 mcol=vec3(0.0);bool bHide;\nconst float c1=0.0125,c2=0.007;\nfloat axi(vec3 p){p=abs(p);p=max(p,p.yzx);return min(p.x,min(p.y,p.z));}\nfloat box(vec3 p){p=abs(p);return max(abs(p.x),max(abs(p.y),abs(p.z)));}\nfloat ere(vec3 p){p=abs(p);return max(axi(p)-c1,min(p.x,min(p.y,p.z))-0.001);}\nfloat hol(vec3 p){p=abs(mod(p,c2*2.))-c2;return min(length(p.xy),min(length(p.yz),length(p.xz)));}\nfloat tube(vec3 pa, vec3 ba){return length(pa-ba*clamp(dot(pa,ba)/dot(ba,ba),0.0,1.0));} \n\nfloat DE(vec3 p){\n  float s=1./3.,md=1./(27.*s);//menger sizes\n  p+=(0.1+0.05*sin(p.yzx*time*0.1+time*time*0.02))*abs(mod(p.zxy,2.*md)-md);//make wonky\n  float r=box(p)-1.0,d=axi(p)-s,r1=r;//1st menger iter\n  vec3 m=floor(p/md);//find what box we are in (k)\n  float k=sin(m.x+2.4*sin(m.z))+m.z,tim=time*(2.+7.*fract(k));\n  vec3 v=mod(p+.5*md,md)-.5*md;//mod to the box\n  vec3 q=vec3(v.x,mod(p.y+k+tim*0.01+sin(tim*4.)*0.003,0.15+0.25*fract(k))-0.2,v.z)-0.02;\n  q.xz=0.707*vec2(q.x-q.z,q.x+q.z);//q is the spider, turn 45 deg\n  float f=max(length(q)-0.01,-q.z-0.003);//body\n  vec3 sq=sign(q);sq.z=-1.;//legs\n  f=min(f,tube(q-sq*vec3(0.006,0.007,0.003),sq*vec3(0.002,0.014+q.z*abs(sin(tim+.5*sq.x)),0.014))-0.001);\n  if(min(abs(p.x),abs(p.z))<s || max(abs(p.x),abs(p.z))>1.)f=10.;//remove unwanted spiders\n  vec3 av=abs(v)-c2;//bolt things (b)\n  float b=max(max(length(av)-0.0055,box(av)-0.004),r-c1);\n  r=max(ere(v),r);//erector t bars\n  p=2.*clamp(p,-s,s)-p;//2nd menger iter\n  s*=s;//reduce size of halls\n  if(bHide)if(abs(p.x)<s || abs(p.z)<s)f=10.;//remove more spiders\n  d=min(d,axi(p)-s);//menger hallways\n  r=max(r,-min(d+c2*2.,hol(v)-0.004));//remove holes and halls from t bars\n  b=max(b,-d-0.02);//remove unwanted bolts\n  f=max(min(f,.1-length(v)),r1);//slow the march down around the spiders (hack)\n  mcol+=(r<min(b,f)?vec3(.5):b<f?vec3(-.25)-.25*sin(sign(v)*vec3(k,k+1.,k+2.)):vec3(0.));\n  return min(r,min(b,f))*.9;//what did we hit? color it (mcol)\n}\nfloat RD; //secret sauce\nvec3 normal(vec3 p, float d){//from dr2\n  vec2 e=vec2(d,-d);vec4 v=vec4(DE(p+e.xxx),DE(p+e.xyy),DE(p+e.yxy),DE(p+e.yyx));\n  RD=8.*abs(d/length(v));//not from dr2\n  return normalize(2.*v.yzw+vec3(v.x-v.y-v.z-v.w));\n}\nvec3 sky(vec3 rd, vec3 L){\n  float d=0.4*dot(rd,L)+1.6;\n  return vec3(0.6,0.8,1.)*d*max(0.1,rd.y+.2)+rd*.1;\n}\nfloat rnd;\nvoid randomize(in vec2 p){rnd=fract(float(time)+sin(dot(p,vec2(13.3145,117.7391)))*42317.7654321);}\n\nfloat ShadAO(in vec3 ro, in vec3 rd){\n float t=0.001*rnd,s=1.0,d,mn=0.001;\n for(int i=0;i<4;i++){\n  d=max(DE(ro+rd*t),mn);\n  s=min(s,d/t+t);\n  t+=d;\n }\n return s;\n}\nvec3 scene(vec3 ro, vec3 rd){\n  float t=DE(ro)*rnd,tt=t,d,px,s=1.;\n  vec3 L=normalize(vec3(ro.x,0.5,ro.z+.4));\n  vec3 col=vec3(0);\n  for(int j=0;j<2;j++){\n    px=s/rez.x;\n    for(int i=0;i<80;i++){\n      t+=d=DE(ro+rd*t);\n      if(t>2.0 || d<px*t)break;\n    }\n    if(d<px*t){\n      mcol=vec3(0.001);\n      vec3 so=ro+rd*t;\n      vec3 N=normal(so,d);\n      vec3 scol=mcol*0.25;\n      float dif=0.5+0.5*dot(N,L);\n      float vis=clamp(dot(N,-rd),0.05,1.0);\n      float fr=0.2*pow(1.-vis,5.0);\n      ro=so+rd*DE(so);tt+=t;\n      float shad=clamp(1.0-tt*.5,0.,1.)*ShadAO(ro,N)*(s==1.?1.:.5-t);\n      rd=reflect(rd,N);\n      col+=(abs(scol)*dif+fr*sky(rd,L))*shad*RD;\n      if(scol.x<0.)return col;\n      t=DE(ro)*(1.-rnd);\n      s=5.;\n    }\n  }\n  if(s==1.)col=sky(rd,L);\n  return col;\n}\nmat3 lookat(vec3 fw){fw=normalize(fw);vec3 up=vec3(0,1,0),rt=normalize(cross(up,fw));\n  return mat3(rt,cross(fw,rt),fw);\n}\nvoid mainImage(out vec4 O, in vec2 U){\n  vec2 uv=vec2(U-0.5*rez.xy)/rez.x;\n  randomize(U.xy);\n  float tim=time*.05;\n  vec3 ro=vec3(cos(tim),0.6+sin(tim)*0.25,sin(tim))*(0.7-time/600.);\n  tim=mod(time,60.);\n  bHide=time<60.;\n  if(tim>50.)ro=vec3(-0.5,.5-(tim-50.)*0.025,-0.5);\n  vec3 rd=lookat(ro)*normalize(vec3(uv,1.0));\n  O=vec4(scene(ro,rd),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 mainSound( int samp, float time )\n{\n  int m=65536*8;\n  vec2 o=vec2(0);\n  for(int i=0;i<16;i++){\n    int t=samp+i*i*9; \n    t*=(t>>14 & t>>(t%m>m-65536 && i>0?11:13) & t>>int(0.25*float(i)*sin(time)));\n    o+=vec2(t%256,(t>>1)%256)/float(1024*(i/4+2));\n  }\n  return sign(o)*fract(abs(o*time*time*0.0002))*.8;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}