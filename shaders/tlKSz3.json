{
    "Shader": {
        "info": {
            "date": "1583278130",
            "description": "sex",
            "flags": 0,
            "hasliked": 0,
            "id": "tlKSz3",
            "likes": 6,
            "name": "MyGrids",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "Arseny",
            "viewed": 420
        },
        "renderpass": [
            {
                "code": "//#define BLINKING\n\nfloat circGrid(vec2 uv, float offset, float blur){\n    vec2 lv = fract(uv);\n    lv -= 0.5;\n    return 1. - smoothstep(0., blur, abs(length(lv) - (0.5 - offset - blur)));\n}\n\nfloat polargreed(vec2 uv){\n    float ans = 0.;\n    float len = length(uv);\n    if (len < 0.1){\n        return 0.;\n    }\n    vec2 pv1 = vec2(atan(uv.y, uv.x) / 6.2831 + 0.5 + pow(len, 0.5) / 5., len);\n    //float m = min(fract(x), fract(1. - x));\n    //ans = smoothstep(0., 0.1, m * 0.5 + .2 - pv.y);\n    float m;\n    float dst = abs(fract(pv1.x * 23.) - 0.5) * 2.;\n    float t = iTime;\n    #ifdef BLINKING\n    t = 0.;\n    #endif\n    dst = min(dst, abs(fract(pow(len, 0.7) * 7. + t) - 0.5) * 2.);\n    //m = fract(pv1.x * 23.);\n    //ans = max(ans, 1. - smoothstep(0., 0.1, abs(m - 0.5)));\n    //m = fract(sqrt(len) * 7.);\n    //ans = max(ans, 1. - smoothstep(0., 0.1, abs(m - 0.5)));\n    ans = dst;//max(ans, 1. - smoothstep(0., 0.1, dst));\n    return ans;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy)/iResolution.y * 2.;\n    vec3 col = vec3(0);\n    col = vec3(polargreed(uv));\n    \n    \n    #ifdef BLINKING\n    if (mod(floor(iTime * 40.), 2.) < 0.1){\n        col = vec3(0.5);\n    }\n    #endif\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}