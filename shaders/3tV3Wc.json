{
    "Shader": {
        "info": {
            "date": "1580079725",
            "description": "I'm playing around with generating sound using pure sine waves",
            "flags": 8,
            "hasliked": 0,
            "id": "3tV3Wc",
            "likes": 4,
            "name": "Trumpet Tone",
            "published": 3,
            "tags": [
                "wave",
                "audio",
                "tone"
            ],
            "usePreview": 0,
            "username": "EFHIII",
            "viewed": 403
        },
        "renderpass": [
            {
                "code": "/*\nSound text copied from\nhttps://www.shadertoy.com/view/MtyXRW\n*/\n\n#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureGrad(iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), dFdx(U/16.),dFdy(U/16.) )\n#define initMsg vec4 T = vec4(0)\n#define endMsg  return length(T.yz)==0. ? 0. : T.x\n\nfloat message(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0);   // or: initMsg;\n    C(83);C(111);C(117);C(110);C(100);C(32);C(105);C(110); // message \"Sound in\"\n    return length(T.yz)==0. ? -1. : T.x; // or: endMsg;\n}\n\nfloat getWave(in float time){\n\tfloat Tau=6.2831853;\n \n    float C=Tau*261.6256;\n    \n    float freq[8];\n    freq[0]=C;\n    freq[1]=C*2.;\n    freq[2]=C*3.;\n    freq[3]=C*4.;\n    freq[4]=C*5.;\n    freq[5]=C*6.;\n    freq[6]=C*7.;\n    freq[7]=C*8.;\n    \n    float mag[8];\n    mag[0]=0.1155;\n    mag[1]=0.3417;\n    mag[2]=0.1789;\n    mag[3]=0.1232;\n    mag[4]=0.0678;\n    mag[5]=0.0473;\n    mag[6]=0.0260;\n    mag[7]=0.0045;\n    \n    float val=0.;\n    for(int i=0;i<8;i++){\n    \tval+=sin(freq[i]*time)*mag[i];\n    }\n    \n    \n    if(time<.2){\n    \treturn val*sin(time*6.2831853*1.25);\n    }\n    \n    if(time<2.2){\n    \treturn val*0.5/(time+0.3)*(1.-(time-0.2)*0.5);\n    }\n    \n    return 0.;\n}\n\nfloat func(in float x){\n    float Tau = 6.2831853;\n    float t = (x+iTime/6.)*Tau*2.;\n    float val = -getWave(x*0.01+iTime);\n\treturn val/2.1+0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iResolution.y<2000.) {\n        float c=message((fragCoord/iResolution.y-vec2(.1,.2))*8.);\n    \tif(c>=0.){\n            fragColor=vec4(c);return;\n        }\n    }\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n   \tfloat mag=50.;\n    float maxV=0.;\n    \n    float val = func(uv.x);\n    if(uv.y>val-0.02&&uv.y<val+0.02){\n\t\tval = (abs(uv.y-val))*mag;\n    \tfragColor = vec4(1.-val,0.,val,1.);\n    }\n    else{\n    \tfragColor=vec4(0.,0.,0.2,1.);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 mainSound( in int samp, float time )\n{\n\tfloat Tau=6.2831853;\n \n    float C=Tau*261.6256;\n    \n    float freq[8];\n    freq[0]=C;\n    freq[1]=C*2.;\n    freq[2]=C*3.;\n    freq[3]=C*4.;\n    freq[4]=C*5.;\n    freq[5]=C*6.;\n    freq[6]=C*7.;\n    freq[7]=C*8.;\n    \n    float mag[8];\n    mag[0]=0.1155;\n    mag[1]=0.3417;\n    mag[2]=0.1789;\n    mag[3]=0.1232;\n    mag[4]=0.0678;\n    mag[5]=0.0473;\n    mag[6]=0.0260;\n    mag[7]=0.0045;\n    \n    float val=0.;\n    for(int i=0;i<8;i++){\n    \tval+=sin(freq[i]*time)*mag[i];\n    }\n    \n    if(time<.2){\n    \treturn vec2(val*sin(time*6.2831853*1.25));\n    }\n    \n    if(time<2.2){\n    \treturn vec2(val*0.5/(time+0.3)*(1.-(time-0.2)*0.5));\n    }\n    \n    return vec2(0.);\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}