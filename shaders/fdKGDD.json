{
    "Shader": {
        "info": {
            "date": "1631574119",
            "description": ":octopus:",
            "flags": 34,
            "hasliked": 0,
            "id": "fdKGDD",
            "likes": 28,
            "name": "- sobel fire -",
            "published": 3,
            "tags": [
                "music",
                "fire",
                "detection",
                "edge"
            ],
            "usePreview": 0,
            "username": "anahit_movsesyan",
            "viewed": 1031
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec4 col = texture(iChannel0, fragCoord.xy / iResolution.xy);\n    fragColor = col * col.a;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define STEP 4.\n\nfloat lookup(vec2 p) {\n    vec4 c = texture(iChannel1, p);\n\treturn dot(c, c);\n}\n\nfloat sobel(vec2 p) {\n    vec3 offset = vec3(STEP / iResolution.x, 0, STEP / iResolution.y); \n    float tl = lookup(p + vec2(-1,  1) * offset.xz);\n    float cl = lookup(p + vec2(-1,  0) * offset.xy);\n    float bl = lookup(p + vec2(-1, -1) * offset.xz);\n    float ct = lookup(p + vec2( 0,  1) * offset.yz);\n    float cb = lookup(p + vec2( 0, -1) * offset.yz);\n    float tr = lookup(p + vec2( 1,  1) * offset.xz);\n    float cr = lookup(p + vec2( 1,  0) * offset.xy);\n    float br = lookup(p + vec2( 1, -1) * offset.xz);\n    vec2 g = vec2(tl + 2. * cl + bl - tr - 2. * cr - br,\n                 -tl - 2. * ct - tr + bl + 2. * cb + br);\n    return dot(g, g);\n }\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float s = texture(iChannel2, vec2(0)).r;\n    vec2 uv = (1. - s * 0.015) * (fragCoord.xy / iResolution.xy - 0.5) + 0.5;\n    vec3 col = vec3(0.8, 0.2, 0.1) * sobel(uv); \n    \n    uv += sin(30. * length(uv - 0.5) + iTime * 5.) * (uv.yx - 0.5) * 0.01 / (15. * length(uv - 0.5) + 1.);\n    vec3 fire = vec3(mix(texture(iChannel0, uv).rgb, col, 0.05));\n    fragColor = vec4(fire, s);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "music",
                        "id": 35,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}