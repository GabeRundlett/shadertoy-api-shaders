{
    "Shader": {
        "info": {
            "date": "1702322494",
            "description": "https://twitter.com/Pixelated_Donut/status/1724430051280568407/",
            "flags": 0,
            "hasliked": 0,
            "id": "dtyczD",
            "likes": 13,
            "name": "BC: Box Pattern",
            "published": 3,
            "tags": [
                "pattern"
            ],
            "usePreview": 0,
            "username": "BackwardsCap",
            "viewed": 207
        },
        "renderpass": [
            {
                "code": "#define TAU 6.283\n#define pow(a,b) pow(abs(a),b)\n//#define SHIFT\n\nvec2 f(vec2 p)\n{\n    vec2 t = vec2(pow(p.x,2.)-pow(p.y,2.), -2.*p.x*p.y);\n    float b = pow(p.x,4.) + pow(p.y,4.) + 2.*pow(p.x,2.)*pow(p.y,2.);\n    return (t/b)-(p/3.);\n}\n\nvec2 P(vec2 p, float i)\n{\n    vec2 v = f(f(f(f(f(f(p))))));\n    float ti = TAU * (i/3.0);\n    \n    #ifdef SHIFT\n    ti -= iTime - p.x * p.x * length(p);\n    #endif\n\n    return v - vec2(cos(ti),sin(ti));    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n\n    float[] p = float[3](length(P(uv, 1.0)), length(P(uv,2.0)), length(P(uv,3.0)));\n    \n    vec3 c = vec3(0);\n    \n    if(p[0] <= min(p[1],p[2])) c = vec3(0.557,0.286,0.961);\n    if(p[1] <= min(p[2],p[0])) c = vec3(0.000,0.114,0.643);\n    if(p[2] <= min(p[0],p[1])) c = vec3(0.129,0.376,0.780);\n    \n    fragColor = vec4(c,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}