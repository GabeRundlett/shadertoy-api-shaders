{
    "Shader": {
        "info": {
            "date": "1504663514",
            "description": "Testing radial distance field",
            "flags": 0,
            "hasliked": 0,
            "id": "4llcDH",
            "likes": 10,
            "name": "Radial Field",
            "published": 3,
            "tags": [
                "2dradial"
            ],
            "usePreview": 0,
            "username": "bmodone",
            "viewed": 788
        },
        "renderpass": [
            {
                "code": "#define M_PI 3.1415926535897932384626433832795\n\nfloat radial(vec2 uv, float offset, float repeat) {\n    float a = mod((atan(uv.y, uv.x) + M_PI + (offset * 2.0 * M_PI)) * 5.0 / M_PI, 2.0);\n    return (a > 1.0) ? 2.0 - a : a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n \tfloat d = length(uv) - 0.1;\n    float off = length(uv);\n    float a = radial(uv, sin(off*2.0-iTime*2.0) / 2.0, 3.0) - 0.5;\n    d = a;\n    \n    \n    //float m = d < 0.0 ? 0.0 : 1.0;\n    float m = clamp(-d*6.0, 0.0, 1.0);\n    \n    vec3 col = mix(vec3(1.0, 0.2, 0.4), vec3(1.0, 1.0, 0.4), m);\n    col *= sin(off * 4.0 - iTime*4.0) / 5.0 + 0.7;\n    \n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}