{
    "Shader": {
        "info": {
            "date": "1591459176",
            "description": "red = temporal mean, green = temporal std-dev, blue = temporal autocorrelation\n( relaxation time Common:relax )",
            "flags": 34,
            "hasliked": 0,
            "id": "3lsczH",
            "likes": 8,
            "name": "video temporal statistics",
            "published": 3,
            "tags": [
                "video"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 683
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    O = T(U);\n    float  m = O.r/O.a, s = O.b, c = s/m;     // mean, std-dev, autocorrelation\n    O = vec4( sqrt(m), sqrt(s), sqrt(c), 1);  // to sRGB\n  //O = O.zzzz;                               // display autocorrelation only\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    O.r = T(U).a;\n    O.g = O.r*O.r;\n    O.a = 1.;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "float relax = 20. , // relaxation time in frames\n      b = 0.;       // LOD bias\n\n#define R iResolution.xy\n \n#define  T(U) texture(iChannel0,(U)/R, b)\n#define T1(U) texture(iChannel1,(U)/R ,b)\n#define T2(U) texture(iChannel2,(U)/R, b)",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    U.x = R.x-U.x;           // video = mirror\n    O   =  T(U);\n    O.a = dot(O.rgb,O.rgb);  // sRGB to flat\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// --- compute temporal moments M1,M2 (.rg), and std-dev (.b) \n//     .a = normalization -> mean = .r/.a\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = T2(U);\n  //b = 2.;                                    // use LOD input \n  //relax = mix(40., 2., clamp(4.*O.b,0.,1.)); // adaptive integration\n    O = mix( O , T(U), 1./relax );             // relaxation\n    \n    float m =               O.r/O.a,           // temporal mean \n          s = sqrt( max(0., O.g/O.a - m*m ) ); // temporal std dev\n    O.b = s;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}