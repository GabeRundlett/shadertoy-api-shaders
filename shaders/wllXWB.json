{
    "Shader": {
        "info": {
            "date": "1564188817",
            "description": "I hadn't seen a fractal septagon on shadertoy yet. So here it is.",
            "flags": 0,
            "hasliked": 0,
            "id": "wllXWB",
            "likes": 7,
            "name": "Fractal Septagon",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "iterative",
                "septagon"
            ],
            "usePreview": 0,
            "username": "mathmasterzach",
            "viewed": 433
        },
        "renderpass": [
            {
                "code": "//Based on http://paulbourke.net/fractals/septagon/\n\n//uncomment to modify the Ï• value with your mouse\n//#define MOUSE_CONTROL\n\nfloat MAX_STEPS=512.;\nfloat PI=acos(-1.);\nfloat AA=1.;\n\n#define vecMul(a,b) vec2(a.x*b.x-a.y*b.y,a.x*b.y+a.y*b.x)\n#define vecDiv(a,b) vec2(a.x*b.x+a.y*b.y,a.y*b.x-a.x*b.y)/(b.x*b.x+b.y*b.y)\n\nmat2 matRot(float a){\n\tfloat c=cos(a),\n          s=sin(a);\n    return mat2(c,s,s,-c);\n}\n\nvec3 samplePoint(vec2 c,float maxIters){\n    float i;\n    for(i=0.;i<maxIters;i++){\n        vec2 c2 = vecMul(c ,c );\n        vec2 c3 = vecMul(c2,c );\n        vec2 c6 = vecMul(c3,c3);\n        vec2 c7 = vecMul(c6,c );\n        #ifdef MOUSE_CONTROL\n        \tc7+=2.*iMouse.xy/iResolution.xy-1.;\n        #else\n        \tc7.x -=.7/5.;\n        #endif\n        c = vecDiv(c7,c );\n        if(length(c)>2.){\n            break;\n        }\n    }\n    float ic=(5.*i/maxIters);\n    return vec3(cos(1.-ic)+1.,cos(2.-ic)+1.,cos(3.-ic)+1.)/2.;\n    //uncomment this and comment the line above to see a warped grid overlay\n    //c=fract(c/10.)-.5;\n    //float lg=2.*max(abs(c.x),abs(c.y));\n    //return lg*vec3(cos(1.-ic)+1.,cos(2.-ic)+1.,cos(3.-ic)+1.)/2.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 c = 2.*fragCoord/iResolution.xy-1.;\n    c.x*=iResolution.x/iResolution.y;\n    \n    float zoomFactor=9.5*(-cos(PI*iTime/18.)+1.);\n    float maxIters=MAX_STEPS*(zoomFactor+18.)/36.;\n    float zoom=pow(2.,zoomFactor);\n    c/=zoom;\n    float delt=((1./iResolution.y)/zoom)/AA;\n    \n    c*=matRot(zoomFactor/10.);\n    c+=vec2(.159,.120);\n    \n    vec3 col;\n    for(float y=0.;y<AA;y++){\n    \tfor(float x=0.;x<AA;x++){\n    \t\tcol+=samplePoint(c+vec2(x,y)*delt,maxIters);\n    \t}\n    }\n    col/=(AA*AA);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}