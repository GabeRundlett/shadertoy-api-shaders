{
    "Shader": {
        "info": {
            "date": "1615063790",
            "description": "Experimenting with the Lorentz transformation.",
            "flags": 0,
            "hasliked": 0,
            "id": "3tKBWK",
            "likes": 5,
            "name": "Lorentz Transformation",
            "published": 3,
            "tags": [
                "math",
                "physics"
            ],
            "usePreview": 0,
            "username": "mgattis",
            "viewed": 363
        },
        "renderpass": [
            {
                "code": "const float scale = 1.2;\n\nfloat point(vec2 p)\n{\n    float s = 2.0 / iResolution.y * scale;\n    return step(length(p), 8.0 * s);\n}\n\nfloat axis(vec2 p)\n{\n    float s = 2.0 / iResolution.y * scale;\n    // axis\n    vec2 a = step(mod(abs(p), vec2(1.0)), vec2(2.0 * s));\n    a += step(mod(abs(p), vec2(0.1)), vec2(s));\n    return a.x + a.y;\n}\n\nfloat box(vec2 p)\n{\n    p = abs(p);\n    //float b = step(max(p.x, p.y), 1.0);\n    return step(p.x - p.y, 0.0);\n}\n\nvec3 image(vec2 fragCoord)\n{\n    float s = 2.0 / iResolution.y * scale;\n    \n    vec2 p = 2.0 * fragCoord.xy / iResolution.y;\n    p -= vec2(iResolution.x / iResolution.y, 0.2);\n    p *= scale;\n    \n    vec2 q = 2.0 * iMouse.xy / iResolution.y;\n    q -= vec2(iResolution.x / iResolution.y, 0.2);\n    q *= scale;\n    \n    vec3 color = vec3(0.0);\n    \n    //q = vec2(0.39, 0.399);\n    //q = vec2(1.0, 4.0);\n    //q.y = 1.0;\n    //q.x = -q.x;\n    float c = 1.0;\n    float v = q.x / q.y;\n    float g = 1.0 / sqrt(1.0 - v * v / (c * c));\n    mat2 l = mat2(\n        1.0 + (g - 1.0),\n        -g * v / c,\n        -g * v / c,\n        g);\n    //q.x = -q.x;\n    \n    color += box(p) / 8.0;\n    color += axis(p) / 4.0;\n    color += axis(l * p) / 8.0;\n    vec2 r = l * p;\n    for (int i = 0; i <= 8; i++)\n    {\n        float t = 0.25 * float(i);\n        color += point(r - vec2(0.0, t));\n        color.r += point(r - vec2(0.25 * t, t)) / 2.0;\n        color.rg += point(r - vec2(t + 0.125, t + 0.5)) / 2.0;\n        color.b += point(r - vec2(-0.5, t));\n    }\n    \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const int aa = 2;\n    vec3 c = vec3(0.0);\n    for (int i = 0; i < aa; i++)\n    {\n        for (int j = 0; j < aa; j++)\n        {\n            vec2 p = fragCoord.xy + vec2(i, j) / float(aa);\n            c += image(p);\n        }\n    }\n    fragColor = vec4(c / float(aa * aa) ,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}