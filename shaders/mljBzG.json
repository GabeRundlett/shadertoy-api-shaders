{
    "Shader": {
        "info": {
            "date": "1694437142",
            "description": "aaa",
            "flags": 0,
            "hasliked": 0,
            "id": "mljBzG",
            "likes": 1,
            "name": "vurpo is at nordlicht 2023",
            "published": 3,
            "tags": [
                "demoscene"
            ],
            "usePreview": 0,
            "username": "vurpo",
            "viewed": 145
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926538\n\n//21*6\nconst int text[126] = int[126](\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,1,0,1,0,1,0,1,0,1,1,1,0,1,1,1,0,1,1,1,0,\n    0,1,0,1,0,1,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,\n    0,0,1,0,0,1,1,1,0,1,0,0,0,1,1,1,0,1,1,1,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\n);\n\nfloat indexText(vec2 coords) {\n    float x = clamp(coords.x+10.5, 0.0, 20.9);\n    float y = clamp(coords.y+2.5, 0.0, 5.9);\n    return float(text[int(y)*21+int(x)]);\n}\n\nfloat triangle(float x) {\n    return abs(-1.0+(sign(x)*mod(x,2.0)));\n}\n\nfloat transition(float x) {\n    float xmod = mod(x,20.0);\n    return smoothstep(9.0,10.0,xmod)*(1.0-smoothstep(19.0,20.0,xmod));\n}\n\nvec3 trans(float x) {\n    vec3 c[3] = vec3[3](\n        vec3(1.0, 1.0, 1.0),\n        vec3(1.0,.67,.72),\n        vec3(.4,.85,1.0)\n    );\n    vec3 col = c[int(2.0*triangle(x)+0.5)];\n    return col;\n}\n\nvec3 rainbow(float x) {\n  vec3 c = vec3(x, 0.5, 1.0);\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 blue(float x) {\n  return vec3(\n      sin(x*PI)*0.3+0.7,\n      sin(x*PI)*0.2+0.8,\n      1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv_0 = fragCoord/iResolution.xx*2.0-vec2(1.0, iResolution.y/iResolution.x);\n    vec2 uv = uv_0*(length(uv_0)*0.5+0.5);\n    //vec2 uv = vec2(uv_0.x*cos(iTime)+uv_0.y*sin(iTime), uv_0.y*cos(iTime)-uv_0.x*sin(iTime));\n    float angle = atan(uv.y, uv.x);\n    float len = length(uv);\n  \n    float x = mod(\n        len*7.0\n        -iTime*5.0\n        +0.4*sin(1.1*iTime+11.0*angle+sin(len*11.0+4.0*iTime))\n        +0.8*sin(-4.3*iTime+7.0*angle+sin(len*19.0-8.0*iTime)), 6.0)\n        +1.0*sin(len*3.0)/(2.0*len)\n    ;//*0.5+0.5;\n    \n    vec4 color1;\n    vec4 color2;\n    vec4 color3;\n    switch (int(mod(iTime/5.0, 3.0))) {\n    case 0:\n        color1 = vec4(rainbow(x), 1.0);\n        color2 = vec4(trans(x), 1.0);\n        color3 = vec4(blue(x), 1.0);\n        break;\n    case 1:\n        color1 = vec4(trans(x), 1.0);\n        color2 = vec4(blue(x), 1.0);\n        color3 = vec4(rainbow(x), 1.0);\n        break;\n    case 2:\n        color1 = vec4(blue(x), 1.0);\n        color2 = vec4(trans(x), 1.0);\n        color3 = vec4(trans(x), 1.0);\n        break;\n    }\n    \n    float textMask = (1.0-indexText(uv*vec2(15.0,-15.0)+vec2(cos(uv.y*5.0+iTime*2.0), sin(uv.x*5.0+iTime*2.0))));\n    float transition = smoothstep(0.0, 0.5, mod(iTime, 5.0));\n\n    // Output to screen\n    vec4 color = (transition*color1\n    +(1.0-transition)*color3);\n    vec4 textColor = 0.4*(transition*color3\n    +(1.0-transition)*color2);\n    fragColor = textMask*color+(1.0-textMask)*textColor;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}