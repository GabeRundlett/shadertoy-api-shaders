{
    "Shader": {
        "info": {
            "date": "1517440773",
            "description": "Impacting squares in the ground.\nSub optimal code but I'm too lazy to fix it ;)",
            "flags": 64,
            "hasliked": 0,
            "id": "XljBDc",
            "likes": 18,
            "name": "Shaking impacts",
            "published": 3,
            "tags": [
                "2d",
                "curve",
                "shake"
            ],
            "usePreview": 0,
            "username": "antonOTI",
            "viewed": 1088
        },
        "renderpass": [
            {
                "code": "// tuned to DEATH ON WHEELS Part I \n// CHRISTINE\n// https://soundcloud.com/sheischristine/death-on-wheels-part-i-1\n\n#define PI 3.14159\n#define TAU (PI * 2.)\n#define HPI (PI * .5)\n\n\nfloat HitCurve(float t,float hitFlag, float raiseFlag)\n{\n    t = mod(t,1.);\n    float hit = step(t,hitFlag);\n    float raise = step(raiseFlag,t);\n    float stay = 1. - raise - hit;\n    return 1. - (\n        pow(t / hitFlag,2.) * hit \n        + stay\n        + (cos((t - raiseFlag) * 1. / (1. - raiseFlag) * PI) * .5 + .5) * (raise)\n        );\n    //);\n}\n\nfloat HitShakeCurve(float t, float hitFlag)\n{\n    t = mod(t, 1.);\n    return  step(hitFlag, t) * max(pow(hitFlag - t + 1., 18.), 0.);\n}\n\n\nfloat squareDf(vec2 uv)\n{\n    uv = abs(uv);\n    return max(uv.x,uv.y);\n}\n\nfloat dfPolygon(float side,vec2 p)\n{   \n    float a=atan(p.x,p.y);\n    float b=TAU/side;\n    return cos(floor(.5+a/b)*b-a)*length(p.xy) ;\n}\n\nfloat shapeDf(vec2 uv, vec2 pos)\n{\n    uv = uv - pos;\n    float sq = squareDf(uv);\n    uv *= 3.3;\n    uv.x += .15;\n    uv.y += .43;\n    float d1 = dfPolygon(3.,uv);\n    uv.x -= .3;\n    float d2 = dfPolygon(3.,uv);\n    return min(\n    \tsq,\n        min(d1,d2)\n    );\n}\n\nfloat bounce(float p, float b)\n{\n    return .5 - cos(p * PI) * .5 + sin(p * PI) * p * b ;\n}\n\nfloat multiplexer(float channel, float nbChannel, float t, float b)\n{\n    float ft = floor(t);\n    float mt = t- ft;\n    mt *= nbChannel;\n    channel = clamp(mt - channel,0.,1.);\n    channel = bounce(channel, b) ;\n    return ft + channel;\n}\n\nvec2 triChecker(vec2 p, float s)\n{\n    p.x += p.y * .5 ;\n    vec2 m = mod(p,s); \n    vec2 base = p - m;\n    p = m / s; \n    \n    base.x *= 2. + step(p.x,p.y);\n    \n    return base;\n}\nfloat noise(vec2 p)\n{\n    return fract(dot(sin(p.x * 123.12)*142.,cos(p.y *34.95)*165.47));\n}\n\nfloat NB_SQUARE = 6.;\n\nfloat bpm = 125.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float width = iResolution.x / iResolution.y;\n    uv.x *= width;\n    \n    float time = iChannelTime[0] * bpm / 60. ;\n    float hit = .05;\n    float raise = .75;\n    \n    \n    float shakeForce = 0.;\n    \n    \n    \n    for(float i = 0.; i < NB_SQUARE; ++i)\n    {\n        float decal = (time + i) / NB_SQUARE;\n        shakeForce += HitShakeCurve(decal, hit);\n    }\n    \n    float shakeAmplitude = .025;\n    vec2 shake = vec2(sin(time * 3256.123), sin(time * 4256.365)) * shakeAmplitude * shakeForce;\n    \n\n    uv += shake;\n    \n    float f = 10000.;\n    \n    for(float i = 0.; i < NB_SQUARE; ++i)\n    {\n        float decal = i / NB_SQUARE;\n        float square =(time - i)/ NB_SQUARE;\n        square = HitCurve(square, hit, raise);\n        f = min(shapeDf(uv, vec2(.15 + .3 * i, .45 * square + .1)) , f);\n    }\n    \n    \n    f = step(f,.1);\n    \n    float radius = .05; \n    float cx = multiplexer(0.,2.,time - .025 ,.35) * (width / NB_SQUARE) + .12;\n    cx = mod(cx, width);\n    vec2 circlePos = vec2(cx,radius);\n    \n    float circle = step(distance(circlePos,uv) , .05);\n    \n    vec2 tri = triChecker(uv + iTime * .01, .14);\n    f += noise(tri) * .3 * (1. + pow(shakeForce,2.));\n    \n    fragColor = vec4(f,f + circle, f, 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 13322,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/sheischristine/death-on-wheels-part-i-1"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}