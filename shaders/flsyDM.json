{
    "Shader": {
        "info": {
            "date": "1648121875",
            "description": "Parte uno del parcial ",
            "flags": 32,
            "hasliked": 0,
            "id": "flsyDM",
            "likes": 1,
            "name": "Parciel 1",
            "published": 3,
            "tags": [
                "parcielati"
            ],
            "usePreview": 0,
            "username": "arostaky",
            "viewed": 186
        },
        "renderpass": [
            {
                "code": "\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec3 buf1 = texture(iChannel0,uv+vec2(0.1,0.0)).rgb; \n    vec3 buf2 = texture(iChannel0,uv+vec2(-0.1,0.0)).rgb; \n    vec3 buf3 = texture(iChannel0,uv+vec2(0.0,0.1)).rgb;\n    vec3 buf4 = texture(iChannel0,uv+vec2(0.0,-0.1)).rgb;\n    vec3 buf5 = texture(iChannel1,uv+vec2(0.0,0.0)).rgb;\n    vec3 col = buf1  * buf2 * buf3 * buf4 * buf5;\n    col*= -10.0;\n    col+= 0.2;\n    // Output to screen\n    col *= 4.7,\n    fragColor = vec4(col,1.);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = 2.0  * fragCoord/iResolution.xy -1.0;\n   uv.x *= iResolution.x/iResolution.y; \n   float p_angle = atan(uv.x, uv.y*0.5);\n   float p_distance = length(uv)*2.0;\n   vec2 st = vec2(p_distance, p_angle);\n   st.y += sin(iTime);\n   \n   float depth = min(st.x*.7,1.0);\n   vec3 col  = texture(iChannel0, vec2(1.0 / st.x + iTime, st.y)).rgb+cos(iTime*2.1);\n   col *= texture(iChannel1, vec2(1.0 / st.x, st.y + iTime)).rgb+sin(iTime*2.5);\n   col *= texture(iChannel2, vec2(1.0 / st.x, st.y + iTime)).rgb+sin(iTime*.1);\n   col *= depth;\n   fragColor = vec4(col, 1.0);\n   \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 3,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 9,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "float stroke (float x, float s, float w){\n\n    float d = step(s, x+w*.5) - step(s, x-w*.5);\n    return clamp(d, 0.,1.);\n\n}\nfloat rectSDF(vec2 st, vec2 s){\n\n    //st = st*2.-1.;\n    return max(abs(st.x/s.x),abs(st.y/s.y));\n\n}\nfloat circleSDF(vec2 st){\n\n    return length(st);\n    //return length(st-.5)*2.;\n\n}\n\nfloat fill(float x, float size){\n\n    return 1.-step(size, x);\n\n}\n\nfloat spiralSDF(vec2 st, float t){\n\n    st -= .5;\n    float r = dot(st, st);\n    float a = atan(st.y, st.x);\n    return abs(sin(fract(log(r)*t+a*0.159)));\n\n}\n\nfloat triangleSDF(vec2 st){\n\n    //st = (st*2.-1.)*2.;\n    return max(abs(st.x)*0.866025 + st.y * 0.5, -st.y * 0.5);\n    \n\n}\n\n\nvec3 bridge(vec3 c, float d, float s, float w){\n\n\n    c *= 1.-stroke(d,s,w*2.);\n    return c + stroke(d,s,w);\n    \n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //fragColor = vec4(0.0,0.0,1.0,1.0);\n    //vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv = 2.0  * fragCoord/iResolution.xy -1.0;\n    uv.x *= iResolution.x/iResolution.y; \n    \n    float s = rectSDF(uv, vec2(1.2));\n    float t = triangleSDF(uv*1.4);\n    float c = circleSDF(uv*50.0);\n    vec3 col = vec3(0.1);\n    col += stroke(s, 0.5, 0.05);\n    col += stroke(t, 0.3, 0.04);\n    col += stroke(c, 5.7, 1.3);\n    col *= 10.;\n    fragColor = vec4(col,0.0);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}