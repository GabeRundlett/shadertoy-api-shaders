{
    "Shader": {
        "info": {
            "date": "1474197405",
            "description": "Circular Voronoi",
            "flags": 0,
            "hasliked": 0,
            "id": "XtV3Wz",
            "likes": 4,
            "name": "Circular Voronoi (227c)",
            "published": 3,
            "tags": [
                "voronoi",
                "circular"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 681
        },
        "renderpass": [
            {
                "code": "//* 226c by FabriceNeyret2\nvoid mainImage( out vec4 f, vec2 g )\n{\n    vec2 p = iResolution.xy; f = iDate;\n    \n    g += g-p; g /= dot(g,g)/p.y*.1; g.x += f.w; // uv\n    \n\tfor(float i=0.;i<=8.;i++)\n\t\tp.x = mod(i, 3.), p.y = (i-p.x)/3., // lattice point coords\n        f = min(f, length( \n            p-1. // lattice point // --p not work on ati card :)\n            + fract( sin((floor(g)+p) * mat2(2,5,5,2)) *5.) // hash (uv offset)\n            - fract(g) )); // uv\n}/**/\n\n/* original 253c\nvoid mainImage( out vec4 f, vec2 g )\n{\n    f.xyz = iResolution;\n\t\n    g = (g+g-f.xy)/f.y * 2.;g/=dot(g,g)*0.05;g.x+=iDate.w; // uv\n\t\n\tfor(float i=0.;i<=8.;i++)\n\t\tf.z = mod(i, 3.), f.w = (i-f.z)/3., // lattice point coords\n        f.x = min(f.x, length( \n            (f.zw-= 1.) // lattice point\n            + fract(sin((floor(g)+f.zw) * mat2(2,5,5,2))*5.) // hash (uv offset)\n            - fract(g) )); // uv\n\t\t\n\tf = f-f+f.x;\n}/**/\n\n/*\nBase Code\n\nfloat voronoi(vec2 uv)\n{\n    vec2 g = floor(uv), f = fract(uv), p;\n    float res = 3.,x,y;\n\tmat2 m = mat2(2,5,5,2);\n\tfor(int x=-1;x<=1;x++)\n\t{\n\t\tfor(int y=-1;y<=1;y++)\n\t\t{\n\t\t\tvec2 p = vec2(x,y);\n\t\t\tres = min(res, length(p + fract(sin((g+p)*m)*5.)-f));\n\t\t}\n\t}\n\n// equivalent is of two loops is\n//\tfor(float i=0.;i<=8.;i++)\n//\t\tp.x = mod(i, 3.)\n//\t\tp.y = (i-p.x)/3., // lattice point coords\n\n\treturn res;\n}\n\nvoid main(void)\n{\n\tvec2 uv = (gl_FragCoord.xy * 2. - uScreenSize)/uScreenSize.y * 2.;\n\tfloat r = dot(uv,uv)*0.05;\n\tuv/=r;\n\tgl_FragColor = vec4(voronoi(uv + uTime));\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}