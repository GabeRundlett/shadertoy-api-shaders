{
    "Shader": {
        "info": {
            "date": "1635569190",
            "description": "This is what wires do when you're not looking",
            "flags": 0,
            "hasliked": 0,
            "id": "NlcGzr",
            "likes": 30,
            "name": "Self tangling wires",
            "published": 3,
            "tags": [
                "2d",
                "repetition",
                "wires"
            ],
            "usePreview": 0,
            "username": "NLIBS",
            "viewed": 494
        },
        "renderpass": [
            {
                "code": "#define pi acos(-1.)\n#define M1 1597334677U\n#define hash(n) float(n*(n^(n>>15)))/float(0xffffffffU)\n\nvoid mainImage(out vec4 O,vec2 U) {\n    vec2 R = iResolution.xy,\n         uv = (2.*U-R)/R.x;\n    \n    O = vec4(0.);\n    for (int k = 0; k<3; k++) { //Loop over layers of wires\n        for (int i = -10; i<=12; i++) { //Loop over neighboring wires\n            vec2 s = uv+vec2(i,0)/40.;\n            float sx0 = floor(s.x*40.+1e-4);\n            \n\n            vec2 p = vec2(0.);\n            float f = hash(uint(float(k*100)+s.x*40.+100.)*M1)*0.1;\n            for (int j = 1; j<10; j++) { //Create a wave function\n                f = f*1.3+.1;\n                float t = (s.y*f+iTime*(1.-s.y*.5)*.1)*12.+f*100.;\n                p += vec2(sin(t),(f-.04*iTime)*cos(t))/f*.1;\n            }\n            float x = uv.x*40.-p.x*float(1+k)*min(iTime*.3,1.);\n            x = (x-sx0-.5)/sqrt(p.y*p.y+1.)+sx0+.5; //Better thickness\n            \n            if (x>sx0 && x<1.+sx0) {\n                O = (pow(cos((hash(uint(x+100.)*M1)*2.4+vec3(-.1,.6,.7))*pi*.6)*.5+.6,vec3(1,2,3))*(1.-pow((fract(x)-.5)*1.9,2.))).rgbb;\n                \n                //Noodles variant\n                //O = ((vec3(.8,.6,.1)-vec3(0,.3,.06)*hash(uint(x+100.)*M1))*(1.-pow((fract(x)-.5)*1.9,2.))).rgbb;\n            } else\n                O = O*min((abs(x-sx0-.5)-.2)*.65,1.);\n        }\n    }\n    O = pow(O,vec4(1./2.2));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}