{
    "Shader": {
        "info": {
            "date": "1513257373",
            "description": "Learning how to code shaders.\nFirst part is to draw RGB phosors and allow scaling and translation.\n",
            "flags": 0,
            "hasliked": 0,
            "id": "lllBDS",
            "likes": 1,
            "name": "CRT zoom v0.1",
            "published": 3,
            "tags": [
                "tv",
                "crt"
            ],
            "usePreview": 0,
            "username": "amason",
            "viewed": 732
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926535897932384626433832795\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float zoom = 0.2 * (0.5 + sin(iTime) / 10.0);\n    vec2 scaledRes = fragCoord.xy * zoom;\n    \n    float translateSpeed = sin(iTime) * 30.0;\n    float xPos = fragCoord.x + translateSpeed; \n    float yPos = fragCoord.y - translateSpeed;\n    \n    int x = int(mod(floor(xPos * zoom),3.0));\n    \n    // https://rechneronline.de/function-graphs/#a0=2&a1=1-%20max(0#abs(cos(x*pi))%20*%2010.0-9)&a2=&a3=&a4=1&a5=4&a6=8&a7=1&a8=1&a9=1&b0=500&b1=500&b2=-5&b3=5&b4=-5&b5=5&b6=10&b7=10&b8=5&b9=5&c0=3&c1=0&c2=1&c3=1&c4=1&c5=1&c6=1&c7=0&c8=0&c9=0&d0=1&d1=20&d2=20&d3=0&d4=&d5=&d6=&d7=&d8=&d9=&e0=&e1=&e2=&e3=&e4=14&e5=14&e6=13&e7=12&e8=0&e9=0&f0=0&f1=1&f2=1&f3=0&f4=0&f5=&f6=&f7=&f8=&f9=&g0=&g1=1&g2=1&g3=0&g4=0&g5=0&g6=Y&g7=ffffff&g8=a0b0c0&g9=6080a0&h0=1&h1=&h2=&h3=&h4=0&z\n    float xIntensity = 1.0 - max(0.0, abs(cos(xPos * PI * zoom)) * 20.0 - 19.0);\n    float yIntensity = min(1.0, max(0.0, abs(sin(yPos * PI * zoom * 0.5 )) * 14.0 - 1.0));\n    \n    vec4 col;\n    \n    if (x == 0) {\n        col = vec4(0.0, 0.0, 1.0,1.0) * xIntensity;\n    } else if (x == 1) {\n\t\tcol = vec4(0.0, 1.0, 0.0,1.0) * xIntensity;\n    } else if (x == 2) {\n        col = vec4(1.0, 0.0, 0.0,1.0) * xIntensity;\n    }\n    \n    col *= yIntensity;\n   \n    fragColor = col;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}