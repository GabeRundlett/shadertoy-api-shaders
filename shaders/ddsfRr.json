{
    "Shader": {
        "info": {
            "date": "1688415482",
            "description": "Tried something, failed terribly.\nIt look way too trippy but somehow i grew fond of it.",
            "flags": 0,
            "hasliked": 0,
            "id": "ddsfRr",
            "likes": 6,
            "name": "Tentacle on drugs",
            "published": 3,
            "tags": [
                "juliaset"
            ],
            "usePreview": 0,
            "username": "Moumouke",
            "viewed": 186
        },
        "renderpass": [
            {
                "code": "// https://iquilezles.org/articles/palettes/\n// Also http://dev.thi.ng/gradients/\nvec3 palette(in float t)\n{\n    vec3 a=vec3(0.500,0.500,0.500);\n    vec3 b=vec3(0.500,0.500,0.500);\n    vec3 c=vec3(1.000,0.700,0.400);\n    vec3 d=vec3(0.000,0.015,0.200);\n\n    /*\n    vec3 a=vec3(0.50000, 0.50000, 0.50000);\n    vec3 b=vec3(0.50000, 0.50000, 0.50000);\n    vec3 c=vec3(1.00000, 1.00000, 1.00000);\n    vec3 d=vec3(0.00000, 0.33300, 0.66700);\n    */\n    return clamp(a+b*cos(6.28318*(c*t+d)), 0., 1.);\n}\n\nfloat tWave(float x, float p)\n{\n    return p * abs(x/p-floor(x/p+.5));\n}\n\nfloat dist(in vec2 p, in vec3 f) {\n    return abs(p.x * f.x + p.y * f.y + f.z) / sqrt(f.x * f.x + f.y + f.y);\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n// https://iquilezles.org/articles/distfunctions2d/\nfloat sdStar5(in vec2 p, in float r, in float rf)\n{\n    const vec2 k1 = vec2(0.809016994375, -0.587785252292);\n    const vec2 k2 = vec2(-k1.x,k1.y);\n    p.x = abs(p.x);\n    p -= 2.0*max(dot(k1,p),0.0)*k1;\n    p -= 2.0*max(dot(k2,p),0.0)*k2;\n    p.x = abs(p.x);\n    p.y -= r;\n    vec2 ba = rf*vec2(-k1.y,k1.x) - vec2(0,1);\n    float h = clamp( dot(p,ba)/dot(ba,ba), 0.0, r );\n    return length(p-ba*h) * sign(p.y*ba.x-p.x*ba.y);\n}\n\nvec3 julia(in vec2 p){\n    const vec2 c = vec2(.285, .01);\n    float o = 200.;\n    float o1 = 200.;\n    float o2 = 200.;\n    vec2 z = vec2(p);\n\n    for(int i=0;i<128;i++){\n        float sr=z.x*z.x-z.y*z.y;\n        float sc=2.*z.y*z.x;\n        \n        z.x=sr+c.x;\n        z.y=sc+c.y;\n\n        o1 = min(o1, dist(z, vec3(1, .0, 0. )));\n        o2 = min(o2,  sdBox(z, vec2(1.) * cos(iTime)));\n        o2 = min(o2,  sdStar5(z, 2., 1.));\n    }\n\n    o = min(o, o2);\n\n    return .3/palette(o * tWave(iTime, 25.));\n}\n\nvoid rotate(inout vec2 p, float a) {\n    p = vec2(\n        p.x * cos(a) - sin(a) * p.y,\n        p.x * sin(a) + cos(a) * p.y\n    );\n}\n\nvoid relocate(inout vec2 p, float zoom, vec2 t) {\n    p/=zoom;\n    p+=t;\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord){\n    vec2 st=(2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n    vec2 uv=(st) * 1.8;\n    float a = 2.4;\n    rotate(uv, a);\n    relocate(uv, 55., vec2(.6, .75));\n    vec3 color=julia(uv);\n    \n    fragColor=vec4(color,1.);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}