{
    "Shader": {
        "info": {
            "date": "1721793874",
            "description": "Need to figure out movement",
            "flags": 0,
            "hasliked": 0,
            "id": "MclyWl",
            "likes": 23,
            "name": "Lightning With Glow + Color",
            "published": 3,
            "tags": [
                "color",
                "bloom",
                "glow",
                "lightning",
                "bolt"
            ],
            "usePreview": 0,
            "username": "Peace",
            "viewed": 598
        },
        "renderpass": [
            {
                "code": "float hash11(float p) {\n    p = fract(p * 0.1031);\n    p *= p + 33.33;\n    return abs(0.5 - fract(p * p * 2.0)) * 2.0;\n}\n\nfloat noise11(float p) {\n\tfloat i = floor(p);\n\tfloat f = fract(p);\n    f *= f * (3.0 - 2.0 * f);\n\treturn mix(hash11(i), hash11(i + 1.0), f);\n}\n\nfloat hash12(vec2 p) {\n\tvec3 p3 = fract(p.xyx * 0.1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat noise(vec2 p) {\n\tvec2 i = floor(p);\n\tvec2 f = fract(p);\n\tfloat res = mix(\n\t\tmix(hash12(i), hash12(i + vec2(1, 0)), f.x),\n\t\tmix(hash12(i + vec2(0, 1)), hash12(i + vec2(1)), f.x), f.y);\n\treturn res;\t\n}\n\nfloat fbm(vec2 p, int octaves) {\n\tfloat s = 0.0, m = 0.0, a = 1.0;\n\tfor(int i = 0; i < octaves; i++) {\n\t\ts += a * noise(p);\n\t\tm += a;\n\t\ta *= 0.5;\n\t\tp *= mat2(1.6, 1.2, -1.2, 1.6); \n\t}\n\treturn s / m;\n}\n\nfloat lightning(vec2 uv, float i) {\n    // Expanding / Warping\n    float n = fract(noise11(i * 3.0) * 3.0) * 2.0 - 1.0;\n    float bend = n * 0.15;\n    bend *= smoothstep(1.0, -0.5, abs(0.5 - gl_FragCoord.x / iResolution.x) * 1.6);\n    uv.y += (2.0 - uv.x * uv.x) * bend;\n    \n    uv.x -= iTime * 0.2;\n    \n    float d = fbm(uv * vec2(2, 1.4) - vec2(0, i), 6);\n    d = (d * 2.0 - 1.0) * 0.45;\n    return abs(uv.y - d);\n}\n\nvec3 lightnings(vec2 uv) {\n    float t2 = iTime * 0.08;\n    float d1 = lightning(uv, 21.17 + t2);\n    float d2 = lightning(uv, 63.41 + t2);\n    float d3 = lightning(uv, 77.69 + t2);\n    float d4 = lightning(uv, 21.99 + t2);\n    float dd = max(0.0, 1.0 - sqrt(d1 + d2 * d3 + d3 + d4 * d1) * 0.5);\n    float d = 0.007 / sqrt(d1 * d2 * d3 * d4);\n    vec3 col = vec3(0.31, 0.5, 0.89) * sqrt(d);\n    \n    float md = 1.0 - dd;\n    col = col * 0.7 + 0.7 * vec3(4.0 * md * md + 3.5 * md, 0.3, 0.6) * md * d;\n    col = mix(col, col * col, min(1.0, dd * dd * dd * dd));\n    col = (col - 0.5) * 0.6 + 0.3;\n    \n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    fragColor = vec4(lightnings(uv), 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}