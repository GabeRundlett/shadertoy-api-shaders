{
    "Shader": {
        "info": {
            "date": "1532753666",
            "description": "Wanted to see if I could recreate something like https://twitter.com/mattdesl/status/1022870984905424899 but with GLSL. It's not perfect, but was fun messing around with the code.",
            "flags": 0,
            "hasliked": 0,
            "id": "MldyDN",
            "likes": 5,
            "name": "Grid Lines Recreation",
            "published": 3,
            "tags": [
                "2d",
                "2tweets",
                "reproduction"
            ],
            "usePreview": 0,
            "username": "lherm",
            "viewed": 612
        },
        "renderpass": [
            {
                "code": "// Thanks Fabrice :)\nvoid mainImage(out vec4 o,vec2 g){\n    vec2 R = iResolution.xy,\n         p = (g+g-R)/R.y,\n         u = fract(p*4.)- .5;\n    u = abs( u * mat2(cos( ceil(p.x*4.)/4. + iTime/2. + vec4(0,33,11,0))) );\n    p = abs(p);\n    o += p.x < 1.2 && p.y < .7 ? smoothstep(16./R.y,0.,.1-max(u.x-.001, u.y-.2)) : 1.;}\n\n/*\n#define mainImage(o, g) \\\n\tvec2 p = (2.*g-(o.xy=iResolution.xy))/o.y, q = floor(p*4.), u = fract(p*4.)- .5; \\\n        o.z = q.x*.25 + iTime*.5; \\\n        u = abs(u * cos(o.z) + sin(o.z) * vec2(-u.y, u.x)) - vec2(.001, .2);\\\n        p = abs(p); \\\n\t\to = p.x < 1.2 && p.y < .7 ? 1.-vec4(step(max(u.x, u.y), .1)) : vec4(1.) \\\n*/\n\n/*\n\n#define mainImage(o, g) \\\n\tvec2 p = (2.*g-(o.xy=iResolution.xy))/o.y, q = floor(p*4.), u = fract(p*4.)- .5; \\\n        o.z = q.x*.25 + iTime*.5; \\\n        u = u * cos(o.z) + sin(o.z) * vec2(-u.y, u.x);\\\n\t\tu = abs(u) - vec2(.001, .2); \\\n        p = abs(p); \\\n\t\to = p.x < 1.2 && p.y < .7 ? 1.-vec4(step(max(u.x, u.y), .1)) : vec4(1.); \\\n*/\n  \n/*\n#define r(p, a) {p = p * cos(a) + sin(a) * vec2(-p.y, p.x);}\n#define mainImage(o, g) \\\n\tvec2 p = (2.*g-(o.xy=iResolution.xy))/o.y, q = floor(p*4.), u = fract(p*4.)- .5; \\\n        r(u, q.x*.25 + iTime*.5); \\\n\t\tu = abs(u) - vec2(.001, .2); \\\n        p = abs(p); \\\n\t\to = p.x < 1.2 && p.y < .7 ? 1.-vec4(step(max(u.x, u.y), .1)) : vec4(1.); \\\n\n*/\n            \n/*\nvoid mainImage( out vec4 o, in vec2 g )\n{\n    vec2 p = (2.*g-(g=iResolution.xy))/g.y, q = floor(p*4.), u = fract(p*4.)- .5;\n    u *= r(q.x*.25 + iTime*.5); // rotate by cell Id\n    \n    // rect\n    u = abs(u) - vec2(.001, .2);\n    o = vec4(step(max(u.x, u.y), .1));\n    \n    // border\n    p = abs(p) - vec2(1.1, .6);\n    o *= step(max(p.x, p.y), .1);\n    o = 1.-o;\n}*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}