{
    "Shader": {
        "info": {
            "date": "1439024659",
            "description": "It really needs some optimizations, feel free to comment your suggestions to increase the speed of the for loop!",
            "flags": 0,
            "hasliked": 0,
            "id": "4tlSzs",
            "likes": 7,
            "name": "cmyk waves",
            "published": 3,
            "tags": [
                "noise",
                "fbm",
                "cmyk"
            ],
            "usePreview": 0,
            "username": "nexor",
            "viewed": 644
        },
        "renderpass": [
            {
                "code": "float time;\nvec2 resolution;\n\nvoid init()\n{\n time = iTime;\n resolution = iResolution.xy;   \n}\n\nconst float pi = 3.14156;\nconst float pi2 = pi*2.0;\n\nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453123);\n}\n\nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*157.0;\n    return mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n               mix( hash(n+157.0), hash(n+158.0),f.x),f.y);\n}\n\nconst mat2 m2 = mat2( 0.8, -0.6, 0.6, 0.8 );\n\nfloat fbm( vec2 p )\n{\n    float f = 0.0;\n    f += 0.5000*noise( p ); p = m2*p*2.02;\n    f += 0.2500*noise( p ); p = m2*p*2.03;\n    f += 0.1250*noise( p ); p = m2*p*2.01;\n    f += 0.0625*noise( p );\n    return f/0.9375;\n}\n\nvec2 tr(vec2 p)\n{\n\t p /= resolution.xy;\n\t p = -1.0+2.0*p;\n\t p.x *= resolution.x/resolution.y;\n\t return p;\n}\n\nvec2 rot(vec2 p, float deg)\n{\n\tfloat c = cos(deg);\n\tfloat s = sin(deg);\n\tmat2 m = mat2(c,s,\n\t\t   \t\t\t\t\t\t\t\ts,-c);\n\treturn m*p;\n}\n\nfloat circle(vec2 p, float r)\n{\n\t return smoothstep(r,r*.99,length(p));\n}\n\nvec4 cmyk(vec2 p, float a, float r)\n{\n  vec2 b = rot(p,a);\n  vec2 q = mod(b,r)-r*.5;\n  return vec4(q,floor(p/r));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    init();\n\tvec2 p = tr(fragCoord.xy);\n\tvec4 col = vec4(1.0);\n\n    float t = time*.125;\n    float g = .0175;\n\n\tp+=vec2(1.0); //strange artifact at (0,0)\n    \n    /*\n    cmyk will be created by subtracting rgb from white, so \n    Red->Cyan\n    Green->Magenta\n    Blue->Yellow\n    white->blacK\n    */\n    vec4 rv = vec4(15.,75,0.,45.); //rotation values for each channel\n     \n    \n    p*=4.;\n    p+=t;\n\n    float r = 0.1;\n    float a=0.0;\n    for(int i=0;i<4;++i)\n    {\n    \t a = rv[i];\n    \t p=rot(p,a);\n    \t vec4 ht = cmyk(p,a,r);\n    \t float rad = fbm(fbm(.25*p-t)*.25*ht.zw+t*5.)*r*.5;\n    \t float val = circle(ht.xy,rad);\n    \t col[i] = 1.-val;\n    }\n    col.rgb -= 1.-col.a; //use black color (still looks fine without it)\n\tcol = sqrt(col);\n\n    fragColor = vec4( col);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}