{
    "Shader": {
        "info": {
            "date": "1495486120",
            "description": "this is a mere compatibility test. tell me the errors you get.\n\nit defines a function that takes an n-dimensional array, and instantiates parametric overload functions.\n\nit this lacks compatibility, fuck me.",
            "flags": 0,
            "hasliked": 0,
            "id": "lslfzM",
            "likes": 0,
            "name": "compatibility test define array",
            "published": 3,
            "tags": [
                "test",
                "function",
                "array",
                "compatibility",
                "define",
                "overload"
            ],
            "usePreview": 0,
            "username": "ollj",
            "viewed": 641
        },
        "renderpass": [
            {
                "code": "/*\nthis is a mere compatibility test. tell me the errors you get.\nand the broeswer, os, gpu, driver it causes.\n\ntackling why \nhttps://www.shadertoy.com/view/4dlBR7 fails to be parsable for some\n\nthis tests using #define to define a function that takes an n-dimensional array\nthen instanciating the define with parametric array length\n*/\n\nfloat compatibilitySimple(float[1] a){return a[0];}\n//above function without define. below as dfine\n//keeping it simple to only catch some suscicious methods:\n//below is just like above, ecept that input array length is parametric\n\n#define csim(n) float compatibility(float[n] a){return a[0];}\n//and then instanciating overloaded functions parametrically:\ncsim(1)//array length 1\ncsim(2)//array length 2\ncsim(3)//array length 3\n// ... and whatever is required\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord){\n \n float arr[1]=float[1](1.);\n float f=0.;\n f=compatibility(arr);\n    \n vec2 uv = fragCoord.xy / iResolution.xy;\n fragColor = vec4(uv,f,1.0);   \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}