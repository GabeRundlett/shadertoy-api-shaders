{
    "Shader": {
        "info": {
            "date": "1560511599",
            "description": "Seems to work perfectly here!\nTop half, zero a single bit to verify error checking     \nRight half, show top 8 bits of (partially corrupted) 32bit binary data\nBottom left is black (no error) on my PC yet https://www.shadertoy.com/view/4lBfRm has errors.",
            "flags": 32,
            "hasliked": 0,
            "id": "Wlj3R3",
            "likes": 1,
            "name": "Testing uints in Buf A ",
            "published": 3,
            "tags": [
                "buffer",
                "float",
                "uint"
            ],
            "usePreview": 0,
            "username": "CPU",
            "viewed": 484
        },
        "renderpass": [
            {
                "code": "uint hash( uvec2 x ){\n    uvec2 q = 1103515245U * ( (x>>1U) ^ (x.yx   ) );\n    uint  n = 1103515245U * ( (q.x  ) ^ (q.y>>3U) );\n    n = n^(n >> 16);\n    return n;\n\t}\n\nvoid mainImage( out vec4 C, in vec2 F ){\n   vec2 R=iResolution.xy; ivec2 f=ivec2(F), r=ivec2(R); \n   uint h=hash(uvec2(f+iFrame));     \n   uint b=uint(floatBitsToInt( texelFetch(iChannel0,f,0).x   ));  // read 32bits from float buffer\n   if(f.y>r.y>>1)b&=(1u << f.x)^0xFFFFFFFFu;   // top half, zero a single bit to verify error checking     \n   C=vec4( float(h!=b),0,0,1 );                // Red if error\n   if(f.x>r.x>>1)C=vec4( float(b>>24u)/255. ); // right half, show top 8 bits of (partially corrupted) 32bit binary data \n   } ",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "uint hash( uvec2 x ){\n    uvec2 q = 1103515245U * ( (x>>1U) ^ (x.yx   ) );\n    uint  n = 1103515245U * ( (q.x  ) ^ (q.y>>3U) );\n    n = n^(n >> 16);\n    return n;\n\t}\n\n\nvoid mainImage( out vec4 C, in vec2 F ){\n   ivec2 f=ivec2(F);\n   uint h=hash(uvec2(f+iFrame));    \n   C=vec4( intBitsToFloat(int(h)), 0,0,0); // store 32bits as float\n   }",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}