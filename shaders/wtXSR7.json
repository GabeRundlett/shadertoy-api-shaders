{
    "Shader": {
        "info": {
            "date": "1570426986",
            "description": "Colorful value noise.",
            "flags": 0,
            "hasliked": 0,
            "id": "wtXSR7",
            "likes": 4,
            "name": "Value noise function",
            "published": 3,
            "tags": [
                "valuenoise"
            ],
            "usePreview": 0,
            "username": "zxxuan1001",
            "viewed": 465
        },
        "renderpass": [
            {
                "code": "float noise(in vec2 uv) {\n    return texture(iChannel0, uv/64.0).r;\n}\n\nfloat smoothNoise(in vec2 uv) {\n    vec2 luv = fract(uv); //range from 0.0 to 1.0\n    vec2 id = floor(uv); //the integer part of uv, 0, 1, 2\n    luv = luv*luv*(3.0 - 2.0*luv); //similar to smoothstep\n    \n    //get values from the cordinates of a square\n    float bl = noise(id);\n    float br = noise(id + vec2(1.0, 0.0));\n    float tl = noise(id + vec2(0.0, 1.0));\n    float tr = noise(id + vec2(1.0, 1.0));\n    \n    float b = mix(bl, br, luv.x); //interpolate between bl and br\n    float t = mix(tl, tr, luv.x); //interpolate between tl and tr\n    \n    return mix(b, t, luv.y);\n}\n\nfloat fbm(in vec2 uv) {\n    float amp = 1.0;\n    float f = 2.0;\n    float h = 0.0;\n    float a = 0.0;\n    for (int i = 0; i < 4; i++){\n        h += amp * smoothNoise(uv*f);\n        a += amp;\n        amp *= 0.5;\n        f *= 2.0;\n    }\n    \n    h /= a;\n    return h;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mo = iMouse.xy/iResolution.xy;\n    uv.x *= 1.0+floor(mo.x*10.0);\n    uv.y *= 1.0+floor(mo.y*10.0);\n    \n    float t = iTime*0.1+uv.x+uv.y;\n    vec2 iuv = floor(uv);\n    vec2 fuv = fract(uv);\n    \n    vec3 col = vec3(fbm(uv+t), fbm(fuv+t), fbm(iuv+t));\n\t\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}