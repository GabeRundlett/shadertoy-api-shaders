{
    "Shader": {
        "info": {
            "date": "1473363460",
            "description": "All credit to the BeardPhantom",
            "flags": 0,
            "hasliked": 0,
            "id": "4lyGzW",
            "likes": 3,
            "name": "Michael's Noodle Tunnel",
            "published": 3,
            "tags": [
                "noodle"
            ],
            "usePreview": 0,
            "username": "CriticalMammal",
            "viewed": 581
        },
        "renderpass": [
            {
                "code": "// This will use more comments than I'd ever use\n\nconst float thickness = 0.2;\n\nbool approx(float x, float y)\n{\n return abs(x - y) < thickness;   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // center of the screen\n    vec2 center = iResolution.xy/2.0;\n    // get pixel point from 0.0,0.0 to 1.0,1.0\n    vec2 uv = fragCoord.xy /iResolution.xy;\n    // based on the x position, get a y offset\n    \n    // check if the current pixel Y is within 10 pixels of the offset Y position\n    fragColor = vec4(0.0);\n    for (float i=0.0; i< 30.0; i += 1.0)\n    {\n        float mod = cos((iTime * i) - fragCoord.x * 0.01 / (i*0.1)) * 100.0;\n        \n        if(approx(fragCoord.y, center.y + mod))\n        {\n            // color it white\n            fragColor = vec4(1.0);\n        }\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}