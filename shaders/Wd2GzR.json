{
    "Shader": {
        "info": {
            "date": "1547992224",
            "description": "rings",
            "flags": 0,
            "hasliked": 0,
            "id": "Wd2GzR",
            "likes": 10,
            "name": "ringseg",
            "published": 3,
            "tags": [
                "2d",
                "ring",
                "segment"
            ],
            "usePreview": 0,
            "username": "Del",
            "viewed": 545
        },
        "renderpass": [
            {
                "code": "// Simple 2d Ring / RingSegment functions - Del 20/01/2019\n// updated & added pattern variation...\n\n#define\tPI 3.141592\n#define\tTAU 6.283185\n\nfloat remap(float s, float a1, float a2, float b1, float b2)\n{\n    return b1 + (s-a1)*(b2-b1)/(a2-a1);\n}\n\n// out: 0->val->0\nfloat SmoothTri2(float t, float val)\n{\n    return val * (1.0-(0.5+cos(t*TAU)*0.5));\n}\n\n// Ring\nfloat ring(vec2 uv, float rad, float thickness)\n{\n    return abs(rad - length(uv)) - thickness;\n}\n\n// Ring Segment (start 0-1, len 0-1)\nfloat ringseg(vec2 uv, float rad, float thickness,float segstart, float seglen)\n{\n    float d = ring(uv,rad,thickness);\n    float rr = fract((atan(uv.x, uv.y)/TAU)+segstart);\n    return seglen > rr ? d : 1.0;\n}\n\n// Ring Segment pattern\nfloat ringsegpat(vec2 uv, float rad, float thickness,float segstart, float seglen,float pat)\n{\n    float rr = fract((atan(uv.x, uv.y)/TAU)+segstart);\n    float v1 = remap(rr, 0.0, seglen, 0.0, pat);\n    thickness *= sin(v1*PI);\t\t\t// example pattern 1\n    //thickness *= SmoothTri2(v1,1.0);\t// example pattern 2\n    thickness *= fract(v1);\t\t\t\t// example pattern 3\n    float d = abs(rad - length(uv)) - thickness;\n    return seglen > rr ? d : 1.0;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = (2. * fragCoord.xy - iResolution.xy ) / iResolution.y;\n    // ring segments\n    float s = fract(iTime*0.3);\n    float r1 = ringseg(uv,0.5,0.025,s,0.2);\n    float r2 = ringseg(uv,0.4,0.025,-s,0.2);\n    // whole ring\n    float r3 = ring(uv,0.6,0.025);\n    // pattern ring\n    float r4 = ringsegpat(uv,0.8,0.1,fract(iTime*0.1),1.0,16.0);\n    // combine\n    float d = min(r4,min(r3,min(r1,r2)));\n    float c = smoothstep(0.0,0.01,d);\n    \n    vec4 backgroundcol = vec4(0.2,0.2,0.2,1.0);\n    vec4 imagecol = vec4(0.7,0.6,0.9,1.0);\n    \n    fragColor = mix(imagecol,backgroundcol,c);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}