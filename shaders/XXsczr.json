{
    "Shader": {
        "info": {
            "date": "1725751449",
            "description": "ott https://www.youtube.com/watch?v=NWDRHqTXhuI",
            "flags": 0,
            "hasliked": 0,
            "id": "XXsczr",
            "likes": 5,
            "name": "listening to ott",
            "published": 3,
            "tags": [
                "ott"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 76
        },
        "renderpass": [
            {
                "code": "float fn1(\n    vec2 o, \n    float n_t2\n){\n    float n_tau = radians(360.);\n    float n = length(o);\n    float n_t = 0.2*iTime;//+n_t2;\n    float n_ang_nor = fract(atan(o.y, o.x)/n_tau);\n\n    float n2 = sin(\n        n*3.*n_tau\n        * sin(\n            n*2.+n_t+n_t2*2.\n            + sin(n_ang_nor*n_tau*3.)\n        )\n    )*.5+.5;\n    return n2;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float n_min = min(iResolution.x, iResolution.y);\n    vec2 o = (fragCoord.xy-iResolution.xy*.5)/n_min;\n    float n_tau = radians(360.);\n    float n = length(o);\n    float n_t = 0.2*iTime;\n    float n_ang_nor = fract(atan(o.x, o.y)/n_tau);\n    float no = 0.02;\n    vec3 oc = vec3(\n        fn1(o,n_t+1.*no),\n        fn1(o,n_t+2.*no),\n        fn1(o,n_t+3.*no)\n    );\n    vec3 oc2 = vec3(\n        fn1(o,n_t*2.*no),\n        fn1(o,n_t*3.*no),\n        fn1(o,n_t*4.*no)\n    );\n    float nl = sin(iTime)*.5+.5;\n    oc = nl*oc+ (1.-nl)*oc2;\n    \n    fragColor = vec4(oc.xyz, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}