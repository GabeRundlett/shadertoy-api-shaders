{
    "Shader": {
        "info": {
            "date": "1437133630",
            "description": "compacification of  fernlightning's shader https://www.shadertoy.com/view/XtsSWM",
            "flags": 0,
            "hasliked": 0,
            "id": "XtlXDM",
            "likes": 17,
            "name": "Vogel's Distrib - 225 chars",
            "published": 3,
            "tags": [
                "disk",
                "2tweets",
                "distribution",
                "uniform",
                "short",
                "vogel"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 2504
        },
        "renderpass": [
            {
                "code": "// compacification of  fernlightning's shader https://www.shadertoy.com/view/XtsSWM\n// with the help of coyote and fernlightning (see fernlightning's shader forum for compaction steps)\n\nvoid mainImage(out vec4 o, vec2 i) {\n\n    o = iResolution.xyyy;\n    i += i-o.xy;\n    float r = length(i/=o.y/1e2)-2.6, \n          v = floor(r*r*.06);  // floor(...-.5) to add one circle at center\n          r+=5.2; \n\n    for (int k = 0; k < 128; k++)\n        v++ < r*r*.06 ? \n          o = min(o, length( sqrt(v/.06) * cos(v*2.4+vec2(1.57,0)) -i ) )\n        : o ;\n     o = 1.-abs(o-2.);   // or o = abs(o-2.); for reverse video (-3 chars)\n}\n\n\n\n\n/* // 248 chars\n#define I(r) (r)*(r)*6e2-.5\n\nvoid mainImage(out vec4 o, vec2 i) {\n\n    o = iResolution.xyzz;\n    i += i-o.xy;\n    float r = length(i/=o.y), v=floor(I(r-.026))+.5;\n    \n    for (int k = 0; k < 128; k++)\n        v++ < I(r+.026) ?\n          o = min(o, length( sqrt(v/6e2) * cos(v*2.4+vec2(1.57,0)) -i ) )\n        : o ;\n     o = 1.-abs(1e2*o-2.);\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}