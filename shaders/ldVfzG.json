{
    "Shader": {
        "info": {
            "date": "1529394262",
            "description": "You have been found to require a factory reboot. Please absorb this data to hard reset your brainfnords.",
            "flags": 24,
            "hasliked": 0,
            "id": "ldVfzG",
            "likes": 5,
            "name": "Mind Reflasher",
            "published": 3,
            "tags": [
                "trippy",
                "weird",
                "bytebeat"
            ],
            "usePreview": 0,
            "username": "stellartux",
            "viewed": 825
        },
        "renderpass": [
            {
                "code": "// stellartux\n// unlicense\n// press SPACE to toggle movement\n\n#define K uv.x * uv.y * floor(10000. * iTime)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy / iResolution.xy) - .5;\n    uv.x += iTime - iTime * texelFetch(iChannel0, ivec2(32,2),0).x;\n  \tfragColor = vec4(\n    \tsin(K + sin(iTime / 1.3) * 6.),\n    \tsin(K + sin(iTime / 1.6) * 4.),\n    \tsin(K + sin(iTime) * 2.),\n\t\t1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define TEMPO 140.\n#define VOLUME 0.1\n#define BYTEBEAT_ONLY false\n\nfloat bytebeat (float time) {\n    int t = int(time * (7200. + 3.* time));\n    int sig = ((t & t % (950 - t % 16)) << (5 + 3 * int(sin(time*12.))));\n    return lim(2. * float(sig)/128. - 1.);\n} \n\nfloat bass (float t, float tt) {\n    float s = squa(t * midi(32. - nv(pwm(tt, 1./7.))));\n    for (int i = 0; i < 4; i++) {\n        t += .0008 * sin(tt);\n\t    s += squa(t * midi(32. - nv(pwm(tt, 1./7.))));\n    }\n    s *= mpls(fract(tt*2.));\n\treturn s;\n}\nfloat snare(float t) {\n    float s = noiz(t, .75) * mpls(fract((t) / 2.), 2.5, 25.);\n    s += noiz(t, .85) * mpls(fract(t / 2.), 2.5, 25.);\n    return lim(s) / 2.;\n}\nfloat kick(float t) {\n    if (t < 0.) return 0.;\n    float s = sine(midi(39.) * t / 1.5) + tria(midi(42.5) * t / 2.);\n    s *= mpls(fract(t / 2.), 1., 32.) * 1.4;\n    s += sine(t * 55.) * mpls(fract(t / 2.), 4., 170.) * .6;\n\treturn lim(s);\n}\n\nfloat drums (float t, float tt) {\n    float s = 0.;\n    s += kick(fract(tt * 2.)) * .7;\n    s += snare(fract(tt * 2. -.666));\n\treturn s;\n}\n\nvec2 mainSound( in int samp, float t )\n{\t\n    float tt = t * TEMPO / 120.;\n\tfloat s = 0.;\n    s += bytebeat(t) * .4;\n    if (!BYTEBEAT_ONLY) {\n        s += bass(t, tt) * .28;\n    \ts += drums(t, tt) * .56;\n    }\n    return vec2(lim(s) * VOLUME);\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            },
            {
                "code": "const float TAU = 6.283185307179586476925286766559;\nfloat sine(float a) { return sin(TAU * a); }\nfloat pwm(float a, float w) { return 1. - 2. * step(w, fract(a)); }\nfloat squa(float a) { return pwm(a, .5); }\nfloat sawt(float a) { return mix(-1., 1., fract(a-.5)); }\nfloat tria(float a) { return sawt(a * 2.) * squa(a * 2.) * squa(a); }\nfloat pv(float a) { return clamp(a, 0., 1.); }\nfloat nv(float a) { return clamp(a, -1., 0.); }\nfloat mpls(float t, float k, float r) { return pv(exp(-t * (1000. / (r+k)) - exp(-t * (1000. / k)))); }\nfloat mpls(float t) { return mpls(t, 27., 370.); }\nfloat lim(float a, float b) {return clamp(a, -b, b);}\nfloat lim(float a) {return lim(a, 1.);}\nfloat noiz(float a, float b) {\n    uint n = uint(abs(a) * (exp2(32. - 24. * pv(b)) - 1.));\n\tn = (n << 13U) ^ n;\n    n = n * (n * n * 15731U + 789221U) + 1376312589U;\n    return 1. - 2. * float( n & uvec3(0x7fffffffU))/float(0x7fffffff);\n}\nfloat noiz(float a) { return noiz(a, TAU-6.); }\nfloat midi(float n) { return 13.75 * exp2((n - 9.) / 12.); }",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}