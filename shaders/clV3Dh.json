{
    "Shader": {
        "info": {
            "date": "1683910409",
            "description": "It doesn't always end up where you expect.\nadded some mouse control and color -tmm",
            "flags": 0,
            "hasliked": 0,
            "id": "clV3Dh",
            "likes": 0,
            "name": "InteractiveColor Starlink 2035",
            "published": 3,
            "tags": [
                "experiments"
            ],
            "usePreview": 0,
            "username": "timmaffett",
            "viewed": 176
        },
        "renderpass": [
            {
                "code": "// Fork of \"Starlink 2035\" by Grendor. https://shadertoy.com/view/dlK3Dz\n// 2023-05-12 16:52:22\n\n// simple mouse rotate and zoom for shader\n#define pi 3.14159265359 \n\nmat2 r2d(float a) {\n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nvec2 mouseRotZoom(vec2 uv) {\n    // allow mouse zoom and rotate    \n    vec2 mouse = (iMouse.xy == vec2(0.)) ? vec2(1.0,0.2) : iMouse.xy/iResolution.xy;\n    uv.xy *= r2d(-(mouse.x)*pi*2.);\n    uv *= (1./(5.0*mouse.y));\n    return uv;\n}\n\n\nvec3 hsb2rgb( in vec3 c )\n{\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return (c.z * mix( vec3(1.0), rgb, c.y));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord / iResolution.xy - 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    uv = mouseRotZoom(uv);\n    \n    float time = iTime * 0.2;\n    vec3 color = vec3(0.0);\n    for(int i = 0; i < 100; i++)\n    {\n        vec2 seed = vec2(float(i) * 40.33, float(i) * 1000.0) + time*(0.03 + sin(time*0.001) * 0.03) ;\n        vec2 pos = fract(sin(seed) * 43.5453)-0.55;\n        float HoleDist = length(vec2(0.0) - uv);\n        pos = mix(pos, uv, smoothstep(-2.0, 2.3, HoleDist));\n        float brightness = 0.8 / length(uv - pos);\n        vec3 starColor = vec3(brightness * (0.002 + (abs(sin(time )) * 0.001)));\n        starColor *= sin(time * brightness) * 0.001 + 0.0019;\n        \n        starColor *= 2.0*hsb2rgb( vec3(seed.x, 1.0, 1.0) );\n        color += starColor;\n    }\n    float Hole = (80.3 ) * (length(uv/0.4)-1.0);\n    color = mix(color, vec3(-0.0), Hole);\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}