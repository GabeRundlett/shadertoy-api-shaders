{
    "Shader": {
        "info": {
            "date": "1697308126",
            "description": "Intersection of the plane (through the three control points) and the z-right circular cone on origin (center of screen being xy-origin).",
            "flags": 0,
            "hasliked": 0,
            "id": "cddfRS",
            "likes": 1,
            "name": "Conic sections study",
            "published": 3,
            "tags": [
                "gizmo",
                "conicsection"
            ],
            "usePreview": 0,
            "username": "sig",
            "viewed": 147
        },
        "renderpass": [
            {
                "code": "vec2 expi(float angle) {\n    return vec2(cos(angle), sin(angle));\n}\n\nvec4 tex_gizmo(vec2 p, float R) {\n    if (length(p) > R) { return vec4(0); }\n    return vec4(1, 0, 0, 1);\n}\n\n// maps R -> ]0, 1[\nfloat S(float x) {\n    return 0.5 + 0.5 / exp(-x);\n}\n\nvec4 rgbFromHue(float H) {\n    float R = abs(H * 6.0 - 3.0) - 1.0;\n    float G = 2.0 - abs(H * 6.0 - 2.0);\n    float B = 2.0 - abs(H * 6.0 - 4.0);\n\n    return clamp(vec4(R, G, B, 1.0), 0.0, 1.0);\n}\n\nvec3 cone(vec2 p) {\n    return vec3(p.x, p.y, length(p));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float R_gizmo = 0.05;\n\n    vec2 p = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec2 dir = normalize(p);\n    \n    // control points\n    vec2 c1 = (2.0 * iMouse.xy - iResolution.xy) / iResolution.y;\n    vec2 c2 = vec2(0.1, 0.5) + expi(iTime) * 0.3;\n    vec2 c3 = vec2(-1.0, -0.5);\n    \n    // 3d plane through control points projected on z-cone\n    vec3 p0 = cone(c1);\n    vec3 b1 = cone(c2) - p0;\n    vec3 b2 = cone(c3) - p0;\n    vec3 normal = normalize(cross(b1, b2));\n    \n    float d = dot(cone(p), normal) - dot(p0, normal);\n    \n    float w = 0.02; // / abs(dot(normalize(cone(-p)), normalize(normal)));\n    \n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime + d + dir.xyx+vec3(0,2,4));\n    //vec4 col = rgbFromHue(0.5 + 0.5*cos(iTime + d1));\n    vec4 col = abs(d) > w ? rgbFromHue(mod(iTime + d, 1.)) : vec4(0);\n    \n    vec4 giz1 = tex_gizmo(p - c1, R_gizmo);\n    vec4 giz2 = tex_gizmo(p - c2, R_gizmo);\n    vec4 giz3 = tex_gizmo(p - c3, R_gizmo);\n\n    // Draw gizmos on top\n    fragColor = mix(mix(mix(col, giz1, giz1.a), giz2, giz2.a), giz3, giz3.a);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}