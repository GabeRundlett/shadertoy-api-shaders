{
    "Shader": {
        "info": {
            "date": "1517423115",
            "description": "let it play for a few minz",
            "flags": 32,
            "hasliked": 0,
            "id": "4l2BDc",
            "likes": 1,
            "name": "digitalreflextons_1",
            "published": 3,
            "tags": [
                "shaderclub"
            ],
            "usePreview": 0,
            "username": "ashwinv11",
            "viewed": 676
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec4 color = texture(iChannel0, uv);\n    \n\tfragColor = color;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Also taken from shader book\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nmat2 rotate2d(float _angle){\n    return 0.5 + 0.5*mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat wave(float p, float freq, float amp){\n    return 0.5 + 0.5*sin(p * freq + iTime)*amp;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.st/iResolution.st;\n    \n    vec4 tex = texture(iChannel2, st);\n    \n    st -= vec2(0.5);\n    st *= rotate2d(tex.r*.001)\n        \t*rotate2d(tex.y*.01)\n        \t*wave(1.0, 10.0, iTime*random(vec2(0.0, 1.0)));\n    //st *= mat2(0.99, 0.0, 0.0, 0.99);\n    st += vec2(0.5);\n    \n    vec2 texel = 1.0/iResolution.xy;\n    \n    vec2 offset[9];\n    \n    offset[0] = vec2(-texel.x, -texel.y);\n    offset[1] = vec2(     0.0, -texel.y);\n    offset[2] = vec2( texel.x, -texel.y);\n    offset[3] = vec2(-texel.x,      0.0);\n    offset[4] = vec2(     0.0,      0.0);\n    offset[5] = vec2( texel.x,      0.0);\n    offset[6] = vec2(-texel.x,  texel.y);\n    offset[7] = vec2(     0.0,  texel.y);\n    offset[8] = vec2( texel.x,  texel.y);\n    \n    float kernel[9];\n    \n    kernel[0] = -1.0; kernel[1] = -1.0; kernel[2] = -1.0;\n    kernel[3] = -1.0; kernel[4] = 8.0; kernel[5] = -1.0;\n    kernel[6] = -1.0; kernel[7] = -1.0; kernel[8] = -1.0;\n    \n    vec4 sum = vec4(0.0);\n    \n    for (int i = 0; i < 9; i++){\n        sum += texture(iChannel0, st + offset[i]) * kernel[i];\n    }\n    \n    \n    vec4 tex0 = texture(iChannel0, st);\n    vec4 tex1 = vec4(clamp(sum.rgb, 0.0, 1.0), 1.0)*(0.5 + 0.5*wave(20.0, 600.0, 1.0)*iTime);\n    \n    vec4 color = mix(tex0, tex1, 0.5*iTime*0.01);\n    \n    \n    fragColor = color;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}