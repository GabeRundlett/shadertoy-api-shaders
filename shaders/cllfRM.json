{
    "Shader": {
        "info": {
            "date": "1692741188",
            "description": "I saw Mr. Quilez's recent shader https://www.shadertoy.com/view/dljyDc and wanted to try it out myself but with buffers for performance. This shader seems to work best with objects that do not have many pointy parts. ",
            "flags": 32,
            "hasliked": 0,
            "id": "cllfRM",
            "likes": 2,
            "name": "the power of sdfs",
            "published": 3,
            "tags": [
                "thing"
            ],
            "usePreview": 0,
            "username": "01000001",
            "viewed": 119
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U ){\n    O = sqrt(texture(iChannel0, U/iResolution.xy));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "const int samples = 4;\nfloat boxDF( in vec2 p, in vec2 b ) \n{\n    vec2 q = abs(p)-b;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0));\n}\n\nfloat sdf(vec2 p){\n    return \n    /*\n    length(p)-1.;\n    /*/boxDF(p, vec2(1));\n    //*/\n}\n\nconst uint k = 1103515245U;\nvec3 hash( uvec3 x ){\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    \n    return vec3(x)*(1.0/float(0xffffffffU));\n}\n//hash by IQ https://www.shadertoy.com/view/XlXcW4\nvec2 point(uvec3 x){\n    return hash(x).xy*2.-1.;\n}\n\nvoid mainImage( out vec4 O, vec2 U ){\n\n    vec2 r  = iResolution.xy;\n    O       = iFrame < 20?vec4(0):texture(iChannel0, U/r);\n    O      *= 0.99;\n    vec2 uv = (2.*U-r)/r.y;\n    \n    for (int i = 0; i < samples; i++){\n        vec2 p  = point(uvec3(iFrame + i, -iFrame + i, i<<iFrame));\n        p.x *= r.x/r.y;\n        float s = 1.7;    \n        float d = length(p - uv)*s-abs(sdf(p*s));\n        O      += smoothstep(2.*s/r.y, 0., abs(d))*.2;\n    }\n    O       = vec4(max(0., O.x));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}