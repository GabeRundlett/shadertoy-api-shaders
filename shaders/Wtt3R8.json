{
    "Shader": {
        "info": {
            "date": "1575598579",
            "description": "Right side: Saturation of all channels to white without color distortion or banding.\nMouse to control brightness.",
            "flags": 0,
            "hasliked": 0,
            "id": "Wtt3R8",
            "likes": 7,
            "name": "Hue-correct saturation",
            "published": 3,
            "tags": [
                "color",
                "postprocess",
                "hdr"
            ],
            "usePreview": 0,
            "username": "ttg",
            "viewed": 603
        },
        "renderpass": [
            {
                "code": "//#define SHOWCLIPPING\n\n/*const vec3 msat = vec3(.3,.2,.5); // how much each channel contributes to saturation\nconst float msdiv = .12;\n\nvec3 saturate( vec3 v ) {\n  float sv = dot(v,msat);\n  vec3 hs = v/sv*msdiv;\n  float ls = tanh(sv);\n  float s = tanh(sv*sv/5.);\n  vec3 hs2 = mix(hs,vec3(1),s);\n  return ls*hs2/mix(msdiv,1.,pow(s,.5));\n}*/\n\nconst vec3 msat = vec3(.3,.3,.3);\nconst float msdiv = .12;\nvec3 saturate( vec3 v ) {\n  // https://www.shadertoy.com/view/Wtt3R8\n  float sv = dot(v,msat);\n  vec3 hs = v/sv*msdiv;\n  float ls = (1.-exp(-sv))*.9;\n  float s = 1.-exp(-sv*sv/10.);\n  vec3 hs2 = mix(hs,vec3(1),s);\n  return ls*hs2/mix(msdiv,1.,s);\n}\n\nvec3 image( sampler2D chan, vec2 uv, vec3 gain )\n{\n  vec3 v = 1.*pow(texture(chan, uv).rgb,vec3(2.2));\n  v+= .1*pow(textureLod(chan, uv, 5.).rgb,vec3(2.2));\n  v*=gain;\n  return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = fragCoord/iResolution.xy*vec2(2,2);\n  vec3 v = vec3(0);\n  float gain = exp2(iMouse.x/100.);\n  if (iMouse.x<2.) gain = (4.+2.*cos(iTime))*(1.+pow(.6+.2*sin(iTime*5.)+.1*sin(iTime*7.),2.));\n  if      (uv.y>6./3.5) v = (vec3(1.,.2,.04)*fract(uv.x)*gain);\n  else if (uv.y>5./3.5) v = image(iChannel0, uv, gain*vec3(1));\n  else if (uv.y>4./3.5) v = image(iChannel1, uv, gain*vec3(1));\n  else if (uv.y>3./3.5) v = image(iChannel2, uv, gain*vec3(1));\n  else if (uv.y>2./3.5) v = image(iChannel1, uv, gain*vec3(0.4,1,0.01));\n  else if (uv.y>1./3.5) v = image(iChannel3, uv, gain*vec3(0.04,0.04,2));\n  else                  v = image(iChannel3, uv, gain*vec3(1));\n  if (uv.x>=1.) v = saturate(v);\n\n#ifdef SHOWCLIPPING\n  float clipdet = float(any(greaterThan(v,vec3(1.))));\n  if (fwidth(clipdet)>0.) { fragColor = vec4(1.-vec3(greaterThan(v,vec3(1))),0); return; }\n  if (clipdet>0. && (int(dot(fragCoord/2.,vec2(1)))%2)==0) v = vec3(0);\n#endif\n  if (uv.x<1.) v = mix(1.,.6,uv.x)*clamp(v,0.,1.);\n  fragColor = pow(vec4(v*255./256.,1.),vec4(1./2.2));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 9,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}