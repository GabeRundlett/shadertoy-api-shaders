{
    "Shader": {
        "info": {
            "date": "1713345602",
            "description": "using bitwise-or to fake the appearance of 2 scrolling animated noise layers",
            "flags": 0,
            "hasliked": 0,
            "id": "lfyGD3",
            "likes": 2,
            "name": "single sample layered noise (^)",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "teadrinker",
            "viewed": 171
        },
        "renderpass": [
            {
                "code": "\n// https://nullprogram.com/blog/2018/07/31/\n// https://github.com/skeeto/hash-prospector/issues/19\nuint hash(uint x)\n{  \n#if 0\n    x ^= x >> 16;\n    x *= 0x21f0aaadU;\n    x ^= x >> 15;\n    x *= 0xd35a2d97U;\n    x ^= x >> 15;\n#elif 0\n    x ^= x >> 16;\n    x *= 0x7feb352dU;\n    x ^= x >> 15;\n    x *= 0x846ca68bU;\n    x ^= x >> 16;\n#else\n    x ^= x >> 17;\n    x *= 0xed5ad4bbU;\n    x ^= x >> 11;\n    x *= 0xac4c1b51U;\n    x ^= x >> 15;\n    x *= 0x31848babU;\n    x ^= x >> 14;\n#endif    \n    return x;\n}\n\n\nfloat random(uint x) {\n    return float(hash(x)) / 4294967295.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uint tInt = uint(fract((iTime-1.)/3000.)*65536.0)<<16U;\n    fragColor = vec4(vec3(random(uint(fragCoord.x) ^ ((uint(fragCoord.y) * 65535U) + tInt))),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}