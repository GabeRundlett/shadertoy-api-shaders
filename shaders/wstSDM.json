{
    "Shader": {
        "info": {
            "date": "1572184731",
            "description": "woah",
            "flags": 0,
            "hasliked": 0,
            "id": "wstSDM",
            "likes": 0,
            "name": "Voronoi testing / Modularity",
            "published": 3,
            "tags": [
                "voronoi"
            ],
            "usePreview": 0,
            "username": "tiggerbiggo",
            "viewed": 262
        },
        "renderpass": [
            {
                "code": "#define FLT_MAX 3.402823466e+38\n#define FLT_MIN 1.175494351e-38\n#define DBL_MAX 1.7976931348623158e+308\n#define DBL_MIN 2.2250738585072014e-308\n\nvec3 steppyColour(vec2 uv, float t);\nvec2 voronoiPoints(vec2 uv, float t, int n);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    uv *= 1.3;\n\n    \n    uv = voronoiPoints(uv, float(iTime), 100);\n    \n    vec3 col = steppyColour(uv, iTime);\n    \n    //col = vec3(sin(uv.x*10.), cos(uv.y*5.), 0);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\nvec3 steppyColour(vec2 uv, float t){\n    float len = length(uv);\n    return vec3(sin(len*5.0), sin(fract(len+t)*3.141*5.), .5*sin(len+cos(-t)));\n}\n\nvec3 uvReferenceColour(vec2 uv, float scale){\n    return vec3(sin(uv.x*scale), cos(uv.y*scale), 0);\n}\n\nvec2 voronoiPoints(vec2 uv, float t, int n){\n    float minn = FLT_MAX;\n    vec2 ret = vec2(0);\n    \n    for(float i = 0.; i<float(n); i++){\n        vec2 p = vec2(sin(t+(i*0.06)), sin(i+cos(t)));\n        \n        float tmp = minn;//hold last min value\n        minn = min(distance(uv,p),minn); //perform next calculation\n        tmp = tmp - minn; //get difference in values\n        \n        \n        ret = mix(ret,uv-p,step(0.00001, tmp));//mix between old and new values\n    }\n    return ret;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}