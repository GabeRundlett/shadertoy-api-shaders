{
    "Shader": {
        "info": {
            "date": "1668968381",
            "description": "click to interact\nkey W to reset\nsimilar to https://www.shadertoy.com/view/7lVGzD\nbut this one has mass appart from just 2D velocity vectors",
            "flags": 48,
            "hasliked": 0,
            "id": "cdfSWM",
            "likes": 30,
            "name": "swirl explosion",
            "published": 3,
            "tags": [
                "fluid"
            ],
            "usePreview": 0,
            "username": "lomateron",
            "viewed": 437
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 u = fragCoord/iResolution.xy;\n    vec4 a = texture(iChannel0,u);\n    fragColor = (+sin(a.x+vec4(0,1,2,4)+5.)*.5\n                 +sin(a.y+vec4(5,3,1,4)+5.)*.5+1.)*a.z;\n    //fragColor = a.zzzz;\n    //fragColor = a;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec4  r = vec4(0);\n    vec4  a = A(u);\n    float z = 6.;//kernel convolution size\n    for(float i=-z; i<=z; ++i){\n    for(float j=-z; j<=z; ++j){\n        float l = length(vec2(i,j));\n        if((i==0.&&j==0.)|| l>z-.1){continue;}\n        vec2  c = normalize(vec2(i,j));\n        vec4  a2= A(u+vec2(i,j));\n        vec4  b = a2-a;\n        r.xy += c*b.z*cos(dot(b.yx*vec2(-1,1),vec2(i,j))*.3)*exp(-l*l*.1)*.5;\n        //r.xy += c*min(b.z,0.)*cos(dot(b.yx*vec2(-1,1),vec2(i,j))*.2)*exp(-l*l*.1)*.5;\n    }}\n    fragColor = r;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\n#define B(u) texture(iChannel1,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec4 t = A(u);\n    vec2 m = +t.xy +B(u).xy;\n    float s = 0.;\n    float z = 6.;//kernel convolution size\n    for(float i=-z; i<=z; ++i){\n    for(float j=-z; j<=z; ++j){\n        if(length(vec2(i,j))>z-.1){continue;}\n        vec2 c = (m+vec2(i,j));\n        s += exp(-dot(c,c));\n    }}\n    if(s==0.){s = 1.;}\n    s = 1./s;\n    \n    fragColor = vec4(m,s,0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\n#define B(u) texture(iChannel1,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    float tz = 0.;\n    vec4  a  = vec4(0);\n    float z  = 6.;//kernel convolution size\n    for(float i=-z; i<=z; ++i){\n    for(float j=-z; j<=z; ++j){\n        if(length(vec2(i,j))>z-.1){continue;}\n        vec4 t = A(u+vec2(i,j));\n        vec4 m = B(u+vec2(i,j));\n        vec2 c = (m.xy-vec2(i,j));\n        float z = t.z*exp(-dot(c,c));\n        a.xy += z*m.xy;\n        a.z  += z*m.z;\n        tz   += z;\n    }}\n    if(tz==0.){tz = 1.;}\n    a.xy /= tz;\n    //a = A(u);\n    if(iMouse.z>0.)\n    {\n        vec2 m = 22.*(u-iMouse.xy)/iResolution.y;\n        a += vec4(-normalize(m),0,0)*exp(-dot(m,m));\n    }\n    float keyW = texture( iChannel2, vec2(87.5/256.,.25) ).x;\n    if(iFrame==0||keyW!=0.)\n    {\n        vec2 m = 22.*(u-iResolution.xy*.5)/450.;\n        a = vec4(0,0,.5,0)-vec4(8,8,0,0)*exp(-dot(m,m));\n    }\n    fragColor = a;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}