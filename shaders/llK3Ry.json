{
    "Shader": {
        "info": {
            "date": "1475367648",
            "description": "Iterated Analysis",
            "flags": 0,
            "hasliked": 0,
            "id": "llK3Ry",
            "likes": 3,
            "name": "Iterated Analysis",
            "published": 3,
            "tags": [
                "analysis",
                "iterated"
            ],
            "usePreview": 0,
            "username": "voz",
            "viewed": 601
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n#define E 2.7182818284\n#define GR 1.61803398875\n#define time (sin((float(__LINE__+123)*123.0)*.25+.5)*(iTime))\n#define flux(x) (vec3(cos(x),cos(4.0*PI/3.0+x),cos(2.0*PI/3.0+x))*.5+.5)\n#define circle(x) (vec2(cos(x),sin(x)))\n\nfloat saw(float x)\n{\n    float f = mod(floor(abs(x)), 2.0);\n    float m = mod(abs(x), 1.0);\n    return f*(1.0-m)+(1.0-f)*m;\n}\nvec2 saw(vec2 x){ return vec2(saw(x.x), saw(x.y)); }\nvec3 saw(vec3 x){ return vec3(saw(x.x), saw(x.y), saw(x.z)); }\nvec4 saw(vec4 x){ return vec4(saw(x.x), saw(x.y), saw(x.z), saw(x.w)); }\n\nvec2 cmul(vec2 v1, vec2 v2) { return vec2(v1.x * v2.x - v1.y * v2.y, v1.y * v2.x + v1.x * v2.y); }\nvec2 cdiv(vec2 v1, vec2 v2) { return vec2(v1.x * v2.x + v1.y * v2.y, v1.y * v2.x - v1.x * v2.y) / dot(v2, v2); }\n\n\nfloat s1;\nfloat s2;\n\nvoid mainImage(out vec4 f,vec2 p)\n{\n    const int iters = 4;\n    const int trans = 4;\n    p = p/iResolution.xy-.5;\n    p *= 2.0;\n    p *= iResolution.x/iResolution.y;\n    float f1 = 0.0;\n    float m1 = 1.0;\n    vec2 p0 = p;\n    for(int i = 0; i < iters; i++)\n    {\n        s1 = float(i+1)/float(iters);\n        \n        float f2 = 0.0;\n        float m2 = 1.0;\n        \n    \tvec2 quotient = vec2(0.0);\n        for(int j = 0; j < trans; j++)\n    \t{\n            s2 = float(j+1)/float(trans);\n            vec2 offa = circle(s2*12.0+time)*\n                (1.5+sin(time));\n            vec2 offb = circle(s2*1234.0+time)/4.0*\n                (1.5+sin(time));\n            vec2 numerator = p + offa;\n            vec2 denominator = p + offb;\n            quotient += (cdiv(numerator, denominator));\n            m2 *= dot(denominator, denominator);\n            m2 *= dot(numerator, denominator);\n            m2 = clamp(sqrt(abs(m2)), 0.0, 1.0);\n            \n            f2 += length(quotient)/float(trans);\n    \t}\n    \n        m1 *= m2;\n        p = (cos(quotient*PI*2.0))*m1+p*(1.0-m1);\n       \n        f1 += atan(p.y, p.x)/PI;\n    }\n    \n    m1 = pow(m1, 1.0/float(iters));\n    \n    float s = time;\n    float b = smoothstep(0.0, 1.0/5.0, saw(s+f1));\n    float w = smoothstep(4.0/5.0, 1.0, saw(s+f1));\n    \n    float t = smoothstep(0.4, .6, sin(time)*.5+.5);\n    f = vec4(p.xy, 0.0, 1.0)*m1;\n    f = vec4(flux(f1), 1.0)*saw(m1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}