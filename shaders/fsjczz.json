{
    "Shader": {
        "info": {
            "date": "1643020033",
            "description": "complex integral calculation for (almost free) using smart MIPmaps (i.e. General Purpose MIPmap).\npick location with mouse.\nred: average density in rings\nblue: center of mass of density in rings.",
            "flags": 0,
            "hasliked": 0,
            "id": "fsjczz",
            "likes": 11,
            "name": "summing density by distance",
            "published": 3,
            "tags": [
                "integration",
                "moments",
                "gpmipmap"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 394
        },
        "renderpass": [
            {
                "code": "float line(vec2 p, vec2 a,vec2 b) { \n    p -= a, b -= a;\n    float h = clamp(dot(p, b) / dot(b, b), 0., 1.);   // proj coord on line\n    return length(p - b * h);                         // dist to segment\n}\n//#define N(v) normalize(v)\n#define N(v) (v)/max(abs(v).x,abs(v).y)\n\nvoid mainImage( out vec4 O, vec2 u ) // =========================================\n{   \n    float t = iTime/4., L;\n    vec2  U = ( 2.*u - R ) / R.y, \n          p = length(iMouse.xy) > 10. \n                ? ( 2.*iMouse.xy - R ) / R.y\n                : vec2( .7*cos(t) +.2*sin(7.*t), .5*sin(1.3*t) + .2*cos( 6.1*t) );\n  //L = length(U-p);\n    L = max(abs(U-p).x,abs(U-p).y);\n    L = floor(log2(1024.*L));\n    O-=O;  \n    O.g += texture(iChannel1, vec3(U,1) ).w;        // draw green density\n    \n    // -----------------------------------------------\n    float k = 1.1478, S; \n    \n    vec4 P = M(p, 0. );                     // optional: contrib of the central pixel\n    if ( L == 0. ) O.r += P.w;\n    if (length(U-P.xy/P.w) < .1 ) O.b++; \n        \n    for( float l=1. ; l<=10.; l++ ) {               // compute total moment and density on rings\n        P =   M(p, l  ) *exp2(2.*l)\n            - M(p,l-1.) *exp2(2.*(l-1.));\n        S = exp2(2.*l) - exp2(2.*(l-1.));\n        if ( L == l ) O.r += P.w / S;               // show density in ring\n        if (length(U-P.xy/P.w) < .05 ) O.b++;       // show center of mass of ring\n     // O.b += smoothstep(3./R.y,0., line(U, p+vec2(0,2.*exp2(l-.5)/1024.), P.xy/P.w ) );\n        O.b += smoothstep(3./R.y,0., line(U, p+2.*exp2(l-.5)/1024.*N(P.xy/P.w-p), P.xy/P.w ) );\n    } \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "cubemap",
                        "id": 41,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a//media/previz/cubemap00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// ===== w: density to sample x,y: moments ============\n\nvoid mainCubemap( out vec4 O, vec2 U, vec3 o, vec3 D )\n{\n    if ( D.z < max(abs(D.x),abs(D.y)) ) return;\n    U.y = 1024. - U.y;              // like buffA, but 1024 x 1024.\n    \n    float d = texture( iChannel0, (U-0.*iMouse.xy)/1024. ,4.).r; // green density\n    d = step( .25, d );\n  //d = step( R.x/2., U.x);\n  //d *= d;\n    O = vec4( (U/512.-1.)*d, 0, d ); // ( x,y moments, 0, density )\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Cube A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 41
                    }
                ],
                "type": "cubemap"
            },
            {
                "code": "#define R  iResolution.xy\n#define M(U,l)   textureLod( iChannel1, vec3(U,1), l  )   // access density map\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}