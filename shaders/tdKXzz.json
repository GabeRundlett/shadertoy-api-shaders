{
    "Shader": {
        "info": {
            "date": "1573307264",
            "description": "Getting addicted building knobs.",
            "flags": 0,
            "hasliked": 0,
            "id": "tdKXzz",
            "likes": 25,
            "name": "Knob Moog",
            "published": 3,
            "tags": [
                "knob",
                "moog"
            ],
            "usePreview": 0,
            "username": "andremichelle",
            "viewed": 1077
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159\n#define N 6.\n\nconst float r1 = 0.75;\nconst float r2 = 1./r1;\n\nvec4 over( in vec4 a, in vec4 b ) {\n    return mix(a, b, 1.-a.w);\n}\n\nfloat nCap(vec2 uv, float angle, float r) {\n    float a = atan(uv.y, uv.x)+angle;\n    float b = a/PI*N/2.+PI*r2*2.0;\n    float f = fract(b);\n    float l = length(uv);\n    float d = sin(f*PI*r2) * step(f, r1);\n    return (1.-d*0.12)*r-l;\n}\n\nfloat line( in vec2 p, in vec2 a, in vec2 b ) {\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/-iResolution.y*3.0;\n    \n    float av = sin(iTime)*PI*5./6.; // angle value\n    \n    mat2 m = mat2(cos(av), sin(av), -sin(av), cos(av));\n    \n    float a = atan(uv.y, uv.x);\n    float l = length(uv);\n\tfloat g = -1. + smoothstep(.5, -.5, uv.y) * 2.;\n\n    vec4 col = vec4(vec3(.2+g*.04), 1.); // background\n    \n    if(l < .96) {\n\t    float d = .0;\n        for(float q = 0. ; q < 11. ; q += 1.) {\n            float aq = -PI*1./3.+q*PI*1./6.;\n            mat2 m = mat2(cos(aq), sin(aq), -sin(aq), cos(aq));\n            d += smoothstep(.002, .001, line(uv, vec2(.0, .0), vec2(.88, .0)*m)-.012);\n        }\n        col = over(vec4(vec3(.8), d), col); // divs\n\n        float h = smoothstep(.04, .08, 1.25 - distance(vec2(.0, -1.4), uv))*.2\n            + smoothstep(.40, .7, l)*.01;\n        col = over(vec4(vec3(.04), smoothstep(.001, .3, .88 - distance(uv, vec2(.0, .1)))*.75), col); // shadow\n        col = over(vec4(vec3(.04), smoothstep(.001, .04, .74 - l)), col); // bottom\n        col = over(vec4(vec3(.13+g*.04), smoothstep(.001, .01, .71 - l)), col); // bottom solid\n        col = over(vec4(vec3(.13), smoothstep(.02, .001, abs(.64 - l))), col); // bottom outline\n        col = over(vec4(vec3(.04), smoothstep(0.001, 0.06, nCap(uv+vec2(.0, -.12), av, .64))*.7), col); // cap shadow\n        col = over(vec4(vec3(.09), smoothstep(0.01, 0.02, nCap(uv, av, .64))), col); // cap edge\n        col = over(vec4(vec3(.16)+g*.1+h, smoothstep(0.001, 0.01, nCap(uv, av, .61))), col); // cap solid\n        col = over(vec4(vec3(.24), smoothstep(.001, .01, .46 - l)), col); // cap top\n        col = over(vec4(vec3(.44\n                             + pow(abs(sin(a)),10.)*(0.1+l*1.)\n                             + pow(abs(sin(a+1.4)),64.)*0.12\n                             + abs(sin(l*32.)+.5)*.02\n                             + g*.2\n                            ), smoothstep(.001, .01, .44 - l)), col); // cap metal\n        col = over(vec4(vec3(.34), smoothstep(.001, .01, .050 - distance(uv, vec2(.0, -.52)*m))), col); // value edge\n        col = over(vec4(vec3(.97), smoothstep(.001, .01, .042 - distance(uv, vec2(.0, -.52)*m))), col); // value fill\n    }\n    \n    col.gb += vec2(.004, .006);\n    \n\tfragColor = col;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}