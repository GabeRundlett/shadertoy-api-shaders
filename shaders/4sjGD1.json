{
    "Shader": {
        "info": {
            "date": "1387383649",
            "description": "Link wiping out some randomly-created Octoroks in a stateless shader! All you see is just a function of time! :D\nThis could actually work as a screensaver...!\nExplaining the basic movement concept: https://www.shadertoy.com/view/Md2GW1",
            "flags": 0,
            "hasliked": 0,
            "id": "4sjGD1",
            "likes": 106,
            "name": "The Legend of Zelda",
            "published": 3,
            "tags": [
                "2d",
                "game",
                "retro",
                "sprite",
                "nes",
                "8",
                "bit",
                "dynamic",
                "zelda",
                "legend",
                "nintendo"
            ],
            "usePreview": 0,
            "username": "HLorenzi",
            "viewed": 18654
        },
        "renderpass": [
            {
                "code": "// The Legend of Zelda, by hlorenzi\n\n#define RGB(r,g,b) vec4(r/255.,g/255.,b/255.,1)\n#define SPR(x,a,b,c,d,e,f,g,h, i,j,k,l,m,n,o,p) (x <= 7. ? SPR_H(a,b,c,d,e,f,g,h) : SPR_H(i,j,k,l,m,n,o,p))\n#define SPR_H(a,b,c,d,e,f,g,h) (a+4.0*(b+4.0*(c+4.0*(d+4.0*(e+4.0*(f+4.0*(g+4.0*(h))))))))\n#define SELECT(x,i) mod(floor(i/pow(4.0,float(mod(float(x),8.0)))),4.0)\n\nfloat hash(float x)\n{\n    return fract(sin(x) * 43758.5453) * 2.0 - 1.0;\n}\n\nvec2 hashPos(float x)\n{\n\treturn vec2(\n\t\tfloor(hash(x) * 3.0) * 32.0 + 16.0,\n\t\tfloor(hash(x * 1.1) * 2.0) * 32.0 + 16.0\n\t);\n}\n\nvec4 fragColor;\n\nvoid spr_rock(float x, float y)\n{\n\tfloat c = 0.;\n\tif (y == 0.) c = (x < 8. ? 592. : 0.); if (y == 1.) c = (x < 8. ? 2388. : 0.);\n\tif (y == 2.) c = (x < 8. ? 26948. : 165.); if (y == 3.) c = (x < 8. ? 18769. : 597.);\n\tif (y == 4.) c = (x < 8. ? 18769. : 2645.); if (y == 5.) c = (x < 8. ? 21073. : 2389.);\n\tif (y == 6.) c = (x < 8. ? 21077. : 10582.); if (y == 7.) c = (x < 8. ? 21077. : 10902.);\n\tif (y == 8.) c = (x < 8. ? 21076. : 10646.); if (y == 9.) c = (x < 8. ? 21076. : 10650.);\n\tif (y == 10.) c = (x < 8. ? 21076. : 10650.); if (y == 11.) c = (x < 8. ? 22101. : 10905.);\n\tif (y == 12.) c = (x < 8. ? 22101. : 9877.); if (y == 13.) c = (x < 8. ? 21845. : 1449.);\n\tif (y == 14.) c = (x < 8. ? 25940. : 43685.); if (y == 15.) c = (x < 8. ? 43690. : 2730.);\n\t\n\tfloat s = SELECT(x,c);\n\tif (s == 0.) fragColor = RGB(252.,216.,168.);\n\tif (s == 1.) fragColor = RGB(192.,56.,0.);\n\tif (s == 2.) fragColor = RGB(0.,0.,0.);\n}\n\nvoid spr_tree(float x, float y)\n{\n\tfloat c = 0.;\n\tif (y == 0.) c = 0.; if (y == 1.) c = (x < 8. ? 37120. : 10.);\n\tif (y == 2.) c = (x < 8. ? 21776. : 681.); if (y == 3.) c = (x < 8. ? 22096. : 2469.);\n\tif (y == 4.) c = (x < 8. ? 21844. : 2709.); if (y == 5.) c = (x < 8. ? 25940. : 10853.);\n\tif (y == 6.) c = (x < 8. ? 21845. : 2725.); if (y == 7.) c = (x < 8. ? 21861. : 10901.);\n\tif (y == 8.) c = (x < 8. ? 21844. : 9878.); if (y == 9.) c = (x < 8. ? 22101. : 10901.);\n\tif (y == 10.) c = (x < 8. ? 21845. : 2729.); if (y == 11.) c = (x < 8. ? 21861. : 2661.);\n\tif (y == 12.) c = (x < 8. ? 38228. : 682.); if (y == 13.) c = (x < 8. ? 4416. : 26.);\n\tif (y == 14.) c = (x < 8. ? 512. : 43680.); if (y == 15.) c = (x < 8. ? 43648. : 2730.);\n\t\n\tfloat s = SELECT(x,c);\n\tif (s == 0.) fragColor = RGB(252.,216.,168.);\n\tif (s == 1.) fragColor = RGB(0.,156.,0.);\n\tif (s == 2.) fragColor = RGB(0.,0.,0.);\n}\n\nvoid spr_player_down(float f, float x, float y)\n{\n\tfloat c = 0.;\n\tif (f == 0.) {\n\t\tif (y == 0.) c = (x < 8. ? 21504. : 21.); if (y == 1.) c = (x < 8. ? 21760. : 85.);\n\t\tif (y == 2.) c = (x < 8. ? 64800. : 2175.); if (y == 3.) c = (x < 8. ? 65312. : 2303.);\n\t\tif (y == 4.) c = (x < 8. ? 39840. : 2790.); if (y == 5.) c = (x < 8. ? 48032. : 2798.);\n\t\tif (y == 6.) c = (x < 8. ? 43648. : 3754.); if (y == 7.) c = (x < 8. ? 59712. : 3435.);\n\t\tif (y == 8.) c = (x < 8. ? 45052. : 16218.); if (y == 9.) c = (x < 8. ? 32751. : 15957.);\n\t\tif (y == 10.) c = (x < 8. ? 61355. : 14999.); if (y == 11.) c = (x < 8. ? 28655. : 11007.);\n\t\tif (y == 12.) c = (x < 8. ? 61423. : 2391.); if (y == 13.) c = (x < 8. ? 28671. : 85.);\n\t\tif (y == 14.) c = (x < 8. ? 15016. : 252.); if (y == 15.) c = (x < 8. ? 16128. : 0.);\n\t\t\n\t\tfloat s = SELECT(x,c);\n\t\tif (s == 1.) fragColor = RGB(128.,208.,16.);\n\t\tif (s == 2.) fragColor = RGB(255.,160.,68.);\n\t\tif (s == 3.) fragColor = RGB(228.,92.,16.);\n\t}\n\tif (f == 1.) {\n\t\tif (y == 0.) c = (x < 8. ? 21504. : 21.); if (y == 1.) c = (x < 8. ? 21760. : 85.);\n\t\tif (y == 2.) c = (x < 8. ? 64800. : 2175.); if (y == 3.) c = (x < 8. ? 65312. : 2303.);\n\t\tif (y == 4.) c = (x < 8. ? 39840. : 2790.); if (y == 5.) c = (x < 8. ? 48032. : 2798.);\n\t\tif (y == 6.) c = (x < 8. ? 43648. : 3754.); if (y == 7.) c = (x < 8. ? 59648. : 3947.);\n\t\tif (y == 8.) c = (x < 8. ? 49136. : 2394.); if (y == 9.) c = (x < 8. ? 65468. : 2389.);\n\t\tif (y == 10.) c = (x < 8. ? 48812. : 863.); if (y == 11.) c = (x < 8. ? 49084. : 509.);\n\t\tif (y == 12.) c = (x < 8. ? 49084. : 351.); if (y == 13.) c = (x < 8. ? 49148. : 213.);\n\t\tif (y == 14.) c = (x < 8. ? 10912. : 252.); if (y == 15.) c = (x < 8. ? 0. : 252.);\n\t\t\n\t\tfloat s = SELECT(x,c);\n\t\tif (s == 1.) fragColor = RGB(128.,208.,16.);\n\t\tif (s == 2.) fragColor = RGB(255.,160.,68.);\n\t\tif (s == 3.) fragColor = RGB(228.,92.,16.);\n\t}\n\tif (f == 2.) {\n\t\tif (y == 0.) c = 0.; if (y == 1.) c = (x < 8. ? 41280. : 42.);\n\t\tif (y == 2.) c = (x < 8. ? 43472. : 170.); if (y == 3.) c = (x < 8. ? 23252. : 677.);\n\t\tif (y == 4.) c = (x < 8. ? 22261. : 12949.); if (y == 5.) c = (x < 8. ? 60917. : 15963.);\n\t\tif (y == 6.) c = (x < 8. ? 56791. : 3703.); if (y == 7.) c = (x < 8. ? 32348. : 1021.);\n\t\tif (y == 8.) c = (x < 8. ? 31344. : 381.); if (y == 9.) c = (x < 8. ? 60096. : 1375.);\n\t\tif (y == 10.) c = (x < 8. ? 43264. : 1370.); if (y == 11.) c = (x < 8. ? 26112. : 2389.);\n\t\tif (y == 12.) c = (x < 8. ? 23040. : 2646.); if (y == 13.) c = (x < 8. ? 26944. : 6781.);\n\t\tif (y == 14.) c = (x < 8. ? 41296. : 22207.); if (y == 15.) c = (x < 8. ? 0. : 21823.);\n\t\t\n\t\tfloat s = SELECT(x,c);\n\t\tif (s == 1.) fragColor = RGB(228.,92.,16.);\n\t\tif (s == 2.) fragColor = RGB(128.,208.,16.);\n\t\tif (s == 3.) fragColor = RGB(255.,160.,68.);\n\t}\n}\n\nvoid spr_player_up(float f, float x, float y)\n{\n\tfloat c = 0.;\n\tif (f == 0. || f == 1.) {\n\t\tif (f == 1.) x = 15. - x;\n\t\t\n\t\tif (y == 0.) c = (x < 8. ? 21504. : 21.); if (y == 1.) c = (x < 8. ? 21760. : 85.);\n\t\tif (y == 2.) c = (x < 8. ? 21792. : 2133.); if (y == 3.) c = (x < 8. ? 21856. : 2389.);\n\t\tif (y == 4.) c = (x < 8. ? 21984. : 2901.); if (y == 5.) c = (x < 8. ? 24480. : 2805.);\n\t\tif (y == 6.) c = (x < 8. ? 32640. : 765.); if (y == 7.) c = (x < 8. ? 64960. : 895.);\n\t\tif (y == 8.) c = (x < 8. ? 22000. : 981.); if (y == 9.) c = (x < 8. ? 22000. : 3029.);\n\t\tif (y == 10.) c = (x < 8. ? 22464. : 3029.); if (y == 11.) c = (x < 8. ? 64832. : 2687.);\n\t\tif (y == 12.) c = (x < 8. ? 21824. : 341.); if (y == 13.) c = (x < 8. ? 24512. : 213.);\n\t\tif (y == 14.) c = (x < 8. ? 16320. : 60.); if (y == 15.) c = (x < 8. ? 3840. : 0.);\n\t\t\n\t\tfloat s = SELECT(x,c);\n\t\tif (s == 1.) fragColor = RGB(128.,208.,16.);\n\t\tif (s == 2.) fragColor = RGB(255.,160.,68.);\n\t\tif (s == 3.) fragColor = RGB(228.,92.,16.);\n\t}\n\tif (f == 2.) {\n\t\tif (y == 0.) c = (x < 8. ? 43584. : 2.); if (y == 1.) c = (x < 8. ? 43660. : 10.);\n\t\tif (y == 2.) c = (x < 8. ? 43676. : 42.); if (y == 3.) c = (x < 8. ? 43708. : 810.);\n\t\tif (y == 4.) c = (x < 8. ? 43636. : 986.); if (y == 5.) c = (x < 8. ? 43380. : 49365.);\n\t\tif (y == 6.) c = (x < 8. ? 26004. : 28901.); if (y == 7.) c = (x < 8. ? 22164. : 23897.);\n\t\tif (y == 8.) c = (x < 8. ? 43664. : 22362.); if (y == 9.) c = (x < 8. ? 43664. : 21978.);\n\t\tif (y == 10.) c = (x < 8. ? 43616. : 5498.); if (y == 11.) c = (x < 8. ? 21924. : 1493.);\n\t\tif (y == 12.) c = (x < 8. ? 43685. : 938.); if (y == 13.) c = (x < 8. ? 32789. : 362.);\n\t\tif (y == 14.) c = (x < 8. ? 0. : 1360.); if (y == 15.) c = (x < 8. ? 0. : 1360.);\n\t\t\n\t\tfloat s = SELECT(x,c);\n\t\tif (s == 1.) fragColor = RGB(228.,92.,16.);\n\t\tif (s == 2.) fragColor = RGB(128.,208.,16.);\n\t\tif (s == 3.) fragColor = RGB(255.,160.,68.);\n\t}\n\t\n}\n\n\nvoid spr_player_left(float f, float x, float y)\n{\n\tfloat c = 0.;\n\tif (f == 0.) {\n\t\tif (y == 0.) c = (x < 8. ? 16384. : 21.); if (y == 1.) c = (x < 8. ? 43520. : 341.);\n\t\tif (y == 2.) c = (x < 8. ? 43648. : 5590.); if (y == 3.) c = (x < 8. ? 43520. : 22010.);\n\t\tif (y == 4.) c = (x < 8. ? 63240. : 17918.); if (y == 5.) c = (x < 8. ? 64504. : 1726.);\n\t\tif (y == 6.) c = (x < 8. ? 65288. : 687.); if (y == 7.) c = (x < 8. ? 65288. : 85.);\n\t\tif (y == 8.) c = (x < 8. ? 23224. : 2389.); if (y == 9.) c = (x < 8. ? 22200. : 10879.);\n\t\tif (y == 10.) c = (x < 8. ? 22152. : 10943.); if (y == 11.) c = (x < 8. ? 22536. : 10941.);\n\t\tif (y == 12.) c = (x < 8. ? 43016. : 1686.); if (y == 13.) c = (x < 8. ? 21504. : 5461.);\n\t\tif (y == 14.) c = (x < 8. ? 0. : 170.); if (y == 15.) c = (x < 8. ? 32768. : 170.);\n\t}\n\tif (f == 1.) {\n\t\tif (y == 0.) c = 0.; if (y == 1.) c = (x < 8. ? 20480. : 5.);\n\t\tif (y == 2.) c = (x < 8. ? 27264. : 85.); if (y == 3.) c = (x < 8. ? 43680. : 1397.);\n\t\tif (y == 4.) c = (x < 8. ? 43648. : 5502.); if (y == 5.) c = (x < 8. ? 48576. : 4479.);\n\t\tif (y == 6.) c = (x < 8. ? 48892. : 431.); if (y == 7.) c = (x < 8. ? 65480. : 171.);\n\t\tif (y == 8.) c = (x < 8. ? 32712. : 21.); if (y == 9.) c = (x < 8. ? 65208. : 421.);\n\t\tif (y == 10.) c = (x < 8. ? 64952. : 682.); if (y == 11.) c = (x < 8. ? 62856. : 1706.);\n\t\tif (y == 12.) c = (x < 8. ? 22024. : 1450.); if (y == 13.) c = (x < 8. ? 43592. : 10581.);\n\t\tif (y == 14.) c = (x < 8. ? 21920. : 10837.); if (y == 15.) c = 2688.;\n\t}\n\tif (f == 2.) {\n\t\tif (y == 0.) c = 0.; if (y == 1.) c = (x < 8. ? 21504. : 1.);\n\t\tif (y == 2.) c = (x < 8. ? 23200. : 21.); if (y == 3.) c = (x < 8. ? 27304. : 93.);\n\t\tif (y == 4.) c = (x < 8. ? 43680. : 95.); if (y == 5.) c = (x < 8. ? 61296. : 351.);\n\t\tif (y == 6.) c = (x < 8. ? 61375. : 1387.); if (y == 7.) c = (x < 8. ? 65520. : 1066.);\n\t\tif (y == 8.) c = (x < 8. ? 24572. : 21.); if (y == 9.) c = (x < 8. ? 43772. : 90.);\n\t\tif (y == 10.) c = (x < 8. ? 43760. : 106.); if (y == 11.) c = (x < 8. ? 43584. : 362.);\n\t\tif (y == 12.) c = (x < 8. ? 38304. : 1370.); if (y == 13.) c = (x < 8. ? 27296. : 10581.);\n\t\tif (y == 14.) c = (x < 8. ? 21864. : 10837.); if (y == 15.) c = (x < 8. ? 170. : 2688.);\n\t}\n\t\n\tfloat s = SELECT(x,c);\n\tif (s == 1.) fragColor = RGB(128.,208.,16.);\n\tif (s == 2.) fragColor = RGB(228.,92.,16.);\n\tif (s == 3.) fragColor = RGB(255.,160.,68.);\n}\n\nvoid spr_player_right(float f, float x, float y)\n{\n\tspr_player_left(f, 15. - x, y);\n}\n\nvoid spr_sword(float f, float tDirX, float tDirY, float x, float y)\n{\n\tif (f < 4. || f > 32.) return;\n\t\n\tif (tDirX > 0.) {x = 15. - x;}\n\tif (tDirY > 0.) {float temp = y; y = x; x = temp;}\n\tif (tDirY < 0.) {float temp = y; y = x; x = 15. - temp;}\n\t\n\tif (f < 5. || f > 28.) {if (x < 10.) {x -= 4.;}}\n\t\n\tif (x < 0.) return;\n\t\n\tfloat c = 0.;\n\tif (y == 0.) c = 0.; if (y == 1.) c = 0.;\n\tif (y == 2.) c = 0.; if (y == 3.) c = 0.;\n\tif (y == 4.) c = 0.; if (y == 5.) c = (x < 8. ? 0. : 20480.);\n\tif (y == 6.) c = (x < 8. ? 0. : 4096.); if (y == 7.) c = (x < 8. ? 43520. : 39594.);\n\tif (y == 8.) c = (x < 8. ? 43648. : 39594.); if (y == 9.) c = (x < 8. ? 43520. : 39594.);\n\tif (y == 10.) c = (x < 8. ? 0. : 4096.); if (y == 11.) c = (x < 8. ? 0. : 20480.);\n\tif (y == 12.) c = 0.; if (y == 13.) c = 0.;\n\tif (y == 14.) c = 0.; if (y == 15.) c = 0.;\n\t\n\tfloat s = SELECT(x,c);\n\tif (s == 1.) fragColor = RGB(128.,208.,16.);\n\tif (s == 2.) fragColor = RGB(228.,92.,16.);\n\n}\n\nvoid spr_enemy(float f, float tDirX, float tDirY, float x, float y)\n{\n\t\n\tif (tDirX > 0.) {x = 15. - x;}\n\tif (tDirY > 0.) {float temp = y; y = x; x = 15. - temp;}\n\tif (tDirY < 0.) {float temp = y; y = x; x = temp;}\n\t\n\tif (y >= 8.) y = 15. - y;\n\t\n\tfloat c = 0.;\n\tif (f == 0.) {\n\t\tif (y == 0.) c = (x < 8. ? 16384. : 4160.); if (y == 1.) c = (x < 8. ? 16384. : 5201.);\n\t\tif (y == 2.) c = (x < 8. ? 16640. : 1365.); if (y == 3.) c = (x < 8. ? 21760. : 5466.);\n\t\tif (y == 4.) c = (x < 8. ? 42000. : 5610.); if (y == 5.) c = (x < 8. ? 25680. : 30053.);\n\t\tif (y == 6.) c = (x < 8. ? 22864. : 22361.); if (y == 7.) c = (x < 8. ? 43344. : 54618.);\n\t\t\n\t\tfloat s = SELECT(x,c);\n\t\tif (s == 1.) fragColor = RGB(224.,80.,0.);\n\t\tif (s == 2.) fragColor = RGB(255.,255.,255.);\n\t\tif (s == 3.) fragColor = RGB(255.,160.,0.);\n\t}\n\tif (f == 1.) {\n\t\tif (y == 0.) c = (x < 8. ? 0. : 1040.); if (y == 1.) c = (x < 8. ? 20480. : 1300.);\n\t\tif (y == 2.) c = (x < 8. ? 16384. : 1365.); if (y == 3.) c = (x < 8. ? 21760. : 5466.);\n\t\tif (y == 4.) c = (x < 8. ? 42241. : 5610.); if (y == 5.) c = (x < 8. ? 25601. : 30053.);\n\t\tif (y == 6.) c = (x < 8. ? 22869. : 22361.); if (y == 7.) c = (x < 8. ? 43349. : 54618.);\n\t\t\n\t\tfloat s = SELECT(x,c);\n\t\tif (s == 1.) fragColor = RGB(224.,80.,0.);\n\t\tif (s == 2.) fragColor = RGB(255.,255.,255.);\n\t\tif (s == 3.) fragColor = RGB(255.,160.,0.);\n\t}\n\t\n\tif (x >= 8.) x = 15. - x;\n\tif (y >= 8.) y = 15. - y;\n\tif (f == 2. || f == 5. || f == 7.) {\t\t\n\t\tif (y == 0.) c = 0.; if (y == 1.) c = 0.;\n\t\tif (y == 2.) c = 0.; if (y == 3.) c = (x < 8. ? 64. : 0.);\n\t\tif (y == 4.) c = (x < 8. ? 32768. : 0.); if (y == 5.) c = (x < 8. ? 17408. : 0.);\n\t\tif (y == 6.) c = (x < 8. ? 32768. : 0.); if (y == 7.) c = (x < 8. ? 26112. : 0.);\n\t\t\n\t\tfloat s = SELECT(x,c);\n\t\tif (mod(floor(iTime * 10.),2.) == 0.) {\n\t\t\tif (s == 2.) s = 1.;\n\t\t\telse if (s == 1.) s= 2.;\n\t\t}\n\t\t\n\t\tif (s == 1.) fragColor = RGB(255.,255.,255.);\n\t\tif (s == 2.) fragColor = RGB(104.,136.,255.);\n\t}\n\tif (f == 3. || f == 6.) {\n\t\tif (y == 0.) c = 0.; if (y == 1.) c = (x < 8. ? 4. : 0.);\n\t\tif (y == 2.) c = (x < 8. ? 32. : 0.); if (y == 3.) c = (x < 8. ? 32832. : 0.);\n\t\tif (y == 4.) c = (x < 8. ? 33024. : 0.); if (y == 5.) c = (x < 8. ? 17408. : 0.);\n\t\tif (y == 6.) c = (x < 8. ? 40960. : 0.); if (y == 7.) c = (x < 8. ? 26240. : 0.);\n\t\t\n\t\tfloat s = SELECT(x,c);\n\t\tif (mod(floor(iTime * 10.),2.) == 0.) {\n\t\t\tif (s == 2.) s = 1.;\n\t\t\telse if (s == 1.) s= 2.;\n\t\t}\n\t\t\n\t\tif (s == 1.) fragColor = RGB(255.,255.,255.);\n\t\tif (s == 2.) fragColor = RGB(104.,136.,255.);\n\n\t}\n}\n\n\nvoid background(vec2 p)\n{\n\tfloat tileX = floor((p.x - 8.0) / 16.0);\n\tfloat tileY = floor((p.y - 8.0) / 16.0);\n\tfloat pixelX = mod((p.x - 8.0), 16.0);\n\tfloat pixelY = 15.0 - mod((p.y - 8.0), 16.0);\n\t\n\tif ((tileX >= -4. && tileX <= 2. && tileY >= -2. && tileY <= 0.) ||\n\t\t(tileX == -5. && tileY == 1.) ||\n\t\t(tileX == -5. && tileY == -3.) ||\n\t\t(tileX == 3. && tileY == 1.) ||\n\t\t(tileX == 3. && tileY == -3.) ||\n\t\t\n\t\t(tileX == 5. && tileY == -1.) ||\n\t\t(tileX == -1. && tileY == -3.) ||\n\t\t(tileX == -7. && tileY == -1.) ||\n\t\t((mod(tileX, 2.0) == 0. || mod(tileY, 2.0) == 0.) &&\n\t   ((tileX >= -6. && tileX <= 4.) || (tileY >= -4. && tileY <= 2.)))) {\n\t\t\t\n\t\t\tif (mod(pixelX * 5.5 + pixelY * 4.,21.) == 0.)\n\t\t\t\tfragColor = mix(RGB(252.,206.,168.),RGB(252.,196.,118.),length(p / 256.));\n\t\t\telse\n\t\t\t\tfragColor = RGB(252.,216.,168.);\n\t} else {\n\t\tif (tileX >= -5. && tileX <= 3. && tileY >= -3. && tileY <= 2.)\n\t\t\tspr_tree(pixelX,pixelY);\n\t\telse\n\t\t\tspr_rock(pixelX,pixelY);\n\t}\n}\n\nvoid mainImage( out vec4 oFragColor, in vec2 fragCoord )\n{\n\tfloat size = 2.;\n\tif (iResolution.y < 200.) size = 1.;\n\tif (iResolution.y > 600.) size = 4.;\n\tvec2 uv = floor((fragCoord.xy - iResolution.xy / 2.0) / size);\n\t\n\t\n\t\n\tbackground(uv);\n\t\n\t\n\tfloat time = floor(iTime * 60.0);\n\t\n\tconst float walkTime = 60.0 * 5.0;\n\tfloat walkIndex = floor(time / walkTime);\n\tfloat walkFrame = mod(time, walkTime);\n\t\n\tvec2 lastPlayerPos = hashPos(walkIndex - 1.);\n\tvec2 curPlayerPos = hashPos(walkIndex);\n\tvec2 playerPos = lastPlayerPos;\n\t\n\tfloat dirX = 0., dirXRand = 0.;\n\tfloat dirY = 0., dirYRand = 0.;\n\tfloat dirRand = floor(abs(hash(floor(time / 50.0))) * 4.0);\n\tif (dirRand == 0.) dirXRand = 1.;\n\telse if (dirRand == 1.) dirXRand = -1.;\n\telse if (dirRand == 2.) dirYRand = 1.;\n\telse dirYRand = -1.;\n\t\n\tfloat frame = floor(mod(time / 6.0,2.0));\n\tfloat swordFrame = 0.;\n\t\n\tif (hash(walkIndex * 3.84) < 0.) {\n\t\tfloat yDisp = abs(lastPlayerPos.y - curPlayerPos.y);\n\t\tfloat xDisp = abs(lastPlayerPos.x - curPlayerPos.x);\n\t\tfloat ySign = sign(curPlayerPos.y - lastPlayerPos.y);\n\t\tfloat xSign = sign(curPlayerPos.x - lastPlayerPos.x);\n\t\t\n\t\tif (walkFrame < yDisp) {\n\t\t\tplayerPos = vec2(lastPlayerPos.x,lastPlayerPos.y + ySign * walkFrame);\n\t\t\tdirY = ySign;\n\t\t} else if (walkFrame < yDisp + xDisp - 16.0) {\n\t\t\tplayerPos = vec2(lastPlayerPos.x + xSign * (walkFrame - yDisp),curPlayerPos.y);\n\t\t\tdirX = xSign;\n\t\t} else if (walkFrame < yDisp + xDisp - 16.0 + 40.0) {\n\t\t\tdirX = xSign;\n\t\t\tframe = 2.;\n\t\t\tswordFrame = walkFrame - (yDisp + xDisp - 16.0);\n\t\t\tplayerPos = vec2(lastPlayerPos.x + xSign * (xDisp - 16.0),curPlayerPos.y);\n\t\t} else if (walkFrame < yDisp + xDisp - 16.0 + 56.0) {\n\t\t\tdirX = xSign;\n\t\t\tplayerPos = vec2(lastPlayerPos.x + xSign * (walkFrame - (yDisp - 16.0 + 56.0)),curPlayerPos.y);\n\t\t} else {\n\t\t\tframe = 0.;\n\t\t\tif (walkFrame < yDisp + xDisp - 16.0 + 90.) dirX = xSign;\n\t\t\tplayerPos = curPlayerPos;\n\t\t}\n\t} else {\n\t\tfloat yDisp = abs(lastPlayerPos.y - curPlayerPos.y);\n\t\tfloat xDisp = abs(lastPlayerPos.x - curPlayerPos.x);\n\t\tfloat ySign = sign(curPlayerPos.y - lastPlayerPos.y);\n\t\tfloat xSign = sign(curPlayerPos.x - lastPlayerPos.x);\n\t\t\n\t\tif (walkFrame < xDisp) {\n\t\t\tdirX = xSign;\n\t\t\tplayerPos = vec2(lastPlayerPos.x + xSign * walkFrame,lastPlayerPos.y);\n\t\t} else if (walkFrame < yDisp + xDisp - 16.0) {\n\t\t\tdirY = ySign;\n\t\t\tplayerPos = vec2(curPlayerPos.x,lastPlayerPos.y + ySign * (walkFrame - xDisp));\n\t\t} else if (walkFrame < yDisp + xDisp - 16.0 + 40.0) {\n\t\t\tframe = 2.;\n\t\t\tswordFrame = walkFrame - (yDisp + xDisp - 16.0);\n\t\t\tdirY = ySign;\n\t\t\tplayerPos = vec2(curPlayerPos.x,lastPlayerPos.y + ySign * (yDisp - 16.0));\n\t\t} else if (walkFrame < yDisp + xDisp - 16.0 + 56.0) {\n\t\t\tdirY = ySign;\n\t\t\tplayerPos = vec2(curPlayerPos.x,lastPlayerPos.y + ySign * (walkFrame - (xDisp - 16.0 + 56.0)));\n\t\t} else {\n\t\t\tframe = 0.;\n\t\t\tif (walkFrame < yDisp + xDisp - 16.0 + 90.) dirY = ySign;\n\t\t\tplayerPos = curPlayerPos;\n\t\t}\n\t}\n\t\n\t\n\tif (dirX == 0. && dirY == 0.) {\n\t\tdirY = dirYRand;\n\t\tdirX = dirXRand;\n\t\tframe = 0.;\n\t}\n\t\n\tconst int enemyNum = 3;\n\tfor(int i = 0; i < enemyNum; i++) {\n\t\tfloat wi = walkIndex + float(i);\n\t\tvec2 eLastPos = hashPos(wi - 1.);\n\t\tvec2 eCurPos = hashPos(wi);\n\t\tvec2 ePos = vec2(0,0);\n\t\t\n\t\tfloat eDirX = 0.;\n\t\tfloat eDirY = 0.;\n\t\t\n\t\tfloat yDisp = abs(eCurPos.y - eLastPos.y);\n\t\tfloat xDisp = abs(eCurPos.x - eLastPos.x);\n\t\tfloat ySign = sign(eCurPos.y - eLastPos.y);\n\t\tfloat xSign = sign(eCurPos.x - eLastPos.x);\n\t\t\n\t\tfloat eFrame = floor(mod((time + 2.5) / 6.0,2.0));\n\t\t\n\t\tif (hash(wi * 3.84) < 0.) {\n\t\t\tif (eLastPos.x != eCurPos.x) {\n\t\t\t\tfloat s = (hash(wi) < 0. ? 1. : -1.);\n\t\t\t\tfloat y = (xDisp + yDisp - (walkFrame - walkTime * float(i)));\n\t\t\t\tfloat yc = abs(hash(wi)) * 64. + 64.;\n\t\t\t\t\n\t\t\t\tif (y < 0.) {\n\t\t\t\t\tePos = eCurPos;\n\t\t\t\t\teDirY = s;\n\t\t\t\t\teFrame = 2. + floor(abs(y / 5.));\n\t\t\t\t} else if (y < yc) {\n\t\t\t\t\tePos = vec2(eCurPos.x, eCurPos.y + s * yc + s * (y - yc));\n\t\t\t\t\teDirY = s;\n\t\t\t\t} else {\n\t\t\t\t\tePos = vec2(eCurPos.x, eCurPos.y + s * yc - s * (y - yc));\n\t\t\t\t\teDirY = -s;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (eLastPos.y != eCurPos.y) {\n\t\t\t\tfloat s = (hash(wi) < 0. ? 1. : -1.);\n\t\t\t\tfloat x = (xDisp + yDisp - (walkFrame - walkTime * float(i)));\n\t\t\t\tfloat xc = abs(hash(wi)) * 64. + 64.;\n\t\t\t\t\n\t\t\t\tif (x < 0.) {\n\t\t\t\t\tePos = eCurPos;\n\t\t\t\t\teDirX = s;\n\t\t\t\t\teFrame = 2. + floor(abs(x / 5.));\n\t\t\t\t} else if (x < xc) {\n\t\t\t\t\tePos = vec2(eCurPos.x + s * xc + s * (x - xc), eCurPos.y);\n\t\t\t\t\teDirX = -s;\n\t\t\t\t} else {\n\t\t\t\t\tePos = vec2(eCurPos.x + s * xc - s * (x - xc), eCurPos.y);\n\t\t\t\t\teDirX = s;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tePos = floor(ePos);\n\t\t\n\t\tif ((eDirX != 0. || eDirY != 0.) &&\n\t\t\tuv.x >= ePos.x - 8. && uv.x <= ePos.x + 7. &&\n\t\t\tuv.y >= ePos.y - 8. && uv.y <= ePos.y + 7.) {\n\t\t\t\tfloat epx = uv.x - ePos.x + 8.;\n\t\t\t\tfloat epy = ePos.y - uv.y + 7.;\n\t\t\t\tspr_enemy(eFrame, eDirX, eDirY, epx, epy);\n\t\t}\n\t\t\n\t}\n\t\n\tif (frame == 2.) {\n\t\tfloat spx = 0.;\n\t\tfloat spy = 0.;\n\t\tif (dirX > 0.) {spx = 15.; spy = -1.;}\n\t\tif (dirX < 0.) {spx = -15.; spy = -1.;}\n\t\tif (dirY > 0.) {spx = -3.; spy = 15.;}\n\t\tif (dirY < 0.) {spx = 1.; spy = -15.;}\n\t\t\n\t\tif (uv.x >= playerPos.x - 8. + spx && uv.x <= playerPos.x + 7. + spx &&\n\t\t\tuv.y >= playerPos.y - 7. + spy && uv.y <= playerPos.y + 8. + spy) {\n\t\t\t\n\t\t\tfloat sx = uv.x - playerPos.x + 8. - spx;\n\t\t\tfloat sy = playerPos.y - uv.y + 8. + spy;\n\t\t\tspr_sword(swordFrame,dirX,dirY,sx,sy);\n\t\t}\n\t}\n\t\n\tif (uv.x >= playerPos.x - 8. && uv.x <= playerPos.x + 7. &&\n\t\tuv.y >= playerPos.y - 7. && uv.y <= playerPos.y + 8.) {\n\t\t\tfloat px = uv.x - playerPos.x + 8.;\n\t\t\tfloat py = playerPos.y - uv.y + 8.;\n\t\t\n\t\t\tif (dirX > 0.) spr_player_right(frame,px,py);\n\t\t\tif (dirX < 0.) spr_player_left(frame,px,py);\n\t\t\tif (dirY > 0.) spr_player_up(frame,px,py);\n\t\t\tif (dirY < 0.) spr_player_down(frame,px,py);\n\t}\n\t\n    oFragColor = fragColor;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 13,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}