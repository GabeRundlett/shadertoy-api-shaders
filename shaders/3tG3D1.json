{
    "Shader": {
        "info": {
            "date": "1611010314",
            "description": "Testing approach to calculate 'distance' between colors.",
            "flags": 0,
            "hasliked": 0,
            "id": "3tG3D1",
            "likes": 0,
            "name": "Chroma Rocks",
            "published": 3,
            "tags": [
                "chroma",
                "color",
                "space"
            ],
            "usePreview": 0,
            "username": "blurryroots",
            "viewed": 289
        },
        "renderpass": [
            {
                "code": "vec3 desat (vec3 c) {\n    return vec3(0.299*c.r + 0.587*c.g + 0.114*c.b);\n}\n\nvec4 desat (vec4 c) {\n    vec4 d = vec4(0.299*c.r + 0.587*c.g + 0.114*c.b);\n    d.a = 1.0;\n    return d;\n}\n\nfloat luminance(vec3 color)\n{\n    return dot(color, vec3(1.0/3.0));\n}\n\nvec3 convertToYCrCb(vec3 rgbColor)\n{\n\tfloat Y = 0.2989 * rgbColor.r + 0.5866 * rgbColor.g + 0.1145 * rgbColor.b;\n\tfloat Cr = 0.7132 * (rgbColor.r - Y);\n\tfloat Cb = 0.5647 * (rgbColor.b - Y);\n\n\treturn vec3(Y, Cr, Cb);\n}\n\n// Checks how far 'away' two colors are.\nfloat getChromaDistance(vec3 YCbCrA, vec3 YCbCrB)\n{\n\tvec2 CbCrA = vec2(YCbCrA.y, YCbCrA.z);\n\tvec2 CbCrB = vec2(YCbCrB.y, YCbCrB.z);\n\n\treturn distance(CbCrA, CbCrB);\n}\n\nconst vec3 TargetColor = vec3(0.618, 0.33, 0.23);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 uv_color = texture(iChannel0, uv).rgb;\n    vec3 uv_color_y = convertToYCrCb(uv_color);\n    \n    vec3 grayscale = vec3 (1.0, 0.0, 0.0);\n   \t//vec3 grayscale = desat(uv_color);\n    // vec3 grayscale = vec3(luminance(uv_color));\n    vec3 grayscale_y = convertToYCrCb(grayscale);\n \n    vec3 d = vec3(getChromaDistance(uv_color_y, grayscale_y));\n\n    // Output to screen\n    fragColor = vec4(d, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}