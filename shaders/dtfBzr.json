{
    "Shader": {
        "info": {
            "date": "1692526342",
            "description": "its a fractal i got by manipulating time and space",
            "flags": 0,
            "hasliked": 0,
            "id": "dtfBzr",
            "likes": 0,
            "name": "Weird Fractal",
            "published": 3,
            "tags": [
                "fractal",
                "weird"
            ],
            "usePreview": 0,
            "username": "Lunasoldev",
            "viewed": 91
        },
        "renderpass": [
            {
                "code": "float Circle(vec2 uv, vec2 pos, float r, float blur) {\n    return smoothstep(r,r-blur-0.0001,length(uv-pos));\n}\n\nfloat Rectangle(vec2 uv, vec2 pos) {return 1.;}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = fragCoord/iResolution.xy*2.-1.;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float x = uv.x;\n    float y = uv.y;\n    \n    float d = length(uv);\n    uv*=sin(uv.x)*13.;\n    uv*=uv.y;\n    uv.x = fract(uv.x);\n    uv.y = fract(uv.y);\n    \n    // Time varying pixel color\n    vec3 col = vec3(0);\n    \n    col += vec3(uv.x,uv.y,uv.x*uv.y)*smoothstep(8., 0., Circle(uv,vec2(sin(iTime*5.*uv.x),cos(iTime*5.*uv.y)),1.,0.05)/(abs(x)+abs(y)));\n    col -= abs(x*y);\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}