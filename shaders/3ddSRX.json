{
    "Shader": {
        "info": {
            "date": "1572679981",
            "description": "Rendering an IFS fractal in parallel.",
            "flags": 32,
            "hasliked": 0,
            "id": "3ddSRX",
            "likes": 12,
            "name": "IFS fractal fern",
            "published": 3,
            "tags": [
                "fractal",
                "ifs",
                "barnsley",
                "fern"
            ],
            "usePreview": 0,
            "username": "id523",
            "viewed": 619
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = textureLod(iChannel0, fragCoord / iResolution.xy, 0.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n    mat3 subFern = inverse(mat3( 0.85,-0.04, 0.0, 0.04, 0.85, 0.0, 0.00, 1.50, 1.0));\n    mat3 leftLeaf = inverse(mat3( 0.20, 0.23, 0.0,-0.26, 0.22, 0.0, 0.00, 1.60, 1.0));\n    mat3 rightLeaf = inverse(mat3(-0.15, 0.26, 0.0, 0.28, 0.24, 0.0, 0.00, 0.44, 1.0));\n    \n    mat3 transforms[] = mat3[](\n        subFern * subFern,\n        leftLeaf * subFern,\n        rightLeaf * subFern,\n        leftLeaf,\n        rightLeaf\n    );\n    \n    vec2 LB = vec2(-8.0, 0.0);\n    vec2 RT = vec2(8.0, 10.0);\n\n    vec2 samples[] = vec2[](\n        vec2(0.2, 0.2),\n        vec2(-0.2, -0.2),\n        vec2(0.2, -0.2),\n        vec2(-0.2, 0.2)\n    );\n\n    if (iFrame == 0) {\n        fragColor = vec4(0.05);\n    } else {\n        float accumulate = 0.0;\n        \n        for (int s = 0; s < samples.length(); s++) {\n            for (int t = 0; t < transforms.length(); t++) {\n                vec2 p = LB + (RT - LB) * (fragCoord + samples[s]) / iResolution.xy;\n                vec3 pA = transforms[t] * vec3(p, 1.0);\n                \n                vec2 xyt = (pA.xy - LB) / (RT - LB);\n \n                float texFetch = textureLod(iChannel0, xyt, 0.0).x;\n                if (xyt.x >= 0.0 && xyt.y >= 0.0 && xyt.x < 1.0 && xyt.y < 1.0) {\n                    accumulate += texFetch;\n                }\n            }\n        }\n        \n        float rescale = pow(max(accumulate, 0.0) / float(samples.length()), 0.7);\n        \n        fragColor = vec4(rescale, rescale, rescale, 1.0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}