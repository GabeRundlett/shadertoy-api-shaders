{
    "Shader": {
        "info": {
            "date": "1682352153",
            "description": "trigonal multiscale subdivide in 2 tweets...",
            "flags": 0,
            "hasliked": 0,
            "id": "DttGW8",
            "likes": 22,
            "name": "two tweet trixels",
            "published": 3,
            "tags": [
                "multiscale",
                "subdivision",
                "npr",
                "trixels",
                "golf",
                "subdivide",
                "codegolfing",
                "tinycode"
            ],
            "usePreview": 0,
            "username": "flockaroo",
            "viewed": 433
        },
        "renderpass": [
            {
                "code": "// created by florian berger (flockaroo) - 2023\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// multiscale trixels in 2 tweets of code (560 chars)\n\n// original version (560 chars)\n\n/*#define R(x) mat2(cos(x-vec4(0,33,11,0)))\n#define C(x) texture(iChannel0,(x)/r+.5)\n\nvoid mainImage( out vec4 O, in vec2 C )\n{\n    vec2 q,r=iResolution.xy,u,v,w,c,f,x=vec2(1,0);\n    float z,s=r.y/2e2;\n    mat2 m=R(iTime*.1)*mat2(1,0,.5,.9)*s;\n    \n    vec4 G,H;\n    for(;s<r.y;s*=2.,m*=2.) {\n        q=inverse(m)*(C-r*.5); f=fract(q);\n        u=m*(q-f); v=u+m*x; w=u+m*x.yx;\n        if((z=1.-f.x-f.y)<0.) { u=w; w=u+m*x.xx; }\n        G=C(c=(u+v+w)/3.);\n        if( dot(max(max(abs(C(v+w-c)-G),abs(C(w+u-c)-G)),abs(C(u+v-c)-G)),x.xxxy)>.17 ) break;\n    }\n    O=G-.27*exp2(-f.x*20.)*(H=vec4(1.13,1,.87,1))\n           -.23*exp2(-f.y*30.)*H.zxyw;\n    if(z<0.) O-=.2*exp2(z*60.)*H.yzxw;\n}*/\n\n// much smaller now thx to fabrice!! (509 chars)\n\n#define C(x) texture(iChannel0, (x)/r +.5 )\n\nvoid mainImage( out vec4 O, vec2 C )\n{\n    vec2  q, u=C-C,v=u,w=u,c,f, r = iResolution.xy;\n    float z, s = 0.; \n    vec4  H = vec4(1.13,1,.87,0); \n    \n    for( mat2 m =  mat2(cos(iTime*.1-vec4(0,33,1,34)))*r.y/2e2\n       ; O = C( c = (u+v+w)/3. ),\n         dot(max(max(abs( C(v+w-c) - O ),\n                     abs( C(w+u-c) - O )),\n                     abs( C(u+v-c) - O )),\n             H.yyyw) < .17 && ++s < 9.\n       ; m+=m)\n        q = inverse(m) * ( C - r*.5 ),\n        f = fract(q),\n        u = m*(q-f), v = u + m[0], w = u + m[1],\n        z = 1.-f.x-f.y,\n        z < 0. ?  u = w, w += m*H.yy : w;\n\n    \n    O -=   .27/ exp(f.x*14.)*H\n         + .23/ exp(f.y*21.)*H.zxyw\n         +  .2* exp( z<0.? z*42.: -s )*H.yzxw;\n     //  +  .2/ exp(  z*42.)*H.yzxw * step(-z,0.);  // also quite interesting - visually some tiles sunken some raised\n\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}