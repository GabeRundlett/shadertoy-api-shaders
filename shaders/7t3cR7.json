{
    "Shader": {
        "info": {
            "date": "1659465869",
            "description": "Tweakable expanding ink splatter blot",
            "flags": 0,
            "hasliked": 0,
            "id": "7t3cR7",
            "likes": 12,
            "name": "Ink Splatter",
            "published": 3,
            "tags": [
                "ink",
                "splatter",
                "splash",
                "blot"
            ],
            "usePreview": 0,
            "username": "Peace",
            "viewed": 638
        },
        "renderpass": [
            {
                "code": "#define TAU 6.28318530718\n\n#define SPEED 0.33\n#define INK_COLOR vec3(0, 0, 0)\n#define BACKGROUND_COLOR vec3(1)\n#define POSITION vec2(0)\n\nfloat rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\nfloat fbm(vec2 p, int octaves)\n{\n    float n = 0.0;\n    float a = 1.0;\n    float norm = 0.0;\n    for(int i = 0; i < octaves; ++i)\n    {\n        n += noise(p) * a;\n        norm += a;\n        p *= 2.0;\n        a *= 0.5;\n    }\n    return n / norm;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = mod(iTime, 2.5 / SPEED);\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy - POSITION * iResolution.xy) / iResolution.y;\n \n    float angle = atan(uv.y, uv.x);\n    angle += fbm(uv * 4.0, 2) * 0.5;\n    vec2 p = vec2(cos(angle), sin(angle));\n    \n    float t = time * SPEED;\n    t *= t;\n    \n    float l = dot(uv / t, uv / t);\n    l -= (fbm(normalize(uv) * 3.0, 2) - 0.5);\n    float ink = fbm(p * 8.0, 2) + 1.5 - l;\n\n    vec3 col = mix(BACKGROUND_COLOR, INK_COLOR, clamp(ink, 0.0, 1.0));\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}