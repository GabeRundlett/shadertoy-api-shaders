{
    "Shader": {
        "info": {
            "date": "1676085122",
            "description": "It's kinda hacky trilinear interpolation of bicubic filtering on mips.",
            "flags": 0,
            "hasliked": 0,
            "id": "Dl2SDW",
            "likes": 6,
            "name": "Mipped Bicubic Texture Filtering",
            "published": 3,
            "tags": [
                "texture",
                "filter",
                "bicubic"
            ],
            "usePreview": 1,
            "username": "N8Shader",
            "viewed": 553
        },
        "renderpass": [
            {
                "code": "// Original filtering function from https://www.shadertoy.com/view/4df3Dn\nfloat w0(float a)\n{\n    return (1.0/6.0)*(a*(a*(-a + 3.0) - 3.0) + 1.0);\n}\n\nfloat w1(float a)\n{\n    return (1.0/6.0)*(a*a*(3.0*a - 6.0) + 4.0);\n}\n\nfloat w2(float a)\n{\n    return (1.0/6.0)*(a*(a*(-3.0*a + 3.0) + 3.0) + 1.0);\n}\n\nfloat w3(float a)\n{\n    return (1.0/6.0)*(a*a*a);\n}\n\n// g0 and g1 are the two amplitude functions\nfloat g0(float a)\n{\n    return w0(a) + w1(a);\n}\n\nfloat g1(float a)\n{\n    return w2(a) + w3(a);\n}\n\n// h0 and h1 are the two offset functions\nfloat h0(float a)\n{\n    return -1.0 + w1(a) / (w0(a) + w1(a));\n}\n\nfloat h1(float a)\n{\n    return 1.0 + w3(a) / (w2(a) + w3(a));\n}\n\nvec4 texture_bicubic(sampler2D tex, vec2 uv, vec4 texelSize, vec2 fullSize, float lod)\n{\n\tuv = uv*texelSize.zw + 0.5;\n\tvec2 iuv = floor( uv );\n\tvec2 fuv = fract( uv );\n\n    float g0x = g0(fuv.x);\n    float g1x = g1(fuv.x);\n    float h0x = h0(fuv.x);\n    float h1x = h1(fuv.x);\n    float h0y = h0(fuv.y);\n    float h1y = h1(fuv.y);\n\n\tvec2 p0 = (vec2(iuv.x + h0x, iuv.y + h0y) - 0.5) * texelSize.xy;\n\tvec2 p1 = (vec2(iuv.x + h1x, iuv.y + h0y) - 0.5) * texelSize.xy;\n\tvec2 p2 = (vec2(iuv.x + h0x, iuv.y + h1y) - 0.5) * texelSize.xy;\n\tvec2 p3 = (vec2(iuv.x + h1x, iuv.y + h1y) - 0.5) * texelSize.xy;\n\t\n    vec2 lodFudge = pow(1.95, lod) / fullSize;\n    return g0(fuv.y) * (g0x * \n        textureLod(tex, p0, lod)  +\n                        \n        g1x * textureLod(tex, p1, lod)\n                    ) +\n           g1(fuv.y) * (\n            g0x * textureLod(tex, p2, lod)  +\n                        g1x * textureLod(tex, p3, lod));\n}\n\n\nvec4 textureBicubic(sampler2D s, vec2 uv, float lod) {\n vec2 lodSizeFloor = vec2(textureSize(s, int(lod)));\n vec2 lodSizeCeil = vec2(textureSize(s, int(lod + 1.0)));\n vec2 fullSize = vec2(textureSize(s, 0));\n vec4 floorSample = texture_bicubic( s, uv, vec4(1.0 / lodSizeFloor.x, 1.0 / lodSizeFloor.y, lodSizeFloor.x, lodSizeFloor.y), fullSize, floor(lod));\n vec4 ceilSample = texture_bicubic( s, uv, vec4(1.0 / lodSizeCeil.x, 1.0 / lodSizeCeil.y, lodSizeCeil.x, lodSizeCeil.y), fullSize, ceil(lod));\n return mix(floorSample, ceilSample, fract(lod));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float lod = 10.0 * (0.5 + 0.5 * (-cos(0.5 * iTime)));\n    fragColor = textureBicubic(iChannel0, uv, lod);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}