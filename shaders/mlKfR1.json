{
    "Shader": {
        "info": {
            "date": "1701863917",
            "description": "https://replicate.com/andreasjansson/plasma",
            "flags": 0,
            "hasliked": 0,
            "id": "mlKfR1",
            "likes": 2,
            "name": "Generated plasma",
            "published": 3,
            "tags": [
                "plasma",
                "generated"
            ],
            "usePreview": 0,
            "username": "andreasjansson",
            "viewed": 353
        },
        "renderpass": [
            {
                "code": "float resolution = 3.0;\nfloat speed = 0.1;\nint depth = 4;\n\nvec3 color1 = vec3(235.0/255.0, 231.0/255.0, 92.0/255.0);\nvec3 color2 = vec3(223.0/255.0, 72.0/255.0, 67.0/255.0);\nvec3 color3 = vec3(235.0/255.0, 64.0/255.0, 240.0/255.0);\n\n// Replace this with the generated effect() function\nvec2 effect(vec2 p, float i, float time) {\n  return vec2(cos(i * sin(p.x * p.y) + time), sin(length(p.y - p.x) * i + time));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 p = (2.0 * gl_FragCoord.xy - iResolution.xy) / max(iResolution.x, iResolution.y);\n    p *= float(resolution);\n    for (int i = 1; i < depth; i++) {\n        float fi = float(i);\n        p += effect(p, fi, iTime * float(speed));\n    }\n    vec3 col = mix(mix(color1, color2, 1.0-sin(p.x)), color3, cos(p.y+p.x));\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}