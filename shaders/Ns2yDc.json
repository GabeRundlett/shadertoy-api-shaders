{
    "Shader": {
        "info": {
            "date": "1644248816",
            "description": "a simple way to make a triangular grid",
            "flags": 0,
            "hasliked": 0,
            "id": "Ns2yDc",
            "likes": 5,
            "name": "Triangle grid",
            "published": 3,
            "tags": [
                "grid",
                "triangle"
            ],
            "usePreview": 0,
            "username": "MarcoF",
            "viewed": 381
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926535\n\nvec2 rotate(vec2 original, float angle, vec2 pivot){\n\tmat2 rotation = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n\tvec2 final = original;\n\tfinal -= pivot;\n\tfinal *= rotation;\n\tfinal += pivot;\n\treturn final;\n}\n\nvec3 simplexGrid (vec2 uv) {\n\tvec3 xyz = vec3(0.0);\n\n\tfloat f2d = 0.3660254038; //(sqrt(3.) - 1.) / 2.;\n\tf2d *= (uv.x + uv.y);\n    \n    vec2 skew = vec2(0.0);\n    \n\tskew.x = uv.x + f2d;\n\tskew.y = uv.y + f2d;\n    \n    //skew.x = 1.1547 * uv.x;\n\t//skew.y = uv.y + 0.5 * skew.x;\n\n\n\tif (skew.x > skew.y) {\n\t\txyz.xy = 1.0 - vec2(skew.x, skew.y - skew.x);\n\t\txyz.z = skew.y;\n\t}\n\telse {\n\t\txyz.yz = 1.0 - vec2(skew.x - skew.y, skew.y);\n\t\txyz.x = skew.x;\n\t}\n\n\treturn xyz;\n}\n\nfloat scale = 10.;\nfloat lineSize = 0.05;\nfloat lineBlur = 0.01;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x;\n    \n\tuv = rotate(uv, -PI/4., vec2(0.));\n    \n\tuv *= scale;\n    \n    vec3 uvT = simplexGrid(uv);\n\tvec3 cellCoord = floor(uvT);\n\tvec3 cellUv = fract(uvT);\n    \n    vec3 col = vec3(0.0);\n\tcol = cellUv;\n\tcol = cos(cellCoord+iTime) * 0.5 + 0.5;\n\n\t// outline\n    for (int i = 0; i < 3; i++) {\n        col *= smoothstep(lineSize / 2. - lineBlur, lineSize / 2. + lineBlur, cellUv[i]);\n        col *= smoothstep(lineSize / 2. - lineBlur, lineSize / 2. + lineBlur, 1. - cellUv[i]);\n    }\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}