{
    "Shader": {
        "info": {
            "date": "1686689156",
            "description": "testing how things work in GLSL",
            "flags": 0,
            "hasliked": 0,
            "id": "DdfyDn",
            "likes": 2,
            "name": "test 1, learning the ropes",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "Yukinyan",
            "viewed": 151
        },
        "renderpass": [
            {
                "code": "vec3 palette( float t, vec3 a, vec3 b, vec3 c, vec3 d){\n\n    return a + b*cos( 6.228318*(c*t*d));\n\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     vec4 fragColour = fragColor;\n     vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n     vec2 uv0 = uv;\n     \n     vec3 finalColour = vec3(0.0);\n     \n     for (float i = 0.0; i<2.0; i++){\n     \n     \n     uv = fract(uv * 1.5) -0.5;\n     \n     float d = length(uv) * exp(-length(uv0));\n \n     vec3 col = palette((length(uv0) + iTime*0.4) ,vec3(0.821, 0.328, 0.242),vec3(0.659, 0.481, 0.896), vec3(0.612, 0.340, 0.296), vec3(2.820, 3.026, -0.273)); \n     d = sin(d * 8. + iTime)/8.;\n     d = abs(d);\n     \n     d= pow(0.01 / d, 2.0);\n     \n     finalColour += col * d;\n     \n     fragColour =vec4(finalColour, 1.0);\n     }\n\n     fragColor = fragColour;\n \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}