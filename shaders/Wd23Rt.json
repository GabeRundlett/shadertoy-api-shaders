{
    "Shader": {
        "info": {
            "date": "1549749555",
            "description": "Chromaticity diagram with CIERGB and sRGB highlighted.",
            "flags": 0,
            "hasliked": 0,
            "id": "Wd23Rt",
            "likes": 4,
            "name": "CIE XYZ Chromaticity diagram",
            "published": 3,
            "tags": [
                "colour",
                "chromaticity",
                "ciexyz"
            ],
            "usePreview": 0,
            "username": "Josh04",
            "viewed": 526
        },
        "renderpass": [
            {
                "code": "// CIERGB to XYZ from https://en.wikipedia.org/wiki/CIE_1931_color_space#CIE_RGB_color_space\n\n#define LUMINANCE 0.6\n#define XYZALPHA 1.0\n#define LINEARSRGBALPHA 0.7\n#define CIERGBALPHA 0.8\n#define BACKGROUND vec3(0.33)\n#define BACKGROUND2 vec3(0.00)\n\n// stolen greedily from https://www.shadertoy.com/view/4tV3WW\nconst vec2 aa = vec2( 0.174112257, 0.004963727 ); // 380.0\nconst vec2 ab = vec2( 0.150985408, 0.022740193 ); // 455.0\nconst vec2 ac = vec2( 0.135502671, 0.039879121 ); // 465.0\nconst vec2 ad = vec2( 0.124118477, 0.057802513 ); // 470.0\nconst vec2 ae = vec2( 0.109594324, 0.086842511 ); // 475.0\nconst vec2 af = vec2( 0.091293516, 0.132702055 ); // 480.0\nconst vec2 ag = vec2( 0.068705910, 0.200723220 ); // 485.0\nconst vec2 ah = vec2( 0.045390735, 0.294975965 ); // 490.0\nconst vec2 ai = vec2( 0.023459943, 0.412703479 ); // 495.0\nconst vec2 aj = vec2( 0.008168028, 0.538423071 ); // 500.0\nconst vec2 ak = vec2( 0.003858521, 0.654823151 ); // 505.0\nconst vec2 al = vec2( 0.013870246, 0.750186428 ); // 510.0\nconst vec2 am = vec2( 0.038851802, 0.812016021 ); // 515.0\nconst vec2 an = vec2( 0.074302424, 0.833803082 ); // 520.0\nconst vec2 ao = vec2( 0.114160721, 0.826206968 ); // 525.0\nconst vec2 ap = vec2( 0.154722061, 0.805863545 ); // 530.0\nconst vec2 aq = vec2( 0.192876183, 0.781629131 ); // 535.0\nconst vec2 ar = vec2( 0.229619673, 0.754329090 ); // 540.0\nconst vec2 as = vec2( 0.265775085, 0.724323925 ); // 545.0\nconst vec2 at = vec2( 0.736842105, 0.263157895 ); // 780.0\n\n\nconst vec2 zerozero = vec2( 0.0, 0.0 ); // 00\nconst vec2 onezero  = vec2( 1.0, 0.0 ); // 10\nconst vec2 zeroone  = vec2( 0.0, 1.0 ); // 01\nconst vec2 oneone  = vec2( 1.0, 1.0 ); // 11\n\n\nfloat sign_test(vec2 p1, vec2 p2, vec2 p3)\n{\n    return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n}\n\nbool in_triangle(vec2 loc, vec2 x1, vec2 x2, vec2 x3) {\n\tfloat d1, d2, d3;\n    \n    d1 = sign_test(loc, x1, x2);\n    d2 = sign_test(loc, x2, x3);\n    d3 = sign_test(loc, x3, x1);\n    \n    return !(((d1 < 0.0) || (d2 < 0.0) || (d3 < 0.0)) && ((d1 > 0.0) || (d2 > 0.0) || (d3 > 0.0)));\n}\n\nbool is_in_triangles(vec2 xy) {\n    return in_triangle(xy, aa, ab, zerozero)\n        || in_triangle(xy, aa, zerozero, onezero)\n        || in_triangle(xy, ab, zerozero, ac)\n        || in_triangle(xy, ac, zerozero, ad)\n        || in_triangle(xy, ad, zerozero, ae)\n        || in_triangle(xy, ae, zerozero, af)\n        || in_triangle(xy, af, zerozero, ag)\n        || in_triangle(xy, ag, zerozero, ah)\n        || in_triangle(xy, ah, zerozero, ai)\n        || in_triangle(xy, ai, zerozero, aj)\n        || in_triangle(xy, aj, zerozero, ak)\n        || in_triangle(xy, ak, zerozero, zeroone)\n        || in_triangle(xy, ak, zeroone, al)\n        || in_triangle(xy, al, zeroone, am)\n        || in_triangle(xy, am, zeroone, an)\n        || in_triangle(xy, an, zeroone, ao)\n        || in_triangle(xy, ao, zeroone, ap)\n        || in_triangle(xy, ap, zeroone, aq)\n        || in_triangle(xy, aq, zeroone, ar)\n        || in_triangle(xy, ar, zeroone, as)\n        || in_triangle(xy, zeroone, at, as)\n        || in_triangle(xy, oneone, at, as)\n        ;\n}\n\n\n\nvec4 CIERGB_to_XYZ(vec4 ciergb) {\n    \n    float x = + 0.49000 * ciergb.x + 0.31000 * ciergb.y + 0.20000 * ciergb.z;\n    float y = + 0.17696 * ciergb.x + 0.81240 * ciergb.y + 0.01063 * ciergb.z;\n    float z = + 0.00000 * ciergb.x + 0.01000 * ciergb.y + 0.99000 * ciergb.z;\n    \n    vec3 xyz = vec3(x,y,z) / 0.17697;\n    return vec4(xyz, ciergb.w);\n}\n\n\nvec4 CIEXYZ_to_RGB(vec4 ciexyz) {\n    \n    float r = + 0.41847 * ciexyz.x - 0.15866 * ciexyz.y - 0.082835 * ciexyz.z;\n    float g = - 0.091169 * ciexyz.x + 0.25243 * ciexyz.y + 0.015708 * ciexyz.z;\n    float b = + 0.00092090 * ciexyz.x - 0.0025498 * ciexyz.y + 0.17860 * ciexyz.z;\n    \n    if (g < 0.0) {\n        return vec4(0.0);\n    }\n    \n    vec3 rgb = vec3(r,g,b);\n    \n    float rc = rgb.r / (rgb.r + rgb.g + rgb.b);\n    float gc = rgb.g / (rgb.r + rgb.g + rgb.b);\n    \n    ciexyz.w = CIERGBALPHA;\n    if (rc < 0.0 && ciexyz.w > 0.0) {\n    \tciexyz.w = XYZALPHA;    \n    }\n    if (rc + gc > 1.0 && ciexyz.w > 0.0) {\n    \tciexyz.w = XYZALPHA;    \n    }\n    \n    return vec4(rgb, ciexyz.w);\n}\n\n\nvec4 XYZ_to_linear_rgb(vec4 XYZ) {\n    \n    float w = 0.0;\n    if (XYZ.w > 0.0) {\n        w = LINEARSRGBALPHA;\n    }\n    \n    XYZ.x = 0.9505 * XYZ.x;\n    XYZ.z = 1.0890 * XYZ.z;\n    \n    if (XYZ.x < 0.0 || XYZ.y < 0.0 || XYZ.z < 0.0) {\n        XYZ.w = 0.0;\n    }\n\n    \n    float r = + 3.2406 * XYZ.x - 1.5372 * XYZ.y - 0.4986 * XYZ.z;\n    float g = - 0.9689 * XYZ.x + 1.8758 * XYZ.y + 0.0415 * XYZ.z;\n    float b = + 0.0557 * XYZ.x - 0.2040 * XYZ.y + 1.0570 * XYZ.z;\n    \n    if (r > 1.0 && g > 1.0 && b > 1.0 && w > 0.0) {\n        w = XYZ.w;\n    }\n\n \n    if ((r < 0.0 || g < 0.0 || b < 0.0) && w > 0.0) {\n        w = XYZ.w;\n    }\n\n    \n    \n    return vec4(r, g, b, w);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 background = vec4(pow(BACKGROUND, vec3(0.4545)), 1.0);\n    vec4 background2 = vec4(pow(BACKGROUND2, vec3(0.4545)), 1.0);\n    vec2 xy = fragCoord;\n    \n    xy.x = xy.x - 0.5 * (iResolution.x - min(iResolution.x, iResolution.y));\n    xy.y = xy.y - 0.5 * (iResolution.y - min(iResolution.x, iResolution.y));\n    xy = xy / min(iResolution.x, iResolution.y);\n    \n    if (xy.x < 1.0 && xy.y < 1.0 && xy.x >= 0.0 && xy.y >= 0.0) {\n        if (!is_in_triangles(xy) && xy.x + xy.y < 1.0) {\n            float Y = LUMINANCE;\n\n            float X = (Y / xy.y) * xy.x;\n            float Z = (Y / xy.y) * (1.0 - xy.x - xy.y);\n\n            vec4 XYZ = CIERGB_to_XYZ(CIEXYZ_to_RGB(vec4(X,Y,Z, 1.0)));\n\n            vec4 rgb = XYZ_to_linear_rgb(XYZ);\n\n\n            // Output to screen\n            fragColor = vec4(pow(rgb.xyz, vec3(0.4545)),rgb.w);\n            fragColor = fragColor * fragColor.w + background * background.w * (1.0 - fragColor.w);\n        } else {\n    \t\tfragColor = background;\n        }\n    } else {\n    \tfragColor = background2;\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}