{
    "Shader": {
        "info": {
            "date": "1629443127",
            "description": "I have always wanted to implement ink style rendering in a computer,this is my first attempts in 2D.",
            "flags": 0,
            "hasliked": 0,
            "id": "sstGzM",
            "likes": 50,
            "name": "Chinese Ink-wash Painting I",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "Delincoter",
            "viewed": 1167
        },
        "renderpass": [
            {
                "code": "#define S smoothstep\n\n//noise funtion abstract from https://www.shadertoy.com/view/4sc3z2\nvec2 hash22(vec2 p)\n{\n    p = vec2( dot(p,vec2(127.1,311.7)),\n\t\t\t  dot(p,vec2(269.5,183.3)));\n    \n    //return normalize(-1.0 + 2.0 * fract(sin(p)*43758.5453123));\n    return -1.0 + 2.0 * fract(sin(p)*43758.5453123);\n}\n\nfloat simplex_noise(vec2 p)\n{\n    const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n    \n    vec2 i = floor(p + (p.x + p.y) * K1);\n    \n    vec2 a = p - (i - (i.x + i.y) * K2);\n    vec2 o = (a.x < a.y) ? vec2(0.0, 1.0) : vec2(1.0, 0.0);\n    vec2 b = a - (o - K2);\n    vec2 c = a - (1.0 - 2.0 * K2);\n    \n    vec3 h = max(0.5 - vec3(dot(a, a), dot(b, b), dot(c, c)), 0.0);\n    vec3 n = h * h * h * h * vec3(dot(a, hash22(i)), dot(b, hash22(i + o)), dot(c, hash22(i + 1.0)));\n    \n    return dot(vec3(70.0, 70.0, 70.0), n);\n}\n\nfloat noise_sum(vec2 p)\n{\n    float f = 0.0;\n    p = p * 4.0;\n    f += 1.0000 * simplex_noise(p); p = 2.0 * p;\n    f += 0.5000 * simplex_noise(p); p = 2.0 * p;\n\tf += 0.2500 * simplex_noise(p); p = 2.0 * p;\n\tf += 0.1250 * simplex_noise(p); p = 2.0 * p;\n\tf += 0.0625 * simplex_noise(p); p = 2.0 * p;\n    \n    return f;\n}\n\n\n\nvec2 drawMountain(vec2 uv, float f, float d)\n{\n    float Side = uv.y + noise_sum(vec2(uv.x, mix(uv.y,0.,uv.y))*f)*0.1;\n    float detal = noise_sum(vec2(uv.x, uv.y)*8.)*0.005;\n    Side += detal;\n\n    float Mountain = S(0.48, 0.49, Side);\n    float fog = S(d, noise_sum(vec2(uv.x+iTime*0.06, uv.y)*0.2)*0.2, Side);\n    \n    return clamp(vec2(Side+fog, Mountain),0.,1.);\n}\n\nfloat drawSun(vec2 uv)\n{\n    vec2 u = uv;\n    u -= 0.5;\n    u.x *= iResolution.x/iResolution.y;  \n    \n    float Sun = S(0.09, 0.1, length(vec2(u.x-.5, u.y-.3)));\n    \n    float fog = S(0.7,noise_sum(vec2(uv.x+iTime*0.001, uv.y)*2.)*0.05,u.y)*1.4;\n    \n    return clamp(Sun+fog,0.,1.);\n}\n\nfloat drawBird(vec2 uv)\n{\n    uv = (uv-.5)*20.;\n    uv.x -= uv.y;\n\n    uv.y = uv.y+.45+(sin((iTime*0.5-abs(uv.x))*3.)-1.)*abs(uv.x)*0.5;\n    \n    float S1 = smoothstep(0.45,0.4,length(uv));\n    \n    uv.y += .1;\n    float S2 = smoothstep(0.5,0.45,length(uv));\n    \n    float S = S1-S2;\n    return S;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float t = iTime*0.5;\n    \n    vec3 c = vec3(1.);\n    \n    \n    float Sun = drawSun(uv);\n    c = mix(vec3(1.,0.2,0.0), c, Sun);  \n    \n    float Bird = drawBird(vec2(uv.x-.15,uv.y-.4));\n    c = mix(c, vec3(1.)*.65, Bird);\n    \n    uv.y -= .2;\n    uv.x += t*0.001;\n    vec2 Mountain1 = drawMountain(uv, .4, 1.);\n    c = mix(vec3(Mountain1.r), c, Mountain1.g);\n    \n    uv.y += .1;\n    uv.x += 1.;\n    uv.x += t*0.005;\n    Mountain1 = drawMountain(uv, .3, .8);\n    c = mix(vec3(Mountain1.r), c, Mountain1.g);\n    \n    uv.y += .1;\n    uv.x += 2.42;\n    uv.x += t*0.01;\n    Mountain1 = drawMountain(uv, .2, 0.6);\n    c = mix(vec3(Mountain1.r), c, Mountain1.g);\n    \n    uv.y += .1;\n    uv.x += 12.84;\n    uv.x += t*0.05;\n    Mountain1 = drawMountain(uv, .2, 0.4);\n    c = mix(vec3(Mountain1.r)-0.01, c, Mountain1.g);\n \n       \n    vec3 col = vec3(c);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 35,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}