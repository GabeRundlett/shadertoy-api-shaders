{
    "Shader": {
        "info": {
            "date": "1715003489",
            "description": "-tmm hue shift the arms for some rainbows.. and added some mouse rotate/zoom",
            "flags": 0,
            "hasliked": 0,
            "id": "McVXzm",
            "likes": 9,
            "name": "Swiggly Rainbow Spiral",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "timmaffett",
            "viewed": 209
        },
        "renderpass": [
            {
                "code": "// Fork of \"Swiggly Spiral\" by CavoX5. https://shadertoy.com/view/4cGSRm\n// 2024-05-06 13:49:46\n\nfloat zoom = 8.;\n\n//Constants\nfloat pi = 3.14159;\n\n//https://stackoverflow.com/questions/4200224/random-noise-functions-for-glsl\nfloat rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvec2 polar(vec2 pos){\n    pos += 0.0001;\n    return vec2(\n        length(pos),\n        atan(pos.y / pos.x) / (pi * 2.) + \n        (pos.x * pos.y < 0. ? 0.5 : 0.) +\n        (pos.y < 0. ? 0.5 : 0.)\n    );\n}\n\nvec3 hsb2rgb( in vec3 c )\n{\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return (c.z * mix( vec3(1.0), rgb, c.y));\n}\n\nvec3 palette(float t)\n{\n    return hsb2rgb( vec3( pi*t, 0.9,0.9));\n}\n\n// simple mouse rotate and zoom for shader\n#define pi 3.14159265359 \n\nmat2 r2d(float a) {\n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nvec2 mouseRotZoom(vec2 uv) {\n    // allow mouse zoom and rotate    \n    vec2 mouse = (iMouse.xy == vec2(0.)) ? vec2(1.0,0.1) : iMouse.xy/iResolution.xy;\n    uv.xy *= r2d(-(mouse.x)*pi*2.);\n    uv *= (1./(10.0*mouse.y));\n    return uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = fragCoord * 2. / iResolution.xy - 1.;\n    pos.x *= iResolution.x / iResolution.y;\n    \n    pos = mouseRotZoom(pos);\n    \n    pos *= zoom;\n    \n    vec2 cnt = round(pos);\n    vec2 pol = polar(pos);    \n    vec2 pol2 = polar(pos - cnt);\n    \n    float val = 1. - length(cnt - pos);\n    val *= sin(pol.y * pi * 16. + sin(pol.x) * 8. / pol.x + -iTime * 3.) / 2. + 0.3;\n    val = abs(0.2 / (0.5 - val));\n    val *= val;\n    \n    vec3 col = palette(atan(pol.x)+iTime/10.);\n    \n    fragColor = vec4(col * val,1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}