{
    "Shader": {
        "info": {
            "date": "1489280338",
            "description": "Particle effect out of texture.",
            "flags": 0,
            "hasliked": 0,
            "id": "4dXyRl",
            "likes": 3,
            "name": "TextureBasedParticles",
            "published": 3,
            "tags": [
                "particles"
            ],
            "usePreview": 0,
            "username": "kuvkar",
            "viewed": 850
        },
        "renderpass": [
            {
                "code": "const float STEPS = 17.;\nconst float PI=3.14159265358;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 ouv = (fragCoord.xy-iResolution.xy*.5) / iResolution.y;\n    vec4 col1=vec4(0.2, 0.3, 0.4, 0.0);\n    vec4 col2=vec4(0.1, 0.1, 0.2, 0.0);\n    fragColor=mix(col1, col2, ouv.y+0.5);\n    \n    float w = max(abs(ouv.x), abs(ouv.y)+.4);\n    w=smoothstep(1., .82, w);\n    fragColor*=w;\n    \n    ouv-=.5;\n   \touv*=.3;\n    \n    for (float j = 0.; j < 5.;j=j+1.) // layers\n    {\n\t\tvec2 uv=ouv;\n        \n        float T = iTime*.35+j/(PI/2.);\n        float P = mod(T, PI*.5);\n        float acc=P*P*0.5; // gravity\n        \n\t    vec4 col=vec4(.0);\n        \n        float offset=floor(T/PI*2.); //move texture around to hide repetition\n        float range = abs(sin(P*.9))*.8;\n        \n        uv.x+=cos(float(j)+offset)*.15;\n        uv.y+=sin(float(j)+offset)*.15;\n        \n        for (float x=0.;x<5.;x=x+1.)// trails\n        for (float i = 0.; i < STEPS; i=i+1.) // particles\n        {\n            vec2 _uv = uv;\n            float an = i * (PI*2.)/STEPS;   \n            float xn=(cos(an)-sin(an));\n            float yn=(sin(an)+cos(an));\n           \n            _uv.x += (1.5*dFdx(uv.x)*x+0.1*range)*xn;\n            _uv.y += (1.5*dFdx(uv.x)*x+0.1*range)*yn+acc*.3+x*.01*P/PI;\n            vec4 particleColor=smoothstep(0.8, .85, texture(iChannel0, _uv));\n            \n            col = max(col, particleColor);\n        }\n\t    col*=smoothstep(.4, .2, range);\n\t    fragColor+=col;\n    }\n    \n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 3,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}