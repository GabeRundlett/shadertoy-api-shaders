{
    "Shader": {
        "info": {
            "date": "1465733383",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "4dKXz3",
            "likes": 15,
            "name": " hexagonal tiling 5",
            "published": 3,
            "tags": [
                "2d",
                "pattern",
                "tiling",
                "hexagonal",
                "tiles",
                "short",
                "scales"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1166
        },
        "renderpass": [
            {
                "code": "// relying on hexagonal tiling tutos https://www.shadertoy.com/view/4dKXR3\n//                               and https://www.shadertoy.com/view/XdKXz3\n\nvoid mainImage( out vec4 O, vec2 uv )\n{ \n    vec2 R = iResolution.xy,\n         U = uv = (uv-R/2.)/R.y * 6. *  1.73/2.;  // centered coords\n    \n     U *= mat2(1,-1./1.73, 0,2./1.73);            // conversion to\n    vec3 g = vec3(U,1.-U.x-U.y), g2,              // hexagonal coordinates\n        id = floor(g);                            // cell id\n\n    g = fract(g);                                 // diamond coords\n    if (length(g)>1.) g = 1.-g;                   // barycentric coords\n    g2  = (2.*g-1.);                              // distance to borders\n\n    U = id.xy * mat2(1,.5, 0,1.73/2.);\n    \n    float l00 = length(U-uv),                     // screenspace distance to nodes\n          l10 = length(U+vec2(1,0)-uv), \n          l01 = length(U+vec2(.5,1.73/2.)-uv),\n          l11 = length(U+vec2(1.5,1.73/2.)-uv),\n          l20 = length(U+vec2(2,0)-uv), \n            l = min(min(min(l00, l10), min( l01, l11)),l20); // closest node\n  //vec2 C = U+ ( l==l00 ? vec2(0) : l==l10 ? vec2(1,0) : l==l01 ? vec2(.5,1.73/2.) : l==l11 ? vec2(1.5,1.73/2.) : vec2(2,0)  );\n\n    // making fish scales\n    float k = .75+.25*sin(iTime);\n    id += l20<k ? vec3(2,0,0) : l11<k ?  vec3(1,1,0) : l10<k ? vec3(1,0,0) : l01<k ? vec3(0,1,0) : vec3(0);\n    vec2 C = id.xy * mat2(1,.5, 0,1.73/2.);\n    \n    O = .5+.5*vec4(mod(id.xy,2.),0,1); \n    O *= .75+.25*sin(60.*length(uv-C));\n  //O -= pow(length(g),10.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}