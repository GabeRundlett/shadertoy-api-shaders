{
    "Shader": {
        "info": {
            "date": "1722179141",
            "description": "if you cross your eyes, it looks like there's a hole that you can see the pattern through",
            "flags": 0,
            "hasliked": 0,
            "id": "McjyWR",
            "likes": 0,
            "name": "cutout effect",
            "published": 3,
            "tags": [
                "stereogram"
            ],
            "usePreview": 0,
            "username": "janpitokiala",
            "viewed": 78
        },
        "renderpass": [
            {
                "code": "#define BACKGROUND vec3(.1)\n#define PARALLAX .05 //positive if crosseyed, negative if parallel\nfloat astep(float edge, float x) {\n    return clamp((x-edge)/fwidth(x)+.5,0.,1.);\n}\nfloat afloor(float x) {\n    return round(x)+astep(round(x),x)-1.;\n}\nfloat afract(float x) {\n    return x-afloor(x);\n}\nvec3 texture(vec2 uv) {\n    return vec3(afract(5.*((uv.x)*(uv.y)+(iTime*.1))));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord*2./iResolution.y+vec2(-iResolution.x/iResolution.y,-1.); //-1 to 1, no stretching\n    float aspect = iResolution.x/iResolution.y; //above 1 if screen is wider than tall\n    vec3 col;\n    if(uv.x>0.) {\n      uv /= min(aspect*.5,1.);\n      uv -= vec2(1.,0.);\n      uv = mix(uv,vec2(0.),-.2);\n      col = texture(uv+vec2(PARALLAX,0.));\n    } else {\n      uv /= min(aspect*.5,1.);\n      uv -= vec2(-1.,0.);\n      uv = mix(uv,vec2(0.),-.2);\n      col = texture(uv-vec2(PARALLAX,0.));\n    }\n    col = mix(col,BACKGROUND,astep(1.,uv.x*uv.x+uv.y*uv.y));\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}