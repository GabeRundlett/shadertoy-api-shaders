{
    "Shader": {
        "info": {
            "date": "1656262305",
            "description": "https://www.highperformancegraphics.org/2022/student-competition/\nThis shader takes 6 seconds to compile on my computer, please wait or it will crash.\nFirst place winner of 2022, thank HPG and everyone very much (*^ ‿ ⁢*)♡\n@ycz\nversion2",
            "flags": 32,
            "hasliked": 0,
            "id": "7scfR7",
            "likes": 21,
            "name": "YCZ*HPG 2022 student competition",
            "published": 3,
            "tags": [
                "pathtracing",
                "hpgconf"
            ],
            "usePreview": 1,
            "username": "yuchengzhong",
            "viewed": 1145
        },
        "renderpass": [
            {
                "code": "//YCZ:\n//Version2 - 2022.06.27(Tokyo time)\n\n//*************About Setting******************//\n//No need additional setting. Time axis is as same as the offical one\n\n//*************About Exposure******************//\n//Exposure is under Image\nconst float exposure = 2.0;\n\n//*************About Time******************//\n//If time shift is needed for measurement, plz replace all iTime variable with desired time value(included in Buffer A and Image)\n\n//*************About Measurement******************//\n//SSIM data example(under exposure of 2):\n//Frame0(t = 0.0) ssim 0.961\n//Frame1(t = 1.0) ssim 0.963\n//Frame2(t = 5.0) ssim 0.946\n\n//(idk how my render will be measured with gt.\n//And this Shader will take around 6 seconds to compile (gtx 2070, cpu i7 11xxxx)\n//In order to avoid problems such as graphics card model browser model conflict or sth.\n//if the value is significantly lower than this value means that this shader is not compiled correctly, \n//please change the browser, \n//thank you very much ^_^\n\nvec4 GetOneFace2(vec2 uv)\n{\n    return texture(iChannel0, vec3(2.0*vec2(uv.x,1.0 - uv.y)-1.0,-1.0f).xzy);\n}\nvec4 GetOneFace3(vec2 uv)\n{\n    return texture(iChannel0, vec3(2.0*vec2(uv.x,uv.y)-1.0,1.0f).xzy);\n}\nvec4 GetOneFace4(vec2 uv)\n{\n    return texture(iChannel0, vec3(2.0*vec2(1.0-uv.x,1.0-uv.y)-1.0,-1.0f));\n}\nvec4 GetOneFace5(vec2 uv)\n{\n    return texture(iChannel0, vec3(2.0*vec2(uv.x,1.0-uv.y)-1.0,1.0f));\n}\nHidden GetHidden(vec2 FragCoord)\n{\n    Hidden R;\n    vec2 LocalUV = FragCoord / 1024.0;\n    R.H_0 = GetOneFace2(LocalUV);\n    R.H_1 = GetOneFace2(LocalUV + vec2(0.5,0.0));\n    R.H_2 = GetOneFace2(LocalUV + vec2(0.0,0.5));\n    R.H_3 = GetOneFace2(LocalUV + vec2(0.5,0.5));\n    R.H_4 = GetOneFace3(LocalUV);\n    R.H_5 = GetOneFace3(LocalUV + vec2(0.5,0.0));\n    R.H_6 = GetOneFace3(LocalUV + vec2(0.0,0.5));\n    R.H_7 = GetOneFace3(LocalUV + vec2(0.5,0.5));\n    return R;\n}\n\n#define FULL_SCENE\n#define NUM_SAMPLES 1\n\n\n#define INFINITY 9999999.0 // sorry, webgl doesn't allow to use proper float infinity :(\n#define PI 3.141592653589\n\n#ifdef FULL_SCENE\n#define NUM_BOUNCES 8\n#else\n#define NUM_BOUNCES 2\n#endif\n\n#define MAT_LEFT        0\n#define MAT_RIGHT       1\n#define MAT_CEILING     2\n#define MAT_FLOOR       3\n#define MAT_BACK        4\n#define MAT_H           5\n#define MAT_P           6\n#define MAT_G           7\n#define MAT_2           8\n#define MAT_LIGHT0      9\n#define MAT_LIGHT1      10\n#define MAT_LIGHT2      11\n#define MAT_LIGHT3      12\n#define MAT_LIGHT4      13\n#define MAT_LIGHT5      14\n#define MAT_LIGHT6      15\n#define MAT_LIGHT7      16\n#define MAT_LIGHT8      17\n\n#define USE_Bake\n\nstruct AABB\n{\n\tvec3 min_, max_;\n};\n\nstruct MaterialSample\n{\n\tvec3 color;\n\tfloat roughness;\n\tbool is_light;\n};\n\nint seed;\nint flat_idx;\n\nconst float cube_light_size = 0.08;\nconst vec4 cube_light_pos[4] = vec4[4](\n\t\tvec4(  -0.9, -1.0 + cube_light_size * 0.495,  0.6, 0.4),\n\t\tvec4(  0.3, -1.0 + cube_light_size * 0.495,  0.2, 0.8),\n\t\tvec4(  1.0 - 2.0 * cube_light_size, -1.0 + 2.0 * cube_light_size, -1.0 + 5.0 * cube_light_size, 0.0),\n\t\tvec4(  -1.0 + 2.0 * cube_light_size, -1.0 + 2.0 * cube_light_size, -0.6, 0.0)\n\t\t);\n\nconst vec3 light_color[4] = vec3[4](\n\t\tvec3(5),\n\t\tvec3(5),\n\t\tvec3(80.0, 50, 30),\n\t\tvec3(30, 30, 80.0)\n\t\t);\n\n\n// H\nconst vec4 coordinates_H[3] = vec4[3](\nvec4(0.000, 0.000, 0.200, 0.750),\nvec4(0.427, 0.000, 0.627, 0.750),\nvec4(0.116, 0.310, 0.516, 0.450));\n// P\nconst vec4 coordinates_P[4] = vec4[4](\nvec4(0.000, 0.000, 0.200, 0.750),\nvec4(0.400, 0.360, 0.540, 0.675),\nvec4(0.044, 0.288, 0.471, 0.428),\nvec4(0.000, 0.610, 0.471, 0.750));\n// G\nconst vec4 coordinates_G[6] = vec4[6](\nvec4(0.000, 0.060, 0.200, 0.670),\nvec4(0.425, 0.060, 0.625, 0.265),\nvec4(0.425, 0.520, 0.625, 0.670),\nvec4(0.100, 0.000, 0.625, 0.140),\nvec4(0.315, 0.265, 0.625, 0.405),\nvec4(0.077, 0.610, 0.550, 0.750));\n// 2\nconst vec4 coordinates_2[5] = vec4[5](\nvec4(0.000, 0.000, 0.140, 0.365) * 0.5,\nvec4(0.474, 0.365, 0.614, 0.680) * 0.5,\nvec4(0.044, 0.000, 0.614, 0.140) * 0.5,\nvec4(0.044, 0.288, 0.544, 0.428) * 0.5,\nvec4(0.044, 0.610, 0.544, 0.750) * 0.5);\n\nmat3\nconstruct_ONB_frisvad(vec3 normal)\n{\n\tmat3 ret;\n\tret[1] = normal;\n\tif(normal.z < -0.999805696) {\n\t\tret[0] = vec3(0.0, -1.0, 0.0);\n\t\tret[2] = vec3(-1.0, 0.0, 0.0);\n\t}\n\telse {\n\t\tfloat a = 1.0 / (1.0 + normal.z);\n\t\tfloat b = -normal.x * normal.y * a;\n\t\tret[0] = vec3(1.0 - normal.x * normal.x * a, b, -normal.x);\n\t\tret[2] = vec3(b, 1.0 - normal.y * normal.y * a, -normal.y);\n\t}\n\treturn ret;\n}\n\nvoid\nencrypt_tea(inout uvec2 arg)\n{\n\tuvec4 key = uvec4(0xa341316c, 0xc8013ea4, 0xad90777d, 0x7e95761e);\n\tuint v0 = arg[0], v1 = arg[1];\n\tuint sum = 0u;\n\tuint delta = 0x9e3779b9u;\n\n\tfor(int i = 0; i < 32; i++) {\n\t\tsum += delta;\n\t\tv0 += ((v1 << 4) + key[0]) ^ (v1 + sum) ^ ((v1 >> 5) + key[1]);\n\t\tv1 += ((v0 << 4) + key[2]) ^ (v0 + sum) ^ ((v0 >> 5) + key[3]);\n\t}\n\targ[0] = v0;\n\targ[1] = v1;\n}\n\nvec2\nget_random()\n{\n  \tuvec2 arg = uvec2(flat_idx, seed++);\n  \tencrypt_tea(arg);\n  \treturn fract(vec2(arg) / vec2(0xffffffffu));\n}\n\nmat4\nlook_at(vec3 eye, vec3 center, vec3 up)\n{\n\tmat4 ret;\n\n\tvec3 f = normalize(center - eye);\n\tvec3 s = normalize(cross(f, normalize(up)));\n\tvec3 u = cross(s, f);\n\n\tret[0][0] = s[0];\n\tret[1][0] = s[1];\n\tret[2][0] = s[2];\n\n\tret[0][1] = u[0];\n\tret[1][1] = u[1];\n\tret[2][1] = u[2];\n\n\tret[0][2] = -f[0];\n\tret[1][2] = -f[1];\n\tret[2][2] = -f[2];\n\n\tret[0][3] = ret[1][3] = ret[2][3] = 0.0;\n\n\tret[3][0] = -dot(s, eye);\n\tret[3][1] = -dot(u, eye);\n\tret[3][2] =  dot(f, eye);\n\n\tret[3][3] = 1.0;\n\treturn ret;\n}\n\nbool\nintersect_aabb(in Ray ray, in AABB aabb, inout float t_min, inout float t_max)\n{\n\tvec3 div = 1.0 / ray.dir;\n\tvec3 t_1 = (aabb.min_ - ray.origin) * div;\n\tvec3 t_2 = (aabb.max_ - ray.origin) * div;\n\n\tvec3 t_min2 = min(t_1, t_2);\n\tvec3 t_max2 = max(t_1, t_2);\n\n\tt_min = max(max(t_min2.x, t_min2.y), max(t_min2.z, t_min));\n\tt_max = min(min(t_max2.x, t_max2.y), min(t_max2.z, t_max));\n\n\treturn t_min < t_max;\n}\n\nvec3\nray_at(in Ray ray, float t)\n{\n\treturn ray.origin + t * ray.dir;\n}\n\nfloat\nintersect_plane(\n\tRay ray,\n    vec3 center,\n    vec3 normal)\n{\n    float denom = dot(ray.dir, normal);\n    float t = dot(center - ray.origin, normal) / denom;\n\treturn t > 0.0 ? t : INFINITY;\n}\n\nfloat intersect_box(Ray ray, out vec3 normal, vec3 position_min, vec3 position_max)\n{\n\tfloat t_min = 0.0;\n\tfloat t_max = 999999999.0;\n\tif(intersect_aabb(ray, AABB(position_min, position_max), t_min, t_max)) {\n\t\tvec3 p = ray_at(ray, t_min);\n\n\t\tvec3 center = (position_min + position_max) * 0.5;\n\n\t\tnormal = p - center;\n\n\t\tvec3 an = abs(normal) / (position_max - position_min);\n\n\t\tif(an.x > an.y && an.x > an.z) {\n\t\t\tnormal = vec3(normal.x > 0.0 ? 1.0 : -1.0, 0, 0);\n\t\t}\n\t\tif(an.y > an.x && an.y > an.z) {\n\t\t\tnormal = vec3(0, normal.y > 0.0 ? 1.0 : -1.0, 0);\n\t\t}\n\t\tif(an.z > an.x && an.z > an.y) {\n\t\t\tnormal = vec3(0, 0, normal.z > 0.0 ? 1.0 : -1.0);\n\t\t}\n\n\t\treturn t_min;\n\t}\n\n\treturn INFINITY;\n}\nfloat intersect_simple(Ray ray, inout vec3 p, inout vec3 normal, inout vec3 color)\n{\n\tfloat t_min = INFINITY;\n\n\tint material = -1;\n    vec2 CurrentHitHiddenUV = vec2(-1.0,0.0);\n\tfor(int i = 0; i < coordinates_H.length(); i++) \n    {\n\t\tvec3 normal_tmp;\n\n\t\tRay ray_tmp = ray;\n\t\tmat4 r = rotate_y(-0.35);\n\t\tray_tmp.origin -= vec3(-0.9, -1, 0.0);\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\n\t\tvec3 box_origin = vec3(coordinates_H[i].xy, 0.0);\n\t\tvec3 box_size = vec3(coordinates_H[i].zw - coordinates_H[i].xy, 0.15);\n        //intersect_box(Ray ray, out vec3 normal, vec3 position_min, vec3 position_max)\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp, box_origin, box_origin + box_size);\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_H;\n            CurrentHitHiddenUV = PositionToLightmap_H(ray_tmp, t, normal_tmp, i);\n\t\t}\n\t}\n\n\tfor(int i = 0; i < coordinates_P.length(); i++) {\n\t\tvec3 normal_tmp;\n\n\t\tRay ray_tmp = ray;\n\t\tmat4 r = rotate_y(0.75);\n\t\tray_tmp.origin -= vec3(-0.28, -1, 0.2);\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\n\t\tvec3 box_origin = vec3(coordinates_P[i].xy, 0.0);\n\t\tvec3 box_size = vec3(coordinates_P[i].zw - coordinates_P[i].xy, 0.15);\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp, box_origin, box_origin + box_size);\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_P;\n            CurrentHitHiddenUV = PositionToLightmap_P(ray_tmp, t, normal_tmp, i) + vec2(256.0,0.0);\n\t\t}\n\t}\n\n\tfor(int i = 0; i < coordinates_G.length(); i++) {\n\t\tvec3 normal_tmp;\n\n\t\tRay ray_tmp = ray;\n\t\tmat4 r = rotate_y(-0.4);\n\t\tray_tmp.origin -= vec3(0.35, -1, -0.20);\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\n\t\tvec3 box_origin = vec3(coordinates_G[i].xy, 0.0);\n\t\tvec3 box_size = vec3(coordinates_G[i].zw - coordinates_G[i].xy, 0.15);\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp, box_origin, box_origin + box_size);\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_G;\n            CurrentHitHiddenUV = PositionToLightmap_G(ray_tmp, t, normal_tmp, i) + vec2(0.0,128.0);\n\t\t}\n\t}\n\n#ifdef FULL_SCENE\n\tfor(int i = 0; i < coordinates_2.length(); i++) {\n\t\tvec3 normal_tmp;\n\n\t\tRay ray_tmp = ray;\n\t\tmat4 r = rotate_y(0.0);\n\t\tray_tmp.origin -= vec3(0.1, -0.2, -1.0);\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\n\t\tvec3 box_origin = vec3(coordinates_2[i].xy, 0.0);\n\t\tvec3 box_size = vec3(coordinates_2[i].zw - coordinates_2[i].xy, 0.125);\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp, box_origin, box_origin + box_size);\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_2;\n            CurrentHitHiddenUV = PositionToLightmap_21(ray_tmp, t, normal_tmp, i) + vec2(256.0,128.0);\n\t\t}\n\t}\n\n\tfor(int i = 0; i < coordinates_2.length(); i++) {\n\t\tvec3 normal_tmp;\n\n\t\tRay ray_tmp = ray;\n\t\tmat4 r = rotate_y(0.0);\n\t\tray_tmp.origin -= vec3(0.45, -0.2, -1.0);\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\n\t\tvec3 box_origin = vec3(coordinates_2[i].xy, 0.0);\n\t\tvec3 box_size = vec3(coordinates_2[i].zw - coordinates_2[i].xy, 0.125);\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp, box_origin, box_origin + box_size);\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_2;\n            CurrentHitHiddenUV = PositionToLightmap_22(ray_tmp, t, normal_tmp, i) + vec2(384.0,128.0);\n\t\t}\n\t}\n#endif\n\n\n\t// cube light sources\n\tfor(int i = 0; i < cube_light_pos.length(); i++) {\n\t\tvec3 normal_tmp;\n\t\tRay ray_tmp = ray;\n\t\t//mat4 r = rotate_y(scene_time);\n\t\tmat4 r = rotate_y(-cube_light_pos[i].w);\n\t\tray_tmp.origin -= cube_light_pos[i].xyz;\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp,\n\t\t\t\tvec3(-cube_light_size * 0.5),\n\t\t\t\tvec3(cube_light_size * 0.5));\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_LIGHT0 + i;\n\t\t\tnormal = vec3(transpose(r) * vec4(normal_tmp, 0.0));\n            CurrentHitHiddenUV.x = 1.0;\n\t\t}\n\t}\n\t// left\n\t{\n\t\tvec3 n = vec3(1, 0, 0);\n\t\tfloat t = intersect_plane(ray, vec3(-1, 0, 0), n);\n\t\tif(t < t_min) {\n\t\t\tvec3 p_tmp = ray_at(ray, t);\n\t\t\tif(all(lessThanEqual(p_tmp.yz, vec2(1))) && all(greaterThanEqual(p_tmp.yz,\n\t\t\t\t\t\t\tvec2(-1))))\n\t\t\t{\n\t\t\t\tnormal = n;\n\t\t\t\tp = p_tmp;\n\n\t\t\t\tt_min = t;\n\n\t\t\t\tmaterial = MAT_LEFT;\n                CurrentHitHiddenUV = PositionToLightmap_L(p) + vec2(0.0,256.0);\n\t\t\t}\n\t\t}\n\t}\n\t// right\n\t{\n\t\tvec3 n = vec3(-1, 0, 0);\n\t\tfloat t = intersect_plane(ray, vec3(1, 0, 0), n);\n\t\tif(t < t_min) {\n\t\t\tvec3 p_tmp = ray_at(ray, t);\n\t\t\tif(all(lessThanEqual(p_tmp.yz, vec2(1))) && all(greaterThanEqual(p_tmp.yz,\n\t\t\t\t\t\t\tvec2(-1))))\n\t\t\t{\n\t\t\t\tnormal = n;\n\t\t\t\tp = p_tmp;\n\n\t\t\t\tt_min = t;\n\n\t\t\t\tmaterial = MAT_RIGHT;\n                CurrentHitHiddenUV = PositionToLightmap_R(p) + vec2(64.0,256.0);\n\t\t\t}\n\t\t}\n\t}\n\t// floor\n\t{\n\t\tvec3 n = vec3(0, 1, 0);\n\t\tfloat t = intersect_plane(ray, vec3(0, -1, 0), n);\n\t\tif(t < t_min) {\n\t\t\tvec3 p_tmp = ray_at(ray, t);\n\t\t\tif(all(lessThan(p_tmp.xz, vec2(1))) && all(greaterThan(p_tmp.xz,\n\t\t\t\t\t\t\tvec2(-1))))\n\t\t\t{\n\t\t\t\tnormal = n;\n\t\t\t\tp = p_tmp;\n\n\t\t\t\tt_min = t;\n\t\t\t\tmaterial = MAT_FLOOR;\n                CurrentHitHiddenUV = PositionToLightmap_D(p) + vec2(0.0,384.0);\n\t\t\t}\n\t\t}\n\t}\n\t// ceiling\n\t{\n\t\tvec3 n = vec3(0, -1, 0);\n\t\tfloat t = intersect_plane(ray, vec3(0, 1, 0), n);\n\t\tif(t < t_min) {\n\t\t\tvec3 p_tmp = ray_at(ray, t);\n\t\t\tif(all(lessThan(p_tmp.xz, vec2(1))) && all(greaterThan(p_tmp.xz,\n\t\t\t\t\t\t\tvec2(-1))))\n\t\t\t{\n\t\t\t\tnormal = n;\n\t\t\t\tp = p_tmp;\n\t\t\t\tmaterial = MAT_CEILING;\n\n\t\t\t\tt_min = t;\n                CurrentHitHiddenUV = PositionToLightmap_U(p) + vec2(128.0,256.0);\n\t\t\t}\n\t\t}\n\t}\n\t// back wall\n\t{\n\t\tvec3 n = vec3(0, 0, 1);\n\t\tfloat t = intersect_plane(ray, vec3(0, 0, -1), n);\n\t\tif(t < t_min) {\n\t\t\tvec3 p_tmp = ray_at(ray, t);\n\t\t\tif(all(lessThan(p_tmp.xy, vec2(1))) && all(greaterThan(p_tmp.xy,\n\t\t\t\t\t\t\tvec2(-1))))\n\t\t\t{\n\t\t\t\tnormal = n;\n\t\t\t\tp = p_tmp;\n\t\t\t\tmaterial = MAT_BACK;\n\n\t\t\t\tt_min = t;\n                CurrentHitHiddenUV = PositionToLightmap_B(p) + vec2(256.0,256.0);\n\t\t\t}\n\t\t}\n\t}\n\tnormal = normalize(normal);\n    if(CurrentHitHiddenUV.x > 0.0)\n    {\n        vec3 albedo;\n        switch(material) \n        {\n\tcase MAT_LEFT   : albedo = vec3(0.9, 0.1, 0.1); break;\n\tcase MAT_RIGHT  : albedo = vec3(0.1, 0.9, 0.1); break;\n\tcase MAT_CEILING: albedo = vec3(0.7, 0.7, 0.7); break;\n\tcase MAT_FLOOR  : albedo = vec3(0.7, 0.7, 0.7); break;\n\tcase MAT_BACK   : albedo = vec3(0.7, 0.7, 0.7); break;\n\tcase MAT_H      : albedo = vec3(1.0, 0.0, 0.0); break;\n\tcase MAT_P      : albedo = vec3(0.0, 0.7, 0.7); break;\n\tcase MAT_G      : albedo = vec3(0.1, 0.1, 0.7); break;\n\tcase MAT_2      : albedo = vec3(0.8, 0.8, 0.8); break;\n\tdefault         : albedo = light_color[material - MAT_LIGHT0];color = albedo;return t_min; break;\n\t    }\n        Hidden hidden = GetHidden(CurrentHitHiddenUV);\n        if(material == MAT_LEFT || material == MAT_RIGHT || \n        material == MAT_CEILING || material == MAT_BACK || material == MAT_2)\n        {\n            color = Lightmap_Render_LRBU22(ray.dir, hidden);\n            color = color + vec3(1.0,1.0,1.0);\n            color = exp(color * 3.3994);\n            color = color - vec3(1.0,1.0,1.0);\n            color = color / 10.0;\n            color = color * (albedo + vec3(0.5,0.5,0.5));\n        }\n        else if(material == MAT_FLOOR)\n        {\n            color = Lightmap_Render_Floor(ray.dir, hidden);\n            color = color + vec3(1.0,1.0,1.0);\n            color = exp(color * 3.71775);\n            color = color - vec3(1.0,1.0,1.0);\n            color = color / 10.0;\n            color = color * (albedo + vec3(0.5,0.5,0.5));\n        }\n        else\n        {\n            color = Lightmap_Render_HPG(ray.dir, hidden);\n            color = color + vec3(1.0,1.0,1.0);\n            color = exp(color * 4.636095);\n            color = color - vec3(1.0,1.0,1.0);\n            color = color / 10.0;\n            color = color * (albedo + vec3(0.5,0.5,0.5));\n        }\n    }\n\treturn t_min;\n}\n\nfloat intersect_msaa(Ray ray, inout vec3 p, inout vec3 normal, inout vec3 color, inout int faceid, inout vec3 neuralmark, inout vec3 albedo)\n{\n\tfloat t_min = INFINITY;\n\n\tint material = -1;\n    int faceindex = -1;\n    vec2 CurrentHitHiddenUV = vec2(-1.0,0.0);\n\tfor(int i = 0; i < coordinates_H.length(); i++) \n    {\n\t\tvec3 normal_tmp;\n\n\t\tRay ray_tmp = ray;\n\t\tmat4 r = rotate_y(-0.35);\n\t\tray_tmp.origin -= vec3(-0.9, -1, 0.0);\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\n\t\tvec3 box_origin = vec3(coordinates_H[i].xy, 0.0);\n\t\tvec3 box_size = vec3(coordinates_H[i].zw - coordinates_H[i].xy, 0.15);\n        //intersect_box(Ray ray, out vec3 normal, vec3 position_min, vec3 position_max)\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp, box_origin, box_origin + box_size);\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_H;\n            CurrentHitHiddenUV = PositionToLightmap_H(ray_tmp, t, normal_tmp, i);\n            faceindex = 0 + i * 6 + NormalToIndex(normal_tmp);\n\t\t}\n\t}\n\n\tfor(int i = 0; i < coordinates_P.length(); i++) {\n\t\tvec3 normal_tmp;\n\n\t\tRay ray_tmp = ray;\n\t\tmat4 r = rotate_y(0.75);\n\t\tray_tmp.origin -= vec3(-0.28, -1, 0.2);\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\n\t\tvec3 box_origin = vec3(coordinates_P[i].xy, 0.0);\n\t\tvec3 box_size = vec3(coordinates_P[i].zw - coordinates_P[i].xy, 0.15);\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp, box_origin, box_origin + box_size);\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_P;\n            CurrentHitHiddenUV = PositionToLightmap_P(ray_tmp, t, normal_tmp, i) + vec2(256.0,0.0);\n            faceindex = 3 * 6 + i * 6 + NormalToIndex(normal_tmp);\n\t\t}\n\t}\n\n\tfor(int i = 0; i < coordinates_G.length(); i++) {\n\t\tvec3 normal_tmp;\n\n\t\tRay ray_tmp = ray;\n\t\tmat4 r = rotate_y(-0.4);\n\t\tray_tmp.origin -= vec3(0.35, -1, -0.20);\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\n\t\tvec3 box_origin = vec3(coordinates_G[i].xy, 0.0);\n\t\tvec3 box_size = vec3(coordinates_G[i].zw - coordinates_G[i].xy, 0.15);\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp, box_origin, box_origin + box_size);\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_G;\n            CurrentHitHiddenUV = PositionToLightmap_G(ray_tmp, t, normal_tmp, i) + vec2(0.0,128.0);\n            faceindex = 7 * 6 + i * 6 + NormalToIndex(normal_tmp);\n\t\t}\n\t}\n\n#ifdef FULL_SCENE\n\tfor(int i = 0; i < coordinates_2.length(); i++) {\n\t\tvec3 normal_tmp;\n\n\t\tRay ray_tmp = ray;\n\t\tmat4 r = rotate_y(0.0);\n\t\tray_tmp.origin -= vec3(0.1, -0.2, -1.0);\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\n\t\tvec3 box_origin = vec3(coordinates_2[i].xy, 0.0);\n\t\tvec3 box_size = vec3(coordinates_2[i].zw - coordinates_2[i].xy, 0.125);\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp, box_origin, box_origin + box_size);\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_2;\n            CurrentHitHiddenUV = PositionToLightmap_21(ray_tmp, t, normal_tmp, i) + vec2(256.0,128.0);\n            faceindex = 13 * 6 + i * 6 + NormalToIndex(normal_tmp);\n\t\t}\n\t}\n\n\tfor(int i = 0; i < coordinates_2.length(); i++) {\n\t\tvec3 normal_tmp;\n\n\t\tRay ray_tmp = ray;\n\t\tmat4 r = rotate_y(0.0);\n\t\tray_tmp.origin -= vec3(0.45, -0.2, -1.0);\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\n\t\tvec3 box_origin = vec3(coordinates_2[i].xy, 0.0);\n\t\tvec3 box_size = vec3(coordinates_2[i].zw - coordinates_2[i].xy, 0.125);\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp, box_origin, box_origin + box_size);\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_2;\n            CurrentHitHiddenUV = PositionToLightmap_22(ray_tmp, t, normal_tmp, i) + vec2(384.0,128.0);\n            faceindex = 18 * 6 + i * 6 + NormalToIndex(normal_tmp);\n\t\t}\n\t}\n#endif\n\n\n\t// cube light sources\n\tfor(int i = 0; i < cube_light_pos.length(); i++) {\n\t\tvec3 normal_tmp;\n\t\tRay ray_tmp = ray;\n\t\t//mat4 r = rotate_y(scene_time);\n\t\tmat4 r = rotate_y(-cube_light_pos[i].w);\n\t\tray_tmp.origin -= cube_light_pos[i].xyz;\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp,\n\t\t\t\tvec3(-cube_light_size * 0.5),\n\t\t\t\tvec3(cube_light_size * 0.5));\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_LIGHT0 + i;\n\t\t\tnormal = vec3(transpose(r) * vec4(normal_tmp, 0.0));\n            faceindex = 23 * 6 + i;\n            CurrentHitHiddenUV.x = 1.0;\n\t\t}\n\t}\n\t// left\n\t{\n\t\tvec3 n = vec3(1, 0, 0);\n\t\tfloat t = intersect_plane(ray, vec3(-1, 0, 0), n);\n\t\tif(t < t_min) {\n\t\t\tvec3 p_tmp = ray_at(ray, t);\n\t\t\tif(all(lessThanEqual(p_tmp.yz, vec2(1))) && all(greaterThanEqual(p_tmp.yz,\n\t\t\t\t\t\t\tvec2(-1))))\n\t\t\t{\n\t\t\t\tnormal = n;\n\t\t\t\tp = p_tmp;\n\n\t\t\t\tt_min = t;\n                faceindex = 23 * 6 + 4 + 0;\n\n\t\t\t\tmaterial = MAT_LEFT;\n                CurrentHitHiddenUV = PositionToLightmap_L(p) + vec2(0.0,256.0);\n\t\t\t}\n\t\t}\n\t}\n\t// right\n\t{\n\t\tvec3 n = vec3(-1, 0, 0);\n\t\tfloat t = intersect_plane(ray, vec3(1, 0, 0), n);\n\t\tif(t < t_min) {\n\t\t\tvec3 p_tmp = ray_at(ray, t);\n\t\t\tif(all(lessThanEqual(p_tmp.yz, vec2(1))) && all(greaterThanEqual(p_tmp.yz,\n\t\t\t\t\t\t\tvec2(-1))))\n\t\t\t{\n\t\t\t\tnormal = n;\n\t\t\t\tp = p_tmp;\n\n\t\t\t\tt_min = t;\n                faceindex = 23 * 6 + 4 + 1;\n\n\t\t\t\tmaterial = MAT_RIGHT;\n                CurrentHitHiddenUV = PositionToLightmap_R(p) + vec2(64.0,256.0);\n\t\t\t}\n\t\t}\n\t}\n\t// floor\n\t{\n\t\tvec3 n = vec3(0, 1, 0);\n\t\tfloat t = intersect_plane(ray, vec3(0, -1, 0), n);\n\t\tif(t < t_min) {\n\t\t\tvec3 p_tmp = ray_at(ray, t);\n\t\t\tif(all(lessThan(p_tmp.xz, vec2(1))) && all(greaterThan(p_tmp.xz,\n\t\t\t\t\t\t\tvec2(-1))))\n\t\t\t{\n\t\t\t\tnormal = n;\n\t\t\t\tp = p_tmp;\n\n\t\t\t\tt_min = t;\n                faceindex = 23 * 6 + 4 + 2;\n\t\t\t\tmaterial = MAT_FLOOR;\n                CurrentHitHiddenUV = PositionToLightmap_D(p) + vec2(0.0,384.0);\n\t\t\t}\n\t\t}\n\t}\n\t// ceiling\n\t{\n\t\tvec3 n = vec3(0, -1, 0);\n\t\tfloat t = intersect_plane(ray, vec3(0, 1, 0), n);\n\t\tif(t < t_min) {\n\t\t\tvec3 p_tmp = ray_at(ray, t);\n\t\t\tif(all(lessThan(p_tmp.xz, vec2(1))) && all(greaterThan(p_tmp.xz,\n\t\t\t\t\t\t\tvec2(-1))))\n\t\t\t{\n\t\t\t\tnormal = n;\n\t\t\t\tp = p_tmp;\n\t\t\t\tmaterial = MAT_CEILING;\n\n\t\t\t\tt_min = t;\n                faceindex = 23 * 6 + 4 + 3;\n                CurrentHitHiddenUV = PositionToLightmap_U(p) + vec2(128.0,256.0);\n\t\t\t}\n\t\t}\n\t}\n\t// back wall\n\t{\n\t\tvec3 n = vec3(0, 0, 1);\n\t\tfloat t = intersect_plane(ray, vec3(0, 0, -1), n);\n\t\tif(t < t_min) {\n\t\t\tvec3 p_tmp = ray_at(ray, t);\n\t\t\tif(all(lessThan(p_tmp.xy, vec2(1))) && all(greaterThan(p_tmp.xy,\n\t\t\t\t\t\t\tvec2(-1))))\n\t\t\t{\n\t\t\t\tnormal = n;\n\t\t\t\tp = p_tmp;\n\t\t\t\tmaterial = MAT_BACK;\n\n\t\t\t\tt_min = t;\n                faceindex = 23 * 6 + 4 + 4;\n                CurrentHitHiddenUV = PositionToLightmap_B(p) + vec2(256.0,256.0);\n\t\t\t}\n\t\t}\n\t}\n\t//normal = normalize(normal);\n    albedo = vec3(0.0);\n    if(CurrentHitHiddenUV.x > 0.0)\n    {\n        switch(material) \n        {\n\tcase MAT_LEFT   : albedo = vec3(0.9, 0.1, 0.1); break;\n\tcase MAT_RIGHT  : albedo = vec3(0.1, 0.9, 0.1); break;\n\tcase MAT_CEILING: albedo = vec3(0.7, 0.7, 0.7); break;\n\tcase MAT_FLOOR  : albedo = vec3(0.7, 0.7, 0.7); break;\n\tcase MAT_BACK   : albedo = vec3(0.7, 0.7, 0.7); break;\n\tcase MAT_H      : albedo = vec3(1.0, 0.0, 0.0); break;\n\tcase MAT_P      : albedo = vec3(0.0, 0.7, 0.7); break;\n\tcase MAT_G      : albedo = vec3(0.1, 0.1, 0.7); break;\n\tcase MAT_2      : albedo = vec3(0.8, 0.8, 0.8); break;\n\tdefault         : albedo = light_color[material - MAT_LIGHT0];color = albedo;return t_min; break;\n\t    }\n        if(material == MAT_LEFT || material == MAT_RIGHT || \n        material == MAT_CEILING || material == MAT_BACK || material == MAT_2)\n        {\n            neuralmark = vec3(CurrentHitHiddenUV,0.0);\n        }\n        else if(material == MAT_FLOOR)\n        {\n            neuralmark = vec3(CurrentHitHiddenUV,1.0);\n        }\n        else if(material == MAT_H||material == MAT_P || material == MAT_G)\n        {\n            neuralmark = vec3(CurrentHitHiddenUV,2.0);\n        }\n        else\n        {\n            neuralmark = vec3(0.0,0.0,-1.0);\n        }\n    }\n    else\n    {\n        neuralmark = vec3(0.0,0.0,-1.0);\n    }\n    faceid = faceindex;\n\treturn t_min;\n}\n\nconst float aaclamp = 1.0;\nvec3 clampcolor(vec3 c)\n{\n    return c;//clamp(c,0.0,aaclamp);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tseed = iFrame * NUM_SAMPLES;\n\tflat_idx = int(dot(gl_FragCoord.xy, vec2(1, 4096)));\n    vec2 texelsize = 1.0/vec2(iResolution);\n\tvec2 p = fragCoord.xy / vec2(iResolution) - vec2(0.5);\n\tfloat a = float(iResolution.x) / float(iResolution.y);\n\tif(a < 1.0)\n\t\tp.y /= a;\n\telse\n\t\tp.x *= a;\n\n\t//vec3 cam_center = vec3(0, 0, 3.0);\n\tvec3 cam_center = vec3(sin(iTime) * 0.25, sin(iTime * 0.7345) * 0.4 + 0.2, 6.0);\n\tvec3 cam_target = vec3(0, -0.1, 0);\n\n\tmat4 cam = transpose(look_at(cam_center, cam_target, vec3(0, 1, 0)));\n\n\tvec3 s = vec3(0);\n    \n    if(iFrame == 0)\n    {\n    \tRay ray;\n\t\tray.origin = cam_center;\n\t\tvec2 r = get_random();\n\t\tvec3 ray_dir = normalize(vec3(p + r.x * dFdx(p) + r.y * dFdy(p), -2.5));\n\t\tray.dir = vec3(cam * vec4(ray_dir, 0.0));\n        vec3 c;\n        vec3 normal;\n        vec3 position;\n        intersect_simple(ray, position, normal, c);\n\t\ts = c;\n    }\n    else\n    {\n        vec4 centerresult = texelFetch(iChannel1,ivec2(fragCoord),0);\n        float eigen = centerresult.w;\n        //float depth = fract(eigen)*10.0;\n        int faceindex = int(floor(eigen));\n        vec2 msaa_pattern[4] = vec2[4](\n        vec2(-0.3162277660168379,0.9486832980505137),vec2(0.9486832980505137,0.3162277660168379),\n        vec2(0.3162277660168379,-0.9486832980505137),vec2(-0.9486832980505137,-0.3162277660168379));\n        int cnt = 0;\n        int sourcecnt = 0;\n        int addcnt = 0;\n        for(int i=0;i<4;i++)\n        {\n            vec2 r = msaa_pattern[i]*0.4995;\n            Ray ray;\n            ray.origin = cam_center;\n            vec3 ray_dir = normalize(vec3(p + r*texelsize, -2.5));\n            ray.dir = vec3(cam * vec4(ray_dir, 0.0));\n            vec3 c;\n            vec3 normal;\n            vec3 position;\n            int cfaceid;\n            vec3 neuralinfo;\n            vec3 albedo;\n            float cdepth = intersect_msaa(ray, position, normal, c, cfaceid, neuralinfo, albedo);\n            if(cfaceid != faceindex - 1)// && cdepth <= depth)\n            {\n                vec3 color;//me write this like sorry QAQ\n                {\n                    //s += vec3(1.0,0.0,0.0);\n                    //break;\n                    if(neuralinfo.z < -0.5)\n                    {\n                        color = albedo;\n                        s += clampcolor(color);\n                        cnt++;\n                        addcnt++;\n                    }\n                    else if(neuralinfo.z < 0.5)\n                    {\n                        Hidden hidden = GetHidden(neuralinfo.xy);\n                        color = Lightmap_Render_LRBU22(ray.dir, hidden);\n                        color = color + vec3(1.0,1.0,1.0);\n                        color = exp(color * 3.3994);\n                        color = color - vec3(1.0,1.0,1.0);\n                        color = color / 10.0;\n                        color = color * (albedo + vec3(0.5,0.5,0.5));\n                        s += clampcolor(color);\n                        cnt++;\n                        addcnt++;\n                        break;\n                    }\n                    else if(neuralinfo.z < 1.5)\n                    {\n                        Hidden hidden = GetHidden(neuralinfo.xy);\n                        color = Lightmap_Render_Floor(ray.dir, hidden);\n                        color = color + vec3(1.0,1.0,1.0);\n                        color = exp(color * 3.71775);\n                        color = color - vec3(1.0,1.0,1.0);\n                        color = color / 10.0;\n                        color = color * (albedo + vec3(0.5,0.5,0.5));\n                        s += clampcolor(color);\n                        cnt++;\n                        addcnt++;\n                        break;\n                    }\n                    else\n                    {\n                        Hidden hidden = GetHidden(neuralinfo.xy);\n                        color = Lightmap_Render_HPG(ray.dir, hidden);\n                        color = color + vec3(1.0,1.0,1.0);\n                        color = exp(color * 4.636095);\n                        color = color - vec3(1.0,1.0,1.0);\n                        color = color / 10.0;\n                        color = color * (albedo + vec3(0.5,0.5,0.5));\n                        s += clampcolor(color);\n                        cnt++;\n                        addcnt++;\n                        break;\n                    }\n                }\n            }\n            else\n            {\n                s += clampcolor(centerresult.xyz);\n                cnt++;\n                sourcecnt++;\n            }\n        }\n        s += float(4- sourcecnt - addcnt) * centerresult.xyz;\n        s /= 4.0;\n    }\n\tfragColor = vec4(s,1.0);\n    \n    fragColor = pow(exposure * fragColor, vec4(1.0 / 2.2));\n    \n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 41,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a//media/previz/cubemap00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//YCZ:\n//Version2 - 2022.06.27(Tokyo time)\n\n//*************About Setting******************//\n//No need additional setting. Time axis is as same as the offical one\n\n//*************About Exposure******************//\n//Exposure is under Image\n\n//*************About Time******************//\n//If time shift is needed for measurement, plz replace all iTime variable with desired time value(included in Buffer A and Image)\n\n//*************About Measurement******************//\n//SSIM data example(under exposure of 2):\n//Frame0(t = 0.0) ssim 0.961\n//Frame1(t = 1.0) ssim 0.963\n//Frame2(t = 5.0) ssim 0.946\n\n//(idk how my render will be measured with gt.\n//And this Shader will take around 6 seconds to compile (gtx 2070, cpu i7 11xxxx)\n//In order to avoid problems such as graphics card model browser model conflict or sth.\n//if the value is significantly lower than this value means that this shader is not compiled correctly, \n//please change the browser, \n//thank you very much ^_^\nstruct Ray\n{\n\tvec3 origin, dir;\n};\n\nstruct Point\n{\n    vec4 Position;\n    vec4 Normal;\n    int FaceIndex;\n    int ObjectIndex;\n};\n\nstruct Hidden\n{\n    vec4 H_0;\n    vec4 H_1;\n    vec4 H_2;\n    vec4 H_3;\n    vec4 H_4;\n    vec4 H_5;\n    vec4 H_6;\n    vec4 H_7;\n};\n\nint CoordToIndex(vec2 fragCoord)\n{\n    int xx = fragCoord.x >= 512.0 ? 1 : 0;\n    int yy = fragCoord.y >= 512.0 ? 2 : 0;\n    return yy + xx;\n}\nvec2 CoordToLocalCoord(vec2 fragCoord)\n{\n    float modx = fragCoord.x >= 512.0 ? fragCoord.x - 512.0 : fragCoord.x;\n    float mody = fragCoord.y >= 512.0 ? fragCoord.y - 512.0 : fragCoord.y; \n    return vec2(modx, mody);\n}\n\nint NormalToIndex(vec3 Normal)\n{\n    bool kk = any(greaterThan(Normal,vec3(0.0)));\n    int eigen = Normal.x != 0.0 ? 0 : (Normal.y != 0.0 ? 2 : 4);\n    return int(kk) + eigen;\n}\n\nmat4 rotate_y(float a)\n{\n\tmat4 ret = mat4(1.0);\n\tret[0][0] = ret[2][2] = cos(a);\n\tret[0][2] = sin(a);\n\tret[2][0] = -ret[0][2];\n\treturn ret;\n}\n\n//////////////////////Mapping////////////////////////////\nPoint LightmapToPosition_H(vec2 UV)\n{\n    ivec2 PixelCoord = ivec2(UV);\n    mat4 RotationMatrix = rotate_y(-0.350000);\n    mat4 TransposeRotationMatrix = transpose(RotationMatrix);\n//UV-Min:int2(0,0) | UV-Max:int2(57,22) | Real-Min:float3(0.116000,0.450000,0.000000) | Real-Max:float3(0.516000,0.450000,0.150000) | FaceIndex:3 | ObjectIndex:2 | bFlip:0\n    if((PixelCoord.x >= 0 && PixelCoord.y >= 0 && PixelCoord.x < 57 && PixelCoord.y < 22))//Id:15\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 0))/vec2(56, 21);\n        vec3 ObjectSpace_Position = vec3(mix(0.116000, 0.516000, AlphaCoord.x), 0.450000, mix(0.000000, 0.150000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 2);\n    }\n//UV-Min:int2(0,22) | UV-Max:int2(22,128) | Real-Min:float3(0.427000,0.000000,0.000000) | Real-Max:float3(0.427000,0.750000,0.150000) | FaceIndex:0 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 22 && PixelCoord.x < 22 && PixelCoord.y < 128))//Id:6\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 22))/vec2(21, 105);\n        vec3 ObjectSpace_Position = vec3(0.427000, mix(0.000000, 0.750000, AlphaCoord.y), mix(0.000000, 0.150000, AlphaCoord.x));//0\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 1);\n    }\n//UV-Min:int2(22,22) | UV-Max:int2(42,44) | Real-Min:float3(0.116000,0.310000,0.000000) | Real-Max:float3(0.116000,0.450000,0.150000) | FaceIndex:0 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 22 && PixelCoord.y >= 22 && PixelCoord.x < 42 && PixelCoord.y < 44))//Id:12\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(22, 22))/vec2(19, 21);\n        vec3 ObjectSpace_Position = vec3(0.116000, mix(0.310000, 0.450000, AlphaCoord.x), mix(0.000000, 0.150000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 2);\n    }\n//UV-Min:int2(22,44) | UV-Max:int2(128,66) | Real-Min:float3(0.200000,0.000000,0.000000) | Real-Max:float3(0.200000,0.750000,0.150000) | FaceIndex:1 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 22 && PixelCoord.y >= 44 && PixelCoord.x < 128 && PixelCoord.y < 66))//Id:1\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(22, 44))/vec2(105, 21);\n        vec3 ObjectSpace_Position = vec3(0.200000, mix(0.000000, 0.750000, AlphaCoord.x), mix(0.000000, 0.150000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 0);\n    }\n//UV-Min:int2(22,66) | UV-Max:int2(128,95) | Real-Min:float3(0.427000,0.000000,0.000000) | Real-Max:float3(0.627000,0.750000,0.000000) | FaceIndex:4 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 22 && PixelCoord.y >= 66 && PixelCoord.x < 128 && PixelCoord.y < 95))//Id:10\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(22, 66))/vec2(105, 28);\n        vec3 ObjectSpace_Position = vec3(mix(0.427000, 0.627000, AlphaCoord.y), mix(0.000000, 0.750000, AlphaCoord.x),0.000000);//2\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 1);\n    }\n//UV-Min:int2(22,95) | UV-Max:int2(128,124) | Real-Min:float3(0.427000,0.000000,0.150000) | Real-Max:float3(0.627000,0.750000,0.150000) | FaceIndex:5 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 22 && PixelCoord.y >= 95 && PixelCoord.x < 128 && PixelCoord.y < 124))//Id:11\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(22, 95))/vec2(105, 28);\n        vec3 ObjectSpace_Position = vec3(mix(0.427000, 0.627000, AlphaCoord.y), mix(0.000000, 0.750000, AlphaCoord.x),0.150000);//2\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 1);\n    }\n//UV-Min:int2(42,22) | UV-Max:int2(99,42) | Real-Min:float3(0.116000,0.310000,0.150000) | Real-Max:float3(0.516000,0.450000,0.150000) | FaceIndex:5 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 42 && PixelCoord.y >= 22 && PixelCoord.x < 99 && PixelCoord.y < 42))//Id:17\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(42, 22))/vec2(56, 19);\n        vec3 ObjectSpace_Position = vec3(mix(0.116000, 0.516000, AlphaCoord.x), mix(0.310000, 0.450000, AlphaCoord.y),0.150000);//2\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 2);\n    }\n//UV-Min:int2(99,0) | UV-Max:int2(205,29) | Real-Min:float3(0.000000,0.000000,0.150000) | Real-Max:float3(0.200000,0.750000,0.150000) | FaceIndex:5 | ObjectIndex:0 | bFlip:1\n    else if((PixelCoord.x >= 99 && PixelCoord.y >= 0 && PixelCoord.x < 205 && PixelCoord.y < 29))//Id:5\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(99, 0))/vec2(105, 28);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.200000, AlphaCoord.y), mix(0.000000, 0.750000, AlphaCoord.x),0.150000);//2\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 0);\n    }\n//UV-Min:int2(57,0) | UV-Max:int2(86,22) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.200000,0.000000,0.150000) | FaceIndex:2 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 57 && PixelCoord.y >= 0 && PixelCoord.x < 86 && PixelCoord.y < 22))//Id:2\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(57, 0))/vec2(28, 21);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.200000, AlphaCoord.x), 0.000000, mix(0.000000, 0.150000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 0);\n    }\n//UV-Min:int2(205,0) | UV-Max:int2(234,106) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.200000,0.750000,0.000000) | FaceIndex:4 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 205 && PixelCoord.y >= 0 && PixelCoord.x < 234 && PixelCoord.y < 106))//Id:4\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(205, 0))/vec2(28, 105);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.200000, AlphaCoord.x), mix(0.000000, 0.750000, AlphaCoord.y),0.000000);//2\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 0);\n    }\n//UV-Min:int2(128,29) | UV-Max:int2(150,86) | Real-Min:float3(0.116000,0.310000,0.000000) | Real-Max:float3(0.516000,0.310000,0.150000) | FaceIndex:2 | ObjectIndex:2 | bFlip:1\n    else if((PixelCoord.x >= 128 && PixelCoord.y >= 29 && PixelCoord.x < 150 && PixelCoord.y < 86))//Id:14\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(128, 29))/vec2(21, 56);\n        vec3 ObjectSpace_Position = vec3(mix(0.116000, 0.516000, AlphaCoord.y), 0.310000, mix(0.000000, 0.150000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 2);\n    }\n//UV-Min:int2(128,86) | UV-Max:int2(150,115) | Real-Min:float3(0.427000,0.750000,0.000000) | Real-Max:float3(0.627000,0.750000,0.150000) | FaceIndex:3 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 128 && PixelCoord.y >= 86 && PixelCoord.x < 150 && PixelCoord.y < 115))//Id:9\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(128, 86))/vec2(21, 28);\n        vec3 ObjectSpace_Position = vec3(mix(0.427000, 0.627000, AlphaCoord.y), 0.750000, mix(0.000000, 0.150000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 1);\n    }\n//UV-Min:int2(150,106) | UV-Max:int2(256,128) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.000000,0.750000,0.150000) | FaceIndex:0 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 150 && PixelCoord.y >= 106 && PixelCoord.x < 256 && PixelCoord.y < 128))//Id:0\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(150, 106))/vec2(105, 21);\n        vec3 ObjectSpace_Position = vec3(0.000000, mix(0.000000, 0.750000, AlphaCoord.x), mix(0.000000, 0.150000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 0);\n    }\n//UV-Min:int2(150,29) | UV-Max:int2(179,51) | Real-Min:float3(0.427000,0.000000,0.000000) | Real-Max:float3(0.627000,0.000000,0.150000) | FaceIndex:2 | ObjectIndex:1 | bFlip:0\n    else if((PixelCoord.x >= 150 && PixelCoord.y >= 29 && PixelCoord.x < 179 && PixelCoord.y < 51))//Id:8\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(150, 29))/vec2(28, 21);\n        vec3 ObjectSpace_Position = vec3(mix(0.427000, 0.627000, AlphaCoord.x), 0.000000, mix(0.000000, 0.150000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 1);\n    }\n//UV-Min:int2(150,51) | UV-Max:int2(170,73) | Real-Min:float3(0.516000,0.310000,0.000000) | Real-Max:float3(0.516000,0.450000,0.150000) | FaceIndex:1 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 150 && PixelCoord.y >= 51 && PixelCoord.x < 170 && PixelCoord.y < 73))//Id:13\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(150, 51))/vec2(19, 21);\n        vec3 ObjectSpace_Position = vec3(0.516000, mix(0.310000, 0.450000, AlphaCoord.x), mix(0.000000, 0.150000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 2);\n    }\n//UV-Min:int2(234,0) | UV-Max:int2(256,106) | Real-Min:float3(0.627000,0.000000,0.000000) | Real-Max:float3(0.627000,0.750000,0.150000) | FaceIndex:1 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 234 && PixelCoord.y >= 0 && PixelCoord.x < 256 && PixelCoord.y < 106))//Id:7\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(234, 0))/vec2(21, 105);\n        vec3 ObjectSpace_Position = vec3(0.627000, mix(0.000000, 0.750000, AlphaCoord.y), mix(0.000000, 0.150000, AlphaCoord.x));//0\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 1);\n    }\n//UV-Min:int2(179,29) | UV-Max:int2(199,86) | Real-Min:float3(0.116000,0.310000,0.000000) | Real-Max:float3(0.516000,0.450000,0.000000) | FaceIndex:4 | ObjectIndex:2 | bFlip:1\n    else if((PixelCoord.x >= 179 && PixelCoord.y >= 29 && PixelCoord.x < 199 && PixelCoord.y < 86))//Id:16\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(179, 29))/vec2(19, 56);\n        vec3 ObjectSpace_Position = vec3(mix(0.116000, 0.516000, AlphaCoord.y), mix(0.310000, 0.450000, AlphaCoord.x),0.000000);//2\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 2);\n    }\n//UV-Min:int2(150,73) | UV-Max:int2(172,102) | Real-Min:float3(0.000000,0.750000,0.000000) | Real-Max:float3(0.200000,0.750000,0.150000) | FaceIndex:3 | ObjectIndex:0 | bFlip:1\n    else if((PixelCoord.x >= 150 && PixelCoord.y >= 73 && PixelCoord.x < 172 && PixelCoord.y < 102))//Id:3\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(150, 73))/vec2(21, 28);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.200000, AlphaCoord.y), 0.750000, mix(0.000000, 0.150000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(-0.900000, -1.000000, 0.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 0);\n    }\n    else\n    {\n        return Point(vec4(0.0,0.0,0.0,-1.0), vec4(0.0,0.0,0.0,-1.0),-1,-1);\n    }\n}\n//####\n//####\nvec2 PositionToLightmap_H(Ray TempRay, float HitDistance, vec3 HitNormal, int CubeIndex)\n{\n    vec3 ObjectSpace_Position = TempRay.origin + TempRay.dir * HitDistance;\n    int FaceIndex = NormalToIndex(HitNormal);\n    int EigenIndex = FaceIndex + 6 * CubeIndex;\n//UV-Min:int2(0,0) | UV-Max:int2(57,22) | Real-Min:float3(0.116000,0.450000,0.000000) | Real-Max:float3(0.516000,0.450000,0.150000) | FaceIndex:3 | ObjectIndex:2 | bFlip:0\n    if(EigenIndex == 15)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.116000, 0.000000)) / vec2(0.400000, 0.150000);\n        return vec2(mix(0.500000, 56.500000, AlphaCoord.x), mix(0.500000, 21.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(0,22) | UV-Max:int2(22,128) | Real-Min:float3(0.427000,0.000000,0.000000) | Real-Max:float3(0.427000,0.750000,0.150000) | FaceIndex:0 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 6)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.000000, 0.000000)) / vec2(0.750000, 0.150000);\n        return vec2(mix(0.500000, 21.500000, AlphaCoord.y), mix(22.500000, 127.500000, AlphaCoord.x));//0F\n    }\n//UV-Min:int2(22,22) | UV-Max:int2(42,44) | Real-Min:float3(0.116000,0.310000,0.000000) | Real-Max:float3(0.116000,0.450000,0.150000) | FaceIndex:0 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 12)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.310000, 0.000000)) / vec2(0.140000, 0.150000);\n        return vec2(mix(22.500000, 41.500000, AlphaCoord.x), mix(22.500000, 43.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(22,44) | UV-Max:int2(128,66) | Real-Min:float3(0.200000,0.000000,0.000000) | Real-Max:float3(0.200000,0.750000,0.150000) | FaceIndex:1 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 1)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.000000, 0.000000)) / vec2(0.750000, 0.150000);\n        return vec2(mix(22.500000, 127.500000, AlphaCoord.x), mix(44.500000, 65.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(22,66) | UV-Max:int2(128,95) | Real-Min:float3(0.427000,0.000000,0.000000) | Real-Max:float3(0.627000,0.750000,0.000000) | FaceIndex:4 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 10)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.427000, 0.000000)) / vec2(0.200000, 0.750000);\n        return vec2(mix(22.500000, 127.500000, AlphaCoord.y), mix(66.500000, 94.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(22,95) | UV-Max:int2(128,124) | Real-Min:float3(0.427000,0.000000,0.150000) | Real-Max:float3(0.627000,0.750000,0.150000) | FaceIndex:5 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 11)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.427000, 0.000000)) / vec2(0.200000, 0.750000);\n        return vec2(mix(22.500000, 127.500000, AlphaCoord.y), mix(95.500000, 123.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(42,22) | UV-Max:int2(99,42) | Real-Min:float3(0.116000,0.310000,0.150000) | Real-Max:float3(0.516000,0.450000,0.150000) | FaceIndex:5 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 17)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.116000, 0.310000)) / vec2(0.400000, 0.140000);\n        return vec2(mix(42.500000, 98.500000, AlphaCoord.x), mix(22.500000, 41.500000, AlphaCoord.y));//2N\n    }\n//UV-Min:int2(99,0) | UV-Max:int2(205,29) | Real-Min:float3(0.000000,0.000000,0.150000) | Real-Max:float3(0.200000,0.750000,0.150000) | FaceIndex:5 | ObjectIndex:0 | bFlip:1\n    else if(EigenIndex == 5)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.000000, 0.000000)) / vec2(0.200000, 0.750000);\n        return vec2(mix(99.500000, 204.500000, AlphaCoord.y), mix(0.500000, 28.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(57,0) | UV-Max:int2(86,22) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.200000,0.000000,0.150000) | FaceIndex:2 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 2)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.000000, 0.000000)) / vec2(0.200000, 0.150000);\n        return vec2(mix(57.500000, 85.500000, AlphaCoord.x), mix(0.500000, 21.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(205,0) | UV-Max:int2(234,106) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.200000,0.750000,0.000000) | FaceIndex:4 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 4)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.000000, 0.000000)) / vec2(0.200000, 0.750000);\n        return vec2(mix(205.500000, 233.500000, AlphaCoord.x), mix(0.500000, 105.500000, AlphaCoord.y));//2N\n    }\n//UV-Min:int2(128,29) | UV-Max:int2(150,86) | Real-Min:float3(0.116000,0.310000,0.000000) | Real-Max:float3(0.516000,0.310000,0.150000) | FaceIndex:2 | ObjectIndex:2 | bFlip:1\n    else if(EigenIndex == 14)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.116000, 0.000000)) / vec2(0.400000, 0.150000);\n        return vec2(mix(128.500000, 149.500000, AlphaCoord.y), mix(29.500000, 85.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(128,86) | UV-Max:int2(150,115) | Real-Min:float3(0.427000,0.750000,0.000000) | Real-Max:float3(0.627000,0.750000,0.150000) | FaceIndex:3 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 9)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.427000, 0.000000)) / vec2(0.200000, 0.150000);\n        return vec2(mix(128.500000, 149.500000, AlphaCoord.y), mix(86.500000, 114.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(150,106) | UV-Max:int2(256,128) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.000000,0.750000,0.150000) | FaceIndex:0 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 0)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.000000, 0.000000)) / vec2(0.750000, 0.150000);\n        return vec2(mix(150.500000, 255.500000, AlphaCoord.x), mix(106.500000, 127.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(150,29) | UV-Max:int2(179,51) | Real-Min:float3(0.427000,0.000000,0.000000) | Real-Max:float3(0.627000,0.000000,0.150000) | FaceIndex:2 | ObjectIndex:1 | bFlip:0\n    else if(EigenIndex == 8)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.427000, 0.000000)) / vec2(0.200000, 0.150000);\n        return vec2(mix(150.500000, 178.500000, AlphaCoord.x), mix(29.500000, 50.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(150,51) | UV-Max:int2(170,73) | Real-Min:float3(0.516000,0.310000,0.000000) | Real-Max:float3(0.516000,0.450000,0.150000) | FaceIndex:1 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 13)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.310000, 0.000000)) / vec2(0.140000, 0.150000);\n        return vec2(mix(150.500000, 169.500000, AlphaCoord.x), mix(51.500000, 72.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(234,0) | UV-Max:int2(256,106) | Real-Min:float3(0.627000,0.000000,0.000000) | Real-Max:float3(0.627000,0.750000,0.150000) | FaceIndex:1 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 7)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.000000, 0.000000)) / vec2(0.750000, 0.150000);\n        return vec2(mix(234.500000, 255.500000, AlphaCoord.y), mix(0.500000, 105.500000, AlphaCoord.x));//0F\n    }\n//UV-Min:int2(179,29) | UV-Max:int2(199,86) | Real-Min:float3(0.116000,0.310000,0.000000) | Real-Max:float3(0.516000,0.450000,0.000000) | FaceIndex:4 | ObjectIndex:2 | bFlip:1\n    else if(EigenIndex == 16)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.116000, 0.310000)) / vec2(0.400000, 0.140000);\n        return vec2(mix(179.500000, 198.500000, AlphaCoord.y), mix(29.500000, 85.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(150,73) | UV-Max:int2(172,102) | Real-Min:float3(0.000000,0.750000,0.000000) | Real-Max:float3(0.200000,0.750000,0.150000) | FaceIndex:3 | ObjectIndex:0 | bFlip:1\n    else if(EigenIndex == 3)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.000000, 0.000000)) / vec2(0.200000, 0.150000);\n        return vec2(mix(150.500000, 171.500000, AlphaCoord.y), mix(73.500000, 101.500000, AlphaCoord.x));//1F\n    }\n    else\n    {\n        return vec2(0.0, 0.0);\n    }\n}\n///////////////\n//####\nPoint LightmapToPosition_P(vec2 UV)\n{\n    ivec2 PixelCoord = ivec2(UV);\n    mat4 RotationMatrix = rotate_y(0.750000);\n    mat4 TransposeRotationMatrix = transpose(RotationMatrix);\n//UV-Min:int2(0,0) | UV-Max:int2(20,61) | Real-Min:float3(0.044000,0.288000,0.000000) | Real-Max:float3(0.471000,0.428000,0.000000) | FaceIndex:4 | ObjectIndex:2 | bFlip:1\n    if((PixelCoord.x >= 0 && PixelCoord.y >= 0 && PixelCoord.x < 20 && PixelCoord.y < 61))//Id:16\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 0))/vec2(19, 60);\n        vec3 ObjectSpace_Position = vec3(mix(0.044000, 0.471000, AlphaCoord.y), mix(0.288000, 0.428000, AlphaCoord.x),0.000000);//2\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 2);\n    }\n//UV-Min:int2(0,61) | UV-Max:int2(20,83) | Real-Min:float3(0.471000,0.610000,0.000000) | Real-Max:float3(0.471000,0.750000,0.150000) | FaceIndex:1 | ObjectIndex:3 | bFlip:0\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 61 && PixelCoord.x < 20 && PixelCoord.y < 83))//Id:19\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 61))/vec2(19, 21);\n        vec3 ObjectSpace_Position = vec3(0.471000, mix(0.610000, 0.750000, AlphaCoord.x), mix(0.000000, 0.150000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 3);\n    }\n//UV-Min:int2(0,83) | UV-Max:int2(20,105) | Real-Min:float3(0.044000,0.288000,0.000000) | Real-Max:float3(0.044000,0.428000,0.150000) | FaceIndex:0 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 83 && PixelCoord.x < 20 && PixelCoord.y < 105))//Id:12\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 83))/vec2(19, 21);\n        vec3 ObjectSpace_Position = vec3(0.044000, mix(0.288000, 0.428000, AlphaCoord.x), mix(0.000000, 0.150000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 2);\n    }\n//UV-Min:int2(0,105) | UV-Max:int2(29,127) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.200000,0.000000,0.150000) | FaceIndex:2 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 105 && PixelCoord.x < 29 && PixelCoord.y < 127))//Id:2\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 105))/vec2(28, 21);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.200000, AlphaCoord.x), 0.000000, mix(0.000000, 0.150000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 0);\n    }\n//UV-Min:int2(20,0) | UV-Max:int2(42,67) | Real-Min:float3(0.000000,0.610000,0.000000) | Real-Max:float3(0.471000,0.610000,0.150000) | FaceIndex:2 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 20 && PixelCoord.y >= 0 && PixelCoord.x < 42 && PixelCoord.y < 67))//Id:20\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(20, 0))/vec2(21, 66);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.471000, AlphaCoord.y), 0.610000, mix(0.000000, 0.150000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 3);\n    }\n//UV-Min:int2(29,67) | UV-Max:int2(51,112) | Real-Min:float3(0.540000,0.360000,0.000000) | Real-Max:float3(0.540000,0.675000,0.150000) | FaceIndex:1 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 29 && PixelCoord.y >= 67 && PixelCoord.x < 51 && PixelCoord.y < 112))//Id:7\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(29, 67))/vec2(21, 44);\n        vec3 ObjectSpace_Position = vec3(0.540000, mix(0.360000, 0.675000, AlphaCoord.y), mix(0.000000, 0.150000, AlphaCoord.x));//0\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 1);\n    }\n//UV-Min:int2(42,0) | UV-Max:int2(87,20) | Real-Min:float3(0.400000,0.360000,0.000000) | Real-Max:float3(0.540000,0.675000,0.000000) | FaceIndex:4 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 42 && PixelCoord.y >= 0 && PixelCoord.x < 87 && PixelCoord.y < 20))//Id:10\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(42, 0))/vec2(44, 19);\n        vec3 ObjectSpace_Position = vec3(mix(0.400000, 0.540000, AlphaCoord.y), mix(0.360000, 0.675000, AlphaCoord.x),0.000000);//2\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 1);\n    }\n//UV-Min:int2(42,20) | UV-Max:int2(87,40) | Real-Min:float3(0.400000,0.360000,0.150000) | Real-Max:float3(0.540000,0.675000,0.150000) | FaceIndex:5 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 42 && PixelCoord.y >= 20 && PixelCoord.x < 87 && PixelCoord.y < 40))//Id:11\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(42, 20))/vec2(44, 19);\n        vec3 ObjectSpace_Position = vec3(mix(0.400000, 0.540000, AlphaCoord.y), mix(0.360000, 0.675000, AlphaCoord.x),0.150000);//2\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 1);\n    }\n//UV-Min:int2(51,40) | UV-Max:int2(71,107) | Real-Min:float3(0.000000,0.610000,0.150000) | Real-Max:float3(0.471000,0.750000,0.150000) | FaceIndex:5 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 51 && PixelCoord.y >= 40 && PixelCoord.x < 71 && PixelCoord.y < 107))//Id:23\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(51, 40))/vec2(19, 66);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.471000, AlphaCoord.y), mix(0.610000, 0.750000, AlphaCoord.x),0.150000);//2\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 3);\n    }\n//UV-Min:int2(51,107) | UV-Max:int2(112,127) | Real-Min:float3(0.044000,0.288000,0.150000) | Real-Max:float3(0.471000,0.428000,0.150000) | FaceIndex:5 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 51 && PixelCoord.y >= 107 && PixelCoord.x < 112 && PixelCoord.y < 127))//Id:17\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(51, 107))/vec2(60, 19);\n        vec3 ObjectSpace_Position = vec3(mix(0.044000, 0.471000, AlphaCoord.x), mix(0.288000, 0.428000, AlphaCoord.y),0.150000);//2\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 2);\n    }\n//UV-Min:int2(71,40) | UV-Max:int2(91,107) | Real-Min:float3(0.000000,0.610000,0.000000) | Real-Max:float3(0.471000,0.750000,0.000000) | FaceIndex:4 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 71 && PixelCoord.y >= 40 && PixelCoord.x < 91 && PixelCoord.y < 107))//Id:22\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(71, 40))/vec2(19, 66);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.471000, AlphaCoord.y), mix(0.610000, 0.750000, AlphaCoord.x),0.000000);//2\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 3);\n    }\n//UV-Min:int2(87,0) | UV-Max:int2(194,22) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.000000,0.750000,0.150000) | FaceIndex:0 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 87 && PixelCoord.y >= 0 && PixelCoord.x < 194 && PixelCoord.y < 22))//Id:0\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(87, 0))/vec2(106, 21);\n        vec3 ObjectSpace_Position = vec3(0.000000, mix(0.000000, 0.750000, AlphaCoord.x), mix(0.000000, 0.150000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 0);\n    }\n//UV-Min:int2(91,22) | UV-Max:int2(198,44) | Real-Min:float3(0.200000,0.000000,0.000000) | Real-Max:float3(0.200000,0.750000,0.150000) | FaceIndex:1 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 91 && PixelCoord.y >= 22 && PixelCoord.x < 198 && PixelCoord.y < 44))//Id:1\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(91, 22))/vec2(106, 21);\n        vec3 ObjectSpace_Position = vec3(0.200000, mix(0.000000, 0.750000, AlphaCoord.x), mix(0.000000, 0.150000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 0);\n    }\n//UV-Min:int2(91,44) | UV-Max:int2(198,73) | Real-Min:float3(0.000000,0.000000,0.150000) | Real-Max:float3(0.200000,0.750000,0.150000) | FaceIndex:5 | ObjectIndex:0 | bFlip:1\n    else if((PixelCoord.x >= 91 && PixelCoord.y >= 44 && PixelCoord.x < 198 && PixelCoord.y < 73))//Id:5\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(91, 44))/vec2(106, 28);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.200000, AlphaCoord.y), mix(0.000000, 0.750000, AlphaCoord.x),0.150000);//2\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 0);\n    }\n//UV-Min:int2(91,73) | UV-Max:int2(113,102) | Real-Min:float3(0.000000,0.750000,0.000000) | Real-Max:float3(0.200000,0.750000,0.150000) | FaceIndex:3 | ObjectIndex:0 | bFlip:1\n    else if((PixelCoord.x >= 91 && PixelCoord.y >= 73 && PixelCoord.x < 113 && PixelCoord.y < 102))//Id:3\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(91, 73))/vec2(21, 28);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.200000, AlphaCoord.y), 0.750000, mix(0.000000, 0.150000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 0);\n    }\n//UV-Min:int2(112,102) | UV-Max:int2(132,124) | Real-Min:float3(0.471000,0.288000,0.000000) | Real-Max:float3(0.471000,0.428000,0.150000) | FaceIndex:1 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 112 && PixelCoord.y >= 102 && PixelCoord.x < 132 && PixelCoord.y < 124))//Id:13\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(112, 102))/vec2(19, 21);\n        vec3 ObjectSpace_Position = vec3(0.471000, mix(0.288000, 0.428000, AlphaCoord.x), mix(0.000000, 0.150000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 2);\n    }\n//UV-Min:int2(113,73) | UV-Max:int2(174,95) | Real-Min:float3(0.044000,0.428000,0.000000) | Real-Max:float3(0.471000,0.428000,0.150000) | FaceIndex:3 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 113 && PixelCoord.y >= 73 && PixelCoord.x < 174 && PixelCoord.y < 95))//Id:15\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(113, 73))/vec2(60, 21);\n        vec3 ObjectSpace_Position = vec3(mix(0.044000, 0.471000, AlphaCoord.x), 0.428000, mix(0.000000, 0.150000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 2);\n    }\n//UV-Min:int2(198,0) | UV-Max:int2(220,61) | Real-Min:float3(0.044000,0.288000,0.000000) | Real-Max:float3(0.471000,0.288000,0.150000) | FaceIndex:2 | ObjectIndex:2 | bFlip:1\n    else if((PixelCoord.x >= 198 && PixelCoord.y >= 0 && PixelCoord.x < 220 && PixelCoord.y < 61))//Id:14\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(198, 0))/vec2(21, 60);\n        vec3 ObjectSpace_Position = vec3(mix(0.044000, 0.471000, AlphaCoord.y), 0.288000, mix(0.000000, 0.150000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 2);\n    }\n//UV-Min:int2(174,73) | UV-Max:int2(196,118) | Real-Min:float3(0.400000,0.360000,0.000000) | Real-Max:float3(0.400000,0.675000,0.150000) | FaceIndex:0 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 174 && PixelCoord.y >= 73 && PixelCoord.x < 196 && PixelCoord.y < 118))//Id:6\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(174, 73))/vec2(21, 44);\n        vec3 ObjectSpace_Position = vec3(0.400000, mix(0.360000, 0.675000, AlphaCoord.y), mix(0.000000, 0.150000, AlphaCoord.x));//0\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 1);\n    }\n//UV-Min:int2(132,95) | UV-Max:int2(154,115) | Real-Min:float3(0.400000,0.675000,0.000000) | Real-Max:float3(0.540000,0.675000,0.150000) | FaceIndex:3 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 132 && PixelCoord.y >= 95 && PixelCoord.x < 154 && PixelCoord.y < 115))//Id:9\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(132, 95))/vec2(21, 19);\n        vec3 ObjectSpace_Position = vec3(mix(0.400000, 0.540000, AlphaCoord.y), 0.675000, mix(0.000000, 0.150000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 1);\n    }\n//UV-Min:int2(198,61) | UV-Max:int2(220,128) | Real-Min:float3(0.000000,0.750000,0.000000) | Real-Max:float3(0.471000,0.750000,0.150000) | FaceIndex:3 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 198 && PixelCoord.y >= 61 && PixelCoord.x < 220 && PixelCoord.y < 128))//Id:21\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(198, 61))/vec2(21, 66);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.471000, AlphaCoord.y), 0.750000, mix(0.000000, 0.150000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 3);\n    }\n//UV-Min:int2(154,95) | UV-Max:int2(174,117) | Real-Min:float3(0.400000,0.360000,0.000000) | Real-Max:float3(0.540000,0.360000,0.150000) | FaceIndex:2 | ObjectIndex:1 | bFlip:0\n    else if((PixelCoord.x >= 154 && PixelCoord.y >= 95 && PixelCoord.x < 174 && PixelCoord.y < 117))//Id:8\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(154, 95))/vec2(19, 21);\n        vec3 ObjectSpace_Position = vec3(mix(0.400000, 0.540000, AlphaCoord.x), 0.360000, mix(0.000000, 0.150000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 1);\n    }\n//UV-Min:int2(220,0) | UV-Max:int2(242,20) | Real-Min:float3(0.000000,0.610000,0.000000) | Real-Max:float3(0.000000,0.750000,0.150000) | FaceIndex:0 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 220 && PixelCoord.y >= 0 && PixelCoord.x < 242 && PixelCoord.y < 20))//Id:18\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(220, 0))/vec2(21, 19);\n        vec3 ObjectSpace_Position = vec3(0.000000, mix(0.610000, 0.750000, AlphaCoord.y), mix(0.000000, 0.150000, AlphaCoord.x));//0\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 3);\n    }\n//UV-Min:int2(220,20) | UV-Max:int2(249,127) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.200000,0.750000,0.000000) | FaceIndex:4 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 220 && PixelCoord.y >= 20 && PixelCoord.x < 249 && PixelCoord.y < 127))//Id:4\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(220, 20))/vec2(28, 106);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.200000, AlphaCoord.x), mix(0.000000, 0.750000, AlphaCoord.y),0.000000);//2\n        vec3 WorldSpace_Position = vec3(-0.280000, -1.000000, 0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 0);\n    }\n    else\n    {\n        return Point(vec4(0.0,0.0,0.0,-1.0), vec4(0.0,0.0,0.0,-1.0),-1,-1);\n    }\n}\n//####\n//####\nvec2 PositionToLightmap_P(Ray TempRay, float HitDistance, vec3 HitNormal, int CubeIndex)\n{\n    vec3 ObjectSpace_Position = TempRay.origin + TempRay.dir * HitDistance;\n    int FaceIndex = NormalToIndex(HitNormal);\n    int EigenIndex = FaceIndex + 6 * CubeIndex;\n//UV-Min:int2(0,0) | UV-Max:int2(20,61) | Real-Min:float3(0.044000,0.288000,0.000000) | Real-Max:float3(0.471000,0.428000,0.000000) | FaceIndex:4 | ObjectIndex:2 | bFlip:1\n    if(EigenIndex == 16)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.044000, 0.288000)) / vec2(0.427000, 0.140000);\n        return vec2(mix(0.500000, 19.500000, AlphaCoord.y), mix(0.500000, 60.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(0,61) | UV-Max:int2(20,83) | Real-Min:float3(0.471000,0.610000,0.000000) | Real-Max:float3(0.471000,0.750000,0.150000) | FaceIndex:1 | ObjectIndex:3 | bFlip:0\n    else if(EigenIndex == 19)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.610000, 0.000000)) / vec2(0.140000, 0.150000);\n        return vec2(mix(0.500000, 19.500000, AlphaCoord.x), mix(61.500000, 82.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(0,83) | UV-Max:int2(20,105) | Real-Min:float3(0.044000,0.288000,0.000000) | Real-Max:float3(0.044000,0.428000,0.150000) | FaceIndex:0 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 12)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.288000, 0.000000)) / vec2(0.140000, 0.150000);\n        return vec2(mix(0.500000, 19.500000, AlphaCoord.x), mix(83.500000, 104.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(0,105) | UV-Max:int2(29,127) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.200000,0.000000,0.150000) | FaceIndex:2 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 2)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.000000, 0.000000)) / vec2(0.200000, 0.150000);\n        return vec2(mix(0.500000, 28.500000, AlphaCoord.x), mix(105.500000, 126.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(20,0) | UV-Max:int2(42,67) | Real-Min:float3(0.000000,0.610000,0.000000) | Real-Max:float3(0.471000,0.610000,0.150000) | FaceIndex:2 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 20)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.000000, 0.000000)) / vec2(0.471000, 0.150000);\n        return vec2(mix(20.500000, 41.500000, AlphaCoord.y), mix(0.500000, 66.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(29,67) | UV-Max:int2(51,112) | Real-Min:float3(0.540000,0.360000,0.000000) | Real-Max:float3(0.540000,0.675000,0.150000) | FaceIndex:1 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 7)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.360000, 0.000000)) / vec2(0.315000, 0.150000);\n        return vec2(mix(29.500000, 50.500000, AlphaCoord.y), mix(67.500000, 111.500000, AlphaCoord.x));//0F\n    }\n//UV-Min:int2(42,0) | UV-Max:int2(87,20) | Real-Min:float3(0.400000,0.360000,0.000000) | Real-Max:float3(0.540000,0.675000,0.000000) | FaceIndex:4 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 10)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.400000, 0.360000)) / vec2(0.140000, 0.315000);\n        return vec2(mix(42.500000, 86.500000, AlphaCoord.y), mix(0.500000, 19.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(42,20) | UV-Max:int2(87,40) | Real-Min:float3(0.400000,0.360000,0.150000) | Real-Max:float3(0.540000,0.675000,0.150000) | FaceIndex:5 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 11)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.400000, 0.360000)) / vec2(0.140000, 0.315000);\n        return vec2(mix(42.500000, 86.500000, AlphaCoord.y), mix(20.500000, 39.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(51,40) | UV-Max:int2(71,107) | Real-Min:float3(0.000000,0.610000,0.150000) | Real-Max:float3(0.471000,0.750000,0.150000) | FaceIndex:5 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 23)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.000000, 0.610000)) / vec2(0.471000, 0.140000);\n        return vec2(mix(51.500000, 70.500000, AlphaCoord.y), mix(40.500000, 106.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(51,107) | UV-Max:int2(112,127) | Real-Min:float3(0.044000,0.288000,0.150000) | Real-Max:float3(0.471000,0.428000,0.150000) | FaceIndex:5 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 17)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.044000, 0.288000)) / vec2(0.427000, 0.140000);\n        return vec2(mix(51.500000, 111.500000, AlphaCoord.x), mix(107.500000, 126.500000, AlphaCoord.y));//2N\n    }\n//UV-Min:int2(71,40) | UV-Max:int2(91,107) | Real-Min:float3(0.000000,0.610000,0.000000) | Real-Max:float3(0.471000,0.750000,0.000000) | FaceIndex:4 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 22)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.000000, 0.610000)) / vec2(0.471000, 0.140000);\n        return vec2(mix(71.500000, 90.500000, AlphaCoord.y), mix(40.500000, 106.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(87,0) | UV-Max:int2(194,22) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.000000,0.750000,0.150000) | FaceIndex:0 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 0)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.000000, 0.000000)) / vec2(0.750000, 0.150000);\n        return vec2(mix(87.500000, 193.500000, AlphaCoord.x), mix(0.500000, 21.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(91,22) | UV-Max:int2(198,44) | Real-Min:float3(0.200000,0.000000,0.000000) | Real-Max:float3(0.200000,0.750000,0.150000) | FaceIndex:1 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 1)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.000000, 0.000000)) / vec2(0.750000, 0.150000);\n        return vec2(mix(91.500000, 197.500000, AlphaCoord.x), mix(22.500000, 43.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(91,44) | UV-Max:int2(198,73) | Real-Min:float3(0.000000,0.000000,0.150000) | Real-Max:float3(0.200000,0.750000,0.150000) | FaceIndex:5 | ObjectIndex:0 | bFlip:1\n    else if(EigenIndex == 5)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.000000, 0.000000)) / vec2(0.200000, 0.750000);\n        return vec2(mix(91.500000, 197.500000, AlphaCoord.y), mix(44.500000, 72.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(91,73) | UV-Max:int2(113,102) | Real-Min:float3(0.000000,0.750000,0.000000) | Real-Max:float3(0.200000,0.750000,0.150000) | FaceIndex:3 | ObjectIndex:0 | bFlip:1\n    else if(EigenIndex == 3)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.000000, 0.000000)) / vec2(0.200000, 0.150000);\n        return vec2(mix(91.500000, 112.500000, AlphaCoord.y), mix(73.500000, 101.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(112,102) | UV-Max:int2(132,124) | Real-Min:float3(0.471000,0.288000,0.000000) | Real-Max:float3(0.471000,0.428000,0.150000) | FaceIndex:1 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 13)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.288000, 0.000000)) / vec2(0.140000, 0.150000);\n        return vec2(mix(112.500000, 131.500000, AlphaCoord.x), mix(102.500000, 123.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(113,73) | UV-Max:int2(174,95) | Real-Min:float3(0.044000,0.428000,0.000000) | Real-Max:float3(0.471000,0.428000,0.150000) | FaceIndex:3 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 15)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.044000, 0.000000)) / vec2(0.427000, 0.150000);\n        return vec2(mix(113.500000, 173.500000, AlphaCoord.x), mix(73.500000, 94.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(198,0) | UV-Max:int2(220,61) | Real-Min:float3(0.044000,0.288000,0.000000) | Real-Max:float3(0.471000,0.288000,0.150000) | FaceIndex:2 | ObjectIndex:2 | bFlip:1\n    else if(EigenIndex == 14)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.044000, 0.000000)) / vec2(0.427000, 0.150000);\n        return vec2(mix(198.500000, 219.500000, AlphaCoord.y), mix(0.500000, 60.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(174,73) | UV-Max:int2(196,118) | Real-Min:float3(0.400000,0.360000,0.000000) | Real-Max:float3(0.400000,0.675000,0.150000) | FaceIndex:0 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 6)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.360000, 0.000000)) / vec2(0.315000, 0.150000);\n        return vec2(mix(174.500000, 195.500000, AlphaCoord.y), mix(73.500000, 117.500000, AlphaCoord.x));//0F\n    }\n//UV-Min:int2(132,95) | UV-Max:int2(154,115) | Real-Min:float3(0.400000,0.675000,0.000000) | Real-Max:float3(0.540000,0.675000,0.150000) | FaceIndex:3 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 9)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.400000, 0.000000)) / vec2(0.140000, 0.150000);\n        return vec2(mix(132.500000, 153.500000, AlphaCoord.y), mix(95.500000, 114.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(198,61) | UV-Max:int2(220,128) | Real-Min:float3(0.000000,0.750000,0.000000) | Real-Max:float3(0.471000,0.750000,0.150000) | FaceIndex:3 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 21)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.000000, 0.000000)) / vec2(0.471000, 0.150000);\n        return vec2(mix(198.500000, 219.500000, AlphaCoord.y), mix(61.500000, 127.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(154,95) | UV-Max:int2(174,117) | Real-Min:float3(0.400000,0.360000,0.000000) | Real-Max:float3(0.540000,0.360000,0.150000) | FaceIndex:2 | ObjectIndex:1 | bFlip:0\n    else if(EigenIndex == 8)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.400000, 0.000000)) / vec2(0.140000, 0.150000);\n        return vec2(mix(154.500000, 173.500000, AlphaCoord.x), mix(95.500000, 116.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(220,0) | UV-Max:int2(242,20) | Real-Min:float3(0.000000,0.610000,0.000000) | Real-Max:float3(0.000000,0.750000,0.150000) | FaceIndex:0 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 18)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.610000, 0.000000)) / vec2(0.140000, 0.150000);\n        return vec2(mix(220.500000, 241.500000, AlphaCoord.y), mix(0.500000, 19.500000, AlphaCoord.x));//0F\n    }\n//UV-Min:int2(220,20) | UV-Max:int2(249,127) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.200000,0.750000,0.000000) | FaceIndex:4 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 4)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.000000, 0.000000)) / vec2(0.200000, 0.750000);\n        return vec2(mix(220.500000, 248.500000, AlphaCoord.x), mix(20.500000, 126.500000, AlphaCoord.y));//2N\n    }\n    else\n    {\n        return vec2(0.0, 0.0);\n    }\n}\n//####\n///////////////\n//####\nPoint LightmapToPosition_G(vec2 UV)\n{\n    ivec2 PixelCoord = ivec2(UV);\n    mat4 RotationMatrix = rotate_y(-0.400000);\n    mat4 TransposeRotationMatrix = transpose(RotationMatrix);\n//UV-Min:int2(0,0) | UV-Max:int2(19,62) | Real-Min:float3(0.077000,0.610000,0.150000) | Real-Max:float3(0.550000,0.750000,0.150000) | FaceIndex:5 | ObjectIndex:5 | bFlip:1\n    if((PixelCoord.x >= 0 && PixelCoord.y >= 0 && PixelCoord.x < 19 && PixelCoord.y < 62))//Id:35\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 0))/vec2(18, 61);\n        vec3 ObjectSpace_Position = vec3(mix(0.077000, 0.550000, AlphaCoord.y), mix(0.610000, 0.750000, AlphaCoord.x),0.150000);//2\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 5);\n    }\n//UV-Min:int2(0,62) | UV-Max:int2(62,81) | Real-Min:float3(0.077000,0.610000,0.000000) | Real-Max:float3(0.550000,0.750000,0.000000) | FaceIndex:4 | ObjectIndex:5 | bFlip:0\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 62 && PixelCoord.x < 62 && PixelCoord.y < 81))//Id:34\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 62))/vec2(61, 18);\n        vec3 ObjectSpace_Position = vec3(mix(0.077000, 0.550000, AlphaCoord.x), mix(0.610000, 0.750000, AlphaCoord.y),0.000000);//2\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 5);\n    }\n//UV-Min:int2(0,81) | UV-Max:int2(27,107) | Real-Min:float3(0.425000,0.060000,0.150000) | Real-Max:float3(0.625000,0.265000,0.150000) | FaceIndex:5 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 81 && PixelCoord.x < 27 && PixelCoord.y < 107))//Id:11\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 81))/vec2(26, 25);\n        vec3 ObjectSpace_Position = vec3(mix(0.425000, 0.625000, AlphaCoord.y), mix(0.060000, 0.265000, AlphaCoord.x),0.150000);//2\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 1);\n    }\n//UV-Min:int2(19,0) | UV-Max:int2(39,62) | Real-Min:float3(0.077000,0.610000,0.000000) | Real-Max:float3(0.550000,0.610000,0.150000) | FaceIndex:2 | ObjectIndex:5 | bFlip:1\n    else if((PixelCoord.x >= 19 && PixelCoord.y >= 0 && PixelCoord.x < 39 && PixelCoord.y < 62))//Id:32\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(19, 0))/vec2(19, 61);\n        vec3 ObjectSpace_Position = vec3(mix(0.077000, 0.550000, AlphaCoord.y), 0.610000, mix(0.000000, 0.150000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 5);\n    }\n//UV-Min:int2(27,81) | UV-Max:int2(47,108) | Real-Min:float3(0.425000,0.060000,0.000000) | Real-Max:float3(0.425000,0.265000,0.150000) | FaceIndex:0 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 27 && PixelCoord.y >= 81 && PixelCoord.x < 47 && PixelCoord.y < 108))//Id:6\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(27, 81))/vec2(19, 26);\n        vec3 ObjectSpace_Position = vec3(0.425000, mix(0.060000, 0.265000, AlphaCoord.y), mix(0.000000, 0.150000, AlphaCoord.x));//0\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 1);\n    }\n//UV-Min:int2(0,107) | UV-Max:int2(20,127) | Real-Min:float3(0.425000,0.520000,0.000000) | Real-Max:float3(0.425000,0.670000,0.150000) | FaceIndex:0 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 107 && PixelCoord.x < 20 && PixelCoord.y < 127))//Id:12\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 107))/vec2(19, 19);\n        vec3 ObjectSpace_Position = vec3(0.425000, mix(0.520000, 0.670000, AlphaCoord.x), mix(0.000000, 0.150000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 2);\n    }\n//UV-Min:int2(39,0) | UV-Max:int2(59,26) | Real-Min:float3(0.425000,0.520000,0.000000) | Real-Max:float3(0.625000,0.520000,0.150000) | FaceIndex:2 | ObjectIndex:2 | bFlip:1\n    else if((PixelCoord.x >= 39 && PixelCoord.y >= 0 && PixelCoord.x < 59 && PixelCoord.y < 26))//Id:14\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(39, 0))/vec2(19, 25);\n        vec3 ObjectSpace_Position = vec3(mix(0.425000, 0.625000, AlphaCoord.y), 0.520000, mix(0.000000, 0.150000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 2);\n    }\n//UV-Min:int2(39,26) | UV-Max:int2(66,52) | Real-Min:float3(0.425000,0.060000,0.000000) | Real-Max:float3(0.625000,0.265000,0.000000) | FaceIndex:4 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 39 && PixelCoord.y >= 26 && PixelCoord.x < 66 && PixelCoord.y < 52))//Id:10\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(39, 26))/vec2(26, 25);\n        vec3 ObjectSpace_Position = vec3(mix(0.425000, 0.625000, AlphaCoord.y), mix(0.060000, 0.265000, AlphaCoord.x),0.000000);//2\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 1);\n    }\n//UV-Min:int2(47,81) | UV-Max:int2(67,107) | Real-Min:float3(0.425000,0.265000,0.000000) | Real-Max:float3(0.625000,0.265000,0.150000) | FaceIndex:3 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 47 && PixelCoord.y >= 81 && PixelCoord.x < 67 && PixelCoord.y < 107))//Id:9\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(47, 81))/vec2(19, 25);\n        vec3 ObjectSpace_Position = vec3(mix(0.425000, 0.625000, AlphaCoord.y), 0.265000, mix(0.000000, 0.150000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 1);\n    }\n//UV-Min:int2(20,108) | UV-Max:int2(40,127) | Real-Min:float3(0.100000,0.000000,0.000000) | Real-Max:float3(0.100000,0.140000,0.150000) | FaceIndex:0 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 20 && PixelCoord.y >= 108 && PixelCoord.x < 40 && PixelCoord.y < 127))//Id:18\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(20, 108))/vec2(19, 18);\n        vec3 ObjectSpace_Position = vec3(0.100000, mix(0.000000, 0.140000, AlphaCoord.y), mix(0.000000, 0.150000, AlphaCoord.x));//0\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 3);\n    }\n//UV-Min:int2(66,0) | UV-Max:int2(86,41) | Real-Min:float3(0.315000,0.405000,0.000000) | Real-Max:float3(0.625000,0.405000,0.150000) | FaceIndex:3 | ObjectIndex:4 | bFlip:1\n    else if((PixelCoord.x >= 66 && PixelCoord.y >= 0 && PixelCoord.x < 86 && PixelCoord.y < 41))//Id:27\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(66, 0))/vec2(19, 40);\n        vec3 ObjectSpace_Position = vec3(mix(0.315000, 0.625000, AlphaCoord.y), 0.405000, mix(0.000000, 0.150000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 4);\n    }\n//UV-Min:int2(62,52) | UV-Max:int2(82,78) | Real-Min:float3(0.425000,0.520000,0.000000) | Real-Max:float3(0.625000,0.670000,0.000000) | FaceIndex:4 | ObjectIndex:2 | bFlip:1\n    else if((PixelCoord.x >= 62 && PixelCoord.y >= 52 && PixelCoord.x < 82 && PixelCoord.y < 78))//Id:16\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(62, 52))/vec2(19, 25);\n        vec3 ObjectSpace_Position = vec3(mix(0.425000, 0.625000, AlphaCoord.y), mix(0.520000, 0.670000, AlphaCoord.x),0.000000);//2\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 2);\n    }\n//UV-Min:int2(40,108) | UV-Max:int2(102,128) | Real-Min:float3(0.077000,0.750000,0.000000) | Real-Max:float3(0.550000,0.750000,0.150000) | FaceIndex:3 | ObjectIndex:5 | bFlip:0\n    else if((PixelCoord.x >= 40 && PixelCoord.y >= 108 && PixelCoord.x < 102 && PixelCoord.y < 128))//Id:33\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(40, 108))/vec2(61, 19);\n        vec3 ObjectSpace_Position = vec3(mix(0.077000, 0.550000, AlphaCoord.x), 0.750000, mix(0.000000, 0.150000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 5);\n    }\n//UV-Min:int2(86,0) | UV-Max:int2(105,68) | Real-Min:float3(0.100000,0.000000,0.000000) | Real-Max:float3(0.625000,0.140000,0.000000) | FaceIndex:4 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 86 && PixelCoord.y >= 0 && PixelCoord.x < 105 && PixelCoord.y < 68))//Id:22\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(86, 0))/vec2(18, 67);\n        vec3 ObjectSpace_Position = vec3(mix(0.100000, 0.625000, AlphaCoord.y), mix(0.000000, 0.140000, AlphaCoord.x),0.000000);//2\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 3);\n    }\n//UV-Min:int2(105,0) | UV-Max:int2(131,79) | Real-Min:float3(0.000000,0.060000,0.000000) | Real-Max:float3(0.200000,0.670000,0.000000) | FaceIndex:4 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 105 && PixelCoord.y >= 0 && PixelCoord.x < 131 && PixelCoord.y < 79))//Id:4\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(105, 0))/vec2(25, 78);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.200000, AlphaCoord.x), mix(0.060000, 0.670000, AlphaCoord.y),0.000000);//2\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 0);\n    }\n//UV-Min:int2(67,79) | UV-Max:int2(146,105) | Real-Min:float3(0.000000,0.060000,0.150000) | Real-Max:float3(0.200000,0.670000,0.150000) | FaceIndex:5 | ObjectIndex:0 | bFlip:1\n    else if((PixelCoord.x >= 67 && PixelCoord.y >= 79 && PixelCoord.x < 146 && PixelCoord.y < 105))//Id:5\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(67, 79))/vec2(78, 25);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.200000, AlphaCoord.y), mix(0.060000, 0.670000, AlphaCoord.x),0.150000);//2\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 0);\n    }\n//UV-Min:int2(102,105) | UV-Max:int2(121,125) | Real-Min:float3(0.625000,0.265000,0.000000) | Real-Max:float3(0.625000,0.405000,0.150000) | FaceIndex:1 | ObjectIndex:4 | bFlip:0\n    else if((PixelCoord.x >= 102 && PixelCoord.y >= 105 && PixelCoord.x < 121 && PixelCoord.y < 125))//Id:25\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(102, 105))/vec2(18, 19);\n        vec3 ObjectSpace_Position = vec3(0.625000, mix(0.265000, 0.405000, AlphaCoord.x), mix(0.000000, 0.150000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 4);\n    }\n//UV-Min:int2(131,0) | UV-Max:int2(151,68) | Real-Min:float3(0.100000,0.140000,0.000000) | Real-Max:float3(0.625000,0.140000,0.150000) | FaceIndex:3 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 131 && PixelCoord.y >= 0 && PixelCoord.x < 151 && PixelCoord.y < 68))//Id:21\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(131, 0))/vec2(19, 67);\n        vec3 ObjectSpace_Position = vec3(mix(0.100000, 0.625000, AlphaCoord.y), 0.140000, mix(0.000000, 0.150000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 3);\n    }\n//UV-Min:int2(121,105) | UV-Max:int2(147,125) | Real-Min:float3(0.000000,0.060000,0.000000) | Real-Max:float3(0.200000,0.060000,0.150000) | FaceIndex:2 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 121 && PixelCoord.y >= 105 && PixelCoord.x < 147 && PixelCoord.y < 125))//Id:2\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(121, 105))/vec2(25, 19);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.200000, AlphaCoord.x), 0.060000, mix(0.000000, 0.150000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 0);\n    }\n//UV-Min:int2(146,68) | UV-Max:int2(187,88) | Real-Min:float3(0.315000,0.265000,0.000000) | Real-Max:float3(0.625000,0.265000,0.150000) | FaceIndex:2 | ObjectIndex:4 | bFlip:0\n    else if((PixelCoord.x >= 146 && PixelCoord.y >= 68 && PixelCoord.x < 187 && PixelCoord.y < 88))//Id:26\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(146, 68))/vec2(40, 19);\n        vec3 ObjectSpace_Position = vec3(mix(0.315000, 0.625000, AlphaCoord.x), 0.265000, mix(0.000000, 0.150000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 4);\n    }\n//UV-Min:int2(147,88) | UV-Max:int2(226,108) | Real-Min:float3(0.000000,0.060000,0.000000) | Real-Max:float3(0.000000,0.670000,0.150000) | FaceIndex:0 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 147 && PixelCoord.y >= 88 && PixelCoord.x < 226 && PixelCoord.y < 108))//Id:0\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(147, 88))/vec2(78, 19);\n        vec3 ObjectSpace_Position = vec3(0.000000, mix(0.060000, 0.670000, AlphaCoord.x), mix(0.000000, 0.150000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 0);\n    }\n//UV-Min:int2(147,108) | UV-Max:int2(173,128) | Real-Min:float3(0.425000,0.670000,0.000000) | Real-Max:float3(0.625000,0.670000,0.150000) | FaceIndex:3 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 147 && PixelCoord.y >= 108 && PixelCoord.x < 173 && PixelCoord.y < 128))//Id:15\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(147, 108))/vec2(25, 19);\n        vec3 ObjectSpace_Position = vec3(mix(0.425000, 0.625000, AlphaCoord.x), 0.670000, mix(0.000000, 0.150000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 2);\n    }\n//UV-Min:int2(151,0) | UV-Max:int2(170,20) | Real-Min:float3(0.315000,0.265000,0.000000) | Real-Max:float3(0.315000,0.405000,0.150000) | FaceIndex:0 | ObjectIndex:4 | bFlip:0\n    else if((PixelCoord.x >= 151 && PixelCoord.y >= 0 && PixelCoord.x < 170 && PixelCoord.y < 20))//Id:24\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(151, 0))/vec2(18, 19);\n        vec3 ObjectSpace_Position = vec3(0.315000, mix(0.265000, 0.405000, AlphaCoord.x), mix(0.000000, 0.150000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 4);\n    }\n//UV-Min:int2(170,0) | UV-Max:int2(189,68) | Real-Min:float3(0.100000,0.000000,0.150000) | Real-Max:float3(0.625000,0.140000,0.150000) | FaceIndex:5 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 170 && PixelCoord.y >= 0 && PixelCoord.x < 189 && PixelCoord.y < 68))//Id:23\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(170, 0))/vec2(18, 67);\n        vec3 ObjectSpace_Position = vec3(mix(0.100000, 0.625000, AlphaCoord.y), mix(0.000000, 0.140000, AlphaCoord.x),0.150000);//2\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 3);\n    }\n//UV-Min:int2(173,108) | UV-Max:int2(252,128) | Real-Min:float3(0.200000,0.060000,0.000000) | Real-Max:float3(0.200000,0.670000,0.150000) | FaceIndex:1 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 173 && PixelCoord.y >= 108 && PixelCoord.x < 252 && PixelCoord.y < 128))//Id:1\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(173, 108))/vec2(78, 19);\n        vec3 ObjectSpace_Position = vec3(0.200000, mix(0.060000, 0.670000, AlphaCoord.x), mix(0.000000, 0.150000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 0);\n    }\n//UV-Min:int2(151,20) | UV-Max:int2(170,61) | Real-Min:float3(0.315000,0.265000,0.150000) | Real-Max:float3(0.625000,0.405000,0.150000) | FaceIndex:5 | ObjectIndex:4 | bFlip:1\n    else if((PixelCoord.x >= 151 && PixelCoord.y >= 20 && PixelCoord.x < 170 && PixelCoord.y < 61))//Id:29\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(151, 20))/vec2(18, 40);\n        vec3 ObjectSpace_Position = vec3(mix(0.315000, 0.625000, AlphaCoord.y), mix(0.265000, 0.405000, AlphaCoord.x),0.150000);//2\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 4);\n    }\n//UV-Min:int2(189,0) | UV-Max:int2(209,68) | Real-Min:float3(0.100000,0.000000,0.000000) | Real-Max:float3(0.625000,0.000000,0.150000) | FaceIndex:2 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 189 && PixelCoord.y >= 0 && PixelCoord.x < 209 && PixelCoord.y < 68))//Id:20\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(189, 0))/vec2(19, 67);\n        vec3 ObjectSpace_Position = vec3(mix(0.100000, 0.625000, AlphaCoord.y), 0.000000, mix(0.000000, 0.150000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 3);\n    }\n//UV-Min:int2(187,68) | UV-Max:int2(207,87) | Real-Min:float3(0.550000,0.610000,0.000000) | Real-Max:float3(0.550000,0.750000,0.150000) | FaceIndex:1 | ObjectIndex:5 | bFlip:1\n    else if((PixelCoord.x >= 187 && PixelCoord.y >= 68 && PixelCoord.x < 207 && PixelCoord.y < 87))//Id:31\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(187, 68))/vec2(19, 18);\n        vec3 ObjectSpace_Position = vec3(0.550000, mix(0.610000, 0.750000, AlphaCoord.y), mix(0.000000, 0.150000, AlphaCoord.x));//0\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 5);\n    }\n//UV-Min:int2(207,68) | UV-Max:int2(226,88) | Real-Min:float3(0.077000,0.610000,0.000000) | Real-Max:float3(0.077000,0.750000,0.150000) | FaceIndex:0 | ObjectIndex:5 | bFlip:0\n    else if((PixelCoord.x >= 207 && PixelCoord.y >= 68 && PixelCoord.x < 226 && PixelCoord.y < 88))//Id:30\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(207, 68))/vec2(18, 19);\n        vec3 ObjectSpace_Position = vec3(0.077000, mix(0.610000, 0.750000, AlphaCoord.x), mix(0.000000, 0.150000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 5);\n    }\n//UV-Min:int2(209,0) | UV-Max:int2(250,19) | Real-Min:float3(0.315000,0.265000,0.000000) | Real-Max:float3(0.625000,0.405000,0.000000) | FaceIndex:4 | ObjectIndex:4 | bFlip:0\n    else if((PixelCoord.x >= 209 && PixelCoord.y >= 0 && PixelCoord.x < 250 && PixelCoord.y < 19))//Id:28\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(209, 0))/vec2(40, 18);\n        vec3 ObjectSpace_Position = vec3(mix(0.315000, 0.625000, AlphaCoord.x), mix(0.265000, 0.405000, AlphaCoord.y),0.000000);//2\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 4);\n    }\n//UV-Min:int2(209,19) | UV-Max:int2(229,46) | Real-Min:float3(0.625000,0.060000,0.000000) | Real-Max:float3(0.625000,0.265000,0.150000) | FaceIndex:1 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 209 && PixelCoord.y >= 19 && PixelCoord.x < 229 && PixelCoord.y < 46))//Id:7\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(209, 19))/vec2(19, 26);\n        vec3 ObjectSpace_Position = vec3(0.625000, mix(0.060000, 0.265000, AlphaCoord.y), mix(0.000000, 0.150000, AlphaCoord.x));//0\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 1);\n    }\n//UV-Min:int2(209,46) | UV-Max:int2(235,66) | Real-Min:float3(0.425000,0.060000,0.000000) | Real-Max:float3(0.625000,0.060000,0.150000) | FaceIndex:2 | ObjectIndex:1 | bFlip:0\n    else if((PixelCoord.x >= 209 && PixelCoord.y >= 46 && PixelCoord.x < 235 && PixelCoord.y < 66))//Id:8\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(209, 46))/vec2(25, 19);\n        vec3 ObjectSpace_Position = vec3(mix(0.425000, 0.625000, AlphaCoord.x), 0.060000, mix(0.000000, 0.150000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 1);\n    }\n//UV-Min:int2(226,66) | UV-Max:int2(252,86) | Real-Min:float3(0.425000,0.520000,0.150000) | Real-Max:float3(0.625000,0.670000,0.150000) | FaceIndex:5 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 226 && PixelCoord.y >= 66 && PixelCoord.x < 252 && PixelCoord.y < 86))//Id:17\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(226, 66))/vec2(25, 19);\n        vec3 ObjectSpace_Position = vec3(mix(0.425000, 0.625000, AlphaCoord.x), mix(0.520000, 0.670000, AlphaCoord.y),0.150000);//2\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 2);\n    }\n//UV-Min:int2(226,86) | UV-Max:int2(245,106) | Real-Min:float3(0.625000,0.000000,0.000000) | Real-Max:float3(0.625000,0.140000,0.150000) | FaceIndex:1 | ObjectIndex:3 | bFlip:0\n    else if((PixelCoord.x >= 226 && PixelCoord.y >= 86 && PixelCoord.x < 245 && PixelCoord.y < 106))//Id:19\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(226, 86))/vec2(18, 19);\n        vec3 ObjectSpace_Position = vec3(0.625000, mix(0.000000, 0.140000, AlphaCoord.x), mix(0.000000, 0.150000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 3);\n    }\n//UV-Min:int2(229,19) | UV-Max:int2(249,39) | Real-Min:float3(0.625000,0.520000,0.000000) | Real-Max:float3(0.625000,0.670000,0.150000) | FaceIndex:1 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 229 && PixelCoord.y >= 19 && PixelCoord.x < 249 && PixelCoord.y < 39))//Id:13\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(229, 19))/vec2(19, 19);\n        vec3 ObjectSpace_Position = vec3(0.625000, mix(0.520000, 0.670000, AlphaCoord.x), mix(0.000000, 0.150000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 2);\n    }\n//UV-Min:int2(235,39) | UV-Max:int2(255,65) | Real-Min:float3(0.000000,0.670000,0.000000) | Real-Max:float3(0.200000,0.670000,0.150000) | FaceIndex:3 | ObjectIndex:0 | bFlip:1\n    else if((PixelCoord.x >= 235 && PixelCoord.y >= 39 && PixelCoord.x < 255 && PixelCoord.y < 65))//Id:3\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(235, 39))/vec2(19, 25);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.200000, AlphaCoord.y), 0.670000, mix(0.000000, 0.150000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.350000, -1.000000, -0.200000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 0);\n    }\n    else\n    {\n        return Point(vec4(0.0,0.0,0.0,-1.0), vec4(0.0,0.0,0.0,-1.0),-1,-1);\n    }\n}\n//####\n//####\nvec2 PositionToLightmap_G(Ray TempRay, float HitDistance, vec3 HitNormal, int CubeIndex)\n{\n    vec3 ObjectSpace_Position = TempRay.origin + TempRay.dir * HitDistance;\n    int FaceIndex = NormalToIndex(HitNormal);\n    int EigenIndex = FaceIndex + 6 * CubeIndex;\n//UV-Min:int2(0,0) | UV-Max:int2(19,62) | Real-Min:float3(0.077000,0.610000,0.150000) | Real-Max:float3(0.550000,0.750000,0.150000) | FaceIndex:5 | ObjectIndex:5 | bFlip:1\n    if(EigenIndex == 35)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.077000, 0.610000)) / vec2(0.473000, 0.140000);\n        return vec2(mix(0.500000, 18.500000, AlphaCoord.y), mix(0.500000, 61.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(0,62) | UV-Max:int2(62,81) | Real-Min:float3(0.077000,0.610000,0.000000) | Real-Max:float3(0.550000,0.750000,0.000000) | FaceIndex:4 | ObjectIndex:5 | bFlip:0\n    else if(EigenIndex == 34)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.077000, 0.610000)) / vec2(0.473000, 0.140000);\n        return vec2(mix(0.500000, 61.500000, AlphaCoord.x), mix(62.500000, 80.500000, AlphaCoord.y));//2N\n    }\n//UV-Min:int2(0,81) | UV-Max:int2(27,107) | Real-Min:float3(0.425000,0.060000,0.150000) | Real-Max:float3(0.625000,0.265000,0.150000) | FaceIndex:5 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 11)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.425000, 0.060000)) / vec2(0.200000, 0.205000);\n        return vec2(mix(0.500000, 26.500000, AlphaCoord.y), mix(81.500000, 106.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(19,0) | UV-Max:int2(39,62) | Real-Min:float3(0.077000,0.610000,0.000000) | Real-Max:float3(0.550000,0.610000,0.150000) | FaceIndex:2 | ObjectIndex:5 | bFlip:1\n    else if(EigenIndex == 32)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.077000, 0.000000)) / vec2(0.473000, 0.150000);\n        return vec2(mix(19.500000, 38.500000, AlphaCoord.y), mix(0.500000, 61.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(27,81) | UV-Max:int2(47,108) | Real-Min:float3(0.425000,0.060000,0.000000) | Real-Max:float3(0.425000,0.265000,0.150000) | FaceIndex:0 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 6)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.060000, 0.000000)) / vec2(0.205000, 0.150000);\n        return vec2(mix(27.500000, 46.500000, AlphaCoord.y), mix(81.500000, 107.500000, AlphaCoord.x));//0F\n    }\n//UV-Min:int2(0,107) | UV-Max:int2(20,127) | Real-Min:float3(0.425000,0.520000,0.000000) | Real-Max:float3(0.425000,0.670000,0.150000) | FaceIndex:0 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 12)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.520000, 0.000000)) / vec2(0.150000, 0.150000);\n        return vec2(mix(0.500000, 19.500000, AlphaCoord.x), mix(107.500000, 126.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(39,0) | UV-Max:int2(59,26) | Real-Min:float3(0.425000,0.520000,0.000000) | Real-Max:float3(0.625000,0.520000,0.150000) | FaceIndex:2 | ObjectIndex:2 | bFlip:1\n    else if(EigenIndex == 14)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.425000, 0.000000)) / vec2(0.200000, 0.150000);\n        return vec2(mix(39.500000, 58.500000, AlphaCoord.y), mix(0.500000, 25.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(39,26) | UV-Max:int2(66,52) | Real-Min:float3(0.425000,0.060000,0.000000) | Real-Max:float3(0.625000,0.265000,0.000000) | FaceIndex:4 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 10)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.425000, 0.060000)) / vec2(0.200000, 0.205000);\n        return vec2(mix(39.500000, 65.500000, AlphaCoord.y), mix(26.500000, 51.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(47,81) | UV-Max:int2(67,107) | Real-Min:float3(0.425000,0.265000,0.000000) | Real-Max:float3(0.625000,0.265000,0.150000) | FaceIndex:3 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 9)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.425000, 0.000000)) / vec2(0.200000, 0.150000);\n        return vec2(mix(47.500000, 66.500000, AlphaCoord.y), mix(81.500000, 106.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(20,108) | UV-Max:int2(40,127) | Real-Min:float3(0.100000,0.000000,0.000000) | Real-Max:float3(0.100000,0.140000,0.150000) | FaceIndex:0 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 18)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.000000, 0.000000)) / vec2(0.140000, 0.150000);\n        return vec2(mix(20.500000, 39.500000, AlphaCoord.y), mix(108.500000, 126.500000, AlphaCoord.x));//0F\n    }\n//UV-Min:int2(66,0) | UV-Max:int2(86,41) | Real-Min:float3(0.315000,0.405000,0.000000) | Real-Max:float3(0.625000,0.405000,0.150000) | FaceIndex:3 | ObjectIndex:4 | bFlip:1\n    else if(EigenIndex == 27)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.315000, 0.000000)) / vec2(0.310000, 0.150000);\n        return vec2(mix(66.500000, 85.500000, AlphaCoord.y), mix(0.500000, 40.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(62,52) | UV-Max:int2(82,78) | Real-Min:float3(0.425000,0.520000,0.000000) | Real-Max:float3(0.625000,0.670000,0.000000) | FaceIndex:4 | ObjectIndex:2 | bFlip:1\n    else if(EigenIndex == 16)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.425000, 0.520000)) / vec2(0.200000, 0.150000);\n        return vec2(mix(62.500000, 81.500000, AlphaCoord.y), mix(52.500000, 77.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(40,108) | UV-Max:int2(102,128) | Real-Min:float3(0.077000,0.750000,0.000000) | Real-Max:float3(0.550000,0.750000,0.150000) | FaceIndex:3 | ObjectIndex:5 | bFlip:0\n    else if(EigenIndex == 33)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.077000, 0.000000)) / vec2(0.473000, 0.150000);\n        return vec2(mix(40.500000, 101.500000, AlphaCoord.x), mix(108.500000, 127.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(86,0) | UV-Max:int2(105,68) | Real-Min:float3(0.100000,0.000000,0.000000) | Real-Max:float3(0.625000,0.140000,0.000000) | FaceIndex:4 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 22)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.100000, 0.000000)) / vec2(0.525000, 0.140000);\n        return vec2(mix(86.500000, 104.500000, AlphaCoord.y), mix(0.500000, 67.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(105,0) | UV-Max:int2(131,79) | Real-Min:float3(0.000000,0.060000,0.000000) | Real-Max:float3(0.200000,0.670000,0.000000) | FaceIndex:4 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 4)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.000000, 0.060000)) / vec2(0.200000, 0.610000);\n        return vec2(mix(105.500000, 130.500000, AlphaCoord.x), mix(0.500000, 78.500000, AlphaCoord.y));//2N\n    }\n//UV-Min:int2(67,79) | UV-Max:int2(146,105) | Real-Min:float3(0.000000,0.060000,0.150000) | Real-Max:float3(0.200000,0.670000,0.150000) | FaceIndex:5 | ObjectIndex:0 | bFlip:1\n    else if(EigenIndex == 5)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.000000, 0.060000)) / vec2(0.200000, 0.610000);\n        return vec2(mix(67.500000, 145.500000, AlphaCoord.y), mix(79.500000, 104.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(102,105) | UV-Max:int2(121,125) | Real-Min:float3(0.625000,0.265000,0.000000) | Real-Max:float3(0.625000,0.405000,0.150000) | FaceIndex:1 | ObjectIndex:4 | bFlip:0\n    else if(EigenIndex == 25)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.265000, 0.000000)) / vec2(0.140000, 0.150000);\n        return vec2(mix(102.500000, 120.500000, AlphaCoord.x), mix(105.500000, 124.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(131,0) | UV-Max:int2(151,68) | Real-Min:float3(0.100000,0.140000,0.000000) | Real-Max:float3(0.625000,0.140000,0.150000) | FaceIndex:3 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 21)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.100000, 0.000000)) / vec2(0.525000, 0.150000);\n        return vec2(mix(131.500000, 150.500000, AlphaCoord.y), mix(0.500000, 67.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(121,105) | UV-Max:int2(147,125) | Real-Min:float3(0.000000,0.060000,0.000000) | Real-Max:float3(0.200000,0.060000,0.150000) | FaceIndex:2 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 2)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.000000, 0.000000)) / vec2(0.200000, 0.150000);\n        return vec2(mix(121.500000, 146.500000, AlphaCoord.x), mix(105.500000, 124.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(146,68) | UV-Max:int2(187,88) | Real-Min:float3(0.315000,0.265000,0.000000) | Real-Max:float3(0.625000,0.265000,0.150000) | FaceIndex:2 | ObjectIndex:4 | bFlip:0\n    else if(EigenIndex == 26)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.315000, 0.000000)) / vec2(0.310000, 0.150000);\n        return vec2(mix(146.500000, 186.500000, AlphaCoord.x), mix(68.500000, 87.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(147,88) | UV-Max:int2(226,108) | Real-Min:float3(0.000000,0.060000,0.000000) | Real-Max:float3(0.000000,0.670000,0.150000) | FaceIndex:0 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 0)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.060000, 0.000000)) / vec2(0.610000, 0.150000);\n        return vec2(mix(147.500000, 225.500000, AlphaCoord.x), mix(88.500000, 107.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(147,108) | UV-Max:int2(173,128) | Real-Min:float3(0.425000,0.670000,0.000000) | Real-Max:float3(0.625000,0.670000,0.150000) | FaceIndex:3 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 15)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.425000, 0.000000)) / vec2(0.200000, 0.150000);\n        return vec2(mix(147.500000, 172.500000, AlphaCoord.x), mix(108.500000, 127.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(151,0) | UV-Max:int2(170,20) | Real-Min:float3(0.315000,0.265000,0.000000) | Real-Max:float3(0.315000,0.405000,0.150000) | FaceIndex:0 | ObjectIndex:4 | bFlip:0\n    else if(EigenIndex == 24)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.265000, 0.000000)) / vec2(0.140000, 0.150000);\n        return vec2(mix(151.500000, 169.500000, AlphaCoord.x), mix(0.500000, 19.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(170,0) | UV-Max:int2(189,68) | Real-Min:float3(0.100000,0.000000,0.150000) | Real-Max:float3(0.625000,0.140000,0.150000) | FaceIndex:5 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 23)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.100000, 0.000000)) / vec2(0.525000, 0.140000);\n        return vec2(mix(170.500000, 188.500000, AlphaCoord.y), mix(0.500000, 67.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(173,108) | UV-Max:int2(252,128) | Real-Min:float3(0.200000,0.060000,0.000000) | Real-Max:float3(0.200000,0.670000,0.150000) | FaceIndex:1 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 1)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.060000, 0.000000)) / vec2(0.610000, 0.150000);\n        return vec2(mix(173.500000, 251.500000, AlphaCoord.x), mix(108.500000, 127.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(151,20) | UV-Max:int2(170,61) | Real-Min:float3(0.315000,0.265000,0.150000) | Real-Max:float3(0.625000,0.405000,0.150000) | FaceIndex:5 | ObjectIndex:4 | bFlip:1\n    else if(EigenIndex == 29)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.315000, 0.265000)) / vec2(0.310000, 0.140000);\n        return vec2(mix(151.500000, 169.500000, AlphaCoord.y), mix(20.500000, 60.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(189,0) | UV-Max:int2(209,68) | Real-Min:float3(0.100000,0.000000,0.000000) | Real-Max:float3(0.625000,0.000000,0.150000) | FaceIndex:2 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 20)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.100000, 0.000000)) / vec2(0.525000, 0.150000);\n        return vec2(mix(189.500000, 208.500000, AlphaCoord.y), mix(0.500000, 67.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(187,68) | UV-Max:int2(207,87) | Real-Min:float3(0.550000,0.610000,0.000000) | Real-Max:float3(0.550000,0.750000,0.150000) | FaceIndex:1 | ObjectIndex:5 | bFlip:1\n    else if(EigenIndex == 31)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.610000, 0.000000)) / vec2(0.140000, 0.150000);\n        return vec2(mix(187.500000, 206.500000, AlphaCoord.y), mix(68.500000, 86.500000, AlphaCoord.x));//0F\n    }\n//UV-Min:int2(207,68) | UV-Max:int2(226,88) | Real-Min:float3(0.077000,0.610000,0.000000) | Real-Max:float3(0.077000,0.750000,0.150000) | FaceIndex:0 | ObjectIndex:5 | bFlip:0\n    else if(EigenIndex == 30)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.610000, 0.000000)) / vec2(0.140000, 0.150000);\n        return vec2(mix(207.500000, 225.500000, AlphaCoord.x), mix(68.500000, 87.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(209,0) | UV-Max:int2(250,19) | Real-Min:float3(0.315000,0.265000,0.000000) | Real-Max:float3(0.625000,0.405000,0.000000) | FaceIndex:4 | ObjectIndex:4 | bFlip:0\n    else if(EigenIndex == 28)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.315000, 0.265000)) / vec2(0.310000, 0.140000);\n        return vec2(mix(209.500000, 249.500000, AlphaCoord.x), mix(0.500000, 18.500000, AlphaCoord.y));//2N\n    }\n//UV-Min:int2(209,19) | UV-Max:int2(229,46) | Real-Min:float3(0.625000,0.060000,0.000000) | Real-Max:float3(0.625000,0.265000,0.150000) | FaceIndex:1 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 7)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.060000, 0.000000)) / vec2(0.205000, 0.150000);\n        return vec2(mix(209.500000, 228.500000, AlphaCoord.y), mix(19.500000, 45.500000, AlphaCoord.x));//0F\n    }\n//UV-Min:int2(209,46) | UV-Max:int2(235,66) | Real-Min:float3(0.425000,0.060000,0.000000) | Real-Max:float3(0.625000,0.060000,0.150000) | FaceIndex:2 | ObjectIndex:1 | bFlip:0\n    else if(EigenIndex == 8)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.425000, 0.000000)) / vec2(0.200000, 0.150000);\n        return vec2(mix(209.500000, 234.500000, AlphaCoord.x), mix(46.500000, 65.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(226,66) | UV-Max:int2(252,86) | Real-Min:float3(0.425000,0.520000,0.150000) | Real-Max:float3(0.625000,0.670000,0.150000) | FaceIndex:5 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 17)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.425000, 0.520000)) / vec2(0.200000, 0.150000);\n        return vec2(mix(226.500000, 251.500000, AlphaCoord.x), mix(66.500000, 85.500000, AlphaCoord.y));//2N\n    }\n//UV-Min:int2(226,86) | UV-Max:int2(245,106) | Real-Min:float3(0.625000,0.000000,0.000000) | Real-Max:float3(0.625000,0.140000,0.150000) | FaceIndex:1 | ObjectIndex:3 | bFlip:0\n    else if(EigenIndex == 19)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.000000, 0.000000)) / vec2(0.140000, 0.150000);\n        return vec2(mix(226.500000, 244.500000, AlphaCoord.x), mix(86.500000, 105.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(229,19) | UV-Max:int2(249,39) | Real-Min:float3(0.625000,0.520000,0.000000) | Real-Max:float3(0.625000,0.670000,0.150000) | FaceIndex:1 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 13)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.520000, 0.000000)) / vec2(0.150000, 0.150000);\n        return vec2(mix(229.500000, 248.500000, AlphaCoord.x), mix(19.500000, 38.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(235,39) | UV-Max:int2(255,65) | Real-Min:float3(0.000000,0.670000,0.000000) | Real-Max:float3(0.200000,0.670000,0.150000) | FaceIndex:3 | ObjectIndex:0 | bFlip:1\n    else if(EigenIndex == 3)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.000000, 0.000000)) / vec2(0.200000, 0.150000);\n        return vec2(mix(235.500000, 254.500000, AlphaCoord.y), mix(39.500000, 64.500000, AlphaCoord.x));//1F\n    }\n    else\n    {\n        return vec2(0.0, 0.0);\n    }\n}\n//####\n//####\nPoint LightmapToPosition_21(vec2 UV)\n{\n    ivec2 PixelCoord = ivec2(UV);\n    mat4 RotationMatrix = rotate_y(0.000000);\n    mat4 TransposeRotationMatrix = transpose(RotationMatrix);\n//UV-Min:int2(0,0) | UV-Max:int2(12,21) | Real-Min:float3(0.237000,0.182500,0.000000) | Real-Max:float3(0.307000,0.182500,0.125000) | FaceIndex:2 | ObjectIndex:1 | bFlip:0\n    if((PixelCoord.x >= 0 && PixelCoord.y >= 0 && PixelCoord.x < 12 && PixelCoord.y < 21))//Id:8\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 0))/vec2(11, 20);\n        vec3 ObjectSpace_Position = vec3(mix(0.237000, 0.307000, AlphaCoord.x), 0.182500, mix(0.000000, 0.125000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 1);\n    }\n//UV-Min:int2(0,21) | UV-Max:int2(21,33) | Real-Min:float3(0.237000,0.340000,0.000000) | Real-Max:float3(0.307000,0.340000,0.125000) | FaceIndex:3 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 21 && PixelCoord.x < 21 && PixelCoord.y < 33))//Id:9\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 21))/vec2(20, 11);\n        vec3 ObjectSpace_Position = vec3(mix(0.237000, 0.307000, AlphaCoord.y), 0.340000, mix(0.000000, 0.125000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 1);\n    }\n//UV-Min:int2(0,33) | UV-Max:int2(48,54) | Real-Min:float3(0.022000,0.070000,0.000000) | Real-Max:float3(0.307000,0.070000,0.125000) | FaceIndex:3 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 33 && PixelCoord.x < 48 && PixelCoord.y < 54))//Id:15\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 33))/vec2(47, 20);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.307000, AlphaCoord.x), 0.070000, mix(0.000000, 0.125000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 2);\n    }\n//UV-Min:int2(0,54) | UV-Max:int2(21,81) | Real-Min:float3(0.307000,0.182500,0.000000) | Real-Max:float3(0.307000,0.340000,0.125000) | FaceIndex:1 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 54 && PixelCoord.x < 21 && PixelCoord.y < 81))//Id:7\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 54))/vec2(20, 26);\n        vec3 ObjectSpace_Position = vec3(0.307000, mix(0.182500, 0.340000, AlphaCoord.y), mix(0.000000, 0.125000, AlphaCoord.x));//0\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 1);\n    }\n//UV-Min:int2(0,81) | UV-Max:int2(48,93) | Real-Min:float3(0.022000,0.000000,0.125000) | Real-Max:float3(0.307000,0.070000,0.125000) | FaceIndex:5 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 81 && PixelCoord.x < 48 && PixelCoord.y < 93))//Id:17\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 81))/vec2(47, 11);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.307000, AlphaCoord.x), mix(0.000000, 0.070000, AlphaCoord.y),0.125000);//2\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 2);\n    }\n//UV-Min:int2(0,93) | UV-Max:int2(42,105) | Real-Min:float3(0.022000,0.305000,0.000000) | Real-Max:float3(0.272000,0.375000,0.000000) | FaceIndex:4 | ObjectIndex:4 | bFlip:0\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 93 && PixelCoord.x < 42 && PixelCoord.y < 105))//Id:28\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 93))/vec2(41, 11);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.272000, AlphaCoord.x), mix(0.305000, 0.375000, AlphaCoord.y),0.000000);//2\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 4);\n    }\n//UV-Min:int2(48,0) | UV-Max:int2(69,42) | Real-Min:float3(0.022000,0.144000,0.000000) | Real-Max:float3(0.272000,0.144000,0.125000) | FaceIndex:2 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 48 && PixelCoord.y >= 0 && PixelCoord.x < 69 && PixelCoord.y < 42))//Id:20\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(48, 0))/vec2(20, 41);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.272000, AlphaCoord.y), 0.144000, mix(0.000000, 0.125000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 3);\n    }\n//UV-Min:int2(48,42) | UV-Max:int2(69,84) | Real-Min:float3(0.022000,0.214000,0.000000) | Real-Max:float3(0.272000,0.214000,0.125000) | FaceIndex:3 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 48 && PixelCoord.y >= 42 && PixelCoord.x < 69 && PixelCoord.y < 84))//Id:21\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(48, 42))/vec2(20, 41);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.272000, AlphaCoord.y), 0.214000, mix(0.000000, 0.125000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 3);\n    }\n//UV-Min:int2(0,105) | UV-Max:int2(31,126) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.000000,0.182500,0.125000) | FaceIndex:0 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 105 && PixelCoord.x < 31 && PixelCoord.y < 126))//Id:0\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 105))/vec2(30, 20);\n        vec3 ObjectSpace_Position = vec3(0.000000, mix(0.000000, 0.182500, AlphaCoord.x), mix(0.000000, 0.125000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 0);\n    }\n//UV-Min:int2(69,0) | UV-Max:int2(81,48) | Real-Min:float3(0.022000,0.000000,0.000000) | Real-Max:float3(0.307000,0.070000,0.000000) | FaceIndex:4 | ObjectIndex:2 | bFlip:1\n    else if((PixelCoord.x >= 69 && PixelCoord.y >= 0 && PixelCoord.x < 81 && PixelCoord.y < 48))//Id:16\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(69, 0))/vec2(11, 47);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.307000, AlphaCoord.y), mix(0.000000, 0.070000, AlphaCoord.x),0.000000);//2\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 2);\n    }\n//UV-Min:int2(31,105) | UV-Max:int2(73,126) | Real-Min:float3(0.022000,0.305000,0.000000) | Real-Max:float3(0.272000,0.305000,0.125000) | FaceIndex:2 | ObjectIndex:4 | bFlip:0\n    else if((PixelCoord.x >= 31 && PixelCoord.y >= 105 && PixelCoord.x < 73 && PixelCoord.y < 126))//Id:26\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(31, 105))/vec2(41, 20);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.272000, AlphaCoord.x), 0.305000, mix(0.000000, 0.125000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 4);\n    }\n//UV-Min:int2(69,48) | UV-Max:int2(81,90) | Real-Min:float3(0.022000,0.305000,0.125000) | Real-Max:float3(0.272000,0.375000,0.125000) | FaceIndex:5 | ObjectIndex:4 | bFlip:1\n    else if((PixelCoord.x >= 69 && PixelCoord.y >= 48 && PixelCoord.x < 81 && PixelCoord.y < 90))//Id:29\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(69, 48))/vec2(11, 41);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.272000, AlphaCoord.y), mix(0.305000, 0.375000, AlphaCoord.x),0.125000);//2\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 4);\n    }\n//UV-Min:int2(12,0) | UV-Max:int2(24,21) | Real-Min:float3(0.272000,0.305000,0.000000) | Real-Max:float3(0.272000,0.375000,0.125000) | FaceIndex:1 | ObjectIndex:4 | bFlip:0\n    else if((PixelCoord.x >= 12 && PixelCoord.y >= 0 && PixelCoord.x < 24 && PixelCoord.y < 21))//Id:25\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(12, 0))/vec2(11, 20);\n        vec3 ObjectSpace_Position = vec3(0.272000, mix(0.305000, 0.375000, AlphaCoord.x), mix(0.000000, 0.125000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 4);\n    }\n//UV-Min:int2(81,0) | UV-Max:int2(102,48) | Real-Min:float3(0.022000,0.000000,0.000000) | Real-Max:float3(0.307000,0.000000,0.125000) | FaceIndex:2 | ObjectIndex:2 | bFlip:1\n    else if((PixelCoord.x >= 81 && PixelCoord.y >= 0 && PixelCoord.x < 102 && PixelCoord.y < 48))//Id:14\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(81, 0))/vec2(20, 47);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.307000, AlphaCoord.y), 0.000000, mix(0.000000, 0.125000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 2);\n    }\n//UV-Min:int2(21,21) | UV-Max:int2(48,33) | Real-Min:float3(0.237000,0.182500,0.000000) | Real-Max:float3(0.307000,0.340000,0.000000) | FaceIndex:4 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 21 && PixelCoord.y >= 21 && PixelCoord.x < 48 && PixelCoord.y < 33))//Id:10\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(21, 21))/vec2(26, 11);\n        vec3 ObjectSpace_Position = vec3(mix(0.237000, 0.307000, AlphaCoord.y), mix(0.182500, 0.340000, AlphaCoord.x),0.000000);//2\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 1);\n    }\n//UV-Min:int2(42,93) | UV-Max:int2(73,105) | Real-Min:float3(0.000000,0.000000,0.125000) | Real-Max:float3(0.070000,0.182500,0.125000) | FaceIndex:5 | ObjectIndex:0 | bFlip:1\n    else if((PixelCoord.x >= 42 && PixelCoord.y >= 93 && PixelCoord.x < 73 && PixelCoord.y < 105))//Id:5\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(42, 93))/vec2(30, 11);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.070000, AlphaCoord.y), mix(0.000000, 0.182500, AlphaCoord.x),0.125000);//2\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 0);\n    }\n//UV-Min:int2(21,54) | UV-Max:int2(42,66) | Real-Min:float3(0.000000,0.182500,0.000000) | Real-Max:float3(0.070000,0.182500,0.125000) | FaceIndex:3 | ObjectIndex:0 | bFlip:1\n    else if((PixelCoord.x >= 21 && PixelCoord.y >= 54 && PixelCoord.x < 42 && PixelCoord.y < 66))//Id:3\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(21, 54))/vec2(20, 11);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.070000, AlphaCoord.y), 0.182500, mix(0.000000, 0.125000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 0);\n    }\n//UV-Min:int2(24,0) | UV-Max:int2(36,21) | Real-Min:float3(0.022000,0.305000,0.000000) | Real-Max:float3(0.022000,0.375000,0.125000) | FaceIndex:0 | ObjectIndex:4 | bFlip:0\n    else if((PixelCoord.x >= 24 && PixelCoord.y >= 0 && PixelCoord.x < 36 && PixelCoord.y < 21))//Id:24\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(24, 0))/vec2(11, 20);\n        vec3 ObjectSpace_Position = vec3(0.022000, mix(0.305000, 0.375000, AlphaCoord.x), mix(0.000000, 0.125000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 4);\n    }\n//UV-Min:int2(81,48) | UV-Max:int2(93,90) | Real-Min:float3(0.022000,0.144000,0.125000) | Real-Max:float3(0.272000,0.214000,0.125000) | FaceIndex:5 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 81 && PixelCoord.y >= 48 && PixelCoord.x < 93 && PixelCoord.y < 90))//Id:23\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(81, 48))/vec2(11, 41);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.272000, AlphaCoord.y), mix(0.144000, 0.214000, AlphaCoord.x),0.125000);//2\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 3);\n    }\n//UV-Min:int2(36,0) | UV-Max:int2(48,21) | Real-Min:float3(0.307000,0.000000,0.000000) | Real-Max:float3(0.307000,0.070000,0.125000) | FaceIndex:1 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 36 && PixelCoord.y >= 0 && PixelCoord.x < 48 && PixelCoord.y < 21))//Id:13\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(36, 0))/vec2(11, 20);\n        vec3 ObjectSpace_Position = vec3(0.307000, mix(0.000000, 0.070000, AlphaCoord.x), mix(0.000000, 0.125000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 2);\n    }\n//UV-Min:int2(93,48) | UV-Max:int2(114,90) | Real-Min:float3(0.022000,0.375000,0.000000) | Real-Max:float3(0.272000,0.375000,0.125000) | FaceIndex:3 | ObjectIndex:4 | bFlip:1\n    else if((PixelCoord.x >= 93 && PixelCoord.y >= 48 && PixelCoord.x < 114 && PixelCoord.y < 90))//Id:27\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(93, 48))/vec2(20, 41);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.272000, AlphaCoord.y), 0.375000, mix(0.000000, 0.125000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 4);\n    }\n//UV-Min:int2(73,90) | UV-Max:int2(104,111) | Real-Min:float3(0.070000,0.000000,0.000000) | Real-Max:float3(0.070000,0.182500,0.125000) | FaceIndex:1 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 73 && PixelCoord.y >= 90 && PixelCoord.x < 104 && PixelCoord.y < 111))//Id:1\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(73, 90))/vec2(30, 20);\n        vec3 ObjectSpace_Position = vec3(0.070000, mix(0.000000, 0.182500, AlphaCoord.x), mix(0.000000, 0.125000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 0);\n    }\n//UV-Min:int2(102,0) | UV-Max:int2(114,21) | Real-Min:float3(0.022000,0.000000,0.000000) | Real-Max:float3(0.022000,0.070000,0.125000) | FaceIndex:0 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 102 && PixelCoord.y >= 0 && PixelCoord.x < 114 && PixelCoord.y < 21))//Id:12\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(102, 0))/vec2(11, 20);\n        vec3 ObjectSpace_Position = vec3(0.022000, mix(0.000000, 0.070000, AlphaCoord.x), mix(0.000000, 0.125000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 2);\n    }\n//UV-Min:int2(21,66) | UV-Max:int2(48,78) | Real-Min:float3(0.237000,0.182500,0.125000) | Real-Max:float3(0.307000,0.340000,0.125000) | FaceIndex:5 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 21 && PixelCoord.y >= 66 && PixelCoord.x < 48 && PixelCoord.y < 78))//Id:11\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(21, 66))/vec2(26, 11);\n        vec3 ObjectSpace_Position = vec3(mix(0.237000, 0.307000, AlphaCoord.y), mix(0.182500, 0.340000, AlphaCoord.x),0.125000);//2\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 1);\n    }\n//UV-Min:int2(102,21) | UV-Max:int2(123,48) | Real-Min:float3(0.237000,0.182500,0.000000) | Real-Max:float3(0.237000,0.340000,0.125000) | FaceIndex:0 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 102 && PixelCoord.y >= 21 && PixelCoord.x < 123 && PixelCoord.y < 48))//Id:6\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(102, 21))/vec2(20, 26);\n        vec3 ObjectSpace_Position = vec3(0.237000, mix(0.182500, 0.340000, AlphaCoord.y), mix(0.000000, 0.125000, AlphaCoord.x));//0\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 1);\n    }\n//UV-Min:int2(104,90) | UV-Max:int2(116,111) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.070000,0.000000,0.125000) | FaceIndex:2 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 104 && PixelCoord.y >= 90 && PixelCoord.x < 116 && PixelCoord.y < 111))//Id:2\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(104, 90))/vec2(11, 20);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.070000, AlphaCoord.x), 0.000000, mix(0.000000, 0.125000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 0);\n    }\n//UV-Min:int2(114,48) | UV-Max:int2(126,90) | Real-Min:float3(0.022000,0.144000,0.000000) | Real-Max:float3(0.272000,0.214000,0.000000) | FaceIndex:4 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 114 && PixelCoord.y >= 48 && PixelCoord.x < 126 && PixelCoord.y < 90))//Id:22\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(114, 48))/vec2(11, 41);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.272000, AlphaCoord.y), mix(0.144000, 0.214000, AlphaCoord.x),0.000000);//2\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 3);\n    }\n//UV-Min:int2(114,0) | UV-Max:int2(126,21) | Real-Min:float3(0.272000,0.144000,0.000000) | Real-Max:float3(0.272000,0.214000,0.125000) | FaceIndex:1 | ObjectIndex:3 | bFlip:0\n    else if((PixelCoord.x >= 114 && PixelCoord.y >= 0 && PixelCoord.x < 126 && PixelCoord.y < 21))//Id:19\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(114, 0))/vec2(11, 20);\n        vec3 ObjectSpace_Position = vec3(0.272000, mix(0.144000, 0.214000, AlphaCoord.x), mix(0.000000, 0.125000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 3);\n    }\n//UV-Min:int2(73,111) | UV-Max:int2(94,123) | Real-Min:float3(0.022000,0.144000,0.000000) | Real-Max:float3(0.022000,0.214000,0.125000) | FaceIndex:0 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 73 && PixelCoord.y >= 111 && PixelCoord.x < 94 && PixelCoord.y < 123))//Id:18\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(73, 111))/vec2(20, 11);\n        vec3 ObjectSpace_Position = vec3(0.022000, mix(0.144000, 0.214000, AlphaCoord.y), mix(0.000000, 0.125000, AlphaCoord.x));//0\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 3);\n    }\n//UV-Min:int2(116,90) | UV-Max:int2(128,121) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.070000,0.182500,0.000000) | FaceIndex:4 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 116 && PixelCoord.y >= 90 && PixelCoord.x < 128 && PixelCoord.y < 121))//Id:4\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(116, 90))/vec2(11, 30);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.070000, AlphaCoord.x), mix(0.000000, 0.182500, AlphaCoord.y),0.000000);//2\n        vec3 WorldSpace_Position = vec3(0.100000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 0);\n    }\n    else\n    {\n        return Point(vec4(0.0,0.0,0.0,-1.0), vec4(0.0,0.0,0.0,-1.0),-1,-1);\n    }\n}\n//####\n//####\nvec2 PositionToLightmap_21(Ray TempRay, float HitDistance, vec3 HitNormal, int CubeIndex)\n{\n    vec3 ObjectSpace_Position = TempRay.origin + TempRay.dir * HitDistance;\n    int FaceIndex = NormalToIndex(HitNormal);\n    int EigenIndex = FaceIndex + 6 * CubeIndex;\n//UV-Min:int2(0,0) | UV-Max:int2(12,21) | Real-Min:float3(0.237000,0.182500,0.000000) | Real-Max:float3(0.307000,0.182500,0.125000) | FaceIndex:2 | ObjectIndex:1 | bFlip:0\n    if(EigenIndex == 8)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.237000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(0.500000, 11.500000, AlphaCoord.x), mix(0.500000, 20.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(0,21) | UV-Max:int2(21,33) | Real-Min:float3(0.237000,0.340000,0.000000) | Real-Max:float3(0.307000,0.340000,0.125000) | FaceIndex:3 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 9)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.237000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(0.500000, 20.500000, AlphaCoord.y), mix(21.500000, 32.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(0,33) | UV-Max:int2(48,54) | Real-Min:float3(0.022000,0.070000,0.000000) | Real-Max:float3(0.307000,0.070000,0.125000) | FaceIndex:3 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 15)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.022000, 0.000000)) / vec2(0.285000, 0.125000);\n        return vec2(mix(0.500000, 47.500000, AlphaCoord.x), mix(33.500000, 53.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(0,54) | UV-Max:int2(21,81) | Real-Min:float3(0.307000,0.182500,0.000000) | Real-Max:float3(0.307000,0.340000,0.125000) | FaceIndex:1 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 7)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.182500, 0.000000)) / vec2(0.157500, 0.125000);\n        return vec2(mix(0.500000, 20.500000, AlphaCoord.y), mix(54.500000, 80.500000, AlphaCoord.x));//0F\n    }\n//UV-Min:int2(0,81) | UV-Max:int2(48,93) | Real-Min:float3(0.022000,0.000000,0.125000) | Real-Max:float3(0.307000,0.070000,0.125000) | FaceIndex:5 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 17)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.022000, 0.000000)) / vec2(0.285000, 0.070000);\n        return vec2(mix(0.500000, 47.500000, AlphaCoord.x), mix(81.500000, 92.500000, AlphaCoord.y));//2N\n    }\n//UV-Min:int2(0,93) | UV-Max:int2(42,105) | Real-Min:float3(0.022000,0.305000,0.000000) | Real-Max:float3(0.272000,0.375000,0.000000) | FaceIndex:4 | ObjectIndex:4 | bFlip:0\n    else if(EigenIndex == 28)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.022000, 0.305000)) / vec2(0.250000, 0.070000);\n        return vec2(mix(0.500000, 41.500000, AlphaCoord.x), mix(93.500000, 104.500000, AlphaCoord.y));//2N\n    }\n//UV-Min:int2(48,0) | UV-Max:int2(69,42) | Real-Min:float3(0.022000,0.144000,0.000000) | Real-Max:float3(0.272000,0.144000,0.125000) | FaceIndex:2 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 20)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.022000, 0.000000)) / vec2(0.250000, 0.125000);\n        return vec2(mix(48.500000, 68.500000, AlphaCoord.y), mix(0.500000, 41.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(48,42) | UV-Max:int2(69,84) | Real-Min:float3(0.022000,0.214000,0.000000) | Real-Max:float3(0.272000,0.214000,0.125000) | FaceIndex:3 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 21)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.022000, 0.000000)) / vec2(0.250000, 0.125000);\n        return vec2(mix(48.500000, 68.500000, AlphaCoord.y), mix(42.500000, 83.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(0,105) | UV-Max:int2(31,126) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.000000,0.182500,0.125000) | FaceIndex:0 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 0)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.000000, 0.000000)) / vec2(0.182500, 0.125000);\n        return vec2(mix(0.500000, 30.500000, AlphaCoord.x), mix(105.500000, 125.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(69,0) | UV-Max:int2(81,48) | Real-Min:float3(0.022000,0.000000,0.000000) | Real-Max:float3(0.307000,0.070000,0.000000) | FaceIndex:4 | ObjectIndex:2 | bFlip:1\n    else if(EigenIndex == 16)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.022000, 0.000000)) / vec2(0.285000, 0.070000);\n        return vec2(mix(69.500000, 80.500000, AlphaCoord.y), mix(0.500000, 47.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(31,105) | UV-Max:int2(73,126) | Real-Min:float3(0.022000,0.305000,0.000000) | Real-Max:float3(0.272000,0.305000,0.125000) | FaceIndex:2 | ObjectIndex:4 | bFlip:0\n    else if(EigenIndex == 26)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.022000, 0.000000)) / vec2(0.250000, 0.125000);\n        return vec2(mix(31.500000, 72.500000, AlphaCoord.x), mix(105.500000, 125.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(69,48) | UV-Max:int2(81,90) | Real-Min:float3(0.022000,0.305000,0.125000) | Real-Max:float3(0.272000,0.375000,0.125000) | FaceIndex:5 | ObjectIndex:4 | bFlip:1\n    else if(EigenIndex == 29)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.022000, 0.305000)) / vec2(0.250000, 0.070000);\n        return vec2(mix(69.500000, 80.500000, AlphaCoord.y), mix(48.500000, 89.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(12,0) | UV-Max:int2(24,21) | Real-Min:float3(0.272000,0.305000,0.000000) | Real-Max:float3(0.272000,0.375000,0.125000) | FaceIndex:1 | ObjectIndex:4 | bFlip:0\n    else if(EigenIndex == 25)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.305000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(12.500000, 23.500000, AlphaCoord.x), mix(0.500000, 20.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(81,0) | UV-Max:int2(102,48) | Real-Min:float3(0.022000,0.000000,0.000000) | Real-Max:float3(0.307000,0.000000,0.125000) | FaceIndex:2 | ObjectIndex:2 | bFlip:1\n    else if(EigenIndex == 14)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.022000, 0.000000)) / vec2(0.285000, 0.125000);\n        return vec2(mix(81.500000, 101.500000, AlphaCoord.y), mix(0.500000, 47.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(21,21) | UV-Max:int2(48,33) | Real-Min:float3(0.237000,0.182500,0.000000) | Real-Max:float3(0.307000,0.340000,0.000000) | FaceIndex:4 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 10)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.237000, 0.182500)) / vec2(0.070000, 0.157500);\n        return vec2(mix(21.500000, 47.500000, AlphaCoord.y), mix(21.500000, 32.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(42,93) | UV-Max:int2(73,105) | Real-Min:float3(0.000000,0.000000,0.125000) | Real-Max:float3(0.070000,0.182500,0.125000) | FaceIndex:5 | ObjectIndex:0 | bFlip:1\n    else if(EigenIndex == 5)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.000000, 0.000000)) / vec2(0.070000, 0.182500);\n        return vec2(mix(42.500000, 72.500000, AlphaCoord.y), mix(93.500000, 104.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(21,54) | UV-Max:int2(42,66) | Real-Min:float3(0.000000,0.182500,0.000000) | Real-Max:float3(0.070000,0.182500,0.125000) | FaceIndex:3 | ObjectIndex:0 | bFlip:1\n    else if(EigenIndex == 3)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.000000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(21.500000, 41.500000, AlphaCoord.y), mix(54.500000, 65.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(24,0) | UV-Max:int2(36,21) | Real-Min:float3(0.022000,0.305000,0.000000) | Real-Max:float3(0.022000,0.375000,0.125000) | FaceIndex:0 | ObjectIndex:4 | bFlip:0\n    else if(EigenIndex == 24)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.305000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(24.500000, 35.500000, AlphaCoord.x), mix(0.500000, 20.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(81,48) | UV-Max:int2(93,90) | Real-Min:float3(0.022000,0.144000,0.125000) | Real-Max:float3(0.272000,0.214000,0.125000) | FaceIndex:5 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 23)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.022000, 0.144000)) / vec2(0.250000, 0.070000);\n        return vec2(mix(81.500000, 92.500000, AlphaCoord.y), mix(48.500000, 89.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(36,0) | UV-Max:int2(48,21) | Real-Min:float3(0.307000,0.000000,0.000000) | Real-Max:float3(0.307000,0.070000,0.125000) | FaceIndex:1 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 13)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.000000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(36.500000, 47.500000, AlphaCoord.x), mix(0.500000, 20.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(93,48) | UV-Max:int2(114,90) | Real-Min:float3(0.022000,0.375000,0.000000) | Real-Max:float3(0.272000,0.375000,0.125000) | FaceIndex:3 | ObjectIndex:4 | bFlip:1\n    else if(EigenIndex == 27)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.022000, 0.000000)) / vec2(0.250000, 0.125000);\n        return vec2(mix(93.500000, 113.500000, AlphaCoord.y), mix(48.500000, 89.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(73,90) | UV-Max:int2(104,111) | Real-Min:float3(0.070000,0.000000,0.000000) | Real-Max:float3(0.070000,0.182500,0.125000) | FaceIndex:1 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 1)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.000000, 0.000000)) / vec2(0.182500, 0.125000);\n        return vec2(mix(73.500000, 103.500000, AlphaCoord.x), mix(90.500000, 110.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(102,0) | UV-Max:int2(114,21) | Real-Min:float3(0.022000,0.000000,0.000000) | Real-Max:float3(0.022000,0.070000,0.125000) | FaceIndex:0 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 12)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.000000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(102.500000, 113.500000, AlphaCoord.x), mix(0.500000, 20.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(21,66) | UV-Max:int2(48,78) | Real-Min:float3(0.237000,0.182500,0.125000) | Real-Max:float3(0.307000,0.340000,0.125000) | FaceIndex:5 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 11)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.237000, 0.182500)) / vec2(0.070000, 0.157500);\n        return vec2(mix(21.500000, 47.500000, AlphaCoord.y), mix(66.500000, 77.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(102,21) | UV-Max:int2(123,48) | Real-Min:float3(0.237000,0.182500,0.000000) | Real-Max:float3(0.237000,0.340000,0.125000) | FaceIndex:0 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 6)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.182500, 0.000000)) / vec2(0.157500, 0.125000);\n        return vec2(mix(102.500000, 122.500000, AlphaCoord.y), mix(21.500000, 47.500000, AlphaCoord.x));//0F\n    }\n//UV-Min:int2(104,90) | UV-Max:int2(116,111) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.070000,0.000000,0.125000) | FaceIndex:2 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 2)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.000000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(104.500000, 115.500000, AlphaCoord.x), mix(90.500000, 110.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(114,48) | UV-Max:int2(126,90) | Real-Min:float3(0.022000,0.144000,0.000000) | Real-Max:float3(0.272000,0.214000,0.000000) | FaceIndex:4 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 22)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.022000, 0.144000)) / vec2(0.250000, 0.070000);\n        return vec2(mix(114.500000, 125.500000, AlphaCoord.y), mix(48.500000, 89.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(114,0) | UV-Max:int2(126,21) | Real-Min:float3(0.272000,0.144000,0.000000) | Real-Max:float3(0.272000,0.214000,0.125000) | FaceIndex:1 | ObjectIndex:3 | bFlip:0\n    else if(EigenIndex == 19)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.144000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(114.500000, 125.500000, AlphaCoord.x), mix(0.500000, 20.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(73,111) | UV-Max:int2(94,123) | Real-Min:float3(0.022000,0.144000,0.000000) | Real-Max:float3(0.022000,0.214000,0.125000) | FaceIndex:0 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 18)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.144000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(73.500000, 93.500000, AlphaCoord.y), mix(111.500000, 122.500000, AlphaCoord.x));//0F\n    }\n//UV-Min:int2(116,90) | UV-Max:int2(128,121) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.070000,0.182500,0.000000) | FaceIndex:4 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 4)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.000000, 0.000000)) / vec2(0.070000, 0.182500);\n        return vec2(mix(116.500000, 127.500000, AlphaCoord.x), mix(90.500000, 120.500000, AlphaCoord.y));//2N\n    }\n    else\n    {\n        return vec2(0.0, 0.0);\n    }\n}\n//####\n//####\nPoint LightmapToPosition_22(vec2 UV)\n{\n    ivec2 PixelCoord = ivec2(UV);\n    mat4 RotationMatrix = rotate_y(0.000000);\n    mat4 TransposeRotationMatrix = transpose(RotationMatrix);\n//UV-Min:int2(0,0) | UV-Max:int2(42,21) | Real-Min:float3(0.022000,0.305000,0.000000) | Real-Max:float3(0.272000,0.305000,0.125000) | FaceIndex:2 | ObjectIndex:4 | bFlip:0\n    if((PixelCoord.x >= 0 && PixelCoord.y >= 0 && PixelCoord.x < 42 && PixelCoord.y < 21))//Id:26\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 0))/vec2(41, 20);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.272000, AlphaCoord.x), 0.305000, mix(0.000000, 0.125000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 4);\n    }\n//UV-Min:int2(0,21) | UV-Max:int2(21,63) | Real-Min:float3(0.022000,0.144000,0.000000) | Real-Max:float3(0.272000,0.144000,0.125000) | FaceIndex:2 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 21 && PixelCoord.x < 21 && PixelCoord.y < 63))//Id:20\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 21))/vec2(20, 41);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.272000, AlphaCoord.y), 0.144000, mix(0.000000, 0.125000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 3);\n    }\n//UV-Min:int2(0,63) | UV-Max:int2(21,75) | Real-Min:float3(0.000000,0.182500,0.000000) | Real-Max:float3(0.070000,0.182500,0.125000) | FaceIndex:3 | ObjectIndex:0 | bFlip:1\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 63 && PixelCoord.x < 21 && PixelCoord.y < 75))//Id:3\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 63))/vec2(20, 11);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.070000, AlphaCoord.y), 0.182500, mix(0.000000, 0.125000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 0);\n    }\n//UV-Min:int2(0,75) | UV-Max:int2(21,87) | Real-Min:float3(0.237000,0.340000,0.000000) | Real-Max:float3(0.307000,0.340000,0.125000) | FaceIndex:3 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 75 && PixelCoord.x < 21 && PixelCoord.y < 87))//Id:9\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 75))/vec2(20, 11);\n        vec3 ObjectSpace_Position = vec3(mix(0.237000, 0.307000, AlphaCoord.y), 0.340000, mix(0.000000, 0.125000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 1);\n    }\n//UV-Min:int2(0,87) | UV-Max:int2(21,114) | Real-Min:float3(0.237000,0.182500,0.000000) | Real-Max:float3(0.237000,0.340000,0.125000) | FaceIndex:0 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 87 && PixelCoord.x < 21 && PixelCoord.y < 114))//Id:6\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 87))/vec2(20, 26);\n        vec3 ObjectSpace_Position = vec3(0.237000, mix(0.182500, 0.340000, AlphaCoord.y), mix(0.000000, 0.125000, AlphaCoord.x));//0\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 1);\n    }\n//UV-Min:int2(21,21) | UV-Max:int2(42,63) | Real-Min:float3(0.022000,0.375000,0.000000) | Real-Max:float3(0.272000,0.375000,0.125000) | FaceIndex:3 | ObjectIndex:4 | bFlip:1\n    else if((PixelCoord.x >= 21 && PixelCoord.y >= 21 && PixelCoord.x < 42 && PixelCoord.y < 63))//Id:27\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(21, 21))/vec2(20, 41);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.272000, AlphaCoord.y), 0.375000, mix(0.000000, 0.125000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 4);\n    }\n//UV-Min:int2(21,63) | UV-Max:int2(52,84) | Real-Min:float3(0.070000,0.000000,0.000000) | Real-Max:float3(0.070000,0.182500,0.125000) | FaceIndex:1 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 21 && PixelCoord.y >= 63 && PixelCoord.x < 52 && PixelCoord.y < 84))//Id:1\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(21, 63))/vec2(30, 20);\n        vec3 ObjectSpace_Position = vec3(0.070000, mix(0.000000, 0.182500, AlphaCoord.x), mix(0.000000, 0.125000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 0);\n    }\n//UV-Min:int2(42,0) | UV-Max:int2(63,48) | Real-Min:float3(0.022000,0.000000,0.000000) | Real-Max:float3(0.307000,0.000000,0.125000) | FaceIndex:2 | ObjectIndex:2 | bFlip:1\n    else if((PixelCoord.x >= 42 && PixelCoord.y >= 0 && PixelCoord.x < 63 && PixelCoord.y < 48))//Id:14\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(42, 0))/vec2(20, 47);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.307000, AlphaCoord.y), 0.000000, mix(0.000000, 0.125000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 2);\n    }\n//UV-Min:int2(21,84) | UV-Max:int2(33,105) | Real-Min:float3(0.272000,0.144000,0.000000) | Real-Max:float3(0.272000,0.214000,0.125000) | FaceIndex:1 | ObjectIndex:3 | bFlip:0\n    else if((PixelCoord.x >= 21 && PixelCoord.y >= 84 && PixelCoord.x < 33 && PixelCoord.y < 105))//Id:19\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(21, 84))/vec2(11, 20);\n        vec3 ObjectSpace_Position = vec3(0.272000, mix(0.144000, 0.214000, AlphaCoord.x), mix(0.000000, 0.125000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 3);\n    }\n//UV-Min:int2(0,114) | UV-Max:int2(21,126) | Real-Min:float3(0.022000,0.144000,0.000000) | Real-Max:float3(0.022000,0.214000,0.125000) | FaceIndex:0 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 0 && PixelCoord.y >= 114 && PixelCoord.x < 21 && PixelCoord.y < 126))//Id:18\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(0, 114))/vec2(20, 11);\n        vec3 ObjectSpace_Position = vec3(0.022000, mix(0.144000, 0.214000, AlphaCoord.y), mix(0.000000, 0.125000, AlphaCoord.x));//0\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 3);\n    }\n//UV-Min:int2(33,84) | UV-Max:int2(45,126) | Real-Min:float3(0.022000,0.144000,0.125000) | Real-Max:float3(0.272000,0.214000,0.125000) | FaceIndex:5 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 33 && PixelCoord.y >= 84 && PixelCoord.x < 45 && PixelCoord.y < 126))//Id:23\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(33, 84))/vec2(11, 41);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.272000, AlphaCoord.y), mix(0.144000, 0.214000, AlphaCoord.x),0.125000);//2\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 3);\n    }\n//UV-Min:int2(45,84) | UV-Max:int2(93,105) | Real-Min:float3(0.022000,0.070000,0.000000) | Real-Max:float3(0.307000,0.070000,0.125000) | FaceIndex:3 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 45 && PixelCoord.y >= 84 && PixelCoord.x < 93 && PixelCoord.y < 105))//Id:15\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(45, 84))/vec2(47, 20);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.307000, AlphaCoord.x), 0.070000, mix(0.000000, 0.125000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 2);\n    }\n//UV-Min:int2(21,105) | UV-Max:int2(33,126) | Real-Min:float3(0.237000,0.182500,0.000000) | Real-Max:float3(0.307000,0.182500,0.125000) | FaceIndex:2 | ObjectIndex:1 | bFlip:0\n    else if((PixelCoord.x >= 21 && PixelCoord.y >= 105 && PixelCoord.x < 33 && PixelCoord.y < 126))//Id:8\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(21, 105))/vec2(11, 20);\n        vec3 ObjectSpace_Position = vec3(mix(0.237000, 0.307000, AlphaCoord.x), 0.182500, mix(0.000000, 0.125000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 1);\n    }\n//UV-Min:int2(45,105) | UV-Max:int2(76,126) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.000000,0.182500,0.125000) | FaceIndex:0 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 45 && PixelCoord.y >= 105 && PixelCoord.x < 76 && PixelCoord.y < 126))//Id:0\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(45, 105))/vec2(30, 20);\n        vec3 ObjectSpace_Position = vec3(0.000000, mix(0.000000, 0.182500, AlphaCoord.x), mix(0.000000, 0.125000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 0);\n    }\n//UV-Min:int2(63,0) | UV-Max:int2(75,42) | Real-Min:float3(0.022000,0.305000,0.125000) | Real-Max:float3(0.272000,0.375000,0.125000) | FaceIndex:5 | ObjectIndex:4 | bFlip:1\n    else if((PixelCoord.x >= 63 && PixelCoord.y >= 0 && PixelCoord.x < 75 && PixelCoord.y < 42))//Id:29\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(63, 0))/vec2(11, 41);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.272000, AlphaCoord.y), mix(0.305000, 0.375000, AlphaCoord.x),0.125000);//2\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 4);\n    }\n//UV-Min:int2(75,0) | UV-Max:int2(87,48) | Real-Min:float3(0.022000,0.000000,0.000000) | Real-Max:float3(0.307000,0.070000,0.000000) | FaceIndex:4 | ObjectIndex:2 | bFlip:1\n    else if((PixelCoord.x >= 75 && PixelCoord.y >= 0 && PixelCoord.x < 87 && PixelCoord.y < 48))//Id:16\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(75, 0))/vec2(11, 47);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.307000, AlphaCoord.y), mix(0.000000, 0.070000, AlphaCoord.x),0.000000);//2\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 2);\n    }\n//UV-Min:int2(42,48) | UV-Max:int2(73,60) | Real-Min:float3(0.000000,0.000000,0.125000) | Real-Max:float3(0.070000,0.182500,0.125000) | FaceIndex:5 | ObjectIndex:0 | bFlip:1\n    else if((PixelCoord.x >= 42 && PixelCoord.y >= 48 && PixelCoord.x < 73 && PixelCoord.y < 60))//Id:5\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(42, 48))/vec2(30, 11);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.070000, AlphaCoord.y), mix(0.000000, 0.182500, AlphaCoord.x),0.125000);//2\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 0);\n    }\n//UV-Min:int2(52,60) | UV-Max:int2(64,81) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.070000,0.000000,0.125000) | FaceIndex:2 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 52 && PixelCoord.y >= 60 && PixelCoord.x < 64 && PixelCoord.y < 81))//Id:2\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(52, 60))/vec2(11, 20);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.070000, AlphaCoord.x), 0.000000, mix(0.000000, 0.125000, AlphaCoord.y));//1\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, -1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 2, 0);\n    }\n//UV-Min:int2(64,60) | UV-Max:int2(112,72) | Real-Min:float3(0.022000,0.000000,0.125000) | Real-Max:float3(0.307000,0.070000,0.125000) | FaceIndex:5 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 64 && PixelCoord.y >= 60 && PixelCoord.x < 112 && PixelCoord.y < 72))//Id:17\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(64, 60))/vec2(47, 11);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.307000, AlphaCoord.x), mix(0.000000, 0.070000, AlphaCoord.y),0.125000);//2\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 2);\n    }\n//UV-Min:int2(87,0) | UV-Max:int2(108,27) | Real-Min:float3(0.307000,0.182500,0.000000) | Real-Max:float3(0.307000,0.340000,0.125000) | FaceIndex:1 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 87 && PixelCoord.y >= 0 && PixelCoord.x < 108 && PixelCoord.y < 27))//Id:7\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(87, 0))/vec2(20, 26);\n        vec3 ObjectSpace_Position = vec3(0.307000, mix(0.182500, 0.340000, AlphaCoord.y), mix(0.000000, 0.125000, AlphaCoord.x));//0\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 1);\n    }\n//UV-Min:int2(76,105) | UV-Max:int2(88,126) | Real-Min:float3(0.307000,0.000000,0.000000) | Real-Max:float3(0.307000,0.070000,0.125000) | FaceIndex:1 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 76 && PixelCoord.y >= 105 && PixelCoord.x < 88 && PixelCoord.y < 126))//Id:13\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(76, 105))/vec2(11, 20);\n        vec3 ObjectSpace_Position = vec3(0.307000, mix(0.000000, 0.070000, AlphaCoord.x), mix(0.000000, 0.125000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 2);\n    }\n//UV-Min:int2(87,27) | UV-Max:int2(99,48) | Real-Min:float3(0.022000,0.305000,0.000000) | Real-Max:float3(0.022000,0.375000,0.125000) | FaceIndex:0 | ObjectIndex:4 | bFlip:0\n    else if((PixelCoord.x >= 87 && PixelCoord.y >= 27 && PixelCoord.x < 99 && PixelCoord.y < 48))//Id:24\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(87, 27))/vec2(11, 20);\n        vec3 ObjectSpace_Position = vec3(0.022000, mix(0.305000, 0.375000, AlphaCoord.x), mix(0.000000, 0.125000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 4);\n    }\n//UV-Min:int2(93,72) | UV-Max:int2(105,114) | Real-Min:float3(0.022000,0.144000,0.000000) | Real-Max:float3(0.272000,0.214000,0.000000) | FaceIndex:4 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 93 && PixelCoord.y >= 72 && PixelCoord.x < 105 && PixelCoord.y < 114))//Id:22\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(93, 72))/vec2(11, 41);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.272000, AlphaCoord.y), mix(0.144000, 0.214000, AlphaCoord.x),0.000000);//2\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 3);\n    }\n//UV-Min:int2(99,27) | UV-Max:int2(111,48) | Real-Min:float3(0.272000,0.305000,0.000000) | Real-Max:float3(0.272000,0.375000,0.125000) | FaceIndex:1 | ObjectIndex:4 | bFlip:0\n    else if((PixelCoord.x >= 99 && PixelCoord.y >= 27 && PixelCoord.x < 111 && PixelCoord.y < 48))//Id:25\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(99, 27))/vec2(11, 20);\n        vec3 ObjectSpace_Position = vec3(0.272000, mix(0.305000, 0.375000, AlphaCoord.x), mix(0.000000, 0.125000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 1, 4);\n    }\n//UV-Min:int2(73,48) | UV-Max:int2(115,60) | Real-Min:float3(0.022000,0.305000,0.000000) | Real-Max:float3(0.272000,0.375000,0.000000) | FaceIndex:4 | ObjectIndex:4 | bFlip:0\n    else if((PixelCoord.x >= 73 && PixelCoord.y >= 48 && PixelCoord.x < 115 && PixelCoord.y < 60))//Id:28\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(73, 48))/vec2(41, 11);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.272000, AlphaCoord.x), mix(0.305000, 0.375000, AlphaCoord.y),0.000000);//2\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 4);\n    }\n//UV-Min:int2(105,72) | UV-Max:int2(126,114) | Real-Min:float3(0.022000,0.214000,0.000000) | Real-Max:float3(0.272000,0.214000,0.125000) | FaceIndex:3 | ObjectIndex:3 | bFlip:1\n    else if((PixelCoord.x >= 105 && PixelCoord.y >= 72 && PixelCoord.x < 126 && PixelCoord.y < 114))//Id:21\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(105, 72))/vec2(20, 41);\n        vec3 ObjectSpace_Position = vec3(mix(0.022000, 0.272000, AlphaCoord.y), 0.214000, mix(0.000000, 0.125000, AlphaCoord.x));//1\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 1.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 3, 3);\n    }\n//UV-Min:int2(108,0) | UV-Max:int2(120,21) | Real-Min:float3(0.022000,0.000000,0.000000) | Real-Max:float3(0.022000,0.070000,0.125000) | FaceIndex:0 | ObjectIndex:2 | bFlip:0\n    else if((PixelCoord.x >= 108 && PixelCoord.y >= 0 && PixelCoord.x < 120 && PixelCoord.y < 21))//Id:12\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(108, 0))/vec2(11, 20);\n        vec3 ObjectSpace_Position = vec3(0.022000, mix(0.000000, 0.070000, AlphaCoord.x), mix(0.000000, 0.125000, AlphaCoord.y));//0\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(-1.000000, 0.000000, 0.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 0, 2);\n    }\n//UV-Min:int2(64,72) | UV-Max:int2(91,84) | Real-Min:float3(0.237000,0.182500,0.125000) | Real-Max:float3(0.307000,0.340000,0.125000) | FaceIndex:5 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 64 && PixelCoord.y >= 72 && PixelCoord.x < 91 && PixelCoord.y < 84))//Id:11\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(64, 72))/vec2(26, 11);\n        vec3 ObjectSpace_Position = vec3(mix(0.237000, 0.307000, AlphaCoord.y), mix(0.182500, 0.340000, AlphaCoord.x),0.125000);//2\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, 1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 5, 1);\n    }\n//UV-Min:int2(88,114) | UV-Max:int2(115,126) | Real-Min:float3(0.237000,0.182500,0.000000) | Real-Max:float3(0.307000,0.340000,0.000000) | FaceIndex:4 | ObjectIndex:1 | bFlip:1\n    else if((PixelCoord.x >= 88 && PixelCoord.y >= 114 && PixelCoord.x < 115 && PixelCoord.y < 126))//Id:10\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(88, 114))/vec2(26, 11);\n        vec3 ObjectSpace_Position = vec3(mix(0.237000, 0.307000, AlphaCoord.y), mix(0.182500, 0.340000, AlphaCoord.x),0.000000);//2\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 1);\n    }\n//UV-Min:int2(115,21) | UV-Max:int2(127,52) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.070000,0.182500,0.000000) | FaceIndex:4 | ObjectIndex:0 | bFlip:0\n    else if((PixelCoord.x >= 115 && PixelCoord.y >= 21 && PixelCoord.x < 127 && PixelCoord.y < 52))//Id:4\n    {\n        vec2 AlphaCoord = vec2(PixelCoord - ivec2(115, 21))/vec2(11, 30);\n        vec3 ObjectSpace_Position = vec3(mix(0.000000, 0.070000, AlphaCoord.x), mix(0.000000, 0.182500, AlphaCoord.y),0.000000);//2\n        vec3 WorldSpace_Position = vec3(0.450000, -0.200000, -1.000000) + vec3(TransposeRotationMatrix * vec4(ObjectSpace_Position, 1.0));\n        vec3 ObjectSpace_Normal = vec3(0.000000, 0.000000, -1.000000);\n        vec3 WorldSpace_Normal = vec3(TransposeRotationMatrix * vec4(ObjectSpace_Normal, 0.0));\n        return Point(vec4(WorldSpace_Position, 1.0),vec4(WorldSpace_Normal, 1.0), 4, 0);\n    }\n    else\n    {\n        return Point(vec4(0.0,0.0,0.0,-1.0), vec4(0.0,0.0,0.0,-1.0),-1,-1);\n    }\n}\n//####\n//####\nvec2 PositionToLightmap_22(Ray TempRay, float HitDistance, vec3 HitNormal, int CubeIndex)\n{\n    vec3 ObjectSpace_Position = TempRay.origin + TempRay.dir * HitDistance;\n    int FaceIndex = NormalToIndex(HitNormal);\n    int EigenIndex = FaceIndex + 6 * CubeIndex;\n//UV-Min:int2(0,0) | UV-Max:int2(42,21) | Real-Min:float3(0.022000,0.305000,0.000000) | Real-Max:float3(0.272000,0.305000,0.125000) | FaceIndex:2 | ObjectIndex:4 | bFlip:0\n    if(EigenIndex == 26)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.022000, 0.000000)) / vec2(0.250000, 0.125000);\n        return vec2(mix(0.500000, 41.500000, AlphaCoord.x), mix(0.500000, 20.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(0,21) | UV-Max:int2(21,63) | Real-Min:float3(0.022000,0.144000,0.000000) | Real-Max:float3(0.272000,0.144000,0.125000) | FaceIndex:2 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 20)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.022000, 0.000000)) / vec2(0.250000, 0.125000);\n        return vec2(mix(0.500000, 20.500000, AlphaCoord.y), mix(21.500000, 62.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(0,63) | UV-Max:int2(21,75) | Real-Min:float3(0.000000,0.182500,0.000000) | Real-Max:float3(0.070000,0.182500,0.125000) | FaceIndex:3 | ObjectIndex:0 | bFlip:1\n    else if(EigenIndex == 3)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.000000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(0.500000, 20.500000, AlphaCoord.y), mix(63.500000, 74.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(0,75) | UV-Max:int2(21,87) | Real-Min:float3(0.237000,0.340000,0.000000) | Real-Max:float3(0.307000,0.340000,0.125000) | FaceIndex:3 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 9)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.237000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(0.500000, 20.500000, AlphaCoord.y), mix(75.500000, 86.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(0,87) | UV-Max:int2(21,114) | Real-Min:float3(0.237000,0.182500,0.000000) | Real-Max:float3(0.237000,0.340000,0.125000) | FaceIndex:0 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 6)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.182500, 0.000000)) / vec2(0.157500, 0.125000);\n        return vec2(mix(0.500000, 20.500000, AlphaCoord.y), mix(87.500000, 113.500000, AlphaCoord.x));//0F\n    }\n//UV-Min:int2(21,21) | UV-Max:int2(42,63) | Real-Min:float3(0.022000,0.375000,0.000000) | Real-Max:float3(0.272000,0.375000,0.125000) | FaceIndex:3 | ObjectIndex:4 | bFlip:1\n    else if(EigenIndex == 27)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.022000, 0.000000)) / vec2(0.250000, 0.125000);\n        return vec2(mix(21.500000, 41.500000, AlphaCoord.y), mix(21.500000, 62.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(21,63) | UV-Max:int2(52,84) | Real-Min:float3(0.070000,0.000000,0.000000) | Real-Max:float3(0.070000,0.182500,0.125000) | FaceIndex:1 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 1)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.000000, 0.000000)) / vec2(0.182500, 0.125000);\n        return vec2(mix(21.500000, 51.500000, AlphaCoord.x), mix(63.500000, 83.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(42,0) | UV-Max:int2(63,48) | Real-Min:float3(0.022000,0.000000,0.000000) | Real-Max:float3(0.307000,0.000000,0.125000) | FaceIndex:2 | ObjectIndex:2 | bFlip:1\n    else if(EigenIndex == 14)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.022000, 0.000000)) / vec2(0.285000, 0.125000);\n        return vec2(mix(42.500000, 62.500000, AlphaCoord.y), mix(0.500000, 47.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(21,84) | UV-Max:int2(33,105) | Real-Min:float3(0.272000,0.144000,0.000000) | Real-Max:float3(0.272000,0.214000,0.125000) | FaceIndex:1 | ObjectIndex:3 | bFlip:0\n    else if(EigenIndex == 19)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.144000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(21.500000, 32.500000, AlphaCoord.x), mix(84.500000, 104.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(0,114) | UV-Max:int2(21,126) | Real-Min:float3(0.022000,0.144000,0.000000) | Real-Max:float3(0.022000,0.214000,0.125000) | FaceIndex:0 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 18)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.144000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(0.500000, 20.500000, AlphaCoord.y), mix(114.500000, 125.500000, AlphaCoord.x));//0F\n    }\n//UV-Min:int2(33,84) | UV-Max:int2(45,126) | Real-Min:float3(0.022000,0.144000,0.125000) | Real-Max:float3(0.272000,0.214000,0.125000) | FaceIndex:5 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 23)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.022000, 0.144000)) / vec2(0.250000, 0.070000);\n        return vec2(mix(33.500000, 44.500000, AlphaCoord.y), mix(84.500000, 125.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(45,84) | UV-Max:int2(93,105) | Real-Min:float3(0.022000,0.070000,0.000000) | Real-Max:float3(0.307000,0.070000,0.125000) | FaceIndex:3 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 15)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.022000, 0.000000)) / vec2(0.285000, 0.125000);\n        return vec2(mix(45.500000, 92.500000, AlphaCoord.x), mix(84.500000, 104.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(21,105) | UV-Max:int2(33,126) | Real-Min:float3(0.237000,0.182500,0.000000) | Real-Max:float3(0.307000,0.182500,0.125000) | FaceIndex:2 | ObjectIndex:1 | bFlip:0\n    else if(EigenIndex == 8)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.237000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(21.500000, 32.500000, AlphaCoord.x), mix(105.500000, 125.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(45,105) | UV-Max:int2(76,126) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.000000,0.182500,0.125000) | FaceIndex:0 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 0)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.000000, 0.000000)) / vec2(0.182500, 0.125000);\n        return vec2(mix(45.500000, 75.500000, AlphaCoord.x), mix(105.500000, 125.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(63,0) | UV-Max:int2(75,42) | Real-Min:float3(0.022000,0.305000,0.125000) | Real-Max:float3(0.272000,0.375000,0.125000) | FaceIndex:5 | ObjectIndex:4 | bFlip:1\n    else if(EigenIndex == 29)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.022000, 0.305000)) / vec2(0.250000, 0.070000);\n        return vec2(mix(63.500000, 74.500000, AlphaCoord.y), mix(0.500000, 41.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(75,0) | UV-Max:int2(87,48) | Real-Min:float3(0.022000,0.000000,0.000000) | Real-Max:float3(0.307000,0.070000,0.000000) | FaceIndex:4 | ObjectIndex:2 | bFlip:1\n    else if(EigenIndex == 16)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.022000, 0.000000)) / vec2(0.285000, 0.070000);\n        return vec2(mix(75.500000, 86.500000, AlphaCoord.y), mix(0.500000, 47.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(42,48) | UV-Max:int2(73,60) | Real-Min:float3(0.000000,0.000000,0.125000) | Real-Max:float3(0.070000,0.182500,0.125000) | FaceIndex:5 | ObjectIndex:0 | bFlip:1\n    else if(EigenIndex == 5)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.000000, 0.000000)) / vec2(0.070000, 0.182500);\n        return vec2(mix(42.500000, 72.500000, AlphaCoord.y), mix(48.500000, 59.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(52,60) | UV-Max:int2(64,81) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.070000,0.000000,0.125000) | FaceIndex:2 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 2)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.000000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(52.500000, 63.500000, AlphaCoord.x), mix(60.500000, 80.500000, AlphaCoord.y));//1N\n    }\n//UV-Min:int2(64,60) | UV-Max:int2(112,72) | Real-Min:float3(0.022000,0.000000,0.125000) | Real-Max:float3(0.307000,0.070000,0.125000) | FaceIndex:5 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 17)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.022000, 0.000000)) / vec2(0.285000, 0.070000);\n        return vec2(mix(64.500000, 111.500000, AlphaCoord.x), mix(60.500000, 71.500000, AlphaCoord.y));//2N\n    }\n//UV-Min:int2(87,0) | UV-Max:int2(108,27) | Real-Min:float3(0.307000,0.182500,0.000000) | Real-Max:float3(0.307000,0.340000,0.125000) | FaceIndex:1 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 7)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.182500, 0.000000)) / vec2(0.157500, 0.125000);\n        return vec2(mix(87.500000, 107.500000, AlphaCoord.y), mix(0.500000, 26.500000, AlphaCoord.x));//0F\n    }\n//UV-Min:int2(76,105) | UV-Max:int2(88,126) | Real-Min:float3(0.307000,0.000000,0.000000) | Real-Max:float3(0.307000,0.070000,0.125000) | FaceIndex:1 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 13)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.000000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(76.500000, 87.500000, AlphaCoord.x), mix(105.500000, 125.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(87,27) | UV-Max:int2(99,48) | Real-Min:float3(0.022000,0.305000,0.000000) | Real-Max:float3(0.022000,0.375000,0.125000) | FaceIndex:0 | ObjectIndex:4 | bFlip:0\n    else if(EigenIndex == 24)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.305000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(87.500000, 98.500000, AlphaCoord.x), mix(27.500000, 47.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(93,72) | UV-Max:int2(105,114) | Real-Min:float3(0.022000,0.144000,0.000000) | Real-Max:float3(0.272000,0.214000,0.000000) | FaceIndex:4 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 22)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.022000, 0.144000)) / vec2(0.250000, 0.070000);\n        return vec2(mix(93.500000, 104.500000, AlphaCoord.y), mix(72.500000, 113.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(99,27) | UV-Max:int2(111,48) | Real-Min:float3(0.272000,0.305000,0.000000) | Real-Max:float3(0.272000,0.375000,0.125000) | FaceIndex:1 | ObjectIndex:4 | bFlip:0\n    else if(EigenIndex == 25)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.305000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(99.500000, 110.500000, AlphaCoord.x), mix(27.500000, 47.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(73,48) | UV-Max:int2(115,60) | Real-Min:float3(0.022000,0.305000,0.000000) | Real-Max:float3(0.272000,0.375000,0.000000) | FaceIndex:4 | ObjectIndex:4 | bFlip:0\n    else if(EigenIndex == 28)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.022000, 0.305000)) / vec2(0.250000, 0.070000);\n        return vec2(mix(73.500000, 114.500000, AlphaCoord.x), mix(48.500000, 59.500000, AlphaCoord.y));//2N\n    }\n//UV-Min:int2(105,72) | UV-Max:int2(126,114) | Real-Min:float3(0.022000,0.214000,0.000000) | Real-Max:float3(0.272000,0.214000,0.125000) | FaceIndex:3 | ObjectIndex:3 | bFlip:1\n    else if(EigenIndex == 21)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xz - vec2(0.022000, 0.000000)) / vec2(0.250000, 0.125000);\n        return vec2(mix(105.500000, 125.500000, AlphaCoord.y), mix(72.500000, 113.500000, AlphaCoord.x));//1F\n    }\n//UV-Min:int2(108,0) | UV-Max:int2(120,21) | Real-Min:float3(0.022000,0.000000,0.000000) | Real-Max:float3(0.022000,0.070000,0.125000) | FaceIndex:0 | ObjectIndex:2 | bFlip:0\n    else if(EigenIndex == 12)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.yz - vec2(0.000000, 0.000000)) / vec2(0.070000, 0.125000);\n        return vec2(mix(108.500000, 119.500000, AlphaCoord.x), mix(0.500000, 20.500000, AlphaCoord.y));//0N\n    }\n//UV-Min:int2(64,72) | UV-Max:int2(91,84) | Real-Min:float3(0.237000,0.182500,0.125000) | Real-Max:float3(0.307000,0.340000,0.125000) | FaceIndex:5 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 11)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.237000, 0.182500)) / vec2(0.070000, 0.157500);\n        return vec2(mix(64.500000, 90.500000, AlphaCoord.y), mix(72.500000, 83.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(88,114) | UV-Max:int2(115,126) | Real-Min:float3(0.237000,0.182500,0.000000) | Real-Max:float3(0.307000,0.340000,0.000000) | FaceIndex:4 | ObjectIndex:1 | bFlip:1\n    else if(EigenIndex == 10)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.237000, 0.182500)) / vec2(0.070000, 0.157500);\n        return vec2(mix(88.500000, 114.500000, AlphaCoord.y), mix(114.500000, 125.500000, AlphaCoord.x));//2F\n    }\n//UV-Min:int2(115,21) | UV-Max:int2(127,52) | Real-Min:float3(0.000000,0.000000,0.000000) | Real-Max:float3(0.070000,0.182500,0.000000) | FaceIndex:4 | ObjectIndex:0 | bFlip:0\n    else if(EigenIndex == 4)\n    {\n        vec2 AlphaCoord = vec2(ObjectSpace_Position.xy - vec2(0.000000, 0.000000)) / vec2(0.070000, 0.182500);\n        return vec2(mix(115.500000, 126.500000, AlphaCoord.x), mix(21.500000, 51.500000, AlphaCoord.y));//2N\n    }\n    else\n    {\n        return vec2(0.0, 0.0);\n    }\n}\n//####\nvec2 PositionToLightmap_L(vec3 Position)\n{\n    return (Position.zy *0.5 + vec2(0.5,0.5))*vec2(63.0,127.0) + vec2(0.5,0.5);\n}\nPoint LightmapToPosition_L(vec2 UV)\n{\n    UV = floor(UV);\n    return Point(vec4( -1.0, (UV.yx/vec2(127.0,63.0)-vec2(0.5,0.5))*2.0 , 1.0),vec4(vec3(1.0,0.0,0.0), 1.0), 0, 0);\n}\nvec2 PositionToLightmap_R(vec3 Position)\n{\n    return (Position.zy *0.5 + vec2(0.5,0.5))*vec2(63.0,127.0) + vec2(0.5,0.5);\n}\nPoint LightmapToPosition_R(vec2 UV)\n{\n    UV = floor(UV);\n    return Point(vec4( 1.0, (UV.yx/vec2(127.0,63.0)-vec2(0.5,0.5))*2.0 , 1.0),vec4(vec3(-1.0,0.0,0.0), 1.0), 0, 0);\n}\n\nvec2 PositionToLightmap_B(vec3 Position)\n{\n    return (Position.xy *0.5 + vec2(0.5,0.5))*255.0 + vec2(0.5,0.5);\n}\nPoint LightmapToPosition_B(vec2 UV)\n{\n    UV = floor(UV);\n    return Point(vec4((UV/255.0-vec2(0.5,0.5))*2.0 , -1.0,  1.0),vec4(vec3(0.0,0.0,1.0), 1.0), 0, 0);\n}\n\nvec2 PositionToLightmap_U(vec3 Position)\n{\n    return (Position.xz *0.5 + vec2(0.5,0.5))*127.0 + vec2(0.5,0.5);\n}\nPoint LightmapToPosition_U(vec2 UV)\n{\n    UV = floor(UV);\n    return Point(vec4((UV/127.0-vec2(0.5,0.5)).x*2.0 , 1.0, (UV/127.0-vec2(0.5,0.5)).y*2.0,1.0),vec4(vec3(0.0,-1.0,0.0), 1.0), 0, 0);\n}\nvec2 PositionToLightmap_D(vec3 Position)\n{\n    return (Position.xz *0.5 + vec2(0.5,0.5))*vec2(255,127.0) + vec2(0.5,0.5);\n}\nPoint LightmapToPosition_D(vec2 UV)\n{\n    UV = floor(UV);\n    return Point(vec4((UV/vec2(255,127.0)-vec2(0.5,0.5)).x*2.0 , -1.0, (UV/vec2(255,127.0)-vec2(0.5,0.5)).y*2.0,1.0),vec4(vec3(0.0,1.0,0.0), 1.0), 0, 0);\n}\n\n//////////////////////////////////////////////\n\n//////////////////////////////////////////////\n#pragma optimize(off)\nvec3 Lightmap_Render_LRBU22(const vec3 view_0, const Hidden hidden)\n{\nvec4 L3_0 = hidden.H_0;\nvec4 L3_1 = hidden.H_1;\nvec4 L3_2 = hidden.H_2;\nvec4 L3_3 = hidden.H_3;\nvec4 L3_4 = hidden.H_4;\nvec4 L3_5 = hidden.H_5;\nvec4 L3_6 = hidden.H_6;\nvec4 L3_7 = hidden.H_7;\nvec4 L3_8 = sin(60.000000 * (mat3x4(-0.321636,0.115784,0.075929,0.297330,0.004566,-0.231396,0.153740,-0.167359,0.004409,0.188636,0.105527,0.176368) * view_0 + vec4(0.264561,-0.210913,0.095155,-0.039588)));\nvec4 L3_9 = sin(60.000000 * (mat3x4(0.203742,-0.132912,-0.015002,0.159725,0.158575,0.163523,-0.224692,-0.003754,-0.198486,-0.010890,0.048867,0.000970) * view_0 + vec4(0.179271,0.035856,-0.450121,0.160181)));\nvec4 L4_0 = sin((mat4(0.212724,0.499688,-0.420443,-0.244629,-0.150422,0.250958,-0.104852,-0.097681,0.007542,-0.241142,-0.035762,0.081732,-0.071136,-0.072524,-0.293121,-0.267159) * L3_0 + mat4(0.035507,0.177740,-0.307044,-0.284070,-0.132807,-0.132940,0.057605,-0.155572,-0.100750,0.314475,0.109351,-0.275649,0.014840,-0.192239,0.217300,-0.207779) * L3_1 + mat4(-0.232272,0.039359,-0.042947,-0.063442,-0.395893,0.196494,0.186377,-0.242821,0.215955,-0.067279,0.205637,0.020331,0.223151,-0.340200,0.493645,0.116135) * L3_2 + mat4(-0.117530,0.272939,0.062260,-0.114027,0.118471,-0.155542,0.025188,0.112258,0.110410,-0.042122,0.033256,0.060512,-0.003434,-0.031700,0.386413,-0.017952) * L3_3 + mat4(0.062549,0.311318,0.074411,-0.325208,-0.022040,0.109149,0.156207,-0.190190,-0.087249,-0.041189,-0.529981,0.095972,0.276577,0.357292,-0.105548,0.068323) * L3_4 + mat4(-0.267993,-0.238591,-0.006611,0.110483,-0.279755,0.744764,0.110180,-0.054951,-0.113487,-0.059870,-0.135941,0.158407,0.433187,0.010076,0.230787,-0.112410) * L3_5 + mat4(-0.140628,-0.031754,0.515925,0.330062,-0.090230,-0.107655,-0.046688,-0.036831,-0.022701,0.096017,-0.122297,0.119173,0.025483,0.494070,0.248974,-0.219068) * L3_6 + mat4(-0.097235,0.099798,-0.512348,-0.430929,-0.047221,0.018424,0.142416,0.071591,0.260793,0.209341,0.469768,0.354374,-0.026720,0.315621,-0.015851,0.174419) * L3_7 + mat4(-0.334452,-0.075876,-0.042870,0.201455,-0.005094,0.020369,-0.140297,-0.180580,0.248251,0.077091,-0.152150,0.334201,0.023061,0.035879,0.072076,0.116549) * L3_8 + mat4(0.033985,-0.091296,0.025512,0.088782,0.020946,-0.023381,0.122015,-0.223822,0.185619,0.378529,0.056019,-0.880780,-0.161691,0.245913,-0.372020,0.300991) * L3_9 + vec4(0.186728,0.486795,-0.498352,-0.632135)));\nvec4 L4_1 = sin((mat4(0.652999,-0.189806,0.020908,-0.344774,-0.067864,0.205556,0.021219,-0.136504,0.307784,0.146302,0.079769,0.537971,-0.221461,-0.135594,-0.027677,0.034780) * L3_0 + mat4(-0.217510,-0.245483,-0.025218,0.042196,0.065169,-0.102474,-0.160728,0.353589,0.125579,-0.225793,-0.160230,-0.074547,0.018234,0.148011,-0.161118,-0.305407) * L3_1 + mat4(0.336047,0.074813,0.097702,-0.460553,-0.215896,-0.145457,0.204535,-0.303028,-0.151470,-0.001213,0.334167,0.301318,-0.377521,0.467780,-0.295187,0.374795) * L3_2 + mat4(0.025711,0.211448,0.278246,0.265954,0.181494,-0.095957,0.043913,0.171740,0.136662,0.064991,0.022280,0.371410,0.238573,0.366920,-0.371720,0.376865) * L3_3 + mat4(-0.366415,-0.448651,-0.233522,-0.475556,0.460356,0.479943,-0.045161,0.000658,-0.113603,-0.374397,0.017262,0.198289,-0.384275,0.021914,-0.405239,-0.045659) * L3_4 + mat4(0.244267,-0.133324,-0.166217,-0.248842,-0.253353,-0.048224,0.099745,0.439242,-0.006878,0.070610,-0.313253,0.048630,0.217975,-0.041620,0.096650,0.119196) * L3_5 + mat4(0.002678,0.302776,-0.078594,-0.060506,-0.113969,0.021092,-0.157938,0.029670,0.644223,0.321878,0.027110,-0.020942,-0.084110,0.059698,-0.254440,0.228360) * L3_6 + mat4(0.358170,-0.599452,0.333611,0.339000,0.167857,-0.023488,0.349279,0.138424,0.139466,-0.173744,0.541402,0.453257,0.058620,0.142746,0.276170,-0.364865) * L3_7 + mat4(-0.039773,0.066717,-0.236680,0.021546,-0.106454,-0.207811,-0.029979,0.128929,-0.140588,0.100760,0.137544,-0.159059,-0.112439,-0.001321,0.157102,-0.021853) * L3_8 + mat4(-0.259574,-0.193943,-0.039692,0.116454,-0.041811,0.516637,0.369689,-0.058761,-0.138728,-0.088397,-0.239248,-0.252977,0.018910,-0.004416,0.239596,-0.166837) * L3_9 + vec4(0.186845,-0.393278,0.420781,-0.368178)));\nvec4 L4_2 = sin((mat4(-0.167457,0.442363,-0.357390,0.037876,0.039663,-0.091368,-0.060933,-0.049513,-0.107977,-0.189407,0.117588,0.145490,0.103718,0.216360,-0.000005,0.326224) * L3_0 + mat4(-0.009706,-0.101286,-0.186154,-0.091638,0.217411,0.111231,-0.230591,0.153628,-0.000232,-0.039849,0.073883,-0.167897,-0.270738,-0.295149,0.263287,0.096475) * L3_1 + mat4(-0.236379,0.423005,-0.129240,-0.084991,0.489626,-0.072159,-0.020903,-0.202554,0.327887,0.077590,-0.184492,0.219792,-0.014057,0.248041,0.500683,0.415551) * L3_2 + mat4(0.207377,0.279268,-0.067708,0.018735,0.128645,-0.144540,0.100781,0.117683,-0.188850,-0.142596,0.164407,-0.083432,0.077175,0.217228,0.265570,0.502363) * L3_3 + mat4(-0.393870,0.313838,-0.342097,-0.154573,0.025455,0.180697,0.246648,0.407271,-0.171273,0.129520,-0.015852,-0.106040,0.132343,0.089331,-0.183755,-0.247642) * L3_4 + mat4(-0.086617,-0.239099,0.085797,0.059431,-0.421902,-0.122925,0.420612,0.408679,-0.090121,-0.147197,-0.227764,0.129444,0.372332,0.144394,-0.143100,-0.058028) * L3_5 + mat4(0.167749,0.305153,-0.048167,0.229030,0.093680,-0.104926,0.164906,0.000301,0.039690,-0.109015,0.193173,-0.033456,-0.433923,-0.525358,-0.177928,0.023917) * L3_6 + mat4(-0.014097,0.066675,0.589471,0.271852,0.194580,-0.115596,0.206725,-0.107898,-0.127119,0.037269,-0.487846,-0.140476,0.271984,-0.215809,-0.431181,0.437100) * L3_7 + mat4(-0.123616,-0.064845,0.049758,0.089399,0.283926,0.121827,0.305323,-0.013978,-0.114824,-0.321037,-0.239930,-0.095915,0.041903,-0.005027,-0.139939,0.018061) * L3_8 + mat4(-0.039051,0.191713,-0.098504,-0.085431,-0.280293,-0.115136,-0.339567,-0.104553,0.333060,-0.276333,0.690681,-0.103656,0.046924,0.340145,-0.437273,0.018196) * L3_9 + vec4(0.574971,-0.174500,-1.034482,0.473500)));\nvec4 L4_3 = sin((mat4(-0.019673,-0.158781,-0.323807,0.002131,0.269100,-0.023266,-0.043345,-0.161645,-0.095613,-0.492496,0.106089,0.482327,-0.091323,-0.304781,-0.128417,-0.162303) * L3_0 + mat4(0.131759,-0.035984,0.032918,0.541871,0.297868,-0.252811,-0.070689,-0.092312,0.142183,-0.326235,-0.000624,0.127253,0.055045,0.119191,-0.014498,0.098999) * L3_1 + mat4(-0.233430,0.017485,-0.067654,-0.323853,0.078919,0.186032,-0.094316,0.241424,-0.107325,-0.037892,0.282979,-0.290513,0.228615,-0.030205,0.080736,0.315920) * L3_2 + mat4(0.047386,0.015521,-0.002936,0.126107,0.039537,-0.068562,-0.256904,-0.165978,0.106280,0.007300,-0.103620,-0.368065,0.119508,-0.382067,0.016759,0.702642) * L3_3 + mat4(0.032380,-0.002729,-0.272228,-0.199208,-0.137236,0.236572,0.032933,-0.325925,0.047236,-0.038137,0.067126,-0.100829,-0.217477,-0.518732,0.246617,0.136266) * L3_4 + mat4(0.136161,-0.057155,0.108329,-0.046547,-0.415976,-0.121970,0.050399,0.162578,-0.079142,0.300144,-0.068416,0.207396,0.669493,-0.036956,0.075081,0.000140) * L3_5 + mat4(0.146291,0.334552,0.392123,0.097585,-0.021736,-0.083163,0.110152,0.026278,-0.087243,0.088958,0.101498,-0.328468,0.002133,0.153673,-0.312740,-0.113133) * L3_6 + mat4(0.033248,0.055172,0.170107,-0.162316,-0.015446,-0.142783,-0.150942,0.016169,-0.067649,-0.063057,-0.152835,-0.133344,-0.320646,0.010114,0.428602,-0.511333) * L3_7 + mat4(-0.223803,-0.568396,-0.043468,0.072645,0.176814,-0.013492,-0.193339,-0.193113,-0.280519,0.340415,-0.039158,0.049917,-0.054374,0.047950,0.006624,0.084849) * L3_8 + mat4(0.115123,-0.012904,0.069858,-0.001905,-0.258541,-0.236828,-0.040300,0.201396,-0.655839,0.225536,-0.485927,0.027165,-0.128935,-0.121966,-0.065301,-0.338265) * L3_9 + vec4(-0.212670,0.024890,0.302818,0.433537)));\nvec4 L4_4 = sin((mat4(0.180226,-0.134684,0.476181,0.009675,0.089518,0.113515,0.124578,-0.062382,-0.355913,0.213911,0.404084,0.302515,-0.326773,-0.017425,-0.185355,-0.258797) * L3_0 + mat4(0.099754,-0.383033,0.624083,0.337339,0.184309,0.279466,-0.084313,-0.058685,-0.132140,-0.214886,-0.307166,-0.132248,-0.049949,0.114865,0.485265,0.066190) * L3_1 + mat4(0.441657,-0.078869,0.052569,0.033904,0.345169,-0.161503,0.109633,0.335699,0.109854,-0.018186,-0.052178,0.067190,0.231186,0.088992,-0.405121,-0.104917) * L3_2 + mat4(-0.143535,-0.388079,0.293006,-0.201958,0.105536,0.044743,0.150872,-0.179283,0.089070,-0.241082,-0.048390,-0.206575,-0.365155,0.087612,-0.064408,0.022610) * L3_3 + mat4(-0.013054,0.277359,0.147003,-0.505218,-0.330755,0.002171,0.174780,-0.235404,0.287720,0.094782,-0.583161,-0.105180,-0.358331,0.292575,-0.153221,-0.467332) * L3_4 + mat4(-0.088390,0.368187,-0.024484,0.105558,-0.101283,0.179946,0.002998,-0.047090,0.044624,-0.133266,-0.646564,0.484552,-0.131527,-0.244890,0.215841,-0.264058) * L3_5 + mat4(0.425003,0.133227,0.151995,-0.378446,-0.214446,0.071511,-0.044809,-0.159657,-0.228869,-0.160713,-0.293974,0.255119,-0.136811,0.067416,0.230584,0.105719) * L3_6 + mat4(0.003774,-0.328494,-0.252409,-0.538947,-0.185434,0.022515,0.094227,-0.074241,0.213279,0.268613,-0.592552,-0.187379,0.023407,-0.042789,0.308208,-0.115139) * L3_7 + mat4(0.579296,-0.136890,-0.223833,-0.004824,-0.077952,-0.010719,-0.496305,-0.031910,0.189585,0.290104,0.305318,-0.035919,-0.019530,0.030246,0.101079,0.026876) * L3_8 + mat4(-0.200378,-0.187860,-0.354501,0.004700,-0.296781,-0.003775,0.417523,-0.100951,0.162606,-0.142893,0.241175,0.247706,0.483111,0.469813,0.303064,0.077615) * L3_9 + vec4(0.249900,0.591695,-0.104335,-0.507004)));\nvec4 L4_5 = sin((mat4(0.061404,0.196605,0.453229,-0.184967,0.228603,-0.293247,-0.013310,-0.137987,-0.426071,-0.073466,-0.525669,0.048265,0.110191,-0.038285,-0.009049,-0.017769) * L3_0 + mat4(0.242901,0.048384,-0.124609,0.006735,-0.244626,0.438891,0.169598,0.098107,0.116034,-0.222923,-0.174457,-0.214821,-0.009520,0.276574,0.090883,0.025863) * L3_1 + mat4(-0.080195,0.040109,-0.309738,-0.296691,0.272018,-0.015054,0.030835,0.426693,0.119772,-0.083237,0.148443,-0.039847,0.238230,-0.135263,-0.100814,0.276052) * L3_2 + mat4(0.385048,0.382709,-0.088856,-0.245175,0.113977,0.258817,0.038668,-0.084820,0.203552,0.041194,0.293542,0.021885,0.281761,0.099874,0.195505,-0.008633) * L3_3 + mat4(0.285961,0.172877,0.103099,-0.048887,0.025504,0.115044,0.094346,0.263155,0.180321,0.143607,-0.028428,-0.080254,-0.009976,-0.106746,0.296171,0.268436) * L3_4 + mat4(-0.172648,-0.005444,-0.044343,0.416086,-0.244823,-0.102413,-0.033192,0.038854,0.139180,-0.053273,-0.313029,-0.334042,0.045106,-0.400087,-0.290863,0.155427) * L3_5 + mat4(-0.406886,0.200275,0.090893,-0.077819,0.079760,0.106187,-0.020972,-0.128615,-0.013552,0.213746,-0.083189,0.216177,-0.060860,0.084179,0.258715,-0.202549) * L3_6 + mat4(-0.235832,0.568013,-0.507793,0.659126,0.051872,-0.312286,0.325820,-0.189195,0.091442,0.304836,-0.198601,-0.044158,0.122059,-0.171253,0.547384,-0.032229) * L3_7 + mat4(-0.225855,-0.333720,0.113560,-0.088836,-0.018065,-0.095193,-0.019616,0.242920,-0.021281,0.120473,0.239614,0.194965,-0.091281,0.058434,-0.046675,0.127199) * L3_8 + mat4(-0.194768,-0.132804,-0.027669,0.073217,-0.088466,-0.167341,0.222152,-0.173804,-0.483923,-0.115252,-0.088182,-0.167432,-0.226710,-0.405521,0.119505,0.509695) * L3_9 + vec4(-0.292521,-0.240776,-0.014476,-0.160579)));\nvec4 L4_6 = sin((mat4(0.138888,-0.004066,-0.011599,-0.215796,-0.130920,0.007150,-0.063569,-0.132820,0.367059,0.226737,-0.098982,-0.188437,-0.063607,-0.148677,-0.093411,0.223979) * L3_0 + mat4(-0.210804,0.085921,-0.064650,-0.148535,-0.220866,0.056979,-0.269835,-0.157301,-0.288382,0.130237,0.340019,-0.040953,0.159605,-0.109851,0.258566,-0.237864) * L3_1 + mat4(-0.183496,0.059564,0.235559,-0.119578,0.329523,-0.111873,0.100648,0.213934,0.049602,-0.153435,0.028136,0.000418,0.290022,0.332294,-0.178587,-0.017419) * L3_2 + mat4(-0.152696,-0.734025,-0.028762,-0.121308,-0.170468,0.144921,0.553577,-0.214740,-0.172964,-0.178945,0.250091,-0.228413,0.061342,0.418321,-0.078303,0.020759) * L3_3 + mat4(0.425320,0.242052,-0.214817,-0.022072,-0.050902,0.290125,0.020234,-0.181253,0.077384,-0.317244,0.214979,-0.266036,0.151957,0.318278,-0.120694,-0.091920) * L3_4 + mat4(-0.043532,-0.404221,0.265223,0.310366,0.157312,-0.268673,0.186196,-0.199726,-0.095826,-0.156052,-0.131504,-0.491982,-0.119545,-0.052237,-0.208935,-0.029973) * L3_5 + mat4(-0.055578,-0.096858,0.407572,0.197191,0.054622,0.254296,0.003355,0.087405,0.352869,-0.032560,0.175843,-0.087351,0.285897,0.038300,0.188571,0.216403) * L3_6 + mat4(-0.330676,0.043101,0.120746,0.402105,-0.064612,-0.239700,0.025810,-0.118531,0.076541,-0.081799,-0.166320,0.411678,-0.275015,0.258204,0.189619,0.232278) * L3_7 + mat4(0.072461,0.012942,-0.035772,-0.089495,-0.239567,0.087363,0.067499,-0.033818,0.179108,-0.201188,-0.142918,-0.226154,-0.005621,0.022743,0.007779,0.021107) * L3_8 + mat4(0.029608,0.034880,-0.030186,-0.161131,0.130587,-0.276169,0.018967,-0.060395,0.110687,0.108020,-0.114775,-0.069437,-0.435221,0.131811,0.533234,-0.257829) * L3_9 + vec4(0.177943,-0.024138,-0.282213,-0.230768)));\nvec4 L4_7 = sin((mat4(0.356183,0.095099,-0.162970,-0.195309,-0.129036,-0.174149,-0.226271,-0.081087,-0.029629,-0.077820,-0.134700,0.039460,-0.289463,0.166402,-0.042363,0.112979) * L3_0 + mat4(-0.108292,0.129424,0.034357,-0.103813,-0.425111,0.308024,0.051998,-0.028265,-0.181232,0.479786,0.031916,0.185425,0.012686,-0.267076,0.288551,0.323263) * L3_1 + mat4(-0.103279,0.151345,0.059857,-0.115700,0.090021,0.058885,-0.081174,-0.010395,-0.135065,-0.022554,-0.083595,0.045172,-0.219584,0.188088,0.236435,-0.136536) * L3_2 + mat4(0.110751,0.093507,0.012763,-0.020674,0.232961,0.221983,-0.082427,0.086161,0.123567,-0.060599,-0.152623,-0.126434,0.166726,0.065666,0.019739,0.279650) * L3_3 + mat4(0.096488,-0.187446,0.062641,0.264020,0.059260,0.163319,-0.336816,-0.296637,0.161341,0.156559,0.220226,0.106207,0.132154,-0.208977,0.031273,-0.398561) * L3_4 + mat4(-0.137011,0.255798,-0.271626,0.048585,0.044957,-0.309461,-0.090940,-0.145839,0.257208,0.248176,-0.145673,-0.328062,-0.273179,-0.277748,-0.061819,0.364124) * L3_5 + mat4(0.011094,0.075702,0.208671,-0.033919,-0.125691,0.004638,0.027117,-0.235430,-0.075048,-0.117723,0.267356,-0.115714,-0.337910,0.241162,0.041094,-0.004296) * L3_6 + mat4(-0.687792,-0.036408,-0.057539,0.036411,0.132357,0.091183,0.262240,-0.019298,0.010692,0.057875,-0.157951,0.109801,0.074251,0.341119,-0.138698,0.212237) * L3_7 + mat4(-0.312569,-0.219905,0.004432,-0.006270,-0.227582,0.036798,-0.000821,-0.042141,0.062616,-0.119034,0.039330,-0.012547,0.007043,0.017474,-0.019431,-0.016923) * L3_8 + mat4(-0.039157,0.094668,0.018462,-0.066639,-0.087742,0.200816,0.110138,-0.096592,-0.665706,-0.511531,-0.344666,0.046677,-0.180848,0.025787,0.014322,-0.313736) * L3_9 + vec4(-0.145623,-0.288164,-0.075662,-0.357603)));\nvec4 L4_8 = sin((mat4(-0.016366,0.014248,0.036202,-0.019833,-0.062436,-0.068480,0.389747,0.078173,-0.005459,0.507126,0.072816,-0.197644,-0.111381,0.054137,-0.032921,-0.216286) * L3_0 + mat4(0.211614,0.470686,-0.492769,0.076200,-0.041327,-0.125827,-0.232503,-0.331906,0.249220,-0.091381,0.130834,0.041945,-0.035407,-0.159467,0.155680,0.117222) * L3_1 + mat4(-0.113143,0.069706,0.119403,-0.110671,-0.110363,-0.305167,-0.197754,-0.083071,-0.088931,0.056716,0.184107,-0.322890,-0.540674,-0.256994,-0.057534,-0.119751) * L3_2 + mat4(-0.135626,-0.294898,-0.273389,-0.078984,-0.303326,-0.266012,-0.065236,0.132504,-0.040684,0.460459,0.176466,0.076873,-0.287640,0.210673,0.275112,0.484176) * L3_3 + mat4(0.051328,-0.095561,0.099031,0.006836,-0.187449,0.072778,-0.095253,-0.105815,-0.168644,-0.055027,0.354485,0.293222,0.153814,-0.454580,-0.417119,0.012419) * L3_4 + mat4(0.103540,-0.021146,-0.146560,0.327879,-0.135204,0.009159,0.288642,-0.040845,-0.042661,-0.277508,-0.116239,0.126143,-0.066720,0.002246,-0.473402,-0.069353) * L3_5 + mat4(-0.149198,0.248308,-0.068056,0.120973,-0.082914,-0.102925,0.103780,0.088318,0.050591,0.141847,0.198843,0.266996,-0.147617,-0.113799,-0.523679,-0.020351) * L3_6 + mat4(0.201702,-0.259646,0.196742,0.435519,-0.009308,-0.180351,0.228211,-0.087228,-0.115268,0.132079,-0.429632,0.031921,0.097545,-0.027312,-0.085729,0.135889) * L3_7 + mat4(-0.082980,0.115639,0.049138,0.257130,-0.074122,0.091376,0.030619,0.324837,-0.059951,0.069011,-0.243534,-0.528164,0.061231,-0.038611,-0.055606,0.027567) * L3_8 + mat4(0.003444,0.020398,-0.027879,0.237727,-0.101251,0.091872,-0.062028,0.276792,0.139084,-0.142425,-0.010463,-0.495055,-0.463583,0.250130,-0.212625,-0.071413) * L3_9 + vec4(0.606479,0.426099,0.558709,-0.045843)));\nvec4 L4_9 = sin((mat4(-0.127752,-0.409583,-0.103606,0.086557,-0.017591,0.017823,0.103014,0.065366,0.192045,-0.124942,-0.177702,0.046665,-0.181451,0.420547,-0.266235,-0.232810) * L3_0 + mat4(-0.115401,-0.315845,0.253520,0.006324,0.050996,-0.050877,-0.170125,0.057519,0.034043,0.188393,-0.348573,-0.209705,-0.319560,-0.159529,0.099452,-0.339044) * L3_1 + mat4(0.060084,0.110136,0.121685,-0.073726,0.022265,-0.383586,0.059111,0.136169,0.273068,-0.202340,0.234901,-0.553290,-0.360348,0.290610,-0.055879,0.188815) * L3_2 + mat4(-0.025928,0.143421,-0.124289,-0.074528,-0.001416,-0.092821,-0.032281,0.089003,0.076670,-0.323843,0.196673,0.114806,0.492675,-0.190933,0.223771,0.202073) * L3_3 + mat4(0.079376,-0.556849,-0.111933,-0.118897,-0.073890,-0.022710,0.153025,-0.491731,-0.099480,0.088574,0.048626,0.492355,0.120972,0.011213,-0.008184,0.140233) * L3_4 + mat4(-0.302366,-0.272895,-0.025989,-0.179501,-0.014701,-0.105481,-0.216170,0.119960,-0.056531,-0.394328,0.179460,0.196969,-0.137964,-0.335449,0.075815,-0.273785) * L3_5 + mat4(0.053783,-0.140277,0.174407,0.135466,0.191710,0.194806,0.008338,-0.113234,-0.239716,-0.158580,-0.223283,0.213971,0.093719,-0.118895,0.048446,0.057307) * L3_6 + mat4(0.227143,-0.189009,0.202840,-0.496238,0.066039,-0.102244,-0.047110,-0.046885,-0.304313,-0.009513,0.243087,0.197995,-0.177014,0.060030,0.386304,0.185926) * L3_7 + mat4(-0.294526,-0.328642,-0.146737,-0.449958,0.030253,0.180206,-0.169873,0.069258,0.099694,-0.105363,-0.852020,0.066959,-0.050049,-0.075183,-0.010738,0.015169) * L3_8 + mat4(0.010180,0.047802,0.084553,-0.029959,0.110896,0.104017,0.440120,0.218115,-0.032356,0.171158,0.212408,0.576913,-0.129069,-0.182702,-0.140743,0.139750) * L3_9 + vec4(0.257326,0.249527,-0.438306,0.331864)));\nvec4 L5_0 = sin((mat4(-0.295294,-0.406176,-0.507974,-0.081400,0.246478,0.053542,0.184931,-0.036305,-0.023532,0.174682,0.053919,0.528094,-0.064950,-0.003988,-0.277130,-0.019205) * L4_0 + mat4(0.059265,0.210922,-0.061206,0.032958,0.336871,0.008375,-0.073730,-0.081709,-0.268678,0.067660,-0.319282,0.139769,-0.007038,-0.157559,-0.420013,-0.104727) * L4_1 + mat4(0.235453,0.099479,0.209547,0.177987,0.153593,0.072827,0.190257,0.135654,0.013790,0.021465,-0.112021,-0.003220,-0.441939,0.345820,0.825396,-0.219353) * L4_2 + mat4(-0.049937,0.264240,0.341285,0.172003,-0.228006,0.121690,-0.070710,0.009296,0.194718,0.110975,-0.158939,0.297154,-0.042152,-0.058669,0.342809,0.183420) * L4_3 + mat4(0.059839,-0.010765,-0.024797,0.033068,-0.033171,0.090630,-0.573021,0.181502,0.137121,0.095443,-0.206216,0.077895,-0.108433,0.051387,-0.336157,0.002179) * L4_4 + mat4(-0.034988,-0.156506,-0.504299,0.063133,0.039100,-0.089319,-0.293618,-0.010520,0.164754,-0.234304,0.046292,0.036204,0.083813,-0.012391,-0.104638,-0.002197) * L4_5 + mat4(-0.142091,-0.022003,-0.055251,-0.011884,-0.184485,0.093534,0.516892,-0.127520,-0.012049,0.254515,0.098744,0.032548,0.429585,-0.348798,-0.320957,-0.037830) * L4_6 + mat4(-0.309432,-0.096591,-0.053466,-0.070604,-0.503776,-0.008148,0.056810,0.192226,-0.649996,-0.166903,0.084373,0.170337,0.436926,-0.131532,-0.447865,0.241202) * L4_7 + mat4(-0.280981,-0.830001,-0.825671,-0.506345,-0.263218,0.127939,0.010931,0.290635,0.020090,0.055884,0.046596,0.166220,0.068928,-0.048187,-0.380498,0.046323) * L4_8 + mat4(0.246033,0.311663,-0.225708,0.158452,-0.219081,-0.361684,0.186188,-0.021076,0.022872,0.043789,0.359737,0.005948,-0.221828,0.002306,0.000539,0.047770) * L4_9 + vec4(0.426042,0.479462,0.350328,0.293178)));\nvec4 L5_1 = sin((mat4(0.136943,-0.154446,0.338056,0.329621,-0.034627,0.089511,-0.073131,0.227852,0.121401,-0.031108,-0.118687,-0.054293,0.002339,-0.119745,-0.080337,-0.121587) * L4_0 + mat4(-0.257984,-0.206039,-0.115794,0.340535,-0.133911,-0.089993,0.074444,-0.043600,-0.056499,0.107883,-0.049104,0.052659,-0.082520,0.054206,-0.155978,0.201687) * L4_1 + mat4(0.208302,-0.037049,-0.147886,0.001134,0.310955,-0.083508,-0.064641,0.297341,-0.000218,-0.007311,-0.026624,-0.046817,-0.302657,0.205321,0.005678,-0.693350) * L4_2 + mat4(0.151185,0.104067,-0.118598,0.375266,0.038584,-0.000706,0.097406,0.225075,0.316591,0.037063,-0.154379,0.279433,-0.021144,0.026351,0.264799,0.087289) * L4_3 + mat4(0.197817,-0.033844,0.208223,0.062796,0.385352,-0.009767,-0.022784,0.253434,-0.045547,-0.173517,-0.027654,0.178412,0.069002,0.135145,0.408740,-0.046452) * L4_4 + mat4(0.137601,0.277485,0.112804,0.266298,0.028158,-0.611769,-0.308128,-0.016271,0.120946,-0.712470,0.159728,0.269327,-0.137752,0.368270,0.008567,-0.052395) * L4_5 + mat4(0.396264,-0.494127,0.045454,0.207286,0.097710,0.283214,0.281777,-0.220266,0.226971,-0.013020,-0.344896,0.262909,0.119205,0.235103,-0.392615,0.061368) * L4_6 + mat4(0.017649,-0.743395,0.078024,-0.097176,0.213957,-0.012289,-0.110943,0.242486,0.031651,0.396300,0.104958,-0.419433,0.461085,-0.094731,-0.319817,-0.269321) * L4_7 + mat4(0.109652,0.044356,0.078294,0.037065,-0.022455,0.308291,-0.342538,0.295607,0.004135,-0.131192,-0.072814,-0.022711,0.235152,-0.269651,-0.413370,0.347642) * L4_8 + mat4(0.312359,-0.542473,-0.134422,-0.441077,-0.109599,-0.025504,0.092148,0.373047,-0.006592,-0.154802,0.042401,-0.149868,0.095039,-0.013799,0.018958,0.085509) * L4_9 + vec4(-0.885262,0.466509,-0.482082,0.169149)));\nvec4 L5_2 = sin((mat4(0.049663,0.129930,0.381690,0.187554,0.439971,0.170544,0.000465,-0.105847,0.009210,-0.231927,-0.204074,0.138295,0.024004,0.242515,-0.280502,-0.173915) * L4_0 + mat4(0.043653,0.079423,0.026926,-0.084893,0.038493,0.065675,0.169940,-0.047217,0.148424,0.155668,-0.022666,0.044856,0.033489,-0.003339,0.292630,-0.100836) * L4_1 + mat4(-0.412161,0.006523,-0.139182,0.033894,-0.314263,-0.131400,0.286387,-0.043140,0.047986,-0.085822,-0.071843,-0.010849,0.436065,-0.040999,0.064093,0.246978) * L4_2 + mat4(0.385759,-0.112661,-0.048755,0.222456,-0.074367,0.131585,0.358640,0.005896,-0.276589,-0.378825,0.417852,0.221516,-0.202276,0.074093,-0.152113,0.015447) * L4_3 + mat4(0.149356,-0.085171,0.012223,-0.091354,0.027129,0.304658,0.183081,0.061774,0.347860,0.009034,-0.208075,0.062341,-0.386496,-0.072580,0.061026,-0.010858) * L4_4 + mat4(-0.339771,-0.195466,0.171490,0.193773,-0.088003,-0.071786,-0.211986,-0.114126,0.314510,0.189857,-0.078539,0.258676,0.314744,-0.270355,-0.008345,0.034420) * L4_5 + mat4(0.378443,0.310923,-0.383508,-0.006308,0.192253,0.247313,-0.035008,-0.097656,0.089813,-0.223025,0.148569,-0.296505,-0.078957,-0.148414,-0.074276,-0.131616) * L4_6 + mat4(-0.060612,0.084413,-0.416774,-0.127119,0.032970,-0.133527,-0.014693,0.104522,-0.062851,0.040292,-0.113238,0.179206,0.599320,-0.407278,-0.222906,0.648998) * L4_7 + mat4(0.544707,-0.275301,-0.410339,0.758894,0.006386,0.135532,-0.292426,0.062205,0.085840,-0.101572,-0.127869,0.157998,0.163698,-0.156357,0.052382,0.040343) * L4_8 + mat4(0.282952,-0.117880,-0.033084,-0.063551,-0.035586,-0.051589,0.007042,-0.031025,0.116398,-0.029288,0.309601,0.115756,-0.131077,-0.165963,-0.055639,0.235252) * L4_9 + vec4(-0.038610,0.211274,-0.135312,-0.498316)));\nvec4 L5_3 = sin((mat4(0.251754,0.225092,0.151575,0.205592,0.076344,0.202691,-0.251472,0.062916,-0.090013,0.117392,-0.160908,-0.132498,0.061521,0.259955,-0.072555,0.094254) * L4_0 + mat4(0.293813,0.240177,0.027832,-0.118238,0.128346,0.258300,0.155264,-0.073438,0.089938,-0.404657,-0.109440,-0.001637,-0.414954,0.154542,0.201128,-0.171905) * L4_1 + mat4(-0.052529,-0.328214,0.063620,-0.014698,0.610736,0.577916,-0.088092,0.225853,-0.013364,-0.328287,-0.007260,0.009291,0.331028,0.043167,0.397728,0.184991) * L4_2 + mat4(0.381139,-0.290828,0.229113,0.365507,-0.385221,-0.188424,-0.071145,0.117852,0.225624,-0.047553,0.202982,0.234232,0.146942,0.324256,0.045734,-0.382343) * L4_3 + mat4(0.095049,-0.060543,-0.115195,-0.186185,-0.062917,0.109645,-0.068744,-0.154196,0.115055,0.015905,-0.107450,0.084079,-0.459672,0.177079,-0.308924,0.030478) * L4_4 + mat4(-0.033705,-0.012686,0.299755,0.185648,-0.491618,-0.212590,-0.043103,-0.103596,-0.158762,-0.447048,-0.127539,0.368404,0.213818,0.235203,0.038316,-0.050231) * L4_5 + mat4(-0.458215,0.674623,0.323256,-0.147779,0.367474,-0.028939,0.059701,-0.274631,0.029876,0.029857,-0.204696,-0.242606,0.172624,0.293599,0.186151,-0.129456) * L4_6 + mat4(0.039691,-0.206041,0.022316,-0.132691,-0.269584,-0.268897,-0.177000,0.000140,0.460090,-0.047790,-0.325206,0.055631,-0.415152,-0.071539,0.656294,-0.402018) * L4_7 + mat4(0.470533,0.006723,0.037925,0.226993,0.073181,-0.059932,-0.010985,-0.389180,0.375758,-0.637519,-0.016676,0.104147,0.008487,0.313672,-0.011359,0.051757) * L4_8 + mat4(-0.294852,-0.169596,0.206671,0.535584,-0.717042,0.119455,0.062892,-0.151962,0.249891,-0.365007,0.123513,-0.161415,0.030314,-0.315907,0.102769,-0.057520) * L4_9 + vec4(-0.101036,-0.302292,-0.475327,-0.191077)));\nvec4 L5_4 = sin((mat4(0.085912,-0.064736,0.046452,-0.249847,0.113730,-0.492186,0.140513,0.322479,-0.310445,0.104398,0.274295,0.045840,-0.376543,-0.363485,-0.111474,0.067919) * L4_0 + mat4(0.100590,-0.106437,0.226191,0.229524,-0.016892,-0.182519,0.092125,-0.231335,-0.007952,0.080413,0.031284,0.023951,0.528160,0.117122,-0.073658,-0.004624) * L4_1 + mat4(0.177907,0.123312,0.105466,0.072350,0.183593,0.273928,0.127575,0.036063,0.320212,-0.011538,0.047320,-0.127717,0.106549,-0.291485,0.007131,-0.384503) * L4_2 + mat4(-0.151907,0.303357,0.292290,0.192438,0.265332,-0.313952,-0.152770,-0.188156,-0.691876,-0.306623,0.219419,0.326618,-0.017173,0.028350,0.204189,0.005054) * L4_3 + mat4(-0.239654,0.148158,-0.091786,0.078123,-0.020862,-0.504436,0.080380,-0.298972,-0.376760,-0.014570,0.386113,0.000856,0.046695,0.288102,-0.131072,0.251593) * L4_4 + mat4(-0.168675,0.052336,-0.306276,-0.211078,0.046911,-0.150315,0.237742,-0.478688,-0.201790,0.052822,0.310063,0.016920,0.070018,-0.060688,0.116516,-0.117564) * L4_5 + mat4(0.047407,-0.243552,0.370412,0.070141,0.088733,-0.083733,0.381088,-0.180308,-0.426759,-0.679023,0.303422,-0.230109,-0.067200,-0.003211,0.199852,0.192435) * L4_6 + mat4(-0.105190,0.220036,0.031074,0.196828,0.179950,-0.054034,-0.019548,-0.298538,0.513854,0.174028,0.021965,0.109814,-0.541749,-0.250966,0.124421,0.037579) * L4_7 + mat4(-0.161740,0.077630,0.229746,0.041151,-0.235672,-0.009762,-0.194501,0.030540,0.001173,-0.178381,0.079392,0.008360,0.098053,0.128650,0.087672,-0.410771) * L4_8 + mat4(0.245406,-0.128239,0.050821,-0.299500,0.043591,0.017143,0.225836,-0.175157,-0.251564,0.041390,0.539193,-0.259885,0.248198,0.255342,0.066657,0.075991) * L4_9 + vec4(-0.311553,-0.397987,-0.312685,-0.164161)));\nvec4 L5_5 = sin((mat4(0.235842,-0.231588,0.041252,0.368232,-0.009823,-0.089923,0.297118,-0.421305,0.113805,0.300651,0.313354,0.202169,0.027989,0.006803,0.355797,-0.258638) * L4_0 + mat4(0.289439,-0.016612,-0.071739,0.243632,-0.389590,0.106383,-0.071854,-0.081996,0.134814,0.307092,0.118750,-0.283012,-0.146781,0.302311,-0.200613,0.026949) * L4_1 + mat4(0.155887,0.083410,-0.197743,-0.019700,-0.045301,-0.126573,-0.184966,0.077529,-0.130780,0.092213,0.014462,0.302410,0.064937,0.510990,0.134896,-0.291214) * L4_2 + mat4(-0.121707,-0.295631,-0.218368,-0.008685,-0.045551,-0.096271,0.069214,0.118669,0.279465,-0.087670,-0.115290,0.108089,0.021579,-0.019708,0.099671,0.128416) * L4_3 + mat4(-0.073930,-0.162271,0.084580,0.200475,0.194903,-0.045475,-0.046491,0.219090,-0.129676,-0.017033,0.051078,-0.137172,0.034062,-0.224791,0.033192,-0.257605) * L4_4 + mat4(-0.214046,0.228167,-0.408803,-0.194347,-0.134771,0.181539,-0.164043,-0.136229,0.019547,0.061737,0.239824,-0.109482,-0.277440,-0.040642,0.062356,0.128419) * L4_5 + mat4(-0.024598,0.038295,0.180145,-0.387490,-0.301195,-0.157295,-0.073818,-0.198697,0.002833,-0.105711,0.033831,-0.246354,-0.030138,0.235518,-0.387378,0.185683) * L4_6 + mat4(-0.216666,-0.121214,0.134145,0.002159,-0.093282,-0.154020,-0.287491,0.199472,0.259040,-0.085979,0.145913,-0.681005,-0.517646,0.175360,0.029480,0.395562) * L4_7 + mat4(0.443614,-0.818486,-0.433152,0.133245,0.143216,-0.061862,-0.000151,-0.133703,-0.214439,0.088325,0.287010,-0.514400,-0.189784,-0.267494,-0.318645,0.030662) * L4_8 + mat4(0.186217,0.066059,-0.009357,0.363032,-0.028542,0.219500,-0.054846,-0.293585,0.158842,0.254484,-0.089242,0.058727,-0.362700,-0.093637,-0.189440,0.085659) * L4_9 + vec4(-0.735014,-0.223915,-0.547746,-0.471831)));\nvec4 L5_6 = sin((mat4(-0.022874,-0.510283,0.090932,0.021725,-0.129560,-0.041416,0.346656,-0.125406,0.004321,-0.320427,0.072173,-0.189540,-0.173783,0.081912,0.296848,0.031760) * L4_0 + mat4(0.056564,0.267953,0.290036,-0.038483,-0.023182,0.158399,-0.320243,-0.033031,0.084816,-0.087551,0.197852,0.145347,0.225463,-0.055478,-0.292706,0.076488) * L4_1 + mat4(-0.227104,-0.057390,-0.173737,-0.014841,0.072040,-0.125747,-0.088860,-0.125301,-0.156233,-0.070691,-0.428513,-0.014992,0.040734,-0.143263,-0.790738,-0.273590) * L4_2 + mat4(0.119015,0.266069,-0.159092,-0.164555,0.013770,0.311638,0.240509,-0.133501,-0.590163,-0.235814,0.212693,0.053811,0.052047,-0.129829,-0.011057,-0.110049) * L4_3 + mat4(0.210680,0.029594,0.008174,0.000249,-0.512133,-0.205973,0.236193,-0.211226,-0.006436,0.169547,-0.014617,-0.021925,-0.284006,0.117622,-0.508125,0.413904) * L4_4 + mat4(-0.141215,-0.551769,-0.177413,0.130822,-0.106083,-0.153302,-0.273673,0.106632,0.071359,0.120684,-0.023993,-0.085812,0.141290,0.093758,0.168928,0.070604) * L4_5 + mat4(-0.327443,0.210614,0.059601,-0.333851,0.101925,-0.301502,0.260996,-0.029688,-0.194590,0.156340,-0.071813,0.131268,-0.331965,-0.205807,-0.086066,-0.598870) * L4_6 + mat4(-0.191266,0.104720,-0.040498,-0.002012,-0.056600,0.229806,0.181351,-0.075435,0.349403,-0.032393,0.464793,-0.106396,-0.497664,-0.443493,-0.300028,-0.250077) * L4_7 + mat4(0.672042,-0.207873,0.760772,-0.003146,0.063605,-0.151107,-0.044796,0.255479,0.139708,-0.102448,-0.158448,0.248398,-0.050135,-0.046278,0.136415,-0.042552) * L4_8 + mat4(0.071400,0.189717,0.015298,0.124611,0.111476,-0.090182,0.101343,0.136604,-0.305125,0.042505,-0.206975,-0.059636,0.028659,-0.183641,-0.170573,0.007107) * L4_9 + vec4(0.113740,-0.488588,0.846896,-0.077665)));\nvec4 L5_7 = sin((mat4(0.184463,0.140568,-0.346258,0.017896,0.126080,0.253017,-0.024462,-0.325722,-0.152024,-0.048119,0.056745,0.270753,0.223037,-0.072972,0.072294,0.370478) * L4_0 + mat4(0.196528,0.285115,0.216042,0.129375,-0.272743,-0.205079,-0.177848,0.458302,0.056994,-0.168678,0.160801,-0.319257,-0.040788,0.083721,-0.039980,-0.225834) * L4_1 + mat4(0.047426,-0.040130,0.206232,-0.270058,-0.221816,0.198184,0.435934,0.334565,-0.162469,0.158941,0.186030,-0.439911,0.255289,0.256589,-0.318063,0.041418) * L4_2 + mat4(-0.021382,0.038573,0.270049,-0.140533,-0.032499,0.305112,0.157168,-0.175936,0.045503,0.431328,0.148724,-0.428066,-0.173661,0.246611,-0.209017,-0.743897) * L4_3 + mat4(-0.255038,-0.290295,0.134135,-0.210867,-0.304998,0.312008,-0.373401,0.141806,0.074597,-0.350532,0.112749,-0.158772,-0.313752,-0.136918,-0.595877,-0.439722) * L4_4 + mat4(0.096545,0.070081,-0.360579,-0.614866,-0.002563,0.338212,0.563201,0.097805,-0.252841,-0.233498,0.443246,-0.023717,-0.014372,0.344751,-0.479260,0.048626) * L4_5 + mat4(0.119810,0.905674,-0.056993,0.037697,0.449067,0.417030,-0.112423,0.000507,0.076269,0.424798,-0.328020,0.094395,-0.180364,0.238707,-0.278562,0.022626) * L4_6 + mat4(-0.092371,-0.089414,0.145428,0.446280,-0.058273,0.329470,-0.109620,0.058963,0.133926,0.084977,0.151042,0.327349,0.229853,-0.191668,0.185580,0.436344) * L4_7 + mat4(0.778546,0.780012,-0.145973,-0.197702,0.107749,0.233440,0.318537,-0.120296,0.029094,0.216744,-0.740623,0.310379,-0.054341,0.097149,-0.012124,-0.026073) * L4_8 + mat4(-0.497060,0.031240,0.058659,0.117381,0.124669,0.429103,-0.067885,0.461704,-0.161555,0.014619,0.117019,-0.350055,-0.129627,0.009124,0.287035,-0.107038) * L4_9 + vec4(0.842442,0.088806,-0.639743,0.514121)));\nvec4 L5_8 = sin((mat4(-0.283653,-0.119603,0.114005,0.033436,-0.383026,-0.192079,0.181083,-0.208455,-0.142292,0.305166,0.341553,-0.122507,0.052510,0.027591,-0.214888,0.141222) * L4_0 + mat4(0.118127,-0.185294,0.047143,0.003335,-0.140612,0.181426,-0.365044,-0.049303,0.315465,-0.133115,0.350158,-0.385408,-0.161735,0.119085,-0.300107,-0.232573) * L4_1 + mat4(0.131146,0.113683,-0.153375,-0.593642,-0.061161,0.091164,0.199062,0.359912,0.018369,-0.226358,0.122837,0.072103,-0.477936,-0.016393,-0.216879,-0.391695) * L4_2 + mat4(-0.264966,0.166602,0.225174,-0.008110,-0.088804,0.267111,0.143442,0.109466,0.257249,-0.223229,-0.006687,0.074445,0.262093,0.001350,-0.305883,-0.150128) * L4_3 + mat4(-0.155525,0.343381,0.007227,0.478642,-0.103819,-0.075247,0.204779,-0.126187,0.168379,0.245390,0.003869,-0.045431,-0.479363,0.234860,0.370334,-0.151906) * L4_4 + mat4(0.110028,0.161154,0.226519,-0.019755,-0.054310,-0.027645,-0.285353,0.086965,-0.156995,-0.037937,-0.308766,-0.182316,-0.021917,-0.202787,-0.311138,0.239406) * L4_5 + mat4(0.094171,0.368811,0.289051,0.139692,-0.183649,0.089615,0.201582,-0.002981,0.136811,-0.107494,-0.262208,-0.079246,-0.085532,-0.205432,0.177032,0.700004) * L4_6 + mat4(-0.112869,0.247481,-0.174907,-0.121460,-0.194569,-0.054862,-0.190152,-0.092430,-0.069201,-0.032099,0.136137,0.210540,0.066013,0.472435,0.308591,0.338014) * L4_7 + mat4(-0.493854,0.584905,-0.293397,0.468465,-0.642738,0.002820,0.060102,0.477804,-0.109408,-0.042909,0.566817,-0.314526,0.041579,0.193046,-0.117752,0.020033) * L4_8 + mat4(-0.138336,0.184133,0.270877,0.375098,-0.014296,-0.108770,-0.216673,-0.222104,-0.091971,0.126062,0.136885,-0.256618,-0.092938,-0.023960,0.257744,0.109858) * L4_9 + vec4(0.127157,-0.307873,-0.279614,-0.002481)));\nvec4 L5_9 = sin((mat4(0.384090,0.008281,-0.127042,0.189894,0.099933,-0.029748,0.334183,-0.132649,0.087315,0.019813,0.029787,0.163847,-0.010949,-0.064816,0.080909,0.056829) * L4_0 + mat4(-0.082643,0.003674,0.142511,0.083929,-0.052205,-0.003022,0.355607,0.060699,-0.198448,-0.053697,-0.014316,-0.160075,0.103734,0.058331,-0.115203,-0.066904) * L4_1 + mat4(0.036402,-0.161929,0.118912,0.243993,0.202041,-0.042716,-0.147075,-0.104126,0.029588,0.042310,0.089773,-0.077234,0.013876,-0.140415,0.142350,-0.224268) * L4_2 + mat4(0.314295,0.044726,0.018356,0.103307,-0.124135,-0.130121,-0.363323,-0.161402,-0.175222,-0.384597,0.326120,0.444916,-0.180719,-0.245817,-0.058278,-0.021490) * L4_3 + mat4(0.162676,-0.148912,0.065815,-0.127750,-0.010242,0.106841,-0.099772,0.105259,0.013601,-0.030151,-0.172276,0.123864,-0.075109,-0.092474,-0.120674,0.018945) * L4_4 + mat4(0.105635,0.040767,0.092649,0.082645,-0.139482,0.015088,-0.228556,0.172408,-0.272722,-0.230151,-0.143461,0.306999,0.089063,0.170737,-0.065055,0.074063) * L4_5 + mat4(-0.220152,0.131178,-0.005247,-0.468472,0.152215,-0.079507,-0.155215,0.152852,0.436622,-0.209420,0.205743,0.139546,-0.135217,-0.124165,-0.148010,-0.620090) * L4_6 + mat4(-0.044231,-0.123147,0.166670,0.146506,-0.282376,-0.129984,0.384748,0.121224,0.280592,-0.467954,0.028021,0.035363,0.209358,-0.191707,-0.067479,0.020234) * L4_7 + mat4(-0.185880,0.365619,-0.173892,-0.174496,-0.094528,0.279157,0.100557,-0.027253,0.059684,0.089253,-0.216568,0.157264,0.170273,-0.055182,0.091682,0.138618) * L4_8 + mat4(0.071801,-0.046130,0.440520,0.121382,-0.125678,0.174308,0.203189,0.044438,0.019336,0.004891,0.161571,-0.078164,0.041047,-0.026112,0.085234,0.227399) * L4_9 + vec4(-0.419423,0.186595,0.094528,-1.025535)));\nvec4 L6_0 = sin((mat4(-0.144066,0.033198,-0.005113,0.083893,0.109612,-0.359234,0.002145,0.007879,-0.059568,0.074156,0.004590,-0.059733,-0.176732,-0.030375,0.005210,-0.338561) * L5_0 + mat4(-0.046874,-0.036760,0.006101,0.006132,0.070138,-0.013963,0.002197,0.034468,0.129143,-0.256752,-0.003296,-0.307304,-0.013109,-0.151050,0.003799,0.091661) * L5_1 + mat4(0.012053,0.002405,-0.008069,0.055744,0.502993,-0.214823,-0.007947,-0.077583,0.259210,-0.087835,0.001155,-0.258348,-0.124691,0.370325,-0.006928,0.078854) * L5_2 + mat4(-0.112880,-0.077209,0.000072,0.020118,0.166594,-0.010105,-0.004078,-0.057749,0.038890,0.248082,0.004276,-0.150853,0.097822,0.073373,0.006621,-0.050628) * L5_3 + mat4(0.186762,0.015080,0.002120,-0.046252,0.058265,-0.045896,-0.008248,-0.064178,-0.132154,0.184211,0.005943,0.000404,-0.189994,-0.143895,-0.003652,0.084171) * L5_4 + mat4(-0.055622,0.132646,0.003642,0.181164,0.489641,-0.061242,-0.006068,-0.125125,-0.232537,-0.040709,0.009089,0.132149,-0.520813,0.027558,-0.001579,0.071262) * L5_5 + mat4(0.144251,-0.063765,-0.000670,0.061772,0.483977,-0.106320,0.001458,0.005911,-0.063424,-0.009229,0.008480,0.039612,0.089572,-0.298505,0.000081,-0.254413) * L5_6 + mat4(0.222015,-0.245302,0.015924,0.282622,-0.167670,-0.017508,-0.010795,0.027945,-0.266167,-0.029673,-0.000309,0.113470,0.008648,-0.001677,0.003391,0.083458) * L5_7 + mat4(0.003146,-0.036512,0.000452,-0.056164,-0.137418,-0.008496,-0.005286,-0.002866,-0.189359,-0.174070,-0.001189,0.184535,-0.179447,0.124553,0.003089,-0.091727) * L5_8 + mat4(-0.146164,-0.298993,-0.000545,0.125672,0.192418,0.139925,-0.007551,-0.090702,-0.151364,0.121086,-0.007166,-0.016471,0.072114,-0.032888,0.000826,-0.230362) * L5_9 + vec4(-0.033161,0.312768,-0.002978,1.013697)));\nvec4 L6_1 = sin((mat4(0.044131,-0.081094,0.392726,-0.415370,-0.066022,-0.216460,1.386513,0.385745,0.014753,-0.010582,0.227690,0.046566,0.059603,-0.224794,-0.089006,0.101189) * L5_0 + mat4(-0.107597,-0.104795,-0.275655,0.603022,0.055572,-0.088735,-0.139050,0.068714,-0.067710,0.357071,0.106918,0.304834,-0.025148,0.071951,-0.515514,0.385042) * L5_1 + mat4(-0.067600,-0.048481,0.506275,-0.325780,-0.068751,0.022151,-0.118974,0.295645,0.054959,0.021030,-0.319569,0.095280,-0.152045,0.036236,-0.299129,-0.097317) * L5_2 + mat4(0.041914,-0.029109,-0.348940,0.120380,-0.042966,0.030060,0.437987,0.090840,0.087743,-0.177098,-0.445504,-0.219969,-0.068687,-0.071690,-0.277847,-0.225116) * L5_3 + mat4(0.030618,0.063593,-0.057763,-0.027921,-0.021397,0.110624,0.055527,-0.037529,-0.023931,-0.099596,-0.525872,-0.168038,-0.036227,0.110060,-0.074188,-0.027683) * L5_4 + mat4(-0.001670,-0.065976,-0.059550,-0.051847,-0.062162,-0.154852,-0.138961,0.218430,0.095982,0.067075,-0.624926,0.447699,-0.103371,-0.044632,-0.449271,-0.172376) * L5_5 + mat4(-0.067755,-0.056332,-0.041741,-0.326104,0.037710,-0.081522,-0.646582,-0.398014,-0.003432,-0.104380,-0.231871,0.219011,-0.007042,-0.001144,0.325199,-0.178270) * L5_6 + mat4(-0.000752,0.096117,-0.125884,0.503104,-0.003371,-0.140154,-0.189647,-0.176198,-0.039758,0.067618,-0.098885,0.304870,-0.007622,-0.048444,0.190356,-0.077552) * L5_7 + mat4(0.054996,-0.078993,-0.209132,0.044746,0.015650,0.393287,-0.509614,-0.315676,0.034257,-0.001064,0.139561,0.003419,-0.032428,-0.055846,-0.350865,-0.134109) * L5_8 + mat4(-0.116457,-0.194768,0.258732,0.156564,0.020730,-0.197853,0.501461,-0.317831,-0.074082,-0.120449,0.402975,-0.269721,-0.189016,0.068865,0.447967,0.169613) * L5_9 + vec4(1.189952,-0.423619,0.212384,-1.244563)));\nvec4 L6_2 = sin((mat4(-0.003285,0.004138,0.162370,0.059720,0.002016,-0.000398,-0.005753,-0.065016,0.009793,-0.001230,-0.102999,-0.053074,-0.001826,-0.002138,0.083776,0.075881) * L5_0 + mat4(-0.004171,-0.004033,-0.485295,0.139625,0.000237,0.000513,0.066214,0.080476,-0.001179,-0.000847,0.002658,-0.118794,0.009585,0.001918,0.070385,-0.042544) * L5_1 + mat4(-0.003253,0.003053,-0.030522,-0.143234,0.000839,0.000821,0.051717,-0.038681,-0.003378,0.005917,-0.003374,-0.032231,0.002191,0.007008,0.000755,0.290543) * L5_2 + mat4(-0.005329,-0.006337,0.185507,-0.035060,0.003424,0.005780,-0.076544,0.078523,0.003600,0.000779,-0.020988,0.145730,0.007185,0.001381,-0.092855,-0.168985) * L5_3 + mat4(0.001137,-0.000062,0.070142,0.009204,-0.004200,0.002624,-0.130583,-0.044195,-0.004973,-0.001148,-0.155692,0.050208,0.008171,0.000898,-0.058783,-0.047329) * L5_4 + mat4(-0.006517,-0.000751,0.080417,0.064590,0.004747,0.005603,0.082519,-0.154952,-0.001089,-0.002241,0.128207,0.017334,0.002227,0.000205,0.031107,0.160502) * L5_5 + mat4(-0.002219,0.001886,-0.009093,-0.184979,0.003793,0.009347,0.099619,0.006300,-0.004728,-0.004239,0.016945,0.091329,-0.006240,-0.002496,0.079352,-0.104048) * L5_6 + mat4(0.002738,-0.006299,-0.052773,-0.156292,0.001620,0.007178,0.040431,0.003074,0.004779,0.006776,-0.136751,0.079121,0.006118,0.006776,-0.019171,0.007315) * L5_7 + mat4(-0.001795,-0.003025,0.045893,-0.057015,-0.006314,-0.000202,-0.114354,-0.009381,0.006330,0.001840,-0.052561,0.072060,0.008450,-0.004358,-0.085508,-0.018442) * L5_8 + mat4(-0.000750,0.002742,-0.285581,0.054080,-0.005271,-0.000784,0.120600,0.404957,0.004866,0.006757,-0.125102,-0.128683,-0.007115,-0.001893,-0.130828,0.003929) * L5_9 + vec4(0.004216,0.006850,0.430980,-1.019668)));\nvec4 L6_3 = sin((mat4(-0.000747,-0.022433,0.008087,0.002107,0.002185,-0.096476,0.000509,-0.001420,0.005530,-0.014820,-0.007268,-0.013184,0.003674,-0.362515,-0.006723,0.002431) * L5_0 + mat4(-0.006107,-0.335767,0.004824,-0.002964,0.002974,0.046142,0.003626,-0.000169,-0.002597,-0.055494,0.005599,0.004068,0.006681,0.117951,-0.003243,-0.005023) * L5_1 + mat4(0.001289,0.092949,-0.000469,0.005955,0.002415,0.269740,-0.003980,0.005296,0.000107,0.132296,-0.003508,0.002726,0.008316,-0.083378,-0.006101,0.001514) * L5_2 + mat4(-0.009243,0.051460,0.000926,-0.000442,0.004368,-0.033245,-0.001329,-0.001238,0.005041,0.072216,-0.008131,0.004265,0.006106,0.187995,0.000166,-0.006147) * L5_3 + mat4(0.002002,-0.007674,0.001312,-0.005549,0.000577,-0.089399,0.016451,0.008223,-0.003173,-0.205625,0.000995,0.001567,0.003950,0.118646,-0.008764,-0.002393) * L5_4 + mat4(-0.005442,-0.057386,0.007984,0.006704,0.000488,0.163365,0.001564,0.001587,-0.004011,0.205901,-0.009403,-0.003641,0.003885,-0.229740,-0.001864,0.000219) * L5_5 + mat4(0.000555,0.349506,-0.003413,0.007354,0.008723,-0.172111,-0.005707,0.002830,-0.001942,0.100338,0.001972,0.004077,-0.000876,0.163324,0.000917,0.004655) * L5_6 + mat4(-0.003143,-0.005412,-0.004856,-0.007765,0.002383,-0.032013,-0.000105,0.003269,0.009613,-0.139090,-0.000081,-0.001086,0.008576,0.022736,-0.001718,-0.000737) * L5_7 + mat4(-0.004594,0.045645,0.007023,0.000589,-0.006770,-0.168825,0.003623,0.000832,0.002383,0.031413,0.001495,-0.000468,0.000262,-0.056075,0.004147,-0.007217) * L5_8 + mat4(-0.002169,-0.320406,0.002525,0.002059,-0.007606,0.465250,0.014153,0.001395,0.000175,0.151245,-0.005497,0.002033,-0.008721,-0.147687,0.002447,0.002313) * L5_9 + vec4(0.006231,0.967473,-0.006938,0.001423)));\nvec4 L6_4 = sin((mat4(0.485596,-0.002142,-0.096626,0.026618,0.149859,0.004755,-0.291046,0.046841,-0.285214,0.005568,-0.025510,0.027797,-0.010641,0.009455,-0.024814,-0.256638) * L5_0 + mat4(0.638722,-0.013677,-0.354396,-0.277183,-0.013413,-0.001630,-0.255246,-0.101003,-0.466261,0.000831,0.368342,0.082035,0.024732,0.007329,0.270732,0.128692) * L5_1 + mat4(0.012829,0.003400,-0.168261,-0.063032,-0.320539,-0.003156,0.513703,0.097030,0.003354,0.001025,0.171714,0.008431,0.283031,0.003945,-0.202760,-0.180845) * L5_2 + mat4(0.012019,-0.007711,0.148138,-0.064991,-0.453299,0.001482,-0.052349,0.011923,0.061405,0.009214,-0.005794,-0.044903,0.103827,0.004398,0.146835,0.046093) * L5_3 + mat4(-0.311306,-0.000234,-0.517519,0.060807,-0.445047,-0.009871,0.361566,-0.027417,0.313117,-0.001005,-0.267729,0.023701,0.777357,0.000241,0.373951,-0.053648) * L5_4 + mat4(0.106918,-0.000883,0.020906,-0.015056,-0.319108,-0.000965,0.012464,-0.035199,-0.447025,0.007823,-0.195443,0.027221,0.004809,0.006933,-0.101792,-0.098623) * L5_5 + mat4(-0.106753,0.002339,-0.106521,-0.035335,-0.342149,0.008415,-0.029917,-0.057219,-0.158528,0.002106,-0.183657,0.033065,-0.225192,-0.000013,0.053410,0.291285) * L5_6 + mat4(-0.075009,0.003439,-0.350905,-0.073875,0.061605,-0.001634,-0.357478,-0.060214,0.112605,0.005379,0.225853,-0.035866,-0.225046,0.004623,-0.074289,-0.012324) * L5_7 + mat4(0.584297,-0.008663,0.107948,-0.041990,-0.025302,-0.007570,0.751249,-0.202029,-0.227432,-0.000008,-0.211654,-0.125932,0.116980,-0.005492,-0.170428,-0.044240) * L5_8 + mat4(0.277544,0.000715,0.186329,0.003507,-0.242025,-0.021305,-0.068272,0.409365,-0.601703,0.002936,0.410530,0.041052,0.646633,-0.009246,0.316827,0.354879) * L5_9 + vec4(-0.408463,0.005183,-0.995126,0.623014)));\nvec4 L6_5 = sin((mat4(0.002310,0.043847,-0.271866,-0.108241,0.000018,0.194846,-0.493082,-0.333811,0.004478,-0.035799,0.188459,0.031414,-0.001391,0.347814,-0.129960,-0.515395) * L5_0 + mat4(0.004522,0.086430,-0.102772,0.190382,0.007715,-0.000736,-0.275647,0.122166,0.004281,0.008926,0.003249,0.133480,0.006767,0.323311,-0.021677,0.053117) * L5_1 + mat4(-0.005632,0.140333,-0.074798,-0.265487,-0.005527,0.140678,0.012372,0.237260,0.001259,-0.184095,-0.454281,-0.004510,-0.005516,-0.031498,0.489216,-0.280652) * L5_2 + mat4(-0.002145,0.055973,-0.068693,0.101656,0.001411,0.074813,0.025716,0.060190,-0.004313,0.164356,0.161451,0.185491,0.007875,-0.406238,0.247700,0.049213) * L5_3 + mat4(-0.000523,0.404972,-0.178414,0.132799,0.002325,-0.074866,-0.105095,0.160045,-0.000057,0.258295,-0.126798,-0.084242,-0.007487,-0.194133,-0.411849,0.055622) * L5_4 + mat4(0.003021,0.331101,0.300745,0.002041,-0.000218,0.237794,0.015729,0.031800,-0.001544,0.345245,-0.063611,0.252219,-0.002901,-0.264493,-0.244733,0.076353) * L5_5 + mat4(-0.005136,0.454116,-0.693187,0.115294,-0.000501,-0.171223,-0.041670,-0.190864,0.002051,0.045294,0.634715,-0.021890,-0.008915,-0.076073,0.630079,-0.431246) * L5_6 + mat4(0.003661,0.193551,0.359997,0.224058,0.003412,-0.369409,0.028090,-0.105934,0.003677,0.018018,0.369824,0.166586,0.006183,-0.007138,0.009196,-0.112775) * L5_7 + mat4(0.002666,0.113201,0.064431,0.254363,0.006918,0.054803,0.268963,-0.409466,0.005757,0.001743,-0.001407,0.080178,0.000519,-0.074527,0.360478,-0.103192) * L5_8 + mat4(-0.005511,-0.061810,-0.510500,0.315563,0.004962,0.143077,0.090120,-0.256324,0.001153,0.368586,0.177055,-0.166559,0.004265,-0.151030,-0.027333,-0.104462) * L5_9 + vec4(0.000322,-0.136784,-0.748064,0.578112)));\nvec4 L6_6 = sin((mat4(-0.026937,-0.083897,-0.005754,-0.012289,0.570001,0.084114,0.005121,0.020419,-0.023357,0.068341,0.001368,0.114120,-0.059295,0.183631,0.003093,0.266226) * L5_0 + mat4(-0.084378,-0.081189,-0.004994,0.098704,-0.064423,-0.131673,-0.005956,0.137430,0.027853,0.022140,0.003830,-0.242948,0.180334,0.179101,0.005884,0.027394) * L5_1 + mat4(0.221914,-0.091383,0.000558,-0.147114,0.038825,0.197714,0.004411,-0.311754,0.002948,0.195726,0.002000,-0.040077,0.133186,-0.151591,0.004310,0.168559) * L5_2 + mat4(-0.037986,-0.020770,0.002817,-0.127011,0.063475,-0.078927,0.004874,0.025312,0.154534,-0.250881,0.007740,-0.162383,-0.206340,0.042400,-0.002602,-0.062529) * L5_3 + mat4(-0.080068,0.097341,-0.005893,-0.100681,-0.275758,-0.144201,-0.008792,-0.147599,0.014856,-0.108975,-0.005454,-0.045448,0.045766,0.014365,0.008126,0.191743) * L5_4 + mat4(-0.113488,0.024369,0.001380,0.089496,0.057534,0.345732,-0.004335,0.213375,0.163073,0.158424,-0.003290,-0.303479,-0.037810,0.051390,-0.006386,-0.042401) * L5_5 + mat4(0.041301,-0.273271,0.003337,-0.131837,-0.135731,0.030511,0.002007,-0.064166,0.004970,0.023501,-0.009422,0.057722,-0.370682,-0.025932,-0.004475,0.097445) * L5_6 + mat4(-0.056823,-0.228189,-0.004498,0.014105,-0.024379,0.005849,0.001063,-0.001606,0.087780,0.094916,0.003158,-0.040311,0.161469,-0.018284,0.000129,0.013812) * L5_7 + mat4(-0.155896,-0.044473,0.000721,0.100607,0.076139,-0.041781,-0.000321,-0.298487,-0.053214,-0.028806,-0.002716,-0.056824,-0.148101,0.110820,0.000882,-0.049249) * L5_8 + mat4(0.192801,-0.181967,0.002782,0.011531,0.152323,-0.257637,-0.004034,-0.362852,-0.147633,0.094132,0.004286,0.235348,-0.071106,0.185044,-0.007636,-0.059069) * L5_9 + vec4(-0.232606,-0.958810,0.003855,0.206208)));\nvec4 L6_7 = sin((mat4(-0.160899,0.026847,-0.120208,-0.200988,-0.036496,-0.197973,0.057068,-0.123375,0.032284,-0.124442,0.086689,0.005852,-0.098513,-0.298829,-0.203664,0.020646) * L5_0 + mat4(-0.177049,-0.180457,-0.096904,-0.399075,0.144918,0.063500,0.021505,0.087166,-0.387379,0.020405,-0.146353,0.460075,-0.115106,0.079158,-0.097823,-0.255314) * L5_1 + mat4(0.228080,0.115141,-0.038077,-0.176939,-0.069196,0.253861,0.086034,0.351883,0.043110,-0.222168,0.062298,-0.134790,0.384062,-0.206503,-0.109208,0.010144) * L5_2 + mat4(-0.143082,-0.139302,0.007027,-0.217486,-0.014889,0.103941,-0.087012,0.185349,0.021230,-0.482007,0.106283,-0.042584,0.123096,-0.027423,-0.102829,-0.033524) * L5_3 + mat4(-0.071509,-0.278962,0.001269,0.006125,0.153795,-0.080044,-0.035537,-0.093263,0.029272,-0.038192,0.158520,-0.224679,0.412876,0.029151,0.211076,0.096726) * L5_4 + mat4(0.078077,-0.013565,-0.212326,0.240785,0.087058,0.087234,-0.124480,-0.205671,0.044564,0.157258,0.006126,0.049892,-0.025563,-0.143003,0.005140,0.106060) * L5_5 + mat4(0.337137,-0.083980,0.133775,0.289178,0.051415,0.095608,-0.112247,0.348902,-0.014237,0.217013,-0.134296,-0.047421,-0.012892,-0.223300,0.026258,-0.000718) * L5_6 + mat4(0.328511,-0.083297,0.047975,-0.180053,-0.137153,-0.065996,0.038104,-0.012536,0.216498,0.163024,0.093157,-0.158823,0.123420,0.347769,0.050547,-0.225516) * L5_7 + mat4(-0.192129,0.040115,0.080611,0.148698,-0.064099,0.100593,-0.014197,0.081227,-0.001248,-0.229825,-0.026582,0.007027,0.030582,0.093679,0.113903,0.018991) * L5_8 + mat4(0.192102,-0.365227,-0.097994,0.161773,0.688609,-0.211920,-0.267818,-0.107061,-0.132768,-0.236561,0.036550,0.111685,-0.201417,-0.036220,-0.015441,-0.145729) * L5_9 + vec4(0.603191,-0.238116,-0.002235,0.014775)));\nvec4 L6_8 = sin((mat4(0.003222,0.002214,-0.177136,0.027539,-0.002818,0.001003,-0.204846,0.014841,-0.001755,-0.005368,-0.063689,0.012820,0.003499,0.006656,-0.275663,0.359529) * L5_0 + mat4(-0.003351,0.002976,-0.008622,0.131733,0.008288,0.000677,0.171572,0.034284,-0.002209,0.003448,-0.334218,0.021746,-0.000833,-0.001902,-0.493326,-0.111594) * L5_1 + mat4(-0.001698,-0.005353,0.056574,-0.130653,-0.005151,-0.001373,-0.417757,-0.300000,0.004821,0.005832,0.252040,-0.116914,-0.010338,-0.005408,0.320560,0.165982) * L5_2 + mat4(-0.003251,0.001468,0.331384,0.041327,-0.006067,0.002280,-0.032121,0.073372,-0.007481,0.002793,1.113302,0.174606,0.004802,0.001598,-0.079692,0.096117) * L5_3 + mat4(0.007928,-0.002558,-0.039000,0.082312,0.001877,0.000988,-0.153711,0.077239,0.005077,0.003328,0.226239,0.147422,-0.007013,-0.010869,0.292267,0.001733) * L5_4 + mat4(0.005749,0.015366,-0.493011,-0.026591,-0.002881,-0.008343,-0.431598,-0.010387,0.001657,-0.002981,0.242123,-0.126214,0.000806,0.000241,0.190841,-0.132146) * L5_5 + mat4(-0.003397,0.005433,0.130047,0.001759,-0.002638,-0.000660,0.193832,0.184789,0.007526,0.009399,-0.069649,-0.138891,-0.009093,0.006189,0.175328,0.079512) * L5_6 + mat4(0.005795,0.004181,0.016254,0.053985,0.000376,-0.001621,0.123793,0.120690,0.006838,0.001789,-0.335088,0.000444,0.005635,0.005741,-0.060492,0.037016) * L5_7 + mat4(0.006278,-0.001334,0.408018,0.026161,0.009913,0.003733,0.298592,0.273001,0.005815,-0.003325,0.074989,0.005342,0.005094,-0.011681,0.065891,0.048684) * L5_8 + mat4(0.000562,-0.002670,-0.255150,0.340128,0.006240,-0.009439,0.028960,-0.251871,0.006753,-0.007703,-0.076781,0.058590,0.001616,-0.000215,-0.786707,0.333274) * L5_9 + vec4(-0.006348,-0.002434,-0.054571,-0.000432)));\nvec4 L6_9 = sin((mat4(0.000659,0.002647,0.001206,0.005579,0.000829,0.000734,-0.001952,-0.001587,0.009065,0.003379,0.004615,0.005487,-0.000431,-0.002166,0.003456,0.004746) * L5_0 + mat4(-0.000531,-0.001175,-0.010377,-0.000977,0.005573,0.004462,-0.004774,0.005580,0.002133,-0.002535,0.001390,0.000504,0.009053,0.004867,-0.004384,0.001908) * L5_1 + mat4(-0.003694,-0.000935,0.010652,-0.003675,-0.005611,-0.001811,0.002259,-0.010141,-0.000587,0.004173,-0.003445,-0.002042,0.004400,0.003084,0.002708,-0.005979) * L5_2 + mat4(-0.002140,-0.008571,-0.005708,-0.006310,0.007303,0.004172,0.000865,0.000976,-0.000361,0.000252,0.006244,-0.004513,0.012775,0.005775,-0.004281,0.005017) * L5_3 + mat4(0.002600,0.003302,-0.003129,0.003732,0.002805,0.000596,0.004272,0.004752,0.000974,-0.000788,-0.006975,0.003438,-0.002999,0.000300,0.003408,-0.008452) * L5_4 + mat4(-0.000850,-0.000249,-0.007809,0.000638,0.003680,0.003228,0.003308,-0.001878,0.003273,-0.000313,-0.003169,-0.003094,0.000159,0.000895,-0.002098,0.010564) * L5_5 + mat4(-0.006577,-0.001008,-0.001139,-0.004395,0.005934,0.007216,-0.000876,0.002074,0.004306,-0.002237,-0.005673,0.007731,0.001061,-0.004945,0.007384,0.001765) * L5_6 + mat4(-0.002216,-0.001730,-0.000380,0.005313,0.005695,0.005676,-0.002742,-0.000915,0.001354,0.008018,-0.002943,0.004781,0.006755,0.008094,-0.000565,0.009478) * L5_7 + mat4(-0.000343,-0.003546,-0.002951,-0.002644,0.004820,0.000018,-0.012400,-0.003512,-0.001791,0.004042,0.003359,0.002072,-0.001948,-0.001289,0.002298,-0.004293) * L5_8 + mat4(0.001710,-0.000940,0.000346,-0.003884,0.000102,-0.005526,-0.000120,-0.001475,-0.000029,0.004429,-0.003084,-0.007526,-0.003728,-0.003431,0.001748,-0.004853) * L5_9 + vec4(0.004684,0.007491,-0.008331,-0.004244)));\nvec3 F_0 = (mat4x3(0.001834,-0.012685,-0.024440,-0.009253,0.085460,0.006072,0.000525,0.000705,0.000224,0.023945,-0.012163,-0.072321) * L6_0 + mat4x3(0.040536,-0.087220,-0.296239,-0.077636,-0.026266,-0.071827,0.005799,0.000135,0.002473,0.015672,-0.010792,-0.010975) * L6_1 + mat4x3(0.000401,0.000324,-0.000494,0.000039,-0.000342,-0.000142,-0.094932,-0.059335,-0.064869,-0.033916,0.100982,-0.020017) * L6_2 + mat4x3(0.000465,-0.000249,-0.000213,0.003988,-0.016761,0.007520,-0.000151,-0.001230,0.000965,-0.000604,-0.001569,0.000096) * L6_3 + mat4x3(0.008523,0.005076,0.005423,0.000494,0.000934,-0.000180,-0.016927,-0.007725,-0.014631,-0.109439,-0.070054,0.023291) * L6_4 + mat4x3(0.000512,0.000737,0.001149,0.001224,-0.005857,0.005122,0.002198,-0.006656,-0.008264,0.022649,-0.006127,-0.035694) * L6_5 + mat4x3(0.028839,0.011661,-0.029807,0.119856,0.104587,0.104108,0.000722,0.000854,-0.000264,0.059977,0.023858,0.044098) * L6_6 + mat4x3(-0.038508,-0.030428,-0.032719,-0.039204,-0.024927,-0.032312,0.007057,-0.026149,0.019247,-0.027181,-0.019447,-0.019100) * L6_7 + mat4x3(0.000287,0.000395,0.001371,0.000715,0.000238,0.001073,0.002685,0.005480,-0.001066,0.071237,0.084033,0.095065) * L6_8 + mat4x3(0.000652,0.000339,0.000897,0.000435,0.000327,0.000203,-0.000468,-0.001164,-0.001565,0.000464,-0.000044,0.000831) * L6_9 + vec3(-0.371355,-0.206290,-0.129140));\nreturn F_0;\n}\n\n#pragma optimize(on)\n\n\n\n#pragma optimize(off)\nvec3 Lightmap_Render_HPG(const vec3 view_0, const Hidden hidden)\n{\nvec4 L3_0 = hidden.H_0;\nvec4 L3_1 = hidden.H_1;\nvec4 L3_2 = hidden.H_2;\nvec4 L3_3 = hidden.H_3;\nvec4 L3_4 = hidden.H_4;\nvec4 L3_5 = hidden.H_5;\nvec4 L3_6 = hidden.H_6;\nvec4 L3_7 = hidden.H_7;\nvec4 L3_8 = sin(60.000000 * (mat3x4(-0.610537,0.026873,0.120151,-0.173276,-0.018691,1.065181,-0.357831,0.345083,-0.092272,-0.074188,0.122743,-0.126620) * view_0 + vec4(-0.174542,0.311827,0.216450,-0.354399)));\nvec4 L3_9 = sin(60.000000 * (mat3x4(-0.268041,-0.025890,-0.206641,-0.858249,-0.957573,0.574631,0.953496,0.019887,-0.017086,-0.228383,-0.736921,-0.276326) * view_0 + vec4(0.361415,0.268896,0.048870,0.123459)));\nvec4 L3_10 = sin(60.000000 * (mat3x4(0.239083,-0.557893,0.025580,0.056149,0.552965,-0.082052,0.261647,0.740962,0.024574,-0.388923,-0.172426,-0.071613) * view_0 + vec4(0.322267,-0.188535,-0.083640,0.213313)));\nvec4 L3_11 = sin(60.000000 * (mat3x4(-0.236946,-0.000105,0.241487,0.295747,-0.452796,-0.921740,-0.619225,0.446706,-0.751551,0.080143,0.479358,0.661693) * view_0 + vec4(0.628426,-0.205696,-0.485166,-0.485618)));\nvec4 L3_12 = sin(60.000000 * (mat3x4(0.770706,0.052310,0.007061,-0.427195,-0.053144,1.268753,-0.006384,0.240940,-0.018090,0.132392,-0.068430,0.147829) * view_0 + vec4(0.289557,-0.271671,0.142169,-0.173670)));\nvec4 L3_13 = sin(60.000000 * (mat3x4(-0.208015,0.422227,0.063400,0.266566,1.003101,0.108857,0.449129,1.024727,-0.705350,0.303469,-0.025732,0.220560) * view_0 + vec4(0.531450,-0.070543,-0.290068,-0.118927)));\nvec4 L3_14 = sin(60.000000 * (mat3x4(-0.023855,0.358287,0.009393,-1.122065,-0.451114,0.045567,0.002011,0.060031,0.126952,0.394753,0.031366,-0.098860) * view_0 + vec4(-0.061743,0.147228,-0.205003,-0.278900)));\nvec4 L3_15 = sin(60.000000 * (mat3x4(-0.298879,0.512687,-0.243146,-0.002393,-0.360974,-0.262116,0.629408,0.007093,0.267772,0.309964,-0.114587,0.048475) * view_0 + vec4(-0.240321,0.223124,0.566815,-0.187623)));\nvec4 L4_0 = sin((mat4(0.182893,0.213927,0.088585,-0.116092,1.244977,-0.499288,0.397595,1.189456,0.366967,-0.033382,0.237574,0.052374,-0.134688,-0.735386,0.104774,-0.009533) * L3_0 + mat4(-0.551168,0.272775,0.215810,-0.169062,-0.086989,-0.299916,-0.282983,0.236504,0.166143,-0.091491,-0.137329,-0.053605,0.137949,-0.588937,0.254492,0.411292) * L3_1 + mat4(0.099098,-0.009285,0.159274,0.019966,-0.040194,-0.080378,-0.068560,-0.016999,0.146498,0.214399,0.173040,-0.212996,0.272666,-0.434585,0.117807,0.052000) * L3_2 + mat4(-0.163521,-0.156558,0.111907,0.276012,0.528206,0.092327,0.035186,0.150352,-0.416287,-0.115415,0.362043,-0.125848,0.086268,0.209890,-0.232523,-0.312032) * L3_3 + mat4(0.143088,0.061056,-0.046702,-0.045613,0.163187,-0.246167,0.326276,-0.722202,0.174059,-0.210309,0.195414,0.110439,0.433439,0.180586,0.401291,0.351335) * L3_4 + mat4(0.123253,-0.056590,0.275740,-0.022816,-0.601899,-0.345201,-0.416777,0.339162,0.004256,0.277544,0.343400,-0.257403,0.066427,-0.001708,0.332484,-0.239291) * L3_5 + mat4(-0.120141,-0.012959,-0.061415,-0.105777,0.435278,0.188384,-0.173680,0.242145,-0.128438,-0.025784,0.023092,-0.072883,-0.079712,0.222444,0.159420,-0.190390) * L3_6 + mat4(-0.425082,0.351925,-0.136641,-0.985810,-0.192624,0.046525,-0.020374,0.158085,-1.215437,-0.178313,0.503897,-0.527848,-0.031329,-0.135637,0.129382,0.228334) * L3_7 + mat4(-0.138913,-0.024554,-0.003284,-0.130711,0.000647,-0.005100,-0.009795,-0.067029,0.062413,-0.003882,-0.150862,-0.171381,0.050102,-0.032514,-0.004903,-0.227679) * L3_8 + mat4(-0.034058,-0.013071,-0.022493,0.081959,-0.013834,0.024490,-0.029304,-0.150252,-0.003038,0.018020,0.000884,0.022678,0.100148,-0.015731,0.024361,-0.074145) * L3_9 + mat4(-0.021238,0.001230,-0.001015,-0.093024,-0.472393,0.051940,0.003996,-0.116006,0.142158,0.146445,0.011488,-0.402195,0.012921,-0.008995,-0.064019,-0.084178) * L3_10 + mat4(-0.034988,0.015318,0.008485,-0.077311,0.017556,-0.048444,0.011890,0.281820,0.002176,0.001797,0.005178,0.075244,0.072857,-0.032349,0.051973,0.038787) * L3_11 + mat4(0.103608,0.027931,-0.040363,-0.045968,0.016875,-0.006331,-0.001926,0.042707,-0.011189,-0.010918,0.009656,0.028761,-0.018420,-0.021160,0.073485,-0.062545) * L3_12 + mat4(-0.016944,-0.044370,0.022509,0.079825,0.219469,-0.004287,-0.022858,0.282878,-0.065471,0.033358,-0.059306,-0.117093,-0.016317,0.014428,0.009738,-0.046281) * L3_13 + mat4(-0.071795,-0.060057,0.050734,0.825328,-0.616639,-0.118578,-0.218547,0.029105,-0.070891,0.003532,0.180722,0.030590,-0.006952,-0.011373,0.052126,0.018754) * L3_14 + mat4(-0.010275,0.005279,-0.027315,-0.118725,-0.009546,-0.021460,-0.022389,0.025231,-0.004909,-0.007540,-0.015905,-0.146268,-0.053262,0.004631,0.183217,0.051646) * L3_15 + vec4(0.328699,0.023802,-0.303963,0.027973)));\nvec4 L4_1 = sin((mat4(-0.025375,-0.179846,0.023350,0.162621,-0.252701,-0.700915,0.607541,0.715396,0.000793,-0.007038,-0.190797,0.061400,-0.165974,-0.506361,0.551022,-0.127999) * L3_0 + mat4(0.003855,0.174961,-0.430339,0.321566,0.300884,0.016178,-0.145055,-0.167942,-0.074768,0.450353,-0.176706,0.237863,0.414531,0.186790,0.115531,-0.417002) * L3_1 + mat4(-0.272096,0.274472,-0.462249,-0.163820,0.191400,-0.276302,0.293628,0.349422,0.141706,-0.070268,-0.087389,-0.214557,0.406487,-0.040373,0.624016,0.608230) * L3_2 + mat4(-0.232471,-0.385153,0.063052,-0.268652,0.016289,-0.193116,-0.232231,-0.150750,-0.141352,-0.410258,0.804912,-0.092519,-0.176042,-0.434183,-0.509552,-0.421634) * L3_3 + mat4(0.359797,-0.215441,-0.304575,0.017939,-0.083557,-0.093167,-0.152761,0.203572,-0.147645,0.260042,0.005327,-0.092222,0.299493,-0.250953,-0.044678,0.107165) * L3_4 + mat4(-0.119042,-0.195148,-0.222488,-0.006896,0.062209,-0.481419,-0.516250,-0.227695,0.220936,0.083049,0.271307,0.011734,-0.054895,-0.132676,0.290205,0.020820) * L3_5 + mat4(-0.101312,0.033484,-0.264908,-0.069122,-0.034055,0.321589,-0.114562,-0.337930,-0.150613,0.385769,0.048225,-0.292495,0.035986,0.529289,-0.220853,-0.400869) * L3_6 + mat4(-0.161312,0.363056,-0.036695,-0.582775,-0.047044,-0.078644,-0.058163,0.329961,-0.420132,0.333895,0.242242,-0.180876,-0.000788,-0.201235,0.244958,0.095183) * L3_7 + mat4(-0.160047,-0.025729,0.054393,-0.106700,-0.003904,-0.110782,-0.000402,-0.033381,-0.040804,-0.203423,0.068091,-0.015474,-0.039614,0.068109,0.117769,0.119113) * L3_8 + mat4(-0.008565,0.054587,0.010631,0.006788,0.025728,0.051596,0.040781,0.021040,0.037736,0.107502,-0.015032,0.018658,-0.281241,0.058700,-0.022101,-0.000837) * L3_9 + mat4(0.018764,0.094803,0.007969,0.047366,0.676400,-0.101569,-0.022187,-0.091788,-0.030925,0.488987,0.244031,0.099027,0.017309,0.090539,0.018503,0.002642) * L3_10 + mat4(0.008348,0.000275,0.005342,-0.034582,0.001978,-0.046042,0.015412,-0.018558,-0.024166,-0.034330,-0.000820,-0.030687,-0.049651,-0.128488,0.009206,-0.024049) * L3_11 + mat4(-0.161484,-0.030213,-0.045238,-0.024199,0.030718,-0.079024,0.016674,-0.008085,0.017324,0.002406,0.005242,0.005335,-0.118251,0.085436,0.009826,0.036122) * L3_12 + mat4(-0.022355,0.004184,-0.013311,-0.001133,-0.254029,-0.085036,-0.000748,-0.109199,0.014793,-0.124973,-0.012299,0.042770,0.019143,0.055045,0.020720,-0.001358) * L3_13 + mat4(0.002538,-0.793725,-0.043550,-0.070673,0.441402,0.247063,0.140880,-0.019145,-0.072180,0.234444,-0.028043,-0.192562,0.015642,0.028511,-0.003364,-0.005429) * L3_14 + mat4(0.020906,0.152910,0.035965,-0.031091,0.012247,0.019884,-0.007072,-0.020729,-0.000963,0.074760,-0.021575,-0.000772,-0.078688,0.208423,-0.030316,-0.206584) * L3_15 + vec4(-0.326311,-0.232177,-0.219921,0.637027)));\nvec4 L4_2 = sin((mat4(-0.238121,0.095503,0.016082,0.040208,-1.136205,0.595208,-0.049899,-1.625274,-0.118335,-0.181101,0.858065,0.244376,-0.458563,0.348361,-0.927802,1.013896) * L3_0 + mat4(0.282980,-0.257792,-0.303630,0.185973,-0.401899,-0.086834,-0.199188,-0.215868,-0.365318,0.037065,0.043876,-0.093465,0.239140,0.050011,0.176934,-0.516509) * L3_1 + mat4(0.257365,0.141330,0.311366,0.032794,-0.665411,0.149413,-0.442700,0.113369,-0.056206,0.045953,0.456834,-0.271764,0.048649,-0.054829,-0.326922,-0.605566) * L3_2 + mat4(-0.025455,-0.033333,-0.186933,0.138911,-0.194562,0.147722,-0.001818,-0.039134,-0.322342,-0.549344,-0.470050,0.035311,0.850400,-0.222628,-0.121676,0.706312) * L3_3 + mat4(-0.337355,-0.327993,-0.284796,-0.568945,-0.080914,-0.416105,-0.271929,-0.270409,0.143547,0.081900,-0.189677,0.057905,-0.159805,-0.122396,0.342180,-0.297075) * L3_4 + mat4(-0.515696,0.133960,0.641968,0.232465,0.031313,-0.192319,0.029225,-0.321473,-0.064266,-0.099055,0.143918,-0.789194,0.054849,0.147001,-0.238249,0.557910) * L3_5 + mat4(-0.322530,0.020028,0.088761,-0.152752,-0.065647,0.019807,0.240822,0.551703,-0.052380,0.155958,0.097471,-0.092331,-0.015726,0.122159,0.373661,-0.117821) * L3_6 + mat4(0.005410,-0.365090,0.144117,-0.061299,-0.358457,0.076363,-0.338357,-0.454694,0.076493,-0.552057,0.293800,-0.423705,0.023494,0.136321,0.287765,-0.092285) * L3_7 + mat4(-0.164584,0.587751,-0.081647,0.127350,0.024306,0.081343,0.038757,0.002218,-0.023120,-0.111019,-0.004531,0.039485,0.020867,-0.004498,0.045255,-0.090866) * L3_8 + mat4(-0.031631,0.003841,-0.023204,-0.011966,-0.004018,0.021257,0.008762,0.009369,-0.016796,-0.016792,-0.034074,0.000928,-0.017044,0.048473,-0.031589,-0.045378) * L3_9 + mat4(0.010064,-0.024438,0.019147,0.019565,0.055099,-0.213649,0.109529,-0.118155,0.114300,-0.019249,0.087335,0.163557,-0.003074,0.115688,0.024839,-0.054188) * L3_10 + mat4(0.010032,-0.005971,0.006073,-0.007886,-0.014811,-0.060970,0.013215,-0.018449,0.025064,-0.009615,-0.013134,-0.017680,0.046813,0.026928,-0.017155,-0.042103) * L3_11 + mat4(0.011456,0.261236,0.035089,0.009859,-0.014464,-0.018828,-0.004038,0.010131,0.006724,0.004512,0.011882,-0.006084,0.004062,-0.031233,0.011808,-0.053442) * L3_12 + mat4(0.003782,0.037826,-0.002150,-0.001301,-0.093805,0.410402,0.048588,0.195550,-0.006036,-0.026560,-0.038818,-0.020219,0.012413,0.004991,0.003150,-0.014224) * L3_13 + mat4(0.010836,-0.039278,-0.081816,0.052611,0.136896,0.007713,-0.148314,-0.067167,0.110223,-0.237912,0.092344,0.124554,-0.001634,-0.036576,-0.030813,-0.011043) * L3_14 + mat4(-0.019209,0.016181,0.007438,0.002710,-0.010850,-0.025105,-0.027719,0.014972,-0.009553,0.014174,-0.035810,-0.012180,0.136739,-0.283821,0.085841,0.092870) * L3_15 + vec4(-0.713011,0.229140,0.446253,-0.549325)));\nvec4 L4_3 = sin((mat4(-0.227026,0.172619,-0.049994,-0.078365,-0.743494,-0.017857,0.397062,-0.559878,-0.224078,-0.368378,-0.104876,-0.275133,0.356473,-0.402999,0.413785,0.147013) * L3_0 + mat4(-0.097755,-0.059217,0.262350,-0.150403,-0.017059,0.277349,-0.026501,0.100670,-0.150745,-0.114693,-0.501529,0.113002,0.025879,0.194135,0.383026,0.475584) * L3_1 + mat4(0.155185,-0.031635,0.281567,0.024538,0.445486,-0.400110,-0.072767,-0.106790,-0.174237,0.287083,-0.362279,-0.050815,-0.262054,0.264414,-0.731848,-0.356309) * L3_2 + mat4(-0.043461,-0.133332,-0.108838,0.039897,0.210249,-0.131661,-0.170566,0.154031,-0.041441,0.246301,-0.152672,-0.087497,0.141891,-0.380359,-0.167206,0.055490) * L3_3 + mat4(0.052909,-0.012922,-0.108707,-0.325708,-0.448886,-0.474438,-0.205951,0.787156,0.084758,-0.476207,-0.288354,0.067404,-0.333384,0.538913,-0.122946,-0.058107) * L3_4 + mat4(-0.026665,-0.333049,-0.347763,-0.031658,-0.126301,0.441469,-0.261118,-0.384657,0.560101,0.099199,-0.044473,0.449983,0.376089,-0.441291,-0.006225,0.290222) * L3_5 + mat4(0.206088,-0.102049,-0.058774,-0.118927,0.095387,0.364527,0.061088,-0.253561,-0.461439,0.102310,-0.473868,0.586565,-0.304241,-0.195981,-0.330949,0.112125) * L3_6 + mat4(-0.406553,-0.088113,-0.357161,0.351848,0.114361,0.135891,-0.377352,0.043614,-0.339456,-0.162731,0.046995,-0.004809,-0.250574,-0.039249,-0.066856,0.016871) * L3_7 + mat4(0.231192,0.124199,-0.112673,0.045626,-0.087977,-0.018299,-0.033399,0.224132,0.026978,0.006729,0.428249,0.511214,-0.140145,-0.134366,0.077805,0.023953) * L3_8 + mat4(-0.015802,0.019601,-0.015967,-0.048246,-0.199147,0.007201,-0.084203,0.113783,0.011620,0.006650,0.010614,-0.038802,0.071361,-0.013018,-0.012003,0.059932) * L3_9 + mat4(0.023830,0.018976,-0.059434,0.094599,-0.089329,-0.122038,-0.109395,0.022009,-0.310960,-0.051809,0.073591,-0.437942,-0.110573,-0.040762,0.084490,-0.021670) * L3_10 + mat4(0.034646,-0.063370,-0.080676,0.071980,0.077060,-0.022590,0.076061,-0.106487,-0.026982,-0.042156,-0.024552,-0.139853,0.042689,-0.072793,0.041755,-0.049835) * L3_11 + mat4(0.068952,0.032646,-0.025462,0.025790,0.047572,-0.004335,0.021205,-0.037561,-0.004287,0.010053,-0.024098,-0.012769,0.004812,0.025165,0.042871,-0.028473) * L3_12 + mat4(-0.042171,-0.030767,-0.004755,0.078725,-0.066123,-0.179504,0.048044,0.023329,-0.100085,-0.001194,-0.165620,0.372954,0.001716,-0.009822,0.005443,-0.098478) * L3_13 + mat4(0.333999,0.017524,-0.377796,-0.619928,0.300258,-0.207289,0.097383,0.078495,0.168281,0.142198,-0.060136,0.099509,0.051467,0.013222,0.016599,0.052426) * L3_14 + mat4(0.045461,-0.049653,0.011017,0.111060,-0.040794,-0.010353,-0.012941,0.011969,0.011542,-0.034050,-0.110135,-0.040930,0.178018,0.126255,-0.076507,0.169058) * L3_15 + vec4(-0.879584,-0.348150,0.033775,-0.266481)));\nvec4 L4_4 = sin((mat4(0.247775,0.120563,0.103749,-0.016277,0.009244,-1.403101,-0.439473,0.491364,0.241299,-0.265237,-0.243672,0.127160,-0.120815,0.022354,0.077237,0.269114) * L3_0 + mat4(0.124234,0.030641,-0.167168,0.055391,-0.043323,0.004503,0.067082,0.196154,0.070911,0.003385,0.122362,0.126197,-0.591207,-0.120882,-0.265266,0.221159) * L3_1 + mat4(-0.202101,-0.154115,0.134832,-0.247680,-0.363254,0.104785,-0.668216,0.111346,-0.155901,0.183460,0.132763,0.010623,0.123401,-0.439444,0.125454,-0.012259) * L3_2 + mat4(-0.196577,0.143432,0.071710,-0.047728,0.056576,0.067783,-0.025628,0.121641,-0.304770,-0.236675,-0.511901,0.026679,-0.364925,0.724510,0.923892,0.057974) * L3_3 + mat4(-0.057569,-0.383280,-0.224221,0.305854,-0.599592,-0.297402,-0.404369,0.002327,0.245851,0.209287,-0.263262,-0.035925,-0.089758,0.144662,0.157401,0.405056) * L3_4 + mat4(0.219197,-0.108867,0.214096,-0.052080,0.014462,-0.320449,-0.493893,0.103848,-0.131528,0.518757,0.245528,0.213849,0.683764,-0.270501,-0.259141,0.167642) * L3_5 + mat4(-0.384827,0.214936,0.134327,-0.151128,0.517769,-0.108797,0.205411,-0.010231,0.346115,0.011595,-0.059253,-0.334761,0.011599,0.057463,-0.081205,0.056228) * L3_6 + mat4(-0.079446,0.072662,-0.634814,0.242625,-0.204371,0.221042,-0.260822,-0.251425,0.060817,-0.338027,0.203408,-0.426838,-0.046908,0.067275,0.293649,0.005546) * L3_7 + mat4(0.007345,-0.004799,-0.021197,0.575137,0.030735,-0.055463,-0.032703,0.010978,0.083063,-0.014983,-0.044109,-0.079281,-0.017635,-0.196417,0.018444,-0.134271) * L3_8 + mat4(-0.000095,-0.015975,0.004921,0.044937,-0.028516,-0.039164,-0.036639,-0.013654,-0.025250,0.005943,-0.019608,0.015744,0.010609,0.097639,-0.071071,-0.108055) * L3_9 + mat4(-0.011632,-0.012561,-0.009842,-0.007156,0.029398,-0.172918,0.263345,0.448328,-0.085169,-0.371884,-0.055473,0.003575,-0.002443,-0.044557,-0.022008,0.048814) * L3_10 + mat4(-0.001147,-0.016618,-0.009061,0.046648,0.017575,-0.021385,-0.041197,-0.015467,-0.009402,0.013297,-0.019728,-0.026897,0.006347,0.092360,0.000829,0.002193) * L3_11 + mat4(0.031856,0.125201,0.106570,0.250005,0.012594,-0.012565,-0.002440,-0.000648,0.001007,-0.006485,-0.014455,0.017508,-0.011700,0.007925,-0.085948,0.058289) * L3_12 + mat4(0.009687,-0.057165,-0.021405,0.007872,-0.076641,0.328448,0.343426,-0.368510,-0.019318,-0.029904,-0.002964,-0.006321,-0.010897,-0.018953,-0.005370,0.028635) * L3_13 + mat4(0.023903,-0.062031,-0.104403,-0.034459,-0.039185,0.504381,0.067876,0.815935,0.091083,0.078001,-0.021579,-0.103689,-0.010514,0.012328,-0.018604,-0.174173) * L3_14 + mat4(-0.002242,-0.028481,0.022405,0.067751,0.000627,-0.014483,0.012382,0.001534,-0.005176,0.016005,0.002411,-0.000032,0.102713,0.046635,-0.018870,-0.106098) * L3_15 + vec4(-0.368503,-1.142439,-0.595218,-1.208363)));\nvec4 L4_5 = sin((mat4(0.104710,0.048020,-0.496092,0.054151,-0.404865,0.521196,-0.754498,-0.288150,0.060045,-0.094389,-0.260899,0.071601,1.008312,-0.533465,-0.114901,0.041825) * L3_0 + mat4(0.082992,-0.152756,-0.281248,-0.050069,-0.333860,0.327574,-0.062853,-0.198374,-0.193711,0.035187,-0.047668,-0.187998,-0.090087,0.174028,-0.347503,-0.077878) * L3_1 + mat4(0.333716,0.073512,-0.066182,-0.175228,0.030918,0.110918,-0.310854,-0.008738,0.154961,-0.019698,-0.062747,0.307273,-0.421412,0.305674,0.053926,-0.443159) * L3_2 + mat4(0.238469,-0.116731,0.108687,-0.293584,0.004379,0.085501,0.313663,-0.022100,-0.369820,0.248682,-0.254227,0.537381,-0.092424,-0.554339,0.373986,-1.031652) * L3_3 + mat4(-0.191672,-0.031754,0.265715,-0.274186,0.094074,-0.193527,-0.020569,0.445600,0.367032,-0.106950,-0.061740,0.057168,-0.125946,0.290305,-0.416370,-0.216919) * L3_4 + mat4(0.216027,-0.487449,-0.312532,-0.550675,-0.533336,0.042388,-0.544904,0.068919,0.168604,-0.126482,0.132990,0.007265,0.276197,-0.241138,-0.611601,0.124573) * L3_5 + mat4(0.092804,0.084670,-0.366507,-0.141379,-0.244942,-0.012139,0.363199,0.181317,0.119278,-0.315328,-0.103125,-0.098971,-0.132894,-0.116086,-0.118033,0.633473) * L3_6 + mat4(-0.113456,0.138145,0.071266,0.174379,-0.190971,0.029882,-0.382880,-0.280438,-0.144649,-0.122198,0.045142,0.297766,-0.016755,0.050295,0.308072,0.048704) * L3_7 + mat4(0.114496,-0.204400,0.369583,0.056838,0.051377,-0.004087,-0.023654,0.034450,0.059173,0.073588,0.140436,0.035393,-0.049647,0.160702,0.119615,-0.037478) * L3_8 + mat4(-0.031917,0.033571,0.014550,0.017425,0.026922,0.055318,-0.171796,0.023036,-0.012664,-0.009810,-0.012815,-0.018576,0.069057,-0.253265,0.144094,0.003232) * L3_9 + mat4(-0.013704,-0.016666,0.032474,0.000087,-0.042290,1.008570,0.124767,-0.029361,0.091797,-0.007140,-0.193928,0.053808,0.109318,0.000426,-0.127455,0.002048) * L3_10 + mat4(-0.022898,-0.012276,0.067601,-0.013441,0.036522,-0.003600,0.057379,0.062573,0.045372,0.041156,0.023500,-0.014601,0.071802,-0.001540,0.041275,0.027120) * L3_11 + mat4(0.054952,0.034048,0.046349,-0.003381,0.024021,-0.015929,0.010331,0.010219,-0.000975,0.014515,0.008811,-0.008493,0.059645,0.003472,-0.194354,0.017393) * L3_12 + mat4(0.023146,0.024496,0.020415,0.019747,0.220345,-0.540195,0.176296,-0.107960,-0.082863,-0.051857,-0.038513,-0.071595,0.004463,0.010615,-0.030980,-0.017837) * L3_13 + mat4(-0.094800,0.031345,0.194761,0.096348,0.088512,-0.799413,0.453832,0.094691,-0.045458,0.182957,0.240562,0.223688,0.002650,-0.133868,-0.012743,0.016927) * L3_14 + mat4(0.011141,0.006155,0.011219,-0.057538,-0.009754,0.067289,-0.034087,0.027081,0.034145,0.017622,-0.004576,-0.039762,-0.032818,0.163488,0.251369,0.274737) * L3_15 + vec4(-0.304741,0.047507,-1.260944,-0.527092)));\nvec4 L4_6 = sin((mat4(-0.472306,-0.040764,-0.116849,-0.094419,-0.434076,0.065944,-0.810885,-1.345064,-0.361401,-0.024447,0.710105,0.470186,-0.388178,-0.338099,0.454812,0.598265) * L3_0 + mat4(0.173782,-0.056766,-0.079365,0.218678,0.358713,-0.006030,-0.415418,-0.004100,-0.012477,-0.139562,-0.101387,0.036390,0.365135,0.921774,-0.197564,-0.150965) * L3_1 + mat4(0.189683,0.148126,0.024232,0.248665,-0.132839,0.070808,0.192144,-0.560737,0.044030,-0.106710,-0.165860,0.469856,0.382985,-0.110275,-0.061344,-0.301006) * L3_2 + mat4(0.171389,0.032533,0.002285,-0.026302,-0.466140,-0.001049,-0.156594,-0.069937,-0.060083,0.035951,-0.122422,-0.014255,-0.165316,-0.140493,-0.194130,0.433975) * L3_3 + mat4(0.273741,-0.099656,-0.230779,0.191625,-0.163525,0.813176,-0.369459,0.004759,0.046582,-0.053996,0.016193,0.190718,-0.331711,0.492662,-0.213319,-0.434061) * L3_4 + mat4(-0.527044,-0.052602,0.611396,-0.059733,-0.436152,-0.391841,0.168500,0.012804,0.415708,0.301629,-0.154341,0.347406,-0.390533,-0.057534,0.364347,0.574497) * L3_5 + mat4(-0.212323,-0.178765,-0.024237,-0.019788,-0.682841,-0.107053,-0.240997,-0.349024,0.243811,0.502595,0.168748,-0.095109,-0.060868,-0.179145,0.049711,0.260434) * L3_6 + mat4(-0.101934,0.044932,-0.741613,0.213422,0.182891,0.156823,0.490951,0.218418,-0.132685,0.073389,-0.003229,-0.014830,-0.467206,0.164150,-0.044975,-0.049524) * L3_7 + mat4(0.022761,0.008323,0.459340,0.014092,0.008461,-0.077806,-0.052087,-0.046416,-0.278585,-0.406528,-0.116929,0.043310,0.043213,-0.259677,-0.082666,-0.156593) * L3_8 + mat4(-0.000806,-0.092351,0.015224,0.003774,-0.022401,-0.283539,0.024871,-0.121774,-0.047630,-0.075986,-0.022026,-0.014188,0.061660,0.032130,0.184966,-0.006019) * L3_9 + mat4(-0.002546,-0.071938,0.018013,-0.014106,-0.218778,-0.079789,0.340232,0.034536,-0.074616,0.733294,0.168067,-0.637229,-0.067599,-0.086412,-0.008919,-0.068589) * L3_10 + mat4(0.036527,-0.090541,0.073150,0.045914,0.021330,-0.254080,-0.012256,0.038192,-0.015844,0.044438,-0.024858,0.018886,-0.046339,-0.019326,0.068731,-0.032139) * L3_11 + mat4(0.026410,-0.042556,0.158245,0.031710,0.013057,0.152893,-0.003974,0.027124,0.004777,0.020241,0.015884,0.008251,-0.043013,0.031973,0.014736,-0.010401) * L3_12 + mat4(-0.014595,-0.105162,-0.023438,-0.000948,-0.031764,0.080419,-0.020087,-0.099555,0.153554,-0.458283,-0.043760,0.130752,-0.051277,0.093221,0.039308,-0.011592) * L3_13 + mat4(0.289046,0.403153,-0.071802,0.340683,0.028352,0.124475,0.930615,-0.002166,-0.230698,0.075545,-0.123107,0.067186,0.004056,-0.010335,-0.048654,0.001490) * L3_14 + mat4(-0.099751,-0.158607,0.018749,0.014978,0.013331,0.081473,0.071641,-0.026435,-0.068212,0.026845,0.017127,-0.038326,-0.284611,0.124662,-0.155448,0.061440) * L3_15 + vec4(1.178012,0.245354,-0.849887,-0.989431)));\nvec4 L4_7 = sin((mat4(0.253030,-0.556516,-0.124407,-0.217569,-0.083655,0.871718,-0.212592,0.429837,0.422799,0.097572,-0.350915,-0.268610,-0.065233,0.586691,0.040903,0.501978) * L3_0 + mat4(-0.130918,-0.708130,-0.088305,0.156801,-0.203959,-0.394794,0.099821,0.061211,0.357163,-0.017144,-0.202859,-0.391243,0.001838,-0.870892,0.671925,0.039490) * L3_1 + mat4(0.383794,0.282053,-0.018631,0.037553,0.524067,-0.348701,0.276340,0.262766,0.091241,-0.066781,0.172503,-0.324802,0.255259,-0.253445,0.177293,0.311601) * L3_2 + mat4(0.433664,0.027955,0.021629,0.467313,0.561311,-0.053931,0.195125,-0.410914,-0.449438,0.175656,-0.308575,-0.003810,0.356483,0.577167,0.344635,-0.327599) * L3_3 + mat4(-0.084376,0.027909,0.037334,0.034435,0.252233,-0.253605,-0.119981,-0.285205,-0.010479,-0.507669,0.051403,-0.216146,-0.218086,0.448915,-0.231930,0.027975) * L3_4 + mat4(0.432920,1.184851,-0.174916,-0.030476,-0.168117,-0.785963,-0.114943,-0.321051,-0.113910,-0.414886,-0.064453,0.155148,-0.472648,-0.450077,-0.193168,-0.215593) * L3_5 + mat4(-0.055940,0.223031,0.023789,0.041750,0.230924,0.159286,-0.290004,0.238393,0.603586,-0.235269,0.018939,-0.271529,-0.335259,-0.617181,-0.042621,0.174695) * L3_6 + mat4(-0.274444,0.379627,-0.549466,-0.304585,0.285205,0.213976,0.026287,0.236130,0.372952,-0.153245,0.035994,-0.284632,-0.173179,0.471269,-0.070488,0.090106) * L3_7 + mat4(0.040161,0.042629,-0.074241,0.094458,0.043046,-0.044660,0.179297,0.122622,-0.004072,-0.091376,-0.458082,-0.474950,-0.082691,-0.191943,-0.066513,-0.172275) * L3_8 + mat4(0.004311,0.006675,-0.068308,0.010910,0.031049,0.064012,-0.210464,0.301563,-0.006492,0.055604,-0.079245,0.039083,0.006269,-0.019300,-0.002325,0.008265) * L3_9 + mat4(-0.014039,-0.021044,0.025853,-0.072998,-0.183843,0.055349,-0.024474,0.037546,0.278749,0.059096,0.447657,0.980140,0.018239,-0.067566,-0.054999,0.273109) * L3_10 + mat4(0.010585,-0.030289,-0.132912,-0.070039,0.012257,-0.039570,-0.114172,0.008519,-0.031930,-0.026178,0.075345,0.087568,-0.073039,0.014407,-0.012751,0.064581) * L3_11 + mat4(-0.065600,0.034366,0.032088,-0.025265,-0.025801,0.018508,-0.009261,-0.183344,0.033810,-0.002407,0.009588,0.014918,-0.064786,-0.210870,0.078603,0.112819) * L3_12 + mat4(-0.022669,-0.032381,0.044554,0.117276,-0.078021,0.311655,-0.012193,0.025122,-0.105821,-0.013708,-0.323610,0.005953,-0.016319,0.030007,-0.020380,-0.029534) * L3_13 + mat4(-0.184491,0.100233,-0.091352,0.008682,0.362323,-0.082998,-0.055416,-0.050706,-0.222118,-0.025416,0.052111,0.166975,0.067970,0.025788,-0.018640,0.017157) * L3_14 + mat4(-0.061834,-0.085373,-0.166792,-0.090008,0.066469,0.012411,0.093194,0.067220,-0.023533,-0.030384,0.083487,-0.135900,-0.253697,-0.034206,0.065184,0.272103) * L3_15 + vec4(0.730494,-0.887668,0.371329,-1.144264)));\nvec4 L4_8 = sin((mat4(0.059726,0.042364,0.007704,0.099968,0.455665,-0.062193,-1.147520,0.690165,0.132498,-0.327810,0.024706,0.380698,0.382686,0.815723,-0.115952,-0.196894) * L3_0 + mat4(0.056131,0.658218,0.194699,-0.480291,-0.064578,0.013312,0.338083,-0.129797,-0.129970,-0.234196,0.129943,0.022481,-0.039299,-0.086619,-0.070784,0.392232) * L3_1 + mat4(0.014052,-0.170669,-0.137775,0.360590,-0.237556,-0.294489,-0.278569,-0.381034,0.142360,-0.107091,0.082666,0.289020,0.054601,0.022968,0.244742,0.057229) * L3_2 + mat4(0.215254,0.308499,0.010668,-0.216563,0.125157,0.404365,0.125812,-0.229110,0.056466,0.013980,0.271021,-0.591800,-0.094667,0.700335,-0.287512,-0.059109) * L3_3 + mat4(0.125062,-0.173808,0.223890,-0.150970,0.034200,0.071990,0.037072,0.375028,0.034398,0.089339,-0.161589,-0.043540,-0.158417,-0.442891,-0.297743,0.246512) * L3_4 + mat4(0.237500,0.129469,-0.072031,-0.047383,0.011640,0.043208,0.089015,-0.015567,0.355976,0.096809,-0.374844,0.301821,0.073716,0.681571,-0.253558,0.364133) * L3_5 + mat4(0.235673,-0.317849,0.006061,-0.129495,-0.259492,0.206707,0.103902,-0.104136,0.333971,0.368036,0.232711,0.255091,-0.131535,-0.308280,0.255391,0.180036) * L3_6 + mat4(-0.659201,0.104477,0.176634,-0.541298,0.050947,-0.559651,-0.103495,-0.199076,-0.302282,-0.128859,0.149036,0.113054,-0.103916,-0.048196,0.005504,0.229292) * L3_7 + mat4(-0.066720,-0.026303,-0.025678,-0.144688,0.008471,-0.018235,-0.039283,0.015011,-0.019099,-0.063096,-0.006725,-0.015585,0.041758,0.040628,-0.014458,0.020334) * L3_8 + mat4(0.004018,-0.014851,-0.004263,0.001326,0.002038,0.027742,-0.032976,0.060389,-0.009879,0.011937,0.007319,0.005131,0.009797,0.008727,-0.020919,-0.067252) * L3_9 + mat4(-0.002677,0.008959,-0.010639,-0.003567,-0.012532,0.019587,-0.065153,-0.001618,0.028979,0.054318,-0.047945,-0.043204,-0.056092,0.021843,-0.013954,0.024019) * L3_10 + mat4(-0.001191,0.003594,0.009619,0.009060,0.006587,-0.002088,-0.034658,-0.022125,0.000723,-0.019251,-0.000305,-0.009236,-0.044949,-0.001400,0.017016,0.001982) * L3_11 + mat4(0.007868,-0.001664,-0.043654,0.018435,0.010388,-0.012082,-0.006371,0.006995,-0.007452,-0.001130,0.007867,0.004012,0.013543,0.023117,0.007896,-0.057651) * L3_12 + mat4(0.006515,0.014668,-0.001764,0.018147,-0.137622,0.100141,0.011360,0.062583,0.023073,0.010911,0.037620,-0.000204,-0.016303,0.019473,-0.013414,-0.007072) * L3_13 + mat4(0.045587,-0.080930,-0.077264,-0.024353,-0.139620,0.006106,-0.057813,-0.124598,-0.016273,-0.062937,0.030796,0.119374,-0.027810,-0.030741,0.013133,-0.021264) * L3_14 + mat4(-0.000889,-0.002943,-0.023759,-0.011295,0.009517,0.002807,0.038981,0.034291,0.002518,0.025040,0.014839,-0.000498,-0.020074,-0.070262,0.020871,0.126292) * L3_15 + vec4(-0.296397,0.519125,0.221074,-0.638629)));\nvec4 L4_9 = sin((mat4(-0.137069,-0.122701,0.029780,-0.311354,-0.791484,0.427578,1.009593,-0.311937,0.064996,0.317234,0.385504,0.292048,0.167314,0.104075,0.038544,-0.209647) * L3_0 + mat4(0.269349,0.579767,-0.497151,-0.510004,-0.006832,0.280562,0.105988,0.034904,0.494223,0.329783,-0.121697,0.328238,-0.661804,-0.110711,0.661282,0.224677) * L3_1 + mat4(0.033046,0.413824,-0.041398,-0.025305,0.181627,0.022376,0.253229,0.015209,0.581921,0.018991,0.393154,0.119935,0.005538,0.378611,0.179349,-0.232651) * L3_2 + mat4(-0.218960,-0.334384,0.080492,0.589850,0.066005,-0.310722,0.017457,-0.210534,-0.065079,-0.085017,-0.130809,-0.000651,0.201456,0.125596,-0.173202,-0.171038) * L3_3 + mat4(-0.180217,-0.190778,0.102820,0.424913,0.184998,-0.056628,0.146981,0.181074,-0.100609,-0.363814,-0.175348,-0.200462,-0.106379,-0.006114,0.352124,0.097922) * L3_4 + mat4(0.272546,-0.127294,-0.032158,0.522866,-0.210199,0.229526,0.304825,0.823007,-0.832730,-0.645459,0.078897,-0.460050,-0.235860,-0.297622,0.036731,0.531024) * L3_5 + mat4(-0.417160,0.280824,-0.112708,0.391734,0.153506,-0.218901,0.026892,-0.095228,0.047820,-0.328749,-0.652449,0.255681,-0.193933,0.147640,-0.012597,-0.143718) * L3_6 + mat4(-0.042177,0.564450,-0.023790,0.097324,0.036333,-0.034725,-0.301574,-0.353978,-0.291600,0.627189,-0.483269,-0.163403,-0.236245,-0.260375,0.206721,0.224476) * L3_7 + mat4(0.060306,0.042787,-0.213113,-0.088049,-0.010319,-0.002671,-0.073714,-0.005862,0.063931,-0.040104,-0.074155,-0.031842,-0.239377,0.010048,0.124573,0.024647) * L3_8 + mat4(0.002340,-0.019213,-0.006556,-0.015118,0.021158,-0.008898,-0.001051,0.004754,-0.028421,-0.000064,0.012812,0.009660,0.025125,0.021758,0.028739,-0.007361) * L3_9 + mat4(0.031716,-0.002264,0.015172,-0.031298,-0.062128,0.034407,-0.263236,-0.095358,-0.628014,-0.137568,-0.040776,-0.090607,0.040519,0.017721,-0.078401,-0.019758) * L3_10 + mat4(-0.076694,0.001378,-0.018084,0.009229,0.032643,-0.013296,0.031658,-0.019855,-0.014011,-0.016862,0.009222,0.012475,-0.110536,-0.023772,0.065804,0.072567) * L3_11 + mat4(0.049278,0.010313,0.006107,-0.007851,0.008327,0.010335,-0.016300,-0.016111,0.002760,0.001723,-0.019902,0.008905,0.140378,0.009993,-0.029270,0.042495) * L3_12 + mat4(-0.012282,0.002725,0.015026,0.010719,0.008062,0.029503,-0.009673,-0.081357,0.120934,-0.015893,0.003324,-0.048036,0.007628,-0.001270,0.022713,0.011732) * L3_13 + mat4(-0.146523,-0.093809,0.116957,-0.013257,0.038801,0.010007,-0.444507,-0.002771,-0.063070,0.001777,0.087451,0.086845,-0.036657,-0.010591,0.024927,0.013891) * L3_14 + mat4(-0.084483,0.018066,-0.045741,0.035094,0.032357,-0.028384,-0.069387,0.028826,0.002767,-0.002639,-0.026015,0.033634,-0.084086,-0.005006,0.031684,0.084167) * L3_15 + vec4(-0.194103,-0.041546,0.222749,-0.173377)));\nvec4 L4_10 = sin((mat4(-0.059152,-0.105910,0.009818,-0.042763,1.270713,0.161831,-2.045982,-0.277741,-0.077996,-0.181772,-0.659078,0.274722,0.043339,0.383742,-0.075855,0.560979) * L3_0 + mat4(-0.156658,0.068977,0.053970,-0.002853,0.140402,0.552625,-0.313506,0.200614,0.093944,-0.247267,-0.131850,-0.260944,0.499225,0.288859,0.068918,-0.125341) * L3_1 + mat4(-0.241131,0.287598,-0.476936,-0.221831,0.521929,-0.380679,-0.187513,-0.021813,-0.478086,0.391854,-0.160459,-0.264089,0.454462,1.036683,-0.166440,-0.212427) * L3_2 + mat4(0.182003,-0.389494,0.364638,0.007535,0.098125,-0.003560,-0.357304,0.165004,0.018086,-0.352001,0.086892,0.611533,-0.086224,0.079024,0.531372,0.174954) * L3_3 + mat4(0.331327,0.411952,-0.263001,-0.158196,0.458422,0.165592,0.031208,0.599791,-0.181396,-0.129775,-0.116306,-0.078767,0.007693,0.327044,0.430093,0.227723) * L3_4 + mat4(-0.132067,-0.313809,0.176395,-0.086282,0.779109,-0.497211,-0.299547,0.187695,-0.067387,0.529924,-0.253024,0.109198,-0.540342,-0.724210,0.294569,0.333649) * L3_5 + mat4(0.048690,0.260945,-0.284411,0.350281,0.187006,-0.052755,0.480474,-0.368240,-0.534422,0.347225,0.136818,-0.416748,-0.054244,0.069078,-0.039077,0.347380) * L3_6 + mat4(0.729258,-0.751921,-0.275529,0.123133,0.498518,0.169011,0.207936,-0.094231,0.204104,-0.289475,0.118317,0.501633,-0.119570,-0.328435,0.059747,0.163115) * L3_7 + mat4(-0.117456,0.143969,0.082834,-0.080428,-0.104853,-0.003649,-0.001855,0.001356,0.008979,0.135174,-0.075932,-0.023350,-0.081178,0.060939,-0.197882,0.052218) * L3_8 + mat4(-0.012439,0.013891,-0.001423,0.012742,-0.106708,0.066557,0.015397,0.221073,0.045401,0.032571,0.009635,-0.019779,0.063941,0.058538,0.033833,-0.061846) * L3_9 + mat4(0.055521,0.011639,-0.003912,0.039780,-0.250357,-0.271563,0.134469,-0.033686,-0.288244,0.227246,-0.028408,0.555939,0.022058,-0.021486,-0.033560,0.029317) * L3_10 + mat4(0.010644,-0.031470,-0.030170,-0.055144,-0.031319,-0.007127,-0.089223,-0.081300,-0.055397,-0.014970,-0.006488,0.008518,-0.147860,-0.058110,0.036083,-0.022021) * L3_11 + mat4(-0.091223,-0.012852,0.005596,-0.101180,-0.015931,-0.008683,-0.019334,0.004514,-0.029318,0.027393,0.018512,0.006385,0.141836,-0.007698,-0.048331,0.023133) * L3_12 + mat4(-0.062949,-0.004251,0.000946,0.008150,-0.457394,0.396951,-0.047254,0.154507,0.001047,-0.003523,-0.029354,-0.103286,0.055779,0.005432,-0.013086,-0.009693) * L3_13 + mat4(-0.113003,-0.088178,-0.033844,-0.330798,-0.010463,-0.172708,0.226262,-0.102045,-0.047550,-0.131358,0.314171,0.050520,0.002449,0.010189,0.031339,0.006604) * L3_14 + mat4(0.027953,-0.038554,-0.028824,-0.032540,0.008210,-0.012726,-0.002044,-0.007047,0.060544,0.002721,0.015470,-0.005849,-0.065542,-0.118239,0.332812,0.035351) * L3_15 + vec4(0.990602,0.641505,-1.073744,-0.599792)));\nvec4 L4_11 = sin((mat4(0.273035,-0.082582,0.242667,0.436323,-0.188617,-0.465740,-0.747740,0.434821,-0.228790,-0.467507,-0.024118,0.294550,-0.160132,0.517662,0.195033,0.221664) * L3_0 + mat4(0.033533,-0.303893,-0.287930,0.022064,-0.033241,0.108284,-0.192999,-0.477619,-0.109849,-0.168505,0.095402,-0.014796,-0.031438,-0.521586,0.152141,0.711316) * L3_1 + mat4(0.051188,-0.209810,-0.057526,0.105576,-0.466011,0.362061,-0.140585,-0.041963,-0.087637,0.005822,-0.029470,-0.129946,-0.162652,-0.492590,-0.093789,-0.250368) * L3_2 + mat4(-0.052357,-0.040104,0.340586,-0.036613,-0.002216,0.068134,-0.020294,-0.212170,0.095701,-0.398771,-0.146887,-0.142997,-0.172153,1.030415,0.212080,-0.394870) * L3_3 + mat4(0.077833,-0.340253,0.261541,-0.080983,0.417754,0.054900,0.070004,0.454847,0.038004,0.178150,-0.207088,-0.276049,0.285582,0.231870,0.027746,0.856669) * L3_4 + mat4(-0.065934,0.111124,0.176327,0.135275,-0.310073,-0.249162,-0.363131,0.536006,0.266876,0.064533,0.018860,0.366162,-0.210844,0.005186,-0.026528,-0.301606) * L3_5 + mat4(0.178126,-0.003898,0.109544,-0.111902,0.062636,-0.534489,0.007582,-0.010994,0.337112,-0.124149,0.052720,0.138438,-0.040075,-0.324584,-0.171032,-0.465728) * L3_6 + mat4(0.262137,-0.537606,-0.047965,0.340653,0.111609,0.001005,0.027573,-0.046520,0.538022,-0.007720,0.114183,0.480862,-0.286997,-0.254665,-0.151502,0.258601) * L3_7 + mat4(-0.047438,-0.052479,-0.565814,-0.155516,0.026677,-0.129344,-0.030665,-0.100352,-0.011925,0.168600,0.043136,-0.368492,0.024120,0.318394,0.001738,-0.323473) * L3_8 + mat4(-0.007765,0.028902,0.068903,0.054106,-0.010878,0.068328,0.009787,0.233066,-0.026269,0.083191,-0.003316,0.069963,-0.071908,0.035005,-0.314007,-0.065343) * L3_9 + mat4(0.002892,-0.024707,-0.033830,-0.087132,0.059335,0.036568,0.645949,-0.059710,0.010431,-0.654475,-0.060711,0.552001,-0.034779,0.059859,-0.056334,0.020859) * L3_10 + mat4(-0.006707,0.122987,-0.096015,-0.072199,0.043038,0.040895,0.027791,0.068807,-0.000010,0.054944,-0.025418,0.093636,-0.005570,0.079222,0.037585,0.000217) * L3_11 + mat4(-0.033877,0.026032,-0.151702,0.029558,0.013875,-0.062506,-0.008607,-0.082895,0.004225,0.012964,0.004513,-0.004155,-0.008593,-0.024871,0.072584,-0.015536) * L3_12 + mat4(0.023560,0.031570,0.019754,0.020471,0.130305,-0.152011,-0.294245,0.164475,0.027340,0.274392,-0.029824,0.062907,-0.015246,0.019659,-0.037547,0.023472) * L3_13 + mat4(0.052714,-0.031973,-0.038212,0.404350,-0.266480,-0.056021,-0.998440,-0.023420,0.148179,-0.357044,-0.221070,0.025965,-0.004380,-0.032429,-0.133686,-0.025028) * L3_14 + mat4(-0.024815,0.130029,-0.082815,-0.036082,0.007958,-0.034158,0.038703,0.126905,-0.004312,-0.014297,-0.020870,-0.112527,0.149834,-0.377935,-0.262993,0.004401) * L3_15 + vec4(0.087713,1.105679,1.572831,-0.062088)));\nvec4 L4_12 = sin((mat4(0.038713,0.352899,0.128647,0.315333,-0.987108,-0.491990,0.828857,-0.400543,-0.219582,0.118264,0.189992,0.001852,0.136614,-0.225608,-0.060513,-0.142933) * L3_0 + mat4(-0.337609,0.130223,-0.192837,0.323520,0.176216,-0.601517,0.103318,0.011682,-0.094296,-0.360095,0.141340,-0.177187,-0.406566,-0.362963,0.209254,-0.370760) * L3_1 + mat4(0.009930,0.182688,-0.063343,0.047821,-0.351753,0.234659,0.161753,0.319815,-0.268019,-0.284221,0.173573,0.246811,-0.209722,-0.472406,0.377580,-0.099992) * L3_2 + mat4(0.245487,-0.288446,0.198049,-0.009828,-0.065960,0.419703,0.199081,0.370763,-0.022321,-0.156120,-0.690160,-0.770697,0.202005,0.298388,0.383852,0.515535) * L3_3 + mat4(-0.003018,0.085958,0.269232,0.198309,-0.117507,-0.697750,0.153626,-0.208911,0.076744,-0.141904,-0.148480,0.267767,-0.480915,-0.047661,0.375128,-0.552797) * L3_4 + mat4(0.316382,0.192809,-0.172310,-0.418256,-0.041793,0.309644,0.588425,-0.136418,0.538808,0.767177,0.083493,-0.150717,-0.215092,-0.047828,-0.039865,-0.053245) * L3_5 + mat4(0.407510,0.212726,-0.014627,-0.320087,-0.222232,0.061315,-0.045397,-0.126066,0.090898,-0.204062,0.067412,-0.247238,0.153070,-0.289434,-0.043117,0.041862) * L3_6 + mat4(0.004114,-0.200382,-0.124443,0.584165,-0.127869,-0.343138,0.175313,0.417214,-0.289035,0.038229,0.292388,-0.154778,0.121066,-0.192160,0.202180,0.076067) * L3_7 + mat4(-0.022117,0.174317,0.001935,0.043151,-0.002472,0.054527,-0.028741,-0.002349,-0.125484,0.661038,0.004810,0.008969,-0.122435,-0.368176,-0.020319,0.009020) * L3_8 + mat4(-0.017622,0.014057,0.015417,-0.002107,-0.001758,0.243026,0.050335,0.014881,0.014985,-0.049698,0.008331,-0.001298,0.013302,-0.001591,-0.000617,0.010460) * L3_9 + mat4(-0.001156,-0.044781,0.010352,0.032450,0.050104,0.037858,0.034211,-0.048513,-0.142332,-0.721023,0.064297,-0.049005,0.017405,0.191977,-0.000319,0.011172) * L3_10 + mat4(-0.045304,-0.016971,-0.021309,0.019661,-0.005287,-0.270846,-0.044715,-0.016132,-0.026481,0.105886,-0.032795,0.029271,-0.011729,0.103452,-0.037239,0.010448) * L3_11 + mat4(0.025702,0.004033,0.011446,-0.036683,-0.000753,-0.018230,-0.015837,-0.012939,-0.000733,0.022893,-0.001596,0.006212,0.010037,-0.120521,0.005973,-0.028016) * L3_12 + mat4(-0.014385,-0.040295,-0.006557,-0.000340,0.017377,-0.007662,-0.032764,0.030615,-0.005479,0.054789,-0.002698,0.045124,-0.011514,0.112962,-0.002340,-0.002947) * L3_13 + mat4(-0.130317,-0.136558,-0.106775,-0.046843,-0.058609,0.225212,-0.050174,0.028702,-0.031068,0.377067,0.005657,0.141339,0.005395,0.017671,-0.000361,0.012723) * L3_14 + mat4(-0.030210,0.038497,-0.014610,0.009350,0.023890,-0.063668,-0.004455,-0.008135,-0.003669,-0.028716,-0.009701,-0.031831,-0.023022,0.448665,0.010321,0.157156) * L3_15 + vec4(0.545818,-1.565048,-0.128011,-0.694481)));\nvec4 L4_13 = sin((mat4(0.431814,0.146430,0.145080,-0.156215,-0.605825,0.174533,0.061504,-0.184858,-0.276247,-0.628058,-0.143423,-0.023417,-0.238851,-0.075849,0.630525,0.274984) * L3_0 + mat4(0.321729,-0.144587,0.113517,0.060775,0.344290,-0.195225,-0.015427,0.022904,0.421129,-0.289924,0.053590,-0.335999,0.132965,0.001975,-0.125612,0.318745) * L3_1 + mat4(-0.154417,-0.105748,0.137928,0.125176,-0.078768,0.293033,0.363032,0.315084,0.637432,-0.012247,0.643750,-0.215455,-0.325278,-0.426309,-0.183778,-0.182360) * L3_2 + mat4(-0.263814,-0.562295,0.074566,0.246492,0.111125,-0.165683,-0.032013,-0.037131,0.169487,0.497268,-0.110451,0.189254,-0.104866,-0.546873,-0.173541,0.272708) * L3_3 + mat4(-0.175971,-0.096396,-0.100721,-0.041064,0.161267,-0.361148,-0.163726,0.003840,-0.062158,-0.063270,-0.016177,-0.088104,0.057946,0.390445,-0.110559,0.144094) * L3_4 + mat4(-0.156016,-0.070990,0.233423,0.240068,0.174788,-0.274382,-0.150501,0.030532,0.009246,0.277064,-0.226153,0.377094,0.099371,0.015650,0.011396,-0.324879) * L3_5 + mat4(0.162077,0.043223,-0.172719,-0.092956,-0.073994,0.218878,0.401697,-0.074833,0.362765,-0.065937,-0.155227,-0.319888,0.374236,0.149958,0.117572,0.057325) * L3_6 + mat4(0.176356,-0.019979,-0.674897,0.074395,0.109303,0.109911,0.098695,0.046888,0.045584,-0.370569,0.094213,0.147582,-0.004251,-0.141521,-0.401681,0.006568) * L3_7 + mat4(-0.000419,-0.131494,-0.064670,0.062373,0.034483,0.045460,-0.030765,0.036856,-0.025973,-0.047220,-0.198783,-0.474906,-0.458197,-0.014912,-0.068910,0.033487) * L3_8 + mat4(0.005956,-0.001600,-0.005027,-0.017404,0.124128,0.007966,-0.032762,-0.212145,-0.032658,-0.012413,0.026900,-0.025343,-0.004599,-0.062763,-0.012613,0.048795) * L3_9 + mat4(-0.012019,0.007077,-0.004274,0.063630,-0.017365,-0.076825,0.101709,-0.009215,0.240393,0.100765,-0.262796,0.439656,0.001368,0.054804,-0.001006,-0.199003) * L3_10 + mat4(-0.075167,-0.039598,-0.066257,-0.023381,0.117858,-0.024284,-0.028843,0.071967,-0.067100,-0.006748,-0.016686,0.004497,0.010088,0.002122,-0.013224,-0.071943) * L3_11 + mat4(-0.011948,-0.073279,-0.051848,0.022975,0.047143,-0.002936,-0.028529,-0.079862,-0.012800,0.009176,-0.010189,-0.006839,-0.017598,-0.039710,-0.007514,0.059040) * L3_12 + mat4(0.016652,0.006587,-0.007103,0.082729,0.038607,0.281801,0.061000,0.135069,-0.011430,-0.020723,-0.068681,-0.301277,-0.048326,0.017095,0.024909,0.005703) * L3_13 + mat4(0.201105,-0.046121,-0.143721,-0.506017,0.020371,0.068105,-0.134542,0.078338,0.070296,0.171471,0.082063,0.151368,0.016533,-0.021790,-0.005931,0.020610) * L3_14 + mat4(-0.069937,-0.028102,-0.006384,0.031223,0.030066,0.041591,-0.046314,0.001360,-0.107054,-0.000035,0.016871,0.020004,0.060367,0.178985,0.107213,0.162717) * L3_15 + vec4(-0.333249,-0.733987,-0.151659,-0.792937)));\nvec4 L4_14 = sin((mat4(-0.188593,0.113917,0.131578,-0.172181,-0.776950,-1.675248,-0.723894,-0.209292,-0.336024,-0.227329,0.063760,0.020959,-0.042756,0.000247,-0.140651,0.174106) * L3_0 + mat4(-0.108911,-0.413904,-0.728048,0.109726,0.407187,-0.310046,0.138332,0.053972,-0.073524,-0.525775,0.477506,0.078755,0.434816,0.026084,0.260850,-0.068219) * L3_1 + mat4(-0.004494,0.129615,-0.285861,0.007265,-0.048150,-0.261866,-0.040478,-0.008644,0.243346,-0.092511,-0.078343,0.195107,-0.274896,0.243207,0.187324,-0.018734) * L3_2 + mat4(0.227917,0.358485,-0.444932,-0.301396,-0.000664,0.126192,-0.473516,0.241955,-0.005632,0.544458,0.048062,-0.090684,0.158830,0.482977,0.205971,0.316140) * L3_3 + mat4(-0.099184,0.012349,0.014310,-0.017923,0.171112,-0.051602,0.774967,-0.333799,0.030939,-0.320432,0.162187,0.133208,0.000927,0.082746,0.232467,-0.160685) * L3_4 + mat4(-0.125597,0.164405,0.421593,0.191378,-0.356140,-0.196089,-0.134431,0.255052,0.333953,0.110424,0.290414,-0.174150,-0.040654,-0.579209,0.013982,0.224127) * L3_5 + mat4(-0.128565,0.157458,-0.274738,-0.060533,-0.200598,-0.175989,-0.279851,-0.137888,0.174708,-0.019317,0.144084,-0.040720,-0.029345,0.246070,0.145453,-0.036049) * L3_6 + mat4(-0.071199,0.119161,-0.439674,-0.212031,-0.013012,-0.328788,0.181988,0.167243,0.059236,0.601379,0.025478,-0.266262,0.111405,0.079344,0.547889,0.039798) * L3_7 + mat4(-0.015902,0.209391,-0.146233,0.241166,-0.215672,-0.059883,0.168133,-0.060894,-0.437246,0.320899,0.133000,-0.043625,-0.199623,-0.042256,-0.369713,-0.032800) * L3_8 + mat4(0.027322,-0.006342,-0.069949,-0.027530,-0.021541,0.040223,-0.030271,-0.010327,0.048022,-0.002657,-0.124589,0.035219,0.033080,0.082686,-0.011119,0.305700) * L3_9 + mat4(-0.110559,0.113584,-0.149313,0.078675,-0.002996,0.018591,-0.096630,-0.736411,0.489599,-0.373898,-0.668056,0.007336,0.137881,-0.022456,0.129937,0.002043) * L3_10 + mat4(-0.065449,0.005592,0.039031,0.053901,-0.031664,0.076794,-0.431317,-0.026332,0.068622,-0.038738,0.072571,-0.015948,0.019623,-0.159620,0.028068,0.044903) * L3_11 + mat4(-0.025730,0.023208,0.005692,-0.027799,0.061721,0.014928,-0.103800,0.007148,-0.018402,-0.000753,0.028004,0.003487,0.018510,-0.024438,-0.026294,-0.080796) * L3_12 + mat4(-0.118149,-0.069848,-0.049144,-0.041086,-0.057205,0.053315,0.137434,0.306232,-0.344906,0.057348,0.021443,0.010616,0.111227,-0.013665,0.096283,0.019799) * L3_13 + mat4(0.502819,-0.163727,0.082593,-0.023852,-0.069500,-0.039523,0.215450,1.296982,0.019774,0.039748,0.148699,0.382182,-0.017121,0.028920,0.027773,0.155006) * L3_14 + mat4(-0.102679,0.024398,-0.083679,0.042263,0.046486,-0.041545,0.027088,-0.034868,-0.071456,-0.051286,-0.138662,0.026489,0.041189,0.084099,0.137041,0.408862) * L3_15 + vec4(0.649406,-0.944559,-0.318574,-1.800340)));\nvec4 L4_15 = sin((mat4(-0.193610,0.234965,-0.339523,-0.124192,0.088026,-0.355450,0.897258,-0.447793,-0.243532,0.103511,-0.091402,-0.159508,-0.440932,0.420622,-0.003462,0.673386) * L3_0 + mat4(0.413917,0.270336,-0.197083,-0.080718,0.121831,-0.526457,-0.260678,0.589299,-0.016415,0.391076,0.428675,-0.092081,0.234842,-0.393554,0.068039,-0.204442) * L3_1 + mat4(0.083134,0.213586,0.138565,0.242902,0.242671,0.090980,0.242897,-0.013780,-0.138714,0.082039,-0.206922,0.369204,-0.435595,-0.137133,-0.344922,0.144143) * L3_2 + mat4(0.019386,0.043224,-0.132627,0.015882,0.112410,-0.227814,0.333580,0.345239,-0.031089,-0.598024,0.114686,-0.028908,0.035921,-0.283044,-0.194891,1.106296) * L3_3 + mat4(0.115273,-0.090698,0.014675,-0.083196,-0.701948,-0.029184,0.177943,0.013093,-0.033490,-0.270446,-0.098737,0.053347,-0.015347,0.273176,0.541621,-0.519666) * L3_4 + mat4(-0.039301,-0.083367,0.765868,0.430194,-0.355021,0.552302,0.144284,-0.152092,-0.100154,-0.366346,-0.545792,0.149820,0.254537,-0.244315,0.056158,0.088561) * L3_5 + mat4(0.041993,0.026330,0.089928,0.445333,0.619500,-0.090242,-0.071036,0.507818,0.401185,-0.145505,-0.416838,0.547949,-0.314761,-0.356643,-0.082651,-0.148096) * L3_6 + mat4(-0.376552,-0.320257,0.570724,0.066869,0.030138,-0.025907,0.402337,0.020209,-1.236007,0.339153,-0.019131,0.369512,-0.060879,-0.117206,0.116368,-0.185383) * L3_7 + mat4(-0.319565,-0.014850,0.036297,-0.104442,-0.003332,0.096778,-0.018679,0.036856,0.076944,-0.045190,-0.335217,0.072023,0.179260,-0.205444,-0.222678,-0.042670) * L3_8 + mat4(0.011790,-0.017860,0.022875,-0.027369,-0.011204,0.170126,0.036623,-0.060981,0.019620,-0.072890,-0.052159,-0.029460,-0.048956,-0.018367,-0.005668,-0.033431) * L3_9 + mat4(-0.003586,-0.030374,0.025043,-0.004332,-0.305921,-0.067467,0.051817,-0.128726,-0.048046,0.477708,0.057244,-0.097019,-0.013109,-0.025683,-0.097964,-0.007887) * L3_10 + mat4(-0.028372,0.048315,0.037793,-0.019950,-0.030039,-0.006101,-0.122912,0.010280,0.011307,-0.001201,-0.034703,0.006629,0.029949,0.044274,-0.026439,-0.026584) * L3_11 + mat4(-0.251610,0.027558,0.014030,-0.087165,-0.004563,0.004484,0.011550,0.000730,0.014298,0.004695,0.015845,0.012115,0.223082,0.010728,0.015026,0.081948) * L3_12 + mat4(0.004640,0.027068,-0.033875,0.027968,-0.279822,-0.092679,-0.066533,-0.492719,0.044442,0.048738,0.140100,-0.052663,0.000925,0.020153,0.019745,0.001986) * L3_13 + mat4(0.039704,0.183720,0.207207,0.065268,-0.356011,0.112063,0.219752,-0.140764,0.304498,0.024452,-0.144575,0.142083,0.028543,-0.007549,0.006075,0.002258) * L3_14 + mat4(-0.016618,0.087560,0.018421,0.007690,0.072805,0.038279,0.000819,0.069567,0.030685,-0.054886,-0.040805,0.007728,0.349656,0.016558,-0.153294,0.113195) * L3_15 + vec4(-0.141989,0.242422,0.195537,0.247534)));\nvec4 L5_0 = sin((mat4(0.039427,0.138913,0.119630,-0.117879,-0.230608,0.169907,0.137664,0.649228,0.114733,0.684189,-0.327663,-0.128826,0.010672,-0.123531,0.219981,0.004687) * L4_0 + mat4(0.402910,-0.081841,-0.030203,0.023349,0.043794,0.188029,0.090069,-0.100493,-0.139471,0.261745,-0.289637,-0.173410,0.014129,0.036629,-0.299393,0.253627) * L4_1 + mat4(0.241885,-0.083486,-0.531010,0.099423,0.179835,0.755720,0.221810,0.143019,0.182815,0.125914,0.311106,0.102524,-0.034665,-0.084542,0.240524,0.134001) * L4_2 + mat4(-0.078853,0.260913,-0.269602,-0.195038,0.298498,-0.258411,-1.025682,0.449836,0.142030,0.134438,0.086969,0.009983,0.152743,0.039048,0.021129,-0.048755) * L4_3 + mat4(-0.219229,0.020250,0.258431,0.369411,-0.179953,0.332962,0.021361,-0.249242,-0.119104,-0.219837,-0.255494,0.310091,0.414286,0.474119,0.102832,0.193864) * L4_4 + mat4(-0.124295,-0.020224,-0.347257,-0.241424,0.149487,-0.062697,0.160616,-0.128554,-0.009680,0.013116,-0.094929,0.065228,0.294902,-0.505564,-0.535431,0.285546) * L4_5 + mat4(0.094635,0.129271,0.138068,-0.073132,0.050356,-0.106075,-0.029254,0.007305,-0.182738,0.146923,-0.012035,-0.045837,0.111350,0.025493,0.181952,-0.095907) * L4_6 + mat4(-0.434707,0.201032,-0.117786,0.207957,0.039665,0.151958,-0.167507,0.040334,-0.032650,0.414811,-0.013015,-0.030780,0.012599,-0.163379,-0.046189,0.095029) * L4_7 + mat4(0.080182,-1.045844,0.185666,-0.148771,-0.464480,0.235904,-0.167967,0.252485,-0.300491,-0.197813,0.698978,-0.115019,-0.212803,-0.660495,-0.329353,-0.528807) * L4_8 + mat4(0.023281,0.091524,0.049319,0.090663,-0.417464,-0.013886,0.732095,-0.197913,-0.340983,-0.171138,0.258727,0.122782,-0.008795,-0.232607,-0.048960,0.091316) * L4_9 + mat4(-0.087734,-0.165813,-0.065297,-0.000825,-0.022316,0.149163,-0.030533,0.026917,0.083673,0.164017,-0.002036,0.107857,0.034509,0.027300,-0.151695,0.111994) * L4_10 + mat4(0.351351,0.412747,-0.168414,-0.033677,0.088645,0.047216,0.081950,-0.099499,-0.100452,-0.484895,-0.011968,0.121165,0.169103,-0.192341,0.042186,0.029101) * L4_11 + mat4(-0.328179,-0.466187,0.531368,0.162801,-0.066654,0.156066,-0.022422,0.029382,-0.480389,-0.109899,-0.674514,0.245114,-0.232957,-0.154723,0.312286,0.117518) * L4_12 + mat4(0.013658,0.006848,-0.040409,-0.125555,0.088386,0.055684,-0.251450,-0.119961,0.251058,-0.437116,0.434511,-0.018404,0.122986,-0.048497,-0.005597,0.084254) * L4_13 + mat4(-0.122058,0.071042,-0.102344,0.016887,-0.233981,0.085219,-0.105899,-0.093906,0.064735,-0.199905,-0.026170,-0.024808,-0.181238,-0.048179,0.016932,0.224056) * L4_14 + mat4(-0.028574,0.171688,-0.245304,0.049639,-0.280773,0.004444,-0.373706,0.130891,-0.109165,0.359796,0.305680,-0.159381,-0.198747,0.128572,0.151327,-0.189237) * L4_15 + vec4(0.586843,0.613812,0.613264,-0.576665)));\nvec4 L5_1 = sin((mat4(0.039907,-0.075223,-0.103016,0.064076,0.070765,0.313916,-0.541970,-0.471992,-0.366122,-0.160056,-0.234335,-0.278302,0.041052,0.062097,0.115278,-0.025541) * L4_0 + mat4(0.143539,0.142425,0.113691,-0.137400,-0.009802,0.127803,-0.080571,-0.085496,0.147883,-0.316059,-0.004421,0.279712,0.187021,-0.173892,-0.262804,-0.061415) * L4_1 + mat4(0.273418,0.318719,-0.063583,-0.086014,0.009446,0.028414,0.017838,0.026378,0.024528,0.171177,0.035457,0.125276,-0.202075,0.108755,-0.131440,0.133571) * L4_2 + mat4(-0.146780,-0.107645,0.028466,0.108206,0.138862,0.107955,0.240066,-0.064701,-0.022169,0.055673,-0.025175,-0.027742,0.128796,0.072979,0.080010,-0.114819) * L4_3 + mat4(-0.535019,0.333318,-0.041914,-0.044748,0.006078,0.082926,-0.001242,-0.155682,-0.053274,0.090634,-0.063165,0.016715,-0.001589,0.089166,0.019376,0.159575) * L4_4 + mat4(0.022474,-0.040497,-0.293555,0.133784,-0.235436,-0.002445,0.042416,-0.052411,0.212122,-0.103457,0.009385,-0.158963,-0.245707,-0.064379,-0.006096,-0.162469) * L4_5 + mat4(0.218921,0.093505,-0.038257,0.052144,-0.064890,-0.017932,0.082700,0.110600,-0.189221,0.083775,0.065898,0.041375,0.238422,0.160153,0.202098,-0.045800) * L4_6 + mat4(-0.157466,-0.106917,0.015378,0.274976,0.052170,-0.011256,-0.008882,-0.020885,-0.086023,0.041576,-0.068045,-0.152853,0.026966,-0.114937,-0.020114,0.230826) * L4_7 + mat4(-0.164987,-0.614068,0.620082,0.160047,-0.120763,-0.012834,-0.006953,0.223249,0.161641,0.313128,-0.129287,-0.370926,0.311225,0.088088,-0.033681,-0.317898) * L4_8 + mat4(-0.013957,0.040516,-0.008101,0.011423,0.097833,-0.389228,-0.257539,0.096273,0.097598,0.221717,0.055792,-0.104567,-0.067734,0.111843,0.189513,0.223688) * L4_9 + mat4(-0.034023,-0.127993,0.031243,-0.066377,0.161613,0.007257,0.084965,0.034554,-0.124800,0.037074,-0.266393,-0.090460,-0.189800,-0.036855,0.066689,0.026215) * L4_10 + mat4(-0.415508,-0.243958,0.258617,-0.242709,-0.102176,0.175493,0.134895,-0.131825,0.186066,-0.057014,0.027392,-0.242943,0.186658,-0.012085,0.106493,0.053125) * L4_11 + mat4(-0.284609,-0.479206,0.268497,0.005032,-0.066085,0.092660,0.047746,-0.053483,0.348941,-0.012596,0.632970,0.621214,-0.069170,0.259009,-0.182741,0.009722) * L4_12 + mat4(0.209169,-0.067021,0.014873,-0.047800,-0.284422,0.105471,-0.050563,-0.167963,-0.756813,0.052269,-0.032078,-0.012347,0.094153,-0.096457,0.070917,0.206311) * L4_13 + mat4(0.118971,0.009443,-0.142987,-0.140462,-0.094054,-0.069160,0.020919,0.014494,-0.099076,0.040706,-0.032895,0.021678,0.225711,-0.053943,0.040211,-0.199040) * L4_14 + mat4(0.149514,-0.101243,0.019376,0.188544,-0.074695,-0.165276,-0.074950,0.212403,0.264255,-0.009658,-0.095976,-0.037982,-0.318717,-0.006623,0.059834,-0.078008) * L4_15 + vec4(0.305446,-0.478096,1.226682,1.359219)));\nvec4 L5_2 = sin((mat4(-0.033817,0.087602,0.077938,0.144153,-0.089818,0.338326,0.022565,0.454685,0.387221,0.010029,0.358646,-0.268442,-0.089638,-0.074998,-0.121524,-0.071888) * L4_0 + mat4(0.093851,-0.108344,0.058583,-0.145550,0.017661,0.075852,0.127798,-0.072358,0.301901,0.014240,-0.040544,0.258085,0.324038,0.255531,0.136712,-0.026500) * L4_1 + mat4(-0.046587,0.024074,0.318482,0.215552,-0.060682,-0.114721,-0.224001,0.425314,-0.064652,0.119298,0.133302,0.231604,-0.012358,0.008762,-0.088322,0.184256) * L4_2 + mat4(0.030403,0.024879,-0.270095,-0.246073,0.049324,0.179806,0.120737,0.106583,-0.059298,0.096316,0.259773,0.278413,0.008446,-0.043953,0.106298,-0.065236) * L4_3 + mat4(-0.032450,0.282157,0.096187,0.552127,0.063022,-0.071073,-0.118074,-0.211032,-0.201033,0.124178,-0.089040,0.014571,-0.022619,-0.097550,-0.023195,0.249885) * L4_4 + mat4(0.206372,0.123099,0.145245,-0.148395,-0.181537,-0.045870,-0.145666,0.245234,0.045414,0.046999,0.057970,-0.234357,-0.046870,0.032831,0.160645,-0.430576) * L4_5 + mat4(-0.064490,0.090338,0.014060,-0.080317,-0.023978,-0.126041,-0.122528,0.139536,-0.014694,0.020771,-0.150322,0.125129,0.102023,0.022870,-0.158558,-0.247753) * L4_6 + mat4(0.094558,-0.039909,-0.032115,-0.003721,-0.018038,-0.024192,0.055333,-0.064557,0.111512,0.214573,0.042566,-0.221666,0.009625,-0.040145,-0.191835,0.113874) * L4_7 + mat4(0.410008,-0.093252,-0.211197,0.487551,0.191122,-0.048908,0.059377,0.132490,-0.209569,0.543793,-0.537798,-0.006027,-0.084591,0.067682,-0.087000,-0.404528) * L4_8 + mat4(-0.103264,0.219439,0.161283,0.122629,-0.087942,0.017039,0.123869,-0.224104,-0.040466,-0.252438,0.050181,-0.212047,0.001434,0.171821,0.105973,0.270400) * L4_9 + mat4(-0.152464,0.164851,0.072384,0.292138,0.007883,0.126698,0.197055,0.187901,-0.067079,-0.063232,0.055878,0.147890,0.036857,-0.154458,-0.139295,0.081394) * L4_10 + mat4(0.306412,0.029222,-0.371219,-0.558702,0.031038,0.060274,0.206044,-0.042427,0.034162,0.028527,0.221398,-0.442708,-0.027494,-0.163128,-0.031733,0.030666) * L4_11 + mat4(-0.529192,-0.277873,-0.302652,0.248477,0.000485,0.107487,0.169616,0.247197,-0.049872,-0.400510,-0.230334,0.282957,-0.103698,0.198007,-0.280908,0.140896) * L4_12 + mat4(-0.043375,-0.103524,-0.284767,-0.042810,-0.014561,-0.143792,0.026315,0.430342,-0.162704,0.092103,0.035674,0.365283,-0.046618,-0.232819,-0.165543,0.255100) * L4_13 + mat4(-0.009193,0.150590,0.198842,-0.234021,-0.084111,-0.022439,0.074413,0.011011,0.022010,0.062307,0.006188,-0.125116,0.270164,-0.015987,0.304415,-0.531975) * L4_14 + mat4(0.011038,-0.021514,0.054097,0.100017,-0.049532,0.249012,0.103401,0.085349,0.098190,-0.139558,-0.034370,-0.205002,0.083662,-0.124796,-0.116586,-0.011554) * L4_15 + vec4(-0.148721,1.001666,0.448955,-1.052635)));\nvec4 L5_3 = sin((mat4(-0.218281,0.061699,-0.325623,0.054230,-0.071905,0.482121,-0.177803,0.247459,-0.324302,0.093955,0.228281,-0.270410,-0.024489,-0.057163,-0.042913,0.022345) * L4_0 + mat4(0.122906,-0.053593,0.270718,-0.065468,-0.165549,0.072556,0.086294,-0.084780,0.439418,-0.161280,0.126920,-0.136673,0.298396,-0.176184,0.050888,-0.214164) * L4_1 + mat4(-0.026339,0.035561,-0.083156,0.007511,0.026834,-0.012083,0.002299,0.071312,0.211558,0.076081,0.137181,0.032453,-0.117930,-0.119582,0.025364,0.080238) * L4_2 + mat4(-0.103211,-0.251648,-0.282302,-0.155673,0.199811,-0.107235,0.094946,0.123436,-0.192473,-0.075577,-0.380678,-0.109268,-0.056595,0.043048,0.264556,0.148616) * L4_3 + mat4(-0.460023,-0.148968,0.023331,0.262149,0.061907,-0.132582,0.012710,-0.090002,-0.051247,0.013369,-0.243006,-0.008335,0.081951,-0.043508,0.271892,-0.055717) * L4_4 + mat4(0.006434,-0.014425,0.077070,-0.150860,-0.151710,-0.005083,0.019784,0.100486,-0.349559,-0.035611,0.002924,-0.179403,-0.580986,0.039048,-0.034779,0.069030) * L4_5 + mat4(-0.154254,-0.035934,0.123626,-0.175542,-0.097860,-0.058559,-0.185480,-0.037298,-0.046718,-0.008044,0.095938,-0.103779,-0.028399,-0.088413,0.292496,0.153844) * L4_6 + mat4(-0.236949,0.001013,0.176319,-0.083553,0.026086,-0.011056,-0.256184,0.085778,0.187787,0.024590,0.218851,0.004265,0.069124,-0.069402,-0.228969,0.026639) * L4_7 + mat4(-0.817977,-0.437155,-0.022238,0.745083,0.014511,0.190315,0.063996,0.102266,0.163849,0.225237,-0.307859,-0.372697,-0.187739,-0.052048,0.212226,-0.267176) * L4_8 + mat4(-0.212950,0.039654,-0.248959,-0.077730,0.045043,0.033543,0.221521,-0.458038,0.216958,-0.096058,-0.032095,0.235825,-0.102100,0.056370,0.018013,0.090843) * L4_9 + mat4(0.218325,0.017227,-0.131211,0.064851,-0.085029,-0.029745,-0.051778,-0.126879,0.614791,-0.112195,0.132373,-0.001940,-0.019170,0.225405,0.148690,-0.006069) * L4_10 + mat4(0.110194,0.052899,0.266012,0.045335,0.005934,0.076450,0.217824,0.143771,-0.103109,-0.016182,-0.276202,-0.012682,-0.074519,-0.065309,-0.004065,0.095936) * L4_11 + mat4(-0.302210,0.123886,0.051041,0.133824,-0.051224,0.028160,-0.078004,-0.078322,-0.184377,-0.303244,0.079278,-0.051894,-0.367618,0.169414,-0.169173,-0.165175) * L4_12 + mat4(-0.040923,-0.060838,-0.097166,0.004383,0.096293,0.110073,0.025752,-0.087298,-0.227843,-0.052383,-0.434088,-0.111387,-0.029353,-0.068776,-0.198900,-0.004107) * L4_13 + mat4(0.220220,0.073884,0.273962,-0.046871,0.011814,0.000742,-0.120706,-0.053360,-0.065292,0.091006,0.089290,-0.035306,0.062475,-0.038207,-0.253202,-0.095635) * L4_14 + mat4(0.129282,0.023696,0.031652,-0.059400,-0.134810,0.028223,-0.050598,-0.050677,-0.270827,-0.059327,-0.133201,-0.114876,0.010513,0.050158,0.200707,-0.024490) * L4_15 + vec4(-0.053417,-0.147215,1.260438,-0.553405)));\nvec4 L5_4 = sin((mat4(0.016159,-0.018229,-0.066791,-0.028632,0.273216,-0.015666,0.017224,-0.259662,-0.327301,0.064869,-0.067682,0.097920,0.029071,0.094391,-0.122954,0.189130) * L4_0 + mat4(0.000763,0.140644,0.064755,-0.180767,-0.009924,0.009415,-0.113754,-0.187081,-0.093909,-0.002516,0.098185,-0.015112,0.079916,0.146429,-0.142257,0.075975) * L4_1 + mat4(0.162309,0.070800,-0.010943,-0.009065,0.073592,-0.049462,0.342838,0.129097,-0.247821,-0.146364,0.502725,-0.195684,0.036559,0.005212,-0.324767,0.084392) * L4_2 + mat4(-0.252125,0.120419,-0.153084,-0.240788,-0.209291,0.045254,-0.471647,-0.252632,0.024615,-0.025398,-0.160734,0.120861,-0.028044,-0.163906,-0.121067,-0.250759) * L4_3 + mat4(0.303213,0.179673,-0.360492,-0.217200,0.029679,0.064272,0.251505,-0.303848,0.069218,-0.169190,0.030551,-0.249747,0.017870,0.198949,0.097220,-0.035238) * L4_4 + mat4(-0.273993,-0.089255,-0.541462,-0.312586,-0.030178,-0.119900,0.172632,0.260403,-0.126611,-0.148936,0.113966,0.046470,0.088413,0.218690,-0.131529,-0.087327) * L4_5 + mat4(0.175979,-0.206402,0.505419,0.152700,0.053885,0.254983,0.016783,0.319540,0.006136,-0.126403,0.090247,-0.023133,-0.186332,0.453910,-0.143979,-0.081458) * L4_6 + mat4(0.092209,0.036597,-0.106547,-0.321836,-0.081472,-0.148149,-0.394708,-0.043196,-0.217736,-0.119888,-0.233953,-0.068104,-0.114655,0.076949,-0.089412,0.034189) * L4_7 + mat4(-0.267488,0.078972,-0.183436,0.337610,0.373478,0.321432,-0.670449,0.421413,0.318190,0.115492,0.958122,0.367137,-0.027637,-0.184480,0.701172,0.007318) * L4_8 + mat4(0.151031,-0.310525,-0.291805,0.390216,-0.032698,-0.091508,1.253089,0.005901,-0.156061,-0.129663,0.199783,-0.223445,-0.043468,0.510796,0.178312,-0.032964) * L4_9 + mat4(0.002624,-0.012132,-0.376988,-0.146193,-0.182932,-0.093470,0.235863,0.176080,0.104258,-0.018994,-0.673959,0.073210,0.176471,0.178910,0.302627,-0.314097) * L4_10 + mat4(-0.404595,-0.048958,0.000295,-0.255260,0.129580,0.017353,0.327630,-0.049273,-0.208995,-0.181817,-0.046051,-0.323734,0.002537,0.067462,0.025253,-0.076363) * L4_11 + mat4(0.287237,0.049711,0.080092,-0.332201,-0.079762,-0.163970,0.005365,-0.117871,-0.007400,-0.532869,-0.654538,-0.576985,0.664250,-0.168201,0.465370,0.165355) * L4_12 + mat4(-0.241944,-0.264149,-0.245807,-0.127927,-0.329563,0.188275,0.349560,-0.293495,-0.003205,0.113174,-0.102804,0.100702,0.141703,0.082401,-0.165265,0.276852) * L4_13 + mat4(-0.112450,-0.319589,-0.037911,-0.505773,0.061293,-0.177327,0.171048,-0.586388,-0.072919,0.109002,0.080377,-0.096755,-0.078257,-0.077324,-0.035817,-0.524564) * L4_14 + mat4(0.257050,0.032111,-0.216740,0.025503,0.036835,0.038664,-0.025459,0.111828,-0.137859,-0.061921,-0.242938,-0.265971,0.171158,-0.119909,0.423692,0.249527) * L4_15 + vec4(0.405246,0.151027,-0.499315,-0.393748)));\nvec4 L5_5 = sin((mat4(-0.086751,-0.034214,-0.024136,-0.016046,-0.047844,0.176328,-0.238547,-0.384078,-0.366899,0.262093,0.019455,0.090044,0.100695,-0.349085,-0.040848,-0.215060) * L4_0 + mat4(0.143139,0.344525,0.091084,-0.227796,0.018805,0.172289,-0.041829,-0.023323,0.115883,-0.087293,0.145919,0.202172,0.103784,-0.252257,0.237607,-0.107478) * L4_1 + mat4(-0.435000,-0.431344,0.044866,0.176670,0.118058,-0.135828,-0.048534,-0.044870,-0.341379,-0.256175,0.042987,-0.161552,-0.435088,0.038197,-0.081008,0.126004) * L4_2 + mat4(0.376915,0.221916,0.350639,-0.288902,-0.236219,-0.259256,-0.085505,-0.034165,-0.128898,0.181556,-0.129994,0.079690,0.047177,0.206309,-0.069966,-0.230007) * L4_3 + mat4(0.032276,0.374835,0.005576,0.218259,0.132572,-0.238308,0.139496,0.016817,0.699438,-0.071104,-0.181246,-0.100978,-0.153605,-0.028149,-0.099646,-0.092891) * L4_4 + mat4(0.287334,-0.401055,-0.068920,-0.216352,0.084880,-0.322628,-0.060023,0.171273,0.144171,0.171942,-0.164412,0.207569,0.079415,0.238958,0.305574,-0.459998) * L4_5 + mat4(0.344947,-0.402224,0.065094,0.109957,-0.022934,-0.163793,0.140936,-0.067664,-0.117220,-0.013589,-0.011455,-0.011636,0.043036,0.102417,-0.046145,-0.467572) * L4_6 + mat4(-0.119345,-0.111297,-0.079100,0.168008,-0.342229,-0.162730,-0.048681,0.028315,0.121017,0.244076,-0.154775,0.130454,-0.101171,-0.053389,0.099423,0.129713) * L4_7 + mat4(-0.441733,0.335032,-0.158135,-0.203281,0.335789,0.252249,0.072364,0.087012,-0.175418,-0.161789,-0.244368,-0.521734,0.234072,-0.125894,-0.065638,0.230448) * L4_8 + mat4(-0.110084,0.213571,-0.083114,-0.047012,0.210728,-0.221774,-0.069949,0.412730,-0.685263,0.006392,0.119514,0.202989,-0.595307,-0.051683,-0.053855,-0.111032) * L4_9 + mat4(0.007067,0.245476,0.067529,-0.034571,0.268049,-0.051489,-0.107101,-0.004717,0.223935,-0.199419,0.038685,-0.068506,-0.013047,0.402474,-0.003472,-0.020848) * L4_10 + mat4(-0.062643,0.712110,-0.304234,-0.086128,-0.034041,-0.059949,-0.074043,-0.167837,0.290454,0.453394,-0.108352,-0.065934,0.155908,-0.139756,-0.012925,-0.233671) * L4_11 + mat4(0.212389,1.039243,-0.167387,0.364179,-0.074770,0.025770,-0.013071,-0.122549,0.356630,-0.811840,0.468188,0.679623,-0.239375,-0.227912,-0.182846,-0.351707) * L4_12 + mat4(0.338788,0.046817,0.096970,0.064195,0.330009,-0.529540,-0.206376,0.298644,-0.168269,0.205566,-0.050685,0.149785,-0.153550,-0.185380,0.101751,0.120468) * L4_13 + mat4(0.035978,0.266285,-0.065019,0.042656,-0.089363,-0.016913,0.014496,0.062033,0.186370,0.061831,0.001458,-0.014816,-0.335323,0.450116,-0.121124,-0.092843) * L4_14 + mat4(-0.184538,-0.141923,0.054708,-0.184695,-0.304649,-0.190682,-0.139757,0.233311,0.014223,0.180397,-0.127234,0.052196,0.027403,-0.199650,-0.076536,0.123191) * L4_15 + vec4(0.972944,-1.465063,-0.942070,1.250737)));\nvec4 L5_6 = sin((mat4(0.176007,0.004510,0.210484,-0.116361,-0.175241,-0.149344,-0.284375,0.144334,0.419581,0.239931,0.184270,0.211217,-0.314614,0.080238,0.298837,0.082170) * L4_0 + mat4(-0.252537,0.055186,-0.003792,-0.054418,0.315148,0.012316,-0.349260,0.122337,-0.041333,-0.272089,0.190388,0.091500,-0.159424,0.084082,0.728472,0.309790) * L4_1 + mat4(-0.070613,0.336374,0.195147,-0.002604,-0.054330,0.052022,0.032233,-0.200178,0.294615,0.048301,0.039141,0.128298,0.090663,0.250759,0.333700,-0.255075) * L4_2 + mat4(-0.225314,-0.096612,0.267916,-0.260782,0.022612,0.121313,0.282239,0.143099,0.208478,0.178534,-0.082176,0.037083,0.112011,-0.012595,-0.206570,0.184087) * L4_3 + mat4(0.406629,0.138284,-0.270572,-0.093215,-0.111057,-0.261407,-0.157301,0.116843,-0.063951,0.889346,0.001750,-0.138067,-0.163390,0.135910,-0.214532,-0.092323) * L4_4 + mat4(0.127038,-0.154186,-0.152093,0.122434,0.058922,0.095876,0.090227,0.111874,-0.033913,-0.117699,0.356949,-0.049342,-0.370770,0.363445,0.204603,-0.051008) * L4_5 + mat4(-0.074054,-0.199809,0.034535,-0.067883,-0.118505,0.152409,-0.188185,-0.160256,-0.125170,0.155948,0.047560,0.005332,-0.101701,-0.102864,0.219054,0.240557) * L4_6 + mat4(0.014088,0.121195,-0.092579,0.132424,0.001000,0.161422,0.137763,0.163807,0.024556,-0.194762,0.124306,0.338491,-0.210456,-0.127102,-0.186014,-0.211632) * L4_7 + mat4(-0.151571,-0.745947,-0.805836,0.592838,0.399992,0.143261,-0.252485,0.044104,-0.590051,-0.094270,-0.337536,0.716827,0.063470,-0.392529,-0.075490,0.036615) * L4_8 + mat4(0.099108,-0.130522,-0.058774,0.118571,-0.197660,-0.292953,0.026993,0.067197,0.107414,-0.713779,0.018149,-0.303186,0.097203,-0.330388,-0.010118,0.075081) * L4_9 + mat4(0.004302,-0.096747,-0.062257,-0.050932,0.036843,-0.045594,0.060370,0.009164,0.064847,0.608004,-0.012569,-0.240312,0.283906,-0.190172,-0.241879,0.224916) * L4_10 + mat4(-0.196194,0.465375,-0.012528,0.055392,0.271238,-0.138789,0.040482,0.216314,0.020426,-0.333784,0.195600,0.078013,-0.254908,-0.054444,-0.211910,0.036951) * L4_11 + mat4(-0.029651,0.455325,-0.218507,0.026340,0.247933,-0.142761,-0.016131,0.041493,0.622812,-0.750117,0.021781,-0.233245,-0.060989,-0.484363,0.060939,0.140565) * L4_12 + mat4(-0.088342,0.066780,0.226953,-0.106577,0.248769,-0.150794,0.167557,-0.188580,-0.062035,-0.033646,-0.091759,-0.090122,-0.123771,0.020397,-0.144039,-0.215307) * L4_13 + mat4(0.079967,-0.051233,0.406317,0.010407,0.150447,-0.275848,-0.173449,0.020269,0.044270,0.074598,0.149774,0.093601,-0.119831,-0.626122,0.219713,-0.112798) * L4_14 + mat4(-0.007352,-0.127278,-0.070309,-0.040278,-0.099557,-0.279035,-0.186071,0.121605,0.278168,0.133640,0.028866,-0.002085,-0.045133,0.121084,-0.288771,0.161443) * L4_15 + vec4(-0.880340,-1.691927,-0.640702,0.504470)));\nvec4 L5_7 = sin((mat4(-0.109809,0.072695,-0.109224,0.074386,-0.185311,0.013126,-0.032152,1.420781,0.110956,-0.048824,-0.611644,-0.216938,0.124295,0.131292,-0.021004,0.044020) * L4_0 + mat4(0.402223,-0.017836,-0.027166,0.120931,-0.104538,-0.174982,-0.151821,-0.093678,-0.069359,-0.035342,0.079761,0.001700,-0.146907,-0.304042,-0.012870,0.318644) * L4_1 + mat4(-0.128754,0.057187,0.058324,-0.082213,-0.133301,0.221459,0.177347,0.072120,-0.016212,-0.213464,-0.247166,-0.074905,-0.056024,-0.127497,0.070218,-0.158580) * L4_2 + mat4(0.444764,0.001292,0.105346,0.244336,-0.096127,0.396686,-0.238622,-0.259145,0.166865,0.185987,0.032119,-0.233879,-0.235341,0.067532,-0.070125,0.083153) * L4_3 + mat4(0.164743,0.093481,0.098715,0.023066,-0.036033,-0.194132,-0.028369,0.352722,0.131599,0.069966,0.041007,0.055385,-0.022611,-0.003955,0.115299,-0.184167) * L4_4 + mat4(-0.169320,-0.073658,-0.084976,-0.169829,-0.435599,0.081469,0.239895,-0.027515,0.219576,0.000165,-0.126751,0.234165,0.366349,0.302036,-0.220112,-0.301662) * L4_5 + mat4(-0.194153,-0.009212,-0.037703,0.340393,0.124177,-0.037606,0.034353,0.093128,0.228410,-0.104965,0.033138,-0.028979,-0.011286,-0.169276,-0.214298,-0.135592) * L4_6 + mat4(0.339036,-0.199389,0.181045,-0.068429,-0.102803,-0.004725,-0.060683,-0.134181,-0.076316,0.041287,-0.244715,-0.044373,0.251390,-0.003543,-0.017601,0.156201) * L4_7 + mat4(0.543907,0.061127,0.209660,0.796652,-0.048554,-0.262232,-0.032135,0.031928,0.420635,-0.558214,0.420159,-0.906332,-0.201101,-0.500065,-0.301850,0.908722) * L4_8 + mat4(-0.180657,-0.022593,-0.151250,0.079015,0.068935,-0.244040,0.144756,0.484389,0.036408,0.202878,0.322533,-0.096870,0.084766,-0.020002,-0.207646,-0.274717) * L4_9 + mat4(-0.065685,0.196305,-0.088038,-0.088191,0.141294,0.075641,-0.058437,-0.115158,-0.010353,-0.029391,0.017771,-0.068232,0.001595,-0.078535,-0.034621,0.108752) * L4_10 + mat4(0.505819,0.112570,-0.516478,-0.321474,-0.139604,-0.038831,-0.011467,0.027258,0.223118,-0.144864,-0.200173,0.165379,0.075375,-0.069645,0.028126,0.115691) * L4_11 + mat4(0.007035,0.258007,-0.313113,-0.287106,-0.128333,-0.002090,-0.041362,-0.014949,-0.344198,-0.670931,0.296866,-0.312228,-0.023135,0.064944,0.166894,0.110498) * L4_12 + mat4(0.186234,0.112604,0.225865,0.035077,0.116531,0.314878,0.029977,0.245831,0.384883,0.207045,0.143490,0.186087,0.067955,-0.010890,0.323284,-0.012843) * L4_13 + mat4(-0.203100,0.065135,-0.038674,-0.051026,0.005228,-0.165026,-0.086385,-0.172651,-0.156247,-0.042954,-0.119889,-0.107727,0.365961,-0.266531,-0.368925,-0.020651) * L4_14 + mat4(-0.394713,-0.008711,0.084201,-0.130676,-0.120860,-0.068156,-0.218297,0.229459,0.105001,-0.006790,0.154813,0.043646,0.080334,-0.139140,0.192078,0.009686) * L4_15 + vec4(-0.618602,-0.013740,1.315895,1.875982)));\nvec4 L5_8 = sin((mat4(-0.029082,-0.052978,0.030510,-0.003563,0.135484,-0.096856,-0.455026,0.359639,0.080687,-0.067265,-0.368486,-0.172123,0.117484,-0.074475,-0.023033,-0.109235) * L4_0 + mat4(0.220873,0.164203,0.005846,-0.263621,-0.115926,0.028824,0.073282,-0.063847,0.039480,0.189089,-0.186543,-0.076405,0.120804,0.135905,-0.172874,-0.172966) * L4_1 + mat4(0.069040,0.028039,-0.015291,0.155131,0.195416,0.156303,-0.071419,-0.275610,-0.033714,-0.165524,-0.038773,-0.322073,-0.035282,0.095528,0.056098,-0.219392) * L4_2 + mat4(-0.081195,-0.055850,0.034587,-0.292542,0.057856,-0.212888,0.066173,0.033384,0.064466,0.185453,0.084358,-0.112517,-0.136399,0.109362,0.045443,0.051749) * L4_3 + mat4(0.036191,0.418378,0.087327,-0.169846,-0.048676,-0.039451,-0.000983,0.038487,-0.055223,-0.002700,0.070744,0.183547,0.159604,0.319087,-0.063669,-0.388240) * L4_4 + mat4(0.111425,0.119872,0.128769,-0.076340,-0.068639,0.068739,0.057287,-0.308081,0.059934,-0.069659,0.007046,0.064243,0.081160,-0.007710,-0.082023,-0.357555) * L4_5 + mat4(0.005163,-0.027087,-0.006556,0.017149,0.180644,-0.063215,0.021134,-0.037775,-0.071397,0.019656,-0.023100,-0.114235,-0.069781,0.020509,-0.126799,-0.244881) * L4_6 + mat4(0.005779,0.035573,-0.038740,0.181176,-0.023693,-0.013500,-0.022927,-0.125442,-0.307212,0.039183,0.013508,0.014212,0.098677,-0.090818,0.003875,-0.097306) * L4_7 + mat4(-0.008655,0.345825,0.517556,0.334721,0.147799,-0.096250,0.108570,-0.120243,-0.272670,-0.148679,-0.105163,-0.505619,-0.138300,-0.086604,-0.101091,-0.209324) * L4_8 + mat4(0.042718,0.208334,0.013329,-0.132859,0.129539,0.042759,0.118756,-0.458359,0.227259,0.156378,0.132316,-0.070079,0.016933,-0.079048,0.074858,0.039755) * L4_9 + mat4(-0.089645,-0.182620,0.020418,-0.016605,-0.060224,0.129362,-0.060915,-0.191681,0.120307,0.205080,-0.135123,-0.049469,-0.078819,-0.042970,0.052428,0.295628) * L4_10 + mat4(-0.053731,-0.308788,-0.477936,0.807115,0.013026,0.189951,0.009706,0.001210,-0.060617,-0.221055,0.065364,0.279034,0.012502,-0.018234,0.003675,-0.070106) * L4_11 + mat4(0.004204,0.070957,0.185257,-0.329985,0.001061,0.121569,0.024075,0.064727,0.204698,-0.073082,0.083545,0.147009,-0.058608,-0.084841,-0.003991,-0.118461) * L4_12 + mat4(0.062532,-0.249073,-0.081989,0.068539,0.175870,-0.093922,0.239954,0.039004,0.086499,0.217233,0.232417,0.000015,0.219732,-0.170852,-0.054224,-0.169565) * L4_13 + mat4(-0.179995,0.086642,-0.000372,0.174808,-0.074320,-0.054588,0.033808,0.012247,-0.076862,0.022688,0.001707,-0.025584,0.038785,-0.160868,-0.002316,0.331194) * L4_14 + mat4(-0.010104,0.222590,-0.084956,-0.158729,-0.043559,0.060118,-0.052056,-0.011856,-0.011640,-0.052497,0.151719,-0.143378,0.012555,0.057087,0.059296,0.063190) * L4_15 + vec4(-0.323497,0.450963,-0.573767,0.568868)));\nvec4 L5_9 = sin((mat4(-0.003060,-0.218878,0.237288,0.092706,0.156275,1.490067,1.325421,-0.478642,0.114838,-0.246876,0.064197,-0.126581,-0.045429,0.097073,-0.182502,0.244614) * L4_0 + mat4(-0.007506,-0.033355,0.028640,-0.262869,0.217637,-0.077264,0.103365,-0.127259,-0.076729,-0.149612,0.149213,-0.005464,0.156700,0.133240,-0.087991,-0.271003) * L4_1 + mat4(0.200140,-0.212517,-0.182011,-0.048615,-0.059343,0.022906,0.261374,0.156517,0.007078,0.300144,0.394213,0.084998,0.060460,-0.411586,0.359832,0.096765) * L4_2 + mat4(-0.055143,-0.205419,-0.068123,0.367752,0.072773,0.231847,0.016910,0.301619,0.016154,-0.256651,0.134439,-0.068591,0.182363,0.017661,0.034016,0.084991) * L4_3 + mat4(-0.353449,0.155544,0.397416,-0.189244,0.148207,0.256262,0.280176,-0.270435,-0.211019,0.249842,-0.005145,0.117132,-0.199387,0.018794,0.033655,-0.077020) * L4_4 + mat4(-0.006730,-0.269367,-0.670566,0.161541,0.165186,0.094255,0.017464,0.074859,0.137781,-0.183814,0.095175,0.068477,0.118471,0.037186,-0.323035,0.203320) * L4_5 + mat4(0.245026,0.170069,-0.190951,0.300968,-0.165362,0.363603,-0.161700,-0.002073,0.036205,0.208832,0.315250,-0.073797,-0.053514,0.136622,-0.093864,-0.144636) * L4_6 + mat4(-0.077425,-0.073857,0.242744,-0.098374,-0.128431,0.083136,-0.079077,0.028972,0.109926,-0.366302,0.033789,0.001784,-0.139428,0.080843,0.014901,-0.057167) * L4_7 + mat4(-0.015947,0.092067,0.211865,0.304119,-0.251412,0.081282,-0.587446,-0.777569,0.420892,-0.208842,-0.258876,-0.367243,0.545655,0.044204,0.370767,-0.051113) * L4_8 + mat4(-0.053473,0.003728,-0.064132,0.124203,0.240305,-0.491954,-0.664671,0.229943,0.004384,-0.282990,0.132451,0.093853,-0.354470,-0.307029,-0.123326,-0.211083) * L4_9 + mat4(-0.024131,-0.144649,-0.186354,0.149426,0.057147,-0.245432,-0.114890,0.005399,-0.232345,0.316820,0.077568,0.025836,-0.057030,0.448043,0.261314,-0.485896) * L4_10 + mat4(-0.317346,0.032752,0.481780,0.183934,0.112070,-0.065261,0.237583,0.031241,0.214932,-0.161684,0.136875,-0.354266,-0.086874,0.248199,-0.178848,0.151673) * L4_11 + mat4(-0.218184,0.157930,0.219072,0.596412,0.075356,0.052196,0.076682,-0.062166,-0.345881,0.059889,-0.444062,-0.057475,0.072093,0.284097,0.141582,-0.338632) * L4_12 + mat4(0.106617,0.080036,-0.121333,0.240386,-0.104627,-0.720209,0.050612,-0.230451,0.001925,0.144026,-0.022771,0.070854,-0.226404,0.271798,-0.124390,0.002906) * L4_13 + mat4(0.189314,-0.330251,0.083854,0.024427,0.105811,0.016295,0.097779,-0.101679,0.052355,-0.048347,0.073796,0.045219,0.180065,-0.270309,0.207187,-0.428759) * L4_14 + mat4(0.024209,0.107724,-0.310925,0.208788,0.260959,-0.379386,-0.066331,-0.231718,0.017097,-0.234894,0.013794,0.023825,-0.067835,0.153040,0.271391,-0.024923) * L4_15 + vec4(1.102188,-0.024336,-2.246161,-1.006404)));\nvec4 L5_10 = sin((mat4(0.037426,0.027015,0.071682,0.177547,0.330269,0.258548,0.378452,-0.303862,-0.247481,-0.094390,0.469441,0.171187,-0.016981,-0.054071,0.028790,-0.008916) * L4_0 + mat4(0.006977,-0.071195,0.025045,-0.090180,-0.016127,0.108021,0.031667,0.092337,0.187799,0.054896,-0.329972,-0.168269,0.182529,-0.056029,0.383038,-0.147895) * L4_1 + mat4(-0.165926,0.041532,0.100122,0.182823,0.074123,-0.008280,0.102736,-0.002104,-0.456482,-0.025505,-0.163104,-0.337253,-0.027720,0.085837,-0.188065,0.207143) * L4_2 + mat4(0.207726,0.053368,0.077355,-0.186329,-0.042771,0.122907,-0.284070,-0.076311,-0.013453,-0.120149,-0.071314,0.002921,0.038968,0.041144,0.004841,-0.076820) * L4_3 + mat4(0.170216,-0.030752,0.059686,0.134365,0.026768,0.080426,-0.026567,-0.241043,-0.288441,-0.092523,-0.303519,0.044137,-0.134799,-0.078401,-0.084533,-0.093496) * L4_4 + mat4(0.051029,-0.036742,-0.055203,0.093550,0.022112,-0.031341,0.159354,0.024827,-0.001827,-0.000758,0.144971,0.142113,0.122183,-0.057544,0.368042,-0.062305) * L4_5 + mat4(-0.083078,0.013333,0.096215,-0.364257,-0.054996,-0.101045,0.149297,0.000383,-0.061819,-0.064590,-0.044337,0.082260,-0.092859,-0.109919,0.078340,-0.347881) * L4_6 + mat4(-0.017943,0.001233,-0.041966,0.048398,-0.098196,-0.036696,-0.125761,0.094593,-0.034179,0.069888,0.023479,-0.104599,-0.031081,-0.081796,0.041622,-0.100640) * L4_7 + mat4(0.094089,-0.834507,0.096790,-0.342618,-0.143911,0.072763,0.177253,0.135522,-0.192342,0.239294,0.158610,-0.537065,0.387332,-0.181269,0.888008,-0.053126) * L4_8 + mat4(0.010473,-0.026136,-0.122189,0.100116,0.021617,0.107550,-0.515880,0.347231,0.144703,0.071669,-0.142392,-0.167987,-0.089328,0.056781,-0.144640,0.469817) * L4_9 + mat4(0.069985,0.013356,-0.146768,0.113572,-0.059519,-0.055189,-0.125012,0.184559,0.115155,0.054646,-0.153881,-0.215237,0.080607,0.012722,-0.102527,0.342443) * L4_10 + mat4(-0.502518,0.006489,-0.307340,-0.120499,0.085526,-0.052217,-0.125440,-0.123583,0.008378,0.010712,-0.269413,0.042501,-0.078238,-0.047109,0.179434,-0.107933) * L4_11 + mat4(-0.036480,-0.204534,0.131802,0.413779,0.016139,-0.029264,-0.045526,0.043039,-0.485934,-0.079572,-0.027554,-0.240097,0.178895,-0.017627,0.085789,-0.451399) * L4_12 + mat4(0.010979,-0.028978,0.239060,-0.094466,0.054055,0.000383,-0.474199,0.407166,0.118390,-0.218353,-0.280160,-0.192137,-0.008044,-0.036851,0.238650,-0.039052) * L4_13 + mat4(0.084724,0.138629,-0.126793,0.080862,0.018065,0.022423,-0.249995,-0.026071,-0.018895,0.019276,0.025520,0.167981,-0.200882,0.008841,-0.368309,0.042195) * L4_14 + mat4(0.016603,0.045884,0.341923,0.098178,-0.053316,0.091174,-0.074596,-0.032242,-0.031997,-0.153030,-0.050460,0.095495,-0.087749,-0.168861,0.264764,-0.065772) * L4_15 + vec4(-0.073083,-0.039475,0.450595,-0.542637)));\nvec4 L5_11 = sin((mat4(-0.071140,0.211118,-0.217233,-0.348041,-0.202768,0.263960,-0.349927,-0.870979,-0.236308,0.304082,0.290032,0.034360,-0.022682,-0.403648,-0.000037,-0.162323) * L4_0 + mat4(-0.112966,-0.139608,0.161165,-0.100461,-0.018342,0.347825,0.056220,0.190652,-0.095019,-0.042217,-0.191561,-0.549032,-0.064297,-1.370847,-0.018365,-0.570786) * L4_1 + mat4(-0.006123,0.354263,0.186038,-0.154208,-0.334692,0.156660,-0.109137,-0.288638,0.174823,-0.090734,-0.306944,-0.116515,-0.065333,-0.279770,-0.304006,0.336334) * L4_2 + mat4(0.029705,-0.589036,-0.132291,0.360549,-0.037570,-0.275958,0.283529,0.169975,0.081879,0.606520,-0.043954,0.090264,0.082577,-0.020053,-0.066712,0.211838) * L4_3 + mat4(0.136439,-0.142606,-0.415238,0.089464,0.166148,-0.041198,-0.003554,0.087569,-0.029818,-0.279437,-0.045181,-0.414331,-0.155616,0.234300,0.245598,0.382354) * L4_4 + mat4(-0.217994,-0.300954,0.360182,0.225436,-0.122885,0.242212,0.153164,0.137786,0.072183,0.015055,0.329447,0.151336,0.081496,0.011616,0.780220,-0.141708) * L4_5 + mat4(0.018149,-0.062470,0.112326,0.029676,-0.092530,-0.214437,0.091916,-0.237482,-0.129597,0.016348,0.097059,-0.078384,0.034927,-0.374954,0.151602,0.304657) * L4_6 + mat4(0.051372,-0.006147,-0.223346,-0.200433,-0.013528,-0.329414,-0.158463,0.072484,0.146802,0.302618,-0.013622,0.430724,-0.072281,0.004771,0.290291,-0.316542) * L4_7 + mat4(0.211162,-0.089948,-0.549898,0.523480,-0.108950,-0.261671,0.488535,-0.230498,0.345559,0.464450,-0.593619,0.361307,0.107726,0.122499,-0.108968,0.289811) * L4_8 + mat4(0.112201,-0.289958,-0.047265,0.093318,-0.236999,-0.440541,0.078224,0.085209,0.109500,-0.023720,0.119258,-0.047564,-0.083905,0.051448,-0.160321,0.370177) * L4_9 + mat4(-0.045539,-0.383447,0.021246,0.341065,-0.087510,0.178268,0.392929,0.027293,-0.070790,-0.268703,-0.356547,-0.342570,-0.134140,0.702045,0.233659,-0.438584) * L4_10 + mat4(0.043508,1.152805,0.391077,-0.183157,0.059605,-0.262200,-0.177331,0.160194,0.091623,-0.052030,0.086593,-0.454826,-0.037194,-0.426986,0.059254,-0.214389) * L4_11 + mat4(-0.074309,-0.133091,-0.451621,-0.473394,0.106171,-0.063428,-0.058869,0.266549,0.265800,-0.243145,0.163592,0.573120,-0.020648,0.366549,0.355892,0.388921) * L4_12 + mat4(0.003404,0.215005,0.127012,-0.253552,-0.071062,0.373924,-0.233093,-0.084098,-0.062996,0.227573,-0.222786,-0.014167,-0.059813,-0.031675,0.045216,-0.560638) * L4_13 + mat4(0.039904,0.144066,-0.070871,0.367580,0.148173,0.277209,-0.028964,0.394979,-0.058389,0.081948,-0.087769,-0.095964,0.081738,0.001574,0.212861,-0.280048) * L4_14 + mat4(-0.039863,0.064838,0.427395,0.212592,0.123247,0.273599,0.308263,0.378245,-0.070669,-0.050011,-0.108589,-0.278100,-0.039224,-0.189464,-0.207655,0.389815) * L4_15 + vec4(0.889211,-0.639741,-0.395681,1.395429)));\nvec4 L5_12 = sin((mat4(-0.171909,-0.298082,0.100631,0.151351,-0.583360,0.192402,-0.368463,0.219219,-0.256187,0.021806,0.219039,-0.146643,0.245344,-0.044819,-0.010593,0.080485) * L4_0 + mat4(-0.078914,0.413997,-0.218714,0.069298,-0.206003,0.286524,-0.067984,-0.056006,0.320232,-0.239027,0.490514,0.112317,0.066948,-0.123393,-0.038385,-0.617597) * L4_1 + mat4(-0.056748,0.399339,-0.417663,-0.010844,-0.053778,0.253918,-0.022926,-0.087268,-0.334139,0.087263,0.656807,0.022950,0.071403,-0.388935,0.102284,-0.227273) * L4_2 + mat4(0.036454,-0.078834,0.245793,0.329258,0.009258,0.539635,0.152637,-0.218605,0.125418,0.088832,0.065103,0.098949,-0.063417,0.220907,-0.050409,-0.013809) * L4_3 + mat4(0.282610,-0.168600,0.004326,-0.258403,-0.032276,-0.253778,-0.011175,0.034945,0.353437,0.015786,0.023541,0.357525,0.054247,0.280335,-0.163713,0.027843) * L4_4 + mat4(0.228347,0.068929,-0.061481,-0.121499,0.090941,-0.137737,0.098496,-0.013220,-0.134170,0.200384,-0.080168,-0.026064,-0.125183,0.027237,-0.266898,0.199710) * L4_5 + mat4(-0.057270,-0.255307,0.139785,-0.001076,-0.013316,-0.054377,-0.019491,-0.022951,-0.125384,0.287599,-0.071204,-0.036463,-0.097233,-0.057139,-0.253895,0.016446) * L4_6 + mat4(0.111610,0.181959,0.200149,-0.034350,-0.031621,0.045238,-0.148705,0.267303,-0.066755,0.020506,-0.009266,-0.052981,-0.009044,-0.099847,-0.045127,0.068458) * L4_7 + mat4(0.240189,-0.735344,-0.899849,0.128841,0.153910,-0.134208,0.129715,-0.257081,-1.394381,-0.407736,-0.276092,0.671508,-0.116670,-0.257546,0.026245,-0.404675) * L4_8 + mat4(-0.000349,-0.053946,0.100708,-0.044281,-0.238548,0.044801,0.533861,0.145986,0.146031,0.266919,-0.085269,-0.171884,0.256976,-0.035217,0.409285,0.171361) * L4_9 + mat4(0.209563,-0.083261,0.008936,-0.191517,-0.043086,0.436134,0.056357,-0.031903,0.203041,-0.227041,0.172681,-0.023692,0.042551,-0.050943,0.087625,0.117408) * L4_10 + mat4(-1.270879,0.066491,-0.674765,-0.004960,0.256707,0.222433,0.028217,0.162428,-0.311604,-0.298289,-0.157456,-0.039092,0.112933,0.224409,-0.043303,0.118193) * L4_11 + mat4(-0.286147,0.442584,-0.261910,0.400207,0.085511,0.272584,0.035804,0.022302,-0.317082,-0.280051,-0.059202,0.036414,-0.110372,0.112565,-0.495134,-0.358227) * L4_12 + mat4(-0.202554,-0.217522,0.086110,0.079285,-0.211100,0.524531,0.558728,-0.026312,0.316053,-0.275049,0.048578,0.260247,0.085141,0.033382,-0.007285,-0.117545) * L4_13 + mat4(-0.080415,0.064245,0.061788,-0.017421,0.034313,-0.230751,-0.016007,0.058068,-0.208677,0.119596,-0.103297,0.014290,-0.491189,-0.136454,-0.293932,-0.139991) * L4_14 + mat4(0.090962,0.044301,-0.170150,-0.234221,-0.196927,0.369764,-0.014674,-0.206797,0.188361,-0.466075,0.201550,-0.043169,0.198558,-0.200297,-0.049150,0.037024) * L4_15 + vec4(0.376045,-1.591241,0.533494,0.541412)));\nvec4 L5_13 = sin((mat4(-0.083266,-0.052203,-0.227177,-0.032820,-0.256903,-0.600253,-0.408298,0.115673,0.025425,-0.014627,0.246850,-0.159255,-0.299529,-0.043439,0.179421,0.028686) * L4_0 + mat4(0.083156,-0.098931,0.118372,0.240486,0.327658,-0.048221,0.146981,-0.022639,0.058917,-0.524714,0.144113,-0.119117,0.094840,-0.285367,0.023724,0.050592) * L4_1 + mat4(-0.208483,0.032741,-0.199098,0.117050,-0.141056,-0.192797,-0.000138,0.262152,0.033616,-0.292024,0.605471,0.005956,0.109950,0.014294,0.009427,-0.029337) * L4_2 + mat4(-0.010360,-0.039082,-0.337005,-0.117034,0.262228,0.154438,0.247452,0.003851,-0.000294,-0.079427,0.023022,0.027323,0.307244,0.142325,0.472065,-0.004525) * L4_3 + mat4(0.078239,-0.048066,-0.270108,-0.110185,0.076649,-0.050107,-0.102433,-0.097819,0.005535,-0.174841,-0.011221,-0.038541,-0.009462,-0.056986,0.138312,0.285761) * L4_4 + mat4(0.075492,-0.003539,0.317853,-0.066570,-0.167024,0.056351,-0.015437,-0.021551,-0.068381,0.046127,0.030134,0.092654,-0.184382,-0.350227,-0.092250,0.025131) * L4_5 + mat4(0.139754,-0.001506,-0.058346,0.078846,-0.188442,-0.003014,-0.196857,0.081377,0.079808,-0.074386,-0.049066,0.298605,0.087426,-0.014493,0.593843,-0.134950) * L4_6 + mat4(0.200208,-0.089176,0.249476,0.071207,-0.098835,-0.036830,-0.098193,0.032470,0.304936,-0.019112,0.352207,-0.252807,-0.269704,-0.189317,0.060385,0.089070) * L4_7 + mat4(0.531707,-0.508179,-0.243451,-0.195263,-0.221990,0.239971,-0.047885,-0.220279,0.184687,0.935813,0.089294,0.133476,0.089778,0.374823,0.336152,0.137517) * L4_8 + mat4(-0.033720,0.130830,0.217945,-0.000307,-0.061685,-0.094881,-0.109785,-0.263971,-0.147505,-0.273251,0.166891,-0.018775,0.117377,-0.084982,0.047199,-0.143054) * L4_9 + mat4(-0.046765,0.080684,0.010799,-0.067149,0.034868,-0.003615,0.038733,0.024581,-0.067184,-0.072759,-0.099624,0.129847,-0.030969,-0.056590,-0.008822,-0.289960) * L4_10 + mat4(0.165744,-0.475528,0.288421,-0.428367,0.150088,0.169426,-0.056289,-0.008129,0.352839,-0.170843,-0.092212,-0.307206,-0.035594,0.056276,0.289774,0.058546) * L4_11 + mat4(0.231090,-0.364354,-0.322816,-0.110449,0.129214,0.028677,0.045394,-0.012181,-0.000976,-0.133020,-0.210630,-0.336633,0.105545,0.010609,-0.052447,0.181062) * L4_12 + mat4(-0.316634,-0.016273,-0.103053,0.042149,0.025866,-0.020466,-0.269787,-0.184195,-0.049059,-0.155237,-0.536937,0.147660,-0.265209,-0.046561,-0.092854,0.152935) * L4_13 + mat4(0.073866,0.002073,-0.026815,-0.066456,0.102425,0.062569,0.096194,-0.125388,0.074708,0.001205,-0.055711,-0.047188,0.409126,-0.206600,-0.192685,-0.013141) * L4_14 + mat4(0.050669,0.205758,0.102332,0.155645,0.133626,0.051220,0.415186,0.084940,0.014620,-0.068809,0.199957,-0.029779,0.016952,-0.098774,-0.258311,-0.125760) * L4_15 + vec4(1.317964,1.509601,0.450778,-0.337549)));\nvec4 L5_14 = sin((mat4(-0.179457,-0.065913,0.072298,0.096835,0.352171,-0.019767,-1.202011,-0.574135,0.556793,-0.029231,0.031624,0.097187,-0.011073,0.012089,0.313551,0.056233) * L4_0 + mat4(0.126567,-0.014211,-0.120432,0.123205,-0.126122,-0.052218,0.103907,-0.043214,-0.084759,0.283977,-0.106271,0.118050,0.353111,0.320871,-0.140459,0.302528) * L4_1 + mat4(0.011727,0.078774,0.257036,0.102747,0.053601,0.035271,-0.003099,0.150318,0.064299,-0.227235,-0.164065,0.037873,0.107408,-0.094160,0.122846,-0.002624) * L4_2 + mat4(-0.306893,-0.224361,-0.430612,0.230210,-0.619777,0.038237,-0.289327,0.676513,0.095615,0.095775,0.086339,0.039292,-0.068103,-0.025421,0.114419,-0.156878) * L4_3 + mat4(0.144508,-0.124463,-0.448727,-0.288710,-0.305773,-0.031709,-0.003358,0.068820,0.212784,-0.193297,0.069610,0.186966,0.503174,0.058578,-0.309315,0.006312) * L4_4 + mat4(-0.209289,0.173307,-0.138683,0.368437,0.215149,0.104356,0.181930,-0.111565,0.270888,0.124415,0.113904,0.074115,0.155163,0.386897,-0.871555,0.496986) * L4_5 + mat4(-0.087509,0.049061,0.120592,-0.232682,-0.051777,0.071327,-0.044495,-0.030904,0.063034,0.105101,-0.071125,0.055662,-0.156981,0.065377,-0.118371,0.319782) * L4_6 + mat4(0.184683,0.061292,0.317061,-0.242961,0.105070,-0.084292,-0.428914,-0.125943,-0.075663,-0.047565,0.184025,-0.224275,0.028444,0.105632,0.056393,0.069097) * L4_7 + mat4(0.137539,0.534795,0.517402,-0.917525,0.445373,-0.035117,-0.186357,-0.268584,0.239587,-0.691823,-0.026854,-0.025479,0.558668,-0.068293,0.195401,-0.143288) * L4_8 + mat4(0.396410,-0.050202,0.084591,-0.062466,-0.592813,0.421984,-0.273140,0.353078,0.232608,-0.005625,0.182319,-0.301160,0.106982,0.104118,-0.156641,0.433303) * L4_9 + mat4(0.063602,0.000582,0.000283,0.237332,-0.151151,0.133205,0.099598,0.487886,-0.031342,-0.090622,-0.371063,0.228092,0.084852,0.092976,0.050152,0.364345) * L4_10 + mat4(0.451010,-0.034918,-0.767430,0.060788,0.174475,-0.089655,-0.012049,0.050853,-0.412526,-0.024506,0.450930,0.290275,-0.107351,0.092401,0.202219,0.083950) * L4_11 + mat4(0.592969,0.257783,0.150591,0.150699,0.075056,-0.019658,-0.032527,0.057640,-0.306453,-0.128104,0.492267,-0.530373,0.401551,0.348916,-0.286536,-0.085709) * L4_12 + mat4(-0.214858,-0.072484,-0.077353,0.178895,0.102558,-0.176568,0.758094,0.583743,-0.392444,0.092351,-0.098689,-0.224097,-0.494201,0.127222,-0.271987,0.185643) * L4_13 + mat4(0.175856,-0.039993,-0.110576,-0.160378,0.155261,-0.047766,-0.110701,0.068496,0.210198,-0.073705,0.075782,0.009047,-0.403866,-0.035323,0.278562,0.368745) * L4_14 + mat4(0.108326,0.026235,-0.318085,-0.270223,0.351048,0.076334,0.361031,-0.062434,-0.030861,0.033963,0.079217,0.001142,0.245160,-0.131042,0.117279,-0.348862) * L4_15 + vec4(-2.594345,-0.711873,1.368474,-1.236302)));\nvec4 L5_15 = sin((mat4(0.113615,0.028702,-0.196929,0.057492,0.203455,-0.614924,-0.015925,-0.452001,0.427790,-0.093369,-0.129197,-0.120074,-0.039599,0.031251,-0.205565,0.109609) * L4_0 + mat4(0.102686,-0.027227,0.004774,0.041676,0.056587,-0.152290,0.203785,-0.125003,0.009043,-0.288276,0.040211,0.007291,-0.172435,-0.081179,0.381924,-0.028243) * L4_1 + mat4(0.308095,0.077161,0.090380,0.203327,0.125075,0.045424,-0.259538,0.157187,0.092641,-0.221001,0.336097,-0.239357,-0.100744,0.004215,-0.004461,0.103509) * L4_2 + mat4(0.070691,-0.092805,0.692759,0.041198,0.106275,0.308233,-0.146390,0.160878,0.066304,-0.020465,-0.162177,0.135212,0.028216,0.013191,0.080909,-0.084004) * L4_3 + mat4(-0.153389,0.261530,0.390963,-0.109257,-0.107852,-0.185316,0.602191,0.107144,0.178663,0.192743,0.056151,0.329051,0.061491,0.013597,-0.327084,0.121035) * L4_4 + mat4(0.045573,-0.064008,-0.089413,0.081850,-0.095541,0.136395,-0.124195,-0.011263,0.062866,0.005136,-0.339028,0.185080,0.048024,-0.161781,0.274733,0.379789) * L4_5 + mat4(0.076534,-0.162304,0.046571,0.022433,0.021817,0.011314,-0.030486,0.166335,0.032334,-0.036485,-0.067755,0.046708,0.201739,-0.044315,-0.039944,-0.107302) * L4_6 + mat4(-0.049386,0.179608,0.289480,0.018677,0.065633,0.033196,0.078802,0.031548,-0.032198,-0.046191,0.078883,-0.247012,0.025621,-0.014601,0.094818,0.018670) * L4_7 + mat4(0.276025,0.016758,-1.024839,-0.268756,0.005102,0.412211,-0.092893,0.189778,-0.083946,-0.251159,-0.179581,-0.147344,0.467826,-0.212754,-0.396273,-0.318059) * L4_8 + mat4(-0.082192,0.035845,-0.513729,-0.050935,-0.271452,-0.046835,-0.526731,0.406195,0.052515,-0.024631,0.304134,0.086474,0.069664,0.112631,0.099874,-0.074220) * L4_9 + mat4(0.031660,0.119448,0.123557,0.022983,0.176131,0.126639,-0.199026,0.158207,-0.151001,0.051983,0.318591,-0.039341,0.065602,-0.033470,-0.137538,-0.054968) * L4_10 + mat4(0.433932,0.100847,-0.087179,-0.162415,0.105322,-0.056063,-0.065934,-0.031342,0.078280,-0.157382,0.441222,-0.052345,0.054461,0.023323,-0.124983,0.086100) * L4_11 + mat4(-0.414617,0.383867,-0.314463,0.320499,0.020402,0.031156,0.105373,0.036667,0.084390,0.141450,1.339032,0.202597,0.004890,-0.227225,0.093017,-0.048949) * L4_12 + mat4(0.067747,0.023084,0.040126,0.055959,0.154585,0.178046,-0.275740,-0.370752,0.071291,-0.157881,-0.067580,0.215338,0.018294,0.033986,-0.191120,0.164030) * L4_13 + mat4(-0.026692,0.002241,0.069743,-0.218351,-0.019048,0.026403,0.186797,-0.072245,-0.012628,0.096694,-0.078683,-0.047869,0.249949,-0.332291,0.218134,0.225489) * L4_14 + mat4(-0.064613,0.042801,-0.007473,0.006124,-0.229849,0.030132,0.014799,-0.073915,0.070856,-0.098571,0.049729,-0.057090,0.084014,0.116300,-0.144995,-0.016314) * L4_15 + vec4(0.336926,-0.016429,0.770550,0.259552)));\nvec4 L6_0 = sin((mat4(-0.012793,-0.046530,0.006630,-0.034733,0.021118,0.012513,0.002621,-0.106501,-0.064707,0.004403,-0.002516,-0.001603,0.173796,-0.010503,-0.015105,-0.025712) * L5_0 + mat4(-0.123482,0.010152,-0.003204,-0.097334,-0.048305,0.016568,0.010797,-0.363568,-0.102400,-0.081455,-0.007677,-0.213540,0.098205,0.003230,0.018571,0.004054) * L5_1 + mat4(0.267982,-0.236558,0.008199,0.092621,-0.051708,0.072461,-0.013008,-0.255551,-0.017913,-0.012298,-0.005814,-0.056398,-0.083174,0.013354,-0.004457,0.059106) * L5_2 + mat4(-0.040216,-0.035636,0.002686,0.022879,0.091350,-0.395351,-0.012178,-0.232935,-0.011570,-0.003878,-0.009742,-0.237488,-0.079494,0.337503,0.010046,-0.206221) * L5_3 + mat4(-0.124561,0.068777,-0.026186,0.047108,-0.046254,-0.002864,0.022869,-0.165573,-0.021421,-0.032244,0.006068,0.011688,-0.053715,0.019224,-0.005573,0.172905) * L5_4 + mat4(0.041424,-0.021019,0.012613,0.094774,-0.016717,-0.033324,-0.003230,-0.012107,-0.042399,-0.065822,-0.001236,-0.007135,0.076135,0.033409,-0.000958,0.205020) * L5_5 + mat4(-0.026549,-0.127771,0.008935,-0.239091,-0.058507,-0.002019,-0.000872,-0.081818,0.025386,-0.040057,0.000952,-0.050051,-0.073807,0.057777,0.007535,-0.162645) * L5_6 + mat4(-0.007138,-0.028918,0.000844,-0.022034,-0.160254,0.101862,0.000601,-0.008509,0.147829,0.146440,-0.000687,-0.070495,0.016097,0.056482,-0.007213,0.199519) * L5_7 + mat4(-0.088951,0.255187,-0.017033,0.402944,-0.019920,-0.013349,-0.012304,0.194599,-0.751195,0.394277,-0.009948,0.031873,-0.028833,0.019603,0.005518,0.104814) * L5_8 + mat4(-0.061161,0.075650,-0.018891,0.069522,0.134328,-0.000454,0.024457,0.139563,-0.047149,-0.027612,-0.002929,-0.024804,-0.026938,0.079768,-0.005737,-0.186671) * L5_9 + mat4(0.026978,0.137132,-0.002897,0.019152,0.270280,-0.479084,-0.001567,-0.731282,0.085477,-0.070179,0.002908,0.058022,-0.111715,-0.023511,0.002845,-0.342932) * L5_10 + mat4(0.025667,-0.072451,0.010458,-0.194629,-0.030274,-0.003890,-0.003364,-0.041719,0.078235,-0.037063,0.007857,0.020277,0.044658,0.010164,-0.007592,0.017276) * L5_11 + mat4(0.002403,-0.002271,-0.001546,0.057087,0.013895,0.012682,0.005724,0.005511,0.033541,-0.058393,0.012308,-0.077104,-0.019101,0.040509,0.008749,0.011432) * L5_12 + mat4(0.115237,0.003344,-0.001288,0.092968,0.099931,0.025813,-0.001007,0.098620,-0.015927,0.006525,-0.001913,-0.044554,0.035269,-0.010948,-0.023331,0.295466) * L5_13 + mat4(0.001271,0.011487,0.007078,-0.000201,0.168292,0.052396,0.003070,0.023206,0.052661,0.077964,0.002493,0.231535,-0.079094,-0.013411,-0.000062,-0.139395) * L5_14 + mat4(0.185394,-0.032368,-0.008426,-0.153227,-0.159727,0.061898,-0.014200,-0.144673,0.035595,0.014401,-0.000931,-0.099715,-0.105016,0.016125,0.025415,0.223486) * L5_15 + vec4(0.070161,1.147483,-0.002218,-0.858939)));\nvec4 L6_1 = sin((mat4(0.005592,-0.200121,0.102447,-0.005931,0.012192,0.073611,-0.041428,0.006916,0.005747,0.022423,0.020856,0.001752,-0.005424,0.114912,0.037309,0.004369) * L5_0 + mat4(-0.017745,0.027924,-0.100653,0.015867,0.008391,0.003026,0.057368,0.004546,0.014263,-0.357956,-0.455028,0.002911,-0.006682,0.105111,-0.111216,-0.016285) * L5_1 + mat4(0.004061,-0.264589,0.217402,0.015476,0.009348,-0.002255,-0.221479,-0.006178,-0.002313,-0.049493,0.118406,-0.010465,0.001585,-0.168467,-0.074383,-0.017009) * L5_2 + mat4(0.006354,0.285465,0.042132,0.005279,-0.000263,-0.036628,0.115910,-0.005536,0.002565,0.209672,-0.086017,-0.005640,0.006001,-0.065770,-0.066978,0.001727) * L5_3 + mat4(-0.007797,0.160245,-0.128994,-0.011860,0.004715,-0.065036,0.040350,-0.005140,-0.000660,-0.027248,-0.003224,0.014499,-0.000325,-0.065165,0.069499,0.015043) * L5_4 + mat4(0.009199,0.192652,0.019868,0.002210,-0.005320,-0.063041,0.026505,0.009299,0.009474,0.018554,0.147160,-0.015400,0.008808,0.211834,-0.000516,0.006120) * L5_5 + mat4(-0.017047,0.062540,-0.005945,0.016435,-0.007736,-0.003059,0.038593,0.002625,-0.005873,-0.109312,0.065494,-0.000580,-0.003884,0.295619,0.016502,-0.003687) * L5_6 + mat4(-0.018105,0.005070,0.014506,-0.007639,-0.005247,-0.044801,0.234909,0.005726,-0.000315,0.190373,0.066488,-0.011500,-0.002919,-0.033659,0.002652,-0.007726) * L5_7 + mat4(-0.016228,0.025896,0.256516,0.003271,0.002311,-0.254567,0.238794,-0.002489,0.017536,0.019199,-0.443605,-0.016202,-0.014538,0.042606,0.086753,0.008986) * L5_8 + mat4(-0.008336,0.090991,0.101802,0.013650,-0.000786,-0.062679,-0.039488,-0.001369,-0.008811,0.073392,-0.090032,0.002598,-0.009880,-0.044565,-0.049364,-0.013212) * L5_9 + mat4(0.019915,0.225628,0.009405,-0.004417,-0.006588,0.255799,0.135429,-0.014557,-0.001375,-0.173456,-0.159192,-0.008975,0.006045,0.039932,0.033695,0.021572) * L5_10 + mat4(0.008068,-0.355195,-0.341868,-0.009705,-0.005184,-0.008418,-0.002496,-0.002926,0.018245,0.023311,-0.033078,-0.011590,0.006089,-0.010499,0.066345,0.001771) * L5_11 + mat4(-0.000335,-0.073343,-0.047729,0.006778,0.000962,-0.109752,-0.115827,0.014605,0.009482,0.088328,0.021623,0.001059,0.014168,-0.064322,0.018991,0.012739) * L5_12 + mat4(-0.018950,0.004545,-0.190590,-0.008862,0.008297,-0.081145,-0.235883,0.008861,0.006998,-0.072843,-0.024881,0.000750,-0.001197,-0.243112,0.182009,0.008141) * L5_13 + mat4(-0.001808,0.097961,0.025027,0.013137,0.018701,0.257722,0.210575,-0.003679,-0.001229,0.025574,-0.037972,-0.003938,0.000120,0.170829,0.031850,-0.015098) * L5_14 + mat4(-0.023931,-0.319828,0.028810,-0.018307,-0.021371,0.225080,-0.029464,0.001322,-0.008690,-0.012984,0.057743,0.015469,0.012604,0.146250,0.065495,-0.001610) * L5_15 + vec4(0.001785,-0.071853,0.763478,0.005969)));\nvec4 L6_2 = sin((mat4(-0.189447,-0.057347,-0.000168,-0.053907,0.141757,0.021843,0.006355,0.023148,-0.052412,-0.005099,-0.004692,0.011981,-0.333285,-0.061261,-0.010458,0.077628) * L5_0 + mat4(-0.296238,-0.010144,-0.002522,0.001146,0.119022,0.007488,-0.005739,0.023018,0.526063,-0.116870,-0.003684,-0.159441,0.071729,0.055671,0.016363,0.105477) * L5_1 + mat4(0.112583,-0.240060,0.011429,0.256999,-0.135330,-0.009753,-0.008438,0.081242,-0.067642,-0.054626,-0.000688,0.059569,0.051244,0.013857,0.009886,-0.006511) * L5_2 + mat4(-0.330967,-0.015474,0.018103,0.001004,0.123389,-0.378338,-0.006091,0.218631,-0.227695,0.031188,-0.007142,0.004990,-0.320913,0.300558,0.008692,0.005560) * L5_3 + mat4(0.222227,0.043208,-0.014806,0.059861,0.017314,0.003372,0.000858,0.007753,-0.043868,-0.025793,0.000223,-0.028959,-0.041014,-0.006300,0.009796,0.024929) * L5_4 + mat4(0.249876,0.000899,0.005361,-0.011025,-0.027203,-0.036903,0.002497,-0.038200,0.545115,-0.037467,-0.000983,-0.142704,0.090968,0.030728,-0.001431,0.055848) * L5_5 + mat4(0.001166,-0.088091,-0.004613,0.027044,-0.068275,-0.009930,-0.000545,-0.044091,0.077283,-0.004538,0.005314,0.009060,-0.366269,0.060642,-0.002211,0.031583) * L5_6 + mat4(-0.041142,-0.013262,0.006961,-0.045076,-0.125906,0.149123,0.002193,0.150791,-0.150899,0.114860,0.001503,-0.097797,0.039755,0.019015,0.008303,-0.022389) * L5_7 + mat4(0.023683,0.279323,-0.020556,0.241018,0.163487,-0.073794,0.007478,-0.005714,0.285455,0.348675,0.000131,0.071454,-0.212709,0.006025,0.009729,0.016060) * L5_8 + mat4(-0.221521,0.069039,-0.024856,0.066813,-0.094952,0.017129,0.007152,-0.028317,0.055109,-0.016928,0.000705,0.004428,-0.005349,0.109626,-0.008456,-0.042710) * L5_9 + mat4(0.112253,0.102674,-0.002039,0.090836,0.455766,-0.556976,0.024363,0.076950,0.185688,-0.036026,0.004140,-0.051706,-0.138531,-0.061368,0.013169,-0.050304) * L5_10 + mat4(-0.043734,-0.018184,0.008612,-0.543968,0.016003,-0.008825,-0.003966,0.019410,0.017960,-0.034520,-0.004599,-0.009874,-0.031172,0.019107,-0.009255,0.018996) * L5_11 + mat4(-0.110520,0.009048,0.004454,0.003348,0.051534,0.006034,-0.002469,-0.023700,0.046801,-0.057445,0.001592,0.000757,-0.095448,-0.012227,0.016747,0.010570) * L5_12 + mat4(0.133757,0.055811,-0.003668,0.001772,-0.114073,0.042707,-0.000078,-0.058058,-0.117110,0.008255,-0.000398,0.004181,-0.236453,0.000759,-0.019129,-0.138569) * L5_13 + mat4(0.093682,0.013842,0.009277,0.012535,-0.022445,0.025166,0.013919,0.152252,0.098528,0.050439,-0.001798,0.020865,0.169386,-0.015480,0.001258,0.007892) * L5_14 + mat4(-0.126031,-0.013284,0.005670,-0.021858,0.239484,0.098533,-0.001881,-0.131771,0.196199,0.030203,0.008277,0.020154,0.053817,0.035912,0.011231,0.046546) * L5_15 + vec4(-0.705860,-1.994061,-0.005176,0.627683)));\nvec4 L6_3 = sin((mat4(-0.011344,0.005378,-0.013609,-0.117985,0.015326,-0.022620,-0.013801,-0.003301,-0.000329,0.029823,-0.031565,0.014637,0.009308,-0.029554,-0.023548,0.022194) * L5_0 + mat4(-0.022594,0.062642,-0.069596,0.112181,-0.013304,-0.046037,0.067284,-0.212608,0.000077,0.052726,0.008619,0.271055,-0.003108,-0.224659,-0.011666,0.219417) * L5_1 + mat4(0.005045,0.112617,-0.041562,-0.336050,0.003440,0.009227,-0.047709,0.265735,-0.011713,0.082145,0.014119,0.237673,0.006940,-0.002391,-0.021501,-0.018922) * L5_2 + mat4(-0.007768,-0.005741,-0.022060,0.073859,0.002744,-0.055291,1.572541,0.546404,0.000556,0.016021,0.004448,0.038455,0.008554,-0.341592,-0.049559,-0.161680) * L5_3 + mat4(0.018525,0.004997,0.051288,-0.099550,-0.009213,0.011781,-0.036647,0.111238,0.014022,0.005842,-0.044520,0.014852,0.006447,0.027669,0.034050,-0.000234) * L5_4 + mat4(0.005906,0.019995,0.010557,0.026799,0.004156,-0.062125,0.029131,0.010527,-0.002046,0.048467,-0.122200,-0.377845,-0.003229,-0.044223,-0.029232,0.002392) * L5_5 + mat4(-0.000244,-0.178796,0.030146,0.080066,-0.000018,-0.078043,-0.009851,-0.083961,0.004796,-0.036785,0.006792,-0.085187,0.003294,0.012213,-0.110649,-0.067531) * L5_6 + mat4(0.007424,0.017886,0.009956,0.028494,0.008796,0.078658,-0.003852,-0.147471,-0.005970,-0.099289,-0.011606,-0.192941,0.003375,0.081402,-0.042172,-0.011556) * L5_7 + mat4(-0.009793,-0.025682,-0.086442,-0.477686,-0.008271,-0.077513,0.015173,-0.163642,0.012763,0.351227,-0.090490,0.258608,0.010130,-0.007032,0.001174,-0.078564) * L5_8 + mat4(0.007557,0.349847,0.046918,-0.031430,-0.003166,0.053732,0.022819,-0.017178,0.012650,-0.063517,-0.013866,0.207062,0.004355,0.037221,0.019502,0.137999) * L5_9 + mat4(0.004052,0.177875,-0.019805,-0.141327,0.004578,0.049756,-0.026195,-0.015785,0.001387,-0.020194,0.022295,0.026617,-0.021368,0.029769,-0.022275,0.246634) * L5_10 + mat4(0.019263,0.001383,-0.050756,0.245781,0.002721,0.000701,-0.001038,-0.025368,0.000593,-0.072093,-0.012130,0.126118,-0.003292,-0.018185,-0.013636,-0.018585) * L5_11 + mat4(-0.000762,0.031622,-0.006060,-0.101525,-0.002895,-0.003100,-0.023663,-0.008028,0.000469,-0.056991,-0.012161,-0.084608,-0.012661,0.036806,-0.016605,-0.206794) * L5_12 + mat4(0.005227,-0.026702,0.043050,-0.013768,-0.003125,0.046295,0.002359,-0.125213,0.009698,-0.005625,0.001460,-0.001836,0.014177,0.015482,-0.031604,-0.208099) * L5_13 + mat4(0.006374,-0.017313,-0.003736,-0.015640,0.007327,-0.253737,0.030719,0.040038,-0.002005,0.079828,0.005962,-0.074848,0.003270,0.021352,0.015228,0.035289) * L5_14 + mat4(-0.005104,0.046377,-0.021648,-0.216236,-0.014199,-0.083715,0.001256,0.213552,-0.007875,0.015112,0.018840,-0.018853,0.009154,0.141078,0.073001,0.082951) * L5_15 + vec4(-0.002091,-0.292038,1.475418,0.329258)));\nvec4 L6_4 = sin((mat4(-0.250008,0.066527,0.008642,0.120969,0.100697,0.057977,0.000809,-0.007072,-0.018409,-0.112775,-0.003734,-0.028505,0.015766,0.281061,0.003846,-0.195015) * L5_0 + mat4(-0.241795,-0.003105,-0.009828,-0.352100,0.059429,-0.186582,-0.004184,-0.085631,-0.107817,0.213031,0.000911,-0.959492,0.001637,-0.260633,-0.001881,-0.025531) * L5_1 + mat4(-0.164996,-0.250816,-0.015449,0.493971,0.064224,-0.036382,-0.009982,-0.168438,-0.130870,0.205785,-0.002244,-0.270155,0.026905,0.094438,-0.013500,-0.185930) * L5_2 + mat4(-0.076697,0.135339,-0.002726,0.065662,-0.301107,-0.561309,-0.014348,0.279550,0.096953,0.050257,-0.015617,0.132148,0.214783,0.413867,-0.000874,-0.643735) * L5_3 + mat4(-0.038391,-0.089211,0.028020,-0.124891,-0.162136,0.174614,-0.015535,-0.157352,-0.264431,0.055680,0.005972,0.070241,0.011068,0.029703,-0.003035,0.115917) * L5_4 + mat4(0.051218,0.064630,0.004114,-0.043478,0.133511,0.062389,-0.002737,-0.014632,-0.296897,0.144628,-0.024425,0.211374,0.201797,0.034956,-0.002165,0.156939) * L5_5 + mat4(0.144691,-0.032267,-0.010764,0.066984,0.022160,0.051707,-0.003287,0.136600,-0.245091,-0.000421,-0.014003,-0.018170,-0.009550,0.325580,-0.006263,0.056951) * L5_6 + mat4(0.087047,-0.167801,0.009681,0.173158,-0.022412,-0.156269,-0.011376,-0.726547,-0.341054,-0.158483,-0.014266,0.098292,0.048823,-0.187925,0.004055,0.265469) * L5_7 + mat4(-0.226274,0.085490,0.010585,-0.038257,-0.109220,-0.073658,-0.007464,0.163912,1.072415,-1.153169,-0.007519,-1.041886,0.086117,0.162492,-0.004164,-0.075299) * L5_8 + mat4(-0.196924,0.065117,0.012289,0.267684,-0.129565,-0.068516,-0.004883,0.069859,-0.011106,0.145543,0.012696,0.004606,0.209614,-0.021080,-0.000552,-0.108231) * L5_9 + mat4(0.282307,-0.353451,-0.004808,1.219151,-1.056622,0.469797,-0.001812,-1.112531,-0.122194,0.006883,0.008468,0.063244,-0.281733,-0.162602,-0.008629,-0.004739) * L5_10 + mat4(0.016420,0.230184,-0.015725,0.186802,-0.027440,0.014955,-0.002267,-0.026417,0.117436,0.160445,-0.004364,-0.069183,-0.092929,0.006947,0.009141,-0.016791) * L5_11 + mat4(0.126922,0.016616,0.001668,-0.097626,-0.019119,-0.135407,0.008632,0.054231,0.388694,-0.281234,0.002974,-0.013518,-0.048765,-0.025538,-0.003003,0.126076) * L5_12 + mat4(-0.235633,-0.343573,0.013345,-0.238015,-0.216302,0.019638,-0.004704,0.285089,-0.068060,0.028135,-0.009056,0.053485,-0.315387,0.299733,0.016028,0.134965) * L5_13 + mat4(0.162400,-0.140797,-0.002457,-0.076822,-0.152831,-0.135376,-0.005653,-0.252089,-0.115271,-0.044994,-0.014201,-0.046740,0.005298,-0.076063,0.006517,-0.009198) * L5_14 + mat4(0.011211,0.077529,-0.003904,-0.247501,0.179789,0.709145,0.001411,-0.255344,0.212432,-0.070820,-0.005903,-0.038114,-0.095490,0.282898,-0.014393,0.341452) * L5_15 + vec4(0.142820,0.460514,-0.011164,0.293693)));\nvec4 L6_5 = sin((mat4(0.007633,0.020005,0.164333,0.049715,-0.040321,-0.065302,-0.064441,-0.018417,0.196417,-0.013139,0.068520,-0.031660,0.231782,0.093947,0.323688,-0.042261) * L5_0 + mat4(0.008498,-0.055329,0.051484,0.056686,0.276888,-0.068733,-0.130516,0.099947,-0.171921,-0.002264,0.142890,0.078030,-0.107210,-0.023885,-0.422498,-0.277435) * L5_1 + mat4(-0.403526,0.148133,0.045734,0.289448,-0.265211,0.062606,-0.029764,0.055476,-0.059343,-0.034720,0.066951,0.331157,0.047398,-0.108359,0.051130,-0.003313) * L5_2 + mat4(-0.082622,0.047757,-0.027528,-0.122123,0.051943,0.086699,-0.638342,0.302727,-0.080624,-0.086303,-0.097245,0.119849,-0.000745,-0.067480,-0.200830,-0.351944) * L5_3 + mat4(-0.141082,0.130895,-0.258530,-0.105666,0.044481,0.090123,0.144869,-0.042112,0.035574,-0.062322,0.042364,0.057082,0.052953,0.007025,0.055213,-0.038180) * L5_4 + mat4(0.007918,0.026387,-0.044936,-0.112318,0.008860,-0.006771,-0.052874,-0.027056,-0.172472,0.078235,0.237598,-0.328982,0.037187,0.097552,-0.175689,-0.076303) * L5_5 + mat4(0.093361,-0.135546,-0.135951,0.002954,-0.024940,-0.060288,-0.002604,-0.038857,-0.006787,0.029205,-0.066662,0.003254,-0.023656,-0.093279,0.244273,-0.086864) * L5_6 + mat4(-0.036408,0.035528,0.140451,-0.089737,0.024406,0.051855,-1.112880,-0.110565,0.054008,-0.105674,0.186736,0.111596,0.078026,0.007520,-0.196621,0.029850) * L5_7 + mat4(-0.199589,0.537382,-0.169768,0.144035,0.197044,0.179758,-0.321445,-0.316619,-0.340608,-0.037245,-0.623268,0.018635,-0.145260,-0.045833,0.131096,-0.093422) * L5_8 + mat4(-0.045650,-0.070698,0.335322,0.350428,-0.060610,0.004543,0.009143,0.022698,-0.076343,0.006651,0.095177,-0.060936,0.193377,-0.037788,0.067276,0.033584) * L5_9 + mat4(0.192221,-0.001392,1.178203,0.058173,0.263637,0.062084,0.568019,0.854367,0.143856,0.020667,-0.002789,-0.075779,0.163561,0.107165,-0.082319,0.064756) * L5_10 + mat4(0.185613,-0.312061,0.397465,-0.092591,-0.014906,0.008273,0.042525,-0.010248,-0.043041,0.049644,0.153601,-0.085654,-0.017686,0.016221,0.005474,-0.040648) * L5_11 + mat4(0.004377,-0.012993,0.177371,0.014742,-0.053222,-0.025476,-0.028301,0.020140,-0.075596,0.030608,-0.071287,-0.036424,-0.173291,-0.075972,0.015275,-0.032668) * L5_12 + mat4(-0.001519,-0.165831,0.089144,0.302085,-0.144173,0.013840,-0.180836,0.038202,-0.067074,-0.049532,0.056596,-0.008687,0.195372,-0.055334,-0.113627,0.033909) * L5_13 + mat4(0.100172,0.054478,-0.098478,-0.060480,0.080550,0.213009,0.287600,-0.429372,-0.001554,0.055054,0.335994,0.004832,-0.074674,0.032162,-0.008638,0.007067) * L5_14 + mat4(0.185181,-0.036763,0.033181,-0.004434,0.012289,-0.057110,0.303959,-0.246915,-0.025466,0.040725,0.002542,-0.070576,0.102273,0.020213,0.388131,0.172169) * L5_15 + vec4(0.803770,-0.146557,0.222925,0.970091)));\nvec4 L6_6 = sin((mat4(-0.064656,-0.019110,0.073435,-0.061618,-0.003394,0.059371,-0.015905,0.062617,0.052252,-0.046297,0.002803,0.010131,-0.259475,0.055063,0.039411,0.007961) * L5_0 + mat4(0.049591,-0.112065,-0.081059,0.013040,-0.037426,0.026840,0.062768,-0.011810,-0.114283,-0.048585,-0.055269,-0.134132,0.302156,0.021251,-0.050585,0.191744) * L5_1 + mat4(-0.184394,0.119754,0.192204,0.001263,-0.056275,0.062439,0.014328,-0.045709,-0.161716,0.107713,0.198539,0.123661,0.151703,-0.024446,0.019474,0.081453) * L5_2 + mat4(-0.160968,0.084903,-0.061097,-0.065712,0.451289,-0.027976,0.098759,0.214655,-0.121383,0.110119,0.017343,-0.029058,0.317183,0.051434,-0.445073,-0.027706) * L5_3 + mat4(0.088743,-0.085425,-0.026355,-0.147671,0.012810,0.058056,-0.043735,-0.068385,-0.009853,-0.030656,0.008606,-0.002160,-0.088588,-0.010144,-0.024361,0.044957) * L5_4 + mat4(0.084704,0.023079,0.014853,0.033344,0.108752,-0.013436,0.141797,0.049993,-0.063538,-0.132402,-0.603804,-0.167076,0.048818,-0.004228,-0.198837,-0.139215) * L5_5 + mat4(0.210644,-0.126013,0.123773,0.193980,0.129639,-0.012057,0.027760,0.015005,-0.023422,-0.021265,0.058608,-0.031773,0.136082,-0.027691,-0.092753,0.063033) * L5_6 + mat4(0.120496,-0.148227,-0.020199,-0.074375,0.369850,-0.066252,-0.314873,0.008063,-0.032887,0.022050,0.111250,0.068806,-0.082429,0.032112,-0.100044,-0.012156) * L5_7 + mat4(0.293624,-0.153996,-0.047979,-0.366982,0.106965,-0.024181,-0.038323,-0.153484,0.539630,-0.058311,-0.654979,-0.042587,-0.043394,0.082171,-0.007184,0.027560) * L5_8 + mat4(-0.441464,0.012837,0.117570,0.129611,-0.228759,-0.046722,-0.055078,-0.043631,0.117291,0.018090,-0.055389,-0.008619,0.069893,-0.071354,-0.137165,0.010839) * L5_9 + mat4(-0.225564,0.106621,-0.318407,0.165174,-0.282229,-0.156480,0.688039,0.093811,-0.109527,-0.009028,0.022584,-0.020605,-0.024645,0.108679,0.040559,0.039695) * L5_10 + mat4(-0.514867,0.327134,-0.119779,-0.083812,0.058593,-0.025880,0.006835,-0.008884,0.201123,-0.090019,0.014976,-0.004986,0.073597,0.014489,0.008189,0.027789) * L5_11 + mat4(-0.021678,0.038486,-0.046723,0.060950,-0.096332,0.039315,0.011822,-0.056465,0.104399,0.012478,-0.030618,0.026710,0.010390,0.016498,-0.077173,0.007840) * L5_12 + mat4(-0.139056,0.196988,-0.079622,0.092350,-0.400977,-0.007493,-0.009657,-0.069479,-0.035433,-0.046943,-0.019346,0.026259,-0.159977,-0.120337,0.022348,-0.040559) * L5_13 + mat4(-0.031160,0.000217,-0.057408,-0.060827,-0.023321,0.013405,-0.088449,-0.042157,-0.119396,-0.038085,-0.093472,-0.109158,0.090330,0.053891,-0.013159,0.006873) * L5_14 + mat4(-0.093171,0.030119,-0.015658,0.090727,0.116529,0.000172,0.038812,-0.081062,-0.055667,-0.017562,-0.010735,0.015168,0.057619,0.049497,-0.146364,0.053313) * L5_15 + vec4(-0.584293,0.815132,-1.891414,0.924093)));\nvec4 L6_7 = sin((mat4(0.010310,-0.302539,-0.162963,-0.003739,0.010113,0.064548,-0.016706,-0.007584,0.005431,-0.035681,0.017582,-0.005300,0.011837,-0.264210,0.157409,-0.005857) * L5_0 + mat4(-0.013590,0.345465,0.033628,-0.011940,0.007334,-0.551054,-0.010586,0.016885,-0.004922,-0.410403,0.104502,-0.001441,-0.012752,0.451896,0.110454,0.015331) * L5_1 + mat4(-0.008523,0.171829,-0.000517,-0.003923,0.018304,-0.221371,-0.164044,0.002102,0.004909,-0.130422,-0.010862,0.000895,-0.006706,0.234100,-0.071834,-0.002150) * L5_2 + mat4(-0.011069,0.164837,-0.066542,-0.015399,-0.004313,0.259109,-0.209025,-0.011513,-0.010405,0.142949,-0.240827,-0.006212,0.006380,0.204120,0.107682,0.004732) * L5_3 + mat4(0.033673,0.059021,0.098825,-0.001044,-0.017251,0.297656,0.229404,0.007135,0.007537,-0.083204,-0.113137,0.009726,0.007492,0.071847,0.010458,-0.009117) * L5_4 + mat4(0.001353,0.115951,0.051777,0.002996,0.003567,-0.247526,0.028664,0.004617,0.009646,0.043417,0.071357,0.012765,-0.002147,0.012774,0.063412,-0.011644) * L5_5 + mat4(-0.004334,-0.690807,-0.177140,0.007777,0.004195,-0.188998,-0.036622,0.001285,0.000603,-0.208209,0.018861,0.011600,-0.007190,-0.052388,-0.060931,0.004599) * L5_6 + mat4(-0.007307,0.162316,0.101054,-0.004862,0.001956,0.156861,-0.184666,0.000073,0.004992,-0.159223,-0.139411,0.007279,-0.000362,0.281031,0.069536,-0.001635) * L5_7 + mat4(0.000986,0.257930,0.237730,-0.014260,-0.012513,-0.047016,0.170917,-0.009873,-0.001216,0.004055,-0.035206,-0.004092,-0.010853,0.274168,-0.146089,0.005758) * L5_8 + mat4(0.007222,-0.105902,0.024472,-0.009917,-0.011332,0.110989,0.059721,0.012997,-0.006349,0.056259,-0.063017,-0.010696,0.002435,0.303834,0.026528,-0.002763) * L5_9 + mat4(0.029152,0.584364,0.162626,0.018909,-0.013622,0.290230,0.159650,-0.006605,-0.013898,-0.251907,0.189471,-0.013712,-0.000279,-0.005389,0.153841,0.009169) * L5_10 + mat4(0.009635,-0.755351,-0.088957,0.008692,0.001923,-0.068316,-0.004391,-0.004917,0.012453,0.196553,0.039832,0.010587,0.008826,-0.002191,0.019844,-0.004377) * L5_11 + mat4(0.008566,-0.051411,0.136339,0.000528,-0.007491,-0.168396,0.021544,0.004238,-0.004853,-0.168004,0.068962,0.003525,0.005873,0.221198,-0.090616,0.001382) * L5_12 + mat4(0.000694,-0.241949,-0.024486,0.008815,0.008563,-0.115023,-0.167073,-0.005194,0.010866,0.027577,0.044289,-0.000041,-0.009565,-0.295320,0.223447,-0.024479) * L5_13 + mat4(0.003715,-0.050120,0.037635,0.006148,0.003664,0.048954,-0.057919,0.003709,0.004416,0.260963,0.056911,0.015523,0.003353,0.043337,0.023395,0.004032) * L5_14 + mat4(-0.023189,0.354848,-0.173936,-0.001736,-0.004717,0.094733,0.013819,-0.017400,-0.006509,-0.118623,0.020897,-0.004619,-0.001721,0.070350,-0.082807,0.022192) * L5_15 + vec4(-0.003448,-0.237199,-0.399582,0.011651)));\nvec4 L6_8 = sin((mat4(-0.003526,0.050480,-0.007507,-0.027833,-0.013994,-0.010376,0.001464,-0.016236,0.007088,0.008665,-0.040116,-0.028676,0.004656,0.090900,0.042754,-0.027785) * L5_0 + mat4(0.018054,-0.040388,0.007080,-0.027689,0.007129,0.147286,-0.142299,-0.014723,0.020955,-0.130275,0.169370,0.043626,0.008462,0.134126,0.168288,-0.052572) * L5_1 + mat4(-0.009333,-0.138748,0.320480,-0.073479,0.010892,-0.260983,0.162724,0.088287,-0.006961,0.172586,0.160833,0.090546,-0.015574,0.064636,-0.018939,0.011370) * L5_2 + mat4(-0.001723,-0.168529,0.046976,-0.034784,-0.006263,-0.414277,-0.165068,-0.075533,0.002562,-0.068189,0.062959,-0.006116,-0.021744,0.012338,0.020441,0.024212) * L5_3 + mat4(-0.001796,-0.021947,-0.002896,0.022909,-0.005716,-0.027921,-0.020691,0.023883,0.012366,-0.027513,-0.011883,-0.025787,-0.007207,0.073024,-0.082290,0.008647) * L5_4 + mat4(-0.015629,-0.046947,0.032910,-0.004069,0.014361,-0.044177,0.059397,0.016141,0.000091,0.079633,-0.070885,-0.208487,-0.003878,-0.020983,0.004868,-0.043552) * L5_5 + mat4(0.000985,0.031635,0.050045,-0.053215,-0.003839,0.076254,0.050653,-0.026205,-0.004989,0.072138,-0.003678,0.009258,-0.019465,0.035337,0.028187,-0.005127) * L5_6 + mat4(-0.005125,-0.085759,-0.048979,-0.013443,0.014206,-0.095859,0.040654,1.538702,-0.008600,-0.047743,0.032357,0.048539,-0.013719,0.043778,-0.057955,0.070423) * L5_7 + mat4(0.008163,0.253954,-0.042142,0.161481,0.015384,0.180009,-0.098770,-0.074082,-0.004723,0.298079,-0.007779,-0.006941,-0.006252,-0.063841,0.046912,-0.007374) * L5_8 + mat4(0.013967,-0.077862,0.098583,0.079815,0.004682,-0.009974,-0.077194,-0.043806,0.011833,0.024655,0.046303,-0.021582,-0.005105,0.138889,-0.068243,-0.038653) * L5_9 + mat4(-0.016335,-0.013365,-0.498434,0.152053,-0.006474,-0.091751,0.047993,-0.103959,0.017181,0.082645,-0.155419,-0.050658,-0.008841,-0.008481,0.045920,-0.007475) * L5_10 + mat4(-0.019396,0.068892,-0.074198,0.007229,0.005131,0.028465,0.011905,-0.009723,-0.014058,-0.067510,0.035492,-0.032869,0.012922,0.016734,-0.003783,-0.004926) * L5_11 + mat4(0.003224,0.079084,0.046635,-0.022533,0.006443,0.004846,-0.042747,-0.009716,0.002884,0.051682,0.068142,0.024629,-0.022418,0.005163,0.080365,-0.023057) * L5_12 + mat4(0.020269,0.213264,-0.013756,-0.046204,-0.008945,0.096595,0.088449,0.062401,-0.007220,-0.045843,-0.009071,-0.007681,0.019809,0.199343,-0.209773,0.021148) * L5_13 + mat4(-0.010711,0.046375,-0.033170,0.012235,-0.002154,-0.143101,0.086674,-0.007641,-0.009450,-0.026155,-0.006492,0.016572,-0.000423,-0.074118,0.026824,0.073576) * L5_14 + mat4(-0.010217,-0.120839,0.136677,-0.046102,-0.005740,-0.037280,0.015651,0.106292,-0.001992,0.047648,-0.022627,0.013731,-0.018218,0.061804,0.122554,0.006312) * L5_15 + vec4(-0.003034,0.203679,0.527962,-1.574040)));\nvec4 L6_9 = sin((mat4(0.069197,0.055774,0.010731,-0.010848,-0.013178,-0.037803,-0.002144,0.015829,-0.001320,0.008393,-0.004201,0.008036,-0.076545,-0.021721,-0.009304,0.000743) * L5_0 + mat4(0.000427,-0.070826,0.010883,-0.013190,-0.011996,-0.125028,-0.012636,-0.007067,0.157667,0.044461,-0.019703,0.004199,-0.097343,0.000462,-0.004243,-0.008965) * L5_1 + mat4(-0.275051,0.312768,-0.008791,-0.000833,-0.050403,0.020448,-0.011832,0.012086,-0.025894,0.003117,0.014694,-0.014068,0.010180,0.033678,-0.012047,0.009242) * L5_2 + mat4(0.024222,-0.032785,0.010912,0.004189,-0.224827,-0.685058,-0.020859,0.017853,0.013285,-0.056268,0.001536,0.010674,0.004042,0.011377,-0.010401,0.018052) * L5_3 + mat4(-0.059611,-0.103801,-0.004631,-0.022690,0.003410,0.030059,0.007054,-0.004080,0.021204,-0.002378,-0.006951,-0.006702,-0.015525,0.030507,0.001235,0.022367) * L5_4 + mat4(0.002548,-0.015703,0.001255,-0.005779,0.030600,0.029514,0.001659,0.006801,0.163014,0.059961,-0.019707,0.015547,-0.072185,-0.019999,-0.005364,0.008076) * L5_5 + mat4(-0.029837,0.030957,-0.004999,0.004665,0.042324,-0.005769,0.009276,-0.014556,-0.024825,0.050239,-0.012709,0.010865,-0.060296,-0.129798,0.000756,0.007160) * L5_6 + mat4(0.042619,0.057303,-0.006069,0.003722,-0.173494,-0.039613,-0.013276,0.004692,0.090141,-0.086690,-0.000662,-0.008295,0.030925,-0.005203,0.006027,-0.001203) * L5_7 + mat4(-0.238467,0.154335,0.009182,-0.005345,0.011941,0.083138,0.003520,0.010142,-0.077921,0.142533,-0.011331,0.004165,-0.023785,0.057472,0.007800,-0.008860) * L5_8 + mat4(-0.069975,0.026540,-0.017761,0.004903,0.027117,-0.034937,-0.019866,0.000913,-0.005998,-0.020011,0.015738,-0.007474,0.042387,-0.004198,-0.010525,0.003974) * L5_9 + mat4(-0.083848,0.008817,-0.017123,0.004874,-0.070250,-0.274853,-0.005982,0.022330,0.051890,0.001886,0.007473,-0.000250,0.050775,-0.051713,0.022920,-0.004646) * L5_10 + mat4(0.540377,-0.018300,-0.011875,-0.007580,-0.019717,0.034468,-0.004310,0.002851,-0.006913,0.033645,0.003397,-0.016103,-0.032682,0.030780,0.006983,-0.005857) * L5_11 + mat4(-0.001668,0.010911,0.025238,-0.008563,0.042052,-0.027626,-0.006948,-0.001025,-0.013233,0.028909,-0.005637,0.007308,-0.005338,-0.005178,0.014588,0.008680) * L5_12 + mat4(-0.006359,-0.109325,0.011402,-0.005841,0.063058,-0.012878,-0.012374,0.012769,0.017102,-0.024193,0.004449,0.010818,0.133974,-0.055954,0.007615,-0.005793) * L5_13 + mat4(-0.010021,-0.021257,-0.006483,0.003710,-0.115029,0.020751,-0.010761,0.005838,-0.010493,0.002528,-0.001436,0.002176,-0.031975,-0.007164,0.004910,-0.005472) * L5_14 + mat4(-0.013840,0.064093,0.015292,0.003149,0.110760,-0.066899,0.010769,0.003279,-0.008447,-0.023067,-0.004817,0.001305,-0.035900,0.005897,-0.013790,0.008979) * L5_15 + vec4(-0.641499,0.648561,-0.011413,0.011150)));\nvec4 L6_10 = sin((mat4(0.028037,-0.000203,-0.000623,0.008111,-0.003410,0.010257,0.005508,-0.011158,-0.040503,0.012388,-0.010122,-0.004050,-0.020398,0.001911,0.061246,-0.000038) * L5_0 + mat4(-0.016762,-0.027375,0.016286,0.021774,-0.047754,0.008013,0.033264,-0.009640,0.017503,-0.013474,-0.049223,0.001814,-0.055775,0.011801,0.129243,0.008482) * L5_1 + mat4(-0.015808,-0.000272,0.539128,0.012968,-0.000595,0.009670,-0.013439,0.019712,0.020335,-0.000656,0.079847,-0.001071,0.044353,0.000849,-0.025555,-0.001578) * L5_2 + mat4(-0.012692,-0.010995,0.023917,0.004807,0.041394,-0.006489,0.703290,0.003235,-0.001828,-0.023487,0.041914,0.000636,-0.001488,0.026987,-0.276742,-0.016137) * L5_3 + mat4(-0.021284,0.009946,-0.045081,-0.008056,0.016192,-0.009043,0.001488,-0.003138,0.018224,0.003102,0.034765,0.001060,-0.021047,-0.002490,-0.005574,-0.016384) * L5_4 + mat4(0.011524,0.010835,0.011596,-0.022237,0.048113,0.003662,0.001949,0.009734,0.098062,0.009705,-0.018675,0.004796,-0.002179,0.001667,0.036075,-0.026196) * L5_5 + mat4(0.021124,-0.002998,0.105611,0.000663,0.029996,0.002634,-0.033077,0.020246,0.001849,0.004102,0.033769,0.003952,0.089416,0.000029,-0.038613,0.008658) * L5_6 + mat4(-0.004775,-0.004542,-0.009916,-0.004499,0.021884,0.002668,0.063624,0.001356,0.019299,0.004954,-0.193541,0.008709,-0.038289,-0.013903,-0.113663,-0.001602) * L5_7 + mat4(0.158650,-0.012198,0.018982,0.007856,-0.004126,-0.016542,0.039850,0.011330,-0.124947,0.012275,-0.325684,-0.011018,0.004438,-0.003924,0.035419,0.003159) * L5_8 + mat4(-0.022716,0.008489,-0.036331,-0.012076,-0.024131,0.002307,-0.063694,0.002908,0.053915,-0.009133,0.065337,0.003811,0.024064,-0.006390,-0.135911,0.002460) * L5_9 + mat4(-0.124766,0.025356,-0.064775,-0.007081,0.129804,0.017340,0.629839,-0.014077,-0.026949,-0.002389,0.029528,-0.002793,-0.049861,-0.005068,-0.048834,0.007271) * L5_10 + mat4(0.037006,0.008888,-0.545382,0.003239,0.019332,-0.003395,0.022839,0.005573,0.059538,0.003231,0.030218,0.001062,0.014095,0.004540,-0.017841,-0.005336) * L5_11 + mat4(-0.012368,0.005558,0.045264,0.016077,-0.040477,-0.011926,-0.013673,-0.008793,-0.050758,-0.009284,0.069208,-0.003002,0.017184,0.000230,-0.029897,-0.022145) * L5_12 + mat4(-0.108753,0.000413,0.015893,0.015135,-0.048426,0.008075,-0.065727,-0.019384,0.021702,-0.002643,-0.034006,-0.005513,0.049656,-0.007505,-0.127956,0.006722) * L5_13 + mat4(-0.069492,-0.002654,0.048104,0.008949,-0.090872,0.002930,0.073010,0.000609,-0.045935,0.013355,-0.033454,-0.001521,0.004411,-0.007261,-0.003571,-0.000995) * L5_14 + mat4(-0.089193,-0.005088,0.026822,-0.002739,0.155753,-0.004487,-0.167424,0.002105,-0.017416,-0.005058,0.018240,-0.000059,0.191616,0.015478,-0.015352,-0.003984) * L5_15 + vec4(0.044593,3.148004,-0.532736,-0.000851)));\nvec4 L6_11 = sin((mat4(-0.003946,0.063862,-0.002957,0.012190,-0.001247,0.031634,-0.022155,0.014736,-0.002581,0.173473,-0.014747,-0.012641,-0.002511,0.294533,-0.007167,-0.000286) * L5_0 + mat4(-0.000529,0.004539,0.004744,0.001040,0.000677,0.116685,-0.001955,-0.007197,-0.017307,0.533498,-0.010429,-0.018998,-0.005502,-0.005793,-0.015438,0.001948) * L5_1 + mat4(-0.006793,-0.633361,0.004927,-0.009680,-0.005491,0.183660,-0.001016,-0.020221,0.006963,-0.016389,0.007056,0.001382,-0.017203,0.020674,0.000403,-0.011734) * L5_2 + mat4(0.000049,0.168034,0.000374,-0.004014,-0.026522,-0.022670,0.001313,-0.003931,-0.014133,0.103310,0.004511,0.007255,-0.003717,0.453939,-0.021550,0.011403) * L5_3 + mat4(-0.001574,-0.204509,-0.007541,0.001168,0.005456,-0.095675,-0.002325,-0.004946,0.000613,0.001644,-0.000887,-0.007221,-0.003458,-0.004625,-0.012866,0.019887) * L5_4 + mat4(0.005425,-0.096472,0.000536,-0.012768,-0.004436,-0.026876,-0.012266,0.006367,-0.029431,0.124009,-0.002892,-0.018851,0.013614,-0.133938,-0.006790,-0.012226) * L5_5 + mat4(-0.004396,0.195522,0.004927,-0.005225,0.011254,0.089090,0.012341,0.000467,-0.003213,-0.021591,-0.000903,0.004833,-0.015066,0.113225,0.010917,-0.004395) * L5_6 + mat4(-0.000844,-0.047959,-0.002551,0.004947,0.006132,0.104408,-0.005405,-0.009661,0.007585,0.078200,-0.016383,0.005601,-0.017502,-0.171755,0.004639,-0.001503) * L5_7 + mat4(-0.012473,-0.376886,-0.006272,-0.000125,0.002089,0.050892,0.002213,-0.003614,0.008467,0.192123,-0.001649,0.019457,0.010464,-0.082439,0.005556,0.011871) * L5_8 + mat4(0.000040,-0.459445,-0.009949,-0.000863,-0.006417,0.000822,-0.007556,-0.009602,0.000142,0.075495,-0.000324,-0.009018,-0.006914,-0.076010,0.014959,-0.005442) * L5_9 + mat4(-0.022385,1.189124,-0.022496,0.015704,0.006826,-0.345776,-0.007013,0.017032,0.015543,0.070001,-0.010219,-0.010930,0.007031,-0.164347,0.009631,0.009545) * L5_10 + mat4(-0.026209,0.624304,-0.008794,0.012033,-0.000495,0.051192,0.006375,-0.000618,0.002429,0.261455,0.015346,-0.004744,-0.000043,-0.060936,-0.005799,-0.016332) * L5_11 + mat4(-0.000826,0.013478,0.001885,0.017086,-0.013201,0.091720,0.008087,-0.011205,-0.010773,0.058258,0.002778,-0.012842,0.003420,-0.156738,-0.005537,0.013196) * L5_12 + mat4(0.001046,-0.083761,0.012870,-0.000533,0.001372,-0.082281,-0.006149,0.022554,0.001633,0.032261,-0.001543,0.017930,-0.003311,-0.123508,0.002742,-0.015540) * L5_13 + mat4(0.001251,0.031088,0.007752,0.011460,-0.021569,0.476409,-0.015920,0.019146,0.003827,-0.135386,0.009324,-0.001037,-0.007467,-0.058108,0.005533,0.001701) * L5_14 + mat4(0.007396,-0.193683,0.022572,0.010114,0.012319,0.709994,0.010851,0.001688,0.002386,0.051350,-0.005271,0.014475,-0.006815,0.041947,-0.014225,0.013480) * L5_15 + vec4(-0.005873,-0.445841,0.007942,-0.007450)));\nvec4 L6_12 = sin((mat4(0.039485,-0.001706,-0.027907,0.140543,-0.019598,-0.010678,-0.091577,0.060785,0.050574,-0.007349,0.103857,-0.014117,-0.065495,0.000200,-0.099900,-0.076707) * L5_0 + mat4(0.035454,0.011811,0.139529,-0.044756,0.027854,-0.006068,0.142956,-0.072272,0.113314,-0.004126,-0.125097,0.199492,-0.022237,-0.003280,-0.633163,-0.214881) * L5_1 + mat4(0.222581,0.007238,0.131761,0.030205,-0.133057,0.005108,0.796420,0.120560,0.019172,-0.003724,0.204484,0.212387,0.017780,-0.010877,-0.151796,-0.036596) * L5_2 + mat4(0.024648,0.000632,0.283303,-0.019693,0.373514,0.001227,-0.320303,0.551869,0.003641,0.002727,0.149667,0.051574,-0.291642,-0.017285,0.122198,0.842003) * L5_3 + mat4(-0.052535,-0.009834,0.144786,0.025001,-0.049217,-0.000908,0.081411,0.142934,0.028938,0.001244,0.120315,0.022163,-0.010058,-0.009327,-0.019313,0.063382) * L5_4 + mat4(0.032114,-0.013516,0.077526,-0.000672,0.030392,0.013728,-0.002417,-0.071541,0.036842,0.000623,0.496868,-0.208104,-0.085397,-0.000995,0.027324,-0.041209) * L5_5 + mat4(0.070085,-0.002168,-0.097469,0.134638,0.015618,0.003461,0.036467,0.043092,-0.006213,0.005737,0.088440,0.096022,-0.077930,0.007062,0.446011,-0.224221) * L5_6 + mat4(0.067530,0.004860,-0.161968,-0.019250,-0.104978,0.000796,0.326355,-0.351284,-0.035073,-0.010075,0.074435,-0.264908,-0.078122,0.000180,0.150101,-0.221351) * L5_7 + mat4(-0.155477,-0.009706,0.457763,-0.099938,0.026230,-0.000278,-0.207106,0.066546,1.030759,0.000993,-0.449631,0.238235,-0.023321,0.009653,0.136041,0.005146) * L5_8 + mat4(-0.085866,-0.012428,0.260056,-0.067841,-0.034546,-0.007212,0.074428,0.021723,0.041802,0.008115,-0.238462,0.025107,-0.105544,0.007685,-0.056395,-0.179126) * L5_9 + mat4(-0.145756,-0.012658,-0.057695,-0.224073,0.405292,-0.001859,0.415902,0.206152,0.038100,-0.000251,-0.116310,-0.013219,0.076161,0.012703,-0.147489,0.190109) * L5_10 + mat4(-0.016168,-0.012620,-0.089170,-0.026666,0.047150,-0.004973,-0.090116,0.010009,0.007001,-0.005844,-0.236310,0.059812,-0.040745,0.000958,0.114246,-0.095073) * L5_11 + mat4(0.006150,0.010275,-0.071913,-0.026949,0.001794,-0.006340,-0.087260,0.086918,0.066964,0.003261,-0.052665,0.069388,-0.005969,-0.008289,-0.264475,-0.018521) * L5_12 + mat4(-0.026715,0.003771,0.212844,0.219272,-0.069741,-0.002138,0.150568,-0.130624,0.003846,-0.011640,-0.021696,0.007435,-0.074429,0.014476,-0.205397,0.031935) * L5_13 + mat4(0.040907,0.000274,0.112397,-0.086977,-0.093364,-0.021207,-0.135921,-0.390170,-0.095479,-0.002261,-0.029382,-0.331722,0.009909,-0.005276,0.340920,-0.044585) * L5_14 + mat4(-0.047244,0.011653,0.249199,-0.079194,0.006835,0.013183,-0.201478,0.214826,0.016631,0.001337,-0.015257,-0.093845,0.013168,-0.008412,-0.265408,-0.058322) * L5_15 + vec4(0.445648,0.011474,0.556906,0.679385)));\nvec4 L6_13 = sin((mat4(0.002449,0.006729,-0.070587,-0.009010,0.004504,-0.005216,0.069383,-0.000997,0.000766,-0.009590,-0.015243,0.007459,0.008524,0.002008,-0.003508,0.007033) * L5_0 + mat4(-0.018991,0.023111,-0.017054,-0.017641,0.001074,-0.002620,0.004210,-0.007109,-0.015437,0.005346,-0.211498,0.002878,-0.003421,-0.017580,0.117619,-0.006531) * L5_1 + mat4(-0.004419,-0.009606,-0.417442,0.006458,0.022219,-0.004889,0.097543,-0.013014,0.005480,0.002650,-0.079864,-0.001986,-0.007903,-0.009402,-0.039628,0.000142) * L5_2 + mat4(-0.007321,-0.005937,0.121939,-0.011446,-0.002533,0.002242,0.734793,0.016714,0.000268,0.008651,0.040709,0.007630,-0.002899,-0.007565,0.383623,0.001417) * L5_3 + mat4(0.015578,0.014842,0.048803,0.007380,-0.009290,-0.000738,-0.076752,0.002222,-0.000308,0.007762,-0.053778,0.007833,-0.004385,-0.010162,0.015501,-0.006590) * L5_4 + mat4(-0.012644,-0.009096,-0.003487,-0.005394,0.010445,-0.001188,-0.039183,0.005066,-0.011316,-0.001825,-0.202050,0.018179,-0.001891,-0.016786,0.142310,0.001241) * L5_5 + mat4(-0.000373,-0.008897,-0.104736,0.008257,0.004316,0.005578,-0.014584,0.002953,-0.005294,-0.001015,-0.024364,-0.010972,-0.013819,0.006131,0.125595,-0.010010) * L5_6 + mat4(0.004504,-0.009824,-0.101086,-0.019871,0.006335,-0.020096,0.231758,0.007057,0.005104,-0.011564,0.181987,0.012432,0.002036,-0.000824,0.066718,-0.003756) * L5_7 + mat4(0.003710,0.017499,0.365424,0.002772,0.003032,-0.001455,0.041942,-0.014309,0.007575,-0.007909,0.611610,0.014879,0.004141,-0.007455,-0.008124,-0.008638) * L5_8 + mat4(0.009697,0.010451,0.055224,0.001635,-0.012099,-0.011450,-0.000604,0.002219,-0.006889,0.007987,0.001752,-0.009944,0.005258,-0.008771,0.158024,0.002459) * L5_9 + mat4(-0.001103,0.008006,0.160043,0.009009,-0.003492,-0.021043,-1.481602,-0.009863,0.004106,-0.010600,0.034605,-0.008800,-0.007667,0.011743,-0.030375,-0.008908) * L5_10 + mat4(0.013224,-0.003095,0.138124,0.007483,-0.004148,0.005524,-0.028392,-0.005059,-0.008256,0.006051,-0.050744,0.014728,-0.005453,0.010306,0.018588,0.002716) * L5_11 + mat4(0.016242,0.018510,0.042466,-0.010941,-0.000055,0.002335,-0.006992,0.001145,-0.001429,-0.000684,-0.083847,0.007787,-0.008627,-0.008290,-0.001528,-0.006937) * L5_12 + mat4(0.012693,0.000156,0.281347,-0.001258,-0.007286,-0.003525,0.067036,0.003787,0.021144,-0.006415,0.026042,0.009829,0.006979,0.023682,0.047558,0.007945) * L5_13 + mat4(0.007290,0.000706,0.005815,-0.004963,0.010309,-0.002277,0.119882,-0.003457,-0.004136,-0.010094,0.007319,0.015562,-0.004230,0.000706,0.002915,0.014070) * L5_14 + mat4(-0.018006,0.001834,0.109707,-0.005655,-0.006646,0.004927,0.057204,-0.016538,-0.002472,0.002056,0.074678,-0.011941,0.005112,-0.011041,0.081798,0.001304) * L5_15 + vec4(-0.009733,0.005257,0.523454,0.017486)));\nvec4 L6_14 = sin((mat4(-0.009703,-0.037353,-0.078461,0.026240,0.003017,-0.013238,0.004057,-0.014619,0.012271,0.002208,-0.025191,0.039593,0.013455,0.017848,-0.120315,0.081656) * L5_0 + mat4(0.001615,0.012347,0.120731,-0.187153,0.009740,0.059340,-0.183836,-0.028792,0.014584,0.173991,0.055997,0.193534,-0.014027,-0.109280,-0.130188,-0.193929) * L5_1 + mat4(-0.006541,-0.285139,-0.104980,0.439900,-0.011571,-0.130568,-0.072463,0.119130,-0.001114,-0.227591,0.193019,0.095873,0.004018,-0.021532,-0.060956,-0.115137) * L5_2 + mat4(-0.005659,0.014466,0.074838,-0.126096,0.004278,-0.337133,-0.391482,-0.077295,0.011509,-0.041164,0.003420,0.026265,0.002699,0.109123,-0.073043,-0.566126) * L5_3 + mat4(0.006025,0.056955,-0.002926,0.079603,-0.009520,0.082863,-0.087659,-0.066750,-0.015805,-0.000934,0.039965,0.165093,0.007308,0.019231,-0.035467,0.006512) * L5_4 + mat4(-0.003799,-0.022229,-0.027655,0.000674,0.011719,-0.042079,-0.049137,0.008906,0.001376,0.263207,0.080273,-0.388256,0.011531,0.070204,0.079764,0.031944) * L5_5 + mat4(0.004392,-0.150405,-0.113411,0.099739,-0.006997,0.019130,-0.032523,-0.036566,0.014918,-0.022028,-0.026629,0.016349,-0.007753,-0.069003,0.155851,0.001359) * L5_6 + mat4(-0.006272,0.102954,-0.033263,-0.021103,-0.000310,-0.132150,-0.028733,0.681112,0.007209,-0.083686,-0.006212,0.141285,0.005151,0.044231,0.072496,0.397834) * L5_7 + mat4(0.009346,-0.046033,-0.050647,0.067558,-0.003714,0.079069,-0.188568,-0.205191,0.000292,0.220754,0.126870,-0.806828,-0.007690,-0.086957,-0.160991,-0.032087) * L5_8 + mat4(0.013425,-0.058708,0.331076,0.318378,-0.002568,0.088820,0.075420,-0.077198,-0.008072,-0.009662,0.040764,-0.066678,0.001507,0.027221,-0.065102,-0.048748) * L5_9 + mat4(0.025703,-0.088429,0.109103,-0.760422,-0.003707,-0.119382,0.235620,0.100735,-0.004441,0.132737,0.094603,0.027886,-0.004144,-0.039500,0.091894,-0.066875) * L5_10 + mat4(-0.018791,0.357447,0.089506,-0.234045,-0.005416,-0.005022,-0.061045,-0.011293,-0.011925,0.000545,0.003031,-0.206573,0.009672,-0.063909,-0.006069,0.124230) * L5_11 + mat4(-0.005115,-0.036742,0.045107,-0.057414,-0.014112,0.093287,0.029739,-0.000732,-0.022341,-0.053378,0.035595,0.018728,-0.003252,0.014201,-0.209430,-0.031599) * L5_12 + mat4(-0.006123,-0.017531,0.218619,-0.024182,0.019251,0.076075,0.079527,0.340719,0.012989,0.017445,0.024655,-0.036849,-0.001110,0.189712,0.160972,0.089878) * L5_13 + mat4(-0.011240,0.049638,0.022904,0.006244,-0.003354,-0.064753,-0.475121,-0.228427,0.002077,0.073182,0.030971,0.058751,0.002053,-0.042239,0.076225,-0.032259) * L5_14 + mat4(-0.002301,-0.114336,-0.144171,-0.009373,0.018285,0.101950,-0.235690,-0.092395,0.006145,0.010056,0.016429,-0.046059,-0.000863,-0.105290,0.259983,0.209217) * L5_15 + vec4(0.012380,-1.317309,0.082385,0.701256)));\nvec4 L6_15 = sin((mat4(0.053146,0.005691,-0.015928,0.108866,-0.029683,-0.009254,0.013156,-0.097962,-0.142302,0.001997,-0.002220,-0.003456,0.051492,0.004642,0.005989,-0.357586) * L5_0 + mat4(0.119865,0.012173,-0.004267,0.187575,-0.169557,0.000454,0.001732,-0.204375,-0.088410,0.000923,0.017832,-0.136752,-0.238061,-0.008244,-0.001527,-0.212346) * L5_1 + mat4(-0.417881,0.006150,0.003886,0.350242,0.004319,-0.009545,0.012113,-0.174526,0.073262,-0.006367,-0.011240,-0.079798,-0.021646,-0.008777,0.010869,-0.066233) * L5_2 + mat4(-0.048681,0.016344,0.005424,-0.002639,-0.505356,-0.017376,0.011851,0.387527,-0.067704,-0.001211,-0.000747,-0.134281,-0.007372,-0.016799,-0.006305,-0.001686) * L5_3 + mat4(-0.083035,0.002274,-0.001690,0.021770,-0.142789,0.008014,-0.012963,0.062488,-0.031226,0.001388,-0.008282,0.005643,0.013481,-0.007682,0.014608,-0.025973) * L5_4 + mat4(-0.018654,0.016773,-0.015017,-0.041339,-0.108055,-0.007911,0.001329,0.002539,0.234764,0.002145,0.013378,0.137208,-0.031537,-0.008366,0.006391,-0.031691) * L5_5 + mat4(0.049719,-0.006594,-0.003577,-0.033323,0.061799,0.003405,-0.014094,0.067550,0.028663,-0.014115,-0.002832,0.056694,0.145880,-0.006151,0.004684,0.047908) * L5_6 + mat4(-0.096220,0.007675,0.011644,0.112851,0.229990,-0.006899,0.016310,0.066615,-0.012798,-0.012234,0.014930,0.030361,-0.191367,0.004754,0.002669,0.068580) * L5_7 + mat4(0.544756,-0.011810,0.001959,0.215522,0.114810,0.005283,0.008390,0.152344,0.513273,-0.008747,-0.014002,0.233582,0.131743,-0.024785,-0.013949,-0.038534) * L5_8 + mat4(-0.017762,-0.018422,0.008536,0.270447,0.045626,-0.005088,-0.002297,0.125972,0.058372,0.013914,-0.006247,0.003257,-0.071850,-0.011141,0.024615,0.038976) * L5_9 + mat4(0.110377,0.010019,0.007321,-0.123738,0.238646,-0.002838,-0.002465,-0.762599,-0.057808,0.004980,0.004198,0.124957,-0.081967,0.009111,-0.003934,-0.077741) * L5_10 + mat4(-0.102224,0.004316,-0.008470,-0.031774,0.034069,-0.001588,0.007314,-0.031031,-0.025769,-0.002271,-0.016601,-0.028163,0.071728,0.018377,0.006082,0.052898) * L5_11 + mat4(0.153074,0.012718,-0.021039,-0.007756,0.061598,-0.007179,0.003323,0.026554,0.198581,-0.001507,0.004767,-0.033950,0.098784,0.011424,-0.000135,0.042048) * L5_12 + mat4(0.115586,-0.006478,-0.017727,-0.004162,-0.105831,0.003146,0.003085,-0.147278,-0.006757,0.009789,-0.004253,0.124183,0.086129,-0.008372,-0.011652,0.089400) * L5_13 + mat4(0.005822,-0.001864,0.000616,-0.028170,0.052305,0.001182,-0.007306,-0.210256,0.008157,-0.012786,-0.015119,0.015841,-0.034869,0.010134,-0.003479,0.037861) * L5_14 + mat4(-0.187479,-0.005892,-0.004286,0.424870,0.314478,0.009646,0.010613,-0.011941,0.039838,0.000683,-0.009877,0.109537,0.087706,-0.007186,-0.007393,-0.048995) * L5_15 + vec4(-0.548702,-0.005922,0.013945,-0.224158)));\nvec3 F_0 = (mat4x3(-0.050535,-0.082284,-0.004164,-0.001882,-0.001069,-0.000694,0.000296,0.000253,0.000477,0.020655,0.022944,0.018785) * L6_0 + mat4x3(0.000156,-0.000014,0.000587,-0.033545,-0.024448,-0.020245,0.066703,0.002646,-0.001433,-0.000053,-0.001857,-0.001182) * L6_1 + mat4x3(0.014974,0.011566,0.009727,0.001657,-0.000894,0.002260,0.000423,-0.000349,0.000300,0.000339,0.001233,-0.000737) * L6_2 + mat4x3(-0.000131,-0.001275,-0.001236,-0.000509,-0.001610,0.000152,-0.000863,-0.000432,0.001188,0.008350,-0.043814,-0.006368) * L6_3 + mat4x3(0.008423,0.014296,0.012682,0.001201,-0.008230,0.007920,0.000336,-0.000390,0.000179,0.000359,-0.002487,-0.007246) * L6_4 + mat4x3(0.002370,0.023515,0.022971,-0.058527,0.079215,0.077928,-0.001745,-0.002456,-0.000131,-0.001119,0.006413,-0.005151) * L6_5 + mat4x3(-0.002111,0.010148,-0.003516,-0.092600,-0.084882,-0.068046,0.002575,-0.000558,0.001131,-0.141211,0.021440,0.017831) * L6_6 + mat4x3(-0.000623,-0.001211,-0.000060,0.000281,0.001329,0.001736,0.050364,-0.008278,-0.007040,-0.000151,-0.000299,0.000411) * L6_7 + mat4x3(-0.000071,-0.000464,0.000453,0.097829,0.038580,0.032941,-0.083085,0.025909,0.030248,0.001519,0.000722,0.000760) * L6_8 + mat4x3(-0.000746,-0.001439,0.001226,0.178259,0.187013,0.166716,0.001811,0.000489,0.000285,-0.000786,0.000291,-0.001493) * L6_9 + mat4x3(-0.003101,0.041172,-0.024604,0.000199,-0.000459,0.000238,-0.001186,0.000934,-0.001896,0.000156,0.000098,0.000546) * L6_10 + mat4x3(0.000974,0.001089,-0.000055,0.001241,0.001156,-0.001035,0.000321,0.000141,0.000056,0.000727,-0.000533,-0.001078) * L6_11 + mat4x3(0.000074,-0.003070,0.001484,0.000351,0.000546,0.000057,-0.007496,-0.001260,-0.002715,0.000903,0.003748,-0.000915) * L6_12 + mat4x3(0.000507,-0.000635,-0.001098,0.000061,-0.000839,-0.000085,0.000511,0.000500,0.000390,0.000058,0.000089,0.000869) * L6_13 + mat4x3(-0.000091,0.000648,0.000266,-0.079323,0.078758,0.068576,0.005793,0.002415,-0.041360,0.001413,0.001686,-0.001550) * L6_14 + mat4x3(0.021359,0.011440,0.060961,0.001542,0.000274,0.001013,-0.000939,0.000214,0.000264,-0.011827,-0.004761,0.048384) * L6_15 + vec3(-0.297091,-0.347549,-0.393614));\nreturn F_0;\n}\n\n#pragma optimize(on)\n\n\n#pragma optimize(off)\nvec3 Lightmap_Render_Floor(const vec3 view_0, const Hidden hidden)\n{\nvec4 L3_0 = hidden.H_0;\nvec4 L3_1 = hidden.H_1;\nvec4 L3_2 = hidden.H_2;\nvec4 L3_3 = hidden.H_3;\nvec4 L3_4 = hidden.H_4;\nvec4 L3_5 = hidden.H_5;\nvec4 L3_6 = hidden.H_6;\nvec4 L3_7 = hidden.H_7;\nvec4 L3_8 = sin(60.000000 * (mat3x4(-0.557366,0.001606,0.005639,-0.003925,0.082048,-0.009651,-0.021051,-0.006960,-0.145771,-0.061522,-0.105722,-0.072543) * view_0 + vec4(-0.077437,-0.033951,-0.158701,0.240558)));\nvec4 L3_9 = sin(60.000000 * (mat3x4(0.518283,-0.221484,-0.224154,-0.473139,0.118386,0.115286,0.304988,-0.177106,-0.279711,0.376640,-0.015553,0.173265) * view_0 + vec4(0.166862,-0.059847,0.093552,0.206641)));\nvec4 L3_10 = sin(60.000000 * (mat3x4(0.560785,0.865692,0.789723,-0.020277,0.403476,0.028820,0.146414,-0.069042,0.191249,0.136033,-0.141862,-0.281956) * view_0 + vec4(-0.372860,0.185215,-0.117378,-0.180266)));\nvec4 L3_11 = sin(60.000000 * (mat3x4(-0.565932,-0.761267,-0.304976,-0.004036,-0.169161,-0.189902,-0.036622,-0.020012,0.068491,-0.195130,-0.250707,-0.112909) * view_0 + vec4(0.329514,0.223788,0.023003,0.299487)));\nvec4 L3_12 = sin(60.000000 * (mat3x4(0.749649,-0.016442,-0.213504,0.682010,-0.010038,0.264151,-0.232490,0.077377,0.225025,-0.208934,0.282137,0.026721) * view_0 + vec4(0.347493,-0.145449,0.186046,-0.218902)));\nvec4 L3_13 = sin(60.000000 * (mat3x4(0.907145,0.224008,-0.569701,0.717586,-0.003940,-0.303347,0.126742,-0.046292,-0.119820,-0.021542,0.097744,0.085215) * view_0 + vec4(0.324858,0.368472,0.143421,0.185014)));\nvec4 L3_14 = sin(60.000000 * (mat3x4(0.001374,0.336960,-0.719216,0.768157,0.030913,0.053373,-0.188134,-0.088705,0.155690,0.235544,-0.318009,-0.047864) * view_0 + vec4(0.259492,-0.002828,-0.068973,0.142165)));\nvec4 L3_15 = sin(60.000000 * (mat3x4(0.008773,-0.212907,-0.011984,-0.011590,-0.005770,-0.401271,-0.851151,-0.044085,-0.008444,0.004789,-0.234110,-0.195585) * view_0 + vec4(-0.036824,0.273616,-0.255730,0.221593)));\nvec4 L4_0 = sin((mat4(0.151153,0.301680,0.056123,0.052622,0.468979,0.150769,0.046161,0.011565,-0.185399,-0.120228,-0.243103,-0.303978,-0.184231,0.366397,-0.364406,-0.341525) * L3_0 + mat4(-0.130027,-0.100660,0.150691,-0.150414,0.442317,-0.333520,-0.454243,0.110394,-0.016825,-0.069549,0.550248,-0.587567,0.067342,-0.956425,-0.419592,0.153549) * L3_1 + mat4(-0.305418,-0.216897,0.325508,-0.061775,-0.023555,-0.393292,0.254786,-0.008823,0.027722,-0.274268,-0.012451,-0.124592,0.535043,-0.180876,0.201868,-0.066014) * L3_2 + mat4(0.010635,-0.416414,-0.046400,-0.164851,-0.180237,0.242293,-0.131700,-0.104168,-0.090769,-0.257024,-0.584974,-0.286282,0.244313,-0.175107,0.067868,0.031800) * L3_3 + mat4(0.108539,-0.204163,-0.056706,0.024463,0.062212,-0.057179,-0.198612,-0.391340,-0.331143,0.536181,0.215413,-0.413063,-0.256338,-0.128231,-0.101684,0.349124) * L3_4 + mat4(0.247637,0.424067,0.085643,0.252845,-0.046791,-0.218488,0.000994,-0.098730,0.436628,0.524610,0.285713,0.087355,-0.164659,-0.343685,0.366460,-0.025651) * L3_5 + mat4(0.122376,0.075092,0.180160,-0.208877,-0.021315,-0.565238,0.228723,-0.070082,-0.145407,-0.354016,0.062059,-0.615346,-0.287989,-0.208149,0.138692,-0.390117) * L3_6 + mat4(-0.080436,0.170778,-0.128402,-0.128329,-0.148692,0.268288,0.123034,-0.164954,-0.200475,0.166853,0.315052,-0.230748,0.183974,0.283105,-0.105587,-0.009068) * L3_7 + mat4(-0.181432,-0.380690,0.041604,0.050789,0.041559,-0.312255,-0.101816,0.139446,-0.016513,0.002430,-0.017225,0.042066,0.000823,-0.016557,-0.012396,-0.000866) * L3_8 + mat4(-0.080752,-0.219958,0.095333,0.040391,-0.017132,0.016866,-0.010348,-0.003238,0.006332,-0.018852,-0.004303,0.030525,-0.049876,-0.091361,0.037607,-0.140891) * L3_9 + mat4(-0.033095,0.052254,-0.027177,-0.043160,-0.480360,0.370516,-0.138028,-0.390992,0.096046,0.125889,-0.020535,-0.144520,-0.020106,0.007740,-0.008992,0.011217) * L3_10 + mat4(0.005184,0.160599,-0.004614,-0.192511,-0.133746,-0.083638,0.033555,0.075569,-0.027105,0.054423,-0.016408,-0.014551,-0.001459,0.017564,-0.026331,-0.028313) * L3_11 + mat4(-0.210769,-0.253861,0.106791,0.109920,-0.011351,0.008768,-0.175076,0.075015,0.066854,0.056619,0.013336,0.008319,0.193484,0.085256,0.073252,0.172131) * L3_12 + mat4(0.340888,0.370641,0.011860,0.178007,-0.040083,-0.111536,0.022396,0.136667,0.006747,-0.163829,-0.065438,0.445860,-0.195198,-0.190807,0.015988,-0.084059) * L3_13 + mat4(-0.021928,-0.004951,-0.024969,0.013048,0.135917,0.238061,0.218244,-0.353621,0.048853,0.116948,-0.042001,-0.117818,0.047953,-0.042629,-0.013138,0.022860) * L3_14 + mat4(0.000078,0.359816,0.094574,-0.087602,0.001171,-0.034081,-0.005739,-0.089986,0.049971,-0.012830,0.008700,-0.025267,-0.021872,-0.019096,0.019246,0.011343) * L3_15 + vec4(0.291798,-1.126274,-0.123771,0.772939)));\nvec4 L4_1 = sin((mat4(-0.219889,-0.359221,-0.111083,0.049393,0.414855,-0.422020,-0.127544,0.487390,-0.053191,0.231919,-0.042996,0.176026,0.198404,-0.214190,-0.284738,0.039732) * L3_0 + mat4(0.019565,-0.345796,0.562659,0.055672,0.534645,0.016858,0.084972,-0.281137,0.144392,0.339437,0.697385,0.515877,0.343439,0.017667,0.102577,0.048416) * L3_1 + mat4(-0.052421,0.213330,-0.140137,-0.420806,0.385051,0.016363,0.009086,0.024185,0.398182,0.167105,0.234078,-0.194727,0.278187,0.254171,0.247881,-0.055078) * L3_2 + mat4(-0.134732,-0.504833,-0.212440,-0.224213,-0.050517,0.033824,0.166859,-0.244301,-0.253499,-0.029927,-0.574218,-0.048108,0.188789,0.200168,0.227496,-0.034144) * L3_3 + mat4(-0.063845,0.303853,0.476385,-0.065646,0.224204,0.316563,-0.356333,0.399272,0.083124,0.492848,-0.213462,0.540476,-0.066637,0.032202,-0.224490,-0.295556) * L3_4 + mat4(0.221204,0.387129,0.068193,0.318207,0.327818,-0.234016,-0.358691,0.796250,0.296118,0.130873,-0.058580,-0.353700,-0.036856,0.190607,0.261589,0.029817) * L3_5 + mat4(0.439102,-0.558505,0.237678,0.842346,0.103351,-0.121172,-0.117637,-0.045227,0.537151,0.373014,-0.080444,-0.111427,-0.024863,0.359902,0.022421,-0.209771) * L3_6 + mat4(-0.388838,-0.261236,0.064986,-0.159066,0.251550,0.124323,-0.086996,-0.059408,0.050312,0.279617,-0.149598,0.056690,-0.213439,-0.351106,0.457702,0.277482) * L3_7 + mat4(-0.125410,0.093628,-0.043203,0.376233,0.026846,-0.108820,0.060323,0.299124,-0.005848,0.006536,-0.024172,-0.001324,0.003146,0.028545,0.023785,0.006157) * L3_8 + mat4(-0.121702,0.105645,0.124782,0.130253,0.001690,0.003248,-0.017840,0.009580,0.201674,-0.086722,-0.012341,-0.003117,-0.036458,0.079225,0.175268,0.015470) * L3_9 + mat4(-0.037217,-0.013338,0.030980,-0.017786,-0.071014,0.012727,-0.091982,-0.217869,0.038101,-0.085985,0.023287,0.185780,-0.034875,-0.001310,-0.032363,0.033169) * L3_10 + mat4(0.058100,-0.037195,0.029739,0.014082,-0.010872,0.137444,0.029592,-0.154775,0.013834,0.019618,-0.057516,0.025890,-0.008300,-0.023753,0.021214,-0.010596) * L3_11 + mat4(0.037742,0.068337,0.054152,-0.537608,-0.043683,-0.001020,0.034509,-0.067774,-0.170650,-0.056901,0.109544,-0.109011,-0.025978,-0.062372,-0.108687,0.087282) * L3_12 + mat4(-0.061183,-0.067765,0.032609,0.177207,-0.047229,-0.085335,0.217177,0.021279,-0.039049,0.106466,-0.079867,-0.183632,-0.002752,-0.019665,0.096520,-0.041957) * L3_13 + mat4(-0.002865,0.009395,-0.014094,-0.013496,-0.114526,0.344270,-0.016589,-0.414287,0.057732,-0.004259,0.006945,0.041644,-0.039904,-0.049456,-0.002841,0.057210) * L3_14 + mat4(-0.021140,0.051511,-0.061374,-0.279153,0.013086,-0.062299,0.007890,0.072332,0.023036,-0.008192,0.018125,-0.006273,-0.003306,-0.004012,-0.036215,0.001045) * L3_15 + vec4(0.223636,-0.276315,-0.166776,0.997412)));\nvec4 L4_2 = sin((mat4(0.011574,0.093700,0.065656,0.070292,0.462744,0.129771,-0.561523,-0.155243,-0.175708,0.177672,-0.072531,-0.157566,0.303848,0.656200,0.392334,0.524974) * L3_0 + mat4(-0.148014,0.183566,-0.365552,-0.239685,-0.297625,-0.155106,0.033400,0.623922,-0.258031,-0.202276,0.126902,-0.128064,-0.014037,-0.361676,-0.105640,0.196490) * L3_1 + mat4(-0.070876,0.244761,-0.179311,-0.137214,-0.149594,-0.024253,0.024801,0.178515,-0.286465,0.418724,-0.280975,-0.068115,-0.244933,0.146750,-0.426429,0.128967) * L3_2 + mat4(-0.104753,-0.181030,0.433413,0.046392,-0.037392,0.485563,-0.004155,0.031319,-0.203504,0.102761,-0.081061,-0.509656,0.087712,0.230379,-0.086718,0.229981) * L3_3 + mat4(-0.093065,-0.284637,0.073901,-0.127541,-0.391303,-0.335308,0.139723,-0.390389,-0.122257,-0.093768,0.346694,-0.132205,-0.048363,-0.166512,0.123096,0.223386) * L3_4 + mat4(-0.133347,-0.219959,0.082728,-0.003649,-0.239228,0.470527,-0.562117,0.044998,0.094903,0.160840,0.001493,0.664242,-0.013166,0.032202,-0.040219,-0.058630) * L3_5 + mat4(-0.431079,-0.126011,-0.036962,0.042327,-0.110183,-0.181219,-0.032802,-0.036499,0.209546,0.173106,-0.308729,-0.271716,-0.055738,-0.036649,-0.279990,-0.179367) * L3_6 + mat4(0.046762,0.197882,-0.251554,0.000275,0.124304,0.140893,-0.004940,0.246367,-0.403211,0.024656,-0.497524,-0.593609,0.271833,-0.177716,0.289169,-0.093015) * L3_7 + mat4(-0.007861,0.142707,-0.078269,-0.043949,-0.078547,0.017711,0.103395,0.012650,0.021112,0.003749,-0.004130,0.017833,-0.005564,-0.016144,-0.009035,0.012807) * L3_8 + mat4(-0.023510,-0.029775,0.031774,0.009616,-0.003788,0.008526,-0.012632,0.018326,0.015418,-0.070420,-0.012092,-0.120678,-0.005764,0.025646,0.068271,-0.023315) * L3_9 + mat4(-0.013105,-0.008027,-0.017288,-0.004502,0.022710,0.151930,-0.178780,-0.103488,0.009212,0.182366,0.029624,0.023352,-0.001810,-0.002510,0.004391,0.021020) * L3_10 + mat4(0.016508,0.018290,0.008175,0.029112,-0.021277,0.309503,-0.106598,-0.062926,-0.031648,-0.011709,0.055283,-0.045273,0.010192,0.007163,-0.007591,0.006027) * L3_11 + mat4(-0.030418,0.276153,-0.016962,0.042583,-0.267855,0.041704,-0.118021,-0.307610,-0.117766,-0.116524,-0.002076,-0.012391,-0.020356,-0.277559,0.117642,0.067091) * L3_12 + mat4(0.076585,0.675725,-0.027460,0.074759,0.030700,-0.088035,-0.102834,0.189725,0.068321,-0.027631,0.018685,-0.083174,0.009574,0.159126,-0.134018,0.060260) * L3_13 + mat4(-0.009351,0.007535,0.003854,0.011629,-0.057798,-0.053176,0.013078,0.000538,0.029962,0.069422,-0.039452,-0.003358,0.031438,0.055623,0.002737,-0.009222) * L3_14 + mat4(0.046731,0.037932,-0.143010,-0.029053,0.043459,0.036247,0.027660,-0.071865,0.042869,0.014635,0.017888,0.048227,0.006776,0.003005,0.006118,-0.018074) * L3_15 + vec4(0.005279,-0.332762,0.844646,0.060436)));\nvec4 L4_3 = sin((mat4(0.215948,-0.171778,0.220237,0.247624,0.697679,0.395245,0.157180,0.469449,-0.540928,0.170497,-0.239562,0.197162,0.205640,0.094750,-0.329543,-0.143741) * L3_0 + mat4(-0.018838,-0.089925,0.045693,0.505046,-0.280077,0.157663,0.255279,0.189186,-0.160371,0.136797,0.244888,-0.176471,-0.426822,0.129559,-0.458850,0.177388) * L3_1 + mat4(0.301996,0.129383,-0.021608,-0.098239,-0.044331,-0.305743,0.218654,0.188936,-0.181375,-0.286414,0.140450,0.179038,-0.341321,0.241369,0.120833,-0.309888) * L3_2 + mat4(0.162010,-0.057912,0.178286,0.221738,-0.003036,-0.144435,0.024414,0.046916,0.165268,0.637620,0.518052,0.012061,-0.450566,-0.006688,-0.334559,-0.041711) * L3_3 + mat4(0.062574,0.279801,0.163715,-0.090069,-0.526210,-0.135351,0.122537,-0.170858,0.039256,-0.194882,-0.120350,-0.215844,0.123583,-0.337144,-0.185932,-0.058885) * L3_4 + mat4(-0.748072,-0.214770,0.473209,0.308473,0.273403,0.541469,0.198745,0.295122,0.174695,-0.351751,0.244316,-0.452445,-0.121607,-0.233141,0.190737,0.280910) * L3_5 + mat4(-0.258880,0.332698,0.283933,0.786953,-0.030493,0.174584,-0.575337,-0.121236,0.235613,0.288138,-0.572507,-0.271164,-0.000560,-0.062296,-0.034978,-0.163841) * L3_6 + mat4(0.375391,-0.211998,0.123512,0.092752,0.690926,0.116720,0.216732,-0.257224,-0.447336,-0.259097,0.137252,-0.013882,-0.296987,-0.124018,-0.192461,-0.551124) * L3_7 + mat4(-0.024965,0.293959,0.164519,-0.138383,-0.061958,0.006939,0.212247,0.011432,0.014757,0.007298,-0.012302,-0.007690,0.010635,0.010453,-0.003316,-0.000346) * L3_8 + mat4(-0.041447,0.211038,0.223118,0.005509,-0.008899,0.040868,0.022521,0.005088,0.063242,-0.146898,0.041847,0.009100,0.018020,0.025168,0.048616,0.008994) * L3_9 + mat4(0.009085,0.028157,0.007756,0.015914,0.205598,0.377563,-0.389423,-0.019204,-0.081694,-0.147671,0.230175,-0.020083,-0.008418,-0.029183,-0.003863,-0.006770) * L3_10 + mat4(0.044879,-0.108932,-0.048819,-0.036635,0.017562,-0.072490,0.022412,-0.007149,0.045361,0.081455,0.044904,-0.008273,-0.028639,-0.006171,0.010595,0.003935) * L3_11 + mat4(-0.135455,-0.002351,0.176505,-0.033343,-0.044222,0.250743,-0.023693,0.046998,0.058428,0.343799,0.094187,-0.161681,-0.021530,-0.169158,-0.061837,-0.058036) * L3_12 + mat4(-0.020944,-0.261190,0.354205,-0.111870,-0.091919,0.117457,0.323807,-0.072376,-0.077637,0.101741,0.010201,-0.000998,-0.070402,0.118799,0.168934,0.050035) * L3_13 + mat4(0.001277,0.033381,0.034498,-0.012383,0.120689,0.149553,-0.357070,-0.157775,0.010622,-0.057382,0.109513,-0.015291,-0.036602,-0.054599,0.127083,0.018792) * L3_14 + mat4(0.045555,-0.014282,-0.160658,-0.027108,-0.080681,0.014103,0.147986,0.016825,0.017870,0.050041,0.002050,-0.010585,0.021939,0.016525,0.035829,-0.015815) * L3_15 + vec4(-0.601792,0.119407,0.730214,-0.097553)));\nvec4 L4_4 = sin((mat4(-0.037871,0.501864,-0.104904,0.043579,-0.188273,0.642865,-0.052364,-0.442303,-0.199776,0.151559,-0.292272,0.045302,0.510641,0.475945,-0.405940,0.167135) * L3_0 + mat4(-0.051118,0.447822,0.015477,-0.561138,0.147686,-0.650431,0.810144,0.165529,0.164725,-0.309769,-0.501111,-0.143473,0.073992,-0.246385,0.152347,-0.156429) * L3_1 + mat4(0.139183,-0.129928,-0.034262,-0.009046,-0.127861,-0.153559,0.185014,-0.263344,-0.150472,0.034314,-0.020327,-0.172331,0.202342,-0.120169,-0.122157,0.401738) * L3_2 + mat4(-0.358824,0.018699,-0.055235,-0.284949,0.207657,0.189507,-0.073039,-0.165020,0.199656,0.203664,0.324123,-0.368449,0.161341,-0.016218,-0.104014,0.448529) * L3_3 + mat4(0.264731,-0.184515,-0.088570,0.203166,-0.091332,-0.008133,-0.588174,0.137140,-0.293900,0.109192,0.135310,-0.738342,-0.015967,-0.237540,-0.165491,-0.158546) * L3_4 + mat4(0.180811,-0.070651,0.429651,0.063193,0.052368,0.247078,-0.102194,-0.535943,0.014836,-0.192511,0.229747,-0.004263,-0.502786,0.137141,-0.023607,-0.042069) * L3_5 + mat4(0.090181,0.438075,0.140523,-0.039181,0.086565,-0.391715,0.052621,0.245480,-0.173937,0.093254,-0.248505,-0.378214,-0.184783,-0.378102,0.049567,0.005882) * L3_6 + mat4(0.002880,0.522937,0.270360,0.039437,-0.422203,0.033607,-0.295239,-0.107676,-0.436298,0.070162,0.176925,-0.514062,-0.305171,-0.021004,-0.204395,0.278457) * L3_7 + mat4(-0.299183,-0.137152,-0.089357,0.067930,0.134032,0.142897,0.073393,0.033283,-0.003540,0.001302,-0.008100,0.011048,0.001622,-0.004385,0.002593,-0.028446) * L3_8 + mat4(-0.173920,-0.013511,-0.062241,-0.048279,0.002107,0.020237,0.004261,0.007369,0.051279,-0.126962,0.002597,0.052848,0.171157,-0.041666,-0.012414,-0.049245) * L3_9 + mat4(0.005964,0.012637,-0.005741,0.007411,0.056709,-0.017825,0.074737,-0.051765,0.075458,-0.029791,-0.027067,0.066067,0.003890,0.016167,0.008679,0.005128) * L3_10 + mat4(0.281335,-0.020149,0.034347,0.034472,-0.143009,0.042782,-0.026104,-0.096367,0.011158,0.031880,0.011658,0.019274,0.007528,0.008860,-0.004114,0.020387) * L3_11 + mat4(-0.358898,0.154529,-0.003286,-0.061098,-0.133379,-0.182095,0.063724,0.116153,-0.012752,0.075032,-0.018534,0.114650,-0.150745,0.088280,-0.020741,-0.009993) * L3_12 + mat4(0.036524,-0.147078,-0.061989,-0.057936,0.245575,0.058749,0.044124,0.064876,-0.518929,-0.047719,-0.002982,0.012456,0.358008,-0.042460,-0.032261,0.052598) * L3_13 + mat4(0.045863,0.013846,-0.017119,0.007833,0.560846,-0.248103,-0.161242,-0.061026,0.032791,-0.041237,0.010616,-0.005352,0.081591,0.011489,0.013564,-0.031059) * L3_14 + mat4(-0.152180,-0.109702,-0.091346,-0.058574,0.132667,-0.078256,0.049721,0.043225,0.001212,0.036241,-0.021705,0.001846,0.014961,0.033926,0.004267,0.030883) * L3_15 + vec4(0.419663,0.777063,-0.013672,-0.165849)));\nvec4 L4_5 = sin((mat4(0.028532,-0.114838,0.026198,0.174165,-0.032893,-0.471658,-0.092852,-0.105412,-0.044328,0.261323,0.100510,0.201390,0.202062,-0.256369,-0.003973,0.015311) * L3_0 + mat4(-0.495077,-0.038442,-0.319426,0.031840,0.068052,0.187181,-0.060610,0.125089,0.389360,-0.045769,0.128088,-0.220927,0.170627,0.067452,-0.321370,-0.124341) * L3_1 + mat4(0.282280,-0.135637,-0.216172,-0.161261,0.018258,0.239281,-0.137378,-0.026914,-0.146890,0.123958,-0.018575,0.315375,0.129418,-0.039308,0.200633,-0.070849) * L3_2 + mat4(-0.293308,0.101137,-0.083699,-0.401215,0.008231,0.077184,0.079892,0.215324,0.115760,-0.049772,-0.077483,0.161198,0.155045,-0.144731,-0.135949,-0.073297) * L3_3 + mat4(0.151953,-0.186307,0.014986,-0.133188,-0.050621,0.032212,-0.164228,0.206691,0.127195,0.089597,-0.472514,-0.179863,-0.204860,0.151412,-0.205609,-0.300484) * L3_4 + mat4(0.339176,0.224213,-0.276099,0.275486,0.242674,0.326228,-0.752929,-0.238068,-0.155297,0.207590,0.158442,0.288601,-0.081579,-0.187925,0.312029,0.012592) * L3_5 + mat4(0.234769,-0.057456,0.176185,0.043200,0.211310,-0.142063,0.046839,-0.361041,-0.077434,-0.196019,0.251957,-0.724330,-0.165318,-0.008341,0.048394,0.068354) * L3_6 + mat4(-0.149600,-0.488313,0.195808,0.632119,-0.291723,-0.239036,-0.083036,0.148946,0.084151,-0.005506,-0.240928,0.217151,0.434001,0.182542,0.221492,-0.106440) * L3_7 + mat4(0.110806,0.023730,0.145292,-0.084330,0.113033,-0.159192,0.037094,-0.165283,-0.006639,-0.002383,0.002639,-0.003849,-0.020454,0.009659,-0.005242,0.002707) * L3_8 + mat4(0.063362,-0.017418,0.056023,-0.159638,-0.000215,0.014466,0.001337,-0.018726,-0.199181,-0.059140,0.007123,0.035580,0.037378,-0.014470,-0.055648,0.011453) * L3_9 + mat4(0.031346,0.014929,-0.057564,-0.057548,0.088533,0.030904,-0.308980,-0.220609,-0.040832,-0.006551,0.095870,0.072405,0.002478,0.005425,0.004474,-0.011511) * L3_10 + mat4(-0.014107,-0.007127,-0.045362,0.052820,-0.055159,-0.040682,-0.137297,0.143952,0.014375,-0.051997,0.032082,0.006018,0.003597,0.006485,0.013699,-0.014173) * L3_11 + mat4(0.041013,-0.064146,-0.036470,-0.222550,-0.328893,-0.044731,-0.021251,-0.181171,-0.036904,0.001551,0.085282,-0.163385,-0.056365,-0.015689,0.219829,-0.106519) * L3_12 + mat4(0.026501,-0.011338,0.080338,0.340162,-0.141108,0.006353,0.186308,-0.042613,-0.022590,0.002038,0.069403,-0.213135,-0.071015,-0.011885,-0.077010,0.148643) * L3_13 + mat4(0.011991,-0.002277,-0.009742,0.000366,0.129857,0.233983,-0.213954,-0.198672,-0.031128,0.035480,-0.003837,0.081709,-0.048120,0.035724,-0.050038,0.100803) * L3_14 + mat4(-0.081663,0.143690,-0.088403,0.107726,-0.161865,-0.016327,0.035689,-0.050307,0.064182,0.004929,0.004946,0.020708,0.000398,0.009186,0.031781,0.006906) * L3_15 + vec4(0.616178,-0.294205,0.091362,-0.891397)));\nvec4 L4_6 = sin((mat4(0.023562,-0.067839,-0.149043,-0.015424,0.376301,0.412042,0.145489,-0.034473,-0.071264,0.200790,-0.061103,0.224980,0.011234,0.409525,-0.174763,0.561593) * L3_0 + mat4(0.063277,-0.193923,0.136802,0.116058,-0.510509,-0.064102,-0.101319,0.005744,0.004332,-0.278871,-0.126531,0.072722,-0.082782,-0.195328,0.128815,0.070381) * L3_1 + mat4(0.098407,-0.077860,0.026386,-0.343185,-0.325273,-0.313496,-0.051115,-0.104084,-0.426297,-0.165359,0.050201,0.023172,-0.158634,0.321544,0.124021,0.118095) * L3_2 + mat4(0.387973,0.012631,-0.130063,-0.038548,-0.163016,-0.405655,-0.106543,0.288334,-0.028986,0.278046,-0.007584,0.015412,0.139374,0.130553,0.129265,-0.125482) * L3_3 + mat4(-0.275614,0.577610,0.023226,0.008895,0.232403,-0.189894,-0.108596,0.379499,-0.000489,-0.278503,-0.158844,0.226859,-0.165049,-0.288088,-0.255195,-0.182371) * L3_4 + mat4(-0.056240,-0.003761,-0.107979,-0.125583,0.349741,0.715557,0.636115,0.228959,-0.342666,-0.181591,-0.156956,-0.178904,-0.145351,-0.290604,-0.038109,-0.108807) * L3_5 + mat4(0.025884,-0.115357,-0.357787,-0.019627,-0.041412,0.114345,0.170808,0.213282,0.276718,0.332148,0.417915,0.680718,0.240183,0.070998,0.426600,-0.046095) * L3_6 + mat4(0.201710,0.718000,0.095250,0.557692,0.026036,0.181485,0.010630,0.418463,-0.265644,-0.631110,0.007029,-0.208058,0.328609,0.007761,-0.477480,0.037989) * L3_7 + mat4(0.161357,0.055645,0.077051,0.065267,-0.064357,0.098093,-0.100634,-0.024353,0.000527,0.011558,-0.002654,-0.000498,-0.005113,-0.003228,0.031640,-0.023970) * L3_8 + mat4(0.002299,-0.025709,0.043317,0.028802,0.000744,0.013856,0.009947,0.012138,-0.008167,0.015366,0.103957,0.008777,-0.057600,-0.096070,-0.013958,0.046744) * L3_9 + mat4(0.022096,-0.000221,0.008476,-0.007911,-0.393473,-0.133616,-0.247826,-0.210059,0.092944,0.050035,0.090455,0.009191,-0.003604,0.040139,-0.002001,0.006835) * L3_10 + mat4(-0.119916,-0.030832,0.015624,0.018779,0.085153,-0.141642,0.043998,0.048000,0.036767,0.026100,0.085335,-0.016359,0.005310,0.006264,0.007192,0.004480) * L3_11 + mat4(-0.048434,-0.200075,0.053034,-0.131376,-0.087348,-0.119810,0.043767,-0.061920,0.119837,-0.027831,-0.151148,0.067644,-0.214844,0.168025,0.272540,-0.071519) * L3_12 + mat4(-0.100140,0.018482,-0.213137,0.205905,-0.006262,-0.043666,-0.045333,-0.033805,0.110993,0.075352,0.041751,0.004770,0.237868,-0.117899,-0.232095,-0.021296) * L3_13 + mat4(-0.013306,0.025069,-0.003592,-0.022501,0.156470,-0.319742,-0.193365,-0.086210,0.023450,-0.023317,-0.040362,0.027609,0.169006,0.003151,-0.109345,0.013804) * L3_14 + mat4(0.080042,-0.027743,0.110153,0.053817,0.006273,0.037250,0.026022,-0.022148,0.008389,0.020493,0.011676,-0.001819,-0.012995,0.007007,-0.001132,0.000504) * L3_15 + vec4(-0.172154,0.133064,-0.557891,-0.190767)));\nvec4 L4_7 = sin((mat4(-0.135084,0.136049,-0.366874,-0.134239,0.102026,0.235346,0.265724,0.008301,0.033190,-0.223686,0.012450,0.108984,0.147415,0.184466,0.092398,0.117750) * L3_0 + mat4(-0.238517,0.072862,-0.217801,-0.399298,-0.179142,-0.095468,-0.076800,0.098524,0.355218,0.174384,0.330291,-0.048364,-0.233400,-0.458595,-0.139014,0.232239) * L3_1 + mat4(0.084782,0.161291,-0.178793,0.085036,-0.294633,0.118121,-0.084614,-0.171555,0.344225,-0.389349,-0.137585,-0.209070,0.232604,-0.009147,0.108117,-0.187974) * L3_2 + mat4(-0.139408,0.003280,-0.059383,-0.010120,-0.134982,0.085160,-0.285975,0.030200,0.582306,0.139537,0.314036,0.446310,0.155033,-0.155232,0.212018,-0.030718) * L3_3 + mat4(0.272407,-0.244094,0.371739,-0.050347,0.193280,0.130448,0.196475,-0.374019,-0.346344,0.460036,0.320481,-0.188491,0.013306,0.061687,0.279331,-0.014093) * L3_4 + mat4(0.058085,0.354268,-0.397824,-0.232974,0.203878,0.488289,0.076428,-0.008640,-0.002228,-0.195815,0.085782,0.005410,-0.036061,0.084464,-0.372201,-0.057418) * L3_5 + mat4(0.138888,0.392024,0.130110,-0.018624,-0.292711,-0.086761,-0.078090,0.538984,-0.926637,0.340587,0.463153,0.415216,-0.240850,-0.148266,0.155988,0.198856) * L3_6 + mat4(0.003862,-0.584969,0.013383,-0.290471,-0.033145,0.283231,0.270556,-0.354874,-0.012822,-0.166198,-0.238600,-0.133017,-0.442091,-0.424864,0.057263,0.065753) * L3_7 + mat4(0.018732,0.093657,0.091944,-0.208402,-0.109061,0.022192,-0.179629,0.059259,0.012298,-0.010257,-0.013972,-0.003895,0.020771,0.000103,-0.023268,-0.013181) * L3_8 + mat4(-0.025901,0.082157,0.135328,0.058631,-0.005040,0.010870,-0.000907,-0.004270,0.012649,0.101409,-0.027886,-0.010088,-0.016137,-0.015086,0.045048,-0.053392) * L3_9 + mat4(-0.022115,-0.025166,0.007790,-0.011115,0.131832,0.027668,0.343824,-0.173535,-0.023320,-0.041221,-0.062401,-0.061753,-0.018052,-0.011140,0.018581,0.017396) * L3_10 + mat4(-0.045680,-0.049940,-0.040188,-0.076109,0.034016,-0.052990,0.141162,-0.043833,-0.026199,0.015819,0.006848,-0.007355,-0.003108,-0.014260,0.016968,0.014552) * L3_11 + mat4(0.037321,-0.009894,0.359484,-0.062875,0.136555,0.086978,-0.271412,-0.253354,0.024012,0.074499,0.016464,-0.112489,-0.137446,-0.087594,-0.136427,0.024158) * L3_12 + mat4(0.037176,-0.108189,-0.104358,-0.142358,0.078030,-0.096008,0.119795,0.040144,0.098449,0.003950,-0.131540,-0.219444,0.017026,-0.041346,0.127998,-0.035308) * L3_13 + mat4(-0.016118,0.004792,-0.038610,-0.008153,-0.101309,-0.012975,0.200694,-0.213276,0.013507,-0.004876,-0.065772,-0.042152,0.009013,-0.025564,-0.045647,-0.023388) * L3_14 + mat4(0.112224,-0.028637,0.163518,-0.034856,-0.028104,0.010884,0.084091,0.001309,-0.019138,0.001464,0.102967,0.071831,0.016278,-0.011565,0.012331,-0.001272) * L3_15 + vec4(-0.645816,-0.072764,-0.408752,0.202656)));\nvec4 L4_8 = sin((mat4(0.250128,-0.041243,-0.154427,-0.196325,0.670372,-0.010795,0.166523,0.114430,-0.020915,-0.057708,0.379636,-0.073052,0.074931,-0.292578,0.216982,0.012221) * L3_0 + mat4(-0.067036,0.124665,0.544525,0.081736,-0.103997,0.010307,-0.882507,0.290125,-0.134939,0.022512,0.123994,0.206015,-0.174057,-0.064588,-0.015139,0.535593) * L3_1 + mat4(-0.193218,-0.224641,-0.045639,-0.071202,0.219980,0.296506,-0.458164,0.352837,0.305541,0.003883,-0.083392,0.046459,-0.480696,-0.052405,0.332718,-0.362250) * L3_2 + mat4(-0.104861,0.310263,0.088484,0.270403,-0.041180,-0.129626,0.078521,0.185126,-0.005856,0.155439,0.047082,-0.021946,-0.018904,-0.555951,0.172676,-0.024718) * L3_3 + mat4(-0.165454,0.083498,0.090888,0.548722,-0.373604,-0.298674,-0.240282,-0.312476,0.144702,0.109831,-0.113001,-0.306277,0.158575,0.238773,-0.130624,-0.218815) * L3_4 + mat4(0.128544,0.208699,0.032486,0.318193,0.751374,0.266037,0.482956,0.017357,0.309830,0.193899,-0.305083,-0.025037,0.180573,-0.070280,-0.017245,-0.035530) * L3_5 + mat4(-0.245827,-0.039859,0.001569,-0.108860,-0.497361,0.144320,-0.035200,-0.056885,-0.732384,-0.136696,0.052626,-1.022745,-0.316955,0.025223,0.050831,-0.238221) * L3_6 + mat4(0.012647,0.228424,0.319495,0.029708,0.190093,-0.124325,-0.094696,-0.092025,0.149958,0.204638,-0.386315,0.134908,0.278513,0.051236,-0.206557,-0.159922) * L3_7 + mat4(-0.017658,0.056016,-0.080592,-0.161632,0.205195,0.163187,-0.060153,-0.082744,-0.001425,0.026876,-0.020996,-0.010578,0.007537,0.002771,-0.003770,0.015284) * L3_8 + mat4(0.010073,0.014755,-0.081439,-0.269462,-0.023970,-0.010836,-0.021024,-0.019791,-0.084553,-0.066115,0.020238,0.003287,-0.048913,0.058664,0.020803,0.004099) * L3_9 + mat4(0.036017,-0.021953,-0.037047,0.008917,-0.151542,0.110884,-0.062438,-0.340106,-0.035114,-0.013995,0.060118,-0.147512,-0.001904,0.015595,0.016148,0.009824) * L3_10 + mat4(-0.051169,-0.011929,-0.006475,0.082277,0.071015,0.002713,-0.131584,0.244764,-0.060093,-0.045214,0.002812,-0.078692,0.001180,-0.011597,0.024986,0.035343) * L3_11 + mat4(0.097003,0.074911,0.103257,0.163631,0.035443,-0.447795,0.100702,0.099579,-0.122356,-0.021163,0.066403,-0.073458,0.105784,0.094633,0.393065,-0.458461) * L3_12 + mat4(-0.075797,-0.079538,-0.002700,0.458985,0.030727,0.141361,0.073199,0.067838,0.181307,-0.023051,0.204056,0.203171,0.027334,-0.116532,-0.083241,0.422505) * L3_13 + mat4(-0.004350,-0.013467,0.040982,0.021454,0.089146,0.079726,0.048628,-0.370076,-0.009028,-0.044484,-0.063746,-0.055813,0.029534,-0.046103,-0.013483,0.221976) * L3_14 + mat4(-0.170985,-0.169197,0.049089,0.070244,-0.007100,-0.122743,0.043592,-0.071707,-0.026794,0.076710,-0.003210,0.034020,-0.003478,0.009129,-0.033693,-0.017306) * L3_15 + vec4(0.838688,0.332035,0.044126,-0.298005)));\nvec4 L4_9 = sin((mat4(-0.290878,0.084114,0.301040,0.286105,0.148245,0.388489,0.184253,0.199460,-0.223662,0.183052,-0.013694,0.032945,0.115908,0.291675,-0.339956,0.048917) * L3_0 + mat4(0.173967,0.262207,-0.157303,-0.103401,0.122626,0.021588,-0.428911,-0.253541,-0.265050,0.070122,-0.014917,0.181248,0.105507,0.044247,-0.428943,-0.203421) * L3_1 + mat4(-0.948061,-0.104443,-0.115178,0.074064,-0.076704,-0.126466,-0.202632,0.102891,0.035762,0.052748,-0.035379,0.252700,-0.642627,0.128833,-0.018745,0.082479) * L3_2 + mat4(0.425915,0.288571,0.254332,0.051629,-0.168829,0.107086,0.374429,-0.019397,0.706800,0.552863,-0.017973,0.241572,0.118989,0.137427,-0.381793,0.016540) * L3_3 + mat4(0.477267,-0.300438,-0.113387,-0.496678,-0.330348,0.384272,-0.008412,-0.236827,-0.167124,0.253308,0.519799,-0.425381,-0.208734,-0.356006,0.011035,0.135829) * L3_4 + mat4(-0.283468,0.389761,-0.176799,-0.009727,-0.289816,0.627803,0.208764,-0.098575,-0.227392,-0.363040,-0.077767,0.398305,0.036872,-0.405208,0.107868,0.013710) * L3_5 + mat4(0.185518,-0.176098,-0.016702,0.684289,-0.248959,0.011527,-0.174339,-0.176948,-0.946062,-0.012877,-0.024788,-0.795446,-0.140979,-0.218118,0.011894,-0.363758) * L3_6 + mat4(0.255281,0.175254,0.613177,-0.145483,-0.336400,-0.102984,0.094630,0.309249,0.047338,0.071760,0.094395,0.096817,-0.323751,0.547941,0.090331,0.169524) * L3_7 + mat4(-0.200093,-0.017869,0.056996,-0.040088,0.342744,-0.295020,-0.032100,-0.104222,-0.005760,0.004595,0.006940,-0.007263,0.001102,-0.005860,0.016010,0.002990) * L3_8 + mat4(-0.068631,-0.047024,0.056706,0.142799,-0.082867,0.002348,0.004042,0.008942,-0.007197,0.075161,0.018117,-0.016041,-0.063184,-0.101462,0.049119,0.016491) * L3_9 + mat4(-0.001626,-0.016925,-0.005202,0.001794,0.085542,0.152734,0.041221,-0.091605,0.032156,0.038917,-0.000343,-0.034896,0.007456,-0.012010,-0.010249,-0.002452) * L3_10 + mat4(-0.041315,-0.001312,0.005623,-0.093219,-0.080255,-0.053798,0.032257,-0.040116,-0.070488,0.017020,-0.014556,0.017817,0.043640,-0.016419,0.009553,0.013804) * L3_11 + mat4(-0.108853,-0.078064,0.028095,-0.044138,0.084407,0.009233,0.097201,0.040134,-0.105119,0.047871,-0.061483,0.007750,-0.009953,-0.071158,0.071971,0.080550) * L3_12 + mat4(-0.077846,0.032940,0.096167,0.066139,0.004567,0.048324,0.020018,-0.073912,0.013361,0.084078,-0.008990,0.128338,-0.047289,0.057369,-0.106433,-0.087227) * L3_13 + mat4(-0.014197,-0.003458,0.005997,0.002471,-0.000999,-0.164696,-0.002337,-0.229124,0.007817,0.039758,0.022995,-0.052378,-0.010806,0.016476,-0.014301,0.049386) * L3_14 + mat4(-0.338581,0.234046,0.020697,0.072340,-0.011344,0.097139,0.006117,0.007943,0.002425,-0.005500,-0.035807,-0.017888,0.024299,0.003744,-0.008266,-0.006397) * L3_15 + vec4(0.511335,-0.676418,-0.072850,0.095382)));\nvec4 L4_10 = sin((mat4(-0.070069,-0.307482,0.013023,0.050436,0.444214,0.304122,-0.311255,0.321059,0.295496,-0.281633,-0.046513,0.000561,0.244525,-0.783994,-0.033570,0.108634) * L3_0 + mat4(0.358575,-0.097655,-0.057020,0.198613,0.078911,0.177902,0.372178,-0.359810,-0.020354,0.123859,-0.207685,0.205257,0.454010,0.027624,0.225469,0.369856) * L3_1 + mat4(0.100468,-0.156450,-0.145519,0.124860,0.120734,0.206921,0.139983,0.294309,0.289841,-0.445344,0.034624,0.175379,-0.426441,0.426200,-0.005123,-0.144586) * L3_2 + mat4(-0.155948,-0.249682,0.123317,0.313394,-0.015439,0.184404,-0.025018,-0.117309,0.397083,-0.770583,-0.014066,0.224598,0.170530,0.050821,-0.223520,0.033850) * L3_3 + mat4(0.166426,0.704929,-0.395041,-0.099187,-0.533998,0.492127,0.157798,-0.081836,-0.193563,0.047967,0.497757,0.174189,0.096307,0.109819,0.065432,-0.380038) * L3_4 + mat4(-0.043101,0.357905,0.283612,-0.031174,0.704993,-0.091297,-0.207294,0.855769,0.184001,0.192786,0.220794,-0.436588,-0.057099,0.207100,-0.073518,0.091328) * L3_5 + mat4(-0.127769,-0.132676,0.110887,0.066068,-0.061889,0.286529,-0.148724,0.122885,-0.103056,-0.055373,-0.163154,0.386671,-0.232992,0.231004,-0.211778,-0.234450) * L3_6 + mat4(-0.359575,-0.057728,-0.106198,-0.267576,-0.072011,0.170801,-0.071566,0.009867,0.176752,0.053296,0.124519,-0.650108,-0.239833,-0.382040,0.080412,0.113708) * L3_7 + mat4(-0.131408,0.094075,0.075532,0.123085,0.000520,0.015990,0.130603,-0.084048,0.007185,0.009045,0.024971,0.015300,-0.002216,-0.000466,0.016970,-0.015473) * L3_8 + mat4(0.101372,0.091301,-0.033716,0.004972,0.022712,0.027895,0.019756,-0.000948,0.024910,-0.002812,0.165364,0.002297,0.169180,0.002258,-0.044220,-0.037232) * L3_9 + mat4(-0.006141,-0.019590,0.004791,0.045211,0.105765,-0.055392,0.076221,-0.225882,0.101775,0.055075,0.044356,0.086421,-0.008412,0.031801,0.016562,-0.003324) * L3_10 + mat4(-0.000460,-0.021144,-0.075834,-0.057777,0.123856,-0.010011,0.018234,-0.024660,0.031548,0.052845,0.005208,-0.017553,-0.003244,-0.010273,0.001484,-0.029081) * L3_11 + mat4(-0.113475,-0.097533,-0.060445,-0.234884,0.354987,-0.028896,-0.275559,0.095198,-0.015355,0.061690,-0.458546,-0.036709,0.043783,0.047813,0.050988,-0.242405) * L3_12 + mat4(0.216448,0.059959,-0.004153,-0.336906,-0.045433,-0.050114,-0.214720,-0.139193,-0.103549,-0.033670,0.218101,0.144107,0.045985,-0.058644,-0.010093,0.200213) * L3_13 + mat4(-0.008418,0.015692,-0.012709,0.011803,-0.022761,0.146479,-0.010225,0.148952,-0.012098,-0.020563,-0.035744,0.111548,0.043738,-0.040200,0.008957,0.142052) * L3_14 + mat4(-0.026703,-0.026305,-0.082189,0.066827,0.076193,0.054313,0.250259,-0.019604,-0.041283,0.013612,0.045738,-0.000845,0.019899,-0.023681,0.022558,0.018222) * L3_15 + vec4(0.081112,-0.012914,0.310541,-0.275027)));\nvec4 L4_11 = sin((mat4(0.448422,-0.065377,-0.214326,-0.201927,-0.170919,-0.264325,0.089107,0.054632,0.120071,-0.241151,-0.139473,-0.060530,-0.249323,-0.234724,-0.189735,0.601600) * L3_0 + mat4(0.231724,-0.055402,-0.235601,-0.006368,-0.233033,0.105501,0.489545,0.497502,-0.537932,-0.038355,0.233412,0.277300,0.147089,-0.119909,0.011576,-0.253530) * L3_1 + mat4(0.031440,0.046393,0.096176,0.621517,-0.105992,0.199690,0.290681,0.004101,-0.056828,-0.441329,0.200068,0.221524,-0.433187,-0.046318,-0.054915,-0.047818) * L3_2 + mat4(0.112105,0.123617,-0.059845,-0.164167,-0.023789,0.035728,-0.217758,0.154876,0.075490,-0.248868,0.003631,0.776683,-0.031143,-0.243543,0.035215,-0.171179) * L3_3 + mat4(-0.247615,-0.250472,0.090368,0.037099,-0.274723,-0.308260,0.053617,0.368609,0.181227,0.407397,0.223432,-0.093032,0.484967,0.268935,-0.262323,-0.384540) * L3_4 + mat4(0.070997,-0.079893,0.258834,0.001361,-0.196862,0.085386,0.247433,0.258626,-0.195217,0.074665,-0.129918,0.103465,0.155104,-0.176635,-0.029514,0.119942) * L3_5 + mat4(0.143985,-0.278364,-0.333202,-0.038683,-0.147531,0.305465,0.742205,0.070821,-0.820042,0.224283,0.373407,0.126656,-0.333623,0.138514,0.138684,0.105596) * L3_6 + mat4(0.634353,0.006779,-0.773513,-0.306001,-0.110496,0.315995,-0.261239,-0.181881,0.203322,0.504851,0.149185,-0.089498,-0.137490,0.029832,0.264951,-0.398572) * L3_7 + mat4(0.219186,0.201332,-0.059928,0.338909,-0.237658,-0.139693,-0.360840,-0.143723,-0.012174,0.037591,-0.034707,-0.001070,-0.003866,-0.033089,0.019754,-0.006756) * L3_8 + mat4(0.095867,0.128763,-0.011989,0.071063,0.009441,-0.014718,-0.006978,0.009795,0.002302,-0.052892,-0.019875,-0.044122,-0.049381,0.031923,0.089434,0.244855) * L3_9 + mat4(-0.055636,-0.049712,0.027923,0.080190,0.145371,0.711673,-0.143490,-0.252769,-0.101575,-0.166498,0.047675,0.015698,0.015579,0.007597,-0.002319,0.004285) * L3_10 + mat4(-0.146246,-0.029732,-0.016824,0.143123,0.203281,0.103830,-0.059019,-0.082505,0.035359,0.016461,-0.037632,0.037781,0.023175,-0.009068,0.006453,-0.001391) * L3_11 + mat4(0.346212,0.312543,-0.098580,0.091634,0.064944,-0.061370,0.132445,0.692984,0.084901,0.047491,-0.010919,-0.073186,-0.157135,0.036918,0.153793,-0.076886) * L3_12 + mat4(0.248995,-0.105733,0.226509,-0.229734,0.061669,0.099816,-0.032670,-0.003794,0.271680,-0.258476,0.065747,-0.030635,0.099497,0.011771,-0.027783,0.125243) * L3_13 + mat4(0.023474,-0.020389,-0.014295,-0.040604,-0.503466,0.192975,0.308900,0.035904,-0.087765,-0.110139,-0.022441,0.042564,-0.080327,-0.083861,0.044666,0.099794) * L3_14 + mat4(0.213198,0.118951,0.316036,0.173270,-0.031447,-0.059847,-0.042771,0.003122,-0.016020,0.002573,-0.005493,-0.120440,0.003557,0.016211,-0.019199,0.003452) * L3_15 + vec4(-0.164742,-0.748327,-1.072984,-0.512655)));\nvec4 L4_12 = sin((mat4(0.249447,-0.165512,0.206101,-0.153084,-0.157367,-0.143563,-0.346501,-0.454566,0.078322,-0.050318,0.026601,0.331934,0.288248,0.260131,-0.233041,0.217886) * L3_0 + mat4(-0.201080,0.062700,0.162666,-0.152992,0.388681,0.319239,0.004302,-0.095518,-0.010292,-0.234281,-0.015976,-0.424067,-0.154026,0.118114,0.180388,0.495191) * L3_1 + mat4(-0.012178,0.255386,-0.083484,0.113949,0.116175,-0.135475,0.120256,0.039143,0.319073,0.010884,0.002712,0.023313,0.038962,0.435168,-0.379654,-0.214485) * L3_2 + mat4(0.442745,-0.084158,0.060245,-0.015144,0.054408,-0.372322,-0.108953,0.076116,-0.310645,0.092420,-0.113255,0.291054,0.332875,0.123738,-0.066859,-0.092020) * L3_3 + mat4(-0.420530,0.199220,0.282824,0.218350,-0.165419,0.026409,0.015871,0.228641,-0.186743,-0.243023,-0.106704,-0.106796,-0.163830,-0.059132,-0.193639,-0.212503) * L3_4 + mat4(0.141786,0.037485,0.284478,0.293117,-0.463676,-0.120038,-0.210898,-0.301733,-0.032055,0.024973,-0.227111,-0.188640,0.026667,-0.378339,0.172873,-0.166553) * L3_5 + mat4(0.298431,-0.243982,-0.034064,-0.306926,0.135751,0.207954,-0.275553,-0.144984,-0.955097,0.324515,-0.748007,-0.100303,-0.230064,0.130248,-0.245071,0.046966) * L3_6 + mat4(0.282916,0.311511,0.172282,-0.140161,-0.351681,0.129513,-0.018112,-0.397765,0.457956,-0.032866,-0.016263,0.200347,0.385895,0.211501,0.076292,-0.425637) * L3_7 + mat4(-0.000723,-0.029194,-0.167436,-0.089686,0.474488,-0.053478,0.086575,-0.172333,0.001667,0.020626,-0.001162,0.045613,0.005630,-0.000882,0.021851,0.052950) * L3_8 + mat4(-0.098911,-0.008285,-0.106465,0.061176,0.023168,0.001980,0.008488,-0.027362,0.118499,-0.003909,0.009812,0.047523,-0.052210,0.015918,0.032376,0.166534) * L3_9 + mat4(0.001435,-0.010496,0.030086,0.058083,0.006150,0.016297,-0.632457,0.119940,-0.027506,-0.004105,0.260540,0.011154,0.008011,0.011711,-0.001526,0.014990) * L3_10 + mat4(0.039231,0.013863,0.238972,0.228650,0.034488,0.038928,-0.081066,0.038517,0.071407,0.013988,-0.001110,-0.006594,-0.030332,0.003908,-0.007821,-0.020794) * L3_11 + mat4(-0.020972,-0.048554,-0.426271,-0.313632,0.037100,-0.117660,-0.023292,0.073877,-0.107404,0.016847,0.131025,-0.053059,0.030376,0.008288,0.032986,-0.294657) * L3_12 + mat4(0.174258,0.078443,-0.700607,0.451829,-0.058455,-0.066241,0.022993,-0.042517,-0.077709,0.006051,-0.449916,-0.596127,0.038726,-0.001154,-0.059443,0.133800) * L3_13 + mat4(0.020582,0.011485,0.011213,0.017296,-0.339345,0.088698,0.892581,-0.117247,0.050057,0.006348,0.150489,0.107193,-0.011767,0.005380,0.021093,0.037513) * L3_14 + mat4(-0.424816,0.026229,-0.100605,0.160825,0.102424,-0.074989,0.020364,0.048341,-0.019794,0.030771,0.017601,-0.034192,0.014549,0.007583,-0.015836,0.020601) * L3_15 + vec4(0.552057,-0.128613,0.352152,-0.628208)));\nvec4 L4_13 = sin((mat4(0.032419,0.332190,-0.181038,0.189144,0.184267,0.361331,-0.257074,0.281607,0.181026,0.046626,0.169213,-0.020863,0.252398,-0.338018,0.114224,0.068530) * L3_0 + mat4(0.045707,0.666856,-0.062391,0.111766,0.100883,-0.414556,0.059371,-0.390731,-0.110621,-0.507478,0.239422,0.388008,0.042339,-0.074211,-0.134910,-0.170755) * L3_1 + mat4(0.322020,0.138484,-0.073072,0.001683,-0.196350,-0.009988,-0.043465,-0.079378,0.184528,0.016320,-0.212489,0.176051,0.141984,-0.271339,0.468385,-0.143153) * L3_2 + mat4(-0.363743,0.261117,0.193987,-0.035755,-0.169574,-0.144080,-0.008479,0.341378,0.397639,-0.248868,0.606434,-0.270810,0.132642,-0.123515,0.080568,0.163794) * L3_3 + mat4(-0.122859,-0.761014,-0.179152,0.260275,0.123627,-0.271253,-0.104847,-0.319873,-0.515486,0.261348,-0.082872,0.009992,0.189514,-0.137639,0.029783,0.100528) * L3_4 + mat4(-0.007202,0.044325,-0.390700,-0.028890,-0.303897,-0.150988,0.576056,-0.007525,0.624985,-0.343382,0.089175,0.219676,-0.342831,-0.132379,-0.536611,0.435142) * L3_5 + mat4(-0.416844,-0.143309,-0.006422,-0.094249,0.126251,0.171349,-0.026375,-0.366005,0.199639,-0.064593,-0.274179,-0.445921,-0.130747,-0.448080,0.035757,-0.003476) * L3_6 + mat4(-0.709209,-0.165965,0.067017,0.583370,0.128544,-0.016734,-0.102670,-0.558131,0.031918,0.056918,0.120886,0.359364,0.239398,0.371407,-0.158703,0.429659) * L3_7 + mat4(-0.089237,-0.017872,0.329274,0.080405,0.197189,0.196859,0.176130,0.272622,0.005601,-0.013260,0.028898,0.010929,0.023873,0.000167,-0.030243,0.018433) * L3_8 + mat4(-0.013386,0.067353,0.120321,0.083539,0.013294,-0.004475,0.029009,0.005089,-0.094933,-0.035679,-0.120021,0.007302,0.002088,0.081802,-0.047856,0.022733) * L3_9 + mat4(-0.009608,0.017741,0.012174,-0.067687,0.104765,0.165236,0.053028,0.249722,-0.040254,-0.054188,-0.148562,-0.105851,-0.023492,0.022140,-0.028577,0.006646) * L3_10 + mat4(0.006965,0.053283,-0.090646,-0.004888,0.021884,0.097211,-0.098127,0.015622,0.015585,-0.011278,0.050861,0.007824,0.014644,0.001540,0.015923,-0.021828) * L3_11 + mat4(0.096375,0.054527,0.322396,0.092801,-0.163119,0.127336,0.092539,0.021743,0.135002,0.017535,0.064508,-0.084204,0.165031,-0.106025,-0.003430,0.075537) * L3_12 + mat4(-0.001625,-0.006591,-0.454937,0.018880,0.092110,-0.006211,-0.373379,0.031366,0.138500,-0.204815,0.110193,-0.199170,-0.140268,0.063082,-0.023236,0.051045) * L3_13 + mat4(-0.014545,-0.003166,0.006455,0.026902,0.122909,0.079212,0.459177,0.134702,-0.033283,0.023952,-0.069075,0.056937,-0.054503,-0.004339,-0.086431,-0.016384) * L3_14 + mat4(-0.151466,-0.127991,-0.181796,-0.231174,-0.011184,-0.075515,-0.118653,0.036701,0.032715,-0.009583,0.010141,-0.027103,-0.024936,0.006929,0.002586,0.006071) * L3_15 + vec4(0.668657,0.274714,0.372960,0.635158)));\nvec4 L4_14 = sin((mat4(-0.128012,-0.251696,-0.158815,0.132751,0.116742,-0.113996,0.161841,-0.197430,0.051655,0.239646,0.003882,-0.099888,-0.087761,0.168808,0.277573,0.217954) * L3_0 + mat4(0.136580,-0.601140,-0.401845,0.068903,-0.075608,0.372828,0.323705,-0.085228,0.012851,-0.063931,0.301271,0.002517,-0.303753,-0.059703,0.082185,-0.457577) * L3_1 + mat4(-0.079141,-0.363362,-0.139629,0.067509,-0.051504,-0.393580,-0.107461,-0.005576,0.186349,-0.268593,0.068149,0.081362,-0.277219,0.334572,0.274110,0.299989) * L3_2 + mat4(-0.067911,-0.470717,-0.198179,0.203799,-0.013507,-0.376084,-0.011072,-0.093552,-0.035659,-0.122833,-0.204481,-0.176003,-0.183448,0.143510,-0.020081,0.253784) * L3_3 + mat4(-0.147343,-0.116185,0.267991,0.064892,-0.272359,0.092378,-0.138292,0.002527,0.409830,0.182497,-0.592903,-0.138075,-0.039822,0.122355,0.081093,0.476795) * L3_4 + mat4(-0.114975,-0.202225,0.041779,-0.005366,-0.141215,-0.638537,0.470822,-0.394557,-0.023318,0.093110,0.083776,-0.354684,-0.123934,-0.250408,-0.268434,-0.060045) * L3_5 + mat4(-0.263018,0.389707,-0.371620,0.068037,0.063801,0.093240,0.065762,-0.303215,0.346180,0.202099,0.290235,0.143112,0.211347,0.070231,0.118217,-0.249703) * L3_6 + mat4(-0.063976,-0.535547,-0.056120,-0.159197,0.079047,-0.068112,0.002549,0.031020,-0.111579,0.154511,-0.178332,-0.071454,0.081280,0.247607,0.174289,0.245037) * L3_7 + mat4(-0.144112,0.111606,-0.044210,0.075814,-0.119723,0.144068,-0.041240,-0.098301,0.005374,-0.011678,0.011420,-0.027879,-0.017453,0.008468,0.005424,-0.018165) * L3_8 + mat4(-0.036592,-0.011617,-0.000373,-0.019328,-0.004541,0.008650,0.004727,-0.034501,-0.143824,-0.008241,0.013421,0.061884,0.079125,-0.081555,-0.028010,0.052887) * L3_9 + mat4(-0.007966,0.008737,-0.033769,-0.003296,-0.043146,-0.120768,-0.136004,-0.157074,0.022944,-0.017116,0.033158,-0.043918,0.009470,0.005728,-0.010555,-0.001832) * L3_10 + mat4(0.050544,0.018337,-0.051268,-0.017468,-0.022325,0.062690,0.155910,0.007502,-0.026569,0.018124,0.032606,-0.046762,0.015934,-0.015873,0.009461,0.020341) * L3_11 + mat4(0.088287,0.010983,0.422478,0.030184,0.673605,0.151711,-0.034444,-0.059247,-0.046052,-0.145418,0.074911,-0.216737,-0.007181,-0.102674,0.070978,-0.100356) * L3_12 + mat4(-0.199641,-0.014024,0.448809,0.008752,-0.163675,-0.025505,0.171554,-0.035257,0.108748,0.002476,-0.046826,-0.085959,-0.006268,0.043561,0.066311,0.060736) * L3_13 + mat4(-0.003748,-0.001379,0.002748,-0.000273,0.092019,-0.106368,0.052771,-0.307309,-0.024000,0.035312,-0.111775,0.027862,-0.026094,0.022620,-0.039195,0.009917) * L3_14 + mat4(0.065578,-0.112841,0.008496,0.112451,-0.019851,0.025990,0.080163,-0.060730,-0.080564,-0.026687,0.011184,-0.005868,0.003690,0.018040,-0.009854,-0.000819) * L3_15 + vec4(-0.155731,0.300218,0.163008,-0.241533)));\nvec4 L4_15 = sin((mat4(-0.043571,0.013975,0.078468,0.012879,0.348283,0.353901,-0.060659,-0.148090,-0.054233,-0.377412,-0.036206,0.502125,-0.346886,0.035355,0.075267,-0.425153) * L3_0 + mat4(0.289391,-0.702490,-0.167078,-0.368642,0.042038,-0.270928,-0.112419,0.486353,-0.140422,0.072269,0.223323,0.242084,0.200409,-0.227261,-0.169906,0.606168) * L3_1 + mat4(-0.186179,0.167372,-0.143704,-0.007369,0.141582,0.207717,-0.203080,-0.059522,-0.219475,-0.170741,-0.281798,0.053021,0.049533,0.060975,0.002448,0.425934) * L3_2 + mat4(0.191098,-0.036052,0.229423,-0.404975,0.011558,-0.052612,-0.085332,-0.106533,0.067062,0.082163,0.157110,-0.000122,0.017071,0.031179,-0.041312,-0.349490) * L3_3 + mat4(0.020687,0.102491,0.476356,0.471530,-0.220539,-0.136031,0.369838,0.467458,0.246372,-0.145760,0.013111,-0.417042,0.079360,-0.292019,0.079070,0.231804) * L3_4 + mat4(0.060049,0.386335,0.084454,0.163934,0.298504,0.958915,-0.391025,-0.012476,0.239276,0.177509,0.038697,0.040178,-0.003875,0.030854,-0.263625,-0.215922) * L3_5 + mat4(0.278467,-0.495542,-0.018119,0.633382,0.101162,-0.012836,0.027393,-0.270244,0.312450,-0.541039,-0.052887,0.600742,-0.057534,-0.113130,-0.139928,0.117664) * L3_6 + mat4(-0.035551,0.301912,0.217938,-0.111315,0.052465,0.226599,0.162779,-0.557471,0.096449,-0.141283,0.032059,0.246368,-0.171875,0.042586,0.013693,0.047403) * L3_7 + mat4(-0.093006,-0.042683,-0.159860,-0.382312,0.033173,-0.225791,0.064442,-0.211088,0.020554,-0.003865,-0.016216,0.014088,0.011790,0.010844,-0.012726,-0.028492) * L3_8 + mat4(-0.068597,-0.049044,-0.139650,-0.120615,-0.013464,0.026177,0.014585,0.006434,-0.096060,0.075319,0.060594,0.031329,0.042782,0.029038,0.011768,-0.150092) * L3_9 + mat4(0.016403,-0.090654,-0.000014,-0.067349,0.031184,-0.031532,-0.032164,0.121535,-0.011069,-0.016755,-0.051454,0.011632,0.002079,0.010645,-0.015686,0.029104) * L3_10 + mat4(0.073800,0.047681,0.094365,-0.149805,0.070792,-0.144329,-0.340808,0.007337,-0.000294,0.034976,0.015976,0.000092,-0.006992,0.005840,-0.016438,0.031921) * L3_11 + mat4(-0.030152,-0.144138,-0.580978,0.188755,0.501722,0.157966,-0.101156,0.013174,-0.138360,0.019573,0.153672,-0.010758,0.079233,0.158584,0.376676,0.117453) * L3_12 + mat4(0.382221,0.094298,-0.365653,0.126748,-0.072224,-0.198307,-0.035141,-0.134415,-0.074282,-0.177853,-0.108198,0.361211,-0.102069,-0.102331,-0.246195,0.000389) * L3_13 + mat4(0.001411,0.010130,0.006719,-0.011780,-0.159952,0.300197,0.120574,-0.102955,-0.002547,-0.009409,0.007056,-0.047242,0.000296,0.023297,0.004596,0.001617) * L3_14 + mat4(0.006848,0.198674,-0.044756,0.168655,-0.042061,-0.038163,0.028506,0.023493,-0.082464,-0.035906,0.005554,-0.024464,-0.002508,0.004815,-0.022948,0.005733) * L3_15 + vec4(0.276326,-0.560050,0.695667,-0.387805)));\nvec4 L5_0 = sin((mat4(-0.018449,0.147474,-0.460990,0.042317,-0.118675,0.211031,-0.070496,0.356044,-0.145347,-0.162159,0.171983,-0.519200,-0.189975,0.254926,0.030611,0.080878) * L4_0 + mat4(0.194396,-0.234473,0.278385,-0.307391,0.066925,0.039375,0.383263,0.266153,-0.018806,-0.066333,0.045315,-0.015352,0.090415,0.004951,0.069152,-0.123878) * L4_1 + mat4(-0.251181,0.215072,-0.094445,0.435032,-0.128873,0.167238,-0.209580,0.153542,0.205575,-0.668595,-0.004716,-0.192813,0.217392,0.141440,-0.116615,0.302265) * L4_2 + mat4(0.551283,0.219849,-0.090402,-0.173095,-0.229017,-0.068567,-0.187015,-0.011096,-0.113406,0.194870,0.067696,0.070750,-0.026248,-0.412582,0.204814,-0.186152) * L4_3 + mat4(0.116519,0.151985,-0.129427,-0.258285,-0.141900,0.031213,-0.077249,0.232453,-0.654685,-0.811882,-0.160011,0.507513,-0.137655,0.018446,0.529226,-0.001244) * L4_4 + mat4(0.378505,0.298349,-0.050842,0.067548,0.353273,-0.552079,0.050402,0.453808,-0.174013,-0.277050,-0.107116,-0.030071,0.224614,0.095540,-0.078037,-0.045319) * L4_5 + mat4(-0.042197,-0.057229,-0.068173,-0.428225,0.240930,0.020223,0.224932,0.032896,-0.077164,-0.213034,0.189890,-0.095766,0.204142,0.308076,-0.170739,-0.188841) * L4_6 + mat4(0.061311,0.170179,-0.488783,-0.148180,0.393484,0.064268,-0.664369,-0.306906,-0.123312,-0.261346,-0.179519,-0.034320,0.092464,-0.252590,-0.020548,-0.133604) * L4_7 + mat4(0.212666,0.104056,-0.169216,-0.161061,0.149640,-0.288449,0.223946,0.103190,-0.063607,0.352686,-0.069988,0.032162,0.158104,-0.035225,0.070381,0.020342) * L4_8 + mat4(0.084662,-0.184296,-0.142085,-0.207282,0.583625,-0.062124,0.174518,0.422366,0.419876,0.420222,-0.154172,-0.477835,-0.163522,0.303583,-0.095651,-0.140446) * L4_9 + mat4(0.208209,-0.150778,0.225343,-0.102215,0.042636,-0.071134,0.100312,-0.267862,0.091623,0.232760,0.086119,0.049402,0.021812,-0.057906,0.056990,0.207082) * L4_10 + mat4(-0.030647,0.085868,0.030748,0.261884,-0.081508,0.185259,-0.024964,0.071271,-0.050657,0.120849,0.110816,0.483035,-0.058875,0.079447,0.048528,-0.040407) * L4_11 + mat4(-0.191973,0.445474,-0.079265,-0.036043,0.099359,-0.015399,-0.396474,0.419691,-0.064173,-0.041292,0.067254,0.157298,-0.014216,-0.041615,-0.079923,-0.140205) * L4_12 + mat4(-0.383536,0.172407,0.051126,0.253993,-0.026529,0.237156,-0.034765,0.148114,0.144532,-0.059560,-0.034646,0.442026,-0.382993,-0.373863,0.187461,0.067366) * L4_13 + mat4(-0.368152,0.080350,-0.022246,-0.040757,0.020955,-0.163616,0.128873,-0.103701,0.076446,0.020924,-0.111503,-0.043412,-0.104549,-0.007144,0.299921,-0.437007) * L4_14 + mat4(-0.091546,0.010917,0.421838,0.058106,0.064392,0.374051,-0.054967,-0.224326,-0.117209,0.120822,-0.248396,-0.055219,-0.210843,-0.255586,0.054346,-0.103456) * L4_15 + vec4(0.207913,-0.366291,0.040479,0.067036)));\nvec4 L5_1 = sin((mat4(0.108457,-0.222025,-0.143037,0.137529,-0.005232,-0.040708,-0.160732,0.249522,-0.125019,-0.023776,0.486727,0.404645,0.037731,0.171912,0.289436,-0.150712) * L4_0 + mat4(-0.129235,-0.032178,-0.080838,0.187080,-0.145947,-0.195926,-0.109294,-0.016544,0.177437,0.055294,0.073567,0.146723,0.022179,0.029721,0.274968,-0.187010) * L4_1 + mat4(-0.223916,-0.320990,-0.244135,-0.203926,-0.177449,-0.136652,-0.125731,0.234640,0.090541,-0.131005,-0.162254,-0.108654,-0.036428,0.007864,-0.283897,0.015809) * L4_2 + mat4(-0.135072,0.143204,0.074845,0.142334,-0.124907,-0.185513,0.126817,0.134101,0.049150,-0.021063,0.233237,-0.035668,0.023711,0.210148,0.656951,-0.355068) * L4_3 + mat4(-0.201821,-0.048653,-0.046040,0.028326,-0.194099,0.149418,0.187527,-0.272700,-0.010832,0.163749,0.145378,-0.062606,0.021482,0.097333,0.036858,0.052257) * L4_4 + mat4(-0.109551,-0.373949,-0.473676,0.115878,0.344637,0.461360,0.132613,0.527192,0.012904,0.203205,-0.249202,0.057324,-0.264927,0.111106,-0.109445,-0.089217) * L4_5 + mat4(0.035237,0.046984,-0.121248,-0.113812,0.123357,0.039604,0.075971,-0.254585,-0.202505,-0.294308,0.161181,0.166616,-0.108717,-0.202178,0.127577,0.365989) * L4_6 + mat4(0.128389,0.032997,0.176716,-0.023924,-0.354070,0.138141,0.027997,-0.322510,0.110486,-0.108614,0.128254,0.284771,-0.110309,0.331862,0.109785,0.176236) * L4_7 + mat4(-0.095689,-0.087207,-0.095213,-0.232885,0.218349,-0.378736,0.052804,0.152831,-0.013125,0.079267,0.365493,0.042201,-0.032114,0.013384,-0.046935,0.121051) * L4_8 + mat4(0.194993,-0.098513,0.366264,0.048097,-0.171372,0.209624,-0.821349,0.520438,0.062593,0.152954,-0.583681,-0.351098,0.201742,-0.168337,0.615002,0.128494) * L4_9 + mat4(-0.080601,0.041822,0.220882,-0.119626,-0.126115,-0.048211,-0.333412,0.068805,0.040736,0.345820,-0.027495,-0.102029,-0.104263,-0.056833,-0.025714,0.043355) * L4_10 + mat4(0.113713,0.095597,0.187602,-0.197396,-0.045127,-0.248166,-0.055323,-0.077371,0.149115,-0.181229,-0.436250,-0.170401,-0.003385,-0.054291,-0.223993,0.110695) * L4_11 + mat4(0.009666,0.042137,-0.246559,0.142817,-0.350767,-0.340208,-0.390130,-0.283482,0.064652,0.087996,0.022657,-0.059203,-0.068953,-0.014654,0.287913,-0.078492) * L4_12 + mat4(0.055273,-0.139270,-0.002446,0.034571,0.207562,-0.126704,0.258582,-0.084226,0.028890,0.214941,0.064736,-0.036363,0.090792,0.191254,-0.210571,-0.072065) * L4_13 + mat4(0.059140,0.335803,-0.002607,0.008475,0.031911,-0.111996,-0.155943,0.070943,0.039170,-0.102770,-0.051822,0.217872,0.274542,-0.010753,0.435648,-0.207771) * L4_14 + mat4(-0.166949,0.266127,-0.282335,0.001403,0.055712,0.188332,-0.458359,-0.088703,-0.148015,-0.266186,-0.028916,0.260290,0.111516,-0.051806,0.068174,-0.014291) * L4_15 + vec4(0.550455,0.151353,0.509236,0.806846)));\nvec4 L5_2 = sin((mat4(-0.485386,-0.053765,-0.165151,-0.193564,0.036728,-0.007423,0.170802,-0.028280,0.070308,0.064036,-0.283235,-0.110053,0.229356,0.148026,-0.183803,-0.126006) * L4_0 + mat4(-0.343933,-0.147824,-0.215765,-0.048206,0.555862,0.089531,0.029995,0.069199,-0.128581,0.027608,-0.519615,0.016475,-0.245563,0.141632,-0.206390,0.152641) * L4_1 + mat4(1.190876,-0.360196,0.425942,-0.360141,0.047378,-0.034142,0.216990,0.190519,-0.091504,0.023228,-0.186286,-0.028245,0.254360,-0.155328,-0.102886,-0.045801) * L4_2 + mat4(0.306715,-0.082195,0.000590,0.178549,-0.135702,0.073539,-0.009735,-0.091030,0.046508,0.123249,-0.075087,-0.145012,0.187119,0.097140,-0.110900,0.452976) * L4_3 + mat4(-0.270325,0.080052,0.053401,0.052915,-0.876041,-0.072855,-0.169408,0.216148,-0.633536,-0.201682,-0.402398,0.024577,0.288195,0.065927,-0.018148,-0.182396) * L4_4 + mat4(-0.003528,-0.074180,-0.232526,0.000426,-0.930539,0.640412,-0.458331,-0.219562,0.075655,-0.339663,0.021491,-0.217274,-0.126230,-0.167040,0.209974,-0.063170) * L4_5 + mat4(0.086258,-0.170106,-0.070210,0.177433,0.158393,0.184092,0.081372,-0.042081,-0.059923,0.171335,-0.403213,0.348060,0.396698,-0.071696,-0.115692,-0.164634) * L4_6 + mat4(-0.681783,0.069728,-0.197577,-0.374965,-0.094829,0.003461,-0.125125,0.637211,0.259933,-0.032060,-0.150948,-0.190979,0.399739,-0.044463,0.020304,-0.045580) * L4_7 + mat4(-0.323667,0.098621,-0.080580,-0.089885,-0.081375,0.040784,-0.281675,-0.209681,0.195710,0.081127,0.109646,-0.017980,-0.117927,-0.061782,0.116377,0.022956) * L4_8 + mat4(0.054412,0.032241,-0.037225,-0.030908,0.124529,-0.180895,-0.117387,-0.166718,0.582391,0.358252,-0.295376,0.446868,0.202259,0.002929,-0.013265,-0.552275) * L4_9 + mat4(-0.428799,0.078423,-0.216941,0.072784,-0.119962,-0.000893,0.201922,0.229727,0.202361,-0.068324,0.065230,-0.326870,0.025830,0.128588,-0.182331,-0.172493) * L4_10 + mat4(0.087286,0.149336,-0.162180,-0.001485,0.085391,-0.016213,-0.122949,-0.003811,0.445025,0.088989,0.313550,0.000766,-0.013149,-0.165237,0.021798,0.192990) * L4_11 + mat4(0.224112,0.173818,-0.047477,0.302067,-0.588841,-0.079891,0.178000,-0.064152,0.309857,0.166472,0.044283,-0.108233,-0.101802,0.161171,0.105051,0.027223) * L4_12 + mat4(-0.152566,-0.160680,-0.205526,-0.162924,-0.161328,0.165478,-0.235395,-0.316364,0.228033,0.108229,-0.097551,0.018296,0.197083,-0.073455,0.083566,0.106686) * L4_13 + mat4(-0.338648,-0.109108,-0.083163,-0.193757,-0.467306,0.025740,-0.035371,-0.162688,-0.282674,-0.010429,-0.057726,-0.247746,0.400817,-0.128172,0.198905,-0.259169) * L4_14 + mat4(0.597888,0.032144,0.147065,-0.095470,0.057221,0.278230,-0.090204,-0.036922,-0.170046,-0.303230,0.116563,0.212996,0.113605,0.124450,0.020141,0.169388) * L4_15 + vec4(0.665045,0.426892,0.441660,-0.793612)));\nvec4 L5_3 = sin((mat4(-0.272372,-0.105341,0.251229,0.407495,-0.011554,-0.012746,-0.125493,0.139498,0.082337,0.192203,-0.084132,-0.349481,-0.067762,-0.096612,0.137615,-0.128557) * L4_0 + mat4(-0.069393,0.223512,-0.282588,0.159580,0.177869,-0.096355,0.101225,-0.279330,0.060937,-0.156666,-0.279611,0.111594,0.141167,-0.022694,-0.010273,-0.046848) * L4_1 + mat4(-0.491823,0.081817,0.417511,0.286151,0.047310,-0.153749,-0.240586,-0.156454,-0.212813,0.207981,-0.231408,0.327271,-0.265892,-0.119881,0.131333,0.309010) * L4_2 + mat4(-0.032856,0.030952,0.377147,0.046819,-0.187974,0.062965,0.217358,-0.014296,0.023627,0.056585,-0.219240,0.006753,0.387726,0.443024,-0.294413,0.356224) * L4_3 + mat4(0.003636,-0.105808,0.070816,-0.062236,0.197705,0.371825,-0.296555,-0.211080,0.299885,0.451742,0.770723,-0.063424,-0.043042,0.044320,-0.721612,-0.242423) * L4_4 + mat4(-0.098788,-0.317201,0.259565,-0.120775,0.284631,-0.195505,-0.312658,-0.342099,-0.183674,0.245322,-0.071403,0.113216,0.014578,-0.201395,-0.421997,0.004276) * L4_5 + mat4(0.513450,0.094822,-0.519705,0.164110,0.023023,-0.131861,0.187675,0.082673,0.269761,-0.315132,-0.086703,-0.058118,0.221331,0.000630,0.273777,-0.248242) * L4_6 + mat4(-0.106919,-0.064876,-0.089035,0.187050,-0.372661,0.023790,0.832651,0.012074,-0.222135,0.096830,-0.056598,0.084484,-0.228781,-0.242257,0.414748,-0.227858) * L4_7 + mat4(-0.285153,0.051724,-0.119300,0.180146,0.111285,0.045799,-0.163288,0.091096,0.137287,0.146070,0.130680,-0.168307,-0.100205,-0.050495,-0.145668,-0.095131) * L4_8 + mat4(0.415821,0.156455,0.369524,0.021781,-0.244796,-0.227107,-0.555012,0.309867,0.136499,0.171476,0.485695,-0.176643,0.143826,-0.128054,-0.472362,-0.120448) * L4_9 + mat4(-0.119462,0.152012,0.068454,0.225759,0.400987,-0.076914,-0.524945,0.386576,0.088284,-0.199452,-0.043444,-0.099388,-0.027811,-0.077248,0.295183,0.132672) * L4_10 + mat4(-0.180816,0.017357,0.340273,0.001722,0.116621,-0.057770,0.152036,0.091689,-0.045675,-0.066455,0.051374,0.073330,-0.085110,0.030118,-0.128015,-0.040003) * L4_11 + mat4(0.220575,-0.203394,-0.210707,0.054644,0.071531,-0.236060,0.270614,-0.100813,-0.011490,0.011562,0.107064,0.004054,0.059237,-0.093796,0.294301,-0.141118) * L4_12 + mat4(0.118132,-0.453071,0.063554,-0.144598,-0.235596,0.029730,0.388416,0.418470,0.252925,-0.189663,0.197855,-0.213288,-0.176691,0.309228,-0.453237,-0.131107) * L4_13 + mat4(-0.055720,0.025200,-0.021388,0.009371,-0.279544,0.118269,0.524927,0.167762,-0.076767,-0.153725,0.106398,-0.026983,0.034584,-0.099925,0.240033,0.277007) * L4_14 + mat4(0.080738,0.144087,-0.042465,0.306321,0.193000,0.016895,-0.428116,0.427256,-0.049414,-0.021983,-0.095518,0.007752,0.099677,0.064562,0.177634,0.232454) * L4_15 + vec4(-0.652506,0.329714,0.143263,0.467181)));\nvec4 L5_4 = sin((mat4(0.127806,-0.232229,0.033420,0.033266,-0.202867,0.147336,-0.107864,-0.028995,-0.314109,-0.303465,0.097042,0.268508,0.020660,-0.127115,-0.044517,-0.030146) * L4_0 + mat4(-0.104561,-0.290898,0.070537,-0.302267,0.071122,0.017738,0.400840,-0.326483,-0.092918,-0.136910,0.226115,-0.046894,0.092339,0.148180,-0.048516,0.087105) * L4_1 + mat4(-0.538943,0.125407,-0.230743,0.042154,-0.278098,-0.233950,0.056461,-0.034795,0.254977,-0.067532,0.193435,-0.083038,-0.021870,-0.068323,-0.075855,0.423194) * L4_2 + mat4(0.035787,0.099465,-0.251938,-0.263617,0.065170,-0.288219,0.055058,0.147627,0.070815,0.012881,0.048115,0.117173,-0.331546,0.032040,0.018085,-0.247715) * L4_3 + mat4(0.073608,-0.230254,0.090162,0.130464,0.332048,-0.035585,-0.114084,-0.419092,-0.283832,0.157930,-0.003213,-1.027502,0.181507,0.021500,0.129337,-0.215820) * L4_4 + mat4(-0.190479,-0.017827,0.190300,-0.357046,0.189348,-0.207896,0.179253,-0.907449,0.164888,-0.063809,0.103520,-0.106266,-0.127091,-0.224719,0.144378,0.112730) * L4_5 + mat4(0.202356,0.594334,-0.115830,0.205913,-0.268712,0.197580,-0.066112,0.120456,-0.055883,-0.324993,0.075785,-0.086570,-0.154284,0.398232,-0.481313,0.143501) * L4_6 + mat4(0.479774,-0.433740,0.181244,0.139458,0.188853,0.084557,-0.666019,0.344659,-0.034733,-0.190154,-0.084285,-0.029574,-0.142347,0.004531,-0.146368,0.214901) * L4_7 + mat4(0.287414,-0.282289,0.076461,-0.443562,-0.094915,0.322086,0.103031,-0.078162,-0.518097,0.076521,0.035119,-0.120020,0.055490,-0.184548,0.058932,-0.246451) * L4_8 + mat4(-0.112367,0.166209,0.100992,0.163658,0.343836,0.093928,0.174352,-0.063672,0.074768,0.770359,-0.249325,0.019780,0.098573,-0.125979,-0.196821,-0.063232) * L4_9 + mat4(-0.110520,-0.259389,0.149866,0.101993,0.337835,-0.292940,0.491805,-0.116609,0.080426,0.019520,-0.110899,-0.172509,-0.208426,-0.335957,0.034054,-0.132693) * L4_10 + mat4(0.113054,0.035803,-0.044386,-0.027307,0.080882,0.137374,0.174315,-0.319763,0.211749,0.267797,-0.116329,0.622799,-0.056196,-0.107862,0.018744,-0.027151) * L4_11 + mat4(0.340484,0.054690,-0.308370,0.150752,1.026148,0.067537,-0.122427,0.368140,-0.029799,-0.021784,0.076774,0.122978,0.020723,0.008850,0.208733,0.170292) * L4_12 + mat4(0.156760,-0.291142,-0.258493,0.171440,0.058017,-0.070362,-0.249827,-0.214244,0.267516,0.337563,-0.068649,0.055176,-0.400998,-0.097670,0.113992,0.300596) * L4_13 + mat4(0.382473,0.149257,-0.183868,-0.033068,-0.071403,0.067125,-0.212548,-0.512713,0.032847,-0.321751,0.004400,-0.288252,0.043072,-0.133168,0.117812,0.029479) * L4_14 + mat4(-0.001887,-0.137861,0.080249,-0.352098,0.035477,-0.209235,0.121118,-0.196060,-0.007108,-0.078878,0.007761,0.060869,-0.141585,0.330562,0.143668,0.115020) * L4_15 + vec4(-0.753576,-1.052040,0.614714,-0.176978)));\nvec4 L5_5 = sin((mat4(-0.011305,0.105951,0.384925,-0.045629,0.188365,0.056670,0.072374,0.338064,0.030847,0.125358,0.345551,0.202312,0.062573,-0.140970,-0.155597,0.367268) * L4_0 + mat4(-0.062040,-0.092960,-0.014997,0.083369,-0.086234,0.166006,-0.098759,-0.056090,0.125298,0.169495,-0.458573,0.092821,-0.132853,0.082071,-0.143188,0.120934) * L4_1 + mat4(-0.241901,-0.573671,-0.089632,0.808268,0.051675,0.208334,0.153883,0.230631,0.181814,0.137660,-0.273488,-0.434193,-0.056530,0.150712,0.093198,-0.093049) * L4_2 + mat4(0.107650,-0.275189,0.035116,-0.027828,-0.063540,-0.058062,0.195908,0.010293,0.064847,-0.091607,-0.190613,0.126692,0.322244,0.141658,-0.113749,-0.112672) * L4_3 + mat4(0.023660,0.133054,0.051886,0.073207,0.117365,0.088554,-0.127845,-0.082290,0.637283,0.123590,-0.038006,-0.083388,0.178640,0.402138,0.220043,0.156862) * L4_4 + mat4(-0.084452,0.270303,0.172579,0.111290,-0.036135,-0.415397,0.248601,-0.228645,0.441232,0.375729,-0.358212,0.080556,-0.149288,0.353256,-0.038292,0.032072) * L4_5 + mat4(-0.192158,-0.002991,-0.282777,-0.252648,0.029320,0.114304,-0.013642,0.068089,-0.095378,0.018677,0.243260,0.406418,-0.194130,0.070199,-0.386291,-0.384725) * L4_6 + mat4(-0.288429,0.191527,0.276790,0.476257,-0.166041,-0.242868,0.068827,0.394097,-0.078366,-0.099606,0.002641,0.104208,0.016909,0.156689,-0.346951,0.341336) * L4_7 + mat4(0.054300,-0.024893,0.005356,-0.422413,0.046480,-0.255708,0.192230,0.323173,0.086800,-0.106090,0.057548,0.081114,0.126079,0.103235,0.085454,-0.026107) * L4_8 + mat4(0.117491,-0.029911,0.134050,-0.434983,-0.169021,0.099345,-0.126594,-0.155116,-0.294165,-0.037224,-0.231013,-0.260619,0.392457,0.509701,-0.023379,-0.129610) * L4_9 + mat4(0.038558,0.093407,0.625849,0.174273,0.123851,0.229241,0.013080,0.163177,0.012899,0.172662,0.268258,0.177326,0.054033,-0.085761,0.258884,0.162668) * L4_10 + mat4(0.007759,-0.241849,-0.145254,0.008810,0.130173,0.013544,0.133126,-0.028024,0.123647,-0.159110,-0.130260,-0.433027,0.046555,0.252739,-0.076081,0.036593) * L4_11 + mat4(-0.405918,-0.159804,-0.016651,0.265689,-0.288751,-0.109386,0.369359,-0.591394,-0.047589,-0.115604,-0.129729,-0.029656,-0.069687,-0.036113,0.239018,0.340031) * L4_12 + mat4(0.125252,0.144461,0.015859,0.163853,0.037233,0.134812,-0.180267,-0.088878,-0.068801,-0.095258,0.379702,-0.169599,0.142665,0.038825,0.080569,-0.357583) * L4_13 + mat4(-0.167103,-0.321215,0.111459,-0.114639,0.079233,0.089500,-0.016652,0.140253,0.114779,-0.031501,0.094511,-0.225474,0.285138,-0.253666,0.093992,-0.413823) * L4_14 + mat4(0.170243,-0.101158,0.287027,-0.320624,-0.015097,-0.083370,-0.097929,0.115460,0.121991,0.081499,0.437555,0.206441,-0.032281,0.019642,-0.181770,0.036452) * L4_15 + vec4(1.298188,0.676724,-0.327853,-0.980433)));\nvec4 L5_6 = sin((mat4(0.065232,0.047333,-0.089230,0.026859,0.107208,-0.022426,-0.050202,0.155848,0.126190,0.011664,-0.221746,0.135387,-0.268117,-0.014322,0.071713,-0.219094) * L4_0 + mat4(0.245078,-0.197387,-0.117519,-0.006615,-0.016248,0.070303,0.251191,0.005002,0.351463,0.124118,-0.172648,0.214063,0.215986,-0.051943,0.096972,-0.296626) * L4_1 + mat4(-0.507588,0.593692,-0.107673,-0.076880,-0.068041,0.074721,-0.123825,0.205168,0.142297,0.083090,0.179160,0.315248,0.030624,-0.177057,0.180726,0.068743) * L4_2 + mat4(0.072258,0.112870,-0.109633,-0.005173,0.022481,-0.021029,-0.162098,0.356241,0.016308,0.044576,-0.136407,-0.035098,0.261827,-0.150619,-0.113382,-0.064471) * L4_3 + mat4(-0.136542,-0.073838,-0.127942,0.291810,0.386842,0.001137,-0.293315,-0.093159,0.304552,-0.075255,0.073661,0.152145,0.435884,-0.152573,-0.026881,0.010434) * L4_4 + mat4(0.178930,-0.260860,0.323952,-0.203130,-0.147220,-0.127814,0.573110,0.192761,0.301189,0.133333,-0.149047,0.457979,0.046020,-0.004221,-0.180563,-0.046948) * L4_5 + mat4(0.018097,0.104464,0.179536,-0.221818,0.340977,-0.126661,-0.019235,-0.001690,-0.022623,-0.175531,-0.275835,0.078119,-0.076891,-0.219812,-0.027272,0.066904) * L4_6 + mat4(-0.074506,-0.443856,0.087786,0.131130,0.198827,0.056358,0.380887,-0.033748,-0.405108,0.007064,-0.198407,0.032202,-0.479621,-0.093896,-0.193839,-0.091086) * L4_7 + mat4(-0.006306,-0.118205,-0.195181,0.437151,0.054240,-0.069426,-0.006848,0.038977,-0.412059,-0.276967,-0.063911,0.016413,0.183561,-0.116115,-0.066209,0.187739) * L4_8 + mat4(0.142138,-0.120372,-0.192894,-0.017204,-0.036288,0.449293,-0.286489,0.153257,0.102023,0.163614,0.519898,-0.172381,0.452498,-0.182609,-0.041679,0.286754) * L4_9 + mat4(0.147375,-0.120968,0.060836,0.019293,-0.023041,0.212317,-0.020596,0.117507,0.224432,-0.197755,0.223005,-0.105185,-0.500297,-0.100014,-0.125276,-0.006534) * L4_10 + mat4(-0.133442,-0.024811,0.241628,-0.103901,0.161609,-0.039381,0.000465,0.162554,-0.144432,0.270477,0.146077,0.010610,0.104488,0.052023,-0.073043,0.113683) * L4_11 + mat4(-0.282544,-0.069805,0.150436,-0.161721,-0.191114,-0.394503,-0.157418,0.154793,-0.116155,0.128190,0.049808,-0.110684,-0.093156,-0.009804,0.059286,-0.023416) * L4_12 + mat4(0.133750,-0.219643,-0.044672,-0.189285,0.361290,-0.075875,-0.210886,0.124673,0.052596,-0.090967,0.323909,-0.281331,-0.107072,0.196591,-0.060743,-0.162177) * L4_13 + mat4(-0.118119,0.124842,-0.125534,0.095407,-0.306998,-0.302079,0.357844,0.055788,-0.246119,-0.093168,-0.306638,0.227697,0.587013,0.086429,-0.036765,-0.178025) * L4_14 + mat4(0.084110,-0.135527,-0.479216,0.018920,-0.294215,0.223173,0.160136,-0.147583,0.119697,-0.070493,-0.214071,0.283200,-0.083581,0.105344,0.033516,-0.119707) * L4_15 + vec4(-0.323067,-0.071393,-0.362663,0.078340)));\nvec4 L5_7 = sin((mat4(0.014048,0.293222,-0.191799,-0.052715,-0.114997,0.223746,0.009352,-0.035012,-0.134244,0.113487,0.078293,-0.233118,-0.054076,-0.075266,0.293136,0.080151) * L4_0 + mat4(-0.001645,0.066294,0.297389,-0.102879,0.080230,0.060332,0.389041,-0.079769,0.229201,0.047416,0.238380,-0.006878,-0.117541,0.117694,-0.004449,0.010099) * L4_1 + mat4(-0.722825,0.098519,0.221516,0.053028,0.067470,0.439639,0.105041,-0.086367,0.199849,-0.263673,-0.052114,-0.152019,0.007924,0.083952,0.008043,0.082578) * L4_2 + mat4(0.313296,0.273756,-0.094594,-0.262401,0.058004,0.476605,-0.228967,-0.170011,-0.153514,-0.178189,-0.046807,-0.216805,-0.368280,0.388684,-0.332456,-0.033738) * L4_3 + mat4(0.026383,0.263910,-0.221139,-0.120010,-0.270099,-0.251320,-0.374668,-0.083994,0.177340,0.077054,-0.538265,-0.202874,-0.118833,0.227594,0.044278,-0.245464) * L4_4 + mat4(-0.271353,0.446671,-0.073646,-0.118017,0.490026,0.162310,0.325470,-0.100027,0.156067,0.125607,-0.248421,-0.001656,-0.008312,-0.160498,-0.135794,0.183723) * L4_5 + mat4(-0.412551,-0.411501,-0.149466,0.094083,0.312884,0.276874,0.440730,-0.284403,-0.285547,0.335535,-0.136189,-0.020993,-0.306135,-0.395025,0.237905,-0.077110) * L4_6 + mat4(-0.204936,0.196179,-0.092354,-0.437188,-0.148326,0.569148,-0.098216,0.263509,-0.099220,0.049123,0.129934,0.070224,0.338748,0.005380,-0.265618,0.231045) * L4_7 + mat4(0.399674,-0.146626,-0.111713,0.061624,-0.404268,0.111258,-0.030717,-0.075051,-0.030161,-0.068375,-0.092581,-0.198908,0.090252,0.102657,-0.169149,0.104839) * L4_8 + mat4(0.105121,0.033581,-0.023208,-0.081225,-0.013554,-0.235886,0.072657,0.128431,-0.429950,-0.028750,-0.061711,0.180566,0.493732,0.138850,0.282031,-0.646182) * L4_9 + mat4(-0.013433,0.309582,-0.294658,-0.106329,-0.086721,-0.189840,-0.221134,0.443251,0.155222,-0.225201,-0.050719,0.051393,0.087105,0.268427,0.054327,0.072788) * L4_10 + mat4(0.162216,-0.233160,0.106662,0.167478,-0.155128,-0.082036,0.096715,-0.123649,-0.009141,-0.087105,-0.282167,-0.259372,0.118384,0.298957,-0.000505,0.003437) * L4_11 + mat4(-0.346444,-0.051998,0.311969,0.149780,-0.262680,0.492804,-0.330979,-0.160334,-0.176727,-0.229908,0.275152,0.014874,-0.197430,0.134729,-0.354108,-0.152261) * L4_12 + mat4(-0.121280,0.073154,0.165692,0.178677,-0.081972,0.098124,0.242314,-0.121660,0.067190,-0.224808,0.217091,0.077631,-0.101617,-0.282489,-0.110721,0.140225) * L4_13 + mat4(-0.352262,-0.192958,-0.256093,0.080169,0.287678,0.119940,-0.067821,-0.143690,0.044402,0.144437,0.186959,-0.192629,0.324509,0.090828,0.310933,0.245617) * L4_14 + mat4(0.069905,-0.277432,-0.219974,0.417481,-0.336837,-0.051099,0.120636,0.056552,0.078765,0.486437,-0.204932,-0.082606,-0.042504,-0.185250,0.003515,0.080275) * L4_15 + vec4(0.317025,-1.457674,-1.174591,0.306935)));\nvec4 L5_8 = sin((mat4(0.013107,0.128126,-0.161179,-0.397809,0.104890,-0.107223,-0.071542,-0.013612,0.488165,-0.399744,0.449237,0.298833,0.019246,0.021806,0.149163,0.173651) * L4_0 + mat4(0.358422,-0.397512,0.164393,-0.118179,-0.059035,-0.111761,0.088964,0.234865,-0.089682,0.139539,0.167972,0.069131,0.017956,-0.180659,-0.100082,-0.063331) * L4_1 + mat4(0.184912,0.051461,0.485483,0.015043,0.042262,0.125400,-0.028507,-0.151278,0.054840,0.008308,0.216182,-0.030696,0.202255,-0.019407,-0.129161,-0.075654) * L4_2 + mat4(0.045298,0.265621,-0.021634,0.053900,-0.066657,-0.241464,-0.003526,0.065301,0.005016,-0.123570,0.047780,0.120596,0.128469,0.315204,0.289621,0.053215) * L4_3 + mat4(0.093806,0.111961,-0.039242,-0.141190,-0.073662,0.041102,-0.068843,-0.259502,0.156599,-0.064889,0.368421,-0.245005,-0.149521,-0.065736,-0.280791,0.030211) * L4_4 + mat4(0.052571,-0.024246,-0.152936,-0.011770,-0.104144,0.036438,0.075727,-0.304948,-0.168965,0.075285,0.128558,0.009078,0.036735,0.083645,-0.136753,-0.062225) * L4_5 + mat4(-0.020480,-0.242086,0.057749,0.284066,0.230346,0.283562,0.083804,-0.023272,0.149819,0.082280,-0.055561,-0.017459,0.030267,-0.191110,0.047957,0.143518) * L4_6 + mat4(-0.054595,-0.526098,-0.359918,-0.092931,-0.057697,0.180372,0.070956,-0.111093,0.038878,0.386092,-0.135323,-0.026514,0.180677,0.194069,-0.131060,-0.160199) * L4_7 + mat4(-0.095732,0.111562,-0.059874,-0.417309,-0.069928,0.080914,0.012943,-0.008429,-0.260403,-0.147004,0.076882,0.117404,0.084237,0.072778,-0.050231,-0.187768) * L4_8 + mat4(0.014104,-0.150108,0.011761,-0.129764,0.218096,0.173426,0.099176,0.337685,0.046716,-0.378458,-0.527109,0.252826,-0.376194,0.182074,-0.113881,-0.202292) * L4_9 + mat4(0.038138,0.003819,-0.125121,-0.208982,-0.128739,0.270733,-0.047409,0.027174,0.092385,0.207089,0.055496,-0.128586,-0.048632,-0.113141,0.001659,-0.181764) * L4_10 + mat4(-0.057444,-0.000419,0.180862,0.138791,-0.212859,-0.224528,0.136361,0.018723,0.306545,0.082696,-0.208206,-0.094574,0.111034,0.159758,-0.080359,-0.103106) * L4_11 + mat4(-0.074417,0.016016,-0.250962,0.295458,0.195484,0.344708,-0.123780,0.075379,-0.103627,-0.162257,0.089920,0.198167,0.009558,0.053636,-0.033652,-0.022247) * L4_12 + mat4(0.040108,0.268262,-0.073152,0.000940,-0.000490,-0.186258,0.033270,-0.057302,0.028697,-0.032054,-0.159235,0.080755,0.116714,-0.000345,0.054472,0.136565) * L4_13 + mat4(-0.318241,-0.188093,0.016661,0.000491,-0.267134,-0.242200,-0.278143,-0.150479,-0.138064,0.129032,0.316397,-0.173499,0.194303,0.105947,-0.118929,0.093985) * L4_14 + mat4(-0.145826,-0.580100,0.169877,0.181517,-0.060617,-0.198215,0.074192,0.104687,0.035665,0.017121,-0.145902,-0.230288,-0.045608,-0.000850,0.016133,0.145995) * L4_15 + vec4(0.302569,0.592537,0.163259,-0.444442)));\nvec4 L5_9 = sin((mat4(0.296028,-0.317464,-0.107532,0.057305,0.020109,-0.002813,-0.210286,0.000878,-0.107609,0.153290,-0.280403,0.106759,0.254903,-0.021550,0.018019,0.045734) * L4_0 + mat4(0.052533,-0.046007,-0.088822,-0.316490,-0.177678,0.260946,-0.175929,-0.096728,-0.224808,0.081877,0.036266,-0.120189,-0.137397,0.155578,0.152132,0.164532) * L4_1 + mat4(0.503229,-0.090294,0.083986,0.390880,-0.102245,-0.118142,-0.086344,0.086055,-0.176846,0.113171,0.154439,-0.283329,0.051333,-0.108343,0.360821,-0.070884) * L4_2 + mat4(0.104462,-0.019314,0.317507,0.051183,-0.066313,0.066492,-0.257966,0.399652,-0.020631,0.094459,-0.128547,0.158065,0.199939,-0.233855,0.098912,-0.200462) * L4_3 + mat4(-0.171730,-0.156083,-0.037982,0.036701,0.407577,0.046904,-0.332968,-0.106573,0.101457,-0.536032,0.622456,-0.131857,-0.161815,0.194141,-0.009129,0.016103) * L4_4 + mat4(0.251840,0.205369,0.445772,-0.325598,-0.352146,-0.429667,0.228372,-0.483519,-0.349576,0.118749,0.189682,-0.130196,-0.048858,0.020017,-0.066191,0.360613) * L4_5 + mat4(-0.324928,0.281032,0.035304,0.128867,0.128850,-0.072131,0.069717,-0.019655,-0.183441,-0.524128,0.122577,-0.226993,-0.309964,-0.248798,0.155457,-0.178007) * L4_6 + mat4(0.177218,0.063876,0.023345,0.072036,0.234227,-0.370245,0.182992,0.148652,0.051354,-0.041068,-0.027942,0.271995,-0.253955,0.328086,0.223397,0.289408) * L4_7 + mat4(-0.072975,-0.047523,0.059521,-0.231310,0.107093,0.150385,-0.098983,-0.094965,0.040949,-0.303071,-0.217759,-0.044491,-0.110507,-0.179321,0.066637,-0.063705) * L4_8 + mat4(-0.069541,-0.205642,0.149180,-0.130428,-0.239363,-0.044427,-0.338052,-0.142935,0.219021,0.116154,0.111326,0.501721,0.154372,0.150568,0.043674,0.074817) * L4_9 + mat4(0.102938,0.204888,0.085551,-0.264711,-0.320035,-0.060945,-0.121158,-0.005551,0.113937,0.243069,-0.220553,0.117136,0.406367,-0.138962,-0.094275,-0.068772) * L4_10 + mat4(0.185111,0.000984,-0.179526,0.001871,0.063459,-0.043559,-0.067917,-0.463029,0.013857,0.348852,-0.139793,0.125548,-0.322946,0.035021,0.222242,-0.161132) * L4_11 + mat4(0.109422,-0.020871,0.034639,0.095888,-0.193651,0.183179,-0.396403,0.010422,0.196992,0.025498,-0.092081,0.183456,0.305146,0.150286,-0.029160,0.177291) * L4_12 + mat4(0.197939,0.226360,0.300670,0.168085,-0.058805,-0.223158,-0.291907,0.076241,0.266642,0.346851,0.077353,0.016401,0.013148,0.006220,0.010320,0.085859) * L4_13 + mat4(0.413517,0.043790,-0.212986,0.018057,-0.097219,0.155781,0.226743,-0.018452,0.116631,-0.323699,0.226904,-0.202932,-0.122148,-0.056657,0.079969,0.183390) * L4_14 + mat4(0.222087,-0.358901,-0.121807,-0.000676,-0.073364,-0.195782,-0.296725,0.201444,-0.152892,-0.122302,0.046436,-0.342198,0.051747,0.053457,-0.063503,-0.073480) * L4_15 + vec4(0.583439,0.680255,1.468790,-0.774895)));\nvec4 L5_10 = sin((mat4(-0.059363,-0.300755,0.025555,0.027274,0.108033,0.162695,-0.233807,0.026930,-0.024940,-0.289909,-0.150943,0.288043,-0.259069,0.125987,0.245755,0.202605) * L4_0 + mat4(-0.230924,-0.059587,-0.278203,-0.171826,0.201732,-0.030395,0.135761,0.058546,-0.020399,-0.271328,-0.130408,0.240906,0.051149,-0.070292,0.015561,0.035433) * L4_1 + mat4(-0.207727,0.176899,0.078488,-0.080342,-0.002800,-0.047484,-0.196043,-0.151006,-0.059484,-0.165690,0.157015,-0.109087,-0.103293,-0.330800,-0.030660,0.123890) * L4_2 + mat4(-0.323343,0.099232,0.081538,-0.085607,-0.122561,0.010018,0.101745,0.168432,-0.169615,0.098620,0.006103,0.091385,0.127149,-0.106680,0.088986,0.022640) * L4_3 + mat4(0.163146,-0.006731,-0.094842,-0.005140,-0.282935,0.104129,-0.179135,-0.051821,-0.472411,-0.265470,-0.628412,-0.236003,0.060548,-0.101461,-0.124937,-0.157462) * L4_4 + mat4(0.656295,-0.089359,-0.334261,0.152402,0.574482,0.296001,-0.510391,-0.376626,0.294644,-0.429122,0.083404,-0.149287,0.119726,-0.256729,-0.205960,-0.132101) * L4_5 + mat4(0.450162,-0.060685,0.221385,-0.071153,-0.059120,0.110626,-0.263887,0.033266,-0.397475,0.147255,-0.354300,0.003498,0.061799,-0.341566,-0.135279,-0.113043) * L4_6 + mat4(0.194588,0.098209,-0.019847,0.137257,0.198637,0.095276,0.212579,0.045461,0.001290,-0.036632,0.140384,0.000495,-0.097013,-0.405013,0.103119,-0.069170) * L4_7 + mat4(-0.148890,0.141452,-0.250568,0.073043,-0.283650,0.043721,0.219404,-0.076750,0.199296,0.049963,0.034447,-0.121784,-0.081062,0.022886,-0.128985,-0.144603) * L4_8 + mat4(-0.047511,-0.096969,0.004887,0.038628,-0.252038,-0.434502,0.351940,0.105216,0.231738,0.021508,0.340270,0.046892,-0.155059,-0.028228,-0.494714,-0.008632) * L4_9 + mat4(0.268845,-0.236656,-0.209680,0.146131,0.104206,-0.025827,0.115269,0.152585,-0.032207,-0.052145,0.143673,-0.308166,-0.340405,0.102634,-0.060543,-0.015013) * L4_10 + mat4(-0.099877,0.020866,0.247206,0.136616,-0.021065,-0.149873,-0.123976,-0.067877,-0.128707,0.094995,-0.389535,0.091601,-0.038943,-0.179830,0.066794,-0.113476) * L4_11 + mat4(0.148482,-0.021323,0.509171,-0.032299,-0.305690,-0.327066,1.004982,-0.341522,0.023199,-0.015687,0.151864,0.195265,0.117502,0.142466,-0.120330,0.151912) * L4_12 + mat4(-0.147299,-0.195280,-0.514330,0.054499,0.002370,-0.174206,-0.345585,0.037670,-0.055708,-0.077270,0.051946,0.138327,-0.115361,0.180893,0.029753,0.107680) * L4_13 + mat4(0.405897,-0.018872,0.053983,0.000567,0.230815,-0.204339,-0.021464,-0.050629,-0.236650,-0.033551,-0.213161,-0.128252,0.145519,-0.001799,0.493014,-0.295053) * L4_14 + mat4(-0.285401,-0.054261,0.200570,-0.015341,0.331830,0.229682,0.073438,0.078365,0.196252,-0.191606,-0.161724,-0.266781,0.509590,0.045665,0.199969,0.075978) * L4_15 + vec4(0.598245,-0.227708,0.979135,0.006357)));\nvec4 L5_11 = sin((mat4(0.151214,-0.168542,0.081579,-0.021964,0.087492,-0.036411,0.139492,-0.030249,0.084164,-0.178697,0.162722,0.049076,0.203053,-0.122703,0.195550,-0.068038) * L4_0 + mat4(-0.114138,-0.084944,-0.398068,0.029180,0.061620,-0.068841,-0.027754,-0.057179,-0.105389,0.097932,0.059041,-0.026618,-0.088084,-0.043414,-0.179066,-0.024898) * L4_1 + mat4(0.180906,-0.275535,0.190864,0.181143,0.119657,0.215915,0.037457,-0.039876,-0.073613,-0.154566,-0.110060,0.085995,-0.065585,-0.082158,0.114138,0.081521) * L4_2 + mat4(-0.063547,-0.108240,0.271765,0.021690,0.093239,-0.293957,-0.170320,0.033474,-0.160537,-0.068047,0.006416,-0.029841,-0.083315,-0.237009,-0.016080,0.041623) * L4_3 + mat4(0.086281,0.063419,0.137600,-0.023931,-0.255415,-0.013239,-0.028557,0.102576,-0.086716,0.052099,0.075000,-0.264185,-0.325354,0.536832,-0.016589,0.025573) * L4_4 + mat4(0.199564,-0.118057,0.129230,-0.092289,0.192619,-0.361798,0.280809,-0.937519,-0.052623,-0.068084,-0.054652,0.042292,-0.152239,0.104285,0.033520,0.049847) * L4_5 + mat4(-0.262121,-0.069705,0.083790,0.032233,-0.135503,-0.307835,0.404650,0.014839,0.010595,-0.050578,0.135999,-0.170804,0.141906,-0.146751,-0.069385,0.208793) * L4_6 + mat4(0.001662,-0.088968,-0.087608,0.286790,0.127021,0.082070,0.006909,0.137425,-0.017654,-0.203803,-0.300542,-0.047106,0.426988,0.135645,-0.137424,-0.039920) * L4_7 + mat4(0.171959,0.056531,0.081992,0.061630,-0.076266,-0.119381,0.104117,-0.076493,0.180906,-0.009094,0.022996,0.025959,0.040740,0.114827,0.038553,-0.080318) * L4_8 + mat4(0.093578,-0.002221,0.034574,-0.043096,-0.007884,0.182440,-0.199010,0.104930,-0.049014,0.059087,0.864551,0.010605,-0.427388,0.252464,0.285158,-0.096232) * L4_9 + mat4(-0.068941,-0.044742,-0.181576,0.073072,0.006379,-0.063921,0.025945,-0.033984,0.003501,-0.079601,-0.112695,-0.032797,0.100180,-0.231876,0.028061,0.078404) * L4_10 + mat4(0.093646,-0.145481,0.171343,0.045191,0.049913,-0.125799,0.053185,-0.024741,-0.277362,0.380749,0.334571,0.073061,0.037412,0.273374,0.199104,0.020472) * L4_11 + mat4(0.061909,0.134372,-0.286319,0.081573,0.654611,-0.135634,-0.733289,0.214092,-0.049237,-0.234968,-0.138682,-0.009562,0.055156,-0.043019,0.046487,0.003701) * L4_12 + mat4(-0.147647,0.029290,-0.147222,0.096961,0.000926,-0.141265,0.062687,-0.108682,0.012912,-0.070972,0.392900,-0.017147,-0.066398,0.263660,-0.164195,0.060626) * L4_13 + mat4(0.093616,-0.096724,-0.076568,-0.007902,0.168827,0.225328,-0.148894,0.058863,0.232129,0.031448,0.089505,-0.063342,0.019202,-0.048212,0.109299,-0.063165) * L4_14 + mat4(-0.112394,-0.472634,0.141082,-0.030726,0.014808,-0.204991,-0.034022,-0.062552,0.216942,0.124340,0.042762,0.035487,0.117144,-0.113608,-0.064149,-0.086467) * L4_15 + vec4(-0.392713,0.237763,0.026822,0.487977)));\nvec4 L5_12 = sin((mat4(0.029166,0.037135,-0.012545,-0.190419,-0.104037,0.195036,-0.140939,0.057745,0.693171,0.109723,0.075723,0.176367,0.109599,0.104978,0.021530,0.150652) * L4_0 + mat4(0.157965,0.199750,-0.216441,0.033963,-0.006882,0.042353,-0.149158,0.313398,0.365479,-0.376599,-0.056308,0.315628,-0.100646,0.197337,-0.016927,-0.116158) * L4_1 + mat4(0.262112,-0.753741,0.645401,0.101136,0.127267,-0.175010,0.201089,-0.261967,-0.023165,0.053090,0.035761,0.217893,0.073655,0.205271,0.235854,-0.100523) * L4_2 + mat4(-0.180864,-0.013646,-0.119688,0.573070,-0.053423,-0.175525,0.137034,-0.137093,0.019978,-0.193521,-0.029253,-0.056028,0.029299,0.018147,-0.134502,-0.020639) * L4_3 + mat4(0.029289,-0.025074,-0.006341,-0.032219,-0.037099,0.172689,-0.208420,0.046139,-0.790719,0.121364,-0.195470,-0.086113,0.025956,0.096290,-0.147123,-0.035090) * L4_4 + mat4(0.146638,0.308337,0.013629,0.015937,0.109712,-0.063284,-0.009719,-0.363360,0.085902,-0.186646,0.110066,0.155651,0.417625,-0.167862,-0.014952,0.040210) * L4_5 + mat4(0.224510,0.027906,-0.014961,-0.184070,0.057090,-0.012983,0.061253,0.124170,0.171331,-0.124818,0.211774,0.117781,0.018252,0.029949,0.178976,-0.226878) * L4_6 + mat4(0.133743,0.185620,0.165247,-0.215267,-0.412604,0.118272,0.090570,0.477526,-0.162018,-0.208029,0.157058,-0.201187,-0.096463,0.316020,0.305964,-0.110031) * L4_7 + mat4(-0.124963,0.110292,0.138827,-0.162052,-0.194960,0.075502,-0.041319,0.140019,0.079416,0.191070,-0.043826,-0.194069,-0.089089,-0.033582,0.007568,0.165510) * L4_8 + mat4(0.092250,0.087175,-0.043122,-0.321624,0.553081,-0.158085,0.089521,-0.026824,0.097827,-0.162925,0.121381,0.224806,-0.227059,-0.251463,0.166066,-0.264467) * L4_9 + mat4(-0.238485,0.209809,-0.076399,0.255168,0.350314,0.086169,-0.406181,0.071412,-0.095862,-0.264538,-0.045111,-0.265809,-0.379806,0.146205,-0.098495,-0.092656) * L4_10 + mat4(0.082662,-0.110916,0.002944,0.204712,0.257655,0.104219,-0.100790,-0.018647,-0.306990,0.020690,-0.125789,-0.139043,0.049796,-0.064248,0.069939,-0.031106) * L4_11 + mat4(0.102804,-0.117510,-0.053065,-0.231020,-0.487263,0.380572,-0.300499,0.032158,0.258531,-0.080658,0.036786,0.029822,-0.144380,-0.187965,0.081488,-0.033201) * L4_12 + mat4(0.031255,-0.041968,-0.018565,-0.045606,0.011123,0.108846,0.084450,-0.143828,-0.121042,0.029845,0.119779,-0.105446,0.205575,-0.024599,-0.091083,0.270087) * L4_13 + mat4(-0.364610,-0.218027,-0.191545,0.035995,-0.130388,0.291828,0.126210,-0.192396,-0.094009,-0.043282,0.015709,-0.167031,0.197401,-0.420065,-0.182855,-0.120207) * L4_14 + mat4(-0.140852,0.100140,-0.325351,0.038115,-0.095950,0.065026,-0.263511,0.106287,-0.174804,0.101794,0.041159,-0.412746,0.153678,0.248972,0.034784,-0.148195) * L4_15 + vec4(1.150598,0.936831,-0.204286,-0.596304)));\nvec4 L5_13 = sin((mat4(-0.048664,0.023277,-0.320130,0.124940,-0.171686,-0.010572,0.156527,0.087061,-0.117352,0.252962,0.109421,0.059718,-0.045873,0.090106,0.364818,-0.191338) * L4_0 + mat4(0.181148,-0.175774,-0.510276,0.240748,-0.259774,0.055168,-0.149833,0.134842,0.014315,-0.052792,-0.040853,0.003049,0.123879,0.033396,0.076132,-0.082882) * L4_1 + mat4(0.031381,-0.093968,0.368420,-0.084786,-0.048011,0.065247,-0.116182,0.208332,0.147135,-0.014571,0.189271,-0.109069,-0.402083,-0.065273,-0.098608,0.110139) * L4_2 + mat4(-0.104632,-0.174434,0.099245,0.044343,0.130301,0.078137,0.219804,0.240438,0.039377,-0.017709,0.023680,-0.020396,0.665471,0.058174,0.430557,0.198400) * L4_3 + mat4(0.036020,0.080876,0.078323,-0.033405,0.046459,-0.225050,0.057607,0.148795,0.439025,-0.264961,-0.001572,-0.218951,-0.045661,-0.006262,-0.402110,0.133204) * L4_4 + mat4(-0.359275,0.261618,0.097973,-0.119803,0.387672,0.231368,0.097494,0.243890,-0.029548,-0.112541,0.416398,0.067408,-0.239172,0.032552,-0.387635,0.296355) * L4_5 + mat4(0.259712,-0.013325,-0.112061,-0.222168,0.056784,0.133104,-0.252657,0.048547,-0.089557,-0.097418,-0.037733,-0.192186,-0.186853,-0.040985,-0.236282,-0.192285) * L4_6 + mat4(0.146809,0.052117,-0.321406,-0.044220,0.155083,-0.037279,0.201323,0.028870,-0.051685,0.029492,0.001153,0.068445,-0.042930,0.325506,0.374719,-0.080651) * L4_7 + mat4(0.112760,0.008412,-0.310823,-0.073331,-0.091282,-0.446141,0.412664,0.166221,-0.046633,-0.040037,0.347470,-0.163053,-0.078745,-0.057422,-0.028954,0.113454) * L4_8 + mat4(0.162597,0.014598,-0.032270,-0.046527,-0.199843,-0.046520,-0.773844,-0.035043,-0.254690,-0.468107,0.106728,-0.004185,0.175679,0.035568,-0.048265,0.009875) * L4_9 + mat4(0.090342,0.107452,0.399984,0.033486,0.133454,-0.006837,-0.063986,0.015594,-0.008869,0.040306,-0.125830,-0.099308,-0.222604,-0.099620,0.104817,0.131123) * L4_10 + mat4(0.035654,0.125795,0.126605,-0.142358,-0.017444,0.021753,0.062166,-0.226016,0.163170,-0.253501,-0.115164,-0.136153,-0.116661,0.119657,-0.021433,0.152553) * L4_11 + mat4(-0.104937,-0.069749,-0.251834,-0.125156,-0.473924,0.100508,-0.107522,-0.292789,0.085590,0.036252,0.050325,-0.163503,0.067305,0.096695,0.236577,0.068037) * L4_12 + mat4(-0.246142,-0.015747,-0.311099,0.291992,0.140825,0.120854,0.342432,-0.207334,-0.127363,-0.122341,0.022362,-0.109380,0.098940,0.125188,0.232843,0.170594) * L4_13 + mat4(0.047650,-0.055614,-0.047226,0.014237,-0.026711,0.234852,0.005868,-0.043058,-0.249050,-0.049914,0.107952,-0.030321,0.232915,0.050531,-0.013527,0.020447) * L4_14 + mat4(-0.007636,-0.045748,0.441179,0.160280,0.057208,-0.205940,0.057290,-0.283775,-0.239005,0.090750,-0.031470,0.269685,0.227239,0.010068,0.044546,-0.370815) * L4_15 + vec4(-0.605923,-0.033465,0.378397,-0.065303)));\nvec4 L5_14 = sin((mat4(0.317613,-0.243374,-0.028071,0.067294,-0.068138,0.262095,0.142971,0.042715,0.074129,-0.164881,0.079274,0.073639,0.203489,0.090558,-0.030322,-0.027370) * L4_0 + mat4(-0.015367,0.311844,0.244259,-0.117824,-0.284761,0.226162,0.198682,-0.032383,0.058082,-0.011689,-0.115572,-0.017817,0.036513,-0.106666,-0.062919,-0.162237) * L4_1 + mat4(-0.199700,-0.711515,0.055369,-0.049366,0.076230,0.173633,0.047120,0.002667,0.275512,0.194952,0.273715,0.169783,0.220987,0.427630,0.042218,0.018340) * L4_2 + mat4(0.324408,0.110854,-0.022047,-0.005530,-0.023112,0.334656,0.114834,-0.104399,0.009178,0.282200,-0.043424,-0.053238,-0.153547,-0.169073,-0.022524,-0.104818) * L4_3 + mat4(0.132912,0.181497,-0.030483,-0.072722,-0.117965,0.089414,0.102727,-0.254469,0.419650,-0.117059,-0.366327,0.131678,-0.076854,-0.145600,-0.079176,0.235679) * L4_4 + mat4(0.048749,-0.128074,0.085740,0.051482,0.296178,0.564417,0.151809,0.114256,0.264638,-0.171197,0.243176,0.384978,0.139395,-0.136843,-0.161143,0.090456) * L4_5 + mat4(-0.207977,-0.194507,-0.083551,-0.105375,-0.285780,-0.050248,-0.390199,-0.065878,0.147637,0.274655,0.043721,-0.108686,0.007832,0.550454,-0.194555,-0.373912) * L4_6 + mat4(0.378708,-0.071593,0.102175,0.060180,0.129992,0.004648,0.015499,-0.223544,0.119068,-0.009893,0.069112,-0.106571,-0.023393,-0.087032,0.050970,0.013797) * L4_7 + mat4(0.100797,0.305056,-0.005976,-0.265669,-0.015767,0.061327,-0.084759,-0.007392,0.058923,0.398230,0.131755,-0.013503,0.322920,0.034810,-0.051138,0.121974) * L4_8 + mat4(0.179829,0.022404,0.021600,-0.132197,0.219138,-0.041061,0.322616,0.131073,-0.285892,0.204750,-0.376357,-0.610826,0.097138,0.066925,-0.189818,0.188796) * L4_9 + mat4(-0.074692,-0.125956,0.071002,-0.003457,-0.332944,0.133033,0.236706,0.034675,-0.068331,0.012914,-0.034763,0.050789,0.082096,0.282445,0.232421,-0.105690) * L4_10 + mat4(-0.064357,-0.008151,-0.119276,-0.160181,-0.014416,0.266568,0.065082,0.181426,-0.478272,-0.240534,-0.290652,-0.054666,0.074635,-0.086828,-0.042322,0.054751) * L4_11 + mat4(0.051147,0.065370,0.171584,-0.197895,0.128891,0.057109,0.435002,-0.007076,-0.125269,-0.076860,-0.047893,-0.035489,-0.113077,0.104633,0.011956,-0.160972) * L4_12 + mat4(0.209779,-0.100665,0.025949,-0.071603,0.264314,-0.012806,-0.169287,0.043549,0.023567,-0.205994,-0.056878,-0.031328,0.215080,-0.441977,-0.282241,0.089100) * L4_13 + mat4(-0.082585,-0.045885,0.285632,-0.222439,-0.029108,0.185725,-0.119569,0.157138,0.310884,0.299672,0.251292,0.124798,0.168047,-0.407343,-0.166396,0.109229) * L4_14 + mat4(0.275625,0.322503,0.050392,0.022092,-0.226091,0.180183,0.116248,-0.135014,0.220457,0.192838,0.153283,0.149247,-0.336981,-0.109698,-0.031613,-0.068653) * L4_15 + vec4(0.385724,-0.633915,-0.652196,-0.420591)));\nvec4 L5_15 = sin((mat4(0.417275,0.049329,0.082746,0.328281,0.028122,-0.028833,-0.123545,0.097476,-0.298469,-0.069666,0.234081,-0.099189,-0.432845,-0.320807,0.094872,-0.140700) * L4_0 + mat4(-0.059917,-0.138062,0.009413,0.152714,-0.411202,0.056322,0.002039,0.059355,0.039825,0.157701,-0.015656,-0.008800,0.120831,0.077769,-0.004974,-0.032635) * L4_1 + mat4(-0.015071,0.258165,0.037521,-0.029482,-0.059903,0.381590,-0.094852,0.109738,-0.035796,0.340396,-0.366889,0.015301,-0.179932,-0.097582,-0.097305,-0.100115) * L4_2 + mat4(0.094319,0.183921,-0.038130,-0.115483,-0.042280,0.147271,0.012705,0.065893,0.039872,0.104709,-0.085072,-0.084544,0.078504,-0.051109,-0.255052,0.023229) * L4_3 + mat4(0.113585,0.034361,-0.159720,0.071343,0.301278,0.037274,0.028087,-0.048536,0.764751,0.183310,0.468423,0.021424,0.276088,0.148024,0.010549,0.096581) * L4_4 + mat4(-0.133175,-0.166099,0.063683,0.142205,0.290012,0.161956,-0.273880,-0.128340,0.416227,0.127733,0.329050,0.063459,0.102592,0.058534,0.112546,-0.043391) * L4_5 + mat4(-0.045552,0.048726,-0.403653,-0.093690,-0.090490,0.197982,-0.019605,-0.154166,0.072230,0.317202,0.524970,0.027548,0.167616,0.170475,0.142088,-0.122140) * L4_6 + mat4(0.439279,0.309941,-0.111671,-0.016203,-0.210480,0.195748,-0.068515,0.031617,0.151966,0.387847,-0.087377,0.203343,0.005760,0.248261,0.234894,0.067707) * L4_7 + mat4(0.202415,-0.125095,0.073727,0.102330,-0.233556,-0.150508,0.205090,-0.050421,0.286114,-0.070135,-0.311532,-0.112955,0.074668,0.152367,0.168268,0.084274) * L4_8 + mat4(-0.002741,0.196313,0.095116,0.039022,0.187973,0.294411,-0.373600,0.038733,-0.375453,0.147176,-0.284265,-0.312769,0.068124,-0.247862,0.126919,-0.090336) * L4_9 + mat4(-0.515025,-0.072334,0.036048,-0.007628,0.036214,-0.298703,-0.130888,0.169213,0.138331,-0.029373,-0.070888,0.016699,0.103430,0.054619,0.157143,0.071517) * L4_10 + mat4(-0.262940,-0.161100,0.105139,-0.170922,-0.117533,0.044935,-0.073093,0.017260,-0.321162,0.273253,-0.252238,-0.108087,0.044395,0.202470,-0.101541,0.157598) * L4_11 + mat4(-0.122291,0.529578,-0.170224,-0.059390,0.004707,0.143970,0.470425,0.213477,-0.093482,-0.054158,-0.001201,-0.261382,0.010726,-0.099515,0.087663,-0.058132) * L4_12 + mat4(0.157296,0.006633,0.090178,0.053108,0.325403,-0.082070,-0.363795,-0.084660,-0.129800,-0.100353,-0.000799,-0.111207,0.186462,-0.239277,0.151635,-0.065738) * L4_13 + mat4(-0.276444,-0.149711,0.122066,0.018666,0.078457,0.021916,0.217400,-0.120281,0.035809,0.096186,0.070350,0.184830,-0.041848,-0.417276,0.328910,-0.007889) * L4_14 + mat4(0.074155,-0.256981,0.065899,-0.031860,-0.223167,0.330126,-0.034011,-0.083483,-0.051220,0.227419,0.027956,0.378822,-0.034711,0.035621,-0.075916,-0.031971) * L4_15 + vec4(0.441154,-0.744008,-0.014071,0.534773)));\nvec4 L6_0 = sin((mat4(-0.001472,-0.166732,-0.007457,0.056595,0.011674,0.083752,0.001942,0.218312,0.011382,-0.166940,-0.005083,-0.119430,0.005000,-0.083492,-0.005225,0.036409) * L5_0 + mat4(0.039893,-0.103960,0.006247,-0.231259,-0.014913,-0.274339,-0.016403,0.076168,-0.031199,0.211063,-0.007158,-0.026235,-0.006001,-0.489664,-0.003390,-0.008114) * L5_1 + mat4(0.015706,0.231916,-0.039771,0.003989,-0.004758,-0.120038,-0.012723,0.075403,-0.009254,0.325262,-0.003793,-0.062813,-0.014680,0.064339,0.033239,-0.009046) * L5_2 + mat4(0.024509,0.061058,-0.002830,-0.038247,-0.007135,-0.388112,-0.012285,-0.086755,0.016245,-0.167934,0.025189,-0.079469,-0.001095,0.106699,0.007662,-0.008941) * L5_3 + mat4(0.002571,0.022266,-0.013405,0.119195,-0.009337,0.143112,0.005066,0.150258,-0.015420,-0.005629,0.006916,-0.011877,-0.003898,-0.079426,0.014435,-0.055351) * L5_4 + mat4(-0.003192,0.086707,-0.005151,0.011729,-0.004376,-0.114037,0.016630,0.032542,0.002921,0.149497,-0.020381,-0.058803,-0.009910,0.112466,-0.005638,0.047124) * L5_5 + mat4(-0.001977,-0.005191,-0.002285,-0.052725,0.008973,-0.029109,-0.014554,0.074195,0.015182,0.217386,0.016885,-0.229679,0.012566,-0.098156,0.006020,-0.035117) * L5_6 + mat4(-0.024905,0.115589,0.018703,-0.045960,-0.015415,-0.201667,0.029636,0.066053,0.006258,-0.120121,0.004712,-0.035122,-0.009262,0.136472,0.018388,-0.074578) * L5_7 + mat4(-0.020009,-0.346432,-0.023268,-0.129466,0.016552,-0.118125,-0.020968,-0.064939,0.015133,0.314326,0.020221,-0.165343,-0.012191,0.531593,0.019520,0.023581) * L5_8 + mat4(-0.001672,-0.373792,-0.016242,0.044493,-0.010056,0.172314,-0.035485,0.081923,-0.000884,0.075051,0.004674,-0.012340,-0.016294,-0.149610,0.019591,0.126836) * L5_9 + mat4(-0.002094,0.174073,-0.013475,0.072335,0.023995,0.128589,-0.004152,0.072926,-0.003646,0.155110,-0.006384,-0.080498,-0.022364,-0.139021,0.015063,0.037256) * L5_10 + mat4(0.009731,-0.420254,-0.000257,-0.184095,-0.009563,-0.039053,-0.007731,-0.056703,0.018242,0.033071,-0.006856,0.079193,-0.009142,0.097240,-0.010863,0.309987) * L5_11 + mat4(-0.007383,-0.237077,-0.007452,0.017167,0.014802,0.171595,-0.004907,-0.044916,-0.012546,0.281366,0.006386,0.048769,0.008254,0.203728,0.020653,0.028846) * L5_12 + mat4(-0.003898,0.100838,-0.007987,-0.128066,0.005378,-0.228618,-0.024998,-0.253563,-0.002646,0.118948,-0.007105,-0.022263,0.013083,0.008369,-0.013118,-0.180097) * L5_13 + mat4(0.015406,-0.231244,-0.001798,-0.118306,-0.013045,-0.098920,0.019169,-0.089130,0.024238,-0.118929,-0.007735,0.043796,0.000024,-0.015654,-0.036840,-0.406788) * L5_14 + mat4(0.024190,0.133934,-0.022462,0.017694,0.006453,-0.101278,-0.013997,0.188498,-0.018543,0.221024,-0.001537,-0.045165,-0.001180,-0.631846,0.045023,-0.096700) * L5_15 + vec4(0.015844,-1.665011,0.004525,-0.015754)));\nvec4 L6_1 = sin((mat4(-0.007803,-0.011506,-0.088635,0.216948,0.005332,0.003964,-0.029283,0.019319,-0.015663,0.020322,0.174827,-0.086372,-0.019623,0.012843,-0.012794,-0.242064) * L5_0 + mat4(-0.008585,0.006049,-0.130612,0.039688,-0.016837,0.009682,0.230274,-0.243890,0.004513,0.025377,-0.064930,0.150153,-0.008458,0.007844,0.044626,-0.015181) * L5_1 + mat4(0.011918,0.014380,0.029297,-0.003498,0.031351,0.024277,0.098098,0.442746,-0.006254,-0.000726,-0.166272,-0.181405,-0.019414,-0.010845,0.073928,-0.128107) * L5_2 + mat4(-0.016005,-0.004981,-0.092289,0.103806,0.027417,0.005096,-0.080983,0.287482,0.013968,0.011022,0.080532,-0.144173,-0.025819,0.002695,-0.070190,0.230810) * L5_3 + mat4(-0.015194,0.033401,-0.077118,-0.195717,0.008832,0.004222,0.054896,0.073250,-0.018112,-0.012505,0.027624,0.008065,0.001691,-0.017627,0.038576,-0.144673) * L5_4 + mat4(0.012832,0.023396,-0.084063,0.064790,0.009638,-0.031569,-0.136624,0.306385,-0.015921,0.007907,-0.070887,0.245476,0.012523,0.004173,0.064814,0.109388) * L5_5 + mat4(-0.009509,0.007478,0.104497,-0.122734,-0.019928,-0.005893,0.042446,0.052131,-0.000298,-0.017889,0.025262,0.277042,-0.009664,-0.011610,-0.001321,-0.047252) * L5_6 + mat4(-0.012662,-0.005574,-0.008463,-0.250090,-0.004743,-0.004769,0.074905,0.039225,0.001026,0.002391,0.019418,0.081170,0.024413,0.008127,-0.097308,-0.096839) * L5_7 + mat4(0.025061,0.025544,-0.031020,0.260956,0.008753,-0.000295,0.046548,-0.134900,-0.022028,-0.036611,-0.005708,0.672133,0.012655,0.007189,-0.110333,0.163560) * L5_8 + mat4(0.008872,0.002073,-0.132913,0.112968,0.032210,0.037915,0.060195,-0.040563,-0.004658,-0.024235,-0.179965,0.136488,-0.008542,-0.012514,-0.001185,-0.003704) * L5_9 + mat4(-0.003031,0.018850,-0.016962,-0.044854,-0.001410,-0.027952,-0.184292,0.132958,0.004831,0.027644,0.107191,-0.013485,-0.007204,0.016122,0.230178,0.229877) * L5_10 + mat4(0.016457,0.011208,0.039142,-0.195708,0.000919,-0.002862,0.014278,0.072527,0.007924,0.024673,0.022386,0.038598,-0.031470,-0.000314,0.074852,-0.239135) * L5_11 + mat4(0.011003,0.013579,0.043052,0.233294,-0.015196,-0.003461,-0.017516,-0.051604,0.003351,-0.017761,-0.254057,0.035047,-0.021330,-0.023574,-0.117387,0.117324) * L5_12 + mat4(-0.000880,0.011189,0.179359,0.100185,0.019698,0.008484,-0.354303,-0.176978,0.008350,0.025283,-0.039982,0.222632,-0.003831,0.005285,-0.035207,-0.131668) * L5_13 + mat4(0.011165,0.025057,-0.000437,0.032928,0.004910,0.001650,0.132982,-0.178517,0.008205,0.001590,0.035738,-0.090746,0.045032,0.031515,-0.167293,-0.386913) * L5_14 + mat4(-0.017701,0.031017,0.068002,-0.121289,0.034204,-0.019135,0.138389,0.289008,-0.008640,-0.000005,-0.146480,-0.253957,-0.011160,-0.003296,0.016389,-0.359734) * L5_15 + vec4(-0.008835,0.004933,0.146598,-0.539610)));\nvec4 L6_2 = sin((mat4(-0.006579,0.004848,-0.104656,-0.052612,0.008738,-0.001276,-0.167897,-0.006567,-0.007409,0.002586,0.139195,0.015144,0.017407,-0.005958,0.178812,0.008315) * L5_0 + mat4(0.011343,0.007714,-0.328819,-0.121346,-0.021826,-0.001347,0.012131,-0.042223,-0.000536,-0.006384,-0.173767,-0.019788,-0.023650,-0.005816,0.004621,0.071487) * L5_1 + mat4(0.024128,-0.019934,0.065207,-0.019108,0.018521,0.003631,-0.020301,-0.026762,-0.000161,-0.005927,0.148723,-0.036474,-0.019794,0.000238,0.158738,-0.028825) * L5_2 + mat4(0.019084,-0.008228,0.160234,-0.050089,-0.009211,0.026208,-0.070079,-0.086042,-0.007667,0.042046,0.199010,-0.005944,0.001742,-0.028935,-0.188726,0.042826) * L5_3 + mat4(0.021717,-0.014133,-0.178420,0.063293,0.010226,-0.032270,0.064946,-0.022584,0.018736,0.002613,0.162554,0.133290,0.010506,0.008518,-0.140383,-0.075919) * L5_4 + mat4(-0.002588,0.005807,0.201451,-0.025858,-0.004724,0.003778,0.025177,-0.109735,0.001234,-0.005765,-0.221476,0.073016,-0.021163,0.007006,0.217116,-0.018352) * L5_5 + mat4(-0.000283,-0.024934,0.290691,-0.036901,0.008492,-0.013599,0.050293,-0.081856,0.006642,-0.018454,-0.073115,-0.079546,0.014494,-0.016772,0.312281,0.090941) * L5_6 + mat4(-0.024021,-0.009498,-0.035936,-0.046629,-0.017459,0.011019,0.497403,-0.014019,-0.002181,0.003744,0.060697,-0.025027,0.007650,0.025398,0.184778,0.000795) * L5_7 + mat4(0.013398,-0.002076,-0.330235,-0.056605,0.014040,-0.009765,0.094232,0.003887,-0.014926,-0.019546,-0.190094,0.057412,-0.025492,0.009601,-0.233592,-0.105757) * L5_8 + mat4(0.011079,0.014909,0.085800,-0.023679,0.020039,-0.001467,-0.021209,0.012992,-0.009261,-0.013246,-0.448465,0.001856,0.001594,0.017885,-0.033922,-0.206840) * L5_9 + mat4(0.024130,-0.002511,0.126939,0.020647,-0.007295,0.005305,0.214725,-0.026637,0.010131,-0.001502,-0.124490,0.019753,0.017651,-0.003166,0.113768,-0.090237) * L5_10 + mat4(-0.000532,0.010535,0.193882,0.256984,-0.001253,-0.008829,0.045844,0.199174,-0.000634,-0.000949,-0.116301,-0.120341,0.001931,0.000793,-0.250703,0.001939) * L5_11 + mat4(0.013724,0.007158,0.067556,-0.099359,0.016447,-0.015406,0.146978,-0.049561,0.003314,-0.006230,-0.905288,-0.083439,0.001334,-0.004000,0.250465,-0.101242) * L5_12 + mat4(0.010019,0.005409,0.074210,0.001221,0.017106,0.000547,-0.335437,0.096193,0.008415,0.018432,0.104234,0.001893,0.050248,-0.010821,-0.282735,0.041062) * L5_13 + mat4(0.009342,0.005690,0.060310,-0.054140,0.003123,-0.002408,0.154124,0.016364,0.017350,-0.004546,-0.105091,-0.005458,-0.016187,0.026512,-0.222507,0.133665) * L5_14 + mat4(0.023792,-0.015236,-0.262442,-0.002874,0.014938,0.026877,-0.043563,-0.055083,0.011288,-0.005391,0.027083,0.094989,-0.032418,0.028928,-0.338435,0.556212) * L5_15 + vec4(-0.006435,0.003763,-0.753158,0.278657)));\nvec4 L6_3 = sin((mat4(-0.001634,-0.007416,0.248149,-0.040607,0.002060,-0.047256,0.146728,-0.017827,-0.011616,-0.050514,-0.025842,0.155324,-0.003808,0.035510,0.040083,0.079349) * L5_0 + mat4(-0.009881,0.101665,0.186703,0.218576,-0.001542,-0.002599,-0.367666,-0.072641,0.036798,0.015788,-0.161998,-0.057739,-0.002332,-0.111048,-0.359169,-0.024855) * L5_1 + mat4(-0.025346,0.003897,0.120252,-0.014484,0.004382,-0.172282,-0.068450,-0.002097,0.006218,-0.010955,0.125381,-0.015251,-0.002884,0.043242,-0.005644,-0.199998) * L5_2 + mat4(0.005871,0.058533,-0.107032,-0.123193,0.031327,0.299848,-0.130620,-0.194315,-0.004622,-0.010051,-0.098897,0.093362,-0.039679,-0.032117,0.263194,-0.006652) * L5_3 + mat4(0.014391,0.058667,0.194375,0.080554,-0.007961,-0.044699,-0.116004,-0.063457,-0.005401,-0.136309,-0.245211,0.138540,0.003277,0.025400,0.168910,0.102706) * L5_4 + mat4(-0.001802,-0.368936,-0.211526,-0.237516,0.011554,-0.011972,-0.144241,-0.000689,0.002859,-0.086760,-0.302854,-0.098125,0.026966,-0.080408,0.011468,-0.031511) * L5_5 + mat4(-0.002528,0.122627,0.049314,0.054393,0.005033,-0.036409,-0.102139,-0.253561,-0.000539,-0.055972,0.270647,0.060118,0.010816,0.015327,-0.659414,0.158816) * L5_6 + mat4(-0.011997,-0.015023,-0.093014,0.096407,-0.011231,0.080111,-0.123959,-0.052794,0.010047,0.049505,-0.006340,-0.144221,-0.004544,-0.017637,0.159593,0.181204) * L5_7 + mat4(0.021454,0.166941,0.059602,0.051516,0.001860,0.049625,0.015421,-0.033365,-0.008727,-0.013324,0.174130,0.121273,0.007568,-0.151132,0.454661,0.098988) * L5_8 + mat4(-0.001996,0.134146,-0.107579,0.045470,-0.005524,-0.069079,0.209436,0.128682,-0.005207,-0.042870,0.116468,0.230310,0.008822,-0.004075,0.324269,0.088484) * L5_9 + mat4(-0.003473,-0.054514,0.169016,-0.020614,-0.005375,-0.121087,-0.350663,0.046895,-0.010652,0.039081,0.532753,-0.014781,0.006567,-0.305247,-0.027297,0.152448) * L5_10 + mat4(0.020619,0.211619,-0.148777,-0.044288,0.010757,-0.026474,-0.029287,-0.052610,-0.007686,0.017247,-0.034826,0.023872,-0.022144,-0.186983,-0.093731,-0.174524) * L5_11 + mat4(0.009115,-0.085429,0.063239,-0.009864,0.010213,0.058621,-0.003122,0.085259,0.007273,-0.004041,-0.070600,0.151260,0.006781,-0.011348,0.091554,-0.056776) * L5_12 + mat4(-0.005380,0.046329,-0.182630,0.025393,-0.000683,-0.047902,-0.051311,-0.140587,-0.004846,-0.051478,0.126860,-0.043174,-0.027906,0.008092,-0.393403,0.030135) * L5_13 + mat4(0.017946,0.047990,-0.050486,-0.104210,-0.005909,0.030660,0.069269,-0.185803,0.007008,-0.274533,0.159666,0.021712,0.022339,-0.250630,-0.467368,0.247289) * L5_14 + mat4(-0.024646,-0.019328,0.104987,-0.165762,0.008943,-0.109753,-0.226873,-0.065028,-0.010268,0.011663,0.012350,-0.126549,-0.009220,-0.054656,-1.181309,-0.242728) * L5_15 + vec4(0.005166,0.084824,-0.318050,-0.472580)));\nvec4 L6_4 = sin((mat4(-0.009564,0.111959,0.005927,0.018731,0.003802,0.205168,0.008569,0.034340,0.008656,-0.248773,0.002995,-0.151094,-0.009113,-0.091053,0.006905,0.086831) * L5_0 + mat4(0.008246,0.122968,0.009057,-0.238221,0.006384,-0.198395,0.002001,-0.009406,-0.012706,-0.068439,0.005074,-0.147774,0.004773,0.076086,-0.021264,0.053712) * L5_1 + mat4(-0.004070,-0.101653,0.011252,0.060450,0.000907,0.192249,-0.009441,-0.022434,-0.026195,-0.570035,-0.003825,0.235728,-0.004411,-0.531439,-0.011155,0.081336) * L5_2 + mat4(-0.004317,-0.197117,-0.006969,-0.034752,-0.002714,0.093271,-0.011243,-0.007811,-0.002608,0.192788,-0.006741,-0.002935,0.023711,0.103166,0.028779,0.095266) * L5_3 + mat4(-0.025773,0.300806,0.019573,-0.153699,-0.011732,0.206591,0.010472,0.030699,-0.008855,-0.185903,0.010287,-0.066935,0.014775,0.098156,-0.006194,0.175315) * L5_4 + mat4(0.001756,-0.013975,-0.008171,-0.677514,0.007217,0.135985,-0.013751,-0.080494,-0.014631,-0.086528,0.013890,0.021173,-0.003056,-0.067128,-0.013606,-0.102378) * L5_5 + mat4(-0.003086,-0.119139,0.010768,0.041344,0.048058,-0.408882,0.013983,-0.213377,0.005326,-0.138528,-0.001030,0.281323,0.020160,0.473055,-0.009649,-0.066652) * L5_6 + mat4(0.004219,-0.046491,0.009164,0.097126,-0.007339,0.014428,-0.028955,0.085727,-0.007832,-0.101591,0.005332,-0.148823,-0.013019,0.225514,-0.021352,-0.187849) * L5_7 + mat4(-0.032563,0.093261,0.006763,-0.027917,0.007605,0.233584,-0.019197,0.013384,-0.005803,0.062443,-0.005357,0.082004,-0.005183,-0.214068,-0.003992,-0.120383) * L5_8 + mat4(-0.023130,0.110165,-0.004624,-0.125759,-0.029200,0.034980,-0.006288,0.078951,-0.007154,0.094398,0.006985,-0.070356,-0.002633,-0.027713,-0.001362,-0.301110) * L5_9 + mat4(-0.013355,0.073919,0.027172,0.156149,0.032434,0.252859,-0.019946,0.007851,0.019190,0.045829,0.011062,0.120143,-0.038054,-0.075567,0.019793,-0.012295) * L5_10 + mat4(0.023958,0.056121,-0.013827,0.117272,-0.000468,0.209364,0.015904,0.037624,0.027012,0.032044,0.002054,0.054303,-0.003510,0.064947,-0.011200,0.159438) * L5_11 + mat4(-0.020044,0.134934,0.023559,-0.013974,0.003451,0.039928,0.003552,-0.057585,-0.015529,-0.052785,0.017402,0.009406,0.026014,0.111034,-0.008100,-0.082529) * L5_12 + mat4(0.009976,0.175890,0.006221,-0.116401,0.012456,-0.077944,-0.019434,0.496718,0.013891,-0.092388,-0.004948,-0.158358,-0.036772,0.187922,0.030487,-0.098493) * L5_13 + mat4(0.023245,-0.094118,0.012815,-0.040471,0.002700,-0.154278,0.015480,0.007008,-0.022700,-0.063493,0.029434,0.265176,-0.008319,0.277278,-0.023407,-0.589776) * L5_14 + mat4(-0.026821,0.082379,0.041030,-0.005337,0.028332,-0.117374,-0.027921,0.080923,0.001461,-0.134408,0.012126,-0.405892,0.009724,0.566635,0.014955,0.125804) * L5_15 + vec4(0.027732,0.596334,-0.012458,0.357755)));\nvec4 L6_5 = sin((mat4(0.049795,0.023381,-0.026376,-0.015468,-0.045045,-0.037221,0.368466,-0.119803,0.004872,0.048063,-0.266994,-0.138266,0.009601,0.121693,0.040215,-0.067214) * L5_0 + mat4(-0.036058,-0.050182,-0.164960,0.012026,-0.110095,0.083304,0.381060,0.150668,0.007418,0.036064,-0.354625,-0.068364,0.134321,0.023805,0.206382,0.160706) * L5_1 + mat4(0.064060,0.042830,0.131110,-0.038932,-0.013919,-0.217463,0.450023,0.004883,-0.090450,0.053317,0.345284,0.102956,-0.053099,-0.161411,0.282954,0.128994) * L5_2 + mat4(-0.040637,-0.085128,-0.210571,0.002887,-0.225341,0.030930,-0.065094,0.025280,-0.034282,-0.049119,0.118000,-0.017562,0.043751,-0.091270,0.223469,-0.052288) * L5_3 + mat4(0.018116,0.046341,-0.118529,-0.077280,-0.040633,0.089835,-0.110451,-0.006660,0.169551,-0.068575,-0.304925,-0.219518,-0.006222,-0.013238,-0.171291,-0.076763) * L5_4 + mat4(-0.092845,0.045636,-0.067842,0.203450,0.152234,0.044992,-0.045519,-0.014748,-0.088841,-0.046700,0.211841,0.089360,-0.025965,-0.094851,-0.118835,0.025443) * L5_5 + mat4(0.063863,0.094651,-0.374608,0.000851,-0.110225,0.128719,0.125421,0.144903,-0.019203,0.014842,0.377198,-0.054348,0.064187,0.450996,-0.485141,-0.012484) * L5_6 + mat4(0.019933,0.005112,0.395683,-0.018177,-0.039933,-0.043271,-0.212708,0.080987,-0.032896,-0.135078,0.044293,0.145793,-0.124574,0.123010,-0.411732,0.028543) * L5_7 + mat4(0.029954,0.045059,0.263410,0.109947,0.102324,0.173180,-0.348674,0.032459,-0.032126,-0.066094,-0.112549,-0.247886,-0.127515,-0.020616,0.370630,0.144952) * L5_8 + mat4(0.072476,-0.129485,0.023860,-0.156853,-0.137619,-0.092146,-0.000909,-0.052111,-0.018807,-0.122847,-0.061890,-0.073335,-0.008928,-0.074421,0.789435,0.027270) * L5_9 + mat4(-0.052833,-0.054341,-0.000964,-0.085136,-0.103395,-0.242987,-0.184925,-0.066989,-0.001847,0.056280,0.348480,-0.012334,-0.002129,-0.403348,-0.280157,0.236172) * L5_10 + mat4(-0.038988,-0.189041,0.395634,0.005495,-0.030905,0.157117,0.360051,-0.070807,-0.117538,0.113426,-0.207619,0.015391,0.132364,0.039181,0.805001,-0.226413) * L5_11 + mat4(-0.097686,-0.128486,-0.164887,0.090124,-0.000479,-0.092346,0.099034,0.155462,0.018250,0.158127,-0.380106,-0.133088,-0.075900,-0.141787,0.080094,-0.133953) * L5_12 + mat4(-0.100100,-0.063381,0.163861,0.244679,0.047510,-0.022190,0.694075,-0.178424,0.023696,0.058518,-0.288579,-0.006646,0.114456,-0.058619,-0.138666,-0.056370) * L5_13 + mat4(0.043193,0.078921,-0.097667,0.039160,0.071465,0.056297,0.106513,0.107806,0.001158,0.143745,0.423374,-0.064487,0.121085,0.389156,-0.533934,-0.090483) * L5_14 + mat4(0.018713,0.072906,0.179993,-0.105753,0.043838,0.067682,0.023780,-0.044137,0.134687,-0.082366,-0.259546,-0.039533,0.147810,0.020576,-0.605770,0.110230) * L5_15 + vec4(0.664626,0.407116,-0.001605,0.038688)));\nvec4 L6_6 = sin((mat4(0.144158,-0.035640,0.085950,0.000106,0.121431,0.009670,-0.088956,-0.042796,0.144649,-0.121399,-0.164027,-0.075416,-0.017034,-0.021925,0.050734,0.115792) * L5_0 + mat4(-0.056019,0.230406,0.315910,-0.227824,-0.300323,-0.116258,0.031894,-0.014354,-0.177306,-0.019111,0.099057,-0.069548,-0.071155,0.010494,0.025659,-0.062985) * L5_1 + mat4(-0.141207,-0.030088,-0.025162,-0.011629,0.046150,-0.335862,-0.258497,-0.394649,0.387946,-0.051507,-0.067957,0.072359,-0.049010,-0.042931,-0.172294,-0.122716) * L5_2 + mat4(0.013756,-0.009678,-0.095867,0.018937,-0.334090,0.037797,-0.106073,0.020041,0.151854,0.017471,-0.100480,0.068356,-0.166882,-0.119152,-0.034882,0.004607) * L5_3 + mat4(-0.041902,0.080172,-0.059261,-0.016528,-0.105801,-0.051964,0.003952,-0.063641,0.353065,0.039081,-0.084035,-0.080734,-0.161008,-0.014754,-0.120069,-0.021346) * L5_4 + mat4(0.702521,0.144433,0.445460,-0.036462,-0.000043,0.037750,-0.151718,-0.122053,0.066854,-0.104584,0.116963,-0.081602,0.123969,0.029307,-0.056654,-0.031358) * L5_5 + mat4(-0.249406,-0.049033,0.045099,-0.000124,0.334373,0.090787,0.054547,0.032631,-0.313524,-0.023866,0.257610,-0.088772,0.019117,0.005035,0.019392,0.125713) * L5_6 + mat4(-0.104658,0.039908,0.003109,0.074925,-0.113134,0.040495,0.034160,-0.062198,-0.210422,-0.003777,-0.008056,0.020754,0.416587,-0.086445,0.063048,0.080755) * L5_7 + mat4(-0.428381,-0.002661,-0.129715,0.056518,0.031653,0.133088,0.132725,-0.062655,0.005162,-0.206754,0.076710,-0.005218,0.110170,-0.079297,0.220105,0.090071) * L5_8 + mat4(-0.159928,0.072347,-0.134189,0.041005,0.093904,-0.030225,-0.057935,0.026762,0.406482,0.020574,0.024381,-0.031602,0.009903,-0.101598,0.128361,-0.101310) * L5_9 + mat4(0.084962,-0.000174,-0.096177,-0.025280,0.328063,-0.098215,-0.175599,-0.075225,-0.206074,0.029547,0.060143,-0.093486,0.023376,-0.093947,-0.022548,-0.124661) * L5_10 + mat4(-0.002634,0.207832,-0.101822,0.036553,0.045256,0.099648,-0.220652,-0.074722,-0.164141,-0.162566,0.055130,-0.063679,-0.567717,0.551272,-0.113104,0.525511) * L5_11 + mat4(-0.021174,0.103162,-0.140817,-0.056595,-0.014096,-0.151236,0.209702,0.103431,0.078727,0.148683,0.038012,0.041760,0.253341,-0.044007,-0.171239,0.023770) * L5_12 + mat4(-0.338987,-0.214802,0.283282,0.180704,0.507255,0.104812,-0.179848,-0.146442,-0.006583,0.037509,0.028446,-0.042228,0.086320,-0.010889,-0.043006,0.118696) * L5_13 + mat4(0.125713,0.098685,0.193583,0.137054,0.048633,-0.034018,-0.005853,0.076727,0.354108,0.099055,-0.150383,0.048375,0.615793,-0.004844,0.191231,0.229124) * L5_14 + mat4(-0.079654,-0.059775,-0.082651,-0.006711,-0.114387,-0.002994,0.011080,-0.026142,0.158744,0.019041,0.020158,0.045412,0.331108,0.168442,-0.022351,0.248282) * L5_15 + vec4(-1.693029,0.208620,-0.530807,-0.644310)));\nvec4 L6_7 = sin((mat4(0.078719,-0.343127,0.040065,-0.068246,0.142361,-0.156128,0.098321,0.005602,-0.075322,0.223274,0.118458,-0.014994,0.093172,0.064923,0.008874,0.009525) * L5_0 + mat4(-0.395805,0.052664,0.724089,0.248992,0.115228,0.384064,0.220926,-0.029869,0.049203,-0.133785,-0.057003,0.097905,-0.071845,-0.250186,0.366786,0.124970) * L5_1 + mat4(-0.017362,-0.032950,-0.241062,0.028964,0.092135,0.334033,-0.014802,0.277944,-0.403337,0.214867,0.031870,-0.041822,0.091575,0.016949,-0.084978,-0.124128) * L5_2 + mat4(0.070465,0.028912,-0.359186,0.205991,0.182540,-0.229395,-0.108340,0.319810,-0.032860,0.070020,0.211520,0.119491,-0.102746,-0.131793,0.088894,0.004286) * L5_3 + mat4(-0.069394,-0.126676,-0.248064,-0.031834,0.212994,-0.107594,-0.157388,0.110495,-0.005504,0.225278,-0.449437,-0.114111,0.031854,-0.016956,-0.350042,-0.084847) * L5_4 + mat4(-0.187787,0.098883,0.237590,-0.295182,0.188239,-0.207383,-0.373617,-0.226518,0.103307,0.315103,-0.039489,0.109498,-0.003983,-0.037624,0.313989,-0.063828) * L5_5 + mat4(0.058048,0.189785,0.191824,0.022268,0.015615,-0.074074,0.248954,0.063631,0.157345,-0.238365,0.190572,0.046429,0.182677,0.140064,-0.033653,0.140794) * L5_6 + mat4(-0.063978,0.138313,0.320242,0.003701,-0.099373,0.171417,0.137233,0.028178,0.091579,-0.141975,-0.035881,-0.008137,0.014461,0.348241,0.294683,0.019671) * L5_7 + mat4(0.044013,0.105944,-0.191248,-0.075156,-0.115997,-0.030038,0.249339,-0.080386,-0.085803,-0.074868,0.226944,-0.254856,0.023695,-0.128601,-0.260167,-0.395131) * L5_8 + mat4(-0.136852,0.255130,0.222737,0.129704,-0.156018,-0.068110,0.157881,-0.208250,-0.052455,-0.047003,0.305039,-0.100073,0.031497,-0.285563,-0.236221,0.023663) * L5_9 + mat4(0.098142,-0.003310,-0.194690,0.037731,-0.131297,0.281869,-0.437140,-0.277608,0.117440,-0.110770,0.256245,-0.042319,-0.236667,-0.098800,-0.626221,-0.199230) * L5_10 + mat4(-0.478077,-0.037299,0.365011,0.108213,0.126968,0.012559,0.114737,0.188674,0.119989,-0.368333,0.295999,-0.193837,0.523990,-0.473070,-0.031464,-0.164846) * L5_11 + mat4(0.026788,-0.324872,0.115572,0.086854,0.130351,-0.019142,0.025114,-0.071253,-0.149919,-0.260631,0.188532,0.086346,0.132218,0.114083,-0.324279,-0.033225) * L5_12 + mat4(0.215221,0.391981,0.106916,-0.020496,0.045239,0.734051,-0.483999,-0.238951,-0.054687,0.082459,-0.243284,0.037144,0.164201,0.751117,0.211780,-0.094832) * L5_13 + mat4(0.304262,0.078534,-0.139267,-0.032099,-0.063555,-0.074639,-0.299052,-0.075889,0.007874,0.339833,0.165462,-0.275213,0.019622,0.745092,0.226996,-0.063239) * L5_14 + mat4(-0.050388,0.099334,-0.055725,0.107524,0.295255,-0.273292,0.417553,0.013247,-0.090429,0.101177,-0.030049,-0.243541,-0.093351,0.957122,0.466175,-0.182959) * L5_15 + vec4(-0.220473,0.029384,0.181610,-0.359810)));\nvec4 L6_8 = sin((mat4(-0.010746,0.035781,0.295398,0.004100,-0.021445,0.033070,-0.047002,0.024363,0.016807,0.041655,-0.034800,-0.100509,-0.000894,-0.005262,0.065984,-0.022869) * L5_0 + mat4(-0.015002,0.023677,-0.460370,-0.198172,0.029414,-0.063277,-0.141422,-0.228822,0.021625,0.059895,0.032594,0.106098,0.026324,0.013478,0.152974,0.061441) * L5_1 + mat4(-0.011913,0.022380,-0.024540,0.088167,-0.008367,-0.092461,0.110077,-0.116900,0.006682,-0.020831,0.141998,0.062356,-0.005875,-0.027955,0.119431,0.088739) * L5_2 + mat4(-0.020410,0.037551,0.265739,-0.014334,-0.010530,0.000188,-0.072207,0.000445,0.009630,-0.069630,-0.030501,-0.140785,-0.032124,0.009408,-0.065246,0.149102) * L5_3 + mat4(0.008681,0.006818,-0.039234,-0.125065,-0.017304,-0.018633,-0.021631,-0.067762,-0.016949,-0.009383,-0.287427,-0.026307,-0.017945,-0.044833,0.106235,0.072551) * L5_4 + mat4(0.019904,0.257304,0.271977,0.171013,0.003222,0.000534,-0.162723,0.041271,0.007295,0.019338,0.088299,0.041551,0.002982,0.015385,-0.051942,0.037402) * L5_5 + mat4(-0.028173,-0.027181,-0.008401,-0.111939,0.003438,0.050210,0.043535,-0.157729,0.000833,-0.009482,0.156642,-0.085673,-0.021592,-0.038299,0.038403,-0.212646) * L5_6 + mat4(0.012499,-0.034166,-0.018590,-0.047424,0.005502,-0.061128,-0.048305,-0.041710,-0.016164,0.015534,0.044279,0.056629,-0.031123,-0.010908,0.213336,-0.264199) * L5_7 + mat4(0.006001,-0.045022,-0.179889,0.188470,0.005763,-0.010587,-0.103853,-0.086662,-0.004246,0.100508,-0.062092,0.190802,0.011934,0.046637,-0.216085,0.157631) * L5_8 + mat4(-0.003343,0.039393,-0.098676,0.044860,0.009049,-0.051020,-0.237681,-0.021362,-0.020428,0.001948,-0.127384,0.001675,0.030261,0.010028,-0.072005,-0.053650) * L5_9 + mat4(-0.007702,-0.029496,0.008352,-0.046140,0.033635,-0.064697,-0.134330,0.155978,-0.008154,-0.000385,0.148860,-0.016341,-0.023426,-0.101353,0.087036,-0.126255) * L5_10 + mat4(-0.004074,-0.039078,0.399790,-0.255314,0.011694,-0.010848,-0.081002,0.121512,-0.026417,0.010661,0.020714,0.210654,-0.007129,-0.350068,0.184584,-0.106591) * L5_11 + mat4(-0.004220,-0.093039,-0.140073,-0.048364,0.004240,-0.034969,0.120431,0.002153,-0.017007,0.068428,0.163525,0.126948,-0.026322,0.041520,0.100463,0.113238) * L5_12 + mat4(0.007627,-0.022169,-0.246834,-0.065512,0.007720,-0.092121,0.287350,0.192809,0.009537,0.107462,0.081115,0.070259,-0.031932,0.013433,-0.180397,-0.109801) * L5_13 + mat4(0.015548,0.049628,0.045851,-0.004298,-0.009478,0.085672,0.084847,0.114560,-0.012722,0.005965,0.317124,0.039311,0.026811,0.104188,-0.109982,-0.216985) * L5_14 + mat4(-0.006510,0.035626,-0.013507,0.156376,0.009804,-0.015631,0.101268,0.049100,-0.029224,0.184016,-0.057182,0.141323,0.003645,0.085758,-0.120810,0.060533) * L5_15 + vec4(0.019434,0.181403,-0.812998,-0.351593)));\nvec4 L6_9 = sin((mat4(-0.068285,-0.009013,0.155743,-0.089438,-0.065437,0.006914,0.364105,-0.066415,-0.046876,0.004742,-0.086084,0.056625,0.144902,-0.000157,0.146822,0.018480) * L5_0 + mat4(-0.225538,0.010731,-0.001621,0.519786,0.026486,0.016622,0.151304,0.078303,0.018607,0.005313,-0.055533,0.007053,-0.254805,0.017793,0.101050,0.087312) * L5_1 + mat4(0.076017,-0.011780,0.172272,-0.032537,-0.001263,-0.020876,-0.203529,0.003658,0.086783,-0.001717,0.218635,0.138338,0.156750,0.008124,0.123805,-0.143463) * L5_2 + mat4(0.130034,-0.015671,-0.167177,-0.134958,0.240090,-0.009273,-0.530060,-0.309176,-0.007154,0.019745,0.256041,0.100914,0.031700,-0.028492,0.447452,0.113398) * L5_3 + mat4(-0.098885,-0.003989,0.048455,-0.135686,-0.063443,-0.013599,-0.014287,-0.293245,-0.269715,0.001757,0.016708,0.046892,0.028043,-0.010635,-0.174946,0.020022) * L5_4 + mat4(-0.591967,0.018893,-0.357940,0.496578,0.003362,-0.011934,-0.470309,-0.059739,-0.083934,-0.013533,-0.184623,-0.102097,-0.113032,-0.019565,0.035362,0.006120) * L5_5 + mat4(0.098191,-0.034371,0.103863,0.053850,-0.005630,0.003324,0.316605,0.337997,-0.152150,-0.003221,-0.039114,-0.172385,0.123526,-0.011654,-0.209564,-0.294399) * L5_6 + mat4(-0.079940,0.028448,-0.134091,-0.107964,0.117750,0.012527,0.157133,0.264577,0.061994,0.012828,0.224752,0.006253,0.263795,-0.020931,0.035307,-0.085605) * L5_7 + mat4(-0.110243,0.002747,-0.226013,0.077411,0.077242,0.004604,0.390950,0.069985,-0.019698,0.010933,0.612194,0.365158,-0.224745,0.003303,0.518173,0.247317) * L5_8 + mat4(0.161383,-0.001364,-0.197314,0.027916,-0.022801,-0.005658,0.509042,-0.128987,-0.249847,-0.020092,-0.221680,-0.125719,-0.063835,0.036621,0.188489,0.199979) * L5_9 + mat4(0.011332,0.004487,0.414862,-0.147396,-0.257996,0.016754,-0.131374,-0.001197,0.041471,0.001762,0.072677,-0.133057,-0.315742,-0.001788,-0.100308,-0.091333) * L5_10 + mat4(0.277801,-0.004624,-0.020078,-0.184191,-0.068708,0.006462,-0.339542,-0.142443,0.033256,-0.020034,-0.168231,-0.096548,-2.137689,0.008433,0.124941,-0.137262) * L5_11 + mat4(0.011487,0.013259,-0.076391,-0.152062,0.151323,-0.012545,-0.169490,0.061589,-0.244346,0.001223,0.394516,0.046446,-0.091179,-0.019241,0.029206,0.266544) * L5_12 + mat4(0.181766,0.021325,-0.094557,-0.156971,-0.136301,0.004757,-0.275363,0.029892,-0.059434,0.014659,0.012194,-0.129446,-0.180019,-0.000029,-0.184973,0.324488) * L5_13 + mat4(0.172597,0.020561,-0.128663,0.196370,0.062342,-0.008092,-0.361790,0.115432,-0.455236,0.008718,-0.384508,0.223304,-0.115689,0.000215,0.123621,0.027058) * L5_14 + mat4(-0.178406,0.011403,0.154766,-0.062710,-0.123193,0.016354,-0.285720,-0.190153,0.117846,-0.012415,-0.262288,0.257488,0.181623,0.018698,-0.204495,-0.002342) * L5_15 + vec4(0.392869,0.000974,-0.808155,-0.381234)));\nvec4 L6_10 = sin((mat4(0.234669,0.057074,-0.024743,-0.312453,0.359394,0.032820,0.029663,0.078334,0.234287,-0.047915,0.039022,0.247976,0.237193,0.053456,-0.041884,-0.463391) * L5_0 + mat4(0.290975,-0.519679,0.297525,0.606982,-0.333203,0.077436,0.146433,0.088355,-0.100660,0.144733,-0.016871,0.231879,-0.532827,0.032433,-0.088949,0.229533) * L5_1 + mat4(0.152314,0.018769,0.019751,-0.004449,0.023928,0.006207,-0.051584,0.284699,0.073610,-0.115592,-0.189433,-0.031825,-0.149038,0.145760,-0.063391,-0.026364) * L5_2 + mat4(-0.309434,0.042867,-0.049643,-0.388601,-0.053043,0.051937,-0.023931,0.304061,0.420187,-0.177656,0.027990,0.136990,0.047741,-0.112112,-0.056525,-0.166920) * L5_3 + mat4(0.143298,-0.070640,0.028402,0.041842,0.094357,0.100708,0.057006,-0.130064,-0.295786,-0.110459,0.111404,-0.269028,-0.204446,0.189526,0.090708,-0.420480) * L5_4 + mat4(-0.545839,0.162862,-0.016106,0.047896,-0.044740,0.035745,-0.065076,-0.315606,-0.227023,0.110176,0.002291,0.121521,0.192688,-0.026141,0.046260,-0.276292) * L5_5 + mat4(-0.016678,-0.038183,0.136155,0.045142,0.140084,-0.336286,-0.171276,0.112050,0.080801,0.051242,-0.041291,0.429881,0.006929,0.083763,-0.038563,0.011621) * L5_6 + mat4(0.278908,-0.050759,-0.004672,0.014230,0.238039,-0.064137,0.003570,-0.325642,0.009895,-0.048890,0.023868,-0.355832,0.278875,-0.009057,-0.134005,-0.122828) * L5_7 + mat4(-0.302767,0.191502,-0.053334,0.496147,0.191790,-0.029621,0.110525,-0.150843,0.389525,-0.026276,-0.092943,-0.501433,-0.193117,0.208561,0.076045,0.030479) * L5_8 + mat4(-0.448083,0.068286,0.022746,0.165650,0.442970,-0.152013,-0.078375,-0.058144,-0.007127,-0.235933,-0.048853,0.188019,-0.065489,-0.138965,0.187231,-0.270127) * L5_9 + mat4(-0.144667,0.167117,-0.030067,0.046004,0.283431,0.015702,-0.006784,-0.040340,-0.027804,0.166838,-0.025030,0.287519,-0.322194,0.126061,0.080522,0.333169) * L5_10 + mat4(0.246155,-0.606789,-0.504499,0.044249,-0.084081,-0.098796,-0.010575,0.054036,-0.277982,0.318327,0.101150,0.041344,0.204281,0.181303,0.019072,-0.063814) * L5_11 + mat4(0.275273,-0.030927,0.155048,-0.170963,-0.185709,0.275083,0.154937,-0.121974,0.203505,0.384844,0.065341,0.669717,-0.412464,0.011810,-0.161788,-0.141550) * L5_12 + mat4(-0.111125,0.042395,0.103250,0.359378,-0.175085,0.418357,-0.046483,0.127550,-0.114834,0.042231,-0.065127,0.132542,-0.150727,-0.092547,0.023133,0.677951) * L5_13 + mat4(-0.674585,-0.001924,0.062883,-0.312436,-0.327736,-0.151813,-0.092186,-0.171188,-0.127107,0.017565,-0.137665,-1.008177,-1.011582,-0.322720,-0.006815,0.377572) * L5_14 + mat4(-0.283790,0.076188,0.006554,0.143398,-0.052131,0.105950,-0.006593,0.231264,-0.453699,0.114241,-0.116744,-0.037182,-0.523367,-0.033343,-0.237965,0.824722) * L5_15 + vec4(-0.462922,-0.748261,0.267589,0.301054)));\nvec4 L6_11 = sin((mat4(-0.198035,-0.268756,-0.000675,-0.027187,-0.098565,0.035520,0.004711,0.002616,0.267827,0.209399,-0.007713,0.019607,-0.036835,0.279996,0.020934,0.014590) * L5_0 + mat4(0.313150,0.047792,0.014123,0.006035,0.114889,0.034334,-0.005930,0.035294,-0.032929,0.036036,-0.030775,0.005924,-0.023575,0.119782,0.014395,0.022198) * L5_1 + mat4(-0.036252,-0.009069,-0.019535,0.014792,0.094904,0.515211,-0.014871,-0.004011,-0.116581,-0.537651,-0.006771,0.004322,-0.150767,-0.768587,0.032216,-0.015008) * L5_2 + mat4(-0.103937,-0.080955,0.001078,-0.017892,0.259965,0.497370,-0.015992,0.019975,0.346211,0.108434,0.022171,0.001781,-0.092043,0.060411,0.019758,-0.012718) * L5_3 + mat4(0.010617,-0.302939,0.004717,0.025333,-0.113144,0.172978,0.000300,-0.018843,-0.116879,0.367981,0.015292,-0.005565,-0.059193,0.068215,-0.001902,-0.041230) * L5_4 + mat4(-0.478660,-0.488128,-0.005308,0.017184,-0.218960,0.234801,0.003880,0.017097,-0.163422,-0.042595,0.009304,0.011011,-0.060507,-0.235153,-0.007925,0.007889) * L5_5 + mat4(0.407332,-0.390094,0.017505,0.004992,-0.167593,-0.407873,0.019861,0.002543,-0.002599,0.295022,-0.002856,-0.003385,0.042151,-0.170731,-0.008230,0.002185) * L5_6 + mat4(0.090622,0.202877,0.006484,0.000215,0.295710,-0.180467,0.013263,-0.025411,0.140391,0.012129,0.000809,0.002431,-0.108627,-0.242963,-0.005563,-0.034540) * L5_7 + mat4(0.198239,0.061209,-0.014924,0.005428,0.169575,0.250541,-0.012990,0.028265,-0.099022,0.089644,0.012583,-0.012344,-0.335733,0.084686,-0.000908,0.039954) * L5_8 + mat4(-0.231966,0.297133,0.006542,-0.018232,-0.032381,-0.304882,-0.031869,0.004495,0.196323,0.244604,0.005646,-0.041167,0.139129,0.670051,0.006126,0.015519) * L5_9 + mat4(-0.054757,-0.393744,0.009046,0.004943,-0.163233,-0.100465,-0.030961,0.009848,0.002437,0.305761,0.008352,0.025003,0.099364,0.309441,0.010812,-0.031189) * L5_10 + mat4(0.526326,-0.408100,-0.018882,0.006305,0.074163,-0.103914,0.004507,0.002130,0.089879,-0.371380,-0.001950,-0.016538,0.112374,-0.038823,0.007028,-0.006728) * L5_11 + mat4(0.164206,-0.223447,-0.014869,0.003807,-0.076261,0.340114,-0.001495,-0.001678,-0.371935,0.484407,-0.001460,0.002338,-0.122560,-0.213676,0.014938,-0.005975) * L5_12 + mat4(0.275343,-0.362882,0.002913,-0.007588,-0.430713,0.116307,-0.029141,0.011329,-0.218148,0.202470,-0.010844,-0.006029,-0.134099,-0.077947,0.000525,-0.017491) * L5_13 + mat4(-0.223954,0.070724,0.004169,0.020414,-0.029317,0.077950,0.005907,-0.011151,-0.437324,0.015145,0.003914,0.018591,-0.236007,0.275181,-0.017293,0.030804) * L5_14 + mat4(0.104307,0.397262,-0.009350,0.003507,0.094001,-0.013402,-0.028305,0.024763,-0.216984,-0.115504,0.004818,-0.015564,0.111710,-0.538910,0.019236,-0.026553) * L5_15 + vec4(-0.451457,1.233368,-0.002147,0.027722)));\nvec4 L6_12 = sin((mat4(0.171792,-0.164749,-0.013521,0.010499,-0.124741,0.005546,-0.005081,-0.080234,-0.093296,0.395597,0.001322,0.267955,-0.072329,-0.042547,-0.002542,-0.102250) * L5_0 + mat4(0.584021,-0.310387,0.010576,0.187956,0.446437,-0.101865,0.004887,0.007934,-0.151211,-0.106608,-0.003555,-0.066196,0.333619,0.040754,0.022289,0.081897) * L5_1 + mat4(-0.018206,0.050357,0.014884,-0.088531,-0.546054,0.107063,-0.023189,-0.019939,-0.298346,0.130016,0.006441,-0.106134,-0.391737,0.015602,-0.008495,-0.031134) * L5_2 + mat4(-0.115342,-0.126179,-0.022059,0.065599,-0.011007,0.095983,-0.006617,-0.157356,-0.208999,0.136691,0.007311,-0.023072,0.076604,0.116706,-0.023068,0.028142) * L5_3 + mat4(-0.083102,-0.008994,0.021125,-0.008710,0.056026,-0.079550,-0.025153,-0.059214,-0.221678,-0.046623,0.001660,0.156279,0.137337,0.098407,-0.032196,0.183762) * L5_4 + mat4(0.348831,0.098365,0.006467,-0.086691,0.019884,0.176404,-0.002320,-0.062242,0.147299,-0.103756,0.010136,-0.076561,-0.205111,0.016760,0.001596,0.056827) * L5_5 + mat4(0.283352,0.082914,-0.000143,0.017380,0.170808,-0.206589,0.002505,-0.270770,0.007395,-0.146652,0.002414,-0.030033,0.500691,-0.109140,-0.005755,0.081168) * L5_6 + mat4(0.291931,0.097607,0.009233,0.108689,0.025134,0.063860,-0.003876,-0.123778,0.082142,0.006642,0.029367,-0.006243,0.153470,0.058383,-0.022593,0.096363) * L5_7 + mat4(0.015616,0.348284,-0.007726,0.012750,0.022559,0.306325,0.010020,0.018444,-0.442701,0.019559,0.009885,0.214266,-0.069571,0.159630,0.004538,0.220120) * L5_8 + mat4(-0.056130,-0.369946,0.006170,-0.298636,-0.396529,0.159809,-0.020007,0.073759,-0.169848,0.176298,-0.012792,0.231176,-0.377697,-0.012652,0.005540,0.065722) * L5_9 + mat4(-0.259415,0.061891,0.010939,0.011856,-0.045606,0.080161,0.025985,-0.306396,-0.124059,-0.143238,0.012834,0.003576,-0.084709,0.382384,-0.013135,0.367303) * L5_10 + mat4(0.128007,0.493130,-0.019575,-0.778384,0.034534,-0.141966,0.024015,0.043183,0.049847,0.073954,0.015277,0.225781,0.143918,0.248715,0.004011,0.538709) * L5_11 + mat4(-0.083909,0.031110,-0.000678,0.012772,0.071491,-0.105743,0.001355,-0.053246,-0.079828,-0.108801,0.012759,0.048532,-0.183798,0.077613,-0.019087,0.053204) * L5_12 + mat4(0.138433,-0.114795,0.006156,0.009092,0.018870,0.004642,-0.009224,-0.199304,0.211110,0.036569,-0.017736,0.068463,0.178591,0.066744,-0.004728,0.336142) * L5_13 + mat4(0.219656,-0.109032,0.028601,-0.182085,0.322539,0.011652,-0.011381,0.041624,0.183457,0.045599,0.026006,0.220576,0.526693,0.069550,0.012942,0.370319) * L5_14 + mat4(0.001336,-0.264675,0.011124,-0.225650,-0.085988,-0.064653,-0.009066,-0.010310,-0.235033,0.125433,-0.014670,-0.061700,0.383727,0.218592,0.006265,-0.370344) * L5_15 + vec4(0.791870,0.252722,0.000578,-1.327955)));\nvec4 L6_13 = sin((mat4(-0.040621,0.086190,0.015237,0.002748,-0.133429,0.064460,0.037140,-0.012213,-0.045996,0.177014,-0.234625,-0.014212,-0.041312,0.062164,0.062187,0.007740) * L5_0 + mat4(0.020462,0.606024,-0.305912,0.002259,0.117200,0.038626,0.170793,0.007579,0.125666,-0.093153,0.032443,0.011398,-0.042204,-0.366868,0.092534,-0.013008) * L5_1 + mat4(-0.069877,-0.021824,-0.147231,-0.023703,0.046401,0.342010,-0.208977,0.004087,-0.064546,0.130120,-0.106807,-0.008086,0.006759,-0.165287,0.156717,-0.012149) * L5_2 + mat4(-0.029912,-0.048808,0.037051,-0.009929,-0.036094,-0.086397,0.079479,0.026631,0.024089,0.122238,-0.128294,0.009696,0.049092,-0.201203,-0.029161,-0.027824) * L5_3 + mat4(-0.046452,-0.020922,0.024418,0.039893,-0.036349,-0.015420,0.106705,-0.030536,0.078491,0.390728,-0.083441,-0.011328,-0.057043,0.105041,0.061507,0.016136) * L5_4 + mat4(0.316297,-0.074909,0.010825,0.010156,-0.081767,0.300960,0.234698,-0.018656,-0.074889,-0.135666,0.123790,0.016761,-0.010848,0.057307,-0.041471,-0.006157) * L5_5 + mat4(0.005472,-0.017924,0.048590,-0.004767,0.164822,0.127068,-0.023275,0.033571,-0.180676,-0.157697,-0.025393,-0.008803,-0.007837,-0.116501,0.025216,-0.004219) * L5_6 + mat4(-0.114826,0.074494,0.042233,0.019752,0.163573,0.063450,-0.096987,-0.032281,0.043144,-0.057862,0.060188,0.001646,-0.019397,0.087701,0.174898,-0.043646) * L5_7 + mat4(-0.068435,0.121018,0.108865,0.009956,0.137566,0.028373,-0.018016,0.006275,0.078055,-0.124673,-0.051531,0.007347,-0.030226,0.055798,0.211840,-0.007091) * L5_8 + mat4(0.044192,-0.101045,-0.028668,-0.008179,-0.058910,0.230089,-0.041525,-0.002894,-0.115662,0.168460,-0.201697,-0.018526,0.163496,-0.007955,-0.041577,0.021523) * L5_9 + mat4(-0.086293,0.160866,0.230840,-0.016809,0.044701,-0.045509,0.068330,-0.002007,-0.018312,-0.095055,-0.111193,0.000726,-0.053100,0.176881,0.227868,0.017235) * L5_10 + mat4(-0.057492,-0.473252,-0.200596,0.003188,-0.072295,0.037222,-0.076782,0.027832,0.004301,0.091379,0.192435,-0.022427,-0.107659,0.261901,0.125534,-0.033432) * L5_11 + mat4(0.047238,0.034112,0.032867,0.013223,0.104192,-0.099700,0.106781,-0.020504,-0.077553,-0.122140,0.220341,0.011890,0.077343,0.171767,0.066732,-0.009931) * L5_12 + mat4(0.028788,-0.130281,-0.080438,0.014419,-0.019201,0.540817,0.428922,-0.004214,-0.045807,0.010293,-0.184887,0.014868,0.050903,-0.020209,0.093056,0.003187) * L5_13 + mat4(0.070440,-0.134195,0.204321,0.045254,-0.022777,-0.141118,-0.267269,-0.014076,-0.133420,-0.259280,-0.040910,0.017759,0.059992,0.551264,-0.061678,-0.014368) * L5_14 + mat4(0.058310,0.005443,-0.018005,0.009189,-0.074442,0.049996,-0.003823,0.017373,0.062549,-0.110818,0.001862,0.000572,-0.145736,-0.069603,-0.234819,-0.003206) * L5_15 + vec4(-0.223179,1.833517,-0.067549,-0.007298)));\nvec4 L6_14 = sin((mat4(-0.003677,0.111224,-0.162971,0.000778,0.004826,0.287192,-0.025632,-0.012068,-0.020589,0.197723,-0.881868,-0.017283,-0.006221,-0.132822,-0.016724,-0.005436) * L5_0 + mat4(-0.011865,-0.293752,0.030897,-0.006116,0.005444,-0.113156,0.210772,0.014290,0.012612,-0.010489,0.222038,-0.011856,-0.046164,0.234850,0.315368,-0.013004) * L5_1 + mat4(-0.018890,0.221291,-0.023198,0.003857,0.049735,0.244167,0.104683,0.003883,0.002193,-0.349731,0.019885,0.010382,-0.001541,-0.332064,0.212156,-0.024588) * L5_2 + mat4(0.011446,0.081057,0.367443,-0.020054,-0.016023,-0.068577,0.169073,0.012504,0.018247,0.200539,-0.160268,0.003697,0.011179,-0.233349,-0.171215,-0.035044) * L5_3 + mat4(-0.013717,0.415683,0.174069,-0.008949,0.007120,-0.079219,-0.009441,-0.020037,0.000507,-0.409985,-0.138937,0.004305,0.021699,-0.348558,0.055138,-0.000629) * L5_4 + mat4(0.003340,0.111177,-0.280730,0.005257,0.015198,0.440738,-0.253103,0.005443,-0.005537,-0.051658,0.022256,0.009371,-0.004188,-0.410775,-0.068234,0.008750) * L5_5 + mat4(-0.004954,0.264273,0.152673,-0.018400,0.009586,0.894229,-0.204944,0.006146,-0.005208,0.825510,-0.054755,0.001782,0.008345,-0.142115,0.349877,0.002959) * L5_6 + mat4(-0.016082,-0.034503,-0.099459,-0.022585,-0.013442,0.336180,0.089943,0.004495,-0.003594,0.301711,0.049282,0.010228,-0.019582,0.461927,-0.138111,-0.012090) * L5_7 + mat4(0.005230,0.539918,-0.409986,-0.001819,0.001315,-0.412321,-0.084653,0.005716,0.001214,-0.252555,0.122370,0.001143,-0.010119,0.362875,-0.575451,-0.024432) * L5_8 + mat4(0.021246,0.366971,0.230220,0.028263,-0.009661,0.360854,-0.309368,0.024443,0.008587,0.183685,-0.586792,-0.006818,-0.003497,-0.054277,-0.282421,0.006444) * L5_9 + mat4(-0.014436,0.185072,-0.091255,-0.010651,0.007002,0.771598,-0.387875,-0.000729,0.024498,0.203417,-0.103201,-0.015105,-0.003186,-0.021514,-0.797162,0.012659) * L5_10 + mat4(0.008734,0.786866,-0.835394,-0.009640,0.016805,-0.202336,-0.076197,0.016025,-0.007711,-0.266526,0.242332,-0.000382,-0.018976,0.726778,-0.365339,0.011805) * L5_11 + mat4(0.013321,0.037005,-0.260214,-0.001433,-0.012612,-0.101659,0.047911,0.005774,0.025265,0.688609,-0.442744,-0.003164,-0.003046,-0.068635,-0.143255,-0.025190) * L5_12 + mat4(-0.001411,-0.249912,0.358658,0.018715,-0.007855,0.288761,0.226330,0.008459,0.008019,-0.036817,0.340657,-0.001667,0.024177,-0.636537,-0.171557,0.022770) * L5_13 + mat4(0.012590,0.374035,-0.167275,-0.016940,-0.011180,-0.337648,0.357453,0.004296,0.027529,-0.030770,-0.433962,0.019848,-0.006449,-0.050696,-0.230485,0.008824) * L5_14 + mat4(-0.014081,-0.394580,0.608040,0.037242,0.021650,0.047944,-0.151758,0.014055,-0.001018,-0.016510,0.363519,0.007915,0.003785,0.392424,0.576883,-0.027115) * L5_15 + vec4(-0.025264,0.159042,-0.234433,-0.006863)));\nvec4 L6_15 = sin((mat4(0.187068,0.032107,-0.138101,0.073484,-0.030331,-0.142180,-0.075147,0.077357,0.064586,0.292589,0.193310,-0.091039,0.058176,0.134753,0.019629,0.033746) * L5_0 + mat4(-0.303946,-0.040720,-0.194958,0.050056,0.311397,0.117415,-0.126234,0.007469,-0.016546,-0.250025,0.019791,0.017754,0.114518,-0.073934,-0.167186,0.231920) * L5_1 + mat4(0.034422,-0.037720,0.173293,0.054216,0.089654,-0.315280,0.130983,0.281623,0.149964,0.092626,-0.167950,-0.141285,0.124756,-0.638725,0.072687,0.006883) * L5_2 + mat4(-0.020435,-0.070200,-0.085771,-0.184983,0.172305,-0.379099,0.025331,-0.029167,-0.119444,0.176056,0.018419,0.041424,-0.048829,0.251008,-0.134158,-0.164950) * L5_3 + mat4(-0.052452,-0.039008,-0.230712,0.101557,0.059219,0.040358,0.003670,0.005309,0.032777,0.223870,0.030359,-0.125821,0.120696,-0.065102,0.210269,0.070917) * L5_4 + mat4(-0.185256,-0.349532,-0.015499,0.126754,0.325202,0.173213,-0.316024,-0.169271,-0.167781,-0.356102,0.012951,-0.028467,-0.073946,-0.084114,0.117183,-0.073269) * L5_5 + mat4(0.202530,-0.112849,-0.123155,0.000550,-0.041813,-0.165400,-0.280063,-0.050130,-0.001337,0.198891,-0.170564,0.155563,0.130771,0.167782,-0.033224,-0.156542) * L5_6 + mat4(-0.069195,0.362747,-0.092297,-0.164397,0.130833,0.120431,0.025940,-0.036734,0.033897,0.257276,-0.112513,0.163244,-0.212027,0.413709,-0.084407,-0.069599) * L5_7 + mat4(0.362466,-0.189233,0.251953,0.087575,-0.076069,-0.063416,0.016965,0.188682,0.295597,0.260422,-0.132349,-0.351771,0.200122,0.601144,-0.058505,-0.046759) * L5_8 + mat4(0.095622,-0.030093,-0.037105,0.082089,-0.023787,0.058682,0.039054,-0.202481,-0.019967,0.147573,-0.158874,0.173356,-0.051121,-0.238160,-0.033932,0.108384) * L5_9 + mat4(-0.047422,0.084096,-0.116046,-0.024918,-0.031981,-0.612484,-0.151107,0.119296,0.217254,-0.069056,0.163241,0.011045,-0.071746,0.287996,0.142237,-0.014032) * L5_10 + mat4(-0.408763,0.007321,-0.414258,0.068549,0.117325,0.257046,0.028042,-0.259757,0.318126,0.297516,0.137698,0.085861,-1.649611,-0.916138,-0.046555,0.312599) * L5_11 + mat4(-0.082017,0.049783,-0.037640,0.073923,0.221545,-0.080342,0.271117,0.097607,-0.085996,-0.516911,0.096315,0.129533,0.163624,0.063657,-0.138531,-0.200438) * L5_12 + mat4(0.156848,0.382011,0.226600,-0.248371,-0.030434,0.901126,-0.182281,-0.273199,0.181131,0.295649,0.116205,0.019459,-0.104109,-0.138442,-0.297411,-0.225165) * L5_13 + mat4(0.000875,0.054314,-0.102508,0.095797,0.204197,0.188928,0.174093,0.079440,-0.174778,-0.187291,-0.188381,0.327167,-0.069841,0.472468,-0.352085,-0.573988) * L5_14 + mat4(0.022829,-0.281281,0.049636,0.113610,-0.151792,-0.095954,0.175269,0.188108,-0.085092,0.046038,-0.124982,-0.001447,-0.006233,0.219726,-0.009616,-0.669910) * L5_15 + vec4(-1.639029,0.263486,-0.609612,-1.223745)));\nvec3 F_0 = (mat4x3(0.001065,0.000205,0.000747,0.009754,0.014561,0.013024,-0.000935,0.000942,0.001070,0.061864,0.063584,0.060094) * L6_0 + mat4x3(0.001609,0.000905,0.000847,0.000670,-0.001564,-0.001614,-0.051051,0.029504,0.030698,0.014533,0.018718,0.019758) * L6_1 + mat4x3(0.001065,0.000291,0.000071,-0.000402,0.001208,0.001232,0.010304,0.010630,0.011851,-0.105404,-0.117656,-0.121062) * L6_2 + mat4x3(-0.000023,0.002194,0.003707,-0.090000,-0.002248,0.014468,0.001631,0.003531,0.002634,-0.024781,-0.028418,0.044166) * L6_3 + mat4x3(0.001921,0.000138,0.002738,-0.011914,-0.012070,-0.012964,0.000711,-0.000796,-0.000854,0.010046,-0.030669,0.022478) * L6_4 + mat4x3(-0.102663,-0.106305,-0.109612,-0.029439,-0.032284,-0.031278,0.006506,0.006171,0.007610,-0.012605,-0.025995,0.045066) * L6_5 + mat4x3(0.016073,-0.004990,0.000060,-0.059780,-0.055419,-0.063534,-0.010042,0.028158,-0.015035,-0.098568,-0.095796,-0.110031) * L6_6 + mat4x3(-0.000021,-0.010279,0.012585,-0.005009,-0.005629,-0.006816,-0.006339,-0.005910,-0.006642,-0.019697,0.008125,0.005878) * L6_7 + mat4x3(-0.000565,-0.001729,-0.002462,0.032571,-0.126623,0.080380,-0.040112,-0.034079,-0.040235,-0.044386,0.018853,0.013772) * L6_8 + mat4x3(-0.013087,-0.006744,0.005786,-0.000532,-0.001994,-0.002454,0.004283,0.003743,0.004324,0.007056,0.006584,-0.012651) * L6_9 + mat4x3(0.005637,0.006921,0.006362,-0.029549,0.009981,0.008623,0.071032,0.086544,0.095335,-0.003816,-0.003376,-0.003384) * L6_10 + mat4x3(0.020121,-0.009092,-0.005407,-0.004572,-0.004687,-0.006594,-0.000345,-0.000030,0.000065,0.003278,-0.002117,-0.002133) * L6_11 + mat4x3(-0.008559,-0.008738,-0.009671,-0.011427,0.004272,0.001133,0.000957,-0.001230,-0.001448,0.002832,0.008661,-0.008128) * L6_12 + mat4x3(0.002698,-0.031402,0.037021,0.010207,0.005391,-0.012708,0.024694,-0.006983,-0.010273,0.000828,-0.000895,0.000501) * L6_13 + mat4x3(0.000430,0.002001,0.001864,-0.002741,-0.003082,-0.004806,-0.003643,-0.003800,-0.002567,0.000495,-0.000158,-0.000259) * L6_14 + mat4x3(-0.009517,-0.000708,0.019167,-0.006973,-0.007648,-0.006461,0.038559,-0.009137,-0.013750,-0.034836,-0.041827,-0.045657) * L6_15 + vec3(-0.183205,-0.203745,-0.154321));\nreturn F_0;\n}\n\n#pragma optimize(on)\n\n\n\n\n\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "//YCZ:\n//Version2 - 2022.06.27(Tokyo time)\n\n//*************About Setting******************//\n//No need additional setting. Time axis is as same as the offical one\n\n//*************About Exposure******************//\n//Exposure is under Image\n\n//*************About Time******************//\n//If time shift is needed for measurement, plz replace all iTime variable with desired time value(included in Buffer A and Image)\n\n//*************About Measurement******************//\n//SSIM data example(under exposure of 2):\n//Frame0(t = 0.0) ssim 0.961\n//Frame1(t = 1.0) ssim 0.963\n//Frame2(t = 5.0) ssim 0.946\n\n//(idk how my render will be measured with gt.\n//And this Shader will take around 6 seconds to compile (gtx 2070, cpu i7 11xxxx)\n//In order to avoid problems such as graphics card model browser model conflict or sth.\n//if the value is significantly lower than this value means that this shader is not compiled correctly, \n//please change the browser, \n//thank you very much ^_^\nvec4 GetOneFace3(vec2 uv)\n{\n    return texture(iChannel0, vec3(2.0*vec2(uv.x,uv.y)-1.0,1.0f).xzy);\n}\nvec4 GetOneFace4(vec2 uv)\n{\n    return texture(iChannel0, vec3(2.0*vec2(1.0-uv.x,1.0-uv.y)-1.0,-1.0f));\n}\nvec4 GetOneFace5(vec2 uv)\n{\n    return texture(iChannel0, vec3(2.0*vec2(uv.x,1.0-uv.y)-1.0,1.0f));\n}\nvec4 GetOneFace2(vec2 uv)\n{\n    return texture(iChannel0, vec3(2.0*vec2(uv.x,1.0 - uv.y)-1.0,-1.0f).xzy);\n}\n\n/*\nvec4 gi(vec3 position, int matrixindex)\n{\nvec4 xx0 = ...\nvec4 xx1 = ...\n\nif(matrixindex == 0)\n{\n    return ...;\n}\nelse if()\n{\n    return ...;\n}\n...\n}\n*/\n#pragma optimize(off)\nvec4 Lightmap_Half_LRBU22(const vec3 uv_0, const vec3 uv_1, const int BlockIndex)\n{\nvec4 L0_0 = sin(20.000000 * (mat3x4(0.170390,-0.170097,0.164968,0.123155,-0.151278,-0.151455,0.134574,-0.067733,0.046621,0.127368,-0.121744,-0.194458) * uv_0 + mat3x4(-0.001888,-0.095432,0.149652,0.045661,-0.243498,-0.005227,0.323170,0.136361,-0.023419,-0.029139,-0.144466,-0.038378) * uv_1 + vec4(0.030905,-0.103096,0.094443,0.103860)));\nvec4 L0_1 = sin(20.000000 * (mat3x4(0.195213,-0.169588,-0.019275,-0.107222,0.242536,0.123477,-0.118290,-0.165524,0.175480,-0.052317,-0.112054,-0.239879) * uv_0 + mat3x4(0.030467,0.118639,0.008950,-0.101330,0.179717,0.018435,-0.001657,-0.147945,0.085572,0.052373,-0.043520,-0.222877) * uv_1 + vec4(0.095072,0.171369,-0.222436,-0.149277)));\nvec4 L0_2 = sin(20.000000 * (mat3x4(-0.185945,-0.159686,0.157336,-0.196850,0.007617,0.268310,0.119113,-0.127662,0.195616,-0.001572,-0.016136,0.076980) * uv_0 + mat3x4(-0.180099,0.014940,0.142872,0.073714,-0.153861,0.293912,0.207690,-0.120819,0.221173,-0.054235,-0.089350,-0.119928) * uv_1 + vec4(0.077187,0.057265,-0.137031,-0.123624)));\nvec4 L0_3 = sin(20.000000 * (mat3x4(0.044345,-0.047004,-0.304288,-0.154379,-0.121365,-0.275763,-0.028574,-0.258531,-0.162072,-0.027719,0.012664,-0.209332) * uv_0 + mat3x4(0.024651,0.039449,0.025414,0.086427,-0.008856,-0.320501,0.018626,-0.131113,-0.202037,-0.048811,0.162611,-0.115633) * uv_1 + vec4(-0.149455,0.009924,0.073473,-0.231831)));\nvec4 L0_4 = sin(20.000000 * (mat3x4(-0.101210,-0.092816,0.026578,-0.218016,0.004578,-0.285596,0.250638,0.172556,0.214613,-0.216567,-0.043705,-0.173211) * uv_0 + mat3x4(-0.121487,-0.086819,-0.003248,0.034438,0.065617,-0.237647,-0.087017,-0.070907,-0.046699,0.135844,0.088148,0.097045) * uv_1 + vec4(-0.030630,0.061283,-0.042724,-0.115797)));\nvec4 L0_5 = sin(20.000000 * (mat3x4(0.126018,-0.198735,-0.173211,-0.158614,0.244065,-0.014585,0.019402,0.055723,-0.132648,-0.176362,-0.099171,-0.221049) * uv_0 + mat3x4(-0.011693,0.098070,-0.093099,0.048539,0.230221,-0.043356,0.072681,-0.117443,-0.044536,0.024465,0.083038,-0.143385) * uv_1 + vec4(0.019187,0.066200,-0.059012,0.091947)));\nvec4 L0_6 = sin(20.000000 * (mat3x4(0.000947,0.006200,0.053766,0.201405,0.000109,-0.119247,0.071087,-0.198424,-0.000109,-0.001258,-0.018427,0.137926) * uv_0 + mat3x4(0.080425,-0.192247,-0.164902,-0.108350,0.079008,-0.079160,0.171418,-0.165810,0.078307,-0.123942,-0.153628,-0.050664) * uv_1 + vec4(-0.157564,-0.196127,-0.035073,-0.097626)));\nvec4 L0_7 = sin(20.000000 * (mat3x4(0.098519,0.204170,0.026257,0.051425,0.195831,0.136695,0.129334,-0.151348,0.148729,0.195663,0.233894,-0.205229) * uv_0 + mat3x4(-0.127000,0.115016,0.119035,-0.136133,0.213383,-0.046283,0.023012,-0.186885,-0.157653,0.035738,0.213261,0.107116) * uv_1 + vec4(-0.013796,0.003580,-0.123000,-0.026820)));\nvec4 L0_8 = sin(20.000000 * (mat3x4(0.184678,-0.109078,-0.025816,-0.056688,0.003230,-0.023314,-0.202885,-0.121293,-0.002689,-0.117527,-0.002012,-0.117256) * uv_0 + mat3x4(0.180818,-0.028864,-0.106805,0.001355,0.103611,-0.024321,-0.084209,-0.076692,-0.013792,-0.029515,0.217967,-0.159831) * uv_1 + vec4(-0.075764,0.098253,-0.099583,0.060998)));\nvec4 L0_9 = sin(20.000000 * (mat3x4(-0.055956,-0.002890,0.091932,-0.249722,-0.119846,-0.000961,0.106380,0.128589,0.141507,-0.002166,-0.173333,-0.025571) * uv_0 + mat3x4(-0.207579,0.077747,-0.088497,-0.114388,0.001187,0.239636,0.158462,-0.011200,0.162315,0.077937,-0.017165,0.180163) * uv_1 + vec4(0.159488,0.156349,-0.037214,0.172900)));\nvec4 L0_10 = sin(20.000000 * (mat3x4(-0.148213,-0.096727,0.006985,0.068197,0.191422,0.076569,-0.004260,0.184093,0.041384,0.089330,0.097835,-0.115919) * uv_0 + mat3x4(-0.150702,-0.103426,-0.145726,0.058515,0.042812,0.184117,-0.161015,0.103164,-0.145928,0.131830,-0.148514,-0.135043) * uv_1 + vec4(0.130579,0.001407,-0.144605,0.074704)));\nvec4 L0_11 = sin(20.000000 * (mat3x4(0.000612,0.113222,0.086301,-0.032925,-0.001116,0.067637,-0.197740,0.181771,-0.002476,-0.218756,-0.009886,0.047604) * uv_0 + mat3x4(-0.076601,0.203553,-0.022517,-0.138578,-0.084096,0.057312,-0.080890,0.292170,0.074699,0.073428,0.062234,-0.073212) * uv_1 + vec4(-0.156612,0.143751,0.114131,0.041613)));\nvec4 L0_12 = sin(20.000000 * (mat3x4(-0.251344,-0.000816,-0.244488,-0.127603,-0.010343,-0.002663,0.098176,0.237592,-0.020221,-0.000492,0.111868,0.184670) * uv_0 + mat3x4(0.056868,0.001042,-0.045721,-0.137891,-0.045115,-0.159223,-0.171031,0.196998,0.204866,-0.002764,0.019703,-0.096577) * uv_1 + vec4(0.082655,-0.080911,0.106027,-0.094619)));\nvec4 L0_13 = sin(20.000000 * (mat3x4(0.125271,-0.339833,-0.061831,0.084067,0.097058,0.085038,0.276494,0.123861,0.102099,0.033677,0.064027,-0.213449) * uv_0 + mat3x4(-0.017268,-0.023077,0.044061,-0.052985,0.173684,-0.048148,0.098418,0.111715,0.023393,0.271065,-0.117630,-0.110109) * uv_1 + vec4(0.019981,-0.117696,-0.054067,0.036313)));\nvec4 L0_14 = sin(20.000000 * (mat3x4(0.070279,0.257631,-0.089865,-0.173890,-0.141870,-0.218386,0.221467,0.027216,0.235858,0.114582,-0.167326,0.210380) * uv_0 + mat3x4(0.119359,-0.031048,-0.023316,-0.094195,-0.000459,-0.070755,0.164348,0.167177,0.052177,0.078329,0.115278,0.013936) * uv_1 + vec4(-0.153495,0.159279,0.082483,0.127064)));\nvec4 L0_15 = sin(20.000000 * (mat3x4(-0.197466,-0.095298,0.116362,-0.130035,-0.187493,-0.038129,0.154328,0.122619,-0.233400,0.196591,0.119898,-0.049663) * uv_0 + mat3x4(-0.028561,0.143687,-0.034126,0.104543,-0.050200,-0.177418,0.129677,0.266691,0.103820,0.034532,0.039856,0.179836) * uv_1 + vec4(-0.252911,0.162327,0.050984,-0.145000)));\nvec4 L1_0 = sin((mat4(0.074764,-0.363615,0.450081,0.014266,-0.100304,0.434897,-0.047290,-0.294204,-0.506972,0.128365,-0.025602,0.294140,0.171873,-0.176339,-0.023875,-0.049834) * L0_0 + mat4(-0.505707,-0.864250,0.317939,-0.199966,-0.229814,-0.438403,0.336358,0.499905,-0.070169,-0.079849,0.100362,-0.204470,-0.334719,0.005488,0.101882,-0.330911) * L0_1 + mat4(0.250110,-0.280905,-0.445357,-0.345163,0.107269,0.302849,-0.693834,0.734530,0.196764,-0.036331,0.041262,-0.076817,0.084798,0.008281,0.462651,0.361920) * L0_2 + mat4(-0.114585,0.241599,0.023919,-0.032992,0.184482,0.044081,0.138100,-0.212247,-0.487289,-0.150074,-0.328240,-0.670800,-0.251331,0.214233,0.172562,0.096093) * L0_3 + mat4(-0.175333,0.026352,-0.024204,0.131367,-0.187724,-0.088188,0.056112,-0.596133,-0.490149,-0.455132,0.225102,-0.086164,-0.283548,0.197985,0.436815,-0.061727) * L0_4 + mat4(0.555001,-0.337615,0.891231,-0.328081,0.164394,-0.136831,0.278808,-0.092418,0.413669,0.007743,0.088593,-0.133347,-0.411617,-0.190742,0.161151,0.254311) * L0_5 + mat4(0.172732,0.454871,-0.208344,-0.610772,-0.075276,-0.280457,0.121371,-0.016637,-0.034953,-0.060588,0.037912,-0.025147,0.109613,0.234150,-0.502654,-0.418959) * L0_6 + mat4(-0.275049,-0.087526,0.214266,-0.242185,0.362088,0.127312,0.207893,0.153619,-0.135894,-0.147167,0.075833,0.156178,0.127227,0.218918,0.096358,0.006164) * L0_7 + mat4(0.405116,-0.183529,0.283587,-0.044289,0.023166,0.002685,0.162748,0.120536,0.056011,0.111520,-0.146715,-0.173678,-0.048303,-0.176054,0.075965,-0.037497) * L0_8 + mat4(-0.050411,-0.049206,-0.085054,-0.117004,-0.114065,0.136319,-0.114664,-0.136504,-0.196099,0.091724,0.211618,0.238036,-0.197211,0.265158,-0.288795,0.080653) * L0_9 + mat4(0.410608,-0.215142,0.130606,-0.104407,-0.316041,0.136687,-0.190299,0.131935,-0.272978,0.262749,0.037755,0.182176,0.226844,0.069267,-0.093790,-0.445055) * L0_10 + mat4(0.192760,-0.108145,0.185724,-0.642330,-0.117454,0.258500,-0.170974,0.185717,0.089538,0.361128,-0.032046,0.072338,-0.008315,-0.291919,-0.118066,-0.076640) * L0_11 + mat4(-0.210143,-0.145375,0.286685,0.158379,-0.185640,-0.221010,0.320780,-0.354908,-0.122904,-0.303859,-0.219937,0.204711,0.268902,-0.071248,0.373123,0.384430) * L0_12 + mat4(-0.258417,-0.065346,-0.059212,-0.320121,0.305224,0.387492,0.018412,0.344409,0.087562,0.020997,-0.096626,0.022883,-0.541565,0.176494,-0.019593,0.008896) * L0_13 + mat4(-0.182738,-0.182180,0.486032,-0.072810,0.733685,-0.281556,-0.539548,0.005944,-0.073282,-0.105711,-0.189210,0.322017,0.019224,-0.504387,-0.194306,-0.091422) * L0_14 + mat4(0.323416,0.123081,-0.088364,-0.206221,-0.367536,0.346790,0.217141,0.217174,-0.211516,0.084350,-0.170551,0.033735,0.197993,-0.046665,0.084366,-0.196240) * L0_15 + vec4(0.504366,-0.513739,-0.244393,0.032375)));\nvec4 L1_1 = sin((mat4(0.054449,-0.046839,-0.138730,-0.179360,0.660020,0.189719,-0.255492,0.416913,0.207090,0.282337,0.146758,0.296988,-0.298667,0.285042,-0.194367,-0.098667) * L0_0 + mat4(0.059894,0.427492,-0.546023,-0.172676,-0.135532,0.312672,-0.164207,0.500376,-0.088322,0.005872,0.078408,-0.174744,-0.527285,-0.132893,-0.142156,-0.428116) * L0_1 + mat4(-0.003358,-0.025995,-0.485844,-0.047650,0.162023,0.007881,0.430590,-0.070802,0.120537,-0.140015,-0.193264,0.101517,-0.206946,0.056724,0.324909,-0.459506) * L0_2 + mat4(0.127497,-0.227790,0.298145,-0.100741,-0.340687,-0.104879,-0.006265,0.391779,-0.773910,-0.095513,-0.835551,-0.396786,0.034775,-0.117947,0.261733,-0.380781) * L0_3 + mat4(0.123271,-0.440127,0.061429,0.210301,-0.114920,-0.265181,-0.220678,-0.355060,0.557373,-0.479923,-0.055185,-0.023603,0.403796,-0.000686,-0.026223,-0.306141) * L0_4 + mat4(0.279107,0.435262,0.498029,0.402681,-0.085408,0.163380,-0.034636,0.171401,0.001596,0.244548,-0.092570,0.048703,-0.107012,-0.149176,-0.371051,-0.150389) * L0_5 + mat4(-0.144136,0.321872,-0.271063,-0.324555,-0.061347,-0.264057,-0.143900,-0.054857,-0.006099,-0.047690,-0.044737,0.047902,0.230777,0.326851,-0.479872,0.070714) * L0_6 + mat4(-0.152288,0.003271,0.125428,-0.155061,-0.111722,0.072982,0.060887,0.015852,0.111948,-0.430659,0.130035,0.090869,0.481453,-0.241231,0.276005,-0.115616) * L0_7 + mat4(-0.175319,0.299586,-0.093676,0.178941,-0.247771,-0.354723,-0.075220,-0.091481,-0.154336,-0.102104,-0.060462,-0.119303,0.030443,-0.112422,0.023003,0.085427) * L0_8 + mat4(0.044116,0.062224,-0.013685,-0.162500,0.081598,0.473975,0.183297,0.156622,0.396723,-0.054311,-0.145491,-0.104702,0.424020,0.097041,0.169219,-0.042814) * L0_9 + mat4(0.120107,-0.019070,0.255942,0.074855,0.237654,0.028605,0.078935,-0.057540,0.166327,-0.209839,-0.018884,0.160688,-0.158356,-0.010119,0.062865,0.118717) * L0_10 + mat4(-0.295046,-0.507931,0.177801,0.420282,-0.135615,-0.235502,-0.193682,0.176714,-0.499610,0.405790,-0.140194,0.133713,-0.068807,0.226447,-0.229265,-0.435179) * L0_11 + mat4(0.089655,0.166008,0.059040,0.147990,-0.201407,0.158223,-0.133807,-0.496233,0.007940,-0.080557,0.380682,0.168990,0.329792,0.119609,0.036407,-0.114351) * L0_12 + mat4(-0.174712,0.178209,-0.258917,-0.080764,0.481857,0.107805,0.202413,0.118638,0.089964,-0.122052,-0.174003,0.042414,0.152374,-0.401135,-0.290165,0.334357) * L0_13 + mat4(-0.000086,-0.305644,-0.307723,0.250844,-0.476009,0.011789,-0.356186,-0.108491,0.082512,0.416421,0.133162,-0.354368,-0.379743,-0.266056,0.086665,-0.180357) * L0_14 + mat4(-0.021609,0.300748,-0.233138,0.371467,0.528052,0.392642,0.007188,-0.019251,-0.087090,0.212152,-0.195209,-0.100772,-0.045017,0.151896,-0.099074,0.197108) * L0_15 + vec4(-0.636943,0.299380,0.086392,0.046181)));\nvec4 L1_2 = sin((mat4(-0.240874,-0.037042,0.152067,0.187585,-0.369315,0.106592,0.030235,0.171824,0.206972,-0.181325,0.322564,0.236464,-0.312446,0.140619,-0.012037,0.150598) * L0_0 + mat4(0.597818,-0.311901,0.341179,0.394968,-0.003632,-0.181472,0.312398,0.398522,0.100210,-0.218724,-0.061336,-0.018350,0.461433,0.057348,-0.167585,-0.086833) * L0_1 + mat4(0.225047,-0.216199,0.106428,0.412256,-0.270564,-0.967479,0.180489,-0.152664,0.082829,0.359289,-0.022031,0.216415,-0.561493,0.195185,-0.263590,-0.204359) * L0_2 + mat4(0.276745,-0.160817,-0.200127,-0.230136,-0.154767,0.199258,-0.148321,-0.161206,-0.107868,-0.382507,0.254461,0.699311,0.073756,-0.464417,0.235653,-0.279447) * L0_3 + mat4(0.355156,-0.102334,-0.075123,-0.173526,0.079725,0.040322,0.036400,-0.110344,0.200025,-0.046102,0.241001,0.369063,0.026370,-0.069326,-0.010715,0.294186) * L0_4 + mat4(0.453176,0.098114,0.319217,0.239023,-0.205745,-0.089353,0.036845,0.094365,-0.098069,-0.204787,0.193378,0.015931,0.255296,0.126627,-0.044109,0.124494) * L0_5 + mat4(0.565532,0.017238,0.034400,-0.450412,-0.093552,0.125470,0.274469,0.071487,0.001800,-0.018755,0.098237,-0.115336,0.185643,0.003978,-0.337237,0.353875) * L0_6 + mat4(0.215003,-0.416485,0.096116,0.019698,-0.260101,0.041453,-0.225763,0.188673,-0.339641,0.232791,0.308553,-0.286288,-0.386871,-0.066135,0.088221,-0.337516) * L0_7 + mat4(0.273776,-0.029474,0.026691,0.207554,0.007912,-0.000349,0.019426,0.095092,0.099403,0.046381,-0.051254,0.088141,-0.098650,-0.068328,0.011230,0.027178) * L0_8 + mat4(-0.201239,-0.042032,-0.040360,0.068341,0.055736,-0.191506,-0.084059,-0.121626,-0.191588,-0.191667,0.145805,0.173956,0.143694,-0.207363,-0.177107,-0.488231) * L0_9 + mat4(-0.656607,-0.590700,-0.017792,-0.161827,0.002989,-0.021912,-0.104301,-0.270912,-0.216606,0.009230,-0.026107,0.060868,0.252478,-0.103488,-0.310465,0.177516) * L0_10 + mat4(0.174917,-0.226856,-0.132179,0.041902,0.112571,-0.285712,-0.107626,-0.129820,-0.138221,-0.222481,0.500883,0.098323,0.008666,0.173802,0.083986,0.154632) * L0_11 + mat4(-0.143575,0.166173,-0.120022,-0.368496,-0.326297,0.345559,0.321820,0.090349,0.019715,0.214544,0.058322,-0.132896,-0.007471,-0.016945,-0.087341,-0.169841) * L0_12 + mat4(0.318221,0.018982,0.158766,-0.087076,0.348273,0.486788,-0.045046,-0.226305,-0.203012,0.443277,-0.289560,-0.038113,-0.085509,0.012283,-0.003726,0.177098) * L0_13 + mat4(-0.663670,0.028737,0.175346,0.016428,-0.375824,-0.066114,-0.145359,-0.430684,-0.110398,-0.175524,0.109897,0.295917,-0.284053,0.289000,0.071239,-0.098423) * L0_14 + mat4(-0.336603,0.317036,0.247860,0.221386,0.010883,-0.056343,0.077849,-0.101320,0.270836,-0.132664,0.096380,0.056215,0.220215,-0.120666,-0.171983,-0.060849) * L0_15 + vec4(-0.722091,-0.733743,-0.842933,0.238769)));\nvec4 L1_3 = sin((mat4(-0.096499,0.128115,0.312457,0.178415,0.165906,0.139559,-0.321827,0.027428,0.128691,0.275632,-0.199523,-0.081349,0.123978,-0.225880,0.152246,0.171959) * L0_0 + mat4(-0.069713,-0.217651,-0.040917,0.290203,-0.150784,0.190833,0.000357,-0.032116,0.009011,-0.066107,-0.078176,0.064585,0.156923,0.243058,0.295772,-0.276243) * L0_1 + mat4(0.036325,-0.033270,0.174683,-0.143579,-0.123572,-0.655669,-0.543225,-0.629812,0.031138,0.238947,0.257624,-0.227236,-0.119466,0.462556,0.000484,-0.160543) * L0_2 + mat4(-0.031426,0.063416,-0.171299,-0.141766,0.312839,-0.237935,0.109581,-0.252720,-0.399934,0.132361,0.242976,-0.306373,0.204524,-0.015362,0.379599,0.022657) * L0_3 + mat4(0.242489,0.279307,-0.181838,-0.237597,-0.335486,-0.111009,-0.050710,-0.191788,-0.497939,0.408735,-0.118986,0.130466,-0.130220,0.282986,-0.102873,-0.241273) * L0_4 + mat4(0.230487,0.390901,-0.700234,-0.314855,0.247112,0.432724,-0.213936,-0.056166,-0.268985,0.278870,0.192815,0.312917,0.121536,-0.300360,0.225591,-0.344026) * L0_5 + mat4(-0.246903,-0.425200,-0.032384,0.220457,0.355437,-0.063143,0.067543,0.025009,0.022731,0.097886,0.013427,-0.171664,-0.543658,0.277903,0.273981,0.190081) * L0_6 + mat4(0.272334,0.149013,-0.046993,-0.088354,0.133248,0.321520,-0.294849,-0.371254,0.016103,-0.342933,-0.144663,0.140472,-0.129156,0.001411,-0.107527,-0.100994) * L0_7 + mat4(0.202106,0.033612,-0.016462,0.007453,-0.087458,-0.143700,0.081757,0.019407,0.125251,-0.193315,0.123420,-0.064367,0.030770,-0.049809,-0.094709,-0.027735) * L0_8 + mat4(-0.140472,-0.120835,0.148587,0.333424,-0.122554,0.076181,0.017668,-0.208448,-0.069260,0.299871,-0.127343,-0.147120,-0.001744,-0.075233,-0.088575,0.128954) * L0_9 + mat4(0.149073,-0.236510,0.009443,-0.342778,0.093944,0.039829,-0.183638,-0.045034,0.108478,-0.096129,0.061094,-0.030268,0.063120,0.086930,0.301261,-0.554966) * L0_10 + mat4(-0.399220,0.724890,0.177207,0.158269,0.089939,0.377663,0.089479,-0.257688,-0.135129,-0.040254,-0.179477,-0.043874,0.281174,0.158894,-0.151497,0.234240) * L0_11 + mat4(-0.262799,-0.337633,-0.094473,-0.015078,-0.046218,-0.222378,0.542681,0.836810,-0.058741,-0.120600,0.051871,-0.156812,-0.223126,-0.163513,-0.422786,0.109880) * L0_12 + mat4(0.132627,-0.078912,0.067284,-0.165478,0.186441,-0.020155,0.098419,0.234610,-0.036395,-0.007921,-0.061910,0.000696,0.193869,0.522786,-0.173789,-0.141294) * L0_13 + mat4(0.160414,-0.102754,-0.098725,-0.235619,0.019836,-0.472263,-0.533687,0.368103,-0.288570,-0.079845,-0.054936,0.206223,0.211016,-0.330717,0.061999,-0.004819) * L0_14 + mat4(-0.118051,-0.095153,0.076489,0.171025,0.349690,0.375422,-0.441642,-0.473404,0.116476,-0.091912,0.231749,0.093884,-0.197589,0.016058,0.077210,0.254896) * L0_15 + vec4(0.012854,-0.395972,-0.192286,0.630055)));\nvec4 L1_4 = sin((mat4(0.221979,0.088544,0.100442,0.061673,0.022439,-0.138929,-0.821689,0.706279,0.486951,0.160505,-0.150932,-0.061024,-0.077841,-0.093000,0.024279,0.094669) * L0_0 + mat4(0.082337,0.239126,0.171559,-0.129233,-0.438453,0.167445,0.135642,-0.062512,0.077030,0.097337,-0.161792,-0.100542,0.163245,0.492498,-0.079789,0.092281) * L0_1 + mat4(0.207650,0.066022,-0.064131,0.121302,0.860257,-0.521121,0.507708,0.230242,-0.489834,-0.045292,0.183730,-0.159947,-0.044268,0.010244,0.350248,-0.115026) * L0_2 + mat4(-0.093428,0.054067,0.014244,-0.152346,-0.150537,-0.077093,-0.108547,0.109261,0.038989,-0.081913,-0.026690,-0.411050,0.163755,0.148452,0.692035,-0.005822) * L0_3 + mat4(-0.084660,0.245389,-0.179632,0.049076,-0.300701,0.366906,0.179474,0.150801,0.007944,-0.214337,0.676403,0.376020,0.111533,-0.133235,0.097754,-0.136042) * L0_4 + mat4(0.053810,-0.119293,-0.438450,0.180760,0.035607,-0.165122,0.067652,-0.054954,0.462459,0.060932,-0.067615,0.383570,-0.029645,0.053480,-0.032093,-0.222356) * L0_5 + mat4(0.256250,0.317637,-0.265867,0.269347,-0.011161,0.110794,0.130931,0.214006,-0.033813,-0.110562,0.123004,0.068772,-0.345337,-0.307007,-0.473817,0.153235) * L0_6 + mat4(-0.129525,0.216852,-0.347538,0.089150,0.122501,-0.072634,-0.120160,0.035076,-0.414981,0.036504,0.026465,-0.094100,-0.326421,-0.036462,0.235303,0.124374) * L0_7 + mat4(0.132898,0.084948,-0.045344,0.073497,0.000873,0.012577,-0.185523,-0.173458,0.017765,0.032649,0.063600,0.080332,-0.004627,-0.031181,0.017737,0.061899) * L0_8 + mat4(-0.153582,-0.142574,-0.024649,0.137859,-0.213737,0.308974,0.441328,-0.095870,-0.132900,-0.015862,0.433256,-0.174183,-0.073056,-0.041783,-0.114058,-0.076414) * L0_9 + mat4(0.246328,-0.176437,0.225998,-0.231705,0.160916,0.231390,-0.180415,0.107680,-0.245105,0.133480,-0.291736,-0.067446,-0.013774,0.159245,-0.145412,0.099738) * L0_10 + mat4(-0.109748,-0.109982,-0.607607,0.309844,-0.311099,-0.049443,0.160919,0.116451,-0.129610,-0.224617,0.608127,-0.347859,-0.158474,0.227840,-0.196031,0.114336) * L0_11 + mat4(-0.290626,-0.386414,-0.179884,0.130061,-0.125758,-0.310271,-0.558284,0.531280,-0.211098,-0.216212,0.051773,-0.133587,-0.215847,-0.467397,-0.307811,0.040378) * L0_12 + mat4(-0.076843,-0.112455,0.117588,-0.028792,-0.088430,-0.102266,-0.031497,-0.057115,0.065396,0.311179,-0.195712,-0.354839,-0.215423,-0.308552,-0.197989,0.168379) * L0_13 + mat4(0.009159,0.132019,-0.190021,0.474533,-0.277302,0.077475,0.224331,-0.024416,-0.300004,0.321505,0.181669,-0.408409,0.059681,-0.164706,-0.113088,-0.362798) * L0_14 + mat4(0.043573,-0.010175,-0.078606,-0.178168,-0.244907,0.072688,0.284535,0.150085,0.173644,-0.016252,0.032584,0.154571,0.063078,-0.221974,0.148775,0.497441) * L0_15 + vec4(0.576370,-0.366148,0.126863,-0.020868)));\nvec4 L1_5 = sin((mat4(-0.229227,-0.318931,0.197553,-0.310381,-0.208026,-0.455647,-0.200409,-0.339677,0.028645,-0.172654,-0.271110,-0.175053,-0.334489,-0.112284,-0.100012,0.281322) * L0_0 + mat4(0.120805,0.121239,0.484063,-0.061958,-0.152671,0.024652,-0.253861,0.136857,0.141716,0.062877,-0.289962,0.069072,-0.139393,-0.046970,-0.089092,-0.065183) * L0_1 + mat4(0.101496,-0.080532,0.138479,-0.171901,-0.108367,0.387168,-0.426929,0.380256,0.071824,-0.178648,-0.031472,0.090416,-0.070152,0.275967,-0.325433,-0.313830) * L0_2 + mat4(0.049930,-0.219798,0.115545,0.018087,0.079557,-0.178962,0.287234,0.180864,-0.247320,-0.758269,-0.057799,0.414539,0.049280,-0.057320,0.125133,0.360899) * L0_3 + mat4(0.117861,-0.200680,0.036187,0.100087,-0.135486,-0.197078,-0.077215,-0.025192,-0.032687,-0.433522,0.190929,-0.588391,0.088746,-0.085123,0.034890,-0.081097) * L0_4 + mat4(0.251842,0.352010,-0.824287,-0.491942,0.206684,0.235273,0.329759,0.270641,-0.062231,0.298465,0.039793,0.231911,-0.068667,-0.044392,-0.363025,-0.439367) * L0_5 + mat4(0.031289,-0.490826,-0.394520,0.663385,-0.021375,-0.050865,-0.055130,0.141954,-0.102453,-0.078181,0.079420,0.017426,0.205526,-0.185914,0.495547,0.206194) * L0_6 + mat4(0.263580,0.055683,0.084994,-0.110689,0.090819,0.087559,0.040178,-0.224541,-0.135127,-0.272357,-0.061707,-0.117177,-0.094354,-0.356468,-0.245427,0.292679) * L0_7 + mat4(-0.007824,0.259287,-0.126832,0.089032,-0.056194,-0.156783,-0.146879,-0.164349,0.025341,-0.059652,0.000057,0.163233,0.003998,-0.017537,-0.157855,-0.170780) * L0_8 + mat4(0.001176,-0.090679,0.236086,0.116840,0.292978,0.010848,-0.145253,-0.021974,-0.068899,-0.081891,0.001124,0.361402,-0.003973,0.347702,0.064022,-0.010992) * L0_9 + mat4(-0.349085,-0.026720,-0.217358,0.071801,-0.062283,0.065899,0.014638,-0.025372,-0.375528,-0.029029,-0.053155,0.357107,-0.084281,0.188967,0.435305,-0.345348) * L0_10 + mat4(-0.558695,-0.105893,-0.025715,0.147983,0.115358,-0.002070,-0.291304,-0.089598,0.253799,-0.031593,0.127842,-0.020555,-0.106185,0.234865,-0.188282,0.236154) * L0_11 + mat4(-0.288916,0.455074,0.034746,0.278251,0.197506,0.115244,-0.123221,0.293268,0.169241,-0.102143,0.141370,-0.258397,-0.091607,-0.228689,-0.252006,0.238257) * L0_12 + mat4(0.240318,-0.095716,0.439393,0.164826,0.127791,0.594173,-0.045356,-0.374978,0.081598,-0.062738,0.030269,0.137096,-0.146899,-0.031055,-0.107897,0.479564) * L0_13 + mat4(-0.198498,0.094575,-0.267044,0.492150,-0.046319,-1.126338,-0.194539,0.442084,-0.271813,0.149235,0.414970,-0.700226,0.044701,0.039314,0.093767,-0.365007) * L0_14 + mat4(-0.170240,-0.264025,-0.020304,-0.152603,0.055432,0.225667,0.122702,0.388934,-0.100049,-0.033829,0.248567,-0.004671,-0.076176,-0.135682,0.400606,-0.199022) * L0_15 + vec4(0.247570,0.193523,-0.510125,0.266714)));\nvec4 L1_6 = sin((mat4(0.042069,-0.000394,0.071358,-0.167934,-0.115796,0.449018,0.004457,0.014429,-0.221460,0.051036,0.164717,0.050620,0.045411,0.097145,0.198278,-0.233015) * L0_0 + mat4(0.002006,-0.360777,-0.191078,0.402005,-0.128037,0.369332,-0.038457,0.252689,0.122159,-0.103468,0.131118,-0.196897,0.054472,0.149999,-0.209878,0.054936) * L0_1 + mat4(-0.157773,-0.208914,0.343162,-0.102046,0.050274,0.057874,-0.271990,0.355596,0.020376,-0.013391,-0.015004,-0.054622,0.362262,-0.502853,-0.072236,-0.208491) * L0_2 + mat4(0.111326,-0.025893,0.024014,0.115308,-0.842635,0.076778,-0.290807,-0.043641,-0.143354,-0.227574,0.043546,0.035981,0.019796,-0.327996,0.283985,0.200741) * L0_3 + mat4(0.027755,0.077436,-0.239214,-0.204055,0.069511,-0.120790,-0.403656,0.119491,0.620366,0.242739,0.459639,0.212842,0.429459,-0.763085,0.069769,-0.486006) * L0_4 + mat4(0.402837,-0.669815,0.472920,-0.662931,-0.079875,0.100749,0.094884,0.268061,-0.065231,-0.059407,-0.045992,0.139772,0.040042,0.143786,-0.849589,-0.215835) * L0_5 + mat4(-0.459058,0.022472,0.392469,-0.031792,0.032527,-0.131819,-0.178276,-0.205446,0.088154,0.052010,0.116351,0.063383,0.200701,0.193963,-0.135943,0.106545) * L0_6 + mat4(0.039263,-0.208724,-0.284092,-0.007483,-0.067175,0.061119,-0.132158,-0.195820,-0.109030,0.239890,-0.141107,0.086714,0.009688,-0.139019,-0.222772,0.000980) * L0_7 + mat4(0.011660,0.059115,-0.041128,0.035933,0.019765,-0.066765,0.021154,-0.154701,0.054295,-0.123517,-0.024518,-0.240066,-0.055417,0.072097,0.005570,-0.036291) * L0_8 + mat4(0.345054,-0.088207,0.147032,0.180230,-0.036841,-0.000288,-0.281255,-0.071148,-0.096511,-0.025422,0.313964,0.066347,-0.051277,-0.072797,0.240424,-0.194427) * L0_9 + mat4(0.148102,-0.155554,0.077121,0.191023,0.176520,-0.052178,0.090226,0.012103,0.153054,0.136448,0.063130,-0.162582,0.121839,0.012519,0.233861,-0.392578) * L0_10 + mat4(0.205228,0.641322,-0.004568,-0.282128,0.141548,0.186494,-0.276312,0.035401,0.096824,0.162457,0.308920,-0.185747,-0.261368,-0.258060,0.159237,-0.149246) * L0_11 + mat4(0.042792,-0.014346,0.071069,-0.367206,0.172356,0.517605,-0.194612,-0.130686,0.229189,0.058395,0.004385,0.251717,0.017654,-0.396690,0.068402,-0.105703) * L0_12 + mat4(-0.021606,-0.011159,0.079517,0.006514,0.144258,0.032693,0.353860,-0.266464,-0.360075,0.481303,0.277853,-0.075951,-0.359824,0.152151,0.380155,0.107989) * L0_13 + mat4(0.006818,-0.023581,-0.131342,0.066460,0.096269,0.092849,-0.065595,0.480693,0.618510,-0.045366,0.381929,-0.576371,0.255900,-0.055120,0.002934,-0.024608) * L0_14 + mat4(0.257108,0.198201,-0.064667,0.083191,-0.016145,0.041949,0.285072,0.163260,0.010378,-0.054788,0.176611,-0.005718,0.215826,0.072390,-0.114808,0.072655) * L0_15 + vec4(-0.146452,0.369553,0.047661,-0.531944)));\nvec4 L1_7 = sin((mat4(0.129427,0.530589,0.299964,0.245476,0.278880,-0.155466,0.173582,0.272766,0.191739,0.406903,0.096161,0.084553,0.068124,-0.150651,0.200983,0.040098) * L0_0 + mat4(-0.231169,0.317031,0.091139,-0.021075,0.303614,0.064588,0.519898,0.181603,0.048565,-0.027232,-0.181628,-0.175570,0.271921,0.151465,-0.400090,-0.270153) * L0_1 + mat4(0.177109,0.171867,0.321425,-0.119473,0.054477,-0.675361,-0.028740,-0.813645,0.042285,0.429079,0.203496,-0.166208,-0.124290,-0.171668,0.321791,0.053571) * L0_2 + mat4(0.006535,-0.114138,-0.185952,-0.094411,-0.470658,-0.500616,0.341814,-0.500986,-0.194072,0.245630,-0.386764,0.372051,-0.118814,0.186787,-0.407371,-0.017558) * L0_3 + mat4(0.052170,-0.019488,-0.161932,-0.550619,0.116247,0.176354,-0.098927,0.080661,0.235252,-0.275836,0.165289,-0.515501,0.024713,0.384445,0.583217,-0.090559) * L0_4 + mat4(-0.409714,-0.164329,0.010602,-0.208550,-0.185653,0.107391,-0.281106,-0.608742,-0.027689,-0.260415,0.175498,0.199219,-0.148271,0.141648,-0.051407,0.469036) * L0_5 + mat4(-0.334044,0.129292,0.200499,-0.052615,0.081843,0.462327,0.226375,-0.040738,0.143034,-0.069812,0.062855,-0.017018,0.088088,-0.465683,0.045395,-0.322464) * L0_6 + mat4(0.574523,0.096313,-0.423535,-0.141092,0.146205,-0.029490,0.301937,-0.411096,0.243931,0.173833,0.148434,0.425318,0.016384,0.164290,0.246115,0.109006) * L0_7 + mat4(-0.009408,0.242403,0.134884,-0.012175,0.002689,0.259753,0.091749,-0.012296,0.035367,-0.000927,-0.076192,-0.212658,0.069446,0.159993,0.154414,0.128912) * L0_8 + mat4(0.070563,-0.240836,-0.138551,-0.062524,-0.062005,-0.198871,0.219457,0.245435,0.129464,0.168251,0.203978,-0.009131,-0.084414,-0.375844,-0.188342,-0.091314) * L0_9 + mat4(0.193658,0.040561,0.248880,0.021458,-0.053645,-0.102271,-0.246971,-0.153299,-0.013365,-0.016455,0.202775,-0.070702,-0.259179,-0.210133,-0.182284,-0.037323) * L0_10 + mat4(0.615545,-0.516703,0.162664,0.166277,-0.012177,0.292955,-0.136520,0.094269,0.596618,-0.490063,-0.045771,0.360891,-0.062618,-0.056478,0.145724,-0.042392) * L0_11 + mat4(-0.032858,0.109880,0.136552,0.217829,0.030061,0.137763,0.073092,0.246210,0.247000,0.221208,-0.029264,0.051057,-0.188508,0.079045,-0.145869,-0.127636) * L0_12 + mat4(-0.083201,-0.325169,-0.406131,-0.222397,0.090709,-0.468507,0.305582,-0.129950,-0.399901,0.062032,0.023052,-0.096865,0.134867,-0.142806,0.157030,-0.061152) * L0_13 + mat4(0.028292,-0.017478,-0.066873,0.030862,0.403763,0.087307,0.146857,-0.022928,-0.417188,-0.180947,-0.055039,0.306252,0.234929,0.190459,-0.124733,0.195126) * L0_14 + mat4(0.220104,0.053935,0.436615,0.253266,-0.088963,-0.207257,-0.129544,-0.129227,-0.028278,0.121007,-0.066868,-0.209906,-0.074242,-0.276283,-0.032655,-0.018775) * L0_15 + vec4(0.040574,-0.501092,-0.455965,0.119170)));\nvec4 L1_8 = sin((mat4(-0.227326,0.134341,0.129226,0.078021,-0.051958,0.235080,0.660056,0.005136,0.191073,-0.241113,-0.260412,-0.024744,-0.070200,0.124909,0.059337,0.177232) * L0_0 + mat4(-0.177618,-0.446872,-0.542049,-0.280186,-0.116832,0.091229,0.268133,0.246355,0.230860,0.184205,-0.174618,0.029320,0.328681,0.206481,0.109201,0.325785) * L0_1 + mat4(0.098945,-0.029842,0.017443,0.301192,0.182261,-0.078488,-0.024338,-0.235178,-0.221177,0.321646,0.302010,0.155739,-0.113049,0.457538,0.033622,-0.028764) * L0_2 + mat4(-0.004779,0.109439,-0.074335,0.065390,-0.736610,0.483358,0.651508,-0.198032,-0.591829,0.160724,0.141865,-0.389917,0.419418,-0.060194,0.157155,-0.114592) * L0_3 + mat4(0.063645,0.372312,0.139022,-0.144739,0.356718,-0.012140,-0.053743,0.217638,-0.140250,-0.049483,0.105323,0.340826,0.138074,0.279430,0.047269,0.209523) * L0_4 + mat4(-0.032265,0.386494,-0.269357,-0.415693,0.121769,-0.653770,-0.355769,0.337798,-0.295277,0.148802,0.025268,0.142014,-0.176847,0.476467,0.257237,-0.131450) * L0_5 + mat4(0.115646,0.177553,0.054230,0.574991,-0.191313,0.321549,0.013976,0.077368,-0.123823,-0.038817,-0.043312,-0.043791,0.532526,-0.006158,0.142160,0.035869) * L0_6 + mat4(0.405722,-0.244806,-0.063058,-0.051823,-0.086840,-0.042674,0.306693,0.281146,-0.108042,0.062733,-0.024491,-0.026505,0.203712,0.285464,0.017148,-0.383583) * L0_7 + mat4(0.046016,-0.033462,0.140036,0.209596,0.073208,-0.032598,0.080207,0.039621,-0.069751,0.079652,-0.070832,0.144458,0.019320,0.033979,-0.059215,-0.025910) * L0_8 + mat4(0.241922,-0.041807,-0.088251,0.237957,0.398931,-0.712397,-0.644721,0.133323,-0.048178,0.014949,-0.079403,-0.075979,0.344036,-0.355570,-0.066999,0.012978) * L0_9 + mat4(-0.044108,-0.047176,-0.180601,-0.148209,0.336006,0.200004,-0.330924,-0.131352,0.015814,0.499736,-0.140973,-0.019778,-0.165387,-0.028731,-0.291606,-0.113661) * L0_10 + mat4(-0.038940,-0.085823,0.382496,0.181465,-0.254026,0.145709,-0.036046,-0.160172,0.236620,-0.226456,0.369666,0.247679,0.123052,-0.049417,-0.135386,-0.006906) * L0_11 + mat4(0.043917,-0.406738,-0.261375,0.046866,-0.061685,0.207933,0.548314,0.377194,0.150115,-0.061833,-0.093813,0.128108,-0.209910,0.186626,0.402909,-0.181156) * L0_12 + mat4(0.039678,-0.379121,0.031502,0.172806,0.330929,0.145662,-0.149091,0.428761,-0.025751,-0.168132,-0.917380,0.048174,-0.185883,-0.167041,0.198123,0.471057) * L0_13 + mat4(0.015613,-0.295086,0.827160,0.166872,0.290797,-0.053455,0.062623,0.042338,0.049498,0.112642,-0.450372,-0.427611,0.133801,-0.132000,-0.217590,0.271595) * L0_14 + mat4(0.052198,-0.088977,-0.615629,0.078566,-0.019786,0.395188,0.191639,-0.110546,-0.001490,-0.372596,0.005656,-0.008877,0.116871,-0.082064,-0.118659,0.012688) * L0_15 + vec4(0.059462,-0.620754,0.225859,0.204874)));\nvec4 L1_9 = sin((mat4(-0.040413,0.143396,-0.141521,-0.156858,-0.010751,0.262429,-0.114072,0.251302,-0.364605,0.050903,0.265035,0.177826,-0.030974,-0.089035,0.068876,-0.066187) * L0_0 + mat4(0.141630,0.332274,-0.317208,-0.044322,0.188451,0.201094,0.458749,-0.233258,0.147464,0.260953,0.083610,0.144194,0.059208,0.038840,0.412239,0.132764) * L0_1 + mat4(-0.027115,0.001800,-0.202582,0.190048,0.010277,-0.119804,-0.099862,0.803465,-0.238159,-0.219546,-0.118929,-0.070990,0.110571,0.208101,-0.129503,0.082006) * L0_2 + mat4(0.086194,0.027926,-0.009012,0.090288,-0.407619,-0.120314,-0.747605,0.210879,0.265039,-0.159687,0.128041,0.034255,-0.073761,-0.383540,-0.511612,0.000898) * L0_3 + mat4(0.324354,0.279001,-0.115753,-0.055578,-0.319022,-0.129148,-0.157597,-0.221709,0.150394,0.610302,0.216558,-0.204391,-0.178230,0.238309,-0.272005,0.269924) * L0_4 + mat4(-0.742062,-0.072032,0.594520,0.555345,0.230892,0.285251,-0.152948,-0.182960,-0.045263,-0.050200,-0.063216,-0.167631,0.010255,0.019986,0.365643,0.057889) * L0_5 + mat4(-0.634413,-0.089282,0.183379,0.207072,0.037906,0.227042,0.257154,-0.038707,0.039627,0.073143,0.015028,-0.009818,-0.034604,-0.142148,-0.396030,0.181741) * L0_6 + mat4(-0.041267,0.179698,-0.171782,0.202922,-0.032118,0.666530,0.180542,0.093543,-0.366951,-0.219514,-0.351135,-0.238552,-0.340073,-0.500552,-0.421809,-0.366012) * L0_7 + mat4(-0.038262,0.249545,-0.135532,-0.267336,-0.021256,-0.092949,0.129965,0.211179,0.030660,0.122775,-0.051686,0.047767,0.023563,-0.044479,-0.142578,0.035096) * L0_8 + mat4(-0.046805,0.042085,-0.162897,0.202812,0.197512,0.789998,0.056597,0.014943,0.070256,0.260608,0.363259,0.091101,-0.242879,0.111658,-0.027000,0.061519) * L0_9 + mat4(-0.174057,-0.171654,-0.066244,0.199902,0.372612,0.522403,0.201178,0.106869,0.201823,-0.040537,0.261134,0.133186,-0.023706,-0.462738,-0.236130,0.080652) * L0_10 + mat4(-0.071142,0.344539,-0.181555,-0.223713,0.188613,-0.055310,0.278380,0.197061,-0.029384,-0.110616,-0.204628,-0.133186,-0.260881,0.066082,-0.068434,-0.054968) * L0_11 + mat4(0.170077,0.298892,-0.151678,-0.144562,-0.250371,-0.380841,0.268323,0.068815,-0.059387,0.036027,0.050397,0.086802,-0.267986,-0.229639,-0.361041,-0.155815) * L0_12 + mat4(0.078706,0.042017,-0.009946,-0.024184,-0.058586,-0.144362,0.088684,-0.049080,-0.451129,0.153877,0.204494,-0.296063,0.496752,0.253113,0.237027,-0.122650) * L0_13 + mat4(0.408107,0.317727,0.468331,0.111196,0.346622,0.443810,0.600643,-0.172675,-0.587129,-0.219114,-0.049621,-0.533633,-0.158855,0.191812,-0.044845,-0.012221) * L0_14 + mat4(0.080683,0.184761,0.511049,0.047949,0.269565,0.544215,0.133870,-0.143742,0.056443,0.046420,0.113045,-0.022421,0.072396,0.013302,-0.485181,-0.101402) * L0_15 + vec4(-0.051217,0.658820,-0.001578,0.565073)));\nvec4 L1_10 = sin((mat4(0.368252,0.095617,-0.048302,0.146785,-0.006345,0.129505,-0.285614,-0.524580,-0.232455,0.142937,0.253146,0.238964,0.018273,0.325300,0.140374,-0.064970) * L0_0 + mat4(-0.194922,-0.149160,0.489966,0.062534,0.132675,-0.421292,-0.113150,-0.326860,0.284795,-0.015070,-0.153986,-0.221977,0.283733,0.174852,-0.223344,-0.044639) * L0_1 + mat4(-0.234995,-0.082331,-0.269423,0.199034,0.037808,-0.574828,0.023098,-0.585124,-0.234890,-0.125613,-0.252362,0.000621,0.148438,0.054206,-0.297211,0.242509) * L0_2 + mat4(0.159644,0.031407,-0.093868,-0.191414,0.323766,-0.040426,0.072245,0.524563,0.001802,0.185094,-0.074626,0.218236,0.001900,-0.124084,0.073099,0.481710) * L0_3 + mat4(-0.013931,-0.161302,-0.321224,-0.123222,-0.123847,0.336282,-0.301928,-0.016234,0.146062,0.034845,-0.109082,0.225522,-0.107338,-0.053897,0.163506,0.569071) * L0_4 + mat4(0.798000,0.244365,0.915333,-0.017989,0.103839,0.024837,-0.033976,0.133653,0.045509,0.237029,0.073220,0.053634,0.257775,-0.047556,0.319681,-0.043682) * L0_5 + mat4(-0.448695,-0.562448,0.010403,-0.288119,-0.107357,-0.124000,0.107696,0.081144,-0.191930,0.041409,-0.010518,-0.083190,-0.274939,-0.061626,-0.140693,0.116598) * L0_6 + mat4(0.203334,-0.003816,-0.065400,0.264761,0.262531,0.134892,-0.205394,-0.061583,-0.194372,0.059195,-0.174795,-0.099735,-0.171649,-0.009973,0.076125,-0.126930) * L0_7 + mat4(0.090464,0.336479,0.269390,-0.129237,0.100573,-0.031836,0.245496,0.126421,0.136963,-0.082650,0.143580,0.127701,-0.018030,-0.106011,-0.077827,0.046169) * L0_8 + mat4(-0.114376,0.211244,0.023977,0.074209,-0.013234,0.617071,0.144325,0.818216,0.113722,-0.085335,0.031035,0.276603,-0.028501,-0.185191,-0.255588,-0.067396) * L0_9 + mat4(0.082032,0.100759,-0.235888,-0.528932,0.289264,0.000352,-0.299122,-0.287386,0.266763,-0.211225,0.039906,-0.245361,0.315251,0.182563,0.238837,0.187516) * L0_10 + mat4(-0.203508,-0.081893,-0.427869,-0.608083,-0.113918,-0.341136,0.061680,-0.016140,0.047112,-0.090884,0.103817,-0.269951,0.054740,-0.231817,-0.551508,-0.237499) * L0_11 + mat4(0.389313,-0.186748,-0.184421,-0.227626,0.757616,0.129940,0.649206,-0.047101,0.078487,-0.091153,0.040742,-0.045233,-0.018465,-0.050529,-0.006165,-0.042796) * L0_12 + mat4(-0.206607,-0.018514,0.276895,-0.011782,-0.317320,-0.143459,0.064223,0.201906,0.231458,-0.258260,-0.015838,0.388825,-0.049968,0.107408,-0.319991,0.030414) * L0_13 + mat4(0.028548,0.062997,0.305298,0.423705,0.106308,0.129794,-0.312904,-0.362903,-0.521569,-0.609221,0.125545,-0.302674,0.167226,0.107879,-0.072092,-0.128867) * L0_14 + mat4(-0.115589,0.297068,0.093811,0.052253,0.000452,0.004883,0.004884,-0.142350,-0.122867,-0.010604,0.197759,0.464210,-0.288198,0.323854,-0.036646,0.184097) * L0_15 + vec4(0.495117,-0.196929,0.326311,-0.009601)));\nvec4 L1_11 = sin((mat4(-0.028366,0.188545,0.209602,0.200983,0.333096,0.731999,-0.173436,0.089198,0.095632,-0.069059,-0.019198,0.319851,0.122176,0.057744,-0.032192,-0.178042) * L0_0 + mat4(-0.403611,0.101882,-0.231095,-0.000193,-0.287947,-0.098349,0.053754,-0.067050,-0.174466,0.116803,-0.227661,0.153694,-0.192938,-0.062893,-0.002098,0.192023) * L0_1 + mat4(-0.003993,0.339643,0.070702,-0.058435,0.312140,-0.169070,-0.110880,0.342616,-0.202059,0.129756,-0.278197,0.044727,-0.506803,0.215849,0.464672,-0.206477) * L0_2 + mat4(0.012436,-0.067837,0.232149,-0.242617,0.513408,0.138490,-0.132285,0.207888,0.584751,-0.557051,-0.030888,-0.025277,-0.090857,0.217646,-0.136831,-0.234634) * L0_3 + mat4(-0.135936,-0.142979,-0.232250,0.154074,0.342223,-0.310737,-0.020722,0.346750,-0.217669,0.610177,-0.678941,0.199167,0.264636,0.142760,-0.229641,-0.012765) * L0_4 + mat4(0.944990,-0.328964,-0.365556,-0.166102,0.195151,0.035218,0.065913,-0.036598,0.109943,0.210030,0.062899,-0.006119,0.225298,-0.023063,-0.193020,0.040630) * L0_5 + mat4(-0.111031,-0.336454,-0.271235,-0.170009,0.010728,-0.170843,-0.129095,-0.168557,0.010179,-0.052254,0.112160,0.011108,0.396180,-0.329167,-0.156313,0.556304) * L0_6 + mat4(-0.567514,0.041601,-0.024778,0.345536,0.017188,-0.148177,0.272754,-0.347335,0.465103,-0.351849,0.134146,0.527904,0.003723,-0.056008,-0.083322,0.173877) * L0_7 + mat4(0.009371,-0.000888,0.088255,-0.256784,-0.163822,0.008030,-0.008726,-0.014972,0.064701,0.063153,-0.010317,0.074262,-0.101719,-0.021503,-0.044444,0.032746) * L0_8 + mat4(0.178222,-0.165699,-0.131640,0.230835,0.042834,-0.173286,-0.228109,-0.036373,0.089998,0.017452,0.204982,-0.079362,-0.165228,0.005673,0.174568,0.268591) * L0_9 + mat4(0.301997,0.099475,-0.014293,0.357003,0.457230,-0.135312,-0.193662,-0.034745,-0.150309,-0.028241,-0.162218,-0.232444,0.009295,-0.046163,0.341365,0.591001) * L0_10 + mat4(-0.012080,0.657116,-0.134867,-0.284904,0.154401,0.038769,-0.044056,-0.202510,-0.270816,0.220373,-0.341666,-0.500661,-0.110052,0.039089,-0.155358,0.368627) * L0_11 + mat4(-0.090382,-0.003600,0.220472,0.064795,-0.080787,0.173945,0.262089,0.440764,-0.028497,0.041270,0.028173,0.209520,0.062310,-0.126630,0.008389,0.145523) * L0_12 + mat4(0.013759,0.176277,0.095655,-0.301590,-0.874605,0.849309,0.120083,0.229097,0.013927,0.029314,0.152290,-0.024976,-0.178593,-0.491903,-0.010245,0.116584) * L0_13 + mat4(0.101763,0.060516,-0.457257,-0.075820,0.157300,0.233152,0.475924,-0.131770,-0.100923,0.302602,0.822143,0.093194,0.440332,-0.372247,0.032514,0.165968) * L0_14 + mat4(0.288698,-0.405056,0.005097,0.152428,-0.239152,-0.028364,-0.003276,-0.291680,0.136191,0.274817,-0.066896,-0.074406,0.468050,0.026103,-0.096472,-0.018508) * L0_15 + vec4(0.523357,0.036290,-0.225121,0.095308)));\nvec4 L1_12 = sin((mat4(-0.007705,-0.086299,0.113164,-0.112443,-0.136198,-0.011260,0.159065,0.266495,0.116000,0.531110,0.233787,-0.098776,-0.350827,-0.028093,-0.064238,0.095904) * L0_0 + mat4(0.065940,-0.376462,0.048823,0.223021,-0.169810,-0.101779,0.460820,-0.001453,0.104569,0.108258,-0.320852,0.057152,-0.163068,0.039802,0.143754,0.218904) * L0_1 + mat4(-0.010388,-0.137191,0.103119,-0.062382,0.266591,-0.513024,0.073390,0.550500,0.312922,-0.113382,-0.007870,0.033590,0.336951,0.041502,-0.121567,0.049347) * L0_2 + mat4(0.131707,-0.051164,-0.001156,-0.108891,0.409499,0.395608,-0.451846,-0.196942,-0.113188,0.165132,-0.159945,0.111800,0.289106,-0.071749,0.604073,-0.114010) * L0_3 + mat4(-0.003811,-0.068974,0.165548,-0.000347,-0.009033,0.039581,-0.118594,0.220188,0.176099,-0.357849,-0.112978,0.265384,-0.154472,0.222021,-0.085574,-0.569045) * L0_4 + mat4(0.692807,0.453145,1.054158,-0.451312,-0.277871,-0.022104,0.179189,0.180631,-0.164419,-0.084920,-0.302517,-0.075984,0.247677,0.041684,0.096065,0.021165) * L0_5 + mat4(-0.670924,0.502690,-0.016072,0.248625,0.014997,-0.013788,0.008130,0.053602,0.019960,0.085882,-0.110600,-0.056549,-0.165093,0.232838,-0.573463,-0.084618) * L0_6 + mat4(-0.110806,-0.377048,0.080256,0.179470,-0.205014,0.120537,0.000768,0.016516,-0.469342,-0.161362,-0.399192,-0.027095,0.330575,-0.031932,0.266411,-0.102808) * L0_7 + mat4(-0.106629,-0.118724,-0.122622,-0.079840,-0.032692,0.075968,0.172409,0.132652,0.063507,0.044420,0.005864,-0.047870,-0.072814,0.079904,-0.090898,0.043821) * L0_8 + mat4(-0.054498,0.141013,0.024463,0.064934,0.118491,0.081059,-0.112563,0.615900,0.043960,0.230271,0.212433,-0.062361,0.063772,0.252780,-0.003366,0.032398) * L0_9 + mat4(0.035493,0.065341,0.215057,0.076417,0.047061,0.088793,-0.098340,-0.237105,0.002104,0.017860,0.022203,-0.043776,-0.151209,-0.452238,0.414532,0.138485) * L0_10 + mat4(0.278977,0.217943,-0.133291,0.575165,0.740764,-0.149709,0.176782,-0.075758,0.273075,-0.209642,-0.052004,0.196279,0.076121,0.204891,0.092222,0.113710) * L0_11 + mat4(0.238970,0.227771,-0.058830,0.214860,-0.244114,-0.106165,0.037853,-0.008529,0.130388,-0.009792,0.327536,-0.153369,0.383181,0.015411,0.357533,0.070433) * L0_12 + mat4(-0.090700,0.188320,0.244170,0.127069,0.120722,0.047084,0.092634,0.101346,-0.188504,-0.047899,-0.028002,-0.101131,-0.052882,-0.233096,0.022511,0.188967) * L0_13 + mat4(-0.078849,-0.136438,0.171929,0.037199,0.440914,0.241872,0.447310,-0.012566,-0.016616,0.220616,-0.220461,-0.117080,-0.119786,0.074124,-0.063934,0.052887) * L0_14 + mat4(-0.320764,0.226205,-0.324950,-0.163694,-0.032909,-0.108615,-0.238322,0.030775,0.014343,0.262623,0.399304,0.124269,-0.225529,0.300847,-0.002583,-0.118705) * L0_15 + vec4(-0.294408,0.336264,-0.027303,0.122164)));\nvec4 L1_13 = sin((mat4(-0.063728,0.264203,0.143961,0.030574,-0.284259,0.357695,-0.012184,0.516727,0.211184,0.148396,0.134097,0.056605,-0.040533,0.004237,0.052654,-0.028925) * L0_0 + mat4(0.103012,0.428510,-0.523986,0.818517,-0.598776,-0.335231,0.118335,-0.358166,-0.116180,0.068259,-0.061455,-0.018986,0.023850,-0.254600,-0.108162,-0.231237) * L0_1 + mat4(-0.137926,0.135421,0.211197,0.411904,-0.134654,0.223060,0.453778,-0.038763,-0.213232,0.131981,0.443034,0.041598,-0.406582,0.105835,-0.080165,-0.273776) * L0_2 + mat4(0.093081,-0.113555,0.119258,0.023610,-0.562811,0.289776,-0.107866,-0.183163,-0.115628,-0.389735,-0.084998,1.050996,-0.017886,-0.155969,-0.455712,-0.017639) * L0_3 + mat4(-0.022314,0.155947,-0.239301,0.272125,0.031828,0.258962,-0.045097,0.154093,-0.718890,-0.170538,-0.155733,-0.108114,0.649821,-0.197173,-0.012700,0.424770) * L0_4 + mat4(0.453615,0.909809,0.924792,0.406413,-0.068962,0.136508,-0.310936,-0.381815,-0.234057,-0.042288,0.136053,0.135928,0.065684,0.175429,0.255358,0.074172) * L0_5 + mat4(0.603304,0.041145,-0.415521,-0.236400,-0.114544,0.091831,0.041787,-0.047487,0.007465,-0.030295,-0.014359,-0.052283,-0.098281,-0.459435,-0.318579,0.047224) * L0_6 + mat4(-0.133058,0.032854,-0.479843,-0.058852,0.242312,-0.247881,-0.221890,-0.214023,-0.215280,0.166660,0.082556,-0.070246,-0.238858,0.090583,0.382196,-0.095660) * L0_7 + mat4(0.387033,-0.256328,0.034788,-0.071482,0.048239,0.025683,0.056070,-0.089409,0.063572,0.088305,-0.085311,0.004928,-0.113110,0.014859,-0.125739,0.021399) * L0_8 + mat4(-0.048107,-0.055983,0.065924,-0.183780,0.384162,0.042393,-0.405605,-0.098699,-0.146154,0.301130,-0.139889,-0.080813,-0.054447,-0.095371,0.097596,-0.115867) * L0_9 + mat4(-0.408693,0.060616,-0.031002,-0.154078,-0.068068,-0.056302,-0.201808,0.061284,-0.121016,0.125238,-0.272491,-0.067135,0.181573,0.209648,0.243094,0.240081) * L0_10 + mat4(0.569865,-0.664296,0.421625,-0.478217,0.020880,0.071312,-0.319505,-0.022934,-0.628761,-0.520869,0.549621,0.277042,-0.044739,0.075280,0.087316,0.025407) * L0_11 + mat4(-0.370366,-0.070409,0.109625,-0.616718,-0.204229,-0.326686,0.115965,0.199702,-0.019401,-0.013841,0.209490,-0.314992,-0.142196,0.216471,0.092391,-0.057200) * L0_12 + mat4(0.329613,-0.179697,-0.002492,-0.171776,-0.078544,0.013813,-0.055320,-0.714398,0.659950,0.070310,0.301384,-0.033742,-0.290649,0.449331,-0.578453,0.095120) * L0_13 + mat4(0.163001,0.366351,-0.207771,-0.087925,-0.739317,-0.036420,-0.151384,-0.314607,0.185942,-0.283292,0.500439,0.156529,-0.137088,0.122250,-0.141550,-0.350003) * L0_14 + mat4(0.101356,0.390883,0.058122,0.148997,0.253642,0.207730,-0.221306,0.261231,0.376986,-0.120957,-0.225667,-0.108893,0.054961,-0.340978,0.194347,0.071488) * L0_15 + vec4(-0.405581,0.014123,-0.822084,-0.615410)));\nvec4 L1_14 = sin((mat4(-0.040999,-0.105519,0.220396,-0.011623,0.162149,-0.301055,0.219844,-0.240560,-0.090949,0.431492,0.171225,0.293208,-0.094494,-0.171719,0.333731,0.213256) * L0_0 + mat4(0.147681,-0.077053,-0.448769,0.695480,-0.207771,0.000029,-0.099877,0.169423,-0.018885,-0.107707,-0.079857,-0.203492,0.085308,-0.287448,-0.043816,-0.325048) * L0_1 + mat4(0.242935,0.132036,0.182656,0.165011,0.179105,0.901322,-0.039753,-0.461615,0.016937,0.141575,-0.049507,-0.125457,0.220861,-0.027281,0.394835,0.239593) * L0_2 + mat4(0.079446,-0.035238,0.199463,0.063703,-0.025960,0.799276,-0.045612,0.791870,-0.468261,-0.016391,-0.337736,0.168087,-0.506988,-0.440458,0.296335,-0.043765) * L0_3 + mat4(0.182831,-0.101990,0.002759,-0.035580,-0.163092,-0.251333,-0.020874,-0.226229,-0.634971,-0.421356,-0.118671,0.390006,-0.307706,-0.203789,0.286129,-0.135674) * L0_4 + mat4(-0.234646,0.192811,0.188958,0.630536,-0.472048,0.010123,-0.238710,0.354250,0.133847,-0.136999,0.243878,0.037613,-0.426369,-0.070297,-0.519374,-0.285774) * L0_5 + mat4(0.574778,0.198403,-0.207876,-0.028437,0.011332,-0.077681,-0.018133,0.267253,0.002177,-0.084640,-0.189457,0.176268,-0.210806,-0.028649,-0.570820,-0.389538) * L0_6 + mat4(-0.219244,-0.136232,-0.411807,-0.194731,0.108539,-0.006552,0.116038,-0.079433,0.042447,0.314449,0.073396,-0.148114,-0.220129,0.081264,0.071918,-0.131638) * L0_7 + mat4(-0.348132,-0.181085,-0.150687,-0.156400,-0.143417,-0.041596,-0.274301,-0.155121,0.125105,-0.120707,0.064832,0.239369,0.069759,0.020927,-0.151637,0.006661) * L0_8 + mat4(-0.173904,0.037991,-0.166292,-0.155439,0.127378,-0.640001,-0.146593,-0.308232,-0.095643,-0.014149,0.304795,0.396269,0.146383,0.060913,0.069012,0.204754) * L0_9 + mat4(-0.091999,0.285056,0.296844,-0.254037,0.278673,-0.109288,0.138176,-0.080392,-0.149657,-0.249594,-0.222550,0.048908,-0.098171,-0.286954,-0.394903,0.514078) * L0_10 + mat4(0.049912,-1.187760,0.472910,-0.580187,0.135120,0.065463,0.140361,0.127381,0.048961,0.531508,-0.050011,-0.026378,0.305193,0.312955,-0.085626,-0.140556) * L0_11 + mat4(0.105915,-0.199781,0.174767,-0.067407,0.312373,0.083219,-0.199757,-0.482125,-0.008125,0.177715,-0.095976,0.011502,-0.024704,0.110083,0.112861,-0.658464) * L0_12 + mat4(0.076043,0.272848,-0.331423,0.015239,0.530302,-0.214772,-0.075558,0.056106,0.572231,-0.630872,0.209942,0.219706,0.056701,-0.063602,0.547786,0.367097) * L0_13 + mat4(-0.050057,-0.177152,0.076982,-0.202438,0.284809,0.290693,-0.285524,-0.010924,-0.151313,0.163256,-0.842688,0.202280,-0.049107,-0.035991,-0.379075,-0.068262) * L0_14 + mat4(-0.113141,0.338202,0.173697,0.072954,-0.061016,-0.260542,0.371019,0.410070,0.028971,0.142079,-0.154930,0.072155,0.098452,0.147187,-0.212749,-0.190379) * L0_15 + vec4(-0.032458,-0.277747,0.365592,-0.632397)));\nvec4 L1_15 = sin((mat4(-0.027047,0.220694,-0.016901,0.118527,-0.111508,0.505441,-0.668715,-0.391189,0.456865,0.001409,-0.112174,-0.325814,0.349363,0.015656,0.188574,-0.091121) * L0_0 + mat4(0.177556,-0.058820,0.065709,0.134922,0.069680,-0.197394,0.063648,-0.375232,-0.178948,0.195741,-0.101638,-0.013958,-0.445162,0.103141,0.318184,-0.110929) * L0_1 + mat4(-0.378227,-0.117274,-0.113952,-0.347639,0.152103,-0.409078,-0.182996,-0.881759,-0.275266,-0.113928,0.033938,-0.058380,0.213346,0.394438,0.352538,0.196689) * L0_2 + mat4(-0.069654,0.102505,-0.206787,-0.042501,0.743080,0.325057,0.149232,0.412390,0.536735,0.450245,0.074429,0.218849,-0.177362,0.302885,0.045263,-0.267315) * L0_3 + mat4(-0.265150,-0.007921,0.007561,-0.156063,-0.267253,-0.277497,0.423419,0.034301,0.328823,0.068031,-0.365306,0.202405,0.074306,0.251169,0.082437,0.202837) * L0_4 + mat4(0.842443,-0.537413,0.600767,-0.428905,-0.246428,-0.319033,0.315629,0.006946,0.119621,0.488040,0.270376,-0.059302,-0.008047,0.111796,-0.365527,0.160617) * L0_5 + mat4(0.156979,-0.002792,0.409926,-0.328622,0.057672,-0.110881,0.223416,-0.033747,0.083006,0.008846,0.037539,-0.126826,-0.052924,-0.239782,0.293947,0.127981) * L0_6 + mat4(-0.456947,0.146484,0.231563,-0.242356,-0.183587,0.181440,-0.009058,0.109765,0.071156,-0.127240,0.459138,0.021848,0.208154,0.025597,0.249940,0.163037) * L0_7 + mat4(0.036424,-0.149095,-0.140282,0.042470,-0.125181,-0.235186,-0.240994,-0.045973,0.012326,0.077928,0.149113,-0.052378,-0.030011,0.027833,-0.008305,-0.130647) * L0_8 + mat4(0.196480,-0.221893,-0.173781,0.119361,0.711078,-0.026233,0.028145,0.463827,0.188895,0.028982,-0.069696,0.008435,-0.031053,-0.138292,-0.077331,0.191317) * L0_9 + mat4(0.165609,0.131117,-0.122259,-0.315846,-0.232379,0.302045,-0.096947,0.183322,-0.271440,-0.039998,0.127543,-0.137425,-0.113793,0.168242,-0.095964,0.111770) * L0_10 + mat4(0.141979,-0.196748,0.681383,-1.103454,-0.030161,0.095274,-0.091491,-0.127042,-0.116276,0.391236,0.113168,0.347189,0.266678,-0.153723,0.041008,0.056530) * L0_11 + mat4(0.009989,-0.227550,0.029629,0.302018,-0.260001,-0.208037,0.112202,-0.006524,0.150839,0.055012,0.172200,0.035947,0.415550,-0.006898,0.264114,-0.152702) * L0_12 + mat4(0.157117,-0.257834,-0.072677,0.033573,-0.345265,-0.232007,0.158952,0.047806,-0.140175,-0.089647,-0.317085,-0.113653,-0.117433,-0.412981,-0.364419,-0.395336) * L0_13 + mat4(-0.039318,-0.208825,-0.384529,0.193019,-0.207743,0.224728,-0.216771,-0.041243,0.278474,0.587328,0.324841,-0.214525,0.263122,-0.133758,-0.014336,0.328712) * L0_14 + mat4(-0.105414,-0.319498,0.251992,0.280263,0.203964,0.015219,0.176165,-0.076753,-0.002725,0.161294,0.138848,0.161006,-0.183915,0.088492,0.140623,-0.132515) * L0_15 + vec4(0.266298,0.646348,0.244896,-0.799372)));\nvec4 L2_0 = sin((mat4(-0.799884,0.291882,0.277979,-0.026676,0.075683,-0.225309,-0.350309,0.060183,-0.128483,-0.395559,-0.217079,-0.108060,0.209128,-0.140514,0.419112,0.152830) * L1_0 + mat4(0.098326,-0.195196,0.022281,-0.162351,-0.000909,0.097222,0.050151,-0.066556,-0.176062,0.307562,0.189591,-0.268382,-0.093290,-0.154381,0.124107,0.019971) * L1_1 + mat4(0.212532,-0.478355,0.074177,-0.157110,0.265206,0.176512,-0.054458,0.054104,-0.498866,-0.277205,0.066528,0.292660,0.019923,-0.121066,0.086350,0.162966) * L1_2 + mat4(-0.246073,-0.280805,0.014026,0.275088,0.091562,-0.240573,-0.084450,-0.160398,0.242298,0.020763,-0.316870,-0.041575,0.055363,0.275542,0.143667,0.039472) * L1_3 + mat4(-0.282608,-0.421917,-0.551646,0.040077,-0.310140,-0.161498,0.234068,0.198777,-0.127709,0.179918,0.153302,-0.100565,0.113204,0.420512,0.363761,0.164564) * L1_4 + mat4(0.106353,-0.213706,-0.265216,-0.079555,0.689959,0.225517,0.314932,-0.144114,0.111667,-0.100442,-0.151427,-0.338260,0.541412,-0.239675,-0.110042,-0.356440) * L1_5 + mat4(0.605426,0.054515,0.053537,-0.122546,0.049850,0.061052,0.048322,-0.249908,-0.136498,0.534766,-0.203309,-0.177674,0.275870,0.007254,-0.062232,0.435291) * L1_6 + mat4(-0.462646,-0.085566,0.118265,0.294403,-0.130797,-0.076388,0.218769,0.189312,-0.257621,0.163758,-0.089303,0.329493,-0.344918,-0.122449,0.077538,-0.020247) * L1_7 + mat4(-0.242228,-0.099653,0.281141,-0.387743,-0.017388,-0.216421,-0.187880,0.143097,-0.664993,0.268602,-0.024501,0.061993,-0.014543,0.103831,0.517444,0.426110) * L1_8 + mat4(-0.155017,0.208073,-0.007667,-0.096739,-0.046625,0.238168,0.073861,-0.280664,-0.039256,-0.060387,0.065993,-0.048133,0.143885,0.393392,-0.287262,0.411150) * L1_9 + mat4(-0.076283,-0.055604,0.186332,0.217701,0.225706,-0.517426,-0.280707,-0.265373,-0.308097,0.093931,-0.240273,0.160323,0.070131,-0.150214,-0.093826,-0.199744) * L1_10 + mat4(0.220832,-0.201196,-0.173187,-0.092571,0.117201,0.225090,0.097642,-0.390578,-0.047784,0.012955,0.344875,0.100548,0.174198,0.187650,-0.403431,-0.407946) * L1_11 + mat4(-0.033632,-0.108917,-0.073192,-0.123730,0.205912,-0.029052,0.278552,-0.021896,0.760806,-0.235798,-0.076563,-0.020086,0.211061,-0.003058,0.094649,-0.183109) * L1_12 + mat4(0.063028,0.206070,0.005398,0.157938,0.071592,0.041007,0.086203,0.120973,-0.342356,-0.084168,0.337819,0.155655,-0.289200,-0.220111,0.353382,-0.057685) * L1_13 + mat4(0.152915,-0.445639,-0.044594,-0.466108,-0.398143,-0.183457,0.367325,0.203260,-0.015945,-0.293785,0.185941,-0.151575,-0.382100,-0.158306,-0.036480,0.087834) * L1_14 + mat4(-0.150590,-0.019448,-0.063336,-0.155520,-0.158850,0.016282,-0.236285,-0.445620,0.234732,-0.411270,-0.055877,0.545134,-0.097208,-0.173807,-0.128704,0.289292) * L1_15 + vec4(0.257432,0.336903,-0.467734,-0.159689)));\nvec4 L2_1 = sin((mat4(0.371941,0.083275,0.073519,-0.294061,0.249211,-0.205228,0.012841,0.224145,0.288451,-0.238713,0.123314,0.136949,-0.157237,-0.024974,0.077084,0.171150) * L1_0 + mat4(-0.104565,-0.066566,0.042452,0.085845,0.115670,-0.246429,-0.397556,-0.133922,-0.051699,0.234606,0.128200,-0.033557,-0.263267,-0.174842,-0.340153,-0.189225) * L1_1 + mat4(0.018753,-0.363997,-0.507194,0.267135,-0.201080,-0.132666,-0.015387,0.108355,-0.347076,0.186725,0.428169,0.423847,0.099860,0.009195,-0.058546,0.126948) * L1_2 + mat4(-0.001472,0.508522,0.382715,0.145359,-0.098669,-0.093077,-0.862562,0.175376,0.230492,0.290498,-0.102100,0.293327,0.136869,-0.176524,-0.013499,0.158467) * L1_3 + mat4(0.346032,-0.029883,-0.772291,0.266282,-0.086585,0.079776,-0.613977,0.134367,-0.048574,-0.248238,0.179384,0.240191,-0.201639,0.025929,-0.074103,-0.063891) * L1_4 + mat4(-0.156738,-0.275841,-0.850126,0.318444,-0.023141,0.146142,-0.222244,0.171873,-0.122306,-0.328761,-0.560534,0.041290,-0.222313,-0.099698,-0.142349,-0.007382) * L1_5 + mat4(-0.008584,-0.414463,-0.337891,-0.066070,0.036661,0.197948,0.264653,0.071507,-0.032974,0.150845,0.043776,-0.037205,0.257745,-0.333247,0.043836,0.220055) * L1_6 + mat4(-0.126777,0.026214,-0.157583,-0.468407,-0.114517,0.196659,0.032513,0.135507,-0.093153,-0.109016,0.017653,-0.088923,0.165638,-0.198904,-0.024843,-0.312617) * L1_7 + mat4(0.172149,-0.085022,-0.210508,-0.113533,0.006149,0.234681,-0.072138,0.074921,0.044714,0.552212,0.258447,-0.072581,0.076024,0.190487,-0.456945,0.287245) * L1_8 + mat4(0.074328,0.083933,0.149717,-0.411795,-0.032905,-0.240095,-0.410363,0.085089,0.030369,0.037116,-0.213439,-0.221864,0.407886,0.068581,-0.100552,-0.061069) * L1_9 + mat4(0.328867,-0.165090,0.426671,-0.232592,-0.133494,-0.333453,-0.021585,0.173575,0.138713,-0.040265,-0.045061,0.102231,0.273129,0.196260,0.114615,-0.053826) * L1_10 + mat4(-0.017473,0.076396,0.031095,-0.016197,-0.210678,-0.276238,0.181697,-0.310255,0.196535,-0.024743,0.247260,0.168855,0.171940,0.194283,-0.021059,0.122494) * L1_11 + mat4(0.099002,-0.126535,0.136695,0.437136,0.153082,-0.221879,-0.413551,-0.439255,-0.074357,-0.395523,-0.594875,0.058083,-0.423243,0.165112,0.307301,-0.606512) * L1_12 + mat4(-0.173802,-0.164498,-0.003509,-0.178425,0.054642,0.166742,-0.264800,0.234817,0.108999,-0.048088,0.166243,0.217589,0.120235,0.062439,0.069747,-0.167706) * L1_13 + mat4(-0.092968,-0.327533,0.208142,-0.065558,-0.149888,-0.037274,0.203879,0.182698,-0.038191,-0.203367,-0.555507,0.112339,0.078107,0.044386,-0.466891,-0.005743) * L1_14 + mat4(0.381929,-0.278373,-0.286352,-0.156499,-0.130373,-0.087503,0.020514,0.220678,-0.186787,0.190823,-0.282393,-0.384381,-0.000064,-0.373724,-0.770037,0.145281) * L1_15 + vec4(0.119295,0.440877,0.099042,0.388032)));\nvec4 L2_2 = sin((mat4(-0.146968,0.019049,0.340311,0.281571,0.200063,-0.064326,-0.019946,-0.289114,0.237279,-0.079938,-0.125136,-0.014858,0.017215,-0.062984,0.146449,-0.143082) * L1_0 + mat4(0.112623,0.037561,0.242803,-0.054938,0.061401,0.107507,-0.163030,-0.016422,0.247219,-0.298161,-0.081166,-0.073265,0.189923,0.024802,0.445169,0.127650) * L1_1 + mat4(0.134461,-0.001707,-0.098510,-0.244427,0.079853,0.025952,0.241304,-0.193793,-0.232934,0.002100,-0.058722,0.058433,-0.363461,-0.227076,-0.066148,0.665089) * L1_2 + mat4(0.102120,0.248915,0.171991,-0.639562,0.112125,-0.117504,0.147563,-0.144198,-0.009915,-0.376219,0.186128,0.147194,0.125921,0.108906,-0.050919,0.511264) * L1_3 + mat4(0.394338,0.110443,0.197514,-0.323063,0.275560,0.100573,-0.122365,0.106127,-0.008676,-0.046535,-0.062053,0.395540,-0.029228,0.078437,0.284545,-0.431989) * L1_4 + mat4(0.745744,0.006646,-1.016205,-0.140934,-0.209098,-0.160822,0.245769,0.193788,-0.255631,-0.205702,-0.196659,-0.023495,0.045201,0.141375,-0.154390,-0.158483) * L1_5 + mat4(0.025730,-0.068028,-0.330679,-0.060121,-0.271334,0.211418,-0.198865,-0.018969,0.075102,-0.088710,-0.324441,-0.268605,0.264467,0.122193,0.121540,-0.305779) * L1_6 + mat4(-0.121957,-0.109087,0.202465,0.113833,-0.038202,0.049416,-0.063165,-0.283470,-0.099470,0.018619,0.079596,-0.503594,-0.116624,-0.285706,-0.099606,0.259260) * L1_7 + mat4(0.111651,0.042289,0.186121,0.095971,0.046704,-0.118837,0.046659,-0.496939,0.043962,0.062707,0.033459,-0.052122,-0.009107,0.093657,0.190852,0.159494) * L1_8 + mat4(-0.064333,-0.325432,-0.344304,-0.090373,0.255567,-0.019610,-0.242104,0.480581,-0.031818,0.127856,0.010723,0.406345,-0.291046,-0.076719,0.053806,0.058297) * L1_9 + mat4(-0.139317,-0.018036,-0.323013,0.006651,0.637039,-0.351556,0.094210,-0.152332,-0.144470,-0.285629,0.077866,0.308228,0.331627,0.292328,0.209772,-0.021942) * L1_10 + mat4(-0.008881,-0.013882,-0.148941,-0.071824,-0.244026,-0.127594,0.289867,-0.242562,0.059659,-0.090623,0.435616,-0.256663,0.184335,-0.200321,-0.116934,-0.285743) * L1_11 + mat4(-0.094681,-0.575541,0.052964,-0.060632,-0.102558,0.043474,0.064402,-0.137150,0.076512,0.187970,-0.021864,-0.193094,-0.252667,0.214216,0.001713,0.612499) * L1_12 + mat4(0.019799,0.061462,-0.042722,0.066638,0.047646,0.058543,-0.101427,-0.019602,0.012392,-0.109395,-0.075284,-0.376989,0.053569,0.088215,0.365264,-0.420774) * L1_13 + mat4(0.129065,0.218000,0.006508,-0.029476,0.156041,-0.029838,0.282173,-0.389853,-0.026643,0.037704,-0.081163,0.139174,-0.049401,0.002530,0.199544,0.159398) * L1_14 + mat4(0.123744,-0.046273,0.242313,-0.060911,-0.283790,-0.260145,-0.244329,0.082051,-0.183475,0.038312,-0.180280,-0.208718,0.009114,-0.038268,-0.108048,0.076050) * L1_15 + vec4(0.467341,-0.178704,-0.426258,0.489824)));\nvec4 L2_3 = sin((mat4(0.043795,0.363375,-0.178767,0.278697,-0.096041,0.152247,-0.418011,-0.110888,-0.024599,-0.059685,0.019744,0.130627,0.273589,0.071344,0.037545,0.120205) * L1_0 + mat4(-0.521077,0.054288,-0.009366,-0.071441,0.050167,-0.239172,-0.095574,-0.283652,-0.301519,-0.014899,0.123458,-0.096695,0.012245,0.247309,-0.124166,0.191662) * L1_1 + mat4(-0.283401,-0.169826,0.096954,0.183525,-0.207295,-0.099903,0.305994,0.416126,-0.266950,0.118154,-0.068646,-0.342003,-0.229426,0.215752,-0.093999,0.456698) * L1_2 + mat4(0.523348,0.064676,0.082485,0.208025,-0.249820,-0.286489,0.027611,-0.098865,-0.297363,-0.283997,-0.010388,-0.444425,-0.032747,-0.001404,0.185830,-0.361137) * L1_3 + mat4(0.036697,-0.292195,0.200100,0.197405,0.205119,-0.212460,-0.109031,-0.112486,0.232505,-0.191706,0.112329,-0.005671,-0.198684,0.057761,-0.200560,-0.204235) * L1_4 + mat4(0.260891,-0.453973,0.041684,0.569572,-0.055341,0.069788,0.464273,0.165743,-0.202316,-0.179485,-0.134469,0.075623,0.219402,0.146797,-0.168429,-0.153340) * L1_5 + mat4(-0.035184,-0.382998,0.452790,-0.030339,-0.254982,0.390478,0.141212,0.046684,0.024719,0.208741,-0.179658,-0.244126,-0.162434,0.052009,-0.130007,0.434971) * L1_6 + mat4(-0.185556,0.098120,0.139359,-0.147741,0.118371,0.510750,-0.125348,-0.268231,0.162515,-0.106317,0.211202,0.246889,-0.044981,-0.045157,-0.270467,-0.214036) * L1_7 + mat4(0.068871,0.262156,-0.137661,-0.377875,0.218427,0.032152,-0.260657,-0.170840,-0.100348,0.076205,0.165317,-0.166143,-0.035743,-0.505591,-0.506902,-0.161707) * L1_8 + mat4(0.532278,-0.092519,-0.092361,-0.235476,0.070830,-0.246745,0.261772,0.360340,0.209590,0.012407,0.130174,-0.261294,-0.153485,0.143455,-0.206733,-0.360695) * L1_9 + mat4(0.304714,-0.029396,-0.141067,0.155811,-0.029419,-0.014783,-0.171107,0.329895,0.040019,-0.451303,0.393265,-0.047552,0.078010,-0.078453,0.050370,-0.220973) * L1_10 + mat4(0.007674,-0.013275,0.055933,-0.039895,-0.255876,0.098387,-0.045105,-0.108984,0.069255,0.407409,0.134216,0.030802,0.043784,0.193492,0.040512,0.109274) * L1_11 + mat4(0.232292,0.383814,-0.222100,0.146898,0.048119,0.096058,-0.114216,-0.110428,0.058632,0.215191,-0.083710,0.289822,-0.007850,0.078714,-0.554228,-0.418477) * L1_12 + mat4(0.252689,0.252649,-0.015515,0.062765,-0.444149,0.037301,-0.037182,-0.153119,0.080084,0.398149,0.247394,0.150688,0.155148,0.131989,0.122384,-0.226954) * L1_13 + mat4(0.079389,-0.084507,0.043301,-0.077929,0.271124,0.251770,0.124634,0.381798,-0.083576,0.086486,-0.051783,0.067809,-0.171601,-0.234240,-0.255883,-0.179577) * L1_14 + mat4(0.125456,-0.160921,0.010271,0.125601,-0.124593,0.163709,-0.082528,0.075078,-0.195694,-0.220333,-0.244482,-0.041377,-0.357563,-0.190052,0.060743,-0.246543) * L1_15 + vec4(0.094283,0.392224,-0.827864,0.255251)));\nvec4 L2_4 = sin((mat4(0.292321,-0.165734,0.077619,0.075947,-0.119423,-0.557319,0.020742,0.244852,0.331017,0.247758,0.128026,-0.081215,0.008202,-0.410766,-0.044534,0.036316) * L1_0 + mat4(-0.055196,-0.132757,-0.317592,0.223663,0.155369,-0.105983,-0.117766,0.284519,0.144858,-0.256791,0.222833,0.012585,0.013671,0.219684,-0.164110,0.221121) * L1_1 + mat4(-0.175218,0.061482,0.086400,-0.157963,0.510929,-0.088537,-0.054296,0.091118,-0.157439,0.041755,0.152247,0.109222,-0.648998,-0.032642,0.124016,0.136970) * L1_2 + mat4(0.298988,-0.480186,0.161814,0.038473,0.115642,0.125700,0.289888,0.219716,0.016717,0.126892,0.238510,-0.171989,0.282864,-0.193179,-0.114312,-0.001414) * L1_3 + mat4(-0.318396,0.428807,-0.177169,-0.216401,-0.224410,-0.195181,0.148842,-0.059869,-0.222034,-0.055506,-0.040244,0.039610,-0.270935,0.587164,0.151702,-0.080351) * L1_4 + mat4(0.393485,0.059382,-0.024506,0.453013,0.105364,-0.167347,-0.409575,0.028803,-0.156692,0.095175,0.114000,-0.235579,0.297520,-0.021024,0.013559,0.261555) * L1_5 + mat4(-0.181339,-0.007406,0.351606,0.216942,0.250724,0.136770,0.101119,0.458613,0.080312,0.066037,0.278460,0.366343,0.276002,-0.092561,0.164695,-0.136949) * L1_6 + mat4(0.470956,0.253781,0.018730,0.342199,-0.002820,0.028001,0.224277,0.096774,-0.477649,0.025789,-0.153547,0.489825,0.263045,0.141666,0.121545,-0.060765) * L1_7 + mat4(0.501692,-0.337075,-0.425941,0.270778,0.121742,-0.104278,0.216411,-0.143043,0.137674,-0.105051,0.001648,-0.022961,-0.015376,-0.002781,0.135871,-0.158685) * L1_8 + mat4(-0.288071,0.159604,-0.642292,0.405022,-0.128584,-0.457360,0.022486,-0.071993,-0.546134,-0.268372,-0.172252,-0.084715,-0.579114,-0.316417,-0.681710,0.106323) * L1_9 + mat4(0.091633,-0.108540,-0.125051,-0.419658,0.027666,0.047798,-0.037567,0.018282,-0.121786,0.009878,0.032397,0.068643,0.325439,-0.201125,-0.015939,-0.086764) * L1_10 + mat4(0.074740,0.345264,0.007638,-0.064024,0.307844,-0.180607,-0.302830,-0.151950,-0.190047,0.114135,-0.508799,0.218913,-0.270628,0.383867,0.144821,0.282040) * L1_11 + mat4(-0.094849,0.219733,-0.158558,0.156256,0.404866,0.244288,0.180697,-0.216125,-0.093291,0.199824,0.426185,0.317154,0.273258,-0.101977,0.476217,-0.140014) * L1_12 + mat4(0.079503,-0.181284,0.171668,0.024806,-0.237453,-0.016308,0.225026,-0.046407,0.054029,-0.229350,0.195661,0.149388,0.594942,-0.378638,-0.008746,0.102928) * L1_13 + mat4(0.046726,-0.302833,-0.359486,-0.404707,0.112526,-0.138210,-0.010303,0.111660,-0.272575,0.089509,-0.231015,0.123531,-0.258562,-0.089646,0.188111,0.059676) * L1_14 + mat4(-0.090607,0.231567,0.114778,-0.085550,-0.109371,0.026892,-0.074410,-0.219776,0.150202,0.267164,-0.096706,0.223622,0.018698,0.339822,-0.094384,0.114891) * L1_15 + vec4(0.464807,0.084960,-0.309495,-0.531887)));\nvec4 L2_5 = sin((mat4(-0.144887,-0.265257,-0.147157,0.106561,-0.072360,-0.212443,0.031038,0.030989,-0.160422,-0.371837,-0.349082,0.168856,-0.026582,-0.190694,0.030832,-0.426229) * L1_0 + mat4(0.038068,-0.068687,0.383634,-0.069888,-0.062275,-0.308243,-0.168182,-0.230543,0.339635,0.014034,0.216727,-0.248768,0.119746,0.166537,0.369842,0.254782) * L1_1 + mat4(0.056708,-0.040157,-0.132194,-0.024106,0.000815,-0.065699,-0.277872,-0.057684,-0.024936,0.015414,-0.199524,-0.005467,-0.153640,0.120428,-0.107923,-0.192996) * L1_2 + mat4(-0.256149,0.007459,-0.022583,0.098390,-0.108052,0.247875,0.025075,0.282159,-0.238413,0.174997,-0.234303,-0.124962,0.436940,0.131541,-0.395193,0.129271) * L1_3 + mat4(0.244758,-0.023343,0.355373,0.336985,-0.114048,-0.101814,0.283295,0.220195,-0.059361,0.311791,0.237247,0.030471,0.207790,0.525901,-0.482338,-0.097528) * L1_4 + mat4(0.301987,-0.018684,0.068403,-0.063898,0.013868,-0.230468,0.225413,0.153212,-0.186469,0.367128,0.091477,0.073300,-0.045295,0.003779,-0.216936,0.034673) * L1_5 + mat4(-0.102138,0.268918,0.124606,-0.069538,0.169491,-0.021403,-0.179899,-0.331756,0.031607,0.170839,0.118067,-0.159212,0.132257,0.676871,-0.105822,0.215338) * L1_6 + mat4(0.017823,0.002720,0.117443,0.053237,0.084765,0.036075,0.009913,-0.067701,-0.042297,-0.328926,0.110433,0.441650,0.304489,0.033259,-0.078157,-0.026253) * L1_7 + mat4(0.383058,-0.159770,0.108747,-0.065330,-0.117201,-0.122440,-0.021936,-0.004964,-0.075423,0.319427,0.054716,-0.005058,0.408619,-0.248636,-0.041812,0.119519) * L1_8 + mat4(0.136984,0.140463,0.258058,-0.044293,0.355133,0.443419,0.399112,-0.134924,0.112185,0.279925,0.048836,0.229128,-0.160235,0.682946,-0.117961,-0.072580) * L1_9 + mat4(0.354581,-0.449131,-0.033323,0.185502,0.148981,0.430063,0.266938,-0.007126,0.062333,-0.261646,-0.069005,-0.010667,-0.017313,-0.253966,0.075344,-0.184386) * L1_10 + mat4(0.036488,0.227529,0.181832,0.102965,-0.142173,0.248750,0.125067,0.105615,0.088840,-0.357808,0.137244,0.334073,-0.195385,-0.184115,0.004741,0.284027) * L1_11 + mat4(0.125834,0.130611,0.083882,-0.164669,0.311083,-0.580294,0.362012,0.017095,-0.022716,0.139730,-0.117166,-0.003001,0.007940,0.038574,0.198735,0.001503) * L1_12 + mat4(-0.036260,-0.059650,0.010588,0.129695,0.029159,0.267747,0.220627,-0.093928,0.200185,-0.200695,0.120882,-0.151361,0.190586,-0.245340,0.243028,0.189932) * L1_13 + mat4(-0.210302,-0.042822,-0.026325,-0.015015,0.319247,0.074938,0.188652,-0.072905,0.139636,0.068740,-0.236740,-0.068241,0.266363,0.075731,-0.345991,0.353443) * L1_14 + mat4(0.303589,-0.374034,-0.165385,0.251834,-0.078786,0.045042,0.173811,0.203684,0.242000,-0.044011,0.167543,0.233870,-0.131549,0.175050,-0.387027,-0.400077) * L1_15 + vec4(0.142705,0.770081,0.168994,0.048500)));\nvec4 L2_6 = sin((mat4(0.018734,-0.192971,0.144140,-0.063774,-0.166597,-0.058675,0.371960,-0.470485,-0.113860,-0.032012,0.171509,-0.298466,-0.039281,0.112258,-0.376012,0.048768) * L1_0 + mat4(-0.094875,0.158963,0.255102,0.010971,-0.102085,0.029290,-0.328730,0.292066,-0.005612,-0.048239,0.178225,0.326910,-0.019320,0.073099,-0.415321,0.113717) * L1_1 + mat4(0.053048,0.013864,-0.167441,0.197508,0.147354,-0.459551,0.031751,-0.021513,-0.304433,-0.283811,0.071935,-0.215717,0.375576,-0.169695,-0.080853,-0.134896) * L1_2 + mat4(0.528818,-0.360685,-0.038093,-0.244192,0.069082,0.280540,0.002744,-0.051100,0.468887,-0.048677,0.200154,-0.063554,0.447196,-0.164146,-0.323019,0.311013) * L1_3 + mat4(-0.020637,0.334509,0.033855,-0.389114,0.304037,0.020102,-0.198188,0.232721,0.200834,0.390047,-0.250431,-0.204940,0.053567,-0.195675,0.458420,0.331405) * L1_4 + mat4(0.238625,-0.317999,-0.263784,0.191013,-0.206849,0.100066,-0.051554,0.229890,0.369632,-0.024315,0.086816,0.306049,-0.085842,0.264670,-0.165347,-0.081434) * L1_5 + mat4(0.114954,0.246977,0.066467,0.118861,-0.118167,-0.094678,0.094570,0.214053,-0.131681,0.086621,0.237650,-0.211622,-0.250642,0.012981,-0.123440,0.206849) * L1_6 + mat4(-0.265162,-0.626220,-0.240613,0.064825,0.011542,-0.070001,0.179920,-0.134525,0.331052,0.194029,-0.300463,-0.200525,-0.181221,-0.213907,0.057172,-0.095248) * L1_7 + mat4(-0.125442,-0.287728,-0.116643,0.170987,-0.142503,0.038669,-0.083943,-0.084132,0.035990,0.020613,-0.119819,-0.265250,-0.046890,-0.180135,0.466603,0.312337) * L1_8 + mat4(0.085102,-0.072564,0.224552,-0.261628,-0.134104,-0.241161,0.383742,-0.329742,0.066159,-0.448305,0.022735,-0.009145,-0.234048,-0.037656,0.409293,0.034561) * L1_9 + mat4(-0.291820,-0.024321,0.171139,0.112266,0.185432,0.222623,-0.134558,0.411009,0.123683,-0.192291,-0.020162,-0.101293,-0.042941,-0.165294,0.057550,-0.221901) * L1_10 + mat4(0.284607,-0.078086,-0.072092,0.085551,-0.129272,-0.059872,-0.348755,0.141385,0.407046,-0.096857,-0.196179,0.289394,-0.179466,0.148740,-0.173378,-0.081427) * L1_11 + mat4(-0.242103,-0.026037,0.042048,-0.206119,-0.289400,-0.186034,-0.416165,0.463570,-0.229056,0.043114,0.164981,0.173328,-0.362260,0.211918,0.254579,-0.251266) * L1_12 + mat4(0.022852,0.089868,-0.022772,0.186068,0.102971,-0.076866,-0.082588,0.308741,0.220118,0.036491,-0.095769,-0.091794,0.209545,-0.075002,0.190343,0.061139) * L1_13 + mat4(0.414039,0.100766,0.156257,-0.130382,-0.150668,0.030754,0.032139,-0.447317,0.254607,-0.191115,-0.111478,0.080146,0.011398,-0.322058,-0.036776,-0.203694) * L1_14 + mat4(-0.215893,-0.102350,0.227141,-0.094134,-0.009060,0.231438,0.063536,-0.229540,-0.088720,-0.314663,-0.301821,-0.198985,-0.157348,0.114257,0.078573,-0.248709) * L1_15 + vec4(-0.189407,0.710205,0.188498,-0.560535)));\nvec4 L2_7 = sin((mat4(0.034654,0.023131,0.262962,-0.131589,-0.274217,0.206761,0.175940,-0.116543,0.130996,0.419445,0.369503,0.091831,-0.225570,0.107489,0.029956,-0.332211) * L1_0 + mat4(0.061512,-0.319164,-0.151188,0.341578,-0.304244,0.274387,0.075479,-0.200949,0.012084,0.039233,-0.066042,0.152042,0.052677,0.022118,0.219649,0.210020) * L1_1 + mat4(-0.012691,0.079741,0.145154,0.183627,-0.150790,0.016733,0.140447,-0.169728,0.485961,-0.083945,0.037476,0.244422,-0.195264,0.060173,-0.080921,0.049593) * L1_2 + mat4(-0.292012,0.085132,0.079684,-0.421096,0.097975,-0.090969,-0.073248,0.135398,-0.514593,-0.091921,-0.184953,-0.140229,-0.265618,-0.162515,0.265766,-0.302018) * L1_3 + mat4(-0.041565,-0.367545,0.417522,-0.082235,-0.370626,-0.147889,-0.202161,0.262919,-0.011281,0.028650,0.128636,-0.006335,-0.192343,0.320459,-0.069586,0.663509) * L1_4 + mat4(-0.343187,-0.306999,-0.197421,-0.036454,-0.205212,-0.337452,-0.079755,0.229889,0.049580,-0.272343,-0.042018,0.358525,0.194794,-0.203406,0.036786,0.004331) * L1_5 + mat4(-0.185835,-0.155518,0.033475,0.239985,0.220275,0.088857,0.181127,0.096966,0.246629,0.105521,-0.044080,0.186432,-0.036842,0.400786,0.060499,0.047050) * L1_6 + mat4(-0.190856,0.234975,-0.124539,0.177978,-0.095102,-0.274902,0.150506,-0.369971,-0.003211,0.095143,-0.401647,-0.022959,0.017770,0.178332,0.437982,-0.137716) * L1_7 + mat4(0.109208,0.077358,0.151487,-0.284291,-0.156665,-0.003735,-0.133618,-0.140912,0.058028,0.029093,0.211549,0.635089,0.364675,0.031653,-0.317637,0.351440) * L1_8 + mat4(-0.127365,0.340876,-0.307266,-0.194182,-0.048819,-0.014129,-0.341968,0.314620,0.190439,0.138237,-0.250591,0.359623,-0.163480,0.130059,0.312728,0.112037) * L1_9 + mat4(0.014217,0.228584,0.189282,0.027325,-0.326473,-0.289403,0.133950,0.009953,-0.018094,-0.292180,0.062755,-0.110630,0.018019,0.204412,0.261667,-0.117936) * L1_10 + mat4(0.104293,-0.060420,-0.209366,0.403950,-0.183570,0.137642,0.040651,0.060669,-0.007341,-0.288659,0.016729,0.011248,0.036931,0.275306,0.220821,-0.450576) * L1_11 + mat4(0.090630,0.272162,0.064341,0.103780,0.337637,-0.206873,-0.105514,0.114541,-0.042931,0.409005,0.050158,-0.383304,0.444018,-0.114532,0.205496,-0.434110) * L1_12 + mat4(-0.105020,-0.266882,0.072427,-0.069692,0.000386,-0.393141,-0.178944,0.420262,0.140791,-0.112158,0.044334,0.138096,0.086382,-0.144620,0.141655,-0.406254) * L1_13 + mat4(-0.077832,0.321022,0.079331,-0.002739,0.460238,-0.188649,-0.138761,0.231978,0.019659,-0.078995,-0.069869,0.450390,0.043287,-0.160468,0.013340,0.004316) * L1_14 + mat4(0.101417,0.469970,-0.006099,-0.023723,-0.104052,-0.029583,0.165089,-0.205794,0.199942,0.074334,-0.213034,0.459656,0.092928,-0.347861,-0.124716,-0.282242) * L1_15 + vec4(0.449651,-0.804114,0.678605,-0.246061)));\nvec4 L2_8 = sin((mat4(0.063006,0.118604,-0.112948,0.102672,0.108612,0.207377,0.072362,0.193967,-0.109685,0.065826,-0.076174,0.087385,0.291479,-0.157726,0.020133,0.037049) * L1_0 + mat4(0.059057,-0.042842,-0.104210,0.068625,-0.646719,-0.127238,0.200804,0.241248,0.363591,0.411266,-0.092463,-0.099538,-0.244867,0.151231,-0.110140,0.257614) * L1_1 + mat4(-0.217855,0.033212,-0.327169,0.082933,-0.046675,0.260710,-0.059495,0.205139,0.111956,0.001340,0.187477,-0.191083,0.191197,0.304061,-0.094770,0.069229) * L1_2 + mat4(0.276350,-0.438910,-0.158483,-0.056319,-0.166589,-0.078256,-0.104277,-0.241576,0.136308,-0.069064,0.190903,0.082254,-0.248549,-0.335505,0.503605,0.002864) * L1_3 + mat4(-0.389230,-0.168294,0.505070,-0.023605,-0.327724,-0.018652,-0.391438,0.141768,0.007816,-0.167988,0.265738,-0.418544,0.394659,-0.049298,-0.123861,0.279332) * L1_4 + mat4(-0.306098,0.371308,0.387431,-0.156690,0.055229,-0.079035,0.004831,0.105494,-0.227716,0.334487,-0.174176,-0.019575,-0.273501,0.196813,0.092414,-0.168606) * L1_5 + mat4(-0.380206,-0.104128,0.163636,-0.059897,0.104236,0.197609,0.137412,0.022782,0.371948,0.135349,-0.030875,0.368687,0.197883,0.297435,-0.269028,-0.162690) * L1_6 + mat4(-0.714032,-0.075173,-0.519918,0.081607,-0.035829,-0.359368,0.002656,-0.206435,-0.044979,0.234489,-0.226919,0.112523,-0.420212,-0.120753,0.211415,0.541302) * L1_7 + mat4(0.097657,-0.304873,-0.081605,0.334443,-0.091891,0.093392,0.094258,-0.071109,-0.291583,-0.104472,0.143556,-0.002565,-0.486022,-0.040115,0.023384,0.161350) * L1_8 + mat4(0.223538,0.126520,-0.400053,-0.497386,0.259374,-0.281238,-0.485117,-0.403295,0.235752,-0.012735,-0.092945,-0.305981,-0.021107,0.010450,-0.226504,-0.214704) * L1_9 + mat4(0.198298,0.019552,0.288846,-0.091503,-0.254787,-0.126864,0.031942,0.222284,-0.114082,-0.179274,0.118944,-0.313185,0.164111,0.297345,0.080637,-0.186488) * L1_10 + mat4(0.054970,0.074938,-0.224531,-0.254679,0.083926,-0.031887,0.022126,-0.014237,-0.415319,0.423512,-0.168757,-0.005613,0.254796,-0.541688,0.105905,-0.231498) * L1_11 + mat4(0.490251,-0.141514,-0.067593,-0.257834,0.124249,-0.023852,-0.168461,0.224459,-0.003417,0.135493,-0.190467,0.081877,0.210276,0.197442,0.509435,0.175653) * L1_12 + mat4(-0.089212,0.031638,0.008026,-0.242287,0.113422,0.025443,0.023109,-0.376690,-0.213046,-0.071696,0.237271,0.073602,0.034162,0.273147,-0.017570,-0.124953) * L1_13 + mat4(-0.103776,-0.089922,0.328380,0.149447,0.044481,0.136849,0.061834,-0.257286,0.265659,0.108922,-0.067841,0.235617,0.007367,0.292323,-0.225496,0.026826) * L1_14 + mat4(-0.214259,0.179160,-0.185176,-0.177104,-0.096829,-0.121051,0.111188,-0.225010,0.243597,-0.009765,-0.324033,0.194188,0.021570,0.324590,0.151259,0.155099) * L1_15 + vec4(0.145487,-0.207262,-0.245522,-0.380178)));\nvec4 L2_9 = sin((mat4(-0.260968,0.258941,-0.169252,-0.087146,0.104444,0.055597,0.019494,0.139880,0.142217,-0.033321,0.108219,-0.176693,0.067110,0.010693,-0.269978,0.134150) * L1_0 + mat4(0.420313,-0.068398,0.173150,0.032049,0.349744,0.147549,-0.049024,0.093297,-0.361005,0.185577,0.254291,0.266941,0.043139,0.153404,-0.154019,-0.236035) * L1_1 + mat4(0.343957,0.022728,-0.312915,0.057711,0.026836,-0.071015,-0.236312,0.230676,-0.248714,0.304190,0.187750,-0.044287,-0.233432,-0.068424,0.464881,0.277614) * L1_2 + mat4(-0.095616,0.012528,0.894151,0.074763,-0.123937,0.274321,0.189350,0.373548,0.099424,-0.366814,-0.502118,0.000085,0.277776,0.245494,-0.044686,-0.198431) * L1_3 + mat4(0.357477,-0.007410,0.015786,-0.393545,0.444970,-0.361122,0.316077,-0.120914,0.054036,0.033801,0.161325,0.083439,-0.243051,0.142264,0.343820,-0.005194) * L1_4 + mat4(0.263762,-0.409705,0.031448,0.393186,-0.178663,0.022421,0.045360,0.014918,0.231872,0.043760,-0.014796,-0.137304,0.217081,-0.034062,-0.326035,0.264240) * L1_5 + mat4(0.139107,-0.004218,0.211323,-0.230684,-0.173227,0.362870,-0.251972,-0.031698,-0.045005,-0.107250,0.101012,0.386050,-0.024262,0.163513,0.451171,0.221384) * L1_6 + mat4(0.196425,0.261607,-0.037231,0.239261,0.168624,-0.258115,-0.230138,0.077609,-0.389847,0.161534,-0.003667,-0.189143,-0.663268,-0.244797,0.283724,0.038186) * L1_7 + mat4(-0.251311,-0.304041,0.239613,-0.097792,-0.111486,0.176614,-0.329745,0.163473,0.205496,0.069651,0.003174,0.132787,0.179015,0.118063,0.105341,0.155745) * L1_8 + mat4(0.043597,0.339429,-0.042794,0.001311,-0.203213,0.087629,-0.030907,-0.210218,-0.130490,0.020626,0.048475,-0.122273,-0.049312,-0.632239,-0.676047,0.397941) * L1_9 + mat4(-0.238563,-0.033951,0.312137,0.286021,-0.142261,-0.060369,0.203222,-0.630856,-0.345649,-0.212965,-0.214110,-0.073156,-0.058301,0.063859,0.001958,0.085358) * L1_10 + mat4(0.082688,0.104205,0.159147,0.215613,0.102770,0.023081,0.074222,-0.225248,0.200527,0.184253,0.127026,0.032575,0.074186,0.042959,0.246075,0.295456) * L1_11 + mat4(-0.233711,-0.017559,0.243436,0.137841,0.013419,0.110857,0.016895,0.099150,0.049167,-0.180515,0.139953,0.225201,-0.503599,0.237441,0.115677,-0.208968) * L1_12 + mat4(-0.019589,-0.164534,0.158024,-0.144248,0.086881,-0.278561,0.428187,-0.066145,-0.100553,-0.050643,-0.164357,0.127991,-0.005102,0.483607,-0.026070,-0.268533) * L1_13 + mat4(-0.018219,-0.316482,0.198383,0.218982,0.043881,-0.044545,0.404617,-0.038843,0.210878,0.376825,-0.197741,-0.150106,0.066075,0.074643,-0.084632,0.427231) * L1_14 + mat4(-0.040320,-0.084373,0.245855,0.154937,0.283145,0.081512,-0.051595,-0.053360,-0.109201,-0.233277,0.183946,0.166200,-0.060239,-0.069856,-0.100613,-0.178919) * L1_15 + vec4(0.721770,0.379825,-0.691074,-0.348572)));\nvec4 L2_10 = sin((mat4(0.163461,-0.087914,0.194196,-0.163538,-0.179067,0.307793,-0.130416,0.021676,-0.052278,0.349518,-0.001255,-0.250251,0.455477,0.054497,-0.050302,-0.320533) * L1_0 + mat4(0.044580,-0.343053,-0.037955,-0.136108,0.284539,0.474417,0.184508,0.169548,0.455573,0.085371,0.117410,-0.122180,-0.001254,0.022811,-0.073639,-0.185303) * L1_1 + mat4(-0.121498,-0.096732,-0.124223,0.328048,0.244778,0.017844,0.135215,-0.115133,-0.518512,0.134922,0.069875,-0.262191,-0.114695,0.047223,0.239262,-0.244788) * L1_2 + mat4(0.083367,0.253628,0.476840,0.034165,0.209623,-0.659856,0.026474,-0.270962,0.074422,-0.058048,0.106915,-0.088801,-0.493740,-0.108612,-0.092071,-0.282023) * L1_3 + mat4(-0.253422,0.007614,-0.339637,-0.293480,-0.323280,0.042859,-0.472904,0.019296,-0.189182,0.266302,-0.138721,0.041310,-0.039336,-0.334667,0.230768,-0.142458) * L1_4 + mat4(-0.616618,0.462102,-0.502663,-0.129252,-0.011382,0.229330,0.211564,0.180326,-0.156253,0.132287,-0.021470,0.029963,-0.133603,-0.192491,-0.343283,-0.108871) * L1_5 + mat4(-0.119720,-0.448408,-0.530219,-0.211411,0.015008,0.131023,0.029379,-0.294866,-0.283226,-0.369329,0.060162,-0.213445,-0.024189,0.245888,0.240797,0.250848) * L1_6 + mat4(-0.441201,0.141934,-0.133343,-0.121708,-0.102468,-0.148076,0.218228,0.301971,0.382224,-0.040053,0.216179,0.179485,-0.251805,-0.110341,-0.092427,0.083386) * L1_7 + mat4(-0.264302,-0.127215,-0.145018,-0.239327,0.076540,-0.331859,-0.157137,0.025047,0.264065,-0.113411,-0.063836,-0.176708,0.532951,0.238526,0.290703,-0.440314) * L1_8 + mat4(-0.105444,0.039619,-0.099571,0.202784,0.176465,0.126199,0.063238,0.036365,0.374646,-0.186181,0.069662,0.091056,0.276261,-0.297045,0.120945,0.200782) * L1_9 + mat4(-0.176467,0.555757,-0.016813,-0.325173,-0.179147,-0.119305,-0.195831,-0.095326,-0.075398,0.288869,-0.463296,0.083407,-0.461330,0.330566,-0.162015,0.036553) * L1_10 + mat4(-0.247521,0.219947,-0.291949,0.188104,0.273333,-0.367351,-0.184234,-0.217450,-0.403249,0.199397,-0.064862,-0.025746,-0.396750,0.416047,0.236234,0.525417) * L1_11 + mat4(0.184452,0.186475,-0.024480,0.157005,-0.154056,0.168910,0.118152,0.289844,-0.214832,0.296478,0.039388,-0.214657,0.767205,-0.570358,-0.306242,-0.176955) * L1_12 + mat4(-0.298609,0.053662,-0.271848,0.001381,-0.640505,0.119597,0.225836,0.078020,0.080660,0.243346,0.474880,-0.156738,0.395583,-0.110776,-0.501421,-0.373746) * L1_13 + mat4(-0.458799,0.262240,0.206617,-0.315324,0.310561,0.305803,0.198426,0.139379,0.345296,-0.348433,-0.244042,-0.171715,0.028786,-0.056852,-0.092384,0.231829) * L1_14 + mat4(-0.047781,-0.065258,0.225455,0.240699,0.058034,-0.259070,0.176361,0.163543,0.261384,0.138997,-0.324957,-0.292771,-0.665793,0.291425,-0.294540,0.072615) * L1_15 + vec4(-0.666404,-0.635879,-0.249307,-0.090406)));\nvec4 L2_11 = sin((mat4(-0.092708,-0.080640,-0.058987,0.064440,-0.035935,0.265131,0.022318,0.223599,-0.154620,-0.035569,0.007523,-0.075108,0.073983,-0.027023,0.026576,-0.233870) * L1_0 + mat4(-0.022339,-0.420267,-0.137006,0.169619,0.091378,-0.177080,-0.367825,-0.413362,0.125060,-0.109407,-0.052759,0.056882,-0.212341,-0.145545,-0.378031,0.018685) * L1_1 + mat4(-0.197638,0.120116,0.027836,-0.217827,0.024796,-0.364255,0.348434,0.090716,-0.375573,0.038091,0.394625,-0.331133,-0.021083,0.555512,0.329568,-0.050164) * L1_2 + mat4(-0.391070,0.008960,0.117516,-0.028740,0.049765,-0.187241,0.240134,0.311416,0.115723,-0.118038,0.084476,0.251248,0.184505,-0.016603,0.106558,0.212276) * L1_3 + mat4(0.078396,-0.528271,-0.388867,-0.012054,0.219422,-0.186441,0.386523,0.085012,-0.081469,0.250065,-0.438607,-0.036271,-0.006061,-0.426495,0.344871,0.045549) * L1_4 + mat4(0.225464,0.507023,0.839726,0.439757,0.004656,0.155620,-0.086473,0.348983,0.089114,-0.275514,-0.148264,0.173399,0.019776,-0.229056,0.027290,-0.050113) * L1_5 + mat4(0.104020,-0.011744,-0.109180,0.298116,0.408051,-0.014939,0.043827,0.221237,0.110104,0.139692,-0.083664,0.170073,-0.094333,0.046574,0.492597,0.130538) * L1_6 + mat4(-0.477331,-0.099626,-0.136279,0.206071,-0.176347,-0.341847,0.176115,-0.066515,0.043368,-0.264571,0.540631,0.132562,-0.256226,-0.218937,-0.172481,0.047979) * L1_7 + mat4(-0.126768,0.229292,0.429584,0.322988,-0.138512,-0.259234,-0.190774,-0.077056,0.064258,0.151285,-0.129949,-0.004451,0.254396,-0.299684,0.505553,0.032974) * L1_8 + mat4(0.243324,0.147121,-0.062210,-0.401853,0.023219,-0.180515,0.073966,-0.236966,-0.017197,-0.162875,0.052728,-0.152465,0.094712,-0.216536,-0.100311,-0.149163) * L1_9 + mat4(0.578413,-0.055933,-0.075054,0.583436,-0.119893,-0.322094,-0.045969,0.411130,-0.177469,-0.026188,-0.397278,0.437090,-0.082939,0.197241,0.121909,0.045869) * L1_10 + mat4(0.051336,-0.245042,0.271304,-0.021061,0.043763,-0.362009,0.455547,0.603832,0.218874,0.123407,-0.440864,0.133602,-0.324311,0.009465,-0.153544,-0.144830) * L1_11 + mat4(-0.200572,-0.100698,-0.665785,-0.102204,-0.341907,-0.301474,0.377475,-0.046224,0.014890,0.257363,-0.202458,-0.184299,-0.087674,-0.103402,-0.038015,-0.255994) * L1_12 + mat4(-0.224386,0.148613,0.231802,0.535844,0.097959,0.037745,-0.031888,0.263656,-0.304894,-0.173841,-0.402413,0.041892,0.070243,-0.415680,0.341667,0.221888) * L1_13 + mat4(0.049990,0.173716,0.145477,0.039941,-0.373354,-0.083675,-0.495610,-0.316151,0.024102,-0.139254,-0.048504,-0.345471,-0.052502,0.145370,-0.303991,-0.153725) * L1_14 + mat4(-0.313620,0.102852,-0.436954,-0.258021,0.018437,-0.134429,0.416906,0.235631,-0.061029,-0.394717,-0.372250,-0.054822,-0.178449,0.190305,0.000131,0.060296) * L1_15 + vec4(0.444040,-0.291094,0.609378,-0.547882)));\nvec4 L2_12 = sin((mat4(0.398632,0.075289,0.269026,0.237104,-0.017516,-0.022267,-0.272035,0.012741,0.011036,0.026409,0.058417,0.142735,0.465631,-0.128877,0.192899,-0.108003) * L1_0 + mat4(-0.072737,-0.229063,-0.156586,0.152566,0.282269,-0.035627,0.148339,0.295809,-0.021081,0.144020,-0.324715,-0.130906,-0.095441,-0.274482,-0.265668,-0.161473) * L1_1 + mat4(0.009035,0.096751,-0.001650,0.307365,-0.174823,0.142497,-0.095843,-0.049371,0.596856,-0.055386,-0.337423,0.351644,-0.293781,0.126950,0.109132,-0.147662) * L1_2 + mat4(-0.005601,0.142913,0.204169,-0.010422,-0.056072,0.047878,0.319614,0.100970,-0.447686,0.218550,-0.069032,-0.208771,0.041367,-0.005355,0.267581,0.260674) * L1_3 + mat4(0.006287,0.008352,-0.241058,0.237811,-0.965687,0.001757,0.033367,0.356573,-0.382033,-0.094557,-0.146436,0.261869,-0.069351,-0.208241,0.530668,-0.115010) * L1_4 + mat4(-0.421413,-0.367402,0.977301,0.744359,0.196103,-0.244434,0.060133,-0.293244,0.114297,0.507978,0.081203,-0.024912,0.177855,-0.117585,-0.093608,0.405825) * L1_5 + mat4(-0.365484,0.086221,-0.132974,-0.192940,0.434988,0.023691,0.382900,0.120739,-0.421102,0.016406,0.238106,0.239139,0.013075,0.309411,0.232403,0.098348) * L1_6 + mat4(0.219313,-0.198775,0.247353,-0.106294,-0.072996,-0.069869,0.104433,0.126212,-0.110143,0.132258,-0.014577,-0.137051,0.063453,-0.073616,-0.210635,-0.326688) * L1_7 + mat4(-0.137932,-0.381539,-0.381538,-0.225715,0.016882,0.056055,0.130562,0.158868,0.145096,0.186548,-0.247573,-0.064378,-0.054635,0.140301,0.195168,0.239205) * L1_8 + mat4(0.193982,-0.031757,-0.072563,-0.307644,-0.349229,0.299276,0.010222,0.012648,-0.128473,0.305253,0.111087,0.191270,0.394687,0.096091,0.107035,0.346993) * L1_9 + mat4(0.073308,-0.037589,-0.001218,-0.515883,-0.009354,0.065160,0.055826,-0.089743,0.035061,-0.388278,0.168697,0.224846,0.009501,0.102131,0.146622,-0.124861) * L1_10 + mat4(-0.344573,-0.483911,-0.214603,0.110307,-0.160487,-0.036590,0.008342,-0.099982,0.298054,0.340063,0.081596,-0.409810,0.065285,-0.163952,0.127910,-0.077671) * L1_11 + mat4(-0.074933,0.133076,0.284458,0.054023,0.426994,0.451527,0.074037,0.159526,-0.141397,0.040681,0.317661,-0.216700,0.368721,0.365292,-0.475033,0.140678) * L1_12 + mat4(-0.102246,-0.001080,0.060100,0.420690,0.385291,0.325631,-0.196191,0.120479,0.072444,-0.079519,-0.046151,0.135807,0.177435,-0.072084,-0.013954,0.065000) * L1_13 + mat4(-0.231299,-0.004815,-0.196822,0.162548,0.180149,-0.143895,0.255649,0.137023,0.334623,-0.126831,0.020150,-0.144741,-0.298631,-0.266051,0.160739,0.134375) * L1_14 + mat4(0.147201,0.166495,0.489011,0.072543,0.006292,0.017592,0.342849,0.187052,-0.480999,0.376030,-0.358340,0.047115,0.042445,0.372197,0.018997,-0.075440) * L1_15 + vec4(-0.074182,0.046963,-0.386270,1.063388)));\nvec4 L2_13 = sin((mat4(0.033623,0.165194,-0.012112,-0.112971,0.138348,0.121017,-0.352723,0.045604,0.015491,-0.189862,0.019086,-0.170459,0.034437,0.237931,0.048899,0.375153) * L1_0 + mat4(-0.090719,0.170332,0.677425,0.038061,-0.459265,0.123694,0.024302,-0.320591,-0.148799,0.320924,0.137972,0.018519,0.001438,0.023558,0.167479,-0.804021) * L1_1 + mat4(-0.337456,0.067549,-0.509145,0.056492,0.097984,0.140843,0.195483,0.091567,-0.053536,-0.127911,-0.428353,-0.359755,-0.192958,-0.321373,-0.263139,-0.118654) * L1_2 + mat4(0.186293,0.195655,-0.023243,0.239377,0.357953,0.433857,0.226147,-0.316736,-0.015802,-0.316704,0.121642,-0.119686,0.193230,0.046713,-0.029907,-0.156976) * L1_3 + mat4(0.137075,0.274526,-0.002379,0.138182,-0.082337,0.029207,0.163593,0.208241,-0.129372,-0.156050,0.036929,0.214084,0.486249,-0.063105,-0.036824,0.397771) * L1_4 + mat4(0.058255,-0.087420,0.227616,0.022793,0.178082,0.313766,0.086796,0.379744,-0.303653,0.202213,0.206171,0.052223,0.001728,0.106231,0.082582,-0.328337) * L1_5 + mat4(-0.068802,0.099053,-0.098103,0.215485,0.359099,0.426655,0.002014,0.055705,-0.138949,0.043528,0.197994,0.255645,-0.097413,0.018913,-0.356180,0.584638) * L1_6 + mat4(0.293685,0.331108,-0.186439,-0.138687,0.283911,-0.243817,0.092312,-0.272315,0.480832,-0.013967,-0.183660,-0.286722,-0.210806,-0.157865,0.121527,-0.168048) * L1_7 + mat4(-0.186437,-0.086342,0.168640,0.124240,-0.136800,-0.095096,-0.003906,-0.246243,-0.009622,-0.306890,0.133902,-0.222822,-0.167731,-0.300896,-0.110328,-0.076248) * L1_8 + mat4(-0.187000,0.114792,-0.155925,-0.402595,0.427542,0.492434,0.197629,0.396142,0.111838,-0.137995,0.065702,0.163540,-0.326342,-0.138814,0.708570,-0.773455) * L1_9 + mat4(0.036232,0.048530,-0.144951,0.227759,0.177454,0.145822,-0.079139,-0.046198,0.226513,-0.343848,-0.277420,-0.214801,0.179487,0.232615,-0.103168,0.105810) * L1_10 + mat4(-0.232830,0.230377,-0.263142,-0.204077,0.037497,0.302655,0.203527,-0.107873,-0.100122,0.205853,0.072641,-0.160559,0.293777,-0.035875,-0.040294,-0.159623) * L1_11 + mat4(-0.054702,0.101893,0.441639,0.127202,-0.089836,-0.061360,0.140355,0.039577,0.023839,0.195204,-0.129459,-0.036739,-0.263659,-0.455167,0.346754,-0.338470) * L1_12 + mat4(0.189909,-0.429658,0.079351,-0.038701,-0.686411,-0.129777,-0.338280,0.488755,-0.386478,-0.114209,0.088203,0.194857,-0.109343,0.535321,0.172485,0.273173) * L1_13 + mat4(0.104231,0.006602,-0.493932,0.152421,-0.004945,0.038693,-0.289158,-0.259188,0.238126,0.039965,0.269444,0.135345,0.591079,-0.061756,-0.130544,-0.159482) * L1_14 + mat4(0.291566,-0.167477,0.008312,0.374170,-0.318471,-0.037197,0.055984,0.249173,0.186082,0.219537,-0.148890,-0.758275,0.022326,0.128499,-0.468631,-0.094344) * L1_15 + vec4(0.092629,-0.217709,-0.271320,0.133472)));\nvec4 L2_14 = sin((mat4(0.219931,0.254805,-0.329837,-0.302083,-0.361060,0.020754,0.016705,0.576500,0.163389,0.318452,0.082958,-0.258348,0.293482,-0.111647,0.352213,-0.008125) * L1_0 + mat4(0.316967,-0.065853,-0.056676,0.477752,-0.358445,-0.105685,-0.453092,-0.071722,-0.493015,-0.156509,0.201770,0.088824,0.124488,0.168992,-0.156223,0.206991) * L1_1 + mat4(-0.228527,0.107716,-0.042747,0.087487,-0.325614,0.074652,-0.259381,-0.497926,0.193863,0.336666,-0.118330,0.464180,0.209919,0.096452,-0.195484,0.737205) * L1_2 + mat4(-0.112404,0.720547,-0.379697,0.024215,-0.261966,0.429871,0.429795,-0.324247,0.545122,-0.267512,0.005269,0.215654,0.167541,-0.167509,-0.458005,0.211480) * L1_3 + mat4(0.135107,0.193067,0.129029,-0.096742,-0.359169,0.032265,-0.297865,0.225762,-0.105872,0.093933,-0.044523,0.097917,-0.114589,0.266657,0.222439,-0.101579) * L1_4 + mat4(-0.021931,0.623523,0.422335,0.268574,-0.010589,-0.005080,0.516203,0.049497,0.384944,0.071064,0.350935,0.061323,-0.207486,0.238914,-0.059333,-0.272066) * L1_5 + mat4(-0.667682,0.108453,0.476888,-0.013206,-0.603677,0.079328,0.048408,0.776169,0.320503,-0.058291,0.106755,0.117261,-0.195293,0.334412,0.275690,-0.177487) * L1_6 + mat4(0.182594,-0.220904,0.283833,-0.255413,0.334131,-0.084744,0.110787,-0.029427,-0.321984,0.137454,-0.210995,0.192676,-0.230709,0.254342,0.005228,-0.220057) * L1_7 + mat4(0.002362,0.019067,0.541087,-0.207450,-0.325754,0.253762,-0.027205,0.128556,-0.130411,0.042984,-0.078494,0.104054,-0.499833,-0.128183,0.099780,-0.233020) * L1_8 + mat4(-0.177816,-0.176559,0.170553,-0.347527,0.290086,-0.026358,-0.109369,-0.025234,-0.171453,0.153097,-0.238794,0.161843,-0.241842,0.324181,-0.130807,0.420746) * L1_9 + mat4(0.001788,0.059996,-0.033130,-0.089583,0.143734,-0.166027,0.302848,-0.285027,-0.088985,0.083524,-0.197831,0.058519,0.061926,0.257309,0.161210,-0.103310) * L1_10 + mat4(0.256508,0.074912,0.151214,0.204710,0.273959,-0.320958,-0.028577,0.105808,-0.142196,0.189976,-0.032951,0.183565,0.149810,-0.117884,-0.149218,-0.026748) * L1_11 + mat4(-0.517610,-0.018071,-0.101054,-0.208210,0.136427,-0.006779,0.391602,-0.266386,0.090168,0.039934,-0.318480,-0.097805,-0.301118,-0.052915,-0.117115,-0.066712) * L1_12 + mat4(-0.261955,0.248822,0.387043,-0.308348,0.347738,-0.113558,0.155317,0.310161,-0.061802,0.329832,0.250288,-0.277594,-0.369034,0.305595,0.280394,-0.525757) * L1_13 + mat4(0.368377,0.325740,-0.018532,0.283228,0.041904,0.308908,-0.138608,-0.210112,-0.080519,0.048094,-0.216831,0.313943,0.160371,-0.097977,-0.052687,0.150718) * L1_14 + mat4(-0.051325,0.179120,-0.108011,-0.054581,0.230517,0.272500,0.378706,-0.306814,-0.225084,-0.025061,0.110842,-0.167220,0.408499,0.029437,0.381499,0.156105) * L1_15 + vec4(0.091570,-0.694385,0.759971,0.188084)));\nvec4 L2_15 = sin((mat4(0.013945,-0.037588,0.172939,-0.124175,-0.212484,-0.001470,0.176651,0.151971,-0.314847,-0.032561,0.179824,0.095979,-0.217575,0.233908,0.186578,0.008070) * L1_0 + mat4(-0.044213,0.134315,-0.251570,0.055626,0.165319,-0.133685,0.007512,-0.006996,0.467773,-0.070129,-0.067439,0.285524,-0.001522,0.032283,-0.244621,-0.205465) * L1_1 + mat4(0.072376,-0.026118,-0.257998,-0.331884,-0.106885,-0.107614,-0.290310,-0.054737,-0.182136,0.293838,0.133789,0.556970,0.427661,-0.190628,-0.211328,0.087762) * L1_2 + mat4(-0.504109,0.125255,-0.230668,-0.207095,-0.355286,0.109200,-0.505839,-0.216069,-0.249316,0.330904,-0.045394,0.035701,0.168538,0.236606,0.259973,0.120742) * L1_3 + mat4(-0.102503,-0.342249,-0.033090,-0.270808,0.229398,-0.235690,-0.288878,-0.068379,-0.116611,-0.174684,0.160652,-0.018163,0.119540,-0.102828,0.126613,-0.375620) * L1_4 + mat4(-0.225348,-0.186876,-0.562697,-0.489732,-0.586373,0.172438,-0.208368,0.096032,-0.060412,0.374722,0.181731,0.183431,0.178730,0.052703,-0.150342,-0.022123) * L1_5 + mat4(0.128591,-0.213480,-0.128576,-0.090734,0.102693,-0.015399,0.017648,-0.542376,0.354298,0.035283,-0.307325,-0.016372,0.121116,0.278193,0.519154,0.252370) * L1_6 + mat4(-0.021081,0.086809,0.023722,-0.079375,-0.126732,0.154587,0.022143,-0.240380,0.446464,0.289333,0.097826,0.031943,0.087796,-0.086787,-0.034395,0.025159) * L1_7 + mat4(-0.006300,0.115117,0.129487,0.152094,-0.202446,0.044323,0.008254,-0.408871,-0.120209,0.124488,0.075856,0.031306,-0.570668,0.530417,0.213292,0.647880) * L1_8 + mat4(-0.042481,-0.043381,0.169464,0.299008,0.191563,0.094019,-0.114705,-0.165086,-0.227318,0.108391,0.219527,-0.054590,0.122025,-0.157344,0.115612,0.151430) * L1_9 + mat4(-0.153108,-0.440842,0.150352,0.277110,0.159024,0.098750,-0.318801,-0.114946,-0.133022,-0.026123,-0.241187,0.045588,0.029317,0.051087,0.200369,-0.167389) * L1_10 + mat4(0.364832,-0.278511,-0.179340,0.134836,-0.020924,0.093503,0.226243,0.294790,-0.013263,-0.083164,-0.464268,0.132052,0.210627,-0.048283,0.274556,-0.332586) * L1_11 + mat4(0.410496,0.111427,-0.263208,-0.052679,0.088044,-0.260455,-0.461303,0.143510,0.037830,0.269143,0.461019,0.174228,0.187747,0.194954,-0.502790,0.645149) * L1_12 + mat4(-0.144395,-0.063199,-0.158434,-0.414974,0.551670,-0.161873,-0.341060,-0.299349,0.000168,-0.284582,-0.280918,0.205439,-0.472565,0.505366,-0.002374,0.223796) * L1_13 + mat4(0.202151,-0.094167,0.398891,0.163770,0.170734,0.043556,0.332421,0.018975,0.383426,-0.100825,-0.342567,0.221825,-0.112413,-0.184824,0.167981,-0.058454) * L1_14 + mat4(-0.347536,-0.104051,0.095683,0.428533,0.004342,0.257286,-0.239567,-0.601737,-0.292474,0.337548,0.174355,0.209714,-0.140458,-0.070376,0.143729,0.425678) * L1_15 + vec4(0.907670,0.054541,0.197693,0.528471)));\nif(BlockIndex == 0)\n{\nvec4 L3_0 = sin((mat4(0.208186,-0.093340,-0.035042,-0.024864,0.070134,0.054724,-0.007995,-0.004282,0.191161,-0.097823,-0.216718,0.204088,-0.164099,0.050077,0.123616,-0.263004) * L2_0 + mat4(0.283700,0.215760,0.142549,0.052861,-0.218573,-0.158782,0.094905,0.128776,-0.132518,0.003114,-0.209900,-0.125898,-0.181770,0.096448,-0.049558,-0.612544) * L2_1 + mat4(0.086744,-0.157963,-0.090781,-0.098244,-0.443197,0.466186,0.377698,-0.159384,-0.291582,-0.204458,-0.190966,-0.040133,-0.063611,0.074569,0.050339,-0.014500) * L2_2 + mat4(-0.061817,0.114347,-0.053924,-0.071899,0.038061,-0.128467,0.268085,0.141626,0.105232,0.034758,-0.017485,-0.132064,0.126079,-0.085126,0.119795,-0.092557) * L2_3 + mat4(-0.048588,0.026090,0.064580,0.038035,-0.151884,-0.009749,-0.042810,-0.182879,0.126098,0.041812,-0.102577,-0.033953,0.046450,-0.308538,0.135196,-0.153088) * L2_4 + mat4(-0.108399,-0.239046,-0.009508,-0.261241,0.109245,-0.196767,0.063388,-0.109914,0.430009,-0.010779,0.076881,-0.196207,0.075535,-0.010259,-0.106008,-0.236361) * L2_5 + mat4(-0.113175,0.055892,-0.044711,-0.129864,0.055668,0.202084,-0.121332,0.186060,-0.023115,0.002982,0.014954,0.235476,-0.056277,-0.130300,0.030578,-0.018842) * L2_6 + mat4(-0.203639,0.420976,-0.207490,0.240769,-0.287800,-0.562954,-0.180472,0.039619,0.216516,0.274566,0.199077,-0.187594,0.143098,0.000683,0.152281,-0.015370) * L2_7 + mat4(-0.248433,0.076449,-0.068106,0.023887,-0.198387,-0.155991,-0.114279,0.015547,0.126236,0.087074,0.120554,0.093370,-0.015308,-0.255576,0.137593,0.044228) * L2_8 + mat4(-0.029408,0.146272,-0.195559,-0.065121,-0.079004,-0.076214,0.028110,0.055303,0.005053,0.011558,0.240379,-0.013832,-0.063099,0.185531,0.260192,-0.366207) * L2_9 + mat4(0.189839,-0.035113,0.072567,0.111343,-0.132986,0.196833,-0.243532,-0.093263,-0.213671,-0.205099,-0.073423,0.041631,-0.105367,0.067173,-0.195280,-0.126393) * L2_10 + mat4(-0.000744,-0.158829,-0.081484,-0.259994,-0.063448,0.310198,0.236438,0.007256,0.007673,0.218933,-0.005543,0.010890,0.066755,-0.425466,-0.003306,-0.203925) * L2_11 + mat4(-0.167105,0.122579,-0.144243,-0.003306,0.093302,-0.271141,-0.377122,-0.244590,0.216627,0.021075,0.238866,-0.169409,-0.011797,0.041488,-0.161199,0.204349) * L2_12 + mat4(0.080557,-0.112894,-0.277821,-0.001812,0.117860,-0.344246,0.037229,-0.097996,0.119863,0.230682,-0.000533,-0.012364,0.221753,-0.139317,0.034640,0.264111) * L2_13 + mat4(-0.049532,0.123050,-0.159710,0.092038,-0.003471,-0.433093,0.242533,0.107497,0.236838,0.216985,-0.034368,-0.235917,-0.068073,-0.229352,0.110425,-0.052435) * L2_14 + mat4(0.047785,0.130763,0.030092,-0.096283,-0.327585,0.102529,-0.102417,0.078627,0.005535,-0.011166,-0.067501,0.235722,-0.163520,-0.023407,-0.195988,0.078977) * L2_15 + vec4(-0.208984,0.329128,-0.127720,0.153183)));\n    return L3_0;\n}\nelse if(BlockIndex == 1)\n{\nvec4 L3_1 = sin((mat4(0.071825,0.012333,-0.099651,0.021390,-0.128473,0.102985,0.102167,-0.019490,-0.063953,0.205425,-0.022910,-0.167356,-0.062431,0.047805,-0.015011,-0.064023) * L2_0 + mat4(-0.301506,-0.064869,-0.115432,-0.322071,0.068674,-0.011395,0.181178,0.460062,0.032672,0.043937,0.327441,-0.086035,0.016659,-0.288084,0.221320,-0.109267) * L2_1 + mat4(-0.386632,-0.193176,-0.150313,0.375617,0.313370,0.154169,0.125274,-0.029478,0.028172,-0.070901,-0.100543,-0.000785,-0.106016,-0.055131,0.048347,-0.070646) * L2_2 + mat4(0.447958,0.077021,0.080614,0.145807,-0.064808,0.081719,-0.208135,0.253862,0.086400,0.079522,-0.004573,0.366743,0.117743,-0.166978,0.167483,0.307285) * L2_3 + mat4(0.055791,0.206844,0.032023,0.136281,-0.137428,0.401990,0.041692,0.017414,-0.035521,0.047070,-0.047683,-0.191713,0.180704,0.024971,0.273182,0.109435) * L2_4 + mat4(0.042973,0.204006,0.040270,0.088643,0.113606,0.215705,0.139214,0.018039,-0.129421,-0.208404,0.053690,0.272189,-0.497877,-0.355054,0.107096,-0.001002) * L2_5 + mat4(-0.089385,-0.413568,-0.158084,0.065216,0.090703,0.069984,0.050278,0.022357,0.347031,0.119709,0.193306,0.102682,-0.154351,0.301864,0.022427,-0.013945) * L2_6 + mat4(0.312020,-0.032159,0.190165,0.326861,0.314047,0.244874,-0.162914,0.297489,-0.266006,-0.291571,-0.631476,-0.266970,0.168991,-0.151763,-0.300687,0.005864) * L2_7 + mat4(-0.101505,0.158791,-0.174498,0.037348,0.179571,-0.062785,0.031347,-0.286809,-0.192877,0.197758,0.174644,-0.034316,-0.065919,0.131329,-0.110143,-0.299925) * L2_8 + mat4(0.047521,0.049068,-0.079543,0.355010,0.213545,-0.288582,0.126821,0.025870,0.128217,-0.003083,0.184346,-0.031364,-0.128161,-0.118798,0.103572,-0.096192) * L2_9 + mat4(-0.300683,0.177410,0.091756,0.098030,0.148306,-0.036029,-0.228551,0.241088,-0.058192,-0.039021,0.284680,-0.004545,0.252347,-0.105920,0.007140,-0.054838) * L2_10 + mat4(-0.519384,-0.146727,-0.375637,-0.236415,-0.316492,0.194322,0.083176,0.382557,0.081721,-0.006117,-0.157863,-0.027378,0.061740,-0.300000,-0.242124,-0.179674) * L2_11 + mat4(-0.406964,-0.101153,0.026307,0.249495,0.241798,0.099671,0.076273,0.097903,0.325426,0.052895,-0.012171,0.025691,0.162078,0.245235,0.358665,0.314555) * L2_12 + mat4(0.007689,-0.093402,0.091315,0.046423,0.203452,0.153046,0.280472,0.114369,0.051704,0.132544,-0.010033,0.113258,0.018901,-0.040777,-0.039026,0.107550) * L2_13 + mat4(-0.148678,-0.108186,0.124593,0.021641,-0.071329,-0.118859,0.082961,-0.002133,-0.054315,0.157170,0.117199,0.004761,-0.094915,-0.241700,-0.106742,-0.113169) * L2_14 + mat4(0.224975,0.227829,-0.010433,0.196603,0.082132,-0.300896,-0.141607,0.281654,-0.039642,0.124537,-0.181964,-0.045486,0.214878,0.125775,-0.313342,-0.070887) * L2_15 + vec4(-0.534099,-0.402043,-0.349792,0.451931)));\n    return L3_1;\n}\nelse if(BlockIndex == 2)\n{\nvec4 L3_2 = sin((mat4(0.093877,0.091926,0.169172,-0.054637,0.146010,0.003199,0.204714,-0.011641,0.040825,0.245436,0.079164,0.127557,-0.258298,0.170271,-0.026875,-0.230479) * L2_0 + mat4(-0.206465,-0.030862,-0.045786,-0.176476,-0.152090,0.032583,0.191094,0.025635,0.056955,-0.117672,-0.018259,0.034714,0.087320,0.147578,0.095968,-0.183831) * L2_1 + mat4(-0.055255,-0.125070,-0.106863,-0.392101,-0.209277,-0.033519,0.162075,-0.159073,-0.028674,-0.160603,-0.156223,0.142976,-0.108297,-0.019754,-0.048884,0.039730) * L2_2 + mat4(-0.293102,0.045874,-0.230183,-0.271827,0.193640,0.092374,0.006578,0.135302,0.460088,0.035361,-0.033387,-0.036127,-0.007648,0.034223,0.000227,-0.172593) * L2_3 + mat4(-0.082856,-0.358802,0.174016,-0.009654,0.168977,0.114970,-0.037417,0.079610,-0.207704,0.018305,0.033551,0.023098,-0.109233,0.361880,0.031150,0.079293) * L2_4 + mat4(0.038390,-0.161189,0.291113,0.171465,0.017136,0.019708,-0.252947,0.036437,0.104102,0.126405,0.070059,-0.139209,0.037099,0.143351,-0.379391,-0.033100) * L2_5 + mat4(0.208407,0.038886,-0.133697,-0.041335,0.144734,0.040700,0.152047,-0.001880,0.152499,-0.103859,-0.446887,0.063038,0.149635,-0.153795,-0.000351,-0.009486) * L2_6 + mat4(-0.174855,-0.236458,0.030948,-0.061452,0.332152,0.087649,0.169075,0.032091,-0.029313,-0.120991,-0.400379,-0.052798,-0.089368,-0.010501,-0.230050,0.202845) * L2_7 + mat4(-0.056077,0.209845,0.189314,-0.066067,-0.108863,0.022885,0.095125,-0.089030,-0.048998,-0.234211,0.047018,0.033956,-0.130631,0.102324,0.125444,0.182270) * L2_8 + mat4(0.068309,0.179160,0.114447,-0.049387,-0.292987,-0.201678,0.138986,0.177332,0.060073,0.034820,-0.039409,-0.125430,0.153557,-0.210877,0.103612,0.116307) * L2_9 + mat4(0.143157,0.019190,-0.034715,0.066185,0.045382,0.248271,0.084793,-0.128959,0.143459,0.003596,0.105357,-0.249098,0.050924,0.204481,-0.243264,-0.095474) * L2_10 + mat4(-0.017304,-0.122751,-0.096569,0.199436,-0.062435,0.252985,0.128294,0.182350,0.051878,0.128734,-0.017962,-0.010533,0.056691,-0.006830,-0.144802,0.005479) * L2_11 + mat4(0.062282,-0.074748,-0.402822,-0.008141,-0.207946,-0.119813,0.211058,0.042892,0.219521,0.106073,0.185215,-0.100695,-0.121477,-0.093287,-0.203803,-0.288464) * L2_12 + mat4(-0.218829,-0.078643,0.026625,0.200787,-0.189559,-0.004969,-0.169106,0.125598,-0.183595,0.066876,-0.139967,-0.082745,-0.007472,0.229582,-0.070922,0.091444) * L2_13 + mat4(0.098946,-0.204469,-0.042221,-0.093244,0.094233,-0.391063,-0.029312,-0.160969,0.181932,-0.047717,-0.140350,-0.028345,-0.082952,0.179532,0.181436,-0.251242) * L2_14 + mat4(-0.027478,0.002094,-0.217603,-0.058802,0.073405,-0.308345,-0.239378,0.183078,0.058458,0.095214,-0.114877,0.207782,-0.253905,0.103548,0.212482,0.061262) * L2_15 + vec4(0.569106,-0.275418,-0.181169,-0.002569)));\n    return L3_2;\n}\nelse if(BlockIndex == 3)\n{\nvec4 L3_3 = sin((mat4(-0.139804,-0.216212,-0.154788,0.084155,-0.153753,0.063013,-0.166395,-0.167149,0.230512,0.130981,0.080924,0.034000,0.016075,-0.072099,-0.171724,0.135418) * L2_0 + mat4(-0.320190,-0.003469,-0.249308,-0.154224,-0.068145,0.121116,0.021715,0.047177,-0.131616,0.083334,0.216935,0.070835,0.041504,0.160819,-0.077447,-0.118017) * L2_1 + mat4(-0.018836,-0.088997,-0.163120,-0.152546,-0.025302,0.243715,0.033935,0.211549,0.222098,0.153276,-0.036936,0.172570,0.346876,0.202560,-0.352693,-0.044430) * L2_2 + mat4(-0.036277,-0.380812,-0.103364,-0.148194,0.025002,0.237687,-0.075561,-0.050179,0.019396,0.051292,-0.055548,0.098214,0.139301,-0.149028,0.219882,0.026945) * L2_3 + mat4(-0.120317,-0.003893,0.150328,0.004635,0.259167,0.098427,0.253815,0.050330,-0.037520,-0.280935,-0.032806,0.004423,0.122618,-0.136678,-0.015906,0.041411) * L2_4 + mat4(-0.237355,-0.190303,-0.075092,-0.064248,-0.092845,0.131275,0.153092,-0.034307,-0.206323,0.141331,-0.108422,0.019270,-0.019906,0.102179,0.072384,0.044753) * L2_5 + mat4(-0.179238,0.006529,0.219800,0.020791,-0.040375,0.049746,-0.035121,-0.244300,-0.143804,0.305103,0.216559,0.068120,0.163330,0.142161,0.002209,0.017625) * L2_6 + mat4(0.013750,0.294513,0.160424,0.119519,0.316074,-0.135423,-0.084964,-0.182344,-0.156257,-0.451351,0.081471,-0.068340,-0.027114,0.172716,0.308386,0.044979) * L2_7 + mat4(-0.026970,-0.071276,-0.050368,-0.091249,0.006384,0.142925,0.262338,0.226423,-0.031643,0.084902,0.133138,-0.225661,0.051352,0.138627,0.228307,0.183232) * L2_8 + mat4(0.135908,-0.044907,0.074471,0.029918,-0.044614,0.057384,0.185559,-0.079886,0.011528,-0.209347,0.230496,-0.141646,-0.224433,-0.055585,-0.349675,0.126990) * L2_9 + mat4(0.213062,0.052408,-0.257612,0.002371,0.136744,0.054831,0.125258,0.080804,-0.066331,-0.004964,0.125798,0.057274,0.026197,0.007539,-0.115111,-0.206600) * L2_10 + mat4(-0.068913,-0.204384,-0.055238,-0.362567,-0.190622,-0.017273,-0.320778,0.177373,0.128447,-0.130360,0.133447,0.118950,0.087550,-0.361842,0.143746,0.110824) * L2_11 + mat4(0.048565,-0.006442,0.108152,0.135105,-0.393902,0.090016,-0.036921,0.144651,0.002051,-0.039510,-0.003655,0.095851,-0.050573,-0.026940,-0.020649,0.037880) * L2_12 + mat4(0.053922,0.135215,0.132673,-0.086075,-0.318751,0.245931,0.356336,0.024726,-0.192663,0.567593,0.418604,-0.051657,-0.118298,-0.060706,-0.135067,-0.016457) * L2_13 + mat4(0.012932,0.147114,-0.127000,0.059912,0.107521,0.062857,0.117011,-0.132989,0.025379,0.059580,0.104236,0.041751,0.103038,0.004856,0.239243,0.037222) * L2_14 + mat4(0.113561,0.016878,0.060134,-0.156130,-0.033559,-0.116786,-0.009894,0.214643,0.264783,-0.255683,0.040039,-0.026305,-0.043118,0.145961,-0.048488,0.091848) * L2_15 + vec4(0.324755,-0.506015,0.148104,-0.171770)));\n    return L3_3;\n}\nelse if(BlockIndex == 4)\n{\nvec4 L3_4 = sin((mat4(0.007329,-0.097163,0.004440,-0.181073,-0.031064,-0.010230,-0.288809,-0.114571,-0.232924,-0.485134,0.180844,-0.059204,-0.013561,-0.103433,0.137933,-0.163198) * L2_0 + mat4(0.200911,-0.015740,-0.071367,0.119833,0.051326,0.262915,0.018132,-0.024023,0.076360,-0.044422,-0.076802,-0.004179,-0.128883,0.113664,-0.073614,0.037484) * L2_1 + mat4(0.371038,-0.169570,-0.075783,0.002111,-0.417147,-0.043319,0.355952,0.052224,-0.015230,0.052123,0.207221,-0.227155,0.061967,-0.029670,-0.059366,0.132698) * L2_2 + mat4(0.015255,0.153122,-0.325672,-0.031559,0.061757,0.070980,0.128729,-0.343298,0.254706,0.018187,-0.109620,-0.013261,0.086252,0.068400,0.328856,-0.093993) * L2_3 + mat4(0.035181,0.240273,0.062071,0.072063,-0.020096,-0.116712,0.017062,0.166688,-0.025303,-0.065882,-0.086901,-0.113816,-0.011567,-0.114053,0.194137,0.017666) * L2_4 + mat4(0.178602,-0.196250,0.101565,0.321040,-0.159216,-0.163302,0.009382,0.078501,0.088109,0.294015,0.241164,0.125451,-0.147184,0.097154,0.145620,0.084421) * L2_5 + mat4(-0.012488,-0.086836,0.001818,0.020751,-0.093920,0.424396,-0.212714,-0.186068,-0.093089,-0.008355,-0.081931,0.309669,-0.183058,0.111051,0.191452,0.119013) * L2_6 + mat4(0.291047,0.015211,0.237217,-0.158986,-0.061800,0.159603,0.081302,0.020919,-0.136907,-0.000482,-0.111995,-0.217464,0.000792,0.160348,0.037143,0.023987) * L2_7 + mat4(0.128184,0.120779,0.024303,0.069810,-0.016636,0.012454,-0.208316,0.034751,0.161869,-0.268762,-0.158913,-0.105521,-0.015774,-0.059464,0.122383,0.043433) * L2_8 + mat4(-0.157869,0.147589,0.078432,0.185564,0.163463,-0.086850,-0.042305,-0.346724,0.073068,-0.290473,0.043710,0.213508,0.248811,0.113433,-0.219665,-0.203048) * L2_9 + mat4(-0.080349,-0.132277,-0.119586,-0.045872,0.120055,-0.059612,-0.012333,0.140852,-0.184053,0.160312,0.009848,-0.072964,0.205972,-0.211766,-0.137757,-0.122839) * L2_10 + mat4(-0.085108,0.365452,-0.071077,0.131487,-0.028466,0.020622,-0.230900,-0.311013,0.129224,0.035691,-0.045954,-0.007353,0.157623,-0.217046,-0.009554,0.103660) * L2_11 + mat4(0.024642,0.050339,-0.238955,0.068703,-0.095179,-0.122464,-0.057430,-0.132716,0.148592,-0.071685,0.047141,-0.039285,-0.277181,0.116041,-0.129901,0.108473) * L2_12 + mat4(-0.095033,-0.094612,0.035080,0.038744,-0.116324,-0.078268,0.413455,-0.026974,0.063884,-0.006569,-0.095508,-0.197808,0.068468,0.013028,-0.003233,0.114799) * L2_13 + mat4(0.192155,-0.132934,-0.113892,-0.070284,-0.132091,-0.040958,0.198664,-0.096870,0.184766,-0.179485,0.196784,0.010466,-0.077743,-0.104330,-0.182172,0.057171) * L2_14 + mat4(-0.113657,-0.130328,0.096004,-0.057957,-0.152119,-0.163589,0.175502,0.040160,-0.057764,0.401490,0.044890,0.181402,0.135048,0.079082,-0.009198,0.143927) * L2_15 + vec4(0.343298,0.374396,-0.204895,0.005217)));\n    return L3_4;\n}\nelse if(BlockIndex == 5)\n{\nvec4 L3_5 = sin((mat4(-0.196756,0.099772,-0.121354,-0.030159,-0.260757,-0.356733,-0.053284,-0.017192,-0.025250,-0.015674,-0.394154,-0.297519,0.178830,-0.100427,0.093745,0.019735) * L2_0 + mat4(-0.249535,-0.106720,0.071817,-0.119827,0.063273,0.324521,0.226252,0.152072,0.050951,-0.067530,-0.052293,0.023926,0.309546,0.028740,-0.108145,-0.289435) * L2_1 + mat4(0.297889,-0.093155,-0.393970,-0.509839,0.128782,0.193767,0.258224,-0.008037,-0.035238,-0.067830,0.251804,-0.229943,-0.079104,0.110068,-0.227113,0.097678) * L2_2 + mat4(0.064474,0.154442,0.301767,0.129403,0.086363,-0.051684,0.185353,-0.217510,-0.072568,-0.391379,0.014044,0.196950,-0.006752,-0.026924,0.207228,0.020244) * L2_3 + mat4(0.000715,-0.154634,0.038837,0.028033,0.120000,-0.079924,0.059765,0.120724,0.044782,-0.216164,-0.334158,0.186889,-0.460023,-0.323240,-0.027709,-0.009130) * L2_4 + mat4(-0.177938,-0.114589,0.164304,0.140230,-0.011287,0.125817,0.134276,0.084186,-0.061687,0.064707,-0.198106,-0.030211,-0.080044,0.033059,-0.031647,0.016977) * L2_5 + mat4(0.177756,0.083044,0.027497,-0.091087,-0.115562,0.108544,0.086032,0.080067,-0.035395,0.115819,-0.124650,-0.166277,0.096544,-0.100150,0.154511,-0.169168) * L2_6 + mat4(0.178052,0.020556,0.091542,0.214143,0.078139,-0.204102,-0.136894,-0.015071,-0.132991,-0.136745,0.077256,-0.022243,0.042240,-0.027068,0.023373,0.183183) * L2_7 + mat4(0.078894,0.043984,0.276273,-0.025143,0.006442,0.018855,-0.004481,-0.026438,-0.233238,0.162199,-0.374015,-0.136606,0.099068,0.126820,0.289458,-0.066744) * L2_8 + mat4(-0.051356,0.191046,-0.343705,0.071290,0.087710,-0.125523,0.381658,0.067425,0.136928,0.039034,0.130035,0.112732,-0.063530,0.063313,0.105852,-0.144247) * L2_9 + mat4(-0.051026,-0.000984,-0.177332,0.142766,0.011165,0.136625,0.057085,-0.240141,-0.001315,0.176930,0.070211,-0.016126,-0.113675,0.128502,-0.286555,0.031516) * L2_10 + mat4(-0.010618,0.115969,0.141565,-0.202772,0.087683,-0.111185,-0.032436,0.111472,-0.021027,0.042054,-0.181381,-0.127608,0.029360,0.084638,-0.338415,-0.049186) * L2_11 + mat4(0.178780,0.126468,0.104153,-0.093882,-0.036661,-0.117328,-0.062494,0.032944,0.140927,0.080718,0.341396,-0.136816,0.075468,-0.272071,0.039262,-0.125294) * L2_12 + mat4(0.363931,0.037831,-0.046567,-0.128676,-0.220295,-0.043811,0.218839,-0.084406,-0.201381,0.295046,0.064681,-0.292069,0.004177,0.128301,0.058848,0.011409) * L2_13 + mat4(-0.085815,0.083521,0.062801,-0.117969,0.110510,0.213351,0.094908,-0.002403,-0.100066,0.062538,0.062725,0.092933,-0.038209,0.004112,-0.158853,0.000163) * L2_14 + mat4(-0.101438,0.113245,-0.119096,0.248553,-0.300144,0.094284,-0.113001,-0.104703,-0.184616,0.061872,-0.247585,-0.196945,-0.213953,-0.011911,0.031493,-0.020270) * L2_15 + vec4(-0.101304,0.274061,-0.084703,-0.161950)));\n    return L3_5;\n}\nelse if(BlockIndex == 6)\n{\nvec4 L3_6 = sin((mat4(-0.135774,-0.119451,0.086384,-0.029564,0.198589,0.111393,0.182761,-0.015770,-0.037966,0.075732,0.198230,0.006111,0.307551,-0.131689,-0.159588,-0.064317) * L2_0 + mat4(-0.013148,0.056639,-0.129722,0.458303,0.088492,0.362251,-0.211294,-0.143281,-0.032499,-0.200126,0.097084,-0.113519,-0.059620,0.198746,0.004882,-0.032105) * L2_1 + mat4(-0.166387,0.059564,0.102087,0.050646,0.067731,0.275550,0.160250,-0.390908,0.171814,-0.106161,-0.046878,-0.040707,0.092378,0.075042,-0.054260,-0.030137) * L2_2 + mat4(0.011842,-0.213216,0.164117,0.067942,0.144000,0.157247,-0.174566,0.061446,0.071356,-0.080471,0.456228,-0.162633,-0.185307,0.119071,0.185309,0.212702) * L2_3 + mat4(0.056977,0.336161,0.044214,0.083095,0.115576,-0.145765,-0.271179,-0.112677,0.335469,0.200867,-0.146283,-0.024551,0.157416,0.146185,-0.119450,-0.367404) * L2_4 + mat4(0.280166,-0.120483,-0.012605,0.001667,-0.059770,0.051495,-0.118263,-0.097766,-0.376707,0.039869,-0.018098,0.201351,-0.189186,-0.430755,0.058404,-0.172894) * L2_5 + mat4(0.144936,0.292510,0.308688,-0.176671,-0.248456,-0.044275,-0.114862,0.474861,-0.202055,-0.178991,0.006779,0.334531,0.096393,-0.328001,-0.160509,0.086178) * L2_6 + mat4(-0.122048,-0.041063,-0.229740,-0.491314,-0.020335,0.158050,-0.032219,0.016808,-0.029184,-0.122719,0.253805,0.175033,0.003822,0.044139,0.106222,-0.040829) * L2_7 + mat4(0.014872,0.098493,-0.087258,-0.019315,0.054233,0.467056,-0.119709,-0.018134,0.007253,-0.457230,0.253721,-0.088213,0.035226,0.084861,-0.071137,0.083965) * L2_8 + mat4(0.229580,0.316151,0.196348,0.146923,-0.204167,0.308332,0.098625,0.129147,-0.013474,-0.204824,-0.058928,-0.018478,0.136580,-0.054298,-0.294231,-0.219438) * L2_9 + mat4(-0.046030,-0.063689,0.131136,0.040583,0.102532,-0.566173,-0.010320,-0.226786,0.066633,-0.296012,-0.266065,0.273541,-0.116339,-0.035263,-0.361001,-0.175518) * L2_10 + mat4(-0.086278,-0.007484,0.127030,0.199326,-0.259743,0.181557,-0.149764,-0.001746,-0.104412,-0.257988,0.077335,-0.005483,-0.149676,-0.189112,0.022958,0.024479) * L2_11 + mat4(0.083027,-0.149590,0.076478,-0.042436,0.105228,-0.138647,0.057873,0.193910,0.051583,0.137753,0.076840,-0.047908,-0.268264,0.108018,0.057443,-0.093357) * L2_12 + mat4(-0.038523,-0.071143,0.142845,-0.094820,-0.056420,0.392166,-0.123422,0.048552,-0.128642,-0.605662,-0.112999,0.073274,0.014786,0.185012,0.140942,-0.022678) * L2_13 + mat4(0.000313,0.089373,0.247029,0.118129,0.021773,-0.272958,-0.144245,0.084895,-0.210210,0.027288,-0.187983,0.163993,-0.061260,-0.035979,0.122559,0.087031) * L2_14 + mat4(0.052055,-0.255171,-0.089697,-0.174656,0.043742,0.303310,0.183014,0.190303,0.161442,0.522259,-0.009770,-0.120123,-0.228330,-0.287086,0.212181,0.020314) * L2_15 + vec4(-0.306837,1.221379,0.525131,-0.303931)));\n    return L3_6;\n}\nelse\n{\nvec4 L3_7 = sin((mat4(-0.016501,0.051261,0.060908,0.013292,0.085128,0.298267,-0.148945,0.141288,-0.046030,-0.177776,0.206404,-0.115457,0.230070,0.100032,0.042138,-0.047113) * L2_0 + mat4(0.029479,-0.328907,-0.096919,0.175155,0.095538,-0.122242,0.070966,0.243415,-0.098931,0.017417,-0.073173,0.097323,0.088062,-0.364642,0.043213,0.063007) * L2_1 + mat4(0.006069,-0.283652,-0.047404,0.002484,0.035109,0.302602,-0.356909,0.210263,0.062591,0.199215,0.030865,0.191767,0.097086,0.073098,0.104248,-0.215332) * L2_2 + mat4(0.032978,0.137582,0.001606,-0.009655,0.080158,0.038109,0.111122,-0.050287,0.017320,-0.097548,-0.315356,-0.003839,-0.096581,-0.246979,0.059847,0.200609) * L2_3 + mat4(0.018180,0.306402,0.165533,0.075642,-0.049926,-0.088486,-0.035612,0.033033,-0.181797,-0.012642,0.225681,0.141319,-0.117391,-0.259124,0.022701,-0.023472) * L2_4 + mat4(-0.081538,0.139298,-0.191634,-0.200236,-0.027552,-0.251621,0.123363,-0.093059,0.036073,0.321610,-0.020561,-0.062422,0.303115,-0.550867,0.351394,0.313416) * L2_5 + mat4(-0.116049,0.025490,0.164132,-0.173703,0.115699,0.074549,-0.240268,-0.027937,0.177120,0.213394,-0.111859,0.166723,-0.232197,0.339860,-0.129789,0.143121) * L2_6 + mat4(0.241968,-0.186731,-0.014303,-0.064519,-0.274131,0.241194,0.156297,-0.212777,-0.321427,-0.511864,0.214146,-0.027115,-0.046021,0.068931,-0.027493,0.056596) * L2_7 + mat4(0.129873,0.085587,-0.060611,0.029654,0.029976,0.221523,0.075340,-0.189198,-0.142435,0.023815,0.209501,-0.043509,0.112373,-0.148418,0.210870,0.018628) * L2_8 + mat4(0.238988,0.111439,0.028668,-0.169126,0.141929,0.050083,-0.166237,-0.268449,-0.025813,0.107356,0.159951,0.094102,0.222960,0.030809,0.040872,0.002404) * L2_9 + mat4(-0.099831,-0.108412,-0.065420,-0.064669,-0.096494,-0.043832,0.063888,-0.018530,-0.089733,-0.143148,-0.100731,0.099548,0.049647,-0.031775,-0.003703,0.087785) * L2_10 + mat4(-0.260010,0.466166,-0.374143,-0.200514,-0.286095,0.127049,-0.080010,-0.093462,0.040699,0.004501,-0.053754,0.149936,-0.082569,0.078959,-0.274519,-0.084204) * L2_11 + mat4(-0.032509,0.021425,-0.105678,-0.104854,-0.004983,-0.129218,0.129688,0.177446,0.014187,-0.171684,-0.181769,-0.103089,0.168489,0.083225,-0.087339,0.077146) * L2_12 + mat4(-0.025264,-0.181479,-0.113729,0.150187,0.211835,0.461516,-0.195638,-0.172235,-0.126347,-0.302755,-0.107999,-0.053761,-0.160485,-0.087751,-0.082598,-0.021325) * L2_13 + mat4(-0.003126,-0.048788,-0.241461,0.125587,0.057319,0.262459,0.031640,0.222781,-0.039011,-0.045528,-0.026854,-0.165731,0.100473,0.000988,0.019006,-0.018228) * L2_14 + mat4(-0.119000,0.006597,-0.140217,-0.089943,-0.118058,0.118339,0.182392,0.061244,0.083752,-0.149113,-0.033120,0.071885,-0.172609,-0.060926,0.209207,0.140148) * L2_15 + vec4(0.468767,-0.510674,-0.331171,0.062408)));\n    return L3_7;\n}\n}\n\n#pragma optimize(on)\n\n#pragma optimize(off)\nvec4 Lightmap_Half_HPG(const vec3 uv_0, const vec3 uv_1, const int BlockIndex)\n{\nvec4 L0_0 = sin(20.000000 * (mat3x4(-0.135437,0.175335,-0.037203,0.393368,0.075809,0.156102,-0.882747,0.620394,0.077964,-0.091778,0.189230,0.119891) * uv_0 + mat3x4(0.095590,0.038956,0.018343,-0.043401,0.257205,-0.090515,-0.192575,0.195200,0.190756,0.251773,-0.724223,0.017533) * uv_1 + vec4(0.066143,-0.055214,-0.303167,0.262886)));\nvec4 L0_1 = sin(20.000000 * (mat3x4(0.350488,-0.359452,-0.287682,-0.459463,0.373711,-0.621243,0.256753,-0.315499,0.183359,-0.244316,-0.248316,-0.055140) * uv_0 + mat3x4(0.091928,0.097185,0.211824,0.199961,-0.014879,-0.037405,0.095865,-0.064793,0.326197,-0.113874,0.002512,-0.072609) * uv_1 + vec4(-0.022023,-0.286229,-0.038530,0.058641)));\nvec4 L0_2 = sin(20.000000 * (mat3x4(0.034157,0.053843,0.005591,0.329028,0.460839,0.416268,0.013206,0.162244,-0.181814,0.181380,-0.008145,0.486769) * uv_0 + mat3x4(0.063481,0.070110,0.088452,0.019104,0.066690,-0.015126,-0.095975,-0.158485,0.242089,-0.062418,-0.069063,-0.135708) * uv_1 + vec4(0.170477,0.209796,0.190352,0.256814)));\nvec4 L0_3 = sin(20.000000 * (mat3x4(0.017010,-0.123458,0.023429,-0.110280,-0.795084,-0.359094,-0.547488,-0.011487,0.533564,-0.046659,-0.087290,0.079145) * uv_0 + mat3x4(-0.190277,-0.067300,-0.267150,0.095151,-0.017624,0.132024,0.129375,-0.104242,-0.368069,-0.086474,-0.101677,-0.096816) * uv_1 + vec4(-0.284228,-0.003680,-0.183995,-0.070034)));\nvec4 L0_4 = sin(20.000000 * (mat3x4(-0.161422,-0.006673,0.266700,0.052865,0.409540,0.826395,0.201487,-0.203415,-0.591681,-0.230301,-0.197811,0.114327) * uv_0 + mat3x4(0.015638,0.207665,0.036902,-0.028895,-0.004092,0.163977,-0.042301,-0.134758,0.075671,0.419332,0.218819,-0.361746) * uv_1 + vec4(0.326089,0.326305,-0.128531,-0.011421)));\nvec4 L0_5 = sin(20.000000 * (mat3x4(-0.387549,-0.296831,0.429326,-0.102954,-0.499542,-0.067479,0.066221,0.749767,0.023750,-0.174282,-0.018143,-0.032650) * uv_0 + mat3x4(0.105251,-0.062738,-0.152061,0.063919,-0.136342,0.263734,-0.011737,0.192286,-0.175620,0.076963,0.100677,0.190018) * uv_1 + vec4(-0.229323,0.036357,-0.022156,0.238503)));\nvec4 L0_6 = sin(20.000000 * (mat3x4(0.252264,0.175200,0.055197,-0.165891,0.116723,-0.365256,-0.678344,-0.024617,0.549099,0.394746,0.135978,-0.420545) * uv_0 + mat3x4(-0.090120,-0.116031,-0.041765,0.048519,0.001458,0.105260,-0.064533,0.143000,-0.013608,-0.062355,-0.052052,0.143538) * uv_1 + vec4(-0.046046,-0.184384,-0.383875,-0.107337)));\nvec4 L0_7 = sin(20.000000 * (mat3x4(0.183708,0.209966,-0.001894,0.437314,-0.273028,-0.480794,-0.001564,0.230693,0.842470,-0.080731,0.004321,-0.150022) * uv_0 + mat3x4(-0.083025,0.049781,-0.001037,-0.137080,-0.179412,-0.234548,-0.164990,-0.115371,-0.148888,-0.178880,-0.004395,0.088028) * uv_1 + vec4(0.082729,-0.145967,0.237020,0.059807)));\nvec4 L1_0 = sin((mat4(-0.693141,0.198091,-0.252359,-0.001794,-0.270113,0.021719,-0.112029,0.128367,0.027852,-0.374848,0.386460,-1.155436,0.030905,1.004440,-0.075232,1.318025) * L0_0 + mat4(0.392756,-0.318331,0.135392,-0.167773,-0.535783,-0.900310,0.236000,-0.594835,-0.117446,-0.756461,-0.353998,0.186839,-0.056282,-0.776871,-0.794301,0.961523) * L0_1 + mat4(0.558550,0.895311,-0.082950,-0.361868,0.438233,0.470161,-0.263797,0.093319,0.583373,0.374591,-0.210658,0.589651,0.773827,0.256110,0.115726,0.530570) * L0_2 + mat4(0.078204,0.328201,-0.082222,1.051334,0.103238,-0.060958,-0.353448,-0.157455,-0.139631,-0.040661,0.278678,0.390700,1.016721,0.044355,0.253101,0.201402) * L0_3 + mat4(0.297791,-0.139312,-0.036523,0.006180,-0.126484,-1.360991,0.326614,-2.544309,0.485664,-0.305900,0.180351,0.399254,0.517996,0.202295,-0.175309,0.099917) * L0_4 + mat4(-0.488311,-0.180566,-0.096346,0.012026,0.627391,-0.070099,0.176754,0.679811,-1.327541,-0.957728,-0.272023,-0.395953,0.329116,0.022031,0.109571,-0.572802) * L0_5 + mat4(0.898086,0.065272,0.324279,-0.175650,-0.489682,0.197487,0.009461,-0.247464,0.453557,-0.081673,0.267141,-0.579832,0.411279,0.224291,0.289736,0.008095) * L0_6 + mat4(0.012166,0.045058,-0.088206,-0.177255,-0.840475,-0.860723,-0.156567,0.852001,-0.376434,-0.712906,0.178347,0.161750,1.444664,0.700166,1.093910,0.059272) * L0_7 + vec4(-0.192089,-1.027344,-0.009283,0.309698)));\nvec4 L1_1 = sin((mat4(-0.332106,0.009508,-0.180150,-0.030107,0.563696,-0.557009,0.065605,-0.328698,1.043159,-1.495147,-1.078832,-0.445424,-0.855020,0.205252,1.373763,0.456515) * L0_0 + mat4(0.725135,-0.430944,0.122019,-0.112982,0.611843,-0.463062,-0.446602,-1.034939,-0.752939,0.294421,0.400781,0.294426,0.395014,0.529671,0.920368,0.809704) * L0_1 + mat4(-0.188472,0.465256,-0.641460,-0.130408,-0.178522,-0.021867,-0.169117,0.396366,-0.051785,-0.112960,0.405599,-0.177140,0.309165,0.234958,0.359152,-0.251932) * L0_2 + mat4(-0.208961,0.206236,1.150642,0.119207,0.357816,-0.345604,0.140062,-0.122324,-0.172271,0.006682,0.582442,0.354848,0.078955,-0.510548,-0.134209,-0.192431) * L0_3 + mat4(0.010882,0.158839,-0.140755,-0.136574,1.228806,-1.278061,-2.712656,-0.334609,0.785006,-0.511575,0.435898,-0.064508,0.416384,-0.355182,-0.012944,-0.320789) * L0_4 + mat4(-0.746547,-0.107693,-0.057811,0.190059,0.336658,1.267903,0.361505,0.508593,0.235089,-0.748742,-0.160905,0.436442,0.155452,-0.876510,-0.430115,-0.239226) * L0_5 + mat4(-0.404909,0.014046,-0.104382,0.516950,-0.599860,-0.107278,0.267648,-0.084153,0.271921,-0.305370,-0.665559,-0.227115,0.266762,0.122334,-0.015551,0.026508) * L0_6 + mat4(0.347835,0.104066,-0.289811,0.283044,-0.145526,-0.127505,1.007628,-0.188236,-0.089127,-0.197415,0.479588,-0.277759,0.217948,0.604004,-0.092399,-0.560153) * L0_7 + vec4(0.635611,0.242034,0.921342,-0.128157)));\nvec4 L1_2 = sin((mat4(0.084243,0.214540,-0.155990,0.055656,0.225301,0.089245,-0.229751,-0.036953,-0.184119,-0.118921,0.768978,-1.167031,0.480916,0.017273,-0.814921,1.923899) * L0_0 + mat4(0.300395,-0.253083,0.301247,0.654751,-0.168470,-0.044366,0.425302,-0.740967,-0.136307,0.156329,0.225131,-0.439030,0.670174,-0.104910,-0.732530,0.519178) * L0_1 + mat4(0.342080,0.066444,-0.305098,0.477824,-0.158685,-0.071495,0.106886,0.232084,0.587225,0.146504,-0.362784,-0.515684,0.031740,0.252965,-0.094752,0.139957) * L0_2 + mat4(-0.542008,-0.177901,-0.135948,0.506766,0.227751,0.052058,-0.126756,-0.034657,-0.015911,-0.004213,-0.026686,0.144063,0.113234,0.272449,-0.551082,0.459309) * L0_3 + mat4(0.068646,-0.055024,-0.063289,-0.054629,0.647108,0.077469,0.702414,-1.652617,0.406887,0.266246,-0.325613,0.428701,0.211365,0.058035,-0.290318,-0.030766) * L0_4 + mat4(-0.750901,0.124434,-0.174067,-0.597288,0.225354,0.091622,0.011821,-0.289813,0.467806,0.501027,-0.674133,-0.038258,0.157877,-0.308932,0.124058,-0.186918) * L0_5 + mat4(-0.322844,0.735700,0.296641,0.157647,-0.400402,-0.134564,0.062120,0.075052,0.327081,-0.117369,-0.000918,-0.244312,0.012874,0.127884,-0.066956,0.091688) * L0_6 + mat4(0.117447,-0.116534,-0.091286,0.145190,-0.641477,-0.179636,0.320515,-0.911524,0.057303,-0.995227,-0.727779,-0.829536,-0.593003,0.124216,0.732103,-0.243690) * L0_7 + vec4(0.120636,-0.457481,-0.187006,-0.072452)));\nvec4 L1_3 = sin((mat4(-0.396362,0.693238,-0.191740,-0.224501,-0.093402,0.310025,0.410490,-0.037208,-0.595456,0.368652,0.790187,-0.120339,0.795418,-0.797415,-1.458435,-0.053252) * L0_0 + mat4(0.354030,-0.106578,-0.106416,0.197079,-0.012657,0.593555,1.285749,-0.388044,0.307029,0.511558,0.416663,0.054009,0.309456,-0.193915,-0.495687,-0.863484) * L0_1 + mat4(-0.712809,-0.433657,-0.261048,0.255509,-0.027269,-0.137936,-0.104296,-0.084066,-0.462835,1.246909,-0.970470,-0.826777,-0.221241,-0.311144,-0.332063,-0.382250) * L0_2 + mat4(0.057383,0.587052,0.252917,-0.175362,0.305788,0.576916,0.304157,0.061311,0.455656,-0.020648,0.298966,-0.102968,0.420327,-0.080845,-0.194909,0.336989) * L0_3 + mat4(-0.263071,-0.067769,-0.345024,0.062919,-0.500397,0.096436,1.202581,-0.164789,-0.061452,-0.064565,-0.321200,-0.215026,0.273623,0.252950,0.155191,-0.031015) * L0_4 + mat4(-0.152140,1.154366,0.355711,0.217690,-0.105879,-0.683223,-0.587835,0.202301,0.659270,1.231803,-0.967162,0.193152,0.080431,0.322728,-0.046588,-0.112774) * L0_5 + mat4(0.040581,-0.489867,0.076204,0.187738,-0.094278,0.031472,0.166485,0.016493,0.076320,0.435344,-0.395209,0.347077,-0.104768,-0.030706,-0.280548,-0.090952) * L0_6 + mat4(-0.127418,-0.209978,-0.071775,0.067544,0.109622,0.815005,-0.129221,-0.155472,0.370280,-0.129068,-0.328303,-0.310362,-0.482733,-0.111388,0.738390,0.092406) * L0_7 + vec4(0.296789,1.526737,0.044560,-0.471803)));\nvec4 L1_4 = sin((mat4(-0.124758,0.354951,0.149926,-0.393862,0.008862,0.712014,0.329081,-0.123388,0.203855,-0.088666,1.072006,0.412937,0.001877,-0.081738,-0.077720,-0.046205) * L0_0 + mat4(0.037370,0.266935,0.237598,0.363925,0.110594,-0.333112,0.239747,0.391052,-0.169722,0.296712,-0.519847,0.113033,-0.444202,0.029500,0.104005,-0.063712) * L0_1 + mat4(0.377516,-0.521591,0.379730,0.344449,0.143311,-0.153123,0.215430,-0.069144,-0.398368,-0.365449,-0.589467,-0.998910,-0.391081,-0.281920,0.588237,0.091638) * L0_2 + mat4(-0.574685,0.025904,0.433772,-1.344552,0.029904,0.045678,-0.062698,0.016221,-0.358716,0.056528,0.620964,-0.363286,-0.427101,-0.076794,0.496731,-0.260089) * L0_3 + mat4(-0.024299,0.096230,0.044876,-0.119336,0.905436,0.029627,-0.612684,1.920325,-0.458973,0.170847,0.356301,0.382978,-0.118659,0.226406,-0.470173,-0.031245) * L0_4 + mat4(0.006485,0.208658,-1.016496,-0.138738,0.155729,-0.390818,0.136116,-0.225523,0.072198,-0.000576,0.128269,0.358990,-0.035536,0.109404,1.313602,-0.087478) * L0_5 + mat4(0.089180,-0.050736,-0.046302,0.055481,-0.028242,-0.208711,0.461444,-0.202382,0.175475,-0.097968,0.829261,-0.182156,-0.040713,0.065936,0.007306,-0.007418) * L0_6 + mat4(0.070502,-0.072332,0.008982,0.065201,-0.906345,-0.352855,-0.438491,-0.005712,-0.871213,0.518061,-0.586279,0.433859,0.645385,-0.287215,-0.087198,-0.768194) * L0_7 + vec4(-0.520985,0.195013,0.266960,0.522833)));\nvec4 L1_5 = sin((mat4(-0.195293,-0.373020,-0.345718,-0.459306,-0.151424,-0.514284,-0.121656,-0.093875,-0.066079,0.245986,0.311295,-1.021066,-0.135034,0.101250,-0.239717,0.416673) * L0_0 + mat4(0.076243,0.172304,0.082435,0.103209,-0.008805,0.380510,0.214678,-0.970412,-0.063571,0.230826,-0.037949,-0.384562,-0.722360,0.391967,0.322667,-0.678294) * L0_1 + mat4(0.163138,0.327888,-0.371132,-0.142196,-0.087402,0.266170,-0.074319,-0.020267,-0.004702,-0.158961,-0.042578,0.071710,-0.233800,0.049421,0.061592,0.055079) * L0_2 + mat4(-0.131276,-0.131094,0.556672,-0.206565,-0.325830,-0.234999,0.145944,0.319530,0.271992,-0.428350,0.549593,0.149809,0.198019,-0.816144,-0.875172,-0.067316) * L0_3 + mat4(-0.044575,0.017406,0.041994,-0.239834,-0.137215,0.377845,-0.542768,-0.757685,-0.210443,0.009908,0.216298,0.202371,-0.236231,-0.318687,0.250012,0.424167) * L0_4 + mat4(-0.002394,-0.459200,0.066711,0.148303,0.789227,-0.069521,0.067929,0.210954,-1.161279,0.003296,0.334422,-0.877755,-0.325308,0.017419,0.157518,-0.115733) * L0_5 + mat4(-0.500370,-0.245690,0.337363,0.052018,0.199210,-0.084527,-0.252069,-0.180607,0.223983,-0.030733,0.356093,-0.372842,-0.332951,-0.072855,-0.219623,0.031557) * L0_6 + mat4(0.026775,-0.022291,-0.069615,0.169178,-0.098717,-0.000333,0.500718,-0.338868,-0.355495,-1.043917,0.561574,-0.226685,0.759628,-0.399614,-0.153144,0.418804) * L0_7 + vec4(-0.927039,-0.704882,0.458867,-0.309612)));\nvec4 L1_6 = sin((mat4(0.354206,-0.116590,-0.246823,0.185818,0.098717,0.285889,-0.191124,0.134093,0.851146,-0.410669,-0.132999,0.706778,-0.614269,0.377456,0.173358,-0.412471) * L0_0 + mat4(-0.245784,-0.279228,0.025072,-0.020278,0.290416,0.112696,0.114585,0.074564,-0.112846,0.427706,0.035193,-0.145020,0.084878,1.239484,-0.266674,-1.110903) * L0_1 + mat4(-0.140048,0.189507,-0.222719,-0.185873,-0.545201,-0.161999,0.078828,-0.271047,-1.008502,-0.262872,-0.407168,-0.173089,0.048940,-0.019787,-0.038892,-0.412301) * L0_2 + mat4(0.528897,0.141324,-0.051755,0.285025,0.002684,0.359700,0.351667,0.101189,0.166221,0.335519,0.008750,-0.187778,0.217617,0.515194,-0.359137,0.106039) * L0_3 + mat4(0.005325,-0.168011,0.116923,0.081087,0.014261,-0.181981,-0.061617,0.305714,-0.239726,-0.532015,0.353462,-0.009848,0.109309,0.108601,0.725611,0.209398) * L0_4 + mat4(-0.389915,-0.218554,-0.372744,0.400776,-0.470180,0.275335,-0.691822,-0.372283,0.325467,0.473238,-0.150946,-0.426015,0.894783,-0.113295,0.070752,0.408304) * L0_5 + mat4(0.337313,-0.160294,-0.441316,-0.476432,0.548425,0.027223,0.135755,-0.134094,0.634035,0.211198,0.112222,0.089179,0.116867,-0.223741,-0.025024,-0.172402) * L0_6 + mat4(-0.243630,0.043659,-0.000147,0.075752,-0.658657,-0.052852,0.188445,-0.034495,-0.734062,0.533043,-0.808710,-0.332692,0.139091,-0.807795,-0.735977,0.331003) * L0_7 + vec4(-0.981861,0.503969,0.073963,0.229546)));\nvec4 L1_7 = sin((mat4(0.250069,-0.303887,-0.094152,-0.145528,0.484494,-0.365594,0.338337,-0.109948,0.060010,-0.146457,-0.648982,0.456001,-0.520504,0.244519,0.826709,0.423114) * L0_0 + mat4(-0.320708,-0.104971,-0.181456,0.128048,-0.046909,-0.111739,0.099528,0.605961,0.216254,0.500694,-0.334579,-0.210985,0.065260,0.266234,0.406511,0.541646) * L0_1 + mat4(-0.018310,0.025549,0.052709,0.074943,-0.210263,-0.209338,-0.001097,-0.247018,0.456383,0.718610,0.243092,-0.198025,-0.713692,0.197754,0.199676,0.073311) * L0_2 + mat4(-0.118326,-0.073578,0.436958,0.556683,-0.254883,-0.362318,-0.121326,0.121296,0.286824,0.065989,0.107120,-0.324248,-0.097976,-0.041738,-0.131677,-0.143649) * L0_3 + mat4(-0.055477,0.112683,-0.034670,-0.038712,-0.010696,-0.099064,-0.691081,-0.259841,-0.966077,0.046634,0.123943,-0.479210,0.012202,-0.081994,0.271970,0.271093) * L0_4 + mat4(0.039008,-0.041600,0.275450,-0.667085,-0.281057,-0.200376,-0.359311,0.178203,-0.792633,0.269340,0.459847,0.137006,-0.124677,0.018252,-0.010222,0.432808) * L0_5 + mat4(-0.758973,0.391412,0.129099,-0.499953,0.080925,-0.082225,0.070126,-0.057308,0.001377,-0.032573,-0.155414,0.055720,-0.164031,0.199826,0.132161,0.005408) * L0_6 + mat4(-0.079597,-0.092951,0.218116,-0.255417,0.089671,-0.040181,0.207687,0.057640,0.410608,-0.001588,0.069536,-0.477054,0.228583,-0.406005,-1.134830,-0.100063) * L0_7 + vec4(-0.540181,0.436178,0.784731,0.172949)));\nvec4 L2_0 = sin((mat4(0.489360,0.052665,-0.025679,0.258054,-0.303579,-0.054813,0.527349,-0.321562,0.070155,0.283252,-0.150351,0.460618,-0.454535,0.387913,-0.047865,-0.377567) * L1_0 + mat4(0.203426,0.368695,0.050111,-0.414986,-0.468902,-0.037162,0.387727,-0.100184,0.713712,-0.387866,-0.004366,0.270256,-0.126410,0.139432,-0.203904,-0.389172) * L1_1 + mat4(0.797469,-0.170683,-0.247737,0.051237,-0.211944,0.257233,0.140701,-0.059027,-0.559725,-0.353196,0.346367,0.054990,-0.795634,0.325842,0.395677,-0.581147) * L1_2 + mat4(0.487585,-0.032031,-0.603642,0.503935,-0.102196,-0.411551,-0.118460,0.141862,0.552139,0.118702,-0.048316,0.003486,-1.022211,-0.476924,0.253518,0.478746) * L1_3 + mat4(-0.939484,0.015128,0.867863,0.041566,-0.973683,-1.057348,0.524857,-0.568385,-0.165732,0.007000,0.041435,-0.378384,-0.663476,0.389047,0.232579,-0.639716) * L1_4 + mat4(-0.580478,-0.012888,0.337472,-0.509322,0.396584,-0.085469,-0.480171,0.429299,-0.668229,-0.395438,0.767370,0.203290,0.968196,0.261595,-0.274284,0.018881) * L1_5 + mat4(0.548947,0.272314,-0.523553,0.266332,0.097851,0.255477,-0.494857,0.728509,-0.198028,-0.350727,0.251909,-0.055545,0.496007,0.411138,-0.896511,0.208367) * L1_6 + mat4(0.610307,-0.041805,-0.246548,0.337218,-1.187944,0.302178,0.687372,0.344469,0.262732,0.101485,-0.289259,0.426313,-0.701534,-0.163584,0.439053,-0.395238) * L1_7 + vec4(0.255977,-0.371533,-0.473024,-0.454593)));\nvec4 L2_1 = sin((mat4(0.127091,-0.005452,0.036846,0.433287,-0.862962,-0.111184,0.106848,-0.140778,0.782334,0.544995,-0.167878,0.016144,-0.509399,-0.078520,-0.050202,-0.870531) * L1_0 + mat4(0.281597,-0.020442,-0.197710,-0.167391,-0.508714,0.108780,-0.025935,-0.240867,0.463120,-0.027119,-0.043273,0.921401,0.806736,-0.212771,-0.463946,0.691952) * L1_1 + mat4(0.612741,0.105268,0.422518,-0.043667,0.945805,-0.550527,-0.625216,0.788337,-0.772360,-0.193722,-0.040333,-0.091834,-0.344060,-0.150519,-0.012957,-0.266440) * L1_2 + mat4(0.070561,-0.442676,0.204032,0.256387,-0.083997,-0.026652,-0.033612,0.239039,0.286161,0.077642,0.010122,0.278684,-0.538462,-0.410953,0.226098,0.635544) * L1_3 + mat4(-1.080100,-0.523596,0.165641,-0.418853,-0.700122,-0.198194,-0.124148,-0.654298,-0.238119,-0.009847,-0.024588,-0.049495,-0.784056,-0.276102,-0.074027,-0.503594) * L1_4 + mat4(-0.762406,-0.022257,0.263341,-0.576214,0.889562,0.594575,-0.189265,0.042071,-0.648663,0.196989,0.590003,-0.620795,0.806211,-0.183766,-0.073126,0.359584) * L1_5 + mat4(0.742385,-0.151288,-0.199077,0.237038,-0.285264,0.146614,-0.044844,0.023629,-0.870183,0.063693,-0.411290,-0.336468,0.956869,-0.181871,0.354996,0.468446) * L1_6 + mat4(0.107087,0.120990,0.105059,0.983995,-0.979963,0.422469,-0.174905,-0.556767,0.245658,0.129775,0.363632,-0.049803,-0.878353,-0.076039,-0.243042,0.072174) * L1_7 + vec4(0.183087,-0.384173,-0.164463,-0.718372)));\nvec4 L2_2 = sin((mat4(-0.072522,-0.081101,-0.080053,0.214032,0.093526,0.183793,0.143631,0.249863,-0.296580,-0.913854,-0.290075,-0.304172,-0.141842,0.816876,0.020306,0.162398) * L1_0 + mat4(-0.231826,-0.131413,0.026240,-0.120334,-0.012561,0.044819,0.150484,0.206683,0.056479,-0.720295,0.003139,-0.043702,0.188405,-0.151677,0.234651,-0.213446) * L1_1 + mat4(0.021911,0.215550,-0.140313,0.375764,-0.398245,0.842499,-0.068113,-0.812059,0.399990,0.743648,0.184646,0.805684,0.151065,0.599710,0.128160,-0.105228) * L1_2 + mat4(0.375213,-0.679238,-0.130421,0.093714,-0.140213,0.261646,-0.136265,-0.071543,-0.128170,-0.110241,0.105325,-0.207388,0.598327,-0.137138,-0.315025,0.157456) * L1_3 + mat4(0.028405,0.406497,0.378430,0.028229,-0.764978,0.565637,-0.359708,0.128523,0.179435,0.196043,0.067675,0.130629,0.217857,0.531704,0.141195,0.068240) * L1_4 + mat4(0.427299,1.068555,0.569272,-0.325271,-0.567760,-0.360171,-0.355348,-0.226804,-0.705717,0.110815,-0.041682,-0.182787,-0.255219,-0.520436,-0.051456,-0.246012) * L1_5 + mat4(0.331019,-0.186601,-0.003474,-0.322877,0.020604,-0.416814,-0.205071,0.073444,0.381223,0.077946,0.012033,0.284754,0.036648,0.127495,-0.006148,0.063585) * L1_6 + mat4(-0.371248,-0.023208,-0.323185,-0.576503,-0.237917,0.858356,0.808176,0.418974,0.121585,-0.275211,-0.076722,0.293498,0.540195,0.374479,0.134229,0.197592) * L1_7 + vec4(0.348935,-0.195174,0.834546,0.803527)));\nvec4 L2_3 = sin((mat4(0.353256,0.047983,0.060145,0.242192,-0.096122,0.263597,-0.228468,0.479282,0.162767,-0.535060,-0.059913,0.029695,-0.031737,-0.117462,0.008647,0.602674) * L1_0 + mat4(0.049201,-0.112253,-0.076315,0.050058,-0.154923,0.024116,-0.115594,0.818917,0.135710,0.090178,0.072217,-0.457561,0.768253,-0.177682,0.270949,-0.192062) * L1_1 + mat4(0.627126,-0.528949,0.553779,-0.972790,-0.400604,0.142494,-0.077154,-0.064892,0.151218,0.549292,-0.123925,0.109073,-0.324131,-0.132294,0.186675,0.469400) * L1_2 + mat4(0.583344,0.360306,-0.374715,-0.828139,0.014442,-0.221464,0.137543,-0.036418,0.380250,-0.123602,-0.114545,-0.443933,-0.184244,0.497942,0.488771,0.623129) * L1_3 + mat4(-0.098143,0.008903,-0.397108,0.076151,-0.685602,0.144466,-0.752961,0.594835,0.001187,0.024503,-0.044288,0.717063,-0.258100,0.108707,0.030864,1.211245) * L1_4 + mat4(-0.156833,0.411437,0.033686,0.504924,0.010758,-0.088539,0.131899,-0.260996,-0.336606,-0.455643,-0.326431,0.533635,0.615840,-0.377062,-0.301534,-1.260087) * L1_5 + mat4(0.305699,0.356120,-0.132915,-0.322792,0.436869,-0.902090,-0.433593,-0.545252,-0.845151,0.349720,-0.429577,0.762942,0.581423,-0.116434,0.727723,-0.701833) * L1_6 + mat4(0.250309,-0.434376,-0.058987,-0.751056,-0.567213,1.045830,-0.072263,0.640365,-0.167734,0.386480,-0.043008,-0.707125,-0.351149,0.191740,-0.318967,0.767588) * L1_7 + vec4(-0.441938,0.372111,0.712085,0.163793)));\nvec4 L2_4 = sin((mat4(0.246801,-0.355318,-0.137198,0.270886,-0.864972,0.068802,0.209751,-0.209375,0.803920,-0.006336,-0.348856,0.662019,0.208549,-0.144686,0.715263,-0.197437) * L1_0 + mat4(0.254053,-0.028127,0.183754,0.237500,-0.753829,-0.044383,0.352872,-0.009694,-0.293748,0.252011,-0.568982,0.224325,0.310865,0.291835,0.295789,0.073738) * L1_1 + mat4(0.740205,0.492083,-0.473019,0.081397,0.947101,0.068574,-0.549345,0.211839,-0.481491,-0.047486,0.170550,-0.033804,-0.126157,-0.215478,0.346216,-0.186766) * L1_2 + mat4(0.990263,0.084082,-0.016419,0.401209,-0.233669,-0.147205,-0.189388,0.212223,0.310983,-0.014517,-0.095239,0.147483,0.087874,-0.485221,0.881775,-0.017253) * L1_3 + mat4(-0.218331,0.271632,0.136596,0.143872,0.076876,-0.117420,0.064073,-0.002461,-0.803243,-0.536193,0.402518,-0.168221,-1.104208,-0.870113,0.653947,-0.202293) * L1_4 + mat4(-0.686933,0.384006,0.806857,-0.602151,1.279006,-0.011095,-0.665926,0.722438,-0.576914,-0.208101,0.278936,0.207617,1.000232,0.616811,-0.379509,0.652569) * L1_5 + mat4(0.265278,0.148465,0.231963,-0.139211,0.963477,-0.431232,-0.380875,0.275647,-1.095845,0.125684,-0.441420,0.306469,1.921711,0.276294,-0.216391,0.690558) * L1_6 + mat4(-0.181117,-0.053921,-0.023652,0.204880,0.355272,0.034168,0.140457,-1.016891,1.109991,0.253618,-0.363351,0.253470,-0.812389,-0.233460,0.341814,-0.368213) * L1_7 + vec4(0.777228,-0.322155,-0.049162,0.649126)));\nvec4 L2_5 = sin((mat4(-0.119267,0.070018,-0.009873,-0.184377,0.157359,-0.153102,-0.034946,0.054647,0.110551,0.154240,-0.345669,-0.692592,0.593656,-0.111515,0.134600,-0.146724) * L1_0 + mat4(-0.069751,-0.093001,0.036661,-0.181565,-0.025335,-0.232277,0.156549,0.050513,-0.529030,0.202700,0.006322,-0.083664,0.184120,-0.081816,-0.042978,0.298108) * L1_1 + mat4(-0.538013,0.186256,0.339168,0.034639,0.101722,0.847081,0.021957,0.118322,-0.760254,-0.248734,-0.016793,0.197341,0.194716,-0.165068,-0.182691,0.133520) * L1_2 + mat4(-0.251274,0.063749,0.203142,-0.375298,0.110468,-0.038509,-0.069082,0.064271,0.351702,-0.048003,-0.066417,-0.013676,-0.127798,0.160624,-0.690155,0.344830) * L1_3 + mat4(0.376805,-0.238088,0.447248,0.110678,-0.097599,-0.168737,-0.032541,-0.344317,-0.025586,-0.044779,0.125274,0.004971,0.564545,-0.121529,0.101254,-0.183991) * L1_4 + mat4(-0.273790,-0.654888,0.178073,0.187847,-0.302681,0.129215,0.447189,0.097294,0.205086,-0.403452,0.172133,0.309483,-0.077498,0.271420,0.211823,0.068346) * L1_5 + mat4(-0.177779,0.132950,-0.234057,-0.165188,0.247824,0.246840,0.115433,-0.138290,-0.524629,0.044762,0.322511,-0.262203,-0.032103,1.012659,0.515776,0.085523) * L1_6 + mat4(0.172307,0.015556,-0.485632,-0.168908,-0.257328,-0.485874,0.018032,-0.920403,-0.293761,0.132579,0.173582,-0.018065,0.012255,0.027002,-0.051554,0.465518) * L1_7 + vec4(-1.065990,0.129372,-0.281774,0.096446)));\nvec4 L2_6 = sin((mat4(-0.008446,0.319360,0.121374,0.189926,0.363514,0.107040,-0.605156,-0.834165,-0.515738,0.066251,0.079268,0.108688,0.242071,0.048051,0.171334,-0.293626) * L1_0 + mat4(-0.033318,-0.079426,0.371661,-0.083828,0.260230,0.241747,0.071562,-0.401206,-0.175652,-0.058995,-0.106658,0.291942,0.385570,-0.035919,0.207918,0.003248) * L1_1 + mat4(-0.549169,0.647837,-0.373416,0.618492,0.480143,0.364547,0.027731,1.009014,0.780035,0.087845,0.168446,0.214451,0.525914,-0.379158,0.208455,-0.620630) * L1_2 + mat4(-0.317807,0.013994,-0.322161,0.575884,-0.081116,-0.044619,-0.088986,0.019210,-0.461381,0.432183,0.139911,-0.111421,0.349470,-0.574000,-0.582105,-0.167285) * L1_3 + mat4(0.358775,0.146545,0.052059,-0.456951,-0.895964,-0.016587,0.530340,-0.568644,0.380531,-0.380867,0.285801,-0.399604,0.709720,-0.489705,0.134766,-0.585572) * L1_4 + mat4(0.174735,0.148899,-0.347339,-0.068375,-1.185807,-0.105382,0.532051,-0.208364,-0.353411,0.852001,-0.048821,0.264589,-0.495249,0.513937,0.393488,0.467790) * L1_5 + mat4(0.156946,-0.178567,0.169557,0.373923,-0.519799,0.173457,0.217566,0.365237,0.413920,-0.209027,-0.279296,-0.300183,-0.526259,-0.194645,0.196527,1.000078) * L1_6 + mat4(0.239786,-0.143795,0.181480,0.205108,0.345321,0.530326,0.018547,-0.327825,-0.410911,0.157487,-0.080424,0.644027,0.834696,-0.045272,-0.565190,-0.478427) * L1_7 + vec4(-0.904281,-0.704679,-0.767008,-0.174908)));\nvec4 L2_7 = sin((mat4(-0.105656,-0.200161,-0.063213,-0.106369,0.174908,0.239993,0.194780,0.148763,0.056684,-0.331473,-0.159025,-0.556901,0.468664,0.169148,-0.274899,-0.549220) * L1_0 + mat4(0.099540,-0.217087,0.009899,-0.284749,0.059004,-0.002343,0.101893,-0.338144,-0.488555,-0.219110,0.124666,0.352925,-0.036198,-0.284520,0.223223,-0.304085) * L1_1 + mat4(-0.613298,0.338073,-0.043428,0.332618,0.181799,0.434880,0.171750,-0.046241,0.010867,0.176982,-0.101375,0.448955,0.264919,0.108519,0.024619,-0.042448) * L1_2 + mat4(-0.024039,-0.296933,-0.246504,-0.124051,-0.107936,-0.163648,0.088657,0.472395,-0.355462,-0.197719,-0.106082,-0.089911,0.407717,0.010260,0.233583,-0.086769) * L1_3 + mat4(-0.198698,-0.165964,0.294279,-0.319380,0.016847,0.159144,0.452236,-0.237316,0.049616,0.023836,0.202346,-0.126748,0.100659,-0.028421,-0.088053,-0.417044) * L1_4 + mat4(0.070579,1.225354,0.016078,-0.060429,0.413522,-0.186623,-0.964562,-0.854264,0.404163,0.530383,0.488395,-0.190921,-0.017734,-0.511401,-0.124966,-0.260384) * L1_5 + mat4(-0.027275,0.105477,0.037593,0.060258,-0.111604,-0.232249,-0.568536,0.061470,0.096704,-0.176964,-0.131435,0.488612,-0.422429,-0.176505,-0.755414,-0.057040) * L1_6 + mat4(-0.217390,-0.360330,0.472260,-0.067061,0.192871,-0.067162,-0.882545,0.392603,-0.612782,0.118587,-0.249685,-0.154980,-0.057584,0.214332,0.072382,0.022484) * L1_7 + vec4(-1.118909,0.701599,-0.042799,0.001229)));\nif(BlockIndex == 0)\n{\nvec4 L3_0 = sin((mat4(-0.287894,0.000743,0.032683,0.224582,0.862787,0.157716,0.223439,0.014547,0.382411,-0.036172,0.078211,0.218258,-0.115029,-0.087770,0.008363,-0.141794) * L2_0 + mat4(-0.041463,-0.012213,-0.047555,0.159229,0.403052,0.306106,-0.723725,-0.471328,0.348077,0.351693,-0.661211,-0.352164,-0.144957,0.076444,-0.118209,-0.097724) * L2_1 + mat4(0.074890,-0.125503,0.338162,0.190065,0.000440,-0.004034,0.157988,-0.090493,0.861919,-0.844863,0.506352,-0.524406,0.248498,-0.527692,0.181245,0.189542) * L2_2 + mat4(0.544104,-0.015081,-0.365077,0.006718,0.201703,0.030531,-0.429370,-0.196766,0.147615,-0.301998,-0.368076,-0.213777,-0.072401,0.040277,-0.118158,0.006649) * L2_3 + mat4(0.053442,-0.030267,0.044554,0.092317,0.096419,0.149546,0.036802,-0.235924,0.422956,0.059980,-0.157389,0.108837,-0.296017,0.063879,-0.305720,0.179961) * L2_4 + mat4(-0.481453,0.013678,-0.244334,0.165052,0.318444,-0.125799,-0.038956,-0.437985,-0.598333,0.006359,0.089577,-0.258370,0.211824,0.135591,-0.155584,0.303960) * L2_5 + mat4(-0.193605,0.085485,-0.025767,-0.365188,0.105555,-0.179858,0.041098,0.065192,0.095339,0.045215,0.030120,0.277060,0.172252,-0.063253,0.068519,0.022808) * L2_6 + mat4(-0.719410,0.509179,0.526195,0.448327,0.121750,0.020116,-0.084217,0.503508,-0.383971,-0.128513,0.331396,0.005969,-0.135795,-0.061577,0.366383,-0.112351) * L2_7 + vec4(-0.055347,0.376933,-0.642367,-0.214682)));\n    return L3_0;\n}\nelse if(BlockIndex == 1)\n{\nvec4 L3_1 = sin((mat4(0.025053,0.301245,-0.065117,-0.097063,-0.094689,0.069683,-0.348380,-0.077766,0.118164,0.101656,-0.080153,0.222694,0.076007,0.352710,-0.047492,0.224068) * L2_0 + mat4(-0.064554,0.316622,0.063129,0.012598,0.269082,-0.038636,0.012127,0.482087,0.268727,0.348318,-0.189679,0.846811,0.209241,-0.090858,-0.171174,0.164423) * L2_1 + mat4(-0.270231,-0.248647,-0.407866,0.325264,0.004882,0.239382,-0.137086,0.144591,-0.023502,0.223745,0.141778,0.203219,0.284749,-0.556318,-0.736086,-0.579507) * L2_2 + mat4(0.416251,0.132818,0.075324,0.143639,0.285522,-0.381144,-0.305860,-0.083652,0.027179,-0.135051,0.303027,-0.519602,0.013233,-0.068241,0.276888,0.080354) * L2_3 + mat4(0.033217,-0.091402,-0.042517,-0.051921,0.312047,-0.048247,-0.025060,-0.189308,0.137602,-0.204958,-0.480656,-0.032339,0.340467,-0.495385,-0.006507,-0.337886) * L2_4 + mat4(-0.531714,-0.196584,-0.233138,-0.031214,-0.502878,0.446713,-0.013640,0.163323,0.641075,0.194703,0.845438,0.032407,0.345826,-0.004398,-0.589127,-0.483243) * L2_5 + mat4(0.317806,-0.400753,0.305765,0.086058,0.420467,-0.361961,0.616727,0.285985,-0.024321,-0.698796,0.463217,0.031038,0.146851,-0.537526,0.109920,0.274915) * L2_6 + mat4(-0.074032,0.412428,0.194440,0.562324,-0.121933,-0.105637,0.106067,-0.361784,-0.026168,0.325406,-0.250632,-0.402419,-0.144068,-0.127714,0.193054,0.100718) * L2_7 + vec4(-0.693387,1.276879,-0.376902,-0.486344)));\n    return L3_1;\n}\nelse if(BlockIndex == 2)\n{\nvec4 L3_2 = sin((mat4(0.084733,0.101515,0.193967,0.135464,-0.733112,0.118730,0.466956,-0.665113,-0.553897,-0.011986,0.323973,0.259523,-0.377031,0.132215,0.191817,0.117691) * L2_0 + mat4(0.171264,0.077185,0.029906,-0.017422,0.259913,0.379252,-0.606365,-0.097465,-0.316132,-0.189582,0.140690,-0.076541,0.040718,-0.202341,0.013173,0.301719) * L2_1 + mat4(0.344495,0.350427,0.286740,0.090226,0.184585,-0.005961,0.159580,0.071284,0.351861,-0.904756,-0.339788,-0.452612,-0.629183,0.182853,-0.248262,-0.089241) * L2_2 + mat4(-0.119624,-0.203418,0.464627,-0.210390,0.211820,-0.156824,0.629251,-0.323086,-0.171631,0.045337,0.077582,-0.221839,0.264728,0.080254,-0.024421,0.043468) * L2_3 + mat4(0.026510,0.063825,0.132426,0.009026,-0.413661,0.392385,0.000338,-0.040342,0.520114,-0.384553,-0.138028,-0.088725,0.063942,0.656931,-0.101432,0.021850) * L2_4 + mat4(-0.116820,-0.257338,-0.051923,0.520423,-0.235324,0.273917,0.051913,-0.172552,0.284083,0.148482,-0.976706,0.283542,-0.439012,-0.036631,0.324565,-0.192597) * L2_5 + mat4(-0.546998,0.262878,-0.431288,0.189591,-0.133775,0.477262,-0.056898,-0.205224,-0.356213,0.520439,0.283356,0.064640,0.232120,-0.259055,-0.037068,0.231313) * L2_6 + mat4(0.404244,-0.166743,-0.341454,-0.173368,0.740004,-0.170552,0.478334,0.137966,0.113213,-0.043876,-0.226497,-0.194198,0.234751,0.135744,-0.426518,-0.717066) * L2_7 + vec4(0.419014,0.265348,-0.668673,0.080425)));\n    return L3_2;\n}\nelse if(BlockIndex == 3)\n{\nvec4 L3_3 = sin((mat4(-0.110442,0.176405,-0.060765,-0.055879,-0.548307,-0.640867,-0.218740,0.047838,-0.180914,0.229156,-0.016469,0.055506,0.495823,-0.503453,-0.067661,-0.432622) * L2_0 + mat4(-0.031930,0.024888,0.046841,-0.028711,0.043420,-0.228852,0.446779,0.177200,-0.331172,-0.178514,0.187293,-0.136679,0.225205,-0.204922,-0.145464,-0.200512) * L2_1 + mat4(0.450294,0.151933,-0.512712,-0.136738,-0.022505,0.110264,0.007280,0.086193,-0.308030,0.474066,0.370981,0.228094,-0.238399,0.125276,-0.261764,0.401375) * L2_2 + mat4(0.231287,-0.493622,0.206130,-0.401296,0.189368,-0.112130,0.082820,-0.110594,-0.105191,0.728474,0.089156,0.369196,0.005414,0.031977,0.024481,0.180892) * L2_3 + mat4(-0.076451,0.039974,0.013906,-0.082929,0.078087,0.327298,0.080604,-0.040339,-0.427603,-0.052711,0.139276,0.074567,-0.017026,0.142517,-0.093692,-0.125550) * L2_4 + mat4(-0.069671,-0.326448,0.027577,0.083579,0.266653,0.232785,-0.097510,0.217033,-0.326451,-0.035274,0.077653,0.354416,-0.212085,-0.136727,-0.101879,0.612801) * L2_5 + mat4(0.217845,-0.007252,0.287886,-0.254383,0.157292,0.135765,0.720710,0.040094,-0.121399,-0.152738,0.322400,-0.165653,-0.048366,-0.326505,0.142916,0.133545) * L2_6 + mat4(-0.163684,-0.313008,0.015532,-0.112544,-0.460503,-0.471828,-0.165732,-0.046334,-0.169900,0.506216,-0.072116,0.143281,0.201780,0.408135,-0.062637,0.059992) * L2_7 + vec4(1.118431,-0.155144,0.059495,-0.479478)));\n    return L3_3;\n}\nelse if(BlockIndex == 4)\n{\nvec4 L3_4 = sin((mat4(0.237653,0.212186,0.041648,0.136404,0.305372,0.229558,0.351834,0.395192,0.245046,0.226581,-0.165207,0.070866,-0.235954,0.072931,0.134003,-0.019215) * L2_0 + mat4(-0.062443,0.018674,0.036203,0.023851,0.120267,-0.015897,-0.237319,0.480193,0.912578,-0.274819,-0.493546,1.054535,-0.008906,0.034043,0.283059,-0.126425) * L2_1 + mat4(0.515240,0.417944,-0.274206,0.156355,0.326175,0.185535,0.031120,0.099302,0.569609,0.004966,0.713566,0.144586,0.303082,-0.154893,0.200733,-0.542664) * L2_2 + mat4(0.378799,0.236168,-0.083461,0.227929,-0.234693,0.134856,-0.490962,-0.020135,-0.039452,-0.060411,0.677204,-0.024788,-0.077082,-0.059447,-0.031659,0.106686) * L2_3 + mat4(0.151513,0.043717,-0.130758,0.017517,0.024120,0.117669,0.316383,-0.255548,-0.177479,0.022006,-0.263786,-0.081179,-0.182774,-0.086220,0.358024,-0.390084) * L2_4 + mat4(0.175941,-0.515193,0.117721,-0.062858,0.441087,-0.191226,0.356437,0.313178,0.095928,0.931575,0.397995,0.175770,-0.290016,0.294545,-0.283503,-0.267645) * L2_5 + mat4(0.334028,0.018774,0.725169,-0.203057,0.298975,0.437497,-0.106200,0.154826,0.694549,0.086864,-0.420859,0.088437,0.082911,-0.162394,0.321163,-0.128803) * L2_6 + mat4(0.015456,0.029113,0.497117,0.047662,0.069172,-0.029020,-0.177494,0.047440,-0.206307,-0.164251,-0.184165,-0.154766,0.553355,0.291579,0.306331,0.070396) * L2_7 + vec4(-0.256580,0.655973,0.676752,1.005033)));\n    return L3_4;\n}\nelse if(BlockIndex == 5)\n{\nvec4 L3_5 = sin((mat4(-0.093209,-0.040833,-0.113276,-0.077134,0.282922,-0.391030,0.364724,0.508481,0.396988,-0.090072,0.306837,0.036673,0.178973,-0.525736,0.034518,-0.240066) * L2_0 + mat4(-0.154565,-0.070313,0.151149,0.036575,-0.188554,-0.153016,0.225194,-0.213839,-0.287858,0.659674,0.143201,0.173169,0.194309,-0.124565,0.257829,-0.328046) * L2_1 + mat4(-0.616458,-0.006216,0.285876,0.203833,-0.238977,-0.176688,-0.397896,-0.120621,-0.276121,-0.242755,0.010270,0.027823,-0.222686,0.105206,-0.173670,-0.571903) * L2_2 + mat4(0.140980,-0.130734,-0.012745,-0.184083,0.096163,0.200044,-0.195242,-0.075045,0.281535,0.136122,0.044403,-0.105396,-0.189421,0.042896,-0.130820,-0.279202) * L2_3 + mat4(0.052018,-0.059776,-0.013687,0.066318,-0.148129,-0.282006,-0.008141,0.271001,-0.325732,0.032268,0.342963,-0.144497,0.198602,-0.356711,0.230881,0.168334) * L2_4 + mat4(0.093966,0.015436,-0.225223,0.513755,0.294227,-0.160243,-0.381112,-0.445246,0.091055,0.068767,-0.630504,-0.192011,0.338368,-0.075820,0.104941,-0.126563) * L2_5 + mat4(0.349165,-0.142229,-0.362007,0.068738,-0.135279,-0.131503,-0.198919,0.259692,0.064408,0.179270,0.320600,-0.131985,0.285880,0.116146,-0.185655,-0.059655) * L2_6 + mat4(-0.014178,-0.681395,0.096050,0.377724,0.468322,0.015576,0.350127,-0.304654,0.295745,0.063743,0.373106,-0.123289,-0.119879,0.280378,0.305010,0.049566) * L2_7 + vec4(-0.266083,0.302699,-0.044043,-0.473977)));\n    return L3_5;\n}\nelse if(BlockIndex == 6)\n{\nvec4 L3_6 = sin((mat4(0.124130,-0.161653,-0.048383,0.012256,0.827143,0.147619,-0.335049,0.168173,0.174807,0.458806,0.287677,0.113521,-0.370288,0.490887,-0.306368,0.107196) * L2_0 + mat4(0.136943,-0.268731,0.139588,0.247760,-0.984747,-0.289381,-0.246338,0.360274,-0.109123,-0.278310,0.117044,-0.029934,-0.170460,0.144616,-0.044750,-0.135690) * L2_1 + mat4(-0.805512,0.221679,-0.306290,-0.037761,-0.139832,0.182505,0.114879,-0.119753,0.646951,0.037943,0.459837,-1.010655,0.306851,-0.440566,0.080316,0.273941) * L2_2 + mat4(-0.620345,0.013163,-0.166349,-0.156312,-0.527295,-0.201984,0.052754,0.149794,-0.186177,-0.386024,-0.475622,0.345457,-0.114665,-0.079470,-0.150276,0.095914) * L2_3 + mat4(0.123104,0.302625,0.010862,-0.114164,-0.372925,0.044662,0.108703,0.089459,-0.122549,-0.272054,-0.026686,-0.141945,-0.246745,0.063847,-0.603413,0.094602) * L2_4 + mat4(0.249720,0.389488,0.166944,-0.351268,0.229836,0.664044,0.463001,0.564076,-0.872674,-0.331717,0.584715,-0.883203,0.436764,0.088716,-0.355535,-0.131283) * L2_5 + mat4(-0.065675,0.193124,0.313851,-0.232675,0.340027,0.214593,0.134204,0.023416,0.611618,-0.384412,0.418336,0.476773,0.172810,0.048210,0.205503,-0.284322) * L2_6 + mat4(0.093814,0.604582,-0.240016,-0.404668,0.247758,-0.472042,0.118528,0.518221,-0.105411,-0.274826,0.060538,0.083262,0.920520,-0.249353,0.155837,0.322798) * L2_7 + vec4(-0.330389,0.075966,0.158152,0.340625)));\n    return L3_6;\n}\nelse\n{\nvec4 L3_7 = sin((mat4(0.031071,-0.272675,-0.206473,-0.005688,-0.171251,-0.387975,0.001927,-0.425193,-0.283599,-0.003183,-0.407157,-0.087126,-0.213536,-0.310846,-0.334776,0.139513) * L2_0 + mat4(-0.071482,-0.153005,0.021227,0.214444,0.057390,-0.256645,-0.068439,-0.059819,0.140305,-0.130256,0.371726,0.533822,-0.101099,0.008176,-0.183471,0.188184) * L2_1 + mat4(-0.081525,-0.203962,0.207975,0.195264,-0.152119,-0.283410,-0.279357,0.188602,0.703545,-0.475745,0.231305,-0.071403,-0.307925,0.000213,-0.120634,0.275966) * L2_2 + mat4(0.084950,-0.546217,-0.148849,-0.044890,-0.150809,0.424334,-0.395986,-0.154156,0.423962,0.027862,0.230642,-0.144863,0.034176,0.018680,0.073992,-0.250168) * L2_3 + mat4(0.021604,0.026204,0.010289,0.067789,0.225368,-0.156390,0.034564,0.335769,0.140448,0.007466,0.062046,0.153205,-0.298656,0.084622,-0.269393,-0.347111) * L2_4 + mat4(-0.034590,-0.385484,-0.225728,-0.332112,-0.274849,0.705110,0.534363,0.061767,0.488152,0.454128,0.453290,0.189526,-0.192003,-0.030490,-0.117019,0.321908) * L2_5 + mat4(0.230776,-0.014666,0.112355,0.264311,0.300915,-0.208086,0.140934,0.225867,0.553601,0.078822,0.257316,0.652844,0.060736,0.168767,0.178144,-0.327484) * L2_6 + mat4(-0.709750,-0.753566,0.084356,-0.316727,0.463189,0.030614,0.687246,-0.280158,0.198259,0.135085,-0.217384,0.949007,-0.090735,-0.573644,-0.424227,0.331248) * L2_7 + vec4(0.688277,0.445378,0.186506,0.641371)));\n    return L3_7;\n}\n}\n\n#pragma optimize(on)\n\n\n\n#pragma optimize(off)\nvec4 Lightmap_Half_Floor(const vec3 uv_0, const vec3 uv_1, const int BlockIndex)\n{\nvec4 L0_0 = sin(20.000000 * (mat3x4(-0.109306,0.146146,0.086112,0.204166,-0.088388,-0.058846,-0.172151,0.222555,-0.142687,0.016285,-0.227816,-0.695618) * uv_0 + mat3x4(0.045841,-0.080829,0.046751,-0.082878,-0.003002,-0.094157,-0.041087,0.051161,0.009927,0.015609,-0.022649,0.082471) * uv_1 + vec4(0.108172,-0.016388,0.174256,-0.211940)));\nvec4 L0_1 = sin(20.000000 * (mat3x4(0.001994,-0.155335,-0.206147,-0.391819,0.166622,-0.126319,-0.031150,-0.177656,-0.005467,0.058544,-0.056370,0.363143) * uv_0 + mat3x4(-0.033660,-0.045822,0.135098,-0.101275,0.143666,0.036147,0.033357,0.157014,-0.132148,0.098585,0.098026,0.106806) * uv_1 + vec4(-0.134216,0.023654,0.113637,0.018758)));\nvec4 L0_2 = sin(20.000000 * (mat3x4(0.194020,-0.165239,-0.225718,-0.028077,0.108659,0.073169,0.236927,-0.106659,-0.062008,-0.004309,-0.341766,0.654674) * uv_0 + mat3x4(0.068969,-0.110519,-0.030110,0.076480,-0.124692,-0.000626,-0.208144,0.144312,-0.119095,0.003773,0.033798,-0.053694) * uv_1 + vec4(0.072932,-0.049672,0.003068,0.123620)));\nvec4 L0_3 = sin(20.000000 * (mat3x4(-0.262859,0.220461,-0.143712,-0.289029,0.007735,-0.152427,-0.068362,-0.004869,-0.427808,0.072963,0.154230,-0.134024) * uv_0 + mat3x4(0.156095,-0.020642,0.157789,-0.140084,-0.236019,0.053866,0.084771,-0.043741,-0.150011,-0.125235,-0.124040,-0.080967) * uv_1 + vec4(-0.258634,0.111145,-0.094152,-0.162164)));\nvec4 L0_4 = sin(20.000000 * (mat3x4(-0.001945,-0.149367,0.001189,0.331875,0.168978,-0.136097,0.138521,0.016588,-0.001600,-0.026543,-0.001327,-0.584644) * uv_0 + mat3x4(0.044595,-0.091582,0.086292,-0.163096,0.053346,-0.025810,0.058524,-0.169820,0.091024,-0.063060,-0.123284,0.094565) * uv_1 + vec4(-0.121251,-0.062693,0.079448,-0.017053)));\nvec4 L0_5 = sin(20.000000 * (mat3x4(-0.001319,0.148162,-0.121642,0.148111,0.079828,-0.174796,-0.206574,-0.029551,-0.002990,0.028574,1.204054,0.025817) * uv_0 + mat3x4(0.138735,0.154972,0.101217,-0.156575,0.113906,-0.048570,0.208933,0.117058,0.045527,-0.033766,0.083483,-0.091052) * uv_1 + vec4(-0.193035,-0.021113,0.035530,0.111936)));\nvec4 L0_6 = sin(20.000000 * (mat3x4(-0.181259,-0.162658,0.196817,-0.003617,-0.076935,-0.132728,0.081107,0.092653,0.029456,-0.024932,-0.052521,0.005480) * uv_0 + mat3x4(-0.005299,-0.145586,0.030144,0.122350,0.168239,-0.143262,-0.043176,-0.084884,-0.157997,0.142327,-0.152279,0.164897) * uv_1 + vec4(-0.066041,0.055115,-0.037690,-0.063590)));\nvec4 L0_7 = sin(20.000000 * (mat3x4(-0.172744,-0.000929,0.155495,-0.149529,-0.046498,-0.163539,-0.151681,-0.018704,-0.136503,-0.001186,0.533257,-0.026485) * uv_0 + mat3x4(-0.074682,-0.122338,0.107533,0.159413,0.145278,0.149649,0.200083,-0.166345,-0.019045,0.130873,-0.066875,-0.103932) * uv_1 + vec4(0.021289,0.163360,-0.035550,-0.118676)));\nvec4 L0_8 = sin(20.000000 * (mat3x4(-0.149704,0.147853,0.019939,0.064547,0.012680,0.118139,0.041593,-0.140833,-0.026446,0.028220,0.107287,0.263217) * uv_0 + mat3x4(0.011361,0.005823,0.122585,0.058941,-0.051241,-0.097735,-0.011309,0.126272,-0.065230,-0.133980,0.089110,-0.001920) * uv_1 + vec4(-0.045017,0.162373,0.056140,-0.078323)));\nvec4 L0_9 = sin(20.000000 * (mat3x4(0.178728,0.149844,-0.187792,0.001557,-0.054258,0.105071,0.078464,-0.056046,0.068294,0.026218,0.046497,-0.000557) * uv_0 + mat3x4(-0.156669,0.097887,-0.135820,-0.119450,-0.094701,-0.140026,0.151286,-0.063970,-0.145543,-0.043200,-0.051654,-0.124151) * uv_1 + vec4(0.155721,0.039042,0.100028,0.087577)));\nvec4 L0_10 = sin(20.000000 * (mat3x4(-0.149323,-0.214751,0.149308,-0.336351,0.142536,0.034350,-0.048074,-0.107533,-0.026462,-0.021626,0.025779,0.349668) * uv_0 + mat3x4(-0.110017,0.059187,0.118840,-0.163119,-0.038146,0.156160,-0.101619,0.052078,0.162010,-0.015552,0.162487,-0.146644) * uv_1 + vec4(0.071176,0.047551,0.003145,-0.138852)));\nvec4 L0_11 = sin(20.000000 * (mat3x4(-0.307020,0.148929,0.149368,-0.149683,0.022796,0.123622,-0.133355,0.174316,-0.019087,-0.630866,0.026591,-0.025948) * uv_0 + mat3x4(-0.117841,0.087204,-0.162909,-0.031332,-0.043503,0.014756,-0.004411,-0.072994,0.157795,-0.054874,0.063883,-0.160815) * uv_1 + vec4(-0.002162,-0.067643,0.137610,0.139755)));\nvec4 L0_12 = sin(20.000000 * (mat3x4(0.168793,-0.070793,-0.149769,0.001824,0.047192,-0.075792,-0.013835,-0.130445,-0.958767,-0.356770,-0.026257,-0.002834) * uv_0 + mat3x4(-0.102460,0.051360,0.123442,0.052695,-0.033437,0.008697,-0.097573,-0.145373,-0.076577,-0.068833,-0.066470,0.072601) * uv_1 + vec4(0.054967,-0.029504,-0.024394,0.012810)));\nvec4 L0_13 = sin(20.000000 * (mat3x4(0.021806,0.150791,-0.149352,-0.147447,0.114505,0.044802,-0.067900,-0.069649,-0.363482,0.046963,-0.026483,-0.021359) * uv_0 + mat3x4(-0.156001,0.052194,-0.093389,0.031225,-0.125806,0.131517,0.152273,-0.048273,0.166340,0.028162,-0.068971,0.028162) * uv_1 + vec4(-0.015734,-0.140566,-0.015491,0.183737)));\nvec4 L0_14 = sin(20.000000 * (mat3x4(0.002288,0.062441,0.205284,-0.296985,0.041672,0.034033,0.021677,-0.048851,0.002424,0.578969,-0.018633,0.499596) * uv_0 + mat3x4(-0.022594,0.080016,-0.038636,-0.022976,-0.156132,0.035825,-0.083756,0.114749,-0.121822,0.014745,-0.097640,0.148553) * uv_1 + vec4(-0.037350,0.037447,-0.058192,0.030806)));\nvec4 L0_15 = sin(20.000000 * (mat3x4(0.210608,-0.006812,0.133717,0.020696,0.102814,-0.075679,-0.157408,-0.202710,-0.426786,0.007322,0.002113,0.662791) * uv_0 + mat3x4(-0.089330,0.030067,-0.078414,0.018881,-0.077630,-0.073374,0.171198,0.288938,-0.003034,-0.147496,0.109274,-0.113671) * uv_1 + vec4(0.018831,0.000799,-0.131221,0.245841)));\nvec4 L1_0 = sin((mat4(0.158525,0.063818,-0.194332,-0.297824,0.003830,-0.005438,0.203439,0.006744,0.212466,-0.002844,-0.003575,-0.014768,0.046003,-0.021541,-0.003400,-0.017324) * L0_0 + mat4(0.022698,0.024146,-0.026077,-0.009541,-0.154123,-0.222978,0.090125,0.437152,-0.496386,-0.078063,0.499044,0.079943,-0.308496,-0.077080,0.032154,0.746451) * L0_1 + mat4(0.568722,0.493496,-0.101984,-0.346091,-0.207215,-0.012382,0.317363,0.254446,0.203201,-0.323016,0.164377,-0.009799,0.014115,-0.009056,-0.181012,0.043986) * L0_2 + mat4(0.235760,0.338913,-0.513518,-0.090750,-0.270515,0.025582,0.100372,-0.285405,0.201467,-0.097093,-0.308016,0.274894,-0.096745,0.264853,-0.226055,-0.311129) * L0_3 + mat4(-0.175924,-0.046000,-0.637075,-0.336775,-0.006667,-0.002678,-0.026043,-0.016875,0.021361,0.014726,-0.008950,-0.009483,0.191631,-0.088811,0.135052,0.012952) * L0_4 + mat4(-0.019174,0.018720,0.020917,-0.042832,-0.033032,0.000248,-0.079459,-0.071655,-0.004755,-0.015289,0.172880,-0.005223,-0.081569,-0.012629,0.151358,0.092552) * L0_5 + mat4(-0.376031,-0.228091,0.209431,0.168314,0.143024,-0.091748,-0.275024,-0.268205,0.545538,0.554588,0.007002,-0.478392,-0.111909,-0.283180,-0.315245,-0.312679) * L0_6 + mat4(-0.447441,0.036421,-0.074705,-0.270137,-0.054241,0.024528,0.003621,-0.026697,-0.148315,0.036238,0.221217,-0.223616,-0.006939,-0.002137,-0.028330,-0.016482) * L0_7 + mat4(0.010307,0.003656,0.032992,0.015164,-0.032387,-0.010279,0.061289,0.091481,0.122948,-0.010649,-0.067967,-0.244389,0.119613,-0.036512,0.029151,-0.215385) * L0_8 + mat4(0.147559,-0.117825,-0.252099,0.046599,-0.007566,-0.000317,-0.038173,-0.018156,-0.499563,-0.384767,0.175738,0.179115,-0.004733,-0.306477,-0.439090,-0.112518) * L0_9 + mat4(0.006436,0.002796,0.025911,0.017301,-0.539699,-0.311877,0.540404,0.037758,0.002284,-0.003936,0.043703,0.027136,-0.494099,0.377995,1.018068,-0.162480) * L0_10 + mat4(1.394897,0.457654,-0.319698,0.103973,0.014215,0.014509,0.099575,0.018319,0.007354,0.002874,0.027025,0.016625,0.004247,-0.001259,0.040868,0.020459) * L0_11 + mat4(-0.007032,0.004718,0.159616,0.068533,0.200048,0.021280,0.191806,-0.265460,0.008390,0.000886,0.038984,0.017008,0.021120,-0.005582,0.036590,-0.006451) * L0_12 + mat4(0.140657,0.029318,-0.077063,0.105004,0.072774,0.023698,0.198386,0.234442,0.006812,0.002798,0.027038,0.017228,-0.031600,0.051092,0.027434,0.092316) * L0_13 + mat4(-0.159028,-0.119908,-0.220238,0.091891,0.194154,0.064874,-0.313867,0.029716,0.595422,0.329394,-0.321713,-0.106338,0.147464,-0.215524,-0.701774,-0.143680) * L0_14 + mat4(0.594663,-0.145350,-0.024539,0.016645,-0.006426,0.047382,-0.049457,-0.009919,0.448539,0.356887,0.394146,0.595351,-0.045388,-0.001848,-0.199095,-0.071964) * L0_15 + vec4(0.738041,0.022455,-0.764934,-0.788592)));\nvec4 L1_1 = sin((mat4(-0.122954,0.118594,-0.138986,-0.147012,-0.071467,-0.156445,-0.047941,-0.148993,-0.279516,0.294897,0.370281,-0.050121,-0.014649,0.006090,0.001699,-0.180396) * L0_0 + mat4(0.024675,-0.001491,0.010205,-0.005763,-0.325110,-0.457059,0.232363,0.225757,-0.668732,0.105577,0.287346,0.034948,0.677300,-0.195921,-0.274519,0.038301) * L0_1 + mat4(0.469269,0.399548,-0.226381,-0.291975,-0.177559,-0.189568,0.231519,0.011239,-0.062024,-0.159261,-0.313467,-0.025532,-0.016596,-0.061246,0.025920,0.005798) * L0_2 + mat4(-0.050909,-0.433582,-0.047812,0.084134,-0.608950,0.177779,0.076915,0.039708,0.361915,-0.028644,-0.415125,-0.302463,0.911499,-0.977574,-0.492667,0.701304) * L0_3 + mat4(0.249614,0.218369,0.106613,-0.442196,0.018224,0.013107,0.017367,0.030598,0.012685,0.002153,0.010809,0.010158,-0.260264,0.151182,-0.268378,0.138506) * L0_4 + mat4(0.031330,-0.004556,-0.019186,-0.016820,0.004405,0.043701,0.075866,0.104361,-0.011792,0.041194,-0.062283,0.005505,-0.048580,-0.064369,-0.092390,-0.132675) * L0_5 + mat4(-0.342956,-0.268599,0.272050,0.173440,0.511887,0.026846,-0.063064,0.109712,0.432825,0.335124,-0.509503,-0.229504,0.230463,0.247578,-0.223305,-0.485088) * L0_6 + mat4(-0.166374,0.103786,-0.285560,-0.157968,0.048647,0.013905,-0.002276,-0.012356,0.080250,-0.190001,0.107318,-0.001603,0.018116,0.013594,0.017056,0.030881) * L0_7 + mat4(-0.016829,-0.015633,-0.016138,-0.032070,-0.030940,-0.021175,-0.075490,-0.081614,-0.013506,0.201678,0.349872,0.156871,0.006093,0.103363,0.045256,0.021755) * L0_8 + mat4(0.490430,-0.138660,0.067133,0.451444,0.021458,0.016410,0.018478,0.032414,-0.609058,-0.503226,0.524213,0.200769,0.642807,0.017058,-0.026082,-0.130270) * L0_9 + mat4(-0.018752,-0.012621,-0.017792,-0.030475,-0.760282,-0.152062,0.459963,0.202328,-0.021876,-0.019782,-0.025642,-0.033875,0.138477,0.175489,-0.153966,-0.654351) * L0_10 + mat4(0.620139,-1.601903,-2.541593,-2.037174,0.311840,-0.086097,-0.115688,-0.100705,-0.018111,-0.013157,-0.017329,-0.030858,-0.021077,-0.018017,-0.020389,-0.032351) * L0_11 + mat4(-0.007559,0.019473,-0.032768,-0.035636,0.370567,-0.229838,0.167624,0.045235,-0.020202,-0.017209,-0.018470,-0.032815,-0.002714,0.013672,0.012568,0.056642) * L0_12 + mat4(0.013106,0.042299,-0.097609,-0.038057,-0.501383,0.105675,-0.182679,-0.360636,-0.018618,-0.012646,-0.017770,-0.030510,-0.152089,-0.137545,0.008794,-0.160826) * L0_13 + mat4(0.515122,0.115228,0.192407,-0.008139,0.240550,-0.078974,0.001210,0.000669,0.658305,0.272976,-0.351671,-0.273342,-0.371222,0.321049,0.209043,0.131780) * L0_14 + mat4(0.162114,-0.222975,-0.228583,-0.147994,-0.033638,-0.013750,-0.011283,-0.025324,-0.057259,-0.452687,0.550175,-0.346094,0.092659,-0.057722,0.046696,0.000191) * L0_15 + vec4(0.640719,0.302098,-0.324578,-0.789523)));\nvec4 L1_2 = sin((mat4(-0.363009,0.182360,0.056514,-0.091945,0.131122,0.006091,0.010853,0.173814,0.297922,0.220093,0.223628,-0.082565,0.116485,-0.014969,0.045070,-0.065467) * L0_0 + mat4(-0.008245,0.003785,-0.016986,0.005275,0.109216,0.214574,0.205968,0.392178,0.062947,-0.034634,0.168320,0.210361,1.472259,0.445931,-0.939333,0.180041) * L0_1 + mat4(-0.229640,-0.257927,-0.611263,-0.493080,0.098618,0.119337,0.187201,0.366524,-0.010277,0.011492,0.112112,0.066543,-0.008467,-0.000393,0.065607,0.030473) * L0_2 + mat4(-0.423352,-0.081988,-0.119525,-0.071998,-0.281741,0.050128,0.091158,0.134599,-0.471653,0.375172,0.139787,0.158920,-1.034961,0.521010,0.304694,-0.480014) * L0_3 + mat4(-0.518055,0.073660,-0.313071,0.055258,-0.009343,-0.000049,-0.023349,-0.019282,0.008743,0.000704,0.001351,-0.024550,-0.215543,0.037808,-0.215780,0.071706) * L0_4 + mat4(-0.014256,-0.005854,0.006036,-0.052030,-0.055804,0.008986,-0.018025,-0.061054,-0.042344,0.017607,-0.042400,0.073183,0.078778,0.000760,0.012392,0.091773) * L0_5 + mat4(0.199396,0.243106,0.304259,0.361071,-0.243695,-0.049064,-0.175901,-0.270476,-0.221974,-0.257096,-0.497382,-0.426413,0.043561,0.100773,-0.485706,0.161878) * L0_6 + mat4(-0.441695,0.002571,0.164397,0.067379,0.000749,-0.015791,-0.007878,0.000070,0.097804,0.033908,0.054925,0.063653,-0.010847,0.000339,-0.023436,-0.020055) * L0_7 + mat4(0.013190,-0.000298,0.023325,0.020931,0.057445,-0.006241,0.045347,0.034965,-0.317213,0.065775,-0.005909,-0.091156,0.155647,-0.026483,-0.051378,-0.032845) * L0_8 + mat4(0.113580,0.055426,-0.246260,-0.099673,-0.015876,0.001533,-0.021694,-0.020543,0.326397,0.155500,0.297537,0.404122,-0.281232,-0.076653,-0.217475,0.158727) * L0_9 + mat4(0.009611,0.000056,0.023112,0.019151,0.351432,0.174608,0.043310,0.363721,0.019428,-0.002898,0.022367,0.019469,-0.646640,0.363584,0.877078,-0.250437) * L0_10 + mat4(2.786094,-3.501186,-0.798594,-0.676580,0.038065,0.038049,0.114008,-0.053254,0.009853,-0.000106,0.023086,0.019549,0.018066,-0.002198,0.021796,0.020222) * L0_11 + mat4(0.061478,-0.022844,0.009326,0.021690,0.065238,-0.189816,-0.063047,0.019594,0.016451,-0.001493,0.022011,0.021015,-0.004104,0.003786,-0.012658,0.042255) * L0_12 + mat4(0.025361,0.070664,-0.023974,0.044443,0.101452,-0.074107,0.275923,0.186199,0.009657,-0.000131,0.023174,0.019127,0.039552,0.023333,-0.044770,0.157208) * L0_13 + mat4(-0.268337,0.085664,-0.050157,0.140778,-0.225126,-0.034441,0.006507,0.014417,-0.336736,-0.160363,-0.304903,-0.378942,-0.288699,-0.033449,-0.416971,0.008770) * L0_14 + mat4(-0.211960,0.026775,-0.125148,0.051911,0.009907,0.002239,-0.011855,-0.034862,0.695742,-0.622494,0.398761,0.037221,0.020176,-0.035428,-0.059729,0.017067) * L0_15 + vec4(0.003776,-0.736578,-0.692550,-0.729763)));\nvec4 L1_3 = sin((mat4(0.012415,-0.197027,-0.038272,0.203616,0.004885,0.289843,-0.202360,-0.071789,-0.364969,-0.571411,-0.050995,0.080521,0.218885,0.178298,0.244025,0.145902) * L0_0 + mat4(0.014169,0.006982,-0.006379,-0.011930,0.106082,0.235176,-0.151389,0.175428,0.464449,0.010914,0.540370,0.074715,-0.560543,-0.566774,0.094756,-0.519982) * L0_1 + mat4(-0.353135,-0.220986,0.146492,-0.340400,0.228706,0.310596,0.117097,0.327710,-0.511336,-0.023616,-0.014656,0.131079,0.072701,0.197464,-0.126975,0.074381) * L0_2 + mat4(-0.375162,0.185828,-0.059231,-0.228184,0.612461,0.000326,0.454039,0.304015,0.568869,0.357219,0.007066,-0.108336,0.070767,0.362547,-0.200055,-0.200584) * L0_3 + mat4(-0.260405,-0.175670,-0.410019,-0.438386,-0.007682,-0.033925,0.004012,-0.000213,0.003714,0.045291,0.011158,-0.009406,-0.017806,-0.242715,-0.018589,-0.136689) * L0_4 + mat4(0.019229,-0.050176,-0.000452,-0.002885,-0.082105,-0.108837,0.029263,0.004819,0.077566,-0.098168,-0.037568,-0.034088,0.085917,0.166290,-0.125974,0.004731) * L0_5 + mat4(0.364375,0.022873,-0.018969,0.272815,-0.163798,-0.474837,-0.120053,-0.075367,-0.265060,0.051958,0.055685,-0.126080,-0.043791,-0.323539,-0.282454,-0.035202) * L0_6 + mat4(0.059656,0.203222,0.280189,0.015596,0.023903,0.092427,0.009869,0.007032,-0.498453,0.089532,0.000057,0.169520,-0.007853,-0.034671,0.002689,0.001294) * L0_7 + mat4(0.007542,0.036077,-0.004548,-0.002859,0.058495,0.100328,-0.034377,0.002463,-0.026903,-0.215242,-0.177774,-0.005677,-0.080652,-0.078404,0.258148,-0.218979) * L0_8 + mat4(-0.105011,-0.174500,-0.507133,-0.090998,-0.007881,-0.037193,0.004509,0.004311,0.540674,0.130510,0.101888,0.077860,-0.208597,0.181263,-0.051371,-0.317139) * L0_9 + mat4(0.008151,0.032964,-0.003217,0.000275,0.221848,0.033020,0.427525,0.076412,0.018165,0.042558,-0.006664,-0.007699,0.474212,0.827005,0.064281,-1.317964) * L0_10 + mat4(1.337682,-1.024109,0.775560,0.217022,-0.262292,0.367557,-0.030051,0.043481,0.008016,0.033657,-0.003549,-0.000522,0.011118,0.038247,-0.003470,-0.006043) * L0_11 + mat4(0.156601,-0.209287,0.078169,0.000855,-0.221042,-0.136978,0.293094,-0.226859,0.008501,0.036771,-0.003996,-0.004882,0.006121,0.022584,-0.018177,0.013028) * L0_12 + mat4(-0.298776,0.155326,0.010113,0.117195,0.304674,0.184100,0.038900,-0.000276,0.007817,0.033407,-0.002730,0.000331,0.122611,0.178729,-0.073808,0.116005) * L0_13 + mat4(-0.224915,-0.034076,0.050552,0.036414,0.181469,-0.335590,0.085961,0.199353,-0.251981,-0.204586,-0.050423,-0.193373,0.346074,0.003959,0.101899,0.283158) * L0_14 + mat4(-0.088713,0.491372,0.143895,-0.257818,0.009135,0.017259,0.026595,-0.035383,0.114387,0.324129,0.441282,-0.093953,0.010839,0.332048,0.009067,-0.032720) * L0_15 + vec4(-0.376841,-0.460174,-0.056460,-0.080922)));\nvec4 L1_4 = sin((mat4(-0.745887,0.030288,-0.104148,-0.269654,0.152798,-0.129881,-0.047803,-0.094749,0.289816,0.152952,0.186744,0.275609,-0.003521,-0.110307,0.114132,0.282269) * L0_0 + mat4(0.010746,-0.013853,-0.020257,-0.025159,0.245554,-0.111181,0.407559,0.110259,-0.490945,0.064626,-0.074063,-0.284709,-1.671258,-0.570977,-0.038107,1.194248) * L0_1 + mat4(-0.151058,-0.262574,-0.439179,-0.210064,-0.112843,0.128600,0.285986,-0.065244,-0.101934,0.381707,0.254930,-0.180142,0.008960,0.092849,0.021435,0.013120) * L0_2 + mat4(-0.115921,-0.218864,-0.406997,-0.273395,-0.529370,0.157568,-0.173945,-0.160264,-0.813444,0.250886,-0.546052,-0.427697,-0.275720,0.237508,0.113957,-0.496925) * L0_3 + mat4(0.518491,0.373780,0.157837,0.293440,0.008978,0.003738,-0.000660,0.032197,-0.025078,0.026931,-0.011536,0.014631,-0.378100,0.010465,0.107284,-0.061410) * L0_4 + mat4(0.003824,-0.007275,0.004189,-0.025360,0.084680,0.055360,0.056312,0.137228,-0.058249,-0.067420,-0.007188,0.191685,-0.045238,-0.053652,-0.055294,-0.146349) * L0_5 + mat4(0.216201,0.124929,0.367332,0.079582,0.105472,-0.067344,-0.052097,0.183678,-0.120385,-0.178553,-0.456602,-0.131670,0.174516,-0.049990,0.017535,0.244675) * L0_6 + mat4(-0.703449,0.125991,-0.041133,-0.261486,-0.024350,0.015426,-0.006725,-0.012119,0.030716,0.100836,0.054092,0.126980,0.009158,0.004205,0.000735,0.033570) * L0_7 + mat4(-0.010059,-0.003316,-0.005478,-0.035899,-0.064914,-0.039186,-0.025383,-0.119155,0.278450,-0.286388,-0.279060,0.361323,-0.087611,0.042365,-0.101841,0.129335) * L0_8 + mat4(0.598399,0.036769,0.250431,0.399175,0.009056,0.003994,0.007031,0.040037,0.222409,0.045980,0.401603,0.121606,0.242873,0.061218,-0.171163,0.359187) * L0_9 + mat4(-0.008716,-0.003593,0.000279,-0.031781,-0.001798,0.057865,0.165868,-0.079475,-0.011339,-0.010512,-0.010423,-0.049583,-1.452335,0.037728,0.870471,0.506657) * L0_10 + mat4(1.574884,2.356840,-1.609002,2.438494,0.071986,0.198752,0.035187,-0.152991,-0.009075,-0.003720,-0.000012,-0.032465,-0.009735,-0.006210,-0.008952,-0.043576) * L0_11 + mat4(-0.106066,-0.183449,-0.104951,0.112548,0.307631,0.064292,0.081537,0.440650,-0.009680,-0.003799,-0.008583,-0.040388,-0.019968,0.004728,0.016768,0.019917) * L0_12 + mat4(0.024919,0.076402,0.110395,-0.099691,-0.510693,0.098902,-0.166916,-0.374179,-0.008928,-0.004068,0.000292,-0.032298,0.091587,-0.080176,0.112562,-0.100789) * L0_13 + mat4(0.201018,0.125540,0.098353,0.197619,0.111002,0.023320,0.089059,0.182935,0.140689,-0.296834,-0.401389,-0.086885,0.643817,0.367327,0.063947,0.061725) * L0_14 + mat4(-0.319567,0.151346,0.112844,-0.403693,0.015392,-0.009574,-0.015608,-0.010877,0.563508,-0.351551,0.615555,0.389457,0.028075,0.082517,0.008920,-0.151472) * L0_15 + vec4(0.726295,0.208369,-0.456061,0.739179)));\nvec4 L1_5 = sin((mat4(-0.456796,0.085163,-0.122092,-0.116568,-0.273243,-0.018517,0.043412,-0.140100,0.159179,0.020239,-0.020680,0.284071,-0.062907,0.094804,0.130684,-0.080774) * L0_0 + mat4(-0.018006,0.022501,-0.023465,0.000370,-0.326697,0.109341,-0.386262,-0.007327,-0.454651,-0.094004,0.560728,0.186971,0.265163,0.006674,-0.660472,0.323913) * L0_1 + mat4(0.330370,0.142404,-0.142329,-0.255480,-0.521658,-0.116992,0.263101,0.012177,-0.247749,0.103545,-0.382156,0.218974,0.025454,-0.028192,0.103680,-0.033330) * L0_2 + mat4(0.339793,0.003641,0.866432,0.253056,-0.307570,0.196875,0.144709,-0.071876,-0.037543,0.270097,0.612605,-0.373587,1.642167,0.512031,-0.657097,-0.430929) * L0_3 + mat4(0.110794,0.138963,-0.275643,0.079485,0.035838,0.004901,-0.024049,0.004853,-0.002123,-0.019400,-0.008973,-0.000558,0.122766,0.208196,-0.185863,0.158213) * L0_4 + mat4(-0.011093,0.004106,0.047974,0.006221,0.130090,0.014749,-0.208026,0.064736,-0.057104,-0.019616,-0.015700,0.003985,-0.188298,-0.005740,0.232681,-0.071178) * L0_5 + mat4(-0.373233,-0.219777,0.175295,0.161636,0.458085,0.184169,-0.447879,-0.068752,0.354926,0.276800,-0.204373,-0.049332,0.229663,0.477926,-0.170927,-0.008898) * L0_6 + mat4(-0.365670,0.097126,-0.323367,-0.196442,-0.001391,-0.009008,0.014148,0.002389,0.043485,0.133128,0.136494,-0.106139,0.035809,0.005444,-0.026251,0.005438) * L0_7 + mat4(-0.038097,-0.007714,0.032374,-0.007627,-0.107857,-0.015002,0.179873,-0.031632,-0.027135,0.012872,0.404905,0.059134,-0.008947,-0.166869,-0.481530,0.052889) * L0_8 + mat4(0.506180,0.116632,-0.340023,0.164191,0.040018,0.007768,-0.039689,0.008894,-0.281794,-0.074901,0.112800,0.244222,0.297772,0.563041,0.184078,-0.173997) * L0_9 + mat4(-0.035142,-0.004408,0.022338,-0.004561,-0.369469,-0.179111,0.642970,0.217429,-0.048041,-0.009772,0.065264,-0.014261,0.131694,1.148283,-0.140893,-0.104215) * L0_10 + mat4(-1.800708,-1.960645,-1.176811,-1.980583,0.064777,0.177148,-0.688406,0.085231,-0.035744,-0.004898,0.024569,-0.005019,-0.042313,-0.009073,0.049835,-0.010990) * L0_11 + mat4(-0.144472,0.076524,-0.511633,-0.021121,0.042820,-0.125937,0.113913,0.161056,-0.040541,-0.008531,0.040189,-0.009588,-0.005951,-0.023092,-0.021900,-0.012875) * L0_12 + mat4(0.082207,0.130312,-0.180729,-0.051261,-0.468045,-0.156711,0.417921,-0.120598,-0.035531,-0.004559,0.023510,-0.004467,-0.255723,0.003140,0.077671,0.061215) * L0_13 + mat4(0.307636,0.197324,-0.267103,0.059403,0.007044,-0.006696,-0.404064,0.022957,0.455149,0.288287,-0.266383,-0.211679,0.025121,-0.142111,0.580724,-0.168442) * L0_14 + mat4(0.086629,0.271508,-0.376208,-0.108186,0.011151,0.018404,0.039720,0.010073,-0.296166,-0.087694,-0.857427,0.380204,-0.038710,0.009142,0.287246,0.004168) * L0_15 + vec4(0.315876,0.172312,-0.706036,-0.255485)));\nvec4 L1_6 = sin((mat4(-0.170972,0.000715,-0.566305,0.248885,-0.274468,-0.005628,-0.131101,0.162827,-0.021265,0.305305,0.190431,0.011765,-0.152778,0.088080,-0.042868,-0.069613) * L0_0 + mat4(-0.017860,-0.009596,0.012028,0.025152,-0.021316,0.082235,0.244175,0.023547,0.216019,0.021807,0.047327,0.023617,-0.619134,-0.414418,-0.505514,0.087567) * L0_1 + mat4(-0.301701,0.561777,-0.189458,0.314115,-0.061344,-0.319271,-0.048960,0.096344,-0.096976,-0.010769,-0.159452,-0.035696,0.087006,-0.146446,0.083314,-0.006891) * L0_2 + mat4(0.161123,0.065181,0.707852,0.327230,0.050963,0.087437,-0.138965,-0.015488,0.500097,-0.216248,-0.189422,0.170840,-0.281172,0.303445,-0.185971,0.697757) * L0_3 + mat4(-0.366124,0.017973,-0.123619,-0.168167,0.011446,0.021364,0.004555,-0.007772,-0.000265,0.024601,-0.031405,0.002034,0.027188,0.201314,-0.093723,0.073752) * L0_4 + mat4(-0.017397,0.009328,-0.025965,-0.028228,0.014155,0.075748,0.079913,-0.035890,-0.092563,-0.069734,-0.025361,-0.017419,-0.029685,-0.056672,-0.098864,0.050610) * L0_5 + mat4(0.036429,-0.162853,0.080772,0.114201,0.085672,0.303808,0.105347,-0.043530,-0.344015,0.462074,0.081127,0.220304,-0.077646,0.213059,0.138958,0.243313) * L0_6 + mat4(-0.319368,-0.140646,-0.611492,-0.134087,-0.026184,0.024104,-0.010525,0.008164,-0.016095,0.227053,0.029069,0.032924,0.010454,0.020937,0.004624,-0.006685) * L0_7 + mat4(-0.010114,-0.018351,-0.000780,0.004011,0.001016,-0.102652,-0.062121,0.033716,-0.427708,0.086746,-0.218748,0.236969,0.217513,-0.266755,-0.006668,-0.019464) * L0_8 + mat4(0.141267,0.275986,0.574819,-0.118796,0.011017,0.019133,0.001086,-0.001893,0.330794,-0.399334,0.116084,-0.278157,0.188024,0.302612,0.114561,0.208186) * L0_9 + mat4(-0.011595,-0.021461,-0.005098,0.008831,0.530688,-0.238983,0.144670,0.202369,-0.011382,-0.029791,-0.012593,0.002686,0.106095,0.691402,0.491847,-0.327413) * L0_10 + mat4(0.636924,1.306638,0.998239,-0.016569,-0.165177,0.228963,0.231282,0.037973,-0.011271,-0.020824,-0.004420,0.007474,-0.011281,-0.021884,-0.004614,0.001278) * L0_11 + mat4(-0.170850,-0.209108,-0.106457,-0.042868,0.147576,-0.039701,-0.203537,-0.216981,-0.010189,-0.019158,-0.001302,0.002278,0.007933,0.026583,0.003245,-0.000747) * L0_12 + mat4(-0.012947,-0.114722,0.369615,0.008827,0.048543,-0.311883,-0.383421,0.175587,-0.011418,-0.021824,-0.005089,0.008279,-0.203148,-0.028992,-0.053509,0.020677) * L0_13 + mat4(-0.359625,0.031241,0.104055,0.077240,-0.009101,-0.045292,0.163828,0.004011,-0.390002,0.461005,0.082345,-0.127833,0.301991,-0.169993,-0.197588,-0.102052) * L0_14 + mat4(-0.114444,0.089753,-0.095706,-0.039854,-0.038626,-0.006250,-0.026935,-0.005911,-0.406512,-0.025379,0.717528,-1.053485,0.108817,-0.134545,0.004544,0.021092) * L0_15 + vec4(-0.063639,0.895235,0.130841,-0.041390)));\nvec4 L1_7 = sin((mat4(0.063112,0.530353,-0.153639,0.547635,-0.223786,-0.094238,-0.365808,0.038675,0.316195,0.011838,-0.002164,0.014601,-0.068079,0.040917,-0.022692,-0.290724) * L0_0 + mat4(0.029374,-0.043679,-0.030380,-0.019857,-0.170790,-0.421007,-0.753245,-0.263930,-0.037267,0.547580,0.230225,0.280020,0.515061,0.477018,-0.403769,-1.164747) * L0_1 + mat4(-0.184676,0.435376,0.529219,0.052538,-0.189540,-0.189527,-0.125232,0.099890,0.007030,0.088877,0.069174,0.131026,-0.059465,-0.065580,0.025297,0.004261) * L0_2 + mat4(-0.094334,0.154855,0.639896,0.216134,0.080517,0.530581,0.186390,0.367414,0.208637,0.384672,0.187050,0.477976,-0.440900,0.801029,0.642565,0.450347) * L0_3 + mat4(-0.184510,-0.217043,0.105780,-0.440229,0.030084,0.003831,0.019318,-0.018209,0.001897,0.004635,0.015976,-0.016005,0.000731,-0.119395,0.034798,0.427438) * L0_4 + mat4(0.018591,0.009856,-0.009180,-0.019063,0.064762,0.038803,0.035857,-0.130079,0.003789,-0.015632,-0.024593,0.036521,-0.132911,-0.091420,-0.129027,0.091844) * L0_5 + mat4(-0.098273,-0.255882,-0.338973,-0.077949,0.308784,-0.024104,0.245796,-0.185223,-0.001648,0.274161,0.417523,0.153162,-0.017023,-0.179021,0.383245,-0.380433) * L0_6 + mat4(-0.126130,0.676297,0.135587,0.475318,-0.012448,-0.010743,0.018733,-0.013622,-0.072448,-0.013010,-0.195166,-0.018609,0.029178,0.004086,0.019394,-0.018875) * L0_7 + mat4(-0.027680,-0.002709,-0.018886,0.021188,-0.081126,-0.058054,-0.029501,0.073710,0.180375,0.210158,-0.096512,-0.135610,0.043745,-0.023504,0.125220,0.149017) * L0_8 + mat4(0.195041,-0.480309,-0.179709,-0.548574,0.027954,0.005634,0.020796,-0.021062,0.121631,-0.282609,-0.480522,-0.146256,0.199370,-0.256696,0.373907,-0.277061) * L0_9 + mat4(-0.029947,-0.004639,-0.019240,0.017877,0.115980,0.256894,-0.097602,0.007755,-0.032292,-0.015215,-0.025528,0.030984,-0.673813,-1.286199,0.323016,1.405158) * L0_10 + mat4(0.800699,-2.860538,2.522786,-2.345660,-0.068099,0.014121,-0.215091,0.126383,-0.029954,-0.003634,-0.019323,0.018601,-0.027925,-0.009102,-0.020719,0.024291) * L0_11 + mat4(0.050674,0.053293,-0.161998,-0.110850,0.216651,-0.194550,0.221353,-0.163095,-0.027665,-0.005844,-0.020699,0.022011,-0.027730,-0.016947,0.023824,-0.006609) * L0_12 + mat4(0.060616,-0.085760,0.093499,0.093774,-0.303137,0.190250,-0.017117,0.490882,-0.030216,-0.004572,-0.019836,0.017494,-0.132922,-0.072903,-0.243248,0.062415) * L0_13 + mat4(-0.017171,-0.176132,0.278345,-0.630932,0.113223,-0.057733,0.005888,-0.053788,-0.069069,-0.020630,0.111733,-0.098995,-0.110450,0.031354,0.322553,0.028603) * L0_14 + mat4(-0.008951,0.244886,-0.118179,0.321191,0.045532,0.024752,0.000148,-0.023980,-0.768881,-0.839761,-0.039511,-0.615004,-0.006526,-0.105880,0.040008,-0.000637) * L0_15 + vec4(0.444820,-0.331171,0.941534,-1.096868)));\nvec4 L1_8 = sin((mat4(0.322315,0.119188,-0.107054,-0.126280,0.108368,-0.256295,0.021056,0.283956,-0.311878,-0.254241,-0.421400,0.098167,-0.001903,0.046768,0.058068,-0.103748) * L0_0 + mat4(-0.027650,0.020598,0.035948,0.018270,-0.054752,-0.543305,-0.231806,0.533446,-0.202633,-0.162325,0.323326,0.015431,-0.019249,-0.385201,1.097614,0.301204) * L0_1 + mat4(0.624396,0.571987,0.184194,-0.443895,-0.073130,-0.488478,0.077983,0.267388,0.225429,-0.082629,0.178468,0.201825,-0.063809,-0.087569,-0.075562,0.039367) * L0_2 + mat4(0.224179,-0.130365,-0.087456,0.337802,-0.163267,-0.019407,0.303118,-0.207414,0.021525,0.496870,0.470721,0.022401,0.027134,-1.080927,0.213677,-0.770067) * L0_3 + mat4(-0.132809,0.507420,0.406794,0.008986,-0.003525,0.017537,-0.009009,-0.025845,0.008857,-0.005144,-0.000986,-0.009598,0.030359,0.064704,0.049641,-0.009065) * L0_4 + mat4(-0.002684,-0.004882,0.014318,-0.003023,-0.070630,0.088121,-0.070302,-0.098959,-0.012002,-0.017754,-0.021033,-0.019902,0.090811,-0.137492,0.059807,0.130510) * L0_5 + mat4(-0.249686,-0.484068,-0.003468,0.267867,0.121776,0.561251,-0.203135,-0.225783,0.739797,0.508952,-0.141604,-0.398394,-0.009957,0.654464,0.228118,0.025832) * L0_6 + mat4(0.241977,-0.052576,-0.130931,-0.213218,0.015422,-0.009193,0.007546,0.001694,0.070217,0.051006,-0.078814,0.028529,-0.005401,0.018298,-0.008961,-0.027106) * L0_7 + mat4(0.007114,-0.018083,0.010286,0.029103,0.037609,-0.090929,0.044201,0.072261,-0.046412,0.000555,-0.088634,-0.115684,-0.299846,0.127482,0.073120,0.057425) * L0_8 + mat4(0.107025,0.277564,-0.368582,-0.088087,-0.006698,0.022799,-0.010643,-0.030237,-0.457671,-0.520875,-0.233885,0.329228,-0.063563,0.772252,0.303820,0.183228) * L0_9 + mat4(0.003806,-0.017472,0.009053,0.026248,-0.300187,-0.269435,0.133488,0.073568,0.007366,-0.035284,0.012850,0.036305,-0.020810,0.661047,0.316281,-0.839882) * L0_10 + mat4(1.384150,1.556086,0.926889,-1.434679,-0.017229,0.154434,0.005885,0.030620,0.004222,-0.017599,0.009075,0.026313,0.008518,-0.027144,0.011226,0.032844) * L0_11 + mat4(-0.063902,-0.000252,0.113077,-0.059628,-0.166869,0.011907,-0.036560,-0.032552,0.008184,-0.022771,0.010857,0.031325,-0.025678,-0.008332,-0.006814,-0.012210) * L0_12 + mat4(-0.104913,-0.138351,-0.134368,0.204397,0.163697,-0.232821,0.358212,0.057432,0.003903,-0.017853,0.008733,0.025989,0.062470,-0.237658,0.041406,0.087391) * L0_13 + mat4(0.211428,0.558974,0.187348,0.195279,-0.026991,-0.167670,-0.121178,0.192123,0.664253,0.366049,-0.058119,-0.194120,0.022910,-0.172260,-0.330687,0.100252) * L0_14 + mat4(0.051221,0.331151,0.113237,-0.236199,-0.003543,0.018377,0.013539,0.004644,0.166647,-0.091484,0.017172,0.592474,-0.033552,-0.075470,-0.038620,0.001178) * L0_15 + vec4(0.551949,1.402720,0.577353,-0.862106)));\nvec4 L1_9 = sin((mat4(0.072253,-0.155916,0.068630,0.064324,0.013134,-0.187010,0.045880,-0.262149,-0.271008,-0.510342,0.355593,-0.227659,-0.135152,-0.031137,-0.080727,-0.017993) * L0_0 + mat4(-0.023818,0.007864,0.010630,-0.005853,0.137256,-0.313735,-0.023082,-0.618823,-0.361095,-0.384309,0.171434,-0.124975,-0.365737,-0.318144,-0.484060,-0.158583) * L0_1 + mat4(-0.053083,0.101251,0.030682,0.715237,-0.026709,0.006141,0.343989,-0.395627,0.092392,-0.295984,0.461709,0.073421,-0.043104,-0.007662,-0.044481,0.006116) * L0_2 + mat4(0.045655,0.476640,0.133623,0.231570,-0.301222,-0.260105,-0.018477,0.011048,0.753646,0.170640,0.142998,0.135591,-0.982119,0.486947,1.026014,0.590837) * L0_3 + mat4(0.241791,0.153350,-0.271032,0.047589,-0.007007,0.020729,-0.017500,0.033045,0.019941,0.024891,0.027335,-0.007480,0.118199,-0.216901,0.023882,0.155454) * L0_4 + mat4(0.025230,-0.002722,-0.005846,0.007847,-0.035081,-0.002789,-0.028722,0.089879,0.079929,0.010980,-0.108023,0.058526,-0.009971,-0.026706,0.038540,-0.162911) * L0_5 + mat4(-0.022594,-0.224560,0.170169,-0.452734,0.129332,0.188714,-0.256252,0.273684,-0.114635,0.202651,0.053811,0.548989,0.106963,0.188063,0.035821,0.060111) * L0_6 + mat4(-0.135788,-0.296814,-0.225565,0.002724,0.019989,-0.010041,0.000889,0.008870,0.052047,0.125503,-0.006037,-0.006841,-0.006209,0.019389,-0.018111,0.032522) * L0_7 + mat4(0.005246,-0.014993,0.019793,-0.033011,0.020053,-0.008361,0.025519,-0.079483,-0.322091,-0.002619,-0.390789,0.097529,-0.034589,-0.279663,0.421625,-0.106495) * L0_8 + mat4(0.109019,0.122254,-0.121059,0.069095,-0.003037,0.010363,-0.021137,0.033980,0.143581,-0.082509,-0.081969,-0.688447,-0.203325,0.244284,-0.220648,0.083257) * L0_9 + mat4(0.007375,-0.021457,0.017696,-0.032908,-0.330478,-0.110546,0.390838,-0.336700,0.003198,-0.009553,0.022936,-0.039777,-0.428036,-0.204068,0.571433,0.397850) * L0_10 + mat4(-0.847337,-0.860525,-0.818784,-2.402725,-0.029742,-0.238552,0.029290,0.066850,0.006798,-0.021094,0.017677,-0.032865,0.003169,-0.010278,0.022123,-0.035192) * L0_11 + mat4(0.001496,0.070220,-0.027952,0.049922,-0.029858,0.189313,-0.005736,-0.052219,0.003380,-0.010411,0.021742,-0.034209,-0.015930,-0.012722,-0.007511,0.003715) * L0_12 + mat4(0.019524,0.098298,0.082163,-0.065062,-0.030421,-0.029707,-0.027866,-0.180320,0.007065,-0.020683,0.017612,-0.032946,-0.050608,-0.192545,0.060885,-0.207559) * L0_13 + mat4(0.303750,-0.107784,0.124559,0.411480,0.048353,0.114889,-0.285993,0.009976,0.224290,0.220086,-0.407999,0.442572,-0.098089,0.019695,-0.182119,-0.011092) * L0_14 + mat4(0.071089,-0.147492,0.018910,0.094042,-0.005619,0.018270,0.014369,0.001663,0.008957,-0.023580,0.348052,-0.132562,-0.143321,0.011904,0.091762,-0.065637) * L0_15 + vec4(-0.379484,0.282234,0.075205,0.131147)));\nvec4 L1_10 = sin((mat4(0.121924,0.086633,-0.261059,-0.210389,0.195172,0.338770,-0.046503,-0.303006,-0.191741,0.077713,-0.243915,-0.238992,0.051821,-0.070890,0.112154,-0.129087) * L0_0 + mat4(-0.004797,0.001048,-0.027893,-0.007445,0.368673,0.562684,-0.260769,-0.357869,-0.467326,-0.074886,0.056709,0.219046,-0.103287,0.238407,-0.916688,0.082645) * L0_1 + mat4(0.144568,-0.217605,0.376574,0.236934,0.357486,0.378267,-0.233114,0.032043,-0.087289,0.371428,-0.281632,-0.110100,0.048655,0.034482,0.023281,0.004398) * L0_2 + mat4(-0.074428,-0.350800,-0.384415,0.287507,-0.315946,0.096895,-0.126083,0.264313,-0.196320,0.076817,-0.312053,0.224603,0.134949,-0.212570,0.476239,-0.166788) * L0_3 + mat4(-0.111695,-0.070502,0.295673,0.005559,-0.009911,-0.025593,-0.007013,0.016411,0.039783,0.022014,0.000036,-0.008550,-0.065908,0.081178,-0.255684,0.068984) * L0_4 + mat4(0.010286,0.001762,-0.022644,0.000958,-0.067599,-0.077997,0.012182,0.116759,-0.026755,-0.000607,-0.135736,-0.023971,0.090832,0.180334,-0.005090,-0.113001) * L0_5 + mat4(0.154179,0.442483,-0.337767,-0.055407,-0.415423,-0.325010,-0.018618,0.066321,0.060838,-0.445582,0.130642,0.223252,-0.241614,-0.347967,-0.069826,-0.131386) * L0_6 + mat4(-0.151117,-0.099192,0.122594,0.002952,0.036376,0.004511,0.004756,-0.024862,0.002286,0.129387,-0.014901,-0.007873,-0.009612,-0.026334,-0.005626,0.018058) * L0_7 + mat4(0.011073,0.026745,0.002705,-0.024734,0.053487,0.091363,0.010441,-0.049848,-0.273399,-0.178609,-0.228414,-0.505064,0.049015,0.130103,0.077123,-0.073091) * L0_8 + mat4(-0.006234,0.068215,-0.101786,0.036330,-0.011754,-0.030135,0.000233,0.026177,-0.047386,0.416664,-0.332122,-0.344178,-0.161995,0.061958,0.199397,-0.463893) * L0_9 + mat4(0.009653,0.025791,0.007246,-0.016093,-0.399877,0.138729,-0.125614,0.106738,0.018466,0.041036,0.000315,-0.029817,0.011861,-0.525250,-0.408769,-0.492969) * L0_10 + mat4(-0.253519,3.124545,1.064916,2.048577,-0.020911,-0.054287,0.048022,0.144837,0.009540,0.025559,0.006728,-0.017004,0.013568,0.033381,-0.001022,-0.028365) * L0_11 + mat4(0.012032,0.034705,0.025520,-0.028648,-0.075147,-0.189689,0.478078,0.035961,0.012169,0.030331,-0.000636,-0.028396,0.014505,-0.000179,0.017336,0.005730) * L0_12 + mat4(0.136848,0.050359,0.003873,0.046688,0.141622,0.237532,0.000152,-0.117203,0.009470,0.025859,0.006948,-0.016151,0.150664,0.176414,-0.102899,0.025679) * L0_13 + mat4(-0.015651,-0.018543,0.320558,-0.149301,-0.045863,-0.046301,0.129236,0.065013,0.215788,-0.146455,0.233532,-0.249714,0.014693,-0.147492,0.416150,-0.177595) * L0_14 + mat4(-0.058836,-0.230558,-0.127893,0.214122,0.022321,0.002565,-0.027113,-0.000613,-0.634775,0.018998,0.108461,-0.467997,-0.026954,0.016006,0.040291,0.055718) * L0_15 + vec4(-0.285069,-0.192878,0.757357,0.277977)));\nvec4 L1_11 = sin((mat4(0.077150,0.002731,0.197751,-0.053031,0.158283,-0.062867,0.034877,-0.063209,-0.207803,-0.117908,-0.416328,0.298352,-0.208007,0.087721,-0.018309,0.170244) * L0_0 + mat4(-0.002029,0.001524,-0.006739,-0.019614,-0.108109,-0.039228,-0.252494,-0.243211,0.426746,-0.157668,0.131360,0.015353,1.016403,0.050328,1.320395,-0.696897) * L0_1 + mat4(0.253240,0.022287,0.178214,0.292726,-0.010268,-0.032357,-0.018711,-0.052403,0.089896,0.127827,0.156992,0.263137,-0.014936,0.009796,0.000903,-0.045679) * L0_2 + mat4(-0.519644,-0.106020,-0.121289,-0.176973,0.364497,-0.050895,0.129572,0.062922,-0.378591,0.259671,0.319279,-0.266312,0.632495,0.044763,0.018445,-0.779285) * L0_3 + mat4(-0.335227,-0.171780,0.061157,-0.015405,-0.026383,0.001865,-0.020962,0.009480,-0.004832,-0.000143,-0.004185,0.002294,-0.025698,-0.140458,0.147159,0.014309) * L0_4 + mat4(0.013681,0.005387,0.004005,-0.009581,-0.035442,0.001500,-0.056600,0.043869,-0.099746,-0.008379,0.032394,0.076604,0.040108,-0.007723,0.068524,-0.081178) * L0_5 + mat4(-0.091314,-0.047061,-0.102828,-0.192676,-0.239215,0.062037,-0.026690,0.131690,0.218200,0.047437,0.142442,0.401529,-0.157462,-0.141418,-0.288026,-0.116150) * L0_6 + mat4(0.316699,-0.019745,0.261922,-0.125410,0.002659,0.007769,-0.011234,-0.020113,-0.139860,0.038023,-0.047064,0.101904,-0.026467,0.001733,-0.020792,0.008014) * L0_7 + mat4(0.028897,-0.001327,0.019322,-0.007964,0.026096,-0.004172,0.055898,-0.025814,0.149415,-0.097502,-0.195751,0.025565,-0.232179,0.039903,0.078674,-0.089444) * L0_8 + mat4(-0.520306,0.040583,-0.226646,-0.131136,-0.031331,0.001457,-0.019517,0.006968,-0.154178,-0.109093,-0.222527,-0.342231,-0.182250,-0.012389,-0.164425,0.157468) * L0_9 + mat4(0.026280,-0.001760,0.021167,-0.009809,0.154761,-0.214270,-0.102085,0.073688,0.032512,-0.002361,0.024315,-0.008612,0.532380,-0.262712,-0.676638,0.365968) * L0_10 + mat4(-1.169889,-3.359652,-2.807212,0.171563,0.055967,0.047219,-0.142254,0.081519,0.026510,-0.001745,0.021049,-0.009833,0.031479,-0.001515,0.020657,-0.006730) * L0_11 + mat4(-0.148113,0.016257,0.087402,0.165069,-0.161603,0.058098,0.109579,0.020508,0.031716,-0.001213,0.019432,-0.006940,-0.010336,-0.009439,0.004130,-0.030075) * L0_12 + mat4(0.082065,0.059033,-0.035821,-0.056179,0.282106,-0.021212,0.275581,0.038799,0.026684,-0.001848,0.021081,-0.009497,0.025672,-0.027465,0.038500,-0.096832) * L0_13 + mat4(-0.091545,-0.229556,-0.069430,-0.090686,0.235519,0.012118,0.147091,-0.045072,-0.005958,0.054185,0.007117,0.176032,-0.235412,0.070320,0.027620,0.121933) * L0_14 + mat4(0.189214,0.079849,-0.170412,0.012201,-0.011257,-0.003736,-0.000649,-0.001184,0.575415,-0.057453,-0.285812,0.034791,0.044065,-0.009408,0.039431,0.045638) * L0_15 + vec4(-0.411265,-0.279259,-0.832251,0.372173)));\nvec4 L1_12 = sin((mat4(-0.337156,0.528591,-0.237957,-0.252584,-0.130101,0.267681,-0.236609,-0.129247,-0.246726,-0.329086,0.260363,-0.069154,0.041486,0.217545,0.095548,-0.026482) * L0_0 + mat4(0.001753,0.011156,-0.008699,0.039209,-0.390731,0.252091,-0.240624,-0.284868,-0.218821,0.330813,-0.230319,-0.369886,-0.870088,-0.340008,0.021538,1.372034) * L0_1 + mat4(0.564100,-0.191626,0.483392,0.378303,-0.330824,0.321416,-0.081011,-0.256730,-0.084046,0.621068,0.082304,-0.303015,-0.054643,-0.027390,0.054265,-0.001842) * L0_2 + mat4(0.039334,-0.132416,-0.092975,-0.054523,0.213165,0.495953,-0.100975,-0.198433,0.050050,0.814623,0.030533,-0.422757,-0.652147,1.200754,0.184742,-0.543957) * L0_3 + mat4(0.259993,-0.325995,0.393614,0.619165,0.006758,-0.034837,0.029726,0.018260,-0.009270,0.051112,0.005388,-0.035287,0.087887,-0.073711,-0.475513,0.539204) * L0_4 + mat4(-0.008023,-0.003294,0.001498,-0.032152,0.050808,-0.106033,0.119405,0.048465,0.064218,0.132336,-0.064332,0.268956,-0.048949,0.216701,-0.136479,-0.120564) * L0_5 + mat4(-0.514561,0.408624,-0.264414,-0.433582,0.185385,-0.191170,0.197088,0.256424,0.470534,-0.183271,0.336931,0.095466,0.511579,-0.449028,-0.034568,0.799797) * L0_6 + mat4(-0.111145,0.619353,-0.258391,-0.058251,-0.009761,0.025726,-0.003817,0.003736,-0.021428,-0.101697,0.068502,-0.185728,0.007135,-0.034146,0.029240,0.017595) * L0_7 + mat4(-0.009597,0.033876,-0.030463,-0.016241,-0.022539,0.103846,-0.098370,-0.062992,-0.334435,-0.082817,-0.123148,0.066164,-0.142152,-0.042077,-0.051021,0.170381) * L0_8 + mat4(0.120271,-0.280912,0.247918,0.107222,0.009919,-0.036390,0.033739,0.018945,-0.507363,0.394388,-0.432636,-0.414588,0.116602,-0.413005,0.425660,0.533478) * L0_9 + mat4(-0.006423,0.034129,-0.029357,-0.019288,-0.211549,0.276114,-0.039550,-0.544629,-0.010880,0.043500,-0.041529,-0.023528,0.630915,-0.203071,-0.385168,-0.995191) * L0_10 + mat4(2.800735,-2.498921,-2.801781,0.836995,0.077918,0.163921,-0.105270,0.118033,-0.006704,0.034059,-0.029357,-0.017842,-0.010626,0.038216,-0.035087,-0.020513) * L0_11 + mat4(0.086655,0.186816,-0.031138,0.253595,-0.099883,-0.494851,0.101353,0.375135,-0.010229,0.036850,-0.033320,-0.018416,-0.002682,-0.012335,0.009474,-0.017978) * L0_12 + mat4(0.059578,-0.019709,-0.094449,-0.028759,-0.161118,0.395540,-0.287936,-0.208048,-0.006528,0.034375,-0.029393,-0.019096,-0.184696,0.286494,-0.313222,-0.181601) * L0_13 + mat4(0.418428,-0.165255,0.336020,0.775628,-0.016749,0.019056,-0.053706,-0.037887,0.420659,-0.216479,0.237483,0.260281,0.153713,0.599638,0.022016,0.067519) * L0_14 + mat4(0.189034,-0.349849,-0.153316,0.123195,-0.000190,0.008655,-0.005488,0.015180,0.526427,-1.230642,-0.274343,0.624500,-0.085318,-0.142088,-0.039831,-0.021174) * L0_15 + vec4(1.056908,-0.797074,-0.015662,1.051477)));\nvec4 L1_13 = sin((mat4(0.458539,-0.355284,0.332383,0.049932,0.187058,0.204771,-0.111107,0.139452,0.618842,-0.013319,-0.294712,-0.471268,-0.162854,0.045372,0.194536,0.027941) * L0_0 + mat4(0.003223,0.000490,0.021502,-0.005004,0.351315,0.249456,-0.503414,-0.170211,0.025913,-0.313520,0.219719,-0.311998,1.350938,-0.585235,-1.684183,1.058186) * L0_1 + mat4(0.404262,-0.282137,0.392597,0.385999,0.213657,0.001791,-0.139918,-0.111713,0.030441,-0.290349,0.102003,0.406145,0.014561,-0.014621,-0.068726,-0.021460) * L0_2 + mat4(0.329788,-0.059061,-0.873598,-0.139924,0.440548,-0.424008,0.303321,-0.310639,-0.058753,-0.320620,0.025958,0.323368,1.203416,-0.819997,0.539301,0.136644) * L0_3 + mat4(0.119701,0.118032,0.259848,0.441995,-0.005735,-0.007332,0.004326,-0.005967,-0.001799,-0.000818,-0.017192,-0.022560,-0.022892,-0.141660,-0.415998,0.074627) * L0_4 + mat4(-0.030426,-0.004565,-0.002865,-0.001162,-0.011194,-0.012524,0.019123,-0.036931,0.038610,0.015549,0.069045,0.010555,0.114060,0.070003,-0.085548,0.038505) * L0_5 + mat4(0.054461,0.048697,-0.223581,-0.425652,0.078618,0.061013,0.135010,0.124697,0.190998,-0.219447,0.453135,0.420289,0.048732,0.151495,0.000702,0.121864) * L0_6 + mat4(0.305292,-0.244963,0.313182,0.016208,0.020082,0.012212,-0.018698,0.008670,0.421431,-0.084012,-0.122313,-0.188918,-0.008443,-0.007539,0.004457,-0.006556) * L0_7 + mat4(0.013741,0.006789,-0.005127,0.008212,-0.010793,0.013726,-0.032364,0.012111,-0.029319,-0.038298,0.094109,-0.194467,-0.090095,0.057205,0.101160,0.065704) * L0_8 + mat4(0.072594,0.218584,0.003636,0.167653,-0.014518,-0.008483,0.009638,-0.007048,-0.070558,0.091346,-0.067269,-0.243322,0.033751,-0.012755,0.077625,0.419213) * L0_9 + mat4(0.005858,0.007708,-0.004296,0.006149,-0.005899,-0.092920,-0.039326,-0.352906,0.005458,0.010642,-0.012897,0.012171,0.614741,0.138069,0.546632,-0.341389) * L0_10 + mat4(-0.779669,-2.769209,-0.963248,2.321473,-0.094489,-0.059688,-0.099580,-0.003219,0.006716,0.007446,-0.003939,0.006410,0.012862,0.009466,-0.010914,0.008979) * L0_11 + mat4(-0.034898,0.084862,0.134656,0.097495,-0.377284,0.148756,0.289997,-0.106582,0.015496,0.008458,-0.009060,0.007853,-0.008295,-0.000113,0.005253,-0.029654) * L0_12 + mat4(0.412580,0.005995,-0.179836,-0.002029,0.030062,-0.205993,0.242762,0.047376,0.006209,0.007793,-0.004301,0.006039,0.086221,0.073003,0.025920,0.004549) * L0_13 + mat4(-0.300620,-0.216462,0.145551,0.025249,-0.103021,-0.022752,0.208107,-0.072012,0.274911,-0.049784,0.018259,0.432893,-0.695685,0.002374,0.218402,-0.217148) * L0_14 + mat4(0.139536,-0.090980,0.041643,0.082638,-0.013377,0.006790,-0.008094,0.005991,-1.055945,0.733135,-0.438030,0.312451,-0.182534,0.024599,0.069464,0.000035) * L0_15 + vec4(0.269801,-0.880268,-0.299202,0.765400)));\nvec4 L1_14 = sin((mat4(0.171566,-0.036387,0.262600,0.372610,-0.100963,0.081330,0.094638,0.234703,0.206710,0.140095,0.268651,-0.229008,0.038118,-0.033214,-0.112205,-0.012861) * L0_0 + mat4(0.003564,-0.009459,0.002424,-0.005400,0.170292,0.271198,0.207510,0.271170,0.290713,-0.460634,-0.601372,-0.230890,-0.156655,-0.607695,0.164938,-0.802401) * L0_1 + mat4(-0.392506,-0.367180,0.122097,0.158967,0.186245,0.050547,-0.027239,0.036945,-0.133813,0.148423,0.365806,0.162991,-0.009661,-0.034782,-0.010339,0.031998) * L0_2 + mat4(0.023924,0.221256,0.033802,-0.108467,-0.000856,-0.411099,-0.432029,-0.339974,0.177211,-0.201611,0.451116,0.391710,-0.523061,0.473660,-0.211325,-1.114704) * L0_3 + mat4(-0.009191,-0.335808,-0.085355,-0.324463,0.009391,-0.009025,0.001121,-0.012531,-0.012390,0.006410,0.013186,0.005309,-0.118406,-0.171214,0.285537,0.196176) * L0_4 + mat4(-0.003705,0.001130,-0.004672,-0.003002,0.025227,-0.010410,0.013669,-0.057201,0.000013,-0.037907,-0.033187,-0.036746,-0.056249,0.052322,0.026271,0.108207) * L0_5 + mat4(0.254650,0.245296,-0.029099,0.153250,-0.102412,0.017818,0.073639,-0.007296,-0.332991,-0.396306,-0.040702,0.080499,-0.318194,0.192330,0.201496,0.005824) * L0_6 + mat4(0.129627,-0.156043,-0.303847,0.052995,0.000388,0.004228,-0.007662,0.005728,-0.038197,0.057255,0.165248,0.105334,0.009351,-0.009387,0.001379,-0.013364) * L0_7 + mat4(-0.008562,0.008587,-0.000789,0.016514,-0.037205,0.008989,-0.011838,0.023381,0.236748,0.054748,0.187879,0.138552,-0.057235,0.077853,-0.095227,0.082689) * L0_8 + mat4(-0.214181,0.267568,0.434320,0.065780,0.010512,-0.008847,0.001157,-0.017788,0.158215,0.119847,0.095180,-0.138958,-0.224728,-0.284964,-0.235412,-0.199198) * L0_9 + mat4(-0.009514,0.009300,-0.001297,0.012813,0.359749,-0.149557,-0.418479,-0.335461,-0.016276,0.009337,-0.004367,0.020698,-0.500941,0.695931,-1.684075,0.098664) * L0_10 + mat4(3.278734,2.102475,1.476909,0.915738,-0.076545,0.014595,0.043430,-0.059976,-0.009317,0.009455,-0.001086,0.013205,-0.012247,0.009339,-0.002530,0.019252) * L0_11 + mat4(0.030689,-0.072092,-0.125004,-0.071145,-0.059520,-0.085495,-0.371633,0.173858,-0.010339,0.008826,-0.001502,0.018477,-0.001715,-0.014265,0.012401,-0.006614) * L0_12 + mat4(0.083570,0.120112,0.052065,0.015465,-0.065347,-0.183257,-0.206191,-0.028215,-0.009641,0.009215,-0.001056,0.012546,-0.026657,0.093443,0.052109,0.112524) * L0_13 + mat4(-0.248594,-0.026591,0.324825,0.188105,0.037663,-0.020629,-0.074145,0.177284,-0.339799,-0.321851,0.270837,0.128654,0.114419,-0.119878,0.350823,0.198651) * L0_14 + mat4(0.078788,-0.168677,-0.156488,-0.030438,-0.000478,-0.006517,-0.003553,0.031363,0.145261,0.087374,-0.181115,-0.551194,-0.041106,-0.031427,-0.057331,-0.020453) * L0_15 + vec4(0.035728,0.314999,0.044959,0.052725)));\nvec4 L1_15 = sin((mat4(-0.325932,0.365992,-0.450477,-0.027328,0.085152,-0.044197,-0.060099,0.063101,-0.009929,-0.099057,-0.035651,-0.385198,0.087015,-0.253143,-0.322231,-0.064229) * L0_0 + mat4(0.004948,-0.016610,-0.018680,0.002719,-0.093427,0.259453,-0.541042,0.013958,0.585260,-0.679541,0.123252,0.462972,-1.270008,0.426420,0.686279,1.131736) * L0_1 + mat4(0.354767,0.067718,0.600394,0.122343,0.127654,0.041613,-0.349972,0.230245,0.142959,0.239036,-0.462125,-0.139745,0.083919,-0.034268,0.001326,-0.089808) * L0_2 + mat4(-0.555918,-0.617546,0.337082,-0.111021,0.302851,-0.525494,0.060453,0.170512,0.306727,0.271351,-0.365844,0.106083,0.106371,0.045388,-0.771160,-1.278132) * L0_3 + mat4(-0.063387,-0.027363,-0.029932,-0.342231,-0.004862,0.010909,0.004354,-0.015211,0.014953,0.016262,0.015554,0.024205,-0.034986,0.447140,0.320480,-0.064987) * L0_4 + mat4(-0.005320,-0.006041,0.002057,0.005322,-0.008262,-0.005025,0.026353,-0.061577,-0.080507,0.010756,-0.109705,-0.035620,0.028949,-0.050626,-0.056837,0.088029) * L0_5 + mat4(-0.040025,-0.308635,-0.552631,0.251465,-0.238532,0.082356,0.265546,-0.287207,0.112521,0.086925,0.558549,0.158535,-0.203424,-0.028984,0.201020,-0.167092) * L0_6 + mat4(0.133628,0.243712,-0.011896,0.240016,0.018031,0.027985,-0.033932,0.018996,0.255694,-0.247377,0.093611,-0.017507,-0.004153,0.010426,0.003854,-0.014873) * L0_7 + mat4(0.005585,-0.011212,-0.004130,0.015164,0.016354,-0.009365,-0.015864,0.056295,-0.233365,-0.059492,0.045729,-0.303323,0.014071,0.105663,-0.348162,-0.069683) * L0_8 + mat4(-0.309714,0.295515,-0.184572,-0.373701,-0.004745,0.011061,0.007235,-0.015764,-0.233190,-0.098800,-0.696978,-0.145337,-0.161552,0.164056,-0.023159,-0.166362) * L0_9 + mat4(0.005105,-0.010501,-0.004400,0.015316,0.499905,-0.704765,-0.079176,0.255149,0.002317,-0.012503,-0.002448,0.020464,0.365606,0.014411,-1.299029,-0.448849) * L0_10 + mat4(-1.662151,1.837390,-0.129439,-1.424389,0.226899,-0.172721,0.161971,0.019925,0.004808,-0.010891,-0.003702,0.014877,0.003413,-0.010831,-0.007418,0.016887) * L0_11 + mat4(-0.118899,0.029633,-0.284228,0.082755,-0.134043,-0.015622,0.550442,0.047119,0.004545,-0.010830,-0.006867,0.015837,-0.000958,-0.001488,0.010340,-0.014418) * L0_12 + mat4(0.080862,0.024723,0.066468,0.074074,0.240646,-0.219644,0.116357,0.304789,0.004873,-0.010383,-0.004741,0.014996,0.035550,-0.046977,-0.174632,0.131451) * L0_13 + mat4(-0.189690,-0.188481,-0.162583,-0.303223,-0.217033,-0.117177,0.437150,-0.004821,-0.082685,0.313246,0.301290,-0.131505,0.208546,0.140913,0.149085,-0.586588) * L0_14 + mat4(0.235093,-0.249683,-0.160624,0.058441,-0.001295,0.021526,0.000659,0.022206,0.379018,0.107367,0.497211,-0.363661,0.124786,-0.173246,0.226005,-0.029355) * L0_15 + vec4(-0.467347,0.228130,-0.053512,-0.646791)));\nvec4 L2_0 = sin((mat4(0.104922,-0.027519,-0.224573,-0.015465,0.667901,-0.504599,-0.057951,0.259052,-0.171781,0.031017,-0.165212,0.142089,-0.561398,0.145027,-0.025992,-0.069561) * L1_0 + mat4(0.163107,-0.175838,0.019203,0.017202,0.054372,-0.015564,-0.163455,-0.022338,0.493305,-0.169162,0.305395,0.130814,0.103894,0.086006,0.789065,-0.089324) * L1_1 + mat4(-0.184085,-0.206410,0.038554,0.118022,-0.393308,-0.167883,-0.940022,0.417973,0.366152,0.034383,0.119946,-0.000399,-0.150461,0.002234,0.125515,0.024744) * L1_2 + mat4(0.022403,0.225125,-0.037151,-0.029781,0.027108,0.056193,-0.096344,-0.055512,-0.028325,0.261725,-0.221123,-0.138872,0.201749,0.396740,0.229968,0.100351) * L1_3 + mat4(0.125708,-0.216865,0.175427,-0.002316,0.012343,-0.010490,0.013852,0.124668,-0.165662,-0.349726,0.293759,0.151426,-0.390995,0.062469,-0.101176,-0.041640) * L1_4 + mat4(-0.225378,0.128507,-0.206877,-0.111986,0.729497,-0.021880,-0.306342,0.058861,-0.054423,0.023774,0.059639,-0.025168,0.069240,-0.014156,0.259138,0.164618) * L1_5 + mat4(0.475578,0.195361,0.366637,-0.079672,0.230449,-0.023783,0.087643,-0.106995,0.467618,-0.235921,0.099589,0.238385,0.213325,0.092591,0.092953,-0.203160) * L1_6 + mat4(0.310014,-0.916402,-0.865084,0.810547,0.574840,-0.291261,0.212868,-0.105405,0.563964,-0.251544,0.051156,0.002480,0.201026,-0.044605,0.226207,0.019603) * L1_7 + mat4(0.205064,-0.370822,-0.518919,-0.108494,0.003547,-0.058381,0.176612,-0.004024,0.276955,-0.210512,-0.067110,0.050075,0.879614,-0.115843,0.639216,-0.103740) * L1_8 + mat4(0.141999,-0.401456,0.180463,0.195822,-0.256063,-0.279067,-0.144791,0.151478,0.253653,0.120040,0.326057,-0.093819,-0.450192,-0.412598,-0.245653,0.181682) * L1_9 + mat4(0.501085,0.314059,0.079716,-0.419373,-0.240356,0.185236,0.046508,0.147244,-0.353326,-0.309472,-0.084002,0.069290,0.458583,0.447664,-0.259751,-0.235233) * L1_10 + mat4(0.337449,0.233441,0.283279,0.041915,-0.409785,0.320150,-1.399712,-0.558856,0.240435,-0.484389,0.662717,0.168025,-0.352875,-0.211759,-0.408088,0.245492) * L1_11 + mat4(0.432695,-0.069675,0.361147,-0.144474,-0.198369,0.084250,-0.001951,-0.131698,-0.417324,-0.132278,0.034536,0.045053,0.081048,0.300150,-0.146889,-0.031323) * L1_12 + mat4(0.197930,-0.083857,0.107384,0.070473,0.175805,-0.346892,0.575386,0.002364,0.100485,-0.104401,-0.009690,-0.036131,-0.887979,0.202857,-0.065973,-0.049526) * L1_13 + mat4(0.769167,0.355992,0.091424,0.496711,-0.061424,0.225656,0.619844,-0.018523,-0.387421,-0.070287,-0.209810,-0.170864,0.087229,0.226959,0.258375,-0.310151) * L1_14 + mat4(0.172714,0.387597,-0.085439,-0.032233,0.357817,-0.089448,-0.135163,-0.074702,-0.297410,-0.116722,-0.039221,0.096194,-0.303509,0.254909,0.232679,0.136711) * L1_15 + vec4(-0.218764,-0.437516,0.797542,-0.162262)));\nvec4 L2_1 = sin((mat4(0.302836,-0.011816,-0.028205,-0.107226,0.096496,-0.053959,0.619634,-0.206559,0.224620,-0.071686,-0.425156,-0.088105,-0.128698,-0.190760,0.142738,-0.611620) * L1_0 + mat4(-0.028121,-0.053918,0.396272,-0.064589,0.263247,0.035035,0.154820,0.168880,0.292725,-0.476098,-0.378790,-0.418576,-0.304536,0.351762,0.277464,0.326383) * L1_1 + mat4(0.867297,0.068647,-1.064721,0.000769,-1.541374,1.065888,0.942185,0.353954,-0.203596,-0.441962,-0.022131,-0.135387,0.449813,-0.089963,-1.133798,0.336148) * L1_2 + mat4(-0.109908,-0.112268,0.072491,-0.101640,0.022543,0.053153,-0.039643,-0.386212,-0.304864,0.144667,-0.296845,-0.089718,-0.577904,-0.042310,-0.521894,0.036378) * L1_3 + mat4(0.320419,-0.278041,-0.216960,0.146190,-0.146715,0.036712,-0.376818,-0.250014,0.250306,-0.179478,-0.756525,0.293730,-0.242695,-0.066030,-0.013096,-0.249529) * L1_4 + mat4(0.563061,-0.190252,0.774459,-0.008215,0.377433,-0.100736,0.469797,0.344575,0.165220,-0.060825,-0.271779,-0.143555,0.738688,-0.363270,-1.018710,0.123372) * L1_5 + mat4(-0.247632,-0.094374,-0.380244,0.020440,-0.038932,0.274470,0.586839,0.188150,0.031371,0.222087,0.130728,0.193015,-0.795990,0.032730,-0.102774,-0.785857) * L1_6 + mat4(-0.372272,0.116300,1.182081,-0.611538,-0.103556,-0.206925,-0.361618,-0.062449,-0.061294,0.040604,0.050324,-0.263960,0.195426,0.040925,-0.600743,0.379354) * L1_7 + mat4(-0.533825,0.338220,0.983857,-0.202336,-0.062455,0.156542,-0.989796,-0.087648,0.222421,0.196756,-0.412016,-0.394391,-0.135891,-0.140705,-0.747982,-0.485560) * L1_8 + mat4(-0.098914,-0.198461,0.212665,0.324186,0.279930,0.221287,0.486855,0.183049,-0.307859,0.165573,-0.020433,0.160004,0.322467,0.102207,0.228500,0.203945) * L1_9 + mat4(-1.058645,0.047330,-0.469685,-0.400089,-0.431458,0.061869,0.520888,-0.431553,0.559554,0.073334,0.180944,0.304794,-0.457806,0.351703,0.676330,0.094295) * L1_10 + mat4(0.149621,-0.010216,-0.402720,0.043466,0.317042,0.450067,-0.099602,-0.792034,0.818439,-0.825589,-0.820703,-0.588471,0.438345,-0.075018,0.032476,-0.063828) * L1_11 + mat4(0.278003,-0.298291,-0.026815,0.094345,-0.067188,-0.034861,0.343218,-0.226015,0.452832,0.069527,0.455655,-0.321309,-0.297742,-0.159302,0.329831,0.006160) * L1_12 + mat4(-0.348469,-0.016525,0.340093,0.114679,0.635538,-0.268814,-0.161145,1.284855,-0.466880,0.133006,0.229476,0.049589,0.300818,-0.217248,-0.358978,0.160311) * L1_13 + mat4(-1.192909,-0.004530,1.075559,0.204647,0.183296,-0.242634,-0.233358,-0.007205,-0.151373,0.409815,-0.389498,-0.337515,-0.197246,-0.015477,-0.288285,-0.433882) * L1_14 + mat4(-0.161783,0.184577,-0.002405,-0.087742,0.237775,0.126889,0.221750,0.106342,0.061946,-0.117574,0.307765,0.302472,0.062447,-0.482129,0.073113,-0.467105) * L1_15 + vec4(1.351771,-0.686487,-0.530075,0.808211)));\nvec4 L2_2 = sin((mat4(-0.048348,-0.087299,0.060209,-0.032735,-0.067616,-0.668063,0.215040,-0.465675,0.090036,0.036884,0.004513,-0.319359,0.124355,-0.109375,-0.030665,0.189739) * L1_0 + mat4(0.040180,0.421593,0.363270,-0.442899,-0.117602,-0.051435,0.188090,0.541402,-0.095807,0.533011,0.121405,0.333201,-0.032864,-0.494163,-0.213113,-0.084126) * L1_1 + mat4(0.020900,-0.029896,-0.242860,-0.228102,-0.629568,-1.352556,0.760634,-1.568805,0.317161,-0.508363,0.221437,0.262802,0.131418,1.089809,-0.437073,0.966326) * L1_2 + mat4(0.063830,0.122716,-0.022853,-0.078995,0.243117,0.007106,0.027320,-0.024864,-0.200887,-0.426937,-0.055392,0.147247,0.117529,-0.451814,0.240221,0.297474) * L1_3 + mat4(0.317880,0.217666,-0.165370,0.688464,-0.108607,0.181596,-0.015245,0.028581,0.241635,-0.303576,-0.078278,0.429628,-0.076182,-0.262869,-0.064986,0.008712) * L1_4 + mat4(0.463026,-0.432971,0.504934,-0.139193,0.498391,0.439618,0.090269,0.348378,-0.017341,-0.039379,-0.042066,0.044258,0.935493,0.214287,0.077611,0.975433) * L1_5 + mat4(0.239566,0.143270,-0.090306,-0.012740,-0.124451,0.178959,-0.049734,-0.614700,0.468567,0.274633,-0.163000,-0.200601,-0.521201,-0.846256,0.106225,-0.390215) * L1_6 + mat4(-0.351012,-0.285696,-0.206937,-0.218880,-0.089034,0.167347,0.009351,0.348850,0.150043,0.576939,0.093537,-0.091475,-0.331893,0.277845,-0.031855,-0.081840) * L1_7 + mat4(-0.233654,-0.438388,0.396112,-0.666744,-0.157114,0.396492,-0.034825,0.070852,-0.363697,-0.044629,-0.366290,-0.066625,0.638031,0.548446,0.200522,0.416061) * L1_8 + mat4(0.001994,0.249693,0.190172,-0.018675,0.239510,-0.293937,0.190401,0.127016,0.124217,0.060471,-0.250415,-0.047668,-0.075523,-0.718362,0.043317,0.554080) * L1_9 + mat4(-0.702631,-0.486401,0.069182,-0.766132,-0.570368,0.237662,-0.136735,0.126354,-0.102963,0.565208,0.038607,0.577371,0.146781,-0.250700,0.369827,-0.236869) * L1_10 + mat4(-0.132304,0.145516,-0.068402,0.210380,0.161443,0.290537,0.132849,-0.780778,0.347457,0.749771,-0.229184,1.321056,-0.223556,0.458092,0.037346,0.163663) * L1_11 + mat4(-0.266270,0.085363,-0.538809,0.720871,0.154951,-0.080770,-0.077843,0.041387,0.049751,0.137896,-0.126582,-0.140115,-0.083357,0.060303,0.277371,0.432922) * L1_12 + mat4(0.005819,-0.207329,0.157600,-0.257023,0.293990,0.137064,-0.094871,0.213092,-0.194269,0.018464,-0.033517,0.126406,-0.106827,0.158326,0.463968,-0.248046) * L1_13 + mat4(-1.100701,-0.111216,0.679574,-0.307026,-0.321108,0.151251,-0.078092,-0.334532,-0.358832,-0.290962,0.227885,-0.434151,-0.198757,-0.060095,0.061131,0.011300) * L1_14 + mat4(0.167593,-0.069553,-0.004329,-0.276774,0.247171,-0.058070,0.166651,-0.146346,-0.226059,-0.147758,0.197303,-0.116166,-0.158459,0.154959,-0.105636,0.312941) * L1_15 + vec4(0.534832,0.509610,-0.003464,1.048331)));\nvec4 L2_3 = sin((mat4(0.010645,0.165316,-0.180236,-0.005793,-0.021039,-0.001671,-0.312630,0.334658,-0.193986,-0.140130,-0.014653,0.224936,0.226248,-0.222757,0.111100,-0.079074) * L1_0 + mat4(-0.015467,-0.063447,0.108570,0.068505,-0.245965,-0.075508,0.204103,0.001563,-0.054112,-0.246197,0.234889,0.155688,-0.661656,-0.192850,-0.169349,-0.330425) * L1_1 + mat4(0.333914,-0.103856,0.089572,0.042923,0.064334,0.760569,0.081313,0.206063,-0.072956,0.122317,0.408910,0.265170,-0.435938,-0.029484,-0.491478,-0.097975) * L1_2 + mat4(-0.482260,0.081970,-0.182330,-0.123116,0.161953,-0.058270,0.050212,-0.155407,-0.051566,-0.105142,-0.142179,0.337067,-0.474049,0.055774,-0.089716,0.420464) * L1_3 + mat4(0.129310,-0.186241,0.063684,-0.249841,-0.104239,0.462995,-0.031293,-0.328105,0.752707,-0.158299,-0.137218,0.188111,-0.017329,0.207538,0.064284,0.256703) * L1_4 + mat4(0.647432,0.107312,0.025322,-0.262687,0.275606,-0.285311,0.208078,0.218276,-0.126302,0.132255,0.100538,0.027151,0.531509,0.294267,-0.097002,0.359763) * L1_5 + mat4(-0.229795,-0.027033,-0.581659,0.070453,0.008944,-0.086226,-0.185134,-0.155946,0.225028,0.449518,-0.121073,-0.372305,-0.827149,-0.099184,-0.470004,0.170224) * L1_6 + mat4(-0.583366,-0.021835,-0.145778,0.275898,-0.597310,0.104241,0.160237,0.291579,-0.663522,0.077221,-0.048765,0.200550,-0.134943,-0.254946,0.088433,0.167394) * L1_7 + mat4(0.013682,-0.327320,0.061074,0.135930,-0.382303,-0.205392,0.062841,0.318253,-0.023199,0.107535,0.152292,-0.046912,-0.168853,0.040599,0.335165,0.084635) * L1_8 + mat4(0.005221,0.172182,0.223786,0.059422,0.762626,-0.344325,0.001733,-0.501171,0.260354,0.429672,0.069229,-0.189596,0.785672,-0.082574,0.259308,-0.430761) * L1_9 + mat4(-0.685171,-0.582831,0.332594,-0.266860,-0.397826,0.375176,-0.032398,0.281555,0.169511,-0.088395,-0.257205,-0.073734,-0.310314,0.196261,0.239140,-0.199421) * L1_10 + mat4(-0.008698,-0.051662,0.097022,-0.343489,-0.666251,-0.333721,-0.192168,-0.953042,0.164152,-0.370533,0.034319,0.111745,0.664919,-0.003504,-0.274734,-0.064401) * L1_11 + mat4(-0.570739,0.014774,-0.179385,0.254930,0.091656,0.094124,0.032201,-0.045076,0.090780,-0.159915,0.007732,-0.312044,-0.210380,-0.085598,-0.033215,-0.128973) * L1_12 + mat4(0.096438,0.068130,0.063131,0.024087,0.741006,-0.482679,-0.043069,0.279448,-0.436760,0.197020,-0.169714,0.113959,0.328480,-0.898276,-0.343395,0.188125) * L1_13 + mat4(-0.485589,1.922711,0.051505,1.114830,0.080846,-0.008248,0.007195,-0.102613,0.234517,0.162395,0.061331,0.199373,-0.277939,-0.021388,0.189704,-0.301049) * L1_14 + mat4(-0.553776,0.278178,-0.404326,-0.490771,0.256775,0.013197,0.291475,-0.605617,0.255690,0.129677,0.086776,0.116263,-0.031879,-0.205943,0.111949,0.697859) * L1_15 + vec4(0.944662,0.083756,-0.170618,0.067500)));\nvec4 L2_4 = sin((mat4(-0.485023,0.172509,-0.118188,0.163083,-0.353019,0.008665,0.421634,0.089226,0.101707,0.315887,0.160077,0.096386,0.102458,-0.132010,0.058134,-0.436657) * L1_0 + mat4(0.273622,-0.078783,-0.135600,0.056964,-0.036485,0.335649,0.058700,-0.467793,-0.162195,-0.118527,0.060708,-0.262060,-0.079979,-0.321206,0.134373,-0.644970) * L1_1 + mat4(0.672193,-0.407481,0.447488,0.095288,0.905035,1.443233,-0.039715,-0.222009,0.200376,0.326087,-0.045721,0.248665,-0.387297,-0.814217,-0.591743,-0.007384) * L1_2 + mat4(0.056196,0.100684,0.048789,-0.085996,-0.183493,0.028884,0.178799,0.125031,-0.383713,-0.040066,0.263115,0.190199,-0.867595,-0.284408,-0.012655,-0.034063) * L1_3 + mat4(-0.060428,-0.132013,-0.240832,0.102345,0.040139,-0.541817,0.120039,0.149158,-0.663481,-0.230255,-0.758911,0.228589,-0.091389,0.412313,-0.337363,-0.081048) * L1_4 + mat4(0.047196,-0.468902,0.224117,-0.163385,0.226561,0.689071,-0.678767,0.252374,0.116977,-0.136644,0.009209,-0.008945,-0.403523,-0.611179,0.134512,-0.037969) * L1_5 + mat4(-0.777237,-0.310256,-0.078523,-0.228468,-0.452818,0.386743,0.029389,0.431596,0.386308,-0.013316,0.065796,-0.082665,-0.725912,-0.075795,0.253630,-0.196498) * L1_6 + mat4(0.885684,0.201225,-0.080691,-0.532531,-0.238982,-0.019274,0.235786,0.087370,0.242290,-0.179492,0.082384,-0.140079,-0.298274,0.017747,0.590854,0.387761) * L1_7 + mat4(0.370061,0.430679,0.066822,-0.129816,-0.188976,0.107581,0.288261,0.012250,0.535161,0.322509,-0.246395,0.186838,0.037321,0.402206,-0.261849,-0.243231) * L1_8 + mat4(0.518322,-0.191554,0.255933,0.046565,0.447534,-0.043917,-0.328273,0.301096,-0.314229,0.312012,0.253337,0.034914,0.777469,-0.786912,-0.102177,0.175784) * L1_9 + mat4(-0.234841,0.011332,0.147645,0.522006,0.300616,0.579223,-0.081809,-0.116113,-0.242671,-0.496743,-0.072115,-0.204644,0.137860,0.274818,0.512185,0.033115) * L1_10 + mat4(-0.507901,-0.156046,-0.100349,-0.073248,1.625523,-0.083212,-0.662347,-0.778983,0.028580,-0.250156,-0.103618,-0.105794,0.234950,0.059245,0.296370,-0.034235) * L1_11 + mat4(-0.362476,-0.039206,-0.197291,0.296405,-0.139313,0.185299,-0.011954,0.082102,0.625011,-0.003145,-0.340903,-0.392425,-0.375991,0.150712,-0.167272,-0.068066) * L1_12 + mat4(-0.147405,0.140983,-0.135998,0.177136,-0.537657,-0.291222,1.101845,0.443395,0.367359,0.118227,0.186018,-0.186149,-0.682684,-0.100452,0.559251,-0.120185) * L1_13 + mat4(-0.699197,0.215226,0.498675,0.235891,-0.685287,-0.211606,1.058925,-0.068954,0.417129,0.349179,0.066605,-0.290683,-0.310555,-0.113636,0.197963,-0.129727) * L1_14 + mat4(0.106556,0.025449,0.032096,-0.178787,0.091321,-0.004841,0.276510,0.074612,0.401467,-0.004282,-0.046803,0.165533,0.153115,0.239023,0.050599,0.004833) * L1_15 + vec4(-0.830459,0.150265,-0.251387,-0.193338)));\nvec4 L2_5 = sin((mat4(-0.058417,0.038356,0.064924,-0.037306,0.123450,-0.527362,-0.367758,-0.220087,-0.062816,-0.054240,0.422239,-0.129067,-0.244041,0.061371,-0.304434,0.279332) * L1_0 + mat4(-0.026725,0.150589,-0.204616,-0.157734,0.110219,-0.086520,0.269655,0.024456,0.141597,0.173966,-0.125883,-0.662086,-0.132541,-0.306880,-0.842905,0.189360) * L1_1 + mat4(-0.293219,0.029579,0.247031,-0.013594,-0.139386,-0.622145,-0.823330,0.098797,-0.172541,0.414897,0.060013,0.288655,-0.078805,0.170440,0.159259,0.719143) * L1_2 + mat4(0.056538,0.101189,0.049291,-0.069242,0.119525,0.104819,0.154686,-0.194997,-0.031309,-0.581946,0.116945,0.652321,0.016208,-0.042165,-0.030824,0.071942) * L1_3 + mat4(0.177271,0.085958,-0.117095,-0.024760,0.426381,0.500491,0.443191,0.066144,-0.005686,-0.175753,-0.343080,0.282565,0.065180,-0.224713,0.257182,0.310080) * L1_4 + mat4(-0.214816,-0.523860,-0.071472,-0.602233,-0.001863,-0.360967,0.112849,0.049862,0.028499,0.073719,0.015393,-0.051622,0.107197,0.162387,-0.662501,0.838914) * L1_5 + mat4(0.088438,-0.084759,-0.359581,0.212006,0.094691,-0.388530,0.158279,0.266646,-0.067577,-0.098051,-0.180043,0.159455,0.051588,-0.137978,0.039147,0.301166) * L1_6 + mat4(0.279991,-0.137578,0.561122,-0.087229,0.266527,0.377821,0.252667,-0.217710,0.131810,-0.506171,0.079416,-0.196046,-0.131638,0.061935,-0.346106,-0.117404) * L1_7 + mat4(-0.243595,0.058135,0.367237,-0.633081,0.139244,0.246403,0.028504,-0.200570,-0.039309,-0.239038,-0.104111,-0.406304,-0.124890,0.692830,-0.600764,-0.693000) * L1_8 + mat4(-0.132017,0.086092,0.051935,-0.401896,0.081114,-0.002548,0.028942,-0.163384,-0.024708,-0.097220,-0.188168,0.219062,-0.112389,-1.019868,-0.055611,0.293195) * L1_9 + mat4(-0.545008,0.208341,-0.028763,-0.006444,0.247115,-0.393030,-0.053227,0.361652,0.177680,0.249289,0.012975,-0.320285,0.019730,0.406027,0.487745,-0.272694) * L1_10 + mat4(0.304288,-0.016452,-0.043480,-0.305103,-0.867079,1.063777,0.591210,-0.088085,0.206918,0.657967,0.120148,-0.224146,0.030230,0.292123,0.154664,-0.300492) * L1_11 + mat4(0.135323,0.099437,0.368048,0.618789,0.182578,-0.013858,0.102974,-0.009491,-0.269905,-0.655874,0.184314,-0.180482,0.070387,0.116239,0.106572,0.344657) * L1_12 + mat4(0.073869,0.038835,0.121657,-0.088737,-0.151881,-0.725584,0.268883,0.196329,0.184343,-0.185594,-0.077193,0.291567,-0.189062,-0.202800,0.263167,0.100415) * L1_13 + mat4(0.759722,0.616772,0.088463,0.099277,-0.122224,-0.121547,0.334614,-0.527642,-0.282265,0.318876,-0.016685,0.317273,-0.039388,0.200416,0.215053,-0.172606) * L1_14 + mat4(0.237006,-0.004800,0.177446,0.191688,0.003200,-0.138846,0.176141,-0.263777,-0.011636,-0.277925,0.193685,-0.163172,0.149607,0.116509,-0.101942,-0.074563) * L1_15 + vec4(0.381593,-0.184609,-1.017992,-0.067598)));\nvec4 L2_6 = sin((mat4(-0.072025,-0.123739,0.026333,0.067553,0.440336,0.347946,-0.387672,0.192364,0.035260,-0.165529,0.119553,-0.365182,0.033654,0.448943,-0.249869,0.065507) * L1_0 + mat4(-0.130542,-0.122093,-0.294735,-0.092351,-0.524160,0.142814,0.035422,-0.152704,-0.028781,-0.107499,0.237822,-0.372885,0.310564,-0.013201,-0.269444,0.223988) * L1_1 + mat4(0.240497,-0.231804,0.226341,-0.114755,-1.080456,0.211307,-0.203019,0.084626,-0.030291,0.049329,0.245199,0.326380,0.227295,-0.195915,0.527278,0.409721) * L1_2 + mat4(0.077798,-0.063882,-0.061485,0.118188,0.057440,-0.019679,0.021662,-0.076120,-0.051383,-0.245913,-0.098636,0.087267,-0.202052,-0.142720,0.190959,-0.029167) * L1_3 + mat4(0.226839,0.021587,0.323500,-0.060427,-0.128556,-0.156845,0.446470,-0.220798,0.385660,0.025597,0.618652,-0.498169,-0.001024,0.048830,-0.428962,-0.045196) * L1_4 + mat4(0.339127,-0.139750,-0.291765,0.008933,-0.141134,-0.303913,0.393737,0.163069,0.131302,0.097581,0.028989,0.090731,0.412537,-0.515985,0.516361,-0.442349) * L1_5 + mat4(0.176279,0.048664,-0.093173,0.314923,0.023266,-0.172349,0.107118,-0.089132,0.006993,-0.138918,0.103473,0.239771,-0.044548,-0.011912,-0.483566,-0.065348) * L1_6 + mat4(0.478220,0.181498,-0.639356,-0.264665,-0.217666,0.250267,0.220825,0.017894,-0.128639,-0.093250,0.124830,-0.155300,-0.394645,-0.007247,0.336298,0.140555) * L1_7 + mat4(0.171303,0.191576,-0.482954,-0.131874,0.381024,-0.104018,0.734717,-0.503934,-0.039837,0.035253,0.166557,-0.092367,-0.140068,-0.122476,0.211089,-0.099632) * L1_8 + mat4(-0.003909,0.160813,-0.157076,-0.103127,-0.004494,-0.135772,-0.075970,-0.148219,-0.246733,-0.198679,-0.055342,0.160356,-0.062853,-0.034514,-0.060254,0.160358) * L1_9 + mat4(-0.081031,-0.576347,-0.868104,0.633537,-0.181193,-0.148301,0.333081,-0.165720,0.068417,0.065334,0.215607,-0.164924,-0.257614,0.048319,-0.504058,0.855833) * L1_10 + mat4(0.141383,0.114470,0.450353,-0.138666,1.850965,-0.590921,-1.358892,0.990631,0.258363,0.104905,0.715673,-0.481860,0.107219,0.130358,0.290567,0.135501) * L1_11 + mat4(0.050789,-0.070758,0.136070,0.346618,-0.055001,-0.018992,-0.232169,-0.125107,-0.059382,0.110617,-0.450939,-0.025442,-0.038738,0.030446,0.058808,0.102607) * L1_12 + mat4(-0.054717,0.030962,0.094588,-0.040310,-0.636483,-0.091923,-0.147739,0.237061,0.189202,0.072774,-0.222700,-0.025058,-0.321893,0.273741,-0.341457,0.165713) * L1_13 + mat4(-0.498716,0.118294,1.178168,-0.100946,0.268640,0.201060,0.128213,-0.037665,0.151990,-0.037214,-0.587060,-0.032016,0.112503,0.285707,-0.284634,0.142308) * L1_14 + mat4(0.422249,-0.189746,-0.211842,0.629750,-0.008993,0.201327,-0.089930,0.114598,-0.120883,0.056354,-0.184480,0.002368,0.072396,0.211952,0.175883,-0.287897) * L1_15 + vec4(-0.896999,0.167214,1.197187,-1.231713)));\nvec4 L2_7 = sin((mat4(0.043201,0.125364,0.067831,-0.084575,0.176793,-0.154818,0.437769,0.652996,-0.109620,0.144915,-0.348569,-0.007223,-0.222563,-0.365137,-0.472666,0.096884) * L1_0 + mat4(0.225565,0.092034,0.142761,-0.180190,-0.256175,0.215498,-0.033969,-0.009334,0.004469,0.450286,0.506578,0.612303,-0.185962,-0.001513,-0.168067,0.184727) * L1_1 + mat4(-0.069964,-0.012746,-0.311710,-0.023236,-1.248455,-0.214823,0.208549,-1.260375,-0.273251,-0.120054,-0.162654,-0.006748,0.145601,-0.282449,0.653600,-0.065459) * L1_2 + mat4(-0.189290,-0.501039,0.135390,0.147416,-0.350242,0.110348,-0.266419,0.147066,-0.336222,0.040640,0.045234,0.481102,-0.006382,-0.112139,0.133834,0.161417) * L1_3 + mat4(-0.059723,-0.345043,-0.225361,-0.064347,0.069191,0.402127,0.093684,0.171019,0.343770,-0.719529,-0.501054,-0.379425,-0.093763,-0.174559,-0.253508,-0.123613) * L1_4 + mat4(0.307354,-0.477621,0.587733,0.493660,-0.756299,0.083292,-0.207868,0.162402,-0.070391,0.049573,-0.151863,-0.070878,-0.129306,-0.077227,1.084873,-0.107950) * L1_5 + mat4(0.108095,0.115722,0.111624,0.445622,0.412372,0.691015,0.574479,-0.134467,0.252594,0.051118,0.435481,-0.062517,-0.014673,-0.297380,-0.380178,0.262203) * L1_6 + mat4(0.450388,0.646349,-0.155248,-0.276044,0.198998,0.053301,0.106851,0.225319,-0.014944,0.124029,0.117524,-0.001303,-0.076719,0.368106,0.030633,0.018453) * L1_7 + mat4(-0.637698,0.224784,-0.131287,0.135760,0.258279,0.667552,0.590309,0.060339,-0.060127,-0.537502,-0.061452,0.025129,-0.185917,-0.242651,-0.162711,0.006803) * L1_8 + mat4(0.317826,0.068138,-0.096865,0.162595,-0.092270,0.148295,0.185910,-0.134374,-0.605556,0.208272,0.419129,0.574707,0.726210,-0.266940,0.323129,-0.269522) * L1_9 + mat4(-0.341548,0.072796,-0.097756,0.686938,0.210540,-0.497668,-0.261642,-0.382408,0.116736,0.238002,-0.013310,-0.032782,-0.356918,0.446931,0.274086,0.229780) * L1_10 + mat4(0.304403,0.174872,0.201952,-0.049373,-0.241890,1.388899,0.149296,1.190187,0.311462,-0.037583,0.516118,0.733992,-0.047832,0.321687,0.379452,-0.892844) * L1_11 + mat4(-0.099902,0.395013,-0.178225,0.022765,-0.039571,-0.148803,-0.224887,-0.003963,0.227366,0.399689,0.103461,0.063943,-0.241596,-0.019300,-0.044739,-0.053161) * L1_12 + mat4(0.083618,0.221587,0.272363,0.178523,0.806193,-0.190806,0.426759,-0.147912,0.310655,0.105231,0.039386,0.165098,0.333644,-0.067792,-0.382377,-0.011201) * L1_13 + mat4(-0.209674,-0.259495,0.268481,-0.803340,0.161357,-0.098023,0.338945,0.071678,-0.335353,-0.021107,0.222710,-0.226348,0.408710,0.028858,0.231946,0.588397) * L1_14 + mat4(-0.450793,0.160866,0.427638,0.034923,-0.140211,0.535851,0.140350,-0.136709,0.022422,0.379974,-0.269441,0.162973,0.469497,-0.513437,-0.163509,0.150634) * L1_15 + vec4(0.157130,-0.336359,-0.528474,-1.070896)));\nvec4 L2_8 = sin((mat4(-0.041122,0.181979,-0.057567,-0.100751,0.067372,-0.039850,-0.143027,0.094886,-0.002316,-0.184179,-0.162528,0.043104,0.323585,0.408265,-0.214277,-0.069082) * L1_0 + mat4(0.362922,-0.120014,0.221992,0.047373,-0.375050,-0.671556,-0.121268,0.218826,0.037976,0.212277,0.056176,0.334628,-0.104128,0.409068,0.591078,0.050750) * L1_1 + mat4(0.014278,0.751494,0.188980,-0.429449,0.110408,-0.714428,-0.578697,-0.194183,0.491784,-0.121548,0.092419,-0.033070,0.187951,0.677485,-0.208534,0.172053) * L1_2 + mat4(0.160424,0.148423,0.122435,-0.228715,0.059399,-0.130539,-0.032953,0.056300,0.133784,0.185112,-0.535506,0.259130,0.119498,0.708232,-0.048806,-0.058842) * L1_3 + mat4(-0.039543,0.145695,0.106977,-0.057403,0.012651,0.466283,0.112641,0.524479,0.016459,0.081002,0.034554,-0.056818,0.100182,0.132501,-0.199393,0.168352) * L1_4 + mat4(-0.459025,0.102001,0.215405,-0.115602,-0.067863,-0.207667,-0.242219,0.111449,0.016700,0.055379,-0.006940,-0.097250,0.360727,0.953395,-0.047601,-0.155048) * L1_5 + mat4(-0.027410,0.189541,0.256873,-0.228540,-0.238419,0.238183,-0.090772,0.018483,0.139580,-0.022599,0.172465,-0.009582,-0.242606,0.841100,-0.040695,-0.193529) * L1_6 + mat4(-0.335457,-0.028774,0.418214,-0.368061,-0.009847,0.287372,0.073633,0.300805,-0.105916,-0.138075,0.280192,-0.019904,0.051346,-0.332718,0.106084,-0.047103) * L1_7 + mat4(-0.633716,-0.186369,-0.101337,0.067581,0.298096,0.227492,-0.244837,0.014745,-0.213746,-0.562364,0.257388,0.116996,0.270968,-0.159583,0.260845,-0.154156) * L1_8 + mat4(-0.020050,-0.172697,0.639735,0.031182,0.008893,-0.137074,0.061115,0.143125,0.075482,-0.327038,-0.022945,0.172516,-0.341720,0.362800,0.344040,-0.107268) * L1_9 + mat4(-0.106876,0.004384,0.093939,0.626240,0.656978,0.427356,-0.404033,-0.055659,-0.592533,-0.122114,-0.129675,-0.186038,-0.738577,-0.489356,0.077234,0.286675) * L1_10 + mat4(0.033810,0.405514,-0.178068,0.019254,-1.289880,0.204519,1.175736,-0.094505,0.119855,-0.311267,-0.033462,0.398380,-0.403438,-0.305088,-0.375902,0.246005) * L1_11 + mat4(0.386108,0.369331,0.248170,0.526722,0.060067,-0.110163,0.030621,0.102120,-0.043722,-0.541588,0.321976,0.084935,0.100112,0.200864,-0.088098,0.075948) * L1_12 + mat4(0.059845,0.096154,-0.143711,0.093800,0.792292,0.310339,-0.071290,-0.195531,-0.045017,-0.196893,0.021381,0.215109,-0.016200,0.070794,0.138028,0.278293) * L1_13 + mat4(0.709840,0.926935,-0.683235,0.161558,0.056352,0.208087,-0.155345,-0.456783,0.143059,-0.268041,-0.011536,-0.148962,0.009768,-0.010913,-0.161043,0.001050) * L1_14 + mat4(-0.312210,-0.131269,-0.147954,-0.067812,-0.019319,-0.106475,-0.181575,0.025430,-0.186184,0.149956,-0.013759,0.090698,0.326702,-0.302979,-0.326505,-0.148472) * L1_15 + vec4(0.055188,-0.667185,-0.315633,-0.193473)));\nvec4 L2_9 = sin((mat4(0.113321,-0.383393,-0.087909,-0.127939,-0.113182,0.379223,-0.273225,0.020233,0.077760,0.089775,-0.081290,0.003409,-0.033289,0.137004,0.229770,0.296913) * L1_0 + mat4(0.165032,0.165696,0.049686,0.241489,0.111976,-0.177334,0.001754,-0.345948,0.304210,-0.420295,-0.003305,0.026375,0.192764,0.626388,-0.093015,-0.382585) * L1_1 + mat4(0.075270,0.447700,-0.068277,-0.009083,-0.270237,1.114838,0.368710,-0.062293,-0.396275,0.208938,0.079874,0.218388,-0.397216,-0.608849,-0.262612,0.189067) * L1_2 + mat4(0.047186,-0.015821,-0.134876,-0.051461,-0.182812,0.121567,-0.091896,-0.266728,-0.081899,-0.268311,-0.010982,-0.278684,0.227506,0.069689,0.009888,-0.185038) * L1_3 + mat4(-0.053806,-0.227346,-0.191787,-0.189449,0.147890,-0.329187,0.089971,-0.074032,0.122413,-0.003610,0.014808,0.266434,-0.117981,-0.053026,0.036075,0.077266) * L1_4 + mat4(0.113675,0.058113,0.049189,-0.215970,0.120205,-0.135942,0.092989,-0.107708,0.022841,0.134603,-0.008646,-0.132910,0.757913,0.183791,-0.016909,-0.204764) * L1_5 + mat4(0.118620,-0.170635,-0.059398,-0.214172,0.221113,-0.313329,-0.078931,0.095257,0.141105,0.339036,-0.215506,0.207236,0.156014,-0.127454,-0.142844,-0.202183) * L1_6 + mat4(-0.359775,0.171570,-0.015720,0.268807,-0.242176,-0.396228,-0.021451,-0.278751,0.049318,-0.129425,0.037201,-0.207309,0.074375,0.209895,0.017316,-0.083584) * L1_7 + mat4(0.006189,0.081471,0.010792,-0.062164,-0.012489,-0.431864,0.122501,-0.367912,-0.265438,-0.127118,0.075876,-0.332132,-0.208840,-0.128082,-0.410847,0.098291) * L1_8 + mat4(-0.060811,0.252317,0.198701,-0.295344,0.000654,-0.216893,-0.113169,0.332162,0.108693,0.405677,0.097005,-0.137949,-0.083002,0.330385,0.193415,0.489035) * L1_9 + mat4(-0.356900,0.017550,-0.475918,0.051979,-0.275385,0.010309,-0.078799,0.134731,0.182791,-0.144299,0.004334,-0.112697,-0.435835,0.105562,-0.091465,-0.406093) * L1_10 + mat4(0.281945,-0.543369,-0.089611,-0.138213,0.599076,0.433957,0.745773,0.567341,0.161323,-0.768287,-0.050195,-0.006449,0.014426,-0.123788,-0.048626,0.151381) * L1_11 + mat4(-0.052814,-0.346154,-0.350753,0.058167,0.001245,-0.100302,-0.014548,0.097350,0.050542,0.681308,0.341813,-0.068574,-0.085519,-0.206955,-0.138914,-0.079256) * L1_12 + mat4(0.054729,-0.208971,0.132971,-0.144283,-0.029510,0.161999,-0.650321,0.074216,-0.110316,0.156487,0.197007,-0.000495,-0.195646,-0.049313,-0.303557,0.208624) * L1_13 + mat4(-0.203248,-0.654181,-0.157334,-0.504327,-0.359413,0.274921,-0.337893,-0.374143,0.027510,0.455567,0.057505,0.342305,-0.317091,-0.440896,-0.347062,-0.360897) * L1_14 + mat4(0.302415,0.205703,0.119825,-0.044172,0.046332,-0.056128,0.002248,-0.309342,0.083187,0.014989,0.045065,0.102208,-0.157994,-0.317562,-0.062151,-0.166214) * L1_15 + vec4(0.474414,-0.111019,-0.798623,-0.413470)));\nvec4 L2_10 = sin((mat4(-0.038691,-0.028400,-0.111951,0.380939,-0.370472,-0.221783,-0.071779,0.247267,-0.268301,0.149407,0.091561,0.111949,-0.002728,0.209053,-0.074528,0.169841) * L1_0 + mat4(-0.050976,0.126123,-0.086270,-0.221915,0.443089,0.030988,0.060604,-0.196091,-0.066882,0.548912,-0.001946,-0.662441,0.171485,-0.318190,0.399972,0.049915) * L1_1 + mat4(-0.122460,0.260116,-0.459019,0.314613,-1.026963,-0.830495,1.212402,-0.473772,0.425808,-0.238547,-0.062302,0.135081,-0.457069,0.115399,0.725912,-0.286787) * L1_2 + mat4(0.214636,0.223786,0.148686,0.036450,0.089551,-0.094417,-0.014669,-0.387662,0.451795,-0.137218,-0.123043,0.060577,-0.042424,0.383918,0.383862,-0.105295) * L1_3 + mat4(0.238407,0.328038,-0.193743,0.381424,0.092120,-0.095300,0.268972,-0.248276,-0.298566,0.350111,-0.283900,-0.074189,-0.108540,-0.386421,0.067481,0.453260) * L1_4 + mat4(-0.285499,0.567206,-0.260089,-0.812626,-0.491893,0.353659,-0.003854,0.791642,-0.067550,-0.043556,-0.112686,-0.123546,-0.015806,0.747855,0.174449,-0.518362) * L1_5 + mat4(-0.137744,-0.130532,0.257700,0.358316,-0.194835,-0.064269,0.212262,0.426826,-0.049029,-0.091551,0.329770,-0.100007,0.158326,-0.824165,0.132889,0.610751) * L1_6 + mat4(0.034897,-0.469320,0.202380,-0.114436,0.057714,0.334868,0.219173,0.141084,0.526490,0.211238,0.081941,0.158837,-0.197068,0.268785,-0.345540,0.060000) * L1_7 + mat4(0.025577,-0.605683,-0.392057,-0.318636,-0.339778,0.281933,0.273441,0.253967,-0.239356,-0.423789,0.005741,-0.464951,0.016380,0.272339,0.630270,-0.063352) * L1_8 + mat4(-0.197349,0.248235,0.070051,-0.119498,0.145147,0.031777,-0.366826,-0.446526,0.029576,-0.471969,0.185943,0.214671,0.832909,-0.175707,-0.274451,-0.446180) * L1_9 + mat4(0.268692,-1.099030,-0.455639,0.331009,-0.174639,-0.183452,1.021178,0.248696,0.373377,0.407592,-0.255254,-0.042431,0.352156,-0.593348,0.049823,0.601978) * L1_10 + mat4(0.179857,0.366671,-0.053325,-0.146451,-0.789395,-0.955202,-0.627042,-0.249121,0.356217,0.644629,-0.175548,-0.341118,-0.027764,0.005690,-0.139206,-0.046439) * L1_11 + mat4(0.270111,-0.122243,-0.331773,1.318913,0.183702,-0.051611,0.034172,0.060925,-0.078319,0.105548,-0.255921,-0.840030,0.124389,-0.030422,0.115160,0.394208) * L1_12 + mat4(-0.010634,-0.008375,0.130343,0.027104,0.045409,0.740530,-0.086743,-0.103192,-0.195384,-0.470743,0.331748,-0.119364,-0.445929,0.465376,-0.105000,0.630065) * L1_13 + mat4(-0.238894,0.242803,1.148172,0.691318,-0.155405,-0.137685,-0.402818,0.276444,0.003790,-0.697803,-0.029967,-0.155870,0.102099,-0.091652,-0.356653,-0.038082) * L1_14 + mat4(-0.001594,-0.065969,-0.069315,0.024429,0.198272,-0.183096,-0.365276,-0.221129,0.010663,0.248232,-0.077992,-0.073980,-0.224470,0.476640,0.361264,-0.714278) * L1_15 + vec4(-0.171939,0.674906,-0.116404,-0.478062)));\nvec4 L2_11 = sin((mat4(0.070132,-0.261741,-0.215164,0.245607,-0.274836,0.320069,0.261863,-0.098120,-0.219898,0.142436,-0.009726,0.032664,-0.101305,-0.072560,-0.438982,0.221851) * L1_0 + mat4(-0.074439,-0.107682,-0.090559,-0.028079,0.327900,-0.212940,-0.496474,-0.155198,-0.124797,0.419247,-0.418069,-0.041797,-0.008452,0.127985,0.239161,-0.154632) * L1_1 + mat4(-0.021058,-0.296594,0.056082,0.141369,-0.252365,-1.074304,-0.047111,-0.757572,0.016944,0.170481,-0.262134,0.204181,-0.111288,-0.343151,-0.637916,0.036728) * L1_2 + mat4(-0.018497,-0.184412,0.168738,-0.028452,-0.063507,-0.174350,-0.201987,-0.046153,-0.288932,-0.119071,-0.503607,0.203964,0.042111,0.014472,-0.032539,-0.014929) * L1_3 + mat4(0.007091,0.076468,-0.051686,-0.036691,0.007692,0.167386,-0.499082,0.073029,0.098929,0.143422,0.411746,-0.653024,-0.085311,0.023227,0.200611,-0.276121) * L1_4 + mat4(-0.166211,-0.021459,0.146067,0.064243,0.047410,0.382949,-0.139341,-0.114837,0.022940,-0.081231,-0.035349,-0.047534,0.867607,0.183432,-0.994136,-0.182386) * L1_5 + mat4(-0.304958,-0.034029,0.323503,-0.132277,0.277052,-0.131121,0.311455,0.140317,0.091623,0.118268,-0.390473,-0.137128,-0.641611,0.228667,0.555616,0.449054) * L1_6 + mat4(-0.135873,-0.004102,0.404299,0.170401,-0.236721,-0.100711,-0.463225,-0.043459,0.125146,0.336016,-0.009656,0.355061,-0.036906,-0.255987,-0.422147,0.032082) * L1_7 + mat4(0.214847,0.367863,0.446497,0.118680,0.391238,0.029429,-0.428324,-0.106271,-0.424308,-0.346419,-0.136702,0.064087,-0.165560,0.072277,-0.572499,-0.143390) * L1_8 + mat4(0.301842,0.108710,0.022082,0.096796,0.115654,0.207830,-0.229857,-0.145602,0.087306,0.281408,-0.027372,0.184916,0.652873,-0.411865,-0.453874,-0.055200) * L1_9 + mat4(-0.348769,0.610802,1.226824,0.315908,0.188796,-0.419030,-0.198484,-0.120249,0.354980,-0.308190,0.042658,0.177451,-0.299589,0.045443,0.382343,0.204123) * L1_10 + mat4(0.262909,0.288311,0.000197,0.141576,-0.777113,1.101804,0.135763,1.458721,0.591788,0.614676,-1.289171,0.283600,0.026356,-0.116624,-0.330485,0.348575) * L1_11 + mat4(-0.517997,0.523639,0.031516,0.115868,-0.275817,-0.171478,-0.050364,-0.068075,0.254818,0.286561,-0.359653,0.026375,0.262012,0.370460,0.475096,0.012398) * L1_12 + mat4(0.019871,0.085678,-0.173384,-0.041489,0.245817,0.043254,0.645727,-0.110146,-0.216364,0.066852,-0.031055,-0.010306,-0.075390,0.184296,0.362684,0.439700) * L1_13 + mat4(0.721365,-0.484956,-0.715779,-0.211286,0.435491,-0.330055,0.841944,-0.266604,-0.045100,-0.195607,-0.139520,-0.284354,0.062723,0.235902,0.490584,-0.015187) * L1_14 + mat4(0.034625,0.039383,-0.043042,-0.006719,0.226297,-0.073572,0.159455,-0.037896,-0.046602,0.144807,0.257506,-0.020201,0.152446,0.539700,-0.472156,0.229067) * L1_15 + vec4(1.340557,-0.486294,-0.930841,-0.661098)));\nvec4 L2_12 = sin((mat4(0.170136,0.030097,0.100021,-0.034307,-0.141107,0.060563,-0.055831,0.025395,-0.098238,0.335885,0.042644,-0.124081,-0.400783,-0.043592,0.100266,0.179045) * L1_0 + mat4(-0.201601,0.157366,0.007841,-0.117932,0.583940,0.145359,0.137327,0.039208,0.213130,0.979739,0.182132,0.384643,0.076749,-0.239858,0.661775,0.064315) * L1_1 + mat4(-0.142815,0.212128,-0.213816,0.148768,0.181847,-1.704463,-0.876375,0.098160,-0.155469,-0.003879,0.043940,0.227086,0.271997,-0.985220,-0.643828,0.025212) * L1_2 + mat4(-0.039634,0.250989,-0.191495,-0.077273,0.002880,0.188058,0.172822,-0.002290,0.436445,-0.036684,-0.302989,-0.023665,0.243991,-0.068446,-0.084949,0.321331) * L1_3 + mat4(-0.422520,0.095367,0.027600,-0.098563,0.247212,0.277787,0.328694,0.133781,-0.519293,-0.264075,-0.366573,0.103187,0.372961,-0.383775,0.114389,-0.232151) * L1_4 + mat4(0.176723,0.423969,0.443678,0.143252,-0.093542,0.180120,-0.517265,0.025974,-0.101182,-0.026993,-0.122317,0.064007,-0.067574,0.081594,-0.363187,0.831534) * L1_5 + mat4(-0.057092,-0.073381,-0.189392,0.005446,-0.004440,0.115221,0.174975,-0.069197,-0.312641,0.013250,0.168196,0.175649,0.082051,-0.110508,-0.051323,-0.616246) * L1_6 + mat4(0.054601,-0.334181,-0.071571,-0.551384,-0.174710,0.033552,-0.017813,0.341461,-0.332502,0.378690,0.253449,0.021227,-0.363545,0.088143,-0.294249,0.326303) * L1_7 + mat4(-0.693579,0.550333,0.892325,-0.455625,-0.138051,0.093298,0.122714,0.074106,-0.012656,-0.193251,0.155165,0.072784,-0.524272,0.218386,-0.220086,-0.171042) * L1_8 + mat4(-0.320047,0.060020,0.010360,0.276132,-0.096543,0.066379,-0.209957,0.140278,0.379488,0.169043,0.428560,0.322143,0.369243,0.131295,0.080493,0.111983) * L1_9 + mat4(-1.102012,-0.296814,-0.002217,-0.275347,-0.176449,-0.608940,0.176336,-0.015643,0.658441,0.045164,0.271230,0.065475,0.473210,0.342955,0.491945,-0.554214) * L1_10 + mat4(0.006456,0.310644,-0.139750,0.268866,0.999873,0.708307,0.554271,-0.523893,0.207204,0.672607,0.793274,0.371636,-0.110247,0.285866,0.631789,-0.160173) * L1_11 + mat4(-0.628026,0.235580,0.366783,-0.227528,0.037065,-0.106603,0.411589,-0.061563,0.093745,0.502938,-0.049618,0.062453,0.027709,-0.238233,-0.080116,0.059694) * L1_12 + mat4(0.088740,0.036807,0.185548,0.125691,-0.646245,0.038492,-1.229921,-0.165370,-0.085362,-0.166483,-0.326422,-0.255554,-0.122635,-0.012715,0.053785,-0.051580) * L1_13 + mat4(-1.130989,-0.883445,-0.106467,0.857890,-0.034401,-0.054071,-0.181885,0.004633,-0.049647,-0.359953,-0.018371,-0.235128,0.088324,0.349911,0.238201,-0.080243) * L1_14 + mat4(0.535821,0.535255,0.232051,0.056484,0.032550,-0.028659,0.532927,0.138804,0.092912,0.083857,-0.245958,0.072735,0.182970,0.281571,0.238302,-0.013696) * L1_15 + vec4(-0.058028,-0.822998,0.493001,0.457790)));\nvec4 L2_13 = sin((mat4(0.014445,0.049942,-0.146404,-0.173135,0.173435,-0.646389,0.283499,0.320261,-0.179855,-0.075531,-0.150619,0.174684,-0.159951,0.570268,0.259812,0.003856) * L1_0 + mat4(0.252178,-0.340696,0.087704,-0.309637,0.120509,0.119181,-0.393253,-0.083698,-0.136063,-0.392091,-0.411534,0.744088,-0.054942,0.015310,0.106191,-0.273684) * L1_1 + mat4(-0.299835,-0.179968,-0.116802,0.173319,0.478047,1.859479,0.921879,-0.453067,-0.237977,0.043473,0.075509,-0.101605,-0.469461,0.101761,0.050725,0.384633) * L1_2 + mat4(-0.245517,0.305557,0.120098,0.081346,-0.268884,-0.100832,-0.110069,0.018171,-0.031828,-0.327180,0.440193,0.209053,-0.365327,0.201945,0.064028,0.567257) * L1_3 + mat4(-0.008243,0.006370,-0.008415,-0.067232,-0.644439,-0.258115,-0.360702,-0.099752,0.428950,0.616521,0.118555,0.148879,-0.236759,0.183865,0.159333,-0.456364) * L1_4 + mat4(0.041638,-0.216468,0.017175,-0.287280,0.312628,0.134180,-0.083174,0.130253,-0.037132,0.251543,0.014107,-0.105571,0.519592,0.318931,-0.463983,0.360382) * L1_5 + mat4(-0.029445,0.004279,0.267319,0.125674,0.190649,-0.197394,-0.076678,0.118473,-0.109329,-0.323265,-0.179095,-0.346020,-0.158198,-0.146622,0.938111,0.044349) * L1_6 + mat4(-0.154892,-0.638402,0.338964,-0.020683,-0.014467,-0.113295,-0.011176,0.413572,-0.189995,-0.303732,0.079082,-0.212342,0.333224,-0.453691,-0.260779,0.298051) * L1_7 + mat4(0.312288,-1.043865,0.119352,-0.546896,0.535907,0.012918,-0.115310,0.303822,0.556046,-0.083373,0.221168,-0.107254,-0.096973,-0.252975,0.284845,0.234367) * L1_8 + mat4(0.138207,-0.015163,-0.163008,-0.438954,0.138615,-0.298661,-0.251577,-0.160614,0.009102,0.044192,0.029247,0.042010,0.377445,-0.457643,0.033020,-0.191839) * L1_9 + mat4(-0.626874,-0.489098,0.532753,-0.512425,0.492362,0.039133,0.193986,0.142945,0.034741,-0.037814,-0.042106,-0.122422,-0.519058,-0.524112,0.127887,-0.198178) * L1_10 + mat4(-0.179618,0.028052,-0.340226,0.297382,-1.476581,-0.745846,-0.116110,-0.866465,-0.581349,-0.476835,-0.604727,-0.212361,-0.193300,-0.022433,-0.517428,-0.208065) * L1_11 + mat4(0.398796,-1.195498,-0.294082,0.161749,0.175958,0.217410,0.013749,0.146923,-0.071744,0.293330,-0.388489,-0.075603,-0.549067,0.012194,-0.044095,-0.093737) * L1_12 + mat4(-0.023559,-0.407030,-0.067410,-0.099793,0.752803,-0.581298,-0.109901,0.364863,0.001962,0.302889,0.240430,-0.128571,0.015336,0.155784,-0.044034,0.729986) * L1_13 + mat4(-0.169695,0.336147,0.147896,0.107090,-0.090951,-0.411468,-0.049052,0.331953,0.083097,0.310413,0.301559,-0.003940,-0.370511,0.069835,-0.118515,-0.176503) * L1_14 + mat4(-0.006426,0.119709,-0.154443,0.436603,0.152119,0.025845,-0.189113,-0.136691,-0.108017,-0.079327,-0.108724,0.097775,-0.179672,0.022900,-0.165349,-0.204119) * L1_15 + vec4(0.392719,0.269190,-0.325709,1.387539)));\nvec4 L2_14 = sin((mat4(-0.029811,0.111939,0.116614,-0.026952,-0.182807,0.448993,-0.210746,-0.057456,-0.034172,-0.041500,0.102417,0.052087,0.151640,0.133066,0.106578,-0.033796) * L1_0 + mat4(0.067687,-0.030006,0.016318,0.142745,0.059276,0.309426,0.050789,-0.054537,0.005505,-0.395231,-0.485244,-0.342290,0.090749,0.590693,0.485078,0.133625) * L1_1 + mat4(-0.210327,0.197884,0.272181,-0.234009,0.559652,0.103321,0.639133,0.355615,-0.249447,-0.167754,-0.189701,-0.244442,-0.246430,0.605209,0.447876,-0.201021) * L1_2 + mat4(-0.079946,0.050836,0.148736,0.014453,-0.267063,-0.010430,-0.217404,0.000859,-0.285149,-0.133505,0.086093,-0.122827,-0.088519,-0.117292,0.063599,0.066420) * L1_3 + mat4(-0.183506,-0.026630,-0.334754,-0.120446,0.212807,-0.186059,0.029414,0.330259,-0.001880,0.061808,-0.353044,0.067755,0.046620,0.237324,0.124340,0.070022) * L1_4 + mat4(-0.102380,0.328125,0.171674,-0.037667,-0.140471,-0.338438,-0.365686,-0.294665,-0.108411,0.101293,-0.007651,0.016998,0.012969,-0.420398,-0.815406,0.076674) * L1_5 + mat4(-0.075648,0.253651,-0.119852,0.292804,-0.257219,-0.305330,0.242754,-0.002845,0.102659,0.162594,-0.001371,-0.005242,-0.337629,0.014346,0.029913,0.490792) * L1_6 + mat4(0.254324,-0.469778,-0.579123,0.555365,-0.101835,0.045792,0.099267,0.034770,0.098905,-0.374720,-0.282027,0.204622,0.135951,-0.392582,0.061898,0.045057) * L1_7 + mat4(0.033484,-0.108948,0.045816,0.232914,0.011907,-0.145752,-0.284330,-0.318323,0.184308,-0.359122,0.394496,-0.299116,-0.043377,-0.157245,0.030489,-0.140241) * L1_8 + mat4(0.175750,-0.314793,0.058545,0.125581,-0.062625,0.070425,-0.493334,-0.180955,0.127579,0.257626,0.579211,0.049833,-0.336100,0.615394,-0.189484,0.438684) * L1_9 + mat4(-1.121856,0.858258,0.136393,0.538446,0.329494,0.190181,0.288706,0.272035,-0.071540,-0.017044,-0.223179,-0.023706,-0.386880,0.430350,0.601097,-0.101788) * L1_10 + mat4(0.059435,-0.121853,-0.210215,-0.211332,-0.310625,0.616962,-0.994675,-0.877043,-0.162466,-0.433928,-0.561439,-0.201791,-0.049268,0.152871,0.367405,0.089711) * L1_11 + mat4(0.039007,0.065213,0.197602,0.162003,0.003622,0.179648,-0.042201,-0.135670,-0.020021,-0.741463,-0.318093,-0.044761,-0.179426,-0.113076,-0.277926,0.181315) * L1_12 + mat4(0.000295,-0.044522,-0.042973,0.057148,-0.163501,0.243420,-0.051121,0.791889,0.269467,0.067380,-0.183913,0.022469,-0.161882,-0.046137,0.158974,0.201575) * L1_13 + mat4(0.009255,-0.114062,0.049427,0.793072,-0.411546,0.098245,-0.188918,0.501117,0.092231,0.153400,0.138573,0.101376,-0.483443,0.087867,0.154059,0.439271) * L1_14 + mat4(-0.057206,-0.253576,0.018025,-0.013254,-0.092590,-0.065381,-0.047153,-0.084528,0.135234,0.108177,0.084202,0.047328,-0.012394,0.006659,-0.202460,0.255453) * L1_15 + vec4(0.367962,-0.604185,0.345193,-0.539029)));\nvec4 L2_15 = sin((mat4(0.160842,-0.164056,0.048946,-0.111715,-0.056862,-0.184104,-0.166457,0.172534,0.029231,-0.185675,0.206097,-0.017341,-0.432428,0.585564,-0.266084,0.213299) * L1_0 + mat4(0.204703,0.199342,0.004740,-0.015753,0.388738,-0.239873,0.277676,-0.175902,-0.287550,0.397543,0.433579,-0.094505,-0.318598,0.134710,-0.386829,-0.083717) * L1_1 + mat4(-0.424167,0.085563,-0.311275,0.196334,0.889544,-0.321034,0.754072,0.443746,-0.776278,-0.252640,0.150167,-0.228538,-0.692623,-0.288304,0.063406,-0.013619) * L1_2 + mat4(0.016430,-0.118824,-0.116774,0.071167,0.002205,0.103369,0.264084,-0.141064,0.026546,-0.104559,0.175578,0.112133,-0.233893,-0.048778,0.003052,0.012631) * L1_3 + mat4(0.000518,-0.029425,-0.219010,-0.096573,0.269623,0.000359,-0.078789,-0.046823,-0.141856,0.100257,-0.097064,0.216577,0.239542,0.006558,0.127167,0.010072) * L1_4 + mat4(-0.237177,-0.176192,0.106829,0.408568,0.078987,-0.321399,0.019162,-0.002825,-0.030228,0.073624,0.024537,-0.010711,-0.585762,0.542349,0.171489,-0.009208) * L1_5 + mat4(0.081838,0.078290,0.076100,-0.236007,0.152923,-0.483371,0.243711,-0.058362,0.226757,-0.100659,0.193099,0.199315,0.070118,-0.345724,0.143058,0.660734) * L1_6 + mat4(-0.179068,-0.331281,-0.423217,0.803218,-0.070913,-0.158488,0.347028,0.053084,-0.097969,-0.334845,-0.079647,0.009074,-0.225447,-0.053821,0.106991,0.090172) * L1_7 + mat4(0.423103,-0.226256,-0.599136,-0.114455,-0.121939,-0.230187,-0.007771,-0.168973,0.166830,-0.245695,-0.136348,0.297854,-0.172786,0.409549,0.464614,-0.019246) * L1_8 + mat4(0.254666,-0.076225,-0.054668,0.035842,-0.035202,0.190618,-0.198197,0.179641,-0.328842,-0.228267,0.389184,0.082191,-0.506415,0.045472,-0.885946,0.260870) * L1_9 + mat4(0.106380,0.222885,0.897500,-0.795026,0.153621,-0.145666,0.031482,0.287751,0.396159,0.191061,-0.084505,-0.061635,0.533600,-0.191550,0.303380,-0.030561) * L1_10 + mat4(-0.123376,0.027615,-0.000008,0.001845,-0.583191,-0.652591,-1.308626,0.929975,-0.502407,0.089259,0.379919,-0.249748,-0.136513,-0.067752,-0.534052,0.043136) * L1_11 + mat4(-0.088618,-0.066332,0.330990,-0.053693,0.043071,-0.136535,0.242922,-0.114636,-0.061102,0.114844,-0.280782,0.039083,0.037537,0.169206,-0.075025,-0.040897) * L1_12 + mat4(0.010017,-0.134935,0.299725,0.053277,-0.057944,0.370383,0.584482,-0.308525,0.262310,-0.127001,0.172998,0.203424,0.212208,-0.043048,0.148176,0.049628) * L1_13 + mat4(1.118173,-0.806761,0.392511,0.128843,-0.538043,0.261885,0.207890,-0.316656,-0.213198,0.271978,0.266055,-0.075173,0.118776,0.146888,0.075683,-0.435461) * L1_14 + mat4(-0.169248,-0.121506,-0.308320,0.017238,0.034415,-0.033694,-0.025075,0.001269,0.261524,-0.057422,-0.010151,0.077598,0.027534,-0.148689,0.104810,-0.153340) * L1_15 + vec4(-0.480976,-0.117166,0.038012,0.424760)));\nif(BlockIndex == 0)\n{\nvec4 L3_0 = sin((mat4(-0.199929,0.186741,0.006323,-0.058333,-0.102147,0.011342,0.208961,-0.242790,-0.046459,0.150534,0.225199,0.167305,0.834323,-0.123323,-0.312301,0.347885) * L2_0 + mat4(0.091600,0.079029,-0.104960,0.031165,0.031184,0.258802,0.096782,-0.098808,-0.020058,0.005637,0.106286,0.001277,-0.215289,0.189975,0.218774,0.010409) * L2_1 + mat4(-0.019181,0.102640,0.056332,-0.224497,-0.025373,-0.036375,-0.071945,0.092487,0.019964,-0.281540,0.097383,-0.626700,-0.240918,0.055659,0.157880,-0.104663) * L2_2 + mat4(0.097504,0.055489,-0.053950,0.055435,0.093805,-0.003492,-0.005156,-0.185713,0.056306,0.337055,0.081200,0.142318,0.046815,0.068512,-0.190870,-0.060854) * L2_3 + mat4(0.024996,-0.005622,-0.076852,0.023607,-0.230076,-0.132211,0.121502,-0.156668,0.159062,-0.021212,0.051097,0.076614,0.455283,-0.119597,0.008246,-0.267499) * L2_4 + mat4(0.427493,-0.058654,-0.368378,0.056308,0.042683,-0.122592,-0.057163,0.023910,0.067301,-0.109600,-0.225875,-0.064909,-0.073738,0.162219,-0.296500,-0.059971) * L2_5 + mat4(-0.651832,-0.067180,0.409658,-0.091444,0.401837,-0.607061,0.444771,0.026789,-0.474904,0.088547,0.085742,-0.006557,0.380165,0.037791,0.041178,-0.012855) * L2_6 + mat4(-0.205250,-0.100810,0.103651,0.127284,-0.094289,0.014383,0.244050,0.057139,0.001906,0.105330,0.050248,0.434450,-0.044825,-0.221259,0.104751,-0.041216) * L2_7 + mat4(0.037813,0.086546,-0.164403,-0.055020,-0.170367,-0.051573,0.126633,0.107557,-0.126472,0.287037,0.012202,-0.127676,-0.334792,-0.237451,0.089818,0.241375) * L2_8 + mat4(0.626934,-0.306294,-0.331596,-0.277519,0.008870,-0.000841,0.168690,0.026752,-0.380042,-0.158388,-0.343901,-0.327800,-0.077720,-0.043140,-0.441591,0.156372) * L2_9 + mat4(-0.188468,0.138281,0.270841,0.041730,-0.056855,-0.059492,0.141639,-0.358727,0.158731,0.100084,-0.458477,-0.052654,0.163904,0.000359,-0.010744,-0.011890) * L2_10 + mat4(-0.144464,0.157212,-0.246657,0.032213,0.241949,0.208037,0.219930,0.071943,0.134246,0.003216,0.032617,-0.148746,-0.215906,0.005574,0.088646,-0.128544) * L2_11 + mat4(0.020188,-0.149242,0.269584,-0.178041,-0.317560,-0.135393,-0.136931,-0.063157,0.029800,0.057623,-0.196402,-0.199945,-0.295354,0.430792,-0.105171,0.030615) * L2_12 + mat4(0.049627,0.000244,-0.016753,-0.253236,0.021464,-0.000590,-0.073895,-0.069524,0.164825,0.211313,0.153023,0.094532,-0.158512,-0.019156,0.057322,0.206532) * L2_13 + mat4(0.340332,-0.304089,-0.388468,0.095697,0.120314,0.222403,0.014666,0.185183,-0.162597,-0.044403,0.152716,-0.063766,0.032140,-0.364109,0.271160,0.009724) * L2_14 + mat4(-0.008009,-0.208990,0.322258,-0.204313,0.251572,0.067891,-0.112948,-0.034255,0.075294,-0.004033,-0.011702,0.185075,-0.150258,-0.251159,0.503821,-0.320382) * L2_15 + vec4(0.808054,0.451058,0.074470,0.765204)));\n    return L3_0;\n}\nelse if(BlockIndex == 1)\n{\nvec4 L3_1 = sin((mat4(-0.228074,0.129610,-0.032989,0.060543,-0.081712,-0.184217,0.049905,-0.064081,-0.033615,0.137669,0.095816,0.122311,0.278794,0.145603,0.219602,-0.237605) * L2_0 + mat4(-0.152263,0.031062,0.020327,-0.092674,-0.031043,0.385165,0.129069,0.209239,0.153237,-0.074263,-0.006017,-0.027504,0.113617,0.069741,0.147976,-0.181326) * L2_1 + mat4(0.123344,0.232108,-0.028746,0.045582,-0.082097,-0.199922,-0.147287,0.055866,0.527397,-0.170034,0.005185,0.480174,0.038036,0.089520,0.003841,0.038761) * L2_2 + mat4(-0.077564,-0.012088,0.044680,0.065917,0.313111,-0.042187,-0.109042,0.186783,0.145723,0.074702,0.036103,0.172765,-0.011992,0.139156,0.150788,-0.475639) * L2_3 + mat4(-0.000385,-0.110441,-0.032511,0.072949,0.106993,-0.073679,-0.230484,0.175666,-0.049074,0.033815,-0.061328,-0.066101,0.189832,-0.254938,-0.027175,-0.102574) * L2_4 + mat4(-0.214669,0.033285,0.069659,0.387080,-0.230510,-0.112835,0.004136,0.106022,-0.136904,-0.211102,0.107267,-0.076068,-0.201760,0.032487,0.189579,-0.155428) * L2_5 + mat4(0.197071,-0.100977,-0.132966,0.065767,0.443092,0.372607,-0.097147,-0.458228,-0.159430,0.161843,-0.185799,0.134566,-0.260412,-0.032031,-0.019077,0.197226) * L2_6 + mat4(0.090126,-0.229185,-0.194043,-0.073863,-0.085325,-0.132374,-0.154765,0.117991,0.027536,0.065291,0.056465,0.158503,-0.039958,-0.091137,-0.077922,0.025775) * L2_7 + mat4(0.245022,0.122202,0.179093,-0.237012,0.029087,-0.014642,-0.022198,0.018039,0.047991,0.207345,0.000533,-0.053857,-0.327195,-0.397820,-0.255713,0.065126) * L2_8 + mat4(-0.122499,-0.251001,0.678877,-0.324038,-0.111962,-0.105037,-0.098697,-0.126625,-0.087499,0.236480,0.170918,-0.050257,-0.174309,0.209736,-0.022244,0.052378) * L2_9 + mat4(-0.034541,0.100193,-0.107713,-0.154157,0.095809,0.031605,-0.113107,0.037952,-0.012846,0.015912,0.047831,0.015850,0.113886,-0.173303,-0.132080,-0.035268) * L2_10 + mat4(-0.072344,0.126235,0.018663,0.160665,0.152997,0.324405,0.300108,-0.150023,-0.104720,-0.123361,-0.193569,0.100104,0.060770,0.064050,-0.452555,0.212614) * L2_11 + mat4(0.033357,-0.240897,-0.038892,0.083759,-0.080347,-0.314639,-0.132480,-0.263488,-0.029030,0.050608,0.120600,-0.051367,-0.287736,0.385332,0.184914,-0.491999) * L2_12 + mat4(0.285385,0.086331,0.104188,0.248649,0.075490,0.099310,0.216109,0.132072,0.223621,0.230087,0.130272,-0.736612,-0.100898,-0.175086,-0.413743,0.145723) * L2_13 + mat4(-0.136897,-0.231596,-0.245557,0.169919,-0.056430,-0.141932,-0.052900,-0.086451,0.143766,0.104184,0.011191,-0.017382,-0.164617,-0.730258,-0.186068,-0.237669) * L2_14 + mat4(0.093937,-0.246792,-0.126416,-0.022491,0.142147,0.017155,0.388689,-0.082826,-0.046660,-0.063092,-0.013358,0.241772,-0.368053,0.238928,0.257976,-0.334867) * L2_15 + vec4(-0.394243,0.475935,0.002481,1.024777)));\n    return L3_1;\n}\nelse if(BlockIndex == 2)\n{\nvec4 L3_2 = sin((mat4(-0.042849,0.222329,0.100400,-0.170969,0.026460,0.208533,-0.020407,0.058111,0.092474,0.327498,0.194515,-0.022331,-0.113366,-0.491970,-0.602128,-0.444737) * L2_0 + mat4(-0.066057,-0.217340,-0.068889,0.131573,0.083779,0.458377,-0.086092,-0.180774,0.015613,-0.040687,-0.027134,-0.117456,0.105913,0.365232,0.015924,-0.095191) * L2_1 + mat4(-0.026317,-0.046131,0.169781,-0.112701,-0.099766,-0.107358,0.098909,0.100018,-0.235598,0.192723,0.157654,-0.191013,-0.013076,0.118494,0.081792,-0.128452) * L2_2 + mat4(-0.032090,-0.061462,0.021395,0.054084,-0.182774,0.112393,-0.046710,-0.302732,-0.088186,0.001631,0.045329,-0.085344,-0.037488,-0.116744,-0.022326,-0.034451) * L2_3 + mat4(-0.068124,-0.012316,-0.251003,-0.150226,-0.242984,0.264294,-0.007971,-0.157139,0.249538,-0.040374,-0.137889,0.151691,0.240350,0.234191,-0.057606,0.156082) * L2_4 + mat4(0.074907,0.447710,0.884156,0.346312,0.236719,-0.214410,-0.038853,0.087218,0.093632,0.218969,-0.098984,-0.014264,-0.147426,-0.203168,-0.259981,0.030775) * L2_5 + mat4(-0.218073,0.263061,0.136457,-0.057976,-0.748780,-0.125400,-0.053015,0.408266,-0.024082,0.030667,-0.142479,-0.074302,0.112460,0.014166,0.070793,0.109467) * L2_6 + mat4(-0.112390,-0.124195,-0.182772,-0.027115,0.113462,0.113506,0.063699,0.197360,0.098495,0.097245,0.095426,-0.035147,0.036182,-0.042476,-0.088789,0.293408) * L2_7 + mat4(0.100130,0.117487,-0.091175,-0.207891,-0.017292,-0.041865,0.023944,0.007723,-0.046410,-0.107918,-0.006184,-0.131943,-0.082612,0.177734,-0.006875,-0.028768) * L2_8 + mat4(0.428918,0.173108,-0.383291,0.455827,-0.009026,-0.126473,0.141809,0.124810,0.059435,0.534482,-0.072552,-0.068511,0.312875,-0.367428,-0.163790,0.100183) * L2_9 + mat4(0.064148,0.326524,-0.218905,0.058291,-0.020801,0.451291,-0.045850,-0.067034,-0.031251,-0.180849,-0.145014,-0.022673,-0.027665,-0.092699,0.006147,0.136608) * L2_10 + mat4(0.224428,0.189806,0.145735,-0.276202,0.113842,0.094635,-0.092267,-0.071519,0.011853,0.067494,0.028836,0.029303,-0.212326,-0.217413,0.196859,0.396748) * L2_11 + mat4(-0.080871,0.022402,-0.047082,0.044876,-0.028729,-0.159403,-0.224402,0.304431,-0.217921,0.039338,-0.230816,-0.051817,-0.259772,-0.257289,-0.168958,0.071896) * L2_12 + mat4(0.111071,0.093069,0.119091,-0.005383,0.030966,0.199126,-0.046433,-0.233688,0.096887,-0.255316,-0.287614,-0.272802,0.218528,-0.192513,0.106483,0.173177) * L2_13 + mat4(0.049996,-0.352688,-0.073106,-0.004487,0.034625,-0.010802,-0.136118,0.218498,-0.243368,0.138085,0.017992,-0.307913,-0.422817,-0.331482,-0.355985,0.306349) * L2_14 + mat4(-0.164450,0.262754,-0.227390,-0.203510,0.028476,-0.218837,-0.219530,0.000737,-0.005137,-0.057943,0.067849,-0.131423,-0.287257,0.638784,-0.428636,-0.087278) * L2_15 + vec4(0.399780,-1.054311,0.371708,-0.596810)));\n    return L3_2;\n}\nelse if(BlockIndex == 3)\n{\nvec4 L3_3 = sin((mat4(-0.106301,-0.001095,-0.058422,0.087458,-0.145676,0.023547,0.022458,-0.455467,0.394441,0.079491,0.069260,0.123592,-0.179452,0.723758,-0.597262,0.508074) * L2_0 + mat4(-0.232262,0.017938,-0.157937,-0.139753,0.101726,0.331944,-0.057276,0.682883,0.070506,-0.100740,0.062554,-0.130898,-0.004695,0.105886,0.010592,-0.148630) * L2_1 + mat4(-0.135806,-0.088279,0.052228,0.170859,-0.192142,0.034914,0.041880,-0.238867,0.055685,0.197795,0.424554,0.331747,0.185409,-0.150949,0.038328,0.076548) * L2_2 + mat4(0.108737,0.011523,-0.182731,0.111780,0.264966,0.050451,0.088643,0.317874,0.110819,-0.357431,0.334323,0.190985,0.076275,0.232812,-0.106268,-0.036428) * L2_3 + mat4(-0.147083,0.092097,0.032956,-0.055453,0.110593,0.109079,0.208308,-0.010044,-0.123888,-0.183382,-0.079182,-0.108026,-0.230515,-0.446645,-0.101140,-0.158282) * L2_4 + mat4(0.427083,0.426566,-0.375543,0.603913,-0.153977,-0.004987,0.099936,-0.019630,0.369581,0.138366,-0.218182,-0.153745,-0.109879,0.348722,-0.082763,0.076344) * L2_5 + mat4(0.397040,-0.442207,0.307045,-0.248222,0.717275,0.058749,0.301864,0.256686,0.131963,0.099169,0.077742,-0.035334,-0.375329,-0.534863,0.160640,0.013947) * L2_6 + mat4(-0.061521,0.097898,-0.091270,-0.148859,0.105242,0.129193,0.057156,0.073537,0.047649,0.040988,0.113104,0.030323,-0.162662,0.085804,0.292588,-0.014919) * L2_7 + mat4(0.034036,0.327007,-0.107124,-0.138408,0.132264,0.177432,-0.016189,-0.131294,-0.068895,-0.141538,0.151513,0.110051,0.562467,-0.211440,0.095873,-0.142870) * L2_8 + mat4(-0.417055,0.125092,-0.185035,0.586341,-0.004411,-0.366245,0.112664,-0.056965,-0.071760,0.214954,-0.325519,-0.025047,0.111003,0.082907,-0.056844,0.051806) * L2_9 + mat4(0.160257,-0.057994,-0.037217,-0.241380,0.065771,-0.038157,-0.072667,0.023326,-0.034824,0.190294,-0.188358,0.132043,-0.186902,-0.182867,0.066119,-0.150045) * L2_10 + mat4(-0.102570,0.033129,-0.163157,0.262990,-0.077329,-0.098459,-0.054431,0.668537,0.056798,0.042586,0.000752,-0.167635,-0.441808,-0.258732,0.131924,-0.343766) * L2_11 + mat4(0.043876,-0.090687,0.216201,-0.156205,-0.271826,0.006357,0.220324,-0.285323,0.110429,0.456371,-0.048358,0.172854,-0.285658,0.069808,-0.008153,0.160677) * L2_12 + mat4(0.042045,0.014839,-0.028930,0.130864,0.097336,0.063424,-0.096025,0.169220,-0.272559,0.523536,0.009379,-0.024693,-0.191635,-0.026178,-0.067869,-0.245103) * L2_13 + mat4(-0.118674,0.080236,-0.188964,-0.088387,-0.014606,-0.054917,-0.119620,0.098907,0.218099,-0.223581,0.030355,0.156724,-0.305861,-0.377267,0.224086,-0.776637) * L2_14 + mat4(0.288845,-0.212571,0.008904,-0.059709,0.100058,-0.101712,-0.094294,0.037156,0.013628,-0.024146,-0.107784,-0.135468,0.267446,0.210915,-0.028824,-0.075414) * L2_15 + vec4(0.202178,1.040747,-1.022517,0.738953)));\n    return L3_3;\n}\nelse if(BlockIndex == 4)\n{\nvec4 L3_4 = sin((mat4(0.017223,-0.037766,-0.206047,-0.110636,0.180426,0.368524,0.148123,0.264856,-0.042011,-0.074933,-0.094277,-0.092049,-0.305360,-0.239889,0.120491,0.025663) * L2_0 + mat4(0.056245,-0.034255,-0.195371,0.019755,-0.456288,-0.044919,0.157659,-0.080809,-0.032735,0.118172,0.070061,-0.003033,-0.230925,0.189728,0.169166,0.112797) * L2_1 + mat4(-0.029814,0.056517,0.177095,-0.354267,0.238315,0.000855,-0.015271,-0.127168,-0.335310,0.331880,0.000150,-0.012293,-0.062329,-0.030200,0.009230,-0.073042) * L2_2 + mat4(0.031057,-0.061188,-0.075398,0.110297,-0.183967,0.184429,0.220142,0.087155,-0.264923,-0.105763,-0.133886,0.272284,-0.120958,-0.188281,0.017880,-0.061642) * L2_3 + mat4(-0.043465,0.187663,-0.063532,0.071210,-0.067418,0.221875,0.140221,-0.040321,-0.040501,0.144108,-0.132121,-0.283568,0.066107,0.193573,0.304573,-0.000965) * L2_4 + mat4(-0.202114,-0.497701,-0.242985,0.054021,0.166863,0.019368,-0.147815,-0.175896,-0.092210,0.203398,0.251137,0.197170,-0.000623,0.006301,0.034199,0.231174) * L2_5 + mat4(-0.051382,-0.055640,0.175841,-0.146259,0.226676,-0.255391,0.022690,0.373920,0.124850,0.199375,-0.053446,-0.018167,0.142367,0.110792,-0.094474,-0.137113) * L2_6 + mat4(0.226931,0.045715,-0.163027,-0.019181,-0.100302,-0.169849,0.031387,-0.296429,-0.179641,-0.122642,-0.039561,-0.297928,0.001421,-0.016994,0.034859,-0.196820) * L2_7 + mat4(-0.086814,-0.023404,0.095782,0.240789,0.267480,-0.167217,0.087913,-0.135027,0.024990,0.208270,-0.029752,-0.258992,-0.398716,0.596183,0.170022,-0.558038) * L2_8 + mat4(-0.252176,0.005058,-0.142106,0.287699,0.133169,-0.280875,0.018838,-0.065681,-0.173861,-0.223481,0.045463,0.210130,-0.175982,0.014752,0.295853,-0.169618) * L2_9 + mat4(-0.250475,-0.037985,0.311783,0.063605,0.110973,0.114519,0.008221,-0.042391,0.036116,-0.191514,-0.276462,0.253290,0.187735,-0.016140,0.084918,-0.057252) * L2_10 + mat4(-0.459492,0.115028,-0.221068,0.031426,-0.415206,-0.060876,0.044288,0.048754,0.026388,-0.045852,-0.032356,0.370789,0.399441,0.020559,-0.034568,-0.264428) * L2_11 + mat4(0.012133,0.065196,0.002925,-0.099805,0.135539,-0.114608,0.019680,-0.212946,-0.076631,0.037763,0.064654,0.353101,-0.053980,-0.047757,0.223111,-0.004894) * L2_12 + mat4(-0.256210,0.152597,0.133436,0.044524,-0.174289,0.051470,0.107200,0.087407,-0.044604,0.120839,0.106984,0.341143,0.043854,-0.015054,0.028880,-0.064291) * L2_13 + mat4(0.100288,0.044080,-0.384251,-0.197819,0.001187,0.035346,0.078339,0.224890,-0.054402,0.011184,0.142220,-0.089500,0.596489,-0.037111,-0.027050,-0.425458) * L2_14 + mat4(0.130574,-0.007075,0.080169,0.289282,-0.181516,-0.329553,0.085166,-0.019797,-0.038316,0.168137,0.000992,0.086018,-0.222222,0.162575,0.227338,-0.420537) * L2_15 + vec4(0.555731,-0.496630,-0.439655,-0.160315)));\n    return L3_4;\n}\nelse if(BlockIndex == 5)\n{\nvec4 L3_5 = sin((mat4(0.174089,0.016206,-0.090273,-0.181798,-0.303723,-0.149637,0.105523,-0.063905,0.020473,-0.037096,-0.078959,-0.025714,0.128634,-0.588767,0.285449,0.662793) * L2_0 + mat4(-0.072150,0.007429,-0.009683,-0.169840,0.219153,0.283092,-0.375559,0.098649,-0.033844,0.014145,0.111043,0.036095,0.063476,0.072650,-0.184327,0.048252) * L2_1 + mat4(0.019379,0.195609,-0.160008,-0.193827,-0.000309,-0.041778,0.159063,-0.088367,0.065297,-0.031806,0.302269,-0.155543,0.215278,0.129177,0.038381,-0.016535) * L2_2 + mat4(-0.102052,0.002259,0.100046,0.122242,0.015005,-0.099727,0.255847,0.326477,0.014880,0.148611,-0.026034,-0.126513,-0.237168,0.127985,-0.076115,0.022461) * L2_3 + mat4(-0.081036,0.007737,-0.077558,0.054971,-0.042246,0.144255,0.100993,-0.215098,0.146532,0.142311,-0.101103,-0.046374,-0.161356,0.125543,0.040657,0.015803) * L2_4 + mat4(0.450342,-0.456314,0.157546,0.240400,-0.184850,-0.027519,0.000055,-0.199744,-0.129803,-0.066157,0.268694,0.200760,-0.092907,-0.145946,-0.128420,0.275396) * L2_5 + mat4(0.338187,0.109962,0.207282,-0.141854,-0.445242,0.106056,0.139073,-0.097976,0.111471,0.187893,-0.196257,-0.194607,0.167183,-0.029224,-0.211099,-0.251605) * L2_6 + mat4(-0.237182,-0.158650,0.189273,-0.024544,0.441450,0.070455,-0.145088,-0.058248,0.111395,-0.027961,0.028082,0.074563,0.032823,0.080814,0.025623,-0.369596) * L2_7 + mat4(-0.108545,0.055830,0.087980,0.111486,-0.033103,-0.112706,0.202003,0.024562,0.157513,0.056233,-0.503327,-0.213144,-0.054713,0.177801,0.096017,0.365755) * L2_8 + mat4(0.006175,0.010668,-0.212979,0.105346,0.089345,-0.147458,0.011266,-0.009764,-0.065095,0.130746,-0.235218,0.255605,-0.198267,-0.142533,-0.236716,0.091638) * L2_9 + mat4(0.123392,0.299254,-0.162687,0.195372,0.074736,-0.060764,0.036286,0.223786,-0.352371,-0.010734,0.048056,0.244374,-0.098440,-0.064119,0.169039,-0.197063) * L2_10 + mat4(0.062255,0.044364,-0.182815,0.352044,0.210225,0.118237,-0.362873,-0.071747,-0.041448,-0.054583,-0.059275,0.263214,0.105394,0.163785,-0.217042,0.139512) * L2_11 + mat4(0.062502,0.032538,0.117440,-0.088181,-0.063730,-0.047336,0.031645,-0.369104,-0.096940,0.067657,0.129734,-0.107269,0.064985,-0.040482,-0.480497,-0.649591) * L2_12 + mat4(0.028246,0.144361,-0.115185,-0.059674,-0.060331,-0.046781,-0.017916,0.014463,-0.326670,0.107456,-0.035956,0.095160,0.012925,0.077973,-0.141164,-0.186640) * L2_13 + mat4(0.040749,-0.612091,0.209670,0.327416,0.105868,0.002093,-0.249474,-0.046976,-0.034742,0.080527,0.257145,0.125076,-0.044574,-0.191638,0.468285,0.067956) * L2_14 + mat4(-0.050465,0.041831,-0.109584,0.167096,-0.310223,-0.084446,0.124844,-0.157063,0.082257,-0.195686,0.063036,0.081684,0.374967,0.105186,0.202704,0.092378) * L2_15 + vec4(0.052608,0.090136,0.529319,0.378364)));\n    return L3_5;\n}\nelse if(BlockIndex == 6)\n{\nvec4 L3_6 = sin((mat4(-0.030622,0.028669,-0.124783,-0.028364,-0.190404,0.112546,0.166360,0.367860,-0.047616,-0.222688,-0.237957,-0.190115,0.440694,-0.443997,-0.353554,-0.742938) * L2_0 + mat4(-0.145847,-0.056310,0.139555,0.335871,-0.129358,-0.171207,-0.206478,-0.184858,-0.035580,0.063606,0.030783,-0.127911,-0.076836,-0.062131,-0.105142,-0.103545) * L2_1 + mat4(0.152860,0.055121,-0.196465,-0.079501,0.047252,0.231345,0.007738,0.236499,0.149163,0.173540,-0.077546,-0.227411,0.120046,0.010065,-0.097680,-0.165826) * L2_2 + mat4(-0.088400,-0.089442,-0.066983,0.142225,0.208089,0.094023,-0.167893,-0.412164,-0.647266,-0.240483,-0.128000,0.610141,0.060859,0.041870,-0.115816,0.138440) * L2_3 + mat4(-0.126948,-0.005270,0.087836,0.101641,0.049533,0.070286,-0.059135,-0.019050,0.048172,0.040866,0.105977,0.266136,-0.305360,-0.117041,0.122743,0.216341) * L2_4 + mat4(0.410828,0.193416,-0.105439,-0.252189,0.031837,0.243204,0.154234,0.258853,0.288117,0.041329,-0.014136,-0.433452,-0.101052,0.040052,0.113837,0.349261) * L2_5 + mat4(0.228120,-0.075180,-0.146893,-0.487747,0.018121,-0.056371,-0.091997,0.002610,0.030067,-0.260819,0.022593,-0.084767,-0.150118,-0.189517,0.185988,0.182483) * L2_6 + mat4(0.031768,0.227462,-0.055275,0.178758,0.041647,-0.073265,-0.093005,-0.192108,-0.148941,0.126310,0.051994,-0.182094,-0.137218,0.016103,0.143586,0.065553) * L2_7 + mat4(-0.086945,-0.034651,0.148553,-0.095039,0.083051,0.177064,-0.042894,-0.220300,-0.252091,-0.277240,-0.120774,-0.196763,0.319285,0.138538,-0.065581,0.057388) * L2_8 + mat4(-0.607711,-0.146103,-0.013665,0.330637,0.145459,0.203186,-0.088336,0.079403,-0.238430,-0.568630,-0.485826,-0.512215,0.254266,-0.429587,-0.157867,-0.011435) * L2_9 + mat4(0.054898,-0.270967,-0.152676,-0.195228,0.160123,0.080434,-0.251677,-0.268867,0.021499,0.002863,0.139032,0.193346,0.027841,0.123362,-0.014168,0.067535) * L2_10 + mat4(0.269230,-0.209605,-0.165061,-0.408523,-0.136809,-0.157391,-0.104826,-0.233106,-0.085046,0.066648,-0.001708,0.107413,-0.071133,-0.163585,-0.146517,0.331051) * L2_11 + mat4(-0.046859,0.101818,0.041631,0.014230,-0.112609,0.181434,0.188338,0.491524,-0.034196,-0.073346,0.003140,-0.117688,-0.094591,-0.272003,0.069177,0.195247) * L2_12 + mat4(-0.094780,-0.193455,0.020993,-0.020397,0.021386,-0.028544,0.005572,-0.143756,-0.183336,0.134116,0.194190,0.453623,0.087177,0.142958,0.020902,0.372875) * L2_13 + mat4(0.086762,-0.137119,-0.239149,-0.188924,-0.203487,-0.157286,0.029784,0.413380,0.066515,0.010002,-0.020181,-0.385243,-0.363276,0.275080,0.108110,0.218106) * L2_14 + mat4(0.059443,0.057866,-0.068871,-0.273480,-0.128303,0.117925,0.506025,0.472609,0.188262,0.037881,-0.015088,-0.208461,0.374445,0.209265,-0.056832,-0.304751) * L2_15 + vec4(-0.091821,0.269127,-0.044955,-0.080693)));\n    return L3_6;\n}\nelse\n{\nvec4 L3_7 = sin((mat4(-0.023262,-0.015350,-0.074827,-0.101356,-0.089960,-0.210525,-0.070814,0.062834,-0.207325,-0.009180,-0.141600,0.151119,0.246056,-0.043862,-0.185636,0.094803) * L2_0 + mat4(0.124184,0.245162,0.272866,0.016635,-0.297121,-0.212283,-0.225450,0.190521,0.043784,0.036145,-0.064325,-0.003367,-0.116520,-0.276424,-0.074043,-0.053928) * L2_1 + mat4(-0.081708,0.026143,-0.035976,0.391928,0.028088,-0.066519,0.046295,0.100038,-0.349179,-0.244522,-0.319998,0.044027,-0.084653,0.174902,-0.128353,0.068988) * L2_2 + mat4(0.050057,-0.122807,0.063885,0.010216,-0.013415,-0.156748,-0.216472,0.109662,-0.412744,0.467096,-0.049536,0.382209,0.128387,0.241080,0.094293,0.036260) * L2_3 + mat4(0.072119,-0.018687,0.053848,-0.115412,-0.076312,-0.178738,-0.186431,0.000099,-0.000024,0.145130,0.216405,-0.020027,-0.230420,-0.067788,0.160714,-0.073273) * L2_4 + mat4(-0.371473,-0.815918,-0.110837,0.446340,-0.006931,0.079722,0.065915,-0.076551,-0.133782,-0.320932,0.035234,0.030249,0.119848,-0.184650,0.121724,0.029819) * L2_5 + mat4(-0.034644,0.107106,-0.520191,0.012739,0.612800,0.367143,-0.459583,-0.193591,0.089836,0.108865,-0.204065,-0.075426,-0.128301,-0.089130,0.056499,0.032646) * L2_6 + mat4(0.019864,-0.007383,-0.020950,-0.019031,-0.135553,-0.126663,-0.088611,0.024987,-0.070457,-0.081776,-0.084895,-0.088658,-0.235747,0.319540,-0.157345,0.014335) * L2_7 + mat4(0.030406,-0.175969,-0.066004,-0.248827,0.084359,-0.114910,-0.029051,0.169939,-0.114944,-0.023919,0.331477,-0.156582,-0.198473,-0.091025,0.141491,-0.018990) * L2_8 + mat4(-0.411565,0.117958,0.365664,-0.644243,-0.033532,0.049886,-0.121334,0.066709,-0.143582,0.121944,0.067567,0.087053,-0.197286,0.401302,-0.063955,0.019162) * L2_9 + mat4(-0.028509,0.051755,-0.146117,0.081735,-0.090288,-0.008463,-0.172701,0.081532,0.082280,-0.056299,0.386814,-0.135070,-0.011691,0.100345,-0.020078,-0.055002) * L2_10 + mat4(-0.032492,-0.063622,0.057687,-0.195496,-0.099932,-0.126510,-0.099614,0.121407,-0.064235,-0.033042,0.056315,-0.136143,0.179928,0.279876,0.457559,-0.104009) * L2_11 + mat4(-0.078529,-0.109152,-0.130424,-0.053401,-0.040921,0.170985,0.233299,-0.148779,0.056306,-0.057691,-0.072601,0.118868,-0.072153,0.119466,0.013644,0.169026) * L2_12 + mat4(-0.035099,-0.105598,-0.081921,0.007652,-0.033279,-0.282090,-0.124318,-0.065054,0.131202,0.232090,-0.005103,-0.273788,0.086145,0.045429,0.137137,0.150735) * L2_13 + mat4(-0.370941,-0.309744,0.027695,0.156420,0.013777,0.194617,0.031840,0.229452,-0.040817,-0.119403,-0.164825,-0.079511,-0.040857,0.401335,0.186291,-0.206802) * L2_14 + mat4(-0.011680,-0.053056,-0.023592,-0.033972,0.042658,0.029626,0.363072,-0.191829,0.062402,0.143423,-0.083962,-0.102121,-0.190078,-0.031622,-0.117921,0.426444) * L2_15 + vec4(-0.683855,0.250459,-0.559034,-0.023307)));\n    return L3_7;\n}\n}\n\n#pragma optimize(on)\n\n\n\n\n\n\n\n\n\nvoid mainCubemap( out vec4 fragColor, in vec2 fragCoord, in vec3 rayOri, in vec3 rayDir )\n{\n//Credit : https://www.shadertoy.com/view/Wss3Ds\n    vec3 absRayDir = abs(rayDir);\n    rayDir /= max(absRayDir.x, max(absRayDir.y, absRayDir.z));\n    int faceIndex = 0;\n    if(absRayDir.y > absRayDir.x && absRayDir.y > absRayDir.z)\n    {\n        faceIndex = 2;\n    }\n    else if(absRayDir.z > absRayDir.x && absRayDir.z > absRayDir.y)\n    {\n        faceIndex = 4;\n    }\n\n    if(rayDir[faceIndex / 2] > 0.0)\n    {\n        faceIndex |= 1;\n    }\n    if(iFrame !=0)\n    {\n    \n        if(faceIndex == 5) //_ here\n        {\n            //fragColor = GetOneFace5(fragCoord/1024.0);\n        }\n        else if(faceIndex == 4)//Actually 2 here\n        {\n            //fragColor = GetOneFace4(fragCoord/1024.0);\n        }\n        else if(faceIndex == 3)//Actually 3 here\n        {\n            fragColor = GetOneFace3(fragCoord/1024.0);\n        }\n        else if(faceIndex == 2)//Actually 3 here\n        {\n            fragColor = GetOneFace2(fragCoord/1024.0);\n        }\n    }\n    else\n    {\n        if(faceIndex == 5) //_ here\n        {\n            //fragColor = vec4(fragCoord/1024.0,0.0,0.0);\n        }\n        else if(faceIndex == 4)//Actually 2 here\n        {\n\n        }\n        else if(faceIndex == 3)//Actually 3 here\n        {\n            Point CurrentPoint;\n            int SubIndex = CoordToIndex(fragCoord);\n            vec2 SubFragCoord = CoordToLocalCoord(fragCoord);\n            int objectindex = -1;\n            if(SubFragCoord.x > 0.0 && SubFragCoord.x < 256.0 && SubFragCoord.y > 0.0 && SubFragCoord.y < 128.0)\n            {\n                CurrentPoint = LightmapToPosition_H(SubFragCoord - vec2(0.0,0.0));\n                objectindex = 0;\n            }\n            else if(SubFragCoord.x > 256.0 && SubFragCoord.x < 512.0 && SubFragCoord.y > 0.0 && SubFragCoord.y < 128.0)\n            {\n                CurrentPoint = LightmapToPosition_P(SubFragCoord - vec2(256.0,0.0));\n                objectindex = 1;\n            }\n            else if(SubFragCoord.x > 0.0 && SubFragCoord.x < 256.0 && SubFragCoord.y > 128.0 && SubFragCoord.y < 256.0)\n            {\n                CurrentPoint = LightmapToPosition_G(SubFragCoord - vec2(0.0,128.0));\n                objectindex = 2;\n            }\n            else if(SubFragCoord.x > 256.0 && SubFragCoord.x < 384.0 && SubFragCoord.y > 128.0 && SubFragCoord.y < 256.0)\n            {\n                CurrentPoint = LightmapToPosition_21(SubFragCoord - vec2(256.0,128.0));\n                objectindex = 3;\n            }\n            else if(SubFragCoord.x > 384.0 && SubFragCoord.x < 512.0 && SubFragCoord.y > 128.0 && SubFragCoord.y < 256.0)\n            {\n                CurrentPoint = LightmapToPosition_22(SubFragCoord - vec2(384.0,128.0));\n                objectindex = 4;\n            }\n            else if(SubFragCoord.x > 0.0 && SubFragCoord.x < 64.0 && SubFragCoord.y > 256.0 && SubFragCoord.y < 384.0)\n            {\n                CurrentPoint = LightmapToPosition_L(SubFragCoord - vec2(0.0,256.0));\n                objectindex = 5;\n            }\n            else if(SubFragCoord.x > 64.0 && SubFragCoord.x < 128.0 && SubFragCoord.y > 256.0 && SubFragCoord.y < 384.0)\n            {\n                CurrentPoint = LightmapToPosition_R(SubFragCoord - vec2(64.0,256.0));\n                objectindex = 6;\n            }\n            else if(SubFragCoord.x > 256.0 && SubFragCoord.x < 512.0 && SubFragCoord.y > 256.0 && SubFragCoord.y < 512.0)\n            {\n                CurrentPoint = LightmapToPosition_B(SubFragCoord - vec2(256.0,256.0));\n                objectindex = 7;\n            }\n            else if(SubFragCoord.x > 128.0 && SubFragCoord.x < 256.0 && SubFragCoord.y > 256.0 && SubFragCoord.y < 384.0)\n            {\n                CurrentPoint = LightmapToPosition_U(SubFragCoord - vec2(128.0,256.0));\n                objectindex = 8;\n            }\n            else if(SubFragCoord.x > 0.0 && SubFragCoord.x < 256.0 && SubFragCoord.y > 384.0 && SubFragCoord.y < 512.0)\n            {\n                CurrentPoint = LightmapToPosition_D(SubFragCoord - vec2(0.0,384.0));\n                objectindex = 9;\n            }\n            if(CurrentPoint.Position.w > 0.0)\n            {\n                if(objectindex == 5 || objectindex == 6 || objectindex == 7 ||\n                objectindex == 8 ||objectindex == 3 || objectindex == 4)\n                {\n                    fragColor = Lightmap_Half_LRBU22(CurrentPoint.Position.xyz, CurrentPoint.Normal.xyz, SubIndex+4);//\n                }\n                else if(objectindex == 9)\n                {\n                    fragColor = Lightmap_Half_Floor(CurrentPoint.Position.xyz, CurrentPoint.Normal.xyz, SubIndex+4);//\n                }\n                else\n                {\n                    fragColor = Lightmap_Half_HPG(CurrentPoint.Position.xyz, CurrentPoint.Normal.xyz, SubIndex+4);//\n                }\n            }\n        }\n        else if(faceIndex == 2)//Actually 3 here\n        {\n            Point CurrentPoint;\n            int SubIndex = CoordToIndex(fragCoord);\n            vec2 SubFragCoord = CoordToLocalCoord(fragCoord);\n            int objectindex = -1;\n            if(SubFragCoord.x > 0.0 && SubFragCoord.x < 256.0 && SubFragCoord.y > 0.0 && SubFragCoord.y < 128.0)\n            {\n                CurrentPoint = LightmapToPosition_H(SubFragCoord - vec2(0.0,0.0));\n                objectindex = 0;\n            }\n            else if(SubFragCoord.x > 256.0 && SubFragCoord.x < 512.0 && SubFragCoord.y > 0.0 && SubFragCoord.y < 128.0)\n            {\n                CurrentPoint = LightmapToPosition_P(SubFragCoord - vec2(256.0,0.0));\n                objectindex = 1;\n            }\n            else if(SubFragCoord.x > 0.0 && SubFragCoord.x < 256.0 && SubFragCoord.y > 128.0 && SubFragCoord.y < 256.0)\n            {\n                CurrentPoint = LightmapToPosition_G(SubFragCoord - vec2(0.0,128.0));\n                objectindex = 2;\n            }\n            else if(SubFragCoord.x > 256.0 && SubFragCoord.x < 384.0 && SubFragCoord.y > 128.0 && SubFragCoord.y < 256.0)\n            {\n                CurrentPoint = LightmapToPosition_21(SubFragCoord - vec2(256.0,128.0));\n                objectindex = 3;\n            }\n            else if(SubFragCoord.x > 384.0 && SubFragCoord.x < 512.0 && SubFragCoord.y > 128.0 && SubFragCoord.y < 256.0)\n            {\n                CurrentPoint = LightmapToPosition_22(SubFragCoord - vec2(384.0,128.0));\n                objectindex = 4;\n            }\n            else if(SubFragCoord.x > 0.0 && SubFragCoord.x < 64.0 && SubFragCoord.y > 256.0 && SubFragCoord.y < 384.0)\n            {\n                CurrentPoint = LightmapToPosition_L(SubFragCoord - vec2(0.0,256.0));\n                objectindex = 5;\n            }\n            else if(SubFragCoord.x > 64.0 && SubFragCoord.x < 128.0 && SubFragCoord.y > 256.0 && SubFragCoord.y < 384.0)\n            {\n                CurrentPoint = LightmapToPosition_R(SubFragCoord - vec2(64.0,256.0));\n                objectindex = 6;\n            }\n            else if(SubFragCoord.x > 256.0 && SubFragCoord.x < 512.0 && SubFragCoord.y > 256.0 && SubFragCoord.y < 512.0)\n            {\n                CurrentPoint = LightmapToPosition_B(SubFragCoord - vec2(256.0,256.0));\n                objectindex = 7;\n            }\n            else if(SubFragCoord.x > 128.0 && SubFragCoord.x < 256.0 && SubFragCoord.y > 256.0 && SubFragCoord.y < 384.0)\n            {\n                CurrentPoint = LightmapToPosition_U(SubFragCoord - vec2(128.0,256.0));\n                objectindex = 8;\n            }\n            else if(SubFragCoord.x > 0.0 && SubFragCoord.x < 256.0 && SubFragCoord.y > 384.0 && SubFragCoord.y < 512.0)\n            {\n                CurrentPoint = LightmapToPosition_D(SubFragCoord - vec2(0.0,384.0));\n                objectindex = 9;\n            }\n            if(CurrentPoint.Position.w > 0.0)\n            {\n                if(objectindex == 5 || objectindex == 6 || objectindex == 7 ||\n                objectindex == 8 ||objectindex == 3 || objectindex == 4)\n                {\n                    fragColor = Lightmap_Half_LRBU22(CurrentPoint.Position.xyz, CurrentPoint.Normal.xyz, SubIndex);//\n                }\n                else if(objectindex == 9)\n                {\n                    fragColor = Lightmap_Half_Floor(CurrentPoint.Position.xyz, CurrentPoint.Normal.xyz, SubIndex);//\n                }\n                else\n                {\n                    fragColor = Lightmap_Half_HPG(CurrentPoint.Position.xyz, CurrentPoint.Normal.xyz, SubIndex);//\n            \n                }\n            }\n        }\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 41,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a//media/previz/cubemap00.png"
                    }
                ],
                "name": "Cube A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 41
                    }
                ],
                "type": "cubemap"
            },
            {
                "code": "//YCZ:\n//Version2 - 2022.06.27(Tokyo time)\n\n//*************About Setting******************//\n//No need additional setting. Time axis is as same as the offical one\n\n//*************About Exposure******************//\n//Exposure is under Image\n\n//*************About Time******************//\n//If time shift is needed for measurement, plz replace all iTime variable with desired time value(included in Buffer A and Image)\n\n//*************About Measurement******************//\n//SSIM data example(under exposure of 2):\n//Frame0(t = 0.0) ssim 0.961\n//Frame1(t = 1.0) ssim 0.963\n//Frame2(t = 5.0) ssim 0.946\n\n//(idk how my render will be measured with gt.\n//And this Shader will take around 6 seconds to compile (gtx 2070, cpu i7 11xxxx)\n//In order to avoid problems such as graphics card model browser model conflict or sth.\n//if the value is significantly lower than this value means that this shader is not compiled correctly, \n//please change the browser, \n//thank you very much ^_^\nvec4 GetOneFace2(vec2 uv)\n{\n    return texture(iChannel0, vec3(2.0*vec2(uv.x,1.0 - uv.y)-1.0,-1.0f).xzy);\n}\nvec4 GetOneFace3(vec2 uv)\n{\n    return texture(iChannel0, vec3(2.0*vec2(uv.x,uv.y)-1.0,1.0f).xzy);\n}\nvec4 GetOneFace4(vec2 uv)\n{\n    return texture(iChannel0, vec3(2.0*vec2(1.0-uv.x,1.0-uv.y)-1.0,-1.0f));\n}\nvec4 GetOneFace5(vec2 uv)\n{\n    return texture(iChannel0, vec3(2.0*vec2(uv.x,1.0-uv.y)-1.0,1.0f));\n}\nHidden GetHidden(vec2 FragCoord)\n{\n    Hidden R;\n    vec2 LocalUV = FragCoord / 1024.0;\n    R.H_0 = GetOneFace2(LocalUV);\n    R.H_1 = GetOneFace2(LocalUV + vec2(0.5,0.0));\n    R.H_2 = GetOneFace2(LocalUV + vec2(0.0,0.5));\n    R.H_3 = GetOneFace2(LocalUV + vec2(0.5,0.5));\n    R.H_4 = GetOneFace3(LocalUV);\n    R.H_5 = GetOneFace3(LocalUV + vec2(0.5,0.0));\n    R.H_6 = GetOneFace3(LocalUV + vec2(0.0,0.5));\n    R.H_7 = GetOneFace3(LocalUV + vec2(0.5,0.5));\n    return R;\n}\n\n#define FULL_SCENE\n#define NUM_SAMPLES 1\n\n\n#define INFINITY 9999999.0 // sorry, webgl doesn't allow to use proper float infinity :(\n#define PI 3.141592653589\n\n#ifdef FULL_SCENE\n#define NUM_BOUNCES 8\n#else\n#define NUM_BOUNCES 2\n#endif\n\n#define MAT_LEFT        0\n#define MAT_RIGHT       1\n#define MAT_CEILING     2\n#define MAT_FLOOR       3\n#define MAT_BACK        4\n#define MAT_H           5\n#define MAT_P           6\n#define MAT_G           7\n#define MAT_2           8\n#define MAT_LIGHT0      9\n#define MAT_LIGHT1      10\n#define MAT_LIGHT2      11\n#define MAT_LIGHT3      12\n#define MAT_LIGHT4      13\n#define MAT_LIGHT5      14\n#define MAT_LIGHT6      15\n#define MAT_LIGHT7      16\n#define MAT_LIGHT8      17\n\n#define USE_Bake\n\nstruct AABB\n{\n\tvec3 min_, max_;\n};\n\nstruct MaterialSample\n{\n\tvec3 color;\n\tfloat roughness;\n\tbool is_light;\n};\n\nint seed;\nint flat_idx;\n\nconst float cube_light_size = 0.08;\nconst vec4 cube_light_pos[4] = vec4[4](\n\t\tvec4(  -0.9, -1.0 + cube_light_size * 0.495,  0.6, 0.4),\n\t\tvec4(  0.3, -1.0 + cube_light_size * 0.495,  0.2, 0.8),\n\t\tvec4(  1.0 - 2.0 * cube_light_size, -1.0 + 2.0 * cube_light_size, -1.0 + 5.0 * cube_light_size, 0.0),\n\t\tvec4(  -1.0 + 2.0 * cube_light_size, -1.0 + 2.0 * cube_light_size, -0.6, 0.0)\n\t\t);\n\nconst vec3 light_color[4] = vec3[4](\n\t\tvec3(5),\n\t\tvec3(5),\n\t\tvec3(80.0, 50, 30),\n\t\tvec3(30, 30, 80.0)\n\t\t);\n\n\n// H\nconst vec4 coordinates_H[3] = vec4[3](\nvec4(0.000, 0.000, 0.200, 0.750),\nvec4(0.427, 0.000, 0.627, 0.750),\nvec4(0.116, 0.310, 0.516, 0.450));\n// P\nconst vec4 coordinates_P[4] = vec4[4](\nvec4(0.000, 0.000, 0.200, 0.750),\nvec4(0.400, 0.360, 0.540, 0.675),\nvec4(0.044, 0.288, 0.471, 0.428),\nvec4(0.000, 0.610, 0.471, 0.750));\n// G\nconst vec4 coordinates_G[6] = vec4[6](\nvec4(0.000, 0.060, 0.200, 0.670),\nvec4(0.425, 0.060, 0.625, 0.265),\nvec4(0.425, 0.520, 0.625, 0.670),\nvec4(0.100, 0.000, 0.625, 0.140),\nvec4(0.315, 0.265, 0.625, 0.405),\nvec4(0.077, 0.610, 0.550, 0.750));\n// 2\nconst vec4 coordinates_2[5] = vec4[5](\nvec4(0.000, 0.000, 0.140, 0.365) * 0.5,\nvec4(0.474, 0.365, 0.614, 0.680) * 0.5,\nvec4(0.044, 0.000, 0.614, 0.140) * 0.5,\nvec4(0.044, 0.288, 0.544, 0.428) * 0.5,\nvec4(0.044, 0.610, 0.544, 0.750) * 0.5);\n\nmat3\nconstruct_ONB_frisvad(vec3 normal)\n{\n\tmat3 ret;\n\tret[1] = normal;\n\tif(normal.z < -0.999805696) {\n\t\tret[0] = vec3(0.0, -1.0, 0.0);\n\t\tret[2] = vec3(-1.0, 0.0, 0.0);\n\t}\n\telse {\n\t\tfloat a = 1.0 / (1.0 + normal.z);\n\t\tfloat b = -normal.x * normal.y * a;\n\t\tret[0] = vec3(1.0 - normal.x * normal.x * a, b, -normal.x);\n\t\tret[2] = vec3(b, 1.0 - normal.y * normal.y * a, -normal.y);\n\t}\n\treturn ret;\n}\n\nvoid\nencrypt_tea(inout uvec2 arg)\n{\n\tuvec4 key = uvec4(0xa341316c, 0xc8013ea4, 0xad90777d, 0x7e95761e);\n\tuint v0 = arg[0], v1 = arg[1];\n\tuint sum = 0u;\n\tuint delta = 0x9e3779b9u;\n\n\tfor(int i = 0; i < 32; i++) {\n\t\tsum += delta;\n\t\tv0 += ((v1 << 4) + key[0]) ^ (v1 + sum) ^ ((v1 >> 5) + key[1]);\n\t\tv1 += ((v0 << 4) + key[2]) ^ (v0 + sum) ^ ((v0 >> 5) + key[3]);\n\t}\n\targ[0] = v0;\n\targ[1] = v1;\n}\n\nvec2\nget_random()\n{\n  \tuvec2 arg = uvec2(flat_idx, seed++);\n  \tencrypt_tea(arg);\n  \treturn fract(vec2(arg) / vec2(0xffffffffu));\n}\n\nmat4\nlook_at(vec3 eye, vec3 center, vec3 up)\n{\n\tmat4 ret;\n\n\tvec3 f = normalize(center - eye);\n\tvec3 s = normalize(cross(f, normalize(up)));\n\tvec3 u = cross(s, f);\n\n\tret[0][0] = s[0];\n\tret[1][0] = s[1];\n\tret[2][0] = s[2];\n\n\tret[0][1] = u[0];\n\tret[1][1] = u[1];\n\tret[2][1] = u[2];\n\n\tret[0][2] = -f[0];\n\tret[1][2] = -f[1];\n\tret[2][2] = -f[2];\n\n\tret[0][3] = ret[1][3] = ret[2][3] = 0.0;\n\n\tret[3][0] = -dot(s, eye);\n\tret[3][1] = -dot(u, eye);\n\tret[3][2] =  dot(f, eye);\n\n\tret[3][3] = 1.0;\n\treturn ret;\n}\n\nbool\nintersect_aabb(in Ray ray, in AABB aabb, inout float t_min, inout float t_max)\n{\n\tvec3 div = 1.0 / ray.dir;\n\tvec3 t_1 = (aabb.min_ - ray.origin) * div;\n\tvec3 t_2 = (aabb.max_ - ray.origin) * div;\n\n\tvec3 t_min2 = min(t_1, t_2);\n\tvec3 t_max2 = max(t_1, t_2);\n\n\tt_min = max(max(t_min2.x, t_min2.y), max(t_min2.z, t_min));\n\tt_max = min(min(t_max2.x, t_max2.y), min(t_max2.z, t_max));\n\n\treturn t_min < t_max;\n}\n\nvec3\nray_at(in Ray ray, float t)\n{\n\treturn ray.origin + t * ray.dir;\n}\n\nfloat\nintersect_plane(\n\tRay ray,\n    vec3 center,\n    vec3 normal)\n{\n    float denom = dot(ray.dir, normal);\n    float t = dot(center - ray.origin, normal) / denom;\n\treturn t > 0.0 ? t : INFINITY;\n}\n\nfloat intersect_box(Ray ray, out vec3 normal, vec3 position_min, vec3 position_max)\n{\n\tfloat t_min = 0.0;\n\tfloat t_max = 999999999.0;\n\tif(intersect_aabb(ray, AABB(position_min, position_max), t_min, t_max)) {\n\t\tvec3 p = ray_at(ray, t_min);\n\n\t\tvec3 center = (position_min + position_max) * 0.5;\n\n\t\tnormal = p - center;\n\n\t\tvec3 an = abs(normal) / (position_max - position_min);\n\n\t\tif(an.x > an.y && an.x > an.z) {\n\t\t\tnormal = vec3(normal.x > 0.0 ? 1.0 : -1.0, 0, 0);\n\t\t}\n\t\tif(an.y > an.x && an.y > an.z) {\n\t\t\tnormal = vec3(0, normal.y > 0.0 ? 1.0 : -1.0, 0);\n\t\t}\n\t\tif(an.z > an.x && an.z > an.y) {\n\t\t\tnormal = vec3(0, 0, normal.z > 0.0 ? 1.0 : -1.0);\n\t\t}\n\n\t\treturn t_min;\n\t}\n\n\treturn INFINITY;\n}\nfloat intersect_simple(Ray ray, inout vec3 p, inout vec3 normal, inout vec3 color, inout int faceid)\n{\n\tfloat t_min = INFINITY;\n\n\tint material = -1;\n    int faceindex = -1;\n    vec2 CurrentHitHiddenUV = vec2(-1.0,0.0);\n\tfor(int i = 0; i < coordinates_H.length(); i++) \n    {\n\t\tvec3 normal_tmp;\n\n\t\tRay ray_tmp = ray;\n\t\tmat4 r = rotate_y(-0.35);\n\t\tray_tmp.origin -= vec3(-0.9, -1, 0.0);\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\n\t\tvec3 box_origin = vec3(coordinates_H[i].xy, 0.0);\n\t\tvec3 box_size = vec3(coordinates_H[i].zw - coordinates_H[i].xy, 0.15);\n        //intersect_box(Ray ray, out vec3 normal, vec3 position_min, vec3 position_max)\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp, box_origin, box_origin + box_size);\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_H;\n            CurrentHitHiddenUV = PositionToLightmap_H(ray_tmp, t, normal_tmp, i);\n            faceindex = 0 + i * 6 + NormalToIndex(normal_tmp);\n\t\t}\n\t}\n\n\tfor(int i = 0; i < coordinates_P.length(); i++) {\n\t\tvec3 normal_tmp;\n\n\t\tRay ray_tmp = ray;\n\t\tmat4 r = rotate_y(0.75);\n\t\tray_tmp.origin -= vec3(-0.28, -1, 0.2);\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\n\t\tvec3 box_origin = vec3(coordinates_P[i].xy, 0.0);\n\t\tvec3 box_size = vec3(coordinates_P[i].zw - coordinates_P[i].xy, 0.15);\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp, box_origin, box_origin + box_size);\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_P;\n            CurrentHitHiddenUV = PositionToLightmap_P(ray_tmp, t, normal_tmp, i) + vec2(256.0,0.0);\n            faceindex = 3 * 6 + i * 6 + NormalToIndex(normal_tmp);\n\t\t}\n\t}\n\n\tfor(int i = 0; i < coordinates_G.length(); i++) {\n\t\tvec3 normal_tmp;\n\n\t\tRay ray_tmp = ray;\n\t\tmat4 r = rotate_y(-0.4);\n\t\tray_tmp.origin -= vec3(0.35, -1, -0.20);\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\n\t\tvec3 box_origin = vec3(coordinates_G[i].xy, 0.0);\n\t\tvec3 box_size = vec3(coordinates_G[i].zw - coordinates_G[i].xy, 0.15);\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp, box_origin, box_origin + box_size);\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_G;\n            CurrentHitHiddenUV = PositionToLightmap_G(ray_tmp, t, normal_tmp, i) + vec2(0.0,128.0);\n            faceindex = 7 * 6 + i * 6 + NormalToIndex(normal_tmp);\n\t\t}\n\t}\n\n#ifdef FULL_SCENE\n\tfor(int i = 0; i < coordinates_2.length(); i++) {\n\t\tvec3 normal_tmp;\n\n\t\tRay ray_tmp = ray;\n\t\tmat4 r = rotate_y(0.0);\n\t\tray_tmp.origin -= vec3(0.1, -0.2, -1.0);\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\n\t\tvec3 box_origin = vec3(coordinates_2[i].xy, 0.0);\n\t\tvec3 box_size = vec3(coordinates_2[i].zw - coordinates_2[i].xy, 0.125);\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp, box_origin, box_origin + box_size);\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_2;\n            CurrentHitHiddenUV = PositionToLightmap_21(ray_tmp, t, normal_tmp, i) + vec2(256.0,128.0);\n            faceindex = 13 * 6 + i * 6 + NormalToIndex(normal_tmp);\n\t\t}\n\t}\n\n\tfor(int i = 0; i < coordinates_2.length(); i++) {\n\t\tvec3 normal_tmp;\n\n\t\tRay ray_tmp = ray;\n\t\tmat4 r = rotate_y(0.0);\n\t\tray_tmp.origin -= vec3(0.45, -0.2, -1.0);\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\n\t\tvec3 box_origin = vec3(coordinates_2[i].xy, 0.0);\n\t\tvec3 box_size = vec3(coordinates_2[i].zw - coordinates_2[i].xy, 0.125);\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp, box_origin, box_origin + box_size);\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_2;\n            CurrentHitHiddenUV = PositionToLightmap_22(ray_tmp, t, normal_tmp, i) + vec2(384.0,128.0);\n            faceindex = 18 * 6 + i * 6 + NormalToIndex(normal_tmp);\n\t\t}\n\t}\n#endif\n\n\n\t// cube light sources\n\tfor(int i = 0; i < cube_light_pos.length(); i++) {\n\t\tvec3 normal_tmp;\n\t\tRay ray_tmp = ray;\n\t\t//mat4 r = rotate_y(scene_time);\n\t\tmat4 r = rotate_y(-cube_light_pos[i].w);\n\t\tray_tmp.origin -= cube_light_pos[i].xyz;\n\t\tray_tmp.dir = vec3(r * vec4(ray_tmp.dir, 0));\n\t\tray_tmp.origin = vec3(r * vec4(ray_tmp.origin, 1.0));\n\t\tfloat t = intersect_box(ray_tmp, normal_tmp,\n\t\t\t\tvec3(-cube_light_size * 0.5),\n\t\t\t\tvec3(cube_light_size * 0.5));\n\t\tif(t < t_min) {\n\t\t\tt_min = t;\n\t\t\tp = ray_at(ray, t);\n\t\t\tmaterial = MAT_LIGHT0 + i;\n\t\t\tnormal = vec3(transpose(r) * vec4(normal_tmp, 0.0));\n            faceindex = 23 * 6 + i;\n            CurrentHitHiddenUV.x = 1.0;\n\t\t}\n\t}\n\t// left\n\t{\n\t\tvec3 n = vec3(1, 0, 0);\n\t\tfloat t = intersect_plane(ray, vec3(-1, 0, 0), n);\n\t\tif(t < t_min) {\n\t\t\tvec3 p_tmp = ray_at(ray, t);\n\t\t\tif(all(lessThanEqual(p_tmp.yz, vec2(1))) && all(greaterThanEqual(p_tmp.yz,\n\t\t\t\t\t\t\tvec2(-1))))\n\t\t\t{\n\t\t\t\tnormal = n;\n\t\t\t\tp = p_tmp;\n\n\t\t\t\tt_min = t;\n                faceindex = 23 * 6 + 4 + 0;\n\n\t\t\t\tmaterial = MAT_LEFT;\n                CurrentHitHiddenUV = PositionToLightmap_L(p) + vec2(0.0,256.0);\n\t\t\t}\n\t\t}\n\t}\n\t// right\n\t{\n\t\tvec3 n = vec3(-1, 0, 0);\n\t\tfloat t = intersect_plane(ray, vec3(1, 0, 0), n);\n\t\tif(t < t_min) {\n\t\t\tvec3 p_tmp = ray_at(ray, t);\n\t\t\tif(all(lessThanEqual(p_tmp.yz, vec2(1))) && all(greaterThanEqual(p_tmp.yz,\n\t\t\t\t\t\t\tvec2(-1))))\n\t\t\t{\n\t\t\t\tnormal = n;\n\t\t\t\tp = p_tmp;\n\n\t\t\t\tt_min = t;\n                faceindex = 23 * 6 + 4 + 1;\n\n\t\t\t\tmaterial = MAT_RIGHT;\n                CurrentHitHiddenUV = PositionToLightmap_R(p) + vec2(64.0,256.0);\n\t\t\t}\n\t\t}\n\t}\n\t// floor\n\t{\n\t\tvec3 n = vec3(0, 1, 0);\n\t\tfloat t = intersect_plane(ray, vec3(0, -1, 0), n);\n\t\tif(t < t_min) {\n\t\t\tvec3 p_tmp = ray_at(ray, t);\n\t\t\tif(all(lessThan(p_tmp.xz, vec2(1))) && all(greaterThan(p_tmp.xz,\n\t\t\t\t\t\t\tvec2(-1))))\n\t\t\t{\n\t\t\t\tnormal = n;\n\t\t\t\tp = p_tmp;\n\n\t\t\t\tt_min = t;\n                faceindex = 23 * 6 + 4 + 2;\n\t\t\t\tmaterial = MAT_FLOOR;\n                CurrentHitHiddenUV = PositionToLightmap_D(p) + vec2(0.0,384.0);\n\t\t\t}\n\t\t}\n\t}\n\t// ceiling\n\t{\n\t\tvec3 n = vec3(0, -1, 0);\n\t\tfloat t = intersect_plane(ray, vec3(0, 1, 0), n);\n\t\tif(t < t_min) {\n\t\t\tvec3 p_tmp = ray_at(ray, t);\n\t\t\tif(all(lessThan(p_tmp.xz, vec2(1))) && all(greaterThan(p_tmp.xz,\n\t\t\t\t\t\t\tvec2(-1))))\n\t\t\t{\n\t\t\t\tnormal = n;\n\t\t\t\tp = p_tmp;\n\t\t\t\tmaterial = MAT_CEILING;\n\n\t\t\t\tt_min = t;\n                faceindex = 23 * 6 + 4 + 3;\n                CurrentHitHiddenUV = PositionToLightmap_U(p) + vec2(128.0,256.0);\n\t\t\t}\n\t\t}\n\t}\n\t// back wall\n\t{\n\t\tvec3 n = vec3(0, 0, 1);\n\t\tfloat t = intersect_plane(ray, vec3(0, 0, -1), n);\n\t\tif(t < t_min) {\n\t\t\tvec3 p_tmp = ray_at(ray, t);\n\t\t\tif(all(lessThan(p_tmp.xy, vec2(1))) && all(greaterThan(p_tmp.xy,\n\t\t\t\t\t\t\tvec2(-1))))\n\t\t\t{\n\t\t\t\tnormal = n;\n\t\t\t\tp = p_tmp;\n\t\t\t\tmaterial = MAT_BACK;\n\n\t\t\t\tt_min = t;\n                faceindex = 23 * 6 + 4 + 4;\n                CurrentHitHiddenUV = PositionToLightmap_B(p) + vec2(256.0,256.0);\n\t\t\t}\n\t\t}\n\t}\n\tnormal = normalize(normal);\n    if(CurrentHitHiddenUV.x > 0.0)\n    {\n        vec3 albedo;\n        switch(material) \n        {\n\tcase MAT_LEFT   : albedo = vec3(0.9, 0.1, 0.1); break;\n\tcase MAT_RIGHT  : albedo = vec3(0.1, 0.9, 0.1); break;\n\tcase MAT_CEILING: albedo = vec3(0.7, 0.7, 0.7); break;\n\tcase MAT_FLOOR  : albedo = vec3(0.7, 0.7, 0.7); break;\n\tcase MAT_BACK   : albedo = vec3(0.7, 0.7, 0.7); break;\n\tcase MAT_H      : albedo = vec3(1.0, 0.0, 0.0); break;\n\tcase MAT_P      : albedo = vec3(0.0, 0.7, 0.7); break;\n\tcase MAT_G      : albedo = vec3(0.1, 0.1, 0.7); break;\n\tcase MAT_2      : albedo = vec3(0.8, 0.8, 0.8); break;\n\tdefault         : albedo = light_color[material - MAT_LIGHT0];color = albedo;return t_min; break;\n\t    }\n        Hidden hidden = GetHidden(CurrentHitHiddenUV);\n        if(material == MAT_LEFT || material == MAT_RIGHT || \n        material == MAT_CEILING || material == MAT_BACK || material == MAT_2)\n        {\n            color = Lightmap_Render_LRBU22(ray.dir, hidden);\n            color = color + vec3(1.0,1.0,1.0);\n            color = exp(color * 3.3994);\n            color = color - vec3(1.0,1.0,1.0);\n            color = color / 10.0;\n            color = color * (albedo + vec3(0.5,0.5,0.5));\n        }\n        else if(material == MAT_FLOOR)\n        {\n            color = Lightmap_Render_Floor(ray.dir, hidden);\n            color = color + vec3(1.0,1.0,1.0);\n            color = exp(color * 3.71775);\n            color = color - vec3(1.0,1.0,1.0);\n            color = color / 10.0;\n            color = color * (albedo + vec3(0.5,0.5,0.5));\n        }\n        else\n        {\n            color = Lightmap_Render_HPG(ray.dir, hidden);\n            color = color + vec3(1.0,1.0,1.0);\n            color = exp(color * 4.636095);\n            color = color - vec3(1.0,1.0,1.0);\n            color = color / 10.0;\n            color = color * (albedo + vec3(0.5,0.5,0.5));\n        }\n    }\n    faceid = faceindex;\n\treturn t_min;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tseed = iFrame * NUM_SAMPLES;\n\tflat_idx = int(dot(gl_FragCoord.xy, vec2(1, 4096)));\n\n\tvec2 p = fragCoord.xy / vec2(iResolution) - vec2(0.5);\n\tfloat a = float(iResolution.x) / float(iResolution.y);\n\tif(a < 1.0)\n\t\tp.y /= a;\n\telse\n\t\tp.x *= a;\n\n\t//vec3 cam_center = vec3(0, 0, 3.0);\n\tvec3 cam_center = vec3(sin(iTime) * 0.25, sin(iTime * 0.7345) * 0.4 + 0.2, 6.0);\n\tvec3 cam_target = vec3(0, -0.1, 0);\n\n\tmat4 cam = transpose(look_at(cam_center, cam_target, vec3(0, 1, 0)));\n\n\tvec3 s = vec3(0);\n    float eigen = -100.0;\n    if(iFrame == 0)\n    {\n        return;\n    }\n    else\n    {\n\t\tRay ray;\n\t\tray.origin = cam_center;\n\t\tvec3 ray_dir = normalize(vec3(p, -2.5));\n\t\tray.dir = vec3(cam * vec4(ray_dir, 0.0));\n        vec3 c;\n        vec3 normal;\n        vec3 position;\n        int faceindex;\n        float depth = intersect_simple(ray, position, normal, c, faceindex);\n        //depth = depth * 0.1;//make sure 0~1\n        eigen = float(faceindex + 1)+0.1;//faceindex == -1 ? 0.999 : float(1 + faceindex) + depth;\n\t\ts = c;\n    }\n\tfragColor = vec4(s,eigen);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 41,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a//media/previz/cubemap00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}