{
    "Shader": {
        "info": {
            "date": "1524905822",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "XstfW8",
            "likes": 5,
            "name": "helix 1c",
            "published": 3,
            "tags": [
                "raymarching",
                "sdf",
                "spiral",
                "helix",
                "short",
                "helicoid"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 443
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/XsdBW8\n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float t = iTime, a,l;\n    mat2  R = mat2( sin(t+vec4(0,33,11,0)) );\n    vec3  q = iResolution,\n          D = vec3(.3*(U+U-q.xy)/q.y, -1),    // ray direction\n          p = 30./q;                          // marching point along ray \n    O-=O;\n    for ( O++; O.x > 0. && t > .01 ; O-=.015 )\n        q = p,\n        q.xz *= R, q.yz *= R,                 // rotation\n        l = length(q.xy), a = atan(q.y,q.x),\n        t = max(abs(q.z)-6.,l-4.),            // bounding z\n        t = max(t, abs(sin(a-q.z)*min(1.,l)) - .1 ), // double helix\n        t = max(t, .5-length(vec2(l-3.,(mod(12.*a,6.28)-3.14)*3./12.)) ), // crown of holes\n        t = max(t, .5-length(vec2(l-1.5,(mod(6.*a,6.28)-3.14)*1.5/6.)) ), // crown of holes\n        p += t*D;                             // step forward = dist to obj\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}