{
    "Shader": {
        "info": {
            "date": "1667629892",
            "description": "Same as the original but without the additional weight.",
            "flags": 32,
            "hasliked": 0,
            "id": "ms23WW",
            "likes": 1,
            "name": "Find Edges Directionally 2",
            "published": 3,
            "tags": [
                "edge",
                "cellular",
                "cell",
                "kernel",
                "findedges",
                "direction"
            ],
            "usePreview": 0,
            "username": "MysteryPancake",
            "viewed": 163
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 texSize = vec2(textureSize(iChannel1, 0));\n\tfragColor = texelFetch(iChannel0, ivec2(fragCoord / iResolution.xy * texSize), 0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\t\n\t// Brightest neighbour and direction toward it\n\tvec4 brightest = vec4(0.0);\n\tvec2 direction = vec2(0.0);\n\n\t// Sample in a 3 x 3 kernel\n\tfor (int x = -1; x <= 1; ++x) {\n\t\tfor (int y = -1; y <= 1; ++y) {\n\n\t\t\t// Ignore self\n\t\t\tif (x == 0 && y == 0) continue;\n\t\t\t\n\t\t\t// Sample neighbour\n\t\t\tvec2 pos = vec2(x, y);\n\t\t\tvec4 neighbour = texelFetch(iChannel0, ivec2(fragCoord + pos), 0);\n\t\t\t\n\t\t\t// Store neighbour with maximum brightness\n\t\t\tif (length(neighbour) > length(brightest)) {\n\t\t\t\tbrightest = neighbour;\n\t\t\t\tdirection = pos;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Colorize (direction range is -1 to 1)\n\tfragColor = vec4(direction.xy, -direction.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}