{
    "Shader": {
        "info": {
            "date": "1637772299",
            "description": "multilayer variant of [url]https://shadertoy.com/view/NlG3Dw[/url]\ncylindrical variant of [url]https://shadertoy.com/view/flyGDw[/url]\n2D variant of lambmeow's [url]https://www.shadertoy.com/view/7lVGWW[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "NtGGWm",
            "likes": 14,
            "name": "The Cell Void 4 (fake 3D)",
            "published": 3,
            "tags": [
                "2d",
                "voronoi",
                "sdf",
                "cellular",
                "short",
                "void"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 396
        },
        "renderpass": [
            {
                "code": "// multilayer variant of https://shadertoy.com/view/NlG3Dw\n// cylindrical variant of https://shadertoy.com/view/flyGDw\n\n#define H(v)      fract(1e4*sin((v)*mat2(R,R-71.)))\n#define S(v)      smoothstep(30./R.y,0.,v)\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2  R = iResolution.xy, P,D,_P,\n          U = 10.* ( u+u - R ) / R.y, U0=U;\n    float m = 9.,d, t = iTime, k=8., z=8., n, _n;\n\n  for( n = 2.; n >= 1.; n-=.5 ) {                           // several layers\n    U = U0;\n    U = k*vec2( .995*atan(U.y,U.x), z/length(U) );          // go to cylinder space\n    U.y += n*t;                                             // animation\n\n    for ( int k=0; k < 9; k++ )                             // jittered point grid distribution\n        D = vec2(k%3,k/3), P = floor(U)+D - H(mod(floor(U)+D,25.)+n/13.),  // NB: cyclical hash\n        d = length(P-U), \n        d < m ? _P=P, _n = n, m = d : m;\n }   \n    P = _P;\n\n    U = U0;\n    P = k*z/(P.y-_n*t) * cos( P.x/.995/k + vec2(0,-1.57) ); // back to screen space\n    m = length(P-U);\n \n                                                            // draw disk - dark disk\n    O = vec4( clamp( S(m-.4) - S( length(P-U+ U*length(U)/1e3 ) -.4 )  ,0.,1.) );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}