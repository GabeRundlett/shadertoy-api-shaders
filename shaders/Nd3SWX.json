{
    "Shader": {
        "info": {
            "date": "1634021580",
            "description": "experimenting with more retro effects",
            "flags": 32,
            "hasliked": 0,
            "id": "Nd3SWX",
            "likes": 8,
            "name": "Retro CRT Effect 2",
            "published": 3,
            "tags": [
                "retro",
                "sdf",
                "effect",
                "crt",
                "glow"
            ],
            "usePreview": 0,
            "username": "lambmeow",
            "viewed": 568
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 c, in vec2 f)\n{\n    vec2 r = iResolution.xy, u = f/r;\n    u.x += sin(iTime + u.y * r.y) * tan(iTime * u.y * 100.) * sin(u.y + iTime) * 0.007;\n    float rr = texture(iChannel0, u + vec2(sin(iTime + u.y * 200.) * length(u - 0.5) * 0.07 , 0.0)).r;\n    float gg = texture(iChannel0, u).g;\n    float bb = texture(iChannel0, u + vec2(sin(iTime + u.y * 200. ) * length(u - 0.5) * 0.05 , 0.0)).b;\n    \n    \n    c = vec4(rr,gg,bb,1.0) * 1.4;\n    \n    \n    \n\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 c, in vec2 f)\n{\n    vec2 r = iResolution.xy, u = ((2.0 *f.xy - r))/r.y;\n    vec3 rd = normalize(vec3(u, 2.0));\n    vec3 ro = vec3(0,0,-10);\n   \n    float ll = 0.0;\n    float cl = 50.;\n    \n    for(int i = 0; i < 255; i++)\n    {\n        vec3 p = ro + rd * ll;\n        p.xz *= mat2(cos(iTime), -sin(iTime), sin(iTime), cos(iTime));\n        vec3 q = abs(p) - vec3(1,2,.001);\n        float dd = max(-clamp(sin(iTime + u.y *10.),0.,1.), length(max(q, 0.0)) - min(max(q.x, max(q.y, q.z)), 0.0));\n        \n        cl = min(dd, cl);\n\n        ll += dd;\n        \n        if(abs(dd) < .01 || ll > 50.)\n            break;       \n    }\n    \n    vec2 dd =vec2(ll,cl);\n   \n  // dd.y -= sin(dd.x+ iTime);\n   \n    float gg = 1./(1.+ dd.y);\n   // gg += abs(cos(iTime + u.y * dd.y)) * 0.1;\n    \n    vec3 col = vec3(1, 0, 1) * u.y + vec3(0.4, .2, 1) * (1.-u.y); \n    \n    c = vec4(col * gg, 1);\n    \n    c *= step(0.001, dd.x) * sin(iTime + u.y * r.y); \n   \n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}