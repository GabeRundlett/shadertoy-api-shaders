{
    "Shader": {
        "info": {
            "date": "1600692862",
            "description": "When elementary particles dance together.\nTweaking some older and trying to make it short.\nFor more clear code see https://www.shadertoy.com/view/WtjyzR",
            "flags": 0,
            "hasliked": 0,
            "id": "wdtczM",
            "likes": 87,
            "name": "5 nanoseconds after BigBang-259c",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "colors",
                "space",
                "abstract",
                "recursive",
                "generative",
                "inversion",
                "layers",
                "short",
                "symmetries",
                "spacefolding",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "benoitM",
            "viewed": 4181
        },
        "renderpass": [
            {
                "code": "// Created by Benoit Marini - 2020\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\n//Getting compil error since 11/2020 with 259 chars version, back to longer version\n//-2 chars, thanks Xor !\nvoid mainImage(out vec4 o, vec2 F){\n    vec2 R = iResolution.xy; \n    o-=o;\n    for(float d,t = iTime*.1, i = 0. ; i > -1.; i -= .06 )          \t\n    {   d = fract( i -3.*t );                                          \t\n        vec4 c = vec4( ( F - R *.5 ) / R.y *d ,i,0 ) * 28.;            \t\n        for (int j=0 ; j++ <27; )                                      \t\n            c.xzyw = abs( c / dot(c,c)                                 \t\n                    -vec4( 7.-.2*sin(t) , 6.3 , .7 , 1.-cos(t/.8))/7.);\t\n       o -= c * c.yzww  * d--*d  / vec4(3,5,1,1);                     \n    }\n}\n\n//Getting compil error since 11/2020 with 259 chars version, back to longer version\n/*\nvoid mainImage(out vec4 o, vec2 F){\n    vec2 R = iResolution.xy; \n    o-=o;\n    for(float d,t = iTime*.1, i = 0. ; i > -1.; i -= .06 )          \t\n    {   d = fract( i -3.*t );                                          \t\n        vec4 c = vec4( ( F - R *.5 ) / R.y *d ,i,0 ) * 28.;            \t\n        for (int j=0 ; j++ <27; )                                      \t\n            c.xzyw = abs( c / dot(c,c)                                 \t\n                    -vec4( 7.-.2*sin(t) , 6.3 , .7 , 1.-cos(t/.8))/7.);\t\n       o += c * c.yzww  * (d-d*d)  / vec4(3,5,1,1);                     \n    }\n}*/\n    \n// 259 chars\n// Thank you Xor !\n/*\n#define mainImage(o,F)                                                 \t\\\n    vec2 R = iResolution.xy;                                           \t\\\n    for(float d,t = iTime*.1, i = 0. ; i > -1.; i -= .06 )          \t\\\n    {   d = fract( i -3.*t );                                          \t\\\n        vec4 c = vec4( ( F - R *.5 ) / R.y *d ,i,0 ) * 28.;            \t\\\n        for (int j=0 ; j++ <27; )                                      \t\\\n            c.xzyw = abs( c / dot(c,c)                                 \t\\\n                    -vec4( 7.-.2*sin(t) , 6.3 , .7 , 1.-cos(t/.8))/7.);\t\\\n       o += c * c.yzww  * (d-d*d)  / vec4(3,5,1,1);                     \\\n    }\n*/\n\n\n// 262 chars\n// Big thanks to FabriceNeyret2 for code reduction (and thus learning)\n/*#define mainImage(o,F)                                               \\\n    vec2 R = iResolution.xy;                                           \\\n    for(float d, t = iTime*.1, i = 0. ; i > -1.; i -= .06 )            \\\n    {   d = fract( i -3.*t );                                          \\\n        vec4 c = vec4( ( F - R *.5 ) / R.y *d ,i,0 ) * 28.;            \\\n        for (int j=0 ; j++ <27; )                                      \\\n            c.xzyw = abs( c / dot(c,c)                                 \\\n                         - vec4( 1.-.03*sin(t) , .9 , .1 , .15 -.14*cos(t*1.3)) );\\\n       o += c * c.yzww * (d-d*d)  / vec4(3,5,1,1);                    \\\n}\n/*\n\n//original \"short code\" 298 chars\n/*void mainImage( out vec4 o, in vec2 F )\n{\n    vec3 c;   \n    float t = iTime*.1,i,d;    \n\tfor(i=0.; i<1.; i+=.06)\n    {\n        d = fract(i+3.*t);   \n        o = vec4( (F-iResolution.xy*.5)/iResolution.y*(1.-d) ,-i,0)*28.;   \n    \tfor (int i=0 ; i++ <27;) o.xzyw = abs( o/dot(o,o) - vec4( 1.-.03*sin(t) , .9 , .1 , .15 -.14*cos(t*1.3)) );      \n\t\tc+= o.xyz*o.yzw*(d-d*d);\n    }        \n    o.rgb = c*vec3(.3,.2,1);\n}\n*/\n\n// for more clear code see https://www.shadertoy.com/view/WtjyzR",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}