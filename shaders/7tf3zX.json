{
    "Shader": {
        "info": {
            "date": "1622501035",
            "description": "A variation of the Mandelbrot fractal",
            "flags": 0,
            "hasliked": 0,
            "id": "7tf3zX",
            "likes": 1,
            "name": "Fork Mauno mosaic 006",
            "published": 3,
            "tags": [
                "fractal",
                "mandelbrot"
            ],
            "usePreview": 0,
            "username": "mosaic",
            "viewed": 245
        },
        "renderpass": [
            {
                "code": "vec4  fC ( in vec2 fragCoord ) // Change the void mainImage of your shader to this.\n\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    st *= 0.072;\n    st -= vec2(0.200,-0.990);\n\n    vec3 color = vec3(0.0, 0.0, 0.0);\n    \n    vec2 z = st;\n    \n    for (int i=0; i<109; i++) {\n    \tvec2 z2;\n        z2.x = z.x*z.x - z.y*z.y * 1.01 + 0.011 * cos(iTime*2.123);\n        z2.y = z.x*z.y * 2.0 + 0.02 * sin(iTime);\n        z = z2;\n        z += st;\n        float d = z.x*z.x + z.y*z.y * (0.15*z.y+0.85);\n        if (d > 4.0) {\n            float step = 1.0 / 30.0;\n\t\t    color = vec3(float(i) * step);\n            vec3 cc = vec3(\n                1.0-(sqrt(cos(0.3*d))-2.0),\n                1.0-(sqrt(cos(0.6*d))-2.0),\n                1.0-(sqrt(cos(0.3*d))-2.0)\n            );\n            color += 0.4 * (0.5 + 0.5 * sin(-3.0 * iTime + 150.0 * step * cc ));\n            break;\n        }\n    }\n\n\n   return vec4(color, 1); // At the end of your shader, replace the fragColor with this return. \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0);\n    float A = 4.,  // Change A to define the level of anti-aliasing (1 to 16) ... higher numbers are REALLY slow!\n          s = 1./A, x, y;\n    \n    for (x=-.5; x<.5; x+=s) for (y=-.5; y<.5; y+=s) fragColor += min ( fC(vec2(x,y)+fragCoord), 1.0);\n        \n\tfragColor /= A*A;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}