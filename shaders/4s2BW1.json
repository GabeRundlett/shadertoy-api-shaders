{
    "Shader": {
        "info": {
            "date": "1500307565",
            "description": "Optimized [url]https://www.shadertoy.com/view/Md2fzm[/url] and created a progressive radial Ã©querre tiling",
            "flags": 0,
            "hasliked": 0,
            "id": "4s2BW1",
            "likes": 5,
            "name": "[SH17A] Kisrhombille Filter",
            "published": 3,
            "tags": [
                "tiling",
                "kisrhombille",
                "equerre",
                "sh17a"
            ],
            "usePreview": 0,
            "username": "ttoinou",
            "viewed": 655
        },
        "renderpass": [
            {
                "code": "// 271 chars\nvoid mainImage( out vec4 z, vec2 b )\n{\n    b /= iResolution.xy*3.;\n    \n    vec2 A,B,C,D,E,G;\n    \n    A=B=C-=C;\n    B.x = 1.732; // sqrt(3)\n    C.y = 1.;\n    \n    \n    for(int i = 0 ;\n        i < int(13.-dot(A-.2,A-.2)*81.) ;\n        i++\n    )\n        D = (2. * A + B)/3.,\n        \n        G = b - D,\n        E = B - D,\n            \n        // z.a = cos( angle )\n        z.a = dot(G,E)/(length(G)*length(E)),\n        \n        A = z.a < -.5\n            ? A           // ACD Triangle\n            : (B + C)/2., // = E for ECD & EBD Triangles\n        \n        B = z.a > .5\n            ? B  // EBD Triangle\n            : C, // ECD & ACD Triangles\n        \n        C = D;\n                                   \n    \n    \n    z = texture(iChannel0, A+B+C); // no need to ()/3. because b/=3. \n}\n/*\n// 245 chars\nvoid mainImage( out vec4 z, vec2 b )\n{\n    //b /= 2e3;\n    b /= iResolution.xy*3.;\n    \n    vec2 A,B,C,D,E,G;\n    \n    A=B=C-=C;\n    B.x = 1.73; // sqrt(3)\n    C.y = 1.;\n    \n    \n    for(int i = 0 ;\n        i < 10 ;\n        i++\n    )\n        D = (2. * A + B)/3.,\n        \n        G = b - D,\n        E = B - D,\n            \n        // z.a = cos( angle )\n        z.a = dot(G,E)/(length(G)*length(E)),\n        \n        A = z.a < -.5\n            ? A  // ACD Triangle\n            : (B + C)/2., // = E // ECD & EBD Triangles\n        \n        B = z.a > .5\n            ? B  // EBD Triangle\n            : C, // ECD & ACD Triangles\n        \n        C = D;\n                                   \n    \n    \n    z = texture(iChannel0,A+B+C);\n    //z.r = dot(b-.2,b-.2)*9.;\n}\n*/\n/*\n// 264 chars\nvoid mainImage( out vec4 z, vec2 b )\n{\n    z -= z;\n    b /= 2e3;\n    //b /= iResolution.xy*3.;\n    \n    vec2 A,B,C,D,E,G;\n    \n    A=B=C-=C;\n    B.x = 1.73; // sqrt(3)\n    C.y = 1.;\n    \n    \n    for(int i = 0 ; i < 10 ; i++)\n    {\n        D = (2. * A + B)/3.;\n        \n        G = b - D;\n        E = B - D;\n            \n        // z.a = cos( angle )\n        z.a = dot(G,E)/(length(G)*length(E));\n        \n        E = (B + C)/2.;\n        \n        // COS(2PI/3) = -1/2\n        // COS( PI/3) =  1/2\n        \n        // ACD Triangle\n        if( z.a < -.5 )\n            B = C;\n        \t// A stays the same\n        // EBD Triangle\n        else if( z.a > .5 )\n            A = E;\n        \t// B stays the same\n        // ECD Triangle\n        else\n            A = E,\n            B = C;\n        \n        \n        C = D;\n                                   \n    }\n    \n    z = texture(iChannel0,(A+B+C));\n}\n*/",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}