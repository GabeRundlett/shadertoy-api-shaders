{
    "Shader": {
        "info": {
            "date": "1613783456",
            "description": "Thought this pattern suggested by the book of shaders looked fun :)\nReference image from (not exactly sure what tartans have to do with fly fishing lures): http://english-fly-fishing-flies.s3-website-eu-west-1.amazonaws.com/scotland-stewarthairwing.html",
            "flags": 0,
            "hasliked": 0,
            "id": "ttVfRR",
            "likes": 12,
            "name": "Scottish Tartan",
            "published": 3,
            "tags": [
                "pattern",
                "bookofshaders",
                "tartan",
                "shaderart",
                "scottish"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 255
        },
        "renderpass": [
            {
                "code": "// Reference image from (not exactly sure what tartans have to do with fly fishing lures): http://english-fly-fishing-flies.s3-website-eu-west-1.amazonaws.com/scotland-stewarthairwing.html\n// Thought this pattern suggested by the book of shaders looked fun :)\n// Book of Shaders - Patterns: https://thebookofshaders.com/09/?lan=en\n\n#define ss(x) smoothstep(unit, 0.0, x)\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * 4.0;\n    float unit = 8.0 / iResolution.y;\n    vec3 color = vec3(0.75, 0.0, 0.0);\n\n    float w = 15.0 / iResolution.y, hw = 0.5 * w;\n    float stripeMask = ss(abs(mod(dot(uv, vec2(0.71, -0.71)) + hw, w) - hw));\n\n    vec2 stripeUv1 = mod(vec2(uv.x, uv.y + 2.0), 4.0) - 2.0;\n    vec2 stripeUv2 = abs(stripeUv1) - 0.75;\n    vec2 stripeUv3 = abs(stripeUv1) - 0.55;\n    vec2 stripeUv4 = abs(stripeUv1) - 0.9;\n\n    float vertBlueStripes = abs(stripeUv2.x) - 0.35;\n    color = mix(color, vec3(0.0, 0.0, 0.6), ss(vertBlueStripes) * stripeMask);\n\n    float horiBlueStripes = abs(stripeUv2.y) - 0.35;\n    color = mix(color, vec3(0.0, 0.0, 0.6), ss(horiBlueStripes) * stripeMask);\n\n    color = mix(color, vec3(0.0, 0.0, 0.5), ss(max(vertBlueStripes, horiBlueStripes)));\n\n    float vertGreenStripes = abs(stripeUv3.x) - 0.15;\n    color = mix(color, vec3(0.0, 0.45, 0.0), ss(vertGreenStripes) * stripeMask);\n\n    float horiGreenStripes = abs(stripeUv3.y) - 0.15;\n    color = mix(color, vec3(0.0, 0.45, 0.0), ss(horiGreenStripes) * stripeMask);\n\n    color = mix(color, vec3(0.0, 0.375, 0.0), ss(max(vertGreenStripes, horiGreenStripes)));\n\n    float vertBlackStripes = abs(stripeUv4.x) - 0.075;\n    color = mix(color, vec3(0.0), ss(vertBlackStripes) * stripeMask);\n\n    float horiBlackStripes = abs(stripeUv4.y) - 0.075;\n    color = mix(color, vec3(0.0), ss(horiBlackStripes) * stripeMask);\n\n    color = mix(color, vec3(0.0), ss(max(vertBlackStripes, horiBlackStripes)));\n\n    float whiteStripes = min(abs(stripeUv1.x), abs(stripeUv1.y));\n    color = mix(color, vec3(1.0), ss(whiteStripes) * stripeMask);\n\n    float blackStripes = min(abs(abs(stripeUv1.x) - 0.1), abs(abs(stripeUv1.y) - 0.1));\n    color = mix(color, vec3(0.0), ss(blackStripes) * stripeMask);\n\n    float yellowStripes = min(abs(abs(stripeUv2.x) - 0.05), abs(abs(stripeUv2.y) - 0.05));\n    color = mix(color, vec3(1.0, 1.0, 0.0), ss(yellowStripes) * stripeMask);    \n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}