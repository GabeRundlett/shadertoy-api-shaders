{
    "Shader": {
        "info": {
            "date": "1534077288",
            "description": "Trying to compress an image using a few sigmoids, optimized via Tensorflow. Did not turn out to be very effective yet.\n\nIt should be the T-Rex, shortly after escaping his enclose ;)",
            "flags": 0,
            "hasliked": 0,
            "id": "MddyDX",
            "likes": 2,
            "name": "Sigmoid compression test",
            "published": 3,
            "tags": [
                "compression",
                "neural",
                "tensorflow"
            ],
            "usePreview": 0,
            "username": "ThomasSchander",
            "viewed": 766
        },
        "renderpass": [
            {
                "code": "float sigmoid(float x)\n{\n    return 1.0 / (1.0 + exp(-x));\n}\n\nmat4 sigmoid(mat4 x)\n{\n    for(int ix=0; ix<4;ix++)\n        for(int iy=0; iy<4;iy++)\n        \tx[ix][iy] = sigmoid(x[ix][iy]);\n    return x;\n}\n\nfloat dotMat4(mat4 x, mat4 y)\n{\n    return dot(x[0], y[0])\n        + dot(x[1], y[1])\n        + dot(x[2], y[2])\n        + dot(x[3], y[3]);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= 30.0;\n    uv = floor(uv)/30.0;\n    uv = vec2(1.0-uv.y, uv.x);\n    \n    // 3.5\nmat4  mB = mat4(0.56924677 , 2.1296003 , -0.64099526 , -0.8910724 , -0.65872306 , 0.22741112 , -1.3167433 , -4.437771 , -1.6136883 , 0.8618895 , 0.45983213 , 0.47403204 , 1.1263688 , -0.34816468 , -0.580777 , -0.2644996 );\nmat4  mX = mat4(0.65592265 , -0.81518716 , 1.8801787 , -1.9150349 , -3.5074265 , -2.5273702 , 0.9289544 , 8.528505 , -0.68495274 , -1.5480498 , 1.9196081 , -1.112376 , -0.3017432 , 1.0540984 , -3.6341941 , 0.43436807 );\nmat4  mY = mat4(0.59530973 , -1.5623227 , -0.6764506 , -0.76828235 , 0.46646515 , -1.6550627 , 0.99271625 , -0.12063708 , 2.0176446 , -0.19100906 , -0.62804615 , -0.5103919 , -1.3610318 , 0.50187284 , 0.38068092 , -0.94523513 );\nmat4  mF = mat4(-0.7248368 , 1.5177406 , -0.46938252 , -0.1251597 , 1.6378787 , 0.73081875 , -1.7412698 , -2.64428 , 1.3633599 , -0.90688854 , -0.10274919 , -1.1063881 , 0.7520219 , 0.5163764 , -0.917 , 0.52838 );\nmat4  mB2 = mat4(0.05829264 , 0.62849224 , 0.42603263 , -0.7195769 , -1.2799646 , 0.6633602 , -1.0785258 , -0.070190735 , -0.8489262 , -0.86436737 , 2.049506 , 0.39298058 , 0.59106505 , 0.22295251 , 2.6500394 , -0.65216917 );\nmat4  mX2 = mat4(-5.304483 , 2.8038568 , -0.6732582 , 1.4400963 , -4.0177083 , 2.8831246 , 1.340118 , 3.7434638 , 2.059187 , -4.8294873 , -5.734302 , 0.9959976 , 0.5746555 , 0.83850753 , -10.04515 , -1.4887542 );\nmat4  mY2 = mat4(3.7395937 , 2.1362154 , -0.83989066 , 0.16119383 , -1.60105 , -0.6653519 , 0.5312831 , -0.04358767 , -0.6511373 , 1.3469293 , -0.036001824 , -0.52884686 , -0.9912584 , -0.79881245 , 0.34813452 , 0.8264188 );\nmat4  mF2 = mat4(2.0155144 , -1.173365 , 0.4340829 , 0.7787578 , -0.44695336 , -0.19294316 , -1.311086 , -0.40075707 , 0.51573014 , 2.2152307 , -2.3574657 , 0.10212086 , 0.5071234 , -0.61187536 , 2.3293602 , -1.1202322 );\nmat4  mFb = mat4(3.4617395 , 2.228507 , 0.6654067 , -0.89978635 , -1.7684381 , -0.042760998 , 1.712604 , -2.1200821 , -1.9453963 , -3.2026956 , 3.0833688 , -0.39620763 , 0.33322728 , -0.52995557 , 4.548218 , 1.1636146 );\n\n    \n    fragColor = vec4(pow(sigmoid(dotMat4(matrixCompMult(mF2, sigmoid(mX2*uv.x + mY2 * uv.y + mB2))+ matrixCompMult(mF, sigmoid(mX*uv.x + mY * uv.y + mB)), mFb)), 1.0));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}