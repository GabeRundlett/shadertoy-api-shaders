{
    "Shader": {
        "info": {
            "date": "1423814126",
            "description": "My first shader here. Mixture and alterations of a couple I found here on Shadertoy.\nHeadroom bg from: https://www.shadertoy.com/view/4sjXW1 by nimitz\nVan Damme from: https://www.shadertoy.com/view/4lX3Rf by iq",
            "flags": 0,
            "hasliked": 0,
            "id": "4tlGRX",
            "likes": 11,
            "name": "VanDamme Headroom",
            "published": 3,
            "tags": [
                "headroom",
                "vandamme"
            ],
            "usePreview": 0,
            "username": "2pha",
            "viewed": 1585
        },
        "renderpass": [
            {
                "code": "\n#define time iTime\n\nmat2 mm2(in float a){float c = cos(a), s = sin(a);return mat2(c,-s,s,c);}\n\nvec3 tex(in vec2 p)\n{\n    float frq = 80.0;\n    return vec3(1.)*smoothstep(0.9, 1.05, max(sin((p.x)*frq),sin((p.x)*frq)));\n}\n\n//Cube projection, cheap to compute and not too much deformation\nvec3 cubeproj(in vec3 p)\n{\n    vec3 x = tex(p.zy/p.x);\n    vec3 y = tex(p.xz/p.y);\n    vec3 z = tex(p.xy/p.z);\n    \n    //simple coloring/shading\n    x *= vec3(1,0,0)*abs(p.x) + p.x*vec3(0,1,0);\n    y *= vec3(0,1,0)*abs(p.y) + p.y*vec3(0,0,1);\n    z *= vec3(0,0,1)*abs(p.z) + p.z*vec3(1,0,0);\n    \n    //select face\n    p = abs(p);\n    if (p.x > p.y && p.x > p.z) return x;\n    else if (p.y > p.x && p.y > p.z) return y;\n    else return z;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t\n    vec2 p = fragCoord.xy / iResolution.xy;\n\tvec2 p2 = fragCoord.xy/iResolution.xy-0.5;\n\tp2.x*=iResolution.x/iResolution.y;\n    p2*= 1.5;\n\t\n    //camera\n\tvec3 ro = vec3(0.,0.,2.4);\n    vec3 rd = normalize(vec3(p2,-1.5));\n    mat2 mx = mm2(time / 2.0);\n    mat2 my = mm2(time / 2.0);\n    ro.xz *= mx;rd.xz *= mx;\n    ro.xy *= my;rd.xy *= my;\n    \n    vec3 col = vec3(0);\n    col = cubeproj(rd)*1.1;\n    \n    // add Jean-Claude Van Damme    \n    vec3 fg = texture( iChannel0, p ).xyz;\n    float maxrb = max( fg.r, fg.b );\n    float k = clamp( (fg.g-maxrb)*3.0, 0.0, 1.0 );\n    float dg = fg.g; \n    fg.g = min( fg.g, maxrb*0.8 ); \n    fg += dg - fg.g;\n    col = mix(fg, col, k);\n    \n    fragColor = vec4( col, 1.0 );\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}