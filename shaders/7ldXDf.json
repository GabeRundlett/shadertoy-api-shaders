{
    "Shader": {
        "info": {
            "date": "1639942386",
            "description": "Ring appearing to shrink/grow due to moving texture.",
            "flags": 0,
            "hasliked": 0,
            "id": "7ldXDf",
            "likes": 5,
            "name": "Distortion illusion",
            "published": 3,
            "tags": [
                "optical",
                "illusion"
            ],
            "usePreview": 0,
            "username": "golinad",
            "viewed": 244
        },
        "renderpass": [
            {
                "code": "// click / drag in image left/right to let the ring shrink/grow\n#define PI 3.14159265359\nfloat rps = 8.0; // rounds per second\nfloat edgeDelay = 20.0; // positive: grow, negative: shrink\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float edgeDelay = (iMouse.x / iResolution.x - 0.5) * 100.0;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 pos = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    vec2 uv = pos;\n\n\n    // ring\n    float dist = abs(length(pos) - 0.3);\n    float hit = smoothstep(0.05, 0.04, dist);\n    float edgeHit = smoothstep(0.9, 0.00, hit);\n    \n    // Time varying pixel color\n    vec3 fillCol = pow(0.6 + 0.4*sin(iTime*-PI*rps + atan(uv.x, uv.y)), 1.0)*vec3(1);\n    vec3 edgeCol = pow(0.6 + 0.4*sin(iTime*-PI*rps + atan(uv.x, uv.y) + (length(pos) - 0.3)*edgeDelay), 1.0)*vec3(1);\n    vec3 bgCol = vec3(0.5);\n    \n    // Output to screen\n    fragColor = vec4(mix(bgCol, mix(fillCol, edgeCol, edgeHit), hit),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}