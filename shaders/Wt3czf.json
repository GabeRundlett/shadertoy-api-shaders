{
    "Shader": {
        "info": {
            "date": "1609592983",
            "description": "Happy New Year, guys!",
            "flags": 0,
            "hasliked": 0,
            "id": "Wt3czf",
            "likes": 16,
            "name": "HappyNewYear2021",
            "published": 3,
            "tags": [
                "2021"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 312
        },
        "renderpass": [
            {
                "code": "#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n\n// https://iquilezles.org/articles/distfunctions\nfloat opSmoothUnion( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\n\n// https://iquilezles.org/articles/distfunctions2d\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n// https://iquilezles.org/articles/distfunctions2d\nfloat sdPie( in vec2 p, in vec2 c, in float r )\n{\n    p.x = abs(p.x);\n    float l = length(p) - r;\n    float m = length(p-c*clamp(dot(p,c),0.0,r)); // c = sin/cos of the aperture\n    return max(l,m*sign(c.y*p.x-c.x*p.y));\n}\n\nfloat SimpleVesicaDistance(vec2 p, float r, float d) {\n    p.x = abs(p.x);\n    p.x+=d;\n    return length(p)-r;\n}\n\nvec3 bamboo(vec2 p, vec3 col, float brightness){\n    vec2 prevP = p;\n    \n    float d = sdBox(p-vec2(0.0,-0.2),vec2(0.033,0.2));\n    col = mix(col,vec3(0.6,0.7,0.5)*brightness,S(d,0.0));    \n    \n    p.x*= 1.5;\n    d = length(p)-0.05;\n    col = mix(col,vec3(0.6,0.7,0.5)*brightness,S(d,0.0));\n    p = prevP;\n    p.x*= 1.5;\n    d = length(p)-0.035;\n    col = mix(col,vec3(0.7,0.8,0.1)*1.2,S(d,0.0));\n    return col;\n}\n\nvec3 hey(vec2 p, vec3 col) {\n    vec2 prevP = p;\n    \n    float d = sdBox(p,vec2(0.1,0.1));\n    col = mix(col,vec3(0.8,0.7,0.1),S(d,0.0));    \n    \n    p.x = mod(p.x,0.022)-0.011;\n    d = sdBox(p,vec2(0.005,0.1));\n    \n    p = prevP;\n    float d2 = sdBox(p,vec2(0.1,0.11));\n    d = max(d2,d);\n    col = mix(col,vec3(0.7,0.6,0.1),S(d,0.0));\n    p = prevP;\n    \n    d = sdBox(p-vec2(0.0,-0.05),vec2(0.1,0.005));\n    col = mix(col,vec3(0.6,0.4,0.1),S(d,0.0)); \n    \n    return col;\n}\n\nvec3 grass(vec2 p, vec3 col) {\n    vec2 prevP = p;\n    float k = 0.01;\n    float d = length(p)-0.05;\n    p.x = abs(p.x);\n    p.x-=0.05;\n    float d2 = length(p-vec2(0.0,-0.03))-0.05;\n    d = opSmoothUnion(d,d2,k);\n    p.x-=0.05;\n    d2 = length(p-vec2(0.0,-0.07))-0.05;\n    d = opSmoothUnion(d,d2,k);\n    p.x+=0.06;\n    d2 = length(p-vec2(0.0,-0.06))-0.05;\n    d = opSmoothUnion(d,d2,k);\n    col = mix(col,vec3(0.1,0.4,0.1),S(d,0.0)); \n    return col;\n}\n\nvec3 flower(vec2 p, vec3 col) {\n    vec2 prevP = p;\n    p = DF(p,1.25);\n    p -= vec2(0.019);\n    float d = length(p)-0.027;\n    col = mix(col,vec3(0.7,0.2,0.2),S(d,0.0));\n    p = prevP;\n    \n    p = DF(p,1.25);\n    p -= vec2(0.015);\n    d = length(p)-0.005;\n    col = mix(col,vec3(1.0),S(d,0.0));\n    \n    return col;\n}\n\nvec3 leaf(vec2 p, vec3 col) {\n    vec2 prevP = p;\n    float d = SimpleVesicaDistance(p,0.08,0.062);\n    p.x = abs(p.x);\n    p.x-=0.03;\n    p.y-=0.015;\n    float d2 = SimpleVesicaDistance(p*Rot(radians(-50.0)),0.08,0.061);\n    d = min(d,d2);\n    col = mix(col,vec3(0.3,0.8,0.3),S(d,0.0));\n    return col;\n}\n\nvec3 fan(vec2 p, vec3 col)\n{\n    const vec2 an = vec2(sin(0.98),cos(0.98));\n    \n    float d = sdPie(p,an,0.1/0.8);\n    col = mix(col,vec3(1.0,0.0,0.0),S(d,0.0));\n    \n    d = sdPie(p,an,0.07/0.8);\n    col = mix(col,vec3(1.0),S(d,0.0));\n    \n    d = length(p-vec2(0.0,0.04/0.8))-0.015/0.8;\n    col = mix(col,vec3(0.9,0.9,0.1),S(d,0.0));\n    \n    return col;\n}\n\nvec3 clouds(vec2 p, vec3 col) {\n    vec2 prevP = p;\n    \n    float d = length(p)-0.35;\n    col = mix(col,mix(vec3(1.0),vec3(0.5,0.7,0.9),p.y+0.3),S(d,0.0));\n    \n    p.y*=1.1;\n    p.x+=iTime*0.1;\n    p.x=mod(p.x,0.8)-0.4;\n    p.y-=0.15;\n    \n    d = sdBox(p,vec2(0.16,0.005))-0.03;\n    float d2 = sdBox(p-vec2(-0.04,0.125),vec2(0.05,0.005))-0.03;\n    d = min(d,d2);\n    d2 = sdBox(p-vec2(-0.04,0.06),vec2(0.03,0.05));\n    d = opSmoothUnion(d,d2,0.02);\n    d2 = sdBox(p-vec2(0.12,-0.125),vec2(0.1,0.005))-0.03;\n    d = min(d,d2);\n    d2 = sdBox(p-vec2(0.1,-0.06),vec2(0.03,0.05));\n    d = opSmoothUnion(d,d2,0.02);\n    \n    p = prevP;\n    d2 = length(p)-0.35;\n    d = max(d2,d);\n    \n    col = mix(col,vec3(0.5,0.7,0.9)*1.9,S(d,0.0));\n    \n    return col;\n}\n\nvec3 soil(vec2 p, vec3 col) {\n    p.x*=0.4;\n    p.y*=2.0;\n    float d = length(p)-0.07;\n    col = mix(col,vec3(0.7,0.5,0.2),S(d,-0.03));\n    \n    return col;\n}\n\nvec3 render(vec2 p, vec3 col) {\n    vec2 prevP = p;\n    float t = iTime;\n    col = clouds(p,col);\n\n    col = soil(p-vec2(0.0,-0.4),col);\n    col = bamboo(p-vec2(0.0,0.1),col,0.8);\n    p.x = abs(p.x);\n    p.x-=0.05;\n    col = bamboo(p,col,1.0);\n    p = prevP;\n    col = hey(p-vec2(0.0,-0.3),col);\n    col = grass(p-vec2(0.0,-0.125),col);\n    col = fan((p-vec2(-0.05,-0.23))*Rot(radians(-25.0)),col);\n    col = leaf((p-vec2(-0.06,-0.27))*Rot(radians(30.0)),col);\n    col = flower((p-vec2(0.0,-0.22))*Rot(radians(-30.0*t)),col);\n    col = flower((p-vec2(0.07,-0.125))*Rot(radians(25.0*t)),col);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(1.0);\n\n    col = render(uv,col);\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}