{
    "Shader": {
        "info": {
            "date": "1691023674",
            "description": "I was trying to draw a straight line but then it went really not straight.",
            "flags": 0,
            "hasliked": 0,
            "id": "DllcDM",
            "likes": 3,
            "name": "TOXI_SPIRAL_01",
            "published": 3,
            "tags": [
                "spiral",
                "neon"
            ],
            "usePreview": 0,
            "username": "Toxijuice",
            "viewed": 158
        },
        "renderpass": [
            {
                "code": "const float PI = 3.1415926535;\n\nvec3 uvspiral(vec2 uv, float angleRadians, float zoom){\n    float centerDist = length(uv);\n\n    float angle = (centerDist * zoom * PI) + angleRadians;\n    float sinA = sin(angle);\n    float cosA = cos(angle);\n\n    mat2 rotMat = mat2(cosA, -sinA, sinA, cosA);\n\n    return vec3((uv * rotMat).xy, centerDist);\n}\n\nvec2 spiral(vec2 uv, float angleRadians, float zoom){\n    vec3 ruv = uvspiral(uv, angleRadians, zoom);\n    \n    float arc = ((atan(ruv.x, ruv.y)/(PI*2.0))+0.5);\n    arc = min(arc, (1.0-arc)) * 2.0;\n\n    return vec2(arc, ruv.z);\n}\n\nfloat smoothedge(float x, float width, float edge){\n    return smoothstep(width + edge, width, x);\n}\n\nfloat brightedge(float x, float width){\n    return 1.0 / x * width;\n}\n\nfloat sin01(float x){\n    return (sin(x) + 1.0) * 0.5;\n}\n\nfloat cos01(float x){\n    return (cos(x) + 1.0) * 0.5;\n}\n\nfloat snap(float x, float amount){\n    x *= amount;\n    x = floor(x);\n    return x / amount;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = fragCoord / iResolution.y;\n  uv.x -= 9./16. * 0.666666; // Not really sure if this is the right math\n  \n  vec2 ouv = uv;\n  uv = (uv - 0.5) * 2.0;\n\n  vec3 col = vec3(0.0);\n\n  float centerDist = length(uv);\n\n  float speed = -0.75;\n  float zoom = 3.0 / ((1.0-sin01(iTime * 0.5 + centerDist)+0.25));\n  float angle = (fract(iTime*speed) * PI * 2.0);\n\n  vec2 sp = spiral(uv, angle, zoom);\n\n  float width = 0.2 + 0.1 * sin01(iTime * 1.33 + sp.y * 5.);\n\n  vec3 ratioA = vec3(0.6588, 0.7451, 0.4);\n  vec3 ratioB = vec3(0.4549, 0.6784, 0.7922);\n  vec3 ratio = mix(ratioA, ratioB, sin01(iTime + sp.y));\n  vec3 bgratio = mix(ratioA, ratioB, sin01(iTime + sp.y + 0.5));\n\n  col.r = brightedge(sp.x, width*ratio.r);\n  col.g = brightedge(sp.x, width*ratio.g);\n  col.b = brightedge(sp.x, width*ratio.b);\n\n  col = mix(col, col * col, 1.25);\n  col = clamp(col, 0.0, 1.0);\n  col += bgratio * 0.25;\n  \n  fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}