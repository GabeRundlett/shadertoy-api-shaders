{
    "Shader": {
        "info": {
            "date": "1487505175",
            "description": ".",
            "flags": 8,
            "hasliked": 0,
            "id": "4dsyR7",
            "likes": 9,
            "name": "random bells",
            "published": 3,
            "tags": [
                "bell",
                "harp"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 776
        },
        "renderpass": [
            {
                "code": "//--- access to the image of ascii code c\n#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): texture( iChannel3, U/16. + fract( floor(vec2(c, 15.999-float(c/16))) / 16.))\n#define initMsg vec4 T = vec4(0)\n#define endMsg  return length(T.yz)==0. ? 0. : T.x\n\nfloat message(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0);   // or: initMsg;\n    C(83);C(111);C(117);C(110);C(100);C(32);C(105);C(110); // message \"Sound in\"\n    return length(T.yz)==0. ? -1. : T.x; // or: endMsg;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    //  if (iResolution.y<200.) to display only in the icon \n    if (iResolution.y<2000.) {float c=message((fragCoord/iResolution.y-vec2(.1,.2))*8.);if(c>=0.){fragColor=vec4(c);return;}}\n\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define tone(f,t) sin(6.2831*440.*exp2(f/8.)*t)\n\nvoid bell(inout float s, float f, float t) { // f = tone. 8 = octave.\n    if (t>=0. && t< 1.) \n     // s += tone(f,t) * exp(-6.*t) ;                             // bell\n        s += tone(f,t) * exp(t<.3 ? 3000.*(t-.3) : -6.*(t-.3)) ;  // smoother bell  \n     // s += tone(f,t) * exp(t<.3 ?  100.*(t-.3) : -6.*(t-.3)) ;  // flute  \n     // s += tone(f,t) * exp(t<.3 ?   10.*(t-.3) : -6.*(t-.3)) ;  // alien  \n}\n\n#define rnd(i) fract(1234.*sin(77.77*i+.2))\n\nvec2 mainSound( in int samp, float time )\n{\n    float s=0.;\n    for (float i=0.; i<1000.; i++)\n        bell(s, 16.*rnd(i), time*1.  - (i+rnd(-i))/10.  );\n\n    return vec2(s)/3.;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 38
                    }
                ],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}