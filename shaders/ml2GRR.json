{
    "Shader": {
        "info": {
            "date": "1672812813",
            "description": "I don't know, it's a bit odd looking, but no noise at least!",
            "flags": 0,
            "hasliked": 0,
            "id": "ml2GRR",
            "likes": 19,
            "name": "Genuary2023 Snow Shader Fixed",
            "published": 3,
            "tags": [
                "shader",
                "snow",
                "fix"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 362
        },
        "renderpass": [
            {
                "code": "mat2 Rotate2D(in float a) {\n    float co = cos(a), si = sin(a);\n    return mat2(co, -si, si, co);\n}\n\n// https://www.shadertoy.com/view/4djSRW\nfloat Hash11(in float p) {\n    p = fract(p * 0.1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n\nvec3 Hash33(in vec3 p) {\n    p = fract(p * vec3(0.1031, 0.103, 0.0973));\n    p += dot(p, p.yxz + 33.33);\n    return fract((p.xxy + p.yxx) * p.zyx);\n}\n\nfloat map(in vec3 p) {\n    p.y += iTime;\n    float w = 4.0;\n    vec3 cell = floor(p / w) * w;\n    p -= cell + 0.5 * w;\n    p.xz *= Rotate2D(iTime * Hash11(cell.y) * 2.0);\n    p -= 2.0 * Hash33(cell) - 1.0;\n    return 0.5 * (length(p) - 0.25);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec2 mouse = (iMouse.xy - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 color = vec3(0.0);\n\n    vec3 ro = vec3(10.0 * mouse, 5.0);\n\n    vec3 fd = -normalize(ro);\n    vec3 rt = normalize(vec3(-fd.z, 0.0, fd.x));\n    vec3 up = cross(rt, fd);\n\n    vec3 rd = normalize(uv.x * rt + uv.y * up + fd);\n\n    color = vec3(0.5, 0.5, 1.0) * pow(1.0 - length(fragCoord / iResolution.xy - 0.5), 0.8);\n    if (rd.y < 0.0 && ro.y > -10.0) {\n        color = mix(color, vec3(1.0), pow(-rd.y, 0.4));\n    }\n\n    bool inside = map(ro) < 0.0;\n    float total = 0.0;\n    float t = 0.0;\n    for (int i=0; i < 100; i++) {\n        if (inside) {\n            total += 0.03;\n            t += 0.02;\n            if (map(ro + rd * t) >= 0.0) inside = false;\n        }\n\n        else {\n            t += map(ro + rd * t);\n            if (map(ro + rd * t) < 1e-3) inside = true;\n        }\n\n        if (total > 1.0 || t > 60.0 || ro.y + rd.y * t < -10.0) break;\n    }\n\n    color = mix(color, vec3(1.0), total);\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}