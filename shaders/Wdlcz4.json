{
    "Shader": {
        "info": {
            "date": "1584284919",
            "description": " mouseable",
            "flags": 32,
            "hasliked": 0,
            "id": "Wdlcz4",
            "likes": 3,
            "name": "automata_5",
            "published": 3,
            "tags": [
                "mouse",
                "automata"
            ],
            "usePreview": 0,
            "username": "balkhan",
            "viewed": 339
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 O, in vec2 u)\n{\n    O = A(u/R);\n    O = sin(O.x*35.-1.+vec4(.50, .04, 2.08, 0.00));\n}\n// Note to future self : nearest make buffers load sucessfully on android",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "/*\n* License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n* Created by bal-khan\n*/\n\nvec2 P;\n\n#define F    for (int k=0; k<9; k++ ) if(k!=4) P=vec2(mod(float(k), 3.),float(k/3))-1., \n\nfloat   N(vec2 u)\n{\n    float   r = .0;\n\tF\n        r += A(u+P/R).x /8.;\n    return r;\n}\n\nvoid mainImage(out vec4 o, in vec2 u)\n{\n    vec2    v = (u - R*.5) / R.y;\n    o -= o;\n    o += (( // big erratic negative ball\n        (length(v-(R.y/R.x)*1.*vec2(cos(iTime*1.5*.125+sin(iTime*.125))*.75,1.*cos(iTime*.5)*sin(iTime*.375)))*10. )<1.5\n        ||\n        ( // negative mouse square\n        mylength((u-iMouse.xy)/R.y)<.1 && iMouse.z>.5)\n        )\n          ? -1. : 0.)\n        +\n        ( // positive circling ball\n        (length(v-.5*vec2(cos(-iTime), sin(-iTime)))<.05)? 1. : 0.\n        )\n        ;\n    u/=R;\n    vec3 r;r-=r;\n    // Neighborhood collection into r\n    F r.y = max(r.y, N((u+P/R) ) /8. );\n    F r.x = max(r.x, A((u+P/R)).x /8. );\n    r.z = min(N(u), A(u).x );\n    o.x +=\n        clamp(\n            A(u).x\n            +\n           (4./(r.y+5.0)+12.*r.y+r.x*4.-r.z*3.)/(r.z/.01+r.y/.1-.7199)/32.\n        , 0., 1.);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "/*\n* License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n* Created by bal-khan\n*/\n\n#define R iResolution.xy\n#define A(u) texture(iChannel0, u)\nfloat mylength(vec2 p) {vec2 a = abs(p); return max(a.x, a.y);}\n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}