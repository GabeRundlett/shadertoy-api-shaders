{
    "Shader": {
        "info": {
            "date": "1724098548",
            "description": "yet another seven segment display",
            "flags": 0,
            "hasliked": 0,
            "id": "4fXfRf",
            "likes": 2,
            "name": "yet another sevensegment display",
            "published": 3,
            "tags": [
                "sevensegment"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 88
        },
        "renderpass": [
            {
                "code": "// Fork of \"190820241\" by None. https://shadertoy.com/view/-1\n// 2024-08-19 19:38:48\n\n// Fork of \"190820241\" by jonasfrey. https://shadertoy.com/view/4fsfzj\n// 2024-08-19 19:38:42\n\n#define n_tau radians(360.) // tau is 2*pi\nvec2 f_o_rotd(\n    vec2 o, \n    float n_ang_nor\n){\n    float nrad = n_ang_nor*n_tau; \n    float nsin = sin(nrad);\n    float ncos = cos(nrad);\n    return o*mat2(ncos, -nsin, nsin, ncos);\n   \n}\n\nfloat f_n_segment(vec2 o_trn_nor_pix) {\n    vec2 o_scl_screen = iResolution.xy;\n    o_trn_nor_pix = abs(o_trn_nor_pix);\n    float n1 = o_trn_nor_pix.x;\n    float nrad = -(1./8.)*n_tau; \n    float nsin = sin(nrad);\n    float ncos = cos(nrad);\n    float nh = 0.25;\n    vec2 o2 = f_o_rotd(o_trn_nor_pix+vec2(0., -nh),-(1./8.));\n    float n2 = o2.x; \n    return max(n1,n2);\n}\n\nfloat f_n_sevensegmentdisplay(\n    vec2 o_trn_nor, \n    float n_num\n){\n    o_trn_nor *= 3.;\n     float[] a = float[] (\n         f_n_segment(f_o_rotd(o_trn_nor, 0.25)),\n         f_n_segment(f_o_rotd(o_trn_nor+vec2(-.5,0.5), 0.0)), \n         f_n_segment(f_o_rotd(o_trn_nor+vec2(.0, 1.), 0.25)),\n         f_n_segment(f_o_rotd(o_trn_nor+vec2(.5,0.5), 0.0)),\n         f_n_segment(f_o_rotd(o_trn_nor+vec2(.5,-0.5), 0.0)),\n         f_n_segment(f_o_rotd(o_trn_nor+vec2(.0, -1.), 0.25)),\n         f_n_segment(f_o_rotd(o_trn_nor+vec2(-.5, -.5), 0.0))\n     );\n     float[] a_n = float[] (\n         //0\n         min(min(min(min(min(a[1],a[2]),a[3]),a[4]),a[5]),a[6]),\n         //1 \n         min(a[6], a[1]),\n         //2 \n         min(min(min(min(a[5],a[6]),a[0]),a[3]),a[2]),\n         //3\n         min(min(min(min(a[0],a[1]),a[2]),a[5]),a[6]),\n         //4\n         min(min(min(a[0],a[1]),a[4]),a[6]),\n         //5\n         min(min(min(min(a[0],a[1]),a[2]),a[4]),a[5]),\n         //6\n         min(min(min(min(min(a[0],a[1]),a[2]),a[3]),a[4]),a[5]),\n         //7 \n         min(min(a[1],a[5]),a[6]),\n         //8\n         min(min(min(min(min(min(a[0],a[1]),a[2]),a[3]),a[4]),a[5]),a[6]),\n         //9\n         min(min(min(min(min(a[0],a[1]),a[2]),a[4]),a[5]),a[6]), \n         //A\n         min(min(min(min(min(a[0],a[1]),a[3]),a[4]),a[5]),a[6])\n         \n     );\n     \n    return a_n[int(n_num)];\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Viewport resolution (in pixels)\n    vec2 o_scl_screen = iResolution.xy;\n\n    // Pixel coordinates (center of pixel, origin at bottom left)\n    vec2 o_trn_nor_pix = (fragCoord - o_scl_screen * 0.5) / o_scl_screen.y;\n    o_trn_nor_pix *= 1.2;\n\n\n    float n_t = iTime;\n    float n = f_n_segment(o_trn_nor_pix.xy);\n    n = smoothstep(0.1, 0.11, n);\n    o_trn_nor_pix.x -=o_trn_nor_pix.y*.1;\n    float nn = f_n_sevensegmentdisplay(\n        o_trn_nor_pix, \n        fract(iTime*.1)*10.\n    );\n    nn = smoothstep(0.1, 0.2, nn);\n    \n    \n    fragColor = vec4(1.-vec3(nn), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}