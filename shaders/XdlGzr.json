{
    "Shader": {
        "info": {
            "date": "1361983699",
            "description": "Trying to emulate the look of the Gameboy screen :D",
            "flags": 0,
            "hasliked": 0,
            "id": "XdlGzr",
            "likes": 131,
            "name": "Gameboy ",
            "published": 3,
            "tags": [
                "2d",
                "sound",
                "fft"
            ],
            "usePreview": 0,
            "username": "iq",
            "viewed": 18447
        },
        "renderpass": [
            {
                "code": "// Created by inigo quilez - iq/2013\n// https://www.youtube.com/c/InigoQuilez\n// https://iquilezles.org\n\nfloat text( vec2 p ) \n{\n    // trick for encoding fonts from CPU\n\tp.x += 0.2*floor(10.0*(0.5+0.5*sin(iTime)))/10.0;\n\t\n\tfloat x = floor( p.x*100.0 ) - 23.0;\n\tfloat y = floor( p.y*100.0 ) - 82.0;\n\n\tif( y<0.0 || y> 5.0) return 0.0;\n\tif( x<0.0 || x>70.0) return 0.0;\n\t\n    float v = 0.0;\n\t\n         if( x>63.5 ) {           v=12288.0;\n\t                    if(y>2.5) v=30720.0;\n\t                    if(y>3.5) v=52224.0; }\n\telse if( x>47.5 ) {           v=12408.0;\n\t                    if(y>0.5) v=12492.0;\n\t                    if(y>4.5) v=64632.0; }\n\telse if( x>31.5 ) {           v=64716.0;\n\t                    if(y>0.5) v=49360.0;\n\t                    if(y>1.5) v=49400.0;\n\t                    if(y>2.5) v=63692.0;\n\t                    if(y>3.5) v=49356.0;\n\t                    if(y>4.5) v=64760.0; }\n\telse if( x>15.5 ) {           v=40184.0;\n\t                    if(y>0.5) v=40092.0;\n\t                    if(y>2.5) v=64668.0;\n\t                    if(y>3.5) v=40092.0;\n\t                    if(y>4.5) v=28920.0; }\n\telse\t          {           v=30860.0;\n    \t                if(y>0.5) v=40076.0;\n    \t                if(y>1.5) v= 7308.0;\n    \t                if(y>2.5) v=30972.0;\n    \t                if(y>3.5) v=49292.0;\n    \t                if(y>4.5) v=30860.0; }\n\t\t\n\treturn floor( mod(v/pow(2.0,15.0-mod( x, 16.0 )), 2.0) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 uvo = uv;\n    \n\tvec2 res = floor( 60.0*vec2(1.0,iResolution.y/iResolution.x) );\n\t\n\tvec3 col = vec3(131.0, 145.0, 0.0);\n\tif( uv.x>0.03 && uv.x<0.97 )\n\t{\n\t\tuv.x = clamp( (uv.x-0.03)/0.94, 0.0, 1.0 );\n\t\t\n        vec2 iuv = floor( uv * res )/res;\n\t\n        float f = 1.0-abs(-1.0+2.0*fract( uv.x * res.x ));\n        float g = 1.0-abs(-1.0+2.0*fract( uv.y * res.y ));\n\t\n    \tfloat fft = texture( iChannel0, vec2(iuv.x,0.25) ).x; \n\t\tfft = 0.8*fft*fft;\n        if( iuv.y<fft )\n        {\n\t\t    if( f>0.1 && g>0.1 ) col = vec3(40.0,44.0,4.0);\n\t\t    if( f>0.5 && g>0.5 ) col = vec3(74.0,82.0,4.0);\n        }\n\t\t\n\n        float wave = texture( iChannel0, vec2(iuv.x*0.5,0.75) ).x;\n        if( abs(iuv.y-wave)<=(1.0/res.y) )\n        {\n\t        col = vec3(185.0, 200.0, 90.0);\n        }\n\n\t\tfloat t = text( uvo );\n\t\tcol = mix( col, vec3(40.0,44.0,4.0), t );\n\t}\n\telse\n\t{\n\t\tfloat g = 1.0-abs(-1.0+2.0*fract( uv.y * res.y*1.5 ));\n\t\tfloat f = 1.0-abs(-1.0+2.0*fract( uv.x * res.x + 0.5*floor(uv.y*res.y*1.5)));\n\n\t\tif( g<0.15 || f<0.15 ) col = vec3(40.0,44.0,4.0);\n\t}\n\n\tfragColor = vec4( col/255.0,1.0 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 19,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}