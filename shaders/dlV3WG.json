{
    "Shader": {
        "info": {
            "date": "1684679122",
            "description": "Just an attempt at clouds reusing noise by FabriceNeyret2, https://www.shadertoy.com/view/4tG3Wy. Fullscreen looks slightly more convincing.\n",
            "flags": 0,
            "hasliked": 0,
            "id": "dlV3WG",
            "likes": 11,
            "name": "Zooming clouds",
            "published": 3,
            "tags": [
                "noise",
                "clouds",
                "perlin"
            ],
            "usePreview": 1,
            "username": "misol101",
            "viewed": 253
        },
        "renderpass": [
            {
                "code": "// based on https://www.shadertoy.com/view/4tG3Wy\n\n#define L  20.\n#define R(a) mat2(cos(a),sin(a),-sin(a),cos(a)) // rot\nfloat T;                                        // B(): base noise\n#define B(u) ( 1. - abs( 2.* texture(iChannel0, (u)/1e3 ).r - 1.) )\n\nfloat N(vec2 u) { // infinite perlin noise with constant image-space spectrum (like Shepard scale)\n\tmat2 M = R(1.7);                            // to decorelate layers\n    float v = 0., t = 0.;\n\tfor (float i=0.; i<L; i++)                  // loop on harmonics\n\t{   float k = mod(i-T,L),\n\t\t      a = 1.-cos(6.28*k/L),             // envelope\n\t\t      s = exp2(k);                      // fractal noise spectrum\n\t\tv += a/s * B(M*u*s); \n\t\tt += a/s;  M *= M;\n\t}\n    return v/t;\n}\n\nvoid mainImage( out vec4 O, vec2 U ) {\n\tvec2  R = iResolution.xy; \n          U = (U-.5*R)/R.y;\n\n    U*=R(iTime/4.);\n\n    float e = 0.10;\n    T = 0.5*iTime;\n    O = vec4( sqrt(smoothstep(.7-e,.37+e, N(vec2(U.x+iTime/1500.,U.y+iTime/1000.)) )) );\n    e = 0.08;\n    T = 0.54*(iTime+0.1);\n    vec4 O2 = vec4( sqrt(smoothstep(.7-e,.37+e, N(vec2(U.x+iTime/3000.,U.y+iTime/2000.)) )) );\n    O = max(O,O2)/1.2+(O+O2)/6.3;\n    e = 0.08;\n    T = 0.52*(iTime+0.3);\n    vec4 O3 = vec4( sqrt(smoothstep(.7-e,.37+e, N(vec2(sin(U.x/1.5)+iTime/30000.,sin(U.y/1.8)+iTime/20000.)) )) );\n    O = max(O,O3)/1.2+((O+O3)*(O+O3))/10.;\n\n    vec4 col = vec4(0.02 + 0.02*cos(iTime+U.y), 0.15 + 0.03*cos(iTime+U.x), 0.45, 1.);\n    O=O/1.5+col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}