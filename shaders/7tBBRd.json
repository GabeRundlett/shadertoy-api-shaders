{
    "Shader": {
        "info": {
            "date": "1652604636",
            "description": "bezier eye with open and close",
            "flags": 0,
            "hasliked": 0,
            "id": "7tBBRd",
            "likes": 5,
            "name": "bezier eye with open and close",
            "published": 3,
            "tags": [
                "bezier"
            ],
            "usePreview": 0,
            "username": "shudal",
            "viewed": 211
        },
        "renderpass": [
            {
                "code": "vec3 bezier(vec3 A, vec3 B, vec3 C, vec3 D, float t) {\n  vec3 E = mix(A, B, t);\n  vec3 F = mix(B, C, t);\n  vec3 G = mix(C, D, t);\n\n  vec3 H = mix(E, F, t);\n  vec3 I = mix(F, G, t);\n\n  vec3 P = mix(H, I, t);\n\n  return P;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float addx=abs(sin(iTime)/2.);\n    \n    vec3 pn=bezier(vec3(-0.1,0.5,0.),vec3(0.25,0.63+addx,0.),vec3(0.75,0.66+addx,0.),vec3(1.1,0.6,0.),uv.x);\n    vec3 pn2=bezier(vec3(-0.1,0.4,0.),vec3(0.25,0.27-addx,0.),vec3(0.75,0.24-addx,0.),vec3(1.1,0.5,0.),uv.x);\n    \n    if (uv.y>pn.y) { \n        col = col *smoothstep(0.1,0.,abs(uv.y-pn.y));\n    }\n    if (uv.y <pn2.y) { \n        col = col *smoothstep(0.1,0.,abs(uv.y-pn2.y));\n    }\n    \n    \n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}