{
    "Shader": {
        "info": {
            "date": "1561141016",
            "description": "Pixelate shader with smooth blur",
            "flags": 0,
            "hasliked": 0,
            "id": "wt23Wy",
            "likes": 1,
            "name": "Smooth Pixelate",
            "published": 3,
            "tags": [
                "blur",
                "pixel",
                "pixelate"
            ],
            "usePreview": 0,
            "username": "existical",
            "viewed": 605
        },
        "renderpass": [
            {
                "code": "vec4 blur13(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.411764705882353) * direction;\n  vec2 off2 = vec2(3.2941176470588234) * direction;\n  vec2 off3 = vec2(5.176470588235294) * direction;\n  color += texture(image, uv) * 0.1964825501511404;\n  color += texture(image, uv + (off1 / resolution)) * 0.2969069646728344;\n  color += texture(image, uv - (off1 / resolution)) * 0.2969069646728344;\n  color += texture(image, uv + (off2 / resolution)) * 0.09447039785044732;\n  color += texture(image, uv - (off2 / resolution)) * 0.09447039785044732;\n  color += texture(image, uv + (off3 / resolution)) * 0.010381362401148057;\n  color += texture(image, uv - (off3 / resolution)) * 0.010381362401148057;\n  return color;\n}\n\nvec4 blur9(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.3846153846) * direction;\n  vec2 off2 = vec2(3.2307692308) * direction;\n  color += texture(image, uv) * 0.2270270270;\n  color += texture(image, uv + (off1 / resolution)) * 0.3162162162;\n  color += texture(image, uv - (off1 / resolution)) * 0.3162162162;\n  color += texture(image, uv + (off2 / resolution)) * 0.0702702703;\n  color += texture(image, uv - (off2 / resolution)) * 0.0702702703;\n  return color;\n}\n\nvec4 blur5(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.3333333333333333) * direction;\n  color += texture(image, uv) * 0.29411764705882354;\n  color += texture(image, uv + (off1 / resolution)) * 0.35294117647058826;\n  color += texture(image, uv - (off1 / resolution)) * 0.35294117647058826;\n  return color; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 color = vec4(0.0);\n    vec2 direction = vec2(1.0,1.0);\n    \n    vec2 uv = vec2(fragCoord.xy / iResolution.xy);\n    vec2 tempCoord = vec2(fragCoord.x,-fragCoord.y);\n    \n    float Pixels = 1524.0;\n    float dx = 9.0 * (1.0 / Pixels);\n    float dy = 16.0 * (1.0 / Pixels);\n    vec2 Coord = vec2(dx * floor(uv.x / dx), dy * floor(uv.y / dy));\n \n    direction = vec2(2.0,2.0);\n    color += blur5(iChannel0, Coord, iResolution.xy, direction)*0.5;\n    direction = vec2(2.0,-2.0);\n    color += blur5(iChannel0, Coord, iResolution.xy, direction)*0.5;\n    \n    fragColor = color;\n    //fragColor =  texture( iChannel0, Coord);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}