{
    "Shader": {
        "info": {
            "date": "1555281137",
            "description": "Responding to one of Fabrice's daily challenges. Drag it!\nUse the new speedup thing! and if you don't have it already : \n[url]https://chrome.google.com/webstore/detail/shadertoy-unofficial-plug/ohicbclhdmkhoabobgppffepcopomhgl[/url]",
            "flags": 32,
            "hasliked": 0,
            "id": "tdSSDt",
            "likes": 35,
            "name": "Dark Science",
            "published": 3,
            "tags": [
                "fluid",
                "diffusion",
                "reaction",
                "fabrice"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 1207
        },
        "renderpass": [
            {
                "code": "#define R iResolution.xy\nvec4 T (vec2 U) {return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    U.x = abs(U.x-0.5*R.x);\n\tQ = T(U).xxxx;  \n    Q.yz = T(U+sin(iTime)).xx;\n    vec3 n = vec3(\n       T(U+vec2(1,0)).x-T(U-vec2(1,0)).x,\n       T(U+vec2(0,1)).x-T(U-vec2(0,1)).x,1);\n    Q += 10.*(Q.x-0.5)*length(n.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\nvec4 F (vec2 U) {return texture(iChannel1,U/R);}\nvec4 T (vec2 U) {\n    U -= F(U).xy;\n    return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n\tQ = T(U);\n    #define o 1.5\n    \n    float a = 1.61803398875*(float(iFrame) + U.x + R.x*U.y),\n        si = sin(a),\n        co = cos(a);\n    mat2 m = mat2(co,-si,si,co);\n    \n    vec4 \n        n = T(U+vec2(0,o)*m),\n        e = T(U+vec2(o,0)*m),\n        s = T(U-vec2(0,o)*m),\n        w = T(U-vec2(o,0)*m),\n        mu = 0.25*(n+e+s+w),\n        la = mu - Q;\n    \n    Q += la*vec4(1,.21,0,0);\n    \n    float x = Q.x*Q.y*(1.-Q.y);\n    Q.y += x-.023 - 0.02*Q.y;\n    Q.x += -x+.015*(1.-Q.x);\n    \n    \n    Q = max(Q,vec4(0));\n    \n    if (length (U-0.5*R) < 10.&&iFrame < 3) \n        Q.y = 1.;\n    \n   \n    if (iFrame < 1) {\n    \tQ = vec4 (1,0,0,0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Fluid\nvec2 R;\nfloat ln (vec2 p, vec2 a, vec2 b) { // returns distance to line segment for mouse input\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nvec4 A (vec2 U) {return texture(iChannel2,U/R);}\nvec4 t (vec2 U) { // access buffer\n\treturn texture(iChannel0,U/R);\n}\nvec4 T (vec2 U) {\n    // sample things where they were, not where they are\n\tU -= 0.5*t(U).xy;\n\tU -= 0.5*t(U).xy;\n    return t(U);\n}\nvec2 x (float a, vec2 U, vec2 r) {\n\treturn r * (A(U+r).x-a);\n}\nvoid mainImage( out vec4 C, in vec2 U )\n{\n   R = iResolution.xy;\n   C = T(U);\n   #define o 1.2\n   vec4 // neighborhood\n        n = T(U+vec2(0,o)),\n        e = T(U+vec2(o,0)),\n        s = T(U-vec2(0,o)),\n        w = T(U-vec2(o,0));\n   // xy : velocity, z : pressure, w : spin\n   C.x -= 0.25*(e.z-w.z+C.w*(n.w-s.w));\n   C.y -= 0.25*(n.z-s.z+C.w*(e.w-w.w));\n   C.z  = 0.25*((s.y-n.y+w.x-e.x)+(n.z+e.z+s.z+w.z));\n   C.w  = 0.25*((n.x-s.x+e.y-w.y)-(n.w+e.w+s.w+w.w));\n   float a = A(U).x;\n   float an = 1.61803398875*(float(iFrame) + U.x + R.x*U.y),\n        si = sin(an),\n        co = cos(an);\n   mat2 m = mat2(co,-si,si,co);\n   C.zy += vec2(0.01,-.002)*A(U).x;\n   C.z *= 0.995;\n   C.xy += .15*(\n       x (a, U, vec2(1,0)*m)+\n       x (a, U, vec2(-1,0)*m)+\n       x (a, U, vec2(0,1)*m)+\n       x (a, U, vec2(0,-1)*m));\n   // boundary conditions\n    if( U.x < 2. || U.y < 2. || R.x-U.x < 2. || R.y-U.y < 2.)\n        C.xy *= 0.;\n   vec4 mo = texture(iChannel1,vec2(0));\n   float l = ln(U,mo.xy,mo.zw);\n   C.xy = mix(C.xy,10.*(mo.xy-mo.zw)/R.y,exp(-.1*l));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// mouse\nvec2 R;\nfloat ln (vec2 p, vec2 a, vec2 b) { // returns distance to line segment for mouse input\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvec4 P ( vec2 U ) {return texture(iChannel1,U/R);}\nvoid mainImage( out vec4 C, in vec2 U )\n{   R = iResolution.xy;\n \t\tvec4 M = iMouse;\n \t\tM.x = abs(M.x-0.5*R.x);\n        vec4 p = P(U);\n    \tif (M.z>0.) {\n        \tif (p.z>0.) C =  vec4(M.xy,p.xy);\n    \t\telse C =  vec4(M.xy,M.xy);\n    \t}\n    \telse C = vec4(-iResolution.xy,-iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}