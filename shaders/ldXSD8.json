{
    "Shader": {
        "info": {
            "date": "1399946727",
            "description": "some triangle",
            "flags": 0,
            "hasliked": 0,
            "id": "ldXSD8",
            "likes": 2,
            "name": "triangleBarycenter",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "Impossible",
            "viewed": 233
        },
        "renderpass": [
            {
                "code": "//stolen from black pawn :)\nbool pointInTri( vec2 A, vec2 B, vec2 C, vec2 P, out float u, out float v )\n{\n\t// Compute vectors        \n\tvec2 v0 = C - A;\n\tvec2 v1 = B - A;\n\tvec2 v2 = P - A;\n\n\t// Compute dot products\n\tfloat dot00 = dot(v0, v0);\n\tfloat dot01 = dot(v0, v1);\n\tfloat dot02 = dot(v0, v2);\n\tfloat dot11 = dot(v1, v1);\n\tfloat dot12 = dot(v1, v2);\n\n\t// Compute barycentric coordinates\n\tfloat invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);\n\tu = (dot11 * dot02 - dot01 * dot12) * invDenom;\n\tv = (dot00 * dot12 - dot01 * dot02) * invDenom;\n\n\t// Check if point is in triangle\n\treturn (u >= 0.0) && (v >= 0.0) && (u + v < 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat u,v;\n\tfloat cs = cos(iTime*2.0);\n\tfloat sn = sin(iTime*2.0);\n\t\n\tvec2 A = vec2( cs * -100.0 + sn * -50.0, sn * -100.0 - cs * -50.0 ) + iResolution.xy * vec2(0.5,0.5) + sn * vec2(0.0,150.0);\n\tvec2 B = vec2( cs * 100.0 + sn * -50.0, sn * 100.0 - cs * -50.0 ) + iResolution.xy * vec2(0.5,0.5) + sn * vec2(0.0,150.0);\n\tvec2 C = vec2( cs * -100.0 + sn * 100.0, sn * -100.0 - cs * 100.0 ) + iResolution.xy * vec2(0.5,0.5) + sn * vec2(0.0,150.0);\n\t\n\tif( pointInTri( A, B, C, fragCoord.xy,u,v))\n\t\tfragColor = texture(iChannel0, vec2(1.0,0.0) * u + vec2(0.0,1.0) * v + vec2(0.0,0.0) * ( 1.0 - ( u + v )))*vec4(1.0,0.0,0.0,1.0) * u + vec4(0.0,1.0,0.0,1.0) * v + vec4(0.0,0.0,1.0,1.0) * ( 1.0 - ( u + v ));\n\t else\n\t   fragColor = vec4(0.0,0.0,0.0,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 3,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}