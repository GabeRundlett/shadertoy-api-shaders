{
    "Shader": {
        "info": {
            "date": "1697660460",
            "description": "Simple colored line effect",
            "flags": 0,
            "hasliked": 0,
            "id": "ddtBDj",
            "likes": 1,
            "name": "Fork color puzz milana 164",
            "published": 3,
            "tags": [
                "color"
            ],
            "usePreview": 0,
            "username": "milana",
            "viewed": 133
        },
        "renderpass": [
            {
                "code": "// Green screen function from @iq \n\n// :D :D :D\nvec4 compositeGreenScreenTexture(vec2 uv, vec4 background)\n{\n\n     vec4 tex = texture(iChannel0, uv);\n        \n     float maxrb = max( tex.r, tex.b );\n     float k = clamp( (tex.g-maxrb)*5.0, 0.0, 1.0 );\n\n     float ll = length( tex );\n     tex.g = min( tex.g, maxrb*0.8 );\n     tex = ll*normalize(tex);\n\n     return mix(tex, background, k);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    // float r = 0.0;\n    // float g = 0.0;\n    // float b = 0.0;\n    // vec4 col = vec4(r, g, b, 1.0);\n    \n    // Output to screen\n    // fragColor = col;\n    \n    // Rotate UV\n    float angle = -3.14 / 4.f;\n    uv = mat2(cos(angle), \n              -sin(angle), \n              sin(angle), \n              cos(angle)) * uv;\n    \n    // Scale UV\n    uv *= 30.f;\n\n    // Time varying pixel color\n    float r = cos(uv.y);\n    float g = cos(uv.y + iTime);\n    float b = cos(uv.y - iTime);\n    vec4 col = vec4(r, g, b, 1.0);\n    \n    // Output to screen\n    fragColor = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}