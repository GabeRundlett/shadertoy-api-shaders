{
    "Shader": {
        "info": {
            "date": "1670802731",
            "description": "squircle\n",
            "flags": 0,
            "hasliked": 0,
            "id": "dsSSDy",
            "likes": 7,
            "name": "squircles 2",
            "published": 3,
            "tags": [
                "squircle"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 210
        },
        "renderpass": [
            {
                "code": "float f_n_inoutexp(float n, float n_sharpness){\n    n_sharpness = floor(n_sharpness) + mod(floor(n_sharpness),2.); // must be dividable by 2.\n    n = max(0.,min(1., n));\n    return min(pow(n, n_sharpness),pow( abs(n-1.), n_sharpness))*pow(2., n_sharpness);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 o_trpino = (fragCoord.xy - iResolution.xy*0.5)/ iResolution.y;\n    vec2 o_trmono = (iMouse.xy - iResolution.xy*0.5)/ iResolution.y;\n    vec2 o_trmono_nooffset = (iMouse.xy )/ iResolution.y;\n    o_trpino*=1.2;\n    float n_tau = 6.2831;\n    float n_angle = n_tau / 3.;\n    float n_squircles = 20.;\n    float n_index = floor(o_trpino.x*n_squircles);\n    float n_index_nor = n_index / n_squircles;\n    float n_dist_clst = 0.;\n    float n_t = iTime*2.;\n    float n_mixed = 0.;\n    float n_dist = 0.5;\n    float n_col_nor = 0.;\n    for(float n_squircle = 0.; n_squircle < n_squircles; n_squircle+=1.){\n        float n_squircle_nor = n_squircle/ n_squircles;\n        n_angle = 0.;//-n_squircle_nor;\n        float n_amp = 1./n_squircles/2.;\n        \n        o_trpino += vec2(\n            //n_squircle_nor*0.1\n            sin(n_t+n_squircle_nor*n_tau*n_t)*n_amp, \n            cos(n_t+n_squircle_nor*n_tau*n_t)*n_amp\n        );\n        o_trpino = vec2(\n            cos(n_angle)*o_trpino.x-sin(n_angle)*o_trpino.y,\n            sin(n_angle)*o_trpino.x+cos(n_angle)*o_trpino.y\n        );\n \n        //float n = floor((sin(iTime)*0.5+0.5)*5.+3.);\n        //float n = 2. + floor(fract(iTime*.5)*3.);\n        float n = 3.;\n        //n = (sin(n_t+n_squircle*0.2)*0.5+0.5)*5.+1.;\n        //float n_dist = length(pow(o_trpino,vec2(n))*pow(n, n));\n        n_dist = pow((pow(abs(o_trpino.x), n))+(pow(abs(o_trpino.y), n)), 1./n);\n        //n_dist *= 10.-(floor(abs(o_trpino.x)*10.));\n        //n_dist *=(n_squircle*0.01);\n        n_dist += n_squircle*(1./n_squircles/2.);\n        //n_dist = length(o_trpino);\n        n_dist = f_n_inoutexp(n_dist, 8.);\n        n_mixed = mix(n_mixed, n_dist, n_dist);\n        if(n_dist > n_dist_clst){\n            n_col_nor = fract((n_squircle/n_squircles)+n_t*0.1);\n        }\n        n_dist_clst = max(n_dist_clst, n_dist);\n\n    }\n    \n    fragColor = vec4(\n        sqrt(n_mixed*n_mixed),\n        n_dist_clst, \n        n_col_nor*n_mixed,\n        1.\n    );\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}