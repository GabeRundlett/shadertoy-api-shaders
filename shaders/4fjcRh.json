{
    "Shader": {
        "info": {
            "date": "1721905825",
            "description": "originals  https://www.shadertoy.com/view/DtGyWh",
            "flags": 0,
            "hasliked": 0,
            "id": "4fjcRh",
            "likes": 1,
            "name": "colorful boxes",
            "published": 3,
            "tags": [
                "fractal",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 172
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(sin((h)*5.3+vec3(10,0,010))*5.5+1.5)\n#define iR iResolution\n#define iM (iTime)*10.\n\n#define aspect iR.x / iR.y\n\n#define dist 1.\n#define iter 8.\n#define exponential 0\n\n#define LOOPED 1\n\nfloat bordercheck(in vec2 uv) {\n    return (floor(uv) != vec2(0.)) ? 0. : 1.;\n}\n\nmat2 r2d (float a) {\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, s, -s, c);\n}\n\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    vec3 p,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    \n    \n      vec2 uv = C/iR.xy;\n    vec2 loopuv = uv;\n    vec2 loopuv2 = uv;\n    uv.x+=cos(iTime)*0.1;\n    uv.y+=sin(iTime)*0.1;\n    float amnt = (iM > 0.) ? iM/iR.y : 1.;\n    float itera = amnt * iter;\n    \n    \n   \n   \n    \n    for(float i=0.,a,s,e,g=0.;\n        ++i<110.;\n        O.xyz+=mix(vec3(1),H(g*1.0),sin(0.8))*1./e/8e3\n    )\n    {\n        p=g*d;\n\n p.xy+= (uv)*iTime*20.;\n \n        a=20.;\n        p=mod(p-a,a*2.)-a;\n        s=4.;\n          \n        for(int i=0;i++<8;){\n            p=1.1-abs((p));\n              \n            p.x<p.z?p=p.zyx:p;\n            p.z<p.y?p=p.xzy:p;\n            p.y<p.x?p=p.zyx:p;\n            \n            s*=e=1.4+sin(iTime*.234)*.1;\n            p=abs((p))*e-\n                vec3(\n                    5.+cos(iTime*.3+.5*cos(iTime*.3))*3.,\n                    120,\n                    8.+cos(iTime*.5)*5.\n                 );\n         }\n       //  g+=e=length(p.yz)/s;\n         g+=e=length(p.yx)/s;\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}