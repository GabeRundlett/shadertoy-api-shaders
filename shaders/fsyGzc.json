{
    "Shader": {
        "info": {
            "date": "1631865080",
            "description": "display a video with a hex mosaic",
            "flags": 0,
            "hasliked": 0,
            "id": "fsyGzc",
            "likes": 2,
            "name": "Hex Mosaic Video",
            "published": 3,
            "tags": [
                "video",
                "hex",
                "mosaic"
            ],
            "usePreview": 0,
            "username": "ManuManu",
            "viewed": 130
        },
        "renderpass": [
            {
                "code": "\nfloat HexDist(vec2 p) {\n\tp = abs(p);\n    \n    float c = dot(p, normalize(vec2(1,1.73)));\n    c = max(c, p.x);\n    \n    return c;\n}\n\nvec4 HexCoords(vec2 uv) {\n\tvec2 r = vec2(1, 1.73);\n    vec2 h = r*.5;\n    \n    vec2 a = mod(uv, r)-h;\n    vec2 b = mod(uv-h, r)-h;\n    \n    vec2 gv = dot(a, a) < dot(b,b) ? a : b;\n    \n    float x = atan(gv.x, gv.y);\n    float y = .5-HexDist(gv);\n    vec2 id = uv-gv;\n    return vec4(x, y, id.x,id.y);\n}\nvec2 getUvCenter( vec2 uv, vec4 hc )\n{\n    vec2 r = vec2(1, 1.73);\n    vec2 h = r*.5;\n    \n    vec2 pos = hc.zw * .5;\n    \n    /*\n    if ( mod( hc.w, 2. ) > .5 )\n        pos += h;\n    //*/\n    \n    pos.y *= 2.;\n    \n    return pos;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    //uv.y += 20.;\n    \n    //uv += .5;\n\n    vec3 col = vec3(0);\n    \n    float scale = 25.;\n    \n    uv *= scale;\n    \n    vec4 hc = HexCoords(uv);\n    \n    vec2 center = getUvCenter( uv, hc );\n    \n    float c = 0.;//smoothstep(.01, .03, hc.y*sin(hc.z*hc.w+iTime));\n    \n/*\n    if ( mod(hc.z, 2.) < .5 ) \n        col += vec3( 0.,0.,1.);\n    if ( mod(hc.z, 2.) > .5 ) \n        col += vec3( 0.,1.,1.);\n    if ( mod(hc.w, 2.) > .5 ) \n        col += vec3( 1.,0.,0.);\n       \n    col.x += hc.x;\n*/\n    col.r += abs( hc.z / 5.);\n    col.g += abs( hc.w / 5.);\n    \n    col = texture(iChannel0, center/scale + .5).rgb;\n\n    // colored outline ;\n    vec3 outlineColor = vec3( .5,.5, .5 );\n    c = 1.-smoothstep(.01, .05, hc.y);\n    col = mix( col, outlineColor, c );\n    \n\n    //fragColor = texture(iChannel0, center/scale + .5);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}