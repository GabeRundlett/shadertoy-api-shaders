{
    "Shader": {
        "info": {
            "date": "1541833996",
            "description": "Conway's game of life.\n\nInitial naive implementation.",
            "flags": 32,
            "hasliked": 0,
            "id": "4tVfzh",
            "likes": 4,
            "name": "Conway's Game of Life",
            "published": 3,
            "tags": [
                "framebuffer",
                "conway",
                "gameoflife"
            ],
            "usePreview": 0,
            "username": "shigawire",
            "viewed": 1620
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord)/iResolution.xy;\n    fragColor = texture(iChannel1, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define SRC_CHAN iChannel1\n\n// This buffer is the neighbour count of buffer B\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 invres = vec2(1.0/iResolution.x,1.0/iResolution.y);\n    vec4  neighCount = texture(SRC_CHAN,(fragCoord+1.0)*invres) + \n   \t\t\t     texture(SRC_CHAN,(fragCoord-1.0)*invres) + \n\t\t\t\t texture(SRC_CHAN,(fragCoord + vec2(1.0,0.0))*invres) + \n\t\t\t\t texture(SRC_CHAN,(fragCoord + vec2(1.0,-1.0))*invres) + \n\t\t\t\t texture(SRC_CHAN,(fragCoord + vec2(0.0,1.0))*invres) + \n\t\t\t\t texture(SRC_CHAN,(fragCoord + vec2(0.0,-1.0))*invres) + \n\t\t\t\t texture(SRC_CHAN,(fragCoord + vec2(-1.0,1.0))*invres) + \n\t\t\t\t texture(SRC_CHAN,(fragCoord + vec2(-1.0,0.0))*invres);\n    fragColor = vec4(neighCount.xyz / 8.0,1.0);\n    //fragColor.xyz = fragColor.yyy;\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define NEIGH_CHAN iChannel2\n#define SELF_CHAN  iChannel1\n#define INIT_CHAN iChannel3\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\n   vec4 cell = texture(SELF_CHAN,fragCoord/iResolution.xy);\n   if ( iMouse.z < 1.0) {\n       \n    /* From https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life :\nAny live cell with fewer than two live neighbors dies, as if by underpopulation.\nAny live cell with two or three live neighbors lives on to the next generation.\nAny live cell with more than three live neighbors dies, as if by overpopulation.\nAny dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\n    */\n      vec4 neighbours = texture(NEIGH_CHAN,fragCoord/iResolution.xy) * 8.0;   \n\n      if (cell.y > 0.5) {\n        // Cell alive\n        if (neighbours.y > 1.1 && neighbours.y < 3.3) {\n           fragColor = vec4(1.0);\n        }\n        else {\n           fragColor = vec4(0.0,0.0,0.0,1.0);\n        }\n      } else {\n        // Cell currently dead\n        if (neighbours.y > 2.5 && neighbours.y < 3.5) {\n            fragColor =  vec4(1.0);\n        } else {\n            fragColor = vec4(0.0);\n        }\n      }\n  } else { \n       fragColor=cell + ( 1.0-step(1.0,abs(distance(fragCoord,iMouse.xy))));\n  }\n\n  if (iFrame < 120) {\n    fragColor = vec4(length(fwidth(step(0.5,texture(INIT_CHAN, fragCoord/iResolution.xy)))));\n  }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord)/iResolution.xy;\n    fragColor = texture(iChannel1, uv);\n\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Buf C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}