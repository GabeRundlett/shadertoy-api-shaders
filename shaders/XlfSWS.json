{
    "Shader": {
        "info": {
            "date": "1439195578",
            "description": "Shows amount of gravity in interaction with planets/sun.",
            "flags": 0,
            "hasliked": 0,
            "id": "XlfSWS",
            "likes": 17,
            "name": "Gravity",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "simulation",
                "physics",
                "planets",
                "gravity"
            ],
            "usePreview": 0,
            "username": "charlieamer",
            "viewed": 2356
        },
        "renderpass": [
            {
                "code": "#define numOfPlanets 3\n#define scale 5.0\n\nvec3 planet[numOfPlanets];\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 center = iResolution.xy * 0.5;\n    planet[0] = vec3(  center.x,   center.y,   400);\n    planet[1] = vec3(center.x + sin(iTime) * 70.0, center.y + cos(iTime) * 70.0, 50);\n    planet[2] = vec3(center.x - sin(iTime * 1.3) * 120.0, center.y + cos(iTime * 1.3) * 120.0, 100);\n\tvec2 uv = fragCoord.xy;\n    vec2 res = vec2(0,0);\n    for (int i=0;i<numOfPlanets;i++) {\n        vec2 dist = uv - vec2(planet[i]);\n        res += normalize(dist) * (scale * planet[i].z) / (length(dist) * length(dist));\n    }\n    res.x = abs(res.x);\n    res.y = abs(res.y);\n\tfragColor = vec4(length(res),length(res),length(res),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}