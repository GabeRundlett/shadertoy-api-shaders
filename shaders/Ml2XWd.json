{
    "Shader": {
        "info": {
            "date": "1447490647",
            "description": ":(",
            "flags": 0,
            "hasliked": 0,
            "id": "Ml2XWd",
            "likes": 18,
            "name": "Paris, debout",
            "published": 3,
            "tags": [
                "paris"
            ],
            "usePreview": 0,
            "username": "Nrx",
            "viewed": 585
        },
        "renderpass": [
            {
                "code": "void mainImage (out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = vec2 (1.3, 0.8) * (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n\tfloat d1 = abs (length (uv - vec2 (0.0, -1.0)) - 0.55);\n\tfloat d2 = abs (length (uv - vec2 (-1.95, 0.8)) - 1.95);\n\tfloat d3 = max (abs (length (uv - vec2 (1.95, 0.8)) - 1.95), 0.075 - uv.x);\n\tfloat d = max (min (d1, min (d2, d3)), abs (uv.y) - 0.65);\n\tvec3 color = mix ((d1 < d2 && d1 < d3) ? vec3 (0.9) : d2 < d3 ? vec3 (0.4, 0.4, 1.0) : vec3 (1.0, 0.4, 0.4), vec3 (0.2 * (uv.y + 0.5) * (0.7 + 0.3 * cos (iTime))), smoothstep (0.02 - 0.01 * uv.y, 0.04, d));\n\tfragColor = vec4 (color * smoothstep (1.2, 0.0, abs (uv.x)), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}