{
    "Shader": {
        "info": {
            "date": "1614559598",
            "description": "Animation of a simplification of @c010011012's Triple Vortex function: [url]https://twitter.com/c010011012/status/1275841326408318979[/url]\n\nMouse changed grid angle. 'g' controls grid.",
            "flags": 16,
            "hasliked": 0,
            "id": "wtGBRy",
            "likes": 15,
            "name": "Triple Vortex",
            "published": 3,
            "tags": [
                "vortex",
                "complexlog"
            ],
            "usePreview": 1,
            "username": "mla",
            "viewed": 436
        },
        "renderpass": [
            {
                "code": "////////////////////////////////////////////////////////////////////////////////\n// Complex Log Triple Vortex, mla, 2021\n//\n// Domain mapping of sums of complex log (aka. log polar transform).\n//\n// Care needed for alignment across branch cuts.\n//\n////////////////////////////////////////////////////////////////////////////////\n\nfloat A = 7.0, B = 3.0; // Rotation angle is atan(B,A)\nfloat scale = 2.0;\nfloat PI = 3.14159;\n\n// Complex functions\nvec2 cmul(vec2 z, vec2 w) {\n  return mat2(z,-z.y,z.x)*w;\n}\n\nvec2 cinv(vec2 z) {\n  float t = dot(z,z);\n  return vec2(z.x,-z.y)/t;\n}\n\nvec2 cdiv(vec2 z, vec2 w) {\n  return cmul(z,cinv(w));\n}\n\nvec2 clog(vec2 z) {\n  float r = length(z);\n  return vec2(log(r),atan(z.y,z.x));\n}\n\nvec2 cpow(vec2 z, int n) {\n  float r = length(z);\n  float theta = atan(z.y,z.x);\n  return pow(r,float(n))*normalize(vec2(cos(float(n)*theta),sin(float(n)*theta)));\n}\n\nbool keypress(int key) {\n  return texelFetch(iChannel1,ivec2(key,2),0).x != 0.0;\n}\n\nconst int CHAR_G = 71;\n\n//f(z) = (1+i)⋅log(¼ + ((1+i)z)⁻² )/π\nvec2 f(vec2 z) {\n  float k = 0.25;\n  k = cos(0.25*iTime);\n  return 0.5*clog(vec2(-k,0)+cpow(z,-2))/PI;\n}\n  \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 z = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n  z *= scale;\n  if (iMouse.x > 0.0) {\n    // Get angle from mouse position\n    vec2 m = (2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n    m *= 10.0;\n    A = floor(m.x), B = floor(m.y);\n  }\n  vec2 rot = vec2(A,B);\n  z = f(z);\n  float fw = length(rot)*fwidth(z.x);\n  z = cmul(rot,z);\n  z.x -= 0.5*iTime;\n  z -= floor(z);\n  float lod = log2(0.5*fw*iChannelResolution[0].x);\n  vec3 col = textureLod(iChannel0,z,lod).xyz;\n  //col = texture(iChannel0,z).xyz;\n  z = min(z,1.0-z);\n  if (!keypress(CHAR_G)) col *= smoothstep(0.0,0.03,min(z.x,z.y));\n  fragColor = vec4(col,1);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}