{
    "Shader": {
        "info": {
            "date": "1621649647",
            "description": "basic  excitebike",
            "flags": 0,
            "hasliked": 0,
            "id": "NtlGRN",
            "likes": 12,
            "name": "basic  excitebike",
            "published": 3,
            "tags": [
                "basicexcitebike"
            ],
            "usePreview": 0,
            "username": "jorge2017a1",
            "viewed": 323
        },
        "renderpass": [
            {
                "code": "//por jorge2017a1 ----jorgeFloresP---21/may/2021\n// referencia \n////-------------------\n/// IQ funciones....librerias\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define S2(d,b) smoothstep(antialiasing(0.5),b,d)\n\n//----------oPeraciones de Repeticion\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}\n    \n\nvec3 ponerBorde2(vec3 pColObj, vec3 colOut, float distObj )\n{\n  colOut = mix(colOut,pColObj ,S( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S(abs( distObj),0.0));\n  return colOut;\n}\n\n\nvec3 ponerBorde(vec3 pColObj, vec3 colOut, float distObj )\n{\n  colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj),0.0));\n  return colOut;\n}\n\nconst vec3 colNegro= vec3(0.0);\nconst vec3 col0= vec3(0.49,0.93,0.29);\nconst vec3 col1= vec3(1.00,0.67,0.31);\nconst vec3 col2= vec3(1.00,0.72,0.67);\nconst vec3 col3= vec3(0.47,0.54,0.00);\nconst vec3 col4= vec3(0.71,0.65,1.00);\nconst vec3 col5= vec3(0.49,0.93,0.29);\nconst vec3 col6= vec3(1.00,0.69,0.34);\nconst vec3 col7= vec3(1.00,0.70,0.47);\nconst vec3 col8= vec3(0.47,0.53,0.00);\nconst vec3 col9= vec3(0.73,0.61,0.15);\nconst vec3 col10= vec3(1.00,0.67,0.31);\nconst vec3 col11= vec3(1.00,0.1,0.1);\nconst vec3 col12= vec3(0.2,0.82,0.42);\n\nfloat opU(float d1, float d2) {return min(d1, d2); }\n\n#define POLY(N) (in vec2 p, in vec2[N] v) {const int n=v.length();float d=dot(p-v[0],p-v[0]);float s=1.;for(int i=0,j=n-1;i<n;j=i,i++){vec2 e=v[j]-v[i];vec2 w=p-v[i];vec2 b=w-e*clamp(dot(w,e)/dot(e,e),0.,1.);d=min(d,dot(b,b));bvec3 cond=bvec3(p.y>=v[i].y,p.y<v[j].y,e.x*w.y>e.y*w.x);if(all(cond)||all(not(cond))) s=-s;}return s*sqrt(d);}\n\n\n\nfloat sdPolyc000 POLY(7)\nvec2 ptc000[ 7]=vec2[](  \nvec2(.019,.502),vec2(.050,.500),vec2(.048,.529),vec2(.045,.536),vec2(.025,.536),\nvec2(.017,.529),vec2(.019,.502) );\n\nfloat sdPolyc001 POLY(7)\nvec2 ptc001[ 7]=vec2[](  \nvec2(.081,.500),vec2(.113,.500),vec2(.111,.529),vec2(.105,.538),vec2(.088,.538),\nvec2(.080,.530),vec2(.081,.500) );\n\nfloat sdPolyc002 POLY(5)\nvec2 ptc002[ 5]=vec2[](  \nvec2(.000,.464),vec2(.997,.466),vec2(.997,.250),vec2(.000,.252),vec2(.000,.464) );\n\nfloat sdPolyc003 POLY(5)\nvec2 ptc003[ 5]=vec2[](  \nvec2(.000,.416),vec2(.991,.418),vec2(.989,.411),vec2(.000,.411),vec2(.000,.416) );\n\nfloat sdPolyc004 POLY(5)\nvec2 ptc004[ 5]=vec2[](  \nvec2(.003,.364),vec2(.991,.364),vec2(.991,.357),vec2(.003,.357),vec2(.003,.364) );\n\n\nfloat sdPolyc005 POLY(5)\nvec2 ptc005[ 5]=vec2[](  \nvec2(.003,.309),vec2(.991,.311),vec2(.991,.304),vec2(.003,.304),vec2(.003,.309) );\n\n\nfloat sdPolyc006 POLY(5)\nvec2 ptc006[ 5]=vec2[](  \nvec2(.000,.250),vec2(.995,.248),vec2(.997,.180),vec2(.000,.180),vec2(.000,.250) );\n\n\nfloat sdPolyc007 POLY(5)\nvec2 ptc007[ 5]=vec2[](  \nvec2(.000,.750),vec2(.994,.750),vec2(.995,.470),vec2(.000,.466),vec2(.000,.750) );\n\n\nfloat sdPolyc008 POLY(5)\nvec2 ptc008[ 5]=vec2[](  \nvec2(.000,.998),vec2(.998,.998),vec2(.995,.750),vec2(.000,.750),vec2(.000,.998) );\n\n\nfloat sdPolyc009 POLY(5)\nvec2 ptc009[ 5]=vec2[](  \nvec2(.000,.857),vec2(.994,.855),vec2(.992,.752),vec2(.000,.752),vec2(.000,.857) );\n\n\nfloat sdPolyc010 POLY(7)\nvec2 ptc010[ 7]=vec2[](  \nvec2(.453,.252),vec2(.516,.321),vec2(.522,.330),vec2(.542,.330),vec2(.547,.321),\nvec2(.609,.254),vec2(.453,.252) );\n\nfloat sdPolyc011 POLY(5)\nvec2 ptc011[ 5]=vec2[](  \nvec2(.455,.254),vec2(.453,.466),vec2(.520,.538),vec2(.519,.329),vec2(.455,.254) );\n\nfloat sdPolyc012 POLY(7)\nvec2 ptc012[ 7]=vec2[](  \nvec2(.550,.325),vec2(.547,.536),vec2(.552,.536),vec2(.614,.466),vec2(.614,.254),\nvec2(.609,.254),vec2(.550,.325) );\n\n\nfloat sdPolyc013 POLY(12)\nvec2 ptc013[ 12]=vec2[](  \nvec2(.517,.534),vec2(.525,.538),vec2(.528,.545),vec2(.541,.545),vec2(.544,.538),\nvec2(.547,.536),vec2(.550,.329),vec2(.547,.325),vec2(.541,.330),vec2(.525,.332),\nvec2(.519,.323),vec2(.517,.534) );\n\n\n\nfloat sdPolyc014 POLY(4)\nvec2 ptc014[ 4]=vec2[](  \nvec2(.477,.361),vec2(.538,.427),vec2(.538,.359),vec2(.477,.361) );\n\nfloat sdPolyc015 POLY(5)\nvec2 ptc015[ 5]=vec2[](  \nvec2(.473,.363),vec2(.475,.463),vec2(.536,.538),vec2(.538,.423),vec2(.473,.363) );\n\nfloat sdPolyc016 POLY(9)\nvec2 ptc016[ 9]=vec2[](  \nvec2(.244,.211),vec2(.238,.213),vec2(.238,.234),vec2(.242,.241),vec2(.270,.239),\nvec2(.277,.236),vec2(.275,.220),vec2(.270,.213),vec2(.244,.211) );\n\n\nfloat sdPolyc017 POLY(6)\nvec2 ptc017[ 6]=vec2[](  \nvec2(.450,.261),vec2(.447,.461),vec2(.569,.530),vec2(.572,.330),vec2(.569,.325),\nvec2(.450,.261) );\n\n\nfloat sdPolyc018 POLY(5)\nvec2 ptc018[ 5]=vec2[](  \nvec2(.445,.254),vec2(.569,.325),vec2(.573,.320),vec2(.456,.254),vec2(.445,.254) );\n\n\nfloat sdPolyc019 POLY(5)\nvec2 ptc019[ 5]=vec2[](  \nvec2(.455,.252),vec2(.572,.318),vec2(.605,.323),vec2(.725,.255),vec2(.455,.252) );\n\n\nfloat sdPolyc020 POLY(5)\nvec2 ptc020[ 5]=vec2[](  \nvec2(.566,.536),vec2(.569,.321),vec2(.606,.323),vec2(.608,.536),vec2(.566,.536) );\n\n\nfloat sdPolyc021 POLY(6)\nvec2 ptc021[ 6]=vec2[](  \nvec2(.608,.323),vec2(.608,.534),vec2(.730,.466),vec2(.733,.254),vec2(.727,.255),\nvec2(.608,.323) );\n\n\nfloat sdPolyc022 POLY(31)\nvec2 ptc022[ 31]=vec2[](  \nvec2(.139,.652),vec2(.139,.673),vec2(.150,.673),vec2(.156,.670),vec2(.164,.666),\nvec2(.164,.664),vec2(.155,.655),vec2(.169,.654),vec2(.170,.657),vec2(.175,.657),\nvec2(.180,.643),vec2(.175,.643),vec2(.169,.643),vec2(.156,.645),vec2(.155,.634),\nvec2(.155,.625),vec2(.166,.609),vec2(.170,.609),vec2(.167,.604),vec2(.155,.605),\nvec2(.147,.616),vec2(.141,.604),vec2(.127,.604),vec2(.127,.609),vec2(.131,.611),\nvec2(.131,.621),vec2(.138,.629),vec2(.131,.632),vec2(.131,.648),vec2(.134,.652),\nvec2(.139,.652) );\n\n\nvec3   HacerPista(vec2 p,  vec3  col)\n{\n     float sdc002 = sdPolyc002(p, ptc002);     //pista\n    col=ponerBorde(col1,col,sdc002 );\n    \n    float sdc003 = sdPolyc003(p, ptc003);    //linea1  pista\n    col=ponerBorde(col11,col,sdc003 );\n\n    float sdc004 = sdPolyc004(p, ptc004);  //linea2  pista\n    col=ponerBorde(col11,col,sdc004 );\n\n    float sdc005 = sdPolyc005(p, ptc005);  //linea3  pista\n    col=ponerBorde(col11,col,sdc005 );\n\n  return col;\n}\n\n\n\nvec3 HacerPiaremide1(vec2  p, vec3 col)\n{\n\n    float sdc010 = sdPolyc010(p, ptc010);  //piramide1\n    col=ponerBorde(col3,col,sdc010 );\n\n    float sdc011 = sdPolyc011(p, ptc011);\n    col=ponerBorde(col3,col,sdc011 );\n\n    float sdc012 = sdPolyc012(p, ptc012);\n    col=ponerBorde(col2,col,sdc012 );\n\n    float sdc013 = sdPolyc013(p, ptc013);\n    col=ponerBorde(col1,col,sdc013 );\nreturn col;\n}\n\nvec3  HacerPiramideV2(vec2 p, vec3 col)\n{\n   //triangulo  chico\n    float sdc014 = sdPolyc014(p, ptc014);  //piramide 2\n    col=ponerBorde(col3,col,sdc014 );\n    \n    float sdc015 = sdPolyc015(p, ptc015);\n    col=ponerBorde(col10,col,sdc015 );\n\n  return col;\n}\n\nvec3  HacerPiramideV3(vec2 p, vec3   col)\n{\n    float sdc017 = sdPolyc017(p, ptc017);   //piramide  3\n    col=ponerBorde(col3,col,sdc017 );\n\n    float sdc018 = sdPolyc018(p, ptc018);\n    col=ponerBorde(col1,col,sdc018 );\n\n  float sdc019 = sdPolyc019(p, ptc019);\n    col=ponerBorde(col3,col,sdc019 );\n\n    float sdc020 = sdPolyc020(p, ptc020);\n    col=ponerBorde(col1,col,sdc020 );\n\n  float sdc021 = sdPolyc021(p, ptc021);\n  col=ponerBorde(col2,col,sdc021 );\nreturn  col;\n}\n\n//***------------****-----------****------------******-------\nvec3 ExciteBikeNes(in vec2 pp, vec3 col) \n{\n  vec2 p=pp;\n  \n  vec2  pr0=p;\n  pr0.x=mod(pr0.x,0.065);\n  \n     float sdc000 = sdPolyc000(pr0, ptc000);\n     col=ponerBorde(col1,col,sdc000 );  //arbolito1\n    vec2  pr=p, pr1=p,pr2=p,pr3=p;\n   \n    pr.x=mod(pr.x,0.95);\n    col=HacerPista(pr,col) ;\n   \n    float sdc006 = sdPolyc006(pr, ptc006);  //parte  inferior  piso\n    col=ponerBorde(col5,col,sdc006 );\n  \n    float sdc008 = sdPolyc008(pr, ptc008);   //publico\n    col=ponerBorde(colNegro,col,sdc008 );   \n    \n    float sdc009 = sdPolyc009(pr, ptc009);  //pared  publico\n    col=ponerBorde(col4,col,sdc009 );\n    \n    pr1.x=mod(pr1.x,1.5);  \n    col= HacerPiaremide1(pr1-vec2(0.35,0.0),col);\n    \n    vec2  pr4=p;\n    pr4.x=mod(pr4.x,0.37);\n    float sdc016 = sdPolyc016(pr4, ptc016);     //flores  2\n    col=ponerBorde(col4,col,sdc016 );\n    \n    pr2.x=mod(pr2.x,0.746);  \n    col=  HacerPiramideV2(pr2,col);\n    \n    pr3.x=mod(pr3.x,2.5);  \n    col=  HacerPiramideV3(pr3-vec2(0.0,0.0), col);\n    \n    float sdc022 = sdPolyc022(pr, ptc022);     //persona\n    col=ponerBorde(col8,col,sdc022 );\n  \n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    float t=iTime*0.35;\n    vec2 p=uv*0.4-vec2(-0.45-t,-0.6);\n    vec3 col=col12;\n     \n    col=ExciteBikeNes(p, col);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}