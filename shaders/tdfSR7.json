{
    "Shader": {
        "info": {
            "date": "1550952835",
            "description": "Programmed live during a Shadertoy Tutorial Session at Villanova University that I taught.",
            "flags": 0,
            "hasliked": 0,
            "id": "tdfSR7",
            "likes": 2,
            "name": "Mandelbrot Set Live Demo",
            "published": 3,
            "tags": [
                "fractal",
                "mandelbrot",
                "demo",
                "set",
                "live"
            ],
            "usePreview": 0,
            "username": "mathmasterzach",
            "viewed": 405
        },
        "renderpass": [
            {
                "code": "//Programmed live during a Shadertoy Tutorial Session at Villanova University\nfloat STEPS=64.;\nfloat PI=acos(-1.);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 c = fragCoord/iResolution.xy;\n    c=2.*c-1.;\n    c.x*=iResolution.x/iResolution.y;\n    c/=pow(2.,8.5*(-cos(PI*iTime/8.)+1.));\n    c+=vec2(-.602,-.665);\n   \tvec2 z = vec2(0);\n    float i;\n    for(i=0.;i<STEPS;i++){\n    \tvec2 tz=c+vec2(z.x*z.x-z.y*z.y,2.*z.x*z.y);\n        z=tz;\n        if(length(z)>2.){\n        \tbreak;\n        }\n    }\n    float ic=5.*i/STEPS;\n    vec3 col=vec3(cos(1.-ic),cos(2.-ic),cos(3.-ic));\n    //alternate color scheme\n    //vec3 col=vec3(cos(1.-ic)+1.,cos(2.-ic)+1.,cos(3.-ic)+1.)/2.;\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}