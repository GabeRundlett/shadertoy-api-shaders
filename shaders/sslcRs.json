{
    "Shader": {
        "info": {
            "date": "1642555992",
            "description": "shader study working with color an some kind of \"cheap reflection\"",
            "flags": 0,
            "hasliked": 0,
            "id": "sslcRs",
            "likes": 14,
            "name": "[ hsb color study ]",
            "published": 3,
            "tags": [
                "color",
                "flow",
                "hsb"
            ],
            "usePreview": 0,
            "username": "SimonOakey",
            "viewed": 517
        },
        "renderpass": [
            {
                "code": "#define Pi = 3.14159;\n   \nconst float fluid_speed = 6.0; \n\nconst int complexity = 10; \n\n// random function\n#define rand(n) fract(cos(n*89.42)*343.42)\n\nvec3 hsb2rgb(vec3 c)\n{\n    vec3 rgb = clamp(abs(mod(c.x * 6. + vec3(0. , 4., 2.), 6.) - 3.) - 1., 0., 1. );\n    rgb = rgb * rgb * (3. - 2. * rgb);\n    return c.z * mix(vec3(1.), rgb, c.y);\n}\n\n\n //generic rotation formula\nvec2 rot(vec2 uv,float a){\n\treturn vec2(uv.x*cos(a)-uv.y*sin(a),uv.y*cos(a)+uv.x*sin(a));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n     vec2 R = iResolution.xy; \n   \n   vec2 p=(2.0*fragCoord.xy-R)/max(R.x,R.y);\n  \n   // rotate the uv\n   p = rot(p,iTime*.01);\t\n   \n   // move the uv\n   p.x+= sin(iTime*.016)*2.;\n   p.y+= sin(iTime*.013)*2.;\n  \n  for(int i=1;i<complexity;i++)\n  {\n     vec2 newp = p.xy;\n     newp.x += 0.8/ float(i)*sin(float(i)*p.y+iTime/fluid_speed*.3+1.5*float(i)*.55)+14.;\n     newp.y += 0.8/ float(i)*sin(float(i)*p.x+iTime/fluid_speed*.6+1.5*float(i)*.3)+14.;\n     p = newp;\n   \n  }\n      \n      p.y +=rand(uv.x*uv.y*iTime)*10.; \n     \n\tvec3 col = hsb2rgb(vec3( p.x*.11 + uv.x*.04,p.y*.006,p.y*.006 + uv.y*.04 ));\t\n\t\n\t// make some highlights\n\tcol -= sin(p.x*11.5)*.23;\n   \n      \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}