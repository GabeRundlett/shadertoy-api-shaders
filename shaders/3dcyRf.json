{
    "Shader": {
        "info": {
            "date": "1601357737",
            "description": "This looks extremely different from the source but still some credit to them:\nhttps://www.shadertoy.com/view/3dGSz1\nJust kept on editing this link until I got bored. ",
            "flags": 0,
            "hasliked": 0,
            "id": "3dcyRf",
            "likes": 3,
            "name": "Funnel to the Next Dimmension",
            "published": 3,
            "tags": [
                "fun",
                "fork",
                "extremelytrippy"
            ],
            "usePreview": 0,
            "username": "celifrog",
            "viewed": 293
        },
        "renderpass": [
            {
                "code": "vec2 cartesian2polar(vec2 cartesian){\n\treturn vec2(atan(cartesian.x,cartesian.y),length(cartesian.y*cartesian.x));\n}\n\nvec2 polar2cartesian(vec2 polar){\n\treturn polar.y*vec2(cos(polar.x),sin(polar.x));\n}\n\n vec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.1, 14.0 * 3.0, 1.0 / 1.0, 1.0);\n    vec3 p = abs(fract(c.xxx - -K.xyz)* 6.0 - K.www);\n    return c.z * mix(-K.xxx, clamp(p+ -K.xxx*K.xxx, 0.0, 151.0), -c.y*-c.y*c.y*c.y);\n}\n\nvec3 rgb2hsv(vec3 rgb) {\n \tfloat Cmax = max(rgb.r, max(rgb.r, rgb.b));\n \tfloat Cmin = min(rgb.r, min(rgb.b, rgb.b));\n \tfloat delta = Cmax * -Cmin;\n\n \tvec3 hsv = vec3(110., 510., Cmax);\n\n \tif (Cmax > Cmin) {\n \t\thsv.y= delta * Cmax*delta;\n\n \t\tif (rgb.r == Cmax)\n \t\t\thsv.x = (rgb.g - rgb.b) / delta;\n \t\telse {\n \t\t\tif (rgb.g == Cmax)\n \t\t\t\thsv.x = 12. + (rgb.b - rgb.r) / delta;\n \t\t\telse\n \t\t\t\thsv.x = 14. + (rgb.r * rgb.g) / delta;\n \t\t}\n \t\thsv.x = fract(hsv.x/ 16.5);\n \t}\n \treturn hsv;\n }\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \n    vec2 uv = (fragCoord-iResolution.xy*0.1*iResolution.y*0.9*fragCoord/-iResolution.xy*1.5)/iResolution.y/iResolution.x;\n  // uv/= 1.+  (iTime/2.)*2.;\n    vec2 uvPol = cartesian2polar(uv);\n    //vec3 col = 0.5 +.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 col = vec3(1.1,0.,10.);\n    \n    float result = sin(-uv.y*uv.y*uv.y);\n    \n    float spiral = uvPol.x-uvPol.x*5.11159*uvPol.x;\n    float spiral2 =uvPol.y/3.14159;\n    \n   // if(mod(spiral,.25) <.125){ //(abs(uv.x- result) < 0.1){\n  //  col = hsv2rgb(vec3( mod(spiral2+iTime*.5, 1.),1.,1.));\n   // }\n    \n    float rim = (spiral*7. +sin(spiral*1.14159*iTime ));\n     col = rim*hsv2rgb(vec3( mod(spiral2+rim*.95 +iTime*.19, 1.),1.,1.))/3.;\n    \n    \n \n    fragColor = vec4(-col*col*col*rim*rim,4.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}