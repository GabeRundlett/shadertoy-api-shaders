{
    "Shader": {
        "info": {
            "date": "1670021022",
            "description": "Fog Particales",
            "flags": 0,
            "hasliked": 0,
            "id": "DsBSRm",
            "likes": 1,
            "name": "Fog #987413285",
            "published": 3,
            "tags": [
                "fog"
            ],
            "usePreview": 0,
            "username": "AmenShadertoy",
            "viewed": 100
        },
        "renderpass": [
            {
                "code": "float Circle(vec2 uv, float r1, float r2)\n{\n    float d = length(uv);\n    return smoothstep(r1, r2, d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col;// = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    //float random = abs(sin(iTime));\n    \n    float cos1 = -cos(iTime / 2.1);\n    float cos2 = cos(iTime / 4.1) / 2.;\n    float cos3 = -cos(iTime / 6.4);\n    float cos4 = cos(iTime / 3.4) / 4.;\n    \n    float sin1 = sin(iTime / 8.1) / 8.;\n    float sin2 = -sin(iTime / 4.7);\n    float sin3 = sin(iTime / 1.5) / 16.;\n    float sin4 = -sin(iTime / 3.2);\n    \n    uv *= 3.;\n    \n    float circle = Circle(uv + vec2(cos1, sin1), .25 + abs(mix(0., sin(iTime / 7.5) * 2.1, .001)), .09  - abs(sin(iTime / 7.5)));\n    circle += Circle(uv + vec2(.5 + cos2, .1 + sin2), .5 + abs(mix(0., sin(iTime / 1.8) * 3.1, .09)), .02  - abs(sin(iTime / 1.8)));\n    circle += Circle(uv + vec2(-.5 + cos3, .1 + sin3), .75 + abs(mix(0., sin(iTime / 9.8) * 3.1, .03)), .02  - abs(sin(iTime / 9.8)));\n    circle += Circle(uv + vec2(0. + cos4, -.1 + sin4), .125 + abs(mix(0., sin(iTime / 5.2) * 3.1, .8)), .06  - abs(sin(iTime / 5.2)));\n    \n    circle += Circle(uv + vec2(1. + cos3, -.01 + sin3), .9 + abs(mix(0., sin(iTime / 9.1) * 3.1, .3)), .03  - abs(sin(iTime / 9.1)));\n    circle += Circle(uv + vec2(-1. + cos4, .19 + sin4), .4 + abs(mix(0., sin(iTime / 4.6) * 3.5, .02)), .06  - abs(sin(iTime / 4.6)));\n    circle += Circle(uv + vec2(0.63 + cos2, .9 + sin2), .3 + abs(mix(0., sin(iTime / 15.6) * 3.7, .09)), .04  - abs(sin(iTime / 15.6)));\n    circle += Circle(uv + vec2(0.08 + cos1, -.25 + sin1), .75 + abs(mix(0., sin(iTime / 2.5) * 5.3, .04)), .01  - abs(sin(iTime / 2.5)));\n    \n    circle += Circle(uv + vec2(1.5 + cos3, -.91 + sin3), .9 + abs(mix(0., sin(iTime / 9.1) * 3.9, .2)), .01  - abs(sin(iTime / 9.1)));\n    circle += Circle(uv + vec2(-1.9 + cos4, 2.19 + sin4), .35 + abs(mix(0., sin(iTime / 4.6) * 3.4, .07)), .1  - abs(sin(iTime / 4.6)));\n    circle += Circle(uv + vec2(1.63 + cos2, 2.1 + sin2), .6 + abs(mix(0., sin(iTime / 10.6) * 3.2, .03)), .09  - abs(sin(iTime / 10.6)));\n    circle += Circle(uv + vec2(2.28 + cos1, -3.85 + sin1), .1 + abs(mix(0., sin(iTime / 3.5) * 3.7, .001)), .025  - abs(sin(iTime / 3.5)));\n    \n    //if(d < .1)\n    //    c += smoothstep(.25, .05, d + 0.1);\n  \n    //float c = smoothstep(.5, 0., d + randomNum_D);\n\n    // Output to screen\n    fragColor = vec4(vec3(circle), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}