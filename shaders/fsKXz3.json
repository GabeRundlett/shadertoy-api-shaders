{
    "Shader": {
        "info": {
            "date": "1635033585",
            "description": "[url=https://en.wikipedia.org/wiki/Rolling_shutter]https://en.wikipedia.org/wiki/Rolling_shutter[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "fsKXz3",
            "likes": 12,
            "name": "Rolling Shutter Effect Animation",
            "published": 3,
            "tags": [
                "effect",
                "animation",
                "rollingshutter"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 153
        },
        "renderpass": [
            {
                "code": "// Try uncommenting for a speedy version\n//#define SPEED_ANIM\n\nfloat anim(in vec2 uv, in float time) {\n    float dist = length(uv) - 0.4 * sin(mod(5.0 * atan(uv.y, uv.x) + 500.0 * time, 6.28));\n    return smoothstep(fwidth(dist), 0.0, dist);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float scan = fragCoord.y / iResolution.y;\n    float time = 0.01 * iTime;\n    float frameDur = 0.02; // To exaggerate effect\n\n    #ifdef SPEED_ANIM\n    time = iTime;\n    frameDur = 0.025; // Change to 0.0255 and it appears to go in reverse :D\n    #endif\n\n    float localTime = time / frameDur;\n    float sec = floor(localTime), fracSec = fract(localTime);\n\n    // Capture animation with delay between scanlines\n    vec3 color = vec3(anim(uv, (sec - 1.0 + scan) * frameDur)); // Previous frame\n    if (scan < fracSec) color = vec3(anim(uv, (sec + scan) * frameDur));\n    color.g = max(color.g, 0.5 * anim(uv, time)); // Actual animation in green\n\n    // Scanline\n    color = mix(color, vec3(1.0, 0.0, 0.0), smoothstep(2.0 / iResolution.y, 0.0, abs(scan - fracSec)));\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}