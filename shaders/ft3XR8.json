{
    "Shader": {
        "info": {
            "date": "1638693001",
            "description": "Uses Euler's wave equation to calculate wave propagation.\n\n\nMore info here: wikipedia.org/wiki/Wave_equation",
            "flags": 32,
            "hasliked": 0,
            "id": "ft3XR8",
            "likes": 3,
            "name": "Wave propagation in an ellipse",
            "published": 3,
            "tags": [
                "wave",
                "waveequation",
                "wavepropagation"
            ],
            "usePreview": 0,
            "username": "Dev1ati0n",
            "viewed": 305
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    if(texture(iChannel1,uv).r==0.){\n        vec2 diff = fragCoord-0.5*iResolution.xy;\n        if(0.51*diff.x*diff.x+diff.y*diff.y<95000.){fragColor = vec4(0.1,0.1,0.9,1.0);}\n        else{fragColor = vec4(0.,0.,0.1,1.0);}\n    }\n    else{\n        fragColor = texture(iChannel0,uv)+0.5;\n        fragColor.rgb *= vec3(0.5,0.5,0.2);\n        fragColor.rgb += vec3(0.1,0.5,0.9);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// The derivative (rate of change) of the wave amplitude\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pixel = 1./iResolution.xy;\n    vec2 uv = fragCoord*pixel;\n    // Fetch values of neighcoring pixels\n    float values[5];\n    values[0] = texture(iChannel1,uv).r;\n    values[1] = texture(iChannel1,uv+vec2(0.0, 1.0)*pixel).r;\n    values[2] = texture(iChannel1,uv+vec2(0.0,-1.0)*pixel).r;\n    values[3] = texture(iChannel1,uv+vec2(1.0, 0.0)*pixel).r;\n    values[4] = texture(iChannel1,uv+vec2(-1.0,0.0)*pixel).r;\n    // Wave Equation: d²u/dt²=c²(d²u/dx²+d²u/dy²)\n    float deriv = values[1]+values[2]+values[3]+values[4]-4.*values[0]; // Calculates d²u/dx²+d²u/dy²\n    float c = texture(iChannel2,uv).r; // Fetch value of c\n    fragColor = vec4(texture(iChannel0,uv).r+timescale*c*c*deriv); // Add c²(d²u/dx²+d²u/dy²) to the previous value\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = vec4(timescale*texture(iChannel0,uv)+texture(iChannel1,uv)); // Add the derivative to the previous value\n    // Add disturbance\n    vec2 diff = fragCoord-0.5*iResolution.xy;\n    diff.x += 300.;\n    fragColor += 0.05*sin(.1*float(iFrame))*exp(-0.05*dot(diff,diff));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Wave propagation speed\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(iFrame>0){fragColor = texture(iChannel0,fragCoord/iResolution.xy); return;} // Reload previous\n    // Draw ellipse\n    vec2 diff = fragCoord-0.5*iResolution.xy;\n    if(0.5*diff.x*diff.x+diff.y*diff.y>90000.){fragColor = vec4(0.);}\n    else{fragColor = vec4(1.);}\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Speed of simulation. Higher values are faster, but less accurate and more buggy. \nfloat timescale = 0.5;",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}