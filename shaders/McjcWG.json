{
    "Shader": {
        "info": {
            "date": "1722937570",
            "description": "glow circle rotating as loading",
            "flags": 0,
            "hasliked": 0,
            "id": "McjcWG",
            "likes": 0,
            "name": "glow circle rotating as loading",
            "published": 3,
            "tags": [
                "loading"
            ],
            "usePreview": 0,
            "username": "571574085",
            "viewed": 66
        },
        "renderpass": [
            {
                "code": "// ShaderToy implementation of rotating hollow ring with Chinese text\n\n#define TWO_PI 6.28318530718\n\n// Function to create a circular gradient\nfloat circle(vec2 uv, vec2 center, float radius, float softness) {\n    float dist = length(uv - center);\n    return 1.0 - smoothstep(radius - softness, radius, dist);\n}\n\n// Function to create a hollow ring\nfloat hollowRing(vec2 uv, vec2 center, float radius, float thickness, float softness) {\n    float outer = circle(uv, center, radius + thickness / 2.0, softness);\n    float inner = circle(uv, center, radius - thickness / 2.0, softness);\n    return outer - inner;\n}\n\n// Function to rotate a point\nvec2 rotate(vec2 uv, float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n    return vec2(uv.x * c - uv.y * s, uv.x * s + uv.y * c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec2 center = vec2(0.0);\n    float radius = 0.4;\n    float thickness = 0.03;\n    float softness = 0.08;\n    \n    // Rotate the UV coordinates\n    float rotationSpeed = 2.;\n    uv = rotate(uv, iTime * rotationSpeed);\n    \n    // Create the hollow ring\n    float r = hollowRing(uv, center, radius, thickness, softness);\n    \n    // Add some variation to the ring color\n    vec3 ringColor = vec3(0.0, 1.0, 1.0) + vec3(0.0, 0.5, 0.0) * sin(atan(uv.y, uv.x) + iTime);\n    \n    // Add glow effect\n    float glow = hollowRing(uv, center, radius, thickness * 4.0, 0.1) * 0.5;\n    \n    // Combine ring and glow\n    vec3 color = r * ringColor + glow * vec3(0.0, 1.0, 1.0);\n    //vec3 color = glow* vec3(0.0, 1.0, 1.0);;\n\n    \n    // Add some pulsing effect\n    color *= 0.8 + 0.2;// * sin(iTime * TWO_PI);\n    \n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}