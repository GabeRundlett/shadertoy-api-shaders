{
    "Shader": {
        "info": {
            "date": "1535107006",
            "description": "测试错乱测试错乱测试错乱测试错乱测试错乱",
            "flags": 0,
            "hasliked": 0,
            "id": "4tVcR1",
            "likes": 1,
            "name": "测试错乱",
            "published": 3,
            "tags": [],
            "usePreview": 0,
            "username": "liuhaidong",
            "viewed": 237
        },
        "renderpass": [
            {
                "code": "\n//返回小数部分\nfloat frac (float x)\n{\n    return x - floor(x);\n}\n\n//\nfloat nrand(float x, float y)\n{\n    return frac(sin(dot(vec2(x, y), vec2(12.9898, 78.233))) * 43758.5453);\n}\n//\n\nfloat lerp(float a, float b, float w) {\n  return a + w*(b-a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float iResolutionX = iResolution.x;\n        \n    //_ScanLineJitter\n    float _scanLineJitter = abs(sin(iTime));//取值0-1\n    float sl_thresh = clamp(1.0-_scanLineJitter*1.2,0.0,1.0);\n    float sl_disp = 0.002f + pow(_scanLineJitter, 3.0) * 0.05f;        \n    vec2 _ScanLineJitter = vec2(sl_disp,sl_thresh); // (displacement, threshold)\n    \n\n    //_VerticalJump\n    float _verticalJump = .0; //取值0-1\n    float _verticalJumpTime = 0.0;\n    _verticalJumpTime += iTime * _verticalJump *11.3f;\n    vec2 _VerticalJump = vec2(_verticalJump,_verticalJumpTime);   // (amount, time)\n    \n    \n    //_HorizontalShake\n    float _HorizontalShake = 0.0;//取值0-1\n    _HorizontalShake = _HorizontalShake *0.2;\n    \n    \n    //_ColorDrift\n    float amount = .2;//取值0-1\n    amount *= 0.04;\n    float time = iTime *606.11;\n    vec2 _ColorDrift = vec2(amount,time);     // (amount, time)\n    \n    \n    \n    float u = uv.x;\n    float v = uv.y;\n    \n    // Scan line jitter\n    float jitter = nrand(v, iTime) * 2.0 - 1.0;\n    jitter *= step(_ScanLineJitter.y, abs(jitter)) * _ScanLineJitter.x;\n\n    \n    // Vertical jump\n    float jump = lerp(v, frac(v + _VerticalJump.y), _VerticalJump.x);\n    \n    \n    // Horizontal shake\n    float shake = (nrand( iTime, 2.0) - 0.5) * _HorizontalShake;\n\n    // Color drift\n    float drift = sin(jump + _ColorDrift.y) * _ColorDrift.x;\n\n    vec2 src1uv = vec2(frac(u + jitter + shake),frac(jump));\n    vec4 src1 = texture(iChannel0, src1uv);\n    \n    vec2 src2uv = vec2(frac(u + jitter + shake+drift),frac(jump));\n    vec4 src2 = texture(iChannel0, src2uv);\n\n    fragColor = vec4(src1.r, src2.g, src1.b, 1.0);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}