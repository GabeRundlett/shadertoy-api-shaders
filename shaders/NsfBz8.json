{
    "Shader": {
        "info": {
            "date": "1644513539",
            "description": "Another fbm experiment using all the most rudimentary functions.",
            "flags": 0,
            "hasliked": 0,
            "id": "NsfBz8",
            "likes": 28,
            "name": "FBM: Just Painting #2",
            "published": 3,
            "tags": [
                "2d",
                "noise",
                "fbm",
                "texture",
                "shadow",
                "lighting",
                "abstract",
                "brownian",
                "stripes",
                "pattern",
                "marble",
                "aesthetic",
                "sparkles",
                "fractional"
            ],
            "usePreview": 0,
            "username": "Yusef28",
            "viewed": 673
        },
        "renderpass": [
            {
                "code": "float noise(vec2 st){\n    return fract(sin(dot(vec2(12.23,74.343),st))*43254.);  \n}\n\nfloat rnd(float a){\n    return fract(sin(a*234.15)*41240.91);\n}\n#define pi acos(-1.)\nfloat noise2D(vec2 st){\n  \n  //id,fract\n  vec2 id =floor(st);\n  vec2 f = fract(st);\n  \n  //nachbarn\n  float a = noise(id);\n  float b = noise(id + vec2(1.,0.));\n  float c = noise(id + vec2(0.,1.));\n  float d = noise(id + vec2(1.));\n  \n  \n  //f\n  f = smoothstep(0.,1.,f);\n  \n  //mix\n  float ab = mix(a,b,f.x);\n  float cd = mix(c,d,f.x);\n  return mix(ab,cd,f.y);\n}\n\nmat2 rot45 = mat2(0.707,-0.707,0.707,0.707);\n\nmat2 rot(float a){\n  float s = sin(a); float c = cos(a);\n  return mat2(c,-s,s,c);\n}\nfloat fbm(vec2 st, float N, float rt){\n    st*=3.;\n \n  float s = .5;\n  float ret = 0.;\n  for(float i = 0.; i < N; i++){\n     \n      ret += noise2D(st)*s; st *= 2.9; s/=2.; st *= rot((pi*(i+1.)/N)+rt*8.);\n      //st.x += iTime;\n  }\n  return ret;\n  \n}\n\n//vec3 wrap(vec3 \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = (fragCoord.xy - iResolution.xy*0.5)/iResolution.y;\n\n\n  vec3 col =vec3(0.);// mix(vec3(0.2,0.3,0.5),vec3(0.2,0.6,0.4),((uv.y+0.5))*1.);\n  col += pow(mix(\n             texture(iChannel0, uv*2.5 +vec2(floor(iTime*0.2+uv.x),0.)*0.5).r,\n             texture(iChannel0, uv*2.5 +vec2(floor(iTime*0.2+1.+uv.x),0.)*0.5).r,\n             smoothstep(0.,1.,fract(iTime*0.2+uv.x))\n             ),9.);\n  \n\n  vec3 theColor;\n  \n  for(float i = 1.; i < 14.; i++){\n      vec2 altUV = uv;\n      float j = pow(rnd(i)*0.6,0.5);//i/19.;\n      theColor = vec3(j,j*j*j,j*j*0.27)+texture(iChannel1,uv).rrr*0.1;\n      uv = uv + vec2(iTime/(80.-i*2.),0.);\n      float faa = fbm(uv + i*100., 5., 6.);\n      faa = abs(faa);\n      float shadow = smoothstep(0.5,0.3,faa);\n      col=mix(col, theColor*0.1, shadow*0.5);\n      \n      //uv = uv + vec2(iTime/(80.+i*8.),0.);\n      float faa2 = fbm(uv + i*100. + .03, 5., 6.);\n      float shadow2 = clamp(smoothstep(0.4,0.36,faa2),0.,1.);\n      col=mix(col, vec3(0.), shadow2*0.7);\n      \n      float stripes = smoothstep(0.3,0.2,abs(fract((uv.y-uv.x)*(15.+i*1.3))-0.5));\n      \n      float f = max(0.,smoothstep(0.4,0.39,faa));\n      float g = max(0.,smoothstep(0.4,0.39,faa));\n      float h = clamp(g - max(0.,smoothstep(0.36,0.34,faa)),0.,1.);\n      \n      if(mod(i,3.)==0.){\n          stripes = 1.;\n          theColor = theColor.bgg;\n          theColor += pow(\n                          mix(\n                          texture(iChannel0, altUV*2.5 +vec2(floor(iTime*0.3+uv.x),0.)*0.5).r,\n                          texture(iChannel0, altUV*2.5 +vec2(floor(iTime*0.3+1.+uv.x),0.)*0.5).r,\n                          smoothstep(0.,1.,fract(iTime*0.3+uv.x))\n                      ),6.);\n                \n          theColor= mix(theColor,texture(iChannel1,uv*2.).r*theColor,0.5-h*0.5);\n      }\n      \n      \n      //float f = max(0.,smoothstep(0.4,0.39,faa));\n      col=mix(col,theColor-(stripes+texture(iChannel0,uv).rrr)*0.04,f);\n\n      //float g = max(0.,smoothstep(0.4,0.39,faa));\n     // float h = clamp(g - max(0.,smoothstep(0.36,0.34,faa)),0.,1.);\n      col=mix(col,theColor*0.9-texture(iChannel1,uv*8.).rrr*0.13,h);\n      \n  }\n\n    col *=1.3;\n \n\n    //vignette\n    uv = fragCoord/iResolution.xy;\n    uv *=  1.0 - uv.yx;\n    float vig = uv.x*uv.y * 25.0; // multiply with sth for intensity\n    \n    vig = pow(vig, 0.3); // change pow for modifying the extend of the  vignette\n\n    fragColor = vec4(col*vig*1.4,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}