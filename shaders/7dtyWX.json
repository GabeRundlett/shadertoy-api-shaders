{
    "Shader": {
        "info": {
            "date": "1654191152",
            "description": "Value Noise Explained!",
            "flags": 0,
            "hasliked": 0,
            "id": "7dtyWX",
            "likes": 1,
            "name": "Damaged Photo Noise ",
            "published": 3,
            "tags": [
                "noise",
                "random",
                "valuenoise"
            ],
            "usePreview": 0,
            "username": "Sergeindamix",
            "viewed": 294
        },
        "renderpass": [
            {
                "code": "float N21(vec2 p) {\n    return fract(sin(p.x*100.+p.y*6574.)*5647.);\n}\n\nfloat SmoothNoise(vec2 uv) {\n    vec2 lv = fract(uv);\n    vec2 id = floor(uv);\n    \n    lv = lv*lv*(3.-2.*lv);\n    \n    float bl = N21(id);\n    float br = N21(id+vec2(1,0));\n    float b = mix(bl, br, lv.x);\n    \n    float tl = N21(id+vec2(0,1));\n    float tr = N21(id+vec2(1,1));\n    float t = mix(tl, tr, lv.x);\n    \n    return mix(b, t, lv.y);\n}\n\nfloat SmoothNoise2(vec2 uv) {\n    float c = SmoothNoise(uv*4.);\n    \n    // don't make octaves exactly twice as small\n    // this way the pattern will look more random and repeat less\n    c += SmoothNoise(uv*8.2)*.5;\n    c += SmoothNoise(uv*16.7)*.25;\n    c += SmoothNoise(uv*32.4)*.125;\n    c += SmoothNoise(uv*64.5)*.0625;\n    \n    c /= 2.;\n    \n    return c;\n}\n\nfloat rectangle(vec2 position, vec2 scale)\n{\n    scale = vec2(0.5) - scale * 0.5;\n    vec2 shape = vec2(step(scale.x, position.x), step(scale.y, position.y));\n    shape *= vec2(step(scale.x, 1.0 - position.x), step(scale.y, 1.0 - position.y));\n    \n    return shape.x * shape.y;\n\n}\n\nfloat Band(float t, float start, float end, float blur){\n    \n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    \n    return step1*step2;//overlap edges\n\n}\n\nfloat Rect(vec2 uv, float left,float right,float bottom,float top,float blur){\n    float band1 = Band(uv.x, left, right, blur);\n    float band2 = Band(uv.y, bottom, top, blur);\n    \n    return band1*band2;//overlap horizontal and vertical bands\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv2 = uv;\n    float x = uv.x;\n    float y = uv.y;\n    \n    x+=.0;//move horizontal\n    y+=.0;//move vertical\n    float t = iTime;\n    \n    uv+=0.25;//Noise Shape\n    float c = SmoothNoise2(uv);\n    \n    float d = smoothstep(0.,1.,length(uv2-.5)-.5);//rectangle(uv2,vec2(.500))-.025;\n    \n    d+=c;\n    vec3 v = texture(iChannel0,uv2).rgb/d*c;\n    vec3 col = vec3(v);//Noise\n    \n    if( col.y > y/.125 || col.y > x/.125 || col.x<.5 && col.y > 1.25-y ||\n        col.x<.75 && col.y > 1.25-x)\n        col=vec3(1);//Edges White Noise\n    else col = texture(iChannel1,uv2).rgb;//vec3(0);//photo\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}