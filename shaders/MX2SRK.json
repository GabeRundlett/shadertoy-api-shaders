{
    "Shader": {
        "info": {
            "date": "1710830893",
            "description": "向内径向模糊的圆形",
            "flags": 0,
            "hasliked": 0,
            "id": "MX2SRK",
            "likes": 1,
            "name": "animate smoothness circle",
            "published": 3,
            "tags": [
                "circle"
            ],
            "usePreview": 0,
            "username": "moshuying",
            "viewed": 102
        },
        "renderpass": [
            {
                "code": "\n/**\n * Draw a circle at vec2 `pos` with radius `rad` and\n * color `color`.\n */\nvec4 drawCircle(vec2 uv, vec2 pos, float rad, vec3 color) {\n\tfloat d = length(pos - uv) - rad;\n\tfloat t = clamp(d, 0.0, 1.0);\n\treturn vec4(color, 1.0 - t);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n  float radius=.5;\n  float borderWidth=.2;\n  float smoothness=.05;\n  \n  vec3 circleColor=vec3(1.);\n  vec3 borderColor=vec3(0.);\n  \n  float dist=length(uv-vec2(.5,.5));//+ (1.-mod(iTime*0.05,1.)+0.2);\n  \n  float border=smoothstep(radius-borderWidth,radius+borderWidth,dist);\n  float circle=smoothstep(radius-borderWidth-smoothness,radius-borderWidth,dist);\n  \n  vec3 color=mix(borderColor,circleColor,circle);\n\n    // Output to screen\n    fragColor = vec4(color, border);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}