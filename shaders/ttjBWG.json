{
    "Shader": {
        "info": {
            "date": "1599766063",
            "description": "This is a follow up to my \"3 not equal 3\" shader.\nPlease let me know if you see two different shades of grey on the left and right of your screen.\nThe right side is correct - I've posted a screen shot in comments so you can see the problem on my iMac.",
            "flags": 0,
            "hasliked": 0,
            "id": "ttjBWG",
            "likes": 0,
            "name": "3!=3, 6!=6, 7!=7 on iMac ?!",
            "published": 3,
            "tags": [
                "glslbug",
                "imac"
            ],
            "usePreview": 0,
            "username": "GregRostami",
            "viewed": 313
        },
        "renderpass": [
            {
                "code": "// On my iMac, the left side is brighter than the right side (see attached image in comments)\n// The right side is the correct value that is supposed to be there.\n\n// This is a follow up to my previous shader (3 not equal 3)\n// It looks like \"3\" isn't the only problem number ... 6 and 7 have problems also!\n\n// iq, Fabrice and ollj have already remarked on the differences in precision between\n// the CPU and the GPU which causes the loop to fail.\n// But there's a dramatic difference between the two sides!?\n// The loss in precision would have to be very high for the loop to fail.\n\nvoid mainImage( out vec4 fragColor, vec2 u )\n{\n    fragColor = vec4(0.0);    // Initialize fragColor to 0.0 \n    u /= iResolution.xy;  // Normalize u (0 to 1)\n    float s;\n    \n    float A = 3.0,  // Here are the numbers that I found have a problem on my iMac\n          B = 6.0,\n          C = 7.0;\n    \n    if   ( u.y > 2.0/3.0 )\n         u.x >.5 ? s = 1.0/3.0 : s = 1.0/A;  // Isn't A = 3.0 ?? This should make the loop iterate 3 times.\n    \n    else if ( u.y > 1.0/3.0 )\n         u.x >.5 ? s = 1.0/6.0 : s = 1.0/B;  // Isn't B = 6.0 ?? This should make the loop iterate 6 times.\n    \n    else u.x >.5 ? s = 1.0/7.0 : s = 1.0/C;  // Isn't C = 7.0 ?? This should make the loop iterate 7 times.\n    \n    for ( float i = 0.0; i < 1.0; i += s ) fragColor += 0.1;  // Add 0.1 to fragColor several times\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}