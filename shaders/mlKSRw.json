{
    "Shader": {
        "info": {
            "date": "1686003257",
            "description": "toa certified",
            "flags": 0,
            "hasliked": 0,
            "id": "mlKSRw",
            "likes": 1,
            "name": "megastructure",
            "published": 3,
            "tags": [
                "pixel"
            ],
            "usePreview": 0,
            "username": "doriasschaerer",
            "viewed": 170
        },
        "renderpass": [
            {
                "code": "float sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat ndot(vec2 a, vec2 b ) { return a.x*b.x - a.y*b.y; }\nfloat sdRhombus( in vec2 p, in vec2 b ) \n{\n    p = abs(p);\n    float h = clamp( ndot(b-2.0*p,b)/dot(b,b), -1.0, 1.0 );\n    float d = length( p-0.5*b*vec2(1.0-h,1.0+h) );\n    return d * sign( p.x*b.y + p.y*b.x - b.x*b.y );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Scaling\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y * 0.5;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n\n    \n    vec2 offset = vec2(sin(iTime), cos (iTime));\n    //uv += offset;\n    //uv0 += -offset;\n    \n    float time = round(iTime * 10.) / 10. ;\n\n    for (float i = 0.0; i < 8.0; i++)\n    {\n        \n        \n        uv = fract(uv*2.) -0.5;\n        \n        uv = uv * 4.0;\n        \n        uv = abs(uv);\n\n        uv.x *= 1.1;\n\n        vec3 c = vec3(sdBox(uv, vec2(3)));\n\n        vec2 sqrBox = vec2(1);\n        vec2 boxSize = vec2(0.5,0.7);\n        vec2 boxSize2 = vec2(0.7,0.5);\n        vec2 boxSize3 = vec2(0.6,0.6);\n\n        float timeStep = step(0.5, fract(iTime / 5.));\n\n        vec2 box = boxSize;\n        //box = timeStep * boxSize + (1. - timeStep) * boxSize2;\n        //box = box / i;\n        //box = vec2(sin(iTime) / 10.0 + 1.0, sin(iTime + 3.141) / 7.0 + 1.0);\n\n\n        //float sdf = min(min(sdBox(uv0, boxSize), sdBox(uv0, boxSize2)), sdBox(uv0, boxSize3));\n        float sdf = sdBox(uv0, box);\n        float sdf2 = sdBox(uv0, boxSize2);\n\n        c *= sin(sin(sdf) * 10. * (i) + iTime);\n\n        \n\n        c *= clamp(c.r ,0.0, 1.0);\n\n        c *= 0.3;\n\n        c = step(0.8, c);\n\n        finalColor += c * i;\n\n    }\n\n\n    fragColor = vec4(finalColor, 1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}