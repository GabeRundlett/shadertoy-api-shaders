{
    "Shader": {
        "info": {
            "date": "1697643711",
            "description": "Simulating a damaged VCR playing a video",
            "flags": 0,
            "hasliked": 0,
            "id": "ddcfWj",
            "likes": 0,
            "name": "Fork Damaged VC IwakuraRei 066",
            "published": 3,
            "tags": [
                "chromaticaberration"
            ],
            "usePreview": 0,
            "username": "IwakuraRein",
            "viewed": 156
        },
        "renderpass": [
            {
                "code": "#define OFFSET_X 0.02\n#define OFFSET_Y 0.0\n#define PULSE_SIZE 0.1\n#define INV_PULSE_SIZE 10.0\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Hint, it's a few lines of code, and makes use of a tan function :)\n    float pulseY = iTime*0.3 - trunc(iTime*0.3);\n    bool insidePulse = false;\n    if (uv.y > pulseY && uv.y - pulseY < PULSE_SIZE)\n    {\n        insidePulse = (uv.y > pulseY && uv.y - pulseY < PULSE_SIZE);\n    }\n    if (insidePulse)\n    {\n        float dy = (uv.y-pulseY) * INV_PULSE_SIZE - 0.5;\n        if (sin(dy*200.0) > 0.0) uv.y +=dy*0.1;\n    }\n    \n    vec2 offset1 = vec2(OFFSET_X, OFFSET_Y);\n    vec2 offset2 = vec2(0.);\n    vec2 offset3 = vec2(-OFFSET_X, OFFSET_Y);\n    \n    float r = texture(iChannel0, uv + offset1).r;\n    float g = texture(iChannel0, uv + offset2).g;\n    float b = texture(iChannel0, uv + offset3).b;\n                          \n    vec3 col = vec3(r, g, b);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}