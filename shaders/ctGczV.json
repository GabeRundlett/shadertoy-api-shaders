{
    "Shader": {
        "info": {
            "date": "1700401571",
            "description": "Looking to re-create a certain animated background design using sine waves",
            "flags": 0,
            "hasliked": 0,
            "id": "ctGczV",
            "likes": 3,
            "name": "Sine wave design",
            "published": 3,
            "tags": [
                "sine"
            ],
            "usePreview": 0,
            "username": "Peter226",
            "viewed": 128
        },
        "renderpass": [
            {
                "code": "const float PI = 3.14;\n\nfloat animateSine(float pos, float freq, float speed){\n    return (sin((pos * freq -iTime * speed)) + 1.0) * 0.5;\n}\n\n\n\nfloat makeSine(vec2 uv, float offset){\n\n    uv.y += offset * 10.0;\n    float baseWave = sin(uv.x * 0.03 + offset * 0.001 * uv.x) * 20.0;\n    float animate = animateSine(uv.x, 0.003, 3.0);\n\n    float animatedCol = animate * (3.0 * animate - abs(uv.y + baseWave));\n    \n    return max(0.0,animatedCol);\n}\n\n\nfloat drawWaves(vec2 fragCoord, int numberOfWaves, float freq){\n    float waves = 0.0;\n    for(int i = 0;i < numberOfWaves;i++){\n       waves += makeSine(fragCoord, float(i) * freq);\n    }\n    return waves * 0.2;\n}\n\n\n\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, -s, \n                 s,  c );\n}\n\nvec2 rotateCoord(vec2 coord, float rotation){\n    return coord * rotationMatrix(rotation);\n}\n\nvec2 transposeCoord(vec2 coord, vec2 offset, float rotation){\n    return coord * rotationMatrix(rotation) + offset;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n    fragColor += drawWaves(transposeCoord(fragCoord, vec2(0,-300), -40.1), 25, 0.6);\n    fragColor += drawWaves(transposeCoord(fragCoord, vec2(0,-200), 20.0), 40, 0.4);\n        fragColor += drawWaves(transposeCoord(fragCoord, vec2(0,-200), 160.0), 20, 0.8);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}