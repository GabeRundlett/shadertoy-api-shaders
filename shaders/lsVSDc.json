{
    "Shader": {
        "info": {
            "date": "1467219849",
            "description": "something kinda fun to look at",
            "flags": 0,
            "hasliked": 0,
            "id": "lsVSDc",
            "likes": 77,
            "name": "shifting rings",
            "published": 3,
            "tags": [
                "circles",
                "grid",
                "blackandwhite"
            ],
            "usePreview": 0,
            "username": "mahalis",
            "viewed": 3447
        },
        "renderpass": [
            {
                "code": "float ringStep(float outerRadius, float innerRadius, vec2 coord, float rotationOffset) {\n    float d = length(coord);\n    const float smoothingWidth = 0.02;\n    float ringValue = smoothstep(smoothingWidth, 0.0, d - outerRadius) * smoothstep(0.0, smoothingWidth, d - innerRadius);\n    float radialMultiplier = fract(atan(coord.y, coord.x) * 7.0 / 6.28 - 0.3 * iTime + rotationOffset);\n    return ringValue * smoothstep(0.0, 0.1, radialMultiplier - 0.4);\n}\n\nfloat noiseish(vec2 coord, vec2 coordMultiplier1, vec2 coordMultiplier2, vec2 coordMultiplier3, vec3 timeMultipliers) {\n    return 0.5 + 0.1667 * (sin(dot(coordMultiplier1, coord) + timeMultipliers.x * iTime) + sin(dot(coordMultiplier2, coord) + timeMultipliers.y * iTime) + sin(dot(coordMultiplier3, coord) + timeMultipliers.z * iTime));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    uv.x += 0.04 * cos(0.6 * uv.x + 0.7 * uv.y - 4.0*cos(0.3 * iTime) * (0.3 + 0.02*uv.y));\n    const float cellResolution = 7.0;\n    vec2 localUV = fract(uv * cellResolution) - vec2(0.5);\n    const float smoothingWidth = 0.04;\n    \n    vec2 cellCoord = floor(uv * cellResolution);\n    \n    float cellValue = noiseish(cellCoord, vec2(1.3, -1.0), vec2(1.7, 1.9), vec2(0.3, 0.7), vec3(-1.3, 2.3, -0.8));\n    float outer1 = 0.2 + 0.3 * cellValue;\n    float inner1 = 0.02 + 0.38 * pow(cellValue, 0.8);\n    \n    float cellValue2 = noiseish(cellCoord, vec2(-2.3, 1.1), vec2(1.4, 0.8), vec2(0.1, 0.5), vec3(2.1, 1.9, -1.7));\n    \n    float v = 1.0 - (ringStep(outer1, inner1, localUV, 0.0) + ringStep(0.05 + 0.25 * cellValue2, 0.05 + 0.05 * cellValue2, localUV, iTime * 1.2));\n    \n\tfragColor = vec4(v, v, v, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}