{
    "Shader": {
        "info": {
            "date": "1405000309",
            "description": "Study simple texture.",
            "flags": 0,
            "hasliked": 0,
            "id": "MsfXRf",
            "likes": 31,
            "name": "Fragment plane",
            "published": 3,
            "tags": [
                "mouse",
                "fullscreen",
                "faketexture",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "gyabo",
            "viewed": 45961
        },
        "renderpass": [
            {
                "code": "#define ITE_MAX 15\n\nvec2 rot(vec2 p, float a)\n{\n\treturn vec2(cos(a) * p.x - sin(a) * p.y, sin(a) * p.x + cos(a) * p.y);\n}\n\nvec3 tex(vec2 uv)\n{\n\tvec3 c = vec3(fract(uv.xyy));\n\tif(mod(uv.x * 2.0, 2.0) < 0.9) return vec3(0);\n\tif(mod(uv.y * 1.0, 1.0) < 0.9) return vec3(0);\n\treturn c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tfloat M   = iTime * 0.5;\n\tfloat fog = 1.0;\n\tvec2 uv   = 2.0 * ( fragCoord.xy / iResolution.xy ) - 1.0;\n\t     uv  *= vec2(iResolution.x / iResolution.y, 1.0);\n\t     uv   = rot(uv, -iMouse.y * 0.015);\n\tvec3  c   = vec3(0);\n\tfor(int i = 0 ; i < ITE_MAX; i++) {\n\t\tc = tex(vec2(uv.x / abs(uv.y / (float(i) + 1.0)) + M + iMouse.x * 0.015, abs(uv.y)));\n\t\tif(length(c) > 0.5) break;\n\t\tuv   = uv.yx * 1.3;\n\t\tfog *= 0.9;\n\t}\n\tfragColor = (1.0 - vec4(c.xyyy * (fog * fog)));\n    fragColor.a = fog;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}