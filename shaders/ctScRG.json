{
    "Shader": {
        "info": {
            "date": "1691878150",
            "description": "drum Basico-sound",
            "flags": 8,
            "hasliked": 0,
            "id": "ctScRG",
            "likes": 9,
            "name": "drum Basico-sound",
            "published": 3,
            "tags": [
                "2d",
                "sound",
                "bass",
                "drum"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 199
        },
        "renderpass": [
            {
                "code": "//por jorge2017a2\n\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(6.0*antialiasing(1.0),b,d)\n//#define PI 3.141516\n\n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\n///oneshade    \nvec2 Rotate(in vec2 p, in vec2 o, in float r) \n{   float c = cos(r), s = sin(r);\n    return (p - o) * mat2(c, -s, s, c) + o;\n}\n\nfloat sdCircle( vec2 p, float r )\n{return length(p) - r; }\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b; return length(max(d,0.0)) + min(max(d.x,d.y),0.0); }\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\nvec2 pa = p-a, ba = b-a;\nfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\nreturn length( pa - ba*h );\n}\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2(0.0,distObj));\ncolOut = mix(colOut,vec3(0.0) ,S2(0.0,abs( distObj)-0.001));\nreturn colOut;\n}\n\n\nfloat N21(vec2 p)\n{ return fract(sin(p.x * 100. + p.y * 6574.) * 5647.);}\n\nvec3 banquetaIzq(vec2 p, vec3 col)\n{\nvec2 A,B;\n\nA= vec2(3.24,4.77);\nB= vec2(7.48,4.86);\nfloat d1=sdSegment(p,A,B);\n\nA= vec2(3.24,3.2);\nB= vec2(5.88,3.25);\nfloat d2=sdSegment(p,A,B);\n\nA= vec2(3.23,2.33);\nB= vec2(4.91,2.32);\nfloat d3=sdSegment(p,A,B);\n\nA= vec2(3.25,1.73);\nB= vec2(4.32,1.77);\nfloat d4=sdSegment(p,A,B);\n\nA= vec2(3.25,1.32);\nB= vec2(3.9,1.34);\nfloat d5=sdSegment(p,A,B);\n\nA= vec2(3.25,1.03);\nB= vec2(3.55,1.04);\nfloat d6=sdSegment(p,A,B);\n\nA= vec2(3.25,0.82);\nB= vec2(3.32,0.81);\nfloat d7=sdSegment(p,A,B);\n\nA= vec2(3.26,0.66);\nB= vec2(8.02,5.32);\nfloat d8=sdSegment(p,A,B);\n\nvec3 colc=vec3(0.64,0.64,0.64);\n col= DrawFigBorde(vec3(0.0), col, d1);\n col= DrawFigBorde(vec3(0.0), col, d2);\n col= DrawFigBorde(vec3(0.0), col, d3);\n col= DrawFigBorde(vec3(0.0), col, d4);\n col= DrawFigBorde(vec3(0.0), col, d5);\n col= DrawFigBorde(vec3(0.0), col, d6);\n col= DrawFigBorde(vec3(0.0), col, d7);\n col= DrawFigBorde(vec3(0.0), col, d8);\n    return col;\n}\n\n\nvec3 banquetaDer(vec2 p, vec3 col)\n{\nvec2 A,B;\n//linea inclinada\nA= vec2(4.03,0.22);\nB= vec2(9.79,2.37);\nfloat d9=sdSegment(p,A,B);\n\n\nA= vec2(3.78,0.25);\nB= vec2(9.62,2.5);\nfloat d10=sdSegment(p,A,B);\n\nA= vec2(4.84,0.21);\nB= vec2(10.29,1.69);\nfloat d11=sdSegment(p,A,B);\n\n\nA= vec2(6.72,0.72);\nB= vec2(6.7,0.25);\nfloat d12=sdSegment(p,A,B);\n\nA= vec2(7.16,0.85);\nB= vec2(7.18,0.21);\nfloat d13=sdSegment(p,A,B);\n\nA= vec2(7.51,0.88);\nB= vec2(7.5,0.23);\nfloat d14=sdSegment(p,A,B);\n\nA= vec2(8.58,0.23);\nB= vec2(8.57,1.19);\nfloat d15=sdSegment(p,A,B);\n\nA= vec2(9.31,0.23);\nB= vec2(9.31,1.39);\nfloat d16=sdSegment(p,A,B);\n\nA= vec2(9.96,0.25);\nB= vec2(10.02,1.58);\nfloat d17=sdSegment(p,A,B);\n\nA= vec2(7.13,0.85);\nB= vec2(5.78,0.84);\nfloat d18=sdSegment(p,A,B);\n\nA= vec2(6.47,1.11);\nB= vec2(8.33,1.12);\nfloat d19=sdSegment(p,A,B);\n\nA= vec2(7.4,1.44);\nB= vec2(9.5,1.45);\nfloat d20=sdSegment(p,A,B);\n\nA= vec2(3.77,0.24);\nB= vec2(10.28,2.77);\nfloat d21=sdSegment(p,A,B);\n\nA= vec2(4.03,0.22);\nB= vec2(10.27,2.54);\nfloat d22=sdSegment(p,A,B);\ncol= DrawFigBorde(vec3(0.0),col, d9);\ncol= DrawFigBorde(vec3(0.0),col, d10);\ncol= DrawFigBorde(vec3(0.0),col, d11);\ncol= DrawFigBorde(vec3(0.0),col, d12);\ncol= DrawFigBorde(vec3(0.0),col, d13);\ncol= DrawFigBorde(vec3(0.0),col, d14);\ncol= DrawFigBorde(vec3(0.0),col, d15);\n\ncol= DrawFigBorde(vec3(0.0),col, d16);\ncol= DrawFigBorde(vec3(0.0),col, d17);\ncol= DrawFigBorde(vec3(0.0),col, d18);\ncol= DrawFigBorde(vec3(0.0),col, d19);\ncol= DrawFigBorde(vec3(0.0),col, d20);\n\ncol= DrawFigBorde(vec3(0.0),col, d21);\ncol= DrawFigBorde(vec3(0.0),col, d22);\n    return col;\n}\n\nvec3 calle(vec2 p, vec3 col)\n{  col=banquetaIzq(p,col);\n   col=banquetaDer(p,col);\n    return col;\n}\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    //uv-=vec2(-2.0,1.0);\n    uv-=vec2(-3.3,1.0);\n    uv*=3.0;\n    //uv*=1.5* 3.* 2./iResolution.y;\n    uv.x*=0.48;\n    uv.x*=1.45;\n    \n    uv.y=-uv.y+0.2*sin(iTime);\n    uv.x+=0.2*sin(iTime+uv.y);\n    vec3 col=vec3(0.5);\n    col=calle(uv,col);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//Referencia de sonido IQ y Gaz\n//Modificado por Jorge2017a2---jorgefp\n\n//,modificado por jorge2017a2\n//https://www.shadertoy.com/view/NdSyDy\n\n#define PI 3.1415926536\n#define PIH (PI*.5)\n#define TAU (PI*2.)\n\n\n#define DD(a,b) n=(s>=a)?ivec2(a,b):n;\n\nconst float pi = 3.1415927;\nconst float tau = 6.283185;\n\n//gaz\n#define osc_sin(x)sin((x)*TAU)\n#define osc_saw(x)(1.-fract(x)*2.)\n#define osc_sqr(x)sign(0.5-fract(x))\n#define osc_tri(x)(asin(sin((x)*PI))/PIH)\n \nfloat noize(float t,  float a, float b){\n    float g=fract(cos(t*exp2(a))*exp2(b))+6.0;\n    return exp(-0.08*g*g) *40.0-1.;\n}\n\nfloat kick(float t)\n{ return clamp(1.5*asin(cos(320.0*t-30.0*exp(-40.0*t))),-1.,1.)*exp(-4.*t);}\n\nfloat kick1(float t)\n{ return clamp(1.5*asin(cos(620.0*t-30.0*exp(-40.0*t))),-1.,1.)*exp(-4.*t);}\n\n\nfloat snare(float t)\n{  float n=noize(t,10.,10.)*exp(-t*10.);\n    float f=t*160.,a=.3*osc_tri(1.2*f)*exp(-t*3.);\n    float b=.05*osc_sin(10.*f+a)*exp(-t*3.);\n    float c=osc_sin(f+b)*exp(-t*15.), z;\n    return n+c;\n}\n\nfloat snare2(float t)\n{ float n=noize(t,10.,10.)*exp(-t*10.);\n    float f=t*260.;\n    float a=0.0;\n    float b=.05*osc_sin(10.*f+a)*exp(-t*3.);\n    float c=osc_sin(f+b)*exp(-t*15.), z;\n    return n+c;\n}\n\nfloat SinMod(float x, float b, float c, float d)\n{  float p = (2. * PI) / b; return sin(p * (x + c)) + d; }\n\nfloat Amp(float a)\n{ return a * 0.1;}\n\nfloat SinWave(float f, float a, float t)\n{ return Amp(a) * sin(2. * PI * f * t); }\n\nfloat sec1(float t)\n{   float f1,cf1,p1,s1;\n    float t0=t;    \n     f1 = 40.;\n     cf1 = 1. / f1;\n     float t1=mod(t,12.0);\n     p1 = SinMod(t1, cf1, 0., 1.);\n     s1 = SinWave(p1, 0.3, t1);\n     return s1;\n}     \n\nfloat sound1(float  t, float freq, float tr)\n{   float x=6.2831*freq*t;\n    float d1=mod(x+sin(x*1.0),tr);\n    d1=abs(d1)-0.1;\n    return  d1*exp(-3.0*t);\n}\n\nvec2 mainSound(in int samp, float time)\n{   \n    float s1,s2,ss1;\n    float k1;\n    float dtr2=mod(time,12.0);\n    dtr2=12.0-time;\n    s1=sec1(dtr2)*1.5;\n float  trt=mod(time,15.0);\n  \n  const float tempo = 7.2;\n  int s = int(floor(trt*tempo));\n  float sa = (trt*tempo);\n  \n  ivec2 n = ivec2(0);\n  float na = 0.0;\n  \n  DD( 1,1) DD( 2,1) DD(3,1) \n  DD( 4,1) DD( 5,1) DD(5,2) \n  \n  DD(17,2) DD(18,2) DD(19,2)\n  DD(20,1) DD(21,1) DD(22,1)\n  DD(23,3) DD(24,3)\n  DD(25,1) DD(26,1) DD(27,1) DD(28,1) \n  DD(29,2) DD(30,1) DD(31,1) DD(33,2)\n  DD(34,3) DD(35,3) DD(36,1) DD(37,1)\n  DD(38,4) DD(39,4) DD(40,4) DD(41,1)\n  \n  DD(42,1) DD(43,2) DD(44,1) DD(45,2) \n  DD(46,1) DD(47,2) DD(49,2) DD(50,1)\n  DD(51,3) DD(52,3) DD(53,1) DD(54,1)\n  DD(55,3) DD(56,4) DD(57,4) DD(58,4)\n  DD(59,2) DD(60,3) DD(61,4) DD(62,4) \n  DD(63,1) DD(65,2) DD(66,1) DD(67,2)\n  DD(69,1) DD(70,3) DD(71,1) DD(72,1)\n  DD(73,3) DD(74,3) DD(75,2) DD(76,1)\n  DD(77,3) DD(78,3) DD(79,2) DD(81,1)\n  DD(82,3) DD(83,4) DD(84,3) DD(85,2)\n  DD(86,4) DD(87,4) DD(88,3) DD(89,2) \n  DD(90,4) DD(91,4) DD(92,4) DD(93,1)\n   // lower one octave\n  n.y -= 12;\n      \n  // compute note frequency and time  \n  float f = 440.0*pow( 2.0, float(n.y-69)/12.0 );\n  float t = trt - float(n.x)/tempo;\n    n.y += 12;\n\n  // prepare wave parameters\n  float w = tau*f;\n  float dwdt = w/iSampleRate; // derivative\n    \n    if(n.y==1)\n    k1= kick1(t);\n    \n    if(n.y==2)\n    k1= kick(t);\n    \n    if(n.y==3)\n    ss1= snare(t);\n    \n    if(n.y==4)\n    ss1= snare2(t);\n        return vec2(s1+k1+ss1);     \n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}