{
    "Shader": {
        "info": {
            "date": "1487061132",
            "description": "Testing SinWave, Need to add x-offset, Find cheaper method to generate gradient for lines. pow(x,4800) seems overkill.",
            "flags": 0,
            "hasliked": 0,
            "id": "4lGXWD",
            "likes": 23,
            "name": "Sine-Wave",
            "published": 3,
            "tags": [
                "wavesineline"
            ],
            "usePreview": 0,
            "username": "tkoram20",
            "viewed": 1950
        },
        "renderpass": [
            {
                "code": "float hash(float seed)\n{\n    return fract(sin(seed*1.0));\n}\n\n\nfloat horizontal(vec2 uv, float r)\n{\n    float result = abs(uv.y)-r;\n    float res2 = 1.0-result;\n    float res3 = result * -1.0;\n    res3 = 1.0 - res3;\n    result = res2 * res3;\n    //result = pow(result,8800.0);\n    //result += 1.0;\n    result = smoothstep(.05/iResolution.y,0.0,1.0-result);\n    return result;\n}\n\n/*float gradient(vec2 uv, float r)\n{\n     float result = length(vec2(0.0,uv.y));\n    float res2 = 1.0-result;\n    float res3 = res2*-1.0;\n    result = res2 * result;\n    result *= 4.0; \n    return result;\n    \n}*/\n\nfloat horiwaves(vec2 uv, float frequency, float Amplitude)\n{\n    float result = sin(uv.x*frequency);\n    return result*Amplitude*sin(uv.x);\n}\n\nvec3 makewave(vec2 uv,float frequency, float amplitude, float zoffset, vec3 color, float speed)\n{\n    uv.x += iTime*speed;\n    float mask = horiwaves(uv,frequency,amplitude);\n    float result = horizontal(uv-mask,zoffset);\n    //result = clamp(result,0.0,1.0);\n    vec3 colorpass = result*color;\n    return colorpass;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float SW = ((sin(iTime) + 1.0)*0.5)-.50;\n    //float grad = gradient(uv,0.5);\n    uv.x -= 2.0;\n    //SW *= mask;\n    vec3 color1 = makewave(uv,15.0,0.20*sin(iTime),0.5,vec3(1.0,0.1,0.0),0.5);\n    vec3 color2 = makewave(uv,12.0,0.40*sin(iTime+1.2),0.55,vec3(0.1,1.0,0.0),0.5);\n    vec3 color3 = makewave(uv,20.0,0.30*sin(iTime+2.5),0.45,vec3(1.0,1.0,0.0),0.5);\n    vec3 color4 = makewave(uv,5.0,0.50*sin(iTime+2.0),0.550,vec3(1.0,0.0,1.0),0.5);\n    vec3 gradient = vec3(uv.y);\n    vec3 finalColor = (color1-vec3(0.1)) + (color2-vec3(0.1)) + (color3-vec3(0.1)) + (color4-vec3(0.1));\n\t//fragColor = vec4(vec3(uv,0.0),1.0);\n    fragColor = vec4(finalColor,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}