{
    "Shader": {
        "info": {
            "date": "1484855665",
            "description": "Voronoi Experiment 7",
            "flags": 0,
            "hasliked": 0,
            "id": "llKSzy",
            "likes": 12,
            "name": "Voronoi Experiment 7 (381c)",
            "published": 3,
            "tags": [
                "voronoi",
                "experiment",
                "7"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 751
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - @Aiekick/2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n//* 381c by FabriceNeyret2\nvoid mainImage( out vec4 O, vec2 U )\n{\n\tU /= iResolution.y * .1;\n\t\n    float d = 9., t;\n    \n    for(int x=-2; x<=2; x++)\n      for(int y=-2; y<=2; y++)\n      {\t\n        vec2 p = vec2(x,y),\n             a = sin( iDate.w + 9.* fract(sin((floor(U)+p)*mat2(2,5,5,2))));\n\n        p += .5 + .35*a - fract(U);\n        p *= mat2(cos(t=a.x+a.y),-sin(t),sin(t),cos(t));\n\n        d = min(d, 5.*max( abs(p.x)*.866 - p.y*.5, p.y));\n    }\n\t\n    O =    vec4(.9,.6,.3,0)\n\t    * ( 1. - exp(-2.*d)    )\n\t    * ( .5 + .5*cos(10.*d) );\n\tO = 1. + --O * smoothstep(.0, .02, d);\n}\n\n/* original for experiment different df \nfloat df(vec2 uv)\n{\n\tuv *= 5.;\n    return max(abs(uv.x)*.866 - uv.y*.5,uv.y);\n}\n\nvoid mainImage( out vec4 fC, vec2 fG )\n{\n\tvec2 p = fG /= iResolution.y / 10.;\n\t\n    float d = 9.;\n    \n    for(int x=-2;x<=2;x++)\n    for(int y=-2;y<=2;y++)\n    {\t\n        p = vec2(x,y);\n        vec2 a = sin( iTime + 9. * fract(sin((floor(fG)+p)*mat2(2,5,5,2))));\n\t\tp += .5 + .35*a - fract(fG);\n\t\ta.x *= a.y;\n        p *= mat2(cos(a.x),-sin(a.x),sin(a.x),cos(a.x));\n        d = min(d, df(p));\n    }\n\t\n    vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\n\tcol *= 1.0 - exp(-2.0*abs(d));\n\tcol *= 0.5 + 0.5*cos(10.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.02,abs(d)) );\n\n\tfC = vec4(col,1);\n}/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}