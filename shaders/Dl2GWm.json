{
    "Shader": {
        "info": {
            "date": "1673404941",
            "description": "Domain Warping with Perlin noise.",
            "flags": 0,
            "hasliked": 0,
            "id": "Dl2GWm",
            "likes": 2,
            "name": "Domain Warping V1.2",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "FifthStateOfMatter",
            "viewed": 278
        },
        "renderpass": [
            {
                "code": "//Dave_Hoskins' Hash Without Sine\nfloat random3(vec3 p){\n    p = fract(p*0.1031);\n    p += dot(p, p.zyx + 31.32);\n    return (fract((p.x + p.y)*p.z)*2.0) - 1.0;\n}\n\nfloat perlinNoise(vec3 p){\n    vec3 cellPos = floor(p);\n    vec3 cellFract = fract(p);\n    vec3 cellMix = cellFract*cellFract*(3.0 - 2.0*cellFract);\n    float value;\n\n    vec3 blf = vec3(random3((cellPos + vec3(0, 0, 0))*1.0));\n    vec3 brf = vec3(random3((cellPos + vec3(1, 0, 0))*1.0));\n    vec3 trf = vec3(random3((cellPos + vec3(1, 1, 0))*1.0));\n    vec3 tlf = vec3(random3((cellPos + vec3(0, 1, 0))*1.0));\n\n    vec3 blb = vec3(random3((cellPos + vec3(0, 0, 1))*1.0));\n    vec3 brb = vec3(random3((cellPos + vec3(1, 0, 1))*1.0));\n    vec3 trb = vec3(random3((cellPos + vec3(1, 1, 1))*1.0));\n    vec3 tlb = vec3(random3((cellPos + vec3(0, 1, 1))*1.0));\n\n    value = mix(\n        mix(\n            mix(dot(cellFract - vec3(0, 0, 0), blf), dot(cellFract - vec3(1, 0, 0), brf), cellMix.x),\n            mix(dot(cellFract - vec3(0, 1, 0), tlf), dot(cellFract - vec3(1, 1, 0), trf), cellMix.x),\n            cellMix.y\n        ),\n        mix(\n            mix(dot(cellFract - vec3(0, 0, 1), blb), dot(cellFract - vec3(1, 0, 1), brb), cellMix.x),\n            mix(dot(cellFract - vec3(0, 1, 1), tlb), dot(cellFract - vec3(1, 1, 1), trb), cellMix.x),\n            cellMix.y\n        ),\n        cellMix.z\n    );\n    return value + 0.5;\n}\n\nfloat domainWarp(vec2 p, float z){\n    float c = perlinNoise(vec3(p*10.0, z))*1.0;\n    for(int i = 0; i < 2; i++){\n        c = perlinNoise(vec3(c*5.0, c*5.0, z*5.0) + 10.0)*1.0;\n    }\n    return c/1.0;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    vec3 col = mix(vec3(1, 0.3, 0), vec3(0.8, 0, 0), domainWarp(uv, iTime*0.1));\n\n    fragColor = vec4(pow(col, vec3(1.0/2.2)), 1);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}