{
    "Shader": {
        "info": {
            "date": "1712612484",
            "description": "I didn't get to see the eclipse so I made my own ):<\n\nInspired by [url=WdBXWV]this shader[/url]\nand a [url=https://tinyurl.com/yvw2v3xj]picture[/url] my friend took\n\nnoise function grabbed from [url=csKBzc]here[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "XcK3DR",
            "likes": 18,
            "name": "eclipse͏",
            "published": 3,
            "tags": [
                "space",
                "eclipse",
                "static",
                "art",
                "render"
            ],
            "usePreview": 0,
            "username": "01000001",
            "viewed": 345
        },
        "renderpass": [
            {
                "code": "const float pi = 3.1415926;\n#define time iTime * 0.2\n\n//hash by IQ https://www.shadertoy.com/view/XlXcW4\nconst uint k = 1103515245U;\nvec3 hash( uvec3 x )\n{\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    \n    return vec3(x)*(1.0/float(0xffffffffU));\n}\n\n\nfloat noise(float t, int p){\n    float x = 0.;\n    \n    for (int i = 0; i++<p;){\n        vec3 h = hash(uvec3(i, 2<<i, 5*i));\n        x += sin(h.x * t * float(i) + h.y*pi*2.) * h.z / float(i<<1);\n    }\n\n    return x;\n}\n\nvoid mainImage( out vec4 O, vec2 U ){\n    vec2 r = iResolution.xy;\n    vec2 uv = 2.*(2.*U-r)/r.y;\n    vec2 auv = uv;\n    \n    float t = atan(uv.y,uv.x); //Thanks fad\n    //if (uv.y==0.) t=0.;\n    float x;\n    \n    \n    if (length(uv) > 1.){\n        \n        float d = noise(t*2., 2<<6)*2.+1.1;\n        d *= 1./(1.+pow(abs(uv.y), 2.));\n        x = 0.1*d/((length(uv)-1.));\n\n    } else {\n        x = (1.-length(uv))*5e2;\n        x = 1./sqrt(x);\n    }\n    \n    \n    uv.x += \n    //*\n        abs(uv.y)>=1.?1e3:sqrt(1. - pow(abs(uv.y), 2.));\n    /*/\n        1.;\n    //*/\n   \n    if (uv.y == 0.) uv.y = 1./r.y;\n    x += 0.5*(sin(time)+1.)/(abs(uv.x)*abs(uv.y)) / ((abs(500.*uv.y)+1.)*(abs(200.*uv.x)+2.));\n\n    O = mix(\n        mix(\n            vec4(\n                sqrt(x), \n                x, \n                x*x, \n                1\n            ), \n            vec4(\n                x*x,\n                x,\n                sqrt(x),\n                1\n            ), \n            smoothstep(1., 2.5, length(auv))\n        ),\n        vec4(x),\n    0.8);\n    \n    O*= 2.;\n    O = O/(O+vec4(1));\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}