{
    "Shader": {
        "info": {
            "date": "1694323224",
            "description": "https://www.youtube.com/watch?v=SA6Y3L-X0Po&ab_channel=PolyToots",
            "flags": 0,
            "hasliked": 0,
            "id": "DlBXzK",
            "likes": 2,
            "name": "flow map noise",
            "published": 3,
            "tags": [
                "map",
                "flow",
                "force"
            ],
            "usePreview": 0,
            "username": "lanx06",
            "viewed": 195
        },
        "renderpass": [
            {
                "code": "#define T iTime*0.5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col; \n    \n    vec2 uu=vec2(noises(uv,5),noises(uv+vec2(1.0),5));\n    //uu=vec2(0.6);\n    col.xy=uu;\n    //uu.x=abs(sin(uv.x*10.0));\n    uu=(uu-0.5)*2.0;\n    float power=0.1;\n    vec2 ua=uv+uu*fract(T)*power;\n    vec2 ub=uv+uu*fract(T+0.5)*power; \n    \n    vec3 a=texture(iChannel0,ua).xyz;\n    vec3 b=texture(iChannel0,ub).xyz;\n    //col.xy=ua; \n    col=mix(a,b,abs((fract(T)-0.5)*2.0));\n    \n    //col=mix(a,b,abs(sin(T)));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define fc fragCoord.xy\n#define tx(offset)(texture( iChannel0,( (fragCoord.xy+offset) /iResolution.xy) ) )\n#define PI 3.1415926538\nvec2 dir8[8]=vec2[](vec2(1.0,0.0),vec2(1.0,1.0),vec2(0.0,1.0),vec2(-1.0,1.0),vec2(-1.0,0.0),vec2(-1.0,-1.0),vec2(0.0,-1.0),vec2(1.0,-1.0));\nfloat dir8w[8]=float[](0.2,0.05,0.2,0.05,0.2,0.05,0.2,0.05);\n\nfloat sin_lerp(float a,float b,float t){\n    float tem=(1.0-cos(t*PI))/2.0;\n    return a*(1.0-tem)+b*tem;\n}\nvec2 sin_lerp(vec2 a,vec2 b,float t){\n    float tem=(1.0-cos(t*PI))/2.0;\n    return a*(1.0-tem)+b*tem;\n}\nfloat random(float seed){\n    return fract(sin(seed+1.) * 43758.5453);\n}\nvec2 random(vec2 p){\n    p = vec2( dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)) );\n\t//return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n    return vec2(random(p.x),random(p.y));\n}\nvec2 lerp(vec2 a,vec2 b,float t){\n    return sin_lerp(a,b,t);\n    //return mix(a,b,t);\n}\nvec2 noise(vec2 uv){\n    vec2 v0=random(floor(uv));\n    vec2 v1=random(floor(uv)+vec2(1,0));\n    vec2 v2=random(floor(uv)+vec2(1,1));\n    vec2 v3=random(floor(uv)+vec2(0,1));\n    vec2 dtt=uv-floor(uv);\n    vec2 x1 =lerp(v0,v1,dtt.x);\n    vec2 x2 =lerp(v3,v2,dtt.x);\n    vec2 o=lerp(x1,x2,dtt.y);\n    //return v2;\n    return o;   \n}\nfloat noises(vec2 uv,int level){\n    float c=0.0;\n    float scale=10.0;\n    float t=2.0;\n    for(int i=0;i<10;i++){\n        if(i>level)\n            break;\n        c+=noise(uv*scale).x/t;\n        scale*=2.0;\n        t*=2.0;\n    }\n    return c;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}