{
    "Shader": {
        "info": {
            "date": "1710532556",
            "description": "golfing 1407 chars \"metatron\" by UnMouflon. https://shadertoy.com/view/MXSXDR\nimitating https://www.thingiverse.com/thing:1146870\n\npress V to color Vertices , F for faces\nchange thickness line 18",
            "flags": 16,
            "hasliked": 0,
            "id": "XX2SW1",
            "likes": 4,
            "name": "metatron - golf + coloring",
            "published": 3,
            "tags": [
                "metatron"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 114
        },
        "renderpass": [
            {
                "code": "// golfing 1407 chars \"metatron\" by UnMouflon. https://shadertoy.com/view/MXSXDR\n#define keyToggle(a)  ( texelFetch(iChannel3,ivec2(a,2),0).x > 0.)\n#define hue(c)        ( .6 + .6 * cos( 6.3*(c)  + vec4(0,23,21,0)  ) )\n\n#define rot(a)      mat2(cos(a+vec4(0,-1,1,0)*1.571))                    // 2D rotation \n#define rot3(P,A,a) ( mix( A*dot(P,A), P, cos(a) ) + sin(a)*cross(P,A) ) // 3D rot around axe A\n\nfloat L(vec3 p) {                  // --- distorted half-torus\n    vec3  L = -vec3(.5,.15,.5);              // (b-a)/2, a = vec3(1), b = vec3(0,.7,0)\n    float l = length(L), a;\n           // p -= (a+b)/2\n    p = rot3( p-1.-L, L/l, 1.74 );           // rot( vec3(1), 100° )\n    p.xz = ( p.x - vec2(-p.z,p.z) )*.7;      // rot( Y, 45° )\n    a = p.x > 0. ? 1.28 : 1.74;              // torus arc: 85° tilt:15°\n    p.x = abs(p.x); // 1.22 was not enougth for thin radii\n    p.y *= .7;                               // torus distortion\n    p.xy *= rot(1.571-a);\n    a = p.y < 0. ? p.x : length(p.xy);       // end sphere vs body\n    return sqrt( dot(p,p) + l*l - 2.*l*a ) - .15; // dist - radius\n}\n\nivec2 I;                                     // arc Id, for coloring\nfloat map(vec3 q) {                // --- metatron SDF\n    float d = 9.,a, k = .15, h, l, i;  \n    for( ; i++<8.; ) {                       // 8 vertices. could we wrap some symmetry ?\n        if (i==5.) q.xy *= -1.;\n        q.yz = vec2(-q.z,q.y);               // rot2( 90° )\n        for( a = 0.; a < 5.; a += 2.1 )      // 3 edge-to-face-center per vertex\n            l = L( rot3( q, vec3(.58), a ) ),// draw arc\n            min(d,l) == l ? I = ivec2(i,a/2.) : I,  // arc Id, for coloring\n            h = max( k - abs(d-l), 0.),      // d = opSmoothUnion(d,l) https://iquilezles.org/articles/smin/\n            d = min(d,l) - h*h/k/4.;\n        }\n    return d;\n}\n\nvoid mainImage(out vec4 O, vec2 U) // --- ray-marching\n{\n    float t=9.;\n    vec3  R = iResolution, N, e = vec3(.01,0,0),\n          D = vec3(U*.4 - R.xy*.2, -R.y) / R.y,            // ray direction\n          p = vec3(0,0,10), q, r,                          // marching point along ray \n          M = iMouse.z > 0. ? iMouse.xyz/R -.5\n              :  vec3(.1,0,0) * cos(iTime + vec3(0,11,0)); \n    for (O=vec4(1); O.x > 0. && t > .01; O-=.01)           // march scene\n        q = p,\n        q.yz *= rot(.78-6.*M.y),                           // rotations\n        q.xz *= rot(.78-6.*M.x), \n        t = map(q),\n     // t = min(t, map(q)),\n        p += t*D;                                          // step forward = dist to obj          \n\n   if (t<.01) {\n       N = normalize( t - vec3( map(q+e), map(q+e.yxy), map(q+e.yyx) ) ), // shading\n       O = vec4( .2 + .8*max(0.,dot(N,vec3(-.7)) ));\n       if keyToggle(64+22) O *= hue( float(I.x)/8. );      // color \"vertices\" or \"faces\"\n       if keyToggle(64+ 6) O *= hue( float(int[](2,0,3,1, 2,1,3,0, 1,2,0,3,  0,2,1,3, 4,4,4,4, 5,5,5,5)[I.x-1+I.y*8] )/6.);\n   } \n} \n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}