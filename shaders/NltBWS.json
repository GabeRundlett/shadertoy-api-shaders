{
    "Shader": {
        "info": {
            "date": "1663601905",
            "description": "was playing around with some circles and wanted to make a fractal that was using the equation of the circle on fractalized space. Which is what I've done here. ",
            "flags": 0,
            "hasliked": 0,
            "id": "NltBWS",
            "likes": 2,
            "name": "Simple, Fractal based on Circles",
            "published": 3,
            "tags": [
                "fractal",
                "simple",
                "math",
                "circle"
            ],
            "usePreview": 0,
            "username": "spenceryonce",
            "viewed": 167
        },
        "renderpass": [
            {
                "code": "float circle(vec2 uv, float r){\n    return smoothstep(-0.01,0.01,(length(uv)-r));\n}\n\n\nvoid mainImage(out vec4 c, in vec2 fc)\n{\n    vec2 uv = (2.0*fc.xy -iResolution.xy)/iResolution.y;\n    float angle = 0.2 + sin(iTime)*0.3+cos(1./iTime);\n    \n    vec3 color = vec3(0.0);\n    \n    for(float i = 1.0;i<12.0;i+=1.0){\n        uv = abs(uv);\n    uv -= 0.5;\n    uv *= 1.1;\n    uv *= mat2(sin(angle),-sin(angle),cos(angle),sin(angle));\n    //uv += 0.5;\n    }\n    \n    float ci = circle(uv, 0.3+sin(iTime*2.)*0.1);\n    float cig = circle(uv, 0.3+cos(iTime*2.)*0.1);\n    \n    color.r = ci;\n    color.b=cig;\n    \n    c = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}