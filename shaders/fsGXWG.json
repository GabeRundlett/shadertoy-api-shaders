{
    "Shader": {
        "info": {
            "date": "1635172364",
            "description": "optimized from https://www.shadertoy.com/view/MdXSzS",
            "flags": 0,
            "hasliked": 0,
            "id": "fsGXWG",
            "likes": 19,
            "name": "galaxyyy",
            "published": 3,
            "tags": [
                "galaxy",
                "universes"
            ],
            "usePreview": 0,
            "username": "rifke",
            "viewed": 1092
        },
        "renderpass": [
            {
                "code": "// optimized from https://www.shadertoy.com/view/MdXSzS\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = (fragCoord.xy/iResolution.xy)-.5;\n\tfloat len = length(uv.xy);\n\t\n    float t = .01*iTime;\n\tfloat time = t  +  (5.+sin(t))*.11 / (len+.07); // spiraling\n\tfloat si = sin(time), co = cos(time);\n\tuv *= mat2(co, si, -si, co);                    // rotation\n\n\tfloat c=0., v1=0., v2=0., v3;  vec3 p;\n\t\n\tfor (int i = 0; i < 100; i++) {\n\t\tp = .035*float(i) *  vec3(uv, 1.);\n\t\tp += vec3(.22,  .3,  -1.5 -sin(t*1.3)*.1);\n\t\t\n\t\tfor (int i = 0; i < 8; i++)                // IFS\n\t\t\tp = abs(p) / dot(p,p) - 0.659;\n\n\t\tfloat p2 = dot(p,p)*.0015;\n\t\tv1 += p2 * ( 1.8 + sin(len*13.0  +.5 -t*2.) );\n\t\tv2 += p2 * ( 1.5 + sin(len*13.5 +2.2 -t*3.) );\n\t}\n\t\n\tc = length(p.xy) * .175;\n\tv1 *= smoothstep(.7 , .0, len);\n\tv2 *= smoothstep(.6 , .0, len);\n\tv3  = smoothstep(.15, .0, len);\n\n\tvec3 col = vec3(c,  (v1+c)*.25,  v2);\n\tcol = col  +  v3*.9;                      // useless: clamp(col, 0.,1.)\n\tfragColor=vec4(col, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}