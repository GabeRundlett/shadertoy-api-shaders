{
    "Shader": {
        "info": {
            "date": "1523001712",
            "description": "Originally written for a phone background so there are extra variables",
            "flags": 0,
            "hasliked": 0,
            "id": "lsVcRt",
            "likes": 0,
            "name": "Chromatic Cube",
            "published": 3,
            "tags": [
                "cube"
            ],
            "usePreview": 0,
            "username": "JuliaPoo",
            "viewed": 571
        },
        "renderpass": [
            {
                "code": " #ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n\nuniform vec2 resolution;\n\nfloat ballDistP(vec3 objpos, vec3 rd, vec3 ro){\nreturn length(cross(objpos - ro, rd))/length(rd);\n}\n\nfloat cubepoints(float radius, float blur, vec3 rd, vec3 ro, vec3 pos){\nfloat d = 0.;\nd = smoothstep(radius,radius-blur,ballDistP(vec3(pos), rd, ro));\n  d += smoothstep(radius,radius-blur,ballDistP(vec3(1,0,0)+vec3(pos), rd, ro));\n  d += smoothstep(radius,radius-blur,ballDistP(vec3(0,1,0)+vec3(pos), rd, ro));\n  d += smoothstep(radius,radius-blur,ballDistP(vec3(0,0,1)+vec3(pos), rd, ro));\n  d += smoothstep(radius,radius-blur,ballDistP(vec3(1,1,0)+vec3(pos), rd, ro));\n  d += smoothstep(radius,radius-blur,ballDistP(vec3(1,0,1)+vec3(pos), rd, ro));\n  d += smoothstep(radius,radius-blur,ballDistP(vec3(0,1,1)+vec3(pos), rd, ro));\n  d += smoothstep(radius,radius-blur,ballDistP(vec3(1,1,1)+vec3(pos), rd, ro));\n  return d;\n}\n\nvoid mainImage( out vec4 FragColor, in vec2 FragCoord ){\n    vec2 touch = iMouse.xy;\n    float time = iTime;\nvec2 uv = FragCoord.xy / iResolution.xy;\n  uv += -.5;\n  uv.y *= iResolution.y/iResolution.x;\n  float t= time*.4;\n  vec2 T = 6.*touch/iResolution.y;\n\n  //Camera setup\n  float R = 1.;\n  float zoom = 0.3;\n  vec3 ro = vec3(R*sin(t+T.x)*cos(1.7*t + T.y),R*cos(t+T.x)*cos(2.1*t+T.y),R*cos(t+T.x));\n  vec3 lookat = vec3(0,.3,0);\n  vec3 fw = normalize(lookat - ro);\n  vec3 r = cross(vec3(0,1.,0), fw);\n  vec3 up = cross(fw,r);\n  vec3 scrC = ro + zoom*fw;\n  vec3 scrP = scrC + uv.x*r + uv.y*up;\n  vec3 rd = scrP - ro;\n\n  float radius = .1;\n  float blur = .03;\n\n  float d = cubepoints(radius, blur, rd, ro, vec3(0,.1,0));\n  float d1= cubepoints(radius, blur, rd, ro, vec3(0,.1,blur));\n  float d2= cubepoints(radius, blur, rd, ro, vec3(0,blur+.1,0));\n\nFragColor = vec4(d,d1,d2,1.) + .95*vec4(.7,.8,.7,1.)+.3*vec4(uv.x*sin(t+T.x),uv.y*cos(2.*t+T.y),1,.1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}