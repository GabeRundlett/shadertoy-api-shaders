{
    "Shader": {
        "info": {
            "date": "1591512213",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "WlXyRN",
            "likes": 12,
            "name": "hollow cube 3",
            "published": 3,
            "tags": [
                "raymarching",
                "sdf",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 312
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/WtXyRN\n\n#define B(a) max(a.x,max(a.y,a.z))                // box\n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float T = iTime, t=1.,c=t,m=1e9;\n    mat2  R = mat2( cos(.3*T +vec4(0,33,11,0)) ); // rotation\n    vec3  q = iResolution, a,\n          D = vec3(.3*(U+U-q.xy)/q.y, -1),        // ray direction\n          p = 30./q;                              // marching point along ray \n    O-=O;\n    for ( O++; O.x > 0. && t > .01 ; O-=.015 )\n        q = p.zxy,\n        q.xy *= R,\n        a = abs(q), t = abs(B(a)-6.)-.2,          // hollow cube\n        t = max(t,  -(min(a.x,min(a.y,a.z))-3.) ),// carve\n        t = min(t, c = length(q) - 5.),           // central sphere\n        m = min(m,c),                             // closed distance to sphere\n        p += .7*t*D;                              // step forward = dist to obj\n    c==t ? O *= vec4(.5,0,0,1)                    // color inner sphere\n         : O += (.5+.5*sin(T))* exp(-.2*m)*vec4(.5,0,0,1); // glow\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}