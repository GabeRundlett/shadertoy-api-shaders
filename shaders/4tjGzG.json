{
    "Shader": {
        "info": {
            "date": "1429999536",
            "description": "Click and drag mouse to move boundry. A simple demonstration of a subject discussed on a recent episode of MinutePhysics.\nhttps://www.youtube.com/watch?v=LKnqECcg6Gw",
            "flags": 0,
            "hasliked": 0,
            "id": "4tjGzG",
            "likes": 3,
            "name": "Mix vs Powered Mix Side-By-Side",
            "published": 3,
            "tags": [
                "math",
                "demo",
                "physics",
                "minutephysics"
            ],
            "usePreview": 0,
            "username": "Glyph",
            "viewed": 1765
        },
        "renderpass": [
            {
                "code": "#define SwapSpeed 3.0 // Number of seconds between color changes\n#define pi 3.14159265\n\nfloat swap = 2.0*pi/(SwapSpeed*3.0);\nfloat k = 1.0/2.0;\nfloat offset = SwapSpeed/2.0;\nvec3 purp = vec3(.8,0.08,.8);\nvec3 lred = vec3(.85,.0, .15);\nvec3 lgreen =vec3(0.161,1.0,0.031);\nvec3 yellow =vec3(.9,.90,0.05);\nvec3 pink = vec3(0.937,0.2,0.788);\nvec3 lblue = vec3(0.071,0.376,0.894);\n\nvec3 powmix(vec3 c, vec3 c2, vec3 a){\nreturn(sqrt(mix(pow(c,vec3(2.0)),pow(c2,vec3(2.0)), a)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ar = iResolution.y/iResolution.x;\n\tvec2 uv = -((fragCoord.xy*2.0/iResolution.xy) - 1.0);\n\tvec2 t = iMouse.xy*2.0/iResolution.xy - 1.0;\n\tvec2 sqt = vec2(t.x, t.y *ar);\n\tvec2 squv = vec2(uv.x,uv.y*ar);\n\tvec2 ct = squv + sqt;\n    \n    vec3 c1 = lred*step(k,cos((iTime-offset)*swap)) + lred*step(k,cos((iTime-offset-SwapSpeed)*swap)) + vec3(0.0,0.0,.85)*step(k,cos((iTime-offset-SwapSpeed*2.0)*swap));\n    vec3 c2 = lgreen*step(k,cos((iTime-offset)*swap)) + lblue*step(k,cos((iTime-offset-SwapSpeed)*swap)) + lgreen*step(k,cos((iTime-offset-SwapSpeed*2.0)*swap));\n    \n    if(iMouse.x <= 1.0){\n        ct.x += 1.0;\n    }\n        \n\tfragColor = vec4((powmix(c1,c2,vec3(abs(squv.y*2.5)))*step(0.0,(ct.x))\n\t+ mix(c1,c2,vec3(abs(squv.y*2.5)))*step(ct.x,0.0))*step(0.002,abs(ct.x)), 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}