{
    "Shader": {
        "info": {
            "date": "1440423521",
            "description": "use the mouse for move the warp",
            "flags": 0,
            "hasliked": 0,
            "id": "4tXSWs",
            "likes": 24,
            "name": "Warp Experiment 4",
            "published": 3,
            "tags": [
                "experiment",
                "warp",
                "5"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 1958
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2015\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// uv, offset, force, range\nvec2 warp(vec2 uv, vec2 m, float f, float z) \n{\n\tvec2 mo = 5.*(2.*m-iResolution.xy)/min(iResolution.x,iResolution.y), mouv = mo-uv;;\n\treturn uv - f*exp(-dot( mouv, mouv)/abs(z)) * mouv;\n}\n\nvoid mainImage( out vec4 f, in vec2 g )\n{\n\t// base uv\n\tvec2 uv = 5.*(2.*g-iResolution.xy)/min(iResolution.x,iResolution.y);\n\t\n    // mouse pos (init : screen center)\n    vec2 m = iResolution.xy/2.;\n    if (iMouse.z>0.) m = iMouse.xy;\n    \n\t// main warp\n    float ft = sin(iTime*.2)*5.;\n    uv = warp(uv, m, ft, 16.);\n\n\t// repeat\n\tvec2 rp = vec2(1);\n\tuv = mod(uv, rp) -rp/2.;\n\t\n\t// Color\n    vec3 c = vec3(0.8,0.2,0.2);\n    \n    // vertical lines\n    float vlines = smoothstep(.16, .25, dot(uv.x, uv.x)); // meta axis x\n    \n    // horizontal line\n    float hlines = smoothstep(.16, .25, dot(uv.y, uv.y)); // meta axis y\n\t\n    c *= vlines + hlines;\n    \n\tf = c.xyzx;\n}",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}