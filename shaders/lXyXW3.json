{
    "Shader": {
        "info": {
            "date": "1720555006",
            "description": "generating a sampling according to a density map.\nref: [url]https://en.wikipedia.org/wiki/Rejection_sampling[/url]",
            "flags": 32,
            "hasliked": 0,
            "id": "lXyXW3",
            "likes": 10,
            "name": "rejection sampling",
            "published": 3,
            "tags": [
                "rng",
                "rejectionsampling"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 212
        },
        "renderpass": [
            {
                "code": "// display sampling over texture\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 U = u/R;       \n    O = mix( fract(iTime/2.)<.5? T0(U) : vec4(1), // background\n             vec4(1,0,0,0), \n             T1(U).x ) ;                          // sampling\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// choose texture\n\nvoid mainImage( out vec4 O, vec2 u ) { O = T0(u/R).rrrr; }\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define H(p)  fract(sin( (p) * vec2(12.9898, 78.233 )) * 3758.5453)\n\nfloat M = 1.;     // the larger the better quality ?\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 U = u/R;\n                       \n    O = .99*T1(U);                      // previous state, with fading\n    \n    for(float i; i<500.; i++ ) {        // try random samples Y. Here, with g() = Uniform\n       vec2 Y = H(i+iTime+.5);\n       if( H(i+iTime).x < T0(Y).r / M ) // rejection test: uniform < f(y)/Mg(y) â†’ keep\n           O.x = mix(O.x, 1., .5*smoothstep( 1.5/R.y,0.,length((U-Y)*R/R.y)-.005) );\n    }\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R      iResolution.xy\n#define T0(U)  texture(iChannel0, U )\n#define T1(U)  texture(iChannel1, U )",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}