{
    "Shader": {
        "info": {
            "date": "1603488585",
            "description": "Mouse control dig position.\n[url]https://inktober.com/[/url]\n#inktober2020 themes: [img]https://i.imgur.com/b3gMiu0.png[/img]\n\nNot satisfactory look but too long spent on it !",
            "flags": 32,
            "hasliked": 0,
            "id": "wdVyR3",
            "likes": 6,
            "name": "Fab24 #inktober2020 \"dig\"",
            "published": 3,
            "tags": [
                "2d",
                "simulation",
                "particles",
                "short",
                "heap",
                "inktober2020"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 432
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 u )\n{\n    vec2 U = ( u+u - R ) / R.y;\n    \n    O = T(u);                                                    // load drawing\n    \n    for(int i=1; i<N; i++)                                       // draw moving particles\n        O.rg = max( O.rg, D( T(vec2(i,0)).xy , 1.5 ) * vec2(.8,.4) );\n    \n    O = mix( O, vec4(.5), D( T(0).xy + vec2(0,.1*T(0).z), 4.) ); // draw digger\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define H(s) fract(sin(vec2(s,u)*mat2(127.1,311.7, 269.5,183.3)) *4e5 )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 U = ( u+u - R ) / R.y, P, Z=R-R;\n    if (iFrame<1) {                                           // --- init\n        O-=O;\n        if (U.y < -.5) O = vec4(1.+U.y,-.5-U.y,0,1);          // draw ground\n        if (u.y == .5) O = vec4( -R , Z );                    // particles\n        if (u == .5+Z) O = vec4(0,-.45,.5,0);                 // digger\n        return;\n    }    \n    O = T(u);                                                 // restore state\n    \n    if ( u == .5+Z )                                          // --- digger\n            iMouse.z > 0.\n              ? O.xy = ( 2.*iMouse.xy - R ) / R.y, 0.\n              : O.y = max(-.96, O.y - .01/60.),               // digger depth\n            O.z = .5+.5*atan(9.*sin(6.*iTime))/1.46;          // digger hit rythm. see https://www.shadertoy.com/view/Wsyczz\n    else if ( u.y == .5 && int(u.x) < N )                     // --- particle simulation\n    {\n        if ( ( O.zw==Z || O.y < -1. )                         // particle available\n            && H(iTime).x > T(0).z )                          // creation rythm\n            O.xy = T(0).xy,                                   // start position\n            O.zw = H(-iTime), O.z-=.5, O.w*=1.5;              // init velocity\n        P = O.xy;\n        O.w  -= .05,                                          // Newton: v += a.dt , a = -g\n        O.xy += .05*O.zw;                                     //         p += v.dt\n        if (T( (R+R.y*O.xy)*.5 +.5).a > 0.)                   // collision: backtrack + ends particle\n            O = vec4( P, 0, O.z != 0. ? -.1 : 0. );           // 1st: fall vertically\n    }                                                         // 2nd: ends & recycle\n    else {                                                    // --- draw\n        for(int i=0; i<N; i++) {\n            vec4 p = T(vec2(i,0));\n            if (p.zw==Z) O.ra = max(O.ra, D(p.xy, 1.5 )*.6);  // ended particle: drop dirt\n        }\n        P = ( U - T(0).xy +vec2(0,.05)) * mat2(-1,1,1,1);     // carve digger place\n        O =  clamp( O - max(0.,min(P.x,P.y)), 0.,1. );        \n    }\n }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "int N = 100;    // number of particles\n#define R       iResolution.xy\n#define T(U)    texelFetch( iChannel0, ivec2(U), 0 )\n#define D(p,r)  clamp( r - R.y/4.*length(p-U) , 0., 1. ) // draw disk",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}