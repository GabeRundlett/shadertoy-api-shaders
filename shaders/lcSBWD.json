{
    "Shader": {
        "info": {
            "date": "1724918973",
            "description": "origianalsl https://glslsandbox.com/e#65080.0 https://www.shadertoy.com/view/4tyfWy",
            "flags": 0,
            "hasliked": 0,
            "id": "lcSBWD",
            "likes": 3,
            "name": "fractalic world 2",
            "published": 3,
            "tags": [
                "fractal",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 168
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)cos((h)*6.3+vec3(0,23,21))*.5+.5\n#define PI 3.14159265\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nfloat cube(vec3 p,vec3 s){\n  return length(max(abs(p)-s,0.));\n}\n\n\nvec2 fmod(vec2 p,float r){\n  float a=atan(p.x,p.y)+PI/r;\n  float n=(20.*PI)/r;\n  a=floor(a/n)*n;\n  return rot(a)*p;\n}\n\nfloat sdHexagon(vec2 p, float r)\n{\n    vec3 k = vec3(-0.866025404,0.5,0.577350269);\n    p = abs(p);\n   \n\n    p -= 1.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), k.x*r);\n    return length(p)*sign(p.y);\n}\n\n\n\nfloat m1(vec3 p){\n p.xz*=rot(iTime);\nfor(int i=0;i<5;i++){\n  p=abs(p)-0.5;\n  if(p.x<p.y)p.xy=p.yx;\n  if(p.x<p.z)p.xz=p.zx;\n  if(p.y<p.z)p.yz=p.zy;\n\n  p.xy=fmod(p.xy,24.0);\n p.x-=abs(p.x)-0.5;\n p.y=abs(p.y)-0.15;\n\n float t=floor(iTime*0.25)+pow(fract(iTime*0.25),.5);\n  p.xy*=rot(t+0.123);\n  p.yz*=rot(iTime+0.456);\n   p.xz*=rot(iTime+.789)*1.025;\n\n p.z-abs(p.z)-0.45;\n\n\n\n\n}\n\np.yz=fmod(p.yz,12.0);\np.xz=fmod(p.xz,6.0);\n\n  float m=cube(p,vec3(.5,3.,2.));\n\n\n  return m;\n}\n\nfloat map(vec3 p){\n\n\n\n   float t=pow(fract(iTime*2.0),.75);\n\n\n  p.xy=fmod(p.xy,12.0);\nfloat k=10.5;\np=mod(p,k)-k*0.5;\n\n  float m=m1(p);\n\n\n  return m;\n}\n\nvec3 gn(vec3 p){\n  vec2 t=vec2(0.001,0.0);\n  return normalize(\n      vec3(\n        map(p+t.xyy)-map(p-t.xyy),\n        map(p+t.yxy)-map(p-t.yxy),\n        map(p+t.yyx)-map(p-t.yyx)\n        )\n    );\n}\n\nfloat happy_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\n\n#define R2(a)a=vec2(a.x+a.y,a.x-a.y)*.7\n#define G2(a,n)R2(a);a=abs(a)-n;R2(a)\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n     vec2 st=(gl_FragCoord.xy*2.0-iResolution.xy)/min(iResolution.x,iResolution.y);\n\n      vec3 ro=vec3(0,0,10.0);\n      vec3 rd=vec3(st,-1.0);\n\n      vec3 col=vec3(0,0,0);\n      float d,t,acc=0.0;\n\n      for(int i=0;i<64;i++){\n        d=map(ro+rd*t);\n        if(d<0.001||t>1000.0)break;\n        t+=d;\n        acc+=exp(-3.0*d);\n      }\n\n    vec3 refo=ro+rd*t;\n     vec3 n=gn(refo);\n    rd=reflect(refo,n);\n    ro=refo;\n    t=0.1;\n    float acc2=0.;\n\n    for(int i=0;i<32;i++){\n      d=map(ro+rd*t);\n      if(d<0.001||t>1000.0){\n        t+=d;\n        acc2=exp(-3.0*d);\n      }\n\n    }\nfloat g2=0.,e2; O-=O;\n\n\tfor(float i=0.;i<45.;++i){\n   \t\tvec3 p=g2*vec3((C*2.-iResolution.xy)/iResolution.y,1);\n          p=R(p,vec3(0.51,.5,1.2),iTime*1.1);\n         p.yz*=rot(95.);\n  p.y+=iTime;\n \n        p=fract(p)-.5;\n        G2(p.xz,.1);\n        G2(p.zy,0.1);\n        G2(p.yz,.15);\n        g2+=e2=.6*length(p.xz)-.01;\n        e2<.01?O+=abs(cos(p.x*99.))/i:O;\n    }\n\n    col=vec3(1.,0.5,1.)*acc*0.1;\n    col+=vec3(0.,.5,1.)*acc2*0.075;\n    vec3 p,r=iResolution,\n    d2=normalize(vec3((C-.5*r.xy)/r.y,1));  \n    \n    float i=0.,g=0.,e,s;\n    for(;++i<99.;){\n        p=d2*g;\n        \n\n    p.z-=iTime*0.2;\n        p=asin(sin(p*5.));\n        float sdf=sdHexagon(p.xy,10.);\n        p.xy=vec2(sdf);\n          \n        s=3.;\n        for(int i=0;i++<6;){\n\t\t\tp=vec3(3.2,6.8,5.2)-abs(p);    \n               G2(p.xz,.3);\n          \tp=p.x<p.y?p.zxy:p.zyx+0.1*cos(iTime);\n            s*=e=17.8/min(dot(p,p),11.8);\n            p=abs(p)*e;\n        }\n        g+=e=abs(p.y)/s+.001;\n        O.xyz+=(H(log(s)*.01)+.5)*exp(sin(i))/e*3e-5;\n    }\n    O*=O;\n     vec2 uv = ( C - .5*iResolution.xy ) / iResolution.y;\n  uv *= 2.0 * ( cos(iTime * 2.0) -2.5); // scale\n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;  // anim between 0.9 - 1.1 \n   O*= vec4(happy_star(uv, anim) * vec3(0.05,0.2,1.65)*1., 1.0);\n }",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}