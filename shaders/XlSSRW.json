{
    "Shader": {
        "info": {
            "date": "1441787086",
            "description": "Pass RGB color to HSV then posterize the Saturation and Value components before repass modified HSV to RGB colors.\nPosterize directly RGB(right image) values gives a bad result with color banding particulary with low colors values",
            "flags": 0,
            "hasliked": 0,
            "id": "XlSSRW",
            "likes": 13,
            "name": "Image Cel Shade",
            "published": 3,
            "tags": [
                "rgb",
                "hsv",
                "toon",
                "posterizecolor"
            ],
            "usePreview": 0,
            "username": "simonbodeus",
            "viewed": 3298
        },
        "renderpass": [
            {
                "code": "float nColors =4.0;\n\n\nvec3 lerp(vec3 colorone, vec3 colortwo, float value)\n{\n\treturn (colorone + value*(colortwo-colorone));\n} \n\nvec3 RGBToHSV( vec3 RGB ){\n    \n    vec4 k = vec4(0.0, -1.0/3.0, 2.0/3.0, -1.0);\n    vec4 p = RGB.g < RGB.b ? vec4(RGB.b, RGB.g, k.w, k.z) : vec4(RGB.gb, k.xy);\n    vec4 q = RGB.r < p.x   ? vec4(p.x, p.y, p.w, RGB.r) : vec4(RGB.r, p.yzx);\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 HSVToRGB( vec3 HSV ){\n    \n    vec4 k = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(HSV.xxx + k.xyz) * 6.0 - k.www);\n    return HSV.z * lerp(k.xxx, clamp(p - k.xxx, 0.0, 1.0), HSV.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    float vx_offset = 0.5;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n   \tvec3 tc = texture(iChannel0, uv).rgb;\n    vec2 coord = vec2(0.,0.);\n    \n    float cutColor = 1./nColors;\n    \n    if(uv.x < (vx_offset-0.001))\n    {\n         \n   \t \ttc = RGBToHSV(tc);\n    \n    \tvec2 target_c = cutColor*floor(tc.gb/cutColor);\n    \n    \ttc = HSVToRGB(vec3(tc.r,target_c));\n    }\n    else if (uv.x>=(vx_offset+0.01))\n    {\n        \n        tc  = cutColor*floor(tc/cutColor);\n    }\n    \n    \n    \n  \tif(tc.g > (tc.r + tc.b)*0.7)\n\t{\n\t\t//tc.rgb = vec3(0.2,0.2,0.2);\n\t}\n    \n    \n    fragColor = vec4(tc, 1.0);\n   \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}