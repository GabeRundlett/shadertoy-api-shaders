{
    "Shader": {
        "info": {
            "date": "1713798835",
            "description": "Simple RNG for shaders. Use for stuff that needs it like perlin noise.",
            "flags": 0,
            "hasliked": 0,
            "id": "XftSDr",
            "likes": 5,
            "name": "Scalable RNG Static",
            "published": 3,
            "tags": [
                "random",
                "static",
                "rng",
                "resolution"
            ],
            "usePreview": 0,
            "username": "Falafel",
            "viewed": 130
        },
        "renderpass": [
            {
                "code": "vec2 randomVector(vec2 uv, float snapZoom) {\n\n    // Unlike most RGNs, this one is very, very simple.\n    // It seems to work very well though for applications like shaders.\n    // This one outputs a random normalized vector, as it's useful for perlin noise,\n    // but you can easily just return r.\n    \n    // This creates a unique int per pixel on the screen (barring overflow - but that doesn't matter much)\n    \n    int u = int(uv.x * snapZoom) + (int(uv.y * snapZoom) + 5) * int(snapZoom);\n    \n    // Simple function times a large prime, mod 2Pi so we get a guaranteed random direction vector.\n    \n    float r = mod(float(u * (u + 1) * 42043), 6.283185307);\n    \n    return vec2(cos(r), sin(r));\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x;\n\n    // Write the random vector output to the r and g channels. Looks cool.\n    //fragColor = vec4(randomVector(uv, pow(iTime, 2.0)), 0.0, 0.0);\n    \n    //Write the random vector x output to the rgb channels.\n    fragColor = vec4((randomVector(uv, 2.0 + pow(iTime, 3.0)).x + 1.0) / 2.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}