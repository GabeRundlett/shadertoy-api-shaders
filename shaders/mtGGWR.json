{
    "Shader": {
        "info": {
            "date": "1683796619",
            "description": "Recreation of the OMORI bad ending scene.",
            "flags": 0,
            "hasliked": 0,
            "id": "mtGGWR",
            "likes": 1,
            "name": "oyasumi",
            "published": 3,
            "tags": [
                "noisesky"
            ],
            "usePreview": 0,
            "username": "paperluigis",
            "viewed": 188
        },
        "renderpass": [
            {
                "code": "const mat2 m = mat2(1.6,1.2,-1.2,1.6);\nvec2 hash( vec2 p ) {\n\tp = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\nfloat noise( in vec2 p ) {\n    const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\tvec2 i = floor(p + (p.x+p.y)*K1);\n    vec2 a = p - i + (i.x+i.y)*K2;\n    vec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0); //vec2 of = 0.5 + 0.5*vec2(sign(a.x-a.y), sign(a.y-a.x));\n    vec2 b = a - o + K2;\n\tvec2 c = a - 1.0 + 2.0*K2;\n    vec3 h = max(0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n\tvec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n    return dot(n, vec3(70.0));\n}\nfloat fbm(vec2 n) {\n\tfloat total = 0.0, amplitude = 0.1;\n\tfor (int i = 0; i < 7; i++) {\n\t\ttotal += noise(n) * amplitude;\n\t\tn = m * n;\n\t\tamplitude *= 0.4;\n\t}\n\treturn total;\n}\n\nconst vec3 sky_color = vec3(0.03, 0.68, 0.92);\n\n\nvec3 close;\nvec3 your(vec2 eyes) {\n    vec2 offset_bg = vec2(0, -iTime * 0.08);\n    float youll =\n        ((fbm((eyes / 1200.) + offset_bg)*12.) * (fbm((eyes / 850.) + offset_bg*2.)*12.)) +\n        ((fbm((eyes / 690.) + offset_bg)*12.) * (fbm((eyes / 310.) + offset_bg*2.)*12.));\n    return max(sky_color, vec3(youll) * .35 + .65);\n}\nvec3 be(vec2 here) {\n    vec2 offset_hs = vec2(0, -iTime * 0.08) * 5.2;\n    vec3 soon = vec3(0.1, 0.25, 0.5);\n    vec2 ichi = here + offset_hs * iResolution.xy;\n    if(here.x < iResolution.x * 0.02) soon = soon * vec3(4.8, 2.4, 2.7);\n    if(mod(ichi.x, 48.) > 42. || mod(ichi.y, 48.) > 42.) soon = soon * 1.2;\n    return soon * (here.y / iResolution.y + 0.3);\n}\n\nvoid mainImage( out vec4 col, in vec2 pos) {\n    if(pos.x < iResolution.x * .6) {\n        col = vec4(your(pos), 1);\n    } else {\n        col = vec4(be(pos - vec2(iResolution.x * .6, 0)), 1);\n    }\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}