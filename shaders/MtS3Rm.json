{
    "Shader": {
        "info": {
            "date": "1427645460",
            "description": "trying to do god rays from a 2d map",
            "flags": 0,
            "hasliked": 0,
            "id": "MtS3Rm",
            "likes": 3,
            "name": "2d god rays attempt",
            "published": 3,
            "tags": [
                "2d",
                "rays",
                "god"
            ],
            "usePreview": 0,
            "username": "public_int_i",
            "viewed": 664
        },
        "renderpass": [
            {
                "code": "\n#define clouds (texture(iChannel0,cuv*.1).x+texture(iChannel1,cuv*.2).x*.4 - .8)\n\nconst vec2 sunPos = vec2(.5);\nconst vec3 sunColor = vec3(1.,.95,.95)*.8;\n\nconst float sunSize = .03;\nconst float godrayReach = .3;\nconst int godrayIter = 32;\nconst float godrayIntensity = .04;\nconst float godrayStep = (sunSize/2.)/float(godrayIter);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 timeMove = vec2(iTime*.04,0.);\n    vec2 cuv = uv+timeMove;\n    \n    vec2 sunDir = sunPos-uv;\n    float sunLen = length(sunDir);\n    vec3 c;\n    if (sunLen < sunSize) {\n        c = sunColor;\n    } else {\n        c = vec3(.3,.3,.8);\n    }\n    \n    float cb;\n    float cl = clouds;\n   \tc = mix(c,vec3(.8,.8,cl),cl);\n    cl = 0.;\n    if (sunLen < godrayReach) {\n        \n        sunDir = normalize(sunDir);\n        uv += sunDir*max(0.,(sunLen-sunSize));\n        sunLen = 1.-sunLen/godrayReach;\n        int maxIter = int(sunLen*float(godrayIter));\n        \n        for (int i = 0; i < godrayIter; i++) {\n            \n            cuv = uv+timeMove;\n           \tcb = clouds;\n            cl += max(0.,1.-(floor(cb+.4)*.6+cb*.4))*sunLen;\n                \n            if (i > maxIter) {\n                break;\n            }\n            \n            uv += sunDir*godrayStep;\n        }\n        \n        cl *= godrayIntensity;\n        c += sunColor*cl;\n    }\n    \n    fragColor = vec4(c,1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}