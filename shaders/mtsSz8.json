{
    "Shader": {
        "info": {
            "date": "1674313285",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "mtsSz8",
            "likes": 13,
            "name": "balls in maze 2",
            "published": 3,
            "tags": [
                "ball",
                "maze",
                "short",
                "marbles"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 221
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/mllXR8\n\n#define H(p) fract ( 1e4*sin( dot( p , vec2(71,-97) )) )           // rand\n#define B(s) length( F - .707*vec2( .5*s , fract(d*iTime) -.5) )   // ball SDF\n#define D(v) clamp(  1. - (v) * R.y/10. , 0.,1.)                   // AA draw\n\nvoid C( vec2 U, vec2 D, inout float l, inout float x ) {\n    vec2 I = floor(U)      + D,              // cell Id\n         F = fract(U) - .5 - D;              // cell coordinates\n         \n    float s = sign(H(I)-.5),                 // wall direction ( one of the 2 cell diagonals )\n          d = mod(I.x+I.y,2.) > 0. ? s : -s; // balls direction\n    F = ( F + s*vec2(-F.y,F) ) *.707;        // wall frame\n    x = min( x, abs(F.x) );                  // min distance to wall\n    \n    d *= sign( F.x );\n    l = min(l, min( B(s), B(-s) ) -.1 );     // min distance to balls on each wall side\n}\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = 10. * u / R.y + iTime;\n         \n    float x=9., l=9.;\n    C( U, vec2(0)    , l,x );                 // distance to balls and walls\n    C( U, vec2( 1,0) , l,x );                 // check neighbors when overlapping\n    C( U, vec2( 0,1) , l,x );\n    C( U, vec2(-1,0) , l,x );\n    C( U, vec2(0,-1) , l,x );\n    \n    O = mix( vec4( D(abs(x-.35)-.15) ) *.4,   // draw walls\n             vec4(1,0,0,1),  D(l) );          // draw balls\n   \n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}