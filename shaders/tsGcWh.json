{
    "Shader": {
        "info": {
            "date": "1602695329",
            "description": "Tintin Moon rocket !\nmouse control\n[url]https://inktober.com/[/url]\n#inktober2020 themes: [img]https://i.imgur.com/b3gMiu0.png[/img]\nref image: [url]https://www.google.com/search?q=fus%C3%A9e%20tintin&tbm=isch[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "tsGcWh",
            "likes": 10,
            "name": "Fab16 #inktober2020 \"rocket\"",
            "published": 3,
            "tags": [
                "short",
                "golf",
                "reproduction",
                "inktober2020"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 361
        },
        "renderpass": [
            {
                "code": "// profiles study: see https://www.desmos.com/calculator/d46meujota\n\n#define L           length\n#define rot(a)      mat2( cos(a+vec4(0,11,33,0)) )            // rotation                  \n#define P(x,r,h)    t = min(t, max( L(vec2(x,q.z)) - r, h) ), // cylinderical profile\n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float t=9., a=1.05,A, y, s = 20., h,z;\n    vec3  R = iResolution,\n          M = iMouse.z > 0. ? iMouse.xyz/R : .2 + .3*cos(iTime+vec3(0,11,0)),\n          D = normalize(vec3( U+U, -5.*R.y ) - R ),           // ray direction\n          p = 50./R, q;                                       // marching point along ray \n    \n    for ( O-=O ; O.x < 1. && t > .01 ; O+=.01 )\n        q = p, t=9.,\n        q.yz *= rot(-.4 +3.*M.y),                             // rotations\n        q.xz *= rot(-.7 -6.*M.x),\n        q.xy *= rot(1.),\n        q.y += s/1.8,\n        h = q.y/s, y = s*.06*sin(3.14*h*h*h),                 // rocket body (profile 1)\n        P( q.x , y, L(h-.7)-.3 )\n        A = mod( atan(q.z,q.x) +a, a+a ) -a,                  // 3-fold angular symmetry\n        q.xz = L(q.xz) * cos( A + vec2(0,11) ),\n        y = (1.-(q.x+.3)*(q.x+.3))/6.,                        // rocket legs (profile 2)\n        P( (q.y-y-9.3)*.2, .27, q.x-4. ) \n        q.x-=4., z=h*5.-1., y = s*.08*sqrt(max(0.,z))*(1.-z), // rocket feet (profile 3)\n        P( q.x,  y, L(z-.5)-.5 )\n        p += t*D;                                             // step forward = dist to obj          \n\n    O = (    L(h-.7) < .16                                    // coloring\n          && mod( ceil(.95*A)+ceil(h*15.) , 2. ) < 1.         // checker\n          ? vec4(1) : vec4(1,0,0,1)                           // red-white \n        ) *exp(-5.*O)*1.5;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}