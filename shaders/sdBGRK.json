{
    "Shader": {
        "info": {
            "date": "1617636541",
            "description": "a very bad model of galactic physics",
            "flags": 0,
            "hasliked": 0,
            "id": "sdBGRK",
            "likes": 21,
            "name": "Unspinning",
            "published": 3,
            "tags": [
                "2d",
                "galaxy"
            ],
            "usePreview": 0,
            "username": "DukeOfStraylight",
            "viewed": 596
        },
        "renderpass": [
            {
                "code": "mat2 rot(float a) {\n    float c = cos(a), s = sin(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n\n    uv *= 50.;\n//    uv *= rot(iTime);\n\n    vec2 id = floor(uv);\n    vec2 center = id + .5;\n    vec2 st = fract(uv);\n\n    float d = 1.;\n    const float NNEI = 1.;\n    for (float x = -NNEI; x <= NNEI; x++) {\n        for (float y = -NNEI; y <= NNEI; y++) {\n            vec2 ndiff = vec2(x, y);\n            vec2 c = center + ndiff;\n            float r = length(c);\n            float a = atan(c.y, c.x);\n            r += (sin(iTime * 5. - r*0.55 - a*2.) * min(r/5., 1.));\n            vec2 lc = vec2(r*cos(a), r*sin(a));\n            d = min(d, length(uv - lc) + 0.01 * r);\n        }\n    }\n    float w = fwidth(uv.y);\n    vec3 col = vec3(smoothstep(0.31+w, 0.31-w, d));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n// grid\n/*\n    if (st.x < 0.05 || st.y < 0.05) {\n        fragColor = vec4(vec3(0, 1, 0), 1.0);\n    }\n    */\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}