{
    "Shader": {
        "info": {
            "date": "1533599924",
            "description": "Simple T-square fractal",
            "flags": 0,
            "hasliked": 0,
            "id": "Xl3czs",
            "likes": 3,
            "name": "T-square ",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "kristoflovas",
            "viewed": 589
        },
        "renderpass": [
            {
                "code": "//saturate from hlsl\nfloat saturate(float a)\n{\nreturn clamp(a,0.0,1.0);\n}\n\n\nvoid mainImage( out vec4 ts, in vec2 fragCoord )\n{\nvec2 uv = (fragCoord/iResolution.xy)*vec2(1.777,1.0)- vec2(0.3885,0.0);\nfloat TSF = 0.0;\nfloat Levels =7.0;\nfloat S = 2.0;\nint T = int(fract(iTime*0.2)*8.0)+1;\n\nfor(int i=0;i < T; i++)\n{\nif(i==0)\n{\nTSF = round(min(min(fract(uv).x,1.0-fract(uv).x),min(fract(uv).y,1.0-fract(uv).y))*2.0);\n}\nelse\n{\nTSF += round(min(min(fract(uv*S).x,1.0-fract(uv*S).x),min(fract(uv*S).y,1.0-fract(uv*S).y))*2.0);\nS *=2.0;\n}\n} \n\nTSF = saturate(TSF);\n  \n    // Output to screen\n    ts = vec4(TSF,TSF,TSF,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}