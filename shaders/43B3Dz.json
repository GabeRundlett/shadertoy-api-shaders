{
    "Shader": {
        "info": {
            "date": "1708346821",
            "description": "A happy little accident",
            "flags": 0,
            "hasliked": 0,
            "id": "43B3Dz",
            "likes": 1,
            "name": "BobbyTheBlobby",
            "published": 3,
            "tags": [
                "trigonometry",
                "pythogaros"
            ],
            "usePreview": 0,
            "username": "AlexAnimations",
            "viewed": 96
        },
        "renderpass": [
            {
                "code": "float pytho(vec2 invec){\n    return sqrt(invec.x*invec.x+invec.y*invec.y);\n}\n\nvec2 rotate(vec2 uv, float angle){\n    vec2 sol;\n    uv-=vec2(.5,.5);\n    angle *= (1.-pytho(uv-vec2(.5)));\n    sol.x = uv.x*cos(angle)-uv.y*sin(angle);\n    sol.y = uv.y*cos(angle)+uv.x*sin(angle);\n    sol+=vec2(.5,.5);\n    return sol;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = rotate(uv,mod(iTime,9.)/1.);\n    // Time varying pixel color\n    vec3 col = vec3(1.);\n    if(pytho(uv-vec2(mod(iTime,1.5),.5))<.2){\n        col = vec3(.25+sin(iTime)/4.,.25+cos(iTime)/4.,.25+tan(iTime)/4.);\n    }\n    // Output to screen\n    fragColor = vec4(col,1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}