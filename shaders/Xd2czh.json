{
    "Shader": {
        "info": {
            "date": "1491299214",
            "description": "Create a delicious equal distributed pie chart ",
            "flags": 0,
            "hasliked": 0,
            "id": "Xd2czh",
            "likes": 3,
            "name": "Equal PieChart",
            "published": 3,
            "tags": [
                "2d",
                "fragment",
                "pie",
                "piechart"
            ],
            "usePreview": 0,
            "username": "BAZ",
            "viewed": 1260
        },
        "renderpass": [
            {
                "code": "// Max 8 Colours defined, could work with more just need to define more than 8 colours!\n\n#define SEGMENTCOUNT 15\n#define PI 3.14159265359\n\n// http://stackoverflow.com/questions/15095909/from-rgb-to-hsv-in-opengl-glsl\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec4 colors[8] = vec4[](\n    vec4(1.0, 0.0, 0.0, 1.0), \n    vec4(0.0, 1.0, 0.0, 1.0),\n    vec4(0.0, 0.0, 1.0, 1.0), \n    vec4(1.0, 1.0, 0.0, 1.0), \n    vec4(0.0, 1.0, 1.0, 1.0), \n    vec4(1.0, 0.0, 1.0, 1.0), \n    vec4(1.0, 1.0, 1.0, 1.0), \n    vec4(1.0, 0.5, 0.5, 1.0)\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 nodePosition = iResolution.xy/2.0;\n    \n    vec2 fragPos = fragCoord.xy - nodePosition;\n    vec2 normalFragPos = normalize(fragCoord.xy - nodePosition);\n    \n    float angleSegment = 2.0 * PI;\n    angleSegment /= float(SEGMENTCOUNT);\n    \n    float angle = atan(normalFragPos.y, normalFragPos.x) + PI;\n    \n    int segmentId = int(angle / angleSegment);\n    \n    float hueShift = (float(segmentId) + (mod(float(segmentId),2.0) * 0.5 * float(segmentId))) / float(SEGMENTCOUNT);\n    \n    //vec4 segmentColor = colors[segmentId];\n    vec4 segmentColor = vec4(hsv2rgb(vec3(hueShift, 1.0, 1.0)),1.0);\n    \n    float circle = step(length(fragPos), 100.0);\n    fragColor = circle * segmentColor;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}