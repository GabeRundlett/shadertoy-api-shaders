{
    "Shader": {
        "info": {
            "date": "1621030878",
            "description": "https://society.ecs.soton.ac.uk",
            "flags": 0,
            "hasliked": 0,
            "id": "sdBSDV",
            "likes": 3,
            "name": "ECSS",
            "published": 3,
            "tags": [
                "2d",
                "logo"
            ],
            "usePreview": 0,
            "username": "Molive",
            "viewed": 356
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -0.5 to 0.5 vertically, -AR to AR horizontally)\n    vec2 uv = fragCoord/iResolution.y;\n    uv.x -= iResolution.x/iResolution.y/2.;\n    uv.y -= 0.5;\n    \n    // Antialias\n    float low = 1./iResolution.y/2.;;\n    vec3 o = vec3(low,-low,0.);\n    vec3 col = (logo(uv+o.xx,iTime)\n               +logo(uv+o.xy,iTime)\n               +logo(uv+o.yx,iTime)\n               +logo(uv+o.yy,iTime)\n               +logo(uv+o.yz,iTime)\n               +logo(uv+o.zy,iTime)\n               +logo(uv+o.zz,iTime)\n               +logo(uv+o.zx,iTime)\n               +logo(uv+o.xz,iTime))/9.;\n               \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// logo go spinny\nvec3 logo(vec2 u, float time) {\n    mat2 x = mat2(cos(time),sin(time),-sin(time),cos(time));\n    mat2 y = mat2(sin(time),cos(time),-cos(time),sin(time));\n    float l = length(u);\n    \n    if (l < .17) {\n        return vec3(1.);\n    } else if (l < .22) {\n        u = x*u;\n        if (abs(u.y) < 0.02) {\n            return vec3(1.);\n\n        } else {\n            return vec3(.82,.0,.1);\n        }\n    } else if (l < .25) {\n        return vec3(1.);\n    } else if (l < .4) {\n        u = y*u;\n        if (l > .32) {\n            float a = fract((atan(u.y,u.x)/(atan(-1.)*4.)+0.5)*3.);\n            if ((l > 0.37) && (a > .85-(l*2.) && a < .15+(l*2.))) {\n                return vec3(1.);\n            } else if (a > 0.275-l/2. && a < 0.725+l/2.) {\n                return vec3(1.);\n            }\n        }\n        if (abs(u.y) < 0.02) {\n            return vec3(1.);\n        } else if (u.y < 0.) {\n            return vec3(0.35,0.32,0.32);\n        } else {\n            return vec3(0.12);\n        }\n    } else if (l < .44) {\n        return vec3(1.);\n    } else if (l < .5) {\n        return vec3(0.12);\n    } \n    \n    //flashy colours\n    return vec3((sin(u.y+time*2.)+1.)/2.,(sin(u.x+time*3.)+1.)/2.,(sin(u.y+time*5.)+1.)/2.);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}