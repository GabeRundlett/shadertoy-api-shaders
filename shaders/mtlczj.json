{
    "Shader": {
        "info": {
            "date": "1690970124",
            "description": "implementation of very high performance of music visualizer event on fullscreen mode, no for loop on any set of bar count!",
            "flags": 0,
            "hasliked": 0,
            "id": "mtlczj",
            "likes": 3,
            "name": "just_sound_round_bar",
            "published": 3,
            "tags": [
                "soundbar"
            ],
            "usePreview": 0,
            "username": "beetom",
            "viewed": 197
        },
        "renderpass": [
            {
                "code": "const lowp float PI = 3.1415926535;\nlowp float hash(lowp vec3 p)  \n{\n    p  = fract( p*0.3183099+.1 );\n    p *= 17.0;\n    return fract( p.x*p.y*p.z*(p.x+p.y+p.z) );\n}\nlowp float noise( in lowp vec3 x )\n{\n    lowp vec3 i = floor(x);\n    lowp vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    \n    return mix(mix(mix( hash(i+vec3(0,0,0)), \n                        hash(i+vec3(1,0,0)),f.x),\n                mix( hash(i+vec3(0,1,0)), \n                        hash(i+vec3(1,1,0)),f.x),f.y),\n            mix(mix( hash(i+vec3(0,0,1)), \n                        hash(i+vec3(1,0,1)),f.x),\n                mix( hash(i+vec3(0,1,1)), \n                        hash(i+vec3(1,1,1)),f.x),f.y),f.z);\n}\n\n\nhighp vec2 sdArc(highp vec2 p, highp vec2 o, highp float iner, highp float outer, highp float rays)\n{\n    highp vec2 c = p - o;\n    highp float n = length(c);\n    \n    p = p + vec2(.01, 0);\n    highp float rad = mod(abs(acos((p.x * o.x + p.y * o.y) / (length(p) * length(o)))), PI);\n    rad = (o.y - p.y) < 0. ? rad : 2. * PI - rad;\n    highp float crad = 2.0 * PI / rays;\n    \n    int i = int(rad / crad);\n    float cd = max((texture(iChannel0, vec2(float(i) / rays, 0.0)).x / (3.0 - float(i) / rays)), 0.0) * 6.0 + 0.2;\n    highp float len = (outer-iner) * cd;\n    outer = iner + len;\n    \n    \n    highp float t = float(i) * crad;\n    highp float d0 = n - iner;\n    highp float d1 = outer - n;\n    highp float d2 = crad / 2.0 - abs(t - rad);\n    highp float d = min(d0, d1);\n    d = min(d, d2);\n    \n    return vec2(smoothstep(0.0, 0.01, d), float(i));\n}\n\n\nvoid mainImage( out lowp vec4 fragColor, in lowp vec2 fragCoord )\n{\n    \n    \n    lowp vec2 uv = fragCoord/iResolution.xy;\n    uv = (vec2(.5) - uv) / vec2(.5);\n    uv.x *= (iResolution.x  / iResolution.y);\n    lowp float d = 0.f;\n    lowp vec3 col = vec3(.0f);\n    if(d > 0.f)\n        col += vec3(d);\n    float amp = texture(iChannel0, vec2(0.1, 0)).x;\n    \n    float lv = texture(iChannel0, vec2(fragCoord.x / iResolution.x, 0)).x;\n    vec2 dv = sdArc(vec2(.0, .0), uv, 0.53 + amp * .1, 0.6 + amp * 0.4, 128.0);\n    d = dv.x;\n    float sed = sin(dv.y / 128.0 * 2.0 * PI + iTime * 3.0) * 0.5 + 0.5;\n    float r = sin(lv + 1.5) * 0.5 + dv.y / 300.0 + 0.5 + 0.5 * (sin(iTime * 3.0) * 0.5 + 0.5);\n    float g = cos(lv + 3.0) * 0.5 + dv.y / 300.0 + 0.5 + 0.5 * (sin(iTime * 7.0) * 0.5 + 0.5);\n    float b = sin(lv * 1.3 + dv.y / 400.0) + 1.0;\n    r = r * 0.5 + sed * 0.5;\n    b = b + sed * 0.7;\n    vec3 colorIndicator = vec3(r, g, b);\n        \n    d = dv.x;\n    if(d > 0.f)\n        col += (colorIndicator * d);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 13,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}