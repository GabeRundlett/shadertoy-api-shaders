{
    "Shader": {
        "info": {
            "date": "1724410292",
            "description": "Pathes / islands in hexagonal binary noise.\nmouse.x controls the threshold",
            "flags": 0,
            "hasliked": 0,
            "id": "MfsfW2",
            "likes": 7,
            "name": "paths in random hexagonal grid",
            "published": 3,
            "tags": [
                "illusion",
                "graph",
                "hexagonaltiling"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 126
        },
        "renderpass": [
            {
                "code": "// hexagon tiling from https://shadertoy.com/view/ldcXW8\n// variant: triangle https://www.shadertoy.com/view/lflfW2\n\n#define hash(p)  fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453)\n\nvoid mainImage( out vec4 o,  vec2 p ) {\n // p -= 5.*iTime;\n    p *= mat2(1,1./1.73, 0,2./1.73) / 4.;     // to diamond coordinates\n    vec2  g = fract( p ),                     // local diamond coordinate\n          i = floor( p );                     // diamond id\n    float k = mod(i.x+i.y,3.);\n\n    i = k < 2. ?  i + k  :  i + step(g.yx,g); // hexagon id\n    o = vec4( hash(i) < ( length(iMouse.xy) < 10. ? .5 : iMouse.x/iResolution.x ) );\n                                                  // threshold\n // o = vec4( hash(i) );                      // debug: show hexagons\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}