{
    "Shader": {
        "info": {
            "date": "1625301460",
            "description": "foliage shadowing is equivalent to DoF Boket : requires convolution with (solar) disk scaled with distance to floor.\nHere I approximate this with SDF to foliage mask. That I approximate with MIPmap of mask.\n( try uncommenting some foliage motion. WIP ).",
            "flags": 32,
            "hasliked": 0,
            "id": "stlXzN",
            "likes": 2,
            "name": "foliage shadow with fake convolu",
            "published": 3,
            "tags": [
                "sdf",
                "convolution",
                "penumbra",
                "boket"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 289
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    float m = iMouse.y/R.y,\n          l = floor(2.*log2(R.y)),          // for jigsaw between min-max LOD\n          t = floor(l*fract(iTime/8.-.1));\n          t = min(t,l-t);\n          \n    m = .8;                                 // foliage threshold\n    t = 3.+log2(R.y/360.);                  // log2( distance to floor )\n    \n    float v = T(U, t )- (1.-m); \n    O = vec4( smoothstep(-4., 4., v*R.y/10. ) );  // -4..4 to reproduce soft disk\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n   \n    O.x = step( T(U,0.), .4 );                 // foliage mask \n    \n\n/**\n  { vec2 D = R/100.*cos(iTime*2.+vec2(0,11));\n    O.x = 1.-step( (1.-T(U,0.))*(1.-T(-U+D,0.)), .25 );  // motion: 2nd foliage layer\n  }\n/**/   \n\n/**\n  { vec2 D = R/40.*cos(iTime+vec2(0,11));\n    O.x = step( T(U,0.), .6 ) * step( T(-U+D,0.), .6 );  // motion: 2nd foliage layer\n  }\n/**/\n\n\n/**/\n   { vec2 D = R/5.*cos(iTime+vec2(0,11));    \n     O.x *= step( R.y/5., length(U-R/2.+D));   // occluder mask \n   }\n/**/    \n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 2,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R         iResolution.xy\n#define T( U, l ) textureLod( iChannel0, (U)/R , l ).x",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}