{
    "Shader": {
        "info": {
            "date": "1629301539",
            "description": "Lasers and fog machines",
            "flags": 0,
            "hasliked": 0,
            "id": "7tBSR1",
            "likes": 44,
            "name": "Rave Lasers",
            "published": 3,
            "tags": [
                "light",
                "smoke",
                "laser"
            ],
            "usePreview": 0,
            "username": "R3N",
            "viewed": 1601
        },
        "renderpass": [
            {
                "code": "// rand [0,1] https://www.shadertoy.com/view/4djSRW\nfloat rand(vec2 p) {\n    p *= 500.0;\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n// value noise\nfloat noise(vec2 p) {\n\tvec2 f = smoothstep(0.0, 1.0, fract(p));\n\tvec2 i = floor(p);\n\tfloat a = rand(i);\n\tfloat b = rand(i+vec2(1.0,0.0));\n\tfloat c = rand(i+vec2(0.0,1.0));\n\tfloat d = rand(i+vec2(1.0,1.0));\n\treturn mix(mix(a, b, f.x), mix(c, d, f.x), f.y);\n}\n\n// fractal noise\nfloat fbm(vec2 p) {\n    float a = 0.5;\n    float r = 0.0;\n    for (int i = 0; i < 8; i++) {\n        r += a*noise(p);\n        a *= 0.5;\n        p *= 2.0;\n    }\n    return r;\n}\n\n// lasers originating from a central point\nfloat laser(vec2 p, int num) {\n\tfloat r = atan(p.x, p.y);\n\tfloat sn = sin(r*float(num)+iTime);\n    float lzr = 0.5+0.5*sn;\n    lzr = lzr*lzr*lzr*lzr*lzr;\n    float glow = pow(clamp(sn, 0.0, 1.0),100.0);\n\treturn lzr+glow;\n}\n\n// mix of fractal noises to simulate fog\nfloat clouds(vec2 uv) {\n    vec2 t = vec2(0,iTime);\n\tfloat c1 = fbm(fbm(uv*3.0)*0.75+uv*3.0+t/3.0);\n\tfloat c2 = fbm(fbm(uv*2.0)*0.5+uv*7.0+t/3.0);\n\tfloat c3 = fbm(fbm(uv*10.0-t)*0.75+uv*5.0+t/6.0);\n    float r = mix(c1, c2, c3*c3);\n\treturn r*r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 hs = iResolution.xy/iResolution.y*0.5;\n    vec2 uvc = uv-hs;\n\tfloat l = (1.0 + 3.0*noise(vec2(15.0-iTime)))\n        * laser(vec2(uv.x+0.5, uv.y*(0.5 + 10.0*noise(vec2(iTime/5.0))) + 0.1), 15);\n\tl += fbm(vec2(2.0*iTime))\n        * laser(vec2(hs.x-uvc.x-0.2, uv.y+0.1), 25);\n\tl += noise(vec2(iTime-73.0))\n        * laser(vec2(uvc.x, 1.0-uv.y+0.5), 30);\n    float c = clouds(uv);\n    vec4 col = vec4(0, 1, 0, 1)*(uv.y*l+uv.y*uv.y)*c;\n    fragColor = pow(col, vec4(0.75));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}