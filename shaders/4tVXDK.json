{
    "Shader": {
        "info": {
            "date": "1486046701",
            "description": "Ugly and looong :-( \nAn svg shadertoy player might be shorter (+ better).\nDon't hesitate to post your alternate nvidia Logo shader !\n",
            "flags": 0,
            "hasliked": 0,
            "id": "4tVXDK",
            "likes": 4,
            "name": "nVidia logo  (ongoing)",
            "published": 3,
            "tags": [
                "logo",
                "short",
                "golf",
                "nvidia"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 857
        },
        "renderpass": [
            {
                "code": "/**/ // nVidia logo as parabols // see https://www.desmos.com/calculator/5zxv6ozlxa\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n\tU = (U+U -(O.xy=iResolution.xy)) / O.y *3.;\n    U.y -= .2;\n    \n    float A=5., B=5.7, // top vs bottom stretching\n          x2 = .06*U.x*U.x,\n           y = abs(U.y),\n           l = (A-y) / (1.+x2); // inversing  y = A -k* ( 1+x2 ) -> k=... -> draw isoval\n    if (U.y<0.) {               // inversing -y = B -k*( 1+x2*(B-k)/(A-k)) ) (matching at y=0)\n        float a = -1.-x2,       //            implies solve a 2nd degree polynomial :-(\n              b = A+B + B*x2-y,\n              c = -A*(B-y);\n              l = ( -b +sqrt(b*b-4.*a*c) ) / (2.*a);\n        if (U.x>0.) {           // bottom right cadrant is special\n            l = (B-y) / (1.+x2/1.55);\n            if (l>5.) l=0.;                      // spiral interior end\n            if (U.y > (a=max(U.x-2., 1.3*(1.37-U.x)))) l = 3.-(a-U.y);\n            if (U.x>3.5 && U. y> 1.-.45*U.x) l=0.; // spiral exterior end\n        }\n      }   \n \n    l = clamp( 4.*sin(6.28*max(3.,l)) , 0.,1.);\n    O = mix(vec4(1), vec4(.5,.72,.1,1), U.x<-.3 ? l : 1.-l );\n\n}\n/**/\n\n\n\n/**  // nVidia logo as parabols \n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n\tU = (U+U -(O.xy=iResolution.xy)) / O.y;\n    \n    float l = sqrt( U.x*U.x+abs(U.y));\n   \n    O = clamp( 9.*sin( 20.*sqrt( U.x*U.x+abs(U.y)+.3*l)) , 0.,1.) * vec4(.5,.72,.1,1);\n\n}\n/**/\n\n\n\n/** // nVidia logo as truncated ellipses\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n\tU = (U+U -(O.xy=iResolution.xy)) / O.y;\n    U.y -= .2;\n    U = vec2(U.x, (U.y>0.?2.:1.2)*abs(U.y)+.4);\n\n    float l = length(U);\n    if ( l < .4 || l>1.3 ) l=.3; \n    O = mix(vec4(.5,.72,.1,1), \n            vec4(1),\n            clamp( 5.*sin(l*6.28*2.) * sign(U.x+.06) ,0.,1.) );\n   \n\n}\n/**/\n\n\n\n/** // nVidia logo as truncated spiral\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n\tU = (U+U -(O.xy=iResolution.xy)) / O.y;\n    U.y -= .2;\n    U = vec2(U.x, sqrt((U.y>0.?2.:1.2)*abs(U.y)+.2));\n\n    float l = length(U);\n    if ( l < .6 || l>1.3 ) l=.3; \n    O = mix(vec4(.5,.72,.1,1), \n            vec4(1),\n            clamp( 5.*sin(l*6.28*3.) * sign(U.x+.06) ,0.,1.) );\n}\n/**/\n/*    \n\tfloat a = atan(-U.y,U.x) ,l = length(U);\n    if ( l < .7 || l>1.3 ) l=0.;\n    O = mix(vec4(.5,.7,.1,1), //vec4(.7,.85,.3,1),\n            vec4(1),\n            clamp( 9.*sin(a+l*6.28*3.) * sign(U.x+.06) ,0.,1.) );\n*/\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}