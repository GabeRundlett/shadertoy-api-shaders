{
    "Shader": {
        "info": {
            "date": "1689868932",
            "description": "Trippy Test",
            "flags": 0,
            "hasliked": 0,
            "id": "cdSfzK",
            "likes": 1,
            "name": "Teel test crazy",
            "published": 3,
            "tags": [
                "trippy"
            ],
            "usePreview": 0,
            "username": "cneck",
            "viewed": 103
        },
        "renderpass": [
            {
                "code": "#define ITERS 8\n#define SCALE 2.0\n#define SPEED 0.25;\n\nvec3 hsv(float h, float s, float v) {\n  return mix(vec3(1.), clamp((abs(fract(h + vec3(3., 2., 1.) / 3.) * 6. - 3.) - 1.), 0., 1.), s) * v;\n}\n\nfloat col(vec2 p, float t) {\n  float a = length(p) - p.x;\n  float b = max(abs(p.x - 1.0), abs(p.y - 1.0));\n  float c = max(p.x, p.y);\n  float d = b * a;\n  return t * 0.1 + mix(mix(a, b, sin(t * 2.31) * 0.5 + 0.5), mix(c, d, sin(t + 1.0) * 0.5 + 0.5), sin(t * 0.46) * 0.5 + 0.5);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  float aspect = iResolution.x / iResolution.y;\n  vec2 p = (-1.0 + 2.0 * fragCoord.xy / iResolution.xy);\n  p.x *= aspect;\n  p += 1.0;\n  vec3 c = vec3(1);\n  float t = 5.0 + iTime * SPEED;\n  for (int j = 3; j < ITERS; j++) {\n    p = abs(p - 1.0);\n    float h = col(p, t);\n    c += hsv(sin(h * 8.0) + 0.9, 2.0, 0.30); // <-- change this line\n    p *= SCALE;\n  }\n  fragColor = vec4(c, 200.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}