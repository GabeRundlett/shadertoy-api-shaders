{
    "Shader": {
        "info": {
            "date": "1686686895",
            "description": "CC0: Overcomplicating things\nI really enjoyed the color explosion and simplicity of kishimisu's\nhttps://www.shadertoy.com/view/mtyGWy\nSo I decided to overcomplicate it!\nIt's still pretty colorful\n",
            "flags": 0,
            "hasliked": 0,
            "id": "DsXcWn",
            "likes": 38,
            "name": "Overcomplicating things",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "mrange",
            "viewed": 959
        },
        "renderpass": [
            {
                "code": "// CC0: Overcomplicating things\n//  I really enjoyed the color explosion and simplicity of kishimisu's\n//  https://www.shadertoy.com/view/mtyGWy\n//  So I decided to overcomplicate it!\n//  It's still pretty colorful\n\n#define TIME        iTime\n#define RESOLUTION  iResolution\n#define PI          3.141592654\n#define TAU         (2.0*PI)\n#define ROT(a)      mat2(cos(a), sin(a), -sin(a), cos(a))\n\nvec3 palette( float t ) {\n  return (1.0+cos(vec3(0.0, 1.0, 2.0)+TAU*t))*0.5;\n}\n\n// License: MIT, author: Inigo Quilez, found: https://www.iquilezles.org/www/articles/smin/smin.htm\nfloat pmin(float a, float b, float k) {\n  float h = clamp(0.5+0.5*(b-a)/k, 0.0, 1.0);\n  return mix(b, a, h) - k*h*(1.0-h);\n}\n\nfloat pmax(float a, float b, float k) {\n  return -pmin(-a, -b, k);\n}\n\nfloat pabs(float a, float k) {\n  return pmax(a, -a, k);\n}\n\n\n// License: Unknown, author: Matt Taylor (https://github.com/64), found: https://64.github.io/tonemapping/\nvec3 aces_approx(vec3 v) {\n  v = max(v, 0.0);\n  v *= 0.6f;\n  float a = 2.51f;\n  float b = 0.03f;\n  float c = 2.43f;\n  float d = 0.59f;\n  float e = 0.14f;\n  return clamp((v*(a*v+b))/(v*(c*v+d)+e), 0.0f, 1.0f);\n}\n\nvec2 toPolar(vec2 p) {\n  return vec2(length(p), atan(p.y, p.x));\n}\n\nvec2 toRect(vec2 p) {\n  return vec2(p.x*cos(p.y), p.x*sin(p.y));\n}\n\nfloat modMirror1(inout float p, float size) {\n  float halfsize = size*0.5;\n  float c = floor((p + halfsize)/size);\n  p = mod(p + halfsize,size) - halfsize;\n  p *= mod(c, 2.0)*2.0 - 1.0;\n  return c;\n}\n\nfloat smoothKaleidoscope(inout vec2 p, float sm, float rep) {\n  vec2 hp = p;\n\n  vec2 hpp = toPolar(hp);\n  float rn = modMirror1(hpp.y, TAU/rep);\n\n  float sa = PI/rep - pabs(PI/rep - abs(hpp.y), sm);\n  hpp.y = sign(hpp.y)*(sa);\n\n  hp = toRect(hpp);\n\n  p = hp;\n\n  return rn;\n}\n\n\n// License: Unknown, author: kishimisu, found: https://www.shadertoy.com/view/mtyGWy\nvec3 kishimisu(vec3 col, vec2 p) {\n  vec2 p0 = p;\n  vec3 finalColor = vec3(0.0);\n    \n  vec2 p1 = p;\n  for (float i = 0.0; i < 4.0; i++) {\n    p1 = fract(p1 * 2.0+0.0125*TIME) - 0.5;\n\n    float d = length(p1) * exp(-length(p0));\n\n    vec3 cc = palette(length(p0) + i*.4 + TIME*.2);\n\n    d = sin(d*8. + TIME)/8.;\n    d = abs(d);\n\n    d = max(d, 0.005);\n    d = (0.0125 / d);\n    d *= d;\n\n    col += cc * d;\n  }\n\n  return col;  \n}\n\nvec3 effect(vec2 p, vec2 pp) {\n  vec3 col = vec3(0.0);\n  mat2 rot = ROT(0.025*TIME); \n  p *= rot;\n  vec2 kp = p;\n  float r  = RESOLUTION.x/RESOLUTION.y;\n  kp.x -= r-0.125;\n  float kl = dot(kp, kp);\n  float kn = smoothKaleidoscope(kp, 0.05, 50.0);\n  kp += 0.5*sin(vec2(1.0, sqrt(0.5))*TIME*0.21);\n  kp /= r;\n  col = kishimisu(col, kp);\n  col = clamp(col, 0.0, 4.0);\n  vec3 scol = palette(0.125*TIME);\n  col += 0.025*scol*scol/max(length(kl), 0.001);\n  col -= .0033*vec3(1.0, 2.0, 3.0).zyx*kl;\n  col = aces_approx(col);\n  col = max(col, 0.0);\n  col = sqrt(col);\n  return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 q = fragCoord/RESOLUTION.xy;\n  vec2 p = -1. + 2. * q;\n  vec2 pp = p;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n  vec3 col = effect(p, pp);\n  \n  fragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}