{
    "Shader": {
        "info": {
            "date": "1707677868",
            "description": "TV static ",
            "flags": 0,
            "hasliked": 0,
            "id": "lXf3zj",
            "likes": 1,
            "name": " Static",
            "published": 3,
            "tags": [
                "static"
            ],
            "usePreview": 0,
            "username": "EthanZappa",
            "viewed": 158
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    \n    float b = 0.0;\n    \n    for(float i=0.5; i<9.0; i++ ){\n    \n        float scale = 20.0 + i * 5.0;\n\n\n\n        vec2 uv = fragCoord/iResolution.xy + i*10.123;\n    \n\n    \n\n        vec4 dsr = texture( iChannel0, uv/20.0);\n        uv.x += dsr.a*0.01 ;\n\n        vec4 pos = texture( iChannel0, vec2(floor(uv.x*scale-0.5)/scale, 0));\n \n    \n  \n        uv.y += iTime*(10.01-scale*0.00001 + pos.a*0.05);\n\n\n    \n\n        vec4 col = texture( iChannel0, floor(uv*scale-0.5)/scale);\n    \n\n\n\n        col.x = mix(col.x, col.z, 0.5+0.5*(sin(iTime*0.654)));\n        col.y = mix(col.y, col.w, 0.5+0.5*(sin(iTime*0.721)));\n    \n        uv.x = uv.x + (col.x*1.0 - 0.5)/scale;\n        uv.y = uv.y + (col.y*1.0 - 0.5)/scale;\n\n\n        float a = 3.0 * abs(fract(uv.x*scale)-0.5) * abs(fract(uv.y*scale)-0.5);\n\n        b = max(b, smoothstep(.4, 0.8, a) * smoothstep( 1.701, 0.702, col.z));\n    \n    //b = col.x;\n    \n    }\n    \n    // Output to screen\n    fragColor = vec4(b, b, b, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}