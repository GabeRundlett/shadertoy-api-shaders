{
    "Shader": {
        "info": {
            "date": "1713645751",
            "description": "Pearlescent spiral",
            "flags": 0,
            "hasliked": 0,
            "id": "4ctXR4",
            "likes": 9,
            "name": "Pearlescent Spiral",
            "published": 3,
            "tags": [
                "spiral",
                "color"
            ],
            "usePreview": 0,
            "username": "Peace",
            "viewed": 351
        },
        "renderpass": [
            {
                "code": "float smin(float d1, float d2, float k) { \n\tfloat h = clamp(0.5 + 0.5 * (d2 - d1) / k, 0.0, 1.0); \n\treturn mix(d2, d1, h) - k * h * (1.0 - h); \n} \n\nvec3 hue_shift(vec3 col, float hue) {\n    return mix(vec3(dot(vec3(0.333), col)), col, cos(hue)) + cross(vec3(0.577), col) * sin(hue);\n}\n\nvec2 rot2d(vec2 v, float a) {\n\treturn cos(a) * v + sin(a) * vec2(-v.y, v.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float mr = min(iResolution.x, iResolution.y);\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / mr;\n    float a = atan(uv.y, uv.x);\n    float l = length(uv);\n\n    float d = 0.0;\n    vec2 p = sin(uv * l);\n    p = rot2d(p, -cos(l * 5.0 + iTime));\n    d = length(exp(-p * p));\n    p = rot2d(p, d - cos(l * 3.0 + iTime));\n    p = rot2d(p, smoothstep(0.0, -0.5, abs(cos(atan(p.y, p.x))) - 0.7));\n    d = smin(length(p), d, 0.9);\n    p = rot2d(p, l + a);\n\n    vec3 c = vec3(0);\n    c = sin(d * vec3(4, 3, 1)) * 0.5 + 0.5;\n    c = hue_shift(c, atan(p.y, p.x) - iTime);\n    c.b += d * 0.25;\n    c.b = sqrt(c.b);\n    c *= c * 0.6 + 0.4;\n\n    fragColor = vec4(c, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}