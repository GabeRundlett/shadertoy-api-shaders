{
    "Shader": {
        "info": {
            "date": "1561141777",
            "description": "top: antialiased. bottom: not.\nMouse.y = zoom.",
            "flags": 0,
            "hasliked": 0,
            "id": "3t2GWK",
            "likes": 8,
            "name": "antialiasing pixel-size point",
            "published": 3,
            "tags": [
                "antialiasing",
                "tuto"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 458
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, in vec2 U )\n{\n    float s,v, t = iTime/14.;\n    vec2 R = iResolution.xy, u,\n         M = iMouse.xy/R;\n    if ( M == vec2(0) ) M.y = 2.*min(fract(t),fract(-t));  // auto-demo\n    \n    s = exp2(floor(7.*M.y)), v;                            // scaling\n    u = U = floor(U/s);\n    R /= s;\n    \n    U -= vec2( mod(float(iFrame)/16.,R.x), R.y/2. );       // locate points\n    U.x = mod(U.x+25., 50.)-25.;\n    \n    v  = smoothstep(1.5, 0., length( U ) ) / (1.5*1.5);    // antialiased dot\n    v += float( floor( U ) == vec2( 0, -exp2(7.)/s)  );    // aliased dot\n    \n    O = vec4( pow( v, 1./2.2 ) );                          // to sRGB\n    O.r += float (mod(floor(u.x),50.)==0.);                // bars\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}