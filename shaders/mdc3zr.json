{
    "Shader": {
        "info": {
            "date": "1676894093",
            "description": "come on, get in.\nit's all amogus.\nyou'll enjoy.",
            "flags": 0,
            "hasliked": 0,
            "id": "mdc3zr",
            "likes": 13,
            "name": "Amogus Hell",
            "published": 3,
            "tags": [
                "math",
                "tiling",
                "amongus",
                "amogus"
            ],
            "usePreview": 0,
            "username": "ronwnor",
            "viewed": 428
        },
        "renderpass": [
            {
                "code": "\nfloat sussy(float x, float y){\n    \n    float a = max(abs(abs(x) - 4.), abs(y + sign(x)*.5));\n    float b = max(abs(abs(x*2.) - 5.) - 2., abs(abs(y*2.) - 2.));\n    float c = max(abs(abs(abs(x*2.) - 5.) - 2.), abs(y*2. + sign(x)*4.));\n    \n    return min(min(a,b),c) - 1.;\n}\n\nfloat impostor(float x, float y){\n    \n    float a = mod(x + 2.*round(y*.2 - round((x*5. + y*2.)/66.)*.6) - 6., 12.) - 6.;\n    float b = mod(y - 3.*round((x*5. + y*2.)/66.) - 2.5, 5.) - 2.5;\n    \n    return -sussy(a, b);\n}\n\nvec3 among(vec2 z){\n\n    z = vec2( 6.*log(z.x*z.x + z.y*z.y), 10.5*atan(z.y, z.x)) - vec2(8,2)*iTime;\n    \n    float blur = 0.; \n        \n    for(float i=0.; i<.7; i+=.07){\n        blur += step(0., impostor(z.x - i,z.y - .25*i));\n        blur += step(0., impostor(z.x - i,z.y - .25*i - 11.))*.4;\n    }\n    \n    return vec3(blur*.1, .0, .2);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 us = (2.*fragCoord - iResolution.xy)/iResolution.y*15.;\n\n    fragColor = vec4(among(us) ,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}