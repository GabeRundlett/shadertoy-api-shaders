{
    "Shader": {
        "info": {
            "date": "1690533359",
            "description": "It's a test",
            "flags": 0,
            "hasliked": 0,
            "id": "DllczM",
            "likes": 1,
            "name": "Test-MrFuzz32",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "MrFuzz32",
            "viewed": 168
        },
        "renderpass": [
            {
                "code": "vec3 palette(float t){\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n\n    return a + b*cos(6.28318*(c*t+d));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Conform pixel coordinates to -1 to 1, and adjust for aspect ratio\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColour = vec3(0.0);\n\n    for(float i = 0.0; i < 4.0; i++){\n        uv = fract(uv*1.2) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.4 + iTime/6.);\n\n\n        d = sin(d*30.0 + iTime/3.0)/8.0;\n        d = abs(d);\n\n        d = pow(0.01 / d,1.3);\n\n        finalColour += col*d;\n    }\n    // Output to screen\n    fragColor = vec4(finalColour,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}