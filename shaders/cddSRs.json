{
    "Shader": {
        "info": {
            "date": "1680275798",
            "description": "Custom trilinear filtering",
            "flags": 0,
            "hasliked": 0,
            "id": "cddSRs",
            "likes": 4,
            "name": "Custom trilinear filtering",
            "published": 3,
            "tags": [
                "texture",
                "filtering",
                "trilinear",
                "interpolation"
            ],
            "usePreview": 1,
            "username": "djancool",
            "viewed": 260
        },
        "renderpass": [
            {
                "code": "float s_curve(float x, float p)\n{\n    float x1 = pow(x, p);\n    float x2 = pow(1.0 - x, p);\n    return x1 / (x1 + x2);\n}\n\nvec3 s_curve(vec3 x, float p)\n{\n    x.x = s_curve(x.x, p);\n    x.y = s_curve(x.y, p);\n    x.z = s_curve(x.z, p);\n    return x;\n}\n\nvec4 texelFetchR (sampler3D sampler, ivec3 p, int mip)\n{\n    ivec3 res = textureSize(sampler, 0);\n    \n    p.x = p.x % res.x;\n    p.y = p.y % res.y;\n    p.z = p.z % res.z;\n    \n    if(p.x < 0) p.x += res.x;\n    if(p.y < 0) p.y += res.y;\n    if(p.z < 0) p.z += res.z;\n\n    return texelFetch(sampler, p, mip);\n}\n\nvec4 texture3D(sampler3D sampler ,vec3 uv)\n{\n    ivec3 res = textureSize(sampler, 0);\n    uv.xy -= 0.5 / vec3(res).xy;\n    ivec3 p = ivec3(floor(uv * float(res.x)));\n    \n    vec3 blend = fract(uv * vec3(res));\n    blend = s_curve(blend, 1.3);\n    \n    vec4 col_000 = texelFetchR(sampler, p, 0);\n    vec4 col_100 = texelFetchR(sampler, p + ivec3(1,0,0), 0);\n    vec4 col_010 = texelFetchR(sampler, p + ivec3(0,1,0), 0);\n    vec4 col_110 = texelFetchR(sampler, p + ivec3(1,1,0), 0);\n\n    vec4 col_00 = mix(col_000, col_100, blend.x);\n    vec4 col_10 = mix(col_010, col_110, blend.x);\n    vec4 col_0 = mix(col_00, col_10, blend.y);\n    \n    \n    vec4 col_001 = texelFetchR(sampler, p + ivec3(0,0,1), 0);\n    vec4 col_101 = texelFetchR(sampler, p + ivec3(1,0,1), 0);\n    vec4 col_011 = texelFetchR(sampler, p + ivec3(0,1,1), 0);\n    vec4 col_111 = texelFetchR(sampler, p + ivec3(1,1,1), 0);\n\n    vec4 col_01 = mix(col_001, col_101, blend.x);\n    vec4 col_11 = mix(col_011, col_111, blend.x);\n    vec4 col_1 = mix(col_01, col_11, blend.y);\n    \n    \n    vec4 col = mix(col_0, col_1, blend.z);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n\n    vec4 col = texture3D(iChannel0, vec3(uv * 1.0, 0.0) - vec3(iTime * 0.02));\n\n    fragColor = vec4(col.rgb, 0.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "volume",
                        "id": 40,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}