{
    "Shader": {
        "info": {
            "date": "1720546771",
            "description": "infinite cosmic soup shader",
            "flags": 0,
            "hasliked": 0,
            "id": "clKBDm",
            "likes": 10,
            "name": "Infinite Cosmic Soup",
            "published": 3,
            "tags": [
                "glsl",
                "shader",
                "stars",
                "cosmic"
            ],
            "usePreview": 0,
            "username": "harsh",
            "viewed": 229
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 adjustedUV = (uv - 0.5) * 3.5;\n    float timeFactor = iTime * 0.025;\n    vec4 outputColor = vec4(0.0);\n    float x;\n    for (float waveIndex = 0.0; waveIndex < 25.0; waveIndex += 1.0) {\n        vec2 waveVector = vec2(cos(x = waveIndex * 15. - timeFactor), sin(x));\n        float wave = sin(waveIndex * mix(0.05, 0.5, sin(timeFactor) * 0.5) - timeFactor);\n        float distance = length(adjustedUV - wave * waveVector); \n        vec3 color;\n        for(int i=0;i<3;i++) {\n            float z = waveIndex * 0.000009;\n            float l = distance;\n            vec2 uv = adjustedUV;\n            uv += waveVector/l*(sin(z)+5.)*abs(sin(l*1.1-z-z));\n            color[i] = 0.0013/length(mod(uv + vec2(0.003 * float(i-1)),1.1)-0.5); \n        }\n        color *= vec3(1.00, 1.00, 1.0); \n        outputColor += vec4(color / distance, 2.0);\n    }\n    fragColor = outputColor;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}