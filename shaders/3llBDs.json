{
    "Shader": {
        "info": {
            "date": "1598084564",
            "description": "Nothing cool about this.\ndesign resource:\nhttps://design.mit.edu/projects/puma-auxetic-recurve-midsole",
            "flags": 0,
            "hasliked": 0,
            "id": "3llBDs",
            "likes": 9,
            "name": "PUMA auxetic pattern",
            "published": 3,
            "tags": [
                "reproduction"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 375
        },
        "renderpass": [
            {
                "code": "// All the distance functions from:https://iquilezles.org/articles/distfunctions2d\n#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) 1.0-smoothstep(b,antialiasing(1.0),d)\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,vec2(0))) + min(max(d.x,d.y),0.0);\n}\n\nfloat opSmoothUnion( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\n\n\nfloat auxeticDistance(vec2 p) {\n\tfloat d = length(p+vec2(0.15,0.0))-0.1;\n    float d2 = length(p+vec2(-0.15,0.0))-0.1;\n    d = min(d,d2);\n    d2 = sdBox(p,vec2(0.1,0.05));\n    d = opSmoothUnion(d,d2,0.05);\n    return abs(d)-0.02;\n}\n\nvec3 auxeticPattern(vec2 p, vec3 col, vec3 rhcol){\n    p.y-=iTime*0.1;\n    float smoothval = -0.015;\n    vec2 pref = p;\n    float scale = 3.0;\n    p*=scale;\n    \n    p.x = mod(p.x,0.75)-0.375;\n    p.y = mod(p.y,0.7)-0.35;\n    \n    float d = auxeticDistance(p);\n    col = mix(col, rhcol,S(d,smoothval));\n    \n    p = pref;\n\tp*=scale;\n    \n    p.y += 0.35;\n    p.x = mod(p.x,0.75)-0.375;\n    p.y = mod(p.y,0.7)-0.35;\n    d = auxeticDistance(p*Rot(radians(90.0)));\n    col = mix(col, rhcol,S(d,smoothval));\n    \n\tp = pref;\n\tp*=scale;\n    \n    p.x += 0.37;\n    p.y += 0.35;\n    p.x = mod(p.x,0.75)-0.375;\n    p.y = mod(p.y,0.7)-0.35;\n\td = auxeticDistance(p);\n    col = mix(col, rhcol,S(d,smoothval));\n    \n\tp = pref;\n\tp*=scale;\n    \n\tp.x += 0.37;\n    p.y += 0.7;\n    p.x = mod(p.x,0.75)-0.375;\n    p.y = mod(p.y,0.7)-0.35;\n\td = auxeticDistance(p*Rot(radians(90.0)));\n    col = mix(col, rhcol,S(d,smoothval));\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(126.0/255.0,0.0/255.0,67.0/255.0);\n\tvec3 baseCol = vec3(1.0);\n\n    col = auxeticPattern(uv,col,baseCol);\n        \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}