{
    "Shader": {
        "info": {
            "date": "1569445174",
            "description": "spooky wooky",
            "flags": 0,
            "hasliked": 0,
            "id": "3scGDl",
            "likes": 4,
            "name": "Creepy Eyes",
            "published": 3,
            "tags": [
                "2d",
                "test",
                "circles",
                "eyes",
                "repeating"
            ],
            "usePreview": 0,
            "username": "clepirelli",
            "viewed": 591
        },
        "renderpass": [
            {
                "code": "float pseudorandScalar(vec2 randseed)\n{\n\treturn fract(dot(vec2(sin(randseed*194.0154)), vec2(1043.94219, 744.2918)));\n}\n\nbool inCircle(vec2 uv, vec2 co, float r)\n{\n\treturn (distance(uv, co) <= r);\n}\n\n\n//bool inCircleContour(vec2 uv, vec2 co, float r, float cwidth)\n//{\n//    float d = distance(uv, co);\n//\treturn (d < r) && (d > r-cwidth);\n//}\n\nmat2 rot(float angle)\n{\n\treturn mat2(cos(angle), -sin(angle), cos(angle), -sin(angle));\n}\n\n\nconst int aa = 2;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 total = vec3(.0);\n    for(int i = 0; i < aa; i++)\n    for(int j = 0; j < aa; j++)\n    {\n            \n    \tvec2 uv = (fragCoord+vec2(float(i),float(j))/float(aa)-.5)/iResolution.xy - vec2(.5);\n    \tuv.x *= iResolution.x/iResolution.y;\n    \t\n    \tuv*= 4.0;\n    \tvec2 oruv = uv;\n    \tuv = fract(uv)-.5;\n    \t\n    \tvec3 col = vec3(35., 18., 56.)/255.;\n    \t\n    \tfloat r = (.99+.01*cos(iTime))*.2;\n    \tfloat eyeY = max(.2-iTime*.1, .0);\n    \t\n    \tfloat randAngle = pseudorandScalar(floor(oruv))*360.;\n    \tmat2 rotation = rot(randAngle);   \n    \t\n    \tif(inCircle(uv, rotation*vec2(.0,.1), r) && \n    \t    inCircle(uv, rotation*vec2(.0,-.1), r) && \n    \t    !inCircle(uv,rotation*vec2(.0,eyeY),.08*(.9+.1*cos(iTime)))\n    \t  )\n    \t{\n    \t    col = vec3(245.,244.,237.)/255.;\n    \t}\n        \n        total += col;\n    \n    }\n    total /= float(aa*aa);\n    // Output to screen\n    fragColor = vec4(total,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}