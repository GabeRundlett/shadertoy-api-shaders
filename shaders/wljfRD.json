{
    "Shader": {
        "info": {
            "date": "1603457819",
            "description": "Rectangles",
            "flags": 0,
            "hasliked": 0,
            "id": "wljfRD",
            "likes": 3,
            "name": "Rectangles - Movement",
            "published": 3,
            "tags": [
                "rectangle"
            ],
            "usePreview": 0,
            "username": "DawCrash",
            "viewed": 271
        },
        "renderpass": [
            {
                "code": "vec4 rectangle(vec2 xy, float x1, float y1, float x2, float y2) {\n\tvec4 result = vec4(0.0, 0.0, 0.0, 1.0);\n    \n    if (xy.x >= x1 && xy.x <= x2 && xy.y >= y1 && xy.y <= y2) result = vec4(0.04, 0.04, 0.04, 1.0);\n    \n    return result;\n}\n\nvec4 rectangleSin(vec2 xy, float modx, float mody) {\n    float r1x1 = sin(iTime / modx) / 2.0 + 0.25;\n    float r1x2 = r1x1 + 0.5;\n    float r1y1 = sin(iTime / mody) / 2.0 + 0.25;\n    float r1y2 = r1y1 + 0.5;\n    \n    return rectangle(xy, r1x1, r1y1, r1x2, r1y2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = fragCoord.xy; //We obtain our coordinates for the current pixel\n    xy.x = xy.x / iResolution.x; //We divide the coordinates by the screen size\n    xy.y = xy.y / iResolution.y;\n    \n    fragColor = rectangleSin(xy, 1.0, 1.5);\n    \n    for (float i = 1.0; i < 2.0; i += 0.01) {\n        fragColor += rectangleSin(xy, i, 3.0-i);\n    }\n    \n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}