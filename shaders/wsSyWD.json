{
    "Shader": {
        "info": {
            "date": "1586640733",
            "description": "Another try to have a sin city like effect.\n\nStill very dependant of the lighting conditions and your webcam",
            "flags": 2,
            "hasliked": 0,
            "id": "wsSyWD",
            "likes": 4,
            "name": "Red Only II",
            "published": 3,
            "tags": [
                "red",
                "webcam",
                "sincity"
            ],
            "usePreview": 0,
            "username": "ManuManu",
            "viewed": 475
        },
        "renderpass": [
            {
                "code": "\nvec4 convertToUYUV(vec4 inputColor )\n{\n\tmat4 RGBtoYUV = mat4(0.257,  0.439, -0.148, 0.0,\n    \t                 0.504, -0.368, -0.291, 0.0,\n        \t             0.098, -0.071,  0.439, 0.0,\n            \t         0.0625, 0.500,  0.500, 1.0 );\n    return RGBtoYUV * inputColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec4 wantedColor =  vec4( 1.0, .0, .0, 1. );\n    //Rvec4 wantedColor =  vec4( .0, 1.0, .0, 1. );\n\t\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n  \tvec4 color = texture(iChannel0, uv);\n \tfloat grey = dot(vec3( color), vec3(0.299, 0.587, 0.114) );\n    vec4 greyColor = vec4(vec3(grey), 1.);\n  \n\tvec4 wantedColor_YUV =  convertToUYUV( wantedColor );\n    vec4 input_color_YUV = convertToUYUV( color );\n\n    float chromaDist = distance( wantedColor_YUV.gb, input_color_YUV.gb );\n    \n    float threshold = .3;\n    float threshold_high = threshold + .1;\n    \n    float boost = .1f;\n    color += dot( color, wantedColor) * wantedColor * boost; // Boost wanted color\n    \n    fragColor = mix( greyColor, color,  smoothstep( threshold_high , threshold, chromaDist) );\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}