{
    "Shader": {
        "info": {
            "date": "1652404353",
            "description": "The main cardioid of the Mandelbrot set is mapped to the unit circle and back.",
            "flags": 0,
            "hasliked": 0,
            "id": "Nt2BzG",
            "likes": 2,
            "name": "Main Cardioid to Circle Mapping",
            "published": 3,
            "tags": [
                "fractal",
                "mandelbrot",
                "complex",
                "mapping",
                "cardioid"
            ],
            "usePreview": 0,
            "username": "Fraktoler",
            "viewed": 284
        },
        "renderpass": [
            {
                "code": "#define MAX_ITER 256\n#define BAILOUT 256.\n#define PI 3.14159265358979\n\nvec2 mul(vec2 z, vec2 w) {\n    return z.x * w + z.y * vec2(-w.y, w.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float zoom = 6.;\n    vec2 uv = zoom * (fragCoord - .5 * iResolution.xy) / iResolution.x;\n    float r, effect = sin(iTime * .2);\n    effect *= effect;\n    vec2 c = uv - .25 * effect * mul(normalize(uv) + vec2(2, 0), uv);\n    vec2 z = c;\n    int k = 0;\n    while (k < MAX_ITER) {\n        r = dot(z, z);\n        if (r > BAILOUT) break;\n        z = mul(z, z) + c;\n        k++;\n    }\n    vec3 col = vec3(0.);\n    if (k != MAX_ITER) {\n        float invln = 1. / log(2.);\n        float lnlnb = log(log(BAILOUT));\n        float u = log(float(k) + invln*lnlnb - invln*log(.5 * log(r))) + 1.3;\n        col = cos(vec3(u * 2.5, u * 1.5, 3. * u + 1.25 * PI));\n    }\n    fragColor = vec4(col * col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}