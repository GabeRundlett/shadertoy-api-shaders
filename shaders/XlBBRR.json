{
    "Shader": {
        "info": {
            "date": "1514112019",
            "description": "This has probably be made 256 times: better interpolation (top) than bilinear (bottom), with no more texture fetch.\nBest effect of isovalues (right).\n",
            "flags": 0,
            "hasliked": 0,
            "id": "XlBBRR",
            "likes": 8,
            "name": "bicubic texture interpolation",
            "published": 3,
            "tags": [
                "spline",
                "bicubic",
                "interpolation",
                "rnd",
                "rand",
                "hermit"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1139
        },
        "renderpass": [
            {
                "code": "#define rndB(U) texture(iChannel0, U)     // bilinear interpolation\n\nvec4 rndC(vec2 u) {                       // bicubic interpolation ( 1 single fetch: thanks iq :-) )\n    vec2 R = iChannelResolution[0].xy,\n         U = u*R + .5,\n         F = fract(U);\n    U = floor(U) + F*F*(3.-2.*F); \n // U = floor(U) + F*F*F*(F*(F*6.-15.)+10.);   // use if you want smooth gradients\n    return texture( iChannel0, (U-.5) / R );\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy, V;\n    U = ( U+U - R ) / R.y;\n    V = .1*( U - .1*iTime );\n    \n\tO =   U.y > 2./R.y ? rndC(V)          // bicubic (null-tangent)\n        : U.y > 0.     ? vec4(14) \n        :                rndB(V);         // bilinear\n    if (U.x>0.) O = sin(10.*O);\n  //O = sqrt(O);                          // gamma correction\n}\n\n\n/**\nvec4 rndC(vec2 u) {                       // bicubic interpolation         \n    vec2 R = iChannelResolution[0].xy,\n         U = u*R-.5,\n         F = fract(U); F = F*F*(3.-2.*F); // hermite spline 0->1 ( = smoothstep ).\n    #define T(x,y) texelFetch(iChannel0, ivec2(mod( U +vec2(x,y), R)), 0)\n    return mix( mix(T(0,0),T(1,0),F.x), mix(T(0,1),T(1,1),F.x), F.y );\n} **/\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}