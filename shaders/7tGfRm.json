{
    "Shader": {
        "info": {
            "date": "1664234002",
            "description": "More experiments with fractal knot patterns.",
            "flags": 8,
            "hasliked": 0,
            "id": "7tGfRm",
            "likes": 11,
            "name": "Twisted neon knots",
            "published": 3,
            "tags": [
                "fractal",
                "knot",
                "neon",
                "arabesque"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 406
        },
        "renderpass": [
            {
                "code": "#define fmod(x,y) mod(floor(x),y)\nvec2 triangle_wave(vec2 a){\n    vec2 a2 = //change this constant to get other interesting patterns\n        vec2(1.,0.5)\n        \n        //vec2(1.5,0.5)\n        //vec2(1.5,0.)\n        //vec2(2.5,1.5)\n        //vec2(1.25,1.75)\n        //vec2(-2.,.5+mod(floor(a.x),2.))\n        //vec2(abs(mod(a.x-.5,2.)-1.),abs(mod(a.y-.5,2.)-1.))\n    ,\n    \n    a1 = a+a2;\n    //a1 *= (1. + fmod(abs(a1/2.),2.));\n\n    //a1 *= (1. + fmod(abs(a1/2.),2.));\n    return abs(fract((a1)*(a2.x+a2.y))-.5);\n}\n\nvec3 image1(vec2 uv,float sign1,float sign2,float sign3,float sign4,float sign5){\n    vec3 col = vec3(0.);\n    vec3 col1 = col;\n    float scale = 1.5;\n    vec2 t2 = vec2(0.);\n    for(int k = 0; k < 3; k++){\n        uv = abs(uv+t2*sign1);\n        t2 = triangle_wave(uv+.5*sign2);\n        uv = sign5*t2-triangle_wave(uv.yx);\n        col.x =\n            //abs((t2.x+t2.y*sign3)-(uv.x-uv.y*sign4))\n            //length(abs(uv-t2.yx*sign4)+uv.x*sign3)*9.\n            (length(uv+t2.yx*sign4)+uv.x*sign3)*9.\n        ;\n        col =\n            min(abs(abs(col-1.)-col),abs(abs(col-1.)-col.yzx));\n        col1 =\n            abs(col1+col.yzx-1.);\n    }\n    return col1;\n}\n\nvec3 max1(vec3 col1,vec3 col2){\n    return vec3(max(col1.x,col2.x),max(col1.y,col2.y),max(col1.z,col2.z));\n}\n\n#define loop1(a,b) for(float a = -1.; a < 2.; a += 2.){ b }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 2.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += iTime/t1/24.;\n    float scale = 1.5;\n    vec2 t2 = vec2(0.);\n    loop1(i,\n        loop1(j,\n            loop1(k,\n                loop1(l,\n                    loop1(m,\n                        col = max1(col,image1(uv,i,j,k,l,m));\n                    )\n                )\n            )\n        )\n    )\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define fmod(x,y) mod(floor(x),y)\n//#define fmod(x,y) floor(mod(floor(x),y)*mod(floor(x/y),y)/2.)\n\n\nvec2 mainSound(int samp, float t){\n  vec2 a1 = vec2(\n      8.,3.5\n      //0.,4.\n      //fmod(t/3.5,3.5)/3.5,3.5\n  );\n  float s1 = a1.x,\n  tempo =\n      a1.y,\n      //2.5+fmod(t/4.+floor(t/4.),8.)/4.,\n      t1 = (t)*tempo,\n      c2 = fmod(t1/tempo,4.),\n      c1 = fmod(t1/4.+c2,2.+fmod(t1*2.,4.)+c2),\n  m2 = c1,\n\n  a= ((1.-sqrt(fract((t*tempo+m2+t1)/2.)/1.25)))*.2,\n  \n  nb = t*pow(2.,m2/5.+7.5);\n\n  return abs(.5-vec2(fract(nb*.998)\n   ,fract(nb)))*a;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}