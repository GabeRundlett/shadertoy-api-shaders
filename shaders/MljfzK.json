{
    "Shader": {
        "info": {
            "date": "1516575205",
            "description": "madnelbrot set",
            "flags": 32,
            "hasliked": 0,
            "id": "MljfzK",
            "likes": 7,
            "name": "Mandel2018",
            "published": 3,
            "tags": [
                "mandelbrotset"
            ],
            "usePreview": 0,
            "username": "samuelotherion",
            "viewed": 663
        },
        "renderpass": [
            {
                "code": "#define mi 256.\n#define tx(p) texture(iChannel0, p).r\n\nvoid \nmainImage( out vec4 oCol, in vec2 iCoord )\n{\n\tvec2\n    uv = iCoord.xy / iResolution.xy,\n    dx = vec2( 1. / iResolution.x, 0. ),\n    dy = vec2( 0., 1. / iResolution.y );\n\t\n    float\n    t = .5 + .5 * sin( iTime ),\n    c   = tx( uv ) / mi,\n    dxm = tx( uv - dx ),\n    dxp = tx( uv + dx ),\n    dym = tx( uv - dy ),\n    dyp = tx( uv + dy );\n    \n    vec2\n    col = .5 + .5 * vec2( sign( dxp - dxm ), sign( dym - dyp ) );\n    \n    oCol = vec4( dot( col.gr, col.rg ) * .8 + .2 * abs( vec3( sin( 2. + .05 * iTime ), sin( 3. + .03 * iTime ), sin( 5. + .02 * iTime ) ) ), 1. );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define mi 256.\n\nfloat\nmb( vec2 c, float r2 ) {\n\n    vec2\n    z = c,\n    d = z * z;\n    \n    for( float i = 0.; i < mi; ++ i ) {\n        \n        if( r2 < d.x + d.y )\n            \n            return i;\n\n        z = vec2( d.x - d.y, 2. * z.x * z.y ) - c;\n        \n        d = z * z;\n        \n    }\n    \n    return mi;\n}\n\nvoid\nmainImage( out vec4 oCol, in vec2 coord ) {\n\n    vec2\n    uv = 2. * coord.xy / iResolution.xy - 1.;\n    \n    uv *= vec2( iResolution.x / iResolution.y, 1. );    \n    \n    float\n    c = cos( .3 * iTime ),\n    s = sin( 2.115 * iTime ),\n    t = sin( 3. * iTime ) * cos( .5 * iTime );\n    \n    uv *= 10. * pow( .0000001, ( .5 + .5 * sin( .2 * iTime ) ) );\n    \n    uv = vec2( c * uv.x - s * uv.y, s * uv.x + c * uv.y );\n    \n    uv += vec2( 1.39005, 0.114548 );\n    \n    oCol = vec4( 64. * log2( mb( uv, mi * .1 * ( 1. + t ) ) ), 0., 0., 1. );\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}