{
    "Shader": {
        "info": {
            "date": "1637888696",
            "description": "bad code, dont really like this one",
            "flags": 0,
            "hasliked": 0,
            "id": "NlKGRG",
            "likes": 8,
            "name": "More log polar junk",
            "published": 3,
            "tags": [
                "e"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 257
        },
        "renderpass": [
            {
                "code": "#define pi 3.14159\n\nfloat thc(float a, float b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nfloat ths(float a, float b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec2 thc(float a, vec2 b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nvec2 ths(float a, vec2 b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat h21 (vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat mlength(vec2 uv) {\n    return max(abs(uv.x), abs(uv.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    float pe = 100.;\n    //uv = floor(pe * uv)/pe + 0.;\n    uv.y += 0.02 * cos(10. * uv.x + iTime);\n\n    float a = atan(uv.y, uv.x);\n    float r = length(uv);\n\n    uv = vec2(2. * a, log(r));\n    uv = uv.y * vec2(thc(2., uv.x), ths(2., uv.x));\n    \n    \n    float sc = 1.;\n     vec2 ipos = vec2(floor(0. * iTime + sc * uv.x) + 0.5,\n                      floor( 0.25 * iTime + 2. * sc * uv.y) + 0.5);\n    \n    \n    \n    vec2 fpos = vec2(fract(0. * iTime + sc * uv.x) - 0.5,\n                     fract( 0.3 * iTime + 2. * sc * uv.y) - 0.5);\n    \n    //fpos.y += 0.2 * cos(8.* fpos.x + 10. * h21(ipos) + iTime);\n    float k = 0.6 + 0.4 * thc(0.1, cos(0. * h21(ipos) + 8. * r -5.* a- iTime) + 2. * a - 1.2 * iTime);\n   \n    float d = (2. + thc(4., k + r * 10. - iTime)) * length(fpos) * length(fpos);// + (0.5 + thc(2., 101. * h21(ipos) + iTime));\n    float s = 1.2 * (1.-mlength(fpos)) * smoothstep(-0.5,0.5, 0.45-d);// - step(0.46, mlength(fpos));\n    s = smoothstep(-k, k, \n        -d + 0.32 + 0.1 * thc(4., -iTime + log(r) + 2. * a));\n    vec3 col = vec3(s);\n    vec3 col2 =  pal(k +  - 0.8 * iTime + s * 0.002 * iTime, vec3(1.), vec3(1.), vec3(0.4), log(r) * vec3(0.,0.33,0.66));\n    float s2 = 0.5 + 0.5 * thc(1., 1.5 * thc(2., 8. * s - iTime));\n    col = mix(col, col2, vec3(s2));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}