{
    "Shader": {
        "info": {
            "date": "1605722956",
            "description": "Golfed version of my \"Fake Caustic w/Voronoi\" shader. Happy code golfing!",
            "flags": 0,
            "hasliked": 0,
            "id": "WscBRl",
            "likes": 7,
            "name": "Fake Caustic w/Voronoi - Golfed",
            "published": 3,
            "tags": [
                "voronoi",
                "caustic",
                "codegolf"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 269
        },
        "renderpass": [
            {
                "code": "/* 377 char version (27 chars shorter) by gelami */\n#define v(x, y) for(int x=-y; x++ < 2;)\nvoid mainImage(out vec4 o, vec2 u) {\n    o -= o;\n    float t = 0., w = 1., d, g, z;\n    vec2 R = iResolution.xy, q = (u - .5 * R) / R.y, x, n;\n\n    v(l,0) {\n        x = q * 4. / w;\n        d = 1.;\n        v(i,2)\n            v(j,2)\n                n = floor(x) + vec2(i, j), n += .5 + .5 * vec2(sin(n.x + n.y * 2. + iTime), cos(n.y - n.x + 2. * iTime)),\n                d = mix(g = length(x - n), d,\n                        z = clamp(.5 + 5. * (g - d), 0., 1.) )\n                            - .1 * z * (1. - z);\n\n        o += mix(vec4(0, .7, .9, 1), vec4(1.3), pow(d, 2.5)) * w;\n        t += w;\n        w *= .6;\n    }\n    o /= t;\n}\n/**/\n\n/* Another shorter version (404 chars) *\nvoid mainImage(out vec4 o, vec2 u) {\n    o -= o;\n    vec2 R = iResolution.xy, q = (u - .5 * R) / R.y;\n    float t = 0., w = 1.;\n\n    for (int l=0; l++ < 2;) {\n        vec2 x = q * 4. / w;\n        float d = 1.;\n        for (int i=-2; i++ < 2;)\n            for (int j=-2; j++ < 2;) {\n                vec2 n = floor(x) + vec2(i, j); n += .5 + .5 * vec2(sin(n.x + n.y * 2. + iTime), cos(n.y - n.x + 2. * iTime));\n                float g = length(x - n), z = clamp(.5 + .5 * (g - d) / .1, 0., 1.);\n                d = mix(g, d, z) - .1 * z * (1. - z);\n            }\n\n        o += mix(vec4(0, .7, .9, 1), vec4(1.3), pow(d, 2.5)) * w;\n        t += w;\n        w *= .6;\n    }\n\n    o /= t;\n}\n**/\n\n/* Even shorter version (408 chars) *\nvoid mainImage(out vec4 o, vec2 u) {\n    o -= o;\n    vec2 R = iResolution.xy, q = (u - .5 * R) / R.y;\n    float t = 0., w = 1.;\n\n    for (int l=0; l++ < 2;) {\n        vec2 x = q * 4. / w, f = floor(x);\n\n        float d = 1.;\n        for (int i=-2; i++ < 2;)\n            for (int j=-2; j++ < 2;) {\n                vec2 n = f + vec2(i, j); n += .5 + .5 * vec2(sin(n.x + n.y * 2. + iTime), cos(n.y - n.x + 2. * iTime));\n                float g = length(x - n), z = clamp(.5 + .5 * (g - d) / .1, 0., 1.);\n                d = mix(g, d, z) - .1 * z * (1. - z);\n            }\n\n        o += mix(vec4(0, .7, .9, 1), vec4(1.3), pow(d, 2.5)) * w;\n        t += w;\n        w *= .6;\n    }\n\n    o /= t;\n}\n**/\n\n/* Shorter version (409 chars) *\nvoid mainImage(out vec4 o, vec2 u) {\n    o -= o;\n    vec2 R = iResolution.xy, q = (u - .5 * R) / R.y;\n    float t = 0., w = 1.;\n\n    for (int l=0; l++ < 2;) {\n        vec2 x = q * 4. / w, f = floor(x);\n\n        float d = 1.;\n        for (int i=-2; i++ < 2;)\n            for (int j=-2; j++ < 2;) {\n                vec2 n = f + vec2(i, j), p = n + .5 + .5 * vec2(sin(n.x + n.y * 2. + iTime), cos(n.y - n.x + 2. * iTime));\n                float g = length(x - p), z = clamp(.5 + .5 * (g - d) / .1, 0., 1.);\n                d = mix(g, d, z) - .1 * z * (1. - z);\n            }\n\n        o += mix(vec4(0, .7, .9, 1), vec4(1.3), pow(d, 2.5)) * w;\n        t += w;\n        w *= .6;\n    }\n\n    o /= t;\n}\n**/\n\n/* Original version (414 chars) *\nvoid mainImage(out vec4 o, vec2 u) {\n    o -= o;\n    vec2 R = iResolution.xy, q = (u - .5 * R) / R.y;\n    float t = 0., w = 1.;\n\n    for (int l=0; l < 2; l++) {\n        vec2 x = q * 4. / w, f = floor(x);\n\n        float d = 1.;\n        for (int i=-1; i < 2; i++) {\n            for (int j=-1; j < 2; j++) {\n                vec2 n = f + vec2(i, j), p = n + .5 + .5 * vec2(sin(n.x + n.y * 2. + iTime), cos(n.y - n.x + 2. * iTime));\n                float g = length(x - p), z = clamp(.5 + .5 * (g - d) / .1, 0., 1.);\n                d = mix(g, d, z) - .1 * z * (1. - z);\n            }\n        }\n\n        o += mix(vec4(0, .7, .9, 1), vec4(1.3), pow(d, 2.5)) * w;\n        t += w;\n        w *= .6;\n    }\n\n    o /= t;\n}\n**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}