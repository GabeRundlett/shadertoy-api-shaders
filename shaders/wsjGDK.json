{
    "Shader": {
        "info": {
            "date": "1550099984",
            "description": "Modeling surface tension using a mixture of particles and continuum algorithms. Mouse does a thing.\n",
            "flags": 32,
            "hasliked": 0,
            "id": "wsjGDK",
            "likes": 27,
            "name": "A Gooey Mess",
            "published": 3,
            "tags": [
                "surfacetension"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 1201
        },
        "renderpass": [
            {
                "code": "vec2 R;\nvec4 T (vec2 U) {\n\treturn texture(iChannel3,U/R);\n}\nvec4 C (vec2 U) {\n\treturn texture(iChannel2,U/R);\n}\nvec4 D (vec2 U) {return texture(iChannel3,U/R);}\nvec4 col (vec2 U) {\n\tvec4 me = T(U);\n    me = T(U);\n    vec4 c = C(U);\n    vec3 no = normalize(vec3(c.zy,.1));\n    return 0.5-0.5*c.z*sin((1.7+1e2*me.w+me.z)*vec4(1,2,3,4));\n\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n   R = iResolution.xy;\n   Q = col(U);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Particle tracking\nvec2 R;\nvec4 A (vec2 U) {return texture(iChannel0,U/R);}\nvec4 B (vec2 U) {return texture(iChannel1,U/R);}\nvec4 C (vec2 U) {return texture(iChannel2,U/R);}\nvec4 D (vec2 U) {return texture(iChannel3,U/R);}\nfloat man (vec2 U) {return abs(U.x)+abs(U.y);}\nvoid X (vec2 U, inout vec4 Q, vec2 u) {\n    vec4 p = A(U+u);\n    if (length(p.xy - U) < length(Q.xy-U)) Q = p;\n    \n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\tR = iResolution.xy;\n \tQ = A(U);\n \tvec4 c = C(U);\n \t// measure neighborhood\n \tfor (int x = -1; x <= 1; x++)\n     for (int y = -1; y <= 1; y++)\n      X(U,Q,vec2(x,y));\n    // if neares cell is far, make one up\n    if (length(c.xy)<0.1&&man(Q.xy-U)>2.) Q.xyw = vec3(U,sign(floor(3.*c.w+0.5)));\n        \n \tQ.xy += D(Q.xy).xy;\n    // init\n    if (iFrame < 1) {\n        vec2 u = U;\n        U = floor(u);\n        Q.xy = U;\n        Q.z = 1.;\n        Q.w = sign((U.y-0.5*R.y));\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Blur pass 1\nvec2 R;\nvec4 A (vec2 U) {return texture(iChannel0,U/R);}\nvec4 B (vec2 U) {return texture(iChannel1,U/R);}\nvec4 C (vec2 U) {return texture(iChannel2,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\tR = iResolution.xy;\n\tQ = vec4(0);\n \tfor (float i = -N ; i <= N ; i++) {\n \t\tvec4 a = A(U+vec2(i,0));\n        vec4 c = C(U+vec2(i,0));\n        float s = smoothstep(1.1,.9,length(U+vec2(i,0)-a.xy));\n        vec4 x = vec4(0,0,a.w*s,c.z);\n        Q += x*sqrt(FORCE_RANGE)/FORCE_RANGE*exp(-i*i*0.5/FORCE_RANGE);\n \t}\n \t\t\n \t\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Blur pass 2\nvec2 R;\nvec4 A (vec2 U) {return texture(iChannel0,U/R);}\nvec4 B (vec2 U) {return texture(iChannel1,U/R);}\nvec4 C (vec2 U) {return texture(iChannel2,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\tR = iResolution.xy;\n\tQ = vec4(0);\n \tfor (float i = -N ; i <= N ; i++) {\n \t\tvec4 c = B(U+vec2(0,i));\n        Q += c*sqrt(FORCE_RANGE)/FORCE_RANGE*exp(-i*i*0.5/FORCE_RANGE);\n \t}\n \tvec4 \n        n = C(U+vec2(0,1)),\n        e = C(U+vec2(1,0)),\n        s = C(U+vec2(0,-1)),\n        w = C(U+vec2(-1,0));\n \tQ = clamp(Q,-1.,1.);\n   n = C(U+vec2(0,1));\n   e = C(U+vec2(1,0));\n   s = C(U-vec2(0,1));\n   w = C(U-vec2(1,0));\n   Q.xy = vec2(e.w-w.w,n.w-s.w);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Fluid\nvec2 R;\nvec4 A (vec2 U) {return texture(iChannel0,U/R);}\nvec4 B (vec2 U) {return texture(iChannel1,U/R);}\nvec4 C (vec2 U) {return texture(iChannel2,U/R);}\nvec4 D (vec2 U) {return texture(iChannel3,U/R);}\nvec4 T (vec2 U) {\n    return D(U-D(U).xy);\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n   R = iResolution.xy;\n   Q = T(U);\n   vec4 n,e,s,w;\n   n = T(U+vec2(0,1));\n   e = T(U+vec2(1,0));\n   s = T(U-vec2(0,1));\n   w = T(U-vec2(1,0));\n   vec4 c = C(U);\n   // xy : velocity, z : pressure, w : spin\n   Q.x -= .25*(e.z-w.z+Q.w*(n.w-s.w));\n   Q.y -= .25*(n.z-s.z+Q.w*(e.w-w.w));\n   Q.z  = .25*((s.y-n.y+w.x-e.x)+(n.z+e.z+s.z+w.z));\n   Q.w  = .25*((n.x-s.x+w.y-e.y)-(n.w+e.w+s.w+w.w));\n   Q.xy = mix(Q.xy*.999,0.25*(n+e+s+w).xy,0.2);\n   // blurred particles force\n   Q.xy += .001*c.z*c.xy;\n   // gravity\n   Q.y -= c.z/1000.;\n   if (length(Q.xy)>.5) Q.xy = .5*normalize(Q.xy);\n   // boundary conditions\n   if( iFrame < 1) Q = vec4(0);\n   if (U.x<7.||R.x-U.x<7.||U.y<7.||R.y-U.y<7.) Q.xy *= 0.8;\n   vec2 m = (U-iMouse.xy)/dot(U-iMouse.xy,U-iMouse.xy);\n    if (iMouse.z > 0.) Q.xy = clamp(Q.xy+.2*(vec2(-m.y,m.x))*exp(-.0001*length(U-iMouse.xy)),vec2(-1),vec2(1));\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// lower to improve frame rate\n#define N 6.\n\n#define FORCE_RANGE vec4(0,0,3,3)\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}