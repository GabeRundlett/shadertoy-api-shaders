{
    "Shader": {
        "info": {
            "date": "1639977359",
            "description": "Golfing lomateron's fluid shader down to 30% of the original size, and a single buffer",
            "flags": 32,
            "hasliked": 0,
            "id": "7t3SDf",
            "likes": 65,
            "name": "Simplest detailed fluid",
            "published": 3,
            "tags": [
                "simulation",
                "fluid",
                "convolution",
                "2tweets",
                "golf"
            ],
            "usePreview": 0,
            "username": "davidar",
            "viewed": 1315
        },
        "renderpass": [
            {
                "code": "M {\n    r = 1.-A().zzzz;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "M {\n    r *= 0.;\n    for(vec2 i = vec2(-7); ++i.x < 7.;) for(i.y = -7.; ++i.y < 7.;) {\n        vec2 v = A(i).xy;                          // neighbour velocity\n        r += A(i).z                                // neighbour mass\n                * exp(-dot(v+i,v+i)) / 3.14        // normalised Gaussian\n                * vec4(mix(v+v+i, v, A(i).z),1,1); // velocity contribution\n    }\n    r.xy /= r.z + 1e-6;\n    if(iFrame % 500 == 1) {\n        vec2 m = 4.*u/iResolution.xy-2.;\n        r += vec4(m,1,0) * exp(-dot(m,m));\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define M void mainImage(out vec4 r, vec2 u)\n#define A(i) texelFetch(iChannel0,ivec2(i+u),0)",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}