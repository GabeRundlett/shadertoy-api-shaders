{
    "Shader": {
        "info": {
            "date": "1452867036",
            "description": "Just trying to get the hang of this, I created some \"seed\" animation, then fidgeted with the values for a few hours until I got something nifty enough together.   At some moments this looks interesting, at others crap. Such is life.",
            "flags": 0,
            "hasliked": 0,
            "id": "XsyGzR",
            "likes": 3,
            "name": "My first shadertoy, yay",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "sakri",
            "viewed": 549
        },
        "renderpass": [
            {
                "code": "mat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);//copy paste from thebookofshaders\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));//copy paste from thebookofshaders\n}\n\nvec3 getFragColorForTime(float time, float d, vec2 uv){\n    float moveDiv = 250.0;\n    float moveTime = time + 55787.0;\n    float moveValue = mod(moveTime , moveDiv) / moveDiv;\n    float rotation = sin(moveValue * 5.0 );\n    float scaleNum = moveValue / (moveValue * d);\n    float scaleOffset = cos(moveValue) * 10.0;\n    uv *= rotate2d( rotation );//apply rotation matrix\n    uv -= vec2(scaleOffset);//apply scale matrix\n    uv *= scale( vec2(scaleNum) );\n    uv += vec2(scaleOffset);\n    \n    vec2 xy = vec2( cos(uv.x), sin(uv.y) );\n    float div = 100.0;\n    float colorValue = mod(moveTime * xy.x * xy.y , div) / div;\n\treturn vec3(smoothstep(0.5, 0.7, colorValue));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    float d = max(iResolution.x, iResolution.y);\n\tvec2 uv = mod(fragCoord.xy , d);\n    vec3 color = getFragColorForTime(iTime, d, uv);//\"oldest value\", then \"smoooth\"\n    for(float i=0.01; i<0.3; i+=0.01){\n    \tcolor = mix(getFragColorForTime(iTime + i, d, uv), color, 0.82);\n    }\n    fragColor = vec4(smoothstep(0.5, 0.7, color), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}