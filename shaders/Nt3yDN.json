{
    "Shader": {
        "info": {
            "date": "1659791762",
            "description": "reference: https://twitter.com/Yugemaku/status/1555776471058112513",
            "flags": 0,
            "hasliked": 0,
            "id": "Nt3yDN",
            "likes": 36,
            "name": "twisted-rotation on grid (211ch)",
            "published": 3,
            "tags": [
                "2d",
                "2tweets",
                "short",
                "golf",
                "reproduction"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 595
        },
        "renderpass": [
            {
                "code": "// more readable version below\n\n\n/**/ // --- -3 chars by coyote\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    u -= O.xy = iResolution.xy/2.;\n    u *= 1.6/O.y;\n    u *= mat2(cos( tanh(6.*modf(3.-length(u)+iTime*.8, O.x) -3. )/3.98\n                   + .5*O.x\n                   + vec4(0,33,11,0) ) );\n    O = 1.2 - .8 * min( u = abs( mod(u, .2) - .1 ) / fwidth(u), u.y).xxxx; \n}\n\n\n\n\n\n/** // --- 214 chars:  -9 chars by coyote, -1 by Fab, -1 by Xor\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    u -= O.xy = iResolution.xy/2.;\n    u *= 1.6/O.y;\n    u *= mat2(cos( .5*ceil(O += length(u) - iTime*.8 -O) + tanh(6.* fract(O) -3. ) /3.98\n                   + vec4(0,11,33,0) ) ); \n    O = 1.2 - .8 * min( u = abs( mod(u, .2) - .1 ) / fwidth(u), u.y).xxxx; \n}\n\n\n\n\n\n/** // --- -17 chars by Xor\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2  R = iResolution.xy,\n          U = 8.*( u+u - R ) / R.y;\n    float l = .2* length(U) - .8* iTime;\n      U *= mat2(cos( .5*ceil(l) + tanh(6.* fract(l) -3. ) /3.98\n//    U *= mat2(cos( .5*ceil(l) - tanh(2. *cos(3.14*fract(l)))/3.86 \n                   +vec4(0,11,33,0) ));                // rotation( ease(l) )\n    U = abs( fract(U) - .5 ) / fwidth(U);              // antialiased lines\n    O += 1.2 - .8* min(U.x,U.y) -O; \n}\n\n\n\n\n\n\n/** // --- 242 chars\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2  R = iResolution.xy,\n          U = 8.*( u+u - R ) / R.y;\n    float l = .2* length(U) - .8* iTime;\n    U *= mat2(cos( ( tanh( 2. *sin(3.14*(fract(l)-.5)))/.964 + 2.*ceil(l) ) /4.\n                   +vec4(0,11,33,0) ));                // rotation( ease(l) )\n    U = abs( fract(U) - .5 ) / fwidth(U);              // antialiased lines\n    O += 1.2 - .8* min(U.x,U.y) -O; \n}\n\n\n\n\n \n/** // --- 280 chars \n\n#define E(x) ( tanh( 2. *sin(mod(x/2.+1.57,3.14)-1.57))/tanh(2.) + 2.*round(x/6.28) )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = 8.*( u+u - R ) / R.y, A;\n    float l = length(U) - 4.*iTime;\n // O = vec4( U.y < E(U.x) ); return;                  // display ease function\n    U *= mat2(cos( vec4(0,11,33,0) + .26*E(1.18*l) )); // rotation( E(l) )\n    \n    A = abs( fract(U)-.5 ) / fwidth(U);                // antialiased lines\n    O += 1.2 - .8* min(A.x,A.y) -O; \n}\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}