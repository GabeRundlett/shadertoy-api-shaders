{
    "Shader": {
        "info": {
            "date": "1456666659",
            "description": "Prevent tilling (3 samples)",
            "flags": 0,
            "hasliked": 0,
            "id": "MdGGW3",
            "likes": 9,
            "name": "Prevent tilling (3 samples)",
            "published": 3,
            "tags": [
                "texture",
                "repetition",
                "blend",
                "tilling",
                "opaque"
            ],
            "usePreview": 0,
            "username": "Zabidon",
            "viewed": 976
        },
        "renderpass": [
            {
                "code": "// Noise function is taken from here (https://www.shadertoy.com/view/4djSRW)\n\n#define HASHSCALE3 vec3(.1031, .1030, .0973)\nvec2 noise(vec2 p) {\n    vec3 p3 = fract(vec3(p.xyx) * HASHSCALE3);\n    p3 += dot(p3, p3.yzx+19.19);\n    return fract(vec2((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y));\n}\n\nvec2 random_uv(vec2 tuv, float offset) {\n    vec2 noise_of = noise(floor(tuv * vec2(1.0 / 3.0, 1.0 / 2.0)) + offset);\n    return (tuv + noise_of) * (sign(mod(noise_of, 0.001) - 0.0005));\n}\n\n// License: Do What The F**k You Want To But It's Not My Fault Public License v1 (WTFNMFPL-1.0)\n// Created by Osipov Kirill --- zabidon\n\n// iq wrote a similar shader using ONLY 2 samples\n// https://www.shadertoy.com/view/Xtl3zf\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 tuv = (30.0 + 29.0 * sin(iTime / 5.0)) * (uv - ((uv.x < 0.5) ? vec2(0.25, 0.5): vec2(0.75, 0.5)));\n    \n    //vec2 tuv = (5.0 + 2.0 * sin(iTime / 3.0)) * uv;    \n    //vec2 tuv = 5.0 * uv;\n    \n    vec2 new_uv = tuv;\n    float con1 = 0.25;\n    float con2 = 0.25;\n\n    vec2 new_tuv0 = tuv + (mod(new_uv.x, 3.0) < 1.5 ? vec2(0.0, 0.0): vec2(0.0, 1.0));\n    vec2 new_tuv1 = tuv + (mod(new_uv.x + 0.75, 3.0) < 1.5 ? vec2(0.25, 1.0): vec2(0.25, 0.0));\n    vec2 new_tuv2 = tuv + (mod(new_uv.x + 1., 3.0) < 1.5 ? vec2(1.0, 0.0): vec2(0.5, 1.0));\n    \n    vec2 random_tuv0 = random_uv(new_tuv0, 0.0);\n    vec2 random_tuv1 = random_uv(new_tuv1, 1.0);\n    vec2 random_tuv2 = random_uv(new_tuv2, 2.0);\n    \n    //vec4 white = vec4(.0, .0, 1.0, 1.0);\n    vec4 white = texture(iChannel0, random_tuv0);\n    //vec4 black = vec4(1.0, .0, .0, 1.0);\n    vec4 black = texture(iChannel0, random_tuv1);\n    //vec4 red = vec4(.0, 1.0, .0, 1.0);\n    vec4 red = texture(iChannel0, random_tuv2);\n\n    vec4 mix_fact = vec4(tuv, tuv);\n    mix_fact.z += 1.0;\n\n    mix_fact.yw += step(1.5, mod(mix_fact.xz, 3.0));\n    mix_fact.yw = abs(mod(mix_fact.yw, 2.0) - 1.0);\n    mix_fact.xz = abs(mod(mix_fact.xz, 1.5) - 0.75);\n\n    mix_fact.xz = smoothstep(0.5, 0.5 + con1, mix_fact.xz);\n    mix_fact.yw = smoothstep(0.5, 0.5 + con2, mix_fact.yw);\n    \n    // mix(mix(a,b,c),b,d) == mix(a,b,c+d-c*d)\n    vec2 mix_fact_12 = mix_fact.xz + mix_fact.yw - mix_fact.xz * mix_fact.yw;\n    vec4 unrep = mix(white, black, mix_fact_12.x);\n    unrep = mix(red, unrep, mix_fact_12.y);\n\n    vec4 rep = texture(iChannel0, tuv);\n\tfragColor = uv[0] > 0.5? rep: unrep;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}