{
    "Shader": {
        "info": {
            "date": "1485873382",
            "description": "Carpenter Brut's logo",
            "flags": 64,
            "hasliked": 0,
            "id": "XlyXDK",
            "likes": 10,
            "name": "Carpenter Brut",
            "published": 3,
            "tags": [
                "2d",
                "music",
                "outrun"
            ],
            "usePreview": 0,
            "username": "WuTangTan",
            "viewed": 1276
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\n#define LINE_THICKNESS 0.0015\n#define LINE_SHINE 0.0016\n\n#define POINT_SCALE 625.0\n\nvec2 hash( vec2 p ) // replace this by something better\n{\n\tp = vec2( dot(p,vec2(127.1,311.7)),\n\t\t\t  dot(p,vec2(269.5,183.3)) );\n\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise( in vec2 p )\n{\n    const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\n\tvec2 i = floor( p + (p.x+p.y)*K1 );\n\t\n    vec2 a = p - i + (i.x+i.y)*K2;\n    vec2 o = step(a.yx,a.xy);    \n    vec2 b = a - o + K2;\n\tvec2 c = a - 1.0 + 2.0*K2;\n\n    vec3 h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n\n\tvec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n\n    return dot( n, vec3(70.0) );\n\t\n}\n\nfloat colorStrength(float dist){\n \t   return 1.0 - smoothstep(LINE_THICKNESS - LINE_SHINE,\n                            LINE_THICKNESS + LINE_SHINE,\n                            dist);\n}\n\nvec2 rotate(vec2 pos, float rad){\n    mat2 rot = mat2(vec2(cos(rad), -sin(rad)), vec2(sin(rad), cos(rad)));\n    pos -= 0.5;\n    pos *= rot;\n    pos += 0.5;\n    return pos;\n}\n\nfloat segment(vec2 diff, vec2 dir, vec2 dim) {\n    float projDist \t= dot(diff, dir);\n\tfloat dist = 0.0;\n\n    dist += length(diff - dir * dim.x) * step(dim.x, projDist);\n    dist += length(diff) * (1.0 - step(0.0, projDist));\n    dist += length(diff - dir * projDist) * (step(0.0, projDist) - step(dim.x, projDist));\n    return dist - dim.y;\n}\n\nfloat line(vec2 st, float x1, float y1, float x2, float y2) {\n    vec2 lineStart = vec2(x1 / POINT_SCALE, y1 / POINT_SCALE);\n    vec2 lineEnd = vec2(x2 / POINT_SCALE, y2 / POINT_SCALE);\n    vec2 seg = lineEnd - lineStart;\n\treturn colorStrength(segment(st - lineStart, normalize(seg), vec2(length(seg), LINE_THICKNESS)));\n}\n\nfloat logoPart(vec2 st) {\n    float d = 0.0\n        + line(st, 313.0,015.0, 168.5,119.5) \n        + line(st, 168.5,119.5, 127.5,244.0)\n        + line(st, 127.5,244.0, 168.5,215.5)\n        + line(st, 168.5,215.5, 188.0,150.5)\n        + line(st, 188.0,150.5, 312.5,061.0)\n        + line(st, 312.5,061.0, 382.5,109.0)\n        + line(st, 382.5,109.0, 444.5,109.0)\n        + line(st, 444.5,109.0, 313.0,015.0)\n        \n        + line(st, 244.5,120.0, 205.5,148.5)\n        + line(st, 205.5,148.5, 312.0,149.5)\n        + line(st, 312.0,149.5, 358.5,177.0)\n        + line(st, 358.5,177.0, 392.5,177.0)\n        + line(st, 392.5,177.0, 312.5,120.5)\n        + line(st, 312.5,120.5, 244.5,120.0)\n        \n        + line(st, 301.5,157.5, 261.0,156.5)\n        + line(st, 261.0,156.5, 217.5,190.0)\n        + line(st, 217.5,190.0, 190.5,271.5)\n        + line(st, 190.5,271.5, 217.0,252.5)\n        + line(st, 217.0,252.5, 231.5,208.0)\n        + line(st, 231.5,208.0, 301.5,157.5)\n        \n        + line(st, 312.5,190.0, 267.5,189.0)\n        + line(st, 267.5,189.0, 242.5,207.5)\n        + line(st, 242.5,207.5, 313.0,208.5)\n        + line(st, 313.0,208.5, 401.5,279.0)\n        + line(st, 401.5,279.0, 393.5,254.5)\n        + line(st, 393.5,254.5, 312.5,190.0);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 st = fragCoord.xy / iResolution.xy;\n    st.y = st.y * -1. + 1.;\n\tst.x -= 0.25;\n    st.x *= iResolution.x/iResolution.y;\n    \n    vec3 color = vec3(0.);    \n    vec3 pink = vec3(247, 129, 226) / 255.;\n    \n    float d = 0.0;\n    float rotation = TWO_PI / 5.0;\n    vec2 uv = st;\n\td += logoPart(uv);\n\tuv = rotate(uv, rotation);\n\td += logoPart(uv);\n\tuv = rotate(uv, rotation);\n\td += logoPart(uv);\n\tuv = rotate(uv, rotation);\n\td += logoPart(uv);\n\tuv = rotate(uv, rotation);\n\td += logoPart(uv);\n    color = min(d, 1.0) * pink;\n    \n    float noiseValue = 0.0;\n    uv = st * 5.0;\n    uv += vec2(0.2, 1.0) * iTime;\n    mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n    noiseValue  = 0.5000*noise( uv ); uv = m*uv;\n    noiseValue += 0.2500*noise( uv ); uv = m*uv;\n    noiseValue += 0.1250*noise( uv ); uv = m*uv;\n    noiseValue += 0.0625*noise( uv ); uv = m*uv;\n    color -= (1.0-noiseValue)*0.5;\n    \n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 7006,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/carpenter_brut/roller-mobster?in=carpenter_brut/sets/carpenter-brut-ep-ii-black-bvs"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}