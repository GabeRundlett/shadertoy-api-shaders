{
    "Shader": {
        "info": {
            "date": "1434927038",
            "description": "This is a continuation of the ONE TWEET ray marching challenge. At 188 chars, I've got a long way to go ...\nCalling ALL size optimizers (coyote, FabriceNeyret2, Nrx and aiekick)\nPlease help me reduce this shader as much as possible.",
            "flags": 0,
            "hasliked": 0,
            "id": "XtsXz4",
            "likes": 9,
            "name": "Raymarch 153 chars",
            "published": 3,
            "tags": [
                "3d",
                "raymarching",
                "tweet",
                "2tc"
            ],
            "usePreview": 0,
            "username": "GregRostami",
            "viewed": 1096
        },
        "renderpass": [
            {
                "code": "// 134 chars - mathmasterzach took an already small shader, and made it SMALLER!!\n\nvoid mainImage(out vec4 o, vec2 u) {\n    o-=o;\n    for(vec4 p=iDate,t,i; i.x++<3e2;\n        o=sin( t = mod( p -= vec4(u/iResolution.y-.7,0,1)*o.x*.3,6.).wyxz-2.)-length(t.zy) );\n    o++; } /*\n        \n\n// 137 chars\n\n#define mainImage(o,u)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\nvec4 p = iDate, t;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\nfor(int i=0;i++<99;)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n    o=sin( t = mod( p -= vec4(u/iResolution.y-.8,0,1)*o.x*.3,6.).wyxz-3.)\t\\\n    -length(t.zy);o++\n\n\n//Fabrice does the impossible by shrinking this to almost ONE TWEET, 154 chars!!\n\nvoid mainImage(out vec4 o,vec2 u)\n{\n    o-=o;\n    vec4 p = iDate, t;\n    for(int i=0; i++<99;)\n        o = sin( t = mod( p -= vec4(u/iResolution.y-.8,0,1)*o.x*.3 , 6.).wyxz - 3. )\n            -length(t.zy);\n     o++;\n}\n\n\n//Fabrice (the master of reduction) replaced the texture function for a 171 char raymarcher!!\n\nvoid mainImage( inout vec4 f, vec2 u )\n{\n    vec4 p, t=p=f;\n    p.z = iDate.w;\n    for(int i=0; i<99; i++)\n        t = mod(p+=vec4(u/iResolution.y-.8,1,1)*t.x*.2, 6.)-3.,\n        f = sin(t.zyxw),\n        t = length(t.xy)-f;\n    f -= t;\n}\n\n\n//A big thanks to iq, the shader is now 188 chars:\n\nvoid mainImage( inout vec4 f, vec2 u )\n{\n    vec4 p, t=p=f;\n    p.z = iDate.w;\n    for(int i=0; i<90; i++)\n        t = mod(p+=vec4(u/iResolution.y-.8,1,1)*t.x*.2, 6.)-3.,\n        f = texture(iChannel0,t.zyx),\n        t = length(t.xy)-f;\n    f -= t;\n}\n\n\n//Original Shader at 191 chars:\n\nvoid mainImage( out vec4 f, vec2 u )\n{\n    vec4 p = vec4 (u/iResolution.y-.8,1,1), d=p, t, c;\n    p.z = iDate.w;\n\tfor(int i=0; i<90; i++)\n        t = mod(p += d*t.z*.2, 6.)-3.,\n        c = texture(iChannel0,t.zyx),\n        t = length(t.xy)-c,\n        f = c-t;\n}\n*/",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 26,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}