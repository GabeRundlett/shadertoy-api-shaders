{
    "Shader": {
        "info": {
            "date": "1436086473",
            "description": "quadrilin perlin noise :252 chars \ncubic perlin noise : 269 chars    <-  Yes, the full equivalent of iq turbulent perlin noise. :-)\nquadrilin perlin noise + transform : 273 chars\n",
            "flags": 0,
            "hasliked": 0,
            "id": "MlsXDr",
            "likes": 31,
            "name": "perlin noise - 252 chars",
            "published": 3,
            "tags": [
                "2d",
                "noise",
                "perlin",
                "2tweets",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 3642
        },
        "renderpass": [
            {
                "code": "// quadrilin: 252 cubic:269   + 21 for noise transform\n\n#define h(n) fract(sin(n+vec2(0,157))*57.) \n#define N m=fract(u*s); l=dot(u*s-m,vec2(1,157));s+=s; m*=m*(3.-m-m); r= mix(h(l),h(++l),m.x); f+= mix(r.x,r.y,m.y)/s;\n//#define N m=fract(u); l=dot(u-m,vec2(1,157)); u*=mat2( 4,-3,3,4)*.4;s+=s; m*=m*(3.-m-m); r= mix(h(l),h(++l),m.x); f+= mix(r.x,r.y,m.y)/s;\n\nvoid mainImage( out vec4 f, vec2 u ) {\n    f -= f;\n    u = 8.*u/iResolution.y-vec2(7,4);   \n    vec2 m,r; float l,s=1.;\n    N N N N \n        \n// --- comment all below for brute noise, or chose your noise transform :\n    f = sin(f*20.+iDate.w);\n    //f = sin(f+f+iDate.w+u.xyyy);  // try u.xyyy *  .1 to 1.\n    //f = sin(f*u.xyyy*4.+iDate.w);\n}\n\n\n// -------------------------------------------------------------------------------\n\n/* // 255\nvec2 m,r;\nfloat l;\n\n#define h(n) fract(sin(n+vec2(0,157))*57.) \n\n\n#define N m=fract(u); l=dot(u-m,vec2(1,157)); u+=u; m*=m*(3.-m-m); r= mix(h(l),h(++l),m.x); f+= mix(r.x,r.y,m.y)\n\nvoid mainImage( inout vec4 f, vec2 u ) {\n    u = 8.*u/iResolution.y-vec2(7,4);    \n    N/2.; N/4.; N/8.; N/16.; // fbm   \n}\n*/\n\n\n\n\n/* // 280\nvec2 p,m,r;\n\nfloat N() {\n    m = fract(p);\n    float l = dot(p-m,vec2(1,157));  // why p-(p=fract(p)) not working ?\n // p *= mat2( 8, -6, 6, 8 )*.2; // if you really want bands rotation\n    p +=p;\n    m *= m*(3.-m-m);  // -14 chars without cubic interpolation\n#define h(n) fract(sin(n+vec2(0,157))*57.) \n    r = mix( h(l), h(++l),m.x);\n    return mix(r.x,r.y,m.y);\n}\n\nvoid mainImage( inout vec4 f, vec2 u ) {\n    u = 2.*u/iResolution.y-vec2(1.8,1);  \n   \n    p = 4.*u ;\n    f += .5*( N() + N()/2. + N()/4. + N()/8. ); // 2*fbm\n   \n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}