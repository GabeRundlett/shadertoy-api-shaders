{
    "Shader": {
        "info": {
            "date": "1489539146",
            "description": "Snow day shader practice",
            "flags": 4,
            "hasliked": 0,
            "id": "XdfyDS",
            "likes": 13,
            "name": "Groovy Mood",
            "published": 3,
            "tags": [
                "raymarch"
            ],
            "usePreview": 0,
            "username": "lherm",
            "viewed": 1628
        },
        "renderpass": [
            {
                "code": "#define E .005\n#define F 40.\n#define T iTime\n\n#define PSD pow(abs(textureLod(iChannel0, vec2(.5), 0.).r), 2.)\n\n#define r(p, a) {p = p * cos(a) + vec2(p.y, -p.x) * sin(a);}\nfloat sdBox(vec3 p, vec3 b)\n{\n    vec3 d = abs(p) - b;\n    return min(max(d.x,max(d.y,d.z)), 0.) + length(max(d, 0.));\n}\n\nfloat map(vec3 p)\n{\n    float d = 1e5;\n    for (int i = 0; i < 3; i++)\n    {\n        p = abs(p);\n        p = .5 - abs(p)*1.5/clamp(dot(p,p), -1., 1.);\n        r(p.xz, T + PSD);\n        r(p.yz, T);\n        float b = sdBox(p, vec3(.01, 10., .01));\n        d = min(d, b);\n        b = sdBox(p, vec3(10., .05 + .5 * PSD, .5));\n        d = min(d, b);\n    }\n    return d;\n}\n\nvec3 calcNormal(vec3 p)\n{\n    vec2 e = vec2(E, 0);\n    return normalize(vec3(\n        map(p+e.xyy)-map(p-e.xyy),\n        map(p+e.yxy)-map(p-e.yxy),\n        map(p+e.yyx)-map(p-e.yyx)\n        ));\n}\n\nvoid mainImage( out vec4 O, in vec2 w )\n{\n\tvec2 R = iResolution.xy, u = (2.*w-R) / R.y;\n    vec3 ro = vec3(u, 1), rd = normalize(vec3(u, -1)), p, n;\n    \n    float t = 0., x;\n    for (int i = 0; i < 100; i++)\n    {\n        p = ro + rd * t;\n        x = map(p);\n        t += x;\n        if (x < E || t > F) break;\n    }\n    \n    if (t > F)\n    {\n        vec3 col = abs(sin(floor(p.z*.05) * PSD*.5 * vec3(1., 5., 4.) + T));\n        O = vec4(col, 1.);\n        return;\n    }\n    \n    n = calcNormal(p);\n    \n    // Lighting\n    \n    vec3 lp = vec3(1, 3, 5);\n    vec3 ld = lp - p;\n    float len = length(ld);\n    ld /= len;\n    float atten = max(1., 1./len);\n    float amb = .25;\n    float diff = max(dot(ld, n), 0.);\n    float spec = pow(max(dot(reflect(-ld, n), ro-p), 0.), 8.);\n    vec3 col = vec3(.8, .1, .5) * (((diff*.9+amb*.5)*atten)+spec*.5);\n\tO = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "mic",
                        "id": 32,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/mic.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}