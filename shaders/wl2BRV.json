{
    "Shader": {
        "info": {
            "date": "1599408695",
            "description": "not cheap by any means, doubles as a terrible blur shader (see L6)",
            "flags": 0,
            "hasliked": 0,
            "id": "wl2BRV",
            "likes": 4,
            "name": "hmmm today i will bloom",
            "published": 3,
            "tags": [
                "blur",
                "bloom",
                "singlepass"
            ],
            "usePreview": 0,
            "username": "thefox231",
            "viewed": 382
        },
        "renderpass": [
            {
                "code": "#define samplerange 0.03\n#define strength (iMouse.x / iResolution.x * 0.5)\n#define horizratio 1.8\n#define threshold 0.8\n\n// #define blur // pretty shitty but like, it works, so,\n\nfloat sum(vec2 p) {return p.x + p.y;}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 col = texture(iChannel0, uv).rgb;\n    #ifdef blur\n    col = vec3(0.0);\n    #endif\n    \n    for (float x = -samplerange * horizratio; x < samplerange * horizratio; x += 1. / iResolution.x) {\n        for (float y = -samplerange / horizratio; y < samplerange / horizratio; y += 1. / iResolution.y) {\n\t\t\tfloat dist = abs(x) + abs(y);\n            float amp = dist / samplerange * strength * 0.1;\n            \n            vec3 sampleCol = texture(iChannel0, uv + vec2(x, y)).rgb;\n            sampleCol = sqrt(sampleCol);\n            \n            #ifndef blur\n            if ((sampleCol.r + sampleCol.g + sampleCol.b) / 3.0 > threshold)\n            #endif\n            \tcol += sampleCol * amp * sum((1. / iResolution.xy) / vec2(samplerange * 2.0));\n        }\n    }\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}