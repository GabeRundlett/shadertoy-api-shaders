{
    "Shader": {
        "info": {
            "date": "1624272177",
            "description": "post processing",
            "flags": 0,
            "hasliked": 0,
            "id": "Nlj3RK",
            "likes": 9,
            "name": "line block",
            "published": 3,
            "tags": [
                "glitchart"
            ],
            "usePreview": 1,
            "username": "HanShaoqiu",
            "viewed": 512
        },
        "renderpass": [
            {
                "code": "float randomNoise(vec2 c)\n{\n\treturn fract(sin(dot(c.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat trunc(float x, float num_levels)\n{\n\treturn floor(x * num_levels) / num_levels;\n}\n\nvec2 trunc(vec2 x, vec2 num_levels)\n{\n\treturn floor(x * num_levels) / num_levels;\n}\n\nvec3 rgb2yuv(vec3 rgb)\n{\n\tvec3 yuv;\n\tyuv.x = dot(rgb, vec3(0.299, 0.587, 0.114));\n\tyuv.y = dot(rgb, vec3(-0.14713, -0.28886, 0.436));\n\tyuv.z = dot(rgb, vec3(0.615, -0.51499, -0.10001));\n\treturn yuv;\n}\n\nvec3 yuv2rgb(vec3 yuv)\n{\n\tvec3 rgb;\n\trgb.r = yuv.x + yuv.z * 1.13983;\n\trgb.g = yuv.x + dot(vec2(-0.39465, -0.58060), yuv.yz);\n\trgb.b = yuv.x + yuv.y * 2.03211;\n\treturn rgb;\n}\n\n#define _Frequency 1.0\n#define _TimeX 1.0\n#define _Amount 0.45\n#define _Offset 2.35\n#define _LinesWidth 1.0\n#define _Alpha 1.0\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n\t\tfloat TimeX = _TimeX*iTime*0.5;\n\t\tfloat strength = 0.0;\n\t\t//strength = 10.0;\n\t\tstrength = 0.5 + 0.5 * cos(TimeX * _Frequency);\n\t\t\n\t\tTimeX *= strength; \n\t\t\n\t\t//\t[1] 生成随机强度梯度线条\n\t\tfloat truncTime = trunc(TimeX, 4.0);\n\t\tfloat uv_trunc = randomNoise(trunc(uv.yy, vec2(8, 8)) + 100.0 * truncTime);\n\t\tfloat uv_randomTrunc = 6.0 * trunc(TimeX, 24.0 * uv_trunc);\n\t\t\n\t\t// [2] 生成随机非均匀宽度线条\n\t\tfloat blockLine_random = 0.5 * randomNoise(trunc(uv.yy + uv_randomTrunc, vec2(8.0 * _LinesWidth, 8.0 * _LinesWidth)));\n\t\tblockLine_random += 0.5 * randomNoise(trunc(uv.yy + uv_randomTrunc, vec2(7, 7)));\n\t\tblockLine_random = blockLine_random * 2.0 - 1.0;\n\t\tblockLine_random = sign(blockLine_random) * clamp((abs(blockLine_random) - _Amount) / (0.4),0.0,1.0);\n\t\tblockLine_random = mix(0.0, blockLine_random, _Offset);\n\t\t\n\t\t\n\t\t// [3] 生成源色调的blockLine Glitch\n\t\tvec2 uv_blockLine = uv;\n\t\tuv_blockLine = clamp(uv_blockLine + vec2(0.1 * blockLine_random, 0.0),0.0,1.0);\n\t\tvec4 blockLineColor = texture(iChannel0, abs(uv_blockLine));\n\t\t\n\t\t// [4] 将RGB转到YUV空间，并做色调偏移\n\t\t// RGB -> YUV\n\t\tvec3 blockLineColor_yuv = rgb2yuv(blockLineColor.rgb);\n\t\t// adjust Chrominance | 色度\n\t\tblockLineColor_yuv.y /= 1.0 - 3.0 * abs(blockLine_random) * clamp(0.5 - blockLine_random,0.0,1.0);\n\t\t// adjust Chroma | 浓度\n\t\tblockLineColor_yuv.z += 0.125 * blockLine_random * clamp(blockLine_random - 0.5,0.0,1.0);\n\t\tvec3 blockLineColor_rgb = yuv2rgb(blockLineColor_yuv);\n\t\n\t\n\t// [5] 与源场景图进行混合\n\tvec4 sceneColor = texture(iChannel0, uv);\n    // Output to screen\n    fragColor = mix(sceneColor, vec4(blockLineColor_rgb, blockLineColor.a), _Alpha);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}