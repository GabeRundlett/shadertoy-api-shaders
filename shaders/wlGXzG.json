{
    "Shader": {
        "info": {
            "date": "1582990793",
            "description": "Playing with space.",
            "flags": 0,
            "hasliked": 0,
            "id": "wlGXzG",
            "likes": 1,
            "name": "Spiraly bars",
            "published": 3,
            "tags": [
                "spiral"
            ],
            "usePreview": 0,
            "username": "Axioplase",
            "viewed": 310
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592\n\nvec3 bars(vec2 uv) {\n   if (fract(uv.x*15.) < .5) {\n         return vec3(0.);\n    } else {\n        return vec3(1.);\n    }\n }\n\nvoid wobble(vec2 uv, out vec3 col, float radius, float phase, float amplitude) {\n   if (length(uv) < radius) {\n        float theta = cos(phase + iTime*amplitude) * amplitude* PI * (radius - length(uv));\n        mat2 rot = mat2(cos(theta), -sin(theta), sin(theta), cos(theta));\n        vec2 uv2 = rot * uv;\n        col = bars(uv2);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = bars(uv);\n\twobble(uv, col, 0.3, 0., 3.5);\n\twobble(uv-vec2(0.6,-0.25), col, 0.25, PI/4., 2.);    \n\twobble(uv-vec2(-0.6,0.25), col, 0.20, 3.*PI/4., 3.);    \n\twobble(uv-vec2(0.6,0.25), col, 0.15, PI/2., 4.);    \n\twobble(uv-vec2(-0.6,-0.25), col, 0.15, 0., 5.);    \n \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}