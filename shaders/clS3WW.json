{
    "Shader": {
        "info": {
            "date": "1673281826",
            "description": "vonoroi",
            "flags": 0,
            "hasliked": 0,
            "id": "clS3WW",
            "likes": 5,
            "name": "random points variations",
            "published": 3,
            "tags": [
                "vonoroi"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 266
        },
        "renderpass": [
            {
                "code": "float f_n_rand(float n){\n    n += n*0.1338;\n    n *= n+ 0.2193;\n    n = sin(n*396.393+n*2.34)*2341.123;\n    return fract(n);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //needed for anti aliasing ?\n    float n_ratio_1to_iresx = 1./ iResolution.x;\n    \n    vec2 o_trn_fc_nor = fragCoord.xy / iResolution.xy;\n    vec2 o_trn_mo_nor = iMouse.xy / iResolution.xy;\n    \n    float n_ratio_x_to_y = iResolution.x / iResolution.y; \n    \n    vec2 o_trn_fc_nor_offset = (o_trn_fc_nor - vec2(0.5))*vec2(n_ratio_x_to_y, 1.);\n    vec2 o_trn_mo_nor_offset = (o_trn_mo_nor - vec2(0.5))*vec2(n_ratio_x_to_y, 1.);\n    o_trn_fc_nor_offset*=2.5;\n\n    float n_its = 50.;\n    float n_dmin = 1.;\n    float n_it_dmin = 0.;\n    float n_dprod = 1.;\n    float n_dsqrtprod = 1.;\n    float n_dist_secondmin = 1.;\n    for(float n_it = 0.; n_it < n_its; n_it+=1.){\n        float n_t = floor(iTime)*0.1;\n        vec2 o_prand = vec2(\n            (f_n_rand(n_it+n_t)-0.5)*(2.+(iResolution.x/iResolution.y)), \n            (f_n_rand(n_it*3.123+n_t)-0.5)*2.\n        );\n        \n        float n_dist = length(o_trn_fc_nor_offset - o_prand);\n        n_dprod *= n_dist;\n        n_dsqrtprod *= pow(n_dist, 1./10.);\n        if(n_dist < n_dmin){\n            n_dmin = n_dist; \n            n_it_dmin = n_it;\n        }\n        if(n_dist < n_dist_secondmin && n_dist > n_dmin){\n            n_dist_secondmin = n_dist;\n        }\n    }\n    \n    float[] a_n = float[](\n        n_dmin, \n        sqrt(n_dmin), \n        n_it_dmin /n_its, \n        sin(n_dmin*6.2831*20.), \n        sqrt(n_dsqrtprod/n_its), \n        n_dprod/ 100000000000., \n        n_dist_secondmin\n        \n    );\n    float n_index = o_trn_fc_nor.x / (1. / float(a_n.length()));\n    float n = a_n[int(n_index)];\n    fragColor = vec4(n);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}