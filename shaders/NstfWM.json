{
    "Shader": {
        "info": {
            "date": "1656593216",
            "description": "A flame effect that lies somewhere between scrolling textures and a simulation. It works by approximating the airflow velocity and using that to alter the sampling distance. This creates nice wisps.",
            "flags": 32,
            "hasliked": 0,
            "id": "NstfWM",
            "likes": 7,
            "name": "Fire Plume (No Particles)",
            "published": 3,
            "tags": [
                "flame"
            ],
            "usePreview": 0,
            "username": "sdfgeoff",
            "viewed": 567
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec3 hash33(vec3 p3)\n{\n\tp3 = fract(p3 * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy + p3.yxx)*p3.zyx);\n}\n\n\nvec3 neon(float val, vec3 color) {\n\tfloat r = clamp(val, 0.0, 1.0);\n    float r2 = r * r;\n    float r4 = r2 * r2;\n    float r16 = r4 * r4;\n    vec3 c = color;\n    vec3 c2 = pow(color, vec3(4.0)); // A darker, more saturated version of color\n    \n\tvec3 outp = vec3(0.0);\n\toutp += c2 * r2; // Darker color falloff\n\toutp += c * r4; // Specified Color main part\n\toutp += vec3(1.0) * r16; // White core\n\treturn outp;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 delta = vec2(0.001, 0.01);\n    float heat_below = texture(iChannel0, uv + vec2(0.0, -0.01), 2.0).a;\n    float airflow_velocity = heat_below;\n    delta *= airflow_velocity;\n    \n    float heat_below_left = texture(iChannel0, uv + vec2(delta.x, -delta.y)).a;\n    float heat_below_right = texture(iChannel0, uv + vec2(-delta.x, -delta.y)).a;\n    \n    vec3 rand = hash33(vec3(fragCoord, iTime)) - 0.5;\n    vec3 rand1 = hash33(vec3(iTime));\n    \n    float diff = (heat_below_right - heat_below_left);\n    float ratio = clamp(-diff * 1.0 + rand1.x * 0.5, -0.5, 0.5);\n    float heat = mix(heat_below_left, heat_below_right, ratio + 0.5);\n    heat *= 0.97;\n    \n    \n    if (iFrame == 0) {\n        heat = 0.0;\n    }\n    float heat_source = clamp(1.0 - length((uv - vec2(0.35 + rand.y * 0.1 + rand1.y * 0.2, 0.0)) * vec2(2.0, 1.0)) * 10.0, 0.0, 1.0);\n    \n    \n    heat += heat_source;\n    \n    fragColor = vec4(neon(pow(heat * 0.3, 1.0), vec3(1.0, 0.5, 0.1)),heat);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}