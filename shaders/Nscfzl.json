{
    "Shader": {
        "info": {
            "date": "1657124933",
            "description": "Cityscape / Raceway thing - Raymarching \nit speeds up to racing fast - just sit back and enjoy!\nturn the volume up! \nif music isnt playing - just stop/rewind and play again.",
            "flags": 64,
            "hasliked": 0,
            "id": "Nscfzl",
            "likes": 30,
            "name": "Raceway City",
            "published": 3,
            "tags": [
                "raymarching",
                "repetition",
                "city"
            ],
            "usePreview": 0,
            "username": "byt3_m3chanic",
            "viewed": 537
        },
        "renderpass": [
            {
                "code": "/** \n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n   \n    Raceway City | Music Glow Worm | Matrix & Futurebound\n    07/06/22 | byt3_m3chanic\n\n\n*/\n\n#define M           iMouse\n#define R           iResolution\n#define T           iTime\n\n#define PI          3.14159265359\n#define PI2         6.28318530718\n\n#define S smoothstep\n#define L length\n\n#define Q(a) mat2(cos(a + vec4(3,14,36,3)))\n#define H21(a) fract(sin(dot(a,vec2(21.23,41.32)))*43758.5453)\n\n#define N(p,e) vec3(map(p-e.xyy).x,map(p-e.yxy).x,map(p-e.yyx).x)\n#define H(hs) .5+.4*cos(PI2*hs+2.*vec3(.95,.97,.90)*vec3(.95,.55,.15))\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 uv) {\n    vec2 i = floor(uv),\n         f = fract(uv);\n    // Four corners in 2D of a tile\n    float a = H21(i),\n          b = H21(i + vec2(1.0, 0.0)),\n          c = H21(i + vec2(0.0, 1.0)),\n          d = H21(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3. - 2.0 * f);\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b)* u.x * u.y;\n}\n\nfloat fbm ( in vec2 uv, float oct) {\n    float v = .0,a = .5;\n    vec2 shift = vec2(100.0);\n    for (float i = 0.; i < oct; ++i) {\n        v += a * noise(uv);\n        uv = Q(.15) * uv * 2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\n//scale\nconst float sz=3.,hf=sz/2.,hz=hf*.25;\nconst vec2 vc = vec2(0,.5);\n\nvec3 hp,hitp;\nvec2 sid,idi;\nfloat time=0.,slow=.0,glow=.0,shs,ghs,ffs=0.;\n\n//@Shane / Path demos\nvec2 path(in float z){ \n    vec2 p1 =vec2(2.3*sin(z * .065), 2.4*sin(z * .045));\n    vec2 p2 =vec2(1.2*cos(z * .050), 2.1*cos(z * .125));\n    return p1 - p2;\n}\n\nvec2 map(in vec3 p) {\n    p.xy-=vec2(1.5,(ffs-.5));\n    vec2 r = vec2(1e5,0);\n\n \tvec2 track = p.xy - path(p.z);\n    vec3 q = vec3(track,p.z);\n    vec3 qq=q;\n    vec2 id=floor((q.xz+hf)/sz);\n    q.xz=mod(q.xz+hf,sz)-hf;\n\n    float f = L(q.y-1.)-.1;\n    \n    float hs=H21(id);\n    shs=hs;\n    idi=id;\n\n    if(hs>.65) {\n         vec3 pp = q;\n         pp.xz=abs(pp.xz)-(hf*.5);pp.y-=.75;\n\n         f = min(L(max(abs(pp)-vec3(.01,.5,.01),0.)),f);\n         float lm =L(pp+vec3(0,.5,0))-.095;\n         f = min(lm,f);\n         slow += .00003/(.00005+lm*lm);\n    }\n\n    p.xz=abs(q.xz)-hf;q.y-=.5;\n    float g = L(max(abs(q)-vec3(hz,hf+hs,hz),0.))-.015;\n    \n    if(f<r.x) {r=vec2(f,2);hp=q;}\n    if(g<r.x) {r=vec2(g,4);hp=qq;}\n\n    return r;\n}\n\nvoid mainImage(out vec4 O, vec2 F)\n{\n    //@Fabrice time motion blur\n    time =  T+ texture(iChannel1,F/8.).r * iTimeDelta;\n    \n    ffs=clamp((3.5-T*.08),0.,3.75);\n    float mt = mod(floor(T*.5),14.);\n    \n    float sp = clamp((3.+T)*.09,0.,11.);\n    float travelSpeed = sp*time;\n    \n    float alpha = 1.;\n    \n    vec2 uv = (2.*F.xy-R.xy)/max(R.x,R.y),\n         id= vec2(0);\n\n    \n    vec3 C = vec3(0),\n         p = vec3(0),\n         lp = vec3(0,0,-travelSpeed),\n         ro = vec3(0,0,.25);\n         \n    float crop = clamp((-.02)+(T*.04),0.,.6);\n    if(uv.y<crop&&uv.y>-crop){\n    \n    float x = M.xy==vec2(0) || M.z<0. ? 0.: (M.y/R.y*0.5-.25)*PI;\n    float y = M.xy==vec2(0) || M.z<0. ? mt>8.?PI:0.: (M.x/R.x*2.0-1.0)*PI;\n    ro.zy*=Q(x);\n    \n    ro +=lp; \n \tlp.xy += path(lp.z);\n    ro.xy += path(ro.z);\n\n    vec3 f=normalize(lp-ro),\n         r=normalize(cross(vec3(0,1,0),f)),\n         u=normalize(cross(f,r)),\n         c=ro+f*.65,\n         i=c+uv.x*r+uv.y*u,\n         rd = i-ro;\n         \n    rd.xy = Q(-path(lp.z+2.).x/ 24. )*rd.xy;\n    rd.xz = Q( y)*rd.xz;\n\n    float clouds = max(rd.y,0.0)*1.5;\n    vec2 sv = .75*rd.xz/rd.y;\n    \n    clouds += 1.45*(-3.0+4.*S(-0.2,0.85,fbm(sv+vec2(0,T*.2),6.)));\n    clouds = mix(clouds,1.,clamp(abs(sv.y)*.075,0.,1.));\n    vec3 fde = vec3(0.212,0.212,0.212);\n    \n    vec3 sky = mix(vec3(.3),fde,clamp(clouds,0.,1.));\n    \n    float d=0.,m=0.;\n    for(int i=0; i++<164 && d<85.; ){\n        p = ro + rd * d;\n        vec2 t = map(p);\n        d+=i<32?t.x*.65:t.x;\n        m=t.y;\n    }\n\n    sid=idi;\n    hitp=hp;\n    glow=slow;\n    ghs=shs;\n\n    float t = map(p).x,\n         sd = 1.,\n         z=.01,\n         hs = H21(sid);\n  \n    vec2 e = vec2(d*.001,0);\n    vec3 l = normalize(vec3(-5,-15,5)),\n         n = t - N(p,e);\n         n = normalize(n);\n\n    for(float z=.01;z<16.;) {\n        float h = map(p+l*z).x;\n        if(h<.001) {sd=0.;break;}\n        sd = min(sd, 18.*h/z);\n        z+=h;\n        if(sd<.001) break;\n    }\n\n    float ch = mod(sid.x+sid.y,2.)*2.-1.,\n          diff = clamp(dot(n,l),.1,.9);\n          diff = mix(diff,diff*sd,.75);\n\n    vec3 h = ch>.5?vec3(.2,0,0):vec3(.7);\n    \n    if(m==2.) {\n        h=vec3(.15);\n        float sc = 1./sz,\n              px=4./R.x;\n              \n        p.xz-=hf;\n        vec2 f = fract(hitp.xz*sc)-.5;\n        float e = min(L(f.x)-.2,L(f.y)-.2),\n              d=S(px,-px,abs(abs(e)-.01)-.005);\n\n        e=S(px,-px,e);\n        h=mix(h,vec3(.01),e);\n        h=mix(h,vec3(.7),d);\n\n        float fy=mod(f.y+.05,.1)-.05;\n        e = max(L(abs(f.x)-.01)-.001,L(fy)-.03);\n\n        e=S(px,-px,e);\n        h=mix(h,vec3(.4,.2,.0),e);\n    }\n    \n    if(m==3.) h=vec3(.5);\n    if(m==4.) {\n        vec3 f = floor(hitp*16.);\n        float hs = min(H21(f.xy),H21(f.zy));\n        float lvl = .925+ghs;\n        h=hitp.y>-lvl?vec3(.05):vec3(.2);\n        if(hs>.5 &&hitp.y>-lvl) h=hs>.75?vec3(.9,.9,.2):vec3(.4);\n        if(hs<.15&&hitp.y>-lvl) h=vec3(.025);\n    }\n    \n    C = diff*h;\n    \n    glow=clamp(glow,0.,.95);\n    C = mix(C,vec3(.9,.9,.6),glow);\n    C = mix(C,fde,1.-exp(-.00004*d*d*d));\n    C = d<85. ? C : sky;\n    }\n    O = vec4(pow(C,vec3(.4545)),1);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 29280,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/drrrrrrrrrrrrrrrrrrrrumnbassssssssssssss/glowworm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}