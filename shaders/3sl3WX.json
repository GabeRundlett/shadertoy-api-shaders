{
    "Shader": {
        "info": {
            "date": "1547667502",
            "description": "Don't put this in your hair.",
            "flags": 32,
            "hasliked": 0,
            "id": "3sl3WX",
            "likes": 5,
            "name": "Low pH",
            "published": 3,
            "tags": [
                "glitch",
                "corrosion",
                "acid",
                "buffers"
            ],
            "usePreview": 0,
            "username": "Blokatt",
            "viewed": 825
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    float cols = 1. + iTime * .25;\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv) * cols;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec4 tex(in vec2 uv){\n\treturn texture(iChannel0, uv);\n}\n\nvec4 getError(in vec2 uv){\n    float cols = 1. + iTime * .25;\n\tvec3 old = texture(iChannel0, uv).rgb;\n    vec3 new = (floor(tex(uv) * cols) / cols).rgb;\n    return vec4(old - new, 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec4 pixel = vec4(1. / iResolution.xy, -(1. / iResolution.y), 0.);\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = tex(uv)\n        + getError(uv + pixel.xz) *  (7. / 16.)\n        + getError(uv - pixel.xz) *  (3. / 16.)\n        + getError(uv - pixel.zy) *  (5. / 16.)\n        + getError(uv + pixel.zy) *  (1. / 16.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec4 tex(in vec2 uv){\n\treturn texture(iChannel0, uv);\n}\n\nvec4 getError(in vec2 uv){\n    float cols = 1. + iTime * .25;\n\tvec3 old = texture(iChannel0, uv).rgb;\n    vec3 new = (floor(tex(uv) * cols) / cols).rgb;\n    return vec4(old - new, 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec4 pixel = vec4(1. / iResolution.xy, -(1. / iResolution.y), 0.);\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = getError(uv + pixel.xz) *  (7. / 16.)\n        + getError(uv - pixel.xz) *  (3. / 16.)\n        + getError(uv - pixel.zy) *  (5. / 16.)\n        + getError(uv + pixel.zy) *  (1. / 16.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec4 tex(in vec2 uv){\n\treturn texture(iChannel0, uv);\n}\n\nvec4 getError(in vec2 uv){\n    float cols = 1. + iTime * .25;\n\tvec3 old = texture(iChannel0, uv).rgb;\n    vec3 new = (floor(tex(uv) * cols) / cols).rgb;\n    return vec4(old - new, 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec4 pixel = vec4(1. / iResolution.xy, -(1. / iResolution.y), 0.);\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = getError(uv + pixel.xz) *  (7. / 16.)\n        + getError(uv - pixel.xz) *  (3. / 16.)\n        + getError(uv - pixel.zy) *  (5. / 16.)\n        + getError(uv + pixel.zy) *  (1. / 16.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec4 tex(in vec2 uv){\n\treturn texture(iChannel0, uv);\n}\n\nvec4 getError(in vec2 uv){\n    float cols = 1. + iTime * .25;\n\tvec3 old = texture(iChannel0, uv).rgb;\n    vec3 new = (floor(tex(uv) * cols) / cols).rgb;\n    return vec4(old - new, 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec4 pixel = vec4(1. / iResolution.xy, -(1. / iResolution.y), 0.);\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = getError(uv + pixel.xz) *  (7. / 16.)\n        + getError(uv - pixel.xz) *  (3. / 16.)\n        + getError(uv - pixel.zy) *  (5. / 16.)\n        + getError(uv + pixel.zy) *  (1. / 16.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}