{
    "Shader": {
        "info": {
            "date": "1668146099",
            "description": "My first fractal, apropos of absolutely nothing going on on a certain Blue Bird website :).",
            "flags": 0,
            "hasliked": 0,
            "id": "cdjGWK",
            "likes": 3,
            "name": "My First Burning Ship",
            "published": 3,
            "tags": [
                "fractal",
                "mandelbrot",
                "burningship"
            ],
            "usePreview": 0,
            "username": "cr1901",
            "viewed": 235
        },
        "renderpass": [
            {
                "code": "\nvoid burning_ship(in vec2 uv, out vec3 color)\n{\n    vec2 iter = vec2(0.0, 0.0);\n    float abs_iter = 0.0;\n    int i = 0;\n\n    for(i = 0; i < 100; i++)\n    {\n    \n        vec2 tmp = vec2(abs(iter.x), abs(iter.y));\n        float real = (tmp.x * tmp.x) - (tmp.y * tmp.y);\n        float imag = 2.0*tmp.x*tmp.y;\n\n        // Uncomment for Mandelbrot\n        /* float real = (iter.x * iter.x) - (iter.y * iter.y);\n        float imag = 2.0*iter.x*iter.y; */\n    \n        iter = vec2(real, imag) + uv;\n        \n        if(length(iter) > 100.0)\n        {\n            abs_iter = 200.0;\n            break;\n        }\n    }\n    \n    if(abs_iter == 0.0)\n    {\n        abs_iter = length(iter);  \n    }\n    \n    \n    if(abs_iter > 100.0)\n    {\n        color = vec3(float(i)/10.0, float(i)/50.0, 0.0);\n    } else {\n        color = vec3(0.25, 0.0, 0.0);\n    }\n}\n    \nconst float PI = 3.1415;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 xy_norm = fragCoord/iResolution.xy;\n\n    float x_scale = 3.0;\n    float y_scale = -4.0 * float(iResolution.y) / float(iResolution.x);\n    \n    float shift_speed = 0.30*2.0*PI*iTime;\n    float shift_freq = 1.6*2.0*PI*xy_norm.y;\n    float shift_mag = 0.005;\n    float x_shift = 0.6 + shift_mag*cos(shift_freq + shift_speed);\n    float y_shift = 0.22;\n\n    vec2 uv = vec2(x_scale, y_scale) * (xy_norm - vec2(x_shift, y_shift));\n\n    vec3 color;\n    burning_ship(uv, color);\n\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}