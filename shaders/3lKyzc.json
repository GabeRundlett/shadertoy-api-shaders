{
    "Shader": {
        "info": {
            "date": "1611458174",
            "description": "Another lucky find!",
            "flags": 0,
            "hasliked": 0,
            "id": "3lKyzc",
            "likes": 4,
            "name": "Where the birds go ",
            "published": 3,
            "tags": [
                "3d",
                "geometric"
            ],
            "usePreview": 0,
            "username": "xavierseb",
            "viewed": 276
        },
        "renderpass": [
            {
                "code": "// where the birds go\n#define rot(a) mat2(cos(a), sin(a), -sin(a), cos(a))\nconst float TAU = atan(1.0) * 8.0;\n#define ss(f,g,h) smoothstep(f,g,t)*h\n\nvec3 map(vec3 p, float u, float v) {\t\n\tfloat k;\n\tp.yz *= rot(v);\n\tp.xy *= rot(u);\n\tfor (int i = 0; i < 6; i++) {\n\t\tk = length(p.xy); p.x = k * (mod(atan(p.y, p.x), TAU/8.) - TAU/16.); p.y = k - 2.752;\t\t\n\t\tk = length(p.yz); p.y = k * (mod(atan(p.z, p.y), TAU/12.) - TAU/24.);p.z = k - 10.0; //-9.\n\t}\n\t\n\tp.x = dot(abs(p), normalize(vec3(6.9,5,2.2))) - 1.6 ;\n\treturn p; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord / iResolution.x -.5;\n\tvec3 rd = normalize(vec3(uv, 1)); \n    vec2 mouse=iMouse.xy/iResolution.xy;\n\tfloat t =mod(iTime,30.)/30.,v=-8.*mod((iTime+50.)/266.,TAU), u=-mouse.x;\n\t//float y =ss(.1,.12,.06) + ss(.35,.37,.06) + ss(.6,.62,.28) + ss(.8,.82,.31) + ss(.9,.92,.24) - ss(.94,1.,.95); y+=y/10.+.02*mouse.y;  // auto pan\n\t//float y = mouse.y*.7; if(y>.2) y+=.15; if(y>.53) y+=.17; if(y>.9) y+=.05; // skip past boring regions\n\tfloat y = mouse.y*.47+.05; if(y>.2) y+=.15; if(y>.57) {y=mouse.y*1.51-.48;} if(y>.9) y+=.05; // skip past boring regions\n    //float y = mouse.y*.06+.05; if(y>.08) y+=.34; // bird spotting regions\n\n    //vec3 p = vec3(0, 60.*y+4.,  -8.25*y-6.);\n\tfloat s=min(iTime,3.)/3.;\n\tvec3 p = vec3(0,50,-120)*(1.-s) + vec3(0, 60.*y+4., -8.25*y-6.)*s;\n\tfragColor = vec4(0,y*2.-1.3,y*2.-1.,1);\n\tfor (int i = 1; i < 160; i++) {\n\t\tvec3 d = p.z<-s*10.? vec3(1): map(p, u, v);\t\t\t\t\n\t\tif (d.x <= 0.001) {\n\t\t\tfragColor = length(p.xy)<8.5? \n\t\t\t\t\t(2.-s)*vec4( 1, 0,.5, 1) *abs(d.y)*12./float(i): \n\t\t\t\t\t(2.-s)*vec4( 15.,20.,abs(p.y/20.)*10.,1)/float(i);\t\t\t\n\t\t\tbreak;\n\t\t}\n\t\tp += rd * d.x;\n\t}\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}