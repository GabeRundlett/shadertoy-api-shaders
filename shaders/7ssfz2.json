{
    "Shader": {
        "info": {
            "date": "1645102904",
            "description": "This shader is generated by my new app: dot2shader [url]https://iwbtshyguy.gitlab.io/dot2shader/[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "7ssfz2",
            "likes": 2,
            "name": "heart by dot2shader",
            "published": 3,
            "tags": [
                "bitmap"
            ],
            "usePreview": 0,
            "username": "IWBTShyGuy",
            "viewed": 210
        },
        "renderpass": [
            {
                "code": "// \n// This shader is generated by my new web app: dot2shader\n//\n// https://iwbtshyguy.gitlab.io/dot2shader/\n//\n// This web app generates a shader for Shadertoy from a pixel art by only uploading an image file.\n//\n\nconst vec3 PALETTE[] = vec3[](\n    vec3(0, 0, 0) / 255.0,\n    vec3(252, 0, 0) / 255.0,\n    vec3(252, 127, 127) / 255.0\n);\n\nconst int WIDTH = 13, HEIGHT = 11, CHUNKS_IN_U32 = 16;\nconst int BUFFER[] = int[](\n    4096, 1342177616, 1431306261, 357912577, 1364546896, 1498764629, 1437160789, 1427476821,\n    22025473\n);\n\nvec3 getColor(in ivec2 u) {\n    int idx = u.y * WIDTH + u.x;\n    u = ivec2(idx % CHUNKS_IN_U32, idx / CHUNKS_IN_U32);\n    int bitShift = 32 / CHUNKS_IN_U32;\n    return PALETTE[BUFFER[u.y] >> u.x * 32 / CHUNKS_IN_U32 & (1 << bitShift) - 1];\n}\n\nvoid mainImage(out vec4 O, in vec2 U) {\n    vec2 r = iResolution.xy;\n    ivec2 u = ivec2(floor((U - 0.5 * r) / r.y * float(HEIGHT) + vec2(WIDTH, HEIGHT) / 2.0));\n    O.xyz = u == abs(u) && u.x < WIDTH && u.y < HEIGHT ? getColor(u) : vec3(0.5);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}