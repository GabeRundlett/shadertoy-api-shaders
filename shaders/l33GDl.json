{
    "Shader": {
        "info": {
            "date": "1717121512",
            "description": "compare hash vs phi! When static, phi is way better. Amazing!\n\nAn individual colour channel is only ever 1 or 0. There is nothing in between, just dithering. ",
            "flags": 0,
            "hasliked": 0,
            "id": "l33GDl",
            "likes": 0,
            "name": "phi is magic",
            "published": 3,
            "tags": [
                "phi"
            ],
            "usePreview": 0,
            "username": "01000001",
            "viewed": 165
        },
        "renderpass": [
            {
                "code": "//#define mode2\n//#define moving\n\nvoid mainImage( out vec4 O, vec2 U ){\n\n    vec2 r = iResolution.xy;\n    vec2 uv = U/r;\n    vec2 cuv = (2.*U-r)/r.y;\n    vec2 muv = (2.*iMouse.xy-r)/r.y;\n    \n    vec4 t = texture(iChannel0, uv);\n    t = pow(t, vec4(2.2));\n\n    O = vec4(0);\n    for (int i = 0; i<3; i++){\n        if (\n            #ifdef mode2\n                hash(uvec3(U, \n                    #ifdef moving\n                        iFrame\n                    #else\n                        0\n                    #endif\n                ))[i]\n            #else\n                fract(U.x * phi + U.y * r.x * phi\n                    #ifdef moving\n                        + float(iFrame) * phi\n                    #endif\n                    + float(i)*phi\n                )\n            #endif\n            < t[i]\n        ) O[i] = 1.;\n    }\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define pi 3.14159265\n#define phi 1.6180339887\n\nconst uint k = 1103515245U;\nvec3 hash( uvec3 x )\n{\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    \n    return vec3(x)*(1.0/float(0xffffffffU));\n} //hash by IQ https://www.shadertoy.com/view/XlXcW4\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}