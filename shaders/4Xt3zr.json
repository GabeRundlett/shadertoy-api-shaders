{
    "Shader": {
        "info": {
            "date": "1716006123",
            "description": "After doing some reading, I came across a much more flexible form of Posterization, that trades having control over exactly which colors are shown, for performance. I wanted to show it off here.",
            "flags": 0,
            "hasliked": 0,
            "id": "4Xt3zr",
            "likes": 2,
            "name": "NotSoGreeeen - Posterization",
            "published": 3,
            "tags": [
                "simple",
                "beginner",
                "posterization"
            ],
            "usePreview": 0,
            "username": "NotSoGreeeen",
            "viewed": 155
        },
        "renderpass": [
            {
                "code": "/*\nThis is free and unencumbered software released into the public domain.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any\nmeans.\n\nIn jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nFor more information, please refer to http://unlicense.org/\n*/\n\n// Conversion formula from ~the internet~\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\n// Conversion forumla--once again--from ~the internet~\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nint saturate = 0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // An oscillating value to showcase the flexability of this form of posterization\n    float steps = mod(iTime, 5. * (3.1415826));\n    \n    saturate = int(abs(floor(sin(iTime / 5.))));\n    \n    // Normalizing so the texture won't be stretched\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Get the texture, and immediately set it to hsv color space, where it's easier to quantize without artifacts\n    vec3 col = rgb2hsv(texture(iChannel0, uv).xyz);\n    \n    // A brightness-based posterization effect, makes everything feel shiny\n    if (saturate == 0) {\n        col.z = round(col.z * steps) / steps;\n    } \n    \n    // A saturation-based posterization effect, makes everything feel calm\n    else {\n        col.y = round(col.y * steps) / steps;\n    }\n    \n    //convert the hsv values back to rgb for display\n    col = hsv2rgb(col);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}\n//Hope this helps someone",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}