{
    "Shader": {
        "info": {
            "date": "1658093432",
            "description": "Dot shader.",
            "flags": 0,
            "hasliked": 0,
            "id": "fdVfWh",
            "likes": 1,
            "name": "dotshader",
            "published": 3,
            "tags": [
                "shader",
                "dot"
            ],
            "usePreview": 0,
            "username": "Fililip",
            "viewed": 221
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv = uv * vec2(iResolution.x / iResolution.y, 1.0) - vec2(0.38, 0.0);\n    \n    vec2 maskUV = vec2(0.0);\n    \n    vec2 modUVT = uv - vec2(iTime * 0.1, 0.0);\n    vec2 modUVB = uv + vec2(iTime * 0.1, 0.0);\n    \n    if (mod(uv.y, 0.2) < 0.1)\n        maskUV = mod(modUVT, 0.1);\n    else\n        maskUV = mod(modUVB, 0.1);\n    \n    maskUV -= mod(uv, 0.01);\n\n    float mask = smoothstep(0.05, 0.02, distance(maskUV, vec2(0.05)));\n    \n    vec3 col = vec3(1.0);\n    \n    float uvX = floor((modUVT.y + 0.1) * 10.0);\n    float uvY = floor((modUVT.x + 0.1) * 10.0);\n    \n    col.r *= cos(uvX * 12.0 + iTime * 5.0) * 0.25 + 0.5;\n    col.g *= sin(uvY * 12.2 + iTime * 6.0) * 0.25 + 0.5;\n    col.b *= sin(uvX * 12.4 + iTime * 7.0) * 0.25 + 0.5;\n    \n    fragColor = vec4(col, 1.0) * mask;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}