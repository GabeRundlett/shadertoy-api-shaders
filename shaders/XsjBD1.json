{
    "Shader": {
        "info": {
            "date": "1500315431",
            "description": "Updated [url=https://www.shadertoy.com/view/lllGWH]IQ's Mandelbrot[/url] with Distance Estimator (using dZ/dC), like in [url]https://www.shadertoy.com/view/MttXz8[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "XsjBD1",
            "likes": 4,
            "name": "[SH17A] Mandelbrot Log Distance",
            "published": 3,
            "tags": [
                "mandelbrot",
                "distance",
                "sh17a"
            ],
            "usePreview": 0,
            "username": "ttoinou",
            "viewed": 649
        },
        "renderpass": [
            {
                "code": "// 269\n// Modified version of inigo quilez - iq/2015\n// https://www.shadertoy.com/view/lllGWH\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 z,  vec2 p )\n{\n    float n = 0.,m; // need them after the loop\n    \n    for(  z -= z;\n           n++ < 99.\n        && m   < 1e7;\n       )\n        // z.xy is Z, z.zw id dZ/dC\n        z = vec4(\n            (z.x*z.x - z.y*z.y)/2. - 2.08 ,\n            z.x*z.y + .6975 ,\n            z.x*z.z-z.y*z.w + 1.,\n            dot(z.xy,z.wz)\n        ),\n\t\tm = length(z.xy +=\n              (p/iResolution.y-.5)*exp(sin(iTime)*4.-3.) // C\n        );\n    \n    // from https://www.shadertoy.com/view/MttXz8\n\t// d(c) = |Z|^2·log|Z|/|Z'|\n    // here we take log of 1/d(c) and length(z) instead of length(z.zw)\n    n = log(length(z/m/log(m)));\n    z = .5 + .5*cos( vec4(3,2,7,1)  - n );\n    //z *= sqrt(1.3 - n/8. - sin(iTime)*.5)*1.5; // removes flickering, 2 many chars :-(\n}\n\n/* // 280, mandelbrot formulae is broken\nprecision highp float;\n\nvoid mainImage( out vec4 z,  vec2 p )\n{\n    float n = 0.,m; // need them after the loop\n    \n    for( ; n<99. && m < 3e5; n++ )\n        // z.xy is Z, z.zw id dZ/dC\n        z = vec4(\n            (z.x*z.x - z.y*z.y)/2. - 2.1 ,\n            z.x*z.y + .5 ,\n            z.x*z.z-z.y*z.w + 1.,\n            dot(z.xy,z.wz)\n        ),\n\t\tm = length(z.xy +=\n              (p/iResolution.y-.6)*exp(sin(iTime)*5.-3.) // C\n        );\n    \n    // from https://www.shadertoy.com/view/MttXz8\n\t// d(c) = |Z|^2·log|Z|/|Z'|\n    // here we take log of d(c) and length(z) instead of length(z.zw)\n    \n    z = .5 + .5*cos( vec4(3,2,7,1) +\n                    log( m/length(z) * log(m) )\n                   );\n}\n*/\n\n/* // 267 with derivative and optim, without using dZ/dC\nvoid mainImage( out vec4 z,  vec2 p )\n{\n    float n = 0.,m;\n    p = 4. * (p/iResolution.y-.5)*exp(-iTime*.2);\n    \n    for( ; n<99. && m < 1e4; n++ )\n        z = vec4(\n            z.x*z.x - z.y*z.y - 1.26 ,\n            2.*z.x*z.y + 0.34 ,\n            2.*z.x*z.z-z.y*z.w + 2.,\n            2.*(z.x*z.w + z.y*z.z)\n        ),\n\t\tm = length(z.xy+=p);\n    \n    \n    z = .5 + .5*cos( vec4(3,4,11,0) + .05*(n - log2(log2(m))) );\n}\n*/\n/* // 230 optim from IQ original Mandelbrot 2 tweets\nvoid mainImage( out vec4 f,  vec2 p )\n{\n    float n = 0.,m;\n    p = 4. * (p/iResolution.y-.5)*exp(-iTime*.2); \n    vec2 z = p*n;\n    \n    for( ; n<99. && m < 1e4; n++ )\n        z = vec2(\n            z.x*z.x - z.y*z.y -1.26,\n            2.*z.x*z.y + 0.34\n        ) + p,\n\t\tm = dot(z,z);\n    \n    \n    f = .5 + .5*cos( vec4(3,4,11,0) + .05*(n - log2(log2(m))) );\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}