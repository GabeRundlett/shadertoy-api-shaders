{
    "Shader": {
        "info": {
            "date": "1702517097",
            "description": "Changing a few functions from my Flowercomb shader yielded this, and it was different enought that I felt it needed its own place",
            "flags": 0,
            "hasliked": 0,
            "id": "mlVBDK",
            "likes": 7,
            "name": "Flowerseeds",
            "published": 3,
            "tags": [
                "math",
                "flower",
                "circular"
            ],
            "usePreview": 0,
            "username": "ahsan2649",
            "viewed": 167
        },
        "renderpass": [
            {
                "code": "mat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n  \n    uv = rotate2d((iTime * 0.25)) * uv;\n    \n    float r = sqrt(uv.x*uv.x + uv.y*uv.y);\n    float s = sqrt(uv.x*uv.y + uv.y*uv.x);\n    float t = sqrt(1./uv.x*uv.y + uv.y*uv.x);\n    \n    float th = atan(uv.y/uv.x);\n    \n    float f = .125/cos(r*8. - iTime * 2.5) - sin(8. * th);\n    f += sin(iTime);\n    f -= sin(f*2.);\n    f += cos(f*4.);\n    \n    f = smoothstep(0.5,0.999,f);\n\n    \n    // Output to screen\n    fragColor = vec4(f);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}