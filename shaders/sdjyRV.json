{
    "Shader": {
        "info": {
            "date": "1643815204",
            "description": "paint with mouse. click and drag.\nnote that the distortion is done on the uv field.  \nTextures or curves are mapped on  the field afterward.",
            "flags": 32,
            "hasliked": 0,
            "id": "sdjyRV",
            "likes": 37,
            "name": "paint with displacement",
            "published": 3,
            "tags": [
                "distortion",
                "uvmap",
                "viamapping"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 851
        },
        "renderpass": [
            {
                "code": "// variant from https://shadertoy.com/view/fdjyRV\n\n// === applies the uv field to a texture =================\n\n//#define fwidth(v) length(vec2(dFdx(v),dFdy(v)))\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    u = T(u).xy;                    // distorted uv field\n    O = texture( iChannel1, u );    // apply map\n    \n    float v = length(u-.5);         // apply circle\n    O = mix( O, vec4(1,0,0,0), smoothstep( 1.5, 0.,  abs(v-.3)/fwidth(v) ) );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// === distort the uv field ====================\n\n#define S(D)       (D) / max( dot(D,D) , 1e-3 )  // irrotational swirl\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    O = T(u);                                          // previous state\n    if ( u== vec2(.5) )                                // previous mouse pos\n      {  O = vec4(iMouse.xy*sign(iMouse.z), T(0).xy); return; } \n      \n    vec2 U = u / R.y,\n         M = iMouse.xy / R.y,\n         d = iMouse.xy - T(0).zw,                      // mouse drag direction\n         V = d/R.y *smoothstep(.2,0., length(U-M) );   // displacement field\n\n    if (iMouse.z > 0.  &&  T(0).z > 0. )               // if click & drag, displace\n        O = texture( iChannel0, ( U - .5*V ) *R.y/R );\n    \n    if ( iFrame < 1 ) O = vec4(u/R,0,0);               // init uv field\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R      iResolution.xy\n#define T(U)   texelFetch( iChannel0, ivec2(U), 0 )",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}