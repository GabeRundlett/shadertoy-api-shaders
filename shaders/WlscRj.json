{
    "Shader": {
        "info": {
            "date": "1592495840",
            "description": "Having fun with path tracing.",
            "flags": 0,
            "hasliked": 0,
            "id": "WlscRj",
            "likes": 0,
            "name": "Tracing My Path",
            "published": 3,
            "tags": [
                "pathtracing"
            ],
            "usePreview": 0,
            "username": "lams3",
            "viewed": 270
        },
        "renderpass": [
            {
                "code": "struct Ray {\n\tvec3 origin;\n    vec3 direction;\n};\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // The ray starts at the camera position (the origin)\n    vec3 rayPosition = vec3(0.0f, 0.0f, 0.0f);\n     \n    // calculate coordinates of the ray target on the imaginary pixel plane.\n    // -1 to +1 on x,y axis. 1 unit away on the z axis\n    vec3 rayTarget = vec3((fragCoord/iResolution.xy) * 2.0f - 1.0f, 1.0f);\n     \n    // calculate a normalized vector for the ray direction.\n    // it's pointing from the ray position to the ray target.\n    vec3 rayDir = normalize(rayTarget - rayPosition);\n \t\n    Ray ray = Ray(rayPosition, rayDir);\n    \n    // show the ray direction\n    fragColor = vec4(rayDir, 1.0f);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}