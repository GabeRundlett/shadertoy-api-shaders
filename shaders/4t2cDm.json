{
    "Shader": {
        "info": {
            "date": "1508858443",
            "description": "If we are ready to cumulate, then cumulating the whole image is way faster.\nClick to regenerate.\n\nNB: any idea how to find the magic final divisor in BufA ?",
            "flags": 32,
            "hasliked": 0,
            "id": "4t2cDm",
            "likes": 14,
            "name": "IFS fern - direct",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "ifs",
                "short",
                "classic",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 968
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 O, vec2 U) { O =  texture( iChannel0, U/iResolution.xy ); }\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// coefs from iq's https://www.shadertoy.com/view/lst3zf\n\n#define T(U,l) texture( iChannel0, U ,l )\n\n#define I(M,V) T( ( (U-V) * inverse(M) + C ) / 12. ,-15.)\n\nvoid mainImage( out vec4 O, vec2 u ) \n{\n    vec2 R = iResolution.xy,\n         C = vec2( 5.5, 1 ),\n         U = 12. * u/R - C;    \n  // normalization: what should it be ? ( cause = resolution ? aspect ratio ? else ? )\n  //float k = mix(.9373,  .936 , (R.x*R.y-512.*288.)/(1600.*1200.-512.*288.) ); // for the 0 stem\n  //float k = mix(.93855, .9375, (R.x*R.y-512.*288.)/(1600.*1200.-512.*288.) ); // for the .01 stem\n  //float k = mix(.93855, .9375, (R.x/R.y-1.777)/(1.333-1.777) );               // is it aspect-ratio ?\n    float k = 20.*T(U,15.).g; // .93;\n    \n    O = iFrame==0 || iMouse.z>0. ? vec4( step(length(U+U-1.),1.) )         // seed with a blob\n         : max(  T( u/R ,0.)*.9 ,                             \n           max( max( I( mat2( .01, 0    ,0  , .16), vec2( 0, 0   ) ),      // copy to stem ( .01 instead of 0 or degenerated)\n                     I( mat2( .85, .04, -.04, .85), vec2( 0, 1.6 ) )   ),  // copy to next row\n                max( I( mat2( .20,-.26,  .23, .22), vec2( 0, 1.6 ) ),      // copy to mirror side\n                     I( mat2(-.15, .28,  .26, .24), vec2( 0,  .4 ) )   )   // copy to left side\n           ) / k );        // note that max( T, ( I1+I2+I3+I4 ) / k' ) also works\n\n    O = min(O,1.);         // for systems with normalization-by-MIPmap issues.\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}