{
    "Shader": {
        "info": {
            "date": "1698291340",
            "description": "Fractal Brown Motion variant",
            "flags": 0,
            "hasliked": 0,
            "id": "msVfWw",
            "likes": 7,
            "name": "Fractal Brown Motion variant 1",
            "published": 3,
            "tags": [
                "noise",
                "fractalbrownmotion"
            ],
            "usePreview": 0,
            "username": "INCHMAN1900",
            "viewed": 224
        },
        "renderpass": [
            {
                "code": "float random(vec2 st) {\n    return fract(sin(dot(st,vec2(397.523,591.5939)))*53426.79);\n}\n\nfloat noise(vec2 st) {\n    vec2 ip = floor(st);\n    vec2 fp = fract(st);\n    \n    float a = random(ip);\n    float b = random(ip + vec2(1., 0.));\n    float c = random(ip + vec2(0., 1.));\n    float d = random(ip + vec2(1., 1.));\n    \n    vec2 u = fp * fp * (3.0 - 2.0 * fp);\n    return mix(mix(a, b, u.x), mix(c, d, u.x), u.y) * 2. - 1.;\n}\n\nfloat fbm(vec2 uv) {\n    int LOOP = 6;\n    float amplitude = 1.5;\n    float frequency = .5;\n    float ag = .5;\n    float fg = 2.;\n    \n    float n = 0.;\n    for (int i = 0; i < LOOP; i++) {\n        n += noise(vec2(uv + n) * frequency + iTime) * amplitude;\n        frequency *= fg;\n        amplitude *= ag;\n    }\n    return n;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec3 col = vec3(fbm(uv * 30.)) * vec3(.8, .9, .85);\n    \n    fragColor = vec4(col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}