{
    "Shader": {
        "info": {
            "date": "1486848927",
            "description": "some simple zoom example. click to select zoom area\nSet the zoom mode via\nint zoomDistortionMode = ...;\ninside the shader.",
            "flags": 0,
            "hasliked": 0,
            "id": "4sXyR8",
            "likes": 3,
            "name": "NyanClickToZoom",
            "published": 3,
            "tags": [
                "mouse",
                "texture",
                "zoom",
                "input"
            ],
            "usePreview": 0,
            "username": "0x17de",
            "viewed": 587
        },
        "renderpass": [
            {
                "code": "// mode 0: no distortions\n// mode 1: distortion\n// mode 2: glass ball\n\nint zoomDistortionMode = 1;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 center = iMouse.xy / iResolution.xy;\n\n    vec2 center2 = center;\n    center2.x *= (iResolution.x / iResolution.y); // aspect for circle\n    \n    vec2 uv2 = uv;\n    uv2.x *= (iResolution.x / iResolution.y); // aspect for circle\n    if (distance(uv2, center2) < 0.3) {\n        uv -= center;\n        if (zoomDistortionMode == 0) {\n        \tuv /= 2.0; // simple zoom\n        } else if (zoomDistortionMode == 1) {\n        \tuv *= 0.5*(1.0-pow(abs(uv.x/0.3),2.5));\n        } else if (zoomDistortionMode == 2) {\n            uv/=0.3; // range from -1 to 1\n            uv.x = 3.0 * uv.x * abs(uv.x);\n            uv.y = 3.0 * uv.y * abs(uv.y);\n            uv*=0.3;\n        } else if (zoomDistortionMode == 2) {\n            uv/=0.3; // range from -1 to 1\n            uv.x = 3.0 * uv.x * abs(uv.x);\n            uv.y = 3.0 * uv.y * abs(uv.y);\n            uv*=0.3;\n        } else if (zoomDistortionMode == 3) {\n            uv/=0.3; // range from -1 to 1\n            uv.x = 4.0 * pow(abs(uv.x), 3.0);\n            uv.y = 4.0 * pow(abs(uv.y), 3.0);\n            uv*=0.3;\n        }\n        uv += center;\n    }\n    \n    uv.x /= 6.0; // 6 cats\n\n\tfragColor = vec4(texture(iChannel0, uv.st).rgb, 1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 14,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}