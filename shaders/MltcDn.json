{
    "Shader": {
        "info": {
            "date": "1532290053",
            "description": "Messing around with tiling patterns from book of shaders",
            "flags": 0,
            "hasliked": 0,
            "id": "MltcDn",
            "likes": 6,
            "name": "Tiled Eye",
            "published": 3,
            "tags": [
                "blackandwhite"
            ],
            "usePreview": 0,
            "username": "momoro",
            "viewed": 485
        },
        "renderpass": [
            {
                "code": "float box(vec2 st, float size, float s) {\n    float c;\n    //st = st * 2. - 1.;\n    c = length(max(abs(st)-size, 0.));\n    c = smoothstep(.01+s, .01, c);\n    return c;\n}\n\nmat2 rotate2d(float angle) {\n\treturn mat2(cos(angle), -sin(angle),\n               \tsin(angle), cos(angle));\n}\n\nmat2 scale(float amount) {\n    return mat2(amount, 0.,\n               0., amount);\n}\n\nvec2 tile(vec2 st, float count) {\n\tst *= count;\n    \n    float oddOrEven = floor(mod(st.y, 2.));\n    st.x += count/2.*step(oddOrEven, 0.5);;\n    // I want it to be odd / even\n    // So I want to look at whether mod mod(2 == 0\n    st = fract(st);\n\n    return st;\n}\n\nfloat ring(vec2 st, float r, float w, float s) {\n    float f = 0.;\n\n    float l = length(st);\n    float inner = smoothstep(r, r+s, l);\n    float outer = smoothstep(r+w, r+w+s, l);\n    \n\tf = outer - inner;\n    \n    return f;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord.xy/iResolution.y;\n\n    float u_time = iTime;\n    vec3 color = vec3(0.);\n   \n    st -= vec2(.5);\n    st.x -= .4;\n    vec2 uv = st;\n    \n    st*= 2.;\n   \n    float radius = 0.340 * sin(u_time)/2.+(sin(u_time)/3. + 0.212);\n    float width = 0.104 * cos(u_time)/2.+-0.148;\n    float softness = -0.228 * cos(u_time)/2.+.6;\n    st *= vec2(scale(1.368) * ring(st, radius, width, softness)+sin(u_time/3.)/3.).x;\n\t\n    st *= rotate2d(sin(u_time/10.) + length(st) * .5);\n\n    st *= 5. * sin(u_time/6.) + 10.;\n    st = tile(st, 3.);\n    \n\tvec2 boxTransform;\n    \n\n    \n    \n     boxTransform = scale(0.87) * rotate2d(.25 * 3.14) *  (st*2.-1.) ;\n    color += box(boxTransform,0.296, 0.042);\n    \n\n\n\n    \n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}