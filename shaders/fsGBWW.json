{
    "Shader": {
        "info": {
            "date": "1658142665",
            "description": "mirror",
            "flags": 0,
            "hasliked": 0,
            "id": "fsGBWW",
            "likes": 2,
            "name": "kaleido fun",
            "published": 3,
            "tags": [
                "mirror"
            ],
            "usePreview": 0,
            "username": "zorba20002",
            "viewed": 212
        },
        "renderpass": [
            {
                "code": "float circle(vec2 uv, vec2 pos, float r){\n    float d= length(uv-pos);\n    float c= smoothstep(r,r-0.01,d)-smoothstep(r-0.01,r-0.02,d);\n    return c;\n}\n\nmat2 rotate2d(float _angle){\n        return mat2(cos(_angle),sin(_angle),\n                    -sin(_angle),cos(_angle));\n    }\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy)/\n        (iResolution.y < iResolution.x ? iResolution.y : iResolution.x);\n      \n    float col = 0.;  \n\n    for (float i=0.;i<20.;i+=1.){\n        uv = rotate2d(sin((i*3.14/4.)-(sin(iTime/10.)+sin(iTime/12.))/2.)) *uv;\n        uv.x =  abs(uv.x-sin(i/100.*3.14/4.)-sin(iTime/1000.)) ;\n    }\n\n    col += circle(uv, vec2(0.2, 0.2), 0.2);\n    col += circle(uv, vec2(0.2, 0.3), 0.2);\n    float ang = 1.-atan(-uv.x, -uv.y);\n    vec3 res = vec3(col, ang/10., ang*(sin(2.5+iTime/10.)+1.)/10.);\n    \n    fragColor = vec4(res,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}