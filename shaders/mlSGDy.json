{
    "Shader": {
        "info": {
            "date": "1676558344",
            "description": "shader magic",
            "flags": 0,
            "hasliked": 0,
            "id": "mlSGDy",
            "likes": 3,
            "name": "Psychedelic Sailor Moon. ",
            "published": 3,
            "tags": [
                "space"
            ],
            "usePreview": 0,
            "username": "dvshkbm",
            "viewed": 182
        },
        "renderpass": [
            {
                "code": "#define QUART_PI 0.78539816339\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1), setting the center to 0.\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n\n    float s = sin(QUART_PI);\n    float c = cos(QUART_PI);\n    uv *= mat2(c, -s, s, c); //typical rotation matrix for 2d vector. \n    \n    uv *= 15.;\n    vec2 gridUV = fract(uv)-0.5;\n    vec2 id = floor(uv);\n    vec2 rot = vec2(sin(iTime*3.), cos(iTime*3.))*.05;\n    \n    float m = 0.;\n    \n    for(float _i =-1.; _i<=1.; _i++){\n        for(float _j =-1.; _j<=1.; _j++){\n            vec2 offset = vec2(_i, _j);\n            \n            float d = length(gridUV - offset);\n            float dist = length(rot + id + offset) * 7.5;\n            float r = mix(.01, 1.5, sin(iTime - dist)*.5+.5);\n            m += smoothstep(r, r*.9, d);\n        }\n    }\n    \n    float a = atan(iTime)*.5 + .5;\n    col.r += mod(m, 3.);\n    col.g += mod(m, 3.5 - a);\n    col.b += mod(m, 3.5 + a);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}