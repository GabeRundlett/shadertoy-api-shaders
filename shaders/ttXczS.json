{
    "Shader": {
        "info": {
            "date": "1592331501",
            "description": "potato",
            "flags": 32,
            "hasliked": 0,
            "id": "ttXczS",
            "likes": 2,
            "name": "Day 179 - Maxwell equations",
            "published": 3,
            "tags": [
                "mdtmjvm"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 359
        },
        "renderpass": [
            {
                "code": "// References used: \n// https://www.youtube.com/watch?v=sxv_L4rscL0  and  https://www.shadertoy.com/view/tsB3Rz \n\n// I am using some of https://www.shadertoy.com/user/wyatt/'s naming conventions, because they work very well.\n\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 uv = U/iResolution.xy;\n    vec2 uvn = (U - 0.5*iResolution.xy)/iResolution.y;\n    C-=C;\n    \n    C += 0.5 + sin( length((T2(U)*1. + 2.*T(U)).xyxy)*15. - vec4(0.6,0.2,0.1,0.)-2.8 );\n    C /= 1. + C;\n    \n    C = smoothstep(0.,1.,C*1.4);\n    \n    C = pow(max(C,0.),vec4(0.45454));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// electric\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 uv = U/iResolution.xy;\n    vec2 uvn = (U - 0.5*iResolution.xy)/iResolution.y;\n \tNeighborhood;   \n    \n    \n    \n    C.xyz = mix(T(U).xyz,avg.xyz,diffusion) - dt*curl/permutivity;\n\t\n    \n    // mouse\n    C.xy = mix(C.xy,0.5*sin(uv*240.),smoothstep(1.,0.,length(((iMouse.xy - U - 0.5)/iResolution.y))*90.)*float(iMouse.z>0.4) );\n    \n    \n\tif(iFrame < 2){\n\t\tC -= C;\t\n\t\t//C.xy += (sin(uv*48.+1.2))*exp(-length(uvn)*9.);\t\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// magnetic\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 uv = U/iResolution.xy;\n    vec2 uvn = (U - 0.5*iResolution.xy)/iResolution.y;\n \tNeighborhood;   \n \n    C.xyz = mix(T(U).xyz,avg.xyz,diffusion)+ dt*curl/permiability;\n\t    \n\tif(iFrame < 2){\n\t\tC -= C;\t\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define dt 1.\n  \n\n#define grad(j) vec2(e.j - w.j, n.j - s.j)\n#define div 0.25*(n.y-s.y+e.x-w.x)\n\n#define l inversesqrt(2.)\n#define inv l\n#define curl (cross(vec3(1,0,0),oe.xyz)+cross(vec3(-1,0,0),ow.xyz)+cross(vec3(0,1,0),on.xyz)+cross(vec3(0,-1,0),os.xyz))/4.\n//cross(vec3(inv,inv,0),one.xyz)+cross(vec3(-inv,-inv,0),osw.xyz)+cross(vec3(-inv,inv,0),onw.xyz)+cross(vec3(inv,-inv,0),osw.xyz)  )/8.\n\n    \n#define avg 0.15*(e+n+s+w)\n        \n#define diffusion 0.006    \n    \n#define permutivity 1.\n#define permiability 0.4\n\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\n#define R iResolution.xy\n\n#define T(j) texture(iChannel0,(j)/R)\n#define T2(j) texture(iChannel1,(j)/R)\n\n\n#define Neighborhood \\\nvec4 n = T(U + vec2(0.,1.));vec4 s = T(U - vec2(0.,1.));vec4 e = T(U + vec2(1.,0.));vec4 w = T(U - vec2(1.,0.));\\\nvec4 se = T(U + vec2(1.,-1.));vec4 sw = T(U - vec2(-1.,-1.));vec4 ne = T(U + vec2(1.,1.));vec4 nw = T(U + vec2(-1.,1.));\\\nvec4 on = T2(U + vec2(0.,1.));vec4 os = T2(U - vec2(0.,1.));vec4 oe = T2(U + vec2(1.,0.));vec4 ow = T2(U - vec2(1.,0.));\\\nvec4 ose = T2(U + vec2(1.,-1.));vec4 osw = T2(U - vec2(-1.,-1.));vec4 one = T2(U + vec2(1.,1.));vec4 onw = T2(U + vec2(-1.,1.));\n    \n\n  ",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}