{
    "Shader": {
        "info": {
            "date": "1675090438",
            "description": "SIMPLE NOISE FOR STUDY",
            "flags": 0,
            "hasliked": 0,
            "id": "ctXXzX",
            "likes": 5,
            "name": "Simple Black Noise ",
            "published": 3,
            "tags": [
                "2dsnoiseperlinnoise"
            ],
            "usePreview": 0,
            "username": "Ridah",
            "viewed": 270
        },
        "renderpass": [
            {
                "code": "// Author @patriciogv - 2015\n// http://patriciogonzalezvivo.com\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_mouse;\nuniform float u_time;\n\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\nfloat lerp(float a,float b, float t)\n    {\nreturn (1.-t)*a+t*b;\n}\nfloat hash(float x, float y) {\n\treturn fract(abs(sin(sin(123.321 + x) * (y + 321.123)) * 456.654));\n}\nfloat perlin(float x, float y){\n\tfloat col = 0.0;\n\tfor (int i = 0; i < 8; i++) \n\t{\n\t\tfloat fx = floor(x);\n\t\tfloat fy = floor(y);\n\t\tfloat cx = ceil(x);\n\t\tfloat cy = ceil(y);\n\t\tfloat a = hash(fx, fy);\n\t\tfloat b = hash(fx, cy);\n\t\tfloat c = hash(cx, fy);\n\t\tfloat d = hash(cx, cy);\n\t\tcol += lerp(lerp(a, b, fract(y)), lerp(c, d, fract(y)), fract(x));\n\t\tcol /= 2.0;\n\t\tx /= 2.0;\n\t\ty /= 2.0;\n\t}\n\treturn col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 pos = fragCoord.xy / iResolution.xy;\n    float scale = 2.;\n    vec3 color;\n    float noise;\n\n    pos *= scale;\n\n        float d = snoise(pos.xy) * scale; \n        float u = (pos.x + d);\n        float v = (pos.y + d);\n        d = snoise(vec2(u, v)) * scale;\n        noise = snoise(pos.xy*sin(pos.y) + vec2(d*sin(iTime)+iTime*1.));\n        color = vec3(.6* (vec3(2.) * noise - vec3(noise * .1, noise * .2 - sin(u / 30.) * .1, noise * .3 + sin(v / 40.) * .2)));\n    \n    fragColor = vec4( color, 1.0 );\n    //marble texture\n    /*vec2 pos = fragCoord.xy / iResolution.xy;\n    float scale = 800.;\n    vec3 color;\n    float noise;\n\n    pos *= scale;\n\n        float d = perlin(pos.x,pos.y) * scale; \n        float u = pos.x + d;\n        float v = pos.y + d;\n        d = perlin(u, v) * scale;\n        noise = perlin(pos.x+d,pos.y+d );\n        color = vec3(0.6 * (vec3(2,2,2) * noise - vec3(noise * 0.1, noise * 0.2 - sin(u / 30.0) * 0.1, noise * 0.3 + sin(v / 40.0) * 0.2)));\n    \n\n    fragColor = vec4( color, 1.0 );*/\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}