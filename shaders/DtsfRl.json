{
    "Shader": {
        "info": {
            "date": "1693338717",
            "description": "binaria",
            "flags": 0,
            "hasliked": 0,
            "id": "DtsfRl",
            "likes": 0,
            "name": "erode simple",
            "published": 3,
            "tags": [
                "bianria"
            ],
            "usePreview": 0,
            "username": "nictemeral",
            "viewed": 118
        },
        "renderpass": [
            {
                "code": "\nfloat luma(vec4 color) {\n  return dot(color.rgb, vec3(0.299, 0.587, 0.114));\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float puntoDeCorte =sin(iTime*0.5)*0.5+0.5;\n    vec2 uv = fragCoord/iResolution.xy;\n    float px =1./iChannelResolution[1].x;\n    \n    // Time varying pixel color\n    \n    vec3 col = texture(iChannel1, uv).rgb;\n    \n    float sum =0.;\n    //kernel en forma de cruz\n    // -x-\n    // x-x\n    // -x-\n    sum +=step(puntoDeCorte,luma(texture(iChannel1, uv +vec2(-px,0))));\n    sum +=step(puntoDeCorte,luma(texture(iChannel1, uv +vec2(0,px))));\n    sum +=step(puntoDeCorte,luma(texture(iChannel1, uv +vec2(0,-px))));\n    sum +=step(puntoDeCorte,luma(texture(iChannel1, uv +vec2(px,0))));\n    /*\n    //kernel de casillas aleda√±as\n    // xxx\n    // x-x\n    // xxx\n    sum +=step(puntoDeCorte,luma(texture(iChannel1, uv +vec2(-px,px))));\n    sum +=step(puntoDeCorte,luma(texture(iChannel1, uv +vec2(px,px))));\n    sum +=step(puntoDeCorte,luma(texture(iChannel1, uv +vec2(px,-px))));\n    sum +=step(puntoDeCorte,luma(texture(iChannel1, uv +vec2(-px,-px))));\n      */\n\n    if(sum<3.)col= vec3(0);\n    \n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}