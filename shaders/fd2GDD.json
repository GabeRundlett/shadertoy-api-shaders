{
    "Shader": {
        "info": {
            "date": "1617443827",
            "description": "Another nice one from glsl-transitions",
            "flags": 0,
            "hasliked": 0,
            "id": "fd2GDD",
            "likes": 6,
            "name": "Swap Transition",
            "published": 3,
            "tags": [
                "transition"
            ],
            "usePreview": 0,
            "username": "turboplay",
            "viewed": 451
        },
        "renderpass": [
            {
                "code": "\n// https://gl-transitions.com/editor/swap\n\nfloat reflection = 0.4;\nfloat perspective = 0.2;\nfloat depth = 3.0;\nfloat speed = 2.0f; // 1-max\nconst vec4 black = vec4(0.0, 0.0, 0.0, 1.0);\n\n\nbool inBounds (vec2 p) {\nconst vec2 boundMin = vec2(0.0, 0.0);\nconst vec2 boundMax = vec2(1.0, 1.0);\n\n  return all(lessThan(boundMin, p)) && all(lessThan(p, boundMax));\n}\n \n \nvec4 bgColor (vec2 p, vec2 pfr, vec2 pto) {\n  vec4 c = black;\n  if (inBounds(pfr)) {\n    c += mix(black, texture(iChannel0,pfr), reflection * mix(1.0, 0.0, pfr.y));\n  }\n  if (inBounds(pto)) {\n    c += mix(black, texture(iChannel1,pto), reflection * mix(1.0, 0.0, pto.y));\n  }\n  return c;\n}\n \n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n      vec2 pfr, pto = vec2(-1.);\n      float progress = mod(iTime/speed,1.0);\n    vec2 p = fragCoord/iResolution.xy;\n    \n  float size = mix(1.0, depth, progress);\n  float persp = perspective * progress;\n  pfr = (p + vec2(-0.0, -0.5)) * vec2(size/(1.0-perspective*progress), size/(1.0-size*persp*p.x)) + vec2(0.0, 0.5);\n \n  size = mix(1.0, depth, 1.-progress);\n  persp = perspective * (1.-progress);\n  pto = (p + vec2(-1.0, -0.5)) * vec2(size/(1.0-perspective*(1.0-progress)), size/(1.0-size*persp*(0.5-p.x))) + vec2(1.0, 0.5);\n\n  if (progress < 0.5) \n  {\n    if (inBounds(pfr)) \n    {\n      fragColor = texture(iChannel0,pfr);\n    }\n    else\n    if (inBounds(pto))\n    {\n      fragColor = texture(iChannel1,pto);\n    }  \n  }\n  else\n  if (inBounds(pto)) \n  {\n    fragColor = texture(iChannel1,pto);\n  }\n  else\n  if (inBounds(pfr)) {\n    fragColor = texture(iChannel0,pfr);\n  }\n//fragColor = bgColor(p, pfr, pto);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}