{
    "Shader": {
        "info": {
            "date": "1585841211",
            "description": "Pouet",
            "flags": 0,
            "hasliked": 0,
            "id": "3dlcWl",
            "likes": 77,
            "name": "30 torus",
            "published": 3,
            "tags": [
                "torus",
                "neon",
                "demostyle"
            ],
            "usePreview": 0,
            "username": "XT95",
            "viewed": 1693
        },
        "renderpass": [
            {
                "code": "// helpers\nfloat hash(float s) { return fract(sin(s)*42422.42); }\nmat2 rot(float v) { float a = cos(v), b = sin(v); return mat2(a,b,-b,a); }\nfloat torus(vec3 p, vec2 q) { return length( vec2(length(p.xz)-q.x,p.y) ) - q.y; } \n\n// global + params\n#define att 15.\nfloat time;\nfloat id;\nvec3 glow;\n\n// distance function\nfloat map( vec3 p ) {\n    // rotate the world\n\tp.xy *= rot(time*.1);\n\tp.xz *= rot(time*.2);\n    \n    // small point light on the center\n\tfloat d =  length(p);\n\tglow += vec3(1.) / ( .1 + d*200.);\n    \n    // 30 torus\n\tfloat s = .25;\n\tfor(int i=0; i<30; i++) {\n    \ts += .25;\n    \tp.xy *= rot(time*.05);\n    \tp.xz *= rot(time*.1);\n        \n    \tfloat d2 = torus(p,vec2(s, 0.14));\n        \n        // we accumulate the lighting here\n    \tfloat intensity = 1. / ( 1. + pow(abs(d2*att),1.3));\n    \tif(i == 6 && id == 0.) {\n    \t\tglow += vec3(1.,.3,1.) * intensity;\n    \t} else if(i == 15 && id == 1.) {\n      \t\tglow += vec3(1.,1.,.1) * intensity;\n    \t} else if(i == 20 && id == 2.) {\n      \t\tglow += vec3(.1,1.,.1) * intensity;\n    \t} else if(i == 25 && id == 3.) {\n      \t\tglow += vec3(.1,1.,1.) * intensity;\n    \t}\n        \n    \td = min(d, d2);\n\t}\n\treturn d;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\ttime = iTime + 10.;\n    \n    // uv stuff\n    vec2 uv = fragCoord/iResolution.xy;\n  \tvec2 v = uv*2.-1.;\n  \tv.x /= iResolution.y / iResolution.x;\n\n    // which torus is on ?\n\tid = floor(hash(floor(iTime*5.*hash(floor(time*.2))))*5.);\n    \n    // ray setup\n  \tvec3 ro = vec3(0.,0.,-10.);\n  \tvec3 rd = normalize(vec3(v, 1.));\n\n\n    // raymarching by distance field\n  \tvec3 p = ro+rd ;\n  \tglow = vec3(0.);\n  \tfor(int i=0; i<32; i++) {\n    \tp += rd * map(p);\n  \t}\n    \n    // glow + vignetting + gamma correction\n  \tvec3 col = glow;\n  \tcol *= pow(uv.x*uv.y*(1.-uv.x)*(1.-uv.y), .8)*2.;\n  \tcol = pow(col,vec3(1./2.2));\n    \n  \tfragColor = vec4(col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}