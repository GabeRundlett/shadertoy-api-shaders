{
    "Shader": {
        "info": {
            "date": "1569415402",
            "description": "sound",
            "flags": 8,
            "hasliked": 0,
            "id": "3sdGDX",
            "likes": 2,
            "name": "x^._.^Ã—",
            "published": 3,
            "tags": [
                "sound"
            ],
            "usePreview": 0,
            "username": "nabr",
            "viewed": 236
        },
        "renderpass": [
            {
                "code": "// nabr\n// https://www.shadertoy.com/view/3sdGDX\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// https://creativecommons.org/licenses/by-nc-sa/3.0/\n\n\n\n\nvoid mainImage(out vec4 O,in vec2 U)\n{ \n    float t = iTime, t1 = 0.;\n    if(iTime>16.)\n    {t*=.0051;t1=.2*iTime;}\n    U=(U+U-iResolution.xy)/iResolution.xy;\n    vec3 d=normalize(vec3(U,.8)),c=vec3(0),c1=vec3(0),p=vec3(0),n=vec3(0),lp=vec3(.6,.5,.01);\n    float mx=50./float((1315313u%(uint(10.*t)+1u))%uint(iResolution.y));\n    float e=.002,z=0.,h=0.;\n    if(abs(U.x)>.97||abs(U.y)>.95){O=vec4(1);return;}\n    for(int i=0;i<16;i++)\n    {\n        p=d*z;\n        vec3 g=fract(vec3(p.xy,iTime+p.z)*.5)-.5;\n        g=smoothstep(0.,.5,34.*g*g);\n        h=.5*(3.-max(length(g)-p.y,length(g)+abs(p.x)));\n        if(t1+z>1.)d=reflect(d,normalize(vec3(0,mx,2)-p*mod(mx+t+t1,8.)));\n        if(h<e&&z<1.)\n        {\n            c=lp-.1*z;\n            break;\n        }\n        z+=h;\n    // dither https://www.shadertoy.com/view/3tj3DW\n    c1+=fract(sin(gl_FragCoord.x*vec3(13,1,11)+U.y*vec3(1,7,5))*158.391832)/255.0;\n    c1+=.001-length(.01*U.y);\n    }\n    \n    c=max(1.-(.2+(c1*c+.5*d.z)),c1+2.*sin(t1+.6*d.y)*cos(c1+1.5*vec3(1.+cos(t),1.57,sin(t))));\n    O.xyz = c; \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// nabr\n// https://www.shadertoy.com/view/3sdGDX\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// https://creativecommons.org/licenses/by-nc-sa/3.0/\n\n\n\n\nfloat synth(in float rt,in int chc)\n{ \n    float sn=1.,sna=1.,m0=20.,m0vt=2.;\n    int smp=5;\n    if(mod(rt,4.)<=1.) smp=6;\n    if(chc==1)\n    { \n        m0=float[](10.,50.,80.,40.,60.)[uint(2.*rt)%5u];\n        m0vt=3.;\n    }\n    for(int n=0;n<smp;n++)\n    {\n        sn+=(.5+2.*sin(m0*6.28318*rt));\n        sn+=(1.-length((sn-.8)-cos(m0*6.28318*rt)));\n        sna+=abs(2.*sin(m0*6.28318*rt));\n        m0*=m0vt;\n        (mod(6.*rt,4.)<=1.)?\n            (sn=.25*floor(.5*sna),sn*=pow(4.,1.-2.*fract(rt)))\n            :sn*=min(1.,2.*fract(6.*rt))*max(0.,1.-fract(6.*rt));\n    }\n    sn*=min(1.,2.*fract(2.*rt))*max(0.,1.-fract(2.*rt));\n    return sn;\n}\nvec2 mainSound( in int samp,float time)\n{\n    vec2 mst=vec2(1),uni=vec2(1),rev=vec2(1);\n    float sum=0.,amp=1.;float bpm=(60.*(time/60.001));\n    if(time>16.) \n        bpm=(60.*(time*.001)); \n    mst=vec2(synth(bpm+.01,0),synth(bpm+.022,1));\n    for(float _ii=0.;(_ii<=1.);_ii+=.125)\n    {\n        amp=exp2(-_ii*(_ii+1.));\n        uni+=vec2(synth(bpm+6.225*amp,1),synth(bpm+3.5*amp,0));\n        sum+=amp;\n    }\n    uni/=sum;\n    // reverb https://www.shadertoy.com/view/XldcRr\n    float rand=1.,t2=1.,invRate=.016528;\n   \tfor(float _ii=0.;(_ii<=1.);_ii+=invRate)\n    {\n        rand=fract(120.*sin(_ii*1000.));\n        t2=(invRate+_ii)+(.5*rand);\n        amp=exp2(-_ii*t2);\n        rev+=(uni-amp*mst);\n        sum+=amp;\n    };\n        rev/=sum;\n    return .5*rev;\n    if(time>16.) \n    return .5*min(1.-rev, rev.yx);\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}