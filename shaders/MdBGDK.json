{
    "Shader": {
        "info": {
            "date": "1393425463",
            "description": "Inspired by the 'Kali2 scope' - https://www.shadertoy.com/view/lsBGWK\nShould be fast full-screen for everybody. : )\nUse mouse for manual movement.",
            "flags": 0,
            "hasliked": 0,
            "id": "MdBGDK",
            "likes": 104,
            "name": "Ribbon Assault",
            "published": 3,
            "tags": [
                "ribbon",
                "ribbonassault"
            ],
            "usePreview": 0,
            "username": "Dave_Hoskins",
            "viewed": 25205
        },
        "renderpass": [
            {
                "code": "// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// https://www.shadertoy.com/view/MdBGDK\n// By David Hoskins.\n\n// GregRostami's version enabled (see comments....\n\nvoid mainImage( out vec4 o,vec2 U)\n{\n    float T = iTime, f = 3., g = f, d;\n\tvec2 r = iResolution.xy, m = iMouse.xy, p, u = (U+U-r) / r.y;\n\tiMouse.z < .5\n        ? m = (vec2(sin(T*.3)*sin(T*.17) + sin(T * .3),\n          (1.-cos(T*.632))*sin(T*.131)*1.+cos(T* .3))+1.) * r : m;\n\tp = (2.+m-r) / r.y;\n\tfor( int i = 0; i < 20;i++)  \n\t\tu = vec2( u.x, -u.y ) / dot(u,u) + p,  \n\t\tu.x =  abs(u.x),  \n\t\tf = max( f, dot(u-p,u-p) ),  \n\t\tg = min( g, sin(dot(u+p,u+p))+1.);  \n\tf = abs(-log(f) / 3.5);  \n\tg = abs(-log(g) / 8.);  \n\to = min(vec4(g, g*f, f, 0), 1.);\n}\n\n/*\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float gTime = iTime+11.0;\n\n    float f = 3., g = 3.;\n\tvec2 res = iResolution.xy;\n\tvec2 mou = iMouse.xy;\n\tif (iMouse.z < 0.5)\n\t{\n\t\tmou = vec2(sin(gTime * .3)*sin(gTime * .17) * 1. + sin(gTime * .3),(1.0-cos(gTime * .632))*sin(gTime * .131)*1.0+cos(gTime * .3));\n\t\tmou = (mou+1.0) * res;\n\t}\n\tvec2 z = ((-res+2.0 * fragCoord.xy) / res.y);\n\tvec2 p = ((-res+2.0+mou) / res.y);\n\tfor( int i = 0; i < 20; i++) \n\t{\n\t\tfloat d = dot(z,z);\n\t\tz = (vec2( z.x, -z.y ) / d) + p; \n\t\tz.x =  abs(z.x);\n\t\tf = max( f, (dot(z-p,z-p) ));\n\t\tg = min( g, sin(dot(z+p,z+p))+1.0);\n\t}\n\tf = abs(-log(f) / 3.5);\n\tg = abs(-log(g) / 8.0);\n\tfragColor = vec4(min(vec3(g, g*f, f), 1.0),1.0);\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}