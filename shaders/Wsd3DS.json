{
    "Shader": {
        "info": {
            "date": "1569226939",
            "description": "My first shader.",
            "flags": 0,
            "hasliked": 0,
            "id": "Wsd3DS",
            "likes": 3,
            "name": "The Light",
            "published": 3,
            "tags": [
                "basic",
                "light",
                "circle",
                "easy",
                "first",
                "chun"
            ],
            "usePreview": 0,
            "username": "chunza2542",
            "viewed": 358
        },
        "renderpass": [
            {
                "code": "float map(vec3 p) {\n    vec3 q = fract(p) * 2.0 - 1.0;\n \treturn length(q) - 0.40;\n}\n\nfloat trace(vec3 origin, vec3 ray) {\n    float t = 0.0;\n    for (int i = 0; i < 20; ++i) {\n     \tvec3 p = origin + ray * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    // Transform Coordinate to -1 to 1\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 r = normalize(vec3(uv, 1.0));\n    vec3 o = vec3(0.0, 0.0, iTime);\n    \n    float the = iTime * .1;\n    r.xz *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    \n    float t = trace(o, r);\n    float fog = 1.0 / (1.0 + 0.1 * t * t);\n    \n    vec3 fc = vec3(fog, 0.5 + 0.7 * sin(iTime * .25), 0.7 + 0.5 * sin(iTime * .25));\n \n    fragColor = vec4(fc, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}