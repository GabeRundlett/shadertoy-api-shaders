{
    "Shader": {
        "info": {
            "date": "1548850908",
            "description": "Play with dot and time",
            "flags": 0,
            "hasliked": 0,
            "id": "wsSGDW",
            "likes": 1,
            "name": "Dots & Time",
            "published": 3,
            "tags": [
                "time",
                "dot"
            ],
            "usePreview": 0,
            "username": "macufrax",
            "viewed": 379
        },
        "renderpass": [
            {
                "code": "float pi = 3.14159265359;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv *= 2.0;\n    uv.x *= iResolution.x/iResolution.y;\n\n    // -4 to 4\n    uv *= 4.;\n    \n    // create cells index\n    vec2 index = floor(uv+4.); // row:col index 0 -> 7\n    \n    // move few column at interval\n    if( mod(index.x,3. ) == .0)\n    {\n        float s = max(mod(iTime+5., 6.)-5., 0.);\n        s = smoothstep(0.1,0.9,s);\n        uv.y -= s*2.;\n    }\n\n    // move few rows at interval\n    // if(mod(index.y, 4.) == 0.)\n    // {\n    //     float s = max(mod(iTime+3.,6.)-5., 0.);\n    //     uv.x += s*4.;\n    // }\n\n    if(mod(index.y, 4.) == 0.)\n    {\n        float s = max(mod((iTime/2.)+4.,6.)-5., 0.);\n        s = smoothstep(0.1,0.9,s);\n        uv.x += s;\n    }\n\n     if(mod(index.y, 3.) == 0.)\n    {\n        float s = max(mod((iTime/2.)+7.,6.)-5., 0.);\n         s = smoothstep(0.1,0.9,s);\n        uv.x += s*4.;\n    }\n\n    // create cells gradiant\n    vec2 fractVal = fract(uv); // create cells gradiant 0.0 -> 1.0\n\n    // create circle\n    float c = distance(fractVal, vec2(.5, .5)); // create gradiant centered in 0->1 cells\n    c = smoothstep(.4, .43, c); // gradiant to circle\n    vec3 color = vec3(c);    \n\n    //fragColor = vec4( fractVal.xy, c, 1. );\n    fragColor = vec4( color,  1. );\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}