{
    "Shader": {
        "info": {
            "date": "1462193562",
            "description": "Spiral made of basic trigonometry",
            "flags": 0,
            "hasliked": 0,
            "id": "4ddSWs",
            "likes": 11,
            "name": "Spiralys",
            "published": 3,
            "tags": [
                "trigonometry"
            ],
            "usePreview": 0,
            "username": "Olivier",
            "viewed": 722
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n\nfloat velocity = 1.0;\nbool perspective = true;\nfloat smoothThreshold = 0.5;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tfloat x = iTime * velocity;\n\n\tvec2 uv = (gl_FragCoord.xy + 0.5 * min(vec2(0.0), vec2(iResolution.y - iResolution.x, iResolution.x - iResolution.y))) / iResolution.xy * vec2(iResolution.x / iResolution.y, 1.0);\n   \n\tvec2 dir = -(uv * 2.0 - 1.0);\n\n    float dist = length(dir);\n    float deformedDist = perspective ? pow(dist * 5.0E17, 0.075) : dist * 5.0;\n    \n\tfloat angle = atan(dir.y, dir.x) + PI + 2.0 * PI * (deformedDist / PI) - x;\n    float modAngle = mod(angle, PI);\n\n\tvec3 color = vec3(modAngle, 1.0 - 1.0 / modAngle, 0.5 - modAngle);\n    \n    float threshold = smoothThreshold / sqrt(dist);\n    color *= smoothstep(0.0, 1.0, 1.0 - (modAngle - (PI - threshold)) / threshold);\n    color *= smoothstep(0.0, 1.0, 1.0 - (threshold - modAngle) / threshold);\n    \n\tfragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}