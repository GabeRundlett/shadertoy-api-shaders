{
    "Shader": {
        "info": {
            "date": "1582236078",
            "description": "A simple demo of dithered temporal reprojection, something I found very useful for optimizing volumetric clouds. It's flexible enough to word with any N x N bayer matrix (See top of Buffer A).",
            "flags": 32,
            "hasliked": 0,
            "id": "ttKXz1",
            "likes": 8,
            "name": "Dithered Temporal Reprojection",
            "published": 3,
            "tags": [
                "dithering",
                "reprojection",
                "bayer",
                "temporal"
            ],
            "usePreview": 1,
            "username": "piyushslayer",
            "viewed": 1461
        },
        "renderpass": [
            {
                "code": "/**\n\tA simple demo of dithered temporal reprojection, something I found very\n\tuseful for optimizing volumetric clouds. It's flexible enough to word with\n\tany N x N bayer matrix (See top of Buffer A).\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;    \n    \n    vec3 col = vec3(0.);\n    \n    col += textureLod(iChannel0, uv, 0.).rgb;\n\n    fragColor = vec4(col, 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define BAYER_LIMIT 16\n#define BAYER_LIMIT_H 4\n\nconst int bayerFilter[BAYER_LIMIT] = int[]\n(\n\t 0,  8,  2, 10,\n\t12,  4, 14,  6,\n\t 3, 11,  1,  9,\n\t15,  7, 13,  5\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = fragCoord / iResolution.xy;    \n    \n    vec3 col = vec3(0.);\n    \n    ivec2 iFragCoord = ivec2(fragCoord * .5);\n    \n    int index = int(iTime * 1.5) % BAYER_LIMIT;\n    \n    int iCoord = (iFragCoord.x + BAYER_LIMIT_H * iFragCoord.y) % BAYER_LIMIT;\n    \n    if (iCoord == bayerFilter[index])\n        col += textureLod(iChannel1, uv, 0.).rgb;\n    else if (index > 0)\n        col += textureLod(iChannel0, uv, 0.).rgb;\n    \n    fragColor = vec4(col, 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}