{
    "Shader": {
        "info": {
            "date": "1701566077",
            "description": "some pictures on a plane.\nuse your mouse!",
            "flags": 32,
            "hasliked": 0,
            "id": "WsdGz2",
            "likes": 3,
            "name": "pictures on a shiny plane",
            "published": 3,
            "tags": [
                "raytracing",
                "light",
                "textures"
            ],
            "usePreview": 0,
            "username": "samuelotherion",
            "viewed": 177
        },
        "renderpass": [
            {
                "code": "const V1 pi16 = 6.283 / 16.;\n\nV2\tP;\nV0 bkg( ) {\n\n    V2\ts = V2( lessThan( _.ww, N ) );\n    V1\tn = s.x + 2. * s.y;\n    \n    O = .25 * tx( n, mod( 2. * N, _.yy ) );\n}\n\nBO hit_rect( V3 eye, V3 ray, V3 pos, V3 x, V3 y, V3 n, V1 id, inout V1 idbest, inout V3 abl, inout V3 hit  ) {\n    \n    V3\td = pos - eye;\n    \n    V1\tl = dot( d, n ) / dot( ray, n );\n    \n    if( 0. < l && l < abl.z ) {\n        \n        V3\th = eye + l * ray,\n            c = h - pos;\n     \n        V1\tcx = dot( c, x ),\n            xx = dot( x, x ),\n            cy = dot( c, y ),\n            yy = dot( y, y );\n            \n        if( abs( cx ) < xx && abs( cy ) < yy ) {\n            \n            idbest = id;\n            \n            abl = V3( cx / xx, cy / yy, l );\n            \n            hit = h;\n            \n            RT\n        }\n    }\n    \n    RF\n}\n\n\nBO hit_light( V3 eye, V3 ray, V3 pos, V1 rad, V1 id, inout V1 idbest, inout V1 len, inout V3 hit ) {\n    \n    V3\td  = eye - pos;\n    V1\tab = dot( ray, d ),\n        bb = dot( d, d ),\n        ds = rad * rad - bb + ab * ab;\n\n    if( 0. <= ds ) {\n\n        V1\tl = -ab - sqrt( ds );\n\n        if( 0. < l && l < len ) {\n            \n            idbest = id;\n            \n            len = l;\n            \n            hit = eye + l * ray;\n            \n            RT\n\t\t}\n\t}\n    \n    RF\n}\n\n\nV1 hit_obj( V3 eye, V3 ray, V1 nid, out V3 hit, out V3 n, out V3 abl ) {\n    \n    V1\tid     = -1.,\n        idbest = -1.,\n    \tbeta,\n        c,\n        s;\n    \n    V3\tpos, x, y, z;\n    \n    abl = V3( 0, 0, 1.e3 );\n    \n    //plane\n    if( nid != ID_PLANE ) {\n\n        id = ID_PLANE;\n\n        pos = rd( id, 0. );\n        x   = rd( id, 1. );\n        y   = rd( id, 2. );\n        z   = rd( id, 3. );\n\n        hit_rect( eye, ray, pos, x, y, z, id, idbest, abl, hit );\n    }\n    \n    id = ID_MIN_PHOTO + 0.;\n    \n    while( id <= ID_MAX_PHOTO ) {\n     \n        if( nid != id ) { \n                   \n        \tpos = rd( id, 0. );\n        \tx   = rd( id, 1. );\n        \ty   = rd( id, 2. );\n            z\t= rd( id, 3. );\n        \n\t\t\thit_rect( eye, ray, pos, x, y, z, id, idbest, abl, hit );\n        }\n        \n        ++ id;\n    }\n    \n    //light\n\tid = ID_LIGHT;\n\n    if( id != nid ) {\n    \n        pos = rd( id, 0. );\n        \n\t\thit_light( eye, ray, pos, .5, id, idbest, abl.z, hit );\n    }\n    \n    RN idbest;\n}\n\n\nV0 mainImage( out V4 o, V2 i ) {\n    \n    INIT\n        \n    P = ( 2. * N - 1. ) * V2( iR.x * Ri.y, 1. ); \n    \n    //bkg( );\n\t\n    V1\tg = .25 * 3.142 * ( iMouse.y * Ri.y - 1. );\n\t\n\tV3\teye = rot( V3( 0, 0., 25. ), V3( 1, 0, 0 ), g ),\n        scn = rot( V3( P, 22. ), V3( 1, 0, 0 ), g ),\n        ray = normalize( scn - eye ),\n        light = rd( ID_LIGHT, 0. ),\n        hit, n, abl;\n\n    V1\tid = hit_obj( eye, ray, -1., hit, n, abl );\n    \n    if( id == ID_LIGHT ) {\n        \n        O.xyz = V3( 1. );\n    }\n    \n    if( ID_PLANE == id ) {\n        \n        V3\tn    = rd( ID_PLANE, 3. ),\n            _ray = light - hit,\n            _abl = V3( 0., 0., 1.e3 ),\n            _hit,\n            _n,\n            _c = V3( .25 ) + .75 * tx( 2., V2( .75, .75 ) + .25 * abl.xy ).rgb;\n        \n        O.rgb = _c;\n        \n        V1\td =\n            ID_LIGHT == hit_obj( hit, normalize( _ray ), ID_PLANE, _hit, _n, _abl )\n            \t? clamp( 2. * dot( n, _ray ) * pow( dot( _ray, _ray ), -1. ), 0., 1. )\n            \t: 0.;\n        \n        O.rgb *= clamp( .25 + .75 * d, 0., 1. );\n        \n        _abl.z = 1.e3;\n        \n        V3\tv = reflect( ray, n );\n        \n        V1  w = hit_obj( hit, normalize( v ), ID_PLANE, _hit, _n, _abl );        \n        \n        if( ID_MIN_PHOTO <= w && w <= ID_MAX_PHOTO ) {\n\n            V1 cl = mod( w, 4. );\n\n            V2 off = .25 + .5 * V2( mod( cl, 2. ), mod( floor( cl / 2. ), 2. ) );\n\n            V2 j = off + V2( .25 ) * _abl.xy;\n\n            if( dot( v, rd( w, 3. ) ) < 0. ) {\n\n                O.rgb = .1 * tx( mod( w / 4., 4. ), j ).rgb + .9 * O.rgb;\n            }\n            else {\n\n                O.rgb = .9 * O.rgb;\n            }\n        }\n\n        if( w == ID_LIGHT ) {\n\n            O.rgb = .75 * O.rgb + V3( .25 );\n        }\n    }\n    \n    if( ID_MIN_PHOTO <= id && id <= ID_MAX_PHOTO ) {\n        \n        V3\tn    = rd( id, 3. ),\n            _ray = light - hit,\n            _abl = V3( 0., 0., 1.e3 ),\n            _hit,\n            _n;\n                                \n        V1 cl = mod( id, 4. );\n        \n        V2 off = .25 + .5 * V2( mod( cl, 2. ), mod( floor( cl / 2. ), 2. ) );\n        \n        V2 j = off + V2( .25 ) * abl.xy;\n        \n        if( dot( ray, n ) < 0. ) {\n        \n            O.rgb = tx( mod( id / 4., 4. ), j ).rgb;\n        }\n        else {\n            \n            n = -n;\n            \n            O.rgb = V3( .75 );\n        }\n        \n    \tV1\td =\n            ID_LIGHT == hit_obj( hit, normalize( _ray ), id, _hit, _n, _abl )\n            \t? clamp( 2. * dot( n, _ray ) * pow( dot( _ray, _ray ), -.5 ), 0., 1. )\n            \t: 0.;\n\n\t\tO.rgb *= clamp( .25 + .75 * d, 0., 1. );\n\t    \n    }\n\n    O.rgb +=  pow( 1000., - acos( dot( ray, normalize( light - eye ) ) ) );\n    O.rgb = clamp( O.rgb, 0., 1. );\n    \n\n    FIN\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define BO bool\n#define IN int\n#define V0 void\n#define V1 float\n#define V2 vec2\n#define V3 vec3\n#define V4 vec4\n#define M3 mat3\n\n#define RN return\n#define RF RN false;\n#define RT RN true;\n\n#define iT iTime\n#define iR (iResolution.xy)\n\nconst V4 _  = V4( 0, 1, 255., .5 );\n\nV2 I, N, Ri;\nV4 O;\n\n#define ID_MIN_PHOTO  0.\n#define ID_MAX_PHOTO  15.\n#define ID_PLANE      16.\n#define ID_LIGHT      17.\n\n#define INIT N = ( I = i ) * ( Ri = 1. / iR );    \n#define FIN  o = O;\n#define TX( n, i ) texture( n, i )\n#define tx( n, i ) ( \\\n\tn < 2. \\\n        ? n < 1. \\\n        \t? TX( iChannel0, i ) \\\n        \t: TX( iChannel1, i ) \\\n\t\t: n < 3. \\\n            ? TX( iChannel2, i ) \\\n            : TX( iChannel3, i ) )\n\nV3 rot( V3 r, V3 axe, V1 alpha ) {\n    \n    axe = normalize( axe );\n    \n    V3\tz = dot( r, axe ) * axe,\n        x = r - z,\n        y = cross( axe, x );\n    \n    RN cos( alpha ) * x + sin( alpha ) * y + z;\n}\n\n#define R4( n, x, y ) tx( n, Ri * ( .5 + V2( x, y ) ) )\n#define R3( n, x, y ) R4( n, x, y ).xyz\n#define rd( x, y ) R3( 0., x, y )\n#define REP V0 mainImage( out V4 o, V2 i ) { \\\n\tINIT \\\n\tV2 s = V2( lessThan( _.ww, N ) ); \\\n    V1 n = s.x + 2. * s.y; \\\n    N = mod( 2. * N, _.yy ); \\\n    O = tx( n, N ); \\\n\tFIN }\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "const V1 pi16 = 6.283 / 16.;\nV1\talpha;\n\n\nV0 mainImage( out V4 o, V2 i ) {\n\n    INIT\n    \n    if(  i.y < 4. ) {\n        \n\t    alpha = -4. * 6.283 * ( .5 - iMouse.x * Ri.x + .01 * iT );\n        \n        V1\tid = floor( i.x ),\n            beta = id * pi16,\n            gamma = .1 * iT,\n            c = cos( alpha + beta ),\n            s = sin( alpha + beta );\n        \n        if( i.x < 16. ) {\n            \n            O.xyz = \n                i.y < 2.\n                \t? i.y < 1.\n                \t\t? V3( 7. * s, 1., 7. * c ) //pos\n                \t\t: V3( c, 0, -s ) //x\n                \t: i.y < 3.\n                        ? V3( 0, 1, 0 ) // y\n                        : V3( s, 0., c ); // n\n        }\n        else {\n            \n            if( i.x < 17. ) { // plane\n            \n                O.xyz = \n                    i.y < 2.\n                    \t? i.y < 1.\n                    \t\t? V3(  0, 0,  0 )\n                    \t\t: 10. * V3( s, 0, c )\n                    \t: i.y < 3.\n                            ? 10. * V3( c, 0,  -s )\n                            : V3(  0, 1,  0 );\n            }\n            else {\n                \n                O.xyz = i.x < 18. ? M3(s,0,c,0,1,0,c,0,-s)*rot( V3( 0, 4.2 - 2. * sin( gamma ), 13.1 * cos( gamma ) ), V3(0,1,0), .51 * cos( 10.*gamma ) ) : V3( 0 ); // light\n            }\n        }\n    }\n    else {\n\n        V2 s = V2( lessThan( _.ww, N ) );\n        V1 n = s.x + 2. * s.y;\n        N = mod( 2. * N, _.yy );\n        O = tx( n, N );\n    }  \n    \n\tFIN \n}\n        \n",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 9,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 48,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t\tREP\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 45,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 46,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t\tREP\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 3,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg"
                    },
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t\tREP\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    },
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 46,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 48,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}