{
    "Shader": {
        "info": {
            "date": "1608820166",
            "description": "The Clone Stamp tool is used for pixel-to-pixel cloning. ... Position the cursor over the area where you want to paint the cloned pixels and then start painting.",
            "flags": 32,
            "hasliked": 0,
            "id": "3tdcWr",
            "likes": 4,
            "name": "Clone Tool",
            "published": 3,
            "tags": [
                "paint",
                "multipass",
                "smudge"
            ],
            "usePreview": 1,
            "username": "smkgames",
            "viewed": 566
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 clone = texture(iChannel0,fragCoord / iResolution.xy);\n\n    fragColor = clone;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\n\n\n\nvec2 difference( vec2 a, vec2 b, vec2 p )\n{\n\treturn b - a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord / iResolution.x;\n    vec4 m = iMouse / iResolution.x;\n    \n    vec2 uv = fragCoord / iResolution.x;\n    \n    vec4 baseImage = texture(iChannel1,p);\n\n    \n    if(iTime<= 0.1){\n    fragColor = baseImage;\n\n    }else{\n    \n\t\n    \n    float mask = max(0.,1.-length(p-    m.xy )/0.055); \n\n\n\n    vec2 diff = difference( m.xy, abs(m.zw), p );\n    uv += diff;\n\n    vec4 Image= texture(iChannel1,uv);\n\n    \n    vec4 result = texture(iChannel0, fragCoord.xy / iResolution.xy);\n\n    fragColor = mix(result,Image,vec4(mask ));\n}\n    //fragColor = texture(iChannel0, fragCoord.xy / iResolution.xy);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}