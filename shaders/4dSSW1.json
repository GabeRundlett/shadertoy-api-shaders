{
    "Shader": {
        "info": {
            "date": "1411204120",
            "description": "variant from https://www.shadertoy.com/view/Md2SDz",
            "flags": 0,
            "hasliked": 0,
            "id": "4dSSW1",
            "likes": 10,
            "name": "Worley noise 4",
            "published": 3,
            "tags": [
                "voronoi",
                "worley"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1749
        },
        "renderpass": [
            {
                "code": "float rnd(float x) { return fract(1000.*sin(234.56*x)); }\nvec3 rnd3(float x) { return vec3(rnd(x),rnd(x+.1),rnd(x+.2)); }\nfloat hash(float x,float y,float z) { return (x+432.432*y-1178.65*z); }\nfloat hash(vec3 v) { return dot(v,vec3(1., 32.432, -1178.65)); }\n    \nvec4 Worley(vec3 uvw) {\n    \n   vec3 uvwi = floor(uvw);\t\t\t\t\t\t\t// cell coords\n   float dmin = 1e9, d2min=1e9, nmin=-1.;\n    \n    for (int i=-1; i<=1; i++)\t\t\t\t\t\t// visit neighborhood\n      for (int j=-1; j<=1; j++)\t\t\t\t\t\t// to find the closest point\n          for (int k=-1; k<=1; k++) \n          {\n              vec3 c = uvwi + vec3(float(i),float(j),float(k)); // neighbor cells\n              float n = hash(c);\t \t\t\t\t\t\t\t// cell ID\n              vec3 p = c + rnd3(n+.1);\t\t\t\t\t\t\t// random point in cell\n              float d = length(p-uvw);\t\t\t\t\t\t\t// dist to point\n              if (d<dmin) { d2min=dmin; dmin=d; nmin=n; }\t\t// 2 closest dists\n              else if (d<d2min) { d2min=d; }\n          }\n\treturn vec4(dmin,d2min,d2min-dmin, nmin);\t\t\t// 2 closest dists + closest ID\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 uvw = vec3(2.*(fragCoord.xy / iResolution.y-vec2(.9,.5)), .2*iTime);\n    float a = .2*iTime,c=cos(a),s=sin(a); uvw.xy *= mat2(c,-s,s,c);\t// rotate\n    uvw *= 4.*(.7+.6*vec3(vec2(cos(.5*iTime)),0.));\t\t\t\t\t// zoom\n\n    vec3 col = vec3(1.);\n    vec3 uvw0 = uvw; \n    for (int i=0; i<4; i++) {\n    \tuvw = uvw0+ .2*texture(iChannel0,.1*uvw.xy).rgb;\t\t\t\t// jitter pos\n        vec4 wor = Worley(uvw);    \n   \t\t vec3 ccol = mix(vec3(1.), rnd3(wor.a+.4), .4);\n   \t\t float v = wor.z;\n  \t\t int mode =  int(mod(.25*iTime,4.));\t\t\t\t\t\t// demo mode\n   \t\t if      (mode==0) v *= 4.;\n  \t\t else if (mode==1) v = pow(v,.025);\n  \t\t else if (mode==2) { v -= .3*sin(30.*uvw0.x)*sin(30.*uvw0.y); v = pow(v,.025); }\n  \t\t else              { v -= .02; v = pow(v,.025); }\n\t\tcol *= v*ccol;\n        uvw0 *= 2.;\n    }   \n\n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}