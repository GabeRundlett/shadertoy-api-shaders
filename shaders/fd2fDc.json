{
    "Shader": {
        "info": {
            "date": "1647292325",
            "description": "some procedural kelp",
            "flags": 0,
            "hasliked": 0,
            "id": "fd2fDc",
            "likes": 0,
            "name": "Dark kelp",
            "published": 3,
            "tags": [
                "raymarching",
                "kelp"
            ],
            "usePreview": 0,
            "username": "lwswl",
            "viewed": 201
        },
        "renderpass": [
            {
                "code": "vec3 albedo=vec3(1);\nfloat alpha=1.;\n#define rot(p) mat2(cos(p),sin(p),-sin(p),cos(p));\nfloat dist(vec3 p){\n    float r=10.;\n    vec3 l=p;\n    \n    p.z+=round(mod(p.x-r*0.8,r*1.6)-r*0.8);\n    p=mod(p-r*0.8,r*1.6)-r*0.8;\n    \n    p.xz*=rot(p.y*0.1);\n    p.x+=1.;\n    vec3 op=p;\n    float d=r-length(p);\n    d=max(d,-l.y);\n    d=min(d,r-length(p.xz));\n    albedo=vec3(0);\n    vec3 op2=op;\n    for(float i=0.;i<4.;i++){\n        r*=0.1;\n        p.y+=round(mod(p.x+p.z,r*1.6));\n        p.xz*=rot(p.y*0.01*r);\n        p.yz*=rot(iTime*0.1);\n        p.x+=r*0.1;\n        p=mod(p-r*0.8,r*1.6)-r*0.8;\n        d=max(d,r-length(p));\n        albedo+=length(p-op2)*0.008;\n        albedo+=vec3(1,0.3,0.1)*length(op-p)*0.005;\n        \n        op2=p;\n    }\n    return d;\n}\nvec3 normal(vec3 p){\n    float e=0.001;\n    return normalize(vec3(dist(vec3(p.x+e,p.yz))-dist(vec3(p.x-e,p.yz)),\n                dist(vec3(p.x,p.y+e,p.z))-dist(vec3(p.x,p.y-e,p.z)),\n                dist(vec3(p.xy,p.z+e))-dist(vec3(p.xy,p.z-e))));\n}\nvoid mainImage( out vec4 col, in vec2 co )\n{\n    vec2 uv = (co/iResolution.xy-0.5)*normalize(iResolution.xy);\n    vec3 d=normalize(vec3(uv,-1));\n    vec3 o=vec3(100,0,0);\n    o.xz*=rot(iTime*0.1);\n    d.xz*=rot(iTime*0.1);\n    float t=0.1;\n    float f=1.0;\n    while(f>0.01&&t<1000.){\n        f=dist(o+d*t);\n        t+=f*0.8;\n    }\n    col=vec4(0);\n    if(t<1000.){\n        o=o+d*t;\n        col.rgb-=t*0.01;\n        \n        col.rgb+=clamp(albedo,0.,1.);\n        col.rgb=clamp(col.rgb,0.,1.);\n        \n        \n    }\n    col.rgb+=vec3(1,0.5,0.9)*0.2*clamp(t*0.001,0.,1.);\n    col*=3.;\n    col=sqrt(col);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}