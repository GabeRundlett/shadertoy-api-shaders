{
    "Shader": {
        "info": {
            "date": "1687221658",
            "description": "https://www.pixelsfighting.com/",
            "flags": 32,
            "hasliked": 0,
            "id": "cdsyW2",
            "likes": 0,
            "name": "pixel fight",
            "published": 3,
            "tags": [
                "cellular",
                "automaton"
            ],
            "usePreview": 0,
            "username": "01000001",
            "viewed": 34
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float threshold = 6.2;\nconst float random = 6.;\n//try playing with this random.  while running, set to 8, then to 5 and see what happens\n\nfloat rand(vec2 co){\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    if (iFrame < 30){\n        float s = floor(mod(iDate.w,3600.));\n        fragColor = vec4(rand(vec2(234, 23049) + s), rand(vec2(2390, 239) * s), rand(vec2(239, 96) - s),1.0);\n        fragColor = uv.x>0.5?fragColor:1.-fragColor;\n    } else {\n        float me = texture(iChannel0, uv).a;\n        \n        vec2 offset[8];\n        offset[0] = vec2(0,  1);\n        offset[1] = vec2(1,  1);\n        offset[2] = vec2(1,  0);\n        offset[3] = vec2(1, -1);\n        offset[4] = vec2(0, -1);\n        offset[5] = vec2(-1,-1);\n        offset[6] = vec2(-1, 0);\n        offset[7] = vec2(-1, 1);\n        float val[8];\n        float sum = 0.;\n        \n\n        //threshold = 6.3 + cos(iTime)*0.2;    ///////////// COMMENT OUT THIS LINE FOR A MORE STANDARD https://pixelsfighting.com/ CLONE\n        \n        for (int i = 0; i<offset.length(); i++)\n        {\n            val[i] = texture(iChannel0, (fragCoord + offset[i])/iResolution.xy).a;\n            \n            sum += val[i];\n        }\n        \n        \n        fragColor = texture(iChannel0, uv);\n        if ((me > .5 && sum < 8.-threshold + rand(fragCoord + iTime + mod(float(iFrame), 512.))*random)\n        ||  (me < .5 && sum >    threshold - rand(fragCoord + iTime + mod(float(iFrame), 512.))*random)\n        ){\n            fragColor = 1.-fragColor;\n        }\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}