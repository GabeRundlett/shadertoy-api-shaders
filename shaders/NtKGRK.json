{
    "Shader": {
        "info": {
            "date": "1638004288",
            "description": ":octopus:",
            "flags": 32,
            "hasliked": 0,
            "id": "NtKGRK",
            "likes": 17,
            "name": "- fire ball -",
            "published": 3,
            "tags": [
                "noise",
                "fbm",
                "flame",
                "fire"
            ],
            "usePreview": 0,
            "username": "anahit_movsesyan",
            "viewed": 652
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tfragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define PI 3.141592\n#define OFF 0.03\n\nfloat sdCircle(vec2 p, float r) {\n    return length(p) - r;\n}\n\nfloat rand(vec2 p) {\n    return fract(sin(dot(p, vec2(12.99, 78.233))) * 43758.545);\n}\n\nfloat shift(float r) {\n    return sin(r * 2. * PI + iTime * 7.) * 0.5 + 0.5;\n}\n\nfloat noise(vec2 p) {\n    vec2 f = fract(p);\n    vec2 i = floor(p);\n    return mix(mix(shift(rand(i + vec2(0, 0))), \n                   shift(rand(i + vec2(1, 0))), f.x),\n               mix(shift(rand(i + vec2(0, 1))), \n                   shift(rand(i + vec2(1, 1))), f.x), f.y);\n}\n\nfloat fbm(vec2 p) {\n    float v = 0.;\n    float a = 1.;\n    for (int i = 0; i < 4; ++i) {\n        vec2 p1 = p * 4. / a;\n        a *= 0.5;\n        v += a * noise(p1);\n    }\n    return v;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 p = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    \n\tvec2 r = vec2(fbm(p + vec2(0,  OFF)) - fbm(p + vec2( 0, -OFF)), \n                 -fbm(p + vec2(OFF,  0)) + fbm(p + vec2(-OFF,  0))) * 0.01;\t\n    r += vec2(0.002, 0.0045);\n\n    vec2 uv = fragCoord / iResolution.xy;\n\tfloat dCircle = sdCircle(p, 0.1); \n\tvec3 col = pow(texture(iChannel0, uv - r).rgb, vec3(1.15))\n             + vec3(smoothstep(0.01, -0.01, abs(dCircle) - 0.007)) * vec3(1., 0.6, 0.25);\n\tcol = clamp(col, 0., 1.);\n    fragColor = vec4(col, 1.);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}