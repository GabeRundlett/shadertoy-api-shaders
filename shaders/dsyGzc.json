{
    "Shader": {
        "info": {
            "date": "1678884120",
            "description": "dots",
            "flags": 0,
            "hasliked": 0,
            "id": "dsyGzc",
            "likes": 4,
            "name": "inspired by dancing dots",
            "published": 3,
            "tags": [
                "dancingdots"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 195
        },
        "renderpass": [
            {
                "code": "#define n_tau 6.2831\n\nfloat f_n_rand_davehoskins(float p)\n{\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 o_trn_p = (fragCoord.xy - iResolution.xy*.5)  / iResolution.y;\n    float n_its = 33.;\n    vec3 o_col = vec3(0.);\n    float n_it_nor_max = 0.;\n    float n_max = 0.;\n    vec3 o_col_max = vec3(0.);\n    for(float n_it = 0.; n_it < n_its; n_it +=1.){\n\n        float n_it_nor = n_it / n_its;\n        float n_radians = n_tau * n_it_nor;\n        float n_t1 = 1.+sin(iTime+n_it_nor*n_tau)*0.5;\n        float n_t2 = 1.;\n        float n_tintr = sin(iTime);\n        float n_t = (1.-n_tintr) * n_t1 + n_tintr * n_t2;\n        \n        float n_radius = sin(n_t)*0.5;n_it_nor*n_tau*2.;\n        vec2 o_p = vec2(\n            sin(n_radians)*n_radius,\n            cos(n_radians)*n_radius\n        );\n        float n = length(o_trn_p - o_p);\n         n *= 20.;//+(sin(iTime*5.)*.5+.5)*20.;\n        n = abs(n-.5*sin(iTime+n_it_nor*n_tau)*20.);\n        \n        n = pow(n, 1./2.);\n        // n = n * (1.+(sin(iTime)*.5+.5));\n        n = 1.-n;\n        vec3 o_col_it = vec3(\n            f_n_rand_davehoskins((n_it_nor+1.)*22.),\n            f_n_rand_davehoskins((n_it_nor+1.)*2.2),\n            f_n_rand_davehoskins((n_it_nor+1.)*3.123)\n        );\n        if(n > n_max){\n            n_max = n; \n            n_it_nor_max = n_it_nor;\n            o_col_max = o_col_it;\n        }\n\n        o_col += o_col_it*clamp(n, 0., 1.);\n    \n    }\n    \n    fragColor = vec4(o_col, 1.);\n    // fragColor = vec4(o_col_max*n_max, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}