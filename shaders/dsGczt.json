{
    "Shader": {
        "info": {
            "date": "1696675700",
            "description": "Simulates a deforming material preserving the amount of yellow matter: \nEach cell contains the same yellow area.\nNext step: accounts for stretching anisotropy.",
            "flags": 0,
            "hasliked": 0,
            "id": "dsGczt",
            "likes": 16,
            "name": "holes in dough/rubber",
            "published": 3,
            "tags": [
                "stretching",
                "conservation",
                "dough"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 326
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 u )\n{\n    float t = .3*iTime, s;\n    vec2  R = iResolution.xy, U;\n    s = 14./R.y;// * exp2(5.*(iMouse.y/R.y-.5));\n    U = s * u;                                               // scaling\n    U += vec2( 1.7*sin(t+.3*U.y) -    cos(2.3*t-.2*U.x),     // distortion\n               cos(1.2*t-.4*U.y) - .4*sin(2.7*t+.3*U.x) );\n\n    float a0 = // .6,  // bubble can totally close           // target yellow cell surface. \n                  .5,  // max bubble opening\n           a = s*s / determinant(  mat2(dFdx(U),dFdy(U)) ),  // surface in s*fragCoord units. \n           l = length( fract(U)-.5 ),                        // polar coord per tile cell\n        // r = sqrt(max(0.,a-a0))/1.77;                      // a - pi.r^2 = a0 → r = sqrt( (a-a0)/pi )\n           r = sqrt(max(0.,1.-a0/a))/1.77;                   // a*(1 - pi.r^2) = a0 → r = sqrt( (1-a0/a)/pi )\n           \n    O = vec4( smoothstep(-1.,1., (l-r)/fwidth(l)   ) );      // draw yellow material \n // O *= .6 / a;                                                                      // debug: intensity = contraction\n    if ( r==0. ) O *= vec4(1,0,0,0);                                                  // debug: negative area\n    U = fract(U)-.5; l = U.x*U.y; O.b = smoothstep(1.,0., abs(l)/min(.1,fwidth(l)) ); // debug: show grid\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}