{
    "Shader": {
        "info": {
            "date": "1633435823",
            "description": "Something vertiginous",
            "flags": 8,
            "hasliked": 0,
            "id": "sd3XzS",
            "likes": 9,
            "name": "Chiptune-LSD",
            "published": 3,
            "tags": [
                "sound"
            ],
            "usePreview": 0,
            "username": "klk",
            "viewed": 500
        },
        "renderpass": [
            {
                "code": "// Fork of \"Chiptune-118366712\" by klk. https://shadertoy.com/view/3sjcWm\n// 2021-10-05 12:09:12\n\n// Fork of \"Waterdrops song\" by None. https://shadertoy.com/view/-1\n// 2020-04-13 11:07:43\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(0.0);\n\n    float beat=(1024./SND_HZ)/4./.68;\n    float time=trunc(iTime/beat)*beat+uv.x/64.;\n    \n    float vol=0.;\n    vec2 music=tune(time);\n    \n    col+=vec3(.2,.5,1)*\n        clamp\n        (1.0-\n         abs(iResolution.y/2.0-fragCoord.y)+abs(music.x)*iResolution.y/2.0\n         ,0.0,1.0);\n    col+=vec3(1,.8,0)*\n        clamp\n        (1.0-\n         abs(iResolution.y/2.0-fragCoord.y)+abs(music.y)*iResolution.y/2.0\n         ,0.0,1.0);\n\t\n    col=clamp(col,vec3(0.),vec3(1.));\n\n   \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define M_PI 3.141592\n#define SND_HZ 48000.\n\nfloat s(float t)\n{\n    //return 0.;\n    //return t<.5?-.25:.25;\n    return abs(fract(t-.25)-.5)-.25;\n\t//return sin(t*2.*M_PI)*.25;\n}\n\nfloat s1(float t)\n{\n\tif(t<.2)\n    {\n        t/=.2;\n        //return t<.5?-.25:.25;\n        return abs(fract(t-.25)-.5)-.25;\n        return sin(t*2.*M_PI)*.25;\n    }\n\treturn 0.;\n}\n\nint l1a[16]=int[16](0,8,6,7,6,0,4,3,5,6,6,0,2,1,2,1);\nint l1b[16]=int[16](0,1,2,0,4,2,1,0,1,2,0,3,4,2,0,0);\nint l2a[16]=int[16](0,1,0,2,0,3,0,1,0,2,0,3,0,1,2,0);\nint l2b[16]=int[16](2,4,3,2,1,4,2,3,2,4,1,2,3,3,2,6);\n\nfloat sndVal(float ft, float f)\n{\n//    original oneliners\n//\tint i1=(t*(\"0867604356602121\"[(t>>12)&15]-'0')*(\"0120421012034200\"[(t>>16)&15]-'0'));\n//\tint i2=(t*(\"0102030102030120\"[(t>>12)&15]-'0')*(\"2432142624123326\"[(t>>17)&15]-'0'));\n    int idx1=int(ft/4096. )&15;\n    int idx2=int(ft/65536.)&15;\n    int idx3=int(ft/65536./2.)&15;\n\n    float i1=ft*float(l1a[idx1]*l1b[idx2])*f;\n\tfloat i2=ft*float(l2a[idx1]*l2b[idx3]*4)*f;\n    float w=(1.-fract(ft/4096.));\n\n    return (\n        s(mod(i1,128.)/128.)*w*w\n        +s(mod(i1,256.)/256.)*(1.-w)*w*2.\n        +s1(mod(i2,2048.)/2048.)*.5*w\n    )\n    \n    ;\n}\n\nvec2 tune00(float time,float f)\n{\n    vec2 val=vec2(0);\n    float vib=time*M_PI/2.;\n    val.x=sndVal((time*SND_HZ+sin(vib)*250.),f);\n    val.y=sndVal((time*SND_HZ-sin(vib)*250.),f);\n    return val;\n}\n\n\nconst float delay=1024.*8./SND_HZ/4.;\n\nvec2 tune0(float time)\n{\n    vec2 val=vec2(0.);\n\n    for(float ex=0.;ex<=4.1;ex+=1.)\n    {\n        val+=pow(.9,ex)*tune00(time-ex*delay*4.,pow(.5,ex/4.));\n    }\n    return val;\n}\n\nvec2 tune(float time)\n{\n    time*=.68*.5;\n    // synchronize echo with beats\n    float echomin=0.75;\n    vec2 val=tune0(time);\n    //val=vec2(0.);\n    //if(false)\n    for(float ex=1.;ex<=8.1;ex+=1.)\n    {\n        val+=0.25*pow(echomin,ex)*tune0(time-ex*delay);\n    }\n    //if(false)\n    return val;\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "vec2 mainSound( in int samp, float time )\n{\n\treturn tune(time);\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}