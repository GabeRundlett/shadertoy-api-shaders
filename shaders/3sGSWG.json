{
    "Shader": {
        "info": {
            "date": "1574800332",
            "description": "learning shadertoy",
            "flags": 0,
            "hasliked": 0,
            "id": "3sGSWG",
            "likes": 2,
            "name": "mandelbrot-dasco597",
            "published": 3,
            "tags": [
                "mandelbrot"
            ],
            "usePreview": 0,
            "username": "dasco597",
            "viewed": 314
        },
        "renderpass": [
            {
                "code": "// config\nconst int iMax = 400;\nconst float blueDampen = 0.6;\nconst vec2 offset = vec2(-0.84,0.205);\nconst float zoom = 40.0;\nconst int AA = 2;\n// constants\nconst float PI = 3.14159;\n\n// https://en.wikipedia.org/wiki/Mandelbrot_set\nvec3 mandelbrot(vec2 c) {\n    vec2 z = vec2(0.0);\n    int i = 0;\n    \n    // mandelbrot itterations\n    while (i < iMax) {\n     \tfloat fzx = z.x*z.x - z.y*z.y + c.x;\n        float fzy = 2.0*z.x*z.y + c.y;\n        if ((fzx*fzx + fzy*fzy) > 2.0) break;\n        z = vec2(fzx, fzy);\n        i++;\n    }\n    \n    // color calculation\n    float iNorm = 0.0, r = 0.0, g = 0.0, b = 0.0;\n    if (i != iMax) {\n        iNorm = float(i) / float(iMax);\n        g = iNorm * iNorm;\n        r = sin(PI * iNorm);\n        b = (blueDampen - iNorm*blueDampen) * (blueDampen - iNorm*blueDampen);\n    }\n    return vec3(r,g,b);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // frag coordinate to comples input z = x + iy\n    float scale = iResolution.y * zoom;\n    vec2 c = (fragCoord - iResolution.xy/2.0) / scale + offset;\n    \n    // multisample anti aliasing\n    float AAOffset = 1.0 / scale / float(AA + 1);\n    vec3 color = vec3(0.0);\n    for (int x = 1; x <= AA; x++) {\n        for (int y = 1; y <= AA; y++) {\n            // mandel render\n            color += mandelbrot(c + vec2(float(x)*AAOffset, float(y)*AAOffset));\n        }\n    }\n\tcolor /= vec3(AA*AA);\n    \n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}