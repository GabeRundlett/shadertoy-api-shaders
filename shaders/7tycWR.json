{
    "Shader": {
        "info": {
            "date": "1661238977",
            "description": "16-segments display with variable segment length, gap, and diagonals angle. Based on [url]https://www.shadertoy.com/view/NlSSRy[/url]\n\nOriginally made for Material Maker",
            "flags": 0,
            "hasliked": 0,
            "id": "7tycWR",
            "likes": 3,
            "name": "Variable 16-segment display",
            "published": 3,
            "tags": [
                "2d",
                "segments",
                "16seg",
                "sixteensegment"
            ],
            "usePreview": 0,
            "username": "cmzw",
            "viewed": 255
        },
        "renderpass": [
            {
                "code": "float m(vec4 d) { return max(max(d.x,d.y),max(d.z,d.w)); }\n\nfloat fs(vec2 p, float st, float sl, vec4 s14, float s5, bool sf, float da)\n{\n\tconst vec2 h = vec2(1,-1);\n\tda *= 0.017453;\n\t\n\tsl *= .1;\n\tst *= .5;\n\tsl = clamp(sl, .0,1.);\n\n\tp = 2. * (p - .5);\n\tvec2 p1 = p;\n\tvec2 p2 = p;\n\tvec2 _p = p;\n\t\n\tp = abs(p) - vec2(0.25,0.4);\n\t\n\tfloat f = -max(p.x, p.y);\n\tfloat ism = f - st - (sl*1.625);\n\tfloat isg = min(ism, st-abs(dot(normalize(vec2(sin(da),cos(da))),_p*vec2(sf ? 1.0:-1.0 ,1.0))));\n\t\n\tfloat d = min(st - abs(f), min(-dot(p, normalize(h.xx)), abs(dot(p, normalize(h)))) - sl);\n\n\tp1.x = abs(p1.x); p2.y = abs(p2.y);\n\tp1 += vec2(0.15, 0.0); p2 -= vec2(0.0, 0.15);\n\n\tfloat q1 = -dot(p1,h.xx);\n\tfloat q2 = min(p2.x, -dot(p2,h.yx));\n\tfloat q3 = dot(p1, h.yx);\n\tfloat q4 = min(-p2.x, -dot(p2,h.xx));\n\t\n\tvec4 qv4 = vec4(q1,q2,q3,q4);\n\tqv4 = min(qv4,s14);\n\t\n\treturn max(m(min(vec4(d),qv4)), min(isg,s5));\n}\n\nfloat xvisd(vec2 uv, float st, float sl, float bevel, float da)\n{\n\tfloat d;\n\tconst vec2 b = vec2(1,0);\n\t\n\tst *= .5;\n\n\tfloat d1 = fs(uv+vec2(.125, -.2), st, sl, vec4(1), 1. ,true, da );\n\tfloat d2 = fs(uv-vec2(.125,  .2), st, sl, vec4(1), 1. ,false, da);\n\tfloat d3 = fs(uv+vec2(.125,  .2), st, sl, vec4(1), 1. ,false, da);\n\tfloat d4 = fs(uv-vec2(.125, -.2), st, sl, vec4(1), 1., true, da);\n\t\n\td = m(vec4(d1,d2,d3,d4));\n\n\treturn clamp(d/max(bevel, 1e-4), .0, 1.);\n}\n\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    vec2 p = .5*(2.*I - iResolution.xy) / iResolution.y;\n\n    float t = (cos(iTime)+1.)*.5;\n    float seg_gap = t*.8;     // segments gap\n    float seg_len = t*.4+.08; // segments length\n    float diag_an = 60.;      // diagonals angle\n    \n    O = vec4(xvisd(p+.5,seg_len,seg_gap,.01,diag_an));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}