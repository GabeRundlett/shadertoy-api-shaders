{
    "Shader": {
        "info": {
            "date": "1468677236",
            "description": "fractal forest",
            "flags": 0,
            "hasliked": 0,
            "id": "Mt33Dn",
            "likes": 36,
            "name": "2d fractal forest",
            "published": 3,
            "tags": [
                "procedural",
                "fractal",
                "forest",
                "stars",
                "meteor"
            ],
            "usePreview": 0,
            "username": "pyBlob",
            "viewed": 1432
        },
        "renderpass": [
            {
                "code": "#define round(x, f) (floor((x)/(f) + 0.5) * (f))\n\nfloat random(float p)\n{\n    return fract(52.043*sin(p*205.429));\n}\nfloat random2(float p)\n{\n    return random(p)*2.0-1.0;\n}\n\n// https://iquilezles.org/articles/smin\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat sign2(float x)\n{\n    return x<0.0 ? -1.0 : 1.0;\n}\n\nfloat tree(vec2 uv, float thick, float offset)\n{\n    float v = uv.y;\n    float zoom = 1.0;\n    \n    v = smin(v, length(uv)-thick, 0.5);\n    \n    float pos = 0.0;\n    for (float i=3.0 ; i<=12.0 ; i++)\n    {\n        float k = 0.5 / i;\n        \n        // render branch/cap\n        if (uv.y > 1.0) v = smin(v, (length(uv-vec2(0.0,1.0))-thick)/zoom, k);\n        else if (uv.y > 0.0) v = smin(v, (abs(uv.x)-thick)/zoom, k);\n        \n        // move down for child\n        uv.y -= 1.0;\n\t\t\n        pos *= 2.0;\n        if (uv.x > 0.0) pos++;\n        \n        // rotate left/right depending on side\n        float angle = 0.4 + 0.1 * random(offset + pos);\n        vec2 t = vec2(cos(angle), sign2(uv.x)*sin(angle));\n        uv = uv * mat2(t.x,-t.y, t.y,t.x);\n        \n        float scale = 1.4 + 0.1 * random(offset + pos);\n        zoom *= scale;\n        uv *= scale;\n    }\n    \n    return v;\n}\n\nvec3 stars(vec2 uv)\n{\n    vec2 r = round(uv, 0.1);\n    \n    float rand = r.x*2.32 + r.y;\n    \n    uv -= r;\n    uv.x += 0.05 * random2(rand);\n    uv.y += 0.05 * random2(rand+0.541);\n    \n    float blink = random(rand+0.5) < 0.1 ? 0.8 + 0.2 * sin(35.0*iTime+random(rand+1.5)) : 0.0;\n    float dark = random(rand+52.0) < 0.5 ? 1.0 : 0.3;\n    \n    return vec3(dark * max(0.0, 0.8 + blink - iResolution.y * length(uv)));\n}\n\nvec3 meteor(vec2 uv, float gtime, float delay)\n{\n    float seed = round(gtime, delay);\n    \n    float startTime = (delay - 1.5) * random(seed);\n    float time = max(0.0, min(1.0, gtime-seed - startTime));\n    \n    vec2 start = vec2(\n        random2(seed),\n        0.7 + 0.3 * random(seed+0.1)\n    );\n    \n    vec2 end = start * 0.5;\n    \n    uv = uv - mix(start, end, time);\n    \n    end = normalize(end - start);\n    uv = uv * mat2(end.x, end.y, -end.y, end.x);\n    uv.x *= 0.1;\n    \n    float alpha = 16.0 * pow(time, 2.0) * pow(time - 1.0, 2.0);\n    return vec3(max(0.0, alpha - iResolution.y * length(uv)));\n}\n\nvec3 meteorstorm(vec2 uv)\n{\n    return\n        meteor(uv, iTime, 9.5837) +\n        meteor(uv, iTime + 15.3, 15.459) +\n        meteor(uv, iTime + 125.0, 31.2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 guv = (fragCoord.xy - vec2(iResolution.x*0.5, 0.0)) / iResolution.y;\n    float gv = 20.0;\n    float gz = 20.0;\n    \n    for (float i=10.0 ; i<30.0 ; i++)\n    {\n        vec2 uv = guv;\n        uv *= 1.0;\n        uv *= i;\n        uv.x -= 4.0 * i;\n        uv.x += iTime;\n        \n        float offset;\n        offset = round(uv.x, 10.0);\n        gv = min(gv, 4.0/i*tree(uv-vec2(offset+1.0*random2(offset),0.0), 0.15, random(offset)));\n        gz = min(gz, 0.02*i+tree(uv-vec2(offset+1.0*random2(offset),0.0), 0.15, random(offset)));\n    }\n    \n    vec3 col =\n        stars(guv) +\n        meteorstorm(guv) +\n        mix(vec3(0.0, 0.1, 0.4), vec3(0.0, 0.0, 0.1), guv.y) +\n        vec3(2.0, 0.4, 0.03) * 2.0\n        \t* max(0.15-guv.y*(1.4-abs(guv.x)), 0.0)\n        \t* clamp(1.0-40.0*(0.03-guv.y*(1.4-1.3*abs(guv.x))), 0.0, 1.0)\n        +\n        vec3(2.0, 0.8, 0.1) * max(2.0 - 10.0*length(vec2(guv.x, guv.y)), 0.0);\n    \n    col = mix(col, vec3(0.0), 100.0*(guv.y+0.005*sin(guv.x+0.1*iTime))<1.0?1.0:0.0);\n    col = mix(col, vec3(0.4, 0.05, 0.0) * clamp(-gv, 0.0, 1.0), gv<0.0?1.0:0.0);\n    \n    float mist = max(0.0, 3.0-1.45*length(vec2(0.4*guv.x,guv.y+1.5)));\n    col = mix(col, vec3(1.0), clamp(gz*mist*mist, 0.0, 1.0));\n    \n    fragColor = vec4(sqrt(col), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}