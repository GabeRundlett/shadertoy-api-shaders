{
    "Shader": {
        "info": {
            "date": "1629328577",
            "description": "Basic color adjustments.",
            "flags": 0,
            "hasliked": 0,
            "id": "ssdGR4",
            "likes": 3,
            "name": "Basic adjustments",
            "published": 3,
            "tags": [
                "saturation",
                "luminance",
                "hue",
                "adjustment"
            ],
            "usePreview": 0,
            "username": "miyaokamarina",
            "viewed": 316
        },
        "renderpass": [
            {
                "code": "precision lowp float;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 pos = fragCoord / iResolution.xy;\n    vec4 src = texture(iChannel0, pos);\n\n    // CSS-like color inversion:\n    //\n    // -   `0.0` — identity,\n    // -   `0.5` — grey,\n    // -   `1.0` — full inversion.\n    src = simple_inversion(src, 0.0);\n\n    // Like inversion, but doesn’t rotate hue:\n    //\n    // -   `0.0` — identity,\n    // -   `0.5` — hue map,\n    // -   `1.0` — full inversion.\n    src = luminance_inversion(src, 1.0);\n\n    // Hue rotation (degrees):\n    //\n    // -   `0.0` — identity.\n    // -   `PI`  — hue inversion.\n    src = hue_rotation(src, 0.0);\n\n    // Saturation scale:\n    //\n    // -   `0.0` — luminance map (grayscale).\n    // -   `1.0` — no-op.\n    src = saturation_scale(src, 1.5);\n\n    // Like brightness, but perceptually uniform:\n    //\n    // -   `0.5` — darken,\n    // -   `1.0` — identity,\n    // -   `1.5` — lighten.\n    //\n    // WARNING: It may produce out of gamut results.\n    src = luminance_scale(src, 0.6);\n\n    // Contrast adjustment:\n    //\n    // -   `0.0` — grey,\n    // -   `1.0` — identity.\n    src = contrast_scale(src, 1.1);\n\n    fragColor = src;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "precision lowp float;\n\n#define PI  3.141592653589793\n#define PI2 6.283185307179586\n\nvec4 simple_inversion(vec4 src, float s) {\n    float t = -2.0*s+1.0;\n\n    return src * mat4(\n        t, 0, 0, s,\n        0, t, 0, s,\n        0, 0, t, s,\n        0, 0, 0, 1.\n    );\n}\n\nvec4 luminance_inversion(vec4 src, float s) {\n    float t  = 1.0-s;\n\n    return src * mat4(\n        +1.000-0.426*s, -1.430+1.430*t, -0.144+0.144*t, s,\n        -0.426+0.426*t, +1.000-1.430*s, -0.144+0.144*t, s,\n        -0.426+0.426*t, -1.430+1.430*t, +1.000-0.144*s, s,\n         0,              0,            0,             1.\n    );\n}\n\nvec4 hue_rotation(vec4 src, float h) {\n    float ch = cos(h);\n    float sh = sin(h);\n\n    return src * mat4(\n        .213+ch*.787-sh*.213, .715-ch*.715-sh*.715, .072-ch*.072+sh*.928, 0,\n        .213-ch*.213+sh*.143, .715+ch*.285+sh*.140, .072-ch*.072-sh*.283, 0,\n        .213-ch*.213-sh*.787, .715-ch*.715+sh*.715, .072+ch*.928+sh*.072, 0,\n        0,                    0,                    0,                    1.\n    );\n}\n\nvec4 saturation_scale(vec4 src, float s) {\n    return src * mat4(\n        .213+.787*s, .715-.715*s, .072-.072*s, 0,\n        .213-.213*s, .715+.285*s, .072-.072*s, 0,\n        .213-.213*s, .715-.715*s, .072+.928*s, 0,\n        0,           0,           0,           1.\n    );\n}\n\n// TODO: Accurate version.\nvec4 luminance_scale(vec4 src, float l) {\n    return src * mat4(\n        .213*l+.787, .715*l-.715, .072*l-.072, 0,\n        .213*l-.213, .715*l+.285, .072*l-.072, 0,\n        .213*l-.213, .715*l-.715, .072*l+.928, 0,\n        0,           0,           0,           1.\n    );\n}\n\n// TODO: Perceptually uniform?\nvec4 contrast_scale(vec4 src, float c) {\n    float t = (1.0 - c) * 0.5;\n\n    return src * mat4(\n        c, 0, 0, t,\n        0, c, 0, t,\n        0, 0, c, t,\n        0, 0, 0, 1.\n    );\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}