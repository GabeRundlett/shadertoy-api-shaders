{
    "Shader": {
        "info": {
            "date": "1695327015",
            "description": "Visualize pseudo random of hash or something idk",
            "flags": 0,
            "hasliked": 0,
            "id": "Dd3czl",
            "likes": 1,
            "name": "Grainy",
            "published": 3,
            "tags": [
                "hash"
            ],
            "usePreview": 0,
            "username": "nicone1",
            "viewed": 133
        },
        "renderpass": [
            {
                "code": "float hash(vec2 p)\n{\n    p = fract(p * vec2(123.34, 456.21));\n    p += dot(p, p + 45.32);\n    return fract(p.x * p.y);\n}\n\nvec3 getBrush(\nvec2 uv, float xOffset, float yOffset, float xTurn, float yTurn, float intensity\n)\n{\n    vec2 gv = vec2(\n        uv.x + xOffset + hash(uv) * xTurn,\n        uv.y + yOffset + hash(uv) * yTurn\n    );\n    return vec3(intensity / length(gv));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    vec3 col = vec3(0.0);\n    col += getBrush(uv, 0.9, -0.2, -1.0, 1.0, 0.01) * vec3(1.0, 0.729, 0.471);\n    col += getBrush(uv, -0.5, -0.6, 1.8, 0.8, 0.04) * vec3(1.0, 0.471, 0.471) * hash(uv);\n    col += getBrush(uv, -0.2, 0.2, 0.0, 0.0, 0.05) * hash(uv) * 0.8;\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}