{
    "Shader": {
        "info": {
            "date": "1664989606",
            "description": "Inspired by Bicep's Atlas music video",
            "flags": 96,
            "hasliked": 0,
            "id": "NtyfRt",
            "likes": 1,
            "name": "Video Time Trail",
            "published": 3,
            "tags": [
                "video",
                "time",
                "buffer",
                "trail",
                "atlas",
                "bicep"
            ],
            "usePreview": 0,
            "username": "MysteryPancake",
            "viewed": 292
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec4 trail = texture(iChannel1, uv);\n    vec4 front = texture(iChannel0, uv);\n    vec4 bg = vec4(1.0, 0.2, 0.2, 0.0) + texture(iChannel2, uv * 0.5).r;\n    \n    vec4 fg = mix(trail, front, front.a);\n    fragColor = mix(bg, fg, fg.a);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "musicstream",
                        "id": 29928,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/feelmybicep/bicep-atlas"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define colorKey(vid) clamp((distance(vid.rgb, target) - threshold) / softness, 0.0, 1.0)\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    const vec3 target = vec3(0.0, 1.0, 0.0); // Find green\n    const float threshold = 0.7; // Controls target color range\n    const float softness = 0.1; // Controls linear falloff\n    \n    // One sample per rim light pass\n    vec4 vid = texture(iChannel0, uv);\n    vec4 vid2 = texture(iChannel0, uv + vec2(0.005));\n    vec4 vid3 = texture(iChannel0, uv - vec2(0.005));\n    \n    // Linear color key (https://www.shadertoy.com/view/NsfcWj)\n    float factor = colorKey(vid);\n    float factor2 = colorKey(vid2);\n    float factor3 = colorKey(vid3);\n    \n    // Yellow rim light\n    vid += vec4(1.0, 0.5, 0.5, 0.0) * (1.0 - factor2);\n    \n    // Blue rim light\n    vid += vec4(0.0, 0.0, 1.0, 0.0) * (1.0 - factor3);\n    \n    fragColor = vec4(vid.rgb, factor);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = fragCoord / iResolution.xy;\n    const vec2 offset = vec2(-0.002, -0.002);\n\n    if (iFrame < 1) {\n\n        // Initialize values to 0\n        fragColor = vec4(0.0);\n\n    } else if (iFrame % 8 == 0) {\n\n        // Sample every 8 frames\n        vec4 last = texture(iChannel0, uv + offset);\n        vec4 vid = texture(iChannel1, uv);\n        fragColor = mix(last, vid, vid.a);\n\n    } else {\n    \n        // Use previous sample\n        fragColor = texture(iChannel0, uv + offset);\n    }\n\n    // Decrease alpha over time\n    fragColor.a = clamp(fragColor.a - 0.0005, 0.0, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}