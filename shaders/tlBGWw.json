{
    "Shader": {
        "info": {
            "date": "1559759292",
            "description": "motionblur experiment",
            "flags": 32,
            "hasliked": 0,
            "id": "tlBGWw",
            "likes": 9,
            "name": "Submarine radar",
            "published": 3,
            "tags": [
                "motionblur",
                "radar"
            ],
            "usePreview": 0,
            "username": "avin",
            "viewed": 847
        },
        "renderpass": [
            {
                "code": "#define SF 1./min(iResolution.x,iResolution.y)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 ouv = fragCoord/iResolution.xy;\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;    \n        \n    vec3 activeCol= texture(iChannel0, ouv).rgb;\n    \n    float l = length(uv);\n    \n    float m = 0.;\n    \n    float i = .1*round(l/.1);\n    m += smoothstep(SF*2., 0., abs(i-l));            \n\n    m += smoothstep(SF, 0., abs(SF-uv.x));   \n    m += smoothstep(SF, 0., abs(SF-uv.y));    \n    \n    vec3 col = activeCol + vec3(0, 0.25, 0.) * m;\n    col *= step(l, .51);\n    \n    fragColor = vec4(col, 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define SF 1./min(iResolution.x,iResolution.y)\n\nmat2 rot(float a){\n\tfloat ca = cos(a);\n    float sa = sin(a);\n    return mat2(ca,-sa,sa,ca);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n    vec2 ouv = fragCoord/iResolution.xy;\n    \n    vec3 pPoses[6] = vec3[6](\n        vec3(.25, .25, .05),\n        vec3(-.15, .13, .08),\n        vec3(.12, -.20, .1),\n        vec3(.28, -.30, .13),\n        vec3(.05, .3, .18),\n        vec3(-.3, -.3, .3)\n    );\n    \n    float p = 0.;\n    for(int i=0; i<6; i++){\n        vec3 pd = pPoses[i];\n    \tp += smoothstep(pd.z, .0, length(uv - pd.xy));\n    }        \n    \n    uv *= rot(iTime*2.);\n            \n    float m = smoothstep(.025, 0., abs(uv.y)) * smoothstep(0., .1, uv.x) * smoothstep(.51, .49, uv.x);       \n    \n    vec3 backCol = texture(iChannel0, ouv).rgb*(p >0. ? min(.9+p*.1, 0.99) : .9);\n    \n    vec3 col = mix(backCol, vec3(0, 1., 0.), m);\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}