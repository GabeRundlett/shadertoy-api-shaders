{
    "Shader": {
        "info": {
            "date": "1532592930",
            "description": "Recursive. Expected result: No image change.",
            "flags": 32,
            "hasliked": 0,
            "id": "Ml3yW4",
            "likes": 3,
            "name": "Bilinear software filtering",
            "published": 3,
            "tags": [
                "bilinear"
            ],
            "usePreview": 1,
            "username": "ThomasSchander",
            "viewed": 894
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = textureLod(iChannel0, uv, 0.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec4 textureLodEmu(sampler2D sampler, vec2 uv, float DUMMY)\n{\n    vec2 samplingPosition = uv;\t\t \n    vec2 samplingFragment = samplingPosition * vec2(textureSize(sampler, 0)) - vec2(0.5);\n    vec2 f = fract(samplingFragment);\n    ivec2 samplingInteger = ivec2(samplingFragment);\t\n    ivec2 bilinearOffsets[4] = ivec2[4](ivec2(0, 0), ivec2(1, 0), ivec2(0, 1), ivec2(1, 1));\n\n    vec4 bilinearReads[4];\n    bilinearReads[0] = texelFetch(sampler, samplingInteger + bilinearOffsets[0], 0);\n    bilinearReads[1] = texelFetch(sampler, samplingInteger + bilinearOffsets[1], 0);\n    bilinearReads[2] = texelFetch(sampler, samplingInteger + bilinearOffsets[2], 0);\n    bilinearReads[3] = texelFetch(sampler, samplingInteger + bilinearOffsets[3], 0);\n\n    vec4 tA = mix( bilinearReads[0], bilinearReads[1], vec4(f.x) );\n    vec4 tB = mix( bilinearReads[2], bilinearReads[3], vec4(f.x) );\n    return mix( tA, tB, vec4(f.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    if(iFrame < 10)\n    {\n    \tfragColor = textureLod(iChannel0, uv, 0.0);\n    }\n    else\n    {\n        vec2 samplingPosition = uv;\n\t\tfragColor = textureLodEmu(iChannel1, uv, 0.0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}