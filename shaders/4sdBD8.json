{
    "Shader": {
        "info": {
            "date": "1524917269",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "4sdBD8",
            "likes": 8,
            "name": "helix 5 (double helix)",
            "published": 3,
            "tags": [
                "raymarching",
                "sdf",
                "spiral",
                "helix",
                "spring",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 610
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/4sdBW8\n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float t = iTime,l,d, r=20., a;\n    mat2  R = mat2( sin(t+vec4(0,33,11,0)) );\n    vec3  q = iResolution, c,\n          D = vec3(.3*(U+U-q.xy)/q.y, -1),    // ray direction\n          p = 90./q;                          // marching point along ray \n    O-=O;\n    for ( O++; O.x > 0. && t > .01 ; O-=.015 )\n        q = p,\n        q.xz *= R, q.yz *= R,                 // rotation\n        c = q, c.x+=r, a = atan(c.z,c.x), \n        q.x = length(c.xz)-r, q.z = r*a, q.y = mod(q.y-a*r/6.3,r)-r/2.,// global helix\n        l = length(q.xy), d = sin(atan(q.y,q.x)-q.z),           // sin: double\n                      //  d = mod(atan(q.y,q.x)-q.z,6.28)-3.14, // mod: single\n        t = length(vec2(l-4.,d)) - .5,        // double-spring\n        p += t*D;                             // step forward = dist to obj\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}