{
    "Shader": {
        "info": {
            "date": "1682739349",
            "description": "Another shiny fractal thing.",
            "flags": 8,
            "hasliked": 0,
            "id": "Dtt3zj",
            "likes": 6,
            "name": "Rainbow gem pattern (music)",
            "published": 3,
            "tags": [
                "fractal",
                "mosaic",
                "gem"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 213
        },
        "renderpass": [
            {
                "code": "vec2 triangle_wave(vec2 a){\n    vec2 a2 =\n        vec2(1.,0.5)\n    ,\n    a1 = a+a2;\n    return\n        abs(fract((a1)*(a2.x+a2.y))-.5)\n    ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 1.;\n    vec2 uv = (fragCoord)/iResolution.x/t1/2.0;\n    uv.y += (iTime/2.0,iTime/3.0)/t1/8.0;\n    if(iMouse.z>.5)\n    uv = uv.xy + iMouse.xy / iResolution.xy/t1;\n    vec2 t2 = vec2(0.);\n    bool b = true;\n    vec2 uv1 = uv;\n    uv.x = mod(uv.x,.5)+.25;\n    uv.y = mod(uv.y,1.)+1.;\n    for(int k = 0; k < 9; k++){\n        //k += int(uv.y>uv.x);\n        uv =\n            abs(-.5-uv-t2*sign(uv.y-uv.x))/1.5+1.\n            //abs(-.5*sign(uv.x-.5)-uv-t2*sign(uv.y-uv.x))/1.5+1.\n        ;\n        b =\n            uv.y>uv.x\n            //uv.y<uv.x&&col.x>0.\n        ;\n        if(b) uv = uv.yx;\n        t2 =\n            -triangle_wave(uv+.5).yx\n        ;\n        uv =\n            t2+triangle_wave(uv.yx).yx\n        ;\n        \n        //uv = -(fract(vec2(uv+vec2(.5,1.5))*2.)-.5)/2.;\n        \n        vec2 uv_1 =\n            uv\n            //triangle_wave(uv.yx+iTime)+t2\n        ;\n        \n        col.x =\n            abs((uv_1.x)-col.x)\n            //abs(sign(uv.x)-col.x)/2.\n        ;\n        \n        //awesome kaleidoscope effect!\n        //if(t2.y>t2.x) {t2 = t2.yx; uv=uv.yx-iTime/8.;}\n        \n        col.xyz =\n            abs(col.yzx-float(b)/2.)\n            //abs(col.yzx-float(uv.y>uv.x)/2.)\n        ;\n    }\n    if (!b) col = 1.-col;\n    fragColor = vec4(min(col,vec3(1.)),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float fmod(float a, float b){\n    //a += floor(-a)/b*8.;\n    return\n        mod(floor(a),b)\n        //floor(mod(mod(floor(a),b+floor(a/b)*2.),b))\n        //mod(floor(a+floor(b/2.)),b)\n    ;\n}\n\nvec2 mainSound(int samp, float time){\n  float s1 =\n      8.,\n  s2 = 4.,\n  t = time,\n  m1 =\n      0.\n  ;\n  \n  //change this number to get more interesting rhythms\n  float m4 =\n      2.\n      //2.*pow(2.,mod(floor(t/16.),2.))\n  ;\n  \n  for(int i = 0; i < 3; i++){\n      \n      //t += (fmod(time*pow(2.,fmod(t,3.)),2.));\n      t *= 1.+fmod(t/m4,2.);\n      t +=\n          floor(t/m4)\n          //floor(t/8.)+floor(t/4.)+floor(t/2.)\n      ;\n      //t += abs(mod((t*2.),2.)-mod((t*2.),3.));\n      m1 =\n      fmod(t*m4,s2);\n      //t += abs(mod((t),2.)-mod((t),3.));\n      \n      t = t/(1.+fmod(m1+floor(t*m4)+floor(t/m4),2.));\n  }\n  t *= s1/2.;\n  float\n  m3 =\n      fmod(t,s1/2.)\n  ;\n\n  float m2 =\n      1. + floor(fmod(t,s1/2.));\n  ;\n  float a=\n      pow((sqrt(fract(-t))),2.)*8.\n  ;\n  float nb = time*pow(2.,(m3+m2-m1)/5.+7.)*2.;\n  return\n      //instruments\n      abs(.5-abs(vec2(sin(nb),cos(nb))*a))*2.\n      \n      //sitar\n      //log(abs(a/8.-abs(.5-vec2(fract(nb/2.),fract(nb/2.)))*a))\n      \n      //abs(1.-2.*abs(.5-abs(vec2(sin(nb),cos(nb)))))*a\n  ;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}