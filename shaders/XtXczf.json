{
    "Shader": {
        "info": {
            "date": "1508720456",
            "description": "Side to side",
            "flags": 0,
            "hasliked": 0,
            "id": "XtXczf",
            "likes": 0,
            "name": "Ping pong for Jesus",
            "published": 3,
            "tags": [
                "graprog"
            ],
            "usePreview": 0,
            "username": "L1tang",
            "viewed": 127
        },
        "renderpass": [
            {
                "code": "float parabola( float x, float k )\n{\n    return pow( 4.0*x*(1.0-x), k );\n}\n\n \t\n\nfloat gain(float x, float k) \n{\n    float a = 0.5*pow(2.0*((x<0.5)?x:1.0-x), k);\n    return (x<0.5)?a:1.0-a;\n}\n\nfloat impulse( float k, float x )\n{\n    float h = k*x;\n    return h*exp(1.0-h);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    //uv *= 5.0;\n    \n    //uv = fract(uv);\n    \n    //gain(uv.x, uv.y)\n    //impulse(uv.x, uv.y)\n    //parabola(uv.x, uv.y)\n    //vec3 color = vec3(impulse(uv.x*uv.y, 14.5), gain(uv.x*uv.y, 14.5),impulse(uv.x*uv.y, 14.5));\n    \n    //step stuff\n    \n    //vec3 rect1 = vec3(step((sin(iTime)+ 1.0)/2.0, uv.x + 0.2) - step((sin(iTime)+ 1.0)/2.0, uv.x + 0.1)); // initial rect\n    vec3 rect1 = vec3(smoothstep((sin(iTime)+ 1.0)/2.0,(sin(iTime)+ 1.0)/2.0 + 0.2, uv.x + 0.2) \n                      - smoothstep((sin(iTime)+ 1.0)/2.0,(sin(iTime)+ 1.0)/2.0 + 0.1, uv.x + 0.1));\n    //step(x, y) if x < y then return 0\n    //rect1 -= vec3(step(uv.x, .4)) - vec3(step(uv.x, .2));\n    \n    \n    /*rect1 -= vec3(step(uv.y, 0.3)) - vec3(step(uv.y, 0.0));\n    rect1 -= vec3(step(uv.y, 1.0)) - vec3(step(uv.y, .7));*/\n    \n    rect1 -= vec3(smoothstep(uv.y, uv.y + 0.9, 0.3)) - vec3(smoothstep(uv.y, uv.y, 0.0));\n    rect1 -= vec3(step(uv.y, 1.0)) - vec3(step(uv.y, .7));\n    \n    //rect1 -= vec3(step(sin(iTime), uv.y + .3) - (sin(iTime), uv.y + .1));\n    //abs(.5-frac(.5*x+25))*2\n    \n\tfragColor = vec4(rect1, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}