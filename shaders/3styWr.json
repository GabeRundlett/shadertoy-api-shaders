{
    "Shader": {
        "info": {
            "date": "1600762973",
            "description": "full screen it for best results. .Webcam required",
            "flags": 34,
            "hasliked": 0,
            "id": "3styWr",
            "likes": 4,
            "name": "flow19",
            "published": 3,
            "tags": [
                "flow"
            ],
            "usePreview": 0,
            "username": "tomviolin",
            "viewed": 415
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    //if (uv.x>CAMSTRIP/iResolution.x && (uv.y>.95 || uv.y <0.05)) {\n    //    fragColor = vec4(1);\n    //    return;\n    //}        \n    fragColor = texture(iChannel0,uv);\n    if (uv.x < (CAMSTRIP+1.)/iResolution.x &&\n        uv.x > (CAMSTRIP-2.0)/iResolution.x) {\n        fragColor=fragColor+0.3;\n    }\n    if (uv.x < (CAMSTR+1./iResolution.x) &&\n        uv.x > (CAMSTR)) {\n        fragColor=fragColor+0.3;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec4 vecpow(vec4 v, float p) {\n    return vec4(\n        pow(v.x,p),\n        pow(v.y,p),\n        pow(v.z,p),\n        v.w);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 cam=vecpow(texture(iChannel0, vec2(.6-uv.x,uv.y)),1.0);\n    cam.a=1.0;\n    vec4 lup = vec4(0,0,0,0);\n    if (uv.x > (CAMSTRIP+5.0)/iResolution.x) {\n    \tlup=texture(iChannel1, uv+vec2(-2.0/iResolution.x,0.0));\n    \tfragColor = lup;\n    } else if (uv.x > (CAMSTRIP+3.0)/iResolution.x) {\n    \tlup=texture(iChannel1, uv+vec2(-1.2/iResolution.x,0.0));\n    \tfragColor = lup;\n    } else if (uv.x > (CAMSTRIP+1.0)/iResolution.x) {\n    \tlup=texture(iChannel1, uv+vec2(-0.96/iResolution.x,0.0));\n    \tfragColor = lup;\n    } else if(uv.x > CAMSTRIP/iResolution.x) {\n    \tlup=texture(iChannel1, vec2(CAMSTR,uv.y));\n    \tfragColor = lup;\n    } else {\n        fragColor = (cam);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "float CAMFRAC=0.25;\n\n    \n    \n    \n#define CAMSTRIP  (iResolution.x*CAMFRAC)\n\n\nfloat camstr(float iTime, vec3 iResolution) {\n    float ts=iTime*CAMFRAC/iResolution.x*3000.;\n    float phase=mod(ts+2.0,4.)>=2.0?1.0:-1.0;\n    float wavefunc=( ((mod(ts,2.0))/2.0-0.5)*phase);\n    float wavefun=sin(iTime/0.9)/2.0;\n    return CAMFRAC/2.0+ wavefun*CAMFRAC;\n\t//return (CAMSTRIP/2.0)+pow(sin(5.0*iTime/3.14159/1.),1.0)*CAMSTRIP/2.0;\n}\n\n\n#define CAMSTR (camstr(iTime,iResolution))\n\n//#define CAMSTRIP camstr(iTime)",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}