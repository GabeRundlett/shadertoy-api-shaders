{
    "Shader": {
        "info": {
            "date": "1722664131",
            "description": "..",
            "flags": 32,
            "hasliked": 0,
            "id": "4cBcz3",
            "likes": 10,
            "name": " Interference Pattern",
            "published": 3,
            "tags": [
                "waves"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 128
        },
        "renderpass": [
            {
                "code": "// Fork of \"Galaxy Fractal II\" by wyatt. https://shadertoy.com/view/Mc2yRK\n// 2024-08-02 19:23:54\n\n// Fork of \"Path Fractal\" by wyatt. https://shadertoy.com/view/4fjcRV\n// 2024-08-02 16:49:55\n\n// Fork of \"Pentagram Fractal\" by wyatt. https://shadertoy.com/view/Xc2yRK\n// 2024-08-02 14:21:37\n\n// Fork of \"Galaxy Fractal\" by wyatt. https://shadertoy.com/view/XcSyzV\n// 2024-08-02 13:17:37\n\nMain {\n    Q = vec4((A(U))/float(iFrame));\n    Q = 1.-vec4(dot(Q.xy,Q.xy),sqrt(.5)*dot(Q,Q),dot(Q.zw,Q.zw),1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\n#define Main void mainImage(out vec4 Q, in vec2 U) \n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel1,(U)/R)\nvec4 hash44(vec4 p4)\n{\n\tp4 = fract(p4  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\nvec4 noise (vec2 U) {\n    vec2 f = floor(U);\n    vec2 c = ceil(U);\n    vec4 _00 = pow(hash44(vec4(f,f)),vec4(1,3,3,3));\n    vec4 _01 = pow(hash44(vec4(f.x,c.y,f.x,c.y)),vec4(1,3,3,3));\n    vec4 _10 = pow(hash44(vec4(c.x,f.y,c.x,f.y)),vec4(1,3,3,3));\n    vec4 _11 = pow(hash44(vec4(c,c)),vec4(1,3,3,3));\n    vec4 _0 = mix(_00,_01,fract(U.y));\n    vec4 _1 = mix(_10,_11,fract(U.y));\n    return mix(_0,_1,fract(U.x));\n}\n#define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define pi 3.14159265359\n#define phi 1.618\nfloat ln (vec2 p, vec2 a, vec2 b) { \n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "Main {\n    Q = A(U);\n    vec4 h1 = hash44(vec4(U,iTime,iFrame));\n    for (float i = 0.; i < 100.; i++) {\n      vec4 h = hash44(vec4(i,i,i,i));\n      vec2 u = R*(.5+.25*(h.xy*2.-1.)*vec2(1,R.x/R.y));\n       \n        \n      float a = .66*length(U-u);\n      a = mod(a,2.*pi);\n      float b = .66*1.01*length(U-u);\n      b = mod(b,2.*pi);\n      Q.xy += .05*vec2(cos(a),sin(a));\n      Q.zw += .05*vec2(cos(b),sin(b));\n    }\n    \n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}