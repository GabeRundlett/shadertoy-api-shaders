{
    "Shader": {
        "info": {
            "date": "1656492929",
            "description": "https://en.wikipedia.org/wiki/Losharik",
            "flags": 0,
            "hasliked": 0,
            "id": "NsdfW4",
            "likes": 2,
            "name": "Static Horble",
            "published": 3,
            "tags": [
                "losharik",
                "horble"
            ],
            "usePreview": 0,
            "username": "pyBlob",
            "viewed": 70
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage(out vec4 C, in vec2 O)\n{\n    f = 2. / iResolution.y;\n    vec2 uv = O - vec2(iResolution.x / 2., 0);\n    uv *= f;\n    uv.y -= 0.2;\n    uv.x += 0.3;\n    \n    // animation blend states\n    float t = .5+.5*cos(iTime/2.0); t*1.;\n    float u = .5+.5*cos(iTime/3.2); u*=.5;\n    float v = smoothstep(0.2,0.3,cos(iTime/2.7)); v*=1.;\n    float w = smoothstep(0.5,0.6,cos(iTime/4.2+2.0)); w*=1.;\n    float x = cos(iTime*12.); x*=smoothstep(0.5,1.0,cos(iTime/2.3));\n    float y = .5+.5*cos(iTime*2.); y*=smoothstep(0.73,1.0,cos(iTime/3.9));\n    u += .15 * y;\n\n    float bend;\n\n    // first ball\n    Circle shoulder = Circle(vec3(0.0, 0.0, 0.0), vec2(0.00 + fade(.1,u), 0.53 + fade(.02,t) + fade(-.020,u)), 0.10, radians(5. + fade(-6.,u)));\n    \n    // right leg\n    bend = 40. + fade(-2.,t) + fade(1.5,u);\n    Circle right_0 = connect(shoulder, vec3(0.70, 0.50, 0.40), radians(200. + fade(3.,t) + fade(-7.,u)), 0.05);\n    Circle right_1 = connect(right_0, vec3(0.80, 0.20, 0.00), radians(bend), 0.05);\n    Circle right_2 = connect(right_1, vec3(0.70, 0.01, 0.00), radians(bend), 0.05);\n    Circle right_3 = connect(right_2, vec3(0.60, 0.10, 0.00), radians(bend*1.2), 0.05);\n    Circle right_4 = connect(right_3, vec3(0.60, 0.00, 0.00), radians(bend*-.5), 0.05);\n    Circle rightFoot = connect(right_4, vec3(0.50, 0.01, 0.00), radians(bend*-.5), 0.06);\n\n    // back\n    bend = -20.;\n    Circle saddle = connect(shoulder, vec3(0.70, 0.10, 0.00), radians(-bend + fade(-2.,t)), 0.12);\n    Circle hip = connect(saddle, vec3(0.70, 0.00, 0.00), radians(2.*bend), 0.10); turn(hip, radians(-bend));\n\n    // tail\n    bend = -20.+fade(25.,y);\n    Circle tail_0 = connect(hip, vec3(0.90, 0.30, 0.02), radians(055.), 0.05);\n    Circle tail_1 = connect(tail_0, vec3(0.70, 0.05, 0.00), radians(bend), 0.05);\n    Circle tail_2 = connect(tail_1, vec3(0.40, 0.01, 0.00), radians(bend), 0.05);\n    Circle tail_3 = connect(tail_2, vec3(0.80, 0.35, 0.00), radians(bend), 0.07);\n    \n    // rear leg\n    bend = -15. + fade(1.,t) + fade(-10.,u);\n    Circle rear_0 = connect(hip, vec3(0.01, 0.01, 0.01), radians(310. + fade(20.,u)), 0.05);\n    Circle rear_1 = connect(rear_0, vec3(0.05, 0.20, 0.02), radians(bend), 0.05);\n    Circle rear_2 = connect(rear_1, vec3(0.00, 0.00, 0.00), radians(bend), 0.05);\n    Circle rear_3 = connect(rear_2, vec3(0.80, 0.00, 0.00), radians(bend*1.5), 0.05);\n    Circle rear_4 = connect(rear_3, vec3(0.00, 0.01, 0.03), radians(bend*.1), 0.05);\n    Circle rearFoot = connect(rear_4, vec3(0.00, 0.00, 0.00), radians(bend*-.2), 0.06);\n\n    // head\n    bend = -15.;\n    Circle neck_0 = connect(shoulder, vec3(0.80, 0.05, 0.00), radians(140.), 0.05);\n    Circle neck_1 = connect(neck_0, vec3(0.00, 0.05, 0.20), radians(bend), 0.05);\n    Circle neck_2 = connect(neck_1, vec3(0.00, 0.40, 0.00), radians(bend), 0.05);\n    Circle head = connect(neck_2, vec3(0.80, 0.40, 0.03), radians(bend), 0.15);\n    Circle hat = connect(head, vec3(0.70, 0.00, 0.00), radians(310.), 0.05); move(hat, -0.010, 0.000);\n    // eye\n    Circle eye = connect(head, vec3(0.90, 0.90, 0.90), radians(000.), 0.07); move(eye, -0.190, 0.020); turn(eye, radians(150.+fade(20.,u)));\n    Circle pupil = connect(eye, vec3(0.00, 0.00, 0.00), radians(000.), 0.06); move(pupil, -0.132+fade(-.005,w), 0.014+fade(-.007,v));\n    // nose\n    Circle nose = connect(head, vec3(0.10, 0.01, 0.00), radians(080.), 0.06); move(nose, -0.030, 0.000);\n    // mouth\n    Circle mouth = connect(head, vec3(0.40, 0.05, 0.00), radians(125.), 0.03); move(mouth, -0.030+fade(.002,x), 0.000);\n    \n    // left leg\n    bend = 25. + fade(-4., t);\n    Circle left_0 = connect(shoulder, vec3(0.00, 0.00, 0.20), radians(215. + fade(7.,t) + fade(-4.,u)), 0.05);\n    Circle left_1 = connect(left_0, vec3(0.00, 0.20, 0.00), radians(bend), 0.05);\n    Circle left_2 = connect(left_1, vec3(0.00, 0.00, 0.15), radians(bend), 0.05);\n    Circle left_3 = connect(left_2, vec3(0.01, 0.01, 0.01), radians(bend), 0.05);\n    Circle left_4 = connect(left_3, vec3(0.40, 0.02, 0.00), radians(bend*-.2), 0.05);\n    Circle leftFoot = connect(left_4, vec3(0.00, 0.00, 0.00), radians(bend*-.3), 0.06);\n\n    C = vec4(0.11, 0.40, 0.90, 1);\n    vec3 grass = vec3(0.6,0.7,0);\n    vec2 shadow = (leftFoot.center + rightFoot.center + rearFoot.center * 2.) / 4.;\n    //vec2 shadow = vec2(saddle.center.x, 0.);\n    float rshadow = length((uv - shadow)*vec2(1.5,5));\n    grass *= mix(.5, 1., smoothstep(0.1, 1., rshadow));\n    C = blend(C, grass, -uv.y/f);\n    C = blend(C, uv, shoulder);\n    C = blend(C, uv, right_0);\n\tC = blend(C, uv, right_1);\n\tC = blend(C, uv, right_2);\n\tC = blend(C, uv, right_3);\n\tC = blend(C, uv, right_4);\n\tC = blend(C, uv, rightFoot);\n\tC = blend(C, uv, saddle);\n\tC = blend(C, uv, hip);\n\tC = blend(C, uv, tail_0);\n\tC = blend(C, uv, tail_1);\n\tC = blend(C, uv, tail_2);\n\tC = blend(C, uv, tail_3);\n\tC = blend(C, uv, rear_0);\n\tC = blend(C, uv, rear_1);\n\tC = blend(C, uv, rear_2);\n\tC = blend(C, uv, rear_3);\n\tC = blend(C, uv, rear_4);\n\tC = blend(C, uv, rearFoot);\n\tC = blend(C, uv, neck_0);\n\tC = blend(C, uv, neck_1);\n\tC = blend(C, uv, neck_2);\n\tC = blend(C, uv, head);\n\tC = blend(C, uv, hat);\n\tC = blend(C, uv, eye);\n\tC = blend(C, uv, pupil);\n\tC = blend(C, uv, nose);\n\tC = blend(C, uv, mouth);\n\tC = blend(C, uv, left_0);\n\tC = blend(C, uv, left_1);\n\tC = blend(C, uv, left_2);\n\tC = blend(C, uv, left_3);\n\tC = blend(C, uv, left_4);\n\tC = blend(C, uv, leftFoot);\n    C.xyz = sqrt(C.xyz);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "struct Circle\n{\n    vec3 color;\n    vec2 center;\n    float radius;\n    float angle;\n};\n\nmat2 R(float a)\n{\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, -s, s, c);\n}\nvec2 v(float a)\n{\n    return vec2(1, 0) * R(a);\n}\nCircle connect(Circle current, vec3 color, float angle, float radius)\n{\n    vec2 center = current.center;\n    angle += current.angle;\n    center += v(angle) * (current.radius + radius);\n    return Circle(color, center, radius, angle);\n}\nvoid move(inout Circle current, float dx, float dy)\n{\n    current.center += vec2(dx, dy) * R(current.angle);\n}\nvoid turn(inout Circle current, float da)\n{\n    current.angle += da;\n}\n\nfloat fade(float target, float x) { return target * x; }\n\nfloat l2(vec2 x)\n{\n    return dot(x, x);\n}\n\nfloat l2(vec3 x)\n{\n    return dot(x, x);\n}\n\nfloat f;\nvec4 blend(vec4 C, vec3 c, float r)\n{\n    return mix(C, vec4(c, 1), clamp(r + .5, 0., 1.));\n}\n\nvec4 blend(vec4 C, vec2 uv, Circle circle) {\n    vec3 light = normalize(vec3(10, 9, 5));\n    vec3 rd = vec3(0, 0, -1);\n\n    vec2 offset = uv - circle.center;\n    float r = length(offset);\n    vec3 normal = vec3(offset / circle.radius, 0);\n    normal.z = sqrt(max(0., 1. - l2(normal.xy)));\n\n    vec3 color = circle.color;\n    color *= .5 + clamp(dot(normal, light), 0., 1.);\n    color += vec3(.1) * pow(clamp(l2(cross(rd, normal)), 0., 1.), 4.) * clamp(dot(normal, light)+.1, 0., 1.);\n    color += vec3(.5) * pow(clamp(dot(reflect(rd, normal), light), 0., 1.), 30.);\n    C = blend(C, color, -(r-circle.radius)/f);\n    return C;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}