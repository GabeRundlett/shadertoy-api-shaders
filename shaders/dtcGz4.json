{
    "Shader": {
        "info": {
            "date": "1681998748",
            "description": "working off IQ's tutorials",
            "flags": 0,
            "hasliked": 0,
            "id": "dtcGz4",
            "likes": 1,
            "name": "Globumorphic",
            "published": 3,
            "tags": [
                "tutorial"
            ],
            "usePreview": 0,
            "username": "drliquidglitch",
            "viewed": 162
        },
        "renderpass": [
            {
                "code": "float noise(vec2 x){\nreturn fract(x.y)+fract(x.y);\n}\n\n\nfloat fbm( vec2 p ) {\n    float f = 0.;\n    f += 0.5 + noise(p);\n    f += 0.25 + noise(p);\n    f += 0.125 + noise(p);\n    f /= 0.875;\n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float r = 0.2 + (0.1*cos(iTime*0.5))*cos(atan(uv.y, uv.x)*10.0*cos(iTime*0.5)+(iTime*0.25));\n    \n    col *= fbm(uv.xy)*smoothstep(r, r+0.2*abs(cos(iTime)), length( uv - vec2(0.5, 0.5)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}