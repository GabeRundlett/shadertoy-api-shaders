{
    "Shader": {
        "info": {
            "date": "1725109110",
            "description": "originals  https://www.shadertoy.com/view/stsXDl https://glslsandbox.com/e#57876.0",
            "flags": 0,
            "hasliked": 0,
            "id": "Xf2BzG",
            "likes": 3,
            "name": "cubic with code",
            "published": 3,
            "tags": [
                "fractal",
                "code"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 65
        },
        "renderpass": [
            {
                "code": "#define time iTime\n#define resolution iResolution.xy\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 dir = normalize(vec3((cos(iTime)*-.5)*-4.,(sin(iTime)*-.5)*4.,1.0));\n\tvec3 left = normalize(cross(dir,vec3(0,1,0)));\n\tvec3 up = cross(dir,left);\n    vec4 O=fragColor;\n     vec2 C=fragCoord;\n\t O=vec4(0);\n    vec3 p,q,r=iResolution,\n    d2=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<70.;\n        O.xyz+=mix(vec3(1),H(g*.1),.8)*1./e/8e3\n    )\n    {\n        p=g*d2;\n\n      \n        a=30.;\n        p=mod(p-a,a*2.)-a;\n        s=3.;\n        \n        for(int i=0;i++<10;){\n       \n            p=0.1-abs(p);\n            p.x<p.z?p=p.zyx:p;\n            p.z<p.x?p=p.xzy:p;\n            s*=e=1.50*1.1;\n            \n            p=abs(p)*e-\n                vec3(\n                    5.*3.,\n                    120,\n                    10.*5.\n                 );\n         }\n         g+=e=length(p.xyy)/s;\n         g+=e=length(p.xzy)/s;\n    }\n\tvec3 pos = -dir*10.+O.xyz;\n\t\n\tvec2 screen = (gl_FragCoord.xy-resolution*.5)/resolution.x;\n\t\n\tvec3 ray = normalize(dir+left*screen.x-up*screen.y);\n\t\n\tfloat dsum = 0.;\n\tfloat d;\n\t\n\tfor (int i = 0; i < 75; i++) {\n\t\td = length(max(max(abs(fract(pos+O.xyz)-.5)-.3,0.), abs(pos+O.xyz)-2.0));\n\t\tdsum += d;\n\t\tpos  += d*ray;\n\t}\n\t\n\t\n\tfragColor = vec4(1.0-vec3(dsum)*0.08,1.);\n    fragColor+=O+O+O;\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}