{
    "Shader": {
        "info": {
            "date": "1702305061",
            "description": "hearts",
            "flags": 0,
            "hasliked": 0,
            "id": "DtKfzG",
            "likes": 2,
            "name": "rotating_hearts",
            "published": 3,
            "tags": [
                "rotation"
            ],
            "usePreview": 0,
            "username": "anmol",
            "viewed": 137
        },
        "renderpass": [
            {
                "code": "const float PI = 3.14;\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, -s, \n                 s,  c );\n}\n\nvec3 palette(float t)\n{    \n    vec3 a = vec3(0.049, 0.109, 0.662);\n    vec3 b = vec3(0.408, 0.456 ,0.077);\n    vec3 c = vec3(0.564, 0.367 ,0.556);\n    vec3 d = vec3(2.722, 2.609, 0.063);\n\n    return a + b*cos(3.14*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (2.0*fragCoord - iResolution.xy) / iResolution.y;\n    uv *= rotationMatrix(iTime*25.0);\n    uv = (fract(uv * 2.0) * 3.0) - 1.5;\n    uv *= rotationMatrix(-1.0*iTime*100.0);    \n    float d = (pow(uv.x, 2.) + pow(uv.y, 2.) - uv.y * abs(uv.x));\n    d = exp(sin(d)) + iTime*0.8 + d;\n    vec3 col = smoothstep(0.0,9./iResolution.y,palette(d));\n    fragColor = vec4(col,1.0);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}