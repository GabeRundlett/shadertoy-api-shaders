{
    "Shader": {
        "info": {
            "date": "1551222413",
            "description": "watched this video about hexagonal tiling:\nhttps://www.youtube.com/watch?time_continue=1&v=VmrIDyYiJBA",
            "flags": 0,
            "hasliked": 0,
            "id": "tssSWH",
            "likes": 8,
            "name": "hexagon flowers",
            "published": 3,
            "tags": [
                "2d",
                "hexagon"
            ],
            "usePreview": 0,
            "username": "abje",
            "viewed": 566
        },
        "renderpass": [
            {
                "code": "#define rot(A) mat2(cos(A),-sin(A),sin(A),cos(A))\n#define pi acos(-1.0)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float scale = 10.0;\n    vec2 uv = scale*(fragCoord*2.0-iResolution.xy)/iResolution.y;\n    \n    float aa = iResolution.y*0.5/scale;\n    \n    float len = 1000.0;\n    \n    vec2 bh = vec2(1,3.0/sqrt(3.0));\n    vec2 a = mod(uv+bh,bh*2.0)-bh;\n    vec2 b = mod(uv,bh*2.0)-bh;\n    \n    vec2 p;\n    if (dot(a,a) < dot(b,b)) {\n        p = a;\n    } else {\n        p = b;\n    }\n    \n    vec2 id = uv-p;\n    \n    float e1 = length(uv)*0.3+iTime;\n    float e2 = length(id)*0.3+iTime;\n    \n    vec3 p2;\n    p2.x = p.x;\n    p2.y = dot(p,normalize(vec2(1,sqrt(3.0))));\n    p2.z = dot(p,normalize(vec2(-1,sqrt(3.0))));\n    \n    vec3 q = abs(p2);\n    float d1 = min(min(q.x,q.y),q.z);\n    float d2 = max(max(q.x,q.y),q.z);\n    \n    p *= rot(min(mod(e2+2.5,pi),pi/3.0));\n    \n    p2.x = p.x;\n    p2.y = dot(p,normalize(vec2(1,sqrt(3.0))));\n    p2.z = dot(p,normalize(vec2(-1,sqrt(3.0))));\n    \n    q = abs(p2);\n    float d3 = min(min(q.x,q.y),q.z);\n    float d4 = max(max(q.x,q.y),q.z);\n    \n    float c = clamp(max(d3-0.25,d4-0.75)*aa,0.0,1.0);\n    \n    c = (c-0.5)*clamp(sin(e1)*aa/0.3*2.0,-1.0,1.0)+0.5;\n    \n    len = min(len, c);\n    \n    len = min(len, -(d2-1.0)*aa-0.5);\n    \n    vec3 col = textureLod(iChannel0,id*0.1,0.0).xyz;\n    col *= len;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}