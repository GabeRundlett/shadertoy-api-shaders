{
    "Shader": {
        "info": {
            "date": "1717862491",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "MXK3zy",
            "likes": 27,
            "name": "cube variant",
            "published": 3,
            "tags": [
                "3d",
                "spheretracing",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 254
        },
        "renderpass": [
            {
                "code": "#define rot(a)  mat2(cos(a+vec4(0,11,33,0)))               // rotation \n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t=9., e=t;\n    vec3  R =  iResolution, a,b,\n          D = normalize(vec3(U+U, -12.*R.y) - R ),         // ray direction\n          p = vec3(0,0,15), q,                             // marching point along ray \n          M = iMouse.z > 0. ? iMouse.xyz/R -.5 :           // comment for no mouse cam\n                 vec3( .15,.07,0) * cos(.3*iTime + vec3(0,11,0)); \n          \n    for ( O=vec4(1); O.x > 0. && t > .01; O-=.01 )         // march scene\n        q = p,\n        q.yz *= rot(-6.*M.y),                              // rotations\n        q.xz *= rot(-6.*M.x-1.57),\n        a = abs(q),\n        a = a.y>a.x ? a.yxz : a,                           // sort a\n        a = a.z>a.y ? a.xzy : a,\n      //a = a.y>a.x ? a.yxz : a,\n        b = abs(a-.6),\n     // t = 9.,\n        t = min( t, max( max(max(b.x,b.y) , a.z-.6 ) - .05,// full 3D shape: edges \n                        .1 - min(a.x,min(a.y,a.z)) )),     //                minus axe planes\n        e = min(e, dot(q,q) ),                             // min dist to center point\n        p += t*D;                                          // step forward = dist to obj          \n\n   O *= O * 1.1;                                           // color scheme\n   O.r += exp(-e*e*7.*(1.+.5*sin(3.*iTime)));              // halo\n// O.r += sqrt(max(0., 1. - e*4. ));                       // transparent sphere\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}