{
    "Shader": {
        "info": {
            "date": "1601627428",
            "description": "[url]https://inktober.com/[/url]\n#inktober2020 themes: \n[img]https://i.imgur.com/b3gMiu0.png[/img]\n",
            "flags": 0,
            "hasliked": 0,
            "id": "wsccWB",
            "likes": 8,
            "name": "Fab1 #inktober2020 \"fish\"  274ch",
            "published": 3,
            "tags": [
                "2tweets",
                "short",
                "golf",
                "inktober2020"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 342
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 o, vec2 u) {\n    vec2 R = iResolution.xy,          O = R-R,\n         U = 4.* u / R.y - vec2(6,2), V = U.yy - iTime;\n    U.y > 0. ? o += max(0.,1.-abs(length( vec2( U.x+.8+.2*sin(ceil(3.*V.y)),\n                                                fract(V)-.5) ) -.05\n                                 ) *R.y/4.)      : o;\n     U.y*U.y < 1.\n     ?  U.y *= sign( (U.x + 3.58 ) * U.y ),\n        O += length(++U) - atan(U.y,U.x),\n        O *= R.y/8., o += max( 1. - O*O, 0. ).x  : o;}    /*\n\n\n\n\n\n\n// --- 151 chars   just the fish\n\n#define mainImage(O,u)                                    \\\n    vec2 R = iResolution.xy,                              \\\n         U = 4.* u / R.y - vec2(6,2);                     \\\n    U.y*U.y < 1.                                          \\\n     ?  U.y *= sign( (U.x + 3.58 ) * U.y ),               \\\n        O += length(++U) - atan(U.y,U.x),                 \\\n        O *= R.y/8., O = 1.-O*O     : O                  /*\n\n\n\n\n\n\n// --- 147 chars   but line artifact at some resolutions\n\n#define mainImage(O,u)                                    \\\n    vec2 U = 4.* u / iResolution.y - vec2(6,2);           \\\n    U.y*U.y < 1.                                          \\\n     ?  U.y *= sign( (U.x + 3.58 ) * U.y ),               \\\n        O += length(++U) - atan(U.y,U.x),                 \\\n        O /= fwidth(O), O = 1.-O*O     : O\n\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}