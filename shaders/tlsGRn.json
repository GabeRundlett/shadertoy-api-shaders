{
    "Shader": {
        "info": {
            "date": "1555526407",
            "description": "Schrodinger equation on a fluid medium. just cuz",
            "flags": 32,
            "hasliked": 0,
            "id": "tlsGRn",
            "likes": 10,
            "name": "Schro ona Flu",
            "published": 3,
            "tags": [
                "physics"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 627
        },
        "renderpass": [
            {
                "code": "#define R iResolution.xy\nvec4 T (vec2 U) {return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    Q = sin(vec4(1,2,3,4)*length(T(U)));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\nvec4 F (vec2 U) {return texture(iChannel2,U/R);}\nfloat ln (vec2 p, vec2 a, vec2 b) { // returns distance to line segment for mouse input\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nvec4 T (vec2 U) {\n    U -= 0.5*F(U).xy;\n    U -= 0.5*F(U).xy;\n    return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    Q = T(U);\n \tif (iFrame < 1) Q = vec4(0);\n    #define e  vec2 (1,0)\n    float dQ = ((T(U+e.xy)+T(U-e.xy)+T(U+e.yx)+T(U-e.yx)).x/4.-Q.x);\n    \n    //Schr Eq :\n      Q.y += dQ-Q.x;\n\t  Q.x +=    Q.y;\n     /*\n\t\tQ.y += dQ;\n\t\tQ.x += Q.y;\n\t */\n    //Wave Eq ^\n    \n    vec4 mo = texture(iChannel1,vec2(0));\n    float l = ln(U,mo.xy,mo.zw);\n    if (iMouse.z>1.) Q.x = mix(Q.x,1.,exp(-.1*l));\n    if (iFrame < 1 && length(0.5*R-U) < 10.) Q.x = 10.*sin(0.5*U.x);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Fluid\nvec2 R;\nfloat ln (vec2 p, vec2 a, vec2 b) { // returns distance to line segment for mouse input\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nvec4 A (vec2 U) {return texture(iChannel2,U/R);}\nvec4 t (vec2 U) { // access buffer\n\treturn texture(iChannel0,U/R);\n}\nvec4 T (vec2 U) {\n    // sample things where they were, not where they are\n\tU -= 0.5*t(U).xy;\n\tU -= 0.5*t(U).xy;\n    return t(U);\n}\nvec2 x (float a, vec2 U, vec2 r) {\n\treturn r * (A(U+r).x-a);\n}\nvoid mainImage( out vec4 C, in vec2 U )\n{\n   R = iResolution.xy;\n   C = T(U);\n   #define o 1.\n   vec4 // neighborhood\n        n = T(U+vec2(0,o)),\n        e = T(U+vec2(o,0)),\n        s = T(U-vec2(0,o)),\n        w = T(U-vec2(o,0));\n   // xy : velocity, z : pressure, w : spin\n   C.x -= 0.25*(e.z-w.z+C.w*(n.w-s.w));\n   C.y -= 0.25*(n.z-s.z+C.w*(e.w-w.w));\n   C.z  = 0.25*((s.y-n.y+w.x-e.x)+(n.z+e.z+s.z+w.z));\n   C.w  = 0.25*((n.x-s.x+e.y-w.y)-C.w);\n   \n  \n   // boundary conditions\n   if( U.x < 2. || U.y < 2. || R.x-U.x < 2. || R.y-U.y < 2.)\n        C.xy *= 0.;\n   vec4 mo = texture(iChannel1,vec2(0));\n   float l = ln(U,mo.xy,mo.zw);\n   if (iFrame < 1 && length(0.5*R-U) < 10.) C.x = sin(0.5*U.x);\n   if (iMouse.z>0.) C.xy = mix(C.xy,10.*(mo.xy-mo.zw)/R.y,exp(-.5*l));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// mouse\nvec2 R;\nfloat ln (vec2 p, vec2 a, vec2 b) { // returns distance to line segment for mouse input\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 C, in vec2 U )\n{   R = iResolution.xy;\n \t\tvec4 M = iMouse;\n        vec4 p = T(U);\n    \tif (M.z>0.) {\n        \tif (p.z>0.) C =  vec4(M.xy,p.xy);\n    \t\telse C =  vec4(M.xy,M.xy);\n    \t}\n    \telse C = vec4(-iResolution.xy,-iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}