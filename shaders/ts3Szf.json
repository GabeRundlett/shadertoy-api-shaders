{
    "Shader": {
        "info": {
            "date": "1572549208",
            "description": "Here, this should help",
            "flags": 0,
            "hasliked": 0,
            "id": "ts3Szf",
            "likes": 9,
            "name": "Shadertober 29 - Injured",
            "published": 3,
            "tags": [
                "inktober",
                "shadertober",
                "backwardscaptain",
                "injured"
            ],
            "usePreview": 0,
            "username": "BackwardsCap",
            "viewed": 372
        },
        "renderpass": [
            {
                "code": "vec2 bandaid(vec3 p, float o)\n{\n    float r,m;\n    p.yz*=rot(iTime/2.-o);\n    vec3 op = p;\n    float h= hc(op.xy*5.);\n    float mb = box(op-vec3(0,0,.08+(1.-h/2.)/10.),vec3(.85,.85,.075));\n    float mbs = box(op-vec3(0,0,.15),vec3(.85,.85,.015));\n    \n    op.y+=(p.x*p.x)/100.;\n    op.z-=(p.x*p.x)/50.;\n    float s = box(op,vec3(3,1,.025));\n    vec3 ap = op;\n    ap.x=abs(ap.x);\n    ap.yz*=rot(PI/2.);\n\n    float e = cyl(ap-vec3(3.,0,0),1.,.025);\n    e=min(e,s);\n    vec3 sp = p;\n\n    sp.xy=abs(p.xy);\n    sp=sp-vec3(2.5,.25,0);\n    sp=sp/vec3(1,1,.5);\n    float sb = length(sp+vec3(0,.25,-.17))-.11;\n    sp=abs(abs(sp)-vec3(.5-(floor(sp.y-.1))/5.,0.25,0))-vec3(.25,0.,0);\n    \n    sp.z=op.z+.03;\n   \tsp/=vec3(1,1,.5);\n    sb = min(sb,length(sp)-.1);\n    \n    sb*=.5;\n    \n    e=max(e,-sb);\n    e=smin(e,mbs,.3);\n    \n    r=e;\n    r=min(r,mb);\n    \n    if(r==e)m=1.;\n    else if(r==mb||r==mbs)m=2.;\n    return vec2(r,m);\n}\n\nvec2 map(vec3 p)\n{\n    vec2 r;\n\t\n    float n = 6.;\n    r=bandaid(p,0.);\n    p.xy*=rot(iTime);\n\n    for(float i=0.;i<n;i++)\n    {\n        vec3 op = p;\n        op.xy*=rot((PI/n)*i*2.);\n        op.x-=9.;\n        r=comb(r,bandaid(op,i+1.));\n    }\n    \n    \n    return r;\n}\n\nvec2 ray(vec3 ro, vec3 rd)\n{\n    float t=0.,m;\n    for(int i=0;i<128;i++)\n    {\n        vec3 p = ro+rd*t;\n        vec2 s = map(p);\n        m=s.y;\n        if(s.x<0.000001)break;\n        t+=s.x/1.2;\n        if(t>MAX_DIST){t=-1.;break;}\n    }\n    return vec2(t,m);\n}\n\nvec3 normal(vec3 p)\n{\n    vec2 e = vec2(0.00005,0);\n    return normalize(vec3(\n        map(p+e.xyy).x-map(p-e.xyy).x,\n        map(p+e.yxy).x-map(p-e.yxy).x,\n        map(p+e.yyx).x-map(p-e.yyx).x\n        ));\n}\n\nvoid mainImage( out vec4 c, in vec2 f)\n{\n    vec2 uv = (2.*f-iResolution.xy)/iResolution.y;\n    \n    vec3 col = vec3(1.)*(((cos(uv.x)+cos(uv.y))/3.));\n    \n    float t = cos(iTime/5.)/3.;\n    float d = 17.5+cos(iTime/10.)*10.;\n    vec3 ro = vec3(sin(t)*d,0,cos(t)*d);\n    vec3 ta = vec3(0);\n    vec3 rd = cam(ro,ta,uv);\n    \n    vec2 r = ray(ro,rd);\n    \n    if(r.x>0.0)\n    {\n        vec3 p = ro+rd*r.x;\n        vec3 n = normal(p);\n       \n        vec3 mate = vec3(1);\n        if(r.y==1.)mate=vec3(.8,.5,.1);\n        vec3 sun = normalize(vec3(0.5,.5,.5));\n        vec3 backlight = normalize(vec3(-0.5,-.5,-.5));\n        float dif = clamp(dot(sun,n),0.,1.);\n        float bdif = clamp(dot(backlight,n),0.,1.);\n        float sky = clamp(dot(n,vec3(0,1,0)),0.,1.);\n        float bou = clamp(dot(n,vec3(0,-1,0)),0.,1.);\n        float sha = clamp(ray(p+n*.001,sun).x,0.,1.);\n        col=dif*mate;\n        col+=bdif*mate*.5;\n        col+=sky*mate*.5;\n        col+=bou*mate*.5;\n    }\n    \n    c.rgb=col;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define MAX_DIST 60.0\n#define PI 3.1415927\n\nmat2 rot(float x){return mat2(cos(x),-sin(x),sin(x),cos(x));}\n\nvec2 comb(vec2 a, vec2 b)\n{\n    float r = min(a.x,b.x);\n    return r==a.x?a:b;\n}\n\n//thanks to iq for sharing this knowledge on his website\nfloat cyl(vec3 p, float h, float r)\n{\n    vec2 q = abs(vec2(length(p.xz),p.y))-vec2(h,r);\n    return length(max(q,0.0))+min(max(q.x,q.y),0.0);\n}\n\nfloat box(vec3 p, vec3 d)\n{\n  vec3 q = abs(p) - d;\n  return min(max(q.x,max(q.y,q.z)),0.0)+length(max(q,0.0));\n}\n\nfloat smin(float d1, float d2, float k)\n{\n    float h = clamp(0.5+0.5*(d2-d1)/k,0.0,1.0);\n    return mix(d2,d1,h)-k*h*(1.0-h);\n}\n\nvec3 cam(vec3 ro, vec3 ta, vec2 uv)\n{\n    vec3 cf = normalize(ta-ro);\n    vec3 cu = normalize(cross(cf,vec3(0,1,0)));\n    vec3 cr = normalize(cross(cu,cf));\n    return normalize(uv.x*cu+uv.y*cr+2.*cf);\n}\n\nfloat hex(in vec2 p)\n{\n    vec2 s = vec2(1,1.73);\n    p=abs(p);\n    return max(dot(p,normalize(s)),p.x);\n}\n\nfloat hc(vec2 p)\n{\n    vec2 s = vec2(1,1.73);\n    vec2 hs = s*.5,\n         c1 = mod(p,s)-hs,\n         c2 = mod(p-hs,s)-hs;\n    vec2 h= dot(c1, c1)<dot(c2,c2)?c1:c2;\n    \n    return hex(h);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}