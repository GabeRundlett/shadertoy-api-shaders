{
    "Shader": {
        "info": {
            "date": "1470780478",
            "description": "NB: at restart you have 2 seconds to go fullscreen if you wish.\nClick to reset.\n",
            "flags": 32,
            "hasliked": 0,
            "id": "4lc3Rs",
            "likes": 15,
            "name": "flood in hexamaze",
            "published": 3,
            "tags": [
                "flood",
                "maze",
                "hexagonal",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1110
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O,  vec2 U )\n{   O = fract(.95 * texture(iChannel0, U/iResolution.xy));  }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// maze from https://www.shadertoy.com/view/4ldGDM\n// variant of https://www.shadertoy.com/view/Xl33zl\n\n#define T(u,v) texture( iChannel0, (U+vec2(u,v))/R )\n\nvoid mainImage( out vec4 O,  vec2 U )\n{  \n    vec2 R = iResolution.xy, V;\n    \n    if ( iFrame<120 || iMouse.z>0. ) {\n        V = (U-R/2.) * mat2(1,-1./1.73, 0,2./1.73) /8.+.1;          // conversion to\n        float r = sin(1e5*length (ceil(V)));\n        O += min(1.,.1 / fract( r >.5  ? V.x : r< -.5 ? V.y : V.x+V.y )) -O;  // maze\n        //O += min(1.,.1 / fract( r >.5  ? V.x : r< -.5 ? V.y : 1.-V.x-V.y )) -O;  // maze\n        //length(fract(1.-V)) < 1./8. ? O+=2. : O;                    // close holes at nodes\n        \n        U = fract(1e4*sin(U*mat2(1,17,23,-1.3)+iTime))*3e2; r = U.x;\n        U.y > 1. ? r :\n        //r = (1.-fract(1e5*sin(U.x+.121*U.y+iTime)))*1e3;    // (not precise enough)\n        r<1. ? O.r++ : r<2. ? O.g++ : r<3. ? O.b++ : r;             // seeds in R, G, B\n        return;\n}\n\n    O = T(0,0);   \n    vec4 M = T(-1,0)+T(1,0)+T(0,-1)+T(0,1);                         // neighborhood\n    O.a<.5 ? O+=step(.5,M-M.a) : O;                                 // reached by R/G/B floods\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}