{
    "Shader": {
        "info": {
            "date": "1703606515",
            "description": "It takes some time to make the integral image (O(log n)), but after that it's O(1)",
            "flags": 32,
            "hasliked": 0,
            "id": "MclGDj",
            "likes": 1,
            "name": "integral image box blur",
            "published": 3,
            "tags": [
                "blur",
                "boxblur"
            ],
            "usePreview": 0,
            "username": "janpitokiala",
            "viewed": 118
        },
        "renderpass": [
            {
                "code": "vec4 samp(vec2 point) {\n    return texture(iChannel0, point/iResolution.xy);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord;\n    vec2 uv = fragCoord/iResolution.xy;\n    float blurx = 6.+5.*sin(2.*iTime);\n    float blury = blurx;\n    p += vec2(blurx,blury)/2.;\n    vec4 a = samp(p-vec2(blurx,0));\n    vec4 b = samp(p-vec2(0,0));\n    vec4 c = samp(p-vec2(blurx,blury));\n    vec4 d = samp(p-vec2(0,blury));\n    vec4 col = b-a-d+c;\n    col /= float(blurx*blury);\n    fragColor = vec4(col.rgb, 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(iFrame==1) {\n      vec2 uv = fragCoord/iResolution.xy;\n      fragColor = texture(iChannel1, uv);\n      return;\n    }\n    int size = int(pow(2.,float(iFrame-2)));\n    ivec2 origin = ivec2(fragCoord)&(-(size<<1));\n    ivec3 p = ivec3(ivec2(fragCoord)-origin,size-1);\n    vec4 val = texelFetch(iChannel0, p.xy+origin, 0);\n    if(p.x>p.z) {\n      val += texelFetch(iChannel0, p.zy+origin, 0);\n    }\n    if(p.y>p.z) {\n      val += texelFetch(iChannel0, p.xz+origin, 0);\n      if(p.x>p.z) {\n        val += texelFetch(iChannel0, p.zz+origin, 0);\n      }\n    }\n    fragColor = val;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}