{
    "Shader": {
        "info": {
            "date": "1495402718",
            "description": "12/100",
            "flags": 0,
            "hasliked": 0,
            "id": "4dlfR7",
            "likes": 25,
            "name": "12/100",
            "published": 3,
            "tags": [
                "particle"
            ],
            "usePreview": 0,
            "username": "yahe",
            "viewed": 1885
        },
        "renderpass": [
            {
                "code": "#define NUM_PARTICLES 200.0\n#define GLOW 0.5\n\nvec3 Orb(vec2 uv, vec3 color, float radius, float offset)\n{        \n    vec2 position = vec2(sin(offset * (iTime+30.)),\n                         cos(offset * (iTime+30.)));\n    \n    position *= sin((iTime ) - offset) * cos(offset);\n     \n    //offset = pModPolar(position,2.);\n    \n    radius = radius * offset;\n    float dist = radius / distance(uv, position);\n    return color * pow(dist, 1.0 / GLOW);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv =  vec2(fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    \n    vec3 pixel = vec3(0.0, 0.0, 0.0);\n   \tvec3 color = vec3(0.0, 0.0, 0.0);\n    \n \tcolor.r = ((sin(((iTime)) * 0.55) + 1.5) * 0.4);\n    color.g = ((sin(((iTime)) * 0.34) + 2.0) * 0.4);\n    color.b = ((sin(((iTime)) * 0.31) + 4.5) * 0.3);\n    \n    float radius = 0.005;\n    \n    for\t(float i = 0.0; i < NUM_PARTICLES; i++)\n        pixel += Orb(uv, color, radius, i / NUM_PARTICLES);\n\n    \n    fragColor = mix(vec4(uv,0.8+0.5*sin(iTime),1.0), vec4(pixel, 1.0), 0.8);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}