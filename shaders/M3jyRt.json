{
    "Shader": {
        "info": {
            "date": "1727709315",
            "description": "Transition Test forked fom https://www.shadertoy.com/view/lXKSDW\nChange line 27 for points\n",
            "flags": 0,
            "hasliked": 0,
            "id": "M3jyRt",
            "likes": 0,
            "name": "Break Transition",
            "published": 3,
            "tags": [
                "voronoibreak"
            ],
            "usePreview": 0,
            "username": "turboplay",
            "viewed": 59
        },
        "renderpass": [
            {
                "code": " \n//#iChannel0 \"file://./img.png\"\nfloat width = 300.; //@0\n//uniform float width;//@1\nfloat height = 300.;//@0\n//uniform float height;//@1\nfloat time = 0.;//@0\n//uniform float time//@1\nfloat duration = 7.;//@0\n//uniform float duration;\n//uniform vec4 iResolution;//@1\n//uniform vec2 gl_FragCoord;//@1\nfloat atime = 2.;\nconst int type = 1;\n\nconst float strength = 10.0f;\n\nfloat random(vec2 par){\n   return fract(sin(dot(par.xy,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 random2(vec2 par){\n\tfloat rand = random(par);\n\treturn vec2(rand, random(par+rand));\n}\n\n#define POINTS 100\nvec4 filte(vec2 uv) {\n    vec2 uvo = uv;\n    vec2 point[POINTS];\n    for(int i = 0; i< POINTS; i++) {\n        point[i] = random2(vec2(float(i)));\n    }\n    float m_dist = 10000.f;\n    float id = 0.;\n    vec4 col = vec4(0.);\n    \n    for (int i = 0; i < POINTS; i++) {\n        // vec2 dir = normalize( random2(vec2(float(i),float(i) + 11.) ) - point[i] )    ;\n        vec2 dir = normalize(  point[i] - vec2(.5) )    ;\n        float v = (.5 + random(dir)*.5) * .2 ;\n        vec2 ofst =  dir * v * time ;\n        \n        mat3 T = mat3(1.,0.,0.,  0.,1.,0., - ofst,1.);  \n       \n        vec2 U = (T * vec3(uv,1.)).xy;\n        float m_dist = distance(U, point[i]);\n        bool match = true;\n        if(U.x > 0. && U.x < 1. && U.y > 0. && U.y < 1.) {\n            for(int j = 0; j < POINTS; j++) {\n                float dist = distance(U, point[j]);\n                if(dist < m_dist) match = false;\n            }\n        }else {\n            match = false;\n        }\n \n        if(match) {\n            col = texture(iChannel0,U);\n            break;\n        }\n       else\n        col = texture(iChannel1,uvo);\n    }\n    return col;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n  \n     time = fract(iTime/duration) * duration;//@0\n    // Output to screen\n    fragColor = filte(uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}