{
    "Shader": {
        "info": {
            "date": "1702408442",
            "description": "a 4D version of my Shard Noise.\n---\nusing the splat-field (upgraded to 3D) to inject the tanh function, giving a unique metallic structure.\n'sharpness' parameter can be any value.\nclick to show the full octave-blend that's very perlin-like",
            "flags": 0,
            "hasliked": 0,
            "id": "mlKfzd",
            "likes": 8,
            "name": "4D SHARD NOISE",
            "published": 3,
            "tags": [
                "3d",
                "noise",
                "gradient",
                "shard"
            ],
            "usePreview": 0,
            "username": "ENDESGA",
            "viewed": 360
        },
        "renderpass": [
            {
                "code": "#define R iResolution\n#define T (iTime * .1)\n\nvec4 hash(vec4 p) {\n    p = vec4(dot(p, vec4(127.1, 311.7, 74.7, 24.6)), \n             dot(p, vec4(269.5, 183.3, 246.1, 123.5)), \n             dot(p, vec4(113.5, 271.9, 124.6, 223.8)),\n             dot(p, vec4(222.3, 145.2, 211.3, 239.5)));\n    p = fract(sin(p) * 43758.5453123);\n    return p;\n}\n\n#define tau 6.283185307179586\n\nfloat shard_noise(in vec4 p, in float sharpness) {\n    vec4 ip = floor(p);\n    vec4 fp = fract(p);\n\n    float v = 0., t = 0.;\n    for (int w = -1; w <= 1; w++) {\n        for (int z = -1; z <= 1; z++) {\n            for (int y = -1; y <= 1; y++) {\n                for (int x = -1; x <= 1; x++) {\n                    vec4 o = vec4(x, y, z, w);\n                    vec4 io = ip + o;\n                    vec4 h = hash(io);\n                    vec4 r = fp - (o + h);\n\n                    float W = exp2(-tau*dot(r, r));\n                    float s = sharpness * dot(r, hash(io + vec4(11, 31, 47, 59)) - 0.5);\n                    v += W * s*inversesqrt(1.0+s*s);\n                    t += W;\n                }\n            }\n        }\n    }\n    return ((v / t) * .5) + .5;\n}\n\nvoid mainImage(out vec4 C, in vec2 F) {\n    vec2 p = F/R.y;\n    vec4 uv = vec4(p + T, T * .5, T * .25);\n    bool click = iMouse.z > 0.;\n\n    float fade = click ? 4. : pow(p.x, 2.) * 30.;\n    \n    if (p.y < 0.5 || click) {\n        C = vec4(vec3(\n            (shard_noise(64.0 * uv, fade) * .03125) +\n            (shard_noise(32.0 * uv, fade) * .0625) +\n            (shard_noise(16.0 * uv, fade) * .125) +\n            (shard_noise(8.0 * uv, fade) * .25) +\n            (shard_noise(4.0 * uv, fade) * .5)\n        ), 1.);\n    } else {\n        C = vec4(vec3(shard_noise(16.0 * uv, fade)), 1.);\n    }\n    if ((p.y > .875 || p.y < .125) && !click) C = round(C);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}