{
    "Shader": {
        "info": {
            "date": "1487599862",
            "description": "Original shader (written by me on Forth) has only 253 bytes size.\nCheck it here - http://thesands.ru/forth-demotool/?id=11",
            "flags": 0,
            "hasliked": 0,
            "id": "Mssyz7",
            "likes": 11,
            "name": "Pong mini",
            "published": 3,
            "tags": [
                "game"
            ],
            "usePreview": 0,
            "username": "Manwe",
            "viewed": 1017
        },
        "renderpass": [
            {
                "code": "// with mix, smoothstep and min functions suggested by FabriceNeyret2\n\nvoid mainImage( out vec4 c, in vec2 uv )\n{\n    uv /= iResolution.x; uv.y -= .281;\n    float t = iTime;\n\n    vec2 b; // ball coordinates\n\n    b.x = mod(t / 1.7, 1.88) + .03; // ball horizontal position\n    b.y = mod(t / 2.5, 1.08) - .27; // ball vertical position\n\n    b = min(b, vec2 (1.94,.54) - b); // reverse ball direction when needed\n\n    // draw ball\n    c = vec4(smoothstep(1., .9, 70. * distance(uv, b))); // color\n\n    // left carriage position\n    float l = mix(b.y, sin(t * 3.1) * .2, b.x);\n\n    // right carriage position\n    float r = mix(cos(t * 3.7) / 4.5, b.y * .9, b.x);\n    \n    if (\n        (uv.x < .02 && abs(l - uv.y) < .06) // draw left carrige\n      ||\n        (uv.x > .98 && abs(r - uv.y) < .06) // draw right carrige\n       )\n       c += 1.;\n}\n\n\n/*\n// the original 489 bytes code\n\nvoid mainImage( out vec4 fragColor, in vec2 uv )\n{\n    float x = uv.x / iResolution.x;\n    float y = uv.y / iResolution.x - .281;\n    float t = iTime;\n\n    float c = .0; // color\n\n    float by = fract(t / 2.7); // ball vertical position\n    if (by > .5) by = 1.0 - by; by = (by - .25) * 1.08;\n    \n    float bx = fract(t / 3.3) * 2.0; // ball horizontal position\n    if (bx > 1.0) bx = 2.0 - bx;\n    \n    float l = sin(t * 3.1); // left carriage position\n    l = by * (1.0 - bx) + l * bx * .2;\n    if (x < .02 && abs(l - y) < .06) c = 1.0;\n\n    float r = cos(t * 3.7) / 4.5; // right carriage position\n    r = r * (1.0 - bx) + by * bx *.9;\n    if (x > 0.98 && abs(r - y) < .06) c += 1.0;\n    \n    c += 1.0-min(1.0,pow((pow(abs(bx*.94+.03-x),2.0) + (y-by)*(y-by))*5000.0,40.0));\n    \n\tfragColor = vec4(c,c,c,1.0);\n}\n*/\n\n// Original shader (written by me on Forth) has only 253 bytes size.\n// Check it here - http://thesands.ru/forth-demotool/?id=11",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}