{
    "Shader": {
        "info": {
            "date": "1427809638",
            "description": "Raytraced blue transparent sphere.\n\nIt just needs some fine softshadows like described here:\nhttps://iquilezles.org/articles/rmshadows/rmshadows.htm",
            "flags": 0,
            "hasliked": 0,
            "id": "MljGRm",
            "likes": 13,
            "name": "Blue Sphere Raytracer",
            "published": 3,
            "tags": [
                "raytracer",
                "sun",
                "sphere",
                "blue"
            ],
            "usePreview": 0,
            "username": "SiENcE",
            "viewed": 2077
        },
        "renderpass": [
            {
                "code": "float sphere(vec3 ray, vec3 dir, vec3 center, float radius)\n{\n\tvec3 rc = ray-center;\n\tfloat c = dot(rc, rc) - (radius*radius);\n\tfloat b = dot(dir, rc);\n\tfloat d = b*b - c;\n\tfloat t = -b - sqrt(abs(d));\n\tfloat st = step(0.0, min(t,d));\n\treturn mix(-1.0, t, st);\n}\n\nvec3 background(float t, vec3 rd)\n{\n\tvec3 light = normalize(vec3(sin(t), 0.6, cos(t)));\n\tfloat sun = max(0.0, dot(rd, light));\n\tfloat sky = max(0.0, dot(rd, vec3(0.0, 1.0, 0.0)));\n\tfloat ground = max(0.0, -dot(rd, vec3(0.0, 1.0, 0.0)));\n\treturn \n\t\t(pow(sun, 256.0)+0.2*pow(sun, 2.0))*vec3(2.0, 1.6, 1.0) +\n\t\tpow(ground, 0.4)*vec3(0.7, 0.6, 0.4) +\n\t\tpow(sky, 0.0)*vec3(0.5, 0.6, 0.7);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (-1.0 + 2.0*fragCoord.xy / iResolution.xy) * vec2(iResolution.x/iResolution.y, 1.0);\n\n\tvec3 ro = vec3(0.0, 0.0, -3.0);\n\tvec3 rd = normalize(vec3(uv, 1.0));\n\tvec3 p = vec3(0.0, 0.0, 0.0);\n\tfloat t = sphere(ro, rd, p, 1.0);\n\n\tvec3 nml = normalize(p - (ro+rd*t));\n\tvec3 bgCol = background(iTime, rd);\n\trd = reflect(rd, nml);\n\tvec3 col = background(iTime, rd);\n\n\t// make sandstorm background \n//\tbgCol = normalize(bgCol.rgb);\n    \n\t// change color of the sphere to blue\n    col.r = col.r-0.50;\n    col.b = col.b+0.50;\n\t\n\tfragColor = vec4( mix( bgCol, col, step(0.0, t)), 1.0 );\n}  ",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}