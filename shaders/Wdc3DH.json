{
    "Shader": {
        "info": {
            "date": "1568310239",
            "description": "Comparison between triangular noise, and triangularized-blue-noise for dithering.",
            "flags": 0,
            "hasliked": 0,
            "id": "Wdc3DH",
            "likes": 22,
            "name": "Dither Comparisons",
            "published": 3,
            "tags": [
                "2d",
                "dither"
            ],
            "usePreview": 0,
            "username": "iq",
            "viewed": 1516
        },
        "renderpass": [
            {
                "code": "// Inigo Quilez 2019\n//\n// Comparison between triangular noise, and a \n// triangularized-blue-noise, for dithering.\n    \nconst int bands = 10;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord/iResolution.xy;\n    \n    // color is a horizontal gradient    \n    vec3 col = p.xxx;\n    \n    // dither test\n    if( abs(p.y-0.5)<0.25 )\n    {\n        float applyDither = step( 0.25, fract(iTime/4.0) );\n        ivec2 off = ivec2(iFrame*13,iFrame*311) & 1023;\n\n        // fetch uniform or blur noise        \n        vec2 no = (p.y<0.5) ? texelFetch( iChannel0, (off+ivec2(fragCoord) & 1023), 0 ).xy :\n                              texelFetch( iChannel1, (off+ivec2(fragCoord) &  255), 0 ).xy;\n        // triangular noise\n        float noise = 1.0-no.x-no.y;\n        // apply dither\n        col += applyDither*noise/float(bands+1);\n        // quantizer\n        col = round(col*float(bands))/float(bands);\n    }\n\n    //draw borders\n    if( int(fragCoord.y) % int(iResolution.y/4.0) == 0)\n    \tcol = vec3(1.0, 0.0, 0.0);\n\n    fragColor = vec4( col, 1.0 );\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}