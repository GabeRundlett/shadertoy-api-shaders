{
    "Shader": {
        "info": {
            "date": "1574171343",
            "description": "Fork of https://www.shadertoy.com/view/wdGXDR by @thisisthais",
            "flags": 0,
            "hasliked": 0,
            "id": "wsySDm",
            "likes": 4,
            "name": "interdimensional trip",
            "published": 3,
            "tags": [
                "noise",
                "circles",
                "swirls"
            ],
            "usePreview": 0,
            "username": "sequential",
            "viewed": 448
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265358979323846\n\nvec2 random2(vec2 st){\n  st=vec2(dot(st,vec2(127.1,311.7)),dot(st,vec2(269.5,183.3)));\n  return-1.+2.*fract(sin(st)*43758.5453123);\n}\n\n// Gradient Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/XdXGW8\nfloat noise(vec2 st){\n  vec2 i=floor(st);\n  vec2 f=fract(st);\n  \n  vec2 u=f*f*(3.-2.*f);\n  \n  return mix(mix(dot(random2(i+vec2(0.,0.)),f-vec2(0.,0.)),\n  dot(random2(i+vec2(1.,0.)),f-vec2(1.,0.)),u.x),\n  mix(dot(random2(i+vec2(0.,1.)),f-vec2(0.,1.)),\n  dot(random2(i+vec2(1.,1.)),f-vec2(1.,1.)),u.x),u.y);\n}\n\nfloat circle(in vec2 _st,in float _radius){\n  vec2 l=_st-vec2(.5);\n  return 1.-smoothstep(_radius-(_radius*.01),\n  _radius+(_radius*.01),\n  dot(l,l)*4.);\n}\n\nvec2 rotate2D(vec2 _st,float _angle){\n  _st-=.5;\n  _st=mat2(cos(_angle),-sin(_angle),\n  sin(_angle),cos(_angle))*_st;\n  _st+=.5;\n  return _st;\n}\n\n// Almost Identity by Inigo Quilez - iq\n// https://iquilezles.org/articles/functions\nfloat almostIdentity(float x,float n){\n  return sqrt(x*x+n);\n}\n\n// Exponential Impulse by Inigo Quilez - iq\n// https://iquilezles.org/articles/functions\nfloat expImpulse(float k,float x){\n  float h=k*x;\n  return h*exp(1.-h);\n}\n\n// Cubic Pulse by Inigo Quilez - iq\n// https://iquilezles.org/articles/functions\nfloat cubicPulse(float c,float w,float x){\n  x=abs(x-c);\n  if(x>w)return 0.;\n  x/=w;\n  return 1.-x*x*(3.-2.*x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 st=fragCoord.xy/iResolution.yy;\n  vec3 color=vec3(0.);\n  st.x -= 0.4;\n  float t=abs(1.-sin(iTime))*10.;\n  \n  float circleFreq=30.;\n  float circleAmpl=5.;\n  float circleShapeNoise=noise(st*circleFreq)/circleAmpl;\n  \n  // lots of different ways for circle to grow/contract\n  // float circleRadius=abs(sin(u_time/2.));\n  // float circleRadius=almostIdentity(sin(u_time/2.),.1)-.3;\n  // float circleRadius=min(1.-expImpulse(sin(iTime/2.),2.),.5);\n  float circleRadius=cubicPulse(.08,1.2,sin(iTime/PI))/1.5;\n  \n  float circle=circle(st+circleShapeNoise,circleRadius);\n  color+=circle;\n  \n  vec2 startRotation=rotate2D(st,mod(iTime,2.*PI));\n  float circleStars=smoothstep(.38,.39,noise(startRotation*200.) * 1.02);\n  color*=circleStars;\n  \n  //float r = abs(sin(iTime/2.));\n  //float g = abs(sin(iTime/2.+1.));\n  //float b = abs(sin(iTime/2.+2.));\n  //color += vec3(r, g, b)/2.;\n  \n  vec3 portal = color;\n  \n  t=abs(1.-sin(iTime*.2))*5.+2.;\n  st+=noise(st*5.)*t;\n  \n  float splatterFreq=2.;//dot(vec2(0.8),st);\n  float redSplatter=smoothstep(.15,.16,noise(st*splatterFreq+10.));\n  float greenSplatter=smoothstep(.11,.12,noise(st*splatterFreq*2.+20.));\n  float blueSplatter=smoothstep(.13,.14,noise(st*splatterFreq*3.+30.));\n  \n  vec3 splatter = vec3(redSplatter, greenSplatter, blueSplatter);\n  portal*=splatter;\n  color=mix(portal,splatter,1.-circle);\n  \n  //fragColor=vec4(vec3(redSplatter, greenSplatter, blueSplatter),1.);\n  fragColor=vec4(color,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}