{
    "Shader": {
        "info": {
            "date": "1674317148",
            "description": "All year long I'm going to just focus on truchet tiles and the likes!",
            "flags": 0,
            "hasliked": 0,
            "id": "mllXz8",
            "likes": 30,
            "name": "Year of Truchets #003",
            "published": 3,
            "tags": [
                "raymarching",
                "truchet",
                "tiles",
                "truchetcore"
            ],
            "usePreview": 0,
            "username": "byt3_m3chanic",
            "viewed": 408
        },
        "renderpass": [
            {
                "code": "/** \n\n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n    \n    Year of Truchets #003\n    01/21/2023  @byt3_m3chanic\n    \n    All year long I'm going to just focus on truchet tiles and the likes!\n    Truchet Core \\M/->.<-\\M/ 2023 \n    \n*/\n\n\n#define R           iResolution\n#define T           iTime\n#define M           iMouse\n\n#define PI         3.14159265359\n#define PI2        6.28318530718\n\nfloat time;\nconst float scale = 1.;\nconst vec3 d = vec3(0.957,0.439,0.043);\n\nmat2 rot (float a) { return mat2(cos(a),sin(a),-sin(a),cos(a)); }\nfloat hash21(vec2 a) { return fract(sin(dot(a, vec2(27.609, 57.583)))*43758.5453); }\nvec3 hue(float t){ return .42 + .425*cos(PI2*t*(vec3(.95,.97,.98)*d)); }\n\nvoid mainImage( out vec4 O, in vec2 F )\n{\n    vec3 C = vec3(0);\n    vec2 uv = (2.*F.xy-R.xy)/max(R.x,R.y);\n    vec2 vuv = uv, dv = uv;\n    \n    uv *= rot(T*.025);\n    uv = vec2(log(length(uv)), atan(uv.y, uv.x))*3.5;\n    uv.x -= T*.25;\n\n    dv = vec2(log(length(dv)), atan(dv.y, dv.x))*3.5;\n    dv.x += T*.075;\n    \n    float px = fwidth(uv.x);\n\n    vec2 id = floor(uv*scale);\n    float chk = mod(id.y+id.x,2.)*2.-1.;\n\n    float rnd = hash21(id);\n    if(rnd>.5) uv.x*=-1.;\n\n    vec2 qv = fract(uv*scale)-.5;\n\n    float circle = min(length(qv-vec2(-.5,.5))-.5,length(qv-vec2(.5,-.5))-.5);\n    float circle3 = abs(circle)-.05;\n    \n    float c2 = smoothstep(-px,px,abs(abs(circle)-.125)-.025);\n    circle = (rnd>.5^^chk>.5) ? smoothstep(px,-px,circle) : smoothstep(-px,px,circle);\n    circle3 = smoothstep(.125,-px,circle3);\n    \n    dv=fract(dv*scale)-.5;\n    float dots = min(length(abs(dv)-vec2(0,.5))-.25,length(abs(dv)-vec2(.5,0))-.5);\n\n    dots = abs(abs(abs(abs(dots)-.1)-.05)-.025)-.0125;\n    dots = smoothstep(px,-px,dots);\n    \n    float hs = hash21(vuv)*.25;\n    C = clamp(hue(52.+id.x*.15)+hs,C,vec3(1));\n    \n    C = mix(C,C*.75,dots);\n    C = mix(C,C*.75,circle3);\n    C = mix(C,vec3(.001),clamp(min(circle,c2),0.,1.));\n \n    // Output to screen\n    C = pow(C,vec3(.4545));\n    O = vec4(C,1.);\n}\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}