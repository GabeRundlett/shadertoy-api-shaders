{
    "Shader": {
        "info": {
            "date": "1623642186",
            "description": "Inspired by a zigzagging pattern quilt",
            "flags": 0,
            "hasliked": 0,
            "id": "7l23zm",
            "likes": 2,
            "name": "We Got Misleading Directions",
            "published": 3,
            "tags": [
                "2d",
                "grid",
                "triangles",
                "quilt"
            ],
            "usePreview": 0,
            "username": "stseagle",
            "viewed": 256
        },
        "renderpass": [
            {
                "code": "float zig(in vec2 uv) {\n    return 1.-step(2.*abs(uv.y-0.5)-uv.x, 0.01);\n}\n\nfloat zag(in vec2 uv) {\n    return 1.-step(2.*abs(uv.y-0.5)-(1.-uv.x), 0.01);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Tile the image into long skinny tiles\n    vec2 uv = 15.* fragCoord/iResolution.x*(iResolution.y/iResolution.x);\n    uv.x *= 2.5;\n    vec2 pos = floor(uv);\n    uv = fract(uv);\n    \n    \n    // Starting from the regular color changey pretty thing.\n    vec3 col = 0.5 + 0.35*cos(iTime * 0.5 - pos.x * 0.2 - pos.y +uv.xyx+vec3(0,1.3,3.5));\n    \n    vec3 triangle = vec3(0.);\n    \n    float offset = mod(pos.x+mod(pos.y,2.)*3.,6.);\n    \n    // The rows need to be offset from each other, and the arrows flip every three tiles\n    \n    if (offset <3.) {\n        triangle = vec3(zig(uv));\n    } else {\n        triangle = vec3(zag(uv));\n    }\n    \n\n    // That's it\n    fragColor = vec4(max(triangle,col),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}