{
    "Shader": {
        "info": {
            "date": "1686109790",
            "description": "A white lace pattern.",
            "flags": 8,
            "hasliked": 0,
            "id": "dlKXDW",
            "likes": 8,
            "name": "White lace",
            "published": 3,
            "tags": [
                "fractal",
                "music",
                "lace"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 269
        },
        "renderpass": [
            {
                "code": "vec2 triangle_wave(vec2 a){\n    vec2 a2 =\n        vec2(1.,0.5)\n    ,\n    a1 = a+a2;\n    return\n        abs(fract((a1)*(a2.x+a2.y))-.5)\n    ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 2.;\n    vec2 uv = (fragCoord)/iResolution.x/t1/2.0;\n    uv.y += (iTime/2.0,iTime/3.0)/t1/8.0;\n    if(iMouse.z>.5)\n    uv = uv.xy + iMouse.xy / iResolution.xy/t1;\n    vec2 t2 = vec2(0.);\n    bool b = true;\n    uv.y = mod(uv.y,.25)+ .5 - .125;\n    uv.x = mod(uv.x,.25)+ .5 - .125;\n    //uv.x = mod(uv.x,.25)+.25;\n    for(int k = 0; k < 9; k++){\n        uv =\n            abs(.5-uv-t2)/1.5\n            //abs(-.5*sign(uv.y-uv.x)-uv-t2)/1.5\n        ;\n        //uv = abs(fract(vec2(uv+vec2(.5,1.5))*1.5)-.5)/1.5;\n        b = uv.y<uv.x;\n        if(b) uv = uv.yx;\n        t2 =\n            triangle_wave(uv).yx\n        ;\n        uv =\n            t2-triangle_wave(uv.yx-.5).yx*sign(.5-uv.y)\n        ;\n        col.x =\n            max((t2.y+uv.x),col.x)\n        ;\n        col =\n            abs(col-(1.+col.x*sign(uv.x-uv.y)));\n            //max((col-1.+col.x/1.5),(1.-col-col.yzx));\n    }\n    if (!b) col = abs(1.-col);\n    fragColor = vec4(min(col,vec3(1.)),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float fmod(float a, float b){\n    \n    for(float i = 0.; i < mod(floor(a/2.),2.); i++){\n        a += mod(floor(a/8.),2.)*i;\n    }\n    \n    return\n        floor(mod(-a/2.,b))\n        //floor(mod(floor(a*4.)/b,b))\n        //floor(mod(floor(a+floor(a/2.)),b))\n    ;\n}\n\n#define fract1(a) (1.-fract(-a)*fract(-a))\n\nvec2 sitar2(vec2 a, vec2 nb){\n    return a/16./2.*abs(log(1./2.+a*a*abs(abs(.5-vec2(fract1(nb.x*2.*.998),fract1(nb.y*2.)))/2.))\n      -log(1./2.+(abs(.5-vec2(fract1(nb.x*.998),fract1(nb.y)))/2.)))/2.\n    ;\n}\n\nvec2 mainSound(int samp, float time){\n  float s1 =\n      8.,\n  s2 = 8.,\n  m0 = pow(2.,1.+fmod(time*4.,2.)),\n  t = time/m0/2.,\n  m1 = fmod(t,s1);\n  t = t/(1.+fmod(m1+floor(t/2.)+floor(t/2.),2.));\n  float\n  m3 =\n      floor(fmod(-time*m0*s1,s1)/2.)\n  ;\n  t *=\n      s1*s1\n  ;\n  float m2 =\n      1. + fmod(t/s1,s1/2.);\n  ;\n  float a=\n      128.*pow((1.-(fract(t/s1/2.)))/2.,2.)\n  ;\n  float nb = time*pow(2.,(floor(m3*m2/2.)-m1)/5.+8.);\n  return\n      abs(.5-vec2(fract(nb*.998),fract(nb)))*a\n      //log(1.+abs(a/16.-abs(.5-vec2(fract(nb*.998),fract(nb)))*a))\n      //abs(a/16.-abs(.5-vec2(fract(nb*.998),fract(nb)))*a)\n  ;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}