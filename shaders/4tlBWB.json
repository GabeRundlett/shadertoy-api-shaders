{
    "Shader": {
        "info": {
            "date": "1513174289",
            "description": "top: hsv2rgb\nmiddle: smoothstep version\nbottom: 3-cosine variant\ngrey: luminance in flat and sRGB space.",
            "flags": 0,
            "hasliked": 0,
            "id": "4tlBWB",
            "likes": 24,
            "name": "hue/rainbow/hsv comparison ",
            "published": 3,
            "tags": [
                "color"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 931
        },
        "renderpass": [
            {
                "code": "vec3 classic_hsv2rgb(vec3 c)\n{\n    const vec4 K = vec4(1.0, 2.0/3.0, 1.0/3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n    // golfed version:\n    return c.z*(1.-c.y + c.y*clamp(abs(mod(c.x*6.+vec3(0,4,2),6.) -3.) - 1., 0., 1.));\n}\n\nvec3 smooth_hsv2rgb(vec3 c)  // same of above replacing clamp by smoothstep \n{\n    return c.z*(1.-c.y*smoothstep(2.,1.,abs(mod(c.x*6.+vec3(0,4,2),6.) -3.)));\n}\n\nvec3 cosine_hsv2rgb(vec3 c)  // golfed version: https://www.shadertoy.com/view/ll2cDc\n{ \n    // variant 1: exactly saturating 0-1 range; constant luminance; not fully saturated colors\n    return  c.z*(1.-c.y*(1. - (.5 + .5 * cos( 6.2832*( c.x  + vec3(0,2./3.,1./3.) ) ) ) ) );\n    // variant 2: more vivid colors; 20% more contrast, some overshoot\n    return  c.z*(1.-c.y*(1. - (.6 + .6 * cos( 6.2832*( c.x  + vec3(0,2./3.,1./3.) ) ) ) ) );\n    // variant 3: 20% more contrast + clamp: luminance not strictly constant\n    return  c.z*(1.-c.y*(1. - clamp(.6 + .6 * cos( 6.2832*( c.x  + vec3(0,2./3.,1./3.) ) ), 0., 1. ) ) );\n    // golfed variant (hue only) : ( https://www.shadertoy.com/view/ll2cDc )}\n    return .6 + .6 * cos( 6.3 *  c.x  + vec3(0,23,21)  ); \n}\n\nvoid mainImage(out vec4 O, vec2 U) {\n    vec2 R = iResolution.xy; \n    float x = U.x/R.x, y = 3.*U.y/R.y;\n    vec3 hsv = vec3(x,1,1);\n    O.rgb =   y > 2. ? classic_hsv2rgb(hsv)\n            : y > 1. ?  smooth_hsv2rgb(hsv)\n                     :  cosine_hsv2rgb(hsv);\n  //O = pow( O, vec4(1./2.2) );\n    \n    y = fract(y);\n    O =   y > .4 ? O *=  smoothstep(0., 3./R.y/.6, abs(O-(y-.4)/.6) ) // curves\n        : y > .2 ? vec4((O.r+O.g+O.b)/3.)                             // flat luminance\n                 : vec4(length(O.rgb)/sqrt(3.));                      // sRGB luminance\t\n#if 0                                             // check under/overshoot\n    if (max(O.r,max(O.g,O.b))>1.) O = vec4(1);  \n    if (min(O.r,min(O.g,O.b))<0.) O-=O;\n#endif\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}