{
    "Shader": {
        "info": {
            "date": "1548242917",
            "description": "top",
            "flags": 0,
            "hasliked": 0,
            "id": "3sBGzD",
            "likes": 3,
            "name": "top",
            "published": 3,
            "tags": [
                "top"
            ],
            "usePreview": 0,
            "username": "sanddroo",
            "viewed": 357
        },
        "renderpass": [
            {
                "code": "float triangle(vec2 p, float r)\n{\n    float d=abs(max(-2.*p.y, max(p.y-1.73*p.x, p.y+1.73*p.x))-r);\n    return smoothstep(0.00,0.015,d);\n}\n\nvec2 sym(float a, float b, float c, vec2 p)\n{\n    float x = ((b*b-a*a)*p.x-2.0*a*b*p.y-2.0*a*c) / (a*a+b*b);\n    float y = ((a*a-b*b)*p.y-2.0*a*b*p.x-2.0*b*c) / (a*a+b*b);\n    return vec2(x,y);\n}\n\nvec3 sierpinski(vec2 p, float s, int repeats){\n\tvec3 col = vec3(triangle(p,s));\n    p.y=-p.y;\n    for(int i = 0; i < repeats; ++i)\n    {\n\n            s*=0.5;\n            col*=triangle(p,s);\n\n            if(p.y+1.73*p.x>s)// Bottom right triangle\n                p=sym(1.73/3., 1.0, 0., p);// Folding along y+1/3*x\n\n            if(p.y-1.73*p.x>s)// Bottom left triangle\n                p=sym(-1.73/3., 1.0, 0., p);// Folding along y-1/3*x\n\n            p.y+=s;\n        \n    }\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord.xy - iResolution.xy)/iResolution.y;\n    \n    //Adjust x-axis of triangle on canvas\n \tp.y+=0.5;\n    //Adjust y-axis of triangle on canvas\n    p.x -=-1.;\n    //Size of triangle\n    float s=0.5;\n    //Create sierpinski triangle\n    vec3 sier1 = sierpinski(p, s, 5);\n    \n    p = (2.0*fragCoord.xy - iResolution.xy)/iResolution.y;\n    p.y+=0.5;\n    p.x -=.0;\n    s=.5;\n\tvec3 sier2 = sierpinski(p, s, 4);\n    \n    p = (2.0*fragCoord.xy - iResolution.xy)/iResolution.y;\n    p.y+=0.5;\n    p.x +=-1.;\n    s=.5;\n    vec3 sier3 = sierpinski(p, s, 3);\n    \n    p = (2.0*fragCoord.xy - iResolution.xy)/iResolution.y;\n    p.y-=0.45;\n    p.x -=-1.;\n    s=.5;\n    vec3 sier4 = sierpinski(p, s, 2);\n    \n    p = (2.0*fragCoord.xy - iResolution.xy)/iResolution.y;\n    p.y-=0.45;\n    p.x -=0.;\n    s=.5;\n\tvec3 sier5 = sierpinski(p, s, 1);\n    \n    p = (2.0*fragCoord.xy - iResolution.xy)/iResolution.y;\n    p.y-=0.45;\n    p.x +=-1.;\n    s=.5;\n\tvec3 sier6 = sierpinski(p, s, 0);\n\n    \n    fragColor.xyz=sier1*sier2*sier3*sier4*sier5*sier6; \n    fragColor += vec4(-1., 0., -1., -1.);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}