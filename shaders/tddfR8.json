{
    "Shader": {
        "info": {
            "date": "1604383594",
            "description": "I messed around with the rules for Conway's \"Game of Life\" and got this. It turns anything you draw into irregular octagons.",
            "flags": 32,
            "hasliked": 0,
            "id": "tddfR8",
            "likes": 3,
            "name": "Design with Cellular Automata",
            "published": 3,
            "tags": [
                "automata",
                "cellular",
                "design"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 377
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    int liveNeighbors = 0;\n    int selfState = 0;\n    for (int i=-1; i < 2; i++) {\n        for (int j=-1; j < 2; j++) {\n            int state = int(texelFetch(iChannel0, ivec2(fragCoord + vec2(i, j)), 0).x);\n            if (i == 0 && j == 0) {\n                 selfState = state;\n            }\n\n            else {\n                liveNeighbors += state;\n            }\n        }\n    }\n\n    if (selfState == 1) {\n        if (liveNeighbors == 3) {//8\n            selfState = 0;\n        }\n    }\n\n    else {\n        if (liveNeighbors < 2) {\n            selfState = 0;\n        }\n\n        if (liveNeighbors == 2 || liveNeighbors == 3) {\n            selfState = 0;\n        }\n\n        if (liveNeighbors > 3) {//3\n            selfState = 1;\n        }\n    }\n\n    if (length(iMouse.xy - fragCoord) < 10.0) {\n        selfState += 1;\n    }\n\n    fragColor = vec4(vec3(selfState), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}