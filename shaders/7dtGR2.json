{
    "Shader": {
        "info": {
            "date": "1630346610",
            "description": "Encoding the Stanford Bunny using radial basis functions. Ray marcher by FabriceNeyret2",
            "flags": 0,
            "hasliked": 0,
            "id": "7dtGR2",
            "likes": 19,
            "name": "Stanford bunny in 2k",
            "published": 3,
            "tags": [
                "sdf"
            ],
            "usePreview": 0,
            "username": "goingdigital",
            "viewed": 1456
        },
        "renderpass": [
            {
                "code": "// Bunny SDF using radial basis functions.\n// The RBF is a sphere SDF. Number of RBFs have been adjusted to deliver a shader in\n// 2048 chars.\n//\n// Yes, missing some detail. But not half bad for a 2k model with renderer!\n//\n// Gist for the generating the model:\n//   https://colab.research.google.com/gist/going-digital/67e7db8e86319e19246ebe00248ac971/rbf-bunny.ipynb\n\n#define S(a,b,c,d) a*length(p-.01*vec3(b,c,d))\nfloat scene(vec3 p){\n  return -.428\n    + S(.332,64,-44,35)\n    - S(.359,0,-2,29)\n    + S(.285,53,-45,-63)\n    + S(.231,44,1,-54)\n    + S(.187,44,0,-54)\n    - S(.832,10,-5,-79)\n    + S(.255,37,-30,-52)\n    + S(.066,4,-8,-7)\n    - S(.417,41,-15,12)\n    + S(.159,-59,7,0)\n    + S(.658,-25,-40,46)\n    - S(.158,44,-16,-31)\n    + S(.245,7,-4,-14)\n    + S(.158,8,36,24)\n    + S(.579,-67,-27,45)\n    - S(.246,38,-69,-37)\n    - S(.403,-25,-31,-36)\n    - S(.27,-27,-55,18)\n    + S(.42,40,-44,20)\n    + S(.152,6,-5,-13)\n    + S(.255,46,43,48)\n    - S(.183,-21,-14,33)\n    - S(.174,37,-14,18)\n    + S(.403,-21,-11,-54)\n    + S(.152,-35,-1,-8)\n    + S(.283,-17,-48,-10)\n    + S(.503,-1,-41,-58)\n    - S(.29,-49,-1,28)\n    - S(.362,20,1,44)\n    + S(.32,-1,-12,49)\n    - S(.342,-70,12,31)\n    + S(.257,28,-32,42)\n    + S(.229,13,69,-41)\n    + S(.232,44,4,-11)\n    - S(.425,7,23,52)\n    - S(.285,-28,-32,17)\n    + S(.09,5,-7,-9)\n    + S(.063,3,27,18)\n    + S(.259,13,69,-41)\n    - S(.272,47,-19,-32)\n    - S(.287,-64,-26,6)\n    - S(.31,-3,51,62)\n    + S(.193,6,-5,-12)\n    + S(.304,37,-30,-52)\n    - S(.394,-23,-75,34)\n    + S(.189,7,-4,-14)\n    - S(.516,3,-40,73)\n    - S(.503,-35,-13,71)\n    - S(.386,-25,-22,71)\n    - S(.258,78,-40,-24)\n    - S(.457,-33,-6,33)\n    - S(.394,19,-7,34)\n    - S(.358,-22,-13,34)\n    - S(.358,13,-52,-38)\n    + S(.212,-0,32,19)\n    + S(.661,-5,-5,56)\n    + S(.843,-17,6,61)\n    + S(.022,3,-5,-5)\n    - S(.401,-27,-21,-33)\n    + S(.245,20,18,22)\n    + S(.742,-26,18,76)\n    - S(.139,44,-15,-31)\n    - S(.336,45,22,67)\n    + S(.147,34,21,34)\n    - S(.285,66,-7,35)\n    - S(.232,-83,-56,-20)\n    + S(.535,-40,-37,53)\n    + S(.094,5,-9,-7)\n    - S(.381,-30,-15,59)\n    + S(.313,-38,-24,-67)\n    - S(.291,-18,29,37)\n    + S(.621,-47,-37,65)\n    + S(.325,13,-40,-10)\n    - S(.179,-98,70,22)\n    - S(.271,45,-17,-31)\n    - S(.16,85,99,-29)\n    + S(.155,-56,-4,-5)\n    + S(.455,16,-45,36);\n}\n\n\n// Ray marcher by FabriceNeyret2\n\n#define rot(a) mat2(cos(a+vec4(0,11,33,0)))\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy, U = ( u -.5 * R ) / R.y, M = ( iMouse.xy - .5*R ) / R.y;\n    vec3 D = normalize(vec3(1.5,U)), p = vec3(-3,0,0);\n    float y = .5, z = iTime*.1, l = 0., d = l;\n    if (iMouse.z > 0.) y += -4.*M.y, z = -4.*M.x;\n    D.xz *= rot(y); D.xy *= rot(z);\n    p.xz *= rot(y); p.xy *= rot(z);\n    bool hit = false;\n    for (int i = 0; i < 150 && d < 5. && !hit; i++)\n        d = scene(p),\n        hit = d < 1e-3,\n        p += d*D,\n        l += d;\n\n    vec3 e = vec3(.01,0,0), n = normalize(scene(p) - vec3(scene(p-e),scene(p-e.yxy),scene(p-e.yyx)));\n    O = hit ? .2*max(0.,n.z)+.8*texture(iChannel0, reflect(D,n).xzy) : texture(iChannel0, D.xzy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 24,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}