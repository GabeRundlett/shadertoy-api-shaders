{
    "Shader": {
        "info": {
            "date": "1623685857",
            "description": "Special for https://t.me/webgl_ru \"Tentacles\" competition",
            "flags": 0,
            "hasliked": 0,
            "id": "slS3WR",
            "likes": 31,
            "name": "2d tentacles",
            "published": 3,
            "tags": [
                "tentacles"
            ],
            "usePreview": 0,
            "username": "avin",
            "viewed": 935
        },
        "renderpass": [
            {
                "code": "\n#define COL1 vec3(32, 43, 51) / 255.0 \n#define COL2 vec3(235, 241, 245) / 255.0 \n\n#define SF 1./min(iResolution.x,iResolution.y)*SIZE*.5\n#define SS(l,s) smoothstep(SF,-SF,l-s)\n\n\n// ---------------------\n\n\nfloat hash(vec3 p)\n{\n    p  = fract( p*0.3183099+.1 );\n\tp *= 17.0;\n    return fract( p.x*p.y*p.z*(p.x+p.y+p.z) );\n}\n\nfloat noise( in vec3 x )\n{\n    vec3 i = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n\t\n    return mix(mix(mix( hash(i+vec3(0,0,0)), \n                        hash(i+vec3(1,0,0)),f.x),\n                   mix( hash(i+vec3(0,1,0)), \n                        hash(i+vec3(1,1,0)),f.x),f.y),\n               mix(mix( hash(i+vec3(0,0,1)), \n                        hash(i+vec3(1,0,1)),f.x),\n                   mix( hash(i+vec3(0,1,1)), \n                        hash(i+vec3(1,1,1)),f.x),f.y),f.z);\n}\n\n// ----------------------\n\n \nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n { \n    vec2 ouv = (fragCoord.xy - iResolution.xy * 0.5) / iResolution.x; \n    \n    float SIZE = iResolution.x/75.;\n        \n    ouv *= SIZE;\n    \n    float mask = 0.0;    \n    \n    vec2 uv = ouv;\n    vec2 id = floor(uv);\n    uv = fract(uv) - 0.5;    \n    \n    float t = iTime*3.;\n    \n    float totalLayers = 30.;\n    for(float layer = 0.0; layer <= totalLayers; layer++ ) {\n        \n        uv += vec2(0., -sqrt(sqrt(layer))*.02);\n        \n        float layerFactor1 = layer/totalLayers;\n        float layerFactor2 = layerFactor1*.85 + .15;\n        \n        float layerFactorMove = layer*.15;\n        \n        \n    \n        for(float y =- 1.0; y <= 1.0; y++ ) {\n            for(float x =- 1.0; x <= 1.0; x++ ) {\n                vec2 rid = id - vec2(x, y);\n                \n                float pf = .1 + layerFactor1*.25;\n                \n                vec2 ruv = uv + vec2(x, y) + \n                    vec2(0, mod(rid, 2.)*.5) + \n                    vec2(\n                        noise(vec3(rid, t - layerFactorMove))*pf,\n                        noise(vec3(rid, t + 2000. - layerFactorMove))*pf\n                    );            \n\n                float l = length(ruv);            \n\n                float diameter = .70 - layerFactor2*.675;\n                float d = SS(l, diameter);      \n\n                mask = max(mask, d * layerFactor1);      \n                                \n                mask -= SS(l+SF*1.5, diameter);\n            }\n        }\n    }\n    \n    vec3 col = vec3(1.0);\n    col = mix(COL1, COL2, abs(mask));\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}