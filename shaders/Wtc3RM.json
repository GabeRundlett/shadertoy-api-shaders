{
    "Shader": {
        "info": {
            "date": "1575890143",
            "description": "Simple gradient generation.",
            "flags": 0,
            "hasliked": 0,
            "id": "Wtc3RM",
            "likes": 4,
            "name": "Gradient generation",
            "published": 3,
            "tags": [
                "2d",
                "gradient"
            ],
            "usePreview": 0,
            "username": "luluco250",
            "viewed": 460
        },
        "renderpass": [
            {
                "code": "vec3 GradientColors[] = vec3[](\n\tvec3(1, 0, 0),\n    vec3(1, 1, 0),\n    vec3(0, 1, 0),\n    vec3(0, 1, 1),\n    vec3(0, 0, 1),\n    vec3(1, 0, 1),\n    vec3(1, 0, 0)\n);\n\nvoid mainImage(out vec4 color, vec2 coord) {\n    vec2 ps = vec2(1) / iResolution.xy;\n    vec2 uv = coord * ps;\n    \n    float blur = (iMouse.z > 0.0) ? iMouse.x * ps.x + 0.5 : 1.0;\n    float inv_blur = 1.0 - blur;\n    \n    #define soften(x) smoothstep(inv_blur, blur, x)\n    \n    float pos = uv.x * float(GradientColors.length() - 1);\n    color.rgb = mix(GradientColors[0], GradientColors[1], soften(pos));\n    for (int i = 2; i < GradientColors.length(); ++i) {\n        pos -= 1.0;\n        color.rgb = mix(color.rgb, GradientColors[i], soften(pos));\n    }\n    \n    float light = (iMouse.z > 0.0) ? iMouse.y * ps.y * 2.0 : 1.0;\n    \n    color.rgb = mix(vec3(0), color.rgb, soften(mix(1.0, uv.y * 2.0, light)));\n    color.rgb = mix(color.rgb, vec3(1), soften(mix(0.0, uv.y * 2.0 - 1.0, light)));\n    \n    color.a = 1.0;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}