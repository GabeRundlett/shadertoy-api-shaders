{
    "Shader": {
        "info": {
            "date": "1677725661",
            "description": "gradient color horizontal 5",
            "flags": 0,
            "hasliked": 0,
            "id": "ddd3Rs",
            "likes": 1,
            "name": "gradient color horizontal 5(看展)",
            "published": 3,
            "tags": [
                "gradientcolorhorizontal5"
            ],
            "usePreview": 0,
            "username": "tianluo97",
            "viewed": 162
        },
        "renderpass": [
            {
                "code": "//The shader code that embeds a 938x84 frame buffer at its largest size without stretching the input\n\nconst vec2 target_resolution = vec2(940, 86);\n\nfloat sRGB(float t){ return mix(1.055*pow(t, 1./2.4) - 0.055, 12.92*t, step(t, 0.0031308)); }\nvec3 sRGB(in vec3 c) { return vec3 (sRGB(c.x), sRGB(c.y), sRGB(c.z));} \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Same texCoord as in Minecraft\n    vec2 texCoord = fragCoord/iResolution.xy;\n    // Own uv variable\n    vec2 uv = texCoord;\n    \n    // Center origin around screen center (range -0.5, 0.5)\n    uv -= .5;\n    \n    // Squish image in excessive dimension\n    float r = (iResolution.x/iResolution.y) / (target_resolution.x/target_resolution.y);\n    if (r >= 1.) uv.x *= r;\n    else uv.y /= r;\n    \n    // Recenter origin to start at 0 (range 0.0, 1.0)\n\tuv += .5;\n    uv.y -= 0.5/r - 0.5;    \n    \n    float PI = 3.1415926;\n    float time = iTime * 0.04; \n    float timeLeft = time * 3.0; \n    float scale = 1.0;\n    vec3 morningScatter = vec3(1.000,0.647,0.322);;    \n    \n    /*\n    //已经调好的不出错色板\n    vec4 color0 = vec4(0.122,0.353,1.000,1.0);\n    vec4 color1 = vec4(0.400,0.561,1.000,1.0);\n    vec4 color2 = vec4(0.561,0.690,1.000,1.0);\n    vec4 color3 = vec4(1.000,0.541,0.459,1.0);\n    vec4 color4 = vec4(1.000,0.616,0.361,1.0);*/\n    \n    //watching Color（已经调好的）\n    vec4 color0 = vec4(0.000,0.267,1.000,1.0);\n    vec4 color1 = vec4(0.220,0.427,1.000,1.0);\n    vec4 color2 = vec4(0.659,0.761,1.000,1.0);\n    vec4 color3 = vec4(1.000,0.506,0.420,1.0);\n    vec4 color4 = vec4(1.000,0.675,0.459,1.0);\n    \n    //moving Color //深色 \n    vec4 vcolor0 = vec4(0.000,0.188,0.702,1.0);\n    vec4 vcolor1 = vec4(0.102,0.341,1.000,1.0);\n    vec4 vcolor2 = vec4(0.361,0.529,1.000,1.0);\n    vec4 vcolor3 = vec4(1.000,0.388,0.278,1.0);\n    vec4 vcolor4 = vec4(1.000,0.580,0.302,1.0);\n    \n    float step0 = 0.45 * scale;\n    float step1 = 0.59 * scale;\n    float step2 = 0.8 * scale;\n    float step3 = 0.9 * scale;\n\n    float offset = uv.x-0.;\n    float y = mod(offset,scale);\n    \n    //visiting Color\n    vec4 visitingColor; \n    if (y < step0) {\n    float dist0 = smoothstep(0.0, step0, y);\n    visitingColor = mix(vcolor0, vcolor1, dist0);\n    }\n    \n    if (y > step0 && y < step1) {\n    float dist1 = smoothstep(step0, step1, y);\n    visitingColor = mix(vcolor1, vcolor2, dist1);\n    }\n    \n    //红到蓝 step1 - step2\n    else if (y > step1 && y < step2) {\n    float dist2 = smoothstep(step1, step2, y);\n    visitingColor = mix(vcolor2, vcolor3, dist2);\n    }\n    \n    else if (y > step2 && y < step3) {\n    float dist02 = smoothstep(step2, step3, y);\n    visitingColor = mix(vcolor3, vcolor4, dist02);\n    }\n    \n    else if (y > step3){\n    float dist3 = smoothstep(step3, 1.0 * scale, y);\n    visitingColor = mix(vcolor4, vcolor0, dist3);\n    }\n    \n    visitingColor = sqrt(visitingColor);\n    \n    //watching Color\n    vec4 watchingColor;\n    if (y < step0) {\n    float dist0 = smoothstep(0.0, step0, y);\n    watchingColor = mix(color0, color1, dist0);\n    }\n    \n    if (y > step0 && y < step1) {\n    float dist1 = smoothstep(step0, step1, y);\n    watchingColor = mix(color1, color2, dist1);\n    }\n    \n    //红到蓝 step1 - step2\n    else if (y > step1 && y < step2) {\n    float dist2 = smoothstep(step1, step2, y);\n    watchingColor = vec4(dist2,dist2,dist2,1.0);\n    watchingColor = mix(color2, color3, dist2);\n    }\n    \n    else if (y > step2 && y < step3) {\n    float dist02 = smoothstep(step2, step3, y);\n    watchingColor = vec4(dist02,dist02,dist02,1.0);\n    watchingColor = mix(color3, color4, dist02);\n    }\n    \n    else if (y > step3){\n    float dist3 = smoothstep(step3, 1.0 * scale, y);\n    watchingColor = mix(color4, color0, dist3);\n    }\n    \n    //添加mask去blur粉色与黄色\n    float mask;\n    float maskDivisionLine = step1+0.3;\n    if (y>maskDivisionLine ){\n    mask = smoothstep(maskDivisionLine,1.0,pow(y,0.7));}\n    else if (y<maskDivisionLine){\n    mask = 1.0-smoothstep(0.0,maskDivisionLine, pow(y,2.9));}\n    //watchingColor = vec4(vec3(mask),1.0);\n    //watchingColor = mix(vec4(morningScatter,1.0),watchingColor,mask);\n    \n    //color的颜色调整\n    watchingColor = sqrt(watchingColor);\n    \n    //watching Color2\n    \n    //watching Color（已经调好的)\n    vec4 Ccolor0 = vec4(0.000,0.125,0.502,1.0);\n    vec4 Ccolor1 = vec4(0.122,0.353,1.000,1.0);\n    vec4 Ccolor2 = vec4(0.839,0.894,1.000,1.0);\n    vec4 Ccolor3 = vec4(1.000,0.506,0.420,1.0);\n    vec4 Ccolor4 = vec4(1.000,0.675,0.459,1.0);\n    \n    float cstep0 = 0.55 * scale;\n    float cstep1 = 0.70 * scale;\n    float cstep2 = 0.77 * scale;\n    \n    vec4 watchingColor2;\n    if (y < cstep0) {\n    float dist0 = smoothstep(0.0, cstep0, y);\n    //watchingColor2 = vec4(dist0,dist0,dist0,1.0);\n    watchingColor2 = mix(Ccolor0, Ccolor1, dist0);\n    }\n    \n    else if (y > cstep0 && y < cstep1) {\n    float dist1 = (smoothstep(cstep0, cstep1, y));\n    watchingColor2 = mix(Ccolor1, Ccolor2, dist1);\n    //watchingColor2 = Ccolor1;\n    }\n    \n    //红到蓝 step1 - step2\n    else if (y > cstep1 && y < cstep2 ) {\n    float dist2 = smoothstep(cstep1, cstep2, y);\n    //watchingColor2 = vec4(dist2,dist2,dist2,1.0);\n    watchingColor2 = mix(Ccolor2, Ccolor1, dist2);\n    }\n    \n    else if (y > cstep2 ) {\n    float dist2 = smoothstep(cstep2, 1.0, y);\n    //watchingColor2 = vec4(dist2,dist2,dist2,1.0);\n    watchingColor2 = mix(Ccolor1, Ccolor0, dist2);\n    }\n    \n    watchingColor2 = sqrt(watchingColor2);  \n    \n    //连续变换\n    //fragColor = mix(visitingColor,watchingColor2,smoothstep(0.0, 1.0, sin(iTime * 0.8)*0.5 + 0.5));\n    //smoothstep变换\n    fragColor = mix(visitingColor,watchingColor2,smoothstep(0.0, 1.0, iTime*0.2));\n    \n    //DEBUG\n    //fragColor = mix(watchingColor2,visitingColor, smoothstep(0.0, 1.0, 0.0));\n    \n    // Black bars at the sides\n    if (uv.x < 0. || uv.x > 1. || uv.y < 0. || uv.y > 1.) fragColor = vec4(0);    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}