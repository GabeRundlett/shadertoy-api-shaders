{
    "Shader": {
        "info": {
            "date": "1499970551",
            "description": "Variation of https://www.shadertoy.com/view/lsjfRm shows intricate patterns made of snowflakes inside hexagons and equilateral triangles",
            "flags": 0,
            "hasliked": 0,
            "id": "Md2fzm",
            "likes": 11,
            "name": "[SH17A] Kis-Snowflakes",
            "published": 3,
            "tags": [
                "triangle",
                "tiling",
                "kisrhombille",
                "reptile",
                "equerre",
                "sh17a"
            ],
            "usePreview": 0,
            "username": "ttoinou",
            "viewed": 971
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 z, vec2 b )\n{\n    z -= z;\n    b /= 2e3; // b /= iResolution.y;\n    \n    vec2 A,B,C,D,E,G;\n    \n    A=B=C-=C;\n    B.x = 1.7320; // sqrt(3)\n    C.y = 1.;\n    \n    \n    for(int i = 0 ; i < 15 ; i++)\n    {\n        D = (2. * A + B)/3.;\n        \n        G = b - D;\n        E = B - D;\n        \n        // z.a = cos( angle )\n        z.a = dot(G,E)/(length(G)*length(E));\n        \n        E = (B + C)/2.;\n        \n        // COS(2PI/3) = -1/2\n        // COS( PI/3) =  1/2\n        \n        // ACD Triangle\n        if( z.a < -.5 ) {\n            B = C; \n            z.r = .9 - z.g;\n        \t// A stays the same\n        // EBD Triangle\n        } else if( z.a > .5 ) {\n            A = E;\n            z.g = 1. - z.b;\n        \t// B stays the same\n        // ECD Triangle\n        } else {\n            A = E;\n            B = C;\n        }\n        \n        z.rgb = 1.1 - z.gbr;\n        C = D;\n                                   \n    }\n    \n    \n}\n/*\nprevious version, looks better but explodes char count on Unix :\nvoid mainImage( out vec4 z, vec2 b )\n{\n    z -= z;\n    b /= 2e3; // b /= iResolution.y because > 280 chars otherwise :-( \n    \n    vec2 A,B,C,D,E,G,H;\n    A=B=C=vec2(0); // for Unix, > 280 chars :-( \n    \n    B.x = 1.732; // sqrt(3)\n    C.y = 1.;\n    \n    \n    for(int i = 0 ; i < 15 ; i++)\n    {\n        D = (2. * A + B)/3.;\n        E = (B + C)/2.;\n        \n        G = b - D;\n        H = B - D;\n        \n        // z.a = cos( angle )\n        z.a = dot(G,H)/(length(G)*length(H));\n        \n        \n        // COS(2PI/3) = -1/2\n        // COS( PI/3) =  1/2\n        \n        // ACD Triangle\n        if( z.a < -.5 ) {\n            B = C; \n            z.r = 1. - z.g;\n        \t// A stays the same\n        // EBD Triangle\n        } else if( z.a > .5 ) {\n            A = E;\n            z.g = 1. - z.b;\n        \t// B stays the same\n        // ECD Triangle\n        } else {\n            A = E;\n            B = C;\n        }\n        \n        z.rgb = 1.1 - z.gbr;\n        C = D;\n                                   \n    }\n    \n    \n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}