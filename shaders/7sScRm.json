{
    "Shader": {
        "info": {
            "date": "1643250122",
            "description": "click to have it look at the mouse, meow",
            "flags": 0,
            "hasliked": 0,
            "id": "7sScRm",
            "likes": 5,
            "name": "simple 2d cat face",
            "published": 3,
            "tags": [
                "face"
            ],
            "usePreview": 0,
            "username": "snerp",
            "viewed": 237
        },
        "renderpass": [
            {
                "code": "// mit license\nvec4 faceCol = vec4(.22, .16, .11, 1.0);\nvec4 faceStripeCol = vec4(.32, .22, .11, 1.0);\nvec4 white = vec4(1, 1, 1, 1.0);\nvec4 eyeWhite = vec4(.95, .95, .95, 1.0);\nvec4 whiteShadow = vec4(.85, .8, .8, 1.0);\nvec4 black = vec4(0, 0, 0, 1.0);\nvec4 eyeBlue = vec4(0, .8, .9, 1.0);\nvec4 eyeYellow = vec4(.9, .8, 0, 1.0);\nvec4 mouthPink = vec4(.9, .4, .6, 1.0);\n\nbool oval(vec2 uv, vec2 center, vec2 scale) {\n    return (length((uv - center) / scale) < 1.0);\n}\n\nvec4 face(vec2 uv) {\n    if (oval(uv, vec2(.5), vec2(.49))\n    || (oval(uv, vec2(.85,.8), vec2(.19)) && oval(uv, vec2(.9,.75), vec2(.19)))\n    || (oval(uv, vec2(.15,.8), vec2(.19)) && oval(uv, vec2(.1,.75), vec2(.19)))) {\n        if (cos(15.0*(uv.y-abs(uv.x-.5))) > .4) return faceStripeCol;\n        return faceCol;\n    }\n    return vec4(0);\n}\n\nvec2 smileWarpEye(vec2 inp) {\n    inp.y -= .2 - 2.0* inp.x * inp.x;\n    return inp * vec2(1.0, .7);\n}\n\nvec4 leftEye(vec2 uv, vec2 pos, vec2 lookDir, float blink, float blinkmod, float angry, vec4 irisCol, vec2 scl) {\n    uv.y +=blinkmod*.2;\n    blink *= 1.0 - blinkmod;\n    vec2 off = uv - pos;\n    uv.y -=blinkmod*.2;\n    off = mix(off, smileWarpEye(off), blinkmod);\n    vec2 eyeAngle = normalize(vec2(-angry,1.0));\n    float mov = abs(dot(normalize(off), eyeAngle));\n    off *= (1.0 + mov*.2);\n    vec2 fulloff = off * (1.0 + mov*10.0);\n    vec2 fakeuv = pos + mix(fulloff, off, blink);\n    if (!oval(fakeuv, pos, scl * vec2(.195, .195))) return vec4(0);\n    if (!oval(fakeuv, pos + scl * vec2(.0,-.01), scl * vec2(.193, .193) * blink)) return black;\n    if (!oval(fakeuv, pos - scl * vec2(0.01,.02), scl * vec2(.19, .19) * blink)) return whiteShadow;\n    if (oval(uv, pos + scl * vec2(.08), scl * vec2(.04,.02))) return white;\n    if (oval(uv, pos - scl * vec2(.05), scl * vec2(.02,.02))) return white;\n    if (oval(uv, pos + scl * lookDir * 1.1, scl * vec2(.03, .06))) return black;\n    if (oval(uv, pos + scl * lookDir, scl * vec2(.08, .13))) return irisCol;\n    return eyeWhite;\n}\n\nvec4 rightEye(vec2 uv, vec2 pos, vec2 lookDir, float blink, float blinkmod, float angry, vec4 irisCol, vec2 scl) {\n    uv.y +=blinkmod*.2;\n    blink *= 1.0 - blinkmod;\n    vec2 off = uv - pos;\n    uv.y -=blinkmod*.2;\n    off = mix(off, smileWarpEye(off), blinkmod);\n    vec2 eyeAngle = normalize(vec2(angry,1.0));\n    float mov = abs(dot(normalize(off), eyeAngle));\n    off *= (1.0 + mov*.2);\n    vec2 fulloff = off * (1.0 + mov*10.0);\n    vec2 fakeuv = pos + mix(fulloff, off, blink);\n    if (!oval(fakeuv, pos, scl * vec2(.195, .195))) return vec4(0);\n    if (!oval(fakeuv, pos + scl * vec2(.0,-.01), scl * vec2(.193, .193)* blink)) return black;\n    if (!oval(fakeuv, pos - scl * vec2(-0.01,.02), scl * vec2(.19, .19) * blink)) return whiteShadow;\n    if (oval(uv, pos + scl * vec2(.08), scl * vec2(.04,.02))) return white;\n    if (oval(uv, pos - scl * vec2(.05), scl * vec2(.02,.02))) return white;\n    if (oval(uv, pos + scl * lookDir * 1.1, scl * vec2(.03, .06))) return black;\n    if (oval(uv, pos + scl * lookDir, scl * vec2(.08, .13))) return irisCol;\n    return eyeWhite;    \n}\n\nvec4 mouth(vec2 uv, vec2 pos, float Open, float smile) {\n    float open = Open*.15;\n    if(oval(uv, pos+vec2(.0,.025), vec2(.005, .04))) return black;\n    if(oval(uv, pos+vec2(.032,.0425), vec2(.015, .026))) return black;\n    if(oval(uv, pos+vec2(-.032,.0425), vec2(.015, .026))) return black;\n    if(oval(uv, pos+vec2(.0,.08), vec2(.06, .08))\n    && oval(uv, pos+vec2(.0,.05), vec2(.08, .05))) return mouthPink;\n    \n    float upper = clamp(smile*3.5, 0.2, 1.0);\n    float lower = clamp(smile*-3.5, 0.0, 1.0);\n    if (oval(uv, pos+vec2(.15,.03-.010 * upper+.02*lower), vec2(.14, .08-.08*lower))) return vec4(0);\n    if (oval(uv, pos+vec2(-.15,.03-.010 * upper+.02*lower), vec2(.14, .08-.08*lower))) return vec4(0);\n    if(!(oval(uv, pos+vec2(.03,-.14), vec2(.19, .12*lower))\n    || oval(uv, pos+vec2(-.03,-.14), vec2(.19, .12*lower))) ){\n    \n    if(oval(uv, pos+vec2(.12 - .041 * lower,-.010 - .071 * lower), vec2(.15, .08 +.04* lower))) return black;\n    if(oval(uv, pos+vec2(-.12 + .041 * lower,-.010 - .071 * lower), vec2(.15, .08+.04* lower))) return black;\n    }\n    \n    if(oval(uv, pos+vec2(.0,.08), vec2(.25, .10))) return vec4(0);\n    \n    if(oval(uv, pos+vec2(.0,.1-open), vec2(.15, .18 * Open))) {\n        if(oval(uv, pos+vec2(.07,-.04), vec2(.0125, .068))) return white;\n        if(oval(uv, pos+vec2(-.07,-.04), vec2(.0125, .068))) return white;\n        if(oval(uv, pos+vec2(.04,-open*1.4), vec2(.0125, .038))) return white;\n        if(oval(uv, pos+vec2(-.04,-open*1.4), vec2(.0125, .038))) return white;\n        return mouthPink;\n    }\n    if(oval(uv, pos+vec2(.0,.1-open), vec2(.16, .19 * Open))) return black;\n    return vec4(0);\n}\n\nvec4 witch_mouth(vec2 uv, vec2 pos, float Open, float smile) {\n\n    float open = Open*.15;\n    \n    if(oval(uv, pos+vec2(.0,.1 - .08*smile), vec2(.19, .08))) return vec4(0);\n    bool lower = oval(uv, pos+vec2(.0,-.12 - .08*smile), vec2(.19, .08));\n    if(!lower) {\n    if(oval(uv, pos+vec2(.0,-.01 + .02*smile), vec2(.19, .08))) return black;\n    }\n    \n    if (uv.y < pos.y || lower) {\n    if(oval(uv, pos+vec2(.0,.1-open), vec2(.15, .18 * Open))) {\n        return mouthPink;\n    }\n    if(oval(uv, pos+vec2(.0,.1-open), vec2(.16, .19 * Open))) return black;\n    }\n    return vec4(0);\n}\n\nvec4 add(vec4 col, vec4 col2) {\n    return mix(col, col2, col2.a);\n}\n\nvec4 map(vec2 uv, vec2 lookDir) {\n    vec4 col;\n    float smile = cos(iTime);\n    col = face(uv);\n    \n    float n = 16.2;\n    float blink = .03 + .5*abs(n+n*.75*(sin(iTime*2.0) + sin(iTime * 1.4)));\n    \n    float blinkMod = max(0.0, smile);\n    blink = (clamp(blink, 0.00001, 1.0));\n    col = add(col, leftEye(uv, vec2(.75, .6), lookDir*.15, blink, blinkMod, 0.0, eyeBlue, vec2(1.0)));\n    col = add(col, rightEye(uv, vec2(.25, .6), lookDir*.15, blink, blinkMod, 0.0, eyeYellow, vec2(1.0)));\n    col = add(col, mouth(uv, vec2(.5, .35), 0.75+0.25*cos(3.70*iTime), smile));\n    \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 aspect = vec2(iResolution.x/iResolution.y, 1.0)/iResolution.xy;\n    vec2 uv = fragCoord * aspect;\n    vec2 mouseDir = iMouse.xy/iResolution.xy*2.0-1.0;//iMouse.xy * aspect - vec2(.9, .6);\n    // Output to screen\n    fragColor = map(uv-vec2(.35,0.0), mouseDir);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}