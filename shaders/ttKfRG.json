{
    "Shader": {
        "info": {
            "date": "1614607487",
            "description": "A copy of https://www.shadertoy.com/view/WtVfRy but trying to imitate the style of the original source: http://truetex.com/bezint.htm",
            "flags": 0,
            "hasliked": 0,
            "id": "ttKfRG",
            "likes": 1,
            "name": "Bezier Intersections pixelated",
            "published": 3,
            "tags": [
                "bezier",
                "intersections"
            ],
            "usePreview": 0,
            "username": "hamoid",
            "viewed": 295
        },
        "renderpass": [
            {
                "code": "// Idea from http://truetex.com/bezint.htm\n\nfloat n(float i) {\n  return 3.*sin(iTime*(sin(i*.03))+i);\n}\nfloat bezier(float t, float a, float b, float c, float d) {\n  float q = 1.0-t;\n  return q*q*q*n(a) + \n        3.*q*q*t*n(b) + \n          3.*q*t*t*n(c) + \n               t*t*t*n(d);\n}\nfloat color(vec2 uv) {\n  vec2 a = vec2(\n    bezier(uv.x, 1., -2., 3., -4.),\n    bezier(uv.x, 9., -8., 7., -6.)\n  );\n  vec2 b = vec2(\n    bezier(uv.y, 5., 2., 5., -5.),\n    bezier(uv.y, -1., -3., 8., 9.)\n  );\n  return distance(a, b);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 res = iResolution.xy;\n    vec2 uv = fragCoord/res;\n    vec2 px = res / 2.0;\n    uv = floor(uv * px) / px;\n    vec3 col = vec3(1.,1.,.8) - step(fract(color(uv)*4.0), 0.08);\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}