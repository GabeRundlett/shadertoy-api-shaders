{
    "Shader": {
        "info": {
            "date": "1509794672",
            "description": "One time my iPhone 5 screen broke, and I spent hours recording the glitching liquid RGB smearing.",
            "flags": 32,
            "hasliked": 0,
            "id": "4ljczt",
            "likes": 38,
            "name": "Liquid Crystal Glitch",
            "published": 3,
            "tags": [
                "glitch",
                "feedback"
            ],
            "usePreview": 0,
            "username": "MacroMachines",
            "viewed": 2455
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = texture(iChannel0, uv) * texture(iChannel1, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define rate 1.5\n#define push_RGB 10.09\n#define billow 9.10\n#define push_RGB2 1.9209\n#define startFrame 100\n#define leak 1.50\n#define scale 0.201\n#define didYOUeatALLthatACID 1.09729\n#define feedback 0.45\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec4 flow0  = texture(iChannel0, uv);\n    vec4 flowIn = texture(iChannel1, uv);\n    vec4 flow2  = texture(iChannel2, flow0.xy*0.1+uv);\n    \n    //if ( fract(iTime*0.2)>0.5 ) {fragColor = mix(flow0,flow2,0.1*flow0.b) ;}\n    fragColor *= texture(iChannel0, uv) * texture(iChannel1, uv);\n    if ( iFrame < startFrame ) {fragColor = texture(iChannel1, uv);} \n    \n    else {\n        \n        vec2 vUv = fragCoord.xy / iResolution.xy;\n        vec2 texel = rate / iResolution.xy;\n        vec3 uv = texture(iChannel0, vUv*(1.0 + leak * 0.005)).xyz;\n        \n        float gt = mod(iTime*vUv.x*vUv.y, billow * 6.1415)*scale;\n        \n        vec2 d1 = vec2(uv.x * vec2(texel.x*cos(gt * uv.z), texel.y*sin(gt*uv.y)));\n        vec2 d2 = vec2(uv.y * vec2(texel.x*cos(gt * uv.x), texel.y*sin(gt*uv.y)));\n        vec2 d3 = vec2(uv.z * vec2(texel.x*cos(gt * uv.y), texel.y*sin(gt*uv.y)));\n        \n        float bright = (uv.x+uv.y+uv.z)/ push_RGB + push_RGB2;\n        \n        float r = texture(iChannel0, vUv+ d1 * bright).x;\n        float g = texture(iChannel0, vUv+ d2 * bright).y;\n        float b = texture(iChannel0, vUv+ d3 * bright).z;\n        //float m = distance(uv-iMouse.xy,0.5);\n        vec3 uvMix = mix(uv, vec3(r,g,b), didYOUeatALLthatACID);\n        \n        vec3 orig = texture(iChannel1, vUv).xyz;\n        \n        fragColor += vec4(mix(uvMix, orig, 0.50-feedback), 0.5);//1.0);\n        \n        \n        \n        \n    }\n} \n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define rate 1.5\n#define push_RGB 1.09\n#define billow 2.10\n#define push_RGB2 2.9209\n#define startFrame 10\n#define leak 1.90\n#define scale 1.201\n#define didYOUeatALLthatACID 1.19729\n#define feedback 0.45\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 flow0 = texture(iChannel2, uv);\n    \n    if ( fract(iTime*0.2)>0.5 ) {fragColor /= flow0 ;}\n    \n    if ( iFrame < startFrame ) {fragColor = texture(iChannel1, uv);} \n    \n    else {\n        \n        vec2 vUv = fragCoord.xy / iResolution.xy;\n        vec2 texel = rate / iResolution.xy;\n        vec3 uv = texture(iChannel0, vUv*(1.0 + leak * 0.005)).xyz;\n        \n        float gt = mod(iTime*vUv.x*vUv.y, billow * 6.1415)*scale;\n        \n        vec2 d1 = vec2(uv.x * vec2(texel.x*cos(gt * uv.z), texel.y*sin(gt*uv.y)));\n        vec2 d2 = vec2(uv.y * vec2(texel.x*cos(gt * uv.x), texel.y*sin(gt*uv.y)));\n        vec2 d3 = vec2(uv.z * vec2(texel.x*cos(gt * uv.y), texel.y*sin(gt*uv.y)));\n        \n        float bright = (uv.x+uv.y+uv.z)/ push_RGB + push_RGB2;\n        \n        float r = texture(iChannel0, vUv+ d1 * bright).x;\n        float g = texture(iChannel0, vUv+ d2 * bright).y;\n        float b = texture(iChannel0, vUv+ d3 * bright).z;\n        \n        vec3 uvMix = mix(uv, vec3(r,g,b), didYOUeatALLthatACID);\n        \n        vec3 orig = texture(iChannel1, vUv).xyz;\n        \n        fragColor = vec4(mix(uvMix, orig, 0.50-feedback), 1.0);\n        \n    }\n} \n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}