{
    "Shader": {
        "info": {
            "date": "1497807801",
            "description": "A simple color shift",
            "flags": 0,
            "hasliked": 0,
            "id": "MdffDS",
            "likes": 18,
            "name": "Rainbow filter",
            "published": 3,
            "tags": [
                "rainbow",
                "roygbiv",
                "pride"
            ],
            "usePreview": 1,
            "username": "cacheflowe",
            "viewed": 1472
        },
        "renderpass": [
            {
                "code": "#define posterSteps 4.0\n#define lumaMult 0.5\n#define timeMult 0.15\n#define BW 0\n\nfloat rgbToGray(vec4 rgba) {\n\tconst vec3 W = vec3(0.2125, 0.7154, 0.0721);\n    return dot(rgba.xyz, W);\n}\n\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 color = texture(iChannel0, uv);\n    float luma = rgbToGray(color) * lumaMult;\n    float lumaIndex = floor(luma * posterSteps);\n   \tfloat lumaFloor = lumaIndex / posterSteps;\n    float lumaRemainder = (luma - lumaFloor) * posterSteps;\n    if(mod(lumaIndex, 2.) == 0.) lumaRemainder = 1.0 - lumaRemainder; // flip luma remainder for smooth color transitions\n    float timeInc = iTime * timeMult;\n    float lumaCycle = mod(luma + timeInc, 1.);\n    vec3 roygbiv = hsv2rgb(vec3(lumaCycle, 1., lumaRemainder));\n    if(BW == 1) {\n        float bw = rgbToGray(vec4(roygbiv, 1.));\n        fragColor = vec4(vec3(bw), 1.0);\n    } else {\n        fragColor = vec4(roygbiv, 1.0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}