{
    "Shader": {
        "info": {
            "date": "1723278874",
            "description": "originals https://www.shadertoy.com/view/3tXcW8",
            "flags": 0,
            "hasliked": 0,
            "id": "lcsBRr",
            "likes": 4,
            "name": "cyber hourglass",
            "published": 3,
            "tags": [
                "map",
                "rotating"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 110
        },
        "renderpass": [
            {
                "code": "\n\nvec2 z,v,e=vec2(.0035,-.0035),gpo=vec2(0),gl=vec2(0);float t,tt,b,bb,pi,g,gg,ti;vec3 op,np,bp,cp,pp,po,no,al,ld;\nfloat cx(vec3 p,vec3 r){return max(abs(length(p.yz)-r.x)-r.y,abs(p.x)-r.z);}\nfloat cz(vec3 p,vec3 r){return max(abs(length(p.xy)-r.x)-r.y,abs(p.z)-r.z);}\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));}\n\nfloat tick(float t){\n  t=fract(t/10.);\n  t=smoothstep(10.,1.,t);\n  t=pow(sin(t*2.*pi),2.);    \n  return t*2.*pi;\n}\nvec2 fb( vec3 p, float mat, float tw) \n{\n  pp=abs(p)-vec3(7,3.,3.);\n\n  vec2 h,t=vec2(length(pp)-1.9,6);\n  gl[int(mat)]+=0.1/(0.5+t.x*t.x*20.);\n  h=vec2(cx(pp,vec3(2,.5,.5)),5); t=t.x<h.x?t:h;  \n\n  gl.y+=(0.03/(0.1+h.x*h.y*.1))*(gpo.x-.2)*-10.;\n\n  pp=abs(p);\n\n  p.xz*=r2(iTime*10.);\n  np=p;\n \n  h=vec2(length(np.xz)-.35,3);\n  \n h+=vec2(length(np.yz)-.35,3);\n\n  \n  \n \n  return t;\n}\nvec2 mp( vec3 p ){ \n  op=p;\n    p.xz*=r2(iTime*10.);\n      p.xy*=r2(90.); \n  vec4 np=vec4(p,5);\n  float mat,bro;\n  vec2 h,t=vec2(100);\n  for(int i=0;i<50;i++){     \n    mat=mod(float(i),23.);\n    bro=cos(mat*pi);\n p.zy*=r2(iTime);\n    h=fb(np.xyz,mat,np.x);\n    h.x/=np.w;\n    t=t.x<h.x?t:h;\n    np*=2.;\n  }\n  return t;\n}\nvec2 tr( vec3 ro, vec3 rd)\n{\n  vec2 h,t= vec2(.1);\n  \n  for(int i=0;i<128;i++){\n    h=mp(ro+rd*t.x);\n    if(h.x<.0001||t.x>30.) break;\n    t.x+=h.x;t.y=h.y;\n  }\n  if(t.x>30.) t.y=0.;\n  return t;\n}\n#define a(d) clamp(mp(po+no*d).x/d,0.,1.)\n#define s(d) smoothstep(0.,1.,mp(po+ld*d).x/d)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv=(fragCoord.xy/iResolution.xy-0.5)/vec2(iResolution.y/iResolution.x,1);\n \n  tt=iTime;; \n\n  gpo=vec2((sin((sin(tt*5.+cos(tt*12.))))));\n  gpo.y=1.-gpo.y; gpo*=0.2;\n  if(cos(ti)<.7) gpo=vec2(0.2); \n\n\n  v=(gpo-.2)*.2; uv*=1.-(v.y+v.x)*4.;\n  vec3 ro=vec3(0.,0,+11.+4.),\n  cw=normalize(vec3(0)-ro),cu=normalize(cross(cw,vec3(0,1,0))),cv=normalize(cross(cu,cw)),\n \n  rd=mat3(cu,cv,cw)*normalize(vec3(uv,.7)),co,fo;\n\n  ld=normalize(vec3(.1,.5,.3));\n  \n  co=fo=vec3(.1,.03,.15)-length(uv)*.1-rd.y*.15;\n  z=tr(ro,rd);t=z.x;\n  if(z.y>0.){\n    po=ro+rd*t;\n    \n    no=normalize(e.xyy*mp(po+e.xyy).x+e.yyx*mp(po+e.yyx).x+e.yxy*mp(po+e.yxy).x+e.xxx*mp(po+e.xxx).x); \n    al=vec3(.5); \n   \n    float dif=max(0.,dot(no,ld)),\n    fr=pow(1.+dot(no,rd),4.),\n    sp=pow(max(dot(reflect(-ld,no),-rd),0.),100.);\n    co=mix(sp+mix(vec3(.7),vec3(1.),abs(rd))*al*(a(0.1)*a(2.3)+.2)*(dif+s(.5)),fo,min(fr,.5));\n    \n  }\n  fragColor = vec4(pow(co+gl.x*gpo.x*vec3(1,.4,.2)+gl.y*vec3(.1,.2,.4)*gpo.y,vec3(1.45)),1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}