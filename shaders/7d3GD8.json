{
    "Shader": {
        "info": {
            "date": "1629663876",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "7d3GD8",
            "likes": 11,
            "name": "torus interior in colors",
            "published": 3,
            "tags": [
                "torus",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 380
        },
        "renderpass": [
            {
                "code": "\n#define r(a)    mat2( cos(a+vec4(0,11,33,0)) )                // rotation                  \n#define hue(v) ( .6 + .6 * cos( v  + vec4(0,23,21,0)  ) )     // hue\n\nvoid mainImage(out vec4 O, vec2 U) {    \n    vec3  R = iResolution,     // 3.*R.y for normal field of view\n          D = normalize(vec3( U+U, -R.y ) - R ),              // ray direction\n          p = 30./R, q,                                       // marching point along ray \n          M = cos(iTime+vec3(0,11,0)) / vec3(1,2,.5);         // camera animation\n    float t=9.,d;\n     \n    for ( O += 1.1-O ; O.x > 0. && t > .01 ; O-=.01 ) //  O.x>0. just for security\n        q = p, \n        q.yz *= r( .5+M.y ),                                  // rotations\n        q.xz *= r(    M.x ),          // R0=20        R1=17\n        t = abs( length(vec2(d=length(q.xz)-20., q.y)) - 17.),// abs for inside + outside\n        p += .9*t*D;                                          // step forward = dist to obj\n\n    U  = 2.* atan( q.zy, vec2(q.x,d) );                       // strip texture  \n    O *= ( .5 + .5* sin(9.*(U.x+=U.y)) )  * hue(U.x);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}