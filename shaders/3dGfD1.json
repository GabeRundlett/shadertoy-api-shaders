{
    "Shader": {
        "info": {
            "date": "1607022300",
            "description": "ref: [url]https://www.google.com/search?q=triangle+to+square&tbm=isch[/url]\nconstruction: [url]https://www.cs.purdue.edu/homes/gnf/book2/trisqu.html[/url]\nmore: start of [url]https://www.facebook.com/watch/?v=879304782515830[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "3dGfD1",
            "likes": 14,
            "name": "triangle to square 2",
            "published": 3,
            "tags": [
                "geometry",
                "tiling",
                "short",
                "reproduction",
                "hingeddissections"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 408
        },
        "renderpass": [
            {
                "code": "// v1 shader turned ghost ! https://www.shadertoy.com/view/WsGBD1\n\n#define cross2(a,b) ( (a).x*(b).y - (b).x*(a).y )\n\n// --- return bilinear coordinates of U in quad\n// ( some special cases might not fixed, but enough for use in this shader )\nvec2 Q(vec2 U, vec2 P00, vec2 P10, vec2 P01, vec2 P11) {\n    vec2  bu = P10-P00, bv = P01-P00, c = P00-U,  a = P11-P01 -bu;\n    float dv = -cross2(a,bv),\n          av = cross2(a,bu), cv = cross2(a,c);  // v = av/d . u + cv/d\n\n    if (dot(a,a)<1e-3)                          // parallelogram\n        return - inverse(mat2(bu,bv)) * c;         \n/*  if ( abs(dv) < 3e-2 ) {                     // trapeze\n        U.x = -cv/av, \n        U.y = -( bu.y*U.x + c.y ) / ( bv.y + a.y*U.x ); \n        return U; \n    } // or swap yx in a, bu, bv, c\n*/  av /= dv, cv /= dv;\n    float  A = a.x*av, B = bu.x + a.x*cv + bv.x*av, C = bv.x*cv + c.x,\n           D = B*B - 4.*A*C;\n    if ( abs(A) < 1e-3 )                        // linear case\n        U.x = -C/B; \n    else {\n        if ( D < 0. ) return vec2(-1.);         // shouldnt be.\n        U.x = ( -B + sign(B)*sqrt(D) ) *.5 / A; // bilinear coordinates\n    }\n    U.y = av * U.x + cv;\n    return U;\n}\n\n\n// --- not normalized signed distance to quad\nfloat sdQ(vec2 U, vec2 P00, vec2 P10, vec2 P01, vec2 P11) {\n    U = Q( U, P00, P10, P01, P11);\n    U = abs(U-.5)-.5;\n    return max(U.x,U.y);  \n}\n\n#define S(a)   smoothstep( 1.5, 0., (a)/min(.1,fwidth(a)) )\n//#define S(a)  ( v = (a)/fwidth(a), a < .1 ? smoothstep( 1.5, 0., v ) : 0. ) // .2+.2*sin(30.*(v)) )\n#define CS(a)   vec2( cos(a), sin(a) )\n#define rot(a)  mat2(cos( a + vec4(0,11,33,0)))\n\n\nvoid mainImage( out vec4 O, vec2 u ) // =======================\n{\n    vec2 R = iResolution.xy,\n         U = 1.5* ( 2.*u - R ) /R.y + vec2(.6,.2);\n         \n    \n#if 0 // test bilinear mapping \n    vec2 M = 1.5*iMouse.xy/R.y-.1;\n    U = Q( U, vec2(0), vec2(1,0), vec2(.2,.8), vec2(M) ); // quad\n  //U = Q( U, vec2(0), vec2(0)  , vec2(.2,.8), vec2(M) ); // triangle\n    O = texture(iChannel0, U);\n    U = abs(U-.5); O *= max(U.x,U.y) < .5 ? 2. : .5;\n    return;\n#endif \n    \n    float t = 3.142*(.5-.5*cos(iTime)), v,\n          s = 1.52,\n          z = .387, w = s/2.-z, a = .718, x = .5/tan(a), y = 1.-x;\n    O-=O;\n#define P(I,J,K)  O += S( sdQ( U, vec2(0), I, J, I+K ) )\n  \n    U *= rot(t);\n    P( vec2(z,0), s/2.*CS(1.05), y*CS(a) );\n    U.x -= z;\n    U *= rot(-t);\n    P( vec2(0), vec2(s/2.,0), x*CS(a) );\n    U.x -= s/2.;\n    U *= rot(-t);\n    P( vec2(w,0),  .5*CS(1.57+a), s/2.*CS(2.1) );\n    U.x -= w;\n    U *= rot(2.1);\n    U.x -= s/2.;\n    U *= rot(-t);\n    P( vec2(s/2.,0),  x*CS(1.05+a), s/2.*CS(2.1) );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}