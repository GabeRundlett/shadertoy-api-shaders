{
    "Shader": {
        "info": {
            "date": "1618435393",
            "description": "Lighting based on the probablity that a light ray hits a pixel.",
            "flags": 0,
            "hasliked": 0,
            "id": "fsfSWn",
            "likes": 5,
            "name": "2D Light Coverage - Disc",
            "published": 3,
            "tags": [
                "2d",
                "light",
                "coverage"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 295
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * 4.0;\n    vec3 color = vec3(0.0);\n\n    vec2 lightPos = vec2(0.0);\n    float lightRadius = 1.0;\n\n    vec2 ray = uv - lightPos;\n    float dd = dot(ray, ray);\n    if (dd < lightRadius * lightRadius) color += 1.0;\n    else color += 1.0 - acos(lightRadius / sqrt(dd)) / 1.57;\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}