{
    "Shader": {
        "info": {
            "date": "1611374469",
            "description": "Just trying out the font texture.",
            "flags": 0,
            "hasliked": 0,
            "id": "3lycR3",
            "likes": 5,
            "name": "Trying out the Font Texture",
            "published": 3,
            "tags": [
                "distancefield",
                "texture",
                "font"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 260
        },
        "renderpass": [
            {
                "code": "float sampleFontSmooth(in vec2 uv) {\n    vec2 st = uv * iChannelResolution[0].xy;\n    ivec2 xy = ivec2(st);\n\n    float bl = texelFetch(iChannel0, xy, 0).w;\n    float br = texelFetch(iChannel0, xy + ivec2(1, 0), 0).w;\n    float tl = texelFetch(iChannel0, xy + ivec2(0, 1), 0).w;\n    float tr = texelFetch(iChannel0, xy + 1, 0).w;\n\n    vec2 local = fract(st);\n    //local *= local * (3.0 - 2.0 * local);\n    return mix(mix(bl, br, local.x), mix(tl, tr, local.x), local.y);\n}\n\nvec4 mapScene(in vec3 p) {\n    float c = cos(iTime), s = sin(iTime);\n    p.xz *= mat2(c, -s, s, c);\n    p.yz *= mat2(c, -s, s, c);\n\n    float ww = 30.0, wh = 25.0, wd = 1.0;\n\n    float font = sampleFontSmooth((p.xy + vec2(ww, wh)) / vec2(2.0 * ww, 2.0 * wh)) - 0.5;\n    font = max(font, max(max(abs(p.x) - ww, abs(p.y) - wh), abs(p.z) - wd));\n\n    return vec4(font, vec3(1.0));\n}\n\nvec3 getNormal(in vec3 p) {\n    vec3 e = vec3(0.001, 0.0, 0.0);\n    return normalize(vec3(mapScene(p + e.xyy).x - mapScene(p - e.xyy).x,\n                          mapScene(p + e.yxy).x - mapScene(p - e.yxy).x,\n                          mapScene(p + e.yyx).x - mapScene(p - e.yyx).x));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\n    vec3 ro = vec3(0.0, 0.0, 50.0);\n    vec3 rd = normalize(vec3(uv, -1.0));\n\n    float t = 0.0;\n    for (float iters=0.0; iters < 150.0; iters++) {\n        vec3 p = ro + rd * t;\n        vec4 scene = mapScene(p);\n        if (scene.x < 0.001) {\n            vec3 n = getNormal(p);\n            vec3 l = vec3(-0.58, 0.58, 0.58);\n            fragColor.rgb += scene.yzw;\n            fragColor.rgb *= max(0.2, dot(n, l));\n            break;\n        }\n\n        if (t > 200.0) {\n            break;\n        }\n\n        t += scene.x;\n    }\n\n    //fragColor = smoothstep(0.05, 0.0, vec4(texture(iChannel0, fragCoord / iResolution.xy).w - 0.5));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}