{
    "Shader": {
        "info": {
            "date": "1430100026",
            "description": "whoa",
            "flags": 0,
            "hasliked": 0,
            "id": "Ml2GzG",
            "likes": 4,
            "name": "Spirals_rbrt",
            "published": 3,
            "tags": [
                "spinmerightround"
            ],
            "usePreview": 0,
            "username": "rbrt",
            "viewed": 1449
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 newPoint;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    float theta = iChannelTime[0] * 1.5;\n\n    float centerCoordx = (uv.x * 2.0 - 1.0);\n    float centerCoordy = (uv.y * 2.0 - 1.0);\n\n    float len = sqrt(pow(centerCoordx, 2.0) + pow(centerCoordy, 2.0));\n\n    vec2 vecA = vec2(centerCoordx, centerCoordy);\n    vec2 vecB = vec2(len, 0);\n\n    float initialValue = dot(vecA, vecB) / (len * 1.0);\n    float degree = degrees(acos(initialValue));\n\n    float thetamod = degree / 18.0 * sin(len * 100.0 / 2.0);\n    \n\tvec2 effectParams = iMouse.xy / iResolution.xy;\n    \n\t// Input xy controls speed and intensity\n    float intensity = effectParams.x * 20.0 + 10.0;\n    float speed = iTime * effectParams.y * 10.0 + 4.0;\n    float time = mod(speed, intensity);\n    \n    if (time < intensity / 2.0){\n\t    theta += thetamod * (time / 100.0) ;\n    }\n    else{\n        theta += thetamod * ((intensity - time) / 100.0) ;\n    }\n\n    newPoint = vec2((cos(theta) * (uv.x * 2.0 - 1.0) + sin(theta) * (uv.y * 2.0 - 1.0) + 1.0)/2.0,\n                      (-sin(theta) * (uv.x * 2.0 - 1.0) + cos(theta) * (uv.y * 2.0 - 1.0) + 1.0)/2.0);\n\n\n\tfragColor = texture(iChannel0, newPoint);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}