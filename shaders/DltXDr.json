{
    "Shader": {
        "info": {
            "date": "1685285037",
            "description": "chica-loca",
            "flags": 0,
            "hasliked": 0,
            "id": "DltXDr",
            "likes": 10,
            "name": "chica-loca",
            "published": 3,
            "tags": [
                "chicaloca"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 213
        },
        "renderpass": [
            {
                "code": "//por jorge2017a2\n//--chica-loca\n//28-may-2023\n\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(3.0*antialiasing(1.0),b,d)\n#define POLY(N) (in vec2 p, in vec2[N] v) {const int n=v.length();float d=dot(p-v[0],p-v[0]);float s=1.;for(int i=0,j=n-1;i<n;j=i,i++){vec2 e=v[j]-v[i];vec2 w=p-v[i];vec2 b=w-e*clamp(dot(w,e)/dot(e,e),0.,1.);d=min(d,dot(b,b));bvec3 cond=bvec3(p.y>=v[i].y,p.y<v[j].y,e.x*w.y>e.y*w.x);if(all(cond)||all(not(cond))) s=-s;}return s*sqrt(d);}\n#define PI 3.141516\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\ncolOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.001,0.0));\nreturn colOut;\n}\nvec3 DrawFigBordeCoL(vec3 pColObj, vec3 colOut, float distObj , vec3 colBorde )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,colBorde ,S2(abs( distObj)-0.01,0.0));\n  return colOut;\n}\n\nvec3 DrawFigDelgado(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj-0.001,0.0)); return colOut; }\n\nvec3 DrawFigSolo(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut; }\n\n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\n///oneshade    \nvec2 Rotate(in vec2 p, in vec2 o, in float r) \n{   float c = cos(r), s = sin(r);\n    return (p - o) * mat2(c, -s, s, c) + o;\n}\n\nfloat sdCircle( vec2 p, float r )\n{return length(p) - r; }\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b; return length(max(d,0.0)) + min(max(d.x,d.y),0.0); }\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\nvec2 pa = p-a, ba = b-a;\nfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\nreturn length( pa - ba*h );\n}\n\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n\n\nfloat sdTrapezoid( in vec2 p, in float r1, float r2, float he )\n{\n    vec2 k1 = vec2(r2,he);\n    vec2 k2 = vec2(r2-r1,2.0*he);\n    p.x = abs(p.x);\n    vec2 ca = vec2(p.x-min(p.x,(p.y<0.0)?r1:r2), abs(p.y)-he);\n    vec2 cb = p - k1 + k2*clamp( dot(k1-p,k2)/dot2(k2), 0.0, 1.0 );\n    float s = (cb.x<0.0 && ca.y<0.0) ? -1.0 : 1.0;\n    return s*sqrt( min(dot2(ca),dot2(cb)) );\n}\n\n\nvec2 p0_; //punto uv\nvec2 pt0; //punto pos0\nfloat DistL;\nvec3 ColL;  //color linea\nvec3 ColO;  //color salida Out\n\nvoid L( vec2 p1)\n{   DistL=sdSegment(p0_, pt0, p1 );\n    ColO= DrawFigBorde(ColL, ColO,DistL); \n    pt0 = p1;\n}\nvoid SZ(vec2 p ){pt0 = p;}\nvoid M(vec2 p1){pt0 = p1;}\nvoid C(vec3 pcol){ColL=pcol;}\n\n\nfloat sdPoly8 POLY(8)\nvec2  pt8[8]=vec2[](\nvec2(1.21,0.88),vec2(2.01,0.92),vec2(2.09,1.44),vec2(2.2,1.72),vec2(2.39,2.13),\nvec2(1.31,2.12),vec2(1.19,1.39),vec2(1.21,0.88)  );\n\nfloat sdPoly5a POLY(5)\nvec2  pt5a[5]=vec2[](\nvec2(1.43,1.07),vec2(1.35,1.07),vec2(1.33,1.15),vec2(1.38,1.16),vec2(1.43,1.07)  );\n\n\nfloat sdPoly5b POLY(5)\nvec2  pt5b[5]=vec2[](\nvec2(1.82,1.11),vec2(1.88,1.13),vec2(1.87,1.18),vec2(1.81,1.22),vec2(1.82,1.11)  );\n\n\nfloat sdPoly15 POLY(15)\nvec2  pt15[15]=vec2[](\nvec2(1.31,1.55),vec2(1.74,1.6),vec2(1.87,1.83),vec2(1.8,2.13),vec2(1.81,2.23),\nvec2(1.85,2.39),vec2(1.83,2.47),vec2(1.82,2.47),vec2(1.38,2.52),vec2(1.31,2.45),\nvec2(1.31,2.45),vec2(1.31,2.25),vec2(1.23,2.02),vec2(1.22,1.91),vec2(1.31,1.55)  );\n\n\nvec3 PeloB(vec2 p ,vec3 col)\n{\n    float sd = sdPoly8(p, pt8);\n    col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, sd);\n    return col;\n}\n\nvec3 Pelo(vec2 p,vec3 col)\n{\n    float r1,d1,r2, d2;\n    vec2 p1,p2;\n\n\n    r1 = 0.4;\n    p1 = vec2(1.63, 0.98);\n    d1 = sdCircle(p- p1, r1);\n    //col = DrawFigBorde(vec3(0.0), col, d1);\n\n    r2 = 0.35;\n    p2 = vec2(1.58, 0.91);\n    d2 = sdCircle(p- p2, r2);\n    float dt;\n    dt = unionSDF(d1, d2);\n    col = DrawFigBorde(vec3(0.0), col, dt);\n    col = PeloB(p, col);\n    return col;\n}\n\nvec3 Cejas(vec2 p,vec3 col)\n{\n    vec2 p1,p2,p3,p4;\n\n    p1 = vec2(1.55, 0.98);\n    p2 = vec2(1.49, 0.96);\n    p3 = vec2(1.43, 0.95);\n    p4 = vec2(1.38, 0.95);\n\n    p0_ = p;\n    ColO = col;\n    SZ(p1); M(p1); C(vec3(0.0));\n    L(p1); L(p2); L(p3); L(p4);;\n    col = ColO;\n\n\n    //ceja der;\n    p1 = vec2(1.68, 0.98);\n    p2 = vec2(1.76, 0.97);\n    p3 = vec2(1.83, 0.98);\n    p4 = vec2(1.87, 1);\n    p0_ = p;\n    ColO = col;\n     SZ(p1); M(p1); C(vec3(0.0));\n    L(p1); L(p2); L(p3); L(p4);;\n    col = ColO;\n    return col;\n}\n\nvec3 Rostro(vec2 p, vec3 col)\n{\n    vec2 pos, med;\n    float d1, d2,d3,d4;\n\n    pos = vec2(1.66, 1.14);\n    med = vec2(0.24, 0.35);\n    d1 = sdEllipse(p- pos, med);\n    //---------;\n    pos = vec2(1.55, 1.17);\n    med = vec2(0.24, 0.35);\n    d2 = sdEllipse(p- pos, med);\n    //---------;\n    pos = vec2(1.59, 1.15);\n    med = vec2(0.21, 0.39);\n    d3 = sdEllipse(p- pos, med);\n    //---------;\n    pos = vec2(1.59, 1.24);\n    med = vec2(0.31, 0.23);\n    d4 = sdEllipse(p- pos, med);\n    //---------;\n    float dt;\n    vec3 colc;\n    dt = unionSDF(d1, d2);\n    dt = unionSDF(dt, d3);\n    dt = unionSDF(dt, d4);\n    \n    colc = vec3(0.95, 0.87, 0.91);\n    col = DrawFigBorde(colc, col, dt);\n    return col;\n}\n\n\nvec3 OjoIzq(vec2 p,vec3 col)\n{\n    vec2 pos,med,p1;\n    float d1,r1;\n    \n    pos = vec2(1.42, 1.14);\n    med = vec2(0.09, 0.06);\n    d1 = sdEllipse(p- pos, med);\n\n     float d2 = sdPoly5a(p, pt5a);   \n    float dt = unionSDF(d1, d2);\n    col = DrawFigBorde(vec3(1.0), col, dt);\n\n    \n    r1 = 0.045; // 0.05;\n    p1 = vec2(1.44, 1.15);\n    d1 = sdCircle(p- p1, r1);\n    col = DrawFigSolo(vec3(0.0), col, d1);\n    return col;\n}\n\nvec3 ojoDer(vec2 p,vec3 col)\n{\n    vec2 pos, med;\n    float d1;\n\n    pos = vec2(1.77, 1.16);\n    med = vec2(0.09, 0.06);\n    d1 = sdEllipse(p- pos, med);\n\n    float sd = sdPoly5b(p, pt5b);\n    \n    float dt = unionSDF(d1, sd);\n    col = DrawFigBorde(vec3(1.0), col, dt);\n    col = DrawFigBorde(vec3(1.0), col, dt);\n\n    float r3,d3;\n    vec2 p3;\n\n    r3 = 0.045;\n    p3 = vec2(1.75, 1.17);\n    d3 = sdCircle(p- p3, r3);\n    col = DrawFigSolo(vec3(0.0), col, d3);\n\n    return col;\n}\n\nvec3 nariz(vec2 p,vec3  col)\n{ vec2 p1, p2;\n    ColO = col;\n    p0_ = p;\n    p1 = vec2(1.58, 1.23);\n    p2 = vec2(1.57, 1.29);\n    SZ(p1); M(p1); C(vec3(0.0));\n    L(p1); L(p2);;\n    col = ColO;\n    return col;\n}\n\nvec3 boca(vec2 p,vec3 col)\n{\n    vec2 pos,med;\n    float dt;\n    float r1, d1,r2,d2,r3,d3,r4,d4;\n    vec2 p1,p2, p3, p4;\n\n    pos = vec2(1.58, 1.33);\n    med = vec2(0.11, 0.15);\n    d1 = sdEllipse(p- pos, med);\n\n    r2 = 0.18;\n    p2 = vec2(1.58, 1.15);\n    d2 = sdCircle(p- p2, r2);\n    dt = differenceSDF(d1, d2);\n    \n\n    r3 = 0.09;\n    p3 = vec2(1.73, 1.25);\n    d3 = sdCircle(p- p3, r3);\n\n\n    r4 = 0.09;\n    p4 = vec2(1.42, 1.25);\n    d4 = sdCircle(p- p4, r4);\n    dt = differenceSDF(dt, d3);\n    dt = differenceSDF(dt, d4);\n    col = DrawFigBorde(vec3(0.0), col, dt);\n\n////dientes;\n\nvec3 colc;\n    r1 = 0.2;\n    p1 = vec2(1.6, 1.19);\n    d1 = sdCircle(p- p1, r1);\n    d1 = intersectSDF(d1, dt);\n    col = DrawFigBorde(vec3(1.0), col, d1);\n    \n    return col;\n}\n\nvec3 Cuello(vec2 p,vec3 col)\n{\n    vec2 pos,med;\n    vec3 colc;\n    float d1;\n    pos = vec2(1.53, 1.56);;\n    med = vec2(0.1, 0.125);\n    d1 = sdBox(p- pos, med);\n    colc = vec3(0.95, 0.87, 0.91);\n    col = DrawFigBorde(colc, col, d1);\nreturn col;\n}\n\nvec3 BrazoDer(vec2 pp ,vec3 col)\n{\n    float r1,r2,he,d1,ang;\n    vec2 pos, p;\n    float d2,d3;\n    vec2 p1, med,pr;\n\n\n    p = pp;\n    r1 = 0.075;\n    r2 = 0.125;\n    he = 0.68; //0.675;\n    pos = vec2(2.07, 1.265);  ////original;\n\n    ang = -30.0 * PI / 180.0;\n    pr = Rotate(p- vec2(-0.08, -0.11), vec2(pos.x - r1 / 2., pos.y + he / 2.), ang);\n    d1 = sdTrapezoid(pr- pos, r1, r2, he);\n\n    r1 = 0.15; //r=0.13;\n    p1 = vec2(2.47, 0.63);\n    d2 = sdCircle(p- p1, r1);\n\n    pos = vec2(1.83, 1.75);\n    med = vec2(0.09, 0.14);\n    d3 = sdEllipse(p- pos, med);\n    d1 = differenceSDF(d1, d2);\n    d1 = unionSDF(d1, d3);\n    col = DrawFigBorde(vec3(1.0), col, d1);\n    \n    ///mano\n    float dt, d0;\n    pos = vec2(2.4, 0.55);\n    med = vec2(0.1, 0.3);\n    vec3 colc = vec3(0.95, 0.87, 0.91);\n    ang = -30.0 * PI / 180.0;\n    pr = Rotate(p- pos, med, ang);\n    d0 = sdEllipse(pr, med);\n    col = DrawFigBorde(colc, col, d0);\n    return col;\n}\n\nvec3 BrazoIzq(vec2 p,vec3 col)\n{\n    float r1,r2,he,d1,ang,d2;\n    vec2 pos, pr,p1;\n\n    r1 = 0.075;\n    r2 = 0.11;\n    he = 0.725;\n    pos = vec2(0.97, 1.155);\n    ang = 27.0 * PI / 180.0;\n    pr = Rotate(p- vec2(0.15, 0.08), vec2(pos.x - r1 / 2., pos.y + he / 2.0), ang);\n    d1 = sdTrapezoid(pr- pos, r1, r2, he);\n\n    r1 = 0.11;\n    p1 = vec2(0.62, 0.46);\n    d2 = sdCircle(p- p1, r1);\n        d1 = differenceSDF(d1, d2);\n    col = DrawFigBorde(vec3(1.0), col, d1);\n    ////mano;\n    float dt,d0;\n    vec2 med;\n    vec3 colc;\n\n    pos = vec2(0.28, 0.23);\n    med = vec2(0.1, 0.3);\n    pr = Rotate(p- pos, med, ang);\n    d0 = sdEllipse(pr- pos, med);\n    colc = vec3(0.95, 0.87, 0.91);\n    col = DrawFigBorde(colc, col, d0);\n    return col;\n}\n\nvec3 camisav2(vec2 p ,vec3 col)\n{    float sd = sdPoly15(p, pt15);   \n    //diferencia a camisa;\n    float r1,r2,he, d1, ang,dt;\n    vec2 pr, pos, med;\n    r1 = 0.15;\n    r2 = 0.055;\n    he = 0.2;\n    pos = vec2(1.51, 1.77);\n    ang = -5.0 * PI / 180.0;\n    pr = Rotate(p, vec2(pos.x - r1 / 2., pos.y + he / 2.), ang);\n    d1 = sdTrapezoid(pr- pos, r1, r2, he);\n    \n    col = DrawFigBorde(vec3(0.0, 0.0, 0.5), col, sd);\n    col = DrawFigBorde(vec3(1.0, 1.0, 1.0), col, d1);\n    return col;\n}\n\nvec3 chicaLoca(vec2 p  ,vec3 col)\n{    col = Pelo(p, col);\n    col = Cuello(p, col);\n    col = Rostro(p, col);\n    col = Cejas(p, col);\n    col = OjoIzq(p, col);\n    col = ojoDer(p, col);\n    col = boca(p, col);\n    col = nariz(p, col);\n    col = BrazoDer(p, col);\n    col = BrazoIzq(p, col);\n    col = camisav2(p, col);\n    return col;\n}\n\n//https://www.shadertoy.com/view/mtyGWy\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    //vec2 uv0=uv;\n    float t=iTime;\n    vec2 uv0=uv*(1.2+0.8*sin(t));\n    uv-=vec2(-0.5,0.75); uv*=1.5;\n    \n\n    float d=sdBox(uv0,vec2(1.0,0.5));\n    vec3 col = palette(d+iTime);\n\td=sin(d*8.0+iTime/8.0);\n\td=abs(d);\n\td=0.5/d;\n\tcol*=d;\n    \n    \n    uv.y=-uv.y;\n    t=t*3.0;\n    \n    if(sin(t)>0.0)\n    col= chicaLoca(uv,col);\n    else\n    col= chicaLoca(vec2(-uv.x+3.0,uv.y),col);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float sdEllipse( in vec2 p, in vec2 ab )\n{\n    p = abs(p); if( p.x > p.y ) {p=p.yx;ab=ab.yx;}\n    float l = ab.y*ab.y - ab.x*ab.x;\n    float m = ab.x*p.x/l;      float m2 = m*m; \n    float n = ab.y*p.y/l;      float n2 = n*n; \n    float c = (m2+n2-1.0)/3.0; float c3 = c*c*c;\n    float q = c3 + m2*n2*2.0;\n    float d = c3 + m2*n2;\n    float g = m + m*n2;\n    float co;\n    if( d<0.0 )\n    {\n        float h = acos(q/c3)/3.0;\n        float s = cos(h);\n        float t = sin(h)*sqrt(3.0);\n        float rx = sqrt( -c*(s + t + 2.0) + m2 );\n        float ry = sqrt( -c*(s - t + 2.0) + m2 );\n        co = (ry+sign(l)*rx+abs(g)/(rx*ry)- m)/2.0;\n    }\n    else\n    {\n        float h = 2.0*m*n*sqrt( d );\n        float s = sign(q+h)*pow(abs(q+h), 1.0/3.0);\n        float u = sign(q-h)*pow(abs(q-h), 1.0/3.0);\n        float rx = -s - u - c*4.0 + 2.0*m2;\n        float ry = (s - u)*sqrt(3.0);\n        float rm = sqrt( rx*rx + ry*ry );\n        co = (ry/sqrt(rm-rx)+2.0*g/rm-m)/2.0;\n    }\n    vec2 r = ab * vec2(co, sqrt(1.0-co*co));\n    return length(r-p) * sign(p.y-r.y);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}