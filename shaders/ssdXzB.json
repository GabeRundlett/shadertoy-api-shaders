{
    "Shader": {
        "info": {
            "date": "1653918607",
            "description": "Mercury",
            "flags": 32,
            "hasliked": 0,
            "id": "ssdXzB",
            "likes": 0,
            "name": "Mercury_LPA",
            "published": 3,
            "tags": [
                "visuals"
            ],
            "usePreview": 0,
            "username": "LabutinPavel",
            "viewed": 175
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (true) {\n        vec2 uv = fragCoord / iResolution.xy;\n        uv.x = min(uv.x, 1. - uv.x);\n        uv.y = min(uv.y, 1. - uv.y);\n\n\n        float m = 0.0015;\n        float k = 20.0;\n        float e = 0.5;\n\n        float s = 0.;\n        for (int i=0;i<30;i++) {\n            vec4 sxy = texelFetch(iChannel0, ivec2(i, 0), 0);\n            float d = pow(distance(uv, sxy.xy) * m, e) * k;\n            s += smoothstep(0.3, 0.001, d);\n        }\n\n        // s = s * s * s;\n        \n        fragColor = vec4(\n            smoothstep(0., 1.0, s * 10.),\n            smoothstep(0., 1.0, s),\n            smoothstep(0., 1.0, s * .2),\n            //smoothstep(1.0, 2.0, s), \n            //smoothstep(0.1, 0.2, s), \n            // smoothstep(1.1, 3.0, s), \n            // smoothstep(1.3, 0.7, s), \n            1.);\n    } else {\n        fragColor = texelFetch(iChannel0, ivec2(fragCoord / 16.), 0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (fragCoord.y > 10.) \n        return;\n    float t = iTime * .005 + 111.1111;\n    vec2 uv = fragCoord / iResolution.xy;\n    ivec2 xy = ivec2(fragCoord);\n    float a =      sin(0.3 + t * 3. * fragCoord.x + t * uv.x * 1000.0) \n            + 2. * cos(t * 5. * fragCoord.x + t * uv.x * 0.7);\n    float b = 2. * sin(1.7 + t * 7. * fragCoord.x + 0.3 + t * uv.x * 0.1) \n                 + cos(t * 9. * fragCoord.x + 0.7 + t * uv.x * 0.7);\n    // fragColor = vec4((a  + 3.) / 6., (b + 3.0) / 6., 0., 0.);\n    fragColor = vec4((a  + 3.) / 8., (b + 3.0) / 8., 0., 0.);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}