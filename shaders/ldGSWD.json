{
    "Shader": {
        "info": {
            "date": "1464614627",
            "description": "Inspired by my coworker's drawing",
            "flags": 0,
            "hasliked": 0,
            "id": "ldGSWD",
            "likes": 38,
            "name": "Ode to Cosine",
            "published": 3,
            "tags": [
                "2d",
                "cosine",
                "drawing",
                "desert",
                "hourglass"
            ],
            "usePreview": 0,
            "username": "s23b",
            "viewed": 1364
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n\nvec4 blend(vec4 c1, vec4 c2) {\n    return vec4(mix(c1.rgb, c2.rgb, c2.a), max(c1.a, c2.a)); \n}\n\nvec4 sky(vec2 uv) {\n    return vec4(mix(vec3(.3, .6, 1.), vec3(.1, .3, .7), uv.y), 1);\n}\n\nvec4 hill(vec2 uv) {\n    return vec4(mix(vec3(.0, .5, .2), vec3(.4, .8, .4), smoothstep(-.2, .3, uv.x + uv.y / 3.)),\n\t\tsmoothstep(uv.y, uv.y + .005, cos(uv.x * 4.) * .2));\n}\n\nvec4 dune(vec2 uv) {\n    return vec4(\n        mix(vec3(.7, .5, .2), vec3(.9, .8, .5), smoothstep(-.2, .3, uv.x + uv.y / 3.)),\n\t\tsmoothstep(uv.y, uv.y + .01, cos(uv.x * 4.) * .2));\n}\n\nvec4 overlay(vec2 uv) {\n    uv = abs(uv);\n    return vec4(vec3(0), step(.85, uv.y) + (1. - smoothstep(uv.x + .57, uv.x + .575, 1. - pow(cos(uv.y * 2.), 4.) / 2.5)));\n}\n\nfloat dunemask(vec2 uv) {\n    if (uv.y > 0.) return 1.;\n    float w = .03;\n    float h = smoothstep(uv.y + .85, uv.y + .855, cos(uv.x * 7.) / 10.);\n    uv.x += cos(uv.y * 10. + iTime * 10.) / 100. * abs(uv.y);\n    return max(smoothstep(-w, -w + .005, uv.x) - smoothstep(w - .005, w, uv.x), h);\n}\n\nvec4 rect(vec2 uv) {\n    uv = abs(uv);\n    return vec4(vec3(.5), uv.x < 1. && uv.y < 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * 2. - 1.;\n    uv.x *= iResolution.x / iResolution.y;\n    \n\tfragColor = sky(uv);\n    \n    fragColor = blend(fragColor, hill(uv - vec2(-.2, -.75)));\n    fragColor = blend(fragColor, hill(uv - vec2(.3, -.7)));\n    \n    vec4 d = dune(uv * 2. + vec2(0, -.9));\n    d = blend(d, dune(uv * 2. + vec2(-.6, -.7)));\n    d = blend(d, dune(uv * 2. + vec2(.5, -.7)));\n    \n    fragColor = blend(fragColor, vec4(d.rgb, min(d.a, dunemask(uv))));\n    \n    fragColor = blend(fragColor, overlay(uv));\n    \n    uv = abs(uv);\n    fragColor = blend(fragColor, rect(uv * vec2(2.1, 40) - vec2(0, 37)));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}