{
    "Shader": {
        "info": {
            "date": "1679386775",
            "description": "Example shader showing UV/Texture tiling, translation, rotation, correct pivoting, aspect ratio correction, implementing a debug view, using inout parameters, using keywords to enable/disable features. ",
            "flags": 0,
            "hasliked": 0,
            "id": "DstSR8",
            "likes": 0,
            "name": "Tile-Offset-Rotate-AR Correction",
            "published": 3,
            "tags": [
                "aspectratio",
                "texture",
                "education",
                "tiling",
                "rotation",
                "texturetiling",
                "inout",
                "texturerotation",
                "educative",
                "keywords",
                "debugview"
            ],
            "usePreview": 0,
            "username": "ParkingLotGames",
            "viewed": 186
        },
        "renderpass": [
            {
                "code": "// It applies correct (at center) pivoting on both fixed and warped aspect ratio\n// mainly because I didn't feel like adding another keyword.\n\n// Aliases\n#define UV fragCoord\n#define FRAG fragColor\n#define ROTMAT rotationMatrix\n#define ROTFAC rotationSpeed\n#define TILFAC tilingFactor\n#define TRANSX translationSpeedX\n#define TRANSY translationSpeedY\n\n// These keywords enable and disable shader features\n#define TILING\n#define ASPECT_RATIO_CORRECTION\n#define AUTOMATIC_ROTATION\n//#define AUTOMATIC_TRANSLATION_X\n//#define AUTOMATIC_TRANSLATION_Y\n//#define DEBUG_VIEW\n\n// Adjustable Variables\nfloat tilingFactor = 5.0;\n// Speed variables control translation/rotation amount if AUTOMATIC keywords are disabled\n// If AUTOMATIC keywords are enabled, they act as a multiplier to iTime\nfloat translationSpeedX = 0.01;\nfloat translationSpeedY = 0.01;\nfloat rotationSpeed = 0.1;\n\n// Helper functions\nmat2 rotationMatrix(in float a) { float c=cos(a), s=sin(a); return mat2(c,s,-s,c); }\nvec2 GET_UV(inout vec2 uv) \n{ \n    #ifdef ASPECT_RATIO_CORRECTION\n    // Pivoting done by subtracting 0.5 before correcting AR\n    uv.xy = ((uv.xy-0.5*iResolution.xy)/iResolution.y);\n    #else\n    // Pivoting done by performing a *2-1 after doing the iResolution thing\n    uv.xy = ((uv.xy/iResolution.xy)*vec2(2.0)-vec2(1.0));\n    #endif\n    \n    #ifdef AUTOMATIC_ROTATION\n    uv *= ROTMAT(iTime*ROTFAC);\n    #else\n    uv *= ROTMAT(ROTFAC);\n    #endif\n    \n    #ifdef TILING\n    uv*=vec2(TILFAC);\n    #endif\n    \n    #ifdef ASPECT_RATIO_CORRECTION\n    uv= uv+0.5;\n    #else\n    uv= uv*0.5+0.5;\n    #endif\n\n    #ifdef AUTOMATIC_TRANSLATION_X\n    uv.x += (TRANSX+iTime);\n    #else\n    uv.x += (TRANSX);\n    #endif\n    \n    #ifdef AUTOMATIC_TRANSLATION_Y\n    uv.y += (TRANSY+iTime);\n    #else\n    uv.y += (TRANSY);\n    #endif\n    return uv;\n}\nvec4 GET_COLOR(inout vec4 frag, vec2 uv) \n{ \n    frag = vec4(1.0);\n    #ifdef DEBUG_VIEW\n    frag.xyz = vec3(uv,0.0);\n    #else\n    frag.xyz = vec3(texture(iChannel0,uv).xyz);\n    #endif\n    return frag;\n}\n\n// Fragment program\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    GET_UV(UV);\n    GET_COLOR(FRAG,UV);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}