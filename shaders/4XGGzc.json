{
    "Shader": {
        "info": {
            "date": "1717966977",
            "description": "The left and right faces are the same color.\nBased on https://x.com/AkiyoshiKitaoka/status/1799723659344637973/photo/1",
            "flags": 0,
            "hasliked": 0,
            "id": "4XGGzc",
            "likes": 16,
            "name": "Lightness optical illusion",
            "published": 3,
            "tags": [
                "color",
                "optical",
                "illusion",
                "trick",
                "lightness"
            ],
            "usePreview": 0,
            "username": "kishimisu",
            "viewed": 350
        },
        "renderpass": [
            {
                "code": "/*\n    The left and right faces are the same color !\n    \n    > Mouse click for visual proof\n    \n    This is an attempt at recreating Akiyoshi Kitaoka's illusion:\n    https://x.com/AkiyoshiKitaoka/status/1799723659344637973/photo/1\n*/\n\n////////////////////////////////////////////\n\n#define FACE_COLOR vec3(0.486, 0.486, 0.486)\n\n////////////////////////////////////////////\n\nfloat ring(vec2 p, float a, float r, float t) {\n    p.x = abs(p.x);\n    p = mat2(sin(a),cos(a),-cos(a),sin(a)) * p;\n    return max(abs(length(p)-r)-t*.5, length(vec2(p.x,max(.0,abs(r-p.y)-t*.5)))*sign(p.x));\n}\n\n#define smix(a, b, t) mix(a, b, smoothstep(.01, .0, t))\n\nvoid mainImage( out vec4 O, in vec2 F ) {\n    vec2 R = iResolution.xy,\n         uv = (F*2. - R.xy) / R.x * 2.;\n    \n    if (iMouse.z > 0.) {\n        // Join the two halves on mouse click\n        uv.x += (1.-iMouse.x/R.x) * sign(uv.x) * 1.2;\n    }\n\n    // Left colors\n    vec3 yellow = vec3(0.380, 0.384, 0.071),\n         orange = vec3(0.380, 0.180, 0.075),\n         brown  = vec3(0.180, 0.075, 0.000),\n         blue   = vec3(0.000, 0.255, 0.482),\n         pink   = vec3(0.494, 0.373, 0.435),\n         black  = vec3(0.004, 0.008, 0.000),\n         white  = vec3(0.486, 0.486, 0.486);\n    \n    // Right colors (â‰ˆ left colors + 0.5)\n    if (uv.x > 0.) {\n        yellow  = vec3(0.847, 0.847, 0.510);\n        orange  = vec3(0.847, 0.592, 0.506);\n        brown   = vec3(0.592, 0.514, 0.486);\n        blue    = vec3(0.482, 0.710, 0.996);\n        pink    = vec3(1.000, 0.831, 0.922);\n        black   = vec3(0.706, 0.706, 0.706);\n        white   = vec3(1);\n    }\n    \n    vec2 muv, uv0 = uv;\n    \n    uv.x = fract(uv.x*.5) * 2. - 1.; // Split space in half\n    uv *= .9;\n    muv = vec2(abs(uv.x), uv.y);\n        \n    /// Draw shapes ///\n    \n    vec3 col = smix(yellow, orange, abs(uv.x) + uv.y); // background + body\n    vec3 glass = smix(blue,  white, abs(uv.x - uv.y + .35) - .03);\n         glass = smix(glass, white, abs(uv.x - uv.y - .05) - .03);\n         \n    col = smix(col, FACE_COLOR, length(uv) - .5); // Draw the two faces with the same color!\n    \n    col = smix(col, brown, ring(uv, -.3, .65, .3));                    // hair\n    col = smix(col, glass, length(muv - vec2(.2,.1)) - .12);           // glasses\n    col = smix(col, black, abs(length(muv - vec2(.2,.1)) - .12)-.003); // glasses frame\n    col = smix(col, black, ring(uv, .3, .11, .01));                    // glasses bridge\n    col = smix(col, black, ring(muv - vec2(.2), .6, .12, .01));        // eyebrows\n    col = smix(col, black, ring(-uv - vec2(.0,.21), .3, .15, .01));    // smile\n    col = smix(col, pink,  length(muv - vec2(0.3, -.15))*.1 - .001);   // cheekbones\n    if (uv0.x < 0.) col = smix(col, black, ring(-uv, .31, .51, .01));  // chin\n    \n    // White borders\n    if (min(abs(uv0.x), 1.-abs(uv.y)) < .05 || abs(uv0.x) > 1.9) col = vec3(1);\n    \n    O = vec4(col, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}