{
    "Shader": {
        "info": {
            "date": "1689847157",
            "description": "GPT CHAT - noise example\n",
            "flags": 0,
            "hasliked": 0,
            "id": "cdjBRy",
            "likes": 0,
            "name": "Perlin Vibes",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "FleshBoy666",
            "viewed": 121
        },
        "renderpass": [
            {
                "code": "// Shadertoy header\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord);\n\n\n\n// Hash function used in Perlin noise\nfloat hash(float x) {\n    return fract(sin(x) * 43758.5453);\n}\n\n// 1D Perlin noise\nfloat noise(float x) {\n    float i = floor(x);\n    float f = fract(x);\n    float u = f * f * (3.0 - 2.0 * f);\n    return mix(hash(i), hash(i + 1.0), u);\n}\n\n// 2D Perlin noise\nfloat noise(vec2 x) {\n    vec2 i = floor(x);\n    vec2 f = fract(x);\n    float a = hash(i.x + i.y * 57.0);\n    float b = hash(i.x + 1.0 + i.y * 57.0);\n    float c = hash(i.x + i.y * 57.0 + 1.0);\n    float d = hash(i.x + 1.0 + i.y * 57.0 + 1.0);\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    return mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Scale the coordinates to the range [-1, 1]\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\n    // Get 2D Perlin noise value\n    float n = noise(uv * 10.0); // You can adjust the scale (10.0) to change the noise frequency\n\n    // Add sine wave distortion using the noise value as an offset\n    float distortionAmount = 0.1; // Adjust the distortion intensity here\n    float sineWaveOffset = sin(uv.x * 20.0 + n * 2.0 * 3.14159) * distortionAmount;\n    uv.y += sineWaveOffset;\n\n    // Remap noise to [0, 1] and output grayscale color based on the noise value\n    fragColor = vec4(vec3(0.5 * (n + 1.0)), 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}