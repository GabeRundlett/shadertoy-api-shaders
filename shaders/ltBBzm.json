{
    "Shader": {
        "info": {
            "date": "1515037464",
            "description": "easy noise clouds",
            "flags": 0,
            "hasliked": 0,
            "id": "ltBBzm",
            "likes": 2,
            "name": "easy clouds",
            "published": 3,
            "tags": [
                "2d",
                "noise",
                "clouds",
                "cloud"
            ],
            "usePreview": 0,
            "username": "SourceW",
            "viewed": 794
        },
        "renderpass": [
            {
                "code": "float hash(vec2 p)\n{\n    p  = 20.0*fract( p*0.3 + vec2(0.9,0.101));\n\n    return -1.0 + 2.0 * fract((p.x + p.y) * p.y * p.x);\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\nfloat fbm( in vec2 p) {\n    float c = 0.0;\n\n    for (float i=1.0;i<10.0;i++) {\n        c+=noise(p*pow(1.5, i))*0.9*pow(0.6, i);\n    }\n    return c;\n}\n\nfloat c(in vec2 p,in float x){\n\np += iTime*0.01;\n    \nreturn fbm(p)*x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n    \n    p.xy += iTime*0.01;\n \n    vec4 clouds = vec4(1.0);\n\n    clouds *= c(p*5.0,fbm(p*5.0));\n    \n\tfragColor = clouds;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}