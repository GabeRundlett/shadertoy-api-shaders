{
    "Shader": {
        "info": {
            "date": "1498753138",
            "description": "Quick sketch inspired by this: https://unsplash.com/search/road?photo=SS5j8KraFP0",
            "flags": 32,
            "hasliked": 0,
            "id": "lsffWl",
            "likes": 25,
            "name": "Drone View",
            "published": 3,
            "tags": [
                "parallax",
                "fake3d"
            ],
            "usePreview": 1,
            "username": "TekF",
            "viewed": 1090
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy - .5;\n\n   \tfloat h = 1.;\n    int layers = 80;\n    float d = 1./float(layers);\n\n    // perspective controls\n    float s = .8;\n    float ss = pow( 1./s, d );\n\n//    while ( h > .0 && texture(iChannel0,uv*s+.5).a < h )\n    for ( int i=0; i < layers; i++ )\n    {\n        if ( texture(iChannel0,uv*s+.5).a >= h )\n            break;\n        s *= ss;//mix(s,1.,ss);\n        h -= d;\n    }\n    \n\tfragColor = texture(iChannel0,uv*s+.5);\n    \n    // some fakey lighting\n    float l = fragColor.a - texture(iChannel0,uv*s+.5+vec2(-1,.5)/iResolution.x).a;\n    l = smoothstep( -.01, .01, l );\n\n    // shadows\n    float shadow = fragColor.a - texture(iChannel0,uv*s+.5+vec2(-.04,.02)).a;\n    shadow = smoothstep( -.1, .0, shadow );\n\n    fragColor.rgb *= mix( vec3(.1,.2,.3), vec3(1.1,1,.9), min(l, shadow) );\n    \n    // gamma correct\n    fragColor.rgb = pow( fragColor.rgb, vec3(1./2.2) );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int speed = int(ceil(iResolution.y/200.));\n    \n    if ( fragCoord.y > iResolution.y-float(speed) )\n    {\n        // generate new data\n\n        int offset = -speed*iFrame;\n        vec2 pos = vec2(0,offset);\n        \n        vec2 uv = (fragCoord-pos)/iResolution.x - .5;\n        float height = texture(iChannel1,uv*1.3).x;\n        vec3 rock = texture(iChannel2,uv*5.).rgb;\n        vec3 col = rock*height*height;\n        \n        float roadX = sin( uv.y )*.3 + sin( uv.y*4. )*.1;\n        float roadDX = cos( uv.y )*.3 + cos( uv.y*4. )*4.*.1;\n        float roadDF = abs((uv.x-roadX) * sqrt(1.-roadDX*roadDX));\n        \n        float grassheight = texture(iChannel1,uv*11.+vec2(-3,3)*uv.yx).x\n            \t\t\t\t+ texture(iChannel1,uv*29.+vec2(3,-3)*uv.yx).x;\n        \n        float rockmask = (height*.7-.2)*smoothstep( .08, .5, roadDF ) + .5*smoothstep( .3, .5, roadDF );\n        float grassheight2 = .02+.04*grassheight;\n        rockmask = max( .0, rockmask-grassheight2 );\n        height = rockmask + grassheight2;\n        height = mix( .0, height, smoothstep( .05,.06, roadDF ) );\n\n        float foliage = smoothstep(.2,1.,height*(1.-rock.z));\n        height += foliage*.05;\n\n        vec3 grasscol = vec3(.05,.3,.05)*mix(rock,vec3(.5),.5);\n        grasscol *= mix( 1., grassheight, .5 );\n        col = mix( col, grasscol, smoothstep(.02,.0,rockmask) );\n        col = mix( col, grasscol*vec3(.6,.8,.8), smoothstep(.0,.2,foliage) );\n        col = mix( col, rock*.03+.02, smoothstep( .06, .05, roadDF ) );\n        col = mix( col, vec3(.8), smoothstep( .004, .002, roadDF )*smoothstep(-.4,-.2,sin(uv.y*100.) ) );\n\n        fragColor.rgb = col;\n        fragColor.a = height;\n    }\n    else\n    {\n\t    // scroll the buffer\n        \n        fragColor = texelFetch(iChannel0,ivec2(int(fragCoord.x),int(fragCoord.y)+speed),0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 45,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}