{
    "Shader": {
        "info": {
            "date": "1649403927",
            "description": "Reproject Web Mercator to Geographic。Web Mercator 投影的特点是靠近极地地方占比大，靠近赤道的地方占比小，所以高纬度的地方看起来就显得面积比较大，比如格陵兰岛和南极洲，或者导致俄罗斯看起来比非洲还大。所以，为了把 Web Mercator 转换为 Geographic（Equirectangular projection），在输入是均匀的 UV 情况下，就需要反过来，导致结果看起来是靠近极地地方占比小，靠近赤道的地方占比大",
            "flags": 0,
            "hasliked": 0,
            "id": "7ljczw",
            "likes": 0,
            "name": "Reproject Web Mercator",
            "published": 3,
            "tags": [
                "webmercator"
            ],
            "usePreview": 0,
            "username": "venus",
            "viewed": 235
        },
        "renderpass": [
            {
                "code": "#define north 1.4844222297453322\n#define south -1.4844222297453322\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 geographicUV = uv;\n\n\n    float sinLatitude = sin(south);\n    float southMercatorY = 0.5 * log((1.0 + sinLatitude) / (1.0 - sinLatitude));\n    \n    sinLatitude = sin(north);\n    float northMercatorY = 0.5 * log((1.0 + sinLatitude) / (1.0 - sinLatitude));\n    float oneOverMercatorHeight = 1.0 / (northMercatorY - southMercatorY);\n\n\n      float fraction = geographicUV.y;\n      float latitude = mix(south, north, fraction);\n      sinLatitude = sin(latitude);\n      float mercatorY = 0.5 * log((1.0 + sinLatitude) / (1.0 - sinLatitude));\n      float mercatorFraction = (mercatorY - southMercatorY) * oneOverMercatorHeight;\n      float webMercatorT = mercatorFraction;\n      vec2 webMercatorUV = vec2(geographicUV.x, webMercatorT);\n\n\n    // Output to screen\n    vec2 click = iMouse.xy / iResolution.xy;\n    uv = uv.x > click.x\n      ? webMercatorUV\n      : geographicUV;\n    float r = texture(iChannel0, uv).r;\n\n    fragColor.rgb = vec3(r);\n    fragColor.a = 1.0;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}