{
    "Shader": {
        "info": {
            "date": "1621214047",
            "description": "Interesting.",
            "flags": 0,
            "hasliked": 0,
            "id": "fsSSWt",
            "likes": 8,
            "name": "Outlandish Fractal",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 164
        },
        "renderpass": [
            {
                "code": "vec2 f(in vec2 z, in vec2 w) { return z * mat2(w.x, -w.y, w.yx); }\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 x = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * 2.0;\n    float time = iTime * 0.25;\n    fragColor = vec4(0.0);\n\n    float w1 = sin(time * 0.25);\n    float w2 = sin(time) * 3.0;\n    float w3 = sin(time) * 2.0;\n    float w4 = cos(time * 0.75);\n    float w5 = sin(time * 0.5);\n    float w6 = 0.125 * sin(iTime);\n\n    for (int n=0; n < 50; n++) {\n        vec2 p = w1 * f(x, f(x, f(x, f(x, x)))) + w2 * f(x, f(x, f(x, x))) + w3 * f(x, f(x, x)) + w4 * f(x, x) + w5 * x + vec2(w6, 0.0);\n        vec2 q = 5.0 * w1 * f(x, f(x, f(x, x))) + 4.0 * w2 * f(x, f(x, x)) + 3.0 * w3 * f(x, x) + 2.0 * w4 * x + vec2(w5, 0.0);\n        x -= f(0.1 * p, 1.0 - q);\n        fragColor.rb += abs(x);\n    }\n\n    fragColor /= 25.0;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}