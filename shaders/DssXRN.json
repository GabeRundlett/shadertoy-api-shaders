{
    "Shader": {
        "info": {
            "date": "1668585339",
            "description": "always use mathematical method by Inigo Quilez and Multiple sampling.",
            "flags": 0,
            "hasliked": 0,
            "id": "DssXRN",
            "likes": 3,
            "name": "Heart exercise 2",
            "published": 3,
            "tags": [
                "heart"
            ],
            "usePreview": 0,
            "username": "yli110",
            "viewed": 145
        },
        "renderpass": [
            {
                "code": "//https://www.youtube.com/watch?v=BFld4EBO2RE&list=RDCMUCdmAhiG8HQDlz8uyekw4ENw&in\n//https://www.bilibili.com/video/BV1Ka411r7yK/?spm_id_from=333.788\n\n#define PI 3.1415926\n#define AA 4\n#define num 5\nvec2 fixUV(in vec2 uv)\n{\n    return (2.*uv.xy-iResolution.xy)/min(iResolution.x,iResolution.y);\n}\n\nvec3 BGColor(in vec2 uv)\n{\n    vec3 color = vec3(0.);\n    vec2 grid = floor(mod(uv,2.));\n    if(grid.x != grid.y) color = vec3(0.45);\n    else color = vec3(0.55);\n    color = mix(color,vec3(0.),smoothstep(1.5*fwidth(uv).x,0.,abs(uv.x)));\n    color = mix(color,vec3(0.),smoothstep(1.5*fwidth(uv).y,0.,abs(uv.y)));\n    return color;\n}\n\nfloat function(in vec2 uv, in float R)\n{\n    float x = 3.*uv.x;\n    float y = uv.y;\n    float r = R+0.5*pow(0.5+0.5*sin(2.*PI*iTime+y/1.),4.);\n    float f = r-x*x;\n    return f;\n}\nfloat functionY(in vec2 uv)\n{\n    float y = 1.2*uv.y-abs(uv.x)*sqrt((20.*abs(uv.x)/15.));\n    y *= 9.*y;\n    return y;\n}\n\nfloat plot(vec2 uv){\n    float fY = functionY(uv);\n    float fuc = function(uv,1.);\n    float plotline = 0.;\n    for(int i=0;i<num;i++)\n    {\n        float fuc = function(uv,1.-1.0/float(num)*float(i));\n        float line = smoothstep( fuc-0.01, fuc, fY);\n        float mark = (-step(sign(mod(float(i),2.)),0.)+step(1.,sign(mod(float(i),2.))));\n        plotline = line-plotline*pow(mark,2.);\n    }\n  return  plotline;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fixUV(fragCoord);\n    uv *=3.;\n    vec3 colorbg = BGColor(uv);\n    //Multiple sampling\n    float count = 0.;\n    for(int i = 0;i<AA;i++)\n    {\n        for(int j = 0;j<AA;j++)\n        {\n            vec2 offset = (vec2(float(i),float(j))-0.5*float(AA))/float(AA) *2.;\n            count += plot(fixUV(fragCoord+offset));\n        }\n    }\n    if(count > float(AA*AA)/2.) count = float(AA*AA) - count;\n    count = count *2.0 / float(AA*AA);\n    vec3 colorfinal = mix(colorbg,vec3(1.0, 1.0, 1.0),count);\n    fragColor = vec4(colorfinal,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}