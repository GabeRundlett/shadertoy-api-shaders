{
    "Shader": {
        "info": {
            "date": "1709563467",
            "description": "WASD to move, R to reset.\n\nJust a simple snake :)",
            "flags": 48,
            "hasliked": 0,
            "id": "lXsSDN",
            "likes": 11,
            "name": "Automata Snake",
            "published": 3,
            "tags": [
                "game",
                "interactive",
                "snake",
                "automata"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 197
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 o, vec2 u )\n{   \n    // centre and scale coordinates\n    u = .1 * (u-res/2.) + res/2.;\n    \n    // read value from buffer\n    o = cell().aaaa;\n    \n    // make tail pink\n    if (o.a == 1.) o.g = 0.;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// move every N frames (N > 1)\n#define N 2\n// tail length\n#define L 35.\n\n#define res iResolution.xy\n\n// Thanks to elenzil: \n// https://www.shadertoy.com/view/DscGRH\n#define W 87\n#define S 83\n#define A 65\n#define D 68\n#define R 82\n#define key(val) texelFetch(iChannel1, ivec2(val, 0), 0).x == 1.\n\n#define up    vec2( 0,  1)\n#define down  vec2( 0, -1)\n#define left  vec2(-1,  0)\n#define right vec2( 1,  0)\n#define cell(offset) texelFetch(iChannel0, ivec2(offset + u), 0)",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "// o = (x, y, 0, a)\n// x, y store direction (up, down, left, right)\n// a stores off/on/head value (0,1,2)\n\nvoid mainImage( out vec4 o, vec2 u )\n{\n    // initialize \n    if (iFrame == 0 || key(R)) {\n        vec2 p = ceil(res/2.) - .5;\n                \n        // head\n        if (u == p)\n            o = vec4(right, 0, 2);\n        // tail\n        else if (u.y == p.y && u.x >= p.x - L && u.x < p.x)\n            o = vec4(right, 0, 1); \n        // background\n        else \n            o = vec4(0);\n    } \n    // update\n    else {\n        o = cell();\n\n        // every N frames, shift snake along\n        if (iFrame % N == 0) {\n            // set new head\n            if (o.a == 0.) {\n                if (cell(down) == vec4(up, 0, 2))\n                    o = vec4(up, 0, 2);\n                else if (cell(up) == vec4(down, 0, 2))\n                    o = vec4(down, 0, 2);\n                else if (cell(right) == vec4(left, 0, 2))\n                    o = vec4(left, 0, 2);\n                else if (cell(left) == vec4(right, 0, 2))\n                    o = vec4(right, 0, 2);\n            }\n            // remove tail\n            else if (o.a == 1.) {\n                // (is tail if no body part points to this cell)\n                if (cell(down)  != vec4(up,    0, 1) &&\n                    cell(up)    != vec4(down,  0, 1) &&\n                    cell(right) != vec4(left,  0, 1) &&\n                    cell(left)  != vec4(right, 0, 1))\n                o.a = 0.;\n            }\n            // set old head to become body\n            else if (o.a == 2.)\n                o.a = 1.;\n        } \n        // update head direction (when snake isn't shifting)\n        else if (o.a == 2.) {\n            if      (key(W) && cell(up).a    == 0.) o.xy = up;\n            else if (key(S) && cell(down).a  == 0.) o.xy = down;\n            else if (key(A) && cell(left).a  == 0.) o.xy = left;\n            else if (key(D) && cell(right).a == 0.) o.xy = right;\n        }\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}