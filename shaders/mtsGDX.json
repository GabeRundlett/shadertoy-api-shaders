{
    "Shader": {
        "info": {
            "date": "1672598617",
            "description": "Moving grids of various colours, can be rotated",
            "flags": 0,
            "hasliked": 0,
            "id": "mtsGDX",
            "likes": 2,
            "name": "Glacing Blow",
            "published": 3,
            "tags": [
                "rainbow"
            ],
            "usePreview": 0,
            "username": "fragcula",
            "viewed": 131
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    float g_top = smoothstep(0.6, 1.0, uv.y);\n    float g_bot = smoothstep(0.4, 0.0, uv.y);\n    vec4 h_top = (mod((uv.x + iTime/10.0) * 100.0, 5.0) <= 0.1)? vec4(col,1.0) : vec4(0.0,0.0,0.0,1.0);\n    vec4 h_bot = (mod((uv.x - iTime/10.0) * 100.0, 5.0) <= 0.1)? vec4(col,1.0) : vec4(0.0,0.0,0.0,1.0);\n    vec4 v_top = (mod((uv.y + uv.x/10.0) * 100.0, 5.0) <= 0.1)? vec4(col,1.0) : vec4(0.0,0.0,0.0,1.0);\n    vec4 v_bot = (mod((uv.y + uv.x/10.0)* 100.0, 5.0) <= 0.1)? vec4(col,1.0) : vec4(0.0,0.0,0.0,1.0);\n    fragColor = g_top * (h_top + v_top) + g_bot * (h_bot + v_bot);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}