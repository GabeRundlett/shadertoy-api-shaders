{
    "Shader": {
        "info": {
            "date": "1641398732",
            "description": "My participation to genuary 2022",
            "flags": 0,
            "hasliked": 0,
            "id": "7lVXWK",
            "likes": 15,
            "name": "Genuary 2022 - Day1",
            "published": 3,
            "tags": [
                "generative",
                "genuary",
                "2022",
                "10000"
            ],
            "usePreview": 0,
            "username": "z0rg",
            "viewed": 348
        },
        "renderpass": [
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\n#define sat(a) clamp(a, 0., 1.)\nfloat time;\n\nfloat _sqr(vec2 uv, vec2 s)\n{\n    vec2 l = abs(uv)-s;\n    return max(l.x, l.y);\n}\n\nfloat _shape(vec2 uv, float s, float id)\n{\n    return mix(_sqr(uv, vec2(s)), length(uv)-s, 5.*sin(time+id)); \n}\n\nvec3 rdr(vec2 uv)\n{\n    float sharp = iResolution.x*.75;\n    vec3 col = vec3(0.);\n    \n    vec2 rep = vec2(.005);\n    vec2 id = floor((uv+rep*.5)/rep);\n    \n    uv = mod(uv+rep*.5,rep)-rep*.5;\n    \n    float shape = _shape(uv, .001, id.x*.1+id.y*sin(time+id.x*.01)*.5);\n    if (abs(id.x) < 50. && abs(id.y) < 50.)\n        col = mix(col, vec3(1.), 1.-sat(shape*sharp));\n    \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    time = iTime;\n    float off = sin(iTime)*.2;\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.xx;\n\n    vec3 col = vec3(0.);\n    col.x = rdr(uv).x;\n    time = iTime+off;\n    col.y = rdr(uv).y;\n    time = iTime+off*2.;\n    col.z = rdr(uv).z;\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}