{
    "Shader": {
        "info": {
            "date": "1657729427",
            "description": "Just add this Common to motion blur any shader (simple dithering with procedural white noise. bluenoise would be better but requires setting a texture. ).\n\nPseudo-bluenoise variant",
            "flags": 0,
            "hasliked": 0,
            "id": "7dGfzW",
            "likes": 9,
            "name": "blue motionblur existing shaders",
            "published": 3,
            "tags": [
                "motionblur",
                "sampling",
                "bluenoise",
                "tuto"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 342
        },
        "renderpass": [
            {
                "code": "// pseudo-bluenoise variant of https://shadertoy.com/view/NdGfzz\n\n#define hue(v)  ( .6 + .6 * cos( 6.3*(v)  + vec4(0,23,21,0)  ) )  // https://www.shadertoy.com/view/ll2cDc\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2  R = iResolution.xy, P,\n          U = ( 2.*u - R ) / R.y;\n    \n    float t = iTime;\n    O-=O;\n    for(float i=0.; i<1.; i+=.1) {                                // --- drawing balls\n       t *= 1.2;\n       P = vec2( 1.2*cos(2.*t), .8*sin(3.1*t) );     \n       O += smoothstep(3./R.y, 0., length(P-U) - .15 ) * hue(i);\n   }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// pseudo-bluenoise from https://www.shadertoy.com/view/7sGBzW\n\n#define iTime ( iTime + blue(gl_FragCoord.xy)* iTimeDelta )\n\n#define H(p)  fract(sin(mod(dot(p, vec2(12.9898, 78.233)),6.283)) * 43758.5453)\n\n#define blue(p) (  \\\n          (  H(p+vec2(-1,-1)) + H(p+vec2(0,-1)) + H(p+vec2(1,-1))  \\\n           + H(p+vec2(-1, 0)) - 8.* H( p )      + H(p+vec2(1, 0))  \\\n           + H(p+vec2(-1, 1)) + H(p+vec2(0, 1)) + H(p+vec2(1, 1))  \\\n          ) *.5/9. *2.1 +.5 )",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}