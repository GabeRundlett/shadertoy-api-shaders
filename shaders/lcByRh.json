{
    "Shader": {
        "info": {
            "date": "1721909116",
            "description": "Bad pun, sorry lol",
            "flags": 0,
            "hasliked": 0,
            "id": "lcByRh",
            "likes": 2,
            "name": "Sinus Infection",
            "published": 3,
            "tags": [
                "neon",
                "sinewave"
            ],
            "usePreview": 0,
            "username": "Funtime_UwU",
            "viewed": 73
        },
        "renderpass": [
            {
                "code": "const float PI   = 3.1415926535;\nconst float PI_2 = 1.5707963267;\n\nconst float timeTravel = 1.5;\nconst float yMulti = 8.88;\nconst vec2 fadeBoundaries = vec2(0.035, 1.9);\nconst float minimumColor = 0.0;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float x = uv.x * PI * 3.0;\n    float y = (uv.y-0.5)*yMulti;\n    float time = iTime;\n    time *= timeTravel;\n    x += time * timeTravel;\n    float sineX = sin(x);\n    float fadingWave = smoothstep(fadeBoundaries.x, fadeBoundaries.y, abs(sineX-y));\n    float c = fadingWave;\n    c = 0.01 / c;\n    //c = 0.99 - c;\n    c += 0.000001;\n    float rgbX = x + (time) * abs(cos(0.03*time)); \n    vec3 rgb = vec3(sin(rgbX*0.2+time)+cos(rgbX*0.4), clamp(cos(rgbX*0.5), 0.0, 0.7), smoothstep(0.2, 1.0, sin(rgbX)+cos(rgbX+time*0.5)));\n    bool isblack = true;\n    for (int i = 0; i < 3; i+=1)\n    { \n        int j = i;\n        if (rgb[j] > minimumColor)\n        { \n            isblack = false;\n        }\n    }\n    if (isblack) \n    { \n        float random=abs(0.5*sin(rgbX))+abs(0.5*sin(rgbX-PI_2));\n        rgb[0] = minimumColor*random;\n        rgb[2] = minimumColor*(1.0-random);\n    }\n    float alpha = 0.88;\n    rgb = pow(rgb, vec3(2.0));\n    vec4 color = vec4(c*rgb.r, c*rgb.g, c*rgb.b, alpha);\n    color = 1.0-exp(0.001-color);\n    fragColor = color;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}