{
    "Shader": {
        "info": {
            "date": "1493302793",
            "description": "MosaicBall",
            "flags": 0,
            "hasliked": 0,
            "id": "4dByRd",
            "likes": 3,
            "name": "MosaicBall",
            "published": 3,
            "tags": [
                "ball",
                "mosaic"
            ],
            "usePreview": 0,
            "username": "CiaoLee",
            "viewed": 550
        },
        "renderpass": [
            {
                "code": "float PI = 3.14159265354;\nmat3 rotateMat;\n\nmat3 rotateMatrix(vec2 angle){\n\tvec2 sint = sin(angle);\n    vec2 cost = cos(angle);\n    mat3 resultMatrix;\n    resultMatrix = mat3(\n        cost.y,0,-sint.y,\n        sint.y*sint.x,cost.x,cost.y*sint.x,\n        sint.y*cost.x,-sint.x,cost.y*cost.x\n    );\n    return resultMatrix;\n}\n\n\nvec4 ssample(vec2 p){\n    \tvec4 result;\n\t if(length(p)<1.0){\n        vec3 normal =rotateMat*vec3(p, sqrt(1.0-dot(p,p)));\n        vec2 theta = vec2(acos(normal.z),atan(normal.y,normal.x))/PI;\n        vec2 fractuv = vec2(fract(theta*vec2(30,30)));\n        float radius = 0.45;\n        radius =ceil(theta.x*30.0)/45.0;\n        if(length(fractuv-0.5)<radius){\n       \t\t result = vec4(1.0,1.0,1.0,1.0);\n        }else{\n          \t result = vec4(0.0,0.0,0.0,1.0);\n        }\n    }\n    else\n        result = vec4(1.0,1.0,1.0,1.0);\n    return result;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 p = (uv-0.5)*vec2(2.0*iResolution.x/iResolution.y,2.0);\n    rotateMat = \n        rotateMatrix(vec2(iMouse.yx/iResolution.yx)*\n                     vec2(PI,-2.0*PI)+vec2(PI*-0.5,PI*0.5));\n    \n    vec4 tempSample = vec4(0.0,0.0,0.0,0.0);\n    for(int x =-2;x<=2;x++){\n        for(int y =-2;y<=2;y++){\n        \ttempSample+=ssample(p+vec2(x,y)/(2.0*iResolution.xx));\n        }\n    }\n    fragColor = tempSample/25.0;\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}