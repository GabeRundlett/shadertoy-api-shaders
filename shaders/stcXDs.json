{
    "Shader": {
        "info": {
            "date": "1640030255",
            "description": "Solving the heat difference equation (NOT differential equation).",
            "flags": 0,
            "hasliked": 0,
            "id": "stcXDs",
            "likes": 8,
            "name": "1D Discrete Heat Flow",
            "published": 3,
            "tags": [
                "heat",
                "pde",
                "differences"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 229
        },
        "renderpass": [
            {
                "code": "// See https://www.desmos.com/calculator/bqmdhati2x\n\n//#define DISCRETE_TIME\n\n#define PI 3.1415926536\n#define QT 0.7071067812 // cos(Ï€/4)\n\n// Safer pow(a, t)\nfloat expn(in float a, in float t) {\n    if (abs(t) < 1e-10) return 1.0;\n    return pow(abs(a), t) * (a < 0.0 ? cos(PI * t) : 1.0);\n}\n\n// abs(4.0 - mod(n, 8.0))\nfloat tri(in float n, in float t, in float k) {\n    float h = 2.0;\n    h += 0.8535533906 * cos(0.25 * PI * n) * expn(1.0 + (QT - 1.0) * k, t);\n    h += 0.1464466094 * cos(0.75 * PI * n) * expn(1.0 - (QT + 1.0) * k, t);\n    h += 0.1464466094 * cos(1.25 * PI * n) * expn(1.0 - (QT + 1.0) * k, t);\n    h += 0.8535533906 * cos(1.75 * PI * n) * expn(1.0 + (QT - 1.0) * k, t);\n    return h;\n}\n\n// 4.0 * mod(floor(n / 4.0), 2.0)\nfloat square(in float n, in float t, in float k) {\n    float h = 2.0;\n    h += 1.3065629649 * cos(0.25 * PI * n + 1.9634954085) * expn(1.0 + (QT - 1.0) * k, t);\n    h += 0.5411961001 * cos(0.75 * PI * n + 2.7488935719) * expn(1.0 - (QT + 1.0) * k, t);\n    h += 0.5411961001 * cos(1.25 * PI * n - 2.7488935719) * expn(1.0 - (QT + 1.0) * k, t);\n    h += 1.3065629649 * cos(1.75 * PI * n - 1.9634954085) * expn(1.0 + (QT - 1.0) * k, t);\n    return h;\n}\n\n// mod(n, 4.0)\nfloat saw(in float n, in float t, in float k) {\n    float h = 1.5;\n    h -= 0.7071067812 * cos(0.5 * PI * n - 0.7853981634) * expn(1.0 - k, t);\n    h -= 0.7071067812 * cos(1.5 * PI * n + 0.7853981634) * expn(1.0 - k, t);\n    h -=  0.5 * cos(PI * n) * expn(1.0 - 2.0 * k, t);\n    return h;\n}\n\n// f(0) = 1.55, f(1) = 2.66, f(2) = 2.51, f(3) = 1.94,\n// f(4) = 3.88, f(5) = 2.57, f(6) = 2.42, f(7) = 0.00\nfloat custom(in float n, in float t, in float k) {\n    float h = 2.19125;\n    h += 0.4931253070 * cos(0.25 * PI * n - 2.7445711841) * expn(1.0 + (QT - 1.0) * k, t);\n    h += 0.2111854791 * cos(0.75 * PI * n - 2.2203501522) * expn(1.0 - (QT + 1.0) * k, t);\n    h += 0.2111854791 * cos(1.25 * PI * n + 2.2203501522) * expn(1.0 - (QT + 1.0) * k, t);\n    h += 0.4931253070 * cos(1.75 * PI * n + 2.7445711841) * expn(1.0 + (QT - 1.0) * k, t);\n    h += 0.4159721295 * cos(0.50 * PI * n - 1.4199747323) * expn(1.0 - k, t);\n    h += 0.4159721295 * cos(1.50 * PI * n + 1.4199747323) * expn(1.0 - k, t);\n    h += 0.39875 * cos(PI * n) * expn(1.0 - 2.0 * k, t);\n    return h;\n}\n\n//float f(in float x) { return abs(mod(x, 8.0) - 4.0); }\n//#define once(n, k) (f(n) + ((f(n - 1.0) + f(n + 1.0)) / 2.0 - f(n)) * k)\n//#define twice(n, k) (once(n, k) + ((once(n - 1.0, k) + once(n + 1.0, k)) / 2.0 - once(n, k)) * k)\n//#define thrice(n, k) (twice(n, k) + ((twice(n - 1.0, k) + twice(n + 1.0, k)) / 2.0 - twice(n, k)) * k)\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.x * 8.0;\n    float unit = 8.0 / iResolution.y;\n    fragColor = vec4(0.0);\n\n    #ifdef DISCRETE_TIME\n    float time = floor(iTime);\n    #else\n    float time = iTime;\n    #endif\n\n    float height = custom(floor(uv.x), time, 0.25);\n    fragColor.rb += mix(vec2(0.0, 1.0), vec2(1.0, 0.0), height / 4.0) * step(uv.y, height);\n\n    fragColor += smoothstep(unit, 0.0, abs(mod(uv.x + 0.5, 1.0) - 0.5));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}