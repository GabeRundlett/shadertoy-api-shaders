{
    "Shader": {
        "info": {
            "date": "1556878399",
            "description": "Demostration of how raymarching works.",
            "flags": 0,
            "hasliked": 0,
            "id": "wtXGRj",
            "likes": 13,
            "name": "Raymarching concept",
            "published": 3,
            "tags": [
                "raymarching",
                "concept"
            ],
            "usePreview": 0,
            "username": "Txoka",
            "viewed": 468
        },
        "renderpass": [
            {
                "code": "const int STEPS=23;\n\nconst float smooth_pixels=3.;\nconst float thickness_pixels=0.1;\n    \nfloat dot2(vec2 p, vec2 q){\n\tp-=q;\n    return dot(p,p);\n}\nfloat circle(vec2 p,vec2 c,float r){\n\treturn length(p-c)-r;\n}\nfloat box( vec2 p,vec2 s, vec2 b){\n    p-=s;\n    vec2 d = abs(p) - b;\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\nfloat dist(vec2 p){\n\tfloat c0=circle(p,vec2(-1.,0.1),0.6);\n    float c1=circle(p,vec2(1,0.7),0.14);\n    float b=box(p,vec2(1.,-0.6),vec2(0.5,0.8));\n    return min(c1,min(c0,b));\n}\nfloat circ(vec2 p,vec2 c,float r,float w,float sf){\n\treturn smoothstep(w+sf,w,abs(length(p-c)-r+w+sf));\n}\nfloat cut(float x){\n\treturn clamp(x,0.,1.);\n}\nfloat line(vec2 p,vec2 p2,vec2 uv,float w,float sf){\n    vec2 n=uv-p;\n\tvec2 k=p2-p;\n\treturn smoothstep(w+sf,w,length(n-k*clamp(dot(n,k)/dot(k,k),0.,1.)));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y;\n    float sf=smooth_pixels/iResolution.y;\n    float w=thickness_pixels/iResolution.y;\n    \n    vec2 ro=vec2(-1.4,-0.9); //ray origin\n    vec2 rd=normalize(vec2(5,3));\n    \n    float t=mod(iTime*4.,float(2*STEPS));\n    \n\tvec3 col=vec3(0);\n    col+=0.0001/dot2(uv,ro)*vec3(-1,1,1);\n    col+=smoothstep(sf,0.,dist(uv));\n    \n    float d;\n    vec2 p=ro;\n    vec2 j;\n    for(int i=1;i<=STEPS;i++){\n\t\td=dist(p);\n    \tcol+=circ(uv,p,d*cut(t-float(i*2-2)),w,sf)*vec3(1,0,0);\n        j=rd*cut(t-float(i*2-1));\n        p+=j*d;\n    }\n    p-=rd*(w+sf);\n    col+=line(ro,p,uv,w,sf);\n    \n    \n    fragColor=vec4(col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}