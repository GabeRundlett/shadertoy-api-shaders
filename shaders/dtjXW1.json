{
    "Shader": {
        "info": {
            "date": "1676027704",
            "description": "dots circle move\nReference https://www.shadertoy.com/view/MtcXRB",
            "flags": 0,
            "hasliked": 0,
            "id": "dtjXW1",
            "likes": 4,
            "name": "dots mouse move",
            "published": 3,
            "tags": [
                "2d",
                "dots"
            ],
            "usePreview": 0,
            "username": "jsweetpotato",
            "viewed": 235
        },
        "renderpass": [
            {
                "code": "#define COLORED 1\nfloat Circle(vec2 uv,vec2 position, float blur, float size){\n    float d = length(uv - position);\n    float c = smoothstep(size, size-blur, d);\n    return c;\n}\n\nfloat remap01(float a, float b, float t){\n    return (t-a) / (b-a);\n}\n\nfloat remap(float a, float b,float c, float d, float t){\n    return remap01(a, b, t) * (d-c) + c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float asp = iResolution.x / iResolution.y;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= asp;    \n    vec2 mUv = iMouse.xy/iResolution.xy;\n    \n\n    \n    float circle = Circle(uv, vec2(mUv.x*asp,mUv.y), .5, .5);\n    \n\tvec2 center = floor(fragCoord/16.0)*16.0 + 8.0;    \n    vec3 col = vec3(0.9,1.,.7)*circle;\n    float l = max(0.1, dot(col, vec3(0.2125, 0.7154, 0.0721)));\n    float dist = distance(center,fragCoord)/8.0;\n    float alpha = smoothstep(1.0, 0.7, dist/l);\n    #if defined COLORED\n    \tfragColor.rgb = col.rgb * alpha;\n    #else\n    \tfragColor.rgb = vec3(alpha);\n    #endif\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}