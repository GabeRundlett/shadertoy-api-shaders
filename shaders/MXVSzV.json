{
    "Shader": {
        "info": {
            "date": "1720267417",
            "description": "Quick attempt at metablobs.\n",
            "flags": 0,
            "hasliked": 0,
            "id": "MXVSzV",
            "likes": 1,
            "name": "Metablob test",
            "published": 3,
            "tags": [
                "oldschool"
            ],
            "usePreview": 0,
            "username": "antireality",
            "viewed": 110
        },
        "renderpass": [
            {
                "code": "// A few options to play with\n#define speed 0.1\n#define delay 2.0\n#define BallCount 32.0\n\n#define ballSize 52.0\n#define drawThreshold 0.1\n\n#define xScale 1.0\n#define yScale 2.25\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Scale coordinate system so that it always matches the preview\n    // (otherwise the effect breaks when you switch resolutions)\n    vec2 scaledCoord = (fragCoord/iResolution.xy)*vec2(800.0,450.0);\n\n    // Set default for it there is no blob at this point\n    float accumulator = 0.0f;\n    fragColor = vec4(0.0f,0.0f,fragCoord.y/iResolution.y,1.0f);\n    \n    // Iterate through the balls and accumulate their effect on this pixel\n    for(float i=0.0; i<BallCount; i+= 1.0)\n    {\n        // Figure out the ball position\n        vec2 position;\n        float offset = ((iTime*speed)+(i*delay));\n        position.x = (sin(offset*xScale)*(400.0-ballSize))+(400.0);\n        position.y = (cos(offset*yScale)*(225.0-ballSize))+(225.0);\n    \n        // Get distance from current pixel being drawn\n        float distance = (abs(scaledCoord.x - position.x)*abs(scaledCoord.x - position.x)) +\n                         (abs(scaledCoord.y - position.y)*abs(scaledCoord.y - position.y));\n        \n        // Accumulate the effect of this pixel\n        accumulator += (1.0/distance)*ballSize;\n    }\n    \n    // Set the blob colour if we pass the threshold\n    if(accumulator >= drawThreshold)\n    {\n        fragColor = vec4(0.5f,fragCoord.y/iResolution.y,1.0f,1.0f);\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}