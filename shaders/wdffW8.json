{
    "Shader": {
        "info": {
            "date": "1588125793",
            "description": "https://www.youtube.com/watch?v=0ifChJ0nJfM\n\nI also added a simple sun with day/night cycle, and made the leaves wobble a bit.",
            "flags": 0,
            "hasliked": 0,
            "id": "wdffW8",
            "likes": 2,
            "name": "Tutorial Tree",
            "published": 3,
            "tags": [
                "tutorial",
                "tree"
            ],
            "usePreview": 0,
            "username": "CraftedCart",
            "viewed": 398
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float ratio = iResolution.x / iResolution.y;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    uv.x *= ratio;\n    vec2 treeOffset = uv - vec2(0.33, 0.7);\n\n    // Make a sky gradient, blue at the top, pink at the bottom\n    vec3 col = mix(vec3(0.969, 0.659, 0.722), vec3(0.333, 0.804, 0.988), pow(uv.y, 1.0 / 1.4));\n\n    // Make a sun and day/night cycle\n    float sunDist = length(uv - vec2(sin(iTime * 0.2) + (ratio * 0.5), cos(iTime * 0.2) - 0.2)) * 0.7;\n    col += vec3(1.0, 1.0, 1.0) * (0.5 - sunDist);\n\n    // Make leaves\n    const float LEAF_COUNT = 10.0;\n    float leafSize = 0.1 + sin(iTime) * 0.01;\n    float radius = 0.2 + (leafSize * cos(atan(treeOffset.y, treeOffset.x) * LEAF_COUNT + (20.0 * treeOffset.x + 1.0 + cos(iTime * 0.8))));\n    col *= smoothstep(radius, radius + 0.01, length(treeOffset));\n\n    // Make a tree trunk\n    float treeTrunkWidth = 0.015;\n    treeTrunkWidth += 0.002 * cos(120.0 * treeOffset.y); // Make the trunk wobbly\n    treeTrunkWidth += exp(-40.0 * uv.y); // Make the trunk smoothly grow to make the ground\n    col *= 1.0 -\n        (\n         1.0 -\n         smoothstep(\n             // Define the width of the trunk\n             treeTrunkWidth,\n             treeTrunkWidth + 0.002,\n\n             // Vary the X position of the trunk depending on the Y position, to curve the trunk\n             abs(treeOffset.x - (0.2 * sin(2.0 * treeOffset.y)))\n             )\n        ) *\n        // Make the trunk end where the leaves start\n        (\n         1.0 -\n         smoothstep(0.0, 0.01, treeOffset.y)\n        );\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}