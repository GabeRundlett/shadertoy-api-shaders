{
    "Shader": {
        "info": {
            "date": "1608640733",
            "description": "You may move the mouse horizontally to scale down the roses.\nYou can also change the constant values in the program to explore other variations.",
            "flags": 0,
            "hasliked": 0,
            "id": "3lcyR7",
            "likes": 1,
            "name": "Sliding Rose curves",
            "published": 3,
            "tags": [
                "curve",
                "polarcoordinates",
                "rose",
                "generativeart",
                "creativecoding",
                "sliding"
            ],
            "usePreview": 0,
            "username": "AI",
            "viewed": 290
        },
        "renderpass": [
            {
                "code": "//function to slide shapes\nvec4 moveShapes(vec2 st, float scale, float speed){\n    st *= scale;\n    float time = iTime*speed;\n    if( fract(time)>0.5 ){\n        if (step(1.,mod(st.y,2.))>0.){\n            st.x += 2.*fract(time);\n        } else {\n            st.x -= 2.*fract(time);\n        }\n    } else {\n        if (step(1.,mod(st.x,2.))>0.){\n            st.y += 2.*fract(time);\n        } else {\n            st.y -= 2.*fract(time);\n        }\n    }\n    return vec4(fract(st),floor(st));\n}\n\n//the Rose curve\nfloat rose(vec2 st){\n    float gray;\n    vec2 pos = st-vec2(0.5);\n    float r =(2.+.5*sin(iTime))*length(pos);\n    float a = atan(pos.y,pos.x);\n    float f =abs(cos(a*(1.+mod(5.+5.*sin(iTime),11.))))*.7+.1;\n\tgray=smoothstep(f-.5,f,r)-smoothstep(f,f+0.5,r);\n    return gray;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec3 color = vec3(0.0);\n\t//set the number of shapes by the value of scale\n    float scale=6.+10.*iMouse.x/iResolution.x;\n    //set the speed of sliding\n    float speed=.5;\n    vec4 uvij = moveShapes(uv,scale,speed);\n    float shape=rose(uvij.xy);\n    //flag is used to alternate colors\n   float flag=mod(uvij.z+uvij.w,2.);\n    color = shape*vec3(1.,flag,flag);\n\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}