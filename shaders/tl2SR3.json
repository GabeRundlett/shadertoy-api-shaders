{
    "Shader": {
        "info": {
            "date": "1566652408",
            "description": "We shouldn't dignify yellow with the status as one of the primary colors, as -- all things being relative -- yellow is rather the absence of the primary color blue.",
            "flags": 0,
            "hasliked": 0,
            "id": "tl2SR3",
            "likes": 6,
            "name": "Additive and Subtractive Colour",
            "published": 3,
            "tags": [
                "color",
                "additive",
                "mixing",
                "subtractive"
            ],
            "usePreview": 0,
            "username": "TimoKinnunen",
            "viewed": 917
        },
        "renderpass": [
            {
                "code": "//////////////////////////////\n// Additive and Subtractive Color Mixing\n// by Timo Kinnunen 2019\n//\n// This shader recreates an image, which was created by user 4edges, used on Wikiversity:\n// https://commons.wikimedia.org/wiki/File:Subtractive-Additive-Colour-Mixing.jpg\n//\n// Licensed under the Creative Commons Attribution-Share Alike 3.0 Unported license.\n// \n\n#define R (iResolution.xy)\nfloat to3D(vec4 f) {return f.x * (f.y + 0.3f) * (f.z + 0.3f) * 2.0f;}\nfloat chr1(vec2 textPos,int c) {\n    vec2 uv = 0.0625*(clamp(textPos,0.,1.)+vec2(c - c / 16 * 16 , 15 - c / 16 ));\n    return to3D(texture(iChannel0,uv));\n}\nfloat chr2(vec2 textPos, int c) {\n\tvec2 uv = ((clamp(textPos, 0., 1.)/ 16.)+ fract((floor(vec2(c, 15.999 - float(c) / 16.))/ 16.)));\n    return to3D(texture(iChannel0, uv));\n}\nfloat chr3(vec2 textPos, int c) {\n    return any(lessThan(vec4(textPos, 1, 1), vec4(0, 0, textPos)))? 0.0:\n    to3D(texture(iChannel0,0.0625* (textPos+ vec2(c- c/ 16* 16, 15- c/ 16))));\n}\nvec2 pR(vec2 p, float a) {\n    p = ((cos(a)* p)+ (sin(a)* vec2(p.y, -p.x)));\n    return p;\n}\nvec4 blend(vec4 a, vec4 b, float alpha) {\n    const float THRESHOLD = 0.1875;\n    vec4 c=vec4(a.rgb*a.a+b.rgb*b.a,max(a.a,b.a));\n    vec4 d=vec4(a.rgb*(1.-b.rgb*(b.a)),max(a.a,b.a));\n    float f = smoothstep(-THRESHOLD,THRESHOLD,alpha);\n    return f==0.?c:f==1.?d:mix(c,d,f);\n}\nvoid mainImage(out vec4 O, vec2 U) {\n    vec2 uv = (2.*U-R)/R.y;\n    float left = uv.x;\n    \n    const float SCALE = 10.;\n    vec2 p = uv;\n    p.x+= ((left<0.)?1.:-1.)*0.5*R.x/R.y;\n    p*=SCALE;\n    \n    vec4 bg = blend(vec4(0,0,0,1), vec4(1,1,1,1), -left);\n    vec4 fg = blend(vec4(1,1,1,1), vec4(0,0,0,1), -left);\n    vec4 col = bg;\n\n    vec4 col1 = vec4(1,0,0,clamp((4.-distance(p,vec2(0,1)+pR(vec2(2),radians(315.))))*R.y/(SCALE*4.),0.,1.));\n    vec4 col2 = vec4(0,1,0,clamp((4.-distance(p,vec2(0,1)+pR(vec2(2),radians(435.))))*R.y/(SCALE*4.),0.,1.));\n    vec4 col3 = vec4(0,0,1,clamp((4.-distance(p,vec2(0,1)+pR(vec2(2),radians(555.))))*R.y/(SCALE*4.),0.,1.));\n    \n    col = blend(col, col1, left);\n    col = blend(col, col2, left);\n    col = blend(col, col3, left);\n\n    float t = 0.;\n#define chr chr3\n    if(left>0.) {\n        p.x-=0.75;\n    }\n    vec2 w1 = p-vec2(-7.25,-7);\n    if(left>0.) {\n    t+=chr(w1-vec2(0.0,0),83);///S\n    t+=chr(w1-vec2(0.5,0),117);//u\n    t+=chr(w1-vec2(1.0,0),98);///b\n    t+=chr(w1-vec2(1.5,0),116);//t\n    t+=chr(w1-vec2(2.0,0),114);//r\n    t+=chr(w1-vec2(2.5,0),97);///a\n    t+=chr(w1-vec2(3.0,0),99);///c\n    } else {\n    t+=chr(w1-vec2(1.5,0),65);///A\n    t+=chr(w1-vec2(2.0,0),100);//d\n    t+=chr(w1-vec2(2.5,0),100);//d\n    t+=chr(w1-vec2(3.0,0),105);//i\n    }\n    t+=chr(w1-vec2(3.5,0),116);//t\n    t+=chr(w1-vec2(4.0,0),105);//i\n    t+=chr(w1-vec2(4.5,0),118);//v\n    t+=chr(w1-vec2(5.0,0),101);//e\n    \n    vec2 w2 = p-vec2(-1.25,-7);\n    t+=chr(w2-vec2(0.0,0),67);///C\n    t+=chr(w2-vec2(0.5,0),111);//o\n    t+=chr(w2-vec2(1.0,0),108);//l\n    t+=chr(w2-vec2(1.5,0),111);//o\n    t+=chr(w2-vec2(2.0,0),117);//u\n    t+=chr(w2-vec2(2.5,0),114);//r\n    \n    vec2 w3 = p-vec2(2.25,-7);\n    t+=chr(w3-vec2(0.0,0),77);///M\n    t+=chr(w3-vec2(0.5,0),105);//i\n    t+=chr(w3-vec2(1.0,0),120);//x\n    t+=chr(w3-vec2(1.5,0),105);//i\n    t+=chr(w3-vec2(2.0,0),110);//n\n    t+=chr(w3-vec2(2.5,0),103);//g\n\n    if(left>0.) {\n        p.x+=0.75;\n    }\n    p*=1.25;\n    if(left>0.) {\n    vec2 w4 = p-vec2(-5.875,-10);\n    t+=chr(w4-vec2(0.0,0),40);///(\n    w4.x+=0.125-0.5;\n    t+=chr(w4-vec2(0.0,0),67);///C\n    t+=chr(w4-vec2(0.5,0),121);//y\n    t+=chr(w4-vec2(1.0,0),97);///a\n    t+=chr(w4-vec2(1.5,0),110);//n\n    w4.x+=0.125-2.0;\n    t+=chr(w4-vec2(0.0,0),44);///,\n    w4.x+=0.25-1.0;\n    t+=chr(w4-vec2(0.0,0),77);///M\n    t+=chr(w4-vec2(0.5,0),97);///a\n    t+=chr(w4-vec2(1.0,0),103);//g\n    t+=chr(w4-vec2(1.5,0),101);//e\n    t+=chr(w4-vec2(2.0,0),110);//n\n    t+=chr(w4-vec2(2.5,0),116);//t\n    t+=chr(w4-vec2(3.0,0),97);///a\n    w4.x+=0.125-4.0;\n    t+=chr(w4-vec2(0.0,0),38);///&\n    w4.x+=0.125-1.0;\n    t+=chr(w4-vec2(0.0,0),89);///Y\n    t+=chr(w4-vec2(0.5,0),101);//e\n    t+=chr(w4-vec2(1.0,0),108);//l\n    t+=chr(w4-vec2(1.5,0),108);//l\n    t+=chr(w4-vec2(2.0,0),111);//o\n    t+=chr(w4-vec2(2.5,0),119);//w\n    w4.x+=0.125-3.0;\n    t+=chr(w4-vec2(0.0,0),41);///)\n    } else {\n    vec2 w4 = p-vec2(-4.625,-10);\n    t+=chr(w4-vec2(0.0,0),40);///(\n    w4.x+=0.125-0.5;\n    t+=chr(w4-vec2(0.0,0),82);///R\n    t+=chr(w4-vec2(0.5,0),101);//e\n    t+=chr(w4-vec2(1.0,0),100);//d\n    w4.x+=0.125-1.5;\n    t+=chr(w4-vec2(0.0,0),44);///,\n    w4.x+=0.25-1.0;\n    t+=chr(w4-vec2(0.0,0),71);///G\n    t+=chr(w4-vec2(0.5,0),114);//r\n    t+=chr(w4-vec2(1.0,0),101);//e\n    t+=chr(w4-vec2(1.5,0),101);//e\n    t+=chr(w4-vec2(2.0,0),110);//n\n    w4.x+=0.125-3.0;\n    t+=chr(w4-vec2(0.0,0),38);///&\n    w4.x+=0.125-1.0;\n    t+=chr(w4-vec2(0.0,0),66);///B\n    t+=chr(w4-vec2(0.5,0),108);//l\n    t+=chr(w4-vec2(1.0,0),117);//u\n    t+=chr(w4-vec2(1.5,0),101);//e\n    w4.x+=0.125-2.0;\n    t+=chr(w4-vec2(0.0,0),41);///)\n    }\n\n    vec4 text = vec4(fg.rgb,t);\n    col = blend(col, text, left);\n\n    O = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}