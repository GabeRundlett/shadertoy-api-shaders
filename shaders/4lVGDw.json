{
    "Shader": {
        "info": {
            "date": "1474989280",
            "description": "move mouse! \ny=f(x)=a-x, but smoothstep()-stretched for abs(x)<abs(a)\nimagine a train sation at x=0 with time on the x-Axis. \nA stopped train at the station needs [a] to reach its maximum speed of 1. and thn keeps going.\n",
            "flags": 0,
            "hasliked": 0,
            "id": "4lVGDw",
            "likes": 4,
            "name": "f(x)=x+y, smoothstep() for x<a",
            "published": 3,
            "tags": [
                "smoothstep",
                "integral",
                "stretch",
                "smmooth"
            ],
            "usePreview": 0,
            "username": "ollj",
            "viewed": 641
        },
        "renderpass": [
            {
                "code": "/*\nmove mouse! \ny=f(x)=a-x,...\nbut smoothstep()-stretched for abs(x)<abs(a)\nimagine a train sation at x=0 with time on the x-Axis. \nA stopped train at the station \nneeds [a] to reach its maximum speed of 1. \nand thn keeps going.\n\nserves as smooth f(x) that avoids vec2(0), \nfor any m.x=m.y=(x=a)>0.0 (klick anywhere along the diagonal)\n\noffset by +=vec2(n) it can be used to stretch one dimension of p to be given to another sdf;\nfor example, allowing you to stretch a torus into a longer tunnel. (does not calculate circleCircleTangent)\n*/\n    \n//more dots!\n#define smalldots\n\n//disable quadrant colors, because can cause optical illusions.\n//#define greyscale\n\n#define sss(a,b,c) smoothstep(a-b,a+b,c)\n#define res iResolution\n#define time  (.5+.5*sin(iTime))\n#define time3 (.5+.5*sin(iTime*3.))\n\n//translate fragments to a frame; scale, center, aspectRatio.\nvec2 frame(vec2 a){a.x-=.5*(res.x-res.y);a/=res.xy;a.x*=res.x/res.y;\n a-=vec2(.1);\n a*=10.;//scale\n //a=vec2(-a.y,a.x);//rotate 90 deg.\n return a;}//not for horizonral screens where res.x<res.y ??\n\n/*\n//hgher degree smoothstep()s\n//Scale&clamp  to rage[0..1]\n#define ssclamp x=clamp((x-a)/(b-a),0.,1.);\n//smoothstep.5thOrder with 0 1st&2nd derivatives.\nfloat smootherstep5(float a,float b,float x){ssclamp\n return x*x*x*(x*(x*6.-15.)+10.);}\n//https://en.wikipedia.org/wiki/Smoothstep#Variations\n//smoothstep.7thOrder\nfloat smoothstep7(float a,float b,float x){ssclamp\n return(((-20.*x+70.)*x-84.)*x+35.)*x*x*x*x\n;}\n*/\n\n//starting at y=f(0)=[x] it smoothstep().accelerates till it reaches max speed of 1./x at [a]\nfloat line(float x,float a){\n float ss=smoothstep(a*3.,a,x+a*2.);\n //line() is only for special case, only smoothstep() of 3rd degree curve.\n return((ss+x*.75/a)-1.)*a;}\nfloat line2(float x,vec2 a){return a.x/6.+4./3.*(line(x,a.x))+a.x*.5+a.y;}\n//should outperform most smin() functions.\n//using step(asin()) instead, could to the same thing faster? at least easier to integrate?\n//used a lot of trial,error,black magic and virgin sacrifices to make this work without step() or if()\n\nvoid mainImage(out vec4 r,in vec2 o){\n vec2 m=frame(iMouse.xy),p=frame(o.xy);\n#ifdef greyscale\n r=vec4(.6)+.5;//r=return value = fragmentColor;\n#else\n r=vec4(p*.2,1.5,1.);//colorize quadrants\n#endif\n float a=line2(p.x,m); \n r-=1.-.5*mod((abs(p.y-a)),time+1.);\n#ifdef smalldots\n //4 dots mark distance of 1. to center:\n if(length(abs(p)-vec2(0,1))<.1)r=vec4(.0);\n if(length(abs(p)-vec2(1,0))<.1)r=vec4(.0);\n r+=3.;\n r.xyz-=sss(.1,.1,.5*length(vec2(.0,m.y)-p)-.01);//dot.mouse.x\n r.xyz-=sss(.1,.1,.5*length(vec2(m.x,.0)-p)-.01);//dot.mouse.y\n r.xyz-=sss(.1,.1,.5*length(vec2(m.x,line2(p.x,m))-p)-.01);//dot.f(mouse.x)\n //right of dot.f(mouse.x) f'(x)=1.\n #endif\n vec2 s=sss(.01,.1,mod(p,1.))*time;//grid\n r-=.5;\n r+=min(s.x,s.y);//man axis that go trhough vec2(0)\n r-=.2*time*sss(.1,1.*time3,sin(length(p)*3.14)),1.;//circles around vec2(0)\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}