{
    "Shader": {
        "info": {
            "date": "1702321831",
            "description": "Try to use functions to generate the matrix for order dithering",
            "flags": 0,
            "hasliked": 0,
            "id": "cltBDl",
            "likes": 3,
            "name": "Dithering with lines",
            "published": 3,
            "tags": [
                "dithering"
            ],
            "usePreview": 0,
            "username": "Zhiting",
            "viewed": 161
        },
        "renderpass": [
            {
                "code": "float random (vec2 st) {\n    return fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float pi = 3.14159; \n    vec3 col = vec3(0.0,0.0,0.0);\n    vec4 img = texture(iChannel0, uv);\n    //float comp = /64.0\n    \n    \n    // grayscale = 0.299 ∙ Red + 0.587 ∙ Green + 0.114 ∙ Blue\n    float grays = 0.299 * img.x + 0.587 * img.y + 0.114 * img.z;\n    \n    float period;\n    float numDis = 10.0;\n    float width = 10.0;\n    period= width/(1.0 - floor(grays*numDis)/numDis);\n    period = 20.0;\n    \n    float func;\n    float theta = 30.0 + 10.0*iTime;\n    vec2 po = vec2(0, 0);\n    vec2 dir = vec2(cos(theta*pi/180.0), sin(theta*pi/180.0));\n    func = dot((fragCoord-po), dir);// + 30.0*iTime;\n    \n    \n    \n    // func = func / T\n    func = func / period;\n    //func = sin(func*pi);//func - floor(func);\n    func = func - floor(func);\n    if (func > 0.5){\n        func = 1.0 - func;\n    }\n    func = func * 2.0;\n    \n    float r = 0.1;\n  \n    //col = vec3(ceil(grays - func));\n    \n    //col = vec3(ceil(grays - func + r*(random (fragCoord)-0.5)));\n    \n    float red, green,blue; \n    red = ceil(img.x - func + r*(random(fragCoord)-0.5));\n    green = ceil(img.y - func + r*(random(fragCoord)-0.5));\n    blue = ceil(img.z - func + r*(random(fragCoord)-0.5));\n    col = vec3(red,green,blue);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);//vec4(col,1.0); img;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}