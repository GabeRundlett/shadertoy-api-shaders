{
    "Shader": {
        "info": {
            "date": "1637022009",
            "description": "Greetings to all at scene.pt!!!! Original https://www.shadertoy.com/view/st3GDs\nAfter some chat at the scene.pt discord I made a few changes to the original shader, this is the result",
            "flags": 32,
            "hasliked": 0,
            "id": "flyGRz",
            "likes": 13,
            "name": "A green thing - Variation Zero",
            "published": 3,
            "tags": [
                "materialmaker",
                "nodes",
                "scenept"
            ],
            "usePreview": 1,
            "username": "PauloFalcao",
            "viewed": 545
        },
        "renderpass": [
            {
                "code": "// A green thing in a bathroom - Variation Zero\n//\n// By https://twitter.com/paulofalcao\n//\n// Greetings to all at scene.pt!!!!\n//\n// Original https://www.shadertoy.com/view/st3GDs\n// After some chat at the scene.pt discord\n// I made a few changes to the original shader, this is the result :)\n//\n// This uses the MFSDF scene description technique\n// https://www.shadertoy.com/view/7dySRc\n//\n// Generated in Material Maker\n//\n// To generate your own shaders you need:\n//\n// - Material Maker - https://rodzilla.itch.io/material-maker\n// - My Ray Marching library - https://github.com/paulofalcao/MaterialMakerRayMarching\n// \n// Here is a 2 hour video explaining how to use it - https://youtu.be/PvmIohbf93Q\n// \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec4 color = texture(iChannel0, fragCoord / iResolution.xy);\n    fragColor = vec4(pow(color.xyz/color.w,vec3(1.0/2.2)), 1.0f);\n     \n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "/* Generated by Material Maker */\n\n#define SEED_VARIATION 0.0\n\n//---\n\nfloat rand(vec2 x) {\n    return fract(cos(mod(dot(x, vec2(13.9898, 8.141)), 3.14)) * 43758.5453);\n}\n\nvec2 rand2(vec2 x) {\n    return fract(cos(mod(vec2(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t      dot(x, vec2(3.4562, 17.398))), vec2(3.14))) * 43758.5453);\n}\n\nvec3 rand3(vec2 x) {\n    return fract(cos(mod(vec3(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t\t  dot(x, vec2(3.4562, 17.398)),\n                              dot(x, vec2(13.254, 5.867))), vec3(3.14))) * 43758.5453);\n}\n\nvec3 rgb2hsv(vec3 c) {\n\tvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\tvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n\tvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n\n\tfloat d = q.x - min(q.w, q.y);\n\tfloat e = 1.0e-10;\n\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c) {\n\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat param_rnd(float minimum, float maximum, float seed) {\n\treturn minimum+(maximum-minimum)*rand(vec2(seed));\n}\n//Adapted from https://iquilezles.org/articles/distfunctions - Finite Repetition\n\nvec3 opRepLim(vec3 p,vec3 c,vec3 l){\n    p+=(c*l)/2.0;\n    return p-c*clamp(floor(p/c+0.5),vec3(0.0),l);\n}vec3 MFSDF_Obj_Maker_rotate3d(vec3 p, vec3 a) {\n\tvec3 rv;\n\tfloat c;\n\tfloat s;\n\tc = cos(a.x);\n\ts = sin(a.x);\n\trv.x = p.x;\n\trv.y = p.y*c+p.z*s;\n\trv.z = -p.y*s+p.z*c;\n\tc = cos(a.y);\n\ts = sin(a.y);\n\tp.x = rv.x*c+rv.z*s;\n\tp.y = rv.y;\n\tp.z = -rv.x*s+rv.z*c;\n\tc = cos(a.z);\n\ts = sin(a.z);\n\trv.x = p.x*c+p.y*s;\n\trv.y = -p.x*s+p.y*c;\n\trv.z = p.z;\n\treturn rv;\n}\nvec4 brick(vec2 uv, vec2 bmin, vec2 bmax, float mortar, float round, float bevel) {\n\tfloat color;\n\tvec2 size = bmax - bmin;\n\tfloat min_size = min(size.x, size.y);\n\tmortar *= min_size;\n\tbevel *= min_size;\n\tround *= min_size;\n\tvec2 center = 0.5*(bmin+bmax);\n    vec2 d = abs(uv-center)-0.5*(size)+vec2(round+mortar);\n    color = length(max(d,vec2(0))) + min(max(d.x,d.y),0.0)-round;\n\tcolor = clamp(-color/bevel, 0.0, 1.0);\n\tvec2 tiled_brick_pos = mod(bmin, vec2(1.0, 1.0));\n\treturn vec4(color, center, tiled_brick_pos.x+7.0*tiled_brick_pos.y);\n}\n\nvec3 brick_random_color(vec2 bmin, vec2 bmax, float seed) {\n\tvec2 center = 0.5*(bmin + bmax);\n\treturn rand3(fract(center + vec2(seed)));\n}\n\nvec3 brick_uv(vec2 uv, vec2 bmin, vec2 bmax, float seed) {\n\tvec2 center = 0.5*(bmin + bmax);\n\tvec2 size = bmax - bmin;\n\tfloat max_size = max(size.x, size.y);\n\treturn vec3(0.5+(uv-center)/max_size, rand(fract(center)+vec2(seed)));\n}\n\nvec3 brick_corner_uv(vec2 uv, vec2 bmin, vec2 bmax, float mortar, float corner, float seed) {\n\tvec2 center = 0.5*(bmin + bmax);\n\tvec2 size = bmax - bmin;\n\tfloat max_size = max(size.x, size.y);\n\tfloat min_size = min(size.x, size.y);\n\tmortar *= min_size;\n\tcorner *= min_size;\n\treturn vec3(clamp((0.5*size-vec2(mortar)-abs(uv-center))/corner, vec2(0.0), vec2(1.0)), rand(fract(center)+vec2(seed)+ceil(vec2(uv-center))));\n}\n\nvec4 bricks_rb(vec2 uv, vec2 count, float repeat, float offset) {\n\tcount *= repeat;\n\tfloat x_offset = offset*step(0.5, fract(uv.y*count.y*0.5));\n\tvec2 bmin = floor(vec2(uv.x*count.x-x_offset, uv.y*count.y));\n\tbmin.x += x_offset;\n\tbmin /= count;\n\treturn vec4(bmin, bmin+vec2(1.0)/count);\n}\n\nvec4 bricks_rb2(vec2 uv, vec2 count, float repeat, float offset) {\n\tcount *= repeat;\n\tfloat x_offset = offset*step(0.5, fract(uv.y*count.y*0.5));\n\tcount.x = count.x*(1.0+step(0.5, fract(uv.y*count.y*0.5)));\n\tvec2 bmin = floor(vec2(uv.x*count.x-x_offset, uv.y*count.y));\n\tbmin.x += x_offset;\n\tbmin /= count;\n\treturn vec4(bmin, bmin+vec2(1.0)/count);\n}\n\nvec4 bricks_hb(vec2 uv, vec2 count, float repeat, float offset) {\n\tfloat pc = count.x+count.y;\n\tfloat c = pc*repeat;\n\tvec2 corner = floor(uv*c);\n\tfloat cdiff = mod(corner.x-corner.y, pc);\n\tif (cdiff < count.x) {\n\t\treturn vec4((corner-vec2(cdiff, 0.0))/c, (corner-vec2(cdiff, 0.0)+vec2(count.x, 1.0))/c);\n\t} else {\n\t\treturn vec4((corner-vec2(0.0, pc-cdiff-1.0))/c, (corner-vec2(0.0, pc-cdiff-1.0)+vec2(1.0, count.y))/c);\n\t}\n}\n\nvec4 bricks_bw(vec2 uv, vec2 count, float repeat, float offset) {\n\tvec2 c = 2.0*count*repeat;\n\tfloat mc = max(c.x, c.y);\n\tvec2 corner1 = floor(uv*c);\n\tvec2 corner2 = count*floor(repeat*2.0*uv);\n\tfloat cdiff = mod(dot(floor(repeat*2.0*uv), vec2(1.0)), 2.0);\n\tvec2 corner;\n\tvec2 size;\n\tif (cdiff == 0.0) {\n\t\tcorner = vec2(corner1.x, corner2.y);\n\t\tsize = vec2(1.0, count.y);\n\t} else {\n\t\tcorner = vec2(corner2.x, corner1.y);\n\t\tsize = vec2(count.x, 1.0);\n\t}\n\treturn vec4(corner/c, (corner+size)/c);\n}\n\nvec4 bricks_sb(vec2 uv, vec2 count, float repeat, float offset) {\n\tvec2 c = (count+vec2(1.0))*repeat;\n\tfloat mc = max(c.x, c.y);\n\tvec2 corner1 = floor(uv*c);\n\tvec2 corner2 = (count+vec2(1.0))*floor(repeat*uv);\n\tvec2 rcorner = corner1 - corner2;\n\tvec2 corner;\n\tvec2 size;\n\tif (rcorner.x == 0.0 && rcorner.y < count.y) {\n\t\tcorner = corner2;\n\t\tsize = vec2(1.0, count.y);\n\t} else if (rcorner.y == 0.0) {\n\t\tcorner = corner2+vec2(1.0, 0.0);\n\t\tsize = vec2(count.x, 1.0);\n\t} else if (rcorner.x == count.x) {\n\t\tcorner = corner2+vec2(count.x, 1.0);\n\t\tsize = vec2(1.0, count.y);\n\t} else if (rcorner.y == count.y) {\n\t\tcorner = corner2+vec2(0.0, count.y);\n\t\tsize = vec2(count.x, 1.0);\n\t} else {\n\t\tcorner = corner2+vec2(1.0);\n\t\tsize = vec2(count.x-1.0, count.y-1.0);\n\t}\n\treturn vec4(corner/c, (corner+size)/c);\n}// https://www.shadertoy.com/view/XsX3zB\n//\n// The MIT License\n// Copyright Â© 2013 Nikita Miropolskiy\n// \n// ( license has been changed from CCA-NC-SA 3.0 to MIT\n//\n//   but thanks for attributing your source code when deriving from this sample \n//   with a following link: https://www.shadertoy.com/view/XsX3zB )\n//\n//\n// if you're looking for procedural noise implementation examples you might \n// also want to look at the following shaders:\n// \n// Noise Lab shader by candycat: https://www.shadertoy.com/view/4sc3z2\n//\n// Noise shaders by iq:\n//     Value    Noise 2D, Derivatives: https://www.shadertoy.com/view/4dXBRH\n//     Gradient Noise 2D, Derivatives: https://www.shadertoy.com/view/XdXBRH\n//     Value    Noise 3D, Derivatives: https://www.shadertoy.com/view/XsXfRH\n//     Gradient Noise 3D, Derivatives: https://www.shadertoy.com/view/4dffRH\n//     Value    Noise 2D             : https://www.shadertoy.com/view/lsf3WH\n//     Value    Noise 3D             : https://www.shadertoy.com/view/4sfGzS\n//     Gradient Noise 2D             : https://www.shadertoy.com/view/XdXGW8\n//     Gradient Noise 3D             : https://www.shadertoy.com/view/Xsl3Dl\n//     Simplex  Noise 2D             : https://www.shadertoy.com/view/Msf3WH\n//     Voronoise: https://www.shadertoy.com/view/Xd23Dh\n//\n//\n//\n\n// discontinuous pseudorandom constly distributed in [-0.5, +0.5]^3 */\nvec3 XsX3zB_oct_random3(vec3 c) {\n\tfloat j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));\n\tvec3 r;\n\tr.z = fract(512.0*j);\n\tj *= .125;\n\tr.x = fract(512.0*j);\n\tj *= .125;\n\tr.y = fract(512.0*j);\n\treturn r-0.5;\n}\n\n// skew constants for 3d simplex functions\nconst float XsX3zB_oct_F3 =  0.3333333;\nconst float XsX3zB_oct_G3 =  0.1666667;\n\n// 3d simplex noise\nfloat XsX3zB_oct_simplex3d(vec3 p) {\n\t // 1. find current tetrahedron T and it's four vertices\n\t // s, s+i1, s+i2, s+1.0 - absolute skewed (integer) coordinates of T vertices\n\t // x, x1, x2, x3 - unskewed coordinates of p relative to each of T vertices\n\t \n\t // calculate s and x\n\t vec3 s = floor(p + dot(p, vec3(XsX3zB_oct_F3)));\n\t vec3 x = p - s + dot(s, vec3(XsX3zB_oct_G3));\n\t \n\t // calculate i1 and i2\n\t vec3 e = step(vec3(0.0), x - x.yzx);\n\t vec3 i1 = e*(1.0 - e.zxy);\n\t vec3 i2 = 1.0 - e.zxy*(1.0 - e);\n\t \t\n\t // x1, x2, x3\n\t vec3 x1 = x - i1 + XsX3zB_oct_G3;\n\t vec3 x2 = x - i2 + 2.0*XsX3zB_oct_G3;\n\t vec3 x3 = x - 1.0 + 3.0*XsX3zB_oct_G3;\n\t \n\t // 2. find four surflets and store them in d\n\t vec4 w, d;\n\t \n\t // calculate surflet weights\n\t w.x = dot(x, x);\n\t w.y = dot(x1, x1);\n\t w.z = dot(x2, x2);\n\t w.w = dot(x3, x3);\n\t \n\t // w fades from 0.6 at the center of the surflet to 0.0 at the margin\n\t w = max(0.6 - w, 0.0);\n\t \n\t // calculate surflet components\n\t d.x = dot(XsX3zB_oct_random3(s), x);\n\t d.y = dot(XsX3zB_oct_random3(s + i1), x1);\n\t d.z = dot(XsX3zB_oct_random3(s + i2), x2);\n\t d.w = dot(XsX3zB_oct_random3(s + 1.0), x3);\n\t \n\t // multiply d by w^4\n\t w *= w;\n\t w *= w;\n\t d *= w;\n\t \n\t // 3. return the sum of the four surflets\n\t return dot(d, vec4(52.0));\n}vec2 transform2_clamp(vec2 uv) {\n\treturn clamp(uv, vec2(0.0), vec2(1.0));\n}\n\nvec2 transform2(vec2 uv, vec2 translate, float rotate, vec2 scale) {\n \tvec2 rv;\n\tuv -= translate;\n\tuv -= vec2(0.5);\n\trv.x = cos(rotate)*uv.x + sin(rotate)*uv.y;\n\trv.y = -sin(rotate)*uv.x + cos(rotate)*uv.y;\n\trv /= scale;\n\trv += vec2(0.5);\n\treturn rv;\t\n}vec4 sdf3dc_union(vec4 a, vec4 b) {\n\treturn vec4((a.w<b.w)?vec4(a):vec4(b));\n}\nvec4 sdf3dc_sub(vec4 a, vec4 b) {\n\treturn vec4((-a.w>b.w)?vec4(a.xyz,-a.w):vec4(b));\n}\nvec4 sdf3dc_inter(vec4 a, vec4 b) {\n\treturn vec4((a.w>b.w)?vec4(a):vec4(b));\n}vec3 v4v4_rotate(vec3 p, vec3 a) {\n\tvec3 rv;\n\tfloat c;\n\tfloat s;\n\tc = cos(a.x);\n\ts = sin(a.x);\n\trv.x = p.x;\n\trv.y = p.y*c+p.z*s;\n\trv.z = -p.y*s+p.z*c;\n\tc = cos(a.y);\n\ts = sin(a.y);\n\tp.x = rv.x*c+rv.z*s;\n\tp.y = rv.y;\n\tp.z = -rv.x*s+rv.z*c;\n\tc = cos(a.z);\n\ts = sin(a.z);\n\trv.x = p.x*c+p.y*s;\n\trv.y = -p.x*s+p.y*c;\n\trv.z = p.z;\n\treturn rv;\n}\nfloat mfsdf3d_smooth_union_f(float a,float b,float k){\n\tfloat h = max( k-abs(a-b), 0.0 )/k;\n\treturn min(a,b)-h*h*k*0.25;\n}\n\nvec4 mfsdf3d_smooth_union(vec4 a, vec4 b, float k) {\n    float e=0.001;\n    k=max(k,e);\n    float h=mfsdf3d_smooth_union_f(a.w,b.w,k);\n\tvec2 n=normalize(vec2(mfsdf3d_smooth_union_f(a.w+e,b.w,k)-mfsdf3d_smooth_union_f(a.w-e,b.w,k),\n                          mfsdf3d_smooth_union_f(a.w,b.w+e,k)-mfsdf3d_smooth_union_f(a.w,b.w-e,k)));\n    return vec4(mix(a.xyz,b.xyz,atan(abs(n.y),abs(n.x))/(3.14159265359/2.0)),h);\n}\n\nfloat mfsdf3d_smooth_subtraction_f(float a,float b,float k){\n\tfloat h = max( k-abs(-a-b), 0.0 )/k;\n\treturn max(-a,b)+h*h*k*0.25;\n}\n\nvec4 mfsdf3d_smooth_subtraction(vec4 a, vec4 b, float k) {\n    float e=0.001;\n    k=max(k,e);\n\tfloat h=mfsdf3d_smooth_subtraction_f(a.w,b.w,k);\n\tvec2 n=normalize(vec2(mfsdf3d_smooth_subtraction_f(a.w+e,b.w,k)-mfsdf3d_smooth_subtraction_f(a.w-e,b.w,k),\n                          mfsdf3d_smooth_subtraction_f(a.w,b.w+e,k)-mfsdf3d_smooth_subtraction_f(a.w,b.w-e,k)));\n    return vec4(mix(a.xyz,b.xyz,atan(abs(n.y),abs(n.x))/(3.14159265359/2.0)),h);\n}\n\nfloat mfsdf3d_smooth_intersection_f(float a,float b,float k){\n\tfloat h = max( k-abs(a-b), 0.0 )/k;\n\treturn max(a,b)+h*h*k*0.25;\n}\n\nvec4 mfsdf3d_smooth_intersection(vec4 a, vec4 b, float k) {\n    float e=0.001;\n    k=max(k,e);\n\tfloat h=mfsdf3d_smooth_intersection_f(a.w,b.w,k);\n\tvec2 n=normalize(vec2(mfsdf3d_smooth_intersection_f(a.w+e,b.w,k)-mfsdf3d_smooth_intersection_f(a.w-e,b.w,k),\n                          mfsdf3d_smooth_intersection_f(a.w,b.w+e,k)-mfsdf3d_smooth_intersection_f(a.w,b.w-e,k)));\n    return vec4(mix(a.xyz,b.xyz,atan(abs(n.y),abs(n.x))/(3.14159265359/2.0)),h);\n}vec2 twist_rot(vec2 v, float a) {\n\ta=a*0.01745329251;\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(vec2(c, -s),vec2(s, c));\n\treturn m * v;\n}\n\nvec3 twistX(vec3 v, float a){\n\tv.yz=twist_rot(v.yz,v.x*a);\n\treturn v;\n}\n\nvec3 twistY(vec3 v, float a){\n\tv.xz=twist_rot(v.xz,v.y*a);\n\treturn v;\n}\n\nvec3 twistZ(vec3 v, float a){\n\tv.xy=twist_rot(v.xy,v.z*a);\n\treturn v;\n}\n\nvec4 MFSDF_Union(vec4 in1,vec4 in2,vec4 in3,vec4 in4,vec4 in5,vec4 in6,vec4 in7,vec4 in8){\n    vec4 t=(in1.w<in2.w)?vec4(in1):vec4(in2);\n    t=(t.w<in2.w)?vec4(t):vec4(in2);\n    t=(t.w<in3.w)?vec4(t):vec4(in3);\n    t=(t.w<in4.w)?vec4(t):vec4(in4);\n    t=(t.w<in5.w)?vec4(t):vec4(in5);\n    t=(t.w<in6.w)?vec4(t):vec4(in6);\n    t=(t.w<in7.w)?vec4(t):vec4(in7);\n    t=(t.w<in8.w)?vec4(t):vec4(in8);\n    return t;\n}\n\n\n//MATH\nconst float PI=3.14159265359;\nconst float TAU=6.28318530718;\n\nvec2 rndint_hash23(vec3 p3){\n\tp3 = fract(p3 * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\nvoid Onb(in vec3 N, inout vec3 T, inout vec3 B){\n    vec3 UpVector=abs(N.z)<0.999?vec3(0,0,1):vec3(1,0,0);\n    T=normalize(cross(UpVector,N));\n    B=cross(N,T);\n}\n\nvec2 equirectangularMap(vec3 dir) {\n\tvec2 longlat = vec2(atan(dir.y,dir.x),acos(dir.z));\n \treturn longlat/vec2(2.0*PI,PI);\n}\n\n// RANDOM START\n//from https://www.reedbeta.com/blog/hash-functions-for-gpu-rendering/\nuint rand_pcg(inout uint seed){\n    uint state = seed;\n    seed = seed * uint(747796405) + uint(2891336453);\n    uint word = ((state >> ((state >> uint(28)) + uint(4))) ^ state) * uint(277803737);\n    return (word >> uint(22)) ^ word;\n}\n\nfloat RandomFloat01(inout uint state){\n    uint r=rand_pcg(state);\n    r &= uint(0x007FFFFF);\n    r |= uint(0x3F800000);\n    return uintBitsToFloat(r) - 1.0f;\n}\n\n// RANDOM END\n\n// SAMPLING START\n\nvec3 constSampleSphere(float r1,float r2){\n    float z=1.0-2.0*r1;\n    float r=sqrt(max(0.0,1.0-z*z));\n    float phi=TAU*r2;\n    return vec3(r*cos(phi),r*sin(phi),z);\n}\n\nvec3 cosineSampleHemissphere(inout uint state,vec3 n){\n    float u1=RandomFloat01(state);\n    float u2=RandomFloat01(state);\n    return normalize(n+constSampleSphere(u1,u2)); \n}\n\n// Adapted from \"Sampling the GGX Distribution of Visible Normals\",\n// http://jcgt.org/published/0007/04/01/\nvec3 SampleGGXVNDF(inout uint state,vec3 Ve,float alpha_x,float alpha_y){\n    float U1=RandomFloat01(state);\n    float U2=RandomFloat01(state);\n    \n    //transforming the view direction to the hemisphere configuration\n    vec3 Vh = normalize(vec3(alpha_x * Ve.x, alpha_y * Ve.y, Ve.z));\n\n    //orthonormal basis\n    vec3 T1;vec3 T2;\n    Onb(Vh,T1,T2);\n\n    //parameterization of the projected area\n    float r = sqrt(U1); \n    float phi = 2.0 * PI * U2;    \n    float t1 = r * cos(phi);\n    float t2 = r * sin(phi);\n    float s = 0.5 * (1.0 + Vh.z);\n    t2 = (1.0 - s)*sqrt(1.0 - t1*t1) + s*t2;\n\n    //reprojection onto hemisphere\n    vec3 Nh = t1*T1 + t2*T2 + sqrt(max(0.0f, 1.0f - t1*t1 - t2*t2))*Vh;\n\n    //transforming the normal back to the ellipsoid configuration\n    vec3 Ne = normalize(vec3(alpha_x * Nh.x, alpha_y * Nh.y, max(0.0f, Nh.z))); \n\n    return Ne;\n}\n\nfloat schlickWeight(float cosTheta) {\n    float m=clamp(1.-cosTheta,0.,1.);\n    float m2=m*m;\n    return m2*m2*m;\n}\n\n// SAMPLING END\n\nconst float p_o6428_CamX = -3.601000000;\nconst float p_o6428_CamY = 2.357000000;\nconst float p_o6428_CamZ = 2.873000000;\nconst float p_o6428_LookAtX = 1.851000000;\nconst float p_o6428_LookAtY = 0.740000000;\nconst float p_o6428_LookAtZ = -0.406000000;\nconst float p_o6428_CamD = 1.133000000;\nconst float p_o6428_CamZoom = 1.000000000;\nconst float p_o6428_MaxDistance = 200.000000000;\nconst float p_o6441_BaseColor_r = 1.000000000;\nconst float p_o6441_BaseColor_g = 1.000000000;\nconst float p_o6441_BaseColor_b = 1.000000000;\nconst float p_o6441_BaseColor_a = 1.000000000;\nconst float p_o6441_Metallic = 0.000000000;\nconst float p_o6441_Specular = 0.500000000;\nconst float p_o6441_Roughness = 0.000000000;\nconst float p_o6441_Emission = 10.000000000;\nconst float p_o6441_Normal = 0.000000000;\nconst float p_o6441_Alpha = 0.000000000;\nconst float p_o6441_AmbientOcclusion = 0.000000000;\nconst float p_o6441_scale = 1.000000000;\nconst float p_o6441_TranlateX = 0.000000000;\nconst float p_o6441_TranlateY = 3.722000000;\nconst float p_o6441_TranlateZ = 0.000000000;\nconst float p_o6441_RotateX = 0.000000000;\nconst float p_o6441_RotateY = 0.000000000;\nconst float p_o6441_RotateZ = 0.000000000;\nvec3 o6441_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o6441_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6441_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6441_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o6441_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o6441_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o6441_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6441_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o6440_X = 1.000000000;\nconst float p_o6440_Y = 1.000000000;\nconst float p_o6440_Z = 0.400000000;\nconst float p_o6440_RepX = 1.000000000;\nconst float p_o6440_RepY = 1.000000000;\nconst float p_o6440_RepZ = 6.000000000;\nconst float p_o6439_l = 2.570000000;\nconst float p_o6439_r = 0.100000000;\nfloat o6441_input_sdf3d(vec3 p, float _seed_variation_) {\nvec2 o6439_0_d = abs(vec2(length((opRepLim((p),vec3(p_o6440_X,p_o6440_Y,p_o6440_Z)*2.0,vec3(p_o6440_RepX-1.0,p_o6440_RepY-1.0,p_o6440_RepZ-1.0))).yz),(opRepLim((p),vec3(p_o6440_X,p_o6440_Y,p_o6440_Z)*2.0,vec3(p_o6440_RepX-1.0,p_o6440_RepY-1.0,p_o6440_RepZ-1.0))).x)) - vec2(p_o6439_r,p_o6439_l);\nfloat o6439_0_1_sdf3d = min(max(o6439_0_d.x,o6439_0_d.y),0.0) + length(max(o6439_0_d,0.0));\nfloat o6440_0_1_sdf3d = o6439_0_1_sdf3d;\n\nreturn o6440_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o6441(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o6441_TranlateX,p_o6441_TranlateY,p_o6441_TranlateZ),vec3(p_o6441_RotateX,p_o6441_RotateY,p_o6441_RotateZ)*6.28318530718)/p_o6441_scale;\n\tfloat sdf=o6441_input_sdf3d(uv.xyz, _seed_variation_)*p_o6441_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o6441_AmbientOcclusion*o6441_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o6441_Alpha*o6441_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o6441_Normal*o6441_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o6441_Emission*o6441_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o6441_Roughness*o6441_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o6441_Specular*o6441_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o6441_Metallic*o6441_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o6441_BaseColor_r, p_o6441_BaseColor_g, p_o6441_BaseColor_b, p_o6441_BaseColor_a).rgb*o6441_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o6466_x = 3.701340000;\nconst float p_o6466_y = 0.000000000;\nconst float p_o6466_z = 0.000000000;\nconst float p_o6454_BaseColor_r = 1.000000000;\nconst float p_o6454_BaseColor_g = 1.000000000;\nconst float p_o6454_BaseColor_b = 1.000000000;\nconst float p_o6454_BaseColor_a = 1.000000000;\nconst float p_o6454_Metallic = 0.705000000;\nconst float p_o6454_Specular = 0.373000000;\nconst float p_o6454_Roughness = 1.000000000;\nconst float p_o6454_Emission = 0.000000000;\nconst float p_o6454_Normal = 0.000000000;\nconst float p_o6454_Alpha = 0.000000000;\nconst float p_o6454_AmbientOcclusion = 0.000000000;\nconst float p_o6454_scale = 1.000000000;\nconst float p_o6454_TranlateX = 0.000000000;\nconst float p_o6454_TranlateY = 0.000000000;\nconst float p_o6454_TranlateZ = 0.000000000;\nconst float p_o6454_RotateX = 0.000000000;\nconst float p_o6454_RotateY = 0.000000000;\nconst float p_o6454_RotateZ = 0.000000000;\nconst float p_o6491_translate_x = -0.530000000;\nconst float p_o6491_translate_y = -0.010000000;\nconst float p_o6489_translate_x = 6.470000000;\nconst float p_o6489_translate_y = 3.123150000;\nconst float p_o6489_rotate = 197.957800000;\nconst float p_o6489_scale_x = 1.000000000;\nconst float p_o6489_scale_y = 1.000000000;\nconst float seed_o6487 = 0.692989000;\nconst float p_o6487_repeat = 1.000000000;\nconst float p_o6487_rows = 1.930000000;\nconst float p_o6487_columns = 1.930000000;\nconst float p_o6487_row_offset = 1.000000000;\nconst float p_o6487_mortar = 0.000000000;\nconst float p_o6487_bevel = 0.000000000;\nconst float p_o6487_round = 0.000000000;\nconst float p_o6487_corner = 0.000000000;\nconst float p_o6488_f = 0.000000000;\nconst float p_o6473_g_0_pos = 0.190909000;\nconst float p_o6473_g_0_r = 1.000000000;\nconst float p_o6473_g_0_g = 1.000000000;\nconst float p_o6473_g_0_b = 1.000000000;\nconst float p_o6473_g_0_a = 1.000000000;\nconst float p_o6473_g_1_pos = 0.390909000;\nconst float p_o6473_g_1_r = 0.507812977;\nconst float p_o6473_g_1_g = 0.451000005;\nconst float p_o6473_g_1_b = 0.353087991;\nconst float p_o6473_g_1_a = 1.000000000;\nconst float p_o6473_g_2_pos = 0.663636000;\nconst float p_o6473_g_2_r = 1.000000000;\nconst float p_o6473_g_2_g = 1.000000000;\nconst float p_o6473_g_2_b = 1.000000000;\nconst float p_o6473_g_2_a = 1.000000000;\nvec4 o6473_g_gradient_fct(float x) {\n  if (x < p_o6473_g_0_pos) {\n    return vec4(p_o6473_g_0_r,p_o6473_g_0_g,p_o6473_g_0_b,p_o6473_g_0_a);\n  } else if (x < p_o6473_g_1_pos) {\n    return mix(vec4(p_o6473_g_0_r,p_o6473_g_0_g,p_o6473_g_0_b,p_o6473_g_0_a), vec4(p_o6473_g_1_r,p_o6473_g_1_g,p_o6473_g_1_b,p_o6473_g_1_a), ((x-p_o6473_g_0_pos)/(p_o6473_g_1_pos-p_o6473_g_0_pos)));\n  } else if (x < p_o6473_g_2_pos) {\n    return mix(vec4(p_o6473_g_1_r,p_o6473_g_1_g,p_o6473_g_1_b,p_o6473_g_1_a), vec4(p_o6473_g_2_r,p_o6473_g_2_g,p_o6473_g_2_b,p_o6473_g_2_a), ((x-p_o6473_g_1_pos)/(p_o6473_g_2_pos-p_o6473_g_1_pos)));\n  }\n  return vec4(p_o6473_g_2_r,p_o6473_g_2_g,p_o6473_g_2_b,p_o6473_g_2_a);\n}\nconst float p_o6468_scale = 5.635000000;\nconst float p_o6468_scale_x = 1.000000000;\nconst float p_o6468_scale_y = 1.000000000;\nconst float p_o6468_scale_z = 1.000000000;\nconst float p_o6468_transx = 0.000000000;\nconst float p_o6468_transy = 0.000000000;\nconst float p_o6468_transz = 0.000000000;\nconst float p_o6468_persistence = 0.500000000;\nconst float p_o6468_brightness = 0.000000000;\nconst float p_o6468_contrast = 7.556000000;\nfloat o6468_fbm(vec3 coord, float persistence, float _seed_variation_) {\n\tfloat normalize_factor = 0.0;\n\tfloat value = 0.0;\n\tfloat scale = 1.0;\n\tfloat size = 1.0;\n\tfor (int i = 0; i < 6; i++) {\n\t\tvalue += XsX3zB_oct_simplex3d(coord*size) * scale;\n\t\tnormalize_factor += scale;\n\t\tsize *= 2.0;\n\t\tscale *= persistence;\n\t}\n\treturn value / normalize_factor;\n}\n\nfloat o6468_bc(float f,float contrast, float brightness, float _seed_variation_) {\n\treturn f*contrast+brightness+0.5-contrast*0.5;\n}\nvec3 o6454_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\nvec4 o6487_0_rect = bricks_rb((((p).yz+vec2(0.5))-vec2(p_o6491_translate_x, p_o6491_translate_y)), vec2(p_o6487_columns, p_o6487_rows), p_o6487_repeat, p_o6487_row_offset);\nvec4 o6487_0 = brick((((p).yz+vec2(0.5))-vec2(p_o6491_translate_x, p_o6491_translate_y)), o6487_0_rect.xy, o6487_0_rect.zw, p_o6487_mortar*1.0, p_o6487_round*1.0, max(0.001, p_o6487_bevel*1.0));\nvec3 o6487_1_2_rgb = brick_random_color(o6487_0_rect.xy, o6487_0_rect.zw, float((seed_o6487+_seed_variation_)));\nvec3 o6468_0_out = vec3(o6468_bc(o6468_fbm((vec3(p_o6488_f,(transform2((((p).yz+vec2(0.5))-vec2(p_o6491_translate_x, p_o6491_translate_y)), vec2(p_o6489_translate_x*(2.0*(dot(o6487_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o6489_translate_y*(2.0*(dot(o6487_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o6489_rotate*0.01745329251*(2.0*(dot(o6487_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o6489_scale_x*(2.0*1.0-1.0), p_o6489_scale_y*(2.0*1.0-1.0)))).x,(transform2((((p).yz+vec2(0.5))-vec2(p_o6491_translate_x, p_o6491_translate_y)), vec2(p_o6489_translate_x*(2.0*(dot(o6487_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o6489_translate_y*(2.0*(dot(o6487_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o6489_rotate*0.01745329251*(2.0*(dot(o6487_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o6489_scale_x*(2.0*1.0-1.0), p_o6489_scale_y*(2.0*1.0-1.0)))).y)).xyz*vec3(p_o6468_scale_x,p_o6468_scale_y,p_o6468_scale_z)*0.5*p_o6468_scale+vec3(p_o6468_transx,p_o6468_transy,p_o6468_transz),p_o6468_persistence, _seed_variation_)*0.5+0.5,p_o6468_contrast,p_o6468_brightness, _seed_variation_));vec3 o6468_0_1_tex3d = clamp(o6468_0_out,vec3(0),vec3(1));\nvec3 o6473_0_1_tex3d = o6473_g_gradient_fct(dot(o6468_0_1_tex3d, vec3(1.0))/3.0).rgb;\nvec3 o6488_0_1_rgb = o6473_0_1_tex3d.rgb;\nvec4 o6489_0_1_rgba = vec4(o6488_0_1_rgb, 1.0);\nvec4 o6491_0_1_rgba = o6489_0_1_rgba;\nvec3 o6490_0_1_tex3d = ((o6491_0_1_rgba).rgb);\n\nreturn o6490_0_1_tex3d;\n}\nfloat o6454_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6454_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o6492_g_0_pos = 0.000000000;\nconst float p_o6492_g_0_r = 1.000000000;\nconst float p_o6492_g_0_g = 1.000000000;\nconst float p_o6492_g_0_b = 1.000000000;\nconst float p_o6492_g_0_a = 1.000000000;\nconst float p_o6492_g_1_pos = 1.000000000;\nconst float p_o6492_g_1_r = 0.000000000;\nconst float p_o6492_g_1_g = 0.000000000;\nconst float p_o6492_g_1_b = 0.000000000;\nconst float p_o6492_g_1_a = 1.000000000;\nvec4 o6492_g_gradient_fct(float x) {\n  if (x < p_o6492_g_0_pos) {\n    return vec4(p_o6492_g_0_r,p_o6492_g_0_g,p_o6492_g_0_b,p_o6492_g_0_a);\n  } else if (x < p_o6492_g_1_pos) {\n    return mix(vec4(p_o6492_g_0_r,p_o6492_g_0_g,p_o6492_g_0_b,p_o6492_g_0_a), vec4(p_o6492_g_1_r,p_o6492_g_1_g,p_o6492_g_1_b,p_o6492_g_1_a), ((x-p_o6492_g_0_pos)/(p_o6492_g_1_pos-p_o6492_g_0_pos)));\n  }\n  return vec4(p_o6492_g_1_r,p_o6492_g_1_g,p_o6492_g_1_b,p_o6492_g_1_a);\n}\nfloat o6454_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\nvec4 o6487_0_rect = bricks_rb((((p).yz+vec2(0.5))-vec2(p_o6491_translate_x, p_o6491_translate_y)), vec2(p_o6487_columns, p_o6487_rows), p_o6487_repeat, p_o6487_row_offset);\nvec4 o6487_0 = brick((((p).yz+vec2(0.5))-vec2(p_o6491_translate_x, p_o6491_translate_y)), o6487_0_rect.xy, o6487_0_rect.zw, p_o6487_mortar*1.0, p_o6487_round*1.0, max(0.001, p_o6487_bevel*1.0));\nvec3 o6487_1_2_rgb = brick_random_color(o6487_0_rect.xy, o6487_0_rect.zw, float((seed_o6487+_seed_variation_)));\nvec3 o6468_0_out = vec3(o6468_bc(o6468_fbm((vec3(p_o6488_f,(transform2((((p).yz+vec2(0.5))-vec2(p_o6491_translate_x, p_o6491_translate_y)), vec2(p_o6489_translate_x*(2.0*(dot(o6487_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o6489_translate_y*(2.0*(dot(o6487_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o6489_rotate*0.01745329251*(2.0*(dot(o6487_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o6489_scale_x*(2.0*1.0-1.0), p_o6489_scale_y*(2.0*1.0-1.0)))).x,(transform2((((p).yz+vec2(0.5))-vec2(p_o6491_translate_x, p_o6491_translate_y)), vec2(p_o6489_translate_x*(2.0*(dot(o6487_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o6489_translate_y*(2.0*(dot(o6487_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o6489_rotate*0.01745329251*(2.0*(dot(o6487_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o6489_scale_x*(2.0*1.0-1.0), p_o6489_scale_y*(2.0*1.0-1.0)))).y)).xyz*vec3(p_o6468_scale_x,p_o6468_scale_y,p_o6468_scale_z)*0.5*p_o6468_scale+vec3(p_o6468_transx,p_o6468_transy,p_o6468_transz),p_o6468_persistence, _seed_variation_)*0.5+0.5,p_o6468_contrast,p_o6468_brightness, _seed_variation_));vec3 o6468_0_1_tex3d = clamp(o6468_0_out,vec3(0),vec3(1));\nvec3 o6473_0_1_tex3d = o6473_g_gradient_fct(dot(o6468_0_1_tex3d, vec3(1.0))/3.0).rgb;\nvec3 o6488_0_1_rgb = o6473_0_1_tex3d.rgb;\nvec4 o6489_0_1_rgba = vec4(o6488_0_1_rgb, 1.0);\nvec4 o6491_0_1_rgba = o6489_0_1_rgba;\nvec3 o6490_0_1_tex3d = ((o6491_0_1_rgba).rgb);\nvec3 o6492_0_1_tex3d = o6492_g_gradient_fct(dot(o6490_0_1_tex3d, vec3(1.0))/3.0).rgb;\n\nreturn (dot(o6492_0_1_tex3d, vec3(1.0))/3.0);\n}\nvec3 o6454_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o6454_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o6454_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6454_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o6459_X = 1.000000000;\nconst float p_o6459_Y = 0.260000000;\nconst float p_o6459_Z = 0.260000000;\nconst float p_o6459_RepX = 1.000000000;\nconst float p_o6459_RepY = 24.000000000;\nconst float p_o6459_RepZ = 24.000000000;\nconst float p_o6458_sx = 0.050000000;\nconst float p_o6458_sy = 0.235000000;\nconst float p_o6458_sz = 0.235000000;\nconst float p_o6458_r = 0.020000000;\nfloat o6454_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o6458_0_q = abs((opRepLim((p),vec3(p_o6459_X,p_o6459_Y,p_o6459_Z)*2.0,vec3(p_o6459_RepX-1.0,p_o6459_RepY-1.0,p_o6459_RepZ-1.0)))) - vec3(p_o6458_sx, p_o6458_sy, p_o6458_sz);\nfloat o6458_0_1_sdf3d = length(max(o6458_0_q,0.0))+min(max(o6458_0_q.x,max(o6458_0_q.y,o6458_0_q.z)),0.0)-p_o6458_r;\nfloat o6459_0_1_sdf3d = o6458_0_1_sdf3d;\n\nreturn o6459_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o6454(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o6454_TranlateX,p_o6454_TranlateY,p_o6454_TranlateZ),vec3(p_o6454_RotateX,p_o6454_RotateY,p_o6454_RotateZ)*6.28318530718)/p_o6454_scale;\n\tfloat sdf=o6454_input_sdf3d(uv.xyz, _seed_variation_)*p_o6454_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o6454_AmbientOcclusion*o6454_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o6454_Alpha*o6454_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o6454_Normal*o6454_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o6454_Emission*o6454_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o6454_Roughness*o6454_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o6454_Specular*o6454_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o6454_Metallic*o6454_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o6454_BaseColor_r, p_o6454_BaseColor_g, p_o6454_BaseColor_b, p_o6454_BaseColor_a).rgb*o6454_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o6465_x = -0.049000000;\nconst float p_o6465_y = 0.000000000;\nconst float p_o6465_z = 0.000000000;\nconst float p_o6460_BaseColor_r = 0.324218988;\nconst float p_o6460_BaseColor_g = 0.324218988;\nconst float p_o6460_BaseColor_b = 0.324218988;\nconst float p_o6460_BaseColor_a = 1.000000000;\nconst float p_o6460_Metallic = 0.000000000;\nconst float p_o6460_Specular = 0.000000000;\nconst float p_o6460_Roughness = 1.000000000;\nconst float p_o6460_Emission = 0.000000000;\nconst float p_o6460_Normal = 0.000000000;\nconst float p_o6460_Alpha = 0.000000000;\nconst float p_o6460_AmbientOcclusion = 0.000000000;\nconst float p_o6460_scale = 1.000000000;\nconst float p_o6460_TranlateX = 0.000000000;\nconst float p_o6460_TranlateY = 0.000000000;\nconst float p_o6460_TranlateZ = 0.000000000;\nconst float p_o6460_RotateX = 0.000000000;\nconst float p_o6460_RotateY = 0.000000000;\nconst float p_o6460_RotateZ = 0.000000000;\nvec3 o6460_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o6460_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6460_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6460_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o6460_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o6460_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o6460_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6460_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o6464_sx = 0.000000000;\nconst float p_o6464_sy = 6.270000000;\nconst float p_o6464_sz = 6.140000000;\nconst float p_o6464_r = 0.000000000;\nfloat o6460_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o6464_0_q = abs((p)) - vec3(p_o6464_sx, p_o6464_sy, p_o6464_sz);\nfloat o6464_0_1_sdf3d = length(max(o6464_0_q,0.0))+min(max(o6464_0_q.x,max(o6464_0_q.y,o6464_0_q.z)),0.0)-p_o6464_r;\n\nreturn o6464_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o6460(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o6460_TranlateX,p_o6460_TranlateY,p_o6460_TranlateZ),vec3(p_o6460_RotateX,p_o6460_RotateY,p_o6460_RotateZ)*6.28318530718)/p_o6460_scale;\n\tfloat sdf=o6460_input_sdf3d(uv.xyz, _seed_variation_)*p_o6460_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o6460_AmbientOcclusion*o6460_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o6460_Alpha*o6460_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o6460_Normal*o6460_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o6460_Emission*o6460_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o6460_Roughness*o6460_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o6460_Specular*o6460_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o6460_Metallic*o6460_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o6460_BaseColor_r, p_o6460_BaseColor_g, p_o6460_BaseColor_b, p_o6460_BaseColor_a).rgb*o6460_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o6507_ax = 0.000000000;\nconst float p_o6507_ay = 90.000000000;\nconst float p_o6507_az = 0.000000000;\nconst float p_o6508_BaseColor_r = 1.000000000;\nconst float p_o6508_BaseColor_g = 1.000000000;\nconst float p_o6508_BaseColor_b = 1.000000000;\nconst float p_o6508_BaseColor_a = 1.000000000;\nconst float p_o6508_Metallic = 0.000000000;\nconst float p_o6508_Specular = 0.000000000;\nconst float p_o6508_Roughness = 1.000000000;\nconst float p_o6508_Emission = 0.000000000;\nconst float p_o6508_Normal = 0.000000000;\nconst float p_o6508_Alpha = 0.000000000;\nconst float p_o6508_AmbientOcclusion = 0.000000000;\nconst float p_o6508_scale = 1.000000000;\nconst float p_o6508_TranlateX = 0.000000000;\nconst float p_o6508_TranlateY = 4.420000000;\nconst float p_o6508_TranlateZ = 0.000000000;\nconst float p_o6508_RotateX = 0.000000000;\nconst float p_o6508_RotateY = 0.000000000;\nconst float p_o6508_RotateZ = 0.000000000;\nvec3 o6508_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o6508_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6508_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6508_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o6508_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o6508_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o6508_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6508_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o6512_sx = 4.250000000;\nconst float p_o6512_sy = 0.250000000;\nconst float p_o6512_sz = 4.010000000;\nconst float p_o6512_r = 0.010000000;\nfloat o6508_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o6512_0_q = abs((p)) - vec3(p_o6512_sx, p_o6512_sy, p_o6512_sz);\nfloat o6512_0_1_sdf3d = length(max(o6512_0_q,0.0))+min(max(o6512_0_q.x,max(o6512_0_q.y,o6512_0_q.z)),0.0)-p_o6512_r;\n\nreturn o6512_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o6508(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o6508_TranlateX,p_o6508_TranlateY,p_o6508_TranlateZ),vec3(p_o6508_RotateX,p_o6508_RotateY,p_o6508_RotateZ)*6.28318530718)/p_o6508_scale;\n\tfloat sdf=o6508_input_sdf3d(uv.xyz, _seed_variation_)*p_o6508_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o6508_AmbientOcclusion*o6508_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o6508_Alpha*o6508_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o6508_Normal*o6508_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o6508_Emission*o6508_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o6508_Roughness*o6508_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o6508_Specular*o6508_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o6508_Metallic*o6508_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o6508_BaseColor_r, p_o6508_BaseColor_g, p_o6508_BaseColor_b, p_o6508_BaseColor_a).rgb*o6508_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o6572_k = 0.904000000;\nconst float p_o6565_x = 0.000000000;\nconst float p_o6565_y = -0.119530000;\nconst float p_o6565_z = 0.000000000;\nconst float p_o6566_xyz = 1.785000000;\nconst float p_o6566_x = 1.000000000;\nconst float p_o6566_y = 1.000000000;\nconst float p_o6566_z = 1.000000000;\nconst float p_o6564_ax = 0.000000000;\nconst float p_o6564_ay = 90.000000000;\nconst float p_o6564_az = 90.000000000;\nconst float p_o6557_BaseColor_r = 1.000000000;\nconst float p_o6557_BaseColor_g = 1.000000000;\nconst float p_o6557_BaseColor_b = 1.000000000;\nconst float p_o6557_BaseColor_a = 1.000000000;\nconst float p_o6557_Metallic = 0.705000000;\nconst float p_o6557_Specular = 0.917000000;\nconst float p_o6557_Roughness = 1.000000000;\nconst float p_o6557_Emission = 0.000000000;\nconst float p_o6557_Normal = 0.000000000;\nconst float p_o6557_Alpha = 0.000000000;\nconst float p_o6557_AmbientOcclusion = 0.000000000;\nconst float p_o6557_scale = 1.000000000;\nconst float p_o6557_TranlateX = 0.000000000;\nconst float p_o6557_TranlateY = 0.000000000;\nconst float p_o6557_TranlateZ = 0.000000000;\nconst float p_o6557_RotateX = 0.000000000;\nconst float p_o6557_RotateY = 0.000000000;\nconst float p_o6557_RotateZ = 0.000000000;\nconst float p_o6543_translate_x = -0.530000000;\nconst float p_o6543_translate_y = -0.010000000;\nconst float p_o6541_translate_x = 2.180000000;\nconst float p_o6541_translate_y = 4.575000000;\nconst float p_o6541_rotate = 456.220000000;\nconst float p_o6541_scale_x = 1.000000000;\nconst float p_o6541_scale_y = 1.000000000;\nconst float seed_o6540 = 0.692989000;\nconst float p_o6540_repeat = 1.000000000;\nconst float p_o6540_rows = 1.930000000;\nconst float p_o6540_columns = 1.930000000;\nconst float p_o6540_row_offset = 1.000000000;\nconst float p_o6540_mortar = 0.000000000;\nconst float p_o6540_bevel = 0.000000000;\nconst float p_o6540_round = 0.000000000;\nconst float p_o6540_corner = 0.000000000;\nconst float p_o6539_f = 0.000000000;\nconst float p_o6525_g_0_pos = 0.081110000;\nconst float p_o6525_g_0_r = 0.000000000;\nconst float p_o6525_g_0_g = 0.000000000;\nconst float p_o6525_g_0_b = 0.000000000;\nconst float p_o6525_g_0_a = 1.000000000;\nconst float p_o6525_g_1_pos = 0.390909000;\nconst float p_o6525_g_1_r = 0.796875000;\nconst float p_o6525_g_1_g = 0.604830027;\nconst float p_o6525_g_1_b = 0.333068997;\nconst float p_o6525_g_1_a = 1.000000000;\nconst float p_o6525_g_2_pos = 0.772019000;\nconst float p_o6525_g_2_r = 0.000000000;\nconst float p_o6525_g_2_g = 0.000000000;\nconst float p_o6525_g_2_b = 0.000000000;\nconst float p_o6525_g_2_a = 1.000000000;\nvec4 o6525_g_gradient_fct(float x) {\n  if (x < p_o6525_g_0_pos) {\n    return vec4(p_o6525_g_0_r,p_o6525_g_0_g,p_o6525_g_0_b,p_o6525_g_0_a);\n  } else if (x < p_o6525_g_1_pos) {\n    return mix(vec4(p_o6525_g_0_r,p_o6525_g_0_g,p_o6525_g_0_b,p_o6525_g_0_a), vec4(p_o6525_g_1_r,p_o6525_g_1_g,p_o6525_g_1_b,p_o6525_g_1_a), ((x-p_o6525_g_0_pos)/(p_o6525_g_1_pos-p_o6525_g_0_pos)));\n  } else if (x < p_o6525_g_2_pos) {\n    return mix(vec4(p_o6525_g_1_r,p_o6525_g_1_g,p_o6525_g_1_b,p_o6525_g_1_a), vec4(p_o6525_g_2_r,p_o6525_g_2_g,p_o6525_g_2_b,p_o6525_g_2_a), ((x-p_o6525_g_1_pos)/(p_o6525_g_2_pos-p_o6525_g_1_pos)));\n  }\n  return vec4(p_o6525_g_2_r,p_o6525_g_2_g,p_o6525_g_2_b,p_o6525_g_2_a);\n}\nconst float p_o6514_scale = 2.706000000;\nconst float p_o6514_scale_x = 1.000000000;\nconst float p_o6514_scale_y = 1.000000000;\nconst float p_o6514_scale_z = 1.000000000;\nconst float p_o6514_transx = 0.000000000;\nconst float p_o6514_transy = 0.000000000;\nconst float p_o6514_transz = 0.000000000;\nconst float p_o6514_persistence = 0.500000000;\nconst float p_o6514_brightness = 0.000000000;\nconst float p_o6514_contrast = 14.000000000;\nfloat o6514_fbm(vec3 coord, float persistence, float _seed_variation_) {\n\tfloat normalize_factor = 0.0;\n\tfloat value = 0.0;\n\tfloat scale = 1.0;\n\tfloat size = 1.0;\n\tfor (int i = 0; i < 12; i++) {\n\t\tvalue += XsX3zB_oct_simplex3d(coord*size) * scale;\n\t\tnormalize_factor += scale;\n\t\tsize *= 2.0;\n\t\tscale *= persistence;\n\t}\n\treturn value / normalize_factor;\n}\n\nfloat o6514_bc(float f,float contrast, float brightness, float _seed_variation_) {\n\treturn f*contrast+brightness+0.5-contrast*0.5;\n}\nvec3 o6557_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\nvec4 o6540_0_rect = bricks_rb((((p).yz+vec2(0.5))-vec2(p_o6543_translate_x, p_o6543_translate_y)), vec2(p_o6540_columns, p_o6540_rows), p_o6540_repeat, p_o6540_row_offset);\nvec4 o6540_0 = brick((((p).yz+vec2(0.5))-vec2(p_o6543_translate_x, p_o6543_translate_y)), o6540_0_rect.xy, o6540_0_rect.zw, p_o6540_mortar*1.0, p_o6540_round*1.0, max(0.001, p_o6540_bevel*1.0));\nvec3 o6540_1_2_rgb = brick_random_color(o6540_0_rect.xy, o6540_0_rect.zw, float((seed_o6540+_seed_variation_)));\nvec3 o6514_0_out = vec3(o6514_bc(o6514_fbm((vec3(p_o6539_f,(transform2((((p).yz+vec2(0.5))-vec2(p_o6543_translate_x, p_o6543_translate_y)), vec2(p_o6541_translate_x*(2.0*(dot(o6540_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o6541_translate_y*(2.0*(dot(o6540_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o6541_rotate*0.01745329251*(2.0*(dot(o6540_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o6541_scale_x*(2.0*1.0-1.0), p_o6541_scale_y*(2.0*1.0-1.0)))).x,(transform2((((p).yz+vec2(0.5))-vec2(p_o6543_translate_x, p_o6543_translate_y)), vec2(p_o6541_translate_x*(2.0*(dot(o6540_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o6541_translate_y*(2.0*(dot(o6540_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o6541_rotate*0.01745329251*(2.0*(dot(o6540_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o6541_scale_x*(2.0*1.0-1.0), p_o6541_scale_y*(2.0*1.0-1.0)))).y)).xyz*vec3(p_o6514_scale_x,p_o6514_scale_y,p_o6514_scale_z)*0.5*p_o6514_scale+vec3(p_o6514_transx,p_o6514_transy,p_o6514_transz),p_o6514_persistence, _seed_variation_)*0.5+0.5,p_o6514_contrast,p_o6514_brightness, _seed_variation_));vec3 o6514_0_1_tex3d = clamp(o6514_0_out,vec3(0),vec3(1));\nvec3 o6525_0_1_tex3d = o6525_g_gradient_fct(dot(o6514_0_1_tex3d, vec3(1.0))/3.0).rgb;\nvec3 o6539_0_1_rgb = o6525_0_1_tex3d.rgb;\nvec4 o6541_0_1_rgba = vec4(o6539_0_1_rgb, 1.0);\nvec4 o6543_0_1_rgba = o6541_0_1_rgba;\nvec3 o6542_0_1_tex3d = ((o6543_0_1_rgba).rgb);\n\nreturn o6542_0_1_tex3d;\n}\nfloat o6557_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6557_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o6544_g_0_pos = 0.000000000;\nconst float p_o6544_g_0_r = 0.066405997;\nconst float p_o6544_g_0_g = 0.066405997;\nconst float p_o6544_g_0_b = 0.066405997;\nconst float p_o6544_g_0_a = 1.000000000;\nconst float p_o6544_g_1_pos = 1.000000000;\nconst float p_o6544_g_1_r = 1.000000000;\nconst float p_o6544_g_1_g = 1.000000000;\nconst float p_o6544_g_1_b = 1.000000000;\nconst float p_o6544_g_1_a = 1.000000000;\nvec4 o6544_g_gradient_fct(float x) {\n  if (x < p_o6544_g_0_pos) {\n    return vec4(p_o6544_g_0_r,p_o6544_g_0_g,p_o6544_g_0_b,p_o6544_g_0_a);\n  } else if (x < p_o6544_g_1_pos) {\n    return mix(vec4(p_o6544_g_0_r,p_o6544_g_0_g,p_o6544_g_0_b,p_o6544_g_0_a), vec4(p_o6544_g_1_r,p_o6544_g_1_g,p_o6544_g_1_b,p_o6544_g_1_a), ((x-p_o6544_g_0_pos)/(p_o6544_g_1_pos-p_o6544_g_0_pos)));\n  }\n  return vec4(p_o6544_g_1_r,p_o6544_g_1_g,p_o6544_g_1_b,p_o6544_g_1_a);\n}\nfloat o6557_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\nvec4 o6540_0_rect = bricks_rb((((p).yz+vec2(0.5))-vec2(p_o6543_translate_x, p_o6543_translate_y)), vec2(p_o6540_columns, p_o6540_rows), p_o6540_repeat, p_o6540_row_offset);\nvec4 o6540_0 = brick((((p).yz+vec2(0.5))-vec2(p_o6543_translate_x, p_o6543_translate_y)), o6540_0_rect.xy, o6540_0_rect.zw, p_o6540_mortar*1.0, p_o6540_round*1.0, max(0.001, p_o6540_bevel*1.0));\nvec3 o6540_1_2_rgb = brick_random_color(o6540_0_rect.xy, o6540_0_rect.zw, float((seed_o6540+_seed_variation_)));\nvec3 o6514_0_out = vec3(o6514_bc(o6514_fbm((vec3(p_o6539_f,(transform2((((p).yz+vec2(0.5))-vec2(p_o6543_translate_x, p_o6543_translate_y)), vec2(p_o6541_translate_x*(2.0*(dot(o6540_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o6541_translate_y*(2.0*(dot(o6540_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o6541_rotate*0.01745329251*(2.0*(dot(o6540_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o6541_scale_x*(2.0*1.0-1.0), p_o6541_scale_y*(2.0*1.0-1.0)))).x,(transform2((((p).yz+vec2(0.5))-vec2(p_o6543_translate_x, p_o6543_translate_y)), vec2(p_o6541_translate_x*(2.0*(dot(o6540_1_2_rgb, vec3(1.0))/3.0)-1.0), p_o6541_translate_y*(2.0*(dot(o6540_1_2_rgb, vec3(1.0))/3.0)-1.0)), p_o6541_rotate*0.01745329251*(2.0*(dot(o6540_1_2_rgb, vec3(1.0))/3.0)-1.0), vec2(p_o6541_scale_x*(2.0*1.0-1.0), p_o6541_scale_y*(2.0*1.0-1.0)))).y)).xyz*vec3(p_o6514_scale_x,p_o6514_scale_y,p_o6514_scale_z)*0.5*p_o6514_scale+vec3(p_o6514_transx,p_o6514_transy,p_o6514_transz),p_o6514_persistence, _seed_variation_)*0.5+0.5,p_o6514_contrast,p_o6514_brightness, _seed_variation_));vec3 o6514_0_1_tex3d = clamp(o6514_0_out,vec3(0),vec3(1));\nvec3 o6525_0_1_tex3d = o6525_g_gradient_fct(dot(o6514_0_1_tex3d, vec3(1.0))/3.0).rgb;\nvec3 o6539_0_1_rgb = o6525_0_1_tex3d.rgb;\nvec4 o6541_0_1_rgba = vec4(o6539_0_1_rgb, 1.0);\nvec4 o6543_0_1_rgba = o6541_0_1_rgba;\nvec3 o6542_0_1_tex3d = ((o6543_0_1_rgba).rgb);\nvec3 o6544_0_1_tex3d = o6544_g_gradient_fct(dot(o6542_0_1_tex3d, vec3(1.0))/3.0).rgb;\n\nreturn (dot(o6544_0_1_tex3d, vec3(1.0))/3.0);\n}\nvec3 o6557_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o6557_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o6557_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6557_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o6561_X = 1.000000000;\nconst float p_o6561_Y = 0.260000000;\nconst float p_o6561_Z = 0.260000000;\nconst float p_o6561_RepX = 1.000000000;\nconst float p_o6561_RepY = 24.000000000;\nconst float p_o6561_RepZ = 24.000000000;\nconst float p_o6520_sx = 0.050000000;\nconst float p_o6520_sy = 0.235000000;\nconst float p_o6520_sz = 0.235000000;\nconst float p_o6520_r = 0.020000000;\nfloat o6557_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o6520_0_q = abs((opRepLim((p),vec3(p_o6561_X,p_o6561_Y,p_o6561_Z)*2.0,vec3(p_o6561_RepX-1.0,p_o6561_RepY-1.0,p_o6561_RepZ-1.0)))) - vec3(p_o6520_sx, p_o6520_sy, p_o6520_sz);\nfloat o6520_0_1_sdf3d = length(max(o6520_0_q,0.0))+min(max(o6520_0_q.x,max(o6520_0_q.y,o6520_0_q.z)),0.0)-p_o6520_r;\nfloat o6561_0_1_sdf3d = o6520_0_1_sdf3d;\n\nreturn o6561_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o6557(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o6557_TranlateX,p_o6557_TranlateY,p_o6557_TranlateZ),vec3(p_o6557_RotateX,p_o6557_RotateY,p_o6557_RotateZ)*6.28318530718)/p_o6557_scale;\n\tfloat sdf=o6557_input_sdf3d(uv.xyz, _seed_variation_)*p_o6557_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o6557_AmbientOcclusion*o6557_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o6557_Alpha*o6557_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o6557_Normal*o6557_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o6557_Emission*o6557_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o6557_Roughness*o6557_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o6557_Specular*o6557_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o6557_Metallic*o6557_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o6557_BaseColor_r, p_o6557_BaseColor_g, p_o6557_BaseColor_b, p_o6557_BaseColor_a).rgb*o6557_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o6562_x = -0.058000000;\nconst float p_o6562_y = 0.000000000;\nconst float p_o6562_z = 0.000000000;\nconst float p_o6521_BaseColor_r = 0.324218988;\nconst float p_o6521_BaseColor_g = 0.324218988;\nconst float p_o6521_BaseColor_b = 0.324218988;\nconst float p_o6521_BaseColor_a = 1.000000000;\nconst float p_o6521_Metallic = 0.000000000;\nconst float p_o6521_Specular = 0.000000000;\nconst float p_o6521_Roughness = 1.000000000;\nconst float p_o6521_Emission = 0.000000000;\nconst float p_o6521_Normal = 0.000000000;\nconst float p_o6521_Alpha = 0.000000000;\nconst float p_o6521_AmbientOcclusion = 0.000000000;\nconst float p_o6521_scale = 1.000000000;\nconst float p_o6521_TranlateX = 0.000000000;\nconst float p_o6521_TranlateY = 0.000000000;\nconst float p_o6521_TranlateZ = 0.000000000;\nconst float p_o6521_RotateX = 0.000000000;\nconst float p_o6521_RotateY = 0.000000000;\nconst float p_o6521_RotateZ = 0.000000000;\nvec3 o6521_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o6521_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6521_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6521_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o6521_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o6521_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o6521_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6521_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o6519_sx = 0.000000000;\nconst float p_o6519_sy = 6.270000000;\nconst float p_o6519_sz = 6.140000000;\nconst float p_o6519_r = 0.000000000;\nfloat o6521_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o6519_0_q = abs((p)) - vec3(p_o6519_sx, p_o6519_sy, p_o6519_sz);\nfloat o6519_0_1_sdf3d = length(max(o6519_0_q,0.0))+min(max(o6519_0_q.x,max(o6519_0_q.y,o6519_0_q.z)),0.0)-p_o6519_r;\n\nreturn o6519_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o6521(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o6521_TranlateX,p_o6521_TranlateY,p_o6521_TranlateZ),vec3(p_o6521_RotateX,p_o6521_RotateY,p_o6521_RotateZ)*6.28318530718)/p_o6521_scale;\n\tfloat sdf=o6521_input_sdf3d(uv.xyz, _seed_variation_)*p_o6521_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o6521_AmbientOcclusion*o6521_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o6521_Alpha*o6521_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o6521_Normal*o6521_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o6521_Emission*o6521_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o6521_Roughness*o6521_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o6521_Specular*o6521_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o6521_Metallic*o6521_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o6521_BaseColor_r, p_o6521_BaseColor_g, p_o6521_BaseColor_b, p_o6521_BaseColor_a).rgb*o6521_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o6513_x = 0.000000000;\nconst float p_o6513_y = 1.071000000;\nconst float p_o6513_z = 0.000000000;\n//const float p_o6453_angle = -67.807000000;\nconst float p_o6453_correction = 0.000000000;\nconst float p_o6446_k = 0.062000000;\nconst float p_o6447_BaseColor_r = 0.000000000;\nconst float p_o6447_BaseColor_g = 0.000000000;\nconst float p_o6447_BaseColor_b = 0.000000000;\nconst float p_o6447_BaseColor_a = 1.000000000;\nconst float p_o6447_Metallic = 0.250000000;\nconst float p_o6447_Specular = 1.000000000;\nconst float p_o6447_Roughness = 0.000000000;\nconst float p_o6447_Emission = 0.000000000;\nconst float p_o6447_Normal = 0.000000000;\nconst float p_o6447_Alpha = 0.000000000;\nconst float p_o6447_AmbientOcclusion = 0.000000000;\nconst float p_o6447_scale = 0.306000000;\nconst float p_o6447_TranlateX = 0.000000000;\nconst float p_o6447_TranlateY = 0.000000000;\nconst float p_o6447_TranlateZ = 0.000000000;\nconst float p_o6447_RotateX = 0.000000000;\nconst float p_o6447_RotateY = 0.000000000;\nconst float p_o6447_RotateZ = 0.000000000;\nvec3 o6447_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o6447_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6447_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6447_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o6447_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o6447_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o6447_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6447_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o6451_X = 0.500000000;\nconst float p_o6451_Y = 0.500000000;\nconst float p_o6451_Z = 0.500000000;\nconst float p_o6451_RepX = 14.000000000;\nconst float p_o6451_RepY = 14.000000000;\nconst float p_o6451_RepZ = 17.000000000;\nconst float p_o6452_r = 0.320000000;\nfloat o6447_input_sdf3d(vec3 p, float _seed_variation_) {\nfloat o6452_0_1_sdf3d = length((opRepLim((p),vec3(p_o6451_X,p_o6451_Y,p_o6451_Z)*2.0,vec3(p_o6451_RepX-1.0,p_o6451_RepY-1.0,p_o6451_RepZ-1.0))))-p_o6452_r;\nfloat o6451_0_1_sdf3d = o6452_0_1_sdf3d;\n\nreturn o6451_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o6447(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o6447_TranlateX,p_o6447_TranlateY,p_o6447_TranlateZ),vec3(p_o6447_RotateX,p_o6447_RotateY,p_o6447_RotateZ)*6.28318530718)/p_o6447_scale;\n\tfloat sdf=o6447_input_sdf3d(uv.xyz, _seed_variation_)*p_o6447_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o6447_AmbientOcclusion*o6447_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o6447_Alpha*o6447_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o6447_Normal*o6447_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o6447_Emission*o6447_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o6447_Roughness*o6447_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o6447_Specular*o6447_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o6447_Metallic*o6447_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o6447_BaseColor_r, p_o6447_BaseColor_g, p_o6447_BaseColor_b, p_o6447_BaseColor_a).rgb*o6447_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o6435_BaseColor_r = 0.159263998;\nconst float p_o6435_BaseColor_g = 1.000000000;\nconst float p_o6435_BaseColor_b = 0.000000000;\nconst float p_o6435_BaseColor_a = 1.000000000;\nconst float p_o6435_Metallic = 0.547000000;\nconst float p_o6435_Specular = 0.500000000;\nconst float p_o6435_Roughness = 0.059000000;\nconst float p_o6435_Emission = 0.000000000;\nconst float p_o6435_Normal = 0.000000000;\nconst float p_o6435_Alpha = 0.000000000;\nconst float p_o6435_AmbientOcclusion = 0.000000000;\nconst float p_o6435_scale = 1.000000000;\nconst float p_o6435_TranlateX = 0.000000000;\nconst float p_o6435_TranlateY = 0.000000000;\nconst float p_o6435_TranlateZ = 0.000000000;\nconst float p_o6435_RotateX = 0.000000000;\nconst float p_o6435_RotateY = -0.061000000;\nconst float p_o6435_RotateZ = 0.000000000;\nvec3 o6435_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o6435_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6435_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6435_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o6435_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o6435_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o6435_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6435_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o6445_sx = 0.170000000;\nconst float p_o6445_sy = 0.240000000;\nconst float p_o6445_sz = 1.840000000;\nconst float p_o6445_r = 0.280000000;\nfloat o6435_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o6445_0_q = abs((p)) - vec3(p_o6445_sx, p_o6445_sy, p_o6445_sz);\nfloat o6445_0_1_sdf3d = length(max(o6445_0_q,0.0))+min(max(o6445_0_q.x,max(o6445_0_q.y,o6445_0_q.z)),0.0)-p_o6445_r;\n\nreturn o6445_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o6435(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o6435_TranlateX,p_o6435_TranlateY,p_o6435_TranlateZ),vec3(p_o6435_RotateX,p_o6435_RotateY,p_o6435_RotateZ)*6.28318530718)/p_o6435_scale;\n\tfloat sdf=o6435_input_sdf3d(uv.xyz, _seed_variation_)*p_o6435_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o6435_AmbientOcclusion*o6435_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o6435_Alpha*o6435_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o6435_Normal*o6435_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o6435_Emission*o6435_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o6435_Roughness*o6435_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o6435_Specular*o6435_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o6435_Metallic*o6435_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o6435_BaseColor_r, p_o6435_BaseColor_g, p_o6435_BaseColor_b, p_o6435_BaseColor_a).rgb*o6435_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}const float p_o6567_BaseColor_r = 1.000000000;\nconst float p_o6567_BaseColor_g = 1.000000000;\nconst float p_o6567_BaseColor_b = 1.000000000;\nconst float p_o6567_BaseColor_a = 1.000000000;\nconst float p_o6567_Metallic = 1.000000000;\nconst float p_o6567_Specular = 0.900000000;\nconst float p_o6567_Roughness = 0.000000000;\nconst float p_o6567_Emission = 0.000000000;\nconst float p_o6567_Normal = 0.000000000;\nconst float p_o6567_Alpha = 0.000000000;\nconst float p_o6567_AmbientOcclusion = 0.000000000;\nconst float p_o6567_scale = 1.000000000;\nconst float p_o6567_TranlateX = 3.426000000;\nconst float p_o6567_TranlateY = 1.904000000;\nconst float p_o6567_TranlateZ = 0.000000000;\nconst float p_o6567_RotateX = 0.000000000;\nconst float p_o6567_RotateY = 0.000000000;\nconst float p_o6567_RotateZ = 0.000000000;\nvec3 o6567_input_BaseColor_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0);\n}\nfloat o6567_input_Metallic_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6567_input_Specular_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6567_input_Roughness_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nvec3 o6567_input_Emission_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(1.0,1.0,1.0);\n}\nvec3 o6567_input_Normal_tex3d(vec4 p, float _seed_variation_) {\n\nreturn vec3(0.0,1.0,0.0);\n}\nfloat o6567_input_Alpha_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nfloat o6567_input_AmbientOcclusion_tex3d(vec4 p, float _seed_variation_) {\n\nreturn 1.0;\n}\nconst float p_o6571_sx = 0.030000000;\nconst float p_o6571_sy = 1.620000000;\nconst float p_o6571_sz = 2.540000000;\nconst float p_o6571_r = 0.010000000;\nfloat o6567_input_sdf3d(vec3 p, float _seed_variation_) {\nvec3 o6571_0_q = abs((p)) - vec3(p_o6571_sx, p_o6571_sy, p_o6571_sz);\nfloat o6571_0_1_sdf3d = length(max(o6571_0_q,0.0))+min(max(o6571_0_q.x,max(o6571_0_q.y,o6571_0_q.z)),0.0)-p_o6571_r;\n\nreturn o6571_0_1_sdf3d;\n}\n// 0 - SDF                    (0,0,0,sdf)\n// 1 - BaseColor              (r,g,b,sdf) linear (0-1) \n// 2 - Metallic               (v,0,0,sdf)\n// 4 - Specular               (v,0,0,sdf)\n// 5 - Roughness              (v,0,0,sdf)\n//13 - Emission\t              (r,g,b,sdf) linear (0-infinite)\n//14 - Normal                 (x,y,z,sdf)\n//15 - Alpha                  (v,0,0,sdf)\n//19 - Ambient Occlusion      (v,0,0,sdf) \n//999 - Table ID - Identifies this table (0,0,0,0)\n\nvec4 PBRObjectMaker_o6567(vec4 uv, float _seed_variation_) {\n    uv.xyz=MFSDF_Obj_Maker_rotate3d(uv.xyz-vec3(p_o6567_TranlateX,p_o6567_TranlateY,p_o6567_TranlateZ),vec3(p_o6567_RotateX,p_o6567_RotateY,p_o6567_RotateZ)*6.28318530718)/p_o6567_scale;\n\tfloat sdf=o6567_input_sdf3d(uv.xyz, _seed_variation_)*p_o6567_scale;\n\t//19 - Ambient Occlusion\n\tif (uv.w>18.5) {\n\t\treturn vec4(p_o6567_AmbientOcclusion*o6567_input_AmbientOcclusion_tex3d(vec4(uv.xyz,19.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//15 - Alpha\n\tif (uv.w>14.5) {\n\t\treturn vec4(p_o6567_Alpha*o6567_input_Alpha_tex3d(vec4(uv.xyz,15.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//14 - Normal\n\tif (uv.w>13.5) {\n\t\treturn vec4(p_o6567_Normal*o6567_input_Normal_tex3d(vec4(uv.xyz,14.0), _seed_variation_),sdf);\n\t} else\n\t//13 - Emission\n\tif (uv.w>12.5) {\n\t\treturn vec4(p_o6567_Emission*o6567_input_Emission_tex3d(vec4(uv.xyz,13.0), _seed_variation_),sdf);\n\t} else\n\t//5 - Roughness\n\tif (uv.w>4.5) {\n\t\treturn vec4(p_o6567_Roughness*o6567_input_Roughness_tex3d(vec4(uv.xyz,5.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//4 - Specular\n\tif (uv.w>3.5) {\n\t\treturn vec4(p_o6567_Specular*o6567_input_Specular_tex3d(vec4(uv.xyz,4.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//2 - Metallic\n\tif (uv.w>1.5) {\n\t\treturn vec4(p_o6567_Metallic*o6567_input_Metallic_tex3d(vec4(uv.xyz,2.0), _seed_variation_),0.0,0.0,sdf);\n\t} else\n\t//1 - BaseColor\n\tif (uv.w>0.5){\n\t\treturn vec4(vec4(p_o6567_BaseColor_r, p_o6567_BaseColor_g, p_o6567_BaseColor_b, p_o6567_BaseColor_a).rgb*o6567_input_BaseColor_tex3d(vec4(uv.xyz,1.0), _seed_variation_),sdf);\n\t} else\n\t//0 - SDF\n\t{\n\t\treturn vec4(vec3(0),sdf);\n\t}\n}vec4 o6428_input_mfsdf(vec4 p, float _seed_variation_) {\nvec4 o6441_0_1_v4v4 = PBRObjectMaker_o6441((p), _seed_variation_);\nvec4 o6454_0_1_v4v4 = PBRObjectMaker_o6454((vec4((p).xyz-vec3(p_o6466_x, p_o6466_y, p_o6466_z),(p).w)), _seed_variation_);\nvec4 o6460_0_1_v4v4 = PBRObjectMaker_o6460((vec4((vec4((p).xyz-vec3(p_o6466_x, p_o6466_y, p_o6466_z),(p).w)).xyz-vec3(p_o6465_x, p_o6465_y, p_o6465_z),(vec4((p).xyz-vec3(p_o6466_x, p_o6466_y, p_o6466_z),(p).w)).w)), _seed_variation_);\nvec4 o6465_0_1_v4v4 = o6460_0_1_v4v4;\nvec4 o6467_0_1_v4v4 = sdf3dc_union(o6454_0_1_v4v4, o6465_0_1_v4v4);\nvec4 o6466_0_1_v4v4 = o6467_0_1_v4v4;\nvec4 o6454_0_3_v4v4 = PBRObjectMaker_o6454((vec4((vec4(vec3(abs((p).x),(p).yz),(p).w)).xyz-vec3(p_o6466_x, p_o6466_y, p_o6466_z),(vec4(vec3(abs((p).x),(p).yz),(p).w)).w)), _seed_variation_);\nvec4 o6460_0_3_v4v4 = PBRObjectMaker_o6460((vec4((vec4((vec4(vec3(abs((p).x),(p).yz),(p).w)).xyz-vec3(p_o6466_x, p_o6466_y, p_o6466_z),(vec4(vec3(abs((p).x),(p).yz),(p).w)).w)).xyz-vec3(p_o6465_x, p_o6465_y, p_o6465_z),(vec4((vec4(vec3(abs((p).x),(p).yz),(p).w)).xyz-vec3(p_o6466_x, p_o6466_y, p_o6466_z),(vec4(vec3(abs((p).x),(p).yz),(p).w)).w)).w)), _seed_variation_);\nvec4 o6465_0_3_v4v4 = o6460_0_3_v4v4;\nvec4 o6467_0_3_v4v4 = sdf3dc_union(o6454_0_3_v4v4, o6465_0_3_v4v4);\nvec4 o6466_0_3_v4v4 = o6467_0_3_v4v4;\nvec4 o6506_0_1_v4v4 = o6466_0_3_v4v4;\nvec4 o6454_0_5_v4v4 = PBRObjectMaker_o6454((vec4((vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).w)).xyz-vec3(p_o6466_x, p_o6466_y, p_o6466_z),(vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).w)).w)), _seed_variation_);\nvec4 o6460_0_5_v4v4 = PBRObjectMaker_o6460((vec4((vec4((vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).w)).xyz-vec3(p_o6466_x, p_o6466_y, p_o6466_z),(vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).w)).w)).xyz-vec3(p_o6465_x, p_o6465_y, p_o6465_z),(vec4((vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).w)).xyz-vec3(p_o6466_x, p_o6466_y, p_o6466_z),(vec4(vec3(abs((vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).x),(vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).yz),(vec4(v4v4_rotate((p).xyz, -vec3(p_o6507_ax, p_o6507_ay, p_o6507_az)*0.01745329251), (p).w)).w)).w)).w)), _seed_variation_);\nvec4 o6465_0_5_v4v4 = o6460_0_5_v4v4;\nvec4 o6467_0_5_v4v4 = sdf3dc_union(o6454_0_5_v4v4, o6465_0_5_v4v4);\nvec4 o6466_0_5_v4v4 = o6467_0_5_v4v4;\nvec4 o6506_0_3_v4v4 = o6466_0_5_v4v4;\nvec4 o6507_0_1_v4v4 = o6506_0_3_v4v4;\nvec4 o6508_0_1_v4v4 = PBRObjectMaker_o6508((p), _seed_variation_);\nvec4 o6557_0_1_v4v4 = PBRObjectMaker_o6557((vec4(v4v4_rotate((vec4((vec4((p).xyz-vec3(p_o6565_x, p_o6565_y, p_o6565_z),(p).w)).xyz/vec3(p_o6566_x, p_o6566_y, p_o6566_z)/p_o6566_xyz,(vec4((p).xyz-vec3(p_o6565_x, p_o6565_y, p_o6565_z),(p).w)).w)).xyz, -vec3(p_o6564_ax, p_o6564_ay, p_o6564_az)*0.01745329251), (vec4((vec4((p).xyz-vec3(p_o6565_x, p_o6565_y, p_o6565_z),(p).w)).xyz/vec3(p_o6566_x, p_o6566_y, p_o6566_z)/p_o6566_xyz,(vec4((p).xyz-vec3(p_o6565_x, p_o6565_y, p_o6565_z),(p).w)).w)).w)), _seed_variation_);\nvec4 o6521_0_1_v4v4 = PBRObjectMaker_o6521((vec4((vec4(v4v4_rotate((vec4((vec4((p).xyz-vec3(p_o6565_x, p_o6565_y, p_o6565_z),(p).w)).xyz/vec3(p_o6566_x, p_o6566_y, p_o6566_z)/p_o6566_xyz,(vec4((p).xyz-vec3(p_o6565_x, p_o6565_y, p_o6565_z),(p).w)).w)).xyz, -vec3(p_o6564_ax, p_o6564_ay, p_o6564_az)*0.01745329251), (vec4((vec4((p).xyz-vec3(p_o6565_x, p_o6565_y, p_o6565_z),(p).w)).xyz/vec3(p_o6566_x, p_o6566_y, p_o6566_z)/p_o6566_xyz,(vec4((p).xyz-vec3(p_o6565_x, p_o6565_y, p_o6565_z),(p).w)).w)).w)).xyz-vec3(p_o6562_x, p_o6562_y, p_o6562_z),(vec4(v4v4_rotate((vec4((vec4((p).xyz-vec3(p_o6565_x, p_o6565_y, p_o6565_z),(p).w)).xyz/vec3(p_o6566_x, p_o6566_y, p_o6566_z)/p_o6566_xyz,(vec4((p).xyz-vec3(p_o6565_x, p_o6565_y, p_o6565_z),(p).w)).w)).xyz, -vec3(p_o6564_ax, p_o6564_ay, p_o6564_az)*0.01745329251), (vec4((vec4((p).xyz-vec3(p_o6565_x, p_o6565_y, p_o6565_z),(p).w)).xyz/vec3(p_o6566_x, p_o6566_y, p_o6566_z)/p_o6566_xyz,(vec4((p).xyz-vec3(p_o6565_x, p_o6565_y, p_o6565_z),(p).w)).w)).w)).w)), _seed_variation_);\nvec4 o6562_0_1_v4v4 = o6521_0_1_v4v4;\nvec4 o6563_0_1_v4v4 = sdf3dc_union(o6557_0_1_v4v4, o6562_0_1_v4v4);\nvec4 o6564_0_1_v4v4 = o6563_0_1_v4v4;\nvec4 o_o6566_0=o6564_0_1_v4v4;vec4 o6566_0_1_v4v4 = vec4(o_o6566_0.xyz,o_o6566_0.w*min(min(p_o6566_x, p_o6566_y), p_o6566_z)*p_o6566_xyz);\nvec4 o6565_0_1_v4v4 = o6566_0_1_v4v4;\nfloat p_o6453_angle=-67.807000000+(iMouse.y/iResolution.y)*180.0; //EDITED NEW\nvec4 o6447_0_1_v4v4 = PBRObjectMaker_o6447((vec4(twistZ((vec4((p).xyz-vec3(p_o6513_x, p_o6513_y, p_o6513_z),(p).w)).xyz,p_o6453_angle),(vec4((p).xyz-vec3(p_o6513_x, p_o6513_y, p_o6513_z),(p).w)).w)), _seed_variation_);\nvec4 o6435_0_1_v4v4 = PBRObjectMaker_o6435((vec4(twistZ((vec4((p).xyz-vec3(p_o6513_x, p_o6513_y, p_o6513_z),(p).w)).xyz,p_o6453_angle),(vec4((p).xyz-vec3(p_o6513_x, p_o6513_y, p_o6513_z),(p).w)).w)), _seed_variation_);\nvec4 o6446_0_1_v4v4 = mfsdf3d_smooth_subtraction(o6447_0_1_v4v4, o6435_0_1_v4v4,p_o6446_k);\nvec4 o6453_0_o=o6446_0_1_v4v4;vec4 o6453_0_1_v4v4 = vec4(o6453_0_o.xyz,o6453_0_o.w/(1.0+p_o6453_correction));\nvec4 o6513_0_1_v4v4 = o6453_0_1_v4v4;\nvec4 o6572_0_1_v4v4 = mfsdf3d_smooth_union(o6565_0_1_v4v4, o6513_0_1_v4v4,p_o6572_k);\nvec4 o6505_0_1_v4v4 = MFSDF_Union(o6466_0_1_v4v4,o6506_0_1_v4v4,o6507_0_1_v4v4,o6508_0_1_v4v4,o6572_0_1_v4v4,o6572_0_1_v4v4,vec4(0.0,0.0,0.0,9999999.0),vec4(0.0,0.0,0.0,9999999.0));\nvec4 o6567_0_1_v4v4 = PBRObjectMaker_o6567((p), _seed_variation_);\nvec4 o6434_0_1_v4v4 = MFSDF_Union(o6441_0_1_v4v4,o6505_0_1_v4v4,vec4(0.0,0.0,0.0,9999999.0),o6567_0_1_v4v4,vec4(0.0,0.0,0.0,9999999.0),vec4(0.0,0.0,0.0,9999999.0),vec4(0.0,0.0,0.0,9999999.0),vec4(0.0,0.0,0.0,9999999.0));\n\nreturn o6434_0_1_v4v4;\n}\nvec3 o6428_input_hdri(vec2 uv, float _seed_variation_) {\n\nreturn vec3(0.0);\n}\n\n//tetrahedron normal by PauloFalcao\nvec3 normal_o6428(vec3 p, float _seed_variation_) {  \n  const vec3 e=vec3(0.01,-0.01,0.0);\n  float v1=o6428_input_mfsdf(vec4(p+e.xyy,0.0), _seed_variation_).w;\n  float v2=o6428_input_mfsdf(vec4(p+e.yyx,0.0), _seed_variation_).w;\n  float v3=o6428_input_mfsdf(vec4(p+e.yxy,0.0), _seed_variation_).w;\n  float v4=o6428_input_mfsdf(vec4(p+e.xxx,0.0), _seed_variation_).w;\n  return normalize(vec3(v4+v1-v3-v2,v3+v4-v1-v2,v2+v4-v3-v1));\n}\n\nvoid raymarch_o6428(in vec3 o,in vec3 v,out vec3 p,inout float d, float _seed_variation_) {\n  float s;\n  for(int i=0;i<80;i++){\n    p=o+v*d;\n    s=o6428_input_mfsdf(vec4(p,0.0), _seed_variation_).w;\n    if (abs(s)<0.001) break;\n    d+=s;\n    if (d>p_o6428_MaxDistance) break;\n  } \n}\n\n/*EDITED OLD\nvec3 pathtracing_o6428(vec2 uv, float _seed_variation_) {\n\n\t// Init random\n\tvec2 rndgen=rndint_hash23(vec3(uv,iTime))*15360.0;\n    uint rngState = uint(uint(rndgen.x) * uint(1973) + uint(rndgen.y) * uint(9277) + uint(iTime*1223.0) * uint(26699)) | uint(1);\nEDITED OLD*/\n\nvec3 pathtracing_o6428(uint rngState,vec2 uv, float _seed_variation_) {\n\n\t//vec3 o=vec3(p_o6428_CamX,p_o6428_CamY,p_o6428_CamZ)*p_o6428_CamZoom;\n   \n    //EDITED NEW add mouse\n    float mx=(iMouse.x/iResolution.x)*6.0;\n\tvec3 o=vec3(p_o6428_CamX,p_o6428_CamY,p_o6428_CamZ-mx)*p_o6428_CamZoom;\n    //EDITED NEW add mouse\n    \n    vec3 t=vec3(p_o6428_LookAtX,p_o6428_LookAtY,p_o6428_LookAtZ);\n    vec3 u=vec3(0.0,1.0,0.0);\n    vec3 c=normalize(t-o);\n    vec3 cx=normalize(cross(u,c));\n    vec3 cy=normalize(cross(cx,c));\n   \n\tvec2 xy=uv-0.5;\n\n    vec3 v=normalize(c*p_o6428_CamD+cx*xy.x+cy*xy.y);\n\n    vec3 p;\n    float d=0.01;\n    vec3 rgb=vec3(1.0);\n    vec3 io=o;\n    int i;\n    for(i=0;i<5;i++){\n    \n        raymarch_o6428(io,v,p,d, _seed_variation_);\n        \n        vec3 n=normal_o6428(p, _seed_variation_);\n        \n        //View direction to tangent space\n        vec3 ot;vec3 ob;Onb(n,ot,ob);\n        vec3 vt=vec3(dot(-v,ot),dot(-v,ob),dot(-v,n));\n\t\n        if (d<p_o6428_MaxDistance){\t\n        \n        vec3 obj_Emission=o6428_input_mfsdf(vec4(p,13.0), _seed_variation_).rgb;\n        \n        if ((obj_Emission.x+obj_Emission.y+obj_Emission.z)>0.001){\n            rgb=obj_Emission*rgb;\n            break;\n        } else {\n            float s=RandomFloat01(rngState);\n\n            vec3 obj_BaseColor=o6428_input_mfsdf(vec4(p,1.0), _seed_variation_).rgb; // 1 - BaseColor  (r,g,b,sdf)\n            float obj_Metallic=o6428_input_mfsdf(vec4(p,2.0), _seed_variation_).x;   // 2 - Metallic   (v,0,0,sdf)\n            float obj_Specular=o6428_input_mfsdf(vec4(p,4.0), _seed_variation_).x;   // 4 - Specular   (v,0,0,sdf)\n            float obj_Roughness=o6428_input_mfsdf(vec4(p,5.0), _seed_variation_).x;  // 5 - Roughness  (v,0,0,sdf)\n\n            if (s>obj_Specular*obj_Specular){\n                rgb=(obj_BaseColor-obj_BaseColor*obj_Metallic)*rgb;\n                v=cosineSampleHemissphere(rngState,n);\n            } else {\n\n                float r2=obj_Roughness*obj_Roughness;\n                vec3 vndf=SampleGGXVNDF(rngState,vt,r2,r2);\n                vec3 nv=reflect(-vt,vndf);\n\n                //Sample direction back to camera space\n                nv=nv.x*ot+nv.y*ob+nv.z*n;\n\n                float FH=schlickWeight(dot(n,nv));\n                vec3 Cspec0=mix(vec3(obj_Specular*.08),obj_BaseColor,obj_Metallic);\n                vec3 Fs=mix(Cspec0,vec3(1.0),FH);\n                rgb=Fs*rgb;\n                \n                v=nv;\n            }\n            io=p;\n            d=0.01;\n        }\n        } else {\n        rgb*=o6428_input_hdri(equirectangularMap(v.xzy), _seed_variation_).xyz;\n        break;\n        }\n    }//for(int i\n    if (i==5) rgb=vec3(0.0);//did not hit any light source\n\n\treturn rgb;\n\t\n}\n\n/* EDITED OLD\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\nfloat minSize = min(iResolution.x, iResolution.y);\nfloat _seed_variation_ = SEED_VARIATION;\nvec2 UV = vec2(0.0, 1.0) + vec2(1.0, -1.0) * (fragCoord-0.5*(iResolution.xy-vec2(minSize)))/minSize;\nvec3 o6428_0_1_rgb = pathtracing_o6428((UV), _seed_variation_);\nfragColor = vec4(o6428_0_1_rgb, 1.0);\n EDITED OLD}*/\n\n\n\n//EDITED NEW\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    uint rngState = uint(uint(fragCoord.x) * uint(1973) + uint(fragCoord.y) * uint(9277) + uint(iFrame) * uint(26699)) | uint(1);\n    vec2 xy=fragCoord+vec2(RandomFloat01(rngState),RandomFloat01(rngState));\n\n    float minSize = min(iResolution.x, iResolution.y);\n    float _seed_variation_ = SEED_VARIATION;\n    vec2 UV = vec2(0.0, 1.0) + vec2(1.0, -1.0) * (xy-0.5*(iResolution.xy-vec2(minSize)))/minSize;\n    vec3 rgb = /*change here*/pathtracing_o6428(rngState,(UV), _seed_variation_);\n\n    if (iMouse.z<0.1){\n        vec4 lastFrameColor = texture(iChannel0, fragCoord / iResolution.xy);\n        fragColor = vec4(lastFrameColor+vec4(rgb,1.0));\n    } else {\n        fragColor = vec4(rgb,1.0);\n    }\n\n}\n//EDITED NEW",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}