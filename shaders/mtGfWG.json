{
    "Shader": {
        "info": {
            "date": "1702420521",
            "description": "dummy desc)",
            "flags": 0,
            "hasliked": 0,
            "id": "mtGfWG",
            "likes": 3,
            "name": "Stars and planets",
            "published": 3,
            "tags": [
                "dummytag"
            ],
            "usePreview": 0,
            "username": "vortmax",
            "viewed": 191
        },
        "renderpass": [
            {
                "code": "vec2 screen2uv(vec2 glCoord, vec2 glRes);\nvec2 angle2vec(float angle);\nvec2 angle2vec(float angle, float cx, float cy);\nvec3 rgb(int r, int g, int b);\n\nvec2 screen2uv(vec2 glCoord, vec2 glRes)\n{\n    return (glCoord.xy * 2.0 - glRes.xy) / glRes.y; \n}\n\nvec2 angle2vec(float angle, float cx, float cy)\n{\n    return vec2(cos(cx * angle), sin(cy * angle));\n}\n\nvec2 angle2vec(float angle)\n{\n    return angle2vec(angle, 1.0, 1.0);\n}\n\n\nvec3 rgb(int r, int g, int b)\n{\n    return vec3(r, g, b) / 255.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv0 = screen2uv(fragCoord.xy, iResolution.xy); \n    vec2 uvM = screen2uv(iMouse.xy, iResolution.xy);\n    float t = iTime;\n    \n    vec3 finalColor = vec3(0.0);\n    vec2 uv = uv0 - uvM;    \n    \n    //star data\n    float starCount = 10.0;\n    float starRadius = 0.1;\n    float starOrbitRadius = 1.0;\n    float starSpeedScale = 0.5;\n    vec3 starCol = rgb(200, 200, 15);\n    \n    //planet data\n    float planetCount = 10.0;\n    float planetRadius = 0.05;\n    float planetOrbitRadius = 0.2;\n    float planetSpeedScale = 0.6;\n    vec3 planetCol = rgb(15, 190, 190);\n    \n    \n    //orbit pos - uv (0,0 center); \n    vec2 starOrbitPos = uv;\n\n    for(float i = 1.0; i <= starCount; ++i)\n    {\n        float starShift = radians(360.0 * i / starCount);\n        vec2 starOrbitVector = angle2vec(t * starSpeedScale + starShift) * starOrbitRadius;\n        vec2 starPos = starOrbitPos + starOrbitVector;\n        \n        float dStar = length(starPos);\n        \n        dStar = step(dStar, starRadius);\n        \n        finalColor += dStar * starCol;\n        \n\n        //orbit pos - starPos (star center); \n        vec2 planetOrbitPos = starPos;\n\n        for(float j = 1.0; j <= planetCount; ++j)\n        {\n            float planetShift = radians(360.0 * j / planetCount);\n            vec2 planetOrbitVector = angle2vec(-t * planetSpeedScale + planetShift) * planetOrbitRadius;\n            vec2 planetPos = planetOrbitPos + planetOrbitVector;\n            \n            float dPlanet = length(planetPos);\n\n            dPlanet = step(dPlanet, planetRadius);\n\n            \n            finalColor += dPlanet * planetCol;\n        } \n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}