{
    "Shader": {
        "info": {
            "date": "1695742726",
            "description": "Neon Noodle Cat made with sdfs",
            "flags": 0,
            "hasliked": 0,
            "id": "mdKyRz",
            "likes": 34,
            "name": "Neon Noodle Cat",
            "published": 3,
            "tags": [
                "loop",
                "cat",
                "neon"
            ],
            "usePreview": 1,
            "username": "Lewie4",
            "viewed": 420
        },
        "renderpass": [
            {
                "code": "// SDFs: https://iquilezles.org/articles/distfunctions2d/\n// Sign: https://www.etsy.com/uk/listing/1414248168/fortune-ramen-cat-neon-sign-anime-lucky\n\nfloat dot2(vec2 A)\n{\n    return dot(A.xy, A.xy);\n}\n\nfloat saturate(float A)\n{\n    return clamp(A,0.0,1.0);\n}\n\nfloat sdBezier(vec2 pos, vec2 A, vec2 B, vec2 C )\n{    \n    vec2 a = B - A;\n    vec2 b = A - 2.*B + C;\n    vec2 c = a * 2.;\n    vec2 d = A - pos;\n    float kk = 1./dot(b,b);\n    float kx = kk * dot(a,b);\n    float ky = kk * (2.*dot(a,a)+dot(d,b))/3.;\n    float kz = kk * dot(d,a);      \n    float res = 0.;\n    float p = ky - kx*kx;\n    float p3 = p*p*p;\n    float q = kx*(2.*kx*kx-3.*ky)+kz;\n    float h = q*q + 4.*p3;\n    if( h >= 0.) \n    { \n        h = sqrt(h);\n        vec2 x = (vec2(h,-h)-q)/2.;\n        vec2 uv = sign(x)*pow(abs(x),vec2(1./3.,1./3.));\n        float t = clamp(uv.x+uv.y-kx, 0.,1.);\n        res = dot2(d+(c + b*t)*t);\n    }\n    else\n    {\n        float z = sqrt(-p);\n        float v = acos( q/(p*z*2.))/3.;\n        float m = cos(v);\n        float n = sin(v)*1.732050808;\n        vec3  t = clamp(vec3(m+m,-n-m,n-m)*z-kx,0.,1.);\n        res = min( dot2(d+(c+b*t.x)*t.x),\n                   dot2(d+(c+b*t.y)*t.y) );\n        // the third root cannot be the closest\n        // res = min(res,dot2(d+(c+b*t.z)*t.z));\n    }\n    return sqrt( res );\n}\n\nfloat white(vec2 UV)\n{\n    // White\n    float temp = sdBezier(UV, vec2(-.405,-.34), vec2(-.385,-.71), vec2(-.12,-.725));      // Body Left Bottom\n    temp = min(temp, sdBezier(UV, vec2(-.4,-.25), vec2(-.375,-.05), vec2(-.255,.035)));   // Body Left Top\n    temp = min(temp, sdBezier(UV, vec2(-.083,.064), vec2(-.41,.048), vec2(-.31,.38)));   // Face Left\n    temp = min(temp, sdBezier(UV, vec2(-.3,.72), vec2(-.35,.5), vec2(-.31,.38)));         // Ear Left Left\n    temp = min(temp, sdBezier(UV, vec2(-.3,.72), vec2(-.19,.71), vec2(-.08,.6)));         // Ear Left Right\n    temp = min(temp, sdBezier(UV, vec2(.13,.616), vec2(.0,.65), vec2(-.08,.6)));         // Face Top\n    temp = min(temp, sdBezier(UV, vec2(.13,.616), vec2(.225,.73), vec2(.33,.755)));         // Ear Right Left\n    temp = min(temp, sdBezier(UV, vec2(.382,.41), vec2(.4,.65), vec2(.33,.755)));         // Ear Right Right\n    temp = min(temp, sdBezier(UV, vec2(.382,.41), vec2(.45,.25), vec2(.36,.15)));         // Face Right\n    \n    temp = min(temp, sdBezier(UV, vec2(.355,-.135), vec2(.2,-.03), vec2(.225,.1)));         // Paw Right Left\n    temp = min(temp, sdBezier(UV, vec2(.36,.135), vec2(.25,.19), vec2(.225,.1)));          // Paw Right Top\n    temp = min(temp, sdBezier(UV, vec2(.36,.135), vec2(.55,.015), vec2(.458,-.165)));         // Paw Right Right\n    temp = min(temp, sdBezier(UV, vec2(.23,.11), vec2(.28,.09), vec2(.295,.055)));         // Paw Right 1\n    temp = min(temp, sdBezier(UV, vec2(.259,.148), vec2(.32,.138), vec2(.342,.09)));         // Paw Right 1\n    \n    temp = min(temp, sdBezier(UV, vec2(-.3,-.655), vec2(-.67,-.55), vec2(-.44,-.14)));   // Tail Left Bottom\n    temp = min(temp, sdBezier(UV, vec2(-.52,.145), vec2(-.368,.01), vec2(-.44,-.14)));   // Tail Left Mid\n    temp = min(temp, sdBezier(UV, vec2(-.52,.145), vec2(-.575,.22), vec2(-.52,.275)));   // Tail Left Top\n    temp = min(temp, sdBezier(UV, vec2(-.4,.26), vec2(-.48,.32), vec2(-.52,.275)));   // Tail Right Top\n    temp = min(temp, sdBezier(UV, vec2(-.4,.26), vec2(-.29,.15), vec2(-.31,-.01)));   // Tail Right Mid\n    temp = min(temp, sdBezier(UV, vec2(-.4,-.19), vec2(-.55,-.51), vec2(-.33,-.617)));   // Tail Right Bottom\n\n    temp = min(temp, sdBezier(UV, vec2(-.373,-.23), vec2(-.275,-.065), vec2(-.125,-.115)));         // Paw Left Left\n    temp = min(temp, sdBezier(UV, vec2(-.125,-.22), vec2(-.052,-.155), vec2(-.125,-.115)));         // Paw Left Top\n    temp = min(temp, sdBezier(UV, vec2(-.125,-.22), vec2(-.18,-.27), vec2(-.325,-.235)));         // Paw Left Top\n    temp = min(temp, sdBezier(UV, vec2(-.36,-.235), vec2(-.345,-.23), vec2(-.325,-.235)));         // Paw Left Right\n    temp = min(temp, sdBezier(UV, vec2(-.165,-.24), vec2(-.18,-.21), vec2(-.22,-.185)));         // Paw Left 1\n    temp = min(temp, sdBezier(UV, vec2(-.115,-.21), vec2(-.14,-.17), vec2(-.185,-.155)));         // Paw Left 2\n\n    temp = min(temp, sdBezier(UV, vec2(-.21,.348), vec2(-.07,.405), vec2(-.058,.27)));         // Eye Left\n    temp = min(temp, sdBezier(UV, vec2(.28,.38), vec2(.17,.4), vec2(.123,.295)));         // Eye Right\n\n    temp = min(temp, sdBezier(UV, vec2(.265,.269), vec2(.32,.295), vec2(.37,.292)));         // Whisker Right 1\n    temp = min(temp, sdBezier(UV, vec2(.275,.24), vec2(.32,.24), vec2(.366,.24)));         // Whisker Right 2\n    temp = min(temp, sdBezier(UV, vec2(.27,.205), vec2(.3,.2), vec2(.348,.198)));         // Whisker Right 3\n    temp = min(temp, sdBezier(UV, vec2(-.192,.228), vec2(-.25,.23), vec2(-.285,.205)));         // Whisker Left 1\n    temp = min(temp, sdBezier(UV, vec2(-.185,.195), vec2(-.21,.2), vec2(-.265,.168)));         // Whisker Left 2\n    temp = min(temp, sdBezier(UV, vec2(-.185,.166), vec2(-.23,.15), vec2(-.248,.135)));         // Whisker Left 3\n\n    //temp = min(temp, sdBezier(UV, float2(.005,.34), float2(.01,.31), float2(.005,.292)));         // Nose Top Left\n    //temp = min(temp, sdBezier(UV, float2(.078,.36), float2(.06,.33), float2(.072,.297)));         // Nose Top Right\n    temp = min(temp, sdBezier(UV, vec2(.004,.27), vec2(.045,.298), vec2(.089,.27)));         // Nose Top\n    temp = min(temp, sdBezier(UV, vec2(.004,.27), vec2(.005,.24), vec2(.048,.225)));         // Nose Left\n    temp = min(temp, sdBezier(UV, vec2(.089,.27), vec2(.09,.24), vec2(.048,.225)));         // Nose Right\n\n    temp = min(temp, sdBezier(UV, vec2(-.11,.17), vec2(-.03,.145), vec2(.048,.225)));         // Mouth Left\n    temp = min(temp, sdBezier(UV, vec2(-.11,.17), vec2(-.165,.19), vec2(-.115,.245)));         // Mouth Left\n    temp = min(temp, sdBezier(UV, vec2(.16,.18), vec2(.08,.17), vec2(.048,.225)));         // Mouth Right\n    temp = min(temp, sdBezier(UV, vec2(.16,.18), vec2(.23,.19), vec2(.235,.255)));         // Mouth Right\n\n    return temp;\n}\n\nfloat red(vec2 UV)\n{\n    // Red\n    float temp = sdBezier(UV, vec2(-.25,.067), vec2(-.26,.01), vec2(-.08,.03));      // Collar\n    \n    temp = min(temp, sdBezier(UV, vec2(-.265,.45), vec2(-.29,.55), vec2(-.25,.638)));   // Ear Left Left\n    temp = min(temp, sdBezier(UV, vec2(-.14,.57), vec2(-.18,.62), vec2(-.25,.638)));   // Ear Left Right\n    temp = min(temp, sdBezier(UV, vec2(-.14,.57), vec2(-.23,.52), vec2(-.265,.45)));   // Ear Left Bottom\n\n    temp = min(temp, sdBezier(UV, vec2(.19,.59), vec2(.23,.65), vec2(.3,.68)));   // Ear Right Left\n    temp = min(temp, sdBezier(UV, vec2(.3,.51), vec2(.32,.6), vec2(.3,.68)));   // Ear Right Left\n    temp = min(temp, sdBezier(UV, vec2(.3,.51), vec2(.28,.55), vec2(.19,.59)));   // Ear Right Left\n\n    return temp;\n}\n\nfloat blue(vec2 UV)\n{\n    // Blue\n    float temp = sdBezier(UV, vec2(-.346,-.25), vec2(-.38,-.28), vec2(-.33,-.3));      // Bowl Inner Left\n    temp = min(temp, sdBezier(UV, vec2(.52,-.27), vec2(.28,-.44), vec2(-.33,-.3)));   // Bowl Inner Mid\n    temp = min(temp, sdBezier(UV, vec2(.52,-.27), vec2(.555,-.24), vec2(.5,-.223)));   // Bowl Inner Right\n    temp = min(temp, sdBezier(UV, vec2(.225,-.192), vec2(.35,-.19), vec2(.5,-.223)));   // Bowl Inner Right\n\n    temp = min(temp, sdBezier(UV, vec2(-.37,-.245), vec2(-.46,-.29), vec2(-.39,-.325)));   // Bowl Outer Right\n    temp = min(temp, sdBezier(UV, vec2(.59,-.285), vec2(.2,-.52), vec2(-.39,-.325)));   // Bowl Outer Mid\n    temp = min(temp, sdBezier(UV, vec2(.59,-.285), vec2(.63,-.24), vec2(.59,-.215)));   // Bowl Outer Right\n    temp = min(temp, sdBezier(UV, vec2(.24,-.16), vec2(.52,-.17), vec2(.59,-.215)));   // Bowl Outer Right\n\n    temp = min(temp, sdBezier(UV, vec2(-.085,-.68), vec2(-.29,-.67), vec2(-.39,-.325)));   // Bowl Bottom Left\n    temp = min(temp, sdBezier(UV, vec2(-.035,-.685), vec2(.1,-.7), vec2(.18,-.69)));   // Bowl Bottom Middle\n    temp = min(temp, sdBezier(UV, vec2(.59,-.285), vec2(.5,-.67), vec2(.23,-.685)));   // Bowl Bottom Right\n\n    temp = min(temp, sdBezier(UV, vec2(-.135,-.675), vec2(-.15,-.77), vec2(.085,-.76)));   // Bowl Base Left\n    temp = min(temp, sdBezier(UV, vec2(.375,-.645), vec2(.4,-.77), vec2(.085,-.76)));   // Bowl Base Right\n\n    return temp;\n}\n\nfloat purple(vec2 UV)\n{\n    // Purple\n    float temp = sdBezier(UV, vec2(-.04,.02), vec2(.1,.06), vec2(.205,.092));      // Chopstick Top Left\n    temp = min(temp, sdBezier(UV, vec2(.38,.15), vec2(.49,.18), vec2(.59,.21)));   // Chopstick Top Right\n    temp = min(temp, sdBezier(UV, vec2(.42,.11), vec2(.5,.125), vec2(.60,.14)));   // Chopstick Bottom\n\n    return temp;\n}\n\nfloat yellow(vec2 UV)\n{\n    // Yellow\n    float temp = sdBezier(UV, vec2(-.528,.195), vec2(-.3,.2), vec2(-.405,-.026));      // Tail Outer\n    temp = min(temp, sdBezier(UV, vec2(-.505,.152), vec2(-.42,.16), vec2(-.44,.08)));   // Tail Inner\n\n    temp = min(temp, sdBezier(UV, vec2(-.045,.595), vec2(.01,.52), vec2(.084,.605)));   // Head Inner\n    temp = min(temp, sdBezier(UV, vec2(-.08,.585), vec2(.01,.44), vec2(.132,.6)));   // Head Outer\n    temp = min(temp, sdBezier(UV, vec2(.355,.58), vec2(.32,.5), vec2(.365,.42)));   // Head Right\n\n    temp = min(temp, sdBezier(UV, vec2(-.34,-.2), vec2(-.24,-.2), vec2(-.245,-.13)));   // Paw Left\n    temp = min(temp, sdBezier(UV, vec2(.43,.065), vec2(.33,.02), vec2(.47,-.09)));   // Paw Right\n\n    temp = min(temp, sdBezier(UV, vec2(-.258,.015), vec2(-.25,-.05), vec2(-.31,-.04)));   // Body Inner\n    temp = min(temp, sdBezier(UV, vec2(-.335,-.085), vec2(-.2,-.1), vec2(-.22,.01)));   // Body Outer\n    return temp;\n}\n\nfloat noodles(vec2 UV)\n{\n    // Noodles\n    float temp = sdBezier(UV, vec2(.285,-.205), vec2(.255,-.205), vec2(.225,-.24));      // Noodle 1\n    temp = min(temp, sdBezier(UV, vec2(.39,-.215), vec2(.33,-.225), vec2(.285,-.26)));   // Noodle 2\n    temp = min(temp, sdBezier(UV, vec2(.48,-.23), vec2(.43,-.225), vec2(.31,-.28)));   // Noodle 3\n    temp = min(temp, sdBezier(UV, vec2(.46,-.29), vec2(.41,-.275), vec2(.34,-.308)));   // Noodle 4\n    temp = min(temp, sdBezier(UV, vec2(-.23,-.31), vec2(.1,-.15), vec2(.33,-.33)));   // Noodle 5\n    temp = min(temp, sdBezier(UV, vec2(-.18,-.315), vec2(.1,-.2), vec2(.28,-.34)));   // Noodle 6\n    temp = min(temp, sdBezier(UV, vec2(-.11,-.325), vec2(.1,-.29), vec2(.16,-.35)));   // Noodle 7\n\n    float offset = sin(UV.y*50.)*.02 * 2.*(floor(sin(iTime*2.))+.5);\n    temp = min(temp, saturate(smoothstep(.16, .26, UV.y) + (smoothstep(-.245, -.345, UV.y) + length(UV.x+ offset +.05)))); // Noodle Eat 1\n    temp = min(temp, saturate(smoothstep(.17,.27, UV.y) + (smoothstep(-.235, -.335,UV.y) + length(UV.x + offset)))); // Noodle Eat 2\n    temp = min(temp, saturate(smoothstep(.2,.3, UV.y) + (smoothstep(-.23,-.33,UV.y) + length(UV.x + offset -.05)))); // Noodle Eat 3\n    temp = min(temp, saturate(smoothstep(.18,.28, UV.y) + (smoothstep(-.23, -.33,UV.y) + length(UV.x + offset -.1)))); // Noodle Eat 4\n    temp = min(temp, saturate(smoothstep(.17,.27, UV.y) + (smoothstep(-.235,-.335,UV.y) + length(UV.x + offset -.15)))); // Noodle Eat 5\n    return temp;\n}\n\nfloat glow(float A)\n{\n    return max(smoothstep(.007,0.,A), (smoothstep(.03,0.,A)*.5));\n}\n\nvoid mainImage(out vec4 O, in vec2 u)\n{\n    u = (u+u-iResolution.xy)/iResolution.y;\n    O -= O;\n    \n    O.xyz = mix(vec3(.1867,.1867,.1867),vec3(1.,1.,1.), glow(white(u)));\n    O.xyz = mix(O.xyz, vec3(.7529,.0036,.007), glow(red(u)));\n    O.xyz = mix(O.xyz, vec3(.1412,.8388,.9735), glow(blue(u)));\n    O.xyz = mix(O.xyz, vec3(.807,.2307,.7758),glow(purple(u)));\n    O.xyz = mix(O.xyz, vec3(.913,.6939,.0144),glow(yellow(u)));\n    O.xyz = mix(O.xyz, vec3(.8388,.807,0.0185),glow(noodles(u)));  \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}