{
    "Shader": {
        "info": {
            "date": "1544195817",
            "description": "Simple motion blur by partially fading to background color",
            "flags": 32,
            "hasliked": 0,
            "id": "XlGBDc",
            "likes": 7,
            "name": "Simple Motion Blur",
            "published": 3,
            "tags": [
                "blur"
            ],
            "usePreview": 0,
            "username": "mv",
            "viewed": 717
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord.xy / iResolution.xy).rgba;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define BG_COLOR vec3(1.0, 1.0, 1.0)\n#define FG_COLOR vec3(0.0, 0.0, 0.0)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iFrame == 0) {\n        // initialize\n        fragColor = vec4(BG_COLOR, 1.0);\n    } else {\n        // read the old color\n        vec3 color = texture(iChannel0, fragCoord.xy / iResolution.xy).rgb;\n        \n        // fade away a fraction\n        float fraction = 0.1;\n        vec3 k = 1.0/vec3(1.4);\n        color = pow(pow(color, k)*(1.0 - fraction) + pow(BG_COLOR, k)*fraction, 1.0/k);\n        \n        // normalized device coordinates, aspect ratio corrected\n        vec2 p = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.yy;\n        p *= 2.0; // zoom out\n        \n        // define disk location\n        float r = 0.25*0.125;\n        float f = 0.5;\n        vec2 c = vec2(2.0*cos(f*iTime), sin(f*iTime*5.0));\n        \n        // distance to disk\n        float d = length(p - c) - r;\n        float s = smoothstep(0.0, 0.01, d);\n\t\t\n        // blend the current disk\n        color = FG_COLOR*(1.0 - s) + color*s;\n        \n        //\n    \tfragColor = vec4(color, 1.0);    \n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}