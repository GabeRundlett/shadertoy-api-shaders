{
    "Shader": {
        "info": {
            "date": "1484588077",
            "description": "Dots on warped planes",
            "flags": 0,
            "hasliked": 0,
            "id": "4tKXWw",
            "likes": 3,
            "name": "Dots On Planes",
            "published": 3,
            "tags": [
                "3d",
                "grid",
                "plane",
                "dots"
            ],
            "usePreview": 0,
            "username": "cacheflowe",
            "viewed": 1001
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat time = iTime * 0.25;\n    vec2 uv = (2. * fragCoord.xy - iResolution.xy) / iResolution.y;\n    uv *= vec2(0.35, 1.);\n    \n    // z-rotation\n    float zRot = 0.5 * sin(time);\n    uv *= mat2(cos(zRot), sin(zRot), -sin(zRot), cos(zRot));\n    \n    // 3d params\n    // 3d plane technique from: http://glslsandbox.com/e#37557.0 \n    float horizon = 0.5 * cos(time); \n    float fov = 0.25 + 0.015 * sin(time); \n\tfloat scaling = 0.1;\n    \n    // create a 2nd uv with warped perspective\n\tvec3 p = vec3(uv.x, fov, uv.y - horizon);      \n\tvec2 s = vec2(p.x/p.z, p.y/p.z) * scaling;\n    \n    // wobble the perspective-warped uv \n    float oscFreq = 12.;\n    float oscAmp = 0.03;\n    float zScroll = sin(time) * 0.1; // reverses direction between top & bottom\n    s += vec2(zScroll, oscAmp * sin(time + s.x * oscFreq));\n    \n    // y-rotation\n    float yRot = sin(time);\n    s *= mat2(cos(yRot), sin(yRot), -sin(yRot), cos(yRot));\n\t\n\t// normal drawing here\n    // draw dot grid\n    float gridSize = 50. + 2. * sin(time);\n    s = fract(s * gridSize) - 0.5;\n    float col = 1. - smoothstep(0.25 + 0.1 * sin(time), 0.35 + 0.1 * sin(time), length(s));\n    \n  \t// fade into distance\n\tcol *= p.z * p.z * 5.0;\n  \n\tfragColor = vec4(vec3(col),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}