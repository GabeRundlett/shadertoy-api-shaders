{
    "Shader": {
        "info": {
            "date": "1485943464",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "MlGXDV",
            "likes": 11,
            "name": "shortest Unity logo (201 chars)",
            "published": 3,
            "tags": [
                "logo",
                "2tweets",
                "short",
                "unity",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1073
        },
        "renderpass": [
            {
                "code": "// golfing (-animation) https://www.shadertoy.com/view/lt3SWS\n// which was golfing https://www.shadertoy.com/view/ld3XDs\n\n// see also the competitor https://www.shadertoy.com/view/XtVXWK\n\n// see commented readable versions below the code.\n\n/**/  // coyote : -7\nvoid mainImage(out vec4 O, vec2 u)\n{\n    O = vec4( 1.23,.71, iResolution );\n    \n    u.y = abs( u += u-O.zw ).y;    \n    u.y = abs( u -= O.xy* max(0., dot(O.xy,u/=O.w) ) ).y;\n    \n    O =  .2*O.w* \n            clamp( abs(u - u.x - .9) - .1,            // thickness of arrow's hands\n                   u - .53,                           // end of arrow's hands\n                   max(u - .07,                       // end of arrow's body\n                       abs(u.x + .43) - .43)          // thickness of arrow's body\n                 ).yyyy;\n}\n/**/\n\n\n\n/**\nvoid mainImage(out vec4 O, vec2 u)\n{\n\tvec2 k = iResolution.xy,\n         X = vec2(1.23,.71);  // sqrt(vec2(3,1)/2.)  = CS(pi/6) *sqrt(2)\n         u += u - k;          // center\n\n    u /= k.y;                 // normalized scaling (can be done any time)   \n    u.y = abs(u.y);           // vertical symmetry\n    \n    u -= X*max(0., dot(X,u)); // <0: left arrow >0: right arrow(s)  u=symmetry(0 or 2pi/3)\n    u.y = abs(u.y);           // arrow axial symmetry \n    \n    O =  .2*k.y*\n            clamp( abs(u - u.x - .9) - .1,            // thickness of arrow's hands\n                   u - .53,                           // end of arrow's hands\n                   max(u - .07,                       // end of arrow's body\n                       abs(u.x + .43) - .43)          // thickness of arrow's body\n                 ).yyyy;\n}\n/**/\n\n\n/**   // +2 variant\n     float y = abs(u.y);           // right arrow symmetry    \n     O =  .2*k.yyyy*\n            clamp( abs(y - u.x - .9) - .1,            // thickness of arrow's hands\n                   y - .53,                           // end of arrow's hands\n                   max(y - .07,                       // end of arrow's body\n                       abs(u.x + .43) - .43)          // thickness of arrow's body\n                 );\n**/\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}