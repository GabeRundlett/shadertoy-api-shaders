{
    "Shader": {
        "info": {
            "date": "1705968609",
            "description": "game of life",
            "flags": 32,
            "hasliked": 0,
            "id": "Xf2XzR",
            "likes": 4,
            "name": "game of life attempt",
            "published": 3,
            "tags": [
                "life"
            ],
            "usePreview": 0,
            "username": "possan",
            "viewed": 132
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    int act = isOddFrame(iFrame);\n    vec2 uv = fragCoord/iResolution.xy;\n    if (act == 1) {\n       fragColor = texture(iChannel1, uv);\n    } else {\n       fragColor = texture(iChannel0, uv);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    int act = isOddFrame(iFrame);\n    fragColor = iterate2(\n        iChannel1, iChannel0, iChannel2,\n        fragCoord.xy, iResolution.xy, act, iMouse, iTime);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    int act = 1 - isOddFrame(iFrame);\n    fragColor = iterate2(\n        iChannel0, iChannel1, iChannel2,\n        fragCoord.xy, iResolution.xy, act, iMouse, iTime);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "int isOddFrame(int frame) {\n    int o = ((frame % 2) >= 1) ? 1 : 0;\n    return o;\n}\n\nint binSamp(sampler2D prev, vec2 uv) {\n    vec4 o = texture(prev, uv);\n    return (o.r > 0.5) ? 1: 0;\n}\n\nint lifeRules(int neighs, int self) {\n    if (self == 1) {\n        return (neighs == 2 || neighs == 3) ? 1 : 0;\n    }\n    return (neighs == 3) ? 1 : 0;\n}\n\nint countNeighbours(sampler2D prev, vec2 uv, vec2 delta) {\n    int c = 0;\n    c += binSamp(prev, uv + delta * vec2(-1,-1));\n    c += binSamp(prev, uv + delta * vec2(0,-1));\n    c += binSamp(prev, uv + delta * vec2(1,-1));\n    c += binSamp(prev, uv + delta * vec2(-1,0));\n    c += binSamp(prev, uv + delta * vec2(1,0));\n    c += binSamp(prev, uv + delta * vec2(-1,1));\n    c += binSamp(prev, uv + delta * vec2(0,1));\n    c += binSamp(prev, uv + delta * vec2(1,1));\n    return c;\n}\n\nvec4 iterate(sampler2D prev, vec2 coord, vec2 resolution, vec4 mouse) {\n    vec2 uv = coord / resolution;\n    vec2 delta = 1.0 / resolution;\n    int n = countNeighbours(prev, uv, delta);\n    int s = binSamp(prev, uv);\n    int l = lifeRules(n, s);\n    return vec4(float(l),float(l),float(l),1.0);\n}\n\nvec4 iterate2(sampler2D prev, sampler2D self, sampler2D noisetex, vec2 coord, vec2 resolution, int act, vec4 mouse, float time) {\n    vec2 uv = coord / resolution;\n\n    if (act == 0) {\n       vec4 o = texture(self, uv);\n       return o;\n    }\n\n    vec4 o = iterate(prev, coord, resolution, mouse);\n    \n    if (time < 0.3) {\n        // some initial noise\n        vec4 o2 = texture(noisetex, uv + vec2(time, 0.0));\n        o = o2;\n    }\n\n    if (mouse.z > 0.5) {\n        // mouse noise \n        vec2 rel = (mouse.xy / resolution) - uv;\n        float d = 0.0 + length(rel);\n\n        vec4 o2 = texture(noisetex, 5.0 * uv + vec2(time, 0.0));\n        if ( d < 0.1) {            \n            o +=o2;\n        }\n    }\n\n    return o;  \n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}