{
    "Shader": {
        "info": {
            "date": "1613764884",
            "description": "Up north you dream about playing in the sand on cold winter days. Down south you dream about playing in the snow.\nCold winter days are only good for coding.",
            "flags": 8,
            "hasliked": 0,
            "id": "3tVfzR",
            "likes": 23,
            "name": "fake 3d winter scene",
            "published": 3,
            "tags": [
                "winter"
            ],
            "usePreview": 0,
            "username": "eiffie",
            "viewed": 516
        },
        "renderpass": [
            {
                "code": "//fake 3d Winter Scene by eiffie (really just an excuse for the music code)\n#define rez iResolution.xy\nfloat tube(vec2 pa, vec2 ba){return length(pa-ba*clamp(dot(pa,ba)/dot(ba,ba),0.0,1.0));}\nfloat Trail(vec2 p){\n  p.y+=.1*sin(p.x*.3)*sin((iTime+p.x)*.3)+.55;\n  return abs(abs(p.y)-0.025)+0.04+abs(p.x)*0.01;\n}\nfloat Skier(vec2 p){//3d would be easier, I would only draw 1 arm or leg per call\n  float t=iTime*1.25;\n  p-=vec2(sin(t*.3)*2.,.25*sin(t*.1)+1.25);\n  float ast=abs(sin(t)),ast2=abs(sin(t+1.57));\n  vec2 n=vec2(ast*.1,.5);\n  vec2 h1=vec2(.1+ast*.4,.25),h2=vec2(.1+ast2*.4,.3);\n  vec2 f1=vec2(.4-ast*.7,-.5),f2=vec2(.4-ast2*.7,-.55);\n  vec2 ko=vec2(sin(p.y*5.)*abs(sin(t+.78))*.1,0);\n  float l1=tube(p+ko,f1),l2=tube(p+ko,f2);\n  vec2 ho=vec2(0.,-.2),so=vec2(-.5,-.04),sl=vec2(1.25,0);\n  vec2 po1=vec2(-ast2*.3,-.8),po2=vec2(-ast*.3,-.8);\n  float s1=tube(p-(f1+so)+vec2(0,-pow(max(0.,p.x-f1.x-.5),2.)),sl);\n  float s2=tube(p-(f2+so)+vec2(0,-pow(max(0.,p.x-f2.x-.5),2.)),sl);\n  vec2 eo1=vec2(0,-sin((p.x-h1.x)*10.)*ast2*.1),eo2=vec2(0,-sin((p.x-h2.x)*10.)*ast*.1);\n  float a=0.035-p.x*0.1;\n  float bd=tube(p,n),a1=tube(p-h1+eo1,n+ho-h1)-a,a2=tube(p-h2+eo2,n+ho-h2)-a;\n  float p1=tube(p-h1,po1),p2=tube(p-h2,po2);\n  float d=min(bd-0.025-abs(sin(p.y*p.y*17.))*.025,min(min(a1,a2),min(p1,p2)+0.03));\n  d=min(d,min(min(l1,l2)-.04-p.y*.06,min(s1,s2)+0.04));\n  if(p.x<-.2)d=min(d,Trail(p));\n  return d;\n}\nfloat DE(vec2 p,float t){\n  if(mod(t,2.)<1.)p.x=-p.x;\n  p.y;\n  float d=tube(p+vec2(-pow(abs(p.y),6.)*.12,0),vec2(0,1))-.05,s=1.;\n  for(int i=0;i<7;i++){\n    if(p.x<0.){//side branch\n      t*=1.5;\n      p.y-=.45+.35*sin(t);\n      p=vec2(p.x+p.y,-p.x+p.y);\n    }else{\n      t*=2.3;\n      p.y-=1.;p.x-=.12;\n      p=vec2(-p.x+p.y,p.x+p.y);\n    }\n    p*=1.2;\n    s*=1.4;\n    d=min(d,(tube(p+vec2(-pow(abs(p.y),6.)*.12,0),vec2(0,1))-.05)/s);\n  }\n  return d;\n}\nvoid mainImage(out vec4 O, in vec2 U){\n  U=(2.*U-rez)/rez.y;\n  O=texture(iChannel0,U+iTime*vec2(1.8,1)).rrrr;\n  U*=.5+.1*sin(iTime*.3);\n  U.y+=.3;\n  float R=.2-max(0.,U.y)+smoothstep(0.0,0.1,Skier(U*6.)),g=0.;  \n  for(int i=0;i<16;i++){\n    float s=1.+float(i)*.25,x=U.x*s+iTime+sin(s*s)*2.,t=abs(sin(floor(x)*2.+s));\n    vec2 p=vec2((fract(x)-.5)*2.,(U.y-g)*s*2.);\n    R=min(R,(0.05+smoothstep(0.0,0.1,DE(p*s*(1.+t),t*10.)))*s*s);\n    R=min(R,(0.75+smoothstep(0.0,0.1,DE(vec2(p.x+p.y+.05,p.x-p.y)*s*(1.+t),t*10.)-.05)));\n    g+=.1/(s*s);\n  }\n  O+=vec4(R,R,R,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//i was trying to simplify my fractal music code to make it readable...that didn't work\n#define pi 3.14159\nfloat ntof(float n){return (n>0.0)?55.0*pow(2.0, (12.0+n) / 12.0):0.0;}\nint N[]=int[](0,4,7,9,11,9,7,4);\nfloat s(float t){\n  int i=int(t*4.);\n  int f=N[i%8]+N[((i>>4)*2)%8]+N[((i>>6)*3)%8];\n  return t*ntof(float(f));\n}\nvec2 mainSound(int samp, float time){\n  vec2 v=vec2(s(time),.5*s(time-.5));\n  float t=time*16.;\n  return sin(mod(v.yx,2.*pi)*20.*pi)*.1+.5*pow(fract(v),abs(vec2(sin(t),sin(t)))*.9+.1)-.25;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}