{
    "Shader": {
        "info": {
            "date": "1537980209",
            "description": "Not much and not really optimized, but this can be useful for someone. I'll use it for another shader.",
            "flags": 0,
            "hasliked": 0,
            "id": "4tVcW3",
            "likes": 3,
            "name": "Display Date",
            "published": 3,
            "tags": [
                "text",
                "font",
                "date"
            ],
            "usePreview": 0,
            "username": "Klems",
            "viewed": 563
        },
        "renderpass": [
            {
                "code": "\n// this work is licenced under a CC0 1.0 Universal License\n// https://creativecommons.org/publicdomain/zero/1.0/\n\nint monthsLength[] = int[](7, 8, 5, 5, 3, 4, 4, 6, 9, 7, 8, 8);\n\nivec2 januaryText[] = ivec2[]( \n\tivec2(10,11),ivec2( 1, 9),ivec2(14, 9),ivec2( 5, 8),ivec2( 1, 9),\n\tivec2( 2, 8),ivec2( 9, 8),ivec2( 0,13),ivec2( 0,13));\nivec2 februaryText[] = ivec2[]( \n\tivec2( 6,11),ivec2( 5, 9),ivec2( 2, 9),ivec2( 2, 8),ivec2( 5, 8),\n\tivec2( 1, 9),ivec2( 2, 8),ivec2( 9, 8),ivec2( 0,13));\nivec2 marchText[] = ivec2[]( \n\tivec2(13,11),ivec2( 1, 9),ivec2( 2, 8),ivec2( 3, 9),ivec2( 8, 9),\n\tivec2( 0,13),ivec2( 0,13),ivec2( 0,13),ivec2( 0,13));\nivec2 aprilText[] = ivec2[]( \n\tivec2( 1,11),ivec2( 0, 8),ivec2( 2, 8),ivec2( 9, 9),ivec2(12, 9),\n\tivec2( 0,13),ivec2( 0,13),ivec2( 0,13),ivec2( 0,13));\nivec2 mayText[] = ivec2[]( \n\tivec2(13,11),ivec2( 1, 9),ivec2( 9, 8),ivec2( 0,13),ivec2( 0,13),\n\tivec2( 0,13),ivec2( 0,13),ivec2( 0,13),ivec2( 0,13));\nivec2 juneText[] = ivec2[]( \n\tivec2(10,11),ivec2( 5, 8),ivec2(14, 9),ivec2( 5, 9),ivec2( 0,13),\n\tivec2( 0,13),ivec2( 0,13),ivec2( 0,13),ivec2( 0,13));\nivec2 julyText[] = ivec2[]( \n\tivec2(10,11),ivec2( 5, 8),ivec2(12, 9),ivec2( 9, 8),ivec2( 0,13),\n\tivec2( 0,13),ivec2( 0,13),ivec2( 0,13),ivec2( 0,13));\nivec2 augustText[] = ivec2[]( \n\tivec2( 1,11),ivec2( 5, 8),ivec2( 7, 9),ivec2( 5, 8),ivec2( 3, 8),\n\tivec2( 4, 8),ivec2( 0,13),ivec2( 0,13),ivec2( 0,13));\nivec2 septemberText[] = ivec2[]( \n\tivec2( 3,10),ivec2( 5, 9),ivec2( 0, 8),ivec2( 4, 8),ivec2( 5, 9),\n\tivec2(13, 9),ivec2( 2, 9),ivec2( 5, 9),ivec2( 2, 8));\nivec2 octoberText[] = ivec2[]( \n\tivec2(15,11),ivec2( 3, 9),ivec2( 4, 8),ivec2(15, 9),ivec2( 2, 9),\n\tivec2( 5, 9),ivec2( 2, 8),ivec2( 0,13),ivec2( 0,13));\nivec2 novemberText[] = ivec2[]( \n\tivec2(14,11),ivec2(15, 9),ivec2( 6, 8),ivec2( 5, 9),ivec2(13, 9),\n\tivec2( 2, 9),ivec2( 5, 9),ivec2( 2, 8),ivec2( 0,13));\nivec2 decemberText[] = ivec2[]( \n\tivec2( 4,11),ivec2( 5, 9),ivec2( 3, 9),ivec2( 5, 9),ivec2(13, 9),\n\tivec2( 2, 9),ivec2( 5, 9),ivec2( 2, 8),ivec2( 0,13));\n\nivec2[9] getMonth(int i) {\n         if (i <=  0) return januaryText;\n    else if (i ==  1) return februaryText;\n    else if (i ==  2) return marchText;\n    else if (i ==  3) return aprilText;\n    else if (i ==  4) return mayText;\n    else if (i ==  5) return juneText;\n    else if (i ==  6) return julyText;\n    else if (i ==  7) return augustText;\n    else if (i ==  8) return septemberText;\n    else if (i ==  9) return octoberText;\n    else if (i == 10) return novemberText;\n    else              return decemberText;\n}\n\nfloat displayMonth( in vec2 uv, in int month ) {\n    uv.x *= 2.0;\n    ivec2 iuv = ivec2(floor(uv));\n    float letter = 0.0;\n    if ( iuv.x >= 0 && iuv.x < 9 && iuv.y == 0 ) {\n        vec2 fuv = fract(uv);\n        fuv = 0.5 + vec2(0.5, 1.0) * (fuv - 0.5);\n        // select month and letter to display\n        ivec2[9] text = getMonth(month);\n        vec2 samp = (vec2(text[iuv.x]) + fuv) / 16.0;\n        float te = texture(iChannel0, samp).w;\n        float aa = length(fwidth(uv))*0.5;\n        letter = smoothstep(aa, -aa, te - 0.5);\n    }\n    return letter;\n}\n\nfloat displayNumber( in vec2 uv, in int number, const in int digits ) {\n    uv.x *= 2.0;\n    ivec2 iuv = ivec2(floor(uv));\n    float letter = 0.0;\n    if ( iuv.x >= 0 && iuv.x < digits && iuv.y == 0 ) {\n        vec2 fuv = fract(uv);\n    \tfuv = 0.5 + vec2(0.5, 1.0) * (fuv - 0.5);\n        // select digit to display\n        float pow10 = pow(10.0, float(digits-iuv.x-1));\n        float digit = floor(mod(float(number) / pow10, 10.0));\n        // skip leading zeroes\n        if ( digit < 0.5 && float(number) < pow10 )\n            return 0.0;\n        vec2 samp = (vec2(digit, 12) + fuv) / 16.0;\n        float te = texture(iChannel0, samp).w;\n        float aa = length(fwidth(uv))*0.5;\n        letter = smoothstep(aa, -aa, te - 0.5);\n    }\n    return letter;\n}\n\nfloat displayDate( in vec2 uv, in ivec4 date ) {\n    float display = 0.0;\n    display += displayNumber(uv, date.z, 2);\n    uv.x -= 1.5;\n    display += displayMonth(uv, date.y);\n    uv.x -= float(monthsLength[date.y]+1)*0.5;\n    display += displayNumber(uv, date.x, 4);\n    return display;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.y*6.0;\n    \n    ivec4 date = ivec4(iDate);\n    \n    fragColor = vec4(0);\n    fragColor += displayDate(uv, date);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}