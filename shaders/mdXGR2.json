{
    "Shader": {
        "info": {
            "date": "1666418481",
            "description": "asdfgaerg",
            "flags": 32,
            "hasliked": 0,
            "id": "mdXGR2",
            "likes": 2,
            "name": "forest fire percolation",
            "published": 3,
            "tags": [
                "emergentthings"
            ],
            "usePreview": 0,
            "username": "timeiskey",
            "viewed": 223
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define M 1.0\n#define HOOD_WIDTH 1.0 * M\n#define HOOD_HEIGHT 1.0 * M\n#define TREE_DENSITY 0.35\n#define FIRE_DENSITY 0.0000000000000000000001\n\nfloat rand(vec2 co){\n  \treturn fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * length(iDate));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 cellWidth = 1.0/iResolution.xy;\n   \tvec2 uv = fragCoord.xy / iResolution.xy;\n\n\t//\tsample yourself\n    vec4 cell = texture(iChannel0, uv);\n    \n    //  are you a tree\n    if(cell.g == 1.0){\n        //  check if neighbors are on fire with diagonals\n        for( float yi = -HOOD_HEIGHT; yi <= HOOD_HEIGHT; yi++ )\n        {\n            for( float xi = -HOOD_WIDTH; xi <= HOOD_WIDTH; xi++ )\n            {\n                vec2 xy = vec2(xi,yi) * cellWidth + uv;\n                xy = vec2(mod(xy.x, 1.0), mod(xy.y, 1.0) );\n                vec4 neighbor = texture(iChannel0, xy);\n                if( neighbor.r == 1.0){\n                    cell.g = 0.0;\n                    cell.r = 1.0;\n                }\n            }\n        }\n    }  \n    fragColor = cell;\n    \n    //  reset on click\n    if (iMouse.z >=0.0){\n        vec4 fire = min( vec4(1.0, 0.0, 0.0,1.0) * vec4(step(rand(uv),FIRE_DENSITY)), 1.0);        \n        vec4 tree = min( vec4(0.0, 1.0, 0.0,1.0) * vec4(step(rand(uv),TREE_DENSITY)), 1.0);        \n        fragColor = tree + fire;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}