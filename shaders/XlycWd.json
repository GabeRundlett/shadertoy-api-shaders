{
    "Shader": {
        "info": {
            "date": "1538083907",
            "description": "Trying to recreate the feel of gazing in wonder at the sun with closed eyes, heat and light suffusing your eyelids.\nThe effects are very subtle and take time to appear.  (They're not particularly good or interesting tbh :)",
            "flags": 0,
            "hasliked": 0,
            "id": "XlycWd",
            "likes": 4,
            "name": "Staring at the sun eyes closed ",
            "published": 3,
            "tags": [
                "sun",
                "eyes",
                "closed"
            ],
            "usePreview": 0,
            "username": "psonice",
            "viewed": 665
        },
        "renderpass": [
            {
                "code": "float ra(vec2 n) {\n \treturn fract(sin(dot(n.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.y *= iResolution.y / iResolution.x;\n    \n    // Colours warm as pupils dilate\n    vec3 col = mix(\n        vec3(0.90, 0.70 ,0.0),\n        vec3(1.0, 0.40 ,0.0) * 1.5,\n        //min(iTime*0.1, 1.0)\n        smoothstep(0.0, 10.0, iTime)\n    );\n    \n    // Brighter in the middle\n    float r = length(uv);\n    col -= r * r * 0.25;\n    \n    col = clamp(col, 0.0, 1.0);\n    float heartbeat = mod(iTime*1.3, 1.0) * smoothstep(10.0, 20.0, iTime);\n    col -= heartbeat * 0.01;\n        //clamp((iTime - 10.0) * 0.02, 0.0, 0.02);\n    \n    col *= vec3(ra(uv + fract(iTime)))*.05+.95;\n    \n    float plasmasfade = smoothstep(10.0, 30.0, iTime) * heartbeat;\n    \n    float t = iTime * 0.55;\n    vec2 p = vec2(\n        sin(uv.x + t + sin(uv.y + t)), \n        sin(uv.y + t + sin(uv.x + t)));\n    p = vec2(\n        sin(p.x + t + sin(uv.y + t)), \n        sin(p.y + t + sin(uv.x + t)));\n    \n    float x = sin(p.x);\n    x = smoothstep(0.0, 0.1, abs(x)) * 0.125;\n   // col.r += x;\n    p *= 40.25;\n    t *= 0.34;\n    p = vec2(\n        sin(p.y + t * 0.55 + sin(uv.x + t * 0.34)), \n        sin(p.x + t * 0.34 + sin(uv.y + t * 0.55)));\n    \n    x = sin(p.x) + sin(p.y);\n    x = (1.0 - smoothstep(0.0, .201, abs(x))) * 0.0125 \n\t\t* (sin(iTime * 0.55 * max(p.x, p.y)) * 0.5 + 0.5) * plasmasfade;\n    col.r += x;\n    \n    t *= 0.55;\n    p = vec2(\n        sin(uv.x + t / 0.55 + sin(uv.y + t / 0.34)), \n        sin(uv.y + t / 0.34 + sin(uv.x + t / 0.55)));\n    p = vec2(\n        sin(p.x + t + sin(uv.y + t)), \n        sin(p.y + t + sin(uv.x + t)));\n    \n    p *= 37.25;\n   // p *= 0.753958;\n    p = vec2(\n        sin(p.y + t * 0.34 + sin(uv.y + t * 0.55)), \n        sin(p.x + t * 0.55 + sin(uv.x + t * 0.34)));\n    \n    x = sin(p.x) + sin(p.y);\n    x = smoothstep(0.0, .201, abs(x)) * 0.0125 \n        * (sin(iTime * 0.34 * max(p.y, p.x)) * 0.5 + 0.5) * plasmasfade;\n    col.g -= x;\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}