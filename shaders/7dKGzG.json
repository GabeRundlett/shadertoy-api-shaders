{
    "Shader": {
        "info": {
            "date": "1631753123",
            "description": "sloppy code",
            "flags": 0,
            "hasliked": 0,
            "id": "7dKGzG",
            "likes": 13,
            "name": "Trippy patterns",
            "published": 3,
            "tags": [
                "cool"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 449
        },
        "renderpass": [
            {
                "code": "float myLength(vec2 uv, vec2 fragCoord) {\n//return length(mod(4. * (1.-uv) * uv,0.4));\nfloat x = cos(iResolution.x * abs(uv.x) + 0.2 * iTime);\nfloat y = sin(abs(uv.y) + x - 0.5 * iTime);\nfloat b = 0.5 * (1. + cos(0.3 * iTime));\nfloat b2 = 0.5 * (1. + cos(0.15 * iTime));\nreturn mod(x + y, (1.-b) * x * y + b * 0.4 * length(uv)) * ( b2 + (1.-b2)* 0.5 * (0.2 + sin(2. * uv.x * uv.y + iTime)));\n//return mod(x * y, abs(x * x - y * y) + 10.);// * length(uv);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n   \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 6. * (fragCoord - 0.5 * iResolution.xy) /iResolution.y;\n    float theta = atan(uv.y, uv.x);\n    float k = 0.5 * (1. + cos(0.25 * t));\n    float s = 0.5 * (1. + cos(t));\n    //s = 1. - 4. * s * (1.-s);\n    s = (1.-k) * s + k * (1.-s);\n\n    float d = myLength(uv, fragCoord);\n    float p = 0.2;//0.5 * 3.14159;\n    float a = 0.2;\n    \n    float r = 0.4 + 0.1 * (s * cos(3. * theta + t) + (1.-s) * sin(7. * theta + t));    \n    float r2 =  0.43 + 0.1 * (s * cos(3. * theta + t + p) + (1.-s) * sin(7. * theta + t + p));\n    t -= a;\n    float g = 0.4 + 0.1 * (s * cos(3. * theta + t) + (1.-s) * sin(7. * theta + t));    \n    float g2 =  0.43 + 0.1 * (s * cos(3. * theta + t + p) + (1.-s) * sin(7. * theta + t + p));\n    t += 2. * a;\n    float b = 0.4 + 0.1 * (s * cos(3. * theta + t) + (1.-s) * sin(7. * theta + t));    \n    float b2 =  0.43 + 0.1 * (s * cos(3. * theta + t + p) + (1.-s) * sin(7. * theta + t + p));\n    \n    \n    \n    r = 1.- smoothstep(d, r2, r);\n    g = 1.- smoothstep(d, g2, g);\n    b = 1.- smoothstep(d, b2, b);\n    r = 16. * r * r * (1.-r) * (1.-r);\n    g = 16. * g * g * (1.-g) * (1.-g);\n    b = 16. * b * b * (1.-b) * (1.-b);\n    \n    float c1 = 0.5 * (1. + cos(t));\n    float c2 = 0.5 * (1. + cos(t + 3.14159 / 3.));\n    float c3 = 0.5 * (1. + cos(t - 3.14159 / 3.));\n    \n\n    fragColor = vec4(g + c1 * r,r + c2 * b,b + c3 * g,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}