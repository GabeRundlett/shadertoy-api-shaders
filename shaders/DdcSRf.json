{
    "Shader": {
        "info": {
            "date": "1680153972",
            "description": "Random thing I did back when I was experimenting with directional blurs, which I used to make this shader: https://www.shadertoy.com/view/7dBXzd",
            "flags": 0,
            "hasliked": 0,
            "id": "DdcSRf",
            "likes": 19,
            "name": "Atomic Flow",
            "published": 3,
            "tags": [
                "2d",
                "noise",
                "lineintegralconvolution",
                "lic",
                "directionalnoise"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 265
        },
        "renderpass": [
            {
                "code": "// By Cole Peterson (Plento)\n\n#define R iResolution.xy\n\n// Dave Hoshkin hash\nvec2 hash22( vec2 x ){\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\n}\n\n// Gradient noise\nfloat gdns(vec2 p ){\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = smoothstep(0., 1., f);\n    \n    vec2 a = hash22(i);\n    vec2 b = hash22( i + vec2(1.,0.));\n    vec2 c = hash22( i + vec2(.0,1.));\n    vec2 d = hash22( i + vec2(1));\n    \n    float nse = mix( mix( dot( a, f - vec2(0.0,0.0) ), \n                     dot( b, f - vec2(1.0,0.0) ), u.x),\n                mix( dot( c, f - vec2(0.0,1.0) ), \n                     dot( d, f - vec2(1) ), u.x), u.y);\n    return nse + 0.5;\n}\n\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    vec2 uv = 1.4*vec2(u.xy - 0.5*R.xy)/R.y;\n        \n    uv.y += iTime*.1;\n    uv = (uv + vec2(-uv.y,uv.x) ) / 1.41;\n    vec3 sum = vec3(0);\n    \n    float n = 27., scl = 30., prd = 7., t = iTime*.5;\n    \n    for(float i = 0.; i < n; i++){\n        vec2 p = .013*vec2(cos(uv.y*prd), sin(uv.x*prd));\n        \n        float a = gdns(p * scl)*25.;\n        \n        vec3 nc = texture(iChannel0, uv).xxx;\n        nc *= max((.5+.5*cos(a) ), .53);\n        nc += .4*(.001+.09*sin(a*3.));\n        \n        vec2 v = vec2(sin(a + t), cos(a + t));\n        \n        sum += nc;\n        uv += v*.0025;\n    }\n    \n    sum /= n;\n    sum = pow(sum*1.9, vec3(3.8));\n    sum = 1. - exp(-sum);\n    \n    f = vec4(sum, 1.0);\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}