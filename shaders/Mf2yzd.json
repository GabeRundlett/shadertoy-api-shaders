{
    "Shader": {
        "info": {
            "date": "1722877187",
            "description": "\n//3.5\n//Cambio de fase \n ",
            "flags": 0,
            "hasliked": 0,
            "id": "Mf2yzd",
            "likes": 2,
            "name": "Colores mezcla 3.5",
            "published": 3,
            "tags": [
                "mix",
                "tutorial",
                "sin",
                "color",
                "cos",
                "shaders",
                "shaders",
                "livecoding",
                "functions",
                "taller",
                "tutoriales",
                "osciladores"
            ],
            "usePreview": 0,
            "username": "jpupper",
            "viewed": 53
        },
        "renderpass": [
            {
                "code": "\n\n#define PI 3.14159265359\n#define resolution iResolution\n#define time iTime\n//Funci√≥n en la que coloco mi variable de \"forma\" generada con senoidales.\n//Y luego le paso una fase distinta a cada uno : \nfloat desfase(vec2 uv,float _fase){\n      float formafinal = sin(uv.x*10.*PI+time\n                            +sin(uv.y*2.*PI+time\n                            +sin(uv.x*10.*PI-time \n                            +sin(uv.y*10.*PI-time\n                            +sin(uv.x*10.*PI-time\n                            +sin(uv.y*10.*PI-time)\n                            +sin(uv.x*10.*PI-time)))))+_fase)*0.5+0.5;\n    //formafinal+=sin(formafinal*20)*0.05;\n    return formafinal;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n      vec2 uv = gl_FragCoord.xy / resolution.xy; // De esta manera obtenemos las coordenadas cartesianas\n    \n    //Otra manera para elegir buenas paletas de colores puede ser desfasando senoidales.\n    //En este caso, los 3 canales tienen la misma forma, pero las senoidales que las generan tienen la fase cambiada\n    //Por eso es que se generan distintos colores.\n    float r  = desfase(uv,0.0);\n    float g  = desfase(uv,PI/5.);\n    float b  = desfase(uv,PI/2.);\n    \n    \n    fragColor = vec4(r,g,b,1.0); \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}