{
    "Shader": {
        "info": {
            "date": "1542723459",
            "description": "Slightly less naive Conway's Game of Life implementation\n",
            "flags": 32,
            "hasliked": 0,
            "id": "XlGfDm",
            "likes": 3,
            "name": "Another Conway's game of life",
            "published": 3,
            "tags": [
                "framebuffer",
                "conway",
                "gameoflife"
            ],
            "usePreview": 0,
            "username": "shigawire",
            "viewed": 528
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel1, ivec2(fragCoord),0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define SRC_CHAN iChannel1\n\n/* From https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life :\n   Any live cell with fewer than two live neighbors dies, as if by underpopulation.\n   Any live cell with two or three live neighbors lives on to the next generation.\n   Any live cell with more than three live neighbors dies, as if by overpopulation.\n   Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\n */\nconst bool onalive[9] = bool[9](false,false,true,true,false,false,false,false,false);\nconst bool onded[9] =   bool[9](false,false,false,true,false,false,false,false,false);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n    ivec2 coord = ivec2(fragCoord);\n    int neighbours = int(\n        \t\t texelFetchOffset(SRC_CHAN,coord,0,ivec2(1)).r + \n   \t\t\t     texelFetchOffset(SRC_CHAN,coord,0,ivec2(-1)).r +\n\t\t\t\t texelFetchOffset(SRC_CHAN,coord,0,ivec2(1,0)).r +\n\t\t\t\t texelFetchOffset(SRC_CHAN,coord,0,ivec2(1,-1)).r +\n\t\t\t\t texelFetchOffset(SRC_CHAN,coord,0,ivec2(0,1)).r + \n\t\t\t\t texelFetchOffset(SRC_CHAN,coord,0,ivec2(0,-1)).r + \n\t\t\t\t texelFetchOffset(SRC_CHAN,coord,0,ivec2(-1,1)).r + \n\t\t  \t\t texelFetchOffset(SRC_CHAN,coord,0,ivec2(-1,0)).r);\n    fragColor = vec4(vec3(texelFetch(SRC_CHAN,coord,0).r != 0.0 ? onalive[neighbours] : onded[neighbours]),1.0);\n    \n  \tif (iFrame < 120) {\n    \tfragColor = vec4(length(fwidth(step(0.5,texture(iChannel3, fragCoord/iResolution.xy)))));\n  \t}\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}