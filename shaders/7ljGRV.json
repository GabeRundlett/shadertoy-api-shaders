{
    "Shader": {
        "info": {
            "date": "1624309551",
            "description": "idk\nI followed @The_ArtOfCode 's tutorial on Voronoi.",
            "flags": 0,
            "hasliked": 0,
            "id": "7ljGRV",
            "likes": 1,
            "name": "Voronoi Experiments",
            "published": 3,
            "tags": [
                "2d",
                "voronoi"
            ],
            "usePreview": 0,
            "username": "muio",
            "viewed": 216
        },
        "renderpass": [
            {
                "code": "vec2 N22(vec2 p) {\n    vec3 a = fract(p.xyx * vec3(123.34, 234.34, 456.65));\n    a += dot(a, a + 34.45);\n    return fract(vec2(a.x * a.y, a.y * a.z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    \n    float t = iTime * .3;\n    float minDist = 1.;\n    \n    uv *= 6.;\n    vec2 grid_uv = fract(uv) - .5;  // .5 <= uv <= .5 for each grid cell\n    vec2 grid_id = floor(uv);\n    vec2 cell_id;\n    \n    for (int i = -1; i <= 1; i += 1) {\n        for (int j = -1; j <= 1; j += 1) {\n            vec2 grid_offset = vec2(i, j);\n            \n            vec2 n = N22(grid_id + grid_offset);\n            vec2 position = grid_offset + sin(n * t) * .5;\n            \n            vec2 diff = grid_uv - position;\n            float l2_dist = length(diff);\n            float l1_dist = abs(diff.x) + abs(diff.y);\n            \n            // float dist = l1_dist;\n            // float dist = l2_dist;\n            float dist = clamp(-l1_dist * .7 + l2_dist * 1.5, 0., 1.);\n            if (dist < minDist) {\n                minDist = dist;\n                cell_id = grid_id + grid_offset; // id of closest point to current pixel\n            }\n        }\n    }\n    \n    vec3 col = clamp(vec3(minDist) * .3 + .5 * vec3(abs(cell_id.yxx)/5.), 0., 1.);\n    fragColor = vec4(col, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}