{
    "Shader": {
        "info": {
            "date": "1695693930",
            "description": "Just some standard ass plaid but veryyyy smalll.",
            "flags": 0,
            "hasliked": 0,
            "id": "csyyzz",
            "likes": 2,
            "name": "Red Plaid",
            "published": 3,
            "tags": [
                "procedural",
                "2d"
            ],
            "usePreview": 0,
            "username": "OwenTheProgrammer",
            "viewed": 153
        },
        "renderpass": [
            {
                "code": "//void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n//    const float LINE_COUNT = 40.0;\n//    vec2 uv = fragCoord / iResolution.xy;\n//\n//    //sqrt(2)/2 = skew(45deg) = slope of y=1x\n//    //making y in [0,1] relative to x in [0,1] space 1/1 slope, so x - y = skew 45\n//    float skew = uv.x - uv.y;\n//    \n//    //loop by LINE_COUNT\n//    float stripes = fract(LINE_COUNT * skew);\n//    \n//    //(x + y) / 2 = 0.5(x + y) = 0.5x + 0.5y = dot(xy, 0.5)\n//    //where [0,0] = 0, [0,1] = 0.5, [1,0] = 0.5, [1,1] = 1.0\n//    float quadrant = dot(round(uv), vec2(0.5));\n//    \n//    //Biased line width per quadrant\n//    float color = stripes < quadrant;\n//    \n//    fragColor = vec4(color, 0.0, 0.0, 1.0);\n//}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 u = fragCoord / iResolution.xy;\n    fragColor = vec4(fract(40.0*(u.x-u.y))<dot(round(u),vec2(0.5)), 0.0, 0.0, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}