{
    "Shader": {
        "info": {
            "date": "1520468155",
            "description": "https://v.redd.it/r3e1n42hjbk01",
            "flags": 32,
            "hasliked": 0,
            "id": "MddcWf",
            "likes": 8,
            "name": "[6] Every Line is Straight",
            "published": 3,
            "tags": [
                "2d",
                "color",
                "circle",
                "rainbow",
                "reddit"
            ],
            "usePreview": 0,
            "username": "emr4378",
            "viewed": 4837
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    fragColor= texture(iChannel0, fragCoord.xy / iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define PI 3.14159265359\n#define MAX_POINTS 512\n\n// Source: https://www.shadertoy.com/view/MsS3Wc\nvec3 hsv2rgb(in vec3 c)\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Properties of the overall circle.\n    vec2 circle_center = (iResolution.xy * 0.5);\n    float circle_radius = min(circle_center.x, circle_center.y);\n    \n    // Properties of the individual points/circles that make up the overall circle.\n    float point_radius = circle_radius / 16.0;\n    int num_points = min(int(pow(2.0, floor(iTime / PI))), MAX_POINTS);\n    \n    // Start with the fragColor from the previous frame (blur effect).\n    fragColor = texture(iChannel0, fragCoord.xy / iResolution.xy);\n    \n    // Mix in the color of all the individual points.\n    for (int point_index = 0; point_index < num_points; point_index++)\n    {\n        float point_angle = PI * float(point_index) / float(num_points);\n        vec2 point_center = vec2(cos(point_angle), sin(point_angle));\n        point_center *= circle_radius;\n        point_center *= cos((PI * iTime / PI * 2.0) - point_angle); // oscillating\n        point_center += circle_center;\n        \n        float point_dist = length(fragCoord - point_center);\n        if (point_dist < point_radius)\n        {\n\t\t\tvec3 hsv = vec3(abs(sin(point_angle + iTime / 2.0)), 1.0, 1.0);\n            fragColor = mix(fragColor, vec4(hsv2rgb(hsv), 1.0), 0.5);\n        }\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}