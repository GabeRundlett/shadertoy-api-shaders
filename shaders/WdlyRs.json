{
    "Shader": {
        "info": {
            "date": "1586711951",
            "description": "A bleak apocalyptic Swedish fantasy-drama in 4096 bytes.\ncode: evvvvil / DESiRE ^ REBELS ^ HANDSOME HOOLIGANS\nmusic: Virgill / ALCATRAZ\nReleased at Revision 2020.",
            "flags": 96,
            "hasliked": 0,
            "id": "WdlyRs",
            "likes": 27,
            "name": "[4kb] The 8th Seal",
            "published": 3,
            "tags": [
                "terrain",
                "demoscene",
                "glow",
                "organic",
                "monster",
                "particle",
                "death",
                "journey",
                "4kb",
                "gloomy",
                "dismantled",
                "arthouse"
            ],
            "usePreview": 0,
            "username": "evvvvil",
            "viewed": 1010
        },
        "renderpass": [
            {
                "code": "//\n//        ¬_______________________¬\n//        [   -----------------   ]\n//        [   evvvvil + Virgill   ]\n//        [   -----------------   ]\n//        ¬_______________________¬\n//\n//         p  r  e  s  e  n  t  s\n//\n//     \t       \"The 8th Seal\"\n//       A bleak apocalyptic Swedish\n//       fantasy-drama in 4096 bytes\n//\n//              code: evvvvil\n//              music: Virgill\n//\n//          g  r  e  e  t  i  n  g  s\n//\n//   Deadliners, Dascon, Mr Vux, Ferris, UNC, LJ\n//   Ponk, Flopine, Alkama, Slerpy, Nusan, yx, Noby\n//   Hoffman, Crundle, Haptix, Blackle, Alia, Subi\n//   Las, Poo-brain, Conspiracy, ASD, Smash, RamonB5\n//   Fairlight, Wrighter, Dan, Soundy, Anat, Razor1911\n//   Bossman, Hellmood, Sensastahl, Farbrausch, Fizzer\n//   Still, Ronny, Triace, Gopher, iq, RGBA, Pixtur\n//   Peisik, Mercury, Slimey, Mantratronic, Alcatraz\n\n#define res iResolution\n\nconst mat2 rot = mat2(cos(2.399),sin(2.399),-sin(2.399),cos(2.399));\n\nvec3 dof(sampler2D tex,vec2 uv,float rad)// Simplyfied version of Dave Hoskins blur\n{\n\tvec3 acc=vec3(0);\n    vec2 pixel=vec2(.005*res.y/res.x,.005),angle=vec2(0,rad);\n   \n\tfor (int j=0;j<80;j++){  \n\t    angle*=rot;\n        vec4 col=texture(tex,uv+pixel*angle);\n\t\tacc+=col.xyz;}\n\treturn acc/80.;\n}\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n\tvec2 uv = gl_FragCoord.xy / res.xy;\n\tfragColor=vec4(dof(iChannel0,uv,texture(iChannel0,uv).w),1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "musicstream",
                        "id": 21683,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/evvvvil-evvvvil/the-8th-seal"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//Yeah I promise I will comment all this code line by line, too hungover now, come back another day...\nvec3 t; int scene; vec3 ro,bro; vec4 s1,s2,s3; float tt,g,g2; //uniform vec3 t;    \nfloat smin(float a,float b,float h){float k=clamp((a-b)/h*.5+.5,0.,1.);return mix(a,b,k)-k*(1.-k)*h;}\nfloat bo(vec3 p,vec3 r){p=abs(p)-r;return max(max(p.x,p.y),p.z);}\nfloat noi(vec3 p){\n    vec3 f=floor(p),s=vec3(7,157,113); \n    p-=f;vec4 h=vec4(0,s.yz,s.y+s.z)+dot(f,s);\n    p=p*p*(3.-2.*p);\n    h=mix(fract(sin(h)*43758.5),fract(sin(h+s.x)*43758.5),p.x);\n    h.xy=mix(h.xz,h.yw,p.y);\n    return mix(h.x,h.y,p.z);\n}\nfloat a(float v){ return clamp(t.x-v,0.,5.)*.2;} \nvec2 mp( vec3 p ) \n{\n    vec3 bp,pp;bp=pp=p;bp.z=mod(pp.z+s2.w,50.)-25.;\n    bro=vec3(-noi(p*10.)*.03+noi(p)*.3,noi(5.*sin(p.y)*vec3(noi(1.5*p+tt*.5)))*.2,noi(p*.1)*7.);\n    bp+=bro.x+bro.y-vec3(0,0,sin(p.y*.5+tt)*1.5+sin(p.z*.1)*3.);    \n    vec2 h,t=vec2(bp.y+15.-bro.z*abs(sin(p.x*.1)),5);        \n    t.x=smin(t.x,.6*length(abs(bp.xy)-2.+vec2(-6,s1.x)-bro.z*2.)-4.,5.);\n    pp.z=mod(pp.z+34.,72.)-36.;\n    if(scene>4)t.x=smin(t.x,.63*length(abs(pp.xz+(bro.x+bro.z)*2.-vec2(6,0))-s2.x)-\n             (2.+sin(p.y*.2+s1.w)*2.+sin(p.y*20.)*.03),7.);\n    if(scene<9||p.z>0.)\n    {\n        h=vec2(.7*length(abs(bp.xy-vec2(0,-5))-vec2(0,9))-.1,6);\n        g+=.1/(.1*h.x*h.x*4.+4.*abs(sin(p.z*.1+tt)));\n        t=t.x<h.x?t:h;\n    }\n    pp=p-vec3(0,14,0);\n    if(scene>7){\n        for(int i=0;i<3;i++) {\n            pp=abs(pp)-vec3(2,3,6.+cos(p.y*.1+1.3)*2.);\n            pp.xy*=mat2(cos(1.),sin(1.),-sin(1.),cos(1.));\n        }\n        h=vec2(bo(pp,vec3(130,1,1)),5); t=t.x<h.x?t:h;\n        h=vec2(bo(pp,vec3(130,.5,2.5)),3); t=t.x<h.x?t:h; \n        h=vec2(length(abs(pp.yz)-vec2(1.5,0)),6);\n        g2+=.1/(.1+h.x*h.x*(4.-sin(p.y*p.z*.005+tt*4.)*3.5));t=t.x<h.x?t:h;t.x=max(t.x,-(length(p.xz)-6.));\n    }\n    if(scene>3){\n        h=vec2(s3.x*length(cos(pp*s3.y+bro.z*s3.z+vec3(-s3.w,tt,s3.w))),6);\n        g2+=.1/(.1+h.x*h.x*400.);\n        t=t.x<h.x?t:h;\n    }\n    h=vec2(length(bp+vec3(0,6.+s2.y,-1))-(5.-2.33*sin(p.y*(.4)+3.71-s2.y/2.)-cos(p.z*p.x*2.)*.03),3);\n    t=t.x<h.x?t:h;h=vec2(.8*length(bp+vec3(0,-s2.y,0))-(1.72+.7*sin(p.y*1.2+5.7)),6);\n    h.x=smin(h.x,length(abs(bp.xz)-vec2(s2.z,1))-.1,.5);\n    h.x=max(h.x,-(length(abs(bp+vec3(0,.04-s2.y,1.35))-vec3(.8-abs(sin(p.y*1.62+1.77))*.8,1,0))-.8));    \n    t=t.x<h.x?t:h; t.x*=.6;return t;  \n}\nconst vec4 camArr[] = vec4[13](vec4(37,0,0,-1),vec4(13.4,17,-12.6,-1),vec4(17,0,-5,-1),vec4(-5,-12,-10,1)\n,vec4(-4,1,42,-3),vec4(5,-4,-15,2),vec4(25,0,0,-3),vec4(-5,-5,-30,2),vec4(18,-2,37,-1),vec4(0,-10,-20,3)\n,vec4(0,15,22,2),vec4(0,40,15,2),vec4(0,30,15,2));\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ //Length of 1 bar: 2.8235 second; LENGTH OF ONE SCENE = 4 BAR = 11.294 SECONDS... TOTAL LENGTH 135.528 \t\n    t=vec3(iTime,iResolution.xy);tt=mod(t.x,67.764),scene=int(floor(t.x/11.294));      \n    vec2 h=vec2(smoothstep(0.,1.,a(69.))),z=vec2(.1,camArr[scene].w),\n    uv=(fragCoord.xy/t.yz-.5)/vec2(t.z/t.y,1),e=vec2(.0035,-.0035);  \t\n    s1=mix(vec4(.35,0,.001,-3),vec4(-14,1,.01,0),h.x-abs(sin(a(84.)*3.14)));\n    s2=vec4(14.,max(0.,t.x-106.)*2.,mix(vec2(.5,tt*3.),vec2(-.5,125),a(102.)));\n    s3=mix(vec4(.5,.14,4.4,0),vec4(1,.5,.5,9),h.x);\n    if(scene>7) s1.xw=vec2(-20,7.5),s2.x=23.5;\n    ro=camArr[scene].xyz;\n    ro[abs(int(z.y))-1]+=sign(z.y)*max(0.,t.x-float(scene)*11.294); \n    vec3 cw=normalize(scene==6?vec3(-10,0,0):scene>9?vec3(0,20.+max(0.,t.x-124.234)*4.,-10)-ro:-ro),\n    cu=normalize(cross(cw,vec3(0,1,0))),rd=mat3(cu,normalize(cross(cu,cw)),cw)*normalize(vec3(uv,.5)),\n    al=vec3(5.*vec2(abs(atan(rd.y-1.1,rd.x)),rd.z+tt*.1),0),po,no,lp,co,fo;\n    h.x=0.; for(int i=2;i<5;i++) h.x+=1./float(i)*noi(al*float(i));\n    co=fo=mix(vec3(.1),vec3(.1,.2,.3)+rd.y*.2,s1.y)-length(uv*.7)*.2+h.x*.05;\n  \tfor(int i=0;i<128;i++){\n        h=mp(ro+rd*z.x);\n        if(h.x<s1.z||z.x>120.) break;\n        z.x+=h.x;z.y=h.y;\n    }\n    po=ro+rd*z.x;lp=ro+vec3(0,5,0)-po;\n    no=normalize(e.xyy*mp(po+e.xyy).x+e.yyx*mp(po+e.yyx).x+e.yxy*mp(po+e.yxy).x+e.xxx*mp(po+e.xxx).x);\n    al=z.y==5.?mix(vec3(1.+cos((bro.x+bro.y)*5.)),vec3(.1,.2,.3)+noi(bro),s1.y):vec3(z.y<5.?0:1);\n    co=mix(al*(clamp(mp(po+no*.1).x/.1,0.,1.)*clamp(mp(po+no*.3).x/.3,0.,1.)+.2)*\n           (max(0.,dot(no,normalize(lp)))+smoothstep(0.,1.,mp(po+normalize(lp)*4.1).x/4.1)),\n           fo,min(pow(1.+dot(no,rd),4.),.5));\n    co=mix(fo,co*(1.04-pow(min(1.,length(lp)/(mix(15.,40.,s1.y))),4.)),\n           exp(-.0001*(2.-s1.y*1.5)*z.x*z.x*z.x))-a(137.);   \n  \tfragColor = vec4(pow(co+g*.03*(scene>3?1.:1.-ceil(sin(10.*fract(mod(tt,1.06)))))+g2*(1.-a(141.))*.1,\n                      vec3(.65,.7,.7)),-.5+clamp(z.x*.1+.5,0.,.9));\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}