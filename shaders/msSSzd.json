{
    "Shader": {
        "info": {
            "date": "1670718548",
            "description": "inspired by a rocket league shader \nhttps://youtu.be/xel__eVBWy0?t=109",
            "flags": 0,
            "hasliked": 0,
            "id": "msSSzd",
            "likes": 5,
            "name": "invert breakout",
            "published": 3,
            "tags": [
                "inverted"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 163
        },
        "renderpass": [
            {
                "code": "float f_n_rand(vec2 o){\n\n    return fract(sin(o.x*32.123+o.y*13.17+o.x*o.y)*323.231);\n}\n\n\nvec2 o_scale = vec2(0.02);\nfloat n_tau = 6.2831;\nfloat f_n_rand_interpolated(\n    vec2 fragCoord, \n    vec3 iResolution\n){\n\n\n    vec2 o_fragCoord_scaled = ((fragCoord.xy)*o_scale);\n    vec2 o_iResolution_scaled = (iResolution.xy * o_scale);\n\n    vec2 o_fragCoord_scaled_floor = floor(o_fragCoord_scaled);\n    vec2 o_iResolution_scaled_floor = floor(o_iResolution_scaled);\n    vec2 o_fragCoord_scaled_fract = fract(o_fragCoord_scaled);\n    vec2 o_iResolution_scaled_fract = fract(o_iResolution_scaled);\n       \n    vec2 o_trpino_scldfloor = (o_fragCoord_scaled_floor.xy - o_iResolution_scaled_floor.xy*0.5)/ o_iResolution_scaled_floor.y;\n    \n    float n_index = floor(o_fragCoord_scaled_floor.y * o_iResolution_scaled_floor.x + o_fragCoord_scaled_floor.x);\n    float n_index_nor = n_index / (o_iResolution_scaled_floor.x * o_iResolution_scaled_floor.y);\n    \n    \n    \n    float n_col_xp1yp0 = f_n_rand(o_fragCoord_scaled_floor+vec2(1., 0.));\n    float n_col_xp0yp1 = f_n_rand(o_fragCoord_scaled_floor+vec2(0., 1.));\n    float n_col_xp0yp0 = f_n_rand(o_fragCoord_scaled_floor);\n    float n_col_xp1yp1 = f_n_rand(o_fragCoord_scaled_floor+vec2(1., 1.));\n\n    float n_mixed_xp0yp0andxp1yp0 = mix(n_col_xp0yp0, n_col_xp1yp0, o_fragCoord_scaled_fract.x);\n    float n_mixed_xp0yp1andxp1yp1 = mix(n_col_xp0yp1,n_col_xp1yp1, o_fragCoord_scaled_fract.x);\n    float n_mixed_xp0yp0andxp1yp0_and_n_mixed_xp0yp1andxp1yp1 = \n        mix(\n            n_mixed_xp0yp0andxp1yp0, \n            n_mixed_xp0yp1andxp1yp1, \n            o_fragCoord_scaled_fract.y\n        );\n    return n_mixed_xp0yp0andxp1yp0_and_n_mixed_xp0yp1andxp1yp1;\n        \n}\n\nfloat f_n_rand_interpolated_layered(\n    vec2 fragCoord, \n    vec3 iResolution\n){\n    float n_start = 1.;\n    vec2 o_freq_amp1 = vec2(\n        n_start*1., \n        n_start/1.\n    );\n    vec2 o_freq_amp2 = vec2(\n        n_start*2., \n        n_start/2.\n    );\n    vec2 o_freq_amp3 = vec2(\n        n_start*4., \n        n_start/4.\n    );\n    vec2 o_freq_amp_sum = \n        o_freq_amp1 + \n        o_freq_amp2 + \n        o_freq_amp3;\n        \n    float n_rand_interpolated1 = f_n_rand_interpolated(fragCoord*o_freq_amp1.x, iResolution)*o_freq_amp1.y;\n    float n_rand_interpolated2 = f_n_rand_interpolated(fragCoord*o_freq_amp2.x, iResolution)*o_freq_amp2.y;\n    float n_rand_interpolated3 = f_n_rand_interpolated(fragCoord*o_freq_amp3.x, iResolution)*o_freq_amp3.y;\n\n    float n_sum_rand_interpolated = \n        n_rand_interpolated1+\n        n_rand_interpolated2+\n        n_rand_interpolated3;\n    float n_rand_interpolated_layered = n_sum_rand_interpolated/o_freq_amp_sum.y;\n    return n_rand_interpolated_layered;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 o_trpino = (fragCoord.xy - iResolution.xy*0.5)/ iResolution.y;\n    vec2 o_trpino_nooffset = (fragCoord.xy)/ iResolution.xy;\n\n    vec2 o_trmono = (iMouse.xy - iResolution.xy*0.5)/ iResolution.y;\n    vec2 o_trmono_nooffset = (iMouse.xy )/ iResolution.y;\n\n    vec2 o_fragCoord_scaled = ((fragCoord.xy)*o_scale);\n    vec2 o_iResolution_scaled = (iResolution.xy * o_scale);\n\n    vec2 o_fragCoord_scaled_floor = floor(o_fragCoord_scaled);\n    vec2 o_iResolution_scaled_floor = floor(o_iResolution_scaled);\n    vec2 o_fragCoord_scaled_fract = fract(o_fragCoord_scaled);\n    vec2 o_iResolution_scaled_fract = fract(o_iResolution_scaled);\n       \n    vec2 o_trpino_scldfloor = (o_fragCoord_scaled_floor.xy - o_iResolution_scaled_floor.xy*0.5)/ o_iResolution_scaled_floor.y;\n    \n    float n_index = floor(o_fragCoord_scaled_floor.y * o_iResolution_scaled_floor.x + o_fragCoord_scaled_floor.x);\n    float n_index_nor = n_index / (o_iResolution_scaled_floor.x * o_iResolution_scaled_floor.y);\n    \n    \n\n\n    \n    // blur\n    // float n_sum_kernel = 0.;\n    // float n_count_kernel = 0.;\n    // vec2 o_scale_kernel = vec2(10.);\n    // for(float n_x = 0.; n_x < o_scale_kernel.x; n_x+=1.){\n    //     for(float n_y = 0.; n_y < o_scale_kernel.y; n_y+=1.){\n    //         n_sum_kernel += f_n_rand_by_fragCoord(fragCoord+vec2(n_x, n_y));\n    //         n_count_kernel += 1.;\n    //     }   \n    // }\n    // float n_sum_kernel_nor = n_sum_kernel / n_count_kernel;\n    \n\n    // float o_col = f_n_hash12(o_coo_big_flo);\n    // float o_col_xp1 = f_n_hash12(o_coo_big_flo + vec2(1,0));\n    // float o_col_mix_xp1 = mix(o_col, o_col_xp1, o_coo_big_mod.x);\n    \n    // float o_col_yp1 = f_n_hash12(o_coo_big_flo+ vec2(0, 1));\n    // float o_col_xp1_yp1 = f_n_hash12(o_coo_big_flo + vec2(1,1));\n    // float o_col_mix_yp1_xp1_yp1 = mix(o_col_yp1, o_col_xp1_yp1, o_coo_big_mod.x);\n    \n    //float o_col_mix = mix(o_col_mix_xp1, o_col_mix_yp1_xp1_yp1, o_coo_big_mod.y);\n    float n_rand_interpolated_layered = f_n_rand_interpolated_layered(fragCoord, iResolution);\n    vec2 o_delta = o_trpino-vec2(0.);\n    float n_ang = atan(o_delta.y, o_delta.x)+(n_tau/2.);\n    float n_ang_nor = n_ang / n_tau;\n    \n    float n_rnd_intrplt_lrd = f_n_rand_interpolated_layered(\n        vec2(\n            n_ang_nor*iResolution.x,\n            1.-n_ang_nor*iResolution.y+iTime*111.\n            ),\n        iResolution\n    );\n  \n    fragColor = vec4(n_rand_interpolated_layered);\n    \n    float n_dist = length(o_trpino);\n    //n_dist*= n_rand_interpolated_layered*9.;\n    //n_dist = pow(n_dist, n_rand_interpolated_layered*2.);\n    float n_speed = 0.9;\n    float n_radius = fract(iTime*n_speed);\n    n_radius = float(fract(iTime*n_speed/2.) > 0.5) - n_radius; \n    n_radius*=2.;\n    n_radius = pow(n_radius,2.);\n    n_dist = n_dist+(n_rnd_intrplt_lrd-0.5)*n_dist;\n    float n_mask = smoothstep(n_radius, n_radius+0.05, n_dist);\n    //fragColor = vec4(smoothstep(n_radius, n_radius+0.1, n_dist));\n    vec4 o_col_text =  texture(iChannel0, o_trpino_nooffset);\n    vec4 o_col_text_inverted = 1.-o_col_text;\n\n    fragColor = \n        vec4(n_mask)*o_col_text + \n        vec4(1.-n_mask)*o_col_text_inverted;\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}