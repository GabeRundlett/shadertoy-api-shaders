{
    "Shader": {
        "info": {
            "date": "1667068081",
            "description": "Use the mouse (clic+drag) to move the julia fractal origin relative to the mandelbrot fractal.",
            "flags": 0,
            "hasliked": 0,
            "id": "DsBGRz",
            "likes": 17,
            "name": "Julia Set Explorer w/ Mandelbrot",
            "published": 3,
            "tags": [
                "fractal",
                "mouse",
                "interactive",
                "iteration",
                "explorer"
            ],
            "usePreview": 0,
            "username": "kishimisu",
            "viewed": 711
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n    vec2 mouse = (2.*iMouse.xy-iResolution.xy)/iResolution.y;\n    \n    float mouseActive = iMouse.x + iMouse.y;\n    if (mouseActive == 0.) mouse = vec2(cos(iTime*.15-1.4), sin(iTime*.15-1.4))*.98; // default mouse animation\n    \n    vec3 colm, colj;                 // mandelbrot & julia colors\n\n    vec2 zm = vec2(0.);              // mandelbrot starting point\n    vec2 zj = p;                     // julia starting point\n    \n    vec2 cm = p - vec2(.55, .0);     // mandelbrot iteration point\n    vec2 cj = mouse - vec2(.55, .0); // julia iteration point\n    \n    for (float iter = 0.; iter < 200.; iter++) {\n        zm = vec2(zm.x*zm.x - zm.y*zm.y, 2.*zm.x*zm.y) + cm; // mandelbrot iteration\n        zj = vec2(zj.x*zj.x - zj.y*zj.y, 2.*zj.x*zj.y) + cj; // julia iteration\n        \n        if (dot(zm,zm) > 40.) { // stop mandelbrot\n            colm = vec3(iter/80.);\n            zm = vec2(0.); cm = vec2(0.);\n        }\n        \n        if (dot(zj,zj) > 40.) { // stop julia\n            float smooth_iter = iter + 2. - log(log(dot(zj,zj)))/log(2.);\n            colj = clamp(cos(vec3(1.1,1.2,1.3) * pow(smooth_iter*2., .5)), 0., 1.);\n            zj = vec2(0.); cj = vec2(0.);\n        }\n        \n        if(dot(cm, cm) == 0. && dot(cj, cj) == 0.) break; // break if both mandelbrot & julia stopped\n    }\n        \n    if (mouseActive == 0. || iMouse.z > 0.) {\n        colj = mix(colm, colj, clamp(length(colj), 0., 1.)); // mix between mandelbrot and julia\n        colj = mix(colj, vec3(1.,0.,.0), smoothstep(.03, .02, length(mouse - p))); // add dot\n    }\n    \n    fragColor = vec4(colj, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}