{
    "Shader": {
        "info": {
            "date": "1474642594",
            "description": "F*ck yeah",
            "flags": 0,
            "hasliked": 0,
            "id": "lly3DD",
            "likes": 5,
            "name": "F*ck yeah",
            "published": 3,
            "tags": [
                "fun"
            ],
            "usePreview": 0,
            "username": "koiava",
            "viewed": 764
        },
        "renderpass": [
            {
                "code": "float theta(in float x) { return x > 0.0? 1.0 : 0.0; }\n\n//curve from https://www.wolframalpha.com/input/?i=f*ck+yeah+curve\nvec2 f(float t) {\n    float x = \n((-34.08 - (7.*sin(1.5576923076923077 - 11.*t))/27. - (151.*sin(1.5483870967741935 - 4.*t))/30. - (53.*sin(1.53125 - 3.*t))/37. + (5.*sin(4.666666666666667 + t))/18. + (59.*sin(1.5806451612903225 + 2.*t))/22. + (45.*sin(1.574468085106383 + 5.*t))/29. + \n        (19.*sin(1.8125 + 6.*t))/94. + (8.*sin(1.6041666666666667 + 7.*t))/15. + (10.*sin(1.625 + 8.*t))/33. + sin(3.8076923076923075 + 9.*t)/43. + (9.*sin(1.5909090909090908 + 10.*t))/28. + sin(1.6111111111111112 + 12.*t)/8.)*theta(31.*3.1415926 - t)*\n      theta(-27.*3.1415926 + t) + (119.99551569506727 - (8.*sin(1.5588235294117647 - 12.*t))/29. - (26.*sin(1.5675675675675675 - 10.*t))/43. - (218.*sin(1.5714285714285714 - 8.*t))/145. - (11.*sin(1.55 - 7.*t))/26. - (98.*sin(1.5625 - 6.*t))/29. - \n        (7.*sin(1.5666666666666667 - 3.*t))/8. + (56.*sin(1.5757575757575757 + t))/41. + 2.*sin(1.5675675675675675 + 2.*t) + (103.*sin(1.5789473684210527 + 4.*t))/27. + (30.*sin(1.5813953488372092 + 5.*t))/37. + (5.*sin(1.5833333333333333 + 9.*t))/29. + \n        (7.*sin(1.5897435897435896 + 11.*t))/29.)*theta(27.*3.1415926 - t)*theta(-23.*3.1415926 + t) + (103.89655172413794 - (13.*sin(1.564102564102564 - 11.*t))/30. - (11.*sin(1.5476190476190477 - 8.*t))/8. - (2059.*sin(1.565217391304348 - 3.*t))/57. - \n        (545.*sin(1.5666666666666667 - 2.*t))/44. + (132.*sin(1.6346153846153846 + t))/133. + (239.*sin(1.5769230769230769 + 4.*t))/24. + (35.*sin(1.6129032258064515 + 5.*t))/33. + (529.*sin(1.5714285714285714 + 6.*t))/265. + \n        (5.*sin(1.6129032258064515 + 7.*t))/19. + (47.*sin(4.708333333333333 + 9.*t))/36. + (109.*sin(1.59375 + 10.*t))/42. + (4.*sin(1.5434782608695652 + 12.*t))/7.)*theta(23.*3.1415926 - t)*theta(-19.*3.1415926 + t) + \n     (-46.758620689655174 - (514.*sin(1.5588235294117647 - 7.*t))/67. - (337.*sin(1.565217391304348 - 5.*t))/32. - (2905.*sin(1.5675675675675675 - t))/121. + (398.*sin(4.7105263157894735 + 2.*t))/59. + (1707.*sin(1.5789473684210527 + 3.*t))/31. + \n        (689.*sin(1.5806451612903225 + 4.*t))/25. + (521.*sin(1.5769230769230769 + 6.*t))/53. + (241.*sin(1.5833333333333333 + 8.*t))/107. + (19.*sin(4.708333333333333 + 9.*t))/11. + (249.*sin(1.5925925925925926 + 10.*t))/40. + \n        (28.*sin(4.709677419354839 + 11.*t))/33. + (85.*sin(1.6296296296296295 + 12.*t))/171.)*theta(19.*3.1415926 - t)*theta(-15.*3.1415926 + t) + \n     (30.44 - (11.*sin(1.55 - 11.*t))/39. - (3.*sin(1.53125 - 10.*t))/28. - (10.*sin(1.5555555555555556 - 9.*t))/19. - sin(1.2592592592592593 - 6.*t)/23. - (31.*sin(1.5625 - 5.*t))/21. - sin(1.0555555555555556 - 4.*t)/47. - \n        (141.*sin(1.5666666666666667 - 3.*t))/32. - (3039.*sin(1.5714285714285714 - t))/86. + (4.*sin(1.5454545454545454 + 2.*t))/25. + (33.*sin(4.711111111111111 + 7.*t))/47. + (3.*sin(1.52 + 8.*t))/31. + sin(1.4923076923076923 + 12.*t)/15.)*\n      theta(15.*3.1415926 - t)*theta(-11.*3.1415926 + t) + (-8.133333333333333 - (15.*sin(1.5454545454545454 - 2.*t))/43. + (1659.*sin(1.5689655172413792 + t))/13. + (193.*sin(1.565217391304348 + 3.*t))/28. + (77.*sin(1.5483870967741935 + 4.*t))/29. + \n        (74.*sin(1.56 + 5.*t))/47. + (164.*sin(1.55 + 6.*t))/63. + (25.*sin(1.5384615384615385 + 7.*t))/32. + (10.*sin(1.5625 + 8.*t))/7. + (23.*sin(1.5517241379310345 + 9.*t))/61. + (13.*sin(1.5625 + 10.*t))/35. + (19.*sin(1.6071428571428572 + 11.*t))/94. + \n        sin(3.6875 + 12.*t)/185.)*theta(11.*3.1415926 - t)*theta(-7.*3.1415926 + t) + (-32.00574712643678 - (131.*sin(1.5333333333333334 - 11.*t))/41. - sin(1.3076923076923077 - 10.*t)/4. - (315.*sin(1.558139534883721 - 9.*t))/86. - \n        (79.*sin(1.511111111111111 - 8.*t))/36. - (416.*sin(1.5555555555555556 - 7.*t))/31. - (758.*sin(1.5666666666666667 - 5.*t))/25. - (3913.*sin(1.5689655172413792 - 3.*t))/36. - (2955.*sin(1.5694444444444444 - 2.*t))/37. + \n        (13436.*sin(1.5714285714285714 + t))/77. + (192.*sin(1.5714285714285714 + 4.*t))/29. + (23.*sin(1.5789473684210527 + 6.*t))/7. + (16.*sin(1.5319148936170213 + 12.*t))/21.)*theta(7.*3.1415926 - t)*theta(-3.*3.1415926 + t) + \n     (-104.05 + (4101.*sin(1.5555555555555556 + t))/13. + (769.*sin(4.708333333333333 + 2.*t))/57. + (1058.*sin(1.525 + 3.*t))/19. + (1973.*sin(1.505050505050505 + 4.*t))/28. + (349.*sin(4.566666666666666 + 5.*t))/87. + \n        (314.*sin(4.633333333333334 + 6.*t))/13. + (7.*sin(2.5076923076923077 + 7.*t))/18. + (611.*sin(4.594594594594595 + 8.*t))/31. + (11.*sin(4.3 + 9.*t))/9. + (307.*sin(1.434782608695652 + 10.*t))/30. + (114.*sin(4.571428571428571 + 11.*t))/25. + \n        (26.*sin(1.3375 + 12.*t))/21.)*theta(3.*3.1415926 - t)*theta(3.1415926 + t))*theta(sqrt(sign(sin(t/2.))));\n\n    float y = \n    ((166.78571428571428 - (2.*sin(1.3902439024390243 - 11.*t))/27. - (25.*sin(1.542857142857143 - 10.*t))/62. - (24.*sin(1.553191489361702 - 3.*t))/11. + (29.*sin(4.705882352941177 + t))/37. + (5.*sin(1.4411764705882353 + 2.*t))/41. + \n        (13.*sin(1.6111111111111112 + 4.*t))/14. + (131.*sin(1.6071428571428572 + 5.*t))/45. + (38.*sin(1.6666666666666667 + 6.*t))/49. + (41.*sin(1.605263157894737 + 7.*t))/38. + sin(3.85 + 8.*t)/20. + (9.*sin(1.6129032258064515 + 9.*t))/10. + \n        (7.*sin(1.68 + 12.*t))/30.)*theta(31.*3.1415926 - t)*theta(-27.*3.1415926 + t) + (134.32432432432432 - (8.*sin(1.565217391304348 - 10.*t))/29. - (48.*sin(1.5625 - 6.*t))/37. - (211.*sin(1.564102564102564 - 5.*t))/47. - \n        (137.*sin(1.5666666666666667 - 2.*t))/73. + (8.*sin(1.558139534883721 + t))/23. + (23.*sin(1.5833333333333333 + 3.*t))/18. + (12.*sin(1.588235294117647 + 4.*t))/17. + (29.*sin(1.59375 + 7.*t))/39. + (7.*sin(4.6976744186046515 + 8.*t))/33. + \n        sin(1.565217391304348 + 9.*t)/3. + (2.*sin(1.5555555555555556 + 11.*t))/31. + (6.*sin(4.708333333333333 + 12.*t))/41.)*theta(27.*3.1415926 - t)*theta(-23.*3.1415926 + t) + \n     (152.27272727272728 - (11.*sin(1.5161290322580645 - 12.*t))/31. - (730.*sin(1.5675675675675675 - t))/23. + (733.*sin(1.574468085106383 + 2.*t))/51. + (141.*sin(1.5769230769230769 + 3.*t))/23. + (109.*sin(1.5757575757575757 + 4.*t))/14. + \n        (105.*sin(1.5769230769230769 + 5.*t))/19. + (18.*sin(1.553191489361702 + 6.*t))/19. + (10.*sin(1.53125 + 7.*t))/33. + (55.*sin(1.5806451612903225 + 8.*t))/26. + (29.*sin(1.5769230769230769 + 9.*t))/28. + (44.*sin(1.5769230769230769 + 10.*t))/35. + \n        (37.*sin(1.5769230769230769 + 11.*t))/59.)*theta(23.*3.1415926 - t)*theta(-19.*3.1415926 + t) + (183.81578947368422 - (11.*sin(1.5573770491803278 - 9.*t))/19. - (259.*sin(1.564102564102564 - 3.*t))/39. - (1257.*sin(1.5675675675675675 - t))/41. + \n        (40.*sin(1.565217391304348 + 2.*t))/19. + (124.*sin(1.5833333333333333 + 4.*t))/29. + (311.*sin(1.5833333333333333 + 5.*t))/41. + (61.*sin(1.6111111111111112 + 6.*t))/43. + (301.*sin(1.5862068965517242 + 7.*t))/47. + (16.*sin(4.7 + 8.*t))/27. + \n        (7.*sin(1.5909090909090908 + 10.*t))/6. + (31.*sin(1.608695652173913 + 11.*t))/27. + (21.*sin(1.6216216216216217 + 12.*t))/31.)*theta(19.*3.1415926 - t)*theta(-15.*3.1415926 + t) + \n     (69.72727272727273 - (3.*sin(1.5694444444444444 - 10.*t))/11. + (178.*sin(1.5714285714285714 + t))/19. + (5.*sin(1.5714285714285714 + 2.*t))/11. + (13.*sin(4.705882352941177 + 3.*t))/28. + sin(1.5970149253731343 + 4.*t)/23. + \n        sin(4.669902912621359 + 5.*t)/64. + sin(1.6046511627906976 + 6.*t)/28. + (6.*sin(1.5609756097560976 + 7.*t))/35. + sin(1.565217391304348 + 8.*t)/6. + (8.*sin(4.709677419354839 + 9.*t))/31. + sin(1.5625 + 11.*t)/16. + \n        (4.*sin(1.565217391304348 + 12.*t))/33.)*theta(15.*3.1415926 - t)*theta(-11.*3.1415926 + t) + (93.6842105263158 - (79.*sin(1.5689655172413792 - 11.*t))/32. + (1109.*sin(4.7105263157894735 + t))/55. + (934.*sin(4.709677419354839 + 2.*t))/35. + \n        (71.*sin(4.702702702702703 + 3.*t))/23. + (186.*sin(4.703703703703703 + 4.*t))/35. + (49.*sin(4.689655172413793 + 5.*t))/32. + (27.*sin(1.6153846153846154 + 6.*t))/43. + (34.*sin(4.702702702702703 + 7.*t))/15. + \n        (29.*sin(1.5862068965517242 + 8.*t))/23. + (59.*sin(4.7105263157894735 + 9.*t))/26. + (35.*sin(1.5789473684210527 + 10.*t))/27. + (25.*sin(1.5789473684210527 + 12.*t))/23.)*theta(11.*3.1415926 - t)*theta(-7.*3.1415926 + t) + \n     (24.096774193548388 - (6686.*sin(1.5692307692307692 - 2.*t))/35. + (1829.*sin(4.7105263157894735 + t))/28. + (473.*sin(1.5769230769230769 + 3.*t))/14. + (142.*sin(1.5714285714285714 + 4.*t))/23. + (400.*sin(1.5675675675675675 + 5.*t))/27. + \n        (13.*sin(1.5555555555555556 + 6.*t))/10. + (149.*sin(1.5625 + 7.*t))/38. + (105.*sin(1.5757575757575757 + 8.*t))/34. + (12.*sin(1.6111111111111112 + 9.*t))/7. + sin(0.6923076923076923 + 10.*t)/26. + (22.*sin(1.596774193548387 + 11.*t))/9. + \n        (13.*sin(4.68 + 12.*t))/14.)*theta(7.*3.1415926 - t)*theta(-3.*3.1415926 + t) + (-330.44117647058823 + (40.*sin(1.8571428571428572 + t))/37. + (8754.*sin(4.681818181818182 + 2.*t))/103. + (1769.*sin(1.5454545454545454 + 3.*t))/72. + \n        (883.*sin(4.653846153846154 + 4.*t))/15. + (2161.*sin(4.638297872340425 + 5.*t))/34. + (2791.*sin(1.4827586206896552 + 6.*t))/47. + (803.*sin(1.4642857142857142 + 7.*t))/16. + (106.*sin(4.571428571428571 + 8.*t))/13. + (451.*sin(4.6 + 9.*t))/27. + \n        (69.*sin(4.576923076923077 + 10.*t))/7. + (919.*sin(1.4423076923076923 + 11.*t))/153. + (212.*sin(1.4166666666666667 + 12.*t))/39.)*theta(3.*3.1415926 - t)*theta(3.1415926 + t))*theta(sqrt(sign(sin(t/2.))));\n    return vec2(x, y);\n}\n\n// random number generator **********\n// taken from iq :)\nfloat seed;\t//seed initialized in main\nfloat rnd() { return fract(sin(seed++)*43758.5453123); }\n//***********************************\n\n#define STEPS 64\nfloat rad = 4.0;\n\nfloat getDist2(in vec2 fragCoord, float p) {\n    vec2 uv = (fragCoord.xy / iResolution.xy)*vec2(320, 240);\n    float t = p*(32.0*3.1415926);\n    vec2 xy = f(t);\n    \n    if(dot(xy,xy) < 0.001){\n        return 1000.0;\n    }\n        \n    xy *= 0.3;\n    xy += vec2(160.0, 140.0);\n    vec2 v = uv-xy;\n    return dot(v, v);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    seed = iTime + iResolution.y * fragCoord.x / iResolution.x + fragCoord.y / iResolution.y;\n    vec3 color = vec3(0.0);\n\n    for(int i=0; i<STEPS; i++) {\n        float d2 = getDist2(fragCoord, (float(i)+rnd())/float(STEPS));\n        if(d2 < rad*rad) {\n        \tfloat d = sqrt(d2);\n            color = vec3(1.0, 1.0, 1.0)*((rad - d)/rad);\n            break;\n        }\n    }\n\t\n\tfragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}