{
    "Shader": {
        "info": {
            "date": "1681492364",
            "description": "Solme AVIX for Windows Terminal\nDid this for a friend's company\n\nAvailable in windows terminal shader gallery: https://mrange.github.io/windows-terminal-shader-gallery/",
            "flags": 0,
            "hasliked": 0,
            "id": "csGSWG",
            "likes": 1,
            "name": "Solme AVIX for Windows Terminal",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "mrange",
            "viewed": 179
        },
        "renderpass": [
            {
                "code": "// Solme AVIX for Windows Terminal\n//  Did this for a friend's company\n#define TIME        iTime\n#define RESOLUTION  iResolution\n#define PI          3.141592654\n#define TAU         (2.0*PI)\n#define ROT(a)      mat2(cos(a), sin(a), -sin(a), cos(a))\n\nconst mat2 rot45 = ROT(radians(45.0));\nconst vec3 dim = vec3(0.675, -0.025, 0.012);\n\nvec2 off(float n) {\n//  return vec2(-(1.5-n)*dim.x-dim.y, 0.0);\n  return 0.5*sin(vec2(1.0, sqrt(0.5))*(TIME-1.25*n));\n}\n\n// License: MIT, author: Inigo Quilez, found: https://www.iquilezles.org/www/articles/smin/smin.htm\nfloat pmin(float a, float b, float k) {\n  float h = clamp(0.5+0.5*(b-a)/k, 0.0, 1.0);\n  return mix(b, a, h) - k*h*(1.0-h);\n}\n\n// License: CC0, author: M책rten R책nge, found: https://github.com/mrange/glsl-snippets\nfloat pmax(float a, float b, float k) {\n  return -pmin(-a, -b, k);\n}\n\n// License: CC0, author: M책rten R책nge, found: https://github.com/mrange/glsl-snippets\nfloat pabs(float a, float k) {\n  return -pmin(a, -a, k);\n}\n\n// License: MIT, author: Inigo Quilez, found: https://iquilezles.org/www/articles/distfunctions2d/distfunctions2d.htm\nfloat box(vec2 p, vec2 b) {\n  vec2 d = abs(p)-b;\n  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat segmentx(vec2 p, float off) {\n  p.x -= off;\n  float d0 = length(p);\n  float d1 = abs(p.y);\n  return p.x > 0.0 ? d0 : d1;\n}\n\nvec2 dBox(vec2 p) {\n  p *= rot45;\n  const float roff = 0.065;\n  float d = box(p, vec2(0.25-roff));\n  float dd = d-0.18;\n  d -= 0.0275+roff;\n  d = abs(d);\n  d -= dim.z;\n  return vec2(d, dd);\n}\n\nvec2 dA(vec2 p) {\n  p -= off(0.0);\n  vec2 p0 = p;\n  vec2 d0 = dBox(p0);\n  vec2 p1 = p;\n  const mat2 rot1 = ROT(radians(-62.0));\n  p1.x = pabs(p1.x, dim.z*1.5);\n  p1.x -= 0.095;\n  p1.y += 0.075;\n  p1 *= rot1;\n  float d1 = segmentx(p1, 0.03)-dim.z;\n  vec2 p2 = p;\n  p2.y -= -0.03;\n  p2.x = abs(p2.x);\n  float d2 = segmentx(p2, 0.07)-dim.z;\n  float d = d0.x;\n  d = min(d, d1);\n  d = min(d, d2);\n  return vec2(d, d0.y);\n}\n\nvec2 dV(vec2 p) {\n  p -= off(1.0);\n  vec2 p0 = p;\n  vec2 d0 = dBox(p0);\n  vec2 p1 = p;\n  const mat2 rot1 = ROT(radians(62.0));\n  p1.x = pabs(p1.x, dim.z*1.5);\n  p1.x -= 0.095;\n  p1.y -= 0.075;\n  p1 *= rot1;\n  float d1 = segmentx(p1, 0.03)-dim.z;\n  float d = d0.x;\n  d = min(d, d1);\n  return vec2(d, d0.y);\n}\n\nvec2 dI(vec2 p) {\n  p -= off(2.0);\n  vec2 p0 = p;\n  vec2 d0 = dBox(p0);\n  vec2 p1 = p;\n  p1.y = abs(p1.y);\n  p1 = p1.yx;\n  float d1 = segmentx(p1, 0.10)-dim.z;\n  float d = d0.x;\n  d = min(d, d1);\n  return vec2(d, d0.y);\n}\n\nvec2 dX(vec2 p) {\n  p -= off(3.0);\n  vec2 p0 = p;\n  vec2 d0 = dBox(p0);\n  vec2 p1 = p;\n  p1 = abs(p1);\n  p1 *= rot45;\n  float d1 = segmentx(p1, 0.145)-dim.z;\n  float d = d0.x;\n  d = min(d, d1);\n  return vec2(d, d0.y);\n}\n\nvec3 effect(vec2 p) {\n  float aa = 4.0/RESOLUTION.y;\n  \n  vec2 dA = dA(p);\n  vec2 dV = dV(p);\n  vec2 dI = dI(p);\n  vec2 dX = dX(p);\n\n  float d = dX.x;\n  d = pmax(d, -dI.y, dim.z);\n  d = min(d, dI.x);\n  d = pmax(d, -dV.y, dim.z);\n  d = min(d, dV.x);\n  d = pmax(d, -dA.y, dim.z);\n  d = min(d, dA.x);\n\n  vec3 col = vec3(0.0);\n  col = mix(col, vec3(1.0), smoothstep(0.0, -aa, d));\n  col = sqrt(col);\n  return col;\n }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 q = fragCoord/RESOLUTION.xy;\n  vec2 p = -1. + 2. * q;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n  vec3 col = effect(p);\n  fragColor = vec4(col, 1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}