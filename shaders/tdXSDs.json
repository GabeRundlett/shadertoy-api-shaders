{
    "Shader": {
        "info": {
            "date": "1568872667",
            "description": "Old shader thats been sitting. Analytic planes with fake 2d holes on them, no raymarch. Some of the code isnt used",
            "flags": 0,
            "hasliked": 0,
            "id": "tdXSDs",
            "likes": 11,
            "name": "Planes with fake holes",
            "published": 3,
            "tags": [
                "3d",
                "fake",
                "raytrace",
                "plane"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 804
        },
        "renderpass": [
            {
                "code": "// Fake holes in analytic plane.\n\nconst float pi = 3.1415926;\nconst float eps = 0.00001;\nvec2 R;\nvec2 rot(vec2 uv, float b){\n    float a = atan(uv.y, uv.x);\n    float r = length(uv);\n    return vec2(r * cos(a + b), r * sin(a + b));\n   \n}\nvec4 T(vec2 p){\n \t//return pow(texture(iChannel0, p), vec4(2));\n    return texture(iChannel0, p);\n}\nvec4 T2(vec2 p){\n    p = rot(p, pi/2.0);\n \t//return pow(texture(iChannel1, p), vec4(2)); \n    return texture(iChannel1, p);\n}\nvec3 hsv( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\nvec4 cm(vec3 p)\n{\n      return vec4(hsv(vec3(abs(p.z+p.x*2.) + iTime*0.8, 0.99, 0.95)), 1.0);\n}\n\n\n\nvoid mainImage( out vec4 f, in vec2 u )\n{\n    R = iResolution.xy;\n    vec2 uv = (u - .5*R.xy)/R.y;\n    vec2 ouv = u / R;\n    vec2 m = vec2(iMouse.xy / R) - 0.5;\n    m.x *= R.x / R.y;\n    \n \n    vec3 rd = normalize(vec3(uv, 1.0 - dot(uv, uv) * 0.7));\n    vec3 cmd = normalize(vec3(uv, 1.0 - dot(uv, uv) * 0.7));\n    \n   \n    \n     rd.xz = rot(rd.xz, 0.584);\n    cmd.xz = rot(rd.xz, 0.045);\n    \n    vec4 col;\n    \n    vec3 n = normalize(vec3(0.0, 1.0, 0.0));\n    vec3 P = vec3(0.0, -0.25, 0.0);\n    //vec3 P = vec3(0.0, -0.15, 0.0);\n    vec3 h;\n    vec3 ref;\n    float sp = iTime*.4;\n    \n    float d = dot(rd, n);\n    \n    if(abs(d) > eps)\n    {\n    \tfloat t = dot(P, n) / d; \n        \n        if(t >= eps){\n            h = rd * t;\n            ref = reflect(h,rd);\n            col = cm(ref);\n            //col = mix(col,T2(vec2(h.x, h.z + sp) * 4.0),1.0);\n            col = mix(col,T(vec2(h.x, h.z + sp) * 4.0),0.8);\n        }\n\t\telse{\n            h = rd * -t;\n            ref = reflect(h, rd);\n            col = cm(ref);\n            //col = T2(vec2(h.x, -(h.z + sp)) * 4.0);\n            col = mix(col,T2(vec2(h.x, -(h.z + sp)) * 4.0),0.8);\n        }\n        \n        // Spotlight stuff\n        //vec3 lp = vec3(0.45, 0.0, -0.55);\n        //lp -= h;\n        \n        //lp.z *= 1.0;\n        //lp.x *= 1.0;\n        \n        //vec3 lpr = mod(lp, vec3(0.6, 1.0, 1.3)) - 0.5;\n       \n        //lpr.x += 0.09;\n        \n        \n        // Hole stuff\n        vec3 hp = 4.0 * (vec3(-4.0, -(P.y / 2.0), -sp) - h);\n        \n        hp.x*=2.6;\n        hp.z*=2.4;\n        \n        hp = mod(hp, vec3(5., 1., 5.))-1.0 ;\n       \n        vec3 dHx = hp - h*0.6;\n        \n        float hole = smoothstep(0.98, 1.0, length(hp));\n        //float lights = max(smoothstep(1.0, 0.1, length(vec3(lpr.x*2.0,lpr.y,lpr.z)*1.4)),0.4);\n        //float spec = dot(abs(reflect(h, n)), n) * pow(lights, 4.0) * 8.0;\n        \n        vec3 lp2 = vec3(0.4, 0.0, 1.0)*0.9;\n        float  dif = max(dot(h,lp2), 0.0);\n        \n        col *= dif;\n        //col *= lights*1.5;\n        //col += vec4(0.6,0.5,0.4, 0.0) * spec;\n        \n        // Fake holes\n        float sh = smoothstep(1.0, 0.99, length(dHx));\n        col = mix(mix(col,cm(rd), sh)*sh, col, hole);\n        // Fog\n        col *= smoothstep(8.0, -2.0, abs(t));\n        col = mix(cm(cmd),col ,smoothstep(8.0, 0.0, abs(t)));\n    }\n    \n    f = col;\n    //f = sqrt(max(col, 0.));\n}\n\n\n\n\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 46,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}