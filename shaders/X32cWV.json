{
    "Shader": {
        "info": {
            "date": "1727738257",
            "description": "hell",
            "flags": 32,
            "hasliked": 0,
            "id": "X32cWV",
            "likes": 0,
            "name": "Fork 20170723_p theStardus 252",
            "published": 3,
            "tags": [
                "pixel",
                "sort"
            ],
            "usePreview": 0,
            "username": "theStarduster",
            "viewed": 38
        },
        "renderpass": [
            {
                "code": "#define VERT false\n\nfloat fromRgb( vec3 v ) {\n    return ( ( v.z * 256.0 + v.y ) * 256.0 + v.x ) * 255.0;\n}\n\nvec4 draw( vec2 uv ) {\n    //return texture( iChannel0, uv );\n    \n    vec2 dirVec = VERT ? vec2( 0.0, 1.0 ) : vec2( 1.0, 0.0 );\n    float wid = VERT ? iResolution.y : iResolution.x;\n    float pos = VERT ? floor( uv.y * iResolution.y ) : floor( uv.x * iResolution.x );\n    \n    for ( int i = 0; i < int( wid ); i ++ ) {\n        vec2 p = uv + dirVec * float( i ) / wid;\n        if ( p.x < 1.0 && p.y < 1.0 ) {\n            float v = fromRgb( texture( iChannel0, p ).xyz );\n            if ( abs( v - pos ) < 0.5 ) {\n                return texture( iChannel1, p );\n                break;\n            }\n        }\n        \n        p = uv - dirVec * float( i ) / wid;\n        if ( 0.0 < p.x && 0.0 < p.y ) {\n            float v = fromRgb( texture( iChannel0, p ).xyz );\n            if ( abs( v - pos ) < 0.5 ) {\n                return texture( iChannel1, p );\n                break;\n            }\n        }\n    }\n    \n    return vec4( 1.0, 0.0, 1.0, 1.0 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    fragColor = draw( fragCoord / iResolution.xy );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define VERT false\n#define THR ( iMouse.x < 1.0 ? ( sin( iTime * 5.0 ) * 0.5 + 0.5 ) : iMouse.x / iResolution.x )\n#define SHADOW false\n#define REVERSE false\n\nfloat gray( vec3 c ) {\n    return dot( c, vec3( 0.299, 0.587, 0.114 ) );\n}\n\nvec3 toRgb( float i ) {\n    return vec3(\n        mod( i, 256.0 ),\n        mod( floor( i / 256.0 ), 256.0 ),\n        floor( i / 65536.0 )\n    ) / 255.0;\n}\n\nbool thr( float v ) {\n    return SHADOW ? ( THR < v ) : ( v < THR );\n}\n\nvec4 draw( vec2 uv ) {\n    vec2 dirVec = VERT ? vec2( 0.0, 1.0 ) : vec2( 1.0, 0.0 );\n    float wid = VERT ? iResolution.y : iResolution.x;\n    float pos = VERT ? floor( uv.y * iResolution.y ) : floor( uv.x * iResolution.x );\n    \n    float val = gray( texture( iChannel0, uv ).xyz );\n    \n    if ( !thr( val ) ) {\n        float post = pos;\n        float rank = 0.0;\n        float head = 0.0;\n        float tail = 0.0;\n        \n        for ( int i = 0; i < int( wid ); i ++ ) {\n            post -= 1.0;\n            if ( post == -1.0 ) { head = post + 1.0; break; }\n            vec2 p = dirVec * ( post + 0.5 ) / wid + dirVec.yx * uv;\n            float v = gray( texture( iChannel0, p ).xyz );\n            if ( thr( v ) ) { head = post + 1.0; break; }\n            if ( v <= val ) { rank += 1.0; }\n        }\n        \n        post = pos;\n        for ( int i = 0; i < int( wid ); i ++ ) {\n            post += 1.0;\n            if ( wid == post ) { tail = post - 1.0; break; }\n            vec2 p = dirVec * ( post + 0.5 ) / wid + dirVec.yx * uv;\n            float v = gray( texture( iChannel0, p ).xyz );\n            if ( thr( v ) ) { tail = post - 1.0; break; }\n            if ( v < val ) { rank += 1.0; }\n        }\n        \n        pos = REVERSE ? ( tail - rank ) : ( head + rank );\n    }\n    \n    return vec4( toRgb( pos ), 1.0 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    fragColor = draw( fragCoord / iResolution.xy );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord ) { fragColor = texture( iChannel0, fragCoord / iResolution.xy ); }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}