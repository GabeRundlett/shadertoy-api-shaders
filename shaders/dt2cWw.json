{
    "Shader": {
        "info": {
            "date": "1691865166",
            "description": "Test",
            "flags": 32,
            "hasliked": 0,
            "id": "dt2cWw",
            "likes": 1,
            "name": "Paint Thingy",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "Max_H",
            "viewed": 58
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    fragColor.rgb = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//https://www.shadertoy.com/view/3tdSDj\nfloat udSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 ba = b-a;\n    vec2 pa = p-a;\n    float h =clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length(pa-h*ba);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    if(iFrame == 0) return;\n\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 mouseOld = texture(iChannel1, uv);\n    vec4 mouseNew = iMouse;\n    \n    \n    bool isDrawing = mouseNew.z > 0.0;\n    bool isNewLine = mouseNew.w > 0.0;\n    \n    \n    if(!isDrawing)\n    {\n        fragColor = texture(iChannel0, uv);  \n        return;\n    }\n    \n    \n    vec2 samplePoint = fragCoord / iResolution.x;\n    \n    vec2 lineStart = (isNewLine? abs(mouseNew.zw) : mouseOld.xy) / iResolution.x;\n    vec2 lineEnd = mouseNew.xy / iResolution.x;\n    \n    \n    float distanceToLine = udSegment(samplePoint, lineStart, lineEnd);\n    \n    \n    if(distanceToLine <= 0.025)\n    {\n        fragColor = vec4(sin(iTime), cos(iTime), 1.0, 1.0); \n        return;\n    }\n    \n    fragColor = texture(iChannel0, uv);  \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = iMouse;\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}