{
    "Shader": {
        "info": {
            "date": "1559930255",
            "description": "You can test your functions here.\n",
            "flags": 0,
            "hasliked": 0,
            "id": "ttBGRG",
            "likes": 3,
            "name": "Function Visualiser (3f.)",
            "published": 3,
            "tags": [
                "functions"
            ],
            "usePreview": 0,
            "username": "WolframWolf",
            "viewed": 446
        },
        "renderpass": [
            {
                "code": "//no animation\n//#define x uv.x\n\n//animation\n#define x uv.x+iTime\n\n\nvec3 funct = vec3(0.0);\nfloat func(vec2 uv,float f){\n    return smoothstep(f-0.01,f,uv.y) - smoothstep(f,f+0.01,uv.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n/*_________Write you functions here_________*/\n\t\n    funct[0] = (1.0+sin(x))/2.0;\n    funct[1] = (1.0+cos(x))/2.0;\n    funct[2] = (1.0+sin(cos(x)))/2.0;\n    \n/*__________________________________________*/\n    vec3 color = mix(vec3((funct[0]+funct[1]+funct[2])/2.0),vec3(1.0-(funct[0]+funct[1]+funct[2])/2.0),func(uv,funct[0]));\n    vec3 color1 = mix(color,vec3(1.0-(funct[0]+funct[1]+funct[2])/2.0),func(uv,funct[1]));\n    vec3 color2 = mix(color1,vec3(1.0-(funct[0]+funct[1]+funct[2])/2.0),func(uv,funct[2]));\n    fragColor = vec4(color2,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}