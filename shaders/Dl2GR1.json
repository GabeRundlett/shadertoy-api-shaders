{
    "Shader": {
        "info": {
            "date": "1673374722",
            "description": "my first particles & arrays in shaders",
            "flags": 32,
            "hasliked": 0,
            "id": "Dl2GR1",
            "likes": 5,
            "name": "Colored Stars",
            "published": 3,
            "tags": [
                "particles",
                "array"
            ],
            "usePreview": 0,
            "username": "deni_de",
            "viewed": 276
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, in vec2 U )\n{\n    vec2[] arvec = vec2[9](vec2(.2,.1),vec2(.4,.5),vec2(1.,.3),vec2(1.4,.3),vec2(1.2,.2),vec2(.8,.6),vec2(.2,0.7),vec2(.4,.3),vec2(1.5,.5));\n    vec3[] arcol = vec3[9](c1,c2,c3,c4,c5,c6,c7,c8,c9);\n    \n    int l = arvec.length(); vec2 r = iResolution.xy; O *= 0.; vec2 u;\n    \n    for(float i = 1.,z = 1.0 - Random(u + i + iTime*0.001) * 0.35; i < float(l)+1.;\n          //uv |     particle pos    |                          offset animation                             |\n    u = (U/r.y - arvec[int(i-1.)].xy + vec2(-sin(iTime * 1.0 + i )  * .2, sin(iTime + i) * .2) * Rotate(iTime))\n        //    scale | half scaled  animation                      |           rotate          | return pos\n    * vec2(6.5 * z) * (1. - vec2(abs(sin(iTime  * 5. + i))) * .5) * Rotate(iTime * 2. +i-1.)  + vec2(.5),\n      //         texture        |       color               | col power|       alpha                               |\n    O += texture(iChannel0, u ) * vec4(arcol[int(i-1.)],1.) * 2.       * abs(1. - fract(iTime + i * i * .777) - .5)+i++*0.){}\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 O, in vec2 U )\n{\n    vec2 r = iResolution.xy;\n    vec2 n = U/r;\n    vec4 tex = textureLod(iChannel0, n, 3.);\n    vec3 crs = pow( vec3(1. - abs((n.y - .5) * (n.x - .5) )), vec3(255.6)) \n    * (1. - smoothstep(.1,.6,length(n-vec2(.5,.5))) /*add here*/ ) * tex.rgb;\n    crs = pow(crs, vec3(.5) / crs);\n    O.rgb = crs + crs + (1.-smoothstep(.01,.5,pow(length(n - vec2(.5)), .6)));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define c1 vec3(1.,1.,1.)\n#define c2 vec3(.2,.5,.5)\n#define c3 vec3(.5,.3,.3)\n#define c4 vec3(.7,.3,.8)\n#define c5 vec3(.6,.2,.2)\n#define c6 vec3(.4,.6,.6)\n#define c7 vec3(.1,.7,.4)\n#define c8 vec3(.2,.3,.9)\n#define c9 vec3(.9,.2,.1)\n\nmat2 Rotate(float angle)\n{\n    float s = sin(angle); float c = cos(angle);\n    return mat2(c,-s,s,c);\n}\n\nfloat Random (vec2 uv) \n{\n    return fract(sin(dot(uv.xy,vec2(1231.845679823,14351.130895732)))*43758.0456098);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}