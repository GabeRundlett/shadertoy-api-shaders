{
    "Shader": {
        "info": {
            "date": "1668363746",
            "description": "Mipmap experiment.",
            "flags": 32,
            "hasliked": 0,
            "id": "ddj3Wt",
            "likes": 3,
            "name": "Mipmap Overlap Tracking Test",
            "published": 3,
            "tags": [
                "test",
                "tracking",
                "gpmipmap"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 157
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = vec4(0.0);\n\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float a = length(uv - 0.25 * vec2(cos(iTime), sin(iTime))) - 0.1 * (cos(10.0 * uv.x) + sin(10.0 * uv.y)) - 0.25;\n    float b = length(uv - 0.25 * vec2(2.0 * cos(3.0 * iTime), 0.5 * sin(iTime))) - 0.25;\n    if (a < 0.0) fragColor = vec4(0.0, 1.0, 0.0, 1.0);\n    if (b < 0.0) fragColor = vec4(0.0, 0.0, 1.0, 1.0);\n\n    uv = fragCoord / iResolution.xy;\n    fragColor += texture(iChannel1, uv);\n\n    vec4 bufA = texture(iChannel0, uv, 100.0);\n    vec2 pos = bufA.xy / bufA.w;\n    if (length(uv - pos) < 0.01) fragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    float weight = length(texture(iChannel0, uv).rgb);\n    fragColor = vec4(uv * weight, 0.0, weight);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float a = length(uv - 0.25 * vec2(cos(iTime), sin(iTime))) - 0.1 * (cos(10.0 * uv.x) + sin(10.0 * uv.y)) - 0.25;\n    float b = length(uv - 0.25 * vec2(2.0 * cos(3.0 * iTime), 0.5 * sin(iTime))) - 0.25;\n    fragColor = vec4(step(max(a, b), 0.0));\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}