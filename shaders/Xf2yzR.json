{
    "Shader": {
        "info": {
            "date": "1721888671",
            "description": "Using  the single pass algorithm from Simplest detailed fluid (https://www.shadertoy.com/view/7t3SDf) by Davidar.",
            "flags": 32,
            "hasliked": 0,
            "id": "Xf2yzR",
            "likes": 3,
            "name": "Waterfall  9",
            "published": 3,
            "tags": [
                "fluid"
            ],
            "usePreview": 0,
            "username": "guil",
            "viewed": 108
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 C, in vec2 fragCoord )\n{\n    vec2 u = fragCoord/iResolution.xy;\n    vec4 a = texture(iChannel0,u);\n    C = .7*a.z*vec4(1,1.5,1.7,1);    \n    C += (.2 + .3*dgx(fragCoord))*vec4(.4+.03*g(fragCoord),.7,.4,1);\n    C = mix(C,vec4(.5,.7,1.,1),clamp(exp(60.*u.y+8.*sin(5.*u.x)-56.-g(fragCoord)),0.,1.));\n   \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\n\n#define ks 4.0   //kernel convolution size\n#define kf 1.4   //kernel factor : 1/(2*sigmaÂ²)\n#define gf 0.03  //gravity force\n#define af .9    //attraction force \n#define tf .2    //terrain force \n\nfloat h(vec2 u){\n   return (5.*sin(.03*u)*sin(.018*u.yx)+6.*cos(.04*u.yx+.7)*cos(.02*u)).y;\n}\n\nfloat g(vec2 u){\n   return abs(5.+1.4*h(.5*u.yx) + h(u)+.5*h(2.*u.yx)+ .3*h(3.*u)+.2*h(4.*u.yx)+.1*h(7.*u.yx)+.02*h(12.*u))-2.;\n}\n\n\nfloat dgx(vec2 u){\n   float r = g(u+vec2(1,0))-g(u-vec2(1,0));\n   return (r<0.)?0.:r;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec4  o = vec4(0);   \n    for(float i=-ks; i<=ks; i++){\n    for(float j=-ks; j<=ks; j++){\n      vec2 d = vec2(i,j);\n      vec2 v = A(u+d).xy-vec2(0,gf);       \n      o += A(u+d).z                                // neighbour mass\n         * exp(-dot(v+d,v+d)*kf) / 3.1416 *kf      // normalised Gaussian\n         * vec4(v + af*(1.- A(u+d).z- tf*g(u+d))*(v+d),1,0);    // velocity contribution      \n    }}\n   \n    if(o.z!=0.){o.xy /= o.z;} //calculate the average velocity        \n    float l = length(o.xy);   //clamp velocity to avoid mass leakage\n    if (l>2.)o.xy /=l/2.;\n     // Boundaries    \n    vec2 p = u/iResolution.xy;\n    if(p.x>.98||p.x<.02||p.y>.98||p.y<.02){o.z=0.;}\n            \n    if(iMouse.z>0.)                       //mouse click adds velocity\n    {\n        vec2 m = 8.*(u-iMouse.xy)/iResolution.y;\n        o += vec4(m,.1,0)*exp(-dot(m,m));\n    }\n    \n    vec2 m = vec2(.01,.03)*(u-iResolution.xy*vec2(.5,.8));\n        o += vec4(0,0,.03,1)*exp(-dot(m,m));\n    fragColor = o;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}