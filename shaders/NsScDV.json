{
    "Shader": {
        "info": {
            "date": "1644077064",
            "description": "refers to inigo quilez https://www.shadertoy.com/view/MdSGRc",
            "flags": 0,
            "hasliked": 0,
            "id": "NsScDV",
            "likes": 8,
            "name": "odos| voronoi boxes",
            "published": 3,
            "tags": [
                "voronoi"
            ],
            "usePreview": 0,
            "username": "ErinZ",
            "viewed": 550
        },
        "renderpass": [
            {
                "code": "//refers to inigo quilez's \"Voronoi - metrics \"\n//https://www.shadertoy.com/view/MdSGRc\n\nvec2 hash(vec2 p){\n    p = vec2( dot(p,vec2(137.1,373.7)), dot(p,vec2(269.5,183.7)) ); \n    return fract(sin(p)*43758.37); \n    //return vec2(.5,mod(p.x*.3,2.)*.5);\n}\n\nvec3 worley(vec2 p){\n    vec2 n = floor(p);\n    vec2 f = fract(p);\n    vec3 r = vec3(1.);\n    for(int i=-2;i<=2;i++){\n    for(int j=-2;j<=2;j++){\n        vec2 o = hash(n+vec2(i,j));\n        o = sin(iTime/4. + hash(n+vec2(i,j))*6.28)*0.5+0.5;//animate\n        o += vec2(i,j);\n        //float D1 = distance(o,f);//Euclidean\n        //float D2 = abs(o.x-f.x)+abs(o.y-f.y);//Manhattan\n        //float D3 = max(abs(o.x-f.x),abs(o.y-f.y));//Chebyshev\n        float D4 = max(abs(o.x-f.x)*0.866+(o.y-f.y)*0.5,-(o.y-f.y));//Triangle\n        if(D4<r.x){\n        r.x = D4;//distance\n        vec2 r1 = hash(n+vec2(i,j));\n        r.y = r1.x*0.5+0.5;//for colorseed\n        r.z = 1.-step(0.0,0.5*abs(o.x-f.x)+0.866*(o.y-f.y))*(1.0+step(0.0,o.x-f.x))*0.4;//mask\n        }\n    }\n    }\n    return r;\n}\n\n\nfloat logo(vec2 uv);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 n = worley(uv*2.);\n    \n    vec2 dp = vec2( 1.0/iResolution.y, 0.0 );\n    float d = abs(worley( 2.*(uv+dp.xy)).z - worley( 2.*(uv-dp.xy)).z )+\n              abs(worley( 2.*(uv+dp.yx)).z - worley( 2.*(uv-dp.yx)).z );\n    \n    \n    vec3 col = vec3(.5,.4,2)*n.y;\n    col *= n.z+.2;//shadow\n    col = col-n.x*0.2;//ao\n    col = clamp(col,0.,1.);\n    col += d;//outline\n    col += logo(uv);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n\n\n#define S(v,r) smoothstep( r, r+ 3./iResolution.y, v ) \nfloat logo(vec2 uv){\nfloat n = 0.;\nn += S(.05,abs(length(uv-vec2(-1.23,0))-.12));\nn *= 1.-S(-1.25,uv.x);\nn += S(.17,abs(uv.y))*S(.05,abs(uv.x+1.29));\nn += S(.05,abs(length(uv-vec2(-1.5,0))-.12));\nn += S(.05,abs(length(uv-vec2(-0.9,0))-.12));\nn += (1.+S(-.6,uv.x)-S(.05,uv.y))*S(.05,abs(length(uv-vec2(-0.6,.03))-.09));\nn += (1.-S(-.6,uv.x)+S(-.05,uv.y))*S(.05,abs(length(uv-vec2(-0.6,-.04))-.09));\nreturn n;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}