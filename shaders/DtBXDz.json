{
    "Shader": {
        "info": {
            "date": "1675897012",
            "description": "today i learned , to normalize a vector means, to multiply it so that its length becomes 1",
            "flags": 0,
            "hasliked": 0,
            "id": "DtBXDz",
            "likes": 2,
            "name": "normalize vector",
            "published": 3,
            "tags": [
                "normalize"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 195
        },
        "renderpass": [
            {
                "code": "float f_n_dist_line(in vec2 p, in vec2 a, in vec2 b) {\n\tvec2 ba = b - a;\n\tvec2 pa = p - a;\n\tfloat h = clamp(dot(pa, ba) / dot(ba, ba), 0., 1.);\n\treturn length(pa - h * ba);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 o_fc = (fragCoord.xy -iResolution.xy*.5)/iResolution.y;\n    vec2 o_mc = (iMouse.xy -iResolution.xy*.5)/iResolution.y;\n    float n_tau =6.2831;\n    \n    if(iMouse.z == 0.){\n        o_mc = vec2(\n            sin(iTime *2.)*.25,\n            cos(iTime *1.)*.4\n        );\n    }\n    float n_zoom = 20.;\n    o_fc *= n_zoom;\n    o_mc *= n_zoom;\n    \n    vec2 o = abs(fract(o_fc)-.5)*2.;\n    float n_grid = max(o.x, o.y);\n    float n_th = 0.02;\n    float n_aa = 1./iResolution.x; \n    n_grid = smoothstep(1.-n_th-n_aa, 1.,  n_grid); \n\n    float n_circ = cos(length(((o_fc)/n_zoom))*n_tau*n_zoom)*.5+.5;\n    //n_circ = pow(n_circ,2000.);\n    n_circ = smoothstep(1.-n_th-n_aa, 1.,  n_circ); \n    \n    vec4 o_col = vec4(0.);\n    o_col += n_grid;\n    o_col += n_circ;\n\n    \n    float n_dist_line_to_mc = 1.-f_n_dist_line(o_fc, vec2(0.), o_mc);\n    \n    vec2 o_mc_normalized = normalize(o_mc);\n    \n    float n_dist_line_to_mc_normalized = 1.-f_n_dist_line(o_fc, vec2(0.), o_mc_normalized);\n    \n    o_col += n_dist_line_to_mc*vec4(1., 0., 0., 1.);\n    o_col += n_dist_line_to_mc_normalized*vec4(0., 1., 0., 1.);\n    \n    float n_dist_mc = length(o_fc - o_mc);\n    float n_dist_mc_normalized = length(o_fc - o_mc_normalized);\n    n_th = 0.5;\n    \n    n_dist_mc = smoothstep(n_th+n_aa, n_th, n_dist_mc);\n    n_dist_mc_normalized = smoothstep(n_th+n_aa, n_th, n_dist_mc_normalized);\n    o_col += n_dist_mc*vec4(0., 0., 1., 1.);\n    o_col += n_dist_mc_normalized*vec4(0., 1., 1., 1.);\n    \n    //o_col += n_dist_line_to_mc_normalized;\n    //o_col = vec4(n_dist_line_to_mc);\n    \n    \n    \n    fragColor = o_col;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}