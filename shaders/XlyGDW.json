{
    "Shader": {
        "info": {
            "date": "1474594169",
            "description": "I needed an hexagon animation for my game so I hacked this hexagon function from iq tutorials:\nhttp://iquilezles.org/articles/distfunctions/distfunctions.htm\n",
            "flags": 0,
            "hasliked": 0,
            "id": "XlyGDW",
            "likes": 39,
            "name": "Hexagon",
            "published": 3,
            "tags": [
                "2d",
                "hexagon",
                "distance"
            ],
            "usePreview": 0,
            "username": "antonOTI",
            "viewed": 2095
        },
        "renderpass": [
            {
                "code": "#define _Smooth(p,r,s) smoothstep(-s, s, p-(r))\n#define PI 3.141592\n#define TPI 6.2831\n\n#define STRIPES 6.\n#define COL 3.\n#define SPEED 1.76\n\n#define POWER .2\n\t\n// from https://iquilezles.org/articles/smin\n// polynomial smooth min (k = 0.1);\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat smax(float a, float b, float k)\n{\n    return (-smin(-a,-b,k));\n}\n\nfloat df(vec2 pos)\n{\n    vec2 q = abs(pos);\n\treturn smax(smax((q.x * 0.866025 +pos.y*0.5),q.y,.05),smax((q.x * 0.866025 -pos.y*0.5),q.y,.05),.05);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float Closure =  iMouse.x / iResolution.x;\n    \n\tvec2 uv = fragCoord.xy / iResolution.y;\n    vec2 position = vec2(iResolution.x /iResolution.y * .5,.5);\n    \n    position = uv - position;\n    \n    \n    vec3 col1 = vec3(.8,.8,0.);\n    vec3 col2 = vec3(.03,0.,.3);\n    vec3 col = vec3(1.);// mix(col1,col2,pow(length(position),POWER));\n    \n    \n    \n    float dist = 1. - df(position *2.);\n    \n    float stripID = ceil(dist * STRIPES );\n    float v = mod(stripID , 2.) * 2. - 1.; \n    v *= SPEED;\n    \n    float shape =  _Smooth(sin(dist * TPI * STRIPES), .1 - clamp(Closure * 3. -2.,0.,1.) * 1.2,.2);\n    \n    \n    float angle = (atan(position.y,position.x)) ;\n   \tshape *= _Smooth(sin(angle * COL + iTime * stripID * v ),0.4 - clamp(Closure * 1.5 ,0.,1.) * 1.5,.01);\n    shape *= _Smooth(dist,0.,.01);\n    \n    col *= shape;\n    \n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}