{
    "Shader": {
        "info": {
            "date": "1662805895",
            "description": "reference: [url] https://twitter.com/ruuddotorg/status/1566955520652500992 [/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "stcfRM",
            "likes": 37,
            "name": "Peano x Sierpinski ",
            "published": 3,
            "tags": [
                "fractal",
                "sierpinski",
                "short",
                "reproduction",
                "peano"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 466
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = ( u - .5*R ) / R.y, F;\n     O = vec4(1);     \n    if (abs(U.x)>.5) return;                                        // out of bounds\n    int m=1, z=0, t = int(iTime)%8;\n    \n    for( ; z < 1+min(t,8-t); z++ ) {                                // === fractal loop\n        U *= 3.; \n        ivec2 I = ivec2(mod(U+1.5,3.)) - 1;                         // sub-tile id\n        if ( m==2 && (I.x+I.y+2)%2 < 1 ) U = vec2(U.y,-U.x);        // rot  // +2 for MacOS\n        if ( I.y==0 && I.x!=0 ) U = float(I.x)*vec2(-U.y,U.x);      // rot\n                                                //  ( c = tile id, I = sub-tile pos ) â†’  sub-tile id \n        m = int[]( -3,2,1,3,4,3,1,2,3, -3,-3,-3,2,4,2,3,3,3, -3,2,3,3,4,3,1,2,3, \n                   0,0,-5,0,6,0,5,0,0, 0,0,6, 0,6,0, 5,0,0,  0,0,6, 0,6,0, 6,0,0 ) [I.x+3*I.y+9*m-5];\n        if ( m==0 )  return;                                        // empty area\n        if ( m < 0 ) U = -U, m = -m;                                // rot2 ( = sym )\n    }   \n    F = fract(U+1.5); \n    float y = ( 1. + smoothstep(1.,0., m!=5 ? F.x : F.x/2. ) ) / 3.,// --- draw tile elements\n          d =   m==1 ? F.y - y                                      // meander elements\n              : m==2 ? F.y + y-1.       \n              : m==3 ? length(F) - .67  \n              : m==4 ? F.y - y                                      // diagonal elements\n              : m==5 ? F.y - 4.*y+2.    \n              :        F.y+F.x - 1.;              \n    O = sqrt( abs(d) * R.yyyy/pow(3.,float(z)) );                   // draw with AA + final sRGB\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}