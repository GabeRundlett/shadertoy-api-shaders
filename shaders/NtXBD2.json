{
    "Shader": {
        "info": {
            "date": "1651448478",
            "description": "My first shader :D\n\nEdge detection: Sobel operator\n\nQuantize brightness: based on https://lettier.github.io/3d-game-shaders-for-beginners/posterization.html",
            "flags": 0,
            "hasliked": 0,
            "id": "NtXBD2",
            "likes": 0,
            "name": "Simple Toon (Quantize - Edges)",
            "published": 3,
            "tags": [
                "toon"
            ],
            "usePreview": 0,
            "username": "TheKraai",
            "viewed": 278
        },
        "renderpass": [
            {
                "code": "const int levels = 5;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    \n    \n    // EDGE DETECTION\n\n    vec4 edge_x;\n    vec4 edge_y;\n\n    for (int dx = -1; dx <= 1; dx++) {\n    for (int dy = -1; dy <= 1; dy++) {\n        vec2 uv = (fragCoord + vec2(dx,dy)) / iResolution.xy;\n        \n        vec4 pixel = texture(iChannel0, uv);\n                \n        edge_x += float(dx + dx * abs(dy)) * pixel;\n        edge_y += float(dy + dy * abs(dx)) * pixel;\n    }\n    }\n    \n    float edge_x_max = max(edge_x.r, max(edge_x.g, edge_x.b));\n    float edge_y_max = max(edge_y.r, max(edge_y.g, edge_y.b));\n    \n    float edge = edge_x_max * edge_x_max + edge_y_max * edge_y_max;\n    edge = smoothstep(.04,.09,edge);\n    // result: mostly black, but white along edges\n    \n    \n    \n    // BRIGHTNESS QUANTIZATION\n    \n    vec4 pixel = texture(iChannel0, uv);\n    float grey = max(pixel.r, max(pixel.g, pixel.b));\n    float factor = ceil(grey * float(levels)) / float(levels);\n    vec3 color = pixel.rgb * factor;\n\n\n\n    // PUTTING IT ALL TOGETHER\n\n    fragColor = vec4(color - edge, 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}