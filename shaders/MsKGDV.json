{
    "Shader": {
        "info": {
            "date": "1456636925",
            "description": "Can you do it better?make it smallest?:-D\nYou can change the size,color,position,shape.\nBut please make it be similar to Bezier curve,;-)",
            "flags": 0,
            "hasliked": 0,
            "id": "MsKGDV",
            "likes": 9,
            "name": "Bezier (279 chars)",
            "published": 3,
            "tags": [
                "2d",
                "bezier",
                "fast",
                "2tc",
                "codegolf",
                "smallest",
                "simplest"
            ],
            "usePreview": 0,
            "username": "834144373",
            "viewed": 1368
        },
        "renderpass": [
            {
                "code": "//-----------------New version 2016/Oct-----------------------\n\n//-----------------Now is 279 chars !!!!!----------------------------------\n\n/*----------------------Oct/12---------------------------------------\n*\t      iapafoto              coyote              834144373\n*         -4 chars              -3 chars\t\t\t0 char\n*\t\t  -3+1 chars\t\t\t-3 chars\t\t   +1 char :(coyote suggest)o-=o... -> o=o-o...\n*\t\t   0 chars\t\t\t\t-3 chars\t\t\t0 char\n*\t\t  \t\t\t     Oct/13\n*\t\t  -14-1 chars\t\t\t-3 chars\t\t    0 char        \n*\t\t  -8 -3 chars\t\t\t\t\t\t\t\t0 char\n*\t\t  -1 chars\t\t\t\t\t\t\t\t   \t0 char\n*\t\t\t\t\t     Oct/15\n*\tbrain storming version!!!  -7+1 chars\t\t  +1 char :(iapafoto suggest)M(t)..->M(k,t)...\n*/\n\n/*----------------------Oct/10---------------------------------------\n*\tbase on iapafoto's amazing method to reduce 35 chars to 331!!!!!\n*-----------------------Oct/10---------------------------------------\n\n/*----------------------Oct/15---------------------------*/\n//+1 char to solution the problem by iapafoto :ðŸ˜ƒ---------\n#define M(k,t) (k*mat2(t.y,-t.x,0,0)).xx,\n//-7 chars-----with coyote' brain storming :ðŸ˜€!!!---------\n//#define M(t) mat2(t.y,-t.x,0,0)).xx,\nvoid mainImage( out vec4 o, vec2 u ) {\n    vec2 B=iResolution.xy, C=.3*B.yx-u, A=(B-=u)-C-u,\n         x = .5*M(C,A) y=M(B,C) z=M(A,B) D=B-C;\n    u = x*(A-C)+y*(A-=B)+z*D;\n    u.x = -u.x;\n    A -= D;\n    x = clamp(.5*M((C+(y*z-x*x)*u.yx/dot(u,u)),A)  x-x, y+=x+x+z ) / y;\n    o -= o - length(C + x * (D+D + x * A));\n}\n/*----------------------Oct/15---------------------------*/\n\n/*----------------------Oct/13-----------------------------\n#define U(a,b) (a.x*b.y-b.x*a.y)\nvoid mainImage( out vec4 o, vec2 u ) {\n    //Point A,B,C\n    \n    //-1 char again by iapafoto's brain storming :ðŸ˜€\n    vec2 k=iResolution.rg, C=.3*k.yx-u, B=k-u, A=B-C-u;\n    float x = .5*U(C, A), y = U(B, C), z = U(A, B);\n    /-----------------------------------------\n    //***new shape -8 chars by iapafoto :b \n    //  vec2 k=iResolution.rg, C=.3*k.yx, B=k-u, A=B-C;\n    //  //-14 chars by iapafoto's crazy :D \t\n    //  //vec2 k=iResolution.rg, C=.6*k, B=C.yx-(u+=u-k), A=-C-u;\n    //  C-=u;\n    //  float x = .5*U(C, A), y = U(B, C), z = U(A, B);\n\t/-----------------------------------------    \n\n    //-3 chars by coyote's crazy :D\t\n    u = A*(x+y) + B*(z-y) - C*(x+z);\n    u.x = -u.x;\n    A -= B += B - C;\n    x = clamp(.5 * U(( C + (y * z - x * x) * u.yx / dot(u, u)), A) / (x + x + y + z), 0., 1.);\n\n    //-3 by iapafoto\n    o = o-o + length(C + x * (B-C + x * A));\n    //-1 by iapafoto\n    //o = o-o + .3*length(C + x * (B-C + x * A));\n}\n------------------------Oct/13------------------------------*/\n\n/*----------------------Oct/10-----------------------------\n\t//-4 chars with iapafoto magic change \n\t//-3 again with coyote magic change   \n    vec2 C=o.rg/o.x, B=C.yx-u, A=-C-u, s;\n    C-=u;\n    float x = .5*U(C, A), y = U(B, C), z = U(A, B);\n    s = A*(x+y) + B*(z-y) - C*(x+z);\n    u = B - C;\n    A -= B + u;\n    x = clamp(.5 * U(( C + (y * z - x * x) * vec2(s.y, -s.x) / dot(s, s)), A) / (x + x + y + z), 0., 1.);\n    \n    // accept coyote suggestion :)\n    o = o-o + 80.*length(C + x * (u + u + x * A));\n    //-3 chars with antialiased by iapafoto :)\n    //o -= o - 80.*length(C + x * (u + u + x * A));\n    //o = vec4(length(C + x * (u + u + x * s)) < .02);\n}\n------------------------Oct/10---------------------------*/\n\n/*----------------------Oct/10----------------------------\n//Oct/10 Accept iapafoto's amazing method to reduce 35 chars to 331!!!!!\n#define U(a,b) (a.x*b.y-b.x*a.y)\nvoid mainImage( out vec4 o,vec2 u ) {\n//void mainImage( out vec4 o,in vec2 u ) {\n\tu += u-(o.rg=iResolution.rg),u /= o.y;\n    //point A,B,C\n    vec2 C=o.rg/o.x, B=C.yx-u, A=-C-u; C-=u;\n    \n    //o-=o; //remove it by coyote\n    float x = .5*U(C, A), y = U(B,C), z = U(A, B);\n    vec2 i = A-C, j = A-B, k = B-C, \n        s = x * i + y * j + z * k, \n        r = C + (y * z - x * x) * vec2(s.y, -s.x) / dot(s, s);\n    x = clamp(.5 * U(r,(i-k-k)) / (x + x + y + z), 0., 1.);\n    \n    //great change -3 chars by coyote :-)\n    o = vec4(length(C + x * (k + k + x * (j - k))) < .02);\n    //length(C + x * (k + k + x * (j - k))) < .02 ? ++o : o;\n}\n------------------------Oct/10---------------------------*/\n\n//------------------History 2016/Feb----------------------\n//now it's 366 chars!!!\n//-5 to 366 by coyote : g = t*(b*Z+d*X+a*Y).yx,g.y = -g.y;\n/*\n#define M(a,b) cross(vec3(a,0),vec3(b,0)).z\nvoid mainImage( out vec4 o, in vec2 u )\n{\n    //u = (u+u-(u=iResolution.rg))/u.y; // -3 ,but it works fine on windows by 834144373\n\tu += u-(o.rg=iResolution.rg),u /= o.y;\n    \n    //point A,B,C\n    vec2 C = o.rg/o.x,B = C.yx-u,A = -C-u, //-2 to 373 chars by 834144373\n    //vec2 C = vec2(.8,0),B = C.xx-u,A = -C-u,\n    //C-=u;       \n    Z = (C-=u)-B,X = B-A,Y = C-A,p,g; //-3 to 375 chars by 834144373\n    //bezier function\n    float t=2.,a = M(A,C),b = t*M(B,A),d = t*M(C,B);\n    //vec2 Z = C-B,X = B-A,Y = C-A,p,g;\n    \n    g = t*(b*Z+d*X+a*Y).yx,g.y = -g.y; //-5 to 366 chars by coyote\n    //g = t*(b*Z+d*X+a*Y),g = vec2(g.y,-g.x);\n\tp = (a*a-b*d)*g/dot(g,g);\n\t//t = clamp((M(A-p,Y)+t*M(X,A-p))/(t*a+b+d),0.,1.);\n    o-=o;\n    //-2 to 371 chars by 834144373\n    length(mix(mix(A,B,t = clamp((M(A-p,Y)+t*M(X,A-p))/(t*a+b+d),0.,1.)),mix(B,C,t),t)) < .02 ? ++o : o;\n    //length(mix(mix(A,B,t),mix(B,C,t),t)) < .02 ? ++o : o;\n}\n--------------------History 2016/Feb---------------------*/\n\n/*------------------------reference----------------------------\n//http://research.microsoft.com/en-us/um/people/hoppe/ravg.pdf\n#define det(a,b) cross(vec3(a,0.),vec3(b,0.)).z\nfloat Bezier(vec2 b0,vec2 b1,vec2 b2){\n\tfloat a = det(b0,b2),b = 2.*det(b1,b0),d = 2.*det(b2,b1);\n\tfloat f = b*d-a*a;\n\tvec2 d21 = b2-b1,d10 = b1-b0,d20 = b2-b0;\n\tvec2 gf = 2.*(b*d21+d*d10+a*d20);\n\tgf = vec2(gf.y,-gf.x);\n\tvec2 pp = -f*gf/dot(gf,gf);\n\tvec2 d0p = b0-pp;\n\tfloat ap = det(d0p,d20),bp=2.*det(d10,d0p);\n\tfloat t = clamp((ap+bp)/(2.*a+b+d),0.,1.);\n\tvec2 vi = mix(mix(b0,b1,t),mix(b1,b2,t),t);\n\treturn length(vi);\n}\nvoid mainImage( out vec4 f, in vec2 u )\n{\n    vec3 R = iResolution;\n\tu = (u+u-R.xy)/R.y;\n    vec2 A = vec2(-0.6,0.),B = vec2(0.,1.),C = -A;\n    f -= f;\n    Bezier(A-u,B-u,C-u)<.01 ? f = vec4(1.) : f;\n    \n}\n-------------------------reference-----------------------------*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}