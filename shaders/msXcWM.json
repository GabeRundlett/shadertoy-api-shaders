{
    "Shader": {
        "info": {
            "date": "1687000409",
            "description": "All year long I'm going to just focus on truchet tiles and the likes! (mouseable)\n\n2D pattern https://www.shadertoy.com/view/msXcWM",
            "flags": 0,
            "hasliked": 0,
            "id": "msXcWM",
            "likes": 23,
            "name": "Year of Truchets #039",
            "published": 3,
            "tags": [
                "raymarching",
                "truchet",
                "tiles"
            ],
            "usePreview": 0,
            "username": "byt3_m3chanic",
            "viewed": 301
        },
        "renderpass": [
            {
                "code": "/** \n\n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n    \n    Year of Truchets #039\n    06/18/2023  @byt3_m3chanic\n    Truchet Core \\M/->.<-\\M/ 2023 \n\n*/\n\n#define R iResolution\n#define T iTime\n#define M iMouse\n\n#define PI          3.1415926\n#define PI2         6.2831853\n\n#define MIN_DIST    .1e-5\n#define MAX_DIST    15.\n\nmat2 rot(float a){ return mat2(cos(a),sin(a),-sin(a),cos(a)); }\nfloat hash21(vec2 p){return fract(sin(dot(p,vec2(23.43,84.21)))*4832.3234);}\nfloat lsp(float b, float e, float t){return clamp((t-b)/(e-b),0.,1.); }\nfloat eoc(float t){return (t = t-1.)*t*t+1.; }\n\nfloat opx(in float d, in float z, in float h){\n    vec2 w = vec2( d, abs(z) - h );\n  \treturn min(max(w.x, w.y), 0.) + length(max(w, 0.));\n}\n\nvec3 hp,hitpoint;\nvec2 gid, sid;\nfloat speed=0.,tspeed=0.,tmod=0.,ga1=0.,ga2=0.,ga3=0.,ga4=0.;\nmat2 cam,sam;\n\nconst float size = 1.5;\nconst float hlf = .75;\nconst float tk = .2;\n    \nvec2 map(vec3 p) {\n    vec2 res = vec2(1e5,0.);\n \n    p.y += speed;\n\n    vec2 uv = mod(p.xy+hlf,size)-hlf;\n    vec2 id = floor((p.xy+hlf)/size);\n    \n    float rnd = hash21(id);\n    if(rnd>.5) uv.y = -uv.y;\n    rnd=fract(rnd*32.23);\n    \n    float sn = hash21(id.yx)*11.;\n    sn = mod(sn,10.);\n    \n    float t1 = lsp(sn,sn+1.,tmod);\n    float t2 = lsp(sn+2.,sn+3.,tmod);\n    t1 = eoc(t1); t1 = t1*t1*t1;\n    t2 = eoc(t2); t2 = t2*t2*t2;\n    cam=rot((t1+t2)*1.5707);\n    uv.xy*=cam;\n    vec3 q = vec3(uv.xy,p.z);\n    vec2 u2 = vec2(length(uv-hlf),length(uv+hlf));\n    vec2 q2 = u2.x<u2.y ? uv-hlf : uv+hlf;\n    \n    float d1 = length(uv)-(.725);\n    float d2 = abs(length(q2)-hlf)-tk;\n    if(rnd>.85) d2 = min(length(q.x)-tk,length(q.y)-tk);\n   \n    d2 = max(d1,-d2);\n    d2 = opx(d2,q.z+.45,6.)-.0125;\n    \n    if(d2<res.x) {\n        res=vec2(d2,2.);\n        hp=q;\n        gid=id;\n        \n    }\n\n    return res;\n}\n\n\nvec3 normal(vec3 p, float t) {\n    float e = MIN_DIST*t;\n    vec2 h =vec2(1,-1)*.5773;\n    vec3 n = h.xyy * map(p+h.xyy*e).x+\n             h.yyx * map(p+h.yyx*e).x+\n             h.yxy * map(p+h.yxy*e).x+\n             h.xxx * map(p+h.xxx*e).x;\n    return normalize(n);\n}\n\n\nvec2 marcher(vec3 ro, vec3 rd, inout vec3 p) {\n    float d=0.,m=0.;\n    for(int i=0;i<80;i++){\n        vec2 t = map(p);\n        d += i<32? t.x*.4:t.x;\n        m  = t.y;  \n        p = ro + rd * d;\n        if(t.x<d*MIN_DIST||d>MAX_DIST) break;\n    } \n    return vec2(d,m);\n}\n\nvec3 tex3D(sampler2D t, in vec3 p, in vec3 n ){\n    n.xy*=sam;\n    n = max(abs(n), MIN_DIST);\n    n /= dot(n, vec3(1));\n\tvec3 tx = texture(t, p.yz).xyz;\n    vec3 ty = texture(t, p.zx).xyz;\n    vec3 tz = texture(t, p.xy).xyz;\n    return mat3(tx*tx, ty*ty, tz*tz)*n;\n}\n\nvec4 render(inout vec3 ro, inout vec3 rd, inout vec3 ref, inout float d, vec2 uv) {\n\n    vec3 C = vec3(0);\n    float m = 0.;\n    vec3 p = ro;\n    vec2 ray = marcher(ro,rd,p);\n    d=ray.x;m=ray.y;\n    \n    // save globals post march\n     sid = gid; hitpoint = hp; sam = cam;\n    \n    if(d<MAX_DIST)\n    {\n        vec3 n = normal(p,d);\n        vec3 lpos = vec3(5.,17,15);\n        vec3 l = normalize(lpos-p);\n        \n        float diff = clamp(dot(n,l),.15,1.);\n        float shdw = 1.;\n        for( float t = .01; t < 10.; ) {\n            float h = map(p + l*t).x;\n            if( h<MIN_DIST ) { shdw = 0.; break; }\n            shdw = min(shdw, 10.*h/t);\n            t += h;\n            if( shdw<MIN_DIST ) break;\n        }\n        diff = mix(diff,diff*shdw,.45);\n    \n        float spec = .75 * pow(max(dot(normalize(p-ro),reflect(normalize(lpos),n)),0.),24.);\n        vec3 h = vec3(1.);\n        if(m == 2.) {\n            float rnd = hash21(sid);\n            h = rnd>.85?mix(vec3(.4,.4,.5),tex3D(iChannel2,abs(hitpoint*.25),n).rrr,.5):\n            rnd>.65?tex3D(iChannel1,abs(hitpoint*.5),n).rgb:\n            vec3(.91,.30,.15)*tex3D(iChannel0,abs(hitpoint*1.3),n).rrb;\n        }\n        if(m == 3.) h = vec3(.005);\n        ref = h;\n        \n        C = h * diff+max(spec,-shdw);\n\n        ro = p+n*.005;\n        rd = reflect(rd,n);\n    } \n    return vec4(C,d);\n}\n\n\nvec3 FC = vec3(0.016,0.012,0.004);\nvoid mainImage( out vec4 O, in vec2 F )\n{   \n    speed = T*.25;\n    tspeed = T*.6;\n    tmod = mod(tspeed,15.);\n    \n    // uv ro + rd\n    vec2 uv = (2.* F.xy-R.xy)/max(R.x,R.y);\n    vec3 ro = vec3(0,0,11);\n    vec3 rd = normalize(vec3(uv, -1));\n    \n    // mouse //\n    float x = M.xy==vec2(0) || M.z<1. ? 0. : -(M.y/R.y*.14-.07)*PI;\n    float y = M.xy==vec2(0) || M.z<1. ? 0. : -(M.x/R.x*.14-.07)*PI;\n    float ff= .1*sin(T*.0879), fx= .1*cos(T*.12);\n    mat2 rx = rot(.28-fx-x), ry = rot(ff-y);\n    \n    ro.zy *= rx;rd.zy *= rx;\n    ro.xz *= ry;rd.xz *= ry;\n    \n    // reflection loop (@BigWings)\n    vec3 C = vec3(0),ref = vec3(0), fil = vec3(1);\n    float d = 0., a = 0.;\n    \n    // up to 4 is good - 2 average bounce\n    for(float i=0.; i<2.; i++) {\n        vec4 pass = render(ro, rd, ref, d, uv);\n        C += pass.rgb*fil;\n        fil*=ref;\n        if(i==0.)a=pass.w;\n    }\n           \n    C = mix(FC,C,exp(-.0045*a*a*a));\n    C=pow(C, vec3(.4545));\n    O = vec4(C,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 3,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 46,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}