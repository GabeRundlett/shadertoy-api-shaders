{
    "Shader": {
        "info": {
            "date": "1570297961",
            "description": "草をフラクタル構造とみなせることに気づいたので。",
            "flags": 0,
            "hasliked": 0,
            "id": "wsGGDm",
            "likes": 6,
            "name": "grass generator",
            "published": 3,
            "tags": [
                "practice"
            ],
            "usePreview": 0,
            "username": "gorilla",
            "viewed": 503
        },
        "renderpass": [
            {
                "code": "vec4 grass = vec4(0.464f,0.683f,0.601f,1.0f);\n\nvoid drawSquare(in vec2 amin, in vec2 amax, in vec2 fragCoord, inout vec4 fragColor)\n{\n    if (amin.x <= fragCoord.x && fragCoord.x <= amax.x) {\n    \tif (amin.y <= fragCoord.y && fragCoord.y <= amax.y) {\n        \tfragColor = grass;  \n    \t}\n    }\n}\n\nvoid drawGrass(in vec2 offset, in float scale, inout vec4 fragColor, in vec2 fragCoord)\n{\n    offset.y += iResolution.y - 228.0f;\n    vec2 min1 = (vec2(0.0f,50.0f))*scale + offset;\n    vec2 max1 = (vec2(130.0f,60.0f))*scale + offset;\n\tdrawSquare(min1, max1, fragCoord, fragColor);\n\n    vec2 min2 = (vec2(65.0f,10.0f))*scale + offset;\n    vec2 max2 = (vec2(75.0f,80.0f))*scale + offset;\n\tdrawSquare(min2, max2, fragCoord, fragColor);\n\n    vec2 min3 = (vec2(20.0f,80.0f))*scale + offset;\n    vec2 max3 = (vec2(120.0f,90.0f))*scale + offset;\n\tdrawSquare(min3, max3, fragCoord, fragColor);\n\n    vec2 min4 = (vec2(20.0f,100.0f))*scale + offset;\n    vec2 max4 = (vec2(120.0f,110.0f))*scale + offset;\n\tdrawSquare(min4, max4, fragCoord, fragColor);\n\n    vec2 min5 = (vec2(20.0f,120.0f))*scale + offset;\n    vec2 max5 = (vec2(120.0f,130.0f))*scale + offset;\n\tdrawSquare(min5, max5, fragCoord, fragColor);\n\n    vec2 min6 = (vec2(20.0f,80.0f))*scale + offset;\n    vec2 max6 = (vec2(30.0f,130.0f))*scale + offset;\n\tdrawSquare(min6, max6, fragCoord, fragColor);\n\n    vec2 min7 = (vec2(110.0f,80.0f))*scale + offset;\n    vec2 max7 = (vec2(120.0f,130.0f))*scale + offset;\n\tdrawSquare(min7, max7, fragCoord, fragColor);\n\n    vec2 min8 = (vec2(110.0f,80.0f))*scale + offset;\n    vec2 max8 = (vec2(120.0f,130.0f))*scale + offset;\n\tdrawSquare(min8, max8, fragCoord, fragColor);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.772f, 0.913f, 0.607f,1.0f);\n    float loop = mod(float(iFrame),29.0f)/30.0f; // 0.0167f ~ 1.0f\n    //loop += 0.0167f;\n\n    loop = pow(loop, 1.216f);\n    loop = 1.0f - loop;\n    for (int i = 0; i < 3; ++i) {\n\t    drawGrass(vec2(1920.0f*float(i)-(1920.0f*loop/2.0f)*float(i), -1920.0f*(1.0f-loop)-1680.0f),\n                  16.0f-loop*8.0f, fragColor, fragCoord);\n    }\n    for (int i = 0; i < 5; ++i) {\n\t    drawGrass(vec2(960.0f*float(i)-(960.0f*loop/2.0f)*float(i), -960.0f*(1.0f-loop)-720.0f),\n                  8.0f-loop*4.0f, fragColor, fragCoord);\n    }\n    for (int i = 0; i < 10; ++i) {\n\t    drawGrass(vec2(480.0f*float(i)-(480.0f*loop/2.0f)*float(i), -480.0f*(1.0f-loop)-240.0f),\n                  4.0f-loop*2.0f, fragColor, fragCoord);\n    }\n    for (int i = 0; i < 20; ++i) {\n\t    drawGrass(vec2(240.0f*float(i)-(240.0f*loop/2.0f)*float(i), -240.0f*(1.0f-loop)),\n                  2.0f-loop, fragColor, fragCoord);\n    }\n    for (int i = 0; i < 40; ++i) {\n\t    drawGrass(vec2(120.0f*float(i)-(120.0f*loop/2.0f)*float(i), 120.0f*loop),\n                  1.0f-loop/2.0f, fragColor, fragCoord);\n    }\n    for (int i = 0; i < 80; ++i) {\n\t    drawGrass(vec2(60.0f*float(i)-(60.0f*loop/2.0f)*float(i), 120.0f+120.0f*loop/2.0f),\n                  (1.0f-loop/2.0f)/2.0f, fragColor, fragCoord);\n    }\n    \n    if (fragCoord.y < iResolution.y-50.0f)\n        return;\n    for (int i = 0; i < 160; ++i) {\n        \n\t    drawGrass(vec2(30.0f*float(i)-(30.0f*loop/2.0f)*float(i), 180.0f+60.0f*loop/2.0f),\n                  (1.0f-loop/2.0f)/4.0f, fragColor, fragCoord);\n    }\n    for (int i = 0; i < 320; ++i) {\n        \n\t    drawGrass(vec2(15.0f*float(i)-(15.0f*loop/2.0f)*float(i), 210.0f+30.0f*loop/2.0f),\n                  (1.0f-loop/2.0f)/8.0f, fragColor, fragCoord);\n    }\n}    \n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}