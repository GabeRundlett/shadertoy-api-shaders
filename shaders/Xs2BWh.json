{
    "Shader": {
        "info": {
            "date": "1500284113",
            "description": "Checkerboard travelling with \"analytical\" filtering.",
            "flags": 0,
            "hasliked": 0,
            "id": "Xs2BWh",
            "likes": 11,
            "name": "[SH17A] Filtered Checkerboard",
            "published": 3,
            "tags": [
                "filtering",
                "sh17a"
            ],
            "usePreview": 0,
            "username": "Klems",
            "viewed": 698
        },
        "renderpass": [
            {
                "code": "\n// fab's version, modified to improve the filtering\nvoid mainImage( out vec4 c, vec2 u ) {\n    u += u - (c.xy = iResolution.xy);\n    \n    // trace\n    vec2 p = 2.* vec2( u.x, iTime*3.*abs(u.y) + ( .6 + sin(iTime*.5)*.3 ) *c.x ) / u.y,\n         d = fwidth( p ),\n         f = ceil(p)-.5,\n         m = abs(p-f)-.5+d;\n    \n    c = vec4(mix(mod(f.x+f.y, 2.), // 2*2 pattern\n                 .5,\n                 mix(max(0., max(m/=d, m.y).x), // edge based filtering\n                     1.,\n                     min(1., length(d)*.5)) ) ) // distance based filtering\n        *abs(u.y/c.x/.4); // fog\n}\n\n/* // original, 268 chars\nvoid mainImage( out vec4 c, vec2 p ) {\n    \n    c.xy = iResolution.xy;\n    vec3 n = vec3((p-c.xy*.5)/c.x, .5 + sin(iTime*.5)*.4);\n    \n    float e = 2./n.y;\n    n += n*e;\n\tp = n.xz;\n    p.y += iTime*3.;\n    \n    vec2 m, d = fwidth(p), f = floor(p)+.5;\n    m = (abs(p-f)-.5+d)/d;\n    \n    c = vec4(mix(mod(f.x+f.y, 2.), .5, clamp(max(m.x, m.y), 0., 1.))) / abs(e*.1);\n}*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}