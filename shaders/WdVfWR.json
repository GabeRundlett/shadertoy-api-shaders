{
    "Shader": {
        "info": {
            "date": "1606917691",
            "description": "basic 2d city",
            "flags": 0,
            "hasliked": 0,
            "id": "WdVfWR",
            "likes": 1,
            "name": "basic 2d city",
            "published": 3,
            "tags": [
                "basic2dcity"
            ],
            "usePreview": 0,
            "username": "jorge2017a1",
            "viewed": 275
        },
        "renderpass": [
            {
                "code": "//por jorge2017a1  Basic 2d-v3\n\n#define saturate(x) clamp(x, 0.0, 1.0)\nconst float LineWidth=0.01;\n\nfloat oU( float d1, float d2 ) { return  min(d1,d2); }\nfloat oS( float d1, float d2 ) { return max(-d1,d2); }\nfloat oI( float d1, float d2 ) { return max(d1,d2); }\n\n\nvec2 opRepvec2( in vec2 p, in vec2 c )\n{\n    vec2 q = mod(p+0.5*c,c)-0.5*c;\n    return  q ;\n}\n\nfloat rand(float x)\n{\n\treturn fract(sin(x)*1276818.27865);\n}\n\nfloat rand2(vec2 x)\n{\n\treturn fract(sin(dot(x ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n\nfloat nubes(vec2 p)\n{    \n    vec2 centro=vec2(0.0,0.0);\n    float c1= circ(p-vec2(0.0,0.05), 0.105);\n    float c2= circ(p-vec2(0.15,0.02), 0.065);\n    float c3= circ(p-vec2(-0.15,0.02), 0.065);\n    float b1=sdBox(p-vec2(0.0,-0.05), vec2(0.22,0.045 ) );\n    \n    float res=oU(c1, c2);\n    res=oU(res, c3);\n    res=oS(  b1,res );\n    \n\treturn res;\n    \n}\n\nfloat Ciudad(vec2 p)\n{\n    \n    float b1= sdBox( p-vec2(0.0),vec2(0.08,0.2) );\n    float b2= sdBox( p-vec2(0.2,0.1),vec2(0.08,0.32) );\n    float b3= sdBox( p-vec2(0.5,0.2),vec2(0.18,0.4) );\n    \n    float res=9999.0;\n    res=oU(res, b1);\n    res=oU(res, b2);\n    res=oU(res, b3);\n   \n    return res;\n}    \n    \n\nfloat vehiculo(vec2 p)\n{    \n    float b1= sdBox(p-vec2(0.0,0.0), vec2(0.22,0.08) );\n    float c1= circ(p-vec2(-0.1,-0.1), 0.05);\n    float c2= circ(p-vec2(0.1,-0.1), 0.05);\n    \n    float res=9999.0;\n    res=oU(res, b1);\n    res=oU(res, c1);\n    res=oU(res, c2);\n    \n    \n   \n    return res;\n}    \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col=vec3(0.2,0.478,.13);\n    // Time varying pixel color\n\n    vec2 p = (2.*fragCoord-R)/R.y;\n    \n    vec2 ap= abs(p);\n    p.y-=.25;\n    \n    float px=-2.0+mod(iTime*0.5, 12.0 );\n    vec2 mover=vec2(px,0.0);\n    \n    float cielo=box( p-vec2( 0.0,0.15), vec2(4.0,0.6));\n    \n  \tfloat sdb6=box( p-vec2( 0.0,-0.45), vec2(2.9,0.016));\n    float n1= nubes(p-mover);\n    float n2= nubes(p-mover+vec2(0.30,0.125));\n    float n3= nubes(p-mover+vec2(1.20,-0.5));\n    float n4= nubes(p-mover+vec2(2.20,-0.15));\n    float n5= nubes(p-mover+vec2(3.80,-0.25));\n    float n6= nubes(p-mover+vec2(4.80,-0.05));\n    float n7= nubes(p-mover+vec2(6.80,0.05));\n    \n    \n    float c1= Ciudad(p-vec2(0.0,-0.22));\n    \n    px=-1.0+mod(iTime, 4.0 );\n    vec2 mover2=vec2(px,0.0);\n    float auto1= vehiculo(p-vec2(-0.5,-0.8)+mover2);\n    float auto2= vehiculo(p-vec2(-1.6,-0.45+0.2*sin(iTime*0.2) )+mover2);\n    \n    \n    float sstar1= sdStar5( p-vec2(-0.5,0.4),0.25+0.20*sin(iTime), 0.43);\n    \n    cielo = SS(cielo);\n    sdb6 = SS(sdb6);\n    n1 = SS(n1);\n    n2 = SS(n2);\n    n3 = SS(n3);\n    n4 = SS(n4);\n    n5 = SS(n5);\n    n6 = SS(n6);\n    n7 = SS(n7);\n    \n    c1 = SS(c1);\n    sstar1 = SS(sstar1);\n    \n    \n    auto1= SS(auto1);\n    auto2= SS(auto2);\n    \n   \n       \n    col = mix(col, vec3(0.0,0.0,1.0), cielo);\n    col = mix(col, vec3(1.0,0.20,0.12), c1);\n    col = mix(col, vec3(0.8,0.50,0.42), sstar1);\n    \n    col = mix(col, vec3(0.0), sdb6);\n    col = mix(col, vec3(1.0), n1);\n    col = mix(col, vec3(1.0), n2);\n    col = mix(col, vec3(1.0), n3);\n    col = mix(col, vec3(1.0), n4);\n    col = mix(col, vec3(1.0), n5);\n    col = mix(col, vec3(1.0), n6);\n    col = mix(col, vec3(1.0), n7);\n    col = mix(col, vec3(0.6,0.53,1.0), auto1);\n    col = mix(col, vec3(0.9,0.3,0.6), auto2);\n    \n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//Referencia  BC: Straw Hat Pirates\n\n#define R iResolution.xy\n#define ss(a, b, t) smoothstep(a, b, t)\n#define SS(U) smoothstep(3./R.y,0.,U)\n\nfloat box(vec2 p, vec2 b)\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n\nfloat circ(vec2 p, float r)\n{\n    return length(p)-r;\n}\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdTriangleIsosceles( in vec2 p, in vec2 q )\n{\n    p.x = abs(p.x);\n    vec2 a = p - q*clamp( dot(p,q)/dot(q,q), 0.0, 1.0 );\n    vec2 b = p - q*vec2( clamp( p.x/q.x, 0.0, 1.0 ), 1.0 );\n    float s = -sign( q.y );\n    vec2 d = min( vec2( dot(a,a), s*(p.x*q.y-p.y*q.x) ),\n                  vec2( dot(b,b), s*(p.y-q.y)  ));\n    return -sqrt(d.x)*sign(d.y);\n}\n\n\nfloat sdStar5(in vec2 p, in float r, in float rf)\n{\n    const vec2 k1 = vec2(0.809016994375, -0.587785252292);\n    const vec2 k2 = vec2(-k1.x,k1.y);\n    p.x = abs(p.x);\n    p -= 2.0*max(dot(k1,p),0.0)*k1;\n    p -= 2.0*max(dot(k2,p),0.0)*k2;\n    p.x = abs(p.x);\n    p.y -= r;\n    vec2 ba = rf*vec2(-k1.y,k1.x) - vec2(0,1);\n    float h = clamp( dot(p,ba)/dot(ba,ba), 0.0, r );\n    return length(p-ba*h) * sign(p.y*ba.x-p.x*ba.y);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}