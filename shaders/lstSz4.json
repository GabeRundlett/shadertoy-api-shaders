{
    "Shader": {
        "info": {
            "date": "1458681914",
            "description": "black sun productions present...",
            "flags": 0,
            "hasliked": 0,
            "id": "lstSz4",
            "likes": 8,
            "name": "Z-Ball",
            "published": 3,
            "tags": [
                "2d",
                "noise",
                "transform"
            ],
            "usePreview": 0,
            "username": "seb0fh",
            "viewed": 685
        },
        "renderpass": [
            {
                "code": "vec3 textDots(vec2 p,float size,float size2,vec3 col1,vec3 col2) { return ( length(mod(p,size)-size/2.0)*size2/size >0.5) ? col1 : col2; }    \nvec3 textCheckboard(vec2 p,float size,vec3 col1,vec3 col2) { float hSize=size/2.0; return (mod(p.x,size)>hSize ^^ mod(p.y,size)>hSize) ? col1 : col2; }\n\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187,0.366025403784439,-0.577350269189626,0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod289(i); \n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n#define F(x) (1.0/x)\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xx - vec2(0.5,0.5*iResolution.y/iResolution.x);\n\t\n    // transforms\n    float angle=atan(uv.y,uv.x);\n    float dist=length(uv);\n    float t=iTime;\n    vec2 uv2 = vec2(iTime*2.0+cos(angle)*F(dist),iTime*1.0+sin(angle)*F(dist));\n    vec2 uv3 = vec2(iTime+cos(angle+iTime*0.1)/dist,sin(angle+iTime*0.1)/dist);\n    //vec2 uv4=vec2(pow(uv.x,t),pow(uv.y,t));\n    \n    // layers\n    vec3 color=\n        snoise(uv2*0.2)*vec3(0.4) // noise\n        + textDots(uv3,0.07,1.7,vec3(0,0,0),vec3(0.3,0.3,0.3)) // dots\n\t\t+ clamp(sin(iTime*2.+angle*16.0),0.0,1.0)*vec3(0.3,0.3,0.3) // rays\n        + clamp(sin(iTime*1.1+angle*36.0),0.0,1.0)*vec3(0.2,0.2,0.2) // rays\n    \t+ clamp(1.0-dist*4.0,0.0,1.0)*vec3(0.5,0.5,0.5) // glow\n    \t- (1.0-smoothstep(0.08,0.081,dist))*vec3(4,4,4) // dark circle\n        ;\n    \n    // output\n\tfragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}