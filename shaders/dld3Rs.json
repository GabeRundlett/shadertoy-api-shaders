{
    "Shader": {
        "info": {
            "date": "1682964206",
            "description": "CC0: Quick monday hack\nSaw this tweet: https://twitter.com/junkiyoshi/status/1652996530146787329?s=20\nThought I could do something like.\nt's not quite good enough but good enough to share\n",
            "flags": 0,
            "hasliked": 0,
            "id": "dld3Rs",
            "likes": 11,
            "name": "Quick monday hack",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "mrange",
            "viewed": 215
        },
        "renderpass": [
            {
                "code": "// CC0: Quick monday hack\n//  Saw this tweet: https://twitter.com/junkiyoshi/status/1652996530146787329?s=20\n//  Thought I could do something like.\n//  It's not quite good enough but good enough to share\n#define TIME        iTime\n#define RESOLUTION  iResolution\n#define PI          3.141592654\n#define TAU         (2.0*PI)\n#define ROT(a)      mat2(cos(a), sin(a), -sin(a), cos(a))\n\n// License: Unknown, author: Unknown, found: don't remember\nfloat hash(vec2 co) {\n  return fract(sin(dot(co.xy ,vec2(12.9898,58.233))) * 13758.5453);\n}\n\nfloat df(vec2 p, float tm) {\n  p *= ROT(-tm*0.5);\n  float d = -p.y;\n  return abs(d)-0.003;\n}\n\nvec3 bubbles(vec3 col, vec2 p) {\n  float aa = 4.0/RESOLUTION.y;\n  for (float i = 1.0; i < 6.0; ++i) {\n    float sz = 0.3/(1.0+i);\n    vec2 pp = p;\n    pp /= sz;\n    vec2 rp = round(pp);\n    vec2 cp = pp;\n    cp -= rp;\n    float dt = 0.001;\n    float dp = df(rp*sz, TIME-dt);\n    float dn = df(rp*sz, TIME);\n    float dd = (dn-dp)/dt;\n    float h0 = hash(rp);\n    float h1 = fract(3667.0*h0);\n    float h2 = fract(8667.0*h0);\n    float r  = 0.33*sqrt(h0);\n    r *= smoothstep(0.1, 0.9, length(p));\n//    r *= tanh(1.0*dd);\n    cp -= (0.5-r)*vec2(h1, h2);\n    float fo = smoothstep(12.0*sz*r, -0.1, dn);\n    float d = (length(cp)-mix(r, 0., fo*fo*fo));\n    d = abs(d);\n    d *= sz;\n    d -= 0.003;\n    vec3 bcol = vec3(sqrt(fo))*smoothstep(0.0, -aa, d)*step(0.0, dd)*smoothstep(-0.05, 0.1, dn);\n    col += bcol;\n  }\n  return col;\n}\n\nvec3 effect(vec2 p, vec2 pp) {\n  float ds = df(p, TIME);\n  vec3 col = vec3(0.0);\n  col = bubbles(col, p);\n  float aa = 4.0/RESOLUTION.y;\n  col = mix(col, vec3(1.0, 0.0, 0.25), smoothstep(0.0, -aa, ds));\n  col = sqrt(col);\n  return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 q = fragCoord/RESOLUTION.xy;\n  vec2 p = -1. + 2. * q;\n  vec2 pp = p;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n  vec3 col = effect(p, pp);\n  fragColor = vec4(col, 1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}