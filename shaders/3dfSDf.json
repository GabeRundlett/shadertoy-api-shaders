{
    "Shader": {
        "info": {
            "date": "1552315666",
            "description": "Sinewave\nBasic tutorial 11\nby Arthur Stammet, 03.2019\ninspired by The Art of Code : https://www.youtube.com/watch?v=jKuXA0trQPE\n",
            "flags": 0,
            "hasliked": 0,
            "id": "3dfSDf",
            "likes": 0,
            "name": "Tuto011 Sinewave",
            "published": 3,
            "tags": [
                "wave",
                "tutorial",
                "animation",
                "sine"
            ],
            "usePreview": 0,
            "username": "arthurstammet",
            "viewed": 415
        },
        "renderpass": [
            {
                "code": "/* ************************************************************************************* \n\nSinewave\n\nBasic tutorial 11\nby Arthur Stammet, 03.2019\n\ninspired by The Art of Code : https://www.youtube.com/watch?v=jKuXA0trQPE\n\n************************************************************************************* */\n\nfloat Bar (float t, float b1, float b2, float blur) {\n    float s1 = smoothstep(b1 - (blur/2.), b1 + (blur/2.), t); \t// first ramp\n    float s2 = smoothstep(b2 + (blur/2.), b2 - (blur/2.), t); \t// second ramp\n    return s1 * s2; \t\t\t\t\t\t\t\t\t\t\t// build ramp\n}\n\nfloat Rectangle (vec2 uv, float L, float R, float B, float T, float blur ) {\n    float b1 = Bar(uv.x, L, R, blur); \t// build Left-Right Limits\n    float b2 = Bar(uv.y, B, T, blur); \t// build Bottom-Top Limits\n    return b1 * b2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // set the center to the middle of the screen and make the pixels quadratic\n    vec2 p = (fragCoord-.5*iResolution.xy)/iResolution.y; \n\n    // change values here --------------------------------------------------------------\n\n\tfloat freq = 10.;\n    float amp = 0.4;    \n    float phase = 20.;    \n    float blur = 0.03;\n    \n    // dimensions of the base rectangle (before y-distortion)\n    float width = 1.5;\n    float height = 0.04;\n    \n    // ---------------------------------------------------------------------------------\n\n\tfloat x = p.x;\n    float distortion = sin( phase + x * freq ) * amp;\n\tfloat y = p.y - distortion;\n    \n    vec3 back = vec3 ( 0., 0., 0. ); // black screen\n    vec3 SWave = vec3 ( 0., 1., 0. ); // green sinewave\n\n    SWave *= Rectangle( vec2(x,y), -width/2., width/2., -height/2., height/2., blur);\n    \n    fragColor = vec4(back + SWave, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}