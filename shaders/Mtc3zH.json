{
    "Shader": {
        "info": {
            "date": "1467983547",
            "description": "The logo of a local event planner caught my eye, so I made an animated version.",
            "flags": 0,
            "hasliked": 0,
            "id": "Mtc3zH",
            "likes": 28,
            "name": "Waves With No Ends",
            "published": 3,
            "tags": [
                "2d",
                "distancefield",
                "waves"
            ],
            "usePreview": 0,
            "username": "s23b",
            "viewed": 907
        },
        "renderpass": [
            {
                "code": "#define saturate(x) clamp(x, 0., 1.)\n#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n\n// circle distance field\nfloat circle(vec2 p, float r) {\n    return length(p) - r;\n}\n\n// substraction\nfloat opS(float a, float b) {\n    return max(a, -b);\n}\n\n// smooth minimum from iq\nfloat opSU(float a, float b, float k) {\n    float h = saturate(.5 + .5 * (b - a) / k);\n    return mix(b, a, h) - k * h * (1. - h);\n}\n\nvec4 blend(vec4 c1, vec4 c2) {\n    return vec4(mix(c1.rgb, c2.rgb, c2.a), max(c1.a, c2.a)); \n}\n\nvec4 wave(vec2 uv, float p, bool addwave) {\n    float d;\n    float rand = smoothstep(0., 1., texture(iChannel0, vec2(p + iTime * .01)).r) * .2;\n    \n    float a = -iTime / 5. + p;\n    uv *= 1. + texture(iChannel0, uv * rot(a) / 4.).r * .02 / length(uv);\n    uv *= 1. + texture(iChannel0, uv * rot(a * 2.) / 2.).r * .01 / length(uv);\n    uv *= rot(p);\n    \n    if (addwave) {\n    \td = circle(uv - vec2(rand * .4 + p * .1, p - .1), p * .5);\n        d = opS(d, circle(uv - vec2( + rand + p * .7 - .1, p * .9 - .2), p * .7));\n    \td = opSU(d, circle(uv, p), .2);\n    } else {\n        d = circle(uv, p);\n    }\n    \n    float aa = fwidth(d);\n    float lw = aa * iResolution.y / 2000.;\n    return vec4(vec3(smoothstep(-aa - lw, -lw, d)), 1. - smoothstep(lw, lw + aa, d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * 2. - 1.;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float texture = saturate(dot(texture(iChannel1, uv * .5).rgb + texture(iChannel2, uv * .2).rgb, vec3(.21, .72, .07)) - .2)\n        * .3 * saturate(length(uv));\n    fragColor = vec4(.7);\n    \n    uv *= rot(-.5);\n    \n    bool w = false;\n    \n    for (float p = .74; p > .33; p -= .035) {\n\t\tfragColor = blend(fragColor, wave(uv, p, w));\n        w = true;\n    }\n    \n    fragColor.rgb -= texture;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 9,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}