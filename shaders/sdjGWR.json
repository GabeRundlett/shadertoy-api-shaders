{
    "Shader": {
        "info": {
            "date": "1617255191",
            "description": "A simple fractal formula.\nFull-screen mode recommended.",
            "flags": 0,
            "hasliked": 0,
            "id": "sdjGWR",
            "likes": 2,
            "name": "Flowers and foliage 4",
            "published": 3,
            "tags": [
                "fractal",
                "feather",
                "coral"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 232
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col;\n    float t = iTime;\n    vec2 uv = (fragCoord*10.0-iResolution.xy)/iResolution.y/10.0;\n    uv += vec2(t/2.0,t/3.0)/4.0;\n    for(int c=0;c<3;c++){\n        float scale = 5.6;\n        float scale1 = 1.5;\n        float s1 = scale1*scale;\n        for(int i=0;i<6;i++)\n        {\n            uv = fract(uv/s1)*s1;\n            uv=-fract(uv/(2.0-abs((uv.x-uv.y)/(16.0)))-(uv/(2.5+(fract(uv.x+uv.y))))/scale)*scale/scale1+s1;\n            uv /= scale1+col.yx;\n        \tuv=uv.yx+col.xy;\n            uv.x /= -1.1;\n            col[c] = fract((.25*col[c]+col.x+(uv.y)-(uv.x))/2.0);\n        }\n     \n\t}\n    \n    fragColor = vec4(vec3(col),1.0);\n    \n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}