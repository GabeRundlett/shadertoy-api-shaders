{
    "Shader": {
        "info": {
            "date": "1586951813",
            "description": "2 variables are need to create a circle\n1D space filled with varibles\npair neighbor variables to create circles\neach frame rotate circles a little bit\nnow create pairs with neighbors of neigbor\nrotate those circles a little bit too\nthis happens",
            "flags": 32,
            "hasliked": 0,
            "id": "wdSyRV",
            "likes": 0,
            "name": "waves different speed no collisi",
            "published": 3,
            "tags": [
                "fdtd"
            ],
            "usePreview": 0,
            "username": "lomateron",
            "viewed": 330
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 u = fragCoord/iResolution.xy;\n         u.x*= 256./iResolution.x;\n    \n    vec4 C = texture(iChannel0, u);\n    \n    vec4 b = u.y*vec4(8.)-vec4(1.,3.,5.,7.);\n    \n    float c = +float(b.x<C.x && b.x>0.)\n              +float(b.x>C.x && b.x<0.)\n              +float(b.y<C.y && b.y>0.)\n              +float(b.y>C.y && b.y<0.)\n              +float(b.z<C.z && b.z>0.)\n              +float(b.z>C.z && b.z<0.)\n              +float(b.w<C.w && b.w>0.)\n              +float(b.w>C.w && b.w<0.);\n\n    fragColor = vec4(c);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec2 m = vec2(256.,iResolution.y);\n    vec4 C = texture(iChannel0, mod(u+vec2(0,0),m)/iResolution.xy);\n    vec4 R = texture(iChannel0, mod(u+vec2(1,0),m)/iResolution.xy);\n    vec4 L = texture(iChannel0, mod(u-vec2(1,0),m)/iResolution.xy);\n    \n    float pi = 3.14159265359;\n    float s = .2;\n    int i = iFrame&1;\n    if(i==0)\n    {\n        C.x  = cos(atan(C.x,L.w)+s-vec2(0.,pi*.5)).y*length(vec2(L.w,C.x));\n        C.w  = cos(atan(R.x,C.w)+s-vec2(0.,pi*.5)).x*length(vec2(C.w,R.x));\n        C.yz = cos(atan(C.z,C.y)+s-vec2(0.,pi*.5))  *length(C.yz);\n        C.xy = cos(atan(C.y,C.x)+s-vec2(0.,pi*.5))  *length(C.xy);\n        C.zw = cos(atan(C.w,C.z)+s-vec2(0.,pi*.5))  *length(C.zw);\n    }\n    if(i==1)\n    {\n        C.x  = cos(atan(C.x,L.z)+s-vec2(0.,pi*.5)).y*length(vec2(L.z,C.x));\n        C.y  = cos(atan(C.y,L.w)+s-vec2(0.,pi*.5)).y*length(vec2(L.w,C.y));\n        C.z  = cos(atan(R.x,C.z)+s-vec2(0.,pi*.5)).x*length(vec2(C.z,R.x));\n        C.w  = cos(atan(R.y,C.w)+s-vec2(0.,pi*.5)).x*length(vec2(C.w,R.y));\n        C.xz = cos(atan(C.z,C.x)+s-vec2(0.,pi*.5))  *length(C.xz);\n        C.yw = cos(atan(C.w,C.y)+s-vec2(0.,pi*.5))  *length(C.yw);\n    }\n    \n    float uf = u.x-128.;\n    float ud = u.x- 64.;\n    float fr = float(iFrame)- 300.;\n    if(iFrame == 0) C = +exp(-uf*uf /32.)*vec4(1,-1,1,-1)\n                        +exp(-ud*ud /32.)*vec4(.5)\n                        +.0;\n    fragColor = C;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}