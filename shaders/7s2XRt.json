{
    "Shader": {
        "info": {
            "date": "1649106411",
            "description": "[url=https://en.wikipedia.org/wiki/Hofstadter%27s_butterfly]Hofstadter's butterfly[/url] fractal known from the quantum Hall effect. The x-axis is energy, and y is magnetic flux",
            "flags": 0,
            "hasliked": 0,
            "id": "7s2XRt",
            "likes": 5,
            "name": "Hofstadter's butterfly",
            "published": 3,
            "tags": [
                "fractal",
                "quantum",
                "butterfly",
                "hofstadter"
            ],
            "usePreview": 0,
            "username": "Roninkoi",
            "viewed": 357
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265\n\n#define V(y, k) (2. * cos(2. * PI * float(k) * (y)))\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv -= 0.5;\n    \n    float x = uv.x * 6.;\n    float y = (uv.y*1.5+1.)/ 2.;\n    \n    int q = 100 + int(sin(iTime)*100.); // number of iterations\n    \n    float det = 0.;\n    float det2 = 0.;\n    float det1 = 1.;\n    for (int j = 0; j < q; ++j) { // calculate determinant of tridiagonal matrix\n        det = (V(y, j+1) - x) * det1 - det2;\n        det2 = det1;\n        det1 = det;\n    }\n    \n    // Lyapunov exponent\n    float f = log(abs(det)) / float(q);\n    float c = clamp(f, 0., 0.3) * 9.5 - 1.5;\n    \n    vec3 col = vec3(\n        sin(c), sin(c + PI / 3.), sin(c + 2. * (PI / 3.))\n    );\n    \n    fragColor = vec4(col, 1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}