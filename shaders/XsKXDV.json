{
    "Shader": {
        "info": {
            "date": "1466720342",
            "description": "Blurred vignette",
            "flags": 0,
            "hasliked": 0,
            "id": "XsKXDV",
            "likes": 0,
            "name": "Chromatic Blurred Vignette",
            "published": 3,
            "tags": [
                "vignette"
            ],
            "usePreview": 1,
            "username": "tomorrowevening",
            "viewed": 358
        },
        "renderpass": [
            {
                "code": "const vec2 center = vec2( 0.5, 0.5 );\nconst float outterRadius  = 00.75;\nconst float innerRadius   = 00.25;\n\nconst float darkness = 0.85;\n\nconst float redAberration   =  10.0;\nconst float greenAberration =   0.0;\nconst float blueAberration  = -10.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 res = iResolution.xy;\n    vec2 uv  = fragCoord.xy / iResolution.xy;\n    vec4 col = texture(iChannel0, uv);\n\tfloat d  = distance( uv, center );\n    float b  = 1.0 - darkness;\n    \n    if(d < innerRadius) b = 1.0;\n    else if(d < outterRadius) {\n        float r = outterRadius - innerRadius;\n        float a = d - innerRadius;\n        b = 1.0 - (a / r) * darkness;\n    }\n    \n    \n    //\n    float pctEffect = (uv.x - 0.5) * 2.0;\n    vec3 aberration = vec3(\n        redAberration   / iResolution.x,\n        greenAberration / iResolution.x,\n        blueAberration  / iResolution.x\n    ) * pctEffect * b;\n    \n    col.r = texture(iChannel0,vec2(uv.x+aberration.x, uv.y)).x;\n    col.g = texture(iChannel0,vec2(uv.x+aberration.y, uv.y)).y;\n    col.b = texture(iChannel0,vec2(uv.x+aberration.z, uv.y)).z;\n    \n    float blur = 10.0;\n    float effect = 1.0 - b;\n    vec2 off1 = vec2( blur * effect );\n    \n    col += texture(iChannel0, uv) * 0.29411764705882354;\n    col += texture(iChannel0, uv + (off1 / res)) * 0.35294117647058826;\n    col += texture(iChannel0, uv - (off1 / res)) * 0.35294117647058826;\n    \n    \n\tfragColor = col * vec4(b);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}