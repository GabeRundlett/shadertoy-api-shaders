{
    "Shader": {
        "info": {
            "date": "1630073820",
            "description": "It's israel's flag drawn in a shader.",
            "flags": 0,
            "hasliked": 0,
            "id": "NlXSDr",
            "likes": 10,
            "name": "Israel's Flag",
            "published": 3,
            "tags": [
                "flag",
                "israel"
            ],
            "usePreview": 0,
            "username": "Pelegefen",
            "viewed": 399
        },
        "renderpass": [
            {
                "code": "//music link -  https://soundcloud.com/sajankamusic/sajanka-sun-is-coming\n\n//#define DANCING; //uncomment to make the flag dance to the music( By Sajanka, an isreali artist, hence the flag)\n\n\n\n#define WHITE vec3(255,255,255)/255.\n#define BLUE vec3(0,56,184)/255.\n#define PI 3.14159265359\n#define S smoothstep \n\n\n\nfloat StarOfDavid(vec2 uv, float size){\n\n    uv *= size;\n    uv.x = abs(uv.x);\n    uv.y *= 1.4;\n    float a = 1.08;\n    float a2 = 4.286389;\n    float a3 = 2.03;\n    \n    float offs = .1;\n    float d1 = S(-.501,-.50,dot(uv , vec2(0.,1.05 - offs)));\n    float d2 = S(.541,.54,dot(uv , vec2(sin(a),cos(a))));\n    \n    float d11 = S(-.001-offs,-.00-offs,dot(uv , vec2(0.,0.4 - offs)));\n    float d12 = S(.501-offs,.50-offs,dot(uv, vec2(sin(a),cos(a))));\n    \n    float d3 = S(.501,.50,dot(uv, vec2(sin(a3),cos(a3))));\n    float d4 = S(.501,.50,dot(uv , vec2(0.,.8)));\n    \n     float d21 = S(.001+offs,.00+offs,dot(uv , vec2(0.,0.33 - offs)));\n     float d22 =  S(.251+offs,.250+offs,dot(uv, vec2(sin(a3),cos(a3))));\n     \n    float m1 = min(d1,d2);\n    \n    float m11 = min(d11,d12);\n    m1 -= m11;\n    \n    \n    float m2 = min(d4,d3);\n    \n    float m21 = min(d21,d22);\n    m2 -= m21;\n    \n    //if(uv.x>=0. && uv.x <= .01)col = vec3(1.,0.,0.);\n     //if(uv.y>=0. && uv.y <= .01)col = vec3(1.,0.,0.);\n     float s = max(m1, m2);\n     \n  return s; \n   }\n   \n   \n   vec3 Flag(vec2 uv){\n    //blue stripes\n    uv *= 1.5;\n    vec2 st = uv;\n    uv.x *= 1.2;\n    st.y = abs(st.y);\n    \n    \n    float s = S(0.41,.4,abs(st.y));\n    s  -= S(0.26,.25,abs(st.y));\n    vec3 nCol = mix(WHITE,BLUE,s);\n    vec3 col = vec3(nCol);\n\n    \n    float star = StarOfDavid(uv,4.);\n    vec3 cstar =  mix(col, BLUE,star);\n    \n    \n    cstar *= S(0.01,0.,abs(uv.y)-.5+0.012);\n     //cstar *= S(0.01,0.,abs(uv.y)-.5+0.01);\n    return cstar;\n    \n    }\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // unNormalized pixel coordinates (from -.5 to .5)\n     vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;    \n    \n   # ifdef DANCING\n   float freq = texture( iChannel0, vec2( 0.01, 0.01 ) ).x; \n   float freq1 = texture( iChannel0, vec2( 0.15, 0.15 ) ).x; \n   #else\n   float freq = .5; \n   float freq1 = .5; \n   #endif\n   \n   \n    float t = sin(iTime + sin(iTime + (uv.x  - uv.y))*5.5+5.5)*(.03 );\n    \n    uv.y -= clamp(t / max(freq ,.1),-.5,.5) ;\n    uv.x -= clamp(t / max(freq1,.1),-.5,.5) ;\n    \n    \n    float sd = cos(iTime + sin(iTime + (uv.x - uv.y ))*5.5+5.5)*(.3 );\n    vec3 col = vec3(Flag(uv)) -clamp( sd,0.,1. );\n   \n    \n    \n    \n    \n    // Output to screen\n    fragColor = vec4(col,(col.r + col.g + col.b)/3.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 19,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}