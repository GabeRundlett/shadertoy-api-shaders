{
    "Shader": {
        "info": {
            "date": "1646959395",
            "description": "simple shader - doesnt work zoomed out ( because using exp(-cos(d)) )",
            "flags": 0,
            "hasliked": 0,
            "id": "7dSBDy",
            "likes": 12,
            "name": "Nice little light",
            "published": 3,
            "tags": [
                "e"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 332
        },
        "renderpass": [
            {
                "code": "#define thc(a,b) tanh(a*cos(b))/tanh(a)\n\nfloat cc(float a, float b) {\n    float f = thc(a, b);\n    return sign(f) * pow(abs(f), 0.25);\n}\n\nvec3 pal(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d) {\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    uv *= 1.2;\n    \n    // uv *= 2.5 + 1.5 * cc(1., 1. * length(uv) - iTime);\n    // uv *= 8.;\n    \n    vec2 v = vec2(0, 0.4 * thc(2., 1.5 * uv.x + iTime));\n    \n    // replace me with other distance functions\n    float d = abs(uv.y) * length(uv - v) - 1.5765;// + 0.0015 * h21(uv);\n    //d = length(uv) - 1.62;\n    float s = exp(-2.65 * cc(1., d));\n    \n    vec3 e = vec3(1);\n    vec3 col = s * pal(-0.38 * uv.y, e, e, e, 0.38 * vec3(0,1,2)/3.);\n    \n    // col = clamp(col, 0., 1.);\n    // col = sqrt(col) + 0.05;\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}