{
    "Shader": {
        "info": {
            "date": "1425169461",
            "description": "Raymarching experiment #1",
            "flags": 0,
            "hasliked": 0,
            "id": "llXGD2",
            "likes": 8,
            "name": "Some sort of grid",
            "published": 3,
            "tags": [
                "raymarching"
            ],
            "usePreview": 0,
            "username": "germangb",
            "viewed": 1460
        },
        "renderpass": [
            {
                "code": "#define MAX_STEPS 150\n\nfloat smin( float a, float b, float k ) {\n    float res = exp( -k*a ) + exp( -k*b );\n    return -log( res )/k;\n}\n\nfloat scene (vec3 pos) {\n    vec3 old = pos;\n    pos.y += sin(1.0*pos.x/6.0 * 6.283 + iTime) * 0.125;\n    pos.y += sin(1.0*pos.z/6.0 * 6.283 + iTime) * 0.25;\n    pos.x += sin(2.0*pos.y/6.0 * 6.283 + iTime) * 0.125;\n    pos = mod(pos, vec3(6.0));\n    float thick = 0.5;\n    vec3 d =  abs(pos - vec3(3.0, 3.0, 3.0)) - vec3(thick, 3.2, thick);\n    vec3 de = abs(pos - vec3(3.0, 3.0, 3.0)) - vec3(3.2, thick, thick);\n    vec3 dee = abs(pos - vec3(3.0, 3.0, 3.0)) - vec3(thick, thick, 3.2);\n    \n    float a = min(max(d.x,max(d.y,d.z)),0.0) +\n         \tlength(max(d,0.0));\n    \n    float b = min(max(de.x,max(de.y,de.z)),0.0) +\n         \tlength(max(de,0.0));\n    \n    float c = min(max(dee.x,max(dee.y,dee.z)),0.0) +\n         \tlength(max(dee,0.0));\n    \n   \n    return smin(smin(a, smin(abs(old.x - 9.0), abs(old.x + 15.0), 2.75), 2.75), smin(b, c, 1.75), 1.75);\n}\n\nvec3 normal (vec3 pos) {\n    vec2 r = vec2(0.001, 0.0);\n    return normalize(vec3(\n    \tscene(pos-r.xyy) - scene(pos+r.xyy),\n        scene(pos-r.yxy) - scene(pos+r.yxy),\n        scene(pos-r.yyx) - scene(pos+r.yyx)\n    ));\n}\n\nvec2 castRay (vec3 ro, vec3 rd) {\n    float inte = 0.0;\n    for (int i = 0; i < MAX_STEPS; ++i) {\n        vec3 pos = ro + rd*inte;\n        float t = scene(pos);\n        if (t < 0.0)\n            return vec2(t, inte);\n        inte += max(0.01, t);\n    }\n    return vec2(1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    //uv.xy = floor(uv.xy*32.0)/32.0;\n    \n    vec4 music = texture(iChannel0, vec2(0.0, 0.0)) * 0.75 +\n        \t\t texture(iChannel0, vec2(1.0/256.0, 0.0)) * 0.25;\n   \n    vec3 fog = vec3(1.0, 0.4, 0.8);\n    vec3 color = vec3(fog);\n\n    vec3 ro = vec3(uv, iTime*2.0);\n    vec3 rd = normalize(vec3(uv, 1.0)+vec3(sin(iTime*0.5)*0.5, cos(iTime*0.5)*0.25, 0.0));\n    vec2 ca = castRay(ro, rd);\n    \n    if (ca.x < 0.0) {\n        \tvec3 pos = ro+ca.y*rd;\n    \t    vec3 n = normal(pos);\n        \tvec3 cm = texture(iChannel1, n).rgb;\n            float direct = mix(0.25, 1.0, max(0.0, dot(n, normalize(vec3(0.0, -2.0, 1.0)) )));\n            float direct2 = mix(0.25, 1.0, max(0.0, dot(n, normalize(vec3(0.0, -2.0, 1.0)) )));\n            float direct3 = mix(0.25, 1.0, max(0.0, dot(n, vec3(0.0, -1.0, 0.0) )));\n            color = vec3(1.0) * direct + vec3(0.75, 0.75, 1.0) * direct2 * 0.5 + vec3(1.0, 0.0, 1.0)*direct3*0.25;\n            float spec = clamp(dot(n, normalize(vec3(pos-ro))), 0.0, 1.0);\n            spec = pow(spec, 16.0);\n            color += vec3(1.0, 0.0, 1.0) * spec;\n            spec = pow(spec, 1.0);\n            color += vec3(1.0) * spec * exp(-length(pos) * 0.01);\n        color += cm*0.25;\n            color = mix(fog, color, exp(-max(length(pos-ro) - 4.0, 0.0)*0.1));  \n    }\n    \n    vec2 uv2 = fragCoord.xy / iResolution.xy;\n    uv2 = uv2 * 2.0 - 1.0;\n    color *= smoothstep(1.5, 1.5 - 0.75, length(uv2));\n    color = mix(vec3(dot(color, vec3(1.0/3.0))), color, music.r);\n\tfragColor = vec4(sqrt(color), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "cubemap",
                        "id": 26,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 35,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}