{
    "Shader": {
        "info": {
            "date": "1658551521",
            "description": "Exact fraunhoffer formula for thin film interference",
            "flags": 0,
            "hasliked": 0,
            "id": "NdGBRc",
            "likes": 7,
            "name": "Fraunhoffer interference",
            "published": 3,
            "tags": [
                "fraunhoffer"
            ],
            "usePreview": 0,
            "username": "Suslik",
            "viewed": 421
        },
        "renderpass": [
            {
                "code": "//reference image0: https://static.projects.iq.harvard.edu/files/styles/os_files_xlarge/public/science-demonstrations/files/thinfilminterference-freeze-wide-2-640x360.jpg\n//reference image1: https://static.projects.iq.harvard.edu/files/styles/os_files_xlarge/public/science-demonstrations/files/thinfilminterference-freeze-top-2-640x360.jpg\n\n//source article with reference images: https://sciencedemonstrations.fas.harvard.edu/presentations/thin-film-interference\n\n\nvec3 sinc(vec3 val)\n{\n  return sin(val) / val;\n}\n\n//reference: https://en.wikipedia.org/wiki/Double-slit_experiment#Classical_wave-optics_formulation\nvec3 Fraunhoffer(vec3 lambda, float theta, float d, float b)\n{\n  float pi = 3.141592f;\n  float s = sin(theta);\n  vec3 c = cos(pi * d * s / lambda);\n  vec3 sc = sinc(pi * b * s / lambda);\n  return c * c * sc * sc;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 lambda = vec3(612.0f, 535.0f, 465.0f); //primaries' wavelengths, these values are exact\n    float period = 0.1f; //i failed to get anything visually meaningful with large values of this constant. using sin(theta)~theta gives perfectly viable results.\n    vec3 col = Fraunhoffer(lambda, uv.x * period, 50.0f / period, 5000.0f / period) * 4.0f; //all constants here are arbitrary and depend on the interferometer geometry\n    //col.rgb = vec3(col.r);\n    col += vec3(0.1f); //\"specular\" to match source image better. technically not part of diffraction\n    fragColor = vec4(pow(col, vec3(1.0f / 2.2f)), 1.0f); //linear->srgb\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}