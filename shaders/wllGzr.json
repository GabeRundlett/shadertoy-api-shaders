{
    "Shader": {
        "info": {
            "date": "1555541583",
            "description": "trying something with simplex noise in a loop feeding itself data for more seemingly random, organic values.",
            "flags": 0,
            "hasliked": 0,
            "id": "wllGzr",
            "likes": 16,
            "name": "Recursive Noise Experiment",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "ompuco",
            "viewed": 1411
        },
        "renderpass": [
            {
                "code": "float hash( float n )\n\t\t\t{\n\t\t\t    return fract(sin(n)*43758.5453);\n\t\t\t}\n\n\t\t\tfloat noise( vec3 x )\n\t\t\t{\n\t\t\t    // The noise function returns a value in the range -1.0f -> 1.0f\n\n\t\t\t    vec3 p = floor(x);\n\t\t\t    vec3 f = fract(x);\n\n\t\t\t    f       = f*f*(3.0-2.0*f);\n\t\t\t    float n = p.x + p.y*57.0 + 113.0*p.z;\n\n\t\t\t    return mix(mix(mix( hash(n+0.0), hash(n+1.0),f.x),\n\t\t\t                   mix( hash(n+57.0), hash(n+58.0),f.x),f.y),\n\t\t\t               mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n\t\t\t                   mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z)-.5;\n\t\t\t}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    vec3 t = (float(iFrame)*vec3(1.0,2.0,3.0)/1.0)/1000.0;//+iMouse.xyz/1000.0;\n\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv=uv/4.0+.5;\n    uv-=iMouse.xy/iResolution.xy/4.0;\n\n    vec3 col = vec3(0.0);\n    \n    \n    \n    for(int i = 0; i < 16; i++){\n        float i2 = float(i)*1.0;\n\t\t\t\t\tcol.r+=noise(uv.xyy*(12.0+i2)+col.rgb+t*sign(sin(i2/3.0)));\n\t\t\t\t\tcol.g+=noise(uv.xyx*(12.0+i2)+col.rgb+t*sign(sin(i2/3.0)));\n\t\t\t\t\tcol.b+=noise(uv.yyx*(12.0+i2)+col.rgb+t*sign(sin(i2/3.0)));\n\t\t\t\t}\n\t\t\t\t\n\n\t\t\t\tfor(int i = 0; i < 16; i++){\n                    float i2 = float(i)*1.0;\n\t\t\t\t\tcol.r+=noise(uv.xyy*(32.0)+col.rgb+t*sign(sin(i2/3.0)));\n\t\t\t\t\tcol.g+=noise(uv.xyx*(32.0)+col.rgb+t*sign(sin(i2/3.0)));\n\t\t\t\t\tcol.b+=noise(uv.yyx*(32.0)+col.rgb+t*sign(sin(i2/3.0)));\n\t\t\t\t}\n\t\t\t\tcol.rgb/=32.0;\n\t\t\t\tcol.rgb=mix(col.rgb,normalize(col.rgb)*2.0,1.0);\n\t\t\t\tcol.rgb+=.3;\n    \n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}