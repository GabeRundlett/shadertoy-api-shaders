{
    "Shader": {
        "info": {
            "date": "1699277889",
            "description": "this should plot a large dot, \nbut on Windows/Angle it gives random noise in a square on red bg (at least once the texture is loaded)\n\nBug report : [url]  https://bugs.chromium.org/p/chromium/issues/detail?id=1499875 [/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "dlccDM",
            "likes": 6,
            "name": "GLSL Angle bug #72",
            "published": 3,
            "tags": [
                "glsl",
                "bug",
                "angle"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 306
        },
        "renderpass": [
            {
                "code": "// acid test simplified from https://www.shadertoy.com/view/DdyfW3 vs https://shadertoy.com/view/dsyBzV\n\nvoid mainImage(out vec4 O, vec2 I) {\n\n    vec2 R = iResolution.xy, x,F,H, \n         U =  ( 2.*I - R ) / R.y;                                      // --- normalize coordinates in [-r,r]x[-1,1]\n    O = vec4(0);\n\n    float j = 1.;\n    for ( float i = 0.; i < 1.; i++ )             // no bug if commented (despite useless)\n        for( float j = 1.; j < 2.; j++ )          // no bug if commented (despite useless)\n        {\n         // vec2 x = j*U; F = floor(x);           // no bug if used\n                 x = j*U; F = floor(x);           // bug if used ( on Windows )\n         // vec2 F = floor(j*U) ;                 // no bug if used\n         //      F = floor(j*U) ;                 // no bug if used\n         \n            H = texture(iChannel2, F ).xy;                             // --- get random vec2 from H. Since F=floor(), is always texture(vec2(0))\n         // H = texture(iChannel2, U ).xy;                     // on Windows this give the same result than using F !\n         // H = texture(iChannel2, 0.*F ).xy;                  // no bug with this version (despite does the same)\n         // H = texture(iChannel2, min(0.,iTime)*F ).xy;       // no bug with this version (despite does the same)\n         // H = fract(1e3*sin((F)*mat2(13.3,71.1,37.7,19.7))); // no bug with this version (analytical random instead of texture)\n         \n            if( length( U - H ) < .1 ) O++;                            // --- draw large dot at location H\n            if(  x == F ) O.r++;                  // on Windows, this is always true ! floor was ignored \n        }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}