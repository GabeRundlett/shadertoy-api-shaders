{
    "Shader": {
        "info": {
            "date": "1641764857",
            "description": "A quick uv map [Limit is 9]",
            "flags": 0,
            "hasliked": 0,
            "id": "NdXcR4",
            "likes": 9,
            "name": "UV Texture Map Debugger",
            "published": 3,
            "tags": [
                "texture",
                "uv",
                "map",
                "util"
            ],
            "usePreview": 0,
            "username": "Yusef28",
            "viewed": 318
        },
        "renderpass": [
            {
                "code": "\n#define LETTER_SIZE 1./16.\n#define STEP_SIZE 1./2.\n#define FIRST_LETTER 64.\n#define FIRST_NUMBER 48.\n\nvec2 numToCoord(float a){\n    return vec2( mod(a,16.), 15.-floor(a/16.) );\n}\n\nvec3 C(vec2 uv, vec2 start, inout float moveX,float num){\n    moveX += STEP_SIZE/2.3;\n    if(uv.x < start.x           || \n       uv.x > start.x+STEP_SIZE || \n       uv.y < start.y           || \n       uv.y > start.y+STEP_SIZE){\n       return vec3(0.);\n    }\n    \n    uv -= start; uv /= STEP_SIZE; uv *= LETTER_SIZE;\n    uv += vec2(LETTER_SIZE*numToCoord(num));\n    return textureGrad(iChannel0,uv,dFdx(uv),dFdy(uv)).rrr;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.);// texture(iChannel0,uv).rgb;\n    \n    \n    float NUM = 8.;\n    vec2 st = fract(uv*NUM );\n    vec2 id = floor(uv*NUM );\n    float moveX = STEP_SIZE/4.;\n    float colNum = mod(id.x+(NUM-id.y)-1.,8.);\n    \n    col = 0.4+0.4*cos(vec3(0.,3.,4.)/3. + colNum);\n    col = mix(col,vec3(0.9),smoothstep(0.485,0.5,abs(st.x-0.5)));\n    col = mix(col,vec3(0.9),smoothstep(0.485,0.5,abs(st.y-0.5)));\n    col = mix(col,vec3(0.9),0.2*smoothstep(0.45,0.5,abs(fract(st.x*8.)-0.5)));\n    col = mix(col,vec3(0.9),0.2*smoothstep(0.45,0.5,abs(fract(st.y*8.)-0.5)));\n   \n    col = mix(col,vec3(1.),C(st,vec2(moveX,STEP_SIZE/2.),moveX,FIRST_LETTER+id.x+1.));\n    col = mix(col,vec3(1.),C(st,vec2(moveX,STEP_SIZE/2.),moveX,FIRST_NUMBER+NUM-id.y));\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}