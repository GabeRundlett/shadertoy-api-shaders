{
    "Shader": {
        "info": {
            "date": "1492754459",
            "description": "hue rotation, domain distortion, color comparison",
            "flags": 32,
            "hasliked": 0,
            "id": "lsBcRK",
            "likes": 9,
            "name": "coruscating clouds",
            "published": 3,
            "tags": [
                "2d",
                "noise",
                "feedback",
                "ca"
            ],
            "usePreview": 0,
            "username": "victor_shepardson",
            "viewed": 1367
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// LICENSE:\n// Creative Commons Attribution 4.0 International License.\n// https://creativecommons.org/licenses/by/4.0/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 d = vec3(1.0/iResolution.xy, 0.);\n    const float eps = 1.0/256.0;\n    const float g = 4.;\n    \n    vec2 uv = fragCoord.xy * d.xy;\n    \n    vec4 noise = texture(iChannel1, uv);\n    //noise = 1.-2.*noise*noise;\n    \n\tvec4 state = texture(iChannel0, uv);\n    vec4 state_x = texture(iChannel0, fract(uv+128.*d.xz));\n    vec4 state_y = texture(iChannel0, fract(uv+128.*d.zy));\n    \n    vec2 h = normalize(vec2(\n        2.0*state.r-state.g-state.b+1e-7,\n        sqrt(3.0)*(state.g-state.b)\n    ));\n    \n    vec4 diff_x = state-state_x;\n    float dist_x = dot(diff_x, diff_x);\n    vec4 diff_y = state-state_y;\n    float dist_y = dot(diff_y, diff_y);\n    \n    vec2 sim = pow(vec2(dist_x, dist_y)+1., vec2(-.5));\n    vec2 disp = vec2(sim.x*h.x-sim.y-h.y, sim.x*h.y+sim.y*h.x);\n    \n    uv -= 1.0*d.xy*disp;\n    uv = fract(uv);\n    \n    state = texture(iChannel0, uv);\n    h = normalize(vec2(\n        2.0*state.r-state.g-state.b+1e-7,\n        sqrt(3.0)*(state.g-state.b)\n    ));\n    //more lively if uv not wrapped here\n    state_x = texture(iChannel0, uv+h);\n    state_y = texture(iChannel0, uv+h.yx*vec2(1., -1.));\n    \n    diff_x = state-state_x;\n    dist_x = length(diff_x);\n    diff_y = state-state_y;\n    dist_y = length(diff_y);\n\tfloat s = float(dist_x<dist_y);\n    s = s*2.0-1.0;\n\n    \n    state = mix(state, fract(state+g*s*(diff_x-diff_y)+48.*eps*noise), 8.*eps);\n    \n    fragColor = state;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "//noise source (see https://www.shadertoy.com/view/4ssXzX)\n\nfloat pi = 3.14159265359;\nfloat bbsm = 1739.;\nvec2 bbsopt(in vec2 a){\n\treturn fract(a*a*(1./bbsm))*bbsm;\n}\nvec2 mod1024(in vec2 a){\n\treturn fract(a*(1./1024.))*1024.;\t\n}\nvec4 hash(in vec2 pos){\n\tvec2 a0 = mod1024(pos*pi);\n\tvec2 a1 = bbsopt(a0);\n\tvec2 a2 = a1.yx + bbsopt(a1);\n\tvec2 a3 = a2.yx + bbsopt(a2);\n\treturn fract((a2.xyxy + a3.xxyy + a1.xyyx)*(1./bbsm));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = fract(uv + texture(iChannel1, uv).zw);\n    fragColor = hash(fragCoord.xy+texture(iChannel1, uv).xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buf B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}