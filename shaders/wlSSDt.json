{
    "Shader": {
        "info": {
            "date": "1567488338",
            "description": " ",
            "flags": 0,
            "hasliked": 0,
            "id": "wlSSDt",
            "likes": 4,
            "name": "Colorful Lights",
            "published": 3,
            "tags": [
                "3d",
                "colorful",
                "ring",
                "lights"
            ],
            "usePreview": 0,
            "username": "ikuto",
            "viewed": 409
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415927\n#define LIGHT_NUM  73\n\nstruct Light\n{\n    vec3  pos;\n    vec3  col1, col2;\n    float rad1, rad2;\n};\n\nLight lights[LIGHT_NUM];\n\nmat3 lookAt(vec3 eye, vec3 target, vec3 up) //calculate view matrix\n{\n    vec3 w = normalize(target - eye);\n    vec3 u = normalize(cross(w, up));\n    vec3 v = cross(u, w);\n    return mat3(u, v, -w);\n}\n\nvoid rotate(inout vec2 v, float a) { v = cos(a)*v+sin(a)*vec2(-v.y,v.x); }\n\nvec3 render(vec3 ro, vec3 rd)\n{\n    //init lights\n    lights[0] = Light(vec3(0.0), 0.5*vec3(1.0,0.8,0.3), 8.0*vec3(1.0,0.6,0.3), 6.0, 0.8);\n    for (int i = 1; i < LIGHT_NUM; ++i)\n    {\n        vec3 col[3] = vec3[](vec3(1.0,0.0,0.0),vec3(0.0,1.0,0.0),vec3(0.0,0.0,1.0));\n        lights[i] = Light(vec3(0.0), 0.4*col[i%3], 2.0*vec3(1.0), 2.0, 0.3);\n    }\n    \n    //update lights\n    const int N = (LIGHT_NUM-1)/3;\n    float an = 0.0, dt = 2.0*PI/float(N); \n    for (int i = 1; i < LIGHT_NUM; ++i)\n    {\n\t    lights[i].pos.xy = 2.0 * vec2(sin(iTime+an),cos(iTime+an));    \t\n        if (i%3==0) an += dt;\n    }\n    \n    for (int i = 0; i < N; ++i) \n    {\n        rotate(lights[3*i+2].pos.yz, PI/3.0);\n        rotate(lights[3*i+3].pos.yz, -PI/3.0); \n    }\n    \n    //draw lights\n    vec3 color = vec3(0.0);\n    for (int i = 0; i < LIGHT_NUM; ++i)\n    {\n        vec3  lv = lights[i].pos - ro;\n        float an = acos(dot(rd, lv/length(lv)));\n\t#define T(r) (1.0-smoothstep(0.0, r, an*length(lv)))\n        float w = (i == 0) ? 1.0 : 0.1;\n        color += lights[i].col1 * pow(T(lights[i].rad1), \t 4.0) * w;\n        color += lights[i].col1 * pow(T(lights[i].rad2*2.0), 4.0);\n        color += lights[i].col2 * pow(T(lights[i].rad2), \t 4.0);\n    }\n    return color;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2  uv = (2.0*(fragCoord)-iResolution.xy)/iResolution.y;\n    float an = PI/2.0 + 0.3 + 0.4*iTime;\n    vec3  rayOri = 5.0 * vec3(sin(an), 0.0, cos(an));\n    mat3  viewMat = lookAt(rayOri, vec3(0.0), vec3(0.0,1.0,0.0));\n    vec3  rayDir = viewMat * normalize(vec3(uv, -1.5));\n \n   \tvec3 color = render(rayOri, rayDir);\n    color = pow(color, vec3(0.95+0.4*sin(iTime)));\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}