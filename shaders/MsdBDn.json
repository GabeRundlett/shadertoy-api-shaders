{
    "Shader": {
        "info": {
            "date": "1524765370",
            "description": "Awesome!\nInspired by https://www.shadertoy.com/view/lsXcWn",
            "flags": 0,
            "hasliked": 0,
            "id": "MsdBDn",
            "likes": 15,
            "name": "Awesome!",
            "published": 3,
            "tags": [
                "shapes",
                "smiley",
                "emoji"
            ],
            "usePreview": 0,
            "username": "MadEqua",
            "viewed": 762
        },
        "renderpass": [
            {
                "code": "const vec3 YELLOW = vec3(.9921, .898, .4823);\nconst vec3 RED = vec3(.5294, .1294, .2862);\nconst vec3 PINK = vec3(.9764, .7568, .8705);\nconst vec3 BLACK = vec3(0.);\nconst vec3 WHITE = vec3(1.);\n\nconst vec3 DARK_YELLOW_1 = vec3(.949, .8627, .2313);\nconst vec3 DARK_YELLOW_2 = vec3(.945, .9058, .6627);\nconst vec3 LIGHT_YELLOW_1 = vec3(.9921, .9843, .5019);\nconst vec3 LIGHT_YELLOW_2 = vec3(.9372, .9294, .8313);\n\n#define saturate(x) clamp(x, 0., 1.)\n\nfloat circle(vec2 uv, vec2 center, float r, float sm)\n{\n    return 1. - smoothstep(r - sm, r, distance(uv, center));\n}\n\nfloat rectangle(vec2 uv, vec2 center, vec2 size, float sm)\n{\n    vec2 lb = center - size * .5;\n    vec2 rt = center + size * .5;\n    vec2 lbRes = smoothstep(lb, lb + sm, uv);\n    vec2 rtRes = 1. - smoothstep(rt - sm, rt, uv);\n    return lbRes.x * lbRes.y * rtRes.x * rtRes.y;\n}\n\n//sidesToCut -> radius percentage [l, b, r, t]\nfloat circleCut(vec2 uv, vec2 center, float r, vec4 sidesToCut, float sm)\n{\n    float c = circle(uv, center, r, sm);\n    \n    vec2 posToCut = center - (1. - sidesToCut.xy) * r;\n    vec2 lb = smoothstep(posToCut, posToCut + sm, uv);\n    posToCut = center + (1. - sidesToCut.zw) * r;\n    vec2 rt = 1. - smoothstep(posToCut - sm, posToCut, uv);    \n    return c * lb.x * lb.y * rt.x * rt.y;\n}\n\n//range and target -> [minX, minY, maxX, maxY]\nvec2 map(vec2 v, vec4 range, vec4 target)\n{\n    return ((v - range.xy) / (range.zw - range.xy)) * (target.zw - target.xy) + target.xy;\n}\n\nvec2 map01(vec2 v, vec4 range) \n{\n\treturn map(v, range, vec4(.0, .0, 1., 1.));\n}\n\nvec4 head(vec2 uv)\n{\n    float outline = circle(uv, vec2(.0), .45, .005);\n    float inside = circle(uv, vec2(.0), .425, .005);\n    float shadow = circle(uv, vec2(.015, -.015), .49, .12);\n    \n    vec3 col = YELLOW * inside;\n\treturn vec4(col, saturate(outline + shadow));\n}\n\nvec4 eye(vec2 uv)\n{\n    uv -= .5;\n    \n    float outline = circleCut(uv, vec2(0.), .5, vec4(0., .65, 0., 0.), .012);\n    float inside = circleCut(uv, vec2(0.), .424, vec4(0., .73, 0., 0.), .012);\n    float pupil = circle(uv, vec2(.27 , .25), .15, .012);\n    \n\tvec3 col = vec3(inside - pupil);\n    return vec4(col, outline);\n}\n\nvec4 mouth(vec2 uv)\n{\n    uv -= .5;\n    uv.x += .15 * uv.y ;\n    \n    float outline = circleCut(uv, vec2(0.), .5, vec4(0., .0, 0., 1.15), .005);\n    float inside = circleCut(uv, vec2(0.), .465, vec4(0., .0, 0., 1.21), .005);\n    float upperLip = rectangle(uv, vec2(-.009, -.08), vec2(1.02, .033), .005);\n    float tongue = circle(uv, vec2(.12 , -.5), .23, .005);\n        \n    vec3 col = RED * inside;\n    col = mix(col, PINK, tongue * inside);\n    return vec4(col, saturate(outline + upperLip));\n}\n\nvec3 background(vec2 uv)\n{\n    float angle = atan(uv.y, uv.x);\n    float dist = length(uv) * 2.;\n    \n    vec3 c1 = mix(DARK_YELLOW_2, DARK_YELLOW_1, dist);\n    vec3 c2 = mix(LIGHT_YELLOW_2, LIGHT_YELLOW_1, dist);\n    \n    float v = cos(iTime + angle * 8.0) * .5 + .5;\n    return mix(c1, c2, smoothstep(0.48, 0.52, v));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{    \n    vec2 uv = fragCoord / iResolution.xy;\n\tfloat ratio = iResolution.x / iResolution.y;\n    \n    uv -= .5;\n    uv.x *= ratio;\n    \n    vec4 h = head(uv);\n    vec4 le = eye(map01(uv, vec4(-.207 * ratio, -.08, -.07 * ratio, .25)));\n    vec4 re = eye(map01(uv, vec4(.0, -.08, .155 * ratio, .25)));\n    vec4 m = mouth(map01(uv, vec4(-.19 * ratio, -.37, .165 * ratio, .35)));\n    \n    vec3 col = background(uv);\n    col.rgb = mix(col, h.rgb, h.a);\n    col.rgb = mix(col, le.rgb, le.a);\n    col.rgb = mix(col, re.rgb, re.a);\n\tcol.rgb = mix(col, m.rgb, m.a);\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}