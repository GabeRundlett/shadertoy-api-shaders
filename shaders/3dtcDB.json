{
    "Shader": {
        "info": {
            "date": "1601653605",
            "description": "Frankenslug - Result of improvised live code session on Twitch\nLIVE SHADER CODING, SHADER SHOWDOWN STYLE, EVERY TUESDAYS 20:00 Uk time:\nhttps://www.twitch.tv/evvvvil_",
            "flags": 0,
            "hasliked": 0,
            "id": "3dtcDB",
            "likes": 31,
            "name": "[TWITCH] Frankenslug",
            "published": 3,
            "tags": [
                "tunnel",
                "demoscene",
                "glow",
                "alien",
                "goo",
                "organic",
                "scifi",
                "liquid",
                "tube",
                "monster",
                "drip",
                "lazer",
                "creature",
                "industrial",
                "biomechanic",
                "giger"
            ],
            "usePreview": 1,
            "username": "evvvvil",
            "viewed": 1141
        },
        "renderpass": [
            {
                "code": "// Frankenslug - Result of an improvised live coding session on Twitch\n// LIVE SHADER CODING, SHADER SHOWDOWN STYLE, EVERY TUESDAYS 20:00 Uk time: \n// https://www.twitch.tv/evvvvil_\n\nvec2 z,v,e=vec2(.0035,-.0035);float t,tt,g,ggg,tnoi=1.;vec3 blobP,op,po,no,al,ld,colorP;\nfloat lngSp( vec3 p, vec3 h,float r ) {p = p - clamp( p, -h, h );return length( p )-r;}\nconst float PI=acos(-1.);\nfloat smin(float a,float b,float k){float h=max(k-abs(a-b),0.);return min(a,b)-h*h*.25/k;}\nfloat smax(float a,float b,float k){float h=max(k-abs(-a-b),0.);return max(-a,b)+h*h*.25/k;}\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));}\nvec4 texNoise(vec2 uv){ float f = 0.; f+=texture(iChannel0, uv*.125).r*.5; f+=texture(iChannel0,uv*.25).r*.25;\n                       f+=texture(iChannel0,uv*.5).r*.125; f+=texture(iChannel0,uv*1.).r*.125; f=pow(f,1.2);return vec4(f*.45+.05);}\nvec2 mp( vec3 p,float s)\n{\n    op=blobP=p;\n    vec3 hTubesP=p-vec3(0,0,0);    \n    float frill=sin(p.x*30.)*.005,\n        vfrill=cos(p.y*30.)*.006,\n        def=sin(p.x*.5+tt)*.2+sin(p.x*.1+1.)*.3-sin(p.x*1.5)*.2+cos(p.x*p.z*.3)*.2,\n        vdef=sin(p.y*.5+tt+1.),\n        tunnelD=clamp(cos(p.x*.5+1.5),-.5,.5);\n    hTubesP=vec3(atan(hTubesP.z,hTubesP.y)*4., length(hTubesP.zy)-6.9+tunnelD, hTubesP.x*.5);  \n    float tubeD=clamp((cos(hTubesP.z*.4-.5)),-.1,.1)*5.+.5;  \n    hTubesP.x=mod(hTubesP.x,6.)-3.;\n    hTubesP.x=abs(hTubesP.x)-1.5;\n    for(int i=0;i<3;i++){\n        hTubesP.x=abs(hTubesP.x)-tubeD*.2;    \n        hTubesP.x-=.15;\n    }    \n    blobP.xy-=def*1.5;\n    vec3 blobPlugsP=vec3(abs(abs(blobP.x)-2.8)-1.4,abs(abs(abs(blobP.y)-3.5)-4.)-1.5-def*1.5,abs(blobP.z)-2.2);  \n    blobPlugsP.yz*=r2(sin(p.x*.3+tt)*.1);\n    blobPlugsP.z+=-.65+cos(p.y*.4)*.75;\n    vec3 vertTubesP=blobPlugsP;\n    vec2 h,t=vec2(.7*(length(vertTubesP.xz)-.16-vdef*.08-vfrill),7);                      //SLUG VERTICAL TUBES\n    if(lngSp(blobP,vec3(7.5,0,0),5.5)<0.){\n        tnoi=texNoise(p.xz*.06-vec2(.66,1.28)).r*3.8;\n        t.x=min(t.x,.55*lngSp(blobP,vec3(3.9,0,0),2.5+frill+(def-tnoi)*.5));              //SLUG BODY\n        t.x=smax(.8*(length(blobP-vec3(6.,.1,0))-1.1+sin(tt)*.5+tnoi*.4),t.x,.4);         //SLUG MOUTH    \n        t.x=smax(.8*(length(abs(blobP.yz-vec2(3.2,0))-1.)-.12+sin(p.x*25.)*.03),t.x,1.);  //SLUG HOLE CREST\n    }\n    t.x=smin(.5*(length(blobPlugsP)-.6-sin(blobPlugsP.y*blobPlugsP.z*30.)*0.04),t.x,.4);  //SLUG PLUGS  \n    //t.x=smax(length(blobPlugsP-vec3(0,0.4,-0.1))-.3,t.x,.5);//REMOVED TO OPTIMIZE\t\t  //SLUG PLUG HOLES\n    vec3 bubblesP=p-vec3(0,2.5+def,0);bubblesP.x=abs(abs(bubblesP.x)-2.)-1.;\n    t.x=smin(t.x,max(length(bubblesP*vec3(1,sin(p.y*.5-p.x*.2-tt)*.3,1))-.3+p.y*.03,-p.y),.5); //SLUG BUBBLES  \n    h=vec2(length(p.yz)-50.,5.);                                                            //TUNNNNNNNNNELLLLL  \n    h.x=max(h.x,-.8*(length(p.yz)-7.+frill*2.+tunnelD));  \n    vertTubesP-=vec3(0,.4,0.0);\n    if(s>0.){\n        float glowPlugs=.6*(length(vertTubesP)-.48);                                      //SLUG GLOW PLUGS  \n        g+=0.1/(0.1*glowPlugs*glowPlugs*500.);  \n        vertTubesP.xz*=r2(sin(p.y*.5)+tt);    \n        vertTubesP=abs(vertTubesP)-.1-vdef*.4*clamp(p.y-2.,0.,1.)-vfrill;  \n        float lazers=0.65*length(vertTubesP.xz);                                          //LAZERS\n        lazers=min(lazers,glowPlugs);  \n        g+=0.1/(0.1*lazers*lazers*400.);  \n        h.x=min(h.x,lazers);\n        float reddish=.7*lngSp(blobP-vec3(0,.75,0),vec3(4.1,0,0.),1.1+frill);             //SLUG REDISH GLOW\n        ggg+=0.1/(0.1*reddish*reddish*400.);\n        h.x=min(h.x,reddish);\n    }\n    t=t.x<h.x?t:h;    \n    h=vec2(0.8*(length(hTubesP.xy)-.15+(clamp(sin(p.x*3.),-0.5,.5)+.5)*.1),6);            //TUUUUUUUUUBES WHITE\n    t=t.x<h.x?t:h;    \n    h=vec2(.9*length(hTubesP.xy-frill-vec2(0.3,0.))-.38-tunnelD*.2,3);                    //BLACK TUBES CASINGS\n    h.x=max(h.x,-.8*(hTubesP.y+.2-frill)+sin(p.z*p.x*.05)*.2);\n    h.x=max(h.x,-.9*(abs(abs(hTubesP.x-.2)-.2)-.1));  \n    t=t.x<h.x?t:h;\n    colorP=hTubesP;\n    return t;\n}\nvec2 tr( vec3 ro,vec3 rd)\n{\n    vec2 h,t=vec2(.2);\n    for(int i=0;i<128;i++){\n        h=mp(ro+rd*t.x,1.);\n        if(h.x<.0001||t.x>35.) break;\n        t.x+=h.x;t.y=h.y;\n    }\n    if(t.x>35.) t.y=0.;\n    return t;\n}\n#define a(d) clamp(mp(po+no*d,0.).x/d,0.,1.)\n#define s(d) smoothstep(0.,1.,mp(po+ld*d,0.).x/d)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=(fragCoord.xy/iResolution.xy-0.5)/vec2(iResolution.y/iResolution.x,1);\n    tt=mod(iTime+9.3,62.83);\n    vec3 ro=mix(vec3(18.+cos(tt*.2)*9.,4,sin(tt*.4)*4.),\n                vec3(5.-sin(tt*.2)*20.,cos(tt*.2)*5.,-2.),ceil(cos(tt*0.2)));\n    vec3 cw=normalize(vec3(0)-ro),cu=normalize(cross(cw,vec3(0,1,0))),\n        cv=normalize(cross(cu,cw)),rd=mat3(cu,cv,cw)*normalize(vec3(uv,.5)),co,fo;\n    co=fo=vec3(.2,.12,.1)-length(uv)*.1-rd.y*.2;\n    ld=normalize(vec3(.3,.3,-.0));\n    z=tr(ro,rd);t=z.x;\n    if(z.y>0.){\n        po=ro+rd*t;\n        no=normalize(e.xyy*mp(po+e.xyy,0.).x+e.yyx*mp(po+e.yyx,0.).x+e.yxy*mp(po+e.yxy,0.).x+e.xxx*mp(po+e.xxx,0.).x);\n        al=vec3(.6,.5,.4)-sin(colorP.x*200.)*.1;\n        float spa=1.,sspa=0.;\n        if(z.y<5.)al=vec3(0);\n        if(z.y>5.)al=vec3(1),spa=0.;\n        if(z.y>6.)al=vec3(.1,.2,.4)*.5,spa=sspa=1.;\n        float dif=max(0.,dot(no,ld)),\n            fr=pow(1.+dot(no,rd),4.),\n            sp=pow(max(dot(reflect(-ld,no),-rd),0.),40.);\n        co=mix(sp*spa+al*(a(.05)*a(.2)+.2)*(dif*vec3(.6,.7,.9)+s(.5)*sspa*2.),fo,min(fr,.5));\n        co=mix(fo,co,exp(-.00008*t*t*t));\n    }\n    fragColor = vec4(pow(co+g*.2*vec3(.1,.3,.9)+ggg*.2*vec3(.7,.3,.2),vec3(.65)),1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 46,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}