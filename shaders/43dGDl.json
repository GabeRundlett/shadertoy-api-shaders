{
    "Shader": {
        "info": {
            "date": "1717139211",
            "description": "Example of a simple, texture-less dithering method",
            "flags": 0,
            "hasliked": 0,
            "id": "43dGDl",
            "likes": 6,
            "name": "Roberts' dithering",
            "published": 3,
            "tags": [
                "dithering",
                "srgb",
                "r2"
            ],
            "usePreview": 1,
            "username": "ockiller",
            "viewed": 161
        },
        "renderpass": [
            {
                "code": "vec3 sRGB2linear(vec3 rgb) {return mix(rgb / 12.92, pow((rgb + 0.055) / 1.055, vec3(2.4)), step(vec3(0.04045), rgb));}\nvec3 linear2sRGB(vec3 rgb) {return mix(12.92 * rgb, 1.055 * pow(rgb, vec3(1.0 / 2.4)) - 0.055, step(vec3(0.0031308), rgb));}\nfloat uint2float(uint i) {return uintBitsToFloat(0x3F800000u | (i >> 9)) - 1.0;}\n\n// https://extremelearning.com.au/unreasonable-effectiveness-of-quasirandom-sequences/\n// ยง Dithering in computer graphics\nfloat ditherThreshold(uvec2 C) {\n    // Integer arithmetics to avoid loss of precision\n    return fract(uint2float(C.x * 3242174889u) + uint2float(C.y * 2447445414u));\n}\n\nvoid mainImage(out vec4 O, vec2 U) {\n    O = texture(iChannel0, U / iResolution.xy);\n    O.rgb = sRGB2linear(O.rgb);\n\n    // Work in linear space\n    O.rgb = step(vec3(ditherThreshold(uvec2(U))), O.rgb);\n\n    O.rgb = linear2sRGB(O.rgb);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}