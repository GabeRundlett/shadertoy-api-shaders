{
    "Shader": {
        "info": {
            "date": "1563571234",
            "description": "Slit scan effect using only two textures.",
            "flags": 34,
            "hasliked": 0,
            "id": "MlVfWt",
            "likes": 2,
            "name": "Slitscan in two textures",
            "published": 3,
            "tags": [
                "time",
                "warp",
                "slitscan",
                "timewarp",
                "oldframes"
            ],
            "usePreview": 0,
            "username": "aferriss",
            "viewed": 496
        },
        "renderpass": [
            {
                "code": "vec3 getFrame(vec2 uv, float frame, float n){\n    float x = mod(frame, n) ;\n    float y = floor(frame / n);\n    \n    uv += vec2(x, y);\n    uv /= n;\n\n    return texture(iChannel0, uv).rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float n = 8.0;\n    \n    // Change the gradient to change the type of scan\n    float grad = floor(uv.y * n * n) / n * n;\n    \n\n    // Output to screen\n    fragColor = vec4( getFrame(uv, grad, n), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define SIZE 8.0\n\nvec3 storeFrame(vec2 uv){\n   float box = step( 0., uv.x )*step( uv.x, 1./SIZE )*step( 0., uv.y )*step( uv.y, 1./SIZE );\n\n  //unpack and shift buffer frame index by +1\n  float oldSqx = floor(uv.x*SIZE);\n  float oldSqy = floor(uv.y*SIZE);\n  float oldIndex = oldSqy*SIZE+oldSqx;\n  vec2 oldPos = vec2( oldSqx, oldSqy )/SIZE;\n  oldIndex-=1.;\n\n  float shiftSqy = floor( oldIndex/SIZE );\n  float shiftSqx = oldIndex-shiftSqy*SIZE;\n  vec2 shiftPos = vec2( shiftSqx, shiftSqy )/SIZE;\n\n  vec3 old = texture( iChannel1, uv+(shiftPos-oldPos) ).rgb*(1.-box);\n  vec3 raw = texture( iChannel0, uv*SIZE ).rgb*box;\n\n  return raw + old;//vec3(oldPos, 0.0);//old+raw;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = vec4(storeFrame(uv), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}