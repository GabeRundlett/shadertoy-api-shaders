{
    "Shader": {
        "info": {
            "date": "1573870108",
            "description": "You can undo a wave system, but you can't undo diffusion. ",
            "flags": 32,
            "hasliked": 0,
            "id": "wsySDh",
            "likes": 13,
            "name": "Time Inversion ",
            "published": 3,
            "tags": [
                "wave"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 528
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = (cos(atan(A(U).x*50.)*4.+vec4(1,2,3,4)));\n    vec4 \n        n = A(U+vec2(0,1)),\n        e = A(U+vec2(1,0)),\n        s = A(U-vec2(0,1)),\n        w = A(U-vec2(1,0));\n    vec3 no = normalize(vec3(e.x-w.x,n.x-s.x,.001));\n    Q *= 0.5+0.5*texture(iChannel1,no);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "cubemap",
                        "id": 22,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\n\n#define dt sin(.3*iTime)\n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = A(U);\n    vec4 m = 0.25*(A(U+vec2(0,1))+A(U-vec2(0,1))+A(U+vec2(1,0))+A(U-vec2(1,0)));\n    ///*\n    \t// wave : \n   \t \tQ.y += dt*(m.x-Q.x);\n    \tQ.x += dt*Q.y;\n    //*/\n    /*\n\t\t// diffusion :\n\t\t\tQ.x += dt*(m.x-Q.x);\n\t*/\n    \n    if (length(U-vec2(.4,.3)*R)<10.) Q.x = 0.;\n    if (length(U-vec2(.6,.7)*R)<15.) Q.x = 0.;\n    if (length(U-vec2(.8,.2)*R)<30.) Q.x = 0.;\n    if (iFrame < 1) {\n    \tQ = vec4(exp(-.25*length(U-0.5*R)),0,0,0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = A(U);\n    vec4 m = 0.25*(A(U+vec2(0,1))+A(U-vec2(0,1))+A(U+vec2(1,0))+A(U-vec2(1,0)));\n    ///*\n    \t// wave : \n   \t \tQ.y += dt*(m.x-Q.x);\n    \tQ.x += dt*Q.y;\n    //*/\n    /*\n\t\t// diffusion :\n\t\t\tQ.x += dt*(m.x-Q.x);\n\t*/\n    \n    if (length(U-vec2(.4,.3)*R)<10.) Q.x = 0.;\n    if (length(U-vec2(.6,.7)*R)<15.) Q.x = 0.;\n    if (length(U-vec2(.8,.2)*R)<30.) Q.x = 0.;\n    if (iFrame < 1) {\n    \tQ = vec4(exp(-.25*length(U-0.5*R)),0,0,0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = A(U);\n    vec4 m = 0.25*(A(U+vec2(0,1))+A(U-vec2(0,1))+A(U+vec2(1,0))+A(U-vec2(1,0)));\n    ///*\n    \t// wave : \n   \t \tQ.y += dt*(m.x-Q.x);\n    \tQ.x += dt*Q.y;\n    //*/\n    /*\n\t\t// diffusion :\n\t\t\tQ.x += dt*(m.x-Q.x);\n\t*/\n    \n    if (length(U-vec2(.4,.3)*R)<10.) Q.x = 0.;\n    if (length(U-vec2(.6,.7)*R)<15.) Q.x = 0.;\n    if (length(U-vec2(.8,.2)*R)<30.) Q.x = 0.;\n    if (iFrame < 1) {\n    \tQ = vec4(exp(-.25*length(U-0.5*R)),0,0,0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = A(U);\n    vec4 m = 0.25*(A(U+vec2(0,1))+A(U-vec2(0,1))+A(U+vec2(1,0))+A(U-vec2(1,0)));\n    ///*\n    \t// wave : \n   \t \tQ.y += dt*(m.x-Q.x);\n    \tQ.x += dt*Q.y;\n    //*/\n    /*\n\t\t// diffusion :\n\t\t\tQ.x += dt*(m.x-Q.x);\n\t*/\n    \n    if (length(U-vec2(.4,.3)*R)<10.) Q.x = 0.;\n    if (length(U-vec2(.6,.7)*R)<15.) Q.x = 0.;\n    if (length(U-vec2(.8,.2)*R)<30.) Q.x = 0.;\n    if (iFrame < 1) {\n    \tQ = vec4(exp(-.25*length(U-0.5*R)),0,0,0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}