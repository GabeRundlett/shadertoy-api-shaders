{
    "Shader": {
        "info": {
            "date": "1709381376",
            "description": "inspiration: many fun clocks here:\nhttps://www.pinterest.fr/pin/455074737331924143/\nhttps://forum.chronomania.net/mix_entry.php",
            "flags": 0,
            "hasliked": 0,
            "id": "MXsSWn",
            "likes": 30,
            "name": "fun clock 6",
            "published": 3,
            "tags": [
                "clock",
                "loopless",
                "reproduction",
                "funclock"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 306
        },
        "renderpass": [
            {
                "code": "// from base element: https://shadertoy.com/view/43lXDr\n\nvec4 char(vec2 p, int c) {  // print char. from https://www.shadertoy.com/view/llySRh\n    vec2 dFdx = dFdx(p/16.), dFdy = dFdy(p/16.);\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n\treturn textureGrad( iChannel3, p/16. + fract( vec2(c, 15-c/16) / 16. ), \n                        min(abs(dFdx),1./256.), min(abs(dFdy),1./256.) ); // for Windows\n} \n#define R    iResolution.xy\n#define S(v) smoothstep(6./R.y,-6./R.y, v)\n\nfloat chain(vec2 U, float d, float n, float t, int h) {\n    U.x -= d;                       // offset on screen\n    float l = .75,                  // half-heigh so that chain length = 4\n          c = length(U-vec2(0,l));  // for reading disc\n    t += n/4.;                      // read on top\n    \n    vec2  S = sign(U);              // --- build chain coordinate system\n    if (S.x<0.) U = -U;             // symmetry\n    if (abs(U.y) > l )              // polar part\n       U.y -= l*sign(U.y), U = vec2( length(U), atan(U.y,U.x)/6.28  + l*S.y*S.x );    \n    S.x < 0. ? U.y -=  2. : 0.;   \n    U = 5.*vec2(-U.y,U); \n    U.y -= .2;\n    \n    n /= 20.;                       // --- go to digit coords\n    U.x = mod( U.x + t/n +1., 20.) *n;\n    int i = int(floor(U));          // digit id\n    i==0 && h>0 ? i=12 : 0;         // for hours, 12 rather than 0\n    U.x = fract(U.x) /n - .5;\n    l =   .2*S(5.*(c-.24))          // disc\n        + char(U,48+i%10).x;        // draw digit\n    if (i>9) U.x+=.4, l += char(U,48+i/10).x; // draw digit tenth\n    l -= .2*S(abs(U.y) -.07 );      // chain\n//  U *=.6; U.x=mod(U.x,.2)-.1; l -= smoothstep(6./R.y,-6./R.y, length(U) -.1 );\n    return l;\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U = 1.3*( U+U - R ) / R.y;      // normalized coordinates\n    float t = iDate.w,\n          l =    chain(U,-1.5, 12.,     t/3600.   ,1)   // hours\n              +  chain(U,- .4,  6., mod(t/600.,6.),0)   // minutes\n              +  chain(U,  .1, 10., mod(t/60.,10.),0)\n              +  chain(U, 1.1,  6., mod(t/10.,6.) ,0)   // seconds\n              +  chain(U, 1.6, 10., mod(t,10.)    ,0);\n    O = vec4(mix(.3,1.,l));                             // draw\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}