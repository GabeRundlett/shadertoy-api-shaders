{
    "Shader": {
        "info": {
            "date": "1662037799",
            "description": "A colorful stone pattern.",
            "flags": 0,
            "hasliked": 0,
            "id": "ftVczd",
            "likes": 2,
            "name": "Stone mosaic",
            "published": 3,
            "tags": [
                "fractal",
                "mosaic",
                "stone"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 175
        },
        "renderpass": [
            {
                "code": "vec2 triangle_wave(vec2 a){\n    return abs(fract((a+vec2(1.,0.5))*1.5)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 8.*8.*4.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = 1.5;\n        vec2 t2 = vec2(0.);\n        for(int k = 0; k < 9; k++){\n            bool c2 = uv.x < uv.y;\n            uv = abs(-.5+uv+t2);\n            \n            //if(uv.y>uv.x) uv = uv.yx; else uv *= -sign(uv.y-uv.x);\n            t2 = triangle_wave(uv+.5);\n            //t2 = abs(t2);\n\n            uv = t2-triangle_wave(uv.yx);\n            float c1 = uv.y-uv.x;\n            //c1 = max(c1,t2.x-t2.y);\n            col = .5-vec3(abs(c1-uv.x)/2.,col.yz);\n            \n            //col = col.xzy;\n            if(uv.x < uv.y) col = col.yzx;\n            if(c2) col = vec3(col.x/1.5);\n            //if(t2.x*uv.x < t2.y*uv.y) col = col.yzx;\n            //if(t2.x-t2.y > uv.x-uv.y) col = col.yzx;\n\n\n        }\n    fragColor = vec4(abs(col)*2.,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}