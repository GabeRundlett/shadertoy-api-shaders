{
    "Shader": {
        "info": {
            "date": "1655133325",
            "description": "something",
            "flags": 0,
            "hasliked": 0,
            "id": "sddcDj",
            "likes": 6,
            "name": "TRPBG",
            "published": 3,
            "tags": [
                "spiral"
            ],
            "usePreview": 0,
            "username": "Jormala",
            "viewed": 303
        },
        "renderpass": [
            {
                "code": "#define PI acos(-1.0)\n\n#define ZOOM_SPEED 0.046\n#define SPIKE_SPEED 0.063\n#define TWIST_SPEED 0.057\n#define ROT_SPEED 0.0\n#define SPIKE_SIZE 0.05\n#define SPIKE_SIZE_OFFSET 0.05\n#define SPIKE_SIZE_OFFSET_SPEED 0.03\n#define SPIKE_HEIGHT 0.75\n#define SPIKE_HEIGHT_OFFSET 0.5\n#define SPIKE_HEIGHT_OFFSET_SPEED 0.05\n#define HUE_STEPS 9.0\n#define HUE_STEEPNESS 2.0\n#define HUE_RANGE 0.125\n#define HUE_SPEED 0.023\n\nvec3 hsv(float h, float s, float v)\n{\n    vec3 c = vec3(h, s, v);\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat noise(vec2 coord)\n{\n    coord /= iResolution.xx;\n    \n    float p = -1./255./2.;\n    vec2[] aa = vec2[](vec2(-p, -p), vec2(p, -p), vec2(p, p), vec2(-p, p));\n    float c = 0.0;\n    for (int i=0; i<4; i++)\n        c += texture(iChannel0, coord*0.5+aa[i]+iTime*0.01).r/4.;\n    \n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float spikes = 3.+(sin(iTime*SPIKE_SPEED*PI)*0.5+0.5)*4.;\n    \n    vec2 center = vec2(0.5, 0.5*iResolution.y/iResolution.x);\n    vec2 spiral_center = vec2(0.5, center.y);\n    vec2 uv = (fragCoord/iResolution.xx)-spiral_center;\n    uv *= vec2(exp((0.2+cos(PI*iTime*ZOOM_SPEED))*1.25));\n    \n    float dist = length(uv);// * (sin(iTime)*0.5+0.5);\n    float a = (dist+1.0)*2.*PI*sin(iTime*TWIST_SPEED)+iTime*ROT_SPEED;\n    uv = uv*mat2(cos(a), -sin(a), sin(a), cos(a));\n    \n    float ang = acos(clamp(uv.x/dist, -1., 1.))+PI;\n    \n    float spike_size = SPIKE_SIZE+(sin(iTime*PI*SPIKE_SIZE_OFFSET_SPEED)*0.5+0.5)*SPIKE_SIZE_OFFSET;\n    float d = dist + abs(mod(ang/PI*spikes, 2.)-1.)*spike_size;\n    \n    //d *= -5.;\n    //d = clamp(d, 0., center.y)/center.y;\n    \n    float height = 2.0*center.y*(SPIKE_HEIGHT+( sin(iTime*PI*SPIKE_HEIGHT_OFFSET_SPEED)*0.5+0.5 )*SPIKE_HEIGHT_OFFSET);\n    \n    float v = abs(mod(d+iTime*0.001, height*2.0)-height)/height;\n    v = v*0.3+0.6;\n    v = sqrt(v*v);\n    \n    float h = abs(mod(d, height*2.0)-height)/height;\n    \n    //d = 1.-d*d;\n    h = sin(HUE_STEPS*h*PI)*HUE_STEEPNESS/(HUE_STEPS*PI)+h;\n    h = h*HUE_RANGE-iTime*HUE_SPEED;\n    \n    vec3 col = hsv(h, sin(ang*2.+iTime*2.)*0.2+0.8, v);//noise(fragCoord)*0.25+0.6);\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}