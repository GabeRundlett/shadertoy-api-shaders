{
    "Shader": {
        "info": {
            "date": "1589365049",
            "description": "see how similar (green) regions of a gray scale image (red) are compared to a user defined region (blue) (use mouse).\nsplit into 3 sections (algorithms):\nleft: absolute difference\ncenter: maximum difference\nright: euclidean difference",
            "flags": 0,
            "hasliked": 0,
            "id": "tsGXDG",
            "likes": 3,
            "name": "template_matching",
            "published": 3,
            "tags": [
                "templatematching"
            ],
            "usePreview": 0,
            "username": "ich",
            "viewed": 397
        },
        "renderpass": [
            {
                "code": "#define pi 3.141\n\n#define SENSITIVITY 1.0\n#define FILTER_SIZE 0.02\n\nfloat absolute_difference(vec2 uv, vec2 tr, vec2 to)\n{\n\tfloat sum = 0.;\n    float count = 0.;\n    for (float x = -tr.x; x < tr.x; x += 1. / iResolution.x) {\n        for (float y = -tr.y; y < tr.y; y += 1. / iResolution.y) {\n            vec2 o = vec2(x, y);\n            float c0 = texture(iChannel0, uv + o).r;\n            float c1 = texture(iChannel0, to + o).r;\n       \t\tsum += abs(c0 - c1);\n            ++count;\n        }\n    }\n    return sum / count;\n}\n\nfloat maximum_difference(vec2 uv, vec2 tr, vec2 to)\n{\n\tfloat m = 0.;\n    for (float x = -tr.x; x < tr.x; x += 1. / iResolution.x) {\n        for (float y = -tr.y; y < tr.y; y += 1. / iResolution.y) {\n            vec2 o = vec2(x, y);\n            float c0 = texture(iChannel0, uv + o).r;\n            float c1 = texture(iChannel0, to + o).r;\n       \t\tm = max(m, abs(c0 - c1));\n        }\n    }\n    return m;\n}\n\nfloat euclidean_difference(vec2 uv, vec2 tr, vec2 to)\n{\n\tfloat sum = 0.;\n    float count = 0.;\n    for (float x = -tr.x; x < tr.x; x += 1. / iResolution.x) {\n        for (float y = -tr.y; y < tr.y; y += 1. / iResolution.y) {\n            vec2 o = vec2(x, y);\n            float c0 = texture(iChannel0, uv + o).r;\n            float c1 = texture(iChannel0, to + o).r;\n       \t\tsum += (c0 - c1) * (c0 - c1);\n            ++count;\n        }\n    }\n    return pow(sum, .5) / count;\n}\n\nfloat rect(vec2 uv)\n{\n\tuv = abs(uv);\n    return max(uv.x, uv.y);\n}\n\nfloat line(vec2 uv, float a)\n{\n\tvec2 d = vec2(cos(a), sin(a));\n\tfloat l = dot(uv, d);\n\treturn abs(l);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec2 tr = vec2(FILTER_SIZE);\n    //vec2 to = vec2(sin(iTime * .1) * .3);\n    vec2 to = iMouse.xy / iResolution.xy;\n    \n    vec3 col = vec3(0);\n    \n    float d = 0.;\n    float a = atan(uv.x, uv.y);\n    if (uv.x < 1. / 3.)\n   \t\td = absolute_difference(uv, tr, to) * 5.;\n    else if (uv.x < 2. / 3.)\n    \td = maximum_difference(uv, tr, to) * 1.9;\n    else\n    \td = euclidean_difference(uv, tr, to) * 90.;\n    \n    col.r += texture(iChannel0, uv).r;\n    col.g += smoothstep(SENSITIVITY, 0., d);\n    col.rg += smoothstep(.005, 0., line(uv - vec2(1./3., 0), 0.));\n    col.rg += smoothstep(.005, 0., line(uv - vec2(2./3., 0), 0.));\n    \n    col.b += rect((uv - to) / tr) - 1. < 0. ? 1. : 0.;\n\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}