{
    "Shader": {
        "info": {
            "date": "1552054718",
            "description": "Cell Population - Inspired by https://www.youtube.com/watch?v=l-07BXzNdPw\nPlease wait for allowing death to strike and to give life a new chance.\nSoundtrack on Soundcloud : https://soundcloud.com/arthur-stammet/d-sert",
            "flags": 64,
            "hasliked": 0,
            "id": "3slXWB",
            "likes": 1,
            "name": "Cell Population",
            "published": 3,
            "tags": [
                "animation",
                "vornoi",
                "cells"
            ],
            "usePreview": 0,
            "username": "arthurstammet",
            "viewed": 427
        },
        "renderpass": [
            {
                "code": "// Cell Population\n// my step by step tutorial\n// Inspired by https://www.youtube.com/watch?v=l-07BXzNdPw\n\n// create random numbers for x and y\nvec2 N22(vec2 p) {\n    vec3 a = fract(p.xyx*vec3(123.34, 234.34,345.65));\n    a += dot(a, a+34.45);\n    return fract(vec2(a.x*a.y, a.y*a.z));\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y; // -1 <> 1\n    float fft = 2.*texture(iChannel0,vec2(0.01,0.)).x;\n    \n    // Change values here ------------------------------------------------------\n    \n    float window = 0.8;\n    float t = 200.+((iTime*.5)+fft);\n\tfloat lifeTime = t*.2;\n    const float density = 100.;\n    const float mortality = 95.; // mortality < density\n    float brightness = 10.; // high values for more brightness\n    float contrast = .9; // low values for higher contrast\n    \n    // -------------------------------------------------------------------------\n    \n    float minDist = 50.;\n\tfloat xFactor = (iResolution.x/(iResolution.y*.9))*window;\n    float m = 0.;\n    float cellIndex = 0.;\n    float Greyscale = 1.;\n    const float maxCells = density + mortality; \n    float cells = density+(sin(lifeTime)*mortality);\n    \n    for(float i=2.; i<maxCells; i++) {\n        vec2 n = N22(vec2(i));\n        vec2 p = sin(n*t);\n\t\tp.x *= xFactor;\n\t\tp.y *= window;\n        \n        float d = length(uv-p);\n\n        if(i>cells) {break;}\n        \n        if(d<minDist) {\n\t    \tminDist = d;\n            cellIndex = i;\n            Greyscale = brightness+(cellIndex/(density*contrast));\n\t\t}\n    }\n\n    vec3 col = vec3(minDist*Greyscale);\t\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 18051,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/arthur-stammet/d-sert"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}