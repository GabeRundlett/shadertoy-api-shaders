{
    "Shader": {
        "info": {
            "date": "1657870955",
            "description": "convenient trivial variant of IQ's https://www.shadertoy.com/view/4tXyWN  eating vec2.\nAny scalings and signing work. \n\nSee also vec3→vec3: https://www.shadertoy.com/view/NtjyWw",
            "flags": 0,
            "hasliked": 0,
            "id": "fsKBzw",
            "likes": 15,
            "name": "Integer Hash - III - vec2→float",
            "published": 3,
            "tags": [
                "2d",
                "hash"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 793
        },
        "renderpass": [
            {
                "code": "// Fork of \"Integer Hash - III\" by iq. https://shadertoy.com/view/4tXyWN\n\nfloat hash( vec2 f )\n{   uvec2 //x = vec2BitsToUvec2 uvec2( floatBitsToUint(f.x), floatBitsToUint(f.y) ),\n          x = floatBitsToUint(f),\n          q = 1103515245U * ( x>>1U ^ x.yx    );\n    return float( 1103515245U * (q.x ^ q.y>>3U) ) / float(0xffffffffU);\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = vec4( hash(U+iTime) );\n // O = vec4( hash(1e-5*(U+iTime)));  // histograms are ok whatever the scaling\n // O = vec4( hash(1e 5*(U+iTime)));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}