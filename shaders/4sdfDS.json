{
    "Shader": {
        "info": {
            "date": "1526586051",
            "description": "Mouse moves source. Mouse Y changes hue.",
            "flags": 32,
            "hasliked": 0,
            "id": "4sdfDS",
            "likes": 26,
            "name": "Colored Steam",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "noise",
                "fluid",
                "curl"
            ],
            "usePreview": 1,
            "username": "Ebanflo",
            "viewed": 2530
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define noiseScale1 512.0/iResolution.x\n#define noiseScale2 256.0/iResolution.x\n#define noiseScale3 128.0/iResolution.x\n\n#define pointScale1 2.0*iResolution.x/512.0\n#define pointScale2 10.0*iResolution.x/512.0\n#define pointScale3 10.0*iResolution.x/512.0\n\n#define potentialScale 1.0/iResolution.x\n\n#define fade clamp(0.0019*iResolution.x, 0.9, 0.99)\n#define offset 0.00001*clamp(iResolution.x, 0.0, 700.0)\n\n#define epsilon vec2(0.01, 0)\n\nconst vec4 pi = vec4(0,2,4,8)*atan(1.0);\n\nvec3 random3(vec3 c)\n{\n\treturn texture(iChannel1, c*0.03125).rgb-0.5;\n}\n\nconst float F3 =  0.3333333333;\nconst float G3 =  0.1666666667;\n\n//thanks nikat\nfloat simplex3d(vec3 p)\n{\n\t vec3 s = floor(p + dot(p, vec3(F3)));\n\t vec3 x = p - s + dot(s, vec3(G3));\n\n\t vec3 e = step(vec3(0.0), x - x.yzx);\n\t vec3 i1 = e*(1.0 - e.zxy);\n\t vec3 i2 = 1.0 - e.zxy*(1.0 - e);\n\t \n\t vec3 x1 = x - i1 + G3;\n\t vec3 x2 = x - i2 + 2.0*G3;\n\t vec3 x3 = x - 1.0 + 3.0*G3;\n\t \n\t vec4 w, d;\n\t \n\t w.x = dot(x, x);\n\t w.y = dot(x1, x1);\n\t w.z = dot(x2, x2);\n\t w.w = dot(x3, x3);\n\t \n\t w = max(0.6 - w, 0.0);\n\t \n\t d.x = dot(random3(s), x);\n\t d.y = dot(random3(s + i1), x1);\n\t d.z = dot(random3(s + i2), x2);\n\t d.w = dot(random3(s + 1.0), x3);\n\t \n\t w *= w;\n\t w *= w;\n\t d *= w;\n\t \n\t return dot(d, vec4(52.0));\n}\n\nfloat potential(vec2 p2){\n    vec3 p = vec3(p2, 0.1*iTime);\n    float result = noiseScale1*simplex3d(pointScale1*p);\n    result += noiseScale2*simplex3d(pointScale2*p);\n    result += noiseScale3*simplex3d(pointScale3*p);\n    result *= potentialScale;\n    return result;\n}\n\nvec2 curl(vec2 p){\n    vec2 result = vec2(potential(p + epsilon.yx), potential(p + epsilon));\n    result -= potential(p);\n    result /= epsilon.x;\n    return vec2(-result.x, result.y);\n}\n\nvec3 hsv2rgb(in vec3 c)\n{\n\treturn c.z*mix(vec3(1),0.5+0.5*sin(c.x+pi.xzw*2.0/3.0),c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 v = curl(uv*vec2(1, iResolution.y/iResolution.x));\n    fragColor = fade*texture(iChannel0, uv - v - vec2(0, offset));\n    \n    vec2 m =\n        iMouse.z == 0.0 ?\n        0.5*iResolution.xy + 0.3*iResolution.y*sin(1.5*iTime + vec2(0, pi.y))\n        : iMouse.xy;\n    \n    vec2 p = fragCoord - m;\n    float d = max(1.0 - 0.000001*iResolution.x*dot(p, p), 0.0);\n    fragColor += vec4(d*d)*(0.5 + 0.5*sin(4.0*pi.y*uv.y + pi));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "volume",
                        "id": 40,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}