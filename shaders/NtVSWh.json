{
    "Shader": {
        "info": {
            "date": "1640601632",
            "description": "use the shadertoy plugin to accelerate x16 \nMIPmap variants from davidar's meandering [url]https://shadertoy.com/view/NtVSDR[/url]\ncoef exploration.\n-> obvious axis-bias :-) . we should combine loop & MIPmap or try implement alternative fast prefiltering.",
            "flags": 32,
            "hasliked": 0,
            "id": "NtVSWh",
            "likes": 6,
            "name": "meandering : funky MIPmap approx",
            "published": 3,
            "tags": [
                "simulation",
                "convolution",
                "diffusion",
                "2tweets",
                "kernel",
                "ca",
                "golf",
                "reaction",
                "differential",
                "growth",
                "meandering"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 438
        },
        "renderpass": [
            {
                "code": "// MIPmap variants from davidar's meandering. https://shadertoy.com/view/NtVSDR\n\nM-A();}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "/* Original davidar version:\n#define A texelFetch(iChannel0,ivec2(i+u),0)\n#define G(a) exp(-dot(a*i,a*i)) * a*a / 3.1\nM;\n  for(int k=0; ++k<289; r += 9. * A * (G(.4) - G(.25))) i = vec2(k%17,k/17)-8.;\n  r = clamp(r,0.,1.);\n  iFrame<2 ? i = u - 99., r -= G(1.) : r;\n}\n*/\n\n\nM;\n// r += 2.*( A(1.5)- .4*A(2.5) ); \n// r += 2.*( A(1.5)- .5*A(2.5) );\n// r += 1.7*( A(1.5)- .45*A(2.5) );\n// r += .01*(texelFetch(iChannel1,ivec2(u)%256,0).r-.5); // if you want to add noise\n\n   vec2 R = iResolution.xy; r += (1.7+.4*u/R).x * ( A(1.5)- (.4+.2*u/R).y *A(2.5) ); // explore\n   \n   r = clamp(r,0.,1.);\n   iFrame<2 ? r -= dot(u-=99.,u) : r;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define M void mainImage(out vec4 r, vec2 u) { r -= r//\n#define A(v) texture(iChannel0,u/iResolution.xy,v+0.)\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}