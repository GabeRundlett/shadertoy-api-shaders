{
    "Shader": {
        "info": {
            "date": "1493544656",
            "description": "Nyquist limit is s=1, but more if no perfect sampling ( = Sinc ).\nExperience shows that :\n- if you need glasses, even weak, do wear them ! \n- many circles: more demanding ( click to display only 1 )\n- motion: more demanding\n- gamma transform is important",
            "flags": 0,
            "hasliked": 0,
            "id": "MdSyDG",
            "likes": 9,
            "name": "thinnest aliasing-free detail",
            "published": 3,
            "tags": [
                "aliasing"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 923
        },
        "renderpass": [
            {
                "code": "// note that boxfilter(sin(kx)) = 2/ksin(k/2) * sin(kx) , so sampling equiv to boxfilter\n// same for gaussianfilter http://www.wolframalpha.com/input/?i=int(sin(k*x)*exp(-1%2F2*((x-X)%2Fs)%5E2),x%3DX-1%2F2..X%2B1%2F2)\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    float\n       // s = 1.2, v=10.,                      // for single circle ( click to see )\n          s = 1.4, v=0.,                       // motionless\n       // s = 1.5, v=10.,                      // with motion\n          l = length(U-.5-iResolution.xy/2.);  // distance to center\n         \n    if ( iMouse.z>0. ) {                       // one single circle\n        float l0 = 2.*s* floor(iResolution.y/4. /(2.*s) -1./4. ) + 1./4.; // radius\n        v = 0.; \n        if ( abs(l-l0-s/2.) > s ) l = -s/2.; \n    };\n    \n\tO = vec4(pow( .5+.5*sin( 3.141592654/s * l - v*iTime) , 1./2.2) );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}