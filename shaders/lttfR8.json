{
    "Shader": {
        "info": {
            "date": "1538718193",
            "description": "just random background",
            "flags": 0,
            "hasliked": 0,
            "id": "lttfR8",
            "likes": 9,
            "name": "background fan",
            "published": 3,
            "tags": [
                "2d",
                "background"
            ],
            "usePreview": 0,
            "username": "morimea",
            "viewed": 813
        },
        "renderpass": [
            {
                "code": "\n// License - CC0 or use as you wish\n\n#define MD(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n\n#define PI (4.0 * atan(1.0))\n#define TWO_PI PI*2.\n\nconst vec3 green_ = vec3(0x58, 0x8b, 0x8c) / float(0xff);\nconst vec3 green2 = vec3(0x22, 0x2e, 0x2a) / float(0xff);\nconst vec3 white_ = vec3(0xe3, 0xe4, 0xdf) / float(0xff);\nconst vec3 black_ = vec3(0x84, 0x82, 0x85) / float(0xff);\n\nvec3 background_col(vec2 p){\n    if(p.y>0.35) return smoothstep(0.55,0.4,p.y)*green_;\n    return white_;\n}\n\nvec3 background_black(vec2 p){\n    return smoothstep(0.,-0.5,p.y)*black_;;\n}\n\nfloat xRandom(float x) {\n    return fract(dot(sin(x * 591.32 ), cos(x * 391.32 )));\n}\n\n//using https://iquilezles.org/articles/distfunctions2d\nfloat sdLine( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat sdCircle( vec2 p, float r )\n{\n  return length(p) - r;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,vec2(0))) + min(max(d.x,d.y),0.0);\n}\n\n//layer 1\nfloat l1(vec2 p){\n    vec2 res = vec2(16./9.,1.);\n    vec2 op=p;\n    p=vec2((mod(floor(op.y/(1.))*.689+op.x,res.x/2.)-res.x/1.9),mod(op.y,1.)-1./2.);\n    float d;\n    d=smoothstep(0.005,0.01,sdLine(p,vec2(-res.x/2.,-0.5),vec2(-res.x/2.+0.2,0.5)));\n    d=min(d,smoothstep(0.005,0.01,sdLine(p,vec2(-res.x/2.+0.3,-0.5),vec2(-res.x/2.+0.5,0.5))));\n    d=min(d,smoothstep(0.0,0.008,sdLine(p,vec2(-res.x/2.+0.325,-0.5),vec2(-res.x/2.+0.525,0.5))));\n    p=vec2(mod(op.x,res.x),mod(floor(op.x/(res.x))*0.25+op.y,0.4)-0.4*1.5);\n    d=min(d,smoothstep(0.005,0.01,sdLine(p,vec2(-res.x,-0.),vec2(res.x,-0.5))));\n    return d;\n}\n\n//layer 2\nfloat l2(vec2 p){\n    vec2 op=p;\n    float d;\n    p.x=mod(p.x,0.5)-0.5/2.;\n    p.y+=-0.051;\n    d=smoothstep(0.025,0.03,sdLine(p,vec2(0.,0.3),vec2(-0.4,0.6)));\n    d=min(d,smoothstep(0.015,0.02,sdLine(p,vec2(0.,0.3),vec2(0.4,0.6))));\n    d=min(d,smoothstep(0.015,0.02,sdLine(p,vec2(-0.02,0.34),vec2(0.38,0.64))));\n    p=op;\n    d*=step(0.4,p.y);\n    \n    p.x=mod(p.x+0.35,0.7)-0.7/2.;\n    d=max(d,smoothstep(0.01,0.005,sdCircle(p,0.28)));\n    \n    //p=op;\n    \n    d=min(d,smoothstep(0.005,0.01,sdCircle(p,0.123)));\n    \n    vec2 res = iResolution.xy / iResolution.y;\n    //fan speed\n    //p*=MD(mod(iTime*8.*(0.5-xRandom(floor((op.x+(0.35))/0.7))),TWO_PI));\n    p*=MD(mod(iTime*3.*((1.+0.2*floor(mod(((op.x+(0.35))/(0.7)),3.)))*.5-\n                        (1.-0.2*floor(mod(((op.x+(0.35))/(0.7)),5.)))*\n                        min(clamp(floor(mod(((op.x+(0.35*3.))/(0.7*3.)),2.))-\n                                     floor(mod(((op.x+(0.35))/(0.7)),2.)),-1.,1.),\n                            floor(mod(((op.x+(0.35*3.))/(0.7*3.)),2.)))),\n              TWO_PI));\n    float a = atan(p.x,p.y);\n    float r = length(p);\n    p = vec2(a/(TWO_PI),r);\n \tp = (1.0 * p) - vec2(0.5,0.42);\n    p.xy=p.yx;\n    p.y=mod(p.y,0.142)-0.142/2.;\n    d=min(d,smoothstep(0.007,0.01,\n                       sdBox(p+vec2(0.142+0.068,0.), //circle radius 0.123+fan borders=0.142\n                             vec2(0.068,0.025))));\n    d=min(d,smoothstep(0.005,0.01,sdBox(p+vec2(0.242+0.068,0.),vec2(0.068,0.0125))));\n    \n    return d;\n}\n\n//layer 3\nfloat l3(vec2 p){\n    float d;\n    d=smoothstep(0.005,0.0,abs(p.y+0.38));\n    p.x=mod(p.x,0.025)-0.025/2.;\n    if(p.y<-0.38)\n    d=max(d,smoothstep(0.005,0.0,abs(p.x)));\n    return d;\n}\n\nvec3 map_bg(vec2 p){\n    p.x+=iTime/15.; //scroll speed\n    vec2 op=p;\n    float d=l1(p);\n    vec3 col;\n    p=(op+1.)*MD(-.32);\n    d=min(d,l1(p));\n    p=op;\n    col=d*background_col(p);\n    d=min(d,l2(p));\n    col=mix(col,background_black(p),1.-d);\n    p=op;\n    p.x+=iTime/60.; //scroll speed 2\n    d=l3(p);\n    col=mix(col,green2,d);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy / iResolution.y;\n    vec2 uv = (fragCoord.xy) / iResolution.y - res/2.0;\n    //uv*=2.0;\n    vec3 col;\n    \n    col = map_bg(uv);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}