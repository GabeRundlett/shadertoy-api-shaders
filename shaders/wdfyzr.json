{
    "Shader": {
        "info": {
            "date": "1584087415",
            "description": "It's fun to play with the formulas. ",
            "flags": 0,
            "hasliked": 0,
            "id": "wdfyzr",
            "likes": 4,
            "name": "Set",
            "published": 3,
            "tags": [
                "2d",
                "fractals"
            ],
            "usePreview": 0,
            "username": "zxxuan1001",
            "viewed": 379
        },
        "renderpass": [
            {
                "code": "#define ITERATION 12\n#define PI 3.1416\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0*fragCoord/iResolution.xy - 1.0;\n    uv.x *= iResolution.x/iResolution.y; \n    vec2 mo = iMouse.xy / iResolution.xy ;\n    float ti = iTime * 0.2;\n    ivec2 txy = ivec2(fragCoord.xy/iResolution.xy);\n    float fft  = texelFetch( iChannel0, ivec2(txy.x, 0), 0 ).x;\n    float a = 0.02*texelFetch( iChannel0, ivec2(txy.y, 1), 0 ).x;\n    float t = fft;\n    vec2 c = vec2(0.45*cos(PI*mo.x + ti*0.5), 0.45*sin(PI*mo.y + ti*0.5));\n    c += vec2(0.5 + a * sin(t));\n    \n    vec2 p = uv;  \n    float len = length(p);\n    float r = 0.0, g = 0.0, b = 0.0;\n    \n \tvec3 col = vec3(0.0);\n    for (int i = 0; i < ITERATION; ++i) {\n        p = abs(p)/dot(p,p) - c;\n        float l = len;\n        len = length(p);\n        l = len - l;\n        \n        col +=  l * len * vec3(sin(1.2*ti + 10.0), cos(1.8*ti + 12.0), sin(-1.2*ti));\n    \tcol = 1.0 - exp(-0.04*col);\n    }\n    \n    col = pow(col, vec3(1.0/2.2));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 35,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}