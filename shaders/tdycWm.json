{
    "Shader": {
        "info": {
            "date": "1602970491",
            "description": "a simple triangle shape",
            "flags": 0,
            "hasliked": 0,
            "id": "tdycWm",
            "likes": 1,
            "name": "math - simple triangle",
            "published": 3,
            "tags": [
                "simple",
                "math",
                "triangle"
            ],
            "usePreview": 0,
            "username": "catafest",
            "viewed": 576
        },
        "renderpass": [
            {
                "code": "// define a triangle function\nfloat triangle(vec2 p, float width, float height)\n{\n\tvec2 n = normalize(vec2(height, width / 2.0));\n\treturn max(\tabs(p).x*n.x + p.y*n.y - (height*n.y), -p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// define a vector position from iResolution\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y+0.7;\n    //define the triangle\n\tfloat triangle001 = triangle( p, 1.5, 1.5 );\n\t// fill the triangle, need to change col = mix ...\n    //vec3 col = vec3(1.0) - sign(triangle001);\n\t// radiation effect from smooth\n    float ray = 0.01;\n    // draw triangle\n\tvec3 col = mix(  vec3(0.0), vec3(1.0), 1.0-smoothstep(0.0,ray,abs(triangle001)));\n    // draw to output screen\n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}