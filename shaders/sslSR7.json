{
    "Shader": {
        "info": {
            "date": "1619919448",
            "description": "This is based on Fractal 51_gaz by gaz\n\n“You can lie on the brilliant marble-sanded beaches of Santraginus V, inhaling the heady sea vapours”\n— The Hitchhiker's Guide to the Galaxy",
            "flags": 96,
            "hasliked": 0,
            "id": "sslSR7",
            "likes": 2,
            "name": "Santraginus V",
            "published": 3,
            "tags": [
                "fractal",
                "audioreactive",
                "soundcloud"
            ],
            "usePreview": 0,
            "username": "Chaotnix",
            "viewed": 364
        },
        "renderpass": [
            {
                "code": "//This shader is based on Fractal 51_gaz by gaz\n\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\nvoid mainImage(out vec4 fragColor,  in vec2 fragCoord)\n{\n    vec4 O=vec4(0);\n\tvec2 C = fragCoord;\n    vec3 p,r=iResolution,\n    d=normalize(vec3((C-.7*r.xy)/r.y,1));  \n    for(float i=0.,s,e,g=0.;\n        ++i<40.;\n        O.xyz+=mix(vec3(1),H(log(s)*.45),.3)*.03*exp(-.2*i*i*e) \n    )\n    {\n        p=g*d +( .005 * texture(iChannel0,O.xy).xy,7.);// vec3(0,0,.5);\n        //p+= .001 * texture(iChannel0, vec2(length(C),.3) ).x;\n        p=R(p.zxy,normalize(vec3(0.2,0.4,0.9)),iTime*.03);\n        s=2.;\n        for(int i;i++<6;)\n            p=abs(p-vec3(1,2.8,1.5+sin(0.1 * clamp(texture(iChannel0, vec2(length(C),.3) ).x,0.3,.5)-g*.1)*.04))-vec3(1,3.+sin(iTime*.7)*.3,2.1),\n            p*=(fract(iTime*.5)>1.)?-1.:1.,\n            s*=e=7./clamp(dot(p,p),1.2,7.),\n            p*=e;\n            p+= clamp(texture(iChannel0, vec2(length(O),.8) ).y,0.1,1.) * .5, 5.;\n        g+=e=min(abs(p.z),length(p.xy)-.05)/s+1e-3;\n    }\n    \n \n     vec4 cTexture1 = texture(iChannel1,p.xy);\n     vec4 cTexture2 = texture(iChannel2,p.xy);\n     vec4 cTexture = mix(cTexture1, cTexture2, .7);\n//     fragColor -= .5 * O - cTexture;\n//     fragColor =  (.70 + O) - (1. - 0.5 * cTexture) ;\n//     fragColor = mix( 0.7 * O , cTexture, .25);\n//     fragColor = max( 0.7 * O , 0.3 * cTexture);\n\n    vec2 p1 = fragCoord.xy / iResolution.xy ;\n\tp1.x *= iResolution.x/iResolution.y;\n\t\n\tvec3 col = vec3(0);\n    int tx = int(p1.x*200.0);\n    float wave = sin(texelFetch( iChannel0, ivec2(tx,1), 0 ).x);\n    col += .2 -  0.5 * smoothstep( 0.0, 0.15, abs(wave - p1.y) );\n        \n\n    fragColor =   vec4(col, 1.0)*0.3 + .7 + O - (1. - 0.2 * cTexture);\n  \n\n}    ",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 26942,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/psychedelic-trance/goa-gil-deep-trance"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p1 = 2.0*( fragCoord.xy / iResolution.xy ) -1.0;\n\tp1.x *= iResolution.x/iResolution.y;\n\t\n\tvec3 col = vec3(0);\n\tfloat t = 0.0;\n\tvec2 op = p1;\n\tfor (int i = 0; i < 50; i++) {\n\t\t// blackle's asin trick\n\t\tp1 += 0.5*asin(sin(vec2(iTime+t,0.5454*(iTime+t)))); \n\t\tif (length(p1) < 0.01) col = vec3(0,1,1);\n\t\tt += 0.1;\n\t\tp1 = op;\n\t}\n\tfragColor = vec4(col, 1.0);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}