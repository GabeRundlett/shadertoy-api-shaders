{
    "Shader": {
        "info": {
            "date": "1434055421",
            "description": "This is just iq's procedural noise (see e.g. https://www.shadertoy.com/view/4sfGzS) with slight syntactic alterations.  Slower than sampling a texture, but nice and simple and pretty darn fast.",
            "flags": 0,
            "hasliked": 0,
            "id": "MtfXzr",
            "likes": 3,
            "name": "Cheap Noise",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "dgreensp",
            "viewed": 2064
        },
        "renderpass": [
            {
                "code": "float noise(vec3 x)\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.-2.*f);\n\t\n    float n = p.x + p.y*157. + 113.*p.z;\n    \n    vec4 v1 = fract(753.5453123*sin(n + vec4(0., 1., 157., 158.)));\n    vec4 v2 = fract(753.5453123*sin(n + vec4(113., 114., 270., 271.)));\n    vec4 v3 = mix(v1, v2, f.z);\n    vec2 v4 = mix(v3.xy, v3.zw, f.y);\n    return mix(v4.x, v4.y, f.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.yy;\n    float result = noise(vec3(uv*16., iTime));\n\tfragColor = vec4(vec3(result),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}