{
    "Shader": {
        "info": {
            "date": "1628642050",
            "description": "a simple shader that uses primes to make a cool pattern",
            "flags": 0,
            "hasliked": 0,
            "id": "Nl2XWK",
            "likes": 5,
            "name": "prime number screen saver",
            "published": 3,
            "tags": [
                "simple",
                "primes"
            ],
            "usePreview": 0,
            "username": "ArmandB",
            "viewed": 312
        },
        "renderpass": [
            {
                "code": "bool is_prime(float x){\n    x = round(abs(x));//round to remove decimals, abs to remove negatives\n    for(float i = 2.0; i < x/2.0; i++){//divide by (low 2, high x/2)\n        if (mod(x,i) == 0.0){\n            return false;//if divisible exit\n        }\n    }\n    return true;//if not divisible by anything draw\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float angle = 45.0;\n    float size = 100.0;\n    vec2 uv = fragCoord/iResolution.xy*size;//set uv units\n    uv.x *= iResolution.x/iResolution.y;//scale so contents are square\n    uv *= mat2(cos(angle),-sin(angle),sin(angle),cos(angle));//rotation matrix\n    vec3 col = vec3(0);//set bg\n    \n    //changes num to check based on mousepos, sin(time, uv)\n    if(is_prime(uv.x + iMouse.x + sin(iTime+uv.x)) == true \n    && is_prime(uv.y + iMouse.y + cos(iTime+uv.y)) == true){\n        //sets color to change based on uv offset by mousepos\n        col = vec3(0,normalize((uv.yx+iMouse.xy)/size));\n        \n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}