{
    "Shader": {
        "info": {
            "date": "1618774376",
            "description": "Generalization to ellipses.",
            "flags": 0,
            "hasliked": 0,
            "id": "ssfXRB",
            "likes": 11,
            "name": "Ellipse Tangents Through Point",
            "published": 3,
            "tags": [
                "2d",
                "math",
                "geometry",
                "ellipse",
                "tangents"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 129
        },
        "renderpass": [
            {
                "code": "// https://www.desmos.com/calculator/i0ofizuwzm\n\n// Drawing utilities\n#define drawSDF(dist, col) color = mix(color, col, smoothstep(unit, 0.0, dist))\n\n// SDFs\nfloat sdDisc(in vec2 p, in vec2 o, in float r) {\n    return length(p - o) - r;\n}\n\n// https://iquilezles.org/articles/distfunctions\nfloat deEllipse(in vec2 p, in vec2 r) {\n    float k0 = length(p / r);\n    float k1 = length(p / (r * r));\n    return k0 * (k0 - 1.0) / k1;\n}\n\nfloat sdInfLine(in vec2 p, in vec2 a, in vec2 b) {\n    vec2 pa = p - a, ba = b - a;\n    return length(pa - ba * dot(pa, ba) / dot(ba, ba));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 center = 0.5 * iResolution.xy;\n\n    vec4 mouse = (vec4(iMouse.xy, abs(iMouse.zw)) - center.xyxy) / iResolution.y * 4.0;\n    vec2 uv = (fragCoord - center) / iResolution.y * 4.0;\n    float unit = 8.0 / iResolution.y;\n    vec3 color = vec3(0.0);\n\n    // Default before interaction\n    if (ivec2(iMouse.xy) == ivec2(0)) {\n        mouse.xy = vec2(sin(iTime), 1.0) * cos(iTime);\n        mouse.x += 2.0;\n    }\n\n    // Radii and angles\n    vec2 r = vec2(1.25, 0.65) + 0.25 * vec2(cos(iTime), sin(iTime));\n    vec2 a = atan(r.x * mouse.y, r.y * mouse.x) + vec2(1.0, -1.0) * acos(1.0 / length(mouse.xy / r));\n\n    // Points on the ellipse\n    vec2 t1 = vec2(cos(a.x), sin(a.x)) * r;\n    vec2 t2 = vec2(cos(a.y), sin(a.y)) * r;\n\n    // Ellipse\n    drawSDF(abs(deEllipse(uv, r)), vec3(1.0, 0.0, 0.0));\n\n    // Tangents\n    drawSDF(sdInfLine(uv, mouse.xy, t1), vec3(1.0, 0.8, 0.0));\n    drawSDF(sdInfLine(uv, mouse.xy, t2), vec3(1.0, 0.8, 0.0));\n\n    // Point\n    drawSDF(sdDisc(uv, mouse.xy, 0.05), vec3(1.0));\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}