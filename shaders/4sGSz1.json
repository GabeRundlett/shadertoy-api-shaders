{
    "Shader": {
        "info": {
            "date": "1462733960",
            "description": "My very first shader, I don't know yet how to achieve the same result avoiding branching.\nFeel free to correct me",
            "flags": 0,
            "hasliked": 0,
            "id": "4sGSz1",
            "likes": 2,
            "name": "Moving Stripes",
            "published": 3,
            "tags": [
                "2d",
                "stripes",
                "beginnner"
            ],
            "usePreview": 0,
            "username": "eLauer",
            "viewed": 1191
        },
        "renderpass": [
            {
                "code": "// My very first shader, I don't know yet how to achieve the same result avoiding branching.\n// Feel free to correct me.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 bg =  vec3(0.4, 0.32, 0.4);\n    vec3 color1 = vec3(0.8, 0.3, 0.4);\n    vec3 color2 = vec3(0.3, 0.4, 0.8);\n    vec3 color3 = vec3(0.4, 0.8, 0.3);\n    vec3 color4 = vec3(0.2, 0.6, 0.7);\n    vec3 color5 = vec3(0.6, 0.6, 0.8);\n\n    vec3 pixel = bg;\n    \n    float t = mod(iTime/5.0, 1.0);\n    \n    if(uv.x > t -1.0 && uv.x < t - 0.9){\n    \tpixel = color1;\n    } \n    else if(uv.x > t - 0.8 && uv.x < t - 0.7){\n    \tpixel = color2;\n    } \n    else if(uv.x > t - 0.6 && uv.x < t - 0.5){\n    \tpixel = color3;\n    } \n    else if(uv.x > t - 0.4 && uv.x < t - 0.3){\n    \tpixel = color4;\n    } \n    else if(uv.x > t - 0.2 && uv.x < t - 0.1){\n    \tpixel = color5;\n    }  \n    else if(uv.x > t && uv.x < 0.1 + t){\n    \tpixel = color1;\n    }\n    else if(uv.x > 0.2 + t && uv.x < 0.3 + t){\n    \tpixel = color2;\n    }\n    else if(uv.x > 0.4 + t && uv.x < 0.5 + t){\n    \tpixel = color3;\n    }\n    else if(uv.x > 0.6 + t && uv.x < 0.7 + t){\n    \tpixel = color4;\n    }\n    else if(uv.x > 0.8 + t && uv.x < 0.9 + t){\n    \tpixel = color5;\n    }\n    \n   \tfragColor = vec4(pixel, 1);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}