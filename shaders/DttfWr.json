{
    "Shader": {
        "info": {
            "date": "1701154733",
            "description": "experiment inspired by the las vegas sphere. I wanted to see what it would look like if I rendered a scene from the *inside* of a sphere and wrapped it as a texture on the outside of a sphere.\n\nIt's not half bad. Works ok from near-ground viewpoints.",
            "flags": 0,
            "hasliked": 0,
            "id": "DttfWr",
            "likes": 1,
            "name": "experiment inspired by the spher",
            "published": 3,
            "tags": [
                "raycast",
                "experiment",
                "projection"
            ],
            "usePreview": 0,
            "username": "mds2",
            "viewed": 101
        },
        "renderpass": [
            {
                "code": "#define MAXDIST 40.0\n\nfloat sdf(in vec3 p) {\n  return length(p) - 0.75;\n}\n\nvec3 surfnorm(in vec3 p) {\n  return normalize(p);\n}\n\nfloat raycast(in vec3 orig, in vec3 dir) {\n  float accum = 0.0;\n  for (int i = 0; i < 50; ++i) {\n    vec3 p = orig + accum * dir;\n    float dist = sdf(p);\n    if (abs(dist) < 1.0e-4) {\n      return accum;\n    }\n    accum += 0.95 * dist;\n    if (accum > MAXDIST) {\n      return accum;\n    }\n  }\n  return MAXDIST + 1.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0 * fragCoord - iResolution.xy)/min(iResolution.y, iResolution.x);\n    \n    vec3 orig = vec3(0.0, 0.0, -2.0);\n    vec3 dir = normalize(vec3(uv, 1.2));\n\n    float yawAngle = 3.0 * 3.141592654 * iMouse.x/iResolution.x;\n    float pitchAngle = 0.5 * 3.141592654 * (iMouse.y / iResolution.y - 0.5);\n    \n    float ct = cos(yawAngle);\n    float st = sin(yawAngle);\n    \n    mat3 yaw = mat3(ct, 0.0, st, 0.0, 1.0, 0.0, -st, 0.0, ct);\n    \n    ct = cos(pitchAngle);\n    st = sin(pitchAngle);\n    \n    mat3 pitch = mat3(1.0, 0.0, 0.0, 0.0, ct, st, 0.0, -st, ct);\n    \n    orig = yaw * pitch * orig;\n    dir = yaw * pitch * dir;\n\n    float dist = raycast(orig, dir);\n    \n    vec3 col = texture(iChannel1, dir).rgb;\n    \n    if (dist < MAXDIST) {\n      col = vec3(0.0);\n      vec3 p = orig + dist * dir;\n      vec3 n = surfnorm(p);\n      vec3 bounce = normalize(reflect(dir, n));\n      col += 0.25 * texture(iChannel2, bounce).rgb;\n      col += 0.8 * texture(iChannel0, n).rgb;\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 24,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "cubemap",
                        "id": 26,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "cubemap",
                        "id": 27,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}