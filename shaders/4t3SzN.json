{
    "Shader": {
        "info": {
            "date": "1478331081",
            "description": "A set of 48 spiral inversions at random positions performed to the input point.",
            "flags": 0,
            "hasliked": 0,
            "id": "4t3SzN",
            "likes": 115,
            "name": "Iterations - inversion 2",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "inversion",
                "iteration"
            ],
            "usePreview": 0,
            "username": "iq",
            "viewed": 30994
        },
        "renderpass": [
            {
                "code": "// Copyright Inigo Quilez, 2016 - https://iquilezles.org/\n// I am the sole copyright owner of this Work.\n// You cannot host, display, distribute or share this Work in any form,\n// including physical and digital. You cannot use this Work in any\n// commercial or non-commercial product, website or project. You cannot\n// sell this Work and you cannot mint an NFTs of it.\n// I share this Work for educational purposes, and you can link to it,\n// through an URL, proper attribution and unmodified screenshot, as part\n// of your educational material. If these conditions are too restrictive\n// please contact me and we'll definitely work it out.\n\n// based on https://www.shadertoy.com/view/XdXGDS\n\n#define AA 2\n\n// Other \"Iterations\" shaders:\n//\n// \"trigonometric\"   : https://www.shadertoy.com/view/Mdl3RH\n// \"trigonometric 2\" : https://www.shadertoy.com/view/Wss3zB\n// \"circles\"         : https://www.shadertoy.com/view/MdVGWR\n// \"coral\"           : https://www.shadertoy.com/view/4sXGDN\n// \"guts\"            : https://www.shadertoy.com/view/MssGW4\n// \"inversion\"       : https://www.shadertoy.com/view/XdXGDS\n// \"inversion 2\"     : https://www.shadertoy.com/view/4t3SzN\n// \"shiny\"           : https://www.shadertoy.com/view/MslXz8\n// \"worms\"           : https://www.shadertoy.com/view/ldl3W4\n// \"stripes\"         : https://www.shadertoy.com/view/wlsfRn\n\n\nvec3 shape( in vec2 uv )\n{\n\tfloat time = iTime*0.05  + 47.0;\n    \n\tvec2 z = -1.0 + 2.0*uv;\n\tz *= 1.5;\n    \n    vec3 col = vec3(1.0);\n\tfor( int j=0; j<48; j++ )\n\t{\n        float s = float(j)/16.0;\n        float f = 0.2*(0.5 + 1.0*fract(sin(s*20.0)));\n\n\t\tvec2 c = 0.5*vec2( cos(f*time+17.0*s),sin(f*time+19.0*s) );\n\t\tz -= c;\n\t\tfloat zr = length( z );\n\t    float ar = atan( z.y, z.x ) + zr*0.6;\n\t    z  = vec2( cos(ar), sin(ar) )/zr;\n\t\tz += c;\n\n        // color\t\t\n        col -= 0.5*exp( -10.0*dot(z,z) )* (0.25+0.4*sin( 5.5 + 1.5*s + vec3(1.6,0.8,0.5) ));\n\t}\n        \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float e = 1.0/iResolution.x;\n\n    vec3 tot = vec3(0.0);\n    for( int m=0; m<AA; m++ )\n    for( int n=0; n<AA; n++ )\n    {        \n        vec2 uv = (fragCoord+vec2(m,n)/float(AA))/iResolution.xy;\n\t    vec3 col = shape( uv );\n        float f = dot(col,vec3(0.333));\n        vec3 nor = normalize( vec3( dot(shape(uv+vec2(e,0.0)),vec3(0.333))-f, \n                                    dot(shape(uv+vec2(0.0,e)),vec3(0.333))-f, \n                                    e ) );\n        col += 0.2*vec3(1.0,0.9,0.5)*dot(nor,vec3(0.8,0.4,0.2));;\n\t    col += 0.3*nor.z;\n        tot += col;\n    }\n    tot /= float(AA*AA);\n\n    tot = pow( clamp(tot,0.0,1.0), vec3(0.8,1.1,1.3) );\n\t\n    vec2 uv = fragCoord/iResolution.xy;\n    tot *= 0.4 + 0.6*pow( 16.0*uv.x*uv.y*(1.0-uv.x)*(1.0-uv.y), 0.1 );\n\n    fragColor = vec4( tot, 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}