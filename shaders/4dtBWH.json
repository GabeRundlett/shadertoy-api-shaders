{
    "Shader": {
        "info": {
            "date": "1533858750",
            "description": "the weyls on the bus go round and round\n\nhttp://extremelearning.com.au/unreasonable-effectiveness-of-quasirandom-sequences/",
            "flags": 32,
            "hasliked": 0,
            "id": "4dtBWH",
            "likes": 37,
            "name": "weyl sequence",
            "published": 3,
            "tags": [
                "hash",
                "weyl"
            ],
            "usePreview": 0,
            "username": "jaybird",
            "viewed": 3203
        },
        "renderpass": [
            {
                "code": "// ^^ [Buffer A] is what you're looking for\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    \n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 Nth_weyl(vec2 p0, int n) {\n    \n    //return fract(p0 + float(n)*vec2(0.754877669, 0.569840296));\n    return fract(p0 + vec2(n*12664745, n*9560333)/exp2(24.));\t// integer mul to avoid round-off\n}\n\nfloat shade(vec2 p) {\n\n\treturn 1. - smoothstep(0., 0.00001, dot(p, p));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = fragCoord/iResolution.xx;\n\n    fragColor.rgb = vec3(0.);\n\n    const int n_per_frame = 16;\n    for (int i = 1; i <= n_per_frame; i++) {\n        vec2 p = Nth_weyl(vec2(0.), iFrame*n_per_frame + i);\n        fragColor.rgb += shade(p - uv);\n    }\n\n    fragColor.rgb += texelFetch(iChannel0, ivec2(fragCoord), 0).rgb;\n    fragColor.a   = 1.;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}