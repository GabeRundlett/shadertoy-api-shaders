{
    "Shader": {
        "info": {
            "date": "1547968087",
            "description": "It's very an experiment. A SNES rendering is pretty tough... I couldn't achieve whole things. It's the only one of the animation part. ",
            "flags": 0,
            "hasliked": 0,
            "id": "WsjGRR",
            "likes": 8,
            "name": "Street Fighter 2:Ken",
            "published": 3,
            "tags": [
                "game",
                "snes"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 552
        },
        "renderpass": [
            {
                "code": "#define getBit(num,bit)float( num>>bit & 1)\n\nint[] hadou0A = int[](50331712,58721216,58721152,50332416,0,0,0,0,0,0,0,0,0,0,0,0,0,131072,458752,25673728,53379072,23429120,122880,53002240,22593536,20447232,18612224,9371648,1245184,2031616,983040,655360);\nint[] hadou0B = int[](8389504,1024,1024,8390656,4203008,2097664,2115072,51408896,59804672,17907712,18122752,25755648,1966080,10371072,27230208,11304960,1572864,23396352,1572864,0,9502720,110772224,98041856,13901824,44179456,114688,65536,2097152,786432,0,0,0);\nint[] hadou0C = int[](48,0,0,1024,58727680,62930176,62928896,14683136,6320128,14727168,14905344,7794688,31580160,23166976,6291456,22216704,31916032,9961472,31457280,7864320,4210688,0,36044800,196608,327680,12976128,14843904,5242880,6291456,2097152,1048576,262144);\nint[] hadou1A = int[](41943248,50332608,117440896,128,0,0,0,0,0,0,0,0,0,0,0,0,229376,491520,3596288,3264512,2682880,2125824,1310720,393216,262144,32768,114688,544768,221184,122880,32768,0);\nint[] hadou1B = int[](288,0,8388608,2097664,33556480,33556480,21499904,6144,2368768,50176,2293760,4751360,8356352,6177792,3575808,4161536,3686400,1073152,528384,786432,1376256,1703936,20480,0,114688,606208,655360,32768,0,0,0,0);\nint[] hadou1C = int[](83886592,67108864,4194816,62914816,32507648,32507776,11538304,16254848,14162432,8141568,6094592,3636736,31744,2209792,4808704,4210688,262144,2621440,65536,141312,133120,362496,763904,653312,669696,401408,262144,466944,36864,0,16384,0);\nint[] hadou2A = int[](75497968,117440992,117440704,117440704,50331712,50331648,0,0,0,0,0,0,0,0,0,0,0,7,4,7,114,13304,16355,16379,15923,2816,1827,3040,768,768,0,0);\nint[] hadou2B = int[](16777216,16,256,8388608,67109024,67633440,786816,8,2168192,3151624,1102984,15680,564232,333312,138880,140800,32262,16768,33155,1208,59660,2048,32796,32772,32900,12423,128,0,0,0,0,0);\nint[] hadou2C = int[](33554440,0,0,6291456,15728640,15728848,15728752,16646384,6160504,1016048,994160,1032888,484336,190944,123136,120832,98560,48640,32256,64320,5760,50176,16384,16384,16648,17472,14400,1024,128,0,0,0);\n\nvec3 idleColA = vec3(0.9411765, 0.7529412, 0.0);\nvec3 idleColB = vec3(0.0);\nvec3 idleColC = vec3(0.972549, 0.282353, 0);\n\nint[] fire0A = int[](0,496,7180,2146,12418,24832,57793,24641,8193,5152,2050,3596,496,0);\nint[] fire0B = int[](0,0,496,5000,1608,1661,3614,4030,1022,972,392,128,0,0);\nint[] fire0C = int[](0,0,512,1044,2356,6274,4128,4096,7168,2066,1652,368,0,0);\nint[] fire1A = int[](160,16,34,0,1026,385,2112,64,1153,512,1058,2,512,32);\nint[] fire1B = int[](0,480,28,1008,972,1598,1566,1982,574,396,988,20,224,0);\nint[] fire1C = int[](320,524,960,1038,48,6208,417,2049,2368,114,0,1000,284,192);\n\nvec3 fireColA = vec3(0, 0.4392157, 0.7529412);\nvec3 fireColB = vec3(1.0);\nvec3 fireColC = vec3(0.3686275, 0.7098039, 0.9529412);\n\nint[] floorA = int[](939524096,939524096,805306368,805306368,939524096,939524096,939524096,805306368,805306368,939524096,939524096,939524096,939524096,939524096,805306368,805306368,805306368,805306368,939524096,939524096);\nint[] floorB = int[](111444074,41238550,97812560,111755346,94642184,78774308,111476744,89146424,80020617,124404082,111004885,133908981,123711487,134208494,62119934,62652414,33553911,49741695,44936421,19511915);\nint[] floorC = int[](22773653,92979177,170622895,156680109,39575543,55443419,22740983,179289031,188414838,9813645,23212842,308746,10506240,9233,206315521,205783041,234881544,218693760,89281306,114705812);\nvec3 floorColA = vec3(0.3882353, 0.2392157, 0.1647059);\nvec3 floorColB = vec3(0.5921569, 0.454902, 0.282353);\nvec3 floorColC = vec3(0.8392157, 0.7098039, 0.5803922);\n\nint[] cloudA = int[](0,0,0,0,0,0,0,0,16779504,244844420,268034048,41476112,458752,1024,0,0,0,0,0,0,0,0,0);\nint[] cloudB = int[](0,0,0,0,0,0,0,0,32768,104568,397276,466912,3840,0,0,0,0,0,0,0,0,0,0);\nint[] cloudC = int[](0,0,0,0,0,0,0,224,16742156,23486467,268439587,226492428,41480384,1018624,197632,0,0,0,0,0,0,0,0);\nvec3 cloudColA = vec3(0.8313726, 0.8980392, 0.9490196);\nvec3 cloudColB = vec3(0.7176471, 0.8392157, 0.945098);\nvec3 cloudColC = vec3(1.0);\n\nint[] consA = int[](2147483640,14,2147483647,3,98305,180224,942080,278528,0,0,0,0,0);\nint[] consB = int[](0,2147483632,0,2013266044,1879048194,1073741824,992,125829376,532681728,945836032,808558592,0,0);\nint[] consC = int[](0,0,0,134217600,268337148,1073561596,2146540544,2021375488,1614800896,2072576,933888,2031616,1572864);\nvec3 consColA = vec3(1.0);\nvec3 consColB = vec3(0.0);\nvec3 consColC = vec3(0.7686275, 0.145098, 0.1607843);\n\nint[] fontLA = int[](52568711,2097155,62914831,62926983,1183489,52490887,52441735,125829121,52441735,53014663,16777487,-1995435761,553652503);\nint[] fontLB = int[](314480,69936,32496,68720,4112,68720,85104,65808,85104,68720,1275632,157424,9952);\nint[] fontLC = int[](2093481984,319815680,2080440320,2080505856,19193856,-53608448,2093907968,2013270016,2093383680,2093350912,-161218560,1986330624,-965263360);\nint[] fontRA = int[](688984382,1145324590,689094687,689082686,572658463,771920190,695374142,421807180,689148222,689017150,-1823980897,758431806,26286407);\nint[] fontRB = int[](2516672,8947904,262368,2909888,322784,812736,272064,4229248,2909888,2385600,8424544,33555136,2549296);\nint[] fontRC = int[](-968884224,-2013265920,-966262784,-968884224,-859308032,-1073741824,-972537856,-427294720,-968884224,-968228864,1811939328,-1073217536,1984430080);\nvec3 fontColA = vec3(0, 0, 0.1294118);\nvec3 fontColB = vec3(0.9058824, 0.509804, 0);\nvec3 fontColC = vec3(0.9058824, 0.7647059, 0);\n\n\n// 3 colors limited\nfloat getBitColor(int numA,int numB,int numC,int bit)\n{\n    return float(numA >> bit & 1)+(float(numB >> bit & 1)*2.0) + (float(numC >> bit & 1) * 3.0);\n}\n\nvoid SpriteFonts(inout vec3 col, int colA, int colB, int colC, vec3 col0, vec3 col1, vec3 col2, vec2 uv, in vec2 p, float w, float h)\n{  \n    p = floor(uv-p);\n\tfloat bounds = float(all(lessThan(p,vec2(w,h))) && all(greaterThanEqual(p,vec2(0,0))));\n\tint bit = int(((w-1.0) - p.x)+w*p.y);\n    float d = getBitColor(colA,colB,colC,bit) * bounds;\n    col = mix(col,d == 1.0?col0:d == 2.0?col1:d == 3.0?col2:col,clamp(d, 0.0, 1.0) );\n}\n\nfloat SpriteNxN(int sprite, vec2 uv, vec2 p, int wmax)\n{\n    p = floor(uv-p);\n\tfloat bounds = float(all(lessThan(p,vec2(wmax,1))) && all(greaterThanEqual(p,vec2(0,0))));\n\treturn getBit(sprite,int((float(wmax-1) - p.x)+p.y)) * bounds;\n}\n\nvec3 KenHadouken(int frame, inout vec3 col, vec2 uv, in vec2 p) {\n    int w = 27;\n    float h = 1.0;\n\t\n    int len = 32;\n    int ind = 0;\n    float dc = SpriteNxN(frame == 0 ? hadou0A[ind]:frame == 1 ? hadou1A[ind]:frame == 2 ? hadou2A[ind]:hadou0A[ind],uv,p,w);\n    for(int i = 1; i<len; i++){\n        p.y += 1.0; dc += SpriteNxN(frame == 0 ? hadou0A[i]:frame == 1 ? hadou1A[i]:frame == 2 ? hadou2A[i]:hadou0A[i],uv,p,w);\n    }\n    col = mix(col,idleColA,dc );\n\n    p.y -= 31.0;\n    dc = SpriteNxN(frame == 0 ? hadou0B[ind]:frame == 1 ? hadou1B[ind]:frame == 2 ? hadou2B[ind]:hadou0B[ind],uv,p,w);\n    for(int i = 1; i<len; i++){\n        p.y += 1.0; dc += SpriteNxN(frame == 0 ? hadou0B[i]:frame == 1 ? hadou1B[i]:frame == 2 ? hadou2B[i]:hadou0B[i],uv,p,w);\n    }\n    col = mix(col,idleColB,dc );\n\n    p.y -= 31.0;\n    dc = SpriteNxN(frame == 0 ? hadou0C[ind]:frame == 1 ? hadou1C[ind]:frame == 2 ? hadou2C[ind]:hadou0C[ind],uv,p,w);\n    for(int i = 1; i<len; i++){\n        p.y += 1.0; dc += SpriteNxN(frame == 0 ? hadou0C[i]:frame == 1 ? hadou1C[i]:frame == 2 ? hadou2C[i]:hadou0C[i],uv,p,w);\n    }\n    col = mix(col,idleColC,dc );\n\n    return col;\n}\n\nvec3 Fire(inout vec3 col, vec2 uv, in vec2 p) {\n    int w = 17;\n    float h = 1.0;\n\t\n    float t = mod(iTime*6.0,8.0);\n    int frame = int(mod(iTime*5.0,2.0));\n\t\n    int len = 14;\n    int ind = 0;\n    float dc = SpriteNxN(frame == 0 ? fire0A[ind]:frame == 1 ? fire1A[ind]:fire0A[ind],uv,p,w);\n    for(int i = 1; i<len; i++){\n        p.y += 1.0; dc += SpriteNxN(frame == 0 ? fire0A[i]:frame == 1 ? fire1A[i]:fire0A[i],uv,p,w);\n    }\n    col = mix(col,fireColA,dc );\n\n    p.y -= 13.0;\n    dc = SpriteNxN(frame == 0 ? fire0B[ind]:frame == 1 ? fire1B[ind]:fire0B[ind],uv,p,w);\n    for(int i = 1; i<len; i++){\n        p.y += 1.0; dc += SpriteNxN(frame == 0 ? fire0B[i]:frame == 1 ? fire1B[i]:fire0B[i],uv,p,w);\n    }\n    col = mix(col,fireColB,dc );\n\n    p.y -= 13.0;\n    dc = SpriteNxN(frame == 0 ? fire0C[ind]:frame == 1 ? fire1C[ind]:fire0C[ind],uv,p,w);\n    for(int i = 1; i<len; i++){\n        p.y += 1.0; dc += SpriteNxN(frame == 0 ? fire0C[i]:frame == 1 ? fire1C[i]:fire0C[i],uv,p,w);\n    }\n    col = mix(col,fireColC,dc );\n\n    return col;\n}\n\nvec3 Floor(inout vec3 col, vec2 uv, in vec2 p) {\n    int w = 30;\n    float h = 1.0;\n\t\n    int len = 20;\n    int ind = 0;\n    float brightness = 0.5;\n    float dc = SpriteNxN(floorA[ind],uv,p,w);\n    for(int i = 1; i<len; i++){\n        p.y += 1.0; dc += SpriteNxN(floorA[i],uv,p,w);\n    }\n    col = mix(col,floorColA*brightness,dc );\n\n    p.y -= 19.0;\n    dc = SpriteNxN(floorB[ind],uv,p,w);\n    for(int i = 1; i<len; i++){\n        p.y += 1.0; dc += SpriteNxN(floorB[i],uv,p,w);\n    }\n    col = mix(col,floorColB*brightness,dc );\n\n    p.y -= 19.0;\n    dc = SpriteNxN(floorC[ind],uv,p,w);\n    for(int i = 1; i<len; i++){\n        p.y += 1.0; dc += SpriteNxN(floorC[i],uv,p,w);\n    }\n    col = mix(col,floorColC*brightness,dc );\n\n    return col;\n}\n\nvec3 Cloud(inout vec3 col, vec2 uv, in vec2 p) {\n    int w = 30;\n    float h = 1.0;\n\t\n    int len = 20;\n    int ind = 0;\n    float brightness = 0.9;\n    float dc = SpriteNxN(cloudA[ind],uv,p,w);\n    for(int i = 1; i<len; i++){\n        p.y += 1.0; dc += SpriteNxN(cloudA[i],uv,p,w);\n    }\n    col = mix(col,cloudColA*brightness,dc );\n\n    p.y -= 19.0;\n    dc = SpriteNxN(cloudB[ind],uv,p,w);\n    for(int i = 1; i<len; i++){\n        p.y += 1.0; dc += SpriteNxN(cloudB[i],uv,p,w);\n    }\n    col = mix(col,cloudColB*brightness,dc );\n\n    p.y -= 19.0;\n    dc = SpriteNxN(cloudC[ind],uv,p,w);\n    for(int i = 1; i<len; i++){\n        p.y += 1.0; dc += SpriteNxN(cloudC[i],uv,p,w);\n    }\n    col = mix(col,cloudColC*brightness,dc );\n\n    return col;\n}\n\nvec3 Cons(inout vec3 col, vec2 uv, in vec2 p) {\n    int w = 31;\n    float h = 1.0;\n\t\n    int len = 13;\n    int ind = 0;\n    float brightness = 0.3;\n    float dc = SpriteNxN(consA[ind],uv,p,w);\n    for(int i = 1; i<len; i++){\n        p.y += 1.0; dc += SpriteNxN(consA[i],uv,p,w);\n    }\n    col = mix(col,consColA*brightness,dc );\n\n    p.y -= 12.0;\n    dc = SpriteNxN(consB[ind],uv,p,w);\n    for(int i = 1; i<len; i++){\n        p.y += 1.0; dc += SpriteNxN(consB[i],uv,p,w);\n    }\n    col = mix(col,consColB*brightness,dc );\n\n    p.y -= 12.0;\n    dc = SpriteNxN(consC[ind],uv,p,w);\n    for(int i = 1; i<len; i++){\n        p.y += 1.0; dc += SpriteNxN(consC[i],uv,p,w);\n    }\n    col = mix(col,consColC*brightness,dc );\n\n    return col;\n}\n\nvoid DrawKen(inout vec3 col, vec2 uv, in vec2 p) {\n    float t = mod(iTime*3.0,8.0);\n    int frame = t<2.0?int(t):2;\n    col = KenHadouken(frame,col,uv,vec2(0,0)+p);\n}\n\n// 8x8 streetfighter font\nvoid font(int num, inout vec3 col, vec2 uv, in vec2 p){\n    float w = 4.0, h = 8.0;\n    SpriteFonts(col, fontLA[num], fontLB[num], fontLC[num],fontColA,fontColB,fontColC,uv,p,w, h);\n    SpriteFonts(col, fontRA[num], fontRB[num], fontRC[num],fontColA,fontColB,fontColC,uv,p+vec2(w,0),w, h);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(1.0);\n\tvec2 uv = ( fragCoord.xy /iResolution.xy ) * vec2(128,64);\n    vec2 uvRef = uv;\n\n    // bg+floor\n    if(uv.y>=18.0){\n        col = vec3(149.0/255.0, 40.0/255.0, 0.0);\n\n        uvRef = ( fragCoord.xy /iResolution.xy ) * vec2(256,128);\n        uvRef.x -= iTime*5.0;\n        uvRef.x = mod(uvRef.x,32.0);\n        uvRef.y = mod(uvRef.y,14.0);\n        col = Cons(col,uvRef,vec2(0,0));\n        uvRef = uv;\n        \n        uvRef.x += iTime*2.0;\n        uvRef.x = mod(uvRef.x,50.0);\n        col = Cloud(col,uvRef,vec2(0,40));\n        uvRef = uv;\n        \n\t\tif(uv.y>=18.0 && uv.y<23.0){\n        \tcol = mix(col,vec3(139.0/255.0, 30.0/255.0, 0.0),0.8 );\n\t\t}\n        \n    } else {\n        uvRef.x = mod(uvRef.x,30.0);\n        uvRef.y = mod(uvRef.y,20.0);\n        col = Floor(col,uvRef,vec2(0,0));\n        uvRef = uv;\n    }\n    \n    DrawKen(col,uv,vec2(5,5));   \n\n    float scene = mod(iTime*3.0,8.0);\n    if(scene>=2.0){\n    \tcol = Fire(col,uv,vec2(30.0+((scene-2.0)/6.0)*118.0,20));\n    }\n\n\tfont(int(mod(iTime,10.0)),col,uv,vec2(56,51));\n    font(int(mod(iTime*10.0,10.0)),col,uv,vec2(64,51));\n    \n    uv = ( fragCoord.xy /iResolution.xy ) * vec2(256,128);\n    font(10,col,uv,vec2(10,110));\n    font(11,col,uv,vec2(18,110));\n    font(12,col,uv,vec2(26,110));\n    \n    // results\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}