{
    "Shader": {
        "info": {
            "date": "1699253165",
            "description": "pumpkin",
            "flags": 0,
            "hasliked": 0,
            "id": "clccWM",
            "likes": 0,
            "name": "pumpkin6666",
            "published": 3,
            "tags": [
                "pumpkin"
            ],
            "usePreview": 0,
            "username": "saanvirt",
            "viewed": 163
        },
        "renderpass": [
            {
                "code": "float sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nfloat sdEquilateralTriangle( in vec2 p, in float r )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - r;\n    p.y = p.y + r/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0*r, 0.0 );\n    return -length(p)*sign(p.y);\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n\nfloat sdTriangleIsosceles( in vec2 p, in vec2 q )\n{\n    p.x = abs(p.x);\n    vec2 a = p - q*clamp( dot(p,q)/dot(q,q), 0.0, 1.0 );\n    vec2 b = p - q*vec2( clamp( p.x/q.x, 0.0, 1.0 ), 1.0 );\n    float s = -sign( q.y );\n    vec2 d = min( vec2( dot(a,a), s*(p.x*q.y-p.y*q.x) ),\n                  vec2( dot(b,b), s*(p.y-q.y)  ));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nfloat sdMouth(vec2 p, float r){\n    return length(p)-r;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 r =  2.0*vec2(fragCoord.xy - 0.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = 0.2 + 0.2*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    col = mix(col, 0.2*vec3(150./250., 50./219., 0.), 1.-smoothstep(0.19, 0.25, uv.y));\n   \n    col = mix(col, vec3(0.9, 0.5, 0.), smoothstep(0.,0.03,-sdCircle(r, 0.9)));\n    vec3 cInside = vec3(1., 1., 0.);\n\n\n    vec2 rMirrorX = vec2(abs(r.x), r.y);\n    float eyes = smoothstep(0., 0.03, -sdEquilateralTriangle(rMirrorX-vec2(0.4, 0.4), 0.2));\n    col = mix(col, cInside, eyes);\n    \n    float eyes1 = smoothstep(0., 0.02, -sdEquilateralTriangle(rMirrorX-vec2(0.2, 0.6), 0.1));\n    col = mix(col, cInside, eyes1);\n    float eyes2 = smoothstep(0., 0.02, -sdEquilateralTriangle(rMirrorX-vec2(0.05, 0.7), 0.1));\n    col = mix(col, cInside, eyes2);\n    \n    \n   \n    float mouth = smoothstep(0., 0.06,-sdMouth(rMirrorX-vec2(0., 0.), 0.3));\n    col = mix(col, cInside, mouth);\n    \n    float nose = smoothstep(0., 0.03, -sdEquilateralTriangle(rMirrorX-vec2(0., 0.), 0.1));\n    col = mix(col, vec3(0.), nose);\n    \n\n    fragColor= vec4(col, 1.0);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}