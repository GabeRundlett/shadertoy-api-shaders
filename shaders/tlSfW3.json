{
    "Shader": {
        "info": {
            "date": "1599986154",
            "description": "Mouse control : angles. +SPACE: zoom\nvariant of [url]https://shadertoy.com/view/tlSfDK[/url]\n\nreference: \n[img]https://static.boredpanda.com/blog/wp-content/uploads/2020/09/real-life-old-photos-then-now-15-5f5b5a1616b90__700.jpg[/img]\n",
            "flags": 16,
            "hasliked": 0,
            "id": "tlSfW3",
            "likes": 20,
            "name": "maya pyramid + texture + forest",
            "published": 3,
            "tags": [
                "raytracing",
                "raymarching",
                "temple",
                "pyramid",
                "maya",
                "inca"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 698
        },
        "renderpass": [
            {
                "code": "// textured + displaced + mouse control variant of https://shadertoy.com/view/wl2BWV\n// forest variant of https://shadertoy.com/view/tlSfDK\n\n#define rot(a)        mat2( cos( a + vec4(0,33,11,0)) )\n#define sfloor(x)   ( floor(x-pix/2.) + max( 0., 1.-fract(-x+pix/2.) / pix ) ) // https://www.shadertoy.com/view/tsyXzV \n#define hash2x3(p)    fract(sin((p)*mat3x2(127.1,311.7,  269.5,183.3,  113.5,271.9))*43758.5453123) // https://www.shadertoy.com/view/llySRh\n#define keyPress(a) ( texelFetch(iChannel3,ivec2(a,0),0).x > 0.) // https://www.shadertoy.com/view/llySRh\n#define T(V)          texture(iChannel1,V/4.)\n\nfloat pix, s;                                         // a: material id\n\nfloat map( vec3 p ) {\n    float t,a; vec3 q = p;\n    q.xy = abs(q.xy), a = max(q.x,q.y);               // --- pyramid\n    t = max( (a==q.x?q.y:q.x) -2.,                    // slopes sides\n             a/1.3 + clamp(q.z,0.,9.) -9.25 );        // slopes top \n    t = max( t, q.z-7.);                              // top end\n    t = min( t, a + clamp(sfloor(q.z),0.,7.) - 9.);   // grades \n    t = max( t,-max(min(q.x,q.y)-.5,abs(q.z-7.5)-.5));// doors\n    t = max( t,-max(3.*abs(q.z-7.5),a)+1.5 );         // room\n    t = max( t, q.z-9.);                              // top end\n    s = q.z;                                          // --- forest. floor, then trees\n    q = .03*sin(15.*p); p += q.x+q.y+q.z;             // distortion\n    for (int k=0; k<9; k++) {                         // Worley-like dot structure\n        vec2 d = vec2(k%3-1,k/3-1);                   // seek for closest dot in 9x9 cells around\n        s = min(s, length( hash2x3(floor(p.xy)+d)           // random dot(cell)\n                          - vec3(fract(p.xy)-d,p.z) ) -.5); // raypos rel to cur cell\n    }\n    return min(t,s);\n}\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2  R = iResolution.xy,\n          U = ( 2.*u - R ) / R.y,                     // normalized centered coords\n          M = iMouse.xy / R;\n    pix = .5; // 100./R.y;\n    float t = iTime, _t = 1.+.5*sin(.2*(t+5.)), \n          c = 0.,z = 2.; // Z=0.;                     // color (pseudo-shading), zoom\n    t*=.3; if (iMouse.z>0.)                           // mouse control\n        _t = keyPress(32) ? z=9.*M.y,_t : 1.6*M.y, t = -3.*M.x;\n    vec3  D = normalize( vec3(U,-z) ),                // ray direction. z = field of view = zoom\n          p = vec3(0,0,25);                           // ray origin, then current point on ray\n    D.yz *= rot(_t); D.xy *= rot(t);                  // rotate camera\n    p.yz *= rot(_t); p.xy *= rot(t);\n    t = 1e5;\n    for ( ; c < 50. && t > .01 ; c++ )                // march scene\n        t = map(p),                                   // distance to objects\n        t != s ? t += .3*( T(.3*p.xy)+T(.3*p.xz)+T(.3*p.yz) -1.5 ).r : t, // displacement (temple)\n        p += .5*t*D;  // Z+=t;                        // sphere-tracing step\n    \n  //c = 1. - c/50.;                                   // pseudo-lighting\n // O = vec4(1.3-.01*Z); return;                      // Depth buffer\n    c = 4.*exp(-c/10.);\n    O = t==s                                          // coloring\n             ?  p.z > 2. ? vec4(0,0,2,1)                          // sky\n             :  vec4(0,.2,0 ,1)*(.7+.3*p.z)                       // forest\n              *(.5+1.5*texture(iChannel2,p.xy).r)\n             : vec4(1,.8,.6,1) *( T(p.xy)+T(p.xz)+T(p.yz) -1.)/1.5;// temple\n    O = pow( c*O, vec4(1./2.2) );                     // to sRGB\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    },
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}