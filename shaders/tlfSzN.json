{
    "Shader": {
        "info": {
            "date": "1562245746",
            "description": "gear\nhttps://www.shadertoy.com/view/ttXXzN",
            "flags": 0,
            "hasliked": 0,
            "id": "tlfSzN",
            "likes": 4,
            "name": "technology",
            "published": 3,
            "tags": [
                "raymarching"
            ],
            "usePreview": 0,
            "username": "butadiene",
            "viewed": 595
        },
        "renderpass": [
            {
                "code": "const float PI = 3.1415926;\n\nfloat nPrism(vec3 p, vec2 h,float n,float s){\n    float ang = atan(p.x,p.y);\n    float ln = length(p.xy);\n    float nd = 2.*PI/n;\n    ang = mod(ang,nd)-nd*0.5;\n    vec2 np = ln * vec2(cos(ang),sin(ang));\n    float d = length(vec2(max(np.x-h.x,0.),max(abs(np.y)-s*h.x*tan(nd*0.5),0.0)));\n    d = length(vec2(max(abs(p.z)-h.y,0.0),d));\n    return d;\n}\n\nvec2 rot (vec2 p,float r){\n    \n    mat2 m = mat2(cos(r),sin(r),-sin(r),cos(r));\n    return m*p;\n}\nfloat dist(vec3 p){\n    float k =12.0;\n    p = mod(p,k)-k*0.5;\n    for(int i =0;i<4;i++){\n        p= abs(p)-1.;\n        p.xy = rot(p.xy,1.0);\n        p.zx = rot(p.zx,1.0);\n    }\n   p.xy =rot(p.xy,cos(iTime+PI));\n    float d = nPrism(p,vec2(0.8,0.1),7.0+4.0*sin(iTime),0.55);\n    d = max(d,-(length(p.xy)-0.3));\n    return d;\n}\nvec3 getnormal(vec3 p){\n    vec2 e =vec2(0.001,0.0);\n    return normalize(vec3(\n        dist(p+e.xyy)-dist(p-e.xyy),\n        dist(p+e.yxy)-dist(p-e.yxy),\n        dist(p+e.yyx)-dist(p-e.yyx)\n    ));\n}\nvec4 lighting(vec3 p,vec3 rd){\n    vec3 normal = getnormal(p);\n    vec3 lightdir = normalize(vec3(0.5,0.5,1.0));\n    float NdotL = max(dot(lightdir,normal),0.0);\n    vec3 R = normalize(-lightdir+NdotL*normal*2.);\n    vec3 spec =vec3(pow(max(dot(R,-rd),0.0),10.0));\n    vec3 col = vec3(NdotL)*0.4+spec;\n    return vec4(col,1.0);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.yy;\n    vec3 ro = vec3(5.0,5.0,10.0)+iTime*normalize(vec3(5.0,5.0,10.0));\n    vec3 ta = vec3(0.0,0.0,0.0)+iTime*normalize(vec3(5.0,5.0,10.0));\n    vec3 cdir = normalize(ta-ro);\n    vec3 up = normalize(vec3(0.0,1.0,0.0));\n    vec3 side = cross(cdir,up);\n    up = cross(side,cdir);\n    float fov = 3.0;\n    vec3 rd = normalize(up*p.y+side*p.x+cdir*fov);\n    float t = 0.100001;\n    float d =0.0;\n    for(int i =0;i<99;i++){\n        d = dist(ro+rd*t);\n        t +=d;\n    }\n    vec4 bgcol = vec4(0.8,0.8,0.8,1.0);\n    vec4 col =bgcol;//vec4(0.0,0.0,0.0,1.0);\n    if(d<0.001){\n        col = lighting(ro+rd*t,rd);\n    }\n    float near =3.0;\n    float far =40.0;\n    col = mix(col,bgcol,clamp((t-near)/(far-near),0.0,1.0));\n    fragColor = col;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}