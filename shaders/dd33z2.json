{
    "Shader": {
        "info": {
            "date": "1677741682",
            "description": "I wondered what a voxel shader would look like after code golfing, so I gave it a try.",
            "flags": 0,
            "hasliked": 0,
            "id": "dd33z2",
            "likes": 19,
            "name": "Gyroid Voxels (407 ch)",
            "published": 3,
            "tags": [
                "voxel",
                "gyroid",
                "codegolf"
            ],
            "usePreview": 0,
            "username": "fenix",
            "viewed": 359
        },
        "renderpass": [
            {
                "code": "// ---------------------------------------------------------------------------------------\n// Created by fenix in 2023\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// ---------------------------------------------------------------------------------------\n\n// From FabriceNeyret2: 407 chars\n//*\nvoid mainImage(out vec4 O, vec2 U)\n{\n    vec3 R = iResolution, e, u,\n         r = mat2x3(1.7,0,-1.7,-1,2,-1) / 4.8 * (U+U - R.xy) / R.y - .6,\n         t = 31. * r / r.x,\n         o = floor(95. - t), x = o;\n\t     \n    for ( ;\n          R.z++ < 3e2 && ( dot(o,o) > 4e3 || dot(sin( x = x*.3 - 2.*iTime ),  cos(x.zxy) ) < 1.3 ); \n          x.xz *= mat2(sin(iTime * .1 - vec4(0,11,33,0)))\n        )\n        x = o -= u = step( e = (o - 95.)/r, min(e.yzx,e.zxy) );\n\n    O = R.z < 3e2 \n      ? dot(u, vec3(1, 2, 3))/3.7 * (sin(O = dot( t -= r * dot(e+t/r, u) + 95., t) / 1e3 + vec4(0, 2, 4, 0)) + 1.) / O.x\n      : 1. - U.yyyy / R.y;   \n}\n\n/**/// From fenix: 419 chars\n/*\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t, T=iTime, p = 95.;\n    vec3 R = iResolution, x, e, u,\n\t     r = mat2x3(1.7,0,-1.7,-1,2,-1) / 2.4 * (U- .5 * R.xy) / R.y - .6,\n         o = floor(p - r * ( t = 31./ r.x ));\n  \n    for ( O = 1. - U.yyyy / R.y;\n          dot(o,o) > 4e3 || dot(sin(x = vec3(o.y,o.xz* mat2(sin(T * .1 - vec4(0,11,33,0)))) * .3 - T-T),  cos(x.yzx) ) < 1.3 ; \n          o -= u = step( e = (o - p)/r, min(e.yzx,e.zxy) )\n         )\n        if (R.z++ > 3e2) return;\n\n    t = dot(R = r * (dot(e+t, u) - t)+p, R) / 1e3;\n    O = dot(u, vec3(1, 2, 3))/3.7 * (sin(vec4(0, 2, 4, 0) + t) + 1.) / t;   \n}\n/**/\n\n// From FabriceNeyret2: 421 chars\n/*\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t, T=iTime, p = 95.;\n    vec3 R = iResolution, x, e, u,\n\t     r = mat2x3(1.7,0,-1.7,-1,2,-1) / 2.4 * (U- .5 * R.xy) / R.y - .6,\n         o = floor(p - r * ( t = 31./ r.x ));\n  \n    for ( O = 1. - U.yyyy / R.y;\n          dot(o,o) > 4e3 || dot(sin(x = vec3(o.y,o.xz* mat2(sin(T * .1 - vec4(0,11,33,0)))) * .3 - T-T),  cos(x.yzx) ) < 1.3 ; \n          o -= u = step( e = (o - p)/r, min(e.yzx,e.zxy) )\n         )\n        if (R.z++ > 3e2) return;\n\n    t = dot(R = r * (dot(e+t, u) - t)+p, R) / 1e3;\n    O = dot(u, vec3(1, 2, 3))/3.7 * (sin(vec4(0, 2, 4, 0) + t) + 1.) / t;   \n}\n/**/\n\n// Also from FabriceNeyret2: 420 chars (but slower)\n/*\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t, T=iTime, p = 95.;\n    vec3 R = iResolution, x,e,u,\n\t     r =  mat2x3(1.7,0,-1.7,-1,2,-1)/2.45 *(U-.5*R.xy) / R.y - .58,\n         o = floor(p - r * ( t = 31./ r.x ) );\n  \n    for ( ;\n          R.z++<3e2 && dot(o,o) > 4e3 || dot(sin(x = vec3(o.y,o.xz* mat2(sin(T * .1 - vec4(0,11,33,0)))) * .3 - T-T),  cos(x.yzx) ) < 1.3 ; \n          o -= u = step( e = (o - p)/r, min(e.yzx,e.zxy) )\n         );\n\n    O = R.z<3e2 \n        ? t = dot(R = r * (dot(e+t, u) - t)+p, R) / 1e3,\n          dot(u, vec3(1, 2, 3))/3.7 * (sin(t + vec4(0, 2, 4, 0)) + 1.) / t\n        : 1.-U.yyyy/R.y;   \n}\n/**/\n\n// Original: 470 chars\n/*\n#define n normalize\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t;\n    vec3 R = iResolution,\n         u = (U.xyy - .5 * R) / R.y,\n         p = vec3(95),\n         x = n(vec3(-1,0,1)),\n\t     r = u.y * n(cross(x, p)) - u.x * x - n(p),\n         o = floor(p - r * (t = (abs(64. / r) + p / r).x)),\n         e = (o - p + r * t) / r;\n    \n    for (O = .5 - u.yyyy;\n        length(o) > 63. || dot(sin(x = x * .3 - iTime * 2.), cos(x.zxy)) < 1.3;\n            u = step(e, e.yzx),\n            u *= 1. - u.zxy,\n            e -= u / r,\n            x = o -= u,\n            x.xz *= mat2(sin(iTime * .1 - vec4(0, 11, 33, 0))))\n        if (R.z++ > 3e2) return;\n\n    t = dot(p += r * (dot(e, u) - t), p) / 1e3;\n    O = dot(u, n(vec3(1, 2, 3))) * (sin(t + vec4(0, 2, 4, 0)) + 1.) / t;\n}\n/**/\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}