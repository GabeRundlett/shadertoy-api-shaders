{
    "Shader": {
        "info": {
            "date": "1686368479",
            "description": "Gives the distance to the boundaries, have fun (⌐■_■)\n(Go check out https://www.shadertoy.com/view/clVXWc for iq-approved version, haha)",
            "flags": 0,
            "hasliked": 0,
            "id": "ctVSDV",
            "likes": 5,
            "name": "cool-S-sdf",
            "published": 3,
            "tags": [
                "sdf",
                "cools"
            ],
            "usePreview": 0,
            "username": "LydianLights",
            "viewed": 436
        },
        "renderpass": [
            {
                "code": "// https://iquilezles.org/articles/distfunctions2d/\nfloat sdSegment(in vec2 p, in vec2 a, in vec2 b)\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp(dot(pa,ba)/dot(ba,ba), 0.0, 1.0);\n    return length(pa - ba*h);\n}\n\n// Thanks iq, symmetry is good\n// see: https://www.shadertoy.com/view/clVXWc\n// for iq's optimized version\nfloat sd_COOL_S_SUNGLASSES_EMOJI(vec2 p)\n{\n    const float y1 = 0.2;\n    const float y2 = 0.6;\n    const float x1 = 0.35;\n    const float x2 = 0.175;\n    \n    const vec2 a0 = vec2(0.0, -1.0);\n    const vec2 a1 = vec2(0.0, -y1);\n    const vec2 a2 = vec2(0.0, -y2);\n    const vec2 a3 = vec2(x1, -y1);\n    const vec2 a4 = vec2(x1, -y2);\n    const vec2 a5 = vec2(x1, y2);\n    const vec2 a6 = vec2(x1, y1);\n    const vec2 a7 = vec2(0.0, y1);\n    const vec2 a8 = vec2(-x1, y1);\n    const vec2 a9 = vec2(x2, 0.0);\n\n    p = (p.y > p.x) ? -p : p;\n    vec2 q = vec2(abs(p.x), p.y);\n\n    float d = sdSegment(p, a1, a2);\n    d = min(d, sdSegment(q, a3, a4));\n    d = min(d, sdSegment(p, a5, a6));\n    \n    d = min(d, sdSegment(q, a0, a4));\n\n    d = min(d, sdSegment(p, a7, a3));\n    d = min(d, sdSegment(p, a8, a1));\n    d = min(d, sdSegment(p, a6, a9));\n    \n    return d;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = 2.0 * fragCoord / iResolution.xy - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float d = sd_COOL_S_SUNGLASSES_EMOJI(uv);\n    \n    vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\n\tcol *= 1.0 - exp(-3.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(120.0*d - 10.0 * iTime);\n\tcol = mix(col, vec3(1.0), 1.0-smoothstep(0.0,3.0*fwidth(uv.x),abs(d)));\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}