{
    "Shader": {
        "info": {
            "date": "1703985765",
            "description": "Simple fbm with earthlike tones, w/ fractal\n\ndrag with mouse to pan",
            "flags": 0,
            "hasliked": 0,
            "id": "4c2Gzm",
            "likes": 5,
            "name": "FBM Earthlike tones, w/ Fractal",
            "published": 3,
            "tags": [
                "fractal",
                "noise",
                "simple",
                "fbm",
                "fun",
                "earthtones"
            ],
            "usePreview": 0,
            "username": "spenceryonce",
            "viewed": 197
        },
        "renderpass": [
            {
                "code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        314159.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define NUM_OCTAVES 8\n\nfloat fbm ( in vec2 _st) {\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0);\n    // Rotate to reduce axial bias\n    mat2 rot = mat2(cos(0.5), sin(0.5),\n                    -sin(0.5), cos(0.50));\n    for (int i = 0; i < NUM_OCTAVES; ++i) {\n        v += a * noise(_st);\n        _st = rot * _st * 2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy*3.0;\n    st+=iMouse.xy/-iResolution.xy*3.;\n\n    // Increased complexity for a more intricate fractal structure\n    vec2 q = vec2(fbm(st + 0.01 * iTime) + fbm(st + vec2(1.0)));\n    vec2 r = vec2(fbm(st + 1.5 * q + vec2(1.7, 9.2) + 0.1 * iTime)) +\n             vec2(fbm(st + 1.5 * q + vec2(8.3, 2.8) + 0.05 * iTime));\n    float f = fbm(st + r);\n\n    // Earth tone color palette\n    vec3 color = mix(vec3(0.545, 0.271, 0.075),  // Dark brown\n                     vec3(0.965, 0.765, 0.463),  // Light tan\n                     clamp((f * f) * 4.752, 0.0, 1.568));\n\n    color = mix(color,\n                 vec3(0.753, 0.561, 0.357),  // Golden brown\n                 clamp(length(q), 0.0, 1.0));\n\n    color = mix(color,\n                 vec3(0.467, 0.533, 0.251),  // Dark olive green\n                 clamp(length(r.x), 0.0, 1.0));\n\n    fragColor = vec4((f * f * f + 0.6 * f * f + 0.5 * f) * color, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}