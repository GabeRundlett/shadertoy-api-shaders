{
    "Shader": {
        "info": {
            "date": "1702295769",
            "description": "Simplified 'gravity field 2'.\nUse mouse.x to change coloring. ",
            "flags": 0,
            "hasliked": 0,
            "id": "dlKBRK",
            "likes": 1,
            "name": "clord 2 gravity_field_3d",
            "published": 3,
            "tags": [
                "field",
                "gravity"
            ],
            "usePreview": 0,
            "username": "420bongrips247365",
            "viewed": 162
        },
        "renderpass": [
            {
                "code": "// Fork of \"gravity_field_3d\" by Crackhausen. https://shadertoy.com/view/MdyyzD\n// 2023-12-11 11:48:37\n\n// Fork of \"gravity_field_3\" by tholzer. https://shadertoy.com/view/lsGcRD\n// 2018-03-16 11:43:38\n\n//----------- gravity_field_3 ---------------\n\n// simplified https://www.shadertoy.com/view/4slSWN\n\n#define POINTS 20  \t\t // number of stars\n\n#define t iTime\n\nfloat hash (float i) { return 3.*fract(sin(i*7467.25)*1e5) - 1.; }\n//vec2  hash2(float i) { return vec2(hash(i),hash(i-.1)); }\nvec4  hash4(float i) { return vec4(hash(i),hash(i-9.1),hash(i-1.3),hash(i+.1)); }\n\t\n\nvec2 P (int i)  // position of point[i]\n{\n  vec4 c = hash4(float(i));\n  return vec2( cos(t*c.x-c.z) +0.015*cos(12.765*t*c.y+c.w),\n\t\t\t ( tan(t*c.y+c.w) +0.00005 -sin(1.893*t*c.x+c.z)) / 2.5);\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord)\n{\n  vec2 R = iResolution.xy;\n  vec2 uv = (4.*fragCoord - R*1.7) / R.y;\n  vec2 mp = iMouse.xy / R;\n    \n  float my = -0.5*pow(.5*(1.-cos(1.1*t)),33.0);\n  float fMODE = (1.0-cos(8.1415*mp.x))-sin(iMouse.x/t);\n\n  vec2 V = vec2(0.1);\n  for (int i=1; i<POINTS; i++)\n  {\t\n    vec2 d = P(i) - uv;  // distance point->pixel\n\tV +=  d / dot(d,-301.5-d);  // gravity force field\n  }\n  float c = (length(V)* 1./(203.*float(POINTS)))*(2.+4210.*fMODE);\n  int MODE = int(5.*mp.x);\n  if (MODE==0) fragColor = vec4(-0.25*c)+smoothstep(.005,.04,abs(c-15.*my))*vec4(0.882,0.000,1.000,0);\n  if (MODE==1) fragColor = vec4(.5+.5*sin(2.*c));\n  if (MODE==2) fragColor = vec4(sin(c),sin(c+2.),sin(c/4.),1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}