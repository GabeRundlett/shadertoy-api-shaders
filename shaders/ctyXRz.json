{
    "Shader": {
        "info": {
            "date": "1685888917",
            "description": "messy code just playing about :)",
            "flags": 0,
            "hasliked": 0,
            "id": "ctyXRz",
            "likes": 21,
            "name": "Drunken Walker",
            "published": 3,
            "tags": [
                "cycle",
                "animation",
                "walk",
                "person"
            ],
            "usePreview": 1,
            "username": "SnoopethDuckDuck",
            "viewed": 320
        },
        "renderpass": [
            {
                "code": "#define res iResolution.xy\n#define pi 3.14159\n#define tanh2(a) ((exp2(a)-1.)/(exp2(a)+1.))\n#define thc(a,b) tanh2((a)*cos(b))/tanh2(a)\n#define ths(a,b) tanh2((a)*sin(b))/tanh2(a)\n#define Dir(a) vec2(cos(a),sin(a))\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define ss(a, b) smoothstep(-a/res.y, a/res.y, b)\n\n#define l(d, p, q, r1, r2) d = min(d, cap(uv, p, q, r1, r2));\n\n// iq's IK\nvec2 solve(vec2 p, float r1, float r2, float side) {\n    float h = dot(p,p);\n    float w = h + r1*r1 - r2*r2;\n    float s = max(4.0*r1*r1*h - w*w,0.0);\n    return (w*p + side * vec2(-p.y,p.x)*sqrt(s)) * 0.5/h;\n}\n\nfloat seg( in vec2 p, in vec2 a, in vec2 b ) {\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n// Uneven capsule (unoptimised)\nfloat cap(vec2 uv, vec2 p, vec2 q, float r1, float r2)\n{\n    float h = length( p - q);\n    uv -= p;\n    float th = atan(q.y-p.y, q.x-p.x);\n    uv *= rot(-th + pi/2.);\n    uv.x = abs(uv.x);    \n    float b = (r1-r2)/h;\n    float a = sqrt(1.0-b*b);\n    float k = dot(uv,vec2(-b,a));\n    if( k < 0.0 ) return length(uv) - r1;\n    if( k > a*h ) return length(uv-vec2(0.0,h)) - r2;\n    return dot(uv, vec2(a,b) ) - r1;\n}\n\nfloat g(float x) {\n    return pow((27./32.) * x * x * (2.-x), 8.);\n}\n\n// Foot trajectory\nvec2 getPos(float t, float a, float w, float h) {\n    // 0.3, 0.2\n    return vec2(w, h) * vec2(cos(pi * (t+a)), g(t));\n}\n\nvoid mainImage( out vec4 O, in vec2 px )\n{\n    vec2 uv = (px - 0.5 * res) / res.y;\n    vec2 ouv = uv;\n    uv.y += 0.48;\n    uv *= 1.2;\n    float t = 0.75 * iTime;\n    t += 0.5 * thc(2., 0.2 * iTime);\n    \n    \n    float a = 0.5;\n    float w = 0.31; //0.17 + 0.14 * thc(4., 1.*iTime);\n    float h = 0.2;\n    // Draw foot trajectory\n    \n    float n = 40.;    \n    float t2 = mod(t, 2.);\n    vec2 p = getPos(t2, a, w, h);\n    vec2 q = getPos(mod(t - 2. / n, 2.), a, w, h);\n    float d = seg(uv, p, q);\n    for (float i = 1.; i < n; i++) {\n        float t2 = mod(t + 2. * i / n, 2.);\n        vec2 q = getPos(t2, a, w, h);\n        d = min(d, seg(uv, p, q));\n        p = q;\n    } \n    float s = ss(1., 0.005 - d);\n    //*/\n        \n    vec2 pLegL = getPos(mod(t, 2.), a + 0.*sin(0.5*t), w, h);\n    vec2 pLegR = getPos(mod(t + 1., 2.), a + 0.*cos(0.5*t), w, h);\n    \n    vec2 pHip = vec2(0.1, 0.4 + 0.05 * cos(2.*pi*t));\n    vec2 pKneeL = pLegL + solve(pHip - pLegL, 0.26, 0.28, -1.);\n    vec2 pKneeR = pLegR + solve(pHip - pLegR, 0.26, 0.28, -1.);\n    vec2 pFootL = pLegL + 0.05 * Dir(-0.5 * pi*g(mod(t+0.1,2.)));\n    vec2 pFootR = pLegR + 0.05 * Dir(-0.5 * pi * g(mod(t+1.1,2.)));\n    vec2 pBody = pHip + 0.34 * Dir(pi/2.+0.3 * cos(2. * pi * t + pi/4.));\n    vec2 pArmL = pBody + 0.2 \n               * Dir(-pi/8.+.3*sin(2. * pi * t + pi/4.) + g(mod(t + 1.2, 2.)));\n    vec2 pArmR = pBody - 0.2 \n               * Dir(pi/8.+.3*sin(2. * pi * t + pi/4.) + g(mod(t + 0.2, 2.)));\n    vec2 pHandL = pArmL + 0.2 * Dir(0.5*cos(2.*pi*t+pi));\n    vec2 pHandR = pArmR + 0.2 * Dir(0.5*cos(2.*pi*t+pi));\n    vec2 pHead = pBody + 0.1 * Dir(3.*pi/8.+0.3*cos(2.*pi*t + 3.*pi/4.));\n    vec2 pFingL = pHandL + 0.02 * Dir(-0.5 * cos(2.*pi*t - pi/4.));\n    vec2 pEye = pHead + vec2(0.04, 0);\n    vec2 pEye2 = pEye + 0.01 * Dir(0.3*cos(2.*pi*t - pi/4.));\n    float dL, dC, dR;\n    dL = dR = dC = 1e5;\n    float d3 = 1e5;\n    l(dL, pHip, pKneeL, .02, .01);\n    l(dL, pLegL, pKneeL, .005, .01);\n    l(dL, pLegL, pFootL, .005, .00);\n    l(dL, pBody, pArmL, .02, .01);\n    l(dL, pArmL, pHandL, .01, .0);\n    l(dL, pHandL, pFingL, .0, .0);\n    \n    l(dR, pHip, pKneeR, .02, .01);   \n    l(dR, pLegR, pKneeR, .005, .01);\n    l(dR, pLegR, pFootR, .005, .00);   \n    l(dR, pBody, pArmR, .02, .01);  \n    l(dR, pArmR, pHandR, .01, .0);\n    \n    l(dC, pHip, pBody, .02, .015);\n    l(dC, pBody, pHead, .015, .0);\n    dC = min(dC, length(uv - pHead) - 0.045);\n    \n    float dEye = length(uv - pEye);\n\n    float sEye = ss(1., 0.03 - dEye);\n    float sEye0 = ss(1., 0.02 - dEye);\n    float dEye2 = length(uv - pEye2);\n    float sEye2 = ss(1., 0.015 - dEye2);\n\n    float mx = 0.5 + 0.5 * thc(4., 30. * uv.y + 0.*iTime);\n    float rL = mix(0.01, 0.02, mx);\n    float rC = mix(0.008, 0.018, mx);\n    float rR = mix(0.01, 0.02, mx);\n    float rO = mix(0.025, 0.035, mx);\n    \n    float sL = ss(1., rL - dL);\n    float sC = ss(1., rC - dC); // 0.008    \n    float sR = ss(1., rR - dR);\n    float sLO = ss(1., 0.01 + rL - dL);\n    float sCO = ss(1., 0.01 + rC - dC);\n    float sRO = ss(1., 0.01 + rR - dR);\n    // float sO = ss(1., rLO - min(min(dL, dC), dR));\n\n    vec3 col = vec3(0.98, 0.95, 0.8);\n    col = mix(col, vec3(0), 1.-exp(-0.12*length(ouv)));\n    float bgLines = ss(1., 0.2 - abs(fract(30.*(uv*rot(-pi/4.)).x)-0.5));\n    col *= 1. - 0.005 * bgLines;\n    ouv *= rot(0.1 * thc(4., iTime));\n    float tx = texture(iChannel0, .2*ouv + 0.05 * vec2(iTime, 0)).r;\n    tx = ss(1., 0.2 - tx);\n    col -= 0.1 * tx;\n    col = mix(col, vec3(0.32), sLO);\n    col = mix(col, vec3(1, .5, .5), sL);\n    col = mix(col, vec3(0.32), sCO);\n    col = mix(col, vec3(.5,.8, 1.), sC);\n    col = mix(col, vec3(0.32), sRO);\n    col = mix(col, vec3(.4), sR);\n    col = mix(col, vec3(.32), sEye);\n    col = mix(col, vec3(0.99), sEye0);\n    col = mix(col, vec3(.32), sEye2);\n    col *= 1. - 0.005 * bgLines;\n    \n    O = vec4(col, 1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}