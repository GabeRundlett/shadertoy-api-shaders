{
    "Shader": {
        "info": {
            "date": "1492143264",
            "description": "monkey punching keyboard until something cool happens",
            "flags": 32,
            "hasliked": 0,
            "id": "XdjcWW",
            "likes": 0,
            "name": "(in)difference",
            "published": 3,
            "tags": [
                "pretentiousname"
            ],
            "usePreview": 0,
            "username": "pickledchickenfoot",
            "viewed": 491
        },
        "renderpass": [
            {
                "code": "float dist(vec2 p0, vec2 pf){return sqrt((pf.x-p0.x)*(pf.x-p0.x)+(pf.y-p0.y)*(pf.y-p0.y));}\n\nvec3 difference (vec3 target, vec3 blend){\n    return abs (target - blend);\n    \n}\n\nvec3 radialGradient(vec2 location, float size, vec3 inner, vec3 outer, vec2 fragCoord)\n{\n    float d = dist(iResolution.xy*location,fragCoord.xy);\n    return mix(inner, outer, d/size);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float sinSeed = sin(iTime);\n    float cosSeed = cos(iTime);\n    float time = iTime;\n    \n    vec3 color = vec3(0.0);\n\n    float mul = 6.;\n    for(float j = 0.; j < mul; j += 1.) {\n        float amt = 3.05;\n        for(float i = 0.1; i < amt; i += 0.1) {\n            vec2 loc = vec2(0.5 + sin(time+i+j)*0.2, 0.5 + cos(time+i+j)*0.2);\n            vec3 c = radialGradient(loc, 10., vec3(0.0), vec3(1.0), fragCoord);\n            color = difference(color, c);\n        }\n    }\n    \n    \n\tfragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}