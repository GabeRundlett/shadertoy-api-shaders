{
    "Shader": {
        "info": {
            "date": "1530547678",
            "description": "Simple metaballs",
            "flags": 0,
            "hasliked": 0,
            "id": "4dVfWK",
            "likes": 14,
            "name": "Metaballs - kinda yellow",
            "published": 3,
            "tags": [
                "metaballs"
            ],
            "usePreview": 0,
            "username": "luka712",
            "viewed": 1153
        },
        "renderpass": [
            {
                "code": "\nfloat circle(vec2 uv, vec2 pos, float r){\n \t\n    return r/distance(uv, pos);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    \n    float r = .035;\n    \n    uv.x *= iResolution.x / iResolution.y;\n\n    float c = circle(uv, vec2(sin(iTime * 2.) * .4,  cos(iTime * .4) * .4), r);\n    c += circle(uv, vec2(sin(iTime * .5) * .4, cos(iTime * .7) * .4), r);\n    c += circle(uv, vec2(sin(iTime * .7) * .4, cos(iTime * .8) * .4), r);\n    c += circle(uv, vec2(sin(iTime * .2) * .4, cos(iTime * .3) * .4), r);\n    c += circle(uv, vec2(sin(iTime * .3) * .4, cos(iTime * .4) * .4), r);\n    c += circle(uv, vec2(sin(iTime * .6) * .4, cos(iTime) * .4), r);\n    c += circle(uv, vec2(sin(iTime * .5) * .4, cos(iTime * .2) * .4), r);\n    c += circle(uv, vec2(sin(iTime * .3) * .4, cos(iTime) * .7), r);\n\n    \n\n    // Output to screen\n    fragColor = vec4(vec3(0.), 1.) + vec4(1., 1. * c / 3., 0., 1.) * c;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}