{
    "Shader": {
        "info": {
            "date": "1540757799",
            "description": "shouldn't compile:  out of range vector/array indexing is undetected in loops !\nThen the index is clamped to either min or max legit value, even as a left-value (cf last commented code).\nBut wouldn't compile if this indexing was done directly (switch #if)",
            "flags": 0,
            "hasliked": 0,
            "id": "4tcfDS",
            "likes": 0,
            "name": "GLSL bug: out of range undetect",
            "published": 3,
            "tags": [
                "glsl",
                "bug"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 447
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n\n#if 0\n    \n   if (U[0] > 100.)  U[0] = 0.;\n   if (U[1] > 100.)  U[1] = 0.;\n   if (U[2] > 100.)  U[2] = 0.;    // out of range -> compile error\n   if (U[3] > 100.)  U[3] = 0.;    // out of range -> compile error\n\n#else                              // with loop, compile even for i>1 !\n    \n   for (int i = 0; i < 4; i++)\n //for (int i = min(0,iFrame); i < 4; i++) // variant with no unrolling\n\n   {   if (U[i] > 100.)  U[i] = 0.; }\n#endif\n       \n    O = vec4( U, U );\n    \n// for (int i = 0; i < 4; i++) U[i]++; // left-value indices are indeed 0,1,1,1\n// O = vec4(U.y==3.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}