{
    "Shader": {
        "info": {
            "date": "1672153701",
            "description": "Seen some CG art with infinite \"zooming\" \nThought I experiment up a distance field to support that\nEnded up with this which isn't really what I hoped for especially the infinite \"zooming\". \nFound it interesting enough to share though.",
            "flags": 0,
            "hasliked": 0,
            "id": "cls3RX",
            "likes": 30,
            "name": "Infinite arcs",
            "published": 3,
            "tags": [
                "2d",
                "infinite"
            ],
            "usePreview": 0,
            "username": "mrange",
            "viewed": 454
        },
        "renderpass": [
            {
                "code": "// CC0: Infinite arcs\n//  Seen some CG art with infinite \"zooming\" \n//  Thought I experiment up a distance field to support that\n//  Ended up with this which isn't really what I hoped for especially\n//  the infinite \"zooming\". \n//  Found it interesting enough to share though.\n\n#define TIME        iTime\n#define RESOLUTION  iResolution\n#define PI          3.141592654\n#define TAU         (2.0*PI)\n#define ROT(a)      mat2(cos(a), sin(a), -sin(a), cos(a))\n\n// License: WTFPL, author: sam hocevar, found: https://stackoverflow.com/a/17897228/418488\nconst vec4 hsv2rgb_K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 hsv2rgb(vec3 c) {\n  vec3 p = abs(fract(c.xxx + hsv2rgb_K.xyz) * 6.0 - hsv2rgb_K.www);\n  return c.z * mix(hsv2rgb_K.xxx, clamp(p - hsv2rgb_K.xxx, 0.0, 1.0), c.y);\n}\n// License: WTFPL, author: sam hocevar, found: https://stackoverflow.com/a/17897228/418488\n//  Macro version of above to enable compile-time constants\n#define HSV2RGB(c)  (c.z * mix(hsv2rgb_K.xxx, clamp(abs(fract(c.xxx + hsv2rgb_K.xyz) * 6.0 - hsv2rgb_K.www) - hsv2rgb_K.xxx, 0.0, 1.0), c.y))\n\n// License: Unknown, author: Unknown, found: don't remember\nfloat hash(float co) {\n  return fract(sin(co*12.9898) * 13758.5453);\n}\n\nvec2 sca(float a) {\n  return vec2(sin(a), cos(a)); \n}\n\n// License: MIT, author: Inigo Quilez, found: https://iquilezles.org/www/articles/distfunctions2d/distfunctions2d.htm\nfloat arc(vec2 p, vec2 sc, float ra, float rb) {\n  // sc is the sin/cos of the arc's aperture\n  p.x = abs(p.x);\n  return ((sc.y*p.x>sc.x*p.y) ? length(p-sc*ra) : \n                                  abs(length(p)-ra)) - rb;\n}\n\nvec2 cell(float n) {\n  float n2 = n*n;\n  float pn2 = (n-1.0)*(n-1.0);\n  float m = (n2+pn2)*0.5;\n  float w = (n2-pn2);\n  return vec2(m, 0.5*w);\n}\n\nvec2 df(vec2 p) {\n  float tm = 4.0*TIME;\n  float m = mod(tm, 1.0);\n  float f = floor(tm);\n  const float z = 0.0005;\n  p /= z;\n  float l = length(p);\n\n  float n0 = ceil(sqrt(l));\n  vec2 c0 = cell(n0); \n  \n  float nn = n0 + 1.0;\n  vec2 cn = cell(nn); \n\n  float np = n0 - 1.0;\n  vec2 cp = cell(np); \n\n  vec2 c = mix(c0, cn, m); \n  vec2 cc = mix(cp, c0, m);\n\n  float h0 = hash(n0-f);\n  float hp = hash(np-f);\n\n  float cd0 = abs(l-c.x)-c.y;\n  float cd1 = abs(l-cc.x)-cc.y;\n  const float w = 2.0/3.0;\n  \n  bool t = cd1 < cd0;\n  float h =  t ? hp : h0;\n  float a = TAU*h+(h-0.5)*TIME;\n  p *= ROT(a);\n  float d0 = arc(p, sca(1.0+0.5*PI*fract(8677.0*h0)), c.x, c.y*w);\n  float d1 = arc(p, sca(1.0+0.5*PI*fract(8677.0*hp)), cc.x, cc.y*w);\n  float d = t ? d1 : d0;\n\n  d *= z;\n  return vec2(d, h);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 q = fragCoord/iResolution.xy;\n  vec2 p = -1. + 2. * q;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n  float aa =2.0/RESOLUTION.y;\n  vec2 d2 = df(p);\n  vec3 col = vec3(0.00);\n  vec3 bcol = hsv2rgb(vec3(d2.y, 0.9, 1.0));\n  col = mix(col, bcol, smoothstep(aa, -aa, d2.x));\n  col = sqrt(col);\n  fragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}