{
    "Shader": {
        "info": {
            "date": "1692029805",
            "description": "opposite",
            "flags": 0,
            "hasliked": 0,
            "id": "DljcRV",
            "likes": 15,
            "name": "Distortion of space",
            "published": 3,
            "tags": [
                "raymarching",
                "blackhole",
                "physics",
                "gravity",
                "singularity"
            ],
            "usePreview": 1,
            "username": "01000001",
            "viewed": 350
        },
        "renderpass": [
            {
                "code": "#define SuperSamplingSampleCount 1\n\n\n\nconst float pi = 3.1415926;\nconst float maxDist = 80.;\nconst float horizon = 1.;\nconst float disk = 3.;\nconst float diskT = 0.05;\nvec3 col = vec3(0);\nfloat stepSize;\nconst int maxSteps = 1024;\nconst float focalLength = 9.1;\n\nfloat frame( vec3 p, vec3 b, float e )\n{\n       p = abs(p  )-b;\n  vec3 q = abs(p+e)-e;\n  return min(min(\n      length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n      length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n      length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n}\n\nfloat box( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat df(vec3 p)\n{    \n    if (max(abs(p.x), max(abs(p.y), abs(p.z))) < 6.02){\n        p += 2.;\n        p = mod(p, vec3(4)) - vec3(2);\n        float df = frame(p, vec3(2), 0.05);\n        return df;\n    } else {\n        return box(p, vec3(6));\n    }\n}\n\nconst uint k = 1103515245U;\nvec3 hash( uvec3 x )\n{\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    \n    return vec3(x)*(1.0/float(0xffffffffU));\n}\n//hash by IQ https://www.shadertoy.com/view/XlXcW4\nvec2 ps(uvec3 x){\n    return hash(x).xy * 2. - 1.;\n}\n\n\n\nvoid mainImage( out vec4 O, in vec2 U )\n{\n\n    vec2 ri = iResolution.xy;\n    int i = 0;\n    vec2 muv = iMouse.z > 0.?(2.*iMouse.xy - ri.xy)/ri.xy * vec2(3, 7):vec2(.5, 2.);\n    vec3 dirV;\n    vec3 odir;\n    float sDist = 500.;\n\n    int ssaa = SuperSamplingSampleCount;\n\n    for (int m = 0; m < ssaa; m++){\n\n        vec2 offset = ps(uvec3(iFrame + m, int(U.y) - m, int(U.x)+m))*.5;\n        // SSAA\n        float c = 1./(sqrt(length(offset))+0.3);\n        //Varied contribution of ssaa sample based on distance from centre\n        vec2 uv = (2.*U - ri.xy\n            +offset\n        )/ri.y;\n\n        vec3 camDir = normalize(vec3(sin(muv.xx + vec2(0,11)), -muv.y*0.085));\n        vec3 r = cross(camDir, vec3(0, 0, 1));\n        vec3 u = cross(r, camDir);\n        dirV = normalize(camDir * focalLength + r * uv.x + u * uv.y);\n        odir = dirV;\n\n        float depth = 0.;\n        vec3 camPos = vec3(sin(-muv.xx - vec2(0,11)) * 65., muv.y*5.);\n\n        vec3 shift = vec3(sin(iTime)*4., cos(iTime)*4., sin(iTime * pi) * 0.);\n\n        float g = 0.;\n        vec3 p = camPos + shift;\n\n        for (i = 0; i<maxSteps; i++){\n\n            stepSize = min(df(p - shift), .5); \n            // this .5 is the biggest performance drop. \n            // If you decrease this you get better quality but slower rendering\n            p += stepSize * dirV;\n\n            depth += stepSize;\n            \n            sDist = min(sDist, length(p)*length(p));\n            g = (stepSize / pow(length(p), 2.));\n            dirV = normalize(dirV + p * 0.1*g);\n\n            if (stepSize < 0.01){\n                col +=  c * vec3(2./(depth-56.));\n                i = maxSteps;\n            }\n            \n            if (depth > maxDist)\n            {\n                i = maxSteps;\n            }\n        }\n    }\n    \n    col = col /= float(ssaa);\n    \n    O = vec4(pow(col.x, 1./2.2));//*/\n/*\n\n    O.x *= 8./distort;\n    O.y *= 25./distort - O.x*2.5;\n    O.z *= 1.-1./distort;/*/\n    \n    O *= 0.5 + 0.5 * sin(10./(sDist+(10./pi*.5)) + vec4(0, 33, 11, 0) - 2.);\n    //*/\n}\n\n\n\n//I would add TAA but I'm tired and annoyed at this shader\n\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}