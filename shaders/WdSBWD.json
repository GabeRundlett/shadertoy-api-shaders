{
    "Shader": {
        "info": {
            "date": "1590013839",
            "description": "experimenting with flowers / stars ...",
            "flags": 0,
            "hasliked": 0,
            "id": "WdSBWD",
            "likes": 7,
            "name": "Hypnotic flowers",
            "published": 3,
            "tags": [
                "2d",
                "flower"
            ],
            "usePreview": 0,
            "username": "ManuManu",
            "viewed": 581
        },
        "renderpass": [
            {
                "code": "\t\t\nvec3 palette( float t, vec3 a, vec3 b, vec3 c, vec3 d )\n{\n    return a + b * cos( 2.*3.14159 * ( c * t + d) );\n}\n\nvec3 MyPalette1( float t )\n{\n    return palette( t, vec3(.8, .5, .4), vec3(.2,.4,.2), vec3( .5), vec3( 0., .25, .25));\n}\nvec3 MyPalette2( float t )\n{\n    return palette( t, vec3(.5, .5, 5), vec3(.5, .5, .5), vec3( 1., 0.7,0.4), vec3( 0., .15, .2));\n}\nvec3 MyPalette3( float t )\n{\n    return palette( t, vec3(.5), vec3(.5), vec3( 1.), vec3( 0.3, .2, .2));\n}\nvec3 MyPalette4( float t )\n{\n    return palette( t, vec3(.5), vec3(.5), vec3( 1.,1.,0.5), vec3( 0.8, .9, .3));\n}\nvec3 MyPalette5( float t )\n{\n    return palette( t, vec3(.8, .5, .4), vec3(.2), vec3( .5,.5,0.5), vec3( 0., .9, .3));\n}\n\n// nice palettes from shane :\nvec3 MyPalette6(float t )\n{\n\treturn .8 + .2*cos(6.3*t + vec3(0, 23, 21));\n}\nvec3 MyPalette7(float t )\n{\n\treturn .5 + .4*cos(6.3*t + vec3(2, 1, 0));\n}\nvec3 MyPalette8(float t )\n{\n\treturn .6 + .4*cos(6.*t + vec3(5, 3, 1));\n}\n    // Etc.\n    //vec3 col = .5 + .4*cos(6.3*h21(d.yz) + vec3(2, 1, 0));\n    //vec3 col = .6 + .4*cos(6.*h21(d.yz) + vec3(5, 3, 1));\n\nvec3 Flower( vec2 uv, float paletteShift )\n{\n    vec2 st = vec2( atan(uv.x, uv.y), length(uv ) );\n    uv = vec2( st.x/3.14159 + iTime*.2, st.y);\n\n    float myX = mod (uv.x, .2) -.1;\n    float func = -5.*myX * myX + .2;\n    float val = func - uv.y;\n    \n    val = smoothstep( 0., 0.01, val);\n\n    return val * MyPalette1(uv.y*7. + paletteShift);\n}\n\nvec3 Flower2( vec2 uv, float paletteShift )\n{\n    vec2 st = vec2( atan(uv.x, uv.y), length(uv ) );\n    uv = vec2( st.x/3.14159 + iTime*.2, st.y);\n\n    float myX = mod (uv.x, .2) -.1;\n    float func = -10.*myX * myX + .2;\n    float val = func - uv.y;\n    \n    val = smoothstep( 0., 0.01, val);\n\n    return val * MyPalette3(uv.y*7. + paletteShift);\n}\n\nvec3 flowersField1( vec2 uv)\n{\n    uv = mod( uv, .5 ) - 0.25;\n    vec3 col = vec3(0);\n    \n    float fact = 1.;\n    float paletteShift = 0.;\n    for ( int i = 0; i < 10; i++)\n    {\n        vec3 flowerCol = Flower(uv * fact, paletteShift);\n        if ( length(flowerCol) > 0.)\n            col = flowerCol;\n        fact *= 1.1;\n        paletteShift += 1.5 + iTime*0.1;\n                \n    }\n    return col;\n}\nvec3 flowersField2( vec2 uv)\n{\n    uv = mod( uv, .5 ) - 0.25;\n    vec3 col = vec3(0);\n    \n    float fact = 1.;\n    float paletteShift = 0.;\n    for ( int i = 0; i < 10; i++)\n    {\n        vec3 flowerCol = Flower2(uv * fact, paletteShift);\n        if ( length(flowerCol) > 0.)\n            col = flowerCol;\n        fact *= 1.1;\n        paletteShift += 1.5 + iTime*0.1;\n                \n    }\n    return col;\n}\nmat2 rot( float a )\n{\n    float c = cos(a);\n    float s = sin(a);\n    return mat2( c, s, -s, c);\n}\nvec2 moveUV( vec2 uv, float angle, float zoom, vec2 dep )\n{\n    return rot( angle ) * ( ( uv * zoom) + dep );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv  = (uv - .5)*2.;\n    uv.x  *= iResolution.x / iResolution.y;\n    \n    vec2 realUv = uv;\n\tvec3 col = length(uv*.3) *vec3(0.3,0.3,0.8);\n\n    // general camera move :\n    uv = moveUV( uv, sin(iTime*.2), .28+.13*sin(iTime*.51), vec2(cos(iTime*.001), sin(iTime*.00039)));\n\n    \n    \n    float fact = 1.;\n    const float factInc = 1.3;\n    for( float i = 0.; i < 2.; i+=1.)\n    {\n        vec2 p = moveUV( uv, sin(iTime*.2), fact, vec2(cos(iTime*.011), sin(iTime*.007)));\n    \tvec3 flower1 = flowersField1(p);\n        if (length(flower1) > 0. )\n            col = flower1;\n        p = moveUV( uv, sin(iTime*.2), fact*factInc, vec2(cos(iTime*.001), sin(iTime*.007)));\n\t\tvec3 flower2 = flowersField2(p*fact*factInc);\n        if (length(flower2) > 0. )\n            col = flower2;\n        fact = fact * factInc * factInc;\n        \n    }\n    \n    // Output to screen\n    col*=smoothstep(2.4,1.,length(realUv));\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}