{
    "Shader": {
        "info": {
            "date": "1717482860",
            "description": "a quick and dirty brute force blur that \"works\" you just sample a bigger or smaller square of surrounding pixels and average them all together. It 'works' but doesn't produce good results.\n\n",
            "flags": 0,
            "hasliked": 0,
            "id": "lXVGzw",
            "likes": 0,
            "name": "NotSoGreeeen - Sampler Blur",
            "published": 3,
            "tags": [
                "blur",
                "texture",
                "bad"
            ],
            "usePreview": 0,
            "username": "NotSoGreeeen",
            "viewed": 99
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //controlling variables\n    const int blurStrength = 2; //<-- this one controls everything.\n    const int calcNum = (blurStrength * 2 + 1) * 2;\n    \n    vec3 col = texture(iChannel0, fragCoord / iResolution.xy).xyz;\n    \n    if (blurStrength > 0) {\n        //Set up arrays\n        vec2[calcNum] vecs;\n        vec4[calcNum] texs;\n\n        //Calculate Vector offsets\n        int z = 0;\n        for (int i = 0; i < blurStrength * 2 + 1; i++) {\n            for (int e = 0; e < blurStrength * 2 + 1; e++) {\n                vecs[z] = vec2(float(i - 2), float(e - 2));\n                z++;\n            }\n        }        \n\n        //Calculate Textures\n        for (int i = 0; i < calcNum; i++) {\n            texs[i] = texture(iChannel0, (fragCoord + vecs[i]) / iResolution.xy);\n        }\n        \n        //Get an average of every texture\n        for (int i = 0; i < calcNum; i++) {\n            col += texs[i].xyz;\n        }\n        col /= float(calcNum);\n    }\n    \n    //outPut\n    fragColor = vec4(col, 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}