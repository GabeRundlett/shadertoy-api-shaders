{
    "Shader": {
        "info": {
            "date": "1598311105",
            "description": "Testing Music Input",
            "flags": 0,
            "hasliked": 0,
            "id": "3l2fRh",
            "likes": 6,
            "name": "Simple Music Equalizer",
            "published": 3,
            "tags": [
                "music",
                "equalizer",
                "sfx"
            ],
            "usePreview": 0,
            "username": "Gerard97",
            "viewed": 776
        },
        "renderpass": [
            {
                "code": "vec3 interpool(vec3 p0, vec3 p1, vec3 p2, float t) {\n    t = clamp(t, 0., 1.);\n    float oneMinusT = 1. - t;\n    \n    return\n        oneMinusT * oneMinusT * p0 +\n        2. * oneMinusT * t * p1 +\n        t * t * p2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 px = gl_FragCoord.xy / iResolution.xy;\n    \n    const int size = 32;\n    \n    const float inv = 1. / float(size);\n    \n    float sfx[size];   \n        \n    vec3 colors[size];\n        \n    for (int i = 0; i < size; ++i) {\n        \n        float scale = 0.75;\n        \n        sfx[i] = texelFetch(iChannel0, ivec2(int(float(i)/float(size)*512.),0), 0).x * scale;\n        //sfx[i] = texture(iChannel0, vec2(float(i)*inv, 0)).x * scale;\n                \n        /*colors[i] = vec3(cos(1. - px.x + iTime) * 0.5 +0.5, \n                         1. - cos(iTime)*sin(iTime)* 0.5 +0.5, \n                         sin(1. - px.x + iTime) * 0.5 +0.5);*/\n                \n        colors[i] = interpool(vec3(0,0,1), vec3(0.2,1,0.2), vec3(1,0.2,0), sfx[i]/0.75);\n    }\n    \n    \n    \n\tint index = int(px.x / inv);\n               \n    float height = sfx[index];\n    \n    if (px.y > height || mod(px.x, inv) < 0.008 || mod(px.y, inv) < 0.008) {\n    \tfragColor = vec4(vec3(0,0,0), 1);    \n    }\n    else {\n        //Use % to hide first and last bar\n        fragColor = vec4(colors[index], 1) * float((bool(index % (size-1))));\n    }\n    \n    if (abs(texelFetch(iChannel0, ivec2(int(px.x*512.),1), 0).x * 0.25 - (px.y - 0.75)) < 0.01) {\n        fragColor.xyz += vec3(1);   \n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 34,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}