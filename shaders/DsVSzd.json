{
    "Shader": {
        "info": {
            "date": "1681475125",
            "description": "A analytical way to plot a curve instead of subdividing the plot. Uses derivatives of the function",
            "flags": 0,
            "hasliked": 0,
            "id": "DsVSzd",
            "likes": 1,
            "name": "Analytical plotting",
            "published": 3,
            "tags": [
                "graph",
                "plot"
            ],
            "usePreview": 0,
            "username": "robobo1221",
            "viewed": 195
        },
        "renderpass": [
            {
                "code": "const float eps = 0.001;\n\nconst float a = 0.0025;\nfloat s = 7.0;\n\nfloat smin(float a, float b, float k) {\n  float res = exp(-k * a) + exp(-k * b);\n  return -log(res) / k;\n}\n\nfloat f(float x) {\n    return sin(2.0 * x);\n}\n\nfloat df(float x) {\n    float f1 = f(x + eps);\n    float f2 = f(x - eps);\n    return (f1 - f2) / (2.0 * eps);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.x;\n    \n    float x = (uv.x - 0.5) * s;\n    float y = (uv.y - 0.25) * s;\n    \n    float fx = f(x);\n    float dx = df(x);\n    \n    // Simplified normal direction grad = abs(dot(normalize(vec2(dx, dy)), vec2(0, 1)))\n    // = grad = abs(dot(vec2(dx, dy) / sqrt(dx * dx + dy * dy), vec2(0.0, 1.0)))\n    // = grad = abs(dy / sqrt(dx * dx + dy * dy))\n    // dy in this case is always 1.0 so:\n    // grad = 1.0 / sqrt(dx * dx + 1.0)\n    float t = sqrt(dx * dx + 1.0);\n    float thickness = a * s * t;\n\n    vec3 color = vec3(smoothstep(thickness, thickness * 0.5, abs(y - fx)));\n    \n    color = mix(color, vec3(1.0, 0.0, 0.0), smoothstep(a * s, a * s * 0.5, abs(y)));\n    color = mix(color, vec3(1.0, 0.0, 0.0), smoothstep(a * s, a * s * 0.5, abs(x)));\n\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}