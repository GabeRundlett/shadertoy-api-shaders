{
    "Shader": {
        "info": {
            "date": "1614258933",
            "description": "Agnes Hailstone's caribou hunt - Result of an improvised live coding session on Twitch\nLIVE SHADER CODING, SHADER SHOWDOWN STYLE, EVERY TUESDAYS 20:00 Uk time:\nhttps://www.twitch.tv/evvvvil_",
            "flags": 0,
            "hasliked": 0,
            "id": "3tKfWh",
            "likes": 19,
            "name": "Agnes Hailstone's caribou hunt",
            "published": 3,
            "tags": [
                "demoscene",
                "glow",
                "ghost",
                "life",
                "monster",
                "god",
                "zero",
                "horror",
                "spirit",
                "ghoul",
                "deity",
                "goddess",
                "below",
                "witch"
            ],
            "usePreview": 1,
            "username": "evvvvil",
            "viewed": 837
        },
        "renderpass": [
            {
                "code": "// Agnes Hailstone's caribou hunt - Result of an improvised live coding session on Twitch\n// LIVE SHADER CODING, SHADER SHOWDOWN STYLE, EVERY TUESDAYS 20:00 Uk time: \n// https://www.twitch.tv/evvvvil_\n\n// \"I just gave this caribou its last drink.\" - Agnes Hailstone \n\n//EDIT 27-02-21: LINE 26: Found a nifty way to drastically reduce artifact as it swirls by reusing the swirl value to contrl the definition of the distance field, does a cool \"warpy motion blur\"\n\nvec2 z,v,e=vec2(.001,-.001);float t,tt,b,ct,g=0.,gg=0.,tnoi;vec3 bp,pp,po,no,ld,al,cp,op;\nfloat bo(vec3 p,vec3 r){p=abs(p)-r;return max(max(p.x,p.y),p.z);}\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));}\nfloat smin(float a,float b,float k){float h=max(k-abs(a-b),0.);return min(a,b)-h*h*.25/k;}\nvec4 texNoise(vec2 uv,sampler2D tex ){ float f = 0.; f+=texture(tex, uv*.125).r*.5; f+=texture(tex,uv*.25).r*.25;\n                       f+=texture(tex,uv*.5).r*.125; f+=texture(tex,uv*1.).r*.125; f=pow(f,1.2);return vec4(f*.45+.05);}\nvec2 mp( vec3 p, float ga )\n{\n  op=p;p.xy+=v;  \n  p.yz*=r2(-1.2+sin(op.z*.02-tt)*0.5);  \n  float bro=smoothstep(0.,1.,(clamp(cos(p.y*.04+tt*0.5+1.),-.33,.33)+.33)*1.51);\n  p.xz*=r2(ct*.75+bro*6.28);\n  tnoi=texNoise(p.xy*.12+3.,iChannel0).r;  \n  float sinner =sin(p.y*.5+1.0),xd=sin(p.x*(10.-sinner*5.))*.15,zd=pow((cos(p.y*.5+tt))*1.3,2.); \n  cp=p+tnoi; cp.xz+=xd; cp.z-=zd;  \n  float head=abs(length(cp-vec3(xd,6,0))-2.)-.1;//HOOD\n  head=0.6*max(head,-cp.z);    \n  float art=clamp(sin(bro*-3.14)*.5+.5,0.1,0.5);\n  float coat=bo(cp,vec3(2.+sinner*1.75+sin(p.y*10.)*0.03,6,0.04 ));/////CLOAK\n  coat=max(coat,-(length(cp.xz)+sin(p.y*.5+0.75)-tnoi*2.));  \n  pp=p-vec3(0,2,0);pp.xy=abs(pp.xy)-vec2(1.+sin(p.y+p.x*.2-.1)*1.5,1);\n  pp.x=abs(pp.x)-1.;\n  coat=art*max(coat,-(length(pp.yx)+.2-tnoi*3.8));\n  vec2 h,t=vec2(coat,5);  \n  t.x=smin(t.x,head,.25);  \n  vec3 ep=p-vec3(0,6.4,0); ////EYESSSSSS   \n  ep.xz=vec2(abs(ep.x)-0.5,ep.z-zd+.1);\n  ep.xy*=r2(.3);\n  float eyes=0.6*length(ep)-cos(clamp(ep.y*15.,-5.,5.))*.2;  \n  t.x=min(t.x,eyes);   \n  pp=p-vec3(0,0,2.7);//SPINES\n  pp.x=abs(pp.x)-.5+(p.y-9.)*.3; pp.xz-=vec2(xd*.5,zd); \n  pp.yz*=r2(-0.3);\n  float spines=length(pp.xz)-0.1+sin(p.y*.2-1.8)*.5;\n  spines=max(spines,abs(p.y-1.)-9.);\n  t.x=smin(art*spines,t.x,.5);     \n  pp=p-vec3(0,5.5,zd+1.);//FACE\n  cp=pp;\n  h=vec2(length(pp)-1.15-sin(p.y+.3),3);   \n  pp.y-=1.5; //HEADLINES\n  pp.xy=abs(pp.xy);\n  pp.xy*=r2(.3);\n  pp.z-=pow(abs(pp.x*.2+sin(p.x*.5+tt)*.5),2.)*2.0;  \n  float headline=(art-.04)*(length(pp.yz)-.4+abs(p.x*.04));\n  h.x=min(h.x,headline);\n  t=t.x<h.x?t:h;\n  b=texNoise((op.xz+vec2(0,-tt*5.))*0.03,iChannel0).r; //TERRAIN\n  op.y=abs(op.y)-9.;\n  h=vec2(op.y+5.+b*5.+cos(op.x*.1)*5.,6);\n  pp=op;pp.x=abs(pp.x)-15.;\n  pp.z=mod(pp.z-tt*5.,20.)-10.;  \n  h.x=smin(0.9*h.x,length(pp.xz)-2.0+b+op.y*.1,10.);\n  t=t.x<h.x?t:h;  \n  if(ga>0.){\n    p.x=mod(abs(p.x)-tt*2.,2.)-1.;\n    headline=max(headline,abs(p.x));\n    g+=0.1/(0.1+eyes*eyes*120.);\n    g+=0.1/(0.1+headline*headline*120.);\n    op.xy*=r2(sin(op.z*.03+tt*.5));\n    op.z=mod(op.z-tt*10.,10.)-5.;\n    float part=length(abs(op)-5.);\n    gg+=0.1/(0.1+part*part*120.);\n    t.x=min(t.x,part);\n  }  \n\treturn t;\n}\nvec2 tr( vec3 ro,vec3 rd )\n{\n  vec2 h,t=vec2(.1);\n  for(int i=0;i<128;i++){\n    h=mp(ro+rd*t.x,1.);\n    if(t.x<.0001||t.x>40.) break;\n    t.x+=h.x;t.y=h.y;\n  }\n  if(t.x>40.) t.y=0.;\n\treturn t;\n}\n#define a(d) clamp(mp(po+no*d,0.).x/d,0.,1.)\n#define s(d) smoothstep(0.,1.,mp(po+ld*d,0.).x/d)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv=(fragCoord.xy/iResolution.xy-0.5)/vec2(iResolution.y/iResolution.x,1);\n  tt=mod(iTime,62.82)+12.;\n  ct=cos(tt); v=ct*vec2(3,2)-vec2(0,9);\n  bp=vec3(v,0);  b=sin(tt*.4);\n  vec3 ro=mix(vec3(cos(tt*.4)*5.,-2,-10),vec3(sin(tt*.4)*7.,-4.0,-cos(tt*.4)*10.),ceil(b)),\n  cw=normalize(-bp-ro),cu=normalize(cross(cw,vec3(0,1,0))),cv=normalize(cross(cu,cw)),\n  rd=mat3(cu,cv,cw)*normalize(vec3(uv,.5+b*.5*ceil(b))),co,fo;\n  co=fo=vec3(.14,.11,.12)-length(uv)*.15;\n  ld=normalize(vec3(.2,-.2,-.5));\n  z=tr(ro,rd);t=z.x;\n  if(z.y>0.){\n    po=ro+rd*t;\n    no=normalize(e.xyy*mp(po+e.xyy,0.).x+e.yyx*mp(po+e.yyx,0.).x+e.yxy*mp(po+e.yxy,0.).x+e.xxx*mp(po+e.xxx,0.).x);\n    al=mix(vec3(0.4,0.5,0.6),vec3(0),min(1.,tnoi*3.));    \n    if(z.y<5.)al=mix(vec3(1.-ceil(sin(cp.y*3.5-1.))),vec3(0),ceil(min(1.,abs(abs(abs(cp.x*7.)-.9)-0.5)-.15)));\n    if(z.y>5.)al=vec3(1,.2,.5)*b;\n    float dif=max(0.,dot(no,ld)),\n    fr=pow(1.+dot(no,rd),4.);\n    co=mix(al*(a(.5)+.5)*(dif+s(.1)+s(.5)),fo,min(fr,1.));\n    co=mix(fo,co,exp(-.00007*t*t*t));\n  }  \n  fragColor = vec4(pow(co+g*.2*vec3(.7,.2,.1)+gg*.2,vec3(.65)),1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 46,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}