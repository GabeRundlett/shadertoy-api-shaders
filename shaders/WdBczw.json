{
    "Shader": {
        "info": {
            "date": "1586270649",
            "description": "weird sound from a few fbms and sine waves. anyone knows why the sound stops after 160~ ?",
            "flags": 8,
            "hasliked": 0,
            "id": "WdBczw",
            "likes": 4,
            "name": "Sound of blood",
            "published": 3,
            "tags": [
                "sound"
            ],
            "usePreview": 0,
            "username": "hazenn",
            "viewed": 392
        },
        "renderpass": [
            {
                "code": "\nvec2 sound( float time )\n{\n    return 0.1*vec2(sin(time)*(\n                     sin(440.*time)  + \n                     sin(261.63*time)+\n                     sin(622.25*time)+\n                     noise(vec2(sin(time),1000.)*time,time)\n                    ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.yy;\n    //vec2 pt = fract(abs(uv)*2.)-0.5;\n    vec2 pt = uv;\n    float time = iTime;\n    vec2 a = (sound(time)+0.1*sound(2.*time+1.)+0.1*sound(4.*time+1.))/2.;\n    vec2 b = vec2(0);\n    b = noise(vec2(1000.,cos(time))*time,time);\n    float d = distance(pt,0.5*a*b)-0.1*length(noise(uv,iTime));\n    \n    vec3 col = vec3(0);\n    col += smoothstep(0.2,0.25,sin(3.*d+iTime+length(a*b)));\n    col.r += 0.2;\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\n\n\nvec2 sound( float time )\n{\n    return 0.1*vec2(sin(time)*(\n                     sin(440.*time)  + \n                     sin(261.63*time)+\n                     sin(622.25*time)+\n                     noise(vec2(sin(time),1000.)*time,time)\n                    ));\n}\n\nvec2 mainSound( in int samp, float time )\n{\n    vec2 a = (sound(time)+0.1*sound(2.*time+1.)+0.1*sound(4.*time+1.))/2.;\n    vec2 b = vec2(0);\n    b = noise(vec2(1000.,cos(time))*time,time);\n    return a*b;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            },
            {
                "code": "\nvec2 random(vec2 pt , float t){\n    return vec2(\n        fract(456512.6161616*cos(dot(vec3(pt,t) , vec3(150.9898944,30.54614646,151.054608))) ),\n    \tfract(566516.6161616*cos(dot(vec3(pt,t) , vec3(135.54568544,-12540.50540,642.5419840))) ));\n}\n\n\nvec2 noise(vec2 st, float t){\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\tfloat it = floor(t);\n    float ft = fract(t);\n    // Four corners in 2D of a tile\n    vec2 a = random(i,it);\n    vec2 b = random(i + vec2(1.0, 0.0),it);\n    vec2 c = random(i + vec2(0.0, 1.0),it);\n    vec2 d = random(i + vec2(1.0, 1.0),it);\n\tvec2 as = random(i,it+1.);\n    vec2 bs = random(i + vec2(1.0, 0.0),it+1.);\n    vec2 cs = random(i + vec2(0.0, 1.0),it+1.);\n    vec2 ds = random(i + vec2(1.0, 1.0),it+1.);\n    vec2 u = f*f*(3.0-2.0*f);\n\t//float ut = ft*ft*(3.0-2.0*ft);\n\tfloat ut = ft;\n\treturn mix(mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y\n        ,\n        mix(as, bs, u.x) +\n            (cs - as)* u.y * (1.0 - u.x) +\n            (ds - bs) * u.x * u.y\n        ,ut);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}