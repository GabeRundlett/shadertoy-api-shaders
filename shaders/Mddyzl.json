{
    "Shader": {
        "info": {
            "date": "1519873437",
            "description": "2D sky",
            "flags": 0,
            "hasliked": 0,
            "id": "Mddyzl",
            "likes": 0,
            "name": "blue Sky",
            "published": 3,
            "tags": [
                "2d",
                "sun",
                "clouds",
                "sky",
                "blue"
            ],
            "usePreview": 0,
            "username": "SourceW",
            "viewed": 630
        },
        "renderpass": [
            {
                "code": "#define time iTime\n\n\nvec2 hash( vec2 p ) // replace this by something better\n{\n\tp = vec2( dot(p,vec2(127.1,311.7)),\n\t\t\t  dot(p,vec2(269.5,183.3)) );\n\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise( in vec2 p )\n{\n    const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\n\tvec2 i = floor( p + (p.x+p.y)*K1 );\n\t\n    vec2 a = p - i + (i.x+i.y)*K2;\n    vec2 o = step(a.yx,a.xy);    \n    vec2 b = a - o + K2;\n\tvec2 c = a - 1.0 + 2.0*K2;\n\n    vec3 h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n\n\tvec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n\n    return dot( n, vec3(70.0) );\n\t\n}\n\n\n\nvec4 calc_clouds( vec2 p) {\n\n\nvec2 uv = p*5.0;\n\tuv.x += iTime * 1.0;\n\n\tuv.y *= 0.75;\n\tfloat n  = noise(uv * vec2(0.5, 1.0)) * 0.5;\n\t\tuv += vec2(n * 0.5, 0.3) * 1.2; uv *= 2.50;\n\t\t  n += noise(uv) * 0.25;\n\t\tuv += vec2(n * 1.2, 0.2) * -1.2+ vec2(iTime * 0.01, 0.2); uv *= 3.01;\n\t\t  n += noise(uv) * 0.105;\n\t\tuv += vec2(n * 0.4, 0.1) *1.0 + vec2(iTime * 0.03, 0.1); uv *= 3.02;\n\t\t  n += noise(uv) * 0.06;\n\tn = smoothstep(0.0, 0.8, n);\n\n\treturn vec4(n);\n}\n\nfloat sun(float x,float y,float t){\n   float xx  =x + sin(t);\n   float yy = y + cos(t);\n   return 1.0/sqrt(xx*xx+yy*yy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n   vec2 p =(fragCoord.xy/iResolution.x)*2.0-vec2(1.0,iResolution.y/iResolution.x);\n\n   float a = sun(p.x,p.y,time);\n    \n   vec4 sun = vec4(2.0,2.0,0.2,1.0)*(a/10.0);\n   \n   vec4 sky = vec4(0.23,0.42,1.0,1.0);\n   \n   vec2 p2 = fragCoord.xy / iResolution.xy;\n   vec4 c = calc_clouds(p);\n\n   fragColor = sky+c;mix(sky,c,c.a);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}