{
    "Shader": {
        "info": {
            "date": "1493831067",
            "description": "Playing with short raymarching ideas",
            "flags": 32,
            "hasliked": 0,
            "id": "XsjyWK",
            "likes": 12,
            "name": "Noodle State Of Mind",
            "published": 3,
            "tags": [
                "raymarch"
            ],
            "usePreview": 0,
            "username": "lherm",
            "viewed": 667
        },
        "renderpass": [
            {
                "code": "// Based on a LOT of code from Connor Bell\n\n// From netgrind\nvec4 hue(vec4 color, float shift) {\n\n    const vec4  kRGBToYPrime = vec4 (0.299, 0.587, 0.114, 0.0);\n    const vec4  kRGBToI     = vec4 (0.596, -0.275, -0.321, 0.0);\n    const vec4  kRGBToQ     = vec4 (0.212, -0.523, 0.311, 0.0);\n\n    const vec4  kYIQToR   = vec4 (1.0, 0.956, 0.621, 0.0);\n    const vec4  kYIQToG   = vec4 (1.0, -0.272, -0.647, 0.0);\n    const vec4  kYIQToB   = vec4 (1.0, -1.107, 1.704, 0.0);\n\n    // Convert to YIQ\n    float   YPrime  = dot (color, kRGBToYPrime);\n    float   I      = dot (color, kRGBToI);\n    float   Q      = dot (color, kRGBToQ);\n\n    // Calculate the hue and chroma\n    float   hue     = atan (Q, I);\n    float   chroma  = sqrt (I * I + Q * Q);\n\n    // Make the user's adjustments\n    hue += shift;\n\n    // Convert back to YIQ\n    Q = chroma * sin (hue);\n    I = chroma * cos (hue);\n\n    // Convert back to RGB\n    vec4    yIQ   = vec4 (YPrime, I, Q, 0.0);\n    color.r = dot (yIQ, kYIQToR);\n    color.g = dot (yIQ, kYIQToG);\n    color.b = dot (yIQ, kYIQToB);\n\n    return color;\n}\n\nvoid mainImage( out vec4 f, in vec2 g )\n{\n    vec2 R=iResolution.xy, u = (g/R);\n    vec4 tex = texture(iChannel0, u), col=tex, tmp;\n    for (int i = 0; i < 8; i++)\n    {\n        tmp = texture(iChannel0, u + .09*sin(float(i) + iTime));\n        tmp.g = 0.;\n        col += hue(tmp*.5, iTime + tmp.r);\n    }\n    f = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R(p, a) {p = p * cos(a) + sin(a) * vec2(p.y, -p.x);}\nvoid mainImage( out vec4 O, in vec2 g )\n{\n    O-=O;\n    vec2 R = iResolution.xy;\n\tvec4 p = vec4((g+g-R)/R.y, 0, 1), d=p;\n    float x=1., i=x, T=iTime;\n    R(p.xy, T);\n    p.y -= T;\n    for (;i > 0. && x > 1e-4; i-=.02)\n        x = length(cos(p.xx*.5 - T)*(.5 * sin(T)) - sin(vec2(p.y, p.w) - T)*.5 - length(cos(p.xw + T))*.05)-.05,\n        O += i*i - O,\n        p -= d*x;\n}",
                "description": "",
                "inputs": [],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}