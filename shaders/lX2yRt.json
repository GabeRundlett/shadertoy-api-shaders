{
    "Shader": {
        "info": {
            "date": "1727610419",
            "description": "source  https://www.shadertoy.com/view/ssXyz4 https://www.shadertoy.com/view/stsXDl",
            "flags": 0,
            "hasliked": 0,
            "id": "lX2yRt",
            "likes": 2,
            "name": "circle tower",
            "published": 3,
            "tags": [
                "fractal",
                "tower",
                "circe"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 56
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\n#define X(p) p *= r(round(atan(p.x, p.y) * 4.) / 4.)\n#define r(a) mat2(cos(a + asin(vec4(0,1,-1,0))))\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    vec4 O2 = O;\n    \n    vec3 p2,q2,r2=iResolution,c2=vec3(0),\n    d2=normalize(vec3((C-.5*r2.xy)/r2.y,1));\n    \n    float i=0.,s,e,g2=0.,t2=iTime;\n\tfor(;i++<90.;){\n    X(p2.yx);\n         \n        p2=g2*d2;\n           \n        p2.z-=mix(.9,9.,step(0.,sin(t2*.3)));\n        p2=R(p2,normalize(cos(t2*.5+vec3(1,8,3))),clamp(sin(t2*.3)*3.,-5.,.5));\n        \n        p2=abs(p2);\n          X(p2.xy);\n          \n        q2=p2*2.5;\n        s=3.;\n        p2.xy*=mat2(2.*cos(iTime*1.0),2.*sin(iTime*1.0),2.*-sin(iTime*1.0),2.*cos(iTime*1.0) );\n        for(int i=0;i++<8;)\n        \n            p2=1.0-abs(abs(p2-2.)-1.),\n            \n            s*=e=-13.*min(.3*max(1./dot(p2,p2),.8),1.),\n            p2=p2*e+q2;\n        g2+=e=length(p2)/s-.003;\n        c2+=mix(vec3(1),H(log(s)*.2+t2*.6),.6)*.01/exp(i*i*e);  \n    }\n    O2=vec4(c2,1);\n    \n    \n     float n_scl_min = min(iResolution.x, iResolution.y);\n    vec2 uv = (C-iResolution.xy*.5)/n_scl_min;\n\n    float n_its = 33.;\n    float n_tau = radians(360.);\n    float n_min = 1.;\n    vec3 o_col = vec3(0.);\n    \n    uv*= 2.;\n    for(float n_it = 0.; n_it < n_its; n_it+=1.){\n        float n_it_nor = n_it / n_its;\n        float n_amp = sin(iTime+n_tau*n_it_nor*3.)*0.2+0.5;\n        vec2 o = vec2(\n            sin(n_tau*n_it_nor), \n            cos(n_tau*n_it_nor)\n        )*n_amp;\n        \n        \n        float n = length(uv-o);\n        float n_radius = (sin(iTime+n_it_nor*n_tau)*.5+.5)*0.2;\n        n_radius = 0.12;\n        n = abs(n-n_radius);\n        if(n < n_min){\n            n_min = n;\n        }\n        float nt = iTime*0.5;\n        vec3 oc = vec3(\n            sin((n_it_nor+1./3.+nt)*n_tau)*2.,\n            sin((n_it_nor+2./3.+nt)*n_tau)*2.,\n            sin((n_it_nor+3./3.+nt)*n_tau)*2.\n        );\n        oc = clamp(oc, 0., 1.);\n        float b = (sin(n_it_nor*n_tau*3.+iTime*5.)*.5+.5)*0.02;//0.006; \n        float n2 = b*(1./n-b);\n        o_col += vec3(\n            oc*n2\n        );\n        \n    }\n    vec3 p,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<70.;\n        O.xyz+=mix(vec3(0.1,1.5,4.),H(g*.1),.8)*1./e/8e3\n    )\n    {\n        p=g*d;\n          X(p.xy);\n          \n        a=30.;\n        p=mod(p-a,a*2.)-a;\n        s=2.;\n        for(int i=0;i++<8;){\n            p=.3-abs(p);\n             \n            p.x<p.z?p=p.zyx:p;\n            p.z<p.y?p=p.xzy:p;\n                p.x<p.z?p=p.zyx:p;\n            s*=e=1.7+sin(iTime*.01)*.1;\n            p=abs(p)*e-\n                vec3(\n                    5.+sin(iTime*0.+.5*sin(iTime*.03))*3.,\n                    120,\n                    8.+cos(iTime*.5)*5.\n                 )*O2.xyz;\n         }\n         g+=e=length(p.yzzx)/s;\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}