{
    "Shader": {
        "info": {
            "date": "1590277274",
            "description": "mesh",
            "flags": 0,
            "hasliked": 0,
            "id": "3tlGzS",
            "likes": 0,
            "name": "mesh000",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "yy2901",
            "viewed": 206
        },
        "renderpass": [
            {
                "code": "vec2 random2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.xy;\n    \n    st-=0.5;\n    st.x*=iResolution.x/iResolution.y;\n    st=(1.0-sin(iTime)*length(st))*st;\n    vec2 uv = st+0.2*vec2(noise(st+iTime),noise(st.yx+iTime));\n\n    // Time varying pixel color\n    vec3 col; \n    col.r = (1.0-smoothstep(length( mod((uv.y+iTime*0.5)*40.,10.0)-5.0)+0.6,0.2,1.0));\n    col.r += (1.0-smoothstep(length( mod((1.7*(uv.x+iTime*0.1)+uv.y)*25.,10.0)-5.0)+0.6,0.5,1.0));\n    col.r += (1.0-smoothstep(length( mod((-1.7*(uv.x-iTime*0.1)+uv.y)*25.,10.0)-5.0)+0.6,0.5,1.0));\n    uv.x+=0.01;\n    col.g = 0.9*(1.0-smoothstep(length( mod((uv.y+iTime*0.5)*40.,10.0)-5.0)+0.6,0.2,1.0));\n    col.g += 0.9*(1.0-smoothstep(length( mod((1.7*(uv.x+iTime*0.1)+uv.y)*25.,10.0)-5.0)+0.6,0.5,1.0));\n    col.g += 0.9*(1.0-smoothstep(length( mod((-1.7*(uv.x-iTime*0.1)+uv.y)*25.,10.0)-5.0)+0.6,0.5,1.0));\n    uv.x-=0.01;\n    uv.y+=0.01;\n    col.b = 0.9*(1.0-smoothstep(length( mod((uv.y+iTime*0.5)*40.,10.0)-5.0)+0.6,0.2,1.0));\n    col.b += 0.9*(1.0-smoothstep(length( mod((1.7*(uv.x+iTime*0.1)+uv.y)*25.,10.0)-5.0)+0.6,0.5,1.0));\n    col.b += 0.9*(1.0-smoothstep(length( mod((-1.7*(uv.x-iTime*0.1)+uv.y)*25.,10.0)-5.0)+0.6,0.5,1.0));\n    \n    uv = st+0.1*vec2(noise(2.0*st-iTime),noise(2.0*st.yx-iTime));\n    col.r += 0.5*(1.0-smoothstep(length( mod((uv.y-iTime*0.1)*120.,10.0)-5.0)+0.6,0.2,1.0));\n    col.r += 0.5*(1.0-smoothstep(length( mod((1.7*(uv.x-iTime*0.1)+uv.y)*80.,10.0)-5.0)+0.6,0.5,1.0));\n    col.r += 0.5*(1.0-smoothstep(length( mod((-1.7*(uv.x+iTime*0.1)+uv.y)*80.,10.0)-5.0)+0.6,0.5,1.0));\n    //col = vec3(1.0-smoothstep(col.r,0.5,0.6));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}