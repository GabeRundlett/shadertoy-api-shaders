{
    "Shader": {
        "info": {
            "date": "1635083418",
            "description": "Folds are modeled as circle sections of unit length curved to accommodate the target linear length.\nSee [url]https://www.desmos.com/calculator/umrflmd6dm[/url]\n\nMouse controls camera.",
            "flags": 0,
            "hasliked": 0,
            "id": "NdyXRt",
            "likes": 14,
            "name": "drapes 2",
            "published": 3,
            "tags": [
                "raymarching",
                "short",
                "folds",
                "drapes"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 353
        },
        "renderpass": [
            {
                "code": "#define rot(a)   mat2(cos(a+vec4(0,11,33,0)))                          // rotation\n#define hue(v)  ( .6 + .6 * cos( 6.3*(v)  + vec4(0,23,21,0)  ) )\n\nvoid mainImage(out vec4 O, vec2 U) \n{\n    float t=9.,d, l,A,r,s,u,v;                           \n    vec3  R = iResolution,\n          D = normalize(vec3((U+U-R.xy)/R.y, -2.)),                    // ray direction\n          p = vec3(0,-2,22), q,a,                                      // marching point along ray \n          M = iMouse.z > 0. ? iMouse.xyz/R -.5: vec3(10,12,0)/1e2*cos(.3*iTime+vec3(0,11,0))+vec3(0,.12,0); \n\n    for ( O=vec4(1); O.x > 0. && t > .005; O-=.005 )          \n        q = p,\n        q.yz *= rot(.5-6.3*M.y),                                       // rotations\n        q.xz *= rot(-6.3*M.x), \n        a = abs(q), \n        v = .6 +.4*q.y/10.,                                            // normalized height\n        l = mix(1., v, .5+.5*sin(iTime) ) -1e-3,     // drape extension: 1 = no folds,  0.2 = max folds\n        u = floor(q.x/l),\n        A = 1.1*acos(2.*l-1.) +2.*acos(l), r = 1./A, // folds angle & radius, see https://www.desmos.com/calculator/umrflmd6dm\n        q.x = mod( q.x+l*float(q.z<0.) , 2.*l ) -l/2., \n        q.xz -= r * vec2( sin(A/2.),-sign(q.z)*cos(A/2.) ), \n        t = abs(length(q.xz) - r) -.01,\n        t = max(t, max(a.x-10.*l,a.y-10.) ) ,\n\n        p += .25*t*D;                                                  // step forward = dist to obj\n\n    O *= .5+.5*texture(iChannel0,vec2(.5+.05*( u + fract(atan(q.x,abs(q.z))/A) ) , v )); // material\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}