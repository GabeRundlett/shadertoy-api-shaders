{
    "Shader": {
        "info": {
            "date": "1704201575",
            "description": "A very simple nightsky with flickering boxy stars.",
            "flags": 0,
            "hasliked": 0,
            "id": "Xc2Gzw",
            "likes": 7,
            "name": "boxy nightsky",
            "published": 3,
            "tags": [
                "star",
                "box",
                "nightsky"
            ],
            "usePreview": 0,
            "username": "Spooked_bones",
            "viewed": 160
        },
        "renderpass": [
            {
                "code": "float Hash21(vec2 p) { // random number generator\n    p = fract(p*vec2(123.34, 456.21));//fract is between 0 en 1\n    p += dot(p, p + 45.32);\n    return fract(p.x * p.y);\n}\n\nvec3 square(vec2 uv, vec2 offset, float size, vec3 color_input, float random_time) {\n    float x = uv.x - offset.x;\n    float y = uv.y - offset.y;\n    float d = size -max(abs(x), abs(y));\n    \n    float color_value = 0.5*(1.0 + sin(iTime + random_time*69.0));\n    vec3 sq_color = vec3(color_value, color_value, color_value);\n    \n    //change the color of stars manually\n    //sq_color = vec3(0.7, 0.7, 1.0);\n    \n    if (d > 0.0) {\n        color_input += sq_color;\n    }\n    \n    return color_input;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    \n    //zoom out\n    uv *= 50.0;\n    \n    vec3 col = vec3(0.0, 0.0, 0.0);\n    \n    vec2 grid_uv = fract(uv) - 0.5;\n    vec2 grid_id = floor(uv);\n    \n    //Let stars come in other squares\n    for (int y = -1; y < 1; y++) {\n        for (int x = -1; x < 1; x++) {\n            vec2 offs = vec2(x, y);\n        \n            float random_1 = Hash21(grid_id + offs); // between 0.0 and 1.0\n            float random_2 = fract(random_1 * 38.0);\n            float random_3 = fract(random_2 * 69.0);\n            vec2 offset = vec2(0.4*(-1.0 + 2.0*random_1), 0.4*(-1.0 + 2.0*random_2)) + offs;\n            \n            float base_size = 0.05;\n            \n            float size = random_3*base_size + 0.03;\n            \n            col += square(grid_uv, offset, size, col, random_3);\n        }\n    }\n    \n    //this causes a colorgradient from bottom to top\n    vec3 back_color = vec3(0.25*(1.0 - uv.y*0.05)*0.25, 0.0, 0.33*(1.0 - uv.y*0.05)*0.4);\n    \n    //uncomment this for the background to change color overtime\n    //back_color *= 0.5*(1.0 + sin(iTime*0.8)); \n    col += back_color;\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}