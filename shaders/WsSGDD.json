{
    "Shader": {
        "info": {
            "date": "1568871772",
            "description": "old shader might as well post.",
            "flags": 8,
            "hasliked": 0,
            "id": "WsSGDD",
            "likes": 9,
            "name": "Jelly Jammin",
            "published": 3,
            "tags": [
                "2d",
                "sound",
                "gpusound"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 368
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \n    \n    float b = clamp(mod(iTime, 1.0), 0.0, 0.6);\n    \n    if(fragCoord.x < iResolution.x / 1.5 && fragCoord.x > iResolution.x / 2.5\n      && fragCoord.y < iResolution.y / 1.5 && fragCoord.y > iResolution.y / 2.5)\n    \tfragColor = vec4(smoothstep(1.0, 0.0, b));\n    else\n        fragColor = vec4(0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float pi2 = 3.14159 * 2.0;\n\nfloat sW(float t, float hz)\n{\n \treturn sin(t*pi2*hz);   \n}\nfloat sW2(float t, float hz){\n \treturn (sin(t*pi2*hz + sin(t*pi2*hz*1.01)) + cos(t*pi2*hz*3.0)\n           + cos(t*pi2*hz*2.0)) / 3.0;   \n}\n\nfloat nse(float x){\n    return fract(sin(x * 237.234234) * 982734.1235);\n}\n\nvec2 Distort(float d, vec2 s){\n \treturn clamp(d * s, vec2(-1.0), vec2(1.0));   \n}\n\n\n\n\n\n\n\nvec2 snare(float t)\n{\n    float beat = mod(t, 1.0);\n    float dec = exp(-24.0*max((sqrt(beat*2.0) / 2.0)-0.12, 0.0));\n    vec2 snr = Distort(1.3,vec2(nse(t), nse(t + 0.1))) * dec;\n    \n    return snr;\n}\nvec2 hat(float t)\n{\n    float beat = mod(t, 0.25);\n    float dec = exp(-35.0*max((sqrt(beat*0.5) / 0.5)-0.14, 0.0));\n    vec2 hat = Distort(0.4,vec2(nse(t), nse(t + 0.21))) * dec;\n    \n    return hat;\n}\nvec2 tssss(float t)\n{\n    float beat = mod(t, 8.0);\n    float beat2 = mod(t, 0.5);\n    \n    float dec = exp(-3.0*max((sqrt(beat+beat2*0.5) / 0.5)-0.14, 0.0));\n    vec2 hat = Distort(0.5,vec2(nse(t), nse(t + 0.21))) * dec;\n    \n    hat += vec2(sW(t, 200.0)+sW(t, 202.0))*3.0 * dec;\n    hat /= 2.0;\n    \n    return hat;\n}\nvec2 kick(float t)\n{\n    float beat = mod(t, 0.5);\n    float aa = 2.0;\n    float a = sqrt(beat*2.0) / 2.0;\n   \n    float dec = exp(-20.0*max(a-0.11, 0.0));\n    \n    vec2 kik = Distort(1.2, vec2(sW(t, 57.0))) * dec;\n    return kik;\n}\n\nvec2 bass(float t)\n{\n    float b1 = mod(t + 0.25, 1.0);\n    float b2 = mod(t, 2.0);\n    float b3 = mod(t + 0.5, 4.0);\n    \n    vec2 b = vec2(0);\n    \n    b += Distort(2.5, vec2(sW(t, 100.0)*0.9, sW(t - 0.1, 100.1) )) \n         * exp(-b3*7.0) * 1.38;\n        \n \tb += Distort(2.4, vec2(sW2(t, 50.0), sW2(t - 0.1, 50.1) )) \n         * exp(-b1*b2*4.4) * 1.1;   \n    \n    return b;\n    \n}\nvec2 beep(float t)\n{\n    float beat = mod(t + 0.5, 4.0);\n \tvec2 b = Distort(2.5, vec2(sW(t, 100.0), sW(t - 0.1, 100.1) )) * exp(-beat*7.0);   \n    return b;\n    \n}\n\nvec2 ding(float t)\n{\n    float beat = mod(t - 0.25, 2.0);\n    float beat2 = mod(t+1.0, 2.0);\n    \n \tvec2 b = Distort(1.3, vec2(sW(t, 600.0), sW(t - 0.1, 612.0) )) * exp(-beat*beat2*13.0);   \n    \n    return b;\n    \n}\n\nvec2 Mix(float t)\n{\n \tvec2 dry = vec2(0);\n    \n    float tr = floor(mod(t, 2.0));\n    float tr2 = (mod(t, 8.0));\n    \n    if(tr2 > 7.5)\n    \tt*=1.00 + tr;\n    \n    if(tr < 1.0 )\n    {\n    \tdry += snare(t + 0.5)*2.6;\n    \tdry += hat(t)*1.3;\n        dry += kick(t)*4.5;\n    }\n    \n    dry += bass(t)*1.2;\n    dry += tssss(t + 1.0)*1.7;\n    \n    if(tr2 < 6.5)\n    \tdry += ding(t)*1.25;\n   \n    dry /= 5.0;\n    \n    return dry;\n    \n}\n\n\n\n\nvec2 mainSound( in int samp, float time )\n{\n    float t = mod(time, 8.0); \n    \n    vec2 fMix = Mix(t);\n   \n  \n    \n   \n    // flanger effect\n    /*\n  \tvec2 ff = fMix;\n    float lfo = 0.0021 * sin(time*4.0);\n    ff += Mix(time + lfo);\n    ff /= 2.0;\n    fMix = ff;\n    */\n    \n    // fading in and out flanger\n   //fMix = mix(fMix, ff, sin(time*0.5)*sin(time*0.5));\n    \n   return clamp(fMix, -1.0, 1.0) *0.8;\n    \n}\n",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}