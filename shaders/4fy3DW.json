{
    "Shader": {
        "info": {
            "date": "1713171378",
            "description": "11",
            "flags": 32,
            "hasliked": 0,
            "id": "4fy3DW",
            "likes": 3,
            "name": "ShaderToy_11_UI",
            "published": 3,
            "tags": [
                "learning"
            ],
            "usePreview": 0,
            "username": "tbx",
            "viewed": 154
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592653\n#define COUNT 20.0\n\nfloat drawCoord(vec2 uv)\n{\n   float x = distance(vec2(uv.x, 0.0), vec2(0.0, 0.0));\n   float y = distance(vec2(0.0, uv.y), vec2(0.0, 0.0));\n   \n   return 1e-3 / x + 1e-3 / y;\n}\n\nfloat net(vec2 coord)\n{\n    float xline = cos(coord.x * PI * COUNT);\n    xline = step(1.0 - 1e-1, xline);\n    \n    float yline = cos(coord.y * PI * COUNT);\n    yline = step(1.0 - 1e-1, yline);\n    \n    return max(xline, yline);\n}\n\nfloat drawSphere(vec2 coord, vec2 p, float radius)\n{\n    float d = distance(coord, p);\n    d = smoothstep(radius * 0.9, radius * 1.0, d);\n    return 1.0 - d;\n}\n\n// coord: [-1, 1]\n// mouse: [-1, 1]\nvec4 drawButtom(vec2 coord, buttom b, vec2 mouse)\n{\n    // radius if on select\n    float on_r = drawSphere(coord, b.pos, b.radius);\n    \n    // bool if select\n    float m_dis = distance(mouse, b.pos);\n    float on = 1.0 - step(b.radius, m_dis);\n    \n    // radius if off select\n    float off_r = drawSphere(coord, b.pos, b.radius * 0.9);\n    \n    // col if off select\n    vec3 col = off_r * b.color;\n    \n    // col if on select\n    vec3 col_on = mix(vec3(on_r), col, off_r);\n    \n    // col if select or not\n    col = mix(col, col_on, on);\n    \n    // result\n    return vec4(col, mix(off_r, on_r, on));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float asp = iResolution.x / iResolution.y;\n    \n    vec2 bufferA_coord = vec2(1.0 / iResolution.xy);\n    vec2 mousePos = texture(iChannel0, bufferA_coord).xy;\n    mousePos = mousePos * 2.0 - 1.0;\n    mousePos.x *= asp;\n    \n    vec2 coord = uv * 2.0 - 1.0;\n    \n    vec2 aspCoord = vec2(coord.x * asp, coord.y);\n    \n    vec3 col = vec3(0.0);\n    \n    col += net(aspCoord) * 0.125;\n    \n    col += drawCoord(aspCoord);\n    \n    \n    vec4 result = drawButtom(aspCoord, b1, mousePos);\n    col = mix(col, result.xyz, result.w);\n    \n    \n    result = drawButtom(aspCoord, b2, mousePos);\n    col = mix(col, result.xyz, result.w);\n    \n    result = drawButtom(aspCoord, b3, mousePos);\n    col = mix(col, result.xyz, result.w);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\n\nfloat getSelect(vec2 coord, vec2 mouse, buttom b)\n{\n    float m_dis = distance(mouse, b.pos);\n    float on = 1.0 - step(b.radius, m_dis);\n    \n    return on;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float asp = iResolution.x / iResolution.y;\n    \n    vec2 mousePos = iMouse.xy / iResolution.xy;\n    mousePos = mousePos * 2.0 - 1.0;\n    mousePos.x *= asp;\n    \n    vec2 coord = uv * 2.0 - 1.0;\n    \n    vec2 aspCoord = vec2(coord.x * asp, coord.y);\n    \n    \n    if(iFrame == 0)\n    {\n        // default\n        mousePos = b1.pos;\n    }\n    \n    float on_1 = getSelect(aspCoord, mousePos, b1);\n    float on_2 = getSelect(aspCoord, mousePos, b2);\n    float on_3 = getSelect(aspCoord, mousePos, b3);\n    \n    if(uv.x > 2.0/iResolution.x || uv.y > 2.0/iResolution.y)\n    {\n        // for record the select data.\n        // 1 pixel is enough.\n        discard;\n    }\n    \n    if((on_1 + on_2 + on_3) < 0.5)\n    {\n        // no selected, keep the data.\n        fragColor = vec4(texture(iChannel0, 1.0/iResolution.xy).xy, 0.0, 0.0);\n        return;\n    }\n    // inverse coord to [0, 1].\n    mousePos.x /= asp;\n    mousePos = mousePos * 0.5 + 0.5;\n    \n    fragColor = vec4(mousePos, 0.0, 0.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "struct buttom{\n    vec2 pos;\n    float radius;\n    vec3 color;\n};\n\n\nbuttom b1 = buttom(vec2(0.0), 0.1, vec3(1.0, 0.5, 0.3));\nbuttom b2 = buttom(vec2(0.5, 0.0), 0.1, vec3(0.5, 1.0, 0.3));\nbuttom b3 = buttom(vec2(-0.5, 0.0), 0.1, vec3(0.5, 0.3, 1.0));",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}