{
    "Shader": {
        "info": {
            "date": "1567630041",
            "description": "Simple rotating tiles with rainbows for good measure.",
            "flags": 0,
            "hasliked": 0,
            "id": "WsdGRn",
            "likes": 6,
            "name": "Rainbow Gradient Tiles",
            "published": 3,
            "tags": [
                "2d",
                "rainbow",
                "tiles"
            ],
            "usePreview": 0,
            "username": "stseagle",
            "viewed": 618
        },
        "renderpass": [
            {
                "code": "vec3 sunset(vec2 st) {\n    float stretchTime = iTime/20.0 + st.y/40.0;\n    \n    float r = 0.7 * abs(cos(stretchTime)) + 0.2;\n    float g = 0.6 * abs(cos(stretchTime*9.743)) - 0.4 * sin(stretchTime);\n    float b = 0.9 * abs(cos(stretchTime)) + 0.1;\n\n    return vec3(r,g,b);\n}\n\n// From the Book of Shaders\nvec2 rotate2D(vec2 _st, float _angle){\n    _st -= 0.5;\n    _st =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _st;\n    _st += 0.5;\n    return _st;\n}\n\n// Box from the book\nfloat box(vec2 _st, vec2 _size, float _smoothEdges){\n    _size = vec2(0.5)-_size*0.5;\n    vec2 aa = vec2(_smoothEdges*0.5);\n    vec2 uv = smoothstep(_size,_size+aa,_st);\n    uv *= smoothstep(_size,_size+aa,vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float repeat = 8.;\n    vec2 st = fragCoord/iResolution.y * repeat;\n    vec3 color = sunset(st);\n    st = fract(st);\n    \n    float gridWidth = iResolution.y/repeat;\n    vec2 coords = floor(fragCoord.xy/gridWidth);\n    float diag = mod(coords.x + coords.y, 2.) + 1.;\n\n    float rotation = 0.7854 * diag *(1. - iTime*0.3);\n\n    st = rotate2D(st,rotation);\n\n    // Draw a square\n    float bx = box(st,vec2(0.7),10./iResolution.y);\n\n    fragColor = vec4(color * bx, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}