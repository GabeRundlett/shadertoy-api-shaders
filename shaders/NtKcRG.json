{
    "Shader": {
        "info": {
            "date": "1661715284",
            "description": "A fractal rug pattern.",
            "flags": 8,
            "hasliked": 0,
            "id": "NtKcRG",
            "likes": 4,
            "name": "Red and blue rug",
            "published": 3,
            "tags": [
                "fractal",
                "music",
                "carpet",
                "rug"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 240
        },
        "renderpass": [
            {
                "code": "vec2 triangle_wave(vec2 a){\n    return abs(fract((a+vec2(1.,0.5))*1.5)-.5);\n}\n\n#define triwave_(p) abs(fract(.5+p/4.0)-.5)*2.\n#define triwave1_(p) (abs(fract(p/8.0)-.5)-abs(fract(p/2.0)-.5)/2.)\nfloat t1_(vec2 c, vec2 p){\n    return triwave_((.5 - length( min(p=fract(p*sign(triwave1_(c*c.y))), 1.-p.yx) )));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 8.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = 1.5;\n    vec2 t2 = vec2(0.);\n    for(int k = 0; k < 9; k++){\n    \n        //uv.y -= t1_(floor(uv),floor(uv));\n        \n        uv = (uv+t2)/scale;\n        //if(uv.x<uv.y) uv = uv.yx;\n        t2 = -triangle_wave(uv-.5);\n        uv = t2-triangle_wave(uv.yx);\n        col = abs(vec3(uv.y-uv.x,col.yz));\n        if(uv.x < uv.y) {col = col.yzx;}\n        //else if(t2.x < t2.y) col = abs(col.x-col.yzx);\n\n        //if(t2.x < t2.y) {col = col.xzy; uv=abs(uv.yx*2.);}\n\n    }\n    fragColor = vec4(col*2.,1.0);\n}\n/*\n\nvec2 triangle_wave(vec2 a){\n    return abs(fract((a+vec2(1.,0.5))*1.5)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 1.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = 1.5;\n    vec2 t2 = vec2(0.);\n    for(int k = 0; k < 9; k++){\n        uv = (uv+t2);\n        t2 = triangle_wave(uv-.5)/2.;\n        uv = t2-triangle_wave(uv.yx);\n        col = abs(vec3(uv.y-uv.x,col.yz));\n        if(uv.x < uv.y) {col = col.yzx; uv=-abs(uv/2.);}\n        //if(t2.x < t2.y) {col = col.xzy; uv=abs(uv.yx*2.);}\n\n    }\n    fragColor = vec4(col*2.,1.0);\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 mainSound(int samp, float time){\n  \n  float t=(time)/2.;\n  \n  float m1 = mod(floor(t/8.),4.);\n  //t *= 1. + m1;\n  float m3 = mod(floor(t/abs(2.5-m1)),4.),\n  t1 = 2.+m1;\n  //t /= floor(1.+mod(t*2.,2.));\n  \n  t *= 16.;\n\n  t *= m1/2.+1.;\n  \n  float a=sqrt(1.-fract(sqrt(t1)))*.1,\n  \n  nb = pow(2.,mod(floor(t/8.),8.)/4.+m3/4.+7.)*(1.-mod(floor(t/2.),t1)/t1);\n  //nb = pow(2.,mod(floor(t),8.)/2.+7.)*(1.-mod(floor(t/2.),t1)/t1);\n\n\n  return vec2(fract(time*nb*.998)*a,fract(time*nb)*a);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}