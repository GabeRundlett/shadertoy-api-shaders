{
    "Shader": {
        "info": {
            "date": "1717987580",
            "description": "A loose implementation of smooth life",
            "flags": 32,
            "hasliked": 0,
            "id": "MXyGRc",
            "likes": 9,
            "name": "Smooth Life (ish)",
            "published": 3,
            "tags": [
                "life"
            ],
            "usePreview": 0,
            "username": "jwmaxwell",
            "viewed": 124
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tfragColor = texture(iChannel1,fragCoord/iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "const float innerRadius = 4.;\nconst float outerRadius = 9.;\nconst float growth = 0.55;\nconst float decay = 0.9;\nconst float alpha = 0.5;\nconst float beta = 0.26;\nconst float gamma = 0.46;\nconst float delta = 0.27;\nconst float epsilon = 0.36;\n\nvec2 getConv (vec2 uv) {\n    float ui = 0.;\n    float uo = 0.;\n    float uic = 0.;\n    float uoc = 0.;\n    \n    for (float dx = -outerRadius; dx++ <= outerRadius;) {\n        for (float dy = -outerRadius; dy++ <= outerRadius;) {\n            float uis = step(length(vec2(dx, dy)), innerRadius);\n            float uos = step(length(vec2(dx, dy)), outerRadius);\n\n            if (uis + uos < 1.) continue;\n\n            float val = texture(iChannel1, uv + vec2(dx, dy) / iResolution.xy).r;\n\n            ui += val * uis;\n            uic += uis;\n\n            uo += val * uos;\n            uoc += uos;\n        }\n    }\n    \n    return vec2(ui / uic, uo / uoc);\n}\n\nfloat life (vec2 uv) {\n    float v = texture(iChannel1, uv).r;\n    vec2 convolutions = getConv(uv);\n    float ui = convolutions.x;\n    float uo = convolutions.y;\n    \n    bool condition = (ui >= alpha && uo >= beta && uo <= gamma) \n        || (ui < alpha && uo >= delta && uo <= epsilon);\n        \n    v += float(condition) * growth \n        - float(!(condition)) * decay;\n\n    return clamp(v, 0., 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;   \n    bool progStart = iFrame > 4;\n    \n    fragColor = (progStart && iFrame % 3 != 0)\n        ? vec4(vec3(texture(iChannel1, uv).r), 1.0)\n        : progStart\n            ? vec4(vec3(life(uv)), 1.0)\n            : texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}