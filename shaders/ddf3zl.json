{
    "Shader": {
        "info": {
            "date": "1697988484",
            "description": "Inspired by a pre-CGI video effect, popular in the 1970s.\nhttps://en.wikipedia.org/wiki/Video_feedback\nThanks @iq for the excellent chromakey; I only needed to change one line of code to achieve this effect!",
            "flags": 32,
            "hasliked": 0,
            "id": "ddf3zl",
            "likes": 7,
            "name": "Retro video feedback",
            "published": 3,
            "tags": [
                "2d",
                "video",
                "retro",
                "feedback"
            ],
            "usePreview": 0,
            "username": "ruudhelderman",
            "viewed": 195
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            },
            {
                "code": "// Original shader: https://www.shadertoy.com/view/XsfGzn\n// Created by inigo quilez - iq/2013\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define METHOD 2  // try method 1 and method 2\n\n// These 3 lines added by @ruudhelderman\nconst float fade = 0.98;\nconst float scale = 0.98;\nconst vec2 origin = vec2(0.1);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 q = fragCoord.xy / iResolution.xy;\n    \n    // This line modified by @ruudhelderman\n\tvec3 bg = texture( iChannel0, (q-origin)*scale+origin ).xyz * fade;\n    \n\tvec3 fg = texture( iChannel1, q ).xyz;\n    \n    float maxrb = max( fg.r, fg.b );\n    float k = clamp( (fg.g-maxrb)*5.0, 0.0, 1.0 );\n    \n#if METHOD==1\n    \n\tfloat ll = length( fg );\n    fg.g = min( fg.g, maxrb*0.8 );\n    fg = ll*normalize(fg);\n\n#else    \n\n    float dg = fg.g; \n    fg.g = min( fg.g, maxrb*0.8 ); \n    fg += dg - fg.g;\n\n#endif\n    \n    fragColor = vec4( mix(fg, bg, k), 1.0 );\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}