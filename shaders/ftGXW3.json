{
    "Shader": {
        "info": {
            "date": "1641399718",
            "description": "My participation to genuary 2022\nNot a real fidenza because lazyness, but an idea that I had to make something that resembles\nhttps://tylerxhobbs.com/fidenza",
            "flags": 32,
            "hasliked": 0,
            "id": "ftGXW3",
            "likes": 22,
            "name": "Genuary 2022 - Day4",
            "published": 3,
            "tags": [
                "generative",
                "genuary",
                "2022",
                "fidenza"
            ],
            "usePreview": 0,
            "username": "z0rg",
            "viewed": 421
        },
        "renderpass": [
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = texture(iChannel0, uv).xyz;\n    col = pow(col, vec3(2.));\n    col = sat(col*15.);\n    col = mix(vec3(0.898,0.867,0.808), vec3(0.), col.x);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\nvec3 rdr(vec2 uv, vec2 ouv, float t)\n{\n    vec3 col = vec3(0.);\n    \n    uv.y += sin(uv.x*3.+t*.5)*.1;\n    uv.x += sin((uv.y+uv.x)*2.-t*.35)*.3;\n    col = pow(texture(iChannel0, uv*.5).x, 12.)*vec3(1.)*10.;\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 ouv = fragCoord/iResolution.xy;\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.xx;\n\n    vec3 col = vec3(0.);\n    for (int i = 0 ; i < 200; ++i)\n        col += rdr(uv*2.5, ouv, float(i)*.01+iTime);\n    col /= 200.;\n    col = sat(col);\n    float sz = .25;\n    col = mix(col, vec3(0.), sat(max(abs(uv.x)-.47, abs(uv.y)-sz)*iResolution.x*.5));\n   col = mix(col, texture(iChannel1, ouv).xyz, .975);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\n#define sat(a) clamp(a, 0., 1.)",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}