{
    "Shader": {
        "info": {
            "date": "1643910182",
            "description": "mouse controls camera\ninspiration: https://twitter.com/smjtyazdi/status/1464690994411151360\n( see also the next variant with correct base shape :-) ).",
            "flags": 0,
            "hasliked": 0,
            "id": "NdByzd",
            "likes": 21,
            "name": "Spherical Spiral Net 1 a",
            "published": 3,
            "tags": [
                "raymarching",
                "short",
                "reproduction"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 303
        },
        "renderpass": [
            {
                "code": "#define rot3(P,A,a) ( mix( A*dot(P,A), P, cos(a) ) + sin(a)*cross(P,A) )// rotation 3D\n#define rot(a)        mat2(cos(a+vec4(0,11,33,0)))            // rotation 2D\n\n#define cone(A) atan(length(q-q*A),length(q*A))               // angle between q and axe A\n#define T(A)    6.*sin(iTime) *sign(dot(q,A))                 // amplitude of torsion\n//#define S(A)  rot3(q, A, T(A)* exp(-3.*cone(A) ) )\n//#define S(A)  rot3(q, A, T(A)* smoothstep(.5,0.,cone(A) ) )\n  #define S(A)  rot3(q, A, T(A)* smoothstep(.08,1.,exp(-3.*cone(A) ) )) // distortion\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t=9., s,c; \n    vec3  R = iResolution,\n          D = normalize(vec3(U+U, -3.5*R.y) - R),             // ray direction\n          p = 7./R, q,a,                                      // marching point along ray \n          M = iMouse.z > 0. ? iMouse.xyz/R -.5: vec3(20,8,0)/1e2*cos(iTime+vec3(0,11,0)); // auto thumbnail\n     \n    for (O=vec4(1); O.x > 0. && t > .01; O-=.01) {\n        q = p,\n        q.yz *= rot(.5-6.*M.y),                               // rotations\n        q.xz *= rot(2.-6.*M.x),\n     // q = S(vec3(1,0,0)),                // try 1\n     // q = S(vec3(0,1,0)),\n     // q = S(vec3(0,0,1)),\n     // s = min( abs(S(vec3(1,0,0)).x), min( abs(S(vec3(0,1,0)).y) , abs(S(vec3(0,0,1)).z) ) ), // try 2\n        a = abs(q),\n        q = S(vec3( max(a.y,a.z)<a.x, max(a.x,a.z)<a.y, max(a.x,a.y)<a.z )),\n        a = abs(q), s = min(a.x,min(a.y,a.z)),                // 3 planes      \n        t = min( min(t ,c=length(q)-.3),                      // small sphere\n                 s = max( length(q)-1.2, s ) ),               // 3 planes inter big sphere\n   \n       p += .3*t*D;                                           // step forward = dist to obj          \n   }                                                          // --- color scheme\n   if (t==s) O.rgb *= step(a-s,a-a);                          // planes color\n// if (t==c) O=... ;                                          // central sphere color\n// O *= O*O*2.;                                               // contrast\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}