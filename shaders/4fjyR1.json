{
    "Shader": {
        "info": {
            "date": "1721914561",
            "description": "i converted the shader code to a song text with chat gpt, \ni converted the song text to a audio with suno \nhttps://suno.com/song/2d28b2b3-57fc-4ce3-962f-d8b2d1f5f78c",
            "flags": 0,
            "hasliked": 0,
            "id": "4fjyR1",
            "likes": 2,
            "name": "glsl -> gpt -> lyrics -> suno ",
            "published": 3,
            "tags": [
                "ai"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 119
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Verse 1:\n    // Take the fragCoord, make it fly,\n    // Normalize it, X and Y.\n    // Subtract half res, divide it clean,\n    // Old school shader, code supreme.\n    vec2 o = (fragCoord.xy-iResolution.xy*.5)/min(iResolution.x,iResolution.y);\n\n    // Verse 2:\n    // Calculate the length, from center to screen,\n    // Pythagoras style, know what I mean?\n    // Assign it to 'n', let it ride,\n    // Distance in the pixels, no need to hide.\n    float n = length(o);\n\n    \n    // Verse 3:\n    // Create the colors, RGB,\n    // Sin function, 30.*n, you see.\n    // Add some time, let it flow,\n    // In the shader, watch it glow.\n    vec3 o_col = vec3(\n        sin(30.*n+0.3+iTime),\n        sin(30.*n+0.6+iTime),\n        sin(30.*n+0.9+iTime)\n    )*.5+.5;\n    \n\n    // Verse 4:\n    // Red channel first, make it pop,\n    // 1 minus pow, never stop.\n    // Green and blue, do the same,\n    // Old school coding, thatâ€™s the game.\n\n    o_col.x = 1.-pow(abs(o_col.x-.5), 1./3.);\n    o_col.y = 1.-pow(abs(o_col.y-.5), 1./3.);\n    o_col.z = 1.-pow(abs(o_col.z-.5), 1./3.);\n\n    // Outro:\n    // Output to the screen, make it real,\n    // vec4 colors, got that deal.\n    // Shader magic, in the night,\n    // Hip hop coding, feeling right.\n    fragColor = vec4(o_col, 1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}