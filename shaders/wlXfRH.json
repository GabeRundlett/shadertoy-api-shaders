{
    "Shader": {
        "info": {
            "date": "1595969273",
            "description": "An ode to the work Tableau by Piet Mondrian",
            "flags": 0,
            "hasliked": 0,
            "id": "wlXfRH",
            "likes": 3,
            "name": "Ode to: Piet Mondrian - Tableau",
            "published": 3,
            "tags": [
                "mondrian",
                "pietmondrian",
                "tableau"
            ],
            "usePreview": 0,
            "username": "ChocolatePinecone",
            "viewed": 306
        },
        "renderpass": [
            {
                "code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvec3 drawRectangle(vec4 bounds, float edgeWidth, vec2 st) {\n    vec2 stWidth = edgeWidth / iResolution.xy;\n    vec2 relPos = st.xy - bounds.xy;\n    vec3 color = vec3(1.0);\n    \n    // Check to determine if point is inside rect edge or inner part\n    vec2 ch1 = step(bounds.xy, st.xy) - step(bounds.xy + bounds.zw, st.xy); // 1.0 if rect\n    vec2 ch2 = step(bounds.xy + stWidth, st.xy) - step(bounds.xy + bounds.zw - stWidth, st.xy); // 1.0 if inside inner rect\n    float edge = ch1.x * ch1.y - ch2.x * ch2.y; // 1.0 if inside edge\n    \n    // Give edge black color\n    color -= edge;\n    \n    return color;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    vec2 st = fragCoord.xy/iResolution.xy;\n    vec3 color = vec3(0.0);\n    float fade = (sin(iTime * 2.0) + 1.0) * 0.5;\n    \n    vec3 red = vec3(0.662, 0.129, 0.137);\n    vec3 yellow = vec3(0.996, 0.792, 0.227);\n    vec3 blue = vec3(0.0, 0.368, 0.608);\n\n    // Draw lines\n    color = drawRectangle(vec4(0.05,0.65,0.2,0.4), 10.0, st);\n    color *= drawRectangle(vec4(-0.1,0.65,1.2,0.2), 10.0, st);\n    color *= drawRectangle(vec4(-0.1,-0.1,0.35,1.2), 10.0, st);\n    color *= drawRectangle(vec4(0.7,-0.1,0.25,1.2), 10.0, st);\n    color *= drawRectangle(vec4(0.237,-0.1,0.8,0.2), 10.0, st);\n\n    // Draw colors\n    if(st.x < 0.25 && st.y > 0.65) {\n    \tcolor *= red * fade;\n    }\n    if(st.x > 0.95 && st.y > 0.65) {\n    \tcolor *= yellow * fade;\n    }\n    if(st.x > 0.7 && st.y < 0.1) {\n    \tcolor *= blue * fade;\n    }\n    \n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}