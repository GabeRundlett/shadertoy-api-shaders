{
    "Shader": {
        "info": {
            "date": "1606381166",
            "description": "Nothing moves...",
            "flags": 0,
            "hasliked": 0,
            "id": "wsGBRR",
            "likes": 18,
            "name": "Rings of delusion",
            "published": 3,
            "tags": [
                "optical",
                "illusion"
            ],
            "usePreview": 0,
            "username": "Nrx",
            "viewed": 669
        },
        "renderpass": [
            {
                "code": "// Inspired by: https://twitter.com/jagarikin/status/1331409504953540613\n\n#define PI\t\t\t3.14159265358979\n#define RADIUS\t\t0.5\n#define THICKNESS\t0.1\n#define SPEED\t\t10.0\n#define STRIPS\t\t3.0\n\nfloat segDist (in vec2 p, in vec2 a, in vec2 b) {\n\tp -= a;\n\tb -= a;\n\treturn length (p - b * clamp (dot (p, b) / dot (b, b), 0.0, 1.0));\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 p) {\n\n\t// Normalization of the fragment coordinates\n\tp = (2.0 * p - iResolution.xy) / iResolution.y;\n\tfloat halfPixel = 0.5 * dFdy (p.y);\n\n\t// Background color\n\tfragColor = vec4 (vec3 (0.5 + 0.05 * cos (p.x * 50.0) * cos (p.y * 50.0)), 1.0);\n\n\t// Select the animation\n\tfloat select = floor (6.0 * fract (iTime * 0.03 + step (0.0, p.x) / 3.0));\n\n\t// Display the rings & marker\n\tp.x = abs (p.x) - RADIUS * 1.6;\n\n\tfloat d = length (p) - RADIUS;\n\tfloat a = atan (p.y, p.x);\n\tfloat t = STRIPS * (a + iTime * SPEED);\n\n\tvec4 c = vec4 (1.0, smoothstep (-0.05, 0.05, cos (t)), 0.0, 1.0);\n\tfragColor = mix (fragColor, c, smoothstep (halfPixel, -halfPixel, abs (d) - THICKNESS));\n\n\tfloat m;\n\tfloat f;\n\tif (select < 1.5) {\n\t\tm = abs (length (p) - 0.15 + 0.1 * select);\n\t\tf = 1.0;\n\t\tt -= PI * (0.5 + select);\n\t} else {\n\t\tfloat dir = PI * 0.5 * (select - 2.0);\n\t\tvec2 tip = 0.15 * vec2 (-sin (dir), cos (dir));\n\t\tm = segDist (p, -tip * 0.5, tip);\n\t\tm = min (m, segDist (p, tip, tip * 0.7 + 0.3 * vec2 (tip.y, -tip.x)));\n\t\tm = min (m, segDist (p, tip, tip * 0.7 - 0.3 * vec2 (tip.y, -tip.x)));\n\t\tf = abs (sin (a + dir));\n\t\tt -= PI * 0.5 * sign (dot (p, tip));\n\t}\n\tfragColor.rgb *= smoothstep (-halfPixel, halfPixel, m - 0.02);\n\n\tc.g = smoothstep (-0.05, 0.05, cos (t));\n\tfragColor = mix (fragColor, c, f * smoothstep (halfPixel, -halfPixel, abs (d - THICKNESS) - 2.0 * halfPixel));\n\tc.g = 1.0 - c.g;\n\tfragColor = mix (fragColor, c, f * smoothstep (halfPixel, -halfPixel, abs (d + THICKNESS) - 2.0 * halfPixel));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}