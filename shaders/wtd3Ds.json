{
    "Shader": {
        "info": {
            "date": "1578040597",
            "description": "#don't you open that trap doooor#",
            "flags": 0,
            "hasliked": 0,
            "id": "wtd3Ds",
            "likes": 3,
            "name": "Noise Fun #3 - Freaky Eyes",
            "published": 3,
            "tags": [
                "noise",
                "bezier",
                "pixel",
                "spooky"
            ],
            "usePreview": 0,
            "username": "ndxbxrme",
            "viewed": 470
        },
        "renderpass": [
            {
                "code": "vec2 bezier(in vec2 p1, in vec2 p2, in vec2 p3, in float t)\n{\n    float oneminust = 1. - t;\n    return oneminust * oneminust * p1 + 2. * oneminust * t * p2 + t * t * p3;\n}\n\nfloat eye(in vec2 uv, in float startY, in float endY)\n{\n    float blink = snoise(vec3(iTime, 1., 1.));\n    float f = bezier(vec2(0., startY), vec2(.5, 1.2), vec2(1., endY), uv.x).y;\n    f = smoothstep(f, f + 0.01, uv.y);\n    float f1 = bezier(vec2(0., startY), vec2(0.), vec2(1., endY), uv.x).y;\n    f1 = smoothstep(f1, f1 + 0.01, uv.y);\n    float pnoise = snoise(vec3(iTime * .1, 1., 1.));\n    float pnoise2 = snoise(vec3(1., iTime * .1, 1.));\n    float r = length(vec2(uv - vec2(0.5 + pnoise * .3, 0.44 + pnoise2 * .2)));\n    float p = smoothstep(0.2, 0.1, r);\n    float iris = smoothstep(0.3, 0.2, r);\n\treturn blink > .4 ? 0.0 : clamp(((1. - f) * f1) - p - (iris * .6), 0., 1.);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord -.5*iResolution.xy) / iResolution.y;\n    float pixelsize = 0.025;\n\tuv = floor(uv/pixelsize)*pixelsize;\n    //uv -= mod(uv,pixelsize)-pixelsize*0.5;\n    float f = eye((uv * 1.5) - vec2(-1.05, -0.4), 0.3, 0.2);\n    f += eye((uv * 1.5) - vec2(0.05, -0.4), 0.2, 0.3);\n    vec3 col = vec3(f);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//simplex noise from https://thebookofshaders.com/edit.php#11/iching-03.frag\nvec3 random3(vec3 c) {\n    float j = 43960.0*sin(dot(c,vec3(170.0, 59.4, 15.0)));\n    vec3 r;\n    r.z = fract(512.0*j);\n    j *= .125;\n    r.x = fract(512.0*j);\n    j *= .125;\n    r.y = fract(512.0*j);\n    return r-0.5;\n}\n\nconst float F3 =  0.3333333333;\nconst float G3 =  0.1666666667;\nfloat snoise(vec3 p) {\n\n    vec3 s = floor(p + dot(p, vec3(F3)));\n    vec3 x = p - s + dot(s, vec3(G3));\n\n    vec3 e = step(vec3(0.0), x - x.yzx);\n    vec3 i1 = e*(1.0 - e.zxy);\n    vec3 i2 = 1.0 - e.zxy*(1.0 - e);\n\n    vec3 x1 = x - i1 + G3;\n    vec3 x2 = x - i2 + 2.0*G3;\n    vec3 x3 = x - 1.0 + 3.0*G3;\n\n    vec4 w, d;\n\n    w.x = dot(x, x);\n    w.y = dot(x1, x1);\n    w.z = dot(x2, x2);\n    w.w = dot(x3, x3);\n\n    w = max(0.6 - w, 0.0);\n\n    d.x = dot(random3(s), x);\n    d.y = dot(random3(s + i1), x1);\n    d.z = dot(random3(s + i2), x2);\n    d.w = dot(random3(s + 1.0), x3);\n\n    w *= w;\n    w *= w;\n    d *= w;\n\n    return dot(d, vec4(52.0));\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}