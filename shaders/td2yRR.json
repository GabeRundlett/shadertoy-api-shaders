{
    "Shader": {
        "info": {
            "date": "1586010175",
            "description": "Some Waves",
            "flags": 0,
            "hasliked": 0,
            "id": "td2yRR",
            "likes": 2,
            "name": "Some Simple Waves",
            "published": 3,
            "tags": [
                "waves",
                "beginner"
            ],
            "usePreview": 0,
            "username": "GabrielFelix",
            "viewed": 369
        },
        "renderpass": [
            {
                "code": "vec3 Rect(vec2 uv, vec4 size, float blur, vec2 position, vec3 color){\n\t//position: left right up down\n    uv -= position;\n    \n    float left = smoothstep(size.x - blur, size.x + blur, uv.x);\n    float right = smoothstep(size.y + blur, size.y - blur, uv.x);\n    \n    float up = smoothstep(size.z - blur, size.z + blur, uv.y);\n    float down = smoothstep(size.w + blur, size.w - blur, uv.y);\n    \n    \n    return (left * right * up * down) * color;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Setup\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //Drawing\n    uv.y += cos(cos(iTime + uv.x) );  \n    vec3 col = Rect(vec2(uv.x, uv.y), vec4(-1., 1, -0.5, 0.1), 0.001, vec2(0., 0.5), vec3(0., 1., 1.));\n    \n    // Output\n    fragColor = vec4(col ,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}