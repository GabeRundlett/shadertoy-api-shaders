{
    "Shader": {
        "info": {
            "date": "1717126972",
            "description": "朱莉亚集合简单实现",
            "flags": 0,
            "hasliked": 0,
            "id": "M33GDs",
            "likes": 0,
            "name": "朱莉亚集合",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "Drake",
            "viewed": 66
        },
        "renderpass": [
            {
                "code": "vec2 complex_square( vec2 v) {\n\treturn vec2(\n\t\tv.x * v.x - v.y * v.y,\n\t\tv.x * v.y * 2.0\n\t);\n}\nvec2 julia(vec2 z,vec2 c){\n    return complex_square(z) + c;\n}\n\nfloat juliaSet(vec2 z,vec2 c){\n    float step = 100.;\n    vec2 r = z;\n    float idx = 0.;\n    for(float i = 0.; i < step; i += 1.){\n        r = julia(r,c);\n        float l = length(r);\n        if(l > 2.){\n            idx = i;\n        }\n    }\n    float a = 1. / step * pow(idx,2.);\n    return a;\n}\nvec2 ramdom(vec2 z){\n    return fract(sin(z * 2352.244) * 233.74);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n    vec2 uv = fragCoord.xy - iResolution.xy * 0.5;\n\tuv *= 4. / min( iResolution.x, iResolution.y);\n    vec2 cc = (iMouse.xy / iResolution.xy);\n\n\n    float a = juliaSet(uv,cc);\n    \n    fragColor = mix(vec4(0),vec4(0.5,0.1,0.5,1),a);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}