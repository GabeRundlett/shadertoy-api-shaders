{
    "Shader": {
        "info": {
            "date": "1642723057",
            "description": "...quick typography experiment for genuary 2022",
            "flags": 0,
            "hasliked": 0,
            "id": "NdscW2",
            "likes": 13,
            "name": "genuary 19 - txt/typo",
            "published": 3,
            "tags": [
                "text",
                "font",
                "genuary"
            ],
            "usePreview": 0,
            "username": "flockaroo",
            "viewed": 391
        },
        "renderpass": [
            {
                "code": "// created by florian berger (flockaroo) - 2022\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// Genuary 2022 - day 19 txt/typography\n\n#define Res (iResolution.xy)\n\n#define A_ 65\n#define B_ 66\n#define C_ 67\n#define D_ 68\n#define E_ 69\n#define F_ 70\n#define G_ 71\n#define H_ 72\n#define I_ 73\n#define J_ 74\n#define K_ 75\n#define L_ 76\n#define M_ 77\n#define N_ 78\n#define O_ 79\n#define P_ 80\n#define Q_ 81\n#define R_ 82\n#define S_ 83\n#define T_ 84\n#define U_ 85\n#define V_ 86\n#define W_ 87\n#define X_ 88\n#define Y_ 89\n#define Z_ 90\n#define a_ (65+32)\n#define b_ (66+32)\n#define c_ (67+32)\n#define d_ (68+32)\n#define e_ (69+32)\n#define f_ (70+32)\n#define g_ (71+32)\n#define h_ (72+32)\n#define i_ (73+32)\n#define j_ (74+32)\n#define k_ (75+32)\n#define l_ (76+32)\n#define m_ (77+32)\n#define n_ (78+32)\n#define o_ (79+32)\n#define p_ (80+32)\n#define q_ (81+32)\n#define r_ (82+32)\n#define s_ (83+32)\n#define t_ (84+32)\n#define u_ (85+32)\n#define v_ (86+32)\n#define w_ (87+32)\n#define x_ (88+32)\n#define y_ (89+32)\n#define z_ (90+32)\n\n#define SDFFontTex iChannel0\n\nfloat getCharDist(int c, vec2 p)  // p=[(-.5,-.5)..(.5,.5)]\n{\n    //p*=.85;\n    vec2 r=vec2(textureSize(SDFFontTex,0));\n    float d=textureLod(SDFFontTex,vec2(c%16,15-c/16)/16.+vec2(0,1)+clamp((p+.5)/16.,1./r,1.-1./r),0.).w-.5;\n    vec2  d2=abs(p)-(.5-1./r);\n    if (d2.x>0. || d2.y>0.) return d+max(d2.x,d2.y);\n    return d-.02;\n}\n\nvec2 getCharGrad(int c, vec2 p)\n{\n    float eps=.05;\n    vec2 d=vec2(eps*.5,0);\n    return vec2(\n        getCharDist(c,p+d.xy)-getCharDist(c,p-d.xy),\n        getCharDist(c,p+d.yx)-getCharDist(c,p-d.yx)\n        )/eps*vec2(1,-1);\n}\n\nvoid mainImage( out vec4 fragColor, vec2 fragCoord )\n{\n    int lnum=7;\n    int l[7]=int[7](G_,e_,n_,u_,a_,r_,y_);\n    //int l[7]=int[7](G_,E_,N_,U_,A_,R_,Y_);\n    \n    float d=1000.;\n    mat2 m0=mat2(cos(sin(iTime*3.)+vec4(0,1.57,-1.57,0)));\n    mat2 m=mat2(1,0,0,1);\n    float sc=100.*exp(iTime);\n    float dsc=1./8.;\n    // unfortunately not an endless zoom, but 117 chars should do it fo now ;-)\n    for(int i=0;i<117;i++){\n        vec2 p=fract(fragCoord/sc)-.5;\n        d=min(d,getCharDist(l[i%lnum],m*p)*sc);\n        vec2 g=getCharGrad(l[i%lnum],m*((floor(p/dsc)+.5)*dsc));\n        g=normalize(g);\n        m=mat2(g.yx*vec2(-1,1),-g)*m;\n        sc*=dsc;\n    }\n    \n    fragColor.xyz=vec3(0)+d+1.;\n    fragColor.w=1.;\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}