{
    "Shader": {
        "info": {
            "date": "1665193827",
            "description": "This fractal resembles a 3-dimensional hologram.",
            "flags": 8,
            "hasliked": 0,
            "id": "stKBDG",
            "likes": 11,
            "name": "Hologram Chamber",
            "published": 3,
            "tags": [
                "3d",
                "fractal",
                "hologram"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 536
        },
        "renderpass": [
            {
                "code": "#define R(p,a,t) mix(a*dot(p,a),p,cos(t))+sin(t)*cross(p,a)\n#define H(h) (cos((h)*6.3+vec3(0,23,21))*.5+.5)\n\nvoid mainImage(out vec4 O, vec2 C)\n{\n    vec3 r=iResolution,c=vec3(0),\n    d=normalize(vec3(C-.5*r.xy,r.y));\n    float i=0.,s,e,g=0.,t=iTime;\n\tfor(;i++<99.;){\n        vec4 p=vec4(g*d,.08);\n        p.z-=.7;\n        p.xyz=R(p.xyz,normalize(H(t*.05)),t*.2);\n        s=1.;\n        for(int j=0;j++<7;)\n            p += .5,\n            s*=e=max(1./(1.-abs(p.y)),1.),\n            p=abs(p.wzyx)*e-.9;\n        e=abs(length(p.w)/s-.04);\n\t    g+=e+1e-4;\n\t    c+=mix(vec3(1),H(log(s)*.9),.5)*.04/exp(i*i*e);\n\t}\n\tc*=c;\n  O=vec4(c,1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define fmod(x,y) mod(floor(x),y)\n//#define fmod(x,y) mod(floor(x+floor(x/5.)),y)\n\nvec2 mainSound(int samp, float t){\n  \n  float s1 =\n      5.,\n\n  s2 = 7.,\n      //time/(1.+fmod(time,2.))\n  m1 = fmod(t/s1,s1),\n  m4 = fmod(t*s1+s1,s2),\n  m3 =\n      fmod((t+m4)*s1/(m1+.5),s2)\n      //fmod((t+m1)/(m4+.5),s2)\n  ,\n  a= .2,\n  nb = pow(2.,(m3+m1)/5.+7.5);\n\n  return 128.*abs(.75-vec2(fract(t*nb*.998/2.)\n   ,fract(t*nb)))*a/2.;\n\n}\n\n/*\n#define fmod(x,y) mod(floor(x),y)\n\nvec2 mainSound(int samp, float time){\n  \n  float s1 =\n      4.,\n  t=time,\n  m1 = fmod(t/s1,s1),\n  m4 = fmod(t*s1,s1),\n  m3 =\n      fmod((t+m4)*s1/(m1+.5),s1),\n\n  a=sqrt((1.-sqrt(fract(m1))))*.2,\n\n  nb = pow(2.,(m3+m1)/5.+8.5-m4/2.);\n\n  return vec2(fract(time*nb*.998/2.)*a\n   ,fract(time*nb)*a)/2.;\n\n}\n*/\n\n/*\nvec2 mainSound(int samp, float t){\n  \n  float s1 =\n      3.,\n\n  s2 = 3.,\n  m1 = fmod(t*s1+s1,s2),\n  m4 = fmod(t/s1+s1,s1),\n  m3 =\n      fmod((t+m4)*s1/(m1+.5),s2),\n\n  a=sqrt((1.-sqrt(fract(m1))))*.2,\n\n  nb = pow(2.,(m3+m1)/5.+8.-m4/2.);\n\n  return vec2(fract(t*nb*.998/2.)*a\n   ,fract(t*nb)*a)/2.;\n\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}