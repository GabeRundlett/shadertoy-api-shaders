{
    "Shader": {
        "info": {
            "date": "1695733356",
            "description": "200 x 200 x 150 simulation. ",
            "flags": 0,
            "hasliked": 0,
            "id": "csKczz",
            "likes": 13,
            "name": "3D Surface Tension",
            "published": 3,
            "tags": [
                "fluid"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 317
        },
        "renderpass": [
            {
                "code": "#define R3 vec3(200,200,25)\n#define R2 vec2(1000,1000)\nvec2 _3D (vec3 u) {\n    u = clamp(u,vec3(0),R3-1.);\n    u = floor(u);\n    return .5+u.xy+R3.xy*vec2(mod(u.z,R2.x/R3.x),floor(u.z*R3.x/R2.x));\n}\nvec3 _3D (vec2 u) {\n    u = floor(u);\n    return .5+vec3(mod(u,R3.xy),floor(u.x/R3.x)+R2.x/R3.x*floor(u.y/R3.y));\n}\nint face (vec3 dir){\n    if        (dir.x>max(abs(dir.y),abs(dir.z))){\n        return 0;\n    } else if (dir.y>max(abs(dir.z),abs(dir.x))){\n        return 1;\n    } else if (dir.z>max(abs(dir.x),abs(dir.y))){\n        return 2;\n    } else if (-dir.x>max(abs(dir.y),abs(dir.z))){\n        return 3;\n    } else if (-dir.y>max(abs(dir.z),abs(dir.x))){\n        return 4;\n    } else if (-dir.z>max(abs(dir.x),abs(dir.y))){\n        return 5;\n    } else return -1;\n}\nvec4 H (vec2 U, int i) {\n    ivec3 p = ivec3(U,i);\n    vec2 x = vec2(p-512) + 0.5;\n    vec3 d;\n           if (p.z==0){     d = vec3( 512,-x.y,-x.x);\n    } else if (p.z==1){     d = vec3( x.x, 512, x.y);\n    } else if (p.z==2){     d = vec3( x.x,-x.y, 512);\n    } else if (p.z==3){     d = vec3(-512,-x.y, x.x);\n    } else if (p.z==4){     d = vec3( x.x,-512,-x.y);\n    } else if (p.z==5){     d = vec3(-x.x,-x.y,-512);\n    } else d = vec3(0);\n    return texture(iChannel0,d);\n}\nvec4 G (vec3 V) {\n    int i = int(floor(V.z/R3.z));\n    V.z = mod(V.z,R3.z);\n    return H(_3D(V),i);\n}\nvec4 T (vec3 u) {\n    u -= .5;\n    vec3 f = floor(u);\n    vec3 c = ceil(u);\n    vec4 _000 = G(f);\n    vec4 _001 = G(vec3(f.xy,c.z));\n    vec4 _010 = G(vec3(f.x,c.y,f.z));\n    vec4 _011 = G(vec3(f.x,c.yz));\n    vec4 _100 = G(vec3(c.x,f.yz));\n    vec4 _101 = G(vec3(c.x,f.y,c.z));\n    vec4 _110 = G(vec3(c.xy,f.z));\n    vec4 _111 = G(c);\n    vec4 _00 = mix(_000,_001,fract(u.z));\n    vec4 _01 = mix(_010,_011,fract(u.z));\n    vec4 _10 = mix(_100,_101,fract(u.z));\n    vec4 _11 = mix(_110,_111,fract(u.z));\n    vec4 _0 = mix(_00,_01,fract(u.y));\n    vec4 _1 = mix(_10,_11,fract(u.y));\n    return mix(_0,_1,fract(u.x));\n}\nMain {\n    if (iFrame % 2 != 0) discard;\n    Q = vec4(0);\n    float dx = 0., dy = 0.1;\n    if (iMouse.z>0.) dx = 2.*(iMouse.x/R.x-.5), dy = 2.*(iMouse.y/R.y-.5);\n    vec2 V = (U-.5*R)/R.y*R3.y+.5*R3.xy;\n    float t = .2*sin(iTime);\n    mat2 m = mat2(cos(t),sin(t),-sin(t),cos(t));\n    if (V.x<0.||V.y<0.||R3.x-V.x<0.||R3.y-V.y<0.) Q = vec4(.4,.6,1,1);\n    else for (float z = 0.; z < 6.*R3.z-1.; z++) {\n        vec3 v = vec3(V,z);\n        v.xy -= .5*R3.xy;\n        v.xy *= 1.+.004*z;\n        v.y -= .1*z;\n        v.xy += .5*R3.xy;\n        if (v.x<1.||v.y<1.||R3.x-v.x<1.||R3.y-v.y<1.) ;\n        else\n        Q += G(v).w/150.;\n    }\n    Q = sin(-2.+4.*sqrt(Q)+vec4(1,2,3,4));\n    vec3 d = normalize(vec3(2.*(U-.5*R)/R.y,1));\n    t = 0.*iTime;\n    d.xz *= mat2(cos(t),sin(t),-sin(t),cos(t));\n    //Q = texture(iChannel0,d).wwww*(.5+texture(iChannel0,d));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 41,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a//media/previz/cubemap00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\n#define Main void mainImage (out vec4 Q, in vec2 U) \n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "#define R3 vec3(200,200,25)\n#define R2 vec2(1000,1000)\nvec2 _3D (vec3 u) {\n    u = clamp(u,vec3(0),R3-1.);\n    u = floor(u);\n    return .5+u.xy+R3.xy*vec2(mod(u.z,R2.x/R3.x),floor(u.z*R3.x/R2.x));\n}\nvec3 _3D (vec2 u) {\n    u = floor(u);\n    return .5+vec3(mod(u,R3.xy),floor(u.x/R3.x)+R2.x/R3.x*floor(u.y/R3.y));\n}\nint face (vec3 dir){\n    if        (dir.x>max(abs(dir.y),abs(dir.z))){\n        return 0;\n    } else if (dir.y>max(abs(dir.z),abs(dir.x))){\n        return 1;\n    } else if (dir.z>max(abs(dir.x),abs(dir.y))){\n        return 2;\n    } else if (-dir.x>max(abs(dir.y),abs(dir.z))){\n        return 3;\n    } else if (-dir.y>max(abs(dir.z),abs(dir.x))){\n        return 4;\n    } else if (-dir.z>max(abs(dir.x),abs(dir.y))){\n        return 5;\n    } else return -1;\n}\nvec4 H (vec2 U, int i) {\n    ivec3 p = ivec3(U,i);\n    vec2 x = vec2(p-512) + 0.5;\n    vec3 d;\n           if (p.z==0){     d = vec3( 512,-x.y,-x.x);\n    } else if (p.z==1){     d = vec3( x.x, 512, x.y);\n    } else if (p.z==2){     d = vec3( x.x,-x.y, 512);\n    } else if (p.z==3){     d = vec3(-512,-x.y, x.x);\n    } else if (p.z==4){     d = vec3( x.x,-512,-x.y);\n    } else if (p.z==5){     d = vec3(-x.x,-x.y,-512);\n    } else d = vec3(0);\n    return texture(iChannel0,d);\n}\nvec4 G (vec3 V) {\n    V = clamp(V,vec3(0),R3*vec3(1,1,6)-vec3(0,0,1));\n    int i = int(floor(V.z/R3.z));\n    V.z = mod(V.z,R3.z);\n    return H(_3D(V),i);\n}\nvec4 T (vec3 u)  {\n    vec3 f = floor(u);\n    vec3 c = ceil(u);\n    vec4 _000 = G(f);\n    vec4 _001 = G(vec3(f.xy,c.z));\n    vec4 _010 = G(vec3(f.x,c.y,f.z));\n    vec4 _011 = G(vec3(f.x,c.yz));\n    vec4 _100 = G(vec3(c.x,f.yz));\n    vec4 _101 = G(vec3(c.x,f.y,c.z));\n    vec4 _110 = G(vec3(c.xy,f.z));\n    vec4 _111 = G(c);\n    vec4 _00 = mix(_000,_001,fract(u.z));\n    vec4 _01 = mix(_010,_011,fract(u.z));\n    vec4 _10 = mix(_100,_101,fract(u.z));\n    vec4 _11 = mix(_110,_111,fract(u.z));\n    vec4 _0 = mix(_00,_01,fract(u.y));\n    vec4 _1 = mix(_10,_11,fract(u.y));\n    return mix(_0,_1,fract(u.x));\n}\nvec3 vel (vec3 v) {\n    return v*inversesqrt(1.+dot(v,v));\n}\nvoid mainCubemap( out vec4 Q, in vec2 U, in vec3 _, in vec3 d )\n{\n    if (U.x>R2.x||U.y>R2.y) {Q = vec4(0); return;}\n    int f = face(d);\n    vec3 V = _3D(floor(U))+R3*vec3(0,0,f);\n    Q = G(V);\n    vec4 dQ = vec4(0);\n    if (iFrame % 2 == 0) {\n        for(int x=-1;x<=1;x++)\n        for(int y=-1;y<=1;y++)\n        for(int z=-1;z<=1;z++)  if(abs(x)!=abs(y)&&abs(y)!=abs(z))\n        {\n            vec3 v = vec3(x,y,z);\n            vec3 w = V+v;\n            if (w.x<2.||w.y<2.||w.z<2.||R3.x-w.x<2.||R3.y-w.y<2.||6.*R3.z-w.z<2.)\n            {\n                dQ += 1./6.*Q.w*vec4(Q.xyz,1);\n            }\n            else \n          {\n              vec4 q = G(w);\n            vec3 a = vel(Q.xyz),\n                 b = vel(q.xyz)+v;\n           float ab = dot(v,b-a);\n           float i = dot(v,(0.5*v-a))/ab;\n               float j = .5+.5*max(1.-q.w,0.);\n               float k = .5+.5*max(1.-Q.w,0.);\n               float wa = (1./6.+.00005)*Q.w*min(i,j)/j;\n               float wb = (1./6.+.00005)*q.w*max(k+i-1.,0.)/k;\n               dQ += vec4(Q.xyz,1)*wa+vec4(q.xyz,1)*wb;\n          }\n\n        }\n    if (dQ.w>0.)dQ.xyz/=dQ.w;\n    Q = dQ;\n    if (V.x < 2. || V.y < 2.|| V.z < 2.|| \n            R3.x-V.x < 2.|| R3.y-V.y < 2. || R3.z*6.-V.z < 2.)\n            Q *= 0.;\n    } else {\n        Q.y -= .0005;\n        for(int x=-1;x<=1;x++)\n        for(int y=-1;y<=1;y++)\n        for(int z=-1;z<=1;z++)  if(abs(x)!=abs(y)&&abs(y)!=abs(z)) {\n            vec3 v = vec3(x,y,z);\n            vec4 q = G(V+v);\n            Q.xyz -= .06*q.w*(q.w-1.)*v;\n        }\n        if (V.x < 2. || V.y < 2.|| V.z < 2.|| \n            R3.x-V.x < 2.|| R3.y-V.y < 2. || R3.z*6.-V.z < 2.)\n            Q *= vec4(0,0,0,.99);\n        \n        //float t = float(iFrame)/200.;\n        //if (length(V-vec3(.1,.8,.5*6.)*R3) < 8.) Q = vec4(+.8+.0*sin(t),.0*cos(t),.05*sin(.76*t),1);\n        //if (length(V-vec3(.9,.8,.5*6.)*R3) < 8.) Q = vec4(-.8+.0*sin(t),.0*cos(t),.05*sin(.86*t),1);\n        \n    }\n    if (iFrame < 100) {\n        if (V.y < .4*R3.y) Q.w = 1.+.003*(.4*R3.y-V.y);\n        if (length(V-vec3(.5,.8,3.)*R3) < 25.) Q.w = .8,Q.y=-.6;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 41,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a//media/previz/cubemap00.png"
                    }
                ],
                "name": "Cube A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 41
                    }
                ],
                "type": "cubemap"
            }
        ],
        "ver": "0.1"
    }
}