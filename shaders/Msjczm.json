{
    "Shader": {
        "info": {
            "date": "1491481156",
            "description": "Human visual system is good to detect correlation... up to some limits. \nHere, with tiles of white noise.\nMouse.x tune noise tile size.\nMouse.y offset the noise (to avoid unwanted statistical feature).\nSpace to see tiles.",
            "flags": 16,
            "hasliked": 0,
            "id": "Msjczm",
            "likes": 2,
            "name": "perception of noise tiles",
            "published": 3,
            "tags": [
                "noise",
                "experiment",
                "perception",
                "correlation"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 796
        },
        "renderpass": [
            {
                "code": "// see also https://www.shadertoy.com/view/Md2czm\n// for bluenoise version, cf https://www.shadertoy.com/view/4dSyDR\n\nvec4 char(vec2 p, int c) {  // access to the image of ascii code c. from https://www.shadertoy.com/view/llySRh\n\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n\treturn textureGrad( iChannel0, p/16. + fract( vec2(c, 15-c/16) / 16. ), \n                        dFdx(p/16.),dFdy(p/16.) );\n}\n\nvec4 pInt(vec2 p, float n) { // display int4\n    vec4 v = vec4(0,0,0,1e5), t;\n    if (n < 0.) {\n        t = char(p - vec2(-.5,0), 45 ); if (t.a<=1.) v.a=0., v += t;\n        n = -n;\n    }\n\n    for (float i = 3.; i>=0.; i--) {\n        n /= 10.;\n        t = char(p - vec2(.5*i,0), 48+ int(fract(n)*10.) ); if (t.a<=1.) v.a=0., v += t;\n    }\n    return v;\n}\n\nfloat hash( uint n ) { // from https://www.shadertoy.com/view/llGSzw  Base: Hugo Elias. ToFloat: https://iquilezles.org/articles/sfrand\n\tn = (n << 13U) ^ n;\n    n = n * (n * n * 15731U + 789221U) + 1376312589U;\n    return uintBitsToFloat( (n>>9U) | 0x3f800000U ) - 1.;\n}\n\n#define keyClick(ascii)  (texture(iChannel2, vec2((.5+ascii)/256.,.25)).x > 0.)\n\n\nvec4 noise(vec2 U) {\n    U-=.5;   return vec4( hash(uint(U.x+iResolution.x*U.y)) );\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 M = iMouse.xy; if (length(M)<10.) M = vec2(50);\n\n    O = noise( mod(U,M.x) +M.y );  // tiled noise\n    \n    O = sqrt(O);                   // gamma conversion\n\n    vec4 V = pInt ( ( U/iResolution.y - vec2(1.,.85) ) * 10., M.x); // print scale\n    if (V.a<1.) O = V.x*vec4(1,.6,0,0);\n    \n    U = mod(U,M.x);                // show tiles (red frames)\n    if (keyClick(32.) && min(U.x,U.y)==.5 ) O=vec4(1,0,0,0);\n    \n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}