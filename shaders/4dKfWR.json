{
    "Shader": {
        "info": {
            "date": "1528320131",
            "description": "click anywhere on screen for start the diffusion",
            "flags": 32,
            "hasliked": 0,
            "id": "4dKfWR",
            "likes": 6,
            "name": "Reaction Diffusion RGB",
            "published": 3,
            "tags": [
                "colored",
                "diffusion",
                "reaction"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 744
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float r = texture(iChannel0, uv).r;\n    float g = texture(iChannel1, uv).r;\n    float b = texture(iChannel2, uv).r;\n    \n    fragColor = vec4(r, g, b, 1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define FEED_RATE chan * 0.05\n#define KILL_RATE chan * 0.15\n#define DIFF vec2(0.2,0.05)\n#define ZOOM 1.0\n#define RADIUS 0.005\n\nfloat getChannel(sampler2D sam, vec2 uv)\n{\n    vec4 c = texture(sam,uv);\n    return max(min(c.r, c.g), min(max(c.r, c.g), c.b)); // https://github.com/Chlumsky/msdfgen\n}\n\nvec2 cell(vec2 fragCoord, vec2 pixel, vec2 dir, float scale, sampler2D sam, vec2 size)\n{\n    return texture(sam, fract((fragCoord + pixel * dir) / size.xy)).rg * scale;\n}\n\nvec2 laplacian2D(vec2 fragCoord, vec2 dir, float a, float b, sampler2D sam, vec2 size) \n{\n    float st = 1.;\n    a /= 4.;\n    b /= 4.;\n    return \n        cell(fragCoord, vec2(0., -st), dir, a, sam, size) +\n        cell(fragCoord, vec2(0., st), dir, a, sam, size) +\n        cell(fragCoord, vec2(st, 0.), dir, a, sam, size) +\n        cell(fragCoord, vec2(-st, 0.), dir, a, sam, size) +\n        cell(fragCoord, vec2(-st, -st), dir, b, sam, size) +\n        cell(fragCoord, vec2(-st, st), dir, b, sam, size) +\n        cell(fragCoord, vec2(st, -st), dir, b, sam, size) +\n        cell(fragCoord, vec2(st, st), dir, b, sam, size) -\n        cell(fragCoord, vec2(0., 0.), dir, 1., sam, size);\n}\n\nvec4 calc(vec2 vFragCoord, vec2 vSize, int vFrame, vec4 vMouse, sampler2D vBuffer, sampler2D vPattern, int vChan)\n{\n    vec4 res = vec4(0);\n    \n    vec2 uv = vFragCoord / vSize;\n    \n    if (vFrame < 10)\n    {\n        res = vec4(1,0,0,1);\n    }\n    else\n    {\n        float a = float(vFrame) * 0.1;\n        \n\t\tvec2 dir = normalize(vec2(a+cos(a),a-sin(a)));\n        \n        dir = vec2(1);\n        \n        float chan = texture(vPattern, uv)[vChan];\n        \n        vec2 diffusionCoef = DIFF;\n        float feedCoef = FEED_RATE;\n        float killCoef = KILL_RATE;\n            \n        vec2 ab = cell(vFragCoord, vec2(0,0), vec2(0,0), 1., vBuffer, vSize);\n        vec2 lp = laplacian2D(vFragCoord, dir, .5, .5, vBuffer, vSize);\n        \n        float reaction = ab.x * ab.y * ab.y;\n        vec2 diffusion = diffusionCoef * lp;\n        float feed = feedCoef * (1. - ab.x);\n        float kill = (feedCoef + killCoef) * ab.y;\n        \n        ab += diffusion + vec2(feed - reaction, reaction - kill);\n        \n    \tres = vec4(clamp(ab,-1.,1.),ab*chan);\n    }\n    \n    if (vMouse.z > 0.0)\n\t{\n\t\tvec2 mo = vMouse.xy / vSize / ZOOM;\n    \tif (length(uv-mo) < RADIUS)\n\t\t\tres = mix(vec4(0,1,0,1), vec4(1,0,0,1), length(uv-mo)); \n\t}\n    \n    return res;\n    \n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = calc(fragCoord, iResolution.xy, iFrame, iMouse, iChannel0, iChannel1, 0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = calc(fragCoord, iResolution.xy, iFrame, iMouse, iChannel0, iChannel1, 1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = calc(fragCoord, iResolution.xy, iFrame, iMouse, iChannel0, iChannel1, 2);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}