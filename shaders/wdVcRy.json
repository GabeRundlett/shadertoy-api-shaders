{
    "Shader": {
        "info": {
            "date": "1603180578",
            "description": "mouse control\n[url]https://inktober.com/[/url]\n#inktober2020 themes: [img]https://i.imgur.com/b3gMiu0.png[/img]",
            "flags": 0,
            "hasliked": 0,
            "id": "wdVcRy",
            "likes": 18,
            "name": "Fab21 #inktober2020 \"sleep\"",
            "published": 3,
            "tags": [
                "short",
                "golf",
                "inktober2020"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 380
        },
        "renderpass": [
            {
                "code": "#define L length//\n#define rot(a)      mat2( cos(a+vec4(0,11,33,0)) )            // rotation                  \n#define B(q,a,b,c)  max( (q).x-a, max( (q).y-b, (q).z-c) )    // box\n#define T(q,R,r)   ( L( vec2( L(L((q).xy) -R ), (q).z ) ) -r )// torus\n\nvoid mainImage(out vec4 O, vec2 U) {    \n    float t=9.,s,S,c,r,f,F=t;\n    vec3  R = iResolution, Y = vec3(0,1,0),\n          M = iMouse.z > 0. ? iMouse.xyz/R-.5 : vec3(4,2,0)/1e2*cos(iTime+vec3(0,11,0)),\n          D = normalize(vec3( U+U, -1.5*R.y ) - R ),          // ray direction\n          p = vec3(0), q,a,k;                                 // marching point along ray \n    \n    for ( O-=O ; O.x < 1. && t > .01 ; O+=.015 )\n        q = p, t=9.,\n        q.yz *= rot(-6. *M.y),                                // rotations,\n        q.xz *= rot(-6.4*M.x),  q +=  vec3(0,9,10),           // translation\n        k=q, k.xz = abs(k.xz), k.x<k.z ? k.xz=k.zx : U,       // crypt walls\n        t = min(t, s = min( 15.-L(k.yx), k.y )  ),\n        a = k, a.xz*=mat2(1,-1,1,1)*.5,                       // crypt arches\n        t = min(t, S = T( a.yzx, 15.,.3) ), \n        t = min(t, r = T( q- 14.2*Y, .6,.1) ),                // ring\n        a = abs(q+vec3(0,0,10)), t = min(t, B(a, 2.,1.,5.) ), // white base\n        q = vec3( abs(q.x)-7., q.y-5., q.z+10. ),\n        t = min(t, c = min( B(a, 1.8,3.,4.5) ,                // black coffin\n                            max( L( q.xz ) - .3, q.y) )),     // candlesticks\n        t = min(t, f = L((q-Y)/vec3(1,3,1)-.03*sin(30.*iTime+q.y))-.2 ), // flame\n        F = min(F,f),                                         // for glow\n        p += t*D;                                             // step forward = dist to obj          \n\n    \n    O = exp(-2.5*O);                                          // --- coloring\n    O += vec4(1,.5,.2,0)* ( 2./(f*f) + .05/(F*F) );           // flame lighting + halo\n    if (t==c || t==r) O *= .3;                                // coffin && roof ring\n    if (t==S)  s=S, k.z=5.;                                   // arches\n    if (t==s)  O *= vec4(1,.9,.8,1)                           // crypt walls\n                  * texture(iChannel0, vec2( .1*k.z, atan(k.y,k.x)/.63 ));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}