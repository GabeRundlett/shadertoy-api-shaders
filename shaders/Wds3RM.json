{
    "Shader": {
        "info": {
            "date": "1545430630",
            "description": "cellular automata: upstream pixel is attached to a river if only one river-pixel is found in its 3x3 neighborhood.\nColor is then inherited. Ttry fullscreen.\nMouse: eraser.\nChange #if in Image for colors instead of cycling.",
            "flags": 32,
            "hasliked": 0,
            "id": "Wds3RM",
            "likes": 17,
            "name": "watershed / bassin versant",
            "published": 3,
            "tags": [
                "2d",
                "simulation",
                "tree",
                "automata",
                "maze",
                "short",
                "dla",
                "branching",
                "aggregation",
                "watershed",
                "bassinversant"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 984
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, in vec2 U )\n{\n    O = T(0,0);\n    \n#if 1  // 0: color only.  1: + propagation cycling\n    if ( O.w != 0. )  \n        O =  .6 + .6 * cos( 6.3*(O.w+.2*iTime+hash3(O.rgb))  + vec4(0,23,21,0)  ); // hue https://www.shadertoy.com/view/ll2cDc\n#endif\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    if (iFrame < 15) {                     // draw init shape\n        O -= O;\n        if ( length(2.*U/R-1.) > .95 )\n            O = texture(iChannel1,U/R),\n            O.w = step( .5, hash3(vec3(U,0)));\n        return;\n    }\n\n    O = T(0,0);                            // restore previous state\n                                           // mouse eraser\n    if ( iMouse.z > 0. && length(U-iMouse.xy) < .1*R.y ) O -= O; \n    \n    if (hash3(vec3(U,iTime)) < .9) return; // random progression\n\n    int n=0, p;                            // grow rivers upstream\n    for (int k=0; k<3*3; k++)\n        if ( T(k%3-1,k/3-1).w > 0. ) n++, p=k;\n              // exactly one neighborh, so upstream river pixel\n    if (n==1) O = textureLod(iChannel0,(U+vec2(p%3-1,p/3-1))/R,0.),\n              O.w++;\n    //if (n==3*3-1) O--;        \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define T(x,y) texelFetch(iChannel0, ivec2(U+vec2(x,y)), 0)\n\n#define hash3(p) fract( sin( dot( p , vec3(127.1,311.7, 74.7) ) )*43758.5453123)\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}