{
    "Shader": {
        "info": {
            "date": "1672066394",
            "description": "-",
            "flags": 0,
            "hasliked": 0,
            "id": "cllGz2",
            "likes": 2,
            "name": "Patterns animation",
            "published": 3,
            "tags": [
                "pattern"
            ],
            "usePreview": 0,
            "username": "python273",
            "viewed": 174
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592653589793\n#define S 0.7\n#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1., 2. / 3., 1. / 3., 3.);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6. - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0., 1.), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 U = (fragCoord - .5*iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    U = U.yx;\n    for (int i = 0; i < 7; i++) {\n        U *= -1.;\n        U = vec2(\n            mod(U.x + floor(U.y / S) * S/2., S),\n            mod(U.y, S)\n        ) / S;\n        if ((U.y > U.x * 2.) || (U.y > (U.x * -2. + 2.))) {\n            U = vec2(mod(U.x + .5, 1.), 1. - U.y);\n        }\n        U = U.yx;\n        U *= rot((iTime-3.)*.02*PI);\n    }\n    U = mod(U, vec2(1.));\n    \n    //fragColor = vec4(U, 0., 1.); return;\n    fragColor = vec4(hsv2rgb(vec3(U.x, U.y*.4 + .6, 1.)), 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}