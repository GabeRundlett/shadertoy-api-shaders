{
    "Shader": {
        "info": {
            "date": "1709162111",
            "description": "A port of the spectre shader used by Ladysnakeâ€™s Requiem Minecraft mod, check the code for a link.",
            "flags": 0,
            "hasliked": 0,
            "id": "XXXSR4",
            "likes": 2,
            "name": "Spectre (Requiem mod)",
            "published": 3,
            "tags": [
                "minecraft",
                "port",
                "doctor4t"
            ],
            "usePreview": 0,
            "username": "cph101",
            "viewed": 190
        },
        "renderpass": [
            {
                "code": "/*\n    Authors: pyrofab, doctor4t\n    Porter: cph101\n \n    Based on the Requiem mod for Minecraft (https://shorturl.at/rDWX7)\n*/\n\nfloat SolidIntensity = 0.6;\nfloat RaysIntensity = 1.0;\nfloat Zoom = 2.0;\nvec3 OverlayColor = vec3(0.0, 0.7, 1.0);\n\nvec2 random2(vec2 st){\n  st = vec2( dot(st,vec2(127.1,311.7)),\n  dot(st,vec2(269.5,183.3)) );\n  return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\n// Value Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/lsf3WH\nfloat noise(vec2 st) {\n  vec2 i = floor(st);\n  vec2 f = fract(st);\n\n  vec2 u = f*f*(3.0-2.0*f);\n\n  return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n  dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n  mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n  dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nfloat shape(vec2 st, float a, float radius) {\n  float r = length(st)*2.0;\n  float m = abs(mod(a+iTime/4.,3.14*2.)-3.14)/4.6;\n  float f = radius;\n  m += noise(st+iTime*0.1)*.5;\n  f += sin(a*1.)*noise(st+iTime*.2) * 0.5;\n  f += (sin(a*20.)*.1*pow(m,2.));\n  // Up the contrast to make streaks\n  return f*f*(smoothstep(f,f+1.0,r));\n}\n\nfloat streaks(vec2 st, float a, float radius) {\n  float f = radius;\n  f += sin(a*20.)*noise(st+iTime*.2) * 0.5;\n  // Up the contrast\n  return pow(f, 10.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 texCoord ) {\n  vec2 st = gl_FragCoord.xy / iResolution.xy;\n  vec3 tex = texture(iChannel0, st).rgb;\n  st = (vec2(0.5)-st) * Zoom;\n  float a = atan(st.y, st.x);\n  float value = shape(st, a, 0.8);\n  vec3 color = mix(tex, OverlayColor, value * SolidIntensity);\n  color += streaks(st, a, 0.8) * value * RaysIntensity;\n\n  fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}