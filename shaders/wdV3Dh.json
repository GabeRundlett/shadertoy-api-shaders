{
    "Shader": {
        "info": {
            "date": "1570120394",
            "description": "first sound shader.\n\nat about 16 seconds a raspy sound is introduced, anyone know why ?\n\nand on iOS there's a ton of whitenoise in the background. hm.",
            "flags": 8,
            "hasliked": 0,
            "id": "wdV3Dh",
            "likes": 7,
            "name": "sound 1",
            "published": 3,
            "tags": [
                "sound",
                "melody",
                "bells",
                "chimes"
            ],
            "usePreview": 0,
            "username": "elenzil",
            "viewed": 446
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 RGBA, in vec2 XY )\n{\n    RGBA = vec4(vec3(0.25),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "const float PI  = 3.14159265359;\nconst float TAO = PI * 2.0;\nconst float HALFSTEP = pow(2.0, 1.0/12.0);\n\n\nconst float BELL_MODULO_FACTOR = 1.5 / 300.0;\n\n\nfloat bell(float t, float hz, float attack, float decay) {\n    float T = t * TAO;\n\n    // basic pitch\n    float f = sin(T * hz);\n    \n    // modulo\n    f *= sin(T * hz * BELL_MODULO_FACTOR);\n    \n    // attack\n    f *= pow(smoothstep(0.0, attack, t), 2.0);\n    \n    // decay\n    f *= pow(smoothstep(decay, 0.0, t), 2.0);\n    \n    return f;\n}\n\nvec2 bell2(float t, float hz, float attack, float decay) {\n    vec2 v;\n    v.x = bell(t, hz * 0.98, attack, decay);\n    v.y = bell(t, hz / 0.98, attack, decay);\n    return v;\n}\n\nfloat hs(float num) {\n    return pow(HALFSTEP, num);\n}\n\nvec2 mixer(in vec2 dst, in vec2 src, float srcWeight, inout float dstWeightSum) {\n\tdstWeightSum += srcWeight;\n    return mix(dst, src, srcWeight / dstWeightSum);\n}\n\nvec2 mainSound( in int samp, float t )\n{\n    float totalLoopTime = 8.0;\n    float bellBaseHz = 300.0;\n    float decay = totalLoopTime - 1.0;\n    \n    vec2 v = vec2(0.0);\n    float dws = 0.0;\n    \n    float delay;\n    \n    delay = 0.00 * totalLoopTime;\n    v = mixer(v, step(delay, t) * bell2(mod(t - delay, totalLoopTime), bellBaseHz          , 0.5, decay), 1.0, dws);\n\n    delay = 0.25 * totalLoopTime;\n    v = mixer(v, step(delay, t) * bell2(mod(t - delay, totalLoopTime), bellBaseHz * hs(4.0), 0.5, decay), 1.0, dws);\n\n    delay = 0.50 * totalLoopTime;\n    v = mixer(v, step(delay, t) * bell2(mod(t - delay, totalLoopTime), bellBaseHz * hs(9.0), 0.5, decay), 1.0, dws);\n\n    delay = 0.75 * totalLoopTime;\n    v = mixer(v, step(delay, t) * bell2(mod(t - delay, totalLoopTime), bellBaseHz / hs(1.0), 0.5, decay), 1.0, dws);\n    \n    // prevent small pop at the beginning from looped sounds\n\t// const float globalAttack = 0.1;\n    // v *= smoothstep(0.0, globalAttack, t);\n\n    \n    return v;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}