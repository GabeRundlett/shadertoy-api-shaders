{
    "Shader": {
        "info": {
            "date": "1566173087",
            "description": "i never know what to put here...",
            "flags": 0,
            "hasliked": 0,
            "id": "tt2SDm",
            "likes": 0,
            "name": "big eyes",
            "published": 3,
            "tags": [
                "2d",
                "eyes"
            ],
            "usePreview": 0,
            "username": "lucastakejame",
            "viewed": 255
        },
        "renderpass": [
            {
                "code": "#define SIN(t) (.5*sin(t) + .5)\n#define ss(a,b,c) smoothstep(a,b,c)\n#define tt iTime\n\n\nfloat eye(vec2 uv, vec2 center, float rad, float falloff)\n{\n    return smoothstep(rad + falloff + .001, rad - falloff, length(uv-center));\n}\n\nvec3 eyeRGB(vec2 uv, vec2 center, float rad, float falloff, vec2 modul)\n{\n    float eyer = eye(uv, center, rad, falloff);\n    falloff = falloff*modul.x + modul.y;\n    float eyeg = eye(uv, center, rad, falloff);\n    falloff = falloff*modul.x + modul.y;\n    float eyeb = eye(uv, center, rad, falloff);\n    \n    // Time varying pixel color\n    return vec3(eyer, eyeg, eyeb);\n\n}\n\nfloat smile(vec2 uv, vec2 center, float amount)\n{\n \n    float rad = .4;\n    float falloff = .01;\n    float smile0 = eye(uv, center, rad, falloff);\n    float smile1 = eye(uv, center+vec2(0.,.1 *amount), rad, falloff);\n    \n    return smoothstep(0., 1., smile0 - smile1);\n}\n\nvec2 rot(vec2 uv, float ang)\n{\n    vec2 i = vec2(cos(ang), sin(ang));\n    return vec2(uv.x*i.x - uv.y*i.y, uv.x*i.y + uv.y*i.x);\n}\n\nfloat maskT(float t, vec2 inter, float falloff)\n{\n    float mid = (inter.x + inter.y)/2.;\n    float amp = abs(inter.x - mid);\n    return ss(amp+falloff, amp-falloff, abs(t - mid)); \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.*fragCoord - iResolution.xy)/iResolution.y;\n\n    // eyes\n    \n    float tm10 = mod(tt,10.);\n    float teyeslide = ss(2. + 8.*float(tm10>9.5),\n                   9. + .5*float(tm10>9.5),\n                   tm10);\n    \n    vec2 eyeloc = vec2(.4);\n    vec3 eye = eyeRGB(uv, eyeloc, .3, .1, vec2(1., 0.1));\n    //blinking\n    float t0 = maskT(mod(tt, 4.), vec2(0.4, .5), .01);\n    t0 = max(t0,maskT(mod(tt, 4.), vec2(0.2, .3), .01));\n    t0 = max(t0,maskT(mod(tt, 4.), vec2(2., 2.3), .1));\n    eye *= 1. - 200.*t0*abs(uv.y - .4);\n    \n    vec2 eyeloc2 = vec2(-.4, .4 + teyeslide*(-.04));\n    vec3 eye2 = eyeRGB(uv, eyeloc2 + vec2(0., -.3*teyeslide), .3, .1, vec2(1., 0.1));\n    \n    // eyebrow\n    eye *= ss(0.3,.0, dot(uv-eyeloc + vec2(0., -.3*teyeslide), vec2(1.,1.)));\n    eye2 *= ss(0.3,.0, dot(uv-eyeloc2, vec2(-1.,1.)));\n    \n    vec3 iris = eyeRGB(uv, vec2(.4), .1, .1, vec2(.2, 0.));\n    vec3 iris2 = eyeRGB(uv, vec2(-.4,.4 + teyeslide*(-.2)), .1, .1, vec2(.2, 0.));\n    \n    // Time varying pixel color\n    vec3 col = eye + eye2 - iris - iris2;\n    \n    float t1 = maskT(mod(tt, 3.), vec2(0.2, 1.2), .3);\n    t1 = max(t1, maskT(mod(tt, 5.), vec2(2., 2.7), .2));\n    float t2 = maskT(mod(tt, 2.), vec2(0.5, 0.7), .1);\n    float smil = smile(uv*vec2(1. + t2*.1,1.+ t1*.2), vec2(0.,-.2), .5);\n    smil *= ss(0.,.1, SIN(uv.x * 80.));\n    float smil2 = smile(rot(uv*1.8,.5), vec2( .7,.4), .2 + .05*sin(35.*tt));\n    float smil3 = smile(rot(uv*1.8,-.5), vec2(-.7,.4), .2);\n    \n    col += smil;\n    col += smil2;\n    col += smil3;\n    \n    col = max(col, .6*eyeRGB(uv, vec2(.0), .9, .05, vec2(1., 0.45)));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}