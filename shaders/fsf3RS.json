{
    "Shader": {
        "info": {
            "date": "1616102256",
            "description": "fork riff #1234-v3",
            "flags": 8,
            "hasliked": 0,
            "id": "fsf3RS",
            "likes": 1,
            "name": "fork riff #1234-v3",
            "published": 3,
            "tags": [
                "forkriff1234v3"
            ],
            "usePreview": 0,
            "username": "jorge2017a1",
            "viewed": 263
        },
        "renderpass": [
            {
                "code": "//https://www.shadertoy.com/view/Mss3D7\n#define PI (3.141592653589793238462643383)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv=((fragCoord.xy/iResolution.xy)-vec2(0.5,0.5))*2.0;\n\tuv.y=abs(uv.y)+0.5;\n    uv.x+=0.5*sin(iTime);\n\tfragColor=texture(iChannel0,fract(vec2((uv.x/uv.y)+(sin(iTime*PI*0.00125)*2.0),\n\t\t\t\t\t\t\t\t\t\t\t\t(1.0/uv.y)+(cos(iTime*PI*0.03)*2.0))))*uv.y;\n}\t\t\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//modificado por jorge flores p.  -18-mar-2020\n\n//Created by nabr in 2019-06-05\n//https://www.shadertoy.com/view/WlSGWw\n\n\n\n// nabr\n// https://www.shadertoy.com/view/WlSGWw\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// https://creativecommons.org/licenses/by-nc-sa/3.0/\n\n\n\nvec2 synthv2( float t)\n{\n// --------- SYNTH\n    int t1=int(t) % 4;\n    vec2 valor=mat4x2(496, 656, 696, 376, 776, 456, 656, 276)[t1];\n    \n\tvec2 s = sin(t * mat4x2(496, 656, 696, 376, 776, 456, 656, 276)[t1]) - .5;\n    vec2 s2 = tan(t * valor) - .5;\n    vec2 s3 = sin(t *valor*valor ) - .5;\n    \n    \n\tif(t<6.) // intro\n    {\n\t\ts *= sin(s * mod(t, 8.) + 18. * sin(t));\n        s+=s2;\n    }\n\telse \n    {\n\t\t\n        s *=  sin(s * mod(t*0.5, 8.) * 16.) ;\n        s=s*s2;\n    }   \n    return s;\n }  \n   \n\nvec2 m(float t)\n{\n\t\n   \n    vec2 s= synthv2( t);\n   \n   \n\t// --------- DRUMS(kick)\n    \n\tfloat tm = mod(t, .5);\n    float tm2 = mod(t, 1.8);\n    \n\tif(t<6.) tm = mod(t, 1.5); // intro\n\tfloat finetune = 1.8;\n    \n   \n    \n\t// kick\n\t\n    float k = (sin(80.0 * exp(-sin(tm * finetune) * 10.0)) * exp(-tm * 10.0));\n\tk *= cos(120.0 * exp(-tm * 2.0));\n    \n    \n    \n    // sub\n\tfloat kovt = (k - sin(tm * 580.) * exp(-tm * 1.5));\n\tkovt *= min(1., tm * 100.) * max(0., .5 - tm);\n\tkovt -= (.25 - asin(kovt * tm * 12.));\n\tk *= min(1., tm * 500.) * max(0., 1. - tm);\n\tk = 1.9 * (kovt + k);\n    \n    \n    \n\t\n    // -------- MASTER\n    \n\treturn (k + .4 * s ) * .25;\n}\n\n\n\nvec2 mainSound( in int samp,float time)\n{return m(time);}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}