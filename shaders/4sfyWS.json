{
    "Shader": {
        "info": {
            "date": "1489528123",
            "description": "Donjon Tunnel 2",
            "flags": 32,
            "hasliked": 0,
            "id": "4sfyWS",
            "likes": 14,
            "name": "Donjon Tunnel 2",
            "published": 3,
            "tags": [
                "tunnel",
                "2",
                "donjon"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 748
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2017 (twitter:@aiekick)\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// based on https://www.shadertoy.com/view/ltK3WD\nvec4 tex( vec2 g )\n{\n\tvec2 p = g*0.2; vec4 f = vec4(9.);\n    \n    float t = iTime * 0.1;\n    \n    for(int x=-2;x<=2;x++)\n    for(int y=-2;y<=2;y++)\n    {\t\n        p = vec2(x,y);\n\t\tp += .5 + .5*sin( t * 10. + 9. * fract(sin((floor(g)+p)*mat2(2,5,5,2)))) - fract(g);\n        //p *= mat2(cos(t), -sin(t), sin(t), cos(t));\n        f.y = max(abs(p.x)*.866 - p.y*.5, p.y);\n        if (f.y < f.x)\n        {\n            f.x = f.y;\n            f.zw = p;\n        }\n    }\n\t\n    vec3 n = vec3(0);\n    \n    if ( f.x == -f.z*.866 - f.w*.5) \tn = vec3(1,0,0);\n\tif ( f.x == f.z*.866 - f.w*.5) \t\tn = vec3(0,1,0);\n\tif ( f.x == f.w) \t\t\t\t\tn = vec3(0,0,1);\n\t\n    return sqrt(texture(iChannel1, -n)*f.x*1.5);\n}\n\nvoid mainImage( out vec4 f, vec2 g )\n{\n    f.xyz = iResolution;\n\tg = (g+g-f.xy)/f.y;\n    \n    float t = iTime * .5;\n    g.y += sin(t)*.5;\n    \n    float a = atan(g.x,g.y)/1.57;\n    float d = max(max(abs(g.x),abs(g.y)), min(abs(g.x)+g.y, length(g)));\n   \n    vec2 k = vec2(a,.8/d + t);\n    \n    // ground\n    f = texture(iChannel0, k.yx) * d;\n    \n    // wall\n    if (d<=abs(g.x)+0.05||d<=abs(g.x)+g.y)\n        f = tex(k*6.) * d;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "cubemap",
                        "id": 27,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 46,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// based on Triangular Voronoi https://www.shadertoy.com/view/ltKGWD\nvoid mainImage( out vec4 f, vec2 g )\n{\n\tvec2 p = g /= iResolution.y / 5.; f.x=9.;\n    \n    float t = iTime * 0.1;\n    \n    for(int x=-2;x<=2;x++)\n    for(int y=-2;y<=2;y++)\n    {\t\n        p = vec2(x,y);\n\t\tp += .5 + .5*sin( t * 10. + 9. * fract(sin((floor(g)+p)*mat2(2,5,5,2)))) - fract(g);\n        //p *= mat2(cos(t), -sin(t), sin(t), cos(t));\n        f.y = max(abs(p.x)*.866 - p.y*.5, p.y);\n        if (f.y < f.x)\n        {\n            f.x = f.y;\n            f.zw = p;\n        }\n    }\n\t\n    vec3 n = vec3(0);\n    \n    if ( f.x == -f.z*.866 - f.w*.5) \tn = vec3(1,0,0);\n\tif ( f.x == f.z*.866 - f.w*.5) \t\tn = vec3(0,1,0);\n\tif ( f.x == f.w) \t\t\t\t\tn = vec3(0,0,1);\n\t\n    f = sqrt(texture(iChannel0, -n)*f.x*1.5);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 27,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}