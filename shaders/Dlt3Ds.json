{
    "Shader": {
        "info": {
            "date": "1683553893",
            "description": "Why do people use \"#define ZERO (min(iFrame,0))\" instead of 0 (usually in for loop)?  This shader proves iFrame is never negative (at least in terms of the bounds of this test). Force the compiler to do something? Time delay?  What's the reason to use it?",
            "flags": 32,
            "hasliked": 0,
            "id": "Dlt3Ds",
            "likes": 3,
            "name": "Why #define ZERO (min(iFrame,0))",
            "published": 3,
            "tags": [
                "glsl",
                "shadertoy",
                "coding",
                "programming",
                "uniforms",
                "iframe"
            ],
            "usePreview": 0,
            "username": "mrmcsoftware",
            "viewed": 273
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 FragColor, in vec2 FragCoord )\n{\nvec2 uv=FragCoord.xy/iResolution.xy;\nFragColor=vec4(0.0);\nvec3 col;\nif (iFrame==-5) { col=vec3(127.0,0.0,0.0); }\nelse if (iFrame==-4) { col=vec3(255.0,255.0,0.0); }\nelse if (iFrame==-3) { col=vec3(0.0,255.0,255.0); } \nelse if (iFrame==-2) { col=vec3(255.0,255.0,255.0); }\nelse if (iFrame==-1) { col=vec3(255.0,0.0,255.0); }\nelse if (iFrame==0) { col=vec3(255.0,0.0,0.0); }\nelse if (iFrame==1) { col=vec3(0.0,255.0,0.0); }\nelse if (iFrame==2) { col=vec3(0.0,0.0,255.0); }\nelse if (iFrame==3) { col=vec3(127.0,127.0,127.0); }\nelse if (iFrame==4) { col=vec3(0.0,127.0,127.0); }\nelse if (iFrame==5) { col=vec3(127.0,127.0,0.0); }\nelse if (iFrame==6) { col=vec3(127.0,0.0,127.0); }\nelse if (iFrame==7) { col=vec3(0.0,0.0,127.0); }\nelse if (iFrame==8) { col=vec3(0.0,127.0,0.0); }\nelse { col=vec3(0.0,0.0,0.0); }\nfloat yvs=float(iFrame+5)/14.0;\nfloat yve=float(iFrame+6)/14.0;\nif ((uv.x>.8)&&(uv.y<yve)&&(uv.y>=yvs)) { col=vec3(col/255.0); }\nelse { col=vec3(0.0); }\nFragColor=texture(iChannel0,uv)+texture(iChannel1,uv)+texture(iChannel2,uv)+texture(iChannel3,uv)+vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv=fragCoord.xy/iResolution.xy;\nfragColor=texture(iChannel0,uv);\nvec3 col;\nif (iFrame==-5) { col=vec3(127.0,0.0,0.0); }\nelse if (iFrame==-4) { col=vec3(255.0,255.0,0.0); }\nelse if (iFrame==-3) { col=vec3(0.0,255.0,255.0); }\nelse if (iFrame==-2) { col=vec3(255.0,255.0,255.0); }\nelse if (iFrame==-1) { col=vec3(255.0,0.0,255.0); }\nelse if (iFrame==0) { col=vec3(255.0,0.0,0.0); }\nelse if (iFrame==1) { col=vec3(0.0,255.0,0.0); }\nelse if (iFrame==2) { col=vec3(0.0,0.0,255.0); }\nelse if (iFrame==3) { col=vec3(127.0,127.0,127.0); }\nelse if (iFrame==4) { col=vec3(0.0,127.0,127.0); } \nelse if (iFrame==5) { col=vec3(127.0,127.0,0.0); } \nelse if (iFrame==6) { col=vec3(127.0,0.0,127.0); }\nelse if (iFrame==7) { col=vec3(0.0,0.0,127.0); } \nelse if (iFrame==8) { col=vec3(0.0,127.0,0.0); } \nelse { col=vec3(0.0,0.0,0.0); }\nfloat yvs=float(iFrame+5)/14.0;\nfloat yve=float(iFrame+6)/14.0;\nif ((uv.x<.19)&&(uv.y<yve)&&(uv.y>=yvs)) { fragColor=vec4(col/255.0,1.0); }\nfloat x=.2-.12;\nfor (int i=-5;i<=8;i++)\n    {\n    yvs=float(i+5)/14.0;\n    if (i<0) { fragColor+=dchar(iChannel3,(uv-vec2(x+.05-.027,yvs+.005))*16.0,45).x; }\n    fragColor+=dchar(iChannel3,(uv-vec2(x+.05,yvs))*16.0,i<0?-i+48:i+48).x;\n    fragColor+=dchar(iChannel3,(uv-vec2(x-.08,yvs))*16.0,65).x;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv=fragCoord.xy/iResolution.xy;\nfragColor=texture(iChannel0,uv);\nvec3 col;\nif (iFrame==-5) { col=vec3(127.0,0.0,0.0); }\nelse if (iFrame==-4) { col=vec3(255.0,255.0,0.0); }\nelse if (iFrame==-3) { col=vec3(0.0,255.0,255.0); }\nelse if (iFrame==-2) { col=vec3(255.0,255.0,255.0); }\nelse if (iFrame==-1) { col=vec3(255.0,0.0,255.0); }\nelse if (iFrame==0) { col=vec3(255.0,0.0,0.0); }\nelse if (iFrame==1) { col=vec3(0.0,255.0,0.0); }\nelse if (iFrame==2) { col=vec3(0.0,0.0,255.0); }\nelse if (iFrame==3) { col=vec3(127.0,127.0,127.0); }\nelse if (iFrame==4) { col=vec3(0.0,127.0,127.0); } \nelse if (iFrame==5) { col=vec3(127.0,127.0,0.0); } \nelse if (iFrame==6) { col=vec3(127.0,0.0,127.0); }\nelse if (iFrame==7) { col=vec3(0.0,0.0,127.0); } \nelse if (iFrame==8) { col=vec3(0.0,127.0,0.0); } \nelse { col=vec3(0.0,0.0,0.0); }\nfloat yvs=float(iFrame+5)/14.0;\nfloat yve=float(iFrame+6)/14.0;\nif ((uv.x<.39)&&(uv.x>.2)&&(uv.y<yve)&&(uv.y>=yvs)) { fragColor=vec4(col/255.0,1.0); }\nfloat x=.4-.12;\nfor (int i=-5;i<=8;i++)\n    {\n    yvs=float(i+5)/14.0;\n    if (i<0) { fragColor+=dchar(iChannel3,(uv-vec2(x+.05-.027,yvs+.005))*16.0,45).x; }\n    fragColor+=dchar(iChannel3,(uv-vec2(x+.05,yvs))*16.0,i<0?-i+48:i+48).x;\n    fragColor+=dchar(iChannel3,(uv-vec2(x-.08,yvs))*16.0,66).x;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv=fragCoord.xy/iResolution.xy;\nfragColor=texture(iChannel0,uv);\nvec3 col;\nif (iFrame==-5) { col=vec3(127.0,0.0,0.0); }\nelse if (iFrame==-4) { col=vec3(255.0,255.0,0.0); }\nelse if (iFrame==-3) { col=vec3(0.0,255.0,255.0); }\nelse if (iFrame==-2) { col=vec3(255.0,255.0,255.0); }\nelse if (iFrame==-1) { col=vec3(255.0,0.0,255.0); }\nelse if (iFrame==0) { col=vec3(255.0,0.0,0.0); }\nelse if (iFrame==1) { col=vec3(0.0,255.0,0.0); }\nelse if (iFrame==2) { col=vec3(0.0,0.0,255.0); }\nelse if (iFrame==3) { col=vec3(127.0,127.0,127.0); }\nelse if (iFrame==4) { col=vec3(0.0,127.0,127.0); } \nelse if (iFrame==5) { col=vec3(127.0,127.0,0.0); } \nelse if (iFrame==6) { col=vec3(127.0,0.0,127.0); }\nelse if (iFrame==7) { col=vec3(0.0,0.0,127.0); } \nelse if (iFrame==8) { col=vec3(0.0,127.0,0.0); } \nelse { col=vec3(0.0,0.0,0.0); }\nfloat yvs=float(iFrame+5)/14.0;\nfloat yve=float(iFrame+6)/14.0;\nif ((uv.x<.59)&&(uv.x>.4)&&(uv.y<yve)&&(uv.y>=yvs)) { fragColor=vec4(col/255.0,1.0); }\nfloat x=.6-.12;\nfor (int i=-5;i<=8;i++)\n    {\n    yvs=float(i+5)/14.0;\n    if (i<0) { fragColor+=dchar(iChannel3,(uv-vec2(x+.05-.027,yvs+.005))*16.0,45).x; }\n    fragColor+=dchar(iChannel3,(uv-vec2(x+.05,yvs))*16.0,i<0?-i+48:i+48).x;\n    fragColor+=dchar(iChannel3,(uv-vec2(x-.08,yvs))*16.0,67).x;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv=fragCoord.xy/iResolution.xy;\nfragColor=texture(iChannel0,uv);\nvec3 col;\nif (iFrame==-5) { col=vec3(127.0,0.0,0.0); }\nelse if (iFrame==-4) { col=vec3(255.0,255.0,0.0); }\nelse if (iFrame==-3) { col=vec3(0.0,255.0,255.0); }\nelse if (iFrame==-2) { col=vec3(255.0,255.0,255.0); }\nelse if (iFrame==-1) { col=vec3(255.0,0.0,255.0); }\nelse if (iFrame==0) { col=vec3(255.0,0.0,0.0); }\nelse if (iFrame==1) { col=vec3(0.0,255.0,0.0); }\nelse if (iFrame==2) { col=vec3(0.0,0.0,255.0); }\nelse if (iFrame==3) { col=vec3(127.0,127.0,127.0); }\nelse if (iFrame==4) { col=vec3(0.0,127.0,127.0); } \nelse if (iFrame==5) { col=vec3(127.0,127.0,0.0); } \nelse if (iFrame==6) { col=vec3(127.0,0.0,127.0); }\nelse if (iFrame==7) { col=vec3(0.0,0.0,127.0); } \nelse if (iFrame==8) { col=vec3(0.0,127.0,0.0); } \nelse { col=vec3(0.0,0.0,0.0); }\nfloat yvs=float(iFrame+5)/14.0;\nfloat yve=float(iFrame+6)/14.0;\nif ((uv.x<.79)&&(uv.x>.6)&&(uv.y<yve)&&(uv.y>=yvs)) { fragColor=vec4(col/255.0,1.0); }\nfloat x=.8-.12;\nfor (int i=-5;i<=8;i++)\n    {\n    yvs=float(i+5)/14.0;\n    if (i<0) { fragColor+=dchar(iChannel3,(uv-vec2(x+.05-.027,yvs+.005))*16.0,45).x; }\n    fragColor+=dchar(iChannel3,(uv-vec2(x+.05,yvs))*16.0,i<0?-i+48:i+48).x;\n    fragColor+=dchar(iChannel3,(uv-vec2(x-.08,yvs))*16.0,68).x;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec4 dchar(sampler2D chan,vec2 p,int c)\n{\nvec2 dFdx=dFdx(p/16.0),dFdy=dFdy(p/16.0);\nif ((p.x<0.0)||(p.x>1.0)||(p.y<0.0)||(p.y>1.0)) return(vec4(0,0,0,1e5));\nreturn(textureGrad(chan,p/16.0+fract(vec2(c,15-c/16)/16.0),dFdx,dFdy));\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}