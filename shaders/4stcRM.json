{
    "Shader": {
        "info": {
            "date": "1518216972",
            "description": "This is the optimal packing of regular pentagons.",
            "flags": 0,
            "hasliked": 0,
            "id": "4stcRM",
            "likes": 5,
            "name": "penta packing",
            "published": 3,
            "tags": [
                "tiling",
                "packing",
                "short",
                "pentagons"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 552
        },
        "renderpass": [
            {
                "code": "// see different implementation here: https://www.shadertoy.com/view/XsdyR7\n\n// draw line\n#define L(a,b) O+= 2e-2/length( clamp( dot(U-(a),v=b-(a))/dot(v,v), 0.,1.) *v - U+a ) // segments\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U -= .5; O-=O;\n    vec2 M = vec2(1.31,1), v;\n    \n    U *= M *8./iResolution.y ;\n    if ( mod(U.x,2.) > 1. )  U.y = .59-U.y; //, O.g+=.3; // odd columns\n\n    U = 2.*fract(U)-1.; U.y -= .11; U /= M;              // local frame\n    O.r += 1.-1.1*length(U);                             // red disk\n\n    U.x = abs(U.x);                                      // horiz symmetry\n    L(vec2(.5,-.8),vec2(.95,-2));                        // ext line to next tile\n\n    float a = atan(U.x,U.y), l=length(U), e=.628;        // --- draw pentagon\n    a = mod(a+e,e+e)-e;                                  // 5-fold symmetry\n    U = l * vec2(cos(a),sin(a));\n    L(vec2(.87,-1),vec2(.87,1));                         // draw 1 side\n \n    \n    \n        \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}