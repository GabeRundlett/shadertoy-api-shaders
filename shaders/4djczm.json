{
    "Shader": {
        "info": {
            "date": "1491405539",
            "description": "/A basic parametric curve plotter using dots.\nThis is one of my firsts shaders, there are lots of imperfections.",
            "flags": 0,
            "hasliked": 0,
            "id": "4djczm",
            "likes": 6,
            "name": "Parametric curve dot plotter",
            "published": 3,
            "tags": [
                "curve",
                "dots",
                "parametric"
            ],
            "usePreview": 0,
            "username": "apazat",
            "viewed": 757
        },
        "renderpass": [
            {
                "code": "// Author : Antoine Pazat\n// 04/05/2017\n\n// Basic parametric curve plotter using dots.\n// Note : This is one of my firsts shaders, there are lots of imperfections.\n// A parametric curve is described by two functions of one parameter t\n// (one for the x axis one for the y axis)\n\n#define PI 3.14\n\n// Basic circle function : \n// Draws a white circle on a black background\n// [in] vec2 uv :\t\tnormalized coordinates of the window\n// [in] vec2 pos :\t\tcoordinates of the center of the circle\n// [in]\tfloat radius :\tradius of the circe\n// [out]float : \t\tfloat value describing the circle\nfloat circle(vec2 uv, vec2 pos, float radius){\n    return smoothstep(0.0,0.002,radius-length(uv + pos));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalizing the coordinates between -1 and 1\n    vec2 uv = -1. + 2.*fragCoord.xy / iResolution.xy;\n    // Ratio correction\n    uv.x *= iResolution.x/iResolution.y;\n    // Initializing color to black\n    vec3 color = vec3(0.);\n    // Vector describing the parametric function.\n    vec2 pos;\n    \n    // Iteration on the parameter value.\n    // x and y axes values are between -1. and 1., so t should be varying between -2. and 2.\n    // (not sure the t value is mathematically correct)\n    for(float t=-2.; t<2.02; t+=.02){       \n        \n        // LISSAJOUS CURVE EQUATIONS\n        pos.x = sin(4.*t+(iTime));\n        pos.y = cos(6.*t);\n        \n        // Draws a white circle for each t position computed\n        color += circle(uv, pos,.05);        \n        \n    }//for\n    \n    fragColor = vec4(color,1.0);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}