{
    "Shader": {
        "info": {
            "date": "1423589005",
            "description": "If this crashes anyone's browser let me know. Its just a simplified version of my last shader with a \"gradient\" check to slow down the stepping. ",
            "flags": 32,
            "hasliked": 0,
            "id": "XlfGzX",
            "likes": 84,
            "name": "More Spirograph",
            "published": 3,
            "tags": [
                "spirograph",
                "rollingfractal",
                "orbitfractal"
            ],
            "usePreview": 1,
            "username": "eiffie",
            "viewed": 17923
        },
        "renderpass": [
            {
                "code": "//More Spirograph by eiffie\n//Trying (and failing) to make a better DE for parameterized curves.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec3 col=texture(iChannel0,fragCoord/iResolution.xy).rgb;\n    fragColor=vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//More Spirograph by eiffie\n//Trying (and failing) to make a better DE for parameterized curves.\n\n#define STEPS 50\n#define ITERS 9\n\nfloat scale;\nfloat Config(float t){\n\tfloat sgn=1.0;\n\tif(mod(t,54.0)>27.0)sgn=-1.0;\n\tt=floor(mod(t,27.0));\n\tif(t<10.0)\n        return (2.0+t*0.25)*sgn;\n\tt-=10.0;\n\tif(t<10.0)return (2.0+t*0.33333)*sgn;\n\tt-=10.0;\n    if(t<1.0)return 3.82845*sgn; //I have no idea what this pattern is (similar to note freq)\n\tif(t<2.0)return 3.64575*sgn; //these give the regular polygons\n\tif(t<3.0)return 3.44955*sgn;\n\tif(t<4.0)return 2.7913*sgn;\n\tif(t<5.0)return 2.5616*sgn;\n\tif(t<6.0)return 2.4495*sgn;\n\treturn 2.30275*sgn;\n}\nvec2 F(float t){\n\tfloat a=t,r=1.0;\n\tvec2 q=vec2(0.0);\n\tfor(int j=0;j<ITERS;j++){\n\t\tq+=vec2(cos(a),sin(a))*r;\n\t\ta*=scale;r/=abs(scale);\n\t}\n\treturn q;\n}\nvec2 DF(vec2 p, float t){\n    float d1=length(p-F(t)),dt=0.1*d1,d2=length(p-F(t+dt));\n\tdt/=max(dt,d1-d2);\n\treturn vec2(min(d1,d2),0.4*log(d1*dt+1.0));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec3 col=texture(iChannel0,fragCoord/iResolution.xy).rgb;\n\tvec2 p=(2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n\tp*=1.75;\n    float tim=(iTime+99.0)*0.2;\n\tscale=Config(tim);//mix(Config(tim),Config(tim+1.0),smoothstep(0.5,1.0,fract(tim)));\n\tfloat t=iTime*100.0,d=100.0;\n\tfor(int i=0;i<STEPS;i++){\n\t\tvec2 v=DF(p,t);\n\t\td=min(d,v.x);\n\t\tt+=v.y;\n\t}\n\td=smoothstep(0.0,0.01,d);\n\tcol=mix(min(col,vec3(d*d*d,d*d,d)),vec3(1.0),0.01);\n\tfragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}