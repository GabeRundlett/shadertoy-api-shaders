{
    "Shader": {
        "info": {
            "date": "1468176924",
            "description": "just for fun .. copy paste from https://www.shadertoy.com/view/lt3Gz4 ..reduced by 1 char diving by 60. the test resolutions constants.\n",
            "flags": 0,
            "hasliked": 0,
            "id": "Mt3GR8",
            "likes": 1,
            "name": "[SH16A] 591 rip of the rip :D",
            "published": 3,
            "tags": [
                "minimize"
            ],
            "usePreview": 0,
            "username": "pellicus",
            "viewed": 562
        },
        "renderpass": [
            {
                "code": "// ripped from the Coyote version :D\n// I think that Coyote should take a lot of points for this compo.. He helped everyone!\n// anyway I tried to reduce of 1 char playing with the resolution trick constants..\n\n\n#define V vec3(\n#define N normalize(V\n\nvoid mainImage(out vec4 o, vec2 r) {\n\n    vec3 p = V+2, .851, -2.87677),\n         c = V+1, 0, 0),\n         n = c,\n         e, //no gain, but maybe someone else can use it somehow\n         w = N.2 * c + p)),\n         d = N-cross(c, w))),\n\n/**/\n//592 char variant which is fixed to 1920x1080, which, according to\n//the rules is going to be the test resolution\n         g;\n         d = w = mat3(d, cross(d, w), w) * N+vec2(16,9)-r/60.,18));\n/**/\n\n/*\n//596 char variant, resolution independent\n         g = iResolution;\n         d = w = mat3(d, cross(d, w), w) * N.5*g.xy-r, g.y));\n/**/\n    \n    for (int i = 0; i < 128; i++)\n        g = clamp(ceil(p - .5), -2., 2.),\n        g.x = .4 - .3 * fract(e = g*2.5 + g.z*.5 + 6.).y,\n        p -= i == 63 ?\n            d = mod(p, 2.) - 1.,\n            c = p.x > .02 ?\n                n = N+p - g)),\n        \t\tc + c + .02 * V-8,3,6) * floor(e.y)\n            :\n                V.0 < d.y * d.z ?\n                \t.8\n                :\n                \ttexture( iChannel0, .1 * p.yz).r)\n                        * smoothstep(0., .5, length(p - sign(g - g * c))),\n            d = N-7, 6, 5)),\n            d * .01\n        :\n            d * min(length(p - g) - g, p).x;\n\n    o.rgb = sqrt(\n        dot(n, -d) * V+p.x>2.) * (\n            pow(max(dot(reflect(w, n), d), 0.), 16.) +\n            c * V.6,.51,.33)\n        )\n        + c * ++n.x * V.5,.7,1) / 8.\n    );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}