{
    "Shader": {
        "info": {
            "date": "1701357761",
            "description": "Looped square / command key",
            "flags": 0,
            "hasliked": 0,
            "id": "dlcBzB",
            "likes": 13,
            "name": "Looped Square",
            "published": 3,
            "tags": [
                "2d",
                "distancefield",
                "sdf"
            ],
            "usePreview": 0,
            "username": "cmzw",
            "viewed": 283
        },
        "renderpass": [
            {
                "code": "// https://www.shadertoy.com/user/timestamp\nfloat sdLoopedSquare(vec2 p)\n{\n    p = abs(p) - .5;\n    vec2 q = abs(p + .25);\n    return max(p.x,p.y) > 0.\n        ? abs(length(p) - .25)\n        : min(q.x, q.y);    \n}\n\n/*\nfloat sdLoopedSquare(vec2 p)\n{\n    p *= 2.0;\n    p = abs(p)-1.0;\n    vec2 b = (p + vec2(p.y, -p.x))*sqrt(0.5);\n    vec2 c = abs(p + 0.5);\n    float d = max(p.x,p.y) * 10.0;\n    float e = length(vec2(abs(length(p)-.5),\n        step(0.38, abs(atan(b.y,b.x)*0.1591))));\n    \n    return min(max(min(c.x,c.y),d),e)*.5;\n}*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 c;\n\n    float d = sdLoopedSquare(p) - cos(iTime*.8)*.05 -.05;\n        \n    // iq coloring\n    vec3 col = (d>0.0) ? vec3(0.9,0.6,0.3) : vec3(0.65,0.85,1.0);\n\tcol *= 1.0 - exp2(-25.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(120.0*abs(d));\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(d)) );\n    \n    fragColor = vec4(col,0.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}