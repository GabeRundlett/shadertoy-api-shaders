{
    "Shader": {
        "info": {
            "date": "1613311013",
            "description": "water surface usig voronoi",
            "flags": 0,
            "hasliked": 0,
            "id": "tldBzl",
            "likes": 3,
            "name": "[RGR] Water Surface",
            "published": 3,
            "tags": [
                "water"
            ],
            "usePreview": 0,
            "username": "deeplo",
            "viewed": 379
        },
        "renderpass": [
            {
                "code": "#define S smoothstep\n#define BG_COLOR vec3(0.05,0.35,0.75)\n#define T (iTime)\n#define NB_POINTS 100.0\n\nmat2 Rot(float angle){\n    float c = cos(angle);\n    float s = sin(angle);\n    return mat2(c,-s,s,c);\n}\n\nvec2 Hash22(vec2 p){\n    vec3 a = fract(p.xyx * vec3(129.23,348.45,677.78));\n    a += dot(a,a+-87.65);\n    return fract(vec2(a.x*a.y,a.y*a.z));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Get coords normallized according to Y resolution. Screen displays uv between -1/+1  \n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n\n    // Background color\n    vec3 bg = BG_COLOR;\n    vec4 col = vec4(bg,0);\n\n    // Time flow\n    float time = iTime/2.0;\n    \n    // Scale viewport\n    uv *= 3.0;  \n    \n    // Apply sine wave\n    uv.y += sin((125.45+time)*.2)+sin(0.5*(uv.x+time)) ;\n\n    // Prepare voronoi loop (using 3x3 grid)\n    vec2 id  = floor(uv);\n    vec2 gv  = fract(uv) - 0.5;\n    float minDist = 1000.0;\n\n    // Grid loop\n    for(float dx=-1.0;dx<=1.0 ;dx+=1.0){\n        for(float dy=-1.0;dy<=1.0 ;dy+=1.0){\n            vec2 offset = vec2(dx,dy);\n            vec2 h = Hash22(id+offset);\n            vec2 p = offset+sin(h*(time+125.87))*0.5;\n            p -= gv;\n            float d = length(p);\n            if (d< minDist){\n                minDist = min(minDist,d);\n            }\n        }\n    }\n    \n    // Voronoi color\n    \n    float a = sin(iTime*0.05235);\n    a = abs(a)*0.5;              // 0 / +0.5\n    a *= 0.1;\n    \n    float b = sin(iTime*0.1235);\n    b = abs(b)*0.5+0.5;          // +0.5 / +1\n    b *= 3.0;\n    \n    float c = S(a,b,minDist*minDist);\n    col.rgb += vec3(c);\n\n\n    // Output\n    fragColor = col;    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}