{
    "Shader": {
        "info": {
            "date": "1431447411",
            "description": "yin yang type pattern, tried to use ray marching artifacts as a effect. later i might add in some smoothing instead of the noise.",
            "flags": 0,
            "hasliked": 0,
            "id": "XlBGzy",
            "likes": 2,
            "name": "yin yang volume 3d",
            "published": 3,
            "tags": [
                "3d",
                "volume",
                "yang",
                "yin",
                "marched"
            ],
            "usePreview": 0,
            "username": "public_int_i",
            "viewed": 384
        },
        "renderpass": [
            {
                "code": "\n#define NOISE\n#define NOISE_AMOUNT .014\n\nconst vec4 yin = vec4(1.);\nconst vec4 yang = vec4(0.,0.,0.,1.);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ctime = cos(iTime);\n\n\tvec3 rd = vec3(fragCoord.xy/iResolution.xy-vec2(.5), .5);\n    rd.y *= iResolution.y/iResolution.x;\n    rd = normalize(rd);\n    \n    vec3 rp = vec3(0.,0.,-5.);\n    \n    \n    float f1,f2;\n    vec4 cb = vec4(0.);\n    vec4 c = vec4(0.);\n    float d,db;\n    for (int i = 0; i < 32; i++) {\n        d = length(rp);\n        db = max(3.-d,0.);\n        \n        f1 = fract((rp.x*rp.z+rp.y/(4.4+ctime*4.))*(.4+ctime*.3));\n        f2 = 1.-f1;\n        \n        cb = (yin*f1 + yang*f2)*db;\n        c = mix(c,cb,cb.w);\n        \n\t\trp += rd*d*.41;\n        #ifdef NOISE\n        rp += mod(vec3(f1,f2,f1*f2)*34783.8237324,vec3(NOISE_AMOUNT));\n    \t#endif\n    }\n    \n    fragColor = mix(vec4(pow(rd.x,2.)),c,c.w);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}