{
    "Shader": {
        "info": {
            "date": "1680355721",
            "description": "Yet another mandelbrot renderer",
            "flags": 0,
            "hasliked": 0,
            "id": "DtsGDN",
            "likes": 15,
            "name": "Mandelbrot magic formula",
            "published": 3,
            "tags": [
                "fractal",
                "mandelbrot",
                "happy",
                "malicious",
                "april",
                "fools"
            ],
            "usePreview": 0,
            "username": "kishimisu",
            "viewed": 505
        },
        "renderpass": [
            {
                "code": "/* \n    Straightforward method to calculate the Mandelbrot set without using\n    for/while loops by approximating the iteration count at a given point\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (-iResolution.xy + 2.0*(fragCoord.xy))/iResolution.y;\n    p.x -= .5;\n    \n    vec3 color;\n    \n    // Magic formula\n    vec2 z = log(p*p+exp(p.x*p.x+p.y*p.y+0.247814));\n         z += 4.*((p.x*p.y-z.x*z.y)*1.618033+length(p-z));\n    \n    // Approximated iteration count\n    float i = dot(z,z)+log(2.*z.x*z.y);\n                                                                                                                                                                                                                                                                                              for (i=0., z*=i; i++<1e2; z=vec2(z.x*z.x-z.y*z.y,2.*z.x*z.y)+p) { if(dot(z,z)>40.) { \n    // Smooth iteration count to avoid banding\n    float i_smoothed = i + 1.-log(log(dot(z,z)))/log(2.);\n    \n    // Colorize\n    color = cos(iTime+vec3(1,1.2,1.4)*sqrt(min(i_smoothed,40.)));\n                                                                                                                                                                                                                                                                                              break;}} // April Fools ;)\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}