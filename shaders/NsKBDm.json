{
    "Shader": {
        "info": {
            "date": "1658329220",
            "description": "do you know a better method?",
            "flags": 32,
            "hasliked": 0,
            "id": "NsKBDm",
            "likes": 11,
            "name": "one wavelet curve fitting",
            "published": 3,
            "tags": [
                "neuralnetwork"
            ],
            "usePreview": 0,
            "username": "lomateron",
            "viewed": 325
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 u = 2.*(fragCoord*2.-iResolution.xy)/iResolution.y*pi;\n    vec2 m = 8.*(iMouse.xy*2.-iResolution.xy)/iResolution.y;\n    //draw points of curve\n    float b = 4.;\n    float a = 0.;\n    for(int i = 0; i < POINTS; ++i)\n    {\n        a = max(a,1.-b*length(u-pnt(i)));\n    }\n    //draw wave\n    vec4 a0 = A(vec2(0.5,0));\n    vec4 a1 = A(vec2(1.5,0));\n    vec2 c  = wav(u.x,a0.x,a0.y)*a0.zw;\n    a = max(a,1.-8.*abs(c.x+c.y-u.y));\n\n    fragColor = vec4(a);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\n#define pi 3.141592\n#define POINTS 32                                          //how many points in curve\n#define dipo (.5/float(POINTS))                            //division by number of points\nvec2 wav(float x, float pos, float frq)\n{\n    x -= pos;\n    float x2 = x*frq;\n    return cos(x2-vec2(0,.5)*pi)/exp(x2*x2*.1);\n}\nvec2 pnt(int i)//get a point from curve the wave will fit into\n{\n    vec2 a = vec2(0);\n    float x = mod(float(i)+.5,float(POINTS));                       \n          //x = float(i);\n          //x = (x/64.*2.-1.)*8.;\n          x = (fract(cos(x*1234.56789)*3456.98765)*2.-1.)*8.;//get random pos in curve\n    float y = cos(x+.7)/exp(x*x*.1)*4.                       //curve equation\n             +(fract(cos(x*2345.76543)*4536.76543)*2.-1.)*.0;//add noise to curve\n    return vec2(x,y);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 a0 = A(vec2(0.5,0));//wave properties x=pos y=frq z=cosAmpl w=sinAmpl\n    vec4 a1 = A(vec2(1.5,0));//xy=convolution*error when wave pos+.05\n                             //zw=convolution*error when wave pos-.05\n    vec4 a2 = A(vec2(2.5,0));//x=error when wave freqency*  1.001\n                             //y=error when wave freqency*1/1.001\n    vec4 a3 = A(vec2(3.5,0));//for experimenting \n    if(iFrame==0){a0 = vec4(6.,.5,0,0);\n                  a1 = vec4(0);\n                  a2 = vec4(0);\n                  a3 = vec4(0);}\n    \n    vec2 p  = pnt(iFrame);\n    vec2 w1 = wav(p.x,a0.x    ,a0.y          );\n    vec2 w2 = wav(p.x,a0.x+.02,a0.y          );\n    vec2 w3 = wav(p.x,a0.x-.02,a0.y          );\n    vec2 w4 = wav(p.x,a0.x    ,a0.y*exp( .02));\n    vec2 w5 = wav(p.x,a0.x    ,a0.y*exp(-.02));\n    float r = p.y-dot(w1,a0.zw);\n    a0.zw += r*w1*.1;\n    a1.xy += (w2*p.y*r               - a1.xy)*dipo;\n    a1.zw += (w3*p.y*r               - a1.zw)*dipo;\n    a2.x  += (abs(p.y-dot(w4,a0.zw)) - a2.x )*dipo;\n    a2.y  += (abs(p.y-dot(w5,a0.zw)) - a2.y )*dipo;\n    a0.x += length(a1.xy)-length(a1.zw);\n    a0.y *= exp((a2.y-a2.x)*.2);\n    if(fragCoord.x==0.5){fragColor = a0;}\n    if(fragCoord.x==1.5){fragColor = a1;}\n    if(fragCoord.x==2.5){fragColor = a2;}\n    if(fragCoord.x==3.5){fragColor = a3;}\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}