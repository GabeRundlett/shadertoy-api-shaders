{
    "Shader": {
        "info": {
            "date": "1664526990",
            "description": "Inspire by https://www.composition.gallery/FR/art/victor-vasarely-zebra-ceramique/",
            "flags": 0,
            "hasliked": 0,
            "id": "NlVBWD",
            "likes": 6,
            "name": "Vasarely Zebra tets",
            "published": 3,
            "tags": [
                "vasarely",
                "reproduction"
            ],
            "usePreview": 0,
            "username": "rubioh",
            "viewed": 395
        },
        "renderpass": [
            {
                "code": "\n\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                * 43758.5453123);\n}\n\n// Value noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/lsf3WH\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    vec2 u = f*f*(3.0-2.0*f);\n    return mix( mix( random( i + vec2(0.0,0.0) ),\n                     random( i + vec2(1.0,0.0) ), u.x),\n                mix( random( i + vec2(0.0,1.0) ),\n                     random( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\n\nmat2 rotate2d(float angle){\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\n\nfloat lines(in vec2 pos){\n    float scale = 10.0;\n    pos *= scale;\n    float v = sin(pos.x*3.1415);\n    \n    return smoothstep(-1., 1., v/fwidth(v));\n}\n\n\n// https://thebookofshaders.com/edit.php#11/circleWave-noise.frag\nfloat shape(vec2 st, float radius) {\n    float r = length(st)*2.0;\n    float a = atan(st.y,st.x);\n    float m = abs(mod(a+iTime*2.,3.14*2.)-3.14)/3.6;\n    float f = radius ;\n    m += noise(st+iTime*0.1)*.5;\n    // a *= 1.+abs(atan(u_time*0.2))*.1;\n    // a *= 1.+noise(st+u_time*0.1)*0.1;\n    f += sin(a*10.)*noise(st+iTime*.2)*.1;\n    f += (sin(a*20.)*.1*pow(m,2.));\n    return 1.-smoothstep(f,f+0.1,r);\n}\n\nfloat shapeBorder(vec2 st, float radius, float width) {\n    return shape(st,radius)-shape(st,radius-width);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy-.5;\n\n    vec2 pos = uv.yx*vec2(2.,4.);\n\n    float circle = 1. - step(shapeBorder(uv,0.6+ abs(cos(iTime))*.2, 10.), length(uv));\n\n\n    float pattern_ext = 0.;\n    float pattern_int = 0.;\n\n    pos += abs(cos(.5*iTime*vec2(0.1+sin(iTime/1600.), cos(iTime)/1600.+.2)*.2+ .1*length(pos)*vec2(1.,.1)));\n\n    // Add noise\n    pos = rotate2d(noise(pos) ) * pos;\n    // Draw lines\n    pattern_ext = 2.*lines(pos*(1.-circle));\n    \n    pattern_int = 2.*lines(pos*circle);\n    \n    vec3 pattern_color = (1.-circle)*pattern_ext*vec3(.6, .2, .1);\n    pattern_color += (circle)*(1.-pattern_int)*vec3(.2, .4, .3);\n    \n    \n\n    // Output to screen\n    fragColor = vec4(pattern_color,1.0);\n    \n }\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}