{
    "Shader": {
        "info": {
            "date": "1655563434",
            "description": "attempt to replicate radar\nhttps://www.shadertoy.com/view/4s2SRt",
            "flags": 0,
            "hasliked": 0,
            "id": "NdVyWw",
            "likes": 4,
            "name": "Oblivion radar : remake ",
            "published": 3,
            "tags": [
                "2d",
                "radar"
            ],
            "usePreview": 0,
            "username": "Spacehead",
            "viewed": 224
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\nfloat circleSdf(in vec2 st)\n{\n    return length(st);\n}\n\nfloat boxSdf(in vec2 st, in vec2 sz)\n{\n    st = abs(st) - sz;\n    return length(max(st.x, st.y));\n}\n\nfloat stroke(float f, float size, float w)\n{\n    float a = f + w * .5;\n    float b = f - w * .5;\n    return smoothstep(size, size+.01, a) - smoothstep(size-.01, size, b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 scale = iResolution.xy / vec2(640, 360);\n    vec2 st = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    st *= scale;\n        \n    float scaleT = iTime * 0.2;\n    \n    float cosT = cos(scaleT);\n    float sinT = sin(scaleT);\n    float sin3T = sin(scaleT * 3.);\n    \n    float r = length(st);\n    float a = atan(st.y, st.x);\n    float circle = circleSdf(st);\n    float cutArea = step(circle, 1.35);\n    \n    float angle =  iTime * 2.;\n    float cosA = cos(angle);\n    float sinA = sin(angle);\n    mat2 rot = mat2(cosA, -sinA, sinA, cosA);\n    vec2 stR = st * rot;\n    \n    vec3 col;\n    \n    vec2 animMove = vec2(cosT + sinT, sinT / cosT);\n    float redCircle = circleSdf(st + animMove);\n    float redF = smoothstep(0.025, 0.02, redCircle);\n    \n    redF = smoothstep(0.031, 0.03, redCircle) * abs(sin(iTime * 17.));\n    redF += stroke(redCircle, 0.04, 0.02);\n    float waveR = 0.07 + fract(iTime) * 0.43;\n    redF += smoothstep(waveR - 0.1, waveR, redCircle) * smoothstep(waveR+.01, waveR, redCircle);\n    redF *= cutArea;\n    \n    \n    float whiteF = stroke(circle, 1.35, .02);\n    whiteF += stroke(abs(st.x), abs(st.y), 0.02) * cutArea * .5;\n    \n    animMove = vec2(cosT + sin3T / 1.5, -sin3T + (cosT * 1.2));\n    float moveCircle = circleSdf(st + animMove);\n    whiteF += smoothstep(0.025, 0.02, moveCircle) * cutArea;\n    \n    animMove = vec2(cosT * 0.7 + sinT, sin3T + cosT);\n    moveCircle = circleSdf(st + animMove);\n    whiteF += smoothstep(0.025, 0.02, moveCircle) * cutArea;\n    \n    \n    \n    float blueF = stroke(circle, 1.75, 0.035);\n    blueF = max(blueF - smoothstep(0.,.01,cos(a * 8.) - 0.95), .0);\n    blueF = max(blueF - step(cos(a * 2.), .01) * 0.5, .0);\n    \n    float cut1 = step(cos(a * 2.), 0.8 * (1. + sin(iTime)) / 2.);\n    blueF += (stroke(circle, 1.45, .02) * 0.3) * cut1;\n    \n    blueF += stroke(circle, 0.9, .015);\n    blueF += stroke(circle, 0.55, .015);\n    blueF += stroke(circle, 0.05, .015);\n    \n    \n    blueF += (1. - stroke(abs(st.x), abs(st.y), 3.45 + sin(iTime) * 0.35)) * \n    smoothstep(1., 0.99, boxSdf(st, vec2(0.76 + sin(iTime) * .175)));\n    \n\n    a = atan(stR.y, -stR.x);\n    \n    blueF += (smoothstep(0.8 , 1., (a + PI) / TWO_PI) * .3) * cutArea + \n    smoothstep(.01, .002, boxSdf(stR + vec2(-0.67, 0.), vec2(.67, .001)));\n    \n    \n    col = vec3(redF * vec3(0.988, 0.376, 0.223));\n    col += whiteF;\n    col += vec3(0.741, 0.949, 1.) * blueF;\n    \n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}