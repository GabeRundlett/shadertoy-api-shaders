{
    "Shader": {
        "info": {
            "date": "1493048413",
            "description": "Simple RGBA random values for reference",
            "flags": 0,
            "hasliked": 0,
            "id": "XdSyzc",
            "likes": 1,
            "name": "RGBA Noise",
            "published": 3,
            "tags": [
                "noise",
                "random",
                "rgba"
            ],
            "usePreview": 0,
            "username": "killroy",
            "viewed": 591
        },
        "renderpass": [
            {
                "code": "\nhighp float randFloat(vec2 uv) {\n\thighp float a = 12.9898;\n\thighp float b = 78.233;\n\thighp float c = 43758.5453;\n\thighp float dt = dot(uv.xy, vec2(a, b));\n    highp float sn = mod(dt, 3.14);\n    return fract(sin(sn) * c);\n}\n\nfloat lerpRand(vec2 uv) {\n    float res = 256.0;\n    uv += 0.5 / res;\n    vec2 a = floor(uv * res);\n    vec2 b = a + 1.0;\n    a /= res;\n    b /= res;\n    \n    float tl = randFloat(a);\n    float tr = randFloat(vec2(b.x, a.y));\n    float bl = randFloat(vec2(a.x, b.y));\n    float br = randFloat(b);\n    \n    //tl = textureLod(iChannel0, a, 0.0).r;\n    //tr = textureLod(iChannel0, vec2(b.x, a.y), 0.0).r;\n    //bl = textureLod(iChannel0, vec2(a.x, b.y), 0.0).r;\n    //br = textureLod(iChannel0, b, 0.0).r;\n    \n    float u = (uv.x - a.x) / (b.x - a.x);\n    float v = (uv.y - a.y) / (b.y - a.y);\n    float top = mix(tl, tr, u);\n    float bot = mix(bl, br, u);\n    //return top;\n    return mix(top, bot, v);\n}\n\nvec2 rand1(in vec2 uv) {\n    return textureLod(iChannel0, uv, 0.0).gr;\n}\n\nvec2 rand2(in vec2 uv) {\n    return vec2(lerpRand(uv), lerpRand(uv + vec2(1.0, 0.0)));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfloat t = iTime * 0.001;\n    //randRGBA(fragColor, uv * 1.0);\n \tvec2 uv2 = (uv + 0.5) / 64.0;\n \n \t//vec2 rg = textureLod(iChannel0, uv2, 0.0).yx;\n \t//vec2 rg = vec2(lerpRand(uv2 * 0.5), lerpRand(uv2 * 0.5 + vec2(1.0, 0.0)));\n \n \tuv2 *= 2.0;\n \n \tvec2 rg1 = rand1(uv2);\n \tvec2 rg2 = rand2(uv2);\n \tvec2 rg = rg1;\n \n \tvec4 m = iMouse / iResolution.xxxx;\n \n \tif(m.z > 0.0) {\n        rg = rg2;\n \t}\n \n \tvec4 col = vec4(rg.rg, 0.0, 1.0);\n \t\n \t\n \tfragColor = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}