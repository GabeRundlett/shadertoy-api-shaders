{
    "Shader": {
        "info": {
            "date": "1589978932",
            "description": "simple implmentation",
            "flags": 0,
            "hasliked": 0,
            "id": "tdjBDh",
            "likes": 3,
            "name": "mandelb",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "workingclasshacker",
            "viewed": 337
        },
        "renderpass": [
            {
                "code": "mat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),sin(_angle),cos(_angle));\n}\n\n#define MAXITER 1210\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    uv = uv*0.5-sin(iTime)-vec2(.05,0.);\n    float t = iTime * .0015;\n\tfloat angle = t;    \n    uv *= rotate2d(angle);\n    float scale = 1.5;\n    uv *= 1.-sin(scale);\n    uv.x -= scale * (sin(scale)/2.+.03);\n    uv.y -= scale * (sin(scale)/5.-.30);\n\tvec2 c = uv;\n    vec2 z = c;\n    int escape = 0;\n    for(int i = 0;i<MAXITER;i++){\n\t\tfloat tempx = z.x*z.x - z.y * z.y + c.x;\n        z.y = 2. * z.x * z.y + c.y;\n        z.x = tempx;\n        if(length(z)>2.){\n           escape = i;\n            break;\n        }\n    }\n    \n    float sl = (float(escape) + log2(length(z)))/float(MAXITER);\n    vec3 col = vec3(sin(sl)*2.*cos(iTime), sin(sl)/3.,cos(sl)/4.);\n    col += sl;\n    if(length(z)<2.0){\n      col = vec3(1.);   \n    }\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}