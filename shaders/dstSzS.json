{
    "Shader": {
        "info": {
            "date": "1680042144",
            "description": "just a simple edge detection code originally from: https://github.com/devonium/EGSM/wiki/example_shaders#sobel-operator-postprocess",
            "flags": 0,
            "hasliked": 0,
            "id": "dstSzS",
            "likes": 6,
            "name": "Colored Edge Detection",
            "published": 3,
            "tags": [
                "edgedetection",
                "colored"
            ],
            "usePreview": 0,
            "username": "Cast_E",
            "viewed": 189
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec4 col;\n    \n    vec4 edge_x = vec4(0,0,0,0);\n\tvec4 edge_y = vec4(0,0,0,0);\n\n\tfor (int dx = -1; dx <= 1; dx++)\n    {\n        for (int dy = -1; dy <= 1; dy++)\n        {\n            vec2 uv = (fragCoord.xy + vec2(dx,dy)) / iResolution.xy;\n\n            vec4 pixel = texture(iChannel0, uv);\n\n            edge_x += float(dx + dx * abs(dy)) * pixel;\n            edge_y += float(dy + dy * abs(dx)) * pixel;\n        }\n    }\n\n\tfloat edge_x_max = max(edge_x.r, max(edge_x.g, edge_x.b));\n    float edge_y_max = max(edge_y.r, max(edge_y.g, edge_y.b));\n\n\tfloat edge = edge_x_max * edge_x_max + edge_y_max * edge_y_max;\n\n    if(edge > 0.1)\n        col = texture(iChannel0, uv);\n    else\n        col = vec4(0., 0., 0., 0.);\n        \n    fragColor = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}