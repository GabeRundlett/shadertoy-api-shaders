{
    "Shader": {
        "info": {
            "date": "1718299196",
            "description": "source glsl and shadertoy",
            "flags": 0,
            "hasliked": 0,
            "id": "M3yGW3",
            "likes": 8,
            "name": "particle and field",
            "published": 3,
            "tags": [
                "field",
                "particle",
                "cindesahder"
            ],
            "usePreview": 0,
            "username": "nnew",
            "viewed": 158
        },
        "renderpass": [
            {
                "code": "uniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 resolution = iResolution.xy;\n    float time = iTime;\n    vec3 color1 = vec3(1.7, 0.25, 0.5);\nvec3 color2 = vec3(0.5, 0.7, 0.25);\nvec3 color3 = vec3(0.25, 0.5, 0.7);\n\nvec2 point1 = resolution/3.0 + vec2(sin(time*2.0) * 10.0, cos(time*2.0) * 5.0);\nvec2 point2 = resolution/3.0 + vec2(sin(time)*75.0, cos(time)*50.0);\nvec2 point3 = resolution/3.0 + vec2(sin(time)*25.0, sin(time*2.0)*50.0)*2.0;\n\nvec2 dist1 = gl_FragCoord.xy - point1;\nfloat intensity1 = pow(23.0/(0.01+length(dist1)), 2.0);\n\nvec2 dist2 = gl_FragCoord.xy - point2;\nfloat intensity2 = pow(3.0/(0.21+length(dist2)), 2.0);\n\nvec2 dist3 = gl_FragCoord.xy - point3;\n      float intensity3 = pow(62.0/(0.01+length(dist3)), 1.0);\nvec2 p = (fragCoord.xy * 2.0 - resolution) / min(resolution.x, resolution.y);\nvec3 color6 = vec3(0.0, 0.3, 0.5);\nvec3 color5 = vec3(0.5, 0.0, 0.3);\nvec3 c;\nfloat l, z = time*0.4;\n\n    vec2 p2 = (gl_FragCoord.xy * 2.0 - resolution) / min(resolution.x, resolution.y);\n    vec3 destColor = vec3(0.3, 0.6, 1.0);\n    float f2 = 0.0;\n\n    for(float i = 0.0; i < 10.0; i++){\nfloat s2 = sin(0.7 * time + (i * 0.5) * time) * 0.3;\nfloat c2 = cos(0.2 * time + (i * 0.5) * time) * 0.3 ;\n        f2 += 0.01 / abs(length(p2*0.5 + vec2(c2, s2)));\n    }\nfor(int i = 0; i < 10; i++) {\nvec2 p = gl_FragCoord.xy/resolution.xy;\np -= 0.5;\np.x *= resolution.x/resolution.y;\n\n\nl=length(p);\np += p+l * (sin(l)+1.0)*abs(cos(l*8.0 - z*4.0));\n\nc[i]= 0.21 / length(abs(mod(p, 1.0) - 0.5));\n}\n\nfloat f = 0.0;\nfloat g = 0.0;\nfloat h = 0.0;\nfloat PI = 3.14159265;\nfor(float i = 0.0; i < 40.0; i++){\nif (floor(iMouse.x * 41.0) < i)\nbreak;\nfloat s = cos(time + i * PI / 8.0) * 0.8;\nfloat c = sin(time + i * PI / 8.0) * 0.8;\nfloat d = abs(p.x + c);\nfloat e = abs(p.y + s);\nf += 0.001 / d;\ng += 0.001 / e*d;\nh += 0.00013 / (d * e);\n}\nfragColor = vec4(f * color1 + g * color2 + vec3(h), 1.0);\n    fragColor*=vec4(c*f2 / l, time);\n    fragColor+= vec4((color1*intensity1 + color2*intensity2 + color3*intensity3)*mod(gl_FragCoord.x, 2.0)*mod(gl_FragCoord.y, 4.0),1.0);\n}\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}