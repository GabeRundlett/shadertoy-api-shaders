{
    "Shader": {
        "info": {
            "date": "1627899118",
            "description": "sky move moon",
            "flags": 32,
            "hasliked": 0,
            "id": "NtBXRy",
            "likes": 4,
            "name": "night sky1",
            "published": 3,
            "tags": [
                "sky"
            ],
            "usePreview": 0,
            "username": "HanShaoqiu",
            "viewed": 253
        },
        "renderpass": [
            {
                "code": "\nfloat weight[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  vec2 TexCoords = uv;\n  vec2 tex_offset = 1.0 / iResolution.xy; // gets size of single texel\n  vec3 result = texture(iChannel0, TexCoords).rgb * weight[0]; // current fragment's contribution\n  \n  for(int i = 1; i < 5; ++i)\n  {\n      result += texture(iChannel0, TexCoords + vec2(tex_offset.x * float(i), 0.0)).rgb * weight[i];\n      result += texture(iChannel0, TexCoords - vec2(tex_offset.x * float(i), 0.0)).rgb * weight[i];\n  }\n \n  for(int i = 1; i < 5; ++i)\n  {\n      result += texture(iChannel0, TexCoords + vec2(0.0, tex_offset.y * float(i))).rgb * weight[i];\n      result += texture(iChannel0, TexCoords - vec2(0.0, tex_offset.y * float(i))).rgb * weight[i];\n  }\n    \n  //result = texture(iChannel0,uv).rgb;\n  fragColor = vec4(result,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\nfloat hash( float n )\n{\n  return fract( (1.0 + cos(n)) * 415.92653);\n}\n\nfloat noise2d( in vec2 x )\n{\n  float xhash = hash( x.x * 37.0 );\n  float yhash = hash( x.y * 57.0 );\n  return fract( xhash + yhash );\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  // sky  \n  vec3 color = mix(vec3(0.), vec3(0.1, 0.2, 0.4), 1.0-uv.y );\n  \n  // draw stars\n  float fThreshhold = 0.995;\n  float StarVal = noise2d( uv );\n  if ( StarVal >= fThreshhold )\n  {\n    StarVal = pow( (StarVal - fThreshhold) / (1.0 - fThreshhold), 60.0 );\n    color += StarVal;\n  }\n  \n  vec3 skyColor = color;\n  // moon \n  vec3 moonColor = vec3(1.0,0.9,0.5);\n  float moonRadius = 50.0;\n\n  vec2 moonPosition = vec2(moonRadius);\n  //moonPosition.x += iTime*25.0;\n  vec2 circleCenter = vec2(iResolution.x*0.5, moonRadius);\n  //(x-circleCenter)*(x-circleCenter) + y*y = R*R\n  float R = iResolution.x*0.5-moonRadius;\n  float x = moonPosition.x*iTime;\n  float y = float(sqrt(R*R-(x-circleCenter.x)*(x-circleCenter.x)));\n  moonPosition.x = x;\n  moonPosition.y = y;\n  \n  float dis = distance(moonPosition,fragCoord);\n  float offset = 5.0;\n  \n  \n  if (dis < moonRadius) {\n      color = moonColor;\n  }  \n  \n  // phase \n  vec2 circlePos = moonPosition - vec2(moonRadius-20.0,-20.0);\n  float dis1 = distance(circlePos,fragCoord);\n  if (dis1 < moonRadius) {\n      color = skyColor;\n  }\n \n  \n  fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}