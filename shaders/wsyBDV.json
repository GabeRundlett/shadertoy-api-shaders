{
    "Shader": {
        "info": {
            "date": "1607984245",
            "description": "potato",
            "flags": 32,
            "hasliked": 0,
            "id": "wsyBDV",
            "likes": 8,
            "name": "Day 355",
            "published": 3,
            "tags": [
                "mdtmjvm"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 374
        },
        "renderpass": [
            {
                "code": "// THE VERY COOL MAZE IS FROM FABRICE NEYRET: \n// https://www.shadertoy.com/view/3dyfWV\n\n// \n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 uv = U/R;\n    vec2 uvn = (U - R*0.5)/R.y;\n    \n    C -= C;\n    C = mix(C,vec4(0.,0.01,0.1,1.) - sin(uvn.xyyy*1. - 0.5)*0.1,T3(U).x*1.);\n    \n    C = mix(C,vec4(0.,0.2,0.1,1.) + abs(sin(uvn.yxxy*1. + iTime)*0.9), T2(U).x);\n    vec4 me = T1(U);\n    C = pow(C,vec4(0.4545));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\nvec4 r42(vec2 u){\n    return texture(iChannel1,u/iResolution.xy);\n}\n\nconst float velScale = 0.001;\n\nint idxNeighbors = 0;\nvec4[] neighbors = vec4[15](vec4(9),vec4(9),vec4(9),vec4(9),vec4(9),vec4(9),vec4(9),vec4(9),vec4(9),vec4(9),vec4(9),vec4(9),vec4(9),vec4(9),vec4(9));\n\nvec4 get(vec2 u){\n    vec4 g = T(u);\n    vec2 muv = (iMouse.xy)/iResolution.xy;\n    g.zw = mix(g.zw, -normalize(muv - g.xy ),0.4*float(iMouse.z > 0.)*smoothstep(1.,0.,length((g.xy - muv)*R.y/R.x)*6. ));\n    \n    \n    #define pump(t,a) (floor(t) + pow(fract(t),a))\n    g.zw = mix(g.zw,vec2(0,-1.)*rot(0.5*pi*pump(iTime*0.1,20.)),0.007);\n    \n    \n\n    \n    g.xy += vec2(g.z*R.y/R.x,g.w)*velScale;\n    \n    if (abs(g.x - 0.5)>0.5){\n        g.z *= -1.;\n        g.x += 2.*g.z*velScale;\n    }\n    if (abs(g.y - 0.5)>0.5){\n        g.w *= -1.;\n        g.y += 2.*g.w*velScale;\n    }\n    \n    \n    if (T3n(g.xy).x > 0.){\n        vec2 normalRange = 4./R;\n        vec2 n = normalize(vec2(\n            T3n(g.xy + vec2(normalRange.x,0.)).x - T3n(g.xy + vec2(-normalRange.x,0.)).x,\n            T3n(g.xy + vec2(0.,normalRange.y)).x - T3n(g.xy + vec2(0.,-normalRange.y)).x\n            ));\n        vec2 t = n*rot(0.5*pi);\n        \n        //g.zw -= g.zw*2.;\n        //g.zw *= rot(0.5*pi);\n        \n        \n        g.zw = reflect(g.zw,n);\n        //g.xy += g.zw*2.*velScale;\n        g.xy -= n*0.003;\n        \n        \n        //g.zw -= 2.*n*g.zw*float(dot(g.zw,t) > 0.);\n    }\n    \n    return g;\n}\n\n/*\n\nvec4 otherc = other;                \\\n        otherc.xy *= 1. - 2.*vec2(             \\\n            float(abs(me.x) > 0.5 && abs(other.x) > 0.5 && sign(other.x) != sign(me.x) ), \\\n            float(abs(me.y) > 0.5 && abs(other.y) > 0.5 && sign(other.y) != sign(me.y) )  \\\n        ); \\\n        \n\n*/\n\n#define check(dir,times) \\\n    for(float i = 1.; i < times + 1.; i++){             \\\n        vec4 other = get(U + dir*i*stepSz);             \\\n        if(other != me){                                \\\n            if(length(uv - other.xy) < length(uv-me.xy))\\\n                me = other; meuv = U + dir*i*stepSz;            \\\n        }\\\n    }\n#define checkNeighbors(dir,times) \\\n    for(float i = 1.; i < times + 1.; i++){             \\\n        vec4 other = get(me.xy*R + dir*i*stepSz);                    \\\n        if(other != me){                                \\\n            neighbors[idxNeighbors++] = other;                             \\\n        }\\\n    }\n\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 uv = (U)/R;\n    vec2 uvn = (U - R*0.5)/R.y;\n    \n\n    \n\n    C = T(U);\n\n    vec4 me = get(U);\n    \n    vec2 meuv = U;\n    \n    float steps = 15.;\n    float stepSz = 1.;\n    check(vec2(0,1)    ,steps);\n    check(vec2(0,-1)   ,steps);\n    check(vec2(1,0)    ,steps);\n    check(vec2(-1,0)   ,steps);\n    check(vec2(1,1)    ,steps);\n    check(vec2(-1,-1)  ,steps);\n    check(vec2(1,-1)   ,steps);\n    check(vec2(-1,1)   ,steps);\n    \n    \n    steps = 10.; stepSz = 3.;\n    checkNeighbors(vec2(0,1)    ,steps);\n    checkNeighbors(vec2(0,-1)   ,steps);\n    checkNeighbors(vec2(1,0)    ,steps);\n    checkNeighbors(vec2(-1,0)   ,steps);\n    checkNeighbors(vec2(1,1)    ,steps);\n    checkNeighbors(vec2(-1,-1)  ,steps);\n    checkNeighbors(vec2(1,-1)   ,steps);\n    checkNeighbors(vec2(-1,1)   ,steps);\n    \n    for (int i = 0; i < idxNeighbors; i++){\n        vec2 dir = neighbors[i].xy - me.xy; \n        //g.zw += normalize(dir)*smoothstep(1.,0.,exp(-dot(dir,dir)));\n        \n        float ldir = length(dir);\n        if(ldir > 0.)\n            me.zw -= normalize(dir)*smoothstep(1.,0.,ldir*100.)*0.07;\n        //g.y += 0.0001;\n    }\n    \n    C = me;\n    \n\n    if(iFrame < 2){\n        \n        \n        C = r42(U*11.);\n        if(T3n(C.xy).x == 0. && sin(C.z*2414.124) >0.0){\n        \n        \n            C.zw = C.zw*2. - 1.;\n            C.zw *= 0.1;\n        } else {\n            C = vec4(-1000);\n        }\n        //C = T3(U).xxxx;\n        //C = vec4(sin(U.x/10.),0.0,1.0,1.0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 col, in vec2 U )\n{\n    vec2 uv = U/R;\n \n    vec4 me = T(U);\n\n    col = T1(U);\n    //C = 1. - C;\n    \n    //C *= 1.-smoothstep(dFdx(uv.x),0., length(uvn - me.xy) - 0.003);\n    //C = mix(C,vec4(1.)*0.01,smoothstep(dFdx(uv.x),0., length(uvn - me.xy) - 0.003));\n    \n    //C = smoothstep(0.,1.,C);\n    \n    col = mix(\n        col,\n        mix(vec4(0),vec4(1),smoothstep(dFdx(uv.x),0., length( (uv - me.xy)*R/R.x) - 0.0006 ))\n        ,0.4\n    );\n    \n    //col = pow(abs(col),vec4(0.4545));\n    \n    \n    if (iFrame < 2)\n        col = col - col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define T(u) texture(iChannel0,(u)/iResolution.xy)\n#define T1(u) texture(iChannel1,(u)/iResolution.xy)\n#define T2(u) texture(iChannel2,(u)/iResolution.xy)\n#define T3(u) (1. - texture(iChannel3,(u)/iResolution.xy))\n#define T3n(u) (1. - texture(iChannel3,(u)))\n\n#define R (iResolution.xy)\n\n#define pal(a,b,c,d,e) ((a) + (b)*sin((c)*(d) + (e)))\n#define rot(m) mat2(cos(m),-sin(m),sin(m),cos(m))\n#define pi acos(-1.)",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "#define val(U, X,Y)  step(  s(U,Y) ,  texelFetch( iChannel0, ivec2(U+vec2(X,Y) ) % 1024, 0 ).x  )\n\n// threshold.  left: constant.  right: slight density gradient\n#define s(U,Y)         ( 0.3)\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    float z = 10.;\n    vec2 U = u/z ,\n         I = round(U), F = U-I, S = step(0.,F); \n    F = abs(F); I--;\n    \n    \n    O = vec4(val(U, 0.,0.) );         \n    vec4 V = vec4( val(I, 1.-S.x,S.y), val(I, S.x,S.y), \n                   val(I, S.x,1.-S.y), val(I, 1.-S.x,1.-S.y));\n    \n    if (      V.x == V.z && V.x != V.y \n         && ( V.y>0.     || V.y != V.w ) )\n        O = mix( O, 1.-O, smoothstep(-1./16.,1./16.,.5-(F.x+F.y)) );\n    \n    O = clamp(O,0.,1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}