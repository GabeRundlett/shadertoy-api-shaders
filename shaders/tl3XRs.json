{
    "Shader": {
        "info": {
            "date": "1581524377",
            "description": "turn the #if 1 into 0:\nApparently the parameter of texture cannot be a sampler resulting from an expression.\nOr the result of a test cannot be a sampler. ",
            "flags": 0,
            "hasliked": 0,
            "id": "tl3XRs",
            "likes": 1,
            "name": "glsl compil bug:  ? sampler1 : 2",
            "published": 3,
            "tags": [
                "glsl",
                "bug"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 304
        },
        "renderpass": [
            {
                "code": "// sampler2D s;                            // forbidden (not uniform)\n   uniform sampler2D s;                    // ok\n// uniform sampler2D s = iChannel0;        // forbidden (param not constant)\n// #define mysampler     iChannel0         // only (limited) solution ?\n\nvec4 txt(sampler2D ch, vec2 uv)            // ok (but cf constraints at call)\n{ return texture( ch, uv ); } \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n  //sampler2D s;                           // forbidden (not uniform)\n  //uniform sampler2D s;                   // forbidden (not global)\n  //s = iChannel0;                         // forbidden l-value\n  //s = uv.x < .5 ? iChannel0 : iChannel1; // forbidden l-value\n\n#if 1   // --- try 0: won't compile \n    fragColor = txt( iChannel1, uv );      // ok \n    fragColor = txt( s, uv );              // ok\n    fragColor = texture( s, uv );          // ok (but no way to initialize s !!! )\n#else\n    fragColor = texture( uv.x < .5 ? iChannel0 : iChannel1, uv ); // why forbidden ?\n    fragColor = texture(   true    ? iChannel0 : iChannel1, uv ); // why forbidden ?\n#endif\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}