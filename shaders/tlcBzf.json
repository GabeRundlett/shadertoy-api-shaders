{
    "Shader": {
        "info": {
            "date": "1613165376",
            "description": "Finding square roots with bisection.",
            "flags": 0,
            "hasliked": 0,
            "id": "tlcBzf",
            "likes": 3,
            "name": "Root Finding with Bisection",
            "published": 3,
            "tags": [
                "algorithm",
                "rootfinding",
                "bisection",
                "roots"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 133
        },
        "renderpass": [
            {
                "code": "#define BISECT_MIN 0.0\n#define BISECT_MAX ((x + 1.0) / 2.0)\n#define BISECTIONS int(iTime) % 10\n#define EPSILON 0.001\n\n#define draw(d, c) color = mix(color, c, smoothstep(unit, 0.0, d))\n\nfloat test(in float tx, in float x) {\n    return tx * tx - x;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.y * 4.0;\n    float unit = 8.0 / iResolution.y;\n    vec3 color = vec3(0.0);\n\n    float x = uv.x;\n\n    // Bisection loop\n    float tmin = BISECT_MIN, tmax = BISECT_MAX, t;\n    for (int bisection=0; bisection < BISECTIONS; bisection++) {\n        t = (tmin + tmax) * 0.5;\n        float e = test(t, x);\n        if (e >= 0.0) tmax = t;\n        if (e <  0.0) tmin = t;\n        if (abs(e) < EPSILON) break;\n    }\n\n    // Draw bisected area\n    draw(abs(uv.y - (tmin + tmax) * 0.5) - abs(tmax - tmin) * 0.5, vec3(0.0, 0.0, 0.5));\n\n    // Draw the solution\n    draw(abs(uv.y - sqrt(x)), vec3(0.0, 1.0, 0.0));\n\n    // Draw bisection limits\n    draw(abs(uv.y - tmin), vec3(1.0, 0.0, 0.0));\n    draw(abs(uv.y - tmax), vec3(1.0, 0.0, 0.0));\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}