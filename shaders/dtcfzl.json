{
    "Shader": {
        "info": {
            "date": "1701529279",
            "description": "SH harmonics test",
            "flags": 0,
            "hasliked": 0,
            "id": "dtcfzl",
            "likes": 1,
            "name": "SH Harmonics",
            "published": 3,
            "tags": [
                "spherical",
                "harmonics",
                "sh"
            ],
            "usePreview": 0,
            "username": "Peace",
            "viewed": 161
        },
        "renderpass": [
            {
                "code": "const float PI = 3.14159265358;\n\nvec3 numColor(float x) {\n    float x01 = smoothstep(-1., 1., x);\n    float ax = abs(x);\n    return ax * (mix(vec3(0.2, 0, 1), vec3(1, 0, 0.2), x01) + vec3(0, .8, 0) * ax * ax) * (0.9 + sin(x * PI * 8.) * 0.1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.-iResolution.xy) / iResolution.y * 1.1;   \n    fragColor = vec4(0,0,0,1);\n    \n    float l = dot(uv, uv);\n    vec2 p = vec2(atan(-sqrt(1.-l), uv.x) - iTime, acos(-uv.y));\n    float x = cos(p.y*4.)*cos(p.x*3.);\n    vec3 col = numColor(x);\n    \n    float w = fwidth(uv).x * 4.;\n    col *= smoothstep(1., 1.-w, l);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}