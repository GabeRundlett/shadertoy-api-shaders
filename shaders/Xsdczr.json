{
    "Shader": {
        "info": {
            "date": "1517807188",
            "description": "[url]https://commons.wikimedia.org/wiki/File:Cayley_graph_of_F2.svg[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "Xsdczr",
            "likes": 27,
            "name": "Cayley graph of F_2",
            "published": 3,
            "tags": [
                "2d",
                "fractal"
            ],
            "usePreview": 0,
            "username": "phi16",
            "viewed": 1172
        },
        "renderpass": [
            {
                "code": "float w() {\n\treturn 1./iResolution.y;\n}\n\nvoid tree( vec2 pos, float len, inout vec4 color) {\n    for(int i=0;i<9;i++) {\n        color *= smoothstep(-0.1, 0.1, (length(pos) - len*0.08) * 100.);\n        color *= max(\n            smoothstep(-0.1,0.1,(abs(pos.y)-w()) * 100.), \n            sign(abs(pos.x-len/2.)-len/2.)*0.5+0.5\n    \t);\n        pos.x -= len;\n        if(pos.y > 0. && pos.x < pos.y) pos *= mat2(0,1,-1,0);\n        else if(pos.y < 0. && pos.x < -pos.y) pos *= mat2(0,-1,1,0);\n        len *= 0.48;\n    }\n}\nvoid three( vec2 pos, float len, inout vec4 color) {\n\ttree(pos, len, color);\n\ttree(pos.yx, len, color);\n\ttree(-pos.yx, len, color);\n}\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy, vec2(12.9898,78.233))) * 43758.5453);\n}\nfloat dir(float t) {\n    float orig = floor(rand(vec2(t,0.)) * 4.);\n    float prev = floor(rand(vec2(t-1.,0.)) * 4.);\n    float next = floor(rand(vec2(t+1.,0.)) * 4.);\n    if(mod(t,2.) < 0.5) {\n        // do not back\n        for(int i=0;i<4;i++) {\n            if(orig==prev || orig==next) orig = mod(orig+1., 4.);\n        }\n    }\n    return orig;\n}\n\nvec4 image(vec2 pos, float time) {\n    vec4 color = vec4(1.0);\n    float ratio = smoothstep(0.,1.,mod(time,1.));\n    float a = (dir(floor(time)) + mod(floor(time),2.) * 2.) * 3.1415926535/2.;\n    pos *= mat2(cos(a),sin(a),-sin(a),cos(a));\n    float s1 = mix(1.,0.48,1.-pow(1.-ratio,1.5));\n    float s2 = mix(1.,0.48,1.-pow(ratio,1.5));\n    three(pos - vec2(0.4*ratio, 0.), 0.4*s1, color);\n    three(-pos - vec2(0.4*(1.-ratio), 0.), 0.4*s2, color);\n    color = min(color, max(\n        smoothstep(-0.1, 0.1, (abs(pos.y)-w()) * 100.),\n        smoothstep(-0.1, 0.1, (abs(-pos.x)-0.8/2.) * 100.)\n\t));\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = (fragCoord-iResolution.xy/2.)/iResolution.y;\n    fragColor = image(pos, iTime);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}