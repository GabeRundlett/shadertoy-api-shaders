{
    "Shader": {
        "info": {
            "date": "1715535935",
            "description": "Fun stuff",
            "flags": 0,
            "hasliked": 0,
            "id": "XcKSR3",
            "likes": 4,
            "name": "grass blocks",
            "published": 3,
            "tags": [
                "2d",
                "grass",
                "minecraft"
            ],
            "usePreview": 0,
            "username": "ianertson",
            "viewed": 158
        },
        "renderpass": [
            {
                "code": "#define R iResolution\n\nuint pixels[] = uint[](\n  0xff3b9b18U, 0xff338516U, 0xff358a17U, 0xff328116U, 0xff3b9b18U, 0xff338416U, 0xff3b9b18U, 0xff358916U, 0xff358916U, 0xff399318U, 0xff3b9b18U, 0xff399318U, 0xff3da219U, 0xff2f7814U, 0xff399318U, 0xff358916U,\n  0xff3b9b18U, 0xff328116U, 0xff3b9b18U, 0xff338516U, 0xff3da219U, 0xff293d59U, 0xff3b9b18U, 0xff2f7814U, 0xff3da119U, 0xff358a17U, 0xff3b9b18U, 0xff348716U, 0xff3b9a18U, 0xff338216U, 0xff3b9b18U, 0xff328115U,\n  0xff358b17U, 0xff293d59U, 0xff3da219U, 0xff307a15U, 0xff3b9b18U, 0xff293d59U, 0xff338516U, 0xff293d59U, 0xff3b9b18U, 0xff399318U, 0xff358a17U, 0xff3da019U, 0xff293d59U, 0xff2c6f14U, 0xff358a17U, 0xff293d59U,\n  0xff293d59U, 0xff6c6c6cU, 0xff293d59U, 0xff293d59U, 0xff348716U, 0xff293d59U, 0xff293d59U, 0xff293d59U, 0xff2f7614U, 0xff293d59U, 0xff338216U, 0xff293d59U, 0xff3a5579U, 0xff293d59U, 0xff293d59U, 0xff3a5579U,\n  0xff4a6c96U, 0xff3a5579U, 0xff4a6c96U, 0xff5c85b9U, 0xff293d59U, 0xff4a6c96U, 0xff3a5579U, 0xff3a5579U, 0xff293d59U, 0xff293d59U, 0xff293d59U, 0xff6c6c6cU, 0xff3a5579U, 0xff4a6c96U, 0xff293d59U, 0xff3a5579U,\n  0xff3a5579U, 0xff293d59U, 0xff4a6c96U, 0xff4a6c96U, 0xff3a5579U, 0xff4a6c96U, 0xff293d59U, 0xff293d59U, 0xff293d59U, 0xff3a5579U, 0xff3a5579U, 0xff293d59U, 0xff3a5579U, 0xff3a5579U, 0xff3a5579U, 0xff5c85b9U,\n  0xff5c85b9U, 0xff3a5579U, 0xff3a5579U, 0xff3a5579U, 0xff878787U, 0xff3a5579U, 0xff3a5579U, 0xff5c85b9U, 0xff5c85b9U, 0xff3a5579U, 0xff5c85b9U, 0xff5c85b9U, 0xff3a5579U, 0xff4a6c96U, 0xff3a5579U, 0xff4a6c96U,\n  0xff3a5579U, 0xff3a5579U, 0xff5c85b9U, 0xff5c85b9U, 0xff4a6c96U, 0xff4a6c96U, 0xff3a5579U, 0xff3a5579U, 0xff4a6c96U, 0xff293d59U, 0xff4a6c96U, 0xff4a6c96U, 0xff3a5579U, 0xff3a5579U, 0xff4a6c96U, 0xff4a6c96U,\n  0xff4a6c96U, 0xff3a5579U, 0xff3a5579U, 0xff4a6c96U, 0xff3a5579U, 0xff4a6c96U, 0xff3a5579U, 0xff293d59U, 0xff3a5579U, 0xff4a6c96U, 0xff4a6c96U, 0xff3a5579U, 0xff3a5579U, 0xff3a5579U, 0xff293d59U, 0xff3a5579U,\n  0xff3a5579U, 0xff4a6c96U, 0xff293d59U, 0xff3a5579U, 0xff3a5579U, 0xff293d59U, 0xff293d59U, 0xff3a5579U, 0xff3a5579U, 0xff3a5579U, 0xff3a5579U, 0xff3a5579U, 0xff5c85b9U, 0xff5c85b9U, 0xff3a5579U, 0xff4a6c96U,\n  0xff3a5579U, 0xff4a6c96U, 0xff3a5579U, 0xff5c85b9U, 0xff5c85b9U, 0xff3a5579U, 0xff5c85b9U, 0xff4a6c96U, 0xff293d59U, 0xff5c85b9U, 0xff5c85b9U, 0xff293d59U, 0xff4a6c96U, 0xff4a6c96U, 0xff878787U, 0xff3a5579U,\n  0xff4a6c96U, 0xff3a5579U, 0xff3a5579U, 0xff4a6c96U, 0xff4a6c96U, 0xff5c85b9U, 0xff3a5579U, 0xff4a6c96U, 0xff6c6c6cU, 0xff4a6c96U, 0xff4a6c96U, 0xff3a5579U, 0xff293d59U, 0xff4a6c96U, 0xff3a5579U, 0xff293d59U,\n  0xff3a5579U, 0xff293d59U, 0xff4a6c96U, 0xff3a5579U, 0xff4a6c96U, 0xff4a6c96U, 0xff5c85b9U, 0xff3a5579U, 0xff3a5579U, 0xff3a5579U, 0xff3a5579U, 0xff3a5579U, 0xff3a5579U, 0xff3a5579U, 0xff5c85b9U, 0xff5c85b9U,\n  0xff3a5579U, 0xff4a6c96U, 0xff3a5579U, 0xff3a5579U, 0xff445874U, 0xff3a5579U, 0xff4a6c96U, 0xff4a6c96U, 0xff3a5579U, 0xff293d59U, 0xff5c85b9U, 0xff293d59U, 0xff3a5579U, 0xff5c85b9U, 0xff4a6c96U, 0xff4a6c96U,\n  0xff4a6c96U, 0xff3a5579U, 0xff293d59U, 0xff5c85b9U, 0xff3a5579U, 0xff293d59U, 0xff3a5579U, 0xff293d59U, 0xff5c85b9U, 0xff5c85b9U, 0xff3a5579U, 0xff4a6c96U, 0xff3a5579U, 0xff3a5579U, 0xff4a6c96U, 0xff4a6c96U,\n  0xff4a6c96U, 0xff3a5579U, 0xff5c85b9U, 0xff4a6c96U, 0xff4a6c96U, 0xff3a5579U, 0xff878787U, 0xff3a5579U, 0xff4a6c96U, 0xff4a6c96U, 0xff3a5579U, 0xff3a5579U, 0xff4a6c96U, 0xff4a6c96U, 0xff3a5579U, 0xff293d59U\n);\n\nuint getPixel32(vec2 uv) {\n    ivec2 coord = clamp(ivec2(floor(uv * 16.0)), ivec2(0), ivec2(16));\n    return pixels[clamp((256-1)-(coord.x + 16*coord.y), 0, 256-1)];\n}\n\nvec3 getPixel(vec2 uv) {\n    if (uv.x > 1.0 || uv.y > 1.0 || uv.x < 0.0 || uv.y < 0.0) return vec3(0.0);\n    uint pixel = getPixel32(uv);\n    uint r = (pixel >> (0U * 8U)) & 0xFFU;\n    uint g = (pixel >> (1U * 8U)) & 0xFFU;\n    uint b = (pixel >> (2U * 8U)) & 0xFFU;\n    return vec3(r, g, b) / float(0xFF);\n}\n\nmat2 rot(float a) { float c = cos(a); float s = sin(a); return mat2(c, s, -s, c); }\n\nfloat rand(vec2 ip) {\n    uvec2 p = floatBitsToUint(ip);\n    p.x ^= p.x << 17U;\n    p.x ^= p.x >> 13U;\n    p.x ^= p.x << 5U;\n    p.x *= 0xA3EFBFCEU;\n    p.y ^= p.x;\n    p.y ^= p.y << 17U;\n    p.y ^= p.y >> 13U;\n    p.y ^= p.y << 5U;\n    p.y *= 0xEFEBBFAFU;\n    p *= 5013U;\n    return float(p.x * 10U + p.y) / float(0xFFFFFFFFU);\n}\n\nvec3 getBlocks(vec2 uv) {\n    float k1 = 4.0;\n    vec2 id = floor(uv*k1);\n    float r1 = rand(id);\n    float k2 = mix(1.6, 3.0, rand(id));\n    float r2 = rand(id+r1+k2);\n    float r3 = rand(id+r1+k2+r2+5.591283);\n    float s = (r3 > 0.5 ? -1.0 : 1.0);\n    vec2 lv = fract(uv*k1)*k2;\n    vec3 col = getPixel((lv-(k2*0.5))*rot((iTime+3.1415*r2)*s)+0.5);\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord - 0.5 * R.xy) / R.y;\n    vec3 col = getBlocks(uv);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}