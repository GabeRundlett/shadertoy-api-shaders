{
    "Shader": {
        "info": {
            "date": "1574346843",
            "description": "Playing around with Shadertoy. Pretty tool! Made this simple retro scene reacting to the music that I made.",
            "flags": 64,
            "hasliked": 0,
            "id": "tsGSRy",
            "likes": 2,
            "name": "Retro Sunrise",
            "published": 3,
            "tags": [
                "raymarching",
                "music",
                "sunrise",
                "react"
            ],
            "usePreview": 0,
            "username": "propagant",
            "viewed": 472
        },
        "renderpass": [
            {
                "code": "#define STEPS 45\n#define MAX_RENDER 5.0\n\nfloat freq;\n\nfloat Sphere(vec3 p, vec4 s)\n{\n    return length(p-s.xyz)-s.w;\n}\n\nvec4 GetDist(vec3 p, int i)\n{\n    vec4 sphere = vec4(0.5, .1,0., Sphere(p,vec4(0., cos(iTime * .2) *0.5, 3., .8 + (freq*.8))));\n    vec4 ground = vec4(0.5, 0.1, 0.6, p.y+.8);\n    vec4 group = vec4((sphere.w<ground.w)?sphere.xyz:ground.xyz, min(sphere.w, ground.w));\n    return group;\n}\n\n\nvec4 rayMarch(vec3 ro, vec3 rd)\n{\n    float originD = 0.0;\n    vec3 col = vec3(0.0);\n    \n \tfor(int i = 0; i < STEPS; i++)\n    {\n        freq = clamp( 2.9*pow( texture( iChannel0, vec2(0.2 + 0.2*float(i)/24.0, 0.15 ) ).x, 3.0 ), 0.0, 1.0 );\n        \n        vec3 pos = ro + rd * originD;\n        vec4 screenP = GetDist(pos, i);\n        originD += screenP.w;\n        col += screenP.xyz;\n        \n        if(originD > MAX_RENDER)\n        {\n            col = abs(vec3(float(i)/(freq * 16.)+abs(sin(iTime/8.))*-1.));\n        \tcol += vec3(1.-rd.y * 8.) + vec3(4.2,0.8,3.9);\n            break;\n        }\n    }\n    \n    return vec4(col,originD);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    uv.y -= 0.5;\n    \n    vec3 ro = vec3(0.0,0.0,-.8);\n    vec3 rd = normalize(vec3(uv.xy,1.0));\n    \n    vec4 c = rayMarch(ro,rd);\n    c/=8.;\n    \n    vec3 col = vec3(c);\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 20272,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/matejvanco/my-ambition?in=matejvanco/sets/electronic"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}