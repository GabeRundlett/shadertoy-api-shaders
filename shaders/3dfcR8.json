{
    "Shader": {
        "info": {
            "date": "1608840321",
            "description": "parametric curves again, whay can't I save more versions?  is this working?",
            "flags": 0,
            "hasliked": 0,
            "id": "3dfcR8",
            "likes": 1,
            "name": "parametric_v0007",
            "published": 3,
            "tags": [
                "learning"
            ],
            "usePreview": 0,
            "username": "darkczar",
            "viewed": 279
        },
        "renderpass": [
            {
                "code": "\n// based on...\n// https://www.shadertoy.com/view/lssfW2\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p=(2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec2 curve_p = vec2(0,0);\n    float d = 10000.0;\n    float di = 0.;\n    for(int i = 0;i<1200;i++)\n    {\n        di = float(i)*.04;\n        curve_p.x = -.1*sin(.4*iTime)+.05*float(di)*sin(float(di)+.2*iTime);\n        curve_p.y = -.1*cos(.4*iTime)+.05*float(di)*cos(float(di)+.2*iTime);\n        d = min(d, length(p-curve_p));\n  \n    }\n\n    vec3 col = vec3(2.*d*d,.002 + .25*sin(.001*d*d+.1*length(p)), abs(.5+.13*sin(iTime*.8) - pow(d,.25)));\n    float dn = col.x + col.y + col.z;\n    col /= dn;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}