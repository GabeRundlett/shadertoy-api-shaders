{
    "Shader": {
        "info": {
            "date": "1456964164",
            "description": "The classic fire effect",
            "flags": 32,
            "hasliked": 0,
            "id": "XdcGDB",
            "likes": 15,
            "name": "Demo Effect: Fire",
            "published": 3,
            "tags": [
                "fire",
                "feedback"
            ],
            "usePreview": 0,
            "username": "4rknova",
            "viewed": 1478
        },
        "renderpass": [
            {
                "code": "// by Nikos Papadopoulos, 4rknova / 2016\n// Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage(out vec4 c, vec2 p)\n{\n\tc = texture(iChannel0, p.xy / iResolution.xy);\n    c = 1. - cos(c*3.14159/1.3); // Contrast\n\tc = vec4(min(c.x*1.7, 1.), pow(c.x, 2.6), pow(c.x, 10.), 1); // Palette\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// by Nikos Papadopoulos, 4rknova / 2016\n// Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define QUALITY_HIGH\n\n#define GRID_SIZE  (75.000)\n#define COEF       ( 0.186)\n\nfloat hash(vec2 p)\n{\n    return fract(sin(dot(p,vec2(127.1,311.7))) * 43758.5453123);\n}\n\nfloat noise(vec2 p)\n{\n    vec2 i = floor(p), f = fract(p); \n\tf *= f*f*(3.-2.*f);\n    return mix(mix(hash(i + vec2(0.,0.)), \n                   hash(i + vec2(1.,0.)), f.x),\n               mix(hash(i + vec2(0.,1.)), \n                   hash(i + vec2(1.,1.)), f.x), f.y);\n}\n\nfloat fbm(in vec2 p)\n{\n\treturn\t.5000 * noise(p)\n\t\t   +.2500 * noise(p * 2.)\n\t\t   +.1250 * noise(p * 4.)\n\t\t   +.0625 * noise(p * 8.);\n}\n\nvoid mainImage(out vec4 c, in vec2 p)\n{\n    // Divide screen in cells\n    float f = 1. / GRID_SIZE;\n    vec2 ac = vec2(iResolution.x / iResolution.y, 1);\n    vec2 uv = (p / iResolution.xy * 2. - 1.) * ac;\n    vec2 iuv = floor(GRID_SIZE * uv);\n    \n    // Initialize the bottom row to a random value\n    if (iuv.y < -GRID_SIZE + 1.) {\n        c = vec4(\n#ifdef QUALITY_HIGH\n            fbm\n#else\n            hash\n#endif\n            ((iuv * f + iTime)*3.), 0, 0, 1) - .1;\n        return;\n    } \n    \n    // For all other rows, calculate the weighted average\n    // value below the current pixel\n    iuv = (uv / ac + 1.) *.5;\n        \n    float c0 = texture(iChannel0, iuv + vec2(.0,-f) / ac).x;\n    float c1 = texture(iChannel0, iuv + vec2( f,-f) / ac).x;\n    float c2 = texture(iChannel0, iuv + vec2( f,-f) / ac).x;\n    float c3 = texture(iChannel0, iuv + vec2( f,-f * 2.)  / ac).x;\n\tfloat c4 = texture(iChannel0, iuv + vec2(-f,-f * 2.)  / ac).x;\n    \n    c = vec4((c0+c1+c2+c3+c4) * COEF, 0, 0, 1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}