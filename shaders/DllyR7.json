{
    "Shader": {
        "info": {
            "date": "1690535359",
            "description": "test2",
            "flags": 0,
            "hasliked": 0,
            "id": "DllyR7",
            "likes": 0,
            "name": "Test2-MrFuzz32",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "MrFuzz32",
            "viewed": 163
        },
        "renderpass": [
            {
                "code": "vec3 palette(float t){\n    vec3 a = vec3(0.968, 1.118, 1.278);\n    vec3 b = vec3(0.268, 0.318, 0.448);\n    vec3 c = vec3(-0.342, -0.162, 0.158);\n    vec3 d = vec3(-0.582, -0.452, -0.452);\n\n    return a + b*cos(6.28318*(c*t+d));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Conform pixel coordinates to -1 to 1, and adjust for aspect ratio\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 finalColour = vec3(0.0);\n\n    vec3 col = palette((abs(uv.y)-0.5)*(sin(iTime/4.0)*4.0));\n    col *= 0.03/(abs(sin(uv.x*(sin(iTime/8.0)-0.0)*13.0)-uv.y*3.0));\n\n    finalColour += col;\n    // Output to screen\n    fragColor = vec4(finalColour,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}