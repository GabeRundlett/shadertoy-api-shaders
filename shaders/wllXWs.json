{
    "Shader": {
        "info": {
            "date": "1564694167",
            "description": "from wyatt https://www.shadertoy.com/view/WtsSz2\n",
            "flags": 32,
            "hasliked": 0,
            "id": "wllXWs",
            "likes": 12,
            "name": "fluid with more comments",
            "published": 3,
            "tags": [
                "fluid"
            ],
            "usePreview": 0,
            "username": "lomateron",
            "viewed": 639
        },
        "renderpass": [
            {
                "code": "#define LOOKUP(COORD) texture(iChannel0,COORD/iResolution.xy)\nvoid mainImage( out vec4 color, in vec2 coord )\n{\n\tvec4 a = LOOKUP(coord)*4.;\n    color = .5+.5*cos(6.28*(.4+length(a)+vec4(.0,.1,.2,.0)));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define LOOKUP(COORD) texture(iChannel0,COORD/iResolution.xy)\nvec4 Field(vec2 position)\n{\n    vec2 velocityGuess = LOOKUP(position).xy;\n    vec2 positionGuess = position - velocityGuess;\n\treturn LOOKUP(positionGuess);\n}\nvoid mainImage( out vec4 Energy, in vec2 Me )\n{\n    vec4 C = Field(Me + vec2(0,0));//CENTER\n    vec4 R = Field(Me + vec2(1,0));//RIGHT\n    vec4 U = Field(Me + vec2(0,1));//UP\n    vec4 L = Field(Me - vec2(1,0));//LEFT\n    vec4 D = Field(Me - vec2(0,1));//DOWN\n    \n    //   += because once an object is in motion it keeps moving\n    C.xy += (-vec2(1,0)*(R.z-C.z)\n             -vec2(0,1)*(U.z-C.z)\n             +vec2(1,0)*(L.z-C.z)\n             +vec2(0,1)*(D.z-C.z))/4. //.z is the pressure\n                                      //an unbalance of pressure creates velocity\n                                      //if pressure here is bigger than there\n                                      //then velocity here will move there\n                                      //if pressure here is lower  than there\n                                      //then velocity there will move here\n                                      //find the pressure unbalance between center pixel and each neighbor\n                                      //then calculate the average\n            -vec2(0,1) * C.w/512.;//down gravity\n\n    C.z = (C.z + R.z + U.z + L.z + D.z)/(5.+.02) + //average of all local and neighbor pressure\n                                                  //makes the pressure diffuse through space\n                                                  //+.02 to dampen the pressure waves\n          (+dot(-vec2(1,0),R.xy-C.xy)\n           +dot(-vec2(0,1),U.xy-C.xy)\n           +dot(+vec2(1,0),L.xy-C.xy)\n           +dot(+vec2(0,1),D.xy-C.xy))/4.;//.xy is the velocity\n                                          //an unbalance of velocity creates pressure\n                                          //if velocity here goes in a direction faster than velocity there\n                                          //then pressure there comes in here\n                                          //if velocity here goes in a direction slower than velocity there\n                                          //then pressure here goes there\n                                          //find the velocity unbalance between center pixel and each neighbor\n                                          //then calculate the average\n    //  += because of conservation of mass\n    C.w += (+dot(-vec2(1,0),R.xy-C.xy)*R.w\n            +dot(-vec2(0,1),U.xy-C.xy)*U.w\n            +dot(+vec2(1,0),L.xy-C.xy)*L.w\n            +dot(+vec2(0,1),D.xy-C.xy)*D.w)/4.; //.w is the mass\n                                                //if mass here goes in a direction faster than the other mass\n                                                //then mass here is transfered there\n                                                //if mass here goes in a direction slower than the other mass\n                                                //then mass there is transfered here\n                                                //find total mass transfer between center pixel and each neighbor\n    \n    if(Me.x<10.||Me.y<10.||iResolution.x-Me.x<10.||iResolution.y-Me.y<10.)\n    {\n    \tC.xy *= 0.;\n    } \n    if (iMouse.z > 0. && length(Me-iMouse.xy) < 20.)\n    {\n        C = (1.-length(Me-iMouse.xy)/20.)*vec4(.5,.5,.5,.5);\n    }\n    Energy = C;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}