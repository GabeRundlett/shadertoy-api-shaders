{
    "Shader": {
        "info": {
            "date": "1506658046",
            "description": "Draw with your mouse - a very simple example of multi-pass rendering.\nEvery frame, \"Buffer A\" reads it's previous render and fades it out/blurs it a little, then draws the latest position.\nThe \"Image\" shader renders the latest \"Buffer A\" pass",
            "flags": 32,
            "hasliked": 0,
            "id": "llfcDf",
            "likes": 3,
            "name": "Mouse Fade",
            "published": 3,
            "tags": [
                "multipass"
            ],
            "usePreview": 0,
            "username": "tomorrowevening",
            "viewed": 214
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy);\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "const float circleRadius = 0.1;\nconst float fade = 0.99;\n\nfloat drawCircle(vec2 pos, vec2 uv) {\n    float dist = distance(pos, uv);\n    if(dist < circleRadius) {\n        float a = 1.0;\n        // Anti-alias\n        float maxDist = circleRadius * 0.6;\n        if(dist > maxDist) {\n            a = 1.0 - ((dist - maxDist) / (circleRadius - maxDist));\n        }\n        return a;\n    }\n    return 0.0;\n}\n\nvec3 HueShift (in vec3 Color, in float Shift)\n{\n    vec3 P = vec3(0.55735)*dot(vec3(0.55735),Color);\n    \n    vec3 U = Color-P;\n    \n    vec3 V = cross(vec3(0.55735),U);    \n\n    Color = U*cos(Shift*6.2832) + V*sin(Shift*6.2832) + P;\n    \n    return vec3(Color);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy);\n    // Correct positioning\n    vec2 aspect = vec2(iResolution.x / iResolution.y, 1.0);\n    \n    // Draw previous buffer (with slight blur via LOD)\n    vec4 color = texture(iChannel0, uv, 1.5);\n    // Fade previous image\n    color.xyz -= vec3(1.0 - fade);\n    \n    // Draw new circle\n    vec2 pos = vec2(\n        sin(iTime) * 0.3 + 0.5,\n        cos(iTime) * 0.3 + 0.5\n    );\n    if(iMouse.z > 0.0) {\n        pos = iMouse.xy / iResolution.xy;\n    }\n    float circle = drawCircle(pos * aspect, uv * aspect);\n    color.rgb = mix(color.rgb, HueShift(vec3(uv, 1.0), iTime * 0.1), circle);\n    fragColor = color;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}