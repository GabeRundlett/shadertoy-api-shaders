{
    "Shader": {
        "info": {
            "date": "1518737056",
            "description": "Time's running.\n\nInspired by: https://giphy.com/gifs/clock-tick-tock-IZcjxKQNbOOly",
            "flags": 0,
            "hasliked": 0,
            "id": "lt2cDD",
            "likes": 10,
            "name": "Tick, Tock",
            "published": 3,
            "tags": [
                "tick",
                "tock"
            ],
            "usePreview": 1,
            "username": "emdeka87",
            "viewed": 703
        },
        "renderpass": [
            {
                "code": "#define RADIUS 2.\n#define NUM 10. //should be even :)\n\n#define ACTIVE_TRESHOLD 0.95\n#define ACTIVE_COLOR vec3(1)\n#define INACTIVE_COLOR vec3(0.4)\n\n#define CC(c, col) O-=(char(U,64+c).x * vec4(col, 1))\n#define C(c) CC(c, vec3(1))\n#define S(x,y) U+=vec2(x,y)\n\n#define PI      3.1415926535897932\n#define HALF_PI 1.5707963267948966\n\nvec4 char(vec2 p, int c)\n{\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n   \treturn textureGrad( iChannel0, \n                         p/16. + fract( vec2(c, 15-c/16) / 16. ),\n                         dFdx(p/16.), dFdy(p/16.));\n}\n\nfloat elasticOut(float t) {\n  return sin(-9.0 * (t + 1.0) * HALF_PI) * pow(2.0, -10.0 * t) + 1.0;\n}\n\n\nvoid mainImage( out vec4 O, vec2 uv )\n{\n    vec2 U = (2. * uv - iResolution.xy) / iResolution.y;\n    U *= 3.5;\n    U += vec2(0.5,-2.);\n    O = vec4(1);\n    \n    C(20); //T\n    S(0,0.8);\n\n    float s = (2. * PI) / NUM;\n    float off = (1. - step(mod(NUM, 4.), 0.)) * (s / 2.);\n    float angle = off;\n              \n    float tick = elasticOut(fract(iTime));\n    float alt = step(mod(floor(iTime), 2.), 0.);\n    tick = alt - tick; \n\n    S(0., +RADIUS);\n    for (float i = 0.; i < NUM; i++) \n    {   \n       \tfloat a = mix(angle, angle + s, tick);\n    \tfloat x = RADIUS * cos(a);\n    \tfloat y = RADIUS * sin(a);\n     \n        vec2 dir = normalize(vec2(x,y));\n        float top = step(dot(vec2(0,-1), dir), ACTIVE_TRESHOLD);\n        vec3 color = mix(ACTIVE_COLOR, INACTIVE_COLOR, top);\n        int ch = int(mix(15., 9., mod(i, 2.0)));\n\n        S(x, y);\n   \t\tCC(ch, color); //mix(vec3(1,0,0), vec3(0,1,0), tick));\n        S(-x, -y);\n        \n        angle += s;\n    }\n    S(0., -RADIUS);\n    \n    S(0,0.8);\n    C(3); //C\n    S(0,0.8);\n    C(11); //K\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}