{
    "Shader": {
        "info": {
            "date": "1637939210",
            "description": "my first shader",
            "flags": 0,
            "hasliked": 0,
            "id": "Nty3Ry",
            "likes": 1,
            "name": "Plotting by dmc3105",
            "published": 3,
            "tags": [
                "math"
            ],
            "usePreview": 0,
            "username": "dmc3105",
            "viewed": 227
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float pixelsPerSegment = pow(1.2, iTime+ 15.0);\n    float axisThickness = 2.0;\n    float gridThickness = 3.0;\n    float graficThickness = 5.0;\n    \n    vec2 inp = (fragCoord - iResolution.xy * 0.5)/ pixelsPerSegment ;\n    vec2 center = iResolution.xy * 0.5;\n    \n    float x = inp.x;\n    float y = sin(x);\n    \n    \n    vec3 col = vec3(1.0);\n    graficThickness *= 0.5;\n    // draw grid\n    float startX = fragCoord.x - center.x + gridThickness * 0.5;\n    if (startX - (float(int((startX) / pixelsPerSegment))\n        * pixelsPerSegment)<= gridThickness &&\n        fragCoord.x > center.x)\n        col = vec3(0.9);\n    startX = fragCoord.x - center.x - gridThickness * 0.5;\n    if (abs(startX - (float(int((startX) / pixelsPerSegment)))\n        * pixelsPerSegment) <= gridThickness &&\n        fragCoord.x < center.x)\n        col = vec3(0.9);\n    float startY = fragCoord.y - center.y + gridThickness * 0.5;\n    if (startY - (float(int((startY) / pixelsPerSegment))\n        * pixelsPerSegment)<= gridThickness &&\n        fragCoord.y > center.y)\n        col = vec3(0.9);\n    startY = fragCoord.y - center.y - gridThickness * 0.5;\n    if (abs(startY - (float(int((startY) / pixelsPerSegment)))\n        * pixelsPerSegment) <= gridThickness &&\n        fragCoord.y < center.y)\n        col = vec3(0.9);\n        \n        \n\n    //draw axis\n    if (abs(iResolution.x * 0.5 - fragCoord.x) <= axisThickness ||\n        abs(iResolution.y * 0.5 - fragCoord.y) <= axisThickness )\n    {\n        col = vec3(0.0);\n    }\n    \n    \n    \n    // draw function\n    if (pow((pow(inp.y - y, 2.0) + pow(inp.x - x, 2.0)), 0.5) < graficThickness / pixelsPerSegment)\n    {\n        col = vec3(0.0);\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}