{
    "Shader": {
        "info": {
            "date": "1469661641",
            "description": "restart time to sync to music :)\nmaterial based on FabriceNeyret2's natural colors https://www.shadertoy.com/view/XldGDM\nI guess this would have been a good entry for [SH16B], too bad I didn't have time",
            "flags": 64,
            "hasliked": 0,
            "id": "Xld3DM",
            "likes": 12,
            "name": "Colorful Rush",
            "published": 3,
            "tags": [
                "raymarch",
                "color",
                "motionblur"
            ],
            "usePreview": 0,
            "username": "mu6k",
            "viewed": 1187
        },
        "renderpass": [
            {
                "code": "/*by musk License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.*/\n\n#define SAMPLES 4\n#define STEPS 64\n\nfloat df(vec3 p, float time, float scene){\n    vec3 r = mod(p.xyz+2.0, 4.0)-2.1;\n    vec3 i = p-r;\n    r+=sin(i.xyz + i.yzx + i.zxy + time*vec3(2.7,2.1,2.3)*sin(scene))*.25;\n\treturn length(r)-(.2+fract(dot(i,vec3(13.7,19.14,11.3))));\n    \n}\n\nvec2 rot(vec2 v, float a){\n\tfloat c=cos(a), s=sin(a);\n    return mat2(c,s,-s,c)*v;\n}\n\nvec3 nf(vec3 p, float time, float scene){\n    vec2 e= vec2(0, 0.01);\n    float c = df(p,time, scene);\n    return normalize(vec3(c-df(p+e.yxx,time, scene),c-df(p+e.xyx,time, scene),c-df(p+e.xxy,time, scene)));\n}\n\n//from FabriceNeyret2's natural colors https://www.shadertoy.com/view/XldGDM\nvec3 naturalColor( float hue, float value )\n{\n    vec3  T = .4+.4*cos(hue+vec3(0,2.1,-2.1));\n    float z = value;\n    return pow(T, vec3(z));  \n}\n\nvec3 mat_id(vec3 p){\n    vec3 r = mod(p.xyz+2.0, 4.0)-2.0;\n    vec3 i = p-r;\n    return i;\n}\n\nvec3 matcolor(vec3 pos, float time, float scene){\n    \n    vec3 ldir = normalize(sin(vec3(1,2,3)+iTime));\n    vec3 nor = nf(pos,time, scene);\n    vec3 m = mat_id(pos);\n    float hue = fract(dot(m,vec3(1.2,17.3,143.8)))*-4.0 + gl_FragCoord.x/iResolution.x + scene*7.0;\n    float var = dot(m,vec3(3.2,13.3,171.8));\n    float value = sin(var)*.5+1.6+dot(ldir,nor);\n    value*=1.2;\n    vec3 c = naturalColor(hue, value);\n    return c;\n}\n\nvec3 rotation(vec3 dir, float t, float scene)\n{\n    t+=scene*13.712;\n    t*=fract(scene*3.1245);\n    vec2 q = t*vec2(.2,.4);\n    dir.xy = rot(dir.xy, q.x);    \n    dir.xz = rot(dir.xz, q.y);\n    return dir;\n}\n\nvec3 image(vec2 fragCoord, float time, float scene, float speed){\n    \n\tvec2 uv = fragCoord.xy / iResolution.yy;\n    vec2 ruv = (fragCoord.xy-iResolution.xy*.5)/iResolution.yy;\n    \n    \n    //vec3 pos = vec3(2.0,2.0,2.0);\n    float ptime = time*speed;\n    vec3 pos = vec3(2.0+ptime*-4.0,2.0+ptime*-4.0,ptime*-4.0);\n    vec3 dir = normalize(vec3(ruv,1.0));\n    \n    dir = rotation(dir, time, scene);\n        \n    float size = min(64.0,mix(8.0,256.0,-cos(time*(3.14159/243.39))*.5+.5));\n    float t,tt=.0,it;\n    for (int i=0; i<STEPS; i++){\n        t = df(pos, time, scene);\n        pos += dir*t;\n        tt += t;\n        it = float(i);\n        if (t<.01||tt>size) break;\n    }\t\n    \n    tt=min(size,tt);\n    vec3 c = matcolor(pos, time, scene);\n        c+=naturalColor(.1,(size-tt)*.1);\n        if (tt>=size){\n            c=vec3(dot(c,vec3(0.3,0.5,0.2)));\n        }\n    //c=vec3(df(pos-nor));\n\t//c= min(vec3(2.0),c);\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.yy;\n    vec2 ruv = (fragCoord.xy-iResolution.xy*.5)/iResolution.yy;\n    vec3 dir = normalize(vec3(ruv,1.0));\n    float time = mod(iTime, 244.86-1.47);\n    float scene = (time-mod(time+2.0,4.0));\n    float st = time*0.25+0.5;\n    float speed = \n        st<0.01?0.0:\n        st<1.0?300.0:\n        st<3.0?0.2:\n        st<5.0?0.4:\n        st<7.0?0.6:\n        st<9.0?0.9:\n        st<13.0?0.2:\n        st<19.0?2.2:\n        st<25.0?4.2:\n        st<29.0?24.2:\n        st<33.0?8.2:\n        st<37.0?-247.2:\n        st<45.0?0.2:\n        st<53.0?6.0:\n        st<57.0?12.0:\n        st<65.0?0.6:\n    \t\t1.0;\n    \n    vec3 acc = vec3(0);\n    for (int i=0; i<SAMPLES; i++){\n    \tvec4 uvnoise = texture(iChannel0, (fragCoord.xy+floor((time-float(i))*13.73123))/256.0);\n        vec3 c = image(fragCoord + uvnoise.xy, time + uvnoise.z/48.0, scene, speed);\n        acc+=c;\n    }\n    acc/=float(SAMPLES);\n    vec3 c = acc;\n    \n    dir = rotation(dir, iTime, scene);\n    dir.y*=.5;\n    dir.z*=.25;\n    c = mix(c*(1.4-length(ruv)*.4)-0.1,dir*.5+.5,.3);\n    c = pow(1.4*c/(1.0+c*.4),vec3(.8));\n    \n\tfragColor = vec4(c,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "musicstream",
                        "id": 4399,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/55-bpm/chasing-shadows"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}