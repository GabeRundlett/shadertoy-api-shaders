{
    "Shader": {
        "info": {
            "date": "1614271387",
            "description": "Anyone can construct a square with the same area as a circle. Child's play. Try constructing another circle with the squared area of the first using a compass and straight edge. ;)",
            "flags": 0,
            "hasliked": 0,
            "id": "tlVBWh",
            "likes": 6,
            "name": "Squaring the Area",
            "published": 3,
            "tags": [
                "squaredcircle"
            ],
            "usePreview": 0,
            "username": "eiffie",
            "viewed": 365
        },
        "renderpass": [
            {
                "code": "//Squaring the Circle by eiffie\n//The green circle has area pi^2\n#define rez iResolution.xy\n\n//#define GETABITCLOSER\nfloat hash(vec2 v){return fract(sin(dot(v,vec2(17.1,113.3)))*436.123);}\nvec2 norm(float a){return vec2(cos(a),sin(a));}\nvec3 compass(vec2 v, vec2 c, float r){\n  v-=c;\n  return vec3(10.0,0.3*length(v),abs(length(v)-r));\n}\nvec3 edge(vec2 v, vec2 a, vec2 b){\n  vec2 p=b-a;a=v-a;p*=clamp(dot(a,p)/dot(p,p),0.0,1.0);\n  return vec3(distance(a,p),0.3*min(length(a),length(v-b)),10.0);\n}\nvoid mainImage(out vec4 O, in vec2 U){\n  vec2 p=2.0*(2.0*U.xy-rez)/rez.y;\n  float rnd=hash(U)*0.8+0.2;\n  vec3 blue=vec3(0.5,0.6,0.7),red=vec3(0.9,0.6,0.5),green=vec3(0.6,0.7,0.5),col=vec3(10.0);\n  col=min(col,edge(p,vec2(0.0,-2.0),vec2(0.0,2.0)));\n  col=min(col,edge(p,vec2(2.0,0.0),vec2(-2.0,0.0)));\n  col=min(col,compass(p,vec2(0),1.));\n  col=min(col,compass(p,vec2(0),sqrt(3.14159)).xzy);\n  col=min(col,edge(p,vec2(0.0,0.0),vec2(2.0,2.0)));\n #ifdef GETABITCLOSER\n  col=min(col,compass(p,vec2(.5,0),.5));\n  col=min(col,compass(p,vec2(.75,0),.25));\n  col=min(col,compass(p,vec2(1,0),.25));\n  col=min(col,edge(p,vec2(1.25,0.0),vec2(1.25,1.25)));\n #else\n  float t2=1./sqrt(2.);\n  col=min(col,compass(p,vec2(t2),length(vec2(t2,1.-t2))));\n #endif\n  col=smoothstep(vec3(5.0/rez.y),vec3(0.0),col)*0.85+vec3(0.0,0.0,0.15);\n  O=vec4(rnd*(red*col.r+green*col.g+blue*col.b),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}