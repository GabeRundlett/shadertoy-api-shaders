{
    "Shader": {
        "info": {
            "date": "1552962604",
            "description": "Put on your favorite tunes and enjoy the show!",
            "flags": 4,
            "hasliked": 0,
            "id": "tdXSRS",
            "likes": 6,
            "name": "Spinning Sound Waves",
            "published": 3,
            "tags": [
                "music",
                "visualizer",
                "musicvisualizer",
                "microphone"
            ],
            "usePreview": 0,
            "username": "yonibr",
            "viewed": 1179
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592654\n#define FLIP_POINT 2. // For old version use 4.\n\n// TODO: convert to floats and remove later div by 255\nconst vec3[] colors = vec3[](vec3(255,   0,   0), vec3(255, 127,   0),\n                             vec3(255, 255,   0), vec3(  0, 255,   0),\n                             vec3(  0,   0, 255), vec3( 75,   0, 130),\n                             vec3(148,   0, 211));\n\nmat2 rotate(float rad) {\n    float c = cos(rad);\n    float s = sin(rad);\n    return mat2(\n        c, -s,\n        s, c\n    );\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= 4.; uv.y -= 2.;\n\t\n    fragColor = vec4(0, 0, 0, 1);\n    \n\tfor (int i = 0; i < 7; i++)\n    {\n        vec2 r = rotate(float(i) * PI / 7. - iTime / 2.) * (uv - vec2(2, 0)) + vec2(2,0);\n        \n    \tfloat a = texture(iChannel0, vec2( r.x, 0.25)).x;\n        \n        float c = r.x < FLIP_POINT ? abs(r.y - a) : abs(-r.y - a) ;\n        c = c < .02 ? pow(1. - c * 50., .75) : 0.;\n        \n    \tfragColor.rgb += c * colors[i] / 255.;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "mic",
                        "id": 32,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/mic.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}