{
    "Shader": {
        "info": {
            "date": "1709142661",
            "description": "continuing to explore the space of exponential fractals\n[url=https://www.shadertoy.com/playlist/s3BcD1]FRACTAL PLAYLIST[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "MXj3Rt",
            "likes": 7,
            "name": "Cyclops I",
            "published": 3,
            "tags": [
                "fractal",
                "orbit",
                "trap",
                "exponentiation",
                "tetration"
            ],
            "usePreview": 0,
            "username": "domrally",
            "viewed": 282
        },
        "renderpass": [
            {
                "code": "/*\nby Dom Mandy in 2024\n*/\nvoid mainImage(out vec4 P, vec2 V) {\n    vec2 Z = iResolution.xy,\n         C = .6 * (Z - V - V).yx / Z.y;\n    C.x += .77;\n    V = C;\n\n    float v, x, y,\n          z = y = x = 9.;\n\n    for (int k; k < 500; k++) {\n        float a = atan(V.y, V.x), \n        d = dot(V, V);\n        float c = dot(V, vec2(a, log(d) / 2.));\n        V = exp(-a * V.y) * pow(d, V.x / 2.) * vec2(cos(c), sin(c));\n        V = vec2(V.x * V.x - V.y * V.y, dot(V, V.yx));\n        V -= C;\n\n        x = min(x, abs(V.x));\n        y = min(y, abs(V.y));\n        z > (v = dot(V, V)) ? z = v, Z = V : Z;\n    }\n\n    z = 1. -  smoothstep(1., -6., log(y)) * smoothstep(1., -6., log(x));\n    P = sqrt(z + (z - z * z * z) * cos(atan(Z.y, Z.x) - vec4(0, 2.1, 4.2, 0)));\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}