{
    "Shader": {
        "info": {
            "date": "1708892548",
            "description": "Computations and approximations related to [url=https://en.wikipedia.org/wiki/Mesopic_vision]mesopic vision[/url].\nLeft - raw.\nRight - mesopic-adjusted.\nLMB to adjust light position (y), and reference luminance (x=log(Lref); left=default, right=auto).",
            "flags": 0,
            "hasliked": 0,
            "id": "4X23Dy",
            "likes": 7,
            "name": "Mesopic luminance",
            "published": 3,
            "tags": [
                "spectrum",
                "cie",
                "scotopic",
                "mesopic"
            ],
            "usePreview": 0,
            "username": "FordPerfect",
            "viewed": 179
        },
        "renderpass": [
            {
                "code": "// Public Domain under http://unlicense.org, see link for details.\n\n// Computations and approximations related to mesopic vision.\n// Builds up on:\n//     https://www.shadertoy.com/view/msXyDH\n//     https://www.shadertoy.com/view/dsccRj\n\n// Let us say we have a light with known spectrum. Specifically,\n// we know the spectral radiance E(λ) (in W*m^-2*sr^-1*nm^-1).\n// Then, photopic (Lp, daylight vision) and scotopic (Ls, nighttime vision)\n// luminances are defined as:\n//     Lp= 683*∫V(λ) *E(λ)*dλ\n//     Ls=1700*∫V'(λ)*E(λ)*dλ\n// where V(λ) and V'(λ) are photopic and scotopic luminous efficiency\n// functions (see http://www.cvrl.org/cie.htm), and the integrals are\n// taken on [380;780] nm.\n// These luminances (Lp,Ls) are photometric quantities\n// (see https://en.wikipedia.org/wiki/Photometry_(optics)), measured in cd/m^2,\n// which correspond to what we percieve as \"brightness\".\n// The factors 683 and 1700 are simply their peak luminous efficacies\n// (see https://en.wikipedia.org/wiki/Luminous_efficacy) in lm/W.\n// NOTE:\n//     1. Luminous *efficiency* is (dimensionless) luminous *efficacy*, normalized to have peak of 1.\n//     2. Some sources list the coefficients as 683.002 and/or 1699.\n//     3. V(λ) has maximum at 555 nm.\n//     4. V'(λ) has maximum at 507 nm.\n//     5. Luminous efficacy is the same for both at 555 nm: K(555)=K'(555)=683.\n//     6. CIE1924 V(λ) is the same as Y in CIE1931 XYZ(λ).\n// Depending on the value of the luminance (see below regarding WHICH one),\n// the vision is considered to be in one of the 3 ranges:\n//     1. [5;inf)  cd/m^2 - photopic vision\n//     2. [0;5e-3] cd/m^2 - scotopic vision\n//     3. (5e-3;5) cd/m^2 - mesopic vision\n// In the photopic and scotopic ranges, the overall luminance is\n// simply considered to be Lp and Ls, respectively.\n// In the mesopic range, CIE 191:2010 (CIE MES2) defines mesopic luminance\n// Lmes as a weighted sum of Lp and Ls that satisfies the following\n// nonlinear system of equations for Lmes and coefficient of adaptation m:\n//     Lmes=(m*Lp+(1-m)*Ls*C)/(m+(1-m)*C)\n//     m=a+b*log10(Lmes)\n// where a=0.7670, b=0.3334, and C=683/1699.\n// Once we have m, we can compute other mesopic quantities via\n//     Qmes=(m*Qp+(1-m)*Qs*C)/(m+(1-m)*C)\n// CIE MES2 recommends to solve this system via fixed-point iteration method,\n// starting with m=0.5. The tabulated values for some inputs are also provided.\n// This draws some criticism, as e.g. the system does not guarantee\n// existence/uniqueness of the solution, as pointed out in\n//     C. Gao, Y. Xu, Z. Wang, M. Melgosa, M. Pointer, M. Luo, K. Xiao, and C. Li, \"Improved computation of the adaptation coefficient in the CIE system of mesopic photometry,\" Opt. Express  25, 18365-18377 (2017).\n//     https://opg.optica.org/oe/fulltext.cfm?uri=oe-25-15-18365&id=370054 (doi: 10.1364/OE.25.018365)\n// which provides explicit examples, and proposes to fix this by\n// using different values of a and b: a=1-log10(5)/3, b=1/3 (which might\n// have been the originally intended values). Still more criticism is in\n//     Shpak M, Kärhä P, Ikonen E. Mathematical limitations of the CIE mesopic photometry system. Lighting Research & Technology. 2017;49(1):111-121. doi:10.1177/1477153515599436\n// which points problems with  definition of the mesopic region itself:\n// the [5e-3;5] cd/m^2 range is supposed to be for Lmes, but that introduces\n// discontinuity for low  Ls/Lp ratios (while on [380;780] 0.01 ≤ Ls/Lp≤ 73,\n// it is possible to get extremely low ratio on [360;830]; it is also\n// possible to get low ratios if you estimate Ls/Lp, rather than properly\n// compute it from spectrum - e.g. RGB(1,0,0) may produce Ls<=0 in some\n// approximations). In this shader we will be using the procedure from\n// that paper which, while deviates from CIE MES2, is better behaved.\n//\n// NOTE: to give a sense of scale, we quote some luminance\n// values from https://en.wikipedia.org/wiki/Orders_of_magnitude_(illuminance)#Luminance\n//     1.0e-6 - absolute threshold of vision\n//     1.0e-3 - night sky\n//     1.4e-3 - typical photographic scene lit by full moon\n//     5.0e-3 - approximate scotopic/mesopic threshold\n//     2.0    - floodlit buildings, monuments, and fountains\n//     5.0    - approximate mesopic/photopic threshold\n//      80    - monitor white in the sRGB reference viewing environment\n//     250    - peak luminance of a typical LCD monitor\n//     700    - typical photographic scene on overcast day\n//     2.0e+3 - average cloudy sky\n//     5.0e+3 - typical photographic scene in full sunlight\n//     7.0e+3 - average clear sky\n//     6.0e+5 - solar disk at horizon\n//     1.6e+9 - solar disk at noon\n//\n// The next question is, how do we render with this? This part, unlike\n// the above expressions, may be more of an art.\n//     1. Often, we do not have spectral values, just \"RGB in, RGB out\",\n// so we need to somehow guess luminances from RGB values. Luckily for us,\n// in the CIE 1931 model, Y in XYZ color space represents the (photopic) luminance,\n// so we can compute the photopic luminances via RGB->XYZ transform (there is\n// no guarantee, of course, that it will closely match what we would have obtained\n// from spectral data if we had it available, but it is at least something).\n// On the other hand, the RGB-to-scotopic estimations are harder to come by.\n// In this shader we will be using an expression from Rawtran, without much\n// justification.\n//     2. Except RGB are often relative, not absolute values (unless we computed\n// them ourselves using some kind of physically-based renderer; or they come\n// from HDR images, already in units of cd/m^2). So, we multiply\n// the relative values by reference luminance (i.e. absolute luminance\n// of the white point - value, in cd/m^2, that RGB(1,1,1) corresponds to), which\n// we have to choose somehow (perhaps arbitrarily; or extract from the source\n// image metadata, if it has that). NOTE: sRGB does include \"reference display\n// white point luminance\" of 80 cd/m^2, but that is not terribly helpful here\n// (it is also based on CRT displays, and is lower than most LCDs).\n//     3. From the two luminances (photopic and scotopic) we can compute\n// the mesopic luminance Lmes and the coefficient of adaptation m. Since\n// m acts as a blending factor for luminances, we may wish to go further\n// and use it as a blending factor to compute the output color.\n//     4. Except the scotopic image is monochromatic. What are we going to blend\n// the photopic color with? The choice appears, so far, mostly artistic (i.e.\n// there doesn't seem to be a generally accepted model for color shift of the\n// Purkinje effect). Here, we follow \"Night Rendering\" by Henrik Wann Jensen et al.\n// (https://graphics.stanford.edu/~henrik/papers/night/night.pdf), and shift the\n// chromaticities towards (0.25,0.25) according to m (NOTE: the paper predates\n// CIE 191:2010 and so computes the blending factor differently). Other schemes\n// exist, e.g. \"Simulating the Visual Experience of Very Bright and Very Dark Scenes\"\n// uses similar blending scheme, but with a different color (dull purple). It also\n// lists references to several other models.\n//     5. Then we convert our color to the display color. This may involve\n// dividing by a (potentially different) reference luminosity, additional\n// tonemapping (which you may want at least for purely photopic scenes),\n// and gamma-encoding.\n//\n// We also need to decide which luminances to use for mesopic calculations:\n// per pixel, averages of the whole scene, or averages of some neighbourhood\n// of the pixel (or something else entirely). This shader uses per pixel\n// luminances, which is probably a bad choice, actually.\n//\n// Literature:\n//     https://en.wikipedia.org/wiki/Mesopic_vision\n//     https://en.wikipedia.org/wiki/Purkinje_effect\n//     https://en.wikipedia.org/wiki/Photometry_(optics)\n//     https://en.wikipedia.org/wiki/Luminous_efficacy\n//     https://en.wikipedia.org/wiki/Orders_of_magnitude_(illuminance)#Luminance\n//     https://cie.co.at/publications/recommended-system-mesopic-photometry-based-visual-performance\n//     Jensen, Henrik & Premoze, Simon & Shirley, Peter & Thompson, William & Ferwerda, James & Stark, Michael. (2000). Night Rendering. \n//         https://graphics.stanford.edu/~henrik/papers/night/night.pdf\n//     Yao Q, Fotios S. Effectiveness of an alternative model for establishing mesopic luminance. Lighting Research & Technology. 2019;51(6):900-909. doi:10.1177/1477153518800529\n//         https://core.ac.uk/download/pdf/199217493.pdf\n//     C. Gao, Y. Xu, Z. Wang, M. Melgosa, M. Pointer, M. Luo, K. Xiao, and C. Li, \"Improved computation of the adaptation coefficient in the CIE system of mesopic photometry,\" Opt. Express  25, 18365-18377 (2017). doi: 10.1364/OE.25.018365\n//         https://opg.optica.org/oe/fulltext.cfm?uri=oe-25-15-18365&id=370054\n//     Wyman, Chris, Peter-Pike J. Sloan and Peter Shirley. “Simple Analytic Approximations to the CIE XYZ Color Matching Functions.” (2013).\n//         https://jcgt.org/published/0002/02/01/\n//     David E. Jacobs, Orazio Gallo, Emily A. Cooper, Kari Pulli, and Marc Levoy. 2015. Simulating the Visual Experience of Very Bright and Very Dark Scenes. ACM Trans. Graph. 34, 3, Article 25 (May 2015), 15 pages. DOI=10.1145/2714573 http://doi.acm.org/10.1145/2714573\n//         https://graphics.stanford.edu/papers/gazehdr/gazehdr.pdf\n\n//==============================================================================\n\nconst float pi=3.14159265358979323846;\n\nfloat log10(float x) {return 0.4342944819*log(x);}\n\n//==============================================================================\n// Approximations of mesopic luminance Lmes and coefficient of adaptation m.\n\nconst float C=863.0/1699.0; // Ratio of maximum luminous efficacy.\n\nfloat mesopic_blend(float P,float S,float m) {return (m*P+(1.0-m)*S*C)/(m+(1.0-m)*C);}\nvec2  mesopic_blend(vec2  P,vec2  S,float m) {return (m*P+(1.0-m)*S*C)/(m+(1.0-m)*C);}\nvec3  mesopic_blend(vec3  P,vec3  S,float m) {return (m*P+(1.0-m)*S*C)/(m+(1.0-m)*C);}\nvec4  mesopic_blend(vec4  P,vec4  S,float m) {return (m*P+(1.0-m)*S*C)/(m+(1.0-m)*C);}\n\n// The computation of m from\n//     Shpak M, Kärhä P, Ikonen E. Mathematical limitations of the CIE mesopic photometry system. Lighting Research & Technology. 2017;49(1):111-121. doi:10.1177/1477153515599436\nfloat mesopic_m(float Lp,float Ls)\n{\n    const float L1=0.005;\n    const float L2=5.0;\n    float Rsp=Ls/Lp;\n    if(Lp<=L1&&Ls<=Lp) return 0.0;\n    if(Lp>=L2) return 1.0;\n    if(Lp>L1&&Ls<Lp)\n    {\n        float x=log10(Lp/L1),y=log10(x+1.0),z=Rsp-1.0;\n        return clamp(\n            (1.0/3.0)*Rsp*x\n            -2.88*z*y*y\n            +0.28*z*y*y*y\n            -1300.0*z*z*z*z*(Lp-L1)*(Lp-L1)*exp(-4.0*x*x),\n            0.0,1.0);\n    }\n    else\n    {\n        const float p11=-0.2176,p12=0.1974,p13=-0.06187;\n        const float p21=0.04633,p22=-0.06869,p23=0.02813;\n        const float p31=-0.004613,p32=0.006027,p33=-0.0029;\n        float x=log10(Rsp),y=log10(Ls/L1);\n        return clamp(\n             y*((1.0/3.0)+x*(p11+x*(p12+x*p13))\n            +y*(          x*(p21+x*(p22+x*p23))\n            +y*(          x*(p31+x*(p32+x*p33)))))\n            ,0.0,1.0);\n    }\n}\n\n#if 0\n// Approximation of mesopic luminance Lmes from\n// Yao Q, Fotios S. Effectiveness of an alternative model for establishing mesopic luminance. Lighting Research & Technology. 2019;51(6):900-909. doi:10.1177/1477153518800529\n// https://core.ac.uk/download/pdf/199217493.pdf\n\nfloat Lmes(float Lp,float Ls)\n{\n    float Rsp=Ls/Lp;\n    if(Lp>5.000) return Lp;\n    if(Lp<0.005) return Ls; // Or maybe Ls<0.005?\n    return Lp<0.1?\n        (-0.00477+0.00411*Rsp+0.22525*Lp+9.86481*Lp*Lp+1.35947*Rsp*Lp)/(1.0+0.55473*Rsp+11.73275*Lp+-0.04891*Rsp*Rsp+-17.54381*Lp*Lp+0.58998*Rsp*Lp):\n        (-0.02097+0.02051*Rsp+0.78873*Lp+0.60472*Lp*Lp+0.31158*Rsp*Lp)/(1.0+0.10154*Rsp+ 0.56106*Lp+-0.00085*Rsp*Rsp+  0.00017*Lp*Lp+0.04284*Rsp*Lp);\n    // And m is given by 0.7670+0.3334*log10(Lm).\n}\n#endif\n\n//==============================================================================\n// Blackbody radiation.\n// For spectral experiments.\n\nconst float c1=3.74177153e-16;   // First radiation constant 2*pi*h*c^2, W/m^2.\nconst float c1L=1.191042869e-16; // First radiation constant for spectral radiance 2*h*c^2, W/m^2*sr^-1.\nconst float c2=1.4387770e-2;     // Second radiation constant, m*K.\n\n// Input: temperature in K, and wavelength in nm.\n// Output: spectral radiance, in W*sr^-1*m^-2*nm^-1.\nfloat blackbody_spectral_radiance(float T,float lambda)\n{\n    lambda*=1e-9;\n    return 1e-9*c1L*pow(lambda,-5.0)/(exp(c2/(lambda*T))-1.0);\n}\n\n// Integral of the above on [0;inf].\n// Input: temperature in K.\n// Output: radiance, in W*sr^-1*m^-2.\nfloat blackbody_total_radiance(float T)\n{\n    return (c1L/15.0)*pow(pi*T/c2,4.0);\n}\n\n// Example: blackbody_total_radiance(5700)≈19052900 W*sr^-1*m^-2.\n// Multiplying that by 6.8e-5 sr (Sun's solid angle from 1 a.u.)\n// we get ~1295.6, which is close enough to the solar constant (1361 W/m^2).\n// Similarly, integrating blackbody_spectral_radiance() with V(λ),\n// for T=5700 and multiplying by 683 lm/W, we get ~1.74e9 cd/m^2, which is\n// close to 1.6e9 which Wikipedia reports for Sun's radiance (in atmosphere,\n// so after some scattering).\n\n//==============================================================================\n// Approximation of CIE1931 XYZ from\n// \"Simple Analytic Approximations to the CIE XYZ Color Matching Functions\",\n// (see https://jcgt.org/published/0002/02/01/),\n// based on https://www.shadertoy.com/view/msXyDH.\n\n// Helper function (separately-sloped gaussian).\nfloat f(float t,float l,float h) {t*=mix(l,h,step(0.0,t)); return exp(-0.5*t*t);}\n\n// Input is in nanometers.\nvec3 wavelength2xyz(float lambda)\n{\n    return vec3(\n        +0.362*f(lambda-442.0,0.0624,0.0374)\n        +1.056*f(lambda-599.8,0.0264,0.0323)\n        -0.065*f(lambda-501.1,0.0490,0.0382),\n        +0.821*f(lambda-568.8,0.0213,0.0247)\n        +0.286*f(lambda-530.9,0.0613,0.0322),\n        +1.217*f(lambda-437.0,0.0845,0.0278)\n        +0.681*f(lambda-459.0,0.0385,0.0725));\n}\n\n//==============================================================================\n// Approximation of photopic luminous efficiency function,\n// CIE (1924) Photopic V(λ) (see http://www.cvrl.org/lumindex.htm)\n// based on https://www.shadertoy.com/view/msXyDH.\n\nfloat Vp(float lambda)\n{\n    return wavelength2xyz(lambda).y;\n}\n\n//==============================================================================\n// Approximation of scotopic luminous efficiency function,\n// CIE (1951) Scotopic V'(λ) (see http://www.cvrl.org/lumindex.htm)\n// from https://www.shadertoy.com/view/dsccRj.\n// Input is in nanometers.\n// Max. abs. error: ~0.043.\n\n// Input is in nanometers.\nfloat Vs(float lambda)\n{\n    float t=lambda-507.0;\n    t*=mix(0.01650,0.01919,step(0.0,t));\n    return exp(-t*t);\n}\n\n//==============================================================================\n// Scotopic luminance approximation from XYZ,\n// based on http://integral.physics.muni.cz/rawtran/.\n\n// NOTE: we clamp it to Ls to at least 0.01*Lp, which appears\n// to be the lower bound on [380;780], to prevent problems\n// with negative Lp (mostly for red).\n\nfloat xyz2scotopic(vec3 xyz) {return (1699.0/683.0)*max(0.02*xyz.y,dot(xyz,vec3(-0.80498,1.18214,0.36169)));}\n// Numerical fit obtained from several different black bodies:\n// float xyz2scotopic(vec3 xyz) {return max(0.01*xyz.y,dot(xyz,vec3(-2.0661,3.2709,1.0479)));}\n\n//==============================================================================\n// RGB<->XYZ conversions, from https://en.wikipedia.org/wiki/SRGB\n// Operate on linear RGB.\n\nvec3 xyz2rgb(vec3 xyz)\n{\n    return mat3( // WARNING: column-major.\n        +3.2404542, -0.9692660, +0.0556434,\n        -1.5371385, +1.8760108, -0.2040259,\n        -0.4985314, +0.0415560, +1.0572252)*xyz;\n}\n\nvec3 rgb2xyz(vec3 rgb)\n{\n    return mat3( // WARNING: column-major.\n        0.4124, 0.2126, 0.0193,\n        0.3576, 0.7152, 0.1192,\n        0.1805, 0.0722, 0.9505)*rgb;\n}\n\n//==============================================================================\n// sRGB<->linear conversions, from https://en.wikipedia.org/wiki/SRGB\n// NOTE: in floating point (1.055-1.0)!=0.055, but whatever.\n\nvec3 linear2srgb(vec3 rgb)\n{\n    return mix(12.92*rgb,1.055*pow(rgb,vec3(1.0/2.4))-0.055,step(0.0031308,rgb));\n}\n\nvec3 srgb2linear(vec3 rgb)\n{\n    return mix(rgb/12.92,pow((rgb+0.055)/1.055,vec3(2.4)),step(0.04045,rgb));\n}\n\n//==============================================================================\n// Main image.\n\nvec3 mesopic_xyz(float Lref,vec3 xyz)\n{\n    float Lp=Lref*xyz.y;               // Photopic luminance.\n    float Ls=Lref*xyz2scotopic(xyz);   // Scotopic luminance.\n    float m=mesopic_m(Lp,Ls);          // Coefficient of adaptation.\n    float Lm=mesopic_blend(Lp,Ls,m);   // Mesopic luminance.\n    vec2 xy=xyz.xy/dot(xyz,vec3(1));   // Chromaticities.\n    xy=mesopic_blend(xy,vec2(0.25),m); // Color shift.\n    // NOTE: for color shift we follow \"Night Rendering\" in \n    // blending with (0.25,0.25) (the factor is different), which\n    // may be a debatable choice.\n    xyz=(Lm/Lref)*vec3(xy.x/xy.y,1.0,(1.0-xy.x-xy.y)/xy.y);\n    return xyz;\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    vec2 xy=(2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 rgb=vec3(0);\n    float F=1.0;\n    vec3 ro=vec3(0.0,1.0,-4.0),rd=normalize(vec3(xy,-F));\n    vec3 md=normalize(vec3((2.0*iMouse.xy-iResolution.xy)/iResolution.y,-F));\n    float height=2.0;\n    vec3 p=vec3(0.0,height,-25.0*cos(0.25*iTime));\n    float P=1600.0; // Light source power, in lumen (~100W lightbulb).\n    float R=0.05; // Light source radius.\n    // The color of the light source assumed to be X=Y=Z.\n    float Lref=1.0; // What luminance, in cd/m^2, corresponds to (1,1,1) output.\n    if(iMouse.y>16.0&&iMouse.y<iResolution.y-16.0) p=ro+((height-md.y)/md.y)*vec3(0,md.y,md.z);\n    if(iMouse.x>16.0&&iMouse.x<iResolution.x-16.0) Lref=exp2(mix(-4.0,+4.0,(iMouse.x/iResolution.x)));\n    if(iMouse.x>iResolution.x-16.0) Lref=P*normalize(p).y/(4.0*pi*dot(p,p))/pi;\n    if(rd.y<0.0)\n    {\n        vec3 r=ro-rd/rd.y;\n        float E=P*normalize(p-r).y/(4.0*pi*dot(p-r,p-r)); // Illuminance.\n        vec3 albedo=srgb2linear(texture(iChannel0,r.xz).xyz); // Manual un-gamma, since Shadertoy doesn't do this automatically.\n        // Assume lambertian scatterer.\n        rgb=albedo*E/pi; // Luminance.\n    }\n    vec3 xyz=rgb2xyz(rgb);\n    // Add lightsource.\n    xyz+=(P/(4.0*pi*R*R)/pi)*smoothstep(1.0-0.5*R*R,1.0,dot(rd,normalize(p-ro)));\n    if(xy.x>0.0) xyz=mesopic_xyz(1.0,xyz);\n    vec3 col=xyz2rgb(xyz)/Lref; // Output color.\n    fragColor=vec4(linear2srgb(col),1.0); // Manual gamma, since Shadertoy doesn't do this automatically.\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}