{
    "Shader": {
        "info": {
            "date": "1514578822",
            "description": "A function to draw a simple star based on coordinates, inner radius, outer radius, and amount of sides. Move your mouse in the x-direction to change how many sides are on the Star.",
            "flags": 0,
            "hasliked": 0,
            "id": "4tjBzh",
            "likes": 2,
            "name": "A Simple Star",
            "published": 3,
            "tags": [
                "2d",
                "geometry"
            ],
            "usePreview": 0,
            "username": "jonobr1",
            "viewed": 753
        },
        "renderpass": [
            {
                "code": "/**\n * @author jonobr1 / http://jonobr1.com/\n */\n\nconst float PI = 3.141592653589793;\n\n/**\n * Convert r, g, b to normalized vec3\n */\nvec3 rgb( float r, float g, float b ) {\n\treturn vec3( r / 255.0, g / 255.0, b / 255.0 );\n}\n\nfloat triangleWave( float x, float amp, float phi ) {\n    return ( amp / phi ) * ( phi - abs( mod( x, 2.0 * phi ) - phi ) );\n}\n\nvec4 star( vec2 uv, vec2 pos, float ir, float or, float sides, vec3 color ) {\n\n    float radius;\n    float theta = atan( uv.y - pos.y, uv.x - pos.x );\n    float pct = theta / PI;\n\n    // UNCOMMENT FOR DIFFERENT PHASE STYLE\n    // radius = ( sin( theta * sides ) + 1.0 ) / 2.0;\n    radius = triangleWave( pct + 0.09, 1.0, 1.0 / sides );\n    radius = mix( ir, or, radius );\n\n    float dist = length( pos - uv ) - radius;\n\tfloat t = clamp( dist, 0.0, 1.0 );\n\treturn vec4( color, 1.0 - t );\n\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n\tvec2 uv = fragCoord.xy;\n\tvec2 center = iResolution.xy * 0.5;\n\tfloat ir = 0.125 * iResolution.y;\n    float or = 0.25 * iResolution.y;\n    float sides = floor( ( iMouse.x / iResolution.x ) * 12.0 + 3.0 );\n\n    // Background layer\n\tvec4 layer1 = vec4(rgb(125.0, 50.0, 175.0), 1.0);\n\t\n\t// Circle\n\tvec3 red = rgb(255.0, 225.0, 125.0);\n\t// vec4 layer2 = circle(uv, center, radius, red);\n    vec4 layer2 = star( uv, center, ir, or, sides, red );\n\t\n\t// Blend the two\n\tfragColor = mix(layer1, layer2, layer2.a);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}