{
    "Shader": {
        "info": {
            "date": "1637150101",
            "description": "MOUSE CLIC to see effect.\nFast Reaction Diffusion using mipmaps\nHaving fun ;)",
            "flags": 32,
            "hasliked": 0,
            "id": "sty3R1",
            "likes": 5,
            "name": "Mipmap Reaction Diffusion V4",
            "published": 3,
            "tags": [
                "mipmap",
                "diffusion",
                "highpass",
                "reaction",
                "gpmipmap",
                "golfed"
            ],
            "usePreview": 0,
            "username": "benoitM",
            "viewed": 306
        },
        "renderpass": [
            {
                "code": "/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n//     Fast & Simple Reaction Diffusion Pattern Variation 4            //\n//                                                                     //\n//             by Benoit Marini - 16/11/2021                           //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// from \"Fast & Simple & Dirty Reaction Diffusion Pattern\"             //\n// Only using mipmaps for convolutions                                 //\n// Basic idea here :                                                   //\n// https://www.shadertoy.com/view/flGGzR                               //\n//                                                                     //\n// This shader is a variation of                                       //\n// https://www.shadertoy.com/view/slyGR1                               //\n//                                                                     //     \n/////////////////////////////////////////////////////////////////////////  \n\nM\n    T(0.);                    // FORM (stored on alpha channel)\n    o.rgb = sin((o.r+o.a)*vec3(1,2,3)); // COLOR from green channel (multiplied by Form)\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 o, vec2 i ) {   \n\n   o=step (.01,T(0.)-T(S)) ;    // FORM \n   o.r = (o.a>.5)? T(0.).r : -.5; //COLOR\n   if( T(4.5).r <.1 ) o.r+=.02;   //COLOR\n \n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 o, vec2 i ) {\n\n     o=T(S-1.) + exp(-i.x*i.y);    // FORM on .a chanel  // o = T(f,2.5) + .....\n     o.r = T(1.).r ;            // COLOR on .r chanel   \n    // if ( T(f,99.).a > .4 ) o-=o; // RESET if form cover more than 40% of the screen, work with 2^99 screens resolutions ;)\n}\n\n//////////////////////////////////////////////////////\n// FORM : blur buffer A + add small perturbation    //\n//////////////////////////////////////////////////////\n// COLOR : blur buffer A                            //\n//////////////////////////////////////////////////////\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define M void mainImage( out vec4 o, vec2 i ) { o=\n#define R iResolution.xy\n#define S 4.+.5*sin(iTime)\n#define T(l) texture(iChannel0, (i/R) * (1.+.01*(iMouse.xy/R-.5)) ,l)\n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}