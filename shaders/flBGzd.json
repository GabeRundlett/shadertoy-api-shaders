{
    "Shader": {
        "info": {
            "date": "1624465862",
            "description": "random L² points distribution.   Mouse to seed. \nLeft: Uniform ( i.e. Poisson, i.e.  white noise )\nRight: ~blue ( here, jittered grid ).\nCoverage is better, i.e. variance lower,  for the ~blue distribution.   try r = 2.",
            "flags": 0,
            "hasliked": 0,
            "id": "flBGzd",
            "likes": 9,
            "name": "coverage of uniform vs blue poin",
            "published": 3,
            "tags": [
                "poisson",
                "stats",
                "pointsdistribution"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 330
        },
        "renderpass": [
            {
                "code": "int   L = 10;  // LxL point distribution. left: Uniform right: Blue\nfloat r = 1.;  // kernel radius \n\n#define hash(i)    fract(sin( iMouse.xy + float(i) * vec2(12.9898, 78.233) ) * 43758.5453)// hash 1→2\n#define Pu(i)    ( hash(i) * vec2(-a,a) - vec2(0,1) )                   // uniform distrib\n#define Pb(i)    ( vec2(i%L,i/L)/l  * a - vec2(0,1) + hash(i)/l )       // ~blue distrib \n#define Ks(P)      smoothstep(2.*r/l, 0., length(P-U) ) / (r*r)           // splat kernel\n#define Kc(P)      smoothstep(3./R.y, 0., abs(length(P-U)-1./l) )         // circle kernel \n//#define Kc(P)    smoothstep(3./R.y, 0., abs(mod(length(P-U),.4/l)-.2/l) )*.02/length(P-U) // sin kernel  \n#define  K(P)    ( mod(iTime,4.) < 2. ? Ks(P) : Kc(P) )                 // kernel\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = ( 2.*u - R ) / R.y;\n    float l = float(L), a = R.x/R.y; \n\n    O = vec4(0);\n    if (U.x<0.)\n        for(int i=0; i<L*L; i++)\n            O += K(Pu(i));\n    else\n        for(int i=0; i<L*L; i++)\n            O += K(Pb(i));\n            \n    O*=.5;    // to better see superimposition\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}