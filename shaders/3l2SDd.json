{
    "Shader": {
        "info": {
            "date": "1567526592",
            "description": "Show steps for building a triplanar mapping preserving contrast and noise properties (exact if Gaussian).  Mouse: rotate.  0-5: step.\n1: projection distortion 2: compose 3 dirs  3: with cosine factor\n4: BW version: contrast & freq distorted   5: corrected",
            "flags": 16,
            "hasliked": 0,
            "id": "3l2SDd",
            "likes": 11,
            "name": "noise-preserving triplanar map",
            "published": 3,
            "tags": [
                "noise",
                "triplanar",
                "contrast",
                "blending",
                "interpolation",
                "variance",
                "short",
                "histogram",
                "pdf",
                "smartblend"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 1064
        },
        "renderpass": [
            {
                "code": "//#define T(U) texture(iChannel0, U/32.)\n#define T(U) texture(iChannel0, U/32.).x\n//#define T(U) step(.8,texture(iChannel0, U/32.).x)\n\n#define rot(a)  mat2(cos( a + vec4(0,33,11,0))) // https://www.shadertoy.com/view/XlsyWX\n#define S(v)    smoothstep(8./R.y,0., v)\n    \nvoid mainImage( out vec4 O, vec2 u )\n{\n    O -= O;\n    int t  = int(iTime/2.)%6;\n    for (int i=0; i<6; i++) if ( texelFetch(iChannel3,ivec2(48+i+1,0),0).x > 0.) t = i;\n\n    vec2 R = iResolution.xy, M = iMouse.xy,\n         U = 1.2* ( 2.*u - R ) / R.y;\n    M = length(M)>30. ? 1.57* ( 2.*M - R ) / R.y : vec2(0);\n    \n    float z = 1.-dot(U,U), d;    // ray-tracing sphere\n    \n    if ( z < 0. ) {              // background: draw progress dots\n        U = 6.*u/R.y;\n#define dot(t) length( U - vec2( 6.*mix(R.y,R.x,.8)/R.y, t ) )\n        O += S( dot(float(t)+.5) -.15 );\n        U.y = fract(U.y)-.5;\n        O += S( abs( dot(0.)-.2) );\n        return;\n    }\n    vec3 P = vec3( U, sqrt(z) ); // hit point on rotated frame.\n    P.xz *= rot(3.14/4. + M.x);\n    P.yz *= rot(-3.14/4.+ M.y);\n    \n    vec3 N = P, c = abs(N);      // triplanar cosine factors\n    \n    switch( t ) {                // display steps of smart blending\n        case 0: O = vec4( T(P.xy), 0, 0, 1);                         break;\n        case 1: O = vec4( T(P.xy), T(P.yz), T(P.xz), 1);             break;\n        case 2: O = vec4( c.z*T(P.xy), c.x*T(P.yz), c.y*T(P.xz), 1); break;\n        case 3: O +=    ( c.z*T(P.xy)+ c.x*T(P.yz)+ c.y*T(P.xz) ) / (c.x+c.y+c.z);  break;\n        case 4: case 5: O += .5+ ( c.z*(T(P.xy)-.5) + c.x*(T(P.yz)-.5) + c.y*(T(P.xz)-.5) ) / length(c); break;\n    }\n                                 // draw axis\n#define smix(v)  O.rgb = mix(O.rgb, vec3(1),S((v).brg )); \n    smix( c );\n    smix( vec3(length(c.yz),length(c.xz),length(c.xy))-.05 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}