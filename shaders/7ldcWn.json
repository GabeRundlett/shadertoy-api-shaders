{
    "Shader": {
        "info": {
            "date": "1659612951",
            "description": "reference: https://twitter.com/kamoshika_vrc/status/1554813085848051715",
            "flags": 0,
            "hasliked": 0,
            "id": "7ldcWn",
            "likes": 21,
            "name": "Celtic knot 4 ( 227 chars )",
            "published": 3,
            "tags": [
                "2d",
                "pattern",
                "2tweets",
                "short",
                "golf",
                "celtic",
                "reproduction"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 321
        },
        "renderpass": [
            {
                "code": "// more readable version at bottom\n\n// --- -10 by coyote\n\n#define S    smoothstep( 12./R.y, 0., abs(length(U)-.9)\n#define B    O += S-.05) - O* S-.07); U += D\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy, D = vec2(.5,-.5),\n         U = fract( ( 4.*u - R-R ) / R.y ) - .5; // tile = 1/4 circle\n    O-=O; // -.5;                                //  3-grey variant\n    U = abs( U.x*U.y<0. ? U.yx : U )             // tile = 1/16 circle\n    - D; B\n    +.5; B\n    -.5; B;  \n}\n\n\n\n\n\n\n/** // --- 247 chars\n\n#define S    smoothstep( 12./R.y, 0., abs(length(U)-.9)\n#define B    O += S-.05) - O* S-.07)\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy, D = vec2(.5,-.5),\n         U = fract( ( 4.*u - R-R ) / R.y ) - .5; // tile = 1/4 circle\n    O-=O; // -.5;                                //  3-grey variant\n    U *= sign(U.x); \n    U = U.y<0. ? vec2(-U.y,U) : U;               // tile = 1/16 circle\n    U -= D;    B;\n    U += D+.5; B;\n    U += D-.5; B;  \n}\n\n\n\n\n\n\n/** // --- 260 chars\n\n#define S(U,r) smoothstep( 12./R.y, 0., abs(length(U)-.9) -r )\n#define B(U)   O *= 1.-S(U,.07), O += S(U,.05)\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy, D = vec2(.5,-.5),\n         U = fract( ( 4.*u - R-R ) / R.y ) - .5; // tile = 1/4 circle\n    O-=O; // -.5;                                //  3-grey variant\n    U = U.x<0. ? -U : U;\n    U = U.y<0. ? vec2(-U.y,U) : U;               // tile = 1/16 circle\n    B(U-D);\n    B(U+.5);\n    B(U+D);  \n}\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}