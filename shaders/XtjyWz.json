{
    "Shader": {
        "info": {
            "date": "1508243859",
            "description": "Hello! I just returned to shadertoy! Cheers! I also improved my knowledge in algebra, and I know more about trig. This is my first minecraft 2D shader! :D Updated!",
            "flags": 0,
            "hasliked": 0,
            "id": "XtjyWz",
            "likes": 1,
            "name": "Minecraft 2D?",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "Imsure1200q_1UWE130",
            "viewed": 1210
        },
        "renderpass": [
            {
                "code": "float pi = 3.14159265358979323846264338; //Memorized :D\n\nfloat gquad(vec2 uv, float p1, float p2, float h) {\n    \n    if(uv.x > p1 && uv.x < p2) {\n        \n        return h;\n        \n    } else {\n        \n        return 0.;\n        \n    }\n    \n}\n\nfloat vquad(vec2 uv, float p1, float p2, float w) {\n     \n    if(uv.y > p1 && uv.y < p2) {\n        \n        return w;\n        \n    } else {\n        \n        return 0.;\n        \n    }\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv += vec2(sin(iTime*7.-cos(iTime*3.))/20.,cos(iTime*7.)/28.)/13.;\n    float plx = clamp(sin(mod(iTime,5.))/1.6,0.,1.)+0.05;\n    float plx1 = clamp(sin(mod(iTime-1.,5.))/1.6,0.,1.)+0.05;\n    //uv.x += plx/10.;\n    float tZoom = max(clamp(sin(mod(iTime,5.))/2.2+1.,1.,2.)-0.4,1.);\n    uv.x /= tZoom-0.1;\n    uv.y /= tZoom-0.1;\n    uv.x += plx/10.;\n    fragColor.rgb = vec3(cos(uv.y),cos(uv.y)/2.,2.*tan(uv.y)/3.);\n    \n    //bg\n    \n    if(uv.y < 0.25+sin(iTime/2.+cos(iTime))/20.\n      ) fragColor = fragColor/2.;\n    \n    if(uv.y < 0.9+sin(iTime/2.+cos(iTime+4.))/40.\n      ) fragColor.b*=2.;\n    \n    //blocks\n    \n    if(uv.y < 0.2 || uv.y < gquad(uv,0.1,0.3,0.5) ||\n      (uv.x < vquad(uv, 0.4, 0.5, 0.35) && uv.y < gquad(uv,0.05,0.35,0.5)) ||\n      (uv.x < vquad(uv, 0.5, 0.6, 0.3) && uv.y < gquad(uv,0.1,0.3, 0.6)) ||\n      ((uv.x < vquad(uv, 0.1, 0.4, 0.85) && uv.y < gquad(uv,0.8,0.85,0.7)) && plx-0.05 < 0.5) ||\n      ((uv.x < vquad(uv, 0.4, 0.7, 0.95) && uv.y < gquad(uv,0.7,0.95,0.6)) && plx1-0.12 < 0.5) ||\n      ((uv.x < vquad(uv, 0.6, 0.7, 0.9) && uv.y < gquad(uv,0.75,0.9,0.8)) && plx1-0.12 < 0.5)\n      ) fragColor -= fragColor;\n    \n    //player\n    \n    if((uv.x < vquad(uv, 0.335, 0.4, 0.5+plx) && uv.y < gquad(uv,0.165+plx,0.2+plx,0.4)) ||\n      (uv.x < vquad(uv, 0.255, 0.335, 0.52+plx) && uv.y < gquad(uv,0.155+plx,0.21+plx,0.335)) ||\n      (uv.x < vquad(uv, 0.175, 0.255, 0.5+plx) && uv.y < gquad(uv,0.165+plx,0.2+plx,0.255))) fragColor = vec4(0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}