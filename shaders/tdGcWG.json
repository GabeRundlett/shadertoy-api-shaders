{
    "Shader": {
        "info": {
            "date": "1603601868",
            "description": "Look at \"image\"",
            "flags": 32,
            "hasliked": 0,
            "id": "tdGcWG",
            "likes": 2,
            "name": "Conway's Game of Life, 1 px res",
            "published": 3,
            "tags": [
                "life",
                "conway",
                "cellularautomata",
                "golly"
            ],
            "usePreview": 0,
            "username": "milesWaugh",
            "viewed": 518
        },
        "renderpass": [
            {
                "code": "// INSTRUCTIONS:\n \n// Click/drag to invert cell states (dead --> live, live --> dead)\n// Auto-pauses when you draw\n// Pause shader to prolong pause for lengthier drawings\n// Restart project to generate random soup.\n// I recommend screen zoomers to draw literally anything.\n\nvoid mainImage(out vec4 a,in vec2 b){a=texture(iChannel0,b/iResolution.xy);}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float grab(vec2 uv, vec2 rel){\n    return texture(iChannel0,uv+(rel/iResolution.xy)).r;\n}\n\nvec3 mPrev = vec3(0.);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    mPrev = iMouse.xyz;\n    vec2 uv = fragCoord/iResolution.xy;\n    if(iFrame < 1){\n    \tfragColor = vec4(texture(iChannel1,fragCoord/256.).r>.5?1.:0.);\n    }else{\n        float a = float(round(texture(iChannel0,uv).r));\n        if(iMouse.z > 0.){\n            vec2 v1 = iMouse.xy-fragCoord;\n            if(abs(v1.x)<1. && abs(v1.y)<1.){\n            \ta = 1.-a;\n            }\n        }else{\n            int b = -int(a);\n            for(int i=-1; i<2; i++){\n                for(int j=-1; j<2; j++){\n                \tb += int(grab(uv, vec2(i,j)));\n                }\n            }\n            if(a==1.){\n                if(b<2||b>3){\n                    a=0.;\n                }\n            }else{\n                if(b==3){\n                    a=1.;\n                }\n            }\n        }\n        fragColor = vec4(a);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}