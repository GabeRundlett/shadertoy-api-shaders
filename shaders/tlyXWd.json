{
    "Shader": {
        "info": {
            "date": "1583846528",
            "description": "could it be shorter ? :-)",
            "flags": 0,
            "hasliked": 0,
            "id": "tlyXWd",
            "likes": 13,
            "name": "infinite book (218 chars)",
            "published": 3,
            "tags": [
                "2d",
                "2tweets",
                "gif",
                "short",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 361
        },
        "renderpass": [
            {
                "code": "// readable version at bottom ;-)\n\nvoid mainImage(out vec4 O, vec2 U) {\n    for ( vec2 R = iResolution.xy, V = vec2(0,1), T, i=R-R, u;\n          i.x < 1.; i+=.05 )\n        T = fract( iTime/7. +i +.01*R.y / length( U -R*(V*.2-.1)) ),\n        O = max(O, 1.2 -.5*length(\n              min( R.y, dot( u = U - R*V* (.1-.1*T),\n                             T = sin( 1.57* ( exp(-8.*T) + V.yx ) )\n                 )         ) *T - u ));\n}/*\n\n\n\n\n\n// --- 224 chars\n\n#define mainImage(O,U)                                                 \\\n    for ( vec2 R = iResolution.xy, V = O.xw, a,T, i=R-R;               \\\n          i.x < 1.; i+=.05 )                                           \\\n        T = fract( iTime/7. +i +.01*R.y / length( U -R*(V/5.-.1)) ),   \\\n        a = R*V* (.1-.1*T),                                            \\\n        T = sin( 1.57* ( exp(-8.*T) + V.yx ) ),                        \\\n        O = max(O, 1.2 -.5*length( U-a - T * min( dot(U-a, T), R.y))) /*\n\n\n\n\n\n// --- 232 chars\n\n#define mainImage(O,U)                                                 \\\n    vec2 R = iResolution.xy, V = O.xw, a,b;                            \\\n    for (float T, i = 0.; i < 1.; i+=.05)                              \\\n        T = fract( iTime/7. +i +.01*R.y / length( U -R*vec2(-.1,.1)) ),\\\n        a = R* V*(.1-.1*T),                                            \\\n        b = sin(1.57*(exp(-8.*T)+V.yx)),                               \\\n        O = max(O, 1.2 -.5*length( U-a - b * min( dot(U-a, b), R.y))) /*\n\n\n\n\n\n// --- 258 chars\n\n#define mainImage(O,U)                                               \\\n    vec2 R = iResolution.xy;                                         \\\n    for (float T, i = 0.; i < 1.; i+=.05) {                          \\\n        T = fract( iTime/7. +i +.01*R.y/length(U-R*vec2(-.1,.1)) );  \\\n        vec2 a = R* vec2(0,.1-.1*T),                                 \\\n             p = U - a,                                              \\\n             b = R.y* cos(1.57*exp(-8.*T)+vec2(0,11)) - a;           \\\n        O = max(O, 1.2 -.5*length(p - b * clamp(dot(p, b) / dot(b, b), 0., 1.)));\\\n    } /*\n\n\n\n\n\n// --- 334 chars\n\nfloat line(vec2 p, vec2 a,vec2 b) { \n    p -= a, b -= a;\n    float h = clamp(dot(p, b) / dot(b, b), 0., 1.);\n    return length(p - b * h);                      \n}\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = u/R.y;\n    O-=O;\n    for (float T, i = 0.; i < 1.; i+=.05) {\n        T = fract(.15*iTime+i+.01/length(U));\n        O = max(O, smoothstep( 1., -1., R.y* line(U,vec2(0,.1*(1.-T)),cos(1.57*exp(-8.*T)+vec2(0,11)))-1.4));\n    }\n}\n\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}