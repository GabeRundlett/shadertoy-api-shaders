{
    "Shader": {
        "info": {
            "date": "1563475536",
            "description": "Simple motion blur exemple",
            "flags": 0,
            "hasliked": 0,
            "id": "WtfSzj",
            "likes": 23,
            "name": "Motion Blur Short Exemple",
            "published": 3,
            "tags": [
                "motionblur"
            ],
            "usePreview": 0,
            "username": "Klems",
            "viewed": 2776
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n#define rot(a) mat2(cos(a + PI*0.5*vec4(0,1,3,0)))\n\nfloat hash13(vec3 p3) {\n\tp3  = fract(p3 * .1031);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 scene(vec2 fragCoord, float time) {\n    vec2 uv = fragCoord - iResolution.xy*0.5;\n    uv /= iResolution.y;\n    uv *= 3.0;\n    uv *= rot(time*10.0 + (sin(time*2.0)*0.5+0.5)*10.0);\n    uv = abs(uv);\n    float sd = max(uv.x-0.5, uv.y-1.5);\n    return vec3(smoothstep(0.0, 0.04, sd));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec3 result = vec3(0);\n   \t\n    bool motionBlur = true; // change this\n    if ( motionBlur ) {\n        #define BLUR 30\n        for (int i = 0 ; i < BLUR ; i++) {\n            float rnd = hash13(vec3(fragCoord, iFrame*100+i));\n            float time = iTime + rnd / 60.0;\n            result += scene(fragCoord, time);\n        }\n        result /= float(BLUR);\n    } else {\n        result = scene(fragCoord, iTime);\n    }\n    \n    fragColor.rgb = pow(result, vec3(1.0/2.2));\n    fragColor.a = 1.0;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}