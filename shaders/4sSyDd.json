{
    "Shader": {
        "info": {
            "date": "1494288776",
            "description": "Experimenting shapes",
            "flags": 0,
            "hasliked": 0,
            "id": "4sSyDd",
            "likes": 60,
            "name": "Smoke Rings",
            "published": 3,
            "tags": [
                "raymarching",
                "smoke"
            ],
            "usePreview": 0,
            "username": "leon",
            "viewed": 1791
        },
        "renderpass": [
            {
                "code": "// training for modeling shapes\n// using koltes code as base https://www.shadertoy.com/view/XdByD3\n// using iq articles\n// using mercury library\n\n#define PI 3.1415926535897932384626433832795\n#define TAU 6.283185307179586476925286766559\n#define t iTime\n\nmat2 rz2 (float a) { float c=cos(a), s=sin(a); return mat2(c,s,-s,c); }\nfloat sphere (vec3 p, float r) { return length(p)-r; }\nfloat iso (vec3 p, float r) { return dot(p, normalize(sign(p)))-r; }\nfloat cyl (vec2 p, float r) { return length(p)-r; }\nfloat cube (vec3 p, vec3 r) { return length(max(abs(p)-r,0.)); }\nvec2 modA (vec2 p, float count) {\n    float an = TAU/count;\n    float a = atan(p.y,p.x)+an*.5;\n    a = mod(a, an)-an*.5;\n    return vec2(cos(a),sin(a))*length(p);\n}\nfloat smin (float a, float b, float r)\n{\n    float h = clamp(.5+.5*(b-a)/r,0.,1.);\n    return mix(b, a, h) - r*h*(1.-h);\n}\n\nfloat map (vec3 p)\n{\n    float sph3 = sphere(p, 3.);\n    p.yz *= rz2(t*.2);\n    p.xy *= rz2(t*.3);\n    \n    float d = length(p);\n    \n    float a = atan(p.y,p.x);\n    float l = length(p.xy)-2.;\n    p.xy = vec2(l,a);\n    \n    float as = PI*0.3;\n    p.z += sin(a*2.+sin(l*4.))*.5;\n    \n    float wave1 = sin(p.y*6.)*.5+.5;\n    float wave2 = .5+.5*sin(p.z*3.+t);\n    \n    p.x -= sin(p.z*1.+t)*.5;\n    p.z = mod(p.z+t,as)-as*.5;\n    \n    float sphR = .2-.1*wave1;\n    float sphC = .3;\n    float sphN = 0.2;\n    float sph1 = sphere(vec3(p.x,mod(sphN*p.y/TAU+t*.1,sphC)-sphC*.5,p.z), sphR);\n    \n    p.xz *= rz2(p.y*3.);\n    p.xz = modA(p.xz, 3.);\n    p.x -= 0.3*wave2;\n    float cyl1 = cyl(p.xz, 0.02);\n    float sph2 = sphere(vec3(p.x,mod(p.y*2.-t,1.)-.5,p.z), .1);\n    \n    return smin(sph1, smin(cyl1,sph2,.2), .2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy-.5*iResolution.xy)/iResolution.y;\n    vec3 ro = vec3(uv,-5), rp = vec3(uv,1), mp = ro;\n    int i = 0;\n    const int count = 50;\n    for(;i<count;++i) {\n\t\tfloat md = map(mp);\n        if (md < 0.001) {\n            break;\n        }\n        mp += rp*md*.35;\n    }\n    float r = float(i)/float(count);\n    fragColor = vec4(1);\n    fragColor *= smoothstep(.0,10.,length(mp-ro));\n  \tfragColor *= r;\n    fragColor = 1. - fragColor;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}