{
    "Shader": {
        "info": {
            "date": "1619664889",
            "description": "reminding myself what a parabola is.\nturns out it's the set of points equidistant from a point and a line.\nwho knew ???",
            "flags": 0,
            "hasliked": 0,
            "id": "7sjSRh",
            "likes": 4,
            "name": "what is a parabola",
            "published": 3,
            "tags": [
                "parabola"
            ],
            "usePreview": 0,
            "username": "elenzil",
            "viewed": 258
        },
        "renderpass": [
            {
                "code": "float sdCircle(in vec2 p, in vec2 c, in float r) {\n    return length(p - c) - r;\n}\n\nmat2 rot2(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat2(c, s, -s, c);\n}\n\nvoid mainImage( out vec4 RGBA, in vec2 XY )\n{\n    vec2 c  = iMouse.x > 50.0 ? iMouse.xy : vec2(cos(iTime * 0.32), sin(iTime * 0.3)) * (min(iResolution.x, iResolution.y)/2.0 - 110.0) + iResolution.xy/2.0;\n    float d1 = abs(((XY - iResolution.xy / 2.0) * rot2(iTime * 0.11)).y);\n    float d2 = sdCircle(XY, c, 100.0);\n    float d3 = sdCircle(XY, c,   0.0);\n    float d4 = sdCircle(XY, iResolution.xy / 2.0, 100.0);\n    \n   \n    RGBA.a  = 1.0;\n    \n    // equidistance from a circle and a line\n    RGBA.r  = smoothstep(3.0, 1.0, abs(d1 - d2) / fwidth(d1 - d2));\n\n    // equidistance from a point and a line\n    RGBA.g  = smoothstep(3.0, 1.0, abs(d1 - d3) / fwidth(d1 - d2));\n    \n    // equidistance from a circle and a point\n    RGBA.rg = max(RGBA.rg, smoothstep(3.0, 1.0, abs(d3 - d4) / fwidth(d3 - d4)));\n\n    RGBA.b  = 0.0;\n    RGBA.b  = max(RGBA.b, smoothstep(3.0, 1.0, abs(d1)));\n    RGBA.b  = max(RGBA.b, smoothstep(3.0, 1.0, abs(d2)));\n    RGBA.b  = max(RGBA.b, smoothstep(3.0, 1.0, abs(d4)));\n    RGBA.b  = max(RGBA.b, smoothstep(3.0, 1.0, abs(sdCircle(XY, c,   1.0))));\n    \n    \n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}