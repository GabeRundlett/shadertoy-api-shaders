{
    "Shader": {
        "info": {
            "date": "1648883724",
            "description": "im so brain ded",
            "flags": 0,
            "hasliked": 0,
            "id": "flXcWl",
            "likes": 1,
            "name": "Day Four - Lambmeow",
            "published": 3,
            "tags": [
                "sdf",
                "refraction",
                "daily"
            ],
            "usePreview": 0,
            "username": "lambmeow",
            "viewed": 163
        },
        "renderpass": [
            {
                "code": "//Day 4 Lambmeow\n//This one was all over the place, was planning on adding a proper fresnel on the reflection but couldnt get it work\n//so total refraction it is.\n//Lopea 2022\n\n#define time (mod(iTime, 50.))\nfloat cir(vec3 p, float d)\n{\n  \n   p = mod (p + vec3(6.,6.,10.), vec3(12, 12.,20.)) - vec3(6., 6.,10.);\n   p.y += 2.5;\n   p.x = abs(p.x) - 3.;\n   \n   vec3 q = abs(p - vec3(0,5., 0)) - vec3(1,2., 1);\n   float ang = radians(180.);\n   p.xy *= mat2(cos(ang), -sin(ang), sin(ang),cos(ang));\n   p.y *= .78;\n  vec3 qa = abs(p);\n     \n   float tr =  max(qa.z-1.,max(qa.x*0.866025+p.y*0.5,-p.y)-2.*0.5);\n   return min(tr, length(max(q, 0.)) + min(max(q.x, max(q.y, q.z)), 0.));\n}\n\nfloat box(vec3 p, vec3 b, float r)\n{\n    vec3 q = abs(p) - b;\n    \n    return length(max(p, 0.)) + min(max(q.x,max(q.y,q.z)), 0.);\n}\n\nfloat four(vec3 p)\n{\n    return length(p) - 1.;\n}\n\nvec2 ss(vec3 p)\n{\n  \n    vec2 res = vec2(100, -1); \n    \n    float a = cir(p, 1.);\n    \n    res.x = min(a, res.x);\n    \n    if(a < 0.01)\n       res.y = 1.;       \n    float b = four(p - vec3(0, 0, time *  10.));\n    res.x = min(res.x, b);\n    \n    if(abs(res.x- b) < 0.01)\n        res.y = 0.;\n    \n    return res;\n        \n}\n\nvec3 nn(vec3 p)\n{\n    vec3 n = vec3(0);\n    for(int i = min(iFrame, 0); i < 4; i ++)\n    {\n        vec3 e = 0.5773* (2.0*vec3((((i+3)>>1)&1),((i>>1)&1),(i&1))-1.0);\n        n += e*ss(p +e*0.0001).x;\n    }\n    return normalize(n);\n}\nvec2 rt(vec3 ro, vec3 rd, inout vec3 p)\n{\n    vec2 dd = vec2(0);\n    float ll = 0.;\n    \n    for(int i = 0; i < 200; i ++)\n    {\n       p = ro + rd  * ll;\n       \n       dd = ss(p);\n       \n       ll += dd.x;\n       \n       if(dd.x < 0.001 || ll > 100.)\n           break;\n    }\n    \n    if(dd.x > 0.001)\n        p = vec3(-1);\n    return dd;\n}\n\n\nvec4 rfl( vec3 ro, vec3 rd, inout vec3 p)\n{\n    vec2 dd;\n    \n    for(int i = 0; i < 2; i ++)\n    {\n    dd = rt(p, rd, p); \n    if(dd.x > 0.01)\n        return vec4(rd, -1);\n        vec3 n = nn(p);\n        rd = (refract(n, rd, 0.55));\n       p += rd * 0.001;\n   }\n   return vec4(rd, dd.y);\n}\n\nvec4 bb(vec3 p, vec3 rd, float id,vec3 ro)\n{\n\n  float y = max(.5 - rd.y, 0.);\n  vec4 bg = vec4((1.- y) * vec3(0.5, 0.5,.8), 1.) +  vec4(y * vec3(0.2, 1., 0.8), 1.);\n  if(id == 1.)\n  {\n     vec3 n = nn(p);\n     vec3 ll = normalize(vec3(1, 1 , 1));\n     float ndl = max(dot(ll, n), 0.);\n     float noise = texture(iChannel0, floor(p.xy)/10000. + sin(time + 3.) * .001).r; \n     return mix(vec4(noise * vec3(.2,.5, .5),1.), bg, vec4( ndl * length(ro - p)/100.));\n  }\n  return bg;\n}\n\nvec4 gc(vec3 ro, vec3 rd)\n{\n   vec3 p = ro;\n   vec3 rp = p;\n\n   \n   //first hit\n   vec3 op = p;\n   vec2 dd = rt(ro, rd, op);\n   \n   \n   if(dd.x < 0.001)\n   {\n   if(dd.y == 0.)\n   {\n   vec4 refl = rfl(p,rd, p);\n   vec4 crel = bb(p, refl.xyz, refl.w, ro);\n   vec3 n = nn (p);\n   vec3 ll = normalize(vec3(1,1,1));\n       float spec = dot(reflect(n, ll),-rd); \n       return crel * 0.25 + vec4(.3,0,.9,1) * max(dot(normalize(vec3(1,1,1)), n),0.);\n   }\n   }\n   \n   return bb(op, rd, dd.y, ro);\n}\nvoid mainImage( out vec4 c, in vec2 f )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 r= iResolution.xy, u = (2. * f - r)/r.y;\n    vec3 ro = vec3(0, 0,time *  10.  - 10.), rd = normalize(vec3(u, 2.));\n    \n\n    c = gc(ro,rd);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}