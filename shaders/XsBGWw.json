{
    "Shader": {
        "info": {
            "date": "1590696557",
            "description": "testing ovr barrel distortion",
            "flags": 0,
            "hasliked": 0,
            "id": "XsBGWw",
            "likes": 0,
            "name": "barrel distortion test",
            "published": 3,
            "tags": [
                "oculus"
            ],
            "usePreview": 0,
            "username": "Impossible",
            "viewed": 453
        },
        "renderpass": [
            {
                "code": "vec4 HmdWarpParam = vec4( 1, 0.22, 0.24, 0 );\nvec2 Scale = vec2(0.1469278, 0.2350845);\nvec2 ScaleIn = vec2(4, 2.5);\n\nvec2 HmdWarp(vec2 texIn, vec2 LensCenter)\n{\n   vec2 theta = (texIn - LensCenter) * ScaleIn;\n   float rSq = theta.x * theta.x + theta.y * theta.y;\n   vec2 theta1 = theta * (HmdWarpParam.x + HmdWarpParam.y * rSq + HmdWarpParam.z * rSq * rSq + HmdWarpParam.w * rSq * rSq * rSq);\n   return LensCenter + Scale * theta1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uvo = fragCoord.xy / iResolution.xy;\n\tvec2 uv;\n\tvec2 ScreenCenter = vec2( 0.25, 0.5 );\n\tvec2 LensCenter = vec2( 0.2863248, 0.5 );\t\n\t\n\tuv = HmdWarp(uvo,LensCenter); //gl_TexCoord[0].xy);\n   if (any(notEqual(clamp(uv, ScreenCenter-vec2(0.25,0.5), ScreenCenter+vec2(0.25, 0.5)) - uv, vec2(0.0, 0.0))))\n   {\n\t   ScreenCenter = vec2( 0.75, 0.5 );\n\t   LensCenter = vec2( 0.7136753, 0.5 );\n\t   \n\t   uv = HmdWarp(uvo,LensCenter);\n\t   \n\t    if (any(notEqual(clamp(uv, ScreenCenter-vec2(0.25,0.5), ScreenCenter+vec2(0.25, 0.5)) - uv, vec2(0.0, 0.0))))\n\t\t   fragColor = vec4(0.0, 0.0, 0.0, 1.0);\t\t\t\n\t\telse\n\t\t\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n   }\n   else\t\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}