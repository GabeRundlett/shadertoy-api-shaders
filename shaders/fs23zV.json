{
    "Shader": {
        "info": {
            "date": "1617666790",
            "description": "Saw tweet https://twitter.com/aemkei/status/1378106731386040322, got curious",
            "flags": 0,
            "hasliked": 0,
            "id": "fs23zV",
            "likes": 7,
            "name": "bitwise things",
            "published": 3,
            "tags": [
                "masking",
                "xor",
                "bits",
                "bitwise"
            ],
            "usePreview": 0,
            "username": "percentcer",
            "viewed": 289
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    fragCoord *= .2f;\n    fragCoord += iTime * 10.f;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    int x = int(fragCoord.x);\n    int y = int(fragCoord.y);\n    \n    int on = 1;\n    \n    int intTime = int(iTime);\n    int cycle = intTime % 16;\n    \n    if (uv.x < .5f && uv.y < .5f) {\n        on = (x | y) % cycle;\n    } else if (uv.x < .5f) {\n        on = (x ^ y) % cycle;\n    }\n    else if (uv.y < .5f) {\n        on = (x * y) & (1 << cycle);\n    }\n    else {\n        on = (x ^ y) & cycle;\n    }\n    \n    // Output to screen\n    fragColor = vec4(col * float(on), 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}