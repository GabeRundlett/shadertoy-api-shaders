{
    "Shader": {
        "info": {
            "date": "1715140466",
            "description": "Layered Prisms on spin\nuse mouse to manipulate kaleidoscope ",
            "flags": 0,
            "hasliked": 0,
            "id": "XcGSWW",
            "likes": 7,
            "name": "Kaleidoscope of Prisms",
            "published": 3,
            "tags": [
                "colorful"
            ],
            "usePreview": 0,
            "username": "timmaffett",
            "viewed": 169
        },
        "renderpass": [
            {
                "code": "// Fork of \"Field of Prisms\" by StormOfTheVoid. https://shadertoy.com/view/XfKXD1\n// 2024-05-08 03:30:00\n\n// simple mouse rotate and zoom for shader\n#define pi 3.14159265359 \n\nmat2 r2d(float a) {\n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nvec2 mouseRotZoom(vec2 uv) {\n    // allow mouse zoom and rotate    \n    vec2 mouse = (iMouse.xy == vec2(0.)) ? vec2(1.0,1.0) : iMouse.xy/iResolution.xy;\n    uv.xy *= r2d(-(mouse.x)*pi*2.);\n   // uv *= (1./(10.0*mouse.y));\n    return uv;\n}\n\n#define STEP   1.2 \n\nvoid mainImage( out vec4 fragColor, in vec2 uv )\n{\n     vec2 mouse = (iMouse.xy == vec2(0.)) ? vec2(1.0,0.5) : iMouse.xy/iResolution.xy;\n    \n    uv.x = 2.*(uv.x-0.5*iResolution.x)/iResolution.y;\n    uv.y = 2.*(uv.y-0.5*iResolution.y)/iResolution.y;\n    vec3 col = vec3(0.);\n    \n    float a=25.2-cos(float(iFrame)/200.);\n    \n    //uv *= mouseRotZoom(uv);\n    \n    int oddeven = 0;\n    for(float n=1.; n<=20.; n+=STEP){\n        if(oddeven++ == 1) {\n            oddeven = 0;\n            uv *= r2d(iTime/(100.0/(21.-n)));\n            uv *= pow(1.01,-n);\n        } else {\n            uv *= r2d(-(iTime/(100.0/n)));\n            uv *= pow(1.01,n);\n        }\n#define SCALE_TOO        \n#ifdef SCALE_TOO\n        if(mod(n,(STEP*2.))<1.0) {\n            uv *= 0.973+(0.5-mouse.y);\n            uv = mouseRotZoom(uv);\n        }\n#endif    \n        float bx=uv.x/(sin(uv.x+a)+cos(n*uv.x));\n        float by=uv.y/(sin(uv.y+a)+cos(n*uv.y));\n\n        float val=bx+by;\n\n        float v1=pow(2.,-5.*abs(val-1.));\n        float v2=pow(2.,-5.*abs(val-1.5));\n        float v3=pow(2.,-5.*abs(val-2.));\n        col+=(41.67*STEP)*0.007*vec3(v1,v2,v3);\n    }\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}