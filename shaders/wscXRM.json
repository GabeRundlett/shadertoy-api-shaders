{
    "Shader": {
        "info": {
            "date": "1571839214",
            "description": "trying to find min distance between point in a grid",
            "flags": 0,
            "hasliked": 0,
            "id": "wscXRM",
            "likes": 2,
            "name": "shortest point distance",
            "published": 3,
            "tags": [
                "grid",
                "distance",
                "point"
            ],
            "usePreview": 0,
            "username": "Cewein",
            "viewed": 375
        },
        "renderpass": [
            {
                "code": "float rand( vec2 n ){return fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 45.5453);}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    uv *= 4.;\n    float dist = 1.;\n    \n    for(float i = -1.; i < 2.; i++)\n    {\n        for(float j = -1.; j < 2.; j++)\n        {\n            vec2 coord = floor(vec2(uv.x, uv.y));\n            vec2 loopPos = vec2(i,j);\n\t\t\tfloat temp = distance(vec2(uv + loopPos),\n                                  vec2(coord + rand(vec2(coord - loopPos)))\n                                 );\n            if(temp < dist)\n                dist = temp;\n        }\n    }\n    vec3 col = 1. -vec3(dist);\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}