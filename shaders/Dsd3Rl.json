{
    "Shader": {
        "info": {
            "date": "1677692085",
            "description": "Mouse around to alter detail level and direction of dive",
            "flags": 0,
            "hasliked": 0,
            "id": "Dsd3Rl",
            "likes": 1,
            "name": "Colorful Dive into geometry",
            "published": 3,
            "tags": [
                "abstract"
            ],
            "usePreview": 0,
            "username": "timmaffett",
            "viewed": 172
        },
        "renderpass": [
            {
                "code": "// Fork of \"Dive into geometry\" by Deep4. https://shadertoy.com/view/Ddc3zs\n// 2023-03-01 17:16:40\n\n vec3 Field(vec3 Pos)\n {\n\tPos *= 0.1;\n\tfloat f = 0.1;\n\n\tfor (int i = 0; i < 3; ++i)\n\t{\n\t\tPos = (Pos.yzx * mat3(0.8, 0.6, 0, -0.6, 0.8, 0.0, 0.0, 0.0, 1.0)) + vec3(0.123, 0.456, 0.789) * float(i);\n\t\tPos = (abs(fract(Pos) - 0.5)) * 2.0;\n\t\tf *= 2.0;\n\t}\n\n\tPos *= Pos;\n\treturn sqrt(Pos + Pos.yzx) / f + 0.0001;\n}\n\n\nvec3 hsb2rgb( in vec3 c )\n{\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return (c.z * mix( vec3(1.0), rgb, c.y));\n}\n\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n vec2 mouse = (iMouse.xy == vec2(0.0)) ? vec2(0.8,0.12) : iMouse.xy/iResolution.xy;\n    \n    vec3 Direction = vec3((fragCoord.xy - iResolution.xy * 0.5) / iResolution.x, 1.0);\n\tvec3 Position = vec3(0.5*(iTime*mouse.x), 0.8*iTime*mouse.y, iTime *clamp(mouse.x/mouse.y, 0.1, 2.5));\n\tvec3 Color;\n\n\tfor (int i = 0; i <  20; ++i)\n\t{\n\t\tvec3 f2 = Field(Position);\n        f2 *= 0.9;\n\t\tPosition += Direction * min(min(f2.x, f2.y), f2.z);\n\t\tColor += float(50 - i) / (f2 + 0.005);\n\t}\n\n\tColor = vec3(1.0 - 1.0 / (1.0 + Color * (-0.06 / 700.0)));\n    \n    // allow mouse to amplify/reduce color multiplier\n    Color *= (4.0*mouse.x/mouse.y);\n    \n\t//Color *= Color;\n\t//fragColor = vec4(Color.r * 6.0, 0.0, 0.0, 1.0);\n    fragColor = vec4( hsb2rgb( vec3(Color.r , 0.7, 0.9)), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}