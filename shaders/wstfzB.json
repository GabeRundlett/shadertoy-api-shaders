{
    "Shader": {
        "info": {
            "date": "1605473936",
            "description": "Contrast thin thick",
            "flags": 0,
            "hasliked": 0,
            "id": "wstfzB",
            "likes": 1,
            "name": "Contrast thin thick",
            "published": 3,
            "tags": [
                "raymarching"
            ],
            "usePreview": 0,
            "username": "illus0r",
            "viewed": 307
        },
        "renderpass": [
            {
                "code": "float sdBox( vec3 p, vec3 b ){vec3 q = abs(p) - b;return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);}\nmat2 rot(float a){float s=sin(a),c=cos(a);return mat2(c,-s,s,c);}\nfloat glow;\nfloat dist(vec3 p){\n    p.z-=2.;\n    p.yz*=rot(3.1415/4.);\n    p.xz*=rot(3.1415/4.);\n    float d = 2.*sin(iTime*2.);\n    float thick = sdBox(p+vec3(0.,d/2.,.0),vec3(1.,.5,1.));\n    float hole = sdBox(p+vec3(0.,d/2.,.0),vec2(.1,.51).xyx);\n    float thin = sdBox(p-vec3(0.,d*2.,.0),vec2(.005,1.5).xyx);\n    thick = max(thick,-hole);\n    if(thin<thick && thin<.001)glow=1.;\n\treturn min(thick, thin);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 FC )\n{\n    vec2 uv = (FC*2.-iResolution.xy)/iResolution.y;\n\n    float d=0.,e,col = 0.5;\n    vec3 p,rd = vec3(0.,0.,1.);\n    int i;\n    for(i=0;i<99;i++){\n        p=rd*d+vec3(uv,-.1);\n        d+=e=dist(p);\n        if(e<.001)break;\n    }\n    col=1.-sqrt(d/3.);\n    if(glow==1.){\n    \tfragColor = vec4(vec3(1.,0.,0.),1.0);\n    }\n    else {\n    \tfragColor = vec4(vec3(col),1.0);\n    }\n    \n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}