{
    "Shader": {
        "info": {
            "date": "1463994566",
            "description": "random quality measure: histogram or random values zoomed to inspect the range [0 , 01].\nI'ld like to understand the strange relation between the multiplier and the quality !\n\nOk: it seems that 111.1111 best scramble and propagates decimals",
            "flags": 32,
            "hasliked": 0,
            "id": "4sGSD1",
            "likes": 5,
            "name": "random quality measure 2",
            "published": 3,
            "tags": [
                "noise",
                "random",
                "hash",
                "rnd"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1030
        },
        "renderpass": [
            {
                "code": "// following https://www.shadertoy.com/view/XsVXWz\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n\tO = texture(iChannel0, U/iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//#define rnd(x) fract( 3213.76 * sin(x) )  // periodic 41 peaks / Rx=512\n//#define rnd(x) fract( 3e4     * sin(x) )  // periodic 6 peaks / Rx=512 \n//#define rnd(x) fract( 37213.76* sin(x) )  // periodic 6 peaks / Rx=512\n//#define rnd(x) fract( 32768.  * sin(x) )  // periodic 6 peaks / Rx=512\n//#define rnd(x) fract( 32767.  * sin(x) )  // periodic 6 peaks / Rx=512\n//#define rnd(x) fract( 1e3     * sin(x) )  // almost. periodic 256/512\n//#define rnd(x) fract( 3e3     * sin(x) )  // periodic 41 peaks / Rx=512\n//#define rnd(x) fract( 3e2     * sin(x) )  // good but near zero\n//#define rnd(x) fract(           sin(x) )  // sin histogram + interferences\n//#define rnd(x) fract( 111.111 * sin(x) )  // good\n//#define rnd(x) fract( 111.    * sin(x) )  // ok but near zero\n  #define rnd(x) fract( sin(x) / 9e-3    )  // perfect !\n//#define rnd(x) fract( 43758.5453 * sin(x*12.9898) )  // periodic 6 peaks \n//  from example: fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\n\n#define T(y)   texture( iChannel0, ( U + vec2(0,y) ) /R )\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    vec2 R = iResolution.xy;\n\n    O = T(0.); \n    \n    if (mod(float(iFrame),2.) == 0. && U.y == R.y-1.5) { // --- dust generator on 1st line\n        float r, t=iTime;\n        for (float x=0.; x<200.; x++) {\n            r = 100.*rnd(t+x*37.9141);\n            if (r<1.) break;\n        }\n        O = vec4( .5+floor(R.x*r ) == U.x );   \n        return; \n    }\n\n    if (T( 1).x==1.) { O++; return; }    // dust on up cell: transfer here    \n    if (T(-1).x==0.)   O -= O; \t         // free space below: dust could be transfered\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}