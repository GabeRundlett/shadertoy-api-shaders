{
    "Shader": {
        "info": {
            "date": "1640371068",
            "description": "A simple christmas elf! Happy holidays!",
            "flags": 0,
            "hasliked": 0,
            "id": "slVXRD",
            "likes": 5,
            "name": "Julnisse",
            "published": 3,
            "tags": [
                "sdf"
            ],
            "usePreview": 0,
            "username": "eimink",
            "viewed": 276
        },
        "renderpass": [
            {
                "code": "// Happy holidays!\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat sdSphere(vec3 p, float r)\n{\n  return length(p)-r;\n}\n\nfloat sdRoundCone( vec3 p, float r1, float r2, float h )\n{\n  vec2 q = vec2( length(p.xz), p.y );\n    \n  float b = (r1-r2)/h;\n  float a = sqrt(1.0-b*b);\n  float k = dot(q,vec2(-b,a));\n    \n  if( k < 0.0 ) return length(q) - r1;\n  if( k > a*h ) return length(q-vec2(0.0,h)) - r2;\n        \n  return dot(q, vec2(a,b) ) - r1;\n}\n\nvoid rot(inout vec2 p, float a) {\n    p = cos(a)*p + sin(a)*vec2(p.y, -p.x);\n}\n\nvec2 opU(vec2 d1, vec2 d2)\n{\n    return (d1.x < d2.x) ? d1 : d2;\n}\n\nstruct MarchResult\n{\n    vec3 p;\n    float id;\n};\n\n\nvec2 sdf(vec3 p){\n   vec3 pp = p;\n   \n   vec2 head = vec2(sdSphere(pp,1.),1.);\n   \n   pp = pp-vec3(0,.6,0);\n   vec2 hat = vec2(sdRoundCone(pp,.8,.1,1.5),2.);\n   head = opU(head,hat);\n   pp = p - vec3(1.,0.3,0.);\n   vec2 nose = vec2(sdSphere(pp,.3),3.);\n   head = opU(head,nose);\n   pp = p - vec3(0,-.13,0);\n   vec2 body = vec2(sdSphere(pp,1.01),2.);\n   body = opU(head,body);\n   pp = p - vec3(0.4,-.7,0.5);\n   rot(pp.xy,5.);\n   float rleg = sdRoundCone(pp,.2,.25,.7);\n   pp = p - vec3(0.4,-.7,-0.5);\n   rot(pp.xy,5.);\n   float lleg = sdRoundCone(pp,.2,.25,.7);\n   float legs = min(lleg,rleg);\n   body = opU(vec2(legs,2.),body);\n   pp = p - vec3(0.0,0.,0.7);\n   rot(pp.yz,-5.);\n   rleg = sdRoundCone(pp,.2,.25,.7);\n   pp = p - vec3(0.0,0.,-0.7);\n   rot(pp.yz,5.);\n   lleg = sdRoundCone(pp,.2,.25,.7);\n   legs = min(lleg,rleg);\n   body = opU(vec2(legs,2.),body);\n   \n   return body;\n\n}\n\nMarchResult march(in vec3 ro, in vec3 rd, inout float t){\n\n    MarchResult m;\n    m.p = ro+rd;\n    for(int i = 0; i < 40; ++i){\n        vec2 d = sdf(m.p);\n        t += d.x;\n        m.p += rd*d.x;\n        m.id = d.y;\n        \n        if(d.x < 0.01 || t > 100.){\n            break;\n        }\n        \n    }\n    \n    return m;\n}\n\nvec3 color(in float id, vec3 p)\n{\n    if (id == 1.0)\n        return vec3(.6,.25,.25)-(texture(iChannel0,p.yz*2.).xyz*.5);\n    else if (id == 2.0)\n        return vec3(.7,.2,.2)-texture(iChannel0,p.xz*4.).xyz*.15;\n    else if (id == 3.0)\n        return vec3(.6,.5,.5);\n    else\n        return vec3(0);\n}\n\nvec3 calcNormal( in vec3 pos) \n{\n    vec2 e = vec2(0.00001, 0.0);\n    return normalize( vec3(sdf(pos+e.xyy).x-sdf(pos-e.xyy).x,\n                           sdf(pos+e.yxy).x-sdf(pos-e.yxy).x,\n                           sdf(pos+e.yyx).x-sdf(pos-e.yyx).x ) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec3 cp = vec3(3.,2.0,3.);\n    vec3 ct = vec3(0,0,0);\n    vec3 ld = vec3(-2.,0.5,2.);\n    rot(cp.xz,iTime);\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 q = -1.0+2.0*uv;\n    q.x *= iResolution.x/iResolution.y;\n    \n    vec3 cf = normalize(ct-cp);\n    vec3 cr = normalize(cross(vec3(0.0,1.0,0.0),cf));\n    vec3 cu = normalize(cross(cf,cr));\n    \n    vec3 rd = normalize(mat3(cr,cu,cf)*vec3(q,radians(90.0)));\n    \n    vec3 p = vec3(0.0);\n    \n    float t;\n    MarchResult m;\n    m.p = vec3(0.0);\n    m.id = 0.0;\n    m = march(cp,rd,t);\n    \n    vec3 col = vec3(0.0);\n    if(t < 100.){\n        col = color(m.id,m.p) + (clamp(dot(calcNormal(m.p), ld), 0.0, 1.0)*0.1);\n        \n    }\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 9,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}