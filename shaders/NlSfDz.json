{
    "Shader": {
        "info": {
            "date": "1652006657",
            "description": "based on the birds as found in [url]https://kurzgesagt.org/patreon-2/[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "NlSfDz",
            "likes": 17,
            "name": "Kurzgesagt birb",
            "published": 3,
            "tags": [
                "2d",
                "kurzgesagt"
            ],
            "usePreview": 0,
            "username": "cmzw",
            "viewed": 492
        },
        "renderpass": [
            {
                "code": "float cro(in vec2 a, in vec2 b ) { return a.x*b.y - a.y*b.x; }\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 ba = b-a;\n    vec2 pa = p-a;\n    float h =clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length(pa-h*ba);\n}\n\nfloat sdCircle( vec2 p, float r ) {return length(p) - r;}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdUnevenCapsule( in vec2 p, in vec2 pa, in vec2 pb, in float ra, in float rb )\n{\n    p  -= pa;\n    pb -= pa;\n    float h = dot(pb,pb);\n    vec2  q = vec2( dot(p,vec2(pb.y,-pb.x)), dot(p,pb) )/h;\n    \n    q.x = abs(q.x);\n    \n    float b = ra-rb;\n    vec2  c = vec2(sqrt(h-b*b),b);\n    \n    float k = cro(c,q);\n    float m = dot(c,q);\n    float n = dot(q,q);\n    \n         if( k < 0.0 ) return sqrt(h*(n            )) - ra;\n    else if( k > c.x ) return sqrt(h*(n+1.0-2.0*q.y)) - rb;\n                       return m                       - ra;\n}\n\nvec3 aces_tonemap(vec3 color){\t\n\tmat3 m1 = mat3(\n        0.59719, 0.07600, 0.02840,\n        0.35458, 0.90834, 0.13383,\n        0.04823, 0.01566, 0.83777\n\t);\n\tmat3 m2 = mat3(\n        1.60475, -0.10208, -0.00327,\n        -0.53108,  1.10813, -0.07276,\n        -0.07367, -0.00605,  1.07602\n\t);\n\tvec3 v = m1 * color;    \n\tvec3 a = v * (v + 0.0245786) - 0.000090537;\n\tvec3 b = v * (0.983729 * v + 0.4329510) + 0.238081;\n\treturn pow(clamp(m2 * (a / b), 0.0, 1.0), vec3(1.0 / 2.2));\t\n}\n\nfloat st(in float d) { return smoothstep(0.006,0.,d); }\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    vec2 p = (2.*I - iResolution.xy) / iResolution.y;\n    vec3 col; vec2 z; p *= 1.2; p -= vec2(0,.06);\n    col = smoothstep(1.5,0.,sdCircle(p,.9))*vec3(.01,.1,0.3);\n    \n    z = p+vec2(-.2,.15);\n    col = mix(col,vec3(2.,.4,.0),st(sdSegment(z,vec2(-.09,-.8),vec2(0.09))-.04));\n    col = mix(col,vec3(2.,.4,.0),st(sdSegment(z,vec2(-.2,-.8),vec2(0.1,-.8))-.04));\n\n    z = p+vec2(.12,.15);\n    col = mix(col,vec3(2.,.8,.0),st(sdSegment(z,vec2(-.05,-.8),vec2(0))-.04));\n    col = mix(col,vec3(2.,.8,.0),st(sdSegment(z,vec2(-.2,-.8),vec2(0.1,-.8))-.04));\n    \n    z = p - vec2(.101,-.28);\n    col = mix(col,vec3(.1,.8,.0),st(sdCircle(z+vec2(.25,.3),.15)));\n    col = mix(col,vec3(.05,.5,.0),st(sdCircle(z+vec2(-.05,.31),.15)));\n    col = mix(col,vec3(.05,.5,.0),st(sdUnevenCapsule(z,vec2(-.89,.34),vec2(-.7,.15),.0,.1)-.06));\n    col = mix(col,vec3(.1,.8,.0),st(min(sdSegment(z,vec2(0),vec2(0.,.7))-.4,sdSegment(z,vec2(0),vec2(-.5,.0))-.4)));\n    \n    z = p - vec2(-.146,-.24);\n    col = mix(col,vec3(.1,.8,.0),st(sdUnevenCapsule(z,vec2(-.8,.19),vec2(-.5,.07),.0,.1)-.06));\n   \n    z = p - vec2(.35,.45);\n    col = mix(col,vec3(2.,.5,.0),st(sdSegment(z,vec2(.3,.067),vec2(0))-.08));\n    \n    z = p - vec2(0.04,.45);\n    col = mix(col,vec3(3.),st(max(sdCircle(z,.13),.02-sdCircle(z+vec2(0,.25),.4)-.2)));\n    \n    z += vec2(0.05,-.04);\n    col = mix(col,vec3(.05,.5,.0),st(sdUnevenCapsule(z,vec2(-.05,-.85),vec2(-.55,-1.2),.2,.0)-.07));    \n\n    O = vec4(aces_tonemap(col),0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}