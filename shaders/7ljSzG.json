{
    "Shader": {
        "info": {
            "date": "1627983952",
            "description": "classical CMYK halftoning with patterns at different rotations",
            "flags": 0,
            "hasliked": 0,
            "id": "7ljSzG",
            "likes": 12,
            "name": "CMYK Halftoning",
            "published": 3,
            "tags": [
                "halftone",
                "cmyk"
            ],
            "usePreview": 1,
            "username": "paniq",
            "viewed": 539
        },
        "renderpass": [
            {
                "code": "vec4 rgb_to_cmyk(vec3 col) {\n    float a = max(col.r, max(col.g, col.b));\n    return vec4((a - col.rgb) / a, 1.0 - a);\n}\n\nvec3 cmyk_to_rgb(vec4 col) {\n    float ik = 1.0 - col.w;\n    return (1.0 - col.rgb) * ik;\n}\n\nfloat ht(vec2 uv) {\n    uv = fract(uv);\n    return pow(length(uv - 0.5) / sqrt(0.5), 1.7);\n}\n\nvec2 rotate (vec2 p, float a) {\n    float c = cos(a);\n    float s = sin(a);\n    return vec2(c*p.x + s*p.y, c*p.y - s*p.x);\n}\n\nvec4 cmyk_ht(vec2 uv) {\n    return vec4(\n        ht(rotate(uv, radians(15.0))),\n        ht(rotate(uv, radians(75.0))),\n        ht(rotate(uv, radians(0.0))),\n        ht(rotate(uv, radians(45.0))));\n}\n\nvec3 scene(vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float s = iResolution.y / 10.0;\n    vec2 suv = uv * s;\n    vec4 htp = cmyk_ht(suv);\n\n    vec4 col = texture(iChannel0, uv * vec2(0.3333, 0.5) + 0.5) + 1.0/255.0;\n    vec4 cmyk = rgb_to_cmyk(col.rgb);\n    \n    cmyk = step(htp, cmyk);\n\n    return clamp(cmyk_to_rgb(cmyk), vec3(0.0), vec3(1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // supersample\n    const int N = 2;\n    float w = 0.0;\n    vec3 c = vec3(0.0);\n    for (int x = -N; x <= N; ++x) {\n        for (int y = -N; y <= N; ++y) {\n            c += scene(fragCoord + vec2(x,y)/(1.5*float(N)));\n            w += 1.0;\n        }\n    }\n    fragColor = vec4(c / w, 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}