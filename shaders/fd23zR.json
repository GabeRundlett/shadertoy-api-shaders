{
    "Shader": {
        "info": {
            "date": "1616848424",
            "description": "My friend made me do it.",
            "flags": 0,
            "hasliked": 0,
            "id": "fd23zR",
            "likes": 3,
            "name": "Hypnosis (polar c.s.)",
            "published": 3,
            "tags": [
                "polar",
                "hypno"
            ],
            "usePreview": 0,
            "username": "Paws22",
            "viewed": 317
        },
        "renderpass": [
            {
                "code": "float dist( vec2 pol )\n{\n    pol.x = fract(pol.x);\n    if (pol.x >= pol.y)\n    {\n        pol.y += 0.5;\n        return abs(pol.x - pol.y);\n    }\n    else\n    {\n        pol.y -= 0.5;\n        return abs(pol.x - pol.y);\n    }\n}\n\nmat2 _rot(float th)\n{\n\tvec2 a = sin(vec2(1.5707963, 0) + th);\n\treturn mat2(a.xy, -a.y, a.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    \n    mat2 rot = _rot(-iTime * 10.0);\n    \n    uv *= 2.0;\n    uv *= rot;\n    \n    float rad = acos(dot(normalize(uv), vec2(1.0, 0.0)));\n    \n    float angle = degrees(rad) / 360.0;\n    if (uv.y < 0.0)\n        angle = 1.0 - angle;\n    \n    float l = length(uv);\n    \n    vec2 polar = vec2(l, angle);\n    \n    polar.x *= 2.0;\n    \n    float d = dist(polar);\n    \n    vec3 col = vec3(sign(d - 0.3));\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}