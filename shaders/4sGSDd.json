{
    "Shader": {
        "info": {
            "date": "1467382346",
            "description": "From Left to right: base noise,  normalization by avg,  DoG wavelet,  joeedh's pseudo-blue.\nMiddle: ramp (not truly calibrated: should  check histograms)\nBottom (see full screen): with symmetries (to test perception)",
            "flags": 0,
            "hasliked": 0,
            "id": "4sGSDd",
            "likes": 44,
            "name": "pseudo blue noise 2",
            "published": 3,
            "tags": [
                "noise",
                "random",
                "dog",
                "bluenoise",
                "perception"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 4496
        },
        "renderpass": [
            {
                "code": "// --- bluenoise:\n// complicated ways:  \"Stippling and Blue Noise\" http://www.joesfer.com/?p=108 \n// on shadertoy: https://www.shadertoy.com/view/4dK3WR\n//               https://www.shadertoy.com/view/Md3GWf\n//        my tests: https://www.shadertoy.com/view/ldyXDd\n\n// --- perception of symmetries: \n// see https://www.shadertoy.com/view/XddSWn#\n\n#define T(l) textureLod(iChannel0,U/256.,l)\n\nfloat mask(vec2 p) { // see https://www.shadertoy.com/view/ldyXDd\n#define DMUL  8.12235325   \n#define SIZE  5.5\n    vec2 U = floor(p/SIZE)*SIZE;\n    p += ( T(0.).xy - .5 ) *DMUL;\n    return fract( p.x*1.705 + p.y*.5375 ); \n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{  \n    float x = U.x/iResolution.x,\n          y = U.y/iResolution.y;\n    //U = floor(U/4.)+.5;\n    \n    if ( y < .33 ) {               // --- bottom: symmetries\n          U = mod(U-=128.,255.);   // noise periodicity ( true 256 woul double lines )\n        U.x = min(U.x,256.-U.x);   // noise symmetry in x\n        U.y = min(U.y,256.-U.y);   // noise symmetry in y\n    }\n    \n    O  =  x<.25 ? T(0.)\n        : x<.26 ? O-O\n        : x<.50 ? .5 + .5 * (T(0.)-.5) / T(1.)\n        : x<.51 ? O-O \n        : x<.75 ? T(0.)-T(1.)+.5  //\tO =( T(0.)-(T(1.)-.25) ) ;\n        : x<.76 ? O-O\n        :         vec4(mask(U));    // float(mask(U)>.8);\n\n    y =  abs(y-.5)-.17;\n    O = vec4( y>0. || O.x==0. \n                ? y < .01 ? 0.                // horizontal lines\n                : O.x                         // top: homogeneous\n                : step ( O.x, fract(4.*x)) ); // middle: ramp\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}