{
    "Shader": {
        "info": {
            "date": "1674499273",
            "description": "Simple edge sobel edge detect.\nI did not make this code, I simply ported it from [url]https://gist.github.com/Hebali/6ebfc66106459aacee6a9fac029d0115[/url]",
            "flags": 2,
            "hasliked": 0,
            "id": "ctlSzM",
            "likes": 4,
            "name": "Edge detect",
            "published": 3,
            "tags": [
                "computervision"
            ],
            "usePreview": 0,
            "username": "Iliana",
            "viewed": 345
        },
        "renderpass": [
            {
                "code": "void make_kernel(inout vec4 n[9], sampler2D tex, vec2 coord)\n{\n\tfloat w = 1./iResolution.x;\n\tfloat h = 1./iResolution.y;\n\n\tn[0] = texture(tex, coord + vec2( -w, -h));\n\tn[1] = texture(tex, coord + vec2(0.0, -h));\n\tn[2] = texture(tex, coord + vec2(  w, -h));\n\tn[3] = texture(tex, coord + vec2( -w, 0.0));\n\tn[4] = texture(tex, coord);\n\tn[5] = texture(tex, coord + vec2(  w, 0.0));\n\tn[6] = texture(tex, coord + vec2( -w, h));\n\tn[7] = texture(tex, coord + vec2(0.0, h));\n\tn[8] = texture(tex, coord + vec2(  w, h));\n}\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    vec4 n[9];\n\tmake_kernel( n, iChannel0, I/iResolution.xy );\n\n\tvec4 sobel_edge_h = n[2] + (2.0*n[5]) + n[8] - (n[0] + (2.0*n[3]) + n[6]);\n  \tvec4 sobel_edge_v = n[0] + (2.0*n[1]) + n[2] - (n[6] + (2.0*n[7]) + n[8]);\n\tvec4 sobel = sqrt((sobel_edge_h * sobel_edge_h) + (sobel_edge_v * sobel_edge_v));\n\n\tO = vec4( 1.0 - sobel.rgb, 1.0 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}