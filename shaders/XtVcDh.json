{
    "Shader": {
        "info": {
            "date": "1536028022",
            "description": "Compares different 3-sorting algorithms.",
            "flags": 0,
            "hasliked": 0,
            "id": "XtVcDh",
            "likes": 12,
            "name": "3-sorting comparison",
            "published": 3,
            "tags": [
                "2d",
                "sorting"
            ],
            "usePreview": 0,
            "username": "iq",
            "viewed": 1714
        },
        "renderpass": [
            {
                "code": "// Compares different 3-value sorting algorithms. Set ALGORITHM to \n//\n//   0 for cuteSort    by iq: https://twitter.com/iquilezles/status/559477513139675136\n//   1 for sort3       by CeeJayDK: https://www.shadertoy.com/view/XtKcWh\n//   2 for sort3bk     by bkeinert: comments of https://www.shadertoy.com/view/XtKcWh\n//   3 for sort3bk_cj  by CeeJayDK: commments in shit shader\n//\n//\n// On 800x450 canvas (white little square on top right), for MY machine:\n//\n// 45 fps: cuteSort \n// 37 fps: sort3bk\n// 34 fps: sort3_cj\n// 26 fps: sort3\n//\n// Results seem to be highly dependent on the machine/configuration\n\n\n#define ALGORITHM 0\n\n\nvec3 cuteSort( vec3 n )\n{\n   float a = min(min(n.x,n.y),n.z);\n   float b = max(max(n.x,n.y),n.z);\n   return vec3( a, n.x+n.y+n.z-a-b, b );\n}\n\nvec3 sort3( vec3 c )\n{\n\tc.rg = (c.r < c.g) ? c.rg : c.gr;\n\tc.rb = (c.r < c.b) ? c.rb : c.br;\n\tc.gb = (c.g < c.b) ? c.gb : c.bg;\n    return c;\n}\n\nvec3 sort3bk(vec3 v)\n{\n\tvec2 t = vec2(min(v.x, v.y), max(v.x, v.y));\n\treturn vec3(min(t.x, v.z), min(max(v.z, t.x), t.y), max(t.y, v.z)); \n}\n\nvec3 sort3bk_cj(vec3 v)\n{\n\tvec4 t = vec4(min(v.x, v.y), min(v.z, v.y), max(v.x, v.y), max(v.z, v.y));\n\treturn vec3(min(t.x, t.y), max(t.x, t.y), max(t.z, t.w));\n}\n\nvoid mainImage(out vec4 c,vec2 p)\n{\n\tc.rgb = sin(p.xxy+p.xyy+iTime*vec3(11,111,113));\n    \n    #if ALGORITHM==0\n  \tfor(int i=0; i<20000; i++) c.bgr = cuteSort(c.rgb)-vec3(.01,.0,-.01);\n    #elif ALGORITHM==1\n    for(int i=0; i<20000; i++) c.bgr = sort3(c.rgb) -vec3(.01,.0,-.01);\n    #elif ALGORITHM==2\n    for(int i=0; i<20000; i++) c.bgr = sort3bk(c.rgb)-vec3(.01,.0,-.01);\n    #elif ALGORITHM==3\n    for(int i=0; i<20000; i++) c.bgr = sort3bk_cj(c.rgb)-vec3(.01,.0,-.01);\n    #endif\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}