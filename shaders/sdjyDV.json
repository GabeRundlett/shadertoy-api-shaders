{
    "Shader": {
        "info": {
            "date": "1644163235",
            "description": "f",
            "flags": 0,
            "hasliked": 0,
            "id": "sdjyDV",
            "likes": 3,
            "name": "procedural marble",
            "published": 3,
            "tags": [
                "f"
            ],
            "usePreview": 0,
            "username": "Angramme",
            "viewed": 320
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.x;\n    \n    for(int i=0; i<5; i++){\n        uv += vec2(.37, -.3);\n        uv = vec2(sin(uv.x*6.+uv.y*9.8)*.5+.5, cos(uv.y*6.68+uv.x*7.3)*.5*.5);\n    }\n    \n    float x = smoothstep(.4, .9, sin((uv.x-uv.y)*2.*3.1415)*.5+.5);\n    vec3 col = mix(vec3(27./255., 20./255., 33./255.), vec3(225./255., 253./255., 249./255.), x);\n    \n    // float y = smoothstep(.4, .9, sin(iTime+ (uv.x+uv.y)*2.*3.1415)*.5+.5);\n    // col += .5*mix(vec3(27./255., 20./255., 33./255.), vec3(225./255., 253./255., 249./255.), y);\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}