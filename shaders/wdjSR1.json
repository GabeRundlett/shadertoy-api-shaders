{
    "Shader": {
        "info": {
            "date": "1553094205",
            "description": "1kjs submission [url]https://js1k.com/2019-x/demo/4159[/url] \nFIXED: [url=https://codepen.io/atformt/full/poomEgm]codepen[/url]",
            "flags": 8,
            "hasliked": 0,
            "id": "wdjSR1",
            "likes": 9,
            "name": "i feel fine (working draft)",
            "published": 3,
            "tags": [
                "sound",
                "demo"
            ],
            "usePreview": 0,
            "username": "nabr",
            "viewed": 364
        },
        "renderpass": [
            {
                "code": "// nabr\n// https://www.shadertoy.com/view/wdjSR1\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// https://creativecommons.org/licenses/by-nc-sa/3.0/\n\n/*\n  _______    _    _                _   _    _  __    _____ \n |__   __|  | |  | |      /\\      | \\ | |  | |/ /   / ____|\n    | |     | |__| |     /  \\     |  \\| |  | ' /   | (___  \n    | |     |  __  |    / /\\ \\    | . ` |  |  <     \\___ \\ \n    | |     | |  | |   / ____ \\   | |\\  |  | . \\    ____) |\n   _|_|     |_|  |_|  /_/__  \\_\\  |_| \\_|  |_|\\_\\  |_____/ \n  / _|       \\ \\        / /  | |     | |   | |             \n | |_ ___  _ _\\ \\  /\\  / /_ _| |_ ___| |__ | |_ __   __ _  \n |  _/ _ \\| '__\\ \\/  \\/ / _` | __/ __| '_ \\| | '_ \\ / _` | \n | || (_) | |   \\  /\\  / (_| | || (__| | | |_| | | | (_| | \n |_| \\___/|_|    \\/  \\/ \\__,_|\\__\\___|_| |_(_)_| |_|\\__, | \n                                                     __/ | \n                                                    |___/ \n*/\n\n\n#define rt vec2(sin(3. + T), cos(3. + T))\n#define T iTime\n\n// box\nfloat bo(vec3 p) \n{\n    p = abs(p - .5 * vec3(rt, 1));\n    \n    return max(max(p.x, p.y), p.z) - .1;\n}\n\n// tunnel\nfloat s(vec3 p) \n{\n    vec3 g = fract(vec3(p.xy, T + p.z) * 0.47) - .5;\n    \n    g = smoothstep(0.3, 1., 25. * g * g);\n    \n    // not included in the demo\n    float tmp = 1.; \n    (mod(iTime, 32.) > 4.)?tmp=floor(fract(T*.1)* 3. ) -.5 : tmp;\n    \n    float t = .25 * (5. - max(2.5 * (cos(p.x) * sin(T + p.z)) + length(g) + abs(p.x*tmp), length(g) + abs(1. - p.y)));\n    \n    return min(t, bo(p));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) \n{\n    // not included in the demo\n    vec2 coord = vec2(0);\n    (mod(iTime, 32.) > 4.) ? coord = fragCoord *2.:coord = fragCoord - 2.;  \n    \n    vec2 u = ( coord - iResolution.xy) / iResolution.y;\n\n    vec3 d = normalize(vec3(u, 1)), o = vec3(0, 0, -1);\n    vec3 c, p, n;\n    float t, h;\n    float e = .002;\n    \n    // raymarch\n    for (int i = 0; i < 100; i++) \n    {\n        p = o + d * t;\n        p.xy = cos(.1 * T) * p.xy + sin(.1 * t) * vec2(p.y, -p.x);\n        h = s(p);\n        t += h;\n\n        if (h < e) \n        {\n            // normals\n            vec2 e = vec2(-e, e);\n            n = normalize(e.yxx * s(p + e.yxx) + e.xxy * s(p + e.xxy) + e.xyx * s(p + e.xyx) + e.yyy * s(p + e.yyy));\n\n            // light\n            float l = max(dot(normalize(vec3(1, -rt) - p), n), 0.);\n\n            // shade tunnel\n            c = -abs(d.x * .2) + vec3(.5, l, l) - (t * .05);\n\n            // shade box\n            if (bo(p) == h)\n                c = l - vec3(0, .5, 1), t = 0.;\n        }\n    }\n    // (not included in the demo)\n    float lasr = .5/length(abs(fract(p.y+T)*20.)*acos(t*.5/p.z));\n    \n    // out\n    fragColor = vec4(vec3(lasr, c.yz), 1.0);\n  \n    \n    // soundin (not included in the demo)\n    #define char(p,C)(((p.x<0.||p.x>1.||p.y<0.||p.y>1.))?vec4(0,0,0,1e5):textureGrad(iChannel3,p/16.+fract(vec2(C,15-C/16)/16.),dFdx(p/16.),dFdy(p/16.)))        \n    u *= 2.; u.x += 3.; u.y += 1.5;\n    for (int i = 0; i < 8; ++i)\n        fragColor += char(5.*u, int[](83, 111, 117, 110, 100, 32, 105, 110)[i]).x, u.x -= .5;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// nabr\n// https://www.shadertoy.com/view/wdjSR1\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// https://creativecommons.org/licenses/by-nc-sa/3.0/\n\n\n\n\nvec2 mainSound( in int samp, float time )\n{\n    \n    float t = mod(time, 8.);\n\t\n    float f[] = float[](440., 880., 554.37, 415.30, 830.61);\n\t\n    float v = (sin(t * .5) > .5) ? .5 : 1.5;\n \t\n    float R = (abs(sin(6.2831 * v * t * f[int(4. * t) % 3]) - .25) - .5) \n        \t\t* .8 + cos(6.2831 * .75 * t * f[int(.5 * t)]) + 1.;\n    \n \tfloat L = ((-sin(6.2831 * t * f[int(t) % 2]) + .1) \n               \t+ abs(cos(6.2831 * v * t * f[int(2. * t) % 3]) - .5) - .25);\n   \n    \n    return vec2(R, L) * .25;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}