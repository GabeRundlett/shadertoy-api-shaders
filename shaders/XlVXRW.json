{
    "Shader": {
        "info": {
            "date": "1483297138",
            "description": "what, not a single celtic pattern in shadertoy up to now ? :-)",
            "flags": 0,
            "hasliked": 0,
            "id": "XlVXRW",
            "likes": 9,
            "name": "triskel (255 chars)",
            "published": 3,
            "tags": [
                "2d",
                "short",
                "triskel",
                "celtic"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 849
        },
        "renderpass": [
            {
                "code": "/**/\nvoid mainImage( out vec4 O,  vec2 U )\n{\n\tvec2 R = iResolution.xy;\n    U = (U+U-R)/R.y + vec2(0,.1);\n    \n    float tau = 6.283,                                       // 3 symmetries\n            a = -floor((atan(U.y,U.x)-.33)*3./tau)/3.*tau -.05, l;\n    U *= mat2(cos(a),-sin(a),sin(a),cos(a));\n    U = 3.*(U-vec2(0,.577));\n    \n    l = length(U), a = atan(U.y,U.x);                        // spiral\n\tO = vec4( l + fract((a+2.25)/tau) < 2. ? .5+.5*sin(a+tau*l) : 0.);\n    \n    O = smoothstep(.0,.1,abs(O-.5)) - smoothstep(.8,.9,O);   // optional decoration\n}\n/**/\n\n\n\n\n// --- smaller versions :\n\n\n/** // 255 chars by coyote\n\n#define A atan(U.y,U.x)\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    U = (U+U-(O.xy=iResolution.xy))/O.y;\n    U.y += .1;\n    \n    float p = .1592,                                          // 3 symmetries\n          a = floor(3.*A*p-p)/3./p +.05,\n          c=cos(a);\n    \n    c = length(U= 3.*(U*mat2(c,a=sin(a),-a,c) - vec2(0,.577))); // spiral\n\tO = (.5+.5*sin(A+c/p)) * vec4( c + fract((A+2.25)*p) < 2.);\n  //O = smoothstep(.0,.1,abs(O-.5)) - smoothstep(.8,.9,O);   // optional decoration\n}\n/**/\n\n/** // 270 chars \n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    U = (U+U-(O.xy=iResolution.xy))/O.y; U.y += .1;\n    \n    float p = 6.28,                                          // 3 symmetries\n          a = -floor((atan(U.y,U.x)-.33)*3./p)/3.*p -.05, c=cos(a),s=sin(a), l;\n    U = 3.*(U*mat2(c,-s,s,c) - vec2(0,.577));\n    \n    l = length(U), a = atan(U.y,U.x);                        // spiral\n\tO = vec4( l + fract((a+2.25)/p) < 2. ? .5+.5*sin(a+p*l) : 0.);\n\n  //O = smoothstep(.0,.1,abs(O-.5)) - smoothstep(.8,.9,O);   // optional decoration\n}\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}