{
    "Shader": {
        "info": {
            "date": "1578088576",
            "description": "Staircase",
            "flags": 0,
            "hasliked": 0,
            "id": "wlc3Wl",
            "likes": 9,
            "name": "More stairs",
            "published": 3,
            "tags": [
                "3d",
                "raymarch",
                "stairs"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 455
        },
        "renderpass": [
            {
                "code": "vec2 R;\n\nmat2 rot(float a) {\n    return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\nfloat map(vec3 rp){\n    float d = 99.;\n    \n    d = min(rp.y - floor(rp.z), 1.- (rp.z - floor(rp.y)));\n    d = min(min(10. - rp.x, 1. + rp.x), d);\n    \n    return d;\n}\nvec3 normal( in vec3 pos ){\n    vec2 e = vec2(0.002, -0.002);\n    return normalize(\n        e.xyy * map(pos + e.xyy) + \n        e.yyx * map(pos + e.yyx) + \n        e.yxy * map(pos + e.yxy) + \n        e.xxx * map(pos + e.xxx));\n}\n\nfloat march(vec3 rd, vec3 ro){\n \tfloat t = 0., d = 0.;   \n    \n    for(int i = 0; i < 64; i++){\n    \td = map(ro + rd*t); \t   \n        if(abs(d) < .002){\n            break;\n        }\n        t += d * .75;\n    }   \n    return t;\n}\nvec3 color(vec3 ro, vec3 rd, vec3 n, float t){\n    vec3 lp = ro + vec3(.1, .3, -.01)*2.;\n    vec3 ld = lp-ro;\n    float dif = max(dot(n, ld), .0);\n    \n    vec3 col = vec3(0);\n    vec2 id = vec2(0);\n    float chk = 0.;\n    \n    ro.x*=.5;\n    if(abs(n.x)>.99){\n    \tid = floor((ro.yz)*2.);\n    \tchk = mod(id.x + id.y, 2.);\n    \tcol = mix(vec3(.5, .6, 0.), vec3(.5, 0., .6), chk)*.2;\n    }\n    else{\n    \tid = floor((ro.xy+ro.xz)*2.);\n    \tchk = mod(id.x + id.y, 2.);\n    \tcol = mix(vec3(.5, .6, 0.), vec3(.5, 0., .6), chk) *dif;  \n    }\n\treturn col;   \n}\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    R = iResolution.xy;\n    vec2 uv = vec2(u.xy - 0.5*R.xy)/R.y;\n    \n    vec3 rd = normalize(vec3(uv, 1. - dot(uv, uv) * .35));\n    vec3 ro = vec3(.0,iTime - 5., -12. + iTime);\n    \n    rd.yz*=rot(.2);\n    rd.xz*=rot(-.5);\n    \n    float t = march(rd, ro);\n    \n    ro += rd*t;\n    \n    vec3 n = normal(ro);\n    vec3 col = color(ro, rd, n, t);\n    \n    f = vec4(sqrt(clamp(col, 0.0, 1.0)), 1.0);\n}\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}