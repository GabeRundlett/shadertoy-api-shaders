{
    "Shader": {
        "info": {
            "date": "1584315674",
            "description": "wave PM",
            "flags": 0,
            "hasliked": 0,
            "id": "tdscz4",
            "likes": 2,
            "name": "animation_PM",
            "published": 3,
            "tags": [
                "animated"
            ],
            "usePreview": 0,
            "username": "KofeyOK",
            "viewed": 297
        },
        "renderpass": [
            {
                "code": "float Circle(vec2 uv, vec2 p, float r, float blur) { //функція для створення кола\n float d = length(uv-p);\n float c = smoothstep(r, r-blur, d);\n\n return c;\n}\nfloat Band (float t, float start, float end, float blur) //функція для створення смужки\n{\nfloat step1 = smoothstep(start-blur, start+blur, t);\n float step2 = smoothstep(end+blur, end-blur, t);\n\n return step1*step2;\n}\nfloat Rect (vec2 uv, float left, float right, float //функція для створення прямокутника\nbottom, float top, float blur) {\nfloat band1 = Band(uv.x, left, right, blur);\nfloat band2 = Band(uv.y, bottom, top, blur);\n\nreturn band1*band2;\n}\nfloat smiley (vec2 uv, vec2 p, float size){ //функція для створення смайла :)\nuv -= p; //translating coordinate systems\n uv /= size; //scaling coordinate systems\n\n float mask = Circle (uv, vec2(.0), .4, .01);\n\n mask -= Circle (uv, vec2(-.13, .2), .07, .01);\n mask -= Circle (uv, vec2(.13, .2), .07, .01);\n\nfloat mouth = Circle (uv, vec2(.0, .0), .3, .02);\n mouth -= Circle (uv, vec2(.0, 0.1), .3, .02);\n\n mask -= mouth;\n\n return mask;\n }\nfloat remap01 (float a, float b, float t){ //нормалізує значення t; 0<=t<=1\n return (t-a) / (b-a);\n}\nfloat remap (float a, float b, float c, float d, float // c<=t<=d\nt){\n return remap01 (a, b, t) * (d-c) + c;\n}\nfloat PIlike(vec2 uv, vec2 p, float size){\n uv -= p; //translating coordinate systems\n uv /= size; //scaling coordinate systems\n float x1 = uv.x;\n\n float m = sin(+x1*8.) *.1; // змінюється з часом і зростанням х\n \n m = m*m*4.;\n float y1 = uv.y-m; // -m перетворює прямокутник на синусоїду, яка змінюється з часом\n \n float y2 = uv.y;\n float m2 = sin(+y2*8.) *.1;\n float x2  = uv.x-m2;\n //float m = (x-.5)*(x+.5);  // цей блок коду змінює вигляд фігури\n \n //float y = uv.y+m; \n\n //x+= y;  // нахил фігури\n\n float blur = remap(-.1, .1, .01, .05, y1); // збільшує розмиття зі зростанням х\n //blur *= pow(blur*4., 3.);\n float mask = Rect (vec2(x1, y1), -.5, .5, .1, .3, blur); //будуємо фігуру\n mask += Rect (vec2(x2, y2), -.5, -.3, -0.2, 0.16, .04);\n mask += Rect (vec2(x2, y2), 0., 0.2, -0.2, 0.16, .04);\n float wheel = Circle(uv, vec2(0.,-0.2), 0.16, .07);\n mask+=wheel;\n    \n return mask;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy; // 0 <> 1.\n\n    float t = iTime; // час\n    uv -= .5; // -0.5 <> 0.5\n    uv.x *= iResolution.x/iResolution.y;\n\tfloat m = sin(t+uv.x*8.) *.1; // змінюється з часом і зростанням х\n \tuv.y -=m;\n    vec3 col = vec3(0.);\n\n    float mask = 0.;\n\tmask = Rect(uv, -.7, -.55, -.3, .3, .001);\n    mask += Rect(uv, -.3, -0.15, -.3, .3, .001);\n    mask += Rect(uv, -.7, -0.15, .15, .3, .001);\n    mask += Rect(uv, .1, 0.2, -.3, .3, .001);\n    mask += Rect(uv, .55, 0.65, -.3, .3, .001);\n    mask += Rect(vec2(uv.x+uv.y*0.23,uv.y), 0.225, 0.325, -.3, .3, .003);\n    mask += Rect(vec2(uv.x-uv.y*0.23,uv.y), 0.425, 0.525, -.3, .3, .003);\n    //mask = PIlike(uv, vec2(0.),1.);\n    col = vec3(1., 1., 1.)*mask;\n\n    fragColor = vec4(col, 1.0);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}