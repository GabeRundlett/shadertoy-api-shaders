{
    "Shader": {
        "info": {
            "date": "1554487129",
            "description": "pentagons",
            "flags": 0,
            "hasliked": 0,
            "id": "WdsSDn",
            "likes": 1,
            "name": "Playing With Pentagons",
            "published": 3,
            "tags": [
                "pentagon"
            ],
            "usePreview": 0,
            "username": "gannon",
            "viewed": 506
        },
        "renderpass": [
            {
                "code": "float sdHexPrism( vec3 p, vec2 h )\n{\n    const vec3 k = vec3(-0.8660254, 0.5, 0.57735);\n    p = abs(p);\n    p.xy -= 2.0*min(dot(k.xy, p.xy), 0.0)*k.xy;\n    vec2 d = vec2(\n       length(p.xy-vec2(clamp(p.x,-k.z*h.x,k.z*h.x), h.x))*sign(p.y-h.x),\n       p.z-h.y );\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nvec2 tile(vec2 _st, float _zoom){\n    _st *= _zoom;\n    return fract(_st);\n}\n\nfloat sdPentagon( in vec2 p, in float r )\n{\n    const vec3 k = vec3(0.809016994,0.587785252,0.726542528); // pi/5: cos, sin, tan\n\n    // reflections\n    p.y = -p.y;\n    p.x = abs(p.x);\n    p -= 2.0*min(dot(vec2(-k.x,k.y),p),0.0)*vec2(-k.x,k.y);\n    p -= 2.0*min(dot(vec2( k.x,k.y),p),0.0)*vec2( k.x,k.y);\n    \n\t// side of polygon\n    return length(p-vec2(clamp(p.x,-r*k.z,r*k.z),r))*sign(p.y-r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    // p = tile(p,1.);\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\t\n    float pent = sdPentagon(p,0.85)/sdPentagon(p,0.82) + sdPentagon(p,0.75)/sdPentagon(p,0.72);\n    float pent2= sdPentagon(p,0.1+ sin(iTime/2.));\n\n    \n    // Output to screen\n    fragColor = vec4(cos(iTime)-clamp(pent,0.,0.1),0.5-clamp(pent-pent2,0.,0.1),1.-clamp(pent2,0.,0.1),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}