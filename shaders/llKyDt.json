{
    "Shader": {
        "info": {
            "date": "1538218757",
            "description": "Lemon.\nJust toying around\nhttps://soundcloud.com/virgill/vokuhila\n",
            "flags": 96,
            "hasliked": 0,
            "id": "llKyDt",
            "likes": 35,
            "name": "Lemon.",
            "published": 3,
            "tags": [
                "lemon"
            ],
            "usePreview": 0,
            "username": "Virgill",
            "viewed": 1652
        },
        "renderpass": [
            {
                "code": "// Lemon.\n\n// Just toying around\n\nconst float GA =2.399; \nconst float pi =3.14159265359;\n\nmat2 rot = mat2(cos(GA),sin(GA),-sin(GA),cos(GA));\nvec3 dof(sampler2D tex,vec2 uv,float rad)\n{\n\tvec3 acc=vec3(0);\n    vec2 pixel=vec2(.002*iResolution.y/iResolution.x,.002),angle=vec2(0,rad);;\n    rad=1.;\n\tfor (int j=0;j<10;j++)\n    {  \n        rad += 1./rad;\n\t    angle*=rot;\n        vec4 col=texture(tex,uv+pixel*(rad-1.)*angle);\n\t\tacc+=col.xyz;\n\t}\n\treturn acc/10.;\n}\n\n\nvec2 curve(vec2 uv) //some things are stolen\n{\n\tuv=(uv-.5)*2.;\n\tuv*=1.1;\t\n\tuv.x*=1.+pow((abs(uv.y)/5.),2.);\n\tuv.y*=1.+pow((abs(uv.x)/4.),2.);\n\tuv=(uv*.5)+.5;\n\tuv=uv*.92+.04;\n\treturn uv;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float depth = (1.5-1.5*fract((iTime+.1)*1.625*.5));\n    vec2 q=fragCoord.xy / iResolution.xy;\n    vec2 uv=q;\n    uv = curve(uv);\n    vec3 oricol=texture(iChannel0,vec2(q.x,q.y)).xyz;\n    vec3 col;\n\tfloat x=sin(.3*iTime+uv.y*21.)*sin(.7*iTime+uv.y*29.)*sin(.3+.33*iTime+uv.y*31.)*.0017;\n    col.r=dof(iChannel0,vec2(x+uv.x+.001,uv.y+.001),depth).x+.05; //some others too\n    col.g=dof(iChannel0,vec2(x+uv.x+.000,uv.y-.002),depth).y+.05;\n    col.b=dof(iChannel0,vec2(x+uv.x-.002,uv.y+.000),depth).z+.05;\n    col.r+=.05*dof(iChannel0,.75*vec2(x+.015,-0.017)+vec2(uv.x+.001,uv.y+.001),depth).x;\n    col.g+=.05*dof(iChannel0,.75*vec2(x+-.012,-0.01)+vec2(uv.x+.000,uv.y-.002),depth).y;\n    col.b+=.05*dof(iChannel0,.75*vec2(x+-.02,-0.008)+vec2(uv.x-.002,uv.y+.000),depth).z;\n    col=clamp(col*.6+.4*col*col*1.,0.,1.);\n    float vig=(0.+1.*16.*uv.x*uv.y*(1.-uv.x)*(1.-uv.y));\n\tcol*=vec3(pow(vig,.3));\n    col*=vec3(.95,1.05,.95);\n\tcol*=2.8;\n\tfloat scans=clamp(0.65+0.65*sin(3.5*iTime+uv.y*iResolution.y*1.5),0.,1.);\n\tfloat s=pow(scans,1.7);\n\tcol=col*vec3(.4+.7*s) ;\n    col*=1.+.01*sin(110.*iTime);\n\tif (uv.x<0.||uv.x>1.)col*=0.;\n\tif (uv.y<0.||uv.y>1.)col*=0.;\n\tcol*=1.-.65*vec3(clamp((mod(fragCoord.x,2.)-1.)*2.,0.,1.));\n    float comp=smoothstep(.1,.9,sin(iTime));\n    fragColor=vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "musicstream",
                        "id": 16264,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/virgill/vokuhila"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Lemon.\n\n\nconst float pi =3.14159265359;\nint col[9*26] = int[9*26] (\t0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1, //logo \n\t\t\t\t\t   \t\t0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,\n                       \t\t0,1,0,0,0,0,1,1,0,0,0,1,0,1,0,0,1,0,0,1,1,0,0,0,1,1,\n                       \t\t0,1,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,1,0,1,0,1,1,0,1, \n                       \t\t0,1,0,0,0,1,1,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,1,1,0,1, \n                       \t\t0,1,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,1,0,1,0,1,1,0,1, \n                       \t\t0,0,1,1,0,0,1,1,1,0,1,0,1,0,1,0,1,0,0,1,1,0,1,1,0,1, \n                       \t\t0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1, \n                       \t\t0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1);  \n\nvec3 rectangle(vec2 uv, vec2 pos, vec2 dim, vec3 color) \n{\n\tfloat t=0.;\n\tif ((uv.x>pos.x-dim.x/2.)&&(uv.x<pos.x+dim.x/2.)\n\t&&  (uv.y>pos.y-dim.y/2.)&&(uv.y<pos.y+dim.y/2.)) \n    {\n\t\tt=1.;\n\t}\n\treturn vec3(color*t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n\n    vec2 uv=fragCoord.xy/iResolution.xy*min(1.,0.1*iTime);\n    uv.y+=0.1*-abs(sin((iTime+0.1)*1.625*pi*0.5));\n    uv.x+=0.05*sin(iTime);\n \tvec2 dim=vec2(.3,.5)/10.*mix((.9*abs(sin(iTime*2.+2.*uv.x/uv.y+0.2*iTime))+.5),1.,abs(cos(0.2*iTime)));\n\tif(iTime>21.)dim-=0.025*abs(sin(iTime));\n    vec3 col1,col2;\n    vec3 rc1 = vec3(0);\n    int k=0;\n    for (float i=.7;i>=.25;i-=.05)\n    {\t \n        for (float j=.1;j<=.87;j+=.03)\n    \t{\t \n            if (col[k]==1)col1=vec3(.9);else col1=vec3(.15);\n           \trc1+=rectangle(uv,vec2(j,i),dim,col1);\n            k++;\n    \t}\n    }\n    rc1 += rectangle(uv, vec2(.93,.3), dim, col1); //dot\n    rc1 += rectangle(uv, vec2(.93,.35), dim, col1);\n    rc1 += rectangle(uv, vec2(.96,.3), dim, col1);\n    rc1 += rectangle(uv, vec2(.96,.35), dim, col1);\n\n\tfragColor = vec4(rc1,0);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}