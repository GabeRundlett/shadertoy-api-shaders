{
    "Shader": {
        "info": {
            "date": "1567635436",
            "description": "Playing around with noise and coordinate transforms",
            "flags": 0,
            "hasliked": 0,
            "id": "3st3zn",
            "likes": 1,
            "name": "Glue fields",
            "published": 3,
            "tags": [
                "2d",
                "noise",
                "liquidy"
            ],
            "usePreview": 0,
            "username": "stseagle",
            "viewed": 489
        },
        "renderpass": [
            {
                "code": "float random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.246334,78.34534)))*\n        4346.23643);\n}\n\n// From Inigo Quilez\nvec2 hash( vec2 x )  // replace this by something better\n{\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\n}\n\n\n// https://www.shadertoy.com/view/XdXGW8 \nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( hash( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \n                     dot( hash( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( hash( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \n                     dot( hash( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float gridSize = 300.;\n    vec2 st = fragCoord.xy/ gridSize;\n    vec2 mt = iMouse.xy/gridSize;\n    \n    float diag = mod(floor(st).x + floor(st).y, 2.);\n    float dis = smoothstep(0., 0.7, distance(st, mt));\n\n    st.x += (sin(iTime * 0.232 + 0.34) * 8. + 16.) * (noise(st )- 1.) * 0.5 + dis;\n    st.y += 4.2 * cos(iTime * 0.21 + 0.2) + 4. * noise(st ) - dis;\n\n\n    vec2 ipos = floor(st );  // get the integer coords\n    \n\n    // Assign a random color based on the integer coord\n    float color = mix(noise(ipos - 1. ), random(ipos ), smoothstep(0.,1.,st.y));\n\n    fragColor = vec4(mix(vec3(0.0157, 0.0078, 0.1255),vec3(0.9804, 0.9647, 0.8784),color),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}