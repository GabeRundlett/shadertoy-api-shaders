{
    "Shader": {
        "info": {
            "date": "1579767542",
            "description": "make some useful noise",
            "flags": 0,
            "hasliked": 0,
            "id": "WtVGDy",
            "likes": 1,
            "name": "Make noise",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "tonywu",
            "viewed": 315
        },
        "renderpass": [
            {
                "code": "float N21(vec2 p){\n\treturn fract(sin(p.x*100. + p.y*643.)*5647.);\n}\n\nfloat SmoothNoise(vec2 uv){\n    \n \tvec2 lv = fract(uv);\n    vec2 id = floor(uv);\n    \n    lv = lv*lv*(3. - 2.*lv);\n    \n    float bl = N21(id);\n    float br = N21(id+vec2(1,0));\n    float b = mix(bl,br, lv.x);\n    \n    float tl = N21(id+vec2(0,1));\n    float tr = N21(id+vec2(1,1));\n    float t = mix(tl, tr, lv.x);\n    \n    return mix(b, t, lv.y);\n}\n\nfloat SmoothNoise2(vec2 uv) {\n\tfloat c = SmoothNoise(uv*4.);\n    c += SmoothNoise(uv*8.) * .5;\n    c += SmoothNoise(uv*16.) * .25;\n    c += SmoothNoise(uv*32.) * .125;\n    c += SmoothNoise(uv*64.) * .0625;\n    \n    return c /=2.;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n\t//float c = N21(uv);\n    \n    uv += iTime*.1;\n    float c = SmoothNoise2(uv);\n    \n    \n    vec3 col =vec3(c);\n    \n    //col.rg = lv;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}