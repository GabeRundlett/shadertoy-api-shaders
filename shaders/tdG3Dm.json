{
    "Shader": {
        "info": {
            "date": "1570420383",
            "description": "Corn or pineapple?",
            "flags": 0,
            "hasliked": 0,
            "id": "tdG3Dm",
            "likes": 2,
            "name": "Shadertober 06 - Husky",
            "published": 3,
            "tags": [
                "inktober",
                "shadertober",
                "husky",
                "backwardscaptain"
            ],
            "usePreview": 0,
            "username": "BackwardsCap",
            "viewed": 342
        },
        "renderpass": [
            {
                "code": "#define MAX_DIST 30.0\n#define PI 3.1415927\n#define T mod((iTime*2.),12.55)\n\nvec2 rotate(vec2 a, float d){\n    float s  = sin(d);\n    float c = cos(d);\n    \n    return vec2(\n        a.x*c-a.y*s,\n        a.x*s+a.y*c);\n}\n\nfloat box(vec3 p, vec3 b)\n{\n    vec3 d = abs(p)-b;\n    return length(max(d,0.0));\n}\n\nfloat husk(vec3 bp, vec3 p)\n{\n    \n    return box(bp-vec3(0.,-2.,-4),vec3(10,3.+cos(p.x+p.z+p.y)/4.+bp.x/2.,.1));\n}\n\n\nvec2 map(vec3 p)\n{\n    \n    \n\tvec3 pp = p+vec3(0.,8.,0.);\n    pp.yz = rotate(pp.yz,0.);\n    vec3 bp = pp+vec3(-T-1.,3.,0.);\n    vec3 lp = p;\n    lp.x-=T;\n    float o =30.;\n    float b = 1000000000.;\n    \n    float mx = 10.;\n    for(float i=0.;i<mx;i++)\n    {\n        pp.yz = rotate(pp.yz,.6+i*.0001);\n        bp = pp+vec3(-T-12.,0.,-1.-cos(T-i)/10.);\n        bp.z+=((lp.x-o)*(lp.x-o))/25.;\n        b=min(b,husk(bp,p));\n    }\n    \n    p.y=p.y+abs(p.z*p.z)/25.;\n    p.y+=(lp.x*lp.x)/400.;\n    float c = p.y+.5*(1.-smoothstep(-1.,1.,abs(cos(abs(p.z)))*3.))+smoothstep(0.2,2.,(1.-abs(sin(p.x*2.))/1.5));\n\t\n    float r=min(c,b);\n    \n    float m=0.0;\n\n    if(r==c)m=1.;\n    else if(r==b)m=2.;\n    \n    return vec2(r,m);\n}\n\nvec3 normal(vec3 p)\n{\n    vec2 e = vec2(0.0001,0.);\n    return normalize(vec3(\n        map(p+e.xyy).x-map(p-e.xyy).x,\n        map(p+e.yxy).x-map(p-e.yxy).x,\n        map(p+e.yyx).x-map(p-e.yyx).x\n    ));\n    \n}\n\nvec2 ray(vec3 ro, vec3 rd)\n{\n    float t =0.0;\n    float m = 0.0;\n    \n    for(int i=0;i<128;i++)\n    {\n        \n        vec3 p=ro+rd*t;\n        vec2 h=map(p);\n        m=h.y;\n        if(h.x<0.00001)break;\n        t+=h.x/2.;\n        if(t>MAX_DIST)break;\n    }\n    \n    if(t>MAX_DIST)t=-1.;\n    \n    return vec2(t,m);\n}\n \nvec3 color(vec3 p, vec3 n, vec2 t)\n{\n    vec3 c = vec3(0.);\n    vec3 mate = vec3(1.32,1,0);\n    if(t.y>1.5)\n    {\n        mate=vec3(0.,.5,0.)/4.*(.5+(1.+cos(p.x/2.)));\n        mate+=(mate*texture(iChannel0,vec2(p.x,(p.z/p.y))).rgb)/2.;\n    }\n    vec3 sun=normalize(vec3(0.2,0.5,-0.5));\n    float dif=clamp(dot(n,sun),0.0,1.0);\n    float sha = step(ray(p+n*.001,sun).x,0.0);\n    float sky = clamp(0.5+0.5*dot(n,vec3(0,1,0)),0.,1.);\n    float bou = clamp(0.5+0.5*dot(n,vec3(0,-1,0)),0.,1.);\n    \n    c=mate*vec3(0.5,0.6,0.5)*dif*sha;\n    c+=mate*vec3(0.2,0.3,.8)*sky;\n    c+=mate*vec3(0.2,0.1,0.1)*bou;\n    \n    return c;\n}\n\nvec3 render(vec3 ro, vec3 rd)\n{    \n    \n    vec2 st = vec2(atan(rd.y,rd.z), length(ro));\n        \n\tvec3 c = vec3(0.,.1,0.)*(.5+smoothstep(-0.,1.,cos(st.x*40.+iTime*3.)));\n\n    \n    vec2 t = ray(ro,rd);\n\n    \n    if(t.x>0.)\n    {\n        vec3 p = ro+rd*t.x;\n        vec3 n=normal(p);\n        \n        c=color(p,n,t);\n        \n    }\n   \tc=pow(c,vec3(0.454));\n    \n    return c;\n}\n    \n\nvoid mainImage( out vec4 c, in vec2 f )\n{\n    vec2 uv = (2.*f-iResolution.xy)/iResolution.y;\n    \n    vec3 ro = vec3(T,2,0.);\n    vec3 ta = vec3(T+10.,0,0.);\n    vec3 camF =\tnormalize(ta-ro);\n    vec3 camU = normalize(cross(camF,vec3(0,1,0)));\n    vec3 camR = normalize(cross(camU,camF));\n    \n    vec3 rd = normalize(uv.x*camU+uv.y*camR+2.*camF);\n    \n    c.rgb=render(ro,rd);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 9,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}