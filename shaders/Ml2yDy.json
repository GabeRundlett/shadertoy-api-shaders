{
    "Shader": {
        "info": {
            "date": "1510073208",
            "description": "x",
            "flags": 2,
            "hasliked": 0,
            "id": "Ml2yDy",
            "likes": 1,
            "name": "nmn_smelt",
            "published": 3,
            "tags": [
                "x"
            ],
            "usePreview": 0,
            "username": "nonymononymo",
            "viewed": 743
        },
        "renderpass": [
            {
                "code": "#define SIN01(a) (sin(a)*0.5 + 0.5)\n\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 hsv = rgb2hsv(texture(iChannel0, uv).rgb);\n    \n    float angle = hsv.x + atan(uv.y, uv.x) + iMouse.x/iResolution.x*4.5;\n    mat2 RotationMatrix = mat2( cos( angle ), -sin( angle ), sin( angle ),  cos( angle ));\n    vec3 col = texture(iChannel0, uv + RotationMatrix * vec2(log(max(SIN01(1. + (1. - iMouse.y/iResolution.y)*3.)-0.2, 0.)*0.2 + 1.  ),0) * hsv.y).rgb;\n    \n    fragColor = vec4(col,1.0);\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}