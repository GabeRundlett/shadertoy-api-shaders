{
    "Shader": {
        "info": {
            "date": "1600316363",
            "description": "This is based on my [url=https://www.shadertoy.com/view/Wd3cRr]\"Synth Noise Music.\"[/url]",
            "flags": 8,
            "hasliked": 0,
            "id": "wsdczn",
            "likes": 13,
            "name": "Electronic dance music",
            "published": 3,
            "tags": [
                "music",
                "bytebeat"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 722
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = vec4(mod(uv,sound(iTime+uv.x)),1.0,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// http://countercomplex.blogspot.jp/2011/10/algorithmic-symphonies-from-one-line-of.html\n// http://wurstcaptures.untergrund.net/music/\n\nvec2 mainSound( in int samp, float time )\n{\n    return sound(time);\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            },
            {
                "code": "// http://countercomplex.blogspot.jp/2011/10/algorithmic-symphonies-from-one-line-of.html\n// http://wurstcaptures.untergrund.net/music/\n\nvec2 sound1( float time )\n{\n    int t = int(time);\n    //t = t % 150000;\n    t =\n        (t>>5|t*(-(t/500)%11)&t/1024)-1\n        //(t>>5|t*((t/50)%500)&t/1024)-1\n    ;\n    return vec2(float(t & 0xff - 128) / 128.);\n}\n\nvec2 sound(float time){\n    float factor = 1.0;\n    vec2 result = vec2(0.0);\n    time *= 2000.;\n    for(int i = 0; i < 5; i++){\n        factor *= 2.0;\n    \tresult += sound1(time*factor)/(factor);\n    }\n    return result;\n}\n\n\n/*\nvec2 sound1( float time )\n{\n    int t = int(time * 1000.0);\n    //t = t % 150000;\n    t = (t>>5|t*(-(t/1000)%11)&t/1024)-1;\n    return vec2(float(t & 0xff - 128) / 128.);\n}\n\nvec2 sound(float time){\n    float factor = 1.0;\n    vec2 result = vec2(0.0);\n    for(int i = 0; i < 5; i++){\n        factor *= 2.;\n    \tresult = (result + sound1((time+result.x)*factor)/(factor))/3.0;\n    }\n    return result;\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}