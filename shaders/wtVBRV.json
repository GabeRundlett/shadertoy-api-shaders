{
    "Shader": {
        "info": {
            "date": "1614713998",
            "description": "Simple rays",
            "flags": 0,
            "hasliked": 0,
            "id": "wtVBRV",
            "likes": 1,
            "name": "Neon Rays",
            "published": 3,
            "tags": [
                "rays"
            ],
            "usePreview": 0,
            "username": "victorberland",
            "viewed": 236
        },
        "renderpass": [
            {
                "code": "\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nfloat random (vec2 st) {\n    return fract(pow((sin(dot(st.xy,\n                                vec2(12.9898,sin(iTime / 3.14))))*\n                                43758.5453123),1.0));\n}\n\n\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = f*f*(3.0-2.0*f);\n    // u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners percentages\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 st = gl_FragCoord.xy/iResolution.xy;\n    //vec2 st = (gl_FragCoord.xy/iResolution.xy)*2.0 - 1.0;\n\n                float color = smoothstep(0.5,1.5,random(st));\n                color = sin(color / st.x) * sin(st.y / (st.x * sin(iTime / 2.0)));\n\n                vec3 color1 = vec3(color * 1.2, (0.2 + color), 0.1);\n                //float color = sin(color1);\n                //color = color / st.y;\n\n    //gl_FragColor = vec4(vec2(color, color), pow((st.x / 3.14), sin(smoothstep(0.1,1.2,u_time))),1.0);\n\n    fragColor = vec4(vec3(color1),1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}