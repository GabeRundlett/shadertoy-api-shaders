{
    "Shader": {
        "info": {
            "date": "1678373526",
            "description": "A flat shaded flame effect",
            "flags": 0,
            "hasliked": 0,
            "id": "csyGDz",
            "likes": 16,
            "name": "Toon flame",
            "published": 3,
            "tags": [
                "2d",
                "flame",
                "cartoon",
                "fire",
                "toon",
                "npr",
                "cel"
            ],
            "usePreview": 0,
            "username": "ruojake",
            "viewed": 455
        },
        "renderpass": [
            {
                "code": "// Toon flame (c) Kristian Sivonen (ruojake)\n// CC BY-SA 4.0 (https://creativecommons.org/licenses/by-sa/4.0/)\n\n#define FK(x) floatBitsToInt(cos(x))^floatBitsToInt(x)\n\nfloat hash12(vec2 p)\n{\n    int x = FK(p.x);\n    int y = FK(p.y);\n    return float((x*x-y)*(y*y+x)-x) / 2.14e9;\n}\n\nvec2 hash22(vec2 p)\n{\n    return vec2(hash12(p), hash12(p * 13.321 - 114.411));\n}\n\nmat2 rot(float a)\n{\n    float s = sin(a), c = cos(a);\n    return mat2(c,-s,s,c);\n}\n\nfloat ball(vec2 p)\n{\n    vec2 i = floor(p);\n    float minDist = 10000.;\n    for(float x = -2.; x <= 2.; x += 1.)\n    for(float y = -2.; y <= 2.; y += 1.)\n    {\n        vec2 c = i + vec2(x, y);\n        vec2 h = hash22(c);\n        float r = fract(h.x + .6541) * .5 + .3;\n        h *= rot(iTime * (fract(r + .134) * 8. - 4.));\n        \n        minDist = min(minDist, length(p - (c + h)) - r);\n    }\n    return minDist;\n}\n\nfloat flame(vec2 p)\n{\n    float t = iTime * 3.1415 * .25;\n    vec2 o = vec2(0,-.25);\n    float d = 10000.;\n    for (float i = 0.; i < 1.; i += 1./8.)\n    {\n        float lt = fract(t + i);\n        float r = sqrt(1.-lt) * .2 * min(lt * 2., 1.);\n       \n        d = min(d, (length(p-vec2(sin(t - lt) * (.3 / (lt+1.) + .2),lt*lt*.6)-o) - r) * 10. * pow(2.-lt,4.));\n    }\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * .5)/iResolution.y;\n\n    float d = ball(uv * 40. - vec2(0, iTime * 10.));\n    float d2 = 1.-ball(uv * 10. - vec2(0, iTime * 7.));\n    float fw = fwidth(d);\n    float flm = d - d2 - flame(uv);\n    vec3 col = mix(vec3(.05,.15,.2), vec3(1,.6,.05), smoothstep(-fw, fw, flm));\n    col = mix(col, vec3(1., .9,.4), smoothstep(-fw, fw, flm - 3.));\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}