{
    "Shader": {
        "info": {
            "date": "1659774957",
            "description": "reference: https://twitter.com/kamoshika_vrc/status/1554813085848051715\nvariant of https://shadertoy.com/view/7ldcWn\nTo be able to shake individual rings, we can no longer use any symmetry.",
            "flags": 0,
            "hasliked": 0,
            "id": "fl3yD4",
            "likes": 7,
            "name": "Celtic knot 4c shaking",
            "published": 3,
            "tags": [
                "2d",
                "pattern",
                "2tweets",
                "short",
                "golf",
                "celtic",
                "reproduction"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 264
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/7ldcWn\n\n// --- version with correct order + shake\n\n#define S(r) smoothstep( 12./R.y, 0., abs(length(V)-.85) -r )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,  \n         U = 2.*( u+u - R ) / R.y, V,D;\n    O-=O; // -.5;                                //  3-grey variant\n    float a, z = 9.;\n    for( int k=0; k<9; k++ )\n        D = vec2(k%3,k/3),\n        V = fract(U) + D -1.,  \n        V += .02*cos( iTime*30. +vec2(0,11)+ 6.3* fract(1e4*sin(dot(floor(U-D),17.-R))) ),\n \n        a = sin ( 4.* atan(V.y,V.x) ),\n        a < z && S(.07) > .5 ?\n            O *= 1.-S(.07), O += S(.05) \n            // * ( .6 + .6 * cos( atan(V.y,V.x)    + vec4(0,23,21,0)  ) )\n            // * ( .6 + .6 * cos( (H.x+11.*H.y)    + vec4(0,23,21,0)  ) )\n          , z=a  : z; \n}\n\n\n\n\n\n/* // --- 266 chars order.   no shake\n\n#define S(r) smoothstep( 12./R.y, 0., abs(length(V)-.9) -r )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,  \n         U = 2.*( u+u - R ) / R.y, V;\n    O-=O; // -.5;                                //  3-grey variant\n    float a, z = 9.;\n    for( int k=1; k<5; k++ )\n        V = mod( U + vec2(k%3,k/3), 2. ) - 1.,\n        a = sin ( 4.* atan(V.y,V.x) ),\n        a < z && S(.07) > .5 ?\n            O *= 1.-S(.07), O += S(.05) // * ( .6 + .6 * cos( atan(V.y,V.x)    + vec4(0,23,21,0)  ) )\n          , z=a  : z; \n}\n\n\n\n\n\n/** // --- 208 chars  no order no shake\n\n#define S(r) smoothstep( 12./R.y, 0., abs(length(V)-.9) -r )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,  \n         U = 2.*( u+u - R ) / R.y, V;\n    O-=O; // -.5;                                //  3-grey variant\n    for( int k=1; k<5; k++ )\n        V = mod( U + vec2(k%3,k/3), 2. ) - 1.,\n        O *= 1.-S(.07), O += S(.05); // * ( .6 + .6 * cos( float(k)*1.6  + vec4(0,23,21,0)  ) );\n}\n\n\n\n\n\n/** // --- 229 chars  no order no shake\n\n#define S(U,r) smoothstep( 12./R.y, 0., abs(length(U)-.9) -r )\n#define B(U)   O *= 1.-S(U,.07), O += S(U,.05)\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,  \n         U = 2.*( u+u - R ) / R.y;\n    O-=O; // -.5;                                //  3-grey variant\n    for( int k=0; k<9; k++ )\n        B( mod(U+vec2(k%3-1,k/3-1),2.)-1. );\n}\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}