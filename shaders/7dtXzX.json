{
    "Shader": {
        "info": {
            "date": "1633653648",
            "description": "land pac-JFP",
            "flags": 0,
            "hasliked": 0,
            "id": "7dtXzX",
            "likes": 5,
            "name": "land pac-JFP",
            "published": 3,
            "tags": [
                "ealandpacjfp"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 216
        },
        "renderpass": [
            {
                "code": "///earth pac-JFP\n///por jorge2017a2...2021-oct-07\n///referencia\n//https://iquilezles.org/articles/distfunctions2d\n\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define S2(d,b) smoothstep(antialiasing(0.05),b,d)\n\nvec2 rotatev2(vec2 p, float ang)\n{   float c = cos(ang);\n    float s = sin(ang);\n    return vec2(p.x*c - p.y*s, p.x*s + p.y*c);\n}\n\n///---------------------------\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}    \n///----------Operacion de Distancia--------\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n    \nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{\n  colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  //colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.05,0.0));\n  return colOut;\n}\n\nvec3 DrawFig(vec3 pColObj, vec3 colOut, float distObj )\n{  colOut = mix(colOut,pColObj ,S2( distObj,0.0));\nreturn colOut;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nfloat sdOrientedBox( in vec2 p, in vec2 a, in vec2 b, float th )\n{\n    float l = length(b-a);\n    vec2  d = (b-a)/l;\n    vec2  q = (p-(a+b)*0.5);\n          q = mat2(d.x,-d.y,d.y,d.x)*q;\n          q = abs(q)-vec2(l,th)*0.5;\n    return length(max(q,0.0)) + min(max(q.x,q.y),0.0);    \n}\n\nfloat sdVesica(vec2 p, float r, float d)\n{\n    p = abs(p);\n    float b = sqrt(r*r-d*d);\n    return ((p.y-b)*d>p.x*b) ? length(p-vec2(0.0,b))\n                             : length(p-vec2(-d,0.0))-r;\n}\n\nvec3 ondamar(vec2 p, vec3 col)\n{   vec2 q=p;\n    q.y-= 0.5;\n    q.y -= 0.8*sin(q.x*0.8);\n    col=DrawFig(vec3(0.0,0.8,0.0), col, abs(q.y)-4.0 );\n return col;\n}    \n\nvec3 Suelo0(vec2 p, vec3 col)\n{   vec2 q=p;\n    q.y+= 2.5;\n    col=DrawFig(vec3(0.85,0.58,0.0), col, abs(q.y)-4.5 );\n return col;\n}\n\nvec3 Suelo1(vec2 p, vec3 col)\n{   vec2 q=p;\n    q.y-= 0.5;\n    col=DrawFig(vec3(0.75,0.35,0.2)-p.y*0.15, col, abs(q.y)-1.5 );\n return col;\n}\n\nvec3 Suelo2(vec2 p, vec3 col)\n{   vec2 q=p;\n    q.y-= 0.5;\n    col=DrawFig(vec3(0.85,0.45,0.2), col, abs(q.y)-1.5 );\n return col;\n}  \n\nvec3 ramas(vec2 p, vec3 col, float escal)\n{\n   float d1= sdCircle(p- vec2(0.0,2.5), 1.5 );\n   float d2= sdCircle(p- vec2(2.0,3.5), 1.5 );\n   float d3= sdCircle(p- vec2(-2.0,4.0), 1.5 );\n   float d4= sdCircle(p- vec2(0.0,5.0), 1.5 );   \n   col=DrawFig(vec3(0.0,0.7,0.0)*escal, col, d1 );\n   col=DrawFig(vec3(0.0,0.7,0.0)*escal, col, d2 );\n   col=DrawFig(vec3(0.0,0.7,0.0)*escal, col, d3 );\n   col=DrawFig(vec3(0.0,0.7,0.0)*escal, col, d4 );\n   \n   return col;\n}\n\nvec3 Arbol(vec2 pp , vec3 col, float escal)\n{    vec2 p=pp;\n     float d1= sdBox(p, vec2(0.5,2.0) );\n     float d2=sdOrientedBox(p-vec2(0.0,-2.5), vec2(0.0), vec2(0.0,1.0), 0.5 );\n     p.x=abs(p.x)+0.2;\n     float d3=sdOrientedBox(p-vec2(0.0,-1.5), vec2(0.0,0.0), vec2(1.0,-0.8), 0.5 );\n     \n     col=DrawFig(vec3(0.45,0.15,0.0)*escal, col, d1);\n     col=DrawFig(vec3(0.45,0.15,0.0)*escal, col, d2);\n     col=DrawFig(vec3(0.45,0.15,0.0)*escal, col, d3);\n     p=pp;\n     col= ramas(p, col,escal);\n return col;\n}  \n\nvec3 Tronco(vec2 pp , vec3 col, float escal)\n{    vec2 p=pp;\n     float d1= sdBox(p, vec2(0.5,2.0) );\n     float d2=sdOrientedBox(p-vec2(0.0,-2.5), vec2(0.0), vec2(0.0,1.0), 0.5 );\n     p.x=abs(p.x)+0.2;\n     float d3=sdOrientedBox(p-vec2(0.0,-1.5), vec2(0.0,0.0), vec2(1.0,-0.8), 0.5 );\n\n     col=DrawFig(vec3(0.45,0.15,0.0)*escal, col, d1);\n     col=DrawFig(vec3(0.45,0.15,0.0)*escal, col, d2);\n     col=DrawFig(vec3(0.45,0.15,0.0)*escal, col, d3);\n return col;\n}  \n\nvec3 pac(vec2 pp, vec3 col)\n{    vec2 p=pp;\n    float d1cabeza= sdCircle(p, 2.0 );\n    float posOjoX=0.6;\n    float posOjoy=0.3;\n    float d1ojo1A= sdCircle(p-vec2(0.0-posOjoX,0.0+posOjoy), 0.6 );\n    float d1ojo1B= sdCircle(p-vec2(-0.2-posOjoX,-0.1+posOjoy), 0.7 );\n    float difOjo1= differenceSDF(d1ojo1A,d1ojo1B);\n\n    float d1ojo2A= sdCircle(p-vec2(0.0+posOjoX,0.0+posOjoy), 0.6 );\n    float d1ojo2B= sdCircle(p-vec2(-0.2+posOjoX,-0.1+posOjoy), 0.7 );\n    float difOjo2= differenceSDF(d1ojo2A,d1ojo2B);\n    \n    float pyo=0.3*sin(iTime);\n    float dojo1= sdVesica(p-vec2(-0.5,0.3+pyo), 0.4, 0.25);\n    float dojo2= sdVesica(p-vec2(0.7,0.3+pyo), 0.4, 0.25);\n    \n    float boca1A= sdCircle(p-vec2(0.0,0.0-1.1), 0.7 );\n    float boca1B= sdCircle(p-vec2(0.0,-0.3-1.1), 0.8 );\n    float difBoca= differenceSDF(boca1A,boca1B);\n    //pata\n    float pata1= sdOrientedBox( p-vec2(-1.0,-3.0), vec2(0.0,0.0),vec2(0.5,2.0), 0.25 );\n    float pata2= sdOrientedBox( p-vec2(1.0,-3.0), vec2(0.0,0.0),vec2(-0.5,2.0), 0.25 );\n    float zapato1= sdVesica(p.yx-vec2(-3.0,-1.0), 1.2, 1.0);\n    float zapato2= sdVesica(p.yx-vec2(-3.0,1.0), 1.2, 1.0);\n    float d1gorroA= sdCircle(p-vec2(0.0,1.5), 1.1 );\n    float d1gorroB= sdVesica(p.yx-vec2(2.0,1.0), 1.2, 1.0);\n    float dmano1= sdBox(p-vec2(-2.5,0.0),vec2(1.0,0.15) );\n    float dmano2= sdBox(p-vec2( 2.5,0.0),vec2(1.0,0.15) );    \n    col=DrawFig(vec3(0.0,0.0,0.0), col, pata1);\n    col=DrawFig(vec3(0.0,0.0,0.0), col, pata2);\n    col=DrawFig(vec3(1.0,0.0,0.0), col, d1gorroA);\n    col=DrawFig(vec3(.0,0.0,0.0), col, d1gorroB);\n    col=DrawFigBorde(vec3(0.0), col, dmano1);\n    col=DrawFigBorde(vec3(0.0), col, dmano2);\n    col=DrawFigBorde(vec3(1.0,1.0,0.0), col, d1cabeza);\n    col=DrawFig(vec3(0.0,0.0,0.0), col, difOjo1);\n    col=DrawFig(vec3(0.0,0.0,0.0), col, difOjo2);\n    \n    col=DrawFig(vec3(0.0,0.0,0.0), col, dojo1);\n    col=DrawFig(vec3(0.0,0.0,0.0), col, dojo2);\n    \n    col=DrawFig(vec3(0.0,0.0,0.0), col, difBoca);\n    col=DrawFigBorde(vec3(1.0), col, zapato1);\n    col=DrawFigBorde(vec3(1.0), col, zapato2);\n return col;\n}  \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    vec3  col=vec3(0.25,0.7,1.2)-uv.y*0.3;\n         uv*=6.0+sin(iTime);\n   \n   vec2 uv2=uv*6.0;\n   float t=iTime*2.0;\n   t=mod(t,20.0);\n   uv.x+=t;\n  uv2.x+=t;\n   \n   col=ondamar (uv-vec2(0.0,-3.0), col);\n   col=Suelo0(uv-vec2(0.0,-1.25), col);\n   \n   col=Suelo1(uv-vec2(0.0,-1.25), col);\n   col=Suelo2(uv-vec2(0.0,-3.5), col);\n   // atras  //arbol chico\n   col=Arbol(uv*2.0-vec2(6.0,1.5),col,0.8);\n   col=Arbol(uv*2.0-vec2(16.0,1.5),col,0.8);\n   col=Arbol(uv*2.0-vec2(25.0,1.5),col,0.8);\n   col=Arbol(uv*2.0-vec2(30.0,1.5),col,0.8);\n   \n   col=Arbol(uv-vec2(0.0,1.5),col,1.0);\n   col=Arbol(uv-vec2(6.0,1.5),col,1.0);\n   col=ramas(uv-vec2(10.0,1.5),col,1.0);\n   col=Arbol(uv-vec2(16.0,1.5),col,1.0);\n   col=ramas(uv-vec2(20.0,1.9),col,1.0);\n   \n   //troncos chicos\n  col=Tronco(uv*vec2(3.0,4.0)-vec2(12.0,-8.5),col,1.0);\n  col=Tronco(uv*vec2(3.0,4.0)-vec2(15.0,-7.5),col,1.0);\n  col=Tronco(uv*vec2(3.0,4.0)-vec2(30.0,-8.5),col,1.0);\n  col=Tronco(uv*vec2(3.0,4.0)-vec2(35.0,-7.5),col,1.0);\n  col=Tronco(uv*vec2(3.0,4.0)-vec2(60.0,-8.5),col,1.0);\n  col=Tronco(uv*vec2(3.0,4.0)-vec2(65.0,-7.5),col,1.0);\n  col= pac(uv, col);\n  col= pac(uv-vec2(25.0,0.0), col);\n  \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}