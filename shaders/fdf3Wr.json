{
    "Shader": {
        "info": {
            "date": "1615753677",
            "description": "2D Path Tracer :)",
            "flags": 32,
            "hasliked": 0,
            "id": "fdf3Wr",
            "likes": 16,
            "name": "2D Path Tracer :)",
            "published": 3,
            "tags": [
                "tracer",
                "path",
                "joke"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 531
        },
        "renderpass": [
            {
                "code": "const vec3 lightDiffuse = vec3(0.191553,0.267195,0.373984);\nconst vec3 lightSpecular = vec3(0.243903,1,0);\nconst vec3 lightDirection = vec3(0.08232,-0.24085,-0.58841);\nconst float specularPower = 20.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0,0,0,1);\n\t\n\tfloat e = 1.0 / iResolution.y;\n\tvec2 uv = fragCoord / iResolution.xy;\n\tfloat f = texture(iChannel0, uv).x;\n\tfloat fx = (f-texture(iChannel0, uv + vec2(e,0.0)).x)/e;\n\tfloat fy = (f-texture(iChannel0, uv + vec2(0.0,e)).x)/e;\n\tvec3 n = normalize(vec3(0,0,1) - vec3(fx,fy,0.0));\n\t\t\n\tfloat diff = max(dot(vec3(0,0,1), n), 0.0);\n\tfloat spec = pow(max(dot(normalize(lightDirection), \n            reflect(vec3(0,0,1),n)), 0.0), specularPower);\n\t\t\n    fragColor.rgb = lightDiffuse * diff + lightSpecular * spec; \n\tfragColor.rgb *= 1.5;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 getPath(int f)\n{\n    vec2 p;\n\tfloat fr = float(iFrame - f);\n    float an = fr / 360.0 * 6.28318;\n\tp.x = cos(an) - sin(an + fr * 0.01);\n\tp.y = sin(an + cos(an - fr * 0.01)) * cos(an);\n\tp *= 0.8;\n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\tvec2 uvc = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\tfloat pt = 0.05 / iResolution.x;\n\t\n\tvec2 p = getPath(0);\n\tvec2 lp = getPath(5);\n\t\n    // not remember where i found this line code, but its not mine :)\n\tvec2 a = uvc - lp, b = p - lp;\n\tfloat h = clamp(dot(a,b)/dot(b,b),0.,1.);\n\tvec2 pp = a-b*h;\n\tfloat m = pt / dot(pp, pp);\t// line\n\n\tfragColor = vec4(vec3(m), 1.0) * 0.01 + texture(iChannel0, uv) * 0.99;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}