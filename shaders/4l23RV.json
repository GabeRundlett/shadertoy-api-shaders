{
    "Shader": {
        "info": {
            "date": "1430470516",
            "description": "An onion I came up with while learning stuff",
            "flags": 0,
            "hasliked": 0,
            "id": "4l23RV",
            "likes": 2,
            "name": "Ethereal onion",
            "published": 3,
            "tags": [
                "happy",
                "onion"
            ],
            "usePreview": 0,
            "username": "Aj_",
            "viewed": 1227
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\n    \n    vec2 res = iResolution.xy/abs(2./sin(iTime/4.));\n\tvec2 position = ( (fragCoord.xy - vec2(iResolution.x/2., iResolution.y/2.)) / max(res.y, res.x)  ) ;\n\tmat2 rot;\n\tfloat ang = -45. * 0.0174532925;\n\trot[0] = vec2(cos(ang), -sin(ang));\n\trot[1] = vec2(sin(ang), cos(ang));\t\n\tposition*=rot;\n\tfloat x = position.x;\n\tfloat y = position.y;\n\tfloat u,t;\n\t\n\tfor(int i=0;i<60;i++) {\n\t\tu = x*y*y  - y*y+x +.008 ;\n\t\tt = y*x*x  - x*x+y +.008 ;\n\t\t\n\t\t\n\t\tx = u;\n\t\ty = t;\n\t\tif(dot(vec2(u,t), vec2(u,t))>.08) {\n\t\t\tbreak;\n\t\t}\n\t\t\n\t}\n\t\n\tvec3 color =  vec3((x*y))*100.;\n\n\tfragColor = vec4(vec3(color.x/8., color.y/4., color.z/4.), 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}