{
    "Shader": {
        "info": {
            "date": "1687722926",
            "description": "Based on the youtube video by Kishimisu",
            "flags": 0,
            "hasliked": 0,
            "id": "DsjcWD",
            "likes": 6,
            "name": "CheckerboardNeon",
            "published": 3,
            "tags": [
                "checkerboard",
                "rainbow",
                "neon"
            ],
            "usePreview": 0,
            "username": "Rayfbie",
            "viewed": 208
        },
        "renderpass": [
            {
                "code": "vec3 pallete(float t)\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.00, 0.33, 0.67);\n    \n    return a + b * cos(6.28318 * (c*t+d));\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy)/iResolution.y;\n        \n    float zoom = (0.8 + 0.2 * sin(iTime));\n    //uv *= zoom;\n        \n    float d = length(uv);\n    vec3 col = pallete(d);\n    \n    d = sin(d * 8.0 + iTime)/8.0;\n    d = abs(d);\n    d = 0.02 / d;\n    \n    \n    col *= d;\n\n    vec2 pos = floor(fragCoord / 10.0);\n    float pattern = mod(pos.x + mod(pos.y, 2.0), 2.0);\n    fragColor = zoom * (zoom * pattern * vec4(1.0, 1.0, 1.0, 1.0) + vec4(col, 1.0));\n    //fragColor = pattern * vec4(1.0, 1.0, 1.0, 1.0);\n    \n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    //fragColor = vec4(pos, 1.0,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}