{
    "Shader": {
        "info": {
            "date": "1708917306",
            "description": "feedback test",
            "flags": 32,
            "hasliked": 0,
            "id": "mdycR1",
            "likes": 2,
            "name": "Skamz Feedback Test",
            "published": 3,
            "tags": [
                "feedback"
            ],
            "usePreview": 0,
            "username": "maxpleaner",
            "viewed": 121
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 scaledUv = uv * 5.;\n\n    // Simulate movement of the static image by offsetting its UV coordinates over time\n    vec2 offset = vec2(sin(iTime * 0.5) * 0.5, cos(iTime * 0.5) * 0.5);\n    vec3 staticImage = texture(iChannel0, scaledUv + offset).xyz;\n\n    vec3 previousFrame = texture(iChannel1, uv).xyz; // Sample from the previous frame\n\n    // Blend the static image with the previous frame to create the smear effect\n    float blendFactor = 0.94; // Adjust this value to control the strength of the smear\n    vec3 blendedColor = mix(staticImage, previousFrame, blendFactor);\n\n    fragColor = vec4(blendedColor, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}