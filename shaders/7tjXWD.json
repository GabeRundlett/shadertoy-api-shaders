{
    "Shader": {
        "info": {
            "date": "1627740653",
            "description": "no nails",
            "flags": 0,
            "hasliked": 0,
            "id": "7tjXWD",
            "likes": 12,
            "name": "3D hand sketch",
            "published": 3,
            "tags": [
                "hand"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 304
        },
        "renderpass": [
            {
                "code": "// All the distance functions from:https://iquilezles.org/articles/distfunctions\n// raymarching based from https://www.shadertoy.com/view/wdGGz3\n#define USE_MOUSE 0\n#define MAX_STEPS 128\n#define MAX_DIST 128.\n#define SURF_DIST .0001\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define Box(p,s) max(max(abs(p).x-s.x,abs(p).y-s.y),abs(p).z-s.z)\n#define matRotateX(rad) mat3(1,0,0,0,cos(rad),-sin(rad),0,sin(rad),cos(rad))\n#define matRotateY(rad) mat3(cos(rad),0,-sin(rad),0,1,0,sin(rad),0,cos(rad))\n#define matRotateZ(rad) mat3(cos(rad),-sin(rad),0,sin(rad),cos(rad),0,0,0,1)\n\n#define MATERIAL_DIFFUSE0 0\n#define MATERIAL_DIFFUSE1 1\n#define MATERIAL_REFLECT 2\n\n// by Dave_Hoskins\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec2 combine(vec2 val1, vec2 val2){\n    vec2 res1 = val1;\n    vec2 res2 = val2;\n    return (val1.x < val2.x)?res1:res2;\n}\n\n// by iq https://iquilezles.org/articles/distfunctions\nfloat smin(float a, float b, float k) {\n    float h = clamp(.5 + .5*(b - a)/k, .0, 1.);\n    return mix(b, a, h) - k * h * (1. - h);\n}\n\n// by iq https://iquilezles.org/articles/distfunctions\nfloat smax( float d1, float d2, float k ) {\n    float h = clamp( 0.5 - 0.5*(d2+d1)/k, 0.0, 1.0 );\n    return mix( d2, -d1, h ) + k*h*(1.0-h);\n}\n\nfloat udRoundBox(vec3 p, vec3 b, float r) {\n    return length(max(abs(p)-b, .0)) -r;\n}\n\n// by reinder https://www.shadertoy.com/view/4tdcWS\n// This one is super fast.\nfloat sdCapsule(vec3 p, vec3 a, vec3 b, const float r0, const float r1) {\n    vec3 d = b -a;\n    float h = length(d);\n    d = normalize(d);\n    float t=clamp(dot(p-a, d), 0., h);\n    return distance(a+t*d, p) -mix(r0, r1, t/h);\n}\n\nfloat dHand(vec3 p){\n    vec3 prevP = p;\n    \n    const float k = 1.1;\n    float c = cos(k*p.x);\n    float s = sin(k*p.x);\n    mat2  m = mat2(c,-s,s,c);\n    vec3  q = vec3(0.0);    \n    q.y = p.y;\n    q.xz=m*p.xz;\n    \n    float d = udRoundBox(q-vec3(0.01,0.05,0.0),vec3(0.1,0.05,0.001),0.04);\n    d = smin(d,udRoundBox(p-vec3(0.005,-0.02,0.01),vec3(0.09,0.02,0.0001),0.035),0.03);\n    d = smin(d,udRoundBox(p-vec3(0.0,-0.1,0.0),vec3(0.065,0.02,0.0001),0.035),0.03);\n    \n    // palm\n    float d2 = sdCapsule(q,vec3(0.13,0.05,0.0425),vec3(-0.03,0.09,0.045),0.005,0.001);\n    d = smax(d2,d,0.01);\n    d2 = sdCapsule(q,vec3(0.03,0.03,0.05),vec3(-0.13,0.06,0.0425),0.001,0.005);\n    d = smax(d2,d,0.01);\n    d2 = sdCapsule(q,vec3(0.00,-0.1,0.045),vec3(-0.04,0.01,0.06),0.005,0.001);\n    d = smax(d2,d,0.01);\n    \n    p = prevP;\n    \n    // pinky\n    d = smin(d,sdCapsule(p,vec3(0.13,0.15,0.0),vec3(0.15,0.18,0.0),0.035,0.03),0.03);\n    d = smin(d,sdCapsule(p,vec3(0.15,0.18,0.0),vec3(0.165,0.22,0.01),0.03,0.027),0.005);\n    d = smin(d,sdCapsule(p,vec3(0.165,0.22,0.01),vec3(0.175,0.26,0.03),0.028,0.025),0.005);\n    \n    // ring\n    d = smin(d,sdCapsule(p,vec3(0.06,0.15,0.0),vec3(0.07,0.21,0.0),0.035,0.03),0.01);\n    d = smin(d,sdCapsule(p,vec3(0.07,0.21,0.0),vec3(0.085,0.27,0.01),0.03,0.027),0.005);\n    d = smin(d,sdCapsule(p,vec3(0.085,0.27,0.01),vec3(0.095,0.33,0.03),0.028,0.025),0.005);\n    \n    // middle\n    d = smin(d,sdCapsule(p,vec3(-0.015,0.15,0.0),vec3(-0.015,0.22,-0.01),0.035,0.03),0.02);\n    d = smin(d,sdCapsule(p,vec3(-0.015,0.22,-0.01),vec3(-0.015,0.29,0.00),0.03,0.027),0.005);\n    d = smin(d,sdCapsule(p,vec3(-0.015,0.29,0.00),vec3(-0.015,0.36,0.02),0.028,0.025),0.005);\n    \n    // index\n    d = smin(d,sdCapsule(p,vec3(-0.09,0.15,0.0),vec3(-0.105,0.21,0.0),0.035,0.03),0.03);\n    d = smin(d,sdCapsule(p,vec3(-0.105,0.21,0.0),vec3(-0.12,0.26,0.01),0.03,0.027),0.005);\n    d = smin(d,sdCapsule(p,vec3(-0.12,0.26,0.01),vec3(-0.13,0.32,0.03),0.028,0.025),0.005);   \n    \n    // thumb\n    d = smin(d,sdCapsule(p,vec3(-0.08,-0.03,0.0),vec3(-0.13,0.02,0.0),0.035,0.037),0.035);\n    d = smin(d,sdCapsule(p,vec3(-0.13,0.02,0.0),vec3(-0.17,0.09,0.01),0.037,0.032),0.005);\n    d = smin(d,sdCapsule(p,vec3(-0.17,0.09,0.01),vec3(-0.19,0.15,0.02),0.032,0.03),0.005);\n    \n    // knuckles\n    d = smin(d,sdCapsule(p,vec3(0.12,0.12,-0.027),vec3(0.08,0.0,-0.02),0.01,0.005),0.03);\n    d = smin(d,sdCapsule(p,vec3(0.05,0.13,-0.03),vec3(0.03,0.0,-0.02),0.01,0.005),0.03);\n    d = smin(d,sdCapsule(p,vec3(-0.015,0.13,-0.03),vec3(-0.015,0.0,-0.02),0.01,0.005),0.03);\n    d = smin(d,sdCapsule(p,vec3(-0.09,0.12,-0.03),vec3(-0.07,0.0,-0.02),0.01,0.005),0.03);\n    return d;\n}\n\nvec2 GetDist(vec3 p) {\n    vec3 prevP = p;\n    p.x = abs(p.x);\n    p.x-=0.3;\n    float d = dHand(p);\n    \n    p = prevP;\n    p.y+=0.15;\n    float d2 = Box(p,vec3(1.2,0.01,1.2));\n    \n    vec2 res = vec2(d, MATERIAL_DIFFUSE0);\n    vec2 res2 = vec2(d2, MATERIAL_DIFFUSE1);\n       \n    vec2 model = combine(res,res2);\n    return model;\n}\n\nvec2 RayMarch(vec3 ro, vec3 rd, float side) {\n    vec2 dO = vec2(0.0);\n    for(int i=0; i<MAX_STEPS; i++) {\n        vec3 p = ro + rd*dO.x;\n        vec2 dS = GetDist(p);\n        dO.x += dS.x*side;\n        dO.y = dS.y;\n        \n        if(dO.x>MAX_DIST || abs(dS.x)<SURF_DIST) break;\n    }\n   \n    return dO;\n}\n\nvec3 GetNormal(vec3 p) {\n    float d = GetDist(p).x;\n    vec2 e = vec2(.001, 0);\n   \n    vec3 n = d - vec3(\n        GetDist(p-e.xyy).x,\n        GetDist(p-e.yxy).x,\n        GetDist(p-e.yyx).x);\n   \n    return normalize(n);\n}\n\nvec3 R(vec2 uv, vec3 p, vec3 l, float z) {\n    vec3 f = normalize(l-p),\n        r = normalize(cross(vec3(0,1,0), f)),\n        u = cross(f,r),\n        c = p+f*z,\n        i = c + uv.x*r + uv.y*u,\n        d = normalize(i-p);\n    return d;\n}\n\nvec3 diffuseMaterial(vec3 n, vec3 col) {\n    vec3 lightDir = normalize(vec3(0.8,0.4,0.2));\n    float diff = dot(n,normalize(lightDir))*0.5+0.5;\n    float bounceDiff = clamp(0.5+0.5*dot(n,vec3(0,-1,0)),0.0,1.0);\n    \n    vec3 res = col*(diff);\n    res += col*bounceDiff*0.5;    \n    \n    return res;\n}\n\nvec3 reflectMaterial(vec3 p, vec3 rd, vec3 n) {\n    vec3 r = reflect(rd,n);\n    \n    vec3 col = r;\n    \n    float k = r.y*r.y;\n    col = mix(col,vec3(1.5),k);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 m = iMouse.xy/iResolution.xy;\n   \n    vec3 ro = vec3(0, 0, -3.5);\n    #if USE_MOUSE == 1\n    ro.yz *= Rot(-m.y*3.14+1.);\n    ro.xz *= Rot(-m.x*6.2831);\n    #else\n    ro.yz *= Rot(radians(10.0));\n    ro.xz *= Rot(-iTime*.5+1.0);\n    \n    #endif\n   \n    vec3 rd = R(uv, ro, vec3(0,0.2,0), 3.0);\n    vec2 d = RayMarch(ro, rd, 1.);\n    vec3 col = vec3(0.0);\n    \n    if(d.x<MAX_DIST) {\n        vec3 p = ro + rd * d.x;\n        vec3 n = GetNormal(p);\n\n        int mat = int(d.y);\n        if(mat == MATERIAL_DIFFUSE0){\n            float h = hash12(p.xz*5.0)*0.05;\n            col = diffuseMaterial(n,vec3(0.95)+h);\n        } else if(mat == MATERIAL_DIFFUSE1) {\n            p.x = abs(p.x);\n            p.x-=0.3;\n            float fakeShadow = length(p.xz)-0.3;\n            col = diffuseMaterial(n,mix(vec3(0.9),vec3(0.2),S(fakeShadow,-0.5)));\n        } else if(mat == MATERIAL_REFLECT) {\n            col = reflectMaterial(p,rd,n);\n        }\n        \n    }\n   \n    // gamma correction\n    col = pow( col, vec3(0.6545) );\n   \n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}