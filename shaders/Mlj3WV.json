{
    "Shader": {
        "info": {
            "date": "1432723892",
            "description": "A simple 2D LED Spectrum analyser visualisation, based on Led Spectrum Analyser by: simesgreen\n\nMade to work in Kodi shadertoy addon https://github.com/topfs2/visualization.shadertoy/pull/3",
            "flags": 0,
            "hasliked": 0,
            "id": "Mlj3WV",
            "likes": 87,
            "name": "2D LED Spectrum - Visualiser",
            "published": 3,
            "tags": [
                "2d",
                "spectrum",
                "audio",
                "visualisation",
                "analyser"
            ],
            "usePreview": 0,
            "username": "uNiversal",
            "viewed": 26529
        },
        "renderpass": [
            {
                "code": "/*\n2D LED Spectrum - Visualiser\nBased on Led Spectrum Analyser by: simesgreen - 27th February, 2013 https://www.shadertoy.com/view/Msl3zr\n2D LED Spectrum by: uNiversal - 27th May, 2015\nCreative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // create pixel coordinates\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // quantize coordinates\n    const float bands = 30.0;\n    const float segs = 40.0;\n    vec2 p;\n    p.x = floor(uv.x*bands)/bands;\n    p.y = floor(uv.y*segs)/segs;\n\n    // read frequency data from first row of texture\n    float fft  = texture( iChannel0, vec2(p.x,0.0) ).x;\n\n    // led color\n    vec3 color = mix(vec3(0.0, 2.0, 0.0), vec3(2.0, 0.0, 0.0), sqrt(uv.y));\n\n    // mask for bar graph\n    float mask = (p.y < fft) ? 1.0 : 0.1;\n\n    // led shape\n    vec2 d = fract((uv - p) *vec2(bands, segs)) - 0.5;\n    float led = smoothstep(0.5, 0.35, abs(d.x)) *\n                smoothstep(0.5, 0.35, abs(d.y));\n    vec3 ledColor = led*color*mask;\n\n    // output final color\n    fragColor = vec4(ledColor, 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 19,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}