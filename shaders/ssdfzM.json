{
    "Shader": {
        "info": {
            "date": "1656287100",
            "description": "I don't feel like doing to much work, so I made this, because I am lazy. TUT ( I CANT HELP IT! I AM TOOOOOOOO LAZY! DX)",
            "flags": 64,
            "hasliked": 0,
            "id": "ssdfzM",
            "likes": 1,
            "name": "Lazy-Lazy!",
            "published": 3,
            "tags": [
                "lazywork"
            ],
            "usePreview": 0,
            "username": "JTAS_GANG_TV",
            "viewed": 206
        },
        "renderpass": [
            {
                "code": "// Create your own shader using GLSL Shader Language!\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float dy = 5.0 / iResolution.y;\n    // xy is LR Frequency domain data\n    vec2 fv = texture(iChannel0, vec2(uv.x, 0.5)).xy;\n    // zw is LR Time domain data\n    vec2 tv = texture(iChannel0, vec2(uv.x, 0.5)).zw;\n    vec3 col = vec3(0.);\n\n    // Time domain data\n    if (!(uv.y + dy < tv.x) && (uv.y - dy < tv.x)) {\n        // Color the pixel that crosses the time domain sample value\n        col += 100.;\n    }\n    \n    // Frequency domain data\n    if (uv.y < fv.x) {\n        col.gb += fv.x + 0.4;\n    }\n\n    fragColor = vec4(col,5);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 29227,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/jason-alvarado-26743508/circle-tales-ost-main-theme"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}