{
    "Shader": {
        "info": {
            "date": "1668039000",
            "description": "Squirmles - It's the Magical Pet.\n\nalso Truchets and Bayer textures are so hot right now.. ",
            "flags": 0,
            "hasliked": 0,
            "id": "dsfGzj",
            "likes": 35,
            "name": "Squirmle Truchet",
            "published": 3,
            "tags": [
                "hextruchetplay"
            ],
            "usePreview": 0,
            "username": "byt3_m3chanic",
            "viewed": 322
        },
        "renderpass": [
            {
                "code": "/** \n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n    \n    Reminds me of Squirmles - using bayer again to make some dithered animation\n    on the truchet tiles.. \n    \n    11/09/22 @byt3_m3chanic \n*/\n\n#define R          iResolution\n#define M          iMouse\n#define T          iTime\n\n#define PI         3.14159265359\n#define PI2        6.28318530718\n#define SQ3        1.732\n\nmat2 rot(float a){return mat2(cos(a),sin(a),-sin(a),cos(a));}\nfloat hash21(vec2 p){return fract(sin(dot(p, vec2(27.609, 57.583)))*43758.5453);}\n\n//@iq hsv2rgb\nvec3 hsv2rgb( in vec3 c ) {\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n//@Shane\nvec4 hexGrid(vec2 uv, float scale){\n    uv*=scale;\n    const vec2 s = vec2(SQ3, 1.);\n    vec4 hC = floor(vec4(uv, uv - vec2(1, .5))/s.xyxy) + .5;\n    vec4 h4 = vec4(uv - hC.xy*s, uv - (hC.zw + .5)*s);\n    return dot(h4.xy, h4.xy) < dot(h4.zw, h4.zw) ? vec4(h4.xy, hC.xy) : vec4(h4.zw, hC.zw + .5);\n}\n\nfloat box( in vec2 p, in vec2 b ){\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nconst float scale = 11.;\nvoid mainImage( out vec4 O, in vec2 F )\n{\n    vec3 C = vec3(0);\n    \n    vec2 uv = F.xy/max(R.x,R.y);\n    uv-=vec2(T*.01,T*.05);\n    vec2 vuv=uv;\n    \n    float px = scale/R.x;\n    vec4 hex = hexGrid(uv,scale);\n\n    vec2 id = hex.zw;\n    vec2 p  = hex.xy;\n    \n    float check = mod(id.y + id.x,2.) * 2. - 1.;\n    float rnd = hash21(id);\n    float dir =  -1.;\n    \n    if(rnd>.5) {\n        p *= rot(1.0471975512);\n        p.y=-p.y;\n    } \n    \n    float rdx = .2885;\n    \n    // set vectors\n    vec2 p0 = p - vec2(-.5/SQ3, .5);\n    vec2 p1 = p - vec2(.8660254*2./3., 0);\n    vec2 p2 = p - vec2(-.5/SQ3, -.5);\n    \n    // find closest point\n    vec3 d3 = vec3(length(p0), length(p1), length(p2));\n    vec2 pp = vec2(0);\n\n    if(d3.x>d3.y) pp = p1;\n    if(d3.y>d3.z) pp = p2;\n    if(d3.z>d3.x && d3.y>d3.x) pp = p0;\n\n    float wrp = sin(T+(vuv.x+vuv.y)*10.);\n    // draw truchet path\n    float circle = length(pp)-rdx;\n    circle=abs(circle)-(.14+.080*wrp);//.15;\n    \n    float cntr = circle;\n    float cntrsdo = circle;\n    cntrsdo = smoothstep(.1-px,px,cntrsdo);\n    cntr = smoothstep(px,-px,cntr);\n    \n    circle=abs(circle)-.0075;\n    circle=smoothstep(px,-px,circle);\n    float amt = 12.;\n\n    // hex background\n    float tileform = max(abs(hex.x)*.8660254 + abs(hex.y)*.5, abs(hex.y)) - .5;\n    float edges = abs(abs(tileform)-.025)-.015;\n    edges=smoothstep(px,-px, edges);\n    float cells=smoothstep(px,-px, tileform);\n\n    //animation\n    d3 = abs(d3 - SQ3/6.) - .125;\n    vec3 a3=vec3(atan(p0.x, p0.y),atan(p1.x, p1.y),atan(p2.x, p2.y));\n    \n    vec2 da = vec2(0);\n    if(d3.x>d3.y) da = vec2(d3.y, a3.y);\n    if(d3.y>d3.z) da = vec2(d3.z, a3.z);\n    if(d3.z>d3.x && d3.y>d3.x) da = vec2(d3.x, a3.x);\n    \n    //speed\n    float speed = texture(iChannel1,(F/8.)).r - (T*2.);\n    \n    float d = length(pp);\n    float pathMotion = 200.+da.y/ PI2* (amt) + speed;\n    \n    float x =fract(pathMotion) - .5;\n    float y = d-rdx;\n\n    vec2 cid = vec2(floor(x),floor(pathMotion)-.5);\n    cid=mod(cid,4.);\n\n    //vector and compress coords\n    vec2 tu = vec2(x,y)*vec2(3,10.);\n\n    float path = box(tu,vec2(1.5,1.1+.75*wrp));\n    path=smoothstep(px,-px,path);\n\n    //mixdowns and stuff\n    vec3 topHue = hsv2rgb(vec3(cid.y*PI2,1.,.6)).xxx;\n    float cut = min(cells,1.-cntr);\n    \n\n    C = rnd>.7? vec3(.5):vec3(.05);\n    C = mix(C, vec3(.9), cntr);\n    C = mix(C, vec3(.05),cntrsdo);\n\n    C = mix(C, topHue,path);\n    C = mix(C, vec3(.0),min(cut,edges));\n    C = mix(C, vec3(.85),circle); \n       \n    //output\n    O = vec4(pow(C,vec3(.4545)),1.0);\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}