{
    "Shader": {
        "info": {
            "date": "1663944534",
            "description": "Procedural flame doodle. ",
            "flags": 0,
            "hasliked": 0,
            "id": "slVBRR",
            "likes": 7,
            "name": "Lighter flame",
            "published": 3,
            "tags": [
                "flame",
                "fire"
            ],
            "usePreview": 0,
            "username": "DrTone",
            "viewed": 319
        },
        "renderpass": [
            {
                "code": "\nmat2 rotz(float angle)\n{\n    mat2 m;\n    m[0][0] = cos(angle); m[0][1] = -sin(angle);\n    m[1][0] = sin(angle); m[1][1] = cos(angle);\n    return m;\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n\nfloat fbm(vec2 uv)\n{\n    float n = (texture(iChannel1, uv).r - 0.5) * 0.5;\n    n += (texture(iChannel1, uv * 2.0).r - 0.5) * 0.5 * 0.5;\n    n += (texture(iChannel1, uv * 3.0).r - 0.5) * 0.5 * 0.5 * 0.5;\n    \n\treturn n + 0.5;\n}\n\n\n// -----------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 _uv = uv;\n    uv -= vec2(0.5);\n    vec2 centerUV = uv;\n    \n    // height variation from fbm\n    float heightScale = 0.85;\n    float variationH = fbm(vec2(iTime * .3)) * heightScale;\n    \n    // flame \"speed\"\n    float speedScale = 0.05;\n    vec2 offset = vec2(1.9, -iTime * speedScale);\n    \n    // flame turbulence\n    float f = fbm(uv * 0.02 + offset); // rotation from fbm\n    float l = max(0.07, length(uv)); // rotation amount normalized over distance\n\tuv += rotz( ((f - 0.5) / l) * smoothstep(-0.3, .9, _uv.y) * 0.18) * uv;    \n    \n    // flame thickness\n    float thickNess = 1.9;\n    float flame = thickNess - length(uv.x) * 9.0;\n    \n    // bottom of flame \n    float blueHeight = 0.10;\n    float blueflame = pow(flame * .9, 15.0);\n    blueflame *= smoothstep(blueHeight, -1.0, _uv.y);\n    blueflame /= abs(uv.x * 2.0);\n    blueflame = clamp(blueflame, 0.0, 1.0);\n    \n    // flame\n    flame *= smoothstep(1., variationH * 0.5, _uv.y);\n\tflame = clamp(flame, 0.0, 1.0);\n    flame = pow(flame, 3.);\n    flame /= smoothstep(1.1, -0.1, _uv.y);    \n\t\n    // colors\n    vec4 col = mix(vec4(1.0, 1., 0.0, 0.0), vec4(1.0, 1.0, .6, 0.0), flame);\n    col = mix(vec4(1.0, .0, 0.0, 0.0), col, smoothstep(0.0, 1.6, flame));\n    fragColor = col;\n    \n\t// a bit blueness on the bottom\n    float blueOpacity = 0.75;\n    vec4 bluecolor = mix(vec4(0.0, 0.0, 0.19, 0.0), fragColor, blueOpacity);\n    fragColor = mix(fragColor, bluecolor, blueflame);\n    \n    // clear bg outside of the flame\n    fragColor *= flame;\n    fragColor.a = flame;\n    \n    // bg halo\n    float haloSize = 0.5;\n    float centerL = 1.0 - (length(centerUV + vec2(0.0, 0.1)) / haloSize);\n    vec4 halo = vec4(.8, .3, .3, 0.0) * 1.0 * fbm(vec2(iTime * 0.035)) * centerL + 0.02;\n    vec4 finalCol = mix(halo, fragColor, fragColor.a);\n    fragColor = finalCol;\n\n    // just a hint of noise\n    fragColor *= mix(rand(uv) + rand(uv * .45), 1.0, 0.9);\n    fragColor = clamp(fragColor, 0.0, 1.0);\n    \n    \n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}