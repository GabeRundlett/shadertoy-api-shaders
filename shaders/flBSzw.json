{
    "Shader": {
        "info": {
            "date": "1627285346",
            "description": "A little fractaly doodle to pass some time.",
            "flags": 0,
            "hasliked": 0,
            "id": "flBSzw",
            "likes": 43,
            "name": "Fractal Pattern Doodle",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "doodle"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 1574
        },
        "renderpass": [
            {
                "code": "// Cole Peterson\n\n#define R iResolution.xy\n#define m ( iMouse.xy - .5*R ) / R.y\n#define ss(a, b, t) smoothstep(a, b, t)\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    float t = iTime*.25 - 1.5;\n    \n    vec2 uv = vec2( u - .5*R ) / R.y;\n    uv += vec2(t, t*.2 - .4);\n    \n    if(iMouse.z > 0.)\n        uv += m*5.;\n    \n    uv = (uv + vec2(-uv.y,uv.x) ) / 1.41;\n    uv = fract(uv * .35) - .5;\n    uv = abs(uv);\n    \n    vec2 v = vec2(cos(.09), sin(.09));\n    float dp = dot(uv, v);\n    uv -= v*max(0., dp)*2.;\n    \n    float w = 0.;\n    for(float i = 0.; i < 27.;i++){\n        uv *= 1.23;\n        uv = abs(uv);\n    \tuv -= 0.36;\n    \tuv -= v*min(0., dot(uv, v))*2.;\n        uv.y += cos(uv.x*45.)*.007;\n        w += dot(uv, uv);\n    }\n    \n    float n = (w*12. + dp*15.);\n    vec3 col = 1. - (.6 + .6*cos(vec3(.45, 0.6, .81) * n + vec3(-.6, .3, -.6)));\n    \n    col *= max(ss(.0, .11, abs(uv.y*.4)), .8);\n    col = pow(col * 1.2, vec3(1.6));\n    f = vec4(1.-exp(-col), 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}