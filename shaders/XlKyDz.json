{
    "Shader": {
        "info": {
            "date": "1535818223",
            "description": "Voronoi Experiment 17",
            "flags": 32,
            "hasliked": 0,
            "id": "XlKyDz",
            "likes": 20,
            "name": "Voronoi Experiment 17",
            "published": 3,
            "tags": [
                "voronoi",
                "experiment",
                "17"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 1923
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - @Aiekick/2018\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat cell(vec2 fragCoord, vec2 pixel)\n{\n    if (fragCoord.x + pixel.x > iResolution.x) fragCoord.x = iResolution.x;\n    if (fragCoord.y + pixel.y > iResolution.y) fragCoord.y = iResolution.y;\n    if (fragCoord.x + pixel.x < 0.0) fragCoord.x = 0.;\n    if (fragCoord.y + pixel.y < 0.0) fragCoord.y = 0.;\n    \n\tvec2 uv = (fragCoord + pixel)/iResolution.xy;\n    \n    return texture(iChannel0, uv).r;\n}\n\nvoid mainImage( out vec4 c, vec2 g )\n{\n\tvec2 v = g / iResolution.xy;\n\t\n    vec3 p = vec3(v, texture(iChannel0, v)*0.1);\n    vec3 lp = vec3(v, -1.);\n \n\tfloat norPrec = iResolution.y * 0.1;\n\t\n\tvec2 e = vec2(norPrec,0);\n\tfloat nx = cell(g, e.xy) - cell(g, -e.xy);\n\tfloat ny = cell(g, e.yx) - cell(g, -e.yx);\n\tvec3 n = normalize(vec3(nx, ny, -1.));\n\tvec3 rd = normalize(vec3(0,0,1));\n\t\n\tvec3 ld = lp - p;\n\tfloat len = length(ld) + 0.00001;\n\tld /= len;\n    \n    float diff = max(dot(n, ld), 0.);\n    \n    float spec = pow(max(dot( reflect(-ld, n), rd), 0.), 16.);   \n\tfloat spec2 = pow(max(dot( reflect(-ld, n), -rd), 0.), 5.);   \n\t\n    float id = floor(diff/(spec+0.3));\n    \n    c = mix(vec4(0.2,0.5,0.8,1), vec4(1,0.5,0.2,1), vec4(id*0.5));\n    \n    c *= (diff + spec + spec2)/(len * 0.6);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Created by Stephane Cuillerdier - @Aiekick/2018\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// https://iquilezles.org/articles/smin\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nvoid mainImage( out vec4 c, vec2 g )\n{\n\tvec2 v = g / iResolution.y;\n    vec2 p = g /= iResolution.y / 5., kp;\n\t\n\tg += iTime * .5;\n\t\n    float d = 9., kd = d;\n    \n    for(int x=-3;x<=3;x++)\n    for(int y=-3;y<=3;y++)\n    {\t\n        vec2 p = vec2(x,y);\n        vec2 id = fract(sin((floor(g)+p)*mat2(2,5,5,2)));\n        vec2 an = sin( iTime * vec2(1,.5) + 9. * id );\n\t\tp += .5 + .35*an - fract(g);\n        p *= mat2(cos(an.x),-sin(an.x),sin(an.x),cos(an.x)) * cos(an.y*1.5) * 5.;\n        p *= 5.;\n        \n        d = smin(d, dot(p,p), 7.5);\n\t\t\n\t\tif (d < kd)\n\t\t{\n\t\t\tkd = d;\n            kp = p;\n\t\t}\n    }\n\n\tc = vec4(kd);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}