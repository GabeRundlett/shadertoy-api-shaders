{
    "Shader": {
        "info": {
            "date": "1543676830",
            "description": "TokyoDemoFest 2018 Combined Graphics Compo 4th place.",
            "flags": 0,
            "hasliked": 0,
            "id": "MtVBzt",
            "likes": 5,
            "name": "[TDF2018]Tokyo Demo Fest 2018",
            "published": 3,
            "tags": [
                "2d",
                "tdf"
            ],
            "usePreview": 0,
            "username": "kaneta",
            "viewed": 677
        },
        "renderpass": [
            {
                "code": "float box( vec3 p, vec3 b )\n{\n    vec3 d = abs(p) - b;\n    return length(max(d,0.0))\n               + min(max(d.x,max(d.y,d.z)),0.0); // remove this line for an only partially signed sdf \n}\n\nfloat roundBox( vec3 p, vec3 b, float r )\n{\n    vec3 d = abs(p) - b;\n    return length(max(d,0.0)) - r\n               + min(max(d.x,max(d.y,d.z)),0.0); // remove this line for an only partially signed sdf \n}\n\nfloat prism( vec3 p, vec3 b , float topWidth)\n{\n    b.x = mix(topWidth, mix(b.x, topWidth, clamp((p.y + b.y) / (b.y * 2.0), 0.0, 1.0)), step(0.0, p.x));\n    return box(p, b);\n}\n\nfloat _M(vec3 p)\n{\n    float tw = 0.4;\n    vec3 b = vec3(1.1, 1.0, .1);\n    p.x = abs(p.x);\n    p.x -= 0.9;\n    p.x = -p.x;\n    float d = prism(p, b, tw);\n    float d2 = prism(p + vec3(-0.05, 0.65, 0.), b * vec3(0.9, 1.2, 3.6), tw * 0.2);\n    return max(-d2, d);\n}\n\nfloat _K(vec3 p)\n{\n    float tw = 0.4;\n    vec3 b = vec3(1.6, 0.65, .1);\n    p.y = abs(p.y);\n    p.y -= 0.35;\n    p.y = -p.y;\n    float d = prism(p, b, tw);\n    float d2 = prism(p + vec3(-0.15, 0.65, 0.), b * vec3(0.95, 1.2, 3.6), tw * 0.4);\n    return max(-d2, d);\n}\n\nfloat _E(vec3 p)\n{\n    vec3 b = vec3(0.8, 0.6, .1);\n    p.y = abs(p.y);\n    p.y -= 0.4;\n    float d = box(p, b);\n    float d2 = box(p + vec3(-0.375, 0.0, 0.), b * vec3(1.0, 0.35, 111.6));\n    return max(-d2, d);\n}\n\nfloat _O(vec3 p)\n{\n    vec3 b = vec3(0.65, 0.65, .1);\n    float d = roundBox(p, b, 0.35);\n    float d2 = roundBox(p, b * vec3(0.65, 0.55, 111.6), 0.2);\n    return max(-d2, d);\n}\n\nfloat _D(vec3 p)\n{\n    float cond = step(0.0, p.x);\n    float invCond = 1. - cond;\n    vec3 b = vec3(vec2(0.65 + 0.35 * invCond), .1);\n    float d = roundBox(p, b, 0.35 * cond);\n    float d2 = roundBox(p, b * vec3(0.65, 0.57, 111.6), 0.2 * cond);\n    return max(-d2, d);\n}\n\nfloat _T(vec3 p)\n{\n    float d = box(p + vec3(0.0, -0.8, 0.0), vec3(0.9, 0.21, .1));\n    float d2 = box(p, vec3(0.21, 1.0, .1));\n    return min(d2, d);\n}\n\nfloat _Y(vec3 p)\n{   \n    p.x = abs(p.x) - 0.1;\n    p.x -= p.y * 0.65 * step(0.0, p.y);\n    float d = box(p, vec3(mix(0.25, 0.1, clamp(-p.y / 0.25, 0.0, 1.0)), 1.0, .1));\n    return d;\n}\n\nfloat _F(vec3 p)\n{\n    float d = box(p + vec3(0.0, -0.82, 0.0), vec3(0.8, 0.19, .1));\n    float d2 = box(p + vec3(0.6, 0.0, 0.0), vec3(0.21, 1.0, .1));\n    float d3 = box(p + vec3(0.0, 0.07, 0.0), vec3(0.7, 0.19, .1));\n    return min(min(d2, d), d3);\n}\n\nfloat _S(vec3 p)\n{\n    p.x *= sign(p.y);\n    return _E(p);\n}\n\n\nfloat TokyoDemoFest(vec3 p)\n{\n    float d = 99999.9;\n    d = min(d, _M(p));\n    d = min(d, _K(p - vec3(-11.8, 0.0, 0.0)));\n    \n    vec3 ep = abs(p - vec3(2.05, 0.0, 0.0));\n    float es = sign(p.x - 2.05);\n    ep.x = (ep.x - 4.5) * es;\n    d = min(d, _E(ep));\n\n    vec3 op = abs(p + vec3(10.2, 0.0, 0.0));\n    op.x = (op.x - 3.35);\n    d = min(d, _O(op));\n    \n    d = min(d, _D(p + vec3(4.55, 0.0, 0.0)));\n    d = min(d, _O(p + vec3(-2.62, 0.0, 0.0)));\n    \n    vec3 tp = p + vec3(2.6, 0.0, 0.0);\n    tp.x = (abs(tp.x) - 13.1);\n    d = min(d, _T(tp));\n    \n    d = min(d, _Y(p + vec3(9., 0.0, 0.0)));\n    \n    d = min(d, _F(p + vec3(-4.75, 0.0, 0.0)));\n    \n    d = min(d, _S(p + vec3(-8.5, 0.0, 0.0)));\n    return d;\n}\n\nfloat triPrism( vec3 p, vec2 h )\n{\n    vec3 q = abs(p);\n    return max(q.z-h.y,max(q.x*0.866025+p.y*0.5,-p.y)-h.x*0.5);\n}\n\nfloat Logo1(vec3 p)\n{\n    float d = 99999.9;\n    d = min(d, triPrism((p + vec3(2.75, -8.0, 0.0)) * vec3(0.76, 1.0, 1.0), vec2(11.45, 0.0)));\n    d = min(d, triPrism((p + vec3(-11.6, -13.8, 0.0)) * vec3(0.76, -1.0, 1.0), vec2(11.45, 0.0)));\n    d = min(d, triPrism((p + vec3(16.9, -13.8, 0.0)) * vec3(0.76, -1.0, 1.0), vec2(11.45, 0.0)));\n    return d;\n}\n\n\nfloat Logo2(vec3 p)\n{\n    float d = 99999.9;\n    d = min(d, triPrism((p + vec3(5.7, -10.05, 0.0)) * vec3(0.76, 1.0, 1.0), vec2(6.85, 0.0)));\n    d = min(d, triPrism((p + vec3(-17.0, -10.8, 0.0)) * vec3(0.76, -1.0, 1.0), vec2(8.45, 0.0)));\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    p *= 12.5 * 1.33333333;\n    p+= vec2(-1.55, 9.5);\n\n    float tdf = 1.0 - smoothstep(0.0, 0.1, TokyoDemoFest(vec3(p, 0.0)));\n    \n    float logo1 = 1.0 - smoothstep(0.0, 0.1, Logo1(vec3(p, 0.0)));\n    float logo2 = 1.0 - smoothstep(0.0, 0.1, Logo2(vec3(p, 0.0)));\n    vec3 col = mix(vec3(1.0), vec3(0.85, 0.35, 0.35), tdf);\n    col = mix(col, vec3(0.23), logo1);\n    col = mix(col, vec3(0.85, 0.35, 0.35), logo2);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}