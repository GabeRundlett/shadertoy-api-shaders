{
    "Shader": {
        "info": {
            "date": "1648486988",
            "description": "3D step^2 Euler Spirals",
            "flags": 8,
            "hasliked": 0,
            "id": "7lsczf",
            "likes": 20,
            "name": "Self-aware Hairball",
            "published": 3,
            "tags": [
                "eulerspiral"
            ],
            "usePreview": 0,
            "username": "eiffie",
            "viewed": 403
        },
        "renderpass": [
            {
                "code": "//Self-aware Hairballs by eiffie (Euler Spirals, 3D, power 2 version)\n//If you're interested in the formula for the sum of i*i where i<n, divided by n...\n//=(n-.5)*(n-1.)/3.\n\n#define PI 3.14159265\n#define TM 7.\n#define DIV 22.\n#define SZ 35.\nfloat tube(vec2 pa, vec2 ba){return length(pa-ba*clamp(dot(pa,ba)/dot(ba,ba),0.0,1.0));} \nfloat ca,sa;vec2 rotate(in vec3 v) {v.xz=ca*v.xz+sa*vec2(v.z,-v.x);return vec2(v.x,v.y+.25*v.z);}\nfloat DE(vec2 u){\n  float t1=mod(iTime,TM+1.),t=(t1<TM?TM*.5+.5*sign(t1-.5*TM)*pow(2.*abs(t1-.5*TM)/TM,.001)*TM:TM)+floor(iTime/(TM+1.))*TM;\n  t=mod(t,DIV*TM);\n  float a=0.,d=1.5,j=(1.+t/TM)/DIV,k=DIV*4.;//a=angle,j=delta,k=steps,t=time,d=distance\n  vec3 p=vec3(0),pn;vec2 p1,p2;\n  for(float i=0.;i<k;i+=1.){\n    a+=PI*i*i*j;\n    a=mod(a,PI*2.);\n    pn=p+vec3(cos(a*2.)*cos(a),cos(a*2.)*sin(a),sin(a*2.))*SZ;\n    p1=rotate(p);p2=rotate(pn);d=min(d,tube(u-p1,p2-p1)-1.);//fake 3d rotation\n    p=pn;\n  }\n  return d;\n}\nvoid mainImage(out vec4 O, in vec2 U){\n  ca=cos(iTime);sa=sin(iTime);\n  float d=smoothstep(0.,2.,DE(2.*U-iResolution.xy));\n  O=vec4(d,d,d,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define pi 3.14159\nfloat N[6]=float[6](1.,1.25,1.5,1.5,5./3.,1.5);\nvec2 sound(float time){\n  float t=time*3.;\n  int s=int(floor(t)),b=s%3;\n  int p=4*3;float n,nb,nh;\n  n=N[(s/p)%4];p/=4;\n  nb=n;\n  n*=N[(s/p)%4];p/=2;\n  nh=n; \n  n*=N[(s/p)%4];\n  float m=n;m=mod(m,2.);\n  if(mod(m+.125,.25)-.125>0.05 || abs(m-.75)<0.05)n=0.;\n  vec2 v=fract(vec2(n*200.,nb*(b==0?50.03:b==1?62.5:75.03))*time)-.5;\n  v.y*=step(fract(t),.5);v.x*=(fract(t)-1.)*.5;\n  v+=(fract(vec2(199.91,200.05)*time*nh)*.5-.25)*(1.+sin(time*15.*pi))*.25;\n  return v;\n}\nvec2 mainSound( int samp, float time){\n  vec2 v=vec2(0);\n  for(float i=0.;i<5.;i+=1.)v+=sound(time-i*.15)/(1.+i);\n  return v*.125;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}