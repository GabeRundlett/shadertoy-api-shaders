{
    "Shader": {
        "info": {
            "date": "1377900576",
            "description": "A fairly simple music visualiser.",
            "flags": 0,
            "hasliked": 0,
            "id": "Xsf3WB",
            "likes": 71,
            "name": "Circle Wave",
            "published": 3,
            "tags": [
                "spectrum",
                "music"
            ],
            "usePreview": 0,
            "username": "TekF",
            "viewed": 4861
        },
        "renderpass": [
            {
                "code": "const float tau = 6.28318530717958647692;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy - iResolution.xy*.5)/iResolution.x;\n\n\tuv = vec2(abs(atan(uv.x,uv.y)/(.5*tau)),length(uv));\n\n\t// adjust frequency to look pretty\t\n\tuv.x *= 1.0/2.0;\n\t\n\tfloat seperation = 0.06*(1.0-iMouse.x/iResolution.x);\n\n\tvec3 wave = vec3(0.0);\n\tconst int n = 60;\n\tfor ( int i=0; i < n; i++ )\n\t{\n/*\t\tfloat u = uv.x*255.0;\n\t\tfloat f = fract(u);\n\t\tf = f*f*(3.0-2.0*f);\n\t\tu = floor(u);\n\t\tfloat sound = mix( texture( iChannel0, vec2((u+.5)/256.0,.75) ).x, texture( iChannel0, vec2((u+1.5)/256.0,.75) ).x, f );*/\n\t\tfloat sound = texture( iChannel0, vec2(uv.x,.75) ).x;\n\t\t\n\t\t// choose colour from spectrum\n\t\tfloat a = .9*float(i)*tau/float(n)-.6;\n\t\tvec3 phase = smoothstep(-1.0,.5,vec3(cos(a),cos(a-tau/3.0),cos(a-tau*2.0/3.0)));\n\t\t\n\t\twave += phase*smoothstep(4.0/640.0, 0.0, abs(uv.y - sound*.3));\n\t\tuv.x += seperation/float(n);\n\t}\n\twave *= 3.0/float(n);\n\t\t\n\tvec3 col = vec3(0);\n\tcol.z  += texture( iChannel0, vec2(.000,.25) ).x;\n\tcol.zy += texture( iChannel0, vec2(.125,.25) ).xx*vec2(1.5,.5);\n\tcol.zy += texture( iChannel0, vec2(.250,.25) ).xx;\n\tcol.zy += texture( iChannel0, vec2(.375,.25) ).xx*vec2(.5,1.5);\n\tcol.y  += texture( iChannel0, vec2(.500,.25) ).x;\n\tcol.yx += texture( iChannel0, vec2(.625,.25) ).xx*vec2(1.5,.5);\n\tcol.yx += texture( iChannel0, vec2(.750,.25) ).xx;\n\tcol.yx += texture( iChannel0, vec2(.875,.25) ).xx*vec2(.5,1.5);\n\tcol.x  += texture( iChannel0, vec2(1.00,.25) ).x;\n\tcol /= vec3(4.0,7.0,4.0);\n\t\n\t// vignetting\n\tcol *= smoothstep( 1.2, 0.0, uv.y );\n\t\n\tfragColor = vec4(wave+col,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 13,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}