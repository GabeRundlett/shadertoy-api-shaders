{
    "Shader": {
        "info": {
            "date": "1704663113",
            "description": "starfield",
            "flags": 0,
            "hasliked": 0,
            "id": "lcjGWV",
            "likes": 24,
            "name": "大龙猫 - Starfield",
            "published": 3,
            "tags": [
                "starfield"
            ],
            "usePreview": 0,
            "username": "totetmatt",
            "viewed": 581
        },
        "renderpass": [
            {
                "code": "struct Grid {\n    vec3 id;\n    float d;\n} gr;\n#define FBI floatBitsToInt\n #define FFBI(a) FBI(cos(a))^FBI(a)\n float hash(vec3 uv){\n       int x = FFBI(uv.x);\n       int y = FFBI(uv.y);\n       int z = FFBI(uv.z);\n       return float((x*x+y)*(y*y-x)*(z*z+x))/2.14e9;\n   }\nvoid dogrid(vec3 ro,vec3 rd,float size){\n    gr.id = (floor(ro+rd*1E-3)/size+.5)*size;\n    vec3 src = -(ro-gr.id)/rd;\n    vec3 dst = abs(.5*size)/rd;\n    vec3 bz = src+dst;\n    gr.d = min(bz.x,min(bz.y,bz.z));\n}\nvec3 erot(vec3 p,vec3 ax,float t){return mix(dot(ax,p)*ax,p,cos(t))+cross(ax,p)*sin(t);}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord.xy -.5* iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.);\n    vec3 ro=vec3(0.2,0.2,-5.),rt=vec3(0.);\n    vec3 z = normalize(rt-ro),x=normalize(cross(z,vec3(0.,-1.,0.))),y=cross(z,x);\n    vec3 rd = mat3(x,y,z)*normalize(vec3(uv,2.+tanh(hash(uv.xyy+iTime)*.5+10.*sin(iTime))));\n    float i,e,g;\n    float gridlen = 0.;\n    for(i=0.,e=.01,g=0.;i++<99.;){\n        vec3 p = ro+rd*g;\n        vec3 oop=p;\n        p = erot(p,normalize(sin(iTime*.33+vec3(-.6,.4,.2))),iTime*.2);\n        p.z+=iTime;\n \n        vec3 op=p;       \n        if(gridlen <=g){\n        dogrid(p,rd,1.);\n        gridlen+=gr.d;\n        }\n        p-=gr.id;\n        float gy = dot(sin(gr.id*2.),cos(gr.id.zxy*5.));\n        float rn = hash(gr.id+floor(iTime));\n        p.x +=sin(rn)*.25;\n        \n        float h =  rn> .0 ? .5:length(p)-.01-gy*.05+rn*.02;\n        \n        g+=e= max(.001+op.z*.000002, abs(h));\n        col+=vec3(.25,.25,1.+abs(rn))*(0.025+(.02*exp(5.*fract(gy+iTime))))/exp(e*e*i);\n          \n    }\n     col*=exp(-.08*g);\n    fragColor = vec4(sqrt(col),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}