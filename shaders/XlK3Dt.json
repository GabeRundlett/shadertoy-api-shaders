{
    "Shader": {
        "info": {
            "date": "1477472456",
            "description": "regular polygon",
            "flags": 0,
            "hasliked": 0,
            "id": "XlK3Dt",
            "likes": 3,
            "name": "regular polygon",
            "published": 3,
            "tags": [
                "thebookofshader"
            ],
            "usePreview": 0,
            "username": "20911870",
            "viewed": 788
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // old\n\t//vec2 uv = fragCoord.xy / iResolution.xy;\n    //uv.x *= iResolution.x / iResolution.y;\n    \n    vec2 uv = fragCoord.xy / iResolution.y;\n    \n    vec3 color = vec3(0.0);\n  \tfloat d = 0.0;\n\n  \t// Remap the space to -1. to 1.\n  \tuv = uv *2.-1.;\n\n  \t// Number of sides of your shape\n  \tint N = 3;\n\n  \t// Angle and radius from the current pixel\n  \tfloat a = atan(uv.x,uv.y)+PI;\n  \tfloat r = TWO_PI/float(N);\n  \n  \t// Shaping function that modulate the distance\n  \td = cos(floor(.5+a/r)*r-a)*length(uv);\n\n  \t//color = vec3(1.0-smoothstep(.4,.41,d));\n    color = vec3(smoothstep(.39,.4,d)-smoothstep(.4,.41,d));\n  \t//color = vec3(d);\n    \n\tfragColor = vec4(color,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}