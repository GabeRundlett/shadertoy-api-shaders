{
    "Shader": {
        "info": {
            "date": "1669846657",
            "description": "Yet another graph plotter framework, with some examples. GRAPH2 is a bit silly, but seems to work.\n\nI believe the macros are all bracketed correctly but may well be wrong (_XXX macros are not intended to be used directly).",
            "flags": 0,
            "hasliked": 0,
            "id": "ds2SzR",
            "likes": 5,
            "name": "Yet Another Graph Plotter",
            "published": 3,
            "tags": [
                "graph",
                "plotter"
            ],
            "usePreview": 0,
            "username": "mla",
            "viewed": 221
        },
        "renderpass": [
            {
                "code": "#define GRAPH(p,f) _GRAPH((p).x,(p).y,f))\n#define GRAPH2(p,e) _GRAPH2((p).x,(p).y,(e))\n#define _GRAPH(x,y,f) (gdist(y,(x+px)-(x-px),(f((x-px))),(f(x)),(f((x+px))))\n#define _GRAPH2(x,y,e) (gdist(y,(x+px)-(x-px),_EVAL(x-px,e),_EVAL(x,e),_EVAL(x+px,e)))\n#define _EVAL(_x,e) (x = (_x),e)\nfloat gdist(float y, float dx, float f0, float f1, float f2) {\n  return abs(y-f1)/length(vec2((f2-f0)/dx,1.0));\n}\nfloat f(float x) {\n    x += 0.0001;\n    x /= exp(17.0*(0.5-0.5*cos(0.5*iTime))-2.0); // Zoom in\n    return sin(x)/x-0.5; \n}\n#define g(x) sin(x+0.618*iTime)*cos(4.0*x+iTime)\n#define h x = mod(4.0*x+iTime+2.0*sin(0.5*iTime),2.0), min(x,2.0-x)-0.5\n#define smoothstep(x,y,z) clamp(((z)-(x))/((y)-(x)), 0.0, 1.0) // @spalmer's suggestion - thanks!\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    float px = fwidth(p.x),x;\n    vec3 col = vec3(0);\n    col = mix(vec3(1,0,0),col,smoothstep(0.0,3.0*px,GRAPH(p,f)-0.01));\n    col = mix(vec3(1,1,0),col,smoothstep(0.0,1.5*px,GRAPH(p,g)));\n    col = mix(vec3(0,1,0),col,smoothstep(0.0,px,GRAPH2(p,h)));\n    col = mix(vec3(0,0,1),col,smoothstep(0.0,px,GRAPH2(p,sin(4.0*cos(x)+iTime))-0.01));\n    col *= 0.8;\n    col = pow(col,vec3(0.4545));\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}