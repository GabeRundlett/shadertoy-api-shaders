{
    "Shader": {
        "info": {
            "date": "1638160551",
            "description": "A segment exercise",
            "flags": 0,
            "hasliked": 0,
            "id": "slG3zK",
            "likes": 22,
            "name": "Segments: Sacred Bearings",
            "published": 3,
            "tags": [
                "circles",
                "lines",
                "practice",
                "segments"
            ],
            "usePreview": 0,
            "username": "Yusef28",
            "viewed": 492
        },
        "renderpass": [
            {
                "code": "#define pi acos(-1.)\n#define eps 9./iResolution.y\n\n\n#define maxPoints 16.\n#define screenSize 2.9\nfloat rnd(vec2 id){\n    return sin(fract(dot(id,vec2(14.27,74.97)))*54329.34);\n}\nmat2 rot(float a){\n    float s = sin(a), c = cos(a);\n    return mat2(c,-s,s,c);\n}\n\nfloat point(vec2 uv, float r){\n    return smoothstep(r+eps,r-eps,length(uv));\n}\n\nfloat ring(vec2 uv, float r){\n    return smoothstep(eps+0.01, 0., abs(length(uv)-r+0.01));\n}\n\nfloat line(vec2 P, vec2 A, vec2 B, float r){\n    vec2 PA = P-A;\n    vec2 AB = B-A;\n    //dot(AB,P-P3) = 0\n    //dot(AB,P-AB*t)\n    float t = clamp(dot(PA,AB)/dot(AB,AB),0.,1.);\n    return smoothstep(r+eps,r-eps,length(PA-AB*t));\n   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    uv.x+=iTime*0.5;\n    vec2 id = floor(uv*screenSize);\n    \n    uv = fract(uv*screenSize)*2.-1.;\n    \n    vec2 ringPos = vec2(0.,0.);\n    float radius = 0.5;\n    float ring1 = ring(uv-ringPos, radius);\n    vec3 col = vec3(0.);\n    col += ring1;\n    \n    float mx = 1.+floor(abs(mod(iTime*2.+rnd(id*89.)*831.,\n                        maxPoints)-maxPoints/2.))+1.;\n    vec2 now,last=vec2(0.,radius)*rot(iTime);\n    vec2 first = last;\n    col += ring(uv-last, 0.1);\n    col += point(uv-last, 0.04);\n    \n    for(float i = 1.; i < mx; i++){\n    \n        \n        now = vec2(0.,radius)*rot(iTime+i*pi*2./mx);\n        col += ring(uv-now, 0.1);\n        col += point(uv-now, 0.04);\n        col += line(uv,now,last,0.005);\n        \n        \n        \n        last = now;\n    }\n    col += line(uv,now,first,0.005);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}