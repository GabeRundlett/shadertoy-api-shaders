{
    "Shader": {
        "info": {
            "date": "1671417548",
            "description": "Tweaking the texture coordinates of a bilinear texture lookup to create upscaled pixels with soft edges.\nTry varying filter_width between 0.1 and 4.0.",
            "flags": 0,
            "hasliked": 0,
            "id": "cls3RN",
            "likes": 4,
            "name": "Softpixels",
            "published": 3,
            "tags": [
                "pixelnearestbilinear"
            ],
            "usePreview": 0,
            "username": "hellotanjent",
            "viewed": 275
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float filter_width = sqrt(2.0);\n    const float upscale_factor = 7.37;\n    // In a real application, this constant should be precalculated\n    // and passed in as a uniform.\n    const float d = upscale_factor / filter_width;\n\n    float t1 = iTime * 0.031;\n\tvec2 uv = (fragCoord.xy / iResolution.x);\n    uv = mat2(sin(t1), cos(t1), -cos(t1), sin(t1)) * uv;\n    uv *= iResolution.x / upscale_factor;\n    \n    //----------\n\n    \n    if (fract(iTime / 4.0) > 0.5) {\n        // We reshape the fractional component of the texture coordinate\n        // so that it looks like this as it goes across a source pixel -\n        \n        //       /\n        //   ----    <-- 0.5\n        //  /\n        \n        // where the slopes of the end segments are equal to\n        // (upscale_factor / filter_width)\n        \n        vec2 uf = fract(uv) * d;\n        uf -= clamp(uf - 0.5, 0.0, d - 1.0);\n        \n        // And then we add our reshaped fractional component back to the\n        // integer component.\n        uv = floor(uv) + uf;\n    }\n\n    fragColor = texture(iChannel0,uv / iChannelResolution[0].x);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}