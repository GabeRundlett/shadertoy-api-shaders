{
    "Shader": {
        "info": {
            "date": "1471780052",
            "description": "Regular Sky\n\nChange Log:\nv2:\n  Added Clouds\n\nv2.2:\n  Clouds Made Moving\n\nv3.0:\n  Added Sea\n  Sea Is Effected\n\nv3.1\n  Sea Reflects Light But Darker.\n\nv3.2\n  Fixed Various Bugs.\n\nv3.3\n  Fixed crt(cubic root) function.",
            "flags": 0,
            "hasliked": 0,
            "id": "lld3Wj",
            "likes": 3,
            "name": "Sky v3.3",
            "published": 3,
            "tags": [
                "sky"
            ],
            "usePreview": 0,
            "username": "Imsure1200q_1UWE130",
            "viewed": 1106
        },
        "renderpass": [
            {
                "code": "const float PI = 3.14159265359; //Render This On Sky If You Want\nvec4 cnoise( float p, vec2 uv, float a, float b, bool sea ) //You Know What? GG! bool is boolean! (true:false)\n{\n    vec4 noise = texture(iChannel0, vec2(uv.x/3.0+(iTime/60.0), uv.y/3.0+(iTime/298.21)));\n    vec4 baseA = fract(noise);\n    vec4 baseB = sin(noise);\n    vec4 baseC = tan(noise);\n    vec4 baseD = sqrt(noise);\n    vec4 comp;\n    if(sea != false)\n    comp = smoothstep(vec4(p), vec4(PI - noise), mix(mix(baseA, baseB, uv.x),mix(baseC, baseD, uv.x),uv.y));\n    else\n        comp = smoothstep(vec4(p), vec4(PI + noise), mix(mix(baseA, baseB, uv.x),mix(baseC, baseD, uv.x),uv.y));\n    return comp;\n    p += length(comp);\n    p++;\n}\nfloat crt(float x)\n{\n    float h = x / x / x;\n    if(float(int(h) * int(h) * int(h)) == x)\n    {\n        return h;\n    }\n    else return 0.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    //uv += sin(cos(PI)); //For Sea Looks\n    float p = sin(iTime) - cos(iTime) - uv.x;\n    float a = sqrt(iTime) / uv.x;\n    float b = crt(iTime);\n    vec4 c = cnoise( p, uv, a, b, false );\n    vec4 s = cnoise( p, uv, a, b, true );\n    fragColor = vec4(cos(length(uv.y))) + vec4(-0.101, 0.1, 1.0, 1.0) * sqrt(uv.y);\n    if(uv.y > 0.1)\n    fragColor += c / 9.0 / (uv.x + 0.6) / cos(uv.x);\n    if(uv.y < 0.4)\n        fragColor = vec4(sin(length(-uv.y))) + vec4(-0.101, 0.1, 1.0, 1.0) * sqrt(uv.y) +\n        s / 9.0 / (uv.x + 0.6) / cos(uv.x);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}