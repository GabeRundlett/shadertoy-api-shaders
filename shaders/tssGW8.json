{
    "Shader": {
        "info": {
            "date": "1546075233",
            "description": "Try to express wind.",
            "flags": 0,
            "hasliked": 0,
            "id": "tssGW8",
            "likes": 5,
            "name": "Wind Experiment",
            "published": 3,
            "tags": [
                "wind"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 671
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n#define degToRad (PI * 2.0) / 360.0\n\nfloat noise(float x) {\n    return fract(sin(dot(vec2(x), vec2(12.9898, 78.233)))* 43758.5453);\n}\n\nmat3 matRotateX(float rad)\n{\n    return mat3(1,       0,        0,\n                0,cos(rad),-sin(rad),\n                0,sin(rad), cos(rad));\n}\n\nmat3 matRotateY(float rad)\n{\n    return mat3(cos(rad), 0, -sin(rad),\n\t\t\t\t\t0, 1, 0,\n\t\t\t\t\tsin(rad), 0, cos(rad));\n}\n\nvec4 map(vec3 p){\n    float speed = iTime*15.0;\n    p.z += speed;\n    \n    float animSpeed = iTime*5.0;\n    \n    float n = floor(p.x/10.0);\n    p.z = mod(p.z,15.0)-7.5;\n    p.y = mod(p.y,6.0)-3.0;\n    p.x = mod(p.x,6.0)-3.0;\n    p.z += fract(noise(floor(p.z/10.0)*1.3))*sin(p.z+animSpeed)*0.2;\n    p.y += fract(noise(n)*2.3)*sin(p.z+animSpeed)*0.3;\n\tp.x += fract(noise(n)*1.5-0.5)*cos(p.z+animSpeed)*0.5;\n    p.y += noise(n)*0.1;\n    p.z += noise(n)*0.2;\n    \n    // This is based on the Capsule Distance function from the IQ's, and it's modified.\n    p += vec3(0.0,0.0,1.0);\n    p.z -= clamp( p.z, 0.0, 8.0 );\n    p.y += sin(n*iTime)*1.2;\n    float pt = length( p ) - 0.05+sin(n*iTime*p.z)*0.02;\n    \n    return vec4(vec3(1.98,1.98,1.98),pt);\n}\n\nvec3 normalMap(vec3 p){\n\tfloat d = 0.0001;\n\treturn normalize(vec3(\n\t\tmap(p + vec3(  d, 0.0, 0.0)).w - map(p + vec3( -d, 0.0, 0.0)).w,\n\t\tmap(p + vec3(0.0,   d, 0.0)).w - map(p + vec3(0.0,  -d, 0.0)).w,\n\t\tmap(p + vec3(0.0, 0.0,   d)).w - map(p + vec3(0.0, 0.0,  -d)).w\n\t));\n}\n\nfloat shadowMap(vec3 ro, vec3 rd){\n\tfloat h = 0.0;\n\tfloat c = 0.001;\n\tfloat r = 1.0;\n\tfloat shadow = 0.5;\n\tfor(float t = 0.0; t < 30.0; t++){\n\t\th = map(ro + rd * c).w;\n\t\tif(h < 0.001){\n\t\t\treturn shadow;\n\t\t}\n\t\tr = min(r, h * 16.0 / c);\n\t\tc += h;\n\t}\n\treturn 1.0 - shadow + r * shadow;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    //mat3 camRotY = matRotateY(-(iTime*30.0)*degToRad)*matRotateX(20.*degToRad);\n\tmat3 camRotY = matRotateX(20.0*degToRad);\n    \n\tvec3 ro=vec3(0.,-.1,-8.);\n    vec3 rd=normalize(vec3(p,1.8));\n\t\n    float t, dist;\n\tt = 0.0;\n\tvec3 distPos = vec3(0.0);\n\tvec4 distCl = vec4(0.0);\n\tfor(int i = 0; i < 60; i++){\n\t\tdistCl = map(distPos);\n\t\tdist = distCl.w;\n\t\tif(dist < 1e-4){break;}\n        if(t>30.)break;\n\t\tt += dist;\n\t\tdistPos = (ro+rd*t);\n\t}\n\n\tvec3 color;\n\tfloat shadow = 1.0;\n\t\n\tif(t < 30.){\n\t\t// lighting\n\t\tvec3 lightDir = vec3(1.0, 10.0, 1.0);\n\t\tvec3 light = normalize(lightDir);\n\t\tvec3 normal = normalMap(distPos);\n\n\t\t// difuse color\n\t\tfloat diffuse = clamp(dot(light, normal), 1.0, 1.0);\n\t\tfloat lambert = max(.0, dot( normal, light));\n\t\t\n\t\t// shadow\n\t\tshadow = shadowMap(distPos + normal * 0.001, light);\n\n\t\t// result\n\t\tcolor += vec3(lambert);\n\t\tcolor = diffuse*(distCl.xyz+(.1-length(p.xy)/3.))*vec3(1.0, 1.0, 1.0);\n\t}else{\n        color =.84*max(mix(vec3(1.1,1.31,1.35)+(.1-length(p.xy)/3.),vec3(1),.1),0.);\n\t}\n\n\t// rendering result\n\tfloat brightness = 1.0;\n\tvec3 dst = (color * max(0.5, shadow))*brightness;\n\tfragColor = vec4(dst, 1.0);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}