{
    "Shader": {
        "info": {
            "date": "1666519454",
            "description": "read Common tab",
            "flags": 32,
            "hasliked": 0,
            "id": "DdfGzf",
            "likes": 3,
            "name": "2D worlds explorer",
            "published": 3,
            "tags": [
                "automata"
            ],
            "usePreview": 0,
            "username": "lomateron",
            "viewed": 236
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int m = tz+1;\n    int i = iFrame%m;\n    //if(i!=0){discard;}  //comment out to see more frames but more flicker too\n    vec4 a = texelFetch(iChannel0,ivec2(fragCoord),0);\n    uint n = (1U<<m)-1U;\n    uint b = floatBitsToUint(a.x)&n;\n    uint c = ((b>>i)|(b<<(m-i)))&n;\n    //fragColor = cos(float(c)*88.8888+vec4(3,1,2,4))*.5+.5;\n    if(tz==1){fragColor = vec4(float(c)/float(n));}\n    if(tz==2){fragColor = vec4((c>>0)&1U,(c>>1)&1U,(c>>2)&1U,0);}\n    if(tz> 2){fragColor = cos(float(c)/float(n)*4.4+vec4(2,3,4,5)+.8);}\n    //fragColor = vec4(b&1U);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define rz 120.  //size of each world in pixels\n#define sz  3.   //size of kernel across space\n#define tz  1    //size of kernel across time          must be <= 32\n#define nz  .02  //size of mouse click noise ball\n\n//exploration works when texture is 1920*1080\n//if you dont have 1920*1080 texture\n//then you must change rz to textureWidth/16\n\n//1920*1080 and rz=120 will show 16*9 worlds simulations\n//becos 1920/rz*1080/rz = 16*9\n//mouse click on each world will show the next 16*8 worlds\n//go to BufferA line24, change 0U to 1U to keep exploring next 16*8*16*8 worlds\n//there are 2^(sz*sz*tz+1) different worlds to explore\n//arktually 2^(sz*sz*tz  ) becous half are worlds inverted in color\n\n//next will be 1D worlds explorer",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "uint read(vec2 u, vec2 m)\n{\n    vec2 o = mod(u+m,rz);\n         u = floor(u/rz)*rz+o;\n    return floatBitsToUint(texelFetch(iChannel0,ivec2(u),0).x);\n}\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    float ck = -floor((sz-1.)*.5);    //center the kernel\n    float ev = float(mod(sz,2.)==0.); //move and resize kernel when sz = even\n    uint  o  = 0U;                      //sum of all bits\n                                float n = (float(iFrame&1)-1.)*ev;\n    for(int   t=0 ; t<tz; ++t){ float m = n*(1.-float(t&1)); float s2 = sz-float(t&1)*ev; \n    for(float i=0.; i<s2; ++i){\n    for(float j=0.; j<s2; ++j){ uint r = read(u,vec2(i,j)+ck+m);\n                                o += (r>>t)&1U;\n    }}}\n    vec2 r2 = floor(iResolution.xy/rz);\n    uint u2 = uint(dot(floor(        u/rz),vec2(1,r2.x)));\n    uint m2 = uint(dot(floor(iMouse.xy/rz),vec2(1,r2.x)));\n    \n    uint a = +u2                      //divides screen in 16*8 worlds\n             +16U*8U        *m2       //show next 16*8 worlds with mouse click\n             +16U*8U*16U*8U *0U;      //show next 16*8*16*8 worlds\n    //if(o>=32U){a = 1430607221U;}  \n    o = (read(u,vec2(0,0))<<1U) | ((a>>(o&31U))&1U);\n    fragColor = vec4(uintBitsToFloat(o));\n    if(iFrame==0||iMouse.z>.5)\n    {\n        uvec2 p = uvec2(u) + 1920U*1080U*uint(iFrame);\n              p = 1103515245U * ( (p>>1U) ^ (p.yx   ) );\n        uint  q = 1103515245U * ( (p.x  ) ^ (p.y>>3U) );\n        vec2  v = fract(u/rz)-.5;\n        fragColor = vec4(float(q)*step(dot(v,v),nz));\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}