{
    "Shader": {
        "info": {
            "date": "1660995879",
            "description": "Visualisation of alcubierre drive (read the comments in the code)",
            "flags": 32,
            "hasliked": 0,
            "id": "ftGyRD",
            "likes": 2,
            "name": "alcubierre drive",
            "published": 3,
            "tags": [
                "warp",
                "visualisation",
                "physics",
                "drive",
                "alcubierre"
            ],
            "usePreview": 0,
            "username": "grevel",
            "viewed": 272
        },
        "renderpass": [
            {
                "code": "#define SHRINK 0.009\n\n// While watching this video: https://www.youtube.com/watch?v=Vk5bxHetL4s (3:19) I was \n// dissatisfied with the visual effect provided. The \"space bubble\" warped only on the \n// edges, leaving the enclosed space still stationary, completely missing the point in \n// my opinion.\n\n// This visualisation makes the space near your mouse moving relative to the \n// surroundings, so any matter living inside the bubble would \"move\" together with the \n// bubble, while staying stationary relative to the space it sits in.\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    float col = 1.0;\n    \n    int shrink = int(SHRINK * iResolution.x);\n    \n    for(int x = -shrink; x <= shrink; x++) {\n        for(int y = -shrink; y <= shrink; y++) {\n            col *= texture(iChannel0, (fragCoord + vec2(float(x), float(y))) / iResolution.xy).x;\n        }\n    }\n    \n    \n    fragColor = vec4(col);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define GRID_SIZE 20.0\n#define BUBBLE_R 0.2\n#define SPACE_SPEED 0.1\n#define BLEND 0.1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 mouse = iMouse.xy / iResolution.xx;\n    \n    if(mouse == vec2(0.0, 0.0)) {\n        mouse = vec2(0.5, 0.3);\n    }\n    \n    vec2 uv = fragCoord / iResolution.xx;\n    vec2 bubbleSpace = fract(GRID_SIZE * (fragCoord/iResolution.xx - mouse));\n    vec2 gridSpace = GRID_SIZE * fragCoord/iResolution.xx;\n    gridSpace.x += SPACE_SPEED * iTime * GRID_SIZE;\n    gridSpace.y += SPACE_SPEED * iTime * GRID_SIZE * 0.2;\n    gridSpace = fract(gridSpace);\n\n    float distSq = (mouse.x - uv.x) * (mouse.x - uv.x) + (mouse.y - uv.y) * (mouse.y - uv.y);\n    float dist = sqrt(distSq);\n\n    float mask = smoothstep(dist - BLEND, dist + BLEND, BUBBLE_R);\n    \n    \n    gridSpace -= vec2(0.5);\n    gridSpace = 2.0*abs(gridSpace);\n    \n    bubbleSpace -= vec2(0.5);\n    bubbleSpace = 2.0*abs(bubbleSpace);\n    \n    vec2 finalSpace = mix(gridSpace, bubbleSpace, mask);\n    \n    \n    float thickness = 0.5;\n    float col = step(thickness, finalSpace.x) + step(thickness, finalSpace.y);\n    \n\n    fragColor = vec4(col);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}