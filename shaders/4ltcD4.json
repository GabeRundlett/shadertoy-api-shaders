{
    "Shader": {
        "info": {
            "date": "1532688029",
            "description": "just added mouse parameterts to the parent shader",
            "flags": 0,
            "hasliked": 0,
            "id": "4ltcD4",
            "likes": 2,
            "name": "circle packing mouse",
            "published": 3,
            "tags": [
                "spiral",
                "rainbow",
                "packing"
            ],
            "usePreview": 0,
            "username": "ollj",
            "viewed": 581
        },
        "renderpass": [
            {
                "code": "\n//  Circle packing\n//crunched by ollj\n\n//parent https://www.shadertoy.com/view/4d3BzX\n//https://en.wikipedia.org/wiki/Circle_packing\n\n// Hue taken from https://www.shadertoy.com/view/4tlBWB\n\n\n#define pi acos(-1.)\n#define eps 1e-2  // epsilon(fix edge cases)\n\n\nfloat atan3(vec2 a){return atan(a.y,a.x);}\nmat2 r2(float a){return mat2(cos(a),-sin(a),sin(a),cos(a));}\nvec2 cs(float a){return vec2(cos(a),sin(a));}\nvec2 ff(float a){return vec2(fract(a),floor(a));}\n#define u2(a) ((a)*2.-1.)\n#define u3(a) ((a)*2.+1.)\nvec3 ss(vec2 a,vec3 b){return smoothstep(a.x,a.y,b);}\nfloat ss(vec2 a,float b){return smoothstep(a.x,a.y,b);}\nfloat ss(vec3 a){return smoothstep(a.x,a.y,a.z);}\n\nvec3 huen(vec3 c,float n){return c.z*(c.y*ss(vec2(1.,2.),abs(mod((c.x*n+vec3(0,2,1)),n)*2.-n)));}\nvec3 hue(vec3 c){return huen(c,3.);}//cubic hermite hue\n\n\nfloat circle(vec2 u,float r,float f){float d=length(u)-r+.002;return ss(vec2(3,-2)/iResolution.y,mix(abs(d),d,f));}\n //+.002 is a lame semi-fix ofsmoothstep causing overlap of ring-textures.\n\nvec3 circles(vec2 u,vec2 s,float h,vec2 C\n){float t=asin(s.x/s.y)//angle for surrounding circle\n ;vec2 f=ff(abs(pi/t)+eps)\n ;t*=1.+f.x/f.y\n ;float i=floor(atan3(r2(h-t)*u)*.5/t)// i-th circle\n ;return circle(u-cs(i*t*2.+h)*s.y-C,s.x,1.)*hue(vec3(i/f.y,1.,.75));}\n\nvoid mainImage(out vec4 fragColor,vec2 fragCoord\n){vec2 u=(2.*fragCoord.xy-iResolution.xy)/iResolution.y\n ;vec2 m=iMouse.xy/iResolution.xy;//vec2(R,r) \n ;m=abs(u2(m))\n ;vec3 c=vec3(circle(u,m.y,0.))//draw central circle\n ;float i=floor((min(m.x*2.*(1./m.x-1.)+eps,length(u)-m.y))/(m.x*2.))// i-th layer\n ;vec2 a=vec2(1.,u3(i))*m.x;a.y+=m.y\n ;if(i>=0.)c+=circles(u,a,sin(iTime)*m.x*i*pi,vec2(0))// draw surrounding circles\n ;fragColor=vec4(1.-c,1);}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}