{
    "Shader": {
        "info": {
            "date": "1430541151",
            "description": "A random fractal\n",
            "flags": 0,
            "hasliked": 0,
            "id": "Mlj3RK",
            "likes": 7,
            "name": "A fractal",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "Aj_",
            "viewed": 1380
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 resolution = iResolution.xy;\n\tvec2 res = resolution/10.2;\n\tvec2 position = ( (fragCoord.xy - vec2(resolution.x/2., resolution.y/2.)) / max(res.y, res.x)  ) ;\n\t\n\tfloat x = position.x;\n\tfloat y = position.y;\n\tfloat u,t;\n\tfloat iv = 60.;\n\t\n\tfor(int i=0;i<120;i++) {\n\t\tu =  -y*y*x*x +1.2*x*x + 1.1;\n\t\tt =  -x*x*y*y  +1.2*y*y + 1.1;\n\t\t\n\t\t\n\t\tx = u;\n\t\ty = t;\n\t\tif(dot(vec2(u,t), vec2(u,t))>15.08) {\n\t\t\tiv = float(i);\n\t\t\tbreak;\n\t\t}\n\t\t\n\t}\n\t\n\tvec3 color =  vec3(iv/60.)*11.;\n\n\tfragColor = vec4(vec3(color.x/8., color.y/4., color.z/4.), 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}