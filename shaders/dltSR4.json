{
    "Shader": {
        "info": {
            "date": "1696079528",
            "description": "stupid funsies",
            "flags": 32,
            "hasliked": 0,
            "id": "dltSR4",
            "likes": 4,
            "name": "snek",
            "published": 3,
            "tags": [
                "snek"
            ],
            "usePreview": 0,
            "username": "Trixelized",
            "viewed": 178
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    float fraction = (iResolution.x / iResolution.y);\n    uv.x *= fraction;\n    \n    float angle = iTime;\n    float s = sin(angle);\n    float c = cos(angle * 0.5);\n    \n    mat2 rotMat = mat2(c, s, -s, c);\n    vec2 rotUv = ((uv - 0.5) * rotMat) + 0.5;\n    \n    vec4 recursive = texture(iChannel0, 1.001 * vec2(uv.x / fraction, uv.y) - rotUv * 0.005) / 1.0005;\n    \n    vec3 colMul = 0.5 + 0.5 * sin(iTime + vec3(0.0, 2.09439, 4.18879));\n    \n    float add = 1.0 / (1.0 + exp(200.0 * length(rotUv - 0.45)));\n    \n    fragColor = clamp(recursive + vec4(add * colMul, 1.0), vec4(0.0), vec4(1.0));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}