{
    "Shader": {
        "info": {
            "date": "1667585229",
            "description": "fork of previous shader !",
            "flags": 0,
            "hasliked": 0,
            "id": "cdB3WD",
            "likes": 19,
            "name": "spiral dots sdf",
            "published": 3,
            "tags": [
                "logpolarsdf"
            ],
            "usePreview": 0,
            "username": "sympou",
            "viewed": 277
        },
        "renderpass": [
            {
                "code": "//you have to tweak v1 if you want the circles to touch each other.\n//there might be a way to compute the ideal value of v1 !\n\n#define num 11.\n#define Y   fract(iTime*0.25)\n#define v1  1.015\n#define v2  1.\n#define v3  1.25\n#define v4  1.\n\n#define PI   3.1415926535\n#define PI2  6.2831853071\n#define PI05 1.5707963267\n\nfloat sdDots( in vec2 p ) {\n\n    float ang = atan(p.x, p.y);\n    float len = length(p);\n    \n    float zone  = mod( ang / PI2 * num + 0.5, num);\n    vec2  zone2 = (floor(zone) + vec2(0., sign( fract(zone) - 0.5 ))) / num;\n    \n    float sa  = sin(PI / num) * v1;\n    float n2  = 2. / (sa + v3) - 1.; \n    \n    float l   = log(len) / log(n2);\n    vec2 Y2   = Y - zone2 * v4;\n    vec2 val2 = pow( vec2(n2), floor( l + Y2 ) - Y2 );\n    vec2 ab   = ang - zone2 * PI2;\n    \n    vec2 p2 = vec2(cos(ab.x), sin(ab.x)) * len;\n    vec2 p3 = vec2(cos(ab.y), sin(ab.y)) * len;\n    vec2 r2 = val2 * sa * v2;\n    \n    float t = length(p2-vec2(val2.x,   0.)) - r2.x;\n    t = min(t,length(p3-vec2(val2.y,   0.)) - r2.y    );\n    t = min(t,length(p2-vec2(val2.x*n2,0.)) - r2.x*n2 );            \n    t = min(t,length(p3-vec2(val2.y*n2,0.)) - r2.y*n2 );\n\n    return t;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 m = (2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n\n\tfloat d = sdDots(p);\n    \n\t// coloring (from IQ's shaders)\n    vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\n    col *= 1.0 - exp(-3.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(150.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(d)) );\n\n    if( iMouse.z>0.001 ) {\n        d = sdDots(m);\n        col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.005, abs(length(p-m)-abs(d))-0.0025));\n        col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.005, length(p-m)-0.015));\n    }\n\n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}