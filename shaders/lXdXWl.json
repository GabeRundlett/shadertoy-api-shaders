{
    "Shader": {
        "info": {
            "date": "1719867234",
            "description": "Create a number val based on the time. If the number mod the x position is less than the threshold times the x position, divide it by the x position. Otherwise, multiply it by the y position and add a constant. Repeat.",
            "flags": 0,
            "hasliked": 0,
            "id": "lXdXWl",
            "likes": 2,
            "name": "Collatz sequence - real numbers",
            "published": 3,
            "tags": [
                "math",
                "sequence"
            ],
            "usePreview": 0,
            "username": "CuleGamer",
            "viewed": 113
        },
        "renderpass": [
            {
                "code": "const float scale = 2.;\nconst float speed = 5.;\nconst int maxI = 128;\nconst float threshold = 0.5;\nconst float add = 1.;\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    vec2 uv = scale * (2.*I - iResolution.xy)/iResolution.y;\n    float val = iTime * speed;\n    for(int i; i < maxI; i++)\n    {\n        if(mod(val, uv.x) < uv.x * threshold)\n        {\n            val /= uv.x;\n        }\n        else\n        {\n            val = val*uv.y + add;\n        }\n    }\n    O = vec4(clamp( abs(mod(val*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 ),1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}