{
    "Shader": {
        "info": {
            "date": "1542299517",
            "description": "doodle",
            "flags": 0,
            "hasliked": 0,
            "id": "XlyfDh",
            "likes": 6,
            "name": "doodling again",
            "published": 3,
            "tags": [
                "doodle"
            ],
            "usePreview": 0,
            "username": "Del",
            "viewed": 448
        },
        "renderpass": [
            {
                "code": "// doodling on glsl shadertoy (again)\nvec2 hash( vec2 p )\n{\n\tp = vec2( dot(p,vec2(127.1,311.7)),\n\t\t\t dot(p,vec2(269.5,183.3)) );\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise( in vec2 p )\n{\n\tconst float K1 = 0.366025404; // (sqrt(3)-1)/2;\n\tconst float K2 = 0.211324865; // (3-sqrt(3))/6;\n\t\n\tvec2 i = floor( p + (p.x+p.y)*K1 );\n\t\n\tvec2 a = p - i + (i.x+i.y)*K2;\n\tvec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0);\n\tvec2 b = a - o + K2;\n\tvec2 c = a - 1.0 + 2.0*K2;\n\t\n\tvec3 h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n\t\n\tvec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n\t\n\treturn dot( n, vec3(70.0) );\n}\n\nfloat fbm(vec2 uv)\n{\n\tfloat f;\n\tmat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n\tf  = 0.5000*noise( uv ); uv = m*uv;\n\tf += 0.2500*noise( uv ); uv = m*uv;\n\tf += 0.1250*noise( uv ); uv = m*uv;\n\tf += 0.0625*noise( uv ); uv = m*uv;\n\tf = 0.5 + 0.5*f;\n\treturn f;\n}\n\nmat2 rotate(float a)\n{\n\tfloat c = cos(a);\n\tfloat s = sin(a);\n\treturn mat2(c, s, -s, c);\n}\n\n\nvec3 DOGSHIT(vec2 pos,float d)\n{\n    float time = iTime;\n\tfloat val = (0.5+sin(time)*0.5)*0.1;\n\t\n \tfloat x=pow(abs(pos.x), 1.45-val);\n \tfloat y=pow(abs(pos.y), 1.35+val);\n    float n = fbm(pos*2.0+vec2(time*0.25+val,-time*0.35));\n\tfloat colx = n/x*1.2;\n\tfloat coly = n/y*1.2;\n    colx = colx*colx;\n    coly = coly*coly;\n    \n\tvec3 color1=vec3(0.95*colx, 0.4*colx, 0.3*colx);\n\tvec3 color2=vec3(0.95*coly, 0.4*coly, 0.3*coly);\n\tcolor1 *= (pos.x*pos.x)*1.1;\n\tcolor2 *= (pos.y*pos.y)*1.1;\n    \n\tvec3 colora = max(color1,color2);\n\tvec3 colorb = color1*color2;\n    \n\treturn mix(colora,colorb,0.5+sin(d*d+time*1.5)*0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = (-iResolution.xy + 2.0*(fragCoord))/iResolution.y;\n    float time = iTime;\n\tpos *= 5.0+sin(time*0.9)*3.5;\n\tfloat d = length(pos);\n\tpos *= 0.25+(0.5+sin(time*0.25)*0.5)*0.25;\n\tpos *= 2.8;\n\tpos *= rotate((cos(time*.45)*3.14));\n\tvec3 color = DOGSHIT(pos,d);\n\tfragColor=vec4(color, 1.0);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}