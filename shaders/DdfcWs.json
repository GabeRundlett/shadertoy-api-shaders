{
    "Shader": {
        "info": {
            "date": "1687290100",
            "description": "CC0: Last night a DJ saved my life...\nPublished this when lug00ber played: Last night a DJ saved my life...\nA slight rework of: https://www.shadertoy.com/view/ctBSRR",
            "flags": 0,
            "hasliked": 0,
            "id": "DdfcWs",
            "likes": 9,
            "name": "Last night a DJ saved my life...",
            "published": 3,
            "tags": [
                "2d",
                "interference"
            ],
            "usePreview": 0,
            "username": "mrange",
            "viewed": 213
        },
        "renderpass": [
            {
                "code": "// CC0: Last night a DJ saved my life...\n//  Published this when lug00ber played: Last night a DJ saved my life...\n//  A slight rework of: https://www.shadertoy.com/view/ctBSRR\n\n#define TIME        iTime\n#define RESOLUTION  iResolution\n\n#define PI              3.141592654\n#define TAU             (2.0*PI)\n\n\n\nfloat df(vec2 p) {\n  const float m = 0.25;\n  float l = length(p);\n  l = mod(l+(0.5*m), m)-(0.5*m);\n  return abs(l)-(m*0.25);\n}\n\n// License: MIT, author: Inigo Quilez, found: https://www.iquilezles.org/www/articles/smin/smin.htm\nfloat pmin(float a, float b, float k) {\n  float h = clamp(0.5+0.5*(b-a)/k, 0.0, 1.0);\n  return mix(b, a, h) - k*h*(1.0-h);\n}\n\n// License: CC0, author: Mårten Rånge, found: https://github.com/mrange/glsl-snippets\nfloat pmax(float a, float b, float k) {\n  return -pmin(-a, -b, k);\n}\n\n// License: MIT, author: Inigo Quilez, found: https://iquilezles.org/www/articles/distfunctions2d/distfunctions2d.htm\nfloat segment(vec2 p, vec2 a, vec2 b) {\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n// License: MIT, author: Inigo Quilez, found: https://iquilezles.org/www/articles/distfunctions2d/distfunctions2d.htm\nfloat box(vec2 p, vec2 b) {\n  vec2 d = abs(p)-b;\n  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n\nfloat lug00ber(vec2 p) {\n  vec2 p0 = p;\n  p0.y = abs(p0.y);\n  p0 -= vec2(-0.705, 0.41);\n  float d0 = length(p0)-0.16;\n  \n  float topy = 0.68;\n  vec2 bp = p-vec2(0.27, -0.8);\n  float d1 = segment(p, vec2(0.72, topy), vec2(0.27, -0.8))-0.06;\n  float d2 = segment(p, vec2(-0.13, topy), vec2(0.33, -0.8))-0.1;\n  float d3 = p.y-(topy-0.066);\n\n  float d4 = box(p-vec2(-0.1, topy), vec2(0.25, 0.03))-0.01;\n  float d5 = box(p-vec2(0.685, topy), vec2(0.19, 0.03))-0.01;\n  float d6 = min(d4, d5);\n  \n  vec2 ax7 = normalize(vec2(vec2(0.72, topy)-vec2(0.27, -0.8)));\n  vec2 nor7 = vec2(ax7.y, -ax7.x);\n  float d7 = dot(p, nor7)+dot(nor7, -vec2(vec2(0.72, topy)))+0.05;\n  \n  d2 = max(d2, d7);\n  float d = d1;\n  d = pmin(d,d2, 0.025);\n  d = max(d, d3);\n  d = pmin(d, d6, 0.1);\n  d = min(d,d0);\n  \n  return d; \n}\n\n// License: Unknown, author: Unknown, found: shadertoy somewhere, don't remember where\nfloat dfcos(float x) {\n  return sqrt(x*x+1.0)*0.8-1.8;\n}\n\n// License: Unknown, author: Unknown, found: shadertoy somewhere, don't remember where\nfloat dfcos(vec2 p, float freq) {\n  // Approximate distance to cos\n  float x = p.x;\n  float y = p.y;\n  x *= freq;\n\n  float x1 = abs(mod(x+PI,TAU)-PI);\n  float x2 = abs(mod(x   ,TAU)-PI);\n\n  float a = 0.18*freq;\n\n  x1 /= max( y*a+1.0-a,1.0);\n  x2 /= max(-y*a+1.0-a,1.0);\n  return (mix(-dfcos(x2)-1.0,dfcos(x1)+1.0,clamp(y*0.5+0.5,0.0,1.0)))/max(freq*0.8,1.0)+max(abs(y)-1.0,0.0)*sign(y);\n}\n\n\n\nvec3 overlay(vec3 col, vec2 p) {\n  vec2 p0 = p;\n  float dl = lug00ber(p);\n\n  const float z1 = 0.25;\n  vec2 p1 = p;\n  p1.x += 0.1*TIME;\n  p1 /= z1;\n  float dc = dfcos(p1, 0.5)*z1;\n  dc = abs(dc)- mix(0.025, 0.00, smoothstep(0., 2.0, abs(p.x)));\n  float aa = 4.0/RESOLUTION.y;\n  \n  float d = dl;\n  d = pmax(d, -(dc-0.025), 0.025);\n  d = min(d, dc);\n  \n  col = clamp(col, 0.0, 1.0);\n  col *= smoothstep(1.0, 4.0, TIME);\n  col = mix(col, vec3(0.925), smoothstep(0.0, -aa, d));\n  \n  return col;\n}\n#define ROT(a)      mat2(cos(a), sin(a), -sin(a), cos(a))\n\nvec3 effect(vec2 p, vec2 pp) {\n  float aa = 2.0/RESOLUTION.y;\n  float tm = TIME*0.25;\n  vec2 op = p;\n  // Random stuff to make the lights move somewhat interesting.\n  vec2 off = 0.25*sin(vec2(0.3, sqrt(0.15))*(tm*0.25));\n  p -= off;\n  p *= ROT(0.5*tm);\n  p += off;\n  vec2 p0 = p+sin(vec2(1.0, sqrt(0.5))*(tm+100.0));\n  vec2 p1 = p+sin(1.2*vec2(1.0, sqrt(0.5))*(tm+200.0));\n  float sm = 0.0666*length(p);\n  float d0 = df(p0);\n  float d1 = df(p1);\n  float d = d0;\n  d = pmax(d, d1, sm);\n  float dd = -d0;\n  dd = pmax(dd, -d1, sm);\n  d =  min(d, dd);\n  const float so = 8.0;\n  const float co = 0.5;\n  vec3 bcol0 = (1.0+sin(vec3(0.0, 1.0, 2.0) + co*length(p0)+1.0-TIME))/(so*dot(p0, p0)+0.0001);\n  vec3 bcol1 = (1.0+sin(vec3(0.0, 1.0, 2.0) + co*length(p1)+3.0+TIME))/(so*dot(p1, p1)+0.0001);\n  vec3 bcol = (bcol0+bcol1);\n  vec3 col = vec3(0.0);\n  col += 0.005*bcol/(max(dd+0.005, 0.0)+0.0001);\n  col = mix(col, bcol, smoothstep(aa, -aa, d));\n  col -= 0.25*vec3(0.0, 1.0, 2.0).zyx*length(pp);\n  col *= smoothstep(1.5, 0.5, length(pp));\n  col = overlay(col, op);\n  col = clamp(col, 0.0, 1.0);\n  col = sqrt(col);\n  return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 q = fragCoord/RESOLUTION.xy;\n  vec2 p = -1. + 2. * q;\n  vec2 pp = p;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n  vec3 col = effect(p, pp);\n  \n  fragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}