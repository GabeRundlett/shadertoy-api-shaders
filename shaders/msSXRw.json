{
    "Shader": {
        "info": {
            "date": "1670039031",
            "description": "Created a prompt for ChatGPT and got a simple static noise output. Changed a bit to make it animated.",
            "flags": 0,
            "hasliked": 0,
            "id": "msSXRw",
            "likes": 2,
            "name": "animated pseudo-random noise",
            "published": 3,
            "tags": [
                "noise",
                "pseudorandom",
                "staticnoise",
                "chatgpt"
            ],
            "usePreview": 0,
            "username": "centucore",
            "viewed": 285
        },
        "renderpass": [
            {
                "code": "float noise(vec2 st) {\n    return fract(sin(dot(st, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat noise2(vec2 co, float seed)\n{\n    vec4 s = vec4(seed, seed, seed, seed);\n    seed = fract(sin(dot(s.xyzw, vec4(123456789.0, 362436069.0, 521288629.0, 88675123.0))) * 43758.5453);\n    return fract(sin(dot(co.xy + s.xz ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n// Define the main function for the shader, which will be called once for each pixel on the screen\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Calculate the current position of the pixel in the coordinate space of the shader\n    vec2 st = fragCoord.xy/iResolution.xy;\n\n    // Get noise for prev frame and current\n    float n1 = noise(st * (iTime - iTimeDelta));\n    float n2 = noise(st * iTime);\n\n    // Blend between prev & current -> animated\n    vec4 c1 = vec4(n1, n1, n1, 1.0);\n    vec4 c2 = vec4(n2, n2, n2, 1.0);\n    \n\n    fragColor = mix(c1, c2, n1);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}