{
    "Shader": {
        "info": {
            "date": "1715364264",
            "description": "Just a little something. Works nice on the big screen.",
            "flags": 0,
            "hasliked": 0,
            "id": "McGXDh",
            "likes": 3,
            "name": "Perfect Night on the Lake",
            "published": 3,
            "tags": [
                "2d",
                "random",
                "moon",
                "lake"
            ],
            "usePreview": 0,
            "username": "dray",
            "viewed": 211
        },
        "renderpass": [
            {
                "code": "// David Rayna 2024\n\n// It is dark outside, so I can get away with lots of low-tech beginner solutions \n\nfloat noisei(int a) {\n  a = (a * 54321) ^ (a * 14873);\n  a ^= a >> 8;\n  a ^= a >> 7;\n  a ^= a >> 6;\n  a ^= a >> 5;\n  a ^= a >> 4;\n  a ^= a >> 3;\n  a ^= a >> 2;\n  a ^= a >> 1;\n  return float( a & 65535 ) / 65536. ;\n}\n\nfloat noise(float i) { return noisei(int(i)); }\n\nfloat seed = 0.;\nfloat rndb(float l,float h) {\n  seed += 5.5;\n  return noise(seed) * ( h - l ) + l;\n}\n\nfloat scale(float a,float b,float x) {\n  return a + ( b- a ) * x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float kk;\n    seed = 0.;\n    if ( fragCoord.y > iResolution.y/2.) {\n        kk = .05;\n        for ( int stars=0; stars< 100; ++stars ) {\n          // the slight star motion is a little like changing air refraction that causes twinkling\n          float dd = distance( fragCoord, vec2( rndb(0.,iResolution.x)+sin(iTime*.1)*6., rndb(iResolution.y*.55,iResolution.y) ) );\n          if ( dd < .8 ) kk = .75;\n        }\n        float dd = distance( fragCoord, vec2(iResolution.x*.75,iResolution.y*.75 ));\n        if ( dd < iResolution.y/8. ) {  kk = .9;  }\n        #define C(X,Y,D) if ( distance(fragCoord,vec2(iResolution.x*X,iResolution.y*Y))<iResolution.y*D ) kk=0.;\n        C(.0,.5,.2)\n        C(.2,.4,.3)\n        C(.3,.3,.3)\n        C(.1,.6,.1)\n    } else {\n        // the cycling dark/light of tiny patches of water is similar to how they will reflect a light source then not\n        kk = mod( noise( fragCoord.x /4.+ fragCoord.y* 1234./4.) + iTime, 1.);\n        kk = scale( kk, .5, fragCoord.y / iResolution.y  * 2. );\n        float jj = .7 * max( 0., 1. - 5.*abs( fragCoord.x / iResolution.x - ( .55 + fragCoord.y / iResolution.y * .3 ) ) );\n        kk += jj * jj;\n    }\n    fragColor = vec4( vec3(kk), 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}