{
    "Shader": {
        "info": {
            "date": "1611068233",
            "description": "derived from the 10 print exampel made by @patriciogv ",
            "flags": 0,
            "hasliked": 0,
            "id": "wtKcWW",
            "likes": 0,
            "name": "psychedelic vertigo",
            "published": 3,
            "tags": [
                "circles",
                "sin",
                "color",
                "random",
                "rotate",
                "atan",
                "cos",
                "psychedelic",
                "shader",
                "truchet",
                "pattern",
                "tile",
                "maze",
                "scale",
                "tan",
                "10print",
                "vertigo"
            ],
            "usePreview": 0,
            "username": "YitingLiu",
            "viewed": 279
        },
        "renderpass": [
            {
                "code": "\n// Learned from The Book of Shader https://thebookofshaders.com/10/?lan=ch\n// Derived from 10 print from @patriciogv - 2015\n// Title: Truchet - 10 print\n\n\n#define PI 3.14159265358979323846\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        1000.*iTime);\n}\n\nvec2 truchetPattern(in vec2 _st, in float _index){\n    _index = fract(((_index-0.5)*2.0));\n    if (_index > 0.75) {\n        _st = vec2(1.0) - _st;\n    } else if (_index > 0.5) {\n        _st = vec2(1.0-_st.x,_st.y);\n    } else if (_index > 0.25) {\n        _st = 1.0-vec2(1.0-_st.x,_st.y);\n    }\n    return _st;\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st *= 10.0;\n    st -=5.;\n    st = rotate2d( sin(iTime)*PI ) * st;\nst+=5.;\n    st = (st-vec2(5.0))*(abs(sin(iTime/5.))*5.);\n\n    vec2 ipos = floor(st);  // integer\n    vec2 fpos = fract(st);  // fraction\n\n    vec2 tile = truchetPattern(fpos, random( ipos ));\n\n\n    float color = 0.0;\n\n    // Maze\n    color = smoothstep(tile.x-1.,tile.x,tile.y)-\n            smoothstep(tile.x,tile.x+1.,tile.y);\n\n    // Circles\n    color *= (step(length(tile),0.6) -\n             step(length(tile),0.4) ) +\n            (step(length(tile-vec2(1.)),0.6) -\n             step(length(tile-vec2(1.)),0.4) );\n\n    // Truchet (2 triangles)\n    // color += step(tile.x,tile.y/tile.x);\n\n    fragColor = vec4(vec3(st.x*color*abs(sin(iTime)),st.y/fpos.x*sin(iTime),color*abs(sin(iTime))),1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}