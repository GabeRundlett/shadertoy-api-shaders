{
    "Shader": {
        "info": {
            "date": "1720598194",
            "description": "React",
            "flags": 0,
            "hasliked": 0,
            "id": "MXVXDc",
            "likes": 1,
            "name": "SDF_React",
            "published": 3,
            "tags": [
                "sdf"
            ],
            "usePreview": 0,
            "username": "CuriosityWang",
            "viewed": 123
        },
        "renderpass": [
            {
                "code": "\n\nfloat sdf_rect_annuer(vec2 point, vec2 half_size) {\n    \n    point = abs(point);\n\n    // 计算每个点到两个边的距离\n    float x_dist = point.x - half_size.x;\n    float y_dist = point.y - half_size.y;\n  \t// 如果一正一负，或者全是负数\n  \t// 则可以直接取max(x_dist, y_dist)作为对应点的SDF值\n  \n    // distance to corner\n    float c_dist = length(point - half_size); // 求一下到corner的距离\n    // 如果都为正数，说明是C、D点的情况，则要返回到corner的距离\n    float res = x_dist > 0.0 && y_dist > 0.0 ?\n           c_dist :\n           max(x_dist, y_dist);\n    return  abs(res) - 0.02 ;\n}\n\nfloat sdf_rect(vec2 point, vec2 half_size) {\n    \n    point = abs(point);\n\n    // 计算每个点到两个边的距离\n    float x_dist = point.x - half_size.x;\n    float y_dist = point.y - half_size.y;\n  \t// 如果一正一负，或者全是负数\n  \t// 则可以直接取max(x_dist, y_dist)作为对应点的SDF值\n  \n    // distance to corner\n    float c_dist = length(point - half_size); // 求一下到corner的距离\n    // 如果都为正数，说明是C、D点的情况，则要返回到corner的距离\n    float res = x_dist > 0.0 && y_dist > 0.0 ?\n           c_dist :\n           max(x_dist, y_dist);\n    return  res;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    \n\tfloat d =  2.4 * sdf_rect(p/0.8, vec2(0.2, 0.4));\n    float stepD = step(0.0, d);\n    \n    vec3 color1 = vec3(0.7, 0.45, 0.67);\n    vec3 color2 = vec3(1., 1., 1.);\n    \n    vec3 color = mix(color1, color2, stepD);\n    \n\tfragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}