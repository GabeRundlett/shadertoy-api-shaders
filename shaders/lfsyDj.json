{
    "Shader": {
        "info": {
            "date": "1721631499",
            "description": "sources https://www.shadertoy.com/view/4scGWj \nhttps://www.shadertoy.com/view/dl3Xz8",
            "flags": 0,
            "hasliked": 0,
            "id": "lfsyDj",
            "likes": 3,
            "name": "fractal with  lightning",
            "published": 3,
            "tags": [
                "fractal",
                "lightning"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 152
        },
        "renderpass": [
            {
                "code": "\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h) (cos((h)*6.3+vec3(200,73,21))*0.5+0.5)\n\nvec3 random3(vec3 c) {\n\tfloat j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));\n\tvec3 r;\n\tr.z = fract(512.0*j);\n\tj *= .125;\n\tr.x = fract(512.0*j);\n\tj *= .125;\n\tr.y = fract(512.0*j);\n\treturn r-0.5;\n}\n\n/* skew constants for 3d simplex functions */\nconst float F3 =  0.3333333;\nconst float G3 =  0.1666667;\n\n/* 3d simplex noise */\nfloat simplex3d(vec3 p) {\n\t\n\t /* calculate s and x */\n\t vec3 s = floor(p + dot(p, vec3(F3)));\n\t vec3 x = p - s + dot(s, vec3(G3));\n\t \n\t /* calculate i1 and i2 */\n\t vec3 e = step(vec3(0.0), x - x.yzx);\n\t vec3 i1 = e*(1.0 - e.zxy);\n\t vec3 i2 = 1.0 - e.zxy*(1.0 - e);\n\t \t\n\t /* x1, x2, x3 */\n\t vec3 x1 = x - i1 + G3;\n\t vec3 x2 = x - i2 + 2.0*G3;\n\t vec3 x3 = x - 1.0 + 3.0*G3;\n\t \n\t /* 2. find four surflets and store them in d */\n\t vec4 w, d;\n\t \n\t /* calculate surflet weights */\n\t w.x = dot(x, x);\n\t w.y = dot(x1, x1);\n\t w.z = dot(x2, x2);\n\t w.w = dot(x3, x3);\n\t \n\t /* w fades from 0.6 at the center of the surflet to 0.0 at the margin */\n\t w = max(0.6 - w, 0.0);\n\t \n\t /* calculate surflet components */\n\t d.x = dot(random3(s), x);\n\t d.y = dot(random3(s + i1), x1);\n\t d.z = dot(random3(s + i2), x2);\n\t d.w = dot(random3(s + 1.0), x3);\n\t \n\t /* multiply d by w^4 */\n\t w *= w;\n\t w *= w;\n\t d *= w;\n\t \n\t /* 3. return the sum of the four surflets */\n\t return dot(d, vec4(52.0));\n}\n\nfloat noise(vec3 m) {\n    return   0.5333333*simplex3d(m)\n\t\t\t+0.2666667*simplex3d(2.0*m)\n\t\t\t+0.1333333*simplex3d(4.0*m)\n\t\t\t+0.0666667*simplex3d(8.0*m);\n}\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    \n    vec2 uv = C.xy/ iResolution.xy;    \n  uv = uv * 2. -1.;  \n  float angle=1.58;\n uv*=mat2(cos(angle),sin(angle),-sin(angle), cos(angle));\n  vec2 p2 = C.xy/iResolution.x;\n  vec3 p3 = vec3(p2, iTime*0.24);    \n    \n  float intensity = noise(vec3(p3*12.5+12.0));\n                          \n  float t = clamp((uv.x * -uv.x * 1.16) + 0.15, 0., 1.);                         \n  float y = abs(intensity * -t + uv.y);\n    \n  float g = pow(y, 0.2);\n                          \n  vec3 col = vec3(1.00, 1.08,1.0)*1.2;\n  col = col * -g + col;                    \n  col = col * col;\n  col = col * col;\n                          \n                           \n  O.w = 1.;  \n    vec3 p,q,r=iResolution,\n    d=normalize(vec3((C-.5*r.xy)/r.y,1.*1.7)); \n   p.y<p.z?p=p.xzy:p;\n  \n    for(float i=0.,s,e,g=1.;\n        ++i<60./*80.*/;\n        O.yxz+=.14*abs(cos(d+log(s)*.13))*exp(-1.5*0.7*i*i*e)\n  \n    ) \n    {\n        p=g*d;\n       \n        p.z-=2.5*(1.+0.2*sin(iTime*0.20));\n     \n        p=R(p,normalize(vec3(0,2,0)),iTime*1.2);\n        q=p;\n        s=1.5;\n        for(int j=0;j++< 10; )\n  \n            p=sign(p)*(1.2-abs(p-1.2)),\n           \n         \n          p=p*(e=8.5/clamp(dot(p,p),.5*.75+0.1*cos(iTime),5.*1.125))+q*0. -vec3(1.3,8.*1.5,0.3) , s*=e;\n             \n        g+=e=length(p)/s +(0.0001);\n    }\n     O.rgb += col;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}