{
    "Shader": {
        "info": {
            "date": "1683354109",
            "description": "Another interesting rug pattern.",
            "flags": 8,
            "hasliked": 0,
            "id": "Dld3Ds",
            "likes": 6,
            "name": "Rainbow rug (music)",
            "published": 3,
            "tags": [
                "fractal",
                "mosaic",
                "carpet",
                "rug"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 167
        },
        "renderpass": [
            {
                "code": "vec2 triangle_wave(vec2 a){\n    vec2 a2 =\n        vec2(1.,0.5)\n    ,\n    a1 = a+a2;\n    return\n        abs(fract((a1)*(a2.x+a2.y))-.5)\n    ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 1.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv.y += (iTime/2.0,iTime/3.0)/t1/8.0;\n    if(iMouse.z>.5)\n    uv = uv.xy + iMouse.xy / iResolution.xy/t1;\n    vec2 t2 = vec2(0.);\n    bool b = true;\n    vec2 uv1 = uv;\n    uv.x = mod(uv.x,.5)+.25;\n    //uv.y = mod(uv.y,1.)-.5;\n    uv.y = mod(uv.y,.5)+2.;\n    for(int k = 0; k < 9; k++){\n        uv =\n            abs(-.5+uv-t2*sign(uv.y-uv.x))/1.5+1.\n        ;\n        b = uv.y>uv.x;\n        if(b) uv = uv.yx;\n        t2 =\n            triangle_wave(uv-.5*sign(uv.y-uv.x)).yx\n        ;\n        uv =\n            t2+triangle_wave(uv.yx).yx\n        ;\n        if(uv.y>uv.x)\n        //{t2 = t2.yx; uv=uv.yx;}\n        col.x =\n            abs((uv.x)-col.x)\n        ;\n        col.xyz =\n            abs(col.yzx-float(b)/2.)\n        ;\n    }\n    if (!b) col = 1.-col;\n    fragColor = vec4(min(col,vec3(1.)),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//remix of: https://www.shadertoy.com/view/csK3zm\n\n#define fmod(x,y) floor(max(mod(floor(-(x))/2.,y),mod(floor(x)*2.,y)))\n#define fmod1(x,y) floor(min(mod(floor(-(x))/2.,y),mod(floor(x)*2.,y)))\nvec2 mainSound(int samp, float time){  \n  float tempo = .5;\n  time /= tempo;\n  float s2 = pow(2.,1.+fmod1(time/4.,3.)),\n  s1 = pow(2.,fmod(time*s2*2.,3.)),\n  m1 = s1*(1.+fmod(time/s2/s1*2.+1.,2.)),\n  t = time/s1/pow(2.,fmod1(time/5./8.,5.))*2.,\n  t1 = 1.+fmod(t/s1,2.),\n  m4 = fmod1(t*s1/t1,s2),\n  m3 = fmod(t*s1/m1,s2);\n  t *= s1/t1;\n  float m2 = 1. + fmod(t,s1),\n  a = 8.*(abs(.5+abs(fract(-t)))/1.5),\n  nb = time*tempo*pow(2.,(m3+m2)/5.+7.5);\n  return abs(abs(1./s1-1./s2)/8.-abs(vec2(sin(nb),cos(nb))))*a;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}