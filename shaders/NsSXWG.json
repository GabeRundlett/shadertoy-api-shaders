{
    "Shader": {
        "info": {
            "date": "1620950889",
            "description": "Testing understanding of matrix multiplication. I write my shader code in a style that can compile to GLSL _AND_ C99 so I can unit test my code. Sometimes requires that I create CPU-side C99 polyfills of GLSL functionality. www.twitch.com/kanjicoder",
            "flags": 0,
            "hasliked": 0,
            "id": "NsSXWG",
            "likes": 0,
            "name": "vec.xy * mat2",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "DEKTEN",
            "viewed": 627
        },
        "renderpass": [
            {
                "code": "    void mainImage( out vec4 fragColor, in vec2 fragCoord )\n    {\n        /**@VID_IID[0300]TIME[03:23:23]DONE_WRITING_CODE**/\n        /**TWITCH[ www.twitch.com/kanjicoder ]************/\n\n        vec2 uv = fragCoord/iResolution.xy;\n\n        vec3 rd;\n             rd.x=( 1.0 );\n             rd.y=( 2.0 );\n             rd.z=( 3.0 );\n\n        //:--------------------------------------------------://\n        //:  VECTORS AND SUB VECTORS ARE \"ROW VECTORS\"       ://\n        //:  rd.xy is __NOT__ a column vector:               ://\n        //:  (2X1)  *  (2X2) == NOT POSSIBLE!                ://\n        //:     |       |                                    ://\n        //:     +---+---+                                    ://\n        //:         |                                        ://\n        //:      NOT_MATCH!                                  ://\n        //:                                                  ://\n        //:  rd.xy  *  mat2(10,20,30,40)                     ://\n        //:  +- -+     +-     -+                             ://\n        //:  |1.0|     |10 , 30|                             ://\n        //:  |   |  *  |       | == INVALID_OPERATION        ://\n        //:  |2.0|     |20 , 40|                             ://\n        //:  +- -+     +-     -+                             ://\n        //:--------------------------------------------------://\n        //:  rd.xy is __IS__  a row vector:                  ://\n        //:  (1X2)  *  (2X2) == __IS__ possible              ://\n        //:     |       |                                    ://\n        //:     +---+---+                                    ://\n        //:         |                                        ://\n        //:      YES_MATCH!                                  ://\n        //:--------------------------------------------------://\n        //:                                                  ://\n        //:                  +---+---+                       ://\n        //:                  |10 |30 |                       ://\n        //:                  +---+---+ <--[ mat2(10,20,30,40) ]\n        //:                  |20 |40 |                       ://\n        //:                  +---+---+                       ://\n        //:        +---+---+ +---+---+                       ://\n        //: rd.xy==|1.0|2.0| | x | y |                       ://\n        //:        +---+---+ +---+---+                       ://\n        //:                                                  ://\n        //:        x =( (1.0*10)+(2.0*20) ) ===>  50         ://\n        //:        y =( (1.0*30)+(2.0*40) ) ===> 110         ://\n        //:--------------------------------------------------://\n\n        rd.xy = rd.xy*mat2(10,20,30,40);\n     \n        if( rd.x == 50.0 && rd.y == 110.0 ){  \n            //:GREEN SCREEN: KNOW WHAT YOU ARE TALKING ABOUT:\n            fragColor = vec4(0,1,0,1.0); \n        }else{\n            //:BLACK SCREEN: WE ARE BEING IDIOTS:\n            fragColor = vec4(0,0,0,1.0);\n        };;\n    }",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}