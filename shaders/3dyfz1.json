{
    "Shader": {
        "info": {
            "date": "1606516318",
            "description": "some stuff for cookie collective stream, modified a bit.",
            "flags": 0,
            "hasliked": 0,
            "id": "3dyfz1",
            "likes": 4,
            "name": "Day 339 - Cookie Collective",
            "published": 3,
            "tags": [
                "mdtmjvm"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 394
        },
        "renderpass": [
            {
                "code": "// Improv live coded in 30 minutes\n\n\nvec4 noise(float t){return texture(iChannel0,vec2(floor(t), floor(t))/256.);}\nvec4 valueNoise(vec2 t, float w){\n    vec2 fr = fract(t);\n\treturn \n        mix(\n            mix( \n                texture(iChannel0,vec2(floor(t.x), floor(t.y))/256.),\n                texture(iChannel0,vec2(floor(t.x), floor(t.y) + 1.)/256.),\n            \tsmoothstep(0.,1.,fr.y)\n            ),\n            mix( \n                texture(iChannel0,vec2(floor(t.x) + 1.,floor(t.y))/256.),\n                texture(iChannel0,vec2(floor(t.x) + 1.,floor(t.y) + 1.)/256.),\n            \tsmoothstep(0.,1.,fr.y)\n            ),\n            smoothstep(0.,1.,pow(fr.x, w)));\n}\nvec4 fbm(vec2 uv){\n\tvec4 n = vec4(0);\n    uv *= iResolution.xy/vec2(800.,450.);\n\tn += valueNoise(uv*60.,0.1);\n    n += valueNoise(uv*1700.,0.1)*0.5;\n    n += valueNoise(uv*10.,1.1)*0.1;\n    n -= valueNoise(uv*10. + 4.,0.1)*1.;\n    n -= valueNoise(uv*20.,0.5)*0.2;\n    \n    \n    //n = valueNoise(uv*3.,19.9)*1.;\n    n = max(n, 0.);\n    return n;\n}\n#define T iTime\n\n#define pi acos(-1.)\n#define rot(j) mat2(cos(j),sin(j),-sin(j),cos(j))\n\nfloat sdLine(vec2 uv,vec2 a, vec2 b){\n  float d = 10e5;\n  vec2 dir = normalize(b - a);\n  float ang = atan(dir.y, dir.x);\n  \n  vec2 uvrota = (uv - a)*rot(ang);\n  vec2 uvrotb = (uv - b)*rot(ang);\n  \n  d = abs( uvrota.y);\n  \n  d = max(d, -(uvrota).x);\n  d = max(d, (uvrotb).x);\n  \n  return d;\n}\n\n#define xor(a,b,c) min(max(a,-b),max(-a+c,b))\n\nfloat r11(float a){ return fract(sin(a*225.12321)*21.45123);}\n\nfloat fbm(float a){ return mix(r11(floor(a)),r11(floor(a) + 1.),fract(a));}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n\n    vec2 oouv = uv;\n  \tvec3 col = vec3(0);\n\tfloat seg = floor(T/4.);\n  \tfor(float i = 0.; i < 3.; i++){\n        uv = oouv + i*.04*pow(length(uv),4. - fbm(T));\n\n        float r = r11(seg);\n        float rb = r11(seg + 2.);\n\n        float d = 10e5;\n\n        float ang = floor(r*4. + 4.)*pi/4.;\n\n        float amt = floor(r*9.);\n\n        #define md(g) fbm(T*(0.1 + rb) + g)\n        vec2 ouv = uv;\n        uv *= rot(ang);\n        for(float ii = 0.; ii < amt + 2.; ii++){\n          float rc = r11(ii + seg);\n          float rd = r11(ii + seg +21421.3213);\n          //float l = sdLine(uv + vec2(0 + md(i*0.02)*0.,0),vec2(0. - rc,0.), vec2(0. + rd,0.)) - 1.;\n          float l = sdLine(uv + vec2(0. + md(ii*0.42)*0.6,0),vec2(0. - rc,0.), vec2(0. + rd,0.)) - 0.01;\n          uv.y += r11(ii + seg + 124.213)*0.1;\n\n\n\n          d = min(d,l);\n\n        }\n\n\n        for(float ii = 0.; ii < amt + 3.; ii++){\n            uv = abs(uv) - 0.2*r;\n            float b = length(uv) - 0.2;\n            b = abs(b) - r11(ii + 12. + seg)*0.04;\n\n            d = xor(d,b,0.2);\n        }\n\n        d = smoothstep(dFdx(ouv.x),0.,d);\n        col[int(i)] += d;\n        \n        \n        //col = mix(col,vec3(1),smoothstep(dFdx(uv.x)*2.,0.,d + dFdx(uv.x)*0.));\n\n\n        vec4 f = smoothstep(0.,1.,fbm(uv*50.));\n        vec4 g = smoothstep(0.,1.,fbm(uv*60. - 0.4));\n\n        f.x = pow(f.x, 5.);\n\n        float n = 0.;\n        n += f.x*.5;\n        n += pow(f.y,7.)*2.5;\n        n += pow(f.z,6.)*2.5;\n        n += pow(f.w,3.)*0.1;\n\n        n += pow(g.x,6.)*3.;\n        n += pow(g.y,4.)*1.;\n        n += pow(g.z,4.)*1.;\n\n\n        n = min(n,0.5);\n\n\n        col = max(col,0.002);\n\n        if(col.x > 0.1){\n            col -= n*1.7;\n            //col -= pow(g,5.)*2.5;\n            //col -= pow(g,2.)*.9;\n        }\n        else{\n            col += pow(n,2.)*0.1;\n            //col += f*4.;\n\n        }    \n\n    \n        \n        \n        \n  \t}\n \n      col *= vec3(1.06,0.98,0.9);\n\n\tcol = pow(max(col,0.),vec3(0.454545));\n\n    \n    if (mod(seg,4.) == 0.){\n        col = 1. - col;\n    }\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}