{
    "Shader": {
        "info": {
            "date": "1468186596",
            "description": "Entry for https://www.shadertoy.com/events/competition2016 .\nFor extra speed tweak *playbackTime* param :)",
            "flags": 0,
            "hasliked": 0,
            "id": "4td3z4",
            "likes": 21,
            "name": "[SH16B] Super Meat Boy",
            "published": 3,
            "tags": [
                "game",
                "videogame",
                "sh16b",
                "supermeatboy"
            ],
            "usePreview": 0,
            "username": "mlkn",
            "viewed": 824
        },
        "renderpass": [
            {
                "code": "#define playbackTime 13.0\n#define speedUpAtTheEnd true\n#define drawMouth true\n#define M_PI 3.141592\n\nvec2 p;\nvec3 v0, v1,\n     color = vec3(0),\n\t diskColor = vec3(0.3, 0.2, 0.6),\n     wallColor = vec3(0.2, 0.6, 0.3),\n     meatColor = vec3(1., 0., 0.),\n     girlColor = vec3(0.9, 0.5, 0.5),\n     eyeColor = vec3(0.),\n     mouthColor = vec3(0.9),\n     lavaColor = vec3(0.5, 0.2, 0.2),\n     stickColor = vec3(0.3),\n     greyColor = vec3(0.15);\n\nfloat t,\n\t  mSize = 0.025,\n      mBotGap = 0.01,\n\t  bBotGap = 0.01,\n\t  slidingWallExtraWidth = 0.003;\n\nfloat dist(vec2 a, vec2 b) {\n\treturn sqrt((b.x-a.x)*(b.x-a.x) + (b.y-a.y)*(b.y-a.y));\n}\n\nvoid drawDisk(vec2 center, float radius, float spikeHeight, float spikeCount, float rotSpeed) {\n    float a, d = dist(center, p);\n    \n    a = atan(p.y - center.y, p.x - center.x) + M_PI; // [0, 2*M_PI]\n    a = spikeCount * a / (2. * M_PI) + t * rotSpeed;\n    a = abs(mod(a, 1.) - 0.5) * 2.;\n    \n    if (d < radius - spikeHeight + spikeHeight*a) color = diskColor;\n    if (d < radius / 4.) color = greyColor;\n\n}\n\nvoid drawStick(vec2 a, vec2 b, float w) {\n    v0 = vec3(b - a, 0.);\n    v1 = vec3(p - a, 0.);\n    float stickLength = length(v0);\n    float distToStick = length(cross(v0, v1)) / length(v0);\n    v0.xy = a + v0.xy/2.;\n    \n    if ((distToStick < w && dist(v0.xy, p) < stickLength / 2.) ||\n        dist(p, a) < w || dist(p, b) < w) color = stickColor;\n}\n\nvoid drawMeatBoy(){\n    \n    float keyTimes[40];\n    keyTimes[0] = 0.0;\n    keyTimes[1] = 0.015;\n    keyTimes[2] = 0.02;\n    keyTimes[3] = 0.04;\n    keyTimes[4] = 0.05;\n    keyTimes[5] = 0.075;\n    keyTimes[6] = 0.08;\n    keyTimes[7] = 0.1;\n    keyTimes[8] = 0.105;\n    keyTimes[9] = 0.135;\n    keyTimes[10] = 0.144;\n    keyTimes[11] = 0.157;\n    keyTimes[12] = 0.163;\n    keyTimes[13] = 0.176;\n    keyTimes[14] = 0.207;\n    keyTimes[15] = 0.218;\n    keyTimes[16] = 0.252;\n    keyTimes[17] = 0.260;\n    keyTimes[18] = 0.278;\n    keyTimes[19] = 0.283;\n    keyTimes[20] = 0.302;\n    keyTimes[21] = 0.325;\n    keyTimes[22] = 0.337;\n    keyTimes[23] = 0.344;\n    keyTimes[24] = 0.395;\n    keyTimes[25] = 0.404;\n    keyTimes[26] = 0.44;\n    keyTimes[27] = 0.45;\n    keyTimes[28] = 0.49;\n    keyTimes[29] = 0.505;\n    keyTimes[30] = 0.517;\n    keyTimes[31] = 0.527;\n    keyTimes[32] = 0.54;\n    keyTimes[33] = 0.55;\n    keyTimes[34] = 0.58;\n    keyTimes[35] = 0.588;\n    keyTimes[36] = 0.595;\n    keyTimes[37] = 0.975;\n    keyTimes[38] = 0.985;\n    keyTimes[39] = 0.995;\n    \n    bool mDrawMouth = drawMouth;\n    vec2 mPos = vec2(0.3, 0.085);\n    float mDir = 0.;\n    float angle = 0.;\n    float rt; // anim time piece in [0, 1]\n\n    if (t < keyTimes[1]) { // [0.2, 0.085]\n        \n        rt = t/keyTimes[1];\n        mPos.x = mix(0.09, 0.2, rt*rt*rt);\n        angle = mix(0., -0.25,  1. - abs(0.5 - rt) / 0.5);\n        mDir = 2.;\n        \n    } \n    if (t > keyTimes[1] && t < keyTimes[2]) { // [0.2, 0.085]\n        \n        mPos.x = 0.2;\n        \n    }\n    if (t > keyTimes[2] && t < keyTimes[3]){ // [0.4, 0.275]\n        \n        rt = (t - keyTimes[2])/(keyTimes[3] - keyTimes[2]);\n        rt = pow(rt, 0.8);\n        mPos.x = mix(0.2, 0.4, rt);\n        mPos.y = 0.2*sin(rt*M_PI/2.) + 0.085;\n        angle = mix(0., -0.25, rt);\n        mDir = 2.;\n        \n    }\n    if (t > keyTimes[3] && t < keyTimes[4]) { // [0.4, 0.18]\n        \n        rt = (t - keyTimes[3])/(keyTimes[4] - keyTimes[3]);\n        mPos.x = 0.4;\n        mPos.y = mix(0.275, 0.18, rt);\n        angle = mix(0.1, 0.25, rt);\n        mDir = -1.;\n        \n    } \n    if (t > keyTimes[4] && t < keyTimes[5]) { // [0.075, 0.32]\n        \n        rt = (t - keyTimes[4])/(keyTimes[5] - keyTimes[4]);\n\t\tmPos.x = mix(0.4, 0.075, rt);\n        mPos.y = -3.4358974359 * mPos.x * mPos.x + \n            1.20128205128 * mPos.x + 0.249230769231;\n        angle = mix(0.25, 0.1, rt);\n        mDir = mix(-1., 0., rt);\n        \n    } \n    if (t > keyTimes[5] && t < keyTimes[6]) { // [0.075, 0.3]\n        \n        rt = (t - keyTimes[5])/(keyTimes[6] - keyTimes[5]);\n        mPos.x = 0.075;\n        mPos.y = mix(0.32, 0.3, rt);\n        angle = -0.15;\n        mDir = 1.;\n    \n    }\n    if (t > keyTimes[6] && t < keyTimes[7]) { // [0.075, 0.45]\n    \n        rt = (t - keyTimes[6])/(keyTimes[7] - keyTimes[6]);\n        mPos.y = mix(0.3, 0.45, rt);\n        mPos.x = -12.5 * mPos.y * mPos.y + 9.375 * mPos.y - 1.6125;\n        mPos.y += mix(0., 0.07, 1. - abs(rt*rt-0.5)/ 0.5);\n        angle = mix(-0.15, 0.15, rt);\n        mDir = rt < 0.4 ? 2. : -1.;\n    \n    }\n    if (t > keyTimes[7] && t < keyTimes[8]) { // [0.075, 0.42]\n        \n        rt = (t - keyTimes[7])/(keyTimes[8] - keyTimes[7]);\n        mPos.x = 0.075;\n        mPos.y = mix(0.45, 0.42, rt);\n        angle = -0.15;\n        mDir = 1.;\n        \n    }\n    if (t > keyTimes[8] && t < keyTimes[9]) { // [0.54, 0.625]\n    \n        rt = (t - keyTimes[8])/(keyTimes[9] - keyTimes[8]);\n    \tmPos.x = mix(0.075, 0.54, rt);\n        mPos.y = -3.33099579243 * mPos.x * mPos.x + 2.4894226274 * mPos.x + 0.252030154278;\n        angle = mix(-0.15, 0.0, rt);\n        mBotGap = mix(mBotGap, mBotGap/3., rt);\n        mDir = mix(1., 2., rt);\n        \n    }\n    if (t > keyTimes[9] && t < keyTimes[10]) { // [0.54, 0.625]\n        \n    \tmPos.x = 0.54;\n        mPos.y = 0.625;\n        angle = 0.4;\n        mBotGap /= 3.;\n    \n    } \n    if (t > keyTimes[10] && t < keyTimes[11]){ // [0.46, 0.59]\n        \n        rt = (t - keyTimes[10])/(keyTimes[11] - keyTimes[10]);\n        rt = pow(rt, 0.85);\n        mPos.x = mix(0.54, 0.46, rt);\n        mPos.y = mix(0.625, 0.59, rt);\n        angle = 0.4;\n        mBotGap /= 3.;\n        mDir = -1.;\n        \n    }\n    if (t > keyTimes[11] && t < keyTimes[12]) { // [0.46, 0.59]\n    \t\n        mPos.x = 0.46;\n        mPos.y = 0.59;\n        angle = 0.4;\n        mBotGap /= 3.;\n    \n    }\n    if (t > keyTimes[12] && t < keyTimes[13]) { // [0.54, 0.625]\n        \n        rt = (t - keyTimes[12])/(keyTimes[13] - keyTimes[12]);\n        rt = pow(rt, 0.85);\n    \tmPos.x = mix(0.46, 0.54, rt);\n        mPos.y = mix(0.59, 0.625, rt);\n        angle = 0.4;\n        mBotGap /= 3.;\n        mDir = 1.;\n        \n    }\n    if (t > keyTimes[13] && t < keyTimes[14]) { // [0.95, 0.75]\n    \n    \trt = (t - keyTimes[13])/(keyTimes[14] - keyTimes[13]);\n    \tmPos.x = mix(0.54, 0.95, rt);\n        mPos.y = -3.51849690746 * mPos.x * mPos.x + 5.54743844089 * mPos.x - 1.34462305987;\n        angle = mix(0.0, -0.25, rt);\n        mBotGap = mix(mBotGap/3., mBotGap, rt);\n        mDir = 2.;\n        \n    }\n    if (t > keyTimes[14] && t < keyTimes[15]) { // [1.05, 0.75]\n        \n        rt = (t - keyTimes[14])/(keyTimes[15] - keyTimes[14]);\n        mPos.x = mix(0.95, 1.05, rt);\n        mPos.y = 0.75;\n        mDir = 1.;\n    \n    }\n    if (t > keyTimes[15] && t < keyTimes[16]) { // [1.45, 0.75]\n        \n        rt = (t - keyTimes[15])/(keyTimes[16] - keyTimes[15]);\n        rt = pow(rt, 0.8);\n        mPos.x = mix(1.05, 1.45, rt);\n        mPos.y = -3.00751879699 * mPos.x * mPos.x + 7.51879699248 * mPos.x - 3.82894736842;\n        angle = mix(0., -0.25,  1. - abs(0.5 - rt) / 0.5);\n        mDir = 2.;\n    \n    }\n    if (t > keyTimes[16] && t < keyTimes[17]) { // [1.52, 0.75]\n        \n        rt = (t - keyTimes[16])/(keyTimes[17] - keyTimes[16]);\n        mPos.x = mix(1.45, 1.52, rt);\n        mPos.y = 0.75;\n        mDir = 1.;\n    \n    }\n    if (t >= keyTimes[17] && t <= keyTimes[18]) { // [1.7, 0.67]\n        \n        rt = (t - keyTimes[17])/(keyTimes[18] - keyTimes[17]);\n        mPos.x = mix(1.52, 1.7, rt);\n        mPos.y = -6.34920634921 * mPos.x * mPos.x + 20. * mPos.x - 14.9807936508;\n        angle = mix(0., -0.25, rt);\n        mDir = 2.;\n    \n    }\n    if (t > keyTimes[18] && t < keyTimes[19]) { // [1.7, 0.64]\n        \n        rt = (t - keyTimes[18])/(keyTimes[19] - keyTimes[18]);\n        mPos.x = 1.7;\n        mPos.y = mix(0.67, 0.64, rt);\n        angle = 0.2;\n        mDir = -1.;\n    \n    }\n    if (t > keyTimes[19] && t < keyTimes[20]) { // [1.5, 0.5]\n        \n        rt = (t - keyTimes[19])/(keyTimes[20] - keyTimes[19]);\n        mPos.x = mix(1.7, 1.5, rt);\n        mPos.y = -4.74747474747 * mPos.x * mPos.x + 15.8919191919 * mPos.x - 12.6560606061;\n        angle = mix(0.2, 0., rt);\n        mDir = -1.;\n    \n    }\n\n    if (t > keyTimes[20] && t < keyTimes[21]) { // [1.25, 0.5]\n\n        rt = (t - keyTimes[20])/(keyTimes[21] - keyTimes[20]);\n        mPos.x = mix(1.5, 1.25, rt);\n        mPos.y = -4.48717948718 * mPos.x * mPos.x + 12.3397435897 * mPos.x - 7.91346153846;\n        angle = mix(0., .2, rt);\n        mDir = -2.;\n\n    }\n    if (t > keyTimes[21] && t < keyTimes[22]) { // [1.12, 0.5]\n\n        rt = (t - keyTimes[21])/(keyTimes[22] - keyTimes[21]);\n        mPos.x = mix(1.25, 1.12, rt);\n        mPos.y = 0.5;\n        angle = mix(0., 0.2,  rt);\n        mDir = -1.;\n\n    }\n    if (t > keyTimes[22] &&  t < keyTimes[23]) { // [1.16, 0.5]\n\n        rt = (t - keyTimes[22])/(keyTimes[23] - keyTimes[22]);\n        mPos.x = mix(1.12, 1.16, rt);\n        mPos.y = 0.5;\n        angle = mix(0., -0.2, rt);\n        mDir = 2.;\n\n    }\n    if (t > keyTimes[23] && t < keyTimes[24]) { // [1.16, 0.5]\n\t\t\n        rt = (t - keyTimes[23])/(keyTimes[24] - keyTimes[23]);\n        mPos.x = 1.16;\n        mPos.y = 0.5;\n        mBotGap = mBotGap + 0.005*sin(rt * 2. * M_PI);\n        mDir = rt < 0.3 || (rt > 0.7 && rt < 0.9) ? -1. : rt < 0.7 ? 1. : 0.;\n\n    }\n    if (t > keyTimes[24] && t < keyTimes[25]) { // [1.13, 0.5]\n\n        rt = (t - keyTimes[24])/(keyTimes[25] - keyTimes[24]);\n        mPos.x = mix(1.16, 1.13, rt);\n        mPos.y = 0.5;\n        mDir = -1.;\n\n    }\n    if (t > keyTimes[25] && t < keyTimes[26]) { // [0.6, 0.37]\n\n        rt = (t - keyTimes[25])/(keyTimes[26] - keyTimes[25]);\n        mPos.x = mix(1.13, 0.6, rt);\n        mPos.y = -2.53628447025 * mPos.x * mPos.x + 4.63305515239 * mPos.x - 1.49677068215;\n        angle = mix(0., 0.25,  1. - abs(0.5 - rt) / 0.5);\n        mDir = -2.;\n\n    } \n    \n\n    if (t > keyTimes[26] && t < keyTimes[27]) { // [0.6, 0.3]\n\n        rt = (t - keyTimes[26])/(keyTimes[27] - keyTimes[26]);\n        mPos.x = 0.6;\n        mPos.y = mix(0.37, 0.3, rt);\n        angle = -0.2;\n        mDir = 1.;\n\n    }\n    if (t > keyTimes[27] && t < keyTimes[28]) { // [1.3, 0.085]\n\n        rt = (t - keyTimes[27])/(keyTimes[28] - keyTimes[27]);\n        mPos.x = mix(0.6, 1.3, rt);\n        mPos.y = -1.49215367965 * mPos.x * mPos.x + 2.5279491342 * mPos.x - 0.679594155844;\n        angle = mix(0., -0.25,  1. - abs(0.5 - rt) / 0.5);\n        mDir = 2.;\n\n    }\n    if (t > keyTimes[28] && t < keyTimes[29]) { // [1.5, 0.085]\n\n        rt = (t - keyTimes[28])/(keyTimes[29] - keyTimes[28]);\n        mPos.x = mix(1.3, 1.5, rt);\n        mPos.y = 0.085;\n        angle = mix(0., -0.25,  1. - abs(0.5 - rt) / 0.5);\n        mDir = 2.;\n\n    }\n    if (t > keyTimes[29] && t < keyTimes[30]) { // [1.5, 0.22]\n\n        rt = (t - keyTimes[29])/(keyTimes[30] - keyTimes[29]);\n        rt = pow(rt, 0.6);\n        mPos.x = 1.5;\n        mPos.y = mix(0.085, 0.23, rt);\n        angle = mix(0., 0.2, rt);\n        mDir = -1.;\n\n    }\n    if (t > keyTimes[30] && t < keyTimes[31]) { // [1.5, 0.2]\n\n        rt = (t - keyTimes[30])/(keyTimes[31] - keyTimes[30]);\n        mPos.x = 1.5;\n        mPos.y = mix(0.23, 0.2, rt);\n        angle = 0.2;\n        mDir = -1.;\n\n    }\n    if (t > keyTimes[31] && t < keyTimes[32]) { // [1.425, 0.3]\n\n        rt = (t - keyTimes[31])/(keyTimes[32] - keyTimes[31]);\n        mPos.x = mix(1.5, 1.425, rt);\n        mPos.y = -14.8148148148 * mPos.x * mPos.x + 42.0 * mPos.x - 29.4666666667;\n        angle = mix(0.2, 0.0, rt);\n        mDir = -2.;\n\n    }\n    if (t > keyTimes[32] && t < keyTimes[33]) { // [1.425, 0.27]\n\n        rt = (t - keyTimes[32])/(keyTimes[33] - keyTimes[32]);\n        mPos.x = 1.425;\n        mPos.y = mix(0.3, 0.27, rt);\n        angle = -0.2;\n        mDir = 1.;\n\n    }\n    if (t > keyTimes[33] && t < keyTimes[34]) { // [1.7, 0.15]\n\n        rt = (t - keyTimes[33])/(keyTimes[34] - keyTimes[33]);\n        mPos.x = mix(1.425, 1.7, rt);\n        mPos.y = -5.28925619835 * mPos.x * mPos.x + 16.0925619835 * mPos.x - 11.9214049587;\n        angle = mix(0., -0.2, 1. - abs(0.5 - rt) / 0.5);\n        mDir = 2.;\n\n    }\n    if (t > keyTimes[34] && t < keyTimes[35]) { // [1.7, 0.085]\n\n        rt = (t - keyTimes[34])/(keyTimes[35] - keyTimes[34]);\n        mPos.x = 1.7;\n        mPos.y = mix(0.15, 0.085, rt);\n        angle = 0.2;\n        mDir = -1.;\n\n    }\n    if (t > keyTimes[35] && t < keyTimes[36]) { // [1.675, 0.085]\n\n        rt = (t - keyTimes[35])/(keyTimes[36] - keyTimes[35]);\n        mPos.x = mix(1.7, 1.675, rt);\n        mPos.y = 0.085;\n        mDir = -1.;\n\n    }\n    if (t > keyTimes[36] && t < keyTimes[37]) { // [1.675, 0.085]\n        \n\t\trt = (t - keyTimes[36])/(keyTimes[37] - keyTimes[36]);\n        mPos.x = 1.675;\n        mPos.x = mix(1.675, 1.61 + 2.*mSize, max(1. - abs(rt-0.9)*10., 0.));\n        if (rt > 0.15 && rt < 0.2) mDir = mix(0., -1., 1. - abs(rt - 0.2)*20.);\n        if (rt > 0.2 && rt < 0.45) mDir = -1.;\n        if (rt > 0.45 && rt < 0.5) mDir = mix(0., -1., 1. - abs(rt - 0.45)*20.);\n        if (rt > 0.85 && rt < 0.95) {\n            mDir = -2.; mDrawMouth = false;\n        }\n        \n\n    }\n    if (t > keyTimes[37] && t < keyTimes[38]) { // [1.9, 0.085]\n\n        rt = (t - keyTimes[37])/(keyTimes[38] - keyTimes[37]);\n        mPos.x = mix(1.7, 1.9, rt);\n        mPos.y = 0.085;\n        mDir = 1.;\n\n    }\n    if (t > keyTimes[38] && t < keyTimes[39]) { // [0.09, 0.085]\n        rt = (t - keyTimes[38])/(keyTimes[39] - keyTimes[38]);\n        mPos.x = mix(0.0, 0.09, rt);\n        mPos.y = 0.085;\n        mDir = 1.;\n    }\n    if (t > keyTimes[39]) { // [0.09, 0.085]\n\n        mPos.x = 0.09;\n        mPos.y = 0.085;\n        mDir = 1.;\n\n    }\n    \n    mPos.y += mSize + mBotGap;\n    mat2 rot = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    vec2 r = rot*(p - mPos) + mPos;\n    \n    if (r.y < mPos.y + mSize && r.y > mPos.y - mSize &&\n        r.x < mPos.x + mSize && r.x > mPos.x - mSize) {\n        color = meatColor;\n        \n        vec2 eye = mPos + vec2(mDir * mSize/2., mSize/3.);\n    \tvec2 mouth = mPos + vec2(mDir * mSize/2., -mSize/2.2);\n    \n\t\tif (r.y < eye.y + mSize/3. && r.y > eye.y - mSize/3. &&\n        \tabs(r.x-eye.x) > mSize/6. && abs(r.x-eye.x) < mSize/1.2 &&\n           \tr.x < mPos.x + mSize) color = eyeColor;\n    \n    \tif (mDrawMouth && r.y < mouth.y + mSize/6. && r.y > mouth.y - mSize/6. &&\n         \tabs(r.x-eye.x) < mSize/1.5) color = mouthColor;\n    }\n}\n\nvoid drawBandageGirl() {\n    vec2 bPos = vec2(1.61, 0.085);\n    bBotGap += 0.002*sin(t*2.*M_PI*10.);\n    bPos.y += mSize + bBotGap;\n    float bDir = 0.;\n\n    if (t > 0.73 && t < 0.95) bDir = -0.5;\n    if (t > 0.96) bDir = 1.;\n    \n    vec2 eye = bPos + vec2(bDir * mSize/2., mSize/3.);\n    vec2 mouth = bPos + vec2(bDir * mSize/2., -mSize/2.2);\n    \n    if (p.y < bPos.y + mSize && p.y > bPos.y - mSize &&\n        p.x < bPos.x + mSize && p.x > bPos.x - mSize) {\n        \n        color = girlColor;\n    \n        if (p.y < eye.y + mSize/3. && p.y > eye.y - mSize/3. &&\n            abs(p.x-eye.x) > mSize/6. && abs(p.x-eye.x) < mSize/1.2 &&\n               p.x < bPos.x + mSize) color = eyeColor;\n\n        if (drawMouth && p.y < mouth.y + mSize/6. && p.y > mouth.y - mSize/6. &&\n             abs(p.x-eye.x) < mSize/1.5) color = mouthColor;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy;\n    float w = iResolution.x/iResolution.y;\n    vec2 sqCoord = fragCoord.xy/R;\n    p = sqCoord;\n\tp.x *= w; // [0, w/h] x [0, 1]\n\n    t = mod(iTime, playbackTime) / playbackTime; // [0, 1]\n    if (speedUpAtTheEnd) {\n        if (t < 0.8) {\n            t = 0.6*t/0.8;\n        } else if (t < 0.9625) {\n            t = 2.1538461538462 * t - 1.1230769230769;\n        } else {\n            t = (4.*t - 1.)/3.;\n        }\n    }\n    // left disks\n    drawDisk(vec2(0.5, 0.18), 0.075, 0.02, 16., 80.);\n    drawDisk(vec2(0.04, 0.225), 0.075, 0.025, 8., -30.);\n    // right middle disks\n    drawDisk(vec2(1.375, 0.5), 0.06, 0.015, 11., -60.);\n\tdrawDisk(vec2(1.025, 0.5), 0.055, 0.015, 11., 60.);\n    // horizontally moving disk\n    vec2 diskHorL = vec2(1.025, 0.725);\n    vec2 diskHorR = vec2(1.375, 0.725);\n    float diskHorSpeed = 6.;\n    float diskTime = t*diskHorSpeed;\n    diskTime = mod(diskTime, 2.) > 1. ? mod(t*diskHorSpeed, 1.) : 1. - mod(t*diskHorSpeed, 1.);\n    vec2 diskHor = mix(diskHorL, diskHorR, 1.-diskTime);\n    drawDisk(diskHor, 0.14, 0.04, 16., -100.);\n    \n\t//\n    drawMeatBoy();\n    drawBandageGirl();\n\n    // walls\n    if (p.x > 0.4 - slidingWallExtraWidth + mSize &&\n        p.x < 0.6 + slidingWallExtraWidth - mSize &&\n        p.y < 0.56 && p.y > 0.175) color = wallColor;\n\n    if (p.x > 0.47 + mSize &&\n        p.x < 0.6 + slidingWallExtraWidth - mSize &&\n        p.y < 0.6 && p.y > 0.175) color = wallColor;\n\n    if (p.x > 0.4 - slidingWallExtraWidth + mSize && p.x < 0.85) {\n        v0 = vec3(vec2(0.6, 0.62) - vec2(0.35, 0.515), 0.);\n        v1 = vec3(p - vec2(0.35, 0.515), 0.);\n        float pDist = length(cross(v0, v1)) / length(v0);\n        if (pDist < 0.023) color = wallColor;\n    }\n    if (p.x > 0.85  && p.x < 1.55 && p.y > 0.7\n        && p.y < 0.75) color = wallColor;\n\n    if (p.x > 0.94  && p.y > 0.446\n        && p.y < 0.5) color = wallColor;\n\n    if (p.x > 1.35 - slidingWallExtraWidth  && p.x < 1.4 + slidingWallExtraWidth && p.y > 0.2\n        && p.y < 0.45) color = wallColor;\n\n    if (p.x > 1.525 - slidingWallExtraWidth  && p.x < 1.575 + slidingWallExtraWidth\n        && p.y > 0.1 - mSize\n        && p.y < 0.3) color = wallColor;\n    if (p.x > 1.525 && p.y < 0.0825) color = wallColor;\n    \n    // right bottom disks\n    drawDisk(vec2(1.735, 0.475), 0.15, 0.04, 10., 40.);\n    drawDisk(vec2(1.375, 0.22), 0.05, 0.015, 11., -80.);\n    // horizontally moving disk details\n    drawStick(diskHorL, diskHorR, 0.012);\n    if (dist(p, diskHor) < 0.02) color = vec3(0.2, 0.1, 0.2);\n    \n    // outer walls\n    if (p.y < .1 - mSize) color = lavaColor;\n    if (p.x < .05 + slidingWallExtraWidth ||\n       p.x > 1.7 - slidingWallExtraWidth + mSize ||\n       p.y > .95) color = wallColor;\n\n    \n    // disk on stick\n    vec2 stickBinding = vec2(0.5, 0.57);\n    float stickAngle = t*18.*M_PI - 0.2*M_PI;\n    vec2 stickEnd = stickBinding + 0.23*vec2(-cos(stickAngle), sin(stickAngle));\n    drawDisk(stickEnd, 0.11, 0.025, 10., 70.);\n    drawStick(stickBinding, stickEnd, 0.01);\n    \n    // platform\n    vec2 platformSize = vec2(0.25, 0.05);\n    vec2 platformPos = vec2(0.175, 0.06);\n    platformPos.x = mix(0.175, 1.4, 1.- abs(t-0.5)/0.5);\n    if (abs(p.x - platformPos.x) < platformSize.x / 2. &&\n        abs(p.y - platformPos.y) < platformSize.y / 2.) color = wallColor;\n    \n\tfragColor = vec4(color, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}