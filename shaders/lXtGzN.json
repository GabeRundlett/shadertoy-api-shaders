{
    "Shader": {
        "info": {
            "date": "1716215600",
            "description": "GLSL Practice No.2",
            "flags": 0,
            "hasliked": 0,
            "id": "lXtGzN",
            "likes": 2,
            "name": "Practice No.2",
            "published": 3,
            "tags": [
                "glsl"
            ],
            "usePreview": 0,
            "username": "kongbui",
            "viewed": 152
        },
        "renderpass": [
            {
                "code": "vec3 palette (float t)\n{\n    vec3 a = vec3(0.598,0.540,0.928);\n    vec3 b = vec3(-0.362,0.355,-0.456);\n    vec3 c = vec3(1.108,1.108,-1.33);\n    vec3 d = vec3(0.2,0.138,-1.252);\n    return a + b*cos( 6.28318*(c*t+d));\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy * 2.0 ) - 1.0;\n        \n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.0);\n    \nfor (float i = 0.0; i < 2.0; i++)\n{    \n     uv = fract(uv*1.3) - 0.5;\n     \n     float d = length(uv) * exp(length(uv0*0.2));\n    \n     d = abs(d);\n    \n     vec3 col = palette(length(uv0*1.5)+ i*0.5 +iTime*2.0); \n    \n     d = fract(sin(d* 1.5 + iTime* 0.3));  \n    \n     float x = fract(sin(d* 2.0+ iTime* 0.1));\n    \n     d = smoothstep(0.0,1.0,d);\n    \n     d *= x/2.0;\n    \n     \n     d = pow(0.005/d,1.2);\n       \n    finalColor += col * d;\n}\n    \n    fragColor = vec4(finalColor,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}