{
    "Shader": {
        "info": {
            "date": "1555620438",
            "description": "Ok, now it's time to play with music visualization :)\n\nTrack: https://soundcloud.com/lil_peep/spotlight-1",
            "flags": 64,
            "hasliked": 0,
            "id": "ttfGzH",
            "likes": 27,
            "name": "ðŸŽ¶ Rainbow soundviz ðŸŽ¶",
            "published": 3,
            "tags": [
                "circles",
                "musicvisualizer"
            ],
            "usePreview": 0,
            "username": "avin",
            "viewed": 1393
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926 \n#define PI2 6.2831852 \n \n#define hue(h)clamp(abs(fract(h + vec4(3, 2, 1, 0) / 3.0) * 6.0 - 3.0) - 1.0 , 0.0, 1.0)\n \nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n { \n    vec2 uv = (fragCoord - iResolution.xy * 0.5) / iResolution.y;\n    \n    float CIRCLES = 20.0;\n    float cS = 0.375;\n    \n    float sm = 1.0 / iResolution.y * 2.0; // smooth\n    float ps = 1.0 / iResolution.y * sqrt(iResolution.y) * 0.225; // circle thin\n    \n    float d = length(uv);\n    \n    float a = atan(uv.y, uv.x);\n    a = a < 0.0 ? PI + (PI - abs(a)) : a;\n    \n    float lPos = a /PI2;\n    \n    float m = 0.0;\n    float partSize = 1.0 / CIRCLES;\n    vec3 col;\n    for(float i = CIRCLES; i > 1.0; i -= 1.0) {\n        \n        float ilPos = fract(lPos + i*0.1 + iTime * 0.1);\n        float cPos = partSize * i + ilPos * partSize;\n        float invPos = partSize * (i + 1.0) - ilPos * partSize;\n        float nzF = (1.0 - ilPos);\n        float mP0 = texture(iChannel0, vec2(partSize * i, 0.0)).x;\n        float mP = texture(iChannel0, vec2(cPos, 0.0)).x;\n        float mPInv = texture(iChannel0, vec2(invPos, 0.0)).x;\n        \n        mP = (mP + mPInv) / 2.0;\n        \n        float rDiff = i*(1.0 / CIRCLES * 0.35);\n        float r = mP * (1.0 / CIRCLES * 3.0) - rDiff;\n        \n        float subm = smoothstep(cS - ps + r, cS - ps + sm + r, d) * smoothstep(cS + r, cS - sm + r, d);\n        \n        if (subm > 0.0) {\n            col = hue(i / CIRCLES * 0.5 + iTime * 0.05 + mP0 * 0.84).rgb;\n        }\n        \n        m += subm;\n    }\n    \n    m = clamp(m, 0.0, 1.0);\n        \n    float r = (sin(iTime * 0.5) * 0.5 + 0.5);\n    float b = (cos(iTime * 0.5) * 0.5 + 0.5);\n    vec3 backCol = vec3(r, 0.0, b) * length(uv * 0.75) * 0.5;\n       \n    col = mix(backCol, col, m);\n        \n    fragColor = vec4(col, 1.0);\n} \n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 18361,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/lil_peep/spotlight-1"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}