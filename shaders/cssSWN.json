{
    "Shader": {
        "info": {
            "date": "1668906985",
            "description": "The classic Chrome T-Rex game!",
            "flags": 0,
            "hasliked": 0,
            "id": "cssSWN",
            "likes": 1,
            "name": "[steve] T-Rex game",
            "published": 3,
            "tags": [
                "game",
                "chrome",
                "trex",
                "internet"
            ],
            "usePreview": 0,
            "username": "import_shader_steve",
            "viewed": 151
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159\n#define S(a,b,t) smoothstep(a,b,t)\n\nfloat box(vec2 uv, float width, float height, float stroke) {\n    float blur = 0.01;\n    // outer part\n    float outer_horizontal = S(height/2., height/2. - blur, abs(uv.y));\n    float outer_vertical = S(width/2., width/2. - blur, abs(uv.x));\n    float outer = outer_horizontal * outer_vertical;\n    // inner part\n    float inner_horizontal = S(height/2.-stroke, height/2.-stroke - blur, abs(uv.y));\n    float inner_vertical = S(width/2.-stroke, width/2.-stroke - blur, abs(uv.x));\n    float inner = inner_horizontal * inner_vertical;\n    // box\n    float box = outer - inner;\n    return box;\n}\n\nfloat makeBump(vec2 uv, float groundYoffset) {\n    uv.x = fract(uv.x) - .5;\n    float box = box(uv - vec2(0., groundYoffset), .3, .2, .02);\n    return box;\n}\n\n// on every frame, triggers on every pixel on the screen\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    uv.x += iTime*.1;\n    uv.x *= 5.;\n    \n    vec3 color = vec3(0.);\n    \n    // ground\n    float thickness = 0.005;\n    float groundYoffset = .2;\n    float ground = S(.001, .0009, abs(uv.y+groundYoffset)-thickness/2.);\n    color.r += ground;\n    color.g += ground;\n    color.b += ground;\n    \n    // bumps\n    float bump = makeBump(uv, groundYoffset);\n    color.r += bump;\n    color.g += bump;\n    color.b += bump;\n    //color.g += S(0.001, .0009, abs(uv.x)-.005);\n    //color.rg = uv;\n    \n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}