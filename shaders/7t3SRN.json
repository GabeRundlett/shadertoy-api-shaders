{
    "Shader": {
        "info": {
            "date": "1639396491",
            "description": "Depth-illusion of some deformed grid. \nBased on the previous [url]https://www.shadertoy.com/view/slV3Rz[\\url].",
            "flags": 0,
            "hasliked": 0,
            "id": "7t3SRN",
            "likes": 4,
            "name": "Sliced harmonics [241 chars]",
            "published": 3,
            "tags": [
                "2d",
                "grid",
                "onetweet",
                "golf"
            ],
            "usePreview": 0,
            "username": "hnh",
            "viewed": 215
        },
        "renderpass": [
            {
                "code": "// Based on the previous https://www.shadertoy.com/view/slV3Rz\n// by squeezing out some more geometric variety. It produces\n// a minimalistic depth illusion of some sliced iso-surfaces.\n// Thanks to XOR for substancial golfing support in the base\n// version and general teachings from FabriceNeyret2 and Shane.\n\n\nvoid mainImage(out vec4 O, vec2 p){\n    float a = iTime*.1;\n    p = p/iResolution.y*4. + sin(a+vec2(8,0))*20.;  // camera\n    p *= sin(cos(p+a))*.2;  // deform\n\n    vec2 s = floor(p + (p.x + p.y)*.4);  // tilted grid, depth illusion\n    s = .6 - step(p -= s - (s.x + s.y)*.21, p.yx)*.4;\n    s *= exp(.5-8.*length(p*p-s));\n    \n    O = s.x*8. + s.y*vec4(.02,.5,2.5,1);  // colors\n}\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}