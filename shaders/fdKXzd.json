{
    "Shader": {
        "info": {
            "date": "1635142832",
            "description": "value  noise 1D smooth",
            "flags": 0,
            "hasliked": 0,
            "id": "fdKXzd",
            "likes": 1,
            "name": "value  noise 1D smooth2",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "yyf1994",
            "viewed": 224
        },
        "renderpass": [
            {
                "code": "\n#define MapSize 10\n\nfloat random(float x) {\n     return fract(sin(x * 457.87 + 0.001  ) * 10000.0);\n}\n\nfloat smooth_line(float x) {\n    float f = 6.0 * pow( x , 5.0 ) -  15.0 * pow( x , 4.0 ) +  10.0 * pow( x , 3.0);\n    return f;\n}\n\n \n\nfloat value_noise_1D(float u){\n    // Fractial part.\n    float f = fract(u);\n\n    // Integer part.\n    float i = floor(u);\n\n    float y1 = random(i);\n    float y2 = random(i + 1.0);\n\n    float res = mix(y1, y2, smoothstep(0.0 , 1.0 ,smooth_line(f)) );\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy ;\n\n    float _u = uv.x* float(MapSize) ;\n\n    float y = value_noise_1D(_u)  ;\n\n    float lineWidth =  0.01 ;\n    \n    if(uv.y>y && uv.y<y+ lineWidth){\n        fragColor = vec4(0.0,0.0,0.0,1.0);\n    }else{\n        fragColor = vec4(1.0,1.0,1.0,1.0);\n    }   \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}