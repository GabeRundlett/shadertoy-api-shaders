{
    "Shader": {
        "info": {
            "date": "1636993617",
            "description": "32segs Font Designer.\nOther experiments list:\n[url]https://www.shadertoy.com/playlist/tctBWH[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "stt3Ws",
            "likes": 20,
            "name": "Font Designer (32 segments)",
            "published": 3,
            "tags": [
                "font",
                "util"
            ],
            "usePreview": 0,
            "username": "iY0Yi",
            "viewed": 436
        },
        "renderpass": [
            {
                "code": "float fontSize = 1.;\nfloat fontWeight = .2;\n\n// lpnorm by gaz\n// https://www.shadertoy.com/view/slG3Rz\nfloat lpnorm(vec2 p, float n){vec2 t=pow(abs(p),vec2(n));return pow(t.x+t.y,1./n);}\n\n// iq's segment function\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b ){\n    vec2 ba = b-a;\n    float r = atan(abs(ba.y),abs(ba.x))/3.14;\n    vec2 pa = p-a;\n    //pa*=mat2(cos(r*.05+vec4(0,11,33,0)));\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return lpnorm( pa - ba*h, 2. );\n}\n\n// Modify skeleton\n#define SEGX .5\n#define SEGY .8\n#define SEGCX 0.\n#define SEGCY 0.05\n#define SEGYHP +.45\n#define SEGYHN -.38\n\n// Short hands\n#define START_SEG float d = 1e4\n#define END_SEG return d\n#define DRAW_SEG(v1, v2) d=min(sdSegment(p, v1, v2)-fontWeight,d)\n\n// Outer Box (Start from Top/Left. Clockwise. SEG0-11)\n#define SEG0  DRAW_SEG(vec2( -SEGX, +SEGY), vec2( SEGCX, +SEGY))\n#define SEG1  DRAW_SEG(vec2( SEGCX, +SEGY), vec2( +SEGX, +SEGY))\n#define SEG2  DRAW_SEG(vec2( +SEGX, +SEGY), vec2( +SEGX,SEGYHP))\n#define SEG3  DRAW_SEG(vec2( +SEGX,SEGYHP), vec2( +SEGX, SEGCY))\n#define SEG4  DRAW_SEG(vec2( +SEGX, SEGCY), vec2( +SEGX,SEGYHN))\n#define SEG5  DRAW_SEG(vec2( +SEGX,SEGYHN), vec2( +SEGX, -SEGY))\n#define SEG6  DRAW_SEG(vec2( +SEGX, -SEGY), vec2( SEGCX, -SEGY))\n#define SEG7  DRAW_SEG(vec2( SEGCX, -SEGY), vec2( -SEGX, -SEGY))\n#define SEG8  DRAW_SEG(vec2( -SEGX, -SEGY), vec2( -SEGX,SEGYHN))\n#define SEG9  DRAW_SEG(vec2( -SEGX,SEGYHN), vec2( -SEGX, SEGCY))\n#define SEG10 DRAW_SEG(vec2( -SEGX, SEGCY), vec2( -SEGX,SEGYHP))\n#define SEG11 DRAW_SEG(vec2( -SEGX,SEGYHP), vec2( -SEGX, +SEGY))\n// Top Rhombus (Start from Top/Left. Clockwise. SEG12-15)\n#define SEG12 DRAW_SEG(vec2( -SEGX,SEGYHP), vec2( SEGCX, +SEGY))\n#define SEG13 DRAW_SEG(vec2( SEGCX, +SEGY), vec2( +SEGX,SEGYHP))\n#define SEG14 DRAW_SEG(vec2( +SEGX,SEGYHP), vec2( SEGCX, SEGCY))\n#define SEG15 DRAW_SEG(vec2( SEGCX, SEGCY), vec2( -SEGX,SEGYHP))\n// Bottom Rhombus (Start from Top/Left. Clockwise. SEG16-19)\n#define SEG16 DRAW_SEG(vec2( -SEGX,SEGYHN), vec2( SEGCX, SEGCY))\n#define SEG17 DRAW_SEG(vec2( SEGCX, SEGCY), vec2( +SEGX,SEGYHN))\n#define SEG18 DRAW_SEG(vec2( +SEGX,SEGYHN), vec2( SEGCX, -SEGY))\n#define SEG19 DRAW_SEG(vec2( SEGCX, -SEGY), vec2( -SEGX,SEGYHN))\n// Center Vertical line (Top>Bottom. SEG20,21)\n#define SEG20 DRAW_SEG(vec2( SEGCX, +SEGY), vec2( SEGCX, SEGCY))\n#define SEG21 DRAW_SEG(vec2( SEGCX, SEGCY), vec2( SEGCX, -SEGY))\n// Center Horizont line (Left>Right. SEG22,23)\n#define SEG22 DRAW_SEG(vec2( -SEGX, SEGCY), vec2( SEGCX, SEGCY))\n#define SEG23 DRAW_SEG(vec2( SEGCX, SEGCY), vec2( +SEGX, SEGCY))\n// X in Top box (Start from Top/Left. Clockwise. SEG24-27)\n#define SEG24 DRAW_SEG(vec2( -SEGX, +SEGY), vec2( SEGCX,SEGYHP))\n#define SEG25 DRAW_SEG(vec2( SEGCX,SEGYHP), vec2( +SEGX, +SEGY))\n#define SEG26 DRAW_SEG(vec2( -SEGX, SEGCY), vec2( SEGCX,SEGYHP))\n#define SEG27 DRAW_SEG(vec2( SEGCX,SEGYHP), vec2( +SEGX, SEGCY))\n// X in Top box (Start from Top/Left. Clockwise. SEG28-31)\n#define SEG28 DRAW_SEG(vec2( -SEGX, SEGCY), vec2( SEGCX,SEGYHN))\n#define SEG29 DRAW_SEG(vec2( SEGCX,SEGYHN), vec2( +SEGX, SEGCY))\n#define SEG30 DRAW_SEG(vec2( SEGCX,SEGYHN), vec2( +SEGX, -SEGY))\n#define SEG31 DRAW_SEG(vec2( -SEGX, -SEGY), vec2( SEGCX,SEGYHN))\n\n\n#define SKIP_DRAW d=d\n#define SEG0x  SKIP_DRAW\n#define SEG1x  SKIP_DRAW\n#define SEG2x  SKIP_DRAW\n#define SEG3x  SKIP_DRAW\n#define SEG4x  SKIP_DRAW\n#define SEG5x  SKIP_DRAW\n#define SEG6x  SKIP_DRAW\n#define SEG7x  SKIP_DRAW\n#define SEG8x  SKIP_DRAW\n#define SEG9x  SKIP_DRAW\n#define SEG10x SKIP_DRAW\n#define SEG11x SKIP_DRAW\n#define SEG12x SKIP_DRAW\n#define SEG13x SKIP_DRAW\n#define SEG14x SKIP_DRAW\n#define SEG15x SKIP_DRAW\n#define SEG16x SKIP_DRAW\n#define SEG17x SKIP_DRAW\n#define SEG18x SKIP_DRAW\n#define SEG19x SKIP_DRAW\n#define SEG20x SKIP_DRAW\n#define SEG21x SKIP_DRAW\n#define SEG22x SKIP_DRAW\n#define SEG23x SKIP_DRAW\n#define SEG24x SKIP_DRAW\n#define SEG25x SKIP_DRAW\n#define SEG26x SKIP_DRAW\n#define SEG27x SKIP_DRAW\n#define SEG28x SKIP_DRAW\n#define SEG29x SKIP_DRAW\n#define SEG30x SKIP_DRAW\n#define SEG31x SKIP_DRAW\n\n#define SEG0o  SEG0\n#define SEG1o  SEG1\n#define SEG2o  SEG2\n#define SEG3o  SEG3\n#define SEG4o  SEG4\n#define SEG5o  SEG5\n#define SEG6o  SEG6\n#define SEG7o  SEG7\n#define SEG8o  SEG8\n#define SEG9o  SEG9\n#define SEG10o SEG10\n#define SEG11o SEG11\n#define SEG12o SEG12\n#define SEG13o SEG13\n#define SEG14o SEG14\n#define SEG15o SEG15\n#define SEG16o SEG16\n#define SEG17o SEG17\n#define SEG18o SEG18\n#define SEG19o SEG19\n#define SEG20o SEG20\n#define SEG21o SEG21\n#define SEG22o SEG22\n#define SEG23o SEG23\n#define SEG24o SEG24\n#define SEG25o SEG25\n#define SEG26o SEG26\n#define SEG27o SEG27\n#define SEG28o SEG28\n#define SEG29o SEG29\n#define SEG30o SEG30\n#define SEG31o SEG31\n\nfloat sdAllSeg(vec2 p) {\n    // Start designing with copy & paste below lines.\n    // -------------------------------- ✂ -----------------------------------\n    START_SEG;\n    /*OuterBox(Top)*/    SEG0o,  SEG1o,  SEG2o,  SEG3o, SEG10o, SEG11o;\n    /*OuterBox(Bottom)*/ SEG4o,  SEG5o,  SEG6o,  SEG7o,  SEG8o,  SEG9o;\n    /*TopRhombus*/      SEG12o, SEG13o, SEG14o, SEG15o;\n    /*BottomRhombus*/   SEG16o, SEG17o, SEG18o, SEG19o;\n    /*VerticalLine*/    SEG20o, SEG21o;\n    /*HorizontLine*/    SEG22o, SEG23o;\n    /*X(Top)*/          SEG24o, SEG25o, SEG26o, SEG27o;\n    /*X(Bottom)*/       SEG28o, SEG29o, SEG30o, SEG31o;\n    END_SEG;\n    // -------------------------------- ✂ -----------------------------------\n}\n\nfloat sdNum0(vec2 p) {\n    START_SEG;\n    /*OuterBox(Top)*/    SEG0o,  SEG1o,  SEG2o,  SEG3o, SEG10o, SEG11o;\n    /*OuterBox(Bottom)*/ SEG4o,  SEG5o,  SEG6o,  SEG7o,  SEG8o,  SEG9o;\n    /*TopRhombus*/      SEG12x, SEG13x, SEG14o, SEG15x;\n    /*BottomRhombus*/   SEG16o, SEG17x, SEG18x, SEG19x;\n    /*VerticalLine*/    SEG20x, SEG21x;\n    /*HorizontLine*/    SEG22x, SEG23x;\n    END_SEG;\n}\nfloat sdNum1(vec2 p) {\n    START_SEG;\n    /*OuterBox(Top)*/    SEG0x,  SEG1x,  SEG2x,  SEG3x, SEG10x, SEG11x;\n    /*OuterBox(Bottom)*/ SEG4x,  SEG5x,  SEG6o,  SEG7o,  SEG8x,  SEG9x;\n    /*TopRhombus*/      SEG12o, SEG13x, SEG14x, SEG15x;\n    /*BottomRhombus*/   SEG16x, SEG17x, SEG18x, SEG19x;\n    /*VerticalLine*/    SEG20o, SEG21o;\n    /*HorizontLine*/    SEG22x, SEG23x;\n    END_SEG;\n}\nfloat sdNum2(vec2 p) {\n    START_SEG;\n    /*OuterBox(Top)*/    SEG0o,  SEG1o,  SEG2o,  SEG3o, SEG10x, SEG11o;\n    /*OuterBox(Bottom)*/ SEG4x,  SEG5x,  SEG6o,  SEG7o,  SEG8x, SEG9x;\n    /*TopRhombus*/      SEG12x, SEG13x, SEG14x, SEG15x;\n    /*BottomRhombus*/   SEG16x, SEG17x, SEG18x, SEG19x;\n    /*VerticalLine*/    SEG20x, SEG21x;\n    /*HorizontLine*/    SEG22x, SEG23x;\n    /*X(Top)*/          SEG24x, SEG25x, SEG26x, SEG27x;\n    /*X(Bottom)*/       SEG28x, SEG29o, SEG30x, SEG31o;\n    END_SEG;\n}\nfloat sdNum3(vec2 p) {\n    START_SEG;\n    /*OuterBox(Top)*/    SEG0o,  SEG1o,  SEG2o,  SEG3x, SEG10x, SEG11x;\n    /*OuterBox(Bottom)*/ SEG4o,  SEG5o,  SEG6o,  SEG7o,  SEG8o,  SEG9x;\n    /*TopRhombus*/      SEG12x, SEG13x, SEG14o, SEG15x;\n    /*BottomRhombus*/   SEG16x, SEG17x, SEG18x, SEG19x;\n    /*VerticalLine*/    SEG20x, SEG21x;\n    /*HorizontLine*/    SEG22x, SEG23o;\n    /*X(Top)*/          SEG24x, SEG25x, SEG26x, SEG27x;\n    /*X(Bottom)*/       SEG28x, SEG29x, SEG30x, SEG31x;\n    END_SEG;\n}\nfloat sdNum4(vec2 p) {\n    START_SEG;\n    /*OuterBox(Top)*/    SEG0x,  SEG1x,  SEG2o,  SEG3o, SEG10o, SEG11o;\n    /*OuterBox(Bottom)*/ SEG4o,  SEG5o,  SEG6x,  SEG7x,  SEG8x,  SEG9x;\n    /*TopRhombus*/      SEG12x, SEG13x, SEG14x, SEG15x;\n    /*BottomRhombus*/   SEG16x, SEG17x, SEG18x, SEG19x;\n    /*VerticalLine*/    SEG20x, SEG21x;\n    /*HorizontLine*/    SEG22o, SEG23o;\n    END_SEG;\n}\nfloat sdNum5(vec2 p) {\n    START_SEG;\n    /*OuterBox(Top)*/    SEG0o,  SEG1o,  SEG2x,  SEG3x, SEG10o, SEG11o;\n    /*OuterBox(Bottom)*/ SEG4o,  SEG5o,  SEG6o,  SEG7o,  SEG8x, SEG9x;\n    /*TopRhombus*/      SEG12x, SEG13x, SEG14x, SEG15x;\n    /*BottomRhombus*/   SEG16x, SEG17x, SEG18x, SEG19x;\n    /*VerticalLine*/    SEG20x, SEG21x;\n    /*HorizontLine*/    SEG22o, SEG23o;\n    END_SEG;\n}\nfloat sdNum6(vec2 p) {\n    START_SEG;\n    /*OuterBox(Top)*/    SEG0x,  SEG1x,  SEG2x,  SEG3x, SEG10o, SEG11x;\n    /*OuterBox(Bottom)*/ SEG4o,  SEG5o,  SEG6o,  SEG7o,  SEG8o,  SEG9o;\n    /*TopRhombus*/      SEG12o, SEG13x, SEG14x, SEG15x;\n    /*BottomRhombus*/   SEG16x, SEG17x, SEG18x, SEG19x;\n    /*VerticalLine*/    SEG20x, SEG21x;\n    /*HorizontLine*/    SEG22o, SEG23o;\n    END_SEG;\n}\nfloat sdNum7(vec2 p) {\n    START_SEG;\n    /*OuterBox(Top)*/    SEG0o,  SEG1o,  SEG2o,  SEG3o, SEG10x, SEG11o;\n    /*OuterBox(Bottom)*/ SEG4o,  SEG5o,  SEG6x,  SEG7x,  SEG8x,  SEG9x;\n    /*TopRhombus*/      SEG12x, SEG13x, SEG14x, SEG15x;\n    /*BottomRhombus*/   SEG16x, SEG17x, SEG18x, SEG19x;\n    /*VerticalLine*/    SEG20x, SEG21x;\n    /*HorizontLine*/    SEG22x, SEG23x;\n    END_SEG;\n}\nfloat sdNum8(vec2 p) {\n    START_SEG;\n    /*OuterBox(Top)*/    SEG0o,  SEG1o,  SEG2o,  SEG3x, SEG10x, SEG11o;\n    /*OuterBox(Bottom)*/ SEG4o,  SEG5o,  SEG6o,  SEG7o,  SEG8o,  SEG9o;\n    /*TopRhombus*/      SEG12x, SEG13x, SEG14o, SEG15o;\n    /*BottomRhombus*/   SEG16x, SEG17x, SEG18x, SEG19x;\n    /*VerticalLine*/    SEG20x, SEG21x;\n    /*HorizontLine*/    SEG22o, SEG23o;\n    END_SEG;\n}\nfloat sdNum9(vec2 p) {\n    START_SEG;\n    /*OuterBox(Top)*/    SEG0o,  SEG1o,  SEG2o,  SEG3o, SEG10o, SEG11o;\n    /*OuterBox(Bottom)*/ SEG4o,  SEG5x,  SEG6x,  SEG7x,  SEG8x,  SEG9x;\n    /*TopRhombus*/      SEG12x, SEG13x, SEG14x, SEG15x;\n    /*BottomRhombus*/   SEG16x, SEG17x, SEG18o, SEG19x;\n    /*VerticalLine*/    SEG20x, SEG21x;\n    /*HorizontLine*/    SEG22o, SEG23o;\n    END_SEG;\n}\n\nfloat sdNumFont(vec2 p, float s, float fi) {\n    p /= s;\n    int i = int(mod(floor(fi), 10.)); // 0-9    \n    switch(i){\n        case 0:\n            return sdNum0(p);\n        case 1:\n            return sdNum1(p);\n        case 2:\n            return sdNum2(p);\n        case 3:\n            return sdNum3(p);\n        case 4:\n            return sdNum4(p);\n        case 5:\n            return sdNum5(p);\n        case 6:\n            return sdNum6(p);\n        case 7:\n            return sdNum7(p);\n        case 8:\n            return sdNum8(p);\n        case 9:\n            return sdNum9(p);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord/iResolution.xy;\n    vec2 grid = vec2(.2,.5);\n    vec2 ip = floor(p/grid);\n    p = mod(p, grid)/grid*2.-1.;\n    p.y*=iResolution.x/iResolution.y;\n    p.y*=.8; // ???\n    \n\tfontWeight = .2-clamp(sin(iTime*1.5)*2.,0.,1.)*.19;\n    fontSize = .7;\n    float num = ip.x+(1.-ip.y)*5.;// + floor(exp(clamp(sin(iTime*5.),0.,1.))*10.) + floor(sin(iTime*.5)*10.);\n    float d = sdNumFont(p, fontSize, num);\n    d = 1.-smoothstep(.0,.005,d);\n    \n    vec3 col = mix(vec3(0.102,0.102,0.102), vec3(.8, .77, .7), d);\n \n    // Draw Skeleton\n    col = max(col, vec3(.8, .77, .7)*.3*smoothstep(0.02, 0., abs(sdAllSeg(p/fontSize)+fontWeight)-.002));\n    \n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}