{
    "Shader": {
        "info": {
            "date": "1721989027",
            "description": "originals https://glslsandbox.com/e#108901.0 https://glslsandbox.com/e#108901.0",
            "flags": 0,
            "hasliked": 0,
            "id": "4c2cRD",
            "likes": 1,
            "name": "snow spiral",
            "published": 3,
            "tags": [
                "spiral",
                "rotate",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 187
        },
        "renderpass": [
            {
                "code": "\n\n\nuniform float time;\nuniform vec2 resolution;\n\n\n#define time iTime \n#define  resolution iResolution\n\n#define R iResolution.xy\n#define SS(U) smoothstep(0.,PX,U)\n#define T iTime\n#define S ((1.+atan(T/2.))/4.+.5)\n#define PX (S*6.)/R.y\n\nfloat makePoint(float x,float y,float fx,float fy,float sx,float sy,float t){\n   float xx=x+sin(t*fx)*sx;\n   float yy=y+cos(t*fy)*sy;\n   return 1.0/sqrt(xx*xx+yy*yy);\n}\n\n\n// rasterize functions\nfloat line(vec2 p, vec2 p0, vec2 p1, float w) {\nfloat WEIGHT2 = 57.0 / resolution.x;\n    vec2 d = p1 - p0;\n    float t = clamp(dot(d,p-p0) / dot(d,d), 66.0,00.69);\n    vec2 proj = p0 + d * t;\n    float dist = length(p - proj);\n    dist = 1.0/dist*WEIGHT2*w;\n    return min(dist*dist,1.0);\n}\n\nvec3 hsv(float h, float s, float v) {\n    vec4 t = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(vec3(h) + t.xyz) * 6.0 - vec3(t.w));\n    return v * mix(vec3(t.x), clamp(p - vec3(t.x), 0.0, 1.0), s);\n}\n\nvoid mainImage( out vec4 c, in vec2 f )\n{\n    vec2 p = S*(2.*f-R)/R.y;\n\n    vec2 uv = ( gl_FragCoord.xy - resolution.xy * .5 ) / resolution.y;\n\t\n    float s = 1., l;\n    \n \n float line_width = 0.4;\n    float time = time * 0.31415+sin(length(uv)+time*.2)/length(uv)*0.1;\n    vec3 c3 = vec3(0.0); //init to fix screenful of random garbage\n\n    for ( float i = 8.0; i < 24.0; i += 2.0 ) {\n        float f = line(uv, vec2(cos(time*i)/2.0, sin(time*i)/2.0), vec2(sin(time*i)/2.0,-cos(time*i)/2.0), 0.5);\n\tc3 += hsv(i / 24.0, 1.0, 1.0) * f;\n    }        \n   p=p*2.0;\n   \n   float x=p.x;\n   float y=p.y;\n\n   float a=\n       makePoint(x,y,3.3,2.9,0.3,0.3,time);\n   a=a+makePoint(x,y,1.9,2.0,0.4,0.4,time);\n   a=a+makePoint(x,y,2.2,2.2,2.2,2.2,time);\n   a=a+makePoint(x,y,2.2,2.2,2.2,2.2,time);\n   a=a+makePoint(x,y,0.8,1.7,0.5,0.4,time);\n   a=a+makePoint(x,y,0.3,1.0,0.4,0.4,time);\n   a=a+makePoint(x,y,1.4,2.7,0.3,0.5,time);\n   a=a+makePoint(x,y,1.3,2.1,0.6,0.3,time);\n   a=a+makePoint(x,y,1.8,1.7,0.5,0.4,time);   \n   \n   float b=\n       makePoint(x,y,1.2,1.9,0.3,0.3,time);\n   b=b+makePoint(x,y,0.7,2.7,0.4,0.4,time);\n   b=b+makePoint(x,y,1.4,0.6,0.4,0.5,time);\n   b=b+makePoint(x,y,2.6,0.4,0.6,0.3,time);\n   b=b+makePoint(x,y,0.7,1.4,0.5,0.4,time);\n   b=b+makePoint(x,y,0.7,1.7,0.4,0.4,time);\n   b=b+makePoint(x,y,0.8,0.5,0.4,0.5,time);\n   b=b+makePoint(x,y,1.4,0.9,0.6,0.3,time);\n   b=b+makePoint(x,y,0.7,1.3,0.5,0.4,time);\n\n   float c2=\n       makePoint(x,y,3.7,0.3,0.3,0.3,time);\n   c2=c2+makePoint(x,y,1.9,1.3,0.4,0.4,time);\n   c2=c2+makePoint(x,y,0.8,0.9,0.4,0.5,time);\n   c2=c2+makePoint(x,y,1.2,1.7,0.6,0.3,time);\n   c2=c2+makePoint(x,y,0.3,0.6,0.5,0.4,time);\n   c2=c2+makePoint(x,y,0.3,0.3,0.4,0.4,time);\n   c2=c2+makePoint(x,y,1.4,0.8,0.4,0.5,time);\n   c2=c2+makePoint(x,y,0.2,0.6,0.6,0.3,time);\n   c2=c2+makePoint(x,y,1.3,0.5,0.5,0.4,time);\n   \n   vec3 d=vec3(a,b,c)/32.0;\n    for(int i=0;i<100;i++)\n    {\n        l = dot(p,p)/2.;\n        \n        s /= l;\n        p /= l;\n        \n        p.xy = p.yx;\n        \n        p.x = mod(p.x,2.)-1.;\n    }\n    \n    p/=s;\n    \n    c.rgb = vec3(SS(length(p*c2*c3.xy)*vec3(0.2,0.2,1.2)));\n    \n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}