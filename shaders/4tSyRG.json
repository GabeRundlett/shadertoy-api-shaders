{
    "Shader": {
        "info": {
            "date": "1508921159",
            "description": "MIPmap (and wrap) are now available on buffers and videos !\nMeaning we can count, integrate, average, isolate frequency bands for free ! \n\nHere, normalize image mean & variance according to neighborhood",
            "flags": 32,
            "hasliked": 0,
            "id": "4tSyRG",
            "likes": 13,
            "name": "free local normalization ",
            "published": 3,
            "tags": [
                "video",
                "filter",
                "image",
                "processing",
                "integration",
                "variance",
                "signal",
                "statistics",
                "moment",
                "whitebalance",
                "windowed",
                "gpmipmap"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1083
        },
        "renderpass": [
            {
                "code": "// === getting windowed statistics on images : =================\n// BuffA prepares 1st moment (well, it's the image itself :-) ).   \n// BuffB prepares 2nd moment: it's the square of image\n// The moments integrated over an window size are obtained thanks to MIPmap LOD at target level.\n// A reminder than variance is M2-M1Â², and std-dev is sqrt of this.\n// \n// NB: ok, we should compute the whole stats in flat RGB space :-)\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U /= iResolution.xy;\n    float l = ( .5+.5*cos(iTime) ) *.95 + .05;\n    \n    vec4 M1 = textureLod( iChannel0, U, l*8. ),          // order1 moment\n         M2 = textureLod( iChannel1, U, l*8. ),          // order2 moment\n         S = sqrt(M2-M1*M1);                             // std dev\n    \n    O =  .5 + .5 * ( texture( iChannel0, U ) - M1 ) / S; // normalize average and variance\n    \n    O = vec4( length(O.rgb) ) / 1.7; // comment for color version\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    O = texture( iChannel0, U / iResolution.xy );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    O = texture( iChannel0, U / iResolution.xy );\n    O *= O;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}