{
    "Shader": {
        "info": {
            "date": "1580657000",
            "description": "Fluid trail",
            "flags": 32,
            "hasliked": 0,
            "id": "WltSR7",
            "likes": 3,
            "name": "Fluid trail",
            "published": 3,
            "tags": [
                "fluid",
                "backbuffer"
            ],
            "usePreview": 0,
            "username": "Ref",
            "viewed": 465
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define ADD_POWER 5.0\n#define DIFFUSE_RATE 0.125\n#define FADE_RATE 0.458\n\nfloat hash11(float t)\n{\n    return fract(sin(t * 12.9898) * 43758.5453);\n}\n\nfloat noise11(float t)\n{\n    float i = floor(t);\n    float f = fract(t);\n\t\n\tfloat u = f*f*(3.0-2.0*f);\n\n    return mix(hash11(i + 0.0), \n               hash11(i + 1.0), u);\n}\n\nvec3 hue2rgb(float hue)\n{\n    return clamp(abs(mod(hue * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0);\n}\n\nvoid add(inout vec3 col, vec2 cen, vec2 pos, vec2 res, float offset)\n{\n    float dist = distance(cen / res, pos / res) * ADD_POWER;\n    col += hue2rgb(fract(iTime * 0.1 + offset)) * (1.0 - clamp(dist, 0.0, 1.0));\n}\n\nvoid diffuse(inout vec3 col, vec2 pos, vec2 res)\n{\n    for(int y = -1; y <= 1; y++)\n    {\n        for(int x = -1; x <= 1; x++)\n        {\n            col += texture(iChannel0, (pos + vec2(x, y)) / res).rgb * DIFFUSE_RATE;\n        }\n    }\n}\n\nvoid fade(inout vec3 col)\n{  \n    col *= FADE_RATE;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float res = min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec3 col = texture(iChannel0, uv).rgb;\n    \n    if(iMouse.z >= 0.0001)\n    {\n        add(col, iMouse.xy, fragCoord, vec2(res, res), 0.0);\n    }\n    \n    vec2 pos = vec2(noise11(iTime + 698.355), noise11(iTime + 358.647)) * iResolution.xy;\n    add(col, pos, fragCoord, vec2(res, res), 0.25);\n    pos = vec2(noise11(iTime + 124.408), noise11(iTime + 124.957)) * iResolution.xy;\n    add(col, pos, fragCoord, vec2(res, res), 0.50);\n    pos = vec2(noise11(iTime + 305.047), noise11(iTime + 684.105)) * iResolution.xy;\n    add(col, pos, fragCoord, vec2(res, res), 0.75);\n    \n    diffuse(col, fragCoord, iResolution.xy);   \n    fade(col);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}