{
    "Shader": {
        "info": {
            "date": "1583267801",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "WtVXRc",
            "likes": 6,
            "name": "log tiling inf zoom ( 190 chars)",
            "published": 3,
            "tags": [
                "2tweets",
                "gif",
                "short",
                "log",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 284
        },
        "renderpass": [
            {
                "code": "// --- expended version at the end :-)\n\n// -2 by Coyote\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2  t = exp2(fract(-.3*iTime)) +u-u,\n          R = iResolution.xy,\n          U = t - t* ( u - R*vec2(.25,0) ) / R.y,\n          l = exp2( floor( log2( min(U,U.yx) )) );\n    O += 1.- ( R*l/t*.6 *   ( .1 - min( U = abs( abs( U/l - 1.5 ) - .5),U.x) ) ).y;\n} /*\n\n\n\n\n\n\n// --- 192 chars\n\n#define mainImage(O,u)                                   \\\n    vec2  t = exp2(fract(-.3*iTime)) +u-u,               \\\n          R = iResolution.xy,                            \\\n          U = t - t* ( u - R*vec2(.25,0) ) / R.y,        \\\n          l = exp2( floor( log2( min(U,U.yx) )) );       \\\n    U = abs( abs( U/l - 1.5 ) - .5),                     \\\n/ * O += 1.- R.y/32.    *abs( .1 - min(U.x,U.y) )   * /  \\\n/ * O += 1.- R.y*l/t*.6 *abs( .1 - min(U.x,U.y) )   * /  \\\n    O += 1.- ( R*l/t*.6 *   ( .1 - min(U,U.x) ) ).y /*\n\n\n\n\n\n\n// --- 210 chars\n// ( NB: #define m min(U.x,U.y) = same size )\n\n#define mainImage(O,u)                                      \\\n    float t = exp2(fract(-.3*iTime)), l;                    \\\n    vec2  R = iResolution.xy,                               \\\n          U = t* ( 1.- ( u - vec2(R.x/4.,0) ) / R.y );      \\\n    U.x > 0. ?                                              \\\n        l = exp2( floor( log2( min(U.x,U.y) )) ),           \\\n        U = abs( abs( U/l - 1.5 ) - .5),                    \\\n    / * O += 1.- R.y/32.    *abs( .1 - min(U.x,U.y) )   * / \\\n    / * O += 1.- R.y*l/t*.6 *abs( .1 - min(U.x,U.y) )   * / \\\n        O += 1.- R.y*l/t*.6 *   ( .1 - min(U.x,U.y) )       \\\n    :O /*\n\n\n\n\n\n\n// --- 219 chars\n\n#define mainImage(O,u)                                      \\\n    vec2  R = iResolution.xy, L,                            \\\n          U = 1.- ( u - vec2(R.x/4.,0) ) / R.y;             \\\n    float t = exp2(fract(-.3*iTime)), l;                    \\\n    if ( U.x > 0. )                                         \\\n        L = floor( log2( U *= t ) ),                        \\\n        l = exp2(min(L.x,L.y)),                             \\\n        U = abs( 2.* abs( U/l - 1.5 ) - 1.),                \\\n    / * O += 1.- R.y/32.    *abs( .2 - min(U.x,U.y) )   * / \\\n    / * O += 1.- R.y*l/t/3. *abs( .2 - min(U.x,U.y) )   * / \\\n        O += 1.- R.y*l/t/3. *   ( .2 - min(U.x,U.y) )  /*\n\n\n\n\n\n\n// --- 236 chars\n\n#define mainImage(O,u)                                         \\\n    vec2 R = iResolution.xy, L,                                \\\n         U = 1.- ( u - vec2(R.x/4.,0) ) / R.y;                 \\\n    float t = fract(-.3*iTime), l;                             \\\n    if ( U.x > 0. )                                            \\\n        U = log2( U * exp2(t) ),                               \\\n        L = floor(U),                                          \\\n        l = min(L.x,L.y),                                      \\\n        U = abs( 2.*abs(exp2(U - l) - 1.5) - 1.),              \\\n    / * O += max(0., 1.- R.y/32.          *abs( min(U.x,U.y) -.2) )  * / \\\n    / * O += max(0., 1.- R.y/exp2(1.-l+t) *abs( min(U.x,U.y) -.2) )  * / \\\n        O += max(0., 1.- R.y/exp2(1.-l+t) *( .2 - min(U.x,U.y) ))   /*\n\n\n\n\n\n\n// --- 286 chars\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy, L,F,\n         U = 1.- (u-.25*vec2(R.x,0)) / R.y;\n    if ( U.x < 0. ) { O-=O; return; };\n\n    float t = fract(-.3*iTime), l;\n    U = log2(U*exp2(t));\n    L = floor(U);\n    l = min(L.x,L.y);\n    F = exp2(U - l) - 1.;\n    F = abs( 2.*abs(F-.5) - 1.);\n          \n // O = vec4( max(0., 1. -R.y/32.               *abs(min(F.x,F.y)-.2)) );\n    O = vec4( max(0., 1. -R.y/exp2(abs(l)+1.+t) *abs(min(F.x,F.y)-.2)) );  // framed\n // O = vec4( max(0., 1.- R.y/exp2(abs(l)+1.+t) *(.2- min(U.x,U.y))) );    // filled\n}\n\n/**/\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}