{
    "Shader": {
        "info": {
            "date": "1687376795",
            "description": "It looks like the windows 11 wallpaper",
            "flags": 64,
            "hasliked": 0,
            "id": "md2yRz",
            "likes": 6,
            "name": "basic audio visualisation",
            "published": 3,
            "tags": [
                "visualization",
                "audio"
            ],
            "usePreview": 0,
            "username": "mitchpk",
            "viewed": 306
        },
        "renderpass": [
            {
                "code": "float rand(float co) { return fract(sin(co*(91.3458)) * 47453.5453); }\nfloat rand(vec2 co){ return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453); }\nfloat rand(vec3 co){ return rand(co.xy+rand(co.z)); }\n\nvec3 palette(float t) {\n    vec3 a = vec3(0.500, 0.500, 0.500);\n    vec3 b = vec3(0.500, 0.500, 0.500);\n    vec3 c = vec3(1.000, 1.000, 1.000);\n    vec3 d = vec3(0.000, 0.333, 0.667);\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)    \n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    \n    uv0 += vec2(sin(iTime * 0.6) * 0.5, cos(iTime * 0.5) * 0.5);\n    uv += vec2(cos(iTime * 0.3) * 0.1, sin(iTime * 0.2) * 0.1);\n    uv *= (sin(iTime * 0.1) + 1.0) / 20.0 + 0.1;\n    \n    float sum = 0.0;\n    int count = 0;\n    for(float i = 0.001; i < 0.02; i += 1.0/1024.0) {\n        sum += texture(iChannel0, vec2(i, 0.25)).x;\n        count++;\n    }\n    float average = sum/float(count);\n    float hit = max(average - 0.8, 0.0);\n    \n    float d = length(uv);\n    d -= average * 0.04;\n    \n    vec3 col = palette(length(uv0) * 0.2 - iTime * 0.1);\n    col += rand(uv0) * 4.0 * hit;\n    \n    d = sin(d * 8.0 + iTime + cos(iTime * d)) / 8.0;\n    d = abs(d);\n    \n    d = (0.02 + hit * 0.02) / d;\n    \n    col *= d;\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 33789,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/fatherplaystation/lightbreak"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}