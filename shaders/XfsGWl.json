{
    "Shader": {
        "info": {
            "date": "1703681336",
            "description": "raymarching tutorial by https://www.youtube.com/@kishimisu \nhttps://www.youtube.com/watch?v=khblXafu7iA\n",
            "flags": 0,
            "hasliked": 0,
            "id": "XfsGWl",
            "likes": 1,
            "name": " kishimisu_raymarching_tutorial",
            "published": 3,
            "tags": [
                "raymarching"
            ],
            "usePreview": 0,
            "username": "anmol",
            "viewed": 178
        },
        "renderpass": [
            {
                "code": "/*\nfloat map(vec3 p) {\n    return length(p) - 1.;\n}\n*/\nmat2 rot2D(float angle)\n{\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, -s, \n                 s,  c );\n}\n\nfloat sdSphere(vec3 p, float s) {\n    return length(p) - s;\n}\n\nfloat sdBox(vec3 p, vec3 b){\n    vec3 q = abs(p) - b;\n    return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nvec3 rot3D(vec3 p, vec3 axis, float angle){\n    return mix(dot(axis,p) * axis, p, cos(angle)) + cross(axis, p) * sin(angle);\n}\n\nfloat smin(float a, float b, float k) {\n    float h = max(k - abs(a-b), 0.0)/k;\n    return min(a,b) - h*h*h*k*(1.0/6.0);\n\n}\n\nfloat map(vec3 p){\n   vec3 spherePos = vec3(sin(iTime) * 3.,0,0);\n   float sphere = sdSphere(p - spherePos, 1.0);\n   \n   vec3 q = fract(p) - .5;\n   \n   q.xy *= rot2D(iTime);\n   \n   float box = sdBox(q, vec3(0.1));\n   \n   float ground = p.y + 0.75;\n   \n   return smin(smin(sphere,box,2.), ground,1.);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec2 m = (2.0 * iMouse.xy - iResolution.xy) / iResolution.y;\n    \n    vec3 ro = vec3(0,0,-3);\n    vec3 rd = normalize(vec3(uv,1));\n    vec3 col = vec3(0);\n    \n    float t = 0.;\n    \n    ro.yz *= rot2D(-m.y);\n    rd.yz *= rot2D(-m.y);\n    \n    ro.xz *= rot2D(-m.x);\n    rd.xz *= rot2D(-m.x);\n    \n    // Raymarching\n    for(int i = 0; i < 80; i++){\n        vec3 p = ro + rd * t;\n        \n        float d = map(p);\n        \n        t += d;\n        \n        \n        if(d < .001 || t > 100.) {\n            break;\n        }\n    }\n    \n    // Coloring\n    col = vec3(t * .2);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}