{
    "Shader": {
        "info": {
            "date": "1547050270",
            "description": "Koch Snowflake.\n------------------------2019/1/10 Fixed-----------------------------\nLoop index must be constant in Edge browser.",
            "flags": 0,
            "hasliked": 0,
            "id": "Wss3zX",
            "likes": 10,
            "name": "Koch Snowflake",
            "published": 3,
            "tags": [
                "snowflake",
                "koch"
            ],
            "usePreview": 0,
            "username": "Jamesika",
            "viewed": 672
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592654\n\nvec2 ToPolar(vec2 pos)\n{\n   \tfloat r = length(pos);\n    // a (0, 2*PI)\n    float a = atan(-pos.y,-pos.x)+PI;\n    return vec2(r,a);\n}\n\nvec2 Rotate(vec2 pos, float angle)\n{\n\treturn mat2(cos(angle), -sin(angle), sin(angle), cos(angle))*pos;\n}\n\n// ====================== Drawing Shapes ===========================\nfloat Circle(vec2 center, vec2 pos, float radius)\n{\n    vec2 dir = pos - center;\n    return step(dot(dir,dir),pow(radius,2.0));\n}\n\nfloat Triangle(vec2 center, vec2 pos, float radius)\n{\n    vec2 dir = pos - center;\n    \n    //return step(-radius,dir.y)*\n    //    step(dir.y, sqrt(3.0)*dir.x+2.0*radius)*\n    //    step(dir.y, -sqrt(3.0)*dir.x+2.0*radius);\n    \n    return step(\n        0.0,\n        min(dir.y + radius,\n            min(- dir.y + sqrt(3.0)*dir.x+2.0*radius,\n                - dir.y - sqrt(3.0)*dir.x+2.0*radius)));\n}\n\nfloat Hexagram(vec2 center, vec2 pos, float radius)\n{\n\tfloat t1 = Triangle(center, pos, radius);\n    \n    pos = center + Rotate(pos-center,PI);\n    \n    float t2 = Triangle(center, pos, radius);\n    return max(t1,t2);\n}\n\nfloat Skeleton(vec2 center, vec2 pos, float radius)\n{\n\tvec2 polar = ToPolar(pos - center);\n\t\n    // vertical skeleton\n    float width = 0.13*radius;\n    vec2 dir = Rotate(pos-center, round((polar.y-PI/2.0)/(PI/3.0))*(PI/3.0));\n    float ver = mix(0.0,1.0,1.0-clamp(abs(dir.x)/width,0.0,1.0));\n    ver = ver - mod(ver,0.25);\n    ver *= step(polar.x,radius);\n\n    // horizontal skeleton\n    dir.x = abs(dir.x);\n    dir = Rotate(dir,-PI/6.0);\n    float hor = clamp(dir.y/radius,0.0,1.0);\n    hor = fract(hor*4.0);\n    hor = 1.0 - abs(hor*2.0 - 1.0);\n    hor = hor - mod(hor,0.25);\n    \n    return max(ver, hor);\n}\n\nfloat DrawShape(vec2 center, vec2 pos, float radius)\n{\n    float shapeRatio = sin(iTime*0.7)*0.5+0.5;\n    return\n\t\tmix(Skeleton(center, pos, radius),\n            Hexagram(center, pos, radius),\n            shapeRatio);\n}\n\n// ================================================================\n\nfloat Koch(vec2 pos)\n{\n    const int n = 4;\n    \n    float radius = 100.0;\n    vec2 center = vec2(0.0);\n    \n    float c = DrawShape(center,pos,radius);\n    \n\tfor(int i = 0;i<n;i++)\n    {\n        vec2 localPos = pos - center;\n        float polarAngle = atan(-localPos.y,-localPos.x) + PI;\n        float index = floor(polarAngle/(PI/3.0))+0.5;\n        center += (radius*4.0/3.0)*vec2(cos(index*PI/3.0),sin(index*PI/3.0));\n        radius /= 3.0;\n        c += DrawShape(center,pos,radius);\n    }\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 pos = 350.0*(2.0*fragCoord - iResolution.xy)/iResolution.y;\n    \n    float t = iTime;\n    // rotate & scale\n    pos = Rotate(pos,iTime*0.4)*(1.0+0.2*sin(t));\n    // alpha\n   \tfloat c = Koch(pos)*(sin(iTime)*0.2+0.35);\n    \n    // color it\n    vec3 col = \n        vec3(0.1,0.15,0.2)*pow(1.5-length(uv-vec2(0.5)),2.0) + \n        vec3(0.4,0.8,0.88)*c;\n    \n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}