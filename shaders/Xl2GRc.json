{
    "Shader": {
        "info": {
            "date": "1430979835",
            "description": "Based on Flyguy's \"Ring Teister\" [url=https://www.shadertoy.com/view/Xt23z3]Xt23z3[/url]. I didn't write this effect since around 1999. Only now it's antialiased, motion blurred, texture filtered and high resolution. Uncomment line 40 to see the columns.",
            "flags": 0,
            "hasliked": 0,
            "id": "Xl2GRc",
            "likes": 220,
            "name": "Twisted Columns",
            "published": 3,
            "tags": [
                "2d",
                "twist",
                "columns"
            ],
            "usePreview": 1,
            "username": "iq",
            "viewed": 14436
        },
        "renderpass": [
            {
                "code": "// Created by inigo quilez - iq/2015\n// https://www.youtube.com/c/InigoQuilez\n// https://iquilezles.org/\n\n// Based on Flyguy's \"Ring Teister\" https://www.shadertoy.com/view/Xt23z3. I didn't write \n// this effect since around 1999. Only now it's antialiased, motion blurred, texture \n// filtered and high resolution. Uncomment line 40 to see the columns.\n    \nvec4 segment( float x0, float x1, vec2 uv, float id, float time, float f )\n{\n    float u = (uv.x - x0)/(x1 - x0);\n    float v =-1.0*(id+0.5)*time+2.0*uv.y/3.141593 + f*2.0;\n    float w = (x1 - x0);\n    \n    vec3 col = texture( iChannel0, vec2(u,v) ).xyz;\n    col += 0.3*sin( 2.0*f + 2.0*id + vec3(0.0,1.0,2.0) );\n\n    //col *= mix( 1.0, smoothstep(-0.95,-0.94, sin(8.0*6.2831*v + 3.0*u + 2.0*f)), smoothstep(0.4,0.5,sin(f*13.0)) );\n    col *= mix( 1.0, smoothstep(-0.8,-0.7, sin(80.0*v)*sin(20.0*u) ), smoothstep(0.4,0.5,sin(f*17.0)) );\n    \n    col *= smoothstep( 0.01, 0.03, 0.5-abs(u-0.5) );\n    \n    // lighting\n    col *= vec3(0.0,0.1,0.3) + w*vec3(1.1,0.7,0.4);\n    col *= mix(1.0-u,1.0,w*w*w*0.45);\n    \n    float edge = 1.0-smoothstep( 0.5,0.5+0.02/w, abs(u-0.5) );\n    return vec4(col,  edge * step(x0,x1) );\n    \n}\n\nconst int numSamples = 6;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (-iResolution.xy+2.0*fragCoord.xy) / max(iResolution.x,iResolution.y);\n\n    uv *= 5.0;\n    \n    vec2 st = vec2( length(uv), atan(uv.y, uv.x) );\n    //st = uv;  // uncomment to see the effect in cartersian coordinates\n\n    float id = floor((st.x)/2.0);\n    \n    vec3 tot = vec3(0.0);\n    for( int j=0; j<numSamples; j++ )\n    {\n        float h = float(j)/float(numSamples);\n        float time = iTime + h*(1.0/30.0);\n        \n        vec3 col = vec3(0.2)*(1.0-0.08*st.x);\n\n        vec2 uvr = vec2( mod( st.x, 2.0 ) - 1.0, st.y );\n\n        float a = uvr.y + (id+0.5) * 1.0*time + 0.2*sin(3.0*uvr.y)*sin(2.0*time);\n        float r = 0.9;\n        \n        float x0 = r*sin(a);\n        for(int i=0; i<5; i++ )\n        {\n            float f = float(i+1)/5.0;\n            float x1 = r*sin(a + 6.2831*f );\n\n            vec4 seg = segment(x0, x1, uvr, id, time, f );\n            col = mix( col, seg.rgb, seg.a ); \n            \n            x0 = x1;\n        }\n        col *= (1.6-0.1*st.x);\n        tot += col;\n    }\n    \n    tot = tot / float(numSamples);\n    \n \tfragColor = vec4( tot, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 3,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}