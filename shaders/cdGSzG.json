{
    "Shader": {
        "info": {
            "date": "1681231606",
            "description": "wavt3st.frag",
            "flags": 0,
            "hasliked": 0,
            "id": "cdGSzG",
            "likes": 3,
            "name": "wavt3st",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "andreaferrario",
            "viewed": 167
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    //vec2 uv = iResolution.xy, u = (fragCoord+fragCoord-uv)/ uv.y;    \n    //fragColor.rgb*=0.;\n    vec2 uv = 10.0 * fragCoord/iResolution.xy;\n    vec2 translate = vec2(-0.500,-0.500);\n    uv += translate;\n    \n   \n    // Time varying pixel color\n   \n    vec3 col = vec3(0.080,0.440,0.890);\n    vec3 col2 = vec3(0.078,0.318,0.882);\n    for(int n = 1; n < 50 ; n++){\n        float i = float (n);\n         uv += vec2(1.0 / i * sin(i * uv.y + iTime + 10.0 * i) + 0.8, \n         0.4 / i * sin(uv.x + iTime + 0.3 * i)+2.0);\n        \n        \n    }\n    col += 1.128 * sin(uv.y) + -0.500, 0.5 * cos(uv.x) + 0.5, sin(uv.x + uv.y);\n    col2 += sin(uv.x *cos(iTime/2.0) * 0.1 + sin(uv.y * sin(iTime / 60.0) * 100.0));\n    col += sin(uv.x *sin(iTime/1200.0) * 50.0 + sin(uv.x * sin(abs(iTime / 60.0)) * 20.0));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}