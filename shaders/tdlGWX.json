{
    "Shader": {
        "info": {
            "date": "1547740330",
            "description": "Just a basic review of graphics",
            "flags": 0,
            "hasliked": 0,
            "id": "tdlGWX",
            "likes": 1,
            "name": "Realtime Review",
            "published": 3,
            "tags": [
                "class"
            ],
            "usePreview": 0,
            "username": "tmcgillicuddy",
            "viewed": 349
        },
        "renderpass": [
            {
                "code": "vec2 circleLoc = vec2(0.5,0.5), squareCenter = vec2(0.5,0.5);\nfloat rad1 = 0.1, rad2 = 0.2;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n    //Correct uv for aspect ratio\n    uv.y *= iResolution.y/iResolution.x;\n    \n    //Correct shape location for aspect ratio\n    circleLoc.y *= iResolution.y/iResolution.x;\n    squareCenter.y *= iResolution.y/iResolution.x;\n    \n    //Move square center\n    vec2 newLoc = squareCenter; \n    newLoc.y = squareCenter.y * (1.0+sin(iTime));\n    \n    //Creat the first circle\n    float circle1 = step(rad1, distance(circleLoc,uv));\n    vec4 Layer3 = (1.0-circle1) * vec4(1,0,0,1);\n    \n    //Create rectangle\n    float interpX = step(newLoc.x-0.1, uv.x) - step(newLoc.x + 0.1, uv.x);\n\tfloat interpY = step(newLoc.y-0.1, uv.y) - step(newLoc.y + 0.1, uv.y);\n    vec4 Layer2 = (interpX * interpY) * vec4(0,1,0,1);\n\n    //Create 2nd Circle\n    float circle2 = step(rad2, distance(circleLoc,uv));\n    vec4 Layer1 = (1.0-circle2) * vec4(0,0,1,1);\n    \n    \n    //Create the base canvas with the rainbow colors\n    vec4 Canvas = vec4(0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)), 1.0);\n    \n    //Add the layers in order from 3 to 1\n    Canvas = mix(Canvas, Layer1, Layer1.a);\n    Canvas = mix(Canvas, Layer2, Layer2.a);\n    Canvas = mix(Canvas, Layer3, Layer3.a);\n    \n    fragColor = Canvas;\n    \n        //float circleLength = length(circleLoc - uv);\n\t\n    //if(circleLength< rad1) //Render Top most circle\n    //{\n    // \tfragColor = vec4(1.0,0,0,1);   \n    //}\n    //else if(uv.x > newLoc.x- 0.1 && uv.x < newLoc.x + 0.1 &&\n    //       uv.y > newLoc.y- 0.1 && uv.y < newLoc.y + 0.1) //Render Rectangle\n    //{\n    //    fragColor = vec4(0.0,0.0,1.0,1.0);\n    //}\n    //else if(circleLength< rad2) //Render Bottom most circle\n    //{\n    //    fragColor = vec4(0,1.0,0,1);   \n    //}\n    //else //Render general background\n    //{\n    //\t// Time varying pixel color\n    //\tvec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    //\t// Output to screen\n    //\tfragColor = vec4(col,1.0);\n    //}\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}