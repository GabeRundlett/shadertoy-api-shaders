{
    "Shader": {
        "info": {
            "date": "1639611859",
            "description": "meddling with noise and things, no idea. lots of unused code",
            "flags": 0,
            "hasliked": 0,
            "id": "ftdXRl",
            "likes": 4,
            "name": "thingthingthingthing",
            "published": 3,
            "tags": [
                "e"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 276
        },
        "renderpass": [
            {
                "code": "#define pi 3.14159\n\nfloat thc(float a, float b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nfloat ths(float a, float b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec2 thc(float a, vec2 b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nvec2 ths(float a, vec2 b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat h21 (vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat mlength(vec2 uv) {\n    return max(abs(uv.x), abs(uv.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    //uv.x += 0.1 * iTime;\n    float a = atan(uv.y, uv.x);\n    float r = length(uv);\n    \n    float time = 0.2 * iTime;\n    float c = 1.;\n    float f = 20.;\n    vec2 uv2 = 2. * uv * vec2(ths(f * (1. + h21(uv)), c * abs(uv.x) - time), thc(f * (1. + h21(uv)), c * abs(uv.y) - time));\n    vec2 uv3 = 2. * uv * vec2(ths(2., c * abs(uv.x) + time), thc(2., c * abs(uv.y) + time));\n\n    if (iFrame % 2 == 0)\n        uv = uv2;\n    else\n        uv = uv3;\n        uv = uv2;\n    //uv = mix(uv2, uv3, vec2(0.5 + 0.5 * thc(4., 2. * iTime)));\n    uv = vec2(ceil(2. * h21(floor(0.5 * iTime) + floor(2. * uv))) * atan(uv.y,uv.x) / pi, log(length(uv))-time);\n    \n    //uv += h21(uv) * 0.01 * thc(1000., 4. * r - iTime);\n    vec2 v = vec2(cos(a + iTime), sin(a + iTime));\n    float sc = 4.;\n    vec2 ipos = floor(sc * uv) + 0.5;\n    vec2 fpos = fract(sc * uv) - 0.5;\n    \n    float d = length(fpos);\n    float k = 0.5;\n    a = atan(fpos.y, fpos.x);\n    \n    float h = h21(ipos);\n    float s = smoothstep(-k, k, 0.5 * (0.5 + 0.5 * thc(2.,(10. + 10. * h) * d + a + 11. * h - iTime )) - d);\n    s *= 3. * (0.5-d);\n    vec3 col = s* pal(s + cos(h21(ipos) + (1. + 0.005 * h21(uv)) * iTime), vec3(1.), vec3(1.), vec3(1.), 0.1 + 0.4 * vec3(0.,0.33,0.66));\n    //col *= 0.8;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}