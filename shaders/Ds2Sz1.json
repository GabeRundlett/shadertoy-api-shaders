{
    "Shader": {
        "info": {
            "date": "1669916082",
            "description": "Creates a cool glassy effect",
            "flags": 32,
            "hasliked": 0,
            "id": "Ds2Sz1",
            "likes": 7,
            "name": "Square Interlacing",
            "published": 3,
            "tags": [
                "video",
                "buffer",
                "interlace",
                "interlacing"
            ],
            "usePreview": 0,
            "username": "MysteryPancake",
            "viewed": 246
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "const int scale = 32;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    int modFrame = iFrame % scale;\n    vec2 uv = fragCoord / iResolution.xy;\n    if (int(fragCoord.x) % scale == modFrame || int(fragCoord.y) % scale == modFrame) {\n        fragColor = texture(iChannel1, uv);\n    } else {\n        fragColor = texture(iChannel0, uv);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}