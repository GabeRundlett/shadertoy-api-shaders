{
    "Shader": {
        "info": {
            "date": "1615686564",
            "description": "I looked at my window and thought of this...\nBut it took a long 2 days to make!!",
            "flags": 64,
            "hasliked": 0,
            "id": "fsl3z4",
            "likes": 30,
            "name": "March 12, 2021",
            "published": 3,
            "tags": [
                "volumetric",
                "window",
                "lightshaft",
                "room",
                "saturday"
            ],
            "usePreview": 0,
            "username": "TheNosiriN",
            "viewed": 722
        },
        "renderpass": [
            {
                "code": "//Made by: TheNosiriN\n//Wanted to make this textureless but it didn't work out\n\n\n#define TIME (iTime)\n#define R (iResolution.xy)\n#define sinm(x) (sin(x)*.5+.5)\n#define mind(a, b) (a.x < b.x ? a:b)\n#define maxd(a, b) (a.x > b.x ? a:b)\n#define saturate(x) clamp(x, 0.0, 1.0)\n#define hash21(p) (fract(sin(dot(p, p+5373.836))*9272.8363) *2.0-1.0)\n\nconst vec3 light = normalize(vec3(0,0,1));\nconst mat2 M2 = mat2(0.8,-0.6,0.6,0.8);\n\nvec3 getSkyCol(vec3 dir){\n    return mix(vec3(1.000,0.788,0.133), vec3(0.529,0.808,0.922), pow(dir.y, 0.4));\n}\n\n\nvec3 window(vec3 eye, vec3 dir){\n    \n    float d, i; vec2 ind;\n    for (; i<100. && d < 100.; i++){\n       vec3 p = eye + dir * d;\n       \n       float c = max(abs(p.x)-3.5, abs(p.y)-2.5);\n       ind.x = min(abs(p.z)-0.4, max(-p.x+5.0, -p.z));\n       ind.x = min(ind.x, max(c-0.4, abs(p.z)-0.6 ));\n       ind.x = min(ind.x, max(c-0.5, abs(p.z)-0.5 ));\n       \n       //light shaft bug\n       ind.x = min(ind.x, c+mix(0.05, 0.3, saturate(\n           pow(abs(p.z)+sin(p.x*40.0-TIME)+sin(p.y*40.0+TIME)+sin(TIME*0.5)*4.0, 2.0)/50.0 )\n       ));\n       ind.x = max(ind.x, -c);\n       //\n       \n       vec2 f = vec2(max(c, -c-0.2), 0);\n       \n       c = max(abs(p.x+1.75)-1.7, abs(p.y)-3.5);\n       f.x = min(f.x, c);\n       \n       ind = mind(ind, maxd(f, vec2(abs(p.z)-0.1, 0)));\n       c = max(c+0.2, abs(p.y)-2.2);\n       ind.y = maxd(vec2(ind.x,1), vec2(c, 0)).y;\n       //ind.x = max(ind.x, -c);\n       \n       //wires\n       /*p.y -= 3.0;\n       p.z += 20.0;\n       p.y = mod(p.y+2.5/2.0, 2.5)-2.5/2.0;\n       float cy = length(p.yz)-0.05;\n       \n       p.z += 30.0;\n       p.y = mod(p.y+1.5, 3.0)-1.5;\n       cy = min(cy, length(p.yz)-0.05);\n       \n       ind.x = min(ind.x, cy);*/\n       \n       \n       if (abs(ind.x) < 0.0001)break;\n       d += ind.x;\n    }\n    return vec3(d, ind.y, i/100.0);\n}\n\n\nfloat noise(vec2 p) {\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    vec2 u = f*f*f*(6.0*f*f - 15.0*f + 10.0);\n    return mix(\n        mix(hash21(i+vec2(0.0,0.0)),hash21(i+vec2(1.0,0.0)),u.x),\n        mix(hash21(i+vec2(0.0,1.0)),hash21(i+vec2(1.0,1.0)),u.x),\n    u.y);\n}\nfloat fbm(vec2 p){\n    float f;\n    f  = 0.5000*noise(p); p = M2*p*2.02 + TIME*0.1;\n    f += 0.2500*noise(p); p = M2*p*2.03 + TIME*0.1;\n    f += 0.1250*noise(p);\n    return f;\n}\nfloat skyshape(vec3 p)\n{\n    float tex = textureLod(iChannel0, sin(p.xz*0.05)*2.0 + p.zx*0.1+TIME*0.02, 1.0).r*0.5+0.5;\n    float fn = fbm(p.xz*0.1+TIME*0.01);\n    float shape = abs(p.y-20.0 + fn*2.0)-tex;\n    shape += 0.8 - fn;\n    \n    return shape*0.5;\n    \n}\n\nvec3 darkSky(vec2 uv, vec3 eye, vec3 dir, vec3 col){\n    \n    vec3 sum;\n    float vol, i, d;\n    for (; i<100.0 && d<130.0; i++){\n        float dt = max(0.05,0.02*d/100.); //umm...\n        \n        vec3 p = eye + dir * d + hash21(uv)*0.02;\n        \n        float shape = skyshape(p);\n        \n        if (shape > 0.01){\n            d += shape;\n        }else{\n            vol += min(-shape, 0.01);\n            float diff = saturate(shape - skyshape(p+light*0.3));\n            sum += mix(vec3(0.529,0.808,0.922), vec3(1.000,0.788,0.133), diff*0.5+0.5) * vol;\n            d += dt;\n        }\n        if (vol >= 1.0)break;\n    }\n    sum /= 50.;\n    \n\n    return mix(sum, col+sum, i/100.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy-R*0.5)/R.y;\n    \n    float l = sinm(TIME*0.5)*0.4;\n    vec2 m = (iMouse.xy-R*0.5)/R.y * 0.2;\n    vec3 eye = vec3(-7, -7, 20),\n    f = normalize(vec3(1.2+m.x, 0.3 + l + m.y, 0) - eye),\n    s = normalize(cross(f, vec3(0,1,0))),\n    dir = (\n        mat4(vec4(s,0), vec4(cross(s, f),0), vec4(-f,0), vec4(1)) * \n        vec4(normalize(vec3(uv, -3.5)), 0)\n    ).xyz;\n    \n    \n    vec3 col;\n    vec3 sky = getSkyCol(dir);\n    \n    vec3 dist = window(eye, dir);\n    \n    if (dist.x >= 100.0){\n        col = darkSky(uv, eye, dir, sky);\n    }else{\n        if (dist.y == 1.0){ col = darkSky(uv, eye, dir, sky) * 0.8; }\n        col += (1.0-dist.x/100.0) * 0.2;\n        col = mix(col, pow(sky,vec3(0.5))*0.6, dist.z+hash21(dir.xy)*0.025);\n    }\n    \n    \n    uv = fragCoord.xy/R;\n    col *= 0.3 + 0.8*pow(32.0*uv.x*uv.y*(1.0-uv.x)*(1.0-uv.y),0.2);\n    \n    col *= smoothstep(0.1, 1.0, col);\n    // Output to screen\n    fragColor = vec4(sqrt(col),1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "musicstream",
                        "id": 26152,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/bluntshelterrecords/typeraw-scandinavian-vibes-feat-jhas"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}