{
    "Shader": {
        "info": {
            "date": "1669295407",
            "description": "still working on it \nfont taken from here\nhttps://opengameart.org/content/8x8-ascii-bitmap-font-with-c-source",
            "flags": 0,
            "hasliked": 0,
            "id": "ddXSRf",
            "likes": 2,
            "name": "pixel art font string",
            "published": 3,
            "tags": [
                "pixel",
                "bitmap",
                "font"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 163
        },
        "renderpass": [
            {
                "code": "bool f_b_64bitchar_bitset(vec2 o_point, float n_char){\n    if(n_char == -1.){return false;}\n    //uint: an unsigned 32-bit integer\n    //only 32 bit numbers can be stored, thats why we need a modulo here\n    uint[] a_n_u32_charparts = uint[256] (2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,2122219134u,32382u,0u,0u,269488144u,4096u,5140u,0u,339612672u,5182u,940865552u,1064016u,1746282758u,24724u,2550400056u,39012u,4112u,0u,67373072u,4104u,538972168u,2064u,947664980u,84u,2081427456u,4112u,0u,528384u,1006632960u,0u,0u,4096u,135274560u,516u,1111630872u,6180u,269490192u,14352u,404767292u,32260u,404767292u,15426u,303306768u,4158u,1077805694u,15426u,1111360060u,15426u,135274622u,516u,1111245372u,15426u,2084717116u,15424u,1048576u,4096u,1048576u,528384u,102260736u,24600u,8257536u,126u,1612187136u,1560u,404759068u,2048u,958544896u,939801129u,1008998424u,16962u,572400158u,7714u,16851484u,7202u,572662302u,7714u,35521086u,15874u,35521086u,514u,956375580u,7202u,1115570754u,16962u,269488252u,31760u,538976312u,7202u,235541026u,8722u,33686018u,32258u,2460665474u,33410u,1380599362u,16994u,1145324600u,14404u,35529246u,514u,1145324600u,4208708u,169746974u,8722u,805848120u,14404u,269488382u,4112u,1111638594u,15426u,608322177u,6180u,2861728386u,33478u,404235330u,16932u,271074434u,4112u,135274622u,32260u,67372060u,7172u,268960770u,16416u,269488156u,7184u,5128u,0u,0u,32256u,0u,0u,4104u,0u,2084584448u,23650u,1111360002u,14918u,70778880u,14340u,1115439168u,23650u,2118269952u,15362u,470292480u,2056u,841744384u,471870498u,605815812u,9252u,269484048u,4112u,270008336u,235933712u,337904644u,13324u,134744072u,6152u,1516634112u,16962u,1282670592u,17476u,1111228416u,15426u,1178206208u,33701442u,1650196480u,1077967938u,1278476288u,1028u,402929664u,7200u,138151936u,6152u,1145307136u,22628u,1111621632u,6180u,2172715008u,26202u,608305152u,26136u,1145176064u,101191720u,272367616u,15368u,202115128u,14344u,269488144u,1052688u,808456220u,7184u,1275068416u,50u,2122219134u,32382u);\n    //if(o_point.x > 7. || o_point.y > 7.){return false;}\n    vec2 o_point_mod = floor(mod(o_point, 8.));\n    o_point_mod.y = 7.-o_point_mod.y;\n    float n_y_floor = floor(o_point_mod.y / 4.); // 4 = half height of 8 max height\n\n    float n_pixel_index = (o_point_mod.y * 8.) + o_point_mod.x;\n    float n_pixel_index_mod = mod(n_pixel_index, 32.);\n    uint b_bitset = \n        a_n_u32_charparts[int((n_char*2.)+(n_y_floor))] & (1u<<uint(n_pixel_index_mod));\n    return b_bitset > 0u;\n}\nbool f_b_64bitchar_bitset_string(\n    vec2 o_point,\n    float[5] a_n_char\n){\n    vec2 o_point_mod = floor(mod(o_point, 8.*float(a_n_char.length())));\n    float n_index_a_n_char = floor(o_point_mod.x / 8.);\n    \n    return f_b_64bitchar_bitset(o_point, a_n_char[int(n_index_a_n_char)]);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    fragCoord = floor(fragCoord *0.3);\n    \n    float _em = 33.,_dq = 34.,_ht = 35.,_dl = 36.,_pc = 37.,_as = 38.,_sq = 39.,_rbo = 40.,_rbc = 41.,_str = 42.,_pls = 43., eql = 44.,_mns = 45.,_dot = 46.,_sls = 47.,_0 = 48.,_1 = 49.,_2 = 50.,_3 = 51.,_4 = 52.,_5 = 53.,_6 = 54.,_7 = 55.,_8 = 56.,_9 = 57.,_dqt = 58.,_smc = 59.,_lt = 60.,_eql = 61.,_gt = 62.,_qm = 63.,_at = 64.,_A = 65.,_B = 66.,_C = 67.,_D = 68.,_E = 69.,_F = 70.,_G = 71.,_H = 72.,_I = 73.,_J = 74.,_K = 75.,_L = 76.,_M = 77.,_N = 78.,_O = 79.,_P = 80.,_Q = 81.,_R = 82.,_S = 83.,_T = 84.,_U = 85.,_V = 86.,_W = 87.,_X = 88.,_Y = 89.,_Z = 90.,_sbo = 91.,_sbc = 93.,_pow = 94.,usc_ = 95.,_btc = 96.,_a = 97.,_b = 98.,_c = 99.,_d = 100.,_e = 101.,_f = 102.,_g = 103.,_h = 104.,_i = 105.,_j = 106.,_k = 107.,_l = 108.,_m = 109.,_n = 110.,_o = 111.,_p = 112.,_q = 113.,_r = 114.,_s = 115.,_t = 116.,_u = 117.,_v = 118.,_w = 119.,_x = 120.,_y = 121.,_z = 122.,_cbo = 123.,_pip = 124.,_cbc = 125.,_tld = 126.;\n    fragColor = vec4(\n        float(\n            f_b_64bitchar_bitset_string(\n                fragCoord,\n                float[5](_i, -1., _a, _m, -1.)\n            )\n        )\n    );\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}