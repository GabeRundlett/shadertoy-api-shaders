{
    "Shader": {
        "info": {
            "date": "1607649813",
            "description": "Iteratively blurring an image Currently, you have to rewind the shader for it to work.",
            "flags": 32,
            "hasliked": 0,
            "id": "tdGfzc",
            "likes": 0,
            "name": "Iterative Image Blurring",
            "published": 3,
            "tags": [
                "postprocessing",
                "blur",
                "iterative"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 202
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel1, uv);\n    //bool loaded = texture(iChannel1, vec2(0.5)).a != 0.0; // Doesn't work currently.\n    if (iFrame > 0) {// && loaded) {\n        fragColor = texture(iChannel0, uv);\n        vec4 sum = vec4(0.0);\n        float amount = 0.0;\n\n        for (int i=-1; i < 2; i++) {\n            for (int j=-1; j < 2; j++) {\n                sum += texelFetch(iChannel0, ivec2(fragCoord) + ivec2(i, j), 0);\n                amount++;\n            }\n        }\n\n        fragColor = sum / amount;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}