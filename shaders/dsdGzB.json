{
    "Shader": {
        "info": {
            "date": "1677496249",
            "description": "UV Tiling from tutorial : https://www.youtube.com/watch?v=VmrIDyYiJBA ",
            "flags": 0,
            "hasliked": 0,
            "id": "dsdGzB",
            "likes": 1,
            "name": "Hexagonal UVTiling",
            "published": 3,
            "tags": [
                "uv",
                "hexagon",
                "tiling"
            ],
            "usePreview": 0,
            "username": "rge15",
            "viewed": 247
        },
        "renderpass": [
            {
                "code": "float HexDist(in vec2 p)\n{\n    p = abs(p);\n    float d = dot( p, normalize(vec2(1.,1.73))); \n    d = max(d,p.x);\n    d = step(d, 0.3);\n\n    return d;\n}\n\nvec4 HexUv( in vec2 uv )\n{\n    vec2 triSide = vec2(1.,1.73);\n    vec2 hSide = triSide*0.5;\n\n    vec2 gva = mod(uv,triSide) - hSide;\n    vec2 gvb = mod(uv-hSide,triSide) - hSide;\n\n    vec2 gv;\n    if(length(gva)<length(gvb))\n        gv = gva;\n    else\n        gv = gvb;\n    \n    \n    vec2 id = uv - gv;\n    \n    return vec4(gv,id);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    uv *= 2.;\n    vec3 col = vec3( 0.);\n\n    col = vec3( HexDist(uv));\n\n    vec4 hex = HexUv(uv);\n\n    col = vec3(hex.xy,0.);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}