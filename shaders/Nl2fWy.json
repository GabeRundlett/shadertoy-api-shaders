{
    "Shader": {
        "info": {
            "date": "1652711873",
            "description": "The file was named coolspace.glsl but I didn't remember writing it and it wasn't that cool so I thought I should rename it. After several minutes of writer's block trying I instead added alien batbots. Batbots make everything cool.",
            "flags": 40,
            "hasliked": 0,
            "id": "Nl2fWy",
            "likes": 23,
            "name": "Cool Space",
            "published": 3,
            "tags": [
                "ufobats"
            ],
            "usePreview": 0,
            "username": "eiffie",
            "viewed": 453
        },
        "renderpass": [
            {
                "code": "#define R iResolution\n#define OPI 3.5\nfloat ff=1.,time,T,J=-1.,glw=0.,rad=20.5;\nfloat oSin(float a){a=mod(a,OPI*2.);\n  float b=.87,c=.37,pi4=OPI/4.,s=a<OPI?1.:-1.;a=mod(a,OPI);if(a>OPI/2.)a=OPI-a;\n  return (a<pi4?a*b:pi4*b+(a-pi4)*c)*s;\n}\nfloat oCos(float a){return oSin(a+OPI/2.);}\nfloat dot2(vec2 a){return dot(a,a);}\n#define RMX mat2(.92388,.38268,-.38268,.92388)*(rad+sin(J+t*mod(J,32.))*.3)\nvec3 path(float t){t+=J*.976+sin(J)*.3;t*=2.05/rad*(mod(rad/2.,2.)<1.?1.:-1.);vec2 p=vec2(oCos(t),oSin(t))*RMX;return vec3(p.x,1.8+sin(t*(1.+mod(J,25.)))*.5,p.y);}\nmat2 face(vec2 a){a=normalize(a);return mat2(a.y,-a.x,a.x,a.y);}\nvec2 rotate(vec2 v, float a) {return cos(a)*v+sin(a)*vec2(v.y,-v.x);}\nfloat jet(vec3 p){\n  return ff*max(abs(p.y)-.05+5.*p.x*p.x*max(0.,p.z+.1)+min(dot(p.xz,p.xz)*3.,length(p.xz)*.25),-p.x*p.x-p.z-.05);\n}\nvec3 rot(vec3 p){\n  vec3 p0=path(time+.1),p1=path(time),p2=path(time-.1),p3=path(time+1.),p4=path(time-1.);\n  p-=(p0+p2)*.5;\n  p.xz=p.xz*face(p0.xz-p2.xz);\n  p.xy=rotate(p.xy,dot2((p3.xz+p4.xz)*.5-p1.xz)*2.);\n  return p;\n}\nvoid GetJ(vec2 p){//get closest jet\n  vec4 O=texture(iChannel0,(p+vec2(100.))/200.);\n  J=O.x;rad=O.y;ff=O.w;time=O.z;\n}\nvec3 mcol=vec3(0.0);\nfloat DE(vec3 p){ \n vec4 z=vec4(abs(mod(p,6.)-3.),max(1.0,2.-T*.1)),p0=vec4(.09,.98,.09,.0);//0.08,1.0,-1.0,.0);\n for (int n = 0; n < 3; n++) { \n  z.xyz=clamp(z.xyz, -1.0, 1.0) *2.0-z.xyz; \n  z=z/min(dot(z.xyz,z.xyz),1.0)+p0;\n }p=rot(p);\n float d=(max(z.x,max(z.y,z.z))-1.0)/z.w;\n float dJ=jet(p);\n d=min(d,dJ);\n if(mcol.x>0.){\n  if(d==dJ){\n   if(p.y<.024)mcol+=abs(sin(vec3(J,J+.4,J+1.2)));\n   else mcol+=vec3(0);\n  }\n  else mcol+=abs(sin(z.xyz));\n }\n p.y+=0.005;p.x=abs(p.x)-.045;\n float dL=dot2(p.xy)+abs(p.z*.001);\n if(dL<.00025){\n   if(mcol.x>0.)mcol.r+=2.;\n   else glw+=exp(dL);\n }\n return d;\n}\nvec3 sky(vec3 rd, vec3 L){\n  float d=1.-abs(rd.y);\n  return pow(d,8.)*(rd*.5+.5)*(0.4*dot(rd,L)+0.6);\n}\nfloat rnd;\nvoid randomize(in vec2 p){rnd=fract(float(iTime)+sin(dot(p,vec2(13.3145,117.7391)))*4317.7654321);}\n\nfloat ShadAO(in vec3 ro, in vec3 rd){\n float t=0.01*rnd,s=1.0,d,mn=0.01;\n for(int i=0;i<12;i++){\n  d=max(DE(ro+rd*t)*1.5,mn);\n  s=min(s,d/t+t*0.5);\n  t+=d;\n }\n return s;\n}\nvec3 rt,up=vec3(0,1,0);\nvec3 scene(vec3 ro, vec3 rd){GetJ(ro.xz);\n  float t=DE(ro)*rnd,d,px=1.0/R.x;\n  for(int i=0;i<99;i++){\n    T=t;\n    GetJ(ro.xz+rd.xz*t);\n    t+=d=DE(ro+rd*t);\n    if(t>200.0 || d<px*t)break;\n  }\n  vec3 L=normalize(vec3(0.3,0.03,0.5));\n  vec3 bg=sky(rd,L),col=bg;\n  if(d<px*t*5.0){\n    while(d<px*t){t-=max(px*t,abs(d));d=DE(ro+rd*t);}\n    mcol=vec3(0.001);\n    vec3 so=ro+rd*t;\n    d=DE(so);\n    vec3 N=normalize(rt*(DE(so+rt*d)-d)+up*(DE(so+up*d)-d)-rd*(DE(so-rd*d)-d));\n    vec3 scol=mcol*0.25;\n    if(scol.r>1.1)col=vec3(1.,rnd*.5,0.);\n    else{\n      float dif=.5+.5*dot(N,L),vis=clamp(dot(N,-rd),.05,1.),fr=pow(1.-vis,5.),shad=ShadAO(so,L);\n      col=((scol+abs(N.yxz)*.3)*dif+fr*sky(reflect(rd,N),L))*shad;\n    }\n  }\n  return mix(col,bg,min(1.,t*t*0.001))+glw*vec3(1,.5*rnd,0.);\n}\nmat3 lookat(vec3 fw){fw=normalize(fw);rt=normalize(cross(fw,up));\n  up=cross(rt,fw);return mat3(rt,up,fw);\n}\nvoid mainImage(out vec4 O, in vec2 U){\n//O=vec4(abs(sin(texture(iChannel0,U/R.xy).x)));return;//view map\n  randomize(U);J=5.;\n  vec3 ro=path(iTime*1.4-2.),rd=lookat(path(iTime*1.4)-ro)*normalize(vec3(U-R.xy*.5,R.x));\n  ro.y+=.35;\n  O=vec4(scene(ro,rd),1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//requires NEAREST\n//find the closest jet with minimal checks then fudge\n#define time iTime\n#define rez iResolution.xy\n#define OPI 3.5\nfloat oSin(float a){a=mod(a,OPI*2.);\n  float b=.87,c=.37,pi4=OPI/4.,s=a<OPI?1.:-1.;a=mod(a,OPI);if(a>OPI/2.)a=OPI-a;\n  return (a<pi4?a*b:pi4*b+(a-pi4)*c)*s;\n}\nfloat oCos(float a){return oSin(a+OPI/2.);}\nfloat octo(vec2 p){return max(max(abs(p.x),abs(p.y)),max(abs(p.x+p.y),abs(p.x-p.y))*.707);}\n#define RMX mat2(.92388,.38268,-.38268,.92388)*(rad+sin(J+t*mod(J,32.))*.3)\nfloat J,rad;\nvec2 path(float t){t+=J*.976+sin(J)*.3;t*=2.05/rad*(mod(rad/2.,2.)<1.?1.:-1.);return vec2(oCos(t),oSin(t))*RMX;}\nvoid mainImage(out vec4 O, in vec2 U){\n  vec2 uv=100.*(2.0*U-rez)/rez;\n  float t=time,dm=250.,c=-1.,ff=1.,r;\n  rad=floor(octo(uv)*.5+.5)*2.+.5;\n  for(J=0.;J<64.;J+=1.){\n    float d=length(uv-path(t));\n    if(d<dm){if(dm<.5)ff=.5;dm=d;c=J;r=rad;}\n  }\n  O=vec4(c,r,t,ff);//jet,radius,time,fudge factor \n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define bps 8.\n#define pi 3.14159\nfloat scale(float note){//throws out dissonant tones\n float n2=mod(note,12.);\n if((n2==1.)||(n2==3.)||(n2==5.)||(n2==8.)||(n2==11.))note=-100.;//locrian\n return note;\n}\n// note number to frequency  from https://www.shadertoy.com/view/ldfSW2\nfloat ntof(int n0){\n float n=scale(float(n0));\n return (n>0.)?440.0 * pow(2.0, (float(n) - 67.0) / 12.0):0.0;\n}\nvec2 rot(vec2 v, float a) {return cos(a)*v+sin(a)*vec2(v.y,-v.x);}\nvec2 I(int n, float t){\n  float f=ntof(n);\n  if(f==0.)return vec2(0);t=pow(t,.999);\n  return (1.-t)*rot(fract(vec2(t,t*2.005)*f),f);\n}\nvec2 Sound(float time){\n  float tim=time*bps;//tim+=pow(1.-fract(tim),20.0);\n  float bt=floor(tim),t=fract(tim);\n  int n1=int(bt/64.)%8;\n  int n0=n1+(int(bt/8.)%8),n=n0+(int(bt)%8),n2=n0+(int(bt/2.)%8),n4=n0+(int(bt/4.)%8);\n  vec2 v=I(n+12,t+=pow(1.-fract(tim),20.0))*.75;\n  v-=I(n2+24,fract(tim/2.));\n  v+=I(n4+31,fract(tim/4.));\n  v-=I(n0+24,fract(tim/8.));\n  return v*.2;\n}\nvec2 mainSound(int samp, float time){\n  return Sound(time)+Sound(time-.5)*.6-Sound(time-1.5)*.3;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}