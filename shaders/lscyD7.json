{
    "Shader": {
        "info": {
            "date": "1519145359",
            "description": "Very cheap, very high quality, very like life appearance,  can be easily modded into lower and higher dimensions. Best use is water height (can be seen in my other shaders).",
            "flags": 0,
            "hasliked": 0,
            "id": "lscyD7",
            "likes": 71,
            "name": "Cheap 5D Wave Noise",
            "published": 3,
            "tags": [
                "noise",
                "wave",
                "5d"
            ],
            "usePreview": 0,
            "username": "afl_ext",
            "viewed": 2675
        },
        "renderpass": [
            {
                "code": "\n/*\n5D wave noise\nafl_ext 2018-2023\npublic domain\n*/\n\nfloat gw5d_hash(float p){\n    return fract(4768.1232345456 * sin(p));\n}\n\nvec2 gw5d_wavedx(vec4 position, vec4 direction, float speed, float frequency, float timeshift) {\n    float x = dot(direction, position) * frequency + timeshift * speed;\n    float wave = exp(sin(x) - 1.0);\n    float dx = wave * cos(x);\n    return vec2(wave, -dx);\n}\n\nfloat gw5d_seedWaves = 0.0;\nvec4 gw5d_randWaves(){\n    float x = gw5d_hash(gw5d_seedWaves);\n    gw5d_seedWaves += 1.0;\n    float y = gw5d_hash(gw5d_seedWaves);\n    gw5d_seedWaves += 1.0;\n    float z = gw5d_hash(gw5d_seedWaves);\n    gw5d_seedWaves += 1.0;\n    float w = gw5d_hash(gw5d_seedWaves);\n    gw5d_seedWaves += 1.0;\n    return vec4(x,y,z,w) * 2.0 - 1.0;\n}\n\nfloat getwaves5d(vec4 position, float dragmult, float timeshift){\n    float iter = 0.0;\n    float phase = 6.0;\n    float speed = 2.0;\n    float weight = 1.0;\n    float w = 0.0;\n    float ws = 0.0;\n    for(int i=0;i<20;i++){\n        vec4 p = gw5d_randWaves() * 1.21;\n        vec2 res = gw5d_wavedx(position, p, speed, phase, 0.0 + timeshift);\n        position -= normalize(position - p) * res.y * weight * dragmult * 0.01;\n        w += res.x * weight;\n        iter += 12.0;\n        ws += weight;\n        weight = mix(weight, 0.0, 0.2);\n        phase *= 1.2;\n        speed *= 1.02;\n    }\n    return w / ws;\n}\n\n// helper function\n\nvec3 polarToXyz(vec2 xy){\n    xy *= vec2(2.0 *3.1415,  3.1415);\n    float z = cos(xy.y);\n    float x = cos(xy.x)*sin(xy.y);\n    float y= sin(xy.x)*sin(xy.y);\n    return normalize(vec3(x,y,z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec2 mouse = iMouse.xy / iResolution.xy;\n    vec3 col = vec3(1.0) * getwaves5d(vec4(polarToXyz(uv), (mouse.x * 2.0 - 1.0) * 10.0), 10.0 + mouse.y * 10.0, iTime);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}