{
    "Shader": {
        "info": {
            "date": "1581571543",
            "description": "Volumetric histogram of the colors in an image.\nChange buffer B, in buffer A to experiment. (reset time)\n\nI assume an AI could minimize the parameter space of the shape?",
            "flags": 32,
            "hasliked": 0,
            "id": "wltXRs",
            "likes": 7,
            "name": "Color Distribution",
            "published": 3,
            "tags": [
                "color",
                "volumetric"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 428
        },
        "renderpass": [
            {
                "code": "// Fork of \"Reaction Diffusion 3D\" by wyatt. https://shadertoy.com/view/wtcGzB\n// 2020-02-13 05:26:37\n\nSampler\nMain\n{\n    R = iResolution.xy;\n    vec3 mi = 0.5*vec3(R/N,N*N);\n    vec3 p = vec3(0,0,-R.x/N);\n    vec3 d = normalize(vec3((u-0.5*R)/R.y,1));\n    if (iMouse.z>0.) {\n \t\tp.zx *= e(6.2*iMouse.x/R.x);\n\t\td.zx *= e(6.2*iMouse.x/R.x);\n        p.yz *= e(6.2*iMouse.y/R.y);\n\t\td.yz *= e(6.2*iMouse.y/R.y);\n    } else {\n\t\tp.yz *= e(.2*iTime);\n\t\td.yz *= e(.2*iTime);\n\t}\n    Q = vec4(0);\n    for (int i = 0; i < 120; i++) {\n        vec3 o = abs(p)-mi;\n        float m = length(max(o,0.));\n        if (m<.01)\n        { \t\n            vec4 a = 25.*T(p+mi)/float(iFrame);\n            float aa = a.x;\n            Q += 10./R.x*(1.-exp(-aa))*a;\n            p += d*(exp(-5.*aa));\n            p = mod(p+mi,R3D)-mi;\n        } else p += d*m;\n        \n \t}\n    Q = 0.8*atan(Q);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define N 7.\nvec2 R;\n#define R3D vec3(R/N,N*N)\nvec2 d2 (vec3 U) {\n    U = mod(U,R3D);\n    U.z = floor(U.z);\n\treturn U.xy+vec2(mod(U.z,N),floor(U.z/N))*R/N;\n}\nvec3 d3 (vec2 u) {\n    vec2 o = floor(u/R*N);\n\treturn vec3(mod(u,R/N),o.x+o.y*N);\n}\nmat2 e (float a) {\n\tfloat c = cos(a), s = sin(a);\n    return mat2(c,-s,s,c);\n}\n#define A(U) texelFetch(iChannel0,ivec2(d2(U)),0)\n#define B(U) texelFetch(iChannel1,ivec2(d2(U)),0)\n#define Sampler vec4 T(vec3 U) {return mix(texture(iChannel0,d2(vec3(U.xy,floor(U.z)))/R),texture(iChannel0,d2(vec3(U.xy, ceil(U.z)))/R),fract(U.z));}\n#define Main void mainImage( out vec4 Q, in vec2 u )\n#define _3D  R = iResolution.xy; vec3 U = d3(u);\n#define Me Q = A(U);\n#define Them vec4 M = 1./6.*(A(U+vec3(1,0,0))+A(U+vec3(0,1,0))+A(U+vec3(0,0,1))+A(U-vec3(1,0,0))+A(U-vec3(0,1,0))+A(U-vec3(0,0,1)));\n#define Init  if (iFrame < 1) Q = vec4(0);\n// Dave Hashkins\nvec2 hash22(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "Main\n{\n    _3D\n    Me\n        for (int i = 0; i < 100; i++) {\n        vec2 v = hash22(vec2(i,iFrame));\n        vec3 color = texture(iChannel1,v).xyz;\n        if (length(color)>0.) Q.xyz += normalize(color)*exp(-length(R3D*color-U));\n        }\n    Init  \n   \n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 14,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}