{
    "Shader": {
        "info": {
            "date": "1700985050",
            "description": "showing 3 methods side by side to show if math is right\nlooks it is, only the wave ring at the center counts, ignore the rest\nVERY SLOW CODE remove \"discard\" code line to explore more with mouse",
            "flags": 0,
            "hasliked": 0,
            "id": "DtcfR4",
            "likes": 2,
            "name": "3D wave expansion comparison",
            "published": 3,
            "tags": [
                "physics"
            ],
            "usePreview": 0,
            "username": "lomateron",
            "viewed": 253
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(iFrame!=0){discard;}\n    float zoom = 9.;\n    vec2 u = zoom*(fragCoord*2.-iResolution.xy)/iResolution.y;\n    vec2 m = zoom*(iMouse.xy*2.-iResolution.xy)/iResolution.y;\n    float t = m.x; //if(iMouse.z<.5){t = iTime*.3;} //how expanded is the wave\n          t = 2.;  \n    float res = 33.;                               //wave resolution\n    float wid = 11.;//66.*m.y;                     //wave width\n    float amp = .1;                                //wave amplitude\n    float pi  = 3.14159265358;\n    float l   = length(u);\n    float o   = 0.;\n    if(u.y>=0.)            //O(1) method, top half, exact solution, does not depend on \"res\"\n    {\n        float c = 1./wid;\n        o = sqrt(pi)/(8.*c*c*c*l)*(-(t - l)*exp(-pow(t - l,2.)/(4.*c*c))\n                                   +(t + l)*exp(-pow(t + l,2.)/(4.*c*c)));\n    }\n    if(u.x<0.&&u.y<0.)     //O(n) method, bottom left\n    {\n        float sum = 0.;\n        for(float a=1.; a<res; a++){\n            float an1 = a*l;\n            float an2 = a*t;\n            sum += a*a*cos(an2)*sin(an1)/an1/exp(a*a/wid/wid);\n        }\n        o = sum;\n    }\n    if(u.x>=0.&&u.y<0.)    //O(n^3) method, bottom right\n    {\n        float sum = 0.;\n        for(float c=-res; c<=res; c++){\n        for(float b=-res; b<=res; b++){\n        for(float a=-res; a<=res; a++){\n            float ang = (u.x*a + u.y*b) + sqrt(a*a+b*b+c*c)*t;\n            sum += cos(ang)/exp((a*a+b*b+c*c)/wid/wid);\n        }}}\n        o = sum/pi/4.;\n    }\n    fragColor = vec4(o*amp*amp+.5);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}