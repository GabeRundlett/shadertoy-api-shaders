{
    "Shader": {
        "info": {
            "date": "1525279180",
            "description": "More alife version of [url]https://www.shadertoy.com/view/lsdfD8[/url]  with random time fluctuations on every parameters.\n\nuse ds = .5 for better qualitty (but slower).\n",
            "flags": 0,
            "hasliked": 0,
            "id": "ldtfDN",
            "likes": 34,
            "name": "helix 6b ( triple helix DNA)",
            "published": 3,
            "tags": [
                "raymarching",
                "sdf",
                "spiral",
                "helix",
                "spring",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1407
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/lsdfD8\n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float T = (iTime-4.), t=1.,l,a,d,v, ds = 1.,  // ds=.5 for better look\n          r0 = 200., r1 = 20., n = 3.82,       // n = 24/2pi\n          A = 2.38, H = 4.*cos(A/2.);\n    mat2  R = mat2( sin(T/4.+vec4(0,33,11,0)) );  \n    vec3  q = iResolution,\n          D = normalize(vec3(.3*(U+U-q.xy)/q.y, -1)).zxy,  // ray direction\n          c, p // = 30./q;                     // marching point along ray \n               = vec3(-30.*(T/2.-2.),-2,-15.); D.yz*=R;\n\n    O-=O;\n    for ( O++; O.x > 0. && t > .01 ; O-=.015*ds )\n        q = p, //q.xz *= R, q.yz *= R,         // rotation (could be factored out loop on p,D)\n\n        c = q, c.z += r0, a = atan(c.y,c.z), \n        a += .02*sin(5.*T+7.*a),\n        //q.x += 10.*sin(2.*T+q.x/200.), \n        q.z = length(c.zy)-r0, q.y = r0*a, q.x = mod(q.x-a*r0/6.3,r0)-r0/2.,// large helix\n        q.z += 10.*sin(2.*T+3.*a), \n        c = q, c.x += r1, a = atan(c.z,c.x), \n        a += .05*sin(5.*T+3.*a),\n        q.x = length(c.xz)-r1, q.z = r1*a, q.y = mod(q.y-a*r1/6.3,r1)-r1/2.,// medium helix\n        q.z += .3*sin(10.*T+a), \n\n        l = length(q.xy), a = atan(q.y,q.x), \n        a += .2*sin(3.*T+q.z)\n          + .05*sin(30.*T+3.*a),\n        d = a-q.z,\n        d = min( abs( mod(d  ,6.28) -3.14), \n                 abs( mod(d-A,6.28) -3.14) ),  // double strand (~2pi/3)\n        t = length( vec3( l-4., d, fract(n*a)-.5 ) ) - .3, // spheres along spring\n        d = a - round(q.z*n)/n -A/2. -3.14 +.5/n,\n        d = ( length(vec2( (fract(q.z*n-.5)-.5)/n, l*cos(d)-H ))-.05 )/n, //rods\n        t = min( t, v=max(l-4.,d) ),           // bounded rods\n        p += ds*t*D;                           // step forward = dist to obj\n\n    if (t==v) O.rg *= .9; else O.gb *= .9;     // colored rods vs spheres\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}