{
    "Shader": {
        "info": {
            "date": "1624994730",
            "description": "This is an api test",
            "flags": 0,
            "hasliked": 0,
            "id": "fl2GDd",
            "likes": 5,
            "name": "Balthazaurus test",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "vonba",
            "viewed": 271
        },
        "renderpass": [
            {
                "code": "vec4 lookup(sampler2D src, float x, float y)\n{\n\treturn texture(src, vec2(x / iResolution.x, y / iResolution.y));\n}\n\nfloat rayStrength(vec2 raySource, vec2 rayRefDirection, vec2 coord, float seedA, float seedB, float speed)\n{\n\tvec2 sourceToCoord = coord - raySource;\n\tfloat cosAngle = dot(normalize(sourceToCoord), rayRefDirection);\n\t\n\treturn clamp(\n\t\t(0.45 + 0.15 * sin(cosAngle * seedA + iTime * speed)) +\n\t\t(0.3 + 0.2 * cos(-cosAngle * seedB + iTime * speed)),\n\t\t0.0, 1.0) *\n\t\tclamp((iResolution.x - length(sourceToCoord)) / iResolution.x, 0.5, 1.0);\n}\n\nfloat bubbleStrength(vec2 startPos, vec2 waveOffset, float radius, float speed, vec2 coord)\n{\n\tvec2 curPos = vec2(\n\t\tmod(startPos.x + waveOffset.x * 0.5, iResolution.x + radius * 2.0) - radius,\n\t\tmod(waveOffset.y - iTime * speed, iResolution.y + radius * 2.0) - radius);\n\treturn 1.0 - smoothstep(0.0, radius, length(coord - curPos));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv.y = 1.0 - uv.y;\n\tvec2 coord = vec2(fragCoord.x, iResolution.y - fragCoord.y);\n\t\n\t// Calculate the lookup transformation offset for the current fragment\n\tfloat offsetX = (0.1112 * iResolution.x * cos(1.44125 * (iTime + uv.y))) + (26.77311 * iTime);\n\tfloat offsetY = (0.08447 * iResolution.y * sin(2.14331 * (iTime + uv.x)));\n\t\n\t// Use parallax transformed lookup on the texture layers\n\tvec4 tex1 = lookup(iChannel0, coord.x + offsetX, coord.y + offsetY);\n\tvec4 tex2 = lookup(iChannel1, coord.x * 2.0 + offsetX * 1.6, coord.y * 2.0 + offsetY * 1.5);\n\tvec4 tex3 = lookup(iChannel2, coord.x * 3.0 + offsetX * 1.3, coord.y * 3.0 + offsetY * 1.2);\n\tvec4 tex4 = lookup(iChannel3, coord.x * 0.5 + offsetX * 0.8, coord.y * 0.5 + offsetY * 0.9);\n\t\n\t// Set the parameters of the sun rays\n\tvec2 rayPos1 = vec2(iResolution.x * 0.1, iResolution.y * -0.4);\n\tvec2 rayRefDir1 = normalize(vec2(1.0, -0.116));\n\tfloat raySeedA1 = 36.2214;\n\tfloat raySeedB1 = 21.11349;\n\tfloat raySpeed1 = 1.5;\n\t\n\tvec2 rayPos2 = vec2(iResolution.x * 1.2, iResolution.y * -0.6);\n\tvec2 rayRefDir2 = normalize(vec2(1.0, 0.241));\n\tfloat raySeedA2 = 22.39910;\n\tfloat raySeedB2 = 18.0234;\n\tfloat raySpeed2 = 1.1;\n\t\n\t// Calculate the colour of the sun rays on the current fragment\n\tvec4 rays1 =\n\t\tvec4(1.2, 1.0, 1.0, 1.0) *\n\t\trayStrength(rayPos1, rayRefDir1, coord, raySeedA1, raySeedB1, raySpeed1);\n\t \n\tvec4 rays2 =\n\t\tvec4(1.0, 1.2, 1.0, 1.0) *\n\t\trayStrength(rayPos2, rayRefDir2, coord, raySeedA2, raySeedB2, raySpeed2);\n\t\n\t\n\t// Calculate the colours contribution of each bubble on the current fragment.\n\tfloat bubbleScale = iResolution.x / 600.0;\n\t\n\tvec4 bubble1 =\n\t\tvec4(1.0, 1.0, 1.0, 1.0) *\n\t\t bubbleStrength(vec2(0.0, 0.0), vec2(offsetX * 0.2312, 0.0), 20.0 * bubbleScale, 60.0, coord);\n\t\n\tvec4 bubble2 =\n\t\tvec4(1.0, 1.0, 1.0, 1.0) *\n\t\t bubbleStrength(vec2(40.0, 400.0), vec2(offsetX * -0.06871, offsetY * 0.301), 7.0 * bubbleScale, 25.0, coord);\n\t\n\tvec4 bubble3 =\n\t\tvec4(1.0, 1.0, 1.0, 1.0) *\n\t\t bubbleStrength(vec2(300.0, 70.0), vec2(offsetX * 0.19832, offsetY * 0.1351), 14.0 * bubbleScale, 45.0, coord);\n\t\n\tvec4 bubble4 =\n\t\tvec4(1.0, 1.0, 1.0, 1.0) *\n\t\t bubbleStrength(vec2(500.0, 280.0), vec2(offsetX * -0.0993, offsetY * -0.2654), 12.0 * bubbleScale, 32.0, coord);\n\t\n\tvec4 bubble5 =\n\t\tvec4(1.0, 1.0, 1.0, 1.0) *\n\t\t bubbleStrength(vec2(400.0, 140.0), vec2(offsetX * 0.2231, offsetY * 0.0111), 10.0 * bubbleScale, 28.0, coord);\n\t\n\tvec4 bubble6 =\n\t\tvec4(1.0, 1.0, 1.0, 1.0) *\n\t\t bubbleStrength(vec2(200.0, 360.0), vec2(offsetX * 0.0693, offsetY * -0.3567), 5.0 * bubbleScale, 12.0, coord);\n\t\n\tvec4 bubble7 =\n\t\tvec4(1.0, 1.0, 1.0, 1.0) *\n\t\t bubbleStrength(vec2(0.0, 0.0), vec2(offsetX * -0.32301, offsetY * 0.2349), 16.0 * bubbleScale, 51.0, coord);\n\t\n\tvec4 bubble8 =\n\t\tvec4(1.0, 1.0, 1.0, 1.0) *\n\t\t bubbleStrength(vec2(130.0, 23.0), vec2(offsetX * 0.1393, offsetY * -0.4013), 8.0 * bubbleScale, 24.0, coord);\n\t\t\n\t\n\t// Blend all of the elements together.\n\t// This deliberately saturates the colour in places.\n\tfragColor = \n\t\ttex1 * 0.45 +\n\t\ttex2 * 0.25 +\n\t\ttex3 * 0.15 +\n\t\ttex4 * 0.1 +\n\t\trays1 * 0.5 +\n\t\trays2 * 0.4 +\n\t\tbubble1 * 0.25 +\n\t\tbubble2 * 0.1 +\n\t\tbubble3 * 0.18 +\n\t\tbubble4 * 0.13 +\n\t\tbubble5 * 0.15 +\n\t\tbubble6 * 0.05 +\n\t\tbubble7 * 0.12 +\n\t\tbubble8 * 0.11;\n\t\n\t// Uncomment this line if you want to see just the rays:\n\t//fragColor = rays1 * 0.5 + rays2 * 0.5;\n\t\n\t// Attenuate brightness towards the bottom, simulating light-loss due to depth.\n\t// Give the whole thing a blue-green tinge as well.\n\tfloat brightness = 1.0 - (coord.y / iResolution.y);\n\tfragColor.x *= 0.2 + (brightness * 0.8);\n\tfragColor.y *= 0.3 + (brightness * 0.7);\n\tfragColor.z *= 0.4 + (brightness * 0.6);\n\t\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}