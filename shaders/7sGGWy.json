{
    "Shader": {
        "info": {
            "date": "1632072531",
            "description": "Generating the lgbt flag using hsv",
            "flags": 0,
            "hasliked": 0,
            "id": "7sGGWy",
            "likes": 2,
            "name": "LGBT+ Flag",
            "published": 3,
            "tags": [
                "animation",
                "flag",
                "hsv",
                "gay",
                "hsb",
                "lgbt"
            ],
            "usePreview": 0,
            "username": "Ravbug",
            "viewed": 284
        },
        "renderpass": [
            {
                "code": "// set to 0 to disable the waving animation\n#define WAVE 1\n\n// adjust the number of stripes\nconst float stripes = 6.0;\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\n\n// linear value remap\nfloat remap(float value, float low1, float high1, float low2, float high2){\n    return low2 + (value - low1) * (high2 - low2) / (high1 - low1);\n}\n\n// step function w/ floor\nfloat stepf(float value,float steps){\n    return remap(floor(remap(value,0.0,1.0,0.0,steps)),0.0,steps,0.0,1.0);\n}\n\n// used to control position on the rainbow\nfloat hsbinfcufve(float x){\n    return pow(x,1.5);\n}\n\n// used to control brightness\nfloat b(float x){\n    return 1.0 - pow(x,3.0);\n}\n\n// prevent wraparound\nfloat clampInRange(float x){\n    return ((x >= 0.0 && x <= 1.0) ? x : 0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     // Normalized pixel coordinates (from 0 to 1)\n     vec2 uv = fragCoord/iResolution.xy;\n     #if WAVE\n     uv.y += (sin(10.0*(-iTime/3.0+uv.x))*0.03);\n     uv.y = clampInRange(uv.y);\n     #endif\n\n     // calculate where to sample on rainbow\n     float coord = hsbinfcufve(stepf(1.0-uv.y,stripes));\n     \n     // calculate color & brightness\n     vec3 resCol = hsb2rgb(vec3(coord,1.0,b(coord)));\n \n\n    // Output to screen\n    fragColor = vec4(resCol,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}