{
    "Shader": {
        "info": {
            "date": "1467822965",
            "description": "learning the ropes of multipass (ish) rendering. more to come.",
            "flags": 32,
            "hasliked": 0,
            "id": "Xl3GRH",
            "likes": 18,
            "name": "purple aurora",
            "published": 3,
            "tags": [
                "glow",
                "purple"
            ],
            "usePreview": 0,
            "username": "mahalis",
            "viewed": 1473
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 1.0 - fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 direction = normalize(vec2(sin(iTime * 1.7) * cos(0.2 + iTime * 0.4), -6.0));\n    vec4 lastColor = 0.333 * (texture(iChannel0, uv + direction * 0.02) + texture(iChannel0, uv + direction * 0.04) + texture(iChannel0, uv + direction * 0.06));\n    float emissionAmount = .5 + .333 * (sin(uv.y * 6.1 + iTime * -1.12) + cos(1.0 + uv.x * 5.7 - iTime * 0.7) + sin(1.7 + uv.x * 7.3 + iTime * 2.3));\n    vec3 newColor = vec3(0.85, 0.3, 0.9) * emissionAmount * max(0.0, 0.8 - 30.0 * uv.y);\n    fragColor = vec4(newColor + .9 * lastColor.rgb * vec3(0.94 + 0.05 * (0.5 * (sin(1.8 + iTime * 2.1) +sin(iTime * 1.3 + 0.6))), 0.9, 1.0),1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}