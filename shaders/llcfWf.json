{
    "Shader": {
        "info": {
            "date": "1541299358",
            "description": "Ray marched fluid. I think i did the reflection/refraction right. Pretty happy with the results!\nThis pattern formation is indicative of an extremely accurate solver :) \nsee [Fluid][https://www.shadertoy.com/view/MtdBDB] for a break down of the code",
            "flags": 32,
            "hasliked": 0,
            "id": "llcfWf",
            "likes": 48,
            "name": "Stream",
            "published": 3,
            "tags": [
                "fluid",
                "physics"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 2171
        },
        "renderpass": [
            {
                "code": "vec2 R;\nvec2 tile (vec2 v) {return ((1.-fract(v)*2.)*sign(fract(0.5*v)*2.-1.))*0.5+0.5;}\nvec4 T ( vec2 U ) {return texture(iChannel0,tile(U/R));}\nfloat H ( vec2 U) {\n\treturn -15.*T(U).z;\n}\nvec2 dH ( vec2 U ) {\n\treturn vec2(H(U+vec2(1,0))-H(U-vec2(1,0)),H(U+vec2(0,1))-H(U-vec2(0,1)));\n}\nvec3 rot (vec3 p, vec3 d) {\n    float t = length(d);\n    if (t==0.)return p;\n    d = normalize(d);\n    vec3 q = p-d*dot(d,p);\n   \treturn p+(q)*(cos(t)-1.) + cross(d,q)*sin(t);\n}\nvec3 plane (vec3 p, vec3 d) {\n\tfloat x = dot(-p,vec3(0,0,1))/dot(d,vec3(0,0,1));\n    return p + d*x;\n}\nvec4 O (vec3 n) {return texture(iChannel2, n);}\nvec4 po (vec4 x, float a) {return exp(a*log(x));}\nvec4 mx (vec4 a, vec4 b, float x) {\n\treturn po(a,x)*po(b,1.-x);\n}\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    R = iResolution.xy;\n    C = T(U);\n    float yaw = 0.1*iTime,\n          up  = .9*R.y*sin(.346*iTime);\n    if (iMouse.z > 0.) {\n    \tyaw = iMouse.x/R.x*6.2;\n        up = iMouse.y-0.9*R.y;\n    }\n    vec2 V = 2.*(U-0.5*R)/R.y;\n    vec3 p = vec3(0.5*R,1.5*R.y);\n    vec3 d = normalize(vec3(V,-2));\n    p =  rot(p,vec3(.6,0,0));\n    d = rot(d,vec3(.6,0,0));\n    p = rot(p-vec3(0.5*R,0),vec3(0,0,yaw))+vec3(0.5*R,0);\n    d = rot(d,vec3(0,0,yaw));\n    p.z += up;\n    p = plane(p+vec3(0,0,0),d);\n    for (int i = 0; i < 4; i++) {\n    \tp += 0.5*d*(p.z-H(p.xy));\n    }\n    \n    vec3 n = normalize(vec3(dH(p.xy),1));\n    const float eta = 1.33;\n    float ref = 1.0 - eta * eta * (1.0 - dot(n, d) * dot(n, d)); //https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/refract.xhtml\n    vec3 w = reflect(d,n),\n         u = refract(d,n,eta);\n    vec2 sed = plane(p,u).xy,\n         bas = plane(p+vec3(0,0,90),u).xy;\n    vec4 W = .9*(sqrt(texture(iChannel2,w.xzy))),\n         SED = T(sed),\n         BAS = sqrt(texture(iChannel3,bas.xy/R)),\n         G = 0.5+0.5*sin(7.*SED.w*vec4(.4,.5,1.,4)),\n         D = mix(BAS,G,0.7+0.3*SED.w);\n    C =  mx(D,W,0.1+0.9*ref);\n    //C = vec4(0.5+0.5*n,1);\n    if (p.x<0.||p.y<0.||R.x<p.x||R.y<p.y) C *= 0.2;\n   \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "cubemap",
                        "id": 26,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 R;float N;\nfloat H (vec2 U) {return texture(iChannel1,U/R).z;}\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nfloat X (vec2 U, vec2 u, inout vec4 Q, in vec2 r) {\n    vec2 V = U + r, v = T(V).xy;\n    float P = T (V-v).z;\n    Q.xy -= 0.25*r*(P-Q.z);\n    return (0.5*(length(r-v+u)-length(r+v-u))+P);\n}\n\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec2 u = T(U).xy, e = vec2(1,0);\n \tQ = T(U-u);\n \tQ.z = H(U-u)-H(U+u)+0.25*(X(U,u,Q,e)+X(U,u,Q,-e)+X(U,u,Q,e.yx)+X(U,u,Q,-e.yx));\n \tif (H(U) > 0.) Q.w = 1.;\n \t\n \tif (iFrame < 1) Q = vec4(.48,0,0,0);\n    if (U.x < 1.||U.y < 1.||R.x-U.x < 1.||R.y-U.y < 1.) Q.xy = vec2(.48,0.);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "float H (vec2 U) {\n\treturn texture(iChannel0,U/iResolution.xy).z;\n}\nvoid mainImage( out vec4 C, in vec2 U )\n{\tvec2 R = iResolution.xy;\n    C = vec4(0);\n    if (length(U-vec2(0.075,0.15)*R) < 4.) C.z = 2.;\n    if (length(U-vec2(0.075,0.5)*R) < 16.) C.z = 1.;\n    if (length(U-vec2(0.115,0.75)*R)+ length(U-vec2(0.055,0.82)*R)< R.x/12.) C.z = .5;\n \tC.z = mix(C.z,0.25*(\n        H(U+vec2(1,0))+\n          H(U+vec2(-1,0))+\n            H(U+vec2(0,-1))+\n              H(U+vec2(0,1))),.5);\n \tif (iFrame > 3) discard;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec2 R;float N;\nfloat H (vec2 U) {return texture(iChannel1,U/R).z;}\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nfloat X (vec2 U, vec2 u, inout vec4 Q, in vec2 r) {\n    vec2 V = U + r, v = T(V).xy;\n    float P = T (V-v).z;\n    Q.xy -= 0.25*r*(P-Q.z);\n    return (0.5*(length(r-v+u)-length(r+v-u))+P);\n}\n\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec2 u = T(U).xy, e = vec2(1,0);\n \tQ = T(U-u);\n \tQ.z = H(U-u)-H(U+u)+0.25*(X(U,u,Q,e)+X(U,u,Q,-e)+X(U,u,Q,e.yx)+X(U,u,Q,-e.yx));\n \tif (H(U) > 0.) Q.w = 1.;\n \t\n \tif (iFrame < 1) Q = vec4(.48,0,0,0);\n    if (U.x < 1.||U.y < 1.||R.x-U.x < 1.||R.y-U.y < 1.) Q.xy = vec2(.48,0.);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}