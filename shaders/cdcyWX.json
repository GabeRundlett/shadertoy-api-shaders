{
    "Shader": {
        "info": {
            "date": "1695539485",
            "description": "UI Test 7\nIf you want to see the gradient color version, `POST_EFFECT 1` will work for you.",
            "flags": 0,
            "hasliked": 0,
            "id": "cdcyWX",
            "likes": 31,
            "name": "UI Test 7",
            "published": 3,
            "tags": [
                "ui",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 1388
        },
        "renderpass": [
            {
                "code": "#define MAX_STEPS 4\n#define MAX_DIST 4.\n#define SURF_DIST .0005\n#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b,kw) smoothstep(kw*antialiasing(1.0),b,d)\n#define B(p,s) max(abs(p).x-s.x,abs(p).y-s.y)\n#define deg45 .707\n#define R45(p) (( p + vec2(p.y,-p.x) ) *deg45)\n#define Tri(p,s) max(R45(p).x,max(R45(p).y,B(p,s)))\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n#define ZERO (min(iFrame,0))\n#define SkewX(a) mat2(1.0,tan(a),0.0,1.0)\n#define SkewY(a) mat2(1.0,0.0,tan(a),1.0)\n#define seg_0 0\n#define seg_1 1\n#define seg_2 2\n#define seg_3 3\n#define seg_4 4\n#define seg_5 5\n#define seg_6 6\n#define seg_7 7\n#define seg_8 8\n#define seg_9 9\n#define POST_EFFECT 0\n\nfloat rand (vec2 co) {\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat segBase(vec2 p){\n    vec2 prevP = p;\n    \n    float size = 0.02;\n    float padding = 0.05;\n\n    float w = padding*3.0;\n    float h = padding*5.0;\n\n    p = mod(p,0.05)-0.025;\n    float thickness = 0.005;\n    float gridMask = min(abs(p.x)-thickness,abs(p.y)-thickness);\n    \n    p = prevP;\n    float d = B(p,vec2(w*0.5,h*0.5));\n    float a = radians(40.0);\n    p.x = abs(p.x)-0.1;\n    p.y = abs(p.y)-0.05;\n    float d2 = dot(p,vec2(cos(a),sin(a)));\n    //d = max(d2,d);\n    //d = max(-gridMask,d);\n    return d;\n}\n\nfloat seg0(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    float mask = B(p,vec2(size,size*2.7));\n    d = max(-mask,d);\n    return d;\n}\n\nfloat seg1(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x+=size;\n    p.y+=size;\n    float mask = B(p,vec2(size*2.,size*3.7));\n    d = max(-mask,d);\n    \n    p = prevP;\n    \n    p.x+=size*1.9;\n    p.y-=size*3.2;\n    mask = B(p,vec2(size,size+0.01));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg2(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x+=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x-=size;\n    p.y+=0.05;\n    mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg3(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.y = abs(p.y);\n    p.x+=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x+=0.06;\n    mask = B(p,vec2(size,size+0.01));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg4(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    \n    p.x+=size;\n    p.y+=0.08;\n    float mask = B(p,vec2(size*2.,size*2.0));\n    d = max(-mask,d);\n\n    p = prevP;\n    \n    p.y-=0.08;\n    mask = B(p,vec2(size,size*2.0));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg5(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x-=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x+=size;\n    p.y+=0.05;\n    mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg6(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x-=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.y+=0.05;\n    mask = B(p,vec2(size,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg7(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x+=size;\n    p.y+=size;\n    float mask = B(p,vec2(size*2.,size*3.7));\n    d = max(-mask,d);\n    return d;\n}\n\nfloat seg8(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.y = abs(p.y);\n    p.y-=0.05;\n    float mask = B(p,vec2(size,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg9(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.y-=0.05;\n    float mask = B(p,vec2(size,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x+=size;\n    p.y+=0.05;\n    mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat checkChar(int targetChar, int char){\n    return 1.-abs(sign(float(targetChar) - float(char)));\n}\n\nfloat drawFont(vec2 p, int char){\n    p.y*=-1.;\n    float d = seg0(p)*checkChar(seg_0,char);\n    d += seg1(p)*checkChar(seg_1,char);\n    d += seg2(p)*checkChar(seg_2,char);\n    d += seg3(p)*checkChar(seg_3,char);\n    d += seg4(p)*checkChar(seg_4,char);\n    d += seg5(p)*checkChar(seg_5,char);\n    d += seg6(p)*checkChar(seg_6,char);\n    d += seg7(p)*checkChar(seg_7,char);\n    d += seg8(p)*checkChar(seg_8,char);\n    d += seg9(p)*checkChar(seg_9,char);\n    \n    return d;\n}\n\nvec2 GetDist(vec3 p) {\n    vec3 prevP = p;\n    float d = length(p.xz)-1.;\n    d = max((abs(p.y)-0.6),d);\n    return vec2(d,0);\n}\n\nvec2 RayMarch(vec3 ro, vec3 rd, float side, int stepnum) {\n    vec2 dO = vec2(0.0);\n    \n    for(int i=0; i<stepnum; i++) {\n        vec3 p = ro + rd*dO.x;\n        vec2 dS = GetDist(p);\n        dO.x += dS.x*side;\n        dO.y = dS.y;\n        \n        if(dO.x>MAX_DIST || abs(dS.x)<SURF_DIST) break;\n    }\n    \n    return dO;\n}\n\nvec3 GetNormal(vec3 p) {\n    float d = GetDist(p).x;\n    vec2 e = vec2(.001, 0);\n    \n    vec3 n = d - vec3(\n        GetDist(p-e.xyy).x,\n        GetDist(p-e.yxy).x,\n        GetDist(p-e.yyx).x);\n    \n    return normalize(n*-1.);\n}\n\nvec3 R(vec2 uv, vec3 p, vec3 l, float z) {\n    vec3 f = normalize(l-p),\n        r = normalize(cross(vec3(0,1,0), f)),\n        u = cross(f,r),\n        c = p+f*z,\n        i = c + uv.x*r + uv.y*u,\n        d = normalize(i-p);\n    return d;\n}\n\nfloat bgItem0(vec2 p){\n    vec2 prevP = p;\n    float d = B(p,vec2(0.05,0.005));\n    \n    float a = radians(-45.);\n    p.x-=0.005;\n    p.x = abs(p.x)-0.023;\n    p.y-=0.012;\n    float mask = B(p,vec2(0.02,0.01));\n    p.x = abs(p.x)-0.01;\n    p.y+=0.01;\n    mask = max(dot(p,vec2(cos(a),sin(a))),mask);\n    \n    d = max(-mask,d);\n    \n    p = prevP;\n    a = radians(45.);\n    p.x+=0.005;\n    p.x = abs(p.x)-0.023;\n    p.y+=0.012;\n    mask = B(p,vec2(0.02,0.01));\n    p.x = abs(p.x)-0.01;\n    p.y-=0.01;\n    mask = max(dot(p,vec2(cos(a),sin(a))),mask);\n    \n    d = max(-mask,d);\n    return d;\n}\n\nvec3 background(vec2 p, vec3 col, float w){\n    vec2 prevP = p;\n\n    p.x += mix(0.,-0.017,step(0.03,mod( p.y,0.06)));\n    p.x += iTime*0.01*mix(1.,-1.,step(0.03,mod( p.y,0.06)));\n    \n    p.x = mod(p.x,0.034)-0.017;\n    p.y = mod(p.y,0.03)-0.015;\n    \n    p*=Rot(radians(45.));\n    p = DF(p,1.);\n    p-=0.007;\n    p*=Rot(radians(45.));\n    float d = B(p,vec2(0.0001,0.007));\n    \n    p = prevP;\n    p.y+=0.015;\n    p.y = mod(p.y,0.03)-0.015;\n    float d2 = abs(p.y)-0.0001;\n    d = min(d,d2);\n    \n    col = mix(col,vec3(0.05),S(d,-0.0003,w));\n    \n    p = prevP;\n    p.x += iTime*0.02*mix(1.,-1.,step(0.04,p.y));\n    p.x = mod(p.x,0.1)-0.05;\n    p.y =abs(p.y)-0.082;\n    d = bgItem0(p);\n\n    col += mix(col,vec3(0.1),S(d,0.0,w));\n    \n    return col;\n}\n\nfloat waveCircle(vec2 p, float s, float numW, float amp, float deg, float thickness){\n    float r = s+amp*cos(atan(p.y,p.x)*numW);\n    float d = abs(length(p)-r)-thickness;    \n    p*=Rot(radians(deg));\n    r = s+amp*cos(atan(p.y,p.x)*numW);\n    float d2 = abs(length(p)-r)-thickness;  \n    d = min(d,d2);    \n    return d;\n}\n\nfloat grid(vec2 p){\n    p = mod(p,0.004)-0.0002;\n    float d = min(abs(p.x)-0.00001,abs(p.y)-0.00001);\n    return d;\n}\n\nvec3 radar(vec2 p,vec3 col, float w){\n    vec2 prevP = p;\n    p*=Rot(radians(-25.0*iTime));\n    float a = -atan(p.x,p.y);\n    float d = length(p)-0.05;\n    \n    col = mix(col,vec3(1.)*a*0.01,S(d,0.0,w));\n    \n    d = length(p)-0.05;\n    a = radians(2.);\n    p.x = abs(p.x);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    p = prevP;\n    p*=Rot(radians(-25.0*iTime));\n    d = max(p.y,d);\n    col = mix(col,vec3(0.2),S(d,0.0,w));\n    \n    return col;\n}\n\nvec3 centerUiItem(vec2 p, vec3 col, float w){\n    vec2 prevP = p;\n    p*=Rot(radians(20.*iTime*0.3));\n    float d = waveCircle(p,0.082,12.,0.003,16.,0.00001);\n    col = mix(col,vec3(1.),S(d,-0.0002,w));\n    \n    p = prevP;\n    p*=Rot(radians(-20.*iTime*0.4));\n    d = abs(length(p)-0.0645)-0.00001;\n    p = DF(p,30.);\n    p-=0.047;\n    p*=Rot(radians(45.));\n    float d2 = B(p,vec2(0.0001,0.0017)); \n    d = min(d,d2);\n    \n    p = prevP;\n    p*=Rot(radians(-20.*iTime*0.4));\n    d2 = abs(length(p)-0.0665)-0.00001;\n    d = min(d,d2);\n\n    p = DF(p,10.);\n    p-=0.048;\n    p*=Rot(radians(45.));    \n    d2 = B(p,vec2(0.0001,0.0027)); \n    d = min(d,d2);\n    \n    p = prevP;\n    p*=Rot(radians(-20.*iTime*0.4));\n    p = DF(p,5.);\n    p-=0.045;\n    p*=Rot(radians(45.)); \n    d2 = B(p,vec2(0.0025,0.001)); \n    d = min(d,d2);    \n    \n    p = prevP;\n    p*=Rot(radians(30.*iTime*0.5));\n    d2 = abs(length(p)-0.05)-0.00001;\n    d = min(d,d2);  \n    p = DF(p,5.);\n    p-=0.037;\n    p*=Rot(radians(45.)); \n    d2 = B(p,vec2(0.0002,0.0023)); \n    d = min(d,d2);   \n    \n    p = prevP;\n    p*=Rot(radians(30.*iTime*0.5));\n    p = DF(p,20.);\n    p-=0.0365;\n    p*=Rot(radians(45.)); \n    d2 = B(p,vec2(0.0002,0.0013)); \n    d = min(d,d2);       \n    \n    col = mix(col,vec3(1.),S(d,-0.0002,w));\n    \n    \n    p = prevP;\n    d = max(length(p)-0.048,grid(p));\n    col = mix(col,vec3(0.05),S(d,0.0,w));    \n    \n    \n    p = prevP;\n    d = abs(length(p)-0.01)-0.00001;\n    d2 = abs(length(p)-0.023)-0.00001;\n    d = min(d,d2);  \n    d2 = abs(length(p)-0.035)-0.00001;\n    d = min(d,d2); \n    \n    p = DF(p,2.);\n    p-=0.021;\n    p*=Rot(radians(45.)); \n    d2 = B(p,vec2(0.0001,0.0195)); \n    d = min(d,d2);   \n    \n    col = mix(col,vec3(0.7),S(d,-0.0005,w));\n    \n    p = prevP;\n    p.y-= iTime*0.01;\n    p*=60.;\n    vec2 id = floor(p);\n    vec2 gr = fract(p)-0.5;\n    vec2 prevGr = gr;\n    float r = rand(id);\n    \n    d = length(gr-vec2(sin(r*5.)*0.25))-0.15*sin(r*(iTime+1.)*1.5);\n    d = max(length(prevP)-0.05,d);\n    col = mix(col,vec3(0.5),S(d,0.0,w));\n    \n    p = prevP;\n    p*=Rot(radians(45.+sin(iTime*0.3)*270.));\n    p.y = abs(p.y)-0.057;\n    p.y*=-1.;\n    d = Tri(p,vec2(0.002));\n    col = mix(col,vec3(0.5),S(d,0.0,w));\n    \n    p = prevP;\n    p = DF(p,30.);\n    p-=0.053;\n    d = length(p)-0.0003;\n    col = mix(col,vec3(0.2),S(d,0.0,w));    \n    \n    p = prevP;\n    p*=Rot(radians(-45.-sin(iTime*0.2)*180.));\n    p.y = abs(p.y)-0.073;\n    p.y*=-1.;\n    d = Tri(p,vec2(0.002));\n    col = mix(col,vec3(0.5),S(d,0.0,w));    \n\n    return col;\n}\n\nvec3 arrowItem(vec2 p, vec3 col, float w){\n    vec2 prevP = p;\n    \n    p.x = abs(p.x);\n    p.x+=0.0035;\n    p.x+=iTime*0.02;\n    p.x = mod(p.x,0.018)-0.009;\n    p.x+=0.008;\n    p*=Rot(radians(-90.));\n    p.y*=0.75;\n    float d = Tri(p,vec2(0.01));\n    p.y+=0.005;\n    d = abs(max(-Tri(p,vec2(0.01)),d))-0.00005;\n\n    p = prevP;\n    d = max(abs(p.x)-0.138,d);\n    d = max(-(length(p)-0.085),d);\n\n    col = mix(col,vec3(0.5),S(d,0.0,w));  \n    return col;\n}\n\nvec3 rightTopItem(vec2 p, vec3 col, float w){\n    vec2 prevP = p;\n    p = DF(p,2.);\n    p-=0.01;\n    float d = B(p,vec2(0.001)); \n    \n    p = prevP;\n    \n    p*=Rot(radians(20.));\n    p = DF(p,2.);\n    p-=0.005+sin(iTime)*0.002+0.001;\n    \n    float d2 = B(p,vec2(0.001)); \n    d = min(d,d2);\n    \n    p = prevP;\n    p*=Rot(radians(45.+230.*sin(iTime*1.2)));\n    d2 = abs(length(p)-0.02)-0.00001;\n    d2 = max(abs(p.x)-0.01,d2);       \n    d = min(d,d2);\n    \n    col = mix(col,vec3(0.5),S(d,0.0,w));\n    \n    return col;\n}\n\nvec3 rightBottomItem(vec2 p, vec3 col, float w){\n    vec2 prevP = p;\n    p*=20.;\n    p*=SkewX(0.4);\n    float d = drawFont(p-vec2(-0.09,0.0),int(mod(iTime*4.,10.)));\n    float d2 = drawFont(p-vec2(0.09,0.0),int(mod(iTime*8.,10.)));\n    d = min(d,d2);\n    \n    p = prevP;\n    p*=Rot(radians(45.)+radians(-30.*iTime*0.5));\n    p = DF(p,4.);\n    p-=0.015;\n    p*=Rot(radians(45.)); \n    d2 =abs( length(prevP)-0.021)-0.003;\n    d2 = max(-B(p,vec2(0.0015,0.01)),d2);\n   \n    p = prevP;\n    p*=Rot(radians(45.)+radians(-30.*iTime*0.5));\n    float a = radians(70.);\n    p.x = abs(p.x);\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);\n    d = min(d,d2);   \n    \n    p = prevP;\n    p*=Rot(radians(20.*iTime*1.2));\n    d2 = abs(length(p)-0.015)-0.00001;\n    p = DF(p,0.75);\n    p-=0.015;\n    p*=Rot(radians(45.)); \n    d2 = max(-B(p,vec2(0.003,0.01)),d2);\n    \n    d = min(d,d2); \n    col = mix(col,vec3(0.5),S(d,0.0,w));  \n    return col;\n}\n\nvec3 leftTopItem(vec2 p, vec3 col, float w){\n    vec2 prevP = p;\n    p.x+=iTime*0.01;\n    p.y-=0.0002;\n    p*=144.;\n    vec2 id = floor(p);\n    vec2 gr = fract(p)-0.5;\n    vec2 prevGr = gr;\n    float r = rand(id);\n\n    float d = B(gr,vec2(sin(r+3.*iTime*r)*r*0.4));\n    float mask = B(prevP,vec2(0.023,0.014));\n    d = max(mask,d);\n\n    gr-=0.5;\n    float d2 = min(abs(gr.x)-0.06,abs(gr.y)-0.06);\n    d2 = max(mask,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = abs( B(p,vec2(0.025,0.016)))-0.00001;\n    d2 = max(-(abs(p.x)-0.023),d2);\n    d2 = max(-(abs(p.y)-0.012),d2);\n    d = min(d,d2);\n    \n    col = mix(col,vec3(0.5),S(d,0.0,w));  \n    return col;\n}\n\nvec3 graphBar(vec2 p, vec3 col, float w, float speed, float start){\n    vec2 prevP = p;\n    float endTime = 5.;\n    float dist = 0.02;\n    float t = mod(start+iTime*speed,endTime);\n    float animVal = endTime*0.5;\n    float val = t/animVal;\n    if(t<endTime*0.5){\n        val=(t/animVal)*dist;\n    } else {\n        val=(1.-((t-animVal)/animVal))*dist;\n    }\n    \n    p.x+=0.021;\n    float d = B(p-vec2(dist,0.0),vec2(dist,0.002));\n    \n    col = mix(col,vec3(0.25),S(d,0.0,w));  \n    d = B(p-vec2(dist-val,0.0),vec2(dist-val,0.002));\n    \n    p = prevP;\n    p.x+=0.001;\n    float d2 = abs(B(p,vec2(dist+0.002,0.004)))-0.00001;\n    d2 = max(-(abs(p.x)-dist-0.001),d2);\n    d2 = max(-(abs(p.y)-0.003),d2);\n    d = min(d,d2);\n    col = mix(col,vec3(0.5),S(d,0.0,w));\n    return col;\n}\n\nvec3 leftBottomItem(vec2 p, vec3 col, float w){\n    vec2 prevP = p;\n\n    col = graphBar(p,col,w,2.,1.);\n    col = graphBar(p-vec2(0.,0.012),col,w,2.1,1.5);\n    col = graphBar(p-vec2(0.,-0.012),col,w,2.2,2.);\n    \n    return col;\n}\n\nvec3 graphic1(vec2 p, vec3 col, float w){\n    vec2 prevP = p;\n    p.x = abs(p.x)-0.11;\n    p.y = abs(p.y)-0.08;\n    float d = B(p,vec2(0.0205,0.00001));\n    p.x+=0.031;\n    p.y+=0.006;\n    p*=Rot(radians(-30.));\n    float d2 = B(p,vec2(0.012,0.00001));\n    d = min(d,d2);\n    \n    p.x+=0.012;\n    p.y+=0.06;\n    p*=Rot(radians(25.));\n    d2 = B(p,vec2(0.012,0.00001));\n    p.x-=0.007;\n    d2 = max(-(abs(p.x)-0.002),d2);\n    d = min(d,d2);    \n    \n    p = prevP;\n    p.x = abs(p.x)-0.13;\n    p.y = abs(p.y)-0.02;\n    p.y = abs(p.y)-0.003;\n    d2 = B(p,vec2(0.0001));\n    d = min(d,d2);  \n    \n    p = prevP;\n    p.x = abs(p.x)-0.06;\n    p.y = abs(p.y)-0.077;\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(0.0008));\n    d = min(d,d2);  \n    d2 = abs(B(p,vec2(0.0026)))-0.0001;\n    d = min(d,d2);  \n    \n    col = mix(col,vec3(1.1),S(d,0.0,w));\n    \n    \n    return col;\n}\n\nvec3 mainUi(vec2 p, vec3 col, float w){\n    vec2 prevP = p;\n   \n    float d = B(p,vec2(0.14,0.09));\n    col = mix(col,vec3(0.02),S(d,0.0,w));\n    \n    col = graphic1(p,col,w);\n    col = arrowItem(p,col,w);\n    col = radar(p,col,w);\n    col = centerUiItem(p,col,w);\n    col = leftTopItem(p-vec2(-0.108,-0.053),col,w);\n    col = leftBottomItem(p-vec2(-0.108,0.049),col,w);\n    col = rightTopItem(p-vec2(0.105,-0.049),col,w);\n    col = rightBottomItem(p-vec2(0.105,0.049),col,w);\n    \n    return col;\n}\n\nvec3 materials(int mat, vec3 n, vec3 rd, vec3 p, vec3 col, float w){\n    col = vec3(0.);\n    vec2 uv = vec2(1.572*atan(p.x,p.z)/6.2832,p.y/4.);\n    col = background(uv,col,w);\n    col += mainUi(uv,col,w);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 prevUV = uv;\n    vec2 m =  iMouse.xy/iResolution.xy;\n    \n    vec3 ro = vec3(0, 0, -0.01);\n    ro.xz *= Rot(radians(180.0));\n    \n    vec3 rd = R(uv, ro, vec3(0,0.0,0), 1.3);\n    vec2 d = RayMarch(ro, rd, 1.,MAX_STEPS);\n    vec3 col = vec3(.0);\n    \n    if(d.x<MAX_DIST) {\n        vec3 p = ro + rd * d.x;\n        vec3 n = GetNormal(p);\n        int mat = int(d.y);\n        col = materials(mat,n,rd,p,col,0.5/abs(dot(rd,p)) );\n    } else {\n        col = vec3(0.0);\n    }\n    \n    #if POST_EFFECT\n    // grabbed the Shane's effect from comment. Thank you so much! Much improved!\n    float falloff = smoothstep(.35, .85, length(fragCoord/iResolution.xy - .5));\n    col *= mix(vec3(1, 2, 4), vec3(1, 4, 2), falloff);\n    #endif\n    \n    fragColor = vec4(sqrt(col),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}