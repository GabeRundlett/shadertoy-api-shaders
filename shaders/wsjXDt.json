{
    "Shader": {
        "info": {
            "date": "1555395570",
            "description": "Little test I did to understand distancefields",
            "flags": 0,
            "hasliked": 0,
            "id": "wsjXDt",
            "likes": 7,
            "name": "Distancefield raymarching test",
            "published": 3,
            "tags": [
                "raymarching",
                "test",
                "distancefield",
                "ray",
                "circle",
                "marching",
                "distance",
                "field",
                "tracing"
            ],
            "usePreview": 0,
            "username": "robobo1221",
            "viewed": 560
        },
        "renderpass": [
            {
                "code": "const int steps = 40;\nconst float rSteps = 1.0 / float(steps);\n\nconst int rays = 1;\nconst float rRays = 1.0 / float(rays);\n\nconst vec2 circlePos = vec2(0.5, 0.5);\n\nfloat distField(vec2 p){\n\tfloat dist = length(p - circlePos) - 0.05;\n\t      dist = min(length(p - vec2(0.5, 0.63)) - 0.05, dist);\n\t      dist = min(length(p - vec2(0.5, 0.37)) - 0.05, dist);\n\t\n\treturn dist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 position = fragCoord.xy / iResolution.xy;\n\t     position = position *2.0 - 1.0;\n\t     position.y *= iResolution.y / iResolution.x;\n\t     position = position * 0.5 + 0.5;\n    \n    vec2 mouse = iMouse.xy / iResolution.xy;\n\n\tvec3 color = vec3(0.0);\n\tvec2 p = position;\n\tvec2 dir = normalize(vec2(1.0, mouse.y * 2.0- 1.0));\n\tvec2 originalDir = dir; \n\t\n\tfloat t = 0.0;\n\tvec2 originPoint = vec2(0.2, 0.5);\n    vec2 newPoint = originPoint;\n\t\n\tbool hit = false;\n\tfloat d = 0.0;\n\t\n\tcolor = distField(position) < 0.001 ? vec3(0.5) : color;\n\n    for (int i = 0; i < steps; ++i){\n        float m = distField(newPoint);\n        d += m;\n        if (m < 0.001 || d > 2.0) {color = mix(color, vec3(0.0, 1.0, 0.0), step(distance(position, newPoint), 0.005)); break;}\n\n        float distpos = distance(position, newPoint);\n\n        color = max(color, \n\t\t\t    max(step(abs(distpos - m), 0.001) * vec3(1.0, 0.0, 0.0),\n\t\t\t    step(distpos, 0.005)* vec3(0.0, 0.0, 1.0)));\n\n        newPoint += dir * m;\n    }\n\t\n\n\tfragColor = vec4(color, 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}