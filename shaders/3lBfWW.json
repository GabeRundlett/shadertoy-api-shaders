{
    "Shader": {
        "info": {
            "date": "1598894471",
            "description": "Reddit scroller",
            "flags": 0,
            "hasliked": 0,
            "id": "3lBfWW",
            "likes": 12,
            "name": "Reddit scroller by MareeBree",
            "published": 3,
            "tags": [
                "reddit"
            ],
            "usePreview": 0,
            "username": "mareebree",
            "viewed": 649
        },
        "renderpass": [
            {
                "code": "#define S(x,y,z) smoothstep(x,y,z)\n#define AR (iResolution.x/iResolution.y)\n#define PI (3.1415)\n\n#define TEXT_COLOR vec3(0.8,0.8,0.8)\n#define HIGHLIGHT_COLOR vec3(0.05,0.5,0.8)\n#define LIGHT_BG vec3(0.1,0.1,0.1)\n#define LIGHT_TEXT_COLOR vec3(0.1,0.1,0.1)\n#define VOTEUP_COLOR vec3(255.0/255.0, 139.0/255.0, 90.0/255.0)\n\n// https://stackoverflow.com/questions/15095909/from-rgb-to-hsv-in-opengl-glsl\n// All components are in the range [0â€¦1], including hue.\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 inverseColor(vec3 col)\n{\n    return vec3(1.0-col.r,1.0-col.g,1.0-col.b);\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat rand(float c){\n    vec2 co = vec2(c,c);\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 rotate(vec2 uv, float angle)\n{\n    uv -= 0.5;\n    mat2 mat = mat2(vec2(cos(angle), sin(angle)),vec2(-sin(angle), cos(angle)));\n    return mat*uv + 0.5;\n}\n\n// -------------b\n// |\t\t\t|\n// |\t\t\t|\n// a-------------\nfloat inRect(vec2 x ,vec2 a, vec2 b)\n{\n    return x.x > a.x && x.x < b.x && x.y > a.y && x.y < b.y ? 1.0 : 0.0;\n}\n\nfloat rectMask(vec2 uv, vec2 a, vec2 b)\n{\n    float lb = 0.01;\n    float m = S(a.x,a.x+lb,uv.x);\n    m = min(S(b.x+lb,b.x,uv.x),m);\n    m = min(S(a.y,a.y+lb,uv.y),m);\n    m = min(S(b.y+lb,b.y,uv.y),m);\n    return m;\n}\n\nfloat inUVRange(vec2 uv)\n{\n    return inRect(uv,vec2(0.0),vec2(1.0));\n}\n\n// UV is already 0.0-1.0 i assume\nvec2 uvToRect(vec2 uv, vec2 a, vec2 b)\n{\n    uv -= a;\n    uv /= (b-a);\n    return uv;\n}\n\nfloat roundBoxMask( vec2 uv, vec2 size, float radius )\n{\n  return inRect(uv, vec2(0.1),vec2(0.9));\n}\n\nfloat searchIconMask(vec2 uv)\n{\n    float d = length(uv+vec2(0.1,-0.1)-vec2(0.5));\n    \n    float cs = 0.3; // Circle size\n    float lt = 0.1; // Line thickness\n    \n    float cm = S(cs+0.01,cs,d); // Circle mask\n    cm -= S(cs-lt+0.01,cs-lt,d);\n    cm = clamp(cm,0.0,1.0);\n    \n    float lm = S(1.0,1.01,uv.x+uv.y); // Line mask\n    lm = min(lm,S(1.01+lt,1.00+lt,uv.x+uv.y));\n    lm *= S(0.2,0.21,uv.x-uv.y);\n    lm *= S(0.86,0.85,uv.x-uv.y);\n    \n    return cm + lm;\n}\n\nfloat redditIconMask(vec2 uv)\n{\n    uv = uvToRect(uv,vec2(0.2,0.2),vec2(0.8,0.8));\n    \n    float iconMask = 0.0;\n    \n    // Head\n    vec2 headUV = uv - vec2(0.5,0.4);\n    float a = 1.2;\n    float b = 0.9;\n    float d = (headUV.x*headUV.x)/(a*a) + (headUV.y*headUV.y)/(b*b);\n    iconMask = S(0.11,0.1,d);\n    \n    // Ears\n    vec2 earPos = vec2(0.35,0.13);\n    float earSize = 0.12;\n    iconMask += S(earSize+0.01,earSize, length(headUV - earPos));\n    iconMask += S(earSize+0.01,earSize, length(headUV - earPos*vec2(-1.0,1.0)));\n    iconMask = min(1.0,iconMask);\n    \n    // Antenna\n    float lineThickness = 0.02;\n    float lineMask = S(0.5-lineThickness,0.5-lineThickness+0.01,uv.x);\n    lineMask = min(lineMask,S(0.5+lineThickness+0.01,0.5+lineThickness,uv.x));\n    lineMask *= S(0.6,0.61,uv.y);\n    lineMask *= S(0.84,0.83,uv.y);\n    vec2 dLinePos = vec2(1.0,-2.0);\n    lineThickness *= 2.0;\n    float lineHeight = -1.14;\n    float dLineMask = S(lineHeight-lineThickness,lineHeight-lineThickness+0.01,dLinePos.x*uv.x+dLinePos.y*uv.y);\n    dLineMask = min(dLineMask,S(lineHeight+lineThickness+0.01,lineHeight+lineThickness,dLinePos.x*uv.x+dLinePos.y*uv.y));\n    dLineMask *= S(0.48,0.49,uv.x);\n    dLineMask *= S(0.61,0.6,uv.x);\n    float circleAntennaSize = 0.07;\n    vec2 circlePos = vec2(0.65,0.89);\n    float circleMask = S(circleAntennaSize+0.01,circleAntennaSize,length(uv-circlePos));\n    \n    iconMask += lineMask+dLineMask+circleMask;\n    iconMask = min(iconMask,1.0);\n    \n    \n    // Eyes\n    //vec2 eyePos = vec2(0.15,0.06);\n    //float eyeSize = 0.07;\n    //iconMask -= S(eyeSize+0.01,eyeSize, length(headUV - eyePos));\n    //iconMask -= S(eyeSize+0.01,eyeSize, length(headUV - eyePos*vec2(-1.0,1.0)));\n    //iconMask = max(0.0,iconMask);\n    \n    return iconMask;\n}\n\nfloat communityIconMask(vec2 uv)\n{\n    uv = uvToRect(uv,vec2(0.2,0.2),vec2(0.8,0.8));\n    \n    float m = 0.0;\n    \n    vec2 ruv = uvToRect(uv,vec2(0.1,0.1),vec2(0.4,0.4));\n    m += inUVRange(ruv)*S(0.51,0.5,length(ruv-vec2(0.5)));\n    \n    ruv = uvToRect(uv,vec2(0.6,0.1),vec2(0.9,0.4));\n    m += inUVRange(ruv);\n    \n    ruv = uvToRect(uv,vec2(0.6,0.6),vec2(0.9,0.9));\n    m += inUVRange(ruv)*S(0.51,0.5,length(ruv-vec2(0.5)));\n    \n    ruv = uvToRect(uv,vec2(0.1,0.6),vec2(0.4,0.9));\n    m += inUVRange(ruv);\n    \n    return m;\n}\n\nfloat pencilIconMask(vec2 uv)\n{\n    uv = uvToRect(uv, vec2(0.15,0.2),vec2(0.8,0.8));\n    \n    float m = 0.0;\n    float pt = 0.07; // pencil thicness\n    \n    uv -= vec2(0.2,0.7);\n    float d = (0.9*uv.x - uv.y);\n    m = S(0.5-pt,0.5-pt+0.01,d);\n    m = min(m,S(0.5+pt+0.01,0.5+pt,d));\n    \n    d = (uv.x + uv.y);\n    m -= S(0.7,0.71,d);\n    m -= S(0.07,0.06,uv.x);\n    m -= S(-0.45,-0.455,uv.y);\n    m -= min(S(0.55,0.56,d), S(0.60,0.59,d));\n    m = max(m,0.0);\n    \n    return m;\n}\n\nfloat chatIconMask(vec2 uv)\n{\n    uv = uvToRect(uv,vec2(0.1,0.1),vec2(0.9,0.9));\n    \n    float iconSize = 0.3;\n    \n    // Bubble\n    float m = S(iconSize+0.01,iconSize,length(uv-vec2(0.5,0.5)));\n    \n    // Bubble end\n    float x = 0.6;\n    vec2 buv = uv - vec2(0.2,0.1);\n    float be = S(0.5,0.51,x+0.3*buv.x-buv.y);\n    be += S(0.51,0.5,x+0.75*buv.x-buv.y);\n    be = 1.0 - min(1.0,be);\n    be *= S(0.51,0.5,uv.x);\n    m += be;\n    m = min(1.0,m);\n    \n    // Dots\n    vec2 duv = uvToRect(uv,vec2(0.4,0.45),vec2(0.6,0.55));\n    float dm = inUVRange(duv);\n    duv.x = fract(duv.x*3.0);\n    m -= S(0.31,0.3,length(duv-vec2(0.5)))*dm;\n    m = max(0.0,m);\n    \n    return m;\n}\n\nfloat inboxIconMask(vec2 uv)\n{\n    uv = uvToRect(uv,vec2(0.2,0.2),vec2(0.8,0.8));\n    \n    float m = 0.0;\n    \n    m = rectMask(uv,vec2(0.1,0.2),vec2(0.9,0.8));\n    \n    float lt = 0.01;\n    float d = (uv.x+uv.y)/2.0;\n    float lp = 0.45;\n    float dl = min(S(lp-lt,lp-lt+0.005,d),S(lp+lt+0.005,lp+lt,d));\n    d = (uv.x-uv.y);\n    lt *= 4.0;\n    lp = 0.06;\n    dl += min(S(lp,lp+0.01,d),S(lp+lt+0.01,lp+lt,d));\n    dl = min(1.0,dl);\n    dl *= S(0.415-0.001,0.415,uv.y);\n    \n    m -= dl;\n    m = max(0.0,m);\n    \n    return m;\n}\n\nfloat upvoteIconMask(vec2 uv)\n{\n    uv = uvToRect(uv,vec2(0.1),vec2(0.9));\n    \n   \tvec2 auv = uv - vec2(0.0,0.5);\n    float m = S(0.0,0.01,auv.x-auv.y);\n    auv = uv - vec2(0.0,1.0);\n    m = min(S(0.51,0.5,(auv.x+auv.y)),m);\n    m *= S(0.5,0.505,uv.y);\n    \n    m += rectMask(uv,vec2(0.3,0.0),vec2(0.7,0.6));\n    m = min(1.0,m);\n    \n    return m;\n}\n\nfloat commentsIconMask(vec2 uv)\n{\n    uv = uvToRect(uv,vec2(0.0,0.2),vec2(1.0,1.0));\n    \n    vec2 auv = uv - vec2(0.5,0.0);\n    float m = S(0.01,0.00,auv.x-auv.y);\n    auv = uv + vec2(0.5,0.0);\n    m = min(S(1.0,1.01,auv.x+auv.y),m);\n    m *= S(0.21,0.2,uv.y);\n    m += rectMask(uv,vec2(0.15,0.15),vec2(0.85,0.65));\n    m = min(m,1.0);\n    \n    return m;\n}\n\nvec3 drawRedditHeader(vec2 uv)\n{\n    float pihs = 0.35; // Profile icon header size\n    \n    float bgMask = 1.0;\n    \n    // Profile icon\n    vec2 profileIconUV = uvToRect(uv,vec2(0.05,0.5),vec2(pihs+0.05,1.0));\n    profileIconUV.x /= pihs;\n    float profileIconSize = 0.4;\n    float profileIconMask = S(profileIconSize+0.01,profileIconSize,length(profileIconUV-vec2(0.5)));\n    vec3 profileIconColor = hsv2rgb(vec3(rand(iDate.x),0.7,0.6));\n    vec3 profileIcon = profileIconColor*profileIconMask;\n    \n    bgMask -= profileIconMask;\n    \n   \t// Search bar\n    pihs -= 0.1;\n    vec2 searchBarUV = uvToRect(uv,vec2(pihs,0.5),vec2(1.0,1.0));\n    float searchBarMask = roundBoxMask(searchBarUV,vec2(0.1),0.005);\n    vec2 searchIconUV = uvToRect(searchBarUV,vec2(0.1),vec2(0.2,0.9));\n    searchBarMask -= max(searchIconMask(searchIconUV),0.0);\n    searchBarMask *= S(pihs,pihs+0.01,uv.x);\n    vec3 searchBarColor = vec3(0.2,0.2,0.2);\n    vec3 searchBar = searchBarColor*searchBarMask;\n    \n    bgMask -= searchBarMask;\n    \n    // Down panel\n    vec2 downPanelUV = uvToRect(uv,vec2(0.25,0.0),vec2(0.75,0.5));\n    vec2 leftUV = uvToRect(downPanelUV,vec2(0.0),vec2(0.5,1.0));\n    vec3 downPanel = vec3(0.0);\n    downPanel += rectMask(leftUV,vec2(0.25,0.42),vec2(0.75,0.58))*TEXT_COLOR;\n    downPanel += rectMask(leftUV,vec2(0.0,0.0),vec2(1.0,0.06))*HIGHLIGHT_COLOR;\n    vec2 rightUV = uvToRect(downPanelUV,vec2(0.5,0.0),vec2(1.0,1.0));\n    downPanel += rectMask(rightUV,vec2(0.25,0.42),vec2(0.75,0.58))*TEXT_COLOR;\n    \n    // Background\n    bgMask = max(bgMask,0.0);\n    float inHeader = inRect(uv,vec2(0.0),vec2(1.0));\n    \n    return profileIcon + searchBar + LIGHT_BG*bgMask*inHeader + downPanel;\n    \n}\n\nvec3 drawRedditFooter(vec2 uv)\n{\n    vec3 iconColor = vec3(0.65,0.65,0.65);\n    vec3 footerColor = vec3(0.0);\n    float bgMask = 1.0;\n    \n    // Reddit icon\n    vec2 iconUV = uvToRect(uv,vec2(0.0,0.0),vec2(0.2,1.0));\n    footerColor += redditIconMask(iconUV)*TEXT_COLOR;\n    \n    iconUV = uvToRect(uv,vec2(0.2,0.0),vec2(0.4,1.0));\n    footerColor += communityIconMask(iconUV)*TEXT_COLOR*0.4;\n    \n    iconUV = uvToRect(uv,vec2(0.4,0.0),vec2(0.6,1.0));\n    footerColor += pencilIconMask(iconUV)*TEXT_COLOR*0.4;\n    float d = length(iconUV-vec2(0.5,0.5));\n    float highlightMask = S(0.4,0.35,d);\n    highlightMask = max(0.0,highlightMask-S(0.35,0.3,d));\n    footerColor += highlightMask*HIGHLIGHT_COLOR;\n    \n    iconUV = uvToRect(uv,vec2(0.6,0.0),vec2(0.8,1.0));\n    footerColor += chatIconMask(iconUV)*TEXT_COLOR*0.4;\n    \n    iconUV = uvToRect(uv,vec2(0.8,0.0),vec2(1.0,1.0));\n    footerColor += inboxIconMask(iconUV)*TEXT_COLOR*0.4;\n    \n    bgMask = 1.0-min(min(footerColor.r,footerColor.g),footerColor.b);\n    bgMask *= inUVRange(uv);\n    return footerColor + bgMask*LIGHT_BG;\n}\n\nvec3 drawRedditCenter(vec2 uv , float t)\n{\n    vec2 suv = uv;\n    float inCenterRange = inUVRange(uv);\n    uv.y -= 0.2*max(t + (1.0+sin(t)),t);\n    uv.y *= 3.0;\n    float postID = floor(uv).y;\n    float rnd = rand(postID);\n    uv = fract(uv); \n    \n    vec2 postUV = uvToRect(uv,vec2(0.0,0.1),vec2(1.0,0.9));\n    float inPostRange = inUVRange(postUV);\n    \n    // Post header\n    vec3 headerColor = vec3(0.0);\n    \n    vec2 headerUV = uvToRect(postUV,vec2(0.0,0.7),vec2(1.0,1.0));\n    vec2 profileIconUV = uvToRect(headerUV,vec2(0.05,0.0),vec2(0.15,1.0));\n    float profileIconMask = S(0.35,0.3,length(profileIconUV-vec2(0.5,0.5)));\n    vec3 profileIconColor = hsv2rgb(vec3(rnd,0.7,0.6));\n    headerColor += profileIconMask*profileIconColor;\n    \n    vec2 titleUV = uvToRect(headerUV,vec2(0.15,0.0),vec2(0.9,1.0));\n    vec2 redditPageTitleUV = uvToRect(titleUV,vec2(0.0,0.4),vec2(1.0,1.0));\n    headerColor += rectMask(redditPageTitleUV,vec2(0.1,0.3),vec2(0.5+rand(postID)*0.2,0.6))*TEXT_COLOR;\n    \n    vec2 postedByUV = uvToRect(titleUV,vec2(0.0,0.0),vec2(1.0,0.4));\n    headerColor += rectMask(postedByUV,vec2(0.1,0.3),vec2(0.5+rand(fract(postID*10.0))*0.2,0.6))*LIGHT_TEXT_COLOR;\n    \n    vec2 optionsUV = uvToRect(headerUV,vec2(0.9,0.0),vec2(1.0,0.8));\n    headerColor += S(0.06,0.05,length(optionsUV-vec2(0.0,0.1)-vec2(0.5)))*LIGHT_TEXT_COLOR;\n    headerColor += S(0.06,0.05,length(optionsUV-vec2(0.0,0.3)-vec2(0.5)))*LIGHT_TEXT_COLOR;\n    headerColor += S(0.06,0.05,length(optionsUV-vec2(0.0,0.5)-vec2(0.5)))*LIGHT_TEXT_COLOR;\n    \n    // Post title\n    vec3 titleColor = vec3(0.0);\n    vec2 postTitleUV = uvToRect(postUV,vec2(0.0,0.3),vec2(1.0,0.7));\n    float postTitleMask = inUVRange(postTitleUV);\n    postTitleUV.y *= 2.0;\n    float titleLine = floor(postTitleUV).y;\n    postTitleUV = fract(postTitleUV);\n    titleColor += postTitleMask*rectMask(postTitleUV,vec2(0.05,0.3),vec2(0.5 + 0.5*rand(postID+titleLine),0.6))*TEXT_COLOR;\n    \n    // Post footer\n    vec3 footerColor = vec3(0.0);\n    vec2 postFooterUV = uvToRect(postUV,vec2(0.0,0.0),vec2(1.0,0.3));\n    \n    // Todo : make animation of upvote\n    vec3 voteupColor = fract(rnd*10.0) < 0.2 ? VOTEUP_COLOR : LIGHT_TEXT_COLOR;\n    vec2 voteUV = uvToRect(postFooterUV,vec2(0.05,0.05),vec2(0.3,0.95));\n    vec2 voteupUV = uvToRect(voteUV,vec2(0.0,0.0),vec2(0.3,1.0));\n    footerColor += upvoteIconMask(voteupUV)*voteupColor;\n    vec2 voteCountUV = uvToRect(voteUV,vec2(0.3,0.0),vec2(0.7,1.0));\n    footerColor += rectMask(voteCountUV,vec2(0.1,0.4),vec2(0.9,0.6))*voteupColor;\n    vec2 votedownUV = uvToRect(voteUV,vec2(0.7,0.0),vec2(1.0,1.0));\n    votedownUV = rotate(votedownUV,PI);\n    footerColor += upvoteIconMask(votedownUV)*LIGHT_TEXT_COLOR;\n    \n    vec2 commentUV = uvToRect(postFooterUV, vec2(0.55,0.05), vec2(0.75,0.95));\n    vec2 commentIconUV = uvToRect(commentUV, vec2(0.0,0.0), vec2(0.4,1.0));\n    footerColor += commentsIconMask(commentIconUV)*LIGHT_TEXT_COLOR;\n    vec2 commentNumberUV = uvToRect(commentUV, vec2(0.4,0.0), vec2(1.0,1.0));\n    footerColor += rectMask(commentNumberUV,vec2(0.1,0.4),vec2(0.9,0.6))*LIGHT_TEXT_COLOR;\n    \n    vec3 finalColor = headerColor + titleColor + footerColor;\n    float bgMask = 1.0-min(min(finalColor.r,finalColor.g),finalColor.b);\n    \n    return inCenterRange*inPostRange* (finalColor + bgMask*LIGHT_BG);\n}\n\nvec3 drawScreen(vec2 uv, float t)\n{\n    float hss = 0.15; // header screen size\n    float fss = 0.1; // footer screen size\n    \n    vec2 headerUV = uvToRect(uv,vec2(0.0,1.0-hss),vec2(1.0,1.0));\n    vec2 footerUV = uvToRect(uv, vec2(0.0,0.0),vec2(1.0,fss));\n    vec2 centerUV = uvToRect(uv, vec2(0.0,fss),vec2(1.0,1.0-hss));\n    \n    float transitionMask = S(fss,fss+0.05,uv.y);\n    transitionMask = min(S(1.0-hss,1.0-hss-0.05,uv.y),transitionMask);\n    \n    return drawRedditHeader(headerUV) + drawRedditFooter(footerUV) + transitionMask*drawRedditCenter(centerUV,t);\n}\n\nvec3 drawPhone(vec2 uv, float t)\n{\n    vec2 screenUV = uvToRect(uv,vec2(0.05,0.05),vec2(0.95,0.9));\n    vec3 screenColor = drawScreen(screenUV,t);\n    float screenMask = 1.0;\n    screenMask *= S(1.0,0.96,screenUV.x);\n    screenMask *= S(0.0,0.04,screenUV.x);\n    screenMask *= S(0.0,0.01,screenUV.y);\n    screenMask *= S(1.0,0.99,screenUV.y);\n    \n    vec3 phoneColor = hsv2rgb(vec3(rand(iDate.x),0.6,0.8));\n    float phoneMask = 1.0-inUVRange(screenUV);\n    phoneMask *= inUVRange(uv);\n    phoneMask *= S(1.0,0.96,uv.x);\n    phoneMask *= S(0.0,0.04,uv.x);\n    phoneMask *= S(0.0,0.01,uv.y);\n    phoneMask *= S(1.0,0.99,uv.y);\n    \n    vec2 phoneHeaderUV = uvToRect(uv,vec2(0.05,0.92),vec2(0.95,0.98));\n    vec2 speakerUV = uvToRect(phoneHeaderUV,vec2(0.6,0.0), vec2(0.9,1.0));\n    float speakerMask = inUVRange(speakerUV);\n    speakerUV *= vec2(8.0,3.0);\n    speakerUV = fract(speakerUV);\n    phoneColor -= speakerMask*S(0.33,0.3,length(speakerUV-vec2(0.5)))*vec3(1.0);\n    \n    vec2 cameraUV = uvToRect(phoneHeaderUV,vec2(0.05,0.0), vec2(0.25,1.0));\n    float cameraMask = inUVRange(cameraUV);\n    cameraUV.x *= 2.0;\n    cameraUV = fract(cameraUV);\n    phoneColor -= cameraMask*S(0.38,0.35,length(cameraUV-vec2(0.5)))*vec3(1.0);\n    \n    vec3 finalColor = screenMask*screenColor + phoneMask*phoneColor;\n    \n    return finalColor;\n}\n\n// https://www.shadertoy.com/view/XsjfDD\nvec3 drawBackground(vec2 fragCoord, float t)\n{\n    float rotX = 3.14+0.5*sin(0.1*t);\n    float rotY = 1.57;\n    vec2 uv = 2.5 * (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.xx;\n    vec3 camO = vec3(cos(rotX), cos(rotY), sin(rotX));\n    vec3 camD = normalize(vec3(0)-camO);\n    vec3 camR = normalize(cross(camD, vec3(0, 1, 0)));\n    vec3 camU = cross(camR,camD);\n   \tvec3 dir =  normalize(uv.x * camR + uv.y * camU + camD);\n    return texture(iChannel0, dir).rgb;\n}\n\nvec4 mn( vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 phoneUV = uvToRect(uv,vec2(0.25,0.1), vec2(0.53,0.9));\n    vec3 phoneColor = drawPhone(phoneUV,iTime);\n    float phoneMask = inUVRange(phoneUV);\n    \n    vec3 backgroundColor = drawBackground(fragCoord,iTime);\n    \n    vec3 col = phoneColor + (1.0-phoneMask)*backgroundColor;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n    return fragColor;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    fragColor = vec4(0.);\n\tint a = 3;\n    for(int i1 = 0;i1<a;i1++){\n    \tfor(int i2 = 0;i2<a;i2++){\n    \t\tfragColor += mn(vec4(0),fragCoord+vec2(float(i1),float(i2))/(float(a)));\n    \t}\n    }\n    fragColor /= float(a*a);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 24,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}