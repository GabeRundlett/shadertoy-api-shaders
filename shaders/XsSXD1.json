{
    "Shader": {
        "info": {
            "date": "1411260376",
            "description": "Julia fractal",
            "flags": 0,
            "hasliked": 0,
            "id": "XsSXD1",
            "likes": 1,
            "name": "Julia fractal 2",
            "published": 3,
            "tags": [
                "fractal",
                "julia"
            ],
            "usePreview": 0,
            "username": "davidm",
            "viewed": 353
        },
        "renderpass": [
            {
                "code": "\n\nvec3 cd2( vec2 z ){\n\t// iterate\n\tfloat c = 0.75*sin(iTime)-0.25;\n\tfloat m=10000000000000.0;\n\tfloat mx=0.0;\n\tint k;\n    vec2 z2;\n\tfor(int i=0; i<128; i++){\n        if ( length(z)>2.0){\n         \tbreak;   \n        }\n\t\tz2.x=z.x*z.x-z.y*z.y+c;\n\t\tz2.y=2.0*z.x*z.y;\n\t\tz=z2;\n\t\tm=min(m, length(z));\n\t\tmx=max(mx, length(z));\n        k=i;\n\t}\n\tvec3 a=0.3*vec3(pow(float(k)/512.0,0.4));\n\tvec3 b=0.3*vec3(1.0-m)*vec3(1.0,0.4,0.3)*2.0;\n\tvec3 d=0.3*vec3(0);\n\td=vec3(smoothstep(0.8,1.1,mx*0.25))*vec3(0.01,0.01,0.1);\n\treturn a+b+d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord.xy / iResolution.xy-vec2(0.5);\n    uv=uv*vec2(1.0,0.5)*4.9;\n\tfragColor = vec4((cd2(uv)),1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}