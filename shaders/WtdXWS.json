{
    "Shader": {
        "info": {
            "date": "1581623793",
            "description": "visual experiment",
            "flags": 0,
            "hasliked": 0,
            "id": "WtdXWS",
            "likes": 12,
            "name": "Eggs",
            "published": 3,
            "tags": [
                "2d",
                "circles"
            ],
            "usePreview": 0,
            "username": "avin",
            "viewed": 413
        },
        "renderpass": [
            {
                "code": "#define SIZE 10.0 \n#define COL1 vec3(32, 43, 51) / 255.0 \n#define COL2 vec3(235, 241, 245) / 255.0 \n\n#define SF 1./min(iResolution.x,iResolution.y)*SIZE*.5\n#define SS(l,s) smoothstep(SF,-SF,l-s)\n\n#define MOD3 vec3(.1031,.11369,.13787)\n\nfloat hash12(vec2 p)\n{\n    vec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 hash33(vec3 p3)\n{\n\tp3 = fract(p3 * MOD3);\n    p3 += dot(p3, p3.yxz+19.19);\n    return -1.0 + 2.0 * fract(vec3((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y, (p3.y+p3.z)*p3.x));\n}\n\nfloat simplex_noise(vec3 p)\n{\n    const float K1 = 0.333333333;\n    const float K2 = 0.166666667;\n    \n    vec3 i = floor(p + (p.x + p.y + p.z) * K1);\n    vec3 d0 = p - (i - (i.x + i.y + i.z) * K2);\n        \n    vec3 e = step(vec3(0.0), d0 - d0.yzx);\n\tvec3 i1 = e * (1.0 - e.zxy);\n\tvec3 i2 = 1.0 - e.zxy * (1.0 - e);\n    \n    vec3 d1 = d0 - (i1 - 1.0 * K2);\n    vec3 d2 = d0 - (i2 - 2.0 * K2);\n    vec3 d3 = d0 - (1.0 - 3.0 * K2);\n    \n    vec4 h = max(0.6 - vec4(dot(d0, d0), dot(d1, d1), dot(d2, d2), dot(d3, d3)), 0.0);\n    vec4 n = h * h * h * h * vec4(dot(d0, hash33(i)), dot(d1, hash33(i + i1)), dot(d2, hash33(i + i2)), dot(d3, hash33(i + 1.0)));\n    \n    return dot(vec4(31.316), n);\n}\n \nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n { \n    vec2 uv = (fragCoord.xy - iResolution.xy * 0.5) / iResolution.x;    \n        \n    uv *= SIZE;\n    vec2 id = floor(uv);\n    uv = fract(uv) - 0.5;              \n    \n    float mask = 0.0;    \n    for(float y =- 1.0; y <= 1.0; y++ ) {\n        for(float x =- 1.0; x <= 1.0; x++ ) {\n            vec2 rid = id - vec2(x, y);\n            vec2 ruv = uv + vec2(x, y) + \n                vec2(0, mod(rid, 2.)*.5) + \n                vec2(0, sin(simplex_noise(vec3(rid*0.5, iTime))*5.)*.1);            \n                        \n            float l = length(ruv);            \n                                           \n            float d = SS(l, .65) * (ruv.y+.5);      \n                        \n            mask = max(mask, d);                       \n        }\n    }\n    \n    vec3 col = vec3(1.0);\n    col = mix(COL1, COL2, abs(mask));\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}