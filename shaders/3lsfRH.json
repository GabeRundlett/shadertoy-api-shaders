{
    "Shader": {
        "info": {
            "date": "1596000845",
            "description": "work in progress",
            "flags": 0,
            "hasliked": 0,
            "id": "3lsfRH",
            "likes": 0,
            "name": "circle rotation in 3D",
            "published": 3,
            "tags": [
                "notworking"
            ],
            "usePreview": 0,
            "username": "Ausfragezeichen",
            "viewed": 436
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //constants\n    float pi     = 3.14159265359;\n    float piHalf = 1.57079632679;\n    \n    //variables\n    float zoom = 2.;\n    float speed = 1.25; //rotation speed\n    float radius = 1.;\n  \n    \n    vec2 uv = (fragCoord *2. - iResolution.xy)/iResolution.y;\n    \n    uv *= zoom;  \n    \n    vec3 col = vec3(0.); //black space\n       \n    float cycle = fract(iTime * speed); // from 0. to 1.\n    //float alpha = cycle * 2. * pi; // alpha in rad from 0 to 2*pi\n    float alpha = cycle;\n\n    \n    vec4 new3D = vec4(uv.x, uv.y, 0., 1.);\n    \n    //alpha = piHalf;\n    mat4x4 rotationMat = mat4x4( //rotate by alpha on y axis)\n        cos(alpha), 0., -sin(alpha), 0., \n        0., \t\t1., 0., \t\t0., \n        sin(alpha), 0., cos(alpha), 0., \n        0., \t\t0., 0., \t\t1.); \n    \n    vec4 rot3D = new3D * rotationMat;\n    \n    if(length(rot3D.xyz) < radius){\n        col = vec3(length(rot3D.xyz));\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}