{
    "Shader": {
        "info": {
            "date": "1597836776",
            "description": "Shader port of code made by https://github.com/cxleb",
            "flags": 0,
            "hasliked": 0,
            "id": "WtffWX",
            "likes": 1,
            "name": "Caleb's Chaos",
            "published": 3,
            "tags": [
                "fractal",
                "chaos"
            ],
            "usePreview": 0,
            "username": "MysteryPancake",
            "viewed": 328
        },
        "renderpass": [
            {
                "code": "const vec2 size = vec2(16.0, 9.0);\nconst float firstp = 0.0001;\nconst int iterations = 100;\nconst float tend = 20.0;\nconst float tstep = 0.5;\n\nfloat f(float x, float y, float t, float p) {\n\treturn (sin(x * (x + t) / (y + p) + t) + 1.0) * 0.5;\n}\n\nfloat iterate(float x, float y, float t) {\n\tfloat p = firstp;\n\tfor (int i = 0; i < iterations; i++) {\n\t\tp = f(x, -y, t, p);\n\t}\n\treturn p;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = (fragCoord / iResolution.xy - 0.5) * size;\n\tfloat t = mod(iTime * tstep, tend);\n\tfloat p = iterate(uv.x, uv.y, t);\n\tfragColor = vec4(p, p, p, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}