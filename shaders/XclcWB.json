{
    "Shader": {
        "info": {
            "date": "1721524885",
            "description": "¯\\_(ツ)_/¯",
            "flags": 0,
            "hasliked": 0,
            "id": "XclcWB",
            "likes": 0,
            "name": "luminance normalized gradients",
            "published": 3,
            "tags": [
                "experiment",
                "colour"
            ],
            "usePreview": 0,
            "username": "01000001",
            "viewed": 75
        },
        "renderpass": [
            {
                "code": "#define pi 3.14159265\nvoid mainImage( out vec4 O, vec2 U ){\n\n    vec2 r = iResolution.xy;\n    vec2 uv = U/r;\n    vec2 cuv = (2.*U-r)/r.y;\n    vec2 muv = (2.*iMouse.xy-r)/r.y;\n    \n    vec3 a = vec3(.1, .2, .9);\n    vec3 b = vec3(.6, .4, .6);\n    vec3 c = vec3(.2, .6, .2);\n    vec3 d = vec3(.6, .5, .3);\n    vec3 e = sin(iTime + vec3(0, 2, 4))*.3 + .5;//vec3(.4);\n    vec3 f = vec3(.1, .4, .5);\n    \n    vec3 col = mix(\n        uv.y > .8?a:uv.y > .6?f:uv.y > .4?c:uv.y > .2?f:e, \n        uv.y > .8?b:uv.y > .6?b:uv.y > .4?f:uv.y > .2?d:a, \n    uv.x);\n    \n    if (uv.y > .8){\n        col = sin(uv.x*pi*2. + vec3(2.*pi/3., 4.*pi/3., 0))*.5 + .5;\n    }\n\n    // Y = 0.299 R + 0.587 G + 0.114 B - permanently borrowed from the hitchiker's guide to digital colour\n    float y = dot(col, vec3(.299,.587,.114));\n    \n    if (fract(iTime/3.) < .7){\n        col /= y;\n        col *= .4;\n    }\n    \n    \n    col = pow(col, vec3(1./2.2));\n    O = vec4(col, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}