{
    "Shader": {
        "info": {
            "date": "1610910299",
            "description": "playing around with the numbers and time with matrices. ",
            "flags": 0,
            "hasliked": 0,
            "id": "wtycDh",
            "likes": 0,
            "name": "dissolving cubes",
            "published": 3,
            "tags": [
                "time",
                "cube",
                "zoom",
                "sin",
                "color",
                "rotate",
                "cos",
                "square",
                "smoothstep",
                "matrix",
                "fract",
                "dot",
                "abs"
            ],
            "usePreview": 0,
            "username": "YitingLiu",
            "viewed": 291
        },
        "renderpass": [
            {
                "code": "\n\n#define PI 3.14159265358979323846\n\nvec2 rotate2D(vec2 _st, float _angle){\n    _st -= 0.5;\n    _st =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _st;\n    _st += 0.5;\n    return _st;\n}\n\nvec2 tile(vec2 _st, float _zoom){\n    _st *= _zoom;\n    return fract(_st);\n}\n\nfloat box(vec2 _st, vec2 _size, float i, float _smoothEdges){\n    _size = vec2(i)-_size*i;\n    vec2 aa = vec2(_smoothEdges*0.5);\n    vec2 uv = smoothstep(_size,_size+aa,_st);\n    uv *= smoothstep(_size,_size+aa,vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.913);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    vec2 st = fragCoord.xy/iResolution.xy;\n    vec3 color = vec3(abs(cos(iTime)),sin(iTime),abs(sin(iTime)));\n\n    // Divide the space in 4\n    st = tile(st,4.);\n\n    // Use a matrix to rotate the space 45 degrees\n    st = rotate2D(st,PI*fract(iTime));\n\n    // Draw a square\n    color += vec3(box(st,vec2(0.8),sin(iTime),1.0-abs(cos(iTime))));\n    color *= vec3(st,abs(cos(iTime)));\n    color /= vec3(st,abs(sin(iTime)));\n\n    fragColor = vec4(color,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}