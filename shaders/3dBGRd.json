{
    "Shader": {
        "info": {
            "date": "1549641313",
            "description": "Fractal Experiment 30",
            "flags": 0,
            "hasliked": 0,
            "id": "3dBGRd",
            "likes": 4,
            "name": "Fractal Experiment 30",
            "published": 3,
            "tags": [
                "fractal",
                "experiment",
                "30"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 372
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2019 (twitter:@aiekick)\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Tuned via NoodlesPlate\n\n//uniform vec2(0.0:1.0:0.924,0.) _c;\n//uniform int(0:200:50) _niter;\n//uniform float(0.0:1.0:0.48) _k;\n//uniform float(0.0:5.0:2.2) _scale;\n//uniform float(0.0:.5:0.03) _limit;\n//uniform float(0.0:100.0:8.) _dist;\n//uniform vec3(color:1,0,1) _color;\n//uniform vec2(0:5:3,2) _colorVar;\n\n#define _c vec2(0.9240,0)\n#define _niter 50\n#define _k 0.25912\n#define _scale 2.2\n#define _limit 0.03\n#define _dist 44.\n#define _color vec3(1,0,1)\n#define _colorVar vec2(3,1.51)\n\nvec2 zmul(vec2 a, vec2 b){return mat2(a,-a.y,a.x)*b;} // z * z \nvec2 zinv(vec2 a){return vec2(a.x, -a.y) / dot(a,a);} // 1 / z\n\nconst float AA = 2.;\n    \nfloat shape(vec2 z)\n{\n\t//return max(abs(z.x), abs(z.y)) * 0.8 + dot(z,z) * 0.2;\n\t//return max(abs(z.x)-z.y,z.y);\n\treturn dot(z,z);\n}\n\nvoid mainImage( out vec4 f, in vec2 g )\n{\n    f = vec4(0);\n    \n\tvec2 si = iResolution.xy;\n        \n    for( float m=0.; m<AA; m++ )\n    for( float n=0.; n<AA; n++ )\n    {\n        vec2 o = vec2(m,n) / AA - .5;\n        vec2 uv = ((g+o)*2.-si)/min(si.x,si.y) * _scale;\n        vec2 z = uv, zz;\n        vec2 c = _c;\n\t\tc.y += sin(iTime) * _limit;\n        float it = 0.;\n        for (int i=0;i<_niter;i++)\n        {\n\t\t\tzz = z;\n            z = zinv( _k * zmul(z, z) - c);\n\t\t\tif( shape(z) > _dist - it ) break;\n            it++;\n        }\n\n\t\tvec4 sec = _colorVar.x + it * _colorVar.y + vec4(_color,1);\n\t\t\n\t\tf += .5 + .5 * sin(sec - shape(zz) / shape(z));\n    }\n    \n    f /= AA * AA;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}