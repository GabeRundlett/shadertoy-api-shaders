{
    "Shader": {
        "info": {
            "date": "1652972955",
            "description": "\"almost\" realtime 2D photon mapping (using dumb brute force) with refraction\n\nuse mouse to move the light source",
            "flags": 32,
            "hasliked": 0,
            "id": "7s2BW1",
            "likes": 6,
            "name": "2D ray color",
            "published": 3,
            "tags": [
                "raymarch",
                "lighting",
                "photon"
            ],
            "usePreview": 1,
            "username": "bgold",
            "viewed": 423
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 C, in vec2 U ) {\n    C = texture(iChannel0, U/iResolution.xy);\n    C = pow(C, vec4(1.0/2.2));\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define IOR 1.55\n#define DISP 0.05\n\n#define CIRCPOS vec2(0.5,0.5)\n#define RADIUS 0.1\n#define LENSPOS vec2(0.8,0.5)\n\nvec3 blockdist(in vec2 p) {\n    float d = max(max(max(p.y - 0.5, 0.4 - p.y), p.x-0.5), 0.4-p.x);\n    vec2 r = p-vec2(0.45, 0.45);\n    vec2 n;\n    if (r.y > r.x && r.y > -r.x) n = vec2(0.0, 1.0);\n    if (r.y < r.x && r.y < -r.x) n = vec2(0.0, -1.0);\n    if (r.y < r.x && r.y > -r.x) n = vec2(1.0, 0.0);\n    if (r.y > r.x && r.y < -r.x) n = vec2(-1.0, 0.0);\n    return vec3(n,d);\n}\n\nvec3 circdist(in vec2 p, in vec2 c, in float radius) {\n    vec2 r = p-c;\n    return vec3(normalize(r), length(r)-radius);\n}\n\nvec3 lensdist(in vec2 p, in vec2 c) {\n    vec2 r = p-c;\n    float d;\n    vec2 n;\n    if (r.x < 0.0) return circdist(r, vec2(0.17,0.0),0.2);\n    return circdist(r, vec2(-0.17, 0.0), 0.2);\n}\n        \n\nvoid mainImage( out vec4 C, in vec2 U ) {\n    vec2 p0 = U/iResolution.y;\n    vec2 m = iMouse.xy / iResolution.y;\n    bool isDown = iMouse.z > 0.5;\n    if (iFrame < 1) m = vec2(0.95,0.5);\n    \n    vec4 noi = texture(iChannel1, U/iResolution.xy);\n    vec3 col;\n\n    for (int ci=0; ci<3; ci++) {\n        float sh = 0.0;\n        float th = 6.2831 * (length(noi)*62.8 + iTime*6.28*2.0);\n        vec2 v = vec2(cos(th), sin(th));\n        vec2 p = p0;\n\n        float r = 0.0;\n        float lastdbz = lensdist(p0, LENSPOS).z;\n        float lastdcz = circdist(p0, CIRCPOS, RADIUS).z;\n        float ior = IOR + float(ci-1) * DISP;\n        for (int i=0; i<10000; i++) {\n            vec3 d = vec3(normalize(p-m), distance(p,m));\n            vec3 db = lensdist(p, LENSPOS);\n            vec3 dc = circdist(p, CIRCPOS, RADIUS);\n            if (d.z < 0.03) {\n                sh += 1.0 / (r + 1.0) / (r + 1.0); \n                break;\n            }\n           \n            if (db.z < 0.0 && lastdbz > 0.0) v = refract(v, db.xy, 1.0/ior);\n            if (db.z > 0.0 && lastdbz < 0.0) v = refract(v, -db.xy, ior);\n            if (dc.z < 0.0 && lastdcz > 0.0) v = refract(v, dc.xy, 1.0/ior);\n            if (dc.z > 0.0 && lastdcz < 0.0) v = refract(v, -dc.xy, ior);\n\n            float s = min(abs(d.z) / abs(dot(d.xy, v)), abs(db.z) / abs(dot(db.xy, v)));\n            s = min(s, abs(dc.z) / abs(dot(dc.xy,v)));\n            s = max(s,0.01);\n            p += 0.1 * v * s;\n            r += 0.1 * s;\n            if (p.y > 1.0 || p.y < 0.0 || p.x > iResolution.x/iResolution.y || p.x < 0.0) {\n                sh += 0.0;\n                break;\n            }\n            lastdbz = db.z;\n            lastdcz = dc.z;\n        }\n        col[ci]=sh;\n    }\n    \n    col *= 1.0 + 2.0 * step(lensdist(p0, LENSPOS).z, 0.0);\n    col *= 1.0 + 2.0 * step(circdist(p0, CIRCPOS, RADIUS).z, 0.0);\n    \n    vec4 b = texture(iChannel0, U/iResolution.xy);\n    \n    if (isDown) {\n        C = 2.2*vec4(col,1.0);\n    } else {\n        C = 0.99*b + 0.03*vec4(col,1.0);\n    }\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}