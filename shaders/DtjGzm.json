{
    "Shader": {
        "info": {
            "date": "1673046385",
            "description": "webcam",
            "flags": 2,
            "hasliked": 0,
            "id": "DtjGzm",
            "likes": 0,
            "name": "classic webcam mirroring",
            "published": 3,
            "tags": [
                "webcam"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 294
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //needed for anti aliasing ?\n    float n_ratio_1to_iresx = 1./ iResolution.x;\n    \n    vec2 o_trn_fc_nor = fragCoord.xy / iResolution.xy;\n    vec2 o_trn_mo_nor = iMouse.xy / iResolution.xy;\n    float n_x = abs(o_trn_fc_nor.x-.5)*-1.+0.5;\n    \n    vec4 o_col_wc = texture(iChannel0, vec2(n_x,o_trn_fc_nor.y));\n    float n_ratio_x_to_y = iResolution.x / iResolution.y; \n    \n    vec2 o_trn_fc_nor_offset = (o_trn_fc_nor - vec2(0.5))*vec2(n_ratio_x_to_y, 1.);\n    vec2 o_trn_mo_nor_offset = (o_trn_mo_nor - vec2(0.5))*vec2(n_ratio_x_to_y, 1.);\n\n    float n_d = length(o_trn_fc_nor_offset);\n    float n_fuzz, n_min, n_d_smstp_absolute, n_d_smstp_relative;\n    // if we use the ratio of 1. to the resolution\n    // as a factor , we can keep the exact size when using smoothstep\n    fragColor = o_col_wc;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}