{
    "Shader": {
        "info": {
            "date": "1706910011",
            "description": "Smooth voronoi clay",
            "flags": 0,
            "hasliked": 0,
            "id": "MfjXW3",
            "likes": 2,
            "name": "Gray Clay",
            "published": 3,
            "tags": [
                "voronoi",
                "noise",
                "gray",
                "clay"
            ],
            "usePreview": 0,
            "username": "ianertson",
            "viewed": 155
        },
        "renderpass": [
            {
                "code": "#define R iResolution.xy\n#define T (iTime)\n#define M_PI 3.14159265358979323846264338327950288\n#define TAU (M_PI*2.0)\n#define FUI floatBitsToUint\n\nfloat smin(float a, float b, float k) {float h = clamp(0.5 + 0.5*(a-b)/k, 0.0, 1.0); return mix(a, b, h) - k*h*(1.0-h); }\nfloat smax(float a, float b, float k) {return smin(a, b, -k); }\nfloat slt(in float a, in float b, in float s) {float h = clamp(0.5 + 0.5 * (b - a) / s, 0.0, 1.0); return mix(0.0, 1.0, h*h*(3.0-2.0*h));}\n\nfloat hash21(vec2 ip, float seed) {\n  uvec2 p = FUI(ip); uint s = FUI(seed); uvec2 k = ~p + ~s;\n  p ^= p << 17U; p ^= p >> 13U; p ^= p << 5U;\n  p += (p ^ k) + p * k; p *= 1013U; p ^= (p >> 4U);\n  return float(p.x * k.y + p.y + p.y * k.x + k.y) / float(0xFFFFFFFFU);\n}\n\nmat3x2 voro(in vec2 p, in float seed, float k){\n  vec2 Pi = floor(p); vec2 Pf = fract(p);\n  float dmin = 1e20; float dmi = 10.0; float dma = -dmi;\n  vec2 off = vec2(0.0); vec2 dif = vec2(0.0);\n  for(int j=-1; j<=1; j++){\n    for(int i=-1; i<=1; i++){\n      vec2 lattice = vec2(i,j);\n      vec2 offset = vec2(\n      hash21(Pi+lattice+0.0312, 11.149888+seed),\n      hash21(Pi+lattice-0.1145, seed*seed+0.30124));\n      vec2 diff = lattice + offset - Pf;\n      float ne = dot(diff, diff);\n      float lt = slt(ne, dmi, k);\n      dmi = smin(dmi, ne, k);\n      dma = smax(dma, ne, k);\n      off = mix(off, offset, lt);\n      dif = mix(dif, diff, lt);\n    }\n  }\n\n  return mat3x2(off, dif, vec2(dmi, dma));\n}\n\n\n////////////////////////////////////////////////////////\n\nvoid mainImage(out vec4 o, in vec2 fc) {\n  vec3 col = vec3(0.0);\n  vec2 uv = (fc-0.5*R.xy)/R.y;\n  vec4 m = vec4((iMouse.xy-0.5*R.xy)/R.y,iMouse.zw);\n  float ti = T*0.25;\n  mat3x2 vor = voro(\n    (((1.0-clamp(m.z, 0.0, 1.0))*vec2(sin(ti), cos(ti)))+uv-(clamp(m.z, 0.0, 1.0)*m.xy))*16.,\n    3.29192, 0.9\n  );\n  vec2 lv = vor[1].xy;\n  vec2 n = normalize(lv);\n  float c = exp(length(lv)-1.);\n  col += c;\n  col *= max(0.0, 0.5-0.5*dot(n, vec2(cos((ti*2.)+1.74983), sin((ti*2.)+1.74983))));\n  o = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}