{
    "Shader": {
        "info": {
            "date": "1578526935",
            "description": "Roller coaster shaderrr.",
            "flags": 0,
            "hasliked": 0,
            "id": "wtV3RD",
            "likes": 20,
            "name": "Roller Coaster",
            "published": 3,
            "tags": [
                "2d",
                "cartoon",
                "derivative",
                "rollercoaster"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 646
        },
        "renderpass": [
            {
                "code": "// Plento\n\nvec2 R;\n#define st(a, b, t) smoothstep(a, b, t)\n\nvec2 rot(vec2 p, float a){\n \treturn vec2(p.x*cos(a) - p.y*sin(a), p.x*sin(a) + p.y*cos(a));   \n}\n\nfloat height(float x){\n    return sin(x*2.)*.15 + sin(x*3.)*.13 + sin(x*6.)*.02;\n}\n\n\nfloat aDx(float x){\n    float h = .001;\n    float y = height(x+h) - height(x);\n    return atan(y, h);\n}\n\nfloat box(vec2 uv, vec2 dim, float b){\n    uv = abs(uv);\n    float bx = st(b, -b, uv.y - dim.y);\n    bx *= st(b, -b, uv.x - dim.x );\n    return bx;\n}\nfloat circle(vec2 uv, float r, float b){\n \treturn st(r + b, r - b, length(uv));   \n}\nfloat rtr(vec2 uv, vec2 scale, float h,  float b){\n    uv.y -= h;\n    uv *= scale;\n    \n    float tri = st(b, -b, dot(uv, vec2(1., 1.)));\n    tri *= st(-b, b, uv.y + h);\n    tri *= st(-b, b, uv.x);\n    \n    return tri;\n}\n\nvec4 track(vec2 uv){\n    float b = .01;\n    float trk = .0;\n    float sup = .0;\n    \n    trk += st(-.005, .005, uv.y + height(uv.x) + .007);\n    trk *= st(.005, -.005, uv.y + height(uv.x) - .007);\n    \n    vec2 ruv = fract(uv*8.) - .5;\n    \n    sup += st(.08, .07, abs(dot(ruv, vec2(1., 1.))));\n    sup += st(.08, .07, abs(dot(ruv, vec2(-1., 1.))));\n    sup *= st(.001, -.001, uv.y + height(uv.x)+.007);\n    \n    vec3 col = vec3(.7, .7, .7)*trk;\n    \n    return vec4(col, trk + sup);\n}\n\n\nvec4 car(vec2 uv){\n    float b = .02;\n    \n    vec3 col = vec3(0);\n    float a = 0.;\n    float wheel = 0.;\n    \n    a += box(uv, vec2(.7, .1), b);\n    a += box(uv, vec2(0.75, .06), b);\n    a += box(uv - vec2(0., .2), vec2(.5, .1), b);\n    a += box(uv - vec2(0., -.2), vec2(.5, .1), b);\n    \n    a += rtr(vec2(-uv.x, uv.y)-vec2(.5, .1), vec2(1., 1.), .2, b);\n    a += rtr(vec2(-uv.x, -uv.y)-vec2(.5, .1), vec2(1., 1.), .2, b);\n    \n    a += rtr(vec2(uv.x, uv.y)-vec2(.5, .1), vec2(1., 1.), .2, b);\n    a += rtr(vec2(uv.x, -uv.y)-vec2(.5, .1), vec2(1., 1.), .2, b);\n    \n    a -= box(uv-vec2(-.25, .2), vec2(.15, .1), b);\n    a -= box(uv-vec2(.25, .2), vec2(.15, .1), b);\n    \n    a = clamp(a, 0., 1.);\n    \n    wheel += circle(uv-vec2(.4,-.35), .15, .01);\n    wheel += circle(uv-vec2(-.4,-.35), .15, .01);\n    \n    col = a * mix(vec3(.8, 0., 0.),vec3(.8, .8, 0.), \n                  st(.2, .06, abs(uv.y+.2)));\n    col *= st(.01, .4, abs(uv.y+.44));\n    col *= st(.0, .2, abs(uv.y-.38));\n\tcol *= st(.0, .9, abs(uv.x+1.15));\n    \n    col *= 1.-wheel;\n    \n    return vec4(col, a + wheel);\n}\n\nvec4 hill(vec2 uv){\n \tfloat a = st(0.015, -0.015, uv.y - height(uv.x));\n    vec3 col = vec3(0);\n    col += max(uv.y+.9, .1)*vec3(0.1, 0.43, 0.2) * a;\n    return vec4(col, a);\n}\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    R = iResolution.xy;\n    vec2 uv = vec2(u.xy - 0.5*R.xy)/R.y;\n    vec2 m = iMouse.xy / R.xy-.5; \n    m.x *= R.x/R.y;\n    \n    vec3 col = mix(vec3(0.6, 0.6, 0.66), vec3(0., .28,.88), uv.y+.5);\n    col = mix(col, vec3(0.9, 0.9, 0.5), exp(-length((uv-vec2(-.6, .3))*14.)));\n    \n    uv *= 1.5;\n    \n    vec2 p = uv, p2 = uv;\n   \n    uv.x += iTime + m.x*5.;\n    \n    vec4 Hill = hill(vec2(2.*uv.x - iTime*.7, uv.y));\n    \n    col = mix(col, Hill.rgb, Hill.a); \n    \n    \n    float pos = -.8;\n    vec4 cars = vec4(0);\n    \n    for(float i = 0.; i < 5.; i++){\n        p = p2;\n        pos +=.25;\n        \n        float ht = height(uv.x - (p.x+pos));    \n    \tp = p2 + vec2(pos , ht);\n    \tp = rot(p, aDx(uv.x - p.x));\n    \n        cars = car((p-vec2(0., .072)) * 7.);\n        col = mix(col,cars.rgb,cars.a); \n    }\n    \n    \n    vec4 trk = track(uv);\n    col = mix(col, trk.rgb,trk.a); \n    \n    //col = 1.-exp(-col*1.4);\n    f = vec4(col, 1.0)*1.05;\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}