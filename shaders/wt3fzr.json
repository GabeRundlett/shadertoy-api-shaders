{
    "Shader": {
        "info": {
            "date": "1612107878",
            "description": "A full Shrek body. Why? idk\nTook quite a lot of messing around in Blender to get the model to a reasonable state for an SDF.",
            "flags": 32,
            "hasliked": 0,
            "id": "wt3fzr",
            "likes": 10,
            "name": "Neural Shrek",
            "published": 3,
            "tags": [
                "sdf"
            ],
            "usePreview": 0,
            "username": "michael0884",
            "viewed": 441
        },
        "renderpass": [
            {
                "code": "//CC0 1.0 Universal https://creativecommons.org/publicdomain/zero/1.0/\n//To the extent possible under law, Blackle Mori has waived all copyright and related or neighboring rights to this work.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 col = texture(iChannel0, fragCoord/iResolution.xy); \n    fragColor = tanh(2.5*col/col.w);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define MAX_STEPS 128\n#define MIN_DIST 1e-5\n#define MAX_DIST 8.0\n#define CAM_ANGLE 1e-3\n#define TWO_PI 6.28318530718\n#define PI 3.14159265359\n\n//internal RNG state \nuvec4 s0; \n\n// https://www.pcg-random.org/\nvoid pcg4d(inout uvec4 v)\n{\n\tv = v * 1664525u + 1013904223u;\n    v.x += v.y*v.w; v.y += v.z*v.x; v.z += v.x*v.y; v.w += v.y*v.z;\n    v = v ^ (v>>16u);\n    v.x += v.y*v.w; v.y += v.z*v.x; v.z += v.x*v.y; v.w += v.y*v.z;\n}\n\nfloat rand()\n{\n    pcg4d(s0); return float(s0.x)/float(0xffffffffu);\n}\n\nvec2 rand2()\n{\n    pcg4d(s0); return vec2(s0.xy)/float(0xffffffffu);\n}\n\nvec4 rand4()\n{\n    pcg4d(s0); return vec4(s0)/float(0xffffffffu);\n}\n\nvec3 nrand3(float sigma, vec3 mean)\n{\n\tvec4 Z = rand4();\n    return mean + sigma * sqrt(-2.0 * log(Z.xxy)) * \n           vec3(cos(TWO_PI * Z.z),sin(TWO_PI * Z.z),cos(TWO_PI * Z.w));\n}\n\nvec3 erot(vec3 p, vec3 ax, float ro) {\n    return mix(dot(p,ax)*ax,p,cos(ro))+sin(ro)*cross(ax,p);\n}\n\nfloat head(vec3 p) {\n    //sdf is undefined outside the unit sphere, uncomment to witness the abominations\n    if (length(p) > 1.05) {\n        return length(p)-0.99;\n    }\n    //neural networks can be really compact... when they want to be\nvec4 f0_0=sin(p.y*vec4(3.961,-1.055,.942,-1.745)+p.z*vec4(-3.652,.014,1.165,-.429)+p.x*vec4(1.942,.792,1.952,1.660)+vec4(-.367,-.141,-3.792,-6.830));\nvec4 f0_1=sin(p.y*vec4(2.529,-4.504,2.663,-3.360)+p.z*vec4(4.109,2.845,-1.286,2.371)+p.x*vec4(.023,.405,2.693,-3.301)+vec4(-6.805,-3.142,-1.470,-4.338));\nvec4 f0_2=sin(p.y*vec4(.500,-.695,.545,-3.515)+p.z*vec4(3.386,-2.527,2.547,3.027)+p.x*vec4(-.797,3.892,-1.655,-.885)+vec4(4.197,-.751,-.436,4.761));\nvec4 f0_3=sin(p.y*vec4(-3.010,-1.425,-3.763,.533)+p.z*vec4(2.291,.672,-.767,3.361)+p.x*vec4(2.191,3.627,-3.553,-4.030)+vec4(1.739,-8.091,-1.897,3.300));\nvec4 f1_0=sin(mat4(.217,-.382,.023,.253,.651,-.992,.160,.523,-.033,.180,.588,.550,-.482,.592,-.479,-.036)*f0_0+\n    mat4(.504,.266,-.575,.005,-.777,.146,.153,.139,.380,.580,-.633,-.827,-.535,.487,-.511,-.998)*f0_1+\n    mat4(.347,.592,.316,.003,-.168,.734,-.340,-.376,-.047,-.455,-.560,-.208,-.204,.892,.111,-.027)*f0_2+\n    mat4(.780,-.439,.125,-.145,-.248,-.369,.032,.040,-.393,-.063,.044,-.014,.283,-.549,.161,.078)*f0_3+\n    vec4(2.504,.894,.837,-.731))/1.0+f0_0;\nvec4 f1_1=sin(mat4(.167,-.277,.221,-.245,-.533,.157,-.853,-.326,.202,-.477,.088,-.208,-.259,.111,.476,.487)*f0_0+\n    mat4(-.007,.408,.223,-.730,-.181,.477,.653,-.170,-.096,-.083,-.057,-.061,-.386,.493,.130,-.442)*f0_1+\n    mat4(.168,-.548,.303,.394,.333,-.407,.667,.179,.590,.669,.626,-.536,-.543,.097,.404,-.592)*f0_2+\n    mat4(1.061,-.384,.322,.204,.093,-.226,.033,-.066,-.362,.308,.061,.370,-.037,.071,-.732,.220)*f0_3+\n    vec4(-3.142,2.644,.317,3.649))/1.0+f0_1;\nvec4 f1_2=sin(mat4(.251,.101,-.205,-.090,1.331,.104,-1.553,-.331,-.761,.451,-.727,.306,-1.000,.466,.298,1.109)*f0_0+\n    mat4(-.467,.078,.810,-.177,-.111,.223,-.178,.133,.565,.216,.479,.318,.044,-.283,.034,-.358)*f0_1+\n    mat4(.702,-.135,.058,.494,.024,-.673,-.034,.294,-.054,.078,-.155,-.078,-.101,-.028,.262,-.344)*f0_2+\n    mat4(.233,.827,-.382,.588,.147,-.794,-.217,.308,.078,-.016,.274,-.317,.527,.080,-.224,-.233)*f0_3+\n    vec4(.653,-.422,-.349,.963))/1.0+f0_2;\nvec4 f1_3=sin(mat4(.005,-.183,.111,.421,-.329,-.421,.314,.010,-.045,.287,.901,-.752,.388,.630,-.373,-.489)*f0_0+\n    mat4(-.461,-.053,.238,.357,-.067,-.163,.602,-.165,.661,-.231,.586,-.542,.348,-.087,.633,.205)*f0_1+\n    mat4(.055,.347,-.941,.262,.259,.607,-.093,.465,-.414,.063,-.294,.478,-.789,-.463,.147,-.117)*f0_2+\n    mat4(.481,.786,-.125,.187,.175,.355,-.415,.139,-.377,.024,.561,.486,.102,-.389,-.569,.292)*f0_3+\n    vec4(-1.498,.446,3.432,-3.483))/1.0+f0_3;\nvec4 f2_0=sin(mat4(-.182,-.330,-.610,.592,-.335,-.176,-.437,.512,.833,.251,-.306,-.177,.231,-.183,-.126,.660)*f1_0+\n    mat4(.418,.438,-.826,-.737,-.746,.271,.481,.671,.007,.163,-.178,-.827,.161,-.037,-.224,.303)*f1_1+\n    mat4(.414,-.416,.155,.128,.414,.179,-.572,-.316,-.092,-.526,-.254,.995,.734,-.700,-.622,.313)*f1_2+\n    mat4(-.662,.713,.156,-.232,-.519,-.006,-.406,.609,-.530,-.345,.185,.647,.417,-.025,-.428,.107)*f1_3+\n    vec4(-2.443,1.407,-2.546,.464))/1.4+f1_0;\nvec4 f2_1=sin(mat4(-.130,-.213,-.332,-.689,-.034,-.830,-.344,-.474,-.086,-1.701,-.525,-.114,-.451,-.162,.323,.599)*f1_0+\n    mat4(-.236,-.417,-.184,-.223,.085,-.411,-1.036,1.257,-1.102,.403,-.232,-.119,-.031,.017,.026,.170)*f1_1+\n    mat4(.010,.464,.270,-1.014,-.300,.076,-.501,-.565,1.190,.026,-.034,1.163,.647,.123,1.461,.661)*f1_2+\n    mat4(.059,.491,-.009,-.247,-.148,-.899,-1.048,.801,.100,.397,.096,.240,-.098,.067,.216,.485)*f1_3+\n    vec4(-1.128,1.700,-2.844,2.620))/1.4+f1_1;\nvec4 f2_2=sin(mat4(-.020,-.540,-.053,-.203,.238,-.314,-.187,-.288,-.034,-.215,.475,-.131,-.178,-.175,.009,.353)*f1_0+\n    mat4(-.483,-1.019,.669,-.115,.374,-.117,.416,-.134,-.154,.407,-.388,-.091,-.431,.462,-.227,.168)*f1_1+\n    mat4(.303,.291,.666,.098,-.023,.213,-.087,.376,.558,.195,-.468,.779,-.206,.886,.789,.742)*f1_2+\n    mat4(.453,.010,-.311,.083,-.120,-1.144,-.069,.018,-.128,.262,-.136,.407,.141,-.967,-.170,-.653)*f1_3+\n    vec4(-3.048,1.519,.624,-3.587))/1.4+f1_2;\nvec4 f2_3=sin(mat4(.394,-.308,.031,-.340,-.841,-.308,-.496,-.355,-.768,.023,-.802,.693,.415,-.098,.722,-.834)*f1_0+\n    mat4(-.471,.276,.047,-.252,.668,.005,.003,.349,.012,.182,-.232,.872,.511,.027,.761,.564)*f1_1+\n    mat4(-.395,.246,-.477,-.452,-.502,-.296,-.391,.377,.655,-.024,.398,-.656,.239,.582,-.361,-.537)*f1_2+\n    mat4(-.383,.885,.686,-.136,-.383,-.726,-.599,-.199,.105,.014,.251,-.113,.763,-.089,.224,-.141)*f1_3+\n    vec4(3.311,-2.779,-2.553,2.737))/1.4+f1_3;\nvec4 f3_0=sin(mat4(-.403,-.396,-.704,-.058,.385,-.277,.629,.354,.400,.052,-.539,.018,-1.156,.768,-.012,.543)*f2_0+\n    mat4(.720,-.160,-.561,-.549,.614,.618,-.406,.173,.769,-.152,.421,-.076,-.288,.102,-.358,-.084)*f2_1+\n    mat4(.291,.328,.099,-.314,-.730,.092,-.027,-.065,-.446,-.082,.150,-.236,.078,-.121,.400,-.189)*f2_2+\n    mat4(-.370,-.360,-.676,-.254,.135,-.585,.845,-.415,.137,-.383,.340,.601,-.316,-.251,-.378,.996)*f2_3+\n    vec4(-2.431,1.731,-.416,3.801))/1.7+f2_0;\nvec4 f3_1=sin(mat4(-.170,.196,.714,-.426,-.137,.787,-.097,-.517,-.051,.364,.230,.362,-.074,.237,.303,.520)*f2_0+\n    mat4(-.242,.238,.206,-.202,.016,.239,-.128,-.163,-.138,1.177,.289,.738,-.641,.137,-.335,-.444)*f2_1+\n    mat4(.084,.031,.167,.199,.001,.120,-.723,-.458,-.896,.199,.055,-1.153,-.899,.041,.121,-.942)*f2_2+\n    mat4(.276,-.188,.421,-.338,-.571,.595,-.577,-.130,.256,.044,-.059,-.921,-.199,-.443,.839,-.005)*f2_3+\n    vec4(.916,1.803,-3.200,-.396))/1.7+f2_1;\nvec4 f3_2=sin(mat4(.647,.159,.207,-.030,1.136,.561,.002,.807,-.390,-.314,.588,.261,-.819,.210,.493,-.183)*f2_0+\n    mat4(-.158,-.872,-.572,.061,-.001,.657,-.281,-.572,-.263,-.076,.179,-.034,-.550,.522,.265,-.251)*f2_1+\n    mat4(.391,1.975,.285,.020,-.683,.213,.656,.144,-.288,-.322,-.171,.024,.324,-.410,.266,.186)*f2_2+\n    mat4(.196,-.746,-.460,.131,.003,.367,.089,-.616,.350,-.902,-.741,.013,-.042,.008,-.557,.849)*f2_3+\n    vec4(-2.677,2.979,2.418,2.764))/1.7+f2_2;\nvec4 f3_3=sin(mat4(-.114,.373,-.130,.123,-.699,-.598,-.938,.466,.247,.129,-.384,-.717,.462,-.645,-.069,.319)*f2_0+\n    mat4(-.365,.385,.452,-.195,-.019,.433,1.002,.019,.340,-.841,-1.044,-.450,.287,-.479,-.516,.439)*f2_1+\n    mat4(.512,-1.027,.083,.408,-.030,-.338,.242,.388,-.189,.271,-1.018,.021,.066,-.224,.220,.517)*f2_2+\n    mat4(-.204,.522,.750,-.581,-.045,.530,-.334,1.052,-.339,.528,-.052,.813,.525,-.166,-.219,-.981)*f2_3+\n    vec4(-2.943,1.925,2.531,-2.310))/1.7+f2_3;\nreturn dot(f3_0,vec4(-.031,.112,-.039,-.032))+\n    dot(f3_1,vec4(-.076,-.033,.058,-.029))+\n    dot(f3_2,vec4(.072,-.019,.053,.079))+\n    dot(f3_3,vec4(-.087,.055,.030,-.029))+\n    0.139;\n}\n\nvec2 opUnion(vec2 a, vec2 b)\n{\n    return (a.x < b.x)?a:b;\n}\n\nvec2 scene(vec3 p)\n{\n    vec2 plane = vec2(p.z + 0.7, 0);\n    vec2 h = vec2(0.85*head(p), 1);\n    return opUnion(h, plane);\n}\n\nvec3 norm(vec3 p) {\n    mat3 k = mat3(p,p,p)-mat3(0.001);\n    return normalize(scene(p).x - vec3(scene(k[0]).x,scene(k[1]).x,scene(k[2]).x));\n}\n\nfloat trace(inout vec4 ro, vec3 rd)\n{\n    vec2 de = vec2(-1);\n    for(int i = 0; i < MAX_STEPS; i++)\n    {\n        de = scene(ro.xyz); \n        float md = max(CAM_ANGLE*ro.w,MIN_DIST);\n        ro += vec4(rd, 1.0)*(de.x - 2.0*step(de.x, md)*md); \n        if(de.x < md) return de.y;\n        if(ro.w > MAX_DIST) return -1.0;\n    }\n    return de.y;\n}\n\nvec3 pathtrace(vec4 ro, vec3 rd)\n{\n    vec3 outcol = vec3(0.); vec3 matcol = vec3(1.);\n    for(int i = 0; i<2; i++)\n    {\n        float hit = trace(ro, rd);\n        if(hit>=0.0)\n        {\n            vec3 n = norm(ro.xyz); //geometric normal\n           \n            float roughness =(rand()>0.5)?0.5:0.05;\n            if(hit == 0.0)\n            {\n                bool tile =mod(ro.x, 1.0) + mod(ro.y, 1.0) > 1.0;\n                matcol *= tile?vec3(0.780,0.678,0.678):vec3(1.000,1.000,1.000); \n            }\n            else\n            {\n                roughness = 0.5;\n                matcol *= vec3(0.804,0.914,0.996);\n            }\n            vec3 m = normalize(nrand3(roughness, n)); //material normal\n            rd = reflect(rd,m);\n        }\n        else\n        {\n            outcol += matcol*pow(texture(iChannel1, rd.xzy).xyz,vec3(1.4));\n            break;\n        }\n    }\n    return outcol;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //RNG\n    s0 = uvec4(fragCoord, uint(iFrame), uint(fragCoord.x) + uint(fragCoord.y));\n\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n    \n    fragCoord += rand2();\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.y;\n\n    vec3 cam = normalize(vec3(1.5,uv));\n    vec3 init = vec3(-3.0,0,-0.1);\n    \n    float yrot = 0.5 - 0.5*mouse.y;\n    float zrot = 3. + 4.0*mouse.x;\n    if (iMouse.z > 0.) {\n        fragColor *= 0.0;\n    }\n    cam = erot(cam, vec3(0,1,0), yrot);\n    cam = erot(cam, vec3(0,0,1), zrot);\n    \n    init = erot(init, vec3(0,1,0), yrot);\n    init = erot(init, vec3(0,0,1), zrot);\n    \n    fragColor += vec4(pathtrace(vec4(init, 0.), cam), 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "cubemap",
                        "id": 26,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}