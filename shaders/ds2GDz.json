{
    "Shader": {
        "info": {
            "date": "1667493051",
            "description": "Logistic Map bifurcation tree\nMathematica notebookï¼šhttps://github.com/kanayuki/Mathematica/blob/master/%E5%88%86%E5%BD%A2%E5%92%8C%E6%B7%B7%E6%B2%8C/Logistics%20Equation.nb\n\nhope you like it!",
            "flags": 0,
            "hasliked": 0,
            "id": "ds2GDz",
            "likes": 1,
            "name": "Logistic Map bifurcation tree",
            "published": 3,
            "tags": [
                "2d",
                "logisticmapbifurcationtree"
            ],
            "usePreview": 0,
            "username": "kanayuki",
            "viewed": 169
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    // vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv = 2.0 * fragCoord/iResolution.x;\n    \n    vec3 col = vec3(0.75);\n    \n    float a = uv.x + 2.0;\n    float y = uv.y;   \n    float x = 0.1;\n\n    for(int j = 0; j < 250; j++) x=a*x*(1.0-x);\n\n    for(int j = 0; j < 100; j++){\n\n        x = a*x*(1.0-x);\n\n        // plotPointAt( a, y );\n        if (abs(y-x) < 0.003){\n        \n            // Time varying pixel color\n            col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n            // vec3 col = vec3(0.1);\n            fragColor = vec4(col,1.0);\n            return;\n        }\n    }\n     \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n   \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}