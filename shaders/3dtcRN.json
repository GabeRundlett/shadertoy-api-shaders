{
    "Shader": {
        "info": {
            "date": "1600542728",
            "description": "dont know how to autmatically start the diffusion \nso play in mouse.\nwhen the screen become black insert other shape with mouse, and normally he can start\nsee common tab for other interesting patterns",
            "flags": 32,
            "hasliked": 0,
            "id": "3dtcRN",
            "likes": 16,
            "name": "Corail Diffusion",
            "published": 3,
            "tags": [
                "diffusion",
                "corail"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 421
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2021\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 g = fragCoord.xy;\n    vec2 s = iResolution.xy;\n    \n\tvec2 v = (g+g-s)/s.y;\n    float a = atan(v.x,v.y) + length(v) * 4. - iTime * 2.;\n    \n    float cc = texture(iChannel0, fract(g/s*zoom)).y;\n    float cc2 = texture(iChannel0, fract((g+vec2(cos(a),sin(a)))/s*zoom)).y;\n    fragColor = vec4(cc*cc) * baseColor;\n    fragColor += lightColor*max(cc2 - cc, 0.0)*5.0;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2021\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define zoom 0.75\n#define baseColor vec4(1,0.5,0.5,1)\n#define lightColor vec4(0.0,0.5,0.8,1)\n\n#define get(sam, g, s, x, y) texture(sam, fract((g + vec2(x,y))/s))\n\nvec2 calc(vec2 vCoord, vec2 vSize, int vFrame, vec4 vMouse, sampler2D vInit, sampler2D vBuffer)\n{\n    vec2 dst = vec2(0);\n\t\n    vec4 c = get(vBuffer, vCoord, vSize,  0.0,  0.0); // current\n    vec4 l = get(vBuffer, vCoord, vSize, -1.0,  0.0); // left\n    vec4 r = get(vBuffer, vCoord, vSize,  1.0,  0.0); // right\n    vec4 b = get(vBuffer, vCoord, vSize,  0.0, -1.0); // bottom\n    vec4 t = get(vBuffer, vCoord, vSize,  0.0,  1.0); // top\n    vec4 lp = l+r+b+t - 4.0 * c; // laplacian\n\n    // interesting patterns\n    vec2 feedkill = vec2(0.06180, 0.00250);\n    //vec2 feedkill = vec2(0.16330, 0.00250);\n    //vec2 feedkill = vec2(0.10900, 0.01250);\n\n    vec2 diff = vec2(0.22, 0.44); // nabla\n\n    vec2 dilp = diff * lp.xy;\n    float reac =  c.x *  c.y *  c.y;\n\n    c.x =  c.y * (dilp.x - feedkill.y) +  c.x * (1.0 + feedkill.x) - reac;\n    c.y =  c.x * (dilp.y - feedkill.x) +  c.y * (1.0 - feedkill.y) + reac;\t\n    dst = clamp(c.xy, 0.001, 1.0);\n\n    if (vMouse.z > 0.)\n        if (length(vCoord - mod(vMouse.xy * zoom, vSize)) < min(vSize.x, vSize.y) * 0.1)\n        \tdst = vec2(0,1);\n\n    if (vFrame < 60)\n    \tdst = texture(vInit, vCoord / vSize * 0.9).rr;\n    if (vFrame < 240)\n        if (length(vCoord - mod(vSize * 0.5 * zoom, vSize)) < min(vSize.x, vSize.y) * 0.1)\n        \tdst = vec2(0,1);\n    \n    return dst;\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2021\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor.rg = calc(fragCoord, iResolution.xy, iFrame, iMouse, iChannel1, iChannel0);\n    fragColor.ba = vec2(0,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2021\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor.rg = calc(fragCoord, iResolution.xy, iFrame, iMouse, iChannel1, iChannel0);\n    fragColor.ba = vec2(0,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2021\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor.rg = calc(fragCoord, iResolution.xy, iFrame, iMouse, iChannel1, iChannel0);\n    fragColor.ba = vec2(0,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2021\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor.rg = calc(fragCoord, iResolution.xy, iFrame, iMouse, iChannel1, iChannel0);\n    fragColor.ba = vec2(0,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}