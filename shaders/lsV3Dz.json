{
    "Shader": {
        "info": {
            "date": "1454115886",
            "description": "Workflow for a basic window manager. Move windows, change their format (move slowly ! :-) )\nNB: interactive borders start a bit inside the windows.",
            "flags": 32,
            "hasliked": 0,
            "id": "lsV3Dz",
            "likes": 24,
            "name": "window manager",
            "published": 3,
            "tags": [
                "windows",
                "util",
                "widget",
                "wm"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 1927
        },
        "renderpass": [
            {
                "code": "#define tex(x,y) texture(iChannel0,(vec2(x,y)+.5)/R)\n#define B 5./R                                               // border size\nvec2 R;\n\n#define activeWindow() tex(0,0).y                            // wich window is active ?\nvec4 drawWindow( vec2 U, int c );\n\nvec4 WM(vec2 U) {                    // -------------- display windows ----------------\n    for (int i=1; i<=16; i++) \n        if (i<=int(tex(0,0).x)) {\n            vec4 W = tex(i,0);\n            vec2 In = step( abs(U-W.xy-W.zw/2.), W.zw/2.);  \n            if (In.x*In.y>0.) {                              // pixel in window #i \n                U = (U-W.xy)/W.zw;\n                int c = int(tex(i,1).x);                     // channel attached to window\n                return drawWindow(  U,  c ); \n            }\n            In = step( abs(U-W.xy-W.zw/2.), W.zw/2.+B);\n            if (In.x*In.y>0.)                                // pixel in window #i border\n                return int(activeWindow())==i ? vec4(1.) : vec4(.5,.5,.5,1);  \n        }\n    return vec4(0);\n}\n\nvec4 drawWindow( vec2 U, int c ) // -------------- your window content here ------------\n{\n    if      (c==1) return texture(iChannel1,U);\n    else if (c==2) return texture(iChannel2,U);\n    else if (c==3) return texture(iChannel3,U);    \n    else return vec4(0);\n}\n\nvoid mainImage( out vec4 O,  vec2 U )\n{ \n    R = iResolution.xy;\n    O = WM(U/R);                         // display windows\n    O = mix (vec4(.1,.1,.5,1), O, O.a);  // blend background\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define window(x,y,l,h,c) { N++; if (U==vec2(N,0)) O=vec4(x,y,l,h); if (U==vec2(N,1)) O=vec4(c,0,0,0);} \n#define tex(U) texture(iChannel0,(U+.5)/R)\n#define B 5./R                                               // border size\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    vec2 R = iResolution.xy;\n    U -= .5;\n    \n    if (iFrame==0) {\n        float N=0.;      // --- declare your windows here : x,y (BottomLeft) w,h,  channel\n        window(.1,.1, .4,.3, 1);\n        window(.4,.3, .5,.4, 2);\n        window(.03,.6, .5,.3, 3);\n        if (U==vec2(0)) O.x=N;\n        return;\n    }\n    \n    O = tex(U);  \n    \n    if (U.y==0.)\n    if (iMouse.z<=0.)  \n       { if (U.x==0.) O.y = 0.; }                                    // no window selected\n    else                                                             // click\n        if (U.x==0.) {\n            O.zw = iMouse.xy/R;\n            if (O.y==0.) {                                           // nothing selected\n                for (int i=1; i<=16; i++) \n                  if (i<=int(tex(vec2(0)).x)) {\n                      vec4 W = tex(vec2(i,0));\n                      vec2 M = iMouse.xy/R;\n                      vec2 In = step( abs(M-W.xy-W.zw/2.), W.zw/2.+B);\n                      if (In.x*In.y>0.) { O.y = float(i); return; } // select window\n                }\n            }\n            \n        }\n    else if (U.x==tex(vec2(0)).y) {                                 // move selected window\n            vec4 W = tex(vec2(U.x,0));\n            vec2 M = iMouse.xy/R, dM = M.xy-tex(vec2(0)).zw;\n            vec2 In = step( abs(M-W.xy-W.zw/2.), W.zw/2.-B);\n            if (In.x*In.y>0.)                                       // pixel in window #i\n                { O.xy += dM; return; } \n        \tvec2 P = (M-W.xy-W.zw/2.)/(W.zw/2.+B);\n            In = step( abs(P), vec2(1));\n            if (In.x*In.y>0.) {                                     // pixel in window #i border\n                if (P.x>.5) O.z += dM.x;   \n                if (P.y>.5) O.w += dM.y;   \n                if (P.x<-.5) { O.x += dM.x; O.z -= dM.x;  }\n                if (P.y<-.5) { O.y += dM.y; O.w -= dM.y;  }\n            }\n        \n        }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}