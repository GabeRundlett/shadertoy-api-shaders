{
    "Shader": {
        "info": {
            "date": "1399505447",
            "description": "Playing around with camera calculations of varying levels of accuracy. Circles of confusion and totally fake diffraction stars for point lights.",
            "flags": 0,
            "hasliked": 0,
            "id": "MssXDn",
            "likes": 158,
            "name": "Camera Obsession #1",
            "published": 3,
            "tags": [
                "bokeh",
                "camera",
                "particles",
                "stars",
                "rainbow"
            ],
            "usePreview": 0,
            "username": "WAHa_06x36",
            "viewed": 11980
        },
        "renderpass": [
            {
                "code": "#define NumberOfParticles 64\n#define Pi 3.141592\n\nvec3 palette(float x)\n{\n\treturn vec3(\n\t\tsin(x*2.0*Pi)+1.5,\n\t\tsin((x+1.0/3.0)*2.0*Pi)+1.5,\n\t\tsin((x+2.0/3.0)*2.0*Pi)+1.5\n\t)/2.5;\n}\n\nfloat starline(vec2 relpos,float confradius,float filmsize)\n{\n\tif(abs(relpos.y)>confradius) return 0.0;\n\tfloat y=relpos.y/confradius;\n\tfloat d=abs(relpos.x/filmsize);\n\treturn sqrt(1.0-y*y)/(0.0001+d*d)*0.00001;\n}\n\nfloat star(vec2 relpos,float confradius,float filmsize)\n{\n\tvec2 rotpos=mat2(cos(Pi/3.0),-sin(Pi/3.0),sin(Pi/3.0),cos(Pi/3.0))*relpos;\n\tvec2 rotpos2=mat2(cos(Pi/3.0),sin(Pi/3.0),-sin(Pi/3.0),cos(Pi/3.0))*relpos;\n\treturn starline(relpos,confradius,filmsize)+\n\t\tstarline(rotpos,confradius,filmsize)+\n\t\tstarline(rotpos2,confradius,filmsize);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 screenpos=(2.0*fragCoord.xy-iResolution.xy)/max(iResolution.x,iResolution.y);\n\n\tfloat focaldistance=0.5+sin(iTime*0.05)*0.013;\n\tfloat focallength=0.100;\n\tfloat filmsize=0.036;\n\tfloat minconf=filmsize/1000.0;\n\tfloat lensradius=focallength/1.0;\n\n\tfloat filmdistance=1.0/(1.0/focallength-1.0/focaldistance);\n\t\n\tvec3 c=vec3(0.0);\n\tfor(int i=0;i<NumberOfParticles;i++)\n\t{\n\t\tfloat t=float(i)/float(NumberOfParticles);\n\t\tfloat a=t*2.0*Pi+iTime*0.1;\n\n\t\tvec3 pos=vec3(sin(a)+2.0*sin(2.0*a),cos(a)-2.0*cos(2.0*a),-sin(3.0*a))*0.01;\n\n\t\tfloat a1=0.1*iTime;\n\t\tpos.xz*=mat2(cos(a1),-sin(a1),sin(a1),cos(a1));\n\t\t//float a2=0.1;\n\t\t//pos.yz*=mat2(cos(a2),-sin(a2),sin(a2),cos(a2));\n\n\t\tpos.z+=0.5;\n\t\t\n\t\tfloat intensity=0.0000002;\n\n\t\tvec2 filmpos=pos.xy/pos.z*filmdistance;\n\t\tfloat confradius=lensradius*filmdistance*abs(1.0/focaldistance-1.0/pos.z)+minconf;\n\n\t\tfloat diffusedintensity=intensity/(confradius*confradius);\n\n\t\tvec3 colour=palette(t);\n\n\t\tvec2 relpos=filmpos-screenpos/2.0*filmsize;\n\t\tif(length(relpos)<confradius) c+=colour*diffusedintensity;\n\n\t\tc+=colour*diffusedintensity*star(relpos,confradius,filmsize);\n\t}\n\n\tfragColor=vec4(pow(c,vec3(1.0/2.2)),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}