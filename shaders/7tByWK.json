{
    "Shader": {
        "info": {
            "date": "1650223702",
            "description": "I am a newb. This is my first shader.",
            "flags": 0,
            "hasliked": 0,
            "id": "7tByWK",
            "likes": 2,
            "name": "Newb1",
            "published": 3,
            "tags": [
                "newb"
            ],
            "usePreview": 0,
            "username": "7wingfly",
            "viewed": 194
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 p = fragCoord/iResolution.xy;\n    vec2 q = p - vec2(0.5, 0.5);\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5 * sin(vec3(0,2,4) + iTime / 2.);\n    \n    float r = 0.4 + 0.1 * cos(atan(-p.x + 2., -p.y / 2.) * 60.0 + 20.0 * -q.x + iTime * 2.);\n\n    float r1 = 0.2 + 0.1 * cos(atan(-p.x + 2., -p.y / 2.) * 5.0 + 20.0 * -q.x + iTime * 2.);\n    float r2 = 0.4 + 0.1 * cos(atan(-p.x + 4., -q.y / 2.) * 10.0 + 20.0 * -q.x + iTime * 4.);\n    float r3 = 0.6 + 0.1 * cos(atan(-p.x + 6., -q.y / 2.) * 20.0 + 20.0 * -q.x + iTime * 6.);\n    \n    col /= smoothstep(r / 100., r, length(q)) / .2;\n\n    col.x /= smoothstep(r1 / 100., r1, length(q)) / .2;\n    col.y /= smoothstep(r2 / 100., r2, length(q)) / .2;\n    col.z /= smoothstep(r3 / 100., r3, length(q)) / .2;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}