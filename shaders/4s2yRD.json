{
    "Shader": {
        "info": {
            "date": "1491167391",
            "description": "visualization of cycles in permutation https://www.shadertoy.com/view/Xs2yzR\nusing https://www.shadertoy.com/view/XsSyRR",
            "flags": 32,
            "hasliked": 0,
            "id": "4s2yRD",
            "likes": 4,
            "name": "analytical permutation",
            "published": 3,
            "tags": [
                "cycles",
                "orbits",
                "permutations"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 524
        },
        "renderpass": [
            {
                "code": "// buf A: generate a permutation table analytically\n// buf B: compute orbits\n// here:  display\n\n#define Ni  16        // change in all tabs !\n#define N   float(Ni)\n#define M   (N*N-1.)\n\nfloat line(vec2 p, vec2 a, vec2 b)  {                   // --- draw line\n\tvec2 pa = p - a, ba = b - a;\n    float u = dot(pa, ba)/dot(ba, ba);\n \treturn length(pa - ba * clamp(u,0.,1.));\n}\nvec2 R;\n#define rnd(x)  fract(3563.*sin(1e4*x))\n#define rnd2(v) (2.*fract(4563.*sin(1e4*mat2(1,173.1,-31.7,275.3)*(v)))-1.)\n#define pos(P)  (P+.5)/N+rnd2(P)*.4/N\n\nvoid color(inout vec4 O, vec2 P, float d) {             // --- blend with color scheme\n    if (d<2./R.y) {\n        float c = texture(iChannel1,(.5+P)/R).x;        // cycle Id\n        vec4  C = ( .5+.5*sin(1e3*c+vec4(0,2.1,-2.1,0) ) ) * (.7+.7*rnd(c));\n        O = mix(O, C, smoothstep(2./R.y,0.,d));\n        //O = vec4(mod(c,N),floor(c/N),0,0)/N, O.b = 1.-O.r-O.g;\n    }\n}\n\nvoid mainImage( out vec4 O, vec2 U ) {\n    R = iResolution.xy;      \n    vec2 P = floor((U-.5)/R*N), V;\n    O = texture(iChannel0,(.5+P)/R);                    // grey display permutation\n    float d = length( pos(P) - U/R ) -3./R.y;           // display cycle node\n    color(O,P,d);\n    \n    for (int i=0; i<Ni*Ni;i++) {                        // display cycle links\n        P = vec2(i%Ni,i/Ni);\n        int v = int(texture(iChannel0,(.5+P)/R).x*M+.5);\n        V = vec2(v%Ni,v/Ni);\n        d = line( U/R, pos(P), pos(V) );\n        if (i==v) d -= 8./R.y;                          // if fix node, draw big disk\n        color(O,P,d);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// --- permutation is computed here  (c) Fabrice Neyret\n\n// testing if permutation: https://www.shadertoy.com/view/Xs2yzR\n// https://www.desmos.com/calculator/2h1kktkwpj\n// ref: https://en.wikipedia.org/wiki/Permutation_polynomial#Higher_degree_polynomials\n\n//#define N 4          // emulate P=17 (prime) table then skip 1st\n  #define N 16         // emulate P=257 (prime) table then skip 1st\n#define P (N*N+1)      // must be prime  -> N = 1, 2, 4, 16, 256...\n#define Nf float(N)\n\nivec2 shuffle(ivec2 i)\n{\n    int C =  i.x + N*i.y +1; // range 1..P-1\n    \n    int a=9, b=0;            // should be: a, b such that no v with vÂ² = -b/a\n    C = a*C*C*C + b*C + 0;   // note that 0 is a fix point: we can safely skip it.\n    C = (C%P) -1;            // range 0..P-2 = 0..N*N-1\n    \n    // NB: to get power of 2 from other primes: C%=P ; while(C>=N*N) C=permut(C)%P;\n    return  ivec2( C , C / N ) % N;\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 p = vec2( shuffle( ivec2(U)) );\n    O = vec4( p.x + Nf*p.y )/(Nf*Nf-1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// --- compute orbits ( cycles id and length )\n\n#define N 16.        // change in all tabs !\n#define M (N*N-1.)\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy,\n         P = U-.5;\n    \n    float T = P.x+N*P.y, m=T, C;           // start position\n\n    for (float i = 0.; i < N*N; i++) {     // itered permutations\n        T = floor(.5+ M* texture(iChannel0,(.5+vec2(mod(T,N),floor(T/N)))/R).x);\n        m = min(m,T);\n        if (T==C) { C=i; break; }\n    }\n    O = vec4(m/(N*N),C,0,0);               // cycle id, length\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}