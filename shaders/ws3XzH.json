{
    "Shader": {
        "info": {
            "date": "1571455407",
            "description": "The inside of an egg",
            "flags": 0,
            "hasliked": 0,
            "id": "ws3XzH",
            "likes": 4,
            "name": "Shadertober 16 - Wild",
            "published": 3,
            "tags": [
                "wild",
                "inktober",
                "shadertober",
                "backwardscaptain"
            ],
            "usePreview": 0,
            "username": "BackwardsCap",
            "viewed": 342
        },
        "renderpass": [
            {
                "code": "#define MAX_DIST 100.\nfloat g;\n\nmat2 rot(float x)\n{\n    float s = sin(x);\n    float c = cos(x);\n    return mat2(c, -s, s, c);\n}\n\nfloat smin(float d1, float d2, float k)\n{\n    float h = clamp(0.5+0.5*(d2-d1)/k,0.0,1.0);\n    return mix(d2,d1,h)-k*h*(1.0-h);\n}\n\nfloat box(vec3 p, vec3 b)\n{\n  vec3 q = abs(p) - b;\n  return min(max(q.x,max(q.y,q.z)),0.0)+length(max(q,0.0));\n}\n\nvec2 map(vec3 p)\n{\n    float m=0.;\n    float d = 3.;\n    float r = 1000.;\n    float pr = .3;\n    for(float i=0.;i<6.;i++)\n    {\n        p.yz*=rot(iTime/2.*pr+.1);\n        pr+=.15;\n        p.z+=1.5;\n        p.x-=1.5;\n        p.y+=1.;\n        p=abs(p);\n        r=smin(r,length(p)-d,.7);\n        \n        bool ev = mod(i,2.)==0.;\n        \n        if(ev)\n        r=smin(r,length(p-abs(vec3(1.5+cos(iTime)*pr)))-d/3.,.7);\n        p.xy *=rot(.5);\n        \n        \n        if(mod(i,2.)!=0.)\n        r=smin(r,box(p,vec3(1,2.+cos(iTime/4.)*11.,1)),.6);\n    }\n    g+=0.01/(0.01+r*r);\n    return vec2(r,m);\n}\n\nvec2 ray(vec3 ro, vec3 rd)\n{\n    float t =0., m=0.;\n    \n    for(int i=0;i<100;i++)\n    {\n        \n        vec3 p = ro+rd*t;\n        vec2 s = map(p);\n        m=s.y;\n        if(s.x<0.00001)break;\n        t+=s.x;\n        if(t>MAX_DIST){t=-1.;break;}\n        \n    }\n    \n    return vec2(t,m);\n}\n\nvec3 normal(vec3 p)\n{\n    vec2 e = vec2(0.0005,0.);\n    return normalize(vec3(\n        map(p+e.xyy).x-map(p-e.xyy).x,\n        map(p+e.yxy).x-map(p-e.yxy).x,\n        map(p+e.yyx).x-map(p-e.yyx).x\n        ));\n}\n\nvoid mainImage( out vec4 c, in vec2 f )\n{\n    vec2 uv = (2.*f-iResolution.xy)/iResolution.y+vec2(.1,0);\n\tfloat d = 22.5;\n    vec3 ro = vec3(d,0,d);\n    vec3 ta = vec3(0,0.,0);\n    vec3 cf = normalize(ta-ro);\n    vec3 cu = normalize(cross(cf,vec3(0,1,0)));\n    vec3 cr = normalize(cross(cu,cf));\n    vec3 rd = normalize(uv.x*cu+uv.y*cr+2.*cf);\n    \n    vec2 r = ray(ro,rd);\n    vec3 p = ro+rd*r.x;\n    vec3 col = vec3(1.);\n    \n    vec3 sun = normalize(ro);\n    float dif = clamp(dot(normal(p),sun),0.0,1.0);\n\n    if(r.x>0.)col=vec3(1.0)*dif;\n    else col/=g;\n    c.rgb=col;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}