{
    "Shader": {
        "info": {
            "date": "1631560977",
            "description": "...",
            "flags": 0,
            "hasliked": 0,
            "id": "fdG3DW",
            "likes": 7,
            "name": "Caleidoscopic voronoi circles",
            "published": 3,
            "tags": [
                "circles"
            ],
            "usePreview": 0,
            "username": "kristoflovas",
            "viewed": 297
        },
        "renderpass": [
            {
                "code": "#define saturate(x) clamp(x,0.,1.);\n\nfloat Circle01(vec2 coord,vec2 offset,float minsize, float maxsize, float sizealpha,float linewidth)\n{\nfloat circle = 1.-saturate(ceil(abs(distance(fract(coord)+offset,vec2(.5))-mix(minsize,maxsize,sizealpha))-linewidth/2.));\nreturn circle;\n}\n\nfloat circularsine(vec2 coord,vec2 offset,float cells,float wavefreq,float speed)\n{\nreturn (sin(distance((floor(coord)-cells/2.)-offset,vec2(0.))/wavefreq-iTime*speed)+1.)/2.;\n}\n\n\nconst float cells = 12.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\nfloat ar = iResolution.x/iResolution.y;\nvec2 uv = fragCoord/iResolution.xy;\nuv = vec2(uv.x,1.-uv.y)*vec2(ar,1.)-vec2((ar-1.)/2.,0.);\n\nfloat circles = 0.;\nfloat minsize = -0.1;\nfloat maxsize = 1.5;\nvec2 curpos = vec2(0.);\n\nvec2 biguv = uv*cells;\n\nfor(int x=-1;2>x;x++)\n{\ncurpos.x=float(x);\n\nfor(int y=-1;2>y;y++)\n{\ncurpos.y=float(y);\n\nfloat sine =circularsine(biguv,curpos,cells,2.,.5);\nfloat c =Circle01(biguv,curpos,minsize, maxsize, sine,.05);\n\ncircles =max(circles,c);\n}}\n    // Output to screen\n    fragColor = vec4(circles);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}