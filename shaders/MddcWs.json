{
    "Shader": {
        "info": {
            "date": "1520692533",
            "description": "Shader time!",
            "flags": 0,
            "hasliked": 0,
            "id": "MddcWs",
            "likes": 25,
            "name": "NEWEFFECT1",
            "published": 3,
            "tags": [
                "planes"
            ],
            "usePreview": 0,
            "username": "greendestruction",
            "viewed": 724
        },
        "renderpass": [
            {
                "code": "mat2 rot(float x) {\n    return mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nvec2 map(vec3 p, float k) {\n    float m = 0.0;\n\tvec3 q = abs(p);\n    float d = max(q.x, max(q.y, q.z)) - 1.0;\n    float c = 0.9;\n    d = max(d, c - max(q.y, q.z));\n    d = max(d, c - max(q.x, q.z));\n    d = max(d, c - max(q.x, q.y));\n    q.x = abs(q.x - 1.5);\n    float u = max(q.x, q.y) - 0.25;\n    if (u < d) {\n        d = u;\n        m = 1.0;\n    }\n    return vec2(d, m);\n}\n\nfloat trace(vec3 o, vec3 r, float k) {\n    float t = 0.0;\n    for (int i = 0; i < 16; ++i) {\n        t += map(o + r * t, k).x;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    vec3 fc = vec3(0.0);\n    float fct = 1000.0;\n    \n    const int n = 4;\n    for (int i = 0; i < n; ++i) {\n        float fi = float(i) / float(n);\n        float fb = 1.0;\n        float tc = iTime * 0.25;\n        float ft = (1.0 - fract(tc + fi)) * fb;\n        \n        vec3 pr = normalize(vec3(uv, 1.0));\n        vec3 po = vec3(0.0, 0.0, -0.5);\n        \n        float pt = (ft - po.z) / pr.z;\n        vec3 pw = po + pr * pt;\n        float ps = 1.0 - pw.z / fb;\n        \n        vec2 st = pw.xy;\n\n        float rd = mod(float(i), 2.0) * 2.0 - 1.0;\n        st *= rot(float(i) * 3.141592 * 0.5 + iTime * 0.25);\n        \n        float ts = pow(ps, 4.0);\n        float se = max(abs(st.x) - ts, 0.0);\n        st.x += sign(-st.x) * ts;// * vec2(1.0, rd);\n        float sm = sign(se);\n        float sd = 1.0 / (1.0 + se * 50.0);\n        \n        vec3 r = normalize(vec3(st, 1.0));\n        vec3 o = vec3(0.0, 0.0, -5.0);\n        \n        r.yz *= rot(fi + iTime);\n        o.yz *= rot(fi + iTime);\n\n        float t = trace(o, r, fi);\n        vec3 w = o + r * t;\n        vec2 fd = map(w, fi);\n\n        float sa = 1.0 / (1.0 + pt * pt * 0.1);\n        float ss = 1.0 / (1.0 + t * t * 0.01 + fd.x * 100.0);\n        float pb = ps * (1.0 - ps) * 4.0;\n\n        if (pt < fct && sm > 0.0) {\n            vec3 ca = vec3(0.0, 0.0, 1.0);\n            vec3 cb = vec3(1.0, 0.0, 0.0);\n        \tfc = mix(ca, cb, fd.y);\n            fc = mix(vec3(1.0), fc, ss);\n        \tfc = mix(fc, vec3(0.75), sd) * sa;\n            fc *= 1.0 - pow(1.0 - ps, 4.0);\n            fct = pt;\n        }\n    }\n\n    fragColor = vec4(fc, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}