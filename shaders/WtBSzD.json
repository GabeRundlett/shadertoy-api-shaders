{
    "Shader": {
        "info": {
            "date": "1565158579",
            "description": "[url]javascript: H=location.host;E=(H?window:opener).Effect;P=E.prototype;if(!E.P)E.P=P.Paint;P.Paint=function(...A){for(i=0;i<3;i++)E.P.apply(this,A);};if(!H)close();[/url]",
            "flags": 32,
            "hasliked": 0,
            "id": "WtBSzD",
            "likes": 34,
            "name": "Van Der Waals Forces",
            "published": 3,
            "tags": [
                "fluid",
                "automata",
                "physics"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 1094
        },
        "renderpass": [
            {
                "code": "float ln (vec3 p, vec3 a, vec3 b) {return length(p-a-(b-a)*min(dot(p-a,b-a),0.)/dot(b-a,b-a));}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n \tvec4 \n        n = D(U+vec2(0,1)),\n        e = D(U+vec2(1,0)),\n        s = D(U-vec2(0,1)),\n        w = D(U-vec2(1,0));\n    vec4 a = A(U);\n    Q = C(U);\n    Q = (Q.xxxx)*vec4(.7,.8,.9,1);\n    vec3 no = normalize(vec3(e.x-w.x,n.x-s.x,1));\n    vec3 re = reflect(normalize(vec3((U-0.5*R)/R.y,1)),no);\n    float light = ln(vec3(2,2,2),vec3(U/R.y,0),vec3(U/R.y,0)+re);\n    Q *= (5.*exp(-2.*light*vec4(1,2,3,4))+.8*exp(-.3*light))*(0.5+0.5*dot(re,normalize(vec3(U/R.y,0)-vec3(2,2,2))));\n\tQ = atan(3.*Q)*.666;\n    \n    U = 0.5*R-abs(U-0.5*R);\n    Q += (0.5-0.5*cos(6.*a.z*(1.+.5*vec4(1,2,3,4))))*smoothstep(1.,-1.,min(U.x,U.y)-6.);\n    \n\t\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Calculate forces and pressure\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    Q = A(U);\n    vec4 \n        n = A(U+vec2(0,1)),\n        e = A(U+vec2(1,0)),\n        s = A(U-vec2(0,1)),\n        w = A(U-vec2(1,0));\n    Q.xy = mix(Q.xy,0.25*(n.xy+e.xy+s.xy+w.xy), .5);\n    Q.xy -= \n        // pressure force\n        0.25*vec2(e.z-w.z,n.z-s.z)+\n        // magnus force\n        0.25*Q.w*vec2(n.w-s.w,e.w-w.w);\n    // divergence\n    Q.z  = 0.25*(s.y-n.y+w.x-e.x+n.z+e.z+s.z+w.z);\n    // curl\n    Q.w = 0.25*(s.x-n.x+w.y-e.y);\n    vec4 d = D(U);\n    Q.xy -= d.zw;\n    Q.y -= .001*d.x;\n    //Boundary conditions\n    vec2 JET = vec2(.5+.25*sin(float(iFrame)/500.),0.6)*R;\n    if (iMouse.z>0.) JET = iMouse.xy;\n    Q.xy = mix(Q.xy,.5*vec2(cos(iTime),sin(iTime)),0.3*smoothstep(1.,-1.,length(U-JET)-11.));\n    if (iFrame<1) Q = vec4(0);\n    if (U.x<4.||U.y<4.||R.x-U.x<4.||R.y-U.y<4.)Q.xyw*=0.;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texture(iChannel0, (U)/R)\n#define C(U) texture(iChannel2, (U)/R)\n#define D(U) texture(iChannel3, (U)/R)\n\n#define N 3.",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "// Advect along velocity and curl feild\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    for (float i = 0.; i< N;i++) {\n        Q = A(U);\n        float co = cos(Q.w/N), si = sin(Q.w/N);\n        U -= Q.xy*mat2(co,-si,si,co)/N;\n    }\n    Q = A(U);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Advect along velocity and curl feild\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    for (float i = 0.; i< N;i++) {\n        Q = A(U);\n        float co = cos(Q.w/N), si = sin(Q.w/N);\n        U -= Q.xy*mat2(co,-si,si,co)/N;\n    }\n    Q = C(U);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// draw color and acount for divergence\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    Q = C(U);\n    // neighborhood\n    vec4 \n        n = A(U+vec2(0,1)),\n        e = A(U+vec2(1,0)),\n        s = A(U-vec2(0,1)),\n        w = A(U-vec2(1,0)),\n    \tnc = C(U+vec2(0,1)),\n        ec = C(U+vec2(1,0)),\n        sc = C(U-vec2(0,1)),\n        wc = C(U-vec2(1,0));\n    // divergence \n    vec4 m = 0.25*(nc+ec+sc+wc);\n    \n    #define a .01\n    \n    Q.y = mix(mix(Q.y,m.y,1.-a),Q.x,a);\n    Q.zw = .25*(Q.y-.5)*vec2(ec.y-wc.y, nc.y-sc.y);\n    \n    Q += 0.25*(s.y*sc-n.y*nc+w.x*wc-e.x*ec);\n    \n    // boundary conditions\n    vec2 JET = vec2(.5+.25*sin(float(iFrame)/500.),0.6)*R;\n    if (iMouse.z>0.) JET = iMouse.xy;\n    Q = mix(Q,vec4(1,0,0,0),smoothstep(1.,-1.,length(U-JET)-10.));\n    if (iFrame<1)Q = vec4(0);\n    if (U.x<4.||U.y<4.||R.x-U.x<4.||R.y-U.y<4.)Q*=0.;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}