{
    "Shader": {
        "info": {
            "date": "1696509016",
            "description": "A burning torch",
            "flags": 0,
            "hasliked": 0,
            "id": "cdGyWG",
            "likes": 9,
            "name": "Burning torch",
            "published": 3,
            "tags": [
                "fire",
                "torch"
            ],
            "usePreview": 0,
            "username": "ianertson",
            "viewed": 205
        },
        "renderpass": [
            {
                "code": "#define R iResolution.xy\n#define T (iTime)\n\n\nfloat hash21(in vec2 ip, in float seed) {\n    uvec2 p = floatBitsToUint(ip);\n    uint s = floatBitsToUint(seed);\n    uvec2 k = (~p >> 3U) * (s + 561U);\n    uint j = ~s; \n    p ^= p << 17U;\n    p ^= p >> 13U;\n    p += (p.x * j + p.y);\n    p ^= p << 5U; \n    p = (p + (p * k) * (p * s)) * 1013U;  \n    return float((p.x*p.y)*5013U) / float(0xFFFFFFFFU);\n}\n\nfloat noise21(in vec2 p, in float seed) {\n    vec2 lv = fract(p);\n    lv = lv * lv * (3.0 - 2.0 * lv);\n    vec2 id = floor(p);  \n    return mix(\n        mix(hash21(id, seed), hash21(id+vec2(1, 0), seed), lv.x),\n        mix(hash21(id+vec2(0, 1), seed), hash21(id+vec2(1, 1), seed), lv.x),\n        lv.y\n    );\n}\n\nfloat noise21(in vec2 p, in float seed, in float freq, const in int oct) {\n    float div = 0.0;\n    float amp = 1.0;\n    float n = 0.0;\n    \n    for (int i = 0; i < oct; i++) {\n        n += amp * noise21(p*freq, seed);\n        div += amp;\n        amp /= 2.0;\n        freq *= 2.0;\n    }\n\n    return n / div;\n}\n\nfloat line(in vec2 p, in vec2 a, in vec2 b, in float t) {\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n    float d = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    return clamp(1.0 - length(pa - ba * d) / t, 0.0, 1.0);\n}\n\n\nvoid mainImage( out vec4 O, in vec2 fc )\n{\n    vec2 uv = fc/R.y;\n    vec3 col = vec3(0.0);\n    vec2 dir = normalize(mix(vec2(0, -1), vec2(cos(T), sin(T)), 0.2));\n    float len = 0.26;\n    vec2 start = vec2((R.x/R.y)*0.5, 0.5);\n    vec2 end = start+dir*len;\n    float n0 = noise21(uv-dir, 0.34981, 3.0, 3);\n    vec2 toff = vec2(sin(T+n0), cos(T+n0));\n    float n = noise21(mix(\n    uv+toff, (uv+toff)-end,\n    distance(uv, start)/max(0.1, distance(uv, end))), 0.181813, 6.0, 3);\n    vec2 off = vec2(cos(n*6.28), sin(n*6.28))*0.021;\n    float lrp = smoothstep(0.02, 1.4, distance(uv + off, end));\n    vec2 lp = mix(start, end, lrp);\n    float l = line(uv, start, end, max(0.01, lrp));\n    col += l;\n    col = mix(col, col*vec3(1, 0, 0), smoothstep(0.0, 0.4, distance(uv + off, end)));\n    col = mix(col, vec3(1.0, 0.9, 0.25), l*smoothstep(0.3, 1.0, distance(uv + off, end)));\n    col = pow(col, vec3(1.0 / 2.2));\n    O = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}