{
    "Shader": {
        "info": {
            "date": "1699230464",
            "description": "Fine, symmetrical geometric art, made for everyone to enjoy!",
            "flags": 0,
            "hasliked": 0,
            "id": "mltcW4",
            "likes": 6,
            "name": "Flower Circles ",
            "published": 3,
            "tags": [
                "circles",
                "flower",
                "hypnotic",
                "warm"
            ],
            "usePreview": 0,
            "username": "atomgrafika",
            "viewed": 241
        },
        "renderpass": [
            {
                "code": "//This code is just the modificatipon of the original post //https://www.shadertoy.com/view/mtyGWy by kishimisu\n\nvec3 palette( float t ) {\n    vec3 a = vec3(1.0, 0.0, 0.5);\n    vec3 b = vec3(0.2, 0.8, 0.0);\n    vec3 c = vec3(1.0, 1.0, 0.8);\n    vec3 d = vec3(0.0,0.2,0.9);\n\n    vec3 timePhase = vec3(1.0, 2.0, 3.0) * t;\n\n    return a + b*cos( 2.0*(c*t+d) );\n}\nconst float PI = 5.6;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n\n\nfloat segments = 227.25;\n    float angle = 5.0 * PI / segments;\n\n float r = length(uv);\n    float theta = atan(uv.y, uv.x);   \n\n    theta = abs(mod(theta, angle) - angle * 0.5);\n\nfloat rotationSpeed = 0.1; // The speed of rotation, change this value to make it faster or slower\n    theta += iTime * rotationSpeed;\n    \n    uv = r * vec2(cos(theta), sin(theta));\n   \n     for (float i = 5.3; i < 5.9; i+= 0.55) {\n        uv = fract(uv * 2.1) - 0.5;\n        float d = length(uv) * exp(-r);\n\n        vec3 col = palette(length(uv0) + i*.1 + iTime*0.1);\n\n        d = sin(d*15. + iTime)/10.;\n        d = abs(d);\n        d = pow(0.005 / d, 1.0);\n\n        finalColor += col * d;\n    }\n        \n    fragColor = vec4(finalColor, 0.5);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}