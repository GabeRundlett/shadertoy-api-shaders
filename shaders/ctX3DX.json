{
    "Shader": {
        "info": {
            "date": "1672504534",
            "description": "The complete tripartite graph K(17,51,17) has 2023 (= 7.17Â²) edges, so here it is. Best full screen.\n\nHappy New Year to all!",
            "flags": 0,
            "hasliked": 0,
            "id": "ctX3DX",
            "likes": 16,
            "name": "MMXXIII",
            "published": 3,
            "tags": [
                "complete",
                "2023",
                "tripartite"
            ],
            "usePreview": 0,
            "username": "mla",
            "viewed": 284
        },
        "renderpass": [
            {
                "code": "vec3 h2rgb(float h) {\n  vec3 rgb = clamp( abs(mod(h*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n  return rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n}\n\n// Signed distance from p segment qr. Positive distance for\n// points on the left of the line looking from q to r.\nfloat ssegment(vec2 p, vec2 q, vec2 r) {\n  p -= q; r -= q;\n  float k = dot(p,r)/dot(r,r);\n  k = clamp(k,0.0,1.0);\n  vec2 closestpoint = k*r;\n  float dist = distance(p,closestpoint);\n  vec2 normal = vec2(-r.y,r.x);\n  float s = dot(p,normal) >= 0.0 ? 1.0 : -1.0;\n  return s*dist;\n}\n\nvec3 diagram(vec2 p, float N) {\n  p.y = abs(p.y);\n  float px = fwidth(p.x);\n  float d = 1e8;\n  float imin;\n  vec3 col = vec3(1,1,0.5);\n  float k = iResolution.y/iResolution.x*25.5;\n  float M = 3.0*N+1.0;\n  for (float i = -N, j = M; i <= N && j >= -M; ) {\n    float d1 = ssegment(p,vec2(3.0*i,k),vec2(j,0)+vec2(0.5*sign(j),0));\n    if (abs(d1) < d) { d = abs(d1); imin = i; }\n    if (d1 > 0.0) i++;\n    else j--;\n  }\n  col = mix(h2rgb(float(imin+N)/float(2.0*N+1.0)),col,smoothstep(0.0,px,d));\n  d = 1e8;\n  for (float i = -N, j = N; i <= N && j >= -N; ) {\n    float d1 = ssegment(p,vec2(3.0*i,k),vec2(3.0*j,-k));\n    if (abs(d1) < d) { d = abs(d1); imin = i; }\n    if (d1 > 0.0) i++;\n    else j--;\n  }\n  //col = mix(h2rgb(float(imin+8)/17.0),col,smoothstep(0.0,px,d));\n  col = mix(vec3(0),col,smoothstep(0.0,px,d));\n  return col;\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord ) {\n  float scale = 25.5;\n  vec2 p = scale*(2.0*fragCoord-iResolution.xy)/iResolution.x;\n  float t = mod(iTime,40.0);\n  if (t > 20.0) { p.x = -p.x; t -= 20.0; }\n  t = min(t,20.0-t)-1.0;\n  t = clamp(t,0.0,8.0);\n  vec3 col = diagram(p,t);\n  col = pow(col,vec3(0.4545));\n  fragColor = vec4(col,1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}