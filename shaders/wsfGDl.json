{
    "Shader": {
        "info": {
            "date": "1673661591",
            "description": "Yeah",
            "flags": 0,
            "hasliked": 0,
            "id": "wsfGDl",
            "likes": 5,
            "name": "Grid pattern experiment",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "ianwall",
            "viewed": 231
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926535\n\nvec3 color( float t )\n{\n    ///t = mod(t, 1.0);\n\tvec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 0.7, 0.4);\n    vec3 d = vec3(0.00, 0.15, 0.20);\n    \n    return a + b*cos(2.0*PI*(c*t+d));\n}\n\nfloat _distance( vec2 p )\n{\n\tfloat x = p.x;\n    float y = p.y;\n    return length(p) - 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec2 p = 2.0*(2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n\n    float x = p.x;\n    float y = p.y;\n\n    float d = _distance( mod(p, 0.4) );\n\t\n    d *= cos(d) + sin(p.x + iTime)*p.y;\n    \n    // Output to screen\n    float mask = sign(d);//color(d);\n    vec3 col  = color(d);\n\n    \n    //col = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.02,abs(d)) );\n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}