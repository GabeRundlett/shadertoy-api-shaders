{
    "Shader": {
        "info": {
            "date": "1502406388",
            "description": "old kaliset toying-around reanimated",
            "flags": 0,
            "hasliked": 0,
            "id": "4l3GRn",
            "likes": 11,
            "name": "retro fractal adventure",
            "published": 3,
            "tags": [
                "numbers",
                "kaliset",
                "magic"
            ],
            "usePreview": 0,
            "username": "bergi",
            "viewed": 754
        },
        "renderpass": [
            {
                "code": "#define TIME (iTime)\n\n// returns average value from kaliset\nvec3 kali_trees(in vec2 uv)\n{\n    uv = uv.yx / 100. - vec2(0.022,0.04);\n    uv.x += 0.001*sin(TIME/33.);\n    uv.y += 0.003*sin(TIME/17.3);\n    vec3 p = vec3(uv, .03);\n    \n    vec3 col = vec3(0.);\n    const int num_iter = 67;\n    for (int i=0; i<num_iter; ++i)\n    {\n        p = abs(p) / dot(p, p);\n        col += exp(-p*22.);\n        p -= vec3(1.+0.005*sin(TIME/11.), 0.585, .03);\n    }\n    col /= float(num_iter);\n    col *= 4.;\n    \n    //col = pow(clamp(col, 0., 1.), vec3(2.));\n    \n    return col;\n}\n\nvec3 kali_stars(in vec2 uv)\n{\n    uv = (uv+vec2(2.,1.)) / 14.;\n    uv.x += sin(TIME/150.);\n    vec3 p = vec3(uv, .03);\n    \n    vec3 col = vec3(0.);\n    const int num_iter = 50;\n    for (int i=0; i<num_iter; ++i)\n    {\n        p = abs(p) / dot(p, p);\n        col += exp(-p*32.);\n        p -= vec3(.285, .409, .874);\n    }\n    col /= float(num_iter);\n    col *= 4.;\n    \n    //col = pow(clamp(col, 0., 1.), vec3(2.));\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 suv = fragCoord.xy / iResolution.xy;\n    vec2 uv = (fragCoord.xy - .5*iResolution.xy) / iResolution.y * 2.;\n    \n    vec3 kt = kali_trees(uv);\n\tvec3 ks = kali_stars(uv);\n    \n    vec3 col = mix(vec3(.9,.3+.2*cos(suv.y*8.),.1), vec3(.5,.2+ks.x, 1.), suv.y-ks.z);\n    \n    col *= smoothstep(0.0, .2, kt.y-.6-suv.y*.1);\n    \n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}