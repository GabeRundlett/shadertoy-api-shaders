{
    "Shader": {
        "info": {
            "date": "1513264657",
            "description": "Next stage is to replicate the look of slot mask shadow mask by alternating the vertical offset of every odd triad.",
            "flags": 0,
            "hasliked": 0,
            "id": "XlffW2",
            "likes": 2,
            "name": "CRT v0.2",
            "published": 3,
            "tags": [
                "tv",
                "crt"
            ],
            "usePreview": 0,
            "username": "amason",
            "viewed": 1122
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926535897932384626433832795\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n     \n    float zoom = 0.03;\n    vec2 scaledRes = fragCoord.xy * zoom;\n    \n    float translateSpeed = sin(iTime) * 00.0;\n    float xPos = fragCoord.x + translateSpeed; \n    float yPos = fragCoord.y - translateSpeed;\n    \n    int y = int(mod(floor(yPos * zoom),2.0));\n    int x = int(mod(floor(xPos * zoom),3.0));\n    \n    float yOffset = 1.5 * roundEven( pow( cos(xPos * PI * zoom / 6.0 - 0.8 ), 2.0));\n   \n\n    // https://rechneronline.de/function-graphs/#a0=2&a1=1-%20max(0#abs(cos(x*pi))%20*%2010.0-9)&a2=&a3=&a4=1&a5=4&a6=8&a7=1&a8=1&a9=1&b0=500&b1=500&b2=-5&b3=5&b4=-5&b5=5&b6=10&b7=10&b8=5&b9=5&c0=3&c1=0&c2=1&c3=1&c4=1&c5=1&c6=1&c7=0&c8=0&c9=0&d0=1&d1=20&d2=20&d3=0&d4=&d5=&d6=&d7=&d8=&d9=&e0=&e1=&e2=&e3=&e4=14&e5=14&e6=13&e7=12&e8=0&e9=0&f0=0&f1=1&f2=1&f3=0&f4=0&f5=&f6=&f7=&f8=&f9=&g0=&g1=1&g2=1&g3=0&g4=0&g5=0&g6=Y&g7=ffffff&g8=a0b0c0&g9=6080a0&h0=1&h1=&h2=&h3=&h4=0&z\n    float xIntensity = 1.0 - max(0.0, abs(cos(xPos * PI * zoom * 3.0 / 3.0)) * 7.0 - 6.0);\n    float yIntensity = 1.0 - max(0.0, abs(sin((yPos * PI * zoom / 3.0) + yOffset)) * 40.0 - 39.0);\n    \n    \n    vec2 modul = mod(fragCoord, iResolution.y / (100.0 * zoom));\n    vec2 normalizedCord = vec2(fragCoord - modul) / iResolution.xy;\n\tfragColor = texture(iChannel0, normalizedCord);\n    \n    vec4 texCol = texture(iChannel0, normalizedCord * zoom);\n\n    \n    vec4 col;\n    \n    \n    if (x == 0) {\n        col = vec4(1.0, 0.0, 0.0,1.0) * texCol.x;\n    } else if (x == 1) {\n\t\tcol = vec4(0.0, 1.0, 0.0,1.0) * texCol.y;\n    } else if (x == 2) {\n        col = vec4(0.0, 0.0, 1.0,1.0) * texCol.z;\n    }\n    \n    // Shadow mask\n    col *= clamp(xIntensity * yIntensity, 0.0, 1.0);\n    \n        \n   \n    fragColor = col;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}