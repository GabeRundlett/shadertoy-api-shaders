{
    "Shader": {
        "info": {
            "date": "1434542006",
            "description": "shortness challenge against https://www.shadertoy.com/view/MlfXz8\nThis one starts with coyote  340 -> 301 chars improvement in  https://www.shadertoy.com/view/MlXXzH by merging funcs so losing reusability of the display digit function, thus the fork.",
            "flags": 0,
            "hasliked": 0,
            "id": "ltsXR8",
            "likes": 5,
            "name": "Time-o-matic 3 - 291 chars",
            "published": 3,
            "tags": [
                "numbers",
                "font",
                "digits",
                "short",
                "timer"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1637
        },
        "renderpass": [
            {
                "code": "// thanks coyote for the compact all-in-main 301-chars version ! \n// For those who prefer a separate display digit function, see there:  https://www.shadertoy.com/view/MlXXzH\n\nvoid mainImage(out vec4 o, vec2 i) {\n  o-=o; i/=12.; float c=iDate.w/1e3, x=i.x;\n  for (int n=0; n<7; n++) {\n     x-=4.; \n       if (x<3.) {\n       int j = int(i.y);\n       j = ( x<0.? 0:\n             j==5? 972980223: j==4? 690407533: j==3? 704642687: j==2? 696556137:j==1? 972881535: 0 \n           ) / int(pow(2.,floor(30.-x-mod(floor(c),10.)*3.))) ;\n       o = vec4( j-2*(j/2) );\n       break;\n    } \n    c/=.1;\n  }\n}",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}