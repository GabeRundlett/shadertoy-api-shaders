{
    "Shader": {
        "info": {
            "date": "1686219383",
            "description": "White ball repeatedly bouncing from left to right.",
            "flags": 0,
            "hasliked": 0,
            "id": "DtVSzV",
            "likes": 1,
            "name": "Bouncing Ball!",
            "published": 3,
            "tags": [
                "sine"
            ],
            "usePreview": 0,
            "username": "Starfish",
            "viewed": 137
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //small zoom\n    uv *= vec2(2.0, 2.0);\n    \n    \n    //calculate the ball coordinates at a given time\n    //modulo is used to reset the ball position once the screen end is reached\n    //a small offset is added to the sin result, since the ball would sink halfway into the screen otherwise\n    vec2 ballPos = vec2(mod(iTime, 3.5), abs(sin(iTime)) + 0.05);\n\n    //set a pixel to white when within a certain distance of the ball coordinates\n    vec3 col = vec3(0.0);\n    if(distance(uv, ballPos) < 0.1){\n        col = vec3(1.0);\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}