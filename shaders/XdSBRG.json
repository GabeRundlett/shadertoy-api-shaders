{
    "Shader": {
        "info": {
            "date": "1501471767",
            "description": "I'm surprised I haven't seen anything like this on the site yet, so I thought I'd do it. ",
            "flags": 0,
            "hasliked": 0,
            "id": "XdSBRG",
            "likes": 2,
            "name": "Chebyshev Voronoi",
            "published": 3,
            "tags": [
                "2d",
                "voronoi",
                "worley",
                "chebyshev"
            ],
            "usePreview": 0,
            "username": "Ebanflo",
            "viewed": 619
        },
        "renderpass": [
            {
                "code": "#define pi 3.141592654\n\nvec2 hash22(vec2 p)//Dave Hoskins https://www.shadertoy.com/view/4djSRW\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+19.19);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\nvec3 hash32(vec2 p)//Dave Hoskins https://www.shadertoy.com/view/4djSRW\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+19.19);\n    return fract((p3.xxy+p3.yzz)*p3.zyx);\n}\n\nfloat chebyshevMetric(vec2 a, vec2 b){return max(abs(a.x - b.x), abs(a.y - b.y));}\n                    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor -= fragColor;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv *= 10.0;\n    uv += 2.0;\n    float d0 = 9e9;\n    vec2 p0;\n    for(int i = -1; i < 2; i++){\n        for(int j = -1; j < 2; j++){\n            vec2 p = floor(uv) + vec2(i, j);\n            vec2 h = hash22(p);\n            vec2 g = p + .5 + .5 * sin(iTime * h);\n            float d = chebyshevMetric(uv, g);\n            if(d < d0){d0 = d; p0 = p;}\n        }\n    }\n    fragColor.xyz = hash32(p0);\n    fragColor.xyz /= fragColor.x + fragColor.y + fragColor.z;\n    fragColor.xyz = pow(fragColor.xyz, vec3(2.0 * d0));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}