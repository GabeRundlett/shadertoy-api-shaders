{
    "Shader": {
        "info": {
            "date": "1695698327",
            "description": "For some reason when using the cubemap, the fluid dissipates slowly... same code using a buffer does not have that problem.. is cubemap lower precision?",
            "flags": 0,
            "hasliked": 0,
            "id": "dsyyRR",
            "likes": 6,
            "name": "6 Fluids",
            "published": 3,
            "tags": [
                "fluid"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 271
        },
        "renderpass": [
            {
                "code": "#define R iResolution.xy\n\nvec4 H (vec2 U, int i) {\n    ivec3 p = ivec3(U,i);\n    vec2 x = vec2(p-512) + 0.5;\n    vec3 d;\n           if (p.z==0){     d = vec3( 512,-x.y,-x.x);\n    } else if (p.z==1){     d = vec3( x.x, 512, x.y);\n    } else if (p.z==2){     d = vec3( x.x,-x.y, 512);\n    } else if (p.z==3){     d = vec3(-512,-x.y, x.x);\n    } else if (p.z==4){     d = vec3( x.x,-512,-x.y);\n    } else if (p.z==5){     d = vec3(-x.x,-x.y,-512);\n    } else d = vec3(0);\n    return texture(iChannel0,d);\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    U = (U-.5*R)/R.y*1024.+512.;\n    Q = vec4(0);\n    for (int i = 0; i < 6; i++) {\n        vec4 q = H(U,i);\n        Q += q.w*max(sin(.3*float(i)*vec4(1,2,3,4)),0.);\n    }\n    //Q = 1.-Q;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 41,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a//media/previz/cubemap00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "int face (vec3 dir){\n    if        (dir.x>max(abs(dir.y),abs(dir.z))){\n        return 0;\n    } else if (dir.y>max(abs(dir.z),abs(dir.x))){\n        return 1;\n    } else if (dir.z>max(abs(dir.x),abs(dir.y))){\n        return 2;\n    } else if (-dir.x>max(abs(dir.y),abs(dir.z))){\n        return 3;\n    } else if (-dir.y>max(abs(dir.z),abs(dir.x))){\n        return 4;\n    } else if (-dir.z>max(abs(dir.x),abs(dir.y))){\n        return 5;\n    } else return -1;\n}\nvec4 H (vec2 U, int i) {\n    ivec3 p = ivec3(U,i);\n    vec2 x = vec2(p-512) + 0.5;\n    vec3 d;\n           if (p.z==0){     d = vec3( 512,-x.y,-x.x);\n    } else if (p.z==1){     d = vec3( x.x, 512, x.y);\n    } else if (p.z==2){     d = vec3( x.x,-x.y, 512);\n    } else if (p.z==3){     d = vec3(-512,-x.y, x.x);\n    } else if (p.z==4){     d = vec3( x.x,-512,-x.y);\n    } else if (p.z==5){     d = vec3(-x.x,-x.y,-512);\n    } else d = vec3(0);\n    return texture(iChannel0,d);\n}\nvec2 vel(vec2 v) {\n    return .5*v*inversesqrt(1.+.1*dot(v,v));\n}\nvoid mainCubemap( out vec4 Q, in vec2 U, in vec3 _, in vec3 d )\n{\n    int f = face(d);\n    Q = H(U,f);\n    if (iFrame % 2 == 0) {\n        for(int x=-1;x<=1;x++)\n        for(int y=-1;y<=1;y++)  if(abs(x)!=abs(y))\n        {\n            vec2 u = vec2(x,y);\n            vec4 q = H(U+u,f);\n            float k = 0.;\n            for(int i = 0; i < 6; i++)   {\n                k += H(U+u,i).w;\n            }\n            Q.xy -= .08*(q.w*(q.w-1.)+k)*u;\n        }\n        Q.y -= 3e-4*sin(float(f));\n        if (length(Q.xy)>.5)Q.xy = .5*normalize(Q.xy);\n        if (U.x < 3.||1024.-U.x < 3.) Q.x *= 0.;\n        if (U.y < 3.||1024.-U.y < 3.) Q.y *= 0.;\n        if (iFrame < 3) {\n            Q.w = .2+.1*sin(.5*U.x+float(f))+.1*sin(.5*U.y+float(f*f));\n        }\n    \n    } else {\n       \n        vec4 dQ = vec4(0);\n\n        for(int x=-1;x<=1;x++)\n        for(int y=-1;y<=1;y++)  if(abs(x)!=abs(y))\n        {\n            vec2 u = vec2(x,y);\n            {\n                vec4 q = H(U+u,f);\n                vec2 a = vel(Q.xy),\n                     b = vel(q.xy)+u;\n               float ab = dot(u,b-a);\n               float i = dot(u,(0.5*u-a))/ab;\n              {\n                   float j = .5+.5*max(1.-q.w,0.);\n                   float k = .5+.5*max(1.-Q.w,0.);\n                   float wa = 0.25008*Q.w*min(i,j)/j;\n                   float wb = 0.25008*q.w*max(k+i-1.,0.)/k;\n                    dQ += vec4(Q.xyz,1)*wa+vec4(q.xyz,1)*wb;\n              }\n           }\n\n        }\n        if (dQ.w>0.)dQ.xyz/=dQ.w;\n        Q = dQ;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 41,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a//media/previz/cubemap00.png"
                    }
                ],
                "name": "Cube A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 41
                    }
                ],
                "type": "cubemap"
            }
        ],
        "ver": "0.1"
    }
}