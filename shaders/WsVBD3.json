{
    "Shader": {
        "info": {
            "date": "1608118628",
            "description": "This function is continuous at every irrational x ( = 0 there ) and discontinuous at every rational x.\n[url]https://en.wikipedia.org/wiki/Thomae%27s_function[/url]\n[url]https://en.wikipedia.org/wiki/Euclid%27s_orchard[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "WsVBD3",
            "likes": 5,
            "name": "popcorn function / Euclid orchad",
            "published": 3,
            "tags": [
                "fractal",
                "functions",
                "short",
                "continuity"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 429
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy; \n    \n    float l = exp2(round(log2(R.x))); // normalizing by a power of 2.\n    U.x -= (R.x-l)/2.; if (abs(U.x-l/2.)>l/2.) { O = vec4(.5); return; }\n    \n    int  p = int(U), q = int(l), n = int(sqrt(l));\n    \n    // encodes x as p/q, p & q coprimes â†’ search and divive by common divisors\n\n    while( p%2 == 0 && q%2 == 0 ) p/=2, q/=2, n/=2; // treat 2^max separately\n                                                    // to allow += 2 in main loop\n    for( int i=3; i < n; i+=2 )\n      if( p%i == 0 && q%i == 0 )     // i divide p and q : reduce both by i^max\n          p/=i, q/=i, n/=i, i-=2;    // -=2 emulates while\n      \n    O = vec4( 1./float(q) < .5*U.y/R.y );  \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}