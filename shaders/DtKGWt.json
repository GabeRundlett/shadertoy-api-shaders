{
    "Shader": {
        "info": {
            "date": "1684863817",
            "description": "sdf rect + multiple onions example",
            "flags": 0,
            "hasliked": 0,
            "id": "DtKGWt",
            "likes": 1,
            "name": "sdf rect + onion example",
            "published": 3,
            "tags": [
                "sdf",
                "learn"
            ],
            "usePreview": 0,
            "username": "Prohladniy",
            "viewed": 141
        },
        "renderpass": [
            {
                "code": "float sdfRect(in vec2 p, in vec2 b)\n{\n    vec2 d = abs(p) - b;\n    return max(d.x, d.y);\n}\n\nfloat opOnion(in float d, in float r)\n{\n    return abs(d) - r;\n}\n\nvec2 rotate(vec2 p, float a) {\n\tfloat c = cos(a);\n    float s = sin(a);\n    mat2 m = mat2(c, s, -s, c);\n    return m * p;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 point = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec2 mouse = (2.0 * iMouse.xy - iResolution.xy) / iResolution.y;\n\n    vec2 center = mouse;\n    vec2 size = vec2(0.4, 0.7);\n    float border = 0.05;\n\n    float dist = sdfRect(rotate(point - center, iTime), size);\n    dist = opOnion(dist, border);\n    dist = opOnion(dist, border / 4.0);\n\n    float value = smoothstep(0.0, 0.0, dist);\n    fragColor = vec4(vec3(value), 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}