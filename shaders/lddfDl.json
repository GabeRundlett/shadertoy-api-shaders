{
    "Shader": {
        "info": {
            "date": "1527281240",
            "description": "reference: [url]https://www.the-scientist.com/May2018/Abstract-3d.jpg[/url]\nadapting [url]https://shadertoy.com/view/ldfcRS[/url] + 3D + pseudo depth of field",
            "flags": 0,
            "hasliked": 0,
            "id": "lddfDl",
            "likes": 9,
            "name": "isovalues 4c",
            "published": 3,
            "tags": [
                "noise",
                "dof",
                "depthoffield",
                "contour"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 632
        },
        "renderpass": [
            {
                "code": "// Fork of \"isovalues 5\" by FabriceNeyret2. https://shadertoy.com/view/MstfDl\n// 2018-05-25 20:45:49\n\n// Fork of \"isovalues 4\" by FabriceNeyret2. https://shadertoy.com/view/MdtfDl\n// 2018-05-25 20:28:14\n\n// variant of https://shadertoy.com/view/ldfcRS\n\n// --- noise from procedural pseudo-Perlin (better but not so nice derivatives) ---------\n                    // ( adapted from IQ )\n\nfloat noise2( vec2 x ) {\n    vec2 p = floor(x),f = fract(x);\n\n    f = f*f*(3.-2.*f);  // or smoothstep     // to make derivative continuous at borders\n\n#define hash2(p)  fract(sin(1e3*dot(p,vec2(1,57)))*4375.5453)        // rand\n    \n    return mix(mix( hash2(p+vec2(0,0)), hash2(p+vec2(1,0)),f.x),     // triilinear interp\n               mix( hash2(p+vec2(0,1)), hash2(p+vec2(1,1)),f.x),f.y);\n}\n\n#define noise(x) (noise2(x)+noise2(x+11.5)) / 2. // pseudoperlin improvement from foxes idea \n\n\n\nvoid mainImage( out vec4 O, vec2 U ) // ------------ draw isovalues\n{\n    vec2 u = U/iResolution.y;\n    U = 6.*u - iTime;\n    O -= O; \n    for (float z=0.; z<=1.; z+=.05, U.y -= .1) { // consider 1 isovalue per altitude\n        float n = ( noise(vec2(U.x-U.y*.1,U.y/.6))-.2) / .6,\n              v = smoothstep(0.,1.5+20.*abs(u.y-.5), (n-z)/fwidth(n));\n\t    O = mix(O, vec4(n), v);\n\t // O = mix(O, z*vec4(.5,1,1,1), v);\n\t // O = mix(O, z*(.5+.5*cos(6.3*z + vec4(0,23,21,0) )), v);\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}