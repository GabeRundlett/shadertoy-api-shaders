{
    "Shader": {
        "info": {
            "date": "1492103165",
            "description": "Simple visualization of Fresnel factors of gold for non-polarized light using complex refractive indices.\n\nx axis: angle, 0 - Ï€/2\ny axis: wavelength, 390 - 800nm, 10nm step\n\nRefractive indices are extracted from https://refractiveindex.info",
            "flags": 0,
            "hasliked": 0,
            "id": "4sByDR",
            "likes": 0,
            "name": "Fresnel Equations",
            "published": 3,
            "tags": [
                "fresnel"
            ],
            "usePreview": 0,
            "username": "Takoa",
            "viewed": 809
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926\n#define INV_GAMMA 0.45454545\n\nconst vec2 refractiveIndices[42] = vec2[42]\n( // n, k 390-800nm\n    vec2(1.672504217, 1.966512231),\n    vec2(1.665616091, 1.973924254),\n    vec2(1.653911114, 1.975227068),\n    vec2(1.63743714, 1.970304643),\n    vec2(1.612343317, 1.959477219),\n    vec2(1.581523054, 1.940313163),\n    vec2(1.538326354, 1.910745397),\n    vec2(1.475285274, 1.872315849),\n    vec2(1.386263242, 1.827683172),\n    vec2(1.252905499, 1.782097694),\n    vec2(1.064360219, 1.76786953),\n    vec2(0.848474841, 1.828280492),\n    vec2(0.661635502, 1.964525779),\n    vec2(0.52912664, 2.129735899),\n    vec2(0.438041087, 2.294990195),\n    vec2(0.372502061, 2.451664289),\n    vec2(0.323930966, 2.597158307),\n    vec2(0.284960267, 2.738978341),\n    vec2(0.254069233, 2.871855006),\n    vec2(0.228936734, 2.999518633),\n    vec2(0.207122197, 3.1213458),\n    vec2(0.188789629, 3.241703491),\n    vec2(0.172726107, 3.356759495),\n    vec2(0.160071695, 3.465634566),\n    vec2(0.14636792, 3.577628204),\n    vec2(0.135417727, 3.685964997),\n    vec2(0.125499436, 3.792327795),\n    vec2(0.117832095, 3.896137113),\n    vec2(0.111117685, 3.999543366),\n    vec2(0.105744888, 4.102704228),\n    vec2(0.101509306, 4.205033191),\n    vec2(0.098607898, 4.305081128),\n    vec2(0.097790271, 4.403812319),\n    vec2(0.098623269, 4.499191766),\n    vec2(0.096903666, 4.59580138),\n    vec2(0.099463321, 4.687205239),\n    vec2(0.098537395, 4.78107829),\n    vec2(0.099206649, 4.872354868),\n    vec2(0.101706737, 4.958865219),\n    vec2(0.101315225, 5.051560628),\n    vec2(0.103067755, 5.148069829),\n    vec2(0.10422723, 5.22368292)\n);\n\nfloat complexAbs(vec2 c)\n{\n    return sqrt(c.x * c.x + c.y * c.y);\n}\n\nvec2 complexInverse(vec2 c)\n{\n    float f = c.x * c.x + c.y * c.y;\n    \n    return vec2(c.x / f, -c.y / f);\n}\n\nvec2 complexMultiply(vec2 c1, vec2 c2)\n{\n    return vec2(c1.x * c2.x - c1.y * c2.y, c1.y * c2.x + c1.x * c2.y);\n}\n\nvec2 complexDivide(vec2 c1, vec2 c2)\n{\n    float f = c2.x * c2.x + c2.y * c2.y;\n    \n    return vec2(c1.x * c2.x + c1.y * c2.y, c1.y * c2.x + c1.x * c2.y) / (c2.x * c2.x + c2.y * c2.y);\n}\n\nvec2 complexSqrt(vec2 c) {\n    float f = sqrt(c.x * c.x + c.y * c.y);\n    float r = sqrt(0.5 * (f + c.x));\n    float i = sqrt(0.5 * (f - c.x));\n    \n    if (c.y < 0.0) i = -i;\n    \n    return vec2(r, i);\n}\n\nfloat fresnel(vec2 f, float radian) {\n\tvec2 rsF = complexInverse(f) * sin(radian);\n    vec2 rsG = complexSqrt(vec2(1.0, 0.0) - complexMultiply(rsF, rsF));\n    vec2 rsH = complexMultiply(f, rsG);\n    vec2 rsI = vec2(cos(radian), 0.0) - rsH;\n    vec2 rsJ = vec2(cos(radian), 0.0) + rsH;\n    float rsK = complexAbs(complexDivide(rsI, rsJ));\n    float rs = rsK * rsK;\n    \n    vec2 rpF = vec2(rsG.x, 0.0) - f;\n    vec2 rpG = vec2(rsG.x, 0.0) + f;\n    float rpH = complexAbs(complexDivide(rpF, rpG));\n    float rp = rpH * rpH;\n    \n    return 0.5 * (rs + rp);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int refractiveIndex = int(round(fragCoord.y / iResolution.y * 41.0));\n    vec3 color = vec3(fresnel(refractiveIndices[refractiveIndex], (PI / 2.0) * (fragCoord.x / iResolution.x)));\n\n    //color = vec3(pow(color.x, INV_GAMMA), pow(color.y, INV_GAMMA), pow(color.z, INV_GAMMA));\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}