{
    "Shader": {
        "info": {
            "date": "1607573822",
            "description": "More playing with fractal noise!",
            "flags": 0,
            "hasliked": 0,
            "id": "3sGBR3",
            "likes": 2,
            "name": "Pulsing Virus",
            "published": 3,
            "tags": [
                "raymarching",
                "fbm",
                "fractalnoise",
                "virus"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 169
        },
        "renderpass": [
            {
                "code": "float noise(in vec2 p) {\n    return fract(sin(p.x * 17.6452 + p.y * 565.337) * 5425.235);\n}\n\nfloat SmoothNoise(in vec2 p) {\n    vec2 luv = smoothstep(0.0, 1.0, fract(p)); // :P\n    vec2 cid = floor(p);\n\n    float bl = noise(cid);\n    float br = noise(cid + vec2(1.0, 0.0));\n    float tl = noise(cid + vec2(0.0, 1.0));\n    float tr = noise(cid + vec2(1.0, 1.0));\n\n    return mix(mix(bl, br, luv.x), mix(tl, tr, luv.x), luv.y);\n}\n\nfloat FractalNoise(in vec2 p, in float scale, in float octaves) {\n    float value = 0.0;\n    float nscale = 1.0;\n    float tscale = 0.0;\n\n    for (float octave=0.0; octave < octaves; octave++) {\n        value += SmoothNoise(p * pow(2.0, octave) * scale) * nscale;\n        tscale += nscale;\n        nscale *= 0.5;\n    }\n\n    return value / tscale;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 ro = vec3(0.0, 0.0, 5.0);\n    vec3 rd = normalize(vec3(uv, -1.0));\n    float colorChange = 0.8 + 0.4 * sin(3.5 * iTime);\n    fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    fragColor.rg += 0.75 * (2.0 - colorChange) / 1.5 * (1.5 - length(uv)) / 1.5;\n\n    float dt = 0.0;\n    for (int iter=0; iter < 50; iter++) {\n        vec3 p = ro + rd * dt;\n\n        float c = cos(iTime), s = sin(iTime);\n        p.xz *= mat2(c, s, -s, c);\n\n        float h = FractalNoise(vec2(atan(p.z, p.x), atan(p.y, length(p.xz))), 10.0, 4.0);\n        float d = length(p) - 2.0 + h;\n\n        if (d < 0.001) {\n            fragColor.rgb = mix(vec3(1.0, 0.0, 0.0), vec3(1.0, 1.0, 0.0) * 2.0 * h * (1.0 + colorChange), h);\n            break;\n        }\n\n        if (dt > 10.0) {\n            break;\n        }\n\n        dt += d;\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}