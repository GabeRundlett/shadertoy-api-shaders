{
    "Shader": {
        "info": {
            "date": "1685889629",
            "description": "Another test, I'm just toying with random math at this point",
            "flags": 0,
            "hasliked": 0,
            "id": "DlGXzz",
            "likes": 2,
            "name": "Bald Polnareff Fractal Test 1",
            "published": 3,
            "tags": [
                "fractal",
                "animation",
                "rotation"
            ],
            "usePreview": 0,
            "username": "BaldPolnareff",
            "viewed": 161
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 p = (2.0 * fragCoord - iResolution.xy) / iResolution.y; // Normalize coordinates\n\n    // Scale and rotate the coordinate system\n    p *= mat2(cos(iTime), sin(iTime), -sin(iTime), cos(iTime));\n    p *= 5.0;\n\n    float f = 1.0;\n    for (float i = 0.; i < 7.6; i++) {\n        p = abs(p) / dot(p, p) - 0.638;\n        f *= dot(1.1*p, p);\n    }\n\n    // Apply coloring to the fractal\n    vec3 color = vec3(f * 0.1 + .007*sin(iTime + 1.2), f * 0.8 + .007*cos(iTime + 1.2), f * 0.26 + .007*sin(iTime/10. + 0.2));\n\n    // Add some variation to the coloring\n    color += 0.002 * vec3(sin(fragCoord.x * 0.1), cos(fragCoord.y * 0.05), sin(iTime * 0.3));\n\n    fragColor = 10.*vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}