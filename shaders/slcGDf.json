{
    "Shader": {
        "info": {
            "date": "1643349169",
            "description": "A simple 2D plane deformation driven by the mouse (more info here: https://iquilezles.org/articles/deform/deform.htm)",
            "flags": 32,
            "hasliked": 0,
            "id": "slcGDf",
            "likes": 2,
            "name": "Fork Fork Defor gchipunov 578",
            "published": 3,
            "tags": [
                "2d",
                "planedeformation"
            ],
            "usePreview": 0,
            "username": "gchipunov",
            "viewed": 174
        },
        "renderpass": [
            {
                "code": "// Created by inigo quilez - iq/2013\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 p = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n  vec2 m = -1.0 + 2.0 * iMouse.xy / iResolution.xy;\n\n  float a1 = atan(p.y-m.y,p.x-m.x);\n  float r1 = sqrt(dot(p-m,p-m));\n  float a2 = atan(p.y+m.y,p.x+m.x);\n  float r2 = sqrt(dot(p+m,p+m));\n\n  vec2 uv;\n  uv.x = 0.2*iTime + (r1-r2)*0.55;\n  uv.y = asin(sin(a1-a2))/3.1416;\n\t\n\n  vec3 col = texture( iChannel0, 0.125*uv ).zyx;\n\n  float w = exp(-55.0*r1) + exp(-55.0*r2*r2);\n\n  w += 0.25*smoothstep( 0.03,1.0,sin(228.0*uv.x));\n  w += 0.25*smoothstep( 0.93,1.0,sin(128.0*uv.y));\n\t\n  fragColor = vec4(log2(sqrt (col+w) +(col+w) / 1.1) ,1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.5,0.0,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}