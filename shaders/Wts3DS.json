{
    "Shader": {
        "info": {
            "date": "1557490946",
            "description": "May 3rd, 2019. Exploring texture creation with several layers of Voronoi noise.",
            "flags": 0,
            "hasliked": 0,
            "id": "Wts3DS",
            "likes": 6,
            "name": "[Wan] Alien egg",
            "published": 3,
            "tags": [
                "voronoi",
                "noise",
                "texture"
            ],
            "usePreview": 0,
            "username": "wan",
            "viewed": 472
        },
        "renderpass": [
            {
                "code": "#define CELLS 30.\n\nfloat rand(vec2 p) {\n\treturn fract(sin(p.x*61.21+p.y*45.58)*4001.0);\n}\n\nvec2 cell(vec2 p) {\n\treturn floor(p.xy*CELLS);\n}\n\nvec2 cellorigin(vec2 ij) {\n\treturn ij/CELLS;\n}\n\nvec2 cellcenter(vec2 ij) {\n\tvec2 offset = vec2(rand(ij.xy*10.), rand(ij.yx*10.))/CELLS;\n\tfloat movSpeed = .3;\n\toffset += vec2(sin(iTime*movSpeed+rand(ij.xy)*10.), cos(iTime*movSpeed+rand(ij.yx)*10.) )/CELLS/2.;\n\treturn cellorigin(ij) + clamp(offset, 0., 1./CELLS);\n}\n\nfloat voronoi(vec2 p) {\n\tvec2 ij = cell(p);\n\t\n\tvec2 nearest = ij;\n\tfloat nearestdist = 999.;\n\tfor (float i = -1.; i <= 1.; i++) {\n\tfor (float j = -1.; j <= 1.; j++) {\n\t\tvec2 ijneighbor = ij.xy + vec2(i,j);\n\t\tfloat ijcenterdist = length(p - cellcenter(ijneighbor));\n\t\tif (ijcenterdist  < nearestdist) {\n\t\t\tnearest = ijneighbor;\n\t\t\tnearestdist = ijcenterdist;\n\t\t}\n\t}}\n\treturn nearestdist*CELLS;\n}\n\nfloat map(vec3 p) {\n\tp += voronoi(p.xy/6.)/30.;\n\treturn length(p) - 3.;\n}\n\nvec3 normal(vec3 p) {\n\tvec2 e = vec2(0.001, 0.);\n\treturn normalize(vec3(\n\t\tmap(p+e.xyy)-map(p-e.xyy),\n\t\tmap(p+e.yxy)-map(p-e.yxy),\n\t\tmap(p+e.yyx)-map(p-e.yyx)));\n}\n\nvec3 lightdir = normalize(vec3(.5,-.5,1.));\nfloat lightAt(vec3 p) {\n\treturn dot(-lightdir, normal(p));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 uv = ( 2.*fragCoord.xy-iResolution.xy ) / iResolution.y;\n\tuv.y /= 1.2;\n\tuv.x *= 1. + uv.y/5.;\n\t\n\tvec3 eye = vec3(0.,0.,-5.);\n\tvec3 raydir = normalize(vec3(uv.x, uv.y, 1.));\n\t\n\tvec3 p = eye;\n\tint hit = -1;\n\t\n\tfor (int i = 0; i < 50; i++) {\n\t\tfloat d = map(p);\n\t\tif (d < 0.001) {\n\t\t\thit = i;\n\t\t\tbreak;\n\t\t}\n\t\tp += d * raydir;\n\t}\n\n\tfloat light =  lightAt(p);\n\tfloat texture = voronoi(p.xy*2.) * lightAt(p)/2.5;\n\ttexture += voronoi(p.xy/10.+11.)*0.5;\n\ttexture /= voronoi(p.xy/50.+20.)*2.0;\n\tvec3 color = mix(vec3(0.0,0.0,0.0), vec3(0.3,0.4,0.5), uv.y);\n\tif (hit > -1) {\n\t     color = mix(vec3(.0,.0,.2), vec3(.4,.9,1.), texture) * (1. - float(hit)/100.) * lightAt(p);\n\t} \n\t\n\t\n\tfragColor = vec4(color, 1.0);\n\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}