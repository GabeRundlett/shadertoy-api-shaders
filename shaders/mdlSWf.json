{
    "Shader": {
        "info": {
            "date": "1669673491",
            "description": "just experimenting with vonoroi and colors",
            "flags": 0,
            "hasliked": 0,
            "id": "mdlSWf",
            "likes": 5,
            "name": "vonoroi simple with colors",
            "published": 3,
            "tags": [
                "vonoroi"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 179
        },
        "renderpass": [
            {
                "code": "// credits: https://www.shadertoy.com/view/4djSRW\n\nfloat f_n_rand(float p)\n{\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 o_trpino = (fragCoord.xy - (iResolution.xy *0.5)) / iResolution.y;\n    o_trpino*=0.5;\n    float n_points = 200.;\n    float n_dist_min = 1.;\n    float n_dist_min2 = 2.;\n    float n_dist_min3 = 2.;\n    \n    float n_t = iTime*0.001;\n    \n    for(float n_p = 0.; n_p < n_points; n_p+=1.){\n        \n        float n_p_nor = ((1./n_points) * n_p);\n        \n        float n_rand = f_n_rand(n_p_nor+n_t)-0.5;\n        //float n_rand2 = f_n_rand(n_rand+n_t)-0.5;\n        float n_rand2 = f_n_rand(1.-n_p_nor)-0.5;\n        \n        vec2 o_rand = vec2(n_rand, n_rand2);\n        \n        float n_dist = length(o_trpino - o_rand);\n        \n        \n        if(n_dist < n_dist_min){\n            n_dist_min = n_dist;\n        }else{\n        \n            if(n_dist < n_dist_min2){\n                n_dist_min2 = n_dist;\n            }else{\n            \n                if(n_dist < n_dist_min3){\n                    n_dist_min3 = n_dist;\n                }\n            \n            }\n        }\n        //n_dist_min = min(n_dist, n_dist_min);\n        //n_dist_min2 = min(n_dist_min2, max(n_dist, n_dist_min));\n        //n_dist_min3 = min(n_dist_min3, max(n_dist, n_dist_min2));\n        \n                \n        \n    }\n    \n    fragColor = vec4(\n        n_dist_min,\n        n_dist_min2,\n        n_dist_min3,\n        1.0\n    );\n    fragColor = sqrt(fragColor);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}