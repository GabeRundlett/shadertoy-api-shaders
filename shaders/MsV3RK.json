{
    "Shader": {
        "info": {
            "date": "1455420840",
            "description": "Modification of this shader:\nhttp://glslsandbox.com/e#29611.0",
            "flags": 0,
            "hasliked": 0,
            "id": "MsV3RK",
            "likes": 31,
            "name": "Honeycomb Fractal",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "noise",
                "kaleidoscope",
                "honeycomb"
            ],
            "usePreview": 0,
            "username": "foxes",
            "viewed": 2061
        },
        "renderpass": [
            {
                "code": "vec3 hash(float x) { return fract(sin((vec3(x)+vec3(23.32445,132.45454,65.78943))*vec3(23.32445,32.45454,65.78943))*4352.34345); }\n\nvec3 noise(float x)\n{\n    float p = fract(x); x-=p;\n    return mix(hash(x),hash(x+1.0),p);\n}\n\nvec3 noiseq(float x)\n{\n    return (noise(x)+noise(x+10.25)+noise(x+20.5)+noise(x+30.75))*0.25;\n}\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    float time=iTime*0.15;\n    vec3 k1=noiseq(time)*vec3(0.1,0.19,0.3)+vec3(1.3,0.8,.63);\n    vec3 k2=noiseq(time+1000.0)*vec3(0.2,0.2,0.05)+vec3(0.9,0.9,.05);\n    //float k3=clamp(texture(iChannel0,vec2(0.01,0.)).x,0.8,1.0); float k4=clamp(texture(iChannel0,vec2(0.2,0.)).x,0.5,1.0); k2+=vec3((k3-0.8)*0.05); k1+=vec3((k4-0.5)*0.01);\n    float g=pow(abs(sin(time*0.8+9000.0)),4.0);\n    \n\tvec2 R = iResolution.xy;\n    \n    vec2 r1=(U / R.y-vec2(0.5*R.x/R.y,0.5));\n    float l = length(r1);\n    vec2 rotate=vec2(cos(time),sin(time));\n    r1=vec2(r1.x*rotate.x+r1.y*rotate.y,r1.y*rotate.x-r1.x*rotate.y);\n    vec2 c3 = abs(r1.xy/l);\n\tif (c3.x>0.5) c3=abs(c3*0.5+vec2(-c3.y,c3.x)*0.86602540);\n    c3=normalize(vec2(c3.x*2.0,(c3.y-0.8660254037)*7.4641016151377545870));\n    \n    O = vec4(c3*l*70.0*(g+0.12), .5,0);\n    for (int i = 0; i < 128; i++) {\n    \tO.xzy = (k1 * abs(O.xyz/dot(O,O)-k2));\n    }\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}