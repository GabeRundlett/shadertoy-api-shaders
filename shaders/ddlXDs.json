{
    "Shader": {
        "info": {
            "date": "1669757310",
            "description": "My very first shader, it's basic and probably not very well optimized, but I liked it :))",
            "flags": 0,
            "hasliked": 0,
            "id": "ddlXDs",
            "likes": 10,
            "name": "UlaVa",
            "published": 3,
            "tags": [
                "uv",
                "colorful",
                "color",
                "rainbow"
            ],
            "usePreview": 0,
            "username": "ProceduralFish",
            "viewed": 190
        },
        "renderpass": [
            {
                "code": "float shape(vec2 fragmentPosition,float radius,vec2 realPosition){\n    \n    return step(radius/fragmentPosition.x/fragmentPosition.y,length(fragmentPosition-realPosition));\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 fragmentPosition=fragCoord/min(iResolution.y,iResolution.x);\n    \n    float circleRadius=.04;\n    \n    float frequency=1.;\n    float range=sin(iTime)*4.+6.;\n    vec2 center=vec2(.7,.5);\n    \n    //vec2 circlePosition=iMouse.xy/min(iResolution.y,iResolution.x);\n    vec2 circlePosition=vec2((sin(iTime*frequency)/range)+center.x,(cos(iTime*frequency)/range)+center.y);\n    \n    vec3 color=vec3(shape(fragmentPosition,circleRadius,circlePosition));\n    \n    if(length(color)==0.){\n        color=vec3(vec2(fragCoord/iResolution.xy),sin(iTime)*.3+.7);\n        \n    }\n    else{\n        color=vec3(sin(iTime)*.3+.7,vec2(fragCoord/iResolution.xy));\n    }\n    \n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}