{
    "Shader": {
        "info": {
            "date": "1543562180",
            "description": "rectangle",
            "flags": 0,
            "hasliked": 0,
            "id": "4lGfRd",
            "likes": 2,
            "name": "rectangle shape",
            "published": 3,
            "tags": [
                "rectangle"
            ],
            "usePreview": 0,
            "username": "dilip019",
            "viewed": 451
        },
        "renderpass": [
            {
                "code": " \n#define MinRadius 0.25\n#define MaxRadius 0.50\nvec3 red = vec3(1.0,0.0,0.0);\nvec3 white = vec3(1.0,1.0,1.0);\nvec3 brown = vec3(210.0,105.0,30.0)/255.0;\nvec4 ract(vec2 uv,vec3 color){\n    if(uv.x < 0.8 && uv.x > 0.2 && uv.y < 0.8 && uv.y > 0.2 )\n        return vec4(color,1.0);\n    else\n        return vec4(color,0.0);\n}\nvec4 ract(vec2 uv,vec2 center ,float width,float height,\n          vec3 color){\n    \n    float xMin = center.x - width*0.5;\n    float xMax = center.x + width*0.5;\n    float yMin = center.y - height*0.5;\n    float yMax = center.y + height*0.5;\n    \n    \n    if(uv.x < xMax && uv.x > xMin && uv.y < yMax && uv.y > yMin )\n        return vec4(color,1.0);\n    else\n        return vec4(0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord.xy/iResolution.xy;\n    float ratioFactor =   iResolution.x/iResolution.y;\n    uv.x *= ratioFactor;\n     \n    vec2 center  = vec2(0.5*iResolution.x/iResolution.y,0.5);\n    float variation = abs(sin(iTime));\n    float radius = MinRadius +(MaxRadius-MinRadius)*variation;\n    float  dist  =radius - length(center - uv) ;\n    vec4 backGround = vec4(0.0,.80,.60,1.0);\n       \n    vec4 ract1 = ract(uv,vec2(center.x,center.y-0.1),0.4,0.1,red);\n    vec4 ract2 = ract(uv,center,0.4,0.1,white);\n    vec4 ract3 = ract(uv,vec2(center.x,center.y+0.1),0.4,0.1,brown);\n    vec4 ract4 = ract(uv,vec2(center.x,center.y+0.1),0.4,0.1,brown);\n     \n     \n    vec4 final = ract1 + ract2+ ract3;\n    \n    \n    fragColor = mix(backGround,final,final.a) ;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}