{
    "Shader": {
        "info": {
            "date": "1673266808",
            "description": "segment",
            "flags": 0,
            "hasliked": 0,
            "id": "dt2GDh",
            "likes": 4,
            "name": "circle segment",
            "published": 3,
            "tags": [
                "circle",
                "segment"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 221
        },
        "renderpass": [
            {
                "code": "float f_n_dist_segment(\n    vec2 o, \n    float n_ang_nor, \n    float n_radius_start, \n    float n_radius_end\n){\n    float n_tau = 6.28318530;\n    //float n_ang_nor_current = (atan(o.x, o.y))/n_tau));\n    float n_ang_nor_current = fract(((atan(o.y, o.x)+(n_tau/2.))/n_tau)+0.5);\n    float n_an = min(n_ang_nor, n_ang_nor_current);\n    n_an = n_ang_nor_current;\n    float n_len = length(o);\n    float n_radius = 0.5;\n    n_radius = max(n_len, n_radius_start);\n    n_radius = min(n_radius, n_radius_end);\n    vec2 o_p = vec2(\n        cos(n_an*n_tau)*n_radius,\n        sin(n_an*n_tau)*n_radius\n    );\n    vec2 o_pstart = vec2(\n        cos(0.*n_tau)*n_radius,\n        sin(0.*n_tau)*n_radius\n    );\n    vec2 o_pend = vec2(\n        cos(n_ang_nor*n_tau)*n_radius,\n        sin(n_ang_nor*n_tau)*n_radius\n    );\n    float n_len_start = length(o_pstart-o);\n    float n_len_end = length(o_pend-o);\n    \n    \n    float n_dist = length(o_p-o);\n    if(n_ang_nor_current > n_ang_nor){\n        return min(n_len_start, n_len_end);\n    }\n    return n_dist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //needed for anti aliasing ?\n    float n_ratio_1to_iresx = 1./ iResolution.x;\n    \n    vec2 o_trn_fc_nor = fragCoord.xy / iResolution.xy;\n    vec2 o_trn_mo_nor = iMouse.xy / iResolution.xy;\n    \n    float n_ratio_x_to_y = iResolution.x / iResolution.y; \n    \n    vec2 o_trn_fc_nor_offset = (o_trn_fc_nor - vec2(0.5))*vec2(n_ratio_x_to_y, 1.);\n    vec2 o_trn_mo_nor_offset = (o_trn_mo_nor - vec2(0.5))*vec2(n_ratio_x_to_y, 1.);\n    o_trn_fc_nor_offset*=2.5;\n\n    float n_its = 50.;\n    float n_tau = 6.2831;\n    float n_dist_prod = 1.;\n    float n_dist_prod2 = 1.;\n    float n_dist_min = 1.;\n    float n_it_nor_dmin = 0.;\n    \n    float n_radiu_start = sin(iTime)*0.5+0.5;\n    float n_radiu_end = 1.;//fract(n_radiu_start+0.5);\n    \n    float n_dist_segment = f_n_dist_segment(\n        o_trn_fc_nor_offset, \n        sin(iTime)*.5+0.5, \n        n_radiu_start,\n        n_radiu_end\n    );\n    \n    fragColor = vec4(vec3(n_dist_segment), 1.);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}