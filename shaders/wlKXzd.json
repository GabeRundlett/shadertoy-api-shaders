{
    "Shader": {
        "info": {
            "date": "1588323531",
            "description": "Waving swedish flag",
            "flags": 0,
            "hasliked": 0,
            "id": "wlKXzd",
            "likes": 1,
            "name": "Shader2_DelaVega",
            "published": 3,
            "tags": [
                "midterms"
            ],
            "usePreview": 0,
            "username": "zerotojiro",
            "viewed": 298
        },
        "renderpass": [
            {
                "code": "float rect (vec2 uv, vec2 pos, vec2 size)\n{\n\tfloat value = step(pos.x - size.x/2.,uv.x) - step(pos.x + size.x/2.,uv.x);\n    return value *= step(pos.y - size.y/2.,uv.y) - step(pos.y + size.y/2.,uv.y);\n}\n\nvec2 hash( vec2 p ) {                       \n    p = vec2( dot(p,vec2(127.1,311.7)),\n              dot(p,vec2(269.5,183.3)) );\n    return -1. + 2.*fract(sin(p+20.)*53758.5453123);\n}\n\nfloat noise( in vec2 p ) {\n    vec2 i = floor((p)), f = fract((p));\n    vec2 u = f*f*(3.-2.*f);\n    return mix( mix( dot( hash( i + vec2(0.,0.) ), f - vec2(0.,0.) ), \n                     dot( hash( i + vec2(1.,0.) ), f - vec2(1.,0.) ), u.x),\n                mix( dot( hash( i + vec2(0.,1.) ), f - vec2(0.,1.) ), \n                     dot( hash( i + vec2(1.,1.) ), f - vec2(1.,1.) ), u.x), u.y);\n}\n\n\nfloat distLine(vec2 p, vec2 a, vec2 b){\n\tvec2 pa = p-a;\n    vec2 ba = b-a;\n    float t = clamp(dot(pa, ba)/dot(ba, ba),0., 1.);\n    return length(pa-ba*t);\n}\n\nfloat line(vec2 p, vec2 a, vec2 b){\n\tfloat d = distLine(p,a,b);\n    float m = 0.9*smoothstep(.02,.01, d);\n    \n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float ratio = iResolution.x / iResolution.y;\n    \n    uv.x *= ratio;\n    \n    uv.y+=noise((uv*.5) + iTime)*.1;\n    uv.x+=noise((uv*.3) + iTime)*.3;\n    \n    vec2 basePos = vec2(.5*ratio, .5);\n    vec2 rect1Pos = vec2(.38*ratio, .5);\n    vec2 rect2Pos = vec2(.5*ratio, .5);\n    \n    vec3 base = vec3(rect(uv, basePos, vec2(1.4, .8)));\n    vec3 rect1 = vec3(rect(uv, rect1Pos, vec2(.15, .8)));\n    vec3 rect2 = vec3(rect(uv, rect2Pos, vec2(1.4, .15 )));\n    float m = line(uv,vec2(-.1,-.1),vec2(.25,.15));\n    m += line(uv,vec2(-.1,1.1),vec2(.25,.85));\n\n    vec3 col = vec3(.0941, .1725, .3215);\n    col = mix(col, vec3(1.0), m);\n    col = mix(col, vec3(0., .2941, .5294), base);\n    col = mix(col, vec3(1.0, 0.8196, 0.), rect1);\n    col = mix(col, vec3(1.0, 0.8196, 0.), rect2);\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}