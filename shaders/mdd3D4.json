{
    "Shader": {
        "info": {
            "date": "1677294095",
            "description": "Please:\n- Click buffer A\n- Double click the pause button on the soundcloud link\n- Click reset on the shader\n- Rave ðŸ˜Ž\n",
            "flags": 96,
            "hasliked": 0,
            "id": "mdd3D4",
            "likes": 34,
            "name": "Blobby Visualiser",
            "published": 3,
            "tags": [
                "audio",
                "audiovisual",
                "rave",
                "audi",
                "aldi"
            ],
            "usePreview": 1,
            "username": "SnoopethDuckDuck",
            "viewed": 607
        },
        "renderpass": [
            {
                "code": "#define pi 3.14159\n#define t iTime\n#define Dir(a) vec2(cos(a), sin(a))\n#define Rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nvoid mainImage( out vec4 fragColor, in vec2 px )\n{\n    float vol = texture(iChannel1, vec2(0)).g; \n    \n    vec2 uv = (px - 0.5 * iResolution.xy) / iResolution.y;\n    uv.y += 0.02 * cos(t);\n    uv *= 1. - 0.4 * vol;\n    vec2 o = 0.05 * uv + vec2(0, 0.015);\n    \n    float d0 = exp(mix(.3,.5,vol)-mix(14., 4., vol) * sqrt(abs(0.25-length(uv))));\n    vec2 uv2 = uv;\n    vec3 tx = vec3(0);\n    float n = 8.;\n    for (float i = 0.; i < n; i++) {\n        float io = 2. * pi * i / n;\n        uv2 *= Rot(-0.01 * t + io);\n        vec3 tx2 = vec3(texture(iChannel0, uv2 - 0.15 * t - o).r,\n                        texture(iChannel0, uv2 - 0.15 * t    ).r,\n                        texture(iChannel0, uv2 - 0.15 * t + o).r);\n        //vec3 tx3 = vec3(texture(iChannel2, 0.25*(uv2 - 0.15 * t) - o).r,\n        //                texture(iChannel2, 0.25*(uv2 - 0.15 * t)    ).r,\n        //                texture(iChannel2, 0.25*(uv2 - 0.15 * t) + o).r);\n        uv2 *= Rot(-0.01 * t - io);       \n        tx2 = pow(tx2, vec3(8));\n        //tx3 = pow(tx3, vec3(8));\n        //tx2 = mix(tx2, tx3, clamp(uv.y + 0.5, 0., 1.));\n        tx += d0 * tx2;\n        \n        uv2 = mix(uv2 * 1.2 - 0.5 * vol, \n                  uv + 0.8 * Dir(0.1 * d0 - 0.4 * t) + vol, \n                  vol);\n    }\n \n    vec3 d = abs(0.04 * vol + 1.23 - tanh(0.5 * t) + tx - length(uv));\n    \n    vec3 col1 = vec3(1, .8, .4);\n    vec3 col2 = vec3(0.75, .8, .4 + vol);\n    vec3 col = mix(col1, col2, 2.5 * d) * exp(0.45 - 3. * sqrt(d));\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Other song:\n// https://soundcloud.com/alias_hallow/disconnect?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing\n\n// More experiments:\n// https://www.shadertoy.com/view/dscGDM\n\nfloat getVol(float samples) {\n    float v = 0.;\n    for (float i = 0.; i < samples; i++) \n        v += texture(iChannel1, vec2((i + 0.5)/samples, 0.05)).x;\n    return v / samples;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy);\n    \n    vec4 ch0 = texture(iChannel0, uv);\n    float ch1 = 0.;\n    \n    // Number of samples in either direction\n    float n = 5.;\n    \n    // Sample spacing (value chosen because it looks good)\n    float s = 0.003;  //0.003 with n=5.\n    \n    // Average of samples, ch1\n    for (float i = -n; i <= n; i++) \n        ch1 = max(ch1, texture(iChannel1, vec2(uv.x + s * i, 0.25)).x);\n        //ch1 += log(1.+texture(iChannel1, vec2(uv.x + s * i, 0.25)).x);\n    //ch1 /= 2.*n + 1.;\n    \n    // Alpha scales with uv.x, since bassy tones are more prevalent\n    float r = mix(ch0.r, ch1, 0.4);\n    float g = mix(ch0.g, getVol(50.), 0.02);\n    float a = mix(ch0.a, ch1 * (1. + 0.55 * uv.x), 0.4);\n    \n    vec3 col = vec3(r, g, step(uv.y - a + 0.1, 0.008));\n\n    fragColor = vec4(col, a);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "musicstream",
                        "id": 32502,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/iamhajimari/decompress?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}