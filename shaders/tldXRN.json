{
    "Shader": {
        "info": {
            "date": "1580563275",
            "description": "This is a description of a shader.",
            "flags": 32,
            "hasliked": 0,
            "id": "tldXRN",
            "likes": 10,
            "name": "Day 44",
            "published": 3,
            "tags": [
                "mdtmjvm"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 383
        },
        "renderpass": [
            {
                "code": "// For more buffer feedback check out wyatt, michael0884, Flexi\n// This particular one is inspired by wyatt's zoomy stuff\n\nvoid mainImage(out vec4 C, in vec2 U )\n{\n    C = T(U);\n    C = abs(sin(C*0.5 + 1.7 + 1.2*pow(length( (U )/R - 0.5),3.)));\n    C = smoothstep(0.,1.,C);\n    C = clamp(C, 0., 1.);\n    C = pow(C, vec4(2.1)) + 0.0;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\n#define init abs(0.4*sin((rot(iTime*2.)*(U - 0.5*R)).xyxy*0.2))\n\n#define rot(x) mat2(cos(x),-sin(x),sin(x),cos(x))\n\n\nfloat blur(in vec2 p){\n    #define bcomp x\n    vec3 e = vec3(1, 0, -1);\n    vec2 px = 1./iResolution.xy;\n\tfloat res = 0.0;\n\tres += T(p + e.xx*px ).bcomp + T(p + e.xz*px ).bcomp + T(p + e.zx*px ).bcomp + T(p + e.zz*px ).bcomp;\n    res += (T(p + e.xy*px ).bcomp + T(p + e.yx*px ).bcomp + T(p + e.yz*px ).bcomp + T(p + e.zy*px ).bcomp)*2.;\n\tres += T(p + e.yy*px ).bcomp*4.;\n    return res/16.;\n}\n\n\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec4 n = T(U+vec2(0,1)), e = T(U+vec2(1,0)), s = T(U-vec2(0,1)), w = T(U-vec2(1,0));\n    \n    U -= 0.5*R;\n    U *= 0.999;\n    \n    U *= rot(0.001);\n    U *= 1. - dot(U/R,U/R)*0.003;\n    U += 0.5*R;\n\n    U -= grad(x)*1.2;\n    U -= grad(w)*4.;\n    U += grad(y)*0.2;\n    C = T(U);\n    \n    C.x += grad(y).x;\n    C.y += div(x)*0.1*length((U)/R-0.5);\n\tC.xy -= blur(U)*0.01;    \n    \n    C = mix(C, init, 0.004);\n    \n    if(iMouse.z > 0.){\n        float r = 0.1;\n        float dMouse = length((iMouse.xy - U.xy)/R.y );\n        C = mix(C, vec4(1,1,1,1)*1., smoothstep(r,r*0.04,dMouse)*0.1);\n    \n    }\n    \n    if(iFrame == 0) {\n    \tC = init;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define C0 iChannel0\n#define C1 iChannel1\n#define C2 iChannel2\n#define C3 iChannel3\n\n#define R (iResolution.xy)\n\n#define T(u) texture(iChannel0, (u)/R)\n\n\n#define grad(i) 0.25*vec2(w.i-e.i,s.i-n.i)\n#define div(i) 0.25*(n.i-s.i+e.i-w.i)\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}