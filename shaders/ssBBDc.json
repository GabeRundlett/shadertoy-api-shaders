{
    "Shader": {
        "info": {
            "date": "1647252443",
            "description": "flow flow",
            "flags": 0,
            "hasliked": 0,
            "id": "ssBBDc",
            "likes": 4,
            "name": "flow flow",
            "published": 3,
            "tags": [
                "flowflow"
            ],
            "usePreview": 0,
            "username": "zsjasper",
            "viewed": 265
        },
        "renderpass": [
            {
                "code": "const float brightness = 40.;\nconst float speed = .3;\nconst int rings = 1024;\nconst float blur = .3;\nconst float offset = 6.;\nconst float peaks = 10.;\nconst float peakStrength = .5;\nconst float twisting = 1.;\n\nfloat rectSin(float p){\n\treturn sin(p) / 2. + .5;\n}\n\nfloat circle(float r, vec2 pos){\n\treturn abs(r - length(pos));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 nuv =  uv * vec2(2) - vec2(1);\n    nuv.x /= (iResolution.y / iResolution.x);\n\n    vec3 col = vec3(0);\n    int iter = rings;\n    for(int i = 0; i < iter; i++){\n        float prog = float(i) / float(iter);\n        float angle = atan(nuv.x,nuv.y);\n        float radius = pow(rectSin(iTime * speed + prog * offset),2.);\n        radius += pow(radius,.3) * abs(rectSin(iTime / 1. + (angle + rectSin(iTime - radius) * twisting) * peaks)) * peakStrength;\n        vec3 ringColor = vec3(\n            (1.5 - prog - radius) / (radius + .1),\n            rectSin(radius) / (radius + .1),\n            pow(prog,2.) + pow(1. - prog,1.));\n        ringColor += ringColor * smoothstep(0.1,1.,pow(mod(prog , .25) * 4.,9.)) * radius;\n        \n        col +=  ringColor * smoothstep(1.,0.,circle(radius,nuv) / blur);\n    }\n    col /= sqrt(length(col));\n    col /= (float(rings) / log(1. / blur));\n    col = col * brightness;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}