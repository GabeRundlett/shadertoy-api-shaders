{
    "Shader": {
        "info": {
            "date": "1649205715",
            "description": "playing around with stuff.  Doesn't work the way I'd like.  Too noisy.",
            "flags": 34,
            "hasliked": 0,
            "id": "7ljcR1",
            "likes": 4,
            "name": "contour play",
            "published": 3,
            "tags": [
                "experiment",
                "effect",
                "contour"
            ],
            "usePreview": 0,
            "username": "mds2",
            "viewed": 433
        },
        "renderpass": [
            {
                "code": "vec2 uvFromXy(in vec2 xy) {\n  return xy/iResolution.xy;\n}\n\nfloat getVal(in vec2 xy) {\n  return dot(texture(iChannel0, uvFromXy(xy)).rgb, vec3(1.0));\n}\n\nvec2 getGrad(in vec2 xy) {\n  const float h = 3.0;\n  float f = getVal(xy);\n  return vec2(getVal(xy + vec2(h, 0.0)) - f,\n              getVal(xy + vec2(0.0, h)) - f) / h;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float stepSize = 0.2;\n    const float lineWidth = 3.0;\n    float f = getVal(fragCoord);\n    vec2 grad = getGrad(fragCoord);\n    float gradMag = length(grad);\n    \n    float nearest = floor((f + 0.5 * stepSize)/stepSize) * stepSize;\n    \n    float pixToLine = abs(f - nearest)/gradMag;\n    \n    float lineNess = 1.0 - max(0.0, min(1.0, pixToLine - lineWidth * 0.5));\n    \n    // lineNess *= min(1.0, max(3.0 - f, 0.0) / 3.0);\n    lineNess *= step(0.0125, gradMag);\n    \n    vec3 col = vec3(1.0 - lineNess);\n    \n    vec3 rgbCol = texture(iChannel0, fragCoord/iResolution.xy).rgb;\n    rgbCol = rgbCol + vec3(0.2) - mod(rgbCol, vec3(0.2));\n    \n    rgbCol = 0.4 + 0.6 * rgbCol;\n\n    // Output to screen\n    fragColor = vec4(col * rgbCol,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec3 getColor(in vec2 fragCoord) {\n  vec2 uv = fragCoord.xy/iResolution.xy;\n  return texture(iChannel0, uv).rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec3 color = 0.2 * ( getColor(fragCoord) +\n    getColor(fragCoord + vec2(1.0, 0.0)) +\n    getColor(fragCoord + vec2(0.0, 1.0)) +\n    getColor(fragCoord - vec2(1.0, 0.0)) +\n    getColor(fragCoord - vec2(0.0, 1.0)));\n    \n  fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec3 getColor(in vec2 fragCoord) {\n  vec2 uv = fragCoord.xy/iResolution.xy;\n  return texture(iChannel0, uv).rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec3 color = 0.2 * ( getColor(fragCoord) +\n    getColor(fragCoord + vec2(1.0, 0.0)) +\n    getColor(fragCoord + vec2(0.0, 1.0)) +\n    getColor(fragCoord - vec2(1.0, 0.0)) +\n    getColor(fragCoord - vec2(0.0, 1.0)));\n    \n  fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec3 getColor(in vec2 fragCoord) {\n  vec2 uv = fragCoord.xy/iResolution.xy;\n  return texture(iChannel0, uv).rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec3 color = 0.2 * ( getColor(fragCoord) +\n    getColor(fragCoord + vec2(1.0, 0.0)) +\n    getColor(fragCoord + vec2(0.0, 1.0)) +\n    getColor(fragCoord - vec2(1.0, 0.0)) +\n    getColor(fragCoord - vec2(0.0, 1.0)));\n    \n  fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec3 getColor(in vec2 fragCoord) {\n  vec2 uv = fragCoord.xy/iResolution.xy;\n  return texture(iChannel0, uv).rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec3 color = 0.2 * ( getColor(fragCoord) +\n    getColor(fragCoord + vec2(1.0, 0.0)) +\n    getColor(fragCoord + vec2(0.0, 1.0)) +\n    getColor(fragCoord - vec2(1.0, 0.0)) +\n    getColor(fragCoord - vec2(0.0, 1.0)));\n    \n  fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}