{
    "Shader": {
        "info": {
            "date": "1577049036",
            "description": "See main -->\nRequires Speedup : \n[url]JAVASCRIPT: H=location.host;E=(H?window:opener).Effect;P=E.prototype;if(!E.P)E.P=P.Paint;P.Paint=function(...A){for(i=0;i<20;i++)E.P.apply(this,A);};if(!H)close();[/url]",
            "flags": 32,
            "hasliked": 0,
            "id": "wtc3zf",
            "likes": 12,
            "name": "Low Mach Fluid",
            "published": 3,
            "tags": [
                "fluid"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 584
        },
        "renderpass": [
            {
                "code": "/*\n\tBenchmark replica of \"Multistep Fluid Simulation\" by trirop\n\t\n\thttps://www.shadertoy.com/view/MdSczK\n\n\tBut using the speedup hack instead of \n\ta precomputed convolution. \n\n\tThe trick is to only advect every 20 frames\n\tbecause advection is the largest source of loss.\n\tValues of velocity are 20x the Mach number\n\t(20 because that's what trirop did)\n\n\t\n*/\n\nMain {\n    Me \n    Q = Q.wwww+0.*max(vec4(Q.z,0,-3.*Q.z,1),0.);\n    Ball Q = vec4(0.3,0.5,0.7,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define Mach_Number .2\n#define Frames 20\n\n#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel1,(U)/R)\n\n#define Main void mainImage( out vec4 Q, in vec2 U )\n\n#define Me Q = A(U);\n\n#define Neighbors vec4 n = A(U+vec2(0,1)), e = A(U+vec2(1,0)), s = A(U-vec2(0,1)), w = A(U-vec2(1,0));\n\n#define Mean 0.25*(n+e+s+w)\n\n#define Divergence 0.25*(n.y-s.y+e.x-w.x)\n\n#define Gradient 0.25*vec2(e.z-w.z,n.z-s.z)\n\n#define Ball if ((iMouse.z<1.&&length(U-vec2(.2,.5)*R)<7.)||(iMouse.z>0.&&length(U-iMouse.xy)<7.)) \n\n#define Init if (iFrame < 1) \n\n#define Border if (U.x<1.||R.x-U.x<1.||U.y<1.||R.y-U.y<1.)\n\n#define Mouse if (iMouse.z>0.&&length(U-iMouse.xy)<10.)",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "Main {\n    Me\n    Neighbors\n    Q.xy -= Gradient;\n    \n    Ball Q.xyw *= 0.;\n    \n    \n    Init Q = vec4(Mach_Number*float(Frames),0,0,0);\n    \n    Border {\n    \tQ.x = Mach_Number*float(Frames);\n        Q.y = 0.;\n        Q.w = step(mod(U.y+2.,16.),4.);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main {\n    Me\n    Neighbors\n    Q.z -= Divergence;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main {\n    Neighbors\n    Q = Mean;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main {\n    vec2 v = vec2(0);\n    v = B(U).xy/float(Frames);\n    Q.xyz = A(U-v).xyz;\n    if(iFrame%Frames==0) {\n        for (int i = 0; i < Frames; i++) \n           U -= A(U).xy/float(Frames);\n    }\n    Q.w = A(U).w;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}