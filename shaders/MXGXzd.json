{
    "Shader": {
        "info": {
            "date": "1720360569",
            "description": "originals sources https://glslsandbox.com/e#94155.0 https://glslsandbox.com/e#93973.0",
            "flags": 0,
            "hasliked": 0,
            "id": "MXGXzd",
            "likes": 4,
            "name": "rotation spiral",
            "published": 3,
            "tags": [
                "spiral",
                "rotate",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 246
        },
        "renderpass": [
            {
                "code": "\n\nuniform float time;\nuniform vec2  resolution;\nuniform float zoom;\n#define time iTime\n#define resolution iResolution.xy\n#define PI 3.14\n\nmat2 rotate3d(float angle)\n{\n    return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\nfloat random(vec2 pos) {\n\treturn fract(1.0 * sin(pos.y + fract(100.0 * sin(pos.x))));\n}\n\nfloat noise(vec2 pos) {\n\tvec2 i = floor(pos);\n\tvec2 f = fract(pos);\n\tfloat a = random(i + vec2(0.0, 0.0));\n\tfloat b = random(i + vec2(1.0, 0.0));\n\tfloat c = random(i + vec2(0.0, 1.0));\n\tfloat d = random(i + vec2(1.0, 1.0));\n\tvec2 u = f * f * (3.0 - 2.0 * f);\n\treturn mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\n\nfloat fbm(vec2 pos) {\n\tfloat v = 0.0;\n\tfloat a = 0.5;\n\tvec2 shift = vec2(100.0);\n\tmat2 rot = mat2(cos(0.15), sin(0.15), -sin(0.25), cos(0.5));\n\tfor (int i=0; i < 12; i++) {\n\t\tv += a * noise(pos);\n\t\tpos = rot * pos * 2.0 + shift;\n\t\ta *= 0.55;\n\t}\n\treturn v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\nvec2 p = (gl_FragCoord.xy * 2.0 - resolution) / min(resolution.x, resolution.y);\n    p = rotate3d((time * 100.0) * PI) * p;\n    vec2 pos = (gl_FragCoord.xy - resolution) / min(resolution.x, resolution.y);\n\n\tfloat f = fbm(pos * 2.0 * vec2(fbm(pos - (time / 8.0)), fbm(pos / 2.0 - (time / 8.0))));\n\t\n\tvec3 colour = vec3(0.00, 0.2, 0.8);\n\t\n\tcolour = (f * 6.5) * colour;\n    float t;\n    if (sin(time) == 1.0)\n        t = 0.075 / abs(1.0 - length(p/2.*1.1+0.3*sin(iTime)));\n    else\n        t = 0.075*1.1+0.3*cos(iTime) / abs(0.5- length(p*1.1+0.3*cos(iTime)));\n    fragColor = vec4(vec3(t)  * vec3(0.05*(sin(time)+2.0), p.y*0.5, 10.0), 1.0);\n    fragColor+=vec4(colour,1.);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}