{
    "Shader": {
        "info": {
            "date": "1571332891",
            "description": "Simple raymarched scene",
            "flags": 0,
            "hasliked": 0,
            "id": "3stSzr",
            "likes": 2,
            "name": "Shadertober 17 Ornament -jaburns",
            "published": 3,
            "tags": [
                "raymarch",
                "shadertober"
            ],
            "usePreview": 0,
            "username": "jaburns",
            "viewed": 367
        },
        "renderpass": [
            {
                "code": "#define EPS 0.001\n#define PI  3.14159265358979\n\n#define BALL_COLOR (vec3(197.,76.,130.)/255.)\n#define CAP_COLOR vec3(1,1,1)\n\nfloat sdCappedCylinder( vec3 p, float h, float r )\n{\n  vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(h,r);\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nvec2 rot(vec2 p, float t)\n{\n    float s = sin(t);\n    float c = cos(t);\n    return mat2(c,s,-s,c) * p;\n}\n\nfloat ball(vec3 p)\n{\n    float sphere = length(p) - 2.;\n    float disp = .03*sin(p.y*10. + 4.*atan(p.z, p.x));\n    return sphere + disp;\n}\n\nfloat holder(vec3 p)\n{\n    return min(\n        sdCappedCylinder(p + vec3(0,-2,0), .4, .2),\n        sdCappedCylinder(p + vec3(0,-20,0), .04, 20.)\n    );\n}\n\nvec4 sdf(vec3 p)\n{\n    float theta = .2*sin(iTime);\n    p.xy = rot(p.xy, theta);\n    p.xy += 10.*vec2(sin(theta), cos(theta));\n    p.y -= 10.;\n    \n    float a = ball(p);\n    float c = holder(p);\n    \n    if (a < c) return vec4(BALL_COLOR, a);\n    return vec4(CAP_COLOR, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 screenPos = fragCoord/iResolution.y - vec2(.5 * iResolution.x/iResolution.y, .5);\n\n    vec3 ro = vec3(0,0,10);\n    vec3 rd = normalize(vec3(screenPos,-1));\n    \n    ro.yz = rot(ro.yz, -.3);\n    rd.yz = rot(rd.yz, -.3);\n    \n    ro.xz = rot(ro.xz, .2*iTime);\n    rd.xz = rot(rd.xz, .2*iTime);\n\n    vec4 eval = vec4(0,0,0,1);\n    float totalDist = 0.;\n    for (int i = 0; i < 99; ++i) {\n        eval = sdf(ro);\n        if (eval.w < EPS || eval.w > 30.) break;\n        ro += eval.w * rd;\n    }\n    \n    if (eval.w >= EPS) {\n        fragColor = vec4(texture(iChannel0, rd));\n        return;\n    }\n    \n    vec2 E = vec2(0.,EPS);\n    vec3 normal = normalize(vec3(\n        sdf(ro + E.yxx).w - sdf(ro - E.yxx).w,\n        sdf(ro + E.xyx).w - sdf(ro - E.xyx).w,\n        sdf(ro + E.xxy).w - sdf(ro - E.xxy).w));\n    \n    rd = reflect(rd, normal);\n    \n    float lightness = .7 + .3*dot(normal, normalize(vec3(0,1,0)));\n    \n    fragColor = vec4(lightness * texture(iChannel0, rd) * eval);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 22,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}