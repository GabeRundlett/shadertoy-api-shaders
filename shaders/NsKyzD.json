{
    "Shader": {
        "info": {
            "date": "1654541851",
            "description": "Floor undergo a daily cycle of temperature, plus the yearly cycle of seasons, plus the longer climatologic variations  ( Milankovic , etc ).\nThe heat diffusion propagates the filtered information in depth, which can be measured to read the past.\n",
            "flags": 32,
            "hasliked": 0,
            "id": "NsKyzD",
            "likes": 7,
            "name": "thermochronology",
            "published": 3,
            "tags": [
                "simulation",
                "earth",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 301
        },
        "renderpass": [
            {
                "code": "// reference: https://en.wikipedia.org/wiki/Thermochronology\n// variant of https://shadertoy.com/view/NdVyzW\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 U = u/R;\n    O = T(u);                     // red = hot, blue = cold\n    O.b = 1.-O.r;\n                                  // temperature curve with height\n    float v = .5 + (O.r-.5) / exp(4.*(U.y-1.)) - U.x; // amplifying the signal with depth\n    O = mix(O, vec4(0,1,0,1), smoothstep(1.5,0., abs(v)/fwidth(v)) ); \n    \n    if ( int(u)==int(R)/2 ) O++;  // ref axis\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R    iResolution.xy\n#define T(U) texelFetch( iChannel0, ivec2(U), 0 )\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "#define S(n) ( .5+.5*sin(n*iTime) )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 U = u/R;\n    O = textureLod(iChannel0, U,floor(log2(R.y)-6.) ); // diffusion\n        if ( U.y>.95 ) O.r = (  S(10.)                 // daily temperature variations\n                          + S( 1.)                     // \"seasonal\" temperature variations\n                          + S( .1) ) /3.;              // \"climatologic\" temperature variations\n    if (iFrame<1) O.r=.5;                              // initialization\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}