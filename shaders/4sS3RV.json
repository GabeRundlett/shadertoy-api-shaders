{
    "Shader": {
        "info": {
            "date": "1394307526",
            "description": "Experiment using a 3D Voronoi distance field.",
            "flags": 0,
            "hasliked": 0,
            "id": "4sS3RV",
            "likes": 26,
            "name": "Voronoi Fireball",
            "published": 3,
            "tags": [
                "voronoi",
                "voronoifireball"
            ],
            "usePreview": 1,
            "username": "Dave_Hoskins",
            "viewed": 3802
        },
        "renderpass": [
            {
                "code": "// Voronoi Fireball\n// By David Hoskins\n\nfloat gTime = 0.0;\n\n//----------------------------------------------------------------------\nvec2 Rotate2D(vec2 p, float a)\n{\n\tfloat si = sin(a);\n\tfloat co = cos(a);\n\treturn mat2(si, co, -co, si) * p;\n}\n\n//----------------------------------------------------------------------\nfloat Noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n\tvec2 rg = textureLod( iChannel0, (uv+ 0.5)/256.0, 0.0 ).yx;\n\treturn mix( rg.x, rg.y, f.z );\n}\n\n//--------------------------------------------------------------------------\nfloat Voronoi(in vec3 p)\n{\n\tfloat d = 1.0e10;\n\tfor (int zo = -1; zo <= 1; zo++)\n\t{\n\t\tfor (int xo = -1; xo <= 1; xo++)\n\t\t{\n\t\t\tfor (int yo = -1; yo <= 1; yo++)\n\t\t\t{\n\t\t\t\tvec3 tp = floor(p) + vec3(xo, yo, zo);\n\t\t\t\td = min(d, length(p - tp - Noise(p)));\n\t\t\t}\n\t\t}\n\t}\n\treturn .72 - d*d*d;\n}\n\n//--------------------------------------------------------------------------\nvec3 FlameColour(float f)\n{\n\tif (f > .999999) return vec3(1.0);\n\treturn  min(vec3(f*5.0, f*f, f*f*.05), 1.0);\n}\n\n//--------------------------------------------------------------------------\nvec4 Map(in vec3 p)\n{\n\tvec3 col = vec3(0.0);\n\tfloat di = length(p)-8.0;\n\n\tif (di > 0.0)\n\t{\n\t\tdi -= Noise(p * 1.5 + vec3(0.0, 0.0, gTime * 1.5)) * 8.0 + cos(gTime * .5) * 4.0 + 6.0;\n\t\t\n\t\tvec3 loops = p + vec3(0.0, 0.0, gTime * 5.0);\n\t\tloops.xy = Rotate2D(loops.xy, di * .15 - gTime * .15);\n\t\t\n\t\tfloat h = Voronoi(loops * .2);\n\t\tdi = di + pow(h, 12.0)*500.0;\n\t\tcol = FlameColour(clamp(-di*.13, 0.0, 1.0));\n\t}else\n\t{\n\t\tcol = vec3(1.0);\n\t\tdi *= 20.0;\n\t}\n\treturn vec4(col, -di*.006);\n}\n\n//--------------------------------------------------------------------------\nvec3 Scene(in vec3 rO, in vec3 rD)\n{\n    float t = 10.0;\n\tvec3 p = vec3(0.0);\n\tvec4 sum = vec4(0.0);\n\tfor( int j=0; j < 80; j++ )\n\t{\n\t\tif (sum.a >= 1.0) break;\n\t\tp = rO + t*rD;\n\t\tvec4 res = Map(p);\n\n\t\tres.rgb *= res.a;\n\t\tsum = sum + res * (1.0 - sum.a);\t\n\t\t\n\t\tt += 0.15;\n\t}\n\treturn clamp(sum.xyz, 0.0, 1.0);\n}\n\n//--------------------------------------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tgTime = iTime+11.0;\n\tvec2 uv = (-1.0 + 2.0 * fragCoord.xy / iResolution.xy) * vec2(iResolution.x/iResolution.y,1.0);\n\t\n\tvec3 cameraPos = vec3(0.0, 0.0, -25.0);\n\t//cameraPos.xz = Rotate2D(cameraPos.xz, gTime*.5); // ...Rotate camera if you want\n\n\tvec3 cw = normalize(-cameraPos); \t// Look at 0,0,0 target\n\tvec3 cp = vec3(0.0, 1.0,0.0);\t\t// Y vector\n\tvec3 cu = cross(cw,cp);\t\t\t\t// X vector\n\tvec3 dir = normalize(uv.x*cu + uv.y*cp + 1.3*cw);\n\tvec3 col = Scene(cameraPos, dir);\n\n\tfragColor=vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}