{
    "Shader": {
        "info": {
            "date": "1591296416",
            "description": "Snake-like skin shader",
            "flags": 0,
            "hasliked": 0,
            "id": "tlsyRn",
            "likes": 1,
            "name": "Snakeskin",
            "published": 3,
            "tags": [
                "snakeskin"
            ],
            "usePreview": 0,
            "username": "yacodes",
            "viewed": 276
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265358979323846\n\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\n// Value noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/lsf3WH\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    vec2 u = f*f*(3.0-2.0*f);\n    return mix( mix( random( i + vec2(0.0,0.0) ),\n                     random( i + vec2(1.0,0.0) ), u.x),\n                mix( random( i + vec2(0.0,1.0) ),\n                     random( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nmat2 rotate2d(float angle){\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\n\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x, 0.0, 0.0, _scale.y);\n}\n\nfloat lines(in vec2 pos, float b){\n    float scale = 10.0;\n    pos *= scale;\n    return smoothstep(0.0,\n                    .5+b*.5,\n                    abs((sin(pos.x*3.1415)+b*2.0))*.5);\n}\n\nfloat polygon(in vec2 st, in int edges, in float size) {\n    vec2 _st = st * 2. - 1.;\n    float a = atan(_st.x,_st.y)+PI;\n    float r = (PI*2.)/float(edges);\n    float d = cos(floor(0.5+a/r)*r-a)*length(_st);\n\treturn 1.0-smoothstep(size,size+0.01,d);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 st = fragCoord.xy/iResolution.xy;\n    st.y *= iResolution.y/iResolution.x;\n    vec3 color = vec3(0.);\n    vec2 pos = st.xy*vec2(28.,28.);\n    float pattern = pos.x;\n    pos = rotate2d(noise(pos / 20.) + 5.5 + iTime / 4.) * pos + iTime * 3.;\n    pattern = polygon(fract(pos), 3, noise(pos + iTime) + 0.2);\n    color = mix(color, vec3(0.316,0.635,0.286), pattern * noise(pos * 72.));\n    fragColor = vec4(color, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}