{
    "Shader": {
        "info": {
            "date": "1682208490",
            "description": "Overlapping grids of squares, spinning at different rates",
            "flags": 4,
            "hasliked": 0,
            "id": "mlc3Dn",
            "likes": 0,
            "name": "BathroomFloor BMove",
            "published": 3,
            "tags": [
                "sound",
                "beat"
            ],
            "usePreview": 0,
            "username": "elloskelling",
            "viewed": 156
        },
        "renderpass": [
            {
                "code": "float square(vec2 p, float size)\n{\n    p /= size;\n    vec2 q = mod(p, vec2(1.0));\n    if (q.x < 0.5 && q.y < 0.5) {\n        return 1.0;\n    }\n    return 0.0;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 p = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0;\n    float size = 0.1;\n    float size2 = 0.11;\n    \n    float RV = 1.0;  // radians per second\n    float RV2 = 1.0+0.1*sin(iTime*0.05); // radians per second for second grid\n    \n    float beatThreshold = 0.5;\n    float pulseAmount = 1.75;\n    float pulseTime = 0.1;\n    float pulseWidth = 0.1;\n    float angle = iTime * RV;\n    float angle2 = iTime * RV2;\n    mat2 rot = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    mat2 rot2 = mat2(cos(angle2), -sin(angle2), sin(angle2), cos(angle2));\n    vec3 color = vec3(0.0);\n    vec2 q = vec2(p.x, p.y);\n    vec2 q2 = vec2(p.x+0.1*cos(iTime*0.1), p.y+0.1*sin(iTime*0.1));\n    \n    q = rot * q;\n    q2 = rot2 * q2;\n    q = mod(q, vec2(size, size));\n    q2 = mod(q2, vec2(size2, size2));\n\n\tfloat freqs[6];\n\t//Sound\n\tfreqs[0] = texture( iChannel0, vec2( 0.01, 0.25 ) ).x;\n\tfreqs[1] = texture( iChannel0, vec2( 0.03, 0.25 ) ).x;\n\tfreqs[2] = texture( iChannel0, vec2( 0.05, 0.25 ) ).x;\n\tfreqs[3] = texture( iChannel0, vec2( 0.07, 0.25 ) ).x;\n\tfreqs[4] = texture( iChannel0, vec2( 0.15, 0.25 ) ).x;\n\tfreqs[5] = texture( iChannel0, vec2( 0.30, 0.25 ) ).x;\n\n\n    float beat = 0.25*freqs[0]*freqs[0]\n                +0.25*freqs[1]*freqs[1]\n                +0.25*freqs[2]*freqs[2]\n                +0.25*freqs[3]*freqs[3];\n    beat = sqrt(beat);\n    \n    float highs = sqrt(0.5*(freqs[4]*freqs[4]+freqs[5]*freqs[5]));\n    \n    size *= mix(1.2, pulseAmount, beat);\n    size2 *= mix(1.1, pulseAmount, highs);\n\n    if (square(q, size) > 0.5) {\n        color = vec3(0.6, 0.6, 0.6);\n    }\n    \n    if (square(q2, size2) > 0.5) {\n        if (square(q, size) > 0.5) {\n            color = vec3(1.0);\n        } else {\n            color = vec3(0.6, 0.6, 0.6);\n        }\n    }\n    fragColor = vec4(color+beat/2.5, 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "mic",
                        "id": 32,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/mic.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}