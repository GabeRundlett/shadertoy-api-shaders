{
    "Shader": {
        "info": {
            "date": "1496289837",
            "description": "experiment with using the texture inputs as wavetables.  think of each row of pixels as a waveform where left channel is red and right is green.  this should be fun!\nneed to try and window the edges with a cosine.",
            "flags": 8,
            "hasliked": 0,
            "id": "ldsBDN",
            "likes": 5,
            "name": "texture as wavetable sound",
            "published": 3,
            "tags": [
                "sound",
                "texture",
                "wavetable"
            ],
            "usePreview": 0,
            "username": "MacroMachines",
            "viewed": 1020
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(texture(iChannel0, uv).rgb,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\nvec2 mainSound( in int samp, float time )\n{\n    float Hz = 60.0;\n    float Scan = 0.01250;\n    float timeMod = fract(time*Hz)*0.1250;\n    float timeScan = floor(time*Hz)/Hz*Scan*0.125;\n    \n    //float timeScan = floor(time*Hz/Scan)/Hz*Scan;\n    \n    return cos(timeMod*timeScan)*sin(vec2( texture(iChannel0,vec2(timeMod,timeScan)  ).rg*4.0-2.0 )*150.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}