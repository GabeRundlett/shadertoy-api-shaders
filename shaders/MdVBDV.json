{
    "Shader": {
        "info": {
            "date": "1530662890",
            "description": "A minimalistic analog clock. All of the graphics are generated based on polar inequalities.",
            "flags": 0,
            "hasliked": 0,
            "id": "MdVBDV",
            "likes": 2,
            "name": "Chroma Analog Clock",
            "published": 3,
            "tags": [
                "clock",
                "analog",
                "lightweight"
            ],
            "usePreview": 0,
            "username": "dawsx",
            "viewed": 568
        },
        "renderpass": [
            {
                "code": "#define fuzzyor(x, y) (x) + (y) - (x)*(y)\n\nconst float pi = 3.1415926535;\nconst float tau = 2.*pi;\nconst float halfpi = pi/2.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord - 0.5*iResolution.xy)/min(iResolution.x, iResolution.y);\n\tuv *= 0.8;\n    float r = length(uv);\n\tfragColor = vec4(vec3(0.),1.);\n\tif (r > 0.4) { return;}\n\t\t\n\tfloat theta = atan(uv.x, -uv.y) - halfpi;\n    int color = 0;\n\n    vec3 h = vec3(halfpi) - tau*fract(floor(iDate.w)/vec3(43200., 3600., 60.));\n    \n\tvec3 diff = vec3(theta) - h;\n    vec3 sindiff = sin(diff);\n    vec3 cosdiff = cos(diff);\n    vec3 absdiff = abs(diff);\n    vec3 absdiff2 = abs(h - tau*step(0., h) - vec3(theta));\n    \n    vec3 r3 = vec3(r);\n    vec3 rings = step(r3, vec3(0.36,0.37,0.38)) * step(vec3(0.34, 0.36, 0.37), r3) * step(h, vec3(theta));\n\tbvec3 bools1 = lessThan(absdiff, vec3(halfpi));\n    bvec3 bools2 = lessThan(absdiff2, vec3(halfpi));\n    \n    \n    vec3 mixtrue = vec3(0.36, 0.37, 0.38);\n    vec3 mixfalse = vec3(-0.1000, -0.1414, -0.1578)/cosdiff;\n    vec3 hands = mix(mixtrue, mix(mixtrue, mixfalse, bools1), bools2);\n    \n    vec3 handbacks = step(r3, vec3(0.1, 0.07, 0.04)/sindiff);\n    \n    float redhand = step(r, absdiff.x < halfpi || absdiff2.x < halfpi \n             ? 0.36 : -0.1000 / cosdiff.x) * step(r, 0.10/sindiff.x);\n\t\n    float greenhand = step(r, absdiff.y < halfpi || absdiff2.y < halfpi \n             ? 0.37 : -0.1414 / cosdiff.y) * step(r, 0.07/sindiff.y);\n    \n    float bluehand = step(r, absdiff.z < halfpi || absdiff2.z < halfpi \n             ? 0.38 : -0.1578 / cosdiff.z) * step(r, 0.04/sindiff.z);\n    \n    fragColor.rgb = fuzzyor(rings, vec3(redhand, greenhand, bluehand));\n    \n\tbool clockframe =\n\t\t(r < 0.38 && r > 0.34 && abs(0.5-fract(12.*theta/tau)) > 0.49 ) ||\n\t\t(r < 0.39 && r > 0.30 && abs(0.5-fract( 4.*theta/tau)) > 0.493) ||\n\t\t(r < 0.38 && r > 0.36 && abs(0.5-fract(60.*theta/tau)) > 0.48);\n\tif (clockframe) fragColor = vec4(1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}