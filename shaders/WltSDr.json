{
    "Shader": {
        "info": {
            "date": "1580760769",
            "description": "This wasn't what I had in my mind...\n\nhsv2rgb: https://stackoverflow.com/questions/15095909/from-rgb-to-hsv-in-opengl-glsl",
            "flags": 32,
            "hasliked": 0,
            "id": "WltSDr",
            "likes": 1,
            "name": "Accidental_z1",
            "published": 3,
            "tags": [
                "accidental"
            ],
            "usePreview": 0,
            "username": "hanabi",
            "viewed": 298
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define M_PI 3.14159265358\n\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float fFrame = float(iFrame);\n    float t = fFrame * M_PI / 270.;\n    \n    vec2 center = (iResolution.xy) / 2.;\n    float h = iResolution.y / 2.; \n\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n    \n    float MAX = 100.;\n    for (int i = 0; i < int(MAX) + 1; i++) {\n        vec2 line = vec2(h * cos(float(i) + t), 0. * h * sin(float(i) + t));\n        float R = M_PI / MAX * 1. * float(i);\n        vec3 lineR;\n        lineR.x = line.x * cos(R) - line.y * sin(R);\n        lineR.y = line.x * sin(R) + line.y * cos(R);\n        lineR.z = 7. * abs(cos(float(i) + t)) + 3.;\n        lineR.xy += center;\n    \tif (distance(lineR.xy, fragCoord.xy) < lineR.z)\n    \t\tfragColor = vec4(hsv2rgb(vec3(0.01 * float(i), 0.01 * float(i), (10.-lineR.z)/6.)), 1);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}