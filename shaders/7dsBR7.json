{
    "Shader": {
        "info": {
            "date": "1644661143",
            "description": "variant of \"binary search runtime\" by ArmandB. https://shadertoy.com/view/7dsBRM\nabout distrib of  y = binary search iterations to get x (white).\n\n Here, store all results for range 0-iRes.x , or 0-R.x*R.y if mouse click\nred: y = Gauss( avg, stddev )\n",
            "flags": 32,
            "hasliked": 0,
            "id": "7dsBR7",
            "likes": 3,
            "name": "binary search runtime: stats",
            "published": 3,
            "tags": [
                "algorithm",
                "gpmipmap"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 338
        },
        "renderpass": [
            {
                "code": "// variant of \"binary search runtime\" by ArmandB. https://shadertoy.com/view/7dsBRM\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    // --- display first raw of values ( y = binary search iterations to get x )\n    ivec2 I = ivec2(u/4.);\n    O = vec4( I.y == int(texelFetch(iChannel0,ivec2(I.x,0),0)) );\n    \n    // --- show statistics\n    \n    vec2 M = texture(iChannel0, vec2(.5), 99.).xy;\n    float m = M.x,               // average value,\n          s = sqrt( M.y - m*m ), // std dev \n          \n          y = ( float(I.y) - m ) / s;\n    O.r += exp2( -.5* y*y );     // show gaussian statistics\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy;\n    u -= .5;\n    \n    int res = iMouse.z<0. ? int(R.x) : int(R.x*R.y),\n      coord = iMouse.z<0. ? int(u.x) : int(u.x+R.x*u.y);\n\n    int l = 0,\n        r = res-1,\n        c = 0, m;\n    \n    for ( ; c < res; c++) {\n        m = (r+l)/2;\n        if     (m == coord)  break;\n        else if (m < coord) l = m-1;\n        else if (m > coord) r = m+1;\n    }\n \n    O = vec4(c,c*c,0,0);   // to get moments 1 and 2 in max MIPmap LOD\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}