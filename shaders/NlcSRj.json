{
    "Shader": {
        "info": {
            "date": "1639372153",
            "description": "this was originially made as a phone wallpaper (instead of mouse position, it uses the gyroscope)",
            "flags": 0,
            "hasliked": 0,
            "id": "NlcSRj",
            "likes": 21,
            "name": "Mouse Offset Mandelbrot",
            "published": 3,
            "tags": [
                "fractal",
                "mouse",
                "mandelbrot"
            ],
            "usePreview": 0,
            "username": "JennySchub",
            "viewed": 539
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592653\n#define AA 2.\n\nvec3 colMap(float v) {\n v=mod(v, PI+1.3)-.8;\n return vec3(\n  sin(sin(v-.6)),\n  sin(sin(v)),\n  sin(sin(v+.8))\n  );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  float aaFract = 1./AA;\n  fragColor = vec4(0.);\n  vec2 mouz = iMouse.xy;\n  if(mouz.x == 0. || mouz.y == 0.){\n      mouz.x=iResolution.x*.45;\n      mouz.y=iResolution.y*.45;\n  }\n  for(float aa=0.; aa<1.; aa+=aaFract){\n      for(float bb=0.; bb<1.; bb+=aaFract){\n          vec2 uv =  ( (fragCoord.yx + vec2(aa,bb) ) -.5* iResolution.yx ) / iResolution.x;\n          uv*=(-cos(iTime*.1)+1.3)*.28;\n          uv+=vec2(.1,.65);\n\n          vec2 c =uv;\n          vec2 z=c;\n          float l=0.;\n          float sum=length(z);\n          vec2 newZ;\n          for(int i=0;i<40;i++){\n           c+=(mouz.yx/iResolution.yx  -.5)*-.01*float(i);\n            newZ=vec2(-z.y*z.y+z.x*z.x, 2.*z.x*z.y)+c;\n            sum+=length(newZ-z);\n            z=newZ;\n            l=length(z);\n            if(l>2.) break;\n          }\n          vec2 dir=z-c;\n          vec3 col = vec3(dir, .0);\n\n          uv.x=mod((atan(dir.y,dir.x)/PI*.5+.5)*6.+(iTime+sin(iTime)*.9)*4., 1.);\n          uv.y=mod(length(dir*.5),1.);\n\n          col=colMap(sum*.2-l*.1+iTime*.1).gbr;\n\n          fragColor += vec4(col.grb, 1.0) * aaFract*aaFract;\n        }\n    }\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}