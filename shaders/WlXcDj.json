{
    "Shader": {
        "info": {
            "date": "1593031346",
            "description": "These caves are rendered using a [url=https://www.shadertoy.com/view/3tXyRN]\"minimal raymarching\"[/url] shader.\nUse the mouse to look around.",
            "flags": 0,
            "hasliked": 0,
            "id": "WlXcDj",
            "likes": 3,
            "name": "Sandstone cave system",
            "published": 3,
            "tags": [
                "procedural",
                "3d",
                "raymarching",
                "caves"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 444
        },
        "renderpass": [
            {
                "code": "#define t iTime\n#define r iResolution\n#define iterations 500 //number of raymarching steps\n#define EPSILON .001\n#define MAX_DIST 20.0\n#define rot(spin) mat2(cos(spin),sin(spin),-sin(spin),cos(spin))\n\n\n//Based on https://www.shadertoy.com/view/3tXyRN\n\nvec3 surface_color(vec3 p)\n{\n    float color1 = length(sin(p))/2.0;\n    return vec3(color1,color1/1.8+sin(length(p)/10.0)/40.0,color1/2.0)/10.0;\n}\n\nfloat SDF1(vec3 p){\n    return length(sin(p*.6)-sin(p))-1.4;\n}\n\nfloat SDF(vec3 p){\n\tfloat to_return = SDF1(p);\n    for(int i = 1; i <5;i++){\n        p += p.yzx/float(i*i);\n    \tto_return = min(to_return,SDF1(p));\n    }\n    return to_return/1.5;\n}\n\nvoid mainImage( out vec4 o, in vec2 U )\n{\n    o = vec4(0.0);\n    vec3 d=vec3(U/r.xy-.5,.5),p0=vec3(0,6,t),p=p0;\n    if (length(iMouse.xy) > 40.0) {\n        d.yz *= rot(-3.14*0.5+iMouse.y/iResolution.y*3.14);\n        d.xz *= rot(-3.14+iMouse.x/iResolution.x*3.14*2.0);\n    }\n    float l1;\n    for(int i=0;i<iterations;i++)\n    {\n        float sd1 = SDF(p);\n        if(-sd1 < EPSILON*(length(l1)+1.0) || l1 > MAX_DIST){ break; }\n        p+=d*(-sd1);\n        l1 = distance(p,p0);\n    }\n    o+=(vec4(surface_color(p*100.0),0)+l1/100.0)*3.0;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}