{
    "Shader": {
        "info": {
            "date": "1554411295",
            "description": "Tribute to the grapher Da Cruz, inspired by \"4 oiseaux dans 1 masque\".\n\n2d distance fields\n\nClick to interact",
            "flags": 0,
            "hasliked": 0,
            "id": "tdjSDw",
            "likes": 96,
            "name": "Comme un poisson dans l'Ourcq",
            "published": 3,
            "tags": [
                "2d",
                "graph",
                "streetart"
            ],
            "usePreview": 1,
            "username": "eliemichel",
            "viewed": 1525
        },
        "renderpass": [
            {
                "code": "// \"Comme un poisson dans l'Ourcq\"\n// Tribute to the grapher Da Cruz\n// Copyright (c) March 2019 - Alt144 (Elie Michel)\n// License: CC 3.0 BY - Please notify me when using it\n\n#define PI 3.14159265\n\nvec2 rand2(vec2 seed) {\n    return vec2(fract(sin(dot(seed.xy ,vec2(12.9898,78.233))) * 43758.5453),\n\t\tfract(cos(dot(seed.xy ,vec2(4.898,7.23))) * 23421.631));\n}\n\nvec2 noise2(vec2 uv) {\n    vec2 e = vec2(1., 0.);\n    vec2 i = floor(uv);\n    vec2 t = fract(uv);\n    t = t*t*(3.-2.*t);\n    vec2 r00 = rand2((i + e.yy)*.0254);\n    vec2 r10 = rand2((i + e.xy)*.0254);\n    vec2 r01 = rand2((i + e.yx)*.0254);\n    vec2 r11 = rand2((i + e.xx)*.0254);\n    return mix(\n    \tmix(r00, r10, t.x),\n        mix(r01, r11, t.x),\n        t.y\n    );\n}\nfloat noise(vec2 uv) { return noise2(uv).x; }\n\nvec2 moda(vec2 uv, float repeat, out float iter) {\n    float a = atan(uv.y, uv.x);\n    float s = PI/repeat;\n    iter = mod(a/2./s, repeat);\n    a = mod(a, 2.*s) - s;\n    return length(uv) * vec2(cos(a), sin(a));\n}\n\nvec2 elbow(vec2 uv) {\n    vec2 tuv = vec2(-uv.y+.295, uv.x);;\n    float a = atan(uv.x, uv.y);\n    vec2 ruv = vec2(2.*PI*a*.03, length(uv));\n    return mix(tuv, mix(uv, ruv, step(0., uv.x)), step(0., uv.y));\n}\n\nfloat smin( float a, float b, float k )\n{\n    float h = max( k-abs(a-b), 0.0 )/k;\n    return min( a, b ) - h*h*k*(1.0/4.0);\n}\n\nfloat circleRing(vec2 uv, float steps, float minr, float maxr, float angleJitter, float angularSpeed, float rotation) {\n    float iter;\n    float a = atan(uv.y, uv.x);\n    a += rotation + iTime * angularSpeed;\n    uv = length(uv) * vec2(cos(a), sin(a));\n    uv = moda(uv, steps, iter);\n    vec2 r = rand2(vec2(floor(iter)*.0354, 0.21));\n    float d = length(uv - vec2(.3+mix(maxr, minr, r.x),mix(-1.,1.,r.y)*.08*angleJitter)) - mix(minr, maxr, r.x);\n    return -d;\n}\n\nfloat shape1(vec2 uv, float steps, float angleJitter, float angularSpeed) {\n    float d = length(uv) - .4;\n    d = min(d, -circleRing(uv, steps, .05, .08, angleJitter, angularSpeed, .0));\n    return -d;\n}\n\nstruct StripesOpt {\n    float distorsion;\n    float spacing;\n    float bump;\n};\nfloat stripes(vec2 uv, StripesOpt opt) {\n    vec2 ouv = uv;\n    float s = 10.;\n    float iter = round(uv.x*s+.25);\n    uv.x = mod(uv.x, 1./10.) - 1./10./2.;\n    vec2 r = rand2(vec2(iter*.0234, iter*0.8913));\n    float ax = mix(-1.,1.,r.x)*.05*opt.distorsion;\n    float d = sin(2.*PI*(uv.x+uv.y*ax)*10.);\n    d += mix(-.5+opt.spacing, .5+opt.spacing, r.x);\n    d *= .03;\n    \n    float sides = .47-abs(uv.y);\n    \n    // bumps\n    float nobump = (1. - step(.5, opt.bump)) * 99999.;\n    uv = ouv;\n    s = 2.;\n    uv.x = mod(uv.x, s) - s/2.;\n    sides = min(sides, length(uv-vec2(0.,.9)) - 0.6 + nobump);\n    sides = min(sides, length(uv-vec2(0.5,-.85)) - 0.55 + nobump);\n    \n    d = smin(d, sides, mix(0.10, 0.05, r.y));\n    return d;\n}\n\nfloat fill(float d) {\n    return smoothstep(0., .003, d);\n}\n\nfloat fit01(float a, float b, float x) {\n    return (clamp(x, a, b) - a) / (b - a);\n}\n\nstruct StripesCircleOpt {\n    float minRadius;\n    float maxRadius;\n    float kappa;\n    float omega;\n    float phi;\n};\nfloat stripesCircle(vec2 uv, StripesCircleOpt opt, StripesOpt sopt) {\n    uv = vec2(atan(uv.y, uv.x)/PI*opt.kappa+iTime*opt.omega+opt.phi, fit01(opt.minRadius, opt.maxRadius, length(uv))*2.-1.);\n    return stripes(uv, sopt);\n}\n\nfloat stripesCircle1(vec2 uv, float distorsion) {\n    return stripesCircle(uv, StripesCircleOpt(.25, .385, 3., -.05, 0.), StripesOpt(distorsion, 0., 1.));\n}\n\nfloat stripesCircle2(vec2 uv, float distorsion) {\n    return stripesCircle(uv, StripesCircleOpt(.354, .395, 3.5, -.01, 112.2), StripesOpt(distorsion, .5, 1.));\n}\n\nfloat stripesCircle3(vec2 uv, float distorsion) {\n    return stripesCircle(uv, StripesCircleOpt(.45, .9, 7.5, -.03, 57.3), StripesOpt(distorsion, 0., 1.));\n}\n\nfloat stripesCircle4(vec2 uv, float distorsion) {\n    return stripesCircle(uv, StripesCircleOpt(.4, .95, 6.5, -.03, 32.7), StripesOpt(distorsion, 0., 1.));\n}\n\nfloat circle(vec2 uv, float r) {\n    return -(length(uv) - r);\n}\n\nfloat contours(float shape, float thickness) {\n    return thickness - abs(shape);\n}\n\nfloat capsule(vec2 uv, float r, float h) {\n    uv = abs(uv);\n    return max(circle(uv-vec2(.0, h), r), min(r - uv.x, h - uv.y));\n}\n\nmat2 rot(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat2(c, s, -s, c);\n}\n\nvoid solveCircle(in float width, in float aperture, out float radius, out float offset) {\n    offset = (width*width/aperture-aperture)/2.;\n    radius = offset + aperture;\n}\n\nvec3 drawMainEye(vec3 col, vec2 uv, vec2 mouse, out float dist) {\n    float outerCircle = shape1(uv*.99, 8., 1., .1);\n    float blueCircle = -(length(uv) - 0.392);\n    float blueCircle2 = -(length(uv) - mix(0.355, 0.36, noise(uv*15.)));\n    float ring1 = stripesCircle1(uv, .5);\n    float ring2 = stripesCircle2(uv, .5);\n    float upperEyelidRing = stripesCircle3(uv-vec2(0.,-.5), .5);\n    float lowerEyelidRing = stripesCircle4(uv+vec2(0.,-.5), .5);\n    vec2 innerCircleNoise = (noise2(uv*2.+iTime)-.5)*.05;\n    float innerCircle = shape1((uv+innerCircleNoise)*1.4, 9., .25, -.07);\n    \n    float open = fit01(.0, .005, sin(iTime*2.)*.5+.5);\n    \n    float upperEyeAperture = mix(.15, .23, max(0., mouse.y)*2.);\n    float lowerEyeAperture = mix(.1, .23, clamp(max(0., -mouse.y+.3)*3., 0., 1.));\n    \n    float c = .28; // eye radius\n    float b = mix(.001, upperEyeAperture, open);\n    float a, r;\n    solveCircle(c, b, r, a);\n    float upperEye = -(length(uv+innerCircleNoise - vec2(0.,.01-a)) - r);\n    float upperEyelid = -(length(uv+innerCircleNoise) - mix(0.27, 0.28, noise(uv*15.+3.4)));\n    upperEyelid = min(upperEyelid, -upperEye);\n    \n    b = mix(.001, lowerEyeAperture, open);\n    solveCircle(c, b, r, a);\n    float lowerEye = -(length(uv+innerCircleNoise + vec2(0.,-.01-a)) - r);\n    float lowerEyelid = -(length(uv+innerCircleNoise) - mix(0.27, 0.275, noise(uv*15.+3.464)));\n    lowerEyelid = min(lowerEyelid, -lowerEye);\n    \n    b = lowerEyeAperture;\n    solveCircle(c, b, r, a);\n    vec2 eyeCenter = -vec2(0.,-.025-a);\n    float eye = 1.;\n    eye = min(eye, upperEye-.01);\n    eye = min(eye, lowerEye-.01);\n    \n    ring1 = smin(ring1, -innerCircle-mix(.0, .03, noise(uv*12.+iTime*.5)), 0.02);\n    \n    upperEyelidRing = smin(upperEyelidRing, upperEyelid-.01, 0.01);\n    lowerEyelidRing = min(lowerEyelidRing, lowerEyelid);\n    \n    vec2 eyeOffset = mouse*vec2(.2,.5)+vec2(.0,-.1);\n    eyeOffset.y = min(eyeOffset.y, 0.03);\n    float eyeRing = stripesCircle(uv-eyeCenter-eyeOffset, StripesCircleOpt(.05, .36, 2.5, -.05, 0.), StripesOpt(.5, 0., 0.));\n    float pupille = -(length(uv-eyeCenter-eyeOffset) - .09);\n    \n    eyeRing = min(eyeRing, -.03-upperEyelid) * .2;\n    \n    float eyeRingFade = clamp((-upperEyelid*7.)*(-lowerEyelid*7.) + .2, 0., .9);\n    float eyeWhite = length(uv+innerCircleNoise-eyeCenter)-mix(.325, .31, noise(uv*8.+45.1+iTime*.5))*3.4*pow(r,1.1);\n    \n    vec3 eyeLayer = vec3(.0, .3, .6);\n    eyeLayer = mix(eyeLayer, vec3(1., .292, .173), fill(eyeRing)*eyeRingFade);\n    eyeLayer = mix(eyeLayer, vec3(1.), fill(pupille));\n    eyeLayer = mix(eyeLayer, vec3(1.), fill(eyeWhite));\n    \n    col = mix(col, vec3(.14, .21, .3), fill(outerCircle));\n    col = mix(col, vec3(.1, .3, .5), fill(blueCircle));\n    col = mix(col, vec3(.7, .8, .85), fill(blueCircle2));\n    col = mix(col, vec3(0.65, 0.3, 0.6), fill(ring1*.3));\n    col = mix(col, vec3(0.9, 0.8, 0.2), fill(ring2*.25));\n    col = mix(col, vec3(.14, .21, .3), fill(innerCircle));\n    col = mix(col, eyeLayer, fill(eye));\n    col = mix(col, vec3(1., .292, .173), fill(upperEyelid));\n    col = mix(col, vec3(.75, .102, .073), fill(upperEyelidRing));\n    col = mix(col, vec3(.292, .85, .653), fill(lowerEyelid));\n    col = mix(col, vec3(.75), fill(lowerEyelidRing));\n    \n    dist = outerCircle;\n        \n    return col;\n}\n\nvec3 smallEye(vec2 uv, vec2 mouse, vec2 seed, vec3 eyeColor, out float dist) {\n    vec2 innerCircleNoise = (noise2(seed+uv*3.+iTime*.2+uv.y*3.)-.5)*.03;\n    \n    vec2 r = rand2(seed);\n    float freq = mix(.5,1.,r.x);\n    float phi = r.y * 2. * PI;\n    float open = fit01(.0, .002, sin(iTime*freq+phi)*.5+.5);\n    \n    float upperRadius, upperOffset, lowerRadius, lowerOffset, innerRadius, innerOffset;\n    solveCircle(.175, mix(.001, .12, open), upperRadius, upperOffset);\n    solveCircle(.175, mix(.001, .085, open), lowerRadius, lowerOffset);\n    solveCircle(.175, .085, innerRadius, innerOffset);\n    vec2 eyeCenter = -vec2(0.,-.025-innerOffset);\n    \n    vec2 eyeOffset = mouse*vec2(.1,.5)+vec2(.0,-.1);\n    eyeOffset.y = min(eyeOffset.y, 0.03);\n    eyeOffset = vec2(0.); // DEACTIVATE\n    \n    float pupille = circle(uv-eyeCenter-eyeOffset, .08);\n    \n    float upperEye = circle(uv+innerCircleNoise - vec2(0.,.01-upperOffset), upperRadius);\n    float lowerEye = circle(uv+innerCircleNoise + vec2(0.,-.01-lowerOffset), lowerRadius);\n    \n    float eyeRing = stripesCircle(uv-eyeCenter-eyeOffset, StripesCircleOpt(.05, .25, 2., -.05, 0.), StripesOpt(.5, 0., 0.));\n    float eyeRingFade = clamp((-upperEye*7.)*(-lowerEye*7.) + .2, 0., .9);\n    \n    float eyeWhite = -circle(uv+innerCircleNoise-eyeCenter, mix(.95, .99, noise(seed+uv*8.+45.1+iTime*.5))*innerRadius);\n    \n    float eye = 1.;\n    eye = min(eye, upperEye-.01);\n    eye = min(eye, lowerEye-.01);\n    \n    vec3 col = vec3(.0, .3, .6);\n    col = mix(col, eyeColor, fill(eyeRing)*eyeRingFade);\n    col = mix(col, vec3(1.), fill(pupille));\n    col = mix(col, vec3(1.), fill(eyeWhite));\n    \n    dist = eye;\n    return col;\n}\n\n// Animation around the small eyes\n// Pb: How to do a kind of temporal modulo on this to clone along path at low cost?\nvec2 anim1(float anim) {\n    float len = PI*.14+.11*2.+PI*.14+.11*2.;\n    vec2 cc = vec2(.14,.11);\n    float theta;\n    float a1 = fit01(.0, .22/len, fract(anim));\n    float a2 = fit01(.22/len, (.22+PI*.14)/len, fract(anim));\n    float a3 = fit01((.22+PI*.14)/len, (.44+PI*.14)/len, fract(anim));\n    float a4 = fit01((.44+PI*.14)/len, 1., fract(anim));\n    theta = PI*a2;\n    vec2 cc2 = vec2(.0,.11) + .14 * vec2(cos(theta), sin(theta));\n    theta = PI+PI*a4;\n    vec2 cc4 = vec2(.0,-.11) + .14 * vec2(cos(theta), sin(theta));\n    vec2 cc1 = vec2(.14,-.11) + a1 * vec2(0.,.22);\n    vec2 cc3 = vec2(-.14,.11) + a3 * vec2(0.,-.22);\n    cc = mix(cc1, cc2, step(0.01, a2));\n    cc = mix(cc, cc3, step(0.01, a3));\n    cc = mix(cc, cc4, step(0.01, a4));\n    return cc;\n}\n\nvec3 drawSubEyes(vec3 col, vec2 uv, vec2 mouse, out float dist) {\n    uv -= vec2(-.7,-.065);\n    mouse -= vec2(-.7,-.065);\n    uv.x *= 1.+uv.y*uv.y*1.5;\n    float mask = capsule(uv, .17, .11);\n    \n    float topEyeDist, bottomEyeDist;\n    vec3 topEyeLayer =    smallEye(uv-vec2(.0,.085), mouse-vec2(.0,.085), vec2(.12,.7896), vec3(.7, .2, .5), topEyeDist);\n    vec3 bottomEyeLayer = smallEye(uv-vec2(.0,-.11), mouse-vec2(.0,-.11), vec2(8.1,54.16), vec3(1., .15, .14), bottomEyeDist);\n    float eyesMask = max(topEyeDist, bottomEyeDist);\n    \n    // Inter eyes\n    float h1Stripes = stripes(uv*vec2(3.5,1.)+vec2(iTime*.08,.0), StripesOpt(0.,0.,0.));\n    float h1InnerMask = min(mask, -eyesMask)-.01;\n    h1InnerMask = min(h1InnerMask, -max(abs(uv.x)-.2, abs(uv.y)-.1));\n    float h1StripesMask = h1InnerMask-.005;\n    h1Stripes = smin(h1Stripes, h1StripesMask, .01);\n    \n    // Top of eyes\n    float h2Stripes = stripes(uv*vec2(3.5,1.)+vec2(iTime*.08,.0), StripesOpt(0.,0.,0.));\n    float h2InnerMask = min(mask, -eyesMask)-.01;\n    h2InnerMask = min(h2InnerMask, uv.y-.1);\n    float h2StripesMask = h2InnerMask-.005;\n    h2Stripes = smin(h2Stripes, h2StripesMask, .01);\n    \n    // Bottom of eyes\n    float h3Stripes = stripesCircle(uv-vec2(.0,.3), StripesCircleOpt(.3, .7, 4.5, -.03, 32.7), StripesOpt(0.,0.,0.));\n    float h3InnerMask = min(mask, -eyesMask)-.01;\n    h3InnerMask = min(h3InnerMask, -uv.y-.1);\n    float h3StripesMask = h3InnerMask-.005;\n    h3Stripes = smin(h3Stripes, h3StripesMask, .01);\n    \n    for (float i = 0. ; i < 1. ; i += .15) {\n        vec2 r = rand2(vec2(i,.167));\n        vec2 cc = anim1(iTime*.05+i+.01*(r.x-.5));\n        mask = max(mask, circle(uv-cc, mix(.045, .05, r.y)));\n    }\n    \n    col = mix(col, vec3(.14, .21, .3), fill(mask));\n    col = mix(col, vec3(1., .32, .17), fill(h1InnerMask));\n    col = mix(col, vec3(.75, .8, .84), fill(h1Stripes));\n    col = mix(col, vec3(.83, .88, .7), fill(h2InnerMask));\n    col = mix(col, vec3(.75, .8, .84), fill(h2Stripes));\n    col = mix(col, vec3(.83, .88, .7), fill(h3InnerMask));\n    col = mix(col, vec3(0.6, 0.3, 0.6), fill(h3Stripes*.5));\n    \n    col = mix(col, topEyeLayer, fill(topEyeDist));\n    col = mix(col, bottomEyeLayer, fill(bottomEyeDist));\n    \n    dist = mask;\n    return col;\n}\n\nvec3 horn1(vec3 col, vec2 uv, float mainEye, float dh4, out float dist) {\n    vec2 uv2 = (uv-vec2(-.32,.1))*vec2(1.,1.1);\n    float mask = circle(uv2, .7);\n    mask = min(mask, -circle(uv-vec2(-.7,.3), .7));\n    mask = min(mask, circle(uv-vec2(-.45,-.2), .7));\n    \n    float cr1 = circleRing(uv2*.47, 10., .055, .065, .0, .08, .0);\n    float cr2 = circleRing(uv2*.445, 5., .045, .05, .0, .08, .27);\n    float cr3 = circleRing((uv-vec2(-.7,.3))*.66, 10., .14, .05, .0, -.08, .0);\n    \n    float innerMask = mask-mix(.008,.015,noise(uv*8.));\n    innerMask = min(innerMask, -cr2);\n    innerMask = min(innerMask, -dh4);\n    \n    float s = stripes(uv*vec2(3.,1.5)+vec2(iTime*.12,.7), StripesOpt(0.5, .3, 0.5));\n    float stripesMask = innerMask-mix(.005,.015,noise(uv*15.));\n    stripesMask = min(stripesMask, -cr1);\n    stripesMask = min(stripesMask, -cr3);\n    s = smin(s, stripesMask, .02);\n    s = min(s, -mainEye-.008);\n    s*=.7;\n    \n    col = mix(col, vec3(.14, .21, .3), fill(mask));\n    col = mix(col, vec3(.95,.9,.6), fill(innerMask));\n    col = mix(col, vec3(1.,.292,.173), fill(s));\n    dist = mask;\n    return col;\n}\n\nvec3 horn2(vec3 col, vec2 uv, float mainEye, float dh4, out float dist) {\n    uv -= vec2(-.33, .23);\n    uv = rot(3.0) * uv;\n    vec2 muv = uv;\n    muv += noise2(uv*10.)*.01;\n    \n    float mask = circle(muv, .3);\n    float innerMask = mask-.013;\n    innerMask = min(innerMask, -circle(muv, .1));\n    innerMask = min(innerMask, -dh4);\n    \n    float cr1 = circleRing(uv*1.2, 10., .05, .065, .0, -.12, .0);\n    \n    float stripesMask = innerMask-.01;\n    stripesMask = min(stripesMask, -cr1);\n    stripesMask = min(stripesMask, -mainEye-.008);\n    \n    float c = stripesCircle(uv, StripesCircleOpt(.0, .5, 2.0, -.12, 32.7), StripesOpt(.5, 0.3, 1.));\n    c = smin(c, stripesMask, .02);\n    \n    float redRing = contours(circle(muv, .1), .01);\n    \n    col = mix(col, vec3(.14, .21, .3), fill(mask));\n    col = mix(col, vec3(.95,.9,.6), fill(innerMask));\n    col = mix(col, vec3(1.,.292,.173), fill(c));\n    col = mix(col, vec3(.7,.232,.273), fill(redRing));\n    dist = mask;\n    return col;\n}\n\nvec3 horn3(vec3 col, vec2 uv, float mainEye, float subEyes) {\n    uv -= vec2(0., .31);\n    uv.xy = uv.yx;\n    vec2 muv = uv;\n    muv += noise2(uv*10.-iTime*.5)*.01;\n    \n    vec2 buv = uv;\n    float bending = max(0., -(uv.y+.5)*1.4);\n    bending += max(0., (uv.y+.4)*.7);\n    bending = bending * bending;\n    buv.x += bending;\n    float s = stripes(buv*vec2(3.,1.5)+vec2(iTime*.12,.7), StripesOpt(0.5, .3, 0.));\n    \n    float mask = circle(muv-vec2(-.3,-.5), .5);\n    float bending2 = max(0., -(uv.y+.5)*1.8);\n    bending2 += max(0., (uv.y+.5)*.7);\n    bending2 = bending2 * bending2;\n    mask = min(mask, -(uv.x+bending2));\n    mask = min(mask, uv.x+.66+uv.y*.2);\n    mask = min(mask, uv.y+.7);\n    \n    float innerMask = mask-mix(.017, .012, fit01(-.2, -.1, uv.x));\n    innerMask = smin(innerMask, -subEyes, mix(0.1, 0.01, uv.x+1.3));\n    \n    float stripesMask = innerMask-.01;\n    float eyes = max(mainEye, subEyes);\n    stripesMask = min(stripesMask, -eyes-mix(.0, .05, pow(noise(uv*10.-iTime*.1), 4.)));\n    \n    s = smin(s, stripesMask, .02);\n    \n    col = mix(col, vec3(.14, .21, .3), fill(mask));\n    col = mix(col, vec3(.292, .8, .653), fill(innerMask));\n    col = mix(col, vec3(.4,.7,1.), fill(s));\n    \n    return col;\n}\n\nvec3 horn4(vec3 col, vec2 uv, float subEyes, out float dist) {\n    vec2 cuv = rot(-.1)*(uv-vec2(-.55,-.03))+vec2(uv.y*uv.y,.0)*.7;\n    vec2 nuv = cuv + noise2(uv*7.+.2*iTime)*.015;\n    \n    float cr1 = circleRing(nuv*.85, 8., .08, .09, .0, -.12, .0);\n    float cr2 = circleRing(rot(-.42)*nuv*.85, 4., .08, .09, .0, -.12, .0);\n    \n    float mask = circle(nuv, .42);\n    float innerMask = mask-.015;\n    innerMask = min(innerMask, -circle(nuv, .1));\n    innerMask = min(innerMask, -subEyes);\n    float stripesMask = innerMask-.01;\n    \n    stripesMask = min(stripesMask, -cr1);\n    innerMask = min(innerMask, -cr2+.02);\n    \n    float c = stripesCircle(cuv, StripesCircleOpt(.0, .7, 2.9, .1, 32.7), StripesOpt(.5, 0.5, 1.));\n    c = smin(c, stripesMask, .02);\n    \n    col = mix(col, vec3(.14, .21, .3), fill(mask));\n    col = mix(col, vec3(.85, .202, .173), fill(innerMask));\n    col = mix(col, vec3(1., .32, .17), fill(c));\n    dist = mask;\n    return col;\n}\n\nvec3 horn5(vec3 col, vec2 uv, float dh4, out float dist) {\n    uv -= vec2(-.65, .32);\n    uv *= 1.5;\n    uv = rot(3.0) * uv;\n    vec2 muv = uv;\n    muv += noise2(uv*10.)*.01;\n    \n    float mask = circle(muv, .3);\n    float innerMask = mask-.017;\n    innerMask = min(innerMask, -circle(muv, .1));\n    innerMask = min(innerMask, -dh4);\n    \n    float cr1 = circleRing(uv*1.25, 10., .05, .065, .0, -.12, .0);\n    \n    float stripesMask = innerMask-.01;\n    stripesMask = min(stripesMask, -cr1);\n    \n    float c = stripesCircle(uv, StripesCircleOpt(.0, .5, 1.3, -.1, 32.7), StripesOpt(.5, 0.2, 1.));\n    c = smin(c, stripesMask, .02);\n    \n    col = mix(col, vec3(.14, .21, .3), fill(mask));\n    col = mix(col, vec3(.55,.3,.55), fill(innerMask));\n    col = mix(col, vec3(.75,.15,.25), fill(c));\n    dist = mask;\n    return col;\n}\n\nvec3 horn6(vec3 col, vec2 uv, float mainEye, out float dist) {\n    uv -= vec2(.62, -.25);\n    uv *= 1.5;\n    uv = rot(3.0) * uv;\n    vec2 muv = uv;\n    muv += noise2(uv*6.)*.02;\n    \n    float mask = circle(muv, 1.5);\n    mask = min(mask, -circle(muv, 1.1));\n    \n    float cr1 = circleRing(uv*.21, 16., .03, .035, .5, -.12, .0);\n    float cr2 = circleRing(rot(.5)*uv*.335, 6., .04, .045, .8, .12, .0);\n    float cr3 = circleRing(uv*.335, 6., .04, .045, .8, .09, .0);\n    \n    float innerMask = mask-.017;\n    innerMask = min(innerMask, -cr3);\n    \n    float stripesMask = innerMask-mix(.005, .02, noise(uv*10.));\n    stripesMask = min(stripesMask, -cr1);\n    stripesMask = min(stripesMask, -cr2-.01);\n    stripesMask = min(stripesMask, -mainEye-.002);\n    \n    float s = stripes(rot(-.5)*uv*vec2(1.3,1.)-vec2(-iTime*.03,-1.2), StripesOpt(.5, 0.5, 1.));\n    s = smin(s, stripesMask, .02);\n    \n    col = mix(col, vec3(.14, .21, .3), fill(mask));\n    col = mix(col, vec3(1., .32, .17), fill(innerMask));\n    col = mix(col, vec3(.85,.8,.25), fill(s));\n    dist = mask;\n    return col;\n}\n\nvec3 horn7(vec3 col, vec2 uv, float mainEye, out float dist) {\n    uv -= vec2(.75, .25);\n    uv = uv.yx;\n    vec2 muv = uv;\n    muv += noise2(uv*6.)*.01;\n    \n    muv = abs(muv);\n    float mask = -max(muv.x-.5, muv.y-.12);\n    \n    vec2 cruv = uv;\n    cruv -= vec2(iTime*.05, -.085);\n    float iter = floor(cruv.x / .3);\n    cruv.x = mod(cruv.x, .3)-.3/2.;\n    vec2 r = rand2(vec2(iter, .127));\n    vec2 offset = vec2(mix(-.1,.1,r.y), .0);\n    float cr1 = circle(cruv-offset, mix(.05, .06, r.x));\n    \n    float innerMask = mask-.017;\n    mask = max(mask, cr1);\n    mask = min(mask, -(muv.x-.5));\n    \n    float stripesMask = innerMask-mix(.005, .015, noise(uv*10.));\n    stripesMask = min(stripesMask, -mainEye-.002);\n    \n    float s = stripes(uv*vec2(3.,4.)-vec2(-iTime*.03,-.0), StripesOpt(.5, 0.5, 0.));\n    s = smin(s, stripesMask, .02);\n    \n    col = mix(col, vec3(.14, .21, .3), fill(mask));\n    col = mix(col, vec3(.99, .96, .73), fill(innerMask));\n    col = mix(col, vec3(.95,.82,.22), fill(s));\n    dist = mask;\n    return col;\n}\n\nvec3 horn8(vec3 col, vec2 uv, float mainEye, out float dist) {\n    uv -= vec2(.75, -.5);\n    vec2 muv = uv;\n    muv += noise2(uv*6.)*.01;\n    \n    muv.x += -.5*muv.y;\n    muv = abs(muv);\n    float mask = -max(muv.x-.26, muv.y-.11);\n    \n    float innerMask = mask-.017;\n    \n    float stripesMask = innerMask-mix(.002, .025, noise(uv*15.));\n    stripesMask = min(stripesMask, -mainEye-.002);\n    \n    float s = stripes(uv*vec2(4.,7.)-vec2(-iTime*.03,.16), StripesOpt(.5, 0.2, 0.))*.25;\n    s = smin(s, stripesMask, .02);\n    \n    col = mix(col, vec3(.14, .21, .3), fill(mask));\n    col = mix(col, vec3(.0, .3, .6), fill(innerMask));\n    col = mix(col, vec3(.65,.4,.65), fill(s));\n    dist = mask;\n    return col;\n}\n\nvec3 horn9(vec3 col, vec2 uv, float mainEye, out float dist) {\n    uv = uv * 1.5 - vec2(1., -.7);\n    uv = vec2(uv.y, -uv.x);\n    vec2 cruv = uv;\n    uv = elbow(uv);\n    uv.y += -.23;\n    \n    vec2 muv = uv;\n    muv += noise2(uv*6.)*.01;\n    muv = abs(muv);\n    float mask = -max(muv.x-.7, muv.y-.16);\n    \n    cruv -= vec2(.13,.13);\n    cruv = elbow(cruv);\n    cruv += vec2(-.1*iTime, -.26);\n    float iter = floor(cruv.x/ .3);\n    cruv.x = mod(cruv.x, .3)-.3/2.;\n    float cr1 = circle(cruv, mix(.07, .09, rand2(vec2(iter, .127)).x));\n    \n    float cr2 = circle(cruv+vec2(.1,.12), mix(.07, .09, rand2(vec2(iter, .127)).x));\n    \n    float innerMask = mask-mix(.023, .015, noise(uv*8.));\n    innerMask = min(innerMask, -cr1);\n    mask = max(mask, cr2);\n    \n    float stripesMask = innerMask-mix(.01, .02, noise(uv*10.));\n    \n    \n    float s = stripes(uv*vec2(2.,3.)-vec2(iTime*.05,-.0), StripesOpt(.65, 0.5, 0.))*.25;\n    float s2 = stripes(uv*vec2(1.,3.)-vec2(iTime*.025+.1*uv.y,-.0), StripesOpt(0., -1.3, 0.));\n    s = min(s, -s2);\n    s = smin(s, stripesMask, .01);\n    \n    col = mix(col, vec3(.14, .21, .3), fill(mask));\n    col = mix(col, vec3(.75, .8, .84), fill(innerMask));\n    col = mix(col, vec3(1., .32, .17), fill(s));\n    \n    dist = mask;\n    return col;\n}\n\nvec3 horn10(vec3 col, vec2 uv, float mainEye, out float dist) {\n    uv -= vec2(.85, .25);\n    uv = uv.yx;\n    vec2 muv = uv;\n    muv += noise2(uv*6.)*.01;\n    \n    muv = abs(muv);\n    float mask = -max(muv.x-.5, muv.y-.12);\n    \n    float innerMask = mask-.017;\n    \n    float stripesMask = innerMask-mix(.005, .015, noise(uv*10.));\n    stripesMask = min(stripesMask, -mainEye-.002);\n    \n    float s = stripes(uv*vec2(4.,4.)-vec2(iTime*.02,-.0), StripesOpt(1.5, 0.5, 0.));\n    s = smin(s, stripesMask, .02);\n    \n    col = mix(col, vec3(.14, .21, .3), fill(mask));\n    col = mix(col, vec3(.292, .8, .653), fill(innerMask));\n    col = mix(col, vec3(.4,.7,1.), fill(s));\n    dist = mask;\n    return col;\n}\n\n\nvec3 horn11(vec3 col, vec2 uv, float mainEye, out float dist) {\n    uv -= vec2(.0, -.3);\n    uv = rot(0.3) * uv;\n    vec2 muv = uv;\n    muv += noise2(uv*10.)*.01;\n    \n    float mask = circle(muv, .38);\n    float innerMask = mask-.017;\n    innerMask = min(innerMask, -circle(muv, .1));\n    \n    float cr1 = circleRing(uv*.95, 10., .05, .065, .0, -.12, .0);\n    float cr2 = circleRing(uv*1.023, 8., .05, .065, .5, .12, .0);\n    \n    mask = max(mask, cr2);\n    \n    float stripesMask = innerMask-.01;\n    stripesMask = min(stripesMask, -cr1);\n    stripesMask = min(stripesMask, -mainEye-.005);\n    \n    float c = stripesCircle(uv, StripesCircleOpt(.0, .55, 2.1, -.1, 32.7), StripesOpt(.5, .5, 1.));\n    \n    float s = stripes((rot(-1.1)*uv)*vec2(2.,3.)+vec2(-iTime*.1,.6), StripesOpt(.5, .5, 1.));\n    float limit = uv.x+uv.y*2. - .1;\n    c = mix(s, c, step(0., limit));\n    stripesMask = smin(stripesMask, -contours(limit, .015), .02);\n    \n    c = smin(c, stripesMask, .02);\n    \n    col = mix(col, vec3(.14, .21, .3), fill(mask));\n    col = mix(col, vec3(.75, .8, .84), fill(innerMask));\n    col = mix(col, vec3(1., .32, .17), fill(c));\n    dist = mask;\n    return col;\n}\n\n\nvec3 horn12(vec3 col, vec2 uv, float mainEye, out float dist) {\n    uv -= vec2(-.1, -.25);\n    uv = uv.yx;\n    vec2 muv = uv;\n    muv += noise2(uv*6.)*.01;\n    \n    muv = abs(muv);\n    float mask = -max(muv.x-.5, muv.y-.12);\n    \n    vec2 cruv = uv;\n    cruv -= vec2(iTime*.05, .08);\n    float iter = floor(cruv.x / .3);\n    cruv.x = mod(cruv.x, .3)-.3/2.;\n    float cr1 = circle(cruv, mix(.05, .06, rand2(vec2(iter, .127)).x));\n    \n    float innerMask = mask-.017;\n    mask = max(mask, cr1);\n    mask = min(mask, -(muv.x-.5));\n    \n    float stripesMask = innerMask-mix(.005, .015, noise(uv*10.));\n    stripesMask = min(stripesMask, -mainEye-.002);\n    \n    float s = stripes(uv*vec2(4.,4.)-vec2(iTime*.02,-.0), StripesOpt(.7, 0.5, 1.));\n    s = smin(s, stripesMask, .02);\n    \n    col = mix(col, vec3(.14, .21, .3), fill(mask));\n    col = mix(col, vec3(1., .37, .3), fill(innerMask));\n    col = mix(col, vec3(.5,.9,.3), fill(s*.5));\n    \n    dist = mask;\n    return col;\n}\n\nvec3 horn13(vec3 col, vec2 uv, float bg, out float dist) {\n    uv -= vec2(.0,.3);\n    float innerMask = -bg+.004;\n    innerMask = min(innerMask, uv.x);\n    float stripesMask = innerMask-mix(.005, .02, noise(uv*10.+iTime));\n    float s = stripes(uv*vec2(3.,1.)+vec2(-iTime*.05,0.), StripesOpt(.9,.5,.0));\n    s = smin(s, stripesMask, .02);\n    \n    col = mix(col, vec3(1., .37, .3), fill(innerMask));\n    col = mix(col, vec3(.65,.4,.65), fill(s));\n    \n    dist = innerMask;\n    return col;\n}\n\nvec3 horn14(vec3 col, vec2 uv, float mainEye, float dh15, out float dist) {\n    uv -= vec2(.445,.0);\n    float mask = circle(uv+vec2(.0,-.7*uv.x*uv.x)-noise2(uv*10.+iTime*.1)*.01, .2);\n    float innerMask = mask-.013;\n    float stripesMask = innerMask-mix(.005, .02, noise(uv*10.+iTime));\n    float s = stripes(uv*vec2(3.3,1.)+vec2(iTime*.03,0.), StripesOpt(.9,.3,.0));\n    stripesMask = min(stripesMask, -mainEye-.005);\n    stripesMask = min(stripesMask, -dh15-.005);\n    s = smin(s, stripesMask, .02);\n    \n    col = mix(col, vec3(.14, .21, .3), fill(mask));\n    col = mix(col, vec3(.1, .3, .5), fill(innerMask));\n    col = mix(col, vec3(0.9, 0.8, 0.2), fill(s));\n    \n    dist = mask;\n    return col;\n}\n\nvec3 horn15(vec3 col, vec2 uv, float mainEye, out float dist) {\n    uv -= vec2(.445,-.1);\n    float mask = circle(uv+vec2(.0,-.7*uv.x*uv.x)+noise2(uv*9.-iTime*.15)*.02, .2);\n    float innerMask = mask;//-.013;\n    float stripesMask = innerMask-mix(.005, .02, noise(uv*10.+iTime));\n    \n    float bending = max(0., uv.y-.0);\n    bending = bending * bending * smoothstep(.05, .15, uv.x);\n    uv.x += -1.*bending;\n    \n    float s = stripes(uv*vec2(3.8,1.)+vec2(-iTime*.03,0.), StripesOpt(.9,.3,.0))*.5;\n    stripesMask = min(stripesMask, -mainEye-.005);\n    s = smin(s, stripesMask, .01);\n    \n    col = mix(col, vec3(1., .9, .65), fill(innerMask));\n    col = mix(col, vec3(1., .37, .3), fill(s));\n    \n    dist = innerMask;\n    return col;\n}\n\nvec3 horn16(vec3 col, vec2 uv, float mainEye, out float dist) {\n    uv -= vec2(.525,-.15);\n    vec2 cuv = uv+vec2(.0,-.7*uv.x*uv.x)+noise2(uv*9.-iTime*.15)*.01;\n    float mask = circle(cuv, .12);\n    \n    mask = max(mask, -max(abs(cuv.x+.12)-.12, abs(cuv.y)-.12));\n    mask = max(mask, -max(abs(cuv.x)-.12, abs(cuv.y+.12)-.12));\n    \n    float innerMask = mask-.013;\n    mask = -smin(-mask, -mainEye, .05);\n    \n    float stripesMask = innerMask-mix(.005, .02, noise(uv*10.+iTime));\n    innerMask = smin(innerMask, -mainEye, .01);\n    \n    float s = stripes(uv*vec2(3.8,1.)+vec2(-iTime*.03,0.), StripesOpt(.9,.3,.0))*.5;\n    stripesMask = min(stripesMask, -mainEye-.005);\n    s = smin(s, stripesMask, .01);\n    \n    col = mix(col, vec3(.14, .21, .3), fill(mask));\n    col = mix(col, vec3(.292, .8, .653), fill(innerMask));\n    col = mix(col, vec3(.4,.7,1.), fill(s));\n    \n    dist = mask;\n    return col;\n}\n\nvec3 horn17(vec3 col, vec2 uv, float mainEye, float dh11, float dh9, out float dist) {\n    uv -= vec2(.525,-.25);\n    vec2 cuv = uv+vec2(.0,-.7*uv.x*uv.x)+noise2(uv*9.-iTime*.15)*.005;\n    float mask = circle(cuv, .12);\n    \n    mask = max(mask, -max(abs(cuv.x+.12)-.12, abs(cuv.y)-.12));\n    mask = max(mask, -max(abs(cuv.x)-.12, abs(cuv.y+.12)-.12));\n    mask = max(mask, -max(abs(cuv.x)-.25, abs(cuv.y+.2)-.2));\n    \n    float innerMask = mask-.013;\n    mask = -smin(-mask, -mainEye, .05);\n    \n    float stripesMask = innerMask-mix(.005, .015, noise(uv*10.+iTime));\n    innerMask = smin(innerMask, -mainEye, .01);\n    \n    float s = stripes((rot(-.3)*uv)*vec2(3.4,1.)+vec2(-iTime*.03,0.), StripesOpt(.9,.5,.0))*.25;\n    stripesMask = min(stripesMask, -mainEye-.005);\n    float sides = max(dh11, dh9);\n    stripesMask = min(stripesMask, -sides-mix(.0, .01, noise2(uv*10.).x));\n    s = smin(s, stripesMask, .005);\n    \n    col = mix(col, vec3(.14, .21, .3), fill(mask));\n    col = mix(col, vec3(.8, .2, .15), fill(innerMask));\n    col = mix(col, vec3(.95,.8,.1), fill(s));\n    \n    dist = mask;\n    return col;\n}\n\nvec3 horn18(vec3 col, vec2 uv, out float dist) {\n    uv -= vec2(.965,-.12);\n    vec2 cuv = uv+vec2(.0,-.7*uv.x*uv.x)+noise2(uv*9.-iTime*.15)*.01;\n    float mask = circle(cuv, .12);\n    \n    mask = max(mask, -max(abs(cuv.x-.12)-.12, abs(cuv.y)-.12));\n    mask = max(mask, -max(abs(cuv.x)-.12, abs(cuv.y+.12)-.12));\n    \n    float innerMask = mask-.013;\n    \n    float stripesMask = innerMask-mix(.005, .02, noise(uv*10.+iTime));\n    \n    float s = stripes(uv*vec2(3.8,1.)+vec2(-iTime*.03,0.), StripesOpt(.9,.3,.0))*.5;\n    s = smin(s, stripesMask, .01);\n    \n    col = mix(col, vec3(.14, .21, .3), fill(mask));\n    col = mix(col, vec3(.75, .8, .84), fill(innerMask));\n    col = mix(col, vec3(.4,.7,1.), fill(s));\n    \n    dist = mask;\n    return col;\n}\n\nvec3 dots(vec3 col, vec2 uv, out float dist) {\n    vec2 n = noise2(uv*5.+iTime*.4)*.01;\n    dist = circle(uv+noise2(uv*10.+.5)*.05+n-vec2(-.82,.33), .045);\n    dist = max(dist, circle(uv-vec2(-.9,.2), .1));\n    dist = max(dist, circle(uv+noise2(uv*10.+1.7)*.02+n-vec2(-.5,.49), .045));\n    dist = max(dist, circle(uv+noise2(uv*10.+2.7)*.02+n-vec2(-.1,.46), .042));\n    col = mix(col, vec3(.14, .21, .3), fill(dist));\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy-.5)*iResolution.xy/iResolution.y;\n    vec2 mouse = (iMouse.xy/iResolution.xy-.5)*iResolution.xy/iResolution.y;\n    \n    if (iMouse.xy == vec2(0.)) {\n        mouse = vec2(0.,0.17);\n    }\n    \n    float mainEye, subEyes;\n    vec3 mainEyeLayer = drawMainEye(vec3(0.), uv, mouse, mainEye);\n    vec3 subEyesLayer = drawSubEyes(vec3(0.), uv, mouse, subEyes);\n    \n    float backgroundRing = stripesCircle(uv, StripesCircleOpt(.4, .95, 6.5, -.1, 32.7), StripesOpt(.5, 0., 1.));\n    \n    float d, dist = -999.;\n    float dh15, dh11, dh9, dh4;\n    \n    vec3 horn15Layer = horn15(vec3(0.), uv, mainEye, dh15);\n    vec3 horn11Layer = horn11(vec3(0.), uv, mainEye, dh11);\n    vec3 horn9Layer = horn9(vec3(0.), uv, mainEye, dh9);\n    vec3 horn4Layer = horn4(vec3(0.), uv, subEyes, dh4);\n    \n    vec3 col = vec3(1.);\n    col = dots(col, uv, d); dist = max(dist, d);\n    col = horn14(col, uv, mainEye, dh15, d); dist = max(dist, d);\n    col = mix(col, horn15Layer, fill(dh15)); dist = max(dist, dh15);\n    col = horn16(col, uv, mainEye, d); dist = max(dist, d);\n    col = horn17(col, uv, mainEye, dh11, dh9, d); dist = max(dist, d);\n    col = horn6(col, uv, mainEye, d); dist = max(dist, d);\n    col = mix(col, horn11Layer, fill(dh11)); dist = max(dist, dh11);\n    col = horn12(col, uv, mainEye, d); dist = max(dist, d);\n    col = horn1(col, uv, mainEye, dh4, d); dist = max(dist, d);\n    col = horn5(col, uv, dh4, d); dist = max(dist, d);\n    col = horn2(col, uv, mainEye, dh4, d); dist = max(dist, d);\n    col = mix(col, horn4Layer, fill(dh4)); dist = max(dist, dh4);\n    col = horn3(col, uv, mainEye, subEyes);\n    col = horn10(col, uv, mainEye, d); dist = max(dist, d);\n    col = horn18(col, uv, d); dist = max(dist, d);\n    col = mix(col, horn9Layer, fill(dh9)); dist = max(dist, dh9);\n    col = horn8(col, uv, mainEye, d); dist = max(dist, d);\n    col = horn13(col, uv, dist, d); dist = max(dist, d);\n    col = horn7(col, uv, mainEye, d); dist = max(dist, d);\n    col = mix(col, mainEyeLayer, fill(mainEye)); dist = max(dist, mainEye);\n    col = mix(col, subEyesLayer, fill(subEyes)); dist = max(dist, subEyes);\n    \n    col = mix(col, vec3(.14, .21, .3), fill(-dist-mix(.005, .02, noise(uv*10.))));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}