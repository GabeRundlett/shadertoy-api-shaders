{
    "Shader": {
        "info": {
            "date": "1690793330",
            "description": "small bubbles generated from randomness",
            "flags": 0,
            "hasliked": 0,
            "id": "clfcWM",
            "likes": 7,
            "name": "Random bubbles",
            "published": 3,
            "tags": [
                "bubbles"
            ],
            "usePreview": 0,
            "username": "klemek",
            "viewed": 311
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415927\n#define E.001\n\nfloat estep(float threshold,float x,float e){\n    return smoothstep(threshold+e,threshold-e,x);\n}\n\nfloat rand(float seed){\n    float v=pow(abs(seed),6./7.);\n    v*=sin(v)+1.;\n    return fract(v);\n}\n\nvec3 col(float x){\n    return vec3(\n        .5*(sin(x*2.*PI)+1.),\n        .5*(sin(x*2.*PI+2.*PI/3.)+1.),\n        .5*(sin(x*2.*PI-2.*PI/3.)+1.)\n    );\n}\n\nfloat saw(float x){\n    return abs(mod(x+1.,2.)-1.);\n}\n\nfloat circle(vec2 uv,vec2 center,float size){\n    uv-=center;\n    return estep(size,length(uv),E);\n}\n\nvec3 cell(float size0, float color0, vec2 uv, float id, float t)\n{\n    float speed = .1 + rand(id + 4192.) * 3.;\n    vec3 color = col(color0 + (rand(id + 5849.) - .5) * .1);\n    float size = size0 * .1 + rand(id + 9582.) * size0 * .2;\n    float px = size + saw(rand(id + 8457.) + speed * t) * (size0 - size * 2.);\n    float py = size + saw(rand(id + 4628.) + speed * t)* (size0 - size * 2.);\n    float thick = .65 + .2 * rand(id + 8371.);\n\n    return color * (rand(id + 9471.) + .2) * vec3(circle(uv, vec2(px, py), size) - circle(uv, vec2(px, py), size * thick) * .75);\n}\n\n\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    vec2 uv=(fragCoord.xy/iResolution.xy-.5);\n    uv.x*=iResolution.x/iResolution.y;\n    \n    uv += iTime * .1 + 1.;\n    \n    float size = .01;\n    \n    vec3 c = vec3(0);\n    \n    for(int i = 0; i < 7; i++) {\n        c = c * .75 + cell(size, iTime * .1, mod(uv, size), ceil(1728. + uv.x/size) * 7234. + ceil(9374. + uv.y/size) * 2348., iTime);\n    \n        size *= 1.5;\n    }\n    \n    fragColor=vec4(c,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}