{
    "Shader": {
        "info": {
            "date": "1534363752",
            "description": "An old-school glass effect",
            "flags": 32,
            "hasliked": 0,
            "id": "Mt3yDf",
            "likes": 1,
            "name": "Glass FX",
            "published": 3,
            "tags": [
                "oldschool",
                "glasseffect"
            ],
            "usePreview": 0,
            "username": "voidstar69",
            "viewed": 171
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float left = float(iFrame * 111 % int(iResolution.x));\n    //float left = iTime * 100.0;\n    float right = float(iFrame * 3129 % int(iResolution.x));\n\n    float top = float(iFrame * 321 % int(iResolution.y));\n    float bottom = float(iFrame * 543 % int(iResolution.y));\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 col = texture(iChannel0, uv);\n    \n    if(fragCoord.x > left && fragCoord.x < right &&\n       fragCoord.y > top && fragCoord.y < bottom)\n    {\n\t\tcol = col + vec4(left,top,bottom,1) * iTimeDelta * 5.0 / iResolution.x;\n\t\t//col = col + vec4(iTimeDelta * left / iResolution.x * 10.0,iTimeDelta,iTimeDelta,1);\n\t\t//col *= vec4(left / iResolution.x,iTimeDelta,iTimeDelta,1);\n    }\n    \n    fragColor = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}