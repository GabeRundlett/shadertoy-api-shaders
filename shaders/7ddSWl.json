{
    "Shader": {
        "info": {
            "date": "1634186691",
            "description": "Value color noise",
            "flags": 0,
            "hasliked": 0,
            "id": "7ddSWl",
            "likes": 0,
            "name": "Color Value Noise",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "theschwa",
            "viewed": 227
        },
        "renderpass": [
            {
                "code": "float random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nvec3 pos2col ( vec2 ipos ) {\n\n    ipos += vec2(9.,0.); // Just moved to pick some nice colors\n    \n    float r = random( ipos + vec2( 12., 2. ) );\n    float g = random( ipos + vec2(7., 5. ) );\n    float b = random( ipos );\n\n    \n    vec3 col = vec3(r,g,b);\n    return col;\n}\n\nvec3 colorNoise ( vec2 st ) {\n    vec2 ipos = floor( st );\n    vec2 fpos = fract( st );\n\n    \n    // Four corners in 2D of a tile\n    vec3 a = pos2col(ipos);\n    vec3 b = pos2col(ipos + vec2(1.0, 0.0));\n    vec3 c = pos2col(ipos + vec2(0.0, 1.0));\n    vec3 d = pos2col(ipos + vec2(1.0, 1.0));\n    \n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = fpos*fpos*(3.0-2.0*fpos);\n    // u = smoothstep(0.,1.,fpos);\n    \n    // Mix 4 coorners percentages\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = gl_FragCoord.xy/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    vec2 uv = st;\n    \n    float scale = 2.*abs(iTime/15. - floor(iTime/15. + .5) )*50.;\n    st *= scale;\n    \n    vec3 col = colorNoise( st );\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}