{
    "Shader": {
        "info": {
            "date": "1721727435",
            "description": "source  https://www.shadertoy.com/view/lffyWf https://glslsandbox.com/e#50313.7 https://www.shadertoy.com/view/4tyfWy",
            "flags": 0,
            "hasliked": 0,
            "id": "XcfyWl",
            "likes": 5,
            "name": "triangle of particle",
            "published": 3,
            "tags": [
                "triangle",
                "particles",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 244
        },
        "renderpass": [
            {
                "code": "\n   #define resolution iResolution.xy\n   #define time iTime\nvec3 triangle(vec2 uv,float ang,float zoom,float smooo,vec3 c)\n\t\t\n{\n\t \n\tfloat l = length(uv);\n\tfloat a = ang-atan(uv.x, uv.y);\n\tfloat m = 6.28 / 3.;\n\ta = mod(a + m / 2., m) - m / 2.;\n\tfloat d = 0.02*abs(l * cos(a) - zoom);\n \t\t\t      // smooth\n\tc = vec3(smoothstep(.001, smooo, d));\n\treturn  c*a-d/l+m*0.1 ;\n\t\n}\nfloat rand(float n){return fract(sin(n) * 43758.5453123);}\n\nfloat noise(float p){\n\tfloat fl = floor(p);\n  float fc = fract(p);\n\treturn mix(rand(fl), rand(fl + 1.0), fc);\n}\nfloat happy_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (10.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = (2. * gl_FragCoord.xy - resolution) / resolution.y;\n\tfloat t = time;\n      float l = sqrt(length(uv));\n    float a = l * 1.0 + iTime;\n  \n\tvec2 uv2 = (2. * gl_FragCoord.xy - resolution) / resolution.y;   \n    uv2.y+=0.1;\n\tvec2 pos = gl_FragCoord.xy / resolution.xy;\n\tpos = pos * 2. - 1.;\n\t  \n    pos= cos(-uv.x + a) * uv + sin(a) * vec2(-uv.y, uv.x);\n\t\n\tconst int count = 256;\n\tvec3 f = vec3(0.);\n\tfor(int i = 0; i < count; i++){\n\t\t\n\t\tfloat t = time - float(i)*2.1;\n\t\tvec2 c = vec2(tan(t+time), sin(t +time));\n        \tc+= cos(-c.x + a) * c + sin(a) * vec2(-c.y, c.x);\n\t\tc.y *= noise(float(i) + time) * 1.;\n\t\n\n\t\tfloat rad = 0.12;\n\t\n\t\tfloat p = (float(i)) / float(count);\n\t\tf += vec3(.2, 1.,1.1) * 2. / distance(c, pos) * rad;\n\t}\n\tf /= float(count);\n\tvec3    col   =   triangle(uv-vec2(0.0,-0.1),1.05-(t),0.195,0.00,vec3(0.5));\t\n\t\tcol  +=   triangle(uv-vec2(0.0,-0.1),1.05+(t),0.45,0.00,vec3(1.0));\t\n\t \n\tfragColor = vec4(col+f, 1.);\n      uv2 *= 2.0 * ( cos(iTime * 2.0) -2.5); // scale\n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;  // anim between 0.9 - 1.1 \n    fragColor+= vec4(happy_star(uv2, anim) * vec3(0.35,0.2,1.15)*0.1, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}