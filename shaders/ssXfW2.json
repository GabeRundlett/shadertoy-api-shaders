{
    "Shader": {
        "info": {
            "date": "1645396581",
            "description": "A fractal with knot-like patterns.",
            "flags": 0,
            "hasliked": 0,
            "id": "ssXfW2",
            "likes": 9,
            "name": "Fractal knots 4",
            "published": 3,
            "tags": [
                "fractal",
                "knot"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 338
        },
        "renderpass": [
            {
                "code": "//change these constants to get different patterns!\n#define c1 vec3(1.,0.5,1.5)\n\nvec2 triangle_wave(vec2 a,float scale){\n    //a = abs(a);\n    return abs(fract((a+c1.xy)*scale)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 16.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = c1.z;\n    vec2 t2 = vec2(0.);\n    for(int k = 0; k < 9; k++){\n        //uv -= (t2.yx)/scale;\n        uv -= (t2.yx);\n        //uv -= (t2.yx)*(.25+(t2.x+t2.y));\n        \n        t2 = triangle_wave(uv.yx-.5,scale);\n        //t2 = triangle_wave(uv.yx-.5,scale)/(1.+t2);\n\n        //t2 = triangle_wave(uv.yx-.5,scale)*(1.-t2/3.);\n\n        \n        uv.yx = (triangle_wave(uv,scale)-t2)/scale;\n        col.x = abs(uv.y+uv.x-col.x);\n        col = abs(col.yzx);\n        //col.x = abs(uv.y+uv.x-col.x*2.);\n        //col = abs(col.yzx-1.);\n    }\n    fragColor = vec4(col,1.0);   \n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}