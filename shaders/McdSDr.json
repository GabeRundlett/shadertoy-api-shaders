{
    "Shader": {
        "info": {
            "date": "1713815645",
            "description": "radar exercise from the book of shaders",
            "flags": 0,
            "hasliked": 0,
            "id": "McdSDr",
            "likes": 3,
            "name": "radar thingy",
            "published": 3,
            "tags": [
                "radar"
            ],
            "usePreview": 0,
            "username": "nuzunuzu",
            "viewed": 139
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265\n\nfloat circle( vec2 uv, vec2 pos, float rad) {\n    uv -= pos;\n    return smoothstep(rad-3.0, rad-1.0, length(uv)) -\n           smoothstep(rad+1.0, rad+3.0, length(uv));\n}\n\nfloat fillCircle( vec2 uv, vec2 pos, float rad) {\n    uv -= pos;\n    return smoothstep(rad-1.0, rad-3.0, length(uv));\n}\n\nfloat line(vec2 uv, vec2 start, float len, float spinAng) {\n    vec2 l = uv - start;\n    float ang = mod(atan(l.y, l.x), 2.0*PI);\n    float dis = length(l)/len;\n    return step(-len, -length(l)) * \n           (smoothstep(spinAng-0.03*(1.2-dis), spinAng, ang) - \n            smoothstep(spinAng, spinAng+0.03*(1.2-dis), ang));\n}\n\nfloat lineShadow(vec2 uv, vec2 start, float len, float spinAng) {\n    vec2 l = uv - start;\n    float ang = mod(atan(l.y, l.x), 2.0*PI);\n    return step(-len, -length(l)) *\n           (smoothstep(spinAng-PI/3.0, spinAng, ang) +\n            smoothstep(spinAng-PI/3.0+2.0*PI, spinAng+2.0*PI, ang) -\n            step(spinAng, mod(atan(l.y, l.x), 2.0*PI))\n           );\n}\n\nfloat target(vec2 uv, vec2 center, vec2 pos, float spinAngle) {\n    vec2 taPos = pos - center;\n    float delta = mod(spinAngle - atan(taPos.y, taPos.x), 2.0*PI)/PI;\n    float color = fillCircle(uv, pos, 10.0);\n    color += circle(uv, pos, 20.0*delta+10.0);\n    return clamp(color * (1.0-delta), 0.0, 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord;\n    vec2 center = iResolution.xy/2.0;\n\n    float outer = circle(uv, center, 200.0);\n    float inner = fillCircle(uv, center, sin(iTime)*1.0+5.0);\n    \n    float spinAngle = mod(iTime*2.0, 2.0*PI);\n    float spin = lineShadow(uv, center, 200.0, spinAngle) * 0.3;\n    spin += line(uv, center, 200.0, spinAngle);\n    \n    float targets = target(uv, center, center + vec2(120.0, 60.0), spinAngle);\n    targets += target(uv, center, center + vec2(-50.0, -150.0), spinAngle);\n    targets += target(uv, center, center + vec2(-90.0, 100.0), spinAngle);\n    \n    float color = outer + inner + spin + targets; \n    fragColor = vec4(vec3(color), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}