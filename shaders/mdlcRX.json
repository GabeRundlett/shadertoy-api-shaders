{
    "Shader": {
        "info": {
            "date": "1687449142",
            "description": "All year long I'm going to just focus on truchet tiles and the likes! \nthanks @stl for the inversion trick!",
            "flags": 0,
            "hasliked": 0,
            "id": "mdlcRX",
            "likes": 29,
            "name": "Year of Truchets #042",
            "published": 3,
            "tags": [
                "2d",
                "warp",
                "truchet",
                "inversion"
            ],
            "usePreview": 0,
            "username": "byt3_m3chanic",
            "viewed": 293
        },
        "renderpass": [
            {
                "code": "/** \n\n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n    \n    Year of Truchets #042\n    06/22/2023  @byt3_m3chanic\n    Truchet Core \\M/->.<-\\M/ 2023 \n    \n*/\n\n#define R           iResolution\n#define T           iTime\n#define M           iMouse\n#define PI         3.14159265359\n#define PI2        6.28318530718\n\nfloat tspeed=0.,tmod=0.,ga1=0.,ga2=0.,ga3=0.,ga4=0.;\n\nmat2 rot(float a) {return mat2(cos(a),sin(a),-sin(a),cos(a));}\nfloat hash21(vec2 a) {return fract(sin(dot(a,vec2(27.609,57.583)))*43758.5453);}\nfloat box(vec2 p, vec2 a) {vec2 q=abs(p)-a;return length(max(q,0.))+min(max(q.x,q.y),0.);}\nfloat lsp(float b, float e, float t){return clamp((t-b)/(e-b),0.,1.); }\nfloat eoc(float t){return (t = t-1.)*t*t+1.; }\n\n//@iq of hsv2rgb\nvec3 hsv2rgb( in vec3 c ) {\n    vec3 rgb = clamp( abs(mod(c.x*6.+vec3(0,4,2),6.)-3.)-1., 0., 1.0 );\n    return c.z * mix( vec3(1), rgb, c.y);\n}\n\nvoid mainImage( out vec4 O, in vec2 F ) {\n    \n    tspeed = T*.3;\n    tmod = mod(tspeed,12.5);\n\n    vec2 uv = (2.*F-R.xy)/max(R.x,R.y);\n\n    // @stb polar thing.. \n    uv.x -= .25;\n    uv /= uv.x*uv.x + uv.y*uv.y;\n    uv.x += 2.;\n    \n    // inversion\n    float scale = 1.2726;\n    uv *= rot(-T*.035);\n    uv = vec2(log(length(uv)), atan(uv.y, uv.x))*scale;\n    uv.x -= T*.2;\n \n    float px = fwidth(uv.x); \n    \n    // std truchet stuff\n    vec2 id = floor(uv), q = fract(uv)-.5;\n    float rnd = hash21(id.xy);\n    float ck =mod(id.x+id.y,2.)*2.-1.;\n\n    float sn = length(id*.25)+hash21(id.yx)*11.;\n    sn = mod(sn,10.);\n    \n    float t1 = lsp(sn,sn+.5,tmod);\n    float t2 = lsp(sn+2.,sn+2.5,tmod);\n    t1 = eoc(t1); t1 = t1*t1*t1;\n    t2 = eoc(t2); t2 = t2*t2*t2;\n    q.xy*=rot((t1+t2)*1.5707);\n    \n    // main pattern\n    if(rnd>.5) q.y = -q.y;\n    rnd=fract(rnd*32.232);\n    \n    vec2 u2 = vec2(length(q-.5),length(q+.5));\n    vec2 q2 = u2.x<u2.y ? q-.5 : q+.5;\n    \n    float tk = .1275;\n    float d1 = abs(length(q2)-.5)-tk;\n    float d3 = length(q)-.485;\n    \n    if(rnd>.85) d1 = min(length(q.x)-tk,length(q.y)-tk);\n    \n    float d4=max(d1,d3);\n    d1=abs(d1)-.035;\n    d1=max(d1,d3);\n   \n    rnd=fract(rnd*32.232);\n\n    // color mixdown\n    vec3 C = hsv2rgb(vec3((uv.x*.025),.9,.1));\n    vec3 klr = hsv2rgb(vec3((rnd*.15)+(uv.x*.025),1.,.5));//vec3(.282,.114,.039)\n    vec3 clr = mix(vec3(.02,.341,.02),klr,rnd);//\n    C = mix(C,C*.75,smoothstep(.03+px,-px,d3-.035));\n    C = mix(C,clr,smoothstep(px,-px,d3));\n    C = mix(C,vec3(.5),smoothstep(px,-px,d1));\n    C = mix(C,klr*.425,smoothstep(px,-px,d4));\n    C = mix(C,vec3(.5),smoothstep(px,-px,abs(d3)-.015));\n\n    // gamma and output\n    C = pow(C,vec3(.4545));\n    O = vec4(C,1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}