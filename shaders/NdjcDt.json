{
    "Shader": {
        "info": {
            "date": "1644330527",
            "description": "Shyguy needs love! Click (or drag) on the hearts on the screen to give them to Shyguy!",
            "flags": 32,
            "hasliked": 0,
            "id": "NdjcDt",
            "likes": 19,
            "name": "Approval Seeking Behavior SB",
            "published": 3,
            "tags": [
                "bitmap",
                "love",
                "shyguy",
                "approvalseeking"
            ],
            "usePreview": 0,
            "username": "IWBTShyGuy",
            "viewed": 414
        },
        "renderpass": [
            {
                "code": "// Copyright Â© 2022 IWBTShyGuy\n// Attribution 4.0 International (CC BY 4.0)\n\n// bitmap reference: https://www.spriters-resource.com/\n//\n// font reference:\n// - https://www.shadertoy.com/view/4dtGD2\n// - https://www.shadertoy.com/view/4s3fzl\n\nconst float PI = 3.141592653;\n\nconst uint BITMAP[] = uint[](\n    0u,0u,0u,1431307605u,1430258005u,1426073685u,1409288725u,1342259845u,1074090145u,1397760u,5592320u,22369600u,89478480u,0u,0u,0u,\n    0u,0u,5506368u,22353296u,89478820u,89478548u,89478484u,22369616u,5592384u,1398016u,349184u,86016u,16384u,0u,0u,0u,\n    5592320u,22544208u,111771636u,447381501u,447373300u,1704367440u,1704367444u,1789566964u,1789550580u,1516928976u,443113428u,1990557684u,2102785533u,1476222933u,534140240u,89826560u,\n    0u,5592320u,22544208u,111771636u,447381501u,447373300u,1704367440u,1704367444u,1789566964u,1789550580u,1516928976u,443113428u,1990557684u,1968668509u,1501517221u,1788171924u,\n    0u,0u,0u,0u,0u,1118481u,0u,0u,286331136u,69905u,0u,304087040u,288638019u,273u,536870912u,1144136226u,\n    286475332u,1u,1717903904u,1145319974u,1119044u,1965162496u,628586359u,1145324611u,275u,2004317778u,1144153975u,288638017u,2002919424u,2004318071u,1142178853u,536875332u,\n    1450594933u,1126659666u,288637236u,576070144u,1965172085u,289682007u,570425619u,577905190u,2187817506u,1119032u,572989952u,1914839666u,411669111u,570425344u,577905191u,2457301538u,\n    34969u,576135680u,1965172085u,2290647671u,570425344u,1450594919u,1114076754u,4420u,2004230656u,2004318071u,336872023u,570425344u,2004318069u,1126659959u,69956u,2003968000u,\n    2004317991u,340018213u,536870913u,1999075154u,1145202551u,1127492u,1965101056u,628586279u,1145324612u,285212689u,1734681139u,1145324069u,18039876u,873730320u,1144136226u,1145324612u,\n    1091567892u,1145324564u,1125205060u,18105412u,1142178064u,1145324612u,1144066356u,286261523u,1713652497u,1145324566u,1118481u,571543808u,577205794u,288559394u,1u,573850641u,\n    1145323810u,70724u,823201792u,1145324612u,1270551364u,570425361u,1144067413u,1527989316u,18068821u,1431654912u,860111637u,1431655761u,570425618u,827675989u,1431441715u,1189205u,\n    572661760u,17895970u,572662306u,0u,268435456u,1118481u,0u,0u,286331424u,4369u,0u,572661760u,288638002u,17u,572522496u,841377381u,\n    17904708u,0u,2004317474u,1145251191u,4404u,1985085440u,1735882615u,340018226u,536870913u,2004318050u,1143306103u,1131588u,1383407616u,1985107574u,1145324327u,570425620u,\n    628433494u,1113027874u,288637252u,572924416u,1914839666u,340013671u,570429764u,577905191u,2188866082u,289608776u,572989952u,1914839666u,881431159u,570429713u,628433495u,2457302306u,\n    17905817u,1382490624u,1985107574u,412648039u,570425345u,2004318070u,844593015u,17897603u,2004165136u,2004318071u,1091846951u,588321076u,1999075186u,337999735u,323241009u,2001871889u,\n    1735882535u,1145319746u,1141969732u,1999074595u,1145316727u,289686596u,573850384u,1109747557u,1145324612u,1091567892u,572662068u,1145324594u,18039876u,1125388544u,1145324612u,876889156u,\n    268435473u,1145324561u,1145324612u,70468u,1141964800u,1145324612u,288638020u,0u,1712534544u,876884758u,273u,554696704u,577205794u,286462242u,0u,573809425u,\n    1144197410u,69946u,1244729344u,1152033860u,323241028u,268435457u,1145319697u,329532484u,1129403u,357900800u,1145324609u,3042269972u,1375731729u,1125864789u,1431385156u,1201493u,\n    1431642624u,288567733u,626349490u,536870930u,287449634u,572653841u,8738u,0u,0u,0u,0u,0u,0u,286331136u,286331153u,0u,\n    0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,286331152u,286331153u,69905u,0u,0u,\n    0u,0u,0u,0u,0u,0u,0u,0u,0u,841027856u,858993459u,286401331u,1u,0u,0u,0u,\n    0u,0u,0u,0u,0u,0u,0u,857805056u,1145324579u,858932292u,4370u,0u,0u,0u,0u,0u,\n    0u,0u,0u,0u,0u,857804800u,1716864035u,1146447462u,17969970u,0u,0u,0u,0u,0u,0u,0u,\n    0u,0u,0u,839974912u,2004239395u,2004318071u,590496871u,17u,0u,0u,0u,0u,0u,0u,0u,0u,\n    0u,554696704u,2004173363u,2004318071u,609711991u,70195u,0u,0u,0u,0u,0u,0u,0u,0u,0u,285212672u,\n    2003051314u,2004318071u,2004318071u,287519302u,0u,0u,0u,0u,0u,0u,0u,0u,0u,268435456u,1967338257u,2004318071u,\n    2004318071u,859068279u,273u,0u,0u,0u,0u,0u,0u,0u,0u,0u,1110651152u,2004318071u,2004318071u,611809143u,\n    70451u,0u,0u,0u,0u,0u,0u,0u,0u,0u,858919168u,2004318052u,2004318071u,2004318071u,287519558u,0u,\n    0u,0u,0u,0u,0u,0u,0u,0u,856752128u,1215788067u,2004318276u,2219083639u,858933111u,17u,0u,0u,\n    0u,0u,0u,0u,0u,0u,554696704u,2541110067u,2006205508u,1145665399u,879196484u,70195u,0u,0u,0u,0u,\n    0u,0u,0u,0u,268435456u,2000827169u,1145324616u,1149728632u,2005156932u,17969956u,0u,0u,0u,0u,0u,0u,\n    0u,0u,0u,1680023824u,1145324663u,1199010884u,1145324612u,305284727u,1u,0u,0u,2863267840u,0u,0u,0u,0u,\n    0u,2987462656u,1145337716u,2004108356u,1145324615u,726103876u,273u,0u,0u,2852126720u,43690u,178956970u,0u,0u,0u,2853175296u,\n    1148679754u,1950630980u,1145325431u,1735869508u,109220u,0u,0u,0u,178955946u,2863311360u,2730u,0u,0u,268435456u,2004307402u,1145324612u,\n    1145534324u,2000962628u,28103799u,0u,0u,0u,2841029280u,1722417322u,11184725u,0u,0u,0u,2003094016u,1145325687u,2272753732u,2219066436u,\n    2890299255u,0u,0u,0u,2522521600u,2863311446u,2863031914u,10u,0u,0u,1984167936u,1150777207u,2004325444u,1145325943u,1735882617u,68u,\n    0u,0u,1788870656u,2863224470u,1717988010u,43685u,0u,0u,1413480448u,2004318071u,2004370504u,1149728631u,2004318084u,279927u,0u,0u,\n    2852126720u,1767282026u,1722458282u,178939750u,0u,0u,1073741824u,4008605556u,2004318071u,2004318071u,4000806775u,71792622u,0u,0u,0u,2522441130u,\n    2862656101u,2792842858u,170u,0u,0u,4008146244u,2004319982u,2004318071u,3883366263u,1467936494u,68u,0u,0u,1767287456u,11163285u,2003200682u,\n    698982u,0u,0u,3883222016u,2004807406u,2004318071u,2004318071u,2129587943u,17511u,0u,0u,2522521600u,178674021u,1722460672u,2863031927u,0u,\n    0u,1984167936u,2012147319u,2004318071u,2004318071u,4008605559u,4482935u,0u,0u,1789526016u,2775144086u,2862612490u,1449555818u,170u,0u,1091637248u,\n    2004318070u,2004318071u,2004318071u,2004318071u,342325111u,17u,0u,2852126720u,1704355430u,2730u,1719102122u,43622u,0u,286331136u,2004317761u,2004318071u,\n    2004318071u,2004318071u,1735882615u,1118484u,0u,2684354560u,1717986906u,43606u,2007670784u,178939494u,0u,554766592u,2004173346u,2004318071u,2004318071u,2004318071u,\n    2004318071u,287450199u,17u,0u,1717988010u,11183718u,2852126720u,2774951541u,10u,554766336u,1967338303u,2004318071u,2004318071u,2004318071u,2004318071u,859068279u,\n    1118499u,0u,1717938688u,178611814u,0u,1717992106u,2726u,4044423168u,1127428915u,2004318052u,2004318071u,2004309367u,2004318071u,877033335u,287519539u,1u,\n    1521090560u,2858837606u,10u,1722458112u,697958u,554762240u,858993459u,2004309027u,2004318071u,2000975735u,2004318071u,1165457271u,858993458u,4371u,2684354560u,1449551274u,\n    170u,2852126720u,178611813u,554766336u,858993663u,1984181043u,2004318071u,1148680055u,2004318071u,1735882615u,858993476u,287306547u,1u,1717938688u,43686u,0u,\n    2774948522u,286326794u,858993459u,1127428915u,2004318052u,2004318071u,2004318020u,2004318071u,858993734u,858993459u,69919u,1721368576u,698778u,0u,296394752u,286263969u,\n    858993458u,858993459u,2004239411u,2004318071u,2004309367u,2004318071u,858997863u,858993459u,286405427u,1788870656u,178956886u,0u,286261248u,285875131u,858993649u,858993459u,\n    1413690163u,2004318327u,2004318071u,2272753527u,859063671u,858993459u,4080218931u,2684354833u,2863310442u,0u,285212672u,437400353u,858993425u,858993459u,858993459u,1989497924u,\n    2004318071u,1735882615u,860112217u,858993459u,858993459u,1119027u,2702272938u,0u,268435456u,288568081u,858988970u,858993459u,858993459u,1145316147u,2004317784u,1735882615u,\n    843334789u,858993459u,858993459u,288568115u,555133457u,273u,0u,590553360u,872064337u,858993459u,858993459u,2452828979u,1700021401u,1449621366u,697582661u,858993459u,\n    858993459u,858993459u,379232531u,1122098u,0u,859508992u,2857786035u,858993459u,858993459u,2570269491u,1150711385u,1145324612u,1718174788u,859019669u,858993459u,858993459u,\n    1788949299u,301150998u,0u,839974912u,1722463027u,858993573u,858993459u,2570269491u,1771534181u,1968600951u,2506585975u,2572580713u,858993459u,858993459u,2939368243u,858986857u,\n    283u,2970615808u,2703438655u,859022693u,858993459u,2570269491u,1503098725u,1969715063u,2004318071u,2004456823u,859019606u,858993459u,858993459u,856778410u,70195u,268435456u,\n    590561057u,866802338u,871576371u,2469606195u,1501001557u,1450669942u,2004318071u,2507634551u,966092663u,4080218931u,858993459u,827746867u,17969971u,0u,858988816u,984232499u,\n    1060320051u,858993459u,2541188697u,1735882613u,2004318054u,2004318071u,1735883095u,858993557u,858996531u,2775200563u,305345329u,1u,857804800u,858993459u,590558003u,858993459u,\n    2004317587u,2004318041u,2004317798u,2004318071u,1989506935u,859395703u,857944883u,2855482163u,858993578u,274u,2970615808u,858993471u,858993459u,858993467u,2004310323u,2004317591u,\n    2004313719u,2004318071u,2524411767u,2506585973u,858993459u,858993467u,858993459u,72691u,268435456u,858996497u,858993459u,858993587u,2003432243u,2004326007u,2003199863u,2004318071u,\n    2004318071u,2004314455u,858996630u,859026227u,858993459u,17953587u,0u,858919168u,858993459u,859042099u,1989358387u,2003400567u,1718056823u,2004318071u,2004318071u,2002347895u,\n    859395703u,825439027u,858993459u,287519539u,0u,554762240u,858993459u,858919731u,2469606195u,2037872502u,1735882615u,2004318054u,2004318071u,1499953015u,4184307575u,858993459u,\n    858993427u,523449139u,17u,268435456u,858993185u,856765235u,858993459u,1467447199u,2004318073u,2004317798u,2004318071u,1735882615u,1735882645u,858993557u,871441203u,858993459u,\n    274u,0u,841093392u,554840883u,858993459u,2004314419u,2004317847u,2004248183u,2004318071u,2004318071u,2004260199u,859805287u,288568115u,858993458u,70131u,0u,\n    554762240u,304226850u,858993649u,1771647795u,2004326263u,1986426743u,2004318071u,2004318071u,1989502583u,4183193463u,858993459u,858923282u,1118755u,0u,268435456u,572662033u,\n    858993169u,1496527667u,2006411669u,1719105399u,2004318070u,2004318071u,2505467767u,1719105398u,858993557u,572596019u,17900066u,0u,0u,286331136u,858919185u,858993459u,\n    2526373465u,2004318071u,2004318054u,2004318071u,2576980374u,2004317845u,859018598u,287519539u,286401058u,0u,0u,285212672u,1058083089u,858993459u,1449548083u,2004318105u,\n    2004318071u,2004318071u,1717983591u,2004261225u,871978599u,590558003u,286400785u,1u,0u,0u,2970681344u,858993459u,1704932147u,2004194662u,2004318071u,2004318071u,\n    1717933943u,1989572966u,1066755703u,858993459u,286331379u,17u,0u,0u,285212672u,858993441u,4080218931u,2036754009u,2004318071u,2004318071u,1721202551u,2524538486u,\n    4187317878u,858993459u,286995251u,17u,0u,0u,0u,858988817u,858993459u,1717149491u,1719105429u,2576980377u,2524411766u,1768322918u,4187317849u,858993459u,\n    305345331u,17u,0u,0u,0u,857805056u,858993459u,2670932787u,2576963993u,2004313753u,1734973798u,1718056537u,4187575701u,858993459u,858993459u,4370u,\n    0u,0u,0u,554762240u,858993459u,858993459u,1771238195u,2004318071u,2523363191u,1719104921u,1067030933u,858993459u,858993459u,1118771u,0u,0u,\n    0u,285212672u,858996513u,858993459u,858993459u,2004317842u,2004318071u,1735882615u,859777366u,858993459u,858993459u,286454579u,0u,0u,0u,0u,\n    858923281u,858993459u,858993459u,2004427571u,2004318071u,2004318071u,858953319u,858993459u,858993459u,304296755u,17u,0u,0u,0u,841027840u,858993459u,\n    858993459u,1496527667u,2004318071u,2004318071u,865429111u,858993459u,858993459u,590558003u,4370u,0u,0u,0u,2970681344u,858993442u,858993459u,858993459u,\n    1719104927u,1717986918u,4183189366u,858993459u,858993459u,858993459u,1121058u,0u,0u,0u,268435456u,858925841u,858993459u,858993459u,1431958323u,2576980373u,\n    2505397593u,858993471u,858993459u,858993459u,17936931u,0u,0u,0u,0u,722538768u,858996722u,858993459u,2670932787u,859777433u,2576978675u,858993657u,\n    858993459u,4080218931u,286990895u,1u,0u,0u,0u,286326784u,286331153u,859828753u,858993459u,858993459u,858993459u,858993459u,858993459u,288355123u,\n    286331153u,17u,0u,0u,0u,286326784u,859042481u,286335743u,858993441u,858993459u,858993459u,858993459u,858993459u,286331443u,791887858u,1118491u,\n    0u,0u,0u,286261248u,554766609u,858993458u,571544307u,858993459u,858993459u,858993459u,858993459u,1059131682u,590558003u,286331154u,17u,0u,\n    0u,285212672u,4080267793u,857805074u,590558003u,4062318865u,858993471u,858993459u,573567795u,858919185u,573780787u,4081000721u,69906u,0u,0u,268435456u,\n    858993169u,523449139u,858993441u,287454003u,286331153u,286331153u,286331153u,858993169u,305345331u,858996497u,286405427u,0u,0u,0u,858988816u,858993459u,\n    857808691u,858993459u,1145324067u,1431655765u,1145324629u,858993442u,305345331u,858993649u,590558003u,17u,0u,0u,871436544u,858993459u,322122547u,858993457u,\n    590558003u,1145324610u,574899268u,858993459u,573780787u,858993457u,858993459u,4399u,0u,0u,571539456u,858993471u,858993459u,4080185907u,858993459u,587150131u,\n    872358434u,858993459u,590558003u,858993467u,858993459u,17965811u,0u,0u,285212672u,2863276578u,858989226u,573780787u,859042355u,858993459u,858993459u,858993459u,\n    858993459u,858993458u,2863276595u,304261802u,1u,0u,0u,3433734673u,715836620u,858993459u,4062392883u,858993459u,858993459u,858993459u,791884595u,858993459u,\n    3433734707u,2865552861u,274u,0u,0u,3721046688u,3722304989u,858991276u,857944883u,859042338u,858993459u,858993459u,804467507u,858993458u,3721044531u,3722304989u,\n    11184845u,0u,0u,3721046528u,3722304989u,984407517u,858993459u,572662579u,858993663u,858993459u,587150131u,858993442u,3721044787u,3722304989u,2865618397u,10u,\n    0u,3702169600u,3722304989u,3722304989u,858993580u,791884595u,4280427042u,858993471u,572665855u,858993186u,3721016115u,3722304989u,3722304989u,43692u,0u,3399483392u,\n    3722304989u,3722304989u,859491805u,858993459u,572662323u,572662306u,572662306u,858989090u,3718460211u,3722304989u,3722304989u,11193565u,0u,2852126720u,3722304986u,3722304989u,\n    2900221405u,858993459u,586363699u,572662306u,572662306u,858923554u,3660788531u,3722304989u,3722304989u,2865552861u,10u,0u,3722304170u,3722304989u,3722304989u,858995405u,\n    858993459u,572662307u,572662306u,857874978u,2738041651u,3722304989u,3722304989u,3437092317u,2730u,0u,3722095104u,3722304989u,3722304989u,866962909u,590558003u,586363711u,\n    572662306u,1059201570u,858993459u,3722304970u,3722304989u,3722304989u,699084u,0u,3668574208u,3722304989u,3722304989u,2899172829u,858993458u,572665651u,572662306u,1059201570u,\n    858993459u,3722304035u,3722304989u,3722304989u,178965709u,0u,2852126720u,3722304970u,3722304989u,3453869533u,858991308u,4281545523u,572662306u,1072833058u,858993459u,3722224179u,\n    3722304989u,3722304989u,2865548765u,10u,0u,3722291882u,3722304989u,3722304989u,555404492u,858993459u,4294914867u,859832319u,858993459u,3701550899u,3722304989u,3722304989u,\n    2899107293u,170u,0u,3702169600u,3722304989u,3722304989u,718064861u,858988827u,858993459u,858993459u,858993459u,2870030131u,3722304988u,3722304989u,3436043741u,43692u,\n    0u,2862612480u,3722304970u,3722304989u,3435974109u,555426346u,858993471u,858993459u,858993459u,722539251u,3722304674u,3722304989u,3437092317u,699084u,0u,0u,\n    3722226346u,3722304989u,3435978205u,572664748u,1072828699u,858993459u,4080218931u,582029615u,3722097186u,3722304989u,3453869533u,11185356u,0u,0u,3400179712u,3722304989u,\n    3436043741u,572697804u,296886818u,872358417u,587150131u,573247761u,3391234594u,3722304989u,3453869533u,178965708u,0u,0u,2852126720u,3722300074u,3436043741u,582667468u,\n    572662306u,286374690u,286331153u,572701457u,572662306u,3722304683u,3437092317u,2863320268u,0u,0u,0u,3400182432u,3435978204u,732744908u,572662306u,572662306u,\n    572662306u,572662306u,572662306u,3721048610u,3435978205u,2863320268u,10u,0u,0u,2862612480u,3435965098u,2863451340u,2970685713u,572662459u,572662306u,3149013538u,\n    286331153u,2702250257u,3435973834u,2863312076u,10u,0u,0u,0u,2863311520u,2863311530u,286331162u,286331153u,286331153u,286331153u,286331153u,286331153u,\n    2863311377u,2863311530u,10u,0u,0u,0u,2852126720u,2863311530u,170u,286331152u,286331153u,286331153u,286331153u,0u,2862612480u,2863311530u,0u,0u,0u\n);\n\nconst int FONT[] = int[](\n 0x69f99, 0x79797, 0xe111e, 0x79997, 0xf171f, 0xf1711, 0xe1d96, 0x99f99, \n 0xf444f, 0x88996, 0x95159, 0x1111f, 0x9f999, 0x9bd99, 0x69996, 0x79971,\n 0x69b5a, 0x79759, 0xe1687, 0xf4444, 0x99996, 0x999a4, 0x999f9, 0x99699,\n 0x99e8e, 0xf843f, 0x6bd96, 0x46444, 0x6942f, 0x69496, 0x99f88, 0xf1687,\n 0x61796, 0xf8421, 0x69696, 0x69e84, 0x66400, 0x0faa9, 0x0000f, 0x00600,\n 0x0a500, 0x02720, 0x0f0f0, 0x08421, 0x33303, 0x69404, 0x00032, 0x00002,\n 0x55000, 0x00000, 0x00202, 0x42224, 0x24442);\n\nconst vec4 BLACK = vec4(0, 0, 0, 1);\nconst vec4 SEMI_WHITE = vec4(252, 252, 252, 255) / 255.0;\nconst vec4 SEMI_RED = vec4(252, 0, 0, 255) / 255.0;\n\nconst vec4 SHYGUY_BLACK = vec4(40, 40, 40, 255) / 255.0;\nconst vec4 SHYGUY_RED = vec4(216, 40, 0, 255) / 255.0;\n\nconst vec4 STEEL_RED = vec4(228, 0, 127, 255) / 255.0;\nconst vec4 STEEL_HIGHLIGHT = vec4(252, 127, 252, 255) / 255.0;\n\nconst vec4 RED_HIGHLIGHT = vec4(252, 127, 127, 255) / 255.0;\n\nconst vec4 BAR_FRAME = vec4(228, 228, 228, 255) / 255.0;\n\nconst vec4 STORY_PALLET[] = vec4[](\n    vec4(0),\n    vec4(0x63, 0x08, 0x08, 0xff) / 255.0,\n    vec4(0x21, 0x21, 0x21, 0xff) / 255.0,\n    vec4(0x84, 0x08, 0x10, 0xff) / 255.0,\n    vec4(0xce, 0x29, 0x31, 0xff) / 255.0,\n    vec4(0x63, 0x63, 0x84, 0xff) / 255.0,\n    vec4(0xb5, 0xc6, 0xd6, 0xff) / 255.0,\n    vec4(0xe7, 0xe7, 0xef, 0xff) / 255.0,\n    vec4(0x5a, 0x21, 0x08, 0xff) / 255.0,\n    vec4(0xd6, 0x9c, 0x39, 0xff) / 255.0,\n    vec4(0xa5, 0x18, 0x21, 0xff) / 255.0,\n    vec4(0x42, 0x31, 0x63, 0xff) / 255.0\n);\n\nconst vec4 GOURMET_PALLET[] = vec4[](\n    vec4(0),\n    vec4(0x39, 0x08, 0x18, 0xff) / 255.0,\n    vec4(0x7b, 0x21, 0x42, 0xff) / 255.0,\n    vec4(0xad, 0x31, 0x5a, 0xff) / 255.0,\n    vec4(0x21, 0x21, 0x21, 0xff) / 255.0,\n    vec4(0x8c, 0x9c, 0xa5, 0xff) / 255.0,\n    vec4(0xb5, 0xbd, 0xc6, 0xff) / 255.0,\n    vec4(0xd6, 0xd6, 0xd6, 0xff) / 255.0,\n    vec4(0x6b, 0x7b, 0x84, 0xff) / 255.0,\n    vec4(0x42, 0x52, 0x5a, 0xff) / 255.0,\n    vec4(0x08, 0x10, 0x39, 0xff) / 255.0,\n    vec4(0x63, 0x18, 0x29, 0xff) / 255.0,\n    vec4(0x29, 0x4a, 0x7b, 0xff) / 255.0,\n    vec4(0x39, 0x6b, 0xa5, 0xff) / 255.0,\n    vec4(0xce, 0x73, 0x73, 0xff) / 255.0,\n    vec4(0x94, 0x21, 0x4a, 0xff) / 255.0\n);\n\nconst int I_want_your_Love[] = int[](\n    73, 32, 119, 97, 110, 116, 32, 121, 111, 117, 114, 32, 76, 111, 118, 101\n);\n\nconst int CLICK[] = int[](67, 108, 105, 99, 107, 32, 127);\n\nstruct ShyGuyStatus {\n    int mode;\n    int currentHeart;\n    float elapsed;\n} status;\n\nvoid initStatus() {\n    vec4 data = texelFetch(iChannel0, ivec2(0, 1), 0);\n    int currentHeart = int(data.x); float elapsed = iTime - data.y;\n    bool thumbnail = texelFetch(iChannel0, ivec2(1, 1), 0).x == 1.0;\n    if (thumbnail) status = ShyGuyStatus(1, 3, 1.0);\n    else if (currentHeart < 8) status = ShyGuyStatus(0, currentHeart, elapsed);\n    else if (currentHeart < 24) status = ShyGuyStatus(1, currentHeart - 8, elapsed);\n    else if (currentHeart < 56) status = ShyGuyStatus(2, currentHeart - 24, elapsed);\n    else status = ShyGuyStatus(3, 0, elapsed);\n}\n\nvec4 steel(in ivec2 u) {\n    switch (BITMAP[15 - u.y]>>2*u.x&3u) {\n        case 0u: return STEEL_RED;\n        case 2u: return STEEL_HIGHLIGHT;\n        default: return vec4(0);\n    }\n}\n\nvec4 bitmapShyGuy(in ivec2 u, in int idx, in bool red) {\n    switch (BITMAP[32 + 15 - u.y + (idx % 2) * 16]>>u.x*2&3u) {\n        case 1u: return BLACK;\n        case 2u: return SEMI_WHITE;\n        case 3u: return red ? SHYGUY_RED : SHYGUY_BLACK;\n        default: return vec4(0);\n    }\n}\n\nvec4 storyShyGuy(in ivec2 u, in int idx) {\n    idx = 512 + 28 * (32 - u.y + (idx % 2) * 33) + u.x;\n    u = ivec2(idx % 8, idx / 8);\n    return STORY_PALLET[BITMAP[u.y]>>u.x*4&15u];\n}\n\nvec4 groumetGuy(in ivec2 u) {\n    int idx = 2360 + 114 * (93 - u.y) + u.x;\n    u = ivec2(idx % 8, idx / 8);\n    return GOURMET_PALLET[BITMAP[u.y]>>u.x*4&15u];\n}\n\nvec4 heart(in ivec2 u) {\n    switch (BITMAP[31 - u.y]>>u.x*2&3u) {\n        case 1u: return SEMI_RED;\n        case 2u: return RED_HIGHLIGHT;\n        default: return vec4(0);\n    }\n}\n\nvoid collapse(inout ivec2 v, in int idx, in float gen) {\n    float t = max(status.elapsed - 1.5, 0.0),\n    r = PI * noise11(float(idx) + gen);\n    v -= ivec2(vec2(cos(r) * t, sin(r) * t - t * t) * 64.0);\n}\n\nvec4 renderBase(in ivec2 u) {\n    vec4 res = vec4(0);\n    for (int i = -6; i < 5; i++) {\n        ivec2 v = u - ivec2(i * 16 + 8, 3 * 16);\n        if (status.mode == 3) collapse(v, i, 0.0);\n        if (v == abs(v) && 15 - v == abs(15 - v)) res = max(res, steel(v));\n    }\n    for (int i = 0; i < 3; i++) {\n        ivec2 v = u - ivec2(-72, i * 16);\n        if (status.mode == 3) collapse(v, i, -100.0);\n        if (v == abs(v) && 15 - v == abs(15 - v)) res = max(res, steel(15 - v.yx));\n        v = u - ivec2(56, i * 16);\n        if (status.mode == 3) collapse(v, i, 100.0);\n        if (v == abs(v) && 15 - v == abs(15 - v)) res = max(res, steel(15 - v.yx));\n    }\n    return res;\n}\n\nvec4 renderShyguy(in ivec2 u) {\n    vec4 res = vec4(0);\n    switch (status.mode) {\n        case 0:\n        case 1: {\n            u -= ivec2(-8, 64);\n            ivec2 size = ivec2(16, 16);\n            if (u == abs(u) && size - u - 1 == abs(size - u - 1)) {\n                int idx = int(mod(iTime * 2.0, 4.0));\n                if (idx / 2 == 1) u.x = 15 - u.x;\n                res = bitmapShyGuy(u, idx % 2, status.mode == 1);\n            }\n            break;\n        }\n        case 2: {\n            u -= ivec2(-14, 64);\n            ivec2 size = ivec2(28, 33);\n            if (u == abs(u) && size - u - 1 == abs(size - u - 1)) {\n                int idx = int(mod(iTime * 2.0, 4.0));\n                if (idx / 2 == 1) u.x = 27 - u.x;\n                res = storyShyGuy(u, idx % 2);\n            }\n            break;\n        }\n        case 3: {\n            float t = max(status.elapsed - 1.5, 0.0);\n            u -= ivec2(-57, 64.0 - 64.0 * t * t);\n            ivec2 size = ivec2(114, 94);\n            if (u == abs(u) && size - u - 1 == abs(size - u - 1)) {\n                res = groumetGuy(u);\n            }\n            break;\n        }\n    }\n    return int(min(status.elapsed * 30.0, 9.0)) % 2 == 0 && res.x != 0.0 ? vec4(1) : res;\n}\n\nivec2 getHeartPosition(in int i) {\n    vec4 data = texelFetch(iChannel0, ivec2(i, 0), 0);\n    vec2 originalPosition = data.xy; float t = data.w;\n    return t == 1.0 ? ivec2(-100) : ivec2(mix(originalPosition, vec2(0, 72), t));\n}\n\nvec4 renderHeart(in ivec2 u) {\n    vec4 res = vec4(0);\n    for (int i = 0; i < 20; i++) {\n        ivec2 v = u - getHeartPosition(i) + 8;\n        res = abs(v) == v && abs(16 - v) == 16 - v ? max(heart(v), res) : res;\n    }\n    return res;\n}\n\nstruct DChar { ivec2 uv; int idx; };\nint codeTranslate(int c) { return c == 127 ? 49 : c < 97 ? c < 65 ? c == 32 ? 49 : c : c - 65 : c - 97; }\nvec4 letter(in ivec2 u, in int c) { return vec4(c = u.x < 4 ? (FONT[c]>>4*u.y+u.x)&1 : 0, c, c, 1); }\nDChar getDiscreteCenterLettersIndex(in ivec2 u, in int size, in int yBase, in int len) {\n    u = (u - ivec2(-5 * size * len / 2, yBase)) / size;\n    int idx = (u.x + 5) / 5 - 1;\n    u.x -= idx * 5;\n    idx = u == abs(u) && 4 - u == abs(4 - u) && 0 <= idx && idx < len ? idx : -1;\n    return DChar(u, idx);\n}\n\nvec4 renderLetter(in ivec2 u) {\n    DChar c = getDiscreteCenterLettersIndex(u, 2, 220, I_want_your_Love.length());\n    if(c.idx != -1) return letter(c.uv, codeTranslate(I_want_your_Love[c.idx]));\n    c = getDiscreteCenterLettersIndex(u, 2, 190, CLICK.length());\n    if(c.idx != -1) return letter(c.uv, codeTranslate(CLICK[c.idx]));\n    return vec4(0);\n}\n\nfloat heartFillRatio() {\n    float fCurrentHeart = float(status.currentHeart);\n    switch (status.mode) {\n        case 0: return fCurrentHeart / 8.;\n        case 1: return fCurrentHeart / 16.;\n        case 2: return fCurrentHeart / 32.;\n        default: return 1.;\n    }\n}\n\nvec4 renderHeartBar(in ivec2 u, in int screenWidth) {\n    u -= ivec2(screenWidth / 2 - 20, 75);\n    ivec2 size = ivec2(8, 136);\n    int k = abs(u.y - 68) - 64;\n    if (k == 0 || k == 1) return abs(u.x - 4) < 4 ? BAR_FRAME : vec4(0);\n    else if (k == 2) return abs(u.x - 4) < 3 ? BAR_FRAME : vec4(0);\n    else if (k == 3) return abs(u.x - 4) < 1 ? BAR_FRAME : vec4(0);\n    else if (k < 0) {\n        k = abs(u.x - 4);\n        if (k > 3) return vec4(0);\n        else if (k == 3) return BAR_FRAME;\n        else return u.y - 5 < int(heartFillRatio() * 128.0) ? RED_HIGHLIGHT : BLACK;\n    }\n    return vec4(0);\n}\n\nvec4 renderWhiteHeart(in ivec2 u) {\n    u -= ivec2(22, 186);\n    if (0 <= u.x && u.x < 16 && 0 <= u.y && u.y < 16) {\n        int c = heart(u) == vec4(0) ? 0 : 1;\n        return vec4(c, c, c, 1);\n    }\n    return vec4(0);\n}\n\nvoid mainImage(out vec4 O, in vec2 U) {\n    initStatus();\n    vec2 r = iResolution.xy;\n    int screenWidth = int(r.x / r.y * 256.0);\n    ivec2 u = ivec2(U / r.y * 256.0) - ivec2(screenWidth / 2, 0);\n    O = renderHeartBar(u, screenWidth);\n    O = O.w != 0.0 ? O : renderHeart(u);\n    O = O.w != 0.0 ? O : renderBase(u);\n    O = O.w != 0.0 ? O : renderShyguy(u);\n    O = O.w != 0.0 ? O : renderWhiteHeart(u);\n    O = O.w != 0.0 ? O : renderLetter(u);\n    O = O.w != 0.0 ? O : BLACK;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//\n// Memory Buffer\n//\n// The MIT License\n// Copyright Â© 2022 IWBTShyGuy\n//\n\n/*\nmemory layout\n\nrow 0: heart status\nEach pixel represents one heart status.\n    vec2(original_position), clicked_time, move_parameter\n\n- original_position: pixel coordinate, y-height == 256, x-center == 0\n- clicked_time: if heart has not been clicked, this parameter is 0.0.\n- move_parameter: the parameter of heart move in [0, 1]. Default is 0.0.\n\npixel (0, 1):\n- channel 0: the number of hearts that shyguy gets\n- channel 1: previous time that shyguy gets heart\n- channel 2: time if heart velocity is took into account\n- channel 3: previous frame iTime\n\npixel (1, 1):\n- channel 0: if thumnail, this value is 1.0, else 0.0.\n*/\n\nivec2 heartOriginalPosition(in int i) {\n    vec2 r = iResolution.xy;\n    float t = texelFetch(iChannel0, ivec2(0, 1), 0).z,\n        screenWidth = r.x / r.y * 256.0,\n        yFirst = float(i) * 16.0 + 8.0,\n        id = floor((yFirst + t / 32.0) / 16.0);\n    return ivec2(\n        screenWidth * (noise11(id) - 0.5),\n        mod(yFirst + t * 10.0, 320.0) - 32.0\n    );\n}\n\nvec4 heartPositionBuffer(in int i) {\n    ivec2 p = heartOriginalPosition(i),\n    previousPosition = ivec2(texelFetch(iChannel0, ivec2(i, 0), 0).xy);\n    int currentHeart = int(texelFetch(iChannel0, ivec2(0, 1), 0).x);\n    float clickedTime = iFrame == 0 || p.y < previousPosition.y ?\n        0.0 : texelFetch(iChannel0, ivec2(i, 0), 0).z;\n    if ((iMouse.z > 0.0 || iMouse.w > 0.0) && clickedTime == 0.0 && currentHeart < 56) {\n        vec2 r = iResolution.xy;\n        int screenWidth = int(r.x / r.y * 256.0);\n        ivec2 v = ivec2(iMouse.xy / r.y * 256.0) - ivec2(screenWidth / 2, 0) - p + 8;\n        clickedTime = abs(v) == v && abs(16 - v) == 16 - v ? iTime : 0.0;\n    }\n    float t = clickedTime > 0.0 ? min((iTime - clickedTime) * 2.0, 1.0) : 0.0;\n    return vec4(p, clickedTime, t);\n}\n\nint gotHeart() {\n    int res = 0;\n    for (int i = 0; i < 20; i++) {\n        float previousParameter = texelFetch(iChannel0, ivec2(i, 0), 0).w;\n        float currentParameter = heartPositionBuffer(i).w;\n        res += previousParameter < 1.0 && currentParameter == 1.0 ? 1 : 0;\n    }\n    return res;\n}\n\nfloat heartVelocity(int currentHeart) {\n    if (currentHeart < 8) return 1.0;\n    else if (currentHeart < 24) return 2.0;\n    else if (currentHeart < 56) return 4.0;\n    else return 8.0;\n}\n\nvec4 currentStatusBuffer() {\n    if (iFrame == 0) return vec4(0, -100, iTime, iTime);\n    vec4 res = texelFetch(iChannel0, ivec2(0, 1), 0);\n    int got = gotHeart();\n    if (got != 0) {\n        res.x += float(got);\n        res.y = iTime;\n    }\n    res.z += (iTime - res.w) * heartVelocity(int(res.x));\n    res.w = iTime;\n    return res;\n}\n\nfloat isThumbnail() {\n    if (iFrame == 0) return iTime < 9.0 ? 0.0 : 1.0;\n    else return texelFetch(iChannel0, ivec2(1, 1), 0).x;\n}\n\nvoid mainImage(out vec4 O, in vec2 FC) {\n    ivec2 U = ivec2(FC);\n    if (U.y == 0) O = heartPositionBuffer(U.x);\n    else if (U == ivec2(0, 1)) O = currentStatusBuffer();\n    else if (U == ivec2(1, 1)) O.x = isThumbnail();\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// https://www.shadertoy.com/view/XlXcW4\nvec3 hash(uvec3 x) {\n    const uint k = 1103515245U;\n    x.y = ((x.y>>8U)^x.y)*k;\n    x.z = ((x.z>>8U)^x.z)*k;\n    x.z = ((x.z>>8U)^x.z)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    return vec3(x)/float(0xffffffffU);\n}\n\nvec3 noise31(float x) {\n    uint s = uint(int(floor(x)) + 2147483647);\n    float t = fract(x);\n    return mix(hash(uvec3(s)), hash(uvec3(s + 1u)), t);\n}\n\nfloat noise11(float x) {\n    return noise31(x).x;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}