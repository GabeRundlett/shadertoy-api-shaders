{
    "Shader": {
        "info": {
            "date": "1427666879",
            "description": "subsystem rainbow",
            "flags": 0,
            "hasliked": 0,
            "id": "4l23Rw",
            "likes": 22,
            "name": "ngWaves0F",
            "published": 3,
            "tags": [
                "waves",
                "plasma",
                "netgrind",
                "arch"
            ],
            "usePreview": 0,
            "username": "netgrind",
            "viewed": 2132
        },
        "renderpass": [
            {
                "code": "float compute(vec2 p, float i){\n    float a = atan(p.y,p.x);\n    float l = length(p);\n    float d = mod(l-i*.5,1.);\n    d-=.5;\n    d = abs(d);\n    d-=sin(d)*.05+.1;\n    d = abs(d);    \n    d/=sin(a*12.+sin(l*l+i*.3)*10.)+2.;    \n    return 1.0-smoothstep(0.,.05, d/max(.15,p.y));    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float i=  iTime*.75;\n    vec4 c = vec4(1.0);\n\tvec2 uv = fragCoord.xy / iResolution.xx*2.-1.;\n    uv.y += 1.;\n    \n    float l = length(uv);\n    float a = atan(uv.y,uv.x);\n    float deg = sin(i)*2.+8.;\n    float j = sin(i)*.3;\n    float d = sin(i*3.1415)*.03;\n    uv*=mat2(sin(a*deg+j-deg)*l,cos(a*deg-deg)*l,-cos(a*deg+j-deg)*l,sin(a*deg-deg)*l);\n    \n    c.r = compute(uv,i);\n    uv.y-=d;\n    c.g = compute(uv,i);\n\tuv.y+=d*2.;\n    c.b = compute(uv,i);\n    \n\tfragColor = c;\n}",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}