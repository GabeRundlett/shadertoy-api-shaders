{
    "Shader": {
        "info": {
            "date": "1616535469",
            "description": "A shader inspired by castle oblivion from kingdom hearts",
            "flags": 64,
            "hasliked": 0,
            "id": "sdfGz7",
            "likes": 12,
            "name": "Castle Oblivion",
            "published": 3,
            "tags": [
                "3d",
                "raymarching",
                "organization13",
                "kingdomhearts"
            ],
            "usePreview": 0,
            "username": "kstyler",
            "viewed": 477
        },
        "renderpass": [
            {
                "code": "//Reference https://iquilezles.org/articles/distfunctions\n\nfloat pi = acos(-1.);\nint mat_id = 0;\n\nfloat s_union( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); \n}\n\nfloat s_sub( float d1, float d2, float k ) {\n    float h = clamp( 0.5 - 0.5*(d2+d1)/k, 0.0, 1.0 );\n    return mix( d2, -d1, h ) + k*h*(1.0-h); \n}\n\nmat2 rot(float a){\n    return mat2(cos(a),-sin(a),sin(a),cos(a));\n}\n\nvec3 radial_rep(vec3 p, float num_rep){\n    float ang = (2.*pi) / num_rep;\n    float sector = round(atan(p.z,p.x)/ang); \n    float an = sector*ang;\n    vec3 q = p;\n    q.xz = rot(an)*q.xz;\n    return q;\n} \n\nfloat sphere(vec3 p, float radius){\n    return length(p)-radius;\n}\n\n\nfloat torus( vec3 p, vec2 t ){\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  return length(q)-t.y;\n}\n\nfloat disk(vec3 p , float radius, float thickness){\n    float d = length(p.xz)-radius;\n    d = max(d,p.y-thickness*.5);\n    d = max(d,-p.y-thickness*.5);\n    return d;\n}\nfloat block( vec3 p, vec3 b ){\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat pedestal(vec3 p){\n    p.y+=10.;\n    float union_ptc = 1.5;\n    float y_offset = 3.;\n    float top =  block(p+vec3(0.,-y_offset,0.),vec3(2.,.6,2.));\n    float mid =  block(p,vec3(1.5,2.5,1.5));\n    float bot =  block(p+vec3(0.,y_offset,0.),vec3(2.5,.6,2.5));\n    return s_union(bot,s_union(top,mid,union_ptc),union_ptc);\n}\n\nfloat planter(vec3 p){\n    p.y+=10.;\n    vec3 pos = radial_rep(p,4.)-.1;\n    float poker = block(pos+vec3(-5.,0.,0.),vec3(1.5,2.,3.));\n    float union_ptc = .5;\n    float y_offset = 3.5;\n    float top =  block(p+vec3(0.,-y_offset,0.),vec3(4.5,.6,4.5));\n    float mid =  block(p,vec3(4.,3.5,4.));\n    float bot =  block(p+vec3(0.,y_offset,0.),vec3(4.5,.6,4.5));\n    float core = s_union(bot,s_union(top,mid,union_ptc),union_ptc);\n    return s_sub(poker,core,union_ptc);\n}\n\nfloat vase(vec3 p){\n    p.y +=5.;\n    float pre_core = sphere(p,2.);\n    float core = max(pre_core,p.y-1.5);\n    float top = torus(p+vec3(0.,-1.5,0.),vec2(1.6,.3));\n    return min(top,core);\n}\n\nfloat room_box(vec3 p){\n    p+=vec3(0.,-7.7,-59.);\n    float box1 = block(p,vec3(25.,19.,60.));\n    float box2 = block(p,vec3(24.,18.,64.));\n    float box3 = block(p+vec3(0.,8.,29.),vec3(8.,10.,3.));\n    return max(-box3,max(box1,-box2));\n}\n\nfloat base(vec3 p){\n    vec3 pos = radial_rep(p,12.)-.1;\n    vec3 pos2 = radial_rep(p,12.*3.);\n    vec3 posOfs = vec3(9.,0.,0.);\n    vec3 posOfs2 = vec3(4.,0.,0.);\n    float dsk = disk(p,5.,.9);\n    float cutter = block(pos-posOfs,vec3(5.,6.,200.));\n    return max(-sphere(pos2-posOfs2,.3),max(-cutter,dsk));\n}\n\nfloat column_shaft(vec3 p){\n    p.y-=15.;\n    float rad = 2.;\n    rad -= (sin(p.y*.1)-1.)*.8;\n    rad -= 0.50*(0.3+0.3*sin(13.*atan(p.x,p.z)));\n    float d = length(p.xz)- rad;\n    d = max(d,p.y);\n    d = max(d,-p.y-30.);\n    return d;\n}\n\nfloat ellipsoid(vec3 p, vec3 r ){\n    float k1 = length(p/r);\n    float k2 = length(p/(r*r));\n    return k1*(k1-1.0)/k2;\n}\n\nfloat chip(vec3 p){\n    p*=.9;\n    p.xz*=rot(p.x*.2);\n    return ellipsoid(p,vec3(5,6.-max(2.,p.y),.8)*.2);\n}\n\nfloat chip_ring(vec3 p,float r){\n    vec3 pos = radial_rep(p,12.);\n    vec3 final_pos = pos - vec3(r,0,0);\n    final_pos.xz*=rot(90.*pi/180.);\n    final_pos.yz*=rot(15.*pi/180.);\n    return chip(final_pos);\n}\n\nfloat full_column(vec3 p){\n    p.y+=15.;\n    vec3 q = abs(p+vec3(0.,-15.,0.));\n    vec3 b = abs(q+vec3(0.,15.,0.)); \n    q+=vec3(0.,-1.8,0.);\n    q.xz*=rot(45.*pi/180.);\n    q.xy*=rot(pi);\n    b.xy*=rot(pi);\n    b.y+=15.*2.;      \n    float total_base = min(chip_ring(q+vec3(0,11.4,0),3.3),\n            s_union(chip_ring(b+vec3(0.,-1.2 ,0.),3.55),\n            (base(b)),.45));                            \n                   \n    return min(column_shaft(p+vec3(0.,-15.,0.)),total_base);\n}\n\nfloat door_frame(vec3 p){\n    vec3 q = p;\n    p.x = abs(p.x);\n    p.x-= 9.;\n    float tall_block = block(p,vec3(1.1,10,1.1));\n    float base_block = block(p+vec3(0.,10,0.),vec3(1.6,.5,1.6));\n    float top_block = block(q+vec3(0.,-10,0),vec3(11,1.,1.6));\n    float top_block2 = block(q+vec3(0.,-11,0),vec3(12,.5,2.));\n    return s_union(top_block2,s_union(top_block,s_union(tall_block,base_block,.5),.5),1.5);\n}\n\n\nfloat plant(vec3 p){ \n    p.y+=7.;   \n    p.y+=(1.+sin(p.z*2.+.1))*.2;\n    p*=.5;\n    float eli = 90.;\n    for(int i = -4; i<-1; i++){\n        p.xz*=rot(((float(i)*10.)*pi/180.));\n        vec3 pos = radial_rep(p,5.)-.1;\n        pos.y+=float(i)*.4;\n        pos.x-=float(i)*.2;\n        pos.xz*=rot(-90.*pi/180.);\n        eli =s_union(eli,ellipsoid(pos,vec3((1.+pos.z*.001),.4,3.)),.1);\n    }\n    return eli;\n}\n\nfloat full_planter(vec3 p){\n    return min(plant(p),planter(p));\n}\n\nfloat full_pedistal(vec3 p){\n    return min(plant((p+vec3(0.,1.2,0.))/.4),min(vase(p),pedestal(p)));\n}\n\nfloat stair_way(vec3 p){\n    float c =4.;\n    vec3 q = p;\n    p.y+=12.7;\n    p.zy*=rot(8.*pi/180.);\n    p.z = p.z-c*clamp(round(p.z/c),-8.,0.);\n    p.z = mod(p.z+0.5*c,c)-0.5*c;  \n    p.zy *= rot(-8.*pi/180.);\n    float stp = block(p,vec3(10.,2.7,.5));\n    return stp;\n}\n\nfloat hall_way(vec3 p){\n    p.z+=10.;\n    float size = 10.;\n    float box1 = block(p,vec3(size,size+5.,size));\n    float box2 = block(p,vec3(size-.5,size+5.-.6,size+1.));\n    return max(box1,-box2);\n}\n\nfloat full_hall(vec3 p){\n    p.xz*=rot(pi);\n\n    return min(door_frame(p-vec3(0.,3.,-21.)),min(hall_way(p),\n        min(door_frame(p+vec3(0,.3,0.)),stair_way(p))));}\n\nfloat map(vec3 p){\n    float c =200.;\n    float c2 =c/4.;\n\n    vec3 q = p;\n    vec3 r = p;\n    vec3 s = p;\n      \n    p.zy*=rot(-8.*pi/180.);\n    p.z = mod(p.z+0.5*c,c)-0.5*c;\n    p.zy*=rot(8.*pi/180.);\n    \n    float box = block(p,vec3(100.,100,.1));\n    box = max(box,-block(p,vec3(8,10,1.)));\n    \n    q.y+=6.;\n    q.xz+=c2/2.;\n    q.zy*=rot(-8.*pi/180.);  \n    q.z = mod(q.z+0.5*c2,c2)-0.5*c2;\n    q.x = q.x-c2*clamp(round(q.x/c2),0.,1.);\n    q.zy*=rot(8.*pi/180.);\n   \n    r.x+=c2*.5/2.;\n    r.z+=50.;\n    r.y+=6.;\n    r.zy*=rot(-8.*pi/180.);  \n    r.z = mod(r.z+0.5*c2*2.,c2*2.)-0.5*c2*2.;\n    r.x = r.x-(c2*.5)*clamp(round(r.x/(c2*.5)),0.,1.);\n    r.zy*=rot(8.*pi/180.);\n     \n    s.x+=c2*.6/2.;\n    s.z+=100.;\n    s.y+=16.;\n    s.zy*=rot(-8.*pi/180.);  \n    s.z = mod(s.z+0.5*c2*4.,c2*4.)-0.5*c2*4.;\n    s.x = s.x-(c2*.6)*clamp(round(s.x/(c2*.6)),0.,1.);\n    s.zy*=rot(8.*pi/180.);\n    \n    return min(full_planter(s*.9),min(full_pedistal(r*.8),\n        min(full_column(q*.6),min(box,full_hall(p)))));\n}\n\nfloat march(vec3 ro, vec3 rd){\n    float tot = 0.;\n    float dst = 0.;\n    for(int i = 0; i <700; i++){\n        dst = map(ro+rd*tot);\n        tot += dst;\n        if(dst < 0.03 || tot > 700.){\n            tot=float(i)/200.;//https://www.shadertoy.com/view/tdBGWD\n            break;\n        }\n    }\n    if (dst > 0.03) mat_id = 1;\n    return tot;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.x;\n    vec3 ro = vec3(0.,-1.,iTime*20.);\n    vec3 rd = normalize(vec3(uv,1.));\n    float tilt = -8.;\n    ro.yz*=rot(tilt*pi/180.);\n    rd.yz*=rot(tilt*pi/180.);\n    vec3 col = 1.-vec3(march(ro,rd));\n    if(mat_id ==1)col = vec3(.95); \n    fragColor = vec4((col),1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 26334,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/michael-mike-carter/kingdom-hearts-iii-organization-13"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}