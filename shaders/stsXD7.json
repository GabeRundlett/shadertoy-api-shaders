{
    "Shader": {
        "info": {
            "date": "1625868988",
            "description": "Heat Dome \n[Updated to spare some cycle]",
            "flags": 0,
            "hasliked": 0,
            "id": "stsXD7",
            "likes": 18,
            "name": "大龙猫 - Heat Dome",
            "published": 3,
            "tags": [
                "lava",
                "heat",
                "dome"
            ],
            "usePreview": 0,
            "username": "totetmatt",
            "viewed": 472
        },
        "renderpass": [
            {
                "code": "mat2 rot(float a){float c=cos(a),s=sin(a);return mat2(c,-s,s,c);}\nvec2 sdf(vec3 p){\n    p.y+=3.;\n    float gr = 1.;\n   float zz;\n   vec4 pp = vec4(p,1.1);\n   for(float i=0.;i<=5.;i++){\n         pp.xyz = abs(pp.xyz)-.77;\n      pp.y+=1.;\n      pp.z+=.41;\n         pp*=1.2;\n       zz=abs(gr*atan(pp.x,pp.z)*.05);\n      float t = .5;\n         pp.xz *=rot(.785*.5+i+t);\n         \n         gr = min(gr, (atan(sin(pp.z+pp.y))-sin(pp.x*.2)+cos(pp.z*.5))/pp.a);\n      \n     \n      \n    }\n    \n    vec2 h;\n    gr += texture(iChannel0,vec2(gr*.5)).r*.1;\n    h.x = dot(p,vec3(0.,1.,0.))-gr;\n    \n    h.y = 1.-zz;\n    \n    vec2 t;\n    vec3 ppp=p;\n    ppp.y+=1.;\n \n    t.x  = abs(length(ppp)-3.)-(.1-gr*.2-abs(sin(p.y*2.)*cos(gr*atan(p.x,p.z)*5.))*.1);\n    t.x  = max(.7*t.x,-dot(p,vec3(0.,1.,0.)));\n    \n    t.y = 2.;\n    h = t.x < h.x ? t:h;\n    return h;\n}\n\n#define q(s) s*sdf(p+s).x\nvec2 nv=vec2(-.003,.003);\nvec3 norm(vec3 p){return normalize(q(nv.xyy)+q(nv.yxy)+q(nv.yyx)+q(nv.xxx));}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n vec2 uuv =uv;\n  uuv *=.25;\n\n\tvec3 col = vec3(.1);\n  \n  vec3 ro = vec3(5.*cos(iTime*.05),-1.,5.*sin(iTime*.05));\n  vec3 rt = vec3(0.,-3.,0.);\n  vec3 z = normalize(rt-ro);\n  vec3 x = normalize(cross(z,vec3(0.,-1.,.0)));\n  vec3 y = normalize(cross(z,x));\n  \n  vec3 rd = mat3(x,y,z)*normalize(vec3(uv,1.));\n  vec3 rp = ro;\n  vec3 light = vec3(1.,0.,-3.);\n  \n  vec3 acc = vec3(0.);\n  bool inside = false;\n  float rpt = 0.;\n  for(float i=0.;i<=128.;i++){\n   \n      vec2 d = sdf(rp);\n       if(inside) d.x = -d.x;\n    rpt +=d.x;\n      if(rpt >=50.)break;\n      if(d.y <=.96){\n        acc += vec3(1.,.2,.1)*max(0.,exp(.5*-abs(d.x))/(20.-sin(iTime*4.+rp.x*5.+rp.z)*10.));\n      }\n      rp+=d.x*rd;\n      if(d.x <=0.001){\n          vec3 n = norm(rp);\n          if(d.y<=1.){\n            \n            vec3 di = vec3(.2)*max(0.,dot(normalize(light-rp),n));\n            vec3 sp = vec3(1.)*(acc/i)* pow(max(dot(reflect(normalize(-light),n),-rd),0.),20.);\n            col = di+sp*20.;\n            break;\n          } else if(d.y ==2.){\n              float ior = 1.05;\n              if(!inside){\n                \n                 acc +=vec3(.2,.001,.001);\n                rd = refract(rd,n,1./ior);\n                rp -= .05*n;\n                inside = true;\n              } else {\n                    n = -n;\n                    vec3 _rd=refract(rd,n,ior);\n                    if(dot(_rd,_rd)==0.){\n                      \n                        rd = reflect(rd,n);\n                        rp +=n*.05;\n                      \n                    } else {\n                        rd = _rd;\n                        rp -=n*.05;\n                        inside = false;\n                       acc +=vec3(.1,.11,.1);\n                      }\n              }\n          }\n      }\n  }\n  col +=acc;\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}