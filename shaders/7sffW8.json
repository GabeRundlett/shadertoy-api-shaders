{
    "Shader": {
        "info": {
            "date": "1644781735",
            "description": "Try paint 2d chars on rock.",
            "flags": 0,
            "hasliked": 0,
            "id": "7sffW8",
            "likes": 3,
            "name": "Painted Chars",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "VPas",
            "viewed": 248
        },
        "renderpass": [
            {
                "code": "const mat2 m = mat2(0.8, 0.6, -0.6, 0.8);\n\nfloat noise(vec2 p) {\n\treturn texture(iChannel2, p / 256.).r;\n}\n\nfloat fbm4(vec2 p) {\n    float f = 0.0;\n    f += 0.5000*noise(p); p = m*p*2.02;\n    f += 0.2500*noise(p); p = m*p*2.03;\n    f += 0.1250*noise(p); p = m*p*2.01;\n    f += 0.0625*noise(p);\n    return f/0.9375 * 2. - 1.;\n}\n\nfloat rect(vec2 p, vec2 hs) {\n    vec2 a = abs(p) - hs;\n    return step(max(a.x, a.y), 0.);\n}\n\nfloat TextSDF(vec2 p, float glyph){ \n\tfloat v = texture(iChannel0, p / 16. + fract(vec2(glyph, 15. - floor(glyph / 16.)) / 16.)).w;\n    float start = 0.5;\n    float border = 0.003;\n    return smoothstep(start + border, start, v);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float time = iTime;\n    vec2 p = (fragCoord - iResolution.xy * 0.5) / min(iResolution.y, iResolution.x);\n    \n    vec3 background = texture(iChannel3, p * 0.5 + vec2(0.12, -0.05)).rgb;\n    \n    p *= 1.4;\n    float depth = background.r * 0.299 + background.g * 0.587 + background.b * 0.114;\n    vec3 normal = vec3(dFdx(depth), dFdy(depth), 0.333) * 3.;\n    \n    float number = floor(mod(time, 256.) * 2.);\n    \n    vec2 textureP = (p + vec2(0.5, +0.5));\n    textureP += texture(iChannel1, p).xy * 0.01;\n    \n    vec2 fbm = vec2(fbm4(textureP * 10.), fbm4(textureP * 10. + vec2(13., 7.)));\n    \n    float textAlpha = TextSDF(textureP + fbm * 0.06, number) * rect(p, vec2(0.5));\n    \n    float fbm2 = fbm4(textureP * 10. + vec2(53., 17.)) * 0.2 + 0.8;\n    float depthToBrightness = 0.3 + 1.7 * depth;\n    float lightForNormal = dot(normal, normalize(vec3(0.3, 0.3, 0.9)));\n    vec3 color = vec3(textAlpha * fbm2 * vec3(0.4, 0.85, 0.95) * depthToBrightness * lightForNormal) + background * (1. - textAlpha);\n    \n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}