{
    "Shader": {
        "info": {
            "date": "1370389498",
            "description": "A simple fade transition.",
            "flags": 0,
            "hasliked": 0,
            "id": "MdX3DN",
            "likes": 8,
            "name": "Transition: Fade",
            "published": 3,
            "tags": [
                "transition",
                "fade"
            ],
            "usePreview": 0,
            "username": "4rknova",
            "viewed": 1089
        },
        "renderpass": [
            {
                "code": "// by Nikos Papadopoulos, 4rknova / 2013\n// Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define ENABLE_SCROLLING // Enable uv scrolling\n\nconst float T_TRAN = 2.;\t// Transition time\nconst float T_INTR = 2.;\t// Intermission between in/out\nconst float T_PADN = 2.;\t// Padding time at the end of out.\nconst float T_TOTL = ((2. * T_TRAN) + T_INTR + T_PADN);\n\nvec3 transition(vec3 tex0, vec3 tex1, float t)\n{\n    return mix(tex0, tex1, t);\t\n}\n\nvoid mainImage(out vec4 c, vec2 p)\n{\n\tvec2 uv = p.xy / iResolution.xy;\n\n#ifdef ENABLE_SCROLLING\n\tuv += vec2(sin(iTime * .6) * .1, cos(iTime * .1));\n#endif // ENABLE_SCROLLING\n\t\n    float t = mod(iTime, T_TOTL);\n\n    float ts0 =       T_TRAN;\n    float ts1 = ts0 + T_INTR;\n    float ts2 = ts1 + T_TRAN;\n    \n\tif      (t < ts0) t = t / ts0;                       // Transition A\n    else if (t < ts1) t = 1.;                            // Intermission\n    else if (t < ts2) t = 1. - ((t - ts1) / (ts2-ts1));  // Transition B\n    else              t = 0.;                            // Padding\n    \n    vec3 tex0 = texture(iChannel0, uv).xyz;\n    vec3 tex1 = texture(iChannel1, uv).xyz;    \n    vec3 r = transition(tex0, tex1, t);\n\tc = vec4(r, 1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 3,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}