{
    "Shader": {
        "info": {
            "date": "1669102328",
            "description": "Another infinite roguelike dungeon map.",
            "flags": 8,
            "hasliked": 0,
            "id": "DdXXzB",
            "likes": 10,
            "name": "Infinite roguelike dungeon 5",
            "published": 3,
            "tags": [
                "maze",
                "dungeon",
                "labyrinth",
                "roguelike"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 256
        },
        "renderpass": [
            {
                "code": "float threshold = .5;\nint iters = 4;\n\n#define noise2D(p) float(((p).x * 68657387u ^ (p).y * 361524851u + (p).x) % 890129u) / 890128.\n\nbool labyrinth(uvec2 U,float n2){\n    bvec2 b = bvec2(U & 1u);\n    return (b.x && b.y || b.x != b.y  && n2 < threshold);\n}\n\nvoid mainImage(out vec4 O, vec2 U) {\n    uvec2 I = uvec2( U/8.+ iTime*8.);\n    O = vec4(1);\n    bool b = false,l1=false;\n    float n = 0.;\n    I += 1u;\n    for(int i = 0; i++ < iters;I = \n    //Multiply and divide by prime numbers to get interesting patterns\n    I*2u/3u\n    //I*13u/17u\n    ){\n        \n        //I += uint(i)+uint(b);\n        \n        n = noise2D(I);\n        l1 = labyrinth(I,n),\n        b =\n            //!(b || l1) || n > (8.*abs(.5-fract(iTime/16.))-.5)\n            !(b || l1)\n            //!b || labyrinth(I,n) || labyrinth(I/2u,n)\n            //!(b || l1) && n > .1\n            //!b && l1 //another interesting pattern\n            //l1 //simple maze\n            //!b || l1 //a more complicated maze\n        ;\n        O -= float(n > .125)/float(iters)/4.;\n        //some random-looking distortion\n        //I += I.yx/(31u)-I.yx/(29u)+I.yx/(23u);\n        //{I = I-I.yx/13u/11u/7u/5u+I.yx/11u/7u/5u-I.yx/7u/5u;}\n    }\n    if (b) O = 1.-O;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define fmod(x,y) floor(max(mod(floor(-(x))*4.,y),mod(floor(x)*3.,y)))\n#define fmod1(x,y) floor(min(mod(floor(-(x))*4.,y),mod(floor(x)*3.,y)))\nvec2 mainSound(int samp, float time){  \n  float\n  s1 = pow(2.,1.+fmod(time*8.,3.)),\n  s2 = pow(2.,1.+fmod1(time*8.,3.)),\n  m1 = s1*(1.+fmod(time/s2/s1+1.,2.)),\n  t = time/8.,\n  m4 = fmod1(t*s1/(1.+fmod(t/s1,2.)),s2),\n  m3 = fmod((t+m4)*s1/m1,s2);\n  t *= s1*s1/(1.+fmod(t/s1,2.));\n  float m2 = 1. + fmod(t/s1,s1);\n  float a = 64.*pow((1.-sqrt(fract(t/s1)/m1))/4.,2.);\n  float nb = time*pow(2.,(m3+m2)/5.+6.5);\n  return abs(.5-vec2(fract(nb*.998),fract(nb)))*a;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}