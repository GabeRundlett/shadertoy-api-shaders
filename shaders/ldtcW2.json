{
    "Shader": {
        "info": {
            "date": "1520290488",
            "description": "Filmic Tonemapping Operator with adaptive exposure using a low pass filter (LPF). Based on the slides \"Uncharted 2 HDR Lighting\" by John Hable (https://es.slideshare.net/ozlael/hable-john-uncharted2-hdr-lighting).",
            "flags": 32,
            "hasliked": 0,
            "id": "ldtcW2",
            "likes": 4,
            "name": "Filmic Tonemapping w/Adaptive LW",
            "published": 3,
            "tags": [
                "linear",
                "tonemapping",
                "white",
                "filmic",
                "exposure",
                "adaptive"
            ],
            "usePreview": 0,
            "username": "merry",
            "viewed": 1966
        },
        "renderpass": [
            {
                "code": "//\tFilmic Tonemapping Operator with adaptive exposure using a low pass filter (LPF).\n//\tBased on the slides \"Uncharted 2 HDR Lighting\" by John Hable (https://es.slideshare.net/ozlael/hable-john-uncharted2-hdr-lighting).\n//\tImage: applies the Filmic Tonemapping operator using the average luminance from Buffer A.\n\n#define EXPOSURE 11.2\n\nconst float kShoulderStrength = 0.22;\nconst float kLinearStrength   = 0.30;\nconst float kLinearAngle      = 0.10;\nconst float kToeStrength      = 0.20;\nconst float kToeNumerator     = 0.01;\nconst float kToeDenominator   = 0.30;\n\nvec3 filmicTonemapping(in vec3 color)\n{\n\treturn ((color*(kShoulderStrength*color+kLinearAngle*kLinearStrength)+kToeStrength*kToeNumerator) /\n \t\t\t(color*(kShoulderStrength*color+kLinearStrength)+kToeStrength*kToeDenominator))-kToeNumerator/kToeDenominator;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 lw = texture(iChannel0, uv);\n    fragColor = vec4(pow(filmicTonemapping(lw.xyz)/filmicTonemapping(lw.www*EXPOSURE), vec3(1./2.2)),1);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//\tFilmic Tonemapping Operator with adaptive exposure using a low pass filter (LPF).\n//\tBased on the slides \"Uncharted 2 HDR Lighting\" by John Hable (https://es.slideshare.net/ozlael/hable-john-uncharted2-hdr-lighting).\n//\tBuffer A: calculates the average luminance for the image then accumulates using a low pass filter.\n\n#define LPF_THRESHOLD .01\nconst vec3 kLuminanceCoefficients = vec3(0.2125, 0.7154, 0.0721);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 lw = pow(textureLod(iChannel0, uv, 9.), vec4(2.2));\n    if (0  != iFrame)\n\t\tfragColor = vec4(pow(texture(iChannel0, uv).xyz, vec3(2.2)),\n\t        dot(lw.xyz, kLuminanceCoefficients) * LPF_THRESHOLD + texture(iChannel1, uv).w * (1. - LPF_THRESHOLD));\n   \telse\n\t\tfragColor = vec4(0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}