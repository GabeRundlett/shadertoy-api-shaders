{
    "Shader": {
        "info": {
            "date": "1684941340",
            "description": "This uses a geometric series to copy-paste parabolas of decreasing heights next to each other.\nThe logic is largely reused from this shader: https://www.shadertoy.com/view/mdtXDN\nIt's very similar to this video: https://www.youtube.com/watch?v=IKVM4DAQ840",
            "flags": 0,
            "hasliked": 0,
            "id": "dtcXzn",
            "likes": 9,
            "name": "Bounce Equation",
            "published": 3,
            "tags": [
                "ball",
                "bounce",
                "motion",
                "parabola",
                "desmos"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 194
        },
        "renderpass": [
            {
                "code": "#define res iResolution.xy\n#define ss(a) smoothstep(-1./res.y, 1./res.y, a)\n\n// Rough explanation + neater equations:\n// https://www.desmos.com/calculator/obwtqgefsh\nfloat bounce(float a, float n, float x) {   \n    float s = sqrt(a);\n    // Remove \"(1.-s) *\" to make all bounces occur in [0,1] domain\n    x = 1. - min(1. - pow(s, n), (1.-s) * x) ;  \n    float p = pow(s, floor(log2(x) / log2(s)));\n    float m = (p - x) / (1.-s); \n    return 4. * m * (p - m);\n}\n\nvoid mainImage( out vec4 O, in vec2 px )\n{\n    vec2 uv = (px - 0. * res) / res.y;\n    uv *= 2.;\n    \n    // Change me!\n    float a = 0.5;  // Percentage of previous bounce's height, a in [0,1]\n    float n = 6.;   // Number of bounces (any value >= 0)\n    float r = 0.04; // Ball radius\n    \n    float t = mod(iTime, 3.8);\n    float y = 0.5 * bounce(a, n, t);\n           \n    //r += 0.15 * y;\n    vec2 p  = vec2(t, y + r);\n    float d = length(uv - p);\n    float s = ss(r - d);\n    \n    float yw = 0.5 * bounce(a, n, uv.x);\n    float sw = ss(yw - uv.y + r);\n    \n    vec3 col = vec3(s, s, sw);\n    \n    O = vec4(col, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}