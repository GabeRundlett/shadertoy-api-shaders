{
    "Shader": {
        "info": {
            "date": "1620787785",
            "description": "Forest-bosque- v2",
            "flags": 0,
            "hasliked": 0,
            "id": "sdSXzt",
            "likes": 3,
            "name": "Forest-bosque- v2",
            "published": 3,
            "tags": [
                "2d",
                "draw",
                "poly",
                "forestbosquev2"
            ],
            "usePreview": 0,
            "username": "jorge2017a1",
            "viewed": 270
        },
        "renderpass": [
            {
                "code": "//por jorge2017a1 ----jorgeFloresP---11/may/2021\n// referencia \n////-------------------\n/// IQ funciones....librerias\n//https://www.shadertoy.com/view/tlGBW3\n//Created by manu210404 in 2021-03-13\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n\n//----------oPeraciones de Repeticion\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}\n    \nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r; }\n\nvec3 ponerBorde(vec3 pColObj, vec3 colOut, float distObj )\n{\n  colOut = mix(colOut,pColObj ,S( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S(abs( distObj),0.0));\n  return colOut;\n}\n\nfloat opU(float d1, float d2) {return min(d1, d2); }\nconst vec3 colNegro=vec3(0.0);\nconst vec3 colGris=vec3(0.49,0.49,0.49);\nconst vec3 colGris2=vec3(0.6);\nconst vec3 colBlanco=vec3(1.0);\nconst vec3 colRojo=vec3(1.0,0.0,0.0);\nconst vec3 colAzul=vec3(0.0,0.0,1.0);\nconst vec3 colVerde=vec3(0.0,1.0,0.0);\nconst vec3 colVerde2=vec3(0.1,0.8,0.1);\nconst vec3 colrojoObs=vec3(0.45,0.13,0.15); //rojo obscuro\n\nconst vec3 col1=vec3(0.54,0.49,0.39);\nconst vec3 col2=vec3(0.06,0.07,1.0);\nconst vec3 col3=vec3(0.06,0.07,0.8);\n//const vec3 col4=vec3(0.45,0.13,0.15); //rojo obscuro\nconst vec3 col4=vec3(0.60,0.17,0.17); //vestido\nconst vec3 col5=vec3(0.73,0.60,0.55);\nconst vec3 colDorado=vec3(0.925,0.67,0.0);\n\n#define POLY(N) (in vec2 p, in vec2[N] v) {const int n=v.length();float d=dot(p-v[0],p-v[0]);float s=1.;for(int i=0,j=n-1;i<n;j=i,i++){vec2 e=v[j]-v[i];vec2 w=p-v[i];vec2 b=w-e*clamp(dot(w,e)/dot(e,e),0.,1.);d=min(d,dot(b,b));bvec3 cond=bvec3(p.y>=v[i].y,p.y<v[j].y,e.x*w.y>e.y*w.x);if(all(cond)||all(not(cond))) s=-s;}return s*sqrt(d);}\n\n\nfloat sdPoly15 POLY(15)\nvec2 pt15[ 15]=vec2[](  \nvec2(.10,.65),vec2(.10,.54),vec2(.10,.54),vec2(.10,.54),vec2(.13,.53),\nvec2(.13,.64),vec2(.15,.67),vec2(.14,.68),vec2(.12,.65),vec2(.12,.69),\nvec2(.11,.69),vec2(.11,.66),vec2(.08,.68),vec2(.08,.67),vec2(.10,.65) );\n\nfloat sdPoly11 POLY(11)\nvec2 pt11[ 11]=vec2[](  \nvec2(.07,.66),vec2(.04,.67),vec2(.01,.73),vec2(.01,.80),vec2(.06,.86),\nvec2(.16,.84),vec2(.20,.75),vec2(.20,.69),vec2(.17,.66),vec2(.14,.66),\nvec2(.07,.66) );\n\nfloat sdPoly10 POLY(10)\nvec2 pt10[ 10]=vec2[](  \nvec2(.09,.38),vec2(.12,.42),vec2(.15,.41),vec2(.17,.43),vec2(.20,.46),\nvec2(.22,.44),vec2(.24,.42),vec2(.27,.40),vec2(.28,.38),vec2(.09,.38) );\n\n\nfloat sdPoly32 POLY(32)\nvec2 pt32[ 32]=vec2[](  \nvec2(.15,.09),vec2(.15,.19),vec2(.10,.22),vec2(.06,.26),vec2(.04,.28),\nvec2(.06,.28),vec2(.09,.24),vec2(.12,.22),vec2(.15,.21),vec2(.17,.24),\nvec2(.20,.26),vec2(.22,.27),vec2(.23,.28),vec2(.24,.27),vec2(.18,.23),\nvec2(.17,.21),vec2(.17,.21),vec2(.19,.21),vec2(.21,.22),vec2(.24,.23),\nvec2(.24,.22),vec2(.23,.21),vec2(.19,.20),vec2(.17,.19),vec2(.17,.17),\nvec2(.17,.15),vec2(.18,.15),vec2(.19,.16),vec2(.19,.15),vec2(.17,.14),\nvec2(.17,.10),vec2(.15,.09) );\n\n\nfloat sdPoly7 POLY(7)\nvec2 pt7[ 7]=vec2[](  \nvec2(.00,.53),vec2(.00,.62),vec2(.18,.85),vec2(.26,.81),vec2(.31,.70),\nvec2(.38,.54),vec2(.00,.53) );\n\nfloat sdPoly11b POLY(11)\nvec2 pt11b[11]=vec2[](  \nvec2(.24,.54),vec2(.34,.74),vec2(.41,.82),vec2(.46,.89),vec2(.51,.89),\nvec2(.53,.86),vec2(.54,.77),vec2(.59,.73),vec2(.65,.65),vec2(.67,.54),\nvec2(.24,.54) );\n\n\nfloat sdPoly9 POLY(9)\nvec2 pt9[ 9]=vec2[](  \nvec2(.60,.53),vec2(.67,.59),vec2(.74,.62),vec2(.76,.65),vec2(.81,.63),\nvec2(.84,.60),vec2(.87,.56),vec2(.90,.54),vec2(.60,.53) );\n\n\nfloat sdPoly11c POLY(11)\nvec2 pt11c[ 11]=vec2[](  \nvec2(.48,.53),vec2(.60,.70),vec2(.68,.77),vec2(.71,.77),vec2(.78,.82),\nvec2(.81,.84),vec2(.85,.78),vec2(.89,.71),vec2(.93,.67),vec2(.97,.54),\nvec2(.48,.53) );\n\nfloat sdPoly5 POLY(5)\nvec2 pt5[ 5]=vec2[](  \nvec2(.41,.18),vec2(.40,.28),vec2(.53,.32),vec2(.54,.18),vec2(.41,.18) );\n\nfloat sdPoly5b POLY(5)\nvec2 pt5b[ 5]=vec2[](  \nvec2(.46,.18),vec2(.46,.26),vec2(.49,.26),vec2(.50,.18),vec2(.46,.18) );\n\n\nfloat sdPoly10b POLY(10)\nvec2 pt10b[ 10]=vec2[](  \nvec2(.43,.29),vec2(.42,.33),vec2(.40,.33),vec2(.40,.35),vec2(.44,.35),\nvec2(.45,.35),vec2(.46,.33),vec2(.44,.33),vec2(.44,.29),vec2(.43,.29) );\n\n\nfloat sdPoly11d POLY(11)\nvec2 pt11d[ 11]=vec2[](  \nvec2(.74,.17),vec2(.74,.22),vec2(.76,.24),vec2(.77,.27),vec2(.77,.30),\nvec2(.77,.30),vec2(.77,.27),vec2(.76,.24),vec2(.75,.22),vec2(.74,.17),\nvec2(.74,.17) );\n\nfloat sdPoly9b POLY(9)\nvec2 pt9b[ 9]=vec2[](  \nvec2(.74,.17),vec2(.74,.22),vec2(.71,.25),vec2(.70,.30),vec2(.71,.30),\nvec2(.72,.25),vec2(.75,.22),vec2(.74,.17),vec2(.74,.17) );\n\nfloat sdPoly15b POLY(15)\nvec2 pt15b[ 15]=vec2[](  \nvec2(.75,.97),vec2(.71,.96),vec2(.69,.94),vec2(.65,.93),vec2(.63,.90),\nvec2(.69,.88),vec2(.78,.89),vec2(.82,.90),vec2(.86,.88),vec2(.86,.93),\nvec2(.84,.94),vec2(.80,.94),vec2(.78,.96),vec2(.77,.97),vec2(.75,.97) );\n\n///------------*******-------------------\nfloat rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat rand(float n){return fract(sin(n) * 43758.5453123);}\n\n\n//***------------****-----------****------------******-------\nvec3 Bosque2(in vec2 pp, vec3 col) \n{\n  vec2 p=pp,pr1=pp, pr2=pp;\n   pr1.x= opRep1D(pr1.x, 0.4 ); pr1.y-=0.04;\n   pr2.x= opRep1D(pr2.x, 0.7 ); pr2.y+=0.04;\n   \n   float i = floor(p.x);  // integer\n    float f = fract(p.x);  // fraction\n    float y1 = rand(i)*0.005;\n    float y2 = rand(f)*0.005;\n\n   float sd15 = sdPoly15(p, pt15);\n   float sd11 = sdPoly11(p, pt11);\n   float sd10 = sdPoly10(p-vec2(0.1,0.0), pt10);\n   float sd32 = sdPoly32(p, pt32);\n   float sd7 = sdPoly7(p-vec2(-0.3,0.2), pt7); //monta単a\n    float sd11b = sdPoly11b(p-vec2(-0.1,0.0), pt11b); //monta単a\n    float sd9 = sdPoly9(p-vec2(0.3,0.3), pt9);\n    float sd11c = sdPoly11c(p, pt11c);\n    float sd5 = sdPoly5(p, pt5);\n    float sd5b = sdPoly5b(p, pt5b);\n    float sd10b = sdPoly10b(p, pt10b);\n    \n    float sd11d = sdPoly11d(p, pt11d);\n    float sd9b = sdPoly9b(p, pt9b);\n    float sd15b = sdPoly15b(p, pt15b);\n    col=ponerBorde(col1,col,sd7 ); //monta単a n3\n    col=ponerBorde(col5,col,sd11c );\n    col=ponerBorde(colVerde2,col,sd11 ); //ramas arbol\n    col=ponerBorde(colrojoObs,col,sd15 ); //tronco\n    col=ponerBorde(col1,col,sd10 );  //piedra chica\n    col=ponerBorde(col4,col,sd32 ); //tronco seco\n    col=ponerBorde(col4,col,sd11b ); //monta単a n2\n    col=ponerBorde(col4,col,sd9 );  //piedra chica n2\n    col=ponerBorde(col1,col,sd5 ); //casa\n    col=ponerBorde(col4,col,sd5b ); //puerta\n    col=ponerBorde(col4,col,sd10b ); //chimenea\n    col=ponerBorde(col1,col,sd11d );\n    col=ponerBorde(col4,col,sd9b ); //arboito seco\n    col=ponerBorde(col2,col,sd15b );// nube\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    float t=iTime*0.25;\n    vec2 p=uv*0.5-vec2(-0.5,-0.5);\n    vec3 col=vec3(0.15,0.6,0.3); //vec3(0.25);\n    vec2 p2=p+vec2(0.0,3.5);\n    float tt=t;\n    p.y= opRep1D(p.y+tt, 2.2 );\n    p2.y= opRep1D(p2.y+tt, 2.2 );\n    col=Bosque2(p, col);\n    col=Bosque2(p2, col);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}