{
    "Shader": {
        "info": {
            "date": "1469798163",
            "description": "Marbles fall from the top through a grid of nails (top half), bouncing randomly left or right at each pixel.\nThis results in a Gaussian heap (indeed, Binomial).\n\n(NB: bug for heap higher than mid window. Anyway Gauss approximation bad if large heap )",
            "flags": 32,
            "hasliked": 0,
            "id": "4t3GRB",
            "likes": 13,
            "name": "Galton experiment (Gaussian)",
            "published": 3,
            "tags": [
                "experiment",
                "gaussian",
                "short",
                "galton"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1308
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{    O = texture(iChannel0, U/iResolution.xy); }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// biblio: https://en.wikipedia.org/wiki/Bean_machine\n\n#define rand2(u) fract(sin(dot(u, vec2(12.9898, 78.233)))* 43758.5453)\n//#define rand(x) fract(sin(437.17*x)*43758.5453)    // fract(sin(x)*43758.5453)\n\n#define T(x,y) texture(iChannel0, (U+vec2(x,y)) / R )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R  = iResolution.xy;\n    float t = iTime, m=1.;\n    //    m = float(iFrame/2*2==iFrame);      // we emulate 2 nails per pixel: fall 1 over 2 steps\n    bool  h = U.y > R.y/2.+fract(t);          // top half of screen\n    \n    if (U.y==R.y-.5) {\n        O = vec4 ( U.x-.5 == floor(R.x/2.) ); // source\n        return;\n    }\n    \n    O = T(0,0);                               // previous state\n    \n    if (O.a>0. && U.y>.5) {                   // erase if free fall, otherwise heap\n        O = T( h ? sign(rand2(U+t)-.5) : 0., -m);\n        return; } \n    \n    if (h) {                                  // top half: collisions, random bounce\n        if (rand2(U+vec2( 1,m)+t)<.5) O += T( 1,m);\n        if (rand2(U+vec2(-1,m)+t)>.5) O += T(-1,m);\n    } else O += T(0,m);                       // free fall\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}