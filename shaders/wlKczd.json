{
    "Shader": {
        "info": {
            "date": "1611616952",
            "description": "A compact and efficient fractal checkerboard shader using bit-wise XOR.",
            "flags": 0,
            "hasliked": 0,
            "id": "wlKczd",
            "likes": 4,
            "name": "XOR Checkerboard Fractal",
            "published": 3,
            "tags": [
                "fractal",
                "animated",
                "checkerboard",
                "xor",
                "pattern"
            ],
            "usePreview": 0,
            "username": "koi",
            "viewed": 492
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 sr = iResolution.xy;\n    float t = fract(iTime * 0.5);                    // zoom 2x every 2 seconds\n    ivec2 ic = ivec2(fragCoord * exp2(t));           // scaled integer coordinates\n    float r = exp2(t + ceil(log2(max(sr.x, sr.y)))); // highest value that can appear on-screen (zooming breaks this somewhat)\n    float v = float(ic.x ^ ic.y) / r;                // XOR and divide result by r to keep within [0, 1]\n    fragColor = vec4(vec3(v), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}