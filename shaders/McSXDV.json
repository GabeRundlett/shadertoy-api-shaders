{
    "Shader": {
        "info": {
            "date": "1712424866",
            "description": "Funky *and* fresh!",
            "flags": 0,
            "hasliked": 0,
            "id": "McSXDV",
            "likes": 1,
            "name": "Funky Pattern",
            "published": 3,
            "tags": [
                "2d",
                "pattern"
            ],
            "usePreview": 0,
            "username": "yonibr",
            "viewed": 96
        },
        "renderpass": [
            {
                "code": "#define VARY_DELTA_T\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, s, -s, c);\n\treturn m * v;\n}\n\n#define NUM_OCTAVES 6\n#define H 0.75\n\nfloat hash(vec2 p)\n{\n    p  = fract( p*0.6180339887 );\n    p *= 25.0;\n    return fract( p.x*p.y*(p.x+p.y) );\n}\n\nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float a = hash(p+vec2(0,0));\n\tfloat b = hash(p+vec2(1,0));\n\tfloat c = hash(p+vec2(0,1));\n\tfloat d = hash(p+vec2(1,1));\n    return mix(mix( a, b,f.x), mix( c, d,f.x),f.y);\n}\n\nfloat fbm( in vec2 x)\n{    \n    float G = exp2(-H);\n    float f = 1.0;\n    float a = 1.0;\n    float t = 0.0;\n    for( int i=0; i<NUM_OCTAVES; i++ )\n    {\n        t += a*noise(f*x);\n        f *= 2.0;\n        a *= G;\n    }\n    return t;\n}\n\n\nfloat pattern(vec2 p, float m_t1, float m_t2, float y_mult)\n{\n    float t1 = cos(iTime * m_t1 * 0.3);\n    float t2 = sin(iTime * m_t2 * 0.3);\n    vec2 t1_v = vec2(t1, t1 * y_mult);\n    vec2 t2_v = vec2(t2, t2 * y_mult);\n\n    vec2 q = vec2(fbm(p + vec2(t2, t1) * 0.2), fbm(p + vec2(5.2, 1.3) * t1_v));\n    vec2 r = vec2(fbm(p + 4.0 * q + vec2(1.7, 9.2) * t2_v), fbm(p + 4.0 * q + vec2(8.3, 2.8) * t2_v));\n\n    return fbm(p + 4.0 * r);\n}\n\n\nvec3 get_background(vec2 uv, float multiplier) {\n    return normalize(\n        vec3(\n            pattern(uv, 1.0 / 58.0, 1.0 / 6.0, 2.5),\n            pattern(uv, 1.0 / 69.0, 1.0 / 5.0, 2.5),\n            pattern(uv, 1.0 / 43.0, 1.0 / 9.0, 2.5)\n        )\n    ) * multiplier;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n#ifdef VARY_DELTA_T\n    float time = iTime + cos(iTime);\n#else\n    float time = iTime;\n#endif\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    vec2 uv_rot1 = rotate(uv, time);\n    vec2 uv_rot2 = rotate(uv, -time);\n    vec2 uv_rot3 = rotate(uv, time * 1.5);\n    vec2 uv_rot4 = rotate(uv, -time * 1.5);\n\n    vec3 col = vec3(0.0);\n    \n    col += vec3(0.5, 0.0, 0.0) * max(0.0, 10.0 * (0.1 - smoothstep(0.0, 0.1, abs(uv_rot1.x - uv_rot1.y))));\n    col += vec3(0.5, 0.0, 0.0) * max(0.0, 10.0 * (0.1 - smoothstep(0.0, 0.1, abs(uv_rot2.x + uv_rot2.y))));\n    col += vec3(0.4, 0.0, 0.4) * max(0.0, 10.0 * (0.1 - smoothstep(0.0, 0.1, abs(sqrt(abs(uv_rot1.x)) - abs(uv_rot1.y)))));\n    col += vec3(0.0, 0.5, 0.0) * max(0.0, 10.0 * (0.1 - smoothstep(0.0, 0.1, abs(abs(uv_rot2.x) - sqrt(abs(uv_rot2.y))))));\n    col += vec3(0.0, 0.0, 0.5) * max(0.0, 10.0 * (0.1 - smoothstep(0.0, 0.1, abs(uv.x * uv.x - uv.y * uv.y - 0.25 * abs(sin(time))))));\n    col += vec3(0.0, 0.0, 0.5) * max(0.0, 10.0 * (0.1 - smoothstep(0.0, 0.1, abs(uv.x * uv.x - uv.y * uv.y + 0.25 * abs(sin(time))))));\n    col += vec3(0.0, 0.5, 0.5) * max(0.0, 20.0 * (0.05 - smoothstep(0.0, 0.05, abs(uv.x * uv.x + uv.y * uv.y - 0.25 * abs(cos(time))))));\n\n    col += vec3(0.2, 0.8, 0.6) * max(0.0, 10.0 * (0.1 - smoothstep(0.0, 0.1, abs(pow(uv_rot3.x, 2.0) - abs(uv_rot3.y)))));\n    col += vec3(0.7, 0.7, 0.5) * max(0.0, 10.0 * (0.1 - smoothstep(0.0, 0.1, abs(abs(uv_rot4.x) - pow(uv_rot4.y, 2.0)))));\n\n    float len2 = dot(col, col);\n    if (len2 < 0.15) {\n        col += max(vec3(0.0), cos(iTime+uv.xyx+vec3(0,2,4))) * (len2 / 0.2);\n    }\n    if (dot(col, col) < 0.1) {\n        col += get_background(uv, 0.9);\n    }\n\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}