{
    "Shader": {
        "info": {
            "date": "1546506347",
            "description": "Playing with wave equation\n0 - clear buffers\nA - toggle cumulative amplitude/waveform rendering\nW - hide/show walls \nmouse click - place 3rd source",
            "flags": 48,
            "hasliked": 0,
            "id": "3dsGWM",
            "likes": 19,
            "name": "2.4GHz",
            "published": 3,
            "tags": [
                "waves"
            ],
            "usePreview": 0,
            "username": "klk",
            "viewed": 872
        },
        "renderpass": [
            {
                "code": "// Created by Alex Kluchikov\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float4 t  =texture(iChannel0,fragCoord/iResolution.xy);\n    float4 t10=texture(iChannel0,(fragCoord+float2(1,0))/iResolution.xy);\n    float4 t01=texture(iChannel0,(fragCoord+float2(0,1))/iResolution.xy);\n\n    float4 g  =texture(iChannel1,fragCoord/iResolution.xy);\n    \n    float4 c;\n    c.a=1.0;\n    c.g=0.5;\n    c.b=0.5+(t01.r-t.r)*10.0;\n    c.r=0.5+(t10.r-t.r)*10.0;\n\tc.rgb=float3(0.2,0.4,0.8);\n    c.rgb+=t.rgb;\n\n\tfloat w=clamp((0.8-pow(g.r,4.0))*8.0,0.0,1.0);\n\n    if(!keyToggled(KEY_W))\n\t    c.rgb=mix(c.rgb, float3(1,0.85,0.6), w);\n\n    if(keyToggled(KEY_A))\n    {\n        float a=clamp(1.0-t.a,0.0,1.0);\n        a*=a*a;\n        c.rgb=float3(\n            pow(1.0-a,3.0)*6.0,\n            1.0-6.0*(a-0.4)*(a-0.4),\n            1.0-6.0*(a-0.6)*(a-0.6)\n        );\n\n        if(!keyToggled(KEY_W))\n\t\t    c.rgb=mix(c.rgb, float3(1,1,1), w);\n    }\n    \n    \n    fragColor=c;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Created by Alex Kluchikov\n\n#define float3 vec3\n#define float2 vec2\n#define float4 vec4\n\nconst float PI=3.1415926535;\n\n#define KEY_A 65\n#define KEY_W 87\n#define KEY_0 48\n\n#define keyPressed(key) (texture(iChannel3,float2((float(key)+0.5)/256.0,0.25)).x>0.0)\n\n#define keyToggled(key) (texture(iChannel3,float2((float(key)+0.5)/256.0,0.75)).x>0.0)\n\nfloat4 Step(float2 fc, float2 res, float2 mc, \n            float time, int fr, sampler2D s0, sampler2D s1)\n{\n    if(fr==0)\n    {\n        return float4(0.0);\n    }\n    \n    float4 a00=texture(s0,(fc+float2(-1,-1))/res);\n    float4 a22=texture(s0,(fc+float2( 1, 1))/res);\n    float4 a02=texture(s0,(fc+float2(-1, 1))/res);\n    float4 a20=texture(s0,(fc+float2( 1,-1))/res);\n    \n    float4 a01=texture(s0,(fc+float2(-1, 0))/res);\n    float4 a10=texture(s0,(fc+float2( 0,-1))/res);\n    float4 a21=texture(s0,(fc+float2( 1, 0))/res);\n    float4 a12=texture(s0,(fc+float2( 0, 1))/res);\n\n    float4 a11=texture(s0,(fc+float2( 0, 0))/res);\n\n    float4 g11=texture(s1,fc/res);\n\n    /*\n    if(g11.r<1.0)\n    {\n        a11=float4(0.0);\n        a01=a11;\n        a10=a11;\n        a21=a11;\n        a12=a11;\n    }\n    */\n    \n    float4 c;\n    float a0=\n        (\n        +a01.r\n        +a10.r\n        +a12.r\n        +a21.r\n\t\t)*sqrt(0.5)\n        +(\n        +a01.r\n        +a10.r\n        +a12.r\n        +a21.r\n\t\t)*1.0;\n\n        \n        \n    float d=(\n        a0-a11.g*(4.0+sqrt(0.5)*4.0)\n    )/(4.0+sqrt(0.5)*4.0);\n\n    d*=g11.r;\n    \n    c.r=a11.r+d;\n    c.g=a11.r;\n    c.b=a11.g;\n    float a=a11.a*4.0+a01.a+a10.a+a12.a+a21.a;\n    c.a=max(a/8.0,abs(c.g))*0.999;\n\n    \n    float freq=1.0;\n    float l=length(fc-mc);\n    \n    float a1=1.5;\n    float a2=0.75;\n    float a3=0.75;\n    \n    if(l<10.0)\n    {\n        float a=(1.0-(abs(fc.x-mc.x)/10.0))*clamp((fc.y-mc.y)/10.0,0.0,1.0);\n        c.r=sin(float(fr)/PI*freq)*a*a*a*a1;\n    }\n\n    l=length(fc-float2(250,5)/float2(640,380)*res)/5.0;\n    if(l<1.0)\n    {\n        c.r=sin(float(fr)/PI*freq)*a2;\n    }\n\n    l=length(fc-float2(635,120)/float2(640,380)*res)/5.0;\n    if(l<1.0)\n    {\n        c.r=sin(float(fr)/PI*freq)*a3;\n    }\n    \n  \n//    c.r=fract(fc.x/res.x*3.0)-0.5;\n    return c;\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor=Step(fragCoord, iResolution.xy*1.0, iMouse.xy, \n                  iTime, iFrame, iChannel0, iChannel1);\n    if(keyPressed(KEY_0))\n    {\n        fragColor=float4(0.0);\n    }\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "float lv(float2 p0, float2 p1, float2 uv, float w, float a)\n{\n    float2 dp=normalize(p1-p0);\n    float2 dpp=float2(dp.y, -dp.x);\n    float l=abs(dot(dpp,uv-p0));\n    if((dot(dp,uv-p0)<0.0))\n        l=length(uv-p0);\n    if((dot(-dp,uv-p1)<0.0))\n        l=length(uv-p1);\n    return clamp(1.0-(1.0-l/w)*a,0.0,1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(1.0,1.0,1.0,1.0);\n    float2 res=iResolution.xy;\n\n    fragColor.r*=lv(float2(0,0),float2(res.x,0),fragCoord,8.0,1.0);\n    fragColor.r*=lv(float2(0,0),float2(0,res.y),fragCoord,8.0,1.0);\n    fragColor.r*=lv(res,float2(res.x,0),fragCoord,8.0,1.0);\n    fragColor.r*=lv(res,float2(0,res.y),fragCoord,8.0,1.0);\n\n    float2 s=res/float2(640,380);\n\n    fragColor.r*=lv(float2(100,150)*s,float2(100,275)*s,fragCoord,4.0,0.15);\n    fragColor.r*=lv(float2(300,  0)*s,float2(300,275)*s,fragCoord,4.0,0.15);\n    fragColor.r*=lv(float2(250,150)*s,float2(500,150)*s,fragCoord,4.0,0.15);\n    fragColor.r*=lv(float2(200,150)*s,float2(  0,150)*s,fragCoord,4.0,0.15);\n    fragColor.r*=lv(float2( 75,275)*s,float2(150,275)*s,fragCoord,4.0,2.0);\n    fragColor.r*=lv(float2( 25,275)*s,float2(  0,275)*s,fragCoord,4.0,2.0);\n    fragColor.r*=lv(float2(200,275)*s,float2(500,275)*s,fragCoord,4.0,2.0);\n    fragColor.r*=lv(float2(500,225)*s,float2(500,275)*s,fragCoord,4.0,2.0);\n    fragColor.r*=lv(float2(500, 50)*s,float2(500,175)*s,fragCoord,4.0,2.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}