{
    "Shader": {
        "info": {
            "date": "1540226155",
            "description": "Insert hole in noise, with more effect at low scale than \nmouse.y tunes hole radius\nMouse.x tunes post-hole distance back to normal",
            "flags": 0,
            "hasliked": 0,
            "id": "ll3fRj",
            "likes": 12,
            "name": "push hole in noise",
            "published": 3,
            "tags": [
                "blackhole",
                "short",
                "parameterization"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 677
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/ltcBRj\n\n#define S(x) smoothstep(1.5, 0., abs(fract(x)-.5)/fwidth(x) )\n//#define N(U) (2.*texture(iChannel0, .5+.5*(U)*R.y/R).x )\n#define N(U) (2.*smoothstep(0.,1.,texture(iChannel0, .5+.5*(U)*R.y/R).x ))\n\nfloat D = .5,     // push distance\n      n = 1.;     // slope after push: \"back to normal\" invdistance\n\n// --- return pushed parameterization + concentration\nvec2 push(vec2 U, float D, float n, out float c) {\n                  // --- pull original parameterization falling in this pixel\n    float l = length(U);\n    U /= l;\n    // d' = f(d)        f(x) = (x^n+D^n)^(1/n)  \n    // d = f^-1(d')  f^-1(x) = (x^n-D^n)^(1/n)\n    l *= c = pow( 1.-pow(D/l,n), 1./n ); \n    return U * l; \n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy, V, M = iMouse.xy;\n    U = ( U+U - R ) / R.y;\n    \n    if (M!=vec2(0)) M /= R, D = M.y, n = 1./(.01+M.x); // mouse control\n    \n    float c;\n    O = vec4(1); \n    for( int i=0; i<5; i++) {\n        V = push(U,D,n,c);\n        //c = mix(1.,c,.6);  // tune effect of concentration\n        //O *= N(V) / c/1.5;\n        O *= N(V); if (i==0) O /= mix(1.,c,.95) * 8.;\n        U *= 2.; D*= 2.; n *= 1.5;\n    } \n    \n    O *= vec4(1,.7,.4,0);\n    O = sqrt(O);   // to sRGB\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}