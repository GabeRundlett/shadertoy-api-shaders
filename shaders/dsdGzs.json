{
    "Shader": {
        "info": {
            "date": "1677729924",
            "description": "gradient color horizontal 6",
            "flags": 0,
            "hasliked": 0,
            "id": "dsdGzs",
            "likes": 0,
            "name": "gradient color horizontal 6(激活）",
            "published": 3,
            "tags": [
                "gradientcolorhorizontal6"
            ],
            "usePreview": 0,
            "username": "tianluo97",
            "viewed": 141
        },
        "renderpass": [
            {
                "code": "//The shader code that embeds a 938x84 frame buffer at its largest size without stretching the input\n\nconst vec2 target_resolution = vec2(940, 86);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Same texCoord as in Minecraft\n    vec2 texCoord = fragCoord/iResolution.xy;\n    // Own uv variable\n    vec2 uv = texCoord;\n    \n    // Center origin around screen center (range -0.5, 0.5)\n    uv -= .5;\n    \n    // Squish image in excessive dimension\n    float r = (iResolution.x/iResolution.y) / (target_resolution.x/target_resolution.y);\n    if (r >= 1.) uv.x *= r;\n    else uv.y /= r;\n    \n    // Recenter origin to start at 0 (range 0.0, 1.0)\n\tuv += .5;\n    uv.y -= 0.5/r - 0.5;   \n    \n    \n    float PI = 3.1415926;\n    float time = iTime * 0.0; \n    float timeLeft = time * 0.0; \n    float scale = 1.2;\n    float scaleLeft = 3.6;\n    vec3 morningScatter = vec3(1.000,0.647,0.322);;\n    \n    vec4 color0 = vec4(1.000,0.557,0.478,1.0);\n    vec4 color1 = vec4(1.000,0.592,0.322,1.0); \n    vec4 color2 = vec4(1.000,0.710,0.502,1.0);\n    vec4 color3 = vec4(0.376,0.443,0.824,1.0);\n    vec4 color4 = vec4(0.141,0.369,1.000,1.0);\n    \n    if(uv.x >= 0.2){\n    \n    //修正uv.x\n    uv.x = smoothstep(0.2,1.0,uv.x);\n    \n    float step0 = 0.2 * scale;\n    float step1 = 0.3 * scale;\n    float step2 = 0.5 * scale;\n    float step3 = 0.8 * scale;\n\n    float offset = uv.x - 0.;\n    float y = mod(offset,scale);\n    \n    //morning Color\n    if (y < step0) {\n    float dist0 = smoothstep(0.0, step0, y);\n    fragColor = mix(color0, color1, dist0);\n    }\n    \n    if (y > step0 && y < step1) {\n    float dist1 = smoothstep(step0, step1, y);\n    fragColor = mix(color1, color2, dist1);\n    }\n    \n    //红到蓝 step1 - step2\n    else if (y > step1 && y < step2) {\n    float dist2 = smoothstep(step1, step2, y);\n    fragColor = vec4(dist2,dist2,dist2,1.0);\n    fragColor = mix(color2, color3, dist2);\n    }\n    \n    else if (y > step2 && y < step3) {\n    float dist02 = smoothstep(step2, step3, y);\n    fragColor = vec4(dist02,dist02,dist02,1.0);\n    fragColor = mix(color3, color4, dist02);\n    }\n    \n    else if (y > step3){\n    float dist3 = smoothstep(step3, 1.0 * scale, y);\n    fragColor = mix(color4, color0, dist3);\n    }\n    \n    //fragColor = mix(vec4(morningScatter,1.0),fragColor,pow(uv.x/1.3,0.3));\n    //fragColor = mix(fragColor,vec4(morningScatter,1.0),pow(uv.x/1.3,20.0));\n    //color的颜色调整\n    fragColor = sqrt(fragColor);\n    //fragColor = vec4(0.);\n    }\n    \n    else{\n    \n    //调整uv\n    uv.x = uv.x * 5.0;\n    uv.x = 1.0 - uv.x;\n    \n    vec3 startColor = vec3(0.341,0.482,0.886);\n    \n    float step0 = 0.2 * scaleLeft;\n    float step1 = 0.3 * scaleLeft;\n    float step2 = 0.5 * scaleLeft;\n    float step3 = 0.8 * scaleLeft;\n    \n    float offset = uv.x - timeLeft;\n    float y = mod(offset,scaleLeft);\n    \n    if (y < step0) {\n    float dist0 = smoothstep(0.0, step0, y);\n    \n    fragColor = mix(color0, color1, dist0);\n    }\n    \n    else  if (y > step0 && y < step1){\n    float dist1 = smoothstep(step0, step1, y);\n    fragColor = mix(color1, color2, dist1);\n    }\n    \n    else if (y > step1 && y < step2){\n    float dist2 = smoothstep(step1, step2, y);\n    fragColor = mix(color2, color3, dist2);\n    }\n    \n    else if (y > step2 && y < step3){\n    float dist02 = smoothstep(step2, step3, y);\n    fragColor = mix(color3, color4, dist02);\n    }\n    \n    else if (y > step3){\n    float dist3 = smoothstep(step3, 1.0 * scaleLeft, y);\n    fragColor = mix(color4, color0, dist3);\n    }\n    \n    vec3 color = mix(startColor,fragColor.rgb,1.0-uv.x);\n    \n    fragColor = vec4(color,1.0);\n    \n    //fragColor = mix(vec4(morningScatter,1.0),fragColor,pow(uv.x/1.3,0.7));\n    \n    fragColor = sqrt(fragColor);\n    //fragColor = vec4(1.0);\n    }\n    \n    //nightColor\n\n    vec4 nightColor1 = vec4(0.000,0.067,0.259,1.0);\n    vec4 nightColor0 = vec4(0.000,0.165,0.620,1.0);\n    vec4 nightColor = mix(nightColor0, nightColor1, pow(uv.x,1.));\n    nightColor = sqrt(nightColor);\n    \n    //smoothstep变化\n    fragColor = mix(nightColor, fragColor, smoothstep(0.0,1.0,iTime*0.2));\n    \n    //对于time作sin的变化\n    //fragColor = mix(nightColor, fragColor, sin(iTime*0.5)*0.5+0.5);\n    \n    //fragColor = nightColor;\n    \n    // Black bars at the sides\n    if (uv.x < 0. || uv.x > 1. || uv.y < 0. || uv.y > 1.) fragColor = vec4(0);    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}