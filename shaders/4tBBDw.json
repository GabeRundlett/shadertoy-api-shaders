{
    "Shader": {
        "info": {
            "date": "1515927478",
            "description": "variant of 'single rotation' automata [url]https://shadertoy.com/view/4tSfDD[/url]\nsimple rules with Margolus neighborhood (alternating quads).    Mouse paints.\nMany properties (time reversal, no cycle creation, still shapes,etc).\nSee ref URLs  in header.",
            "flags": 32,
            "hasliked": 0,
            "id": "4tBBDw",
            "likes": 3,
            "name": " 'diffusion' automata",
            "published": 3,
            "tags": [
                "automata",
                "cellular",
                "margolus"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 615
        },
        "renderpass": [
            {
                "code": "// variant of 'single rotation' automata: https://shadertoy.com/view/4tSfDD\n\n#define SCALE 2\n\n// some descriptions and videos:\n//     http://dmishin.blogspot.com/2013/11/the-single-rotation-rule-remarkably.html\n//     https://dmishin.github.io/\n//     https://www.youtube.com/watch?v=r5GbvJ-LKH8\n//     https://www.youtube.com/watch?v=lkdnOuzHdFE \n\nvoid mainImage( out vec4 O, vec2 U ) {\n    O = texelFetch(iChannel0,ivec2(U)/SCALE,0);\n    if (O.x>0.) O.gba = vec3(0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define SCALE 2.\n\n#define T(i,j) texelFetch(iChannel0,ivec2(mod(U+vec2(i,j),floor(iResolution.xy/SCALE/2.)*2.)),0)\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    if (iFrame==0) {\n      //float l = sin(100.* length(U/iResolution.xy - 1./2./SCALE) )-.8; \n        float l = 1. - 3.5*SCALE*length(U/iResolution.xy - 1./2./SCALE); \n        O = vec4(fract(4321.*sin(1234.7*(U.x+17.31*U.y))) < l ); // init state \n        return;\n    }\n    \n\tO = T(0,0); \n    \n    //for(int i=0; i<4000000; i++) O += 0.;      // slow down\n    \n    vec2   s = vec2(iFrame%2);\n         //s = vec2(0);                          // alterning quads ( Margolus neighborhood )\n    vec2 V = mod(U-.5-s,2.); U -= V;             // location in current quad\n    float p = ( T(0,0)+T(1,0)*2.+T(0,1)*4.+T(1,1)*8. ).x;\n    O.x =   p == 1. ? float( V == vec2(1,1) )    // one single cell in quad -> go to opposite corner\n          : p == 2. ? float( V == vec2(0,1) )\n          : p == 4. ? float( V == vec2(1,0) )\n          : p == 8. ? float( V == vec2(0,0) )\n          : p == 9. ? float( V.x != V.y  )       // just a diag in quad : flip it.\n          : p == 6. ? float( V.x == V.y  )\n    /**   : p == 3. ? float( V.y == 1.  )        // just a bar : swap it.\n          : p == 12.? float( V.y == 0.  )\n          : p == 5. ? float( V.x == 1.  )\n          : p == 10.? float( V.x == 0.  )  **/\n          : O.x;         \n    \n    O.gba = .99*vec3(1,.98,0)*O.gba + .04*O.x;   // time blur\n    \n    if ( iMouse.z > 0. && U+V-.5 == floor(iMouse.xy/SCALE) ) O = vec4(1); // mouse draw\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}