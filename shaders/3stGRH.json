{
    "Shader": {
        "info": {
            "date": "1567785346",
            "description": "Winning shader made at Revision 2019 Shader Showdown Quarter final. Live coded on stage in 25 minutes.\nVideo of the battle: https://youtu.be/uifMBMt9ASU?t=3496",
            "flags": 0,
            "hasliked": 0,
            "id": "3stGRH",
            "likes": 21,
            "name": "Shader Showdown Rev-19 1/4 final",
            "published": 3,
            "tags": [
                "demoscene",
                "particles",
                "glow",
                "revision",
                "live",
                "battle",
                "spaceship",
                "shadershowdown",
                "creature",
                "flying",
                "industrial",
                "fly",
                "biomechanic"
            ],
            "usePreview": 1,
            "username": "evvvvil",
            "viewed": 1131
        },
        "renderpass": [
            {
                "code": "// Winning shader made at Revision 2019 Shader Showdown Quarter final\n// Video of the battle: https://youtu.be/uifMBMt9ASU?t=3496\n\n// The \"Shader Showdown\" is a demoscene live-coding shader battle competition.\n// 2 coders battle for 25 minutes making a shader on stage. No google, no cheat sheets.\n// The audience votes for the winner by making noise or by voting on their phone.\n\n// \"When the seagulls follow the trawler it's because they think fish will be thrown to the sea.\" - Eric Cantona to journalists who expected him to apologise for kicking a Crystal Palace fan who had insulted him.\n\nvec2 s,e=vec2(.00035,-.00035);float t,tt,b,bb,g,att,si;vec3 np,bp,cp;\nfloat bo(vec3 p,vec3 r){p=abs(p)-r;return max(max(p.x,p.y),p.z);}\nvec2 fb( vec3 p,float s)\n{\n  bb=sin(p.z*.1);\n  vec2 h,t=vec2(bo(abs(p)-vec3(3,0,0),vec3(1)),5.+s);\n  h=vec2(bo(abs(p)-vec3(2,0,0),vec3(1.2)),3.+s);\n  h.x=min(bo(abs(abs(p)-vec3(0,1,.6))-vec3(0,.3,.3),vec3(3,.1,.1)),h.x);\n  t=t.x<h.x?t:h;\n  h=vec2(bo(abs(p)-vec3(2,0,0),vec3(.4-bb,.4-bb,10)),6.+s);  \n  t=t.x<h.x?t:h;\n  h=vec2(bo(abs(p)-vec3(2,0,0),vec3(.3-bb,.5-bb,10)),3.+s);  \n  t=t.x<h.x?t:h; t.x*=0.5;\n  return t;\n}\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));}\nvec2 mp( vec3 p)\n{\n  att=length(p)-20.;\n  si=sin(p.z*.1+tt*20.+1.57);\n  p.y+=si*5.;\n  p.xy*=r2(si*.3);\n  np=bp=p;\n  for(int i=0;i<6;i++){\n      np=abs(np)-vec3(1.+4.*b,1,3);\n    np.xy*=r2(.5+sin(p.z*.2)*.3+b);\n    np.yz*=r2(.2);\n    if(mod(float(i),2.)>0.){\n      bp=abs(bp)-vec3(5.+2.*b,1,2);\n    bp.xz*=r2(.1);\n    bp.xy*=r2(.2+si*.2);\n    }        \n  }\n  bp.x-=1.;\n  vec2 h,t=fb(np,0.);\n  h=fb(bp,5.);  \n  t=t.x<h.x?t:h;\n  h=vec2(length(abs(p)-vec3(4.+2.*b,0,15))-3.,6);  \n  g+=0.1/(0.1+h.x*h.x*20.);\n  t=t.x<h.x?t:h;\n  cp=p*.5;cp.z=mod(cp.z+tt*100.-sin(p.y),10.)-5.;\n  h=vec2(length(cos(cp*.5-2.))-0.001,6);  \n  g+=0.1/(0.1+h.x*h.x*400.);\n  t=t.x<h.x?t:h;\n  h=vec2(bo(abs(np*.5)-1.-fract(tt*10.)*20.,vec3(.2,10,.2)),6);  \n  g+=0.1/(0.1+h.x*h.x*10.);\n  t=t.x<h.x?t:h;\n  return t;\n}\nvec2 tr( vec3 ro, vec3 rd)\n{\n  vec2 h,t=vec2(.1);\n  for(int i=0;i<128;i++){\n    h=mp(ro+rd*t.x);\n    if(t.x<.0001||t.x>60.) break;\n    t.x+=h.x;t.y=h.y;    \n  }\n  if(t.x>60.) t.x=0.;\n  return t;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = vec2(fragCoord.x/iResolution.x,fragCoord.y/iResolution.y);\n  uv -= 0.5;uv/=vec2(iResolution.y/iResolution.x,1);\n  tt=mod(iTime*.1,6.283);\n  b=.5+2.*clamp(sin(tt*5.),-.25,.25);\n  vec3 ro=vec3(2.+cos(tt*5.-1.57)*(1.-b)*40.,2,sin(tt*5.-1.57)*40.),\n  cw=normalize(vec3(0)-ro),\n  cu=normalize(cross(cw,vec3(0,1,0))),\n  cv=normalize(cross(cu,cw)),\n  rd=mat3(cu,cv,cw)*normalize(vec3(uv,.5)),co,fo,ld=normalize(vec3(-.5,.5,.1));\n  co=fo=vec3(1,.5,.2)-rd.y*.4;  \n  s=tr(ro,rd);t=s.x;\n if(t>0.){\n   vec3 po=ro+rd*t,no=normalize(e.xyy*mp(po+e.xyy).x+e.yyx*mp(po+e.yyx).x+e.yxy*mp(po+e.yxy).x+e.xxx*mp(po+e.xxx).x),al=vec3(.1,.5-att*0.03,.6-att*0.03);   \n   if(s.y<5.) al=vec3(0);\n   if(s.y>5.) al=vec3(1);\n   if(s.y<10.) al=vec3(0);\n   if(s.y>10.) al=vec3(1);\n   if(s.y==10.||s.y==5.) al=vec3(.1,.5+att*0.03,.6-att*0.03);\n   float dif=max(0.,dot(no,ld)),\n   aor=t/50.,ao=exp2(2.-pow(max(0.,1.-mp(po+no*aor).x/aor),2.)),\n   spo=exp2(10.*texture(iChannel0,vec2(np.y,dot(np.xz,vec2(0.7)))/vec2(30,10)).r);\n   if(s.y>6.) spo=exp2(10.*texture(iChannel0,vec2(bp.y,dot(bp.xz,vec2(0.7)))/vec2(30,10)).r);\n   float fr=pow(1.+dot(no,rd),4.),\n   sss=smoothstep(0.,1.,mp(po+ld*.4).x/.4),       \n   sp=pow(max(dot(reflect(-ld,no),-rd),0.),spo);   \n   co=mix(sp+al*ao*(dif+sss),fo,min(fr,.5));\n   co=mix(co,fo,1.-exp(-.000003*t*t*t));\n }\n fragColor = vec4(pow(mix(co,co.zyx,b)+g*0.3,vec3(.45)),1);//Color change .zyx idea by Slerpy / Alcatraz, added on twitch after showdown\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}