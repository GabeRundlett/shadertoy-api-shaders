{
    "Shader": {
        "info": {
            "date": "1607205206",
            "description": "various features in hexagonal tiling: tile id, face id, local coordinates, rand value per tile, etc.",
            "flags": 0,
            "hasliked": 0,
            "id": "tsKBDD",
            "likes": 12,
            "name": "hexa world",
            "published": 3,
            "tags": [
                "tiling",
                "hexagonal",
                "tuto",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 441
        },
        "renderpass": [
            {
                "code": "vec3 hash( uvec3 x ) // integer hash from https://www.shadertoy.com/view/XlXcW4\n{\n    const uint k = 1103515245U;  // GLIB C\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;    \n    return vec3(x) / float(0xffffffffU);\n}\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy, \n         U = 12.* u / R.y + iTime;\n\n    U *= mat2(1,0,.5,.87);                     // parallelogram frame\n    vec3  V = vec3( U, U.y-U.x +3. );          // 3 axial coords\n    ivec3 I = ivec3(floor(V)), J;\n          I += I.yzx;\n          J = ( I % 3 ) / 2;                   // J.xy = hexagon face\n    int   c = J.x + 2* J.y;                    // int face id\n /*       J = I % 3;                           // variant:\n    int   c = J.x==2 ? 1 : J.y==2 ? 2 : 0;     //   front faces (as above)\n // int   c = J.x==1 ? 1 : J.y==0 ? 2 : 0; */  //   back faces\n          I = ( I + ivec3(1,0,0) ) / 3;        // I.xy = hexagon id\n    vec3  r = hash(uvec3(I.xy,0));             // rand values per hexagon\n//  U = fract(U);                              // local coords\n    V = fract( V/2. + .5*vec3( I.y, 1+I.y-I.x, 1+I.x ) );\n                                               // --- various hexagons display mode\n    O = r.x < .33 ? vec4(V,0)                  // local 3coords\n      : r.x < .66 ? vec4(c==1,c==2,c==0,0)     // face ids\n      : r.x < .71 ? fract(vec4(I.xy,0,0)/10.)  // tile id\n      :             vec4(r.z);                 // random value\n    if (r.y > .5) O.xyz *= sin(62.8*V);        // show axis\n    \n    U = (V.xy*2.-1.) * mat2( .87,0, -.5,1)/.87;// back to screenspace\n    if (r.z > .7) O *= smoothstep( .0, .05, abs(length(U)-1.) );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}