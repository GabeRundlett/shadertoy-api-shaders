{
    "Shader": {
        "info": {
            "date": "1690667852",
            "description": "First shader",
            "flags": 0,
            "hasliked": 0,
            "id": "dtXcW8",
            "likes": 1,
            "name": "Hello world shader",
            "published": 3,
            "tags": [
                "gradient"
            ],
            "usePreview": 0,
            "username": "tanczmy",
            "viewed": 348
        },
        "renderpass": [
            {
                "code": "// cosine based palette, 4 vec3 params\nvec3 palette(float t)\n{\n    vec3 a = vec3(0.668, 0.608, 0.768);\n    vec3 b = vec3(1.048, 0.548, 0.362);\n    vec3 c = vec3(0.778, 1.338, 1.388);\n    vec3 d = vec3(1.617, 1.528, 3.007);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvec2 rotateUV(vec2 uv, vec2 pivot, float rotation) {\n    float cosa = cos(rotation);\n    float sina = sin(rotation);\n    uv -= pivot;\n    return vec2(\n        cosa * uv.x - sina * uv.y,\n        cosa * uv.y + sina * uv.x \n    ) + pivot;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    \n    // Translate (0, 0) to center\n    vec2 uv = ((fragCoord * 2.0) - res) / res.y;\n    uv = rotateUV(uv, vec2(0.0), iTime * .1);\n\n\n    vec2 uv0 = uv * sin(iTime / 5.);\n    \n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 3.0; i++) {\n        uv = fract(uv * 1.6) - 0.5;\n\n        float dist = length(uv) * exp(-length(uv0));\n\n        // Color palette\n        vec3 color = palette(length(uv0) + i * 0.4 - iTime * .2);\n\n        dist = sin(dist * 8. + iTime * .3) / 8.;\n        dist = abs(dist);\n\n        dist = 0.01 / dist;\n\n        finalColor += color * dist / 1.8;\n    }\n    \n    finalColor.r = pow(finalColor.r, 1.2);\n    finalColor.g = pow(finalColor.g, 1.6);\n    finalColor.b = pow(finalColor.b, 1.6);\n\n    float clmp = 0.05;\n\n    finalColor = clamp(finalColor, 0., 1.0 - clmp) + clmp;\n        \n    fragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}