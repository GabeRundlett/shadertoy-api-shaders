{
    "Shader": {
        "info": {
            "date": "1700007688",
            "description": "Smooth Life Nov2023",
            "flags": 32,
            "hasliked": 0,
            "id": "dlVcRW",
            "likes": 7,
            "name": "Smooth Life Nov2023",
            "published": 3,
            "tags": [
                "conwaylife"
            ],
            "usePreview": 0,
            "username": "amaxwell",
            "viewed": 241
        },
        "renderpass": [
            {
                "code": "// I learned from https://www.shadertoy.com/view/XtdSDn\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n\tfragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float sigmoid(float x, float shift, float scale) {\n    return 1.0 / (1.0 + exp((shift - x) * 4.0 / scale));\n}\nfloat combinedSigmoid(float x, float lowerBound, float upperBound, float normFactor) {\n    return sigmoid(x, lowerBound, normFactor) * (1.0 - sigmoid(x, upperBound, normFactor));\n}\nfloat rampStep(float position, float value) {\n    return clamp(value - position + 0.5, 0.0, 1.0);\n}\nfloat random(vec2 co) {\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nconst float PI = 3.14159265;\n\nconst float speed = 1.0;\nconst float outerRad = 10.0;\nconst float innerRad = 3.0;\n\nconst float lowerBound1 = 0.257;\nconst float upperBound1 = 0.336;\nconst float lowerBound2 = 0.365;\nconst float upperBound2 = 0.549;\nconst float normFactor1 = 0.028;\nconst float normFactor2 = 0.147;\n\nfloat transitionFunction(vec2 uv) {\n    float outerSum = 0.0;\n    float innerSum = 0.0;\n    for (float dx = -outerRad; dx <= outerRad; dx++) {\n        for (float dy = -outerRad; dy <= outerRad; dy++) {\n            vec2 d = vec2(dx, dy);\n            float dist = length(d);\n            float weight = texture(iChannel0, uv + d / iResolution.xy).x;\n            float innerRs = rampStep(innerRad, dist);\n            outerSum += weight * innerRs * (1.0 - rampStep(outerRad, dist));\n            innerSum += weight * (1.0 - innerRs);\n        }\n    }\n    outerSum /= PI * (outerRad * outerRad - innerRad * innerRad);\n    innerSum /= PI * innerRad * innerRad;\n\n    float a = combinedSigmoid(outerSum, lowerBound1, upperBound1, normFactor1);\n    float b = combinedSigmoid(outerSum, lowerBound2, upperBound2, normFactor1);\n    float ratio = sigmoid(innerSum, 0.5, normFactor2);\n    return (a * (1.0 - ratio) + b * ratio) * 2.0 - 1.0;\n}\n\nfloat getVal (vec2 fragCoord) {\n    if (iFrame == 0 || (iMouse.z > 0.0 && length(iMouse.xy - fragCoord) < 20.0)) {\n        return random(fragCoord);\n    }\n    vec2 uv = fragCoord / iResolution.xy;\n    return texture(iChannel0, uv).x + speed * transitionFunction(uv);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = vec4(vec3(clamp(getVal(fragCoord), 0.0, 1.0)), 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}