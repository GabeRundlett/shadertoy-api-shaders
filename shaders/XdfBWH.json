{
    "Shader": {
        "info": {
            "date": "1495812280",
            "description": "Just making sure that I am getting this core concept of this 3d tessellation right.\n\nYou see a slice that goes \"up\" trough a Honeycomb-tesselation \n== tightly packed WHITE space filling balls that only touch diagonally\n\nhttps://www.shadertoy.com/view/XsXB",
            "flags": 0,
            "hasliked": 0,
            "id": "XdfBWH",
            "likes": 4,
            "name": "honeycomb tessellation slice",
            "published": 3,
            "tags": [
                "slice",
                "honeycomb",
                "tessellation"
            ],
            "usePreview": 0,
            "username": "ollj",
            "viewed": 670
        },
        "renderpass": [
            {
                "code": "//return 3d honeycomb, distance to closest \"white tile\" of checkerboard tiling\nfloat cells(vec3 p){p=fract(p/2.)*2.;p=min(p,2.-p );    \n return min(length(p),length(p-1.));}\n\nvoid mainImage( out vec4 O, in vec2 fragCoord){O=vec4(1);\n vec2 u = fragCoord.xy/iResolution.xy;\n u.x*=iResolution.x/iResolution.y;\n vec3 u3=vec3(u*9.,iTime+.5);\n float r=cells(u3);//distance to honeycomb center\n vec3 a=step(.5,fract(u3*.5-.25));//color coded 3d coordinates\n //r=fract(r*5.); \n r=smoothstep(-.01,.01,r-.875);\n a=a*.5+.5;//mix with 50% grey                        \n O.rgb=1.-a*r;\n}\n\n//how do i get distance to this tile border again?\n//i saw and copied this before...",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}