{
    "Shader": {
        "info": {
            "date": "1664464229",
            "description": "Clearly not the most accurate simulation ever :D ",
            "flags": 0,
            "hasliked": 0,
            "id": "7tVBW1",
            "likes": 28,
            "name": "大龙猫 - GPU Heating for winter",
            "published": 3,
            "tags": [
                "fire"
            ],
            "usePreview": 0,
            "username": "totetmatt",
            "viewed": 470
        },
        "renderpass": [
            {
                "code": "/*\nForget Gas heating, invest into GPU Heating !\n\n\n*/\nvec3 erot(vec3 p,vec3 ax,float t){return mix(dot(ax,p)*ax,p,cos(t))+cross(ax,p)*sin(t);}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     vec2 uv = (fragCoord.xy -.5* iResolution.xy)/iResolution.y;\n    \n    vec3 col = vec3(0.);\n    \n    \n    vec3 p,d=normalize(vec3(uv,1.));\n    \n    for(float i=0.,e=0.,g=0.;i++<99.;){\n        p = d*g;\n        vec3 op=p;\n        p.z -=15.+sin(iTime);\n        \n        float v=0.3,qq=0.;\n        for(v=.3;v<50.;op=erot(op,vec3(0.,1.,0.),v+=v)){\n                 // ^-- Thermostat, increase to make GPU hotter\n            qq+=abs(dot((sin(op*v)),vec3(.2)/v));           \n           op = erot(op,normalize(vec3(-.5,.7,2.7)),iTime*.1+.741);\n        }\n        float h = length(p)-1.-qq;;\n        h = max((abs(p.y)-5.1),abs(qq)-.5);\n        g+=e=max(.01,abs(h));\n        col += vec3(1.)*.0255/exp(e*e*i);\n    }\n    col =mix(vec3(.2,.05,.01),vec3(.95,.4,.1),col*col);\n    fragColor = vec4(mix(col,sqrt(col),.5),1.0);\n                          // ^-- this is the a color normalization technics\n                          // based on a new scientific approach \n                          // developed at the International Institute of La RACHE\n                          // https://www.la-rache.com/\n                          // Scientific paper will come soon\n                          \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}