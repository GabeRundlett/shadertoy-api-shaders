{
    "Shader": {
        "info": {
            "date": "1636466131",
            "description": ":octopus:",
            "flags": 0,
            "hasliked": 0,
            "id": "ftd3zX",
            "likes": 25,
            "name": "- liquid -",
            "published": 3,
            "tags": [
                "fractal",
                "noise",
                "fbm",
                "water",
                "smoke",
                "metal",
                "liquid"
            ],
            "usePreview": 0,
            "username": "anahit_movsesyan",
            "viewed": 1028
        },
        "renderpass": [
            {
                "code": "float rand(vec2 p) {\n    return fract(sin(dot(p, vec2(12.99, 78.233))) * 43758.545);\n}\n\nfloat noise(vec2 p) {\n    vec2 f = fract(p);\n    f = f * f * f * f * (3. - 2. * f) * (3. - 2. * f);\n    vec2 i = floor(p);\n    return mix(mix(rand(i + vec2(0, 0)), \n                   rand(i + vec2(1, 0)), f.x),\n               mix(rand(i + vec2(0, 1)), \n                   rand(i + vec2(1, 1)), f.x), f.y);\n}\n\nfloat fbm(vec2 p) {\n    float v = 0.;\n    float a = 1.;\n    for(int i = 0; i < 4; ++i) {\n        p = 1.5 * p + 15.;\n        a *= 0.5;\n        v += a * noise(p);\n    }\n    return v;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 p = 2. * fragCoord.xy / iResolution.y;\n    \n    vec2 r1 = vec2(fbm(p + 0.02 * iTime), fbm(p + 0.005 * iTime));\n    vec2 r2 = vec2(fbm(p + 0.15 * iTime + 10. * r1), fbm(p + 0.12 * iTime + 12. * r1));\n\n    fragColor = vec4(1.8 * pow(fbm(p + r2), 2.) + 0.03);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}