{
    "Shader": {
        "info": {
            "date": "1678904256",
            "description": "loading animation",
            "flags": 0,
            "hasliked": 0,
            "id": "dsV3zc",
            "likes": 5,
            "name": "shadertoy loading animation",
            "published": 3,
            "tags": [
                "loadinganimation"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 259
        },
        "renderpass": [
            {
                "code": "#define n_tau 6.2831\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 o_trn_p = (fragCoord.xy - iResolution.xy*.5)  / iResolution.y;\n\n    float n_ang_nor = fract(atan(o_trn_p.y, o_trn_p.x)/n_tau);\n    float n_its = 8.;\n\n    float n_it = (n_ang_nor * n_its);\n    float n_it_fract = fract(n_it);\n    float n_it_floor = floor(n_it);\n    float n_it_nor = n_it_floor / n_its;\n\n    float n_aa = (1./min(iResolution.x, iResolution.y))*3.;\n\n\n    float n_lol = abs(n_it_fract-.5)*1.5;\n    // n_lol = smoothstep(0.0, 0.9, n_lol);\n    n_lol = 1.-n_lol;\n    // n_lol = pow(n_lol, 1./1.);\n    n_lol = smoothstep(0.5, .1, n_lol)*2.;\n    n_lol = 1. - n_lol;\n    // fragColor = vec4(n_lol);\n    // return ;\n    // float n_it_nor_trans = (n_it_floor / n_its)+(1./n_its/2.);\n\n    float n_d_cntr = length(o_trn_p);\n    \n    vec2 o_p_online = vec2(\n        cos((n_it_nor+(float(n_it_fract> .5)*(1./n_its))) * n_tau) * n_d_cntr,\n        sin((n_it_nor+(float(n_it_fract> .5)*(1./n_its))) * n_tau) * n_d_cntr\n    );\n    float n_d_line1 = length(o_trn_p - o_p_online);\n    float n_d_line = smoothstep(0.02, 0.02+n_aa, n_d_line1);\n\n\n    float n_d_circ1 = length(o_trn_p);\n    n_d_circ1 = smoothstep(0.4+n_aa, 0.4, n_d_circ1);\n\n    float n_d_circ2 = length(o_trn_p);\n    n_d_circ2 = smoothstep(0.15, 0.15+n_aa, n_d_circ2);\n\n    float n = n_d_line*n_d_circ1*n_d_circ2;\n    // float n = n_lol * n_d_circ1 * n_d_circ2;\n\n    float b = float(fract(n_it_nor+iTime) >= 0.1);\n    n = n * 0.3 + n * (1.-b);\n\n    fragColor = vec4(n);\n\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}