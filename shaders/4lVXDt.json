{
    "Shader": {
        "info": {
            "date": "1486504011",
            "description": "stereo version of https://www.shadertoy.com/view/XtlXRB\n\nhelp ! I should tilt the 2 cameras so as to get parallax = 0 at front, but I can't manage to get the right transform :-(",
            "flags": 0,
            "hasliked": 0,
            "id": "4lVXDt",
            "likes": 5,
            "name": "crowded gyros - stereo",
            "published": 3,
            "tags": [
                "3d",
                "raymarching",
                "anaglyph",
                "stereo",
                "short",
                "spheremarching"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 922
        },
        "renderpass": [
            {
                "code": "// stereo version of https://www.shadertoy.com/view/XtlXRB\n\n// compact simplified version of https://www.shadertoy.com/view/MllXz7 (773 chars)\n// using the base ray-marcher of Trisomie21: https://www.shadertoy.com/view/4tfGRB#\n\nfloat T, C,S;\n#define r(t) mat2(C=cos(t),S=sin(t),-S,C)\n\nvec4 draw(vec2 w, float ofs) {\n    vec2 R = iResolution.xy;\n    vec4 p = vec4( (w-.5*R)/R.y, -.5,-.5), d=p, f=d-d, x=vec4(300.*.5*ofs/R.y,0,0,0);\n    //p.x += .3*ofs;   \n    //  p.xz *= r(-.3*ofs);\n    //  d.xz *= r(-.3*ofs);\n    p.xz *= r(.13*T); p.yz *= r(.2*T); \n    x.xz *= r(.13*T); x.yz *= r(.2*T); \n    d = p; \n    p -= x; \n    d += .17*x;  // why not 1. ?\n    d = normalize(d); \n    p.z -= 5.*T;\n\n      \n    for (float i=1.; i>0.; i-=.01) {\n        \n        vec4 u = sin(78.+ceil(p/8.)), t = mod(p,8.)-4., a; \n        float x=1e9;\n        \n        for (float j=2.3; j>1.; j-= .3)\n            t.xy *= r(u.x*T),   t.xz *= r(u.y*T),\n            a = abs(t),\n            x = min(x, max(abs(length(t.xyz)-j*1.26),  max(a.x,max(a.y,a.z))-j)); \n \n        if(x <.01) {  f = vec4(i*i*1.2); break;  } \n        p += d*x;           \n     }\n    return f;\n}\n\nvoid mainImage( out vec4 f, vec2 w ) {\n    T=iTime;\n    \n    f.r  = draw(w,-1.).r  * .9;\n    f.gb = draw(w,+1.).gb * vec2(.5,1);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}