{
    "Shader": {
        "info": {
            "date": "1590689162",
            "description": "signed distance function",
            "flags": 0,
            "hasliked": 0,
            "id": "wsSBWG",
            "likes": 4,
            "name": "sdFunc - Glowing Objects",
            "published": 3,
            "tags": [
                "sdfunc"
            ],
            "usePreview": 0,
            "username": "NightJolt",
            "viewed": 415
        },
        "renderpass": [
            {
                "code": "float map(float value, float fmin, float fmax, float tmin, float tmax) {\n    return tmin + (value - fmin) * (tmax - tmin) / (tmax - tmin);\n}\n\nfloat modAxis(float p, float size) {\n\tfloat halfsize = size * 0.5;\n\tfloat c = floor((p + halfsize) / size);\n\tp = mod(p + halfsize, size) - halfsize;\n\tp = mod(-p + halfsize, size) - halfsize;\n\treturn p;\n}\n\nfloat sdCircle(vec2 p, float r) {\n    return length(p) - r;\n}\n\nfloat sdBox(vec2 p, vec2 s, float r) {\n    vec2 d = abs(p) - s;\n    float sd = length(max(d, vec2(0))) + min(max(d.x, d.y), 0.0);\n    \n    return sd - r;\n}\n\nfloat su(float d1, float d2, float k) {\n    float h = clamp(.5 + .5 * (d2 - d1) / k, 0., 1.);\n    \n    return mix(d2, d1, h) - k * h * (1. - h);\n}\n\nfloat ss(float d1, float d2, float k) {\n    float h = clamp(.5 -.5 * (d2 + d1) / k, 0.0, 1.0);\n    return mix(d2, -d1, h) + k * h * (1. - h);\n}\n\nfloat si(float d1, float d2, float k) {\n    float h = clamp(.5 - .5 * (d2 - d1) / k, 0.0, 1.0);\n    return mix(d2, d1, h) + k * h * (1.0 - h);\n}\n\nfloat un(float d1, float d2) {\n    return min(d1, d2);\n}\n\nvec2 rotate(vec2 p, float angle) {\n    mat2 rot_mat = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    \n    return rot_mat * p;\n}\n\nvec2 magic(vec2 p) {\n    mat2 mat = mat2(cos(p.x), cos(p.y), cos(p.y), cos(p.x));\n    \n    return mat * p;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 res = iResolution.xy;\n    vec2 coord = fragCoord;\n    vec2 uv = coord / res;\n    vec2 p = coord - res * .5;\n    \n    //p.x = modAxis(p.x, 400.);\n    //p.y = modAxis(p.y, 400.);\n    \n    float rect = sdBox(rotate(p, -iTime), vec2(30.), 50.);\n    float rect_2 = sdBox(rotate(p, -iTime), vec2(20.), 100.);\n    float circle_ring =\n        un (\n            un (\n                sdCircle(p + vec2(100. * cos(iTime), 100. * sin(iTime)), 30.),\n    \t\t\tsdCircle(p + vec2(-100. * cos(iTime), -100. * sin(iTime)), 30.)\n            ),\n            un (\n                sdCircle(p + vec2(-100. * sin(-iTime), -100. * cos(-iTime)), 30.),\n    \t\t\tsdCircle(p + vec2(100. * sin(-iTime), 100. * cos(-iTime)), 30.)\n            )\n        );\n    float d = ss(su(rect, circle_ring, 20.), rect_2, 10.);\n    \n    vec3 c = vec3(5. / length(abs(mod(uv / d, 1.) - .5)));\n   \n\tvec3 col = vec3(.5 + sin(uv.x * 10. + iTime * 2.) * .3, .25, .7 + sin(uv.y * 20. + iTime * .5) * .3);\n    col *= 0.1;\n    \n    vec3 f_col = c / d * col * sqrt(length(p));\n    \n    fragColor = vec4(f_col - mod(f_col, .1), iTime);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}