{
    "Shader": {
        "info": {
            "date": "1610363053",
            "description": "click me!",
            "flags": 32,
            "hasliked": 0,
            "id": "ttcyDs",
            "likes": 18,
            "name": "Stoneland",
            "published": 3,
            "tags": [
                "raymarching",
                "fbm",
                "pom"
            ],
            "usePreview": 1,
            "username": "Catzpaw",
            "viewed": 687
        },
        "renderpass": [
            {
                "code": "//---Stoneland\n// by Catzpaw 2021\n\n//Image:post effect\n\n#define ZERO min(0,iFrame)\nconst float pi=acos(-1.);\nmat2 rot(float a){float s=sin(a),c=cos(a);return mat2(c,s,-s,c);}\nvec3 hsv(float h,float s,float v){return ((clamp(abs(fract(h+vec3(0.,.666,.333))*6.-3.)-1.,0.,1.)-1.)*s+1.)*v;}\n\n//CHROMATIC ABERRATION\nvec3 tx1(vec2 uv){return texture(iChannel0,uv).rgb;}\nvec3 ca(vec2 uv,vec2 xy){\n    vec2 uvr=uv-xy*.01;\n    vec3 c=vec3(0);\n    float f=0.;\n    for(int i=ZERO;i<10;i++)c+=tx1(mix(uvr,uv,f)).rgb*hsv(f+.85,1.,1.),f+=.1;\n    return c*.25;\n}\n\n//EDGE DETECTION\nfloat tx1a(vec2 uv){return texture(iChannel0,uv).a;}\nvec3 ed(vec2 uv){\n    float a=0.,v=0.,c=tx1a(uv);\n    float t=.03*c;\n    for(int i=ZERO;i<8;i++){\n        vec2 r=vec2(0,5e-4)*rot(a);\n        float s=max(0.,c-tx1a(uv+r))*5.;\n        v+=s>t?s*150.:0.;\n        a+=pi*.25;\n    }\n    return vec3(clamp(v,0.,1.),c,1.-c);\n}\n\n//MAIN\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n\tvec2 uv=fragCoord/iResolution.xy;\n    vec2 xy=(fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 e=ed(uv);\n    vec3 c1=ca(uv,xy);\n    vec3 c2=e.xxx+e.zzy*.2;\n    vec3 c=mix(c1,c2,clamp(iMouse.z,0.,1.));\n\n    fragColor=vec4(c*pow(1.1-length(xy),.3),1);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//---Stoneland\n// by Catzpaw 2021\n\n//Buffer A:terrain\n\n#define ITER 360\n#define ITER2 100\n#define NEAR 0.02\n#define FAR 1000.0\n\n#define ZERO min(0,iFrame)\nmat2 rot(float a){float s=sin(a),c=cos(a);return mat2(c,s,-s,c);}\n\n//NOISE\nvec2 h22(vec2 p){const vec2 v=vec2(19,29);return fract(sin(vec2(dot(p,v),dot(p+vec2(1,0),v)))*83e4);}\nfloat n21(vec2 p){vec2 i=floor(p),f=fract(p);f=f*f*(3.-f-f);p=mix(h22(i),h22(i+vec2(0,1)),f.y);return mix(p.x,p.y,f.x);}\n\n//FBM\nfloat fbm2(vec2 p){float f=0.,a=1.;for(int i=ZERO;i<6;i++)f+=a*n21(p),a*=.25,p*=3.53;return f;}\nfloat fbm3n(vec3 p,vec3 n){vec3 s=vec3(0);float a=1.;for(int j=ZERO;j<4;j++)s+=a*vec3(n21(p.yz),n21(p.zx),n21(p.xy)),a*=.4,p*=1.7;return dot(s,n);}\n\n//SDF\nfloat sdGround(vec3 p){return p.y-smoothstep(0.,.6,abs(fbm2(p.xz*.01)-.5))*10.;}\n\nvec2 lqr=vec2(FAR);\nvec3 lrr=vec3(FAR);\nfloat lvr=FAR;\nfloat sdRock(vec3 p){\n    vec2 q=floor(p.xz*.1)*10.;\n    float s=fract(sin(q.x*1332.1+q.y*333.1+100.)*83e4);\n    if(s<.2)return FAR;\n    vec3 r;float v;\n    if(q==lqr){r=lrr;v=lvr;}else{\n        lqr=q;\n        r=vec3(5.+sin(q.x*819.1+q.y+29.)*3.,0,5.+sin(q.x*31.+q.y*831.1)*3.);\n        v=(4.5-length(r.xz-5.))*s;\n        r+=q.xyy;\n        r.y=smoothstep(0.,.6,abs(fbm2(r.xz*.01)-.5))*8.5;\n        lrr=r;lvr=v;\n    }\n    return (p.y-r.y>5.)||(r.y<.05)?FAR:length(p-r)-v-fbm3n(p,normalize(p-r))*.5;\n}\n\nvec2 lqs=vec2(FAR);\nvec3 lrs=vec3(FAR);\nfloat lvs=FAR;\nfloat sdStone(vec3 p){\n    vec2 q=floor(p.xz*.5)*2.;\n    float s=fract(sin(q.x*1861.1+q.y*837.1+1000.)*83e4);\n    if(s<.9)return FAR;\n    vec3 r;float v;\n    if(q==lqs){r=lrs;v=lvs;}else{\n        lqs=q;\n        r=vec3(1.+sin(q.x*317.1+q.y+17.)*.3,0,1.+sin(q.x*19.+q.y*329.1)*.3);\n        v=(.9-length(r.xz-.5)*.5)*s;\n        r+=q.xyy;\n        r.y=smoothstep(0.,.6,abs(fbm2(r.xz*.01)-.5))*9.6;\n        lrs=r;lvs=v;\n    }\n    return (p.y-r.y>1.)||(r.y<.1)?FAR:length(p-r)-v-fbm3n(p,normalize(p-r))*.3;\n}\n\n//SCENE SDF\nfloat map(vec3 p){\n    float d=p.y-.2;\n    d=min(d,sdGround(p));\n    d=min(d,sdRock(p));\n    d=min(d,sdStone(p));\n    return d;\n}\n\n//GET MATERIAL ID FROM SCENE\nint map2(vec3 p){\n    float d1=p.y-.2;\n    float d2=sdGround(p);\n    float d3=min(sdRock(p),sdStone(p));\n    int id=1;\n    if(d1>d2)d1=d2,id=2;\n    if(d1>d3)id=3;\n    return id;\n}\n\n//RAYMARCHING\nfloat trace(vec3 ro,vec3 rd,float ps){\n    float t=NEAR;\n    for(int i=ZERO;i<ITER;i++){\n        vec3 p=ro+rd*t;\n        float d=map(p);\n        if(abs(d)<ps*t||t>FAR)break;\n        t+=d;\n    }\n    return min(t,FAR);\n}\n\n//NORMAL\nvec3 normal(vec3 p,float ps,float t){\n    const vec2 e=vec2(1,-1);\n    float eps=ps*t;\n    return normalize(e.xyy*map(p+e.xyy*eps)+e.yyx*map(p+e.yyx*eps)+\n                     e.yxy*map(p+e.yxy*eps)+e.xxx*map(p+e.xxx*eps));\n}\n\n//SOFT SHADOW\nfloat shadow(vec3 p,vec3 ld){\n\tfloat o=1.,s=.6,a=1.;\n    for(int i=ZERO;i<5;i++){float r=.4*a;o+=(map(ld*r+p)-r*.3)*s;s*=.8;a++;}\n    return clamp(o,0.,1.);\n}\n\n//SKY\nconst vec3 sunDir=normalize(vec3(1.0,0.3,-0.2));\nconst vec3 sunCol=vec3(.88,.84,.80);\nconst vec3 ambCol=vec3(.05,.07,.09);\nvec3 sky(vec3 rd){\n\tfloat sun=max(0.,dot(rd,sunDir));\n\tvec3 s=mix(vec3(.25,.3,.45),vec3(.62,.61,.60),pow(1.-max(0.,rd.y),5.));\n\ts.r+=sun*sun*.2;\n\ts.g+=sun*sun*sun*.175;\n\ts.b+=sun*sun*sun*sun*.15;\n\ts+=sunCol*pow(sun,800.);\n\treturn clamp(s,0.,1.);\n}\n\n//MATERIAL\nconst vec3 snowDir=normalize(vec3(-0.2,1.0,0.1));\nvec3 tx0(vec3 p){\n    p.xz+=p.y;\n    return (texture(iChannel0,p.xz*.02).xyz+texture(iChannel0,p.xz*.111).xyz)*.5;\n}\n/*\nvec3 tx1(vec3 p){\n    return (texture(iChannel0,p.xz*.211).xyz+.2)*texture(iChannel1,p.xz*.15).xxx;\n}\n*/\nvec3 pom(vec3 ro,vec3 rd,out vec3 n){\n    float t=.1;\n    vec3 p;\n    for(int i=ZERO;i<10;i++){\n        rd=normalize(rd);\n        p=ro+rd*t;\n        float h=texture(iChannel1,p.xz*.15).x;\n        if(h*.7+.3>1.+rd.y*t)break;\n        t+=.1;\n    }\n    const vec3 e=vec3(-5e-3,0,5e-3);\n    float dx=texture(iChannel1,p.xz*.15+e.xy).x-texture(iChannel1,p.xz*.15+e.zy).x;\n    float dy=texture(iChannel1,p.xz*.15+e.yx).x-texture(iChannel1,p.xz*.15+e.yz).x;\n    n=normalize(vec3(dx,.01,dy));\n    return (texture(iChannel0,p.xz*.211).xyz+.2).rgb*(1.4-t-rd.y*.4);\n}\n\n//MAIN\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=(fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 p=vec3(0);\n    float d=NEAR;\n    int id=0;\n\n    //get pixel radius\n    const float z=1.;\n    float ps=.5/(z*iResolution.y);\n\n    //camera\n    vec3 ro=vec3(0,25,-550),rd=normalize(vec3(uv,z)),n=vec3(0);\n    float t=(iTime+86.)*.06;\n    rd.yz*=rot(-.2+sin(t*1.8)*.2);\n    ro.xz*=rot(t);\n    rd.xz*=rot(-t*1.21);\n    ro.yz*=rot(.02);\n\n    //raymarching\n    vec3 c=sky(rd);\n    d=rd.y>.03?FAR:trace(ro,rd,ps);\n    p=ro+rd*d;\n    n=normal(p,ps,d);\n    \n    //shading\n    float sha=shadow(p,sunDir);///\n    id=d==FAR?0:map2(p);\n    if(id==1){\n        vec3 n2,tx2=pom(p,rd,n2);\n        c=mix(sky(reflect(rd,n)),tx2*sunCol*(dot(n2,sunDir)+2.)*.3,abs(dot(rd,n)))*(sha*.5+.5);///\n    }\n    else if(id==2){\n        vec3 n2,tx2=p.y>.9?vec3(0):pom(p,rd,n2);\n        vec3 n3=normalize(mix(n2,n,clamp(smoothstep(.06,.1,p.y*.1)+smoothstep(.02,.2,d*1e-3),0.,1.)));\n        vec3 tx3=mix(tx2,vec3(.2,.23,.1),smoothstep(.07,.09,p.y*.1));\n        vec3 tx4=mix(tx3,tx0(p),smoothstep(.15,.4,p.y*.1));\n        c=mix(tx4,vec3(1.2),smoothstep(.9,1.1,p.y*.1+pow(dot(n3,snowDir),9.)))*sunCol*(dot(n3,sunDir)+2.)*.3*sha+ambCol;///\n    }\n    else if(id==3){\n        c=mix(tx0(p),vec3(1.2),\n              smoothstep(.5,.7,p.y*.1+pow(dot(n,snowDir),9.))\n        )*sunCol*(dot(n,sunDir)+2.)*.3*sha+ambCol;///\n    }\n    c=max(c,sunCol*pow((dot(rd,sunDir)+1.)*.5,5.)*.4);\n\n    //depth\n    d+=id==1?FAR*.3:0.;\n    d-=id==3?FAR*.0025:0.;\n    d=clamp(d,0.,FAR);\n\n    fragColor=vec4(clamp(c,0.,1.),d/FAR);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}