{
    "Shader": {
        "info": {
            "date": "1632342263",
            "description": "simple example with one BufferA and old example https://www.shadertoy.com/view/XlSBz3.",
            "flags": 32,
            "hasliked": 0,
            "id": "7sKGW3",
            "likes": 0,
            "name": "BufferA_001",
            "published": 3,
            "tags": [
                "shader",
                "shaders",
                "buffera",
                "catafest"
            ],
            "usePreview": 0,
            "username": "catafest",
            "viewed": 513
        },
        "renderpass": [
            {
                "code": "//Display the buffer\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// the my old example: https://www.shadertoy.com/view/XlSBz3\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy;\n    // set center for circle\n\tvec2 center = iResolution.xy * 0.5;\n    // set radius of circle\n\tfloat radius = 0.30 * iResolution.y;\n    // create circle with delta and theta function\n    // make delta \n    float d = length(center - uv) - radius;\n    // make theta with color transparency to 0.4 and set 1 for clamp\n    // the clamp is a returned value computed as min(max( x , minVal ), maxVal ).\n\tfloat t = clamp(d, 0.4, 1.0);\n\tfragColor = vec4( t, center, (120,230,0));\n}    ",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}