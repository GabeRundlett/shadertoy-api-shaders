{
    "Shader": {
        "info": {
            "date": "1627067432",
            "description": "2D conversion of a *very* old source showing the mandelbrot fractal as a lake.",
            "flags": 0,
            "hasliked": 0,
            "id": "fljXRh",
            "likes": 3,
            "name": "Mandellake",
            "published": 3,
            "tags": [
                "fractal",
                "mandelbrot",
                "lake"
            ],
            "usePreview": 0,
            "username": "Krischan",
            "viewed": 240
        },
        "renderpass": [
            {
                "code": "// 'Mandellake' by Krischan\n//\n// 2D conversion of a *very* old article in the magazine\n// Happy Computer, Edition 6/1987 by Frank GÃ¶ldner\n// showing the mandelbrot fractal as a lake!\n//\n// Originally sources were available for the systems\n// C64, Schneider CPC, Atari ST and Amiga :)\n//\n\n#define roughness 0.066\n#define iterations 400\n#define waterlevel 1.2\n#define shorelevel 1.0\n#define offset vec2(-1.0,0.0)\n#define zoom 1.25\n\n#define WATERCOLOR vec4(0.0,0.5,0.8,1.0)\n#define SHORECOLOR vec4(0.3,0.5,0.3,1.0)\n#define GRASSCOLOR vec4(0.2,0.5,0.1,1.0)\n\nfloat mandellake(vec2 uv)\n{\n    \n    float z=2.0;\n    float xc=uv.x;\n    float yc=uv.y;\n    float xa=0.0;\n    float ya=0.0;\n\n    while(z>0.0)\n    {\n        float x2=abs(xa);\n        float y2=abs(ya);\n        float xn=x2-y2-xc;\n        ya=xa*ya;\n        ya=ya+ya-yc;\n        xa=xn;\n        z=z-roughness;\n        if(z<0.0){break;}\n        if(x2+y2>float(iterations)){break;}\n    }\n\n    return z;    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy*2.0 - iResolution.xy) * 2.0/ iResolution.x;\n    \n    uv.x-=offset.x;\n    uv.y+=offset.y;\n    uv*=zoom;\n    \n    float r = mandellake(uv);\n    \n    fragColor=WATERCOLOR*vec4(1.0,r,1.0,1.0);\n    \n    if(r>shorelevel){fragColor = SHORECOLOR*vec4(vec3(r),1.0);}\n    if(r>waterlevel){fragColor = GRASSCOLOR*vec4(vec3(r),1.0);}\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}