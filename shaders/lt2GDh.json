{
    "Shader": {
        "info": {
            "date": "1428677707",
            "description": "My first entry at Shadershowdown competition, Revision 2015.\nI really enjoyed this compo, I will participate next year for sure ! But i will learn english before.. ;)\nThank you to organizers and all participants!",
            "flags": 0,
            "hasliked": 0,
            "id": "lt2GDh",
            "likes": 13,
            "name": "Fast coding at Revision 2k15",
            "published": 3,
            "tags": [
                "distancefield",
                "revision",
                "fastcoding",
                "shadershowdown"
            ],
            "usePreview": 0,
            "username": "XT95",
            "viewed": 1649
        },
        "renderpass": [
            {
                "code": "float rubban( vec3 p)\n{\n  return length( p.xy+vec2(cos(p.z),sin(p.z)) ) - .1;\n}\n\nfloat rubban1( vec3 p)\n{\n  return length( p.xy+vec2(cos(p.z+2.),sin(p.z+2.)) ) - .1;\n}\n\nfloat rubban2( vec3 p)\n{\n  return length( p.xy+vec2(cos(p.z+4.),sin(p.z+4.)) ) - .1;\n}\n\nfloat map( in vec3 p)\n{\n  float d = p.y+1.;\n  d = min(d, -p.y+2.);\n  d = min(d, cos(p.x)+cos(p.y)+cos(p.z)+cos(p.y*20.)*texture(iChannel0,vec2(0.05,0.)).r*.1);\n  p.x += 3.;\n  p.x = mod(p.x, 6.)-3.;\n  d = min(d, rubban(p));\n  d = min(d, rubban1(p));\n  d = min(d, rubban2(p));\n  d = max(d, p.z-iTime*3.-6.);\n  return d;\n}\n\nvec2 rotate( vec2 v, float a)\n{\n  return vec2( v.y*cos(a) - v.x*sin(a), v.x*cos(a) + v.y*sin(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  uv -= 0.5;\n  uv /= vec2(iResolution.y / iResolution.x, 1);\n  vec2 uv2 = uv;\n  uv.x += texture(iChannel0, vec2(uv.y*.5+.5,0.)).r*.05;\n  vec3 col = vec3(0.);\n\n  vec3 org = vec3(cos(iTime*10.)*texture(iChannel0,vec2(0.1,0.)).r*.2, cos(iTime*20.)*texture(iChannel0,vec2(0.1,0.)).r*.2,iTime*3.);\n  vec3 dir = normalize(vec3(uv, 1.-length(uv)*1.));\n  dir.xy = rotate(dir.xy, iTime*.25);\n  dir.xz = rotate(dir.xz, iTime*.1);\n  vec4 p =vec4(org,0.);\n\n  for(int i=0; i<128; i++)\n  {\n    float d = map(p.xyz);\n    p += vec4( dir*d, 1./64.);\n    if(d<0.01)\n      break;\n  }\n\n  col += vec3(.1,.1,1.0)*p.w *p.w;\n\n  p.x += 3.;\n  p.x = mod(p.x, 6.)-3.;\n  float coef = 0.;\n  for(float i=0.; i<.02; i+=1./100.)\n  {\n    coef += texture( iChannel0, vec2(i,0.0)).r;\n  }\n  col += vec3(1.,.3,.0) / (.1 + pow( rubban(p.xyz), 2.) ) * coef*.01;\n\n  coef = 0.;\n  for(float i=.1; i<.25; i+=1./100.)\n  {\n    coef += texture( iChannel0, vec2(i,0.)).r;\n  }\n  col += vec3(.1,1.,.1) / (.1 + pow( rubban1(p.xyz), 2.) ) * coef*.01;\n\n  coef = 0.;\n  for(float i=.25; i<.5; i+=1./100.)\n  {\n    coef += texture( iChannel0, vec2(i,0.)).r;\n  }\n  col += vec3(.5,.1,1.) / (.1 + pow( rubban2(p.xyz), 2.) ) * coef*.01;\n  \n  col *= vec3(3.);\n\n  col = pow(col, vec3(1.2));\n  //col += texture(texFFT, length(uv)).rgb*100;\n  //col = mix( col.rgb, col.bgr, texture(iChannel0, vec2(uv.y*.5+.5,0.)).r*1.);\n  \n  col *= exp(-length(p.xyz-org)*.25);\n\n  uv = uv2;\n  uv.y -= texture(iChannel0, vec2(0.05,0.)).r*.2;\n  uv += vec2(.6,.25);\n  if( uv.x < .2 && uv.x > -.2 && uv.y < -abs(uv.x) && uv.y > -.2 && !( uv.x < .1 && uv.x > -.1 && uv.y+.2 > abs(uv.x) && uv.y < -.1 ))\n    col = vec3(1.,.8,.2);\n\n\n  fragColor = vec4(col,1.);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 152,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/suol/fritz-kalkbrenner-kings-in-1"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}