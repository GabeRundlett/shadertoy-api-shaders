{
    "Shader": {
        "info": {
            "date": "1655865347",
            "description": "cha bu duo de le",
            "flags": 0,
            "hasliked": 0,
            "id": "fsKyDc",
            "likes": 4,
            "name": "流汗黄豆",
            "published": 3,
            "tags": [
                "emoji"
            ],
            "usePreview": 0,
            "username": "ADogFish",
            "viewed": 242
        },
        "renderpass": [
            {
                "code": "const vec3 faceColor = vec3(1.,0.7843,0.2392);\nconst vec3 black = vec3(0.);\nconst vec3 white = vec3(1.);\nconst vec3 lightBlue = vec3(0.517, 0.705, 0.905);\nconst vec3 darkBlue = vec3(0.368, 0.427, 0.850);\nconst vec3 tongueColor = vec3(0.941, 0.227, 0.090);\nconst vec3 sweatColor = vec3(0, 0.737, 0.949);\n\nfloat saturate(float x)\n{\n    return clamp(x, 0., 1.);\n}\n\nfloat cro(in vec2 a, in vec2 b )\n{\n    return a.x*b.y - a.y*b.x; \n}\n\n// https://iquilezles.org/articles/distfunctions2d/\nfloat sdUnevenCapsule( in vec2 p, in vec2 pa, in vec2 pb, in float ra, in float rb )\n{\n    p  -= pa;\n    pb -= pa;\n    float h = dot(pb,pb);\n    vec2  q = vec2( dot(p,vec2(pb.y,-pb.x)), dot(p,pb) )/h;\n    \n    //-----------\n    \n    q.x = abs(q.x);\n    \n    float b = ra-rb;\n    vec2  c = vec2(sqrt(h-b*b),b);\n    \n    float k = cro(c,q);\n    float m = dot(c,q);\n    float n = dot(q,q);\n    \n         if( k < 0.0 ) return sqrt(h*(n            )) - ra;\n    else if( k > c.x ) return sqrt(h*(n+1.0-2.0*q.y)) - rb;\n                       return m                       - ra;\n}\n\nfloat sdCircle(vec2 p, float r, vec2 offset, float smSize) \n{\n    return 1. - smoothstep(r - smSize, r, distance(p, offset));\n}\n\nfloat sdRectangle(vec2 p, vec2 offset, vec2 size, float smSize)\n{\n    vec2 lb = offset - size * .5;\n    vec2 rt = offset + size * .5;\n    vec2 lbRes = smoothstep(lb, lb + smSize, p);\n    vec2 rtRes = 1. - smoothstep(rt - smSize, rt, p);\n    return lbRes.x * lbRes.y * rtRes.x * rtRes.y;\n}\n\n// r1 > r2\nfloat sdRim(vec2 p, float r1, float r2, vec2 offset, float smSize)\n{\n    float d = distance(p, offset);\n    float d1 = 1. - smoothstep(r1 - smSize, r1, d);\n    float d2 = smoothstep(r2 - smSize, r2, d);\n\n    return min(d1, d2);\n}\n\nvec4 face(vec2 p) \n{\n    float outline = sdCircle(p, 0.65, vec2(.0), .005);\n    float inside = sdCircle(p, 0.625, vec2(.0), .005);\n    \n    vec3 col = faceColor * inside;\n\treturn vec4(col, saturate(outline));\n}\n\nvec4 eye(vec2 p)\n{\n    float rim1 = sdRim(p + vec2(0.265, .02), 0.20, 0.15, vec2(.0, 0.03), .005);\n    float rim2 = sdRim(p + vec2(-0.265, .02), 0.20, 0.15, vec2(.0, 0.03), .005);\n\n    float cut = sdRectangle(p, vec2(.0, -0.35), vec2(0.95, 0.75), .005);\n    \n\treturn vec4(black, saturate(max(rim1, rim2) - cut));\n}\n\nvec4 mouth(vec2 p)\n{\n    float outline1 = sdCircle(p, 0.42, vec2(.0, 0.05), .005);\n    float cut = sdRectangle(p, vec2(.0, 0.41), vec2(0.90, 0.75), .005);\n    float tooth = sdRectangle(p, vec2(.0, -0.05), vec2(0.75, 0.1), .005);\n    float tongue = sdCircle(p, 0.18, vec2(0.0, -0.4), .0001);\n    float outline2 = sdRim(p, 0.43, 0.38, vec2(.0, 0.05), .005);\n\n    vec3 col = mix(black, tongueColor, tongue);\n    col = mix(col, white, tooth);\n    col = mix(col, black, outline2);\n\n\treturn vec4(col, saturate(outline1  - cut));\n}\n\nvec4 sweat(vec2 p)\n{\n    vec2 v1 = cos(vec2(0.0, 2.0));\n\tvec2 v2 = cos(vec2(0.0, 1.0));\n    float r1 = 0.5;\n    float r2 = 0.01;\n    \n\tfloat d = sdUnevenCapsule(p * 3., v1, v2, r1, r2 );\n    d = 1. - smoothstep(0.01, 0.02, saturate(d));\n    \n\treturn vec4(sweatColor, d);\n}\n\nvec3 background(vec2 p) \n{\n    float x = sin(7. * (p.x + iTime));\n    float y = cos(7. * (p.y + iTime));\n    float r = length(p);\n    \n    return mix(lightBlue, darkBlue, smoothstep(0.5, 0.7, acos(r * x * y)));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 p = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\n\t// coloring\n    vec4 Face = face(p);\n    vec4 Eye = eye(p);\n    vec4 Mouth = mouth(p + vec2(.0, 0.15));\n    vec4 Sweat = sweat(p + vec2(-0.15, -0.5));\n    \n    vec3 col = background(p);\n    col.rgb = mix(col, Face.rgb, Face.a);    \n    col.rgb = mix(col, Eye.rgb, Eye.a);  \n    col.rgb = mix(col, Mouth.rgb, Mouth.a);\n    col.rgb = mix(col, Sweat.rgb, Sweat.a);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}