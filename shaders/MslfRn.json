{
    "Shader": {
        "info": {
            "date": "1494677980",
            "description": "Entry for the Fast Compo at VIP 2017.",
            "flags": 64,
            "hasliked": 0,
            "id": "MslfRn",
            "likes": 15,
            "name": "Synthwave Shader [VIP2017]",
            "published": 3,
            "tags": [
                "synthwave",
                "fastcompo"
            ],
            "usePreview": 1,
            "username": "Koltes",
            "viewed": 2163
        },
        "renderpass": [
            {
                "code": "#define TAU 6.2831853\nstruct M{float d;vec3 c;};M m;\nvoid mmin(float d, vec3 c){if (d<m.d){m.d=d;m.c=c;}}\n\nmat2 rz2(float a){float c=cos(a),s=sin(a);return mat2(c,s,-s,c);}\n\nfloat amod(float a,float m){return mod(a,m)-m*.5;}\n\nfloat random(float x){return fract(sin(x*13.+4375.));}\n\nfloat height(vec2 iuv){\n    return sin(sin(iuv.x+iTime*.1)*sin(iuv.y+iTime*.1)*5.)*(pow(abs(iuv.x),2.)*.02+0.1);\n}\n\nvoid map(vec3 p){\n   \tm.d=max(max(p.y,.0),max(p.z-6.,0.));\n    vec2 uv=p.xz*2.;\n    uv.y+=iTime;\n    vec2 f=fract(uv)-.5;\n    float fft=max(texture(iChannel0,vec2(0.01,0.25)).r*2.-1.8,0.005);\n    float l=fft/(abs(f.x)*abs(f.y));\n    l+=.1*fft/(abs(p.z-6.));\n    m.c=mix(vec3(0.196, 0.003, 0.149),vec3(1, 0.019, 0.384),l);\n    \n    uv=p.xz-.5;\n    vec2 iuv=floor(uv);\n    vec2 fuv=fract(uv);\n    float h=mix(\n        mix(height(iuv+vec2(0.,0.)), height(iuv+vec2(1.,0.)), fuv.x),\n        mix(height(iuv+vec2(0.,1.)), height(iuv+vec2(1.,1.)), fuv.x),\n        fuv.y)-1.;\n    float d=p.y-h;\n    d=max(d,abs(p.z-10.)-4.);\n    vec2 vuv=fuv*(1.-fuv);\n    float v=vuv.x*vuv.y;\n    l=.01*fft/v;\n    mmin(d, vec3(0.,0.,1.)*l);\n}\n\nvec3 noise(vec2 uv){return texture(iChannel1,uv*.1).rgb;}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 v=uv*(1.-uv);\n    uv-=.5;\n    uv.x*=iResolution.x/iResolution.y;\n    \n    vec2 uvn=uv*2.5;\n    vec2 iuvn=floor(uvn)+vec2(2.,0.);\n    vec2 fuvn=fract(uvn);\n    vec3 nb=mix(\n        mix(noise(iuvn+vec2(0.,0.)), noise(iuvn+vec2(1.,0.)), fuvn.x),\n        mix(noise(iuvn+vec2(0.,1.)), noise(iuvn+vec2(1.,1.)), fuvn.x),\n        fuvn.y)*.1;\n    vec3 c=(vec3(0.168, 0, 0.2)*.5+nb*3.);\n\n    vec2 suv=uv;\n    suv*=rz2(iTime*.02);\n    c*=vec3(1./(1.-smoothstep(0.9,1.,texture(iChannel1,suv).r)));\n    \n    vec2 uvc=uv-vec2(.4,.2);\n    float circle=1.-smoothstep(.25,.252,length(uvc));\n    float raytime=uv.y*100.+iTime*2.;\n    float thr=-uvc.y*5.-1.;\n    float rays= step(thr,sin(raytime));\n    circle=min(circle,rays);\n    vec3 csun=mix(vec3(0.968, 0.137, 0.094),vec3(1, 0.819, 0.019),uvc.y*3.+.5);\n    c=mix(c,csun,circle);\n    \n    vec3 ro=vec3(0.,2.,0.),rd=vec3(uv,1),mp=ro;\n    rd.yz*=rz2(-.2);\n    int i;\n    for(i=0;i<50;++i){map(mp);if(m.d<.001){break;}mp+=rd*.5*m.d;}\n    if(mp.z<14.)c=m.c;\n    \n    c=max(c,0.);\n    float cren=fract(uv.y*200.+iTime*.5);\n    c+=(smoothstep(.2,.3,cren)-smoothstep(.7,.8,cren))*0.01;\n    c=pow(c,vec3(1./2.2));\n    c *= pow(v.x*v.y * 25.0, 0.25);\n\tfragColor = vec4(c,1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 8576,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/synthwave80s/01-vice-point"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}