{
    "Shader": {
        "info": {
            "date": "1602579294",
            "description": "mouse control\n[url]https://inktober.com/[/url]\n#inktober2020 themes: [img]https://i.imgur.com/b3gMiu0.png[/img]",
            "flags": 0,
            "hasliked": 0,
            "id": "wdyyWz",
            "likes": 8,
            "name": "Fab14 #inktober2020 \"armor\"",
            "published": 3,
            "tags": [
                "short",
                "golf",
                "inktober2020"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 331
        },
        "renderpass": [
            {
                "code": "#define L           length\n#define rot(a)      mat2( cos(a+vec4(0,11,33,0)) )                       // rotation                  \n#define B(a,w,h,l)  max( max( abs(a).x -w, abs(a).y -h ), abs(a).z -l )  // bar\n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float t=9., a;\n    vec3  R = iResolution, e = vec3(5,-5,0), X=e.xzz, Y=e.zxz, Z=e.zzx,\n          M = iMouse.z > 0. ? iMouse.xyz/R : vec3(4,2,0)/1e2*cos(iTime+vec3(0,11,0)),\n          D = normalize(vec3( U+U, -3.5*R.y ) - R ),       // ray direction\n          p = 50./R, q,s;                                  // marching point along ray \n    \n    for ( O-=O ; O.x < 1. && t > .01 ; O+=.01 )\n        q = p, t=9.,\n        q.yz *= rot( .4 +3.*M.y),                          // rotations\n        q.xz *= rot(-.7 -6.*M.x),\n        s = q += Y, a = 3.14/12.,                          // 12 folds copy-rot\n        s.xz = L(s.xz)* cos(mod( atan(s.z,s.x) +a, a+a) -a +vec2(0,11)), // cylindrical symmetry  \n        t = min(t, max( B( s-X ,.3,7.,1.2 ),               // body plank\n                        2.-L( (q-.7*Y).yz) ) ),            // arm holes\n        t = min(t, max(  B( s-.5*X-2.5*Y, .1,3.,.6 ),      // helmet plank\n                        -B( q -Z-2.7*Y,  1.5,.5,3. )       // eyes hole\n               )      ),\n     // t = min(t, max( L((q-3.*Y).xz)-2.5 , abs(q.y-15.)-.1 )),      // helmet top\n        a = t,\n        t = min(t, max( L(vec2( L(q.x)-3., L((q-.9*Y).yz)-3.7) ) -.2, // handles\n                        4.-q.y )),\n        p += t*D;                                          // step forward = dist to obj          \n\n // if (t==a) O *= vec4(1,.8,.6,0)/.3;                     // coloring\n    if (t==a) O = vec4(1,.8,.6,0) *exp(-5.*O);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}