{
    "Shader": {
        "info": {
            "date": "1503505721",
            "description": "At each LOD, split either in y or x\nNB: this is a quick hack from the quadtree code, not perfect binary tree around the ball.\nYou can switch to quadtree via the #if\nInspired from [url]https://www.shadertoy.com/view/lljSDy[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "MtlyRH",
            "likes": 9,
            "name": "binary tree",
            "published": 3,
            "tags": [
                "binary",
                "bsp",
                "short",
                "quadtree"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1019
        },
        "renderpass": [
            {
                "code": "// inspired from https://www.shadertoy.com/view/lljSDy\n\nvoid mainImage( out vec4 o,  vec2 U )\n{\n    o -= o;\n    float r=1., t=iTime, H = iResolution.y, id=1.;\n    U /=  H;                              // object : disc(P,r)\n    vec2 P = .5+.5*vec2(cos(t),sin(t*.7)), fU;  \n    U*=.5; P*=.5;                         // unzoom for the whole domain falls within [0,1]^n\n    \n    o.b = .25;                            // backgroud = cold blue\n    \n    for (int i=0; i<20; i++) {             // to the infinity, and beyond ! :-)\n        fU = min(U,1.-U); if (min(fU.x,fU.y) < .3*r/H) { o--; break; } // cell border\n    \tif (length(P-.5) - .1*r > .7) break; // cell is out of the shape\n\n                // --- iterate to child cell\n        fU = step(.5,U);                  // select child\n#if 0                                     // quadtree\n        id = 4.*id + 2.*fU.y+fU.x;\n        U = 2.*U - fU;                    // go to new local frame\n        P = 2.*P - fU;  \n        r *= 2.; if (r>.3*H) break;\n        o += .13;                         // getting closer, getting hotter\n#else                                     // binary tree\n    #define split(a)  id = 2.*id + fU.a, U.a = 2.*U.a - fU.a\n        if (i%2==0) \n             { split(y); \n               r *= 2.;  P = 2.*P - fU;\n             }\n        else { split(x); \n               o += .13;\n               if (r>.3*H) break; \n             }\n#endif        \n        \n    }\n               \n\to.gb *= smoothstep(.9,1.,length(P-U)/(.1*r)); // draw object\n}\n\n\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}