{
    "Shader": {
        "info": {
            "date": "1639105160",
            "description": "test simplex noise + FBM",
            "flags": 0,
            "hasliked": 0,
            "id": "ftdSR4",
            "likes": 0,
            "name": "simplex_noise + FBM",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "luolin",
            "viewed": 305
        },
        "renderpass": [
            {
                "code": "\n\n\nvec2 grad_simplex(int hash, float x, float y)\n{\n\tvec2 p = vec2(x, y);\n\tvec2 g0 = normalize(vec2(-1., 1.));\n\tvec2 g1 = normalize(vec2(1., 1.));\n\tvec2 g2 = normalize(vec2(-1., -1.));\n\tvec2 g3 = normalize(vec2(1., -1.));\n\n\tvec2 g4 = normalize(vec2(1., 0.5));\n\tvec2 g5 = normalize(vec2(-0.5, 1.));\n\tvec2 g6 = normalize(vec2(-1., -0.5));\n\tvec2 g7 = normalize(vec2(-1., -0.5));\n\n\tint h = hash & 7;\n\tif (h == 0) return g0;\n\telse if (h == 1) return g1;\n\telse if (h == 2) return g2;\n\telse if (h == 3) return g3;\n\telse if (h == 4) return g4;\n\telse if (h == 5) return g5;\n\telse if (h == 6) return g6;\n\telse if (h == 7) return g7;\n\n\treturn vec2(0., 0.);\n}\n\nvec2 hash22(vec2 vec)\n{\n\t\tint p[256] = int[256](\n\t\t\t\t\t\t151,160,137,91,90,15,                 \n\t\t\t\t\t\t131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,  \n\t\t\t\t\t\t190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,\n\t\t\t\t\t\t88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,\n\t\t\t\t\t\t77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,\n\t\t\t\t\t\t102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,\n\t\t\t\t\t\t135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,\n\t\t\t\t\t\t5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,\n\t\t\t\t\t\t223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,\n\t\t\t\t\t\t129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,\n\t\t\t\t\t\t251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,\n\t\t\t\t\t\t49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,\n\t\t\t\t\t\t138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180\n\t\t\t\t\t\t);\n\n\tfloat x  = vec.x;\n\tfloat y = vec.y;\n\n\tint xi = int(x) & 255;\n\tint yi = int(y) & 255;\n\tfloat xf = fract(x);\n\tfloat yf = fract(y);\n\tint aaa = p[p[    xi ]+    yi ];\n\treturn grad_simplex (aaa, xf  , yf);\n\n}\n\nfloat simplex_noise(vec2 vec)\n{\n\t\n    const float F = 0.366025404; // (sqrt(3)-1)/2;\n    const float G = 0.211324865; // (3-sqrt(3))/6;\n\n    vec2 i = floor(vec + (vec.x + vec.y) * F);//P点变形后成超立方体后的立方体所在的索引号\n\n    vec2 a = vec - (i - (i.x + i.y) * G);//变形前输入点到(0, 0)点的距离向量\n    vec2 o = (a.x < a.y) ? vec2(0.0, 1.0) : vec2(1.0, 0.0);\n    vec2 b = a - o + G;//变形前输入点到(1, 0)点或(0, 1)点的距离向量\n    vec2 c = a - 1.0 + 2.0 * G;//变形前输入点到(1, 1)点的距离向量\n\n    vec3 h = max(0.5 - vec3(dot(a, a), dot(b, b), dot(c, c)), 0.0);\n    vec3 n = h * h * h * h * vec3(dot(a, hash22(i)), dot(b, hash22(i + o)), dot(c, hash22(i + 1.0)));\n\n    return dot(vec3 (70.0, 70.0, 70.0), n);\n}\n\n\nfloat fbm(vec2 st) {\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0);\n    // 进行旋转\n    mat2 rot = mat2(cos(0.5), sin(0.5),\n                    -sin(0.5), cos(0.50));\n    // 进行分形的迭代\n\n    for (int i = 0; i < 3; ++i) {\n        v+= a * simplex_noise(st);\n        st =  st * 2.0;\n        a *= 0.5;\n    }\n    return v;\n}\n\n#define shadow vec3(0.101961,0.619608,0.666667)\n#define hightlight vec3(0.666667,0.666667,0.498039)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n        vec2 st = fragCoord/iResolution.xy;\n        st *= 5.;\n\n\tvec3 color = vec3(0.0);\n\n    vec2 q = vec2(0.0);\n    q.x = fbm(fbm(st + 0.20 * iTime) + st + 0.20 * iTime);\n    q.y = fbm(fbm(st + 0.30 * iTime) + st + 0.30 * iTime);\n\n    vec2 r = vec2(0.0);\n    r.x = fbm(st + 1.0 * q + vec2(1.7, 9.2) + 0.15 * iTime);\n    r.y = fbm(st + 1.0 * q + vec2(8.3, 2.8) + 0.126 * iTime);   \n\n    float f = fbm(st + r);\n\n    color = mix(shadow,\n                hightlight,\n                clamp((f*f)*4.0,0.0,1.0));\n\n    color = mix(color,\n                vec3(0,0,0.164706),\n                clamp(length(q),0.0,1.0));\n    color = mix(color,\n                vec3(0.666667,1,1),\n                clamp(length(r.x),0.0,1.0));\n                \n    vec2 qq = vec2( fbm( st + vec2(0.0,0.0) ),\n                   fbm( st + vec2(5.2,1.3) ) );\n\n    vec2 rr = vec2( fbm( st + 4.0*qq + vec2(1.7,9.2) ),\n                   fbm( st + 4.0*q + vec2(8.3,2.8) ) );\n\n    f = fbm( st + 4.0*rr );\n    \n    float radom = fbm( st + fbm(st +fbm(st + 0.2*iTime)));\n\n    vec3 col = mix(shadow, vec3(1.,1., 1.), radom);\n\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}