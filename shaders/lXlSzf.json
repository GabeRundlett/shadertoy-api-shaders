{
    "Shader": {
        "info": {
            "date": "1709804042",
            "description": "Every permutation generators I saw iterate *many* swaps in a stored index table.\nBut permutation polynomial allow analytical random permutations - alas,  in non convenient range.\nHere I use basic one relying on prime range.\n+ F.Perfect alternate approach.",
            "flags": 0,
            "hasliked": 0,
            "id": "lXlSzf",
            "likes": 8,
            "name": "analytical permutation 2",
            "published": 3,
            "tags": [
                "permutations",
                "polynomials"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 239
        },
        "renderpass": [
            {
                "code": "// analytical permutation adapted from https://www.shadertoy.com/view/4s2yRD\n// ref: https://en.wikipedia.org/wiki/Permutation_polynomial#Higher_degree_polynomials\n\n  #define N 4          // emulate P=17 (prime) table then skip 1st\n//#define N 16         // emulate P=257 (prime) table then skip 1st\n#define P (N*N+1)      // must be prime  -> N = 1, 2, 4, 16, 256...\n#define Nf float(N)\n#define shuffle shuffle_FN   // FN, FP, FP2 :  choose the permutation func\n\nint shuffle0(ivec2 i)        // --- shuffle integers in N² + 1 range\n{\n    int C =  i.x + N*i.y;   \n    int a=9, b=0;            // should be: a, b such that no v with v² = -b/a\n    return  ( a*C*C*C + b*C + int(iTime) ) % P; // permutation polynomial\n}\n\nint shuffle_FN(ivec2 i) {    // --- shuffle integers in N² + 1 range\n    int v = shuffle0(i);\n    return v != P-1 ? v : shuffle0(ivec2(0,N)); // we swap invpermut(N²),permut(N²)\n}\nint shuffle_FP( ivec2 j ) {  // -- FordPerfect version\n    uint i = uint(j.x + N *j.y), c = uint(iTime); int n = int(log2(float(N*N)+.5));\n    uint mask = (1u<<n) - 1u;\n    i = ( i+c*(c+1u)/2u ) & mask; // & mask = % N*N , without the risk with negatives\n    i = ( i*(2u*c+1u) )   & mask; // Arbitrary constant (?)\n    i ^= i >> (n+1)/2;\n    i = ( i*0x9E3779B9u ) & mask; // Hand-picked constant, floor(2^32/phi).\n    i ^= i >>  n/2;\n    return int(i);\n}\nint shuffle_FP2(ivec2 j) {\n    uint x = uint(j.x + N *j.y), c = uint(iTime); int n = int(log2(float(N*N)+.5));\n    uvec2 v=uvec2(x,c),m=uvec2((1u<<n)-1u,-1u),s=uvec2(n/2,17);\n    // XQO, see https://github.com/skeeto/hash-prospector/issues/23\n    v^=v>>s; v^=v*v|5u; v.x+=v.y; v&=m;\n    v^=v>>s; v^=v*v|5u; v.x+=v.y; v&=m;\n    v^=v>>s; v^=v*v|5u; v.x+=v.y; v&=m;\n    return int(v.x);\n}\n\nvec4 char(vec2 p, int c) {   // --- print char. from https://www.shadertoy.com/view/llySRh\n    vec2 dFdx = dFdx(p/16.), dFdy = dFdy(p/16.);\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n\treturn textureGrad( iChannel3, p/16. + fract( vec2(c, 15-c/16) / 16. ), \n                        min(abs(dFdx),1./256.), min(abs(dFdy),1./256.) ); // for Windows\n} \n#define hue(v)  ( .6 + .6 * cos( 6.3*(v)  + vec4(0,23,21,0)  ) )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = Nf*u/R, F = abs(fract(U)-.5);\n    int i = shuffle(ivec2(U));\n    O = mix( vec4(max(F.x,F.y)<.45), hue(float(i)/Nf/Nf), char(fract(U),(N==4?65:0)+i).x );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}