{
    "Shader": {
        "info": {
            "date": "1573763792",
            "description": "A simple circle based radar",
            "flags": 0,
            "hasliked": 0,
            "id": "wsGXWz",
            "likes": 2,
            "name": "Simple Little Radar",
            "published": 3,
            "tags": [
                "radar",
                "learning"
            ],
            "usePreview": 0,
            "username": "EdLynch",
            "viewed": 345
        },
        "renderpass": [
            {
                "code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.141\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nmat2 rotate2d(float _angle, float speed){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat box(in vec2 _st, in vec2 _size){\n    _size = vec2(0.5) - _size*0.5;\n    vec2 uv = smoothstep(_size,\n                        _size+vec2(0.001),\n                        _st);\n    uv *= smoothstep(_size,\n                    _size+vec2(0.001),\n                    vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\nfloat crossN(in vec2 _st, float _size){\n    return  box(_st, vec2(_size,_size/4.)) +\n            box(_st, vec2(_size/4.,_size));\n}\n\n\nvec3 radar(vec2 st, float radius, vec3 radarColor, float speed){\n    st -= vec2(0.5);\n    float num = fract(iTime*speed) *2.*PI;\n    st *= rotate2d(num,speed);\n    st += vec2(0.5);\n    float intensity = smoothstep(0.16, 0.3, distance(st, vec2(0.5)))\n        *smoothstep(distance(vec2(0.5),st), distance(vec2(0.5),st)+.005, radius+.01);\n    intensity +=  ((smoothstep(0.4,0.5,st.x) - smoothstep(0.5,0.53,st.x))*\n        smoothstep(distance(st, vec2(0.5)), distance(st, vec2(0.5))+.05, radius+.02))\n        *smoothstep(0.45, 0.51, st.y);\n    return vec3(intensity*radarColor);\n}\n\nvec3 graientRing(vec2 st, float radius, vec3 radarColor){\n    float intensity = smoothstep(0.1, 0.3, distance(st, vec2(0.5)))\n        *smoothstep(distance(vec2(0.5),st), distance(vec2(0.5),st)+.005, radius+.01);\n    return vec3(intensity*radarColor);\n}\n\nvec3 ring(vec2 st, float radius, float thickness, vec3 ringColor){\n    float intensity = smoothstep(radius*.93-thickness, radius+0.01-thickness, distance(st, vec2(0.5)))\n         - smoothstep(radius, radius+0.01, distance(st, vec2(0.5)));\n    \n    return vec3(intensity*ringColor);\n}\n\nvec3 ringWithGaps(vec2 st, float radius, float thickness, vec3 ringColor){\n    vec3 ring = ring(st, radius, thickness, ringColor);\n    float gap = crossN(st, radius*3.) * (step(distance(st, vec2(0.5)), radius+.01)\n          -step(distance(vec2(0.5),st), radius-.01));\n    ring = ring - gap;\n    if(ring.x < .000001){\n        ring = vec3(0.);\n    }\n    return ring;\n}\n\nvec3 spinningRing(vec2 st, float radius, float thickness, vec3 ringColor, float time, float speed, bool clockwise){\n    vec3 color = ringWithGaps(st, radius, thickness, ringColor);\n    //return color;\n    st -= vec2(0.5);\n    float modifier = 1.;\n    if(!clockwise){modifier=-1.;}\n    // rotate the space\n    float num = fract(u_time*speed) *2.*PI * modifier;\n    st *= rotate2d(num,speed);\n    st += vec2(0.5);\n    color = ringWithGaps(st, radius, thickness, ringColor);\n    \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord.xy/iResolution.y;\n    st.x -= .45;\n    vec3 color = vec3(0.362,0.172,0.960)*st.y*abs(sin(iTime));\n    \n    color += spinningRing(st, 0.4, 0.01, vec3(0.995,0.502,0.149), iTime, .1, false);\n    color += spinningRing(st, 0.3, 0.01, vec3(0.387,0.552,0.970), iTime, .3, true);\n    color += graientRing(st, 0.15*abs(sin(iTime)), vec3(0.995,0.100,0.462));\n    color += radar(st, .2, vec3(0.312,0.995,0.503), .6);\n    \n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}