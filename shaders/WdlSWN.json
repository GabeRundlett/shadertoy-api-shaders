{
    "Shader": {
        "info": {
            "date": "1551298207",
            "description": "This program does a very simple lattice-boltzmann torch fire effect by advection of neighboring pixel values. To make it interesting, we randomly move the fire source and use a texture to get some fire like color.",
            "flags": 32,
            "hasliked": 0,
            "id": "WdlSWN",
            "likes": 3,
            "name": "Lattice-Boltzmann Torch Fire",
            "published": 3,
            "tags": [
                "simulation",
                "latticeboltzmann",
                "torchfire"
            ],
            "usePreview": 1,
            "username": "microwerx",
            "viewed": 789
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float rseed;\nvec2 rcoord;\nfloat rand()\n{\n    rseed = fract(sin(rseed + dot(rcoord, vec2(12.9898, 78.233))) * 43758.5453);\n    return rseed;\n}\n\nvec2 rand2()\n{\n    return vec2(rand(), rand());\n}\n\nvec4 source(vec2 xy, float distance)\n{\n    vec2 v = iMouse.xy - (xy + 2.0 * distance * (vec2(-0.5) + rand2()));\n    if (length(v) < distance)\n    {\n        return texture(iChannel1, rand2() + xy/iResolution.xy);\n    }\n    /*\n    if (xy.y <= 5.0){\n        return vec4(.125 * rand(), 0.0, 0.0, 1.0);\n    }\n*/\n    return vec4(0.0);\n}\n\nvec4 latticeBoltzmann(in vec2 fragCoord, in float eta)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 dp = 1.0 / iResolution.xy;\n    vec4 up = texture(iChannel0, uv + vec2(0.0, -dp.y));\n    vec4 dn = texture(iChannel0, uv + vec2(0.0, 0));\n    vec4 lt = texture(iChannel0, uv + vec2(dp.x, 0.0));\n    vec4 rt = texture(iChannel0, uv + vec2(-dp.x, 0.0));\n    return eta * 0.25 * (up + dn + lt + rt);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    rseed = iTime;// - fract(iTime);\n    vec2 uv = fragCoord/iResolution.xy;\n    rcoord = uv;\n    \n    fragColor = source(fragCoord, 8.0);\n    fragColor += latticeBoltzmann(fragCoord, 0.99);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}