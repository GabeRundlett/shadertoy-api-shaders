{
    "Shader": {
        "info": {
            "date": "1623177673",
            "description": "A little thingy for fun",
            "flags": 0,
            "hasliked": 0,
            "id": "ftB3zR",
            "likes": 5,
            "name": "Double Slit",
            "published": 3,
            "tags": [
                "light",
                "slit"
            ],
            "usePreview": 0,
            "username": "milesWaugh",
            "viewed": 359
        },
        "renderpass": [
            {
                "code": "#define pi 3.141592653589793\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = 2. * (fragCoord - iResolution.xy * .5) / iResolution.y;\n    vec3 col, col1, col2;\n\n    col1 = vec3(cos(pi * uv.x * 8. - iTime)); //Initial waves\n    vec2 a = vec2(uv.x, uv.y - 0.5);\n    vec2 b = vec2(uv.x, uv.y + 0.5);\n    float c = dot(a, a);\n    float d = dot(b, b);\n    col2 = vec3(cos(pi * sqrt(c) * 8. - iTime) * exp(-c * .4) + cos(pi * sqrt(d) * 8. - iTime) * exp(-d * .4)) * .5; //Interference\n\n    col = mix(col1, col2, smoothstep(0., 1., uv.x * 15.)); //Interpolate\n    col *= min(smoothstep(0., 1., abs(uv.x) * 16.) / smoothstep(0., 1., abs(abs(uv.y) - 0.5) * 20.), 1.); //Barrier\n\n    col = col * col; //PDF\n\n    col = vec3((-cos(pi * (col.r)) / 2. + .5), col.r, (1. - (acos(2. * col.r - 1.)) / pi)); //color\n\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}