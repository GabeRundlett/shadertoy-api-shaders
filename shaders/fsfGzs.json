{
    "Shader": {
        "info": {
            "date": "1616412239",
            "description": "another blend",
            "flags": 0,
            "hasliked": 0,
            "id": "fsfGzs",
            "likes": 8,
            "name": "GridBlend6",
            "published": 3,
            "tags": [
                "grid",
                "blend",
                "hex",
                "tri"
            ],
            "usePreview": 0,
            "username": "Del",
            "viewed": 242
        },
        "renderpass": [
            {
                "code": "\nvec4 HexGrid(vec2 uv, out vec2 id)\n{\n    uv *= mat2(1.1547,0.0,-0.5773503,1.0);\n    vec2 f = fract(uv);\n    float triid = 1.0;\n    if((f.x+f.y) > 1.0)\n    {\n        f = 1.0 - f;\n     \ttriid = -1.0;\n    }\n    vec2 co = step(f.yx,f) * step(1.0-f.x-f.y,max(f.x,f.y));\n    id = floor(uv) + (triid < 0.0 ? 1.0 - co : co);\n    co = (f - co) * triid * mat2(0.866026,0.0,0.5,1.0);\n    uv = abs(co);\n    id*=inverse(mat2(1.1547,0.0,-0.5773503,1.0));\n    return vec4(0.5-max(uv.y,abs(dot(vec2(0.866026,0.5),uv))),length(co),co);\n}\nvec4 TriGrid(vec2 uv, out vec2 id)\n{\n    float scaler = 0.866026;\n    uv *= mat2(1,-1./1.73, 0,2./1.73)*scaler;\n    vec3 g = vec3(uv,1.-uv.x-uv.y);\n    vec3 _id = floor(g)+0.5;\n    g = fract(g);\n    float lg = length(g);\n    if (lg>1.)\n        g = 1.-g;\n    vec3 g2 = abs(2.*fract(g)-1.);\n    vec2 triuv = (g.xy-ceil(1.-g.z)/3.) * mat2(1,.5, 0,1.73/2.);\n    float edge = max(max(g2.x,g2.y),g2.z);\n    id = _id.xy;\n    id*= mat2(1,.5, 0,1.73/2.);\n    id.xy += sign(lg-1.)*0.1;\n    return vec4(((1.0-edge)*0.43)/scaler,length(triuv),triuv);\n}\nfloat hbar(vec2 p, float nline, float t)\n{\nreturn 0.5+sin((p.y*nline)+t)*0.5;\n}\nfloat smin( float a, float b, float k )\n{\nfloat h = clamp( 0.5 + 0.5*(b-a)/k, 0.0, 1.0 );\nreturn mix( b, a, h ) - k*h*(1.0-h);\n}\n\nmat2 _rot(float th)\n{\n\tvec2 a = sin(vec2(1.5707963, 0) + th);\n\treturn mat2(a.xy, -a.y, a.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float tt = iTime;\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    uv *= _rot(sin(uv.x*uv.y)*0.25+iTime*0.1);\n    vec2 id;\n    vec2 id2;\n    float zoom = 10.;\n    zoom += sin(uv.x*2.0+tt) * 0.5;\n    vec4 h = HexGrid(uv*zoom, id)*0.9;\n    vec4 h2 = TriGrid(uv*zoom, id2)*1.4;\n    h.x = min(h.x+0.5, h2.x*2.75);\n    float vvv1 = abs(h2.x-h.x)*0.4;\n    float vvv2 = abs(h2.y-h.y)*0.25;\n\th.x = smin(h.x,h2.y-0.05,0.8);\n    id = mix(id,id2,0.5);\n    float vvv = min(vvv1,vvv2)*(1.75+sin(tt*1.5+length(id*16.0)));\n    vec3 shapecol = vec3(0.125, 0.275, 0.155)*.95;\n    vec3 shapecol2 = vec3(0.83,.95,.83) * 4.0;\n    shapecol = mix(shapecol,shapecol2,vvv);\n    float cm = 1.0 + pow(abs(sin(length(id)*.25 + tt*0.65)), 64.0);\n    cm *= 1.0 + (hbar(h.zw,100.0,tt*12.0)*0.1);\n    shapecol *= cm;\n    vec3 bordercol = shapecol;\n    vec3 finalcol = mix(bordercol*0.2,shapecol,smoothstep(-0.05, 0.045, h.x));\n    fragColor =vec4(finalcol*0.8,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}