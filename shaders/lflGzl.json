{
    "Shader": {
        "info": {
            "date": "1703388463",
            "description": "Sparkly, twilight, milkyway",
            "flags": 0,
            "hasliked": 0,
            "id": "lflGzl",
            "likes": 7,
            "name": "Star Struct",
            "published": 3,
            "tags": [
                "shadertoy"
            ],
            "usePreview": 0,
            "username": "pxlmage",
            "viewed": 225
        },
        "renderpass": [
            {
                "code": "#define NUM_LAYERS 6.\n\nmat2 Rot(float a) {\n    float s = sin(a), c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat Star(vec2 uv, float flare){\n    float d = length(uv);\n    float m = .05/d;\n    \n    \n    float rays = max(0.,1.-abs(uv.x * uv.y * 1000.));\n    m += rays* flare;\n    uv *= Rot(3.1415/4.);\n    rays = max(0.,1.-abs(uv.x * uv.y * 1000.));\n    m += rays * .3 * flare;\n    m*= smoothstep(1.,.2,d);\n    return m;\n}\n\n//RNG\nfloat Hash21(vec2 p){\n    p = fract(p*vec2(123.34, 456.21));\n    p += dot(p, p + 45.32);\n    return fract(p.x * p.y);\n}\n\nvec3 StarLayer(vec2 uv){\n    vec3 col = vec3(0);\n\n    //boxes\n    vec2 gv = fract(uv) - 0.5;\n    vec2 id = floor(uv);\n\n    for(int y=-1;y<=1;y++){\n        for(int x=-1;x<=1;x++){\n            vec2 offs = vec2(x,y);\n            float n=  Hash21(id+offs); // random betwen 0 and 1\n            float size = fract(n*345.32);\n            float star = Star(gv-offs-vec2(n,fract(n*34.))+.5,smoothstep(.8, .9, size));\n            vec3 color = sin(vec3(.2,.3,.9)*fract(n*2345.2)*6.2831* 100.)* 0.5 + 0.5;\n            color = color* vec3(1,.5,1.+size);\n            star *= sin(iTime*3.+n*6.2831)*.5+1.;\n            col += size * star * color;\n        }\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -0.5 to 0.5)\n    vec2 uv = (fragCoord -.5*iResolution.xy)/iResolution.y;\n    vec2 M = (iMouse.xy -.5*iResolution.xy)/iResolution.y;\n    float t = iTime*.01;\n    uv += M *4.;\n    uv *= Rot(t);\n    vec3 col = vec3(0);\n    \n    for(float i=0.; i<1.; i+=1./NUM_LAYERS) {\n        float depth = fract(i+t);\n        float scale = mix(20.,.5,depth);\n        float fade = depth* smoothstep(1.,.9,depth);\n        col += StarLayer(uv*scale+i*453.2-M)*fade;\n    }\n    \n    //red grid\n    //if(gv.x > .48 || gv.y > .48) col.r = 1.;\n    \n    //col.rg += id*.4;\n    //col += Hash21(uv);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}