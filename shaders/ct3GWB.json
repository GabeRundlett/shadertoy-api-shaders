{
    "Shader": {
        "info": {
            "date": "1682984784",
            "description": "Changing color's luminosity across layers makes an illusion of depth.",
            "flags": 0,
            "hasliked": 0,
            "id": "ct3GWB",
            "likes": 4,
            "name": "Color Stud - Transfo PXV-2b",
            "published": 3,
            "tags": [
                "colorinteraction"
            ],
            "usePreview": 0,
            "username": "Slals",
            "viewed": 148
        },
        "renderpass": [
            {
                "code": "float rectSDF(vec2 uv, vec2 s) {\n    return max(abs(uv.x / s.x), abs(uv.y / s.y));\n}\n\nfloat fill(float x, float s) {\n    return smoothstep(x -0.005, x + 0.005, s);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    uv.x -= 0.4;\n    \n    float a = radians(45.0 * cos(iTime * 0.2));\n    uv = mat2(cos(a), -sin(a), sin(a), cos(a)) * (uv - 0.5);\n    \n    vec3 M = iMouse.xyz / iResolution.xyz;\n    \n    vec3 baseColor = vec3(0.7647, 0.2039, 0.1529), color = vec3(0.0);\n    for (int i = 5; i-- >= 0;) {\n        float m = float(i) * 0.05;\n        float square = fill(rectSDF(uv + vec2(0.0, m * sin(iTime)), vec2(1.0)), 0.05 + m);\n        color = mix(color, baseColor - (sin(iTime * 0.5) * m), square);\n    }\n    \n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}