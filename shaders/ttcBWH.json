{
    "Shader": {
        "info": {
            "date": "1612623091",
            "description": "Explore Sierpinski gasket",
            "flags": 0,
            "hasliked": 0,
            "id": "ttcBWH",
            "likes": 5,
            "name": "Explore Sierpinski gasket",
            "published": 3,
            "tags": [
                "raymarching",
                "fractal",
                "tetrahedron",
                "sierpinski"
            ],
            "usePreview": 0,
            "username": "butadiene",
            "viewed": 402
        },
        "renderpass": [
            {
                "code": "float PI = acos(-1.);\nmat2 rot(float r){\n    vec2 s = vec2(cos(r),sin(r));\n    return mat2(s.x,s.y,-s.y,s.x);\n}\nfloat cube(vec3 p,vec3 s){\n    vec3 q = abs(p);\n    vec3 m = max(s-q,0.);\n    return length(max(q-s,0.))-min(min(m.x,m.y),m.z);\n}\n\nvec4 tetcol(vec3 p,vec3 offset,float scale,vec3 col){\n    vec4 z = vec4(p,1.);\n    for(int i = 0;i<12;i++){\n        if(z.x+z.y<0.0)z.xy = -z.yx,col.z+=1.;\n        if(z.x+z.z<0.0)z.xz = -z.zx,col.y+=1.;\n        if(z.z+z.y<0.0)z.zy = -z.yz,col.x+=1.;\n        \n        z *= scale;\n      //  z.xyz = clamp(z.xyz,-1.,1.);\n        z.xyz += offset*(1.0-scale);\n    }\n    \n    return vec4(col,(cube(z.xyz,vec3(1.5)))/z.w);\n}\nvec4 dist(vec3 p,float t){\n    float s = 1.;\n    p = abs(p)-4.*s;\n    p = abs(p)-2.*s;\n    p = abs(p)-1.*s;\n\n    vec4 sd = tetcol(p,vec3(1),1.8,vec3(0.));\n    float d= sd.w;\n    vec3 col = 1.-0.1*sd.xyz;\n    col *= exp(-2.5*d)*2.6;\n    return vec4(col,d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = (uv-0.5)*2.;\n    p.y *= iResolution.y/iResolution.x;\n\n    float rsa =1.2;\n    float time = iTime+17.5;\n    float rkt = time*0.3;\n    vec3 ro = vec3(rsa*cos(rkt)-0.05,2.2*sin(time*0.2)+0.025,rsa*sin(rkt));\n    vec3 ta = vec3(0);\n    vec3 cdir = normalize(ta-ro);\n    vec3 side = cross(cdir,vec3(0,1,0));\n    vec3 up = cross(side,cdir);\n    vec3 rd = normalize(p.x*side+p.y*up+0.5*cdir);\n    rd.xz *= rot(time*0.13+1.);\n    float d,t= 0.;\n    vec3 ac = vec3(0.);\n    vec3 ac2 = vec3(0.);\n    float frag = 0.;\n    float ep = 0.0005;\n    for(int i = 0;i<66;i++){\n        vec4 rsd = dist(ro+rd*t,t);\n        d = rsd.w;\n        t += d;\n        ac += rsd.xyz;\n        if(d<ep) break;\n    }\n\n    vec3 col = vec3(0);\n    \n    col  =0.04*ac;\n    \tfragColor = vec4(col, 1.0 );\n\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}