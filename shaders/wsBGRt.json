{
    "Shader": {
        "info": {
            "date": "1549664434",
            "description": "Just another thing I thought was cool. Second shader",
            "flags": 0,
            "hasliked": 0,
            "id": "wsBGRt",
            "likes": 3,
            "name": "Infinite Lines",
            "published": 3,
            "tags": [
                "geometry"
            ],
            "usePreview": 0,
            "username": "SwaginWagon",
            "viewed": 419
        },
        "renderpass": [
            {
                "code": "\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy ;\n    \n    uv.x += 0.*iTime;\n    uv.x -= iResolution.x/2.;\n    uv.y += iResolution.y/2.;\n    \n    uv.y = iResolution.y - uv.y;\n    //uv.xy/= .1;\n    uv.x += 100.*iTime;\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\t\n    \n   // vec4 color = colormap(float(int(uv.x + 0.*iTime)%int(uv.y))/(iResolution.y * 0.03));\n    vec4 color = vec4(0.0,0.0,0.0,1.0);\n    if (int(uv.x)%int(uv.y) == 0)\n   \t\tcolor = vec4(1.0,1.0,1.0,1.0);\n    \n    if (uv.y < 0.)\n        color = vec4(0.0,0.0,0.0,1.0);\n//    if (int(uv.x)%int(uv.y) == 1)\n //  \t\tcolor = vec4(1.0,1.0,0.0,1.0);\n //   if (int(uv.x)%int(uv.y) == 2)\n  // \t\tcolor = vec4(1.0,0.0,0.0,1.0);\n   // if (int(uv.x)%int(uv.y) == 3)\n  //      color = vec4(1.0,0.0,1.0,1.0);\n  //   if (int(uv.x)%int(uv.y) == 4)\n  // \t\tcolor = vec4(1.0,1.0,0.0,1.0);\n  //   if (int(uv.x)%int(uv.y) == 5)\n  // \t\tcolor = vec4(0.0,1.0,0.0,1.0);\n //    if (int(uv.x)%int(uv.y) == 6)\n //  \t\tcolor = vec4(1.0,0.0,0.0,1.0);\n    \n    //float depth = 100.;\n    \n    //for (float i = 0.; i < 20.; i++)\n    //    if (uv.x >= i*depth && uv.x <= i*depth+1.)\n    //    \tcolor = vec4(1.0,1.0,0.0,1.0);\n    \n    //for (float i = 0.; i < 20.; i++)\n\t//\tif (uv.y >= i*depth && uv.y <= i*depth+1.)\n    //    \tcolor = vec4(1.0,1.0,0.0,1.0);\n        \n   \n    \n    // Output to screen\n    fragColor = color;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}