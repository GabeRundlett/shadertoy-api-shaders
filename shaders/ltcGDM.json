{
    "Shader": {
        "info": {
            "date": "1469566975",
            "description": "2D Radial Rotate Particles",
            "flags": 0,
            "hasliked": 0,
            "id": "ltcGDM",
            "likes": 28,
            "name": "2D Radial Rotate Particles",
            "published": 3,
            "tags": [
                "2d",
                "blur",
                "fake",
                "radial",
                "rotate",
                "particles",
                "motion",
                "repeat",
                "tweet",
                "two"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 1458
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 f, vec2 g )\n{\n\tf.xyz = iResolution;\n\t\n    g = (g+g-f.xy)/f.y * 7.; // cartesian central\n\t\n    g = vec2(length(g), atan(g.x,g.y) / 3.14159); // polar central\n\t\n    f.x = floor(g.x); // ring id\n\t\n    g.y *= f.x; //cell size according to ring id (proportionnal system for sizing the cells)\n\t\n    f.x = fract(f.x + 48934.4238*sin(f.x * 692.7398)); // hash\n    \n\tf.x = sign(f.x-.5); // inversion of ring rotate according to ring id and hash\n    \n    g.y += iDate.w * f.x ; // rotate of ring\n\t\n    g = abs(fract(g)-vec2(.5,f.x * -.45 + .5)); // partial symetry in cells according to inversions rings\n\t\n    f += -f + .1/(g.x*1.6 + g.y*.5); // losange\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}