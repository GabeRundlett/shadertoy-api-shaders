{
    "Shader": {
        "info": {
            "date": "1676322851",
            "description": "I found this piggy online then made it a shader:\nhttps://www.pinterest.co.uk/pin/492862752944528156/\n\n",
            "flags": 0,
            "hasliked": 0,
            "id": "Dl2SRK",
            "likes": 25,
            "name": "üêñnado",
            "published": 3,
            "tags": [
                "pig",
                "piggy"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 338
        },
        "renderpass": [
            {
                "code": "#define black vec3(0.01)\n#define pink vec3(1, 0.5, 0.5)\n#define darkPink vec3(200, 100, 100) / 255.\n\n#define pi 3.14159\n#define t 0.25 * iTime\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\n// üêñ ty fabrice üêñ\nfloat box(vec2 f, int x, int y, int w, int h) {\n    vec2 p = vec2(x,y);\n    f = step(p, f) * step(f, p + vec2(w,h) - 1.);\n    return f.x*f.y;\n}\n\nfloat drawPink(vec2 p) {\n    float s = box(p, 0, -8, 9, 17);\n    s += box(p, 6, 9, 2, 2);\n    s += box(p, 9, -5, 2, 3);\n    s += box(p, 9, -2, 1, 1);\n    return s;\n}\n\nfloat drawBlack(vec2 p) {\n    // Snout\n    float s = box(p, 0, 0, 2, 1);\n    s += box(p, 2, 1, 1, 1);\n    s += box(p, 3, 2, 1, 4);\n    s += box(p, 0, 6, 3, 1);\n    s += box(p, 1, 3, 1, 2);\n    \n    // Outline\n    s += box(p, 0, 8, 5, 1);\n    s += box(p, 5, 9, 1, 3);\n    s += box(p, 6, 11, 2, 1);\n    s += box(p, 8, 0, 1, 11);\n    s += box(p, 8, -8, 1, 5);\n    s += box(p, 9, -6, 2, 1);\n    s += box(p, 11, -5, 1, 3);\n    s += box(p, 10, -2, 1, 1);\n    s += box(p, 9, -1, 1, 1);\n    s += box(p, 0, -9, 8, 1);\n    \n    // Eyes\n    s += box(p, 6, 6, 1, 1);\n    return s;\n}\n\nfloat drawDarkPink(vec2 p) {\n    // Snout\n    float s = box(p, 0, -1, 2, 1);\n    s += box(p, 2, 0, 1, 1);\n    s += box(p, 3, 1, 1, 1);\n    \n    // Eyes\n    s += box(p, 6, 5, 1, 1);\n    return s;\n}\n\nvec3 drawPiggy(vec2 ipos, vec3 col, vec3 bgcol, float shade) {\n    ipos.x = abs(ipos.x);\n    col = mix(col, mix(bgcol, pink, shade), drawPink(ipos));\n    col = mix(col, mix(bgcol, black, shade), drawBlack(ipos));\n    col = mix(col, mix(bgcol, darkPink, shade), drawDarkPink(ipos));\n    return col;\n}\n\nvec3 drawGridPiggy(vec2 uv, vec3 col, vec3 bgcol, float i, float n, float m) {\n    float io = 0.25 * 3.14159 * i /n;\n    \n    float th = tanh(0.3 * max(0., t - 1.5));\n    uv *= rot(th * (pi * cos(0.5 * t + 4. * io)));  \n    uv.y += th * cos(t + io);\n    \n    vec2 o = vec2(cos(t + io), sin(t + io));\n    vec2 fpos = fract((n-i) * uv + t + o) - 0.5;\n    vec2 ipos2 = floor((m + 4. * cos(10.*uv.x + io + 10.*t)) * fpos + vec2(0,0.5)) ;\n    return drawPiggy(ipos2, col, bgcol, i /n);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    vec3 bgcol = vec3(exp(-abs(uv)), 0.8 + 0.2 * cos(length(uv) - t));\n    vec3 col = bgcol;\n    \n    // Number of layers\n    float n = 14.;\n    \n    // Grid piggy scale\n    float m = 50.;\n    \n    // Centre piggy scale\n    float piggyAmount = 0.45 + 0.4 * cos(4.*t);\n    float piggyLayer = piggyAmount * n;\n    float piggyScale = piggyLayer * m;\n    \n    // Back piggies\n    for (float i = 0.; i <= floor(n - piggyLayer); i++) \n        col = drawGridPiggy(uv, col, bgcol, i, n, m);   \n    \n    // Centre piggy\n    vec2 ipos1 = floor(piggyScale * uv + vec2(0, 2.5));\n    col = drawPiggy(ipos1, col, bgcol, 1. - piggyAmount);\n    \n    // Front piggies\n    for (float i = ceil(n - piggyLayer); i < n; i++)\n        col = drawGridPiggy(uv, col, bgcol, i, n, m);\n       \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}