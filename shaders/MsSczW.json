{
    "Shader": {
        "info": {
            "date": "1491071867",
            "description": "Quadratic bezier curve as intersections of two line pencils. See https://scholarsarchive.byu.edu/cgi/viewcontent.cgi?article=1000&context=facpub Chapter 17\nBest seen in fullscreen",
            "flags": 0,
            "hasliked": 0,
            "id": "MsSczW",
            "likes": 0,
            "name": "Moving line quadratic bezier",
            "published": 3,
            "tags": [
                "2d",
                "bezier"
            ],
            "usePreview": 0,
            "username": "NinjaKoala",
            "viewed": 518
        },
        "renderpass": [
            {
                "code": "#define MOVE_CONTROL_POINT\n#define DRAW_LINES\n//#define MOVE_LINES\n//#define CHANGE_WEIGHT\n\nconst float num_lines=12.;\nconst float dot_size=.002;\n\nconst vec3 bg_col=vec3(1);\nconst vec3 bezier_col=vec3(0,0,1);\nconst vec3 point_col=vec3(0);\nconst vec3 point_col0=vec3(0);\nconst vec3 point_col1=vec3(0.5);\nconst vec3 line_col00=vec3(.5,0,0);\nconst vec3 line_col01=vec3(1,0,0);\nconst vec3 line_col10=vec3(0,.5,0);\nconst vec3 line_col11=vec3(0,1,0);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n\tfloat border=2./iResolution.x;\n\n\tvec2 uv=fragCoord.xy/iResolution.xy;\n\tuv-=.5;\n    uv.y*=iResolution.y/iResolution.x;\n\n\tvec2 mouse=iMouse.xy/iResolution.xy;\n\n\t#ifdef MOVE_CONTROL_POINT\n\tvec2 mouseuv=mouse-.5;\n    mouseuv.y*=iResolution.y/iResolution.x;\n\t#endif\n\n\tvec3 p0=vec3(.1,-.2,1);\n\t#ifdef MOVE_CONTROL_POINT\n\tvec3 p1=vec3(mouseuv,1.);\n\t#else\n\tvec3 p1=vec3(.05,.2,1);\n\t#endif\n\tvec3 p2=vec3(-.1,-.1,1);\n\n\t#ifdef CHANGE_WEIGHT\n\tfloat weight=exp(4.*mouse.y-2.);\n\tp1*=weight;\n\t#endif\n\n\tfloat dis=1e38;\n\n\tvec3 line00=cross(p0,2.*p1);\n\tvec3 line01=cross(p0,p2);\n\tvec3 line10=cross(p2,p0);\n\tvec3 line11=cross(p2,2.*p1);\n\n\tvec3 color=bg_col;\n\n\tvec2 grad,grad1,grad2;\n\tgrad1.x=2.*line00.x*line11.x*uv.x+(line00.y*line11.x+line00.x*line11.y)*uv.y+line00.z*line11.x+line00.x*line11.z;\n\tgrad1.y=2.*line00.y*line11.y*uv.y+(line00.y*line11.x+line00.x*line11.y)*uv.x+line00.z*line11.y+line00.y*line11.z;\n\n\tgrad2.x=2.*line01.x*line10.x*uv.x+(line01.y*line10.x+line01.x*line10.y)*uv.y+line01.z*line10.x+line01.x*line10.z;\n\tgrad2.y=2.*line01.y*line10.y*uv.y+(line01.y*line10.x+line01.x*line10.y)*uv.x+line01.z*line10.y+line01.y*line10.z;\n\n\tgrad=grad1-grad2;\n\n\tdis=min(dis,abs(dot(line00,vec3(uv,1))*dot(line11,vec3(uv,1))-dot(line01,vec3(uv,1))*dot(line10,vec3(uv,1)))/length(grad));\n\tcolor=mix(bezier_col,color,smoothstep(0.,border,dis));\n\tdis=1e38;\n\n\tdis=min(dis,distance(p0.xy/p0.z,uv)-dot_size);\n\tdis=min(dis,distance(p1.xy/p1.z,uv)-dot_size);\n\tdis=min(dis,distance(p2.xy/p2.z,uv)-dot_size);\n\n\tcolor=mix(point_col,color,smoothstep(0.,border,dis));\n\tdis=1e38;\n\n\t#ifdef DRAW_LINES\n\tfloat l00=dot(vec3(uv,1),line00);\n\tfloat l01=dot(vec3(uv,1),line01);\n\tfloat l10=dot(vec3(uv,1),line10);\n\tfloat l11=dot(vec3(uv,1),line11);\n\n\tfloat t0=l00/(l00-l01);\n\tfloat t1=l10/(l10-l11);\n\n\tt0=clamp(t0,0.,1.);\n\tt1=clamp(t1,0.,1.);\n\n\tt0=floor(t0*(num_lines-1.)+.5)/(num_lines-1.);\n\tt1=floor(t1*(num_lines-1.)+.5)/(num_lines-1.);\n\n\tvec3 moving_line0=mix(line00,line01,t0);\n\tvec3 moving_line1=mix(line10,line11,t1);\n\n\tvec3 moving_line01=mix(line10,line11,t0);\n\tvec3 moving_line10=mix(line00,line01,t1);\n\n\tvec3 int_point0=cross(moving_line0,moving_line01);\n\tint_point0=vec3(int_point0.xy/int_point0.z,1.);\n\n\tvec3 int_point1=cross(moving_line1,moving_line10);\n\tint_point1=vec3(int_point1.xy/int_point1.z,1.);\n\n\tmoving_line0/=length(moving_line0.xy);\n\tmoving_line1/=length(moving_line1.xy);\n\n\tdis=min(dis,abs(dot(moving_line0,vec3(uv,1))));\n\n\tvec3 cur_line_col0=mix(line_col00,line_col01,t0);\n\n\tcolor=mix(cur_line_col0,color,smoothstep(0.,border,dis));\n\tdis=1e38;\n\n\tdis=min(dis,abs(dot(moving_line1,vec3(uv,1))));\n\n\tvec3 cur_line_col1=mix(line_col10,line_col11,t1);\n\n\tcolor=mix(cur_line_col1,color,smoothstep(0.,border,dis));\n\tdis=1e38;\n\n\tdis=min(dis,distance(int_point0.xy,uv)-dot_size);\n\n\tvec3 cur_point_col0=mix(point_col0,point_col1,t0);\n\n\tcolor=mix(cur_point_col0,color,smoothstep(0.,border,dis));\n\tdis=1e38;\n\n\tdis=min(dis,distance(int_point1.xy,uv)-dot_size);\n\n\tvec3 cur_point_col1=mix(point_col0,point_col1,t1);\n\n\tcolor=mix(cur_point_col1,color,smoothstep(0.,border,dis));\n\tdis=1e38;\n\t#endif //DRAW_LINES\n\n\t#ifdef MOVE_LINES\n\tfloat t_m=mouse.x;\n\n\tvec3 moving_line0_m=mix(line00,line01,t_m);\n\tvec3 moving_line1_m=mix(line10,line11,t_m);\n\n\tmoving_line0_m/=length(moving_line0_m.xy);\n\tmoving_line1_m/=length(moving_line1_m.xy);\n\n\tvec3 cur_line_col0_m=mix(line_col00,line_col01,t_m);\n\tvec3 cur_line_col1_m=mix(line_col10,line_col11,t_m);\n\n\tdis=min(dis,abs(dot(moving_line0_m,vec3(uv,1))));\n\n\tcolor=mix(cur_line_col0_m,color,smoothstep(0.,border,dis));\n\tdis=1e38;\n\n\tdis=min(dis,abs(dot(moving_line1_m,vec3(uv,1))));\n\n\tcolor=mix(cur_line_col1_m,color,smoothstep(0.,border,dis));\n\tdis=1e38;\n\n\tvec3 int_point_m=cross(moving_line0_m,moving_line1_m);\n\tint_point_m/=int_point_m.z;\n\n\tvec3 cur_point_col_m=mix(point_col0,point_col1,t_m);\n\n\tdis=min(dis,distance(int_point_m.xy,uv)-dot_size);\n\n\tcolor=mix(cur_point_col_m,color,smoothstep(0.,border,dis));\n\t#endif\n\n\tfragColor=vec4(color,1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}