{
    "Shader": {
        "info": {
            "date": "1638978753",
            "description": "simple fft reactive shader with pseudo bands - hi mid low - work in progress here :)",
            "flags": 0,
            "hasliked": 0,
            "id": "Nt3SD8",
            "likes": 5,
            "name": "simple_fft_sound_visualizer",
            "published": 3,
            "tags": [
                "fft",
                "reactive",
                "bands"
            ],
            "usePreview": 0,
            "username": "SimonOakey",
            "viewed": 297
        },
        "renderpass": [
            {
                "code": "\nfloat hi_sum = 0.;\nfloat mid_sum = 0.;\nfloat low_sum = 0.;\n\n\nvec2 center = vec2(.5, .5);\nvec2 left = vec2(.25, .5);\nvec2 right = vec2(.75, .5);\nvec3 ringColor = vec3(0.);\nvec3 bgColor = vec3(1., 1., 1.);\n\nvec2 fixAspect(vec2 _vec) {\n  _vec -= .5;\n  _vec.x /= iResolution.y / iResolution.x;\n  _vec += .5;\n  return _vec;\n}\n\nfloat circleLight(vec2 _uv, vec2 _pos, float _radius) {\n  float dist = _radius / length(_pos - _uv);\n  return dist;\n}\n\nfloat ringLight(vec2 _uv, vec2 _pos, float _radius, float _strokeWidth) {\n  float dist = length(_pos - _uv);\n  float dist2 = _strokeWidth / length(dist - _radius);\n  return dist2;\n}\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n \n float low_sum = 0.;\n for(int i=0;i<20;i++){\n \n     low_sum += texelFetch( iChannel0, ivec2(i,0), 0 ).x; \n     \n }\n \n    low_sum /=20.;\n    \n    \n    mid_sum = 0.;\n for(int i=100;i<200;i++){\n \n    mid_sum += texelFetch( iChannel0, ivec2(i,0), 0 ).x; \n     \n }\n \n    mid_sum /=100.;\n    \n    \n        hi_sum = 0.;\n for(int i=250;i<450;i++){\n \n    hi_sum += texelFetch( iChannel0, ivec2(i,0), 0 ).x; \n     \n }\n \n    hi_sum /=200.;\n \n  \n   \n \n  uv = fixAspect(uv);\n  vec2 mpos = fixAspect(iMouse.xy);\n\n  float mask = 0.;\n  mask += ringLight(uv, left, 0.4, low_sum*.02);\n  mask += ringLight(uv, center, 0.4, mid_sum*.02);\n  mask += ringLight(uv, right, 0.4, hi_sum*.02);\n  \n\n \n  //mask = step(.5, mask);\n  mask = smoothstep(.48,.52,mask);\n\n  vec3 color = mix(bgColor, ringColor, mask);\n\n fragColor = vec4(color, 1.);\n \n   \n \n \n \n\n  \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 34,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}