{
    "Shader": {
        "info": {
            "date": "1475172672",
            "description": "This is a modification of aiekick's shader: [url]https://www.shadertoy.com/view/4ly3Ry[/url]\nA big thanks to coyote for reducing this shader.",
            "flags": 0,
            "hasliked": 0,
            "id": "MtyGzy",
            "likes": 9,
            "name": "Dizzy - 94 chars",
            "published": 3,
            "tags": [
                "2d",
                "2tc",
                "onetweet"
            ],
            "usePreview": 0,
            "username": "GregRostami",
            "viewed": 900
        },
        "renderpass": [
            {
                "code": "float n(vec2 xy,float seed)\n{\n    return fract(tan(distance(xy*1.61803398874989484820459, xy)*seed)*xy.x);\n}\n\n\nvec4 fC(vec2 U){\t\t\t\t\t\t\nvec2 u=U/iResolution.x-.5;\t\t\t\t\t\t\\\nu/=dot(u,u);\t\t\t\t\t\t\t\t\t\\\n       return vec4( max(u=fract(u+u),u.x-u).y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0);\n    float A = 4.,  // Change A to define the level of anti-aliasing (1 to 16) ... higher numbers are REALLY slow!\n          s = 1./A, x, y;\n    \n    for (x=-.5; x<.5; x+=s) for (y=-.5; y<.5; y+=s) {\n        vec2 O = vec2(x,y)+fragCoord;\n        vec2 N = vec2( n(O,fract(iTime)), n(O,fract(iTime+1.0)) );\n        fragColor += min ( fC(O+N/A), 1.0 );}\n        \n\tfragColor /= A*A;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}