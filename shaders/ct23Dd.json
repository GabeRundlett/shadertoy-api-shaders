{
    "Shader": {
        "info": {
            "date": "1674163605",
            "description": "All year long I'm going to just focus on truchet tiles and the likes!",
            "flags": 0,
            "hasliked": 0,
            "id": "ct23Dd",
            "likes": 14,
            "name": "Year of Truchets #002",
            "published": 3,
            "tags": [
                "raymarching",
                "truchet",
                "tiles",
                "truchetcore"
            ],
            "usePreview": 0,
            "username": "byt3_m3chanic",
            "viewed": 247
        },
        "renderpass": [
            {
                "code": "/** \n\n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n    \n    Year of Truchets #002\n    01/18/2023  @byt3_m3chanic\n    \n    All year long I'm going to just focus on truchet tiles and the likes!\n    Truchet Core \\M/->.<-\\M/ 2023 \n    \n*/\n\n#define R iResolution\n#define T iTime\n#define M iMouse\n\n#define PI          3.14159265359\n#define PI2         6.28318530718\n\n#define MIN_DIST    .0001\n#define MAX_DIST    50.\n\nfloat hash21(vec2 p) {return fract(sin(dot(p,vec2(23.43,84.21)))*4832.3234);}\nmat2 rot(float a){ return mat2(cos(a),sin(a),-sin(a),cos(a)); }\n\n//@iq https://iquilezles.org/articles/palettes/\nvec3 hue(float t){ \n    t+=T*.06;\n    return .55+.75*cos(PI2*t*(vec3(1.,.99,.95)+vec3(.1,.34,.27))); \n}\n//@iq https://iquilezles.org/articles/distfunctions2d/\nfloat line( in vec2 p){\n    vec2 a = vec2(.2,.5),b = vec2(.8,.5);\n    vec2 ba = b-a, pa = p-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0., 1. );\n    float d = length(pa-h*ba);\n    return d-.1;\n}\n\nconst float scale = 8.;\n\nvoid mainImage( out vec4 O, in vec2 F ) {\n\n    // uv \n    vec2 uv = (2.* F.xy-R.xy)/max(R.x,R.y);\n    uv.x-=T*.05;\n    \n    // colors \n    vec3 h1 = hue(uv.y*.04+T*.01);\n    vec3 h2 = hue((15.+uv.y)*.04+T*.05);\n    vec3 h3 = hue(uv.x*.04+T*.01);\n    \n    vec3 C = hue((10.-uv.x)*.04+T*.1);\n    \n    // base grid and ids\n    vec2 id = floor(uv*scale);\n    vec2 gv = fract(uv*scale)-.5;\n    float px = scale/R.x;\n\n    float check = mod(id.y+id.x,2.)*2.-1.;\n    float rnd = hash21(id);\n    if(rnd>.5) gv.x *= -1.;\n    \n    // setup for truchet path\n    vec2 d2 = vec2(length(gv-.5),length(gv+.5));\n    vec2 g2 = d2.x<d2.y? gv-.5 : gv+.5;\n\n    float ft = .2+.1*sin(uv.y*5.2+T);\n    float d = length(g2)-.5;\n    float dl= smoothstep(px,-px,abs(abs(d)-ft)-.02);\n    d = smoothstep(-px,px,abs(d)-ft);\n\n    C = mix(C,h3,d);\n    C = mix(C,vec3(.8),dl);\n    \n    \n    // moving truchet parts\n    vec2 arc = gv-sign(gv.x+gv.y+.001)*.5;\n    float angle = atan(arc.x, arc.y);\n    d = length(arc);\n\n    float x = fract(3.*check*angle/PI+T*1.15);\n    float y = (d/.5)-.5;\n    \n    if(rnd<.5 ^^ check>0.) y=1.-y;\n    vec2 tuv = vec2(x,y);\n    \n    float ts = length(tuv-vec2(.5))-.25;\n    ts = smoothstep(.05+px,-px,abs(ts)-.125);\n    C = mix(C,vec3(.01),ts);\n    \n    float t = length(tuv-vec2(.5))-.25;\n    t = smoothstep(px,-px,abs(t)-.075);\n    C = mix(C,h2,t);\n    \n    ts = min(line(tuv-vec2(.5,0)),line(tuv+vec2(.5,0)));\n    ts = smoothstep(.05+px,-px,abs(ts)-.05);\n    C = mix(C,vec3(.01),ts);\n    \n    t = min(line(tuv-vec2(.5,0)),line(tuv+vec2(.5,0))); \n    t = smoothstep(px,-px,t);\n    C = mix(C,h1,t);\n    \n    C = pow(C, vec3(.4545));\n    O = vec4(C,1.);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}