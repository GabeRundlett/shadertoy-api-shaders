{
    "Shader": {
        "info": {
            "date": "1546931144",
            "description": "Line And Circle Test",
            "flags": 0,
            "hasliked": 0,
            "id": "WsfGRX",
            "likes": 4,
            "name": "Line And Circle Test",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "ZzEeRO",
            "viewed": 874
        },
        "renderpass": [
            {
                "code": "#define _BackgroundColor vec4(1.0,1.0,1.0,1.0)\n#define _LineColor vec3(0.0,0.0,0.0)\n#define _LineWidth 5.0\n#define _AA 1.0\n#define _CircleRadius1 45.0\n#define _CircleRadius2 90.0\n#define _CirclePos1 vec2(0.15,1.0)\n#define _CirclePos2 vec2(0.85,1.0)\n#define _CircleColor1 vec3(1.0,0.0,0.0)\n#define _CircleColor2 vec3(0.0,1.0,0.0)\n\nvec4 drawCircle(vec2 pos, vec2 center, float radius, vec3 color, float antialiasing) {\n\t\t\tfloat distance = length(pos - center) - radius;\n\t\t\tfloat threshod = smoothstep(0.0, antialiasing, distance);\n\t\t\treturn vec4(color, 1.0 - threshod);\n\t\t}\n\nvec4 drawLine(vec2 pos, vec2 point1, vec2 point2, float width, vec3 color, float antialiasing) {\n\t\t\tfloat k = (point1.y - point2.y) / (point1.x - point2.x);\n\t\t\tfloat b = point1.y - k * point1.x;\n\t\t\tfloat distance = abs(k*pos.x - pos.y + b) / sqrt(k*k + 1.0);\n\t\t\tfloat threshod = smoothstep(width / 2.0, width / 2.0 + antialiasing, distance);\n\t\t\treturn vec4(color, 1.0 - threshod);\n\t\t}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos=fragCoord;\n    float circleRadius1=_CircleRadius1*smoothstep(-1.0,1.0,sin(iTime));\n    float circleRadius2=_CircleRadius2*smoothstep(-1.0,1.0,sin(iTime+90.0));\n    vec2 circlePos1=vec2(_CirclePos1.x,_CirclePos1.y*smoothstep(-1.0,1.0,sin(iTime)));\n    vec2 circlePos2=vec2(_CirclePos2.x,_CirclePos2.y*smoothstep(-1.0,1.0,sin(iTime+90.0)));\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 backgroundColor=vec4(uv,0.5+0.5*sin(iTime),1.0);\n    vec3 circleColor1=vec3(0.5+0.5*sin(iTime),uv);\n    vec3 circleColor2=vec3(uv.x,0.5+0.5*sin(iTime),uv.y);\n    \n    vec4 linePic=drawLine(fragCoord,circlePos1*iResolution.xy,circlePos2*iResolution.xy,_LineWidth,_LineColor,_AA);\n    vec4 circlePic1=drawCircle(fragCoord,circlePos1*iResolution.xy,circleRadius1,circleColor1,_AA);\n    vec4 circlePic2=drawCircle(fragCoord,circlePos2*iResolution.xy,circleRadius2,circleColor2,_AA);\n    vec4 layer1=mix(backgroundColor,linePic,linePic.a);\n    vec4 layer2=mix(layer1,circlePic1,circlePic1.a);\n    vec4 layer3=mix(layer2,circlePic2,circlePic2.a);\n    fragColor=layer3;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}