{
    "Shader": {
        "info": {
            "date": "1377793768",
            "description": "Metaballs are calculated in 2D on a flat plane, then shaded as though they are 3D.\n\nComponent movement stolen from: http://glsl.heroku.com/e#10679.0",
            "flags": 0,
            "hasliked": 0,
            "id": "Xdf3DS",
            "likes": 2,
            "name": "Cheat Metaballs",
            "published": 3,
            "tags": [
                "2d",
                "3d",
                "metaballs"
            ],
            "usePreview": 0,
            "username": "phagor",
            "viewed": 825
        },
        "renderpass": [
            {
                "code": "const float k = 100.0;\nconst float threshold = 10.0;\nconst vec3 lightColour = vec3(0.9,0.9,1.0);\nconst vec3 ambient = vec3(0.1,0.0,0.0);\nconst float shinyness = 20.0;\nconst float diffuseFactor = 0.8;\nconst float cubemapFactor = 0.1;\nvec3 lightPos;\n\nvec3 colour = vec3(0.0,0.0,0.0);\nvec3 normal = vec3(0.0,0.0,0.0);\nfloat f = 0.0;\n\nvec2 center ( vec2 border, vec2 offset, vec2 vel ) {\n\tvec2 c = offset + vel * iTime * 0.5;\n\tc = mod ( c , 2. - 4. * border );\n\tif ( c.x > 1. - border.x ) c.x = 2. - c.x - 2. * border.x;\n\tif ( c.x < border.x ) c.x = 2. * border.x - c.x;\n\tif ( c.y > 1. - border.y ) c.y = 2. - c.y - 2. * border.y;\n\tif ( c.y < border.y ) c.y = 2. * border.y - c.y;\n\n\treturn c;\n}\n\nfloat field ( float b, float r ) {\n\tif ( r > b )\n\t\treturn 0.0;\n\tif ( r >= b/3.0 ) {\n\t\tfloat rb = 1.0 - r/b;\n\t\treturn (3.0*k)/2.0 * rb * rb;\n\t}\n\tif ( r >= 0.0 && r <= b/3.0 ) {\n\t\treturn k * ( 1.0 - ( (3.0*r*r)/(b*b) ) );\t\n\t}\n\treturn 0.0;\n}\n\nvoid circle ( float r, vec3 col, vec2 offset, vec2 vel, vec2 fragCoord ) {\n\tvec2 pos = fragCoord.xy / iResolution.y;\n\tfloat aspect = iResolution.x / iResolution.y;\n\tvec2 c = center ( vec2(r/2.0,r/2.0) , offset , vel );\n\tc.x *= aspect;\n\tfloat d = distance ( pos , c );\n\tfloat thisField = field (r, d);\n\tf += thisField;\n\tcolour += col * thisField;\n\tfloat z = sqrt ( abs(r*r - pow(pos.x-c.x,2.0) - pow(pos.y-c.y,2.0)) );\n\tnormal += normalize(vec3(pos.x-c.x, pos.y-c.y,z))*thisField;\n}\n\t\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    lightPos = vec3(iResolution.xy*0.75,2000.0);\n    \n\tcircle ( .10, vec3 (0.7, 0.2, 0.8) , vec2 (.6) , vec2 (.30, .70), fragCoord );\n\tcircle ( .09, vec3 (0.7, 0.9, 0.6) , vec2 (.1) , vec2 (.02, .20), fragCoord );\n\tcircle ( .12, vec3 (0.3, 0.4, 0.1) , vec2 (.1) , vec2 (.10, .04), fragCoord );\n\tcircle ( .15, vec3 (0.2, 0.5, 0.1) , vec2 (.3) , vec2 (.10, .20), fragCoord );\n\tcircle ( .20, vec3 (0.1, 0.3, 0.7) , vec2 (.2) , vec2 (.40, .25), fragCoord );\n\tcircle ( .30, vec3 (0.9, 0.4, 0.2) , vec2 (.0) , vec2 (.15, .20), fragCoord );\n\t\n\tvec3 c;\n\t\n\tif (f < threshold)\n\t\tc = vec3(0.0,0.0,0.0);\n\telse {\n\t\tcolour /= f;\n\t\tnormal /= f;\n\t\t\n\t\tc = ambient;\n\t\tvec3 lightDir = normalize(lightPos - vec3(fragCoord.xy,0.0));\n\t\tc += colour * diffuseFactor * max(dot(normal,lightDir), 0.0);\n\t\tvec3 r = normalize ( reflect ( lightDir, normal ) );\n\t\tc += lightColour * pow(max(dot(r,vec3(0.0,0.0,-1.0)), 0.0), shinyness);\n\t\tc += cubemapFactor * texture(iChannel0,normal).xyz;\n\t}\n\t\n\tfragColor = vec4( c, 1.0 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 24,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}