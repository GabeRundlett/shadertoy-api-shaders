{
    "Shader": {
        "info": {
            "date": "1677006880",
            "description": "it's rotating and scaling for no reason",
            "flags": 0,
            "hasliked": 0,
            "id": "Ds33R4",
            "likes": 0,
            "name": "first shader rotating",
            "published": 3,
            "tags": [
                "circle"
            ],
            "usePreview": 0,
            "username": "koe1k",
            "viewed": 190
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n    float dist = length(uv - vec2(0.90,0.5));\n\n    float c = dist;\n    \n    float r = cos(iTime) * 0.05 + 0.45;\n    \n    if(c > r)\n        c = 1.0;\n    else\n        c = 0.0;\n        \n        \n    fragColor = vec4(vec3(c),1.0);\n        \n    for(float i = 0.0; i < 6.0; i+=1.0)\n    {\n        if((uv.x - r * (2.0/3.0) * cos(radians(i*60.0 + iTime*15.0)) - 0.9) * (uv.x - r * (2.0/3.0) * cos(radians(i*60.0+ iTime*15.0)) - 0.9) + (uv.y - r * (2.0/3.0) * sin(radians(i*60.0+ iTime*15.0)) - 0.5) * (uv.y - r * (2.0/3.0) * sin(radians(i*60.0+ iTime*15.0)) - 0.5) < r*r/9.0)\n            {\n            fragColor.x = 0.5;\n            fragColor.y = 0.5;\n            }\n            \n    }\n    \n    \n    // Output to screen\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}