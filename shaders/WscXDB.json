{
    "Shader": {
        "info": {
            "date": "1572733155",
            "description": "a gateway to infinite universes.",
            "flags": 0,
            "hasliked": 0,
            "id": "WscXDB",
            "likes": 2,
            "name": "portals",
            "published": 3,
            "tags": [
                "raymarch"
            ],
            "usePreview": 0,
            "username": "HiDeF",
            "viewed": 351
        },
        "renderpass": [
            {
                "code": "float map (vec3 p)\n{\n    vec3 q = fract(p) * 2.0 - 1.;\n    \n    float displacement = sin(cos(iTime * 0.25) * p.x) * sin(cos(iTime * 0.25) * p.y) * sin(cos(iTime * 0.25) * p.z) * 0.25;\n\n    return length(q) + displacement - 0.25;\n}\n\n\nfloat trace (vec3 o, vec3 r)\n{\n    float t = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        vec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv = uv * 2.0 - 1.0;\n    \n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 r = normalize(vec3(uv, 1.0));\n    \n    float the = iTime * 0.25;\n    r.xz *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    \n    vec3 o = vec3(0.0, iTime, iTime);\n    \n    float t = trace(o, r);\n    \n    float fog = 1.0 / (1.0 + t * t * 0.1);\n    \n    vec3 fc = vec3(fog);\n\n    // Output to screen\n    fragColor = vec4(fc,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}