{
    "Shader": {
        "info": {
            "date": "1703185466",
            "description": "I followed kishimisu's YouTube tutorial here: https://www.youtube.com/watch?v=f4s1h2YETNY\n\nThe end result has been modified into something original.",
            "flags": 0,
            "hasliked": 0,
            "id": "Mcf3zS",
            "likes": 12,
            "name": "Returning Home",
            "published": 3,
            "tags": [
                "psychedelic"
            ],
            "usePreview": 0,
            "username": "DanielXMoore",
            "viewed": 278
        },
        "renderpass": [
            {
                "code": "const float TAU = 6.28318;\n\nvec3 palette(in float t)\n{\n\n    // vec3 a = vec3(0.138, 0.189, 0.761); vec3 b = vec3(0.448, 0.797, 0.568); vec3 c = vec3(0.591, 1.568, 0.065); vec3 d = vec3(4.347, 2.915, 0.976);\n\n    vec3 a = vec3(0.000, 0.500, 0.500);\n    vec3 b = vec3(2.000, 0.500, 0.490);\n    vec3 c = vec3(2.000, 2.000, 0.500);\n    vec3 d = vec3(0.000, 0.667, 0.500);\n\n    return a + b * cos( TAU * (c * t + d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.);\n    \n    for (float i = 0.; i < 3.; i++) {\n        uv = (fract(6. * uv * pow(0.125, i)) - .5);\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i *.4 + iTime * pow(0.4, i));\n\n        d = sin(d * 8. + iTime) / 8.;\n\n        d = abs(d);\n\n        d = pow(0.01 / d, 3.);\n\n        finalColor += col * d;\n\n    }\n\n    fragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}