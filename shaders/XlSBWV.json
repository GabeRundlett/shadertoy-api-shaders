{
    "Shader": {
        "info": {
            "date": "1517435606",
            "description": "Some sounds.\nSynths can be disabled at Sound tab, row 2.",
            "flags": 8,
            "hasliked": 0,
            "id": "XlSBWV",
            "likes": 6,
            "name": "Amen break",
            "published": 3,
            "tags": [
                "sound",
                "beat",
                "break"
            ],
            "usePreview": 0,
            "username": "mlkn",
            "viewed": 762
        },
        "renderpass": [
            {
                "code": "#define BPM 120.0\n\nfloat beatH16, beatH8, beatH4, beatH2, beat1, beat2, beat4, beat8;\nfloat kickWeight;\nfloat hihatWeight;\nfloat snareWeight;\nfloat crashWeight;\n\nfloat cl(float a)\n{\n\treturn clamp(a, 0.0, 1.0);\n}\n\nfloat triangle(float t) {\n\treturn 1.0 - abs(mod(t, 2.0) - 1.0);\n}\n\nfloat rand(float a)\n{\n\treturn fract(sin(a*87654.321)*54321.123);\n}\n\nfloat hihatClosed(float t)\n{\n    float r = rand(t * 1.42) * cl(1.0-t*8.0) * 2.0;\n    hihatWeight += r;\n\treturn r;\n}\n\nfloat crash(float t)\n{\n\treturn rand(t * 0.42) * cl(1.0-t*1.2) * 4.0;\n}\n\nfloat snare(float t)\n{\n    float osc1 = rand(t) * cl(1.0-pow(t*4.0, 0.95))*2.6;\n    float osc2 = triangle(t * 6.2831852 * 160.0 * 0.125) * 20.0;\n    float fade2 = cl(1.0 - exp(t) * 2.2);\n\treturn osc1 + osc2 * fade2;\n}\n\nfloat kick(float t)\n{\n    float freq = 6.2831852 * 240.0 * 0.125;\n    float osc1 = sin(t * freq);\n    float fade1 = cl(1.0-exp(t)*0.8);\n    float osc2 = triangle(t * freq * 0.5);\n    float fade2 = cl(1.0-exp(t)*0.84);\n\n\treturn osc1 * fade1 * 35.0 + osc2 * fade2 * 40.0;\n}\n\nvoid placeKicks(float t)\n{\n    kickWeight += kick(t);\n}\nvoid placeKicks(float t, float condT, float condLeft, float condRight)\n{\n    if (condT > condLeft && condT < condRight) placeKicks(t);\n}\nvoid placeSnares(float t)\n{\n    snareWeight += snare(t);\n}\nvoid placeSnares(float t, float condT, float condLeft, float condRight)\n{\n    if (condT > condLeft && condT < condRight) placeSnares(t);\n}\n\nvoid playBar1() {\n    placeKicks(beat2, beatH4, 0.0, 1.0);\n    placeKicks(beat4, beatH4, 2.5, 3.0);\n    placeSnares(beatH2 - 1.0);\n    placeSnares(beat4, beatH4, 1.75, 2.0);\n    placeSnares(beat4, beatH4, 2.25, 2.5);\n    placeSnares(beat4, beatH4, 3.75, 4.0);\n\n    hihatClosed(beat2);\n}\nvoid playBar3() {\n    placeKicks(beat2, beatH4, 0.0, 1.0);\n    placeKicks(beat2, beatH4, 2.5, 3.0);\n    placeSnares(beatH2 - 1.0, beatH4, 0.0, 2.0);\n    placeSnares(beat2, beatH4, 3.5, 4.0);\n    placeSnares(beat4, beatH4, 1.75, 2.0);\n    placeSnares(beat4, beatH4, 2.25, 2.5);\n\n    hihatClosed(beat2);\n}\nvoid playBar4() {\n    placeKicks(beat4, beatH4, 0.5, 1.0);\n    placeKicks(beat2, beatH4, 2.5, 3.0);\n    placeSnares(beat4, beatH4, 0.25, 0.5);\n    placeSnares(beat4, beatH4, 1.75, 2.0);\n    placeSnares(beat4, beatH4, 2.25, 2.5);\n    placeSnares(beat2, beatH4, 1.0, 1.5);\n    placeSnares(beat2, beatH4, 3.5, 4.0);\n\n    if (beatH4 > 2.5 && beatH4 < 3.0) {\n        crashWeight += crash(beat2);\n    } else {\n        hihatClosed(beat2);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float t = iTime * BPM / 60.0;\n    beatH16 = fract(t*0.0625)*16.0;\n    beatH8 = fract(t*0.125)*8.0;\n    beatH4 = fract(t*0.25)*4.0;\n\tbeatH2 = fract(t*0.5)*2.0;\n\tbeat1 = fract(t);\n\tbeat2 = fract(t*2.0)*0.5;\n\tbeat4 = fract(t*4.0)*0.25;\n\tbeat8 = fract(t*8.0)*0.125;\n    \n    kickWeight = 0.0;\n    hihatWeight = 0.0;\n    snareWeight = 0.0;\n    crashWeight = 0.0;\n    if (beatH16 < 8.0) playBar1();\n    else if (beatH16 < 12.0) playBar3();\n    else playBar4();\n    \n    kickWeight = clamp(kickWeight, 0.0, 1.0);\n    vec3 col = vec3(0.0, 0.2, 0.2);\n    col += vec3(crashWeight * 1.3);\n    uv = mix(uv, (uv - 0.5) * 0.495 + 0.5, kickWeight);\n    uv = mix(uv, vec2(uv.x, uv.y * (1.0 + rand(uv.x + t) * 0.05) ), hihatWeight);\n    uv = mix(uv, vec2((uv.x - 0.5) * (uv.x - 0.5) + 0.5, uv.y), snareWeight * 0.04);\n\tvec4 tex = texture(iChannel0, uv);\n    fragColor = vec4(col + tex.rgb, 1.0);\n    fragColor = mix(fragColor, fragColor * tex, crashWeight);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define BPM 120.0\n#define SYNTHS true\n\nvec2 stereo;\nfloat beatH16, beatH8, beatH4, beatH2, beat1, beat2, beat4, beat8;\n\nfloat cl(float a)\n{\n\treturn clamp(a, 0.0, 1.0);\n}\n\nfloat triangle(float t) {\n\treturn 1.0 - abs(mod(t, 2.0) - 1.0);\n}\n\nfloat rand(float a)\n{\n\treturn fract(sin(a*87654.321)*54321.123);\n}\n\nfloat hihatClosed(float t)\n{\n\treturn rand(t * 1.42) * cl(1.0-t*8.0) * 2.0;\n}\n\nfloat crash(float t)\n{\n\treturn rand(t * 0.42) * cl(1.0-t*1.2) * 4.0;\n}\n\nfloat snare(float t)\n{\n    float osc1 = rand(t) * cl(1.0-pow(t*4.0, 0.95))*2.6;\n    float osc2 = triangle(t * 6.2831852 * 160.0 * 0.125) * 20.0;\n    float fade2 = cl(1.0 - exp(t) * 2.2);\n\treturn osc1 + osc2 * fade2;\n}\n\nfloat kick(float t)\n{\n    float freq = 6.2831852 * 240.0 * 0.125;\n    float osc1 = sin(t * freq);\n    float fade1 = cl(1.0-exp(t)*0.8);\n    float osc2 = triangle(t * freq * 0.5);\n    float fade2 = cl(1.0-exp(t)*0.84);\n\n\treturn osc1 * fade1 * 35.0 + osc2 * fade2 * 40.0;\n}\n\nvoid placeKicks(float t)\n{\n    stereo += vec2(kick(t));\n}\nvoid placeKicks(float t, float condT, float condLeft, float condRight)\n{\n    if (condT > condLeft && condT < condRight) placeKicks(t);\n}\nvoid placeSnares(float t)\n{\n    stereo += vec2(snare(t)) * vec2(1.0, 0.7);\n}\nvoid placeSnares(float t, float condT, float condLeft, float condRight)\n{\n    if (condT > condLeft && condT < condRight) placeSnares(t);\n}\n\nvoid placeSynths(float t, float synth)\n{\n    if (synth < 0.5) {\n        float osc = triangle(t * 6.2831852 * 200.0 * 0.125) * 4.5;\n    \tfloat fade = cl(1.0 + pow(t, 216.5));\n        stereo += vec2(osc * fade);\n    } else if (synth < 1.5) {\n        float osc = triangle(t * 6.2831852 * 100.0 * 0.125) * 30.0;\n    \tfloat fade = cl(1.0-exp(t)* 0.4);\n        stereo += vec2(osc * fade);\n    } else {\n        float osc = sin(t * 6.2831852 * 1200.0 * 0.125) * 2.0;\n    \tfloat fade = cl(1.0 - t * 322.0);\n        float osc3 = triangle(t * 600.0);\n        stereo += vec2(osc * fade + osc3 * (t * t + t * 0.5) * 0.3);\n    }\n}\nvoid placeSynths(float t, float condT, float condLeft, float condRight, float synth)\n{\n    if (condT > condLeft && condT < condRight) placeSynths(t, synth);\n}\n\nvoid playBar1() {\n    placeKicks(beat2, beatH4, 0.0, 1.0);\n    placeKicks(beat4, beatH4, 2.5, 3.0);\n    placeSnares(beatH2 - 1.0);\n    placeSnares(beat4, beatH4, 1.75, 2.0);\n    placeSnares(beat4, beatH4, 2.25, 2.5);\n    placeSnares(beat4, beatH4, 3.75, 4.0);\n    \n    if (SYNTHS) {\n        placeSynths(beat4, beatH4, 1.85, 2.25, 0.0);\n    \tplaceSynths(beat4, beatH4, 2.25, 2.5, 1.0);\n    \tplaceSynths(beatH2 - 0.6, 2.0);\n    }\n\n    stereo += vec2(hihatClosed(beat2)) * vec2(0.7, 1.0);\n}\nvoid playBar3() {\n    placeKicks(beat2, beatH4, 0.0, 1.0);\n    placeKicks(beat2, beatH4, 2.5, 3.0);\n    placeSnares(beatH2 - 1.0, beatH4, 0.0, 2.0);\n    placeSnares(beat2, beatH4, 3.5, 4.0);\n    placeSnares(beat4, beatH4, 1.75, 2.0);\n    placeSnares(beat4, beatH4, 2.25, 2.5);\n    \n    if (SYNTHS) {\n    \tplaceSynths(beat4, beatH4, 1.85, 2.25, 0.0);\n    \tplaceSynths(beat4, beatH4, 2.25, 2.5, 1.0);\n    }\n\n    stereo += vec2(hihatClosed(beat2)) * vec2(0.7, 1.0);\n}\nvoid playBar4() {\n    placeKicks(beat4, beatH4, 0.5, 1.0);\n    placeKicks(beat2, beatH4, 2.5, 3.0);\n    placeSnares(beat4, beatH4, 0.25, 0.5);\n    placeSnares(beat4, beatH4, 1.75, 2.0);\n    placeSnares(beat4, beatH4, 2.25, 2.5);\n    placeSnares(beat2, beatH4, 1.0, 1.5);\n    placeSnares(beat2, beatH4, 3.5, 4.0);\n    \n    if (SYNTHS) {\n        placeSynths(beat4, beatH4, 1.0, 1.3, 1.0);\n    \tplaceSynths(beat4, beatH4, 1.8, 2.25, 1.0);\n    \tplaceSynths(beat4, beatH4, 2.25, 2.5, 0.0);\n    }\n\n    if (beatH4 > 2.5 && beatH4 < 3.0) {\n        stereo += vec2(crash(beat2)) * vec2(0.8, 1.0);\n    } else {\n        stereo += vec2(hihatClosed(beat2)) * vec2(0.65, 1.0);\n    }\n   \n}\n\nvec2 mainSound( in int samp,float time)\n{\n    float t = time * BPM / 60.0;\n    beatH16 = fract(t*0.0625)*16.0;\n    beatH8 = fract(t*0.125)*8.0;\n    beatH4 = fract(t*0.25)*4.0;\n\tbeatH2 = fract(t*0.5)*2.0;\n\tbeat1 = fract(t);\n\tbeat2 = fract(t*2.0)*0.5;\n\tbeat4 = fract(t*4.0)*0.25;\n\tbeat8 = fract(t*8.0)*0.125;\n    stereo = vec2(0.0, 0.0);\n    if (beatH16 < 8.0) playBar1();\n    else if (beatH16 < 12.0) playBar3();\n    else playBar4();\n\n\treturn stereo * 0.2;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}