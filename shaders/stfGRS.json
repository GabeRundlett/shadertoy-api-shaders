{
    "Shader": {
        "info": {
            "date": "1622291314",
            "description": "Here is a shader demonstrating the concept of transforming from cartesian coordinates to isometric coordinates.",
            "flags": 0,
            "hasliked": 0,
            "id": "stfGRS",
            "likes": 2,
            "name": "2D Isometric Projection",
            "published": 3,
            "tags": [
                "projection",
                "isometric",
                "matrices"
            ],
            "usePreview": 0,
            "username": "Tech_",
            "viewed": 337
        },
        "renderpass": [
            {
                "code": "\nconst mat2 isometricMat = mat2(vec2(-0.5, 0.5), vec2(1.0));\nconst mat2 isometricMatInv = inverse(isometricMat);\n\nvec2 CartesianToIsometric(in vec2 cartesian) {\n    return isometricMat * cartesian;\n}\n\nvec2 IsometricToCartesian(in vec2 isometric) {\n   return isometricMatInv * isometric;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= 10.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    uv = mix(uv, CartesianToIsometric(uv), cos(iTime) * 0.5 + 0.5);\n\n    vec3 col;\n    col += step(fract(uv.x), 0.03);\n    col += step(fract(uv.y), 0.03);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}