{
    "Shader": {
        "info": {
            "date": "1643306353",
            "description": "Mouse control.\nVisualize the MIPmap LOD footprint of 1 pixel at mouse location (impulse response).\nCubeMap offers power-of-2 1024x1024 faces, so MIPmap is not buggy as in other buffers.\nBut: \n- only half floats\n- MaxLOD is bilinearly interpolated\n- no vfl",
            "flags": 32,
            "hasliked": 0,
            "id": "fsSyDz",
            "likes": 8,
            "name": "MIPmap impulse response (via cub",
            "published": 3,
            "tags": [
                "cubemap",
                "mipmap",
                "footprint"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 314
        },
        "renderpass": [
            {
                "code": "#define hue(v)  vec4( .6 + .6 * cos( 6.3*(v)  + vec3(0,23,21)  ) ,1 )\n\n\nvoid mainImage( out vec4 O, vec2 u ) \n{\n    vec2  U = ( 2.*u - R ) / R.y;\n    O-=O;\n    for( float l=0. ; l<=10.; l++ )   \n      O += (1.-O.a) * float ( M(U,l).w > 0. ) * hue(l/11.);   \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "cubemap",
                        "id": 41,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a//media/previz/cubemap00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainCubemap( out vec4 O, vec2 U, vec3 o, vec3 D )\n{\n    O-=O;\n    if ( D.z < max(abs(D.x),abs(D.y)) ) return;\n    U.y = 1024. - U.y;              // like buffA, but 1024 x 1024.\n    \n    vec2 M = length(iMouse.xy)>10. \n               ? iMouse.xy*1024./texelFetch(iChannel0,ivec2(0),0).xy\n               : 512.+512.*cos(iTime*vec2(.31,1));\n    O = vec4( 0,0,0, floor(U) == floor(M)  ); \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Cube A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 41
                    }
                ],
                "type": "cubemap"
            },
            {
                "code": "#define R  iResolution.xy\n#define M(U,l)   textureLod( iChannel1, vec3(U,1), l  )   // access density map\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "// just to carry iResolution to CubeMap\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O.xyz = iResolution;\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}