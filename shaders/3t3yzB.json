{
    "Shader": {
        "info": {
            "date": "1609316780",
            "description": "rings",
            "flags": 0,
            "hasliked": 0,
            "id": "3t3yzB",
            "likes": 4,
            "name": "rot rings",
            "published": 3,
            "tags": [
                "3d"
            ],
            "usePreview": 0,
            "username": "bigdra50",
            "viewed": 266
        },
        "renderpass": [
            {
                "code": "\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n#define resolution iResolution \n#define  time iTime\n#define mouse iMouse \n\n\n\n#define rot(a) mat2(cos(a), sin(a), -sin(a), cos(a))\n#define EPS 0.0001\n\nvec3 lightDir = normalize(vec3(1.,1., 1));\n\nfloat dRing(vec3 p, float exR, float inR, float thick){\n\tfloat sdf2d = abs(length(p.xy)-exR)-inR;\n\tfloat d = abs(p.z)-thick;\n\treturn max(sdf2d, d);\n}\nfloat map(vec3 p){\n\tvec3 q=p,r = p;\n\tp.xy *= rot(time*.5);\n\tp.xz *= rot(time*.3);\n\tfloat ring1 = dRing(p, .8, .09, .1);\n\tq.xy *= rot(time*-1.3);\n\tq.xz *= rot(time*-1.);\n\tfloat ring2 = dRing(q, .62, .07, .1);\n\tr.yz *= rot(time*2.);\n\tr.xz *= rot(time*-2.);\n\tfloat ring3 = dRing(r, .47, .06, .1);\n\treturn min(ring1, min(ring2, ring3));\n}\n\nvec3 getNormal(vec3 p){\n\treturn normalize(vec3(\n\t\tmap(p)-map(vec3(p.x-EPS, p.yz)),\n\t\tmap(p)-map(vec3(p.x, p.y-EPS, p.z)),\n\t\tmap(p)-map(vec3(p.xy, p.z-EPS))\n\t\t));\n}\n\t\n\nvec4 render(vec2 coord ) {\n\n\tvec2 uv = (gl_FragCoord.xy*2.-resolution.xy)/min(resolution.x, resolution.y);\n\tvec3 col = vec3(.1);\n\tvec3 ro = vec3(0.,0,10.);\n\tvec3 rd = normalize(vec3(uv, 0)-ro);\n\tvec3 cur = ro;\n\n\tfor(int i = 0; i <99;i++){\n\t\tfloat d = map(cur);\n\t\tif(d < EPS){\n\t\t\tvec3 normal = getNormal(cur);\n\t\t\tcol = vec3(.6, .68, .8);\n\t\t\tcol+= dot(normal, lightDir)+vec3(.1);\n\t\t\tbreak;\n\t\t}\n\t\tcur += rd*d;\n\t}\n\n\treturn vec4( col, 1.0 );\n\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    fragColor = render(fragCoord);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}