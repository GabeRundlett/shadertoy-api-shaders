{
    "Shader": {
        "info": {
            "date": "1708035127",
            "description": "// Times Tables, Mandelbrot and the Heart of Mathematics\n// Based on [URL]https://www.youtube.com/watch?v=qhbuKbxJsk8[/URL]\n",
            "flags": 0,
            "hasliked": 0,
            "id": "l3fGWl",
            "likes": 7,
            "name": "Times Tables, epicycloid curves",
            "published": 3,
            "tags": [
                "curve",
                "epicycloid",
                "xtables",
                "chordes"
            ],
            "usePreview": 0,
            "username": "tsakal",
            "viewed": 112
        },
        "renderpass": [
            {
                "code": "// Times Tables, Mandelbrot and the Heart of Mathematics\n// Based on https://www.youtube.com/watch?v=qhbuKbxJsk8\nconst float PI = acos(-1.),\n  TAU = PI*2.;\nconst vec3 RED    = vec3(255.,  0.,    0.)/255.,\n  OLIVE  = vec3(128., 128.,   0.)/255.,\n  NAVY   = vec3(  0.,   0., 128.)/255.,\n  PAPER  = vec3(245., 245., 220.)/255.;\nconst float SCALE = 1.;\nfloat T, lTHICK = 1., RAD = SCALE * .98, AR;\n//========================\nfloat line(vec2 p, vec2 a, vec2 b) { \n    p -= a, b -= a;\n    float h = clamp(dot(p, b) / dot(b, b), 0., 1.);\n    return length(p - b * h);\n}\n//========================\nfloat sdCircle( vec2 p, float r ) {\n    return length(p) - r;\n}\n//========================\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (2.0*fragCoord.xy - iResolution.xy) / iResolution.y;\n    AR = iResolution.x / iResolution.y;\n\tif (AR<1.) RAD = AR * .98;\n\tlTHICK *= length(fwidth(p));\n    p *= SCALE;\n    p.x *= -1.;\n    T = iTime*.75;\n    vec3 col = 0.5 + 0.5*cos(T+p.xyx+vec3(.5,1.,1.5));\n    float d = sdCircle(p, RAD);\n    col = mix( col, PAPER, smoothstep( lTHICK, 0., (d) ) ); // a circle\n    // d = sdCircle(p, RAD);\n    // col = mix( col, OLIVE, smoothstep( lTHICK, 0., abs(d) ) ); // a circle\n    float rad = 2.*lTHICK,\n\t\tpCount = 2.+floor((TAU/(2.5*rad))*(.5*(1.+sin(T/3.)))),\n\t\tstep = TAU/pCount;\n    vec2 A = RAD*vec2(cos(0.), sin(0.)), B;\n    for (float t, n=0.; n<pCount; n++) {\n\t\t// divide circle by pCount points\n        t = n*step;\n        A = RAD*vec2(cos(t), sin(t));\n        d = sdCircle(p-A, rad);\n        col = mix( col, RED, smoothstep( lTHICK, 0., d ) );\n    }\n\tfloat multiplyBy = 2.+floor(5.*(.5*(1.+sin(T/24.)))); \n    float a=0., b = 0.;\n    for (float tA, tB, n=0.; n<=pCount; n++) {\n\t\t// for each division point (index n) make a chorde to its multiply by n point (index n * multiplyBy)\n        tA = a*step;\n        A = RAD*vec2(cos(tA), sin(tA));\n        tB = b*step;\n        B = RAD*vec2(cos(tB), sin(tB));\n        d = line(p, A, B);\n        col = mix( col, NAVY, smoothstep( lTHICK, 0., d ) );        \n        a = n;\n        b = a * multiplyBy;\n    }\n    col = pow(col, vec3(1./2.2));\n    fragColor = vec4(col, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}