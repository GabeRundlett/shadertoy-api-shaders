{
    "Shader": {
        "info": {
            "date": "1611053615",
            "description": "left click creates a blue circle of [clickRadius]\n\nWhle holding down left mouse outside the blue circle, it counts as a Drag (green circle gets filled)\n\nIf you release the mouse button inside the blue circle, it counts as a onClick (orange circle fills)\n",
            "flags": 32,
            "hasliked": 0,
            "id": "3lKcWD",
            "likes": 2,
            "name": "onRelease() click and dragRadius",
            "published": 3,
            "tags": [
                "mouseclick",
                "mousedrag",
                "onrelease",
                "diegeticui",
                "spiel",
                "steeringwheelplay",
                "onclick"
            ],
            "usePreview": 0,
            "username": "ollj",
            "viewed": 521
        },
        "renderpass": [
            {
                "code": "//modify\n#define clickRadius .05\n\n//constant\n#define iR iResolution\n#define iM iMouse\n#define dd(a) dot(a,a)\nvec4 tf(float i){return texture(iChannel0,vec2(i+.5,.5)/ iChannelResolution[0].xy,-100.0);}\n\n//onRelease of MainImage must be different\nbool onRelease(){return (tf(0.).w>0.);}\n\nvec2 fra(vec2 u\n){u=u/iR.xy\n ;u=u*2.-1.\n ;u.x*=iR.x/iR.y\n ;return u;}\n\n\n\nvoid mainImage(out vec4 c,vec2 u\n){bool released=false\n ;c=vec4(0);\n ;c=tf(2.)\n ;u=fra(u)\n ;vec2 m=fra(iM.xy)     //mouseNow\n ;vec2 n=fra(abs(iM.zw))//mouse where clicking started\n\n ;c.y=length(u-m)-.2//green mouse circle (to indicate onHoldDrag     event)\n ;c.z=length(u-n)-clickRadius//blue circle shows clickRadius\n ;if (length(m-n)<clickRadius\n ){//indicate noDragCase by making green circle a hollow ring\n  ;c.y=abs(c.y)-.01\n ;if(onRelease())released=true ;}\n ;c.x=length(u)-.3//default empty red circle  \n ;if(!released)c.x=abs(c.x)-.01//make redcircle hollow ring (indicate onReleaseClick event)\n\n ;//c.x=abs(c.x)-.01//ring thickness\n ;float s=.01//sharpness\n ;c.xyz=smoothstep(s,-s,c.xyz)\n ;c.y+=c.x*.7//red to orange (colorblind mode)\n ;}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec4 tf(float i){return texture(iChannel0,vec2(i+.5,.5)/ iChannelResolution[0].xy,-100.0);}\n\n\n//to get an onRelease event, we must buffer iMouse.z of the previous frame\n//but we cannot put THIS onRelease() function into the imageTab\n//to get onRelease() state to the imageTab, we must spend another Buffer bool\nbool onRelease(\n){if(tf(0.).z>0.&&iMouse.z<0.)return true   //oh man, it is still being done in order, so it fails in Image\n ;return false;}\n\nvoid mainImage( out vec4 c, in vec2 u//store state in (tf(0.).w\n){if(floor(u)==vec2(0)\n ){if(onRelease())c=vec4(0,0,iMouse.z,1);else c=vec4(0,0,iMouse.z,0);}\n ;}//else {if(onRelease())c=vec4(0,0,0,1);else c=vec4(0);}}\n\n/*\nvoid mainImage( out vec4 c, in vec2 u //store state in all .w except (tf(0.).w\n){if(floor(u)==vec2(0)\n ){c.z=iMouse.z\n  ;//if(onRelease())c=vec4(0,0,iMouse.z,1);else c=vec4(0,0,iMouse.z,0);}\n ;}else {if(onRelease())c=vec4(0,0,0,1);else c=vec4(0);}}\n */",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "/*\n\nleft click creates a blue circle of [clickRadius]\n\nWhle holding down left mouse outside the blue circle\n,it counts as a Drag (green circle gets filled)\n\nIf you release the mouse button inside the blue circle\n,it counts as a onClick (orange circle fills)\n\n\nsadly this needs 1 bits of bufferA, to be readable in MainImage.\nis there a simpler way?\n\n<-\n<-\n<-\n\nto combine mouse controls of\nhttps://www.shadertoy.com/view/wl3yDs   (drag rotation momentum)\nhttps://www.shadertoy.com/view/ttycDW   (click navigation)\nhttps://www.shadertoy.com/view/Wl3cz8   (drag editor (non-Diegetic ui is bad here))\n\nI want to be able to drag the mouse\n,to look around or drag objects around (depending on states)\n\nI want to be able to click inWorld objects (or click to to an autopilot-target)\n,to change states and trigger onClick events\n\nthe trick to do both is to change the onClick() event to an onRelease() Event\nand to have a steering-wheel-game threshold of mouseMovement \nto differentiate [click]ing from [drag]ing.\n\nicdeally, your 3d-click-range is rather short (while your3d-drag-range is very long)\n,so that, if you do not hit any object within a short zFar of a click-hitscan\n, you instead MOVE towards that place in space in autopilot as in https://www.shadertoy.com/view/ttycDW\n\nideally, you click any obkject\n, and it creates an (exclusive) in-world object, that acts as its context-menu.\n. that contextMenu can also be dragable or rotateable handles.\n\n*/",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}