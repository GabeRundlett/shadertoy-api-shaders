{
    "Shader": {
        "info": {
            "date": "1601343693",
            "description": "A little experiment with marching through objects",
            "flags": 0,
            "hasliked": 0,
            "id": "Wsjfzc",
            "likes": 14,
            "name": "Jelly box world",
            "published": 3,
            "tags": [
                "3d",
                "volume"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 493
        },
        "renderpass": [
            {
                "code": "#define R iResolution.xy\n\nfloat box( vec3 p, vec3 b ){\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat map(vec3 rp){\n    vec3 id = floor(rp/7.);\n    \n    float altz = mod(id.z, 2.);\n    float altx = mod(id.x, 2.);\n   \n    if(altz == 0.)\n     \trp.y += iTime;   \n    else\n        rp.y -= iTime;   \n    \n    if(altx == 0.)\n     \trp.x += iTime;   \n    else\n        rp.x -= iTime;   \n    \n    rp = mod(rp, vec3(7.))-vec3(7.)*0.5;\n    \n    return box(rp, vec3(1.))-.2;\n}\n\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    vec2 uv = vec2(u.xy - 0.5*R.xy)/R.y;\n    \n    vec3 rd = normalize(vec3(uv, 0.8));\n    \n    vec3 ro = vec3(0.);\n    ro.z+=iTime*2.;\n\n    vec3 col = vec3(0);\n    \n    float t = 0., d = 0., td = 0.;   \n    \n    const float h = 0.1;\n    \n    vec3 p = vec3(0);\n    \n    for(int i = 0; i < 100; i++){\n        p = ro + rd*t;\n    \td = abs(map(p)); \t   \n        \n        d = max(d, 0.003);\n        \n        if(d < h){\n            float ld = h - d;\n        \tfloat w = (1. - td)*ld;\t\n            td += w;\n            \n        }\n        col += 0.5 + 0.5*cos(vec3(0.5, 1., 0.1)*(t+ro.z)+vec3(1., 0., 3.) );\n        \n        t += d*.7;\n        if(t > 45.){\n            t = 45.;\n            break;\n        }\n        \n    }\n    \n    \n    col*=0.012;\n    col = pow(col, vec3(5));\n    col = 1.-exp(-col*2.);\n    \n    col *= 1.-abs(uv.y*1.2);\n    \n    f = vec4(sqrt(clamp(col, .0, 1.)), 1.);\n    \n}\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}