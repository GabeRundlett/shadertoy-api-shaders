{
    "Shader": {
        "info": {
            "date": "1513859866",
            "description": "Circle Square Pattern",
            "flags": 0,
            "hasliked": 0,
            "id": "MtffWl",
            "likes": 9,
            "name": "Circle Square Pattern",
            "published": 3,
            "tags": [
                "circlesquarepattern"
            ],
            "usePreview": 0,
            "username": "PaperColor",
            "viewed": 1307
        },
        "renderpass": [
            {
                "code": "//I write this in Unity3d first,then implement here,:)\n#define float2 vec2\n#define float3 vec4\n#define float4 vec4\n#define frac fract\n\n#define speed 0.618\n#define lineNumber 7.0\n#define lineWidth 0.1\n\n#define circlePatternColor float4(1.0,0.0,0.0,1.0)\n#define squarePatternColor float4(0.2,1.0,0.6,0.0)\n//#define backgroundColor float4(0.3,0.8,0.8,1.0)\n#define backgroundColor float4(0.0,0.0,0.0,1.0)\n\nfloat lerp(float a,float b,float v)\n{\n\t//clamp to 0 and 1\n\tif(v>1.0) v=1.0;\n\telse if(v<0.0) v=0.0;\n\treturn a*(1.0-v)+b*v;\n}\n\nvec4 lerp(vec4 a,vec4 b,float v)\n{\n\tfloat red = lerp(a.r,b.r,v);\n\tfloat green = lerp(a.g,b.g,v);\n\tfloat blue = lerp(a.b,b.b,v);\n\tfloat alpha = lerp(a.a,b.a,v);\n\treturn vec4(red,green,blue,alpha);\n}\n\nbool IsInRange(float value,float pos,float width)\n{\n\treturn (value>= pos) && (value<= pos+width);\n}\n\nfloat SquarePattern(float2 uv,float pos,float width)\n{\n    uv = uv*2.0 - 1.0;\n\tuv = abs(uv);\n\t//horizontal\n\tbool h = IsInRange(uv.x,pos,width) && (uv.y<pos+width);\n\t//vertical\n\tbool v= IsInRange(uv.y,pos,width)&&(uv.x<pos+width);\n\n\tif(h||v) return 1.0;\n    return 0.0;\n}\n\nfloat CirclePattern(float2 uv,float pos,float width)\n{\n\tuv = uv*2.0 - 1.0;\n\tfloat dis = length(uv);\n\tbool b= IsInRange(dis,pos,width);\n\tif(b) return 1.0;\n\treturn 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;    \n    uv.x*=iResolution.x/iResolution.y; \n    uv.x -= 0.35;\n    \n\tfloat hz = iTime*0.5*speed;\n    \n\t\t\t \n\tfloat circlePatternValue =0.0;\n\tfloat squarePatternValue =0.0;\t\t   \n\n\tfor(float index=0.0;index<lineNumber;index+=1.0)\n\t{\n\t\tsquarePatternValue += SquarePattern(uv,frac(hz + index/lineNumber)*2.0,lineWidth);\n\t}\n\n\tfor(float index=0.0;index<lineNumber;index+=1.0)\n\t{\n\t\tcirclePatternValue += CirclePattern(uv,frac(hz + index/lineNumber)*2.0,lineWidth);\n\t}\n\n\tfloat4 finalSquareColor = squarePatternColor * squarePatternValue;\n\tfloat4 finalCircleColor = circlePatternColor * circlePatternValue;\n\n\n\tfloat4 finalPatternColor = lerp(finalSquareColor,finalCircleColor,0.618)*1.5; \n    \n    float plus = circlePatternValue+squarePatternValue;\n\n    float mul = circlePatternValue*squarePatternValue;\n    \n    float sub = circlePatternValue-squarePatternValue;\n    \n    float div = circlePatternValue/squarePatternValue;\n    \n    //try different operators\n    fragColor = lerp(backgroundColor,finalPatternColor,plus);\n    //fragColor = lerp(backgroundColor,finalPatternColor,mul);\n    //fragColor = lerp(backgroundColor,finalPatternColor,sub);\n    //fragColor = lerp(backgroundColor,finalPatternColor,div);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}