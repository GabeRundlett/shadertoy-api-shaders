{
    "Shader": {
        "info": {
            "date": "1593505015",
            "description": "antialiasing, undistorted dots, golfing 643 chars [url]https://shadertoy.com/view/wtlyDs[/url]\n",
            "flags": 0,
            "hasliked": 0,
            "id": "ttlcDs",
            "likes": 5,
            "name": "Sinusoids Wave 2D golf+AA+undist",
            "published": 3,
            "tags": [
                "2tweets",
                "trochoid",
                "golf",
                "gerstner",
                "sinusoidswave"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 393
        },
        "renderpass": [
            {
                "code": "// antialiasing, undistorted dots, golfing https://shadertoy.com/view/wtlyDs\n\n\n// 199 chars -2 by Fab -4 by coyote\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2 r = iResolution.yy*.1,\n         U = u*5. + u.y* cos( iTime + u.x/r*.56 + 11.*O++.xw );\n    O -= .1*(  min( 35.5*r - U , 5. )\n             + min(5.*length( inverse(mat2(dFdx(U),dFdy(U))) * (U-round(U/r)*r) )\n                   -r*.2 , 5.)  ).y;\n}\n/*\n\n\n// 205 chars  -6 by coyote  -1 by Fab\n\n#define mainImage(O,u)                                                   \\\n    vec2 r = iResolution.yy*.1, U = u/r;                                 \\\n    U = U*5. + U.y* cos( iTime + U.x*.56 + 11.*O.xw );                   \\\n    O -=   min( (35.5-U.y)*r.x*.1, .5 )                                  \\\n         + min(.5*length((U-round(U)) * inverse(transpose(mat2(dFdx(U),dFdy(U))))) \\\n                -r.x*.02, .5) - 1.                                      /*\n\n\n\n\n\n// 212 chars  -9 by Fabrice\n\n#define mainImage(O,u)                                                    \\\n    vec2 R = iResolution.xy*.1, U = u/R.y;                                \\\n    U = U*5. + U.y* cos( iTime + U.x*.56 + 11.*O.xw );                    \\\n    U = max( vec4( (U-35.5)*R/5.,                                         \\\n                    R/25. - length( ( U - round(U) )                      \\\n                                   * inverse(transpose(mat2(dFdx(U),dFdy(U)) )) ) \\\n                 )*.5+.5 , 0. ).yw;                                       \\\n    O += U.x+U.y                                                         /*\n\n\n\n\n\n\n// --- 221 chars -7 by iapafoto -1 by Fab\n\n#define S(v) smoothstep(-1.,1., v).y//\n#define mainImage(O,u)                                          \\\n    vec2 R = iResolution.xy*.1, U = u/R.y;                      \\\n    U = U*5. + U.y* cos( iTime + U.x*.56 + vec2(0,11) );        \\\n    O += S( (U-35.5)*R/5. )                                     \\\n      +  S( R/25. - length( ( U - round(U) )                    \\\n                           * inverse(transpose(mat2(dFdx(U),dFdy(U)) )) ) )  /*\n//          same length:   * inverse(mat2(vec4(dFdx(U),dFdy(U)).xzyw )) ) )  /*\n\n\n\n\n\n// --- 229 chars\n\n#define S(v) smoothstep(-1.,1., v)                               //\n#define mainImage(O,u)                                            \\\n    vec2 R = iResolution.xy, U = u/R.y;                           \\\n    U = U*50. + U.y*10.* cos( iTime + U.x*5.6+vec2(0,11) );       \\\n    O += S( (U.y - 35.5)*R.y/50. )                                \\\n      +  S( R.y/250. - length(  ( U - round(U) )                  \\\n                               * inverse(transpose(mat2(dFdx(U),dFdy(U)))) ) ) /*\n\n\n\n\n\n// --- +21 ch: variant with analytical derivatives:\n\n#define S(v) smoothstep(-1.,1., v)                               //\n#define mainImage(O,u)                                            \\\n    vec2 R = iResolution.xy, V = u/R.y,                           \\\n         C = 10.*cos( iTime + V.x*5.6+vec2(0,11) ),               \\\n    U = V*50. + V.y*C;                                            \\\n    O += S( (U.y - 35.5)*R.y/50. )                                \\\n      +  S( R.y/250. - length(  ( U - round(U) )                  \\\n                               * inverse(mat2( 50.-V.y*5.6*C.y, C.x, V.y*5.6*C.x, 50.+C.y )  / R.y) ) ) /*\n               // is: mat2( 5.+C.y, -C.x, -.56*V.y*C.x, 5.-V.y*.56*C.y )  * R.y/(25.+5.*C.y-.56*V.y*(1.+5.*C.y)))  )\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}