{
    "Shader": {
        "info": {
            "date": "1696699345",
            "description": "This is the first shader I made. I hope, you like it!",
            "flags": 0,
            "hasliked": 0,
            "id": "msVyW3",
            "likes": 0,
            "name": "Wallpalump",
            "published": 3,
            "tags": [
                "experiment",
                "shader",
                "first"
            ],
            "usePreview": 0,
            "username": "Spueli",
            "viewed": 138
        },
        "renderpass": [
            {
                "code": "float possin(float val) {\n    return sin(val) / 2. + 0.5;\n}\n\n\nfloat poscos(float val) {\n    return cos(val) / 2. + 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv0 = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\n    float pi0 = 0.9;\n    uv0 *= pi0;\n\n    vec2 uv = uv0;\n\n    vec3 color;\n    float myTime = iTime / 1.;\n\n    float closeness = 30.;\n\n    uv.y += sin(myTime) * pi0 / closeness;\n    uv.x += cos(myTime) * pi0 / closeness;\n    for (float i = 0.0; i < 2.0; i++) {\n        uv = fract(uv) * 2. - 1.;\n\n        color.z = length(uv);\n\n        color.z = smoothstep(0.5, 1., color.z);\n        color.z = 0.1 / color.z;\n\n        if (abs(uv.x) + abs(uv.y) < 0.1) {\n            color.z = 0.0;\n        }\n    }\n\n    uv = uv0;\n    uv.y -= sin(myTime) * pi0 / closeness;\n    uv.x -= cos(myTime) * pi0 / closeness;\n    for (float i = 0.0; i < 2.0; i++) {\n        uv = fract(uv) * 2. - 1.;\n\n        color.x = length(uv);\n\n        color.x = smoothstep(0.5, 1., color.x);\n        color.x = 0.1 / color.x;\n\n\n        if (length(uv) < 0.1) {\n            color.x = 0.0;\n        }\n    }\n\n    uv = uv0;\n\n    uv.y += sin(-myTime) * pi0 / closeness;\n    uv.x -= myTime / 10.;\n\n    uv.x += sin(-myTime) * pi0 / closeness;\n    uv.y += myTime / 10.;\n    for (float i = 0.0; i < 2.0; i++) {\n        uv = fract(uv) * 2. - 1.;\n        uv *= possin(myTime) / 7. + 0.9;\n\n        if (i < 1. || abs(uv.x) + abs(uv.y) > 0.7) {\n            continue;\n        }\n\n        color = 1.0 - color;\n        color = 1. / color;\n\n        color /= 5.;\n\n        if (abs(uv.x) > 0.3 || abs(uv.y) > 0.3) {\n            continue;\n        }\n\n        float cap = 0.5;\n        float av = (color.x + color.y) / round((abs(uv.x) + abs(uv.y)) * 10.) / 10.;\n\n        if (av > cap) {\n            cap = av;\n        }\n\n        color.x = av;\n        color.y = av;\n        color.xy *= 5.;\n\n        color.x = color.x > cap ? cap : color.x;\n        color.y = color.y > cap ? cap : color.y;\n    }\n    fragColor = vec4(color, 0.1);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}