{
    "Shader": {
        "info": {
            "date": "1494441600",
            "description": "Visualization of functions of a complex variable. Click and hold to see each cell in full size!\nidentical to \nhttps://www.shadertoy.com/view/Mt2GDV\nwith very minor improvements.",
            "flags": 0,
            "hasliked": 0,
            "id": "ls2cDt",
            "likes": 25,
            "name": "Domain coloring 2",
            "published": 3,
            "tags": [
                "2d",
                "grid",
                "domain",
                "color",
                "complex",
                "tiling",
                "transformation"
            ],
            "usePreview": 0,
            "username": "ollj",
            "viewed": 1035
        },
        "renderpass": [
            {
                "code": "//parent=https://www.shadertoy.com/view/Mt2GDV\n//just slightly crunched with minot optimizations\n\n#define pi 3.14159265359\n//#define E  2.71828182845 //exists as y=exp(1.);\n#define dd(a) dot(a,a)\n//complex number space transforms.\nvec2 sinz(vec2 c){vec2 d=vec2(exp(c.y),exp(-c.y));\n return vec2(sin(c.x)*(d.x+d.y)*.5,cos(c.x)*(d.x-d.y)*.5);}\nvec2 cosz(vec2 c){vec2 d=vec2(exp(c.y),exp(-c.y));\n return vec2(cos(c.x)*(d.x+d.y)*.5,-sin(c.x)*(d.x-d.y)*.5);}\nvec2 tanz(vec2 c){vec2 d=vec2(exp(c.y),exp(-c.y));\n float e=cos(c.x),s=(d.x-d.y)*.5;\n return vec2(sin(c.x)*e, s*(d.x+d.y)*.5)/(e*e+s*s);}\nvec2 logz(vec2 c){return vec2(log(length(c)),atan(c.y, c.x));}\nvec2 sqrtz(vec2 c){float n=c.x+length(c);\n return vec2(n,c.y)/sqrt(2.*n);}\nvec2 exp2z(vec2 c){vec2 d=c*c;return vec2(d.x-d.y,2.*c.x*c.y);}\nvec2 epowz(vec2 c){return vec2(cos(c.y),sin(c.y))*exp(c.x);}\nvec2 mulz(vec2 a,vec2 b){return a*mat2(b.x,-b.y,b.yx);}\nvec2 divz(vec2 n,vec2 d){return n*mat2(d,-d.y,d.x)/dd(d);}\nvec2 invz(vec2 c){return vec2(c.x,-c.y)/dd(c);}\n//by David Bargo-davidbargo/2015\n//License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvec2 func(float i,vec2 c){vec2 r;\n      if(i==1.)r=sinz(c);\n else if(i==2.)r=sqrtz(divz(logz(vec2(-c.y-6.,c.x)),logz(vec2(-c.y+2.,c.x))));\n else if(i==3.)r=epowz(c);\n else if(i==4.)r=tanz(tanz(c));\n else if(i==5.)r=tanz(sinz(c));\n else if(i==6.)r=sqrtz(vec2(1.+c.x,c.y))+sqrtz(vec2(1.- c.x,-c.y));\n else if(i==7.)r=divz(tanz(exp2z(c)),c);\n else if(i==8.)r=sinz(cosz(sinz(c)));\n else if(i==9.)r=invz(vec2(1,0)+epowz(vec2(c.y, c.x)));\n else if(i==10.)r=epowz(invz(sqrtz(-c)));\n else if(i==11.)r=exp2z(invz(c));\n else if(i==12.)r=epowz(sinz(epowz(cosz(c))));   \t\n else if(i==13.)r=divz(sinz(c),c);\n else if(i==14.)r=exp2z(c);\n else if(i==15.)r=divz(sinz(c),cosz(exp2z(c)));\n else if(i==16.)r=invz(c+vec2(1,0))+invz(c-vec2(1,0));\n else if(i==17.)r=logz(c-invz(c));\n else if(i==18.)r=divz(sqrtz(vec2(c.x+1., c.y)), sqrtz(vec2(c.x-1.,c.y)));\n else if(i==19.)r=invz(vec2(1,0)+mulz(c,exp2z(exp2z(c))));\n else return c;return r;}\n\n//2d rotation by iTime\nvec2 animate(vec2 v){\n float s=sin(iTime),c=cos(iTime);return v*mat2(c,-s,s,c);}\n\n//color space\nvec3 hsv2rgb(in vec3 c){//iq's smooth hsv to rgb\n vec3 rgb=clamp( abs(mod(c.x*6.+vec3(0,4,2),6.)-3.)-1.,0.,1.);\n rgb=rgb*rgb*(3.0-2.0*rgb);return c.z*mix(vec3(1),rgb,c.y);}\n\n//for tiling grid, by aiekick https://www.shadertoy.com/view/4lj3Ww\nvec2 gridSize=vec2(5,4);\nvec3 getCell(vec2 s,vec2 h){vec2 c=floor(h*gridSize/s);\n return vec3(c.x,c.y,(gridSize.y-1.-c.y)*gridSize.x+c.x);}\nvec3 getSmallCells(vec2 s,vec2 h){\n vec3 c=getCell(s,h);vec2 g=s/gridSize;float r=g.x/g.y;\n vec2 u = pi*((2.*h-g)/g.y - 2.*vec2(c.x*r,c.y));return vec3(c.z,u);}\n\nvoid mainImage( out vec4 Out,in vec2 In){vec2 e=iResolution.xy;    \n vec3 c=iMouse.z>0.? \n  vec3(getCell(e, iMouse.xy).z,pi*(2.*In-e)/(e.y))://fullscreen cell \n  getSmallCells(e,In);//tiled cells\n vec2 z=animate(func(c.x,c.yz))*2.;\n float h=atan(z.y,z.x)/(2.*pi),l=length(z),\n s=abs(fract(l)-.5)-.25;s=step(0.,s)*s*4.;s=1.-s*s;\n vec2  r=abs(fract(z)-.5)-.25;r=step(0.,r)*r*4.;r=1.-r*r*r*r;\n float v=mix(1.,r.x*r.y,s*.5);\n Out=vec4(hsv2rgb(vec3(h,s,v)),1.);}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}