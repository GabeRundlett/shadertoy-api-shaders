{
    "Shader": {
        "info": {
            "date": "1701385547",
            "description": "A simple sawtooth wave in log(n) time (worst case)\nbinary searches the sdf of the sawtooth to find the value of the sawtooth efficiently\nfeel free to golf it and shade with i",
            "flags": 0,
            "hasliked": 0,
            "id": "dltfzB",
            "likes": 2,
            "name": "Log(n) Sawtooth Wave",
            "published": 3,
            "tags": [
                "joke"
            ],
            "usePreview": 0,
            "username": "ArmandB",
            "viewed": 166
        },
        "renderpass": [
            {
                "code": "//this is needed\nfloat sdLine(vec2 a, vec2 b, vec2 p){\n    vec2 ab = b - a;\n    float t = dot(p - a, ab) / dot(ab, ab);\n    vec2 p2 = a + clamp(t,0.0,1.0) * ab;\n    return length(p - p2);\n}\n\n//define the sdf\nfloat getDist(vec2 p){\n    float fp = 2.0*floor((p.x+1.0)/2.0); //get the point\n    return sign(p.x-fp-p.y)*min(sdLine(vec2(fp-1.0,-1),vec2(fp+1.0,1),p),min(sdLine(vec2(fp-3.0,-1),vec2(fp-1.0,1),p),sdLine(vec2(fp+1.0,-1),vec2(fp+3.0,1),p)));\n}\n\n//binary search the sdf to find the value\n//log(n) time\nfloat sawtooth(float x){\n    int maxsteps = 100;\n    vec2 p = vec2(x,maxsteps);\n    float k = float(maxsteps)*2.0;\n    for (int i = 0; i < maxsteps; i++){\n        float d = getDist(p);\n        if (abs(d) == 0.0){\n            return p.y; //found the value\n        }\n        k /= 2.0;\n        p = vec2(p.x,p.y + k*sign(d));\n    }\n    return 2.0; //sawtooth is undefined\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - vec2(iResolution.xy/2.0))/iResolution.y*3.0;\n\n    vec3 col = vec3(uv.y < sawtooth(uv.x));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}