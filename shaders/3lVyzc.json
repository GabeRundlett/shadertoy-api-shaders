{
    "Shader": {
        "info": {
            "date": "1611461165",
            "description": "cloud tunnel shader",
            "flags": 0,
            "hasliked": 0,
            "id": "3lVyzc",
            "likes": 1,
            "name": "Fork Cloud_tunn leecorn 144",
            "published": 3,
            "tags": [
                "raymarching",
                "cloud"
            ],
            "usePreview": 0,
            "username": "leecorn",
            "viewed": 266
        },
        "renderpass": [
            {
                "code": "// Using code from\n\n//Morgan McGuire for the noise function\n// https://www.shadertoy.com/view/4dS3Wd\n\n#define time iTime\n#define depth 70.0\n#define fogSize 25.0\nfloat fogCoef=1.0/(depth-fogSize);\nfloat PI=acos(-1.0);\n\nfloat random (in float x) {\n\treturn fract(sin(x)*1e4);\n}\n\nfloat noise(in vec3 p) {\n\tconst vec3 step = vec3(110.0, 241.0, 171.0);\n\n\tvec3 i = floor(p);\n\tvec3 f = fract(p);\n\n\t// For performance, compute the base input to a\n\t// 1D random from the integer part of the\n\t// argument and the incremental change to the\n\t// 1D based on the 3D -> 1D wrapping\n\tfloat n = dot(i, step);\n\n\tvec3 u = f * f * (3.0 - 2.0 * f);\n\treturn mix( mix(mix(random(n + dot(step, vec3(0,0,0))),\n\trandom(n + dot(step, vec3(1,0,0))),\n\tu.x),\n\tmix(random(n + dot(step, vec3(0,1,0))),\n\trandom(n + dot(step, vec3(1,1,0))),\n\tu.x),\n\tu.y),\n\tmix(mix(random(n + dot(step, vec3(0,0,1))),\n\trandom(n + dot(step, vec3(1,0,1))),\n\tu.x),\n\tmix(random(n + dot(step, vec3(0,1,1))),\n\trandom(n + dot(step, vec3(1,1,1))),\n\tu.x),\n\tu.y),\n\tu.z);\n}\n\nmat2 rot(float a) {\n\tfloat ca=cos(a);\n\tfloat sa=sin(a);\n\treturn mat2(ca,sa,-sa,ca);\n}\n\nfloat cloud(in vec3 p, vec3 centerPos, float scale,float radius ) {\n\tfloat l = length(p*0.1);\n\tvec3 d = vec3(p.x+sin(l+time)*2.0,p.y+sin(l)*2.0,0.0);\n\tfloat coef = max(length(d)-1.5,0.0);\n\tfloat c=1.0;\n\tfloat n1=1.0;\n\tfor(int i=0; i<8; ++i) {\n\t\tn1+=1.0/c*abs(noise((p*c+time*1.0)*scale));\n\t\tc*=2.0;\n\t}\n\treturn n1+(coef);\n}\n\nfloat mapHyper(vec3 p){\n\treturn cloud(p,vec3(0,0,0),0.5,0.1);\n}  \n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n\tuv -= 0.5;\n\tuv /= vec2(iResolution.y / iResolution.x, 1);\n\tvec3 s=vec3(0.5,0.5,100);\n\tfloat t2=(time*1.5);\n\ts.xz *= rot(sin(t2)*0.005);\n\tvec3 t=vec3(0,0,0);\n\ts.x += cos(t2*0.2)*0.10*sin(time*0.01);\n\ts.y += sin(t2*0.2)*0.10*sin(time*0.01+10.0);\n\tvec3 cz=normalize(t-s);\n\tvec3 cx=normalize(cross(cz,vec3(0,1,0)));\n\tvec3 cy=normalize(cross(cz,cx));\n\tvec3 r=normalize(uv.x*cx+uv.y*cy+cz*0.7);\n\ts.z+=time*-8.0;\n\t\n\tvec3 p=s;\n\tfloat d;\n\tfloat seuil=5.1;\n\tfloat c= 0.0;\n\tfloat distMax =100.0;\n\tfloat steps = 300.0;\n\tfloat color = 0.0;\n\tfloat cl;\n\tfloat dist = clamp((1.0-dot(vec3(0,0,-1.0),r))*4.0,0.0,1.0);\n\tint cc =int(mix(300.0,1000.0,dist));\n\tfloat uu =mix(1.0,0.25,dist);\n\tvec3 p3 = vec3(0);\n\tfor(int i=0; i<cc; ++i) {\n\t\tfloat d2 ;\n\t\tfloat d;\n\t\tif(color<0.001)d = mapHyper(p);\n\t\tc =d;  \n\t\tif( c>seuil )\n\t\t{vec3 p2 =p;\n\t\t\tif(p3.x==0.0)p3=p;\n\t\t\tfor(int j;j<20;j++)\n\t\t\t{\n\t\t\t\tif(color<0.2)d2= mapHyper(p2);\n\t\t\t\telse\n\t\t\t\td2 = 5.2;\n\t\t\t\tif(d2>seuil)\n\t\t\t\t{\n\t\t\t\t\tcolor = color*0.9 + d2*0.02*0.1;\n\t\t\t\t}\n\t\t\t\tp2 +=normalize(vec3(-0.0,-0.0,-5.0))*0.42;\n\t\t\t} \n\t\t}\n\t\tcl = 1.0-color;\n        p+=r*distMax/steps*uu;\n\t\t//p+=r*distMax/float(cc)*uu;\n\t}\n\n\tvec2 off=vec2(1.1,0.0);\n\tvec3 n=normalize(mapHyper(p3)-vec3(mapHyper(p3-off.xyy), mapHyper(p3-off.yxy), mapHyper(p3-off.yyx)));\n\n\t//compositing\n\tvec3 col=vec3(0);\n\tcol = mix(vec3(0.0,0.0,0.2),vec3(0.88,0.88,0.9),cl);\n\tfloat fog =  clamp((length(p3-s)-fogSize)*fogCoef,0.0,1.0);\n\tcol = mix(col,vec3(0.88,0.88,0.9),fog);\n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}