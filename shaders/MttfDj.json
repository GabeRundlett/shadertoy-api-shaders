{
    "Shader": {
        "info": {
            "date": "1541139731",
            "description": " In www.shadertoy.com/view/4ltBWj guil shaved off 4 square roots, 4 costly samples and 4 advection steps. He uses a simpler, more standard divergence calculation. This is now super simple. Thank you guil!",
            "flags": 32,
            "hasliked": 0,
            "id": "MttfDj",
            "likes": 23,
            "name": "Guil's Improvements",
            "published": 3,
            "tags": [
                "fluid"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 1312
        },
        "renderpass": [
            {
                "code": "vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 C, in vec2 U )\n{   R = iResolution.xy;\n    C = 0.5+0.5*sin(T(U).w*vec4(8,12,16,1));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec4 a = T(U+vec2(1,0)),b = T(U+vec2(0,1)),c = T(U+vec2(-1,0)),d = T(U+vec2(0,-1));Q = T(U-T(U).xy);\n \tQ.xyz = vec3(Q.x+a.z-c.z,Q.y+b.z-d.z,0.25*(a.z+b.z+c.z+d.z)-0.05*(c.x-a.x+d.y-b.y));\n \tif (iFrame < 1) Q = vec4(0);\n    if (U.x < 1.||U.y < 1.||R.x-U.x < 1.||R.y-U.y < 1.) Q.xy *= 0.;\n \tif (length(U-vec2(0,0.5*R.y)) < 4.) {Q.xy= Q.xy*.9+.1*vec2(.8,0);; Q.w = 1.;}\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec4 a = T(U+vec2(1,0)),b = T(U+vec2(0,1)),c = T(U+vec2(-1,0)),d = T(U+vec2(0,-1));Q = T(U-T(U).xy);\n \tQ.xyz = vec3(Q.x+a.z-c.z,Q.y+b.z-d.z,0.25*(a.z+b.z+c.z+d.z)-0.05*(c.x-a.x+d.y-b.y));\n \tif (iFrame < 1) Q = vec4(0);\n    if (U.x < 1.||U.y < 1.||R.x-U.x < 1.||R.y-U.y < 1.) Q.xy *= 0.;\n \tif (length(U-vec2(0,0.5*R.y)) < 4.) {Q.xy= Q.xy*.9+.1*vec2(.8,0);; Q.w = 1.;}\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec4 a = T(U+vec2(1,0)),b = T(U+vec2(0,1)),c = T(U+vec2(-1,0)),d = T(U+vec2(0,-1));Q = T(U-T(U).xy);\n \tQ.xyz = vec3(Q.x+a.z-c.z,Q.y+b.z-d.z,0.25*(a.z+b.z+c.z+d.z)-0.05*(c.x-a.x+d.y-b.y));\n \tif (iFrame < 1) Q = vec4(0);\n    if (U.x < 1.||U.y < 1.||R.x-U.x < 1.||R.y-U.y < 1.) Q.xy *= 0.;\n \tif (length(U-vec2(0,0.5*R.y)) < 4.) {Q.xy= Q.xy*.9+.1*vec2(.8,0);; Q.w = 1.;}\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec4 a = T(U+vec2(1,0)),b = T(U+vec2(0,1)),c = T(U+vec2(-1,0)),d = T(U+vec2(0,-1));Q = T(U-T(U).xy);\n \tQ.xyz = vec3(Q.x+a.z-c.z,Q.y+b.z-d.z,0.25*(a.z+b.z+c.z+d.z)-0.05*(c.x-a.x+d.y-b.y));\n \tif (iFrame < 1) Q = vec4(0);\n    if (U.x < 1.||U.y < 1.||R.x-U.x < 1.||R.y-U.y < 1.) Q.xy *= 0.;\n \tif (length(U-vec2(0,0.5*R.y)) < 4.) {Q.xy= Q.xy*.9+.1*vec2(.8,0);; Q.w = 1.;}\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}