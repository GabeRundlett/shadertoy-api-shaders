{
    "Shader": {
        "info": {
            "date": "1601233879",
            "description": "Example of the difference between arithmetic and geometric mean when normalizing a range of values.\n\nAdded the median for fun.",
            "flags": 0,
            "hasliked": 0,
            "id": "3dcyzj",
            "likes": 1,
            "name": "Arithmetic vs Geometric Mean",
            "published": 3,
            "tags": [
                "geometric",
                "arithmetic",
                "mean"
            ],
            "usePreview": 0,
            "username": "BeardThings",
            "viewed": 266
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float slices = mod(floor(iTime), 100.);\n    float base = 1.2;\n    \n    float arithmeticMean = 0.0;\n    float geometricMean = 0.0;\n    for(float i = 0.; i < slices; i++)\n    {\n        arithmeticMean += pow(base,i);\n        geometricMean += log(pow(base,i));\n    }\n    arithmeticMean /= slices;\n    geometricMean = exp(geometricMean/slices);\n    float median = pow(base,slices/2.);\n    \n    for(float i = 0.; i < slices; i+=1.)\n    {\n        if(uv.y > 0.66)\n        {\n            if(uv.x >= i*1./slices && uv.x < i*1./slices+1./slices)\n            {\n                fragColor = vec4(pow(base,i)/arithmeticMean);\n            }\n        }\n        else if(uv.y > 0.33)\n        {\n            if(uv.x >= i*1./slices && uv.x < i*1./slices+1./slices)\n            {\n                fragColor = vec4(pow(base,i)/geometricMean);\n            }\n        }\n        else\n        {\n            if(uv.x >= i*1./slices && uv.x < i*1./slices+1./slices)\n            {\n                fragColor = vec4(pow(base,i)/median);\n            }\n        }\n    }\n    \n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}