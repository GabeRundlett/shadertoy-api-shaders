{
    "Shader": {
        "info": {
            "date": "1418905227",
            "description": "Meta Experiment 7",
            "flags": 0,
            "hasliked": 0,
            "id": "4tX3R4",
            "likes": 70,
            "name": "Meta Experiment 7",
            "published": 3,
            "tags": [
                "2d",
                "experiment",
                "spiral",
                "meta",
                "paper",
                "milk",
                "strawberry"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 3654
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2014\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat metaline(vec2 p, vec2 o, float thick, vec2 l)\n{\n    vec2 po = 2.*p+o;\n    return thick / dot(po,vec2(l.x,l.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float speed = 0.3;\n    float t0 = iTime*speed;\n    float t1 = sin(t0);\n    float t2 = 0.5*t1+0.5;\n    float zoom=25.;\n    float ratio = iResolution.x/iResolution.y;\n\tvec2 uv = fragCoord.xy / iResolution.xy*2.-1.;uv.x*=ratio;uv*=zoom;\n    //vec2 mo = iMouse.xy / iResolution.xy*2.-1.;mo.x*=ratio;mo*=zoom;\n\n\t// cadre\n    float thick=0.5;\n    float inv=1.;\n\tfloat bottom = metaline(uv,vec2(0.,2.)*zoom, thick, vec2(0.0,1.*inv));\n\tfloat top = metaline(uv,vec2(0.,-2.)*zoom, thick, vec2(0.0,-1.*inv));\n\tfloat left = metaline(uv,vec2(2.*ratio,0.)*zoom, 0.5, vec2(1.*inv,0.0));\n\tfloat right = metaline(uv,vec2(-2.*ratio,0.)*zoom, 0.5, vec2(-1.*inv,0.0));\n\tfloat rect=bottom+top+left+right;\n    \n    // uv / mo\n    vec2 uvo = uv;//-mo;\n    float phase=1.1;\n    float tho = length(uvo)*phase+t1;\n    float thop = t0*20.;\n    \n    // map spiral\n   \tuvo+=vec2(tho*cos(tho-1.25*thop),tho*sin(tho-1.15*thop));\n    \n    // metaball\n    float mbr = 8.;\n    float mb = mbr / dot(uvo,uvo);\n\n\t//display\n    float d0 = mb+rect;\n    \n    float d = smoothstep(d0-2.,d0+1.2,1.);\n    \n\tfloat r = mix(1./d, d, 1.);\n    float g = mix(1./d, d, 3.);\n    float b = mix(1./d, d, 5.);\n    vec3 c = vec3(r,g,b);\n    \n    fragColor.rgb = c;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}