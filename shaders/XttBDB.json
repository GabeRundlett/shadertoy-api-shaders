{
    "Shader": {
        "info": {
            "date": "1540873093",
            "description": "Just a sketch",
            "flags": 0,
            "hasliked": 0,
            "id": "XttBDB",
            "likes": 2,
            "name": "Static Race",
            "published": 3,
            "tags": [
                "sinewavepattern"
            ],
            "usePreview": 0,
            "username": "dedmoros",
            "viewed": 515
        },
        "renderpass": [
            {
                "code": "#define PI 3.1416\n#define AR 1./iResolution\n\nfloat nsin(float x) {\n\treturn sin(x)*.5+.5;\n}\n\nfloat line(vec2 u, float y, float thickness) {\n\treturn step(u.y+y, AR.y*thickness)-step(u.y+y,-AR.y*thickness);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float animation = nsin(iTime*.25);\n    float amplitude = min(iTime*.5, .5);\n\tfloat y1 = sin(uv.x*PI*350.+500.*animation)*amplitude;\n    float y2 = sin(uv.x*PI*350.+500.*animation+.03)*amplitude;\n    float y3 = sin(uv.x*PI*350.+500.*animation+.05)*amplitude;\n    float c1 = line(uv-.5, y1, 5.);\n    float c2 = line(uv-.5, y2, 8.);\n    float c3 = line(uv-.5, y3, 10.);\n    vec3 col = vec3(c1,c2,c3);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}