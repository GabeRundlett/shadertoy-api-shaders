{
    "Shader": {
        "info": {
            "date": "1569192449",
            "description": "Try to kill them all!\n\nThanks for the inspo mathmasterzach",
            "flags": 32,
            "hasliked": 0,
            "id": "ts33DS",
            "likes": 205,
            "name": "Branching Paths",
            "published": 3,
            "tags": [
                "particles"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 9351
        },
        "renderpass": [
            {
                "code": "#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\nvec4 X (inout vec2 c, vec2 u, vec2 r) {\n    vec4 n = A(u+r);\n\tif (length(u+r-n.xy)<length(u-c)) c = n.xy;\n    return n;\n} \nvoid mainImage( out vec4 Q, vec2 U )\n{\n    vec4 a = A(U);\n    vec2 c = Q.xy;\n    vec4 \n        n = X(c,U,+vec2(0,1)),\n        e = X(c,U,+vec2(1,0)),\n        s = X(c,U,-vec2(0,1)),\n        w = X(c,U,-vec2(1,0)),\n        m = 0.25*(n+e+s+w);\n \tvec3 g = normalize(vec3(e.z-w.z,n.z-s.z,.3));\n    g = reflect(g,vec3(0,0,1));\n \tvec3 b = normalize(vec3(e.w-w.w,n.w-s.w,1));\n    float d = dot(g,normalize(vec3(0,1,.5)));\n    Q = (exp(-4.*d*d))*m.w*abs(sin(2.+vec4(1,2,3,4)*(1.+2.*m.z)));\n\n    Q = .8+.2*g.x-.8*(1.+0.5*(b.x+b.y)) * a.w * sin(2.+0.5*(g.z)*vec4(1,2,3,4));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\nvec4 X (inout vec2 c,inout float m, vec2 u, vec2 r) {\n    vec4 n = A(u+r);\n    m += n.z;\n\tif (length(u+r-n.xy)<length(u-c)) c = n.xy;\n    return n;\n} \nvoid mainImage( out vec4 Q, vec2 U )\n{\n    Q = A(U);\n    vec2 c = Q.xy;\n    float m=0.;\n    vec4 \n        n = X(c,m,U,+vec2(0,1)),\n        e = X(c,m,U,+vec2(1,0)),\n        s = X(c,m,U,-vec2(0,1)),\n        w = X(c,m,U,-vec2(1,0));\n    X(c,m,U,vec2(1,1));\n    X(c,m,U,vec2(1,-1));\n    X(c,m,U,vec2(-1,1));\n    X(c,m,U,vec2(-1,-1));\n    vec2 g = vec2(e.z-w.z,n.z-s.z);\n    Q.xy = c;\n    Q.z += (m/8.-Q).z+.05*Q.w - .0001*Q.z;\n    Q.w -= 0.001*Q.w;\n    Q.zw = max(Q.zw,vec2(2,1)*smoothstep(4.,0.0,length(U-c)));\n    Q.xy -= 0.25*g;\n    if (length(U-iMouse.xy)<.3*R.y&&iMouse.z>0.) Q = vec4(-R,Q.z,0);\n    if (iFrame < 1) Q = vec4(clamp(floor(U/2.)*2.,0.5*R-2.,0.5*R+2.),0,0);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\nvec4 X (inout vec2 c,inout float m, vec2 u, vec2 r) {\n    vec4 n = A(u+r);\n    m += n.z;\n\tif (length(u+r-n.xy)<length(u-c)) c = n.xy;\n    return n;\n} \nvoid mainImage( out vec4 Q, vec2 U )\n{\n    Q = A(U);\n    vec2 c = Q.xy;\n    float m=0.;\n    vec4 \n        n = X(c,m,U,+vec2(0,1)),\n        e = X(c,m,U,+vec2(1,0)),\n        s = X(c,m,U,-vec2(0,1)),\n        w = X(c,m,U,-vec2(1,0));\n    X(c,m,U,vec2(1,1));\n    X(c,m,U,vec2(1,-1));\n    X(c,m,U,vec2(-1,1));\n    X(c,m,U,vec2(-1,-1));\n    vec2 g = vec2(e.z-w.z,n.z-s.z);\n    Q.xy = c;\n    Q.z += (m/8.-Q).z+.05*Q.w - .0001*Q.z;\n    Q.w -= 0.001*Q.w;\n    Q.zw = max(Q.zw,vec2(2,1)*smoothstep(4.,0.0,length(U-c)));\n    Q.xy -= 0.25*g;\n    if (length(U-iMouse.xy)<.3*R.y&&iMouse.z>0.) Q = vec4(-R,Q.z,0);\n    if (iFrame < 1) Q = vec4(clamp(floor(U/2.)*2.,0.5*R-2.,0.5*R+2.),0,0);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\nvec4 X (inout vec2 c,inout float m, vec2 u, vec2 r) {\n    vec4 n = A(u+r);\n    m += n.z;\n\tif (length(u+r-n.xy)<length(u-c)) c = n.xy;\n    return n;\n} \nvoid mainImage( out vec4 Q, vec2 U )\n{\n    Q = A(U);\n    vec2 c = Q.xy;\n    float m=0.;\n    vec4 \n        n = X(c,m,U,+vec2(0,1)),\n        e = X(c,m,U,+vec2(1,0)),\n        s = X(c,m,U,-vec2(0,1)),\n        w = X(c,m,U,-vec2(1,0));\n    X(c,m,U,vec2(1,1));\n    X(c,m,U,vec2(1,-1));\n    X(c,m,U,vec2(-1,1));\n    X(c,m,U,vec2(-1,-1));\n    vec2 g = vec2(e.z-w.z,n.z-s.z);\n    Q.xy = c;\n    Q.z += (m/8.-Q).z+.05*Q.w - .0001*Q.z;\n    Q.w -= 0.001*Q.w;\n    Q.zw = max(Q.zw,vec2(2,1)*smoothstep(4.,0.0,length(U-c)));\n    Q.xy -= 0.25*g;\n    if (length(U-iMouse.xy)<.3*R.y&&iMouse.z>0.) Q = vec4(-R,Q.z,0);\n    if (iFrame < 1) Q = vec4(clamp(floor(U/2.)*2.,0.5*R-2.,0.5*R+2.),0,0);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\nvec4 X (inout vec2 c,inout float m, vec2 u, vec2 r) {\n    vec4 n = A(u+r);\n    m += n.z;\n\tif (length(u+r-n.xy)<length(u-c)) c = n.xy;\n    return n;\n} \nvoid mainImage( out vec4 Q, vec2 U )\n{\n    Q = A(U);\n    vec2 c = Q.xy;\n    float m=0.;\n    vec4 \n        n = X(c,m,U,+vec2(0,1)),\n        e = X(c,m,U,+vec2(1,0)),\n        s = X(c,m,U,-vec2(0,1)),\n        w = X(c,m,U,-vec2(1,0));\n    X(c,m,U,vec2(1,1));\n    X(c,m,U,vec2(1,-1));\n    X(c,m,U,vec2(-1,1));\n    X(c,m,U,vec2(-1,-1));\n    vec2 g = vec2(e.z-w.z,n.z-s.z);\n    Q.xy = c;\n    Q.z += (m/8.-Q).z+.05*Q.w - .0001*Q.z;\n    Q.w -= 0.001*Q.w;\n    Q.zw = max(Q.zw,vec2(2,1)*smoothstep(4.,0.0,length(U-c)));\n    Q.xy -= 0.25*g;\n    if (length(U-iMouse.xy)<.3*R.y&&iMouse.z>0.) Q = vec4(-R,Q.z,0);\n    if (iFrame < 1) Q = vec4(clamp(floor(U/2.)*2.,0.5*R-2.,0.5*R+2.),0,0);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}