{
    "Shader": {
        "info": {
            "date": "1723231797",
            "description": "https://www.shadertoy.com/view/stsXDl  https://www.shadertoy.com/view/lslyRn ",
            "flags": 1,
            "hasliked": 0,
            "id": "lfXBzr",
            "likes": 5,
            "name": "galaxy with star",
            "published": 3,
            "tags": [
                "fractal",
                "star",
                "galaxy"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 205
        },
        "renderpass": [
            {
                "code": "\n\n#define iterations 12\n#define formuparam 0.53\n\n#define volsteps 20\n#define stepsize 0.1\n\n#define zoom   0.800\n#define tile   0.850\n#define speed  0.010 \n\n#define brightness 0.0015\n#define darkmatter 0.300\n#define distfading 0.730\n#define saturation 0.850\n\nvoid mainVR( out vec4 fragColor, in vec2 fragCoord, in vec3 ro, in vec3 rd )\n{\n\t//get coords and direction\n\tvec3 dir=rd;\n\tvec3 from=ro;\n\t\n\t//volumetric rendering\n\tfloat s=0.1,fade=1.;\n\tvec3 v=vec3(0.);\n\tfor (int r=0; r<volsteps; r++) {\n\t\tvec3 p=from+s*dir*.5;\n\t\tp = abs(vec3(tile)-mod(p,vec3(tile*2.))); // tiling fold\n\t\tfloat pa,a=pa=0.;\n\t\tfor (int i=0; i<iterations; i++) { \n\t\t\tp=abs(p)/dot(p,p)-formuparam;\n            p.xy*=mat2(cos(iTime*0.02),sin(iTime*0.02),-sin(iTime*0.02),cos(iTime*0.02) );// the magic formula\n\t\t\ta+=abs(length(p)-pa); // absolute sum of average change\n\t\t\tpa=length(p);\n\t\t}\n\t\tfloat dm=max(0.,darkmatter-a*a*.001); //dark matter\n\t\ta*=a*a; // add contrast\n\t\tif (r>6) fade*=1.2-dm; // dark matter, don't render near\n\t\t//v+=vec3(dm,dm*.5,0.);\n\t\tv+=fade;\n\t\tv+=vec3(s,s*s,s*s*s*s)*a*brightness*fade; // coloring based on distance\n\t\tfade*=distfading; // distance fading\n\t\ts+=stepsize;\n\t}\n\tv=mix(vec3(length(v)),v,saturation); //color adjust\n\tfragColor = vec4(v*.03,1.);\t\n}\nconst float a=1.0;\nconst float b=.1759;\nconst float PI=3.14159265359;\n\nfloat happy_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\n\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)cos((h)*6.3+vec3(0,23,21))*.5+.5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//get coords and direction\n\tvec2 uv=fragCoord.xy/iResolution.xy-.5;\n    \tvec2 uv2=fragCoord.xy/iResolution.xy;\n        vec4 O =fragColor;\n        \nfloat t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + .07)) * 2.2;\n\tfloat si = sin(t);\n\tfloat co = cos(t);\n\tmat2 ma = mat2(co, si, -si, co);\nvec2 C =fragCoord;\n O=vec4(0);\n    vec3 p,r=iResolution,\n    d=normalize(vec3((C-.5*r.xy)/r.y,1));\n    float i=0.,g=0.,e,s;\n    for(;i++<99.;)\n    {\n        p=g*d-vec3(.00,.0,1.1);\n        \n        p=R(p,normalize(vec3(uv*ma,1.)),0.5);\n        s=2.;\n        vec4 q=vec4(p,0.);\n        \n\t\tfor(int j=0;j++<8;)\n        {\n            q=abs(q);\n            \n            q=q.x<q.y?q.zwxy:q.zwyx;\n            s*=e=2.3/clamp(dot(q,q),.2,1.5);\n            q=q*e-vec4(1,4,2,1);\n        }\n        g+=e=min(\n                length(q.w)/s,\n                length(cross(q.xyw,vec3(.577)))/s-.3e-4\n            )+.001;\n        O.rgb+=mix(r/r,H(log(s)*2.),.3)*.015*exp(-.03*i*i*e);\n    }\n    O*=O*O*O;\n\n\n\n\n\tuv.y*=iResolution.y/iResolution.x;\n\tvec3 dir=vec3(uv*zoom,1.);\n\n\n  \n  uv*=ma;\n    \n\t\n\tvec3 from=vec3(1.,.5,0.5)+O.xyz;\n\n\t\n\tmainVR(fragColor, fragCoord, from, dir);\t\n    fragColor*=O;\n fragColor*= vec4(happy_star(uv, 01.) * vec3(1.35,1.2,1.55)*0.22, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}