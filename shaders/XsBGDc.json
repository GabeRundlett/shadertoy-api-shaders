{
    "Shader": {
        "info": {
            "date": "1394117986",
            "description": "mouse.x:  frequency\nmouse.y: directionality",
            "flags": 0,
            "hasliked": 0,
            "id": "XsBGDc",
            "likes": 44,
            "name": "Gabor2",
            "published": 3,
            "tags": [
                "gabor"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 2670
        },
        "renderpass": [
            {
                "code": "// inspired from https://www.shadertoy.com/view/MdjGWy#\n\n#define NB 100      // number or gabor blobs\n#define SIZE 0.22   // size of gabor blobs\n                    // freq tuned by mouse.x\n\n#define M_PI 3.14159265358979\nfloat gauss(float x) {\n    return exp(-(x*x)/(SIZE*SIZE)); \n}\n\nfloat rnd(vec2 uv, int z) \n{\n\tif      (z==0) return texture(iChannel1,uv).r;\n\telse if (z==1) return texture(iChannel1,uv).g;\n\telse if (z==2) return texture(iChannel1,uv).b;\n\telse           return texture(iChannel1,uv).a;\n}\nfloat rndi(int i, int j)\n{\n\tvec2 uv = vec2(.5+float(i),.5+float(j))/ iChannelResolution[1].x;\n\treturn texture(iChannel1,uv).r;\n}\n\nfloat gabor(vec2 pos, vec2 dir) {\n    float g = gauss(pos.x)*gauss(pos.y);\n    float s = .5*sin(dot(pos,dir) * 2. * M_PI-10.*iTime);\n\treturn g*s;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.y;\n\tfloat freq = mix(10., iResolution.x/10., iMouse.x/iResolution.x);\n\tfloat d = 1.5*iMouse.y/iResolution.y - .5;\n\tvec3 col= vec3(0.);\n\t\n\tfor (int i=0; i<NB; i++) {\n\t\tvec2 pos = vec2(1.5*rndi(i,0),rndi(i,1));\n\t\tvec2 dir = (1.+d)*vec2(rndi(i,2),rndi(i,3))-d;\n\t\tcol += gabor(uv-pos, freq*dir)*texture(iChannel0,pos).rgb;\n\t}\n    fragColor = vec4(col,1.0);\n}\n                  \n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}