{
    "Shader": {
        "info": {
            "date": "1559332505",
            "description": "simple multilayers demo",
            "flags": 0,
            "hasliked": 0,
            "id": "WljGWh",
            "likes": 15,
            "name": "Mattress device",
            "published": 3,
            "tags": [
                "grid",
                "loop"
            ],
            "usePreview": 0,
            "username": "avin",
            "viewed": 695
        },
        "renderpass": [
            {
                "code": "#define STEPS 25.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord - iResolution.xy*.5)/iResolution.y;\n    \n    float t = iTime;           \n    float m = 0.;\n    float col = 0.;\n    float sStep = 1./STEPS;\n    float zoomF =  sin(t*.5)*.5+.5;\n    \n    for(float i = 1.; i>0.01; i-=sStep){\n        float isf = t*.1;\n        vec2 iuv = uv * (1. + i * .5) + vec2(cos(isf), sin(isf))*2.;\n        \n        isf = i*STEPS*.5 - t*5.;\n        vec2 guv = iuv * (3. + zoomF) + vec2(sin(isf), cos(isf))*.05;        \n        guv = fract(guv) - .5;\n                    \n        float mi = step(abs(i*.75 - length(guv)), .005);\n        \n        if(mi > 0.){\n        \tcol = 1. - i;\n        }\n        \n        m += mi;\n    }   \n        \n    col *= min(m, 1.) * (1. - length(uv)*.25);\n    \n    fragColor = vec4(col);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}