{
    "Shader": {
        "info": {
            "date": "1594092217",
            "description": "naive fbm terrrian",
            "flags": 0,
            "hasliked": 0,
            "id": "ttScz1",
            "likes": 2,
            "name": "terrain-mesh",
            "published": 3,
            "tags": [
                "terrian"
            ],
            "usePreview": 0,
            "username": "xiaosong0911",
            "viewed": 350
        },
        "renderpass": [
            {
                "code": "float board(vec3 uv, float dx) {\n    uv = (0.5 - abs(fract(uv/dx)-0.5)) * dx;\n    return min(min(uv.x,uv.y),uv.z);\n}\n\nfloat hash12(vec2 p) {\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat fbm(vec2 p) {\n    float r = 0.;\n    p = (p + 0.5) / 512.;\n    float s = 15.;\n    for (int i = 0; i < 6; i++) {\n        s /= 2.; p *= 2.;\n    \tr += texture(iChannel0, p).r * s;\n    }\n    return r - 0.5;\n}\n\nfloat sdf(vec3 r) {\n    return r.y - fbm(r.xz) * smoothstep(0.,10.,length(r.xz));\n}\n\nvec3 trace(vec3 o, vec3 d) {\n    vec3 p = o;\n    float s;\n    for(int i = 0; i < 50; i++) {\n        s = sdf(p);\n        p += d * s * 0.5;\n    }\n    if (s > 1e1) return o;\n    else return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    float theta = (iMouse.x * 2. - iResolution.x) * 3. / iResolution.x;\n    float phi = (iMouse.y * 2. - iResolution.y) / iResolution.y / 3.;\n    mat3 rot = mat3(\n            cos(theta), 0, sin(theta),\n            0, 1, 0,\n            -sin(theta), 0, cos(theta)\n            ) * mat3(\n                1, 0, 0,\n                0, cos(phi), sin(phi),\n                0, -sin(phi), cos(phi)\n                );\n    vec3 ori = vec3(0,3.,0);\n    vec3 dir = rot * normalize(vec3(uv, -2));\n    vec3 hit = trace(ori, dir);\n    float depth = length(hit - ori);\n    if (depth == 0.) fragColor = vec4(0.);\n    else {\n        fragColor.xyz = vec3(smoothstep(0.,0.1,board(hit * 10., 1.)));\n        fragColor.a = 1.;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}