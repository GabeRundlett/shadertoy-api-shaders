{
    "Shader": {
        "info": {
            "date": "1549580202",
            "description": "Who threatens you? Who do you want? ",
            "flags": 32,
            "hasliked": 0,
            "id": "wdjGRc",
            "likes": 76,
            "name": "Love and Domination",
            "published": 3,
            "tags": [
                "particles",
                "paper",
                "rock",
                "scissors"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 1953
        },
        "renderpass": [
            {
                "code": "vec2 R;\nvec4 D (vec2 U) {return texture(iChannel0,U/R);}\\\nvoid mainImage( out vec4 Q, in vec2 U )\n{\tR = iResolution.xy;\n \tvec4 \n        n = D(U+vec2(0,1)),\n        e = D(U+vec2(1,0)),\n        s = D(U+vec2(0,-1)),\n        w = D(U+vec2(-1,0));\n        \n \tvec4 dx = e-w;\n \tvec4 dy = n-s;\n \tQ = (D(U)+abs(dx) + abs(dy))/3.;     \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 R;\nvec4 A (vec2 U) {return texture(iChannel0,U/R);}\nvec4 B (vec2 U) {return texture(iChannel1,U/R);}\nvec4 C (vec2 U) {return texture(iChannel2,U/R);}\nvoid X (vec2 U, inout vec4 Q, vec2 u) {\n    vec4 p = A(U+u);//read neighbor\n    if (length(p.xy - U) < length(Q.xy-U)) Q = p;\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\tR = iResolution.xy;\n \tQ = A(U);\n \t// measure the neighborhood\n \tX(U,Q,vec2(1,0)); \n \tX(U,Q,vec2(0,1));\n \tX(U,Q,vec2(0,-1));\n \tX(U,Q,vec2(-1,0));\n \tX(U,Q,vec2(1,1));\n \tX(U,Q,vec2(-1,1));\n \tX(U,Q,vec2(1,-1));\n \tX(U,Q,vec2(-1,-1));\n\t// get gradient of pheromone feild\n \t// 0 : x  1 : y 2 : z\n \t// x > y > z > x > y ...\n \tvec4 \n        n = C(U+vec2(0,1)),\n        e = C(U+vec2(1,0)),\n        s = C(U+vec2(0,-1)),\n        w = C(U+vec2(-1,0));\n        \n \tvec3 dx = e.xyz-w.xyz;\n \tvec3 dy = n.xyz-s.xyz;\n\t\n \tvec2 v = vec2(0);\n    if (Q.w == 0.) v = vec2(dx.z-dx.y+0.3*dx.x,dy.z-dy.y+0.3*dy.x);\n    if (Q.w == 1.) v = vec2(dx.x-dx.z+0.1*dx.y,dy.x-dy.z+0.1*dy.y);\n    if (Q.w == 2.) v = vec2(dx.y-dx.x+0.2*dx.z,dy.y-dy.x+0.2*dy.z);\n \tif (length(v) > 0.) \n        Q.xy += normalize(v)*min(1.,SPEED*length(v));\n    \n    if (iFrame < 1) {\n        U = floor((U)/8.)*8.+5.;\n    \tQ = vec4(U,1,floor(mod(-U.x/R.x*5.,3.)));\n    }\n \tif (iMouse.z > 0. && length(iMouse.xy-Q.xy) < MOUSE_SIZE) Q=vec4(-100,-100,0,0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Blur pass 1\nvec2 R;\nvec4 A (vec2 U) {return texture(iChannel0,U/R);}\nvec4 B (vec2 U) {return texture(iChannel1,U/R);}\nvec4 C (vec2 U) {return texture(iChannel2,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\tR = iResolution.xy;\n\tQ = vec4(0);\n \tfor (float i = -BLUR_DEPTH ; i <= BLUR_DEPTH ; i++) {\n \t\tvec4 a = A(U+vec2(i,0));\n        vec4 c = a.z*smoothstep(1.,.5,length(U+vec2(i,0)-a.xy))*vec4(a.w==0.,a.w==1.,a.w==2.,0);\n        Q += c*sqrt(s2)/s2*exp(-i*i*0.5/s2);\n \t}\n \t\t\n \t\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Blur pass 2\nvec2 R;\nvec4 A (vec2 U) {return texture(iChannel0,U/R);}\nvec4 B (vec2 U) {return texture(iChannel1,U/R);}\nvec4 C (vec2 U) {return texture(iChannel2,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\tR = iResolution.xy;\n\tQ = vec4(0);\n \tfor (float i = -BLUR_DEPTH ; i <= BLUR_DEPTH ; i++) {\n \t\tvec4 c = B(U+vec2(0,i));\n        Q += 2.*c*sqrt(s2)/s2*exp(-i*i*0.5/s2);\n \t}\n \tQ = mix(Q,C(U),0.1);\n \t\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// color\nvec2 R;\nvec4 A (vec2 U) {return texture(iChannel0,U/R);}\nvec4 B (vec2 U) {return texture(iChannel1,U/R);}\nvec4 C (vec2 U) {return texture(iChannel2,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\tR = iResolution.xy;\n \tvec4 c = C(U);\n \tvec4 \n        n = C(U+vec2(0,1)),\n        e = C(U+vec2(1,0)),\n        s = C(U+vec2(0,-1)),\n        w = C(U+vec2(-1,0));\n \tvec4 a = A(U);\n \tfloat r=smoothstep(1.,0.5,length(U-a.xy));\n \tvec4 f = \n        (r*float(a.w==0.))*vec4(.8,.6,.3,1)+\n        (r*float(a.w==1.))*vec4(.9,.2,.4,1)+\n        (r*float(a.w==2.))*vec4(.2,.7,.9,1);\n \tQ = 2.*f*(0.5+0.5*(n-s+e-w));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "/*\n\tThis controls how far the \"scent\" of each cell travels\n\tIts distributed by a gaussian blur.\n\tThe farther the information spreads, the more blurred it is\n\tHigh values result in sleepy simulations and \n\tlow values result in excited simulations\n*/\n\n#define s2 30.\n#define BLUR_DEPTH 25.\n#define SPEED 2.\n#define MOUSE_SIZE 60.",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}