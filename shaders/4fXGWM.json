{
    "Shader": {
        "info": {
            "date": "1703102752",
            "description": "Thumbnail pic took 60s on my gtx 980ti\nMore scenes in the Common tab\n\nIf anyone knows how to speed up compile times for large models, let me know. Ty :)\nAlso, advice on how to fix fireflies would be appreciated",
            "flags": 32,
            "hasliked": 0,
            "id": "4fXGWM",
            "likes": 5,
            "name": "DLS path tracing",
            "published": 3,
            "tags": [
                "raytracing",
                "dls"
            ],
            "usePreview": 0,
            "username": "FrederickAmpsUp",
            "viewed": 364
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Output to screen\n    vec4 col = texture(iChannel1, uv);\n    \n        // flim\n    //col.xyz = flim(col.xyz, 0.0);\n    \n        // Fred's Basic Color Transform\n    col.xyz = fbct_transform(col.xyz);\n    \n        // no color transform\n    //col.xyz = pow(col.xyz, vec3(1.0/2.2));\n    \n    fragColor = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define N_BOUNCES 5\n#define N_SAMPLES  5 // Number of samples (at 50% variance)\n#define SAMPLE_VAR 0 // Variation in samplerate (in either direction)\n                     // This is set to 0 as, on my old GPU, it causes huge framerate drops.\n// Uncomment to disable Direct Light Sampling\n//#define NO_DLS\n\n// Uncomment the scene to display\n// Scenes marked with [lag] WILL take a long time to compile.\n// Give them up to 60s to compile before reloading\n\n// custom-made scenes\n#define SCENE_CORNELL_0 // Cornell box w/ infinite mirrors\n//#define SCENE_CORNELL_1_SUZANNE // Cornell box w/ Suzanne the Blender monkey [lag]\n//#define SCENE_CORNELL_2_TEAPOT  // Cornell box w/ that one teapot [lag]\n//#define SCENE_CORNELL_3_STANFORD // Cornell box w/ stanford bunny [lag]\n//#define MIRROR_WORLD // Infinite mirrors :)\n//#define SCENE_FURNACE // Blue furnace test\n\n// chatgpt scenes\n//#define SCENE_MYSTIC_HORIZON\n//#define SCENE_GLOWING_EMBER\n\nstruct Material {\n    vec3    color;\n    vec3 emission;\n    \n    float roughness;\n};\n\nstruct Sphere {\n    vec3  center;\n    float radius;\n    \n    Material mat;\n};\n\nstruct Triangle {\n    vec3 v1,v2,v3;\n    \n    Material mat;\n};\n\nstruct Ray {\n    vec3    origin;\n    vec3 direction;\n};\n\nstruct HitInfo {\n    bool hit;\n    \n    vec3 position;\n    vec3   normal;\n    \n    float dst;\n    \n    Material mat;\n};\n#define MISS HitInfo(false, vec3(0), vec3(0), 0.0, Material(vec3(0), vec3(0), 0.0))\n\nfloat seed;\nfloat rand(vec2 co){\n    return fract(sin(dot(co*(seed+1.0), vec2(12.9898, 78.233))) * 43758.5453);\n}\nfloat rand(vec3 co) {\n    return sqrt(rand(co.xy)*rand(co.yz));\n}\nvec3 in_unit_sphere(vec3 co) {\n    vec3 p;\n    do {\n        p = vec3(rand(co), rand(co*2.0), rand(co*3.0)) * 2.0 - 1.0;\n    } while(dot(p,p) > 1.0);\n    return p;\n}\nvec3 in_hemisphere(vec3 co, vec3 norm) {\n    vec3 unit = normalize(in_unit_sphere(co));\n    float dotValue = dot(unit, norm);\n    return unit * sign(dotValue);\n}\n// start scenes\n#ifdef SCENE_CORNELL_0\n// Cornell box scene with infinite mirrors\n\n#define LIGHT_POS vec3(0.0, 2.2, 0.0)\n#define LIGHT_RADIUS 0.5\n#define LIGHT_STRENGTH 40.0\n#define LIGHT_COLOR vec3(1.0, 1.0, 1.0)\n\n#define N_SPHERES 8\nconst Sphere SPHERES[N_SPHERES] = Sphere[](\n    Sphere(vec3(0.0, -1000.5, 0.0), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 1.0)), // Ground\n    Sphere(vec3(1001.5, 0.0, 0.0), 1000.0, Material(vec3(0.0, 0.8, 0.0), vec3(0.0, 0.0, 0.0), 1.0)), // Right wall\n    Sphere(vec3(-1001.5, 0.0, 0.0), 1000.0, Material(vec3(0.8, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0)), // Left wall\n    Sphere(vec3(0.0, 0.0, 1001), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 0.02)), // Back wall\n    Sphere(vec3(0.0, 0.0, -1002), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 0.02)), // Front wall\n    Sphere(vec3(0.0, 1002, 0.0), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 1.0)), // Ceiling\n    \n    Sphere(vec3(-0.3, 0.0, 0.0), 0.5, Material(vec3(0.9, 0.9, 0.9), vec3(0.0, 0.0, 0.0), 1.0)), // White diffuse ball (to showcase GI)\n\n    Sphere(LIGHT_POS, LIGHT_RADIUS, Material(vec3(0.0, 0.0, 0.0), LIGHT_COLOR * LIGHT_STRENGTH, 1.0)) // Light sphere\n);\n\n#define N_TRIANGLES 1\nconst Triangle TRIS[N_TRIANGLES] = Triangle[](\n    Triangle(vec3(0), vec3(0), vec3(0), MISS.mat)\n);\n\n    // Doesn't matter since we're in a box\nvec3 sky_color(vec3 d) {\n    return vec3(0.0);\n}\n\n// basic camera ray\nRay camera(vec2 ndc) {\n    Ray cam; \n    cam.origin    = vec3(0.4, 0.5, -1.2);\n    cam.direction = normalize(vec3(ndc, 1.0));\n    \n    return cam;\n}\n#endif\n\n#ifdef SCENE_CORNELL_1_SUZANNE\n// Cornell box scene with Suzanne the Blender monkey\n\n#define LIGHT_POS vec3(0.0, 2.2, 0.0)\n#define LIGHT_RADIUS 0.5\n#define LIGHT_STRENGTH 40.0\n#define LIGHT_COLOR vec3(1.0, 1.0, 1.0)\n\n#define N_SPHERES 7\nconst Sphere SPHERES[N_SPHERES] = Sphere[](\n    Sphere(vec3(0.0, -1000.5, 0.0), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 1.0)), // Ground\n    Sphere(vec3(1001.5, 0.0, 0.0), 1000.0, Material(vec3(0.0, 0.8, 0.0), vec3(0.0, 0.0, 0.0), 1.0)), // Right wall\n    Sphere(vec3(-1001.5, 0.0, 0.0), 1000.0, Material(vec3(0.8, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0)), // Left wall\n    Sphere(vec3(0.0, 0.0, 1001), 1000.0, Material(vec3(0.0, 0.0, 0.8), vec3(0.0, 0.0, 0.0), 1.0)), // Back wall\n    Sphere(vec3(0.0, 0.0, -1002), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 1.0)), // Front wall\n    Sphere(vec3(0.0, 1002, 0.0), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 1.0)), // Ceiling\n\n    Sphere(LIGHT_POS, LIGHT_RADIUS, Material(vec3(0.0, 0.0, 0.0), LIGHT_COLOR * LIGHT_STRENGTH, 1.0)) // Light sphere\n);\n\n#define MESH_MAT Material(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0), 1.0)\n#define N_TRIANGLES 202\nconst Triangle TRIS[N_TRIANGLES] = Triangle[](\n    Triangle(vec3(0.516567, -0.010352, -0.516567), vec3(0.516567, -1.811388, 0.516567), vec3(0.516567, -1.811388, -0.516567), MESH_MAT),Triangle(vec3(0.516567, -0.010352, 0.516567), vec3(-0.516567, -1.811388, 0.516567), vec3(0.516567, -1.811388, 0.516567), MESH_MAT),Triangle(vec3(-0.516567, -0.010352, 0.516567), vec3(-0.516567, -1.811388, -0.516567), vec3(-0.516567, -1.811388, 0.516567), MESH_MAT),Triangle(vec3(-0.516567, -0.010352, -0.516567), vec3(0.516567, -1.811388, -0.516567), vec3(-0.516567, -1.811388, -0.516567), MESH_MAT),Triangle(vec3(0.516567, -0.010352, 0.516567), vec3(-0.516567, -0.010352, -0.516567), vec3(-0.516567, -0.010352, 0.516567), MESH_MAT),Triangle(vec3(-0.233546, 0.61699, -0.384061), vec3(-0.205803, 0.527703, -0.397327), vec3(-0.316684, 0.583845, -0.283267), MESH_MAT),Triangle(vec3(0.205802, 0.527703, -0.397327), vec3(0.233309, 0.617333, -0.38407), vec3(0.316631, 0.583807, -0.283247), MESH_MAT),Triangle(vec3(-0.205803, 0.527703, -0.397327), vec3(-0.174411, 0.442847, -0.313077), vec3(-0.273438, 0.490136, -0.289062), MESH_MAT),Triangle(vec3(0.174411, 0.442847, -0.313077), vec3(0.205802, 0.527703, -0.397327), vec3(0.273437, 0.490136, -0.289063), MESH_MAT),Triangle(vec3(-0.205803, 0.527703, -0.397327), vec3(-0.121718, 0.554431, -0.404544), vec3(-0.174411, 0.442847, -0.313077), MESH_MAT),Triangle(vec3(0.121568, 0.554376, -0.404802), vec3(0.205802, 0.527703, -0.397327), vec3(0.174411, 0.442847, -0.313077), MESH_MAT),Triangle(vec3(-0.032811, 0.583529, -0.332166), vec3(-0.078125, 0.490136, -0.324219), vec3(-0.121718, 0.554431, -0.404544), MESH_MAT),Triangle(vec3(-0.121718, 0.554431, -0.404544), vec3(-0.148134, 0.645054, -0.40256), vec3(-0.032811, 0.583529, -0.332166), MESH_MAT),Triangle(vec3(0.146875, 0.644556, -0.402612), vec3(0.121568, 0.554376, -0.404802), vec3(0.033043, 0.58333, -0.331984), MESH_MAT),Triangle(vec3(0.146875, 0.644556, -0.402612), vec3(0.033043, 0.58333, -0.331984), vec3(0.078125, 0.681542, -0.324219), MESH_MAT),Triangle(vec3(0.146875, 0.644556, -0.402612), vec3(0.078125, 0.681542, -0.324219), vec3(0.175781, 0.720605, -0.308594), MESH_MAT),Triangle(vec3(-0.316684, 0.583845, -0.283267), vec3(-0.273438, 0.681542, -0.289062), vec3(-0.233546, 0.61699, -0.384061), MESH_MAT),Triangle(vec3(-0.205803, 0.527703, -0.397327), vec3(-0.148134, 0.645054, -0.40256), vec3(-0.121718, 0.554431, -0.404544), MESH_MAT),Triangle(vec3(0.121568, 0.554376, -0.404802), vec3(0.146875, 0.644556, -0.402612), vec3(0.205802, 0.527703, -0.397327), MESH_MAT),Triangle(vec3(-0.205803, 0.527703, -0.397327), vec3(-0.233546, 0.61699, -0.384061), vec3(-0.148134, 0.645054, -0.40256), MESH_MAT),Triangle(vec3(0.146875, 0.644556, -0.402612), vec3(0.233309, 0.617333, -0.38407), vec3(0.205802, 0.527703, -0.397327), MESH_MAT),Triangle(vec3(-0.111547, 0.371506, -0.26876), vec3(-0.280553, 0.421092, -0.284562), vec3(-0.04298, 0.397742, -0.402468), MESH_MAT),Triangle(vec3(0.295262, 0.433562, -0.291302), vec3(0.118886, 0.353896, -0.25372), vec3(0.045652, 0.403664, -0.396194), MESH_MAT),Triangle(vec3(-0.400736, 0.663557, -0.315983), vec3(-0.268162, 0.561394, -0.343881), vec3(-0.394926, 0.516696, -0.200264), MESH_MAT),Triangle(vec3(0.124122, 0.787203, -0.427289), vec3(0.125586, 0.8489, -0.351199), vec3(0.408331, 0.65779, -0.319708), MESH_MAT),Triangle(vec3(0.002234, 0.648687, -0.404854), vec3(-0.126488, 0.790882, -0.425327), vec3(-0.125314, 0.848878, -0.350857), MESH_MAT),Triangle(vec3(0.139154, 0.664416, -0.380804), vec3(0.002234, 0.648687, -0.404854), vec3(0.124122, 0.787203, -0.427289), MESH_MAT),Triangle(vec3(0.408331, 0.65779, -0.319708), vec3(0.139154, 0.664416, -0.380804), vec3(0.124122, 0.787203, -0.427289), MESH_MAT),Triangle(vec3(-0.04298, 0.397742, -0.402468), vec3(-0.280553, 0.421092, -0.284562), vec3(-0.111447, 0.528968, -0.378309), MESH_MAT),Triangle(vec3(-0.111447, 0.528968, -0.378309), vec3(0.109793, 0.528353, -0.3769), vec3(-0.04298, 0.397742, -0.402468), MESH_MAT),Triangle(vec3(-0.171167, -0.013261, -0.289646), vec3(0.032971, 0.030154, -0.341508), vec3(0.178364, -0.001195, -0.286764), MESH_MAT),Triangle(vec3(-0.067141, 0.341459, -0.37578), vec3(-0.047467, 0.06566, -0.351474), vec3(-0.171167, -0.013261, -0.289646), MESH_MAT),Triangle(vec3(0.0, 0.369042, -0.398438), vec3(0.0, 0.39248, -0.371094), vec3(0.0, 0.365136, -0.375), MESH_MAT),Triangle(vec3(0.0, 0.369042, -0.398438), vec3(0.0, 0.39248, -0.371094), vec3(0.045652, 0.403664, -0.396194), MESH_MAT),Triangle(vec3(-0.04298, 0.397742, -0.402468), vec3(0.001755, 0.296561, -0.381233), vec3(-0.067141, 0.341459, -0.37578), MESH_MAT),Triangle(vec3(0.001755, 0.296561, -0.381233), vec3(-0.04298, 0.397742, -0.402468), vec3(0.064127, 0.341445, -0.379544), MESH_MAT),Triangle(vec3(0.0, 0.39248, -0.371094), vec3(-0.04298, 0.397742, -0.402468), vec3(0.109793, 0.528353, -0.3769), MESH_MAT),Triangle(vec3(0.045652, 0.403664, -0.396194), vec3(0.0, 0.39248, -0.371094), vec3(0.109793, 0.528353, -0.3769), MESH_MAT),Triangle(vec3(0.032971, 0.030154, -0.341508), vec3(-0.047467, 0.06566, -0.351474), vec3(0.049287, 0.097595, -0.364454), MESH_MAT),Triangle(vec3(-0.280553, 0.421092, -0.284562), vec3(-0.268162, 0.561394, -0.343881), vec3(-0.207264, 0.497387, -0.34865), MESH_MAT),Triangle(vec3(0.271579, 0.569159, -0.341605), vec3(0.295262, 0.433562, -0.291302), vec3(0.207003, 0.506708, -0.35946), MESH_MAT),Triangle(vec3(0.139154, 0.664416, -0.380804), vec3(0.274003, 0.613714, -0.340889), vec3(0.206486, 0.657058, -0.376267), MESH_MAT),Triangle(vec3(-0.099075, 0.614842, -0.380184), vec3(-0.162208, 0.658042, -0.403412), vec3(-0.153416, 0.701143, -0.37639), MESH_MAT),Triangle(vec3(0.002234, 0.648687, -0.404854), vec3(-0.125314, 0.848878, -0.350857), vec3(0.001246, 0.678252, -0.316118), MESH_MAT),Triangle(vec3(0.125586, 0.8489, -0.351199), vec3(0.002234, 0.648687, -0.404854), vec3(0.001246, 0.678252, -0.316118), MESH_MAT),Triangle(vec3(-0.394926, 0.516696, -0.200264), vec3(-0.358732, 0.664522, -0.156321), vec3(-0.400736, 0.663557, -0.315983), MESH_MAT),Triangle(vec3(-0.000141, 0.215137, -0.153545), vec3(-0.160596, 0.007487, -0.204363), vec3(0.143389, -0.011551, -0.200413), MESH_MAT),Triangle(vec3(-0.000141, 0.215137, -0.153545), vec3(0.143389, -0.011551, -0.200413), vec3(0.107026, 0.257677, -0.170954), MESH_MAT),Triangle(vec3(-0.171167, -0.013261, -0.289646), vec3(0.143389, -0.011551, -0.200413), vec3(-0.160596, 0.007487, -0.204363), MESH_MAT),Triangle(vec3(-0.171167, -0.013261, -0.289646), vec3(-0.160596, 0.007487, -0.204363), vec3(-0.099877, 0.263675, -0.148737), MESH_MAT),Triangle(vec3(0.143389, -0.011551, -0.200413), vec3(0.178364, -0.001195, -0.286764), vec3(0.107026, 0.257677, -0.170954), MESH_MAT),Triangle(vec3(-0.160596, 0.007487, -0.204363), vec3(-0.000141, 0.215137, -0.153545), vec3(-0.099877, 0.263675, -0.148737), MESH_MAT),Triangle(vec3(-0.087285, 0.283275, 0.210542), vec3(-0.099877, 0.263675, -0.148737), vec3(-0.000141, 0.215137, -0.153545), MESH_MAT),Triangle(vec3(-0.080927, 0.675597, 0.443123), vec3(-0.385411, 0.774394, 0.171219), vec3(-0.416923, 0.638911, 0.195618), MESH_MAT),Triangle(vec3(-0.232804, 0.913283, -0.07611), vec3(-0.390749, 0.750821, -0.047924), vec3(-0.385411, 0.774394, 0.171219), MESH_MAT),Triangle(vec3(0.390749, 0.750821, -0.047924), vec3(0.238038, 0.912358, -0.064413), vec3(0.359312, 0.809934, 0.190415), MESH_MAT),Triangle(vec3(0.001246, 0.678252, -0.316118), vec3(-0.125314, 0.848878, -0.350857), vec3(-0.230119, 0.726441, -0.236319), MESH_MAT),Triangle(vec3(0.125586, 0.8489, -0.351199), vec3(0.001246, 0.678252, -0.316118), vec3(0.228729, 0.727074, -0.237354), MESH_MAT),Triangle(vec3(-0.175781, 0.720605, -0.308594), vec3(-0.233546, 0.61699, -0.384061), vec3(-0.273438, 0.681542, -0.289062), MESH_MAT),Triangle(vec3(-0.430741, 0.635244, 0.096042), vec3(-0.385411, 0.774394, 0.171219), vec3(-0.390749, 0.750821, -0.047924), MESH_MAT),Triangle(vec3(0.359312, 0.809934, 0.190415), vec3(0.425606, 0.644591, 0.095939), vec3(0.390749, 0.750821, -0.047924), MESH_MAT),Triangle(vec3(-0.385411, 0.774394, 0.171219), vec3(-0.430741, 0.635244, 0.096042), vec3(-0.416923, 0.638911, 0.195618), MESH_MAT),Triangle(vec3(-0.087285, 0.283275, 0.210542), vec3(-0.269783, 0.391343, 0.07924), vec3(-0.099877, 0.263675, -0.148737), MESH_MAT),Triangle(vec3(-0.348236, 0.431813, 0.187355), vec3(-0.080927, 0.675597, 0.443123), vec3(-0.416923, 0.638911, 0.195618), MESH_MAT),Triangle(vec3(0.385843, 0.40248, 0.161723), vec3(0.422259, 0.664239, 0.227806), vec3(0.206099, 0.385193, 0.23506), MESH_MAT),Triangle(vec3(0.422259, 0.664239, 0.227806), vec3(0.005809, 0.425213, 0.38968), vec3(0.206099, 0.385193, 0.23506), MESH_MAT),Triangle(vec3(0.572193, 0.709347, 0.176395), vec3(0.681625, 0.619507, 0.222366), vec3(0.605289, 0.621201, 0.222109), MESH_MAT),Triangle(vec3(-0.605856, 0.619805, 0.222295), vec3(-0.589788, 0.453912, 0.198183), vec3(-0.655388, 0.682794, 0.215691), MESH_MAT),Triangle(vec3(0.491707, 0.613633, 0.177227), vec3(0.572193, 0.709347, 0.176395), vec3(0.605289, 0.621201, 0.222109), MESH_MAT),Triangle(vec3(-0.269783, 0.391343, 0.07924), vec3(-0.352066, 0.423646, 0.062407), vec3(-0.394926, 0.516696, -0.200264), MESH_MAT),Triangle(vec3(-0.394926, 0.516696, -0.200264), vec3(-0.352066, 0.423646, 0.062407), vec3(-0.430741, 0.635244, 0.096042), MESH_MAT),Triangle(vec3(0.425606, 0.644591, 0.095939), vec3(0.397961, 0.51422, 0.154137), vec3(0.354444, 0.427229, 0.069641), MESH_MAT),Triangle(vec3(0.425606, 0.644591, 0.095939), vec3(0.572193, 0.709347, 0.176395), vec3(0.397961, 0.51422, 0.154137), MESH_MAT),Triangle(vec3(0.400522, 0.504134, -0.174586), vec3(0.425606, 0.644591, 0.095939), vec3(0.354444, 0.427229, 0.069641), MESH_MAT),Triangle(vec3(-0.395389, 0.515025, 0.15448), vec3(-0.492634, 0.611389, 0.179686), vec3(-0.430741, 0.635244, 0.096042), MESH_MAT),Triangle(vec3(-0.425889, 0.462587, 0.146546), vec3(-0.492634, 0.611389, 0.179686), vec3(-0.395389, 0.515025, 0.15448), MESH_MAT),Triangle(vec3(-0.571347, 0.483608, 0.229016), vec3(-0.492634, 0.611389, 0.179686), vec3(-0.425889, 0.462587, 0.146546), MESH_MAT),Triangle(vec3(0.491707, 0.613633, 0.177227), vec3(0.573507, 0.486901, 0.21894), vec3(0.424844, 0.461658, 0.147897), MESH_MAT),Triangle(vec3(-0.492634, 0.611389, 0.179686), vec3(-0.571347, 0.483608, 0.229016), vec3(-0.605856, 0.619805, 0.222295), MESH_MAT),Triangle(vec3(-0.655388, 0.682794, 0.215691), vec3(-0.613501, 0.703207, 0.276414), vec3(-0.430741, 0.635244, 0.096042), MESH_MAT),Triangle(vec3(0.425606, 0.644591, 0.095939), vec3(0.422259, 0.664239, 0.227806), vec3(0.611595, 0.707537, 0.275748), MESH_MAT),Triangle(vec3(0.626597, 0.462337, 0.231018), vec3(0.611595, 0.707537, 0.275748), vec3(0.385843, 0.40248, 0.161723), MESH_MAT),Triangle(vec3(-0.613501, 0.703207, 0.276414), vec3(-0.655388, 0.682794, 0.215691), vec3(-0.612544, 0.457862, 0.273501), MESH_MAT),Triangle(vec3(0.626597, 0.462337, 0.231018), vec3(0.681625, 0.619507, 0.222366), vec3(0.611595, 0.707537, 0.275748), MESH_MAT),Triangle(vec3(-0.269783, 0.391343, 0.07924), vec3(-0.348236, 0.431813, 0.187355), vec3(-0.352066, 0.423646, 0.062407), MESH_MAT),Triangle(vec3(-0.316684, 0.583845, -0.283267), vec3(-0.205803, 0.527703, -0.397327), vec3(-0.273438, 0.490136, -0.289062), MESH_MAT),Triangle(vec3(0.273437, 0.490136, -0.289063), vec3(0.205802, 0.527703, -0.397327), vec3(0.316631, 0.583807, -0.283247), MESH_MAT),Triangle(vec3(-0.174411, 0.442847, -0.313077), vec3(-0.121718, 0.554431, -0.404544), vec3(-0.078125, 0.490136, -0.324219), MESH_MAT),Triangle(vec3(0.078125, 0.490136, -0.324219), vec3(0.121568, 0.554376, -0.404802), vec3(0.174411, 0.442847, -0.313077), MESH_MAT),Triangle(vec3(0.033043, 0.58333, -0.331984), vec3(0.121568, 0.554376, -0.404802), vec3(0.078125, 0.490136, -0.324219), MESH_MAT),Triangle(vec3(-0.148134, 0.645054, -0.40256), vec3(-0.078125, 0.681542, -0.324219), vec3(-0.032811, 0.583529, -0.332166), MESH_MAT),Triangle(vec3(-0.148134, 0.645054, -0.40256), vec3(-0.175781, 0.720605, -0.308594), vec3(-0.078125, 0.681542, -0.324219), MESH_MAT),Triangle(vec3(0.175781, 0.720605, -0.308594), vec3(0.233309, 0.617333, -0.38407), vec3(0.146875, 0.644556, -0.402612), MESH_MAT),Triangle(vec3(0.002234, 0.648687, -0.404854), vec3(-0.153416, 0.701143, -0.37639), vec3(-0.126488, 0.790882, -0.425327), MESH_MAT),Triangle(vec3(0.316631, 0.583807, -0.283247), vec3(0.233309, 0.617333, -0.38407), vec3(0.273437, 0.681542, -0.289063), MESH_MAT),Triangle(vec3(-0.111547, 0.371506, -0.26876), vec3(-0.067141, 0.341459, -0.37578), vec3(-0.171167, -0.013261, -0.289646), MESH_MAT),Triangle(vec3(0.178364, -0.001195, -0.286764), vec3(0.064127, 0.341445, -0.379544), vec3(0.118886, 0.353896, -0.25372), MESH_MAT),Triangle(vec3(-0.280553, 0.421092, -0.284562), vec3(-0.394926, 0.516696, -0.200264), vec3(-0.268162, 0.561394, -0.343881), MESH_MAT),Triangle(vec3(0.408331, 0.65779, -0.319708), vec3(0.400522, 0.504134, -0.174586), vec3(0.295262, 0.433562, -0.291302), MESH_MAT),Triangle(vec3(-0.125314, 0.848878, -0.350857), vec3(-0.126488, 0.790882, -0.425327), vec3(-0.400736, 0.663557, -0.315983), MESH_MAT),Triangle(vec3(0.002234, 0.648687, -0.404854), vec3(0.125586, 0.8489, -0.351199), vec3(0.124122, 0.787203, -0.427289), MESH_MAT),Triangle(vec3(-0.274725, 0.614508, -0.33776), vec3(-0.126488, 0.790882, -0.425327), vec3(-0.153416, 0.701143, -0.37639), MESH_MAT),Triangle(vec3(0.408331, 0.65779, -0.319708), vec3(0.271579, 0.569159, -0.341605), vec3(0.274003, 0.613714, -0.340889), MESH_MAT),Triangle(vec3(0.408331, 0.65779, -0.319708), vec3(0.274003, 0.613714, -0.340889), vec3(0.139154, 0.664416, -0.380804), MESH_MAT),Triangle(vec3(-0.268162, 0.561394, -0.343881), vec3(-0.400736, 0.663557, -0.315983), vec3(-0.274725, 0.614508, -0.33776), MESH_MAT),Triangle(vec3(-0.111447, 0.528968, -0.378309), vec3(0.002234, 0.648687, -0.404854), vec3(0.109793, 0.528353, -0.3769), MESH_MAT),Triangle(vec3(0.045652, 0.403664, -0.396194), vec3(0.109793, 0.528353, -0.3769), vec3(0.295262, 0.433562, -0.291302), MESH_MAT),Triangle(vec3(0.002234, 0.648687, -0.404854), vec3(0.139154, 0.664416, -0.380804), vec3(0.098035, 0.610104, -0.380545), MESH_MAT),Triangle(vec3(0.064127, 0.341445, -0.379544), vec3(0.049287, 0.097595, -0.364454), vec3(0.001755, 0.296561, -0.381233), MESH_MAT),Triangle(vec3(0.109793, 0.528353, -0.3769), vec3(0.002234, 0.648687, -0.404854), vec3(0.098035, 0.610104, -0.380545), MESH_MAT),Triangle(vec3(-0.047467, 0.06566, -0.351474), vec3(0.032971, 0.030154, -0.341508), vec3(-0.171167, -0.013261, -0.289646), MESH_MAT),Triangle(vec3(0.032971, 0.030154, -0.341508), vec3(0.049287, 0.097595, -0.364454), vec3(0.178364, -0.001195, -0.286764), MESH_MAT),Triangle(vec3(-0.047467, 0.06566, -0.351474), vec3(0.001755, 0.296561, -0.381233), vec3(0.049287, 0.097595, -0.364454), MESH_MAT),Triangle(vec3(-0.230119, 0.726441, -0.236319), vec3(-0.400736, 0.663557, -0.315983), vec3(-0.358732, 0.664522, -0.156321), MESH_MAT),Triangle(vec3(0.0, 0.369042, -0.398438), vec3(-0.04298, 0.397742, -0.402468), vec3(0.0, 0.39248, -0.371094), MESH_MAT),Triangle(vec3(0.045652, 0.403664, -0.396194), vec3(-0.04298, 0.397742, -0.402468), vec3(0.0, 0.369042, -0.398438), MESH_MAT),Triangle(vec3(0.064127, 0.341445, -0.379544), vec3(-0.04298, 0.397742, -0.402468), vec3(0.045652, 0.403664, -0.396194), MESH_MAT),Triangle(vec3(-0.111547, 0.371506, -0.26876), vec3(-0.04298, 0.397742, -0.402468), vec3(-0.067141, 0.341459, -0.37578), MESH_MAT),Triangle(vec3(0.064127, 0.341445, -0.379544), vec3(0.045652, 0.403664, -0.396194), vec3(0.118886, 0.353896, -0.25372), MESH_MAT),Triangle(vec3(-0.111447, 0.528968, -0.378309), vec3(-0.280553, 0.421092, -0.284562), vec3(-0.207264, 0.497387, -0.34865), MESH_MAT),Triangle(vec3(0.207003, 0.506708, -0.35946), vec3(0.295262, 0.433562, -0.291302), vec3(0.109793, 0.528353, -0.3769), MESH_MAT),Triangle(vec3(-0.153416, 0.701143, -0.37639), vec3(-0.162208, 0.658042, -0.403412), vec3(-0.274725, 0.614508, -0.33776), MESH_MAT),Triangle(vec3(0.228729, 0.727074, -0.237354), vec3(0.408331, 0.65779, -0.319708), vec3(0.125586, 0.8489, -0.351199), MESH_MAT),Triangle(vec3(-0.087285, 0.283275, 0.210542), vec3(0.107026, 0.257677, -0.170954), vec3(0.206099, 0.385193, 0.23506), MESH_MAT),Triangle(vec3(0.400522, 0.504134, -0.174586), vec3(0.408331, 0.65779, -0.319708), vec3(0.355827, 0.663179, -0.153664), MESH_MAT),Triangle(vec3(0.118886, 0.353896, -0.25372), vec3(0.295262, 0.433562, -0.291302), vec3(0.400522, 0.504134, -0.174586), MESH_MAT),Triangle(vec3(0.143389, -0.011551, -0.200413), vec3(-0.171167, -0.013261, -0.289646), vec3(0.178364, -0.001195, -0.286764), MESH_MAT),Triangle(vec3(-0.111547, 0.371506, -0.26876), vec3(-0.171167, -0.013261, -0.289646), vec3(-0.099877, 0.263675, -0.148737), MESH_MAT),Triangle(vec3(0.107026, 0.257677, -0.170954), vec3(0.178364, -0.001195, -0.286764), vec3(0.118886, 0.353896, -0.25372), MESH_MAT),Triangle(vec3(-0.111547, 0.371506, -0.26876), vec3(-0.394926, 0.516696, -0.200264), vec3(-0.280553, 0.421092, -0.284562), MESH_MAT),Triangle(vec3(-0.348236, 0.431813, 0.187355), vec3(-0.087285, 0.283275, 0.210542), vec3(0.005809, 0.425213, 0.38968), MESH_MAT),Triangle(vec3(0.206099, 0.385193, 0.23506), vec3(0.005809, 0.425213, 0.38968), vec3(-0.087285, 0.283275, 0.210542), MESH_MAT),Triangle(vec3(-0.093502, 0.928684, 0.249446), vec3(0.238038, 0.912358, -0.064413), vec3(-0.000876, 0.951055, -0.095386), MESH_MAT),Triangle(vec3(-0.080927, 0.675597, 0.443123), vec3(-0.348236, 0.431813, 0.187355), vec3(0.005809, 0.425213, 0.38968), MESH_MAT),Triangle(vec3(0.422259, 0.664239, 0.227806), vec3(-0.080927, 0.675597, 0.443123), vec3(0.005809, 0.425213, 0.38968), MESH_MAT),Triangle(vec3(-0.000876, 0.951055, -0.095386), vec3(-0.232804, 0.913283, -0.07611), vec3(-0.093502, 0.928684, 0.249446), MESH_MAT),Triangle(vec3(-0.080927, 0.675597, 0.443123), vec3(0.359312, 0.809934, 0.190415), vec3(-0.093502, 0.928684, 0.249446), MESH_MAT),Triangle(vec3(-0.390749, 0.750821, -0.047924), vec3(-0.230119, 0.726441, -0.236319), vec3(-0.358732, 0.664522, -0.156321), MESH_MAT),Triangle(vec3(-0.080927, 0.675597, 0.443123), vec3(-0.093502, 0.928684, 0.249446), vec3(-0.385411, 0.774394, 0.171219), MESH_MAT),Triangle(vec3(-0.093502, 0.928684, 0.249446), vec3(-0.232804, 0.913283, -0.07611), vec3(-0.385411, 0.774394, 0.171219), MESH_MAT),Triangle(vec3(0.390749, 0.750821, -0.047924), vec3(0.228729, 0.727074, -0.237354), vec3(0.238038, 0.912358, -0.064413), MESH_MAT),Triangle(vec3(-0.000876, 0.951055, -0.095386), vec3(-0.230119, 0.726441, -0.236319), vec3(-0.232804, 0.913283, -0.07611), MESH_MAT),Triangle(vec3(-0.000876, 0.951055, -0.095386), vec3(0.228729, 0.727074, -0.237354), vec3(0.001246, 0.678252, -0.316118), MESH_MAT),Triangle(vec3(-0.358732, 0.664522, -0.156321), vec3(-0.430741, 0.635244, 0.096042), vec3(-0.390749, 0.750821, -0.047924), MESH_MAT),Triangle(vec3(0.355827, 0.663179, -0.153664), vec3(0.425606, 0.644591, 0.095939), vec3(0.400522, 0.504134, -0.174586), MESH_MAT),Triangle(vec3(0.354444, 0.427229, 0.069641), vec3(0.118886, 0.353896, -0.25372), vec3(0.400522, 0.504134, -0.174586), MESH_MAT),Triangle(vec3(0.359312, 0.809934, 0.190415), vec3(0.422259, 0.664239, 0.227806), vec3(0.425606, 0.644591, 0.095939), MESH_MAT),Triangle(vec3(0.206099, 0.385193, 0.23506), vec3(0.107026, 0.257677, -0.170954), vec3(0.118886, 0.353896, -0.25372), MESH_MAT),Triangle(vec3(-0.269783, 0.391343, 0.07924), vec3(-0.111547, 0.371506, -0.26876), vec3(-0.099877, 0.263675, -0.148737), MESH_MAT),Triangle(vec3(0.626597, 0.462337, 0.231018), vec3(0.605289, 0.621201, 0.222109), vec3(0.681625, 0.619507, 0.222366), MESH_MAT),Triangle(vec3(0.206099, 0.385193, 0.23506), vec3(0.354444, 0.427229, 0.069641), vec3(0.385843, 0.40248, 0.161723), MESH_MAT),Triangle(vec3(-0.087285, 0.283275, 0.210542), vec3(-0.348236, 0.431813, 0.187355), vec3(-0.269783, 0.391343, 0.07924), MESH_MAT),Triangle(vec3(-0.425889, 0.462587, 0.146546), vec3(-0.589788, 0.453912, 0.198183), vec3(-0.571347, 0.483608, 0.229016), MESH_MAT),Triangle(vec3(-0.655388, 0.682794, 0.215691), vec3(-0.492634, 0.611389, 0.179686), vec3(-0.605856, 0.619805, 0.222295), MESH_MAT),Triangle(vec3(0.354444, 0.427229, 0.069641), vec3(0.573507, 0.486901, 0.21894), vec3(0.626597, 0.462337, 0.231018), MESH_MAT),Triangle(vec3(-0.605856, 0.619805, 0.222295), vec3(-0.571347, 0.483608, 0.229016), vec3(-0.589788, 0.453912, 0.198183), MESH_MAT),Triangle(vec3(-0.348236, 0.431813, 0.187355), vec3(-0.589788, 0.453912, 0.198183), vec3(-0.352066, 0.423646, 0.062407), MESH_MAT),Triangle(vec3(-0.395389, 0.515025, 0.15448), vec3(-0.352066, 0.423646, 0.062407), vec3(-0.425889, 0.462587, 0.146546), MESH_MAT),Triangle(vec3(0.424844, 0.461658, 0.147897), vec3(0.354444, 0.427229, 0.069641), vec3(0.397961, 0.51422, 0.154137), MESH_MAT),Triangle(vec3(-0.430741, 0.635244, 0.096042), vec3(-0.352066, 0.423646, 0.062407), vec3(-0.395389, 0.515025, 0.15448), MESH_MAT),Triangle(vec3(0.397961, 0.51422, 0.154137), vec3(0.572193, 0.709347, 0.176395), vec3(0.491707, 0.613633, 0.177227), MESH_MAT),Triangle(vec3(0.573507, 0.486901, 0.21894), vec3(0.354444, 0.427229, 0.069641), vec3(0.424844, 0.461658, 0.147897), MESH_MAT),Triangle(vec3(0.424844, 0.461658, 0.147897), vec3(0.397961, 0.51422, 0.154137), vec3(0.491707, 0.613633, 0.177227), MESH_MAT),Triangle(vec3(0.491707, 0.613633, 0.177227), vec3(0.605289, 0.621201, 0.222109), vec3(0.573507, 0.486901, 0.21894), MESH_MAT),Triangle(vec3(-0.416923, 0.638911, 0.195618), vec3(-0.612544, 0.457862, 0.273501), vec3(-0.348236, 0.431813, 0.187355), MESH_MAT),Triangle(vec3(0.385843, 0.40248, 0.161723), vec3(0.354444, 0.427229, 0.069641), vec3(0.626597, 0.462337, 0.231018), MESH_MAT),Triangle(vec3(-0.589788, 0.453912, 0.198183), vec3(-0.612544, 0.457862, 0.273501), vec3(-0.655388, 0.682794, 0.215691), MESH_MAT),Triangle(vec3(0.681625, 0.619507, 0.222366), vec3(0.572193, 0.709347, 0.176395), vec3(0.611595, 0.707537, 0.275748), MESH_MAT),Triangle(vec3(0.572193, 0.709347, 0.176395), vec3(0.425606, 0.644591, 0.095939), vec3(0.611595, 0.707537, 0.275748), MESH_MAT),Triangle(vec3(-0.430741, 0.635244, 0.096042), vec3(-0.613501, 0.703207, 0.276414), vec3(-0.416923, 0.638911, 0.195618), MESH_MAT),Triangle(vec3(0.385843, 0.40248, 0.161723), vec3(0.611595, 0.707537, 0.275748), vec3(0.422259, 0.664239, 0.227806), MESH_MAT),Triangle(vec3(-0.175781, 0.720605, -0.308594), vec3(-0.148134, 0.645054, -0.40256), vec3(-0.233546, 0.61699, -0.384061), MESH_MAT),Triangle(vec3(0.175781, 0.720605, -0.308594), vec3(0.273437, 0.681542, -0.289063), vec3(0.233309, 0.617333, -0.38407), MESH_MAT),Triangle(vec3(0.002234, 0.648687, -0.404854), vec3(-0.099075, 0.614842, -0.380184), vec3(-0.153416, 0.701143, -0.37639), MESH_MAT),Triangle(vec3(-0.274725, 0.614508, -0.33776), vec3(-0.400736, 0.663557, -0.315983), vec3(-0.126488, 0.790882, -0.425327), MESH_MAT),Triangle(vec3(0.408331, 0.65779, -0.319708), vec3(0.295262, 0.433562, -0.291302), vec3(0.271579, 0.569159, -0.341605), MESH_MAT),Triangle(vec3(-0.111447, 0.528968, -0.378309), vec3(-0.099075, 0.614842, -0.380184), vec3(0.002234, 0.648687, -0.404854), MESH_MAT),Triangle(vec3(0.064127, 0.341445, -0.379544), vec3(0.178364, -0.001195, -0.286764), vec3(0.049287, 0.097595, -0.364454), MESH_MAT),Triangle(vec3(-0.047467, 0.06566, -0.351474), vec3(-0.067141, 0.341459, -0.37578), vec3(0.001755, 0.296561, -0.381233), MESH_MAT),Triangle(vec3(-0.230119, 0.726441, -0.236319), vec3(-0.125314, 0.848878, -0.350857), vec3(-0.400736, 0.663557, -0.315983), MESH_MAT),Triangle(vec3(0.228729, 0.727074, -0.237354), vec3(0.355827, 0.663179, -0.153664), vec3(0.408331, 0.65779, -0.319708), MESH_MAT),Triangle(vec3(-0.087285, 0.283275, 0.210542), vec3(-0.000141, 0.215137, -0.153545), vec3(0.107026, 0.257677, -0.170954), MESH_MAT),Triangle(vec3(-0.093502, 0.928684, 0.249446), vec3(0.359312, 0.809934, 0.190415), vec3(0.238038, 0.912358, -0.064413), MESH_MAT),Triangle(vec3(-0.080927, 0.675597, 0.443123), vec3(0.422259, 0.664239, 0.227806), vec3(0.359312, 0.809934, 0.190415), MESH_MAT),Triangle(vec3(-0.390749, 0.750821, -0.047924), vec3(-0.232804, 0.913283, -0.07611), vec3(-0.230119, 0.726441, -0.236319), MESH_MAT),Triangle(vec3(0.390749, 0.750821, -0.047924), vec3(0.355827, 0.663179, -0.153664), vec3(0.228729, 0.727074, -0.237354), MESH_MAT),Triangle(vec3(-0.000876, 0.951055, -0.095386), vec3(0.001246, 0.678252, -0.316118), vec3(-0.230119, 0.726441, -0.236319), MESH_MAT),Triangle(vec3(-0.000876, 0.951055, -0.095386), vec3(0.238038, 0.912358, -0.064413), vec3(0.228729, 0.727074, -0.237354), MESH_MAT),Triangle(vec3(-0.358732, 0.664522, -0.156321), vec3(-0.394926, 0.516696, -0.200264), vec3(-0.430741, 0.635244, 0.096042), MESH_MAT),Triangle(vec3(0.355827, 0.663179, -0.153664), vec3(0.390749, 0.750821, -0.047924), vec3(0.425606, 0.644591, 0.095939), MESH_MAT),Triangle(vec3(0.354444, 0.427229, 0.069641), vec3(0.206099, 0.385193, 0.23506), vec3(0.118886, 0.353896, -0.25372), MESH_MAT),Triangle(vec3(-0.269783, 0.391343, 0.07924), vec3(-0.394926, 0.516696, -0.200264), vec3(-0.111547, 0.371506, -0.26876), MESH_MAT),Triangle(vec3(0.626597, 0.462337, 0.231018), vec3(0.573507, 0.486901, 0.21894), vec3(0.605289, 0.621201, 0.222109), MESH_MAT),Triangle(vec3(-0.425889, 0.462587, 0.146546), vec3(-0.352066, 0.423646, 0.062407), vec3(-0.589788, 0.453912, 0.198183), MESH_MAT),Triangle(vec3(-0.655388, 0.682794, 0.215691), vec3(-0.430741, 0.635244, 0.096042), vec3(-0.492634, 0.611389, 0.179686), MESH_MAT),Triangle(vec3(-0.348236, 0.431813, 0.187355), vec3(-0.612544, 0.457862, 0.273501), vec3(-0.589788, 0.453912, 0.198183), MESH_MAT),Triangle(vec3(-0.416923, 0.638911, 0.195618), vec3(-0.613501, 0.703207, 0.276414), vec3(-0.612544, 0.457862, 0.273501), MESH_MAT),Triangle(vec3(0.516567, -0.010352, -0.516567), vec3(0.516567, -0.010352, 0.516567), vec3(0.516567, -1.811388, 0.516567), MESH_MAT),Triangle(vec3(0.516567, -0.010352, 0.516567), vec3(-0.516567, -0.010352, 0.516567), vec3(-0.516567, -1.811388, 0.516567), MESH_MAT),Triangle(vec3(-0.516567, -0.010352, 0.516567), vec3(-0.516567, -0.010352, -0.516567), vec3(-0.516567, -1.811388, -0.516567), MESH_MAT),Triangle(vec3(-0.516567, -0.010352, -0.516567), vec3(0.516567, -0.010352, -0.516567), vec3(0.516567, -1.811388, -0.516567), MESH_MAT),Triangle(vec3(0.516567, -0.010352, 0.516567), vec3(0.516567, -0.010352, -0.516567), vec3(-0.516567, -0.010352, -0.516567), MESH_MAT)\n);\n    // Doesn't matter since we're in a box\nvec3 sky_color(vec3 d) {\n    return vec3(0.0);\n}\n\n// basic camera ray\nRay camera(vec2 ndc) {\n    Ray cam; \n    cam.origin    = vec3(0.0, 0.5, -1.2);\n    cam.direction = normalize(vec3(ndc, 1.0));\n    \n    return cam;\n}\n#endif\n\n#ifdef SCENE_CORNELL_2_TEAPOT\n\n#define LIGHT_POS vec3(0.0, 2.2, 0.0)\n#define LIGHT_RADIUS 0.5\n#define LIGHT_STRENGTH 40.0\n#define LIGHT_COLOR vec3(1.0, 1.0, 1.0)\n\n#define N_SPHERES 7\nconst Sphere SPHERES[N_SPHERES] = Sphere[](\n    Sphere(vec3(0.0, -1000.5, 0.0), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 1.0)), // Ground\n    Sphere(vec3(1001.5, 0.0, 0.0), 1000.0, Material(vec3(0.0, 0.8, 0.0), vec3(0.0, 0.0, 0.0), 1.0)), // Right wall\n    Sphere(vec3(-1001.5, 0.0, 0.0), 1000.0, Material(vec3(0.8, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0)), // Left wall\n    Sphere(vec3(0.0, 0.0, 1001), 1000.0, Material(vec3(0.0, 0.0, 0.8), vec3(0.0, 0.0, 0.0), 1.0)), // Back wall\n    Sphere(vec3(0.0, 0.0, -1002), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 1.0)), // Front wall\n    Sphere(vec3(0.0, 1002, 0.0), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 1.0)), // Ceiling\n\n    Sphere(LIGHT_POS, LIGHT_RADIUS, Material(vec3(0.0, 0.0, 0.0), LIGHT_COLOR * LIGHT_STRENGTH, 1.0)) // Light sphere\n);\n\n#define MESH_MAT Material(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0), 1.0)\n#define N_TRIANGLES 186\nconst Triangle TRIS[N_TRIANGLES] = Triangle[](\n    Triangle(vec3(-0.249307, 0.599072, -0.249307), vec3(-0.138359, 0.60751, -0.345989), vec3(-0.323411, 0.627775, -0.164723), MESH_MAT),Triangle(vec3(-0.349958, 0.600004, -0.057812), vec3(-0.323411, 0.627775, -0.164723), vec3(-0.351764, 0.62555, 0.039078), MESH_MAT),Triangle(vec3(0.249307, 0.599072, -0.249307), vec3(0.345989, 0.60751, -0.138359), vec3(0.164723, 0.627775, -0.323411), MESH_MAT),Triangle(vec3(0.057812, 0.600004, -0.349958), vec3(0.164723, 0.627775, -0.323411), vec3(-0.039078, 0.62555, -0.351764), MESH_MAT),Triangle(vec3(0.249307, 0.599072, 0.249307), vec3(0.138359, 0.60751, 0.345989), vec3(0.323411, 0.627775, 0.164723), MESH_MAT),Triangle(vec3(0.349958, 0.600004, 0.057812), vec3(0.323411, 0.627775, 0.164723), vec3(0.351764, 0.62555, -0.039078), MESH_MAT),Triangle(vec3(-0.249307, 0.599072, 0.249307), vec3(-0.345989, 0.60751, 0.138359), vec3(-0.164723, 0.627775, 0.323411), MESH_MAT),Triangle(vec3(-0.057812, 0.600004, 0.349958), vec3(-0.164723, 0.627775, 0.323411), vec3(0.039078, 0.62555, 0.351764), MESH_MAT),Triangle(vec3(-0.138359, 0.60751, -0.345989), vec3(0.0, 0.371287, -0.476709), vec3(-0.255161, 0.25326, -0.452322), MESH_MAT),Triangle(vec3(-0.49201, 0.163631, -0.095757), vec3(-0.439659, 0.318825, -0.231298), vec3(-0.351552, 0.153297, -0.351552), MESH_MAT),Triangle(vec3(-0.476709, 0.371287, 0.0), vec3(-0.323411, 0.627775, -0.164723), vec3(-0.439659, 0.318825, -0.231298), MESH_MAT),Triangle(vec3(0.345989, 0.60751, -0.138359), vec3(0.476709, 0.371287, 0.0), vec3(0.452322, 0.25326, -0.255161), MESH_MAT),Triangle(vec3(0.231298, 0.318825, -0.439659), vec3(0.426294, 0.147658, -0.250751), vec3(0.228177, 0.153246, -0.441203), MESH_MAT),Triangle(vec3(-0.054437, 0.147319, -0.490102), vec3(0.231298, 0.318825, -0.439659), vec3(0.228177, 0.153246, -0.441203), MESH_MAT),Triangle(vec3(0.0, 0.371287, -0.476709), vec3(0.164723, 0.627775, -0.323411), vec3(0.231298, 0.318825, -0.439659), MESH_MAT),Triangle(vec3(0.138359, 0.60751, 0.345989), vec3(0.0, 0.252701, 0.515607), vec3(0.255161, 0.25326, 0.452322), MESH_MAT),Triangle(vec3(0.439659, 0.318825, 0.231298), vec3(0.250751, 0.147658, 0.426294), vec3(0.396154, 0.153873, 0.290729), MESH_MAT),Triangle(vec3(0.482774, 0.146905, 0.098954), vec3(0.439659, 0.318825, 0.231298), vec3(0.396154, 0.153873, 0.290729), MESH_MAT),Triangle(vec3(0.500377, 0.222735, 0.024836), vec3(0.439659, 0.318825, 0.231298), vec3(0.482774, 0.146905, 0.098954), MESH_MAT),Triangle(vec3(0.476709, 0.371287, 0.0), vec3(0.323411, 0.627775, 0.164723), vec3(0.439659, 0.318825, 0.231298), MESH_MAT),Triangle(vec3(-0.345989, 0.60751, 0.138359), vec3(-0.476709, 0.371287, 0.0), vec3(-0.452322, 0.25326, 0.255161), MESH_MAT),Triangle(vec3(-0.231298, 0.318825, 0.439659), vec3(-0.426294, 0.147658, 0.250751), vec3(-0.228177, 0.153246, 0.441203), MESH_MAT),Triangle(vec3(0.0, 0.252701, 0.515607), vec3(-0.231298, 0.318825, 0.439659), vec3(-0.228177, 0.153246, 0.441203), MESH_MAT),Triangle(vec3(0.0, 0.252701, 0.515607), vec3(-0.164723, 0.627775, 0.323411), vec3(-0.231298, 0.318825, 0.439659), MESH_MAT),Triangle(vec3(-0.172714, 0.031555, -0.334116), vec3(-0.054437, 0.147319, -0.490102), vec3(0.0592, 0.012201, -0.355237), MESH_MAT),Triangle(vec3(-0.351552, 0.153297, -0.351552), vec3(-0.255161, 0.25326, -0.452322), vec3(-0.054437, 0.147319, -0.490102), MESH_MAT),Triangle(vec3(-0.321398, 0.018498, -0.176568), vec3(-0.351552, 0.153297, -0.351552), vec3(-0.172714, 0.031555, -0.334116), MESH_MAT),Triangle(vec3(0.452322, 0.25326, -0.255161), vec3(0.500377, 0.222735, 0.024836), vec3(0.482774, 0.146905, 0.098954), MESH_MAT),Triangle(vec3(0.26619, 0.03156, -0.26619), vec3(0.426294, 0.147658, -0.250751), vec3(0.35943, 0.018277, -0.069233), MESH_MAT),Triangle(vec3(0.228177, 0.153246, -0.441203), vec3(0.26619, 0.03156, -0.26619), vec3(0.0592, 0.012201, -0.355237), MESH_MAT),Triangle(vec3(0.250751, 0.147658, 0.426294), vec3(0.0, 0.252701, 0.515607), vec3(0.055529, 0.007041, 0.350784), MESH_MAT),Triangle(vec3(0.301283, 0.015293, 0.216175), vec3(0.250751, 0.147658, 0.426294), vec3(0.055529, 0.007041, 0.350784), MESH_MAT),Triangle(vec3(0.482774, 0.146905, 0.098954), vec3(0.301283, 0.015293, 0.216175), vec3(0.35943, 0.018277, -0.069233), MESH_MAT),Triangle(vec3(-0.426294, 0.147658, 0.250751), vec3(-0.49201, 0.163631, -0.095757), vec3(-0.355089, 0.011388, -0.006513), MESH_MAT),Triangle(vec3(-0.176568, 0.018498, 0.321398), vec3(-0.426294, 0.147658, 0.250751), vec3(-0.334116, 0.031555, 0.172714), MESH_MAT),Triangle(vec3(0.0, 0.252701, 0.515607), vec3(-0.228177, 0.153246, 0.441203), vec3(0.055529, 0.007041, 0.350784), MESH_MAT),Triangle(vec3(0.736081, 0.404985, -0.04904), vec3(0.709511, 0.529378, -0.048025), vec3(0.737858, 0.474215, 0.050934), MESH_MAT),Triangle(vec3(0.378397, 0.555335, -0.040293), vec3(0.374749, 0.569049, 0.029679), vec3(0.709511, 0.529378, -0.048025), MESH_MAT),Triangle(vec3(0.399265, 0.507753, -0.030793), vec3(0.709511, 0.529378, -0.048025), vec3(0.678734, 0.497833, -0.049), MESH_MAT),Triangle(vec3(0.683743, 0.511723, 0.056311), vec3(0.399265, 0.507753, -0.030793), vec3(0.678734, 0.497833, -0.049), MESH_MAT),Triangle(vec3(0.374749, 0.569049, 0.029679), vec3(0.683743, 0.511723, 0.056311), vec3(0.709511, 0.529378, -0.048025), MESH_MAT),Triangle(vec3(0.477956, 0.158239, -0.037447), vec3(0.694117, 0.29403, 0.040552), vec3(0.474552, 0.152372, 0.024304), MESH_MAT),Triangle(vec3(0.736081, 0.404985, -0.04904), vec3(0.737858, 0.474215, 0.050934), vec3(0.694117, 0.29403, 0.040552), MESH_MAT),Triangle(vec3(0.496787, 0.216419, -0.038448), vec3(0.643977, 0.289417, -0.058055), vec3(0.477956, 0.158239, -0.037447), MESH_MAT),Triangle(vec3(0.500377, 0.222735, 0.024836), vec3(0.643977, 0.289417, -0.058055), vec3(0.496787, 0.216419, -0.038448), MESH_MAT),Triangle(vec3(0.682994, 0.450033, 0.021708), vec3(0.678734, 0.497833, -0.049), vec3(0.643977, 0.289417, -0.058055), MESH_MAT),Triangle(vec3(0.683743, 0.511723, 0.056311), vec3(0.682994, 0.450033, 0.021708), vec3(0.737858, 0.474215, 0.050934), MESH_MAT),Triangle(vec3(0.694117, 0.29403, 0.040552), vec3(0.500377, 0.222735, 0.024836), vec3(0.474552, 0.152372, 0.024304), MESH_MAT),Triangle(vec3(-0.829186, 0.618599, -0.032608), vec3(-0.720253, 0.520742, -0.040315), vec3(-0.847829, 0.619009, 0.025431), MESH_MAT),Triangle(vec3(-0.671274, 0.603165, -0.026947), vec3(-0.720253, 0.520742, -0.040315), vec3(-0.829186, 0.618599, -0.032608), MESH_MAT),Triangle(vec3(-0.580066, 0.365267, -0.091783), vec3(-0.598754, 0.243296, -0.094482), vec3(-0.671274, 0.603165, -0.026947), MESH_MAT),Triangle(vec3(-0.425754, 0.241713, -0.132374), vec3(-0.598754, 0.243296, -0.094482), vec3(-0.580066, 0.365267, -0.091783), MESH_MAT),Triangle(vec3(-0.426234, 0.360888, 0.0), vec3(-0.580066, 0.365267, -0.091783), vec3(-0.572346, 0.387626, 0.073487), MESH_MAT),Triangle(vec3(-0.707075, 0.604365, 0.027655), vec3(-0.572346, 0.387626, 0.073487), vec3(-0.671274, 0.603165, -0.026947), MESH_MAT),Triangle(vec3(-0.712237, 0.530236, 0.047183), vec3(-0.707075, 0.604365, 0.027655), vec3(-0.847829, 0.619009, 0.025431), MESH_MAT),Triangle(vec3(-0.629229, 0.282696, 0.084402), vec3(-0.572346, 0.387626, 0.073487), vec3(-0.707075, 0.604365, 0.027655), MESH_MAT),Triangle(vec3(-0.629229, 0.282696, 0.084402), vec3(-0.427318, 0.190885, 0.119844), vec3(-0.572346, 0.387626, 0.073487), MESH_MAT),Triangle(vec3(-0.629229, 0.282696, 0.084402), vec3(-0.712237, 0.530236, 0.047183), vec3(-0.720253, 0.520742, -0.040315), MESH_MAT),Triangle(vec3(-0.598754, 0.243296, -0.094482), vec3(-0.427318, 0.190885, 0.119844), vec3(-0.629229, 0.282696, 0.084402), MESH_MAT),Triangle(vec3(-0.043697, 0.677187, -0.015062), vec3(-0.060866, 0.765399, -0.077808), vec3(0.015062, 0.668629, -0.043697), MESH_MAT),Triangle(vec3(-0.077626, 0.773918, 0.062203), vec3(-0.060866, 0.765399, -0.077808), vec3(-0.043697, 0.677187, -0.015062), MESH_MAT),Triangle(vec3(0.015062, 0.668629, -0.043697), vec3(0.077808, 0.765399, -0.060866), vec3(0.045294, 0.688527, 0.011482), MESH_MAT),Triangle(vec3(-0.060866, 0.765399, -0.077808), vec3(0.077808, 0.765399, -0.060866), vec3(0.015062, 0.668629, -0.043697), MESH_MAT),Triangle(vec3(-0.060866, 0.765399, -0.077808), vec3(-0.077626, 0.773918, 0.062203), vec3(0.077808, 0.765399, -0.060866), MESH_MAT),Triangle(vec3(0.000471, 0.701722, 0.048582), vec3(-0.030383, 0.67022, 0.047763), vec3(0.045294, 0.688527, 0.011482), MESH_MAT),Triangle(vec3(0.045294, 0.688527, 0.011482), vec3(0.060866, 0.765399, 0.077808), vec3(0.000471, 0.701722, 0.048582), MESH_MAT),Triangle(vec3(0.077808, 0.765399, -0.060866), vec3(0.060866, 0.765399, 0.077808), vec3(0.045294, 0.688527, 0.011482), MESH_MAT),Triangle(vec3(0.077808, 0.765399, -0.060866), vec3(-0.077626, 0.773918, 0.062203), vec3(0.060866, 0.765399, 0.077808), MESH_MAT),Triangle(vec3(0.000471, 0.701722, 0.048582), vec3(-0.077626, 0.773918, 0.062203), vec3(-0.043697, 0.677187, -0.015062), MESH_MAT),Triangle(vec3(0.060866, 0.765399, 0.077808), vec3(-0.077626, 0.773918, 0.062203), vec3(0.000471, 0.701722, 0.048582), MESH_MAT),Triangle(vec3(-0.197995, 0.611249, -0.270095), vec3(0.0, 0.6, -0.325), vec3(-0.103688, 0.6, -0.308672), MESH_MAT),Triangle(vec3(-0.043697, 0.677187, -0.015062), vec3(0.104502, 0.610348, -0.316797), vec3(-0.197995, 0.611249, -0.270095), MESH_MAT),Triangle(vec3(-0.316797, 0.610348, -0.104502), vec3(-0.197995, 0.611249, -0.270095), vec3(-0.263016, 0.6, -0.193024), MESH_MAT),Triangle(vec3(-0.316797, 0.610348, -0.104502), vec3(-0.030383, 0.67022, 0.047763), vec3(-0.197995, 0.611249, -0.270095), MESH_MAT),Triangle(vec3(0.270095, 0.602691, -0.197995), vec3(0.325, 0.6, 0.0), vec3(0.308672, 0.6, -0.103688), MESH_MAT),Triangle(vec3(0.015062, 0.668629, -0.043697), vec3(0.316797, 0.610348, 0.104502), vec3(0.270095, 0.602691, -0.197995), MESH_MAT),Triangle(vec3(0.104502, 0.610348, -0.316797), vec3(0.270095, 0.602691, -0.197995), vec3(0.193024, 0.6, -0.263016), MESH_MAT),Triangle(vec3(0.104502, 0.610348, -0.316797), vec3(-0.043697, 0.677187, -0.015062), vec3(0.270095, 0.602691, -0.197995), MESH_MAT),Triangle(vec3(0.197995, 0.611249, 0.270095), vec3(0.0, 0.6, 0.325), vec3(0.103688, 0.6, 0.308672), MESH_MAT),Triangle(vec3(-0.030383, 0.67022, 0.047763), vec3(-0.104502, 0.610348, 0.316797), vec3(0.197995, 0.611249, 0.270095), MESH_MAT),Triangle(vec3(0.316797, 0.610348, 0.104502), vec3(0.197995, 0.611249, 0.270095), vec3(0.263016, 0.6, 0.193024), MESH_MAT),Triangle(vec3(0.316797, 0.610348, 0.104502), vec3(0.015062, 0.668629, -0.043697), vec3(0.197995, 0.611249, 0.270095), MESH_MAT),Triangle(vec3(0.015062, 0.668629, -0.043697), vec3(0.045294, 0.688527, 0.011482), vec3(-0.030383, 0.67022, 0.047763), MESH_MAT),Triangle(vec3(-0.270095, 0.611249, 0.197995), vec3(-0.325, 0.6, 0.0), vec3(-0.308672, 0.6, 0.103688), MESH_MAT),Triangle(vec3(-0.030383, 0.67022, 0.047763), vec3(-0.316797, 0.610348, -0.104502), vec3(-0.270095, 0.611249, 0.197995), MESH_MAT),Triangle(vec3(-0.104502, 0.610348, 0.316797), vec3(-0.270095, 0.611249, 0.197995), vec3(-0.193024, 0.6, 0.263016), MESH_MAT),Triangle(vec3(-0.104502, 0.610348, 0.316797), vec3(-0.030383, 0.67022, 0.047763), vec3(-0.270095, 0.611249, 0.197995), MESH_MAT),Triangle(vec3(-0.039078, 0.62555, -0.351764), vec3(-0.138359, 0.60751, -0.345989), vec3(0.057812, 0.600004, -0.349958), MESH_MAT),Triangle(vec3(-0.349958, 0.600004, -0.057812), vec3(-0.249307, 0.599072, -0.249307), vec3(-0.323411, 0.627775, -0.164723), MESH_MAT),Triangle(vec3(0.351764, 0.62555, -0.039078), vec3(0.345989, 0.60751, -0.138359), vec3(0.349958, 0.600004, 0.057812), MESH_MAT),Triangle(vec3(0.057812, 0.600004, -0.349958), vec3(0.249307, 0.599072, -0.249307), vec3(0.164723, 0.627775, -0.323411), MESH_MAT),Triangle(vec3(0.039078, 0.62555, 0.351764), vec3(0.138359, 0.60751, 0.345989), vec3(-0.057812, 0.600004, 0.349958), MESH_MAT),Triangle(vec3(0.349958, 0.600004, 0.057812), vec3(0.249307, 0.599072, 0.249307), vec3(0.323411, 0.627775, 0.164723), MESH_MAT),Triangle(vec3(-0.351764, 0.62555, 0.039078), vec3(-0.345989, 0.60751, 0.138359), vec3(-0.349958, 0.600004, -0.057812), MESH_MAT),Triangle(vec3(-0.057812, 0.600004, 0.349958), vec3(-0.249307, 0.599072, 0.249307), vec3(-0.164723, 0.627775, 0.323411), MESH_MAT),Triangle(vec3(-0.255161, 0.25326, -0.452322), vec3(0.0, 0.371287, -0.476709), vec3(-0.054437, 0.147319, -0.490102), MESH_MAT),Triangle(vec3(-0.138359, 0.60751, -0.345989), vec3(-0.039078, 0.62555, -0.351764), vec3(0.0, 0.371287, -0.476709), MESH_MAT),Triangle(vec3(-0.439659, 0.318825, -0.231298), vec3(-0.255161, 0.25326, -0.452322), vec3(-0.351552, 0.153297, -0.351552), MESH_MAT),Triangle(vec3(-0.439659, 0.318825, -0.231298), vec3(-0.323411, 0.627775, -0.164723), vec3(-0.255161, 0.25326, -0.452322), MESH_MAT),Triangle(vec3(-0.323411, 0.627775, -0.164723), vec3(-0.138359, 0.60751, -0.345989), vec3(-0.255161, 0.25326, -0.452322), MESH_MAT),Triangle(vec3(-0.49201, 0.163631, -0.095757), vec3(-0.476709, 0.371287, 0.0), vec3(-0.439659, 0.318825, -0.231298), MESH_MAT),Triangle(vec3(-0.476709, 0.371287, 0.0), vec3(-0.351764, 0.62555, 0.039078), vec3(-0.323411, 0.627775, -0.164723), MESH_MAT),Triangle(vec3(0.452322, 0.25326, -0.255161), vec3(0.476709, 0.371287, 0.0), vec3(0.500377, 0.222735, 0.024836), MESH_MAT),Triangle(vec3(0.345989, 0.60751, -0.138359), vec3(0.351764, 0.62555, -0.039078), vec3(0.476709, 0.371287, 0.0), MESH_MAT),Triangle(vec3(0.231298, 0.318825, -0.439659), vec3(0.452322, 0.25326, -0.255161), vec3(0.426294, 0.147658, -0.250751), MESH_MAT),Triangle(vec3(0.231298, 0.318825, -0.439659), vec3(0.164723, 0.627775, -0.323411), vec3(0.452322, 0.25326, -0.255161), MESH_MAT),Triangle(vec3(0.164723, 0.627775, -0.323411), vec3(0.345989, 0.60751, -0.138359), vec3(0.452322, 0.25326, -0.255161), MESH_MAT),Triangle(vec3(-0.054437, 0.147319, -0.490102), vec3(0.0, 0.371287, -0.476709), vec3(0.231298, 0.318825, -0.439659), MESH_MAT),Triangle(vec3(0.0, 0.371287, -0.476709), vec3(-0.039078, 0.62555, -0.351764), vec3(0.164723, 0.627775, -0.323411), MESH_MAT),Triangle(vec3(0.138359, 0.60751, 0.345989), vec3(0.039078, 0.62555, 0.351764), vec3(0.0, 0.252701, 0.515607), MESH_MAT),Triangle(vec3(0.439659, 0.318825, 0.231298), vec3(0.255161, 0.25326, 0.452322), vec3(0.250751, 0.147658, 0.426294), MESH_MAT),Triangle(vec3(0.439659, 0.318825, 0.231298), vec3(0.323411, 0.627775, 0.164723), vec3(0.255161, 0.25326, 0.452322), MESH_MAT),Triangle(vec3(0.323411, 0.627775, 0.164723), vec3(0.138359, 0.60751, 0.345989), vec3(0.255161, 0.25326, 0.452322), MESH_MAT),Triangle(vec3(0.500377, 0.222735, 0.024836), vec3(0.476709, 0.371287, 0.0), vec3(0.439659, 0.318825, 0.231298), MESH_MAT),Triangle(vec3(0.476709, 0.371287, 0.0), vec3(0.351764, 0.62555, -0.039078), vec3(0.323411, 0.627775, 0.164723), MESH_MAT),Triangle(vec3(-0.452322, 0.25326, 0.255161), vec3(-0.476709, 0.371287, 0.0), vec3(-0.49201, 0.163631, -0.095757), MESH_MAT),Triangle(vec3(-0.345989, 0.60751, 0.138359), vec3(-0.351764, 0.62555, 0.039078), vec3(-0.476709, 0.371287, 0.0), MESH_MAT),Triangle(vec3(-0.231298, 0.318825, 0.439659), vec3(-0.452322, 0.25326, 0.255161), vec3(-0.426294, 0.147658, 0.250751), MESH_MAT),Triangle(vec3(-0.231298, 0.318825, 0.439659), vec3(-0.164723, 0.627775, 0.323411), vec3(-0.452322, 0.25326, 0.255161), MESH_MAT),Triangle(vec3(-0.164723, 0.627775, 0.323411), vec3(-0.345989, 0.60751, 0.138359), vec3(-0.452322, 0.25326, 0.255161), MESH_MAT),Triangle(vec3(0.0, 0.252701, 0.515607), vec3(0.039078, 0.62555, 0.351764), vec3(-0.164723, 0.627775, 0.323411), MESH_MAT),Triangle(vec3(-0.172714, 0.031555, -0.334116), vec3(-0.351552, 0.153297, -0.351552), vec3(-0.054437, 0.147319, -0.490102), MESH_MAT),Triangle(vec3(-0.49201, 0.163631, -0.095757), vec3(-0.351552, 0.153297, -0.351552), vec3(-0.321398, 0.018498, -0.176568), MESH_MAT),Triangle(vec3(-0.355089, 0.011388, -0.006513), vec3(-0.49201, 0.163631, -0.095757), vec3(-0.321398, 0.018498, -0.176568), MESH_MAT),Triangle(vec3(0.35943, 0.018277, -0.069233), vec3(0.426294, 0.147658, -0.250751), vec3(0.482774, 0.146905, 0.098954), MESH_MAT),Triangle(vec3(0.426294, 0.147658, -0.250751), vec3(0.452322, 0.25326, -0.255161), vec3(0.482774, 0.146905, 0.098954), MESH_MAT),Triangle(vec3(0.26619, 0.03156, -0.26619), vec3(0.228177, 0.153246, -0.441203), vec3(0.426294, 0.147658, -0.250751), MESH_MAT),Triangle(vec3(-0.054437, 0.147319, -0.490102), vec3(0.228177, 0.153246, -0.441203), vec3(0.0592, 0.012201, -0.355237), MESH_MAT),Triangle(vec3(0.250751, 0.147658, 0.426294), vec3(0.255161, 0.25326, 0.452322), vec3(0.0, 0.252701, 0.515607), MESH_MAT),Triangle(vec3(0.301283, 0.015293, 0.216175), vec3(0.396154, 0.153873, 0.290729), vec3(0.250751, 0.147658, 0.426294), MESH_MAT),Triangle(vec3(0.482774, 0.146905, 0.098954), vec3(0.396154, 0.153873, 0.290729), vec3(0.301283, 0.015293, 0.216175), MESH_MAT),Triangle(vec3(-0.334116, 0.031555, 0.172714), vec3(-0.426294, 0.147658, 0.250751), vec3(-0.355089, 0.011388, -0.006513), MESH_MAT),Triangle(vec3(-0.426294, 0.147658, 0.250751), vec3(-0.452322, 0.25326, 0.255161), vec3(-0.49201, 0.163631, -0.095757), MESH_MAT),Triangle(vec3(-0.176568, 0.018498, 0.321398), vec3(-0.228177, 0.153246, 0.441203), vec3(-0.426294, 0.147658, 0.250751), MESH_MAT),Triangle(vec3(0.055529, 0.007041, 0.350784), vec3(-0.228177, 0.153246, 0.441203), vec3(-0.176568, 0.018498, 0.321398), MESH_MAT),Triangle(vec3(0.736081, 0.404985, -0.04904), vec3(0.678734, 0.497833, -0.049), vec3(0.709511, 0.529378, -0.048025), MESH_MAT),Triangle(vec3(0.399265, 0.507753, -0.030793), vec3(0.378397, 0.555335, -0.040293), vec3(0.709511, 0.529378, -0.048025), MESH_MAT),Triangle(vec3(0.683743, 0.511723, 0.056311), vec3(0.678734, 0.497833, -0.049), vec3(0.682994, 0.450033, 0.021708), MESH_MAT),Triangle(vec3(0.683743, 0.511723, 0.056311), vec3(0.396087, 0.514329, 0.042982), vec3(0.399265, 0.507753, -0.030793), MESH_MAT),Triangle(vec3(0.683743, 0.511723, 0.056311), vec3(0.374749, 0.569049, 0.029679), vec3(0.396087, 0.514329, 0.042982), MESH_MAT),Triangle(vec3(0.709511, 0.529378, -0.048025), vec3(0.683743, 0.511723, 0.056311), vec3(0.737858, 0.474215, 0.050934), MESH_MAT),Triangle(vec3(0.477956, 0.158239, -0.037447), vec3(0.643977, 0.289417, -0.058055), vec3(0.694117, 0.29403, 0.040552), MESH_MAT),Triangle(vec3(0.643977, 0.289417, -0.058055), vec3(0.736081, 0.404985, -0.04904), vec3(0.694117, 0.29403, 0.040552), MESH_MAT),Triangle(vec3(0.643977, 0.289417, -0.058055), vec3(0.678734, 0.497833, -0.049), vec3(0.736081, 0.404985, -0.04904), MESH_MAT),Triangle(vec3(0.500377, 0.222735, 0.024836), vec3(0.590879, 0.275795, 0.043794), vec3(0.643977, 0.289417, -0.058055), MESH_MAT),Triangle(vec3(0.590879, 0.275795, 0.043794), vec3(0.682994, 0.450033, 0.021708), vec3(0.643977, 0.289417, -0.058055), MESH_MAT),Triangle(vec3(0.737858, 0.474215, 0.050934), vec3(0.682994, 0.450033, 0.021708), vec3(0.590879, 0.275795, 0.043794), MESH_MAT),Triangle(vec3(0.694117, 0.29403, 0.040552), vec3(0.590879, 0.275795, 0.043794), vec3(0.500377, 0.222735, 0.024836), MESH_MAT),Triangle(vec3(0.694117, 0.29403, 0.040552), vec3(0.737858, 0.474215, 0.050934), vec3(0.590879, 0.275795, 0.043794), MESH_MAT),Triangle(vec3(-0.720253, 0.520742, -0.040315), vec3(-0.598754, 0.243296, -0.094482), vec3(-0.629229, 0.282696, 0.084402), MESH_MAT),Triangle(vec3(-0.425754, 0.241713, -0.132374), vec3(-0.420264, 0.163284, -0.033372), vec3(-0.598754, 0.243296, -0.094482), MESH_MAT),Triangle(vec3(-0.671274, 0.603165, -0.026947), vec3(-0.598754, 0.243296, -0.094482), vec3(-0.720253, 0.520742, -0.040315), MESH_MAT),Triangle(vec3(-0.426234, 0.360888, 0.0), vec3(-0.425754, 0.241713, -0.132374), vec3(-0.580066, 0.365267, -0.091783), MESH_MAT),Triangle(vec3(-0.572346, 0.387626, 0.073487), vec3(-0.580066, 0.365267, -0.091783), vec3(-0.671274, 0.603165, -0.026947), MESH_MAT),Triangle(vec3(-0.572346, 0.387626, 0.073487), vec3(-0.427318, 0.190885, 0.119844), vec3(-0.426234, 0.360888, 0.0), MESH_MAT),Triangle(vec3(-0.712237, 0.530236, 0.047183), vec3(-0.629229, 0.282696, 0.084402), vec3(-0.707075, 0.604365, 0.027655), MESH_MAT),Triangle(vec3(-0.720253, 0.520742, -0.040315), vec3(-0.712237, 0.530236, 0.047183), vec3(-0.847829, 0.619009, 0.025431), MESH_MAT),Triangle(vec3(-0.598754, 0.243296, -0.094482), vec3(-0.420264, 0.163284, -0.033372), vec3(-0.427318, 0.190885, 0.119844), MESH_MAT),Triangle(vec3(-0.829186, 0.618599, -0.032608), vec3(-0.847829, 0.619009, 0.025431), vec3(-0.796838, 0.608175, 0.0), MESH_MAT),Triangle(vec3(-0.70093, 0.60071, -0.00908), vec3(-0.829186, 0.618599, -0.032608), vec3(-0.796838, 0.608175, 0.0), MESH_MAT),Triangle(vec3(-0.70093, 0.60071, -0.00908), vec3(-0.671274, 0.603165, -0.026947), vec3(-0.829186, 0.618599, -0.032608), MESH_MAT),Triangle(vec3(-0.70093, 0.60071, -0.00908), vec3(-0.707075, 0.604365, 0.027655), vec3(-0.671274, 0.603165, -0.026947), MESH_MAT),Triangle(vec3(-0.796838, 0.608175, 0.0), vec3(-0.847829, 0.619009, 0.025431), vec3(-0.707075, 0.604365, 0.027655), MESH_MAT),Triangle(vec3(-0.030383, 0.67022, 0.047763), vec3(0.000471, 0.701722, 0.048582), vec3(-0.043697, 0.677187, -0.015062), MESH_MAT),Triangle(vec3(-0.197995, 0.611249, -0.270095), vec3(0.104502, 0.610348, -0.316797), vec3(0.0, 0.6, -0.325), MESH_MAT),Triangle(vec3(-0.197995, 0.611249, -0.270095), vec3(-0.030383, 0.67022, 0.047763), vec3(-0.043697, 0.677187, -0.015062), MESH_MAT),Triangle(vec3(0.270095, 0.602691, -0.197995), vec3(0.316797, 0.610348, 0.104502), vec3(0.325, 0.6, 0.0), MESH_MAT),Triangle(vec3(0.270095, 0.602691, -0.197995), vec3(-0.043697, 0.677187, -0.015062), vec3(0.015062, 0.668629, -0.043697), MESH_MAT),Triangle(vec3(0.197995, 0.611249, 0.270095), vec3(-0.104502, 0.610348, 0.316797), vec3(0.0, 0.6, 0.325), MESH_MAT),Triangle(vec3(0.197995, 0.611249, 0.270095), vec3(0.015062, 0.668629, -0.043697), vec3(-0.030383, 0.67022, 0.047763), MESH_MAT),Triangle(vec3(-0.270095, 0.611249, 0.197995), vec3(-0.316797, 0.610348, -0.104502), vec3(-0.325, 0.6, 0.0), MESH_MAT),Triangle(vec3(-0.334116, 0.031555, 0.172714), vec3(-0.355089, 0.011388, -0.006513), vec3(-0.176568, 0.018498, 0.321398), MESH_MAT),Triangle(vec3(-0.172714, 0.031555, -0.334116), vec3(0.0592, 0.012201, -0.355237), vec3(-0.321398, 0.018498, -0.176568), MESH_MAT),Triangle(vec3(-0.70093, 0.60071, -0.00908), vec3(-0.796838, 0.608175, 0.0), vec3(-0.707075, 0.604365, 0.027655), MESH_MAT),Triangle(vec3(0.446255, 0.026361, -0.446256), vec3(0.446256, -1.25306, 0.446255), vec3(0.446255, -1.25306, -0.446256), MESH_MAT),Triangle(vec3(0.446256, 0.026361, 0.446255), vec3(-0.446255, -1.25306, 0.446256), vec3(0.446256, -1.25306, 0.446255), MESH_MAT),Triangle(vec3(-0.446255, 0.026361, 0.446256), vec3(-0.446256, -1.25306, -0.446255), vec3(-0.446255, -1.25306, 0.446256), MESH_MAT),Triangle(vec3(-0.446256, 0.026361, -0.446255), vec3(0.446255, -1.25306, -0.446256), vec3(-0.446256, -1.25306, -0.446255), MESH_MAT),Triangle(vec3(-0.446255, -1.25306, 0.446256), vec3(0.446255, -1.25306, -0.446256), vec3(0.446256, -1.25306, 0.446255), MESH_MAT),Triangle(vec3(0.446256, 0.026361, 0.446255), vec3(-0.446256, 0.026361, -0.446255), vec3(-0.446255, 0.026361, 0.446256), MESH_MAT),Triangle(vec3(0.446255, 0.026361, -0.446256), vec3(0.446256, 0.026361, 0.446255), vec3(0.446256, -1.25306, 0.446255), MESH_MAT),Triangle(vec3(0.446256, 0.026361, 0.446255), vec3(-0.446255, 0.026361, 0.446256), vec3(-0.446255, -1.25306, 0.446256), MESH_MAT),Triangle(vec3(-0.446255, 0.026361, 0.446256), vec3(-0.446256, 0.026361, -0.446255), vec3(-0.446256, -1.25306, -0.446255), MESH_MAT),Triangle(vec3(-0.446256, 0.026361, -0.446255), vec3(0.446255, 0.026361, -0.446256), vec3(0.446255, -1.25306, -0.446256), MESH_MAT),Triangle(vec3(-0.446255, -1.25306, 0.446256), vec3(-0.446256, -1.25306, -0.446255), vec3(0.446255, -1.25306, -0.446256), MESH_MAT),Triangle(vec3(0.446256, 0.026361, 0.446255), vec3(0.446255, 0.026361, -0.446256), vec3(-0.446256, 0.026361, -0.446255), MESH_MAT)\n);\n    // Doesn't matter since we're in a box\nvec3 sky_color(vec3 d) {\n    return vec3(0.0);\n}\n\n// basic camera ray\nRay camera(vec2 ndc) {\n    Ray cam; \n    cam.origin    = vec3(0.0, 0.5, -1.2);\n    cam.direction = normalize(vec3(ndc, 1.0));\n    \n    return cam;\n}\n#endif\n\n#ifdef SCENE_CORNELL_3_STANFORD\n\n#define LIGHT_POS vec3(0.0, 2.2, 0.0)\n#define LIGHT_RADIUS 0.5\n#define LIGHT_STRENGTH 40.0\n#define LIGHT_COLOR vec3(1.0, 1.0, 1.0)\n\n#define N_SPHERES 7\nconst Sphere SPHERES[N_SPHERES] = Sphere[](\n    Sphere(vec3(0.0, -1000.5, 0.0), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 1.0)), // Ground\n    Sphere(vec3(1001.5, 0.0, 0.0), 1000.0, Material(vec3(0.0, 0.8, 0.0), vec3(0.0, 0.0, 0.0), 1.0)), // Right wall\n    Sphere(vec3(-1001.5, 0.0, 0.0), 1000.0, Material(vec3(0.8, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0)), // Left wall\n    Sphere(vec3(0.0, 0.0, 1001), 1000.0, Material(vec3(0.0, 0.0, 0.8), vec3(0.0, 0.0, 0.0), 1.0)), // Back wall\n    Sphere(vec3(0.0, 0.0, -1002), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 1.0)), // Front wall\n    Sphere(vec3(0.0, 1002, 0.0), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 1.0)), // Ceiling\n\n    Sphere(LIGHT_POS, LIGHT_RADIUS, Material(vec3(0.0, 0.0, 0.0), LIGHT_COLOR * LIGHT_STRENGTH, 1.0)) // Light sphere\n);\n\n#define MESH_MAT Material(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0), 1.0)\n#define N_TRIANGLES 357\nconst Triangle TRIS[N_TRIANGLES] = Triangle[](\n    Triangle(vec3(0.5, 0.183406, -0.5), vec3(0.5, -0.816594, 0.5), vec3(0.5, -0.816594, -0.5), MESH_MAT),Triangle(vec3(0.5, 0.183406, 0.5), vec3(-0.5, -0.816594, 0.5), vec3(0.5, -0.816594, 0.5), MESH_MAT),Triangle(vec3(-0.5, 0.183406, 0.5), vec3(-0.5, -0.816594, -0.5), vec3(-0.5, -0.816594, 0.5), MESH_MAT),Triangle(vec3(-0.5, 0.183406, -0.5), vec3(0.5, -0.816594, -0.5), vec3(-0.5, -0.816594, -0.5), MESH_MAT),Triangle(vec3(0.5, 0.183406, 0.5), vec3(-0.5, 0.183406, -0.5), vec3(-0.5, 0.183406, 0.5), MESH_MAT),Triangle(vec3(0.362396, 0.549906, -0.111638), vec3(0.352736, 0.549814, -0.010589), vec3(0.387782, 0.482593, -0.109372), MESH_MAT),Triangle(vec3(-0.059392, 0.65576, -0.004542), vec3(0.074057, 0.633076, -0.055413), vec3(-0.013012, 0.625487, -0.167894), MESH_MAT),Triangle(vec3(0.212764, 0.705754, -0.14764), vec3(0.171646, 0.592425, -0.160019), vec3(0.15368, 0.647185, -0.073041), MESH_MAT),Triangle(vec3(-0.203962, 0.618832, -0.065334), vec3(-0.098662, 0.658875, -0.100965), vec3(-0.150085, 0.612643, -0.165824), MESH_MAT),Triangle(vec3(0.074871, 0.184721, -0.087058), vec3(0.098173, 0.175957, -0.172192), vec3(0.096535, 0.167887, -0.04525), MESH_MAT),Triangle(vec3(0.385579, 0.742502, -0.139541), vec3(0.385201, 0.753052, -0.062109), vec3(0.391541, 0.677659, -0.082719), MESH_MAT),Triangle(vec3(0.352736, 0.549814, -0.010589), vec3(0.362396, 0.549906, -0.111638), vec3(0.410932, 0.592365, -0.085967), MESH_MAT),Triangle(vec3(0.385201, 0.753052, -0.062109), vec3(0.292536, 0.781958, -0.011948), vec3(0.319153, 0.751898, 0.026741), MESH_MAT),Triangle(vec3(-0.059392, 0.65576, -0.004542), vec3(-0.098662, 0.658875, -0.100965), vec3(-0.157191, 0.633864, 0.005751), MESH_MAT),Triangle(vec3(0.323986, 0.561269, -0.242568), vec3(0.266756, 0.590052, -0.264737), vec3(0.337285, 0.655444, -0.267331), MESH_MAT),Triangle(vec3(0.2281, 0.47862, -0.226023), vec3(0.292534, 0.534289, -0.188198), vec3(0.30518, 0.460187, -0.206164), MESH_MAT),Triangle(vec3(-0.144218, 0.234272, -0.220998), vec3(-0.067673, 0.26109, -0.27042), vec3(0.016246, 0.247408, -0.247708), MESH_MAT),Triangle(vec3(0.30518, 0.460187, -0.206164), vec3(0.267049, 0.373613, -0.203833), vec3(0.2281, 0.47862, -0.226023), MESH_MAT),Triangle(vec3(-0.114724, 0.365276, -0.278493), vec3(-0.050032, 0.34676, -0.29179), vec3(-0.067673, 0.26109, -0.27042), MESH_MAT),Triangle(vec3(0.2281, 0.47862, -0.226023), vec3(0.171646, 0.592425, -0.160019), vec3(0.292534, 0.534289, -0.188198), MESH_MAT),Triangle(vec3(-0.04316, 0.491362, -0.268452), vec3(-0.117347, 0.439528, -0.279151), vec3(-0.152486, 0.514627, -0.231943), MESH_MAT),Triangle(vec3(-0.098662, 0.658875, -0.100965), vec3(-0.059392, 0.65576, -0.004542), vec3(-0.013012, 0.625487, -0.167894), MESH_MAT),Triangle(vec3(0.357676, 0.475485, 0.020862), vec3(0.273186, 0.583892, 0.049482), vec3(0.304708, 0.440428, 0.083115), MESH_MAT),Triangle(vec3(-0.020466, 0.859784, 0.139961), vec3(0.126361, 0.819345, 0.068201), vec3(0.007918, 0.939911, 0.118217), MESH_MAT),Triangle(vec3(0.267049, 0.373613, -0.203833), vec3(0.185607, 0.449029, -0.229979), vec3(0.2281, 0.47862, -0.226023), MESH_MAT),Triangle(vec3(0.375577, 0.696178, -0.195693), vec3(0.385579, 0.742502, -0.139541), vec3(0.391541, 0.677659, -0.082719), MESH_MAT),Triangle(vec3(0.331801, 0.36684, 0.011608), vec3(0.246268, 0.360992, 0.082906), vec3(0.215546, 0.301405, 0.024583), MESH_MAT),Triangle(vec3(0.185607, 0.449029, -0.229979), vec3(0.171646, 0.592425, -0.160019), vec3(0.2281, 0.47862, -0.226023), MESH_MAT),Triangle(vec3(-0.150085, 0.612643, -0.165824), vec3(-0.069865, 0.507934, -0.220294), vec3(-0.152486, 0.514627, -0.231943), MESH_MAT),Triangle(vec3(0.267049, 0.373613, -0.203833), vec3(0.141412, 0.354538, -0.214361), vec3(0.185607, 0.449029, -0.229979), MESH_MAT),Triangle(vec3(0.03305, 0.453248, -0.283001), vec3(-0.117347, 0.439528, -0.279151), vec3(-0.04316, 0.491362, -0.268452), MESH_MAT),Triangle(vec3(-0.276686, 0.374743, 0.03664), vec3(-0.291695, 0.490704, -0.023125), vec3(-0.305576, 0.373212, -0.040783), MESH_MAT),Triangle(vec3(0.216949, 0.183398, -0.245842), vec3(0.129681, 0.232976, -0.200208), vec3(0.185811, 0.255815, -0.174283), MESH_MAT),Triangle(vec3(0.137197, 0.47532, -0.21665), vec3(0.171646, 0.592425, -0.160019), vec3(0.185607, 0.449029, -0.229979), MESH_MAT),Triangle(vec3(0.21536, 0.779135, -0.057927), vec3(0.160816, 0.783611, -0.036162), vec3(0.086318, 0.887022, 0.016255), MESH_MAT),Triangle(vec3(-0.114724, 0.365276, -0.278493), vec3(-0.117347, 0.439528, -0.279151), vec3(-0.050032, 0.34676, -0.29179), MESH_MAT),Triangle(vec3(0.137197, 0.47532, -0.21665), vec3(0.185607, 0.449029, -0.229979), vec3(0.141412, 0.354538, -0.214361), MESH_MAT),Triangle(vec3(-0.199353, 0.182421, -0.125183), vec3(-0.292781, 0.26389, -0.171092), vec3(-0.234868, 0.24988, -0.161808), MESH_MAT),Triangle(vec3(0.137197, 0.47532, -0.21665), vec3(0.091376, 0.596168, -0.151104), vec3(0.171646, 0.592425, -0.160019), MESH_MAT),Triangle(vec3(0.129681, 0.232976, -0.200208), vec3(0.141412, 0.354538, -0.214361), vec3(0.185811, 0.255815, -0.174283), MESH_MAT),Triangle(vec3(0.069617, 0.279744, -0.177789), vec3(0.141412, 0.354538, -0.214361), vec3(0.129681, 0.232976, -0.200208), MESH_MAT),Triangle(vec3(0.090798, 0.414595, -0.210227), vec3(0.137197, 0.47532, -0.21665), vec3(0.141412, 0.354538, -0.214361), MESH_MAT),Triangle(vec3(0.053113, 0.491003, -0.226095), vec3(0.091376, 0.596168, -0.151104), vec3(0.137197, 0.47532, -0.21665), MESH_MAT),Triangle(vec3(-0.04316, 0.491362, -0.268452), vec3(-0.152486, 0.514627, -0.231943), vec3(-0.069865, 0.507934, -0.220294), MESH_MAT),Triangle(vec3(0.090798, 0.414595, -0.210227), vec3(0.053113, 0.491003, -0.226095), vec3(0.137197, 0.47532, -0.21665), MESH_MAT),Triangle(vec3(0.069617, 0.279744, -0.177789), vec3(0.090798, 0.414595, -0.210227), vec3(0.141412, 0.354538, -0.214361), MESH_MAT),Triangle(vec3(-0.050032, 0.34676, -0.29179), vec3(-0.117347, 0.439528, -0.279151), vec3(0.03305, 0.453248, -0.283001), MESH_MAT),Triangle(vec3(0.259169, 0.223479, -0.163731), vec3(0.188193, 0.233623, -0.089333), vec3(0.250665, 0.174116, -0.100404), MESH_MAT),Triangle(vec3(-0.013012, 0.625487, -0.167894), vec3(0.091376, 0.596168, -0.151104), vec3(0.053113, 0.491003, -0.226095), MESH_MAT),Triangle(vec3(0.018997, 0.812234, 0.07921), vec3(-0.020466, 0.859784, 0.139961), vec3(-0.00112, 0.810283, 0.054013), MESH_MAT),Triangle(vec3(-0.157191, 0.633864, 0.005751), vec3(-0.098662, 0.658875, -0.100965), vec3(-0.203962, 0.618832, -0.065334), MESH_MAT),Triangle(vec3(-0.096226, 0.167059, -0.079861), vec3(-0.10164, 0.197004, -0.165343), vec3(-0.039482, 0.191432, -0.05586), MESH_MAT),Triangle(vec3(0.091376, 0.596168, -0.151104), vec3(-0.013012, 0.625487, -0.167894), vec3(0.074057, 0.633076, -0.055413), MESH_MAT),Triangle(vec3(-0.292781, 0.26389, -0.171092), vec3(-0.281899, 0.333827, -0.133303), vec3(-0.234868, 0.24988, -0.161808), MESH_MAT),Triangle(vec3(-0.098662, 0.658875, -0.100965), vec3(-0.013012, 0.625487, -0.167894), vec3(-0.150085, 0.612643, -0.165824), MESH_MAT),Triangle(vec3(0.016869, 0.323674, -0.266694), vec3(0.03305, 0.453248, -0.283001), vec3(0.046464, 0.408514, -0.283861), MESH_MAT),Triangle(vec3(-0.051289, 0.563098, -0.215935), vec3(-0.013012, 0.625487, -0.167894), vec3(0.053113, 0.491003, -0.226095), MESH_MAT),Triangle(vec3(0.016869, 0.323674, -0.266694), vec3(-0.050032, 0.34676, -0.29179), vec3(0.03305, 0.453248, -0.283001), MESH_MAT),Triangle(vec3(0.053113, 0.491003, -0.226095), vec3(-0.069865, 0.507934, -0.220294), vec3(-0.051289, 0.563098, -0.215935), MESH_MAT),Triangle(vec3(0.016246, 0.247408, -0.247708), vec3(-0.067673, 0.26109, -0.27042), vec3(0.016869, 0.323674, -0.266694), MESH_MAT),Triangle(vec3(-0.067673, 0.26109, -0.27042), vec3(-0.050032, 0.34676, -0.29179), vec3(0.016869, 0.323674, -0.266694), MESH_MAT),Triangle(vec3(-0.069865, 0.507934, -0.220294), vec3(0.053113, 0.491003, -0.226095), vec3(-0.04316, 0.491362, -0.268452), MESH_MAT),Triangle(vec3(-0.291695, 0.490704, -0.023125), vec3(-0.256291, 0.423615, 0.079129), vec3(-0.233824, 0.536232, 0.056396), MESH_MAT),Triangle(vec3(0.186887, 0.738968, -0.063496), vec3(0.19213, 0.713509, -0.005638), vec3(0.107978, 0.758046, 0.004797), MESH_MAT),Triangle(vec3(0.266756, 0.590052, -0.264737), vec3(0.268901, 0.739683, -0.209514), vec3(0.337285, 0.655444, -0.267331), MESH_MAT),Triangle(vec3(0.266756, 0.590052, -0.264737), vec3(0.212764, 0.705754, -0.14764), vec3(0.268901, 0.739683, -0.209514), MESH_MAT),Triangle(vec3(0.292534, 0.534289, -0.188198), vec3(0.236239, 0.615671, -0.215522), vec3(0.266756, 0.590052, -0.264737), MESH_MAT),Triangle(vec3(0.368073, 0.422161, -0.005827), vec3(0.351141, 0.392923, -0.135184), vec3(0.387782, 0.482593, -0.109372), MESH_MAT),Triangle(vec3(0.236239, 0.615671, -0.215522), vec3(0.212764, 0.705754, -0.14764), vec3(0.266756, 0.590052, -0.264737), MESH_MAT),Triangle(vec3(-0.327424, 0.270177, 0.028727), vec3(-0.364637, 0.337168, -0.013378), vec3(-0.350233, 0.241543, -0.10102), MESH_MAT),Triangle(vec3(-0.114724, 0.365276, -0.278493), vec3(-0.180101, 0.403586, -0.251679), vec3(-0.117347, 0.439528, -0.279151), MESH_MAT),Triangle(vec3(0.292534, 0.534289, -0.188198), vec3(0.171646, 0.592425, -0.160019), vec3(0.236239, 0.615671, -0.215522), MESH_MAT),Triangle(vec3(0.062931, 0.177577, -0.271961), vec3(0.016246, 0.247408, -0.247708), vec3(0.071902, 0.227024, -0.266072), MESH_MAT),Triangle(vec3(0.107978, 0.758046, 0.004797), vec3(-0.00112, 0.810283, 0.054013), vec3(0.160816, 0.783611, -0.036162), MESH_MAT),Triangle(vec3(0.171646, 0.592425, -0.160019), vec3(0.212764, 0.705754, -0.14764), vec3(0.236239, 0.615671, -0.215522), MESH_MAT),Triangle(vec3(-0.234868, 0.24988, -0.161808), vec3(-0.160306, 0.289153, -0.242056), vec3(-0.144218, 0.234272, -0.220998), MESH_MAT),Triangle(vec3(0.21606, 0.767988, -0.155961), vec3(0.268901, 0.739683, -0.209514), vec3(0.212764, 0.705754, -0.14764), MESH_MAT),Triangle(vec3(-0.350233, 0.241543, -0.10102), vec3(-0.364637, 0.337168, -0.013378), vec3(-0.364106, 0.346302, -0.106801), MESH_MAT),Triangle(vec3(-0.152536, 0.178287, -0.215175), vec3(-0.234868, 0.24988, -0.161808), vec3(-0.144218, 0.234272, -0.220998), MESH_MAT),Triangle(vec3(-0.00112, 0.810283, 0.054013), vec3(0.007918, 0.939911, 0.118217), vec3(0.160816, 0.783611, -0.036162), MESH_MAT),Triangle(vec3(0.007918, 0.939911, 0.118217), vec3(0.086318, 0.887022, 0.016255), vec3(0.160816, 0.783611, -0.036162), MESH_MAT),Triangle(vec3(-0.305576, 0.373212, -0.040783), vec3(-0.291695, 0.490704, -0.023125), vec3(-0.288008, 0.45592, -0.120457), MESH_MAT),Triangle(vec3(-0.160306, 0.289153, -0.242056), vec3(-0.180101, 0.403586, -0.251679), vec3(-0.114724, 0.365276, -0.278493), MESH_MAT),Triangle(vec3(-0.281899, 0.333827, -0.133303), vec3(-0.257466, 0.337239, -0.181975), vec3(-0.234868, 0.24988, -0.161808), MESH_MAT),Triangle(vec3(-0.180101, 0.403586, -0.251679), vec3(-0.242617, 0.458769, -0.199365), vec3(-0.152486, 0.514627, -0.231943), MESH_MAT),Triangle(vec3(-0.144218, 0.234272, -0.220998), vec3(0.016246, 0.247408, -0.247708), vec3(0.062931, 0.177577, -0.271961), MESH_MAT),Triangle(vec3(0.245825, 0.716175, 0.03344), vec3(0.273493, 0.777428, 0.276229), vec3(0.238478, 0.842075, 0.306499), MESH_MAT),Triangle(vec3(-0.257466, 0.337239, -0.181975), vec3(-0.288008, 0.45592, -0.120457), vec3(-0.242617, 0.458769, -0.199365), MESH_MAT),Triangle(vec3(-0.257466, 0.337239, -0.181975), vec3(-0.242617, 0.458769, -0.199365), vec3(-0.180101, 0.403586, -0.251679), MESH_MAT),Triangle(vec3(-0.257466, 0.337239, -0.181975), vec3(-0.180101, 0.403586, -0.251679), vec3(-0.160306, 0.289153, -0.242056), MESH_MAT),Triangle(vec3(-0.234868, 0.24988, -0.161808), vec3(-0.257466, 0.337239, -0.181975), vec3(-0.160306, 0.289153, -0.242056), MESH_MAT),Triangle(vec3(0.229873, 0.243325, -0.043296), vec3(0.211259, 0.280859, -0.052263), vec3(0.215546, 0.301405, 0.024583), MESH_MAT),Triangle(vec3(-0.136813, 0.174497, 0.108037), vec3(0.137027, 0.168355, 0.157235), vec3(0.025993, 0.22367, 0.139888), MESH_MAT),Triangle(vec3(0.15368, 0.647185, -0.073041), vec3(0.19213, 0.713509, -0.005638), vec3(0.186887, 0.738968, -0.063496), MESH_MAT),Triangle(vec3(0.186887, 0.738968, -0.063496), vec3(0.160816, 0.783611, -0.036162), vec3(0.21536, 0.779135, -0.057927), MESH_MAT),Triangle(vec3(0.107978, 0.758046, 0.004797), vec3(0.160816, 0.783611, -0.036162), vec3(0.186887, 0.738968, -0.063496), MESH_MAT),Triangle(vec3(-0.305576, 0.373212, -0.040783), vec3(-0.257466, 0.337239, -0.181975), vec3(-0.281899, 0.333827, -0.133303), MESH_MAT),Triangle(vec3(-0.364106, 0.346302, -0.106801), vec3(-0.292781, 0.26389, -0.171092), vec3(-0.350233, 0.241543, -0.10102), MESH_MAT),Triangle(vec3(-0.117347, 0.439528, -0.279151), vec3(-0.180101, 0.403586, -0.251679), vec3(-0.152486, 0.514627, -0.231943), MESH_MAT),Triangle(vec3(-0.069865, 0.507934, -0.220294), vec3(-0.150085, 0.612643, -0.165824), vec3(-0.051289, 0.563098, -0.215935), MESH_MAT),Triangle(vec3(-0.256291, 0.423615, 0.079129), vec3(-0.291695, 0.490704, -0.023125), vec3(-0.276686, 0.374743, 0.03664), MESH_MAT),Triangle(vec3(-0.152486, 0.514627, -0.231943), vec3(-0.242617, 0.458769, -0.199365), vec3(-0.228712, 0.569285, -0.15157), MESH_MAT),Triangle(vec3(-0.152486, 0.514627, -0.231943), vec3(-0.228712, 0.569285, -0.15157), vec3(-0.150085, 0.612643, -0.165824), MESH_MAT),Triangle(vec3(-0.160306, 0.289153, -0.242056), vec3(-0.067673, 0.26109, -0.27042), vec3(-0.144218, 0.234272, -0.220998), MESH_MAT),Triangle(vec3(-0.166502, 0.175303, 0.014959), vec3(-0.170752, 0.172512, -0.039055), vec3(-0.10598, 0.178193, -0.021878), MESH_MAT),Triangle(vec3(-0.00112, 0.810283, 0.054013), vec3(0.107978, 0.758046, 0.004797), vec3(0.018997, 0.812234, 0.07921), MESH_MAT),Triangle(vec3(0.185811, 0.255815, -0.174283), vec3(0.218577, 0.29514, -0.099413), vec3(0.188193, 0.233623, -0.089333), MESH_MAT),Triangle(vec3(-0.020466, 0.859784, 0.139961), vec3(0.007918, 0.939911, 0.118217), vec3(-0.00112, 0.810283, 0.054013), MESH_MAT),Triangle(vec3(0.391541, 0.677659, -0.082719), vec3(0.385201, 0.753052, -0.062109), vec3(0.36033, 0.695769, -0.006685), MESH_MAT),Triangle(vec3(0.19213, 0.713509, -0.005638), vec3(0.15368, 0.647185, -0.073041), vec3(0.181319, 0.644357, 0.017247), MESH_MAT),Triangle(vec3(0.391541, 0.677659, -0.082719), vec3(0.36033, 0.695769, -0.006685), vec3(0.410932, 0.592365, -0.085967), MESH_MAT),Triangle(vec3(0.387782, 0.482593, -0.109372), vec3(0.352736, 0.549814, -0.010589), vec3(0.357676, 0.475485, 0.020862), MESH_MAT),Triangle(vec3(-0.168866, 0.224887, 0.1125), vec3(-0.254881, 0.286715, 0.037952), vec3(-0.166502, 0.175303, 0.014959), MESH_MAT),Triangle(vec3(0.245825, 0.716175, 0.03344), vec3(0.238478, 0.842075, 0.306499), vec3(0.239678, 0.793818, 0.11364), MESH_MAT),Triangle(vec3(-0.173063, 0.282673, 0.134147), vec3(-0.254881, 0.286715, 0.037952), vec3(-0.168866, 0.224887, 0.1125), MESH_MAT),Triangle(vec3(-0.152536, 0.178287, -0.215175), vec3(-0.199353, 0.182421, -0.125183), vec3(-0.234868, 0.24988, -0.161808), MESH_MAT),Triangle(vec3(-0.168866, 0.224887, 0.1125), vec3(-0.166502, 0.175303, 0.014959), vec3(-0.136813, 0.174497, 0.108037), MESH_MAT),Triangle(vec3(-0.173063, 0.282673, 0.134147), vec3(-0.256291, 0.423615, 0.079129), vec3(-0.254881, 0.286715, 0.037952), MESH_MAT),Triangle(vec3(-0.039482, 0.191432, -0.05586), vec3(0.079803, 0.190642, -0.019812), vec3(0.098698, 0.190798, 0.002408), MESH_MAT),Triangle(vec3(-0.254881, 0.286715, 0.037952), vec3(-0.256291, 0.423615, 0.079129), vec3(-0.276686, 0.374743, 0.03664), MESH_MAT),Triangle(vec3(-0.288008, 0.45592, -0.120457), vec3(-0.228712, 0.569285, -0.15157), vec3(-0.242617, 0.458769, -0.199365), MESH_MAT),Triangle(vec3(-0.276686, 0.374743, 0.03664), vec3(-0.305576, 0.373212, -0.040783), vec3(-0.254881, 0.286715, 0.037952), MESH_MAT),Triangle(vec3(0.229873, 0.243325, -0.043296), vec3(0.250665, 0.174116, -0.100404), vec3(0.188193, 0.233623, -0.089333), MESH_MAT),Triangle(vec3(0.212764, 0.705754, -0.14764), vec3(0.186887, 0.738968, -0.063496), vec3(0.21606, 0.767988, -0.155961), MESH_MAT),Triangle(vec3(-0.291695, 0.490704, -0.023125), vec3(-0.228712, 0.569285, -0.15157), vec3(-0.288008, 0.45592, -0.120457), MESH_MAT),Triangle(vec3(-0.114724, 0.365276, -0.278493), vec3(-0.067673, 0.26109, -0.27042), vec3(-0.160306, 0.289153, -0.242056), MESH_MAT),Triangle(vec3(-0.013012, 0.625487, -0.167894), vec3(-0.051289, 0.563098, -0.215935), vec3(-0.150085, 0.612643, -0.165824), MESH_MAT),Triangle(vec3(-0.210573, 0.168274, -0.013991), vec3(-0.327424, 0.270177, 0.028727), vec3(-0.350233, 0.241543, -0.10102), MESH_MAT),Triangle(vec3(0.15368, 0.647185, -0.073041), vec3(0.186887, 0.738968, -0.063496), vec3(0.212764, 0.705754, -0.14764), MESH_MAT),Triangle(vec3(0.286647, 0.873747, 0.200479), vec3(0.327255, 0.885993, 0.244963), vec3(0.292536, 0.781958, -0.011948), MESH_MAT),Triangle(vec3(0.351141, 0.392923, -0.135184), vec3(0.368073, 0.422161, -0.005827), vec3(0.331801, 0.36684, 0.011608), MESH_MAT),Triangle(vec3(0.309039, 0.782641, -0.127481), vec3(0.385579, 0.742502, -0.139541), vec3(0.268901, 0.739683, -0.209514), MESH_MAT),Triangle(vec3(0.286647, 0.873747, 0.200479), vec3(0.292536, 0.781958, -0.011948), vec3(0.239678, 0.793818, 0.11364), MESH_MAT),Triangle(vec3(-0.305576, 0.373212, -0.040783), vec3(-0.364106, 0.346302, -0.106801), vec3(-0.364637, 0.337168, -0.013378), MESH_MAT),Triangle(vec3(-0.305576, 0.373212, -0.040783), vec3(-0.281899, 0.333827, -0.133303), vec3(-0.364106, 0.346302, -0.106801), MESH_MAT),Triangle(vec3(-0.305576, 0.373212, -0.040783), vec3(-0.288008, 0.45592, -0.120457), vec3(-0.257466, 0.337239, -0.181975), MESH_MAT),Triangle(vec3(0.385201, 0.753052, -0.062109), vec3(0.309039, 0.782641, -0.127481), vec3(0.292536, 0.781958, -0.011948), MESH_MAT),Triangle(vec3(0.152295, 0.239825, 0.05623), vec3(0.094689, 0.267498, 0.049501), vec3(0.062239, 0.247316, 0.138586), MESH_MAT),Triangle(vec3(0.215546, 0.301405, 0.024583), vec3(0.246268, 0.360992, 0.082906), vec3(0.166991, 0.36131, 0.085108), MESH_MAT),Triangle(vec3(0.309039, 0.782641, -0.127481), vec3(0.268901, 0.739683, -0.209514), vec3(0.21606, 0.767988, -0.155961), MESH_MAT),Triangle(vec3(0.074057, 0.633076, -0.055413), vec3(0.15368, 0.647185, -0.073041), vec3(0.091376, 0.596168, -0.151104), MESH_MAT),Triangle(vec3(0.091376, 0.596168, -0.151104), vec3(0.15368, 0.647185, -0.073041), vec3(0.171646, 0.592425, -0.160019), MESH_MAT),Triangle(vec3(0.239678, 0.793818, 0.11364), vec3(0.292536, 0.781958, -0.011948), vec3(0.245825, 0.716175, 0.03344), MESH_MAT),Triangle(vec3(0.309039, 0.782641, -0.127481), vec3(0.21606, 0.767988, -0.155961), vec3(0.21536, 0.779135, -0.057927), MESH_MAT),Triangle(vec3(0.309039, 0.782641, -0.127481), vec3(0.385201, 0.753052, -0.062109), vec3(0.385579, 0.742502, -0.139541), MESH_MAT),Triangle(vec3(0.292536, 0.781958, -0.011948), vec3(0.309039, 0.782641, -0.127481), vec3(0.21536, 0.779135, -0.057927), MESH_MAT),Triangle(vec3(-0.291695, 0.490704, -0.023125), vec3(-0.203962, 0.618832, -0.065334), vec3(-0.228712, 0.569285, -0.15157), MESH_MAT),Triangle(vec3(0.238478, 0.842075, 0.306499), vec3(0.269382, 0.910315, 0.298144), vec3(0.286647, 0.873747, 0.200479), MESH_MAT),Triangle(vec3(0.094689, 0.267498, 0.049501), vec3(0.152295, 0.239825, 0.05623), vec3(0.166991, 0.36131, 0.085108), MESH_MAT),Triangle(vec3(-0.233824, 0.536232, 0.056396), vec3(-0.203962, 0.618832, -0.065334), vec3(-0.291695, 0.490704, -0.023125), MESH_MAT),Triangle(vec3(0.21536, 0.779135, -0.057927), vec3(0.21606, 0.767988, -0.155961), vec3(0.186887, 0.738968, -0.063496), MESH_MAT),Triangle(vec3(-0.203962, 0.618832, -0.065334), vec3(-0.150085, 0.612643, -0.165824), vec3(-0.228712, 0.569285, -0.15157), MESH_MAT),Triangle(vec3(0.239678, 0.793818, 0.11364), vec3(0.238478, 0.842075, 0.306499), vec3(0.286647, 0.873747, 0.200479), MESH_MAT),Triangle(vec3(0.181319, 0.644357, 0.017247), vec3(0.15368, 0.647185, -0.073041), vec3(0.074057, 0.633076, -0.055413), MESH_MAT),Triangle(vec3(0.368073, 0.422161, -0.005827), vec3(0.387782, 0.482593, -0.109372), vec3(0.357676, 0.475485, 0.020862), MESH_MAT),Triangle(vec3(0.007918, 0.939911, 0.118217), vec3(0.149563, 0.861575, 0.028843), vec3(0.086318, 0.887022, 0.016255), MESH_MAT),Triangle(vec3(0.269382, 0.910315, 0.298144), vec3(0.327255, 0.885993, 0.244963), vec3(0.286647, 0.873747, 0.200479), MESH_MAT),Triangle(vec3(0.185811, 0.255815, -0.174283), vec3(0.259169, 0.223479, -0.163731), vec3(0.216949, 0.183398, -0.245842), MESH_MAT),Triangle(vec3(0.107978, 0.758046, 0.004797), vec3(0.19213, 0.713509, -0.005638), vec3(0.018997, 0.812234, 0.07921), MESH_MAT),Triangle(vec3(0.03305, 0.453248, -0.283001), vec3(0.053113, 0.491003, -0.226095), vec3(0.090798, 0.414595, -0.210227), MESH_MAT),Triangle(vec3(0.185976, 0.317338, -0.170419), vec3(0.185811, 0.255815, -0.174283), vec3(0.141412, 0.354538, -0.214361), MESH_MAT),Triangle(vec3(0.016246, 0.247408, -0.247708), vec3(0.016869, 0.323674, -0.266694), vec3(0.069617, 0.279744, -0.177789), MESH_MAT),Triangle(vec3(0.069617, 0.279744, -0.177789), vec3(0.129681, 0.232976, -0.200208), vec3(0.071902, 0.227024, -0.266072), MESH_MAT),Triangle(vec3(0.016869, 0.323674, -0.266694), vec3(0.046464, 0.408514, -0.283861), vec3(0.069617, 0.279744, -0.177789), MESH_MAT),Triangle(vec3(0.130785, 0.17467, -0.209267), vec3(0.071902, 0.227024, -0.266072), vec3(0.129681, 0.232976, -0.200208), MESH_MAT),Triangle(vec3(0.18522, 0.280924, -0.086853), vec3(0.188193, 0.233623, -0.089333), vec3(0.218577, 0.29514, -0.099413), MESH_MAT),Triangle(vec3(0.185811, 0.255815, -0.174283), vec3(0.185976, 0.317338, -0.170419), vec3(0.218577, 0.29514, -0.099413), MESH_MAT),Triangle(vec3(0.069617, 0.279744, -0.177789), vec3(0.046464, 0.408514, -0.283861), vec3(0.090798, 0.414595, -0.210227), MESH_MAT),Triangle(vec3(0.069617, 0.279744, -0.177789), vec3(0.071902, 0.227024, -0.266072), vec3(0.016246, 0.247408, -0.247708), MESH_MAT),Triangle(vec3(0.337285, 0.655444, -0.267331), vec3(0.268901, 0.739683, -0.209514), vec3(0.385579, 0.742502, -0.139541), MESH_MAT),Triangle(vec3(0.216949, 0.183398, -0.245842), vec3(0.130785, 0.17467, -0.209267), vec3(0.129681, 0.232976, -0.200208), MESH_MAT),Triangle(vec3(-0.292781, 0.26389, -0.171092), vec3(-0.364106, 0.346302, -0.106801), vec3(-0.281899, 0.333827, -0.133303), MESH_MAT),Triangle(vec3(0.301093, 0.175622, -0.038996), vec3(0.229873, 0.243325, -0.043296), vec3(0.294254, 0.171391, 0.027213), MESH_MAT),Triangle(vec3(0.094689, 0.267498, 0.049501), vec3(0.166991, 0.36131, 0.085108), vec3(0.107609, 0.441088, 0.121235), MESH_MAT),Triangle(vec3(0.271874, 0.178675, -0.190704), vec3(0.259169, 0.223479, -0.163731), vec3(0.250665, 0.174116, -0.100404), MESH_MAT),Triangle(vec3(0.387782, 0.482593, -0.109372), vec3(0.30518, 0.460187, -0.206164), vec3(0.292534, 0.534289, -0.188198), MESH_MAT),Triangle(vec3(0.398941, 0.574632, -0.211248), vec3(0.323986, 0.561269, -0.242568), vec3(0.337285, 0.655444, -0.267331), MESH_MAT),Triangle(vec3(0.188193, 0.233623, -0.089333), vec3(0.18522, 0.280924, -0.086853), vec3(0.211259, 0.280859, -0.052263), MESH_MAT),Triangle(vec3(0.375577, 0.696178, -0.195693), vec3(0.337285, 0.655444, -0.267331), vec3(0.385579, 0.742502, -0.139541), MESH_MAT),Triangle(vec3(0.216949, 0.183398, -0.245842), vec3(0.259169, 0.223479, -0.163731), vec3(0.271874, 0.178675, -0.190704), MESH_MAT),Triangle(vec3(0.21536, 0.779135, -0.057927), vec3(0.086318, 0.887022, 0.016255), vec3(0.149563, 0.861575, 0.028843), MESH_MAT),Triangle(vec3(0.250665, 0.174116, -0.100404), vec3(0.229873, 0.243325, -0.043296), vec3(0.301093, 0.175622, -0.038996), MESH_MAT),Triangle(vec3(0.107609, 0.441088, 0.121235), vec3(0.200558, 0.477239, 0.112074), vec3(0.065221, 0.547188, 0.103696), MESH_MAT),Triangle(vec3(0.090798, 0.414595, -0.210227), vec3(0.046464, 0.408514, -0.283861), vec3(0.03305, 0.453248, -0.283001), MESH_MAT),Triangle(vec3(0.183732, 0.168592, 0.067833), vec3(0.214293, 0.23531, 0.023866), vec3(0.215546, 0.301405, 0.024583), MESH_MAT),Triangle(vec3(0.267049, 0.373613, -0.203833), vec3(0.30518, 0.460187, -0.206164), vec3(0.351141, 0.392923, -0.135184), MESH_MAT),Triangle(vec3(0.387782, 0.482593, -0.109372), vec3(0.292534, 0.534289, -0.188198), vec3(0.362396, 0.549906, -0.111638), MESH_MAT),Triangle(vec3(0.337285, 0.655444, -0.267331), vec3(0.375577, 0.696178, -0.195693), vec3(0.398941, 0.574632, -0.211248), MESH_MAT),Triangle(vec3(0.30518, 0.460187, -0.206164), vec3(0.387782, 0.482593, -0.109372), vec3(0.351141, 0.392923, -0.135184), MESH_MAT),Triangle(vec3(0.03305, 0.453248, -0.283001), vec3(-0.04316, 0.491362, -0.268452), vec3(0.053113, 0.491003, -0.226095), MESH_MAT),Triangle(vec3(0.229873, 0.243325, -0.043296), vec3(0.188193, 0.233623, -0.089333), vec3(0.211259, 0.280859, -0.052263), MESH_MAT),Triangle(vec3(0.214293, 0.23531, 0.023866), vec3(0.183732, 0.168592, 0.067833), vec3(0.294254, 0.171391, 0.027213), MESH_MAT),Triangle(vec3(0.269382, 0.910315, 0.298144), vec3(0.324657, 0.817069, 0.153857), vec3(0.327255, 0.885993, 0.244963), MESH_MAT),Triangle(vec3(0.273493, 0.777428, 0.276229), vec3(0.324657, 0.817069, 0.153857), vec3(0.269382, 0.910315, 0.298144), MESH_MAT),Triangle(vec3(0.327255, 0.885993, 0.244963), vec3(0.324657, 0.817069, 0.153857), vec3(0.292536, 0.781958, -0.011948), MESH_MAT),Triangle(vec3(0.273493, 0.777428, 0.276229), vec3(0.319153, 0.751898, 0.026741), vec3(0.324657, 0.817069, 0.153857), MESH_MAT),Triangle(vec3(0.319153, 0.751898, 0.026741), vec3(0.273493, 0.777428, 0.276229), vec3(0.303702, 0.749047, 0.179161), MESH_MAT),Triangle(vec3(0.107609, 0.441088, 0.121235), vec3(0.036224, 0.453763, 0.190561), vec3(0.093153, 0.399664, 0.167451), MESH_MAT),Triangle(vec3(0.259169, 0.223479, -0.163731), vec3(0.185811, 0.255815, -0.174283), vec3(0.188193, 0.233623, -0.089333), MESH_MAT),Triangle(vec3(0.062239, 0.247316, 0.138586), vec3(0.093153, 0.399664, 0.167451), vec3(0.02551, 0.326473, 0.190923), MESH_MAT),Triangle(vec3(0.410932, 0.592365, -0.085967), vec3(0.398941, 0.574632, -0.211248), vec3(0.391541, 0.677659, -0.082719), MESH_MAT),Triangle(vec3(0.232218, 0.773804, -0.002178), vec3(0.149563, 0.861575, 0.028843), vec3(0.126361, 0.819345, 0.068201), MESH_MAT),Triangle(vec3(0.062239, 0.247316, 0.138586), vec3(0.094689, 0.267498, 0.049501), vec3(0.093153, 0.399664, 0.167451), MESH_MAT),Triangle(vec3(-0.083438, 0.576525, 0.096248), vec3(0.065221, 0.547188, 0.103696), vec3(-0.00778, 0.61798, 0.043527), MESH_MAT),Triangle(vec3(0.093153, 0.399664, 0.167451), vec3(0.094689, 0.267498, 0.049501), vec3(0.107609, 0.441088, 0.121235), MESH_MAT),Triangle(vec3(0.324657, 0.817069, 0.153857), vec3(0.319153, 0.751898, 0.026741), vec3(0.292536, 0.781958, -0.011948), MESH_MAT),Triangle(vec3(0.183732, 0.168592, 0.067833), vec3(0.152295, 0.239825, 0.05623), vec3(0.137027, 0.168355, 0.157235), MESH_MAT),Triangle(vec3(-0.00778, 0.61798, 0.043527), vec3(0.122386, 0.618535, 0.044929), vec3(0.074057, 0.633076, -0.055413), MESH_MAT),Triangle(vec3(0.289604, 0.711879, 0.039908), vec3(0.319153, 0.751898, 0.026741), vec3(0.303702, 0.749047, 0.179161), MESH_MAT),Triangle(vec3(0.398941, 0.574632, -0.211248), vec3(0.375577, 0.696178, -0.195693), vec3(0.391541, 0.677659, -0.082719), MESH_MAT),Triangle(vec3(0.368073, 0.422161, -0.005827), vec3(0.357676, 0.475485, 0.020862), vec3(0.304708, 0.440428, 0.083115), MESH_MAT),Triangle(vec3(0.352736, 0.549814, -0.010589), vec3(0.273186, 0.583892, 0.049482), vec3(0.357676, 0.475485, 0.020862), MESH_MAT),Triangle(vec3(0.36033, 0.695769, -0.006685), vec3(0.385201, 0.753052, -0.062109), vec3(0.289604, 0.711879, 0.039908), MESH_MAT),Triangle(vec3(0.385201, 0.753052, -0.062109), vec3(0.319153, 0.751898, 0.026741), vec3(0.289604, 0.711879, 0.039908), MESH_MAT),Triangle(vec3(0.107609, 0.441088, 0.121235), vec3(-0.062308, 0.506301, 0.117343), vec3(0.036224, 0.453763, 0.190561), MESH_MAT),Triangle(vec3(0.137027, 0.168355, 0.157235), vec3(0.152295, 0.239825, 0.05623), vec3(0.062239, 0.247316, 0.138586), MESH_MAT),Triangle(vec3(0.229873, 0.243325, -0.043296), vec3(0.214293, 0.23531, 0.023866), vec3(0.294254, 0.171391, 0.027213), MESH_MAT),Triangle(vec3(0.232218, 0.773804, -0.002178), vec3(0.21536, 0.779135, -0.057927), vec3(0.149563, 0.861575, 0.028843), MESH_MAT),Triangle(vec3(0.229873, 0.243325, -0.043296), vec3(0.215546, 0.301405, 0.024583), vec3(0.214293, 0.23531, 0.023866), MESH_MAT),Triangle(vec3(-0.115264, 0.181389, 0.065295), vec3(0.091191, 0.185885, 0.092948), vec3(0.137027, 0.168355, 0.157235), MESH_MAT),Triangle(vec3(0.352736, 0.549814, -0.010589), vec3(0.410932, 0.592365, -0.085967), vec3(0.350381, 0.624555, 0.029195), MESH_MAT),Triangle(vec3(0.36033, 0.695769, -0.006685), vec3(0.350381, 0.624555, 0.029195), vec3(0.410932, 0.592365, -0.085967), MESH_MAT),Triangle(vec3(-0.350233, 0.241543, -0.10102), vec3(-0.199353, 0.182421, -0.125183), vec3(-0.210573, 0.168274, -0.013991), MESH_MAT),Triangle(vec3(0.232218, 0.773804, -0.002178), vec3(0.19213, 0.713509, -0.005638), vec3(0.245825, 0.716175, 0.03344), MESH_MAT),Triangle(vec3(-0.180952, 0.488165, 0.113129), vec3(-0.062308, 0.506301, 0.117343), vec3(-0.233824, 0.536232, 0.056396), MESH_MAT),Triangle(vec3(-0.062308, 0.506301, 0.117343), vec3(-0.08969, 0.470277, 0.163361), vec3(0.036224, 0.453763, 0.190561), MESH_MAT),Triangle(vec3(-0.180952, 0.488165, 0.113129), vec3(-0.233824, 0.536232, 0.056396), vec3(-0.256291, 0.423615, 0.079129), MESH_MAT),Triangle(vec3(0.098173, 0.175957, -0.172192), vec3(0.130785, 0.17467, -0.209267), vec3(0.149229, 0.170443, -0.135435), MESH_MAT),Triangle(vec3(0.109739, 0.178609, -0.103104), vec3(0.096535, 0.167887, -0.04525), vec3(0.149229, 0.170443, -0.135435), MESH_MAT),Triangle(vec3(0.074057, 0.633076, -0.055413), vec3(-0.059392, 0.65576, -0.004542), vec3(-0.00778, 0.61798, 0.043527), MESH_MAT),Triangle(vec3(0.232218, 0.773804, -0.002178), vec3(0.245825, 0.716175, 0.03344), vec3(0.292536, 0.781958, -0.011948), MESH_MAT),Triangle(vec3(-0.157191, 0.633864, 0.005751), vec3(-0.233824, 0.536232, 0.056396), vec3(-0.083438, 0.576525, 0.096248), MESH_MAT),Triangle(vec3(0.018997, 0.812234, 0.07921), vec3(0.19213, 0.713509, -0.005638), vec3(0.126361, 0.819345, 0.068201), MESH_MAT),Triangle(vec3(-0.364637, 0.337168, -0.013378), vec3(-0.327424, 0.270177, 0.028727), vec3(-0.305576, 0.373212, -0.040783), MESH_MAT),Triangle(vec3(0.122386, 0.618535, 0.044929), vec3(-0.00778, 0.61798, 0.043527), vec3(0.065221, 0.547188, 0.103696), MESH_MAT),Triangle(vec3(0.181319, 0.644357, 0.017247), vec3(0.202868, 0.57492, 0.082844), vec3(0.273186, 0.583892, 0.049482), MESH_MAT),Triangle(vec3(-0.203962, 0.618832, -0.065334), vec3(-0.233824, 0.536232, 0.056396), vec3(-0.157191, 0.633864, 0.005751), MESH_MAT),Triangle(vec3(-0.059392, 0.65576, -0.004542), vec3(-0.157191, 0.633864, 0.005751), vec3(-0.083438, 0.576525, 0.096248), MESH_MAT),Triangle(vec3(0.19213, 0.713509, -0.005638), vec3(0.181319, 0.644357, 0.017247), vec3(0.245825, 0.716175, 0.03344), MESH_MAT),Triangle(vec3(-0.059392, 0.65576, -0.004542), vec3(-0.083438, 0.576525, 0.096248), vec3(-0.00778, 0.61798, 0.043527), MESH_MAT),Triangle(vec3(0.181319, 0.644357, 0.017247), vec3(0.122386, 0.618535, 0.044929), vec3(0.202868, 0.57492, 0.082844), MESH_MAT),Triangle(vec3(-0.062308, 0.506301, 0.117343), vec3(0.107609, 0.441088, 0.121235), vec3(0.065221, 0.547188, 0.103696), MESH_MAT),Triangle(vec3(0.149563, 0.861575, 0.028843), vec3(0.007918, 0.939911, 0.118217), vec3(0.126361, 0.819345, 0.068201), MESH_MAT),Triangle(vec3(0.21536, 0.779135, -0.057927), vec3(0.232218, 0.773804, -0.002178), vec3(0.292536, 0.781958, -0.011948), MESH_MAT),Triangle(vec3(0.122386, 0.618535, 0.044929), vec3(0.181319, 0.644357, 0.017247), vec3(0.074057, 0.633076, -0.055413), MESH_MAT),Triangle(vec3(-0.180952, 0.488165, 0.113129), vec3(-0.08969, 0.470277, 0.163361), vec3(-0.062308, 0.506301, 0.117343), MESH_MAT),Triangle(vec3(0.122386, 0.618535, 0.044929), vec3(0.065221, 0.547188, 0.103696), vec3(0.202868, 0.57492, 0.082844), MESH_MAT),Triangle(vec3(0.036224, 0.453763, 0.190561), vec3(-0.08969, 0.470277, 0.163361), vec3(-0.034259, 0.408164, 0.190775), MESH_MAT),Triangle(vec3(-0.327424, 0.270177, 0.028727), vec3(-0.254881, 0.286715, 0.037952), vec3(-0.305576, 0.373212, -0.040783), MESH_MAT),Triangle(vec3(0.273186, 0.583892, 0.049482), vec3(0.289604, 0.711879, 0.039908), vec3(0.245825, 0.716175, 0.03344), MESH_MAT),Triangle(vec3(-0.210573, 0.168274, -0.013991), vec3(-0.166502, 0.175303, 0.014959), vec3(-0.327424, 0.270177, 0.028727), MESH_MAT),Triangle(vec3(0.350381, 0.624555, 0.029195), vec3(0.36033, 0.695769, -0.006685), vec3(0.289604, 0.711879, 0.039908), MESH_MAT),Triangle(vec3(-0.166502, 0.175303, 0.014959), vec3(-0.254881, 0.286715, 0.037952), vec3(-0.327424, 0.270177, 0.028727), MESH_MAT),Triangle(vec3(0.250622, 0.505524, 0.088913), vec3(0.304708, 0.440428, 0.083115), vec3(0.273186, 0.583892, 0.049482), MESH_MAT),Triangle(vec3(0.200558, 0.477239, 0.112074), vec3(0.250622, 0.505524, 0.088913), vec3(0.202868, 0.57492, 0.082844), MESH_MAT),Triangle(vec3(0.166991, 0.36131, 0.085108), vec3(0.200558, 0.477239, 0.112074), vec3(0.107609, 0.441088, 0.121235), MESH_MAT),Triangle(vec3(0.250622, 0.505524, 0.088913), vec3(0.273186, 0.583892, 0.049482), vec3(0.202868, 0.57492, 0.082844), MESH_MAT),Triangle(vec3(0.215546, 0.301405, 0.024583), vec3(0.166991, 0.36131, 0.085108), vec3(0.152295, 0.239825, 0.05623), MESH_MAT),Triangle(vec3(0.304708, 0.440428, 0.083115), vec3(0.200558, 0.477239, 0.112074), vec3(0.166991, 0.36131, 0.085108), MESH_MAT),Triangle(vec3(-0.173063, 0.282673, 0.134147), vec3(-0.134577, 0.348916, 0.156555), vec3(-0.256291, 0.423615, 0.079129), MESH_MAT),Triangle(vec3(-0.180952, 0.488165, 0.113129), vec3(-0.256291, 0.423615, 0.079129), vec3(-0.134577, 0.348916, 0.156555), MESH_MAT),Triangle(vec3(0.273186, 0.583892, 0.049482), vec3(0.350381, 0.624555, 0.029195), vec3(0.289604, 0.711879, 0.039908), MESH_MAT),Triangle(vec3(-0.134577, 0.348916, 0.156555), vec3(-0.08969, 0.470277, 0.163361), vec3(-0.180952, 0.488165, 0.113129), MESH_MAT),Triangle(vec3(-0.168866, 0.224887, 0.1125), vec3(-0.070533, 0.252196, 0.154089), vec3(-0.173063, 0.282673, 0.134147), MESH_MAT),Triangle(vec3(0.269382, 0.910315, 0.298144), vec3(0.238478, 0.842075, 0.306499), vec3(0.273493, 0.777428, 0.276229), MESH_MAT),Triangle(vec3(0.062931, 0.177577, -0.271961), vec3(-0.152536, 0.178287, -0.215175), vec3(-0.144218, 0.234272, -0.220998), MESH_MAT),Triangle(vec3(0.352736, 0.549814, -0.010589), vec3(0.350381, 0.624555, 0.029195), vec3(0.273186, 0.583892, 0.049482), MESH_MAT),Triangle(vec3(0.200558, 0.477239, 0.112074), vec3(0.202868, 0.57492, 0.082844), vec3(0.065221, 0.547188, 0.103696), MESH_MAT),Triangle(vec3(0.304708, 0.440428, 0.083115), vec3(0.331801, 0.36684, 0.011608), vec3(0.368073, 0.422161, -0.005827), MESH_MAT),Triangle(vec3(-0.173063, 0.282673, 0.134147), vec3(-0.070533, 0.252196, 0.154089), vec3(-0.134577, 0.348916, 0.156555), MESH_MAT),Triangle(vec3(0.183732, 0.168592, 0.067833), vec3(0.215546, 0.301405, 0.024583), vec3(0.152295, 0.239825, 0.05623), MESH_MAT),Triangle(vec3(0.232218, 0.773804, -0.002178), vec3(0.126361, 0.819345, 0.068201), vec3(0.19213, 0.713509, -0.005638), MESH_MAT),Triangle(vec3(-0.070533, 0.252196, 0.154089), vec3(0.02551, 0.326473, 0.190923), vec3(-0.134577, 0.348916, 0.156555), MESH_MAT),Triangle(vec3(-0.034259, 0.408164, 0.190775), vec3(-0.08969, 0.470277, 0.163361), vec3(-0.134577, 0.348916, 0.156555), MESH_MAT),Triangle(vec3(0.025993, 0.22367, 0.139888), vec3(-0.168866, 0.224887, 0.1125), vec3(-0.136813, 0.174497, 0.108037), MESH_MAT),Triangle(vec3(-0.134577, 0.348916, 0.156555), vec3(0.02551, 0.326473, 0.190923), vec3(-0.034259, 0.408164, 0.190775), MESH_MAT),Triangle(vec3(0.273186, 0.583892, 0.049482), vec3(0.245825, 0.716175, 0.03344), vec3(0.181319, 0.644357, 0.017247), MESH_MAT),Triangle(vec3(0.025993, 0.22367, 0.139888), vec3(-0.070533, 0.252196, 0.154089), vec3(-0.168866, 0.224887, 0.1125), MESH_MAT),Triangle(vec3(-0.062308, 0.506301, 0.117343), vec3(-0.083438, 0.576525, 0.096248), vec3(-0.233824, 0.536232, 0.056396), MESH_MAT),Triangle(vec3(-0.039482, 0.191432, -0.05586), vec3(0.074871, 0.184721, -0.087058), vec3(0.079803, 0.190642, -0.019812), MESH_MAT),Triangle(vec3(0.096535, 0.167887, -0.04525), vec3(0.098173, 0.175957, -0.172192), vec3(0.149229, 0.170443, -0.135435), MESH_MAT),Triangle(vec3(0.200558, 0.477239, 0.112074), vec3(0.304708, 0.440428, 0.083115), vec3(0.250622, 0.505524, 0.088913), MESH_MAT),Triangle(vec3(0.025993, 0.22367, 0.139888), vec3(0.02551, 0.326473, 0.190923), vec3(-0.070533, 0.252196, 0.154089), MESH_MAT),Triangle(vec3(0.246268, 0.360992, 0.082906), vec3(0.304708, 0.440428, 0.083115), vec3(0.166991, 0.36131, 0.085108), MESH_MAT),Triangle(vec3(0.137027, 0.168355, 0.157235), vec3(0.062239, 0.247316, 0.138586), vec3(0.025993, 0.22367, 0.139888), MESH_MAT),Triangle(vec3(-0.136813, 0.174497, 0.108037), vec3(-0.115264, 0.181389, 0.065295), vec3(0.137027, 0.168355, 0.157235), MESH_MAT),Triangle(vec3(0.02551, 0.326473, 0.190923), vec3(0.036224, 0.453763, 0.190561), vec3(-0.034259, 0.408164, 0.190775), MESH_MAT),Triangle(vec3(0.126361, 0.819345, 0.068201), vec3(-0.020466, 0.859784, 0.139961), vec3(0.018997, 0.812234, 0.07921), MESH_MAT),Triangle(vec3(0.062239, 0.247316, 0.138586), vec3(0.02551, 0.326473, 0.190923), vec3(0.025993, 0.22367, 0.139888), MESH_MAT),Triangle(vec3(0.331801, 0.36684, 0.011608), vec3(0.304708, 0.440428, 0.083115), vec3(0.246268, 0.360992, 0.082906), MESH_MAT),Triangle(vec3(0.093153, 0.399664, 0.167451), vec3(0.036224, 0.453763, 0.190561), vec3(0.02551, 0.326473, 0.190923), MESH_MAT),Triangle(vec3(-0.118051, 0.173732, -0.10069), vec3(-0.152536, 0.178287, -0.215175), vec3(-0.099449, 0.170033, -0.187359), MESH_MAT),Triangle(vec3(0.002328, 0.196857, -0.197549), vec3(0.070428, 0.19538, -0.187712), vec3(-0.039482, 0.191432, -0.05586), MESH_MAT),Triangle(vec3(-0.210573, 0.168274, -0.013991), vec3(-0.158281, 0.179789, -0.108768), vec3(-0.170752, 0.172512, -0.039055), MESH_MAT),Triangle(vec3(-0.199353, 0.182421, -0.125183), vec3(-0.118051, 0.173732, -0.10069), vec3(-0.158281, 0.179789, -0.108768), MESH_MAT),Triangle(vec3(-0.166502, 0.175303, 0.014959), vec3(-0.210573, 0.168274, -0.013991), vec3(-0.170752, 0.172512, -0.039055), MESH_MAT),Triangle(vec3(0.245825, 0.716175, 0.03344), vec3(0.289604, 0.711879, 0.039908), vec3(0.303702, 0.749047, 0.179161), MESH_MAT),Triangle(vec3(0.091191, 0.185885, 0.092948), vec3(-0.039482, 0.191432, -0.05586), vec3(0.098698, 0.190798, 0.002408), MESH_MAT),Triangle(vec3(-0.099449, 0.170033, -0.187359), vec3(-0.152536, 0.178287, -0.215175), vec3(0.062931, 0.177577, -0.271961), MESH_MAT),Triangle(vec3(0.062931, 0.177577, -0.271961), vec3(0.017069, 0.173181, -0.223031), vec3(-0.017042, 0.179769, -0.212595), MESH_MAT),Triangle(vec3(-0.10164, 0.197004, -0.165343), vec3(-0.118051, 0.173732, -0.10069), vec3(-0.099449, 0.170033, -0.187359), MESH_MAT),Triangle(vec3(-0.059192, 0.174127, -0.20089), vec3(0.062931, 0.177577, -0.271961), vec3(-0.017042, 0.179769, -0.212595), MESH_MAT),Triangle(vec3(-0.199353, 0.182421, -0.125183), vec3(-0.158281, 0.179789, -0.108768), vec3(-0.210573, 0.168274, -0.013991), MESH_MAT),Triangle(vec3(-0.199353, 0.182421, -0.125183), vec3(-0.152536, 0.178287, -0.215175), vec3(-0.118051, 0.173732, -0.10069), MESH_MAT),Triangle(vec3(0.070428, 0.19538, -0.187712), vec3(0.098173, 0.175957, -0.172192), vec3(0.074871, 0.184721, -0.087058), MESH_MAT),Triangle(vec3(0.087228, 0.172225, -0.209682), vec3(0.062931, 0.177577, -0.271961), vec3(0.130785, 0.17467, -0.209267), MESH_MAT),Triangle(vec3(-0.115264, 0.181389, 0.065295), vec3(-0.039482, 0.191432, -0.05586), vec3(0.091191, 0.185885, 0.092948), MESH_MAT),Triangle(vec3(0.410932, 0.592365, -0.085967), vec3(0.292534, 0.534289, -0.188198), vec3(0.398941, 0.574632, -0.211248), MESH_MAT),Triangle(vec3(0.017069, 0.173181, -0.223031), vec3(0.062931, 0.177577, -0.271961), vec3(0.087228, 0.172225, -0.209682), MESH_MAT),Triangle(vec3(0.292534, 0.534289, -0.188198), vec3(0.410932, 0.592365, -0.085967), vec3(0.362396, 0.549906, -0.111638), MESH_MAT),Triangle(vec3(0.331801, 0.36684, 0.011608), vec3(0.282746, 0.304155, -0.075912), vec3(0.351141, 0.392923, -0.135184), MESH_MAT),Triangle(vec3(0.087228, 0.172225, -0.209682), vec3(0.130785, 0.17467, -0.209267), vec3(0.098173, 0.175957, -0.172192), MESH_MAT),Triangle(vec3(0.323986, 0.561269, -0.242568), vec3(0.398941, 0.574632, -0.211248), vec3(0.292534, 0.534289, -0.188198), MESH_MAT),Triangle(vec3(-0.166502, 0.175303, 0.014959), vec3(-0.115264, 0.181389, 0.065295), vec3(-0.136813, 0.174497, 0.108037), MESH_MAT),Triangle(vec3(0.331801, 0.36684, 0.011608), vec3(0.215546, 0.301405, 0.024583), vec3(0.282746, 0.304155, -0.075912), MESH_MAT),Triangle(vec3(-0.166502, 0.175303, 0.014959), vec3(-0.10598, 0.178193, -0.021878), vec3(-0.115264, 0.181389, 0.065295), MESH_MAT),Triangle(vec3(0.282746, 0.304155, -0.075912), vec3(0.267049, 0.373613, -0.203833), vec3(0.351141, 0.392923, -0.135184), MESH_MAT),Triangle(vec3(0.266756, 0.590052, -0.264737), vec3(0.323986, 0.561269, -0.242568), vec3(0.292534, 0.534289, -0.188198), MESH_MAT),Triangle(vec3(0.215546, 0.301405, 0.024583), vec3(0.211259, 0.280859, -0.052263), vec3(0.282746, 0.304155, -0.075912), MESH_MAT),Triangle(vec3(0.294254, 0.171391, 0.027213), vec3(0.250665, 0.174116, -0.100404), vec3(0.301093, 0.175622, -0.038996), MESH_MAT),Triangle(vec3(0.245825, 0.716175, 0.03344), vec3(0.303702, 0.749047, 0.179161), vec3(0.273493, 0.777428, 0.276229), MESH_MAT),Triangle(vec3(0.071902, 0.227024, -0.266072), vec3(0.130785, 0.17467, -0.209267), vec3(0.062931, 0.177577, -0.271961), MESH_MAT),Triangle(vec3(0.065221, 0.547188, 0.103696), vec3(-0.083438, 0.576525, 0.096248), vec3(-0.062308, 0.506301, 0.117343), MESH_MAT),Triangle(vec3(-0.099449, 0.170033, -0.187359), vec3(0.062931, 0.177577, -0.271961), vec3(-0.059192, 0.174127, -0.20089), MESH_MAT),Triangle(vec3(0.211259, 0.280859, -0.052263), vec3(0.218577, 0.29514, -0.099413), vec3(0.282746, 0.304155, -0.075912), MESH_MAT),Triangle(vec3(0.185976, 0.317338, -0.170419), vec3(0.282746, 0.304155, -0.075912), vec3(0.218577, 0.29514, -0.099413), MESH_MAT),Triangle(vec3(-0.039482, 0.191432, -0.05586), vec3(0.070428, 0.19538, -0.187712), vec3(0.074871, 0.184721, -0.087058), MESH_MAT),Triangle(vec3(0.294254, 0.171391, 0.027213), vec3(0.20394, 0.16692, -0.076098), vec3(0.250665, 0.174116, -0.100404), MESH_MAT),Triangle(vec3(0.185976, 0.317338, -0.170419), vec3(0.267049, 0.373613, -0.203833), vec3(0.282746, 0.304155, -0.075912), MESH_MAT),Triangle(vec3(0.174443, 0.172387, -0.046664), vec3(0.294254, 0.171391, 0.027213), vec3(0.183732, 0.168592, 0.067833), MESH_MAT),Triangle(vec3(-0.10598, 0.178193, -0.021878), vec3(-0.096226, 0.167059, -0.079861), vec3(-0.039482, 0.191432, -0.05586), MESH_MAT),Triangle(vec3(0.20394, 0.16692, -0.076098), vec3(0.294254, 0.171391, 0.027213), vec3(0.174443, 0.172387, -0.046664), MESH_MAT),Triangle(vec3(0.137027, 0.168355, 0.157235), vec3(0.174443, 0.172387, -0.046664), vec3(0.183732, 0.168592, 0.067833), MESH_MAT),Triangle(vec3(0.137695, 0.166329, 0.010797), vec3(0.137027, 0.168355, 0.157235), vec3(0.091191, 0.185885, 0.092948), MESH_MAT),Triangle(vec3(0.137695, 0.166329, 0.010797), vec3(0.174443, 0.172387, -0.046664), vec3(0.137027, 0.168355, 0.157235), MESH_MAT),Triangle(vec3(0.216949, 0.183398, -0.245842), vec3(0.271874, 0.178675, -0.190704), vec3(0.250665, 0.174116, -0.100404), MESH_MAT),Triangle(vec3(0.188624, 0.170386, -0.131015), vec3(0.250665, 0.174116, -0.100404), vec3(0.20394, 0.16692, -0.076098), MESH_MAT),Triangle(vec3(0.091191, 0.185885, 0.092948), vec3(0.114107, 0.183072, 0.026409), vec3(0.137695, 0.166329, 0.010797), MESH_MAT),Triangle(vec3(0.188624, 0.170386, -0.131015), vec3(0.130785, 0.17467, -0.209267), vec3(0.250665, 0.174116, -0.100404), MESH_MAT),Triangle(vec3(0.130785, 0.17467, -0.209267), vec3(0.216949, 0.183398, -0.245842), vec3(0.250665, 0.174116, -0.100404), MESH_MAT),Triangle(vec3(0.121866, 0.169367, -0.016774), vec3(0.174443, 0.172387, -0.046664), vec3(0.137695, 0.166329, 0.010797), MESH_MAT),Triangle(vec3(0.185976, 0.317338, -0.170419), vec3(0.141412, 0.354538, -0.214361), vec3(0.267049, 0.373613, -0.203833), MESH_MAT),Triangle(vec3(0.127711, 0.175283, -0.057786), vec3(0.174443, 0.172387, -0.046664), vec3(0.121866, 0.169367, -0.016774), MESH_MAT),Triangle(vec3(-0.118051, 0.173732, -0.10069), vec3(-0.10164, 0.197004, -0.165343), vec3(-0.096226, 0.167059, -0.079861), MESH_MAT),Triangle(vec3(-0.115264, 0.181389, 0.065295), vec3(-0.10598, 0.178193, -0.021878), vec3(-0.039482, 0.191432, -0.05586), MESH_MAT),Triangle(vec3(0.114107, 0.183072, 0.026409), vec3(0.091191, 0.185885, 0.092948), vec3(0.098698, 0.190798, 0.002408), MESH_MAT),Triangle(vec3(0.130785, 0.17467, -0.209267), vec3(0.188624, 0.170386, -0.131015), vec3(0.149229, 0.170443, -0.135435), MESH_MAT),Triangle(vec3(-0.10164, 0.197004, -0.165343), vec3(-0.041141, 0.197265, -0.183413), vec3(-0.039482, 0.191432, -0.05586), MESH_MAT),Triangle(vec3(-0.350233, 0.241543, -0.10102), vec3(-0.292781, 0.26389, -0.171092), vec3(-0.199353, 0.182421, -0.125183), MESH_MAT),Triangle(vec3(-0.041141, 0.197265, -0.183413), vec3(0.002328, 0.196857, -0.197549), vec3(-0.039482, 0.191432, -0.05586), MESH_MAT),Triangle(vec3(0.096535, 0.167887, -0.04525), vec3(0.127711, 0.175283, -0.057786), vec3(0.121866, 0.169367, -0.016774), MESH_MAT),Triangle(vec3(0.096535, 0.167887, -0.04525), vec3(0.109739, 0.178609, -0.103104), vec3(0.127711, 0.175283, -0.057786), MESH_MAT),Triangle(vec3(0.5, 0.183406, -0.5), vec3(0.5, 0.183406, 0.5), vec3(0.5, -0.816594, 0.5), MESH_MAT),Triangle(vec3(0.5, 0.183406, 0.5), vec3(-0.5, 0.183406, 0.5), vec3(-0.5, -0.816594, 0.5), MESH_MAT),Triangle(vec3(-0.5, 0.183406, 0.5), vec3(-0.5, 0.183406, -0.5), vec3(-0.5, -0.816594, -0.5), MESH_MAT),Triangle(vec3(-0.5, 0.183406, -0.5), vec3(0.5, 0.183406, -0.5), vec3(0.5, -0.816594, -0.5), MESH_MAT),Triangle(vec3(0.5, 0.183406, 0.5), vec3(0.5, 0.183406, -0.5), vec3(-0.5, 0.183406, -0.5), MESH_MAT)\n);\n    // Doesn't matter since we're in a box\nvec3 sky_color(vec3 d) {\n    return vec3(0.0);\n}\n\n// basic camera ray\nRay camera(vec2 ndc) {\n    Ray cam; \n    cam.origin    = vec3(0.0, 0.5, -1.2);\n    cam.direction = normalize(vec3(ndc, 1.0));\n    \n    return cam;\n}\n#endif\n\n#ifdef MIRROR_WORLD\n// Cornell box scene with infinite mirrors\n\n#define LIGHT_POS vec3(0.0, 2.2, 0.0)\n#define LIGHT_RADIUS 0.5\n#define LIGHT_STRENGTH 40.0\n#define LIGHT_COLOR vec3(1.0, 1.0, 1.0)\n\n#define N_SPHERES 8\nconst Sphere SPHERES[N_SPHERES] = Sphere[](\n    Sphere(vec3(0.0, -1000.5, 0.0), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 0.0)), // Ground\n    Sphere(vec3(1001.5, 0.0, 0.0), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 0.0)), // Right wall\n    Sphere(vec3(-1001.5, 0.0, 0.0), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 0.0)), // Left wall\n    Sphere(vec3(0.0, 0.0, 1001), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 0.0)), // Back wall\n    Sphere(vec3(0.0, 0.0, -1002), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 0.0)), // Front wall\n    Sphere(vec3(0.0, 1002, 0.0), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 0.0)), // Ceiling\n    \n    Sphere(vec3(0.0, 0.0, 0.0), 0.5, Material(vec3(0.9, 0.9, 0.9), vec3(0.0, 0.0, 0.0), 1.0)), // White diffuse ball (to showcase GI)\n\n    Sphere(LIGHT_POS, LIGHT_RADIUS, Material(vec3(0.0, 0.0, 0.0), LIGHT_COLOR * LIGHT_STRENGTH, 1.0)) // Light sphere\n);\n\n#define N_TRIANGLES 1\nconst Triangle TRIS[N_TRIANGLES] = Triangle[](\n    Triangle(vec3(0), vec3(0), vec3(0), MISS.mat)\n);\n\n    // Doesn't matter since we're in a box\nvec3 sky_color(vec3 d) {\n    return vec3(0.0);\n}\n\n// basic camera ray\nRay camera(vec2 ndc) {\n    Ray cam; \n    cam.origin    = vec3(0.0, 0.7, -1.2);\n    cam.direction = normalize(vec3(ndc, 1.0));\n    \n    return cam;\n}\n#endif\n\n#ifdef SCENE_FURNACE\n// Blue Furnace test scene\n#define LIGHT_POS vec3(1.0, 1.0, -1.0)\n#define LIGHT_RADIUS 0.1\n#define LIGHT_STRENGTH 0.0\n#define LIGHT_COLOR vec3(1.0, 1.0, 1.0)\n\n#define N_SPHERES 2\nconst Sphere SPHERES[N_SPHERES] = Sphere[](\n    Sphere(vec3(0.0, 0.0, 0.0), 0.5, Material(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0), 1.0)), // Perfect white sphere\n    \n    Sphere(LIGHT_POS, LIGHT_RADIUS, Material(vec3(0.0, 0.0, 0.0), LIGHT_COLOR * LIGHT_STRENGTH, 1.0)) // Light sphere\n);\n\n#define N_TRIANGLES 1\nconst Triangle TRIS[N_TRIANGLES] = Triangle[](\n    Triangle(vec3(0), vec3(0), vec3(0), MISS.mat)\n);\n\nvec3 sky_color(vec3 d) {\n    return vec3(0.0, 0.0, 1.0);\n}\n\n// basic camera ray\nRay camera(vec2 ndc) {\n    Ray cam; \n    cam.origin    = vec3(0.0, 0.0, -1.0);\n    cam.direction = normalize(vec3(ndc, 1.0));\n    \n    return cam;\n}\n#endif\n\n#ifdef SCENE_MYSTIC_HORIZON\n#define LIGHT_POS vec3(0.0, 2.2, 0.0)\n#define LIGHT_RADIUS 0.5\n#define LIGHT_STRENGTH 40.0\n#define LIGHT_COLOR vec3(1.0, 1.0, 1.0)\n\n#define N_SPHERES 5\nconst Sphere SPHERES[N_SPHERES] = Sphere[](\n    Sphere(vec3(0.0, -1000.5, 0.0), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 1.0)), // Ground\n    Sphere(vec3(-0.8, 0.0, 0.0), 0.4, Material(vec3(1.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0)),  // Red sphere\n    Sphere(vec3(0.8, 0.0, 0.0), 0.4, Material(vec3(0.0, 1.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0)),  // Green sphere\n    Sphere(vec3(0.0, 0.0, 0.8), 0.4, Material(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 0.0), 1.0)),  // Blue sphere\n    Sphere(LIGHT_POS, LIGHT_RADIUS, Material(vec3(0.0, 0.0, 0.0), LIGHT_COLOR * LIGHT_STRENGTH, 1.0)) // Light sphere\n);\n\n#define N_TRIANGLES 1\nconst Triangle TRIS[N_TRIANGLES] = Triangle[](\n    Triangle(vec3(0), vec3(0), vec3(0), MISS.mat)\n);\n\nvec3 sky_color(vec3 d) {\n    float t = 0.5 * (d.y + 1.0); // Mapping y-direction to color intensity\n    return mix(vec3(0.1, 0.3, 0.7), vec3(1.0, 1.0, 1.0), t); // Gradient from blue to white\n}\n\nRay camera(vec2 ndc) {\n    Ray cam; \n    cam.origin    = vec3(0.0, 1.0, -3.0); // Adjusted camera position\n    cam.direction = normalize(vec3(ndc, 1.0));\n    \n    return cam;\n}\n#endif\n\n#ifdef SCENE_GLOWING_EMBER\n#define LIGHT_POS vec3(0.0, 2.2, 0.0)\n#define LIGHT_RADIUS 0.5\n#define LIGHT_STRENGTH 50.0\n#define LIGHT_COLOR vec3(1.0, 0.4, 0.2) // Warm orange light\n\n#define N_SPHERES 6\nconst Sphere SPHERES[N_SPHERES] = Sphere[](\n    Sphere(vec3(0.0, -1000.5, 0.0), 1000.0, Material(vec3(0.8, 0.8, 0.8), vec3(0.0, 0.0, 0.0), 1.0)), // Ground\n    Sphere(vec3(-0.5, 0.0, 0.0), 0.4, Material(vec3(0.9, 0.5, 0.2), vec3(0.0, 0.0, 0.0), 0.1)),  // Warm and reflective sphere\n    Sphere(vec3(0.5, 0.0, 0.0), 0.4, Material(vec3(0.9, 0.5, 0.2), vec3(0.0, 0.0, 0.0), 0.9)),  // Warm and reflective sphere\n    Sphere(vec3(0.0, 0.6, 0.0), 0.4, Material(vec3(0.9, 0.5, 0.2), vec3(0.0, 0.0, 0.0), 0.5)),  // Warm and reflective sphere\n    Sphere(vec3(0.0, -0.6, 0.0), 0.4, Material(vec3(0.9, 0.5, 0.2), vec3(0.0, 0.0, 0.0), 0.8)), // Warm and reflective sphere\n    Sphere(LIGHT_POS, LIGHT_RADIUS, Material(vec3(0.0, 0.0, 0.0), LIGHT_COLOR * LIGHT_STRENGTH, 1.0)) // Light sphere\n);\n\n#define N_TRIANGLES 1\nconst Triangle TRIS[N_TRIANGLES] = Triangle[](\n    Triangle(vec3(0), vec3(0), vec3(0), MISS.mat)\n);\n\nvec3 sky_color(vec3 d) {\n    float t = 0.5 * (d.y + 1.0);\n    return mix(vec3(0.1, 0.1, 0.2), vec3(0.8, 0.3, 0.0), t); // Gradient from dark blue to warm orange\n}\n\nRay camera(vec2 ndc) {\n    Ray cam; \n    cam.origin    = vec3(0.0, 1.5, -3.0);\n    cam.direction = normalize(vec3(ndc, 1.0));\n    \n    return cam;\n}\n#endif\n\n// end scenes\nfloat hit_sphere(vec3 center, float radius, Ray r) {\n    vec3 oc = r.origin - center;\n    if (dot(oc,oc) < radius*radius) return 0.01;\n    float a = dot(r.direction, r.direction);\n    float half_b = dot(oc, r.direction);\n    float c = dot(oc,oc) - radius*radius;\n    float discriminant = half_b*half_b - a*c;\n\n    if (discriminant < 0.0) {\n        return -1.0;\n    } else {\n        return (-half_b - sqrt(discriminant) ) / a;\n    }\n}\n\n// ty chatgpt\nfloat hit_triangle(vec3 v1, vec3 v2, vec3 v3, Ray r) {\n    const float EPSILON = 0.0001;\n    vec3 e1 = v2 - v1;\n    vec3 e2 = v3 - v1;\n    vec3 h = cross(r.direction, e2);\n    float a = dot(e1, h);\n\n    if (a > -EPSILON && a < EPSILON) {\n        return -1.0; // Ray and triangle are parallel\n    }\n\n    float f = 1.0 / a;\n    vec3 s = r.origin - v1;\n    float u = f * dot(s, h);\n\n    if (u < 0.0 || u > 1.0) {\n        return -1.0; // Intersection point is outside the triangle\n    }\n\n    vec3 q = cross(s, e1);\n    float v = f * dot(r.direction, q);\n\n    if (v < 0.0 || u + v > 1.0) {\n        return -1.0; // Intersection point is outside the triangle\n    }\n\n    float t = f * dot(e2, q);\n\n    if (t > EPSILON) {\n        return t; // Intersection\n    } else {\n        return -1.0; // Intersection point is behind the ray origin\n    }\n}\n\n\nHitInfo intersect_spheres(Ray r) {\n    float closest = 100000.0;\n    Sphere o_closest;\n    for (int i = 0; i < N_SPHERES; ++i) {\n        Sphere obj = SPHERES[i];\n        float dst = hit_sphere(obj.center, obj.radius, r);\n        if (dst < closest && dst > 0.0) {\n            o_closest = obj;\n            closest = dst;\n        }\n    }\n    \n    if (closest > 99999.0) {\n        return MISS;\n    } else {\n        vec3 pos = r.origin + r.direction * closest;\n        return HitInfo(true, pos, (pos - o_closest.center) / o_closest.radius, closest, o_closest.mat); \n    }\n}\n\nHitInfo intersect_triangles(Ray r) {\n    float closest = 100000.0;\n    Triangle o_closest;\n    int i = 0;\n    while (i < N_TRIANGLES) {\n        Triangle obj = TRIS[i];\n        float dst = hit_triangle(obj.v1, obj.v2, obj.v3, r);\n        if (dst < closest && dst > 0.0) {\n            o_closest = obj;\n            closest = dst;\n        }\n        ++i;\n    }\n    \n    if (closest > 99999.0) {\n        return MISS;\n    } else {\n        vec3 pos = r.origin + r.direction * closest;\n        \n        vec3 norm12 = normalize(o_closest.v2 - o_closest.v1);\n        vec3 norm13 = normalize(o_closest.v3 - o_closest.v1);\n        vec3 norm = normalize(cross(norm12, norm13));\n        norm *= sign(dot(norm, r.origin - pos));\n        return HitInfo(true, pos, norm, closest, o_closest.mat); \n    }\n}\n\nHitInfo intersect_scene(Ray r) {\n    HitInfo sphere_int =   intersect_spheres(r);\n    HitInfo tri_int    = intersect_triangles(r);\n    \n    if (!tri_int.hit) return sphere_int;\n    if (!sphere_int.hit) return tri_int;\n    \n    if (tri_int.dst < sphere_int.dst) {\n        return tri_int;\n    }\n    return sphere_int;\n}\n\nvec3 trace(Ray r) {\n    vec3 color = vec3(1);\n    vec3 light = vec3(0);\n    \n    for (int bounce = 0; bounce < N_BOUNCES; ++bounce) {\n        HitInfo intersect = intersect_scene(r);\n        if (!intersect.hit || length(color) < 0.01) {\n            light += color * sky_color(r.direction);\n            break;\n        }\n        \n        Material mat = intersect.mat;\n\n        // Direct Light Sampling (DLS)\n        vec3 light_pos = LIGHT_POS + normalize(in_unit_sphere(intersect.position*4.0)) * LIGHT_RADIUS;\n        vec3 dir_to_light = normalize(light_pos - intersect.position);\n        \n        float diffuse_strength = max(0.0, dot(intersect.normal, dir_to_light));\n        float refl_strength = float(dot(normalize(reflect(r.direction, intersect.normal)), dir_to_light) > 0.99);\n        float dl_strength = mix(refl_strength, diffuse_strength, clamp(mat.roughness, 0.0, 1.0)); \n        \n        vec3 direct_lighting = vec3(dl_strength) * LIGHT_COLOR;\n        direct_lighting *= LIGHT_STRENGTH / pow(distance(intersect.position, light_pos), 2.0);\n        Ray r_shadow = Ray(intersect.position + intersect.normal * 0.001, dir_to_light);\n        HitInfo shadow = intersect_scene(r_shadow);\n        bool shadowed = true;\n        if (!shadow.hit) shadowed = false;\n        else {\n            if (shadow.dst > distance(light_pos, intersect.position)) shadowed = false;\n            if (distance(shadow.position, LIGHT_POS) <= LIGHT_RADIUS+0.01) shadowed = false;\n        }\n        direct_lighting *= float(!shadowed);\n        \n#ifndef NO_DLS\n        // DLS is really bright without this correction\n        #define DLS_BRIGHTNESS (0.125)\n        light += color * direct_lighting * mat.color * DLS_BRIGHTNESS;\n        light += color * mat.emission * (DLS_BRIGHTNESS*2.0);\n#else\n        light += color * mat.emission;\n#endif\n        \n        color *= mat.color;\n        \n        r.origin = intersect.position + intersect.normal * .001;\n        vec3 diffuse_dir = normalize(normalize(in_unit_sphere(intersect.position)) + intersect.normal);\n        vec3 refl_dir = reflect(r.direction, intersect.normal);\n        r.direction = mix(refl_dir, diffuse_dir, mat.roughness);\n    }\n    \n    return light;  \n}\n\nfloat greyscale(vec4 color) {\n    float luminance = dot(color.rgb, vec3(0.299, 0.587, 0.114));\n    return luminance;\n}\n\n/*\n * FBCT - Fred's Basic Color Transform\n */\n \nconst float FBCT_DESATURATION = 0.02;\nconst float FBCT_EXPOSURE = 1.2;\n\nconst mat4 fbct_color_matrix = mat4(\n    1.00, FBCT_DESATURATION, FBCT_DESATURATION, 0.00,\n    FBCT_DESATURATION, 1.00, FBCT_DESATURATION, 0.00,\n    FBCT_DESATURATION, FBCT_DESATURATION, 1.00, 0.00,\n    0.0, 0.0, 0.0, FBCT_EXPOSURE\n\n);\n\nvec3 fbct_transform(vec3 color) {\n    vec4 mmr = (vec4(color, 1) * fbct_color_matrix);\n    vec3 cc = mmr.xyz * mmr.w;\n    \n    cc = cc / (cc + 1.0);\n    \n    cc = pow(cc, vec3(1.0 / 2.2));\n\n    return cc;\n}\n\n\n#define flim(x,y) flim_transform(iChannel0,x,y)\n\n/***********************************\n\nflim - Filmic Color Transform\n\nInput Color Space:   Linear BT.709 I-D65\nOutput Color Space:  sRGB 2.2\n\nShadertoy Unit:\n  Common\n\nDescription:\n  Experimental port of flim for GLSL/Shadertoy\n  matching flim v1.1.0.\n  The common unit contains most of the code, and\n  receives gamut extension matrices from a buffer.\n\nAuthor:\n  Bean (beans_please on Shadertoy)\n  Minified by 01000001\n\nOriginal Repo:\n  https://github.com/bean-mhm/flim\n\nOriginal Shader:\n  https://www.shadertoy.com/view/dd2yDz\n\n***********************************/\n\n// Parameters\n\nconst float pe = 4.3; const vec3 fpff = vec3(1); const float fpffs = 0.;\nconst float egr = 1.05; const float egg = 1.12; const float egb = 1.045;\nconst float grr = .5; const float ggr = 2.; const float gbr = .1;\nconst float grm = 1.; const float ggm = 1.; const float gbm = 1.; const float flsi = -10.;\nconst float flsa = 22.; const float fsx = .44; const float fsy = .28;\nconst float fssx = .591; const float fssy = .779; const float fe = 6.;\nconst float fd = 5.; const vec3 pb = vec3(1); const float pfe = 6.;\nconst float pfd = 27.5; const float bp = -1.; const vec3 pff = vec3(1);\nconst float pffs = 0.; const float ms = 1.02;\nfloat wrap(float i, float s, float e){return s + mod(i - s, e - s);}\nfloat lerp(float a, float b, float t){return a + t * (b - a);}\nvec3 lerp(vec3 a, vec3 b, float t){return a + t * (b - a);}\nfloat mrc(float i, float is, float ie, float os, float oe){\n    float t = clamp((i - is) / (ie - is), 0., 1.);\n    float v = os + t * (oe - os);\n    return v; }\nvec3 rth(vec3 rgb){\n    float ca, ci, h, s, v, cd;\n    vec3 c;\n    ca = max(rgb[0], max(rgb[1], rgb[2]));\n    ci = min(rgb[0], min(rgb[1], rgb[2]));\n    cd = ca - ci;\n    v = ca;\n    if (ca != 0.) s = cd / ca;\n    else s = 0.0; h = 0.0;\n    if (s == 0.) h = 0.0; \n    else{\n        c = (vec3(ca) - rgb.xyz) / cd;\n\n        if (rgb.x == ca) h = c[2] - c[1];\n        else if (rgb.y == ca) h = 2.+ c[0] - c[2];\n        else h = 4.+ c[1] - c[0];\n        h /= 6.0;\n        if (h < 0.) h += 1.0; }\n    return vec3(h, s, v); }\nvec3 htr(vec3 hsv){\n    float i, f, p, q, t, h, s, v;\n    vec3 rgb;\n    h = hsv[0];\n    s = hsv[1];\n    v = hsv[2];\n    if (s == 0.) rgb = vec3(v, v, v);\n    else {\n        if (h == 1.) h = 0.0;\n        h *= 6.0;\n        i = floor(h);\n        f = h - i;\n        rgb = vec3(f, f, f);\n        p = v * (1.- s);\n        q = v * (1.- (s * f));\n        t = v * (1.- (s * (1.- f)));\n        if (i == 0.) rgb = vec3(v, t, p);\n        else if (i == 1.) rgb = vec3(q, v, p);\n        else if (i == 2.) rgb = vec3(p, v, t);\n        else if (i == 3.) rgb = vec3(p, q, v);\n        else if (i == 4.) rgb = vec3(t, p, v);\n        else rgb = vec3(v, p, q); }\n    return rgb; }\nvec3 bhs(vec3 col, float hue, float sat, float value){\n    vec3 hsv = rth(col);\n    hsv[0] = fract(hsv[0] + hue + 0.5);\n    hsv[1] = clamp(hsv[1] * sat, 0., 1.);\n    hsv[2] = hsv[2] * value;\n    return htr(hsv); }\nfloat rgb_avg(vec3 i){\n    return (i.x + i.y + i.z) / 3.0; }\nfloat rgb_sum(vec3 i){\n    return i.x + i.y + i.z; }\nfloat rgb_max(vec3 i){\n    return max(max(i.x, i.y), i.z); }\nfloat rgb_min(vec3 i){\n    return min(min(i.x, i.y), i.z); }\nvec3 uo(vec3 i, float bp, float wp){\n    float mono = rgb_avg(i);\n    float mono2 = mrc(mono, bp / 1000., 1.- (wp / 1000.), 0., 1.);\n    return i * (mono2 / mono); }\n// https://www.desmos.com/calculator/khkztixyeu\nfloat ss(float i, float tx, float ty, float sx, float sy){\n    i = clamp(i, 0., 1.);\n    tx = clamp(tx, 0., 1.);\n    ty = clamp(ty, 0., 1.);\n    sx = clamp(sx, 0., 1.);\n    sy = clamp(sy, 0., 1.);\n    float slope = (sy - ty) / (sx - tx);\n    if (i < tx){\n        float toe_pow = slope * tx / ty;\n        return ty * pow(i / tx, toe_pow); }\n    if (i < sx){\n        float intercept = ty - (slope * tx);\n        return slope * i + intercept; }\n    float shoulder_pow = -slope / (((sx - 1.) / pow(1.- sx, 2.)) * (1.- sy));\n    return (1.- pow(1.- (i - sx) / (1.- sx), shoulder_pow)) * (1.- sy) + sy; }\nfloat dmf(float mono, float max_density){\n    float offset = pow(2., flsi);\n    float fac = mrc(log2(mono + offset), flsi, flsa, 0., 1.);\n    fac = ss(fac, fsx, fsy, fssx, fssy);\n    fac *= max_density;\n    fac = pow(2., -fac);\n    return clamp(fac, 0., 1.); }\nvec3 cl(vec3 i, vec3 sensitivity_tone, vec3 dye_tone, float max_density){\n    vec3 sensitivity_tone_norm = sensitivity_tone / rgb_sum(sensitivity_tone);\n    vec3 dye_tone_norm = dye_tone / rgb_max(dye_tone);\n    float mono = dot(i, sensitivity_tone_norm);\n    float mixFac = dmf(mono, max_density);\n    return lerp(dye_tone_norm, vec3(1.), mixFac); }\nvec3 rgbd(vec3 i, float e, float max_density){\n    i *= pow(2., e);\n    vec3 result = cl(i, vec3(0, 0, 1), vec3(1, 1, 0), max_density);\n    result *= cl(i, vec3(0, 1, 0), vec3(1, 0, 1), max_density);\n    result *= cl(i, vec3(1, 0, 0), vec3(0, 1, 1), max_density);\n    return result; }\nvec3 emr(float ph, float s, float r, float m){\n    vec3 result = htr(vec3(wrap(ph + (r / 360.), 0., 1.), 1./ s, 1.));\n    result /= rgb_sum(result);\n    result *= m;\n    return result; }\nmat3 gem(float rs,float gs,float bs,float rr,float gr, float br, float rm, float gm, float bm){\n    mat3 m;\n    m[0] = emr(0., rs, rr, rm);\n    m[1] = emr(1./ 3., gs, gr, gm);\n    m[2] = emr(2./ 3., bs, br, bm);\n    return m; }\nvec3 nap(vec3 i, vec3 bex){\n    i = rgbd(i, fe, fd);\n    i *= bex;\n    i = rgbd(i, pfe, pfd);\n    return i; }\nbool flm(sampler2D mc, out mat3 em, out mat3 emi){\n    const float valid_w = 2.0;\n    vec4 row;\n    row = texelFetch(mc, ivec2(0, 0), 0);\n    if (row.w != valid_w)\n        return false;\n    em[0] = row.xyz;\n\n    row = texelFetch(mc, ivec2(1, 0), 0);\n    if (row.w != valid_w)\n        return false;\n    em[1] = row.xyz;\n\n    row = texelFetch(mc, ivec2(2, 0), 0);\n    if (row.w != valid_w)\n        return false;\n    em[2] = row.xyz;\n    row = texelFetch(mc, ivec2(3, 0), 0);\n    if (row.w != valid_w)\n        return false;\n    emi[0] = row.xyz;\n\n    row = texelFetch(mc, ivec2(4, 0), 0);\n    if (row.w != valid_w)\n        return false;\n    emi[1] = row.xyz;\n\n    row = texelFetch(mc, ivec2(5, 0), 0);\n    if (row.w != valid_w)\n        return false;\n    emi[2] = row.xyz;\n    return true; }\nvec3 flim_transform(sampler2D mc, vec3 i, float e){\n    i = max(i, 0.);\n    i *= pow(2., pe + e);\n    i = min(i, 5000.);\n    mat3 em, emi;\n    if (!flm(mc, em, emi)){ return vec3(1, 0, 1); }\n    vec3 bex = pb * em;\n    const float big = 10000000.0;\n    vec3 white_cap = nap(vec3(big, big, big), bex);\n    i = lerp(i, i * fpff, fpffs);\n    i *= em;\n    i = nap(i, bex);\n    i *= emi;\n    i = max(i, 0.);\n    i /= white_cap;\n    if (bp == -1.){\n        vec3 black_cap = nap(vec3(0.), bex);\n        black_cap /= white_cap;\n        i = uo(i, rgb_avg(black_cap) * 1000., 0.);\n    }else{ i = uo(i, bp, 0.); }\n    i = lerp(i, i * pff, pffs);\n    i = clamp(i, 0., 1.);\n    float mono = rgb_avg(i);\n    float mixFac = (mono < 0.5) ? mrc(mono, 0.05, 0.5, 0., 1.) : mrc(mono, 0.5, 0.95, 1., 0.);\n    i = lerp(i, bhs(i, 0.5, ms, 1.), mixFac);\n    i = clamp(i, 0., 1.);\n    i = pow(i, vec3(1./ 2.2));\n    return i; }\n\n/***********************************\n\nEnd of flim's implementation for Shadertoy Unit: Common\n\n***********************************/\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "// Progressive rendering pipeline\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 ndc = uv * 2.0 - 1.0;\n    ndc.x *= iResolution.x / iResolution.y;\n    \n    Ray cam = camera(ndc);\n    \n        // Concentrate more samples in noisier areas\n    int nSamples = N_SAMPLES;\n    float variance = texture(iChannel1, uv).x; // Variance map (last frame)\n    variance = variance * 2.0 - 1.0;\n    variance *= float(SAMPLE_VAR);\n    nSamples += int(variance);\n    nSamples = max(1, nSamples);\n    \n    vec3 col;\n    for (int i = 0; i < nSamples; ++i) {\n        seed = float(i+nSamples*iFrame);\n        Ray cam_jitter = Ray(cam.origin + 0.005*in_unit_sphere(cam.direction), cam.direction);\n        col += trace(cam_jitter);\n    }\n    col /= float(nSamples);\n\n    // Output to screen\n    fragColor = mix(texture(iChannel0, uv), vec4(col, 1.0), 1.0 / float(iFrame+1));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "/***********************************\n\nflim - Filmic Color Transform\n\nInput Color Space:   Linear BT.709 I-D65\nOutput Color Space:  sRGB 2.2\n\nShadertoy Unit:\n  Buffer X\n\nDescription:\n  Experimental port of flim for GLSL/Shadertoy\n  matching flim v1.1.0.\n  The buffer unit performs a one-time calculation\n  of flim's gamut extension matrices.\n\nAuthor:\n  Bean (beans_please on Shadertoy)\n  Minified by 01000001\n\nOriginal Repo:\n  https://github.com/bean-mhm/flim\n\nOriginal Shader:\n  https://www.shadertoy.com/view/dd2yDz\n\n***********************************/\n\n// NOTE:\n// iChannel0 must be set to this buffer (self-feeding).\n\nvoid mainImage(out vec4 O, in vec2 U){\n    const float w = 2.0;\n    if (ivec2(U).x > 5 || ivec2(U).y > 0)\n        return;\n    vec4 p = texelFetch(iChannel0, ivec2(U), 0);\n    O = p;\n    bool n = (p.w != w) || (iTime == 0.0) || (iFrame < 1);\n    if (!n)\n        return;\n    mat3 e = gem(egr,egg,egb,grr,ggr,gbr,grm,ggm,gbm);\n    mat3 ei = inverse(e);\n    if (ivec2(U) == ivec2(0, 0)) {\n        O = vec4(e[0], w);\n    } if (ivec2(U) == ivec2(1, 0)) {\n        O = vec4(e[1], w);\n    } if (ivec2(U) == ivec2(2, 0)) {\n        O = vec4(e[2], w);\n    }\n    if (ivec2(U) == ivec2(3, 0)) {\n        O = vec4(ei[0], w);\n    } if (ivec2(U) == ivec2(4, 0)) {\n        O = vec4(ei[1], w);\n    } if (ivec2(U) == ivec2(5, 0)) {\n        O = vec4(ei[2], w);\n    }}\n\n/***********************************\n\nEnd of flim's implementation for Shadertoy Unit: Buffer X\n\n***********************************/\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "float variance(vec2 uv, sampler2D tex) {\n    // Number of samples in each dimension\n    const int numSamples = 2;\n\n    // Calculate the mean\n    float mean = 0.0;\n    for (int i = -numSamples; i <= numSamples; ++i) {\n        for (int j = -numSamples; j <= numSamples; ++j) {\n            vec2 offset = vec2(float(i), float(j)) / float(textureSize(tex, 0));\n            mean += greyscale(texture(tex, uv + offset));\n        }\n    }\n    mean /= float((2 * numSamples + 1) * (2 * numSamples + 1));\n\n    // Calculate the variance\n    float variance = 0.0;\n    for (int i = -numSamples; i <= numSamples; ++i) {\n        for (int j = -numSamples; j <= numSamples; ++j) {\n            vec2 offset = vec2(float(i), float(j)) / float(textureSize(tex, 0));\n            float value = greyscale(texture(tex, uv + offset));\n            variance += (value - mean) * (value - mean);\n        }\n    }\n    variance /= float((2 * numSamples + 1) * (2 * numSamples + 1));\n\n    return variance;\n}\n\n\n// Variance map\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = vec4(variance(uv, iChannel0), 0.0,0.0,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}