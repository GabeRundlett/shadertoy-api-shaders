{
    "Shader": {
        "info": {
            "date": "1457713875",
            "description": "Playing around with visualizing harmonics. (inside square shaped bells??) ...needs more cowbell",
            "flags": 40,
            "hasliked": 0,
            "id": "lstXR8",
            "likes": 12,
            "name": "Squary Bells",
            "published": 3,
            "tags": [
                "soundvisualization"
            ],
            "usePreview": 0,
            "username": "eiffie",
            "viewed": 1017
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0,uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//frequency step size\n#define STEP 1.0/3.0\n//#define STEP 1.0/12.0\n\n#define Cos tx_cos\n\nfloat bx_cos(float a){return clamp(abs(mod(a,8.0)-4.0)-2.0,-1.0,1.0);}\nfloat tx_cos(float a){return abs(mod(a,4.0)-2.0)-1.0;}\n\nfloat note(float t){\n\tt=mod(t,8.0);\n\tif(t<0.5)return 0.0;\n\tif(t<1.5)return 4.0;\n\tif(t<2.5)return 6.0;\n\tif(t<3.5)return 8.0;\n\tif(t<4.5)return 7.0;\n\tif(t<5.5)return 5.0;\n\tif(t<6.5)return 3.0;\n\treturn 0.0;\n}\nvec2 mainSound( in int samp,float time){\n\tfloat tim=time*2.0;\n\tfloat t=floor(tim);\n\tfloat n=note(t)+note(t*0.25)+note(t*0.0625);\n\tfloat o=0.0,a=time*400.0,r=0.5,scale=1.0+n*STEP;\n\tfor(int i=0;i<8;i++){\n\t\to+=Cos(a)*r;\n\t\ta*=scale;r/=scale;\n\t\ta+=Cos(time*40.0)*0.01;\n\t}\n\tfloat bt=fract(tim);\n\to*=clamp(bt*100.0,0.0,0.5)*(1.0-bt);\n\to=clamp(o,-1.0,1.0);\n\treturn vec2(o);\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 38
                    }
                ],
                "type": "sound"
            },
            {
                "code": "//to get the sound and pic in sync\n#define SOUND_OFFSET 1.0\n//frequency step size\n#define STEP 1.0/3.0\n//#define STEP 1.0/12.0\n//wave type\n#define CosSin tx_cossin\n\nvec2 tx_cos(vec2 a){return abs(mod(a,4.0)-2.0)-1.0;}\nvec2 tx_cossin(float a){return tx_cos(vec2(a,a-1.0));}\nvec2 bx_cos(vec2 a){return clamp(abs(mod(a,8.0)-4.0)-2.0,-1.0,1.0);}\nvec2 bx_cossin(float a){return bx_cos(vec2(a,a-2.0));}\nvec2 cossin(float a){return cos(vec2(a,a-1.570796));}\n\nfloat note(float t){\n\tt=mod(t,8.0);\n\tif(t<0.5)return 0.0;\n\tif(t<1.5)return 4.0;\n\tif(t<2.5)return 6.0;\n\tif(t<3.5)return 8.0;\n\tif(t<4.5)return 7.0;\n\tif(t<5.5)return 5.0;\n\tif(t<6.5)return 3.0;\n\treturn 0.0;\n}\n\nfloat scale=1.0;\nvec2 F(float a){\n\tfloat r=0.5;\n\tvec2 q=vec2(0.0);\n\tfor(int j=0;j<7;j++){\n\t\tq+=CosSin(a)*r;\n\t\ta*=scale;r/=scale;\n\t}\n\treturn q;\n}\n\nvec2 DF(vec2 p, float t){\n\tvec2 q1=F(t);\n\tfloat d1=length(p-q1);\n    return vec2(d1,d1*0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0,uv);\n    fragColor*=0.8;\n    vec2 p=(uv-0.5)*1.5*iResolution.xy/iResolution.y;\n    float tim=iTime*2.0-SOUND_OFFSET;\n\tfloat t=floor(tim);\n\tfloat n=note(t)+note(t*0.25)+note(t*0.0625);\n    scale=1.0+n*STEP;\n    t=fract(iTime)*500.0;\n    float d=1000.0;\n\tfor(int i=0;i<150;i++){\n\t\tvec2 v=DF(p,t);\n\t\td=min(d,v.x);\n\t\tt+=v.y;\n\t}\n\td=smoothstep(0.0075,0.0,d);\n\tvec4 col=vec4(d*d*d/length(p),d*d,d,1.0);\n\tfragColor+=col*(1.0-fract(tim));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}