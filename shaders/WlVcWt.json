{
    "Shader": {
        "info": {
            "date": "1611979209",
            "description": "2D implicit plotter.",
            "flags": 0,
            "hasliked": 0,
            "id": "WlVcWt",
            "likes": 9,
            "name": "2D Implicit Function Plotter",
            "published": 3,
            "tags": [
                "2d",
                "math",
                "graph",
                "function",
                "plot",
                "implicit"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 287
        },
        "renderpass": [
            {
                "code": "#define CONTOUR_SPACING 1.0\n#define CONTOUR_THICKNESS 2.0\n#define DELTA 0.001\n\n// Hardware derivatives don't seem to produce good contours on my computer\n//#define USE_HARDWARE_DERIVATIVES\n\n// Hue to RGB function from Fabrice's shadertoyunofficial blog:\n#define hue2rgb(hue) 0.6 + 0.6 * cos(6.3 * hue + vec3(0.0, 23.0, 21.0))\n\nfloat f(in vec2 p) {\n    p *= 3.0;\n    vec3 p3 = vec3(p, iTime);\n    return dot(sin(p3), cos(p3.zxy));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * 4.0;\n    float unit = CONTOUR_THICKNESS / iResolution.y * 4.0;\n\n    float hSpacing = 0.5 * CONTOUR_SPACING;\n    float fRes = f(uv);\n\n    #ifdef USE_HARDWARE_DERIVATIVES\n    float grad = length(fwidth(fRes)) * iResolution.y / 5.0;\n\n    #else\n    float grad = length(vec2(f(uv + vec2(DELTA, 0.0)) - f(uv - vec2(DELTA, 0.0)),\n                             f(uv + vec2(0.0, DELTA)) - f(uv - vec2(0.0, DELTA)))) / (2.0 * DELTA);\n    #endif\n\n    float contour = abs(mod(fRes + hSpacing, CONTOUR_SPACING) - hSpacing) / grad;\n\n    fragColor = vec4(hue2rgb(fRes * 0.5) - smoothstep(unit, 0.0, contour), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}