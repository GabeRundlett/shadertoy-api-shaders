{
    "Shader": {
        "info": {
            "date": "1605193786",
            "description": "Playing with sdf morphing",
            "flags": 0,
            "hasliked": 0,
            "id": "3s3BW7",
            "likes": 3,
            "name": "Playing with 2d sdfs.",
            "published": 3,
            "tags": [
                "sdf"
            ],
            "usePreview": 0,
            "username": "henrmota",
            "viewed": 387
        },
        "renderpass": [
            {
                "code": "float circle(vec2 p, float radius) {\n    return length(p) - radius;\n}\n\nfloat sdBox(vec2 p, vec2 b)\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat shade(float d) {\n\treturn clamp(-d * 500., 0., 1.);    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5 * iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.);\n\tfloat id = fract(sin(dot(floor(uv * 3.), vec2(145., 123.))) * 12345.) * 5. + 1.;\n    uv = fract(uv * 3.);\n    uv -= 0.5;\n    float dCircle = circle(uv, 0.5);\n    float dSquare = sdBox(uv, vec2(0.3));\n    \n    float t = sin(iTime * id) * 0.5 + 0.5;\n    \n    float ds = mix(dCircle, dSquare, t);\n  \n    \n    col += shade(ds);\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}