{
    "Shader": {
        "info": {
            "date": "1543417052",
            "description": "Progress from bot to top",
            "flags": 0,
            "hasliked": 0,
            "id": "MdtBDn",
            "likes": 2,
            "name": "Progress from bot to top",
            "published": 3,
            "tags": [
                "progress"
            ],
            "usePreview": 0,
            "username": "vitsky",
            "viewed": 443
        },
        "renderpass": [
            {
                "code": "#define HALF_PI 1.57079632679\n#define PI      3.14159265359\n\nfloat hash(float x)\n{\n    return fract(sin(x) * 43758.5453) * 2.0 - 1.0;\n}\n\nfloat sineInOut(float t)\n{\n  return -0.5 * (cos(PI * t) - 1.0);\n}\n\nconst float speed = 1.00;\nconst float duration = 2.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2  uv = 2.0 * vec2(fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;   \n    \n    float sequence = floor(iTime / duration);\n    float current_time = mod(iTime, duration);\n    float start = -1.0;\n    float end   = 1.0;\n    float pos = 0.0;      \n    float dist = speed * current_time;\n    float goal = abs(end - start);\n    \n    if (dist <= goal) \n    {\n        pos = mix(start, end, sineInOut(dist / goal));\n    } \n    else \n    {\n        pos = end;\n    }\n    \n    float f = step(uv.y, pos);\n        \n    fragColor = vec4(f);\n}\n\n\n    \n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}