{
    "Shader": {
        "info": {
            "date": "1592507883",
            "description": "Two kinds of triangle waves that grow the further you go from the origin. for the top the wavelength increases linearly, the bottom increases exponentially.",
            "flags": 0,
            "hasliked": 0,
            "id": "3llyR2",
            "likes": 3,
            "name": "growing triangle wave",
            "published": 3,
            "tags": [
                "wave"
            ],
            "usePreview": 0,
            "username": "blackle",
            "viewed": 300
        },
        "renderpass": [
            {
                "code": "float curve(float x) {\n    float id = pow(floor(sqrt(abs(x))),2.);\n    float sgn = mod(id,2.)*2.-1.;\n    return sgn*(x-sign(x)*(id+sqrt(id)));\n}\n\n//thanks to @jay@cybre.space !\n//https://cybre.space/@jay/104367634214778284\nfloat curve_fractal(float x) {\n    float id = floor(log2(abs(x)));\n    float sgn = sign(mod(id,2.)-.5);\n    return (4./3.*pow(2.,id)-abs(x))*sgn;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*vec2(iResolution.x,0))/iResolution.y;\n    bool top = uv.y<.5;\n    uv.y = mod(uv.y,.5)-.25;\n    uv *= 90.;\n\n    float scale = mix(1.,10.,sin(iTime)*.5+.5);\n    float y = top ? curve_fractal(uv.x*scale) : curve(uv.x*scale);\n    float col = smoothstep(.2,.3,abs(y-uv.y*scale)/scale);\n    col -= smoothstep(.3,.1,abs(uv.y))*.5;\n\n    // Output to screen\n    fragColor = vec4(col);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}