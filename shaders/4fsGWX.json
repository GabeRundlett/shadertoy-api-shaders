{
    "Shader": {
        "info": {
            "date": "1703861886",
            "description": "Hope everyone has a fun and Happy New Year \n\nあけましておめでとう | Feliz año nuevo | 새해 복 많이 받으세요 | Bonne année | שנה טובה |  Frohes Neues Jahr | नए साल की शुभकामनाएँ",
            "flags": 0,
            "hasliked": 0,
            "id": "4fsGWX",
            "likes": 18,
            "name": "Happy New Year | 3D Marquee",
            "published": 3,
            "tags": [
                "raymarching",
                "text",
                "letters",
                "happynewyear"
            ],
            "usePreview": 0,
            "username": "byt3_m3chanic",
            "viewed": 259
        },
        "renderpass": [
            {
                "code": "/** \n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n\n    12/29/23 @byt3_m3chanic \n    Happy New Year eveyrone!\n*/\n\n\n#define R iResolution\n#define M iMouse\n#define T iTime\n\n#define PI  3.14159265359\n#define PI2 6.28318530718\n\n#define MIN_DIST 1e-4\n#define MAX_DIST 35.\n\nconst float sz = .435;\nconst float dz = sz*2.75;\nconst float df = dz/2.;\nconst float hf = sz/2.;\n\nvec3 hit,hp;\nvec2 fd,sd;\n\nfloat hash21( vec2 p ) { return fract(sin(dot(p,vec2(23.43,84.21))) *4832.3234); }\n\n//@iq sdf extrude \nfloat opx( in vec3 p, float d, in float h ) {\n    vec2 w = vec2( d, abs(p.z) - h );\n    return min(max(w.x,w.y),0.0) + length(max(w,0.0));\n}\n\nvec2 map(vec3 p) {\n    vec2 res = vec2(1e5,0);\n    p.y -= 2.;\n    vec3 q = p;\n    q*=.25;\n    \n    float amt = 15.;\n    float xd = floor((q.z+df)/dz);\n    float mx = floor(mod(xd,amt));\n    \n    float id = floor((q.x+hf)/sz)+xd;\n    float md = floor(mod(id,amt));\n          sd = vec2(id,xd);\n          \n    float hs = hash21(sd);\n    q.xz= mod(q.xz+vec2(hf,df),vec2(sz,dz))-vec2(hf,df);\n\n    float ff = .6+.3*sin((xd*2.)+id*.475+T);\n    float tk = .14+.125*cos(id+md*.25+T*1.15);\n    \n    q.y -= ff;\n\n    if(hs>.489) q.zy*=rot(ff*PI2);\n    \n    float d= getdp(q.xy);\n    \n\n    if(md==0.) d= getH(q.xy);\n    if(md==1.) d= getA(q.xy);\n    if(md==2.) d= getP(q.xy);\n    if(md==3.) d= getP(q.xy);\n    if(md==4.) d= getY(q.xy);\n    \n    if(md==6.) d= getN(q.xy);\n    if(md==7.) d= getE(q.xy);\n    if(md==8.) d= getW(q.xy);\n\n    if(md==10.) d= getY(q.xy);\n    if(md==11.) d= getE(q.xy);\n    if(md==12.) d= getA(q.xy);\n    if(md==13.) d= getR(q.xy);\n\n    d=opx(q,d,tk);\n    \n    if(d<res.x) {\n        res=vec2(d/.75,1);\n        hit=p;\n    }\n    \n    float mf = .6+.3*sin((p.x*.7)+p.z*.475+T);\n    float f = p.y+2.+mf;\n    if(f<res.x) {\n        res=vec2(f,2);\n        hit=p;\n    }\n    return res;\n}\n\nvec3 normal(vec3 p, float t)\n{\n    float e = MIN_DIST*t;\n    vec2 h =vec2(1,-1)*.5773;\n    vec3 n = h.xyy * map(p+h.xyy*e).x+\n             h.yyx * map(p+h.yyx*e).x+\n             h.yxy * map(p+h.yxy*e).x+\n             h.xxx * map(p+h.xxx*e).x;\n    return normalize(n);\n}\n\nvec4 FC = vec4(.06,.27,.44,0);\n\nvec3 hue(float t){ \n    return vec3(.35) + vec3(.25)*cos( PI*(vec3(.95,.92,.88)*t+vec3(.93,.36,.07))); \n}\n\nvec4 render(inout vec3 ro, inout vec3 rd, inout vec3 ref, bool last, inout float d) {\n\n    vec3 C = vec3(0);\n    float m = 0.;\n    vec3 p = ro;\n    \n    for(int i=0;i<132;i++) {\n        p = ro + rd * d;\n        vec2 ray = map(p);\n        if(ray.x<MIN_DIST*d||d>MAX_DIST)break;\n        d += i<32? ray.x*.75: ray.x;\n        m  = ray.y;\n    } \n    hp = hit;\n    fd = sd;\n\n    if(d<MAX_DIST)\n    {\n        vec3 n = normal(p,d);\n        vec3 lpos =  vec3(22,60,25);\n        vec3 l = normalize(lpos);\n\n        float diff = clamp(dot(n,l),0.,1.);\n     \n        float shdw = 1.;\n        for(float t=.01; t < 9.; ) {\n            float h = map(p + l*t).x;\n            if( h<MIN_DIST ) { shdw = 0.; break; }\n            shdw = min(shdw, 64.*h/t);\n            t += h;\n            if( shdw<MIN_DIST || t>9. ) break;\n        }\n        diff = mix(diff,diff*shdw,.5);\n\n        vec3 h = vec3(0);\n\n        if(m==1.) {\n            h=hue(3.+(fd.x*.1)+fd.y*.2);\n            ref=h*.5;\n        }\n        if(m==2.) {\n            h = hue((hp.x*.07)+hp.z*.025);\n            ref = vec3(.05);\n            vec2 f = fract(hp.xz*.3)-.5;\n            if(f.x*f.y>0.) { \n                h = vec3(.55);\n                ref=h;\n            }\n        }\n\n        C = h*diff;\n\n        ro = p+n*MIN_DIST;\n        rd = reflect(rd,n);\n    }\n    return vec4(C,1);\n}\n\nvoid mainImage( out vec4 O, in vec2 F )\n{\n    \n    vec2 uv = (2.*F.xy-R.xy)/max(R.x,R.y);\n\n    const float zoom = 12.;\n\n    vec3 ro = vec3(uv*zoom,-(zoom+8.));\n    vec3 rd = vec3(0,0,1.);\n   \n    mat2 rx = rot(-.78), ry = rot(.48);\n    ro.yz *= rx,ro.xz *= ry;\n    rd.yz *= rx,rd.xz *= ry;\n\n    ro.xz+=T*.4;\n    vec3 C = vec3(0), ref=vec3(0), fil=vec3(1);\n    \n    float d = 0., a = 0.;\n    float numBounces = 2.;\n    \n    for(float i=0.; i<numBounces; i++) {\n        d =0.;\n        vec4 pass = render(ro, rd, ref, i==numBounces-1., d);\n        C += pass.rgb*fil;\n        fil*=ref;\n        if(i==0.) a = d;\n    }\n\n    float tg = hash21(uv);\n    if(tg>.5) C = mix(C,C+.07,tg);\n\n    C = mix(FC.rgb,C,exp(-.0001*a*a*a));\n    O = vec4(pow(C, vec3(.4545)),1);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "/** \n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n\n    12/29/23 @byt3_m3chanic \n*/\n\nmat2 rot(float a) { return mat2(cos(a),sin(a),-sin(a),cos(a)); }\n\nfloat box( in vec2 p, in vec2 b ){\n    vec2 d = abs(p)-b;\n    return length(max(d,0.))+min(max(d.x,d.y),0.);\n}\n\nfloat rbox( in vec2 p, in vec2 b, in vec4 r ) {\n    r.xy = (p.x>0.)?r.xy : r.zw;\n    r.x  = (p.y>0.)?r.x  : r.y;\n    vec2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.)+length(max(q,0.))-r.x;\n}\n// special\nfloat getdp(vec2 p) {\n    float bt = length(p)-.075;\n    return bt;\n}\nconst vec4 bz = vec4(.075,.055,.035,.0);\nconst vec4 bo = vec4(.175,.15,.075,.025);\nconst vec2 oa = vec2(.15,.1);\n\n//letters\nfloat getA(vec2 p) {\n    vec2 of = vec2(0,.075);\n    float bt = max(\n    rbox(p,vec2(.15,.175),bz.xwxw),\n    -rbox(p+vec2(.0,.05),vec2(.1,.175),bz.zwzw)\n    );\n    float bb = box(p,vec2(.15,.025));\n    return min(bt,bb);\n}\n\nfloat getE(vec2 p) {\n    vec2 of = vec2(0,.075);\n    float bt = max(\n        rbox(p-of,oa,bz.wwxx),\n        -rbox(p-of-vec2(.05,0),vec2(.15,.05),bz.wwzz)\n    );\n    float bb = max(\n        rbox(p+of,oa,bz.wwxx),\n        -rbox(p+of-vec2(.05,0),vec2(.15,.05),bz.wwzz)\n    );\n    return min(bt,bb);\n}\n\nfloat getH(vec2 p) {\n    float bt = min(\n        box(vec2(abs(p.x)-.125,p.y),vec2(.025,.175)),\n        box(p,vec2(.15,.025))\n    );\n    return bt;\n}\nfloat getI(vec2 p) {\n    float bt = min(\n        box(p,vec2(.025,.175)),\n        box(vec2(p.x,abs(p.y)-.15),vec2(.15,.025))\n    );\n    return bt;\n}\nfloat getN(vec2 p) {\n    float bt = max(\n        rbox(p,vec2(.15,.175),bz.xwxw),\n        -rbox(p+vec2(.0,.045),vec2(.1,.175),bz.zwzw)\n    );\n    return bt;\n}\nfloat getP(vec2 p) {\n    float bt = max(\n        rbox(p-vec2(.0,.075),oa,bz.xxww),\n        -rbox(p-vec2(.0,.075),vec2(.1,.05),bz.zzww)\n    );\n    float bb = box(p+vec2(.125,0),vec2(.025,.175));\n    return min(bt,bb);\n}\nfloat getR(vec2 p) {\n    float bt = max(\n        rbox(p-vec2(.0,.075),oa,bz.xxww),\n        -rbox(p-vec2(.0,.075),vec2(.1,.05),bz.zzww)\n    );\n    float bb = max(\n        rbox(p+vec2(.0,.075),oa,bz.xwww),\n        -rbox(p+vec2(.0,.12),vec2(.1,.095),bz.zwww)\n    );\n    return min(bt,bb);\n}\nfloat getW(vec2 p) {\n    vec2 of = vec2(.065,0);\n    float bt = max(\n        rbox(p+of,vec2(.085,.175),bz.wxwx),\n        -rbox(p+of-vec2(.0,.05),vec2(.0375,.175),bz.wzwz)\n    );\n    float bb = max(\n    rbox(p-of,vec2(.085,.175),vec4(0,.075,0,.075)),\n    -rbox(p-of-vec2(.0,.05),vec2(.0375,.175),bz.wzwz)\n    );\n    return min(bt,bb);\n}\n\nfloat getY(vec2 p) {\n    vec2 of = vec2(0,.075);\n    float bt = max(\n        rbox(p-of,oa,bz.wxwx),\n        -rbox(p-of-vec2(0,.05),vec2(.1),bz.wzwz)\n    );\n    return min(bt,box(p+of,vec2(.025,.1)));\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}