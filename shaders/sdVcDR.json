{
    "Shader": {
        "info": {
            "date": "1654727488",
            "description": "A simple 2D water reflection shader. Mouse X Axis = Field of View, Mouse Y = Water Line Offset",
            "flags": 0,
            "hasliked": 0,
            "id": "sdVcDR",
            "likes": 4,
            "name": "2D Water Reflection",
            "published": 3,
            "tags": [
                "reflection",
                "water"
            ],
            "usePreview": 0,
            "username": "Xorberax",
            "viewed": 541
        },
        "renderpass": [
            {
                "code": "const vec4 waterTint = vec4(0.5, 0.5, 0.5, 1.0);\nconst float waterRippleStrength = 10.25;\nconst float waterRippleSpeed = 0.015;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    float waterLineOffset = iMouse.y / iResolution.y;\n\n    if (uv.y >= waterLineOffset)\n    {\n        fragColor = texture(iChannel0, uv);\n    }\n    else\n    {\n        float fieldOfViewScalar = (iMouse.x / iResolution.x) * 10.0;\n        vec2 vanishingPoint = vec2(0.5, waterLineOffset + fieldOfViewScalar);\n        float distanceToVanishingPoint = length(uv - vanishingPoint);\n        float distanceToWaterLine = waterLineOffset - uv.y + 0.2;\n        float fadedWaterRippleStrength = waterRippleStrength * distanceToWaterLine;\n        vec4 noiseColor = texture(\n            iChannel1,\n            vec2(\n                uv.x + iTime * waterRippleSpeed, \n                uv.y - iTime * waterRippleSpeed\n            ) * distanceToVanishingPoint\n        );\n        noiseColor *= texture(\n            iChannel2,\n            vec2(\n                uv.x - iTime * waterRippleSpeed,\n                uv.y + iTime * waterRippleSpeed\n            ) * distanceToVanishingPoint\n        );\n        noiseColor *= fadedWaterRippleStrength * distanceToWaterLine;\n        fragColor = texture(\n            iChannel0, \n            vec2(\n                uv.x,\n                -uv.y + waterLineOffset\n            ) + \n            vec2(\n                0.0,\n                waterLineOffset\n            ) +\n            vec2(\n                noiseColor.g * noiseColor.b * noiseColor.r,\n                noiseColor.r * noiseColor.g * noiseColor.b\n            )\n        ) * waterTint;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 45,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}