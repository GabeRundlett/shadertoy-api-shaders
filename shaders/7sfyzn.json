{
    "Shader": {
        "info": {
            "date": "1641597556",
            "description": "My first shader, strongly inspired from @iq https://www.shadertoy.com/view/XsXSz4 and https://iquilezles.org/articles/distfunctions2d/distfunctions2d.htm\n\nImprovement & advice are welcome :)",
            "flags": 8,
            "hasliked": 0,
            "id": "7sfyzn",
            "likes": 3,
            "name": "Spiral Heart Beat",
            "published": 3,
            "tags": [
                "spiral",
                "heart"
            ],
            "usePreview": 0,
            "username": "ppsdf",
            "viewed": 289
        },
        "renderpass": [
            {
                "code": "float sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nfloat sdSpiral( vec2 p, float r )\n{\n    p.x *= (0.8+0.4*p.y*p.y);\n    //p.x = sign(p.x)*pow(abs(p.x),0.7);\n    return length(p)/(atan(abs(p.x),p.y)) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    vec2 p = (2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n    vec2 m = (2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n\tp *= 1.5;\n    m *= 1.5;\n\n    // distance\n    float ampl = amplitude(iTime);\n    //ampl = 0.;\n    float r = 0.65*(1.+0.1*ampl);\n    \n\t//float d = sdCircle(p,r);\n    vec2 offset = vec2(0.,-0.9);\n    p += offset;\n    float d = sdSpiral(p,r);\n    \n    // color\n#if 0\n    vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\n\tcol *= 1.0 - exp(-2.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(120.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.02,abs(d)) );\n#else\n    vec3 col = (d>=0.0) ? vec3(0.2,0.8,0.8) : vec3(0.8,0.2,0.8);\n\tcol *= exp2(-2.0*abs(d));\n    col = mix(col,vec3(1.20),exp2(-22.0*abs(d)));\n\tcol = mix( col, vec3(0.0), 1.0-smoothstep(0.01,0.02,abs(d)) );\n    col *= 1.0 + 0.5*smoothstep(-0.4,0.4,cos(100.0*d)); // comment to get uniform color\n#endif\n\n    // interactivity\n    if( iMouse.z>0.001 )\n    {\n    //d = sdCircle(m-p,r);\n    m += offset;\n    d = sdSpiral(m,r);\n    col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.005, abs(length(p-m)-abs(d))-0.0025));\n    col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.005, length(p-m)-0.015));\n    }\n    \n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 mainSound( int samp, float time )\n{\n    float t = mod(time,T);\n    float c = cubicPulse(0.5,0.5,t/T);\n    //c=1.;\n    float a = amplitude(t)*pow(c,0.1);\n    a = 2.*a*exp(0.7*a);\n    //a = 1.0;\n    float y = sin(twopi*60.0*t)*a;\n    return vec2( y );\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            },
            {
                "code": "float pcurve( float x, float a, float b )\n{\n    float k = pow(a+b,a+b)/(pow(a,a)*pow(b,b));\n    return k*pow(x,a)*pow(1.0-x,b);\n}\n\nfloat cubicPulse( float c, float w, float x )\n{\n    x = abs(x - c);\n    if( x>w ) return 0.0;\n    x /= w;\n    return 1.0 - x*x*(3.0-2.0*x);\n}\n\nconst float T = 1.00; // pulse periode\nconst float pi = 3.141592653589793;\nconst float twopi = 6.283185307179586;\n\n\nfloat amplitude(float time)\n{\n    float T = 1.;\n    float t = mod(time,T);\n    float ampl = pcurve(t/T, 0.1,4.);\n    float ampl2 = pcurve(mod(t/T-0.15,1.), 0.1,4.);\n    return max(ampl,ampl2);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}