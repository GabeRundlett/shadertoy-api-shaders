{
    "Shader": {
        "info": {
            "date": "1598012647",
            "description": "I love space :)",
            "flags": 0,
            "hasliked": 0,
            "id": "3tfBWs",
            "likes": 9,
            "name": "2D Ring planet",
            "published": 3,
            "tags": [
                "2d",
                "planet",
                "scifi"
            ],
            "usePreview": 0,
            "username": "z0rg",
            "viewed": 370
        },
        "renderpass": [
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\nmat2 r2d(float a){float cosa = cos(a);float sina = sin(a);return mat2(cosa,sina,-sina,cosa);}\n\nfloat sat(float a)\n{\n  return clamp(a,0.,1.);\n}\n\nfloat cir(vec2 p,float r)\n{\n  return length(p)-r;\n}\n\nfloat sub(float a, float b)\n{\n  return max(a,-b);\n}\n\nvec3 rdr(vec2 uv)\n{\n  uv*= r2d(1.);\n  vec3 col;\n\n  float stars= texture(iChannel0,uv*2.).x;\n  col = vec3(stars)*float(stars>.97);\n  vec2 ruv = uv*vec2(.8,3.7);\n  vec2 rp = ruv-vec2(0.,.08);\n  float ring = sub(cir(ruv, .6),cir(rp,.35));\n\n\n  float ringOp = mix(.2,1.,sat(abs(uv.x*(sat(uv.y*10.)+.3))-.3));\n  float back = sub(ring, uv.y);\n  float front = sub(ring,-uv.y);\n  float ringPatt = sat(.5*sin(2.+200.*length(rp))+sin(1.+300.*length(rp)));\n  col = mix(col,vec3(ringOp),(1.-sat(back*200.))*ringPatt);\n  float planet = cir(uv,.3);\n  col = mix(col,vec3(.45,.34,.56)*(.3+1.-sat(length(2.*uv-vec2(-.1,.1)*5.))),1.-sat(planet*200.));\n  col = mix(col,vec3(ringOp),(1.-sat(front*200.))*ringPatt);\n  return col;\n}\nvec3 grid(vec2 uv)\n{\n  vec2 r = clamp(mod(uv,vec2(.25))-vec2(.001),vec2(0.),vec2(1.));\n  return vec3(.5)*(1.-sat(200.*(min(r.x,r.y))))*(.5+.5*sin(uv.y*500.))\n  *(.5+.5*sin(uv.x*500.))*(sat(length(uv)-.4));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = (fragCoord.xy-.5*iResolution.xy) / iResolution.xx;\n\n  uv *=vec2(-1.,1.)*2.3;\n  uv -= vec2(.15, -0.07);\n  vec3 col = rdr(uv);\n  float sz = 0.1;\n\n  vec3 col2 = rdr(vec2(float(int(uv.x/sz)),float(int(uv.y/sz)))*sz);\n\n col= mix(col,col2, sat(length(uv)*float(length(uv) < 1.)));\n  col+= 1.2*vec3(.34,.56,.87)*sat(1.-length(1.*uv-vec2(-.1,.1)*2.));\ncol+= .5*vec3(.34,.56,.87).zyx*sat(1.-length(3.*uv-vec2(-.1,.1)*2.));\n\ncol += texture(iChannel0,uv+iTime*50.).xxx*.1;\ncol += grid(uv);\n  fragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}