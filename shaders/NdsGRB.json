{
    "Shader": {
        "info": {
            "date": "1616170478",
            "description": "A spider on mouse and follow the targets on the scene! ",
            "flags": 0,
            "hasliked": 0,
            "id": "NdsGRB",
            "likes": 32,
            "name": "Spider on mouse",
            "published": 3,
            "tags": [
                "2d",
                "ik",
                "inversekinematics"
            ],
            "usePreview": 0,
            "username": "dopa",
            "viewed": 432
        },
        "renderpass": [
            {
                "code": "float segment(vec2 P, vec2 A, vec2 B, float r) \n\n{\n\n    vec2 g = B - A;\n\n    vec2 h = P - A;\n\n    float d = length(h - g * clamp(dot(g, h) / dot(g,g), 0.0, 1.0));\n\n\treturn smoothstep(r,0.9*r, d);\n\n}\n\nconst vec3 backColor  = vec3(0.3);\n\nconst vec3 pointColor = vec3(0.15,0.1,0.1);\n\nconst vec3 targetsColor = vec3(0.9,0.9,1);\n\nconst vec3 lineColor = vec3(0,0,0);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n\n\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\n     \n    vec2 mouse = (iMouse.xy * 2.0 - iResolution.xy) / iResolution.y;\n    if(mouse== - iResolution.xy / iResolution.y)\n        mouse=vec2(0,0);\n        \n    vec3 color = backColor;\n    \n    vec2 targets[]=vec2[] (\n                            vec2(.3,0),vec2(.4,.2),vec2(.7,.1),vec2(.2,-.6),vec2(-.8,.1),vec2(-.8,-.6),\n                            vec2(.5,.2),vec2(.1,.7),vec2(.7,.6),vec2(.3,-.2),vec2(.4,.1),vec2(-.6,.5),\n                            vec2(.4,0),vec2(.2,.4),vec2(-.7,-.3),vec2(.2,-.6),vec2(-.8,.1),vec2(-.7,.3),\n                            vec2(-.6,.2),vec2(-.4,.7),vec2(-.6,-.7),vec2(-.4,-.2),vec2(-.2,.1),vec2(-.1,.4)\n                          \n                          );\n    /*                      \n    for (int i = targets.length() - 1; i >= 0; --i) {\n      float f=0.0;\n      //f = (float(i)/float(targets.length() - 1) + 5.0) / 5.0;\n      //f=fract(sin(dot(targets[i].xy,vec2(12.9898,78.233)))*43758.5453123);\n      f=float(i%10+1)/10.0;\n      targets[i] += vec2(cos(iTime * f), sin(iTime * f)) * 0.05;\n    }                      \n    */\n    \n    mouse += vec2(cos(iTime)*2.0, sin(iTime)) * 0.05;\n    \n    float radius=.08;\n    \n    int legsNum = 8;//\n    \n    float dalte=3.1415926*2.0/float(legsNum);\n    for (float k=0.0;k<3.1415926*2.0;k+=dalte){\n        float angle = k;\n        vec2 pos;\n        pos.x =cos(angle)*radius;\n        pos.y = sin(angle)*radius;\n        \n        int iterations=5;//\n\n        vec2 startPoint=mouse+pos;\n        \n        float reach=4.5;\n        \n        float closestLength=10.0;\n        vec2 closestPoint;\n        for (int i=targets.length()-1;i>=0;i--)\n        {\n            if(closestLength>length(targets[i]-(mouse+pos*reach)))\n            {\n                closestLength=length(targets[i]-(mouse+pos*reach));\n                closestPoint=targets[i];\n            }\n        }\n        \n        \n        vec2 endPoint=closestPoint;\n        \n        int piece=3;\n\n        vec2[] points=vec2[] (vec2(1,1),vec2(2,2),vec2(3,3),vec2(4,4));\n\n        float[] lenghts=float[](0.3,0.25,0.1);\n\n\n        for (int j=0;j<=iterations;j++){\n            vec2 target=endPoint;\n            for (int i=piece;i>0;i--){\n                points[i]=target;\n\n                vec2 dir;\n                dir=(target-points[i-1])/ length(target-points[i-1]);\n                points[i-1] = target-(dir*lenghts[i-1]);\n\n\n                target=points[i-1];\n            }\n\n            target=startPoint;\n            for (int i=0;i<piece;i++){\n                points[i]=target;\n\n                vec2 dir;\n                dir=(target-points[i+1])/ length(target-points[i+1]);\n                points[i+1] = target-(dir*lenghts[i]);\n\n\n                target=points[i+1];\n            }\n        }\n\n        \n        float intensity;\n        \n        for (int i=piece;i>=0;i--){\n            intensity = segment(uv, points[i],points[i], 0.03);\n            color = mix(color, pointColor, intensity);\n        }\n        \n        \n        for (int i=piece;i>=1;i--){\n            intensity = segment(uv, points[i],points[i-1], 0.01);\n            color = mix(color, lineColor, intensity);\n        }\n       \n         for (int i=targets.length()-1;i>=0;i--){\n            intensity = segment(uv, targets[i],targets[i], 0.02);\n            color = mix(color, targetsColor, intensity);\n        }\n        intensity = segment(uv, mouse,mouse, radius+0.03);\n        color = mix(color, pointColor, intensity);\n        \n    }\n    fragColor = vec4(color, 1.0);\n}\n\n    ",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}