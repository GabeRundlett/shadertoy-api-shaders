{
    "Shader": {
        "info": {
            "date": "1725080874",
            "description": "x",
            "flags": 0,
            "hasliked": 0,
            "id": "lcSBRy",
            "likes": 0,
            "name": "aug302024",
            "published": 3,
            "tags": [
                "popart"
            ],
            "usePreview": 0,
            "username": "brendanluu",
            "viewed": 45
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 col = vec3(0);\n    \n    // Apply rotation\n    float rotationSpeed = .5; // Adjust this value to control rotation speed\n    float rotation = iTime * rotationSpeed;\n    mat2 rotationMatrix = mat2(cos(rotation), -sin(rotation),\n                               sin(rotation), cos(rotation));\n    uv = rotationMatrix * uv;\n    \nvec2 gv = fract(uv * (sin(iTime) * 1.5 - 3.)) - 1.5;\n\n    float m = 0.0;\n    float t = iTime * 50.2;\n    float dist = length(uv) * 1111199000.0;\n    \n    for (float y = -1.0; y <= 1.0; y++) {\n        for (float x = -1.0; x <= 1.0; x++) {\n            vec2 offs = vec2(x, y);\n            \n            float d = length(gv + offs);\n            \n            float r = mix(0.1, 0.5, sin(t + dist) * 0.5 + 0.5);\n            m += smoothstep(r, r * 0.99, d);\n        }\n    }\n    \n    col = vec3(0.600,10000.000,0.000);\n    col += m;\n    \n    // Calculate vignette\n    vec2 vignetteUV = fragCoord / iResolution.xy;\n    vignetteUV = (vignetteUV - 0.5) * 2.0;\n    vignetteUV.x *= iResolution.x / iResolution.y;\n    float uVignetteSize = 0.5; // Vignette size control\n    float vignette = length(vignetteUV) / uVignetteSize;\n    vignette = smoothstep(0.8, 1.5, vignette);\n    \n    // Apply vignette (black on the outside)\n    col = mix(col, vec3(0.0), vignette);\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}