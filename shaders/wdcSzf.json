{
    "Shader": {
        "info": {
            "date": "1572579823",
            "description": "That looks delicious",
            "flags": 0,
            "hasliked": 0,
            "id": "wdcSzf",
            "likes": 2,
            "name": "Shadertober 31 - Ripe",
            "published": 3,
            "tags": [
                "inktober",
                "shadertober",
                "backwardscaptain",
                "ripe"
            ],
            "usePreview": 0,
            "username": "BackwardsCap",
            "viewed": 314
        },
        "renderpass": [
            {
                "code": "float leaf(vec3 p, float s)\n{\n    vec3 o = vec3(.3,0,0);\n    float c1 = cyl(p+o,s,.01);\n    float c2 = cyl(p-o,s,.01);\n    return max(c1,c2);\n}\n\nfloat bite(vec3 p)\n{\n    vec3 sp = p+vec3(.55,0,0);\n    sp.z/=1.3;\n    sp.x/=.4;\n    \n    sp.xz*=rot(p.y*10.);\n    float ss = length(sp)-.25+smoothstep(0.,1.,cos(p.y*70.)/10.);\n    ss*=.5;\n    return ss;\n}\n\nvec2 apple(vec3 p)\n{\n    float r,m;\n    vec2 ap = vec2(atan(p.z,p.x),length(p.xz));\n    vec3 pp = p;\n    float t = torus(p/vec3(1,1.4+cos(ap.x*5.*floor(p.y))/50.,1),vec2(.2,.4));\n    float t2=t;\n    t=abs(t)-.01;\n    float st = cyl(p-vec3(0,.5,-.01+cos((p.y*p.y))/40.),.01,.2);\n    vec3 lp = p-vec3(0,.59,0.12);\n    lp.y+=lp.z*lp.z*1.;\n    lp.yz*=rot(PI/6.);\n    float l = leaf(lp/vec3(1,.5,.6),.4);\n    l*=.5;\n\n    float ss = 100000.;\n    float bn = floor(cos01(iTime/2.-3.)*12.);\n    float bnm = 8.;\n    for(float i=0.;i<bn;i++)\n    {\n        p.xz*=rot(PI/bnm*1.5);\n        p.yz*=rot(cos(i*4.)/5.);\n        ss=min(ss,bite(p));\n    }\n    t=max(t,-ss);\n    t2=max(t2,-ss);\n\n    float a = min(min(t,st),l);\n    float c = length(p)-.5;\n    r=min(a,t2);\n    \n    if(r==st)m=1.;\n    else if(r==l)m=2.;\n\telse if(r==t2)m=3.;\n    return vec2(r,m);\n}\n\nvec2 map(vec3 p)\n{\n\tvec2 r;\n    r=apple(p);\n    float table = cyl(p+vec3(0,1.6,0),2.-abs(p.y)/4.,1.);\n    r.x=min(r.x,table);\n    if(r.x==table)r.y=4.;\n    return r;\n}\n\nvec2 ray(vec3 ro, vec3 rd)\n{\n    float t=0.,m;\n    for(int i=0;i<128;i++)\n    {\n        vec3 p = ro+rd*t;\n        vec2 s = map(p);\n        m=s.y;\n        if(abs(s.x)<0.000001)break;\n        t+=s.x;\n        if(t>MAX_DIST){t=-1.;break;}\n    }\n    return vec2(t,m);\n}\n\nvec3 normal(vec3 p)\n{\n    vec2 e = vec2(0.0001,0);\n    return normalize(vec3(\n        map(p+e.xyy).x-map(p-e.xyy).x,\n        map(p+e.yxy).x-map(p-e.yxy).x,\n        map(p+e.yyx).x-map(p-e.yyx).x\n        ));\n}\n\nvec3 color(vec3 ro, vec3 rd, vec2 r)\n{\n    vec3 col=texture(iChannel0,rd).rgb;\n    if(r.x>0.)\n    {\n    \tvec3 p = ro+rd*r.x;\n    \tvec3 n = normal(p);\n    \tfloat ap = atan(p.z,p.x);\n    \tvec3 mate = vec3(1,0,0);\n    \tif(r.y==1.)mate=vec3(0.2);\n    \telse if(r.y==2.)mate=vec3(0,.8,0);\n        else if(r.y==3.)mate=vec3(1,1.,.8);\n        else if(r.y==4.)mate=texture(iChannel1,vec2(ap,length(p.xz))).rgb;\n       \tvec3 sun = normalize(vec3(-0.5,1.,-.5));\n        float dif = clamp(dot(sun,n),0.,1.);\n        float sky = clamp(dot(n,vec3(0,1,0)),0.,1.);\n        float bou = clamp(dot(n,vec3(0,-1,0)),0.,1.);\n        float sha = step(ray(p+n*.001,sun).x,0.);\n        vec3 ref = reflect(-sun,n);\n        float spe = max(0.0,dot(ref,normalize(ro-p)));\n        spe = pow(spe,8.0);\n        col=dif*mate*sha+spe*sha*.6;\n        col+=bou*mate*.5;\n        col+=sky*mate*.25;\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 c, in vec2 f)\n{\n    vec2 uv = (2.*f-iResolution.xy)/iResolution.y;\n    \n    float x = -1.5-cos(iTime/5.);\n    float d = 2.5+cos01(iTime/10.);\n    \n    vec3 ro = vec3(sin(x)*d,1.-cos01(iTime/6.),cos(x)*d);\n    vec3 ta = vec3(0);\n    vec3 rd = cam(ro,ta,uv);\n    \n    vec2 r = ray(ro,rd);\n    \n    vec3 col =texture(iChannel0,rd).rgb;\n    \n    if(r.x>0.)\n    {\n        col=color(ro,rd,r);\n        if(r.y==0.||r.y==4.)\n        {\n            vec3 p = ro+rd*r.x;\n            vec3 n = normal(p);\n            ro=p+n*.001;\n            rd=reflect(rd,n);\n            r = ray(ro,rd);\n            col+=color(ro,rd,r)/15.;\n        }\n    }\n    \n    c.rgb=col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 24,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define MAX_DIST 10.0\n#define PI 3.1415927\n\nmat2 rot(float x){return mat2(cos(x),-sin(x),sin(x),cos(x));}\n\n//thanks to iq for sharing this knowledge on his website\nfloat torus(vec3 p, vec2 t)\n{\n    vec2 b = vec2(length(p.xz)-t.x,p.y);\n    return length(b)-t.y;\n}\n\nfloat cyl(vec3 p, float h, float r)\n{\n    vec2 q = abs(vec2(length(p.xz),p.y))-vec2(h,r);\n    return length(max(q,0.0))+min(max(q.x,q.y),0.0);\n}\n\nfloat cos01(float x)\n{\n    return (1.+cos(x))/2.;\n}\n\nvec3 cam(vec3 ro, vec3 ta, vec2 uv)\n{\n    vec3 cf = normalize(ta-ro);\n    vec3 cu = normalize(cross(cf,vec3(0,1,0)));\n    vec3 cr = normalize(cross(cu,cf));\n    return normalize(uv.x*cu+uv.y*cr+2.*cf);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}