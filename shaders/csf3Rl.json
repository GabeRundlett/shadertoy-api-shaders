{
    "Shader": {
        "info": {
            "date": "1666610043",
            "description": "Simple blur using a repeating buffer",
            "flags": 32,
            "hasliked": 0,
            "id": "csf3Rl",
            "likes": 2,
            "name": "Cellular Blur",
            "published": 3,
            "tags": [
                "blur",
                "cellular",
                "cell",
                "buffer"
            ],
            "usePreview": 1,
            "username": "MysteryPancake",
            "viewed": 253
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define cell(offset) texelFetch(iChannel0, ivec2(fragCoord) + offset, 0)\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    if (iFrame > 1) {\n        // Sum of neighbours, 3 x 3 kernel\n        vec4 sum = cell(ivec2(-1,  1)) + cell(ivec2(0,  1)) + cell(ivec2(1,  1))\n                 + cell(ivec2(-1,  0))                      + cell(ivec2(1,  0))\n                 + cell(ivec2(-1, -1)) + cell(ivec2(0, -1)) + cell(ivec2(1, -1));\n                 \n        // Average of neighbours\n        fragColor = sum / 8.0;\n    } else {\n        fragColor = texture(iChannel1, fragCoord / iResolution.xy);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}