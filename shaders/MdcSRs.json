{
    "Shader": {
        "info": {
            "date": "1460843140",
            "description": "Trying out the sound shader.\n\nI'm not a great musician, but I'm quite pleased with how the synthesis turned out.",
            "flags": 8,
            "hasliked": 0,
            "id": "MdcSRs",
            "likes": 24,
            "name": "Music Doodle",
            "published": 3,
            "tags": [
                "sound",
                "music"
            ],
            "usePreview": 0,
            "username": "finalman",
            "viewed": 984
        },
        "renderpass": [
            {
                "code": "const float HASHSCALE1 = 443.8975;\nconst vec3 HASHSCALE3 = vec3(443.897, 441.423, 437.195);\nconst vec4 HASHSCALE4 = vec4(443.897, 441.423, 437.195, 444.129);\n\nconst float STEP = 0.30;\n\nconst float PI = 3.1415926535897932384626433832795;\nconst float TAU = 2.0 * PI;\n\nconst float _x_ = -999.0;\n\nconst float C_1 = -45.0;\nconst float Db1 = -44.0;\nconst float D_1 = -43.0;\nconst float Eb1 = -42.0;\nconst float E_1 = -41.0;\nconst float F_1 = -40.0;\nconst float Gb1 = -39.0;\nconst float G_1 = -38.0;\nconst float Ab1 = -37.0;\nconst float A_1 = -36.0;\nconst float Bb1 = -35.0;\nconst float B_1 = -34.0;\n\nconst float C_2 = -33.0;\nconst float Db2 = -32.0;\nconst float D_2 = -31.0;\nconst float Eb2 = -30.0;\nconst float E_2 = -29.0;\nconst float F_2 = -28.0;\nconst float Gb2 = -27.0;\nconst float G_2 = -26.0;\nconst float Ab2 = -25.0;\nconst float A_2 = -24.0;\nconst float Bb2 = -23.0;\nconst float B_2 = -22.0;\n\nconst float C_3 = -21.0;\nconst float Db3 = -20.0;\nconst float D_3 = -19.0;\nconst float Eb3 = -18.0;\nconst float E_3 = -17.0;\nconst float F_3 = -16.0;\nconst float Gb3 = -15.0;\nconst float G_3 = -14.0;\nconst float Ab3 = -13.0;\nconst float A_3 = -12.0;\nconst float Bb3 = -11.0;\nconst float B_3 = -10.0;\n\nconst float C_4 = -9.0;\nconst float Db4 = -8.0;\nconst float D_4 = -7.0;\nconst float Eb4 = -6.0;\nconst float E_4 = -5.0;\nconst float F_4 = -4.0;\nconst float Gb4 = -3.0;\nconst float G_4 = -2.0;\nconst float Ab4 = -1.0;\nconst float A_4 = 0.0;\nconst float Bb4 = 1.0;\nconst float B_4 = 2.0;\n\nconst float C_5 = 3.0;\nconst float Db5 = 4.0;\nconst float D_5 = 5.0;\nconst float Eb5 = 6.0;\nconst float E_5 = 7.0;\nconst float F_5 = 8.0;\nconst float Gb5 = 9.0;\nconst float G_5 = 10.0;\nconst float Ab5 = 11.0;\nconst float A_5 = 12.0;\nconst float Bb5 = 13.0;\nconst float B_5 = 14.0;\n\n\nfloat hash11(float p)\n{\n\tvec3 p3  = fract(vec3(p) * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec2 hash21(float p)\n{\n\tvec3 p3 = fract(vec3(p) * HASHSCALE3);\n\tp3 += dot(p3, p3.yzx + 19.19);\n\treturn fract(vec2((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y));\n}\n\nfloat n2f(float n)\n{\n    return 440.0 * pow(2.0, n / 12.0);\n}\n\nfloat sinh(float x)\n{\n    return (exp(x) - exp(-x)) * 0.5;\n}\n\nvec2 sinh(vec2 x)\n{\n    return (exp(x) - exp(-x)) * 0.5;\n}\n\nfloat cosh(float x)\n{\n    return (exp(x) + exp(-x)) * 0.5;\n}\n\nvec2 cosh(vec2 x)\n{\n    return (exp(x) + exp(-x)) * 0.5;\n}\n\nfloat tanh(float x)\n{\n    return sinh(x) / cosh(x);\n}\n\nvec2 tanh(vec2 x)\n{\n    return sinh(x) / cosh(x);\n}\n\nfloat kick1(float t)\n{\n    return tanh(sin(exp(-t * 100.0) * 18.0)) * exp(-t);\n}\n\nfloat kick(float t)\n{\n    return (kick1(t) + kick1(t * 2.3)) * 0.5;\n}\n\nfloat snare1(float t)\n{\n    return tanh(hash11(t) + sin(exp(-t * 100.0) * 60.0) * 0.2) * exp(-t * 10.0);\n}\n\nfloat snare(float t)\n{\n    return (snare1(t) - snare1(t + 0.02)) * 0.7;\n}\n\nfloat hiHat(float t)\n{\n    return hash11(t + 3.0) * exp(-t * 50.0);\n}\n\nfloat bass1(float t, float note, float filter)\n{\n    float freq = n2f(note);\n    float phase = fract(t * freq);\n    \n    return 0.333 * tanh(\n        sin(phase * TAU) +\n        sin(phase * TAU * 2.0) * 0.5 + \n        sin(phase * TAU * 3.0) * 0.33 + \n        sin(exp(-t) * filter * phase / freq) * 0.3\n    ) * exp(-t * 2.0);\n}\n\nvec2 bass(float t, float note, float filter)\n{\n    float c = bass1(t, note, filter);\n    \n    return vec2(\n        bass1(t, note + 0.08, filter) + bass1(t, note - 0.03, filter) + c,\n    \tbass1(t, note - 0.08, filter) + bass1(t, note + 0.03, filter) + c\n    ) * 0.333;\n}\n\nfloat lead1(float t, float note, float fm)\n{\n    float freq = n2f(note);\n    float phase = fract(t * freq);\n    \n    phase += sin(phase * TAU) * fm;\n    \n    return\n        sin(phase * TAU) +\n        sin(phase * TAU * 2.0) / 2.0 +\n        sin(phase * TAU * 3.0) / 3.0 +\n        sin(phase * TAU * 4.0) / 4.0 +\n        sin(phase * TAU * 5.0) / 5.0 +\n        sin(phase * TAU * 6.0) / 6.0 +\n        sin(phase * TAU * 7.0) / 7.0 +\n        sin(phase * TAU * 8.0) / 8.0 +\n        sin(phase * TAU * 9.0) / 9.0 +\n        sin(phase * TAU * 10.0) / 10.0 +\n        sin(phase * TAU * 11.0) / 11.0;\n}\n\nvec2 lead(float t, float note, float fm)\n{\n    float a0 = lead1(t, note - 0.09, fm);\n    float a1 = lead1(t, note - 0.06, fm);\n    float a2 = lead1(t, note - 0.03, fm);\n    float a3 = lead1(t, note + 0.00, fm);\n    float a4 = lead1(t, note + 0.03, fm);\n    float a5 = lead1(t, note + 0.06, fm);\n    float a6 = lead1(t, note + 0.09, fm);\n    return 0.200 * tanh(vec2(a0 + a1 + a2 + a3, a3 + a4 + a5 + a6) * 0.7);\n}\n\nvoid bassSeq(float time, out float since, out float note)\n{\n    time = mod(time, STEP * 8.0 * 4.0);\n    float s = 0.0;\n    \n    if (time >= s) { since = time - s; note = D_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = D_3; } s+= STEP;\n    if (time >= s) { since = time - s; note = D_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = D_3; } s+= STEP;\n    if (time >= s) { since = time - s; note = D_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = D_3; } s+= STEP;\n    if (time >= s) { since = time - s; note = D_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = D_3; } s+= STEP;\n    \n    if (time >= s) { since = time - s; note = Bb1; } s+= STEP;\n    if (time >= s) { since = time - s; note = Bb2; } s+= STEP;\n    if (time >= s) { since = time - s; note = Bb1; } s+= STEP;\n    if (time >= s) { since = time - s; note = Bb2; } s+= STEP;\n    if (time >= s) { since = time - s; note = Bb1; } s+= STEP;\n    if (time >= s) { since = time - s; note = Bb2; } s+= STEP;\n    if (time >= s) { since = time - s; note = Bb1; } s+= STEP;\n    if (time >= s) { since = time - s; note = Bb2; } s+= STEP;\n    \n    if (time >= s) { since = time - s; note = C_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = C_3; } s+= STEP;\n    if (time >= s) { since = time - s; note = C_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = C_3; } s+= STEP;\n    if (time >= s) { since = time - s; note = C_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = C_3; } s+= STEP;\n    if (time >= s) { since = time - s; note = C_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = C_3; } s+= STEP;\n    \n    if (time >= s) { since = time - s; note = A_1; } s+= STEP;\n    if (time >= s) { since = time - s; note = A_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = A_1; } s+= STEP;\n    if (time >= s) { since = time - s; note = A_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = A_1; } s+= STEP;\n    if (time >= s) { since = time - s; note = A_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = A_1; } s+= STEP;\n    if (time >= s) { since = time - s; note = A_2; } s+= STEP;\n}\n\nvoid leadSeq(float time, out float since, out float note)\n{\n    time = mod(time, STEP * 8.0 * 16.0);\n    float s = 0.0;\n    float n = _x_;\n    \n    if (time >= s) { n = D_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = F_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = G_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    \n\tif (time >= s) { n = Bb4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    \n    if (time >= s) { n = D_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = C_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    \n    if (time >= s) { n = D_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    \n    \n    if (time >= s) { n = D_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = F_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = G_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    \n\tif (time >= s) { n = Bb4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    \n    if (time >= s) { n = D_5; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = C_5; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    \n    if (time >= s) { n = A_5; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n}\n\nfloat drumsVoice(float time)\n{\n    float bd = fract(time / (STEP * 2.0)) * (STEP * 2.0);\n    float sd = fract(time / (STEP * 4.0) + 0.5) * (STEP * 4.0);\n    float hh = 1e30;\n    \n    if (time / STEP > 8.0 * 8.0)\n    {\n    \thh = fract(time / (STEP * 1.0)) * (STEP * 1.0);\n    }\n    \n    if (time / STEP > 8.0 * 16.0)\n    {\n    \thh = fract(time / (STEP * 0.5)) * (STEP * 0.5);\n    }\n    \n    return kick(bd) + snare(sd) + hiHat(hh) * 0.3;\n}\n\nvec2 bassVoice(float time)\n{\n    float since;\n    float note;\n    float filter = 6000.0 * exp(cos(time / 64.0 * TAU / STEP));\n    \n    bassSeq(time, since, note);\n    \n    return bass(since, note, filter);\n}\n\nvec2 leadVoice(float time)\n{\n    float since;\n    float note;\n    float fm = sin(time / 16.0 * TAU / STEP) * 0.2 + 0.3;\n    \n    leadSeq(time, since, note);\n    \n    return lead(since, note, fm) * 0.5 + lead(since, note - 12.0, fm) * 0.3;\n}\n\nvec3 sound(float time)\n{\n    float d = drumsVoice(time);\n    \n    vec2 b = bassVoice(time) \n        + bassVoice(time - 0.15) * vec2(0.3, 0.2) \n        + bassVoice(time - 0.30) * vec2(0.066, 0.1);\n    \n    vec2 l = leadVoice(time)\n        + leadVoice(time - 0.20) * vec2(0.4, 0.5) \n        + leadVoice(time - 0.40) * vec2(0.25, 0.20);\n    \n    return vec3(d, (b.x + b.y) * 0.5, (l.x + l.y) * 0.5);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 channels = sound(iTime - uv.x / 100.0) * 0.5;\n        \n    float c = \n        smoothstep(0.01, 0.015, abs(uv.y - channels.x - 0.8)) *  \n        smoothstep(0.01, 0.015, abs(uv.y - channels.z - 0.55)) *  \n        smoothstep(0.01, 0.015, abs(uv.y - channels.y - 0.3));\n    \n    float v = 1.0 - pow(length(uv - 0.5) * 1.5, 5.0);\n    \n    fragColor = vec4(c*v, c*v, c*v, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "const float HASHSCALE1 = 443.8975;\nconst vec3 HASHSCALE3 = vec3(443.897, 441.423, 437.195);\nconst vec4 HASHSCALE4 = vec4(443.897, 441.423, 437.195, 444.129);\n\nconst float STEP = 0.30;\n\nconst float PI = 3.1415926535897932384626433832795;\nconst float TAU = 2.0 * PI;\n\nconst float _x_ = -999.0;\n\nconst float C_1 = -45.0;\nconst float Db1 = -44.0;\nconst float D_1 = -43.0;\nconst float Eb1 = -42.0;\nconst float E_1 = -41.0;\nconst float F_1 = -40.0;\nconst float Gb1 = -39.0;\nconst float G_1 = -38.0;\nconst float Ab1 = -37.0;\nconst float A_1 = -36.0;\nconst float Bb1 = -35.0;\nconst float B_1 = -34.0;\n\nconst float C_2 = -33.0;\nconst float Db2 = -32.0;\nconst float D_2 = -31.0;\nconst float Eb2 = -30.0;\nconst float E_2 = -29.0;\nconst float F_2 = -28.0;\nconst float Gb2 = -27.0;\nconst float G_2 = -26.0;\nconst float Ab2 = -25.0;\nconst float A_2 = -24.0;\nconst float Bb2 = -23.0;\nconst float B_2 = -22.0;\n\nconst float C_3 = -21.0;\nconst float Db3 = -20.0;\nconst float D_3 = -19.0;\nconst float Eb3 = -18.0;\nconst float E_3 = -17.0;\nconst float F_3 = -16.0;\nconst float Gb3 = -15.0;\nconst float G_3 = -14.0;\nconst float Ab3 = -13.0;\nconst float A_3 = -12.0;\nconst float Bb3 = -11.0;\nconst float B_3 = -10.0;\n\nconst float C_4 = -9.0;\nconst float Db4 = -8.0;\nconst float D_4 = -7.0;\nconst float Eb4 = -6.0;\nconst float E_4 = -5.0;\nconst float F_4 = -4.0;\nconst float Gb4 = -3.0;\nconst float G_4 = -2.0;\nconst float Ab4 = -1.0;\nconst float A_4 = 0.0;\nconst float Bb4 = 1.0;\nconst float B_4 = 2.0;\n\nconst float C_5 = 3.0;\nconst float Db5 = 4.0;\nconst float D_5 = 5.0;\nconst float Eb5 = 6.0;\nconst float E_5 = 7.0;\nconst float F_5 = 8.0;\nconst float Gb5 = 9.0;\nconst float G_5 = 10.0;\nconst float Ab5 = 11.0;\nconst float A_5 = 12.0;\nconst float Bb5 = 13.0;\nconst float B_5 = 14.0;\n\n\nfloat hash11(float p)\n{\n\tvec3 p3  = fract(vec3(p) * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec2 hash21(float p)\n{\n\tvec3 p3 = fract(vec3(p) * HASHSCALE3);\n\tp3 += dot(p3, p3.yzx + 19.19);\n\treturn fract(vec2((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y));\n}\n\nfloat n2f(float n)\n{\n    return 440.0 * pow(2.0, n / 12.0);\n}\n\nfloat sinh(float x)\n{\n    return (exp(x) - exp(-x)) * 0.5;\n}\n\nvec2 sinh(vec2 x)\n{\n    return (exp(x) - exp(-x)) * 0.5;\n}\n\nfloat cosh(float x)\n{\n    return (exp(x) + exp(-x)) * 0.5;\n}\n\nvec2 cosh(vec2 x)\n{\n    return (exp(x) + exp(-x)) * 0.5;\n}\n\nfloat tanh(float x)\n{\n    return sinh(x) / cosh(x);\n}\n\nvec2 tanh(vec2 x)\n{\n    return sinh(x) / cosh(x);\n}\n\nfloat kick1(float t)\n{\n    return tanh(sin(exp(-t * 100.0) * 18.0)) * exp(-t);\n}\n\nfloat kick(float t)\n{\n    return (kick1(t) + kick1(t * 2.3)) * 0.5;\n}\n\nfloat snare1(float t)\n{\n    return tanh(hash11(t) + sin(exp(-t * 100.0) * 60.0) * 0.2) * exp(-t * 10.0);\n}\n\nfloat snare(float t)\n{\n    return (snare1(t) - snare1(t + 0.02)) * 0.7;\n}\n\nfloat hiHat(float t)\n{\n    return hash11(t + 3.0) * exp(-t * 50.0);\n}\n\nfloat bass1(float t, float note, float filter)\n{\n    float freq = n2f(note);\n    float phase = fract(t * freq);\n    \n    return 0.333 * tanh(\n        sin(phase * TAU) +\n        sin(phase * TAU * 2.0) * 0.5 + \n        sin(phase * TAU * 3.0) * 0.33 + \n        sin(exp(-t) * filter * phase / freq) * 0.3\n    ) * exp(-t * 2.0);\n}\n\nvec2 bass(float t, float note, float filter)\n{\n    float c = bass1(t, note, filter);\n    \n    return vec2(\n        bass1(t, note + 0.08, filter) + bass1(t, note - 0.03, filter) + c,\n    \tbass1(t, note - 0.08, filter) + bass1(t, note + 0.03, filter) + c\n    ) * 0.333;\n}\n\nfloat lead1(float t, float note, float fm)\n{\n    float freq = n2f(note);\n    float phase = fract(t * freq);\n    \n    phase += sin(phase * TAU) * fm;\n    \n    return\n        sin(phase * TAU) +\n        sin(phase * TAU * 2.0) / 2.0 +\n        sin(phase * TAU * 3.0) / 3.0 +\n        sin(phase * TAU * 4.0) / 4.0 +\n        sin(phase * TAU * 5.0) / 5.0 +\n        sin(phase * TAU * 6.0) / 6.0 +\n        sin(phase * TAU * 7.0) / 7.0 +\n        sin(phase * TAU * 8.0) / 8.0 +\n        sin(phase * TAU * 9.0) / 9.0 +\n        sin(phase * TAU * 10.0) / 10.0 +\n        sin(phase * TAU * 11.0) / 11.0;\n}\n\nvec2 lead(float t, float note, float fm)\n{\n    float a0 = lead1(t, note - 0.09, fm);\n    float a1 = lead1(t, note - 0.06, fm);\n    float a2 = lead1(t, note - 0.03, fm);\n    float a3 = lead1(t, note + 0.00, fm);\n    float a4 = lead1(t, note + 0.03, fm);\n    float a5 = lead1(t, note + 0.06, fm);\n    float a6 = lead1(t, note + 0.09, fm);\n    return 0.200 * tanh(vec2(a0 + a1 + a2 + a3, a3 + a4 + a5 + a6) * 0.7);\n}\n\nvoid bassSeq(float time, out float since, out float note)\n{\n    time = mod(time, STEP * 8.0 * 4.0);\n    float s = 0.0;\n    \n    if (time >= s) { since = time - s; note = D_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = D_3; } s+= STEP;\n    if (time >= s) { since = time - s; note = D_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = D_3; } s+= STEP;\n    if (time >= s) { since = time - s; note = D_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = D_3; } s+= STEP;\n    if (time >= s) { since = time - s; note = D_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = D_3; } s+= STEP;\n    \n    if (time >= s) { since = time - s; note = Bb1; } s+= STEP;\n    if (time >= s) { since = time - s; note = Bb2; } s+= STEP;\n    if (time >= s) { since = time - s; note = Bb1; } s+= STEP;\n    if (time >= s) { since = time - s; note = Bb2; } s+= STEP;\n    if (time >= s) { since = time - s; note = Bb1; } s+= STEP;\n    if (time >= s) { since = time - s; note = Bb2; } s+= STEP;\n    if (time >= s) { since = time - s; note = Bb1; } s+= STEP;\n    if (time >= s) { since = time - s; note = Bb2; } s+= STEP;\n    \n    if (time >= s) { since = time - s; note = C_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = C_3; } s+= STEP;\n    if (time >= s) { since = time - s; note = C_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = C_3; } s+= STEP;\n    if (time >= s) { since = time - s; note = C_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = C_3; } s+= STEP;\n    if (time >= s) { since = time - s; note = C_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = C_3; } s+= STEP;\n    \n    if (time >= s) { since = time - s; note = A_1; } s+= STEP;\n    if (time >= s) { since = time - s; note = A_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = A_1; } s+= STEP;\n    if (time >= s) { since = time - s; note = A_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = A_1; } s+= STEP;\n    if (time >= s) { since = time - s; note = A_2; } s+= STEP;\n    if (time >= s) { since = time - s; note = A_1; } s+= STEP;\n    if (time >= s) { since = time - s; note = A_2; } s+= STEP;\n}\n\nvoid leadSeq(float time, out float since, out float note)\n{\n    time = mod(time, STEP * 8.0 * 8.0);\n    float s = 0.0;\n    float n = _x_;\n    \n    if (time >= s) { n = D_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = F_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = G_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    \n\tif (time >= s) { n = Bb4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    \n    if (time >= s) { n = D_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = C_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    \n    if (time >= s) { n = D_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    \n    \n    if (time >= s) { n = D_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = F_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = G_4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    \n\tif (time >= s) { n = Bb4; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    \n    if (time >= s) { n = D_5; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = C_5; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    \n    if (time >= s) { n = A_5; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n    if (time >= s) { n = _x_; } if (n > _x_) { since = time - s; note = n; } s+= STEP;\n}\n\nfloat drumsVoice(float time)\n{\n    float bd = fract(time / (STEP * 2.0)) * (STEP * 2.0);\n    float sd = fract(time / (STEP * 4.0) + 0.5) * (STEP * 4.0);\n    float hh = 1e30;\n    \n    if (time / STEP > 8.0 * 8.0)\n    {\n    \thh = fract(time / (STEP * 1.0)) * (STEP * 1.0);\n    }\n    \n    if (time / STEP > 8.0 * 16.0)\n    {\n    \thh = fract(time / (STEP * 0.5)) * (STEP * 0.5);\n    }\n    \n    return kick(bd) + snare(sd) + hiHat(hh) * 0.3;\n}\n\nvec2 bassVoice(float time)\n{\n    float since;\n    float note;\n    float filter = 6000.0 * exp(cos(time / 64.0 * TAU / STEP));\n    \n    bassSeq(time, since, note);\n    \n    return bass(since, note, filter);\n}\n\nvec2 leadVoice(float time)\n{\n    float since;\n    float note;\n    float fm = sin(time / 16.0 * TAU / STEP) * 0.2 + 0.3;\n    \n    leadSeq(time, since, note);\n    \n    return lead(since, note, fm) * 0.5 + lead(since, note - 12.0, fm) * 0.3;\n}\n\nvec2 sound(float time)\n{\n    vec2 o = vec2(0.0);\n    \n    o += drumsVoice(time);\n    \n    o += bassVoice(time) \n        + bassVoice(time - 0.15) * vec2(0.3, 0.2) \n        + bassVoice(time - 0.30) * vec2(0.066, 0.1);\n    \n    o += leadVoice(time)\n        + leadVoice(time - 0.20) * vec2(0.4, 0.5) \n        + leadVoice(time - 0.40) * vec2(0.25, 0.20);\n    \n    return vec2(o * 0.75);\n}\n\nvec2 mainSound( in int samp,float time)\n{\n    return sound(time);\n    \n\t// This kills the WebGL\n\t/*return (\n        sound(time) + \n        sound(time + (0.25 / iSampleRate)) + \n    \tsound(time + (0.50 / iSampleRate)) + \n    \tsound(time + (0.75 / iSampleRate))\n    ) * 0.25;*/\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 38
                    }
                ],
                "type": "sound"
            },
            {
                "code": "#define tanh TANH\n#define cosh COSH\n#define sinh SINH\n#define filter FILTER",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}