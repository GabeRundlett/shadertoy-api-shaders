{
    "Shader": {
        "info": {
            "date": "1540405267",
            "description": "Move the mouse!\nA variant of my fractal here https://www.shadertoy.com/view/4ttBWM that uses the same formulas but changes the exponents x^2+y^2 to various other values around 2.\nAs always, let me know if you have any ideas to reduce the character count.",
            "flags": 0,
            "hasliked": 0,
            "id": "lt3BRX",
            "likes": 8,
            "name": "Breathing Fractal 149 Characters",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "monochrome",
                "codegolf",
                "breathing"
            ],
            "usePreview": 0,
            "username": "mathmasterzach",
            "viewed": 749
        },
        "renderpass": [
            {
                "code": "// Created by @mathmasterzach\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n//coyote optimizes the shader length further to arrive at 149 characters!\n/*#define mainImage(o,p)\\\n    for( vec2 r = iResolution.xy, q = 2.*(p+p-r)/r.y; o.a++ < 20.; )\\\n        o += length( q = abs(q)/dot(pow(q,2.+.3*sin(iTime+o.aa)),p/p) - iMouse.xy/r) / 70.*/\n\n//GregRostami does it again! 154 Characters! Wow!\n/*#define mainImage(o,p)\\\n    for( vec2 r = iResolution.xy, q = 2.*(p+p-r)/r.y; o.a++ < 20.; )\\\n        o += length( q = abs(q)/dot(pow(q,vec2(2.+.3*sin(iTime+o.a))),p/p) - iMouse.xy/r) / 70.*/\n\n//Smallest version with NVIDIA fix. 152 Characters. Thanks coyote!\nvoid mainImage(out vec4 o, vec2 p) {\n    for(\n         vec2 r = iResolution.xy, q = 2.*(p+p-r)/r.y;\n         o.a++ < 20.;\n         o += length( q = q/dot(pow(q,2.+.3*sin(iTime+o.aa)),r/r) - iMouse.xy/r ) / 70.\n       )\n        q = abs(q); }\n\n//My initial version, 158 Characters\n//The dot product in this one works to add the components of a Vector2\n/*#define mainImage(o,p)                                                    \\\n    for( vec2 r = iResolution.xy, q = 2.*(p+p-r)/r.y; o.a++ < 20.; )      \\\n        o += length( q = abs(q)/dot(pow(q,vec2(2.+.3*sin(iTime+o.a))),vec2(1)) - iMouse.xy/r) / 7e1*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}