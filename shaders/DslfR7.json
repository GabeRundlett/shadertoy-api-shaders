{
    "Shader": {
        "info": {
            "date": "1688576153",
            "description": "A space flower?\n@byt3m3chanic doing pretty cool with variable cell size truchets.\nDidn't really understand what he did so I tried something inspired by it\nI both failed and succeeded. It didn't turn out as intended but kind of neat anyway.",
            "flags": 64,
            "hasliked": 0,
            "id": "DslfR7",
            "likes": 21,
            "name": "A space flower?",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "mrange",
            "viewed": 503
        },
        "renderpass": [
            {
                "code": "// CC0: A space flower?\n//  @byt3m3chanic doing pretty cool with variable cell size truchets.\n//  Didn't really understand what he did so I tried something inspired by it\n//  I both failed and succeeded. It didn't turn out as intended but kind of neat anyway.\n\n\n// See @byt3m3chanic's tweet: https://twitter.com/byt3m3chanic/status/1676035945320046592?s=20\n\n// Music: Fearbace & Nostre - Still Isolated\n//  Which I happened to be listening to at the time.\n\n\n#define TIME        iTime\n#define RESOLUTION  iResolution\n#define PI          3.141592654\n#define TAU         (2.0*PI)\n#define ROT(a)      mat2(cos(a), sin(a), -sin(a), cos(a))\n#define REV(x)      exp2((x)*zoom)\n#define FWD(x)      (log2(x)/zoom)\n\nconst float zoom = log2(1.3);\n\n#define REP 26.0\n#define KALEIDOSCOPE\n\n// License: Unknown, author: Unknown, found: don't remember\nfloat hash(vec2 co) {\n  return fract(sin(dot(co.xy ,vec2(12.9898,58.233))) * 13758.5453);\n}\n\nvec2 toPolar(vec2 p) {\n  return vec2(length(p), atan(p.y, p.x));\n}\n\nvec2 toRect(vec2 p) {\n  return vec2(p.x*cos(p.y), p.x*sin(p.y));\n}\n\n// License: MIT, author: Inigo Quilez, found: https://www.iquilezles.org/www/articles/smin/smin.htm\nfloat pmin(float a, float b, float k) {\n  float h = clamp(0.5+0.5*(b-a)/k, 0.0, 1.0);\n  return mix(b, a, h) - k*h*(1.0-h);\n}\n\nfloat pabs(float a, float k) {\n  return -pmin(a, -a, k);\n}\n\n// License: MIT OR CC-BY-NC-4.0, author: mercury, found: https://mercury.sexy/hg_sdf/\nfloat modMirror1(inout float p, float size) {\n  float halfsize = size*0.5;\n  float c = floor((p + halfsize)/size);\n  p = mod(p + halfsize,size) - halfsize;\n  p *= mod(c, 2.0)*2.0 - 1.0;\n  return c;\n}\n\nfloat smoothKaleidoscope(inout vec2 p, float sm, float rep) {\n  vec2 hp = p;\n\n  vec2 hpp = toPolar(hp);\n  float rn = modMirror1(hpp.y, TAU/rep);\n\n  float sa = PI/rep - pabs(PI/rep - abs(hpp.y), sm);\n  hpp.y = sign(hpp.y)*(sa);\n\n  hp = toRect(hpp);\n\n  p = hp;\n\n  return rn;\n}\n\n// License: MIT, author: Inigo Quilez, found: https://iquilezles.org/www/articles/distfunctions2d/distfunctions2d.htm\nfloat segment(vec2 p, vec2 a, vec2 b) {\n  vec2 pa = p-a, ba = b-a;\n  float h = clamp(dot(pa,ba)/dot(ba,ba), 0.0, 1.0);\n  return length(pa - ba*h);\n}\n\nvec3 effect(vec2 p, vec2 pp) {\n  vec2 op = p;\n  float tm = TIME;\n  float mtm = fract(tm);\n  float ftm = floor(tm);\n\n  mat2 rot = ROT(0.075*TIME); \n\n  const float rep = REP;\n  const float sm  = 0.1*36.0/REP;\n  p *= transpose(rot);\n#if defined(KALEIDOSCOPE)\n  float nn = smoothKaleidoscope(p, sm, rep);\n#endif  \n  p *= rot;\n  p *= ROT(-0.5*length(p));\n  p += 0.5*sin(vec2(1.0, sqrt(0.5))*TIME*0.08);\n\n  \n  float zz = REV(mtm);\n  vec2 p2 = p;\n  p2 /= zz;\n  vec2 s2 = sign(p2);\n  p2 = abs(p2);\n  vec2 fp2 = FWD((p2));\n\n  vec2 n = floor(fp2);\n  float h = hash(s2.x+s2.y+n-ftm);\n  \n  vec2 x0 = REV(n);\n  vec2 x1 = REV(n+1.0);\n\n  vec2 m = (x0+x1)*0.5;\n  vec2 w = x1-x0;\n\n  vec2 modi = h > 0.5 ? vec2(1.0, 1.0) : vec2(1.0, -1.0);\n\n  vec2 p3 = p2;\n  p3 -= m;\n  p3 = abs(p3);\n  p3 -= 0.5*w;\n  float d3 = length(p3);\n\n  vec2 p4 = p2;\n  p4 -= m;\n  float d4 = segment(p4, -0.5*w*modi, 0.5*w*modi);\n  d4 = min(d4, d4);\n  d4 *= zz;\n  \n  float d6 = min(abs(p.x), abs(p.y));\n  vec3 col = vec3(0.0);\n  \n  float fo =1.0 - exp(-10.0*(d6-0.02));\n  float ll = length(pp);\n  vec3 gcol4 = 0.0025*(1.0+cos(vec3(0.0, 1.0, 2.0)+TIME+TAU*h+ll));\n  vec3 gcol6 = 0.005*(1.0+cos(vec3(0.0, 1.0, 2.0)+TIME+ll));\n  \n  col += fo*gcol4/max(d4, 0.001);\n  col = clamp(col, 0.0, 1.0);\n  col += gcol6/max(d6, 0.0001);\n  col = clamp(col, 0.0, 1.0);\n  col -= 0.05*vec3(0.0,1.0,2.0).zyx*(ll);\n  col = sqrt(col);\n  return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 q = fragCoord/RESOLUTION.xy;\n  vec2 p = -1. + 2. * q;\n  vec2 pp = p;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n  vec3 col = effect(p, pp);\n  fragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 33904,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/fearbace/fearbace-nostre-still?si=2fed3cd0cf404921ac989c6db4d5eae2&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}