{
    "Shader": {
        "info": {
            "date": "1679175798",
            "description": "I wanted to make this flag worse:\nhttps://www.reddit.com/r/eyehurtingflags/comments/boghez/flag_of_the_imperial_navy_of_tatooine/",
            "flags": 32,
            "hasliked": 0,
            "id": "ddGGWt",
            "likes": 13,
            "name": "Eyehurting Flag",
            "published": 3,
            "tags": [
                "flag",
                "pain"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 215
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, in vec2 px )\n{\n    O = vec4(0);\n    \n    // Upscale tex with blur\n    for (int i = -1; i <= 1; i++)\n    for (int j = -1; j <= 1; j++) \n        O += texelFetch(iChannel0, ivec2(0.5 * px) + ivec2(i,j), 0);\n        \n    O /= 9.;\n    \n    // Black bars for full immersion\n    vec2 res = iResolution.xy;\n    O *= step(2., 0.5 * res.y - abs(px.y - 0.5 * res.y));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define pi 3.14159\n#define t iTime\n\nvoid mainImage( out vec4 O, in vec2 px )\n{\n    vec2 res = iResolution.xy;\n    \n    // Pixelate px\n    float v = 1.5;\n    px = v * floor(px / v);\n    \n    // Downscale px\n    px *= 2.;\n    \n    vec2 uv = (px - 0.5 * res) / res.y;\n    float k = 4. / res.y;\n\n    // Points\n    vec2 p = vec2(-0.4, 0.2);\n    vec2 q = -p;\n    \n    // Angles\n    float ap = atan(uv.y - p.y, uv.x - p.x);\n    float aq = atan(uv.y - q.y, uv.x - q.x);\n        \n    // Circles\n    float dp = length(uv - p);\n    float dq = length(uv - q);\n    float scp = step(0.13, dp);\n    float scq = step(0.13, dq);\n    \n    // Strips\n    float sc = 5. / pi;   \n    float iap = floor(sc * ap + 0.23 * t);\n    float iaq = floor(sc * aq - 0.1 * t);\n    float fap = fract(sc * ap + 0.23 * t) - 0.5;\n    float faq = fract(sc * aq - 0.1 * t) - 0.5;\n    float sp = smoothstep(-k, k, 0.25-abs(fap));\n    float sq = smoothstep(-k, k, 0.25-abs(faq));\n    \n    // Color\n    vec3 col = vec3(0);\n    col = mix(col, vec3(1,1,0), sp * mod(iap, 2.));  \n    col = mix(col, vec3(1,0,0), sq * mod(iaq, 2.));\n    col = mix(col, vec3(1,1,0), sp * mod(iap + 1., 2.));\n    col = mix(col, vec3(1,0,0), sq * mod(iaq + 1., 2.));\n    col = mix(col, vec3(1,1,0), 1.-scp);\n    col = mix(col, vec3(1,0,0), 1.-scq);\n    \n    // Wanted AA to mix with white instead of background,\n    // this also hurts to look at though so is good :)\n    if ((sp>0.&&sp<1. || sq>0.&&sq<1.) && length(col) < 0.1)\n        col = vec3(1);\n    \n    O = vec4(col, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}