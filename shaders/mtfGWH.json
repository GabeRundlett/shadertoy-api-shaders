{
    "Shader": {
        "info": {
            "date": "1671679112",
            "description": "...",
            "flags": 0,
            "hasliked": 0,
            "id": "mtfGWH",
            "likes": 6,
            "name": "2d normals test",
            "published": 3,
            "tags": [
                "2d",
                "circle",
                "gradient",
                "diamond",
                "green",
                "normal",
                "rect"
            ],
            "usePreview": 0,
            "username": "SONENEIS",
            "viewed": 261
        },
        "renderpass": [
            {
                "code": "float scene(vec2 uv){\n\tfloat d = 999999999.9;\n\n\td = min(d,abs(length(uv)-0.25)-0.125);\n\td = min(d,max(abs(uv.x-0.75),abs(uv.y-0.5))-0.25);\n    d = min(d,length(uv+0.5)-0.25);\n    \n\treturn d;\n}\n\nvec3 calcNormal(vec2 p){\n\tvec2 e = vec2(-1,1) * 0.001;\n\treturn vec3(smoothstep(3.0/iResolution.y,0.0,scene(p))*normalize(\n\t\te.xy * scene(p + e.xy) +\n\t\te.yx * scene(p + e.yx) +\n\t\te.yy * scene(p + e.yy) +\n\t\te.xx * scene(p + e.xx)\n\t),0.5*sqrt(1.0-scene(p)));\n}\n\nvoid mainImage(out vec4 fragColor,vec2 fragCoord){\n  vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n  vec2 mo = (2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n  vec3 col = vec3(0.0);\n\n  vec3 nor = calcNormal(uv);\n\n  vec3 lig = normalize(vec3(mo-uv,1.0));\n  float dif = clamp(dot(nor,lig),0.0,1.0);\n\n  col += mix(col,vec3(0,1,0.5),smoothstep(3.0/iResolution.y,0.0,scene(uv)));\n  col *= dif + 0.1;\n\n  fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}