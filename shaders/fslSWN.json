{
    "Shader": {
        "info": {
            "date": "1618659108",
            "description": "fun 3d effect with a little bit of lighting\n\nI tried to achieve parallax effect, but this method is probably to heavy",
            "flags": 0,
            "hasliked": 0,
            "id": "fslSWN",
            "likes": 2,
            "name": "Room in a wall",
            "published": 3,
            "tags": [
                "raymarching",
                "cube",
                "parallax",
                "room"
            ],
            "usePreview": 0,
            "username": "TimurAB",
            "viewed": 324
        },
        "renderpass": [
            {
                "code": "#define cube_size 1.0\n\nvec2 getPos (in vec2 fragCoord) {\n    return 2.0 * fragCoord / iResolution.xy - 1.0;\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),sin(_angle),cos(_angle));\n}\n\t\t\nfloat dist (vec3 p) {\n    vec3 cube = vec3(0.0);\n    vec3 plane = vec3(0.0, 0.0, .1-cube_size);\n    vec3 q = abs(p - cube.xyz) - cube_size;\n    float c = length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0);\n    float pn = plane.z - p.z;\n    return max(-min(1000., c), pn);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 _mouse = 0.5 * iMouse.xy / iResolution.xy - 0.25;\n    vec2 uv = getPos(fragCoord);\n    vec3 cam = vec3(0.0, 0.0, -3.);\n    vec3 pos = vec3(uv, cam.z + 1.0), p;\n    cam.yz *= rotate2d(_mouse.y);\n    pos.yz *= rotate2d(_mouse.y);\n    cam.xz *= rotate2d(_mouse.x);\n    pos.xz *= rotate2d(_mouse.x);\n    vec3 dir = normalize(pos - cam);\n    float d = 0.0, total = 0.0;\n    for(int i = 0; i < 100; i ++) {\n        p = pos + total * dir;\n        d = dist(p);\n        total += d;\n        if (d < 0.01 || total > 100.0) break;\n    }\n    vec3 col = vec3(uv,0.0);\n    if (total < 100.0) {\n        float ax = abs(p.x);\n        float ay = abs(p.y);\n        vec2 l = vec2(0.0);\n        if (ax < cube_size && ay < cube_size) {\n            if (ax > cube_size - 0.01) {\n                l.x = sign(p.x);\n                p.xz *= l.x*rotate2d(1.57);\n            }\n            if (ay > cube_size - 0.01) {\n                l.y = sign(p.y);\n                p.yz *= l.y*rotate2d(1.57);\n            }\n        }\n        col = texture(iChannel0, p.xy).rgb;\n        l = (-l + 1.0) / 2.5 + 0.2;\n        col *= length(l);\n    }\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}