{
    "Shader": {
        "info": {
            "date": "1521350735",
            "description": "Hello world shadertoy!",
            "flags": 0,
            "hasliked": 0,
            "id": "XsycRw",
            "likes": 1,
            "name": "hello world",
            "published": 3,
            "tags": [
                "2d",
                "helloworld"
            ],
            "usePreview": 0,
            "username": "krshock",
            "viewed": 517
        },
        "renderpass": [
            {
                "code": "//krshock 2018\nfloat clr(vec2 uv, float uno, float dos){\n    vec2 c = vec2(0,0);\n    return cos(distance(c, uv)*uno) * cos(dos*(uv.x*uv.y));\n}\n\n\nvec3 cmap(float val, vec3 c1, vec3 c2, float f1, float f2){\n    if(val>f1)\n        return c1;\n    if(val>f2)\n        return c2;\n    return vec3(0.1,0.0,0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy + vec2(-.5, -.5);\n    uv.y *= iResolution.y/iResolution.x;\n    uv.xy *= 1.0;\n    float t = iTime*.1;\n    float w1 = sin(1.0+t)*+cos(1.5+t*3.5);           //wave 1\n    float w2 = 1.0+sin(2.0+t*5.0)+cos(4.0+t*7.0)*.5; //wave 2\n\tfloat uno=100.0+w1*50.0;    //\n    float dos = 200.0+100.0*w2;\n    float value = sin(t+cos(t))*.2+clr(uv, uno,dos);\n\tvec3 col = 0.8-cmap(value*value, vec3(.0,.0,.0), vec3(.7,.08,.08), .7,.4)*value;\n\n    fragColor = vec4(col,1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}