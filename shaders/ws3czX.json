{
    "Shader": {
        "info": {
            "date": "1601389955",
            "description": "//https://www.shadertoy.com/view/llBSzK\n///kernkraft 400\n//Creado por mememaestro en 2015-10-15 \n///modificado por JorgeFloresP.--27/sep/2020",
            "flags": 8,
            "hasliked": 0,
            "id": "ws3czX",
            "likes": 8,
            "name": "fork- kernkraft 400-v2",
            "published": 3,
            "tags": [
                "forkkernkraft400v2"
            ],
            "usePreview": 0,
            "username": "jorge2017a1",
            "viewed": 703
        },
        "renderpass": [
            {
                "code": "#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureGrad(iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), dFdx(U/16.),dFdy(U/16.) )\n#define initMsg vec4 T = vec4(0)\n#define endMsg  return length(T.yz)==0. ? 0. : T.x\n\nfloat message(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0);   // or: initMsg;\n    C(83);C(111);C(117);C(110);C(100);C(32);C(105);C(110);C(115);C(105);C(100);C(101); // message \"Sound inside\"\n    return length(T.yz)==0. ? -1. : T.x; // or: endMsg;\n}\n\n\n\n\n\n\nfloat rand(int seed, float ray) \n{\n\treturn mod(sin(float(seed)*363.5346+ray*674.2454)*6743.4365, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat pi = 3.14159265359;\n\t//vec2 position = ( fragCoord.xy / iResolution.xy ) - iMouse.xy;\n    vec2 position = ( fragCoord.xy / iResolution.xy ) -vec2(0.5);\n\tposition.y *= iResolution.y/iResolution.x;\n    \n\tfloat ang = atan(position.y, position.x);\n\tfloat dist = length(position);\n    \n    \n\tfragColor.rgb = vec3(0.3, 0.5, 0.7) * (pow(dist, -1.0) * 0.05);\n    \n\tfor (float ray = 0.0; ray < 60.0; ray += 1.0)\n    {\n\t\t//float rayang = rand(5234, ray)*6.2+time*5.0*(rand(2534, ray)-rand(3545, ray));\n\t\tfloat rayang = rand(5234, ray)*6.2+(iMouse.x+iTime*0.01)*10.0*(rand(2546, ray)-rand(5785, ray))-iMouse.y*10.0*(rand(3545, ray)-rand(5467, ray));\n        \n\t\trayang = mod(rayang, pi*2.0);\n        \n\t\tif (rayang < ang - pi) {rayang += pi*2.0;}\n\t\tif (rayang > ang + pi) {rayang -= pi*2.0;}\n        \n\t\tfloat brite = 0.3 - abs(ang - rayang);\n\t\tbrite -= dist * 0.2;\n        \n\t\tif (brite > 0.0) \n        {\n\t\t\tfragColor.rgb += vec3(0.2+0.4*rand(8644, ray), 0.4+0.4*rand(4567, ray), 0.5+0.4*rand(7354, ray)) * brite;\n\t\t}\n\t}\n    \n    \n    \n        if (iResolution.y<2000.)\n    {\n        float c=message((fragCoord/iResolution.y-vec2(.1,.2))*8.);\n        if(c>=0.)\n        {\n            fragColor=vec4(c);\n            return;\n        }\n    }\n    \n\n    \n    \n\tfragColor.a = 1.0;\n}\n\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//https://www.shadertoy.com/view/llBSzK\n///kernkraft 400\n//Creado por mememaestro en 2015-10-15 \n///modificado por JorgeFloresP.--27/sep/2020\n\nconst float trt = 1.0594630943592952645;\nconst float bpm = 140.0;\n#define pi 3.1415926538\n\nfloat note2freq(float note) {\n    return 440.0 * pow(trt,note);\n}\n\nfloat sawWave(float time, float freq, float amp) \n{\n \t   return mod(time,1.0/freq)*freq*amp;\n}\n\nvec2 bassSynth(float time, float tempo) {\n    float m = floor(mod(tempo/2.0,8.0)); //minim number\n    float note = floor(mod(tempo*2.0,2.0)) * 12.0 - 35.0 +\n        float(m >= 4.0  && m < 6.0) * (5.0 + (m-4.0) * 2.0) ;\n    return vec2(sawWave(time, note2freq(note), exp(-0.0*mod(tempo, 0.5))));\n}\n\nvec2 leadSynth(float time, float tempo)\n{\n    float q = floor(mod(tempo*2.0,32.0)); //quaver number\n    float ampMask = float( //rhythm\n        (q > 0.0 && q < 6.0) || \n        (q > 8.0 && q < 17.0) ||\n    \tq == 20.0 || q == 22.0 || q == 23.0);\n    float note = -11.0 + //melody\n        float(q<13.0) * floor(0.9 +  2.1 * (mod(q-1.0,4.0))) + \n        float(q>=13.0 ) * (21.0-q) + \n        float(q==15.0 ) * (-3.0) +\n        float(q>=20.0 ) * (2.0) +\n        float(q==22.0 ) * (6.0);  \n    return vec2(sawWave(time, note2freq(note+0.01), ampMask * exp(-1.0*mod(tempo, 0.5))),\n                sawWave(time, note2freq(note-0.01), ampMask * exp(-1.0*mod(tempo, 0.5))));\n}\n\n\n\nvec2 leadSynthv2(float time, float tempo)\n{\n    float q = floor(mod(tempo*2.0,32.0)); //quaver number\n    float ampMask = float( //rhythm\n        (q > 0.0 && q < 12.0) || \n        (q > 16.0 && q < 34.0) ||\n    \tq == 40.0 || q == 44.0 || q == 46.0);\n    float note = -11.0 + //melody\n        float(q<26.0) * floor(0.9 +  2.1 * (mod(q-1.0,4.0))) + \n        float(q>=26.0 ) * (21.0-q) + \n        float(q==30.0 ) * (-3.0) +\n        float(q>=40.0 ) * (2.0) +\n        float(q==44.0 ) * (6.0);  \n    return vec2(sawWave(time, note2freq(note+0.01), ampMask * exp(-1.0*mod(tempo, 0.5))),\n                sawWave(time, note2freq(note-0.01), ampMask * exp(-1.0*mod(tempo, 0.5))));\n}\n\n\n\nvec2 kickSynth(float time, float tempo) {\n    const float dist = 3.0;\n    tempo = mod(tempo,1.0); \n    return vec2(clamp(sin(pow((tempo+0.2)*0.0001,-0.5))*exp(-3.0*tempo),-(1.0/dist),(1.0/dist)) * dist);\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 clapSynth(float time, float tempo) \n{\n    float q = floor(mod(tempo*2.0,32.0)); //quaver number;\n    float b = floor(q/8.0);//bar number\n    float qb = mod(q,8.0); //quaver in bar;\n    float ampMask = float((qb >= 2.0 && qb < 4.0) || (qb >= 6.0 && qb < 7.0)\n                         || (b == 3.0 && (qb == 1.0 || qb >= 5.0))); \n    tempo = mod(tempo*4.0 ,2.0);\n    return vec2(rand(vec2(time+1.2,tempo+6.1)) * ampMask * exp(-1.5*tempo),\n                rand(vec2(time+2.1,tempo+1.6)) * ampMask * exp(-1.5*tempo));\n}\n\nvec2 mainSound( in int samp,float time)\n{\n    float t = time;\n    float tempo = t * (bpm/60.0);\n    \n    vec2 bass,lead,kick,clap;\n    \n    \n    \n     if (t<7.5 )   \n    {\t\n    \t bass = bassSynth(t,tempo) * 0.30; //mixing here\n    \t lead = leadSynth(t*1.005,tempo*0.5) * 0.333;\n    \t kick = kickSynth(t,tempo) * 0.333;\n    \t clap = clapSynth(t,tempo) * 0.333;\n    \n    }\n    \n    else if(t>7.5 &&  t <14.0)   \n    {\n        bass = bassSynth(t,tempo) * 0.30; //mixing here\n    \t kick = kickSynth(t,tempo) * 0.333;\n    \t clap = clapSynth(t,tempo) * 0.333;\n         lead= leadSynthv2(t, tempo)*0.444;\n    }\n    else if(t>14.0 && t<20.0)   \n    {\n        bass = bassSynth(t,tempo) * 0.30; //mixing here\n    \t kick = kickSynth(t,tempo) * 0.333;\n    \t clap = clapSynth(t,tempo) * 0.333;\n         lead= leadSynthv2(t*1.2, tempo)*0.333;\n         \n    }\n    else if (t>20.0 &&  t <26.0)   \n     {\t\n         \n          bass = bassSynth(t,tempo) * 0.30; //mixing here\n    \t kick = kickSynth(t,tempo) * 0.333;\n    \t clap = clapSynth(t,tempo) * 0.333;\n         lead= leadSynthv2(t, tempo)*0.444;\n         \n         \n         \n         tempo = t * (bpm/(50.0+5.0*sin(t)) );\n     \t bass = bassSynth(t,tempo) * 0.1; //mixing here\n    \t kick = kickSynth(t,tempo) * 0.1;\n    \t clap = clapSynth(t,tempo) * 0.1;\n\t}\n    \n    //original\n    else if(t>26.0 && t<32.0)   \n    {\n        bass = bassSynth(t,tempo) * 0.30; //mixing here\n    \t lead = leadSynth(t*1.005,tempo) * 0.333;\n    \t kick = kickSynth(t,tempo) * 0.333;\n    \t clap = clapSynth(t,tempo) * 0.333;\n         \n    }\n    \n     else if(t>30.0 && t <40.0 )   \n    {\n    \t lead = leadSynth(t*1.005,tempo) * 0.333;\n    \t clap = clapSynth(t,tempo) * 0.333;\n         \n    }\n    \n    else if(t>40.0 && t <50.0 )   \n    {\n         bass = bassSynth(t,tempo) * 0.30; //mixing here\n    \t kick = kickSynth(t,tempo) * 0.333;\n    \t clap = clapSynth(t,tempo) * 0.333;\n         \n    }\n    \n    else if (t>50.0 )   \n     {\t\n         \n          bass = bassSynth(t,tempo) * 0.30; //mixing here\n    \t \n    \t kick = kickSynth(t,tempo) * 0.333;\n    \t clap = clapSynth(t,tempo) * 0.333;\n         lead= leadSynthv2(t, tempo)*0.333;\n       }   \n         \n    \n    \n    vec2 synths = bass + lead; //sidechain\n    synths *= min(mod(tempo,1.0)+0.4,1.0);\n    \n    return synths + kick + clap;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}