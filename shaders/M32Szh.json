{
    "Shader": {
        "info": {
            "date": "1710274247",
            "description": "Idea inspired from https://www.youtube.com/watch?v=TdTMeNXCnTs\n\nThe main difference with this is it allows fractional values.\n\nAfter accumulating enough, the image is only visible in motion. When paused it disappears.",
            "flags": 32,
            "hasliked": 0,
            "id": "M32Szh",
            "likes": 1,
            "name": "\"Weird POV Effect\" example",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "Hatchling",
            "viewed": 173
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float phase = texture(iChannel0, uv).r * 3.14159 * 2.0;\n\n    // Output to screen\n    fragColor = vec4(sin(phase) * 0.5 + 0.5);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv).rrrr;\n    fragColor += texture(iChannel1, uv).rrrr;\n    fragColor -= floor(fragColor);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 offs = vec2(1)/iResolution.xy;\n    float t = texture(iChannel0, uv + offs * vec2(0,1)).r;\n    float b = texture(iChannel0, uv + offs * vec2(0,-1)).r;\n    float r = texture(iChannel0, uv + offs * vec2(1,0)).r;\n    float l = texture(iChannel0, uv + offs * vec2(-1,0)).r;\n    \n    vec2 diff = vec2(t-b, r-l);\n    \n    fragColor = vec4(length(diff));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}