{
    "Shader": {
        "info": {
            "date": "1718907807",
            "description": "a volumetric raymarcher!",
            "flags": 0,
            "hasliked": 0,
            "id": "X3cSD8",
            "likes": 17,
            "name": "Volume Shading",
            "published": 3,
            "tags": [
                "raymarching",
                "volume",
                "sphere",
                "shading",
                "volumetric",
                "transparent",
                "density"
            ],
            "usePreview": 0,
            "username": "SONENEIS",
            "viewed": 174
        },
        "renderpass": [
            {
                "code": "#define rot(a) mat2(cos(a + vec4(0,33,11,0)))\n#define sat(x) clamp(x,0.0,1.0)\n\nfloat sdBox(vec3 p,vec3 b){\n\tvec3 q = abs(p) - b;\n\treturn length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat scene(vec3 p){\n    float t = iTime * 0.5;\n    return min(max(sdBox(p,vec3(0.5)),-sdBox(p-0.5,vec3(0.5))),length(p-vec3(sin(t),cos(t),sin(t)))-0.25);\n}\n\nvoid mainImage(out vec4 fragColor,vec2 fragCoord){\n\tvec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n\tvec3 col = vec3(0.0);\n\n\tvec3 ro = vec3(0,1.5,3);\n\tvec3 rd = normalize(vec3(uv,-1.0));\n\trd.yz *= rot(-0.5);\n\tro.xz *= rot(iTime*0.5);\n\trd.xz *= rot(iTime*0.5);\n\n\tvec3 bg = vec3(rd.y*0.2+0.2);\n    bg = pow(bg,vec3(2.2));\n    \n\tfloat t = 0.0;\n\tvec4 v = vec4(vec3(0),1);\n\tfloat dens = 2.0;\n\tfloat rad = 30.0;\n\tfor(int i=0;i<256;i++){\n\t\tvec3 p = ro + rd * t;\n\t\tfloat h = scene(p);\n\t\tif(h < 0.002){\n\t\t\tvec3 lpos = p;\n\t\t\tfloat sha = 0.0;\n\n\t\t\tfor(int j=0;j<16;j++){\n\t\t\t\tlpos += normalize(vec3(1,3,2))/rad;\n\t\t\t\tsha += scene(lpos)*rad*0.002;\n\t\t\t}\n\n\t\t\tv.a *= 0.99;\n\t\t\tv.rgb += vec3(0.5,0.03,0.2)*sat(sat(sha)*v.a*0.04+0.00008);\n\t\t\tt += 0.01/dens;\n\t\t}else t += h;\n\t\tif(t > 100.0 || v.a < 0.01) break;\n\t}\n\tcol += bg*v.a + v.rgb;\n    \n    col = pow(col,vec3(1.0/2.2));\n    \n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}