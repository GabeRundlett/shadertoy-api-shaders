{
    "Shader": {
        "info": {
            "date": "1622609728",
            "description": "show a simple flag",
            "flags": 0,
            "hasliked": 0,
            "id": "sll3Rj",
            "likes": 1,
            "name": "flag 1",
            "published": 3,
            "tags": [
                "2d",
                "flag"
            ],
            "usePreview": 0,
            "username": "sean1998",
            "viewed": 278
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926;\n\nfloat plot(vec2 uv, float f, float offset, bool flag){\n   f *= 2.0;\n   float y = mix(0.0, 1.0, uv.y);\n   return smoothstep(flag ? 0.02 : -0.02, 0.0, y - 0.1*sin(iTime+f) - offset);\n}\n\n\nvec3 getcolor(vec2 uv, float y, float offset, vec3 c1, vec3 c2, bool flag){\n    y *= PI;\n    float f = plot(uv, y, offset, flag);\n    \n    return mix(c1, c2, f);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 color1 = getcolor(uv, uv.x, 0.8, vec3(1,0,0),  vec3(0,0,0), false);\n    vec3 color2 = getcolor(uv, uv.x, 0.6, vec3(-1,1,0), vec3(0,0,0), false);\n    vec3 color3 = getcolor(uv, uv.x, 0.4, vec3(0,-1,1), vec3(0,0,0), false);\n    vec3 color4 = getcolor(uv, uv.x, 0.2, vec3(0,0,-1), vec3(0,0,0), false);\n\n    // Output to screen\n    fragColor = vec4(color1 + color2 + color3 + color4, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}