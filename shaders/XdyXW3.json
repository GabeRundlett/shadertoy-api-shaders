{
    "Shader": {
        "info": {
            "date": "1466872751",
            "description": "Shiny Waves by etd\n\nLicense Creative Commons Zero\n\nhttps://www.shadertoy.com/view/XdyXW3\n\nWave idea from http://glslsandbox.com/e#33565.1\n\nSee a variation by cubby208 https://www.shadertoy.com/view/lsKSDt\n",
            "flags": 0,
            "hasliked": 0,
            "id": "XdyXW3",
            "likes": 19,
            "name": "Shiny waves b",
            "published": 3,
            "tags": [
                "2d",
                "waves"
            ],
            "usePreview": 0,
            "username": "gambhiro",
            "viewed": 921
        },
        "renderpass": [
            {
                "code": "/* Shiny Waves by etd\n\n   License Creative Commons Zero\n\n   https://www.shadertoy.com/view/XdyXW3\n\n   Wave idea from http://glslsandbox.com/e#33565.1\n*/\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define global_speed 0.5\n\nvec4 wave (vec4 w_base, vec2 res, float time, float x_offset, float y_offset, float x_amp, float y_amp, float speed) {\n  vec2 p = ( gl_FragCoord.xy / (res.xy*4.) ) - vec2(0.25, 0.02) + y_offset;\n\n  float sx = y_amp * 0.1 * (p.x*2.0 + 2.15) * sin( x_offset + x_amp * 60. * p.x - time * speed); // varying amplitude sine value along x axis\n\n  float dy = 1. / ( 10. * abs(p.y - sx)); // greater values when y position matches sine value\n\n  vec4 col = vec4(w_base.xyz*dy, w_base.w);\n\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  float time = iTime * global_speed;\n  vec2 res = iResolution.xy;\n\n  // gradients along x and y\n  vec2 p = ( gl_FragCoord.xy / res.xy ) - 0.5; // normalize coordinates to -0.5/+0.5\n  vec4 w_base = vec4(p.x + 0.5, (p.y + 0.5) * 0.8, 0.3, 1.0);\n\n  vec4 w1 = wave(w_base, res, time, 0.0, -0.1, 1.0, 0.9, 3.0);\n  vec4 w2 = wave(w_base, res, time, 5., -0.2, 0.5, 0.5 + sin(time/3.0)*0.4, 1.0);\n  vec4 w3 = wave(w_base, res, time, -5., -0.05, 0.5, 0.5 + sin(time+5.0)*0.3, 3.0);\n\n  vec4 bg = vec4(0., 0., .2, 1.0);\n\n  fragColor = bg + w1 * w2 * w3;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}