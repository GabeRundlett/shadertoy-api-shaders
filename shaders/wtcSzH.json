{
    "Shader": {
        "info": {
            "date": "1580378246",
            "description": "Playing with the simple bricks example from bookofshaders along with antialiasing.",
            "flags": 0,
            "hasliked": 0,
            "id": "wtcSzH",
            "likes": 1,
            "name": "Bricks takeoff",
            "published": 3,
            "tags": [
                "bricks"
            ],
            "usePreview": 0,
            "username": "joynes",
            "viewed": 348
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n  vec2 t = fragCoord/iResolution.y - .5;\n    \n  float x = iTime*.1;\n  float zoom = 10.;\n  float rad = .5*(sin((x-.25)*3.1416*2.)+1.)/2.;\n  rad = -rad*rad;\n  t = mat2(cos(rad), sin(rad), -sin(rad), cos(rad))*t;\n  zoom += 3.*sin((x-.25)*3.1416*2.);\n  t *= zoom;\n  float move = (sin((fract(x)-.5)*3.1416)+1.)/2.+floor(x) + x*.4;\n  t += vec2(move*50., -rad*40.);\n\n  t.x = t.x + mod(floor(t.y), 2.);\n  float enable = mod(floor(t.x), 2.);\n  t = fract(t)-.5;\n  float r = zoom*1.*1.5/iResolution.y;\n  float w = .45;\n  float c = enable*(smoothstep(w+r, w-r, t.x) * smoothstep(w+r, w-r, abs(t.y)));\n  c += (1. - enable)*(smoothstep(-w-r, -w+r, t.x) * smoothstep(w+r, w-r, abs(t.y)));\n  vec3 col = mix(vec3(.4), vec3(.81, .45, .33), c);\n  fragColor = vec4(col, 1.);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}