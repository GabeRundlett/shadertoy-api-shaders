{
    "Shader": {
        "info": {
            "date": "1502821591",
            "description": "experiment",
            "flags": 0,
            "hasliked": 0,
            "id": "4sjfDt",
            "likes": 2,
            "name": "Curvature x(Some super effect)",
            "published": 3,
            "tags": [
                "effect"
            ],
            "usePreview": 0,
            "username": "rizvanner",
            "viewed": 596
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float color = 0.5;\n    \n    //\n    vec2 leftSamplePosition = vec2(fragCoord.x - 1.0, fragCoord.y) / iResolution.xy;\n    vec3 leftSample = texture(iChannel0, leftSamplePosition).rgb;\n        \n    vec2 leftTopSamplePosition = vec2(fragCoord.x - 1.0, fragCoord.y + 1.0) / iResolution.xy;\n    vec3 leftTopSample = texture(iChannel0, leftTopSamplePosition).rgb;\n    \n    vec2 leftBottomSamplePosition = vec2(fragCoord.x - 1.0, fragCoord.y - 1.0) / iResolution.xy;\n    vec3 leftBottomSample = texture(iChannel0, leftBottomSamplePosition).rgb;\n    ///\n    \n    \n    //\n    vec2 middleTopSamplePosition = vec2(fragCoord.x, fragCoord.y -1.0) / iResolution.xy;\n    vec3 middleTopSample = texture(iChannel0, middleTopSamplePosition).rgb;\n    \n    vec2 middleSamplePosition = vec2(fragCoord.x, fragCoord.y) / iResolution.xy;\n    vec3 middleSample = texture(iChannel0, middleTopSamplePosition).rgb;\n    \n    vec2 middleBottomSamplePosition = vec2(fragCoord.x, fragCoord.y + 1.0) / iResolution.xy;\n    vec3 middleBottomSample = texture(iChannel0, middleBottomSamplePosition).rgb;\n    ///\n    \n    \n    //\n    vec2 rightSamplePosition = vec2(fragCoord.x + 1.0, fragCoord.y) / iResolution.xy;\n    vec3 rightSample = texture(iChannel0, rightSamplePosition).rgb;\n    \n    vec2 rightTopSamplePosition = vec2(fragCoord.x + 1.0, fragCoord.y + 1.0) / iResolution.xy;\n    vec3 rightTopSample = texture(iChannel0, rightTopSamplePosition).rgb;\n    \n    vec2 rightBottomSamplePosition = vec2(fragCoord.x + 1.0, fragCoord.y - 1.0) / iResolution.xy;\n    vec3 rightBottomSample = texture(iChannel0, rightBottomSamplePosition).rgb;\n    ///\n    \n    //\n    float sumOfWhite = 0.0;\n    \n    if(leftSample.r < 0.5) sumOfWhite += 1.0;\n    if(leftTopSample.r < 0.5) sumOfWhite += 1.0;\n    if(leftBottomSample.r < 0.5) sumOfWhite += 1.0;\n    \n    if(rightSample.r < 0.5) sumOfWhite += 1.0;\n    if(rightTopSample.r < 0.5) sumOfWhite += 1.0;\n    if(rightBottomSample.r < 0.5) sumOfWhite += 1.0;\n    \n    if(middleTopSample.r < 0.5) sumOfWhite += 1.0;\n    if(middleBottomSample.r < 0.5) sumOfWhite += 1.0;\n    \n    color += (sumOfWhite / 8.0);\n    ///\n    \n    //\n    float sumOfBlack = 0.0;\n    float someValue = /*0.5*/ middleSample.r;\n    \n    if(leftSample.r > someValue) sumOfBlack += 1.0;\n    if(leftTopSample.r > someValue) sumOfBlack += 1.0;\n    if(leftBottomSample.r > someValue) sumOfBlack += 1.0;\n    \n    if(rightSample.r > someValue) sumOfBlack += 1.0;\n    if(rightTopSample.r > someValue) sumOfBlack += 1.0;\n    if(rightBottomSample.r > someValue) sumOfBlack += 1.0;\n    \n    if(middleTopSample.r > someValue) sumOfBlack += 1.0;\n    if(middleBottomSample.r > someValue) sumOfBlack += 1.0;\n    \n    color -= (sumOfBlack / 8.0);\n    ///\n    \n\tfragColor = vec4(vec3(color),1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 48,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}