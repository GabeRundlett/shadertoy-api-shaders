{
    "Shader": {
        "info": {
            "date": "1698944834",
            "description": "mouse controls camera. \n",
            "flags": 0,
            "hasliked": 0,
            "id": "mlcyzN",
            "likes": 17,
            "name": "peaky dodecahedron",
            "published": 3,
            "tags": [
                "raymarching",
                "sdf",
                "short",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 264
        },
        "renderpass": [
            {
                "code": "#define rot(a)    mat2(cos(a+vec4(0,33,11,0)))                // rotation\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t=9.,a,l, P = .628; // pi/5\n    vec3  R = iResolution, \n          D = normalize( 2.*vec3(U, -R.y) - R ),              // ray direction\n          p = vec3(0,0,12), q,                                // marching point along ray \n          C = iMouse.z > 0. ? 8.*iMouse.xyz/R -4.             // camera control\n                          : 3.* cos(.3*iTime + vec3(0,11,0)); // demo mode\n    for ( O=vec4(1); O.x > 0. && t > .01; O-=.01 )            // march scene\n        q = p, \n        q.yz *= rot(C.y),                                     // rotations\n        q.xz *= rot(C.x),\n        l = length(q.xy),a = atan(q.y,q.x), q.z<0. ? a += P, q.z = -q.z :a,// top down symetry +rot pi/5     \n        abs(atan(q.z,l)) < 1.\n          ? q.xy = l * cos( mod(a,P*2.)-P + vec2(0,33) ),     // 5-fold symmetry\n            q.xz *= rot(1.12), q                              // tilt 1.12 = pi/2 - pi/5\n          : q = q.yxz,                                        // top-down face\n        t = length(q.xy)+.2*q.z-1.,                           // draw pick\n     // t = min(t, length(q)-2.),                             // uncomment: mine\n     // t = max(t, 2.-length(q)),                             // uncomment: picks alone\n     // t = q.z-2.,                                           // uncomment: shitty dodecahedron :-)\n        p += .4*t*D;                                          // step forward = dist to obj  \n \n    O *= O*O*O*2.;                                            // color scheme\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}