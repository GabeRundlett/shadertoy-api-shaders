{
    "Shader": {
        "info": {
            "date": "1573466143",
            "description": "Golfed version of [url]https://shadertoy.com/view/tsyXRh[/url]\nBase pattern of  \"Hexagonal Interlacing\" [url]https://shadertoy.com/view/llfcWs[/url]\n",
            "flags": 0,
            "hasliked": 0,
            "id": "tsVSR1",
            "likes": 5,
            "name": "Hexagonal Interlacing base - 361",
            "published": 3,
            "tags": [
                "hexagon",
                "pattern",
                "tile",
                "overlay",
                "weave",
                "faux"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 365
        },
        "renderpass": [
            {
                "code": "// even simpler version of https://shadertoy.com/view/tsyXRh\n// Fork of \"Hexagonal Interlacing\" https://shadertoy.com/view/llfcWs\n// isolating the base weaving\n\n// --- 367 chars   -6 by injecting K,D at their only use\n\n#define L(p,d)  length( p* mat2(cos( (ceil( atan(p.y,p.x) /2.094 +d ) - .5-d)  *2.094 + vec4(0,4.71,1.57,0))) -vec2(1,0))\nvoid mainImage(out vec4 O, vec2 u) {\n\tvec2 R = iResolution.xy,\n         p = 5.* (u -R*.5) / R.y,\n         s = vec2( 3, 1.73 ),\n         T = ceil( p/s - .5 ),\n         F = ceil( p/s - 1. ) + .5,\n         a = p - T *s,\n         b = p - F *s,\n         K = dot(a,a) > dot(b,b) ? a = b , F : T,\n         D = vec2( L(a,0.), L(a,.5 ) ) -.666,\n         M = clamp( D*R.y*.1, 0.,1.);\n    O += mix( M.y*.5, M.x, fract(1e5*length(K)) > .5 ? M.x : 1.-M.y );\n}/*\n\n\n\n\n// --- 399 chars \n\n#define L(p,d)  length( p*r( (ceil( atan(p.y,p.x) /2.094 +d ) - .5-d)  *2.094)-vec2(1,0)) - .666\n#define r(a)    mat2(cos(a), sin(a), -sin(a), cos(a))\nvoid mainImage( out vec4 O, vec2 u ){\n\n\tvec2 R = iResolution.xy,\n         p = 5.* (u -R*.5) / R.y,\n         s = vec2( 3, 1.73 ),\n         T = ceil( p/s - .5 ),\n         F = ceil( p/s - 1. ) + .5,\n         a = p - T *s, \n         b = p - F *s,\n         K = dot(a,a) > dot(b,b) ? a = b , F : T,\n         D = vec2( L(a,0.), L(a,.5 ) ), \n         M = clamp( D*R.y*.1, 0.,1.); \n    O += mix( M.y*.5, M.x, fract(1e5*length(K)) > .5 ? M.x : 1.-M.y );\n}  /*\n\n\n\n\n// --- 508 chars \n\nvec2  s = vec2( 3, 1.732 );\nfloat t = 6.283/3.;\n#define rnd(p)    fract(sin(dot(p, vec2(411.3, 2899.7)))*43758.5453)\n#define rot(a)    mat2(cos(a), sin(a), -sin(a), cos(a))\n#define mask(p,d) length( p*rot( (ceil( atan(p.y,p.x) /t +d ) - .5-d)  *t)-vec2(1,0)) - .666\n\n\nvoid mainImage( out vec4 O, vec2 u ){\n\n\tvec2 R = iResolution.xy,\n         p = 5.* (u -R*.5)/R.y,\n         T = ceil( p/s - .5 ),\n         F = ceil( p/s - vec2(1./s.y +.5, 1) ),\n         a = p -  T *s, \n         b = p - (F + .5) *s,\n         K = dot(a,a) > dot(b,b) ? a = b , F+.5 : T,\n         D = vec2( mask(a,0.), mask(a,.5 ) ), \n         M = smoothstep(-5./R.y,5./R.y, D); \n    O -= O;\n    O += mix( M.y*.5, M.x, rnd(K) > .5 ? M.x : 1.-M.y );\n}\n\n\n\n\n// original version: 689 chars  \n// https://shadertoy.com/view/tsyXRh\n\n/**/\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}