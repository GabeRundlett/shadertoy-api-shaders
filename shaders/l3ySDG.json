{
    "Shader": {
        "info": {
            "date": "1720424053",
            "description": "from the archives of UFO files",
            "flags": 0,
            "hasliked": 0,
            "id": "l3ySDG",
            "likes": 3,
            "name": "alien factory",
            "published": 3,
            "tags": [
                "raymarch",
                "4d"
            ],
            "usePreview": 0,
            "username": "orblivius",
            "viewed": 93
        },
        "renderpass": [
            {
                "code": "// Fork of \"stellated\" by pb. https://shadertoy.com/view/XXVXzd\n// 2024-07-08 07:32:08\n\n#define rot(x) mat2(cos(x+vec4(0,11,33,0)))\n\n//Rodrigues-Euler axis angle rotation\n#define ROT(p,axis,t) mix(axis*dot(p,axis),p,cos(t))+sin(t)*cross(p,axis)\n\n//formula for creating colors;\n#define H(h)  (  cos(  h + vec3(60,10,2)   )*.6 + .5 )\n\n#define H2(h)  (  cos(  h*h/2. + vec3(10,17,2)   )*.7 + .2 )\n\n//formula for mapping scale factor \n#define M(c)  log(1.+c)\n\n#define R iResolution\n\n\nvec3 hueShift(vec3 col, float shift){\n    vec3 m = vec3(cos(shift), -sin(shift) * .57735, 0);\n    m = vec3(m.xy, -m.y) + (1. - m.x) * .33333;\n    return mat3(m, m.zxy, m.yzx) * col;\n}\n\nvec3 aces(vec3 x) {\n    return clamp((x * (2.51 * x + 0.03)) / (x * (2.43 * x + 0.59) + 0.14), 0.0, 1.0);\n}\nvoid mainImage( out vec4 O, vec2 U) {\n  \n    O = vec4(0);\n    float snd = texture(iChannel0, vec2(U.x,0.25)).r;\n   \n    vec3 c=vec3(0);\n    vec4 rd = normalize( vec4(U-.5*R.xy, R.y, R.y*2.))*100.;\n    \n    float sc,dotp,totdist=0., tt=iTime, t=0.;\n    \n    for (float i=0.; i<100.; i++) {\n         \n    \n        vec4 p = vec4( rd*totdist);\n            \n        float dd = 0.;\n        vec4 id = round(p/dd);\n       // p += dd*id;\n        \n        p.xyz += vec3(0,0,-20.);\n        \n        p.xz *= rot(tt*.4);\n           \n        p.yzw = ROT(p.xyz, normalize( vec3(sin(t/2.*.4), cos(t/3.*.4), 0. )  ),t*.4);\n\n        sc = .8+8.*snd; \n        \n        p.zw *= rot(tt*.4);\n  \n        \n        vec4 w = p;\n        \n        for (float j=0.; j<8.; j++) {\n          \n            p = abs(p)*.95;\n       \n            float lp = length(p);\n            \n            dotp = max(min((1.1/dot(w,w)),20.),.1);\n            sc *= dotp; \n            \n            p =  p * dotp * dotp - .39;\n         \n            w = 1.13*log(1.25+p)   ;\n            \n     \n        }\n         \n        float dist = abs( length(p)-.1)/sc ;  //funky distance estimate\n        float stepsize = dist/(100.);     \n        totdist += stepsize;              //move the distance along rd\n        \n        //accumulate color, fading with distance and iteration count\n        c +=\n             //7e-3* H2(  atan( p.w, p.z )) + \n             + mix( vec3(1), H(M(sc*totdist/2.)),.95) *.1*  exp(-i*i*stepsize*stepsize*1e1);\n       \n   }\n   \n    c = 1. - exp(-c*c);\n     c = aces(hueShift(c, iTime*.1+snd*.5));\n\n    \n    O = ( vec4(c,1) );\n               \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 18,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}