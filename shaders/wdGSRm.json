{
    "Shader": {
        "info": {
            "date": "1573626654",
            "description": "Yep...",
            "flags": 32,
            "hasliked": 0,
            "id": "wdGSRm",
            "likes": 8,
            "name": "Symmetric Synchronicity",
            "published": 3,
            "tags": [
                "2d",
                "trippy"
            ],
            "usePreview": 0,
            "username": "scry",
            "viewed": 542
        },
        "renderpass": [
            {
                "code": "#define T(s) texture(iChannel0, ((tv-0.5)*s)+0.5).rgb\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 tv = uv;\n    /*uv -= 0.5;\n    uv *= .8;\n    uv += 0.5;*/\n    //vec3 col = texture(iChannel0,uv).ggg;\n    vec3 col = T(1.);\n    //col *= 4.;\n    //col.g += iTime;\n    col = vec3(sin(iTime*0.37)*col.g,(sin((iTime+0.45)*0.3)*0.5+0.5)*col.g,(sin(col.g+iTime*0.12)*0.5+0.5)*col.g);\n\n    //col.b += sin(col.g+0.5);\n    //uv = fragCoord/iResolution.xy;\n\tcol *= 5.;\n    col -= 1.25;\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define time ((iTime+2948.)*0.1)\n\n//uniform sampler2D backbuffer;\n#define T(x,y) texture(iChannel0, tv+vec2(x,y)).rgb\nmat2 r2d(float a) {\n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\nfloat circle(vec2 p, float s) {\n    if (length(p) < s) {\n        return 1.;\n    }else {\n        return 0.;\n    }\n}\n//https://www.shadertoy.com/view/ttBXRG\nfloat staircase( in float x, in float k )\n{\n    float i = floor(x);\n    float f = fract(x);\n    \n    float a = 0.5*pow(2.0*((f<0.5)?f:1.0-f), k);\n    f = (f<0.5)?a:1.0-a;\n    \n    return i+f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy;\n\tvec2 tv = fragCoord.xy/R.xy;\n\tfloat mx = max(R.x, R.y);\n    vec2 px = vec2(1./R.x,1./R.y);\n\tvec2 uv = -1. + 2. * tv;\n    //uv *= 0.1;\n    //tv *= r2d(0.01);\n\tvec2 fc = fragCoord.xy;\n    vec2 nuv = (fc-0.5*R.xy)/R.y;\n    nuv *= R.y;\n    nuv /= 200.;\n    //nuv *= 700./mx;\n    float fdeg = (3.14159/180.)*45.;\n    //nuv *= r2d(fdeg);\n    float k = pow( 2.0, 4.0*sin(3.1415927*0.5));\n    //nuv *= r2d(staircase(iTime*1., k)*fdeg);\n \tvec3 col = vec3(0.);\n \tvec2 gv = fract(tv*2.);\n \tfloat steps = 32.;\n    col.r = steps/1e11;\n    //nuv += 59.7;\n    float t= (time+100.)*0.1;//(pointers[0].y/resolution.y);\n    //uv *= mx;\n    //uv *= 20.01;\n    \n    for (float i=1.; i<steps; i++) {\n        float it = mod((i*2.)-t,steps)-(sin(time*0.02)*0.5+0.5)*((steps-1.)/2.);\n        vec2 p = fract(nuv*it*it);\n        p = p-0.5;\n        //col.r *= (length(uv*0.05)+0.5)+(circle(p,cos(iTime*50.)*1.5*(length(uv*sin(iTime*50.))))*(2./steps)*steps*0.5);\n        //p = p-fract((nuv*20.2)*((i*sin(time*0.5)*0.1)+time*0.1));\n        col.r *= (length(uv*0.05)+0.5)+(circle(p,0.47)*(2./steps)*steps*0.5);\n        //col.r *= m;\n    }\n    col.r *= 1e6;\n    col.r -= 0.01;\n\t\n\n\n\n    vec3 bak = T(0.,0.);\n    vec3 c = bak;\n\n    tv -= 0.5;\n    tv *= 0.999+((c.r+c.b+c.g)/3.)*0.0025;\n    float tl = length(tv);\n\n    tv += 0.5;\n\tvec3 u = T(0.,px.y);\n    vec3 d = T(0.,-px.y);\n    vec3 l = T(px.x,0.);\n    vec3 r = T(-px.x,0.);\n\n    float s = (u.g+d.g+l.g+r.g)/4.;\n    s *= 10.;\n    px += s;\n\tu = T(0.,px.y);\n    d = T(0.,-px.y);\n    l = T(px.x,0.);\n    r = T(-px.x,0.);\n    s *= 0.1;\n\n    if (length(tv-0.5) < 0.0025) {\n        col.g += 1.;\n    }\n\n    if (s*10. > 0.0001 && col.r < 1e-8) {\n        col.g += s+0.05*(sin(time*0.85)*0.5+0.6)*(1.-tl)*1.;\n    }\n    if (col.g < 0.123) {\n    \tcol.g *= 8.*s;\n    }\n   \n\tcol += vec3(0.01);\n\tfragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}