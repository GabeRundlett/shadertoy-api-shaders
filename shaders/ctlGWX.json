{
    "Shader": {
        "info": {
            "date": "1672555045",
            "description": "Happy new year!!!",
            "flags": 0,
            "hasliked": 0,
            "id": "ctlGWX",
            "likes": 28,
            "name": "HappyNewYear2023",
            "published": 3,
            "tags": [
                "graphicdesign",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 2341
        },
        "renderpass": [
            {
                "code": "#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define B(p,s) max(abs(p).x-s.x,abs(p).y-s.y)\n#define Tri(p,s,a) max(-dot(p,vec2(cos(-a),sin(-a))),max(dot(p,vec2(cos(a),sin(a))),max(abs(p).x-s.x,abs(p).y-s.y)))\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n#define FS 0.1 // font size\n#define FGS FS/5. // font grid size\n\n// thx iq! https://iquilezles.org/articles/distfunctions/\nfloat opSmoothUnion( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\n\nfloat SimpleVesicaDistanceY(vec2 p, float r, float d) {\n    p.x = abs(p.x);\n    p.x+=d;\n    return length(p)-r;\n}\n\nfloat dSlopeLines(vec2 p){\n    float lineSize = 200.;\n    float d = tan((mix(p.x,p.y,0.5)+(-iTime*5./lineSize))*lineSize)*lineSize;\n    return d;\n}\n\nfloat dDots(vec2 p, float s, float dist, float speed){\n    p-=iTime*speed;\n    p = mod(p,dist)-(dist*0.5);\n    float d = length(p)-s;\n    return d;\n}\n\nfloat roundBar(vec2 p, vec2 s){\n    float d = B(p,vec2(s));\n    p.x = abs(p.x)-s.x;\n    float d2 = length(p)-s.y;\n    return min(d,d2);\n}\n\nfloat char2(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(FGS*2.,FGS*4.),vec2(FGS*3.,FGS));\n    \n    float d2 = B(p-vec2(FGS*4.,FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    d2 = B(p-vec2(FGS*2.,0.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    \n    d2 = B(p-vec2(0.,-FGS*4.),vec2(FS,FGS));\n    d = min(d,d2);\n    \n    p-=vec2(-FGS*2.,FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p = prevP;\n    p-=vec2(-FGS*2.,-FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);    \n    \n    return d;\n}\n\nfloat char3(vec2 p) {\n    vec2 prevP = p;\n    \n    p.y = abs(p.y);\n    float d = B(p-vec2(0.,FGS*4.),vec2(FS,FGS));\n    \n    p = prevP;\n    p.x = abs(p.x);\n    float d2 = B(p-vec2(FGS*4.,-FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = B(p-vec2(FGS*2.,0.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    \n\n    p-=vec2(FGS*2.,FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);   \n\n    return d;\n}\n\nfloat char0(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(-FGS*4.,0.),vec2(FGS,FS));\n    \n    float d2 = B(p-vec2(-FGS*2.,FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n\n    d2 = B(p-vec2(0.0,-FGS*4.),vec2(FS,FGS));\n    d = min(d,d2);\n    \n    p-=vec2(FGS*2.,FGS*2.);\n    p*=Rot(radians(-45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p =prevP;  \n    d2 = B(p-vec2(FGS*4.,-FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat bonsaiLeafBase(vec2 p){\n    vec2 prevP = p;\n    float d = length(p)-0.06;\n    p.x = abs(p.x)-0.06;\n    p.y+=0.02;\n    float d2 = length(p)-0.06;\n    d = min(d,d2);\n    p = prevP;\n    p.x = abs(p.x)-0.1;\n    p.y+=0.05;\n    d2 = length(p)-0.06;\n    d = min(d,d2);\n    p = prevP;\n    p.y+=0.05;\n    d2 = length(p)-0.06;\n    d = min(d,d2);\n    return d;\n}\n\nfloat bonsaiLeaf(vec2 p, float dir){\n    vec2 prevP = p;\n    float d = abs(bonsaiLeafBase(p))-0.002;\n    float dots = dDots(p,0.001,0.02,0.01);\n    dots = max(dots,bonsaiLeafBase(p));\n    d = min(d,dots);\n    \n    p.y+=0.0985;\n    p*=Rot(radians(20.*iTime*dir));\n    \n    p = DF(p,4.0);\n    \n    p -= vec2(0.045);\n    \n    p*=Rot(radians(45.));\n    p.y*=0.4;\n    float d2 = abs(SimpleVesicaDistanceY(p,0.017,0.012))-0.001;\n    \n    p = prevP;\n    d2 = max(bonsaiLeafBase(p),d2);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat branches(vec2 p) {\n    vec2 prevP = p;\n    p.y+=0.095;\n    p*=Rot(radians(20.));\n    float d = B(p,vec2(0.045,0.15));\n    p = prevP;\n    p-=vec2(-0.03,0.06);\n    p*=Rot(radians(30.));\n    float d2 = B(p,vec2(0.13,0.04));\n    d = min(d,d2);\n    p = prevP;\n    p-=vec2(-0.065,0.2);\n    p*=Rot(radians(-60.));\n    d2 = B(p,vec2(0.13,0.03));\n    d = min(d,d2);\n    p = prevP;\n    \n    p-=vec2(-0.14,-0.05);\n    p*=Rot(radians(-10.));\n    d2 = B(p,vec2(0.13,0.02));\n    d = min(d,d2);\n\n    p = prevP;\n    p-=vec2(0.2,-0.08);\n    p*=Rot(radians(-15.));\n    d2 = B(p,vec2(0.2,0.02));\n    d = min(d,d2);\n\n    p = prevP;\n    p-=vec2(0.1,0.15);\n    p*=Rot(radians(-20.));\n    d2 = B(p,vec2(0.2,0.02));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat bonsai(vec2 p){\n    p*=1.7;\n    vec2 prevP = p;\n    float d = abs(branches(p))-0.002;\n    float dots = dDots(p,0.0035,0.03,-0.02);\n    dots = max(dots,branches(p));\n    d = min(d,dots);\n    \n    float d2 = bonsaiLeafBase(p-vec2(0.38,0.05));\n    d = max(-d2,d);\n    d2 = bonsaiLeafBase(p-vec2(-0.2,-0.01));\n    d = max(-d2,d);\n    d2 = bonsaiLeafBase(p-vec2(-0.02,0.37));\n    d = max(-d2,d);\n    d2 = bonsaiLeafBase(p-vec2(0.07,0.12));\n    d = max(-d2,d);\n    d2 = bonsaiLeafBase(p-vec2(0.29,0.28));\n    d = max(-d2,d);\n    d2 = bonsaiLeafBase(p-vec2(-0.25,0.2));\n    d = max(-d2,d);  \n    \n    d2 = bonsaiLeaf(p-vec2(0.38,0.05),1.);\n    d = min(d,d2);\n    d2 = bonsaiLeaf(p-vec2(-0.2,-0.01),-1.);\n    d = min(d,d2);\n    d2 = bonsaiLeaf(p-vec2(-0.02,0.37),1.);\n    d = min(d,d2);\n    d2 = bonsaiLeaf(p-vec2(0.07,0.12),-1.);\n    d = min(d,d2);\n    d2 = bonsaiLeaf(p-vec2(0.29,0.28),1.);\n    d = min(d,d2);\n    d2 = bonsaiLeaf(p-vec2(-0.25,0.2),-1.);\n    d = min(d,d2);\n    \n    d = max(-(p.y+0.2),d);\n    \n    d2 = abs(B(p-vec2(0.0,-0.22),vec2(0.17,0.02)))-0.002;\n    d = min(d,d2);\n    d2 = B(p-vec2(0.0,-0.3),vec2(0.2,0.06));\n    float a = radians(-10.);\n    p.x = abs(p.x)-0.18;\n    d2 = max(dot(p,vec2(cos(a),sin(a))),d2);\n    \n    p = prevP;\n    float slope = dSlopeLines(p);\n    slope = max(d2,slope);\n    \n    d = min(d,abs(d2)-0.002);\n    d = min(d,slope);\n    d2 = abs(B(p-vec2(0.0,-0.37),vec2(0.08,0.01)))-0.002;\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat infoGraphic1(vec2 p, float dir, float s){\n    p*=Rot(radians(10.*iTime*dir));\n    p*=s;\n    vec2 prevP = p;\n    float size = 0.05;\n    float d = abs(length(p-vec2(0.0,size))-size)-0.001;\n    float d2 = abs(length(p-vec2(0.0,-size))-size)-0.001;\n    d = min(d,d2);\n    d2 = abs(length(p-vec2(-size,0.0))-size)-0.001;\n    d = min(d,d2);\n    d2 = abs(length(p-vec2(size,0.0))-size)-0.001;\n    d = min(d,d2);\n    return d;\n}\n\nfloat infoGraphic2(vec2 p){\n    float d = roundBar(p-vec2(0.0,0.05),vec2(0.1,0.03));\n    float d2 = roundBar(p-vec2(0.06,-0.05),vec2(0.1,0.03));\n    d = min(d,d2);\n    d2 = B(p-vec2(0.03,0.00),vec2(0.04,0.03));\n    d = opSmoothUnion(d,d2,0.02);\n    return abs(d)-0.001;\n}\n\nfloat infoGraphic3(vec2 p){\n    p*=2.;\n    vec2 prevP = p;\n    p = DF(p,2.);\n    p -= vec2(0.042);\n    p*=Rot(radians(45.));\n    p.y*=0.4;\n    float d = abs(SimpleVesicaDistanceY(p,0.025,0.012))-0.001;\n    \n    p = prevP;\n    p*=Rot(radians(23.));\n    p = DF(p,2.);\n    p -= vec2(0.06);\n    float d2 = length(p)-0.007;\n    \n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat infoGraphic4(vec2 p){\n    vec2 prevP = p;\n    p = DF(p,2.);\n    p -= vec2(0.02);\n    p*=Rot(radians(45.));\n    p.y*=0.9;\n    float d = abs(SimpleVesicaDistanceY(p,0.02,0.015))-0.001;\n    \n    p = prevP;\n    p*=Rot(radians(-20.));\n    p = DF(p,1.25);\n    p -= vec2(0.05);\n    float d2 = abs(length(p)-0.05)-0.001;\n    p = prevP;\n    d2 = max(-(length(p)-0.08),d2);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat eye(vec2 p){\n    p.x = abs(p.x)-0.03;\n    p.y+=0.03;\n    float d = B(p,vec2(0.001,0.01));\n    float d2 = B(p,vec2(0.008,0.001));\n    return min(d,d2);\n}\n\nfloat bunny(vec2 p){\n    vec2 prevP2 = p;\n    p.y-=iTime*0.1;\n    p*=1.5;\n    p.x = mod(p.x,0.16)-0.08;\n    p.y = mod(p.y,0.26)-0.13;\n    p.y+=0.025;\n    vec2 prevP = p;\n    p.x = abs(p.x)-0.04;\n    p.y-=0.05;\n    p*=Rot(radians(10.));\n    float d = SimpleVesicaDistanceY(p,0.2,0.17);\n    p = prevP;\n    p.y*=1.2;\n    float d2 = length(p-vec2(0.,-0.05))-0.07;\n    d = abs(min(d,d2))-0.001;\n    \n    p = prevP;\n    d2 = eye(p);\n    d = min(d,d2);\n    \n    p = prevP2;\n    d = max(-(length(p)-0.5),d);\n    \n    return d;\n}\n\nfloat year(vec2 p){\n    float d = char2(p-vec2(-0.375,0.0));\n    float d2 = char0(p-vec2(-0.125,0.0));\n    d = min(d,d2);\n    d2 = char2(p-vec2(0.125,0.0));\n    d = min(d,d2);\n    d2 = char3(p-vec2(0.375,0.0));\n    d = min(d,d2);\n    return d;\n}\n\nfloat sun(vec2 p){\n    p*=1.6;\n    vec2 prevP = p;\n    float speed = -0.05;\n    float d = length(p)-0.2;\n    p+=iTime*speed;\n    p = mod(p,0.1)-0.05;\n    float d2 = abs(length(p)-0.05)-0.001;\n    p = prevP;\n    \n    p+=iTime*speed;\n    p-=vec2(0.05);\n    p = mod(p,0.1)-0.05;\n    \n    float d3 = abs(length(p)-0.05)-0.001;\n    d2 = min(d2,d3);\n    \n    d2 = min(abs(d)-0.002,d2);\n    \n    d = max(d,d2);\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 prevP = p;\n    \n    vec3 col = vec3(0.);\n    \n    float d =  bunny(p);\n    col = mix(col,vec3(0.7),S(d,0.0));\n    \n    p.x+=iTime*0.1;\n    p.x+=0.3;\n    p.x = mod(p.x,0.6)-0.3;\n    d = infoGraphic2(p-vec2(0.0,0.25));\n    \n    p = prevP;\n    d = max((length(p)-0.38),d);\n    col = mix(col,vec3(1.),S(d,0.0));\n    \n    d = length(p-vec2(-0.2,0.16))-0.125;\n    col = mix(col,vec3(0.),S(d,0.0));\n    d = sun(p-vec2(-0.2,0.16));\n    col = mix(col,vec3(1.),S(d,0.0));\n    d = bonsai(p-vec2(0.02,-0.12));\n    col = mix(col,vec3(1.),S(d,0.0));\n    \n    d = infoGraphic1(p-vec2(0.2,-0.25),1.5,2.2);\n    col = mix(col,vec3(1.),S(d,0.0));\n    \n    d = infoGraphic1(p-vec2(-0.27,-0.19),-1.,2.5);\n    col = mix(col,vec3(1.),S(d,0.0));\n    \n    d = infoGraphic1(p-vec2(-0.15,-0.28),2.,2.);\n    col = mix(col,vec3(1.),S(d,0.0));\n    \n    p*=Rot(radians(-10.*iTime));\n    p = DF(p,4.5);\n    p -= vec2(0.4);\n    p*=Rot(radians(45.));\n    d = infoGraphic3(p-vec2(0.02,-0.12));\n    col = mix(col,vec3(1.),S(d,0.0));\n    \n    p = prevP;\n    d = year(p);\n    col *= mix(col,vec3(0.1),S(d,0.0));\n    col = mix(col,vec3(1.),S(abs(d)-0.001,0.0));\n    \n    fragColor = vec4(sqrt(col),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}