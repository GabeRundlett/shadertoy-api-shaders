{
    "Shader": {
        "info": {
            "date": "1524960750",
            "description": "inspired by https://www.youtube.com/watch?v=oulVwd0WWvw and videos like it",
            "flags": 96,
            "hasliked": 0,
            "id": "XstfDH",
            "likes": 1,
            "name": "██╧n.y",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "music",
                "visualizer"
            ],
            "usePreview": 0,
            "username": "DJDoomz",
            "viewed": 597
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    fragColor = texture(iChannel0,uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "musicstream",
                        "id": 14659,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/kolakid/dark-room"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define PI 3.14159\n\nmat2 rot(float a){\n\tfloat s = sin(a), c = cos(a);\n    return mat2(c,s,-s,c);\n}\n\nvec4 effect0(in vec4 currentimage,in vec2 uv){\n    \n    float l = (length(uv-sin(iTime*6.+vec2(0,.7)+.5)));\n    l = smoothstep(.05,.1,l);\n    \n    uv -= .5;\n    uv *= rot(.004);\n    uv = abs(uv);\n    uv = fract(uv*2.);\n    uv /= 1.99;\n    uv += .5;\n    \n    return l < .3 ? vec4(1) : texture(iChannel0,uv);\n}\n\nvec4 effect1(in vec4 currentimage,in vec2 uv){\n\tuv += .002;\n    uv *= 1.01;\n    uv += .004*sin(iTime*5.+vec2(0,1.14));\n    return currentimage.g < .5 ? texture(iChannel0,uv) : currentimage;\n}\n\nvec4 effect2(in vec4 currentimage,in vec2 uv){\n    uv -= .5;\n    uv*=rot(.01);\n\tfloat z = uv.x+uv.y+.5;\n    uv = (uv/z)/80.+uv;\n    uv += .5;\n    \n    uv = fract(uv);\n    \n    return texture(iChannel0,uv);\n}\n\nvec4 effect3(in vec4 currentimage,in vec2 uv){\n    uv += .001*sin(uv.x*8.+iTime);\n    uv = fract(uv);\n    vec4 im = texture(iChannel0,uv);\n    return fract(im*vec4(1.01,1.005,1.001,1));\n}\n\nvec4 effect4(in vec4 currentimage,in vec2 uv){\n    \n    vec2 ouv = uv;\n    \n    uv.y-=.5;\n    float z = 3.+2.*uv.y+.1*sin(uv.x+iTime*3.);\n    \n    uv/=z;\n    uv*=5.;\n    uv.x+=iTime*.4;\n    uv=fract(uv);\n    \n    \n    return texture(iChannel1,uv);\n}\n\nvec4 effect5(in vec4 currentimage,in vec2 uv){\n    \n    vec2 ouv = uv;\n    \n    uv*=2.5;\n    uv.x-=.3;\n    uv.x+=.1*sin(uv.y+iTime);\n    uv.y-=iTime;\n    uv.y=fract(uv.y);\n    \n    vec4 c1 = uv.x < 1. && uv.x > 0. ? texture(iChannel1,uv) : currentimage;\n    \n    ouv*=5.;\n    ouv*=rot(-ouv.x*.2);\n    ouv.y-=1.5;\n    ouv += sin(iTime*4.+vec2(1.4));\n    ouv.x=fract(ouv.x+iTime*4.);\n    \n    return ouv.y < 1. && ouv.y > 0. ? abs(c1-texture(iChannel1,ouv)) : c1;\n    \n}\n\nvec4 effect6(in vec4 currentimage,in vec2 uv){\n    vec2 ouv = uv;\n    \n    float b = 1.-fract(iTime*60./40.);\n    \n    uv-=.5;\n    float z = abs(uv.y*9.)-1.;\n    uv = vec2(uv.x*5.,9)/z+iTime;\n    vec4 f = vec4(sin(uv.x*32.));\n    f = max(f-1.2*sin(ouv.y*3.+.2),0.);\n    \n    f = min(vec4(1),f+b*currentimage);\n    f = f+.1*texture(iChannel1,ouv);\n    \n    return f;\n}\n\nvec4 effect7(in vec4 currentimage,in vec2 uv){\n    vec2 ouv = uv;\n    uv-=.5;\n    uv*=rot(4.*sin(iTime));\n    uv*=1.02;\n    uv+=.5;\n    vec4 c = texture(iChannel1,uv);\n    return c.g < .7 ? currentimage : c;\n}\n\n//#define TESTING\n\nint randint(int i){\n    return (i<<1)-(i>>2);\n}\n\nvec4 randeffect(in vec2 uv){\n    vec4 currentimage = texture(iChannel0,uv);\n    vec4 effectimage;\n    \n    int t = (int(iTime*120.)/160);\n    \n    #ifdef TESTING\n    effectimage = effect5(currentimage,uv);\n    #else\n    switch(t%8){\n        case 0:\n        \teffectimage = effect0(currentimage,uv);\n            break;\n        case 1:\n        \teffectimage = effect1(currentimage,uv);\n            break;\n        case 2:\n        \teffectimage = effect2(currentimage,uv);\n            break;\n        case 3:\n        \teffectimage = effect3(currentimage,uv);\n            break;\n        case 4:\n        \teffectimage = effect4(currentimage,uv);\n            break;\n        case 5:\n        \teffectimage = effect5(currentimage,uv);\n            break;\n        case 6:\n        \teffectimage = effect6(currentimage,uv);\n            break;\n        case 7:\n        \teffectimage = effect7(currentimage,uv);\n            break;\n    }\n    #endif\n    \n    effectimage = fract(effectimage+vec4(0.001,.003,.005,0));\n    \n\treturn effectimage;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    if(iFrame<=160)\n    {\n        fragColor = vec4(0);\n        for(float i = 0.; i < 15.; i++)\n        \tfragColor += sin(vec4(length(uv-vec2(i,i)/50.)*99.));\n    }\n    else\n    {\n        fragColor = randeffect(uv);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "//samples from buf a every beat\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(int(iTime*60.)%40==0)\n        fragColor = 1.-texture(iChannel0,fragCoord/iResolution.xy);\n    else\n        fragColor = texture(iChannel1,fragCoord/iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buf B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}