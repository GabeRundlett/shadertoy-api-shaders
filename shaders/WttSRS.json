{
    "Shader": {
        "info": {
            "date": "1581199890",
            "description": "Composition using randomly generated functions mapping x, y, and time to color values.",
            "flags": 0,
            "hasliked": 0,
            "id": "WttSRS",
            "likes": 3,
            "name": "fn psych 1",
            "published": 3,
            "tags": [
                "2d",
                "abstract"
            ],
            "usePreview": 0,
            "username": "anttikan",
            "viewed": 293
        },
        "renderpass": [
            {
                "code": "\nfloat pixelfunc1(float x, float y, float iTime) {\n\treturn sin(sin(sin(log(abs(exp((exp((sqrt(pow((sin(iTime/50.0)),2.0)+pow((x),2.0))))-(pow((cos(((log(abs(abs(((sin(iTime/50.0))-((y)*(sin(iTime/50.0))))) - floor(abs(((sin(iTime/50.0))-((y)*(sin(iTime/50.0)))))))+0.0001)*(sin(iTime/50.0)))-(sign(sin(sin(log(abs((sin(iTime/50.0)))+0.0001))))-sign((sqrt(pow(cos((x)),2.0)+pow(exp(sin((y))),2.0)))))))-sqrt(abs((sin(iTime/50.0))))),2.0)/ (abs(abs(log(abs(sin(pow((pow(abs((sqrt(pow(sin((y)),2.0)+pow((0.9740085302659387),2.0)))) - floor(abs((sqrt(pow(sin((y)),2.0)+pow((sin(iTime/50.0)),2.0))))),2.0)/ (abs(sin((x)))+0.0001)),2.0)))+0.0001)) - floor(abs(log(abs(sin(pow((pow(abs((sqrt(pow(sin((y)),2.0)+pow((sin(iTime/50.0)),2.0)))) - floor(abs((sqrt(pow(sin((y)),2.0)+pow((sin(iTime/50.0)),2.0))))),2.0)/ (abs(sin((x)))+0.0001)),2.0)))+0.0001))))+0.0001)))))+0.0001))));\n}\n\nfloat pixelfunc2(float x, float y, float iTime) {\n    return cos(pow(log(abs(sin(((sqrt(pow((y),2.0)+pow((x),2.0)))-(sin(iTime/50.0)))))+0.0001),3.0));\n}\n\n\nfloat pixelfunc4(float x, float y, float iTime) {\n\treturn (pow((sign((abs(log(abs(log(abs(((x)/ (abs(((sqrt(pow(pow(sin(log(abs(sqrt(abs(sin((sin(iTime/3.0))))))+0.0001)),2.0),2.0)+pow(sign(pow(exp(sin(cos((sin(iTime/23.0))))),3.0)),2.0)))*(sin(sin((x)))+log(abs(((sin(iTime/43.0))))+0.0001))))+0.0001)))+0.0001))+0.0001)) - floor(abs(log(abs(log(abs(((x)/ (abs(((sqrt(pow(pow(sin(log(abs(sqrt(abs(sin((sin(iTime/99.0))))))+0.0001)),2.0),2.0)+pow(sign(pow(exp(sin(cos((sin(iTime/50.0))))),3.0)),2.0)))*(sin(sin((x)))+log(abs(((sin(iTime/50.0)) + 0.7777742932635703))+0.0001))))+0.0001)))+0.0001))+0.0001)))*((sqrt(pow((sin(iTime/9.3)),2.0)+pow(pow(exp(sin(cos((x)))),2.0),2.0)))/ (abs(sign((y)))+0.0001))))*(y)),2.0)-cos((((sin(iTime/12.0))+log(abs(log(abs((cos(cos(((sin(log(abs(sin((y)))+0.0001))*pow(pow((pow(sin((x)),2.0)*((sqrt(pow(((sin(iTime/82.0))),2.0)+pow((y),2.0)))+(x))),3.0),2.0))*pow(log(abs((y))+0.0001),2.0))))+abs(pow(log(abs(sin(pow(log(abs(sin((log(abs(((sin(iTime/54.0))))+0.0001)/ (abs(sqrt(abs((x))))+0.0001))))+0.0001),3.0)))+0.0001),3.0)) - floor(abs(pow(log(abs(sin(pow(log(abs(sin((log(abs(((sin(iTime/19.0))))+0.0001)/ (abs(sqrt(abs((x))))+0.0001))))+0.0001),3.0)))+0.0001),3.0)))))+0.0001))+0.0001))+sign(sin((log(abs((y))+0.0001)-(sqrt(abs((sin(iTime/50.0))))-(x))))))));\n}\n\n\n\nfloat pixelfunc3(float x, float y, float iTime) {\n    return cos((((sqrt(pow(sign((abs((sqrt(pow(abs(log(abs(pow(((y)+((sqrt(pow(log(abs((y))+0.0001),2.0)+pow(exp((0.6504765371794483)),2.0)))*(x))),2.0))+0.0001)) - floor(abs(log(abs(pow(((y)+((sqrt(pow(log(abs((y))+0.0001),2.0)+pow(exp((0.04764667859459348)),2.0)))*(x))),2.0))+0.0001))),2.0)+pow(sin((cos((log(abs((sqrt(pow((sqrt(pow((y),2.0)+pow((sin(iTime/50.0)),2.0))),2.0)+pow((sqrt(pow(sin((x)),2.0)+pow(((x)*(0.8673575468060508)),2.0))),2.0))))+0.0001)/ (abs((sin(iTime/50.0)))+0.0001)))-(sqrt(pow(sin(pow((y),3.0)),2.0)+pow(exp(cos(abs(sin((sqrt(pow((0.8322902951206665),2.0)+pow((y),2.0))))) - floor(abs(sin((sqrt(pow((0.3968041457977698),2.0)+pow((y),2.0)))))))),2.0))))),2.0)))) - floor(abs((sqrt(pow(abs(log(abs(pow(((y)+((sqrt(pow(log(abs((y))+0.0001),2.0)+pow(exp((0.8178348996915921)),2.0)))*(x))),2.0))+0.0001)) - floor(abs(log(abs(pow(((y)+((sqrt(pow(log(abs((y))+0.0001),2.0)+pow(exp((0.7066221237987398)),2.0)))*(x))),2.0))+0.0001))),2.0)+pow(sin((cos((log(abs((sqrt(pow((sqrt(pow((y),2.0)+pow((sin(iTime/50.0)),2.0))),2.0)+pow((sqrt(pow(sin((x)),2.0)+pow(((x)*(0.18088153561781883)),2.0))),2.0))))+0.0001)/ (abs((sin(iTime/50.0)))+0.0001)))-(sqrt(pow(sin(pow((y),3.0)),2.0)+pow(exp(cos(abs(sin((sqrt(pow((0.20980616617980674),2.0)+pow((y),2.0))))) - floor(abs(sin((sqrt(pow((0.5199379468707619),2.0)+pow((y),2.0)))))))),2.0))))),2.0)))))/ (abs(exp(pow(sin(cos((y))),2.0)))+0.0001))),2.0)+pow(pow((log(abs(((sin(iTime/50.0))+sqrt(abs(sin((((sin(iTime/50.0))+(pow((((0.645013938513374)/ (abs((sin(iTime/50.0)))+0.0001))*log(abs((y))+0.0001)),2.0)+sin(pow(((sin(iTime/50.0))-(0.67468411323543)),3.0))))-log(abs(pow((y),2.0))+0.0001)))))))+0.0001)-((y)+log(abs((sqrt(pow(log(abs((((((x)/ (abs((log(abs((y))+0.0001)/ (abs(sign((sin(iTime/50.0))))+0.0001)))+0.0001))/ (abs(sqrt(abs((((sin(iTime/50.0))-(x))/ (abs((sqrt(pow((x),2.0)+pow((x),2.0))))+0.0001)))))+0.0001))/ (abs((x))+0.0001))-(0.1765825918759809)))+0.0001),2.0)+pow(abs((sin(iTime/50.0))) - floor(abs((sin(iTime/50.0)))),2.0))))+0.0001))),2.0),2.0)))/ (abs(((x)+exp(sqrt(abs(sin((abs((0.4677294447060407)) - floor(abs((0.5508777906941824)))-(pow((sin(iTime/50.0)),3.0)-log(abs(log(abs((log(abs(sin(sqrt(abs(pow((0.4811068184551617),3.0)))))+0.0001)/ (abs(pow((0.14052102986686088),2.0))+0.0001)))+0.0001))+0.0001)))))))))+0.0001))/ (abs(sqrt(abs(pow(pow(sqrt(abs(sqrt(abs((pow(sin((sqrt(pow((pow(sign(log(abs(((x)+(0.8656798029803934)))+0.0001)),2.0)-abs((x)) - floor(abs((x)))),2.0)+pow(sign(log(abs((0.3391320298928444))+0.0001)),2.0)))),2.0)/ (abs(pow((exp(abs(sign(sign((sqrt(pow(((y)-(y)),2.0)+pow((0.3592247742818151),2.0)))))) - floor(abs(sign(sign((sqrt(pow(((y)-(y)),2.0)+pow((0.7200213323597715),2.0))))))))/ (abs((0.1431772443507151))+0.0001)),3.0))+0.0001)))))),3.0),2.0))))+0.0001)));   \n}\n\nfloat pixelfunc5(float x, float y, float iTime) {\n    return (pow(log(abs((((sin(iTime/50.0))-(((sqrt(pow((0.7035442116208261),2.0)+pow(sign((abs((y)) - floor(abs((y)))*(y))),2.0)))/ (abs(log(abs((0.45474232626833255))+0.0001))+0.0001))+(x)))/ (abs((sin(iTime/50.0)))+0.0001)))+0.0001),3.0)*(y));    \n}\n\n\nfloat pixelfunc6(float x, float y, float iTime) {\n\treturn sign(((x)+sin(pow(pow((cos(pow((pow(sign(pow(pow(exp(abs(pow((sin(iTime/50.0)),3.0)) - floor(abs(pow((sin(iTime/50.0)),3.0)))),3.0),2.0)),3.0)*((y)/ (abs((sin(iTime/50.0)))+0.0001))),3.0))*sign(sin(sign(((x)+sin(sin(log(abs(pow((((0.011494319310108247)+(y))-pow((x),2.0)),2.0))+0.0001)))))))),3.0),2.0))));    \n}\n\n\nfloat pixelfunc7(float x, float y, float iTime) {\n\treturn sign(((x)+sin(pow(pow((cos(pow((pow(sign(pow(pow(exp(abs(pow((0.2551045723848604),3.0)) - floor(abs(pow((0.3151917658637282),3.0)))),3.0),2.0)),3.0)*((y)/ (abs((0.0176144938387357))+0.0001))),3.0))*sign(sin(sign(((x)+sin(sin(log(abs(pow((((0.011494319310108247)+(y))-pow((x),2.0)),2.0))+0.0001)))))))),3.0),2.0))));\n}\n\n\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return clamp(min2 + (value - min1) * (max2 - min2) / (max1 - min1),min2, max2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    float r = pixelfunc1((2.0+sin(iTime*0.32))*(uv.x-0.5) + sin(iTime*0.1), 2.0*(uv.y-0.5), iTime*0.1);\n    float g = pixelfunc2((2.0+sin(iTime*0.2))*(uv.x-0.5) + sin(iTime*0.1), 2.0*(uv.y-0.5), iTime*0.2);\n    float b = pixelfunc3((2.0+sin(iTime*0.1))*(uv.x-0.5) + sin(iTime*0.1), 2.0*(uv.y-0.5), iTime*0.07);\n    //vec3 col = vec3(map(r,-1.0, 1.0, 0.0, 1.0), map((g + r +b)/3.0,-2.0, 2.0, 0.0, 1.0), map(b-r,-2.0, 2.0, 0.0, 1.0));\n    \n    float shade = pixelfunc4(2.0*(uv.x-0.5) + sin(iTime*0.1), (10.0+9.5*sin(iTime*0.1))*(uv.y-0.5), iTime*4.0+22.0);\n    shade = map(-shade,-2.0, 2.0, 0.0, 1.0);\n    \n    float rmapped = map(r,-1.0, 1.0, 0.0, 1.0);\n    float gmapped = map((g + r +b)/3.0,-2.0, 2.0, 0.0, 1.0);\n    float bmapped = map(b-r,-2.0, 2.0, 0.0, 1.0);\n    \n    vec3 col = vec3(0.05*rmapped + 0.15 + 0.8*shade*rmapped, 0.05*bmapped + 0.95*shade*gmapped, 0.2 + 0.8*shade*bmapped);\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}