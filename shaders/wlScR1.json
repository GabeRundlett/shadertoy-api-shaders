{
    "Shader": {
        "info": {
            "date": "1618490128",
            "description": "smooth transition between grids of different scale",
            "flags": 0,
            "hasliked": 0,
            "id": "wlScR1",
            "likes": 4,
            "name": "seamless-grid",
            "published": 3,
            "tags": [
                "grid"
            ],
            "usePreview": 0,
            "username": "xiaosong0911",
            "viewed": 371
        },
        "renderpass": [
            {
                "code": "float board(vec2 uv, float dx, float width, float one_in_pixels) {\n    uv /= dx;\n    uv = 0.5 - abs(uv-floor(uv)-0.5);\n    uv *= dx;\n    float dist = min(uv.x,uv.y);\n    return smoothstep(1.,-1., dist*one_in_pixels-width*0.5);\n}\n\nfloat boardauto(vec2 uv, float one_in_pixels) {\n    float mask = 0.;\n    float dx = exp(2.30258509299*ceil(-log(one_in_pixels)/2.30258509299));\n    float dxpixels = dx*one_in_pixels;\n    float alpha = (dxpixels-1.)/9.;\n    mask = max(mask, board(uv, dx * 1., 1., one_in_pixels) * alpha);\n    mask = max(mask, board(uv, dx * 5., 1.+alpha, one_in_pixels) * alpha);\n    mask = max(mask, board(uv, dx * 10., 1.+alpha*2., one_in_pixels));\n    mask = max(mask, board(uv, dx * 50., 2., one_in_pixels));\n    mask = max(mask, board(uv, dx * 100., 3., one_in_pixels));\n    return mask;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {  \n    vec2 coord = (fragCoord-iResolution.xy*0.5)/iResolution.y;\n    float scale = exp(sin(.1*iTime)*0.5/.1);\n    vec3 col = vec3(1.-boardauto(coord*scale+vec2(1,0), iResolution.y/scale));\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}