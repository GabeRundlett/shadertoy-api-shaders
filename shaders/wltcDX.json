{
    "Shader": {
        "info": {
            "date": "1610081527",
            "description": "This is an animated robot.",
            "flags": 0,
            "hasliked": 0,
            "id": "wltcDX",
            "likes": 5,
            "name": "Animated Robot",
            "published": 3,
            "tags": [
                "2d",
                "beginner",
                "animated",
                "robot"
            ],
            "usePreview": 0,
            "username": "intrakits",
            "viewed": 327
        },
        "renderpass": [
            {
                "code": "mat2 rotate(float r) {\n    float c = cos(r);\n    float s = sin(r);\n    return mat2(c, -s, s, c);\n}\nfloat circle (vec2 uv, float r, float blur){\n    float d = length(uv);\n    return smoothstep(r,r-blur,d);\n}\nfloat DrawSquare (vec2 uv, float width, float height, float posX, float posY, float blur){\n    float w = length((uv.x + posX));\n    float h = length(uv.y + posY);\n    float col = smoothstep(width,width-blur, w);\n    col *= smoothstep(height,height-blur, h);\n    return col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //ray origin\n    vec3 ro = vec3(0.0, 0.0, -3.0);\n    \n    //ray direction\n\tvec3 rd = vec3(uv.x,uv.y, 0)-ro;\n    \n    // Time varying pixel color\n    float width = 0.3;\n    float height = 0.3;\n    float blur = 0.01;\n    float posX = 0.;\n    float posY = -0.;\n    \n    float head = DrawSquare(uv, width, height, posX, posY, blur);\n    head += DrawSquare(uv, width * 0.5, height * 0.15, posX, posY + 0.335, blur);\n    head += DrawSquare(uv, width * 2., height, posX, posY + 0.67, blur);\n    vec3 img = vec3(.8) * head;\n    //outer eyes\n    float Reye = DrawSquare(uv, width * 0.2, height * (sin(iTime)*0.05 +0.15), posX + 0.15, posY-0.1, blur);\n    \n    img -= vec3(1.,1.,1.) * Reye;\n    \n    float Leye = DrawSquare(uv, width * 0.2, height * 0.2, posX - 0.15, posY-0.1, blur);\n    \n    img -= vec3(1.,1.,1.) * Leye;\n    \n    //inner eyes\n    float RIeye = DrawSquare(uv, width * 0.1, height * 0.1, posX + 0.15, posY-0.1, blur);\n    \n    img += vec3(smoothstep(1.,0.9,sin(iTime)),0.,0.) * RIeye;\n    \n    float LIeye = DrawSquare(uv, width * 0.1, height * 0.1, posX - 0.15, posY-0.1, blur);\n    \n    img += vec3(1.,smoothstep(smoothstep(1.,0.9,cos(iTime*5.)),0.9,sin(iTime*5.)),smoothstep(1.,0.9,sin(iTime*5.))) * LIeye;\n    \n    //mouth\n    float mouth = DrawSquare(uv, width * 0.5, height * 0.2, posX, posY+0.15, blur);\n    img -= vec3(1.,1.,1.) * mouth;\n    \n    //mouth inner\n    float mouthI = DrawSquare(uv, width * 0.48, height * (sin(iTime*3.)*0.04+0.14), posX, posY+0.15, blur);\n    img += vec3(0.,1.,1.) * mouthI;\n    \n    //mouth slats\n    float mouthS = DrawSquare(uv, width * 0.05, height * 0.18, posX, posY+0.15, blur);\n    mouthS += DrawSquare(uv, width * 0.05, height * 0.18, posX-.05, posY+0.15, blur);\n    mouthS += DrawSquare(uv, width * 0.05, height * 0.18, posX-.1, posY+0.15, blur);\n    mouthS += DrawSquare(uv, width * 0.05, height * 0.18, posX+.05, posY+0.15, blur);\n    mouthS += DrawSquare(uv, width * 0.05, height * 0.18, posX+.1, posY+0.15, blur);\n    img -= vec3(0.,1.,1.) * mouthS;\n    \n    //nose\n    vec2 rotUV = uv * rotate(iTime);\n    float nose = circle (rotUV, 0.03, blur);\n    nose += DrawSquare(rotUV, width * 0.03, height * 0.09, posX, posY, blur);\n    nose += DrawSquare(rotUV, width * 0.09, height * 0.03, posX, posY, blur);\n    img -= vec3(.5,.5,.5) * nose;\n    \n    //screws\n    float screws = circle (uv - vec2(0.25), 0.03, blur);\n    screws += DrawSquare(uv, width * 0.03, height * 0.09, posX - 0.25, posY - 0.25, blur);\n    screws += DrawSquare(uv, width * 0.09, height * 0.03, posX - 0.25, posY - 0.25, blur);\n    \n    screws += circle (uv - vec2(-0.25), 0.03, blur);\n    screws += DrawSquare(uv, width * 0.03, height * 0.09, posX + 0.25, posY + 0.25, blur);\n    screws += DrawSquare(uv, width * 0.09, height * 0.03, posX + 0.25, posY + 0.25, blur);\n    \n    screws += circle (uv - vec2(-0.25, 0.25), 0.03, blur);\n    screws += DrawSquare(uv, width * 0.03, height * 0.09, posX + 0.25, posY - 0.25, blur);\n    screws += DrawSquare(uv, width * 0.09, height * 0.03, posX + 0.25, posY - 0.25, blur);\n    \n    screws += circle (uv - vec2(0.25, -0.25), 0.03, blur);\n    screws += DrawSquare(uv, width * 0.03, height * 0.09, posX - 0.25, posY + 0.25, blur);\n    screws += DrawSquare(uv, width * 0.09, height * 0.03, posX - 0.25, posY + 0.25, blur);\n    img -= vec3(.5,.5,.5) * screws;\n    // Output to screen\n    fragColor = vec4(img,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}