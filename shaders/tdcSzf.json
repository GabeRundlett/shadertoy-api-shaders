{
    "Shader": {
        "info": {
            "date": "1572557506",
            "description": "Gotta catch 'em all",
            "flags": 0,
            "hasliked": 0,
            "id": "tdcSzf",
            "likes": 4,
            "name": "Shadertober 30 - Catch",
            "published": 3,
            "tags": [
                "inktober",
                "shadertober",
                "backwardscaptain",
                "catch"
            ],
            "usePreview": 0,
            "username": "BackwardsCap",
            "viewed": 322
        },
        "renderpass": [
            {
                "code": "float o, g;\nvec2 map(vec3 p)\n{\n    float r,m;\n    vec3 pp = p+=vec3(0,1,0);\n    pp.xy*=rot(cos(iTime*5.)*sin(iTime)/4.);\n    pp-=vec3(0,1.,0);\n    p=pp;\n    vec3 cp = p;\n    cp.yz*=rot(PI/2.);\n    float oc = cyl(cp-vec3(0,1.4,0),.5,.5);\n    float ic = cyl(cp-vec3(0,1.4,0),.35,.5);\n    float ibc = cyl(cp-vec3(0,1.4,0),.3,.55);\n    \n    float ch = .1;\n    float tc = box(p-vec3(0,2.-ch,0),vec3(2,2.,2));\n    float bc = box(p+vec3(0,2.-ch,0),vec3(2,2.,2));\n    \n    float bw = 2.;\n    float cd = .2;\n    float th = length(p)-1.9, bh = th;\n    th=max(th,-bc);\n    th=max(th,-oc);\n    bh=max(bh,-tc);\n    bh=max(bh,-oc);\n    float ms = length(p)-(bw-cd);\n    \n    float ol = min(min(th,bh),oc);\n    o+=0.01/(0.01+ol*ol);\n    g+=0.01/(0.01+ibc*ibc);\n    \n    r=min(th,ms);\n    r=min(r,bh);\n    r=min(r,ic);\n    r=min(r,ibc);\n    if(r==th)m=1.;\n    else if(r==bh)m=2.;\n\telse if(r==ms)m=3.;\n    else if(r==ibc)m=4.;\n\n    return vec2(r,m);\n}\n\nvec2 ray(vec3 ro, vec3 rd)\n{\n    float t=0.,m;\n    for(int i=0;i<128;i++)\n    {\n        vec3 p = ro+rd*t;\n        vec2 s = map(p);\n        m=s.y;\n        if(s.x<0.00001)break;\n        t+=s.x;\n        if(t>MAX_DIST){t=-1.;break;}\n    }\n    return vec2(t,m);\n}\n//iq's soft shadow\nfloat shadow( in vec3 ro, in vec3 rd, float mint, float maxt, float k )\n{\n    float res = 1.0;\n    float dt = 0.1;\n    float t = mint;\n    for( int i=0; i<30; i++ )\n    {\n        float h = map(ro + rd*t).x;\n        h = max(h,0.0);\n        res = min( res, smoothstep(0.0,1.0,k*h/t) );\n        t += dt;\n\t\tif( h<0.001 ) break;\n    }\n    return res;\n}\nvec3 normal(vec3 p)\n{\n    vec2 e = vec2(0.0001,0);\n    return normalize(vec3(\n        map(p+e.xyy).x-map(p-e.xyy).x,\n        map(p+e.yxy).x-map(p-e.yxy).x,\n        map(p+e.yyx).x-map(p-e.yyx).x\n        ));\n}\n\nvoid mainImage( out vec4 c, in vec2 f)\n{\n    vec2 uv = (2.*f-iResolution.xy)/iResolution.y;\n    \n    vec3 col = vec3(1);\n    \n    float x = PI+iMouse.x/100.;\n    float d = 10.;\n    vec3 ro = vec3(sin(x)*d,0,cos(x)*d);\n    vec3 ta = vec3(0);\n    vec3 rd = cam(ro,ta,uv);\n    \n    vec2 r = ray(ro,rd);\n    float glo = g;\n    float t = (1.+cos(iTime*2.))/2.;\n    if(r.x>0.)\n    {\n        vec3 mate = vec3(1);\n\n        if(r.y==1.)mate=vec3(1,0,0);\n        else if(r.y==2.)mate=vec3(1);\n\t\telse if(r.y==3.)mate=vec3(0.2);\n        else if(r.y==4.)mate=vec3(1.+t,1.-t,1.-t);\n        vec3 p = ro+rd*r.x;\n        vec3 n = normal(p);\n        vec3 sun = normalize(vec3(1.,2.,-.5));\n        float dif = clamp(dot(sun,n),0.,1.);\n        float sky = clamp(dot(n,vec3(0,1,0)),0.,1.);\n        float fro = clamp(dot(n,vec3(0,0,-1)),0.,1.);\n        float bou = clamp(dot(n,vec3(0,-1,0)),0.,1.);\n        float sha = shadow(p+n*.001,sun,.065,3.,8.);\n        vec3 ref = reflect(-sun,n);\n        float spe = max(0.0,dot(ref,normalize(ro-p)));\n        spe = pow(spe,8.0);\n        col=dif*mate*sha+spe*sha;\n        col+=sky*mate*.8*sha;\n        col+=bou*mate*.5;\n        col+=fro*mate*.5;\n    }\n    else\n    {\n        col-=smoothstep(0.5,1.,o/30.);\n    }\n    \n    c.rgb=col+(vec3(1,0,0)*glo/20.*t);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define MAX_DIST 10.0\n#define PI 3.1415927\n\nmat2 rot(float x){return mat2(cos(x),-sin(x),sin(x),cos(x));}\n\n//thanks to iq for sharing this knowledge on his website\nfloat cyl(vec3 p, float h, float r)\n{\n    vec2 q = abs(vec2(length(p.xz),p.y))-vec2(h,r);\n    return length(max(q,0.0))+min(max(q.x,q.y),0.0);\n}\n\nfloat box(vec3 p, vec3 d)\n{\n  vec3 q = abs(p) - d;\n  return min(max(q.x,max(q.y,q.z)),0.0)+length(max(q,0.0));\n}\n\n\nvec3 cam(vec3 ro, vec3 ta, vec2 uv)\n{\n    vec3 cf = normalize(ta-ro);\n    vec3 cu = normalize(cross(cf,vec3(0,1,0)));\n    vec3 cr = normalize(cross(cu,cf));\n    return normalize(uv.x*cu+uv.y*cr+2.*cf);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}