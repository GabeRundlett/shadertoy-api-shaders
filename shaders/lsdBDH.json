{
    "Shader": {
        "info": {
            "date": "1525016837",
            "description": "A simple Julia fractal shader.",
            "flags": 0,
            "hasliked": 0,
            "id": "lsdBDH",
            "likes": 3,
            "name": "Fractals: Julia",
            "published": 3,
            "tags": [
                "fractal",
                "julia"
            ],
            "usePreview": 0,
            "username": "4rknova",
            "viewed": 646
        },
        "renderpass": [
            {
                "code": "// by Nikos Papadopoulos, 4rknova / 2018\n// Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define AA\t    2.\n#define ZOOM    1.3\n#define OFFSET  vec2(-.5,0)\n#define ITER    128 // Max number of iterations\n#define COL_IN  vec3(0)\n#define C       vec2(cos(iTime*0.0926), sin(iTime*0.0613))\n\nvec3 fractal(vec2 p, vec2 c)\n{    \n\tvec2 z = p - OFFSET;\n\n\tfor (int i = 0; i < ITER; ++i) {  \n\t\tz = vec2(z.x * z.x - z.y * z.y, 2. * z.x * z.y) + c;\n\n\t\tif (dot(z,z) > 4.) {\n\t\t\tfloat s = .125662 * float(i);\n\t\t\treturn vec3(vec3(cos(s + .9), cos(s + .3), cos(s + .2)) * .4 + .6);\n\t\t}\n\t}\n\n    return COL_IN;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 c = (fragCoord.xy / iResolution.xy * 2. - 1.)\n\t\t   * vec2(iResolution.x / iResolution.y, 1)\n\t\t   * ZOOM - vec2(.5,0.);\n\n    vec3 col = vec3(0);\n    \n#ifdef AA\n    // Antialiasing via supersampling\n    float e = 1. / min(iResolution.y , iResolution.x);    \n    for (float i = -AA; i < AA; ++i) {\n        for (float j = -AA; j < AA; ++j) {\n    \t\tcol += fractal(ZOOM * (c + vec2(i, j) * (e/AA)), C) / (4.*AA*AA);\n        }\n    }\n#else\n    col = fractal(c * ZOOM, C);\n#endif /* AA */\n\n\tfragColor = vec4(col, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}