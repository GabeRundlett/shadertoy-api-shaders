{
    "Shader": {
        "info": {
            "date": "1648184083",
            "description": "常见变量声明",
            "flags": 0,
            "hasliked": 0,
            "id": "7tfcWM",
            "likes": 0,
            "name": "learnshader005-常见变量声明",
            "published": 3,
            "tags": [
                "learn"
            ],
            "usePreview": 0,
            "username": "hi347",
            "viewed": 178
        },
        "renderpass": [
            {
                "code": "/*四种变量声明\nuniform vec2 iResolution;     uniform 能获取（get），不能更新设置（set）\n#define PI  3.14159265359     #define 能获取（get），不能更新设置（set）\nconst float cf=1.0;           const   能获取（get），不能更新设置（set）\nvec2 vv2;                     varying 能获取（get），能更新设置（set）\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    fragColor = vec4(uv.x ,0.0 ,0.0 ,1.0);\n}\n\n\n/* gpu允许使用以下数学功能（官方提供的数学功能）\nsin( )  = 正弦,   返回-1~1\ncos( )  = 余弦，  返回-1~1\ntan( )  = 正切，  返回\nasin( ) = 反正弦，返回\nacos( ) = 反余弦，返回\natan( ) = 反正切，返回 \npow( )  = 幂,   返回\nexp( )  =        返回e为底的指数\nlog( )  =        返回自然对数 \nsqrt( ) = 平方根，返回\nabs( )  = 绝对值，返回整数 & 去符号\nsign( ) = 符号，  返回 0<返回-1， =0返回0 ，<0返回1\nfloor() = 向下取整，返回整数：输入1.1返回整数1\nceil( ) = 向上取整，返回整数：输入1.1返回整数2\nfract() = 求小数，  返回小数0~1：0.1返回0.1，-0.1返回0.9\nmod( )  = 求余数,   返回小数0~1：3.14返回0.14，-3.14返回0.14\nmin( )  = 最小值，  返回最小值\nmax( )  = 最大值，  返回最大值\nclamp() = 限定范围，返回参数限制在最小值和最大值范围内\nstep()  = 设置阈值，返回0或1，举例：step（0.5，input）如果小于0.5返回0，如果大于0.5返回1\nsmoothStep( ) = 平滑阶梯(线性离散插值而非线性连续插值)，返回0~1的平滑过渡值。smoothStep（下限，上限，参数）当x小于下界返回0，当x大于上界返回1,介于上界下界之间返回一个平滑的曲线\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}