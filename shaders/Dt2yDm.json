{
    "Shader": {
        "info": {
            "date": "1691859873",
            "description": "sigmoid is my new friend.",
            "flags": 0,
            "hasliked": 0,
            "id": "Dt2yDm",
            "likes": 5,
            "name": "IYI Sigmoid function",
            "published": 3,
            "tags": [
                "1d",
                "sigmoid"
            ],
            "usePreview": 0,
            "username": "iY0Yi",
            "viewed": 175
        },
        "renderpass": [
            {
                "code": "float sigmoid(float x, float s) {\n    return 1./(1.+exp(-x*s));\n}\n\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n    \n    SCALE = 2.;\n    Paper(fragCoord, iResolution, iMouse);\n    \n    float v = sin(P.x*2.);\n    float scale = sin(iTime)*20.;\n    col *= graph(v, ORANGE);\n    col *= graph(sigmoid(v, scale)*2.-1., COBALT);\n\t    \n    fragColor=vec4(pow(col, vec3(.454545)), 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Constants\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n#define PI 3.14159265\n#define HALF_PI 1.5707963267948966\n#define SQRT2 1.41421356237\n#define TAU (2.*PI)\n#define PHI (sqrt(5)*0.5 + 0.5)\n#define saturate(x) clamp(x, 0.0, 1.0)\n#define sms(min, max, x) smoothstep(min, max, x)\n#define s2u(v) ((v)*.5+.5)\n#define u2s(v) ((v-.5)*2.)\n\n\n#define RED     vec3(0xe1U, 0x2aU, 0x0cU)/255.\n#define GREEN   vec3(0x35U, 0xb8U, 0x51U)/255.\n#define PURPLE  vec3(0xbdU, 0x6aU, 0xb0U)/255.\n#define YELLOW  vec3(0xf2U, 0xdeU, 0x01U)/255.\n#define ORANGE  vec3(0xf5U, 0x9dU, 0x04U)/255.\n#define COBALT  vec3(0x61U, 0x75U, 0xbdU)/255.\n#define BLUE    vec3(0x26U, 0xb9U, 0xf0U)/255.\n#define BLACK   vec3(0x64U, 0x52U, 0x40U)/255.\n\n#define TICKNESS .005\nfloat SCALE = 0.; vec2 P; vec3 col, Res;\n\nvec3 graph(float v, vec3 color){\n    float res =abs(P.y-v);\n    \n    //https://iquilezles.org/articles/distance\n    //https://www.shadertoy.com/view/MdfGWn\n    float e = 2./Res.y;\n    float g = length(vec2(dFdx(res),dFdy(res)))/e;\n    res /= g;\n    \n    res = sms(SCALE*e+TICKNESS, SCALE*e+TICKNESS*1.5, res);\n    return saturate(res+color);\n}\n\nvoid Paper(vec2 C, vec3 R, vec4 M){\n    vec2 uv=C.xy/R.xy;\n    P=(uv-0.5)*2.0;\n    if(M.z>0.) P-=(M.xy/R.xy)*2.-1.;\n    P*=SCALE*2.;\n    Res=R;\n    #define PAPER vec3(1,.95,.9)*.8\n    #define GUIDE vec3(.1,.2,.25)*1.7\n    float ZERO = .003*SCALE;\n    float ONE = .01*SCALE;\n    float TEN = .1*SCALE;\n    col=PAPER;\n    col*=1.-(sms(1.-ONE,1.,abs(u2s(mod(P.x,1.0))))+sms(1.-ONE,1.,abs(u2s(mod(P.y*R.y/R.x,1.0)))))*0.75*GUIDE;\n    col*=1.-(sms(1.-TEN,1.,u2s(mod(P.x*10.0,1.0)))+sms(1.-TEN,1.,abs(u2s(mod(P.y*10.0*R.y/R.x,1.0)))))*0.5*GUIDE;\n    col*=1.-(P.x<ZERO&&P.x>=-ZERO?1.0:0.0)*GUIDE;\n    col*=1.-(P.y*R.y/R.x<0.003*SCALE&&P.y>=-0.003*SCALE?1.0:0.0)*GUIDE;\n    P.y*=R.y/R.x;\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}