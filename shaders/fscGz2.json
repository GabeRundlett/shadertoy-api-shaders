{
    "Shader": {
        "info": {
            "date": "1630165832",
            "description": "stars",
            "flags": 0,
            "hasliked": 0,
            "id": "fscGz2",
            "likes": 3,
            "name": "Stars with no for loops",
            "published": 3,
            "tags": [
                "stars"
            ],
            "usePreview": 0,
            "username": "TestCoder",
            "viewed": 393
        },
        "renderpass": [
            {
                "code": "float getSoftNoise(float x) {\n    float wave = sin(x / 32.)\n            + sin(x)\n            + cos(2. * x) / 2.\n            + sin(4. * x) / 4.\n            + sin(8. * x) / 8.\n            + sin(16. * x) / 16.\n            + sin(32. * x) / 32.;\n    return wave / 1000.;\n}\n\nfloat getStarSwitch(float x) {\n    float zoom = 1000000.;\n    float softNoise = getSoftNoise(x * zoom);\n    float density = .000001;\n\n    if (softNoise < 0. && softNoise > -density) {\n        return -softNoise * (1. / density) * sin(\n            iTime + sin(x * 50.) * 5.\n        );\n    }\n\n    return 0.;\n}\n\nfloat getStarPattern(vec2 uv) {\n    float voidSwitch = (\n        getStarSwitch(uv.x + cos(uv.x) * sin(uv.y)) +\n        getStarSwitch(uv.y + sin(uv.x) * cos(uv.y) / 20.)\n    );\n\n    return voidSwitch;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy - .5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    vec3 col = getStarPattern(uv) * vec3(1, 1, 2);\n\n    fragColor = vec4(col, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}