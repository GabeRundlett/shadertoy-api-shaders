{
    "Shader": {
        "info": {
            "date": "1581813470",
            "description": "Devoirs de Fabrice. ",
            "flags": 32,
            "hasliked": 0,
            "id": "3lcSDf",
            "likes": 21,
            "name": "Trabecular 3D Mesh No. 2",
            "published": 3,
            "tags": [
                "raymarching"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 619
        },
        "renderpass": [
            {
                "code": "// Fork of \"Trabecular 3D Mesh No. 1\" by wyatt. https://shadertoy.com/view/Wt3SDf\n// 2020-02-15 23:47:38\n\nMain\n{\n    Q = A(U)/float(iFrame);\n    Neighborhood;\n    vec3 no = normalize(vec3(grd,.001));\n    Q *= 0.5+0.5*texture(iChannel1,no);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "cubemap",
                        "id": 25,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\n#define Main void mainImage (out vec4 Q, vec2 U)\n#define Neighborhood vec4 n = A(U+vec2(0,1)), e = A(U+vec2(1,0)), s = A(U-vec2(0,1)), w = A(U-vec2(1,0)), m = 0.25*(n+e+s+w);\n#define grd 0.25*vec2(e.w-w.w,n.w-s.w)\n\nvec3 hash33(vec3 p3)\n{\n\tp3 = fract(p3 * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy + p3.yxx)*p3.zyx);\n\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "#define O 3.\nvec3 cell (vec3 u, out vec3 h) {\n\tvec3 V = round(u*O) / O;\n    h = hash33(V);\n    return V + ( h*2.-1. ) / O;\n}\nfloat pie (vec3 p, vec3 a, vec3 b) {\n\tvec3 m = (a+b)/2.;                    // midpoint\n    return length(a-b) < 1e-3\n        ? 1e3                             // ignore self\n\t    : abs(dot(p-m,b-m)/dot(b-m,b-m)); // projection\n}\nfloat line (vec3 p, vec3 a, vec3 b) {\n    p -= a; b -= a;\n    float i = clamp(dot(p,b)/dot(b,b),0.,1.);\n\treturn length(p-b*i);\n}\nfloat bord (vec3 p, vec3 a, vec3 b, vec3 c) {\n\tif (length(a-c)<1e-3||length(c-b)<1e-3) return 1e3;\n    float e1 = pie(p,a,b)*length(a-b);\n    float e2 = pie(p,a,c)*length(a-c);\n    return max(e1,e2);\n}\nMain\n{\n    Q = A(U);\n    if (iFrame < 1) Q-=Q;\n    \n    U = (U-.5*R) / R.y;\n    vec3 d = normalize(vec3(U,.66)),\n         p = d*Q.w -28.55,\n         V = vec3(1e3), W=V,\n       col = V-V;\n\tfloat border = 1e3;\n#define loopNb                               \\\n    for (int k = 0; k < 5*5*5; k++) {        \\\n        vec3 h, c = cell( p + vec3( k%5-2, (k/5)%5-2, k/25-2 ) / O, h);\n                                     \n    loopNb if (length(c-p) < length(V-p)) V=c, col = h; }\n    loopNb if (pie(p,V,c) < pie(p,V,W)) W = c; }\n\tloopNb border = min(border,bord(p,V,W,c)-0.001); }\n    float    y = col.y,\n          ball = length(p-V) - .03,\n       segment = line(p,W,V) -.003,\n          edge = pie(p,W,V) * length(W-V);\n    \n    col = abs( sin( 10.*col.x+ (1.+2.*col.z)* vec3(1,2,3) ) );\n    Q.xyz += col * exp(-30.*abs(ball))\n          + (1.+col) * smoothstep(1e-4,0.,ball)\n   \t      + .1 * smoothstep(1e-4,0.,segment)\n          + (col+1.) * smoothstep(2e-2,0.,edge);\n    Q.w +=  0.5*min(min(ball, min(segment,border))\n           * (1.-.95*exp(-100.*edge*edge))\n           *( 1.-.9 *exp(-500.*ball*ball)),.01);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "cubemap",
                        "id": 25,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}