{
    "Shader": {
        "info": {
            "date": "1585645716",
            "description": "lol",
            "flags": 0,
            "hasliked": 0,
            "id": "WdfcD2",
            "likes": 1,
            "name": "anotherContineousRandom",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "Arseny",
            "viewed": 284
        },
        "renderpass": [
            {
                "code": "float rand(float x){\n    x += 0.0007;\n    x += 1224.124;\n    x = floor(x / 0.001) * 0.001;\n    return fract(sin(x) * 43758.5453);\n}\n\nvec2 getNormal(float id){\n    float rnd = (rand(id) * 2. - 1.) * 0.78539816339 / 1.1;\n    return vec2(sin(rnd), cos(rnd));\n    float ctg = -cos(rnd)/sin(rnd);\n}\n\nvec4 getCub(float h, vec2 u, vec2 C, vec2 v){\n    float d = h;\n    float c = -u.x / u.y;\n    float b = (3. * C.y + v.x / v.y * C.x - 2. * c * C.x - 3. * d) / (C.x * C.x);\n    float a = (-v.x / v.y - c - 2. * b * C.x) / (3. * C.x * C.x);\n    return vec4(d, c, b, a);\n}\n\nfloat getContRnd(float uvx){\n    float ans = 0.;\n    \n    //float x = uv.x;\n    //vec2 lv = uv;\n    float k = 1.;\n    float x = uvx;\n    \n    float id = (floor(x * k) + 0.5) / k;\n    vec4 cB = getCub(0., getNormal(id), vec2(2., 0.), getNormal(id + 1. / k));\n    x = fract(x * k) * 2. - 1.;\n    vec4 pw = vec4(1., x, x * x, x * x * x);\n    ans = (uvx >= id) ? dot(pw, cB) : ans;\n    cB = getCub(0., getNormal(id), vec2(-2., 0.), getNormal(id - 1. / k));\n    ans = (uvx <= id) ? dot(pw, cB) : ans;\n    return ans;\n}\n\nfloat N21(vec2 uv){\n    return getContRnd(uv.x - 2.521) * getContRnd(uv.y + 124.131);\n}\n\n/*vec3 grad(){\n    \n}*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy)/iResolution.y * 2.;\n    uv.x += iTime / 2.;\n    uv.x += 10.;\n    //uv.x = mod(uv.x, 100.);\n    // Time varying pixel color\n    vec3 col = vec3(0);\n    \n    col = vec3(smoothstep(-0.01, 0.01, getContRnd(uv.x) - uv.y));\n    col.x *= (getContRnd(uv.x) + 0.5) * 1.5;\n    col.y *= (getContRnd(uv.x + 163.) + 0.5) * 1.5;\n    col.z *= (getContRnd(uv.x + 2256.) + 0.5) * 1.5;\n    //col = vec3(smoothstep(0., 0.1, abs(lv.x)));\n    //col *= vec3(id);\n    \n    //x = lv.x;\n    //cB = getCub(0., vec2(0.4, 0.4), vec2(-1., 0.), vec2(-0.2, 0.4));\n    //col = vec3(sign(dot(pw, cB) - uv.y));\n    \n    //col *= id;\n\n    // Output to screen\n    //col *= grad(uv.x);\n    //col = (abs(uv.y) < 0.01) ? vec3(0., 1., 0.) : col;\n    //col = (abs(uv.y - 1.) < 0.01) ? vec3(0., 1., 0.) : col;\n    col = vec3((N21(uv * 2.) + 0.02) * 10.);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}