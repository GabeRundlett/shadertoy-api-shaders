{
    "Shader": {
        "info": {
            "date": "1714471843",
            "description": "Colored noise for TV\nReference ðŸ‘‰ https://twitter.com/swzydzn/status/1784660742777499898/photo/3\nLive staging ðŸ‘‰ https://roue-libre-c9c6c.web.app/contact\n",
            "flags": 0,
            "hasliked": 0,
            "id": "4ftXDj",
            "likes": 1,
            "name": "Color noise for TV",
            "published": 3,
            "tags": [
                "noise",
                "tv",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "trinketMage",
            "viewed": 223
        },
        "renderpass": [
            {
                "code": "float noise(vec2 coord)\n{\n    return fract(sin(dot(coord, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat scanSpeedAdd = 1.0;\nfloat lineCut = 0.1;\nfloat whiteIntensity = 0.8;\nfloat anaglyphIntensity = 0.5;\n\nvec3 col_r = vec3(0.0, 1.0, 1.0);\nvec3 col_l = vec3(1.0, 0.0, 0.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 uv_right = vec2(uv.x + 0.01, uv.y + 0.01);\n    vec2 uv_left = vec2(uv.x - 0.01, uv.y - 0.01);\n\n    vec3 col = vec3(0.0);\n    \n    float scanSpeed = (fract(iTime) * 2.5 / 40.0) * scanSpeedAdd;\n    vec3 scanlines = vec3(1.0) * abs(cos((uv.y + scanSpeed))) - lineCut;\n    \n    vec3 scanlines_right = col_r * abs(cos((uv_right.y + scanSpeed) * 100.0)) - lineCut;\n    vec3 scanlines_left = col_l * abs(cos((uv_left.y + scanSpeed) * 100.0)) - lineCut;\n        \n    col = smoothstep(0.1, 0.7, scanlines * whiteIntensity)\n        + smoothstep(0.1, 0.7, scanlines_right * anaglyphIntensity)\n        + smoothstep(0.1, 0.7, scanlines_left * anaglyphIntensity);\n    \n    uv = floor(fragCoord * .314) / iResolution.xy;\n    vec3 color = vec3(0.0);\n\n    color.r = 0.5 + 0.5 * noise(uv * 10.0 + vec2(iTime, 0.0));\n    color.g = 0.5 + 0.5 * noise(uv * 10.0 + vec2(0.0, iTime));\n    color.b = 0.5 + 0.5 * noise(uv * 10.0 + vec2(iTime, iTime));\n\n    color *= 0.5 + 0.5 * noise(uv * 30.0 + vec2(iTime, iTime));\n\n    fragColor = vec4((color - 0.625) + (smoothstep(0.1, 0.9, col) * 0.125), 0.0);\n}\n\n\n/** SHADERDATA\n{\n\t\"title\": \"Retro screen noise\",\n\t\"description\": \"retro screen noise\",\n\t\"model\": \"person\"\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}