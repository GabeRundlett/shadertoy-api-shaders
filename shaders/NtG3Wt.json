{
    "Shader": {
        "info": {
            "date": "1638488593",
            "description": "Moo. The lavalamp of cows. 2D wallpaper inspired by Gateway computer mousepads.",
            "flags": 0,
            "hasliked": 0,
            "id": "NtG3Wt",
            "likes": 1,
            "name": "Cowblob",
            "published": 3,
            "tags": [
                "metaball"
            ],
            "usePreview": 0,
            "username": "Jabo",
            "viewed": 204
        },
        "renderpass": [
            {
                "code": "// https://www.shadertoy.com/view/lt3BW2\nfloat opSmoothUnion( float d1, float d2, float k )\n{\n    float h = max(k-abs(d1-d2),0.0);\n    return min(d1, d2) - h*h*0.25/k;\n}\n\nfloat meta(vec2 p, float r)\n{\n\t//return r / dot(p, p);\n    return length(p)-r;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat blob(vec2 p, float t)\n{\n    float smoothness = 0.2 + cos(0.03 * t) * 0.1;\n    vec2 offset = vec2(sin(0.1 * t) * 0.1, cos(0.1 * t) * 0.1);\n    float d = meta(p, 0.3 + cos(0.2 * t) * 0.05);\n    offset = vec2(0.1 + sin(0.3 * t) * 0.1, -0.15 + cos(0.07 * t) * 0.1);\n    d = opSmoothUnion(d, meta(p+offset, 0.32), smoothness);\n    offset = vec2(0.05 - sin(0.2 * t) * 0.05, 0.05 + cos(0.05 * t) * 0.05);\n    d = opSmoothUnion(d, meta(p+offset, 0.3), smoothness);\n    return d;\n}\n\nvec3 mysample(vec2 uv, float t) {\n    // speed me up by increasing\n    t *= 1.0;\n\n    // top right\n    float d = blob(uv - vec2(0.8, 0.3), t); \n    d = opSmoothUnion(d, blob(uv - vec2(0.9, 0.4), t-2.0), 0.3);\n    \n    // top left\n    d = opSmoothUnion(d, blob(uv - vec2(-0.6, 0.65), 1.1 * t-1.0), 0.1); \n    d = opSmoothUnion(d, blob(uv - vec2(-0.8, 0.75), 1.1 * t+2.0), 0.3);\n    \n    // bottom left\n    d = opSmoothUnion(d, blob(uv * vec2(0.5, 1.0) - vec2(-0.25, -0.6), 0.9 * t+5.0), 0.1);\n    d = opSmoothUnion(d, blob(uv * vec2(0.8, 1.1) - vec2(-0.6, -0.7), 0.9 * t-4.0), 0.3);\n    d = opSmoothUnion(d, blob(uv - vec2(0.1, -0.7), 0.8 * t-3.0), 0.3);\n    \n    // border effect\n    d = opSmoothUnion(d, -sdBox(uv, vec2(0.95, 0.55)), 0.15);\n    \n    \n    if(iMouse.z > 0.001) {\n        // non AA original\n        vec3 col = vec3(min(\n            step(0.000001, d),\n            smoothstep(-0.5, 0.2, d)\n        ));\n        return col;\n    }\n    \n    // AA smoothstep\n    float e = 0.99/iResolution.y;\n    float c = smoothstep(-e,e, d);\n    c = min(c, smoothstep(-0.5, 0.2, d));\n    return vec3(c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;    \n    // shift to 0.0 center\n    uv -= 0.5;\n    // squish for aspect ratio\n    uv.x *= iResolution.x / iResolution.y;    \n    \n    // pixel color\n    vec3 col = mysample(uv, iTime);\n\n    // Output to screen\n    fragColor = pow(vec4(col, 1.0), vec4(1./2.2));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}