{
    "Shader": {
        "info": {
            "date": "1611211515",
            "description": "用Fbm去扭曲图片，感觉可以模拟个水面什么的效果",
            "flags": 0,
            "hasliked": 0,
            "id": "ttGyzG",
            "likes": 5,
            "name": "Fbm Warp",
            "published": 3,
            "tags": [
                "noise",
                "fbm",
                "perlin",
                "warp"
            ],
            "usePreview": 0,
            "username": "hanker",
            "viewed": 451
        },
        "renderpass": [
            {
                "code": "\n\nfloat random(float f){\n    return fract(sin(123.567 * f) * 567.897);\n}\nvec2 random2(vec2 p){\n     p = vec2(dot(p,vec2(123.341,251.135)),dot(p,vec2(372.632,723.213)));\n    return fract(sin(p) * 31411.524313) * 2. - 1.;\n}\nfloat perlin(vec2 uv){\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n\n    vec2 lb = random2(i);\n    vec2 rb = random2(i + vec2(1.,0.));\n    vec2 lt = random2(i + vec2(0.,1.));\n    vec2 rt = random2(i + vec2(1.,1.));\n\n    float lb_value = dot(random2(lb),f);\n    float rb_value = dot(random2(rb),f - vec2(1.,0.));\n    float lt_value = dot(random2(lt),f - vec2(0.,1.));\n    float rt_value = dot(random2(rt),f - vec2(1.,1.));\n\n    f =smoothstep(0.,1.,f);\n    float n = mix(\n            mix(lb_value,rb_value,f.x),\n            mix(lt_value,rt_value,f.x),\n        f.y);\n\n\n    return n;\n}\n#define OCTAVES 5\nfloat fbm(vec2 uv){\n    float amplitude = 1.;\n    float frequency = 1.;\n    float result = 0.;\n    for(int i = 0; i < OCTAVES; i ++){\n        result += amplitude * perlin(uv * frequency);\n        amplitude *= .5;\n        frequency *= 2.;\n    }\n    return result;\n}\nfloat toRad(float r){\n    return r * 3.1415926 / 180.;\n}\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 st = uv;\n    uv.y *= iResolution.y / iResolution.x;\n    vec3 col = vec3(0.);\n\n    float rotAngle = -90.;\n    mat2 rot = mat2(\n        cos(rotAngle),-sin(rotAngle),\n        sin(rotAngle),cos(rotAngle)\n    );\n\n    vec2 p = uv * 2.;\n    float fbm_value = fbm(p + fbm(p + fbm(p) + .1 * iTime) - .1 * iTime) * .5 + .5;\n    col = vec3(fbm_value);\n\n\n   // col = mix(col,green * blue,uv.y);\n    st *= fbm_value * 2.;\n    vec4 image0 = texture(iChannel0,st);\n    st.x *= iResolution.y / iResolution.x;\n    image0 *= step(fbm_value,st.x);\n    fragColor = image0 + vec4(fbm_value) * (1. - image0.a);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}