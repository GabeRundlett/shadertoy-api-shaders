{
    "Shader": {
        "info": {
            "date": "1520214427",
            "description": "Dance mofuka",
            "flags": 0,
            "hasliked": 0,
            "id": "lsccW2",
            "likes": 1,
            "name": "Audio Visuals",
            "published": 3,
            "tags": [
                "raymarching",
                "sdf",
                "music",
                "audiovisual"
            ],
            "usePreview": 0,
            "username": "felipunkerito",
            "viewed": 645
        },
        "renderpass": [
            {
                "code": "#define EPS 0.0001\n#define FAR 100.00\n#define STEPS 1028\n\nvec3 opRep( vec3 p )\n{\n    vec3 q = mod(p * 0.5, 2.0 ) - 1.0;\n    return q;\n}\n\nfloat sph( vec3 p, float t )\n{\n\n    return length( p ) - t; \n        \n}\n\nfloat map( vec3 p )\n{\n\n    float wav = ( texture( iChannel0, vec2( 0.0, 0.15 ) ).x ) * 0.2;\n    float r = 0.6 + 0.15 * cos( 10.0 * p.x + ( iTime + wav ) + wav ) +\n              sin( 6.0 * p.y + wav ) * 1.4 * sin( length( p ) * 10.0 + wav );\n    vec3 q = opRep( p ); \n    float sphere = sph( q, r );\n    return sphere;\n    \n}\n\nvec3 grad( vec3 p )\n{\n\n    vec2 e = vec2( 0.0, EPS );\n    vec3 n = vec3( map( p + e.xyy ) - map( p - e.xyy ),\n                   map( p + e.yxy ) - map( p - e.yxy ),\n                   map( p + e.yyx ) - map( p - e.yyx )\n                 );\n    return n;\n    \n}\n\nvec3 shade( vec3 ro, vec3 rd, float t )\n{\n\n\tvec3 p = ro + rd * t;\n\tvec3 n = normalize( grad( p ) );\n    vec3 col;\n    vec3 lig = normalize( vec3( 1.0, 0.8, 0.6 ) );\n    vec3 ref = reflect( ro, lig );\n    \n    float amb = 0.5 + 0.5 * n.y;\n    float dif = max( 0.0, dot( n, lig ) );\n    float spe = pow( clamp( dot( ref, lig ), 0.0, 1.0 ), 16.0 );\n    \n    vec3 tex = texture( iChannel1, p.xz ).xyz;\n    col += vec3( 1.0 ) * amb;\n    col += vec3( 0.5 ) * dif;\n    col *= tex;\n    col += 1.0 * spe;\n    \n    return col;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ( -iResolution.xy + 2.0 * fragCoord ) / iResolution.y;\n\n    vec4 mou = iMouse / iResolution.xyxy;\n    \n    //vec3 ro = 5.0 * vec3( sin( iTime * 0.2 ), 0.0, cos( iTime * 0.2 ) );\n    vec3 ro = vec3( mou.x, mou.y, 5.0 );\n    //vec3 rd = normalize( vec3( uv, -1.0 ) );\n    vec3 ww = normalize( vec3( 0.0 ) -  ro );\n    vec3 uu = normalize( cross( vec3( 0.0, 1.0, 0.0 ), ww ) );\n    vec3 vv = normalize( cross( ww, uu ) );\n    vec3 rd = normalize( uv.x * uu + uv.y * vv + 1.5 * ww );\n    \n    float t = 0.0, d = EPS;\n    for( int i = 0; i < STEPS; ++i )\n    {\n    \n        d = map( ro + rd * t );\n        if( d < EPS || t > FAR ) break;\n        t += d;\n        \n    }\n    \n    // Time varying pixel color\n    vec3 col = d < EPS ? shade( ro, rd, t ) : vec3( 1.0 );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 3,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 34,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}