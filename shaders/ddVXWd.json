{
    "Shader": {
        "info": {
            "date": "1703184948",
            "description": "Some description",
            "flags": 0,
            "hasliked": 0,
            "id": "ddVXWd",
            "likes": 15,
            "name": "Mineral Symbols",
            "published": 3,
            "tags": [
                "symbols",
                "maps"
            ],
            "usePreview": 1,
            "username": "SkyCrusher",
            "viewed": 294
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n\n#define THICKNESS 0.002\n#define GRID_N 10\n#define CENTER vec2(0.5)\n#define WIDTH 0.025\n#define SIZE vec2(0.5)\n#define RADIUS 0.25\n\n////\n//maths\n////\n\nfloat cross2(vec2 a,vec2 b){ \n    return a.x*b.y - a.y*b.x; \n}\n\nvec2 rotate(vec2 uv, float angle){\n    return mat2(cos(angle), -sin(angle), sin(angle), cos(angle)) * uv;\n}\n\n////\n//drawing functions\n////\n\nfloat line(vec2 uv, vec2 a, vec2 b, float r) \n{\n    vec2 g = b - a;\n    vec2 h = uv - a;\n    float d = length(h - g * clamp(dot(g, h) / dot(g,g), 0.0, 1.0));\n\treturn smoothstep(r/2. + THICKNESS, r/2., d);\n}\n\nfloat rect(vec2 uv, vec2 center, vec2 size, float angle){\n    uv = rotate(center - uv, angle);\n    return smoothstep(THICKNESS, .0, abs(uv.x)-size.x/2.)\n            * smoothstep(THICKNESS, .0, abs(uv.y)-size.y/2.);\n}\n\nfloat rect_outline(vec2 uv, vec2 center, vec2 size, float width, float angle){\n    return rect(uv, center, size + width, angle)\n            - rect(uv, center, size - width, angle);\n}\n\nfloat circle(vec2 uv, vec2 center, float radius){\n    return smoothstep(THICKNESS, .0, length(center-uv)-radius); \n}\n\nfloat circle_outline(vec2 uv, vec2 center, float radius, float width){\n    return circle(uv, center, radius + width/2.)\n            - circle(uv, center, radius - width/2.); \n}\n\nfloat circle_segment(vec2 uv, vec2 center, float radius, float len, float thickness, float rot){\n    uv = 2.0 * (CENTER - center + uv) - 1.0;\n    uv = rotate(uv, rot);\n\n    radius *= 2.;\n    float d = length(uv);\n\tfloat angle = atan(uv.x, uv. y) * 1./PI * 0.5;\n\tangle = fract(angle);\n    \n    float wd = fwidth(d);\n    float circle = smoothstep(radius + THICKNESS/2., radius - THICKNESS/2., d);\n    \n    float inner = radius - thickness;\n    circle -= smoothstep(inner + wd, inner - wd, d);\n    \n    float wa = fwidth(angle);\n    float segment = smoothstep(len + wa, len - wa, angle);\n\tsegment *= smoothstep(.0, 2. * wa, angle);    \n    circle *= mix(segment, 1., step(1.0, len));\n    \n    return circle;\n}\n\nfloat triangle(vec2 uv, vec2 vertex0, vec2 vertex1, vec2 vertex2)\n{\n    vec3 barycentricCoord;\n    \n    float triangleArea = cross(vec3(vertex1 - vertex0, 0), vec3(vertex2 - vertex0, 0)).z;\n    \n    barycentricCoord.x = cross(vec3(vertex1 - uv, 0), vec3(vertex2 - uv, 0)).z / triangleArea;\n    barycentricCoord.y = cross(vec3(vertex2 - uv, 0), vec3(vertex0 - uv, 0)).z / triangleArea;\n    barycentricCoord.z = cross(vec3(vertex0 - uv, 0), vec3(vertex1 - uv, 0)).z / triangleArea;\n    \n    return step(0., barycentricCoord.x)\n            * step(0., barycentricCoord.y)\n            * step(0., barycentricCoord.z);\n}\n\nfloat triangle_outline(vec2 uv, vec2 vertex0, vec2 vertex1, vec2 vertex2, float width){\n    return line(uv, vertex0, vertex1, width)\n            + line(uv, vertex1, vertex2, width)\n            + line(uv, vertex2, vertex0, width);\n}\n\nfloat polygon(vec2 uv, int n, vec2 center, float radius, float angle){\n  uv = rotate((CENTER - center + uv)*2.-1., angle);\n  \n  float a = atan(uv.x,uv.y)+PI;\n  float r = 2.*PI/float(n);\n\n  float d = cos(floor(.5+a/r)*r-a)*length(uv);\n  return 1.0-smoothstep(radius,radius + THICKNESS,d);\n}\n\nfloat polygon_outline(vec2 uv, int n, vec2 center, float radius, float angle, float width){\n  return polygon(uv, n, center, radius + width, angle)\n          - polygon(uv, n, center, radius, angle);\n}\n\n////\n//ceil logic functions\n////\n\nfloat set_ceil(vec2 grid, int xIndex, int yIndex){\n    return step(floor(grid.x), float(xIndex))\n            * step(floor(grid.y), float(yIndex))\n            * step(float(xIndex), floor(grid.x))\n            * step(float(yIndex), floor(grid.y));\n                \n}\n\n////\n//minerals functions\n////\n\n////\n//amphiboles\n////\n\nfloat hornblende(vec2 uv){\n    return rect_outline(uv, CENTER, SIZE, WIDTH, PI*.25);\n}\n\nfloat anthophyllite(vec2 uv){\n    return rect_outline(uv, CENTER, SIZE, WIDTH, PI*.25)\n            + rect(uv, CENTER, vec2(length(SIZE), WIDTH), .0);\n}\n\nfloat arfvedsonite(vec2 uv){\n    return rect_outline(uv, CENTER, SIZE, WIDTH, PI*.25)\n            + rect(uv, CENTER, vec2(WIDTH, length(SIZE)), .0);\n}\n\nfloat actinolite(vec2 uv){\n    return rect_outline(uv, CENTER, SIZE, WIDTH, PI*.25)\n            + rect(uv, CENTER, vec2(length(SIZE), WIDTH), .0)\n            + circle(uv, CENTER, length(SIZE) * .1);\n}\n\nfloat glaucophane(vec2 uv){\n    return rect_outline(uv, CENTER, SIZE, WIDTH, PI*.25)\n            + rect(uv, CENTER, vec2(WIDTH, length(SIZE)), .0)\n            + circle(uv, CENTER, length(SIZE) * .1);\n}\n\nfloat tremolite(vec2 uv){\n    return rect_outline(uv, CENTER, SIZE, WIDTH, PI*.25)\n            + rect(uv, CENTER, vec2(length(SIZE), WIDTH), .0)\n            - circle(uv, CENTER, length(SIZE) * .1 - WIDTH)\n            + circle_outline(uv, CENTER, length(SIZE) * .1, WIDTH);\n}\n\n\n////\n//pomegranates\n////\n\nfloat almandine(vec2 uv){\n    return circle_outline(uv, CENTER, RADIUS, WIDTH)\n            + rect(uv, CENTER, vec2(RADIUS*2., WIDTH), PI*.25)\n            + rect(uv, CENTER, vec2(WIDTH, RADIUS*2.), PI*.25);\n}\n\nfloat andradite(vec2 uv){\n    return circle_outline(uv, CENTER, RADIUS, WIDTH)\n            + rect(uv, CENTER, vec2(RADIUS*2., WIDTH), PI*.25)\n            + rect(uv, CENTER, vec2(WIDTH, RADIUS*2.), PI*.25)\n            + circle_segment(uv, CENTER, RADIUS, .25, 1., PI*.25);\n}\n\nfloat pyrope(vec2 uv){\n    return circle_outline(uv, CENTER, RADIUS, WIDTH)\n            + rect(uv, CENTER, vec2(RADIUS*2., WIDTH), PI*.25)\n            + rect(uv, CENTER, vec2(WIDTH, RADIUS*2.), PI*.25)\n            + circle_segment(uv, CENTER, RADIUS, .25, 1., PI*.25)\n            + circle_segment(uv, CENTER, RADIUS, .25, 1., -PI*.75);\n}\n\n////\n//nuggets\n////\n\nfloat diamond(vec2 uv){\n    return rect_outline(uv, CENTER, SIZE, WIDTH, PI*.25)\n            + rect(uv, CENTER, vec2(length(SIZE), WIDTH), .0)\n            + rect(uv, CENTER, vec2(WIDTH, length(SIZE)), .0);\n}\n\nfloat bismud(vec2 uv){\n    return triangle_outline(uv, vec2(.5-length(SIZE)/2., .5), vec2(.5+length(SIZE)/2., .5), vec2(.5, .5 - length(SIZE)/2.), WIDTH);\n}\n\nfloat graphite(vec2 uv){\n    return rect(uv, CENTER, vec2(.6, .15), 0.);\n}\n\nfloat copper(vec2 uv){\n    return triangle_outline(uv, vec2(.2, .2), vec2(.8, .2), vec2(.5, .8), WIDTH);\n}\n\nfloat arsenic(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.6, .3), WIDTH, 0.);\n}\n\nfloat nevyaskit(vec2 uv){\n    float mult = 2.5;\n    vec2 uv0 = uv;\n    uv0.y *= mult;\n    vec2 center = vec2(CENTER.x, CENTER.y*mult);\n    return polygon_outline(uv0, 6, center, .5, PI*.5, WIDTH*mult);\n}\n\nfloat platinum(vec2 uv){\n    return circle_outline(uv, CENTER, RADIUS, WIDTH)\n            + circle(uv, CENTER, RADIUS/3.);\n}\n\nfloat sulfur(vec2 uv){\n    vec2 a = vec2(.2, .35);\n    vec2 b = vec2(.4, .65);\n    vec2 c = vec2(.65, .35);\n    vec2 d = vec2(.85, .65);\n    float radius = 0.06;\n    return line(uv, a, b, WIDTH)\n            + line(uv, b, c, WIDTH)\n            + line(uv, c, d, WIDTH)\n            + line(uv, a, c, WIDTH)\n            + line(uv, b, d, WIDTH)\n            + circle(uv, a, radius)\n            + circle(uv, b, radius)\n            + circle(uv, c, radius)\n            + circle(uv, d, radius);\n}\n\nfloat sysertskit(vec2 uv){\n    float mult = 2.5;\n    vec2 uv0 = uv;\n    uv0.y *= mult;\n    vec2 center = vec2(CENTER.x, CENTER.y*mult);\n    return polygon_outline(uv0, 6, center, .6, PI*.5, WIDTH*mult)\n            + line(uv, vec2(.5, .375), vec2(.5, .625), WIDTH);\n}\n\n////\n//sulfides\n////\n\nfloat bismuth(vec2 uv){\n    return triangle_outline(uv, vec2(.5-length(SIZE)/2., .5), vec2(.5+length(SIZE)/2., .5), vec2(.5, .5 - length(SIZE)/2.), WIDTH)\n            + line(uv, vec2(.5, .5 - length(SIZE)/2.), vec2(.5), WIDTH);\n}\n\nfloat pyrite(vec2 uv){\n    return rect(uv, CENTER, SIZE/2., 0.)\n            + rect(uv, vec2(.65, .5), vec2(.04, .7), 0.);\n}\n\nfloat pyrrhotite(vec2 uv){\n    return rect(uv, CENTER, vec2(.6, .15), 0.)\n            + rect(uv, vec2(.5, .65), vec2(.15), 0.);\n}\n\nfloat glaucodot(vec2 uv){\n    return triangle_outline(uv, vec2(.5-length(SIZE)/2., .5), vec2(.5+length(SIZE)/2., .5), vec2(.5, .5 + length(SIZE)/2.), WIDTH)\n            + line(uv, vec2(.5, .5 + length(SIZE)/2.), vec2(.5), WIDTH);\n}\n\n\nfloat cobaltin(vec2 uv){\n    return triangle_outline(uv, vec2(.5-length(SIZE)/2., .5), vec2(.5+length(SIZE)/2., .5), vec2(.5, .5 + length(SIZE)/2.), WIDTH)\n            + triangle(uv, vec2(.5-length(SIZE)/2., .5), vec2(.5, .5 + length(SIZE)/2.), vec2(.5));\n}\n\nfloat smaltin(vec2 uv){\n    return triangle_outline(uv, vec2(.5-length(SIZE)/2., .5), vec2(.5+length(SIZE)/2., .5), vec2(.5, .5 + length(SIZE)/2.), WIDTH)\n            + triangle(uv, vec2(.5, .5 + length(SIZE)/2.), vec2(.5), vec2(.5+length(SIZE)/2., .5));\n}\n\nfloat bornite(vec2 uv){\n    return triangle_outline(uv, vec2(.2), vec2(.8, .2), vec2(.5, .8), WIDTH)\n            + triangle(uv, vec2(.2), vec2(.8, .2), vec2(.65, .5));\n}\n\nfloat covelline(vec2 uv){\n    return triangle_outline(uv, vec2(.2), vec2(.8, .2), vec2(.5, .8), WIDTH)\n            + triangle(uv, vec2(.2), vec2(.5, .2), vec2(.5, .8));\n}\n\nfloat tennantitis(vec2 uv){\n    return triangle_outline(uv, vec2(.2), vec2(.8, .2), vec2(.5, .8), WIDTH)\n            + triangle(uv, vec2(.35, .5), vec2(.65, .5), vec2(.5, .8));\n}\n\nfloat tetrahedrite(vec2 uv){\n    return triangle(uv, vec2(.2), vec2(.8, .2), vec2(.5, .8))\n            - triangle(uv, vec2(.4, .5), vec2(.6, .5), vec2(.5, .7));\n}\n\nfloat chalcosine(vec2 uv){\n    return triangle_outline(uv, vec2(.2), vec2(.8, .2), vec2(.5, .8), WIDTH)\n            + triangle(uv, vec2(.5, .2), vec2(.8, .2), vec2(.5, .8));\n}\n\nfloat chalcopyrite(vec2 uv){\n    return triangle(uv, vec2(.2), vec2(.8, .2), vec2(.5, .8));\n}\n\nfloat molebdenite(vec2 uv){\n    return rect(uv, CENTER, vec2(.45, .7), 0.) \n            - triangle(uv, vec2(.25, .9), vec2(.75, .9), vec2(.5));\n}\n\nfloat arsenopyrite(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.6, .3), WIDTH, 0.)\n            + rect(uv, vec2(.65, .5), vec2(.3, .3), 0.);\n}\n\nfloat orpiment(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.6, .3), WIDTH, 0.)\n            + line(uv, vec2(.5, .35), vec2(.5, .65), WIDTH);\n}\n\nfloat lellingite(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.6, .3), WIDTH, 0.)\n            + triangle(uv, vec2(.2, .35), vec2(.2, .65), vec2(.8, .65));\n}\n\nfloat realgar(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.6, .3), WIDTH, 0.)\n            + line(uv, vec2(.2, .35), vec2(.8, .65), WIDTH);\n}\n\nfloat millerite(vec2 uv){\n    return triangle_outline(uv, vec2(.2), vec2(.5, .8), vec2(.5, .2), WIDTH)\n            + line(uv, vec2(.5, .2), vec2(.3, .4), WIDTH);\n}\n\nfloat nickeline(vec2 uv){\n    return triangle_outline(uv, vec2(.2), vec2(.5, .8), vec2(.5, .2), WIDTH);\n}\n\nfloat pentlandite(vec2 uv){\n    return triangle(uv, vec2(.2), vec2(.5, .8), vec2(.5, .2));\n}\n\nfloat chloanitis(vec2 uv){\n    return triangle_outline(uv, vec2(.2), vec2(.5, .8), vec2(.5, .2), WIDTH)\n            + triangle(uv, vec2(.5, .8), vec2(.5, .2), vec2(.3, .4));\n}\n\nfloat sperrylite(vec2 uv){\n    return circle_outline(uv, CENTER, RADIUS, WIDTH)\n            + rect_outline(uv, CENTER, vec2(0.15), WIDTH, 0.);\n}\n\nfloat cinnabar(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.3), WIDTH, 0.)\n            + rect(uv, CENTER, vec2(WIDTH, .45), 0.)\n            + rect(uv, vec2(.45, .5), vec2(.155, .3), 0.);\n}\n\nfloat metacin_nabarite(vec2 uv){\n    return rect(uv, CENTER, vec2(.3), 0.)\n            + rect(uv, CENTER, vec2(WIDTH, .45), 0.);\n}\n\nfloat galena(vec2 uv){\n    return rect(uv, CENTER, SIZE, PI*.25);\n}\n\nfloat antimonite(vec2 uv){\n    vec2 a = vec2(.5);\n    vec2 a1 = vec2(.5, .65);\n    vec2 b = vec2(.2, .3);\n    vec2 b1 = vec2(.12, .25);\n    vec2 c = vec2(.8, .3);\n    vec2 c1 = vec2(.87, .25);\n    return triangle(uv, a, b, c)\n            + line(uv, CENTER, a1, WIDTH)\n            + line(uv, CENTER, b1, WIDTH)\n            + line(uv, CENTER, c1, WIDTH);\n}\n\nfloat boulangerite(vec2 uv){\n    vec2 a = vec2(.5);\n    vec2 a1 = vec2(.5, .65);\n    vec2 b = vec2(.2, .3);\n    vec2 b1 = vec2(.12, .25);\n    vec2 c = vec2(.8, .3);\n    vec2 c1 = vec2(.87, .25);\n    return triangle_outline(uv, a, b, c, WIDTH)\n            + line(uv, CENTER, a1, WIDTH)\n            + line(uv, CENTER, b1, WIDTH)\n            + line(uv, CENTER, c1, WIDTH)\n            - triangle(uv, a, b, c);\n}\n\n////\n//oxides and hydroxides\n////\n\nfloat boehmite(vec2 uv){\n    return triangle_outline(uv, vec2(.5), vec2(.2), vec2(.8, .2), WIDTH)\n            + triangle_outline(uv, vec2(.5), vec2(.2, .8), vec2(.8), WIDTH)\n                + line(uv, vec2(.5, .2), vec2(.5, .8), WIDTH); \n}\n\nfloat hydrargillite(vec2 uv){\n    return triangle(uv, vec2(.5), vec2(.2), vec2(.8, .2))\n            + triangle(uv, vec2(.5), vec2(.2, .8), vec2(.8)); \n}\n\nfloat diasporas(vec2 uv){\n    return triangle(uv, vec2(.5), vec2(.2), vec2(.8, .2))\n            + triangle_outline(uv, vec2(.5), vec2(.2, .8), vec2(.8), WIDTH)\n                + line(uv, vec2(.5, .2), vec2(.5, .8), WIDTH);\n}\n\nfloat corundum(vec2 uv){\n    float mult = 2.5;\n    vec2 uv0 = uv;\n    uv0.x *= mult;\n    vec2 center = vec2(CENTER.x*mult, CENTER.y);\n    return polygon_outline(uv0, 6, center, .6, 0., WIDTH*mult);\n}\n\nfloat chrysoberyl(vec2 uv){\n    float mult = 2.5;\n    vec2 uv0 = uv;\n    uv0.y *= mult;\n    vec2 center = vec2(CENTER.x, CENTER.y*mult);\n    return polygon_outline(uv0, 6, center, .6, 0., WIDTH*mult)\n            + line(uv, vec2(.5, .35), vec2(.5, .65), WIDTH);\n}\n\nfloat spinel(vec2 uv){\n    return polygon_outline(uv, 5, CENTER, .5, 0., WIDTH);\n}\n\nfloat ice(vec2 uv){\n    return circle_outline(uv, CENTER, RADIUS, WIDTH)\n            + clamp(\n                rect(uv, CENTER, vec2(WIDTH, .7), 0.)\n                + rect(uv, CENTER, vec2(WIDTH, .7), PI*.25)\n                + rect(uv, CENTER, vec2(WIDTH, .7), PI*.5)\n                + rect(uv, CENTER, vec2(WIDTH, .7), PI*.75),\n                0., 1.)\n            - circle(uv, CENTER, RADIUS - WIDTH/2.);\n}\n\nfloat hematite(vec2 uv){\n    float mult = 1.5;\n    uv.x *= mult;\n    vec2 center = vec2(CENTER.x*mult, CENTER.y);\n    return rect_outline(uv, center, SIZE, WIDTH, PI*.25);\n}\n\nfloat goethite(vec2 uv){\n    float off = SIZE.x/2. + WIDTH/2.;\n    return triangle(uv, vec2(CENTER.x - off, CENTER.y), vec2(CENTER.x + off, CENTER.y), vec2(.5, .9))\n            + triangle_outline(uv, vec2(CENTER.x - (off - WIDTH/2.), CENTER.y), vec2(CENTER.x + (off - WIDTH/2.), CENTER.y), vec2(.5, .1), WIDTH); \n}\n\nfloat ilmenite(vec2 uv){\n    float off = SIZE.x/2.;\n    return triangle_outline(uv, vec2(CENTER.x - (off - WIDTH/2.), CENTER.y), vec2(CENTER.x + (off - WIDTH/2.), CENTER.y), vec2(.5, .9), WIDTH)\n            + triangle(uv, vec2(CENTER.x - off, CENTER.y), vec2(CENTER.x + off, CENTER.y), vec2(.5, .1)); \n}\n\nfloat limonite(vec2 uv){\n    return circle(uv, CENTER, .15)\n            + rect(uv, CENTER, vec2(WIDTH, .7), 0.)\n            + rect(uv, CENTER, vec2(WIDTH, .7), PI*.25)\n            + rect(uv, CENTER, vec2(WIDTH, .7), PI*.5)\n            + rect(uv, CENTER, vec2(WIDTH, .7), PI*.75);\n}\n\nfloat magnetite(vec2 uv){\n    float mult = 1.5;\n    uv.x *= mult;\n    vec2 center = vec2(CENTER.x*mult, CENTER.y);\n    return rect(uv, center, SIZE, PI*.25);\n}\n\nfloat quartz(vec2 uv){\n    return triangle_outline(uv, vec2(.35, .3), vec2(.65, .3), vec2(.5, .8), WIDTH);\n}\n\nfloat opal(vec2 uv){\n    return triangle(uv, vec2(.35, .3), vec2(.65, .3), vec2(.5, .8));\n}\n\nfloat chalcedony(vec2 uv){\n    return triangle_outline(uv, vec2(.35, .3), vec2(.65, .3), vec2(.5, .8), WIDTH)\n            + circle(uv, vec2(.5, .45), 0.075);\n}\n\nfloat brownite(vec2 uv){\n    float mult = 1.5;\n    uv.y *= mult;\n    vec2 center = vec2(CENTER.x, CENTER.y*mult);\n    return rect_outline(uv, center, SIZE, WIDTH, PI*.25);\n}\n\nfloat hausmanite(vec2 uv){\n    float off = SIZE.y/2.;\n    return triangle_outline(uv, vec2(CENTER.x, CENTER.y - off), vec2(CENTER.x, CENTER.y  + off), vec2(.9, .5), WIDTH)\n            + triangle_outline(uv, vec2(CENTER.x, CENTER.y - off), vec2(CENTER.x, CENTER.y + off), vec2(.1, .5), WIDTH); \n}\n\nfloat manganite(vec2 uv){\n    float off = SIZE.y/2.;\n    return triangle_outline(uv, vec2(.1+WIDTH/2., .5), vec2(CENTER.x, CENTER.y  + off), vec2(.9-WIDTH/2., .5), WIDTH)\n            + triangle(uv, vec2(.1, .5), vec2(CENTER.x, CENTER.y - off), vec2(.9, .5)); \n}\n\nfloat pyrolusite(vec2 uv){\n    float mult = 1.5;\n    uv.y *= mult;\n    vec2 center = vec2(CENTER.x, CENTER.y*mult);\n    return rect(uv, center, SIZE, PI*.25);\n}\n\nfloat psilomelan(vec2 uv){\n    float off = SIZE.y/2.;\n    return triangle_outline(uv, vec2(CENTER.x, CENTER.y - off), vec2(CENTER.x, CENTER.y  + off), vec2(.9, .5), WIDTH)\n            + triangle_outline(uv, vec2(CENTER.x, CENTER.y - off), vec2(CENTER.x, CENTER.y + off), vec2(.1, .5), WIDTH)\n            + line(uv, vec2(.1, .5), vec2(.9, .5), WIDTH); \n}\n\nfloat columbite(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.3, .75), WIDTH, 0.)\n            + rect(uv, vec2(.5-.075, .5), vec2(.15, .75), 0.);\n}\n\nfloat loparite(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.3, .75), WIDTH, 0.)\n            + rect(uv, vec2(.5, .25), vec2(.3, .375), 0.);\n}\n\nfloat pyrochlore(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.3, .75), WIDTH, 0.)\n            + rect(uv, vec2(.5+.075, .5), vec2(.15, .75), 0.);\n}\n\nfloat tantalite(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.3, .75), WIDTH, 0.)\n            + rect(uv, vec2(.5, .75), vec2(.3, .375), 0.);\n}\n\nfloat cassiterite(vec2 uv){\n    return line(uv, vec2(.2, .7), vec2(.8, .7), WIDTH)\n            + line(uv, vec2(.2, .3), vec2(.8, .3), WIDTH)\n            + line(uv, vec2(.3, .2), vec2(.3, .8), WIDTH)\n            + line(uv, vec2(.7, .2), vec2(.7, .8), WIDTH);\n}\n\nfloat anatase(vec2 uv){\n    return circle_outline(uv, CENTER, RADIUS, WIDTH)\n            + circle(uv, CENTER, .075)\n            + clamp(\n                clamp(\n                    rect(uv, CENTER, vec2(WIDTH, .7), 0.)\n                    + rect(uv, CENTER, vec2(WIDTH, .7), PI*.5),\n                    0., 1.)\n                - circle(uv, CENTER, RADIUS - WIDTH/2.),\n                0., 1.);\n}\n\nfloat rutile(vec2 uv){\n    return circle_outline(uv, CENTER, RADIUS, WIDTH)\n            + clamp(\n                clamp(\n                    rect(uv, CENTER, vec2(WIDTH, .7), 0.)\n                    + rect(uv, CENTER, vec2(WIDTH, .7), PI*.5),\n                    0., 1.)\n                - circle(uv, CENTER, RADIUS - WIDTH/2.),\n                0., 1.);\n}\n\nfloat chrome_spinel(vec2 uv){\n    return rect_outline(uv, CENTER, SIZE, WIDTH, 0.)\n        + clamp(\n            rect(uv, CENTER, vec2(WIDTH, .9), PI*.25)\n            + rect(uv, CENTER, vec2(WIDTH, .9), PI*.75),\n            0., 1.)\n        - rect(uv, CENTER, SIZE, 0.);\n}\n\nfloat uraninite(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.3), WIDTH*2., 0.);\n}\n\n////\n//halides\n////\n\nfloat halite(vec2 uv){\n    return rect_outline(uv, CENTER, SIZE, WIDTH, 0.);\n}\n\nfloat carnallite(vec2 uv){\n    float len = length(SIZE);\n    return rect_outline(uv, CENTER, SIZE, WIDTH, 0.)\n            + rect(uv, CENTER, vec2(WIDTH, len), PI*.25)\n            + rect(uv, CENTER, vec2(WIDTH, len), PI*.75);\n}\n\nfloat silvin(vec2 uv){\n    float len = length(SIZE);\n    return rect_outline(uv, CENTER, SIZE, WIDTH, 0.)\n            + rect(uv, CENTER, vec2(WIDTH, len), PI*.25);\n}\n\nfloat fluorite(vec2 uv){\n    float len = length(SIZE);\n    return rect_outline(uv, CENTER, SIZE, WIDTH, 0.)\n            + rect_outline(uv, CENTER, SIZE/2., WIDTH, 0.)\n            + line(uv, vec2(.5, .25), vec2(.5, .625), WIDTH);\n}\n\n////\n//oxygen salts\n////\n\nfloat annabergite(vec2 uv){\n    return triangle_outline(uv, vec2(.2), vec2(.5, .8), vec2(.5, .2), WIDTH)\n            + circle(uv, vec2(.4, .3), .05);\n}\n\nfloat skorodite(vec2 uv){\n    float mult = 2.;\n    vec2 uv0 = uv;\n    uv0.x *= mult;\n    vec2 center = vec2(CENTER.x*mult, CENTER.y);\n    return polygon_outline(uv0, 6, center, .6, PI*.5, WIDTH*mult);\n}\n\nfloat erythrin(vec2 uv){\n    return triangle_outline(uv, vec2(.5-length(SIZE)/2., .5), vec2(.5+length(SIZE)/2., .5), vec2(.5, .5 + length(SIZE)/2.), WIDTH)\n            + circle(uv, vec2(.5, .65), .05);\n}\n\nfloat vanadinite(vec2 uv){\n    float len = length(SIZE)/2.;\n    float off = .075;\n    return line(uv, vec2(.5-off, .5+len+off), vec2(.5+len+off, .5-off), WIDTH)\n            + line(uv, vec2(.5-len-off, .5+off), vec2(.5+off, .5-len-off), WIDTH)\n            + line(uv, vec2(.5+off, .5+len+off), vec2(.5-len-off, .5-off), WIDTH)\n            + line(uv, vec2(.5+len+off, .5+off), vec2(.5-off, .5-len-off), WIDTH)\n            + line(uv, vec2(.5-len, .5), vec2(.5+len, .5), WIDTH);\n}\n\nfloat carnotite(vec2 uv){\n    return circle_segment(uv, CENTER, .3, .5, WIDTH*2., PI*.5)\n            + line(uv, vec2(.1, .5), vec2(.9, .5), WIDTH);\n}\n\nfloat apatite(vec2 uv){\n    return polygon_outline(uv, 6, CENTER, RADIUS*2., PI*.5, WIDTH);\n}\n\nfloat turquoise(vec2 uv){\n    float len = length(SIZE)/2.;\n    float off = .075;\n    return line(uv, vec2(.5-off, .5+len+off), vec2(.5+len+off, .5-off), WIDTH)\n            + line(uv, vec2(.5-len-off, .5+off), vec2(.5+off, .5-len-off), WIDTH)\n            + line(uv, vec2(.5+off, .5+len+off), vec2(.5-len-off, .5-off), WIDTH)\n            + line(uv, vec2(.5+len+off, .5+off), vec2(.5-off, .5-len-off), WIDTH);\n}\n\nfloat monazite(vec2 uv){\n    return line(uv, vec2(.2, .35), vec2(.8, .35), WIDTH)\n            + line(uv, vec2(.8, .35), vec2(.8, .65), WIDTH)\n            + line(uv, vec2(.8, .65), vec2(.325, .65), WIDTH)\n            + line(uv, vec2(.325, .65), vec2(.2, .35), WIDTH);\n}\n\nfloat othenit(vec2 uv){\n    return circle_segment(uv, CENTER, .3, .5, 1., PI*.5)\n            + line(uv, vec2(.1, .5), vec2(.9, .5), WIDTH);\n}\n\nfloat pyromorphite(vec2 uv){\n    float len = length(SIZE)/2.;\n    float off = .075;\n    return line(uv, vec2(.5-off, .5+len+off), vec2(.5+len+off, .5-off), WIDTH)\n            + line(uv, vec2(.5-len-off, .5+off), vec2(.5+off, .5-len-off), WIDTH)\n            + line(uv, vec2(.5+off, .5+len+off), vec2(.5-len-off, .5-off), WIDTH)\n            + line(uv, vec2(.5+len+off, .5+off), vec2(.5-off, .5-len-off), WIDTH)\n            + circle(uv, CENTER, .05);\n}\n\nfloat asharite(vec2 uv){\n    return circle_outline(uv, vec2(.5, .65), .15, WIDTH)\n            + circle_outline(uv, vec2(.5, .35), .15, WIDTH);\n}\n\nfloat boracite(vec2 uv){\n    return circle(uv, vec2(.5, .65), .15)\n            + circle(uv, vec2(.5, .35), .15);\n}\n\nfloat boronatro_calcite(vec2 uv){\n    return circle(uv, CENTER, .15);\n}\n\nfloat bura(vec2 uv){\n    return circle_outline(uv, vec2(.65, .65), .15, WIDTH)\n            + circle_outline(uv, vec2(.35, .65), .15, WIDTH)\n            + circle_outline(uv, vec2(.5, .38), .15, WIDTH);\n}\n\nfloat hydroboracite(vec2 uv){\n    return circle(uv, vec2(.35, .5), .15)\n            + rect(uv, vec2(.5, .65), vec2(WIDTH, RADIUS), PI*.75);\n}\n\nfloat colemanite(vec2 uv){\n    return circle_outline(uv, CENTER, .15, WIDTH)\n            + circle(uv, CENTER, 0.075);\n}\n\nfloat pandermite(vec2 uv){\n    return circle_outline(uv, vec2(.5, .65), .15, WIDTH)\n            + circle(uv, vec2(.5, .65), .075)\n            + circle_outline(uv, vec2(.5, .35), .15, WIDTH)\n            + circle(uv, vec2(.5, .35), .075);\n}\n\nfloat wolframite(vec2 uv){\n    return line(uv, vec2(.15, .7), vec2(.45, .3), WIDTH)\n            + line(uv, vec2(.45, .3), vec2(.75, .7), WIDTH)\n            + line(uv, vec2(.3, .7), vec2(.6, .3), WIDTH)\n            + line(uv, vec2(.6, .3), vec2(.9, .7), WIDTH);\n}\n\nfloat wulferite(vec2 uv){\n    return triangle_outline(uv, vec2(.5, .2), vec2(.225, .2), vec2(.225, .8), WIDTH)\n            + triangle_outline(uv, vec2(.5, .2), vec2(.775, .2), vec2(.775, .8), WIDTH);\n}\n\nfloat scheelite(vec2 uv){\n    return line(uv, vec2(.15, .7), vec2(.45, .3), WIDTH)\n            + line(uv, vec2(.45, .3), vec2(.75, .7), WIDTH)\n            + line(uv, vec2(.3, .7), vec2(.6, .3), WIDTH)\n            + line(uv, vec2(.6, .3), vec2(.9, .7), WIDTH)\n            + circle(uv, vec2(.525, .425), .05);\n}\n\nfloat alunite(vec2 uv){\n    return triangle_outline(uv, CENTER, vec2(.35, .8), vec2(.65, .8), WIDTH)\n            + triangle_outline(uv, CENTER, vec2(.35, .2), vec2(.65, .2), WIDTH);\n}\n\nfloat potassium_alum(vec2 uv){\n    return triangle_outline(uv, CENTER, vec2(.35, .8), vec2(.65, .8), WIDTH)\n            + triangle_outline(uv, CENTER, vec2(.35, .2), vec2(.65, .2), WIDTH)\n            + circle(uv, CENTER, .1);\n}\n\nfloat barite(vec2 uv){\n    float mult = 1.5;\n    vec2 uv0 = uv;\n    uv0.x *= mult;\n    vec2 center = vec2(CENTER.x*mult, CENTER.y);\n    return rect(uv0, center, SIZE, PI*.25)\n            + line(uv, vec2(.275, .5), vec2(.1, .8), WIDTH)\n            + line(uv, vec2(.275, .5), vec2(.1, .2), WIDTH)\n            + line(uv, vec2(.725, .5), vec2(.9, .8), WIDTH)\n            + line(uv, vec2(.725, .5), vec2(.9, .2), WIDTH);\n}\n\nfloat witherite(vec2 uv){\n    float mult = 1.5;\n    vec2 uv0 = uv;\n    uv0.x *= mult;\n    vec2 center = vec2(CENTER.x*mult, CENTER.y);\n    return rect_outline(uv0, center, SIZE, WIDTH, PI*.25)\n            + line(uv, vec2(.275, .5), vec2(.1, .8), WIDTH)\n            + line(uv, vec2(.275, .5), vec2(.1, .2), WIDTH)\n            + line(uv, vec2(.725, .5), vec2(.9, .8), WIDTH)\n            + line(uv, vec2(.725, .5), vec2(.9, .2), WIDTH);\n}\n\nfloat rhodochrosite(vec2 uv){\n    float mult = 1.5;\n    vec2 uv0 = uv;\n    uv0.y *= mult;\n    vec2 center = vec2(CENTER.x, CENTER.y*mult);\n    return rect_outline(uv0, center, SIZE, WIDTH, PI*.25)\n            + circle(uv, CENTER, 0.05);\n}\n\nfloat siderite(vec2 uv){\n    float mult = 1.5;\n    vec2 uv0 = uv;\n    uv0.x *= mult;\n    vec2 center = vec2(CENTER.x*mult, CENTER.y);\n    return rect_outline(uv0, center, SIZE, WIDTH, PI*.25)\n            + circle(uv, CENTER, 0.05);\n}\n\nfloat kieserite(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.6), WIDTH, 0.)\n            + line(uv, vec2(.5, .2), vec2(.5, .8), WIDTH)\n            + circle(uv, CENTER, 0.065);\n}\n\nfloat mirabilite(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.6), WIDTH, 0.)\n            + line(uv, vec2(.2, .8), vec2(.8, .2), WIDTH)\n            + circle(uv, CENTER, 0.065);\n}\n\nfloat polyhalite(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.6), WIDTH, 0.)\n            + line(uv, vec2(.2, .8), vec2(.8, .2), WIDTH)\n            + line(uv, vec2(.2, .2), vec2(.8, .8), WIDTH)\n            + circle(uv, CENTER, 0.065);\n}\n\nfloat thenardite(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.6), WIDTH, 0.)\n            + circle(uv, CENTER, 0.065);\n}\n\nfloat epsomite(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.6), WIDTH, 0.)\n            + line(uv, vec2(.2, .2), vec2(.8, .8), WIDTH)\n            + circle(uv, CENTER, 0.065);\n}\n\nfloat potassium_kalium(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.6), WIDTH, 0.)\n            + line(uv, vec2(.2, .5), vec2(.8, .5), WIDTH)\n            + circle_outline(uv, CENTER, 0.065, WIDTH)\n            - circle(uv, CENTER, 0.065-WIDTH/2.);\n}\n\nfloat potassium_nitrate(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.6), WIDTH, 0.)\n            + line(uv, vec2(.5, .2), vec2(.5, .8), WIDTH)\n            + circle_outline(uv, CENTER, 0.065, WIDTH)\n            - circle(uv, CENTER, 0.065-WIDTH/2.);\n}\n\nfloat soda(vec2 uv){\n    return rect_outline(uv, CENTER, vec2(.6), WIDTH, 0.)\n            + circle_outline(uv, CENTER, 0.065, WIDTH);\n}\n\nfloat anhydrite(vec2 uv){\n    return circle_segment(uv, vec2(.5, .1), .5, .25, WIDTH*2., PI*.25)\n            + line(uv, vec2(.15, .45), vec2(.5, .8), WIDTH)\n            + line(uv, vec2(.85, .45), vec2(.5, .8), WIDTH);\n}\n\nfloat aragonite(vec2 uv){\n    vec2 a = vec2(.2, .35);\n    vec2 b = vec2(.4, .65);\n    vec2 c = vec2(.65, .35);\n    vec2 d = vec2(.85, .65);\n    float radius = 0.06;\n    return line(uv, a, b, WIDTH)\n            + line(uv, b, c, WIDTH)\n            + line(uv, c, d, WIDTH)\n            + line(uv, a, c, WIDTH)\n            + line(uv, b, d, WIDTH);\n}\n\nfloat gypsum(vec2 uv){\n    return circle_segment(uv, vec2(.5, .9), .5, .25, WIDTH*2., PI*1.25)\n            + line(uv, vec2(.15, .55), vec2(.5, .2), WIDTH)\n            + line(uv, vec2(.85, .55), vec2(.5, .2), WIDTH);\n}\n\nfloat dolonitis(vec2 uv){\n    return triangle_outline(uv, vec2(.3, .35), vec2(.7, .35), vec2(.5, .65), WIDTH)\n            + line(uv, vec2(.5, .65), vec2(.6, .825), WIDTH);\n}\n\nfloat calcite(vec2 uv){\n    vec2 a = vec2(.2, .35);\n    vec2 b = vec2(.4, .65);\n    vec2 c = vec2(.65, .35);\n    vec2 d = vec2(.85, .65);\n    float radius = 0.06;\n    return line(uv, a, b, WIDTH)\n            + line(uv, c, d, WIDTH)\n            + line(uv, a, c, WIDTH)\n            + line(uv, b, d, WIDTH);\n}\n\nfloat magnesite(vec2 uv){\n    vec2 a = vec2(.2, .35);\n    vec2 b = vec2(.4, .65);\n    vec2 c = vec2(.65, .35);\n    vec2 d = vec2(.85, .65);\n    float radius = 0.06;\n    return line(uv, a, b, WIDTH)\n            + line(uv, c, d, WIDTH)\n            + line(uv, a, c, WIDTH)\n            + line(uv, b, d, WIDTH)\n            + line(uv, a, d, WIDTH);\n}\n\nfloat azurite(vec2 uv){\n    return triangle_outline(uv, vec2(.2), vec2(.8, .2), vec2(.5, .8), WIDTH)\n            + circle_outline(uv, vec2(.5, .4), .075, WIDTH);\n}\n\nfloat malachite(vec2 uv){\n    return triangle_outline(uv, vec2(.2), vec2(.8, .2), vec2(.5, .8), WIDTH)\n            + circle(uv, vec2(.5, .4), .075);\n}\n\nfloat anglesite(vec2 uv){\n    return triangle(uv, vec2(.2, .5), vec2(.8, .5), vec2(.5, .8))\n            + triangle_outline(uv, vec2(.2, .5), vec2(.8, .5), vec2(.5, .2), WIDTH);\n}\n\nfloat cerussite(vec2 uv){\n    return triangle_outline(uv, vec2(.2, .5), vec2(.8, .5), vec2(.5, .8), WIDTH)\n            + triangle(uv, vec2(.2, .5), vec2(.8, .5), vec2(.5, .2));\n}\n\nfloat strontianite(vec2 uv){\n    float mult = 1.5;\n    vec2 uv0 = uv;\n    uv0.y *= mult;\n    vec2 center = vec2(CENTER.x, CENTER.y*mult);\n    return rect_outline(uv0, center, SIZE, WIDTH, PI*.25)\n            + line(uv, vec2(.5, .275), vec2(.1, .1), WIDTH)\n            + line(uv, vec2(.5, .275), vec2(.9, .1), WIDTH)\n            + line(uv, vec2(.5, .725), vec2(.1, .9), WIDTH)\n            + line(uv, vec2(.5, .725), vec2(.9, .9), WIDTH)\n            + circle(uv, CENTER, 0.075);\n}\n\nfloat celestine(vec2 uv){\n    float mult = 1.5;\n    vec2 uv0 = uv;\n    uv0.y *= mult;\n    vec2 center = vec2(CENTER.x, CENTER.y*mult);\n    return rect_outline(uv0, center, SIZE, WIDTH, PI*.25)\n            + line(uv, vec2(.5, .275), vec2(.1, .1), WIDTH)\n            + line(uv, vec2(.5, .275), vec2(.9, .1), WIDTH)\n            + line(uv, vec2(.5, .725), vec2(.1, .9), WIDTH)\n            + line(uv, vec2(.5, .725), vec2(.9, .9), WIDTH);\n}\n\nfloat smithsonite(vec2 uv){\n    return polygon_outline(uv, 6, CENTER, RADIUS*2., 0., WIDTH)\n            + circle_outline(uv, CENTER, 0.075, WIDTH);\n}\n\n\n////\n//main\n////\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec3 color = vec3(0.0);\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float patternMask = rect(uv, vec2(0.5), vec2(1.0), -2.);\n    \n    vec2 grid = uv * float(GRID_N);\n    uv = fract(grid);\n    \n    color += set_ceil(grid, 0, 0) * vec3(hornblende(uv));\n    color += set_ceil(grid, 0, 1) * vec3(anthophyllite(uv));\n    color += set_ceil(grid, 0, 2) * vec3(arfvedsonite(uv));\n    color += set_ceil(grid, 0, 3) * vec3(actinolite(uv));\n    color += set_ceil(grid, 0, 4) * vec3(glaucophane(uv));\n    color += set_ceil(grid, 0, 5) * vec3(tremolite(uv));\n\n    color += set_ceil(grid, 1, 0) * vec3(almandine(uv));\n    color += set_ceil(grid, 1, 1) * vec3(andradite(uv));\n    color += set_ceil(grid, 1, 2) * vec3(pyrope(uv));\n    \n    color += set_ceil(grid, 2, 0) * vec3(diamond(uv));\n    color += set_ceil(grid, 2, 1) * vec3(bismud(uv));\n    color += set_ceil(grid, 2, 2) * vec3(graphite(uv));\n    color += set_ceil(grid, 2, 3) * vec3(copper(uv));\n    color += set_ceil(grid, 2, 4) * vec3(arsenic(uv));\n    color += set_ceil(grid, 2, 5) * vec3(nevyaskit(uv));\n    color += set_ceil(grid, 2, 6) * vec3(platinum(uv));\n    color += set_ceil(grid, 2, 7) * vec3(sulfur(uv));\n    color += set_ceil(grid, 2, 8) * vec3(sysertskit(uv));\n    \n    color += set_ceil(grid, 3, 0) * vec3(bismuth(uv));\n    color += set_ceil(grid, 3, 1) * vec3(pyrite(uv));\n    color += set_ceil(grid, 3, 2) * vec3(pyrrhotite(uv));\n    color += set_ceil(grid, 3, 3) * vec3(glaucodot(uv));\n    color += set_ceil(grid, 3, 4) * vec3(cobaltin(uv));\n    color += set_ceil(grid, 3, 5) * vec3(smaltin(uv));\n    color += set_ceil(grid, 3, 6) * vec3(bornite(uv));\n    color += set_ceil(grid, 3, 7) * vec3(covelline(uv));\n    color += set_ceil(grid, 3, 8) * vec3(tennantitis(uv));\n    color += set_ceil(grid, 3, 9) * vec3(tetrahedrite(uv));\n    \n    color += set_ceil(grid, 4, 0) * vec3(chalcosine(uv));\n    color += set_ceil(grid, 4, 1) * vec3(chalcopyrite(uv));\n    color += set_ceil(grid, 4, 2) * vec3(molebdenite(uv));\n    color += set_ceil(grid, 4, 3) * vec3(arsenopyrite(uv));\n    color += set_ceil(grid, 4, 4) * vec3(orpiment(uv));\n    color += set_ceil(grid, 4, 5) * vec3(lellingite(uv));\n    color += set_ceil(grid, 4, 6) * vec3(realgar(uv));\n    color += set_ceil(grid, 4, 7) * vec3(millerite(uv));\n    color += set_ceil(grid, 4, 8) * vec3(nickeline(uv));\n    color += set_ceil(grid, 4, 9) * vec3(pentlandite(uv));\n\n    color += set_ceil(grid, 5, 0) * vec3(chloanitis(uv));\n    color += set_ceil(grid, 5, 1) * vec3(sperrylite(uv));\n    color += set_ceil(grid, 5, 2) * vec3(cinnabar(uv));\n    color += set_ceil(grid, 5, 3) * vec3(metacin_nabarite(uv));\n    color += set_ceil(grid, 5, 4) * vec3(galena(uv));\n    color += set_ceil(grid, 5, 5) * vec3(antimonite(uv));\n    color += set_ceil(grid, 5, 6) * vec3(boulangerite(uv));\n    \n    color += set_ceil(grid, 6, 0) * vec3(boehmite(uv));\n    color += set_ceil(grid, 6, 1) * vec3(hydrargillite(uv));\n    color += set_ceil(grid, 6, 2) * vec3(diasporas(uv));\n    color += set_ceil(grid, 6, 3) * vec3(corundum(uv));\n    color += set_ceil(grid, 6, 4) * vec3(chrysoberyl(uv));\n    color += set_ceil(grid, 6, 5) * vec3(spinel(uv));\n    color += set_ceil(grid, 6, 6) * vec3(ice(uv));\n    color += set_ceil(grid, 6, 7) * vec3(hematite(uv));\n    color += set_ceil(grid, 6, 8) * vec3(goethite(uv));\n    color += set_ceil(grid, 6, 9) * vec3(ilmenite(uv));\n    \n    color += set_ceil(grid, 7, 0) * vec3(limonite(uv));\n    color += set_ceil(grid, 7, 1) * vec3(magnetite(uv));\n    color += set_ceil(grid, 7, 2) * vec3(quartz(uv));\n    color += set_ceil(grid, 7, 3) * vec3(opal(uv));\n    color += set_ceil(grid, 7, 4) * vec3(chalcedony(uv));\n    color += set_ceil(grid, 7, 5) * vec3(brownite(uv));\n    color += set_ceil(grid, 7, 6) * vec3(hausmanite(uv));\n    color += set_ceil(grid, 7, 7) * vec3(manganite(uv));\n    color += set_ceil(grid, 7, 8) * vec3(pyrolusite(uv));\n    color += set_ceil(grid, 7, 9) * vec3(psilomelan(uv));\n    \n    color += set_ceil(grid, 8, 0) * vec3(columbite(uv));\n    color += set_ceil(grid, 8, 1) * vec3(loparite(uv));\n    color += set_ceil(grid, 8, 2) * vec3(pyrochlore(uv));\n    color += set_ceil(grid, 8, 3) * vec3(tantalite(uv));\n    color += set_ceil(grid, 8, 4) * vec3(cassiterite(uv));\n    color += set_ceil(grid, 8, 5) * vec3(anatase(uv));\n    color += set_ceil(grid, 8, 6) * vec3(rutile(uv));\n    color += set_ceil(grid, 8, 7) * vec3(chrome_spinel(uv));\n    color += set_ceil(grid, 8, 8) * vec3(uraninite(uv));\n    \n    color += set_ceil(grid, 9, 0) * vec3(halite(uv));\n    color += set_ceil(grid, 9, 1) * vec3(carnallite(uv));\n    color += set_ceil(grid, 9, 2) * vec3(silvin(uv));\n    color += set_ceil(grid, 9, 3) * vec3(fluorite(uv));\n    \n    color += set_ceil(grid, 10, 0) * vec3(annabergite(uv));\n    color += set_ceil(grid, 10, 1) * vec3(skorodite(uv));\n    color += set_ceil(grid, 10, 2) * vec3(erythrin(uv));\n    color += set_ceil(grid, 10, 3) * vec3(vanadinite(uv));\n    color += set_ceil(grid, 10, 4) * vec3(carnotite(uv));\n    color += set_ceil(grid, 10, 5) * vec3(apatite(uv));\n    color += set_ceil(grid, 10, 6) * vec3(turquoise(uv));\n    color += set_ceil(grid, 10, 7) * vec3(monazite(uv));\n    color += set_ceil(grid, 10, 8) * vec3(othenit(uv));\n    color += set_ceil(grid, 10, 9) * vec3(pyromorphite(uv));\n    \n    color += set_ceil(grid, 11, 0) * vec3(asharite(uv));\n    color += set_ceil(grid, 11, 1) * vec3(boracite(uv));\n    color += set_ceil(grid, 11, 2) * vec3(boronatro_calcite(uv));\n    color += set_ceil(grid, 11, 3) * vec3(bura(uv));\n    color += set_ceil(grid, 11, 4) * vec3(hydroboracite(uv));\n    color += set_ceil(grid, 11, 5) * vec3(colemanite(uv));\n    color += set_ceil(grid, 11, 6) * vec3(pandermite(uv));\n    color += set_ceil(grid, 11, 7) * vec3(wolframite(uv));\n    color += set_ceil(grid, 11, 8) * vec3(wulferite(uv));\n    color += set_ceil(grid, 11, 9) * vec3(scheelite(uv));\n    \n    color += set_ceil(grid, 12, 0) * vec3(alunite(uv));\n    color += set_ceil(grid, 12, 1) * vec3(potassium_alum(uv));\n    color += set_ceil(grid, 12, 2) * vec3(barite(uv));\n    color += set_ceil(grid, 12, 3) * vec3(witherite(uv));\n    color += set_ceil(grid, 12, 4) * vec3(rhodochrosite(uv));\n    color += set_ceil(grid, 12, 5) * vec3(siderite(uv));\n    color += set_ceil(grid, 12, 6) * vec3(kieserite(uv));\n    color += set_ceil(grid, 12, 7) * vec3(mirabilite(uv));\n    color += set_ceil(grid, 12, 8) * vec3(polyhalite(uv));\n    color += set_ceil(grid, 12, 9) * vec3(thenardite(uv));\n    \n    color += set_ceil(grid, 13, 0) * vec3(epsomite(uv));\n    color += set_ceil(grid, 13, 1) * vec3(potassium_kalium(uv));\n    color += set_ceil(grid, 13, 2) * vec3(potassium_nitrate(uv));\n    color += set_ceil(grid, 13, 3) * vec3(soda(uv));\n    color += set_ceil(grid, 13, 4) * vec3(anhydrite(uv));\n    color += set_ceil(grid, 13, 5) * vec3(aragonite(uv));\n    color += set_ceil(grid, 13, 6) * vec3(gypsum(uv));\n    color += set_ceil(grid, 13, 7) * vec3(dolonitis(uv));\n    color += set_ceil(grid, 13, 8) * vec3(calcite(uv));\n    color += set_ceil(grid, 13, 9) * vec3(magnesite(uv));\n    \n    color += set_ceil(grid, 14, 0) * vec3(azurite(uv));\n    color += set_ceil(grid, 14, 1) * vec3(malachite(uv));\n    color += set_ceil(grid, 14, 2) * vec3(anglesite(uv));\n    color += set_ceil(grid, 14, 3) * vec3(cerussite(uv));\n    color += set_ceil(grid, 14, 4) * vec3(strontianite(uv));\n    color += set_ceil(grid, 14, 5) * vec3(celestine(uv));\n    color += set_ceil(grid, 14, 6) * vec3(smithsonite(uv));\n    \n    color = vec3(1.) - color;\n    \n    // * patternMask * mod(floor(grid.x), 2.);\n    \n    fragColor = vec4(color, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}