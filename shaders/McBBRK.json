{
    "Shader": {
        "info": {
            "date": "1725180379",
            "description": "Experiment 01\n1 month learning the technology",
            "flags": 0,
            "hasliked": 0,
            "id": "McBBRK",
            "likes": 0,
            "name": "sh-01",
            "published": 3,
            "tags": [
                "basic",
                "experimental"
            ],
            "usePreview": 0,
            "username": "Valinor",
            "viewed": 71
        },
        "renderpass": [
            {
                "code": "float Circle(vec2 uv, vec2 p, float r, float blur) {\n\n    float d = length(uv - p);\n    float c = smoothstep(r, r-blur, d);\n    \n    return c;\n}\n\nfloat Face(vec2 uv, vec2 p, float size) {\n\n    uv -= p; // translate coordinate system\n    uv /= size; // scale\n\n    // make a circle \n    float mask = Circle(uv, vec2(.0, -.0), .4, .01);\n\n    \n    // circle out of original\n    mask += Circle(uv, vec2(-.5, -.2), .1, .01);\n    \n    // in (face start)\n    //eyes\n    mask -= Circle(uv, vec2(.2, .15), .1, .01);\n    mask -= Circle(uv, vec2(-.2, .15), .1, .01);\n    // nouse\n    mask -= Circle(uv, vec2(.0, -.07), .07, .01);\n    // mouth\n    float mouth = Circle(uv, vec2(0.), .3, .02);\n    mouth -= Circle(uv, vec2(.0, .1), .3, .02);\n    mask -= mouth;\n    \n    return mask;\n}\n\nfloat Band(float t, float start, float end, float blur) {\n\n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    \n    return step1*step2;\n}\n\nfloat Rectangle(vec2 uv, float left, float right, float bottom, float top, float blur) {\n\n    float band1 = Band(uv.x, left, right, blur); \n    float band2 = Band(uv.y, bottom, top, blur); \n    \n    return band1*band2;\n}\n\nfloat remap01(float a, float b, float t) {\n    return (t-a) / (b-a);   \n}\n\nfloat remap(float a, float b, float c, float d, float t) {\n    return remap01(a, b, t) * (d-c) + c;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    float t = iTime;\n    \n    // 0 left - 1 right\n    // fragColor = vec4(0., uv.x,0.,1.0);\n    \n    // 0 bottom - 1 top\n    // fragColor = vec4(0., 0., uv.y,1.0);\n\n    // green leftTop - red rightBottom\n    \n    // uv on center\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    \n    // create a color\n    vec3 color = vec3(0.);\n    \n    // float mask = Face(uv, vec2(0.), .5);\n    \n    // rectangle\n    float mask = 0.;\n    \n    float x = uv.x;\n    \n    float m = sin(t+x*8.) * .1;\n    float y = uv.y-m;\n    \n    float blur = remap(-.5, .5, .01, .25, x);\n    blur = pow(blur*4., 3.); \n    \n    mask = Rectangle(vec2(x,y), -.5, .5, -.1, .1, blur);\n    \n    // includes the circle\n    color = vec3(1., 0., 1.) * mask;\n    // color = vec3(mouth);\n\n    \n    fragColor = vec4(vec3(mask), 1.0);\n\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}