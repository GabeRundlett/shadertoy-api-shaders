{
    "Shader": {
        "info": {
            "date": "1724897569",
            "description": "Here is my implementation of a method described in the paper \"On Smooth Fractal Coloring Techniques\" by Jussi Härkönen.",
            "flags": 0,
            "hasliked": 0,
            "id": "Mf2fD1",
            "likes": 10,
            "name": "Fiberbrot Zoom",
            "published": 3,
            "tags": [
                "fractal",
                "mandelbrot",
                "shading",
                "atan",
                "wayout"
            ],
            "usePreview": 0,
            "username": "BearKirb",
            "viewed": 157
        },
        "renderpass": [
            {
                "code": "vec3 IterateMandelbrot(vec2 c)\n{\n    const float B = 1e15, n_skip = 2.0;\n    float n = 0.0,orbitToReal = 0.0, prevOrbitToReal = 0.0;;\n    vec2 z  = c;\n    for( int i=0; i<900; i++ ){\n        z = vec2( z.x*z.x - z.y*z.y, (2.0*z.x*z.y) ) + c; \n          if (n>n_skip)  orbitToReal +=1.0-abs(sin(5.0*atan(z.y,z.x)));\nif( dot(z,z)>(B) ) break;\n        prevOrbitToReal = orbitToReal, n += 1.0;\n    }\n    if(n<900.0){\n         orbitToReal /= n-n_skip,prevOrbitToReal /= n-n_skip-1.0; \n            float u = n+1.0+(log(2.0*log(B)/log(z.x*z.x+z.y*z.y))/log(2.0)), d = u-float(int(u)), average = d*orbitToReal+(1.0-d)*prevOrbitToReal; \n    return  vec3(u,average,0.0);  \n    }else{\nreturn vec3(0.0);  }}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2  uv = -1.0*(gl_FragCoord.xy-iResolution.xy*0.5)/-iResolution.x;\n\tvec3 background = vec3(0.1);\t\n\tuv*=2.3,uv.x-=0.5;\nvec3 li=vec3(-iMouse.x*2.3-0.5,iMouse.y*2.3,1.0);\nfloat eps=0.0001, sc=sqrt((iTime+200.0)/2.0);\nvec3 t=IterateMandelbrot(uv/(pow(1.002,cos(iTime/9.0+3.1415)*3500.0+5500.0))*100.0+vec2(0.4369387,0.3765258)), dir=vec3(t.x);\nfloat l=log(2.0), a=1.0*l, b=1.0/(3.0*sqrt(2.0))*l, c=1.0/(7.0*pow(3.0,1.0/8.0))*l, x=log(log(t.x))/0.05+18.0;\nfragColor.rgb = (vec3((1.0-cos(a*x))/2.0,(1.0-cos(b*x))/2.0,(1.0-cos(c*x))/2.0)*0.4+vec3(0.01))+max((t.y*1.0-0.4)*2.0,-0.9)+(log(t.x)/20.0)*1.5;\nfragColor.a=1.0;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}