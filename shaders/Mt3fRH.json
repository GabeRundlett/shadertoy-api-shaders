{
    "Shader": {
        "info": {
            "date": "1538582206",
            "description": "Attempt at implementing a polar gradient.",
            "flags": 0,
            "hasliked": 0,
            "id": "Mt3fRH",
            "likes": 7,
            "name": "Polar Gradient",
            "published": 3,
            "tags": [
                "test",
                "gradient",
                "polar",
                "practice"
            ],
            "usePreview": 0,
            "username": "BeardThings",
            "viewed": 508
        },
        "renderpass": [
            {
                "code": "vec2 toGrid(float r, float a)\n{\n    return vec2(cos(a), sin(a)) * r;\n}\n\nvec2 c = vec2(0.0, 0.0);\nfloat r = 0.5;\nvec2 f = vec2(0.0, 0.0);\n\nvec2 intersect(vec2 o, vec2 d, vec2 c, float r)\n{\n    vec2 p = o + d * dot(c - o, d);\n    float dc = length(p - c);\n    float l = sqrt(r * r - dc * dc);\n    return p + d * l;\n}\n\nfloat amount(vec2 uv)\n{   \n    vec2 d = intersect(f, normalize(uv - f), c, r);\n    \n    float l = distance(d, f);\n    float r = distance(uv, f);\n    \n    return min(r / l, 1.0);\n}\n\nfloat points(vec2 uv)\n{\n    float cp = ceil(min((length(uv - c) - 0.01), 1.0));\n    float fp = ceil(min((length(uv - f) - 0.01), 1.0));\n    float h = pow(1.0 - abs(r - length(uv - c)), 100.0);\n    return 1.0 - min(fp, cp);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    f = iMouse.xy / iResolution.xy * 2.0 - 1.0;\n    f.y *= iResolution.y / iResolution.x;\n    \n    f = c + normalize(f - c) * min(distance(f, c), r);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    uv.y *= iResolution.y / iResolution.x;\n\n    vec4 c = texture(iChannel0, vec2(amount(uv)));\n    \n    // Output to screen\n    fragColor = c + points(uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}