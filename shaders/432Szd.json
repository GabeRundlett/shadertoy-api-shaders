{
    "Shader": {
        "info": {
            "date": "1710956991",
            "description": "Heat equation: add iterated Laplacian.\n( replacing with -= 0.001*  instead would augment contrast, but easily explode ).",
            "flags": 32,
            "hasliked": 0,
            "id": "432Szd",
            "likes": 4,
            "name": "relaxation by Laplacian /Heat eq",
            "published": 3,
            "tags": [
                "texture",
                "curvature",
                "laplacian",
                "differential"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 240
        },
        "renderpass": [
            {
                "code": "// fork of \"Texture curvature (Laplacian)\" https://shadertoy.com/view/ls2BDt\n\nvoid mainImage(out vec4 O, vec2 U) {\n    O = T(U);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage(out vec4 O, vec2 U) {\n    O = T(U);\n    \n    O += .1 * ( // Laplacian\n                  ( T(U+vec2(1,0)) + T(U+vec2(-1,0)) + T(U+vec2(0,1)) + T(U+vec2(0,-1)) ) /4. \n                  - O \n               );\n               \n    if (iFrame<10) O = texture(iChannel1,U/iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define T(U)    texelFetch( iChannel0, ivec2(U) % textureSize(iChannel0,0).xy, 0 )\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}