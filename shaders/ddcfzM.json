{
    "Shader": {
        "info": {
            "date": "1696967217",
            "description": "it rainbow now!",
            "flags": 0,
            "hasliked": 0,
            "id": "ddcfzM",
            "likes": 3,
            "name": "2d waves grid (rainbow!!)",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "The_Snek12",
            "viewed": 185
        },
        "renderpass": [
            {
                "code": "#define EPSILON 0.01\n#define RED vec3(1, 0,0)\nfloat circle(vec2 uv, vec2 pos, float r){\n    return smoothstep(r+EPSILON, r, length(uv+pos));\n}\nvec2 getpos(vec2 id, vec2 offset){\n    \n    return vec2( cos((iTime+offset.x+id.x)*2.))/2.+offset;\n    //return vec2(cos(iTime*(offset.x+id.x)), sin(iTime*(offset.y+id.y)))/2.+offset;\n}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return smoothstep(.05 , 0.04,length( pa - ba*h ));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.xy)*10.-5.;\n    uv.x *= iResolution.x/iResolution.y;\n    vec3 col = vec3(0);\n   //col += sdSegment(localuv, vec2(1,-1)/2., vec2(1,1)/2.) * vec3(1,0,0);\n   //col += sdSegment(localuv, vec2(-1,1)/2., vec2(1,1)/2.)* vec3(1,0,0);\n       \n    \n    \n    \n    for(float depth = 10.; depth>1.; depth--){\n       \n        \n        \n        \n        vec2 id = floor(uv);\n        \n        \n        vec2 localuv = fract(uv)-.5;\n        \n        vec2 p[9];\n        \n        \n        int i = 0;\n        \n        \n        for(int x = -1; x < 2; x+=1){\n           for(int y = -1; y < 2; y+=1){\n               p[i++] = getpos(id, vec2(x,y));\n               \n               \n           }\n        }\n        \n        vec3 segColor = 0.5 + 0.5*cos(iTime+(uv.xyx/4.)+vec3(0,2,4));\n        \n        for (i=0; i<9; i++){\n            col += circle(localuv, -p[i], 0.10) * vec3(1,1,1);\n            col += sdSegment(localuv, p[4], p[i]) * segColor;\n        \n        }\n        col += sdSegment(localuv, p[1], p[3])* segColor;\n        col += sdSegment(localuv, p[1], p[5])* segColor;\n        col += sdSegment(localuv, p[3], p[7])* segColor;\n        col += sdSegment(localuv, p[5], p[7])* segColor;\n        col *=1.5/depth;\n        uv /= 1.1;\n    }\n    \n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}