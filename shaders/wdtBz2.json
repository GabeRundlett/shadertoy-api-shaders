{
    "Shader": {
        "info": {
            "date": "1605605984",
            "description": "This is a circularly reduced version of the timewipe effect used in tiktok.",
            "flags": 34,
            "hasliked": 0,
            "id": "wdtBz2",
            "likes": 1,
            "name": "Circular Time Wipe",
            "published": 3,
            "tags": [
                "webcam"
            ],
            "usePreview": 0,
            "username": "IWBTShyGuy",
            "viewed": 804
        },
        "renderpass": [
            {
                "code": "// The MIT License\n// Copyright Â© 2020 IWBTShyGuy\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float wide = max(iResolution.x, iResolution.y);\n    float narrow = min(iResolution.x, iResolution.y);\n    float asp = wide / narrow;\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 pos = (uv - 0.5) * iResolution.xy / wide;\n    float r = 1.0 / asp - (iTime - START_RAG) * VELOCITY;\n    float len = abs(r - length(pos));\n    if (len < THICKNESS) {\n        float c = 1.0 - len / (THICKNESS * 2.0);\n        fragColor = vec4(c * c * c, c * c, c, 1.0);\n    } else fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float wide = max(iResolution.x, iResolution.y);\n    float narrow = min(iResolution.x, iResolution.y);\n    float asp = wide / narrow;\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 pos = (uv - 0.5) * iResolution.xy / wide;\n    float r = 1.0 / asp - (iTime - START_RAG) * VELOCITY;\n    if (length(pos) < r)\n        fragColor = texture(iChannel0, uv);\n    else\n        fragColor = texture(iChannel1, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "const float START_RAG = 5.0;\nconst float VELOCITY = 0.1;\nconst float THICKNESS = 0.01;",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}