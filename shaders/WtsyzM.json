{
    "Shader": {
        "info": {
            "date": "1591704333",
            "description": "Boolean operator sextended to continuum:\n- as probability ( or \"fuzzy logic\" )     ( isovalue 0.5 in red )\n- as set operators\nAttention: A&B are supposed uncorrelated,  and (A|B) vs !(A&B)  are not, so it's easy to get it wrong (e.g. Xor \"variant\" )",
            "flags": 0,
            "hasliked": 0,
            "id": "WtsyzM",
            "likes": 26,
            "name": "continuous bool as proba or sets",
            "published": 3,
            "tags": [
                "xor",
                "boolean",
                "bitwise",
                "and",
                "fuzzylogic"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 615
        },
        "renderpass": [
            {
                "code": "#define S(v)  smoothstep(7./R.y,0.,v)\n\nfloat char(vec2 p, int c) { // from https://www.shadertoy.com/view/llySRh\n    vec2 dFdx = dFdx(p/16.), dFdy = dFdy(p/16.);\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return 0.;\n\treturn textureGrad( iChannel3, p/16. + fract( vec2(c, 15-c/16) / 16. ), \n                        dFdx, dFdy ).x;\n}\n#define C(c)  ( F.x-=.5, char(F,c) )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    O -= O;\n    vec2 R = iResolution.xy,\n         U = 4.*u/R.y, F;                          // layout\n    U.x -= 1.;   U.y -= .2; if (U.y<0.) U.y = 0.;\n    if (U.y>3.2) U.y += .3;\n    if (U.y>1.)  U.y>1.5 ? U.y -= .5 : U.y = 0.;\n    \n    int  x = int(U)-int(U.x<0.), y = int(U.y);     // cell indexs \n    F = fract(U);                                  // cell local coords\n\n    float A = F.x, B = 1.-F.y, b;                  // axis proba\n    A = -.05+1.1*A;                                // layout\n    B = -.05+1.1*B;\n    if ( x<0 || x>4 || A<0.||A>1. || B<0.||B>1. ) { O.b+=.3; return; }\n            \n    if (x>0 && abs(U.y-2.5)<.05) O += A;           // display axis B proba\n    else if (x>0 && abs(U.y-2.2)<.2) {             // display formulas\n       F.y -= .1; F*=6.;\n        O +=   x==1 ? F.x-=1.5, C(65)+C(42)+C(66)               // A*B\n             : x==2 ? C(65)+C(43)+C(66)+C(45)+C(65)+C(42)+C(66) // A+B-A*B\n             : x==3 ? C(65)+C(43)+C(66)+C(45)+C(50)+C(65)+C(42)+C(66) // A+B-2A*B\n             :        C(65)+C(124)+C(66)+C(38)+C(33)+C(40)+C(65)+C(38)+C(66)+C(41);\n    }                                                           // A|B&!(A&B)\n    else if (y==1)\n        O +=   x==0 ? abs(U.x-.5)<.05 ? B : 0.     // display axis A proba\n             : x==1 ? A*B                          // A & B\n             : x==2  ? A+B-A*B                     // A | B\n             : x==3  ? A+B-2.*A*B                  // A ^ B  with correl\n             : (A+B-A*B)*(1.-A*B);                 // A ^ B  without correl\n    else if (y==0 && x>0 ) {                       // --- sets operators\n        A = length(F-.6)-.35;\n        B = length(F-.4)-.35;\n        b = S(abs(A)) + S(abs(B));\n        A = S(A);\n        B = S(B);\n        O +=   x==1 ?  A*B       + .6*b            // A & B\n             : x==2 ?  A+B-A*B   -.4*b             // A | B\n             :        (A+B-A*B)*(1.-A*B);          // A ^ B\n    }\n    else if (y==3 && x>0) {                        // --- text title\n        F = 2.*F; F.x-=.5;\n        O +=   x==1 ? char(F, 38)                  // &\n             : x==2 ? char(F,124)                  // |\n             :        char(F, 94);                 // ^\n    }\n    else if (x==0 && y==2) \n               F-=.1, F.x-=.25, \n               O += char(3.*(F-.25),66) + char(3.*F,65);\n        \n    O.r += S(abs(O.x-.5));                         // isovalue 0.5 in red     \n    if (O.x==0.) O.b+=.3;                          // background\n    else if (x==4) O.gb -= .3;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}