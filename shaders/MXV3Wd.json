{
    "Shader": {
        "info": {
            "date": "1718452254",
            "description": "Modify someone else's code",
            "flags": 0,
            "hasliked": 0,
            "id": "MXV3Wd",
            "likes": 0,
            "name": "modify",
            "published": 3,
            "tags": [
                "modify"
            ],
            "usePreview": 0,
            "username": "pestxo",
            "viewed": 86
        },
        "renderpass": [
            {
                "code": "/* This animation is the material of my first youtube tutorial about creative \n   coding, which is a video in which I try to introduce programmers to GLSL \n   and to the wonderful world of shaders, while also trying to share my recent \n   passion for this community.\n                                       Video URL: https://youtu.be/f4s1h2YETNY\n*/\n\n//https://iquilezles.org/articles/palettes/\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n//https://www.shadertoy.com/view/mtyGWy\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0); // 初始化 finalColor 为黑色\n\n    for (float i = 0.0; i < 4.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.4 + iTime*.4);\n\n        d = sin(d*8. + iTime)/16.;\n        d = abs(d);\n\n        // 使用 exp 和 log 来计算幂\n        d = exp(5.0 * log(0.01 / d)); // 等价于 pow(0.01 / d, 5.0)\n\n        // 使用 gl_FragCoord 计算每个像素的位置\n        vec2 pixelPos = fragCoord / iResolution.xy;\n\n        // 根据 d 的值决定是否绘制点\n        if (d > 0.5) { \n            finalColor += col * d; \n        } \n    }\n        \n    fragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}