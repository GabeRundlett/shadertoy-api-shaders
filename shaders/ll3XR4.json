{
    "Shader": {
        "info": {
            "date": "1478358231",
            "description": "2d",
            "flags": 0,
            "hasliked": 0,
            "id": "ll3XR4",
            "likes": 1,
            "name": "2D Metacircles",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "jonathansty",
            "viewed": 586
        },
        "renderpass": [
            {
                "code": "const float force = 4000.0;\n\nconst bool bDebug = false;\n\nfloat length2(vec2 d){ return dot(d,d);}\nfloat saturate(float i){ return clamp(i,0.0,1.0);}\nfloat metaball(vec2 fragcoord, vec2 pos,float f)\n{\n    return f/length2((fragcoord - pos));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n    vec2 middle = iResolution.xy/2.0;\n    float r = 90.0 + sin(iTime)*25.0;\n    float b = metaball(fragCoord, vec2(middle.x + cos(iTime)*r,middle.y + sin(iTime)*r),force);\n\t\n    b += metaball(fragCoord, vec2(middle.x, middle.y),force);\n    \n    b -= metaball(fragCoord,vec2(100,0),4.0*force);\n    b -= metaball(fragCoord,middle + vec2(100,0),force*2.0);\n\tvec4 c = vec4(0);\n    if( b < 0.8)\n        c = vec4(1.0*abs(b*b*b),1.0*abs(b*b*b),abs(b)*0.2,1);\n    else\n        c = vec4(0.2*b,0.2*b,b,1.0);    \n\n    fragColor = c;\n    if(bDebug)\n    \tfragColor = vec4(abs(b),b,b,1.0);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}