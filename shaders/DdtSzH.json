{
    "Shader": {
        "info": {
            "date": "1679401831",
            "description": "colors",
            "flags": 0,
            "hasliked": 0,
            "id": "DdtSzH",
            "likes": 9,
            "name": "playing around with colors",
            "published": 3,
            "tags": [
                "colors"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 282
        },
        "renderpass": [
            {
                "code": "vec3 f_o_rgb_from_o_hsl(in vec3 c)\n{\n\tvec3 rgb = clamp(abs(mod(c.x+vec3(0.,4.,2.),6.)-3.)-1.,0.,1.);\n\treturn c.z+c.y*(rgb-0.5)*(1.-abs(2.*c.z-1.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor  = vec4(0.);\n    \n    float n_tau = 6.2831;\n    vec2 o_trn_fc_nor = (fragCoord.xy -iResolution.xy*.5)/ iResolution.y;\n    \n    float n_d = length(o_trn_fc_nor);\n    // n_d *= n_d*n_d*n_d;\n    float n_d_circ = abs(n_d-.5);\n    n_d_circ = pow(n_d_circ, 1./2.);\n\n    float n_its = 35.;\n    float n_circs = 6.;\n    vec3 o_col = vec3(0.);\n    // float n_ang = atan(o_trn_fc_nor.y, o_trn_fc_nor.x);\n    // float n_ang_nor = (n_ang/n_tau)+.5;\n    // float n_ang_nor_snapped = 1./ floor(n_ang_nor / (1./6.));\n    float n_max = 0.;\n    float n_dci = 0.;\n    vec3 o_col_sum = vec3(0.);\n    for(float n_it = 0.; n_it < n_its; n_it+=1.){\n        float n_it_nor = n_it / n_its;\n        float n_ang = n_it_nor*n_tau*n_circs;\n        n_ang += iTime*n_it_nor;\n        float n_circ_nor = floor(n_it_nor*n_circs)/n_circs;\n\n        float n_radius = n_it_nor*0.4;\n        float n_dcntr = length(o_trn_fc_nor);\n        vec3 o_col_it = f_o_rgb_from_o_hsl(\n            vec3(n_it_nor*n_tau, n_dcntr*20., .5)\n        );\n        vec2 o_p = vec2(\n            sin(n_ang)*n_radius,\n            cos(n_ang)*n_radius\n        );\n        float n_radius2 = 1.;\n        float n_d2 = length((o_trn_fc_nor-o_p)*n_radius2);\n        // n_d *= n_d*n_d*n_d;\n        float n_radius3 = n_it_nor*sin(n_it_nor*n_tau+iTime)*.05;\n        float n_d2_circ = abs(n_d2-n_radius3);\n        n_d2_circ = pow(n_d2_circ, 1./2.);\n        n_d2_circ = 1.-n_d2_circ;\n        \n        // n_d2_circ = pow(n_d2_circ, 1./((sin(iTime+n_it)*.5+.5)+1.));\n        if(n_d2_circ  > n_max){\n            n_max = n_d2_circ;\n            o_col = vec3(1.)*n_d2_circ;\n\n        }\n        o_col_sum += o_col_it * n_d2_circ;\n\n    }\n\n    fragColor = vec4(o_col_sum*0.1*o_col*o_col*o_col*1.2, 1.);\n    fragColor = sqrt(fragColor);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}