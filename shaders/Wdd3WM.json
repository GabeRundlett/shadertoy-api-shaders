{
    "Shader": {
        "info": {
            "date": "1568678295",
            "description": "based on [url=https://www.shadertoy.com/view/WdSSDz]Log Triangular Voronoi Lighted[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "Wdd3WM",
            "likes": 13,
            "name": "Log Triangular Voronoi Lighted 2",
            "published": 3,
            "tags": [
                "voronoi",
                "2",
                "triangular",
                "lighted"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 537
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2019 (twitter:@aiekick)\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Tuned via NoodlesPlate (https://github.com/aiekick/NoodlesPlate/releases)\n\n// thumbail at 14.95\n\nconst vec3 color0 = vec3(0.224071,0.115035,0.348214);\nconst vec3 color1 = vec3(0.6,1.1,1.6);\nconst vec3 lightColor = vec3(0.751786,1.6,0.6);\n\nvec3 shape(vec2 g)\n{\n\tfloat c = 9.0;\n    \t\n    float t = iTime;\n\tfloat t1 = t * 0.1;\n\t\n\tvec2 p = vec2(0), sp = p;\n\t\n    g = vec2(log(length(g))-t, atan(g.x,g.y));\n        \n    float t2 = sin(t*0.2)*0.5+0.5;\n        \n    g.y = abs(fract(g.y/6.28318*(10.*t2+2.))-0.5);\n\n    for(int x=-2;x<=2;x++)\n    for(int y=-2;y<=2;y++)\n    {\t\n        p = vec2(x,y);\n        p += .5 + .5*sin( t1 * 10. + 9. * fract(sin((floor(g)+p)*mat2(2,5,5,2)))) - fract(g);\n        p *= mat2(cos(t1), -sin(t1), sin(t1), cos(t1));\n        float d = max(abs(p.x)*.866 - p.y*.5, p.y);\n        if (d < c)\n        {\n            c = d;\n            sp = p;\n        }\n    }\n\n    return vec3(c,sp);\n}\n\nvec3 getColor(vec2 uv, float t)\n{\n    float k = 0.01;\n\tvec3 f = shape(uv);\n\tfloat fx = (f.x-shape(uv + vec2(k,0.0)).x)/k;\n\tfloat fy = (f.x-shape(uv + vec2(0.0, k)).x)/k;\n\t\n    vec3 n = normalize(vec3(0,0,1) - vec3(fx, fy, k) * 0.5);\n\t\n\tvec3 col = mix( color0, color1, f.x );\n\n    float r = sin(t+f.y)*cos(t+f.z)*0.5+0.5;\n\tcol = mix(col.rgb, mix(col.brg, col.gbr, r), 1.0-r);\n    \n\tcol += 0.5 * pow(max(dot( n, vec3(0,0,1)), 0.), 16.) * lightColor;\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy)/iResolution.y;\n\n\tfragColor = vec4( getColor(uv, iTime), 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}