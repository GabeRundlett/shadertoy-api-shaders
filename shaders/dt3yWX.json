{
    "Shader": {
        "info": {
            "date": "1720715011",
            "description": "Click & Drag!\n[url=https://www.shadertoy.com/playlist/fXjyRd]GEOMETRY PLAYLIST[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "dt3yWX",
            "likes": 18,
            "name": "Spheronoi III",
            "published": 3,
            "tags": [
                "voronoi",
                "flat",
                "glitch",
                "cell",
                "tessellation"
            ],
            "usePreview": 1,
            "username": "domrally",
            "viewed": 161
        },
        "renderpass": [
            {
                "code": "/*\nby Dom Mandy in 2024\n*/\n\n// rotation\nvec3 r(vec3 V, float a) {\n    V.xz = vec2(cos(a += atan(V.z, V.x)), sin(a)) * length(V.xz);\n    return V;\n}\n\nvoid mainImage(out vec4 M, vec2 C) {\n    // animation\n    M = iMouse;\n    float l, i, p,\n          n = 9.,\n          a = mix(iTime / 3., M.x / 2e2, sign(M.z));\n    vec3 P, X, N,\n         R = iResolution,\n         F = r(vec3(0, 0, 1), a),\n         E = r(vec3(1.1 * (C + C - R.xy) / R.y, -1), a),\n         L = r(normalize(vec3(1, 2, 3)), a);\n\n    // surface normals\n    for(; i < 256.;)\n        if (n > (p = dot(X -= F * dot(P *= sign(p = dot(P /= length(P = texture(iChannel0, vec2(iTime / 2e3, i++ / 256.)).rgb - .5), F)), X = P - E) / abs(p), X)))\n            n = p, N = P;\n\n    // lighting\n    l = pow(max(max(.9 * dot(L, N), .04), -dot(F, reflect(L, N))), inversesqrt(dot(F, N)));\n    M = sqrt(l + (l - l * l * l) * cos(atan(N.z, N.x) - vec4(0, 2, 4, 6)));\n}\n\n\n/*\nSEE ALSO\n\nhttps://en.wikipedia.org/wiki/Voronoi_diagram\nhttps://en.wikipedia.org/wiki/Line%E2%80%93plane_intersection\n*/\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}