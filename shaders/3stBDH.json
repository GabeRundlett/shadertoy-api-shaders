{
    "Shader": {
        "info": {
            "date": "1605008645",
            "description": "Visuals inspired by https://www.youtube.com/watch?v=Jrb5PqiDMSY\nSong is https://www.youtube.com/watch?v=Pum5IuGtWbc\nVideo can be found here https://youtu.be/RLAqQn2vqcM\n",
            "flags": 64,
            "hasliked": 0,
            "id": "3stBDH",
            "likes": 16,
            "name": "Emerald retrowave clip",
            "published": 3,
            "tags": [
                "synth",
                "chill",
                "retrowave",
                "system96",
                "lucyindisguise"
            ],
            "usePreview": 0,
            "username": "z0rg",
            "viewed": 697
        },
        "renderpass": [
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\n#define sat(a) clamp(a, 0., 1.)\nvec3 pink = (vec3(255, 59, 98)/255.);\nvec3 blue = vec3(59, 154, 255)/255.;\nmat2 r2d(float a) { float ca = cos(a), sa = sin(a); return mat2(ca, sa, -sa, ca);}\n\nfloat lenny(vec2 uv)\n{\n    return abs(uv.x)+abs(uv.y);\n}\n\nfloat sdLoz(vec2 uv, float sz)\n{\n    return lenny(uv)-sz;\n}\n\nfloat sdSqr(vec2 uv, vec2 sz)\n{\n    vec2 q = abs(uv)-sz;\n    return max(q.x,q.y);\n}\n\nfloat bars(vec2 uv)\n{\n    vec2 ouv = uv;\n    float rep = 0.08;\n\tfloat idx = float(int((uv.x+rep*.5)/rep));\n    uv.x = mod(uv.x+rep*.5, rep)-rep*.5;\n    float h = texelFetch(iChannel0, ivec2(int((idx+8.5)*7.), 0), 0).x;\n    float sqr = sdSqr(uv, vec2(.00001,.1+.2*h));\n    return max(sqr, -(abs(uv.y)-.05));\n}\n\nvec2 myPixel(vec2 uv, float sz)\n{\n    vec2 uv2 = uv/sz;\n    \n    return  vec2(float(int(uv2.x)), float(int(uv2.y)))*sz;\n}\n\nvec3 rdrPix(vec2 uv)\n{\n    vec3 col;\n    uv = myPixel(uv, 0.1);\n    float beat = texelFetch(iChannel0, ivec2(25,0),0).x;\n    float patt = sin((55.*(abs(uv.x)+beat*.05+uv.y)-iTime*10.)*(1.+abs(uv.y)*.01));\n    col = mix(col, vec3(.5,.2,.9), sat((patt-.99)*iResolution.x));\n    col += (vec3(.2,.7,.3))*0.+blue*(sat((patt-.5)*.5));\n    return col;\n}\n\nvec3 rdrLoz(vec2 uv)\n{\n    vec2 ouv = uv;\n    uv *= 15.;\n    uv = myPixel(uv, 0.025);\n    uv.y += sin(uv.x*5.+iTime)*.5;\n    vec3 col;\n    vec3 a = vec3(255,98,14)/255.;\n    vec3 b = vec3(255,239,88)/255.;\n    vec3 c = vec3(91,222,150)/255.;\n    if (uv.y < 0.)\n        col = mix(b, c, sat(abs(uv.y)));\n    else\n        col = mix(b, a, sat(uv.y));\n    float f = iResolution.x/10.;\n    float sz = .99;\n    col *= 1.-sat((sin(ouv.x*f)-sz)*iResolution.x*.1);\n    col *= .5+1.-sat((sin(ouv.y*f)-sz)*iResolution.x*.1);\n    return col;\n    \n}\n\nvec3 rdr(vec2 uv)\n{\n    vec3 col;\n    \n    // Back bars\n    vec2 uvBar = uv;\n    uvBar.x += -sign(uvBar.x)*pow(sat(abs(uvBar.x)), .2)*abs(uvBar.y);\n    float bar = bars(uvBar);\n    col = mix(col, vec3(1.), 1.-sat(bar*iResolution.x));\n\n    col += (vec3(255, 59, 216)/255.)*pow((1.-sat(bar*1.)), 10.)*.5;\n    col += mix(pink, blue, pow(sat(abs(uv.y*5.)),5.))*pow((1.-sat(bar*5.)), 20.);\n    col *= (uv.y < 0. ? 1.-abs(uv.y*5.) : 1.0);\n    \n    vec2 uvLz = uv;\n    float lz = sdLoz(uvLz, .15);\n    \n    \n    vec3 pixCol = rdrPix(uv);\n    col += pixCol*(1.-sat(lz*2.))*texelFetch(iChannel0, ivec2(25,0),0).x;\n    \n\tcol = mix(col, col+rdrLoz(uv), 1.-sat(lz*iResolution.x*.01));\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-vec2(.5)*iResolution.xy)/iResolution.xx;\n\tuv *= 1.5;\n    uv *= sin(iTime*.4)*.2+.8;\n\n    vec3 col = rdr(uv);\n\n\tcol = pow(col, vec3(mix(.45,1.45,sat(lenny(uv)))));\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 24533,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/systemninesix/emerald-w-lucy-in-disguise"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}