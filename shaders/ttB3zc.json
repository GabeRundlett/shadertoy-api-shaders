{
    "Shader": {
        "info": {
            "date": "1560508805",
            "description": "My attempt at a round bordered voronoi. It isn't perfect.\nhttps://www.shadertoy.com/view/3d2SRh",
            "flags": 0,
            "hasliked": 0,
            "id": "ttB3zc",
            "likes": 7,
            "name": "voronoi round distance",
            "published": 3,
            "tags": [
                "voronoi",
                "round"
            ],
            "usePreview": 1,
            "username": "abje",
            "viewed": 490
        },
        "renderpass": [
            {
                "code": "\nvec2 hash2(vec2 p) {\n    ivec2 q = ivec2(floor(mod(p,256.0)));\n    return texelFetch(iChannel0,q,0).xy;\n}\n\nvec2 hash(vec2 p) {\n    float t  = iTime;\n    float t1 = fract(t);\n    float t2 = floor(t);\n    \n    ivec2 q = ivec2(floor(mod(p+vec2(37,17)*t2,256.0)));\n    ivec2 q2 = ivec2(floor(mod(p+vec2(37,17)*(t2+1.0),256.0)));\n    vec4 c = texelFetch(iChannel0,q,0);\n    vec4 c2 = texelFetch(iChannel0,q2,0);\n    \n    return mix(c.ga,c2.ga,t1);\n}\n\nfloat voronoi(vec2 p, float r) {\n    \n    vec2 fp = floor(p);\n    float d = 1000.0;\n    vec2 ncell;\n    vec2 ncpos;\n    \n    for (float x = -1.0; x <= 1.0; x++)\n    for (float y = -1.0; y <= 1.0; y++)\n    {\n        vec2 cell = fp+vec2(x,y);\n        vec2 pos = cell+hash(cell);\n        \n        float l = length(p-pos);\n        \n        if (l < d) {\n            d = l;\n            ncell = cell;\n            ncpos = pos;\n        }\n        \n    }\n    \n    float len1 = -100.0;\n    float len2 = -100.0;\n    vec2 dir1;\n    vec2 dir2;\n    float s1;\n    float s2;\n    \n    p -= ncpos;\n    for (float x = -2.0; x <= 2.0; x++)\n    for (float y = -2.0; y <= 2.0; y++)\n    {\n        if (x!=0.0||y!=0.0) {\n            vec2 cell = ncell+vec2(x,y);\n            vec2 pos = cell+hash(cell);\n            \n            vec2 n = pos-ncpos;\n            \n            float a = length(n);\n            \n            n /= a;\n            \n            float s = a*0.5-r;\n            \n            float l = dot(p,n)-s;\n            \n            if (l > len2) {\n                if (l > len1) {\n                    len2 = len1;\n                    dir2 = dir1;\n                    s2 = s1;\n\n                    len1 = l;\n                    dir1 = n;\n                    s1 = s;\n                } else {\n                    len2 = l;\n                    dir2 = n;\n                    s2 = s;\n                }\n            }\n            \n            \n        }\n    }\n    \n    float len4;\n\n    if (len2 > 0.0) {\n        vec2 dir3 = vec2(dir1.y,-dir1.x);\n        vec2 dir4 = vec2(dir2.y,-dir2.x);\n\n        vec2 q = p-len1*dir1;\n\n        float l = max(dot(q,dir2)-s2,0.0);\n\n        q += dir3*l/dot(dir3,dir2);\n\n        len4 = length(q-p);\n    } else {\n        len4 = len1;\n    }\n    \n    return len4;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = 2.0;\n    vec2 uv = scale*(fragCoord*2.0-iResolution.xy)/iResolution.y;\n    vec2 muv = scale*(iMouse.xy*2.0-iResolution.xy)/iResolution.y;\n    float aa = iResolution.y/scale*0.4;\n    \n    float l = voronoi(uv, 0.2)-0.1;\n    \n    vec3 col = vec3(1.0) - sign(l)*vec3(0.1,0.4,0.7);\n    col *= 1.0 - exp(-2.0*abs(l));\n    col *= 0.8 + 0.2*cos(120.0*abs(l));\n    col = mix( col, vec3(1.0), 1.0-smoothstep(0.0,1.0,abs(l)*aa) );\n\n    // Output to screen\n    fragColor = vec4(sqrt(col),1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}