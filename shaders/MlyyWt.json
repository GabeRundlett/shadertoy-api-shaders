{
    "Shader": {
        "info": {
            "date": "1538085996",
            "description": "Rays 'come in' from the left and are solved in under 32 steps.\n\nOn the top half are the steps each ray takes with 'hotter' rows getting more yellow with each step. Bottom shows the scanline. Mouseclick places rogue circle.",
            "flags": 0,
            "hasliked": 0,
            "id": "MlyyWt",
            "likes": 1,
            "name": "Distance Field Step Vis",
            "published": 3,
            "tags": [
                "distancefield"
            ],
            "usePreview": 0,
            "username": "JeroenDStout",
            "viewed": 429
        },
        "renderpass": [
            {
                "code": "float sampleCircle( vec2 origin, vec2 point )\n{\n    return length(origin - point) - 0.1;\n}\n\nfloat sampleBox( vec2 origin, mat2x2 orient, vec2 point )\n{\n    vec2 rel = (point - origin);\n    float relDist = length(rel);\n    \n    if (relDist > 0.3) {\n        return relDist - 0.2;\n    }\n    \n    rel *= orient;\n    \n    return max(abs(rel.x), abs(rel.y)) - 0.1;\n}\n\nfloat baseCombine( float a, float b )\n{\n    return min(a, b);\n}\n\nfloat combineZand( float a, float b)\n{\n    float k = .1;\n    float h = max( k-abs(a-b), 0.0 );\n    return min( a, b ) - h*h*0.25/k;\n}\n\nfloat sampleDistanceField( vec2 point, vec2 mouse, float time )\n{\n    float dist = 9999.;\n    \n    float circRot = time / 5. * 3.;\n    float circRot2 = time / 7. * 6.;\n    \n    dist = baseCombine(dist, sampleCircle(vec2(sin(circRot) + 1.8, -cos(circRot)) * .2, point));\n    dist = baseCombine(dist, sampleCircle(vec2(cos(circRot) + 1.4, sin(circRot)) * .2, point));\n    \n    dist = combineZand(sampleCircle(vec2(sin(circRot) + 1.8, -cos(circRot)) * .2, point),\n                       sampleCircle(vec2(cos(circRot2) + 1.4, sin(circRot2)) * .1, point) );\n    dist = baseCombine(dist, sampleCircle(mouse, point));\n    \n    float  r = 0.4;\n    mat2x2 box = mat2x2( cos(r), -sin(r),\n        \t\t         sin(r),  cos(r) );\n    dist = baseCombine(dist, sampleBox(vec2(-0.3, -0.1), box, point));\n    \n     r = -0.4;\n    box = mat2x2( cos(r), -sin(r),\n        \t\t  sin(r),  cos(r) );\n    dist = baseCombine(dist, sampleBox(vec2(-0.3, -0.1), box, point));\n    \n     r = -0.25 + time / 3. * 2.;\n    box = mat2x2( cos(r), -sin(r),\n        \t\t  sin(r),  cos(r) );\n    dist = baseCombine(dist, sampleBox(vec2(-0.3, 0.4), box, point));\n    \n    // enable this to over-step\n    //if (dist > 0.)\n    //    dist *= 1.2;\n    \n    return dist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 aspect = vec2(iResolution.x/iResolution.y, 1.0);\n    \n\tuv = (2.0 * uv - 1.0) * aspect * 0.5;\n    vec2 mouse = ((iMouse.xy / iResolution.xy) - .5) * aspect;\n    \n    float val = sampleDistanceField( uv, mouse, iTime );\n    \n    if (val >= 0.) {\n        float mVal = mod(val, .1) + 0.2;\n        fragColor.xyz = pow(vec3(0.8, 0.85, 0.7), vec3(mVal*25.)) * 1.5;\n    }\n    \n    float hRow = (1. - 2. * mod(iTime * .1, 1.)) * 0.3;\n    \n    float sampleRow = uv.y;\n    float graphVal = 1. - (uv.y + 0.3) / -0.2;\n    \n    if (uv.y < -0.3) {\n        sampleRow = hRow;\n    }\n    \n    float curPoint = -1.;\n    vec3 stepColour;\n    float dist = 9999.;\n    for (int i = 0; i < 32; i++) {\n        dist = sampleDistanceField( vec2(curPoint, sampleRow), mouse, iTime );\n        dist *= 1.0;\n        \n        curPoint += dist;\n        if (abs(uv.x - curPoint) < 5e-3) {\n            stepColour.x = pow(0.5, float(i) *-0.5) * .1;\n            stepColour.y = pow(0.9, float(i) *-0.5) * .2;\n            stepColour.z = pow(0.99, float(i) *-0.5) * .5;\n            fragColor.xyz += stepColour;\n        }\n        if (abs(dist) < 5e-3)\n            break;\n    }\n    \n    if (abs(hRow - uv.y) < 2e-3) {\n        if (uv.x < curPoint)\n        \tfragColor.x = 1.;\n        else\n        \tfragColor.z = 1.;\n    }\n    if (curPoint < uv.x) {\n        fragColor.xyz *= .7;//+= stepColour;\n    }\n    \n    if (uv.y < -0.3) {\n        \n        fragColor.xyz = vec3(graphVal);\n    \n        val = sampleDistanceField( vec2(uv.x, hRow), mouse, iTime );\n        \n        float valError = val * val;\n        \n        if (graphVal - 0.2 < val * 5.0) {\n            fragColor.xyz = vec3(1. - val, 0.3, .3);\n            if (val < 0.) {\n                fragColor.xyz += vec3(0.1, 0.1, 0.1);\n            }\n        }\n        else {\n            fragColor.xyz = vec3(0., 0., 0.);\n        }\n        if (graphVal < 0.2) {\n            fragColor.xyz += vec3(0.1, 0.4, 0.1);\n        }\n        \n        fragColor.xyz += stepColour;\n    }\n        \n    fragColor.w = 1.;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}