{
    "Shader": {
        "info": {
            "date": "1542826313",
            "description": "click with mouse for reset",
            "flags": 32,
            "hasliked": 0,
            "id": "ltVBWm",
            "likes": 13,
            "name": "Chaos Fluid",
            "published": 3,
            "tags": [
                "fluid",
                "chaos"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 837
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n    fragColor = 0.5 + 0.5 * sin((fragColor.z + fragColor.w) * vec4(10,12,10,1));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec4 getTexture(sampler2D sam, vec2 g, vec2 p, vec2 s)\n{\n\tvec2 gp = g+p;\n\t\n\tif (gp.x >= s.x) gp.x = gp.x - s.x;\n\tif (gp.y >= s.y) gp.y = gp.y - s.y;\n\tif (gp.x < 0.0) gp.x = s.x + gp.x;\n\tif (gp.y < 0.0) gp.y = s.y + gp.y;\n\t\n\treturn texture(sam, gp / s);\n}\n\nvec4 getState(sampler2D sam, vec2 g, vec2 s, float n)\n{\n\tvec4 p = vec4(0);\n\tfor (float i=0.;i<n;i++)\n\t{\n        p = getTexture(sam, g, -p.xy, s);\n\t}\n\treturn p;\n}\n\n/*float line(vec2 v, vec2 p0, vec2 p1)\n{\n\tvec2 a = v - p0;\n\tvec2 b = p1 - p0;\n\tfloat h = clamp(dot(a,b)/dot(b,b),0.,1.);\n\treturn length(a-b*h);\n}*/\n\n#define tex(p) getTexture(iChannel0, g, p, s)\n#define emit(v,k) if (length(g-(s * (0.5 + v))) < 5.) f.x = k, f.w = 1.\n\n#define frameStep 10000.\n\nvoid mainImage( out vec4 f, vec2 g )\n{\n    float frame = float(iFrame);\n\t//frame = mod(frame, frameStep);\n\t\n\tvec2 s = iResolution.xy;\n\t\n\tvec4 r = tex(vec2(1,0));\n    vec4 t = tex(vec2(0,1));\n    vec4 l = tex(vec2(-1,0));\n    vec4 b = tex(vec2(0,-1));\n        \n    vec2 v = g/s;\n    \n    // pifometre :)\n    vec2 c = sin(v * 6.28318)*.5+.5;\n    float cc = c.x + c.y;\n    \n\tf = getState(iChannel0, g, s, cc * 2. + 1.);\n    \n    f.xy += vec2(r.z - l.z, t.z - b.z);\n    \n\tvec4 dp = (r + t + l + b)/4.;\t\t\t\n\tfloat div = ((l-r).x + (b-t).y)/20.;\t\n\t\n    f.z = dp.z - div;\t\t\t\t\t\n    \n    emit(vec2(-0.45,0.),50.0);\n    emit(vec2(0.45,0.),-50.0);\n    \n\tif (frame < 2. || iMouse.z > 0.) f *= 0.;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}