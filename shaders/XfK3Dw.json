{
    "Shader": {
        "info": {
            "date": "1712849085",
            "description": "radar",
            "flags": 0,
            "hasliked": 0,
            "id": "XfK3Dw",
            "likes": 1,
            "name": "Radar002",
            "published": 3,
            "tags": [
                "radar"
            ],
            "usePreview": 0,
            "username": "marcellix",
            "viewed": 100
        },
        "renderpass": [
            {
                "code": "vec4 circle(vec2 uv, vec2 pos, float rad)\n{\n    float d = length(pos - uv) - rad;\n\n    float t = 1.0 - clamp(d, 0.0, 1.0);\n\n    float dist = (rad) - distance(uv, pos);\n    dist = clamp(dist * 0.01, 0.0, 1.0);\n    t -= dist;\n\n    return vec4(t);\n}\n\n// Assuming `iMouse.z` becomes non-zero upon clicking.\n// Declare a global variable to track the start time of the animation.\nfloat startTime = -1.0;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = fragCoord.xy;\n\n    // Check if there has been a mouse click and initialize startTime.\n    if (iMouse.z > 0.0 && startTime < 0.0) {\n        startTime = iTime;\n    }\n\n    // Calculate the time elapsed since the click. If no click has happened, this will be negative and we can skip the animation.\n    float elapsedTime = iTime - startTime;\n\n    if (elapsedTime >= 0.0) {\n        vec2 origin = iMouse.xy; // Origin of the wave is the mouse position.\n\n        // Adjust the calculation of time and radius to use elapsedTime.\n        float time = elapsedTime * 1.0;\n        float iTime = floor(time);\n        float fTime = time - iTime;\n\n        float radius = fTime * (iResolution.y * 0.5);\n\n        vec2 uv2 = uv - origin;\n        uv2 /= iResolution.xy;\n        uv2 *= vec2(2, 2);\n\n        vec4 col = circle(uv, origin, radius);\n        col *= 1.0 - fTime;\n\n        // Set the wave color to white\n        fragColor = col * vec4(1.0, 1.0, 1.0, 1.0);\n    } else {\n        // If there hasn't been a click, or before the first click, display a static background or clear color.\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0); // Black, for example.\n    }\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}