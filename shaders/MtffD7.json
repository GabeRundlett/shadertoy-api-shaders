{
    "Shader": {
        "info": {
            "date": "1555797393",
            "description": "strange mandelbrot effect",
            "flags": 0,
            "hasliked": 0,
            "id": "MtffD7",
            "likes": 1,
            "name": "Pearlbrot",
            "published": 3,
            "tags": [
                "mandelbrot"
            ],
            "usePreview": 0,
            "username": "nuclear",
            "viewed": 184
        },
        "renderpass": [
            {
                "code": "#define ITER\t120\n\nvec2 map_pixel(in vec2 pix)\n{\n\tfloat aspect = iResolution.x / iResolution.y;\n\treturn vec2(2.5 * aspect, 2.5) * (pix - vec2(0.5, 0.5));\n}\n\n\nfloat mbrot_dist_point(in vec2 c, in vec2 p)\n{\n\tvec2 z = c;\n\tfloat mindist_sq = 8192.0;\n\n\tfor(int i=0; i<ITER; i++) {\n\t\tfloat x = (z.x * z.x - z.y * z.y) + c.x;\n\t\tfloat y = (z.x * z.y + z.x * z.y) + c.y;\n\n\t\tz = vec2(x, y);\n\t\tvec2 dir = z - p;\n\t\tmindist_sq = min(mindist_sq, dot(dir, dir)); \n\t}\n\n\treturn sqrt(mindist_sq);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfloat aspect = iResolution.x / iResolution.y;\n\tvec2 tc = fragCoord.xy / iResolution.xy;\n\t\n\tfloat t = iTime * 0.5;\n\n\tvec2 c;\n\tif(iMouse.x < 3.0) {\n\t\tc = vec2(cos(t) + sin(t * 3.0) * 0.5, sin(t)) * 0.75;\n\t} else {\n\t\tc = map_pixel(iMouse.xy / iResolution.xy);\n\t}\n\n\tvec2 z = map_pixel(tc);\n\t\n\tfloat m = 1.0 - mbrot_dist_point(z, c);\n\n\tfragColor.xyz = vec3(m, m, m);\n\tfragColor.w = 1.0;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}