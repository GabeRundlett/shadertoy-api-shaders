{
    "Shader": {
        "info": {
            "date": "1717286320",
            "description": "just some checkered logSpiral that goes hyperbolic if you click and move the mouse to the edges.",
            "flags": 0,
            "hasliked": 0,
            "id": "X3VGzh",
            "likes": 4,
            "name": "checkered logSpiral(s)",
            "published": 3,
            "tags": [
                "spiral",
                "spiral",
                "hyperbolic",
                "log",
                "logspiral"
            ],
            "usePreview": 0,
            "username": "aladin",
            "viewed": 136
        },
        "renderpass": [
            {
                "code": "#define N          24.\n#define Speed\t   ( 2./3. )\n#define E          ( N/9. - ( 1000./240. ) )\n#define PALETTE    PAL1\n\n/*  click and move the mouse for hyperbolic,\n    place mouse in the center for lotus flower  \n    \n    options above                                 */\n\n\n#define A FC.a\n#define C FC.rgb\n#define res iResolution.xy\n#define centerCoords( p ) ( p.xy - res/2. )/res.y\n#define rot( a ) mat2( cos( a ), -sin( a ), sin( a ), cos( a ) )\n#define flip( x ) ( 1. - ( x ) )\n\nfloat fragSize;\nvec2 p, p0, m;\nvec3 c;\n\nvec3 xor( vec3 x ) { return mod( x, 2. ); }\n\nfloat logSpiral( vec2 p, float dir )\n\t{ float e = E*log( length( p ) );\n\tfloat b = Speed*time + dir*N/2.*atan( p.y, p.x )/tau;\n\t//return step( .5, fract( e - b ) ); }\n    //return step( .5, fract( e - b ) )/2.; }\n    return smoothstep( 0., 2., 1. - fract( e - b) ); }\n    //b = sin( tau*(b - e) ); return .5*clamp( b/fwidth( b ), 0., 1. ); }  // thanks fabrice for this AA\n    \nfloat rectangle( vec2 p, vec4 rect ) { vec2 hv = smoothstep( rect.xy - fragSize, rect.xy + fragSize, p )*smoothstep( p - fragSize, p + fragSize, rect.zw ); return hv.x*hv.y; }\n\nvoid colorBar( float size )\n\t{ float bar = rectangle( flip( p0 ), vec4( 0., 0., 1., size ) );\n\tvec3 colBar = cosPalette( floor( -12.*time + 16.*p0.x )/16., PALETTE );\n\tc += bar*( colBar - c ); c -= c*rectangle( flip( p0 ), vec4( 0., size - .0025, 1., size ) ); }    \n    \n\nvoid mainImage( out vec4 FC, in vec2 POS )\n    { A = 1.; fragSize = 1./res.y; m = iMouse.xy;\n    p0 = POS/res;\n\tp = centerCoords( POS );\n\tm = centerCoords( m );\n\tp /= dot( p , p );\n    p -= m*vec2( 2., 6. ); \n\tp *= rot( time/5. ); \n\tc += logSpiral( p, 1. ) + logSpiral( p, -1. ); \n\tcolorBar( .025 );\n\tC = xor( c ); }\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "const float tau = atan( 1. )*8.; // 6.28318530718..\n#define time ( iTime )\nvec3 hueShift( float h ) { vec4 k = vec4( 1., 2./3., 1./3., 3. ); vec3 p = abs( fract( vec3( h ) + k.xyz )*6. - k.www ); return mix( vec3( 1. ), clamp( p - vec3( 1. ), 0., 1. ), 1. ); }\n\n// the following code is just for the color bar at the top, unfortunately i can't make it move in shadertoy, see below... \nvec3 cosPalette( float t, vec3 a, vec3 b, vec3 c, vec3 d )\n    { // from https://www.shadertoy.com/view/ll2GD3 ( palette function from iq, thanks ):\n    #define PAL1 vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.33,0.67)\n    #define PAL2 vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.10,0.20)\n    #define PAL3 vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.3,0.20,0.20)\n    #define PAL4 vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,0.5),vec3(0.8,0.90,0.30)\n    #define PAL5 vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,0.7,0.4),vec3(0.0,0.15,0.20)\n    #define PAL6 vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(2.0,1.0,0.0),vec3(0.5,0.20,0.25)\n    #define PAL7 vec3(0.8,0.5,0.4),vec3(0.2,0.4,0.2),vec3(2.0,1.0,1.0),vec3(0.0,0.25,0.25)\n    return a + b*cos( tau*( c*t + d ) ); }\n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}