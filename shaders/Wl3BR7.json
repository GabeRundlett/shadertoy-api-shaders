{
    "Shader": {
        "info": {
            "date": "1612394538",
            "description": "noise",
            "flags": 0,
            "hasliked": 0,
            "id": "Wl3BR7",
            "likes": 29,
            "name": "Cyclic noise I guess",
            "published": 3,
            "tags": [
                "fractal",
                "noise"
            ],
            "usePreview": 0,
            "username": "michael0884",
            "viewed": 596
        },
        "renderpass": [
            {
                "code": "#define pi 3.14159265\n#define iterations 13\n\nvec3 function(vec3 x){\n    vec3 ca = vec3(0.420,0.827,1.000)*cos(x.xxx)+vec3(1.000,0.902,0.859)*cos(x.yyy);\n    vec3 cb = vec3(0.898,1.000,0.922)*cos(x.zzz*1.5);\n    return ca*cb-cb;\n}\n\nmat2 ROT(float ang)\n{\n    return mat2(cos(ang), sin(ang), -sin(ang), cos(ang));\n}\n\n#define SCALE 1.5\n#define SHIFT vec3(2.3, -5.2, 1.0)\n\nvec3 fractal(vec3 x){\n    x *= pi;\n    vec3 v = vec3(0.0);\n    float a = 0.5;\n    mat2 rmZ = SCALE*ROT(0.35);\n    mat2 rmX = SCALE*ROT(0.46);\n    for (int i = 0; i < iterations; i++){\n        vec3 F =function(x); \n        v += a*F;\n        x.xy = rmZ*x.xy;\n        x += 0.3*F;\n        x.yz = rmX*x.yz;\n        x += SHIFT;\n        a /= 1.1*SCALE;\n    }\n    return v;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = 1.5*(fragCoord-0.5*iResolution.xy)/max(iResolution.x, iResolution.y);\n    vec3 color = 0.8*fractal(vec3(uv, 0.05*iTime))+0.4;\n    fragColor = vec4(tanh(pow(color, vec3(1.4))), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}