{
    "Shader": {
        "info": {
            "date": "1652209880",
            "description": "Sin wave interference based around the distances between points and pixels",
            "flags": 0,
            "hasliked": 0,
            "id": "ftjfWW",
            "likes": 1,
            "name": "Sin Interference ",
            "published": 3,
            "tags": [
                "waves",
                "ripples",
                "sin",
                "interference"
            ],
            "usePreview": 0,
            "username": "natet",
            "viewed": 206
        },
        "renderpass": [
            {
                "code": "float map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 centre = iResolution.xy*0.5;\n    float distCentre = distance(fragCoord.xy,centre);\n    float dCSin = sin(distCentre*0.05);\n    \n    vec2 anim = vec2(map(sin(iTime),-1.0,1.0,0.0,iResolution.x),map(sin(iTime*2.0),-1.0,1.0,0.0,iResolution.y));\n    //float distMouse = distance(fragCoord.xy,iMouse.xy);\n    float distMouse = distance(fragCoord.xy,anim);\n    float dMSin = sin(distMouse*0.05);\n    \n    float greycol = (((dMSin * dCSin) + 1.0) * 0.5);\n    \n    fragColor = vec4(greycol,greycol,greycol,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}