{
    "Shader": {
        "info": {
            "date": "1446491179",
            "description": "A 2d fractal",
            "flags": 0,
            "hasliked": 0,
            "id": "MtSSDV",
            "likes": 6,
            "name": "[LLCS]#1 I won !",
            "published": 3,
            "tags": [
                "2d",
                "fractal"
            ],
            "usePreview": 0,
            "username": "Eybor",
            "viewed": 995
        },
        "renderpass": [
            {
                "code": "vec2 rot(vec2 v, float a)\n{\n    return mat2(cos(a), -sin(a), sin(a), cos(a))*v;\n}\n\nfloat scene(vec2 uv)\n{\n    \n    for(int i = 0; i < 10; ++i)\n    {\n        uv = rot(uv, iTime);\n    \tuv = abs(uv)-1.;\n    \n    \tuv *= length(uv);\n    }\n    \n    return length(uv);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = -1.+2.*fragCoord.xy / iResolution.xy;\n    \n    uv*=3.5;\n\n    float eps = .01;\n      \n    vec2 g = abs(vec2(scene(uv+vec2(eps, 0.))-scene(uv-vec2(eps, 0.)),\n                  scene(uv+vec2(0., eps))-scene(uv-vec2(.0, eps))));\n    \n  \t\n    fragColor = vec4(g.x,2.*sqrt(g.x*g.y),g.y,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}