{
    "Shader": {
        "info": {
            "date": "1659036469",
            "description": "Another infinite roguelike dungeon map.",
            "flags": 8,
            "hasliked": 0,
            "id": "fdVfDd",
            "likes": 4,
            "name": "Infinite roguelike dungeon 4",
            "published": 3,
            "tags": [
                "maze",
                "dungeon",
                "labyrinth",
                "roguelike"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 258
        },
        "renderpass": [
            {
                "code": "float threshold = .8;\nint iters = 8;\n\nvoid mainImage(out vec4 O, vec2 U) {\n    uvec2 I = uvec2( U/8.+ iTime*8.);\n    O = vec4(1);\n    bool b = false;\n    uint sum = 0u;\n    for(int i = 0; i++ < iters;I =\n    //Multiply and divide by prime numbers to get interesting patterns\n    I*2u/3u\n    //I*13u/17u\n    ){\n        sum += uint(b);\n        I += sum*uint(i)+1u;\n        //I += uvec2(i); //another interesting pattern\n        b = !b || bool(I.x & 1u) && bool(I.y & 1u);\n        O.x = abs(float(b)*O.x)/2.;\n        O.xyz = abs(float(b)-abs(O.yzx))/2.;\n        \n        //some random-looking distortion\n        //I += I.yx/(31u)-I.yx/(29u)+I.yx/(23u);\n    }\n    if (!b) O = 1.-O;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//remix of https://www.shadertoy.com/view/csK3zm\n#define fmod(x,y) floor(max(mod(floor(-(x))*4.,y),mod(floor(x)*3.,y)))\nvec2 mainSound(int samp, float time){  \n  float tempo = 1.;\n  time /= tempo;\n  float\n  s1 = pow(2.,1.+fmod(time/8.,3.)),\n  m1 = s1*(1.+fmod(time/s1/s1+1.,2.)),\n  t = time,\n  m4 = fmod(t*s1/(1.+fmod(t/s1,2.)),s1),\n  m3 = fmod((t+m4)*s1/m1,s1);\n  t *= s1*s1/(1.+fmod(t/s1,2.));\n  float m2 = 1. + fmod(t/s1,s1);\n  float a = pow(2.,fmod(time*2.,2.))*16.*pow((1.-sqrt(fract(t/s1)/m1))/2.,2.);\n  float nb = time*tempo*pow(2.,(m3+m2)/5.+6.5);\n  return abs(.5-vec2(fract(nb*.998),fract(nb)))*a;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}