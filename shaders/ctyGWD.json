{
    "Shader": {
        "info": {
            "date": "1683967004",
            "description": "reference: https://twitter.com/Yugemaku/status/1657059689375608833",
            "flags": 0,
            "hasliked": 0,
            "id": "ctyGWD",
            "likes": 44,
            "name": "solenoid",
            "published": 3,
            "tags": [
                "spiral",
                "ring",
                "reproduction"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 393
        },
        "renderpass": [
            {
                "code": "\n#define rot2(a)      mat2(cos(a+vec4(0,11,33,0)))\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t=9.,r;\n    vec3  R = iResolution,\n          D = normalize(vec3(U+U, -12.*R.y) - R),        // ray direction\n          p = vec3(0,0,15), q, a,                        // marching point along ray \n          M = iMouse.z > 0. ? 6.*iMouse.xyz/R -3.        // camera control\n              :  vec3( 1,-.5,0);\n    \n    for ( O=vec4(1); O.x > 0. && t > .01; O-=.01 )       // march scene\n        q = p, \n        q.yz *= rot2(-M.y),                              // rotations\n        q.xz *= rot2(-M.x-1.57),\n        q = vec3( length(q.xz)-1., q.y, atan(q.z,q.x) ), // cylindrical coordinates\n        q = vec3( length(q.xy), atan(q.y,q.x), q.z ),    // torus coordinates\n        a = cos(q.z -iTime + vec3(0,11,0)), q.z += .5*iTime, // time modulators: radius, angle\n        q.x -= .2*(.5+.5*a.x), q.z += .5*a.y,            // time modulation\n        t = min(t, length( vec2(q.x, ( mod(16.*q.z-q.y,6.28)-3.14 ) /16. ) // soleno√Ød\n                         ) - .05 ),\n     // t = length(q.xy + .2 * (.5+.5*a.x)* cos(16.*q.z+8.*a.y+vec2(0,11)) ) -.05,\n        p += .5*t*D;                                     // step forward = dist to obj    \n    \n   O *= O*O*O*1.6;                                       // color scheme \n// q.x = atan(q.y,q.x)/6.; q = sin(32.*q); t = q.x*q.z; O *= clamp(.5+t/fwidth(t),0.,1.);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}