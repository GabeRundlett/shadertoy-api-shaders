{
    "Shader": {
        "info": {
            "date": "1683243485",
            "description": "Genuary2023 finally published ",
            "flags": 0,
            "hasliked": 0,
            "id": "mtjXWz",
            "likes": 10,
            "name": "Genuary2023 Minimalism",
            "published": 3,
            "tags": [
                "2d",
                "tree",
                "lsystem",
                "minimalism"
            ],
            "usePreview": 1,
            "username": "z0rg",
            "viewed": 183
        },
        "renderpass": [
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\nmat2 r2d(float a)\n{\n  float c = cos(a), s= sin(a);\n   return mat2(c,-s,s,c);\n}\nfloat hash11(float seed)\n{\n    return fract(sin(seed*123.456)*123.456);\n}\nfloat _seed;\nfloat rand()\n{\n    return hash11(_seed++);\n}\nfloat _sqr(vec2 uv, vec2 s)\n{\n  vec2 l = abs(uv)-s;\n  return max(l.x,l.y);\n}\n#define sat(a) clamp(a,0.,1.)\nfloat lenny(vec2 v)\n{\n    return abs(v.x)+abs(v.y);\n}\nvec3 rdr(vec2 uv)\n{\n    uv -= vec2(.1,-.7);\n  vec3 col = vec3(0.);\n\n    float stp = .02;\n    \n  vec2 uvb = uv;\n  uvb = floor(uvb/stp)*stp;\n  float back = _sqr(uvb+ vec2(.0,-0.7),vec2(.4,.4));\n  back -= sin(uvb.y*10.)*.1;\n  back -= texture(iChannel0, uvb*.1-iTime*.01).x*.4;\n  col = mix(vec3(.15), vec3(0.129,0.439,0.769), 1.-sat(back*400.));\n  col *= sat(rand()+.7);\n  float sharp = iResolution.x*.5;\n  uv.x+= sin(uv.y*5.+uv.x*2.+iTime)*.02*sat(uv.y);\n  vec2 p = uv;\n  for (float i = 0.;i<6.;++i)\n  {\n    float off = mix(.3,.05,i/7.);\n    p+= vec2(0.,-off*.45);\n    p*=r2d(.4*sat(i));\n    p+= vec2(0.,-off*.45);\n    p.x = abs(p.x);\n    vec2 pos = p;\n\n    float shape = _sqr(pos, vec2(.01,off*.45));\n    if (i > 2.9)\n        shape = mix(lenny(pos)-.1, length(pos)-.1, -1.+i*.3);\n    col = mix(col, vec3(0.),1.-sat(shape*sharp));\n    if (i > 2.9)\n        col = mix(col, vec3(1.,.1,.2),1.-sat((shape+.05)*sharp));\n  }\n  return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = (fragCoord.xy-.5*iResolution.xy)\n   / iResolution.xx;\n   _seed = texture(iChannel0, uv).x+iTime;\n  vec3 col = rdr(uv*2.);\n  fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}