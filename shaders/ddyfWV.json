{
    "Shader": {
        "info": {
            "date": "1698667391",
            "description": "signed distance field neural network\nattempted to render normal sphere using neural network in fragment shader",
            "flags": 0,
            "hasliked": 0,
            "id": "ddyfWV",
            "likes": 0,
            "name": "neural SDF",
            "published": 3,
            "tags": [
                "sdf",
                "neural"
            ],
            "usePreview": 0,
            "username": "AndreCorrea",
            "viewed": 22
        },
        "renderpass": [
            {
                "code": "// #include \"net.glsl\"\n\n\n\nfloat stepSize =4.0;\n\nvec4 sdSphere(vec3 p) {\n    float s = 1.0;\n    vec3 color = vec3(fract(p.x)*0.9,fract(p.y)*0.9,fract(p.z)*0.9);\n    return vec4(length(p) - s,color);\n}\n\nfloat mlpS(vec3 p) {\n  if (length(p) > 1.) return length(p)-1.01;\n  vec4 x=vec4(p,1),\n    f00=sin(x*mat4(-.78,.56,1.05,-9.75,-1.26,-1.6,-5.02,-.84,1.96,.95,-.51,-7.29,2.97,-2.33,5.01,-10.02)),\n    f01=sin(x*mat4(-.45,-.6,4.91,-.74,-4.62,3.88,-3.72,-6.0,-2.32,.29,5.17,-1.13,-2.0,-1.46,2.76,5.02)),\n    f02=sin(x*mat4(-1.69,2.93,-2.66,-3.81,-3.0,.92,-.04,8.99,3.54,2.98,1.62,10.11,1.01,-.08,.73,-6.45)),\n    f10=sin(mat4(.53,.47,-.39,1.16,-.33,-.04,.63,.75,-.02,-1.05,.48,-1.15,-.37,.21,.68,.55)*f00+mat4(.53,.32,-.98,.21,.2,-1.05,.33,.47,.8,.03,-.57,-1.01,.46,-.17,1.67,.77)*f01+mat4(.52,-.19,.15,.66,-.75,-.08,.31,-.01,-.32,-.22,.53,-.12,.74,-1.01,-.08,.07)*f02+vec4(3.64,-13.26,10.41,6.6)),\n    f11=sin(mat4(-.39,.68,.24,-.38,-.18,.0,-.23,-.36,1.53,-.74,-.31,.86,-.32,-.31,.28,.02)*f00+mat4(.07,-.26,.19,-.07,-1.14,.32,-1.27,-.26,.91,.77,.33,-.67,-.43,-.82,.74,-.66)*f01+mat4(.06,.53,.96,-.14,-.21,-.16,.5,.75,-.41,.04,-.23,.23,.08,.49,-.29,-.73)*f02+vec4(-3.63,3.38,8.88,-11.78)),\n    f12=sin(mat4(.55,.15,-1.38,.85,.25,-.19,-.01,.35,.24,.58,-.23,-1.14,-.66,-.48,-.49,.03)*f00+mat4(.84,-.77,-.64,-.76,.49,.68,.17,.28,.16,-.14,-.01,-.39,.0,-.64,-.18,-.93)*f01+mat4(-.1,.12,-.23,-.15,.45,-1.54,.22,-.72,-.27,.35,-.14,-.22,.1,.66,-1.02,-.19)*f02+vec4(9.12,4.58,1.31,10.42)),\n    f20=sin(mat4(-.24,.64,-1.06,-.43,.12,-.36,.6,.06,.18,.65,.27,.08,-.41,-.67,.37,-.23)*f10+mat4(-.28,.32,-1.47,-.07,-1.19,-.63,-.03,.87,.38,.5,-1.07,.56,.71,-.86,.42,-1.09)*f11+mat4(-.06,.3,1.26,.05,-.01,-.32,-.98,-.22,.11,-.31,.46,-.55,.14,-.89,.86,-.1)*f12+vec4(5.3,-7.79,12.22,7.68)),\n    f21=sin(mat4(.56,-.54,.32,.11,1.15,-1.14,-.29,-.3,.15,.18,-.15,-.05,.53,.3,.03,.37)*f10+mat4(-.62,.05,.89,-.14,-1.44,.17,-.62,1.19,-.71,-.38,.86,-.77,.36,-1.27,.32,-1.1)*f11+mat4(-.44,-.35,-1.21,-.48,.45,-.64,-.14,-.36,-.32,-.19,-.56,.86,.59,.93,.11,1.02)*f12+vec4(-12.55,.19,-10.9,5.55)),\n    f22=sin(mat4(.35,-1.47,.38,-.35,.55,-.44,.22,-.69,.32,-.56,-.36,-.41,.13,.46,-.34,.46)*f10+mat4(-.31,.08,-.12,.21,-1.06,-.09,-.29,.93,-.04,-.16,-.52,-.89,.22,-.09,.76,-.93)*f11+mat4(-.07,.69,-1.25,.75,-.52,-.94,.64,.63,.14,.39,-.3,-.33,.67,-.35,1.02,.8)*f12+vec4(-10.45,13.36,3.33,.58));\n  return dot(vec4(-.73,.4,-.18,.5),f20)+dot(vec4(-.2,.19,-.37,.34),f21)+dot(vec4(.37,-.29,-.39,.19),f22)+2.52;\n}\n\n\n\n\nfloat mlpR(vec3 p) {\n//   if (length(p) > 1.) return length(p);\n  vec4 x=vec4(p,1),\n    f00=sin(x*mat4(-2.71,-1.85,-3.06,4.82,-4.51,-3.76,2.88,-4.57,.12,1.79,1.73,-1.09,-2.89,-1.88,4.35,2.7)),\n    f01=sin(x*mat4(-3.23,-1.93,.55,6.55,3.03,-4.04,2.55,9.05,.78,2.19,2.33,6.63,2.29,1.89,-2.08,-1.97)),\n    f02=sin(x*mat4(3.22,-1.63,4.18,2.65,.72,3.05,3.37,4.52,3.11,-.54,2.46,.38,.98,.3,4.5,-6.0)),\n    f10=sin(mat4(.05,.06,-.22,-.03,-.73,-.27,-1.05,-1.06,.0,-.15,-.33,.5,.9,1.01,-.59,-1.0)*f00+mat4(.1,.89,-.29,-.8,-.5,.58,.32,.54,-.12,.03,-.06,-.79,.49,-.83,-.71,.5)*f01+mat4(.46,.33,.04,-.73,.38,.07,.69,.47,.55,-.32,.49,-.51,-.14,-.27,-.55,-.42)*f02+vec4(-4.12,-9.82,-.46,.64)),\n    f11=sin(mat4(.47,-.35,-.11,.07,-.81,.26,-.14,.36,.85,.68,.3,.25,.27,-.4,1.18,.49)*f00+mat4(-.12,.62,.18,-.31,-.17,.76,-.17,.64,-.52,.97,.31,.29,-.36,.33,-.5,.05)*f01+mat4(-.22,-.69,.48,-.22,-.31,-.14,-.64,-.28,-.41,1.55,-.02,-.01,.07,.35,.49,.19)*f02+vec4(11.2,-11.06,10.38,.15)),\n    f12=sin(mat4(-.65,.11,-.38,-.41,-1.64,.48,-.46,-.39,-.44,.01,.01,-.06,.0,.4,.58,.2)*f00+mat4(.05,.32,-.05,.19,-.54,-.26,.22,-.97,.05,-.12,-.24,.36,-.86,-.29,-.8,-.3)*f01+mat4(.15,-.06,.21,-.11,-1.27,-.37,.37,-.94,.39,-.35,-.01,-.59,.85,.11,.34,.39)*f02+vec4(-8.08,-2.69,1.99,4.99)),\n    f20=sin(mat4(.48,.04,.03,.19,-.01,-.22,.14,.03,.16,.26,.16,.11,.2,-.23,-.35,-.25)*f10+mat4(.36,-.29,.25,.15,-.05,.01,-.02,.12,.04,.05,.03,-.23,-.1,.53,.14,-.18)*f11+mat4(.3,.08,-.06,.03,-.07,-.68,-.57,-.56,.33,-.1,-.56,.35,-.76,-.18,.68,.07)*f12+vec4(3.0,-10.24,13.35,7.68)),\n    f21=sin(mat4(-.06,.2,.01,.66,.22,.15,.0,.04,.02,.37,.03,-.46,-.16,.1,-.01,-.16)*f10+mat4(.05,.14,-.01,.54,.12,-.17,-.03,-.04,.04,.19,-.03,-.34,-.09,.31,.0,.13)*f11+mat4(-.07,.0,.02,-.1,-.61,-.62,.0,-.08,.52,.2,.02,.52,.05,-.01,.04,.21)*f12+vec4(7.1,-5.11,4.69,-3.19)),\n    f22=sin(mat4(-.25,-.23,-.44,.29,1.16,-.29,.01,-.39,.77,.25,.62,-.02,-.15,-.31,.19,-.22)*f10+mat4(.23,.39,-.43,-.44,.71,.0,.02,.06,-.94,.15,.0,.1,-.32,-.15,.22,.37)*f11+mat4(-.78,.42,-.06,.01,1.06,-.49,-.11,-.08,-.18,.7,-.85,.31,.05,-.12,.0,-.21)*f12+vec4(12.97,-.16,-.49,2.88));\n  return dot(vec4(.36,-.57,-.43,.37),f20)+dot(vec4(-.34,-.11,.66,-.3),f21)+dot(vec4(-.01,.22,.23,.38),f22)+1.29;\n}\n\n\n\n\nfloat mlpG(vec3 p) {\n//   if (length(p) > 1.) return length(p);\n  vec4 x=vec4(p,1),\n    f00=sin(x*mat4(-.26,1.02,-.85,-10.97,2.52,-1.68,-2.69,-.88,-1.53,4.91,2.26,7.39,-1.19,3.37,-4.21,10.38)),\n    f01=sin(x*mat4(3.49,-1.17,-.81,-9.0,-4.44,-4.5,-2.81,-8.05,5.15,1.28,2.43,-9.8,-4.7,-4.52,-1.68,2.94)),\n    f02=sin(x*mat4(-1.33,4.6,-2.88,-9.07,.49,-2.15,-3.19,-3.24,-2.11,2.35,4.23,-7.12,-1.91,.72,-1.54,-5.71)),\n    f10=sin(mat4(-.69,1.16,.52,.77,-.53,.57,.0,.04,.2,.68,.52,-.16,-.64,-.24,.71,-.14)*f00+mat4(.22,.31,.64,.03,-.17,-.1,.0,-.04,-.06,-.11,.14,-.26,.5,.44,.01,-.11)*f01+mat4(-.05,.9,-1.42,-.5,-.15,-.18,-.05,.62,-.87,-1.09,.03,-.13,.59,.24,-.51,.39)*f02+vec4(13.52,-.23,-3.18,8.58)),\n    f11=sin(mat4(1.12,.12,-.33,-.77,.26,.01,.55,.05,-.6,.0,.04,-.26,.53,-.3,-.07,.15)*f00+mat4(.2,-.1,-.13,.31,.16,.07,.08,-.04,-.01,.35,-.07,-.02,.06,.16,.11,.01)*f01+mat4(-.85,-.42,.51,.31,-.21,-.1,.34,.36,-.48,-.27,-.43,-.01,-.3,.15,.18,-.03)*f02+vec4(10.86,-4.41,-10.82,-1.25)),\n    f12=sin(mat4(1.14,.15,.92,.11,.11,.68,-.15,.39,.44,.28,.02,-.09,.85,.37,-.24,-.56)*f00+mat4(.92,.75,.08,.12,-.05,.03,-.19,.14,.14,-.14,.32,.05,.23,-.05,-.01,.33)*f01+mat4(.56,-.92,-.21,-.25,-.14,.01,.2,-.1,.03,.59,-.1,-1.07,-.01,1.16,.06,-.86)*f02+vec4(-4.77,6.86,9.87,4.39)),\n    f20=sin(mat4(.42,.04,-.43,-.41,-.24,-.09,.08,.35,-.07,.07,.62,-.13,.74,-.1,.03,.02)*f10+mat4(.12,.0,-1.05,.22,.26,-.13,.42,-.24,.39,.0,.42,.08,-.41,.13,-.09,-.29)*f11+mat4(-.15,-.13,.3,-.28,.3,-.02,.39,.03,-.35,.14,-.56,.23,.0,-.01,-.09,-.07)*f12+vec4(-2.59,-13.7,-7.72,1.92)),\n    f21=sin(mat4(-.09,-.13,.01,-.28,.12,.51,.2,.05,-.13,1.0,.93,-.54,-.03,.83,.41,.45)*f10+mat4(.06,-.65,-.34,-.46,-.38,-.18,.21,.62,-.11,.24,.8,.88,.53,-.23,-.47,-.62)*f11+mat4(.08,-.93,.51,-.79,.05,.04,-.06,.3,-.22,-1.23,-.32,.19,-.06,-.9,-.01,.08)*f12+vec4(8.24,-9.39,10.24,10.51)),\n    f22=sin(mat4(-.08,-.02,.66,.13,.17,.15,-.79,-.22,.61,.04,.27,-.18,-1.16,-.27,.71,.12)*f10+mat4(.09,-.06,.08,-.31,-.45,-.13,-.01,.13,-.8,.4,-.29,.49,.18,.58,-.54,-.12)*f11+mat4(-1.08,-.13,.33,-.01,-.39,.49,1.05,.24,-.57,-.02,.3,.34,.23,.19,-.2,.1)*f12+vec4(9.27,1.37,8.21,10.65));\n  return dot(vec4(-.24,-.39,-.08,.31),f20)+dot(vec4(.66,.0,-.23,-.08),f21)+dot(vec4(.1,.13,-.15,-.67),f22)-2.39;\n}\n\n\n\n\nfloat mlpB(vec3 p) {\n//   if (length(p) > 1.) return length(p)-1.01;\n  vec4 x=vec4(p,1),\n    f00=sin(x*mat4(-3.09,4.3,1.73,1.14,-.49,1.4,-4.88,-7.79,-1.28,-3.17,-4.21,-5.22,.03,-2.06,-2.94,10.97)),\n    f01=sin(x*mat4(3.22,-4.53,-3.94,-6.85,2.4,.24,-4.92,6.71,-2.55,.29,2.46,-.67,-3.79,-1.7,-4.76,-3.48)),\n    f02=sin(x*mat4(-.2,.16,-.31,-5.94,1.34,-3.49,1.21,-5.63,1.33,2.68,4.89,8.58,-1.03,-1.03,4.28,-7.34)),\n    f10=sin(mat4(-.63,.48,.31,1.01,-.43,-.2,-.36,.02,.35,-.51,.04,-.54,-.04,-.6,.64,-.34)*f00+mat4(-.39,.18,.46,.11,.06,.38,-.65,.82,-.41,.07,.54,-.54,-.01,-.05,-.08,.0)*f01+mat4(-.87,-.61,-.32,-.05,.16,.4,.05,-.07,-.03,.23,-.54,.07,.52,-.87,.17,-1.04)*f02+vec4(-9.87,9.86,-12.45,-6.66)),\n    f11=sin(mat4(.22,-1.29,.34,.55,.17,-.75,.05,-.27,-.04,.0,-.56,-.1,-.42,-.71,-.38,.38)*f00+mat4(-.05,-.84,-.12,-.19,.83,.58,.45,-.25,.16,-1.05,.95,1.38,.17,-.02,.06,-.07)*f01+mat4(.12,-.12,.01,-.23,-.92,.65,.36,.18,.34,.3,.49,-.02,.71,-.83,-.27,-.25)*f02+vec4(6.15,-5.91,-13.24,-4.68)),\n    f12=sin(mat4(-1.17,.2,-.7,-.95,1.06,.78,-.42,-.58,-.71,.14,.16,-.06,-.38,-.44,.23,-.9)*f00+mat4(-.23,.89,-.52,.21,-.39,-.52,.12,-.95,.12,.1,-.28,.67,.18,-.05,.06,-.62)*f01+mat4(.95,-1.35,.29,.03,-1.23,.58,-.4,-.97,.5,-.44,-.13,-.78,-.07,-1.31,.23,-.3)*f02+vec4(-3.4,13.14,.71,12.46)),\n    f20=sin(mat4(-1.15,.21,-.03,-.56,.55,.56,-.19,.36,.15,.3,-.25,-.52,-.51,.62,.67,.27)*f10+mat4(.73,1.02,.53,.04,.86,-.31,.37,.51,.27,-.63,.42,.45,.04,.11,-.19,-.22)*f11+mat4(-1.22,.24,.45,-.33,-.32,-.63,-.21,-.44,1.15,-.24,-.43,-.11,.26,.27,.34,.06)*f12+vec4(-6.02,9.42,-1.93,-11.69)),\n    f21=sin(mat4(-.22,-.14,-.2,.8,.0,.18,-.13,-.23,.05,.14,.22,-.1,.72,.73,-.16,-.18)*f10+mat4(.46,.97,.0,.25,.21,.19,-.09,-.18,.84,-.49,.43,.09,-.26,.4,-.36,.43)*f11+mat4(.38,-.22,.2,-.68,-.05,-.51,-.05,.37,-.36,-.4,-.3,-1.07,.43,.29,.03,.16)*f12+vec4(4.63,2.83,11.79,12.33)),\n    f22=sin(mat4(-.25,-.01,.34,.23,.28,-.16,-.18,-.08,.06,.04,.2,.58,.18,-.17,.3,.27)*f10+mat4(-.3,-.02,.56,-.14,-.07,.07,.14,-.54,-.66,-.15,.44,.69,-.49,-.13,-.08,.17)*f11+mat4(.23,-.06,-.29,.12,.22,-.08,-.25,.38,.24,-.45,-.45,-.51,-.17,-.02,.4,-.1)*f12+vec4(10.35,1.8,-12.69,10.36));\n  return dot(vec4(-.01,.25,.51,-.36),f20)+dot(vec4(-.55,-.4,-.63,.08),f21)+dot(vec4(.63,-.62,-.53,.29),f22)+.46;\n}\n\nvec4 mlp(vec3 p){\n    // fract p\n    float r = mlpR(p);\n    float g = mlpG(p);\n    float b = mlpB(p);\n    float s = mlpS(p);\n    return vec4(s,r,g,b);\n\n}\n\nvec4 colScene(vec3 p){\n    // float d = mlp(p);\n    //vec4 output = sdSphere(p);\n    return mlp(p);\n}\n\nfloat scene(vec3 p){\n    return colScene(p).x;\n}\n\n// https://iquilezles.org/articles/normalsSDF\nvec3 calcNormal( in vec3 pos )\n{\n    const float ep = 0.0001;\n    vec2 e = vec2(1.0,-1.0)*0.5773;\n    return normalize( e.xyy*scene( pos + e.xyy*ep ) + \n\t\t\t\t\t  e.yyx*scene( pos + e.yyx*ep ) + \n\t\t\t\t\t  e.yxy*scene( pos + e.yxy*ep ) + \n\t\t\t\t\t  e.xxx*scene( pos + e.xxx*ep ) );\n}\n\n// https://iquilezles.org/articles/rmshadows\nfloat calcSoftshadow( in vec3 ro, in vec3 rd, float tmin, float tmax, const float k )\n{\n\tfloat res = 1.0;\n    float t = tmin;\n    for( int i=0; i<50; i++ )\n    {\n\t\tfloat h = scene( ro + rd*t );\n        res = min( res, k*h/t );\n        t += clamp( h, 0.02, 0.20 );\n        if( res<0.005 || t>tmax ) break;\n    }\n    return clamp( res, 0.0, 1.0 );\n}\n\n\n#define AA 3\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec3 tot = vec3(0.0);\n    \n    #if AA>1\n    for( int m=0; m<AA; m++ )\n    for( int n=0; n<AA; n++ )\n    {\n        // pixel coordinates\n        vec2 o = vec2(float(m),float(n)) / float(AA) - 0.5;\n        vec2 p = (-iResolution.xy + 2.0*(fragCoord+o))/iResolution.y;\n        #else    \n        vec2 p = (-iResolution.xy + 2.0*fragCoord)/iResolution.y;\n        #endif\n \n        vec3 ro = vec3(0.0,5.0,10.0);\n        vec3 rd = normalize(vec3(p-vec2(0.0,1.8),-3.5));\n\n        float rotX = iMouse.y/80.0; // Adjust the sensitivity as needed\n        float rotY = iMouse.x/80.0;\n        rotY += iTime * 0.1;\n        mat3 rotationMatrix = mat3(\n            cos(rotY), 0, sin(rotY),\n            0, 1, 0,\n            -sin(rotY), 0, cos(rotY)\n        ) * mat3(\n            1, 0, 0,\n            0, cos(rotX), -sin(rotX),\n            0, sin(rotX), cos(rotX)\n        );\n\n        ro = rotationMatrix * ro;\n        rd = normalize(rotationMatrix * rd);\n\n        \n\n        float t = 7.0;\n        int nSteps = 64;\n        for( int i=0; i<nSteps; i++ )\n        {\n            vec3 p = ro + t*rd;\n            float h = scene(p);\n            if( abs(h)<0.0001 || t>11.0 ) break;\n            t += h;\n        }\n\n        vec3 col = vec3(0.0);\n\n        if( t<11.0 )\n        {\n            vec3 pos = ro + t*rd;\n            vec3 nor = calcNormal(pos);\n            vec3  lig = normalize(vec3(1.0,0.8,-0.2));\n            float dif = clamp(dot(nor,lig),0.0,1.0);\n            float sha = calcSoftshadow( pos, lig, 0.001, 1.0, 16.0 );\n            float amb = 0.5 + 0.5*nor.y;\n            vec3 texColor = colScene(pos).yzw;\n            col = texColor+vec3(0.05,0.1,0.15)*amb + \n                  vec3(1.00,0.9,0.80)*dif*sha;\n        }\n\n        col = sqrt( col );\n\t    tot += col;\n    #if AA>1\n    }\n    tot /= float(AA*AA);\n    #endif\n\n\tfragColor = vec4( tot, 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}