{
    "Shader": {
        "info": {
            "date": "1684716590",
            "description": "Practicing implementation of different kinds of noise.\nThis one is value noise, with a linear ramp (lerp / mix) between lattice points.",
            "flags": 0,
            "hasliked": 0,
            "id": "dlVGDK",
            "likes": 2,
            "name": "Value noise practice - linear",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "huttarl",
            "viewed": 132
        },
        "renderpass": [
            {
                "code": "const vec2 seed = vec2(0.593, 9.928);\nconst float res = 10.0;\n\nfloat hash(vec2 uv) {\n  return fract(sin(dot(seed + uv, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord*res/iResolution.y + iTime;\n    vec2 lattice = floor(uv);\n    uv = fract(uv);\n    float h00 = hash(lattice);\n    float h01 = hash(lattice + vec2(0.0, 1.0));\n    float h10 = hash(lattice + vec2(1.0, 0.0));\n    float h11 = hash(lattice + vec2(1.0, 1.0));\n    \n    // Linear ramp:\n    vec3 col = vec3(mix(\n        mix(h00, h10, uv.x),\n        mix(h01, h11, uv.x),\n        uv.y));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}