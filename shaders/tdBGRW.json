{
    "Shader": {
        "info": {
            "date": "1548252982",
            "description": "INI SUSAHHHHH",
            "flags": 0,
            "hasliked": 0,
            "id": "tdBGRW",
            "likes": 2,
            "name": "Sierpinski YES",
            "published": 3,
            "tags": [
                "triangle",
                "sierpinski",
                "cgk3"
            ],
            "usePreview": 0,
            "username": "dennyraymond",
            "viewed": 389
        },
        "renderpass": [
            {
                "code": "#define sqrt3 1.732050808\n\nvec2 sym(float a, float b, float c, vec2 p)\n{\n    float x = ((b*b-a*a)*p.x-2.0*a*b*p.y-2.0*a*c) / (a*a+b*b);\n    float y = ((a*a-b*b)*p.y-2.0*a*b*p.x-2.0*b*c) / (a*a+b*b);\n    return vec2(x,y);\n}\n\nfloat triangle1(vec2 p, float r)\n{\n    \n    float d=abs(max(-2.*p.y, max(p.y-sqrt3*p.x, p.y+sqrt3*p.x))-r);\n    return smoothstep(0.00,0.015,d);\n}\n\nvec3 sierpinski(vec2 pos, float size, int repeats){\n\tvec3 try = vec3(triangle1(pos,size));\n    pos.y=-pos.y;\n    for(int i = 0; i < repeats; ++i)\n    {\n\n            size*=0.5;\n            try*=triangle1(pos,size);\n\n            if(pos.y+sqrt3*pos.x>size)// Bottom right triangle\n                pos=sym(sqrt3/3., 1.0, 0., pos);// Folding along y+1/3*x\n\n            if(pos.y-sqrt3*pos.x>size)// Bottom left triangle\n                pos=sym(-sqrt3/3., 1.0, 0., pos);// Folding along y-1/3*x\n\n            pos.y+=size;\n        \n    }\n    return try;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \n    \n    \n    float s=1.0-.5;\n    \n    //float try = sierpinski(vec2(x,y), .6, 0.); \n    \n    //first triangle\n    vec2 p = (2.0*fragCoord.xy - iResolution.xy)/iResolution.y;\n    p.y-=0.4;\n    p.x +=1.2;\n    s=.5;\n\tvec3 try1 = sierpinski(p, s, 0);\n    \n    p = (2.0*fragCoord.xy - iResolution.xy)/iResolution.y;\n    p.y-=0.4;\n    p.x +=0.;\n    s=.5;\n\tvec3 try2 = sierpinski(p, s, 1);\n    \n    p = (2.0*fragCoord.xy - iResolution.xy)/iResolution.y;\n    p.y-=0.4;\n    p.x +=-1.2;\n    s=.5;\n\tvec3 try3 = sierpinski(p, s, 2);\n    \n    p = (2.0*fragCoord.xy - iResolution.xy)/iResolution.y;\n    p.y-=-0.6;\n    p.x +=1.2;\n    s=.5;\n\tvec3 try4 = sierpinski(p, s, 3);\n    \n    p = (2.0*fragCoord.xy - iResolution.xy)/iResolution.y;\n    p.y-=-0.6;\n    p.x +=0.;\n    s=.5;\n\tvec3 try5 = sierpinski(p, s, 4);\n    \n    p = (2.0*fragCoord.xy - iResolution.xy)/iResolution.y;\n    p.y-=-0.6;\n    p.x +=-1.2;\n    s=.5;\n\tvec3 try6 = sierpinski(p, s, 5);\n    \n    // to show\n    vec3 col = vec3 (1); // BG color\n    vec3 col1 ; //= vec3(1., 1.,0.);\n    vec3 tot = try1*try2*try3*try4*try5*try6;\n    //col += col1*sier1;\n    col += vec3(0.0, 0.0, 0.0);\n    col1 -= col1+col;\n    col += col1 * tot;\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}