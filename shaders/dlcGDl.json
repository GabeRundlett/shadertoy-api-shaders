{
    "Shader": {
        "info": {
            "date": "1683310204",
            "description": "Bored",
            "flags": 8,
            "hasliked": 0,
            "id": "dlcGDl",
            "likes": 2,
            "name": "Song",
            "published": 3,
            "tags": [
                "music"
            ],
            "usePreview": 0,
            "username": "forprix",
            "viewed": 162
        },
        "renderpass": [
            {
                "code": "\nconst float PI = 3.1415926538;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(cos(iTime * PI * 2. / 0.2) * 0.3);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\nconst float PI = 3.1415926538;\n\nconst float nots2[] = float[](0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., -9., -9., -9., -9., -9., -9., -9., -9., -9., -9., -9., -9., -5., -5., -5., -5., -5., -5., -5., -5., -5., -5., -5., -5., 3., 3., 3., 3., 3., 3., 3., 3., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., -7., -7., -7., -7., -7., -7., -7., -7., -17., -17., -17., -17., -17., -17., -17., -17., -17., -17., -17., -17., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -2., -2., -2., -2., -2., -2., -2., -2., -17., -17., -17., -17., -17., -17., -17., -17., -17., -17., -17., -17., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -2., -2., -2., -2., -2., -2., -2., -2., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -2., -2., -2., -2., -2., -2., -2., -2., -19., -19., -19., -19., -19., -19., -19., -19., -19., -19., -19., -19., -3., -3., -3., -3., -3., -3., -3., -3., -3., -3., -3., -3., -12., -12., -12., -12., -12., -12., -12., -12., -21., -21., -21., -21., -21., -21., -21., -21., -21., -21., -21., -21., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -5., -5., -5., -5., -5., -5., -5., -5., -21., -21., -21., -21., -21., -21., -21., -21., -21., -21., -21., -21., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -5., -5., -5., -5., -5., -5., -5., -5., -9., -9., -9., -9., -9., -9., -9., -9., -9., -9., -9., -9., -5., -5., -5., -5., -5., -5., -5., -5., -5., -5., -5., -5., 3., 3., 3., 3., 3., 3., 3., 3., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., -7., -7., -7., -7., -7., -7., -7., -7., -17., -17., -17., -17., -17., -17., -17., -17., -17., -17., -17., -17., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -2., -2., -2., -2., -2., -2., -2., -2., -17., -17., -17., -17., -17., -17., -17., -17., -17., -17., -17., -17., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -2., -2., -2., -2., -2., -2., -2., -2., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -10., -2., -2., -2., -2., -2., -2., -2., -2., -19., -19., -19., -19., -19., -19., -19., -19., -19., -19., -19., -19., -3., -3., -3., -3., -3., -3., -3., -3., -3., -3., -3., -3., -12., -12., -12., -12., -12., -12., -12., -12., -21., -21., -21., -21., -21., -21., -21., -21., -21., -21., -21., -21., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -5., -5., -5., -5., -5., -5., -5., -5., -21., -21., -21., -21., -21., -21., -21., -21., -21., -21., -21., -21., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -14., -5., -5., -5., -5., -5., -5., -5., -5.);\nconst float vols2[] = float[](0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1.);\n\nconst float nots1[] = float[](0., 0., 0., 0., 0., 0., 0., 0., 2., 2., 2., 2., 2., 2., 2., 2., 5., 5., 5., 5., 5., 5., 5., 5., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 0., 0., 0., 0., 0., 0., 0., 0., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -7., -7., -7., -7., -7., -7., -7., -7., -2., -2., -2., -2., -2., -2., -2., -2., 0., 0., 0., 0., 0., 0., 0., 0., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., -7., -7., -7., -7., -7., -7., -7., -7., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., -2., 0., 0., 0., 0., 0., 0., 0., 0., 2., 2., 2., 2., 2., 2., 2., 2., 5., 5., 5., 5., 5., 5., 5., 5., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 9., 9., 9., 9., 9., 9., 9., 9., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 5., 5., 5., 5., 5., 5., 5., 5., 10., 10., 10., 10., 10., 10., 10., 10., 12., 12., 12., 12., 12., 12., 12., 12., 14., 14., 14., 14., 14., 14., 14., 14., 12., 12., 12., 12., 12., 12., 12., 12., 10., 10., 10., 10., 10., 10., 10., 10., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 5., 5., 5., 5., 5., 5., 5., 5., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.);\nconst float vols1[] = float[](1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0.);\nconst int len = 512;\n\nfloat note2freq(float note) {\n  return pow(2., note / 12.) * 440.;\n}\nfloat smp2sec(int smp, float mod_) {\n    return float(smp % int(mod_ * float(iSampleRate))) / float(iSampleRate);\n}\nfloat smp2sec(int smp) {\n    return float(smp) / float(iSampleRate);\n}\n\nfloat sinWave(float time, float note) {\n    return sin(PI * 2. * note2freq(note) * time);\n}\nfloat sqrWave(float time, float note) {\n    return sinWave(time, note) > 0. ? 1. : -1.;\n}\nfloat sawWave(float time, float note) {\n    return mod(time * 2. * note2freq(note), 2.) - 1.;\n}\n\nfloat synth(int channel, int iSample) {\n    // Original Song: \"Virtual Riot - Chroma\"\n    int noteDuration = int(iSampleRate) / 40;\n    int mSample = iSample % (noteDuration * len);\n    \n    int notei1 = mSample / noteDuration;\n    int notei2 = (notei1 + 1) % len;\n    int pos = mSample - (notei1 * noteDuration);\n    float cosPos1 = (cos(float(pos) / float(noteDuration) * PI) + 1.) / 2.;\n\n    float nt1_1 = nots1[notei1];\n    float nt2_1 = nots1[notei2];\n    float nt1v_1 = vols1[notei1] * cosPos1;\n    float nt2v_1 = vols1[notei2] * (1. - cosPos1);\n\n    float nt1_2 = nots2[notei1];\n    float nt2_2 = nots2[notei2];\n    float nt1v_2 = vols2[notei1] * cosPos1;\n    float nt2v_2 = vols2[notei2] * (1. - cosPos1);\n    \n    return \n        sqrWave((float(mSample) / float(iSampleRate)), nt1_1) * nt1v_1 * 0.2 +\n        sqrWave((float(mSample) / float(iSampleRate)), nt2_1) * nt2v_1 * 0.2 +\n\n        sawWave((float(mSample) / float(iSampleRate)), nt1_2) * nt1v_2 * 0.2 +\n        sawWave((float(mSample) / float(iSampleRate)), nt2_2) * nt2v_2 * 0.2 ;\n}\n\nvec2 mainSound( int samp, float time )\n{\n    // A 440 Hz wave that attenuates quickly overt time\n    return vec2(synth(0, samp), synth(1, samp));\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}