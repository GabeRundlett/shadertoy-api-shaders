{
    "Shader": {
        "info": {
            "date": "1601102981",
            "description": "shortening athibaul's [url]https://shadertoy.com/view/wlsBRX[/url]\nJust raymarching a scene with pebbles, for fun and for learning about microfacet-based BRDFs.\n\nparallax-less: 596 chars here : [url]https://www.shadertoy.com/view/3scyRB[/url]\n",
            "flags": 0,
            "hasliked": 0,
            "id": "3dcyzS",
            "likes": 28,
            "name": "Raymarching Pebbles - shortened",
            "published": 3,
            "tags": [
                "raymarching",
                "texture",
                "heightmap",
                "stone"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 847
        },
        "renderpass": [
            {
                "code": "// shortened \"Raymarching Pebbles\" (1661 chars) by athibaul. https://shadertoy.com/view/wlsBRX\n\n#define H(p)      texture( iChannel0, (p).xy )\n#define H1(p)     texture( iChannel1, (p).xy )\n#define H2(p)   ( H(p) + .08*H1(p)  ).r\n#define map(p)  ( 1. - (p).z - .1* H2(p)  )\n\n#define C(p,d)             /* curvature */    \\\n  4.*( textureLod(iChannel0, (p).xy, log2(2.5*d*512.)) - H(p) ).r\n\n#define AO(p) clamp(1. - C(p, .003) *8.       \\\n                       - C(p, .02 ) *.7       \\\n                       - C(p, .1  ) *.3,      \\\n                    0., 1. )\n\nvec2 e = vec2(.001, -.001);\n#define N( p )   /* IQ Tetrahedral normal */  \\\n    normalize( e.xyy * map(p + e.xyy) +       \\\n               e.yyx * map(p + e.yyx) +       \\\n               e.yxy * map(p + e.yxy) +       \\\n               e.xxx * map(p + e.xxx)   )\n\nvec3 h;\n#define specular( l, N, v, ap, f0)            \\\n  (  h = normalize(l+v),                      \\\n       (ap+2.)/6.28 *pow(dot(N, h), ap)       \\\n      / dot(l,h)                              \\\n      * f0  ) // ( f0 + (1.-f0)*pow(max(0.,1.-dot(l,h)),5.) ) )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2  R = iResolution.xy;\n    float t = iTime, d, l;\n\n    vec3 p = vec3( t*.1, .2*cos(t*.5), 0 ), N,      // initial pos\n         L = p + .3* vec3( cos(t*3.), sin(t), -1 ), // light dir\n         D = normalize( vec3(u+u - R, 3.*R.y) );    // ray dir\n    D.xy  *= mat2(cos( cos(t*.2) + vec4(0,33,11,0)));    \n\n    for(int j=0; j<32; j++){            // --- raymarch heightMap surface\n        d = map(p);\n        if(d < .001) break; \n        p += d*.3*D;\n    }\n    N = N(p); l = length( L -= p );     // --- shading\n    O = AO(p) * (   2.5* H1(p) * dot(L,N) / (l*l*l)    // diffuse\n                  +  .2* specular(-D, N, L/l, 60., .2) // specular\n                );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 45,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}