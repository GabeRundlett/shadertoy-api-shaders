{
    "Shader": {
        "info": {
            "date": "1581023134",
            "description": "wanted to test scaling texture...\nI should have called it Bond...",
            "flags": 32,
            "hasliked": 0,
            "id": "Wt3XW7",
            "likes": 2,
            "name": "Down the bunny hole",
            "published": 3,
            "tags": [
                "tunnel"
            ],
            "usePreview": 0,
            "username": "hanabi",
            "viewed": 323
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define M_PI 3.14159265358\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = vec2(0.1) + 0.8 * fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0, uv) * 0.91;\n    \n    vec2 center = (iResolution.xy) / 2.;\n    float t = M_PI / 180. * float(iFrame*2);\n    vec2 foci = center + vec2(cos(1.2*t), sin(1.1-t)) * 10.;\n    float r = iResolution.y / 20.;\n\n    if (distance(fragCoord, foci) < r)\n    \tfragColor = vec4(1., 0.1, 0.2, 1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}