{
    "Shader": {
        "info": {
            "date": "1365557084",
            "description": "Nautilus 1k, I did this a while ago, thanks iq for all the great code and insights here\n",
            "flags": 0,
            "hasliked": 0,
            "id": "MdXGz4",
            "likes": 42,
            "name": "Nautilus",
            "published": 3,
            "tags": [
                "distancefield",
                "1k"
            ],
            "usePreview": 0,
            "username": "weyland",
            "viewed": 2394
        },
        "renderpass": [
            {
                "code": "// Nautilus 1k ...\n\nfloat e(vec3 c)\n{\n\tc=cos(vec3(cos(c.r+iTime/8.)*c.r-cos(c.g+iTime/9.)*c.g,c.b/3.*c.r-cos(iTime/7.)*c.g,c.r+c.g+c.b/1.25+iTime));\n\treturn dot(c*c,vec3(1.))-1.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 c=-1.+2.*fragCoord.xy / iResolution.xy;\n    vec3 o=vec3(c.r,c.g+cos(iTime/2.)/30.,0),g=vec3(c.r+cos(iTime)/30.,c.g,1)/64.;\n    float m=1.0;\n\tfloat t=0.0;\n    for(int j=0;j<333;j++)\n    {\n        if( m>.4)\n\t\t{\n            t = (1.0+float(j))*2.0;\n   \t\t\tm = e(o+g*t);\n\t\t}\n    }\n    vec3 r=vec3(.1,0.,0.);\n\tvec3 n=m-vec3( e(vec3(o+g*t+r.rgg)),\n                   e(vec3(o+g*t+r.grg)),\n                   e(vec3(o+g*t+r.ggr)) );\n    vec3 v=vec3(dot(vec3(0,0,-.5),n)+dot(vec3(0.0,-.5,.5),n));\n\tfragColor=vec4(v + vec3(.1+cos(iTime/14.)/8.,.1,.1-cos(iTime/3.)/19.)*(t/41.),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}