{
    "Shader": {
        "info": {
            "date": "1658317859",
            "description": "reproducing https://twitter.com/KomaTebe/status/1549001155338018818\n\nmouse control ( click bottom left for demo back ) ",
            "flags": 0,
            "hasliked": 0,
            "id": "NsKBDw",
            "likes": 23,
            "name": "spider crawler",
            "published": 3,
            "tags": [
                "2d",
                "short",
                "golf",
                "reproduction",
                "3tweets"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 395
        },
        "renderpass": [
            {
                "code": "// readable version below\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = 5.* ( u+u - R ) / R.y,\n         M = iMouse.xy, D;\n    M = length(M)<10. ?  2.*cos(iTime+vec2(0,11)) + sin(2.1*iTime+vec2(0,12))\n                      :  5.*( M+M - R ) / R.y, // mouse control\n    O-=O;\n    for( int k=0; k<25; k++) {\n        float d = dot( D = vec2(k%5,k/5)-2. - fract(M), D);\n        d > 1. && d < 4.                       // draw AA line\n            ? O += max(0., 1.-R.y/15.* length( U-M - D * clamp( dot(U-M,D)/d, 0.,1.) ) )\n            : O;\n     }\n}\n\n\n\n\n\n\n/** // --- 407 chars\n\n#define S(v) smoothstep(15./R.y,0.,v)          // antialiasing\n\nfloat L(vec2 p, vec2 a,vec2 b) {               // draw line\n    p -= a, b -= a;\n    return length(p - b * clamp(dot(p, b) / dot(b, b), 0., 1.) );                       \n}\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = 5.* ( u+u - R ) / R.y, I = floor(U),\n         M = iMouse.xy, J;\n    M = length(M)<10. ? 2.*cos(iTime+vec2(0,11)) + sin(2.1*iTime+vec2(0,12))\n                      : 5.*( M+M - R ) / R.y, // mouse control\n    O-=O;\n    for( int k=0; k<25; k++) {\n        J = I + vec2(k%5-2,k/5-2);\n        float d = length( J - M );\n        d > 1. && d < 2. ?  O += S(L( U, J, M)) : O;\n    }\n // O += S(length(U-I));                       // show grid dots\n}\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}