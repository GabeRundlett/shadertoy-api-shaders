{
    "Shader": {
        "info": {
            "date": "1587277806",
            "description": "An Audio Responsive Music Video effect",
            "flags": 64,
            "hasliked": 0,
            "id": "Wd2yDy",
            "likes": 7,
            "name": "Video Visualizer AMV Effect",
            "published": 3,
            "tags": [
                "fft",
                "audio",
                "glow",
                "visualizer",
                "chromaticabberation"
            ],
            "usePreview": 0,
            "username": "colorindarkness",
            "viewed": 757
        },
        "renderpass": [
            {
                "code": "#define freqStart -1.0\n#define freqInterval 0.01\n#define sampleSize 0.02           // How accurately to sample spectrum, must be a factor of 1.0\n\n\nfloat glow_radius = 0.00002;\nfloat glow_intens = 0.00125;\nfloat glow_blur_step = 0.5;\nfloat glow_num_steps = 1.0; // 1.0 is hollywood glow :)\n\nfloat fixcolor(float x) {\n    return 1.0-round(x*glow_num_steps)/glow_num_steps;\n}\n\nfloat getcolor(vec2 uv) {\n    vec4 c = texture(iChannel0, uv);\n    return max(fixcolor(c.r),max(fixcolor(c.g),fixcolor(c.b)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 v = fragCoord.xy / iResolution.xy;\n    float val = texture(iChannel1, vec2(.3,.152)).r;//;sin(iDate.w)/2.+.5;\n    float val2 = texture(iChannel1, vec2(.3,.152)).r;//;sin(iDate.w)/2.+.5;\n    vec2 offset = (v-.5)*val;\n    float dist = distance(v,vec2(.5));\n    vec2 uv = v-offset*dist;\n    //vec2 uv = fragCoord/iResolution.xy;\n    float mdst = dist/distance(vec2(.5), vec2(1.));\n    float distanceMul = ((((uv.x>1.)||(uv.x<0.))||((uv.y>1.)||(uv.y<0.)))?0.:1.);    \n    vec2 xy = fragCoord.xy / iResolution.xy;  \n    \n    \n    vec4 c = texture(iChannel0, uv)*val2;\n     \n    float d = 0.0;    \n    for (float x=0.0; x<1.0; x+=glow_blur_step) \n        for (float y=0.0; y<1.0; y+=glow_blur_step) {\n            d += getcolor(uv+glow_radius*vec2(x-0.5, y-0.5));\n        }\n    \n    float glow_intens2 = texture(iChannel1, vec2(1,0)).r;//;sin(iDate.w)/2.+.5;\n\n    d *= glow_intens2*.2;\n    \n    float intensity = 0.0;\n\tfor(float s = 0.0; s < freqInterval; s += freqInterval * sampleSize) {\n\t\tintensity += texture(iChannel1, vec2(freqStart + s, 0.0)).r;\n\t}\n    intensity = abs(intensity)*1.0;\n    intensity = pow((intensity*sampleSize),3.0)*4.0;\n    \n    \n    //set offsets\n    vec2 rOffset = vec2(-0.02,0)*intensity;\n    vec2 gOffset = vec2(0.0,0)*intensity;\n    vec2 bOffset = vec2(0.04,0)*intensity;\n    \n    vec4 rValue = texture(iChannel0, xy - rOffset);\n    vec4 gValue = texture(iChannel0, xy - gOffset);\n    vec4 bValue = texture(iChannel0, xy - bOffset);\n\n    \n    fragColor = vec4(rValue.r, gValue.g, bValue.b, 1.0)*0.6; //rgb effect\n    fragColor += distanceMul*texture(iChannel0,uv, (dist*val)*25.); //fisheye effect\n    fragColor += vec4(d,d,d,d)+c; //glow effect\n    \n    \n    \n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 1,
                        "ctype": "musicstream",
                        "id": 22129,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/witchhvnt/g0ne-forever/"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}