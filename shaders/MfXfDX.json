{
    "Shader": {
        "info": {
            "date": "1724438587",
            "description": "originals https://www.shadertoy.com/view/mtyGWy https://glslsandbox.com/e#65773.0",
            "flags": 0,
            "hasliked": 0,
            "id": "MfXfDX",
            "likes": 1,
            "name": "signals",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 72
        },
        "renderpass": [
            {
                "code": "#define time iTime\n#define resolution iResolution.xy\n#define hash(p)  fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453)\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n   vec2 p = 2. * (gl_FragCoord.xy-resolution/2.) / resolution.y;\n    float t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(p.xy) + .07)) * 2.2;\n\tfloat si = sin(t);\n\tfloat co = cos(t);\n\tmat2 ma = mat2(co, si, -si, co);\n     vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n\n    for (float i = 0.0; i < 15.0; i++) {\n       uv.x+=iTime*0.25;\n        uv = fract(uv * 2.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.04 + iTime*.4);\n\n        d = sin(d*8. + iTime)/8.;\n        d = abs(d);\n\n        d = pow(0.002 / d, 1.2);\n\n        finalColor += col * d;\n    }\n\tfloat f=0., r;\n    vec4 o=fragColor;\n        vec2 p2=fragCoord;\np2 *= mat2(1,1./1.73, 0,2./1.73) / 4.; \n    vec2  g = fract( p2*ma ),                     // local diamond coordinate\n          i = floor( p2*ma );                     // diamond id\n    float k = mod(i.x+i.y,3.);\n\n    i = k < 2. ?  i + k  :  i + step(g.yx,g); // hexagon id\n    o = vec4( hash(i)  );\n    \n    \n\tconst float I = 16.;\n\tfor(float i=1.; i<=I; i++) {\n\t\tif(abs(p.y)+abs(p.y)<1.) {\n       \n\t\t    r = cos(time+1.03*i)/2.;\n           \n\t\t    if(p.x<2.*r) {\n           \n\t\t\tp.x -= r-.5;\n\t\t\to.xyz /= r+.5;\n            o.xy*=ma;\n\t\t    }\n\t\n\t\telse {\n         \n\t\t\tp.x -= r+.5;\n\t\t\tp /= r-.5;\n              \n\t\t    }\n\t\t    f = i/I;\n\t\t}\n\t}\n    fragColor = vec4(vec3(0.,0.5+ finalColor.x*0.5,3.)*vec3(f), 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}