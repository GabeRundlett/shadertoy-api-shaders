{
    "Shader": {
        "info": {
            "date": "1549708381",
            "description": "ja ja ja ja",
            "flags": 0,
            "hasliked": 0,
            "id": "WsjGRt",
            "likes": 2,
            "name": "ReKT",
            "published": 3,
            "tags": [
                "squaregrid"
            ],
            "usePreview": 0,
            "username": "winstonrenatan",
            "viewed": 400
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n#define red vec4(1.0, 0.0, 0.0, 0.0)\n#define green vec4(0.0, 1.0, 0.0, 0.0)\n#define blue vec4(0.0, 0.0, 1.0, 0.0)\n#define white vec4(1.0, 1.0, 1.0, 1.0)\n#define grey vec4(0.5, 0.5, 0.5, 0.25)\n\n//Rectangle Function\nfloat square(vec2 uv, vec2 pos, float width, float height){\n    uv = uv+pos;\n    vec2 bl = step(abs(uv*2.0-1.0), vec2(width));  //Width\n    vec2 b2 = step(abs(uv*2.0-1.0), vec2(height)); //Height\n    float shape = bl.x * b2.y;\n    \n\treturn shape;\n}\n\n//Grid Function\nfloat grid(vec2 uv, float res){\n    vec2 grid = fract(uv*res);\n    return 1.0-(step(res, grid.x)*step(res, grid.y));\n}\n\n//Rotate Function\nmat2 rotateObj(float angle){\n    return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\n//Scale Function\nmat2 scaleObj(vec2 scale){\n    return mat2(scale.x, 0.0, 0.0, scale.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n   \tvec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    vec3 color = vec3(0.0);\n    \n    //Make the grid\n    vec2 grid_uv = uv*300.;\n    color += vec3(1.0, 1.0, 1.0)*grid(grid_uv,0.01);\n    color += vec3(0.5, 0.5, 0.5)*grid(grid_uv,0.02);\n    color += vec3(0.2, 0.2, 0.2)*grid(grid_uv,0.1);\n    \n    //Rotation point at (3, 3)\n    uv-=vec2(0.1);\n    //Rotate -45 degree\n    uv = rotateObj(sin(-45.0))*uv;\n    //Put back to original place\n    uv+=vec2(0.1);\n    //Scale to 1/3 of origin size\n    uv = scaleObj(vec2(1.0*3.0))*uv;\n    //Make the square\n    float Square = square(uv, vec2(0.45, 0.45), 0.1, 0.1);\n    color += Square;\n    \n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}