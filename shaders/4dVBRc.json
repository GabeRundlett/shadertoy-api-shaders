{
    "Shader": {
        "info": {
            "date": "1529835546",
            "description": "Trying to replicate a gif.",
            "flags": 0,
            "hasliked": 0,
            "id": "4dVBRc",
            "likes": 14,
            "name": "Heart Tunnel",
            "published": 3,
            "tags": [
                "3d",
                "raymarch"
            ],
            "usePreview": 0,
            "username": "Klems",
            "viewed": 1087
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n\nmat2 rot(float t) {\n    return mat2(cos(t), sin(t), -sin(t), cos(t));\n}\n\nfloat heart(vec2 p) {\n    p.y -= 1.6;\n    float t = atan(p.y, p.x);\n    float s = sin(t);\n    float r = 2.0-2.0*s+s*(sqrt(abs(cos(t)))/(s+1.4));\n    return r+2.0;\n}\n\nvec3 hue( in float c ) {\n    return cos(2.0*PI*c + 2.0*PI/3.0*vec3(3,2,1))*0.5+0.5;\n}\n\nfloat map(vec3 p) {\n    p.y = -p.y;\n    p.y += p.z*p.z*0.05;\n    float r = heart(p.xy);\n    return length(p.xy)-r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord - iResolution.xy*0.5;\n    uv /= iResolution.y;\n    \n    vec3 dir = normalize(vec3(uv, 0.7));\n    dir.yz *= rot(-0.4);\n    \n    float tot = 0.0;\n    for (int i = 0; i < 100 ; i++) {\n        vec3 p = tot*dir;\n        tot += map(p)*0.9;\n    }\n\n\tvec3 c = hue(tot*0.3-iTime);\n    fragColor = vec4(c, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}