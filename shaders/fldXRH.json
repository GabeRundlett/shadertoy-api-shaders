{
    "Shader": {
        "info": {
            "date": "1638717583",
            "description": "this only has 2D velocity vectors\noriginally wanted the velocity to get atracted to neighbor velocity that is spining\naccidentally put an abs() in that calculation and this came out",
            "flags": 32,
            "hasliked": 0,
            "id": "fldXRH",
            "likes": 74,
            "name": "veinss",
            "published": 3,
            "tags": [
                "convolution"
            ],
            "usePreview": 1,
            "username": "lomateron",
            "viewed": 942
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 u = fragCoord/iResolution.xy;\n    vec4 a = texture(iChannel0,u);\n    fragColor =+sin(a.x*4.+vec4(1,3,5,4))*.25\n               +sin(a.y*4.+vec4(1,3,2,4))*.25\n               +.5;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec4  r = vec4(0);\n    vec4  a = A(u);\n    float z = 6.;\n    float t = 0.;\n    for(float i=-z; i<=z; ++i){\n    for(float j=-z; j<=z; ++j){\n        vec2  ij= vec2(i,j);\n        vec2  c = ij*(3./z);\n        float l = length(ij);\n        ij /= l; if(l==0.){ij= vec2(0);}\n        float e = exp(-dot(c,c)); t+=e;\n        vec4 b = A(u+vec2(i,j))-a;\n        r.x += e*dot(b.xy,ij);\n        r.y += abs(e*dot(b.xy,ij.yx*vec2(-1,1)));\n    }}\n    fragColor = r/t;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\n#define B(u) texture(iChannel1,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec4  r = A(u);\n    vec4  a = B(u);\n    float z = 6.;\n    for(float i=-z; i<=z; ++i){\n    for(float j=-z; j<=z; ++j){\n        vec2  ij= vec2(i,j);\n        vec2  c = ij*(3./z);\n        float l = length(ij);\n        ij /= l; if(l==0.){ij= vec2(0);}\n        float e = exp(-dot(c,c));\n        vec4 b = B(u+vec2(i,j));\n        r.xy += +(b.x)    *ij*e*.1\n                +(b.y-a.y)*ij*e*.5;\n    }}\n\n    fragColor = r;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\n#define B(u) texture(iChannel1,(u)/iResolution.xy)\n#define C(u) texture(iChannel2,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec4 t = A(u);\n    vec2 m = +t.xy\n             +B(u).xy*(t.z-.5)*0.\n             +t.z*vec2(0,.0)\n             -C(u).x*t.xy*.0;\n    float s = 0.;\n    float z    = 6.;//kernel convolution size\n    for(float i=-z; i<=z; ++i){\n    for(float j=-z; j<=z; ++j){\n      vec2 c = (m+vec2(i,j))*1.;\n      s += exp(-dot(c,c));\n    }}\n    if(s==0.){s = 1.;}\n    s = 1./s;\n    \n    fragColor = vec4(m,s,0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 46,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\n#define B(u) texture(iChannel1,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec4 a = vec4(0);\n    float z    = 6.;//kernel convolution size\n    for(float i=-z; i<=z; ++i){\n    for(float j=-z; j<=z; ++j){\n      vec4 t = A(u+vec2(i,j)); t.z = 1.;\n      vec4 m = B(u+vec2(i,j));\n      vec2 c = (m.xy-vec2(i,j))*1.;\n      float z = exp(-dot(c,c))*m.z*t.z;\n      a.xy += z*m.xy;\n      a.z  += z;\n    }}\n    float tz = 1./a.z; if(a.z==0.){tz = 0.;}\n    a.xy *= tz;\n    //a = A(u);\n    if(iMouse.z>0.)\n    {\n        vec2 m = 22.*(u-iMouse.xy)/iResolution.y;\n        a += vec4(m,0,0)*exp(-dot(m,m))*-.2;\n    }\n    if(iFrame==0)\n    {\n        vec2 m = 22.*(u-iResolution.xy*.5)/iResolution.y;\n        a = vec4(m,1,1)*exp(-dot(m,m));\n    }\n    fragColor = a;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}