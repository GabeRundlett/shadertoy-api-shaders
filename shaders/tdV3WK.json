{
    "Shader": {
        "info": {
            "date": "1571003138",
            "description": "Quick triangle grid prototype\n\nShader License: CC BY 3.0\nAuthor: Jan Mróz (jaszunio15)",
            "flags": 32,
            "hasliked": 0,
            "id": "tdV3WK",
            "likes": 20,
            "name": "3D layered triangles",
            "published": 3,
            "tags": [
                "grid",
                "triangles",
                "layered"
            ],
            "usePreview": 0,
            "username": "jaszunio15",
            "viewed": 680
        },
        "renderpass": [
            {
                "code": "//Shader License: CC BY 3.0\n//Author: Jan Mróz (jaszunio15)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 col = blur(iChannel0, fragCoord, iResolution.xy);\n    col = smoothstep(-0.19, 0.78, col);\t//Postprocess\n    fragColor = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define LAYERS 5.0\n\n#define BLUR_STRENGTH 4.0\n#define BLUR_RANGE 2.0\n\n\nfloat hash12(vec2 x)\n{\n \treturn fract(sin(dot(x, vec2(43.5287, 41.12871))) * 523.582);   \n}\n\nvec2 hash21(float x)\n{\n \treturn fract(sin(x * vec2(24.0181, 52.1984)) * 5081.4972);   \n}\n\n//Blur function\nvec4 blur(in sampler2D sampler, in vec2 fragCoord, in vec2 resolution)\n{\n    vec2 uv = fragCoord / resolution;\n    float blurStrength = distance(uv, vec2(0.5));\n    blurStrength = pow(blurStrength, BLUR_RANGE) * (resolution.x / 100.0) * BLUR_STRENGTH;\n    vec4 sum = vec4(0.0);\n    vec2 pixelSize = vec2(1.0) / resolution;\n\tfor (float x = -1.0; x <= 1.0; x += 1.0)\n    {\n     \tfor (float y = -1.0; y <= 1.0; y += 1.0)\n        {\n            sum += texture(sampler, uv + vec2(x, y) * pixelSize * blurStrength);\n        }\n    }\n\n    return sum / 9.0;\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "float grid(in vec2 uv)\n{\n\treturn hash12(floor(uv));\n}\n\n\nfloat triangleGrid(vec2 uv)\n{\n \tuv.y /= sqrt(3.0);\n\tvec2 gridUV = uv;\n\tgridUV.x = uv.x + uv.y;\n\tfloat value = grid(gridUV * 10.0 + 40.0);\n\tgridUV.x = uv.x - uv.y;\n\tvalue *= grid(gridUV * 10.0);\n\treturn value;\n}\n\nfloat layered3DTriangleGrid(vec2 uv, float alphaMod)\n{\n    float alpha = 1.0;\n    float gray = 0.0;\n    vec2 offset;\n    for (float i = 0.0; i < LAYERS; i++)\n    {\n        offset = hash21(alpha);\n        gray += alpha * triangleGrid(uv + iTime * 0.1 + offset); \n        alpha *= alphaMod;\n     \tuv *= 2.0;\n    }\n    gray *= (1.0 - alphaMod) / (1.0 - pow(alphaMod, LAYERS));\n    return gray;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.x;\n    uv *= pow(length(uv) * 0.5, 3.0) + 0.3;\n    float grid = layered3DTriangleGrid(uv * 0.4, 0.6);\n    vec4 randomCol = texture(iChannel0, vec2(iTime * 0.001));\n    fragColor = randomCol * grid;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = blur(iChannel0, fragCoord, iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = blur(iChannel0, fragCoord, iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = blur(iChannel0, fragCoord, iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}