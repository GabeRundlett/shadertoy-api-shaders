{
    "Shader": {
        "info": {
            "date": "1682746891",
            "description": "reworking it with a 'scene' and smoothstep.\n\ntop: AA\nbot: no AA",
            "flags": 0,
            "hasliked": 0,
            "id": "cltGR2",
            "likes": 9,
            "name": "fork color study VI-1.1",
            "published": 3,
            "tags": [
                "colorinteraction"
            ],
            "usePreview": 0,
            "username": "elenzil",
            "viewed": 159
        },
        "renderpass": [
            {
                "code": "\nfloat sdCircle(vec2 p, float radius) {\n    return length(p) - radius;\n}\n\n// return the distance to the nearest thing in the scene\nfloat sdScene(vec2 p) {\n    float d = 1e9;\n    \n    float circleWidth = 0.13;\n    \n    float sep = mix(0.6, 0.0, smoothstep(0.1, 0.9 * iResolution.x, iMouse.x));\n    vec2  off = vec2(sep * (p.x < 0.0 ? 1.0 : -1.0), 0.0);\n    \n    // four circles, offset by separation.\n    for (float n = 0.0; n < 4.0; ++n) {\n        d = min(d, abs(sdCircle(p + off, 1.0 - circleWidth * 2.0 * n)) - circleWidth / 2.0 );\n    }\n    \n    // erase a column in the middle.\n    if (sep > 0.0) {\n        d = max(d, -(abs(p.x) - sep));\n    }\n\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // pixelate to exaggerate aliasing\n    float pixelateAmount = iMouse.z > 1.0 ? 8.0 : 1.0;\n    vec2  pixelatesFragCoord = round(fragCoord / pixelateAmount) * pixelateAmount;\n    \n    // uv with (0,0) at the center of screen\n    float zoom = 0.54;\n    vec2  uv   = (pixelatesFragCoord * 2.0 - iResolution.xy)/iResolution.y / zoom;\n    \n    // smoothing epsilon\n    // 4 pixels above, 0 pixels below.\n    float eps = uv.y < 0.0 ? 0.0 : pixelateAmount * 4.0 / iResolution.y;\n    \n    vec3  c1  = vec3(0.506, 0.478, 0.506);\n    vec3  c2  = vec3(0.929, 0.725, 0.573);\n    vec3  c3  = vec3(0.69 , 0.584, 0.518);\n    vec3  c   = c1;\n    \n    // the distance to the scene\n    float d   = sdScene(uv);\n    \n    c = mix(c, c2, smoothstep(eps, -eps, -uv.x));\n    c = mix(c, c3, smoothstep(eps, -eps, d));\n    \n    // visualize the distance to the scene\n    if (iMouse.z > 1.0 && d > 0.0 && iMouse.y > iResolution.y / 2.0) {\n        c += cos(d * 30.0) * 0.1;\n    }\n    \n    // white line\n    if (round(fragCoord.y) == round(iResolution.y / 2.0)) {\n        c = mix(c, vec3(1.0), 0.5);\n    }\n    \n    fragColor = vec4(c, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}