{
    "Shader": {
        "info": {
            "date": "1687221672",
            "description": "Shader that combines pretty much everything ive learned about making grain look good\n\n- Using colored grain to give it more depth\n- Using overlay so that colors pop more\n- Mapping it on the midtones to keep clarity\n- Adding bright pixels to make it crispy",
            "flags": 0,
            "hasliked": 0,
            "id": "ddlyW2",
            "likes": 2,
            "name": "fye grain",
            "published": 3,
            "tags": [
                "noise",
                "postprocessing",
                "film",
                "grain"
            ],
            "usePreview": 0,
            "username": "1fluor",
            "viewed": 258
        },
        "renderpass": [
            {
                "code": "vec3 hash32(vec2 p) {\n    return fract(vec3(\n        sin(dot(p, vec2(127.1, 311.7))),\n        sin(dot(p, vec2(269.5, 183.3))),\n        sin(dot(p, vec2(419.2, 371.9)))\n    ) * 43758.5453);\n}\n\nfloat getLuminance(vec3 color) {\n    return dot(color.rgb, vec3(0.299, 0.587, 0.114));\n}\n\n\nvec3 grain(vec2 uv, vec3 col, float intensity, float threshold) {\n      vec3 noise = hash32(uv + vec2(fract(iTime)));\n\n      float crispNoise = step(getLuminance(noise), threshold);\n\n      noise = mix (vec3(0.5), noise, intensity);\n\n      vec3 screen = 1.0 - 2.0 * (1.0 - col) * (1.0 - noise);\n      vec3 mult = 2.0 * col * noise;\n\n      vec3 overlay = mix(screen, mult, step(col, vec3(0.5)));\n\n      vec3 mapMidtones = mix(col, overlay, 1.0 - distance(col, vec3(0.5)));\n\n      vec3 final = mapMidtones + vec3(crispNoise);\n\n      return final;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = texture(iChannel0, uv).rgb;\n    col = grain(uv, col, 0.4, 0.01);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}