{
    "Shader": {
        "info": {
            "date": "1470031554",
            "description": "A simple raymarched scene, a ground plane and a displaced sphere.",
            "flags": 0,
            "hasliked": 0,
            "id": "4ldGzB",
            "likes": 33,
            "name": "Basic Raymarched Displacement",
            "published": 3,
            "tags": [
                "reflection",
                "displacement",
                "lighting",
                "sphere",
                "raymarcher",
                "distance"
            ],
            "usePreview": 0,
            "username": "jackdavenport",
            "viewed": 1690
        },
        "renderpass": [
            {
                "code": "#define LIGHT_DIR normalize(vec3(45.,30.,-45.))\n\nfloat dstScene(vec3 p) {\n \n    vec3  n = normalize(-p);\n    vec2 uv = asin(n.xy) / 3.14159 + .5;\n    float d = texture(iChannel0,uv).x*.01;\n    \n    float dst = length(p)-(1.+d);\n    dst = min(dst, p.y + 1.);\n    \n    return dst;\n    \n}\n\nfloat raymarch(vec3 ori, vec3 dir, int maxIter) {\n \n    float d = 0.;\n    for(int i = 0; i < 256; i++) {\n        if(d > 1000. || i >= maxIter) {\n\t\t\tbreak;            \n        }\n        vec3    p = ori+dir*d;\n        float dst = dstScene(p);\n        d += dst * .75;\n        if(dst < .001) {\n            break;\n        }\n    }\n    return d;\n    \n}\n\nvec3 calcNormal(vec3 p) {\n \n    vec2 eps = vec2(.001,0.);\n    vec3 n   = vec3(dstScene(p+eps.xyy)-dstScene(p-eps.xyy),\n                    dstScene(p+eps.yxy)-dstScene(p-eps.yxy),\n                    dstScene(p+eps.yyx)-dstScene(p-eps.yyx));\n    return normalize(n);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    \n    vec3 ori = vec3(sin(iTime),0.,-3.);\n    vec3 dir = vec3(uv, 1.);\n    dir = normalize(dir);\n    \n    float d = raymarch(ori,dir,256);\n    \n    vec3 col = vec3(0.);\n    if(d < 1000.) {\n        vec3 p = ori+dir*d;\n        vec3 n = calcNormal(p);\n        vec3 r = normalize(reflect(dir,n));\n        \n    \tfloat dif = max(dot(LIGHT_DIR,n),0.);\n        if(raymarch(p+LIGHT_DIR*.01,LIGHT_DIR,64) < 1000.) {\n        \tdif = 0.;   \n        }\n        float spc = pow(max(dot(LIGHT_DIR,r),0.),30.)*dif;\n        col = vec3(1.,0.,0.)*(dif+.2)+spc;\n        \n        float fres = 1.-pow(max(-dot(dir,n),0.),.3);\n        vec3 rc = vec3(0.);\n        float rd = raymarch(p+r*.01,r,256);\n        if(rd < 1000.) {\n            vec3 rp = p+r*rd;\n            vec3 rn = calcNormal(rp);\n        \trc = vec3(1.,0.,0.)*max(dot(LIGHT_DIR,rn),0.);\n        } else {\n        \trc = texture(iChannel1,r).xyz;   \n        }\n        col = mix(col, rc, fres);\n        //col = vec3(fres);\n    } else {\n\t\tcol = texture(iChannel1, dir).xyz;\n    }\n    \n\tfragColor = vec4(col,1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "cubemap",
                        "id": 24,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 46,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}