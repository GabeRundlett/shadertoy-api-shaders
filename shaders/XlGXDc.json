{
    "Shader": {
        "info": {
            "date": "1486115946",
            "description": "click to change zoom",
            "flags": 0,
            "hasliked": 0,
            "id": "XlGXDc",
            "likes": 4,
            "name": "inverse colored labyrinth",
            "published": 3,
            "tags": [
                "random",
                "inverse",
                "labyrinth"
            ],
            "usePreview": 0,
            "username": "lomateron",
            "viewed": 560
        },
        "renderpass": [
            {
                "code": "float rand(vec2 v)\n{\n    return fract(sin(dot(v,vec2(12.9898,78.233)))*43758.5453);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv*2.-1.;\n    uv.x*=iResolution.x/iResolution.y;\n    uv+=iTime*.03;\n\n    float t = 8.*iMouse.x/iResolution.x;\n    \n    vec2 uz = uv*(2.+t);\n    float r = rand(floor(uz));\n    \n    vec2 f1 = fract(uz);\n    if(r<.5){f1.x = 1.-f1.x;}\n    vec2 f2 = 1.-f1;\n    float c1 = .001/abs(dot(f1,f1)-.25)+\n        \t   .001/abs(dot(f2,f2)-.25);\n    \n    f1 = fract(uz+.5);\n    if(r<.5){f1.x = 1.-f1.x;}\n    f2 = 1.-f1;\n    c1 -= .01/abs(dot(f1,f1)-.25)+\n          .01/abs(dot(f2,f2)-.25);\n    \n    vec4 cch = sin(iTime*vec4(.1,.2,.3,0.));\n    \n\tfragColor = abs(.5-c1*cch);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}