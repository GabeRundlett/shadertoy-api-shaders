{
    "Shader": {
        "info": {
            "date": "1609177106",
            "description": "ref game: [url]https://www.pinkbunny.shop/products/leisure-brain-toys-rubiks-cube[/url]\nsort the balls !\n- up/down key to roll the balls in the current ring.\n- space to change current ring.\n( after coding this puzzl, I discover solving it is trivial :-( )",
            "flags": 48,
            "hasliked": 0,
            "id": "ttdcD4",
            "likes": 5,
            "name": "Rubik's ring",
            "published": 3,
            "tags": [
                "game",
                "puzzle",
                "short",
                "reproduction"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 456
        },
        "renderpass": [
            {
                "code": "#define S(v)       smoothstep( 15./R.y, 0., v )                    // antialiasing\n#define sR(w,h,r)  length(max( abs(U) - vec2(w,h)/2. +r , 0.)) - r // smooth rectangle\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = 12.* ( u - .5*R ) / R.y, P;\n    float v, r = step(0.,U.x), m=1.,\n                                                                   // --- draw board\n    M  = S(sR(13,11.5, 2.));                                       // main body\n    \n    M -= v = S(sR(6,5, .1));                                       // central hole\n    if (v>.9) \n      U.x -= T(0).w ,\n      M  = S(sR(4,5, .1)),                                         // central body\n      m = S( .5 - abs(U.x) );                                      // central rail chunk\n    else\n      U.x = abs(U.x) - 3.,                                         // ring rails\n      m = S( .5 - abs( sR(5,10, 2.5)+.5 ) ); \n    O = m * M * texture( iChannel1, U/12.);\n    \n    for( int i=0; i < 32; i++ )  {                                 // --- draw balls\n        vec4 B = T(i);\n#define C(o,s)   2.* cos((B.z+o)/10.*6.28+vec2(0,33)) s vec2(0,2.5) \n        if ( v < .9 ?  B.y==r : B.z < 4. || B.z > 17. )            // set position\n            P = B.z <  4. ? vec2( -2, (B.z-1.5)*1.25 ) \n              : B.z <  9. ? C( 1.5, + )\n              : B.z < 13. ? vec2(  2, (10.5-B.z)*1.25 )\n              :             C(-2.5, - ),\n            v >.9 ? P.x = 0. : v,\n            O[int(B.x)] += sqrt(max( 1.-length( P - U )*1.6 , 0.)) * (1.-m); // draw sphere\n         // O[int(B.x)] += S( length( P - U ) - .5 ); // * sqrt((1.+B.z)/16.);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define T(i) texelFetch(iChannel0, ivec2(i,0), 0 )",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "                                                    // autodemo before click\n#define K(a,c) ( iMouse.xy==vec2(0) ? fract(1e4*sin(1e4*(float(a)+iTime))) > (c>1?.95:.5) ? 1. : 0. \\\n                                    : texelFetch( iChannel3, ivec2(a,c), 0 ).x )\n#define keyToggle(a)   K(a,2)                       // https://www.shadertoy.com/view/llySRh\n#define keyClick(a)    K(a,0)\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    if ( U.y > 1. || U.x > 32. ) return;            // use only 32 pixels for states\n    int i = int(U.x);\n    \n    if ( iFrame < 1 ) {                             // --- init state\n        O = vec4( ( i^(i/4)^int(iTime*99.) ) & 1,   // color = 0 or 1\n                    i > 15,                         // ring = 0 or 1   ( ignored for ranks 0..3 ) \n                  ( i + (i>15?6:2) ) % 18,          // rank in ring    ( 0..3 = common central part ).\n                    1 );\n        return;\n     }\n     \n     O = T(i);                                      // previous state\n     \n     if (i==0)  O.w = abs(O.w) < 1.                 // selector: anim side ( start only if balls are not moving )\n                        ? O.w + sign(O.w)/16. \n                        : keyClick(32)>0. && T(1).w==0. \n                            ? (1.-2.*keyToggle(32))/16. : O.w;\n     if (i==1) O.w = abs(O.w) > .01                 // balls motion ( start only if selector is not moving )\n                       ? O.w - sign(O.w)/16.\n                       : abs(T(0).w) >= 1.\n                           ? keyClick(38) - keyClick(40) : 0.; // keypressed direction ( up down arrows )\n     float s = step(0.,T(0).w), \n           d = T(1).w;                              // balls direction\n           \n                                                    // --- rotate balls in the selected ring\n     if ( O.y == s || O.z < 4.  ) O.y = s, O.z = mod( O.z + sign(d)/16., 18.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}