{
    "Shader": {
        "info": {
            "date": "1583326348",
            "description": "Ripples",
            "flags": 0,
            "hasliked": 0,
            "id": "3lGXzt",
            "likes": 10,
            "name": "Ripples normal map",
            "published": 3,
            "tags": [
                "effect"
            ],
            "usePreview": 0,
            "username": "OskarSwierad",
            "viewed": 636
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n\nfloat saturate(float x)\n{\n\treturn clamp(x, 0.0, 1.0);\n}\n\nfloat RemapTo01(float val, float rangeMin, float rangeMax)\n{\n    return saturate((val - rangeMin) / (rangeMax - rangeMin));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 aspectRatio = vec2(1.0, iResolution.y / iResolution.x);\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 uvCentered = uv * 2.0 - vec2(1.0);\n    uvCentered *= aspectRatio;\n    \n    vec2 pivot = vec2(0.05, 0.1);\n    \n    float radius = 0.5;\n    vec2 diff = (uvCentered - pivot) / radius;\n    float dist = length(diff);\n    \n    float mask = float(dist < 1.0);\n    \n    //diff = smoothstep(vec2(0.0), vec2(1.0), diff);\n    \n    float waveFreq = 32.0;\n    float speed = 3.0;\n    float distForSin = length(diff);\n    distForSin = pow(distForSin, 0.5);\n    float height = sin(distForSin * waveFreq - (iTime * speed));\n    //height *= 0.5;\n    //height = (dist < 1.0) ? heightAdd : 0.0;\n    \n    vec2 dir = normalize(diff);\n    //diff += dir * height * 0.9;\n    \n    vec3 norm = normalize(vec3(\n        diff.xy,\n        sqrt( saturate( 1.0 - dot( diff.xy, diff.xy ) ) )\n    ));\n    \n    norm.xy += dir * height * 0.9;\n    norm = normalize(norm);\n    \n    \n    //norm.z += heightAdd;\n    //norm = normalize(norm);\n    \n    float softEdgeMask = RemapTo01(dist, 1.0, 0.4);\n    softEdgeMask = smoothstep(0.0, 1.0, softEdgeMask);\n    if (softEdgeMask > 0.0)\n    {\n    \tnorm.xy *= softEdgeMask;\n    }\n    norm = normalize(norm);\n    \n    vec3 col = vec3(0.5);\n    col = vec3(uvCentered, 0.0);\n    //col = vec3(dist);\n    \n    if (mask < 1.0)\n    {\n        norm = vec3(0,0,1);\n    }\n    \n    col = vec3(norm);\n    \n    col = col * 0.5 + vec3(0.5);\n    //col = vec3(heightAdd);\n   \n\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}