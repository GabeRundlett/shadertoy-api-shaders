{
    "Shader": {
        "info": {
            "date": "1624874196",
            "description": "...",
            "flags": 0,
            "hasliked": 0,
            "id": "Nl23Dy",
            "likes": 1,
            "name": "- Sphere Rotation -",
            "published": 3,
            "tags": [
                "2d",
                "3d",
                "sphere",
                "circle",
                "vignette",
                "rotation"
            ],
            "usePreview": 0,
            "username": "Mihaha",
            "viewed": 263
        },
        "renderpass": [
            {
                "code": "/*\n\n> by MihasGames, 25.06.2021 <\n(https://mihas-games.itch.io/)\n\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0.9);\n    float t = iTime*3.5;\n    \n    // Pixel Normalizations //\n    vec2 uv101 = fragCoord.xy/iResolution.xy,\n         uv = (uv101 - 0.5) * vec2(iResolution.x / iResolution.y, 1);\n   \n    float rotate_radius = (cos(t/7.)*0.5+0.5)*0.3 + 0.7; \n    vec2 sphere_position = vec2(sin(t)*0.55, cos(t)*0.2-0.04);\n    float sphere_size = ((cos(t)*0.5+0.5)*0.4*rotate_radius+0.6/rotate_radius)*0.45;\n    \n    if (sqrt(length( uv + sphere_position*rotate_radius )) < sphere_size) col = vec3(uv.xy/-3.+0.5, 1.);\n\n    // Vignette //\n    uv = uv101 * (1. - uv101);    \n    col *= pow(uv.x*uv.y * 25., 0.07);\n        \n    fragColor = vec4(col,1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}