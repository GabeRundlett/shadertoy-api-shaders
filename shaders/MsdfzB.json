{
    "Shader": {
        "info": {
            "date": "1525808211",
            "description": "idk",
            "flags": 0,
            "hasliked": 0,
            "id": "MsdfzB",
            "likes": 0,
            "name": "Combinatorial Shape Rendering",
            "published": 3,
            "tags": [
                "glsl"
            ],
            "usePreview": 0,
            "username": "phrz",
            "viewed": 416
        },
        "renderpass": [
            {
                "code": "vec4 rect(vec2 uv, vec2 start, vec2 size, vec4 inputColor, vec4 color) {\n\tvec2 end = start + size;\n    return (uv.x >= start.x && uv.y >= start.y && uv.x <= end.x && uv.y <= end.y) ? color : inputColor;\n}\n\nvec4 circle(vec2 uv, vec2 center, float radius, vec4 inputColor, vec4 color) {\n    return length(uv - center) > radius ? inputColor : color;\n}\n\nvec4 pixel(vec2 uv) {\n    vec4 result;\n    \n    vec4 gray   = vec4(.5,.5,.5,1.);\n    vec4 red    = vec4(1.,0.,0.,1.);\n    vec4 green  = vec4(0.,1.,0.,1.);\n    vec4 blue   = vec4(0.,0.,1.,1.);\n    vec4 yellow = vec4(1.,1.,0.,1.);\n    \n    result = vec4(0.,0.,0.,0.);\n    result = rect(uv, vec2(.1,.1), vec2(.8,.8), result, gray);\n    result = circle(uv, vec2(.35,.5), .1, result, red);\n    result = circle(uv, vec2(.45,.5), .1, result, green);\n    result = circle(uv, vec2(.55,.5), .1, result, blue);\n    result = circle(uv, vec2(.65,.5), .1, result, yellow);\n    \n    return result;\n}\n\nvec4 blur(vec2 uv) {\n    float blurDelta = 0.005;\n\tvec4 result = vec4(0.,0.,0.,0.);\n    for(int i = -1; i < 2; i++) for(int j = -1; j < 2; j++) {\n        result += pixel(uv + vec2(float(i)*blurDelta, float(j)*blurDelta));\n    }\n    result /= 9.0;\n    return result;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    fragColor = blur(uv);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}