{
    "Shader": {
        "info": {
            "date": "1457271547",
            "description": "thanks to qmuntada I now have a nice paralax background<br/>original shader : 4dSXzR<br/>background shader : ldKGDd\n[Edit] After quite some time I've deiscovered that it was inspiered by the game out there (I'm not as creative as I'de like to think)",
            "flags": 32,
            "hasliked": 0,
            "id": "Xd3SRr",
            "likes": 5,
            "name": "Space Voyage 2.0",
            "published": 3,
            "tags": [
                "2d",
                "parallax",
                "space"
            ],
            "usePreview": 0,
            "username": "antonOTI",
            "viewed": 870
        },
        "renderpass": [
            {
                "code": "// www.shadertoy.com/view/4dSXzR\n\nfloat rectangle(vec2 p,vec2 dim,vec2 center,float a)\n{\n\tp.x -= center.x;\n\tp.y -= center.y;\n\tfloat x =  p.x *cos(a) - p.y* sin( a) ;\n\tfloat y = p.y *cos(a) + p.x *sin(a) ;\n\treturn step(-dim.x/2.,x)*step(x,dim.x/2.)*step(-dim.y/2.,y)*step(y,dim.y/2.);\n}\n\nfloat logo(in vec2 uv)\n{\n    uv = uv * iResolution.xy / iResolution.x;\n \tfloat f = step(distance(uv ,vec2(.5,.5)),.1); \n    f -= step(distance(uv ,vec2(.55,.47)),.05);\n    f -= step(distance(uv ,vec2(.5,.5)),.09)*.05;\n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    //shake\n    uv += (texture(iChannel1,vec2(0.,iTime)).xy - vec2(.5)) *.01 * (sin(iTime)*.5+1.);\n    \n    vec4 col = texture(iChannel0,uv * vec2(.59,1.)) ;\n    //oscillation\n    uv = uv * 3. + vec2(-.5);\n    uv = (uv-vec2(.25)) * ((cos(iTime * .5)*.5+.5)*.25 +.95) + vec2(.25);\n    uv.y += sin(iTime)*.05;\n    \n    float t = iTime * 2.09439333;\n    vec2 bp  = uv - vec2(.5,.26);\n    bp *= vec2(.2 ,(7.5 + uv.x*10.5) *1.6);\n    float r = (1.-distance(bp,vec2(cos(t*-9.),sin(t*.3))*.05))*1.25;\n    t += 2.0943;\n    float g = (1.-distance(bp,vec2(cos(t*-3. ),sin(t + bp.x*4.))*0.05))*1.25;\n    t += 2.0943;\n    float b = (1.-distance(bp,vec2(cos(t),-sin(t*4.8))*.05 ))*1.25;\n    vec4 beam = vec4(r,g,b,1.);\n    beam *= step(.18,uv.y)*step(uv.y,.34) * step(uv.x,.3);\n    \n    col += beam;\n    \n    //engin\n    col = mix(col,vec4(1.-length(uv.y *8. - 2.4)),rectangle(uv + vec2(uv.y * .4,0.),vec2(.1),vec2(.235,.29),0.));\n    col = mix(col,vec4(1.-length(uv.y *8. - 1.0)),rectangle(uv + vec2(uv.y * .4,0.),vec2(.1),vec2(.23,.24),0.));\n    col = mix(col,vec4(1.-length(uv.y *8. - 1.9)),rectangle(uv + vec2(uv.y * .4,0.),vec2(.1),vec2(.22,.27),0.));\n    //back wings\n    col = mix(col,vec4(.25),rectangle(uv + vec2(uv.y * -.3,0.),vec2(.12),vec2(.18,.14),0.));\n    col = mix(col,vec4(.25),rectangle(uv + vec2(uv.y * -.3,0.),vec2(.05,.04),vec2(.53,.21),0.));\n    col = mix(col,vec4(.37),rectangle(uv + vec2(uv.y * .5,0.),vec2(.19,.20),vec2(.40,.41),0.));\n    col = mix(col,vec4(.15),rectangle(uv + vec2(uv.y * .5,0.),vec2(.16,.17),vec2(.40,.41),0.));\n    //main body\n    col = mix(col,vec4(.5),rectangle(uv + vec2(uv.y * .4,0.),vec2(.4,.1),vec2(.5,.3),0.));\n    col = mix(col,vec4(.7),rectangle(uv + vec2(uv.y * .4,0.),vec2(.4,.08),vec2(.5,.3),0.));\n    col = mix(col,vec4(.5),rectangle(uv + vec2(uv.y * .4,0.),vec2(.3),vec2(.35,.3),0.));\n    col = mix(col,vec4(.8),rectangle(uv + vec2(uv.y * .4,0.),vec2(.28),vec2(.35,.3),0.));\n    \n    col = mix(col,vec4(.9,.9,.9,1.),rectangle(uv + vec2(uv.y * .4), vec2(.28,.04),vec2(.35,.47),0.));\n    col = mix(col,vec4(.9,.1,.1,1.),rectangle(uv + vec2(uv.y * .4), vec2(.28,.05),vec2(.35,.5),0.));\n    col = mix(col,vec4(.9,.1,.1,1.),rectangle(uv + vec2(uv.y * .4), vec2(.28,.025),vec2(.35,.45),0.));\n    \n    //head\n    col = mix(col,vec4(.5),rectangle(uv + vec2(uv.y * .4,0.),vec2(.18),vec2(.7,.3),0.));\n    col = mix(col,vec4(.9),rectangle(uv + vec2(uv.y * .4,0.),vec2(.16),vec2(.7,.3),0.));\n    float f = sin((uv.x +.4 * uv.y ) * 10. + iTime *10.);\n    f = smoothstep(f,f+.01,.985);\n    col = mix(col,mix(vec4(1.),vec4(.1,.1,.7,0.),f),rectangle(uv + vec2(uv.y * .4,0.),vec2(.07,.06),vec2(.755,.325),0.));\n    //front wing\n    col = mix(col,vec4(.4),rectangle(uv + vec2(uv.y * -.3,0.),vec2(.14),vec2(.20,.14),0.));\n    col = mix(col,vec4(.49),rectangle(uv + vec2(uv.y * -.31,0.),vec2(.115),vec2(.20,.1525),0.));\n    col = mix(col,vec4(.4),rectangle(uv + vec2(uv.y * -.3,0.),vec2(.05,.04),vec2(.54,.20),0.));\n    col = mix(col,vec4(.58),rectangle(uv + vec2(uv.y * -.3,0.),vec2(.04,.03),vec2(.54,.205),0.));\n    \n    col = mix(col,vec4(.1,.4,.1,1.),logo(uv*2.- vec2(uv.y * -.3,0.) + vec2(.08,.25)));\n    col = mix(col,vec4(.4,.4,.1,1.),logo(uv*4.- vec2(uv.y * -.3,0.) - vec2(1.81,.31)));\n    \n\tfragColor = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// www.shadertoy.com/view/ldKGDd\n\n#define SPEED \t\t-1.1\n#define STAR_NUMBER\t200\n\nvec3 col1 = vec3(155., 176., 255.) / 256.; // Coolest star color\nvec3 col2 = vec3(255., 204., 111.) / 256.; // Hottest star color\n\nfloat rand(float i)\n{\n    return fract(sin(dot(vec2(i, i) ,vec2(32.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord / iResolution.y;\n    float res = iResolution.x / iResolution.y;\n\n    fragColor = vec4(0.);\n    \n    for (int i = 0; i < STAR_NUMBER; ++i)\n    {\n    \tfloat n = float(i);\n        \n        //position of the star\n        vec3 pos = vec3(rand(n) * res + iTime * SPEED, rand(n + 1.) , rand(n + 2.) * 5.);\n        \n        // parralax effect\n        pos.x = mod(pos.x * pos.z, res);\n        \n        pos.y = (pos.y + rand(n + 10.)) * 0.5;\n\n        //drawing the star\n        vec4 col = vec4(pow(length(pos.xy - uv), -1.25) * 0.0002 * pos.z * rand(n + 3.));\n        \n        //coloring the star\n        col.xyz *= mix(col1, col2, rand(n + 4.));\n        \n        //star flickering\n        col.xyz *= mix(rand(n + 5.), 1.0, abs(cos(iTime * rand(n + 6.) * 10.)));\n        \n        fragColor += vec4(col);\n    }\n    \n    // static far star\n    \n   \tvec4 col = vec4(rand(uv.x * uv.y));\n    \n    col.xyz *= 0.5 - abs((uv.y - 0.5));\n    \n    if (rand(uv.x * uv.y) > 0.99)\n        fragColor += col * 0.25;\n    \n    // milky way (work in progress)\n    \n    col = 0.5 - vec4(length(vec2(uv.x, 0.5) - uv));\n    col.xyz *= col2; \n    \n    float f = .92;\n    vec4 shifted = vec4(1.- f*uv.x,0.,1. - f*(1. -uv.x),1.);\n    col += mix(vec4(0.),shifted,.075);\n    \n    fragColor += col;\n    \n    \n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}