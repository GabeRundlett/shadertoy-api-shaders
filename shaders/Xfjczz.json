{
    "Shader": {
        "info": {
            "date": "1721856040",
            "description": "girl and boy 2d",
            "flags": 0,
            "hasliked": 0,
            "id": "Xfjczz",
            "likes": 18,
            "name": "girl and boy 2d",
            "published": 3,
            "tags": [
                "2d",
                "girlandboy2d"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 144
        },
        "renderpass": [
            {
                "code": "//por jorge2017a2\n//girl and boy 2d\n//---24-jul-2024--\n\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n//lluvia //https://www.shadertoy.com/view/XclcDX //by GregRostami\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n\n#define S(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n#define S2(d,b) smoothstep(8.0*antialiasing(1.5),0.,d - (b) )\n#define S3(d,b) smoothstep(1.0/antialiasing(2.5),0. , d - (b) )\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\nfloat Sdf_I(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat Sdf_U(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat Sdf_D(float distA, float distB)\n\t{ return max(distA, -distB);}\n\nvec3 DFB(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S3( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0),S3(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\nvec3 DFS(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut;\n  return colOut;\n}\n\n\n///oneshade    \nvec2 Rotate(in vec2 p, in vec2 o, in float r) \n{   float c = cos(r), s = sin(r);\n    return (p - o) * mat2(c, -s, s, c) + o;\n}\n\n\nvec3 cabeza(vec2 p, vec3 colout)\n{   \nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\n\nA=vec2(0.492081,0.625);\nr1=0.0051191329;\nfloat d0=sdCircle(p-A,r1);\n\n\nA=vec2(0.4682081,0.6416185);\nr1=0.05491329;\nfloat d1=sdCircle(p-A,r1);\n\n\nA=vec2(0.416185,0.6473988-0.05);\nmed=vec2(0.1300578,0.01445087);\nfloat he=3.034682E-02;\nfloat d2= sdTrapezoid(p-A, med.x, med.y, he);\n\nA=vec2(0.3728324,0.615607);\nmed=vec2(0.0433526,0.03034682);\nfloat d3=sdBox(p-A,med);\n\nA=vec2(0.5144508,0.6098266);\nmed=vec2(0.0433526,0.03034682);\nfloat d4=sdBox(p-A,med);\n\nfloat d101=d1;\nfloat d102=Sdf_I(d1,d4);\nfloat d103=Sdf_I(d2,d3);\n\ncolout= DFB(vec3(0.0,0.5,1.0), colout,d101);\ncolout= DFB(vec3(0.99973,0.16294,0.49946), colout,d102);\ncolout= DFB(vec3(0.0,0.5,1.0), colout,d103);\ncolout= DFB(vec3(0.0), colout,d0);\n    return  colout;\n}\n\n\nvec3 cuerpo(vec2 p, vec3 colout)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\nA=vec2(0.4653179,0.4624277);\nmed=vec2(0.04913295,0.1300578);\nfloat d1=sdEllipse(p-A,med);\n\nA=vec2(0.4653179,0.36358);\nmed=vec2(0.0916763,0.0364);\nfloat he=7.947977E-02;\nfloat d2= sdTrapezoid(p-A, med.x, med.y, he);\n\nA=vec2(0.5115607,0.4855491);\nmed=vec2(0.07080925,0.02601156);\nfloat ang=25.0 * PI / 180.0;\npr = Rotate(p-A, med/2.0, ang);\nfloat d3=sdBox(pr,med);\n\nA=vec2(0.5895954,0.4797688);\nmed=vec2(0.03058381,0.05);\n he=2.601156E-02;\nfloat d4= sdTrapezoid(p-A, med.x, med.y, he);\n\nfloat d101=Sdf_D(d1,d2);\nfloat d102=d2;\nfloat d103=d3;\nfloat d104=d4;\ncolout= DFB(vec3(0.20724,0.02885,0.80506), colout,d101);\ncolout= DFB(vec3(0.05166,0.2096,0.06548), colout,d102);\ncolout= DFB(vec3(0.86008,0.18357,0.5528), colout,d103);\ncolout= DFB(vec3(0.97225,0.28821,0.20809), colout,d104);\n\nreturn colout;\n\n}\n\n\nvec3 pierna(vec2 p, vec3 colout)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\nA=vec2(0.4421965,0.1647399);\nmed=vec2(0.02456647,0.1098266);\nfloat d1=sdBox(p-A,med);\n\nA=vec2(0.4913295,0.1647399);\nmed=vec2(0.02456647,0.1098266);\nfloat d2=sdBox(p-A,med);\n\nA=vec2(0.4653179,0.0856069);\nmed=vec2(0.116763,0.04959538);\nfloat he=2.890173E-02;\nfloat d3= sdTrapezoid(p-A, med.x, med.y, he);\n\n\nd3=Sdf_D(d3,Sdf_U(d1,d2));\nd1=Sdf_U(d1,d3);\nd2=Sdf_U(d2,d3);\n\ncolout= DFB(vec3(0.60071,0.47287,0.116), colout,d1);\ncolout= DFB(vec3(0.76504,0.4614,0.09407), colout,d2);\n\n    return colout;\n}\n\n\nvec3 pelota(vec2 p, vec3 colout)\n{\n\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\nA=vec2(0.6791908,0.5895954);\nr1=0.1098266;\nfloat d1=sdCircle(p-A,r1);\n\nA=vec2(0.6445087,0.632948);\nr1=0.02890173;\nfloat d2=sdCircle(p-A,r1);\n    colout= DFB(vec3(0.73551,0.01,0.0357) , colout,d1);\n    colout= DFS(vec3(1.0,0.05,0.0), colout,d2);\n    \n    return colout;\n}\n\nvec3 nina(vec2 p, vec3 colout)\n{\n    colout=cabeza(p,colout);\n    colout=cuerpo(p,colout);\n    colout=pierna(p,colout);\n    colout=pelota(p+vec2(0.0,-0.15+0.15*sin(iTime)),colout);\n    return colout;\n}\n\n\nvec3 ninocabeza(vec2 p, vec3 colout)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\nA=vec2(0.9421965,0.5895954);\nr1=0.05780347;\nfloat d1=sdCircle(p-A,r1);\n\nA=vec2(0.9508671,0.650289);\nmed=vec2(0.07225434,0.04046243);\nfloat ang=20.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d2=sdBox(pr,med);\n\nA=vec2(0.916185,0.6084971);\nmed=vec2(0.09826589,0.00578035);\n ang=20.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d3=sdBox(pr,med);\n\nA=vec2(0.9190751,0.5953757);\nr1=0.01156069;\nfloat d4=sdCircle(p-A,r1);\n\n\nfloat d102=Sdf_I(d1,d2);\ncolout= DFB(vec3(0.84583,0.94455,0.25257), colout,d1);\ncolout= DFB(vec3(0.34693,0.47602,0.40297), colout,d102);\ncolout= DFS(vec3(0.32961,0.21889,0.34024), colout,d3);\ncolout= DFB(vec3(0.5131,0.52516,0.65918), colout,d4);\n    return colout;\n}\n\n\n\nvec3 cuerpoN(vec2 p, vec3 colout)\n{\n\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\nA=vec2(0.9450867,0.4797688);\nr1=0.05202312;\nfloat d1=sdCircle(p-A,r1);\n\nA=vec2(0.9421965,0.4306358);\nmed=vec2(0.05057804,0.04913295);\nfloat d2=sdBox(p-A,med);\n\nA=vec2(0.9421965,0.300578);\nmed=vec2(0.05057804,0.07803468);\nfloat d3=sdBox(p-A,med);\n\nA=vec2(0.8352601,0.4566474);\nmed=vec2(0.05202312,0.02745665);\nfloat d4=sdBox(p-A,med);\n\nA=vec2(0.8905781,0.452659);\nmed=vec2(0.05780347,0.1560694);\nfloat he=2.456647E-02;\nfloat d5= sdTrapezoid(p-A, med.x, med.y, he);\n\n//--\nA=vec2(1.023121,0.3699422);\nmed=vec2(0.02745665,0.04768786);\nfloat d6=sdBox(p-A,med);\n\n\nA=vec2(1.023121,0.3699422);\nmed=vec2(0.02745665,0.04768786);\nfloat d6a=sdBox(p-A,med);\n\nA=vec2(0.9471098,0.4308671);\nmed=vec2(0.1069364,0.02312139);\nhe=1.589595E-02;\nfloat d7= sdTrapezoid(p-A, med.x, med.y, he);\n\n\nA=vec2(0.7745665,0.4624277);\nmed=vec2(0.06069364,0.03179191);\nfloat d11=sdBox(p-A,med);\n\nA=vec2(0.9755492,0.41364162);\nmed=vec2(0.07536416,0.02290173);\nfloat ang=25.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d12=sdBox(pr,med); //brazo izq\n\nfloat d101=Sdf_U(d1,d2);\nfloat d102=Sdf_U(d3,d3);\nfloat d103=Sdf_U(d6,d12);\nfloat d104=Sdf_U(d11,d4);\nd104=Sdf_I(d104,d5);\n\ncolout= DFB(vec3(0.54095,0.04418,0.72241), colout,d101); //pansa\ncolout= DFB(vec3(0.4648,0.23297,0.52867), colout,d102);  //pantalon\ncolout= DFB(vec3(0.962747,0.764646,0.268519), colout,d103); //brazo der\ncolout= DFB(vec3(0.962747,0.764646,0.268519), colout,d104); //brazo izq\n    return colout;\n}\n\n\nvec3 piernaN(vec2 p, vec3 colout)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\nA=vec2(0.9500982,0.1416185);\nmed=vec2(0.02545665,0.08381503);\nfloat d1=sdBox(p-A,med);\n\nA=vec2(0.9508671,0.08205266);\nmed=vec2(0.1069364,0.02312139);\nfloat he=2.456647E-02;\nfloat d2= sdTrapezoid(p-A, med.x, med.y, he);\n\n//zapato\nA=vec2(0.9046243,0.08381503);\nmed=vec2(0.0433526,0.03179191);\nfloat d8=sdBox(p-A,med);\nd2=Sdf_I(d2,d8);\nd1=Sdf_U(d2,d1);\ncolout= DFB(vec3(0.22607,0.82001,0.36295), colout,d1);\nreturn colout;\n}\n\n\nvec3 nino(vec2 p, vec3 colout)\n{\n    colout= ninocabeza(p,colout);\n    colout=cuerpoN(p,colout);\n    colout= piernaN(p,colout);\n    return colout;\n}\n\n\nvec3 jardin(vec2 p, vec3 colout)\n{\n\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\nA=vec2(0.1763006,0.07047399);\nmed=vec2(0.02745665,0.0745665);\nfloat ang=180.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d1=sdTriangleIsosceles(pr,med);\n\nA=vec2(0.2352023,0.1213873);\nmed=vec2(0.02745665,0.06213873);\nfloat d2=sdBox(p-A,med);\n\n    float d101=Sdf_D(d1,d2);\n    colout= DFS(vec3(0.2,1.0,0.0), colout, d101);\n    return colout;\n}\n\n\nvec3 jardin2(vec2 p, vec3 colout)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\n\nA=vec2(0.07225434,0.07013873);\nmed=vec2(0.03568208,0.03468208);\nfloat ang=180.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d3=sdTriangleIsosceles(pr,med);\n\nA=vec2(0.1419364,0.09537572);\nmed=vec2(0.03468208,0.04046243);\nfloat d4=sdBox(p-A,med);\n    float d101=Sdf_D(d3,d4);\n    colout= DFS(vec3(0.2,1.0,0.0), colout, d101);\n    return colout;\n}\n\nvec3 sol(vec2 p, vec3 colout)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\nA=vec2(1.317919,0.8034682);\nr1=0.1069364;\nfloat d1=sdCircle(p-A,r1);\n\nA=vec2(1.153179,0.7976879);\nB=vec2(0.9913295,0.8034682);\nfloat d2=sdSegment(p,A,B);\n\nA=vec2(1.15896,0.6907514);\nB=vec2(1.046243,0.6445087);\nfloat d3=sdSegment(p,A,B);\n\nA=vec2(1.257225,0.6878613);\nB=vec2(1.150289,0.5491329);\nfloat d4=sdSegment(p,A,B);\n\nA=vec2(1.320809,0.5924855);\nB=vec2(1.315029,0.6676301);\nfloat d5=sdSegment(p,A,B);\n\nA=vec2(1.528902,0.5809249);\nB=vec2(1.421965,0.6907514);\nfloat d6=sdSegment(p,A,B);\n\nA=vec2(1.627168,0.6994219);\nB=vec2(1.473988,0.7514451);\nfloat d7=sdSegment(p,A,B);\n\nA=vec2(1.578035,0.7947977);\nB=vec2(1.476879,0.8034682);\nfloat d8=sdSegment(p,A,B);\n\nA=vec2(1.627168,0.0480347);\nB=vec2(0.03468208,0.0469364);\nfloat d9=sdSegment(p,A,B);\ncolout= DFS(vec3(0.6317,0.95423,0.63175), colout,d1);\ncolout= DFS(vec3(0.53364,0.49542,0.63047), colout,d2);\ncolout= DFS(vec3(0.45981,0.45435,0.46654), colout,d3);\ncolout= DFS(vec3(0.29455,0.11243,0.23081), colout,d4);\ncolout= DFS(vec3(0.82973,0.05478,0.08415), colout,d5);\ncolout= DFS(vec3(0.93782,0.16644,0.14621), colout,d6);\ncolout= DFS(vec3(0.80038,0.09921,0.96147), colout,d7);\ncolout= DFS(vec3(0.29598,0.84144,0.48709), colout,d8);\ncolout= DFS(vec3(0.0,1.0,0.0), colout,d9);\n    return colout;\n}\n\n\n//https://www.shadertoy.com/view/XclcDX //by GregRostami\nvec4 lluvia(vec4 o, vec2 q)\n{   o = vec4( iResolution, fract(tan(q*7.)) );\n    o += -o.a * 8. / (mod(o.a * (-o.y) * (iTime+2.5), o.x) - q.y) - o; \n    return o;    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    uv-=vec2(-1.75,-0.9);\n    float esc=0.5;\n    uv*=esc;\n    vec2 uv0=uv;\n    vec3 col=vec3(0.1,0.21,1.0);       \n    vec3 col2=lluvia(fragColor,fragCoord).xyz;\n    col= mix(mix(col2, col, sin(iTime+0.25)), col*col2, sin(iTime));\n    col= nina(uv,col);\n    col= nino(uv,col);\n    col=sol(uv,col);\n    col=jardin(uv+vec2(0.0,0.02),col);\n    col=jardin2(uv+vec2(0.0,0.02),col);\n    col=jardin(uv+vec2(-0.6,0.01),col);\n    col=jardin2(uv+vec2(-0.65,0.01),col);\n    col=jardin2(uv+vec2(-0.6,0.01),col);\n    col=pow(col,vec3(1.0/2.2));\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//iq\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n\n\n\n\nfloat sdEllipse( in vec2 p, in vec2 ab )\n{\n    p = abs(p); if( p.x > p.y ) {p=p.yx;ab=ab.yx;}\n    float l = ab.y*ab.y - ab.x*ab.x;\n    float m = ab.x*p.x/l;      float m2 = m*m; \n    float n = ab.y*p.y/l;      float n2 = n*n; \n    float c = (m2+n2-1.0)/3.0; float c3 = c*c*c;\n    float q = c3 + m2*n2*2.0;\n    float d = c3 + m2*n2;\n    float g = m + m*n2;\n    float co;\n    if( d<0.0 )\n    {\n        float h = acos(q/c3)/3.0;\n        float s = cos(h);\n        float t = sin(h)*sqrt(3.0);\n        float rx = sqrt( -c*(s + t + 2.0) + m2 );\n        float ry = sqrt( -c*(s - t + 2.0) + m2 );\n        co = (ry+sign(l)*rx+abs(g)/(rx*ry)- m)/2.0;\n    }\n    else\n    {\n        float h = 2.0*m*n*sqrt( d );\n        float s = sign(q+h)*pow(abs(q+h), 1.0/3.0);\n        float u = sign(q-h)*pow(abs(q-h), 1.0/3.0);\n        float rx = -s - u - c*4.0 + 2.0*m2;\n        float ry = (s - u)*sqrt(3.0);\n        float rm = sqrt( rx*rx + ry*ry );\n        co = (ry/sqrt(rm-rx)+2.0*g/rm-m)/2.0;\n    }\n    vec2 r = ab * vec2(co, sqrt(1.0-co*co));\n    return length(r-p) * sign(p.y-r.y);\n}\n\n\n\n\nfloat sdTrapezoid( in vec2 p, in float r1, float r2, float he )\n{\n    vec2 k1 = vec2(r2,he);\n    vec2 k2 = vec2(r2-r1,2.0*he);\n    p.x = abs(p.x);\n    vec2 ca = vec2(p.x-min(p.x,(p.y<0.0)?r1:r2), abs(p.y)-he);\n    vec2 cb = p - k1 + k2*clamp( dot(k1-p,k2)/dot2(k2), 0.0, 1.0 );\n    float s = (cb.x<0.0 && ca.y<0.0) ? -1.0 : 1.0;\n    return s*sqrt( min(dot2(ca),dot2(cb)) );\n}\n\n\n\nfloat sdTriangleIsosceles( in vec2 p, in vec2 q )\n{\n    p.x = abs(p.x);\n    vec2 a = p - q*clamp( dot(p,q)/dot(q,q), 0.0, 1.0 );\n    vec2 b = p - q*vec2( clamp( p.x/q.x, 0.0, 1.0 ), 1.0 );\n    float s = -sign( q.y );\n    vec2 d = min( vec2( dot(a,a), s*(p.x*q.y-p.y*q.x) ),\n                  vec2( dot(b,b), s*(p.y-q.y)  ));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\n\n\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\n\n\nfloat divf(float a, float b)\n{\n    //evita crash por 1/0.0 =Infinito=error, en compilar\n    if(b==0.0)\n    {b=0.00001;}\n    return a/b;\n}\n\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{  vec2 pa = p-a, ba = b-a;\n    float h = clamp( divf( dot(pa,ba),dot(ba,ba)), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n\n//https://www.shadertoy.com/view/dt2yDK  //iq\n// distance to segment\n/*\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b, in float th )\n{\n    vec2 ba = b-a;\n    vec2 pa = p-a;\n    float h = clamp( divf(dot(pa,ba),dot(ba,ba)) , 0.0, 1.0 );\n    vec2  q = pa-h*ba;\n    return length(q) - th;\n}\n\n*/\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}