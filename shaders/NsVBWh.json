{
    "Shader": {
        "info": {
            "date": "1658089547",
            "description": "sun 2d",
            "flags": 0,
            "hasliked": 0,
            "id": "NsVBWh",
            "likes": 7,
            "name": "sun -kk-2d-",
            "published": 3,
            "tags": [
                "sun2d"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 191
        },
        "renderpass": [
            {
                "code": "//por jorge2017a2\n//sun kk-2d\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(6.0*antialiasing(0.5),b,d)\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}    \n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\nvec2 rotatev2(vec2 p, float ang)\n{   float c = cos(ang);\n    float s = sin(ang);\n    return vec2(p.x*c - p.y*s, p.x*s + p.y*c);\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{  vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat tau = atan(1.0) * 8.0;\nvec2 opAngRep( vec2 p, float a )\n{\n\tvec2 polar = vec2(atan(p.y, p.x), length(p.xy));\n    polar.x = mod(polar.x + a / 2.0, a) - a / 2.0;\n    \n    return vec2(polar.y * vec2(cos(polar.x),sin(polar.x)));\n}\n\nvec2 opAngRepFull( vec2 p, float numItem )\n{   vec2 rep2 = opAngRep(p, tau / numItem);\n    return rep2;\n}\n\n\nvec3 circulo(vec2 p, vec3 colOut )\n{   vec2 prep=opAngRepFull( p, 8.0 );\n    float d1= sdBox(prep, vec2(3.2,0.25) );\n    float d2a= sdCircle(p, 3.0 );\n    float d2b= sdCircle(p, 2.5 );\n    float dif2= differenceSDF(d2a, d2b);\n    float dif3=differenceSDF(dif2, d1);\n    vec3 col= colOut;\n    col= DrawFigBorde(vec3(.0,0.0,0.0), col, dif3 );\n    return col;\n}\n\n\nvec3 estrellaC(vec2 p, vec3 colOut )\n{   vec2 prep=opAngRepFull( p, 19.0 );\n    vec2 a, b;\n    a=vec2(0.0,0.0);\n    b=vec2(4.5,0.0);\n    a= rotatev2(a, radians(20.0));\n    b= rotatev2(b, radians(20.0));\n    float d1a= sdSegment( prep-vec2(4.,0.0),a,b );\n    \n    a=vec2(0.0,0.0);\n    b=vec2(4.5,0.0);\n    a= rotatev2(a,-radians(20.0));\n    b= rotatev2(b,-radians(20.0));\n    float d1b= sdSegment( prep-vec2(4.0,0.0),a,b );\n\n    float d2a= sdCircle(p, 4.0 );\n    float d2b= sdCircle(p, 3.5 );\n    float dif2= differenceSDF(d2a, d2b);\n    \n    d1a=abs(d1a)-0.1;\n    d1b=abs(d1b)-0.1;\n    \n    float unitd=unionSDF(d1a, d1b);\n    unitd=unionSDF(unitd, dif2);\n    \n    vec3 col= colOut;\n    col= DrawFigBorde(vec3(.0,0.0,0.0), col, unitd );\n    return col;\n}\n\n\nvec3 AnilloBasic(vec2 p, float r, vec3 colOut)\n{   float d2a= sdCircle(p, r );\n    float d2b= sdCircle(p, r-0.5 );\n    float dif2= differenceSDF(d2a, d2b);\n    vec3 col=colOut;\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col, dif2 );\n    return col;\n}\n\n\nvec3 AnilloAncho(vec2 p, float r, float ancho,  vec3 colOut)\n{   float d2a= sdCircle(p, r );\n    float d2b= sdCircle(p, r-ancho);\n    float dif2= differenceSDF(d2a, d2b);\n    vec3 col=colOut;\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col, dif2 );\n    return col;\n}\n\nvec3 estrellaG(vec2 p, vec3 colOut )\n{\n    vec2 prep=opAngRepFull( p, 19.0 );\n    vec2 a, b;\n    a=vec2(0.0,0.0);\n    b=vec2(7.5,0.0);\n    a= rotatev2(a, radians(20.0));\n    b= rotatev2(b, radians(20.0));\n    float d1a= sdSegment( prep-vec2(7.0,0.0),a,b );\n    \n    a=vec2(0.0,0.0);\n    b=vec2(7.5,0.0);\n    a= rotatev2(a,-radians(20.0));\n    b= rotatev2(b,-radians(20.0));\n    float d1b= sdSegment( prep-vec2(7.0,0.0),a,b );\n   vec3 col= colOut;\n    \n    col=AnilloAncho(p,13.0,0.5, col);\n    col=AnilloAncho(p,14.5,0.7, col);\n    d1a=abs(d1a)-0.3;\n    d1b=abs(d1b)-0.3;\n    \n    float unitd=unionSDF(d1a, d1b);\n    col= DrawFigBorde(vec3(.0,0.0,0.0), col, unitd );\n    \n    return col;\n}\n\nvec3 circuloBloque(vec2 p, vec3 colOut )\n{   vec2 prep=opAngRepFull( p, 8.0 );\n    float d1= sdBox(prep, vec2(18.5,3.) );\n    float d2a= sdCircle(p, 20.0 );\n    float d2b= sdCircle(p, 14.5 );\n    float dif2= differenceSDF(d2a, d2b);\n    float dif3=differenceSDF(dif2, d1);\n    vec3 col= colOut;\n    col= DrawFigBorde(vec3(.0,0.0,0.0), col, dif3 );\n    return col;\n}\n\nvec3 todoSol(vec2 uv, vec3 colOut)\n{   vec3 col=colOut;\n    col= circulo(uv,col );\n    col= estrellaC(uv, col);\n    col= estrellaG(uv, col);\n    col= circuloBloque(uv,col );\n    return col;\n}\n    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    uv-=vec2(0.0,0.0);\n    float t=iTime;\n    float esc=13.0+3.0*sin(t);\n    uv*=esc;\n    vec2 uv0=uv;\n    vec3 col=vec3(1.0);\n   \n    col=todoSol(uv,col);\n    uv.x= opRep1D( uv.x, 40.0+5.0*sin(-t) );\n    col=todoSol(uv,col);\n    \n    col=pow(col,  vec3(0.554545));\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}