{
    "Shader": {
        "info": {
            "date": "1669642069",
            "description": "Simple busy HUD (remix) - https://www.twitch.tv/videos/1662202941",
            "flags": 0,
            "hasliked": 0,
            "id": "mdXSWf",
            "likes": 7,
            "name": "HudRemix",
            "published": 3,
            "tags": [
                "circle",
                "hud"
            ],
            "usePreview": 0,
            "username": "Del",
            "viewed": 203
        },
        "renderpass": [
            {
                "code": "// Simple busy HUD - https://www.twitch.tv/videos/1662202941\n\n#define PI 3.141519\n#define TAU 6.283185\n\nmat2 rot(float a)\n{\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, -s, s, c);\n}\n\n\n// dashed circle - https://www.shadertoy.com/view/7tyGWw\nfloat sdDashedCircle(in vec2 p, float at, float inner,float outer,float nseg,float rat) \n{\n    float le = length(p);\n    float hw = (outer-inner)*0.5;\n    float ce = le - (outer-hw);\n    ce = abs(ce)-hw;\n    //float at = atan(p.x,p.y);\n    float gr = fract((at/TAU)*nseg); \n    gr = abs((gr-0.5)*2.0);\n    gr = gr-rat;\n    float an = gr * (PI/nseg);\n    mat2 rm = rot(an);\n    float c = rm[0][0];//cos(an);\n    float ep = clamp(c*le,inner,outer);\n    vec2  ne = p*rm;\n    ne *= ep/le;  \n    float ed = length(p-ne);\n    return (an>0.0) ? ed : (ce>0.0) ? ce : max(-ed,ce);\n}\n\nvec4 GetTimer(in vec2 p,float fill)\n{\n    vec3 col2 = vec3(0.95,0.75,0.25);\n    vec3 col1 = vec3(0.5,0.7,0.8);    // grey    \n    float totalsegs = 60.0;\n    float extra = 60.0;\n    float thresh = totalsegs+(extra*0.5);\n    fill *= (totalsegs+1.0+extra);\n    \n    float at = atan(p.x,p.y);\n    float count = floor(at/(TAU/totalsegs)) + totalsegs*0.5;\n    \n    float fade = clamp((fill-count)*0.1,0.0,1.0);\n    float fade2 = 1.0;\n    if (fill>thresh)\n        fade *= 1.0-clamp((fill-thresh)*0.05,0.0,1.0);\n\n    // render circle\n    float rad = 0.0+(fade*0.8);\n    float height = mix(0.00,0.08,fade);    \n    float inner = rad-height;\n    float outer = rad+height;\n    float rt = mix(0.0,0.65,fade);\n    float d = 1.0;\n    if (height>0.0)\n        d = sdDashedCircle(p,at,inner,outer,totalsegs,rt);\n    \n    float aa =  1.5*rt*fwidth(at);// 0.005\n    float cc = smoothstep(aa,0.0,d);\n    return vec4(mix(col2*cc,col1*cc,fade),cc);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    float t = iTime;\n    float fill = fract(t*0.4);\n    fragColor = GetTimer(-p,fill);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}