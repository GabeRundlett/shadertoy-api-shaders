{
    "Shader": {
        "info": {
            "date": "1667522519",
            "description": "I tried to make a graphing thing then got distracted, and made this cool thing using distortion.",
            "flags": 0,
            "hasliked": 0,
            "id": "ddj3Rm",
            "likes": 3,
            "name": "Magnification of graph",
            "published": 3,
            "tags": [
                "distortion",
                "zoom",
                "graphing"
            ],
            "usePreview": 0,
            "username": "Larbagar",
            "viewed": 136
        },
        "renderpass": [
            {
                "code": "\n#define PI 3.1415926535897932384626433832795\n#define r1 200\n#define r2 250\n#define zoom 1.5\n#define width 10.\nfloat func(float x){\n    return sin(x/50.)*100.;\n}\nfloat diff(vec2 pos){\n    return abs(pos.y - func(pos.x));\n}\nfloat mouseDown(){\n    return step(0., iMouse.z);\n}\nfloat warpFunc(float len){\n    return float(zoom)+smoothstep(float(r1), float(r2), len/mouseDown())*(1.-float(zoom));//1. + cos(PI*min(len/float(r), 1.)/2.)*(float(zoom) - 1.)*mouseDown();\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //vec2 pos = ((fragCoord-0.5*iResolution.xy)/iResolution.y)*2.;\n    //vec2 mousePos = ((iMouse.xy-0.5*iResolution.xy)/iResolution.y)*2.;\n    vec2 pos = fragCoord-iResolution.xy/2.;\n    vec2 mousePos = iMouse.xy - iResolution.xy/2.;\n    float len = length(pos - mousePos);\n    pos = mousePos + (pos - mousePos)/warpFunc(len);//(mousePos - pos)*20.*;\n    \n    vec3 col = vec3(0);\n    \n    //col += texture(iChannel0, pos.xy/500.).rgb;\n    \n    col += smoothstep(width, 0., diff(pos));\n    \n    col.b += smoothstep(0.9, 1., abs(mod(pos.x/100., 1.)*2.-1.))*smoothstep(float(r2), float(r1), len/mouseDown());\n    col.b += smoothstep(0.9, 1., abs(mod(pos.y/100., 1.)*2.-1.))*smoothstep(float(r2), float(r1), len/mouseDown());\n    \n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}