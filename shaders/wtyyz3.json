{
    "Shader": {
        "info": {
            "date": "1611415610",
            "description": "Interesting...",
            "flags": 0,
            "hasliked": 0,
            "id": "wtyyz3",
            "likes": 1,
            "name": "Fake Blue noise (Voronoi-ed)",
            "published": 3,
            "tags": [
                "voronoi",
                "noise",
                "blue",
                "bluenoise",
                "render"
            ],
            "usePreview": 0,
            "username": "Dutracgi",
            "viewed": 397
        },
        "renderpass": [
            {
                "code": "//2D noise generator & voronoi code -> https://www.youtube.com/watch?v=l-07BXzNdPw\nvec2 n22(vec2 p){\n    vec3 a = fract(p.xyx*vec3(123.34, 234.34, 345.65));\n    a += dot(a, a+34.45);\n    return fract(vec2(a.x*a.y,a.y*a.z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    //color\n    float m = 0.;\n    \n     //noise size 1/size\n    float mul = 16.;\n    \n    //local grids\n    vec2 gv = fract(uv*mul)-0.5;\n    //grid ids\n    vec2 id = floor(uv*mul);\n    \n    float MinDist = 100.;\n    vec2 point;\n\n    vec3 col = vec3(0);\n    //Voronoi-ing\n    for(float y = -2.; y<2.; y++){\n        for(float x = -2.; x<2.; x++){\n            vec2 of = vec2(x,y);\n            //random point generation (blue noise like)\n            vec2 p = of+sin(n22(id+of)*iTime)*0.4;\n            float d = length(gv-p);\n            if(d < MinDist){\n               //Cell Distance\n               MinDist = d;\n               //cell_index;\n               point = n22(id+of);\n            }\n        }\n    }\n    \n    //out color\n     if(smoothstep(0.1,0.08,MinDist)>0.0)\n         col = vec3(0);\n     else\n         col = vec3(1,.15,0)+vec3(point.x,point.y,0)*.2;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}