{
    "Shader": {
        "info": {
            "date": "1648868203",
            "description": "A fractal with vein-like patterns.",
            "flags": 0,
            "hasliked": 0,
            "id": "NlfcWl",
            "likes": 5,
            "name": "Fractal veins",
            "published": 3,
            "tags": [
                "fractal",
                "veins"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 285
        },
        "renderpass": [
            {
                "code": "#define c1 vec3(1.,0.5,1.5)\n\nvec2 triangle_wave(vec2 a,float scale){\n    return abs(fract((a+c1.xy)*scale)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 36.*4.*8.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    if(iMouse.z>.5)\n    uv = uv.xy + iMouse.xy / iResolution.xy/t1;\n    float scale = c1.z;\n    float offset = 0.;\n    float offset1 = iTime/1000.;\n    float p1 = 1.;\n    for(int i=0;i<1;i++)\n    {\n        vec2 t2 = vec2(0.);\n        vec2 t3 = vec2(0.);\n        for(int k = 0; k < 18; k++){\n            //uv.x += ceil(uv.x+float(k))/3.; \n\n            uv += (t2.yx);\n            //uv -= ceil(t2.x*4.)/4.; //mosaic pattern\n\n            uv /= scale;\n            uv += vec2(1.); //this also makes an interesting pattern\n            t2 = -p1*triangle_wave(uv-.5,1.5);\n            t3 = p1*triangle_wave(uv.yx,1.5);\n            //t2 = abs(t2-.5);\n            //t3 = abs(t3-.5);\n            uv.yx = (t2+t3);\n            p1 *= -1.;\n            col.x = max(uv.y-uv.x-col.x,col.x*2.5);\n        //col.x = min(uv.y-uv.x+col.x,col.x*2.);\n        \n        //uv.x *= -1.;\n        \n        //col.x = abs(col.x-.5);\n        col = abs(col.yzx-vec3(1.5-col.x))/2.;\n        //uv.x += .5;\n        //col = abs(col.yzx+vec3(col.x)*2.)/3.;\n        }\n        \n\n        uv.y *= -1.;\n    }\n    fragColor = vec4(col*1.5,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}