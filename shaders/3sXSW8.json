{
    "Shader": {
        "info": {
            "date": "1551116602",
            "description": "isometric + special view angle: no ray-tracing needed, we know exactly which element could show at any given place.\n(golfed version)",
            "flags": 0,
            "hasliked": 0,
            "id": "3sXSW8",
            "likes": 16,
            "name": "isometric binary-map ( 238 chars",
            "published": 3,
            "tags": [
                "isometric",
                "fake3d",
                "2tweets",
                "short",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 629
        },
        "renderpass": [
            {
                "code": "// golfed simplification of https://shadertoy.com/view/tslXDr\n\n//#define C(x,y) fract( sin(1e3*length (ceil(U)+vec2(x,y)))) > .5\n#define C(x,y) sin(1e3*length (ceil(U)+vec2(x,y))) > .3//\n//\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2 R = iResolution.xy,\n         U =  ( u+u - R ) / R.y * mat2(1,-2,1,2);\n    U.y += iTime;\n    R = fract( U *= 5. );\n    bool r = R.x+R.y > 1.;\n    O +=  C(1,-1)       ? 1.\n        : C(1, 0) &&  r ? .8\n        : C(0,-1) && !r ? .4\n        : C(0, 0) ?   r ? .4 : .8\n        : C(-1,0)       ? 0.\n        :                 .3;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}