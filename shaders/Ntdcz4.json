{
    "Shader": {
        "info": {
            "date": "1659383487",
            "description": "Infinite planes with cutout!",
            "flags": 0,
            "hasliked": 0,
            "id": "Ntdcz4",
            "likes": 3,
            "name": "3D Corner - distance L-inf",
            "published": 3,
            "tags": [
                "3d",
                "sdf",
                "corner",
                "linf"
            ],
            "usePreview": 0,
            "username": "pyBlob",
            "viewed": 258
        },
        "renderpass": [
            {
                "code": "float sdCorner(vec3 p, vec3 r)\n{\n    // pyBlob: 3D Corner - distance L-inf https://www.shadertoy.com/view/Ntdcz4\n    vec3 q = p + r;\n    p += r * step(q.xyz, min(q.yzx, q.zxy)); // for 3D\n    // p += step(q.xy, q.yx); // for 2D\n    return max(p.x, max(p.y, p.z));\n}\n\nfloat sdScene(vec2 p)\n{\n    float scale = 12.;\n    p *= scale;\n    vec3 q = vec3(p, -4. + 5. * sin(iTime));\n    return sdCorner(q, vec3(8. + cos(iTime*3.), 8. + cos(iTime * 2.), 8.)) / scale;\n}\n\nfloat sdBox(vec2 p, vec2 rad)\n{\n    // iq: Box - distance L-inf https://www.shadertoy.com/view/Nlj3WR\n    p = abs(p)-rad;\n\n    return max(p.x,p.y);\n}\n\nvoid linf(out vec4 fragColor, vec2 fragCoord, vec3 iResolution, vec4 iMouse, float iTime)\n{\n    // iq: Box - distance L-inf https://www.shadertoy.com/view/Nlj3WR\n    vec2 p = (2.0*fragCoord - iResolution.xy) / iResolution.y;\n    vec2 m = (2.0*iMouse.xy - iResolution.xy) / iResolution.y;\n\n    if( iMouse.z<0.01 ) m=sin(-0.17*iTime*vec2(1.1,1.3)+vec2(0,2));\n\n    float d = sdScene(p);\n\n    vec3 col = vec3(1.0,0.9,1.0) + sign(d)*vec3(-0.3,0.4,0.3);\n\tcol *= 1.0 - exp(-3.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(150.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.008,abs(d)) );\n\n    \n    d = sdScene(m);\n    col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.004, 0.008, abs(max(abs(p.x-m.x), abs(p.y-m.y)) - abs(d))));\n    col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.004, 0.008, length(p-m)-0.015));\n\n\tfragColor = vec4(col,1.0);\n}\n\nvoid mainImage(out vec4 C, vec2 O)\n{\n    linf(C, O, iResolution, iMouse, iTime);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}