{
    "Shader": {
        "info": {
            "date": "1722870897",
            "description": "Fork from pantera rosa",
            "flags": 0,
            "hasliked": 0,
            "id": "Mc2cRt",
            "likes": 1,
            "name": "Fork pantera rosa",
            "published": 3,
            "tags": [
                "visualizer",
                "panterarosavisualizer",
                "pantera",
                "rosa"
            ],
            "usePreview": 0,
            "username": "ArthurTent",
            "viewed": 56
        },
        "renderpass": [
            {
                "code": "// Forked from https://www.shadertoy.com/view/l3GGRW\n// Modified by ArthurTent\n// Created by jorge2017a2\n\nuniform sampler2D iVideo;\n\n// set to one to have background visualized\n#define BACKGROUND_ANIMATION 1\n#define LSD_EYES 1\n\n// Common\n\n//iq\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n\n\n\nfloat sdEllipse( in vec2 p, in vec2 ab )\n{\n    p = abs(p); if( p.x > p.y ) {p=p.yx;ab=ab.yx;}\n    float l = ab.y*ab.y - ab.x*ab.x;\n    float m = ab.x*p.x/l;      float m2 = m*m; \n    float n = ab.y*p.y/l;      float n2 = n*n; \n    float c = (m2+n2-1.0)/3.0; float c3 = c*c*c;\n    float q = c3 + m2*n2*2.0;\n    float d = c3 + m2*n2;\n    float g = m + m*n2;\n    float co;\n    if( d<0.0 )\n    {\n        float h = acos(q/c3)/3.0;\n        float s = cos(h);\n        float t = sin(h)*sqrt(3.0);\n        float rx = sqrt( -c*(s + t + 2.0) + m2 );\n        float ry = sqrt( -c*(s - t + 2.0) + m2 );\n        co = (ry+sign(l)*rx+abs(g)/(rx*ry)- m)/2.0;\n    }\n    else\n    {\n        float h = 2.0*m*n*sqrt( d );\n        float s = sign(q+h)*pow(abs(q+h), 1.0/3.0);\n        float u = sign(q-h)*pow(abs(q-h), 1.0/3.0);\n        float rx = -s - u - c*4.0 + 2.0*m2;\n        float ry = (s - u)*sqrt(3.0);\n        float rm = sqrt( rx*rx + ry*ry );\n        co = (ry/sqrt(rm-rx)+2.0*g/rm-m)/2.0;\n    }\n    vec2 r = ab * vec2(co, sqrt(1.0-co*co));\n    return length(r-p) * sign(p.y-r.y);\n}\n\n\n\n\n\n//Quadratic Bezier - exact   (https://www.shadertoy.com/view/MlKcDD)\n\nfloat sdBezier( in vec2 pos, in vec2 A, in vec2 B, in vec2 C )\n{    \n    vec2 a = B - A;\n    vec2 b = A - 2.0*B + C;\n    vec2 c = a * 2.0;\n    vec2 d = A - pos;\n    float kk = 1.0/dot(b,b);\n    float kx = kk * dot(a,b);\n    float ky = kk * (2.0*dot(a,a)+dot(d,b)) / 3.0;\n    float kz = kk * dot(d,a);      \n    float res = 0.0;\n    float p = ky - kx*kx;\n    float p3 = p*p*p;\n    float q = kx*(2.0*kx*kx-3.0*ky) + kz;\n    float h = q*q + 4.0*p3;\n    if( h >= 0.0) \n    { \n        h = sqrt(h);\n        vec2 x = (vec2(h,-h)-q)/2.0;\n        vec2 uv = sign(x)*pow(abs(x), vec2(1.0/3.0));\n        float t = clamp( uv.x+uv.y-kx, 0.0, 1.0 );\n        res = dot2(d + (c + b*t)*t);\n    }\n    else\n    {\n        float z = sqrt(-p);\n        float v = acos( q/(p*z*2.0) ) / 3.0;\n        float m = cos(v);\n        float n = sin(v)*1.732050808;\n        vec3  t = clamp(vec3(m+m,-n-m,n-m)*z-kx,0.0,1.0);\n        res = min( dot2(d+(c+b*t.x)*t.x),\n                   dot2(d+(c+b*t.y)*t.y) );\n        // the third root cannot be the closest\n        // res = min(res,dot2(d+(c+b*t.z)*t.z));\n    }\n    return sqrt( res );\n}\n\n// Image\n\n// Fork of \"pantera rosa\" by jorge2017a2. https://shadertoy.com/view/l3GGRW\n// 2024-08-05 11:06:26\n\n//por jorge2017a2\n//pantera rosa\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///2-jun-2024-\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n\n#define S(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n#define S2(d,b) smoothstep(8.0*antialiasing(1.5),0.,d - (b) )\n#define S3(d,b) smoothstep(1.0/antialiasing(0.5),0. , d - (b) )\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\nfloat Sdf_I(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat Sdf_U(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat Sdf_D(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\n\nvec3 DFB(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S3( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0),S3(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\n///oneshade    \nvec2 Rotate(in vec2 p, in vec2 o, in float r) \n{   float c = cos(r), s = sin(r);\n    return (p - o) * mat2(c, -s, s, c) + o;\n}\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nfloat divf(float a, float b)\n{\n    //evita crash por 1/0.0 =Infinito=error, en compilar\n    if(b==0.0)\n    {b=0.00001;}\n    return a/b;\n}\n\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{  vec2 pa = p-a, ba = b-a;\n    float h = clamp( divf( dot(pa,ba),dot(ba,ba)), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n// signed distance to an equilateral triangle\nfloat sdEquilateralTriangle(  in vec2 p, in float r )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - r;\n    p.y = p.y + r/k;\n    if( p.x+k*p.y>0.0 ) p=vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0*r, 0.0 );\n    return -length(p)*sign(p.y);\n}\n\n\nfloat sdUnevenCapsule( vec2 p, float r1, float r2, float h )\n{\n    p.x = abs(p.x);\n    float b = (r1-r2)/h;\n    float a = sqrt(1.0-b*b);\n    float k = dot(p,vec2(-b,a));\n    if( k < 0.0 ) return length(p) - r1;\n    if( k > a*h ) return length(p-vec2(0.0,h)) - r2;\n    return dot(p, vec2(a,b) ) - r1;\n}\n\n\nvec3 pantera(vec2 p, vec3 colout)\n{\n\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\nA=vec2(0.52098,0.56294);\nmed=vec2(0.4021,0.19231);\nfloat d1=sdEllipse(p-A,med);\n\nA=vec2(0.52098,0.52448);\nmed=vec2(0.41958,0.15734);\nfloat d2=sdEllipse(p-A,med);\n\nA=vec2(0.98601,0.65231);\nmed=vec2(0.08741,0.12238);\nfloat ang=50.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d3=sdEllipse(pr,med);\n\nA=vec2(0.08392,0.752);\nmed=vec2(0.08741,0.12238);\n ang=-50.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d4=sdEllipse(pr,med);\n    \n    dfin=999.9;\n    dfin=d1;\n    dfin=Sdf_U(dfin,d2);\n    dfin=Sdf_U(dfin,d3); //oreja der\n    dfin=Sdf_U(dfin,d4); //oreja izq\n    vec3 colc=vec3(0.97,0.61,0.7);\n    colout= DFB(colc, colout, dfin);\n    return colout;\n\n}\n\nvec3 ojos(vec2 p, vec3 colout)\n{\n\nfloat audio = texture(iChannel0,vec2(p.y, 0.)).r/2.;\n\np.y-=.67;\np.x-=.56;\nfloat l = length(p)/length(iResolution.xy/iResolution.y);\nfloat a = atan(p.x,p.y)+iTime;\nfloat s = texture(iChannel0,vec2(abs(fract(5.*a/6.283)*2.-1.),.75)).r;\nfloat A_ =.4;\nfloat B_ =.45;\np.y+=.67;\np.x+=.56;\nA_*=A_;\nB_*=B_;\n\n\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\nvec3 colc=vec3(0.99,0.93,0.07);\n\n//der\nA=vec2(0.63636,0.6958);\nA=vec2(0.60636,0.6958);\nmed=vec2(0.08741,0.10839);\nfloat ang=-40.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\n// right outlines\nfloat d1=sdEllipse(pr,med);\n\n//izq\nA=vec2(0.45105,0.67832);\nA=vec2(0.5105,0.67832);\nmed=vec2(0.09091,0.10839);\n ang=40.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\n// outlines from the left eye\nfloat d2=sdEllipse(pr,med);\n\ndfin=Sdf_U(d1,d2);\n\nif(LSD_EYES == 1 &&( l>d2*20. || l>d1*20.)){\n\ncolc.r = 1.-texture(iChannel0,vec2(pow(mix(mix(l,.0,A_),    s ,B_),2.),.25)).r/1.25;\ncolc.g = 1.-texture(iChannel0,vec2(pow(mix(mix(l,.5,A_),(1.-s),B_),2.),.25)).r/1.35;\ncolc.b = 1.-texture(iChannel0,vec2(pow(mix(mix(l,1.,A_),    s ,B_),2.),.25)).r/1.5;\n\ncolc.rgb = smoothstep(.05,1., colc.rgb+.2*l);\ncolc.rgb = pow(colc.rgb, vec3(s));\n}\ncolout= DFB(colc, colout,dfin);\n\n\n//pupila\nA=vec2(0.47203,0.66783);\nr1=0.02448;\nfloat d3=sdCircle(p-A,r1)*(1.+audio*4.);\n//d3+=nivel*2.0;\ncolout= DFB(vec3(0.0), colout, d3);\n\n//pupila\nA=vec2(0.61888,0.67483);\nr1=0.02448;\n\nfloat d4=sdCircle(p-A,r1)*(1.+audio*4.);\ncolout= DFB(vec3(0.0), colout, d4);\n    return colout;\n}\n\n\nvec3 nariz(vec2 p, vec3 colout)\n{\n\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1,ang ;\n\nvec3 colc=vec3(0.96,0.6,0.82);  //rosa\nvec3 colb=vec3(0.99,0.51,0.7);\n\nA=vec2(0.55245,0.57552);\nmed=vec2(0.0744,0.05944);\nfloat d1=sdEquilateralTriangle(p-A,med.x);\ncolout= DFB(colc, colout, d1);\n\nA=vec2(0.55245,0.6042);\nmed=vec2(0.0744,0.05944);\nfloat d2=sdEquilateralTriangle(vec2(p.x, -p.y+1.09)-A,med.x);\ncolout= DFB(colb, colout, d2);\nreturn colout;\n}\n\n\nvec3 boca(vec2 p, vec3 colout)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\nvec3 colc=vec3(0.97,0.76,0.82);\n\nA=vec2(0.55944,0.3951);\nmed=vec2(0.24126,0.16084);\nfloat ang=-5.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d1=sdEllipse(pr,med);\n\nA=vec2(0.55245,0.20979);\nmed=vec2(0.24126,0.16084);\n ang=-5.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d2=sdEllipse(pr,med);\n\nA=vec2(0.55545,0.32867);\nmed=vec2(0.15385,0.16084);\n ang=15.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d3=sdEllipse(pr,med);\n\ncolout= DFB(colc, colout, d3);\n    \n    dfin=Sdf_D(d1,d2);\n    colout= DFB(colc, colout, dfin);\n    \n    return colout;\n}\n\nvec3 cuello(vec2 p, vec3 colout)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\nvec3 colc=vec3(0.97,0.61,0.7);\n\nA=vec2(0.53147,0.14336);\nmed=vec2(0.06643,0.15734);\nfloat d1=sdBox(p-A,med);\ncolout= DFB(colc, colout, d1);\n    return colout;\n}\n\n//skin ?\nvec3 pestana(vec2 p, vec3 colout)\n{\n\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\np.x+=0.7;\np.y+=0.6;\n\nA=vec2(0.48657,0.78469);\nmed=vec2(0.03147,0.08741);\nfloat ang=15.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d1=sdBox(pr-A,med);\ncolout= DFB(vec3(0.0), colout, d1);\n\nA=vec2(0.75734,0.62517);\nmed=vec2(0.03147,0.06993);\n ang=-15.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d2=sdBox(pr-A,med);\ncolout= DFB(vec3(0.0), colout, d2);\n    return colout;\n}\n\nvec3 Lineaboca(vec2 p, vec3 colout)\n{\n\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\nA=vec2(0.54196,0.37063);\nB=vec2(0.54196,0.41259);\nfloat d1=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d1);\nreturn colout;\n}\n\nvec3 figOreja(vec2 p, vec3 colout)\n{\n\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\n\nvec3 colc=vec3(0.97,0.76,0.82);  //rosa\n\nA=vec2(0.14042,0.7182);\nr1=0.02098;\nfloat d1=sdUnevenCapsule(vec2(p.x,-p.y+1.45)-A,r1,r1-0.05,0.1);\ncolout= DFB(colc, colout, d1);\n\nA=vec2(0.97902,0.70483);\nr1=0.02098;\nfloat d2=sdUnevenCapsule(vec2(p.x, -p.y+1.45)-A,r1,r1-0.05,0.1);\ncolout= DFB(colc, colout, d2);\n    return colout;\n}\n\n\nvec3 figrostro(vec2 p, vec3 colout)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\nA=vec2(0.38811,0.55944);\nB=vec2(0.44056,0.56993);\nfloat d1=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d1);\n\nA=vec2(0.32168,0.57343);\nB=vec2(0.38112,0.55944);\nfloat d2=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d2);\n\nA=vec2(0.67832,0.57692);\nB=vec2(0.61888,0.6014);\nfloat d3=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d3);\n\nA=vec2(0.67832,0.57692);\nB=vec2(0.73776,0.58741);\nfloat d4=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d4);\n    return colout;\n}\n\nvec3 bigote(vec2 uv, vec3 col)\n{\n\nfloat audio = texture(iChannel0,vec2(sin(iTime),0.)).r/2.;\n\nuv.x-=0.05;\nvec2 pc1p1=vec2(.634,.434);\nvec2 pc1p2=vec2(.820,.406);\nvec2 pc1p3=vec2(.969,.329);\n\nvec2 pc2p1=vec2(.634,.392);\nvec2 pc2p2=vec2(.814,.325);\nvec2 pc2p3=vec2(.963,.206);\n\nvec2 pc3p1=vec2(.016,.297);\nvec2 pc3p2=vec2(.199,.406);\nvec2 pc3p3=vec2(.363,.413);\n\nvec2 pc4p1=vec2(.022,.168);\nvec2 pc4p2=vec2(.193,.336);\nvec2 pc4p3=vec2(.376,.381);\n\n\nfloat d1= sdBezier(uv,pc1p1,pc1p2,pc1p3*(1.+audio/10.));\nfloat d2= sdBezier(uv,pc2p1,pc2p2,pc2p3*(1.+audio/10.));\nfloat d3= sdBezier(uv,pc3p1*(1.+audio/5.),pc3p2,pc3p3);\nfloat d4= sdBezier(uv,pc4p1*(1.+audio/5.),pc4p2,pc4p3);\n\nvec3 C1=vec3(0.0);\ncol=DFB(C1,col,d1);\ncol=DFB(C1,col,d2);\ncol=DFB(C1,col,d3);\ncol=DFB(C1,col,d4);\n    return col;\n}\n\nvec3 tdo_pantera(vec2 p, vec3 colout)\n{\n\n\tfloat audio = texture(iChannel0,p).r/2.;\n\tfloat audio2 = texture(iChannel0,vec2(p.y, 0.)).r/2.;\n\t//vec3(0.97,0.61,0.7)\n\t\n    if(BACKGROUND_ANIMATION==1){\n        colout = vec3(audio, audio2/2., (audio+audio2)/2.+.1 ); \n    }\n    colout=cuello(p,colout);\n    colout=pantera(p, colout);\n    colout=pestana(p,colout);\n    colout=ojos(p, colout);\n    colout=boca(p,colout);\n    colout= nariz(p,colout);\n    colout= Lineaboca(p,colout); // *audio;\n    colout=figOreja(p,colout);\n    colout=figrostro(p,colout);\n    colout=bigote(p,colout);\n    \n    return colout;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    uv-=vec2(-1.,-1.);\n    float esc=0.6;\n    uv*=esc;\n\n    vec2 uv0=uv;\n    vec3 col = vec3(0.5,0.1,1.0);\n\n    col= tdo_pantera(uv,col);\n\n    col=pow(col,  vec3(0.54545));\n    fragColor = vec4(col,1.0);\n}\n\n\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 21,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}