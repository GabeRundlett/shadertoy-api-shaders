{
    "Shader": {
        "info": {
            "date": "1571141738",
            "description": "A constant zoom into a Sierpinski triangle, with trilinear filtering.",
            "flags": 0,
            "hasliked": 0,
            "id": "tsV3Dc",
            "likes": 7,
            "name": "Sierpinski zoom",
            "published": 3,
            "tags": [
                "fractal",
                "triangle",
                "zoom",
                "sierpinski"
            ],
            "usePreview": 0,
            "username": "id523",
            "viewed": 976
        },
        "renderpass": [
            {
                "code": "float texXY(int x, int y) {\n    return x >= 0 && y >= 0 && (x & y) == 0 ? 1.0 : 0.0;\n}\n\nfloat texY(float x, int y) {\n    x -= 0.5 * float(y);\n    float texX1 = texXY(int(floor(x)), y);\n    float texX2 = texXY(int(floor(x)) + 1, y);\n    return mix(texX1, texX2, fract(x));\n}\n\nfloat tex(vec2 pos) {\n    float texY1 = texY(pos.x, int(pos.y));\n    float texY2 = texY(pos.x, int(pos.y) + 1);\n    return mix(texY1, texY2, fract(pos.y));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = fract(iTime * 0.35);\n    \n    float zoom = pow(2.0, t);\n    \n    fragCoord *= 0.8 / zoom;\n    fragCoord.x *= 0.8660254;\n    \n    float texM = mix(tex(fragCoord), tex(fragCoord * 2.0), zoom - 1.0);\n    fragColor = vec4(texM, texM, texM, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}