{
    "Shader": {
        "info": {
            "date": "1515913448",
            "description": "try fullscreen and back.\nAt resolution change, we might like to be able to resize buffer data.\nAlas, buffers are clamped/resized at once at frame start, rather than after rewrite by the shader pass buffN.\nWhen resolution decrease, no way to save data. :-(",
            "flags": 32,
            "hasliked": 0,
            "id": "4lSBWw",
            "likes": 1,
            "name": "test resize buffer",
            "published": 3,
            "tags": [
                "buffer",
                "resize"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 897
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U ) \n{   O = texelFetch(iChannel0,ivec2(U),0);  }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n   vec2 R = iResolution.xy, \n       R0 = texelFetch(iChannel0,ivec2(0),0).xy;\n    \n   if (iFrame<001) {\n        float l = 1. - 2.*length(U/R - 1./2.); \n        O = vec4(fract(4321.*sin(1234.7*(U.x+17.31*U.y))) < l ); // init draw \n        if (U==vec2(.5)) { O.xy = R; return; }      // save resolution\n        return;\n    }\n    \n    if (U==vec2(.5)) { O.xy = R; return; }          // save resolution\n\n    if ( R0 == R )  \n\t    O = texelFetch(iChannel0,ivec2(U), 0);\n    else\n    { U = U/R*R0.xy; O = texelFetch(iChannel0,ivec2(U),0); }\n    \n    if (R != vec2(textureSize(iChannel0,0))) O.x++; // never happen\n }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}