{
    "Shader": {
        "info": {
            "date": "1665394898",
            "description": "my frist fractal",
            "flags": 0,
            "hasliked": 0,
            "id": "7lKBD3",
            "likes": 2,
            "name": "mandelbrot-set-142",
            "published": 3,
            "tags": [
                "mandelbrotset"
            ],
            "usePreview": 0,
            "username": "Kolya142",
            "viewed": 187
        },
        "renderpass": [
            {
                "code": "int max_iter = 100;\nfloat t1 = .25;\nfloat zoom_cof = 2.;\nvec2 offset = vec2(.8172096, .010022) - .5;\nvec2 complex_sq(vec2 z, vec2 c){\n    return vec2(z.x*z.x-z.y*z.y+c.x, 2.*z.x*z.y+c.y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/(iResolution.xy)/vec2(.6, 1.);\n    float t = pow(iTime, iTime*t1);\n    vec2 mouse = iMouse.xy/iResolution.xy-.5;\n    offset += mouse/(t/t1/iTime);\n    vec2 z;\n    vec2 c = (uv)/(t/zoom_cof)+offset;\n    int iter;\n    float color;\n\n    // Time varying pixel color\n    for (int i = 0;i < max_iter; i++){\n        iter += 1;\n        z = complex_sq(z, c);\n        if (length(z)>4.) {break;}\n    };\n    color = float(iter / max_iter);\n    vec3 col = vec3(color)*vec3(t/zoom_cof*z.y, c.x*z.y, .5*z.x);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}