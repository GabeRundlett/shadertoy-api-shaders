{
    "Shader": {
        "info": {
            "date": "1572542135",
            "description": "click to stop dezooming\n\nsee params in Common.\nvariant: hue(iTime*.5)",
            "flags": 32,
            "hasliked": 0,
            "id": "tsdXzX",
            "likes": 9,
            "name": "falling letters",
            "published": 3,
            "tags": [
                "fonts"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 510
        },
        "renderpass": [
            {
                "code": "// dual approach of https://www.shadertoy.com/view/wdtXzf\n\nvoid mainImage( out vec4 O, vec2 u ) {\n    vec2  U = u/R;\n#if MARGIN\n    U = margin( U, *A, -.5*S/R.y );   // restore letters apparent clipping\n#endif\n    O = texture( iChannel0, U );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// utils adapted from from https://www.shadertoy.com/view/llySRh\n\nvec4 char(vec2 p, int c) {\n    vec2 dFdx = dFdx(p/16.), dFdy = dFdy(p/16.);\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1);\n\treturn textureGrad( iChannel1, p/16. + fract( vec2(c, 15-c/16) / 16. ), \n                        dFdx, dFdy );\n}\n#define C(c) char(U,64+c)\n    \n#define hash14(p) fract(sin((p)*vec4(127.1,311.7, 269.5,183.3)) *43758.5453123)\n#define hue(v)   ( .6 + .6 * cos( 6.3*(v)  + vec4(0,23,21,0)  ) )\n//#define rot(a)  mat2(cos( a + vec4(0,33,11,0)))          // from https://www.shadertoy.com/view/XlsyWX \n#define rot(a)    mat2(cos( a + 1.571*vec4(0,1,-1,0)))\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2  U = u/R,\n          V = iMouse.z > 0. ? U : margin(U,,DZ),           // dezooming\n          W = abs(2.*V-1.);                                // > 1 if out of screen\n    V =  (V-.5)*A * rot(.005)  / A + .5;                   // global rotation\n    \n    O = max(W.x,W.y) < 1.                              // --- animation \n          ? texture(iChannel0, V)                          // dezoom prev frame\n          : vec4(.5+.5*sin(.3*iTime));                     // or background if outside\n\n                                                       // --- draw new letter\n    vec4 H = hash14(iTime),                                // 4 random numbers\n         C = mix(vec4(1), hue(H.x), fract(8.*H.x) );       // random color\n#if MARGIN\n    H.yz = margin( H.yz, *A, -.5*S/R.y );                  // prevent letters clipping\n#endif\n    U = ( U - H.yz ) / S *R * rot(6.28*fract(8.*H.y)) +.5; // random letter location and angle\n    float d = C( 1+int(25.*H.w) ).w - .5,                  // SDF to letter \n          w = fwidth(length(U));                           // true pixel width\n    O = mix(O, C, smoothstep( w,-w, d) );                  // blend color letter (with AA)\n    O = mix(O, vec4(0), smoothstep( w,.0, abs(d)) );       // blend black outline (with AA)\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define DZ      .01                               // dzoom amount\n#define S     ( R.y/2. )                          // font size ( attention: BBox is large )\n#define MARGIN   1                                // prevent letters clipping\n#define margin(U,A,v) (U A -(v)) / (1. A -2.*(v)) // rescale from/to margins\n#define R      ( iResolution.xy )\n#define A      ( R / R.y )          ",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}