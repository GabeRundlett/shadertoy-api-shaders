{
    "Shader": {
        "info": {
            "date": "1615678926",
            "description": "*summit soundtrack intensifies*",
            "flags": 0,
            "hasliked": 0,
            "id": "tlGBW3",
            "likes": 26,
            "name": "Celeste",
            "published": 3,
            "tags": [
                "polygon",
                "celeste"
            ],
            "usePreview": 0,
            "username": "manu210404",
            "viewed": 625
        },
        "renderpass": [
            {
                "code": "//      ____    ____    _       ____    _____   ______   ____\n//     / ___/\\ / ___/\\ / /\\    / ___/\\ / ____/\\/_   __/\\/ ___/\\\n//    / /\\__\\// /\\__\\// / /   / /\\__\\// /__ _\\/\\_/ /\\_\\/ /\\__\\/\n//   / / /   / __/\\  / / /   / __/\\  /__   /\\   / / / / __/\\\n//  / /__   / /__\\/ / /__   / /__\\/ _\\_ / / /  / / / / /__\\/\n// /_____/\\/_____/\\/_____/\\/_____/\\/_____/ /  /_/ / /_____/\\\n// \\_____\\/\\_____\\/\\_____\\/\\_____\\/\\_____\\/   \\_\\/  \\_____\\/\n\n#define M_COLOR_BASE vec3(0.608, 0.549, 0.824)\n#define M_COLOR_HIGH_D vec3(0.588, 0.773, 0.882)\n#define M_COLOR_HIGH_L vec3(0.502, 0.922, 0.953)\n#define M_COLOR_SHADE vec3(0.498, 0.459, 0.773)\n\n\n// falling snow by me - https://www.shadertoy.com/view/ssfGzM\nfloat snow(in vec2 p) {\n    float t = iTime;\n    float l = 0.;\n    for (float i = 0.; i < 70.; i += 1.) {\n        float z = hash(i*0.1),\n              depth = mix(200.,10.,z*z),\n              invDepth = 1./depth,\n              wave = sin(t*1.+i);\n        vec2 pos = (fract(vec2(hash(i*.2), hash(i*.3)) + (50.*iMouse.xy/iResolution.y - t*vec2(50.,10.)+vec2(0.,wave*10.))/vec2(4.0,2.2)*invDepth)-.5)*vec2(4.0,2.2);\n        l += sqrt(depth/150.) * smoothstep(-0.01, 0.01, invDepth-length(p-pos)) * (1. - l);\n    }\n    return l;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    vec2 p = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    // mouse position\n    vec2 m = vec2(0.5);\n    if (iMouse.xy != vec2(0.0)){\n        m = (2.*iMouse.xy-iResolution.xy)/iResolution.y;\n    }\n    \n    // some resizing and offsetting of the uv-cordinates\n    vec2 pm = p*1.33 + vec2(0.0, 0.33) - m * 0.15;\n    \n\n    \n    \n    // ================ outline of the mountain ================ //\n    float od = sdOutline(pm);\n    \n    \n    // ================ dark highlights ================ // \n    float h1d = sdHighlights_d(pm);\n    \n    \n    // ================ light highlights ================ //\n    float h2d = sdHighlights_l(pm);\n    \n    \n    // ================ shade ================ //\n    float sd = sdShade(pm);\n    \n    \n    // antialiasing\n    float eps = 1./iResolution.y*2.0;\n    \n    float mask_outline = smoothstep(eps,-eps,od);\n    float mask_highlight_d = smoothstep(eps,-eps,h1d);\n    float mask_highlight_l = smoothstep(eps,-eps,h2d);\n    float mask_shade = smoothstep(eps,-eps,sd);\n    \n    vec3 col = M_COLOR_BASE;\n    col = mix(col, M_COLOR_HIGH_D, mask_highlight_d);\n    col = mix(col, M_COLOR_HIGH_L, mask_highlight_l);\n    col = mix(col, M_COLOR_SHADE, mask_shade);\n    \n    // makes the top of the mountain lighter\n    col += vec3(1.-length(pm-o00))*0.3*(1.-col);\n    col *= mask_outline;\n    \n    // red to blue from center\n    col += pow(mix(pow(vec3(0.196,0.102,0.102), vec3(2.2)), pow(vec3(0.098,0.078,0.161), vec3(2.2)),smoothstep(0.0,2.0, vec3(length(p.xy))))*(1.-mask_outline), vec3(0.4545));\n    \n    // falling snow\n    col += snow(p)*(1.-col);\n    \n    //vec2 debug = o17;\n    //col = mix(col, vec3(1,0,0), smoothstep(0.02,0.015,length(pm-debug)));\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// hash function from \"Hash without sine\" by Dave_Hoskins - https://www.shadertoy.com/view/4djSRW\nfloat hash(float p)\n{\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n\n\n\n// Polygon Distance by iq - https://www.shadertoy.com/view/wdBXRW\n/*\nconst int N = 5;\nfloat sdPolygon( in vec2 p, in vec2[N] v )\n{\n    const int num = v.length();\n    float d = dot(p-v[0],p-v[0]);\n    float s = 1.0;\n    for( int i=0, j=num-1; i<num; j=i, i++ )\n    {\n        // distance\n        vec2 e = v[j] - v[i];\n        vec2 w =    p - v[i];\n        vec2 b = w - e*clamp( dot(w,e)/dot(e,e), 0.0, 1.0 );\n        d = min( d, dot(b,b) );\n\n        // winding number from http://geomalgorithms.com/a03-_inclusion.html\n        bvec3 cond = bvec3( p.y>=v[i].y, \n                            p.y <v[j].y, \n                            e.x*w.y>e.y*w.x );\n        if( all(cond) || all(not(cond)) ) s=-s;  \n    }\n    \n    return s*sqrt(d);\n}\n*/\n\n#define POLY(N) (in vec2 p, in vec2[N] v) {const int n=v.length();float d=dot(p-v[0],p-v[0]);float s=1.;for(int i=0,j=n-1;i<n;j=i,i++){vec2 e=v[j]-v[i];vec2 w=p-v[i];vec2 b=w-e*clamp(dot(w,e)/dot(e,e),0.,1.);d=min(d,dot(b,b));bvec3 cond=bvec3(p.y>=v[i].y,p.y<v[j].y,e.x*w.y>e.y*w.x);if(all(cond)||all(not(cond))) s=-s;}return s*sqrt(d);}\nfloat sdPoly03 POLY(3)\nfloat sdPoly04 POLY(4)\nfloat sdPoly05 POLY(5)\nfloat sdPoly06 POLY(6)\nfloat sdPoly07 POLY(7)\nfloat sdPoly08 POLY(8)\nfloat sdPoly10 POLY(10)\nfloat sdPoly14 POLY(14)\nfloat sdPoly29 POLY(29)\nfloat sdPoly32 POLY(32)\n\n\n\n// ================ outline of the mountain ================ //\nconst vec2 o00 = vec2(-0.022480, 0.971095), o01 = vec2(-0.007226, 0.959052), o02 = vec2( 0.099558, 0.806503),\n           o03 = vec2( 0.190285, 0.509433), o04 = vec2( 0.295463, 0.360899), o05 = vec2( 0.354877, 0.409875),\n           o06 = vec2( 0.380570, 0.421918), o07 = vec2( 0.572460, 0.105580), o08 = vec2( 0.704937,-0.027699),\n           o09 = vec2( 0.764351, 0.019670), o10 = vec2( 0.789241, 0.003613), o11 = vec2( 0.839020,-0.091930),\n           o12 = vec2( 0.980329,-0.290244), o13 = vec2( 1.142513,-0.458851), o14 = vec2( 0.654355,-0.459654),\n           o15 = vec2( 0.607788,-0.448414), o16 = vec2( 0.290646,-0.457246), o17 = vec2( 0.250501,-0.448414),\n           o18 = vec2(-0.048976,-0.458851), o19 = vec2(-0.130068,-0.443596), o20 = vec2(-0.237655,-0.458851),\n           o21 = vec2(-0.340425,-0.437976), o22 = vec2(-1.169008,-0.456443), o23 = vec2(-0.961862,-0.210758),\n           o24 = vec2(-0.924929,-0.152147), o25 = vec2(-0.809313,-0.012444), o26 = vec2(-0.725010,-0.107988),\n           o27 = vec2(-0.641509, 0.054997), o28 = vec2(-0.592533, 0.006824), o29 = vec2(-0.328382, 0.363307),\n           o30 = vec2(-0.230429, 0.475712), o31 = vec2(-0.157366, 0.698113);\n\n\n\n// ================ dark highlights ================ // \nconst vec2 h1_00 = vec2( 0.067442, 0.690887), h1_01 = vec2(-0.127659, 0.459654), h1_02 = vec2(-0.077077, 0.439582), \n           h1_03 = vec2( 0.115616, 0.303091), h1_04 = vec2(-0.199919, 0.402649), h1_05 = vec2(-0.280208, 0.330389),\n           h1_06 = vec2(-0.268968, 0.173825), h1_07 = vec2(-0.382175, 0.285427), h1_08 = o29, h1_09 = o30, \n           h1_10 = o31, h1_11 = o00, h1_12 = o01, h1_13 = o02;\n\n\n\n// ================ light highlights ================ // \nconst vec2 h2_00 = vec2(-0.085106, 0.536732), h2_01 = vec2(-0.077880, 0.592934), h2_02 = vec2(-0.065034, 0.670814), \n           h2_03 = vec2(-0.085909, 0.804094), h2_04 = o31, h2_05 = o00, h2_06 = o01, h2_07 = o02, h2_08 = h1_00, h2_09 = h1_01,     \n           \n           h3_00 = vec2( 0.421517, 0.352067), h3_01 = vec2( 0.367723, 0.199518), h3_02 = vec2(-0.041750, 0.055800),\n           h3_03 = vec2( 0.254516, 0.289441), h3_04 = o04, h3_05 = o05, h3_06 = o06,\n           \n           h4_00 = vec2( 0.627057, 0.050983), h4_01 = vec2( 0.536330,-0.101565), h4_02 = vec2( 0.081894,-0.140907), \n           h4_03 = vec2( 0.457647,-0.035728), h4_04 = o07,\n           \n           h5_00 = vec2(-0.607788,-0.115214), h5_01 = vec2(-0.653552,-0.075070), h5_02 = vec2(-0.655961,-0.010036),\n           h5_03 = o26, h5_04 = o27, h5_05 = o28,\n           \n           h6_00 = vec2(-0.757125,-0.071055), h6_01 = vec2(-0.749096,-0.156162), h6_02 = vec2(-0.805299,-0.094339), \n           h6_03 = vec2(-0.856684,-0.157767), h6_04 = vec2(-0.859895,-0.079084), h6_05 = o25,\n           \n           h7_00 = vec2(-0.274588, 0.067844), h7_01 = vec2(-0.089120,-0.053392), h7_02 = vec2(-0.385387,-0.207547), \n           h7_03 = vec2(-0.252107,-0.005218),\n           \n           h8_00 = vec2( 0.770774,-0.040545), h8_01 = vec2( 0.750702,-0.171417), h8_02 = o08, h8_03 = o09, h8_04 = o10;\n\n\n\n// ================ shade ================ //\nconst vec2 s1_00 = vec2(-0.984343,-0.323163), s1_01 = vec2(-0.782015,-0.234042), s1_02 = vec2(-0.166198,-0.390606), \n           s1_03 = vec2(-0.203934,-0.201926), s1_04 = vec2(-0.116419,-0.401043), s1_05 = vec2( 0.059413,-0.359293),\n           s1_06 = vec2( 0.240064,-0.347250), s1_07 = vec2( 0.345242,-0.291850), s1_08 = vec2( 0.622240,-0.261340), \n           s1_09 = vec2( 0.469690,-0.336812), s1_10 = vec2( 0.580489,-0.331192), s1_11 = vec2( 0.695303,-0.280610),\n           s1_12 = vec2( 0.711360,-0.231633), s1_13 = vec2( 0.724207,-0.086310), s1_14 = vec2( 0.786029,-0.277398), \n           s1_15 = vec2( 0.915295,-0.300682), s1_16 = o11, s1_17 = o12, s1_18 = o13, s1_19 = o14, s1_20 = o15, s1_21 = o16, \n           s1_22 = o17, s1_23 = o18, s1_24 = o19, s1_25 = o20, s1_26 = o21, s1_27 = o22, s1_28 = o23,\n           \n           s2_00 = h4_03, s2_01 = h4_02, s2_02 = vec2( 0.0,-0.150541), s2_03 = h7_01, s2_04 = vec2(-0.010437,-0.092733),\n           s2_05 = vec2(-0.020875,-0.016459), s2_06 = vec2( 0.032918,-0.105652), s2_07 = vec2( 0.329987,-0.035728),\n           \n           s3_00 = vec2(-0.564431, 0.047771), s3_01 = vec2(-0.530710,-0.132075), s3_02 = o28;\n\n\n\nfloat sdOutline(in vec2 p) {\n    return sdPoly32(p, vec2[](o00,o01,o02,o03,o04,o05,o06,o07,o08,o09,o10,o11,o12,o13,o14,o15,o16,o17,o18,o19,o20,o21,o22,o23,o24,o25,o26,o27,o28,o29,o30,o31));\n}\n\nfloat sdHighlights_d(in vec2 p) {\n    return sdPoly14(p, vec2[](h1_00,h1_01,h1_02,h1_03,h1_04,h1_05,h1_06,h1_07,h1_08,h1_09,h1_10,h1_11,h1_12,h1_13));\n}\n\nfloat sdHighlights_l(in vec2 p) {\n    float h2d = sdPoly10(p, vec2[](h2_00,h2_01,h2_02,h2_03,h2_04,h2_05,h2_06,h2_07,h2_08,h2_09)),\n          h3d = sdPoly07(p, vec2[](h3_00,h3_01,h3_02,h3_03,h3_04,h3_05,h3_06)),\n          h4d = sdPoly05(p, vec2[](h4_00,h4_01,h4_02,h4_03,h4_04)),\n          h5d = sdPoly06(p, vec2[](h5_00,h5_01,h5_02,h5_03,h5_04,h5_05)),\n          h6d = sdPoly06(p, vec2[](h6_00,h6_01,h6_02,h6_03,h6_04,h6_05)),\n          h7d = sdPoly04(p, vec2[](h7_00,h7_01,h7_02,h7_03)),\n          h8d = sdPoly05(p, vec2[](h8_00,h8_01,h8_02,h8_03,h8_04));\n    return min(min(min(min(min(min(h2d,h3d),h4d),h5d),h6d),h7d),h8d);\n}\n\nfloat sdShade(in vec2 p) {\n    float s1d = sdPoly29(p, vec2[](s1_00,s1_01,s1_02,s1_03,s1_04,s1_05,s1_06,s1_07,s1_08,s1_09,s1_10,s1_11,s1_12,s1_13,s1_14,s1_15,s1_16,s1_17,s1_18,s1_19,s1_20,s1_21,s1_22,s1_23,s1_24,s1_25,s1_26,s1_27,s1_28)),\n          s2d = sdPoly08(p, vec2[](s2_00,s2_01,s2_02,s2_03,s2_04,s2_05,s2_06,s2_07)),\n          s3d = sdPoly03(p, vec2[](s3_00,s3_01,s3_02));\n    return min(min(s1d,s2d),s3d);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}