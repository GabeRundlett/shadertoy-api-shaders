{
    "Shader": {
        "info": {
            "date": "1683124381",
            "description": "shin, dragon ball",
            "flags": 0,
            "hasliked": 0,
            "id": "ml33W2",
            "likes": 6,
            "name": "shin",
            "published": 3,
            "tags": [
                "dragonball",
                "shin"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 141
        },
        "renderpass": [
            {
                "code": "///por jorge217a1 ..jorge.f.p\n//shin--dragon ball\n//3-may-2023\n\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(4.0*antialiasing(1.0),b,d)\n#define POLY(N) (in vec2 p, in vec2[N] v) {const int n=v.length();float d=dot(p-v[0],p-v[0]);float s=1.;for(int i=0,j=n-1;i<n;j=i,i++){vec2 e=v[j]-v[i];vec2 w=p-v[i];vec2 b=w-e*clamp(dot(w,e)/dot(e,e),0.,1.);d=min(d,dot(b,b));bvec3 cond=bvec3(p.y>=v[i].y,p.y<v[j].y,e.x*w.y>e.y*w.x);if(all(cond)||all(not(cond))) s=-s;}return s*sqrt(d);}\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\ncolOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\nreturn colOut;\n}\nvec3 DrawFigBordeCol(vec3 pColObj, vec3 colOut, float distObj , vec3 colBorde )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,colBorde ,S2(abs( distObj)-0.01,0.0));\n  return colOut;\n}\nvec3 DrawFigDelgado(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj-0.001,0.0)); return colOut; }\n\n\n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n\nfloat sdCircle( vec2 p, float r )\n{return length(p) - r; }\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\nvec2 pa = p-a, ba = b-a;\nfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\nreturn length( pa - ba*h );\n}\n\nfloat sdPoly9 POLY(9)\nvec2 pt9[9]=vec2[]( \nvec2(2.38,3.26),vec2(2.39,3.12),vec2(2.56,2.64),vec2(2.82,2.49),vec2(2.89,2.49),\nvec2(3.17,2.66),vec2(3.3,3.07),vec2(3.34,3.3),vec2(2.38,3.26)  \n);\n\nfloat sdPoly6I POLY(6)\nvec2 pt6I[6]=vec2[]( \nvec2(2.42,3.06),vec2(2.01,3.22),vec2(1.99,3.18),vec2(2.32,2.8),vec2(2.52,2.74),\nvec2(2.42,3.06)  \n);\n\nfloat sdPoly6D POLY(6)\nvec2 pt6D[6]=vec2[]( \nvec2(3.27,3.04),vec2(3.69,3.23),vec2(3.7,3.2),vec2(3.39,2.81),vec2(3.19,2.74),\nvec2(3.27,3.04)  );\n\n//---Pelo 1,2,3,4,5,6,7\nfloat sdPoly9P1 POLY(9)\nvec2 pt9P1[9]=vec2[]( \nvec2(3.11,3.59),vec2(2.89,3.34),vec2(2.87,3.38),vec2(2.75,3.13),vec2(2.74,2.86),\nvec2(2.57,3.15),vec2(2.62,3.48),vec2(2.79,3.69),vec2(3.11,3.59)  );\n\n\nfloat sdPoly10P2 POLY(10)\nvec2 pt10P2[10]=vec2[]( \nvec2(3.09,3.59),vec2(3.09,3.83),vec2(2.62,4.1),vec2(2.16,3.66),vec2(2.15,2.91),\nvec2(2.33,3.18),vec2(2.63,3.47),vec2(2.85,3.57),vec2(2.96,3.44),vec2(3.09,3.59));\n\nfloat sdPoly9P3 POLY(9)\nvec2 pt9P3[9]=vec2[]( \nvec2(3.09,3.63),vec2(3.14,3.69),vec2(3.16,4.1),vec2(2.67,4.51),vec2(2.32,4.35),\nvec2(1.88,4.04),vec2(2.17,4.01),vec2(2.95,3.47),vec2(3.09,3.63));\n\nfloat sdPoly7P4 POLY(7)\nvec2 pt7P4[7]=vec2[]( \nvec2(3.14,3.67),vec2(3.24,3.99),vec2(3.27,4.19),vec2(2.63,4.77),vec2(2.61,4.5),\nvec2(3.07,3.67),vec2(3.14,3.67));\n\nfloat sdPoly6P5 POLY(6)\nvec2 pt6P5[6]=vec2[]( \nvec2(3.15,3.67),vec2(3.41,3.9),vec2(3.41,4.25),vec2(3.48,4.45),vec2(3.08,4.19),\nvec2(3.15,3.67)  );\n\nfloat sdPoly6P6 POLY(6)\nvec2 pt6P6[6]=vec2[]( \nvec2(3.27,3.52),vec2(3.5,3.7),vec2(3.52,3.92),vec2(3.56,4.01),vec2(3.2,3.65),\nvec2(3.27,3.52));\n\n\nfloat sdPoly6P7 POLY(6)\nvec2 pt6P7[6]=vec2[]( \nvec2(3.29,3.54),vec2(3.46,3.55),vec2(3.59,3.44),vec2(3.47,3.41),vec2(3.32,3.35),\nvec2(3.29,3.54));\n\nfloat sdPoly4CI POLY(4)\nvec2 pt4CI[4]=vec2[]( \nvec2(2.46,3.06),vec2(2.63,2.97),vec2(2.76,2.89),vec2(2.46,3.06));\n\nfloat sdPoly4CD POLY(4)\nvec2 pt4CD[4]=vec2[]( \nvec2(2.95,2.93),vec2(3.12,3.01),vec2(3.23,3.03),vec2(2.95,2.93));\n\nfloat sdPoly5OI POLY(5)\nvec2 pt5OI[5]=vec2[]( \nvec2(2.79,2.82),vec2(2.65,2.92),vec2(2.5,2.93),vec2(2.61,2.83),vec2(2.79,2.82));\n\nfloat sdPoly5OD POLY(5)\nvec2 pt5OD[5]=vec2[]( \nvec2(2.92,2.82),vec2(3.02,2.91),vec2(3.19,2.93),vec2(3.14,2.87),vec2(2.92,2.82));\n\n//boca\nfloat sdPoly4B POLY(4)\nvec2 pt4B[4]=vec2[]( \nvec2(2.79,2.67),vec2(2.85,2.64),vec2(2.93,2.66),vec2(2.79,2.66));\n\n//nariz\nfloat sdPoly5N POLY(5)\nvec2 pt5N[5]=vec2[]( \nvec2(2.81,2.8),vec2(2.79,2.7),vec2(2.83,2.79),vec2(2.92,2.75),vec2(2.81,2.8));\n\n///ropa\nfloat sdPoly17R POLY(17)\nvec2 pt17R[17]=vec2[]( \nvec2(2.59,2.46),vec2(2.33,2.53),vec2(2.02,2.56),vec2(2.24,2.15),vec2(2.31,1.76),\nvec2(2.38,1.7),vec2(2.36,1.41),vec2(2.04,0.49),vec2(3.55,0.47),vec2(3.33,1.34),\nvec2(3.28,1.64),vec2(3.39,1.88),vec2(3.41,2.1),vec2(3.71,2.48),vec2(3.67,2.52),\nvec2(3.16,2.46),vec2(2.59,2.46)  );\n\nvec3 cabezaShin(vec2 p, vec3 col)\n{   float sd9 = sdPoly9(p, pt9);\n    float sd6I = sdPoly6I(p, pt6I);\n    float sd6D = sdPoly6D(p, pt6D);\n    float sd9P1 = sdPoly9P1(p, pt9P1);\n    float sd10P2 = sdPoly10P2(p, pt10P2);\n    float sd9P3 = sdPoly9P3(p, pt9P3);\n    float sd7P4 = sdPoly7P4(p, pt7P4);\n    float sd6P5 = sdPoly6P5(p, pt6P5);\n    float sd6P6 = sdPoly6P6(p, pt6P6);\n    //float sd6P7 = sdPoly6P7(p, pt6P7);\n    float sd4CI = sdPoly4CI(p, pt4CI);\n    float sd4CD = sdPoly4CD(p, pt4CD);\n    float sd5OI = sdPoly5OI(p, pt5OI); //ojo izq\n    float sd5OD = sdPoly5OD(p, pt5OD); //ojo der\n    float sd4B = sdPoly4B(p, pt4B);\n    float sd17R = sdPoly17R(p, pt17R); //Ropa\n      vec2 l1, l2;\n    l1=vec2(2.84,2.8);l2=vec2(2.79,2.7);\n    float dl1= sdSegment(p, l1, l2);\n    l1=vec2(2.9,2.69);l2=vec2(2.78,2.7);\n    float dl2= sdSegment( p, l1, l2);\n   vec2 p1=vec2(2.86,3.32) ;\n   float r1=0.48;\n    float d1= sdCircle(p-p1, r1);\n    float df= unionSDF(sd9, d1);\n    ///------corneas\n    p1=vec2(2.67,2.88); r1=0.05;\n    vec2 p2=vec2(3.02,2.88); float r2=0.05;\n    float dc1= sdCircle(p-p1, r1);\n    float dc2= sdCircle(p-p2, r2);\n    dc1=intersectSDF(sd5OI,dc1 );\n    dc2=intersectSDF(sd5OD,dc2 );\n    col= DrawFigBorde(vec3(.72,.7,.9), col,df );\n    col= DrawFigBorde(vec3(.72,.7,.9), col,sd6I );  //oreja\n    col= DrawFigBorde(vec3(.72,.7,.9), col,sd6D );  //oreja\n    //col= DrawFigBorde(vec3(.86,1.,.94), col,sd6P7); //pelo\n    col= DrawFigBorde(vec3(.86,1.,.94), col,sd6P5);\n    col= DrawFigBorde(vec3(.86,1.,.94), col,sd7P4);\n    col= DrawFigBorde(vec3(.86,1.,.94), col,sd9P3);\n    col= DrawFigBorde(vec3(.86,1.,.94), col,sd10P2 ); //pelo 2\n    col= DrawFigBorde(vec3(.86,1.,.94), col,sd9P1 );  //pelo 1\n    col= DrawFigBorde(vec3(0.0), col,sd4CI);  //ceja izq\n    col= DrawFigBorde(vec3(0.0), col,sd4CD);  //ceja dert\n    col= DrawFigBorde(vec3(1.0), col,sd5OI);  //ojo i\n    col= DrawFigBorde(vec3(1.0), col,sd5OD);  //ojo D\n    col= DrawFigBorde(vec3(0.0), col,sd4B);  //boca\n    //col= DrawFigBorde(vec3(0.0), col,dc1);  //cornea izq\n    col= DrawFigDelgado(vec3(0.0), col, dc1 );\n    //col= DrawFigBorde(vec3(0.0), col,dc2);  //cornea der\n    col= DrawFigDelgado(vec3(0.0), col, dc2 );\n    col= DrawFigBorde(vec3(0.0,0.2,0.8), col,sd17R);  //ropa\n    col= DrawFigBorde(vec3(0.0), col,dl1);  //nariz 1\n    col= DrawFigBorde(vec3(0.0), col,dl2);  //nariz 2\n    \n    //col= DrawFigDelgado(vec3 pColObj, vec3 colOut, float distObj )\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    uv-=vec2(0.0,-0.5); uv*=2.0;\n   vec3 col =mix(vec3(0.56,0.96,0.93),vec3(0.,0.39,0.71),uv.y*0.5);\n    float t=iTime;\n    uv.x=abs(uv.x)+(0.5+0.5*sin(t*2.0))-(1.0+0.5*sin(t));\n    col= cabezaShin(uv-vec2(-2.5,-2.0),col);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}