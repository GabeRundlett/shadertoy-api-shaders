{
    "Shader": {
        "info": {
            "date": "1638959800",
            "description": "Animation of a piece from Bram Vanhaeren's Kleurstaal series:\n\n[url]https://www.behance.net/gallery/53570349/Kleurstaal[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "fltSWn",
            "likes": 14,
            "name": "Kleurstaal",
            "published": 3,
            "tags": [
                "color",
                "palette",
                "colour",
                "geometric"
            ],
            "usePreview": 0,
            "username": "davidar",
            "viewed": 324
        },
        "renderpass": [
            {
                "code": "#define rgb(r,g,b) pow(vec3(r,g,b) / 255., vec3(2.2));\n#define mx(a,b,v) mix(a, b, smoothstep(-texel, texel, v))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float texel = 1. / iResolution.y;\n    vec2 uv = fragCoord / iResolution.y;\n    uv.x -= (iResolution.x / iResolution.y - 1.) / 2.;\n    \n    vec3 pink = rgb(255, 147, 249);\n    vec3 purple = rgb(32, 16, 63);\n    vec3 red = rgb(249, 14, 29);\n    vec3 skyblue = rgb(184, 229, 250);\n    vec3 deepblue = rgb(49, 108, 244);\n    vec3 white = rgb(240, 238, 249);\n    \n    float r1 = 0.2 + 0.02 * cos(iTime);\n    float r2 = 0.3 + 0.03 * cos(1.2 * iTime + 1.);\n    float r3 = 0.18 + 0.02 * cos(1.2 * iTime + 2.);\n    float r4 = 0.15 + 0.01 * cos(3. * iTime);\n    \n    float t1 = 1. + 0.1 * cos(0.5 * iTime);\n    float t2 = 0.6 + 0.05 * cos(0.3 * iTime);\n    float t3 = -0.6 + 0.05 * cos(0.2 * iTime + 1.);\n    float t4 = 0. + 0.1 * cos(0.6 * iTime + 2.);\n\n    vec3 col = mx(\n        mx(\n            mx(\n                mx(white, skyblue, length(uv - vec2(0.75,0.25)) - r1),\n                mx(\n                    mx(purple, deepblue, length(uv - vec2(0.75,0.25)) - r1),\n                    mx(white, purple, length(uv - vec2(0.75,0.25)) - r1),\n                    length(uv - 0.5) - r2),\n                uv.y - uv.x - t3),\n            mx(\n                mx(\n                    mx(purple, red, length(uv - 0.5) - r3),\n                    skyblue,\n                    length(uv - 0.5) - r2),\n                mx(purple, deepblue, length(uv - vec2(0,1)) - r4),\n                uv.y - uv.x - t2),\n            uv.y - uv.x - t4),\n        mx(\n            mx(\n                mx(red, white, length(uv - vec2(0.75,0.25)) - r1),\n                mx(pink, purple, length(uv - vec2(0.75,0.25)) - r1),\n                length(uv - 0.5) - r2),\n            mx(\n                mx(\n                    mx(skyblue, purple, length(uv - 0.5) - r3),\n                    pink,\n                    length(uv - 0.5) - r2),\n                mx(red, skyblue, length(uv - vec2(0,1)) - r4),\n                uv.y - uv.x - t2),\n            uv.y - uv.x - t4),\n        uv.x + uv.y - t1);\n\n    fragColor = vec4(pow(col, vec3(1./2.2)), 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}