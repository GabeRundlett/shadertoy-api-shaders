{
    "Shader": {
        "info": {
            "date": "1610474325",
            "description": "you got reef with that?",
            "flags": 64,
            "hasliked": 0,
            "id": "WtVczh",
            "likes": 8,
            "name": "Mandelcoral",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "mandelbrot",
                "coral"
            ],
            "usePreview": 0,
            "username": "wayfinder",
            "viewed": 382
        },
        "renderpass": [
            {
                "code": "// using iq's mandelbrot distance https://www.shadertoy.com/view/lsX3W4\n\n\nvec2 cpow(vec2 c, float power) {\n    if (abs(c.x) < 1e-5 && abs(c.y) < 1e-5) return vec2(0.0);\n    vec2 cm = vec2(log(length(c)), atan(c.y, c.x)) * power;\n    float pr = exp(cm.x);\n    return vec2(pr * cos(cm.y), pr * sin(cm.y));\n}\n\nvec3 f(vec2 p, float time) {\n    vec3 res = vec3(1.0);\n    float n = 2.0;\n    float zoom = 0.006 + sin(time) / 500.0;\n    vec2 c = p * zoom - vec2(1.341, 0.065);\n    float imax = 300.0;\n    float bailout = 2.1;\n    vec2 z = vec2(0.0);\n    vec2 dz = z;\n    float m2 = 1.0;\n    \n    for (float i = 18.0; i < imax; i++) {\n        if (m2 > bailout) break;\n        vec2 ch = n * cpow(z, n - 1.0);\n        dz = mat2(ch, -ch.y, ch.x) * dz + vec2(1.0, 0.0);\n        z = cpow(z, n) + c + sin(time) * 0.005;\n        m2 = dot(z, z);\n    }\n    \n    float lm2 = log(m2);\n    float d = 0.5 * sqrt(m2 / dot(dz, dz)) * lm2;\n    res *= d * imax;\n    res.g /= 1.0 - 0.2 * lm2;\n    res = clamp(res, vec3(0.0, 0.0, 0.1), vec3(50.0 * d, 0.3, 1.0));\n    res += vec3(0.002, 0.6, 0.6) / length(dz);\n    res *= sin(vec3(2.0, 0.4, 20.0) * tanh(1.0 - 1.0 / length(tan(z - 100.0) * 0.95)));\n    res += pow(clamp(vec3(1.0) - length(c - z * 1.6), 0.0, 1.0) * 160.0, vec3(0.7)) * res;\n    return res;\n}\n\nvec2 rot(vec2 p, float a) {\n    return cos(a) * p + sin(a) * vec2(p.y, -p.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(1.0);\n\n    float time = 1024.0 + mod(iTime * 0.1, 1024.0);\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv /= vec2(iResolution.y/iResolution.x, 1.0);\n    uv *= 4000.0 / time;\n    \n    vec3 col = f(rot(uv, time), time);\n\n    fragColor = vec4(pow(col, vec3(1.0/2.2)), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 25207,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/wayfu/wayfinder-party-of-one"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}