{
    "Shader": {
        "info": {
            "date": "1587700728",
            "description": "Just messing with some functions, but I turned it into a nice picture. Trying to make a function that has a lobe jutting out but doesn't have discontinuities.",
            "flags": 0,
            "hasliked": 0,
            "id": "tslBR8",
            "likes": 2,
            "name": "xy circular basis",
            "published": 3,
            "tags": [
                "trippy"
            ],
            "usePreview": 0,
            "username": "darknoon",
            "viewed": 345
        },
        "renderpass": [
            {
                "code": "\nvec3 a = vec3(0.5, 0.5, 0.5);\nvec3 b = vec3(0.5, 0.5, 0.5);\nvec3 c = vec3(1.0, 1.0, 1.0);\nvec3 d = vec3(0.00, 0.33, 0.67);\n\n// isquilez color mapper\nvec3 colorMap(float t) {\n\treturn (a + b * cos(2. * 3.141 * (c * t + d)));\n}\n\n// Working on this as an oriented basis function for CPPNs\nfloat dv(vec2 uv, int am, float angle) {\n    float r = length(uv);\n    \n    float th = atan(uv.y, uv.x);\n    \n    //float rin = 32.;\n    //float rscale = (1.+rin)/rin - 1. / (rin*r + 1.);\n    float rscale = tanh(3.*r*r);\n    \n    float value = 1.8 + rscale * 0.7*cos(float(am)*th + angle) - r;\n    return tanh(value*value);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    float scale = 2.5;\n    \n    float value = 0.0;\n    vec3 color = vec3(0.0);\n    for (int i=0; i<3; i++) {\n    \tfloat v = dv(uv * scale, 1+i, iTime * (0.8 + 0.4*float(i)) * float(i%2-1));\n        value += v;\n        color[i] = v;\n    }\n    //fragColor = vec4(value);\n    //fragColor = vec4(tanh(value));\n    color = mix(color, colorMap(1.5*value + 0.3*iTime), 0.15);\n    fragColor.xyz = color;\n    //fragColor.xyz = colorMap(value);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}