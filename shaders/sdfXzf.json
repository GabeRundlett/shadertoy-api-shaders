{
    "Shader": {
        "info": {
            "date": "1618954334",
            "description": "I couldn't resist this trivial change to Fabrice's latest.\noriginal: https://shadertoy.com/view/7sXXRf",
            "flags": 16,
            "hasliked": 0,
            "id": "sdfXzf",
            "likes": 5,
            "name": "marriage of Shirley & Britney",
            "published": 3,
            "tags": [
                "procedural",
                "noise",
                "perlin",
                "isolines"
            ],
            "usePreview": 0,
            "username": "elenzil",
            "viewed": 337
        },
        "renderpass": [
            {
                "code": "// Fork of \"isolined Britney\" by FabriceNeyret2. https://shadertoy.com/view/7sXXRf\n// 2021-04-20 21:28:58\n\n// variant of https://shadertoy.com/view/sdlXRj\n// using texture instead of noise https://shadertoy.com/view/NdXXRj\n\n#define draw(v,d)       clamp(1. - abs( fract(v-.5) - .5 ) / (d), 0.,1.)\n#define Mix(c0,c1,v)    mix(c0,c1,v)\n//#define Mix(c0,c1,v)  vec4(c0,c1,0,0) // debug \n#define func( P )       texture(iChannel0, u/R , 2. ).r             \\\n                        + .001*texture(iChannel1, u/R , 0. ).r     // to cancel overcompressed mpeg regions\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy, eps = vec2(1e-3,0),\n         U = u / R.y;\t\n    vec4 T = texture(iChannel2, u/R );\n    O-=O;\n\tfloat f = func(P),\n    l = exp2(floor(log2(.5/22./fwidth(f)))),                       // subvid amount (absolute)\n    dl =     fract(log2(.5/22./fwidth(f))),\n\n // f *= U.x;                                                      // draw isolines \n    df = fwidth(f);\n    l *= 12.;\n# if 1\n     O += Mix( draw(    f*l,    l*df ),\n               draw( 2.*f*l, 2.*l*df ),\n               dl ) * T;\n\n# else                                                             // color on different layers\n#   define Draw(c,ofs)                         \\\n      O.c = mix( draw(    f*l-ofs,    l*df ),  \\\n                 draw( 2.*f*l-ofs, 2.*l*df ),  \\\n                 dl ) * T.c\n    float ofs = .33;   // 0. : too subtle to see.\n    Draw(r, 0.);\n    Draw(g, ofs);\n    Draw(b, -ofs);\n# endif\n    \n    O = sqrt(O);                                                   // to sRGB\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "video",
                        "id": 29,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv"
                    },
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}