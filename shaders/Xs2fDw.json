{
    "Shader": {
        "info": {
            "date": "1501042065",
            "description": "reference\nhttps://www.shadertoy.com/view/4tdSWr",
            "flags": 0,
            "hasliked": 0,
            "id": "Xs2fDw",
            "likes": 3,
            "name": "Cloud 2d",
            "published": 3,
            "tags": [
                "2d",
                "cloud"
            ],
            "usePreview": 0,
            "username": "sw",
            "viewed": 816
        },
        "renderpass": [
            {
                "code": "const float cloudscale = 1.1;\nconst mat2 m = mat2( 1.2,  1.2, -1.6,  1.6 );\n\nvec2 hash( vec2 p ) {\n    p = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));\n    return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise( in vec2 p ) {\n    const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n    vec2 i = floor(p + (p.x+p.y)*K1);   \n    vec2 a = p - i + (i.x+i.y)*K2;\n    vec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0); //vec2 of = 0.5 + 0.5*vec2(sign(a.x-a.y), sign(a.y-a.x));\n    vec2 b = a - o + K2;\n    vec2 c = a - 1.0 + 2.0*K2;\n    vec3 h = max(0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n    vec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n    return dot(n, vec3(70.0));  \n}\n\nfloat fbm(vec2 n) {\n    float total = 0.0, amplitude = 0.1;\n    for (int i = 0; i < 7; i++) {\n        total += noise(n) * amplitude;\n        n = m * n;\n        amplitude *= 0.4;\n    }\n    return total;\n}\n\nfloat density( vec2 uv,float weight,float speed,float time )\n{\n    \n    float result = 0.0;\n    uv *= cloudscale;\n    uv -= speed - time;\n    for (int i=0; i<8; i++){\n        result += abs(weight*noise( uv ));\n        uv = m*uv + time;\n        //uv = uv + time;\n        weight *= 0.7;\n    }\n    return result;\n}\n\n// -----------------------------------------------\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = fragCoord.xy / iResolution.xy;\n    vec2 uv = p*vec2(iResolution.x/iResolution.y,1.0);    \n\n    float time = iTime * 0.02;\n    float speed = fbm(uv * cloudscale * 0.3); // speed\n    \n    // cloud mask\n    float r = density(uv,0.9,speed,time);\n    \n    r *= density(uv,0.8,speed,time);\n\n    // all mask\n    float c = density(uv*1.0,0.3,speed,time*1.4);\n    c += density(uv*1.2,0.5,speed,time*2.0);\n    \n    // add cloud area\n    r = pow(r,4.0);\n    r= r+c;\n\n    vec3 skycolor = vec3(0.4,0.7,1.0)*(clamp(1.0-uv.y+0.8,0.0,1.0));\n    vec3 cloudcolor = vec3(0.9,0.9,1.0)*((c+0.12)*2.4);\n    r = clamp(r,0.0,1.0);\n    vec3 final = mix( cloudcolor,skycolor, r);\n    fragColor.xyz = final;\n    fragColor.a = 1.0;\n    return ;\n    \n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}