{
    "Shader": {
        "info": {
            "date": "1614937144",
            "description": "A twitter user named yonatan/@zozuar posted a compelling animation (and GLSL-snippet) of a 3D-fractal. I had to get that into a fully working shader... to see how much for a working shader was still missing. The character-limit on twitter is hard :)",
            "flags": 0,
            "hasliked": 0,
            "id": "3tyfWG",
            "likes": 16,
            "name": "@zozuar's fractal from twitter",
            "published": 3,
            "tags": [
                "3d",
                "fractal",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "MacSlow",
            "viewed": 1724
        },
        "renderpass": [
            {
                "code": "////////////////////////////////////////////////////////////////////////////////\n//\n// yonatan's 3D fractal - A twitter user named yonatan/@zozuar posted a really\n// compelling animation and GLSL-snippet of a 3D-fractal the other day. I had to\n// get that into a fully working shader to see how much for a working shader was\n// still missing. The character-limit on twitter is hard :)\n//\n// Furthermore some people in the comments on the original post were missing\n// code-context and this my attempt to provide that. I provide a bit of\n// commentary in case people a bit unfamiliar with raymarching give it a read.\n//\n// See the function yonatansFractal() for all the details and references.\n//\n// Author(s):\n//   Mirco \"MacSlow\" MÃ¼ller <macslow@gmail.com>\n//\n// This program is free software: you can redistribute it and/or modify it\n// under the terms of the GNU General Public License version 3, as published\n// by the Free Software Foundation.\n//\n// This program is distributed in the hope that it will be useful, but\n// WITHOUT ANY WARRANTY; without even the implied warranties of\n// MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR\n// PURPOSE.  See the GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this program.  If not, see <http://www.gnu.org/licenses/>.\n//\n////////////////////////////////////////////////////////////////////////////////\n\n// basic 2D-rotation matrix\nmat2 rotate2D (float rad)\n{\n    float c = cos (rad);\n    float s = sin (rad);\n    return mat2 (c, s, -s, c);\n}\n\n// convert hue/saturation/value to RGB-color\nvec3 hsv(float h, float s, float v)\n{\n    vec3 c = vec3 (h, s, v);\n    vec4 k = vec4(1., 2./3., 1./3., 3.);\n    vec3 p = abs(fract(c.xxx + k.xyz) * 6. - k.www);\n\n    return c.z * mix(k.xxx, clamp(p - k.xxx, .0, 1.), c.y);\n}\n\nvoid yonatansFractal (float t, vec2 FC, vec2 r, inout vec3 o)\n{\n    // yonatan/@zozuar's GLSL-snippet as posted on twitter...\n    // just formatted a bit nicer, but otherwise untouched, see\n    // https://twitter.com/zozuar/status/1367243732764876800\n    // for reference\n    for(float i, g, e, s, k = t*.1; ++i < 99.; o.rgb += hsv(s/15. + .5, .3, s/1e3)) {\n        vec3 p = vec3(g*(FC.xy - .5*r)/r.y + .5,g - 1.);\n        p.xz *= rotate2D(k);\n        s = 3.;\n        for(int i; i++ < 9; p = vec3(2,4,2) - abs(abs(p)*e - vec3(4,4,2) ) )\n            s *= e = max(1.,(8.-8.*cos(k))/dot(p,p));\n        g += min(length(p.xz), p.y)/s;\n        s = log(s);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime + 20.;   // offset the time thus the thumbnail looks not empty\n    vec2 FC = fragCoord;     // pixel-coordinates\n    vec3 o = vec3 (.0);      // rgb-output color\n    vec2 r = iResolution.xy; // resolution for point/ray-generation\n\n    yonatansFractal(t, FC, r, o);\n\n    // finally show it on screen\n    fragColor = vec4(o, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}