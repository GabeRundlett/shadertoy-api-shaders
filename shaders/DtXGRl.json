{
    "Shader": {
        "info": {
            "date": "1672433549",
            "description": "Crossing a noise texture with itself over a varying amount and distribution of nearby points to showcase the various behaviors. This system is very prone to blacking out so a few extra steps were needed to improve stability.",
            "flags": 32,
            "hasliked": 0,
            "id": "DtXGRl",
            "likes": 3,
            "name": "oil crystals",
            "published": 3,
            "tags": [
                "trippy"
            ],
            "usePreview": 0,
            "username": "nickbrick",
            "viewed": 209
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define TAU 6.283185307179586476925286766559\n#define STEPS (sin(iTime * 0.5) * 4.0 + 5.0)\n#define R 0.001\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\n    if (iFrame < 1){ fragColor = texture(iChannel0, uv); return; }\n    \n    vec3 sum = vec3(1.3);\n    for (float a = 0.0; a < TAU; a += TAU / STEPS)\n        sum += cross(sum.rgb, texture(iChannel1, uv + vec2(R * sin(a), R * cos(a))).rgb);\n    sum = cross(sum, vec3(0.6));\n    sum = max(sum, vec3(0.0));\n    fragColor = vec4(sum / STEPS, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}