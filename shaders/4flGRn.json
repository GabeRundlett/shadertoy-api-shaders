{
    "Shader": {
        "info": {
            "date": "1702682310",
            "description": "2d perspective",
            "flags": 0,
            "hasliked": 0,
            "id": "4flGRn",
            "likes": 9,
            "name": "2d perspective",
            "published": 3,
            "tags": [
                "2d",
                "2dperspective"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 197
        },
        "renderpass": [
            {
                "code": "//por jorge2017a2\n//2d perspective\n//--15-dic-2023-\n//\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S2(d,b) smoothstep(6.0*antialiasing(0.5),b,d)\n\n\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}    \n\nvec3 DrawFigBordev2(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj+0.05,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.05,0.0));\n  return colOut;\n}\n\n///oneshade    \nvec2 Rotate(in vec2 p, in vec2 o, in float r) \n{   float c = cos(r), s = sin(r);\n    return (p - o) * mat2(c, -s, s, c) + o;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nvec3 escalera(vec2 p, vec3 colOut,vec3 colIn ,float z)\n{\n    float df=9999.9;\n    int x, y;\n    int xmax, ymax;\n    xmax=5; ymax=5;\n    float d1;    \n    p=vec2(p.x/z, p.y/z);\n    \n    float tam=0.75;\n    p.x+=5.0;\n    p.y+=4.0;\n    \n    for(y=0;y<ymax;y++)\n    {\n        for(x=0;x<xmax;x++)\n        {\n          d1=sdBox(p+vec2(float(x)*tam+tam*float(x-1),-float(y)*tam-tam*(float(y)) ),vec2(tam));\n          df=min(df, d1);\n        }\n\n    xmax=xmax-1;\n    }\n    colOut= DrawFigBordev2(colIn,colOut, df);\n    return colOut;\n}\n\nvec3 repcuadro(vec2 uv, vec3 col, float pz)\n{   float z=iTime*5.0+pz;\n    z=opRep1D(z, 10.0 );\n    col=escalera(vec2(-10.0-uv.x,3.0-uv.y),col,vec3(1.0,1.0,0.0),(6.9+z)/10.0);\n    col=escalera(vec2(-5.0+ uv.x,4.0-uv.y) ,col,vec3(0.0,0.2,1.0),(7.0+z)/10.0);\n    col=escalera(uv-vec2(5.0,1.0),col,vec3(1.0,0.0,0.0), (7.2+z)/10.0);\n    col=escalera(vec2(-9.0-uv.x,uv.y),col, vec3(0.0,1.0,0.0),(7.3+z)/10.0);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv.xy = vec2(uv.x*2.-1., uv.y*2.-1.);\n    uv-=vec2(0.3,-0.25);\n    float esc=7.0;\n    uv*=esc;\n    vec2 uv0=uv;\n    uv= Rotate(uv, vec2(-2.0,2.0),radians(iTime*5.0)) ;    \n    vec3 col= vec3(0.0,0.0,0.0);\n   \n    col= repcuadro(uv, col,0.0);\n    if(sin(iTime)*3.0>0.0)\n    col= repcuadro(uv, col*0.5,-2.0);\n    \n    col=pow(col,  vec3(0.554545));\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}