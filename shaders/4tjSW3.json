{
    "Shader": {
        "info": {
            "date": "1446906548",
            "description": "A very compact algorithm to draw 3D characters. \n:-D\n",
            "flags": 0,
            "hasliked": 0,
            "id": "4tjSW3",
            "likes": 14,
            "name": "look who's there !",
            "published": 3,
            "tags": [
                "texture",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1394
        },
        "renderpass": [
            {
                "code": "vec4 tex(vec3 V, float d, out float s) {\n    s = step(abs(V.x+=d),.61);\n    V.z *= 6.*sign(d);\n    return 3.* max(texture(iChannel0,V)*s-.2, 0.);\n}\n\nvoid mainImage( out vec4 o, vec2 U )\n{\n    vec3 V = vec3(2.*U/iResolution.y-1.,1) - vec3(.8,-1.8,0);\n    float u = .85,  s1, s2;\n    o  = tex(V,-u, s1)+ tex(V, u, s2)  + (1.-s1-s2)*.82;\n    \n \tV -= o.x * .03*sin(2.*iTime+vec3(0,1.6,1));      // comment for still image\n    o  = tex(V,-u, s1)+ tex(V, u, s2)  + (1.-s1-s2)*.82;   //\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 22,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}