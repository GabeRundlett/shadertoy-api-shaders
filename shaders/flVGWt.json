{
    "Shader": {
        "info": {
            "date": "1638530574",
            "description": "thats boting, i was expectiong more... buuuuut i can still fork and implement proper rules, can be reseted on space now",
            "flags": 48,
            "hasliked": 0,
            "id": "flVGWt",
            "likes": 3,
            "name": "Game of Life aint uv coords",
            "published": 3,
            "tags": [
                "meh"
            ],
            "usePreview": 0,
            "username": "Arrangemonk",
            "viewed": 416
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n      vec3 gol1 = texture(iChannel0,uv).xyz;\n      vec3 gol2 = texture(iChannel0,uv + 0.254).xyz;\n      vec4 gol = vec4(gol1 + gol2,1.)*.5;\n      //fragColor = gol;\n      fragColor = texture(iChannel1,uv*0.1 + 0.25* gol.z *gol.xy);\n  }",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv = 2. * fragCoord/iResolution.xx;\n    if(iFrame < 10 || texelFetch(iChannel2, ivec2(32,0),0).x > 0.){\n    fragColor = texture(iChannel0,uv);\n    }\n    else\n    {\n     fragColor = texture(iChannel1,fragCoord/iResolution.xy);\n     \n     vec3 diff = vec3(1,0,-1)/iResolution.x;\n     \n     vec4 sum = texture(iChannel1,fragCoord/iResolution.xy - diff.xx);\n     sum += texture(iChannel1,fragCoord/iResolution.xy - diff.xy);\n     sum += texture(iChannel1,fragCoord/iResolution.xy - diff.xz);\n     sum += texture(iChannel1,fragCoord/iResolution.xy - diff.yx);\n     sum += texture(iChannel1,fragCoord/iResolution.xy - diff.yz);\n     sum += texture(iChannel1,fragCoord/iResolution.xy - diff.zx);\n     sum += texture(iChannel1,fragCoord/iResolution.xy - diff.zy);\n     sum += texture(iChannel1,fragCoord/iResolution.xy - diff.zz);\n     \n     vec4 result = texture(iChannel1,fragCoord/iResolution.xy);\n     float amount = 0.01;\n     float minl = 2.;\n     float maxl = 3.;\n     \n     if(sum.z < minl || sum.y > maxl)\n         fragColor.x =  max(0.,result.x -amount);\n     else \n         fragColor.x = min(1.,result.x + amount);\n         \n      if(sum.x <minl || sum.z >maxl)\n         fragColor.y =  max(0.,result.y -amount);\n     else \n         fragColor.y = min(1.,result.y + amount);\n         \n     if(sum.y < minl || sum.x > maxl)\n         fragColor.z =  max(0.,result.z -amount);\n     else \n         fragColor.z = min(1.,result.z + amount);\n\n     \n    }\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}