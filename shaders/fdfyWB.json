{
    "Shader": {
        "info": {
            "date": "1642663037",
            "description": "2D Pulse in 3D",
            "flags": 0,
            "hasliked": 0,
            "id": "fdfyWB",
            "likes": 7,
            "name": "Rubber surface",
            "published": 3,
            "tags": [
                "2d",
                "3d"
            ],
            "usePreview": 0,
            "username": "ersh",
            "viewed": 373
        },
        "renderpass": [
            {
                "code": "//https://graphtoy.com/?f1(x,t)=sin(x+t)*sin(x/5-t*4)&v1=false&f2(x,t)=f1(x/2,t/2)*1.3-f1(x-1,t-5)&v2=false&f3(x,t)=f2(x/2,t/2)*1.3-f1(x-1,t-5)&v3=false&f4(x,t)=f3(x,t)*(0.5+f1(x-3,t*3-5)/2)&v4=true&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,21.258732000000105\nfloat f1(float x, float t) { return sin(x+t)*sin(x/5.-t*4.); }\nfloat f2(float x, float t) { return f1(x/2.,t/2.)*1.3-f1(x-1.,t-5.); }\nfloat f3(float x, float t) { return f2(x/2.,t/2.)*1.3-f1(x-1.,t-5.); }\nfloat f4(float x, float t) { return f3(x,t)*(0.5+f1(x/3.4-3.,t*2.-5.)/2.); }\n\nvec3 col(float x, float side) {\n  return vec3(clamp(x/2.+0.5,0.,1.), side, clamp(0.5-x/2.,0.,1.));\n}\n\nfloat h(vec2 p, float t) {\n    return\n        f4(p.x, t) + f4(p.y + 42.123, t/1.321+31.32) +\n        f4(p.x, t) * f4(p.y + 42.123, t/1.321+31.32)/3.;\n}\n\n\n#define H  h(uvu.xz*10., iTime)/15.\n#define INTERP_MIX(PREV, TARGET, CUR)   (TARGET-PREV)/(CUR-PREV)\n#define MAXZ   3.\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    vec3 uvu = vec3(I/max(iResolution.x, iResolution.y), 0.) - vec3(0, 0.15, 0);\n    float z;\n    vec3 uvuprev = uvu;\n    float zprev = H;\n    float sgn = zprev < uvu.y ? 1. : -1.;\n    for (uvu.z = 0.01; uvu.z < MAXZ; uvu.z += 0.01+uvu.z/100.,uvu.y-=0.0008,uvu.x+=0.008) {\n        z = H;\n        if (sgn*z > sgn*uvu.y) {\n            float interp = INTERP_MIX(zprev, uvuprev.y, z);\n            uvu = mix(uvuprev, uvu, interp);\n            //z = uvu.y;// = mix(zprev, z, interp);\n            z = H;\n\n            float a = atan((z - h((uvu.xz-vec2(-0.001,0.0005))*10., iTime)/15.) / 0.0014);\n\n            vec3 c = col(z*10., (-sgn+1.)/4.) * (1.-(1. - sgn)/3.) + sgn*(a*2./3.1415926);\n\n            // mesh\n            //if (mod(uvu.x*10., 1.) < 0.03 || mod(uvu.z*MAXZ/10., MAXZ/100.) < MAXZ/1000.) c = vec3(0.);\n            // angled mesh\n            //if (mod(uvu.x*10. + uvu.z*MAXZ*10., 5.) < 0.3 || mod(uvu.x*10. - uvu.z*MAXZ*10., 5.) < 0.3) c = vec3(sgn);\n\n            O = vec4(c*(1.-uvu.z/MAXZ), 0.);\n            return;\n        }\n        zprev = z; uvuprev = uvu;\n    }\n    O = vec4(0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}