{
    "Shader": {
        "info": {
            "date": "1610735770",
            "description": "fff",
            "flags": 0,
            "hasliked": 0,
            "id": "tsKXzW",
            "likes": 1,
            "name": "mandelbrot glsl",
            "published": 3,
            "tags": [
                "mandelbrot"
            ],
            "usePreview": 0,
            "username": "Angramme",
            "viewed": 480
        },
        "renderpass": [
            {
                "code": "#define IT 800. //iterations\n\nfloat log10(float x){\n    //log10(x) = log(x) / log(10) = (1 / log(10)) * log(x)\n    const float d = 1. / log(10.);\n    return d * log(x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.x;\n    \n    float zoom = pow(iTime*.1, 5.);\n    \n    uv *= 4.;\n    uv /= 1. + zoom;\n    uv -= vec2(.7394, -.24215);\n    \n    float cr = uv.x;\n    float ci = uv.y;\n    \n    \n    /*\n    uv *= 4.5;\n    uv += vec2(0., .7);\n    \n    float cr = -uv.y;\n    float ci = uv.x;\n    */\n    \n    vec3 color = vec3(0);\n    \n\tfloat zr = 0.;\n    float zi = 0.;\n    \n    //last escaped complex module value\n    float zn_abs = 0.;\n    \n    float n = 0.;\n    while(n < IT){\n        float fr = zr*zr - zi*zi + cr;\n        float fi = 2.*zr*zi + ci;\n        \n        zr = fr;\n        zi = fi;\n        \n        if(abs(fr)+abs(fi) > 500.){\n            zn_abs = sqrt(fr*fr + fi*fi);\n            break;\n        }\n        \n        n++;\n    }\n    \n    if(n == IT){\n    \t//color += .5;\n    }else{\n    \t//color += mix(vec3(0,0,0), vec3(0,2,2), n / IT *mix(8., 1., iTime*.02));\n        //color += vec3(0, 1, 1) * log10(n) * .4;\n        //color += vec3(0, 1, 1) * pow(n/IT, .5f);\n        \n        //color += 1.;\n   \n        //color += n/IT*20.;\n        \n        //smooth n\n        float ns = n + 1. - log(log(zn_abs))/log(2.);\n        //color += fract(ns*10./IT)*3.;\n        color += hsv2rgb(vec3(fract(ns*10./IT)+3.7 +iTime*.03, .7, 1.));\n    }\n   \t\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}