{
    "Shader": {
        "info": {
            "date": "1573774474",
            "description": "Good help from tutorial Art of Code... my first shader.",
            "flags": 0,
            "hasliked": 0,
            "id": "tdyXDz",
            "likes": 1,
            "name": "Ad Vitellionem Paralipomena",
            "published": 3,
            "tags": [
                "circle"
            ],
            "usePreview": 0,
            "username": "blauwmaan",
            "viewed": 294
        },
        "renderpass": [
            {
                "code": "float Circle(vec2 uv, vec2 p, float r, float blur) {\n    float d = length(uv-p);\n    float c = smoothstep(r, r-blur, d);\n    \n    return c;\n}\n\n\nvec2 random (vec2 p) {\n  vec3 a = fract(p.xyx*vec3(123.34, 234.34, 345.65));\n    a += dot(a, a+34.45);\n    return fract(vec2(a.x*a.y, a.y*a.z));\n                 \n               \n}\n\n                 \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n   \n    float m = 0.;\n    float t = iTime;\n  \n    \n    float minDist = 1.;\n    float cellSet = 0.;\n     vec3 col = vec3(0);\n   \n        for(float i=0.; i<100.; i++) {\n            vec2 n = random(vec2(i));\n            vec2 p = sin(n*t)*1.5;\n\n            float d = length(uv-p);\n            m += smoothstep(.05, .03, d);\n\n             if(d<minDist) {\n                 minDist = d;\n                 cellSet = i;\n\n             }\n            col = vec3(minDist);\n        \t}\n    \n       \n \t\n    col += Circle(uv, vec2(0.4*sin(t), -0.1), .4, 0.04);\n    col -= Circle(uv, vec2(.1*sin(2.*t), 0.1), .1, 0.01);\n    col -= Circle(uv, vec2(.3*sin(t), 0.1), .1, 0.15);\n    col -= Circle(uv, vec2(.3*sin(t), 0.), .1, 0.1);\n    col -= Circle(uv, vec2(.3*sin(t), -.1), .1, 0.1);\n    col -= Circle(uv, vec2(.3*sin(t), -.2), .1, 0.15);\n    col -= Circle(uv, vec2(.9, 0.2*sin(2.+t)), .1, 0.01);\n    col -= Circle(uv, vec2(1, 0.2*sin(5.+t)), .1, 0.01);\n    col -= Circle(uv, vec2(1.1, 0.2*sin(7.+t)), .1, 0.01);\n    col += Circle(uv, vec2(tan(t)*-.5, -0.5), sin(t)*.1, 0.01);\n    col += Circle(uv, vec2(cos(t)*-.7, 0.7), .1, 0.01);\n  //col += Circle(uv, vec2(cos(t)*-.7, 0.0), cos(t*sin(tan(t*2.))+.1), 0.01);\n    \n    \n    \n    \n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}