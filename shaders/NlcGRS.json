{
    "Shader": {
        "info": {
            "date": "1636214258",
            "description": "each pixel is connect randomly to another pixel within a given radius. ( see buffA).\nid circulates through connections. min id is kept so as to visualize cycles.\n\nin this variant: just 1 connection, very small radius, but network is renewed every second.",
            "flags": 32,
            "hasliked": 0,
            "id": "NlcGRS",
            "likes": 5,
            "name": "percolation in random network 2",
            "published": 3,
            "tags": [
                "graph",
                "network",
                "percolation",
                "epidemic",
                "epidemiology"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 241
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/sld3D7\n\n\n#define hue(v)  ( .6 + .6 * cos( 6.3*(v)  + vec4(0,23,21,0)  ) )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = T(U/1.);\n    O = hue(O.x);\n // O = vec4(O.z/10.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define hash(p) fract(sin((p-sin(floor(iTime)))*mat2(127.1,311.7, 269.5,183.3)) *43758.5453123)\n\nfloat radius = .01;\n                                     // --- random link within radius, seed s.\n#define link(s) T (mod( U + radius*R*(hash(s+U)*2.-1.) , R ) ).x\n\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    U -= .5;\n    if (iFrame==0) {                 // --- initialization\n        O.x = U.x + U.y*R.x;         // node label: start with its id\n        return;\n    }\n                                     // --- propagation along the random network\n    O = T(U);                        // previous step\n    O.y = O.x;                       // keep previous value\n\n  \n    O.x = min(O.x, link() );         // propagate from random link. label = min(id)\n   \n    O.z = O.x==O.y ? O.z+1. : 0.;    // convergence detector\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define T(U) texelFetch( iChannel0, ivec2(U), 0 )",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}