{
    "Shader": {
        "info": {
            "date": "1534910073",
            "description": "My attempt to make a video wall effect",
            "flags": 0,
            "hasliked": 0,
            "id": "llKcRR",
            "likes": 1,
            "name": "Video Wall",
            "published": 3,
            "tags": [
                "filters",
                "vfx"
            ],
            "usePreview": 0,
            "username": "chao_mu",
            "viewed": 705
        },
        "renderpass": [
            {
                "code": "#define BOXES 10.\n#define MIN_BRIGHTNESS 0.3\n\n// Book of Shaders                                                                                                                                                                                                                                                              \nfloat rand(vec2 st) {                                                                                                                                                                                                                                                           \n    return fract(sin(dot(st.xy,                                                                                                                                                                                                                                                 \n                    vec2(12.9898,78.233)))* 43758.5453123);                                                                                                                                                                                                                     \n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 px = uv * BOXES;\n    \n    // Decide the shade of each panel\n    float shade = clamp(MIN_BRIGHTNESS + rand(floor(px + 0.5)), 0., 1.);\n    \n    // Calculate the grid\n    float g = smoothstep(0.4, 0.49, distance(floor(px.x + 0.5), px.x))\n        + smoothstep(0.4, 0.49, distance(floor(px.y + 0.5), px.y));\n     g = 1. - clamp(g, 0., 1.);\n        \n    vec3 col = texture(iChannel0, uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(g * shade * col, 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}