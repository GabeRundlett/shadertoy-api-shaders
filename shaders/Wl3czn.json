{
    "Shader": {
        "info": {
            "date": "1608321976",
            "description": "potato",
            "flags": 0,
            "hasliked": 0,
            "id": "Wl3czn",
            "likes": 9,
            "name": "day 365",
            "published": 3,
            "tags": [
                "mdtmjvm"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 346
        },
        "renderpass": [
            {
                "code": "// I'VE LOST COUNT LOL, so I skipped to 365 which is the correct number! \n// tune in tomorrow for birthday stream at https://www.twitch.tv/wwrighter\n\nfloat df;\nfloat rep = 2.75;\nfloat sz;\n\n#define pi acos(-1.)\n\n#define pump(g,a) (floor(g) + pow(fract(g),a))\n#define xor(a,b,c) min(max(a,-(b)), max(-(a) + c,b))\n\nmat2 rot(float angle){\n    return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nfloat sdCirc (vec2 uv, float s){\n    return length(uv) - s;\n}\n\nfloat sdRect (vec2 uv, vec2 s){\n    uv = abs(uv)- s;\n    return max(uv.x,uv.y);\n}\nfloat sdRect (vec2 uv, float s){\n    uv = abs(uv)- s;\n    return max(uv.x,uv.y);\n}\nfloat sdCube (vec3 uv, float s){\n    \n    uv = abs(uv)- s;\n    uv.xz *= rot(0.);\n    return max(uv.x,max(uv.y,uv.z));\n}\n\nfloat sdSphere(vec3 p, float s){return length(p) -s;}\n\n//float sdCube(vec3 p, float s){return length(p) -s;\n\nfloat get(vec2 uv, vec2 id, float T){\n    //float dc = sdCirc(uv, sz*(0.1 + .1*sin(iTime + length(id))));\n    \n    T *= 0.1;\n    //d = 10e5;\n    //#define m(j) (sin(j + iTime+ id.x*1.*sin(iTime+id)*0.1  + length(id)*1.2 + iTime*.2) + sin(length(id))*1.)\n    #define m (sin(length(id/sz)*0.2 + T*11.)*0.5)\n\n    vec3 p = vec3(uv,0.1 + m*0.1);\n    p.x += m;\n    \n    \n    p.yz *= rot(-pi*(0.25 + pow(m,2.)*0.));\n    p.xy *= rot(pi*0.25);\n\n    //p.xy += m;\n    float dc = sdCube (p,sz*(0.1 + iMouse.x/iResolution.x*0.05 + pow(m,2.)*0.4)*2.);//*(0.9)*(1.-m));\n    \n    float d = abs(dc - 0.1*(1.-m));\n    //d = abs(d);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y;\n    vec2 guv = uv;\n    uv *= 5.  ;\n    df = dFdx(uv.x);\n    sz = 1./rep;\n    \n    vec3 col = vec3(0);    \n    vec2 id = floor(uv*rep);\n    \n    uv = mod(uv,sz) - sz*0.5;\n    float d = 10e6;\n    #define pal(a,b,c,d,e) (a + (b)*sin((c)*(d) + (e)))\n     \n    float chrabs = 9.;\n    for(float chrab = 0.; chrab < chrabs; chrab++){\n        float overstep = 3.*2.*1.;\n        float nd = 10e5;\n        for(float i = 0.; i < overstep*overstep; i++){\n            vec2 idx = vec2(\n                mod( i,overstep)  - 0.5*overstep , \n                floor( (i)/overstep) - 0.5*overstep\n                );\n            nd = min(nd, get(uv - idx*sz, id + idx, iTime - 0.4*chrab/chrabs) - 0.04*chrab/chrabs);\n\n        }\n        \n        nd = max(nd,-d);\n        vec3 c = pal(.5,0.5,vec3(3,2,1. + sin(iTime)),1. ,41. + 6.*chrab/chrabs + iTime + length(guv)*0.4);\n        col = mix(col,c*(1.4-chrab/chrabs*1.64),smoothstep(df,0.,nd ));\n        \n    \n    }\n    col = smoothstep(0.,1.,col*2.);\n    col = pow(col,vec3(0.45454));\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}