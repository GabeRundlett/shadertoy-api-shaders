{
    "Shader": {
        "info": {
            "date": "1640763818",
            "description": "Simulated smoke",
            "flags": 0,
            "hasliked": 0,
            "id": "NtySWm",
            "likes": 5,
            "name": "Simulated smoke",
            "published": 3,
            "tags": [
                "smoke"
            ],
            "usePreview": 0,
            "username": "moshuying",
            "viewed": 559
        },
        "renderpass": [
            {
                "code": "vec3 Effect(float speed, vec2 uv, float time)\n{\n    float t = mod(time*speed,60.0);\n    float rt =0.01*sin(t*0.45);\n    mat2 m1 = mat2(cos(rt),-sin(rt),-sin(rt),cos(rt));\n    vec2 uva=uv*m1;\n    float irt = 0.005* cos(t*0.05);\n    mat2 m2 = mat2(sin(irt),cos(irt),-cos(irt),sin(irt));\n    for(int i=1;i<40;i+=1)\n    {   \n        float it = float(i);\n        uva*=(m2);\n        uva.y+=-1.0+(0.6/it) * cos(t + it*uva.x + 0.5*it)\n        *float(mod(it,2.0)==0.0);\n        uva.x+=1.0+(0.5/it) * cos(t + it*uva.y + 0.5*(it+15.0));\n    }\n    //Intensity range from 0 to n;\n    float n = 0.5;\n    float r = n + n * sin(4.0*uva.x+t);\n    float gb = n + n * sin(3.0*uva.y);\n    return vec3(r,gb*0.8*r,gb*r);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(Effect(.02,uv,iTime),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}