{
    "Shader": {
        "info": {
            "date": "1591001239",
            "description": "thx Inigo Quilez",
            "flags": 0,
            "hasliked": 0,
            "id": "3s2fD3",
            "likes": 4,
            "name": "Mouse head",
            "published": 3,
            "tags": [
                "raymarching"
            ],
            "usePreview": 0,
            "username": "deni_de",
            "viewed": 364
        },
        "renderpass": [
            {
                "code": "float mouse(in vec3 pos)\n{\n    float timer = fract(iTime);\n    vec3 posEarL = vec3(pos.x - 0.27 ,pos.y - 0.35,pos.z / 0.5 - 0.1);\n    vec3 posEarR = vec3(pos.x + 0.27 ,pos.y - 0.35,pos.z / 0.5 - 0.1);\n    vec3 pEyeL = vec3(pos.x - 0.1 ,pos.y - 0.17,pos.z + 0.12);\n    vec3 pEyeR = vec3(pos.x + 0.1 ,pos.y - 0.17,pos.z + 0.12);\n    vec3 posNouse = vec3(pos.x ,pos.y - 0.11,pos.z + 0.27);\n    vec3 posNouseTick = vec3(pos.x ,pos.y - 0.135,pos.z * 0.9 + 0.30);\n    vec3 posMouth = vec3(pos.x /0.5,pos.y / 0.2 +0.25,pos.z+0.25);\n    \n    float head = length(pos) - 0.25;\n    float earR = length(posEarR) - 0.11;\n    float earRBool = length(vec3(pos.x + 0.27 ,pos.y - 0.35,pos.z / 0.5 + 0.1)) - 0.15;\n    float earLBool = length(vec3(pos.x - 0.27 ,pos.y - 0.35,pos.z / 0.5 + 0.1)) - 0.15;\n    float earL = length(posEarL) - 0.11;\n    float nouse = length(posNouse) - 0.05;\n    float eyeR = length(pEyeR) - 0.07;\n    float eyeL = length(pEyeL) - 0.07;\n    float nouseT = length(posNouseTick) - 0.05;\n    float mouth = length(posMouth) - 0.21;\n    \n    float result = head  * earR * earL * nouse;\n    result = min(result,eyeR * eyeL);\n    result = max(result,-earRBool * 0.1);\n    result = max(result,-earLBool * 0.1);\n    result = min (result,nouseT);\n    result = max (result,-mouth * .1);\n    return result;\n}\nfloat map(in vec3 pos)\n{\n    \n    float object = mouse(pos);\n    float plane = pos.y - -0.25;\n    return min(object,plane);\n}\nvec3 cNormal(in vec3 pos)\n{\n    vec2 e = vec2(0.0001,0.0);\n    return normalize( vec3(map(pos+e.xyy)-map(pos-e.xyy),map(pos+e.yxy)-map(pos-e.yxy),map(pos+e.yyx)-map(pos-e.yyx)));\n}\nfloat Raycast(in vec3 ro, vec3 rd)\n{\n    float t = 0.0;\n    for(int i = 0; i <300; i++)\n    {\n        vec3 pos = ro + t * rd;\n        float h = map(pos);\n        if(h <0.001)break;\n        t += h;\n        if(t > 20.0)break;\n    }\n    if(t>20.0) t=-1.0;\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0 * fragCoord - iResolution.xy)/iResolution.y;\n    \n    float an = iTime * 0.7;\n    \n    vec3 ro = vec3(1.0 * sin(an),0.3,1.0 * cos(an));\n    vec3 ta = vec3(0.0);\n    \n    vec3 w = normalize(ta-ro);\n    vec3 u = normalize(cross(w,vec3(0.0,1.0,0.0)));\n    vec3 v = normalize(cross(u,w));\n    \n    vec3 rd = normalize(p.x * u + p.y *v + 1.5 * w);\n\n    vec3 color = vec3(0.6,0.7,0.9) - 0.5 * rd.y;\n    color = mix(color,vec3(0.9,0.95,1.2),exp(-10.0*rd.y));\n    \n    float a = Raycast(ro,rd);\n    if(a >0.0)\n    {\n        vec3 pos = ro + a*rd;\n        vec3 norm = cNormal(pos);\n        \n        vec3 ctrl = vec3(0.21,0.21,0.21);\n\n        \n        vec3 sunDir = normalize(vec3(1.5,2.0,-1.0));\n        float shadow = step(Raycast(pos+ norm*0.001,sunDir),0.0);\n        float diff = clamp(dot(norm,sunDir),0.0,1.0);\n        float sky = clamp(0.5 + 0.5 * dot(norm,vec3(0.0,1.0,0.0)),0.0,1.0);\n        float bounce = clamp(0.5 + 0.5 * dot(norm,vec3(0.0,-1.0,0.0)),0.0,1.0);\n        \n        color = ctrl * vec3(3.0,1.5,0.25) * diff * shadow;\n        color += ctrl * vec3(0.6,0.7,0.9) * sky;\n        color += ctrl * vec3(1.1,0.5,0.15) * bounce;\n        \n        color *= 2.0;\n    }\n    \n    //exposure\n    color = pow(color,vec3(0.53));\n\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}