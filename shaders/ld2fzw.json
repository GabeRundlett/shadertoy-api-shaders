{
    "Shader": {
        "info": {
            "date": "1499957307",
            "description": "Julia, Robotic Arm, Colorful",
            "flags": 0,
            "hasliked": 0,
            "id": "ld2fzw",
            "likes": 2,
            "name": "Julia - Robotic Arm",
            "published": 3,
            "tags": [
                "julia",
                "colorful",
                "roboticarm"
            ],
            "usePreview": 0,
            "username": "vicyang",
            "viewed": 852
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 tZ;\n    vec2 Z = (fragCoord.xy - iResolution.xy/2.0)/( iResolution.x/11.0 );\n\n    vec2 C = vec2(sin(iTime/2.0), cos(iTime/2.0));\n    vec4 color;\n    \n    int iterations = 0;\n    int max_iterations = 12;\n\n    float rate;\n    float threshold_squared = 100.0;\n\n    while ( (iterations < max_iterations) && (dot(Z, Z) < threshold_squared) )\n    {\n        tZ.x = Z.x * Z.x - Z.y * Z.y + C.x;\n        tZ.y = Z.x * Z.y * 1.0 + C.y;\n        Z = tZ;\n        iterations++;\n    }\n\n    rate =  float(iterations)/float(max_iterations);\n    if ( rate > 0.9 )\n    {\n        //color = vec4(0.1, 0.1, 0.1, 1.0);\n        color = vec4( cos(Z.x), sin(Z.y), 0.5, 1.0) * 0.8;\n    }\n    else\n    {\n        color = vec4( rate, exp(Z.x), rate, 1.0);\n        //color = vec4( sin(rate), cos(1.0-rate), exp(rate), 1.0);\n    }\n    \n\tfragColor = color;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}