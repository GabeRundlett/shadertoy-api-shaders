{
    "Shader": {
        "info": {
            "date": "1587155628",
            "description": "Just plotting a sine function.",
            "flags": 0,
            "hasliked": 0,
            "id": "tsBcRd",
            "likes": 1,
            "name": "n4uj_GLPlotter",
            "published": 3,
            "tags": [
                "shader",
                "graph",
                "plot"
            ],
            "usePreview": 0,
            "username": "n4uj",
            "viewed": 425
        },
        "renderpass": [
            {
                "code": "#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n\n\nfloat line = 0.1;\n\nfloat smin( float d1, float d2)\n{\n\tfloat k = 0.6521; k = 1.1;\n\tfloat h = clamp( 0.5+0.5*(d2-d1)/k, 0.0, 1.0 );\n\treturn mix( d2, d1, h ) - k*h*(1.0-h);\n}\n\nfloat f(vec2 uv)\n{\n\tfloat x = uv.x;\n\tfloat y = uv.y;\n    float f1 = cos((iTime + x)) - y;\n    float f2 = sin(iTime + x)*abs(cos(iTime)) - y;\n    //return smin(f1, f2);\n    return f1;\n}\n\nvec2 df( in vec2 x )\n\n{\n\tvec2 h = vec2( 0.01, 0.001 );\n\treturn vec2( f(x+h.xy) - f(x-h.xy), f(x+h.yx) - f(x-h.yx) )/(2.0*h.x);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tvec2 uv = fragCoord/iResolution.xy * vec2(10.0f, 10.0f);\n    uv += vec2(0.0, -4.0);\n\tfloat col = float (abs(f(uv))/length(df(uv)));\n\tcol = abs(f(uv))/sqrt(1.0 + pow(df(uv).x, 2.0));\n\tfragColor = vec4(smoothstep(0.98* line, line, col));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}