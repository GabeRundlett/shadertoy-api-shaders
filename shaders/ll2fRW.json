{
    "Shader": {
        "info": {
            "date": "1514932612",
            "description": "Tribute to a game called Engare. Sometimes you get very disappointing shapes, the values are not balanced. I some how had problems with setting up the uvs for the buffer and the main maybe someone has an idea there.",
            "flags": 32,
            "hasliked": 0,
            "id": "ll2fRW",
            "likes": 5,
            "name": "Islamic Patterns",
            "published": 3,
            "tags": [
                "shader",
                "multipass",
                "islamicpatterns"
            ],
            "usePreview": 0,
            "username": "ircss",
            "viewed": 814
        },
        "renderpass": [
            {
                "code": "#define DATA_BUFFER iChannel0\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float x =  ((fragCoord.x - .25* iResolution.x) /  iResolution.y); \n    float y =  ((fragCoord.y ) /  iResolution.y); \n\tvec2 uv = vec2( x,y); \n\n    fragColor = texture(DATA_BUFFER,uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define BUFFER iChannel0\n#define BUFF_RES iChannelResolution[0].xy\n#define M_PI 3.1415926535897932384626433832795;\n\n\n// Writes all components of a texel (at once).\nvoid plotAPixel( inout vec4 buffer, in vec4 pixelColor,\n                in vec2 toDrawPos, in vec2 currentFragCord, float smoothness, float thickness)\n{\n    float distanceToPixel = distance( toDrawPos, currentFragCord);\n    float lerpFactor = smoothstep(thickness, thickness + smoothness, distanceToPixel);\n    buffer = mix( pixelColor, buffer, lerpFactor );\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat randomInRange(in float lower, in float higher, in float period, in float seedDifference){\n     float ranVal = rand (vec2(seedDifference + floor(iTime / (period+1.0))));\n     return lower + ranVal * (higher-lower);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    float period = 20.0;\n    float usedForResetingBuffer = 1.0 - step(period, mod( iTime, period +1.0 ));\n    \n    // Trying to compensate for aspect rtion in the uv, some really wierd stuff are happening here,\n    // I dont really know whats going on. \n    \n    vec2 uv = (fragCoord / BUFF_RES);\n    \n    vec4 buff = texture(BUFFER, uv);\n    \n    \n    // Parameteres\n    vec2 center = vec2(0.5, 0.5);\n    \n    //Circle 1\n    float radiusCircle1 = randomInRange(0.0, 0.3, period, 150.0);\n    float periodCircle1= 1.0/ period *2.0* M_PI;\n    vec2 circleOneVec = vec2(sin(iTime * periodCircle1), cos(iTime * periodCircle1));\n    \n    //Circle 2\n    float radiusCircle2 = randomInRange(0.0, 0.1, period, 30.0);\n    float periodCircle2= periodCircle1*floor(randomInRange(0.0, 30.0, period, 256.0));\n    vec2 circleTwoVec = vec2(sin(iTime *periodCircle2), cos(iTime *periodCircle2));\n    \n    //Circle 3\n    float radiusCircle3 = randomInRange(0.0, 0.2, period, 2.0);\n    float periodCircle3= periodCircle1*floor(randomInRange(0.0, 6.0, period, 325.0));\n    vec2 circleThreeVec = vec2(sin(iTime *periodCircle3), cos(iTime *periodCircle3));\n    \n    \n    \n    vec2 pos = center + (radiusCircle1 * circleOneVec) + (radiusCircle2 * circleTwoVec)\n        + (radiusCircle3 * circleThreeVec); \n   \t \n    \n    \n    float distanceToCenter = pow( distance(uv, center) *5.0, 2.0);\n    vec4 lineColor = vec4 (1.0- distanceToCenter, 0.8, distanceToCenter, 1.0);\n    \n    \n    float compareToMinScreen = 400.0 /  iResolution.y;\n    plotAPixel(buff, lineColor, pos, uv, 0.011* compareToMinScreen, 0.0007 * compareToMinScreen);\n    \n    //clreaing the buffer\n    buff = buff * usedForResetingBuffer;\n    \n    \n    fragColor = buff;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}