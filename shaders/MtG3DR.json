{
    "Shader": {
        "info": {
            "date": "1474110333",
            "description": "Click mouse to move center.",
            "flags": 0,
            "hasliked": 0,
            "id": "MtG3DR",
            "likes": 17,
            "name": "Color star field",
            "published": 3,
            "tags": [
                "3d"
            ],
            "usePreview": 0,
            "username": "frutbunn",
            "viewed": 1160
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265358979323846\n#define TIMER(sec, min, max) (((mod(iTime, (sec)) * ((max) - (min))) / (sec)) + (min))\nmat2 mm2(in float a) { float c = cos(a), s = sin(a); return mat2(c, s, -s, c); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy - vec2(.5);\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 mouse = iMouse.xy;    \n    if (mouse != vec2(0.)) {\n        mouse = vec2(mouse.x/iResolution.x -.5, mouse.y/iResolution.y -.5);\n    \tmouse.x *= iResolution.x/iResolution.y;\n    }\n        \n    vec3 color = vec3(0.);\n    \n    vec3 ray = vec3(uv-mouse, .75);\n    ray.xy *= mm2(TIMER(15. ,0., -PI*2.));\n    vec3 s = ray/max(abs(ray.x), abs(ray.y))*.4;\n\n    vec3 p = s;\n    for(int i=0; i<5; i++) {\n        vec2 nos1 = vec2(floor(p.xy*30.334) );\n        const vec2 nos2 = vec2(12.9898, 78.233);\n        const float nos3 = 43758.5453;\n\n        vec3 nc = vec3( fract(sin(dot(nos1, nos2))*nos3), fract(sin(dot(nos1, nos2*.5))*nos3), fract(sin(dot(nos1, nos2*.25))*nos3) );\n        float n = fract(sin(dot(nos1, nos2*2.) )*nos3);       \n        float z = fract(cos(n)-sin(n)-iTime*.2);\n     \n        float d = (1.-abs(30.*z-p.z) );\n\n        float sz = 1./s.z;\n        vec3 c = vec3(sin( max(0., d*(sz*nc.r)) ), sin( max(0., d*(sz*nc.g)) ), sin( max(0., d*(sz*nc.b)) ) );\n\n        color += (1.-z)*c;\n        p += s;\n    }    \n    \n    fragColor = vec4( max(vec3(0.), min(vec3(1.), color) ), 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}