{
    "Shader": {
        "info": {
            "date": "1688662106",
            "description": "Found this pattern by accident and thought it looked cool :)\nGolfing always welcome",
            "flags": 0,
            "hasliked": 0,
            "id": "cdffDH",
            "likes": 18,
            "name": "Pixel Tiles [217 Chars]",
            "published": 3,
            "tags": [
                "pixelart",
                "tweet",
                "onetweet",
                "golf",
                "250chars"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 286
        },
        "renderpass": [
            {
                "code": "// -9  thanks to kishimisu\n// -11 thanks to iq\n// -3  thanks to Xor\nvoid mainImage( out vec4 O, vec2 I )\n{\n    float b, i;\n\n    for(vec2 u = I/iResolution.y + .1*iTime; \n        i++<10.; \n        u += .1+26.*floor(.7*iTime))\n        b = .5*(b + fract(dot(atan(I=floor(9.*u)),I)));\n     \n    O = .7 * sqrt(1. - cos(19.*b) + cos(69.*(b-=b*b)*b + vec4(6,1,2,3)) );\n}\n\n// Original [240]\n/*\nvoid mainImage( out vec4 O, vec2 I )\n{\n    float b,\n          i,\n          t = iTime,\n          o = .05 + 13. * floor(.7 * t);\n          \n    vec2 u = .5 * I/iResolution.y + .05 * t; \n   \n    for (i; i++ < 10.; u += o)\n        b = .5*b +.5 *\n        fract(dot(atan(I = floor(18. * u)), I));\n     \n    O = .7 * sqrt(1. - cos(19.*b)\n                     + cos(69.*b*b*(1.-b)*(1.-b)+vec3(6,1,2))\n                 ).xyzx;\n}\n//*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}