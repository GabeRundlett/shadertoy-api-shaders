{
    "Shader": {
        "info": {
            "date": "1724964946",
            "description": "smin and kifs from NuSan Video https://www.youtube.com/watch?v=2te8heN4CHo&t=701s",
            "flags": 32,
            "hasliked": 0,
            "id": "lcSfDW",
            "likes": 21,
            "name": "大龙猫 - Kaiju all",
            "published": 3,
            "tags": [
                "blob"
            ],
            "usePreview": 0,
            "username": "totetmatt",
            "viewed": 180
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n  vec4 pframe = texture(iChannel0,fragCoord.xy/iResolution.xy);\n\n    // Output to screen\n    fragColor = vec4(min(pframe.xyz/pframe.a,vec3(1.,1.,1.)),1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "mat3 orth(vec3 p){\n    vec3 z = normalize(p);\n    vec3 x = vec3(z.z,0.,-z.x);\n    return mat3(x,cross(z,x),z);\n}\nvec3 erot(vec3 p,vec3 ax,float t){return mix(dot(ax,p)*ax,p,cos(t))+cross(ax,p)*sin(t);}\nvec3 smin3(vec3 a,vec3 b,float h){\n    vec3 k = clamp((a-b)/h*.5+.5,0.,1.);\n    return mix(a,b,k)-k*(1.-k)*h;\n}\nfloat smin(float a,float b,float h){\n    float k = clamp((a-b)/h*.5+.5,0.,1.);\n    return mix(a,b,k)-k*(1.-k)*h;\n}\nvec3 pcg3d(vec3 p){\n    uvec3 q = floatBitsToUint(p)*1234567890u+12345678u;\n    q.x+=q.y*q.z;q.y+=q.x*q.z;q.z+=q.y*q.x;\n    q^=q>>16u;\n    q.x+=q.y*q.z;q.y+=q.x*q.z;q.z+=q.y*q.x;\n    return vec3(q)/float(-1U);\n}\nvec3 kifs(vec3 p,float t,float z){\n    float s = 5.;\n    for(int i=0;i<3;i++){\n        float t2 = t +float(i);\n        p = erot(p,normalize(vec3(1,-.0,.0)),t2*.785);\n        p = smin3(p,-p,-2.0)-step(.5,z);\n        p.xz = p.z>p.x ? p.zx:p.xz;\n        p-=s;\n        s*=.3;\n    }\n    return p;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord.xy -.5* iResolution.xy)/iResolution.y;\n\n    vec3 rnd = pcg3d(vec3((uv.xyy*50.)));\nvec3 col = vec3(0.);\n    vec3 ro=vec3(0.,0.,-50.),rt=vec3(0.);\n    ro=erot(ro,normalize(vec3(0.,1.,0)),iTime);\n    vec3 rd = orth(rt-ro)*normalize(vec3(uv,1));\n\n    for(float i=0.,e=0.,g=0.;i++<99.;){\n    \n        vec3 p = ro+rd*g;\n        float t = iTime+rnd.x*.1+p.y*.01;\n        t = floor(t)+smoothstep(.0,1.,pow(fract(t),.17));\n             vec3 trnd = pcg3d(vec3(floor(t)));\n        vec3 p1 = kifs(p,2.+t,trnd.y);\n        vec3 p2 = kifs(erot(p+vec3(1.7,2.2,2.5),normalize(vec3(.0,1.,0.)+trnd),.785),3.+t,trnd.z);\n        float h = smin(abs(min(min(length(p1.yz),length(p1.xz)),length(p1.xy))),\n                       abs(min(min(length(p2.yz),length(p2.xz)),length(p2.xy))),-1.0)-1.15;\n        g+=e=max(.001,abs(h)-.1*step(.5,fract(p1.y-p2.z)));\n        col +=\n        normalize(sin(mix(vec3(.5,.8,.9),vec3(1.,.5,.2),step(.5,fract(p1.y-p2.z))))+trnd)*.0515/exp(.5*i*i*e);\n        \n    }\n    col = mix(vec3(1.0)-sqrt(length(uv)),col,smoothstep(.01,.1,length(col)));\n    \n    vec4 pframe = texture(iChannel0,fragCoord.xy/iResolution.xy);\n    col = mix(fwidth(col)+col,pframe.xyz*.9,.5);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}