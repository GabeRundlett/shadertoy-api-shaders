{
    "Shader": {
        "info": {
            "date": "1724456170",
            "description": "a fall leaf simulation",
            "flags": 32,
            "hasliked": 0,
            "id": "4fsfWX",
            "likes": 28,
            "name": "Autumn Leaf",
            "published": 3,
            "tags": [
                "veins"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 163
        },
        "renderpass": [
            {
                "code": "// Fork of \"Lake Coeur D'Alene\" by wyatt. https://shadertoy.com/view/4fXBWf\n// 2024-08-23 20:37:22\n\n// Fork of \"Taughannock Falls\" by wyatt. https://shadertoy.com/view/4csBW2\n// 2024-08-23 13:50:09\n\n\nMain \n    //Q = A(U).wwww*100.;\n    Q = sin(-4.5-B(U).x+atan(A(U).w*1000.)+vec4(1,2,3,4));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 R;\n#define Main void mainImage(out vec4 Q, in vec2 U) {R = iResolution.xy;\n#define A(u) texture(iChannel0,(u)/R)\n#define B(u) texture(iChannel1,(u)/R)\n#define C(u) texture(iChannel2,(u)/R)\n#define D(u) texture(iChannel3,(u)/R)\n\nfloat ln (vec2 p, vec2 a, vec2 b) {\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\n\n #define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\n #define cell(u) ((u).x>=-.5&&(u).y>=-.5&&(u).y<.5&&(u).x<.5)\nfloat segment (vec2 p, vec2 a, vec2 b) {\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nvec4 hash44(vec4 p4)\n{\n\tp4 = fract(p4  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\nvec4 noise (vec2 U) {\n    vec2 f = floor(U);\n    vec2 c = ceil(U);\n    vec4 _00 = hash44(vec4(f,f));\n    vec4 _01 = hash44(vec4(f.x,c.y,f.x,c.y));\n    vec4 _10 = hash44(vec4(c.x,f.y,c.x,f.y));\n    vec4 _11 = hash44(vec4(c,c));\n    vec4 _0 = mix(_00,_01,fract(U.y));\n    vec4 _1 = mix(_10,_11,fract(U.y));\n    return mix(_0,_1,fract(U.x));\n}\nvec4 fbm (vec2 U) {\n    mat2 m = ei(.5);\n    vec4 o = vec4(0);\n    for (float i = 0.; i < 10.; i++) {\n        U *= 1.5*m;\n        o += (noise(U))/5.*exp2(-.5*i);\n    }\n    return o;\n}\nbool leaf (vec2 U) {\n    U.y -= -.8;\n    U *= .8;\n    U = vec2(atan(U.y,U.x),length(U));\n    U.x += .1*fbm(vec2(10.*U.y,round(U.x/5.))).x;\n    U.y += (.5+.5*abs(sin(5.*U.x)))*-sin(U.x);\n    U.y += .5*fbm(10.*U.xx).x;\n    return U.y<.5;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "Main \n         Q = A(U);\n         vec2 V = unpackSnorm2x16(uint(Q.z));\n         \n         for (float x = -3.;x <= 3.;x++)\n         for (float y = -3.;y <= 3.;y++) {\n             vec2 u = vec2(x,y);\n             vec4 q = A(U+u);\n             vec4 m = B(U+u);\n             float l = length(u);\n             if (l>0.) {\n                 float r = exp(-.2*dot(u,u))/length(u);\n                Q.xy  -= ((q.w)+4.*B(U+u).x)*u*r;\n             }\n         }\n         Q.xy *= .9+.1*min(1.*Q.w,1.);\n         if(leaf(2.*(U-.5*R)/R.y)) Q.w += .000005*exp(-1000.*Q.w);\n        \n        if (U.x < 5.||R.x-U.x < 5.||R.y-U.y < 5.||U.y< 5.) Q.w *= 0.;\n        \n        if (leaf(2.*(U-.5*R)/R.y)&&iFrame < 1) Q.w = .001;\n        \n        \n        \n       if (length(U-vec2(.5,.0)*R) < .03*R.y) Q.w *= .9, Q.y = -1.;\n        \n        Q.z = float(packSnorm2x16(V));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main \n    Q = vec4(0);\n        vec2 V = vec2(0);\n        for (float x = -3.;x <= 3.; x++)\n        for (float y = -3.;y <= 3.; y++) {\n\n            vec2 u = vec2(x,y);\n\n            vec4 q = A(U+u);\n            vec2 v = unpackSnorm2x16(uint(q.z));\n            v +=2.*q.xy*inversesqrt(1.+dot(q.xy,q.xy));\n            float w = 1.;\n            if(q.w>0.) {\n                w = .25;\n                float h = 2.*3.14159265359*hash44(vec4(U+u,iTime,iFrame)).x;\n                vec2 o =1.*vec2(cos(h),sin(h));\n                if (cell(u+v+o)) {\n                    Q.xy += q.xy*w*q.w;\n                    V += (u+v+o)*w*q.w;\n                    Q.w += w*q.w;\n                }\n                if (cell(u+v-o)) {\n                    Q.xy += q.xy*w*q.w;\n                    V += (u+v-o)*w*q.w;\n                    Q.w += w*q.w;\n                }\n                w = .5;\n            }\n            if (cell(u+v)) {\n                Q.xy += q.xy*w*q.w;\n                V += (u+v)*w*q.w;\n                Q.w += w*q.w;\n            }\n        }\n        if (Q.w>0.) {\n            Q.xy/=Q.w;\n            V /= Q.w;\n        }\n        \n        Q.z = float(packSnorm2x16(V.xy));\n        \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main \n   Q = B(U);\n   vec4 a = A(U);\n   Q.x -= .00005*atan(100.*a.w)*length(a.xy)*Q.x;\n   vec4 n = B(U+vec2(0,1));\n   vec4 e = B(U+vec2(1,0));\n   vec4 s = B(U-vec2(0,1));\n   vec4 w = B(U-vec2(1,0));\n   vec4 m = 0.25*(n+e+s+w);\n   //Q.x = mix(Q.x,m.x,.001);\n   \n   //if(leaf(2.*(U-.5*R)/R.y)) Q.x = mix(Q.x,1.,.001);\n   if (iFrame < 1) {\n       vec2 u = 2.*(U-.5*R)/R.y;\n       float s = segment(U,vec2(.5,.1)*R,vec2(.5,.0)*R);\n       Q.x = 2.;\n       if (leaf(2.*(U-.5*R)/R.y)) Q.x -= 1.;\n       Q.x += .3*s/R.y;\n   }\n   if (U.x < 5.||R.x-U.x < 5.||R.y-U.y < 5.||U.y< 5.) Q.x *= 0.;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}