{
    "Shader": {
        "info": {
            "date": "1647400855",
            "description": "A fractal with knot-like patterns.",
            "flags": 0,
            "hasliked": 0,
            "id": "sd2BDd",
            "likes": 3,
            "name": "Fractal knots 12",
            "published": 3,
            "tags": [
                "fractal",
                "knot"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 159
        },
        "renderpass": [
            {
                "code": "#define c1 vec3(1.,0.5,1.5)\n\nvec2 triangle_wave(vec2 a,float scale){\n    return abs(fract((a+c1.xy)*scale)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 36.*16.*16.*1.5;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = c1.z;\n    float offset = 0.;\n    float offset1 = iTime/1000.;\n    for(int i=0;i<9;i++)\n    {\n        vec2 t2 = vec2(0.);\n        vec2 t3 = vec2(0.);\n        for(int k = 0; k < 3; k++){\n            uv += (t2.yx);\n            uv /= -1.35;\n            vec2 temp = t2;\n            t2 = triangle_wave(uv.yx-.5,scale);\n            t3 = -triangle_wave(uv,scale);\n            uv.yx = (t2+t3)/scale;\n            //uv += uv/scale;\n        }\n        col.x = max(uv.y+uv.x+col.x,col.x);\n        col = abs(col.yzx-vec3(col.x)*2.);\n        uv.y *= -1.;\n    }\n    fragColor = vec4(col/2.,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}