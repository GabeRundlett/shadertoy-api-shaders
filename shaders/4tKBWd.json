{
    "Shader": {
        "info": {
            "date": "1544534045",
            "description": "testing [url]http://extremelearning.com.au/unreasonable-effectiveness-of-quasirandom-sequences [/url]\nBottom & top bars : x = hash1(i)\ndots:  P = hash2i(i)\ncolor = ordering\nFor dens = 1/3000 looks quite blue, but for 1/300 looks quasi-periodic (ok, cheap)",
            "flags": 0,
            "hasliked": 0,
            "id": "4tKBWd",
            "likes": 13,
            "name": "golden hashing 2",
            "published": 3,
            "tags": [
                "hash",
                "dithering",
                "bluenoise",
                "goldenratio",
                "lowdiscrepancy"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 840
        },
        "renderpass": [
            {
                "code": "// follow-up of  https://shadertoy.com/view/4lyfDd\n// testing http://extremelearning.com.au/unreasonable-effectiveness-of-quasirandom-sequences/\n\n\n#define dens 1./300.\n\n#define PHI  1.618034     // root of x^2 = x+1, golden ratio \n#define PHI2 1.324717957  // root of x^3 = x+1, generalization of golden ratio\n                          // etc for N-1 dim vector\n\n// supposed to be specially low discrepancy\n#define hash1(x)  fract( .5 + (x) / PHI ) \n#define hash2(X)  fract( dot( X, 1./ vec2( PHI2, PHI2*PHI2 ) ) )\n#define hash2i(x) fract( (x) / vec2( PHI2, PHI2*PHI2 ) )\n\n#define hue(v)  ( .6 + .6 * cos( 6.3*(v)  + vec4(0,23,21,0)  ) ) // https://www.shadertoy.com/view/ll2cDc\n#define Z   min(0.,iTime)\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy, \n         u = (U+U-R) / R.y, V;\n    O -= O;\n    U = floor(U);\n    \n    if ( u.y < -.5 )\n          for( float i=Z; i<.5*R.x*(-1.-2.*u.y); i++ )\n          { if (U.x == floor( hash1(i)*R.x ) ) O = hue(i/(.5*R.x)); }\n    else \n        if (u.y > .9 )\n          for( float i=Z; i<.1*R.x; i++ )\n          { if (U.x == floor( hash1(i)*R.x ) ) O++; }\n    else\n        if (u.x < 0. )\n          for( float i=Z; i< dens*R.x*R.y; i++ )\n            O += 2. / dot( V = U - hash2i(i)*R.x, V );\n    else\n          for( float i=Z; i< dens*R.x*R.y; i++ )\n            O += 2. / dot( V = U - hash2i(i)*R.x, V ) * hue(i/(dens*R.x*R.y));\n        \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}