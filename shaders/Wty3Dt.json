{
    "Shader": {
        "info": {
            "date": "1580132112",
            "description": "As always, code is messy.\ninspired by a gif on the web\nand this <3 https://www.youtube.com/watch?v=JURh1XtkR-w&t=94s\nShould probably work on this and polish it but too lazy",
            "flags": 32,
            "hasliked": 0,
            "id": "Wty3Dt",
            "likes": 23,
            "name": "Day 39",
            "published": 3,
            "tags": [
                "mdtmjvm"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 1295
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 t = texture(iChannel0, fragCoord/iResolution.xy);\n    vec4 B = texture(iChannel0, fragCoord/iResolution.xy, 6.);\n    vec4 C = texture(iChannel0, fragCoord/iResolution.xy, 6.);\n    C = pow(C*1.5, vec4(2.));\n    C = clamp(C, 0., 1.);\n    fragColor = t*1. + C*0.4;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// As always, code is messy.\n// inspired by a gif on the web\n// and this <3 https://www.youtube.com/watch?v=JURh1XtkR-w&t=94s\n\n// ------- IF GLITCHY OR GREEN -------- //\n//\n// comment these lines at the end\n//     col = clamp(col, vec3(0.01), vec3(1.));\n//     col = smoothstep(0.,1.,col);\n//\n\n#define dmin(a,b) a.x < b.x ? a : b\n#define pmod(a,x) mod(a, x) - x*0.5\n\n#define mx (3.*iTime+20.*iMouse.x/iResolution.x)\n#define pi acos(-1.)\n\n#define rot(x) mat2(cos(x),-sin(x),sin(x),cos(x))\n\n\n//check out variations!\n//#define VAR1\n//#define VAR2\n#define VARENDLESS\n\nvec3 getRd(vec3 ro, vec3 lookAt, vec2 uv){\n\tvec3 dir = normalize(lookAt - ro);\n\tvec3 right = normalize(cross(vec3(0,1,0), dir));\n\tvec3 up = normalize(cross(dir, right));\n\treturn normalize(dir + right*uv.x + up*uv.y);\n}\n\nfloat sdBox(vec3 p, vec3 s){\n\tp = abs(p) - s;\n\treturn max(p.x, max(p.z, p.y));\n}\nvec3 u;\nfloat zid;\nfloat repD = 1.;\nvec2 map(vec3 p){\n\tvec2 d = vec2(10e5);\n\tvec3 o = p;\n    zid = floor(p.z/repD);\n    p.z = pmod(p.z, repD);\n    //d = dmin(d, vec2(length(p) - 1., 2.));\n    vec3 q = p;\n    u = p*(2. + floor(mod(p.z, repD*4.)/(repD*4.)));\n    \n    p = abs(p);\n    \n    p.x -= 2.15;\n    p.y -= 2.13;\n    p = abs(p);\n    p.yz *= rot(zid*pi*0.25);\n    p.xy *= rot(0.25*pi);\n    \n    #ifdef VARENDLESS\n    \tp = abs(p);\n    \tp.x -= 0.7 + sin(zid);\n    #endif\n    //p.zx *= rot(0.25*pi*zid);\n   \t#ifdef VAR2\n    \tp.yz *= rot(-0.1);\n    #endif\n    d = dmin(d, vec2(sdBox(p, vec3(1,2,1)), 1.));\n    d.x = max(d.x, -u.z  );\n    #ifdef VAR1\n    d.x = max(d.x, u.z  );\n\t#endif\n    d.x = max(d.x, u.z - 4.9  );\n    d.x *= 0.5;\n    return d;\n}\n\nvec3 getNormal(vec3 p){\n\tvec2 t = vec2(0.001, 0);\n    return normalize(map(p).x - vec3(\n    \tmap(p - t.xyy).x,\n    \tmap(p - t.yxy).x,\n    \tmap(p - t.yyx).x\n    ));\n    \n}\nvec3 glow = vec3(0);\n\nvec2 march(vec3 ro, vec3 rd, inout float t,inout bool hit, inout vec3 p){\n\tvec2 d;\n    \n\tp = ro + rd;\n    \n    for (int i = 0; i < 270; i++){\n    \td = map(p);\n        glow += exp(-d.x);\n        if(d.x < 0.001){\n        \thit = true;\n            break;\n        }\n        //if (t > 60.){break;}\n        t += d.x;\n        p = ro + rd*t;\n    }\n    \n\treturn d;\n}\n\n//#define pal(a,b,c,d,e) (a + b*sin(c*d + e))\n#define pal(a,b,c,d,e) (a + b*cos( (c*d + e)))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0);\n\n    vec3 ro = vec3(0.,0.,0. + mx);\n    vec3 lookAt = ro + vec3(0,0,1.);\n    //lookAt.x += sin(iTime)*0.1;\n    vec3 rd = getRd(ro, lookAt, uv);\n//    rd.xy *= 1. - dot(uv,uv)*0.2;\n    vec3 p;\n    float t = 0.; bool hit = false;\n    vec2 d = march(ro, rd, t, hit, p);\n    \n    vec3 n = getNormal(ro + rd.x*t);\n    \n    if(hit){\n    \t//col += n;\n    \t//u.xy *= rot(0.15*pi + iTime);\n        if (d.y == 1.){\n        \tvec3 q = p;\n            \n            float repD=7.;\n            float w = 2.8;\n            //q.z *= 9.;\n            //q.x *= 2.;\n            q *= 2.;\n            //q.y *= 3.;\n    \t\tzid = floor(p.z/repD);\n            \n            q = abs(q);\n            //q.xy -= pow(abs(sin(iTime*0.4 + zid*3.)), 20.)*2. ;\n            q.xy *= rot(zid*pi*0.25);\n            //q.zy *= rot(0.25*pi*zid);\n            float id = floor(max(abs(q.x)*repD, abs(q.y)*repD)*0.95) + 1.;\n            //float sqs = abs((mod(max(abs(q.x), max(abs(q.y),q.z)) , 1.) - 0.5)*repD); \n            float sqs = abs((mod(max(abs(q.x), max(abs(q.y),q.z)) , 1.) - 0.5)*repD); \n            \n            w += sin(id*9.)*3.;\n            //w = min(w, 2.2);\n            //w = max(w, 0.8);\n        \tcol += smoothstep(w,w*0.5, sqs)*pal(0.5,0.5,vec3(2,3,3),id ,iTime*1. + zid*0.6 + 9.*id);\n        \tcol -= abs(sin(id*5. + iTime))*0.4;\n        }\n    }\n    //col += pow(glow*0.03,vec3(3.))*0.28;\n    col -= pow(glow*0.03,vec3(6.))*0.1;\n    //col = pow(col, vec3(1.75));\n    //col = smoothstep();\n    \n    //col = pow(col, vec3(1.9,1.1,1.7));\n    col = pow(col, vec3(1.0,1.9,1.0));\n    //col.b *= 0.8;\n    col = clamp(col, 0.0, 1.);\n    col = smoothstep(0.,1.,col);\n    col.b *= 0.4;\n    col *= 1.2;\n    //col += pow(glow*0.03,vec3(1.))*0.28;\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}