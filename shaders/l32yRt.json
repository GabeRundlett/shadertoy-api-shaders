{
    "Shader": {
        "info": {
            "date": "1727612930",
            "description": "smallest Bagua \ninspired by ivan777 https://www.shadertoy.com/view/l3BcRd\nhttps://www.google.com/search?q=Bagua&udm=2\npattern encoded as 0xb4f0e1 (ivan777 shader) or 0x960f3c (reference)",
            "flags": 0,
            "hasliked": 0,
            "id": "l32yRt",
            "likes": 8,
            "name": "smallest Bagua ( 342 chars )",
            "published": 3,
            "tags": [
                "short",
                "golf",
                "reproduction",
                "bagua"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 101
        },
        "renderpass": [
            {
                "code": "// more readable version below\n\n\nvoid mainImage( out vec4 O, vec2 u ) {\n    vec2  R =  iResolution.xy,\n          U = ( u+u - R ) / R.y;                         // normalized coordinates\n    float a = atan(U.y,U.x), l = length(U), b;           // polar coordinates\n    U = l * cos( mod(a,.785 ) - .393 + vec2(0,11));      // 8-rotational symmetry\n    U.y = abs(U.y);// ↑ mod 2pi/8                        // in-octant bi-symmetry\n    O = 1.- vec4( abs(U.x-.535) < .2                     // bars area in octant\n                   ? b = sin(50.*U.x), \n                     clamp(  min( b/fwidth(b),           // draw bars\n                                 (abs(.92*U.y-.38*U.x)-.05)*R.y ), 0.,1. ) // octant spacing\n                     - float(  (0x960f3c >> 8*int( 7.5*l-2.5 )  // level id  3.*(U.x-.535+.2)/.4\n                                            + int( 1.27*a+4. )  // octant id 4* ( a/pi+1 ) \n                               ) %2)  // is hole ?\n                       * max(0.,R.y/2. *(.04-U.y))       // draw hole\n                   : 0.                                  // background\n                );\n}\n\n\n\n\n\n/** // --- 361 chars\n\nvoid mainImage( out vec4 O, vec2 u ) {\n    vec2  R =  iResolution.xy,\n          U = ( u+u - R ) / R.y;                         // normalized coordinates\n    float a = atan(U.y,U.x), l = length(U);              // polar coordinates\n    U = l * cos( mod(a , .785 ) - .393 + vec2(0,11));    // 8-rotational symmetry\n    U.y = abs(U.y);// ↑ mod 2pi/8                        // in-octant bi-symmetry\n    int i = int(4.*a/3.14+4.),                           // octant id   4* ( a/pi+1 )\n        j = int( 7.5*l-2.5 );                            // level id    3.*(U.x-.535+.2)/.4\n    O = 1.- vec4( abs(U.x-.535) < .2                     // bars area in octant\n                   ? l = sin(50.*U.x), \n                     clamp(  min( l/fwidth(l),           // draw bars\n                                 (abs(dot(U,vec2(-.38,.92)))-.05)*R.y ), 0.,1. ) // octant spacing\n                     - float(  (0x960f3c >> 8*j+i ) %2)  // is hole ?\n                       * max(0.,R.y/2. *(.04-U.y))       // draw hole\n                   : 0.                                  // background\n                );\n}\n\n/**/\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}