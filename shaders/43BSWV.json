{
    "Shader": {
        "info": {
            "date": "1711054878",
            "description": "грй",
            "flags": 0,
            "hasliked": 0,
            "id": "43BSWV",
            "likes": 1,
            "name": "фон 2",
            "published": 3,
            "tags": [],
            "usePreview": 0,
            "username": "liza911",
            "viewed": 115
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Определяем размеры экрана\n    vec2 resolution = iResolution.xy;\n\n    // Определяем центр экрана\n    vec2 center = resolution / 2.0;\n\n    // Вычисляем расстояние от текущей позиции до центра экрана\n    float distanceToCenter = length(fragCoord - center);\n\n    // Вычисляем радиус круга (можно настроить)\n    float radius = resolution.x * 0.5;\n\n    // Коэффициенты для квадратичной функции\n    float a = 1.0 / (radius * radius);\n    float b = -2.0 * a * radius;\n    float c = a * radius * radius;\n\n    // Прозрачность для желтого пятна\n    float alphaYellow = a * distanceToCenter * distanceToCenter + b * distanceToCenter + c;\n    alphaYellow = clamp(alphaYellow, 0.0, 1.0); // Убеждаемся, что alpha находится в диапазоне [0, 1]\n\n    // Устанавливаем цвета для градиента\n    vec3 yellowColor = vec3(1.0, 1.0, 0.0); // Желтый\n    vec3 transparentColor = vec3(1, 1, 1); // Белый\n\n    // Смешиваем цвета с учетом прозрачности для желтого пятна\n    vec3 finalYellowColor = mix(transparentColor, yellowColor, alphaYellow);\n\n    // Выводим цвет\n    fragColor = vec4(finalYellowColor, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}