{
    "Shader": {
        "info": {
            "date": "1440527829",
            "description": "use mouse axis x for varying the magic coef of the magicBox Fractal\nThe fractal is extracted from the shader of dgreensp [url=https://www.shadertoy.com/view/4ljGDd]Magic Fractal[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "Mlj3Wh",
            "likes": 18,
            "name": "Fractal Experiment 7",
            "published": 3,
            "tags": [
                "fractal",
                "experiment",
                "7"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 2112
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2014\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// from dgreensp => https://www.shadertoy.com/view/4ljGDd\nfloat magicBox(vec3 p) \n{\n    p = 1. - abs(1. - mod(p, 2.));\n    float lL = length(p), nL = lL, tot = 0., c = 0.913;\n    if (iMouse.z>0.) c = iMouse.x/iResolution.x;\n    for (int i=0; i < 13; i++) \n\t{\n      p = abs(p)/(lL*lL) - c;\n      nL = length(p);\n      tot += abs(nL-lL);\n      lL = nL;\n    }\n    return tot;\n}\n\nvoid mainImage(out vec4 f, vec2 g)\n{\n\tvec2 s = iResolution.xy;\n\t\n\tvec2 uv = (2.*g-s)/s.y * .2;\n\n\t// count arms\n\tfloat n = 10.0;\n\t\n\t// angle \n\tfloat a = atan(uv.y,uv.x);\n\t\n\t// bg\n\tvec3 topColor = vec3(.96,.98,.21);\n\tvec3 bottomColor = vec3(1,.32,.2);\n\tf.rgb = mix( topColor, bottomColor, sqrt(g/s).y );\n\t\n\t// fractal\n\tfloat fc = magicBox(vec3(uv,0)) + a*n + iDate.w*3.;\n\t\n\tf.rgb += cos(fc) + .001/dot(uv,uv);\n}",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}