{
    "Shader": {
        "info": {
            "date": "1680287286",
            "description": "Effect of ~30 min Shader Livecoding session athttps://warszawskiedniinformatyki.pl \nThanks for stopping by and watching pixels bouncing to music",
            "flags": 64,
            "hasliked": 0,
            "id": "ddtSRs",
            "likes": 11,
            "name": "WDI23 Shader Livecoding",
            "published": 3,
            "tags": [
                "3d",
                "raymarching",
                "music",
                "reflections",
                "livecoding",
                "klos"
            ],
            "usePreview": 0,
            "username": "spolsh",
            "viewed": 442
        },
        "renderpass": [
            {
                "code": "// #version 410 core\n\n#define f float\n#define v2 vec2\n#define v3 vec3\n\n#define N normalize\n#define H(v) fract(sin(100.*v)*435758.5354)\n#define T iTime\n\n// fake beat accumulation workaround\n#define BI (0.005*T+0.004*texture(iChannel0, v2(0.0, 0.5)).x)\n#define BS (0.002*texture(iChannel0, v2(0.0, 0.5)).x)\n#define BB (0.001*texture(iChannel0, v2(0.0, 0.5)).x)\n\n\nf gG = 10e8;\nf gG1 = 10e8;\n\nv3 cA = v3(0.2, 0.6, 1.2);\n\n/*\nuniform float fGlobalTime; // in seconds\nuniform vec2 v2Resolution; // viewport resolution (in pixels)\nuniform float fFrameTime; // duration of the last frame, in seconds\n\nuniform sampler1D texFFT; // towards 0.0 is bass / lower freq, towards 1.0 is higher / treble freq\nuniform sampler1D texFFTSmoothed; // this one has longer falloff and less harsh transients\nuniform sampler1D texFFTIntegrated; // this is continually increasing\nuniform sampler2D texPreviousFrame; // screenshot of the previous frame\nuniform sampler2D texChecker;\nuniform sampler2D texNoise;\nuniform sampler2D texTex1;\nuniform sampler2D texTex2;\nuniform sampler2D texTex3;\nuniform sampler2D texTex4;\n\nin vec2 out_texcoord;\nlayout(location = 0) out vec4 out_color; // out_color must be written in order to see anything\n*/\n\n\nf plas( vec2 v, float time ) {\n\tfloat c = 0.5 + sin( v.x * 10.0 ) + cos( sin( time + v.y ) * 20.0 );\n\tvec4 d = vec4( sin(c * 0.2 + cos(time)), c * 0.15, cos( c * 0.1 + time / .4 ) * .25, 1.0 );\n  return dot(d.xyz, d.xyz);\n}\n\nmat2 rot(f a) { return mat2(cos(a), -sin(a), sin(a), cos(a)); }\n\nf box(v3 p, v3 b) {\n  v3 q = abs(p) -b;\n  return length( max(q, v3(0.))) + min(  max(max(q.x, q.y),q.z), 0. );\n}\n\nf map(v3 p) {\n  f s = p.y +0.5 +0.3*plas(p.xz, T) +0.1*plas(0.05*p.xz, T);\n  p.z -= 12. + 2.*sin(100.*BI);\n  p.y -= 200.*BS;\n  \n  for (f b = 0.; b < 3.; ++b) {   \n    v3 p2 = p;\n    p2.y += 80.*BS ;\n    p2.zy *= rot(20.*T*H(b));\n    p2.x -= 0.1*H(b);\n    f s4 = length(p2) -0.2 -170.*BS;\n    s = min(s, s4);\n    gG = min(gG, s4);\n  }\n  \n  v3 p1 = p;\n  p1.z += 20.*BI + 10.*T;\n  p1.x = abs(p1.x);\n  p1.x -= 1.9;\n  p1.z = mod(p1.z + 1.0, 2.) - 1.0;\n  p1.xy *= rot(0.7);\n  s = min(s, box(p1, v3(0.3, 5., 0.3)));\n\n for (f b = 0.; b < 5.; ++b) {   \n    p = abs(p);\n    p -= v3(.9, 0.1, 1.4);\n    p.yz *= rot(40.*BI);\n    p.xy *= rot(T);\n    f s3 = length(p) -0.01 -50.*BB -0.01*b;\n   f  s1 = box(p, v3( 0.01 +50.*BS, 15.*BS, 25.*BS )) ;\n    f s2 = box(p, v3(0.001, 10., 0.005));\n    gG1 = min(gG1, s2);\n    if (b > 3.) {\n      gG = min(gG, s1);\n    }\n    s = min( s, s3 );\n    s = min( s, s2 );\n    s = min( s, s1 );\n  }\n  \n  // s = max(-s4, s-0.2);\n  \n  return s;\n}\n\n// void main(void) {\nvoid mainImage( out vec4 out_color, in vec2 fragCoord ) {\n\tvec2 uv = gl_FragCoord.xy/iResolution.xy;\n\tuv -= 0.5;\n\tuv /= vec2(iResolution.y / iResolution.x, 1);\n\n  v3 col = v3(0.);\n  out_color.xyz = col;\n  \n  if (abs(uv.y) > 0.4) return;\n  \n  v3 ro = v3(0.2*sin(20.*BI + T), 0., 0.);  \n  v3 rd = N(v3(uv, 4.));\n  rd.xy *= rot(0.2*cos(20.*BI + T));\n  \n  \n  f t = 0.;\n  f tt = 10e8;\n  v3 tint = v3(1.);\n  \n  for (f bi = 0.; bi < 3.; ++bi) {\n    for (f i = 0.; i<64.; ++i) {\n        t += map(ro+rd*t);\n        if (t < 0.001 || t> 40.) break;      \n    }\n    tt = bi == 0. ? t : tt; \n    v3 p = ro+rd*t;\n    v2 e = 0.001*v2(-1., 1.);\n    v3 n = N(\n        e.xxx * map(p + e.xxx)\n      + e.yxx * map(p + e.yxx)\n      + e.xyx * map(p + e.xyx)\n      + e.xxy * map(p + e.xxy)\n    );\n    \n    f fre = pow(dot(rd, n) + 1., 6.);\n    col += 0.1*cA*fre;\n    tint *= fre;\n    \n    rd = N(reflect(rd, n) + 0.1*H(p));\n    ro = p + 0.1*rd;\n    \n  }\n  // v3 p = ro+rd*t;\n  // col = fract(p);\n  col = mix(1.2*cA.zyx, 0.2*col, exp(-0.005 * tt*tt));  \n  \n  f sb = .1 + 40.*BS;\n  col += sb * cA * exp(-50. * gG);\n  col += sb * cA * exp(-1.  * gG);\n  \n  sb *= 2.;\n  col += sb * cA.yxz * exp(-50. * gG1);\n  col += sb * cA.yxz * exp(-10. * gG1);\n  col += sb * cA.yxz * exp(-5.  * gG1);\n  col += sb * cA.yxz * exp(-1.  * gG1);\n  \n  col += 50.*BB;\n  \n  out_color.xyz = col;\n \n  /*\n\tvec2 m;\n\tm.x = atan(uv.x / uv.y) / 3.14;\n\tm.y = 1 / length(uv) * .2;\n\tfloat d = m.y;\n\n\tfloat f = texture( texFFT, d ).r * 100;\n\tm.x += sin( fGlobalTime ) * 0.1;\n\tm.y += fGlobalTime * 0.25;\n\n\tvec4 t = plas( m * 3.14, fGlobalTime ) / d;\n\tt = clamp( t, 0.0, 1.0 );\n\tout_color = f + t;\n  */\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 32904,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/inzynier/secret-party-may-2021-ebm-dark-techno-130-133bpm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}