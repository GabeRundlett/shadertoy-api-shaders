{
    "Shader": {
        "info": {
            "date": "1458043591",
            "description": "A combination of two widely used noise algorithms, with a custom seed algorithm. No idea about the mathematical value of this, but I have used it for quite long path-tracing implementations and it proved to produce nearly zero randomization artefacts.",
            "flags": 0,
            "hasliked": 0,
            "id": "4sdSzN",
            "likes": 11,
            "name": "Custom Noise",
            "published": 3,
            "tags": [
                "noise",
                "random",
                "gaussian",
                "artefacts",
                "randomize"
            ],
            "usePreview": 0,
            "username": "pixartist",
            "viewed": 983
        },
        "renderpass": [
            {
                "code": "\nfloat seed = 0.0;\nvoid init(vec2 uv)\n{\n    seed = (uv.y + iTime * 0.523413187) * sqrt(uv.x * 0.77777777 * iTime);\n}\n\nfloat rand(vec2 s) \n{ \n    float n = fract(sin(seed+=1.0)*43758.5453123);\n    return fract(n + fract(sin(dot(vec2(n * s.y, s.x)*0.123,vec2(12.9898,78.233))) * 43758.5453));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    init(uv);\n    \n\tfragColor = vec4(rand(uv));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}