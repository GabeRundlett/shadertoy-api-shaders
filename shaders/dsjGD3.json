{
    "Shader": {
        "info": {
            "date": "1668270350",
            "description": "left side: no sRGB conversion, \nright side: sRGB conversion",
            "flags": 0,
            "hasliked": 0,
            "id": "dsjGD3",
            "likes": 2,
            "name": "is this sRGB conversion ?",
            "published": 3,
            "tags": [
                "srgb"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 186
        },
        "renderpass": [
            {
                "code": "float f_n_dist(\n    vec2 o_pix_cor_nor,\n    vec2 o_target\n){\n    float n_one = 1.0;// to keep it simple do not change this\n    vec2 o_delta = o_pix_cor_nor - o_target;\n    float n_tau = 6.2831;\n    float n_angle = atan(o_delta.y , o_delta.x)+(n_tau/2.0);\n    float n_angle_norm = n_angle / n_tau;\n  \n    float n_dist_squared = o_delta.x * o_delta.x + o_delta.y * o_delta.y;\n    float n_dist_squared_root = sqrt(n_dist_squared);\n    float n_dist_squared_root_modded = n_angle_norm;\n\n    \n    return n_dist_squared_root_modded;\n    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 o_pix_cor_nor = (fragCoord-0.5*iResolution.xy)/iResolution.y; \n    float n_dist = f_n_dist(o_pix_cor_nor, vec2(-0.5,0.0));\n\n    fragColor = vec4(n_dist); \n    \n    if(o_pix_cor_nor.x > 0.0){\n        o_pix_cor_nor = (fragCoord-0.5*iResolution.xy)/iResolution.y; \n        n_dist = f_n_dist(o_pix_cor_nor, vec2(0.5,0.0));\n        float n_dist_srgb_converted = pow(n_dist,1.0/2.6);\n        fragColor = vec4(n_dist_srgb_converted); \n    \n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}