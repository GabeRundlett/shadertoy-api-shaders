{
    "Shader": {
        "info": {
            "date": "1562520828",
            "description": "Using my newly discovered unity wave equation to sequence notes. \nThe same math that made this song mediates the dynamics of this simulation:\n[url]https://www.shadertoy.com/view/wllSRr[/url]",
            "flags": 8,
            "hasliked": 0,
            "id": "wtlSz7",
            "likes": 6,
            "name": "Sequence of Unity",
            "published": 3,
            "tags": [
                "sound",
                "unity"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 1020
        },
        "renderpass": [
            {
                "code": "#define R iResolution.xy\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    U = 2.*(U-0.5*R)/R.y;\n    float m = 1.;\n    float dm = 0.;\n    float p = sin(4.*iTime);\n    float n = sin(3.*iTime);\n    float dp = 0.;\n    float dn = 0.;\n    float r = U.x;\n    float g = U.y;\n    float b = sin(iTime);\n    float dr = 0.;\n    float dg = 0.;\n    float db = 0.;\n    float o = .5;\n    for (float i = 0.; i < 5.; i++) {\n        float mag = sqrt(m*m+n*n+p*p+r*r+g*g+b*b);\n        float np = sqrt(n*n+p*p);\n        float rgb = sqrt(r*r+g*g+b*b);\n        \n        dm += m/mag - sign(m);\n        dn += n/mag - n/np ;\n        dp += p/mag - p/np ;\n        dr += r/mag - r/rgb ;\n        dg += g/mag - g/rgb ;\n        db += b/mag - b/rgb ;\n        \n        m += dm;\n        n += dn;\n        p += dp;\n        r += dr;\n        g += dg;\n        b += db;\n    }\n    \n    Q = texture(iChannel0, vec2(r,g));\n    Q.x += .1*p;\n    Q.z += .1*n;\n    Q.y += .1*m;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 e (float x, float t, float a) {\n\treturn step(0.,t)*exp(-6.2/3.*t*a)*vec2(sin(6.2*x*t));\n}\nvec2 mainSound( in int samp, float time )\n{\n    \n    vec2 w = vec2(0);\n    float m = 1.;\n    float dm = 0.;\n    float p = -1.;\n    float n =  1.;\n    float dp = 0.;\n    float dn = 0.;\n    float r = 1.;\n    float g = -1.;\n    float b = 1.;\n    float dr = 0.;\n    float dg = 0.;\n    float db = 0.;\n    float o = .5;\n    for (float i = 0.; i < 30.; i++) {\n        \n    \tw += e (300.+m*25., time - o*i,1.);\n    \tw += .5*e (400.+n*50., time - o*i,2.);\n    \tw += .5*e (400.+p*50., time - o*i-o/2.,2.);\n    \tw += .3*e (500.+r*50., time - o*i-o*1./4.,3.);\n    \tw += .3*e (500.+g*50., time - o*i-o*2./4.,3.);\n    \tw += .3*e (500.+b*50., time - o*i-o*3./4.,3.);\n        \n        for (int j = 0; j < 5; j++) {\n            float mag = sqrt(m*m+n*n+p*p+r*r+g*g+b*b);\n            float np = sqrt(n*n+p*p);\n            float rgb = sqrt(r*r+g*g+b*b);\n\n            dm += m/mag - sign(m);\n            dn += n/mag - n/np ;\n            dp += p/mag - p/np ;\n            dr += r/mag - r/rgb ;\n            dg += g/mag - g/rgb ;\n            db += b/mag - b/rgb ;\n\n            m += dm;\n            n += dn;\n            p += dp;\n            r += dr;\n            g += dg;\n            b += db;\n        }\n    }\n    \n    return w*.5;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}