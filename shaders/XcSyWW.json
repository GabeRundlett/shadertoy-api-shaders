{
    "Shader": {
        "info": {
            "date": "1722290572",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "XcSyWW",
            "likes": 5,
            "name": "OkLCH gamut clipping for sRGB",
            "published": 3,
            "tags": [
                "gamut",
                "oklch"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 138
        },
        "renderpass": [
            {
                "code": "// Clips saturation component of colour until back in gamut.\n\n\nmat3 m11 = mat3(+0.4122214708, +0.5363325363, +0.0514459929,\n               +0.2119034982, +0.6806995451, +0.1073969566,\n               +0.0883024619, +0.2817188376, +0.6299787005);\n\nmat3 m2 = mat3(+0.2104542553, +0.7936177850, -0.0040720468,\n               +1.9779984951, -2.4285922050, +0.4505937099,\n               +0.0259040371, +0.7827717662, -0.8086757660);\nvec3 srgb_to_oklch( vec3 c ) { \n    c = pow(c * m11,vec3(1./3.)) * m2;\n    return vec3(c.x,sqrt((c.y*c.y) + (c.z * c.z)),atan(c.z,c.y));\n}\nvec3 oklch_to_srgb( vec3 c ) {\n    vec3 q = vec3(c.x,c.y*cos(c.z),c.y*sin(c.z)) * inverse(m2);\n    return q * q * q * inverse(m11);\n}\n\nvec3 oklch_to_srgb_clipped(vec3 col_oklch){\n    int clip_comp = 1;\n    float s_max = col_oklch[clip_comp];\n    float s_min = 0.;\n    int iters = 40;\n    vec3 col_srgb;\n    for(int i=0;i<iters;i++) {\n        col_oklch[clip_comp] = mix(s_min, s_max, 0.5);\n\n        col_srgb = oklch_to_srgb(col_oklch);\n        \n        bool is_in_gamut = \n            all(greaterThanEqual(col_srgb,vec3(0))) &&\n            all(lessThan(col_srgb,vec3(1.)));\n        if(is_in_gamut){\n            s_min = col_oklch[clip_comp];\n        } else {\n            s_max = col_oklch[clip_comp];\n        }\n    }\n    return col_srgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col_oklch = vec3(uv.y*0.6 + 0.4,0. + uv.y*0.3 + 0.2,uv.x*acos(-1.)*4.);\n    if(uv.x < 0.5){\n        fragColor.rgb = oklch_to_srgb(col_oklch);\n        if(any(lessThan(fragColor.rgb, vec3(0)))){\n            // Show out of gamut colours\n            // fragColor.rgb = vec3(1,0,0);\n        }\n    } else\n    fragColor.rgb = oklch_to_srgb_clipped(col_oklch);\n    \n    fragColor.rgb = max(fragColor.rgb,0.); // that feel when no gamut mapping! A LOT OF COLOURS ARE OUT OF GAMUT\n    fragColor.rgb = pow(fragColor.rgb,vec3(0.454545));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}