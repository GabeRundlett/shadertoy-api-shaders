{
    "Shader": {
        "info": {
            "date": "1724349785",
            "description": "source https://glslsandbox.com/e#59587.0 and other from glslsandbox",
            "flags": 0,
            "hasliked": 0,
            "id": "4ffBD2",
            "likes": 2,
            "name": "tunnel new ",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 75
        },
        "renderpass": [
            {
                "code": "\n#define resolution iResolution.xy\n#define time iTime\n\nfloat getD(float angle, float radius, vec2 st){\n\tfloat d = cos(floor(.5+angle/radius)*radius - angle)*length(st);\n\treturn d;\n}\n\nvec4 gr( vec2 g )\n{\n    g *= 0.1;\n    float color = sign((mod(g.x, 0.1) - 0.05) * (mod(g.y, 0.5) - 0.05));\n    return sqrt(vec4(color));\n}\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv =gl_FragCoord.xy/resolution.xy-vec2(0.5,0.5);\n    float t = time * 2.;\n    float a = atan(uv.x,uv.y);\n    float d = max(max(abs(uv.y),abs(uv.x)), min((uv.x), length(uv)));\n   \n     vec2 st= ( gl_FragCoord.xy * 2.0 -  resolution.xy ) / min(resolution.x, resolution.y);\n\t\n\tvec3 color = vec3(0.);\n\tfloat d3 = 0.;\n\t\n\t//remap -1,1\n\t\n\t\t\t\n\tfloat N =9.;\n\t\n\tfloat angle = atan(st.x, st.y)+PI*.25-time/3.;\n\tfloat angle2 = atan(st.x, st.y)+PI*.25+time/3.;\n\t\n\t\n\t\n\tfloat col = 1.;\n\tint segno = 1;\n\tfloat stepRadius =0.25;\n\tint count = 0;\n\tfloat currAngle = angle;\n\tfloat direction = 2.;\n\tfor(int i = 0; i < 15;i++){\n\t\tfloat radius = TWO_PI / float(N);\n\t\tcol -= float(segno) * smoothstep(stepRadius, stepRadius + 0.02*(sin(16.*time)+1.5),getD(currAngle,radius,st));\n\t\tcount += 1;\n\t\tsegno = segno ==1? -1:1;\n\t\tif(count == 2){\n\t\t\tcount = 0;\n\t\t\tcurrAngle = currAngle == angle? angle2: angle;\n\t\t\tN-=3.*direction;\n\t\t\tif(N<=0.){\n\t\t\t\tN=3.;\n\t\t\t\tdirection = direction * -1.;\n              \n\t\t\t}\n            \n           \n\t\t\t\n\t\t}\n\t\t\n\t\tstepRadius -= tan(0.0446*cos(iTime));\n\t\t\n\t}\n\tcolor = vec3(col);\n    vec4 col3 = gr(2.*vec2(a,0.8/d + t*0.9));\n    vec2 p = (gl_FragCoord.xy - 0.5 * resolution) / min(resolution.x, resolution.y);\n\tvec3 c = vec3(0.005, 0.0021, 0.009); // BG color\n\tvec3 lightCol = vec3(0.2 , 0.43, 0.8  );\n    \n\tfor(int i = 0; i <10; ++i) {\n        \tfloat t = 0.8 * 3.14 * float(i) / 5.+time  ;\n        \tfloat x = cos(t)*0.4 ;\n        \tfloat y = sin(t) ;\n        \tvec2 o = .15 * vec2(x   -  y, y);\n\t\tvec2 r = .15 * vec2(x   +  y, y);\n\t\tvec2 s = .15 * vec2(y*1.5   , x*.6);\n        \tc += 0.0012 / (length(p -(o))) * lightCol * 0.961;\n\t\tc += 0.01 / (length(p -(r))) * lightCol * 0.5;\n\t\tc += 0.02 / (length(p -(s))) * lightCol * 0.5;\n\t}\n    fragColor = col3*vec4(0.2,1.2,1.,1.);\n     fragColor*=vec4(color*c,1.);\n     fragColor+= vec4(c*c,1.);\n }",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}