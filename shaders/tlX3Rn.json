{
    "Shader": {
        "info": {
            "date": "1555448722",
            "description": "use mouse for draw shape or space key for reset",
            "flags": 48,
            "hasliked": 0,
            "id": "tlX3Rn",
            "likes": 14,
            "name": "GrayScott  Carpet",
            "published": 3,
            "tags": [
                "carpet",
                "grayscott"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 607
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = sin(10. * texture(iChannel0, fragCoord/iResolution.xy)) * 0.5 + 0.5;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec4 simu(sampler2D sam, vec2 g, vec2 s, int i, vec4 m, sampler2D kbd )\n{\n    if (i < 1 || texelFetch(kbd, ivec2(32,1),0).x > 0.)\n\t{\n\t\tfloat gy = g.y /s.y*2.-1.;\n\t\tgy = mod(gy, 0.5) - 0.25;\n\t\tgy += (sin(g.x/s.x*6.28318*60.) * 0.5+0.5) * 2./s.y;\n\t\tif (abs(gy) < 2./s.y)\n\t\t{\n\t\t\treturn vec4(0,1,0,1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfloat gx = g.x /s.x*2.-1.;\n            gx = mod(gx, 1.0) - 0.5;\n\t\t\tgx += (sin(g.y/s.y*6.28318*30.) * 0.5+0.5) * 20./s.x;\n            if (abs(gx) < 2./s.x)\n            {\n                return vec4(0,1,0,1);\n            }\n            else\n            {\n                return vec4(1,0,0,1);\n            }\n\t\t}\n\t}\n\telse\n\t{\n        if (m.z > 0.)\n\t\t{\n\t\t\tif (length(g - m.xy) < 50.)\n\t\t\t{\n\t\t\t\treturn vec4(0,1,0,1);\n\t\t\t}\n\t\t}\n        \n\t\tvec4 c = texture(sam, fract(g/s));\n\t\t\n\t\tvec4 l = texture(sam, fract((g+vec2(-1,0))/s));\n\t\tvec4 r = texture(sam, fract((g+vec2(1,0))/s));\n\t\tvec4 b = texture(sam, fract((g+vec2(0,-1))/s));\n\t\tvec4 t = texture(sam, fract((g+vec2(0,1))/s));\n\t\t\n\t\tvec4 lp = l+r+b+t - 4.0 * c;\n\t\t\n\t\tfloat feedRate = 0.063;\n\t\tfloat killRate = 0.063;\n\t\t\n\t\tfloat reac = c.r * c.g * c.g;\n\t\tfloat u = 0.22 * lp.r - reac + feedRate * (1.0 - c.r);\n        float v = 0.1 * lp.g + reac - (feedRate + killRate) * c.g;\n        vec2 sb = c.rg + vec2(u, v);\n\n        return vec4(clamp(sb,0.,1e2),0,1);\n\t}\n    \n    return vec4(0);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage( out vec4 fragColor, vec2 g )\n{\n    fragColor = simu(iChannel0, g, iResolution.xy, iFrame, iMouse, iChannel1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, vec2 g )\n{\n    fragColor = simu(iChannel0, g, iResolution.xy, iFrame, iMouse, iChannel1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, vec2 g )\n{\n    fragColor = simu(iChannel0, g, iResolution.xy, iFrame, iMouse, iChannel1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, vec2 g )\n{\n    fragColor = simu(iChannel0, g, iResolution.xy, iFrame, iMouse, iChannel1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}