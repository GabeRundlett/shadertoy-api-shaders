{
    "Shader": {
        "info": {
            "date": "1633774213",
            "description": "[url]https://inktober.com/[/url]\n#inktober2021 themes: [img]https://i.imgur.com/QjhAdpd.png[/img]\n\nnote that it also works as Fab17b \"collide\" ;-)",
            "flags": 32,
            "hasliked": 0,
            "id": "sdtSRs",
            "likes": 14,
            "name": " Fab9b #inktober2021 \"pressure\"",
            "published": 3,
            "tags": [
                "2d",
                "simulation",
                "physics",
                "short",
                "gas",
                "pressure",
                "inktober2021"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 450
        },
        "renderpass": [
            {
                "code": "#define A(V) max(abs(V).x,abs(V).y)\nvoid mainImage(out vec4 O, vec2 u)\n{\n    vec2  U = 1.2*( u+u - R ) / R.y, P, M, B;\n    \n    float d, m = 9., t=.99;\n    int i,k=0;\n    for (; k <64; k++)                      // draw particles\n        P = T(vec2(k%8,k/8)).xy,\n        d = length(P-U),\n        d < m ? m = d, i = k, M = P : P;\n    \n    O = vec4( S(m-.01) );                   // red if colliding borders\n    if ( A(M) > t ) O.gb *= 0.;\n    \n    P = U-M, B= -T(vec2(i%8,i/8)).zw*20.;   // motion blur trace\n    d = clamp(dot(P, B) / dot(B,B), 0., 1.);\n    O += .6*(1.-d) * S( length(P - B * d) -.01 );     \n       \n    O += .5*S(  abs(A(U)-1.02) -.01 );      // draw box\n\n#define B(s,x) if ( s M.x > t && s U.x > t )  O.gb *= 0.;\n    B(-,x) B(-,y) B(,x) B(,y)\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage(out vec4 O, vec2 U)\n{\n    if (max(U.x,U.y)>8.) return;  // only 64 partics\n    \n    if (iFrame==0) { O = vec4( H(U), .01*H(U+.1) ); return; } // init\n                                      // normalize() // more physical but less pretty\n    O = T(U);\n    \n    vec2 A = abs( O.xy += O.zw ); // move particle\n    \n    if (A.x>1.) O.z = -O.z;       // bounce\n    if (A.y>1.) O.w = -O.w;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R     iResolution.xy\n#define S(v)  smoothstep(5./R.y,0., v ) \n#define H(p) (2.*fract(sin((p)*mat2(127.1,311.7, 269.5,183.3)) *43758.5453123)-1.)\n#define T(U)  texelFetch( iChannel0, ivec2(U), 0 )\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}