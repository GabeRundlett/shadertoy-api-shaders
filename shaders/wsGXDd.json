{
    "Shader": {
        "info": {
            "date": "1575321596",
            "description": "Done during the grow 2019 livecofing session in 25 minutes",
            "flags": 0,
            "hasliked": 0,
            "id": "wsGXDd",
            "likes": 18,
            "name": "Lamogui - GROW 2019",
            "published": 3,
            "tags": [
                "grow",
                "lamogui",
                "2019"
            ],
            "usePreview": 1,
            "username": "lamogui",
            "viewed": 603
        },
        "renderpass": [
            {
                "code": "\nfloat t = 0.0;\n\nmat3 rot(vec3 v, float a){\n  float c = cos(a);\n  float s = sin(a);\n  float _c = 1.0 - c;\n  return mat3( c + _c * v.x * v.x, _c * v.x * v.y + s * _c * v.z, _c * v.x * v.z - s *v.y,\n  _c * v.x * v.y - s * v.z, c +_c * v.y * v.y, _c * v.x * v.z + s * v.y,\n_c * v.x * v.z + s * v.y, _c * v.y * v.z - s * v.x, c + _c * v.z *v.z  );\n}\n\n\nfloat coscoscos(vec3 p )\n{\n  vec3 g = rot(vec3(0.0,.0,1.0), p.z * 0.1) * p;\n  return cos(g.x) + cos(g.y) + cos(g.z);\n}\n\n\nfloat grass( vec3 p ){\n  float id = textureLod(iChannel0, floor(p.xz)/512.0, 0.0).r;\n  p.xz = mod(p.xz, 3.0) - 1.5;\n  \n  float h= p.y;\n  p = rot(vec3(0.,1.,0.),60. * id + 360.0 * fract(iTime * 0.01)) * p;\n  p = rot(vec3(1.,.0,.0), p.y * 0.2) * p;\n  return length(p.xz) - id + pow(h * 0.2, 4.0);  \n  \n}\n\nfloat map(vec3 p) {\n  float d = 1000000.0;\n  \n  d = min(d, p.y);\n  \n  d = min(d,coscoscos(p)); \n  float gs = 80.0;\n  vec3 pg = p * gs;\n  d = min(d, grass(pg) / gs);\n  d = min(d, grass(pg + vec3( 5.15856418916, 0.0, 7.4781)) / gs);\n  d = min(d, grass(pg - vec3( 3.018, 0.0, 2.0015)) / gs);\n  \n  return d;\n}\nvec3 grad( vec3 p ){\n  vec2 e =vec2(0.01, 0.0);\n  float d = map(p);\n  return normalize(vec3(d-map(p+e.xyy), d -map(p+e.yxy), d - map(p +e.yyx) ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n  uv -= 0.5;\n  uv /= vec2(iResolution.y / iResolution.x, 1);\nfloat t = iTime;\n  vec3 ro = vec3(0.0,0.2,iTime * 0.3);\n  vec3 rd = normalize(vec3(uv, 0.7 - length(uv)));\n  float st = 1.0;\n  vec3 p = ro;\n  for (float i = 0.0; i < 256.0; ++i){\n    float d = map(p);\n    if ( abs (d) < 0.001) {\n      st = i/256.0;\n      break;\n    }\n    p += rd * 2.0 *d * i / 256.0;\n}\n  vec3 color = mix(vec3(0.4,1.0,0.6) * st, vec3(1.0), 0.01 * distance(ro, p)) ;\n\nif ( abs(coscoscos(p)) < 0.1) {\n\n  float st2 = 1.0;\nvec3 n = grad(p);\nvec3 rd2 = reflect(rd, n);\nvec3 ro2 = p + rd2 * 0.1;\n  vec3 p2 = ro2;\n  for (float i = 0.0; i < 256.0; ++i){\n    float d = map(p2);\n    if ( abs (d) < 0.001) {\n      st = i/256.0;\n      break;\n    }\n    p2 += rd2 * 2.0 *d * i / 256.0;\n}\ncolor += mix(vec3(0.4,1.0,0.6) * st, vec3(1.0), 0.01 * distance(ro, p2));\n}\n    fragColor = vec4(color,1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}