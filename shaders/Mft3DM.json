{
    "Shader": {
        "info": {
            "date": "1711792046",
            "description": "CC0: Galaxy logo distance field\n Many moons ago I did a Galaxy distance field for a demo\n Hadn't published it so I thought I do that in case\n  someone finds it's useful\n",
            "flags": 0,
            "hasliked": 0,
            "id": "Mft3DM",
            "likes": 15,
            "name": "Galaxy logo distance field",
            "published": 3,
            "tags": [
                "logo",
                "impulse"
            ],
            "usePreview": 0,
            "username": "mrange",
            "viewed": 239
        },
        "renderpass": [
            {
                "code": "// CC0: Galaxy logo distance field\n//  Many moons ago I did a Galaxy distance field for a demo\n//  Hadn't published the distance field so I thought I do that in case\n//  someone finds it's useful\n\n#define RESOLUTION iResolution\n#define TIME       iTime\n#define PI         3.141592654\n#define TAU        (2.0*PI)\n#define ROT(a)     mat2(cos(a), sin(a), -sin(a), cos(a))\n\nconst float lw = 0.025;\n\n// License: MIT, author: Inigo Quilez, found: https://www.iquilezles.org/www/articles/smin/smin.htm\nfloat pmin(float a, float b, float k) {\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\n// License: MIT, author: Inigo Quilez, found: https://iquilezles.org/www/articles/distfunctions2d/distfunctions2d.htm\nfloat segment(vec2 p, vec2 a, vec2 b ) {\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n// License: MIT, author: Inigo Quilez, found: https://iquilezles.org/www/articles/distfunctions2d/distfunctions2d.htm\nfloat roundedX(vec2 p, float w, float r) {\n    p = abs(p);\n    return length(p-min(p.x+p.y,w)*0.5) - r;\n}\n\nfloat pmax(float a, float b, float k) {\n  return -pmin(-a, -b, k);\n}\n\nfloat segmentx(vec2 p, float l) {\n  p = abs(p);\n  float d0 = max(p.x-l, p.y);\n  float d1 = length(p - vec2(l, 0.0));\n  return p.x > l ? d1 : d0;\n}\n\nfloat circle(vec2 p, float r) {\n  return length(p) - r;\n}\n\nfloat galaxy_g(vec2 p) {\n  const float s = 0.5;\n  float d0 = segment(p, s*vec2(0.0, 0.0), s*vec2(1.0, 1.0))-lw;\n  float d1 = segmentx(p-s*vec2(0.5, 0.0), s*0.5)-lw;\n  float d2 = segmentx((p - s*vec2(1.0, 0.125)).yx, s*0.125)-lw;\n  float d3 = segmentx(p - s*vec2(1.0-0.125, 0.25), s*0.125)-lw;\n\n  float d = 1E6;\n  d = min(d, d0);\n  d = min(d, d1);\n  d = min(d, d2);\n  d = min(d, d3);\n  return d;\n}\n\nfloat galaxy_a(vec2 p) {\n  const float s = 0.375;\n  const vec2 n = normalize(vec2(1.0, 1.0));\n\n  p += vec2(-0.5, 0.125);\n  p -= n*max(0.0, dot(p, n))*2.0;\n  p -= vec2(-0.5, 0.125);\n\n  float dx = circle(p, 0.1);\n  float d0 = segment(p, s*vec2(0.0, 0.0), s*vec2(1.0, 1.0))-lw;\n  float d1 = segmentx(p-s*vec2(0.5, 0.0), s*0.5)-lw;\n\n  float d = 1E6;\n  d = min(d, d0);\n  d = min(d, d1);\n  return d;\n}\n\nfloat galaxy_l(vec2 p) {\n  const float s = 0.5;\n  float d0 = segment(p, s*vec2(0.0, 0.0), s*vec2(0.0, 1.0))-lw;\n\n  float d = 1E6;\n  d = min(d, d0);\n  return d;\n}\n\nfloat galaxy_x(vec2 p) {\n  const float s = 1.0;\n  float d0 = roundedX(p-vec2(0.0, 0.5*s), s, lw*1.5);\n\n  float d = 1E6;\n  d = min(d, d0);\n  return d;\n}\n\nfloat galaxy_y(vec2 p) {\n  const float s = 0.5;\n  float d0 = segment(p, s*vec2(0.0, 0.0), s*vec2(1.0, 1.0))-lw;\n  float d1 = segment(p, s*vec2(1.0/3.0, 1.0), s*2.0/3.0*vec2(1.0, 1.0))-lw;\n\n  float d = 1E6;\n  d = min(d, d0);\n  d = min(d, d1);\n  return d;\n}\n\n\nfloat galaxy(vec2 p) {\n  p -= vec2(-0.89, -0.25);\n  float d = 1E6;\n  float dg = galaxy_g(p-vec2(0.1, 0.0));\n  vec2 pa = p;\n  pa -= vec2(0.8, 0.0);\n  pa.x = abs(pa.x);\n  pa.x = -pa.x;\n  pa -= -vec2(0.465, 0.0);\n  float da = galaxy_a(pa);\n  float dl = galaxy_l(p-vec2(0.8, 0.0));\n  float dx = galaxy_x(p-vec2(1.14, -0.25));\n  float dy = galaxy_y(p-vec2(1.0125, -0.125));\n  \n  const float sm = 0.0125;\n  \n  d = min(d, da);\n  d = pmax(d, -(dg-lw*0.5), sm);\n  d = min(d, dg);\n  d = min(d, dl);\n  d = pmax(d, -(dy-lw*0.5), sm);\n  d = min(d, dy);\n  d = pmax(d, -(dx-lw*0.5), sm);\n  d = min(d, dx);\n  \n  return d;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 q = fragCoord/RESOLUTION.xy;\n  vec2 p = -1. + 2. * q;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n  float aa = sqrt(2.)/RESOLUTION.y;\n  const float z = 1.5;\n  float d = galaxy(p/z)*z; \n  \n  vec3 col = vec3(0.0);\n  col = mix(col, vec3(1.), smoothstep(-aa, aa, -d));\n  col += 0.1*smoothstep(sqrt(0.5), 0.,d+0.66*length(p)-0.5)*smoothstep(sqrt(0.5), 1.0, sin(d*60.-TIME));\n  col = sqrt(col);\n  fragColor = vec4(col, 1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}