{
    "Shader": {
        "info": {
            "date": "1723786733",
            "description": "originals https://www.shadertoy.com/view/lcffD4",
            "flags": 0,
            "hasliked": 0,
            "id": "XclBD4",
            "likes": 0,
            "name": "fbm color star",
            "published": 3,
            "tags": [
                "fbm",
                "star"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 88
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(30,53,21))*1.5+.5)\n\nmat2 rotate(float angle) {\n    return mat2(\n        cos(angle), -sin(angle),\n        sin(angle), cos(angle)\n    );\n}\n\nfloat star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\n \nfloat noise(vec2 uv) {\n    return sin(cos(uv.x) + sin(uv.y)+iTime);\n}\n\nvec2 hash22(vec2 uv) {\n    uv = vec2(dot(uv, vec2(127.1,311.7)),\n              dot(uv, vec2(269.5,183.3)));\n    return 2.0 * fract(sin(uv) * 43758.5453123) - 1.0;\n}\n\nfloat pnoise(vec2 uv) {\n    vec2 iuv = floor(uv);\n    vec2 fuv = fract(uv);\n    vec2 blur = smoothstep(0.0, 1.0, fuv);\n    return mix(mix(dot(hash22(iuv + vec2(0.0,0.0)), fuv - vec2(0.0,0.0)),\n                   dot(hash22(iuv + vec2(1.0,0.0)), fuv - vec2(1.0,0.0)), blur.x),\n               mix(dot(hash22(iuv + vec2(0.0,1.0)), fuv - vec2(0.0,1.0)),\n                   dot(hash22(iuv + vec2(1.0,1.0)), fuv - vec2(1.0,1.0)), blur.x), blur.y) + 0.5;\n}\n\nfloat hash12(vec2 x) {\n    return fract(cos(mod(dot(x, vec2(13.9898, 8.141)), 3.14)) * 43759.5453);\n}\n\n\n\nfloat fbm(vec2 uv, int octaves, float amp_start, float freq_coeff, float amp_coeff) {\n    float fbm = 0.0;\n    float amplitude = amp_start;\n    vec2 shift = vec2(0.0);\n    vec2 warped_uv = vec2(0.0);\n    float zoom = 1.0;\n    mat2 rotation = rotate(0.5);\n    for (int i = 0; i <octaves; i++) {\n        warped_uv = uv * zoom + float(i) + shift +iTime;\n        fbm += amplitude * pnoise(warped_uv);\n        uv *= freq_coeff;\n        shift += sin(warped_uv);\n        zoom *= 1.5;\n        amplitude *= amp_coeff;\n    }\n    return fbm;\n\n}\n\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    \n     int octaves = 15;\n    float amp_start = 1.3;\n    float amp_coeff = 0.9;\n    float freq_coeff = 2.0;\n    vec3 effect_color = vec3(5.7, 5.6, 0.1);\n   \n    vec3 p,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<70.;\n        O.xyz+=mix(vec3(1),H(g*.1),.8)*1./e/8e3\n    )\n    {\n        p=g*d;\n        p.xy *= 00.50 * fbm(p.xy, octaves, amp_start, freq_coeff, amp_coeff) -1.0;\n            p.xz += 00.50 * fbm(p.xz, octaves, amp_start, freq_coeff, amp_coeff) -1.0;\n                 p.yz += 00.50 * fbm(p.yz, octaves, amp_start, freq_coeff, amp_coeff) -1.0;  \n        a=30.;\n        p=mod(p-a,a*2.)-a;\n        s=3.;\n   \n        for(int i=0;i++<8;){\n              p.xy*=mat2(cos(iTime*0.1),sin(iTime*0.1),-sin(iTime*.1), cos(iTime*.1));\n            p=.3-abs(p);\n                   \n            \n            p.x<p.z?p=p.zyx:p;\n            p.z<p.y?p=p.xzy:p;\n              p.x<p.y?p=p.zxy:p;\n            s*=e=1.4+sin(iTime*.1)*.1;\n            p=abs(p)*e-\n                vec3(\n                    25.+sin(iTime*.3+.5*sin(iTime*.3))*3.,\n                   100,\n                    2.+cos(iTime*.5)*5.\n                 );\n         }\n         g+=e=length(p.yz)/s;\n    }\n    O*=5.;\n    vec2 uv = ( C - .5*iResolution.xy ) / iResolution.y;\n    uv *= 2.0 * ( cos(iTime * 2.0) -2.5); // scale\n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;  // anim between 0.9 - 1.1 \n    O*= vec4(star(uv, anim) * vec3(0.35,0.2,5.55)*6., 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}