{
    "Shader": {
        "info": {
            "date": "1559200622",
            "description": "very slow on low end PCs.. not sure why..",
            "flags": 96,
            "hasliked": 0,
            "id": "ttj3DR",
            "likes": 18,
            "name": "KeithHaringDJ",
            "published": 3,
            "tags": [
                "animation",
                "lineart",
                "dj",
                "keithharing"
            ],
            "usePreview": 0,
            "username": "granito",
            "viewed": 758
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv += hash21(iFrame)*vec2(0.0005,0.001);\n    vec4 drawing = texture(iChannel0, uv);\n    uv = fragCoord / 1024.;\n    drawing *= texture(iChannel2, uv) + 0.25;\n    fragColor =smoothstep(0.,0.1,drawing);\n} ",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "musicstream",
                        "id": 18709,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/livinproof/keith-haring-mix"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define HASHSCALE3 vec3(.10319, .10307, .09731)\n\nvec2 hash21(int x)\n{\n    float p = float(x);\n\tvec3 p3 = fract(vec3(p) * HASHSCALE3);\n\tp3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\nconst ivec2 points[] = ivec2[]( \nivec2(11688, 63425), \nivec2(12221, 67185), \nivec2(13498, 69208), \nivec2(14674, 69735), \nivec2(15845, 69150), \nivec2(16905, 66760), \nivec2(16905, 63992), \nivec2(19303, 60906), \nivec2(21698, 57716), \nivec2(23825, 54410), \nivec2(26965, 49685), \nivec2(30956, 51919), \nivec2(36175, 53984), \nivec2(39688, 56433), \nivec2(41391, 61969), \nivec2(41391, 64737), \nivec2(36385, 75829), \nivec2(37133, 76234), \nivec2(41391, 75064), \nivec2(41711, 76448), \nivec2(40965, 81025), \nivec2(41435, 81276), \nivec2(46118, 78350), \nivec2(56721, 82729), \nivec2(65877, 85390), \nivec2(67687, 80067), \nivec2(64174, 78257), \nivec2(62044, 77299), \nivec2(51225, 71384), \nivec2(53458, 69948), \nivec2(68197, 70107), \nivec2(68676, 65533), \nivec2(66303, 64524), \nivec2(55870, 61543), \nivec2(53740, 60691), \nivec2(54699, 57178), \nivec2(60128, 55475), \nivec2(71626, 52281), \nivec2(72158, 50578), \nivec2(72158, 42806), \nivec2(72265, 38015), \nivec2(73755, 31628), \nivec2(73542, 27156), \nivec2(72158, 25559), \nivec2(71094, 25772), \nivec2(69390, 27582), \nivec2(68326, 31947), \nivec2(66729, 38867), \nivec2(65796, 45331), \nivec2(55870, 48448), \nivec2(55976, 42699), \nivec2(56402, 33224), \nivec2(56402, 25666), \nivec2(54379, 25772), \nivec2(54273, 17788), \nivec2(46714, 18639), \nivec2(47246, 23111), \nivec2(44478, 23536), \nivec2(44904, 25559), \nivec2(43520, 27263), \nivec2(41072, 28860), \nivec2(36281, 29285), \nivec2(37665, 44296), \nivec2(37665, 47597), \nivec2(28190, 43764), \nivec2(24890, 43657), \nivec2(17757, 53133), \nivec2(13448, 59459),\nivec2(11688, 63425),     \nivec2(0),\nivec2(84906, 89279), \nivec2(84480, 80230), \nivec2(86823, 80869), \nivec2(89058, 82466), \nivec2(90123, 85447), \nivec2(90123, 88747), \nivec2(87781, 89705), \nivec2(84906, 89279),     \nivec2(0), \nivec2(84480, 76078), \nivec2(92678, 76078), \nivec2(0), \nivec2(89271, 76504), \nivec2(89271, 68413), \nivec2(87781, 66177), \nivec2(85651, 65538), \nivec2(84374, 67348), \nivec2(84480, 70436), \nivec2(0), \nivec2(3570, 4004), \nivec2(4103, 10072), \nivec2(4103, 18589), \nivec2(4635, 25296), \nivec2(4954, 36368), \nivec2(3996, 43607), \nivec2(4209, 52018), \nivec2(4209, 61280), \nivec2(4528, 72352), \nivec2(3890, 85234), \nivec2(4954, 94709), \nivec2(15920, 94496), \nivec2(22094, 94602), \nivec2(29227, 94176), \nivec2(49135, 94602), \nivec2(61059, 93963), \nivec2(69682, 94496), \nivec2(81925, 94389), \nivec2(87142, 94709), \nivec2(97469, 93538), \nivec2(96723, 74481), \nivec2(97256, 54999), \nivec2(96617, 47227), \nivec2(96936, 40201), \nivec2(96723, 30300), \nivec2(97149, 18057), \nivec2(96191, 5707), \nivec2(84480, 6346), \nivec2(66914, 5814), \nivec2(45622, 5282), \nivec2(40193, 5814), \nivec2(30718, 6027), \nivec2(18901, 5388), \nivec2(10597, 4643), \nivec2(3570, 4004),     \nivec2(0), \nivec2(71492, 78633), \nivec2(74686, 81827), \nivec2(0), \nivec2(72237, 76291), \nivec2(78093, 78101), \nivec2(0),\nivec2(73089, 73204), \nivec2(76496, 71820), \nivec2(0), \nivec2(73089, 70223), \nivec2(77028, 66496), \nivec2(0), \nivec2(77454, 57341), \nivec2(78945, 52870), \nivec2(79157, 49889), \nivec2(78625, 46801), \nivec2(0), \nivec2(80329, 61493), \nivec2(82458, 56809), \nivec2(82458, 50847), \nivec2(81925, 46163), \nivec2(80967, 42011), \nivec2(0), \nivec2(81313, 34611), \nivec2(82431, 32802), \nivec2(82910, 30939), \nivec2(83017, 29288), \nivec2(0), \nivec2(78599, 32855), \nivec2(79823, 31471), \nivec2(80302, 30087), \nivec2(80302, 28916), \nivec2(0), \nivec2(59489, 36847), \nivec2(60766, 37752), \nivec2(62363, 37965), \nivec2(0), \nivec2(59435, 33973), \nivec2(60766, 35091), \nivec2(62203, 35250), \nivec2(0), \nivec2(45542, 34824), \nivec2(47033, 33334), \nivec2(47672, 31790), \nivec2(47938, 30406), \nivec2(0), \nivec2(43041, 32589), \nivec2(44797, 31790), \nivec2(45809, 30566), \nivec2(46075, 29182), \nivec2(0), \nivec2(18661, 30459), \nivec2(20311, 32535), \nivec2(21642, 33866), \nivec2(22706, 34186), \nivec2(0), \nivec2(21056, 29129), \nivec2(22706, 31471), \nivec2(23984, 32269), \nivec2(0), \nivec2(11610, 66441), \nivec2(9653, 68624), \nivec2(8223, 72614), \nivec2(8298, 78034), \nivec2(9879, 82174), \nivec2(12175, 86201), \nivec2(14358, 87820), \nivec2(17746, 88422), \nivec2(20719, 87556), \nivec2(23768, 85147), \nivec2(25462, 82136), \nivec2(26666, 78109), \nivec2(26704, 73780), \nivec2(25951, 70205), \nivec2(24031, 67118), \nivec2(20757, 64822), \nivec2(17858, 64258),   \nivec2(0),\nivec2(14151, 75210), \nivec2(16089, 73141), \nivec2(17783, 73291), \nivec2(19477, 74496), \nivec2(20230, 76716), \nivec2(19515, 79389), \nivec2(17708, 81271), \nivec2(15487, 81045), \nivec2(14057, 78448), \nivec2(14151, 75210),\nivec2(0), \nivec2(16654, 77883), \nivec2(17405, 76281), \nivec2(0), \nivec2(25572, 65490), \nivec2(26863, 66688), \nivec2(27661, 68298), \nivec2(28127, 69909), \nivec2(0), \nivec2(25851, 62257), \nivec2(27302, 63481), \nivec2(28393, 65025), \nivec2(29484, 66595), \nivec2(29977, 68165), \nivec2(0), \nivec2(11579, 27803), \nivec2(10514, 30997), \nivec2(9796, 35122), \nivec2(9290, 38636), \nivec2(9450, 41750), \nivec2(9849, 45210), \nivec2(10701, 48217), \nivec2(11951, 50799), \nivec2(0), \nivec2(15066, 48616), \nivec2(14001, 45449), \nivec2(13282, 42654), \nivec2(12910, 39141), \nivec2(13202, 35389), \nivec2(13868, 32594), \nivec2(0), \nivec2(8276, 5067), \nivec2(8614, 18279), \nivec2(16707, 18655), \nivec2(0), \nivec2(12792, 4954), \nivec2(13244, 10525), \nivec2(18401, 9923), \nivec2(24348, 9998), \nivec2(30972, 9810), \nivec2(44748, 9923), \nivec2(56710, 10290), \nivec2(65145, 10494), \nivec2(71320, 10281), \nivec2(80582, 10068), \nivec2(84840, 9430), \nivec2(84734, 6874), \nivec2(0),\nivec2(84840, 19543), \nivec2(89631, 19011), \nivec2(90589, 14114), \nivec2(90802, 9962), \nivec2(91867, 5810), \nivec2(0), \nivec2(21390, 24121), \nivec2(18409, 24441), \nivec2(16918, 23056), \nivec2(16918, 15711), \nivec2(18515, 14540), \nivec2(22773, 13794), \nivec2(33100, 13475), \nivec2(40872, 14007), \nivec2(46621, 15391), \nivec2(46940, 19011), \nivec2(0), \nivec2(54499, 17201), \nivec2(58012, 16137), \nivec2(64080, 15711), \nivec2(76004, 16137), \nivec2(83988, 16882), \nivec2(83030, 22524), \nivec2(82817, 25718), \nivec2(78346, 25825), \nivec2(0), \nivec2(35096, 5822), \nivec2(35397, 9661), \nivec2(0), \nivec2(43753, 4994), \nivec2(43678, 9511), \nivec2(0), \nivec2(47442, 5596), \nivec2(47291, 9360), \nivec2(0), \nivec2(57303, 5370), \nivec2(58282, 9962), \nivec2(0), \nivec2(35698, 29309), \nivec2(30881, 29384), \nivec2(25536, 28331), \nivec2(22600, 26373), \nivec2(20944, 23964), \nivec2(23127, 21781), \nivec2(25912, 20050), \nivec2(29977, 19523), \nivec2(36526, 19749), \nivec2(41194, 21254), \nivec2(44657, 23212), \nivec2(0), \nivec2(57981, 26147), \nivec2(60691, 23212), \nivec2(64982, 21405), \nivec2(69348, 20953), \nivec2(74844, 22007), \nivec2(78005, 23889), \nivec2(78382, 27201), \nivec2(76424, 29309), \nivec2(73865, 30965), \nivec2(0),\nivec2(67767, 31492), \nivec2(64530, 31718), \nivec2(60842, 30815), \nivec2(59035, 28406), \nivec2(57830, 25470), \nivec2(0), \nivec2(32055, 27308), \nivec2(29157, 26216), \nivec2(28781, 24560), \nivec2(29759, 22904), \nivec2(31416, 22829), \nivec2(35255, 23883), \nivec2(36158, 25313), \nivec2(35255, 26894), \nivec2(32055, 27308),\nivec2(0), \nivec2(68528, 28851), \nivec2(66269, 28762), \nivec2(64979, 27628), \nivec2(65592, 25463), \nivec2(67851, 24410), \nivec2(69959, 24936), \nivec2(70636, 26743), \nivec2(0), \nivec2(67141, 27343), \nivec2(68302, 26593), \nivec2(0), \nivec2(31265, 25087), \nivec2(32770, 25162),\nivec2(0)\n);",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "float drawsegment(vec2 a, vec2 b, vec2 p, int frA, int frB){\n    a *= 0.00001;\n    b *= 0.00001;\n    a += hash21(frA+iFrame) * 0.0025;\n    b += hash21(frB+iFrame) * 0.0025;\n    vec2 ba = b - a;\n    float u = clamp(dot(p - a, ba)/dot(ba, ba), 0.0, 1.0);\n    vec2 q = a + u*ba;\n    return distance(p, q);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    float drawing = 1.;\n    float cycle = fract(float(iFrame) / 22.);\n    int start = int(round(cycle * 352.));\n    int end = start + 16;\n\n    for (int i=start; i < end; i++){\n        int frA = i;\n        int frB = i+1;        \n\n        if ( points[frA] != ivec2(0) && points[frB] != ivec2(0) ) {\n            drawing = min(drawing, drawsegment(vec2(points[frA]), vec2(points[frB]), uv, frA, frB) );\n        }\n    }\n    \n    drawing += (texture(iChannel1, uv + hash21(iFrame)*0.25 ).x - 0.5) * 0.01; //chalky\n    drawing = smoothstep(0.01, -0.01, drawing);\n    fragColor = max( vec4(drawing), texture(iChannel0, uv) *0.99) ;\n    fragColor *= smoothstep(0.00,0.05,sin(iTime*0.25)*.5+.5); //wipe\n    //fragColor = vec4(drawing);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 48,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}