{
    "Shader": {
        "info": {
            "date": "1635318570",
            "description": "working on simplifying a colorramp",
            "flags": 0,
            "hasliked": 0,
            "id": "fdVSWV",
            "likes": 3,
            "name": "terrain colorramp simplification",
            "published": 3,
            "tags": [
                "colorramp"
            ],
            "usePreview": 0,
            "username": "Arrangemonk",
            "viewed": 214
        },
        "renderpass": [
            {
                "code": "    #define pi 3.141592653589\n    #define tau 6.28318530718\n    vec3 bot = vec3(15., 110., 161.)/255.;\n    vec3 mid1 =vec3(150., 252., 227.) /255.;\n    vec3 mid2 = vec3(250., 252., 227.) /255.;\n    vec3 top = vec3(28., 150.,  74.)/255.;\n    \nconst vec3 biome[] = vec3[](    \nvec3( 15., 110., 161.) /255.,\nvec3( 77., 178., 179.) /255.,\nvec3(150., 252., 227.) /255.,\nvec3(250., 252., 227.) /255.,\nvec3( 28., 150.,  74.) /255.\n);\n\n//https://www.shadertoy.com/view/Xt23zV\nfloat linearstep(float edge0, float edge1, float x)\n{\n    return  clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n}\n    \n    \n    vec3 rampBiome(float x){\n    vec3 col = biome[0];\n    float step_size = 1./(float(biome.length())-1.);\n    for(int i = 0; i < biome.length()-1; i++){\n        col =mix(col, biome[i+1], linearstep(float(i)*step_size, (float(i)+1.)*step_size, x));\n    }\n    return col;\n}\n\nfloat Mask(float x){\n    x= x -.5;\n    return .5+sign(.5*(.25 -x*x))*.5;\n}\n\nvec3 colorramp(float x)\n{\n     x = mix(x,x*x,.5);\n\n     vec3 col =   mix( bot,mid1,x * 3.)     * Mask(x*3.);\n     col +=       mix(mid1,mid2,x * 3. -1.) * Mask(x*3. -1.);\n     return col + mix(mid2, top,x * 3. -2.) * Mask(x*3. -2.);\n}\n\nvec3 colorramp2(float inx)\n{   \n    inx = clamp(inx,.0001,.9999);\n    float x = 2.* inx * inx;\n     vec3 col = (.4 + .4*cos((1.-x)*vec3(4,2,1)))*Mask(x) \n     + (.4 + .4*cos((x-1.)*vec3(2,1.25,2)))*Mask(x-1.);\n     col = mix(vec3(.4,.7,.6),mix(col, col*col,.5)*2.,.5);\n     return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     vec2 uv = fragCoord/iResolution.xy;\n     vec3 col = colorramp2(uv.x);\n     if(uv.y > .33)\n     col = colorramp(uv.x);\n      if(uv.y > .66)\n     col = rampBiome(uv.x);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}