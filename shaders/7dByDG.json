{
    "Shader": {
        "info": {
            "date": "1644060465",
            "description": "Small fun shader",
            "flags": 0,
            "hasliked": 0,
            "id": "7dByDG",
            "likes": 3,
            "name": "rgb circles combining",
            "published": 3,
            "tags": [
                "rgb"
            ],
            "usePreview": 0,
            "username": "MarcoF",
            "viewed": 215
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n\nbool negative = false;\n\nfloat circle(vec2 uv, vec2 position, float radius, float blur)\n{\n\treturn 1.0 - smoothstep(radius - blur, radius + blur, length(uv - position));\n}\n\nvec2 rotate(vec2 original, float angle, vec2 pivot) \n{\n    mat2 rotation  = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    vec2 final = original;\n    final -= pivot;\n    final *= rotation;\n    final += pivot;\n    return final;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// vertical range [-1, +1]\n    vec2 uv = (2.*fragCoord - (fragColor.xy = iResolution.xy) ) / fragColor.y ;\n    \n    vec3 color = vec3(0.0);\n    \n    float t = cos(iTime * 0.5) * .5;\n    \n\tcolor.r = circle(uv, vec2(0., 0. + t), 0.4, 0.01);\n    \n    uv = rotate(uv, 2. * PI / 3., vec2(0.0));\n    \n    color.g = circle(uv, vec2(0., 0. + t), 0.4, 0.01);\n    \n    uv = rotate(uv, 2. * PI / 3., vec2(0.0));\n    \n    color.b = circle(uv, vec2(0., 0. + t), 0.4, 0.01);\n    \n    if (negative) color = 1. - color;\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}