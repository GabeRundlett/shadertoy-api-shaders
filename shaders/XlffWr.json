{
    "Shader": {
        "info": {
            "date": "1511558499",
            "description": "short implementation of mandelbrot visualization ",
            "flags": 0,
            "hasliked": 0,
            "id": "XlffWr",
            "likes": 3,
            "name": "mandelzoomquick",
            "published": 3,
            "tags": [
                "mandelbrotzoom"
            ],
            "usePreview": 0,
            "username": "t4ce",
            "viewed": 524
        },
        "renderpass": [
            {
                "code": "#define mul(a, b) vec2(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // zoom\n    float z = 1.0 - (float(iTime) / 10.0);\n    // slightly translate the view\n    float t = -0.05* float(iTime);\n    // map -2 to 1 on X Axis and 1 to -1 on Y Axis to iResolution\n    vec2 coord = vec2(fragCoord.x / iResolution.x * (3.0 * z) - (2.0 * z) + t, fragCoord.y / iResolution.y * (2.0 * z) - (1.0 * z) + t);  \n    // z0 = 0\n    vec2 cm = vec2(0, 0);\n    int j = 0;\n    for(int i = 0; i < 25; i++){\n        j++;\n        // zn = zn-1 + c\n        cm = mul(cm, cm);\n    \tcm = cm + coord;\n        if (dot(cm,cm) > 4.0)\n        \tbreak;\n    }\n    // grayscale\n    fragColor = vec4(j) / 24.0;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}