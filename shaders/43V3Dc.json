{
    "Shader": {
        "info": {
            "date": "1718339313",
            "description": "fractal visualizer (hacked by 0rblivius)",
            "flags": 32,
            "hasliked": 0,
            "id": "43V3Dc",
            "likes": 4,
            "name": "fractal visualizer",
            "published": 3,
            "tags": [
                "fractal",
                "cindeshader",
                "geomerty"
            ],
            "usePreview": 0,
            "username": "orblivius",
            "viewed": 144
        },
        "renderpass": [
            {
                "code": "// Fork of \"fractal generated\" by nayk. https://shadertoy.com/view/M3VGDV\n// 2024-06-14 04:11:46\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "/* \n\n    Another fun hack by 0rblivius :)\n    --------------------------------\n\n    sourses https://www.shadertoy.com/view/4tyfWy https://www.shadertoy.com/view/Nsy3Dy \n\n    Thank you gaz for your excellent work in the field of fractal geometry,\n    good luck in your creative work \n\n    Let every useful work that helps others in work \n    or knowledge bring joy and income, not taking away from another, \n    but multiplying both your own benefits and the benefits of others... \n    with gratitude by default, how at least something works by default in the world\n\n*/\n\n\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)cos((h)*6.3+vec3(0,23,21))*.5+.5\nvec3 aces(vec3 x) {\nreturn clamp((x * (2.51 * x + 0.03)) / (x * (2.43 * x + 0.59) + 0.14), 0.0, 1.0);\n}\n\nvec3 hueShift(vec3 col, float shift){\nvec3 m = vec3(cos(shift), -sin(shift) * .57735, 0);\nm = vec3(m.xy, -m.y) + (1. - m.x) * .33333;\nreturn mat3(m, m.zxy, m.yzx) * col;\n}\n\nfloat happy_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\n \n void mainImage(out vec4 O, vec2 C)\n{\n   vec4 col = vec4(0,0,0,1);\n    vec2 uv = (C - .5*iResolution.xy ) / iResolution.y;\n    vec3 p,r=iResolution,\n    d=normalize(vec3((C-.5*r.xy)/r.y,1));  \n    \n  \n    for(float i=0.,g=0.,e,s;\n        ++i<80.;\n        col.rgb+=mix(r/r,H(log(s)),0.5)*.05*exp(-.45*i*i*e))\n    {\n        p=R(p,(vec3(0)),0.1);\n        float t=(iTime*.1);\n        p.xy*=mat2(cos(t),sin(t),-sin(t),cos(t) );\n        vec2 v = vec2(sqrt(p.x*p.x+p.y*p.y+p.z*p.z),0.25);\n        \n        float snd = ((fract(iTime*.1),.05*texture(iChannel1, v).r));\n        p=g*d-vec3(0.,.0,1.0);\n       \n        \n       \n        s=4.;\n        vec4 q=vec4(p,abs(sin(iTime*.2+snd)));\n   \n\t\tfor(int j=0;j++<10;)\n        \n            q=abs(q),\n            q=q.x<q.y?q.zwxy:q.zwyx,\n            q=q.z<q.y?q.xyzw:q.zywx,\n            \n            s*=e=2.25/min(dot(q,q),min(0.54+(snd),0.9)),\n            q=q*e-vec4(0,4,.8,3);\n         \n        g+=e=min(\n            length(q.w)/s,\n            length(cross(q.xyw,normalize(vec3(1,2,3))))/s-.0002\n        );\n    }\n   \n  float anim = fract(iTime * .2)+texture(iChannel1,vec2(0.08,0.75)).r ;  // anim between 0.9 - 1.1 \n    col+= vec4(happy_star(uv, anim) * vec3(0.35,0.2,0.15)*.05, 1.0);\n    \n    col.rgb=pow(hueShift(col.rgb,iTime*.2),vec3(8));\n    \n   vec4 c = texture(iChannel0, C.xy/iResolution.xy);\n  \n    O = vec4(aces(col.rgb*.5)*.2 + c.rgb*.8,1.);\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "music",
                        "id": 13,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}