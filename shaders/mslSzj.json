{
    "Shader": {
        "info": {
            "date": "1669874454",
            "description": "... a simple flag of Romania build for 1 december 2022, with the test of iChannel0: the anthem of Romania.\n",
            "flags": 64,
            "hasliked": 0,
            "id": "mslSzj",
            "likes": 2,
            "name": "the flag of Romania - 006",
            "published": 3,
            "tags": [
                "math",
                "flag",
                "romania",
                "catafest"
            ],
            "usePreview": 0,
            "username": "catafest",
            "viewed": 251
        },
        "renderpass": [
            {
                "code": "//The flag is coincidentally very similar to the civil flag of Andorra and \n//the state flag of Chad. \n//The similarity with Chad's flag, which is identical apart from allowing a broader range of shades of \n//blue, yellow and red, has caused international discussion. \n//see https://en.wikipedia.org/wiki/Flag_of_Romania\n//the gl_FragColor is a vec4 type of float values in the range 0 to 1.\n\n// 01 december 2022\n\n// based on my old shader https://www.shadertoy.com/view/tsGXRy\n// but rebuild to understand \n// how the time, shadow and colors can be linked \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Output to screen\n    \n    // defined time \n    float t = 1.5*iTime;\n    \n    // defined wave time\n\tuv.y += 0.131*sin(3.0*uv.x-t);\n    \n    // defined shadows formula\n    float formula_waves_sim = 1.0+0.4*sin(5.0*(uv.x*+uv.y+cos(1.0*texture(iChannel0, uv).y+5.1*uv.y)+0.012*t));\n    \n   \n    // create gray color \n    vec4 col = vec4(0.9,0.9,0.9,1)*vec4(formula_waves_sim);\n    \n    // multiply with each color of flag \n    \n    // fill the screen with red\n    fragColor = vec4(1,0,0,0)*col;\n    // fill the 2/3 of size with yellow color\n    if(uv.x<(1.0/1.5))\n    fragColor = vec4(1,1,0,0)*col;\n    // fill the last 1/3 with the blue color \n    if(uv.x<1.0/3.0)\n    fragColor = vec4(0,0,1,0)*col;\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 30581,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/nationalanthems/desteapta-te-romane"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}