{
    "Shader": {
        "info": {
            "date": "1619377306",
            "description": "played around with a bunch of sine functions\n",
            "flags": 0,
            "hasliked": 0,
            "id": "tsKSWV",
            "likes": 5,
            "name": "merging sine tubes",
            "published": 3,
            "tags": [
                "sine"
            ],
            "usePreview": 0,
            "username": "LobsterCrew",
            "viewed": 260
        },
        "renderpass": [
            {
                "code": "float f(float x, float y)\n{\n    float arg = .9*iTime + 13.*y + 2.*sin(.3*iTime + 4.*x) - 20.*(x+.5)*y;\n\treturn clamp(.7*cos(arg) + .2*cos(3.*arg) + .05*cos(5.*arg), -1., 1.);\n}\n\nfloat g(float x, float y)\n{\n    float arg = .9*iTime + 15.*x*1.+ .5*cos(.1*iTime) + 2.*cos(1.2*iTime + 10.*y);\n\treturn clamp(-abs(.5*cos(arg)) + .7*cos(3.*arg) + .3*cos(5.*arg- 1.), -1., 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates\n    vec2 q =(fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    vec2 res = vec2(f(q.x, q.y), g(q.x, q.y));\n    vec3 col = vec3(.0, .0, .5) + vec3( -1., .0, .5)*sqrt(res.x)*res.y;\n    col += vec3(.0, 1., .0)*res.x*res.x * res.y*res.y;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}