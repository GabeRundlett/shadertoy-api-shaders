{
    "Shader": {
        "info": {
            "date": "1544559407",
            "description": "something that looks like the volume control in the game osu!",
            "flags": 0,
            "hasliked": 0,
            "id": "ltKBRd",
            "likes": 3,
            "name": "osu volume control dial thing",
            "published": 3,
            "tags": [
                "osu"
            ],
            "usePreview": 0,
            "username": "robin_be",
            "viewed": 513
        },
        "renderpass": [
            {
                "code": "#define PI2 1.570796326795\n#define PI 3.14159265359\n#define TWOPI 6.28318530718\n\n#define RADIUS .3777\n#define CIRCLE_WIDTH .0333\n#define OUTER_RADIUS RADIUS + CIRCLE_WIDTH\n#define INNER_RADIUS RADIUS - CIRCLE_WIDTH\n#define GLOW_WIDTH .085\n#define GLOW_EXTRA_WIDTH .015\n#define TRANSITION_WIDTH .001\n#define GLOW_OVERFLOW_RADIANS 15.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.yy;\n    uv.x -= (iResolution.x - iResolution.y) / iResolution.x;\n    float tang = (sin(iTime) + 1.) / 2. * 1.1 - .05;\n    //tang = iMouse.y / iResolution.y * 1.2 - .1;\n    tang = TWOPI * clamp(tang, 0., 1.);\n    float minbgalpha = .3;\n    \n    vec2 d = uv - vec2(.5);\n    float dl = length(d);\n    \n    float pang = atan(d.y, d.x) - PI2;\n    pang += step(pang,0.) * TWOPI;\n    \n    float extraglow = smoothstep(.2, .0, tang) * GLOW_EXTRA_WIDTH;\n    \n    float blue =\n        smoothstep(INNER_RADIUS - GLOW_WIDTH - extraglow, INNER_RADIUS, dl)\n        *smoothstep(OUTER_RADIUS + GLOW_WIDTH + extraglow, OUTER_RADIUS, dl)\n        ;\n    float inactivebluealpha = .5;\n    float bluefade = radians(GLOW_OVERFLOW_RADIANS);\n    float maxblue = 1. - clamp((tang - TWOPI + radians(2.)) / radians(2.), 0., inactivebluealpha);\n    blue *= clamp(max((pang - (tang - bluefade)) / bluefade, 1. - pang / bluefade), (1. - inactivebluealpha), maxblue);\n\n    float white = 1. - .4 * step(pang, tang);\n    \n    float x =\n        smoothstep(RADIUS - CIRCLE_WIDTH - TRANSITION_WIDTH, RADIUS - CIRCLE_WIDTH, dl)\n        *smoothstep(RADIUS + CIRCLE_WIDTH, RADIUS + CIRCLE_WIDTH - TRANSITION_WIDTH, dl);\n    fragColor = (1. - x) * vec4(vec3(.3, .8, 1.) * blue, blue * (1. - minbgalpha)) + x * vec4(white, white, white, 1.) + (1. - smoothstep(.49, .495, dl)) * vec4(0., 0., 0., minbgalpha);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}