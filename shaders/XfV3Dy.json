{
    "Shader": {
        "info": {
            "date": "1713622432",
            "description": "With more params. Demo:\n- https://youtu.be/O2hJp2yUBy8",
            "flags": 0,
            "hasliked": 0,
            "id": "XfV3Dy",
            "likes": 9,
            "name": "AF - tm bus kaleido",
            "published": 3,
            "tags": [
                "kaleidoscope",
                "animationfractal"
            ],
            "usePreview": 0,
            "username": "tristanC",
            "viewed": 204
        },
        "renderpass": [
            {
                "code": "#ifndef ANIMATION_FRACTAL\n// Simulate the pitch inputs using a smoothed stairs function STEP\n#define STEP1(x) ((x) - sin(x))\n#define STEP(x, offset, amp) (STEP1(STEP1(offset + x * amp)) * .15)\n#define is (iTime)\n\nfloat pitches[9];\nvoid genPitches() {\n  pitches[0] = STEP(is, 1., 1.);\n  pitches[1] = STEP(is, 2., 2.);\n  pitches[2] = STEP(is, 3., 3.);\n  pitches[3] = STEP(is, 4., 4.);\n  pitches[4] = STEP(is, 5., 1.);\n  pitches[5] = STEP(is, 6., 2.);\n  pitches[6] = STEP(is, 7., 3.);\n  pitches[7] = STEP(is, 8., 4.);\n  pitches[8] = STEP(is, 1., 5.);\n}\n#define ipitch_1 pitches[0]\n#define ipitch_2 pitches[1]\n#define ipitch_3 pitches[2]\n#define ipitch_4 pitches[3]\n#define ipitch_5 pitches[4]\n#define ipitch_6 pitches[5]\n#define ipitch_7 pitches[6]\n#define ipitch_8 pitches[7]\n#define ipitch_9 pitches[8]\n\n#define icolor (iTime*.5)\n#define imoveFWD (iTime)\n#endif\n\n#define FAR 60.\n#define PI 3.14159\nmat2 rot(float a) {\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c,-s,s,c);\n}\n//@iq\nfloat sdBox( vec3 p, vec3 b ){\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nvec2 boxes(vec3 p) {\n    vec2 h,t = vec2(1000,0);\n    vec3 q = p;\n    q.xy *= rot(ipitch_6);\n    q.zx *= rot(-ipitch_8);\n    h = vec2(sdBox(abs(q)-vec3(4,0,0), vec3(1,4,1))-.1, 1);\n    t = h.x<t.x ? h : t;\n\n    q = p;\n    q.xy *= rot(ipitch_7);\n    q.zx *= rot(-ipitch_9);\n    h = vec2(sdBox(abs(q)-vec3(0,4,2), vec3(4,1,1))-.1, 1);\n    t = h.x<t.x ? h : t;\n    return t;\n}\n\nvec2 map(vec3 p) {\n    // kaleidoscope effect adapted from @NuSan\n    for (float i=0.; i<4.; i++) {\n        p = abs(p);\n        p.xy *= rot(sin(ipitch_1*.5 + i*2.));\n        p -= i*mix(1.,1.5,sin(ipitch_2)*.5+.5);\n    }\n    p.xy *= rot(ipitch_3*.5);\n    p.yz *= rot(ipitch_4*.5);\n    vec2 t = min(boxes(p), boxes(p*2.)/2.);\n    return t;\n}\n\nvec3 normal(vec3 p) {\n    vec2 e = vec2(.001,0);\n    return normalize(map(p).x - vec3(map(p-e.xyy).x, map(p-e.yxy).x, map(p-e.yyx).x));\n}\n\nvoid cam(inout vec3 p) {\n    p.xz *= rot(iTime*.2);\n}\n\n#ifdef ANIMATION_FRACTAL\nvoid main() {\n    vec2 uv = -1. + 2*inUV;\n    uv *= 2.;\n    uv.y *= scene.screenRatio;\n#else\nvoid mainImage( out vec4 oColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv*2.-1.;\n    uv.x *= iResolution.x/iResolution.y;\n    genPitches();\n#endif\n    vec3 col = vec3(0);\n\n    vec3 ro = vec3(0,0,-30.);\n    vec3 rd = normalize(vec3(uv, 1));\n\n    //cam(ro);cam(rd);\n\n    float t = 0.;\n    for (float i=0.; i<100.; i++) {\n        vec3 p = ro + rd*t;\n        vec2 h = map(p);\n        float d = h.x;\n        float m = h.y;\n        t += d;\n        if (t>FAR) {\n            break;\n        }\n        if (d < .001) {\n            vec3 sn = normal(p);\n            col = .5+.5*cos((sn*.3+.15)*PI+icolor+vec3(0,4,8).yxz + dot(sn,vec3(1))*PI );\n            break;\n        }\n        float a = atan(uv.y,uv.x);\n        col += (1./d *.02)*(.5*.5+cos(imoveFWD+a+vec3(0,2,4)));\n    }\n\n#ifdef ANIMATION_FRACTAL\n    col = pow(col, vec3(1.2, .9, .9) * 2.);\n#endif\n    oColor.xyz = pow(col,vec3(.4545));\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}