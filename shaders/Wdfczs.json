{
    "Shader": {
        "info": {
            "date": "1585321520",
            "description": "my first ray marcher",
            "flags": 0,
            "hasliked": 0,
            "id": "Wdfczs",
            "likes": 1,
            "name": "First Ray Marcher",
            "published": 3,
            "tags": [
                "raymarching"
            ],
            "usePreview": 0,
            "username": "brechrt",
            "viewed": 352
        },
        "renderpass": [
            {
                "code": "#define MAX_STEPS 100\n#define MAX_DIST 100.\n#define SURF_DIST .01\n\nfloat getDist(vec3 p){\n\tvec4 s = vec4(0., 1., 6., 1.);\n    float sphereDist = length(p-s.xyz)-s.w;\n    float planeDist = p.y;\n    float d = min(sphereDist, planeDist);\n    \n    return d;\n}\n\nfloat rayMarch(vec3 ro, vec3 rd){\n\tfloat dO = 0.;\n        \n  \tfor(int i = 0; i < MAX_STEPS; i++){    \t\n   \t\tvec3 p = ro + rd*dO;\n        float ds = getDist(p);\n        dO += ds;\n        if(ds < SURF_DIST || dO > MAX_DIST) break;\n    }\n    \n    return dO;\n}\nvec3 getNormal(vec3 p){\n\tvec2 e = vec2(.01, .0);\n    float d = getDist(p);\n    vec3 n = d - vec3(\n        getDist(p - e.xyy),\n        getDist(p - e.yxy),\n        getDist(p - e.yyx));\n    return normalize(n);\n}\n\nfloat getLight(vec3 p){\n \tvec3 lightPos = vec3(0., 5., 6.);\n    lightPos.xz += vec2(cos(iTime), sin(iTime))*2.;\n    vec3 l = normalize(lightPos - p);\n    vec3 n = getNormal(p);\n    float diff = clamp(dot(l, n), 0., 1.);\n    \n    float d = rayMarch(p+n*SURF_DIST*2., l);\n    if(d < length(p-lightPos)) diff*= .1;\n    return diff;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0);\n    \n    vec3 ro =  vec3(0., 1., 0.);\n    vec3 rd = normalize(vec3(uv.x, uv.y, 1.));\n    \n    float d = rayMarch(ro, rd);\n \tvec3 p = ro + rd*d;\n    \n    col = vec3(getLight(p));\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}