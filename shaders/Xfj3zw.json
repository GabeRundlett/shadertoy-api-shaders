{
    "Shader": {
        "info": {
            "date": "1703975657",
            "description": "parallax basics",
            "flags": 0,
            "hasliked": 0,
            "id": "Xfj3zw",
            "likes": 1,
            "name": "parallax basics",
            "published": 3,
            "tags": [
                "parallax"
            ],
            "usePreview": 0,
            "username": "jakedowns",
            "viewed": 112
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy/4.0;\n    vec2 ouv = uv;\n    uv.x = uv.x * sin(iTime);\n    \n    \n    // Calculate the parallax effect based on the vertical position\n    // The center of the screen (uv.y = 0.5) will have no parallax.\n    float parallax = (uv.y - 0.5) * (sin(iTime*.1)*2.0)-1.0; // Ranges from -1 at the top to 1 at the bottom\n\n    // Adjust the amount of horizontal scroll\n    // You can tweak the factor '4.0' to change the scroll speed\n    uv.x += iTime * parallax * 0.1;\n\n    // Wrap the UV coordinates horizontally\n    uv.x = fract(uv.x);\n\n    // Time varying pixel color\n    vec3 col = vec3(uv.x,uv.y,sin(iTime));\n    \n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}