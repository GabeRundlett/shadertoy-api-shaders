{
    "Shader": {
        "info": {
            "date": "1690653616",
            "description": "SomeRandomShader",
            "flags": 0,
            "hasliked": 0,
            "id": "dtXcDn",
            "likes": 1,
            "name": "SomeRandomShader",
            "published": 3,
            "tags": [
                "idk"
            ],
            "usePreview": 0,
            "username": "Lop807667",
            "viewed": 124
        },
        "renderpass": [
            {
                "code": "float sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\nfloat sdRoundedX( in vec2 p, in float w, in float r, in float offset )\n{\n    p = abs(p);\n    return length(p-min(p.x+p.y,w)*(44.1*sin(iTime*0.15+offset)+2.7)*0.1) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float size = 0.13;\n    vec2 uv = size*vec2(fragCoord.x/iResolution.x,fragCoord.y/iResolution.y)-size*0.5;\n    vec2 uv0 = uv*0.11;\n    float sizefract= 3341.141;\n    uv = fract(((uv*30.1)))*sizefract-sizefract*0.5;\n    float dis =11.0*sin(iTime*0.015+length(uv0));\n    float ChangeFactor = length(uv0)*0.25*((sin(iTime*0.5+length(uv0))+2.3));\n    float ChangeFactor2 = length(uv0)*0.45*((cos(iTime*0.05+length(uv0))+4.3));\n\tfloat d = sdRoundedX( uv, dis*0.1, 3.1,4.0 );\n    float dc1 = sdRoundedX(uv*ChangeFactor*0.4, 33.100*abs((dis+1.3)*sin(0.1*iTime+3.14159265359/3.0*1.0*ChangeFactor)), -1.0,d*ChangeFactor2);\n    float dc2 = sdRoundedX(uv*ChangeFactor*0.075, 330.100*abs((dis+2.3)*sin(0.1*iTime+3.14159265359/3.0*2.0*ChangeFactor)),sin(0.1+length(uv0))*d+10.0,2.0*ChangeFactor2+length(uv0));\n    float dc3 = sdRoundedX(uv*ChangeFactor*0.095,22.100*abs((dis-3.3)*sin(0.1*iTime+3.14159265359/3.0*3.0*ChangeFactor)),cos(0.1+length(uv0))*d+1.0,3.0*ChangeFactor2+length(uv0));\n    vec3 col;\n    for( float t = 0.0; t < 5.1; t += 1.09 )\n\t{\n        dc1 = atan(dc1*0.05);\n        dc2 = sin(dc2*0.5);\n        dc3 = atan(dc3*0.05);\n        d = sin(d*0.018+length(uv0*pow(t,1.1)));\n        d = 0.001/d;\n        d = d*10.2;\n        col += vec3(3.110*abs(cos(iTime*0.3))+1.5) - \n        abs(d)*vec3(0.7,105.0,1.7)- \n        smoothstep(-0.5,0.5,(dc1)*vec3(1.13,1.33,1.05)*length(1.0/uv0))- \n        smoothstep(-0.5,0.5,(dc2)*vec3(1.13,-1.03,-0.33)*length(1.0/uv0))- \n        smoothstep(-0.5,0.5,(dc3)*vec3(-1.13,0.73,-1.05)*length(1.0/uv0));\n    }\n    \n    \n    // Output to screen\n    fragColor = vec4(0.18/col,1.0) ;\n   \n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}