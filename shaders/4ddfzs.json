{
    "Shader": {
        "info": {
            "date": "1526416295",
            "description": "Simple addition of strange lights.\nThe lights are only a sum of the absolute value of inverse functions in 2D with the \"planets\" centers for origins.\nReally easy to do.\nPretty chill !\n\n",
            "flags": 0,
            "hasliked": 0,
            "id": "4ddfzs",
            "likes": 15,
            "name": "Minimalist Galaxy",
            "published": 3,
            "tags": [
                "space"
            ],
            "usePreview": 0,
            "username": "rodousse",
            "viewed": 814
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159\n\n#define ROWS 3\n#define NB_BALLS_PER_ROW 7\n#define ROTATION_ANGLE PI/7.0\n\n\nfloat ballProximity(float radius, float time, vec2 fragCoord)\n{\n    float proximity = 0.0;\n\tvec2 circleCenter = vec2(0.0,0.0);\n    \n    //New galaxy center position\n    circleCenter = vec2(cos(time)*radius , sin(time)*radius);\n    \n    //squeeze the galaxy vertically\n    circleCenter /= vec2(1.0,2.5);\n    \n    float cosRot = cos(ROTATION_ANGLE);\n    float sinRot = sin(ROTATION_ANGLE);\n    //Rotate\n    circleCenter = vec2(cosRot* circleCenter.x + -sinRot*circleCenter.y,\n    \t\t\t\t\tsinRot*circleCenter.x + cosRot*circleCenter.y);\n    \n    //Center on the screen\n    circleCenter += vec2(iResolution.x/2.0,iResolution.y/2.0);\n    \n    proximity = distance(fragCoord, circleCenter);\n    \n    ///lol looks like eyes without this line commented\n    //proximity -= distance(fragCoord, (iResolution.xy/2.0))/50.0;\n    return 1.0/proximity;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    float proximity = abs(1.0/(fragCoord.x - iResolution.x/2.0));\n    vec3 col = vec3(0.0);\n    \n    float time= (1.0*iTime);\n    float radius = 50.0;\n    float lightReduce = 0.5;\n    \n    //add center of galaxy\n    col = col + vec3(2.0*ballProximity(0.0, time, fragCoord));\n    \n    //add all the other planets/Suns/whateveryouwant\n    for(int i = 0; i < ROWS; i++)\n    {\n        \n        for(int j = 0; j < NB_BALLS_PER_ROW; j++)\n        {\n            col = col + vec3(lightReduce*ballProximity(radius, time + (2.0*PI*float(j))/ float(NB_BALLS_PER_ROW), fragCoord));\n        }\n        \n        radius = radius*2.0;\n    \ttime = time/2.0;\n        lightReduce *= 2.0;\n    }\n    \n    //Mid Clip to negative color\n    //col = mix(col, 1.0-col, clamp(fragCoord.x-iResolution.x/2.0,0.0,1.0));\n    \n    fragColor = vec4(col,1.0);\n}\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}