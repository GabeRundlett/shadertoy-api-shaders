{
    "Shader": {
        "info": {
            "date": "1647744644",
            "description": "looks neat",
            "flags": 0,
            "hasliked": 0,
            "id": "NlfyDn",
            "likes": 2,
            "name": "Transparent Boxes",
            "published": 3,
            "tags": [
                "2d",
                "video",
                "transparent",
                "box"
            ],
            "usePreview": 0,
            "username": "kbx",
            "viewed": 247
        },
        "renderpass": [
            {
                "code": "vec3 cutSquare(vec2 uv, vec3 col, vec2 pos, vec2 size) {\n  if (uv.x > pos.x && uv.x < size.x + pos.x) {} else {\n    col = vec3(.0);\n  }\n\n  if (uv.y > pos.y && uv.y < size.y + pos.y) {} else {\n    col = vec3(.0);\n  }\n  return col;\n}\n\nvec3 tex2D(sampler2D _tex, vec2 _p) {\n  vec3 col = texture(_tex, _p).xyz;\n  if (0.5 < abs(_p.x - 0.5)) {\n    col = vec3(0.1);\n  }\n  return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n  vec2 uv = fragCoord / iResolution.x;\n  vec4 m = iMouse / iResolution.x;\n  vec3 col = tex2D(iChannel0, uv);\n  vec3 cola;\n  if (m.z > 0.0) \n  {\n    for (int i = 1; i != 11; i++) {\n      cola += cutSquare(uv, col, vec2(0.1 * float(i) - 0.1, mod(m.y + 0.2, 1.) - 0.5 + (0.2 + sin(0.2 + m.y * float(i)) / 10.)), vec2(0.1));\n    }\n  } else {\n    for (int i = 1; i != 11; i++) {\n      cola += cutSquare(uv, col, vec2(0.1 * float(i) - 0.1, mod(iTime, 1.) - 0.5 + (0.2 + sin(iTime * float(i)) / 10.)), vec2(0.1));\n    }\n  }\n  fragColor = vec4(cola, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}