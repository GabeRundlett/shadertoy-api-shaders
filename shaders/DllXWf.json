{
    "Shader": {
        "info": {
            "date": "1675435695",
            "description": "je dédie ce Haïkü à ma mère <3",
            "flags": 0,
            "hasliked": 0,
            "id": "DllXWf",
            "likes": 0,
            "name": "Soleil d'hiver et reflets du lac",
            "published": 3,
            "tags": [
                "haku"
            ],
            "usePreview": 0,
            "username": "raphaeldl",
            "viewed": 138
        },
        "renderpass": [
            {
                "code": "float random (in vec2 st) {                                                     //NOISE PREPARATION\n    return fract(sin(dot(st.xy, vec2 (12.9898, 78.233)))*43758.5453123);\n    }\n\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract (st);\n    \n    float a = random (i);\n    float b = random (i + vec2(.0, 0.0));\n    float c = random (i + vec2(5.0, 1.0));\n    float d = random (i + vec2(1.0, 50.0));\n    \n    vec2 u = f*f*(3.0-2.0*f);\n    \n    return mix(a, b, u.x) + (c - a)* u.y * (1.0 -u.x) + (d- b) * u.x *u.y;\n}\n    \n    \n    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0 * fragCoord/iResolution.xy - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //UV\n    uv.y += sin((mix(uv.x, uv.y, iTime)));\n    vec2 uv1 = uv + vec2(-0.25, 0.0) + sin(uv.y * 40.0) * 1.2;\n    vec2 uv2 = uv + vec2(0.25, 0.0);\n    vec2 uv3 = 2.0 * fragCoord/iResolution.xy - 1.0; //UV de base\n    \n   \n    float MonNoise = noise(uv1);\n    //FORMES\n                //Circles\n    float circle1 = step(length(uv1)*MonNoise, sin(iTime*3.));   //propagation rouge\n    float circle2 = step(length(uv2)*MonNoise, sin(iTime*4.));   //propagation bleu\n    float circle3 = step(length(uv), sin(iTime*50.) + 1.6);\n    \n    float r = (length(uv.x * uv.y));\n    \n    float circle4 = step(length(uv3), 0.9);\n     \n    \n    \n    \n    float l = length( uv );                                          //NOISE\n\tfloat a = atan( uv.x, uv.y );\n\tfloat w = texture( iChannel0, vec2( abs(a)/6.28,1.0) ).x;\t\n\tfloat t = 3.0*sqrt(abs(w-0.5));\n\tfloat f = 0.0;\n\tif( r<t ) f = (1.0-r/t);\n    \n    \n    \n    //COLOR\n    vec3 col = vec3(1.0,0.0,0.0) * circle1;\n    col += vec3(0.0, 1.0, 1.0) * circle2;\n    col += step(fract(uv.x *  20.0), 0.5) * circle3;\n    col += step(length(uv), 1.1) * r; \n    col += vec3(abs(ceil(mix(uv.x, uv.y, 0.8)))), 0.0, floor((uv3.y)*0.1) * circle4;\n    col += pow( vec3(f), vec3(1.5,1.1,0.8) ); \n     \n     \n    //col += step(fract(noise(uv*5.0)), 0.5) ;\n    \n    \n    fragColor = vec4(col, 1.0);\n  \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}