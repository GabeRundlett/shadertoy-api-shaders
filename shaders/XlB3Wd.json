{
    "Shader": {
        "info": {
            "date": "1433450536",
            "description": "the same as 4 but with another coloration attempt",
            "flags": 0,
            "hasliked": 0,
            "id": "XlB3Wd",
            "likes": 8,
            "name": "Fractal Experiment 5",
            "published": 3,
            "tags": [
                "fractal",
                "experiment",
                "5"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 1331
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2015\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat t = sin(iTime*.1)*.5+.5;\n    \n    vec2 s = iResolution.xy;\n    vec2 g = fragCoord.xy;\n    vec2 uv = (2.*g-s)/s.y;\n    \n    vec2 mo = s / 2. * vec2(0.986, t);\n    mo = (2.*mo-s)/s.y;\n        \n    float \n    \tx=uv.x,\n        y=uv.y,\n        m=0.;\n       \n    vec3 col = vec3(0.);\n\tvec2 res = col.xy;\n    \n    for (int i=0;i<49;i++)\n    {\n        // kali formula \n        // from http://www.fractalforums.com/new-theories-and-research/very-simple-formula-for-fractal-patterns\n     \tx=abs(x);\n        y=abs(y);\n        m=x*x+y*y;\n        x=x/m+mo.x;\n        y=y/m+mo.y;\n        \n        col = mix(col, vec3(x,y,m), fract(length(col)));\n    \tcol = smoothstep(min(x,y), max(x,y), fract(col));\n    }\n         \n        \n        \n    \n    \n    fragColor.rgb = col;\n}",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}