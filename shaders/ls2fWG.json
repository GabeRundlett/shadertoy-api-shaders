{
    "Shader": {
        "info": {
            "date": "1502041535",
            "description": "Cheap flames that works on worst android devices I could find",
            "flags": 32,
            "hasliked": 0,
            "id": "ls2fWG",
            "likes": 9,
            "name": "Cheap flames",
            "published": 3,
            "tags": [
                "flames"
            ],
            "usePreview": 0,
            "username": "afl_ext",
            "viewed": 963
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv).rgba;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define time iTime\n#define mouse (iMouse.xy/iResolution.xy)\n#define resolution iResolution.xy\n#define bb iChannel0\n\n// afl_ext 2017\n\nfloat rand2sTime(vec2 co){\n    co *= time;\n    return fract(sin(dot(co.xy,vec2(12.9898,78.233))) * 43758.5453);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 position = fragCoord.xy / iResolution.xy;\n\n\tvec3 color = vec3(0.0);\n\tfor(int i=0;i<5;i++){\n\t\tvec3 pixel = vec3(1.0 / resolution, 0.0) * float(5 + i);\n\t\tfloat a = texture(bb, position + pixel.xz).a * 0.25;\n\t\tfloat b = texture(bb, position - pixel.xz).a * 0.25;\n\t\tfloat c = texture(bb, position + pixel.zy).a * 0.25;\n\t\tfloat d = texture(bb, position - pixel.zy).a * 0.25;\n\t\tcolor -= (a+b+c+d) * 0.25 * 0.01 + 0.005 * (a+b+c+d);\n\t\tvec2 dfx = vec2(a-b, c-d);\n\t\tcolor.r += texture(bb, position - pixel.xy * dfx * 7.0 * float(5 + i)).a;\n\t}\n\tcolor.r /= 5.0;\n\tcolor.r +=  0.01 * ( rand2sTime(position));\n\tvec3 xcc = vec3(1.0, 0.8, 0.0) - (1.0 / (pow(color.r * 1.53, 14.0) * 2.0 + 1.0)) * vec3(1.0, 1.1, 0.0);\n\txcc = normalize(xcc) * sqrt(length(xcc));\n\tfragColor = vec4(xcc, color.r);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}