{
    "Shader": {
        "info": {
            "date": "1649188005",
            "description": "random test\n",
            "flags": 0,
            "hasliked": 0,
            "id": "NtByRh",
            "likes": 0,
            "name": "Random Loading screen 00",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "Karp",
            "viewed": 86
        },
        "renderpass": [
            {
                "code": "#define PI  3.14159265359\n#define TAU 6.28318530717\n\n///Inigo Quilez Signed Distance Field\n//https://iquilezles.org/articles/distfunctions2d\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\nfloat Disk(vec2 uv, vec2 center, float radius, float blur) \n{\n    float sdfCircle = length(uv-center)-radius;\n\treturn clamp(sdfCircle * (10.0/blur),0.0,1.0);\n}\n\n///UV\nvec2 CenterUV(vec2 fragCoord)\n{\n    ///Centering Operation\n\tvec2 uv = vec2( fragCoord.xy - 0.5*iResolution.xy );\n\t// [0, iResolution.x] -> [-0.5*iResolution.x, 0.5*iResolution.x]\n\t// [0, iResolution.y] -> [-0.5*iResolution.y, 0.5*iResolution.y]\n    return uv;\n}\nvec2 AspectRatioUV(vec2 fragCoord)\n{\t\n    vec2 uv = CenterUV(fragCoord.xy);\n\tuv = 2.0 * uv.xy / iResolution.y;\n    // AspectRatio = 1920/1080 = 1.778\n    // [-iResolution.x/2, iResolution.x/2] ->[-1.778, 1.778]\n\t// [-iResolution.y/2, iResolution.y/2] ->[-1, 1]\n    return uv;\n}\n\n///COLOR\nvec3 HSVcolor(vec3 RGB)\n{\n    vec4 K = vec4(1.0, 2.0/3.0, 1.0/3.0, 3.0);\n    vec3 p = abs(fract(RGB.xxx + K.xyz) * 6.0 - K.www);\n    return RGB.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), RGB.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // UV manipulation\n    vec2 uv = AspectRatioUV(fragCoord.xy);\n    uv *= 1.2;\n    \n    //Parameter\n    float time = iTime * .8;\n    \n    //Visu\n    vec3 pix = vec3(uv,0);\n    pix = vec3(0.1);\n    for(int i = 0; i < 480; i++)\n    {\n        float t = time + abs(sin(float(i)/4800.0* TAU + time));\n        vec2 pos = vec2(cos( float(i)/32.0 * TAU + t),sin(float(i)/32.0* TAU+t)) * sin(float(i)/6.0* TAU+t)\n        + vec2(0.0,0.0);\n        float circleMask = Disk(uv,pos, 0.08, .33);\n        pix = mix(HSVcolor(vec3(float(i)/1600.0, 0.95,0.95)), pix, circleMask); \n    }\n    \n\tfragColor = vec4(pix, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}