{
    "Shader": {
        "info": {
            "date": "1523252834",
            "description": "increasing number of vertices added to polygon",
            "flags": 0,
            "hasliked": 0,
            "id": "MdKyDG",
            "likes": 0,
            "name": "Incrementing Vertices",
            "published": 3,
            "tags": [
                "geometry"
            ],
            "usePreview": 0,
            "username": "cwrawls",
            "viewed": 408
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n#define INRAD 1.0\n//modify to change rotation speed\n#define ROTTIME 5.0\n//change maximum number of vertices allowed\n#define MAXPOINTS 10.0\n\nfloat CIRCRAD = 1.0;\nfloat points = 1.0;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    CIRCRAD -= (abs(fract(iTime / 10.0) - 0.5) / 0.5) * 0.95;\n    \n    points += floor((iTime + 5.0) / 20.0); \n    \n    points = mod(points, MAXPOINTS);\n    \n    points = points > 0.0 ? points : 1.0;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv *= 2.0;\n    uv -= 1.0;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n    float r = fract(iTime / ROTTIME) * (2.0 *  PI);\n    \n    uv *= mat2(cos(r), sin(r), -sin(r), cos(r));\n    \n    vec2 polar = vec2(length(uv), atan(uv.y, uv.x) + PI);\n    \n    float diagT = abs(floor(polar.y / (PI / points))) * (PI / points);\n    float tDist = abs((abs(polar.y) - diagT) - (PI /(points * 2.0)));\n    \n    float rad = mix(CIRCRAD, INRAD, tDist);\n    \n    vec3 col = vec3(0.0);\n    \n    if(polar.x <= rad) {\n        vec2 puv = vec2(polar.y / (2.0 * PI), polar.x / rad);\n\t\tcol += texture(iChannel0, puv).xyz;\n    }\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}