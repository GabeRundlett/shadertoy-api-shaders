{
    "Shader": {
        "info": {
            "date": "1539446125",
            "description": "Spectral blackbody spectrum RGB integration coupled with Correlated Color Temperature calculation and displacement along isotherms on the Planckian locus. (http://www.lrc.rpi.edu/programs/nlpip/lightinganswers/lightsources/whatisCCT.asp)",
            "flags": 0,
            "hasliked": 0,
            "id": "4tdBWH",
            "likes": 4,
            "name": "CCT Tint slider B",
            "published": 3,
            "tags": [
                "brdf",
                "colortemperature",
                "cct",
                "planckianlocus",
                "atmooshperic",
                "scatteringblackbody"
            ],
            "usePreview": 0,
            "username": "ollj",
            "viewed": 717
        },
        "renderpass": [
            {
                "code": "//self  : https://www.shadertoy.com/view/4tdBWH\n//parent: https://www.shadertoy.com/view/4dVBWR\n//parent  is more branching and less vectorized.\n\n//rather silly XYZ blackbody, possibly useful for atmpospheric scattering estimates.\n/*\nSpectral blackbody spectrum RGB integration \ncoupled with Correlated Color Temperature calculation \nand displacement along isotherms on the Planckian locus.\nhttp://www.lrc.rpi.edu/programs/nlpip/lightinganswers/lightsources/whatisCCT.asp\n*/\n\n//iterates over n samples, which is pretty bad\n//, unless you do volume marching hyperplanes anyways.\n#define SPECTRAL_SAMPLES 32\n\n// Tint slider (-1,1)\n#define DTint ((iMouse.x/iResolution.x)*2.-1.)\n\n//is bad for Tmin<500\n// T range K\nconst float Tmin = 1000.0;\nconst float Tmax = 20000.0;\n\nfloat ma(vec3 a){return max(max(a.x,a.y),a.z);}\n\n// https://en.wikipedia.org/wiki/Black-body_radiation\nfloat BlackBoddyRadiation(float l, float T\n){return 1.19104\n         *pow(10.,19.)\n         /pow(l,5.)\n         /(exp(1.4387769599838158*pow(10.,7.)/(l*T))-1.);}\n\nfloat su (vec3 a){return a.x+a.y+a.z;}\nfloat su (vec2 a){return a.x+a.y;}\n\n// Spectrum to xyz approx function from \"Simple Analytic Approximations to the CIE XYZ Color Matching Functions\"\n// http://jcgt.org/published/0002/02/01/paper.pdf\n//Inputs:  Wavelength in nanometers\nfloat xFit_1931(float l){vec3 a=l-vec3(442,599.8,501.1)\n ;a*=mix(vec3(.0374,.0323,.0382),vec3(.0624,.0264,.0490),step(a,vec3(0.)))\n ;return su(exp(-.5*a*a)*vec3(.362,1.056,-.065));}\nfloat yFit_1931(float l){vec2 a=l-vec2(568.8,530.9)   \n ;a*=mix(vec2(.0247,.0322),vec2(.0213,.0613),step(a,vec2(0)))\n ;return su(exp(-.5*a*a)*vec2(.821,.286));}\nfloat zFit_1931(float l){vec2 a=l-vec2(437,459)\n ;a*=mix(vec2(.0278,.0725),vec2(.0845,.038),step(a,vec2(0)))\n ;//a*=mix(vec2(.0278,.0725),vec2(.0845,.038),smoothstep(-.1,.1,a))*b//suggestion\n ;;return su(exp(-.5*a*a)*vec2(1.217f,.681));}\n\n// RGB-XYZ Matrix Calculator\n// http://www.russellcottrell.com/photo/matrixCalculator.htm\n// Based on equations found here:\n// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n// And Rec. 2020 values found here:\n// https://en.wikipedia.org/wiki/Rec._2020\n// https://en.wikipedia.org/wiki/Rec._709\n// https://en.wikipedia.org/wiki/SRGB\nvec3 XYZtosRGB(vec3 XYZ\n){return XYZ*mat3(3.2409699,-1.5373832,-.4986108\n                 ,-.9692436,1.8759675,.0415551\n                 ,.0556301,-.2039770, 1.0569715);}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord\n){vec2 uv=fragCoord/iResolution.xy\n ;float T=mix(Tmin,Tmax,1.-uv.x)\n ;float lamdaStart = 380.\n ;float dw=(780.-lamdaStart)/float(SPECTRAL_SAMPLES)\n ;// https://en.wikipedia.org/wiki/CIE_1931_color_space\n ;// integrating Illuminant\n ;float N = 0.\n ;vec3 XYZ=vec3(0)\n ;for (int k = 0; k < SPECTRAL_SAMPLES; k++\n ){float w = lamdaStart + (float(k) + 0.5f)*dw\n  ;float i = BlackBoddyRadiation(w,T)*dw\n  ;N +=yFit_1931(w) *i* dw\n  ;XYZ+=vec3(xFit_1931(w),yFit_1931(w),zFit_1931(w))*i\n ;}\n ;XYZ /=ma(XYZ)//XYZIrradiance /= N; \n ;float Y=(XYZ.x + XYZ.y + XYZ.z)// XYZ to xyY\n ;float x=XYZ.x/Y \n ;float y=XYZ.y/Y \n ;Y=XYZ.y\n  // https://en.wikipedia.org/wiki/Color_temperature#Correlated_color_temperature     \n ;vec2 w=vec2(4.*x,6.*y)/(3.-2.0*x+vec2(1,-1)*12.*y)\n  +clamp(-DTint,-1.,1.)*.05// slider along illuminant\n ;x=((1.5*(.25*w.x+1.*w.x*w.y))/(.5+.25*w.x+1.*w.y+1.*w.x*w.y));\n ;y=(.25*w.y)/(.5+.25*w.x+w.y+1.*w.x*w.y);\n\n ;XYZ = vec3(x*Y/y,Y,(1.0 - x - y)*Y/y);\n ;vec3 srgb = XYZtosRGB(XYZ);\n ;const float a=.05;\n ;srgb=mix(12.92*srgb,(1.+a)*pow(srgb,vec3(1./2.4))-a,step(vec3(.0031308),srgb))\n ;fragColor = vec4(srgb,1);}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}