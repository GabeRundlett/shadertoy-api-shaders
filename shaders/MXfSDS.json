{
    "Shader": {
        "info": {
            "date": "1709899936",
            "description": "black and white arrow illusion pattern\nI don't know what it is called.\n\n133 chars version [url]https://www.shadertoy.com/view/43jXDy[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "MXfSDS",
            "likes": 1,
            "name": "black - white arrow illusion",
            "published": 3,
            "tags": [
                "optical",
                "illusion",
                "pattern",
                "arrow"
            ],
            "usePreview": 0,
            "username": "silica163",
            "viewed": 115
        },
        "renderpass": [
            {
                "code": "float kernel[]= float[](0.0625, 0.2500,0.3750,0.2500,0.0625);\n\nfloat arrow(vec2 uv){\n    float c = 0.;\n    uv.x = abs(uv.x);\n    /*if(uv.y >= 0.){\n        c = uv.y + uv.x - 1.;\n    } else {\n        c = uv.x-.5;\n    }/**/\n    c = min(max((uv.y - (1.-uv.x))*.5,-uv.y), max((uv.x-.5),abs(uv.y+.5)-.5));\n    return smoothstep(0.,.001,c);\n}\n\nfloat arrowPattern(vec2 uv, float scale){\n    uv *= scale;\n    float c = 0.;\n    vec2 id = floor(uv);\n    vec2 uf = fract(uv);\n    /*if(mod(id.y,2.) == 0.){\n        id.x = floor(uv.x+.5);\n        uf.x = fract(uv.x+.5);\n        if(mod(id.x,2.) == 0.){\n            uf.x = 1.-uf.x;\n        }\n        c = step(uf.y,uf.x);\n    } else {\n        c = mod(id.x,2.);\n    }*/\n    c = arrow(uf*2.-1.);\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord - iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    /*for(int i = 0; i < 5;i++){\n        float iMul = kernel[i];\n        for(int j = 0;j < 5;j++){\n            col += arrowPattern(uv + 2./iResolution.y*vec2((2-i),(2-j)),4.)*iMul*kernel[j];\n        }\n    }/**/\n    \n    col = arrowPattern(uv,2.)*vec3(1);\n    //col = arrow(uv)*vec3(1);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}