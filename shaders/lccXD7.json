{
    "Shader": {
        "info": {
            "date": "1713996320",
            "description": "It is fuzzy and fun",
            "flags": 0,
            "hasliked": 0,
            "id": "lccXD7",
            "likes": 2,
            "name": "Fuzz Earthbound",
            "published": 3,
            "tags": [
                "trippy"
            ],
            "usePreview": 0,
            "username": "kirbyhood",
            "viewed": 123
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  vec3 color = vec3(0.5);\n\n  // Psychedelic waves with even higher frequency and amplitude\n  uv.x += sin((uv.y + iTime) * 80.0) * 0.8;\n  uv.y += cos((uv.x + iTime) * 80.0) * 0.8;\n  uv.x += sin((uv.y + iTime) * 160.0) * 0.4;\n  uv.y += cos((uv.x + iTime) * 160.0) * 0.4;\n\n  // Swirling pattern with even more intricate calculations\n  vec2 center = vec2(0.5);\n  float dist = distance(uv, center);\n  uv += (center - uv) * (1.0 - dist) * 0.1;\n  uv += (center - uv) * (1.0 - dist) * 0.1 * sin(iTime * 20.0);\n  uv += (center - uv) * (1.0 - dist) * 0.1 * sin(iTime * 40.0);\n  uv += (center - uv) * (1.0 - dist) * 0.1 * sin(iTime * 80.0);\n\n  // Purple color shift with even more oscillations\n  color += vec3(0.5, 0.0, 0.5) * sin(uv.x * 80.0 + iTime);\n  color += vec3(0.5, 0.0, 0.5) * cos(uv.y * 80.0 + iTime);\n  color += vec3(0.25, 0.0, 0.25) * sin(uv.x * 40.0 + iTime * 2.0);\n  color += vec3(0.25, 0.0, 0.25) * cos(uv.y * 40.0 + iTime * 2.0);\n  color += vec3(0.125, 0.0, 0.125) * sin(uv.x * 20.0 + iTime * 4.0);\n  color += vec3(0.125, 0.0, 0.125) * cos(uv.y * 20.0 + iTime * 4.0);\n  color += vec3(0.0625, 0.0, 0.0625) * sin(uv.x * 10.0 + iTime * 8.0);\n  color += vec3(0.0625, 0.0, 0.0625) * cos(uv.y * 10.0 + iTime * 8.0);\n\n  // Add even more noise for extra visual interest\n  color += vec3(0.2) * sin(fragCoord.x * 0.01 + iTime);\n  color += vec3(0.2) * cos(fragCoord.y * 0.01 + iTime);\n  color += vec3(0.1) * sin(fragCoord.x * 0.005 + iTime * 2.0);\n  color += vec3(0.1) * cos(fragCoord.y * 0.005 + iTime * 2.0);\n  color += vec3(0.05) * sin(fragCoord.x * 0.0025 + iTime * 4.0);\n  color += vec3(0.05) * cos(fragCoord.y * 0.0025 + iTime * 4.0);\n\n  fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}