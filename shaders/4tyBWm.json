{
    "Shader": {
        "info": {
            "date": "1542692143",
            "description": "https://www.shadertoy.com/view/Msc3Wf",
            "flags": 32,
            "hasliked": 0,
            "id": "4tyBWm",
            "likes": 18,
            "name": "Copy of GhostCube",
            "published": 3,
            "tags": [
                "cube"
            ],
            "usePreview": 0,
            "username": "ianmethyst",
            "viewed": 2163
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n\tvec4 tex = texture(iChannel0, uv);\n    \n\tfragColor = vec4(tex.xyz, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) +\n         length(max(d,0.0));\n}\n\nfloat map(vec3 p)\n{\n    float t = iTime;\n    p.xz *= mat2(cos(t), sin(t), -sin(t), cos(t));\n    p.xy *= mat2(cos(t), sin(t), -sin(t), cos(t));\n    p.yz *= mat2(cos(t), sin(t), -sin(t), cos(t));\n    \n    float k = sdBox(p, vec3(1.0));\n    float o = 0.85;\n\tk = max(k, -sdBox(p, vec3(2.0, o, o)));\n    k = max(k, -sdBox(p, vec3(o, 2.0, o)));\n    k = max(k, -sdBox(p, vec3(o, o, 2.0)));\n    return k;\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n \tfloat t = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        vec3 p = o + r * t;\n        float d = map(p) * 0.9;\n        t += d;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec4 old = texture(iChannel0, uv - vec2(0.0, 1.0/iChannelResolution[0].y));\n    vec4 old2 = texture(iChannel0, uv - vec2(0.0, 2.0*1.0/iChannelResolution[0].y));\n    \n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 o = vec3(0.0, 0.0, -2.5);\n    vec3 r = vec3(uv, 0.8);\n    \n    float t = trace(o, r);\n    \n    vec3 fog = vec3(1.0) / (1.0 + t * t * 0.1) * 0.1;\n    \n    float c = iTime * 5.0 + uv.x;\n    fog *= vec3(sin(c)*cos(c*2.0), cos(c)*cos(c*2.0), sin(c)) * 0.5 + 0.5;\n    \n    fog += old.xyz * 0.6 + old2.xyz * 0.37;\n    \n\tfragColor = vec4(fog, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}