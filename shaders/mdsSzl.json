{
    "Shader": {
        "info": {
            "date": "1669415517",
            "description": "funny or not? ",
            "flags": 34,
            "hasliked": 0,
            "id": "mdsSzl",
            "likes": 4,
            "name": "webcam buffer delay effect",
            "published": 3,
            "tags": [
                "webcam"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 470
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec4 o_col = texture(iChannel0, uv);\n    // Output to screen\n    fragColor = o_col;\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 o_trpino = fragCoord/iResolution.xy;\n\n        float fps = 60.0;\n    vec4 o_col_webcam = texture(iChannel1, o_trpino);\n    \n\n    //limit fps from here: https://www.shadertoy.com/view/wtscDj\n    if(mod(float(iFrame), 60.0 / fps) == 0.0){\n            vec2 o_subdivs = vec2(10., 10.);\n        vec2 o_trpino_big = o_trpino * o_subdivs;\n        vec2 o_trpino_big_fract = fract(o_trpino_big);\n        vec2 o_trpino_big_floor = floor(o_trpino_big);\n        float n_index = (o_trpino_big_floor.y * o_subdivs.x) + o_trpino_big_floor.x;\n        float n_index_norm = n_index / (o_subdivs.x * o_subdivs.y);\n        \n        float n_index_last = n_index - 1.;\n        float n_x_last = mod(n_index_last, o_subdivs.x);\n        float n_y_last = floor(n_index_last / o_subdivs.y);\n        vec2 o_trpino_big_floor_last = vec2(n_x_last, n_y_last);\n        \n        vec2 o_trpino_big_fract_last = \n            vec2(n_x_last*(1./o_subdivs.x), n_y_last*(1./o_subdivs.y))\n            + (o_trpino_big_fract / o_subdivs);\n        \n        vec4 o_col_buffer = texture(iChannel0, o_trpino_big_fract_last);\n        vec4 o_col_webcam = texture(iChannel1, o_trpino_big_fract);\n        if(n_index == 0.0){\n            fragColor = o_col_webcam;\n        }else{\n            fragColor = o_col_buffer;\n        }\n    }else{\n    \n        fragColor = texture(iChannel0, o_trpino);\n    \n    }\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}