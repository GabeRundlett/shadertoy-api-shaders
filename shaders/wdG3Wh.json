{
    "Shader": {
        "info": {
            "date": "1570057991",
            "description": "cool",
            "flags": 0,
            "hasliked": 0,
            "id": "wdG3Wh",
            "likes": 5,
            "name": "Swirly pattern",
            "published": 3,
            "tags": [
                "abstract",
                "trippy"
            ],
            "usePreview": 0,
            "username": "mat44",
            "viewed": 856
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord - 0.5*iResolution.xy ) / iResolution.y;\n\t\n    //uv = noised(uv*1.5 + iTime).rg;\n    uv = vec2(noise(uv+iTime*0.1), noise(uv+10.));\n    //uv += iTime;\n    float d = uv.x - uv.y;\n    d *= 20.;\n    d = sin(d);\n    d = d * 0.5 + 0.5;\n    d = 1.0 - d;\n    \n    d = smoothstep(0.1, 0.1, d);\n    \n    vec3 col = vec3(mix(vec3(0.1), vec3(0.2, 0.2, 0.6), d));\n    //col = vec3(noised(uv*10.)*0.5+0.5);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 hash( vec2 p ) // replace this by something better\n{\n\tp = vec2( dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)) );\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise( in vec2 p )\n{\n    const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\n\tvec2  i = floor( p + (p.x+p.y)*K1 );\n    vec2  a = p - i + (i.x+i.y)*K2;\n    float m = step(a.y,a.x); \n    vec2  o = vec2(m,1.0-m);\n    vec2  b = a - o + K2;\n\tvec2  c = a - 1.0 + 2.0*K2;\n    vec3  h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n\tvec3  n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n    return dot( n, vec3(70.0) );\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}