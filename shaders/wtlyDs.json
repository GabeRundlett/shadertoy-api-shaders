{
    "Shader": {
        "info": {
            "date": "1593495598",
            "description": "Sinusoids Wave; 2D ocean",
            "flags": 0,
            "hasliked": 0,
            "id": "wtlyDs",
            "likes": 3,
            "name": "Sinusoids Wave 2D",
            "published": 3,
            "tags": [
                "sinusoidswave"
            ],
            "usePreview": 0,
            "username": "changjiu",
            "viewed": 367
        },
        "renderpass": [
            {
                "code": "/*\ncorrect the dot shape to circle;\nantialias;\nsimplify;\nby FabriceNeyret2;\n*/\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = u/R.y, P;\n  \n    float c = length( U - vec2(.9,.73) ) - 0.1435;\n    \n    U = U*50. + U.y*10.* cos( iTime + U.x*5.6+vec2(0,11) );\n\n    P =   ( U - round(U) )                                     // loc coords % dot center\n        * inverse(transpose(mat2(dFdx(U),dFdy(U)))) *50./R.y;  // in screen coords\n\n    O = abs(U.x-45.) < .5 ? vec4(0,1 ,0 ,1) : vec4(0,.2,.2,1); // dots color\n    O = mix( O, vec4(0,.2,.9,0),  smoothstep(0.,50./R.y, length(P) - .2 )); // draw water & dots\n\n    O *= smoothstep( 200./R.y, 0., U.y - 35.5 );               // draw surface\n    O = mix( vec4(1,0,0,0), O, smoothstep(0., 1.5/R.y, abs(c)-.0015) ); // draw circle\n}\n\n/*old version \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 uvOld = vec2(uv.x,uv.y);\n    uv *= 50.0;\n    \n    float time0 = iTime + fragCoord.x/iResolution.x*10.0;\n    uv += uvOld.y*10.0*vec2(cos(time0), sin(time0));\n    \n    float top = 35.5;\n    float bottom = 15.5;\n\n    float x = uv.x;\n    float y = uv.y;\n\n    vec3 col = vec3(0,0,0);;\n    \n    float x0 = x-round(x);\n    float y0 = y-round(y);\n    vec2 pos0 = vec2(x0,y0);\n    \n    vec2 center = vec2(0,0);\n\n    \n    \n    if(y<top){\n        col = vec3(0.,0.2,0.9);\n        \n    \tif(distance(pos0,center)<0.2){\n            \n        \tcol = vec3(0.0,0.2,0.2);\n            \n            if(uv.x>44.5 && uv.x<45.5){\n                col = vec3(0.,1.0,0.);\n            }\n    \t}\n    }\n    \n   \n\tvec2 center1 = vec2(0.9,0.73);\n    float dis = distance(uvOld,center1);\n    if(dis<0.145 && dis>0.142){\n    \tcol = vec3(1.,0.,0.);\n    }\n    \n\n\n    fragColor = vec4(col,1.0);\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}