{
    "Shader": {
        "info": {
            "date": "1598180979",
            "description": "a simple 2d animation",
            "flags": 64,
            "hasliked": 0,
            "id": "3lBfzz",
            "likes": 16,
            "name": "Blunderbuss",
            "published": 3,
            "tags": [
                "2d",
                "blunderbuss"
            ],
            "usePreview": 0,
            "username": "z0rg",
            "viewed": 483
        },
        "renderpass": [
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\nmat2 r2d(float a){float cosa = cos(a);float sina = sin(a);return mat2(cosa,sina,-sina,cosa);}\n\nfloat sat(float a)\n{\n    return clamp(a, 0.,1.);\n}\n\nfloat lenny(vec2 v)\n{\n    vec2 a = abs(v);\n    return a.x+a.y;\n}\n\n\n// Thanks iq :) Box - exact   (https://www.youtube.com/watch?v=62-pRVZuS5c)\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat cir(vec2 p, float r)\n{\n    float an = atan(p.y, p.x);\n    float rad = \n        \n        sin(an*5.)*.5;\n    return length(p)-r;\n}\nfloat loz(vec2 p, float r)\n{\n    return lenny(p)-r;\n}\n\nfloat add(float a, float b)\n{\n    return min(a, b);\n}\nfloat sub(float a, float b)\n{\n    return max(a, -b);\n}\nconst float PI = 3.141592653;\nfloat spd = 12.;\nfloat chara(vec2 uv)\n{\n    //float spd = 15.;\n    uv -= vec2(0.,.1715);\n    vec2 uvB = (uv)*r2d(sin(iTime*spd*2.)*.02);\n    float body = sdBox(uvB, vec2(.008,.01));\n    vec2 lLeg = vec2(0.002+0.002*sin(-iTime*spd),-.01-((cos(-iTime*spd)))*0.001);\n    float leftLeg = sdBox(uv-lLeg, vec2(.001,.01));\n    leftLeg = add(leftLeg, sdBox(uv- lLeg-vec2(0.001,-.01), vec2(.002, 0.001)));\n    \n    vec2 rLeg = vec2(0.002+0.002*sin(-iTime*spd+PI),-.01-((cos(-iTime*spd+PI)))*0.001)-vec2(0.003,0.);\n    float rightLeg = sdBox(uv-rLeg, vec2(.001,.01));\n    rightLeg = add(rightLeg, sdBox(uv- rLeg-vec2(0.001,-.01), vec2(.002, 0.001)));\n    uvB -= vec2(0.,.01);\n    float ears = loz(vec2(abs(uvB.x)*3.-.0145, uvB.y), 0.01);\n    \n    return add(add(body, ears), add(leftLeg, rightLeg));\n}\n\nfloat tree(vec2 uv, float n)\n{\n    uv -= vec2(0.,.27);\n    float t = sub(loz(uv,.03), uv.y);\n    uv += vec2(0.,.03+0.005*sin(n));\n    t = add(t, sub(loz(uv, .04), uv.y));\n    uv += vec2(0.,.035+0.005*sin(n*2.+1.2));\n    t = add(t, sub(loz(uv, .05), uv.y));\n    uv += vec2(0.,.03);\n    t = add(t, sub(loz(uv, .06+0.005*sin(n+.3)), uv.y));\n    t = add(t, sdBox(uv, vec2(0.01, 0.05)));\n    return t;\n}\n\n\nvec3 lerp4(vec3 grad[4], float i)\n{\n    float idx = sat(i)*3.0;\n    int prevIdx = int(idx);\n    int nextIdx = min(prevIdx+1, 3);\n    vec3 prev = grad[prevIdx];\n    vec3 next = grad[nextIdx];\n    float lrp = idx - float(prevIdx);\n    return mix(prev, next, smoothstep(0.,1.,lrp));\n}\n\n\n\nvec3 rdrWind(vec2 uv)\n{\n    float halo = abs(uv.y-.2-sin(uv.x*4.)*.02);\n\treturn .3*(sin(uv.x*2.-iTime)*.5+.5)*texture(iChannel1, vec2(-iTime*.01, 0.)+uv*vec2(.05,20.)).xxx*(1.-sat(halo*25.));\n}\n\n\nvec3 rdr(vec2 uv)\n{\n    vec2 uvSky = uv*r2d(iTime*.1);\n    float sharp = iResolution.x*2.;\n    vec3 gradient[4];\n    gradient[0] = vec3(9,5,75)/255.;\n    gradient[1] = vec3(182,97,17)/255.;\n    gradient[2] = vec3(91,217,222)/255.;\n    gradient[3] = vec3(0,164,255)/255.;\n    \n    float an = abs(atan(uvSky.y, uvSky.x))-.2;\n    vec3 col = pow(lerp4(gradient, an*.4+.1*distance(vec2(0.,1.), uv)), vec3(1./1.))*smoothstep(0.,1.,1.-sat(cir(uv, .2)*5.));\n\n    float stars = (texture(iChannel1, uvSky*8.).x+texture(iChannel1, uvSky*8.*r2d(.1)).x)/2.;\n    float rate = .80;\n\tcol += vec3(texture(iChannel1, uv*5.).x*.5+.5,.8,.9)*sat(sat(stars - rate)/(1.-rate)-.1);\n    \n    col = mix(col, vec3(0.), 1.-sat(cir(uv, .15)*sharp));\n\n    col = mix(col, vec3(0.), 1.-sat(chara(uv)*sharp));\n    vec2 eyeP = uv-vec2(0.002,.175);\n    mat2 rot = r2d(sin(iTime*spd*2.)*.05);\n    float eyes = add(cir((eyeP*rot-vec2(0.005,0.)), 0.001), cir((eyeP*rot)-vec2(0.0025,0.), 0.001));\n    col = mix(col, vec3(255,188,0)/255., 1.-sat(eyes*sharp));\n    \n    float tre = tree((uvSky-vec2(0.,.08))*2., 5.);\n    col = mix(col, col*.2, 1.-sat(tre*sharp));  \n    float tree2 = tree((uvSky*r2d(1.)-vec2(0.,.08))*2., 1.);\n    col = mix(col, col*.2, 1.-sat(tree2*sharp));  \n        float tree3 = tree((uvSky*r2d(5.)-vec2(0.,.1))*3., 5.);\n    col = mix(col, col*.2, 1.-sat(tree3*sharp));     \n    \n    \n    float fog = sin(10.*an+iTime+length(uv))*.2+(sin(iTime-length(uv)*25.)*.2+.1)+.3;\n    col = mix(col, col*.2, fog); \n    col += (vec3(255,245,130)/255.)*smoothstep(0.,1.,1.-sat(cir(uvSky-vec2(-.5,0.), .1)*2.));\n    \n    float snd = texelFetch(iChannel0, ivec2(int(an*5.), 0), 0).x;\n    col += rdrWind(vec2(an, length(uv)));\n    col += mix(vec3(1.),.5+0.5*cos(iTime+uv.xyx+vec3(0,2,4)), snd)*.5*sat(abs(uv.x)*5.);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-vec2(.5)*iResolution.xy)/iResolution.xx;\n\tuv *= .3;\n    uv -= vec2(0.,-.2);\n    \n    vec3 col = rdr(uv);\n    \n    if (iFrame > 5)\n    \tcol *= sat(iTime/2.);\n    //col = pow(col, vec3(1./2.2));\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 23770,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/henrikjose/henrik-jose-blunderbuss"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}