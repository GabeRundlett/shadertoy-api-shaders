{
    "Shader": {
        "info": {
            "date": "1644741901",
            "description": "This an attempt to create a voxel environment. It looks like the more I increase the size of the y value of the voxel, the more distorted it gets. ill have to look into it a little more",
            "flags": 0,
            "hasliked": 0,
            "id": "sssBDn",
            "likes": 9,
            "name": "Voxel Glitch",
            "published": 3,
            "tags": [
                "sdf",
                "beat",
                "voxel",
                "fail",
                "type"
            ],
            "usePreview": 0,
            "username": "lambmeow",
            "viewed": 471
        },
        "renderpass": [
            {
                "code": "//voxel glitch\n//lambmeow 2/13/22\n//Thanks for UnstableLobster + Shane for a fix to my voxel issue!\n\n//we can also just move ss to the mainImage but eh...\nfloat h;\nfloat ss(vec3 v)\n{   \n    vec2 iv = floor(v.xz );\n    float z= v.z;\n    //v.xy *= rot(mod((z/600.), 2.* 3.141529)) * 2.;\n    v.xz = fract (v.xz);\n\n    v.xz-= vec2(0.5,1);\n    \n    vec3 u = texture(iChannel0, iv/200.).grb * 5.;\n    \n    \n    vec3 b = abs(v) - vec3(.45, sin(iTime + u.x) * u.y/2. + u.y/2., .45);\n    h = b.y;\n    return length(max(b,0.)) + min (max(b.x, max(b.y, b.z)), 0.);\n}\n\n\nvoid mainImage( out vec4 c, in vec2 f )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 r = iResolution.xy, u = (2. * f - r)/r.y;\n    float a = iTime* 0.3;\n    u *= mat2(cos(a), -sin(a), sin(a), cos(a));\n    u.y = -abs(u.y);\n    vec3 ro = vec3(0, 10, -10. + iTime * 25.), rd = normalize(vec3(u, 2.)), pp = ro;\n    float dd = 0., ll = 0.;\n    \n    for(int i = 0; i < 255; i++)\n    {\n       pp = ro+rd * ll;\n       //quick fix\n       dd = ss(pp);\n       ll +=dd * 0.1;\n       if(ll > 350. || dd < 0.001)\n           break;\n    }\n    \n    \n    // Output to screen\n    vec3 ff = vec3(0.3,.0,.2);\n    float atten = 1./(1. + ll * .025) * max(1.-dd,0.);\n    atten *= smoothstep(0.,1., 1.+ h) + .45;\n    \n     c = texture(iChannel0, floor(pp.xz)/200.) * atten + vec4(ff,1.) * (1.- atten);\n     \n    }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}