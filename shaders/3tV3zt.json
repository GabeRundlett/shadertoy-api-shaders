{
    "Shader": {
        "info": {
            "date": "1579643450",
            "description": "Click to add points and watch the graph communicate. Sometimes your roommates don't know how to communicate... ",
            "flags": 32,
            "hasliked": 0,
            "id": "3tV3zt",
            "likes": 44,
            "name": "Communicators",
            "published": 3,
            "tags": [
                "graph"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 832
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = B(U).z*C(U+2.).zzzz;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\n//Texture lookups :\n#define A(U) texelFetch(iChannel0,ivec2(U),0)\n#define B(U) texture(iChannel1,(U)/R)\n#define C(U) texture(iChannel2,(U)/R)\n#define D(U) texture(iChannel3,(U)/R)\n\n#define Main void mainImage( out vec4 Q, in vec2 U )\n#define N 7.\n#define For for (float i = -(N); i<=(N); i++)\n#define S 2.\n#define Gaussian(i) 0.3989422804/S*exp(-.5*(i)*(i)/S/S)\n#define W 25.\n\n// Distance to line\nvec2 ln (vec2 p, vec2 a, vec2 b) {\n    float i = clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.);\n\treturn vec2(length(p-a-(b-a)*i),i);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void X (inout vec4 Q, vec2 U, vec2 r) {\n    vec4 n = A(U+r);\n    if (ln(U,n.xy,n.zw).x<ln(U,Q.xy,Q.zw).x) Q = n;\n    else if (ln(U,Q.xy,n.zw).x<ln(U,Q.xy,Q.zw).x) Q.zw = n.zw;\n}\nvoid Xr (inout vec4 Q, vec2 U, float r) {\n\t X(Q,U,vec2(r,0));\n     X(Q,U,vec2(0,r));\n     X(Q,U,vec2(0,-r));\n     X(Q,U,vec2(-r,0));\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    Q = vec4(0);\n\tXr(Q,U,1.); \n\tXr(Q,U,2.); \n\tXr(Q,U,3.); \n    \n    Q.xy += B(Q.xy).xy;\n    Q.zw += B(Q.zw).xy;\n    \n    if (length(U-Q.zw)<length(U-Q.xy)) {\n    \tvec2 u = Q.xy;\n        Q.xy = Q.zw;\n        Q.zw = u;\n    }\n    \n    if (Q.x< 1.) Q.xy = Q.zw;\n    if (Q.z< 1.) Q.zw = Q.xy;\n    \n    if (iMouse.z>0.) {\n        vec4 n = iMouse.xyxy;\n        if (ln(U,n.xy,n.zw).x<ln(U,Q.xy,Q.zw).x) Q = n;\n    \tif (ln(U,Q.xy,n.xy).x<ln(U,Q.xy,Q.zw).x) Q.zw = n.xy;\n    }\n   \n    if (iFrame < 1) {\n        if (length(U-0.5*R)<55.)\n    \tQ = floor(U/10.+0.5).xyxy*10.;\n    }\n    if (length(Q.xy-Q.zw) > W) Q.zw = Q.xy;\n    \n    if (iFrame%40==0) if (length(U-0.5*R+7.*sin(float(iFrame)))<length(U-Q.xy)) Q.xy = 0.5*R; \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 Q, in vec2 U )\n{\n    vec4 a = A(U), b = B(U);\n\tvec2 u = a.xy-a.zw;\n    float r = length(u);\n    vec2 l = ln(U,a.xy,a.zw);\n\tif (r>1.) Q.xy =  250.*u/r/r*smoothstep(3.,1.,l.x)*exp(-5.*l.y);\n\telse Q.xy = vec2(0);\n    \n    Q.zw = vec2(1);\n    Q *= smoothstep(1.,2.,length(U-a.xy));\n    Q *= smoothstep(0.,1.,ln(U,a.xy,a.zw).x);\n\tQ.zw = mix(Q.zw,b.zw,0.7);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main\n{\n    Q = vec4(0);\n    For Q += Gaussian(i) * A(U+vec2(0,i));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main\n{\n    Q = vec4(0);\n    For Q += Gaussian(i) * A(U+vec2(i,0));\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}