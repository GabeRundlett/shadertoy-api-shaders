{
    "Shader": {
        "info": {
            "date": "1721681773",
            "description": "Shader to visualize mandelbrot set",
            "flags": 0,
            "hasliked": 0,
            "id": "7lSXzR",
            "likes": 1,
            "name": "MandelbrotSetVisual",
            "published": 3,
            "tags": [
                "mandelbrot"
            ],
            "usePreview": 0,
            "username": "IgruantyPlay",
            "viewed": 88
        },
        "renderpass": [
            {
                "code": "#define minv -0.55\n#define maxv 0.5\n#define iters 1000\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\nint calculateSet(vec2 uv) {\n    uv += (iMouse.xy / iResolution.xy);\n    float a = map(uv.x, 0.0, 1.0, minv, maxv);\n    float b = map(uv.y, 0.0, 1.0, minv, maxv);\n    float ca = a;\n    float cb = b;\n    \n    int n = 0;\n    while(n < iters) {\n        float aa = a * a - b * b;\n        float bb = 2.0 * a * b;\n        \n        a = aa + ca;\n        b = bb + cb;\n        \n        if(abs(a + b) > 16.0) break;\n        n++;\n    }\n    return n;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x = uv.x * 2.0 - 1.0;\n    \n    int n = calculateSet(uv / pow(iTime,2.0));\n    float brt = map(float(n), 0.0, float(iters), 0.0, 1.0);\n    if(n == iters) brt = 1.0;\n    vec3 col = vec3(brt);\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}