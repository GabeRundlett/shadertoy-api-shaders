{
    "Shader": {
        "info": {
            "date": "1629003198",
            "description": "function visual easy framework",
            "flags": 0,
            "hasliked": 0,
            "id": "7dc3zr",
            "likes": 1,
            "name": "function visual",
            "published": 3,
            "tags": [
                "functionvisual"
            ],
            "usePreview": 0,
            "username": "DBBH",
            "viewed": 212
        },
        "renderpass": [
            {
                "code": "#define lineWidth 0.05\n#define Range 10.\n\n#define f1 x\n#define f2 exp(x)\n#define f3 0.0\n\nfloat outputResult(float y,vec2 uv)\n{\n    float w = lineWidth; // * fwidth(length(uv));;\n    float neg = smoothstep(y- w, y ,uv.y);\n    float positive = smoothstep(y, y + w ,uv.y);\n    return neg - positive;\n}\nfloat get_function_visual_1(float x, vec2 uv)\n{\n    return outputResult(f1, uv);\n}\nfloat get_function_visual_2(float x, vec2 uv)\n{\n    return outputResult(f2, uv);\n}\nfloat get_function_visual_3(float x, vec2 uv)\n{\n    return outputResult(f3, uv);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1) and center changes to 0.5\n    vec2 uv = Range*(fragCoord/iResolution.xy - vec2(0.5));\n    float x =uv.x;\n\n    float y=get_function_visual_1(x, uv);\n    float y2=get_function_visual_2(x, uv);\n    float y3=get_function_visual_3(x, uv);\n    \n    float res = max(max(y,y2),y3);\n    \n    vec3 col = vec3(res); // max(....all functions)\n    // or use only one\n    col = vec3(outputResult(f1, uv));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}