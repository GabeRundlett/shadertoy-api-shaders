{
    "Shader": {
        "info": {
            "date": "1613515198",
            "description": "https://twitter.com/i_dianov/status/1361499399587790852",
            "flags": 32,
            "hasliked": 0,
            "id": "wtdBD2",
            "likes": 9,
            "name": "Cellular automata crystals",
            "published": 3,
            "tags": [
                "color",
                "cellular",
                "buildings"
            ],
            "usePreview": 0,
            "username": "illus0r",
            "viewed": 363
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define t iTime\n#define res iResolution.xy\n\n\nvoid mainImage( out vec4 o, in vec2 FC )\n{\n#define S sin(40.*length(FC/res-.5))\n#define ROOF_START step(-.5,-S)*.1\n#define ROOF_LEFT_STOP step(.5,S)*.1\n#define ROOF_RIGHT_STOP step(.5,S)*.1\n#define ROOF_WALL_START .0001\n#define COL transpose(mat3(\\\n    .2,0,1,\\\n    1,.92,.0,\\\n    0,1,1))\n\n#define rnd(x) fract(sin(x*1e2)*1e2)\n#define T(dd) (texelFetch(iChannel0,ivec2(FC.xy+vec2(dd,-1))%int(res),0).rgb*inverse(COL))\n#define lr T(-1).r>.5\n#define cr T( 0).r>.5\n#define rr T( 1).r>.5\n#define lg T(-1).g>.5\n#define cg T( 0).g>.5\n#define rg T( 1).g>.5\n#define lb T(-1).b>.5\n#define cb T( 0).b>.5\n#define rb T( 1).b>.5\n    if (iFrame == 0) o = vec4(0);\n    if(t<.1)if(rnd(length(FC.xy))<.5)o.r+=1.;else o.b+=1.;\n    else if(lb&&cr&&rr&&rnd(length(FC.xy))<ROOF_START)o.g+=1.;\n    else if(lg&&cg&&rr&&rnd(length(FC.xy))<ROOF_RIGHT_STOP)o.b+=1.;\n    else if(lg&&cr&&rr&&rnd(length(FC.xy+vec2(-1,0)))<ROOF_RIGHT_STOP)o.b+=1.;\n    else if(lb&&cg&&rg&&rnd(length(FC.xy))<ROOF_LEFT_STOP)o.r+=1.;\n    else if(lb&&cb&&rg&&rnd(length(FC.xy+vec2(1,0)))<ROOF_LEFT_STOP)o.r+=1.;\n    else if(lg&&cg&&rg&&rnd(length(FC.xy))<ROOF_WALL_START)o.b+=1.;\n    else if(lb&&cg&&rnd(length(FC.xy+vec2(-1)))<ROOF_WALL_START)o.r+=1.;\n    else if(cb)\n      if(rg)\n        if(lg) o.b+=1.;\n        else o.g+=1.;\n      else o.b+=1.;\n    else \n      if(cr)\n        if(lg)\n          if(rg) o.r+=1.;\n          else o.g+=1.;\n        else o.r+=1.;\n      else\n        if(lr) o.r+=1.;\n        else\n          if(lg)\n            if(rb) o.b+=1.;\n            else o.g+=1.;\n          else o.g+=1.;\n    o.rgb *= COL;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}