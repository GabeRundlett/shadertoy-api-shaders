{
    "Shader": {
        "info": {
            "date": "1550137488",
            "description": "It's a white circle, with slightly blurred edges.",
            "flags": 0,
            "hasliked": 0,
            "id": "WdjGW3",
            "likes": 2,
            "name": "Simple White Circle",
            "published": 3,
            "tags": [
                "simple",
                "tutorial",
                "circle",
                "skeleton",
                "white"
            ],
            "usePreview": 0,
            "username": "xyproto",
            "viewed": 413
        },
        "renderpass": [
            {
                "code": "// White circle on black background\n// From https://www.youtube.com/watch?v=GgGBR4z8C9o\n\nfloat Circle(vec2 uv, float r, float blur) {\n    // uv is the (x,y) position\n    \n    // d is the distance from the center to the given (x,y) uv coordinate\n    // this affects the radius of the circle, larger d is a smaller circle    \n    float d = length(uv);\n   \n\t// c is the color of the pixels in the image, per (x,y) uv coordinate\n    // 0.0 is black, 1.0 is white\n    // r is the radius of the circle\n    float c = smoothstep(r, r-blur, d);\n    \n    return c;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from -0.5 to 0.5)\n    // + correct aspect ratio\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n    \n    float pixelWidth = 2.0 / iResolution.y;\n    \n\t// per (x,y) uv coordinate, find the number for\n    // a circle, from 0 to 1\n    // the second argument is the radius from 0 to 1\n    // the third argument is the border blur\n    float bw = Circle(uv, .3, pixelWidth);\n    \n    // create an rgb color from the b/w \"color\"\n    vec3 rgb = vec3(bw);\n        \n    // return the rgb color and the alpha value\n    // for some reason there is no difference when changing the alpha\n    fragColor = vec4(rgb, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}