{
    "Shader": {
        "info": {
            "date": "1490404075",
            "description": "experimenting with height maps",
            "flags": 0,
            "hasliked": 0,
            "id": "MdsyWl",
            "likes": 9,
            "name": "strata",
            "published": 3,
            "tags": [
                "stripes",
                "metal",
                "purple"
            ],
            "usePreview": 0,
            "username": "mahalis",
            "viewed": 905
        },
        "renderpass": [
            {
                "code": "float smoothStripe(float v, float stripeWidth, float smoothingWidth) {\n    return smoothstep(-smoothingWidth,smoothingWidth,abs(1. - 2. * fract(v / stripeWidth)) - 0.5);\n}\n\nfloat singleNoise(vec2 v, vec2 axis, vec2 f1, vec2 f2, float o1, float o2) {\n    const float m2 = 0.5;\n    vec2 dv = vec2(dot(v, axis), dot(v, vec2(axis.y, -axis.x)));\n    return (sin(dv.x * f1.x + dv.y*f1.y + o1) + cos(dv.x * f2.x + dv.y * f2.y + o2) * m2) / (1. + m2);\n}\n\nfloat layeredNoise(vec2 v, float t) {\n    vec2 noiseBasis1 = normalize(vec2(0.,1.) + 0.193 * vec2(cos(t * 0.302 + 0.44), cos(t * 0.223 + 0.91)));\n    vec2 noiseBasis2 = vec2(sqrt(3.0)/2., -0.5);\n    vec2 noiseBasis3 = normalize(vec2(-noiseBasis2.x, noiseBasis2.y) + 0.181 * vec2(cos(t * 0.118 + 1.), cos(t * 0.323)));\n    return singleNoise(v, noiseBasis1, vec2(1.13, 1.04), vec2(1.98), 0., 0.19) + singleNoise(v, noiseBasis2, vec2(1.29, 1.32), vec2(1.88), 2.03,1.1) + singleNoise(v, noiseBasis3, vec2(1.01, 0.96), vec2(2.03), 2.93, 0.553);\n}\n\nconst float stripeWidth = 1.8;\n\nfloat noiseValue(vec2 uv, float time) {\n    return layeredNoise(uv * 6. - time * 0.1, time) + time * 0.298;\n}\n\nfloat height(float noiseValue);\nfloat height(float noiseValue) {\n    return pow(0.5 - 0.5*cos(fract(2.*noiseValue / stripeWidth + 0.5) * 3.1415 * 2.), 0.5);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    uv.y *= iResolution.y / iResolution.x;\n    uv *= 1.2;\n    \n    float time = sin(iTime * 0.05) * 40.;\n    float v = noiseValue(uv, time);\n    \n    float stripeValue = smoothStripe(v, stripeWidth, 0.01);\n    \n    vec2 eps = vec2(0.01,0);\n    float vx = noiseValue(uv + eps.xy, time);\n    float vy = noiseValue(uv + eps.yx, time);\n    \n    float h = height(v);\n    vec3 n = normalize(vec3((vec2(height(vx), height(vy)) - h) / eps.x, 42));\n    const vec3 lightPos = vec3(0, 2, 1);\n    vec3 toLight = normalize(lightPos - vec3(uv, 0));\n    float lightIntensity = smoothstep(0.,0.1,dot(normalize(lightPos),toLight) - 0.9); // spotlight attenuation\n    \n    float lightValue = smoothstep(0.,0.1,max(0.0,dot(n, toLight)) - 0.6) * lightIntensity;\n    \n    vec3 color = mix(vec3(0.2),vec3(0.6,0.2,1.),float(stripeValue));\n    \n    fragColor = vec4(color * lightValue, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}