{
    "Shader": {
        "info": {
            "date": "1637851432",
            "description": "walk 2d-n3",
            "flags": 0,
            "hasliked": 0,
            "id": "ftGGzy",
            "likes": 9,
            "name": "walk 2d-n3",
            "published": 3,
            "tags": [
                "walk2dn3"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 245
        },
        "renderpass": [
            {
                "code": "//por jorge2017a2....walk 2d-n3\n///referencia\n//https://iquilezles.org/articles/distfunctions2d\n//https://www.shadertoy.com/view/Xdy3Rd..... bmontell\n//https://www.shadertoy.com/view/wtdBzf-----oneshade \n\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define S2(d,b) smoothstep(antialiasing(1.0),b,d)\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\nvec2 rotatev2(vec2 p, float ang)\n{   float c = cos(ang);\n    float s = sin(ang);\n    return vec2(p.x*c - p.y*s, p.x*s + p.y*c);\n}\n\n//oneshade\nvec2 RotatePOA(in vec2 p, in vec2 o, in float a) {\n    float c = cos(a), s = sin(a);\n    return (p - o) * mat2(c, -s, s, c) + o;\n}\n\nvec2 cossin(float x)\n{\treturn vec2(cos(x),sin(x));  }\n\n///---------------------------\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}    \n///----------Operacion de Distancia--------\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n    \nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{\n  colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  //colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.5,0.0));\n  return colOut;\n}\n\nvec3 DrawFigBordeCol(vec3 pColObj, vec3 colOut, float distObj , vec3 colBorde )\n{colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,colBorde ,S2(abs( distObj)-0.01,0.0));\n  return colOut;\n}\n\nvec3 DrawFig(vec3 pColObj, vec3 colOut, float distObj )\n{  colOut = mix(colOut,pColObj ,S2( distObj-0.05,0.0)); return colOut; }\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{  vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nvec3 hacerPiernaIzq(vec2 p, float t, vec3 colOut,vec3 colIn)\n{   vec2 a1=vec2(3.0,8.0);vec2 b1=vec2(3.0,5.0);  //pierna\n    vec2 a2=vec2(3.0,5.0);vec2 b2=vec2(3.0,2.0); //rodilla\n    vec2 a3=vec2(3.0,2.0);vec2 b3=vec2(4.0,2.0); //pie\n\n    float t1, t2, t3;\n    float r1, r2, r3;\n\n   r1=0.6; r2=0.8; r3=0.2;    \n   t1=t;\n   t2=(1.0 + sin(t+PI));//t+TWO_PI;\n   t3=(1.0 + sin(t+PI));\n\n    float ang1=r1*sin(t1);\n    float ang2=r2*sin(t2);\n    float ang3=r3*sin(t3);\n\n    vec2 p1,p2, p3;\n    p1=RotatePOA(p,a1,ang1);\n    p2=RotatePOA(p1,a2,ang2);\n    p3=RotatePOA(p2,a3,ang3);\n\n    float d1= sdSegment(p1,a1,b1);\n    float d2= sdSegment(p2,a2,b2);\n    float d3= sdSegment(p3,a3,b3);\n\n    colOut= DrawFig(vec3(0.0,1.0,0.0), colOut,d1 );\n    colOut= DrawFig(vec3(1.0,0.0+colIn.g,0.0+colIn.b), colOut,d2 );\n    colOut= DrawFig(vec3(0.0,0.0,1.0), colOut,d3 );\n    return colOut;\n}\n\n\nvec3 hacerPiernaDer(vec2 p, float t, vec3 colOut,vec3 colIn)\n{   vec2 a1=vec2(3.0,8.0);vec2 b1=vec2(3.0,5.0);  //pierna\n    vec2 a2=vec2(3.0,5.0);vec2 b2=vec2(3.0,2.0); //rodilla\n    vec2 a3=vec2(3.0,2.0);vec2 b3=vec2(4.0,2.0); //pie\n\n    float t1, t2, t3;\n    float r1, r2, r3;\n\n  r1=0.6; r2=0.8; r3=0.2;    \n   t1=t;\n   t2=(1.0 + sin(t+PI)); //t+TWO_PI;\n   t3=(1.0 + sin(t+PI));\n\n    float ang1=r1*sin(t1);\n    float ang2=r2*sin(t2);\n    float ang3=r3*sin(t3);\n\n    vec2 p1,p2, p3;\n    p1=RotatePOA(p,a1,ang1);\n    p2=RotatePOA(p1,a2,ang2);\n    p3=RotatePOA(p2,a3,ang3);\n\n    float d1= sdSegment(p1,a1,b1);\n    float d2= sdSegment(p2,a2,b2);\n    float d3= sdSegment(p3,a3,b3);\n\n    colOut= DrawFig(vec3(0.0,1.0,0.0), colOut,d1 );\n    colOut= DrawFig(vec3(1.0,0.0+colIn.g,0.0+colIn.b), colOut,d2 );\n    colOut= DrawFig(vec3(0.0,0.0,1.0), colOut,d3 );\n    return colOut;\n}\n\n\nvec3 hacerBrazoIzq(vec2 p, float t, vec3 colOut,vec3 colIn)\n{   vec2 a1=vec2(3.0,12.0);vec2 b1=vec2(3.0,9.0);  //Brazo\n    vec2 a2=vec2(3.0,9.0);vec2 b2=vec2(3.0,6.0); //Ante brazo\n    float t1, t2, t3;\n    float r1, r2, r3;\n\n   r1=0.6; r2=0.8; r3=0.2;    \n   t1=t;\n   t2=t+TWO_PI;\n   t3=(1.0 + sin(t+PI));\n\n    float ang1=r1*sin(t1);\n    float ang2=r2*sin(t2);\n    float ang3=r3*sin(t3);\n\n    vec2 p1,p2, p3;\n    p1=RotatePOA(p,a1,ang1);\n    p2=RotatePOA(p1,a2,ang2);\n    \n    float d1= sdSegment(p1,a1,b1);\n    float d2= sdSegment(p2,a2,b2);\n    \n    colOut= DrawFig(vec3(0.0,1.0,0.0), colOut,d1 );\n    colOut= DrawFig(vec3(1.0,0.0+colIn.g,0.0+colIn.b), colOut,d2 );\n    return colOut;\n}\n\nvec3 hacerBrazoDer(vec2 p, float t, vec3 colOut,vec3 colIn)\n{   vec2 a1=vec2(3.0,12.0);vec2 b1=vec2(3.0,9.0);  //Brazo\n    vec2 a2=vec2(3.0,9.0);vec2 b2=vec2(3.0,6.0); //Ante brazo\n    \n    float t1, t2, t3;\n    float r1, r2, r3;\n\n   r1=0.6; r2=0.2; r3=0.2;    \n   t1=t;\n   t2=t+TWO_PI;\n   t3=(1.0 + sin(t+PI));\n\n    float ang1=r1*sin(t1);\n    float ang2=r2*sin(t2);\n    float ang3=r3*sin(t3);\n\n    vec2 p1,p2, p3;\n    p1=RotatePOA(p,a1,ang1);\n    p2=RotatePOA(p1,a2,ang2);\n    \n    float d1= sdSegment(p1,a1,b1);\n    float d2= sdSegment(p2,a2,b2);\n    \n    colOut= DrawFig(vec3(0.0+colIn.r,1.0,0.0+colIn.b), colOut,d1 );\n    colOut= DrawFig(vec3(1.0,0.0+colIn.g,0.0+colIn.b), colOut,d2 );\n    return colOut;\n}\n\nvec3 HacerCuerpoyCabeza(vec2 p, float t, vec3 colOut,vec3 colIn)\n{\n  vec2 a1=vec2(3.0,12.0);vec2 b1=vec2(3.0,8.0);  //Pansa\n  float d1= sdSegment(p,a1,b1);\n  float d2=sdCircle(p-vec2(3.0,13.0), 0.5 );  //cabeza\n  \n  colOut= DrawFig(vec3(0.0,1.0,0.0), colOut,d1);\n  colOut= DrawFig(vec3(0.5,5.0,1.0), colOut,d2);\n  return colOut;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    uv-=vec2(-1.0,0.0);\n    uv*=7.0;\n\n    vec3  col=vec3(0.5);\n\n   float t=iTime;\n   uv-=vec2(0.0,-7.0);\n\n    col= HacerCuerpoyCabeza(uv, t, col,vec3(0.0));\n   col= hacerPiernaIzq(uv,t, col,vec3(0.0));\n   col= hacerPiernaDer(uv,t+PI, col,vec3(0.0,0.5,0.5));\n   col= hacerBrazoIzq(uv, t, col,vec3(0.2,0.5,0.3));\n   col= hacerBrazoDer(uv, t-PI, col, vec3(1.0,0.5,0.4));\n   \n   vec2 a1=vec2(0.0,0.0);\n   vec2 b1=vec2(6.5,0.0);\n    float d1= sdSegment(uv-vec2(-2.0,2.0),a1,b1);\n    col= DrawFig(vec3(0.0,1.0,1.0), col,d1 );\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}