{
    "Shader": {
        "info": {
            "date": "1726846515",
            "description": "original fractal by gaz",
            "flags": 0,
            "hasliked": 0,
            "id": "lXSczz",
            "likes": 3,
            "name": "fractal cloud",
            "published": 3,
            "tags": [
                "fractal",
                "colorful",
                "neon"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 120
        },
        "renderpass": [
            {
                "code": "\n// glslsandbox uniforms\nuniform float time;\nuniform vec2 resolution;\n\n// shadertoy emulation\n#define time iTime\n\n// --------[ Original ShaderToy begins here ]---------- //\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*7.3+vec3(0,23,21))*.7+.7)\n\n#define PI 3.14159265358979\n#define N 12\n#define resolution iResolution.xy\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O-=O;\n    vec2 p2 = (gl_FragCoord.xy * 2.0 - resolution) / min(resolution.x, resolution.y);\n\tvec3 color1 = vec3(0.0, 0.3, 0.5);\n\tvec3 color2 = vec3(0.5, 0.0, 0.3);\n\t\n\tfloat f2 = 0.0;\n\tfloat g2 = 0.0;\n\tfloat h2 = 0.0;\n\n\tfor(float i = 0.0; i < 4.0; i++){\n\t\t\n\t\tfloat s2 = sin(time + i * PI / 2.0) * 0.8;\n\t\tfloat c2 = cos(time + i * PI / 2.0) * 0.8;\n\t\tfloat d2 = abs(p2.x + c2);\n\t\tfloat e2 = abs(p2.y + s2);\n\t\tf2 += 0.001 / d2;\n\t\tg2 += 0.001 / e2;\n\t\th2 += 0.00003 / (d2 * e2);\n\t}\n    \n    vec3 c23=vec3(f2 * color1 + g2 * color2 + vec3(h2));\n    \n     float lambda = time*2.5;\n  vec2 p3 = (gl_FragCoord.xy * 2.0 - resolution) / min(resolution.x, resolution.y);\n    float t =0.02/abs(tan(lambda) - length(p3));\n    float t2 = atan(p3.y, p3.x) + time;\n\n    vec2 something = vec2(1., (sin(time)+ 1.)*0.5);\n\n    float dotProduct = dot(vec2(t),something)/length(p3);\n    vec3 p,r=iResolution,\n    d=normalize(vec3((C-.5*r.xy)/r.y,1));\n    float g=0.,e,s;\n    for(float i=0.;i<92.;++i)\n    {\n        p=g*d;\n        for(float i=0.;i<5.;i++){\n\t \n\t} \n        p.z-=.6;\n        p=R(p,normalize(vec3(i,i+i,10.)),i);\n         p=R(p,normalize(vec3(i,i+i,-10.)),iTime);\n           \n        s=4.;\n        for(int j=0;j<7;++j)\n            p=abs(p),p=p.x<p.y?p.zxy:p.zyx,\n            s*=e=1.8/min(dot(p,p),1.2),\n            p=p*e-vec3(5,1.5,12.02+cos(time*0.01)/0.1096);\n        g+=e=length(p.xz)/s;\n        O.rgb+=mix(r/r,H(log(s)),.7)*.08*exp(-i*i*e);\n    }\n    O=pow(O,vec4(5));\n\n }\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}