{
    "Shader": {
        "info": {
            "date": "1701104465",
            "description": "Rainy day on the webcam",
            "flags": 2,
            "hasliked": 0,
            "id": "ctcBz7",
            "likes": 0,
            "name": "Snow BG (Tabyltop)",
            "published": 3,
            "tags": [
                "webcam",
                "snow"
            ],
            "usePreview": 0,
            "username": "DrieStone",
            "viewed": 184
        },
        "renderpass": [
            {
                "code": "// Parameters for Rain and Wind\nfloat baseRainSpeed = -0.3; // Base speed of falling rain\nint rainCount = 250; // Number of raindrops\nfloat windStrength = 0.4; // Strength of the wind effect\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Webcam input\n    vec4 webcamColor = texture(iChannel0, uv);\n\n    // Initialize rain effect\n    float rainEffect = 0.0;\n\n    // Create individual raindrops\n    for (int i = 0; i < rainCount; ++i) {\n        // Randomize the horizontal position of each raindrop\n        float randX = fract(sin(float(i) * 43758.5453123) * 12345.6789);\n\n        // Generate a constant seed for varying the raindrop's speed, opacity, and wind effect\n        float speedVariation = mix(0.3, 1.2, fract(sin(float(i) * 12345.6789) * 54321.1234)); // Wider range of speed variation\n\n        // Calculate the vertical position of the raindrop, including speed variation\n        float adjustedSpeed = baseRainSpeed * speedVariation;\n        float rainDropY = fract(iTime * adjustedSpeed + float(i) / float(rainCount));\n\n        // Apply wind effect\n        float windOffset = windStrength * sin(iTime * 0.5 + float(i)) * speedVariation;\n\n        // Calculate opacity based on speed (slower drops are more transparent)\n        float dropOpacity = 0.5 * speedVariation;\n        if (dropOpacity > 1.0){dropOpacity = 1.0 - dropOpacity;}\n\n        // Create a raindrop as a vertical streak with wind effect\n        float dropWidth = 0.01 * speedVariation;; // Width of the raindrop\n        float dropHeight = 0.01 * speedVariation; // Height of the raindrop\n        vec2 rainDropPos = vec2(randX + windOffset, rainDropY);\n\n        // Calculate the alpha value of the raindrop based on distance to its center\n        float dropAlpha = smoothstep(dropWidth, 0.0, abs(uv.x - rainDropPos.x)) * smoothstep(dropHeight, 0.0, abs(rainDropY - uv.y)) * dropOpacity;\n        rainEffect = max(rainEffect, dropAlpha);\n    }\n\n    // Apply rain effect over webcam image\n    vec3 finalColor = mix(webcamColor.rgb, vec3(1.0, 1.0, 1.0), rainEffect);\n\n    fragColor = vec4(finalColor, 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}