{
    "Shader": {
        "info": {
            "date": "1570899762",
            "description": "Winning shader made at EVOKE 2019 Shader Showdown.\nLive coded on stage in 25 minutes. It ended up looking quite different on stage, but I got away with it.",
            "flags": 0,
            "hasliked": 0,
            "id": "wsV3DG",
            "likes": 17,
            "name": "Shader Showdown EVOKE-19 Final",
            "published": 3,
            "tags": [
                "time",
                "clouds",
                "demoscene",
                "volumetric",
                "abstract",
                "glow",
                "vortex",
                "laser",
                "limit",
                "live",
                "battle",
                "lazer",
                "shadershowdown",
                "gloss",
                "industrial"
            ],
            "usePreview": 0,
            "username": "evvvvil",
            "viewed": 1030
        },
        "renderpass": [
            {
                "code": "// Winning shader made at EVOKE 2019 Shader Showdown,\n\n// The \"Shader Showdown\" is a demoscene live-coding shader battle competition.\n// 2 coders battle for 25 minutes making a shader on stage. No google, no cheat sheets.\n// The audience votes for the winner by making noise or by voting on their phone.\n\n// \"Love is somebody who will do boring things with you and not later claim to be traumatised by the experience.\" Christian Fitness - \"The brain is not a lever\"\n\nvec2 s,v,e=vec2(.00035,-.00035);float t,tt,g,de,cr,f,ff,at,g2;vec3 np,cp,pp,rp,po,no,ld,al;vec4 su=vec4(0);\nfloat bo(vec3 p,vec3 r){p=abs(p)-r;return max(max(p.x,p.y),p.z);}\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));}\nvec2 fb( vec3 p)\n{\n    p.xz*=r2(0.2-at*0.1);\n    vec2 h,t=vec2(bo(abs(p)-vec3(0,0,6),vec3(1,1,2)),5);  \n    h=vec2(bo(p,vec3(0.5,0.5,6)),3);  \n    h.x=min(bo(abs(p)-vec3(0,0.03,3.56),vec3(10,0.1,0.1)),h.x);  \n    t=t.x<h.x?t:h;\n    h=vec2(bo(abs(p)-vec3(0,0,9),vec3(0.7,0.7,6)),6);  \n    t=t.x<h.x?t:h;\n    h=vec2(bo(abs(p)-vec3(0,0.03,3.56),vec3(10,0.1,0.0)),6);\n    h.x=min(bo(p,vec3(0.1,0.55,2.5)),h.x);  \n    g2+=0.1/(0.1+h.x*h.x*400.);\n    t=t.x<h.x?t:h;\n    t.x*=0.7;\n    return t;\n}\nvec2 mp( vec3 p)\n{\n    np=p;\n    at=20.-min(length(p-vec3(0,sin(tt)*40.,0))-20.,20.);  \n    for(int i=0;i<8;i++){        \n        np=abs(np)-vec3(3,0,3);\n        if(i>5) np.x=sin(np.x*-.7);\n        np.xz*=r2(.785);\n        np.xy*=r2(.785);\n        np.yz-=2.-at*0.06;\n    }\n    vec2 h,t=fb(np);    \n    h=vec2(2.5*bo(abs(np*.2-vec3(sin(tt)-0.5,0,0.5))-.9,vec3(0.01,10,0.01)),6);\n    g+=0.1/(0.1+h.x*h.x*100.);\n    t=t.x<h.x?t:h;    \n    return t;\n}\nvec2 tr( vec3 ro,vec3 rd)\n{\n    vec2 h,t=vec2(.1);\n    for(int i=0;i<128;i++){\n        h=mp(ro+rd*t.x);\n        if(h.x<.0001||t.x>80.)break;\n        t.x+=h.x;t.y=h.y;    \n    }\n    if(t.x>80.)t.y=0.;  \n    return t;\n}\nfloat noi(vec3 p){\n    vec3 f=floor(p),s=vec3(7,157,113);\n    p-=f;vec4 h=vec4(0,s.yz,s.y+s.z)+dot(f,s);\n    p=p*p*(3.-2.*p);\n    h=mix(fract(sin(h)*43758.5),fract(sin(h+s.x)*43758.5),p.x);\n    h.xy=mix(h.xz,h.yw,p.y);\n    return mix(h.x,h.y,p.z);\n}\nfloat cno(vec3 p,float k){\n    float f=0.; p.z+=tt*k;\n    f+=0.5*noi(p);p=2.1*p;\n    f+=0.25*noi(p+1.);p=2.2*p;\n    f+=0.125*noi(p+2.);p=2.3*p;\n    return f;\n}\nfloat cmp( vec3 p)\n{  \n    float t=0.8*length(abs(p)-vec3(0,abs(sin(tt+1.59))*30.,0))-(8.-sin(p.y*.2-sin(tt)*2.+1.59)*6.);  \n    return t;\n}\n#define a(D) clamp(mp(po+no*D).x/D,0.,1.)\n#define s(D) smoothstep(0.,1.,mp(po+ld*D).x/D)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=(fragCoord.xy/iResolution.xy-0.5)/vec2(iResolution.y/iResolution.x,1);\n    tt=mod(iTime*.8,62.83);\n    vec3 ro=vec3(cos(tt*.5)*33.,4.+sin(tt*.5)*30.,sin(tt*.5)*33.),\n        cw=normalize(vec3(0)-ro),\n        cu=normalize(cross(cw,vec3(cos(tt*0.2-0.5),1,0))),\n        cv=normalize(cross(cu,cw)),\n        rd=mat3(cu,cv,cw)*normalize(vec3(uv,.4)),co,fo;\n    ld=normalize(vec3(0.3,0.5,-0.5));\n    co=fo=vec3(0,.2,.3)+rd.y*0.3+0.5*(1.-(length(uv)-0.2));\n    s=tr(ro,rd);t=s.x;  \n    if(s.y>0.){    \n        po=ro+rd*t;no=normalize(e.xyy*mp(po+e.xyy).x+e.yyx*mp(po+e.yyx).x+e.yxy*mp(po+e.yxy).x+e.xxx*mp(po+e.xxx).x);\n        al=vec3(1,.5,0);\n        if(s.y<5.) al=vec3(0);\n        if(s.y>5.) al=vec3(1);\n        float dif=max(0.,dot(no,ld)),fr=pow(1.+dot(no,rd),4.),\n            spo=exp2(10.*cno(np.zyx,0.)),sp=pow(max(dot(reflect(-ld,no),-rd),0.),spo);\n        co=mix(sp+al*(a(.2)*a(.4)+.1)*(dif+s(.4)+s(2.)),fo,min(fr,.5));\n        co=mix(co,fo,1.-exp(-.00001*t*t*t));\n    }\n    cr=cmp(ro)-10.+fract(dot(sin(uv*476.567+uv.yx*785.951),vec2(984.156)));\n    for(int i=0;i<70;i++){\n        cp=ro+rd*(cr+=1./3.);\n        if(su.a>.99||cr>t) break;\n        de=clamp(-.5-cmp(cp)+2.*cno(cp,10.),0.,1.);\n        su+=vec4(vec3(mix(1.,0.,de)*de),de)*(1.-su.a);\n    }    \n    co=mix(co,su.xyz*1.5,su.a*.9); //co=mix(co,mix(su.xyz*1.5,fo,1.-exp(-.00001*cr*cr*cr)),su.a*.9);\n    fragColor = vec4(pow(co+g*.05+vec3(1,0.5,0)*g2*.3,vec3(.45)),1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}