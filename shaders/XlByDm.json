{
    "Shader": {
        "info": {
            "date": "1508745953",
            "description": "Simple smoothed 2D shadows.",
            "flags": 32,
            "hasliked": 0,
            "id": "XlByDm",
            "likes": 10,
            "name": "2D Fake Smoothed Shadows",
            "published": 3,
            "tags": [
                "2d",
                "shadows"
            ],
            "usePreview": 1,
            "username": "space928",
            "viewed": 1483
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 col = texture(iChannel1, uv).rgb;\n    col *= 1.-texture(iChannel0, uv).rgb;\n    \n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//Note this code is a bit messy and not particulary optimised.\n\nfloat drawShadow(vec2 uv, vec2 p, float bias, float softness, int steps){\n    vec2 loc;\n    vec2 norm = normalize(uv - p); // Pointing from center to point\n    float smp;\n\n    float dst = 0.0;\n\n    // For now draw all casters\n    //Use a standard step to do a threshold based on the specified bias\n    smp = 1.-step(texture(iChannel0, uv - dst * norm).r, bias);\n    if(smp > 0.)\n        return smp;\n\n    //Collective shadow\n    float ag = 1.0;\n    \n    for(int i = 0; i < steps; i++){\n        loc = uv - dst * norm;\n\n        if (length(loc-p) < 1.0/float(steps))\n            break;\n\n        //Use smoothstep and have the shape represented as a blurry heightmap like that when we sample the edges then there will be a feather\n        //Using smoothstep allows us to preciscely choose how much feather we want because it remaps the gradient between values we specify.\n        smp = clamp(smoothstep(bias, bias+softness*float(i)/float(steps), texture(iChannel0, loc).r), 0., 1.);\n        \n        //Instead of simply returning 0 when we hit a shadow, we add it's value to a collective shadow\n        ag *= 1.-smp;\n\n        dst += 1.0/float(steps);\n    }\n\n    return 1.-ag;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p = vec2(sin(iTime), cos(iTime))*.5+.5;\n\n    float shad = drawShadow(uv, p, .5, .99, 128);\n\n    vec3 intensity = vec3(shad);\n    \n    fragColor = vec4(intensity,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}