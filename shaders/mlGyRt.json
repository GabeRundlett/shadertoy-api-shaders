{
    "Shader": {
        "info": {
            "date": "1700624367",
            "description": "Simple fractal light flashing animation w/ some noise",
            "flags": 0,
            "hasliked": 0,
            "id": "mlGyRt",
            "likes": 0,
            "name": "Fractal Flashing w/ Noise",
            "published": 3,
            "tags": [
                "noise",
                "abstract",
                "bright"
            ],
            "usePreview": 0,
            "username": "itsrelane",
            "viewed": 117
        },
        "renderpass": [
            {
                "code": "float rand( in float t ) {\n    return fract(sin(t) * 10000.0);\n}\n\nvec3 palette( in float t ) {\n    vec3 a = vec3(rand(t) / 2.0);\n    vec3 b = vec3(rand(t));\n    vec3 c = vec3(1.0, 0.7, 0.4);\n    vec3 d = vec3(0.0, 0.15, 0.2);\n\n    return a + b * cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // normalise\n    vec2 uv = (fragCoord * 2.0 - 1.0 / iResolution.xy) / iResolution.y;\n    \n    vec3 finalColor = vec3(0.0);\n    \n    for (int i = 0; i < 2; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n    \n        float d = length(uv);\n        vec3 col = palette(d + iTime);\n        \n        d = tan(atan(d + iTime) * d);\n\n        d = sin((d * 2.) + (iTime / 2.));\n        d = abs(d);\n\n        d = abs(sin(d)) / 6.;\n\n        d = 0.005 / d;\n\n        finalColor += col * d;\n    }\n    \n    finalColor *= 0.8;\n    \n    fragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}