{
    "Shader": {
        "info": {
            "date": "1690859039",
            "description": "Credits to Art of Code on YT, this is the tutorial video: https://www.youtube.com/watch?v=il_Qg9AqQkE",
            "flags": 0,
            "hasliked": 0,
            "id": "DtfcRS",
            "likes": 3,
            "name": "KIFS FRACTAL",
            "published": 3,
            "tags": [
                "fractal",
                "kifs"
            ],
            "usePreview": 0,
            "username": "jackjackdev",
            "viewed": 165
        },
        "renderpass": [
            {
                "code": "// KALEIDOSCOPE KIFS FRACTAL\n// Credits to Art of Code on YT, this is the tutorial video: https://www.youtube.com/watch?v=il_Qg9AqQkE\n\nvec2 N(float angle) {\n    return vec2(sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n    //vec2 mouse = iMouse.xy / iResolution.xy;\n    vec3 col = vec3(0);\n    \n    uv.x = abs(uv.x);\n    uv.y += tan((5./6.)*3.1415)*.5;\n    \n    vec2 n = N((5./6.)*3.1415);\n    float d = dot(uv - vec2(.5, 0), n);\n    uv -= n * max(0., d)*2.;\n    \n    //col += smoothstep(.01, .0, abs(d));\n\n    n = N((2./3.) * 3.1415);\n    float scale = 1.;\n    uv.x += .5;\n    for(int i = 0; i < 5; i++) {\n        uv *= 3.;\n        scale *= 3.;\n        uv.x -= 1.5;\n        \n        uv.x = abs(uv.x);\n        uv.x -= .5;\n        uv -= n * min(0., dot(uv, n))*2.;\n    }\n    \n    d = length(uv - vec2(clamp(uv.x, -1., 1.), 0));\n    //col += smoothstep(1./iResolution.y, .0, d/scale);\n    uv /= scale;\n    col += texture(iChannel0, uv).bgr;\n    \n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 35,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}