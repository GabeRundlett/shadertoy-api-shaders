{
    "Shader": {
        "info": {
            "date": "1652995278",
            "description": "not sure why these spheres are so noisy (beyond the artifacting from polar coords, the refraction doesn't look quite right, weird shading on the edges)\ntimelapse: https://twitter.com/Scrygl/status/1527390966457323520",
            "flags": 32,
            "hasliked": 0,
            "id": "NdcyR8",
            "likes": 1,
            "name": "30 Minutes 5/18",
            "published": 3,
            "tags": [
                "3d",
                "refraction"
            ],
            "usePreview": 0,
            "username": "scry",
            "viewed": 230
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0,uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//////////////////////////////////////////\n#define time iTime*0.1\n#define pi 3.14159265\n#define deg pi/180.\n\nmat2 r2d(float a) {\n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nvec4 map(vec3 p) {\n    p.z -= 3.;\n    p.xz *= r2d(time/10.);\n    p.yz *= r2d(sin(time*0.5)*1.5);\n    float d = -(length(p)-10.1);\n    float s = 0.5;\n    for (int i=0;i<5;i++) {\n        d = min(d,length(p)-s);\n        p.xz *= r2d(time/1.);\n        p.xz = vec2(length(p.xz),atan(p.x,p.z));\n        p.z *= 1.;\n        p.z = fract(p.z)-0.5;\n        p.xz = vec2(p.x*sin(p.z),p.x*cos(p.z));\n        p.z -= s*3.14;\n        s *= 0.5;\n        d = min(d,length(p)-s*0.2);\n    }\n    return vec4(p,d);\n}\n\nvec2 RM(vec3 ro, vec3 rd, float side) {\n    float dO = 0.;\n    float ii = 0.;\n    for (int i=0;i<96;i++) {\n        vec3 p = ro+rd*dO;\n        float dS = map(p).w*side;\n        dO += dS;\n        ii += 0.01;\n        if (dO > 100. || dS< 0.001) {break;}\n    }\n    return vec2(dO,ii);\n}\n\nvec3 calcNorm(vec3 p) {\n    vec2 h = vec2(0.001, 0.);\n    return normalize(vec3(\n        map(p-h.xyy).w-map(p+h.xyy).w,\n        map(p-h.yxy).w-map(p+h.yxy).w,\n        map(p-h.yyx).w-map(p+h.yyx).w\n    ));\n}\n\nvec3 colo(vec3 p, vec3 n, vec2 d) {\n    vec3 col = 1.-d.xxx/8.;\n    col -= n*0.1;\n    //col = clamp(col,0.,1.);\n    if (d.x > 99.) {\n        col *= 0.;\n        col = d.yyy;\n    }\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 R = iResolution.xy;\n    float ar = R.x/R.y;\n    uv -= 0.5;\n    uv.x *= ar;\n    vec3 col = vec3(0.);\n    vec3 ro = vec3(0.);\n    vec3 rd = normalize(vec3(uv,1.));\n    vec2 d = RM(ro,rd,1.);\n    vec3 p = ro+rd*d.x;\n    vec3 n = calcNorm(p);\n    float ior = 1.1;\n    float rl = 0.99;\n    vec3 oro = ro;\n    vec3 ord = rd;\n    vec2 od = d;\n    vec3 ocol = colo(p,n,d);\n    col += ocol;\n    for (int i=0;i<1;i++) {\n        ro = p+n*0.003;\n        rd = refract(p,-n,1./ior);\n        d = RM(ro,rd,-1.);\n        p = ro+rd*d.x;\n        n = calcNorm(p);\n        col += colo(p,n,d)*rl*0.5;\n        ro = p-n*0.003;\n        rd = refract(p,n,ior);\n        if (dot(rd,rd)==0.) {rd = 1.-reflect(rd,n);}\n        d = RM(ro,rd,1.);\n        p = ro+rd*d.x;\n        n = calcNorm(p);\n        col += colo(p,n,d)*rl*0.5;\n        rl *= rl;\n    }\n    col *= 0.5;\n    ////col -= 1.;\n    col *= ocol;\n    //col *= 0.1;\n    //col += d.xxx/8.;\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}