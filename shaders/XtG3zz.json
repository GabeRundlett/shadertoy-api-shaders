{
    "Shader": {
        "info": {
            "date": "1472658512",
            "description": "This Is A Pallete Made Up By A Center-Grid With Normal Frame Density That Depends On Screen Size\n( Ω ), I Made This The Symbol So I Can Recognize What You're Telling In Comment About This\nPallete; Instead of 0.9426815260791554983145626690017.",
            "flags": 0,
            "hasliked": 0,
            "id": "XtG3zz",
            "likes": 1,
            "name": "Grid Pallete",
            "published": 3,
            "tags": [
                "grid",
                "color",
                "infinite",
                "pallete",
                "framedens"
            ],
            "usePreview": 0,
            "username": "Imsure1200q_1UWE130",
            "viewed": 628
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float FrameThinness = 0.9426815260791554983145626690017; //Normalized Frame Density ( Ω ) <- i made up;\n    float FrameZoom = 4.0;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    if(cos(mod(uv.x,uv.y)*14.0*FrameZoom) > FrameThinness || cos(mod(uv.y,uv.x)*9.0*FrameZoom) > FrameThinness)\n        fragColor = mod(vec4(0.5/(length(uv)+1.0)),vec4(-0.025, 0.025, 0.6, 1.0))+0.9;\n    else fragColor = vec4(0.1/(length(sqrt(uv))-2.0)+\n                          (vec4(sqrt(uv.x)*sqrt(uv.y)))+vec4(-0.025, 0.025, 0.6, 1.0));\n    fragColor += vec4(uv.x / (iResolution.x / iResolution.y), uv.y / 16.0, 1.0, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}