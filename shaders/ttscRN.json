{
    "Shader": {
        "info": {
            "date": "1591598625",
            "description": "effect of bitwise operators XOR, AND, OR once powered to 1,2,3,4 (from left to right )\nStrange how Xor \"hashes\" into circuit-like patterns.\n\nsee also [url]https://shadertoy.com/view/wllcRN[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "ttscRN",
            "likes": 7,
            "name": "XOR ^ n",
            "published": 3,
            "tags": [
                "xor",
                "pattern",
                "hash",
                "bitwise",
                "circuits"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 390
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/wllcRN\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2  R = iResolution.xy;\n    ivec2 I = ivec2(U+60.*iTime);\n    int t = int(iTime) % 3, \n        n = int(U.x/R.x*4.),\n        i =   t==1 ? I.x ^ I.y\n            : t==2 ? I.x | I.y\n            :        I.x & I.y;\n                 //  I.x * I.y;\n    \n    i = n==0 ? i : n==1 ? i*i : n==2 ? i*i*i : i*i*i*i; \n    float v = float( i );\n\n    O = vec4( fract( v / 256.) );\n    \n    if ( int(U.x)*4 % int(R.x) < 4 ) O.r++; // red separator\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}