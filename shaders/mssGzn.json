{
    "Shader": {
        "info": {
            "date": "1665592701",
            "description": "Neomorphic button style shader",
            "flags": 0,
            "hasliked": 0,
            "id": "mssGzn",
            "likes": 16,
            "name": "Neomorphic button style",
            "published": 3,
            "tags": [
                "sdf",
                "shadow",
                "rect"
            ],
            "usePreview": 0,
            "username": "fb",
            "viewed": 564
        },
        "renderpass": [
            {
                "code": "float sdRoundRect( in vec2 p, in vec2 b, in float r ) {\n    vec2 q = abs(p)-b+r;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r;\n}\n\n\nvec4 normalBlend(vec4 src, vec4 dst) {\n    float finalAlpha = src.a + dst.a * (1.0 - src.a);\n    return vec4(\n        (src.rgb * src.a + dst.rgb * dst.a * (1.0 - src.a)) / finalAlpha,\n        finalAlpha\n    );\n}\n\n\nfloat sigmoid(float t) {\n    return 1.0 / (1.0 + exp(-t));\n}\n\n\nbool isInnerShadow = false; // <- Here\nfloat cornerRadius = 32.0;\nfloat blurRadius = 32.0f;\n\nfloat makeShadow(vec2 pos, vec2 halfSize, float cornerRd, float blurRd, float distMul) {\n    float dist = sigmoid(distMul * sdRoundRect(pos, halfSize, cornerRd + blurRd) / blurRd);\n    return clamp(dist, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 center = iResolution.xy / 2.0;\n    vec2 hsize = iResolution.xy / 4.0;\n    vec2 shadowOffset = vec2(0.0, iResolution.y / 15.0);\n    if (isInnerShadow)\n        shadowOffset = vec2(0.0);\n    \n    // Colors\n    vec3 buttonColor = vec3(0.85);\n    vec3 lowerShadowColor = vec3(0.25);\n    vec3 upperShadowColor = vec3(1.0);\n    \n    // This is a coefficent that round rect distance will be multiplied by\n    float distMul = 1.0;\n    if (isInnerShadow)\n        distMul = -1.0;\n    \n\tfloat lowerShadow = makeShadow(fragCoord - center + shadowOffset, hsize, cornerRadius, blurRadius, distMul);\n    float upperShadow = makeShadow(fragCoord - center - shadowOffset, hsize, cornerRadius, blurRadius, distMul);\n    float rect = clamp(sdRoundRect(fragCoord - center, hsize, cornerRadius), 0.0, 1.0);\n    float rectOpacity = 1.0 - rect;\n    if (isInnerShadow)\n        rectOpacity = rect;\n    \n    vec4 finalColor = normalBlend(vec4(lowerShadowColor, 1.0 - lowerShadow), vec4(buttonColor, 1.0));\n    if (distMul >= 0.0)\n        finalColor = normalBlend(vec4(upperShadowColor, 1.0 - upperShadow), finalColor);\n    finalColor = normalBlend(vec4(buttonColor, rectOpacity), finalColor);\n    fragColor = finalColor;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}