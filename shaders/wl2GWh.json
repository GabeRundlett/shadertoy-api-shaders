{
    "Shader": {
        "info": {
            "date": "1559407761",
            "description": "easy reaction diffusion tests",
            "flags": 32,
            "hasliked": 0,
            "id": "wl2GWh",
            "likes": 12,
            "name": "diffusion flow",
            "published": 3,
            "tags": [
                "reactiondiffusion"
            ],
            "usePreview": 0,
            "username": "tly",
            "viewed": 853
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 offset = 1.0/iResolution.xy;\n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImageCommon( float scale, out vec4 fragColor, in vec2 fragCoord, vec3 iResolution, float iTime, sampler2D iChannel0)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    if(iTime < 0.2){\n        vec4 pattern = vec4(rand(uv + vec2(0.6,-0.2) * iTime), rand(fract(uv * iTime)), rand(uv + vec2(0.5,0.2) * iTime), 1);\n    \tfragColor = mix(vec4(0), pattern, float(fragCoord.x < 0.5 * iResolution.x));\n    }else{\n       vec4 old = texture(iChannel0, uv);\n        vec2 v = normalize(old.zw - 0.7);\n        mat2 M = mat2(\n            v, vec2(-v.y, v.x)\n        );\n        M[0][0] += 0.4 * (old.x - 0.5);\n        M[1][1] += 0.3 * (old.y - 0.5);\n        M[1][0] += 0.02 * (old.w - 0.5);\n        M[0][1] += 0.2 * (old.z - 0.5);\n        \n        vec2 offset = scale / iResolution.xy;\n        fragColor = vec4(0);\n        const int r = 3;\n\n        for(int x = -r; x <= r; x++){\n            for(int y = -r; y <= r; y++){\n                fragColor += texture(iChannel0, (uv + vec2(x,y) * offset));\n            }\n        }\n        fragColor /= float((2*r+1) * (2*r+1));   \n        fragColor += \n            0.25 * texture(iChannel0, (uv + M * vec2(2,1) * offset)) + \n            0.25 * texture(iChannel0, (uv + M * vec2(-1,2) * offset)) + \n            0.25 * texture(iChannel0, (uv - M * vec2(2,1) * offset)) + \n            0.25 * texture(iChannel0, (uv - M * vec2(-1,2) * offset)) - \n            0.25 * texture(iChannel0, (uv - M * vec2(3,0) * offset)) - \n            0.25 * texture(iChannel0, (uv - M * vec2(0,3) * offset)) - \n            0.25 * texture(iChannel0, (uv + M * vec2(0,3) * offset)) -\n            0.25 * texture(iChannel0, (uv + M * vec2(0,3) * offset));\n        fragColor = clamp(fragColor,0.0,1.0);\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    mainImageCommon(1.0, fragColor, fragCoord, iResolution, iTime, iChannel0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    mainImageCommon(0.9, fragColor, fragCoord, iResolution, iTime, iChannel0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    mainImageCommon(0.8, fragColor, fragCoord, iResolution, iTime, iChannel0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    mainImageCommon(0.7, fragColor, fragCoord, iResolution, iTime, iChannel0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}