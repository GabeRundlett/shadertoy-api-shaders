{
    "Shader": {
        "info": {
            "date": "1597606945",
            "description": "beLow logo, animated",
            "flags": 0,
            "hasliked": 0,
            "id": "wlffDB",
            "likes": 4,
            "name": "beLow",
            "published": 3,
            "tags": [
                "logo"
            ],
            "usePreview": 0,
            "username": "klemek",
            "viewed": 284
        },
        "renderpass": [
            {
                "code": "#define EPS 0.0001\n#define PI 3.141593\n\n// DESIGN\n\n#define bar_w 0.066\n#define bar_h 0.28\n\n// EFFECTS\n\n#define drift_on 1.0\n#define drift_st 4.0\n#define drift_ln 2.0\n#define drift_cyc 30.0\n#define drift_spd 0.5\n\n#define wave_on 1.0\n#define wave_st 14.0\n#define wave_ln 2.0\n#define wave_cyc 30.0\n#define wave_spd 0.5\n#define wave_spd2 10.0\n\n#define spin_on 1.0\n#define spin_st 24.0\n#define spin_ln 1.0\n#define spin_cyc 30.0\n#define spin_spd 1.0\n\n#define dst_on 1.0\n#define dst_ln 4.0\n#define dst_st 10.0\n#define dst_cnt 8.0\n#define dst_spd 0.25\n#define dst_dst 0.1\n\n#define col_on 1.0\n#define col_ln dst_ln\n#define col_st dst_st\n#define col_cyc dst_ln * dst_cnt\n#define col_spd dst_spd\n#define col_dst 0.1\n\n// TIME UTILS\n\n// 1.0 between t=0 and t1 then 0.0 until t2 -> t=0\nfloat timed_act(float it, float t1, float t2, float spd)\n{\n    return (1.0 - step(t1 * spd, mod(it * spd, t2 * spd)));\n}\n\n// 0.0-> 1.0 (smooth) between t=0 and t1 then 0.0 until t2 -> t=0\nfloat timed_step(float it, float t1, float t2, float spd)\n{\n    return timed_act(it, t1, t2, spd) * smoothstep(0.0, 1.0, mod(it * spd, t1 * spd));\n}\n\n// 0.0 -> 1.0 -> 0.0 (smooth) between t=0 and t1 until t2 -> t=0\nfloat timed_bump(float it, float t1, float t2, float spd)\n{\n    return timed_act(it, t1, t2, spd) \n        * smoothstep(0.0, 1.0, mod(it * spd * 2.0, t1 * spd * 2.0)) // ascend\n        * smoothstep(1.0, 0.0, mod(it * spd * 2.0, t1 * spd * 2.0)  - t1 * spd); // descend\n}\n\n// SHAPES UTILS\n\nfloat filled_rect(vec2 uv, vec2 p0, vec2 p1)\n{\n    float c = 1.0;\n    c *= step(min(p0.x, p1.x), uv.x);\n    c *= (1.0 - step(max(p0.x, p1.x), uv.x));\n   \tc *= step(min(p0.y, p1.y), uv.y);\n    c *= (1.0 - step(max(p0.y, p1.y), uv.y));\n    return clamp(c, 0.0, 1.0);\n}\n\nfloat rect(vec2 uv, vec2 p0, vec2 p1, float t)\n{\n    float c = 0.0;\n    vec2 thick = vec2(t * 0.5);\n    c += filled_rect(uv, p0 - thick, p1 + thick);\n    c -= filled_rect(uv, p0 + thick, p1 - thick);\n    return clamp(c, 0.0, 1.0);\n}\n\n// VECTOR SPACE UTILS\n\nvec2 distortion(vec2 uv, float it, vec2 d, float spd, float cycles)\n{\n    float v = 1.0;\n    float cycle_time = 1.0 / spd;\n    v *= timed_act(it, cycle_time, cycle_time * cycles, spd);\n    v *= smoothstep(mod(it * spd, 1.0) - 0.5, mod(it * spd, 1.0) - 0.5 + d.y, uv.y);\n    uv.x += d.x * v * (1.0 - v);\n    return uv;\n}\n\n// LOGO DEFINITION\n\nfloat logo_border(vec2 uv, float it)\n{\n    float c = 0.0;\n    \n    float t0 = spin_on * timed_step(it - spin_st, spin_ln, spin_cyc, spin_spd);\n    vec2 spin1 = t0 * vec2(0.04, -0.035);\n    vec2 spin2 = t0 * vec2(0.04, -0.04);\n    float spin = t0 * 0.04;\n    float spiny1 = t0 * 0.035;\n    \n    // slightly asymetric on purpose\n    c += rect(uv, vec2(-0.40, -0.37) + spin1, vec2(0.36, 0.41) + spin2, 0.018);\n    c += rect(uv, vec2(-0.36, -0.41) - spin1, vec2(0.40, 0.37) - spin2, 0.018);\n    return clamp(c, 0.0, 1.0);\n}\n\nfloat logo_bars(vec2 uv, float it)\n{\n    float c = 0.0;\n    \n    \n    vec2 p0u = vec2(-4.0 * bar_w, 0.0);\n    vec2 p0d = vec2(-3.0 * bar_w, -bar_h);\n    vec2 dx = vec2(bar_w * 2.0, 0.0);\n    vec2 dy = vec2(0.0, bar_h * 2.0);\n    vec2 bar = vec2(bar_w, bar_h);\n    \n    float t0 = drift_on * timed_step(it - drift_st, drift_ln, drift_cyc, drift_spd);\n    vec2 drift = vec2(0.0, -t0 * bar_h * 2.0);\n    \n    float t1 = wave_on * timed_bump(it - wave_st, wave_ln, wave_cyc, wave_spd);\n    \n    for (int i = 0; i < 4; i++) {\n        float fi = float(i);\n        vec2 wave_up = vec2(0.0, t1 * bar_h * (sin(fi * 0.5 + mod(it * wave_spd - wave_st, wave_ln * wave_spd) * wave_spd2) * 0.5 - 0.5));\n        vec2 wave_down = vec2(0.0, t1 * bar_h * (sin((fi + 0.5) * 0.5 + mod(it * wave_spd - wave_st, wave_ln * wave_spd) * wave_spd2) * 0.5 - 0.5));\n        \n        // upper bars\n        c += filled_rect(uv, p0u + dx * fi + drift, p0u + dx * fi + bar + drift + wave_up);\n        \n        // lower bars\n        c += filled_rect(uv, p0d + dx * fi + drift - wave_down, p0d + dx * fi + bar + drift);\n        \n        if (abs(t0) > EPS)\n        {\n            // upper bars clone when drift\n            c += filled_rect(uv, p0u + dx * fi + drift + dy, p0u + dx * fi + bar + drift + dy);\n            // lower bars clone when drift\n\t\t\tc += filled_rect(uv, p0d + dx * fi + drift + dy, p0d + dx * fi + bar + drift + dy);\n        }\n    }\n    // mask to crop out the outside\n    c *= filled_rect(uv, vec2(-4.0 * bar_w, -bar_h), vec2(4.0 * bar_w, bar_h));\n    return clamp(c, 0.0, 1.0);\n}\n\n\nfloat logo(vec2 uv, float it)\n{\n    float c = 0.0;\n    c += logo_border(uv, it);\n    c += logo_bars(uv, it);\n    return clamp(c, 0.0, 1.0);\n}\n\n// MAIN\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord  - .5 * iResolution.xy)/min(iResolution.x, iResolution.y);\n\n\tuv = distortion(uv, iTime - dst_st, vec2(dst_dst * dst_on), dst_spd, dst_cnt);\n    \n    vec3 c3 = vec3(logo(uv, iTime));\n    \n    float color_dist = col_on * 0.01 * timed_bump(iTime - col_st, col_ln, col_cyc, col_spd);\n    if (abs(color_dist) > EPS)\n    { \n        c3 = vec3(\n        \tc3.x,\n        \tlogo(uv + color_dist * vec2(1.0, 0.0), iTime),\n        \tlogo(uv + color_dist * vec2(0.0, 1.0), iTime)\n        );\n    }\n    \n    // click to add color\n    c3 += step(EPS, iMouse.z) * (0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)));\n    \n    fragColor = vec4(c3,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}