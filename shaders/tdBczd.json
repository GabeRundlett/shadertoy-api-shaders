{
    "Shader": {
        "info": {
            "date": "1587160346",
            "description": "Just my first lil, shadertoy-made shader. Coolio.",
            "flags": 0,
            "hasliked": 0,
            "id": "tdBczd",
            "likes": 2,
            "name": "Funny lil sea",
            "published": 3,
            "tags": [
                "sea"
            ],
            "usePreview": 0,
            "username": "Rondaar",
            "viewed": 290
        },
        "renderpass": [
            {
                "code": "#define PI 3.14\n#define col0 vec4(0.58,0.56,0.66,1.0)\n#define col1 vec4(0.39,0.29,0.4,1.0)\n#define col2 vec4(0.09,0.01,0.05,1.0)\n#define sunCol vec4(0.9,1.0,0.87,1.0)\n\nfloat waveAlpha(vec2 uv, float height, float rate, float amplitude, float xOffset, float yOffset, float yWaveAmount){\n    return step(uv.y-height+sin(iTime + yOffset)*yWaveAmount, (sin(uv.x*PI*rate+ sin(xOffset*iTime))*0.5 + 0.5)*amplitude);\n}\nfloat circleAlpha(vec2 uv, vec2 pos, float radius){\n    uv.y = uv.y*iResolution.y/iResolution.x;\n \treturn step(distance(uv,pos),radius);\n}\nfloat circleAlphaOutline(vec2 uv, vec2 pos, float radius){\n    uv.y = uv.y*iResolution.y/iResolution.x;\n \treturn clamp(1.0-distance(uv,pos)/radius,0.0,1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tfloat wave0 = waveAlpha(uv, 0.2, 8.0, 0.15, 0.25, 0.0, 0.01);\n\tfloat wave1 = waveAlpha(uv, 0.1, 8.0, 0.15, -0.5, 0.1, 0.025);\n    float wave2 = waveAlpha(uv, 0.0, 8.0, 0.15, 0.5, 0.2, 0.03);\n\tfloat circle = circleAlpha(uv, vec2(0.75,0.4), 0.1);\n    float circleOutline = circleAlphaOutline(uv, vec2(0.75,0.4), 0.4);\n    vec4 col = vec4(0.73,0.8, 0.8, 1.0);\n    col = mix(col,col0,wave0);\n    col = mix(col,col1, wave1);\n    col = mix(col,col2, wave2);\n    col = mix(col, sunCol, circle);\n    col = mix(col, sunCol, circleOutline);\n    //col += vec4(circleOutline);\n    // Output to screen\n    fragColor = col;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}