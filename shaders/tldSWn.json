{
    "Shader": {
        "info": {
            "date": "1580769056",
            "description": "Blop, Blop, Blop, Blop, Blop, Blop",
            "flags": 0,
            "hasliked": 0,
            "id": "tldSWn",
            "likes": 3,
            "name": "大龙猫 - Quicky#020",
            "published": 3,
            "tags": [
                "quicky"
            ],
            "usePreview": 0,
            "username": "totetmatt",
            "viewed": 303
        },
        "renderpass": [
            {
                "code": "mat2 r(float a){return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\nfloat bump(vec2 uv,float offset) {\n uv *=r(iTime+offset);\n return smoothstep(0.,4.,abs(cos(iTime+2.*atan(uv.x,uv.y))))/8.;\n}\nfloat circl(vec2 uv,float r,float offset) {\n    return smoothstep(\n    0.09-(length(uv)*.05),\n    0.1,\n    length(uv)-r- \n    bump(uv,offset)\n    );\n}\nfloat fig(vec2 uv, float offset) {\n\nreturn max(circl(uv,.33,offset) , 1.-circl(uv,.3,offset));\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord.xy-.5*iResolution.xy )/ iResolution.y;\n      vec2 uuv = uv;  \n      uv*=2.;\n      \n      vec2 gid = floor(uv);\n      uv *= r(atan(uv.x,uv.y));\n      uv *=r(iTime*.123);\n      \n      uv = fract(+iTime*.124+uv*length(0.1*cos(uv+iTime)*10.))-.5;\n    \n    float d = min(fig(uv,0.) ,fig(uv,3.15/4.)) ;\n  \n    vec3 col = vec3(0.);\n    col.r = fig(uv,0.+sin(-iTime+gid.x*11.));\n    col.g = fig(uv,0.3-cos(iTime-gid.y*47.));\n    col.b = fig(uv,-0.3+tan(sin(length(gid)+iTime)));\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}