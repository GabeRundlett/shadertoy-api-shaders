{
    "Shader": {
        "info": {
            "date": "1704945712",
            "description": "waterfall",
            "flags": 0,
            "hasliked": 0,
            "id": "lflXz8",
            "likes": 1,
            "name": "waterfall 2d  mouse test",
            "published": 3,
            "tags": [
                "2d",
                "waterfall"
            ],
            "usePreview": 0,
            "username": "miregame",
            "viewed": 150
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec4 _ColorBottomDark=vec4(0.1, 0.1, 0.8, 1.0);\n    vec4 _ColorTopDark=vec4(0.1, 0.1, 0.8, 0.7);\n    vec4 _ColorBottomLight=vec4(1.0, 1.0, 1.0, 1.0);\n    vec4 _ColorTopLight=vec4(1.0, 0.6, 1.0, 1.0);\n    float _BottomFoamThreshold = 0.1;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 displ = texture(iChannel0, vec2(uv.x, uv.y + iTime / 5.0)).xy;\n    displ = ((displ * 2.0) - 1.0) * 0.3;\n\n    float noise = texture(iChannel1, vec2(uv.x, uv.y + iTime / 5.0) + displ).x;\n\n    vec4 col = mix(mix(_ColorBottomDark, _ColorTopDark, uv.y), mix(_ColorBottomLight, _ColorTopLight, uv.y), noise);\n    col = mix(vec4(1.0, 1.0, 1.0, 1.0), col, step(_BottomFoamThreshold, uv.y + displ.y)); \n\n\n    // 获取鼠标位置\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    \n    // 计算当前像素的位置\n    vec2 pos = fragCoord.xy / iResolution.xy;\n    \n    // 计算当前像素到鼠标位置的距离\n    float dist = distance(pos, mouse);\n    float radius = 0.1;\n    \n    // 如果当前像素在圆内，则不渲染\n    if (dist < radius) {\n        col = vec4(1.0, 1.0, 1.0, 0.0);\n    } else if(pos.y < mouse.y && abs(pos.x-mouse.x) < radius) {\n        // 否则计算渲染的像素数量\n        float count = 1.0 - smoothstep(0.0, 0.2, dist);\n        \n        // 计算扰动效果\n        float noise = sin(pos.y * 100.0) * 0.1;\n        \n        // 计算渲染的像素位置\n        vec2 renderPos = vec2(pos.x * count + noise, pos.y);\n        \n        // 如果当前像素在圆下方，则渲染成橙色\n        if (renderPos.y > mouse.y) {\n            //fragColor = vec4(1.0, 0.5, 0.0, 1.0);\n        } else {\n            col = vec4(1.0, 1.0, 1.0, 0.0);\n        }\n    }\n\n\n    // Normalized pixel coordinates (from 0 to 1)\n    //vec2 uv = fragCoord/iResolution.xy;\n    //uv = vec2(uv.x, uv.y+iTime);\n    // Time varying pixel color\n    //vec4 col = texture(iChannel0 , uv);\n    // vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}