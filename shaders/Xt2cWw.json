{
    "Shader": {
        "info": {
            "date": "1509936482",
            "description": "2nd shader for the midterm",
            "flags": 0,
            "hasliked": 0,
            "id": "Xt2cWw",
            "likes": 2,
            "name": "Z2 10/24/17 flower",
            "published": 3,
            "tags": [
                "graprog"
            ],
            "usePreview": 0,
            "username": "L1tang",
            "viewed": 120
        },
        "renderpass": [
            {
                "code": "//some math functions\n\nfloat parabola( float x, float k )\n{\n    return pow( 4.0*x*(1.0-x), k );\n}\nfloat gain(float x, float k) \n{\n    float a = 0.5*pow(2.0*((x<0.5)?x:1.0-x), k);\n    return (x<0.5)?a:1.0-a;\n}\nfloat impulse( float k, float x )\n{\n    float h = k*x;\n    return h*exp(1.0-h);\n}\n\n\nmat2 rotate2d(float angle)\n{\n    return mat2(cos(angle), -sin(angle),\n                sin(angle), cos(angle));\n}\n\nmat2 scale2d(vec2 value)\n{\n    return mat2(value.x, 0, 0, value.y);\n}\n\nvec3 shape(float radius, float ratio, float edge, vec2 pos,vec2 uv, vec3 color)\n{\n    vec2 shapePos = pos;\n    \n    \n    float dist = distance(shapePos, uv);\n    \n    //offset to 0,0\n    uv -=shapePos;\n    /*eclipse replace if the second value is a constant it will fill the circle and the background\n\tsmoothstep(dist, aConstant, radius);*/\n    float angle = atan(uv.y, uv.x);\n    float yeah = radius;\n    //radius = cos(4.*(angle*2.))*.4 / sin(4.*angle)*.3;\n    //radius = gain(angle, yeah)/10.;\n    \n    // gear radius += smoothstep(1., edge,cos(8.*angle))*.1;\n    // nice radius += smoothstep(1., edge,cos(12.*angle))*.2 + cos(4.*angle)*.3;\n    // sun radius += smoothstep(1., edge,cos(12.*angle))*.2 + cos(12.*angle)*.1;\n    // nice radius = smoothstep(1., edge,cos(9.*angle))*.2 + cos(6.*angle)*.1;\n    // no edge \n    radius += step(1.,cos(9.*angle))*.2 + cos(6.*angle)*.1;\n    // lantern radius += step(.1,cos(2.*angle))*.2 + smoothstep(.01, edge,cos(2.*angle)*.1);\n    \n    //cos(4.*angle)*.3\n    \n    //nice radius = cos(100.*angle)*(sin(iTime+radius));\n    //nice 2 radius = cos(iTime*angle)*(sin(iTime*10.+radius));\n    //nice 3radius = cos(1000.*angle)*(sin(iTime*10.+radius));\n    \n    float value = smoothstep(dist, dist + edge, radius);\n    vec3 finalColor = vec3(value);\n    //finalColor = mix(finalColor, color, value);\n    /*vec3 yeyo = mix(finalColor, color, yeah);\n    finalColor += yeyo;*/\n    \n    \n    return finalColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float ratio = iResolution.x/iResolution.y;\n    \n    uv.x *= ratio;\n    vec2 uv2= uv;\n    //uv2 += vec2(.5,.2);\n    vec2 uv3 = uv;\n    vec2 uv4 = uv;\n    //uv3 += vec2(-.5,-.2);\n    \n    vec2 pos = vec2(0.5*ratio, 0.5);\n    uv -= pos;\n    uv2-=pos;\n    uv3-=pos;\n    uv4-=pos;\n    \n    uv *= rotate2d(iTime) * scale2d(vec2(abs(sin(iTime))));\n    uv2 *= rotate2d(iTime) * -scale2d(vec2(abs(sin(iTime))));\n    uv3 *= rotate2d(-iTime) * -scale2d(vec2(abs(sin(iTime))));\n    uv4 *= rotate2d(-iTime) * scale2d(vec2(abs(sin(iTime))));\n    \n    uv += pos;\n    uv2 += pos;\n    uv3+= pos;\n    uv4+= pos ;\n    \n    vec3 orb = shape(.3, ratio, 0.01, pos, uv, vec3(1,.8,0));\n    vec3 orb2 = shape(.2, ratio, 0.01, pos, uv2, vec3(1,.8,0));\n    vec3 orb3 = shape(.15, ratio, 0.01, pos, uv3, vec3(1,.8,0));\n    vec3 orb4 = shape(.1, ratio, 0.01, pos, uv4, vec3(1,.8,0));\n    \n    vec3 final = mix(vec3(0,0,0), vec3(0,.3,1), orb);\n        \n    final = mix(final, vec3(1,.1,0), orb2); // mask\n    final = mix(final, vec3(.5,1,.5), orb3);\n    final = mix(final, vec3(1,.7,0), orb4);\n    \n    \n\tfragColor = vec4(final,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}