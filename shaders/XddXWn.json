{
    "Shader": {
        "info": {
            "date": "1458727865",
            "description": "In this shader, the distortion is such that div(D) = 0. This is a example of histogram-preserving distortion.\nThe advantage is that one does not need to recompute the MIPmap.\nMouse.xy controls scale and amplitude.",
            "flags": 0,
            "hasliked": 0,
            "id": "XddXWn",
            "likes": 12,
            "name": "histogram-preserving distortion",
            "published": 3,
            "tags": [
                "distortion",
                "histogram"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 1517
        },
        "renderpass": [
            {
                "code": "\n\n// --- Perlin noise by inigo quilez - iq/2013   https://www.shadertoy.com/view/XdXGW8\nvec2 hash( vec2 p )\n{\n\tp = vec2( dot(p,vec2(127.1,311.7)),\n\t\t\t  dot(p,vec2(269.5,183.3)) );\n\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( hash( i + vec2(0,0) ), f - vec2(0,0) ), \n                     dot( hash( i + vec2(1,0) ), f - vec2(1,0) ), u.x),\n                mix( dot( hash( i + vec2(0,1) ), f - vec2(0,1) ), \n                     dot( hash( i + vec2(1,1) ), f - vec2(1,1) ), u.x), u.y);\n}\n\nfloat turb( in vec2 uv )\n{ \tfloat f = 0.0;\n\t\n    mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n    f  = 0.5000*noise( uv ); uv = m*uv;\n\tf += 0.2500*noise( uv ); uv = m*uv;\n\tf += 0.1250*noise( uv ); uv = m*uv;\n\tf += 0.0625*noise( uv ); uv = m*uv;\n\treturn f; \n}\n// -----------------------------------------------\n\nvoid mainImage( out vec4 O, in vec2 U )\n{\n    vec2 uv = U / iResolution.y,\n         m = iMouse.xy /  iResolution.y;\n    if (length(m)==0.) m = vec2(.5);\n\t\n\tfloat f; \n  //f =  noise( 16.*uv );\n    f = turb(m.x*uv);\n\t// O = vec4(.5 + .5* f);\n    \n \tuv += 64.*vec2(-dFdy(f),dFdx(f)) * m.y;\n\tO = textureLod(iChannel0, uv, uv.x>.9?7.:0.); \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}