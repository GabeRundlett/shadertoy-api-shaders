{
    "Shader": {
        "info": {
            "date": "1607014784",
            "description": "when you want to check a variable  inside a deep function.\n\n( also shows display debug value at mouse position ).",
            "flags": 0,
            "hasliked": 0,
            "id": "WsVfWh",
            "likes": 10,
            "name": "debug display value anywhere",
            "published": 3,
            "tags": [
                "debug",
                "utils"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 1165
        },
        "renderpass": [
            {
                "code": "// === the magic function.  ==========================================\n#define db_display(X,Y,val) {                                             \\\n    vec2 U = vec2(15,10)* ( gl_FragCoord.xy/iResolution.xy - vec2(X,Y) ); \\\n    st_assert( pFloat(U,val).x < .5 );                                    \\\n}\n\n// === fonts utils from https://www.shadertoy.com/view/llySRh =========\n// ( can't be hidden in Common because, you know, can't access textures there for odd reasons.)\n\nvec4 char(vec2 p, int c) {// --- display char\n    vec2 dFdx = dFdx(p/16.), dFdy = dFdy(p/16.);\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n\treturn textureGrad( iChannel3, p/16. + fract( vec2(c, 15-c/16) / 16. ), \n                        dFdx, dFdy );\n}\nfloat dx = .4;\nvec4 pInt(vec2 p, float n) {// --- display int\n    vec4 v = vec4(0);\n    if (n < 0.) \n        v += char(p - vec2(-.5,0), 45 ),\n        n = -n;\n\n    for (float i = 3.; i>=0.; i--) \n        n /=  9.999999, // 10., // for windows :-(\n        v += char(p - dx*vec2(i,0), 48+ int(fract(n)*10.) );\n    return v;\n}\nvec4 pFloat(vec2 p, float n) { // --- display float4.4\n    vec4 v = vec4(0);\n    if (n < 0.) v += char(p - vec2(-.5,0), 45 ), n = -n;\n    v += pInt(p,floor(n)); p.x -= 4.*dx; // comment this line in abs(n) < 1\n    v += char(p, 46);      p.x -= dx;\n    v += pInt(p,fract(n)*1e4);\n    return v;\n}\n// -----------------------------------------------------------------\n\n\nfloat calc( vec2 U  ) { // ========== some deep compute function\n    \n    vec4 S = 10.*sin(vec4(20,17,21,0) + 3.*iTime); // some expressions \n    \n    // debug display the values you wish.  \n    db_display( .7,.8, S.x );\n    db_display( .7,.7, S.y );\n    db_display( .0,.0, S.z );\n\n    S *= U.xyxy;                                      // some result\n    float v = sin( S.x + 10.*sin(S.y  +10.*sin(S.z + 10.*sin(S.w))) );\n    return .5+.5*v; \n}\n\nvoid mainImage( out vec4 fragColor, vec2 fragCoord )  // ===============\n{\n    vec2 R = iResolution.xy,\n         U = fragCoord/R,\n         M = iMouse.xy/R - .5;\n    \n    fragColor = vec4( .3*calc(U) );\n    M = iMouse.xy/R; db_display( M.x,M.y, calc(M) ); // debug value at mouse pos\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}