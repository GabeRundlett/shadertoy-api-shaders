{
    "Shader": {
        "info": {
            "date": "1722546874",
            "description": "national day\na animation i saw on a drone light show i saw today",
            "flags": 0,
            "hasliked": 0,
            "id": "Mf2yzy",
            "likes": 3,
            "name": "1. august swiss national day",
            "published": 3,
            "tags": [
                "birthday"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 67
        },
        "renderpass": [
            {
                "code": "float f_n_sd_cross(\n    vec2 o_trn, \n    vec2 o_len\n){\n    vec2 o = abs(o_trn);\n    \n    float n = min(o.x, o.y);\n    vec2 o2 = o - vec2(o_len.x, 0.);\n    float n2 = max(o2.x, o2.y);\n    vec2 o3 = o - vec2(0., o_len.y);\n    float n3 = max(o3.x, o3.y);\n    if(o.x > o_len.x || o.y > o_len.y){\n        n = min(n2, n3);\n    }\n    return n;\n    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float n_scl_res_min = min(iResolution.x, iResolution.y);\n    vec2 o_trn = (fragCoord.xy-iResolution.xy*.5)/n_scl_res_min;\n    o_trn.y += sin(o_trn.x*12.-iTime*2.)*.02;\n    float n_center = 0.1;\n    float n_ratio_cross = 7./6.;\n    float n_aa = (1./n_scl_res_min);\n    float n = f_n_sd_cross(\n        o_trn,\n        vec2(n_center+n_ratio_cross*n_center)\n    );\n    \n    n_aa *= 4.;\n    n = smoothstep(n_center, n_center+n_aa, n);\n    \n    fragColor = vec4(\n        vec3(1., 0., 0.)*n\n        + vec3(1.,1.,1.)*(1.-n),\n        1.\n    );\n    \n    \n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}