{
    "Shader": {
        "info": {
            "date": "1676325918",
            "description": "Color- and contrast- animated simple halftone shader.",
            "flags": 0,
            "hasliked": 0,
            "id": "ct2XRV",
            "likes": 5,
            "name": "Yet Another Halftone Shader",
            "published": 3,
            "tags": [
                "2d",
                "animated",
                "halftone",
                "dithering"
            ],
            "usePreview": 1,
            "username": "barjin",
            "viewed": 239
        },
        "renderpass": [
            {
                "code": "int modulo = 8;\nfloat radius = 4.0;\n\nvec2 getClosestCenter(vec2 fragCoord){      \n    if(abs(int(fragCoord.y) % (modulo<<1) - modulo) < (modulo>>1)){\n        int y = int(fragCoord.y) - (int(fragCoord.y) % (modulo<<1)) + modulo;\n        int x = int(fragCoord.x) - (int(fragCoord.x) % modulo) + (modulo>>1);\n        \n        return vec2(x,y);\n    } else if (int(fragCoord.y) % (modulo<<1) < modulo) {\n        int y = int(fragCoord.y) - (int(fragCoord.y) % (modulo));\n        int x = int(fragCoord.x) - (int(fragCoord.x) % modulo) + ((int(fragCoord.x) % modulo) < modulo>>1 ? 0 : modulo);\n        \n        return vec2(x,y);\n    } else if (int(fragCoord.y) % (modulo<<1) > modulo) {\n        int y = int(fragCoord.y) - (int(fragCoord.y) % (modulo)) + modulo;\n        int x = int(fragCoord.x) - (int(fragCoord.x) % modulo) + ((int(fragCoord.x) % modulo) < modulo>>1 ? 0 : modulo);\n        \n        return vec2(x,y);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 ctr = getClosestCenter(fragCoord);\n    \n    vec4 val = texture(iChannel0, uv);\n    if(distance(fragCoord,ctr) < (sin(iTime)*0.5 + 2.0) * radius*(1.0 - (val.r+val.g+val.b)/3.0)) {\n        vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n        fragColor = vec4(col,1.0);\n        return;\n    }\n   \n\n    // Output to screen\n    fragColor = vec4(1,1,1,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}