{
    "Shader": {
        "info": {
            "date": "1573382690",
            "description": "Base pattern of  \"Hexagonal Interlacing\" [url]https://shadertoy.com/view/llfcWs[/url]\n\nNB: rnd is required because there are only 2 layers. Could we have a regular 3-layer weaving ? ;-)",
            "flags": 0,
            "hasliked": 0,
            "id": "tsyXRh",
            "likes": 12,
            "name": "Hexagonal Interlacing - base",
            "published": 3,
            "tags": [
                "hexagon",
                "pattern",
                "tile",
                "overlay",
                "weave",
                "faux"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 649
        },
        "renderpass": [
            {
                "code": "// Fork of \"Hexagonal Interlacing\" https://shadertoy.com/view/llfcWs\n// isolating the base weaving\n\nfloat rad2 = .666,\n      TAU = 6.283;\nvec2 s = vec2( 3, sqrt(3.));\n\n#define rnd(p)   fract(sin(dot(p, vec2(411.3, 2899.7)))*43758.5453)\n#define rot(a)   mat2(cos(a), sin(a), -sin(a), cos(a))\n\nvec4 getHex(vec2 p){\n    vec4 hC = floor( vec4( p, p - vec2(s.y, s.y/2.))/s.xyxy ) + .5;\n    vec2 a = p -  hC.xy *s, \n         b = p - (hC.zw + .5) *s;\n    return dot(a,a) < dot(b,b) \n        ? vec4(a, hC.xy) \n        : vec4(b, hC.zw+.5); \n}\n\nfloat mask( vec2 p) {\n    float ia = floor( atan(p.y,p.x) *3./TAU) + .5;\n    p *= rot(ia *TAU/3.); \n    p.x -= 1.; \n    return length(p) - rad2;\n}\n\nvoid mainImage( out vec4 O, vec2 u ){\n\n\tvec2  R = iResolution.xy,\n          U = 5.* (u -R*.5)/R.y;\n    O -= O;\n    vec4 hp = getHex(U);\n   // if( rnd(hp.zw) > .5 ) hp.x = -hp.x;                         // original random control\n  \n    vec2 D = vec2( mask(hp.xy), mask(hp.xy*rot(-TAU/6.) ) ),      // axial distance of the 2 layers\n         M = smoothstep(-5./R.y,5./R.y, D),                       // masks\n         B = smoothstep(0.,.05, D);                               // border decoration\n // B = smoothstep(0., 1., (.65 + D*D*4.)*B);                     // shaded relief\n    float m = rnd(hp.zw) > .5 ? M.x : 1.-M.y;                     // layer-preserving random control\n\n // O += mix( B.y, B.x, m );                                      // simple display\n    O += mix( B.y*.5, B.x, m );                                   // 2-tints display\n                                             // --- for next ones uncomment original random control\n // O += mix( -4.*D.x*B.y, B.x, M.x);                             // shadows\n // O += mix( -D.x*B.y, (1.+D.y)*B.x, M.x);                       // pseudo-Z\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}