{
    "Shader": {
        "info": {
            "date": "1584739494",
            "description": "Using a clever sorting algorithm to render a caustic. \nHere is another cool use of the JFA algorithm :\n[url]https://www.shadertoy.com/view/ldV3Wc[/url]",
            "flags": 32,
            "hasliked": 0,
            "id": "wdsyDH",
            "likes": 38,
            "name": "JFA Caustic",
            "published": 3,
            "tags": [
                "jfa"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 810
        },
        "renderpass": [
            {
                "code": "Main {\n\tif (iFrame%I<I-1) discard;\n    Q = A(U);\n    Q *= sqrt(Q);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel1,(U)/R)\n#define C(U) texture(iChannel2,(U)/R)\n#define D(U) texture(iChannel3,(U)/R)\n#define Main void mainImage (out vec4 Q, vec2 U) \n#define Init if (iFrame < 1) \n#define Border if (U.x<1.||R.x-U.x<1.||U.y<1.||R.y-U.y<1.)\n#define T(U) A((U)-dt*A(U).xy)\n#define NeighborhoodT vec4 n = T(U+vec2(0,1)), e = T(U+vec2(1,0)), s = T(U-vec2(0,1)), w = T(U-vec2(1,0)), m = 0.25*(n+e+s+w);\n#define Neighborhood vec4 n = A(U+vec2(0,1)), e = A(U+vec2(1,0)), s = A(U-vec2(0,1)), w = A(U-vec2(1,0)), m = 0.25*(n+e+s+w);\n#define grd 0.25*vec2(e.z-w.z,n.z-s.z)\n#define div 0.25*(e.x-w.x+n.y-s.y)\n#define dt (iFrame<500?1.:0.1)\n#define I 4\n//Dave H :\nvec3 hash33(vec3 p3)\n{\n\tp3 = fract(p3 * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy + p3.yxx)*p3.zyx);\n}\nfloat pie (vec2 p, vec2 a, vec2 b) {\n\tvec2 m = 0.5*(a+b); // midpoint\n    if (length(a-b)<1e-3) return 1e3; // ignore self\n\treturn abs(dot(p-m,b-m)/dot(b-m,b-m)); // pojection\n} ",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "Main {\n\t// Fluid:\nif (iFrame%2==0) {\n    Q = T(U);\n    NeighborhoodT;\n    Q.xy -= dt*grd;\n    Init Q = vec4(0);\n    Border Q.xy *= 0.;\n} else {\n    Q = A(U);\n    Neighborhood;\n    Q.z -= dt*div;\n}\n\tvec2 mo = 0.5*R;\n    if (iMouse.z>0.) mo = iMouse.xy;\n    Q = mix(Q,vec4(0.5*sin(dt*2.*iTime)*\n            vec2(sin(dt*iTime),0),\n            Q.z,\n            1.\n        ),\n     exp(-.2*length(U-mo)));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Translate Coordinate by gradient of pressure\n// Strength of translation determined by wavelength\nMain {\n    if (iFrame%I==0) {\n        Neighborhood;\n        Q.xyz = hash33(vec3(U,iFrame));\n        Q.xy = U+Q.xy*2.-1.;\n        Q.xy += 3e3*grd*(1.+Q.z);\n    } else Q = B(U);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Hierarchical Sort\nvoid X (inout vec4 Q, inout vec4 r, vec2 U, vec2 u) {\n        vec4 b,c;vec2 i; float l;\n        if (iFrame%I==0) {\n            i = U+u; \n            b = B(i);\n            l = length(b.xy-U);\n            if (l<r.x) {\n                Q.xy = i;\n                r.x = l;\n            } else if (l<r.y) {\n                Q.zw = i;\n                r.y = l;\n            }\n        } else {\n            c = C(U+u);\n            b = B(c.xy);\n            vec4 bb = B(Q.xy);\n            i = c.xy;\n            l = length(b.xy-U);\n            if (l<r.x) {\n                Q.xy = i;\n                r.x = l;\n            } else if (l<r.y) {\n                Q.zw = i;\n                r.y = l;\n            }\n            b = B(c.zw);\n            bb = B(Q.xy);\n            i = c.zw;\n            l = length(b.xy-U);\n            if (l<r.x) {\n                Q.xy = i;\n                r.x = l;\n            } else if (l<r.y) {\n                Q.zw = i;\n                r.y = l;\n            }\n        }\n    \t\n}\nMain {\n    Q = vec4(1e9);\n    vec4 r = vec4(1e9);\n    if (iFrame%I>0) {\n    \tQ = C(U);\n        r = vec4(\n        \tlength(U-B(Q.xy).xy),\n        \tlength(U-B(Q.zw).xy),\n            0,0\n        );\n    }\n    float k = exp2(float(I-(iFrame%I)));\n    X(Q,r,U,vec2(0,k));\n    X(Q,r,U,vec2(k,0));\n    X(Q,r,U,vec2(0,-k));\n    X(Q,r,U,vec2(-k,0));\n    \n    X(Q,r,U,vec2(k,k));\n    X(Q,r,U,vec2(-k,k));\n    X(Q,r,U,vec2(k,-k));\n    X(Q,r,U,vec2(-k,-k));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Draw Photons to the screen\nvec4 P (vec2 U, vec3 p) {\n\treturn 0.0033/(1.+dot(U-p.xy,U-p.xy))*max(cos(p.z*6.2+vec4(1,2,3,4)),0.);\n}\nMain {\n    \n    Q = D(U);\n    if (iFrame%I==0) Q *= 0.9;\n    for (int x = -3; x <=3; x++) {\n        for (int y = -3; y<=3; y++) {\n            vec2 u = U+vec2(x,y);\n        \tvec4 c = C(u);\n            vec4 b = B(c.xy);\n            Q += P(U,b.xyz);\n            b = B(c.zw);\n            Q += P(U,b.xyz);\n            b = B(u);\n            Q += P(U,b.xyz);\n        }\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}