{
    "Shader": {
        "info": {
            "date": "1650021527",
            "description": "Undulating liquid. A little fuzzy.",
            "flags": 0,
            "hasliked": 0,
            "id": "Nl2cR3",
            "likes": 3,
            "name": "Liquid Fuzz",
            "published": 3,
            "tags": [
                "abstract",
                "ambient",
                "liquid"
            ],
            "usePreview": 0,
            "username": "tillmanjex",
            "viewed": 298
        },
        "renderpass": [
            {
                "code": "// Modified version of: https://www.shadertoy.com/view/4sjXRG\n\nfloat ltime;\n\nfloat noise(vec2 p)\n{\n  return cos(p.x*1.5) * sin(p.y*(1.5 + sin(ltime/11.))) + .2; \n}\n\nmat2 rotate(float angle)\n{\n    return mat2(0.0, -2.0, sin(1.0), 0.0);\n  //return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\n\nfloat fbm(vec2 p)\n{\n  p *= 1.0;\n  float f = 0.0;\n  float amp = .5;\n  for( int i = 0; i < 3; i++) {\n    mat2 modify = rotate(ltime/50. * float(i*i));\n    f += amp*noise(p);\n    p = modify * p;\n    p *= 2.;\n    amp /= 2.2;\n  }\n  return f;\n}\n\nfloat pattern(vec2 p, out vec2 q, out vec2 r) {\n  q = vec2( fbm(p + vec2(1.)),\n\t    fbm(rotate(.1*ltime)*p + vec2(3.)));\n  r = vec2( fbm(rotate(.2)*q + vec2(0.)),\n\t    fbm(q + vec2(0.)));\n  return fbm(p + 1.*r);\n\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(0.7059, 0.1333, 0.1333, 2.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 3.0 - K.www);\n    return c.z - K.x * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), smoothstep(0.5, 0.9, c.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 p = fragCoord.xy / iResolution.xy;\n  ltime = iTime;\n  float ctime = iTime + fbm(p/8.)*40.;\n  float ftime = fract(ctime/6.);\n  ltime = floor(ctime/6.) + (1.-cos(ftime*3.1415)/2.);\n  ltime = ltime*6.;\n  vec2 q;\n  vec2 r;\n  float f = pattern(p, q, r);\n  vec3 col = hsv2rgb(vec3(q.x/10. + ltime/100. + .4, abs(r.y)*3. + .1, r.x + f));\n  float vig = 1. - pow(4.*(p.x - .5)*(p.x - .5), 10.);\n  vig *= 1. - pow(4.*(p.y - .5)*(p.y - .5), 10.);\n  fragColor = vec4(col*vig,1.);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}