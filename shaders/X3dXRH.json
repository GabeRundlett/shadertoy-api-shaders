{
    "Shader": {
        "info": {
            "date": "1718627683",
            "description": "universe",
            "flags": 0,
            "hasliked": 0,
            "id": "X3dXRH",
            "likes": 8,
            "name": "starway",
            "published": 3,
            "tags": [
                "light",
                "color",
                "universe"
            ],
            "usePreview": 0,
            "username": "nnew",
            "viewed": 160
        },
        "renderpass": [
            {
                "code": "\nfloat noise3( vec3 x ) {\n    vec3 p = floor(x),f = fract(x);\n\n    f = f*f*(3.-2.*f);  // or smoothstep     // to make derivative continuous at borders\n\n#define hash3(p)  fract(sin(1e3*dot(p,vec3(1,57,-13.7)))*4375.5453)        // rand\n   \n    return mix( mix(mix( hash3(p+vec3(0,0,0)), hash3(p+vec3(1,0,0)),f.x),       // triilinear interp\n                    mix( hash3(p+vec3(0,1,0)), hash3(p+vec3(1,1,0)),f.x),f.y),\n                mix(mix( hash3(p+vec3(0,0,1)), hash3(p+vec3(1,0,1)),f.x),      \n                    mix( hash3(p+vec3(0,1,1)), hash3(p+vec3(1,1,1)),f.x),f.y), f.z);\n}\n\n#define noise(x) (noise3(x)+noise3(x+11.5)) / 2. // pseudoperlin improvement from foxes idea\nfloat star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = (iTime*0.1) * 1.0;\nvec4 o = fragColor;\nvec4 o2 = fragColor;\nvec4 O = fragColor;\nvec2 F = fragCoord;\nvec2 U ,i = fragCoord;\n    float s = 0.0, v = 0.0;\n    vec2 uv = (-iResolution.xy + 2.0 * fragCoord ) / iResolution.y;\nfloat t = time*0.0015;\n\nvec2 R = iResolution.xy;\n    o2-=o2;\n    for(float d,t = iTime*.1, i = 0. ; i > -1.; i -= .06 )          \n    {   d = fract( i -3.*t );                                          \n        vec4 c = vec4( ( F - R *.5 ) / R.y *d ,i,0 ) * 28.;            \n        for (int j=0 ; j++ <27; )                                      \n            c.xzyw = abs( c / dot(c,c)                                \n                    -vec4( 7.-.2*sin(t) , 6.3 , .7 , 1.-cos(t/.8))/7.);\n       o2 -= c * c.yzww  * d--*d  / vec4(3,5,1,1);                    \n    }\nfloat t2 = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + 1.00)) * 1.2;\nfloat si = sin(t2);\nfloat co = cos(t2);\nmat2 ma = mat2(co, si, -si, co);\n\no=++o/o;\n \n  vec2 uv2 = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n   vec2 uv3 = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n    vec2 uv4 = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n   uv3.x-=0.5;\n   uv3.y+=0.25;\n    uv4.x+=0.21;\n   uv4.y+=0.15;\n    uv2 *= 2.0 * ( cos(iTime * 2.0) -2.5); \n     uv3 *= 2.0 * ( sin(iTime * 2.0) -2.5); \n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;  \n   \n \nfor (float s=0.; s<10.; s++) {\n  vec3 p = vec3(-.1,0.2, fract(.0043*(s*iDate.w*0.451)) );\n        p.xy*=ma;\n        p.xy += s*i/3000. ;\n       \nfor (int k=0; k<9; k++)\n            p = abs(p)/(o.a=dot(p,p)) - 0.8;\n           \no += o.a;\n}\no *=0.0029;\n\nvec3 col = vec3(0.0);\nvec3 init = vec3(0.25, 0.25 + sin(time * 0.001) * .1, time * 0.0008);\nfor (int r = 0; r < 100; r++)\n{\nvec3 p = init + s * vec3(uv, 1.);\np.xy*=ma;\nfor (int i=0; i < 10; i++) p = abs(p * 2.04) / dot(p, p) - 0.75;\nv += length(p * p) * smoothstep(0.0, 0.5, 0.9 - s) * .0052;\n\ncol +=  vec3(v * 0.28, 0.5 - s * .5, .7 + v+o2.xyz  * 0.5) * v* 0.013;\ns += .013;\n}\nfragColor = vec4(col+o.xyz*vec3(0.0,0.5,0.5),0);\n\n       fragColor+= vec4(star(uv3, anim) * vec3(0.05,0.5,0.05)*0.15, 1.0);\n            fragColor*= vec4(star(uv2, anim) * vec3(0.35,0.2,0.15)*5., 1.0);\n                     fragColor+= vec4(star(uv4, anim) * vec3(0.105,0.5,0.0)*0.005, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}