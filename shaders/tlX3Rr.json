{
    "Shader": {
        "info": {
            "date": "1555467347",
            "description": "What the fuck is this thing? Like seriously. What is the imaginary component and what is the real component? Why are these two equations so stable? why are they so similar? Why can these equations describe so many different physical systems?",
            "flags": 32,
            "hasliked": 0,
            "id": "tlX3Rr",
            "likes": 11,
            "name": "What is the Schrodinger Equation",
            "published": 3,
            "tags": [
                "physics",
                "quantum",
                "schrodinger"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 922
        },
        "renderpass": [
            {
                "code": "#define R iResolution.xy\nvec4 T (vec2 U) {return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U ) {Q = T(U);Q=Q*0.+length(Q.xy);}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\nvec4 T (vec2 U) {return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    Q = T (U)*.99999;\n    #define e  vec2 (1,0)\n    float dQ = (0.2+0.8*smoothstep(length(U-0.5*R),length(U-0.5*R)-1.,0.4*R.y))*\n        ((T(U+e.xy)+T(U-e.xy)+T(U+e.yx)+T(U-e.yx)).x/4.-Q.x);\n    \n    /* Z = wavefunction\n\t\t\n\t\tZ = dZ*dt/dx + (1+i)*Img(Z) + (0-i)*Real(Z)   (Schr)\n\n\t\tZ = dZ*dt/dx + (1+i)*Img(Z) + (1+0)*Real(Z)   (Wave)\n\n\n\t*/\n    \n    //Schr Eq :\n      Q.y += dQ-Q.x;\n\t  Q.x +=    Q.y;\n     /*\n\t\tQ.y += dQ;\n\t\tQ.x += Q.y;\n\t */\n    //Wave Eq ^\n    \n    \n    \n    \n    \n    \n    // Boundaries:\n    vec2 M = (U-iMouse.xy)*.08;\n    vec2 m = (iMouse.xy-iMouse.zw)*.08;\n    if (iMouse.z > 0. ) Q += .5*vec4(vec2(cos(m.x*M.x+m.y*M.y),sin(m.x*M.x+m.y*M.y))*exp(-2.*length(M)),0,0);\n    if (iFrame < 1){ vec2 D = (U-0.5*R)*.08;\n                    Q.xy = 2.*exp(-.5*length(D))*(vec2(cos(-9.*D.x+D.y),sin(-9.*D.x+D.y)));}\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}