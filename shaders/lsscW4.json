{
    "Shader": {
        "info": {
            "date": "1488307656",
            "description": "A Lights shader for Game Maker Studio\n\nMy AppÂ´s:\nBluetooth Multiplayer: play.google.com/store/apps/details?id=com.gaming_apps.bluetooth_game_duel\nWater Physics Simulation: play.google.com/store/apps/details?id=com.gaming_apps.water_physics_simulation",
            "flags": 0,
            "hasliked": 0,
            "id": "lsscW4",
            "likes": 3,
            "name": "Game Maker Studio Shader -Lights",
            "published": 3,
            "tags": [
                "light",
                "gamemakerstudio",
                "glim888",
                "gamemakerstudioshaders"
            ],
            "usePreview": 0,
            "username": "Glim888",
            "viewed": 1159
        },
        "renderpass": [
            {
                "code": "/*\niResolution.x = screen_width\niResolution.y = screen_height\n\nfragCoord.x = number of the pixel from left\nfragCoord.y = number of the pixel from bottom\n*/\n\n#define PI 3.14159\n\n//################################\n//######## CHANGE ME #############\n//################################\nconst float POINT_SIZE = 0.09;\t\t  //radius (higher == bigger)\nconst float BRIGHTNESS = 0.15;\t\t  \nconst vec3 COLOR = vec3(0.4,1.0,0.8); //r,g,b (0 to 1)\n//################################\n//################################\n//################################\n\n\n///point(global time, uv, center of the point, xScale, yScale, )\nfloat point(float time, vec2 _uv, vec2 pos, float xs, float ys, float timeAdd, float size)\n{\n   float hypo = distance(vec2(pos.x * sin(time+(timeAdd*2.0*PI))*xs,\n                              pos.y * cos(time+(timeAdd*2.0*PI))*ys),_uv);\n   return size / pow(length (hypo),1.8);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \t\n    /*\n\tuv = -1 -- 0 -- 1\n\t*/\n\tvec2 uv = (fragCoord.xy - (iResolution.xy/2.0)) / iResolution.xy;\n\tuv *= 2.0; \n    \n    vec2 mouse = (iMouse.xy - (iResolution.xy/2.0)) / iResolution.xy;\n    mouse *= 2.0;   \n    float col = 0.0;\n    \n    //Add Points\n    col += point(iTime,uv,mouse, 0.1,0.1,0.0,POINT_SIZE);\n    col += point(iTime,uv,vec2(0.5,0.5), 0.5,0.3,0.0,POINT_SIZE);\n    col += point(iTime,uv,vec2(0.5,0.5), 0.3,0.5,0.1,POINT_SIZE);\n    col += point(iTime,uv,vec2(0.5,0.5), 0.5,0.3,0.2,POINT_SIZE);\n    col += point(iTime,uv,vec2(0.5,0.5), 0.3,0.5,0.3,POINT_SIZE);\n    col += point(iTime,uv,vec2(0.5,0.5), 0.5,0.3,0.4,POINT_SIZE);\n    col += point(iTime,uv,vec2(0.5,0.5), 0.3,0.5,0.5,POINT_SIZE);\n    col += point(iTime,uv,vec2(0.5,0.5), 0.5,0.3,0.6,POINT_SIZE);\n    col += point(iTime,uv,vec2(0.5,0.5), 0.3,0.5,0.7,POINT_SIZE);\n    col += point(iTime,uv,vec2(0.5,0.5), 0.5,0.3,0.8,POINT_SIZE);\n    col += point(iTime,uv,vec2(0.5,0.5), 0.3,0.5,0.9,POINT_SIZE);\n    \n    col += point(iTime,uv,vec2(0.5,0.5), 1.5,1.5,0.0,POINT_SIZE);\n    col += point(iTime,uv,vec2(0.5,0.5), 1.5,1.5,0.25,POINT_SIZE);\n    col += point(iTime,uv,vec2(0.5,0.5), 1.5,1.5,0.5,POINT_SIZE);\n    col += point(iTime,uv,vec2(0.5,0.5), 1.5,1.5,0.75,POINT_SIZE);\n    \n    col += point(iTime,uv,vec2(0.5,0.5), 1.0,2.5,0.0,POINT_SIZE);\n    col += point(iTime,uv,vec2(0.5,0.5), 2.5,-1.0,0.25,POINT_SIZE);\n    col += point(iTime,uv,vec2(0.5,0.5), 1.0,2.5,0.5,POINT_SIZE);\n    col += point(iTime,uv,vec2(0.5,0.5), 2.5,-1.0,0.75,POINT_SIZE);\n    \n    col -= point(iTime,uv,vec2(0.5,0.5), 0.5,0.4,0.0,POINT_SIZE*0.8);\n    col -= point(iTime,uv,vec2(0.5,0.5), 0.5,-0.2,0.25,POINT_SIZE*0.8);\n    col -= point(iTime,uv,vec2(0.5,0.5), 0.5,0.2,0.5,POINT_SIZE*0.8);\n    col -= point(iTime,uv,vec2(0.5,0.5), 0.5,-0.4,0.75,POINT_SIZE*0.8);\n    \n    col += point(iTime,uv,vec2(0.5,0.5), 5.5,0.2,0.5,POINT_SIZE*2.0);\n    col += point(iTime,uv,vec2(0.5,0.5), -5.5,-0.2,0.0,POINT_SIZE*2.0);\n\n    col *= BRIGHTNESS;\n    \n\tfragColor = vec4(COLOR.r * col, COLOR.g * col, COLOR.b* col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}