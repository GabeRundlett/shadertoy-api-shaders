{
    "Shader": {
        "info": {
            "date": "1608176064",
            "description": "Implementation of HSL colourise, based off GIMP's colourise\nPreserves luminance while colourising.\nI also did a bit of a write up to those interested: https://antikrem.github.io/Colourise/",
            "flags": 0,
            "hasliked": 0,
            "id": "wdKfDc",
            "likes": 0,
            "name": "HSL Colourise",
            "published": 3,
            "tags": [
                "hsl",
                "colourise"
            ],
            "usePreview": 0,
            "username": "antikrem",
            "viewed": 304
        },
        "renderpass": [
            {
                "code": " vec3 hsl2rgb(vec3 color) {\n    vec3 rgb = clamp( \n\t\t\tabs(mod(color.x * 6.0+vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, \n\t\t\t0.0, \n\t\t\t1.0\n\t\t);\n    return color.z + color.y * (rgb - 0.5) * (1.0 - abs(2.0 * color.z - 1.0));\n}\n\n\nvec3 colourise(vec3 hsl, vec3 texel) {\n\tfloat lum = dot(texel, vec3(0.2126, 0.7152, 0.0722));\n    \n    hsl.b = 2.0 * hsl.b - 1.0;\n    \n    if (hsl.b > 0.0) {\n    \tlum = lum * (1.0 - hsl.b);\n        lum += 1.0 - (1.0 - hsl.b);\n    }\n    else if (hsl.b < 0.0) {\n        lum = lum * (hsl.b + 1.0);\n    }\n    \n    return hsl2rgb(vec3(hsl.rg, lum));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 base = texture( iChannel0, uv ).xyz;\n    \n    // Hue with a period of 1 unit\n    float hue = 0.0;\n    \n    // Range is [0, 1] (0 is greyscale, 1 is completely saturated)\n    float sat = 0.75;\n    \n    // Range is [0, 1] (0 is black, 1 is complete white)\n    float lightness = 0.55;\n    \n    vec3 hslColouriser = vec3(hue, sat, lightness);\n    \n    vec3 colour = colourise(hslColouriser, base);\n\n    fragColor = vec4(uv.x < 0.5 ? colour : base, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}