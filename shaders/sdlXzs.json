{
    "Shader": {
        "info": {
            "date": "1619103828",
            "description": "pendulum",
            "flags": 0,
            "hasliked": 0,
            "id": "sdlXzs",
            "likes": 3,
            "name": "Pendulum integrator",
            "published": 3,
            "tags": [
                "sin"
            ],
            "usePreview": 0,
            "username": "michael0884",
            "viewed": 288
        },
        "renderpass": [
            {
                "code": "float sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n\nfloat sinline(in vec2 p, float amp, float freq)\n{\n    float s0 = 2.14*sin(0.1*iTime);\n    float c0 = 2.14*cos(0.1*iTime);\n    float s1 = 1.0;\n    float c1 = 0.0;\n    float sd = 1e10;\n    \n    float x = 0.0;\n    float dx = 0.4;\n    for(int i = 0; i < 256; i++)\n    {\n        //integrate \n        c1 = c0 - (sin(s0))*dx;\n        s1 = s0 + c1*dx;\n        \n        //plot line\n        sd = min(sd, sdSegment(p, vec2(x*freq, s0*amp), vec2((x+dx)*freq, s1*amp)));\n        \n        x += dx;\n        c0 = c1; s0 = s1;\n    }\n    \n    return sd;\n}\n\nvoid mainImage( out vec4 C, in vec2 X )\n{\n    float sd = sinline(X - iResolution.xy*vec2(0.0,0.5), 25.0, 30.);\n\n    vec3 col = (sin(sd/4.0)*0.5 + 0.5)/(1.0 + 0.1*sd*vec3(0.792,0.3,0.098));\n    // Output to screen\n    C = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}