{
    "Shader": {
        "info": {
            "date": "1715042159",
            "description": "Just a harmless toxic nebula",
            "flags": 0,
            "hasliked": 0,
            "id": "4fVSWz",
            "likes": 1,
            "name": "Toxic Nebula",
            "published": 3,
            "tags": [
                "noise",
                "clouds",
                "gradient",
                "space",
                "background",
                "nebula",
                "toxic"
            ],
            "usePreview": 0,
            "username": "Neuromind",
            "viewed": 118
        },
        "renderpass": [
            {
                "code": "vec3 palette(float t) {\n    float r = 0.3 + 0.7 * sin(6.2831 * (t + 0.5));  \n    float g = 0.3 + 0.7 * cos(6.2831 * t);           \n    return vec3(r, g, 0.2);                          \n}\n\nfloat hash(float n) {\n    return fract(sin(n) * 43758.5453);\n}\n\nfloat noise(vec3 x) {\n    const vec3 step = vec3(110, 241, 171);\n    vec3 i = floor(x);\n    vec3 f = fract(x);\n    f = f * f * (3.0 - 2.0 * f);\n    float n = dot(i, step);\n    return mix(mix(mix(hash(n + dot(step, vec3(0, 0, 0))), hash(n + dot(step, vec3(1, 0, 0))), f.x),\n                   mix(hash(n + dot(step, vec3(0, 1, 0))), hash(n + dot(step, vec3(1, 1, 0))), f.x), f.y),\n               mix(mix(hash(n + dot(step, vec3(0, 0, 1))), hash(n + dot(step, vec3(1, 0, 1))), f.x),\n                   mix(hash(n + dot(step, vec3(0, 1, 1))), hash(n + dot(step, vec3(1, 1, 1))), f.x), f.y), f.z);\n}\n\nfloat fbm(vec3 x) {\n    float v = 0.0;\n    float a = 1.0;\n    vec3 shift = vec3(100);\n    x += vec3(iTime * 0.1);\n    for (int i = 0; i < 6; ++i) {\n        v += a * noise(x);\n        x = x * 2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 ro = vec3(0.0, 0.0, -1.0);\n    vec3 rd = normalize(vec3(uv - 0.5, 1.0));\n\n   \n    float nebulaIntensity = fbm(ro + rd * 0.8);\n    vec3 col = vec3(0.05, 0.05, 0.05) + 0.15 * palette(nebulaIntensity);\n    col *= 0.5 + 0.5 * nebulaIntensity;\n\n   \n    vec3 cometPosition = vec3(sin(iTime * 0.2), cos(iTime * 0.2), -1.0);\n    float cometSize = 0.03;\n    float cometIntensity = smoothstep(cometSize, cometSize - 0.05, length(rd - cometPosition));\n    col += vec3(1.0, 1.0, 1.0) * cometIntensity;\n    fragColor = vec4(col, 1.0);\n}\n\n/** SHADERDATA\n{\n    \"title\": \"Toxic Nebula\",\n    \"description\": \"A dynamic toxic nebula visualization.\",\n    \"model\": \"space\"\n}\n*/\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}