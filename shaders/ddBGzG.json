{
    "Shader": {
        "info": {
            "date": "1667778040",
            "description": "distance to multiple points with an offset in the animation",
            "flags": 0,
            "hasliked": 0,
            "id": "ddBGzG",
            "likes": 1,
            "name": "distance to multiple points ",
            "published": 3,
            "tags": [
                "distance",
                "points",
                "offset"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 152
        },
        "renderpass": [
            {
                "code": "const float n_tau = 6.2831;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float n_amp = sin(iTime*0.5);\n    float n_max_points = 5.0;\n    vec2 o_pix_cor_nor = fragCoord.xy / iResolution.xy; \n    vec2 o_pix_cor_nor_trans = o_pix_cor_nor-vec2(0.0, 0.0); \n    fragColor = vec4(1.0);\n    float n_dist_lowest = 1.0;\n    float n_rot_glob = iTime;\n    \n    float n_x_max = 10.0;\n    float n_y_max = 10.0; \n\n    float n_col_fact = 1.0;\n    float n_index_norm = 0.0;\n\n    for(float n_x_norm = 0.0; n_x_norm<1.0; n_x_norm+=(1.0/n_x_max)){\n        for(float n_y_norm = 0.0; n_y_norm<1.0; n_y_norm+=(1.0/n_y_max)){\n        \n            n_index_norm += 1.0/(n_x_max*n_y_max);\n        \n        \n            vec2 o_p = vec2(\n                n_x_norm,\n                n_y_norm\n            );\n\n            float n_dist = length(o_p - o_pix_cor_nor_trans);\n            if(n_dist < n_dist_lowest){\n                n_dist_lowest = n_dist;\n                n_col_fact = n_index_norm;\n                \n            }\n        \n        }\n        \n    }\n    \n    float n_dist_max = length(vec2(0.0,0.0) - vec2(1.0/n_x_max, 1.0/n_y_max));\n    float n_dist_lowest_norm = n_dist_lowest / n_dist_max; \n    fragColor *= vec4(n_dist_lowest_norm*sin(iTime+(n_col_fact*10.0)));\n    //fragColor *= vec4(n_dist_lowest);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}