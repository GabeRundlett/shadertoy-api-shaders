{
    "Shader": {
        "info": {
            "date": "1421825568",
            "description": "Mandelbrot set  zoom, with smooth coloring (Douady-Hubbard)",
            "flags": 0,
            "hasliked": 0,
            "id": "lllGWH",
            "likes": 24,
            "name": "[2TC 15] Mandelbrot",
            "published": 3,
            "tags": [
                "2d",
                "tweet",
                "2tc15",
                "madelbrot"
            ],
            "usePreview": 0,
            "username": "iq",
            "viewed": 3774
        },
        "renderpass": [
            {
                "code": "// Created by inigo quilez - iq/2015\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\n// New WebGL 2 version, 253 chars\n//\nvoid mainImage( out vec4 f, in vec2 p )\n{\n    p = vec2(-.745,.186) + 3.*(p/iResolution.y-.5)*pow(.01,1.+cos(.2*iTime));\n    \n    float n = 0.;\n    vec2 z = p*n;\n    \n    for( ; n<128. && dot(z,z)<1e4; n++ )\n        z = vec2( z.x*z.x - z.y*z.y, 2.*z.x*z.y ) + p;\n    \n    f = .5 + .5*cos( vec4(3,4,11,0) + .05*(n - log2(log2(dot(z,z)))) );\n}\n\n\n// Original WebGL 1 version, 273 chars\n//\n/*\nvoid mainImage( out vec4 f, in vec2 p )\n{\n    float n = 0.;\n    vec2 c = vec2(-.745,.186) + 3. * (p/iResolution.y-.5)*pow(.01,1.+cos(.2*iTime)), \n         z = c*n;\n    \n    for( int i=0; i<128; i++ )\n    {\n        z = vec2( z.x*z.x - z.y*z.y, 2.*z.x*z.y ) + c;\n\n        if( dot(z,z)>1e4 ) break;\n\n        n++;\n    }\n    \n    f = .5 + .5*cos( vec4(3,4,11,0) + .05*(n - log2(log2(dot(z,z)))) );\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}