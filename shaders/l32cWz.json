{
    "Shader": {
        "info": {
            "date": "1727184946",
            "description": "buffering events during every - 1/2 seconds actions \npress left/right arrow\nhere I only store 1bit events. could store larger chunks.\n\n improving keyboard control for https://shadertoy.com/view/43ByRW and https://www.shadertoy.com/view/XXSyz1\n   ",
            "flags": 48,
            "hasliked": 0,
            "id": "l32cWz",
            "likes": 4,
            "name": "utils: buffering keyboard events",
            "published": 3,
            "tags": [
                "test",
                "keyboard"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 67
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/MX2cRm\n// testing keyboard control of https://shadertoy.com/view/43ByRW and https://www.shadertoy.com/view/XXSyz1\n            \nvoid mainImage(out vec4 O, vec2 U) {    \n    O = T(U);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float slow = .5;                                        // 1 / speed\n#define T(U)    texelFetch(iChannel0, ivec2(U), 0)\n#define R       iResolution.xy",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "#define key(a) (texelFetch(iChannel3,ivec2(a,1),0).x > 0.)      // LEFT:37  UP:38  RIGHT:39  DOWN:40 \n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U -= .5;\n    O = T(U);  if ( iFrame < 1 ) O = vec4(0);\n    \n    float c;                                                    // --- key events management\n    if ( U == vec2(0) ) iFrame < 1 ? O-=O, O.w = 5. : c,        // init\n                        O.z > slow && O.y > 0. ? O.y-- : c,     // once accounted, eat event\n                        c = key(37) ? 1. : key(39) ? 0. : -1.,  // push events\n                        c >= 0. ? O.y++, O.x = float(int(c + 2.*O.x) & 0xfff) : c, // O.x bits = FIFO, O.y = next slot\n                        O.z += iTimeDelta;                      // timer\n    else                    \n    if ( U.x > 0. ) O = T(U-vec2(1,0));                         // display\n    else            O = vec4 ( floor( 10.*U/R ).y == T(0).w ) \n                    ; // O.r += mod(T(0).x,3.)/3., O.g += float(key(37)), O.b += float(key(39)); // debug\n\n    if (T(0).z <= slow ) return;                                // slow game : 2 events / sec\n    \n    if ( U == vec2(0) ) {\n        O.z = 0.;                                               // reset delay timer\n        c = T(0).y; if (c > 0.) c = ((int(T(0))>>int(c-1.))&1) > 0 ? 1. : -1.; // c = pop bufferized action\n        O.w = mod( O.w + c, 10. );                              // action\n     }\n     else if ( U.x < 1. ) O.b++;\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}