{
    "Shader": {
        "info": {
            "date": "1667777024",
            "description": "per pixel calculate multiple distances to a multiple points and then take the lowest",
            "flags": 0,
            "hasliked": 0,
            "id": "msSGzG",
            "likes": 1,
            "name": "n_dist_lowest",
            "published": 3,
            "tags": [
                "distance"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 154
        },
        "renderpass": [
            {
                "code": "const float n_tau = 6.2831;\nfloat  f_ease_in_out_sine(float n){\n    return -(cos((n_tau/2.0) * n) - 1.0) / 2.0;\n}\n\nvec4 f_o_color_by_dist(float n_dist, vec3 o_c){\n    float n = 10.0;\n    float n_mod = 1.0/n;\n    float n_dist_mod = mod(n_dist,n_mod);\n    float n_dist_mod_norm = n_dist_mod/n_mod;\n    float n_mod_index = floor(n_dist / n_mod);\n    float n_dist_mod_norm_eased = sin(n_dist_mod_norm*(n_tau/2.0*n_mod_index*0.5));\n    return vec4(\n        mod(o_c.r * n_dist_mod_norm+n_dist, 1.0),\n        o_c.g * n_dist_mod_norm,\n        o_c.b * n_dist_mod_norm,\n        1.0\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float n_amp = sin(iTime*0.5);\n    float n_max_points = 5.0;\n    vec2 o_pix_cor_nor = fragCoord.xy / iResolution.xy; \n    vec2 o_pix_cor_nor_trans = o_pix_cor_nor-vec2(0.5, 0.5); \n    fragColor = vec4(1.0);\n    float n_dist_lowest = 1.0;\n    float n_rot_glob = iTime;\n\n\n    for(float n_i_point_norm = 0.0; n_i_point_norm<1.0; n_i_point_norm+=(1.0/n_max_points)){\n        \n        vec2 o_p = vec2(\n            sin(n_i_point_norm*n_tau+n_rot_glob)*n_amp,\n            cos(n_i_point_norm*n_tau+n_rot_glob)*n_amp\n        );\n        \n        float n_dist = length(o_p - o_pix_cor_nor_trans);\n        if(n_dist < n_dist_lowest){\n            n_dist_lowest = n_dist;\n        }\n        //fragColor = vec4(mix(fragColor.r, n_dist, 0.5));\n        \n    }\n    \n    vec3 a_o_col[] = vec3[](\n      vec3(0.1, 0.9, 0.2),\n      vec3(mod(sin(iTime),1.0), n_dist_lowest, 1.0-n_dist_lowest),\n      vec3(0.9, 0.1, 0.4)\n    );\n    float n_index_a_o_col = 0.0;\n    if(n_amp < 0.0){\n        n_index_a_o_col = mod(n_index_a_o_col+1.0, float(a_o_col.length()));\n    }\n    \n    fragColor *= vec4(f_o_color_by_dist(n_dist_lowest, \n       a_o_col[int(n_index_a_o_col)]\n    ));\n    //fragColor *= vec4(n_dist_lowest);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}