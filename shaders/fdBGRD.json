{
    "Shader": {
        "info": {
            "date": "1617076529",
            "description": "test1011",
            "flags": 0,
            "hasliked": 0,
            "id": "fdBGRD",
            "likes": 1,
            "name": "test1011",
            "published": 3,
            "tags": [
                "test10"
            ],
            "usePreview": 0,
            "username": "wei",
            "viewed": 229
        },
        "renderpass": [
            {
                "code": "\n\n#define PI 3.14159265359\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                 * 13758.5453123);\n}\n\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\nfloat circle(in vec2 _st, in float _r, in float _radius, in float _a, in float _t){\n    _st = rotate2d( iTime*_r*PI ) * _st;\n\n    float r = length(_st)*2.0;\n    float a = atan(_st.y,_st.x);\n    float f = _radius + sin(a*_a)*noise(_st+0.2*iTime+_t)*.03+0.01;\n    return 1.-smoothstep(f,f+0.007,r);\n}\n\nvec3 s(in vec2 st, in float _r, in float _radius, in float _a, in float _t){\n    vec3 color = vec3(0.);\n    float r = 0.24;\n\n    color += circle(st-vec2(-r, 0.12),_r, _radius,_a,_t);\n    color *= circle(st-vec2(r, 0.21),_r, _radius,_a,_t);\n    color *= vec3(0.6, 0.8,0.1);\n    \n    return color;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord/iResolution.xy;\n    st.x *= iResolution.x /iResolution.y;\n    st *= 2.;\n    vec3 color = vec3(0.);\n    st-=vec2(1.8, 1.);\n    float t= 0.1;\n    for(int i=0;i<20;++i)\n    {\n    \n       st = rotate2d(2./PI) * st;\n       t-= 100.;\n      color += s(st,0.3,0.5,1.,t);\n    }\n\n\n   color += vec3(circle(st,-0.1,0.5,10.,1.));\n  color -= vec3(circle(st,-0.1,0.48,10.,1.));\n    \n    color += vec3(circle(st,0.1,0.54,7., 20.));\n   color -= vec3(circle(st,0.1,0.52,7.,20.));\n    \n   color += vec3(circle(st,0.2,0.6,12., 2.));\n   color -= vec3(circle(st,0.2,0.58,12.,2.));\n\n   color += vec3(circle(st,0.2,0.1,6., 2.))*vec3(0.1, 0.8,0.1)*2.;\n   fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}