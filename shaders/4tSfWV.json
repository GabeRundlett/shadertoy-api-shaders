{
    "Shader": {
        "info": {
            "date": "1517184918",
            "description": "dynamic colored lines\ncolored circle\ndistance field\nelements are painted sequentally or transparentely altenatively every 5 seconds\nuse mouse to move 2nd circle!\n\n",
            "flags": 0,
            "hasliked": 0,
            "id": "4tSfWV",
            "likes": 1,
            "name": "Line2018",
            "published": 3,
            "tags": [
                "line"
            ],
            "usePreview": 0,
            "username": "samuelotherion",
            "viewed": 555
        },
        "renderpass": [
            {
                "code": "#define SUCCEDED if( s ) return true;\n    \nvec2 I, N, Ri;\n\nvec4 O;\n\nbool inside( vec2 p, vec4 r ) {\n    \n    r.xz = r.z < r.x ? r.zx : r.xz;\n    r.yw = r.w < r.y ? r.wy : r.yw;\n    \n    return !( any( lessThan( p, r.xy ) ) || any( greaterThan( p, r.zw ) ) );\n}\n\nfloat dstSphere( vec2 p, float r, float mind ) {\n    \n    return max( 0., min( length( I - p ) - r, mind ) );\n}\n\n// line, \nfloat dstLine( vec4 l, float t, float mind ) {\n    \n\tmind = \n        dstSphere( l.xy, t,\n\t\tdstSphere( l.zw, t,\n\t\tmind ) );\n    \n    vec2\n        p = I - l.xy,\n        d = l.zw - l.xy,\n        D = normalize( d );\n    \n    float k = dot( p, D );\n\n    if( 0. <= k && k < length( d ) ) {\n\n\t    vec2 s = k * D - p;\n    \n    \treturn max( 0., min( length( s ) - t, mind ) );\n    }\n    \n    return mind;\n}\n\n// point( = center ), radius, color, success\nbool circle( vec2 p, float r, vec4 c, bool s ) {\n    \n    SUCCEDED\n        \n    bool\n    succ = dot( p - I, p - I )  <= r * r;\n    \n    float\n    tm = .5 * ( 1. + sin( .3 * iTime ) );\n    \n    O += succ ? vec4( c.rgb, tm ) : vec4( 0,0,0, tm );\n    \n    return succ;\n}\n\n// line, color, thickness, success\nbool line( vec4 l, vec4 c, float t, bool s ) {\n    \n    SUCCEDED\n\n    vec2\n    p = I - l.xy,\n    d = l.zw - l.xy,\n    D = normalize( d );\n    \n    float\n    k = dot( p, D ),\n    tm = .5 * ( 1. + sin( .3 * iTime ) );\n\n    if( k < -t || length( d ) < k - t ) {\n        \n        O += vec4( 0,0,0,tm );\n        \n        return false;\n    }\n\n    vec2\n    q = k * D - p;\n\n    s = s || ( dot( q, q ) < t * t );\n\n    O += s ? vec4( c.rgb, 1 ) : vec4( 0,0,0, tm );\n\n    return s;\n}\n\nvoid mainImage( out vec4 o, in vec2 i ) {\n\n    Ri = 1. / iResolution.xy;\n    I = i - .5,\n    N = i * Ri;\n\tO = vec4( 0,0,0,1 );\n    \n    float T = 20.5 + 19.5 * .5 * ( sin( 0.2 * iTime ) + sin( .03 * iTime ) ) * sin( .005 * iTime );\n\n    vec2\n\tm = floor( iMouse.xy ) - .5;\n        \n    vec3\n        c0 = vec3( iMouse.xy - .5, 5. * T ),\n        c1 = vec3( .5 * iResolution.xy + 7. * T * vec2( cos( iTime ), sin( .9 * iTime ) ), 2. * T );\n    \n    vec4 cl = vec4( N, 1. + sin( iTime + 100. * dot( N - .5, N - .5 ) ), 1 );\n    \n    vec4\n        l0 = vec4( .25 * iResolution.xy, m ),\n        l3 = vec4( 3. * l0.xy, m ),\n        l1 = vec4( l3.x, l0.y, m ),\n        l2 = vec4( l0.x, l3.y, m ),\n        l4 = vec4( l0.xy, c1.xy ),\n        l5 = vec4( l1.xy, c1.xy ),\n        l6 = vec4( l2.xy, c1.xy ),\n        l7 = vec4( l3.xy, c1.xy );\n    \n    bool inner = false;\n    \n    if( mod( iTime, 10. ) < 5.) {\n        \n        inner = circle( c0.xy, c0.z, cl, \n        circle( c1.xy, c1.z, cl,\n        line( l0, cl, .9 * T,\n        line( l1, cl, .8 * T,\n        line( l2, cl, .7 * T,\n        line( l3, cl, .6 * T,\n        line( l4, cl, .5 * T,\n        line( l5, cl, .4 * T,\n        line( l6, cl, .3 * T,\n        line( l7, cl, .2 * T,\n        false ) ) ) ) ) ) ) ) ) ); }\n    else {\n        \n        circle( c0.xy, c0.z, cl, false );\n\t\tcircle( c1.xy, c1.z, cl, false );\n\t\tline( l0, cl, .9 * T, false );\n\t\tline( l1, cl, .8 * T, false );\n\t\tline( l2, cl, .7 * T, false );\n        line( l3, cl, .6 * T, false );\n        line( l4, cl, .5 * T, false );\n\t\tline( l5, cl, .4 * T, false );\n\t\tline( l6, cl, .3 * T, false );\n        line( l7, cl, .2 * T, false );\n    } \n    \n    if( !inner ) {\n    \n    \tfloat\n    \td = 1e5;\n    \n        d = \n            dstSphere( c0.xy, c0.z,\n            dstSphere( c1.xy, c1.z,\n            dstLine( l0, .9 * T,\n            dstLine( l1, .8 * T,\n            dstLine( l2, .7 * T,\n            dstLine( l3, .6 * T,\n            dstLine( l4, .5 * T,\n            dstLine( l5, .4 * T,\n            dstLine( l6, .3 * T,\n            dstLine( l7, .2 * T,\n            d ) ) ) ) ) ) ) ) ) );\n\n\t    O += vec4( vec3( mod( d, T * ( 1. + sin( .22 * iTime ) ) ) / ( T * 1.1 * ( 1. + sin( .7 * iTime ) ) ) ), 1. );\n    }\n\n    O.rgb /= O.a;\n    \n    o = O;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}