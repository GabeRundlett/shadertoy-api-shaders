{
    "Shader": {
        "info": {
            "date": "1455435551",
            "description": "Func graph",
            "flags": 0,
            "hasliked": 0,
            "id": "4dGGzG",
            "likes": 15,
            "name": "Func graph",
            "published": 3,
            "tags": [
                "funcgraph"
            ],
            "usePreview": 0,
            "username": "klk",
            "viewed": 794
        },
        "renderpass": [
            {
                "code": "#define float3 vec3\n#define float2 vec2\n#define float4 vec4\n\nconst float PI=3.141592654;\n\nfloat func(float x)\n{\n    return sin(sin(x)*6.)*8.;\n    //float y=sqrt(1.0-x*x); return sin(x*20.5)*y;\n//\treturn 3.0*x*x-2.0*x*x*x;\n    \n//    return sin(x)+sin(3.0*x)/3.0+sin(5.0*x)/5.0+sin(7.0*x)/7.0+sin(9.0*x)/9.0+sin(11.0*x)/11.0;\n//\treturn sin(1.0/x)*cos(x*x);\n//    return sin(x*x)*sin(x);\n    float v=0.0;\n    for(int n=0;n<18;n++)\n    {\n        float x1=x+iTime*float(n)*0.02;\n        float f=2.0*float(n)+1.0;\n        v+=sin(x1*PI*f)/f;\n    }\n\treturn v*4.0/PI;        \n}\n\nfloat F(float x, float scale, float pos)\n{\n    return func(x/scale+pos/scale)*scale;\n}\n\nfloat lv(float2 p0, float2 p1, float2 uv)\n{\n    //return length(uv-p0);\n\n    float2 dp=normalize(p1-p0);\n    float2 dpp=float2(dp.y, -dp.x);\n    float l=abs(dot(dpp,uv-p0));\n    if((dot(dp,uv-p0)<0.0))\n        l=length(uv-p0);\n    if((dot(-dp,uv-p1)<0.0))\n        l=length(uv-p1);\n    return l;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat scale=10.0+iMouse.y/5.0;\n\tfloat pos=-iMouse.x+iResolution.x/2.0;\n\tfloat x=fragCoord.x;\n    float y=fragCoord.y;\n    x-=iResolution.x/2.;\n    y-=iResolution.y/2.;\n    \n    //x=floor(x/4.0);\n\t//y=floor(y/4.0);\n\n    \n    float d=1.0;\n\n    float t=2.0;\n    float stp=0.01;\n\tfloat IN=t+stp/2.;\n    float ti=t/(IN-1.)/2.;\n    for(float i=-IN;i<=IN+0.0001;i+=stp)\n    {\n        \n        float x0=x+i;\n        float x1=x+i+stp;\n        float v=length(float2(x0,F(x0, scale, pos))-float2(x,y));\n        v=lv(float2(x0,F(x0, scale, pos)),float2(x1,F(x1, scale, pos)),float2(x,y));\n            \n            \n    \td=min(d,v/t);\n    }\n\n    d=1.0-d;\n    d=clamp(d*2.0-0.75,0.0,1.0);\n\t\n    fragColor = mix(\n        float4(1.0,0.95,0.85,1.0),float4(0.9,0.1,0.5,1.0),d);\n\n    float a=10.0;\n\n    float axisx=0.0;\n    float axisy=0.0;\n\n    axisx+=0.5*(0.5-clamp(abs(fract((x+pos+scale/2.0+0.5)/scale)-0.5)*scale/2.0,0.0,0.5));\n    axisy+=0.5*(0.5-clamp(abs(fract((y    +scale/2.0+0.5)/scale)-0.5)*scale/2.0,0.0,0.5));\n\n    float scale1=scale*0.1;\n    axisx+=0.15*(0.5-clamp(abs(fract((x+pos+scale1/2.0+0.5)/scale1)-0.5)*scale1/2.0,0.0,0.5));\n    axisy+=0.15*(0.5-clamp(abs(fract((y    +scale1/2.0+0.5)/scale1)-0.5)*scale1/2.0,0.0,0.5));\n\n    float scale2=scale*10.0;\n    axisx+=0.25*(1.0-clamp(abs(fract((x+pos+scale2/2.0+0.5)/scale2)-0.5)*scale2/3.0,0.0,1.0));\n    axisy+=0.25*(1.0-clamp(abs(fract((y    +scale2/2.0+0.5)/scale2)-0.5)*scale2/3.0,0.0,1.0));\n    \n    axisx=min(axisx,abs(fract(y/3.0)-0.25));\n    axisy=min(axisy,abs(fract(x/3.0)-0.25));\n    \n    a=max(axisx, axisy);\n    \n    fragColor = mix(fragColor, float4(0.1,0.2,0.7,1),a);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}