{
    "Shader": {
        "info": {
            "date": "1672570775",
            "description": "chalk like fog",
            "flags": 32,
            "hasliked": 0,
            "id": "ctsGRf",
            "likes": 3,
            "name": "chalk mouse",
            "published": 3,
            "tags": [
                "mouse",
                "fog",
                "chalk",
                "framebuffer"
            ],
            "usePreview": 0,
            "username": "lanx06",
            "viewed": 289
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define fb iChannel0\n#define PI 3.1415926538\n#define T iTime*0.5\nfloat sin_lerp(float a,float b,float t){\n    float tem=(1.0-cos(t*PI))/2.0;\n    return a*(1.0-tem)+b*tem;\n}\nfloat random(float seed){\n    return fract(sin(seed+1.) * 43758.5453);\n}\nfloat curl_random(float seed,float offset,float freq){\n    return sin_lerp(random(offset+floor(mod(seed,freq))),random(offset+floor(mod(seed+1.,freq))),abs(seed-floor(seed)));\n}\n// Code originally from draw_to_fb().\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec4 color=vec4(0.0);\n\tvec2 uv= fragCoord.xy / iResolution.xy;\n    //vec2 offset;\n    bool mouse_hold = !(iMouse.z < 0.0);\n    vec2 mouse = iMouse.xy;\n    if(!mouse_hold)\n        mouse=iResolution.xy*(vec2(cos(T*5.0)*0.7,sin(T)*0.8)*0.5+0.5);\n    //offset-=vec2(0.5);\n    //offset*=0.01;\n\tcolor = texture(fb,uv+vec2(0.0,0.03))*0.1;\n    float dis=1.0-distance(fragCoord,mouse)/10.0;\n    color+=vec4(clamp(dis*100.,0.0,1.0));\n    #define sample 10\n    vec2 ve[sample];\n    for(int i=0;i< sample;i++){\n        float angle=2.0*PI*float(i)/float(sample);\n        vec2 offset=vec2(cos(angle),sin(angle))*3.;\n        offset/=iResolution.xy;\n        vec4 last = clamp(texture(fb,uv+offset),vec4(0.0),vec4(1.0));\n        color+=(vec4(last.xyz,0))/float(sample);\n        //color+=(vec4(last.x,0,0,0))/float(10);\n        //color+=last/float(sample);\n        \n    }\n    //color=vec4(uv,0.0,0.0);\n\tcolor*=vec4(.9);\n    fragColor = clamp(color,vec4(0),vec4(1));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}