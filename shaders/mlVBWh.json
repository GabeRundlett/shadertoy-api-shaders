{
    "Shader": {
        "info": {
            "date": "1717663506",
            "description": "A 3D Noise texture, it is smoothed out in every axis",
            "flags": 0,
            "hasliked": 0,
            "id": "mlVBWh",
            "likes": 4,
            "name": "3D Smooth Noise",
            "published": 3,
            "tags": [
                "noise",
                "3dnoise",
                "3dtexture"
            ],
            "usePreview": 0,
            "username": "simplexqwe",
            "viewed": 127
        },
        "renderpass": [
            {
                "code": "float s(float x){\n    return smoothstep(0.,1.,x);\n}\n\nfloat m(float a,float b,float c){\n    return a*s(c)+b*(1.-s(c));\n}\n\nfloat f(float x,float y,float z){\n    float o=fract(cos(sin(tan(x)*4654.+cos(y)*645.)*5456.-tan(z)));\n    return o;\n}\n\nfloat sn1(vec3 p){\n    float x = (p.x);\n    float y = (p.y);\n    float z = (p.z);\n    \n    float xi = floor(p.x);\n    float yi = floor(p.y);\n    float zi = floor(p.z);\n\n\n    return m(f(xi,yi,zi),f(xi-1.,yi,zi),fract(p.x));\n}\n\nfloat sn2(vec3 p){\n    return m(sn1(p),sn1(p-vec3(0.,1.,0.)),fract(p.y));\n}\n\nfloat sn3(vec3 p){\n    return m(sn2(p),sn2(p-vec3(0.,0.,1.)),fract(p.z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/(iResolution.xy/5.);\n    vec3 col = vec3(sn3(vec3(uv*100.,iTime)));\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}