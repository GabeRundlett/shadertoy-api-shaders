{
    "Shader": {
        "info": {
            "date": "1675995407",
            "description": "I did a thing. I wonder if it's possible to get an exact interior distance field for this...",
            "flags": 0,
            "hasliked": 0,
            "id": "mlBSD1",
            "likes": 1,
            "name": "Concentric rings",
            "published": 3,
            "tags": [
                "sdf",
                "rings",
                "gooey"
            ],
            "usePreview": 0,
            "username": "fishy",
            "viewed": 198
        },
        "renderpass": [
            {
                "code": "#define SDF_VIEW 0\n\nfloat sdConcentricRing(vec2 uv, float k, float o)\n{\n    return abs(mod(length(uv)-o, k)-k/2.)-k/4.;\n}\n\nfloat map(vec2 uv)\n{\n    float d0 = sdConcentricRing(uv+vec2(0, 2), 0.2, iTime*0.2);\n    float d1 = sdConcentricRing(uv-vec2(0, 2), 0.2, iTime*0.2);\n    return min(d0, d1);\n}\n\nvec3 colorSdf(vec2 uv, vec4 m, float px)\n{\n    #define PERIOD 200.\n    #define STR 0.2\n    #define STROKE_WIDTH 0.005\n    #define MOUSE_WIDTH 0.005\n    float d = map(uv);\n    float md = abs(map(m.xy));\n    vec3 col = mix(vec3(0.094,0.494,0.988), vec3(1.000,0.082,0.980), sign(d)*0.5+0.5);\n    col *= smoothstep(-px*PERIOD, px*PERIOD, cos(d*PERIOD))*STR+1.-STR;\n    col = mix(col, vec3(1), smoothstep(STROKE_WIDTH+px, STROKE_WIDTH-px, abs(d)));\n    if(m.z > 0.)\n    {\n        float mdc = smoothstep(px, -px, min(abs(distance(m.xy, uv)-md+MOUSE_WIDTH)-MOUSE_WIDTH, distance(m.xy, uv)-MOUSE_WIDTH*2.));\n        col = mix(col, vec3(1.000,0.875,0.000), mdc);\n    }\n    col /= d+1.;\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y;\n    vec4 m = vec4((iMouse.xy*2.-iResolution.xy)/iResolution.y, iMouse.zw);\n    float px = 1.5/iResolution.y;\n    #if SDF_VIEW\n    vec3 col = vec3(colorSdf(uv, m, px));\n    #else\n    vec3 col = vec3(smoothstep(-px, px, map(uv)));\n    #endif\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}