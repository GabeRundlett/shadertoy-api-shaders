{
    "Shader": {
        "info": {
            "date": "1535933354",
            "description": "Left click to rotate!\n\nJust a little 90's screensaver-style twister effect.\nNothing massively impressive, but pretty good to look at nonetheless.\nThe code may change a bit in the future.",
            "flags": 0,
            "hasliked": 0,
            "id": "4lyyW1",
            "likes": 9,
            "name": "Twister95",
            "published": 3,
            "tags": [
                "oldschool",
                "demoscene",
                "demo",
                "twister",
                "metal",
                "screensaver",
                "dithering",
                "scroller"
            ],
            "usePreview": 0,
            "username": "Blokatt",
            "viewed": 1259
        },
        "renderpass": [
            {
                "code": "// -= Twister95 =-\n// Written by Blokatt (Jan Vorisek)\n// blokatt.net | @blokatt | github.com/blokatt\n// 04/09/18\n\n#define WIDTH 0.05\n#define PI 3.14159265358\n#define TAU PI * 2.0\n#define EDGE 0.001\n#define BORDER 0.02\n#define DITHER_MIX 0.35\n#define OPENING_WIDTH 85.0\n\nfloat margin(in float v){\n\treturn length(iResolution) * v;\n}\n\nfloat luma(in vec4 c){\t\n\treturn (c.r * 0.3 + c.g * 0.59 + c.b * 0.11) / 3.;\n}\n\nvec4 dither8x8(in vec2 position, in vec4 col) {    \n    float threshold = texture(iChannel1, vec2(position.xy / 8.)).r;\t\n    return vec4(mix(col.rgb, vec3(col.rgb * floor(floor(col.rgb * 64.) / 64. + threshold)) * 1.5, DITHER_MIX), 1.);\n}\n\nvec4 side(in vec3 tint, in vec2 coord, in float t, in float off){\t\n    t *= .65;\n    float time = -t + off + sin(t + coord.y * .5) * 5. - cos(t * .5 + coord.y * .4 + .2) * 2.5 - (sin(t * .25 + cos(coord.y * .5) + PI) * (1. * cos(.6 + t * .0125))) * 2.5 + (iMouse.x / iResolution.x) * TAU;    \n    float angle = sin(time);\n    float offset = cos(time);\n    vec3 normal = vec3(offset, 0., angle); \n    vec3 reflection = reflect(vec3(coord.xy - .5, .5), normal);\n    float x = .5 - sin((coord.y - .5) * 3. + t * 3.) * .06 - sin(coord.y * 5. - t * 1.) * .025 * (sin(t * .25 + .3) * .5 + .5);\n    float w = WIDTH * (1. + (OPENING_WIDTH * ((smoothstep(.9, 2.75, coord.y)) + (smoothstep(.1, -1.75, coord.y)))) + .1 * sin(t * 10. + coord.y * (2. + 10. * cos(t * .25))));                    \n    return ((vec4(vec3((1.25, 1., 1.2) - tint) * (1. + .3 * sin(reflection.x * 25. * angle + time) * cos (reflection.y * 50. - time)), 1.) * texture(iChannel0, reflection) * 1.25) * (.3 + angle)) * (.85 - smoothstep(w * angle - EDGE, w * angle + EDGE, abs(x - (coord.x + w * offset)))); \t\t\n}\n\nvec4 image(in vec2 coord, in float time){    \n\treturn side(vec3(0., .25, 5.), coord, time, 0.) +\n           side(vec3(.3, .1, .15), coord, time, PI  * .5) +\n           side(vec3(0., 0., 1.), coord, time, PI) + \n           side(vec3(.05, .38, .5), coord, time, PI * 1.5);           \n}\n\nfloat border(in vec2 coord){\t \n\treturn clamp(0., step(iResolution.x - margin(BORDER), coord.x)\n                   + step(iResolution.y - margin(BORDER), coord.y)\n              + 1. - step(margin(BORDER), coord.x)\n              + 1. - step(margin(BORDER), coord.y), 1.);\n}\n\nvec4 post(in vec2 coord, in float time){\n\tvec2 uv = coord/iResolution.xy;  \n    return vec4(0.1, 0.04, 0.16, 1.) + (vec4(image(vec2(uv.x - .0015, uv.y), time).r, image(uv, time).g, image(vec2(uv.x + .0015, uv.y), time).b, 1.)) * (1. + border(coord));                                                                                 \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    fragColor = dither8x8(fragCoord, mix(post(fragCoord, iTime), mix(post(fragCoord, iTime - .05), post(fragCoord, iTime + .05), .35), .35));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 23,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/793a105653fbdadabdc1325ca08675e1ce48ae5f12e37973829c87bea4be3232.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}