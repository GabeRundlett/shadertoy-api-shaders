{
    "Shader": {
        "info": {
            "date": "1678484326",
            "description": "pacman map-v3",
            "flags": 0,
            "hasliked": 0,
            "id": "Ddy3WW",
            "likes": 9,
            "name": "pacman map-v3",
            "published": 3,
            "tags": [
                "pacmanmapv3"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 234
        },
        "renderpass": [
            {
                "code": "//pacman map-v3--10/mar/2023\n///-----por jorge2017a2\n///referencia\n///https://www.shadertoy.com/view/MlGfD3\n\n\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(8.0*antialiasing(1.0),b,d)\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\n//Numdatos :95\nvec2 pt60[96]=vec2[](\nvec2(10,13),vec2(9,13),vec2(8,13),vec2(7,13),vec2(7,14),vec2(7,15),vec2(6,15),\nvec2(5,15),vec2(4,15),vec2(3,15),vec2(2,15),vec2(1,15),vec2(1,16),\nvec2(1,17),vec2(2,17),vec2(3,17),vec2(3,18),vec2(3,19),vec2(2,19),\nvec2(1,19),vec2(1,20),vec2(1,21),vec2(2,21),vec2(3,21),vec2(4,21),\nvec2(5,21),vec2(6,21),vec2(7,21),vec2(8,21),vec2(9,21),vec2(10,21),\nvec2(11,21),vec2(12,21),vec2(13,21),vec2(14,21),vec2(15,21),vec2(16,21),\nvec2(17,21),vec2(18,21),vec2(19,21),vec2(19,20),vec2(19,19),vec2(18,19),\nvec2(17,19),vec2(16,19),vec2(15,19),vec2(15,18),vec2(15,17),vec2(15,16),\nvec2(15,15),vec2(15,14),vec2(15,13),vec2(15,12),vec2(15,11),vec2(15,10),\nvec2(15,9),vec2(15,8),vec2(15,7),vec2(15,6),vec2(15,5),vec2(15,4),\nvec2(15,3),vec2(15,2),vec2(15,1),vec2(16,1),vec2(17,1),vec2(18,1),\nvec2(19,1),vec2(19,2),vec2(19,3),vec2(19,4),vec2(19,5),vec2(19,6),\nvec2(18,6),vec2(17,6),vec2(16,6),vec2(15,6),vec2(15,5),vec2(15,4),\nvec2(14,4),vec2(13,4),vec2(13,5),vec2(13,6),vec2(12,6),vec2(11,6),\nvec2(11,7),vec2(11,8),vec2(12,8),vec2(13,8),vec2(13,9),vec2(13,10),\nvec2(13,11),vec2(13,12),vec2(13,13),vec2(12,13),vec2(11,13)\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 colbase= 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 col =vec3(1.0);\n    \n    vec2 pfx = vec2((vec2(1.0,-1.0)*(fragCoord-iResolution.xy/2.)/11.)) + 12.;\n    ivec2 pix = ivec2(floor(vec2(1,-1)*(fragCoord-iResolution.xy/2.)/11.)) + 12;\n\n    vec2 pxi=vec2( float(pix.x), float(pix.y));\n\n    ///hacer el mapa\n    if (pix.x>= 0 && pix.x< 21  && pix.y>= 0 &&  pix.y<= 22 ) \n    {  float op= float( heart[pix.x+pix.y*21]);\n        if (op==0.0)\n            col*=vec3(0.15);\n        else if(op==1.0)\n         col*=colbase;\n        else if(op==2.0)\n        {\n            col*=vec3(0.0,0.0,0.0);\n            \n        }\n        else if(op==3.0)\n        col*=vec3(0.0,0.0,0.0);\n    } \n    else \n     col = vec3(0.1,0.0,0.8);\n\n    vec2 pos;\n    float ps=0.5*sin(iTime*12.0);\n    if(ps>0.0)\n    for(int i =0;i<21;i++)\n        for(int j =0;j<23;j++)\n        {  pos=vec2(i,j);\n           float op= float( heart[pix.x+pix.y*21]);\n            if (op==2.0)\n            { float d3=sdCircle( pfx-pos+vec2(-0.5,-0.5), 0.25 );\n              col= DrawFigBorde(vec3(1.0,1.0,1.0), col, d3 );\n            }\n        }\n\n    ///camino de pacman\n    int ind=int(mod(iTime*6.0,95.0));  // 95 numero mov\n     pos=pt60[ind];\n    float d1=sdCircle( pfx- pos+vec2(-0.5,-0.5), 0.45 );\n    col= DrawFigBorde(vec3(1.0,1.0,0.0), col, d1 );\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "int[483] heart = int[483](\n1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n1,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,1,\n1,2,1,1,1,2,1,1,1,2,1,2,1,1,1,2,1,1,1,2,1,\n1,2,1,1,1,2,1,1,1,2,1,2,1,1,1,2,1,1,1,2,1,\n1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,\n1,2,1,1,1,2,1,2,1,1,1,1,1,2,1,2,1,1,1,2,1,\n1,2,2,2,2,2,1,2,2,2,1,2,2,2,1,2,2,2,2,2,1,\n1,1,1,1,1,2,1,1,1,2,1,2,1,1,1,2,1,1,1,1,1,\n0,0,0,0,1,2,1,2,2,2,2,2,2,2,1,2,1,0,0,0,0,\n1,1,1,1,1,2,1,2,1,1,0,1,1,2,1,2,1,1,1,1,1,\n3,3,3,3,3,2,2,2,1,0,0,0,1,2,2,2,3,3,3,3,3,\n1,1,1,1,1,2,1,2,1,0,0,0,1,2,1,2,1,1,1,1,1,\n0,0,0,0,1,2,1,2,1,1,1,1,1,2,1,2,1,0,0,0,0,\n0,0,0,0,1,2,1,2,2,2,2,2,2,2,1,2,1,0,0,0,0,\n1,1,1,1,1,2,1,2,1,1,1,1,1,2,1,2,1,1,1,1,1,\n1,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,1,\n1,2,1,1,1,2,1,1,1,2,1,2,1,1,1,2,1,1,1,2,1,\n1,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,1,\n1,1,1,2,1,2,1,2,1,1,1,1,1,2,1,2,1,2,1,1,1,\n1,2,2,2,2,2,1,2,2,2,1,2,2,2,1,2,2,2,2,2,1,\n1,2,1,1,1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,2,1,\n1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,\n1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\n);\n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}