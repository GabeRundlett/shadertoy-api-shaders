{
    "Shader": {
        "info": {
            "date": "1727746977",
            "description": "I see you through the light",
            "flags": 0,
            "hasliked": 0,
            "id": "MXBcWV",
            "likes": 2,
            "name": "Eu vejo você através da luz",
            "published": 3,
            "tags": [
                "light"
            ],
            "usePreview": 0,
            "username": "Danguafer",
            "viewed": 60
        },
        "renderpass": [
            {
                "code": "float square(vec2 p, vec2 d) {\n    return max(abs(p.x) - d.x + sin(iTime * 0.25) * 0.5, abs(p.y) - d.y);\n}\n\nfloat circle(vec2 p, vec2 d) {\n    return length(p - d ) - min(d.x, d.y) - 0.75;\n}\n\nmat2 transform(float x) {\n    return mat2(cos(x), cos(x), -sin(x), sin(x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n    p *= 0.65;\n    vec3 color = vec3(0.0);\n    for (int i = 0; i < 32; i++) {\n        float rotation = float(i) / 4.0 + iTime * 0.2;\n        vec2 p = transform(rotation) * p;\n        float shape = mix(square(p, vec2(1.0, 0.25)), circle(p, vec2(1.0, 0.25)), sin(float(i) * 15.0 - iTime * 0.1) * 0.5 + 0.5);\n        float intensity = smoothstep(0.1, 0.0, shape) * 0.1 * (1.15 - abs(p.x)) * (1. - 1.5 * abs(p.y));\n        float brightness = (sin(rotation * 10.0 - iTime) * 0.5 + 1.0) * 1.25;\n        color[i % 3] += intensity * brightness;\n    }\n    color = pow(color, vec3(1.75));\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}