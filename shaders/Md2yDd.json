{
    "Shader": {
        "info": {
            "date": "1494696647",
            "description": "Daily",
            "flags": 0,
            "hasliked": 0,
            "id": "Md2yDd",
            "likes": 11,
            "name": "Daily 2017-05-13",
            "published": 3,
            "tags": [
                "daily"
            ],
            "usePreview": 0,
            "username": "Koltes",
            "viewed": 664
        },
        "renderpass": [
            {
                "code": "#define TAU 6.2831853\n#define INF 10.\n\nconst vec3 GREEN=vec3(0.098, 0.588, 0.011);\nconst vec3 PINK=vec3(1, 0.058, 0.247);\n\nstruct M{float d;vec3 c;};M m;\nM mmin(M a, M b){if(a.d<b.d)return a;else return b;}\nM mmax(M a, M b){if(a.d>b.d)return a;else return b;}\n\nmat2 rz2(float a){float c=cos(a),s=sin(a);return mat2(c,s,-s,c);}\n\nfloat amod(float a,float m){return mod(a,m)-m*.5;}\n\nfloat random(float x){return fract(sin(x*136.+4375.));}\n\n// iq\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat leaf(vec3 p, float rmax){\n    const float amax=1.;\n    float a=atan(p.z,p.x);\n    float r=cos(a/amax*TAU*.25)*rmax;\n    float d=max((abs(a)-amax)*r, length(p.xz)-r);\n    d=max(d,abs(p.y+pow(p.x,2.)*.2+exp(-abs(p.z)*5.*exp(-length(p.xz)*5.))*.2)-.01);\n    return d;\n}\n\nvoid map(vec3 p){\n    p.xz*=rz2(TAU*.25+sin(iTime*.2)*.5);\n    p.xy*=rz2(.8);\n    p.xz*=rz2(iTime*.5);\n    float l=length(p.xz);\n    float at=atan(p.z,p.x);\n\n    float d=INF;\n    \n    for(int ri=0;ri<15;++ri){\n        float RATIO=float(ri)/15.;\n        float ANGLE=random(float(ri))*TAU;\n        float SPANANGLE=2.0-RATIO*1.;\n        float RADIUS=.1+.6*RATIO;\n        float HEIGHT=mix(.8,1.,sqrt(RATIO));\n        float OPENING=mix(-.1,.5,RATIO);\n        \n    \tfloat a=amod(at-ANGLE,TAU);\n        float dr=min(d,(abs(a)-SPANANGLE)*l);\n        float r=atan(p.y*5.)*4./TAU*RADIUS;\n        r+=smoothstep(HEIGHT-.5,HEIGHT+.5,p.y)*OPENING*RADIUS;\n        dr=max(dr,-length(p.xz)+r);\n        dr=max(dr,length(p.xz)-r-.02);\n        dr=max(dr,max(p.y-HEIGHT+pow(a,2.)*.2,0.));\n        d=min(d,dr);\n    }\n    \n    d=max(d,max(-p.y,0.));\n    M mleaves=M(d,PINK);\n    \n    d=length(p.xz)-exp(-pow(p.y-0.3,2.)*10.)*.3;\n    d=max(d,-p.y-.2);\n    d=smin(d,length(p.xz-vec2(pow(p.y+.2,2.)*.2,0.))-.03,.02);\n    d=max(d,p.y-.2);\n    d=max(d,-p.y-2.);\n    \n    for(int li=0;li<5;++li){\n        float RATIO=float(li)/5.;\n        vec3 q=p;\n        q.x-=pow(q.y+.2,2.)*.2;\n        q.y+=.4+float(li)*.3+random(float(li))*.05;\n        q.yz*=rz2(-(p.y+.2)*.2);\n        q.xz*=rz2(fract(sin(float(li)*13.+45.))*TAU);\n        d=smin(d,leaf(q,.5+RATIO*.3),.08);\n    }\n    \n    M mbulb=M(d,GREEN);\n    \n    m=mmin(mleaves,mbulb);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 v=uv*(1.-uv);\n    uv-=.5;\n    uv.x*=iResolution.x/iResolution.y;\n    vec3 ro=vec3(uv,-2),rd=vec3(uv,1),mp=ro;\n    int i;\n    for(i=0;i<50;++i){map(mp);if(m.d<.001)break;mp+=rd*.5*m.d;}\n    float ma=1.-float(i)/50.;\n    vec3 c=m.c;\n    c*=ma;\n    if(length(mp)>INF){\n        c=vec3(0.058, 1, 0.631)*.2;\n    }\n    c=pow(c,vec3(1./2.2));\n    c *= pow(v.x*v.y * 25.0, 0.25);\n\tfragColor = vec4(c,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}