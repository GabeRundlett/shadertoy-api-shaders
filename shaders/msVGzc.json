{
    "Shader": {
        "info": {
            "date": "1678902838",
            "description": "interpolate anything",
            "flags": 0,
            "hasliked": 0,
            "id": "msVGzc",
            "likes": 4,
            "name": "interpolating multiple forms",
            "published": 3,
            "tags": [
                "interpolateanything"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 182
        },
        "renderpass": [
            {
                "code": "#define n_tau 6.2831\nfloat dot2( in vec2 v ) { return dot(v,v); }\n\nvec2 f_o_rotdt(vec2 o, float n_radians) {\n  float s = sin(n_radians);\n  float c = cos(n_radians);\n\n  return o * mat2(\n    c, -s,\n    s, c\n  );\n}\nfloat f_n_dist_heart( in vec2 p )\n{\n    p.x = abs(p.x);\n\n    if( p.y+p.x>1.0 )\n        return sqrt(dot2(p-vec2(0.25,0.75))) - sqrt(2.0)/4.0;\n    return sqrt(min(dot2(p-vec2(0.00,1.00)),\n                    dot2(p-0.5*max(p.x+p.y,0.0)))) * sign(p.x-p.y);\n}\nfloat f_n_dist_reg_polygon(vec2 o, float n_vertices) {\n  float n_radians = atan(o.x, o.y);\n  float n_radians_per_corner = n_tau / (n_vertices);\n\n  return cos(floor(.5+n_radians/n_radians_per_corner)*n_radians_per_corner-n_radians)*length(o);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 o_trn = (fragCoord.xy - iResolution.xy *.5) / iResolution.y;\n    o_trn*=3.;\n    float n3 = f_n_dist_reg_polygon(\n        f_o_rotdt(o_trn, 0.5),\n        3.\n    );\n    float n4 = f_n_dist_reg_polygon(\n        o_trn,\n        4.\n    );\n    \n    float n9 = f_n_dist_reg_polygon(\n        o_trn,\n        9.\n    );\n    float nh = f_n_dist_heart(\n      o_trn\n    )+.5;\n    float n_weight = 1.;\n\n    float ni = 0.;\n    float a[5] = float[](3.4, 4.2, 5.0, 5.2, 1.1);  \n\n    float[] a_n = float[] (\n      n3, \n      n4, \n      nh\n    );\n    float n_len_a_n = float(a_n.length());\n    float n_idx_nor = fract(iTime)* n_len_a_n;\n    float n_idx_nor_floor = floor(n_idx_nor);\n    float n_idx_nor_fract = fract(n_idx_nor);\n    // float n_factor = sin(iTime)*.5+.5\n    float n_factor = n_idx_nor_fract;\n\n    float n =\n      (1.-n_factor) * a_n[int(n_idx_nor)] \n       + n_factor * a_n[int(mod(n_idx_nor+1., n_len_a_n))];\n    \n\n    n = abs(n-.5);\n    n = pow(n, 1./2.);\n    n *= 1.5;\n    n = 1.-n;\n    fragColor = vec4(n);\n\n    fragColor = vec4(sin(n));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}