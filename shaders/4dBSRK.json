{
    "Shader": {
        "info": {
            "date": "1413498904",
            "description": "Some sort of undefined colored grid thingy.",
            "flags": 0,
            "hasliked": 0,
            "id": "4dBSRK",
            "likes": 111,
            "name": "Color Grid 1",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "grid"
            ],
            "usePreview": 0,
            "username": "iq",
            "viewed": 11417
        },
        "renderpass": [
            {
                "code": "// Copyright Inigo Quilez, 2014 - https://iquilezles.org/\n// I am the sole copyright owner of this Work.\n// You cannot host, display, distribute or share this Work neither\n// as it is or altered, here on Shadertoy or anywhere else, in any\n// form including physical and digital. You cannot use this Work in any\n// commercial or non-commercial product, website or project. You cannot\n// sell this Work and you cannot mint an NFTs of it or train a neural\n// network with it without permission. I share this Work for educational\n// purposes, and you can link to it, through an URL, proper attribution\n// and unmodified screenshot, as part of your educational material. If\n// these conditions are too restrictive please contact me and we'll\n// definitely work it out.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2  px = 4.0*(-iResolution.xy + 2.0*fragCoord.xy) / iResolution.y;\n    \n    float id = 0.5 + 0.5*cos(iTime + sin(dot(floor(px+0.5),vec2(113.1,17.81)))*43758.545);\n    \n    vec3  co = 0.5 + 0.5*cos(iTime + 2.0*id + vec3(0.0,1.0,2.0) );\n    \n    vec2  pa = smoothstep( 0.0, 0.2, id*(0.5 + 0.5*cos(6.2831*px)) );\n    \n    fragColor = vec4( co*pa.x*pa.y, 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}