{
    "Shader": {
        "info": {
            "date": "1584110290",
            "description": "visualizing how surface roughness results from micro details so small they blur together",
            "flags": 32,
            "hasliked": 0,
            "id": "tdXcR8",
            "likes": 4,
            "name": "micro detail visualization",
            "published": 3,
            "tags": [
                "visualization",
                "aliasing",
                "supersampling",
                "micro",
                "detail",
                "anti"
            ],
            "usePreview": 0,
            "username": "public_int_i",
            "viewed": 462
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel0,ivec2(fragCoord),0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//Ethan Alexander Shulman March 13, 2020\n\n\n#define EPS 1e-2\n#define PI 3.14159265\n\nmat2 r2(float a) {\n\tfloat s = sin(a), c = cos(a);\n\treturn mat2(c,-s,s,c);\n}\n\nvec4 r4(float n) {\n\t#define R4P 1.1673039782614187\n    return fract(.5+vec4(1./R4P,1./R4P/R4P,1./R4P/R4P/R4P,1./R4P/R4P/R4P/R4P)*n);\n}\nvec4 hash(vec4 a) {\n    a = mod(abs(a),8273.97234);\n    #define R4S(sw) floor(fract(.352347+dot(a,vec4(.001,.1,10.,100.).sw*2.23454))*20000.)\n    return r4(R4S(xyzw)+R4S(yzwx)+R4S(wxyz)+R4S(zwxy));\n}\n\nfloat twave(float x) {\n\treturn x*2.-max(0.,x*4.-2.);\n}\nfloat smove(float x) {\n\tif (x < .8) return mix(0.,.01,x/.8);\n\treturn mix(.01,1.,(x-.8)/.2);\n}\n\nfloat geo(vec3 p) {\n\tfloat d = p.y;\n\tp.y += floor(pow(abs(p.x)/100.,.5))*.3-.5;\n\tp.xz = mod(abs(p.xz),2.)-1.;\n\treturn min(d,length(p)-1.);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float time = mod(iTime,20.);\n    vec4 uv = vec4((fragCoord*2.-iResolution.xy)/iResolution.y,fragCoord);\n\tvec4 pxh = hash(uv+time*.01);\n\tvec3 rp = vec3(0,4,0), rd = normalize(vec3(uv.xy+(pxh.xy*2.-1.)*.5/iResolution.y,1.).zyx);\n\tif (time < 6.) {\n\t\tfloat fll = time/2.,\n\t\t\t  flt = floor(fll);\n\t\tfll -= flt;\n\t\trp.x = mix(flt*600.,(1.+flt)*600.,smove(fll));\n\t} else {\n\t\tfloat lt = min(1.,pow((time-6.)/8.0,4.));\n\t\trp = mix(vec3(1800.,4,0),vec3(-1000.,2000.,0),lt);\n\t\trd.yx *= r2(lt);\n\t}\n\t\n\tfloat typ = rp.y;\n\tvec3 c = vec3(1);\n\n\tfor (int i = 0; i < 150; i++) {\n\t\tfloat dst = geo(rp);\n\t\tif (dst <= 0.) {\n\t\t\trp -= rd*EPS*1.5;\n\t\t\tdst = geo(rp);\n\t\t\tvec3 nrm = vec3(geo(rp+vec3(EPS,0,0)),geo(rp+vec3(0,EPS,0)),geo(rp+vec3(0,0,EPS)))-dst;\n\t\t\trd = reflect(rd,normalize(nrm));\n\t\t\tc *= .5;\n\t\t}\n\t\trp += rd*(dst+EPS);\n\t\tif (rp.y > 0. && rd.y > 0.) break;\n\t}\n\n\tvec3 l = (vec3(.04,.07,.18)+max(0.,1.-length(rd-normalize(vec3(1,1,1)))*(.5+rd.y*.5))*vec3(1.,.8,.6)*2.);\n\n\tfragColor = mix(vec4(c*l,1),texelFetch(iChannel0,ivec2(uv.zw),0),.5+typ*.49/2004.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}