{
    "Shader": {
        "info": {
            "date": "1724897523",
            "description": "lightning!",
            "flags": 0,
            "hasliked": 0,
            "id": "lf2fD1",
            "likes": 36,
            "name": "Lightning Effect",
            "published": 3,
            "tags": [
                "lightning"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 292
        },
        "renderpass": [
            {
                "code": "// Fork of \" Partly Cloudy\" by wyatt. https://shadertoy.com/view/4fScDK\n// 2024-08-29 00:58:41\n\nMain {\n    Q = vec4(0);\n    U = 2.*(U-.5*R)/R.x;\n    U.x += 1.3;\n    U -= .4*sqrt(U.x)*(fbm(U-vec2(iTime,0)).xy);\n    float l = .5;\n    for (float i = 0.; i < 10.; i++) {\n        Q += vec4(1,2,3,4)*.2*(10.-i)*exp(-.5*R.x*ln(U,vec2(0,0),vec2(l,0)));\n        Q += vec4(1,2,3,4)*.01*(10.-i)*exp(-.03*R.x*ln(U,vec2(0,0),vec2(l,0)));\n        U.x -= l;\n        U.xy *= ei(.1*exp2(-.4*i));\n        if (U.y*sign(sin(16.*iTime*i)-.5) < 0.) l *= .5;\n                else  l *= .8;\n        U.y = abs(U.y);\n        U.xy *= ei(.3);\n    }\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel1,(U)/R)\n#define Main void mainImage(out vec4 Q, in vec2 U)\n#define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define pi 3.14159265359\nfloat ln (vec2 p, vec2 a, vec2 b) { \n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nvec4 hash44(vec4 p4)\n{\n\tp4 = fract(p4  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\nvec4 noise (vec2 U) {\n    vec2 f = floor(U);\n    vec2 c = ceil(U);\n    vec4 _00 = hash44(vec4(f,f));\n    vec4 _01 = hash44(vec4(f.x,c.y,f.x,c.y));\n    vec4 _10 = hash44(vec4(c.x,f.y,c.x,f.y));\n    vec4 _11 = hash44(vec4(c,c));\n    vec4 _0 = mix(_00,_01,fract(U.y));\n    vec4 _1 = mix(_10,_11,fract(U.y));\n    return mix(_0,_1,fract(U.x));\n}\nvec4 fbm (vec2 U) {\n    mat2 m = ei(.5);\n    vec4 o = vec4(0);\n    for (float i = 0.; i < 10.; i++) {\n        U *= 1.5*m;\n        o += noise(U)/5.*exp2(-.3*i);\n    }\n    return o;\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}