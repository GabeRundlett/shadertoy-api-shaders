{
    "Shader": {
        "info": {
            "date": "1679092147",
            "description": "Does windows/angle and others react like my OpenGL/linux ( see capture below ) ?\n",
            "flags": 0,
            "hasliked": 0,
            "id": "dsGGW3",
            "likes": 5,
            "name": "compatibility test: smooth(x,x++",
            "published": 3,
            "tags": [
                "glsl",
                "bug"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 320
        },
        "renderpass": [
            {
                "code": "   #define S(a,b)   smoothstep( a, b + .001,       U.y )\n// #define S(a,b)   smoothstep( a, b + .001, fract(U.y) )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U =  4.*u  / R.y;\n    int i = int(U.y);\n    float x = U.x-1.;\n\n    O.r =       i == 3 ? S( x    , x+1. )    // what it does on OpenGL\n              : i == 2 ? S( x+1. , x+1. ) \n              : i == 1 ? S( x+1. , x    )        // ‚Üê these 2 are strange.\n              :          S( x+1. , x+1. ) ;\n\n    O.g =       i == 3 ? S( x++  , x    )    // the test\n              : i == 2 ? S( ++x  , x    ) \n              : i == 1 ? S(  x   , x++  ) \n              :          S(  x   , ++x  )  ;\n\n   O.b = float( O.r==O.g );                  // check: blue/white if identical\n   \n   if ( int(u.x)%int(R.y/4.) == 0 ) O = vec4(1,0,0,0); // red separators\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}