{
    "Shader": {
        "info": {
            "date": "1641660437",
            "description": "The animation from https://www.shadertoy.com/view/flsXRM combined with the colors of the german flag",
            "flags": 0,
            "hasliked": 0,
            "id": "NdfyRH",
            "likes": 4,
            "name": "German Flag animated",
            "published": 3,
            "tags": [
                "animated",
                "flags",
                "golf",
                "germany"
            ],
            "usePreview": 0,
            "username": "Krischan",
            "viewed": 247
        },
        "renderpass": [
            {
                "code": "#define RED vec3(193.0,18.0,28.0) / 255.\n#define BLACK vec3(1., 1., 1.) / 255.\n#define GOLD vec3(238., 201., 0.) / 255.\n\nvec3 Flag(vec2 U)\n{\n    vec3 col=mix(RED,BLACK,smoothstep(0.663,0.666,U.y));\n    return mix(GOLD,col,smoothstep(0.330,0.333,U.y));\n}\n\nfloat vignette(vec2 U)\n{\n    return 16. * U.x * (1. - U.x) * U.y * (1. - U.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float t = uv.x*7.-6.*iTime+uv.y*6.;\n    uv.y += sin(t)*.0125;\n    \n    vec3 col = Flag(uv);\n\n    col += sin(t)*0.25; // highlights\n    col *= .7+cos(t)*.3; // shadows\n\n    col *= 1.0 - .6 * exp2(-1.75 * vignette(uv)); // vignette\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}