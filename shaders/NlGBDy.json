{
    "Shader": {
        "info": {
            "date": "1665134539",
            "description": "A few simple color lookup table functions;",
            "flags": 0,
            "hasliked": 0,
            "id": "NlGBDy",
            "likes": 2,
            "name": "Simple color lookup table (LUT)",
            "published": 3,
            "tags": [
                "lut"
            ],
            "usePreview": 0,
            "username": "Trixelized",
            "viewed": 577
        },
        "renderpass": [
            {
                "code": "// The 'tile count' in the LUT\n\nconst float LUT_tile_size = 8.0;\n\n\n\n\n// This function converts an UV to the color in the LUT\n\nvec3 LUT_uv_to_col(in vec2 uv)\n{\n    \n    uv = fract(uv);\n    vec2 tile_num = floor(uv * LUT_tile_size) / LUT_tile_size;\n    vec2 tile_uv = fract(uv * LUT_tile_size);\n    \n    return vec3(tile_uv.x, tile_uv.y, (tile_num.x / LUT_tile_size) + (tile_num.y));\n    \n}\n\n\n\n\n// This function converts a color to the UV in the LUT\n\nvec2 LUT_col_to_uv(in vec3 col)\n{\n    col = clamp(col, 0.0, 1.0);\n    vec2 return_uv = vec2(0.0);\n    return_uv.xy += col.rg / LUT_tile_size;\n    return_uv.x += floor(col.b * (LUT_tile_size * LUT_tile_size)) / LUT_tile_size;\n    return_uv.y += floor(col.b * LUT_tile_size) / LUT_tile_size;\n    \n    return vec2(fract(return_uv));\n    \n}\n\n\n\n// Some examples:\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    // ok fine ill fix the distortion\n    float res = (iResolution.x / iResolution.y);\n    uv.x *= res;\n    \n    \n    // example 1; draw a simple LUT texture\n    vec3 col = LUT_uv_to_col(uv);\n    \n    // example; sample from UV (mouse)\n    vec2 mouse_uv = iMouse.xy / iResolution.xy * vec2(res, 1.0);\n    if (length(mouse_uv - uv) < 0.05) {\n        col = LUT_uv_to_col(mouse_uv);\n    }\n    \n    // example; UV from color\n    vec3 sample_col = texture(iChannel0, vec2(0.5)).rgb;\n    vec2 sample_uv = LUT_col_to_uv(sample_col);\n    if (length(sample_uv - uv) < 0.05) {\n        col = sample_col;\n    }\n    \n    fragColor = vec4(col * step(uv.x, 1.0), 1.0);\n    \n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}