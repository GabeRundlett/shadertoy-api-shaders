{
    "Shader": {
        "info": {
            "date": "1720381742",
            "description": "variation on shader inspired by kishimisu",
            "flags": 0,
            "hasliked": 0,
            "id": "l3KXzt",
            "likes": 4,
            "name": "String Sphere v01",
            "published": 3,
            "tags": [
                "colorful",
                "rainbow",
                "string",
                "pattern",
                "cycles"
            ],
            "usePreview": 0,
            "username": "harsh",
            "viewed": 118
        },
        "renderpass": [
            {
                "code": "#define AA 1.0 \n#define PATTERN_SCALE 12.0 // Scale of the pattern\n#define COLOR_SHIFT 0.8 // Color shifting intensity\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / min(iResolution.y, iResolution.x);\n    float t = iTime * 0.4; \n    float z = 1.0 - dot(uv, uv);\n    if (z <= 0.02) { \n        fragColor = vec4(0.0, 0.0, 0.0, 0.0);\n        return;\n    }\n    vec3 sphereUV = vec3(uv, sqrt(z));\n    vec3 O = vec3(0.0);\n    for (float i = 0.0; i < 8.0; i += 1.0) \n    {\n        float angle = i * 0.785398; \n        float l = length(vec2(cos(angle + t), sin(angle - t)) + sphereUV.xy);\n        vec3 pattern = vec3(\n            sin(l * PATTERN_SCALE + t),\n            sin(l * PATTERN_SCALE + t + 2.094),\n            sin(l * PATTERN_SCALE + t + 4.188)\n        );\n        O += pow(\n            0.015 / abs(sin(exp(sin(l) * 0.6 - length(sphereUV.xy * 0.5)) * 7.0 + t * 3.0)\n            - smoothstep(0.0, 0.7, l - 0.7) * 1.4) /\n            smoothstep(0.0, 0.1, abs(l - 1.25)), 1.2\n        ) * (1.0 + pattern * COLOR_SHIFT);\n    }\n    vec3 glowColor = vec3(sin(t * 2.5), sin(t * 2.5 + 2.094), sin(t * 2.5 + 4.188)) * 0.5 + 0.5;\n    float edgeGlow = 0.025 / (0.25 + exp((sqrt(z) - 0.35) * 35.0));\n    glowColor *= edgeGlow;\n    float antiAlias = smoothstep(0.02, 0.12, AA * pow(z, 0.6));\n    fragColor = vec4(O + glowColor, antiAlias);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}