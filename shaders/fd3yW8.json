{
    "Shader": {
        "info": {
            "date": "1653415711",
            "description": "Erster Shader mit Soundeingang.",
            "flags": 4,
            "hasliked": 0,
            "id": "fd3yW8",
            "likes": 5,
            "name": "Sound Spectrum Ossitech",
            "published": 3,
            "tags": [
                "sound"
            ],
            "usePreview": 0,
            "username": "Ossitech",
            "viewed": 350
        },
        "renderpass": [
            {
                "code": "#define MULT 1.5\n\nfloat getMirroredFFT(vec2 uv)\n{\n    if (uv.x < 0.5) return texture(iChannel0, vec2(0.5 - uv.x, uv.y)).x;\n    return texture(iChannel0, uv - vec2(0.5, 0.0)).x;\n}\n\nfloat getOffset()\n{\n    float offset = 0.0;\n    \n    for (int i = 0; i < 512; i++)\n    {\n        offset += texture(iChannel0, vec2(float(i) / 512.0, 0.0)).x * MULT;\n    }\n    \n    offset /= 512.0;\n    \n    return offset;\n}\n\nvec4 line(vec2 pos)\n{\n    \n    float offset = getOffset();\n    \n    vec2 uv = pos / iResolution.xy;\n    \n    float v = 0.5 + cos(pos.x / (0.2 * iResolution.x) + pos.y * 0.005 + iTime * 10.0 + 20.0 * offset);\n    float fft = getMirroredFFT(uv) * MULT;\n    \n    float line_width = 100.0 * (offset - 0.3);\n    float line_distance = 200.0 + 100.0 * sin(iTime * 0.1);\n    \n    if (int((offset + fft * 2.0) * 100.0 + pos.y + cos(iTime * 2.0) * 100.0) % int(line_distance) < int(line_width))\n    {\n        //Basic Color\n        vec4 colBase = vec4(v, cos(iTime + offset), sin(iTime * 0.3), 1.0);\n        //Detail Color\n        vec4 colWave = vec4(sin(iTime + offset), cos(iTime * 0.3), v * fft, 1.0);\n        return colBase + colWave;\n    }\n    return vec4(0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = line(fragCoord);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "mic",
                        "id": 32,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/mic.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}