{
    "Shader": {
        "info": {
            "date": "1693455610",
            "description": "uh you click tge screen\n(turn camera on)",
            "flags": 34,
            "hasliked": 0,
            "id": "mtffD2",
            "likes": 0,
            "name": "Rainbow Camera Draw Thing",
            "published": 3,
            "tags": [
                "interactive",
                "camera",
                "rainbow"
            ],
            "usePreview": 0,
            "username": "Supercooldude",
            "viewed": 250
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = (0.5 + 0.5*cos(iTime + uv.xyx * 2.0 + vec3(0,2,4))) * vec3(texture(iChannel0, uv)) * vec3(texture(iChannel1, uv));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ar = iResolution.y/iResolution.x;\n    ivec2 fragCoordInt = ivec2(int(fragCoord.x), int(fragCoord.y));\n    vec3 col = vec3(texelFetch(iChannel0, fragCoordInt, 0));\n    \n    \n    \n    float dx = fragCoord.x - float(iMouse.x);\n    float dy = fragCoord.y - float(iMouse.y);\n    if (sqrt(dx*dx + dy*dy) < 5.0 && iMouse.z > 0.0)\n    {\n        col = vec3(1.0, 1.0, 1.0);\n    }\n    \n    fragColor = vec4(col, 1.0);\n\n    \n\n    if (iFrame == 0)\n    {\n        fragColor = vec4(0.0,0.0,0.0,0.0);\n    }\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}