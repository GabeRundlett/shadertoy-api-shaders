{
    "Shader": {
        "info": {
            "date": "1668687900",
            "description": "Recently GMTK which is a YouTube channel around game dev showcased some of the custom Elden ring cards. I loved those and thought of creating an image filter inspired by those cards design.\nhttps://twitter.com/gamemakerstk/status/1590778079118782464\n",
            "flags": 0,
            "hasliked": 0,
            "id": "csfXDn",
            "likes": 4,
            "name": "GMTK Elden Ring Cards Inspired",
            "published": 3,
            "tags": [
                "imagefilter",
                "dithering"
            ],
            "usePreview": 0,
            "username": "Rutvik_Tak",
            "viewed": 360
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv=fragCoord/iResolution.xy;\n    \n    // Output to screen\n    \n    vec4 mycolor=vec4(uv.xyx,1.);\n    \n    //vec4 color = texture( iChannel0, uv.xy );\n    \n    vec4 bitRateColor=vec4(sin(mycolor.x*700.)*.3,cos(mycolor.y*700.)*.3,1.,1.);\n    vec2 res=iResolution.xy/3.;\n    vec2 pos=floor(uv*res)/res;\n    if(max(abs(pos.x-.5),abs(pos.y-.5))>.5){\n        fragColor=vec4(0.);\n    }\n    \n    vec4 imagePixel=texture(iChannel0,pos.xy);\n    \n    vec4 imagetopixelcolor=vec4(bitRateColor.xy,imagePixel.x,imagePixel.x);\n    \n    float grayScaleValue=(imagetopixelcolor.x+imagetopixelcolor.y+imagetopixelcolor.z)/3.;\n   // vec2 pixelColor = step(grayScaleValue+0.5,imagePixel.xy);\n    vec2 pixelColor = smoothstep(0.,grayScaleValue+1.,imagePixel.xy);\n\n    fragColor=vec4(pixelColor,imagePixel.b,0.);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}