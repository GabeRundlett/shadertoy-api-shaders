{
    "Shader": {
        "info": {
            "date": "1597264903",
            "description": "Simple pattern looping animation for practicing glsl basics. ",
            "flags": 0,
            "hasliked": 0,
            "id": "WtXBzf",
            "likes": 3,
            "name": "Pattern In Motion",
            "published": 3,
            "tags": [
                "beginner",
                "glsl",
                "motion",
                "pattern"
            ],
            "usePreview": 0,
            "username": "rikmazz",
            "viewed": 382
        },
        "renderpass": [
            {
                "code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265359\n\nfloat circle_outline(in vec2 _st, in float _radius, in float _thk, in float _blur){\n    vec2 dist = _st-vec2(0.5);\n    float pct = smoothstep(_radius-_thk/2.-(_blur),\n                         _radius-_thk/2.,\n                         dot(dist,dist)*5.128) - \n        \t\tsmoothstep(_radius+_thk/2.,\n                         _radius+_thk/2.+(_blur),\n                         dot(dist,dist)*5.128);\n\treturn pct;\n}\n\nfloat sc_f = 6.;\nfloat radius = 0.476;\nfloat thk = 0.006;\nfloat blur = 0.058;\n\nfloat speed = 0.448;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    st *= sc_f;\n    \n    float time = speed * iTime;\n    st.x += step(1., mod(st.y, 2.))*2.*smoothstep(0.,1.,(fract(time)*step(0.,sin(time*PI))));\n    st.x += (1.-step(1., mod(st.y, 2.)))*-2.*smoothstep(0.,1.,(fract(time)*step(0.,sin(time*PI))));\n    st.y += step(1., mod(st.x, 2.))*2.*smoothstep(0., 1.,(fract(time)*step(0.,sin(time*PI-PI))));\n    st.y += (1.-step(1., mod(st.x, 2.)))*-2.*smoothstep(0., 1.,(fract(time)*step(0.,sin(time*PI-PI))));\n    st = fract(st);\n    \n    float pct = circle_outline(st, radius, thk, blur);\n\n    vec3 color = vec3(0.684,0.700,0.168);\n    vec3 bg_color = vec3(0.062,0.065,0.051);\n\n    fragColor = vec4(color,1.0) * pct + vec4(bg_color,1.0) * (1.-pct);\n    // gl_FragColor = vec4(st.x, st.y, 0.,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}