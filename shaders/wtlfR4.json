{
    "Shader": {
        "info": {
            "date": "1596200410",
            "description": "More colour hypnotism. The HSB spectrum plotted Polar and twisted through time.",
            "flags": 0,
            "hasliked": 0,
            "id": "wtlfR4",
            "likes": 2,
            "name": "HSB Colour Twist - TBOS 6.0",
            "published": 3,
            "tags": [
                "sin",
                "color",
                "rgb",
                "colour",
                "colour",
                "trig",
                "twist",
                "hsb"
            ],
            "usePreview": 0,
            "username": "stungeye",
            "viewed": 445
        },
        "renderpass": [
            {
                "code": "#define TWO_PI 6.28318530718\n#define PI 3.1415926535897\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    \n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\n// Polar plot of the HSB Colour Space.\n// https://thebookofshaders.com/06/\nvoid mainImage(out vec4 fragColor,  // Output (r, g, b, a) pixel color \n               in vec2 fragCoord) { // Input (x, y) image coordinate\n    \n    vec2 st = fragCoord.xy/iResolution.y;\n    \n    vec3 color = vec3(0.0);\n   \n    // Use polar coordinates instead of cartesian\n    vec2 toCenter = vec2(0.5)-st;\n    float radius = length(toCenter)*2.0;\n    float angle = atan(toCenter.y,toCenter.x);\n    \n    // I only added the twist. :)\n    float twist = 10. * (sin(iTime / PI));\n    angle +=  twist * radius; // Rotate according to radius.\n    \n\n    // Map the angle (-PI to PI) to the Hue (from 0 to 1)\n    // and the Saturation to the radius\n    color = hsb2rgb(vec3((angle/TWO_PI)+0.5,radius,1.0));\n\n    fragColor = vec4(color,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}