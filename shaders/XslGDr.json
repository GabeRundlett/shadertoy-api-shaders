{
    "Shader": {
        "info": {
            "date": "1367635850",
            "description": "A stupid glow/bloom hack. Click and move the mouse over the video to move the splitter separating the and bloom sides.",
            "flags": 0,
            "hasliked": 0,
            "id": "XslGDr",
            "likes": 41,
            "name": "Glow hack",
            "published": 3,
            "tags": [
                "glow"
            ],
            "usePreview": 0,
            "username": "nuclear",
            "viewed": 7440
        },
        "renderpass": [
            {
                "code": "vec3 samplef(vec2 tc);\nvec3 blur(vec2 tc, float offs);\nvec3 highlights(vec3 pixel, float thres);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 tc = fragCoord.xy / iResolution.xy;\n\tvec3 color = blur(tc, 2.0);\n\tcolor += blur(tc, 3.0);\n\tcolor += blur(tc, 5.0);\n\tcolor += blur(tc, 7.0);\n\tcolor /= 4.0;\n\t\n\tcolor += samplef(tc);\n\t\n\tfloat div_pos = iMouse.x / iResolution.x;\n\tif(iMouse.x < 2.0) {\n\t\tdiv_pos = 0.5;\n\t}\n\tfloat divider = smoothstep(div_pos - 0.01, div_pos + 0.01, tc.x);\n\tfragColor.xyz = mix(samplef(tc), color, divider) * (divider * divider + (1.0 - divider) * (1.0 - divider));\n\tfragColor.w = 1.0;\n}\n\nvec3 samplef(vec2 tc)\n{\n\treturn pow(texture(iChannel0, tc).xyz, vec3(2.2, 2.2, 2.2));\n}\n\nvec3 hsample(vec2 tc)\n{\n\treturn highlights(samplef(tc), 0.6);\n}\n\nvec3 blur(vec2 tc, float offs)\n{\n\tvec4 xoffs = offs * vec4(-2.0, -1.0, 1.0, 2.0) / iResolution.x;\n\tvec4 yoffs = offs * vec4(-2.0, -1.0, 1.0, 2.0) / iResolution.y;\n\t\n\tvec3 color = vec3(0.0, 0.0, 0.0);\n\tcolor += hsample(tc + vec2(xoffs.x, yoffs.x)) * 0.00366;\n\tcolor += hsample(tc + vec2(xoffs.y, yoffs.x)) * 0.01465;\n\tcolor += hsample(tc + vec2(    0.0, yoffs.x)) * 0.02564;\n\tcolor += hsample(tc + vec2(xoffs.z, yoffs.x)) * 0.01465;\n\tcolor += hsample(tc + vec2(xoffs.w, yoffs.x)) * 0.00366;\n\t\n\tcolor += hsample(tc + vec2(xoffs.x, yoffs.y)) * 0.01465;\n\tcolor += hsample(tc + vec2(xoffs.y, yoffs.y)) * 0.05861;\n\tcolor += hsample(tc + vec2(    0.0, yoffs.y)) * 0.09524;\n\tcolor += hsample(tc + vec2(xoffs.z, yoffs.y)) * 0.05861;\n\tcolor += hsample(tc + vec2(xoffs.w, yoffs.y)) * 0.01465;\n\t\n\tcolor += hsample(tc + vec2(xoffs.x, 0.0)) * 0.02564;\n\tcolor += hsample(tc + vec2(xoffs.y, 0.0)) * 0.09524;\n\tcolor += hsample(tc + vec2(    0.0, 0.0)) * 0.15018;\n\tcolor += hsample(tc + vec2(xoffs.z, 0.0)) * 0.09524;\n\tcolor += hsample(tc + vec2(xoffs.w, 0.0)) * 0.02564;\n\t\n\tcolor += hsample(tc + vec2(xoffs.x, yoffs.z)) * 0.01465;\n\tcolor += hsample(tc + vec2(xoffs.y, yoffs.z)) * 0.05861;\n\tcolor += hsample(tc + vec2(    0.0, yoffs.z)) * 0.09524;\n\tcolor += hsample(tc + vec2(xoffs.z, yoffs.z)) * 0.05861;\n\tcolor += hsample(tc + vec2(xoffs.w, yoffs.z)) * 0.01465;\n\t\n\tcolor += hsample(tc + vec2(xoffs.x, yoffs.w)) * 0.00366;\n\tcolor += hsample(tc + vec2(xoffs.y, yoffs.w)) * 0.01465;\n\tcolor += hsample(tc + vec2(    0.0, yoffs.w)) * 0.02564;\n\tcolor += hsample(tc + vec2(xoffs.z, yoffs.w)) * 0.01465;\n\tcolor += hsample(tc + vec2(xoffs.w, yoffs.w)) * 0.00366;\n\n\treturn color;\n}\n\nvec3 highlights(vec3 pixel, float thres)\n{\n\tfloat val = (pixel.x + pixel.y + pixel.z) / 3.0;\n\treturn pixel * smoothstep(thres - 0.1, thres + 0.1, val);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}