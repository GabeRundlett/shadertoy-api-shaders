{
    "Shader": {
        "info": {
            "date": "1519667970",
            "description": "Theory of density wave as tilted bounding ellipses. cf [url]https://www.shadertoy.com/view/4dcyzX[/url]\nPlaying with procedural noise.\n         M:  multiplicative vs additive Perlin noise.\nSPACE:  signed, unsigned, abs, 1.-abs\nchange density in exp(-O/d)",
            "flags": 48,
            "hasliked": 0,
            "id": "Ms3czX",
            "likes": 109,
            "name": "galaxy spirals: ellipmod +Perlin",
            "published": 3,
            "tags": [
                "galaxy",
                "quadratic",
                "ellipse",
                "short",
                "form"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 3458
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/4dcyzX\n\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define SQR(v) ( (v) * (v) )\n\nfloat MUL = 1.,    // multiplicative vs additive Perlin\n      TEX = 0.;    // unsigned, signed, abs, 1-abs\n\nvec4 t( vec2 U ) { // --- apply chosen turbulence function\n    vec4 T = texture(iChannel0,U); // note that this is value noise, so not true Perlin\n         if (TEX==0.) return              T ;\n    else if (TEX==1.) return          2.* T -1. ;\n    else if (TEX==2.) return     abs( 2.* T -1. );\n    else              return 1.- abs( 2.* T -1. );\n}\n\nvec4 T(vec2 U) {   // --- apply either multiplicative or additive cascade\n    U /= 16.;\n    if (MUL==1.) return   t(U) * t(2.*U)*2. * t(4.*U)*2. * t(8.*U)*2. ;\n    else         return ( t(U) + t(2.*U)/2. + t(4.*U)/4. + t(8.*U)/8. ) / 2. ;\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec4 K = texelFetch(iChannel3,ivec2(0),0); // keyboard commands\n    TEX = K.x; MUL = K.y;\n\n    vec2 R = iResolution.xy;\n    U =  1.2* (U+U-R)/R.y;\n    O *= 0.;\n    \n    vec2  r = vec2(.5,.3);              // base ellipse aspect ration\n    float a = -3.14/2.,                 // ellipse angle tilt per scaling length\n          va, d, l = 1.,                // scaling length\n          e = (iMouse.z<=0.) ? .3 : .1; // thickness of each ellipse\n    \n    for (float l = .1,n=1.; l<3.; l+= .1,n++) \n    {   \n     // r = .5*vec2( 1., .6+.4* (l/3.) );     // morphing to circle outside\n        vec2 V = 1./vec2(r) * ( rot(a+a*l)* U ) ;\n        d = dot (V, V ); // quadratic form of the ellipsoid U.R⁻¹.(1/d²).R.U = l²\n        va = iTime*(1.5/l-0.);                // in galaxies, tangential velocity is constant !\n        vec4 C = T( rot(va+n) * .5*V/l );     // noise in ellipse frame\n        O += smoothstep(e,0.,abs(sqrt(d)-l) ) // ellipse shape\n            * C / l;                          // noise + fading\n    }  \n    \n    if (TEX==1.) O = .5+.5*O;                 // signed -> displayable\n    \n    O = O.rrrr;\n         if (TEX == 1.) O = 1.-O;\n    else if (MUL == 0.) O = exp(-O/2.);\n    else                O = exp(-O/8.);     \n}\n\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// bits of \"key group toggles\": https://www.shadertoy.com/view/MlffW2\n\n#define keypressed(ascii) ( texelFetch(iChannel3,ivec2(ascii,1),0).x > 0. )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    if ( iFrame == 0 ) { O = vec4(-1); return; } // initialized at -1\n    \n    if (U.y>1.) return;\n    O = texelFetch(iChannel0,ivec2(U),0);   \n    \n \tint x = int(U.x);  \n    if ( x == 0 ) {\n        \n        if ( O.x < 0. )     O.x = 3. ;             //    TEX default value\n        if (keypressed(32)) O.x = mod(O.x+1.,4.);  // SPACE: 4 states\n\n        if ( O.y < 0. )     O.y = 1. ;             //    MUL default value\n        if (keypressed(77)) O.y = 1.-O.y;          //     T: 2 states\n     }\n               \n // FYI: LEFT:37  UP:38  RIGHT:39  DOWN:40   PAGEUP:33  PAGEDOWN:34  END : 35  HOME: 36 F1:112\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}