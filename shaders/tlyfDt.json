{
    "Shader": {
        "info": {
            "date": "1615328712",
            "description": "wow",
            "flags": 0,
            "hasliked": 0,
            "id": "tlyfDt",
            "likes": 3,
            "name": "smiley shader tutorial",
            "published": 3,
            "tags": [
                "firstshader"
            ],
            "usePreview": 0,
            "username": "Tater",
            "viewed": 262
        },
        "renderpass": [
            {
                "code": "//mostly the intro tutorials from \"The Art of Code\"\nfloat Circle(vec2 uv, vec2 p, float r, float blur){\n\n    float d = length(uv-p);\n    \n    float c = smoothstep(r, r-blur ,d);\n    return c;\n}\nmat2 Rot(float a){\nfloat s = sin(a);\nfloat c = cos(a);\nreturn mat2(c,-s,s,c);\n\n}\nfloat Smiley(vec2 uv, vec2 p, float size) \n{\n    uv/=size;\n    uv-=p; \n    \n    float mask = Circle(uv, vec2(0.), .4, .01);\n\n    mask -= Circle(uv, vec2(.1, .2), .07, .01);\n    mask -= Circle(uv, vec2(-.1, .2), .07, .01);\n    \n    float mouth = Circle(uv, vec2(0.,-0.1), .1,.01);\n    mouth -= Circle(uv, vec2(0.,0.),.1,.01);\n    mouth = clamp(mouth,0.,1.);\n    \n    mask-=mouth;\n    \n    return mask;\n}\nfloat Band(float t, float start, float end, float blur)\n{\n    float step1 = smoothstep(start - blur,start + blur,t);\n    \n    float step2 = smoothstep(end + blur,end - blur,t);\n    \n    return step1*step2;\n    \n    \n}\nfloat remap01 (float a, float b, float t)\n{\n    return (t-a) / (b-a);\n}\nfloat remap(float a, float b, float c, float d, float t)\n{\n    return remap01(a,b,t) * (d-c) + c;\n}\n\n\n\nfloat Rect(vec2 uv, float left, float right, float bottom, float top, float blur)\n{\nfloat Band1 = Band(uv.x, left, right, blur);\nfloat Band2 = Band(uv.y, bottom, top, blur);\n\nreturn Band1*Band2;\n\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=vec2(.5, .5); // -0.5 <> 0.5\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 uvi = uv;\n    \n\n    \n    t = (floor(t) + fract(t)*fract(t))*2.0;\n    \n    \n    uv.y+=sin(t+uv.x*20.)/10.;\n    uv.x+=sin(t+uv.y*20.)/20.;\n    \n    //spiiiiin\n    //uv*=Rot(iTime*2.); \n    \n    uv*=1.3;\n\n    vec3 col = vec3(0.);\n\n    float blur = remap(-1., 1., .01, .1, sin(t));\n    float mask = Rect(uv, -.25, .25, -.3, .3, blur);\n    \n    mask -= 0.5*Smiley(uvi, vec2(0), .5);\n    \n    col = (vec3(.5,0.,1.))*mask;\n\n    fragColor = vec4(col ,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}