{
    "Shader": {
        "info": {
            "date": "1579726437",
            "description": "Mess around with number of objects and gravity and stuff in Common",
            "flags": 32,
            "hasliked": 0,
            "id": "wtyGWy",
            "likes": 7,
            "name": "boring n-body simulation thing",
            "published": 3,
            "tags": [
                "2d",
                "gravity"
            ],
            "usePreview": 0,
            "username": "DJDoomz",
            "viewed": 499
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //center view around average of system\n    vec2 cen = vec2(0,0);\n    for(float i = 0.0; i < NUM; i++)\n    {\n    \n    \tvec4 o = texelFetch(iChannel0, ivec2(i,0), 0);\n        cen += o.xy;\n    \n    }\n    cen /= NUM;\n    vec2 uv = 2.*(fragCoord-.5*iResolution.xy)/iResolution.y + cen;\n    \n    vec3 col = vec3(0);//0.06 + 0.06*cos(iTime+uv.xyx*3.+vec3(0,2,4));\n    \n    for(float i = 0.0; i < NUM; i++)\n    {\n    \n    \tvec4 o = texelFetch(iChannel0, ivec2(i,0), 0);\n        \n        vec3 c = .5+.5*sin(vec3(1,2,3)*i);\n        \n        float d = .005/length(uv-o.xy);\n        \n        d = smoothstep(0.2,.4, d);\n        \n        col += c*d;\n    \n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//x = xpos\n//y = ypos\n//z = xvel\n//w = yvel\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    if(iFrame <= 3)\n    \tfragColor = vec4(fragCoord/5.,0.,0.03*sin(fragCoord.x));\n    else\n    \t{\n    \t\tvec4 o = texelFetch(iChannel0, ivec2(fragCoord), 0);\n\n            \n            for(float i = 0.0; i < NUM; i++)\n            {\n                if(int(i) != int(fragCoord.x)){\n                    vec4 oo = texelFetch(iChannel0, ivec2(i,0), 0);\n                    \n                    float dist = distance(o.xy, oo.xy);\n                    vec2 direction = -normalize(o.xy-oo.xy);\n                    \n                    o.zw += GRAV*direction/(dist*dist+DMUL);\n                }\n            }\n            \n            o.x += .1*o.z;\n            o.y += .1*o.w;\n\n            //o.x = fract((o.x+1.)/2.)*2.-1.;\n            //o.y = fract((o.y+1.)/2.)*2.-1.;\n            \n            fragColor = o;\n        }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define NUM 8.0\n#define GRAV .00003\n#define DMUL 5.0",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}