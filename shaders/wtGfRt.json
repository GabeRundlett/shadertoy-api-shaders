{
    "Shader": {
        "info": {
            "date": "1614993247",
            "description": "Plot of the roots of a sine wave.",
            "flags": 0,
            "hasliked": 0,
            "id": "wtGfRt",
            "likes": 5,
            "name": "Roots of a Sine Wave",
            "published": 3,
            "tags": [
                "math",
                "sine",
                "graph",
                "trig",
                "analytic",
                "roots",
                "zeroes"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 156
        },
        "renderpass": [
            {
                "code": "#define draw(d, c) color = mix(color, c, smoothstep(unit, 0.0, d))\n\n#define PI 3.14\n#define TAU 6.28\n\nvec2 opRepeatX(in vec2 p, in float interv) {\n    float hInterv = 0.5 * interv;\n    p.x = mod(p.x + hInterv, interv) - hInterv;\n    return p;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * 4.0;\n    float unit = 8.0 / iResolution.y;\n    float t = 0.25 * unit;\n    vec3 color = vec3(1.0);\n\n    // Grid\n    draw(abs(mod(uv.x + 0.125, 0.25) - 0.125) + t, vec3(0.0, 0.0, 1.0));\n    draw(abs(mod(uv.y + 0.125, 0.25) - 0.125) + t, vec3(0.0, 0.0, 1.0));\n    draw(abs(uv.x), vec3(1.0, 0.0, 0.0));\n    draw(abs(uv.y), vec3(1.0, 0.0, 0.0));\n\n    // Frequency, amplitude, phase, and y offset\n    float freq = 0.5 + 0.4 * sin(iTime);\n    float amp = cos(iTime) + 1.0;\n    float phase = cos(iTime * 0.25) * 10.0;\n    float yOffs = sin(iTime * 0.5);\n\n    // Function\n    float f = 0.5 * amp * sin(TAU * freq * uv.x - phase) + yOffs;\n    float d = PI * amp * freq * cos(TAU * freq * uv.x - phase);\n    draw(abs(uv.y - f) / sqrt(1.0 + d * d) - t, vec3(0.8, 0.0, 0.0));\n\n    // Plot roots (if any)\n    if (abs(yOffs) <= 0.5 * amp) {\n        float offs1 = (phase - asin(2.0 * yOffs / amp)) / (TAU * freq);\n        float offs2 = (phase + asin(2.0 * yOffs / amp) + PI) / (TAU * freq);\n        float interv = 1.0 / freq;\n\n        vec2 rv1 = opRepeatX(vec2(uv.x - offs1, uv.y), interv);\n        draw(length(rv1) - 0.05, vec3(0.0));\n\n        vec2 rv2 = opRepeatX(vec2(uv.x - offs2, uv.y), interv);\n        draw(length(rv2) - 0.05, vec3(0.0));\n    }\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}