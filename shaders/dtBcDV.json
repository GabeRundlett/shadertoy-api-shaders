{
    "Shader": {
        "info": {
            "date": "1692294255",
            "description": "Yeah so a friend of mine told me he did this by accident, adding a constant, the same constant, to each point instead of c. So I tried it. It works! yay. Why is every resource so useless that I understood this by accident before I understood any of them??",
            "flags": 32,
            "hasliked": 0,
            "id": "dtBcDV",
            "likes": 2,
            "name": "julia setÕè",
            "published": 3,
            "tags": [
                "fractal",
                "julia",
                "complex",
                "imaginary"
            ],
            "usePreview": 0,
            "username": "01000001",
            "viewed": 119
        },
        "renderpass": [
            {
                "code": "// FULLSCREEN! Trust me, it's worth it. Don't worry, the shader is very performant.\n\n\n\n\n\n// Thanks to https://www.shadertoy.com/view/4sBfRd\n#define C(c) O+= char(U,c).x; U.x-=.5;\nvec4 char(vec2 p, int c) {\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n\treturn textureGrad( iChannel1, p/16. + fract( vec2(c, 15-c/16) / 16. ), dFdx(p/16.),dFdy(p/16.) );\n}\n\nvoid mainImage( out vec4 O, in vec2 U ){\n    O = texture(iChannel0, U/iResolution.xy);\n    \n    \n    if (iMouse.x < 1. && iMouse.y < 1.){  // No mouse input yet\n        U = 8.*U/iResolution.y;\n        C(64+13);C(96+15);C(96+21);C(96+19);C(96+5);C(32);\n        C(64+9);C(96+14);C(96+16);C(96+21);C(96+20);C(33);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "int iters = 512;\nint ssaa = 1;\nvec2 uvtc(vec2 u){ return (2.*u - iResolution.xy)/iResolution.y; }\n\nconst uint k = 1103515245U;\nvec3 hash( uvec3 x )\n{\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    \n    return vec3(x)*(1.0/float(0xffffffffU));\n}\n//hash by IQ https://www.shadertoy.com/view/XlXcW4\nvec2 circleSample(uvec3 x){\n    vec2 v;\n    for(v=hash(x+uint(v*1e9)).xy-.5;\n        dot(v,v)<.5;)\n    return v;\n}\n\nvoid mainImage( out vec4 O, in vec2 U ){\n\n    vec2 r = iResolution.xy;\n    vec2 mo = uvtc(iMouse.xy);\n    if (iMouse.x < 1. && iMouse.y < 1. || iFrame < 10){  // No mouse input yet\n        mo = .01*cos(iTime + vec2(11, 0)) - vec2(.7, .28);\n        iters = 512;\n        ssaa = 8;\n    } else {\n        mo = uvtc(iMouse.xy)*.5;\n    }\n        \n    float t = 0.;\n    \n    vec4 tex = iFrame==0?vec4(0):texture(iChannel0, U/r);\n    vec4 acc = iFrame==0?vec4(1):texture(iChannel0, r-r);\n    bool accum = acc.xy == mo;\n\n    if (U == vec2(.5)){\n        O.w = 1. + (accum?acc.w:0.);\n        O.xy = mo;\n        O.z = 0.; // Don't wanna leave it uninitialized\n        return;\n    }\n    \n    \n    for(int s = 0; s < ssaa; s++){\n    \n        vec2 uv = uvtc(U + \n            circleSample(uvec3(iFrame + s, int(U.x) + s, int(U.y) + s))\n        );\n        \n        float x = 0.;\n        vec2 z = uv;\n        int i = 0;\n        for(; i < iters; i++)\n        {\n\n            z = vec2(\n                z.x * z.x - z.y*z.y,\n                2. * z.x * z.y\n            ) + mo;\n\n            if (length(z) > 2.) break;\n        }\n\n        x = float(i-iters)/float(iters);\n        t += x;\n    }\n\n    t = t/float(ssaa);\n    t = (exp(t)-exp(-1.))/(1.-exp(-1.));\n    \n\n    O = mix(tex, vec4(t), 1./acc.w);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}