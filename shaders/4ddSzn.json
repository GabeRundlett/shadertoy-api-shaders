{
    "Shader": {
        "info": {
            "date": "1457376372",
            "description": "compilers <img src=\"/img/emoticonSad.png\"/>",
            "flags": 48,
            "hasliked": 0,
            "id": "4ddSzn",
            "likes": 25,
            "name": "kumbum",
            "published": 3,
            "tags": [
                "temple",
                "kumbum"
            ],
            "usePreview": 0,
            "username": "eiffie",
            "viewed": 1052
        },
        "renderpass": [
            {
                "code": "//kumbum by eiffie\n//playing with patterns but then got carried away and now the patterns don't compile in chrome :(\n//if you can get it to compile it runs fast so you can walk around\n\n//just the building\n//#define LOW_QUAL\n\n//add patterns and shadows\n//#define MED_QUAL\n\n//try a couple samples\n#define HI_QUAL\n\n#ifdef LOW_QUAL\n#define ITERS 48\n#else\n#define ITERS 64\n#endif\n\n#define load(a) texture(iChannel0,(vec2(a,0.0)+0.5)/iResolution.xy)\n#define PI 3.14159\nvec2 rotate(vec2 v, float angle) {return cos(angle)*v+sin(angle)*vec2(v.y,-v.x);}\n\nfloat DEK1(in vec2 p){\n\tfloat d=min(max(p.x,p.y)-4.0,min(max(p.x-5.0,p.y-2.0),max(p.x-2.0,p.y-5.0)));\n\treturn min(d,min(max(p.x-5.75,p.y-0.5),max(p.x-0.5,p.y-5.75)));\n} \nfloat DEK2(in vec3 p){\n\tp.xz=abs(p.xz)-2.15;\n\tp.xz=abs(p.xz)-0.9;\n\tp.xz=abs(p.xz)-0.23;\n\treturn max(p.y<-1.0?fract(p.y)-0.75:abs(fract(p.y)-0.5)-0.2,min(p.x,p.z));\n}\nfloat DE(in vec3 p0){\n\tvec3 p=abs(p0);\n\tfloat y=min(p0.y+(p0.y>3.0?7.0:0.0),10.0),y7=p0.y-7.0;\n\tfloat scale=1.0+floor(y)*0.1;\n\tfloat d1=max(y7,max(abs(DEK1(p.xz*scale)/scale)-0.05,-DEK2(p0)));//walls\n\ty=p0.y-0.5;\n\tscale=1.0+floor(min(y+(y>3.0?7.0:0.0),10.0))*0.1;\n\ty=abs(fract(y)-0.5);\n\tfloat a=45.0,b=0.02;\n\tif(p0.y>4.0){if(p0.y>11.6){a=-10.0;b=0.04;}else{a/=2.;}}\n\tfloat sy=sin(-y*a)*b;\n\tfloat d2=max(y7,max(DEK1(p.xz*scale)/scale-0.15+sy,y-0.05));//ceiling\n\tfloat ln=length(p0.xz);\n\ty=y7*10.0;\n\tfloat r=p0.y<5.0?3.7:p0.y<7.0?2.24:p0.y<12.0?1.5+sy*0.2+1.5*sin(log(y)*0.9):1.0-0.25*(p0.y-12.0);\n\tfloat d3=ln-r,d5=10.0;//cylinder\n\tif(p0.y<-1.0){\n\t\tfloat c=floor(atan(p0.z,p0.x)*16.0/PI+0.5);\n\t\tfloat a=c*PI/16.0;c=sin(c);\n\t\tvec2 v=vec2(cos(a),sin(a))*r;\n\t\ty=p0.y+1.75;\n\t\tfloat r2=length(v-p0.xz);\n\t\td3=max(d3,0.31-y*y-r2);\n\t\td5=r2-0.1-c*0.02-(0.033+0.015*c)*sin(-y*(15.0-3.0*c));\n\t\td5=max(p0.y+1.55-c*0.05,abs(d5)-0.01);\n\t}\n\td2=min(d2,max(abs(p0.y-5.0)-0.1,ln-3.9+sy));\n    d2=min(d2,max(abs(y7)-0.1,ln-3.0+sy));\n    d2=min(d2,max(abs(p0.y-12.0)-0.4,ln-1.9+sy));//more roofs\n\tp=p0;p.y-=16.0;\n\td3=min(d3,length(p)-0.25);\n\tp.y+=5.25;\n\tp=abs(p)-1.25;\n\tfloat d4=length(p.xz);//sticks\n\tp.xz=abs(vec2(p0.x+p0.z,p0.x-p0.z)*0.707)-1.25;\n\td4=max(min(d4,length(p.xz))-0.05,p.y);\n\tfloat d0=p0.y+2.0;//ground\n    float d=min(d0,min(d1,d2));\n    d=min(d,min(d3,min(d4,d5)));\n\t//float d=min(d0,min(d1,min(d2,min(d3,min(d4,d5)))));\n\treturn d*0.9;\n}\nfloat Pattern(vec2 p, float t){//0.25,1/3,0.5,2/3,0.75,0.8,1.0\n\tvec2 c=fract(vec2(p.x+p.y,p.x-p.y)*t)-0.5;\n\tp=fract(p)-0.5;\n\treturn step(p.x*p.y,0.0)*step(c.x*c.y,0.0);\n}\n// From IQ's original 3D noise function. Ripped from Desert Canyon\nfloat noise3D(in vec3 p){\n\tconst vec3 s = vec3(37, 157, 113);\n\tvec3 ip = floor(p);p -= ip;p = p*p*(3. - 2.*p);\n\tvec4 h = vec4(0., s.yz, s.y + s.z) + dot(ip, s);\n\th = mix(fract(sin(h)*43758.5453), fract(sin(h + s.x)*43758.5453), p.x);\n\th.xy = mix(h.xz, h.yw, p.y);return mix(h.x, h.y, p.z); // Range: [0, 1].\n}\n\n#define EPSILON 0.000001\nvec4 ctrap;\nfloat map(vec3 p0){\n#ifdef LOW_QUAL\n\tctrap+=vec4(1.0);\n\treturn DE(p0);\n#else\n\tvec3 p=abs(p0);\n\tfloat y=min(p0.y+(p0.y>3.0?7.0:0.0),10.0),y7=p0.y-7.0;\n\tfloat scale=1.0+floor(y)*0.1;\n\tfloat d1=max(y7,max(abs(DEK1(p.xz*scale)/scale)-0.05,-DEK2(p0)));//walls\n\ty=p0.y-0.5;\n\tscale=1.0+floor(min(y+(y>3.0?7.0:0.0),10.0))*0.1;\n\ty=abs(fract(y)-0.5);\n\tfloat g=45.0,b=0.02;\n\tif(p0.y>4.0){if(p0.y>11.6){g=-10.0;b=0.04;}else{g/=2.;}}\n\tfloat sy=sin(-y*g)*b;\n\tfloat d2=max(y7,max(DEK1(p.xz*scale)/scale-0.15+sy,y-0.05));//ceiling\n\tfloat ln=length(p0.xz);\n\ty=y7*10.0;\n\tfloat r=p0.y<5.0?3.7:p0.y<7.0?2.24:p0.y<12.0?1.5+sy*0.2+1.5*sin(log(y)*0.9):1.0-0.25*(p0.y-12.0);\n\tfloat d3=ln-r,d5=(y7>0.0 || abs(ln-3.5)<0.005)?d3-0.0001:10.0;//cylinder\n\tfloat c=0.0;\n\tif(p0.y<-1.0){\n\t\tc=floor(atan(p0.z,p0.x)*16.0/PI+0.5);\n\t\tfloat a=c*PI/16.0;c=sin(c);\n\t\tvec2 v=vec2(cos(a),sin(a))*3.7;\n\t\ty=p0.y+1.75;\n\t\tfloat r2=length(v-p0.xz);\n\t\td3=max(d3,0.31-y*y-r2);\n\t\td5=min(d5,max(p0.y+1.55-c*0.05,abs(r2-0.1-c*0.02-(0.033+0.015*c)*sin(-y*(15.0-3.0*c)))*0.9-0.01));\n\t}\n\td2=min(d2,max(abs(p0.y-5.0)-0.1,ln-3.9+sy));\n    d2=min(d2,max(abs(y7)-0.1,ln-3.0+sy));\n    d2=min(d2,max(abs(p0.y-12.0)-0.4,ln-1.9+sy));//more roofs\n\tp=p0;p.y-=16.0;\n\td5=min(d5,length(p)-0.25);\n\tp.y+=5.25;\n\tp=abs(p)-1.25;\n\tfloat d4=length(p.xz);//sticks\n\tp.xz=abs(vec2(p0.x+p0.z,p0.x-p0.z)*0.707)-1.25;\n\td4=max(min(d4,length(p.xz))-0.05,p.y);\n\tfloat d0=p0.y+2.0;//ground\n\tfloat d=min(d0,min(d1,d2));\n    d=min(d,min(d3,min(d4,d5)));\n\tfloat bump=-0.001;\n    d+=EPSILON;\n\tvec3 bscl=p0*200.0;//,pscl=p0*10.0,pcol=0.5*abs(sin(pscl.yzx+2.4*sin(pscl.zxy)));\n\tif(d0<d){//grass\n\t\tbscl=p0*10.0;\n\t\tbscl=bscl+sin(bscl.yzx+2.4*sin(bscl.zyx));\n\t\tctrap+=vec4(0.4+sin(bscl.x+bscl.z)*0.05,0.5,0.25+sin(bscl.x-bscl.z)*0.03,0.9);\n\t\tbscl*=20.0;\n\t}\n    if(d1<d){//walls\n\t\tvec3 col=vec3(1.0);\n\t\tif(fract(p0.y)>0.8){\n\t\t\tfloat p=Pattern(vec2(p0.x+p0.z,p0.y)*10.0,2.0/3.0);\n\t\t\tcol=mix(col,0.5*abs(sin(p0.yzx*10.0+2.4*sin(p0.zxy*10.0))),p);\n\t\t\tbump*=1.0-p;\n\t\t}\n\t\tctrap+=vec4(col,1.0);\n\t}\n    if(d2<d){//roofs\n\t\tvec3 col=vec3(1.0,0.5,0.4);\n\t\tif(p0.y<-1.5){\n\t\t\tfloat p=Pattern(p0.xz*10.0,1.0);\n\t\t\tcol=mix(vec3(0.75),0.5*abs(sin(p0.yzx*10.0+2.4*sin(p0.zxy*10.0)))*0.2+0.8,p);\n\t\t\tbump*=1.0-p;\n\t\t}else {bscl=p0*vec3(10.0,400.0,10.0);}\n\t\tctrap+=vec4(col,0.25);\n\t}\n    if(d3<d){//cylinder\n\t\tvec3 col=vec3(1.0);\n\t\tif(fract(p0.y)>0.8 || (p0.y<-1.0 && ln<3.5)){\n\t\t\tfloat p=Pattern(vec2(atan(p0.z,p0.x)*35.0,p0.y*10.0),floor(c*10.0)/3.0);\n\t\t\tcol=mix(col,0.5*abs(sin(p0.yzx*10.0+2.4*sin(p0.zxy*10.0))),p);\n\t\t\tbump*=1.0-p;\n\t\t}\n\t\tctrap+=vec4(col,1.0);\n\t}\n    if(d4<d){//sticks\n\t\tctrap+=vec4(1.0,0.2,0.1,0.0);\n\t}\n    if(d5<d){//pots\n\t\tbscl=p0*20.0;bump=0.012;\n\t\tif(abs(p0.y+1.78-c*0.05)-0.04<0.07*abs(c)){\n            float c2=floor(atan(p0.z,p0.x)*16.0/PI+0.5);//repeating code to ease compiling\n\t\t\tfloat a=c2*PI/16.0;\n\t\t\tvec2 v=vec2(cos(a),sin(a))*3.7;\n\t\t\tv-=p0.xz;\n\t\t\tfloat p=Pattern(vec2(atan(v.y,v.x)*3.0,p0.y*20.0),floor(c*10.0)*0.1);\n\t\t\tbump*=1.0-0.5*p;\n\t\t}\n\t\tctrap+=vec4(1.0,0.7,0.3,2.5);\n\t}\n\tfloat n=noise3D(bscl);\n\td+=n*bump-EPSILON;\n\treturn d;\n#endif\n}\n\nvec3 getBackground( in vec3 rd ){\n    vec3 SunDir=normalize(vec3(0.5,0.9,-0.4));\n\tvec3 col=vec3(0.6,0.7,0.8);\n\tif(rd.y<0.0)col=vec3(0.4,0.5,0.25);\n\telse col+=rd*0.1+vec3(1.0,0.9,0.7)*(max(0.0,dot(rd,SunDir))*0.2+pow(max(0.0,dot(rd,SunDir)),256.0));\n\treturn col;\n}\n\n// Tetrahedral normal from IQ modified to find curvature.\nvec4 normal(vec3 p, float e){vec2 v=vec2(-e,e);\n\tfloat d1=map(p+v.yxx),d2=map(p+v.xxy),d3=map(p+v.xyx),d4=map(p+v.yyy);\n\treturn vec4(normalize(v.yxx*d1+v.xxy*d2+v.xyx*d3+v.yyy*d4),(d1+d2+d3+d4)*0.25);\n}\nfloat rnd;\nfloat rand(){return fract(sin(rnd++));}\nvoid randomize(in vec2 p){rnd=fract(sin(dot(p,vec2(13.3145,17.7391)))*317.7654321);}\n\nfloat ShadAO(in vec3 ro, in vec3 rd){\n#ifdef LOW_QUAL\n    return 1.0;\n#else\n\tfloat t=0.005*rnd+0.001;\n\tfor(int i=0;i<14;i++)t+=DE(ro+rd*t);\n\treturn clamp(t*0.56,0.0,1.0);\n#endif\n}\nvoid Light(float t, float pxt, float d, vec3 ro, vec3 rd){\n    vec3 SunDir=normalize(vec3(0.5,0.9,-0.4));\n\tt-=(pxt-d);\n\tctrap=vec4(0.0);\n\tvec3 so=ro+rd*t,L=SunDir;\n\tfloat att=1.0,h=(so.y<-1.0?DEK1(abs(so.xz)*0.8):0.0);\n\tif(h<0.0){//inside lighting\n\t\tvec3 p=vec3(sign(so.x)*4.0,-1.08,sign(so.z)*4.0)-so;\n\t\tfloat a=length(p);\n\t\tL=mix(L,p/a,clamp(-h*20.0,0.0,1.0));\n\t\tatt/=(0.25+0.25*a*a);\n\t}\n\tfloat nd=map(so);\n\tvec4 N=normal(so,pxt);\n\tN.xyz*=1.0-clamp(0.5*abs(nd-N.w)/pxt,0.0,1.0);\n\tfloat dif=att*max(0.0,dot(N.xyz,L));\n\tctrap.rgb*=0.2*(dif*ShadAO(so+N.xyz*pxt*2.5,L)+0.175);\n\tvec3 refl=reflect(rd,N.xyz);\n\tfloat r=clamp(ctrap.a*0.2+min(0.0,dot(rd,N.xyz)),0.0,1.0);\n\tctrap.rgb+=vec3(1.0,0.9,0.7)*r*max(0.0,dot(refl,L))*att*att;\n}\nvec3 scene( vec3 ro, vec3 rd ){\n\tfloat maxt=(rd.y<0.0?(-2.0-ro.y)/rd.y:50.0);\n\tfloat t=rnd*DE(ro),d,px=1.0/iResolution.y,px2=px;//et=0.0\n#ifdef HI_QUAL\n    float et=0.0,px1=px*0.72;\n    px2=px*0.01;\n#endif\n\tfor(int i=0;i<ITERS;i++){\n\t\td=DE(ro+rd*t);\n#ifdef HI_QUAL\n\t\tif(d<px1*t && et==0.0)et=t;\n#endif\n\t\tt+=d;\n\t\tif(d<px2*t || t>maxt)break;\n\t}\n\tvec3 col=getBackground(rd);\n\tif(length(ro+rd*t)<10.0)col=vec3(0.0);\n\tif(d<10.0*px*t && d<0.4){//light it\n\t\tfloat pxt=px*t;\n\t\tLight(t,pxt,d,ro,rd);\n\t\tcol=ctrap.rgb;\t\n\t}\n#ifdef HI_QUAL\n\tif(et>0.0){\n\t\tt=et;\n\t\tfloat pxt=px*t;\n\t\td=DE(ro+rd*t);\n\t\tLight(t,pxt,d,ro,rd);\n\t\tcol=mix(ctrap.rgb,col,clamp(d/(pxt),0.0,1.0));\t\n\t}\n#endif\n\t//if(col!=col)col=vec3(1.0,0.0,0.0);\n\treturn col;\n}\t \n\nvec2 brownConradyDistortion(vec2 uv)\n{//from meshula https://www.shadertoy.com/view/MlSXR3\n    // positive values of K1 give barrel distortion, negative give pincushion\n    float barrelDistortion1 = 0.15; // K1 in text books\n    float barrelDistortion2 = 0.42; // K2 in text books\n    float r2 = uv.x*uv.x + uv.y*uv.y;\n    uv *= 1.0 + barrelDistortion1 * r2 + barrelDistortion2 * r2 * r2;\n    //uv*=1.0+r2+r2*r2;\n    // tangential distortion (due to off center lens elements)\n    // is not modeled in this function, but if it was, the terms would go here\n    return uv;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n\trandomize(fragCoord.xy+vec2(iTime));\n\tvec3 ro=load(0).xyz;\n\tvec2 rt=load(1).xy;\n\tvec2 uv=brownConradyDistortion((fragCoord-0.5*iResolution.xy)/iResolution.y);\n\tvec3 rd=normalize(vec3(uv,0.5));\n\trd.yz=rotate(rd.yz,rt.y);\n\trd.xz=rotate(rd.xz,rt.x);\n\tfragColor=vec4(scene(ro,rd),1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define PI 3.14159\n\n#define inside(a) (fragCoord.y-a.y == 0.5 && (fract(a.x) == 0.1 || fragCoord.x-a.x == 0.5))\n#define load(a) texture(iChannel0,(vec2(a,0.0)+0.5)/iResolution.xy)\n#define save(a,b) if(inside(vec2(a,0.0))){fragColor=b;return;}\n\n#define KEY_UP 38\n#define KEY_LEFT 37\n#define KEY_RIGHT 39\n#define KEY_DOWN 40\n\nbool KeyDown(in int key){\n\treturn (texture(iChannel1,vec2((float(key)+0.5)/256.0, 0.25)).x>0.0);\n}\n\nvec2 rotate(vec2 v, float angle) {return cos(angle)*v+sin(angle)*vec2(v.y,-v.x);}\n\nfloat DEK1(in vec2 p){\n\tfloat d=min(max(p.x,p.y)-4.0,min(max(p.x-5.0,p.y-2.0),max(p.x-2.0,p.y-5.0)));\n\treturn min(d,min(max(p.x-5.75,p.y-0.5),max(p.x-0.5,p.y-5.75)));\n} \nfloat DEK2(in vec3 p){\n\tp.xz=abs(p.xz)-2.15;\n\tp.xz=abs(p.xz)-0.9;\n\tp.xz=abs(p.xz)-0.23;\n\treturn max(p.y<-1.0?fract(p.y)-0.75:abs(fract(p.y)-0.5)-0.2,min(p.x,p.z));\n}\nfloat DE(vec3 p){\n\tfloat d=max(abs(DEK1(abs(p.xz)*0.8))-0.15,-DEK2(p));\n\treturn min(d,length(p.xz)-4.0);\n}\nvec3 Move(vec3 p0, vec3 m){\n\tvec3 p=p0+m;\n\tif(DE(p)<0.0){\n\t\tp=p0;p.x+=m.x;\n\t\tif(DE(p)<0.0){\n\t\t\tp=p0;p.z+=m.z;\n\t\t\tif(DE(p)<0.0)p=p0;\n\t\t}\n\t}\n\treturn p;\n}\nvec2 spow(vec2 a, vec2 b){return sign(a)*pow(abs(a),b);}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n\tif(fragCoord.y>1.0 || fragCoord.x>2.0)discard;\n\tvec4 st0=vec4(2.0,-1.6,-10.0,0.0);\n\tvec4 st1=vec4(0.0,0.0,1.0,0.0);\n\tif(iFrame>0){\n\t\tst0=load(0);\n\t\tst1=load(1);\n\t\tvec3 move=vec3(0.0);\n\t\tif(KeyDown(KEY_UP)){move.z+=1.0;}\n\t\tif(KeyDown(KEY_DOWN)){move.z-=1.0;}\n\t\tif(KeyDown(KEY_RIGHT)){move.x+=1.0;}\n\t\tif(KeyDown(KEY_LEFT)){move.x-=1.0;}\n\t\tmove.xz=rotate(move.xz,st1.x);\n\t\tst0.xyz=Move(st0.xyz,move*iTimeDelta*0.5);\n\t\tif(iMouse.z>0.0){\n\t\t\tvec2 ms=(iMouse.xy-iMouse.zw)/iResolution.xy;\n\t\t\tst1.xy+=spow(ms,vec2(3.0))*iTimeDelta*50.0;\n\t\t\tst1.y=clamp(st1.y,-1.0,1.0);\n\t\t}\n\t}\n\tfragColor=fragCoord.x<1.0?st0:st1;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}