{
    "Shader": {
        "info": {
            "date": "1504931635",
            "description": "Star shaped visualization.\nSilly code.",
            "flags": 32,
            "hasliked": 0,
            "id": "llscDN",
            "likes": 2,
            "name": "my_starfft",
            "published": 3,
            "tags": [
                "fft"
            ],
            "usePreview": 0,
            "username": "xdaimon",
            "viewed": 721
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float f(float x) {\n    //x = exp(pow(x,1.2)*log(2.))-1.;\n\treturn texture(iChannel0, vec2(x,.25)).r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat time = iTime/50.;\n\n\tvec2 R = iResolution.xy;\n\tvec2 p = fragCoord/R*2.-1.;\n\t\n    float aspect = R.x/R.y;\n\tp.y /= aspect;\n\tp *= 1. + fract(max(aspect, .7))/2.;\n\n\tfloat theta = atan(p.y,p.x);\n\tfloat len = length(p);\n\n\t// Make star fish\n\n\t// Set the fishies parameters\n\tfloat fish_number_legs = 10.;\n\n\t// Make the fish twirl around\n\tfloat fish_spin = time/2.;\n\n\t// Make the fish get bigger\n\tfloat fish_leg_len = .1*(.7+.7*.5);\n\n\t// Make the fish move its legs, if mouse.x==0 star fish dead\n\tfloat fish_leg_move = 0.1*sin(4.*time+len)*(2.*3.141592653589793);\n\n\t// Put the fish togeter\n\tfloat fish = fish_leg_len*sin(fish_leg_move + fish_spin + fish_number_legs*theta);\n\n\t// Make the fish jump a little\n\tfloat fish_jump = .08*.5 + f(0.001); // just a soft bump\n\n\t// Pixel distance to fish\n\tfloat fish_dist = 1.-len*(.8+fish_jump+fish);\n\n\t// Fishes swim away\n\tfloat fish_swim = time;\n\n\t// Fishes are packed fin to fin and gill to gill\n\tfloat fish_school = 2.0*abs(fract(.5*fish_dist + fish_swim)-.5);\n\n\t// Eat the fish\n\tfloat v = f(fish_school);\n    \n    vec3 color1 = vec3(0);\n\tvec3 color2 = vec3(1);\n    \n\tfragColor.rgb = mix(color2, color1, v);\n    \n    p = fragCoord/iResolution.xy;\n    vec4 Color = texture(iChannel1, p);\n    fragColor = fragColor * .3 + .7 * Color;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 19,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}