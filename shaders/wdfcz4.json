{
    "Shader": {
        "info": {
            "date": "1584327846",
            "description": "axis",
            "flags": 0,
            "hasliked": 0,
            "id": "wdfcz4",
            "likes": 2,
            "name": "axis&circle_indere",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "indere",
            "viewed": 315
        },
        "renderpass": [
            {
                "code": "\nvec3 drawGrid(float step, vec3 color, vec2 uv){\n    float len = 0.005;\n    float blur = 0.01;\n    vec3 res = vec3(1.0);\n    \n    \n\tif(abs(uv.x - floor(uv.x/step) * step) < len \n       || abs(uv.x - ceil(uv.x / step) * step) < len\n       || abs(uv.y - floor(uv.y/step) * step) < len \n       || abs(uv.y - ceil(uv.y / step) * step) < len\n      )\n        res = color;\n   \t\n    //y_axis\n    if(abs(uv.x) < len)\n        res = vec3(1.0,.0,0.0);\n    \n   \t//x_axis\n    if(abs(uv.y) < len)\n        res = vec3(0.0,.0,1.0);\n\t\n    return res;\n}\n\nvec3 drawCircle(vec2 center, float radius, vec2 uv, bool full){\n\tfloat e = 0.01;\n    float len = length(center - uv);\n    if(full)\n        return vec3(smoothstep(radius - e, radius, abs(len - radius)));\n    return vec3(smoothstep(0.0, e, abs(len - radius))); \n}\n\nvec3 drawSegement(vec2 begin, vec2 end, vec2 uv, float width){\n\tvec2 dis = end - begin;\n    vec2 dis1 = uv - begin;\n    \n    float t = clamp(dot(dis1, dis) / dot(dis , dis), 0.0, 1.0);\n    float d = length(dis1 - dis * t);\n    return vec3(smoothstep(0.0, width, d));\n    \n   \n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 backGroundColor = vec3(1.0, 1.0, 1.0);\n    \n    \n    // pixel coordinates (from -1 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n   \tuv -= 0.5;\n    uv *= 2.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n\t\n    \n    //grid\n    float step = 0.2;\n    vec3 c = vec3(0.8);\n    vec3 gridColor = drawGrid(step, c, uv);\n    \n    //circle\n    float radius = 0.5;\n    vec2 circleCenter = vec2(.0);\n    vec3 circleLine = drawCircle(circleCenter, radius, uv, false);\n    \n    //rotation/move point\n    float pointRadius = 0.05;\n    vec2 pointCenter = vec2(cos(iTime), sin(iTime));\n    pointCenter *= radius;\n    vec3 point = drawCircle(pointCenter, pointRadius, uv, true);\n    \n    //segement\n    vec2 begin = vec2(.0);\n    vec2 end = pointCenter;\n    float width = 0.01;\n    vec3 segement = drawSegement(begin, end, uv, width);\n    \n    vec3 color = backGroundColor * gridColor * circleLine * point *segement;\n    \n    fragColor = vec4(color, 1.0);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}