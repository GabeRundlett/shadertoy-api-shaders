{
    "Shader": {
        "info": {
            "date": "1629139773",
            "description": "setups, top to bottom:\n1) O\n2) float(iFrame)\n3) sin(t) in [-1, 1]\n4) NaN\n5) Inf\n6) O -= O\n7 .. 9) various O -= styles which should yield 0.5\n\ntests, left to right:\nA) isnan()\nB) isinf()\nC) bits!\nD) value",
            "flags": 0,
            "hasliked": 0,
            "id": "Ndd3R8",
            "likes": 5,
            "name": "O -= O tests",
            "published": 3,
            "tags": [
                "ios"
            ],
            "usePreview": 0,
            "username": "elenzil",
            "viewed": 258
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage( out vec4 O, in vec2 XY )\n{\n    vec2 UV = XY / iResolution.xy;\n    \n    //----------------------------------------------\n    // Setup the value\n    \n    float runtimeInf = uintBitsToFloat(uint(0x7f800000));\n    float runtimeNaN = uintBitsToFloat(uint(0x7fffffff));\n    \n    const float NumSetups = 9.0;\n    \n    float t = iTime * 3.14159265 * 2.0 / 10.0;\n\n    if (false) { /* noop */ }\n    else if (UV.y > 8.0 / NumSetups) {       // O\n        /* noop */\n    }\n    else if (UV.y > 7.0 / NumSetups) {       // iFrame\n        O = vec4(float(iFrame));\n    }\n    else if (UV.y > 6.0 / NumSetups) {       // sin(t) in [-1, 1]\n        O = vec4(sin(t));\n    }\n    else if (UV.y > 5.0 / NumSetups) {       // NaN\n        O = vec4(runtimeNaN);\n    }\n    else if (UV.y > 4.0 / NumSetups) {       // Inf\n        O = vec4(runtimeInf);\n    }\n    else if (UV.y > 3.0 / NumSetups) {       // O -= O\n        O -= O;\n    }\n    else if (UV.y > 2.0 / NumSetups) {       // O += 0.5 - O\n        O += 0.5 - O;\n    }\n    else if (UV.y > 1.0 / NumSetups) {       // O -= O - 0.5\n        O -= O - 0.5;\n    }\n    else if (UV.y > 0.0 / NumSetups) {       // O -= -0.5 + O\n        O -= -0.5 + O;\n    }\n    \n    //----------------------------------------------\n    // Examine the value\n    \n    const float NumTests = 4.0;\n    if (false) {}\n    else if (UV.x < 1.0 / NumTests) {\n        O.rgb = vec3(isnan(O.r) ? 0.5 : 0.0);\n    }\n    else if (UV.x < 2.0 / NumTests) {\n        O.rgb = vec3(isinf(O.r) ? 0.5 : 0.0);\n    }\n    else if (UV.x < 3.0 / NumTests) {\n        float testWidthPx = iResolution.x / NumTests;\n        int i = int(XY.x - testWidthPx * 2.0);\n        int bitIndex = int(float(i) * 32.0 / testWidthPx);\n        uint bitValue = (floatBitsToUint(O.r) >> (31 - bitIndex)) % uint(2);\n        O = vec4(bitValue == uint(1) ? 1.0 : 0.0);\n        O = mix(O, vec4(0.5), step(0.7, fract(float(i)  * 32.0 / testWidthPx)));\n    }\n    else { /* noop */ }\n    \n    bool isGridLine = false;\n    isGridLine = isGridLine || !bool(step(3.0, mod(XY.y, (iResolution.y - 2.0) / NumSetups)));\n    isGridLine = isGridLine || !bool(step(3.0, mod(XY.x, (iResolution.x - 2.0) / NumTests )));\n\n    if (isGridLine) {\n        O.rgb = vec3(0.7, 0.0, 0.5);\n    }\n\n    \n    O.a = 1.0;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}