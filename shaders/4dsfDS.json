{
    "Shader": {
        "info": {
            "date": "1497907979",
            "description": "Daily",
            "flags": 0,
            "hasliked": 0,
            "id": "4dsfDS",
            "likes": 6,
            "name": "Daily 2017-06-19",
            "published": 3,
            "tags": [
                "daily"
            ],
            "usePreview": 0,
            "username": "Koltes",
            "viewed": 443
        },
        "renderpass": [
            {
                "code": "float C,S;\n#define rot(a) mat2(C=cos(a),S=sin(a),-S,C)\n\nstruct M{float d;vec3 c;};\nM mmin(M a,M b){\n    M m;\n    if (a.d<b.d) m=a; else m=b;\n    return m;\n}\n\nM map(vec3 p) {\n    M m;\n    p.xy*=rot(iTime*.3);\n    p.yz*=rot(iTime*.5);\n    p.xy*=rot(iTime*.7);\n    vec3 id=floor((p+2.5)/5.);\n    p=mod(p+2.5,5.)-2.5;\n    p.xy*=rot(iTime*.3+id.x);\n    p.yz*=rot(iTime*.5+id.y);\n    p.xy*=rot(iTime*.7+id.z);\n    float a=atan(p.z,p.x)/6.283185*3.;\n    float l=(p.y*4.+a)*3.;\n    float s=mod(l,3.);\n    float h=fract(l);\n    float r=.2+.1*h*(1.-h);\n    float d=length(p.xz)-r;\n    d=max(d,length(p)-1.);\n    m.d=min(d,2.5);\n    m.c=vec3(.8,.1,.1)*step(s,1.)\n        +vec3(.8,.4,0.)*(step(1.,s)-step(2.,s))\n        +vec3(.9,.8,0.)*step(2.,s);\n    M mb;\n    vec3 db=abs(p-vec3(0.,-1.,0.))-vec3(.01,.5,.05);\n    mb.d=min(max(db.x,max(db.y,db.z)),0.0) + length(max(db,0.0));\n    mb.c=vec3(.6,.3,0.);\n    m=mmin(m,mb);\n    return m;\n}\n\nvec3 norm(vec3 p){\n    vec2 e=vec2(.001,0.);\n    return normalize(vec3(\n        map(p+e.xyy).d-map(p-e.xyy).d,\n        map(p+e.yxy).d-map(p-e.yxy).d,\n        map(p+e.yyx).d-map(p-e.yyx).d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv-=.5;\n    uv.x*=iResolution.x/iResolution.y;\n    vec3 ro=vec3(uv,-2.),rd=normalize(vec3(uv,1.)),mp=ro;\n    M m;\n    float f;for(f=0.;f<30.;++f){\n        m=map(mp);\n        if(abs(m.d)<.001)break;\n        mp+=rd*m.d;\n    }\n    vec3 n=norm(mp);\n    float mbg=min(1.,length(mp-ro)*.03);\n    //m.c*=f/30.;\n    m.c*=max(-1.*dot(rd,n),0.);\n    vec3 bg=vec3(.8,.1,.1);\n    vec3 c=mix(m.c,bg,mbg);\n    c=sqrt(c);\n\tfragColor = vec4(c,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}