{
    "Shader": {
        "info": {
            "date": "1684451579",
            "description": "trig stuff",
            "flags": 32,
            "hasliked": 0,
            "id": "dty3Rd",
            "likes": 0,
            "name": "liquid metal",
            "published": 3,
            "tags": [
                "2d",
                "metal",
                "liquid"
            ],
            "usePreview": 0,
            "username": "flylo",
            "viewed": 191
        },
        "renderpass": [
            {
                "code": "const int[18] ns = int[](-1, -1, 0, -1, 1, -1, -1, 0, 1, 0, 0, 0, -1, 1, 0, 1, 1, 1);\n\nvec4 texel(in ivec2 x) {\n    return texelFetch( iChannel0, x, 0 );\n}\n\nvec4 avg( in ivec2 px )\n{\n \n    vec4 sum = vec4(0.);\n        \n    for (int i = 0; i < 18; i += 2) {\n       vec4 n = texel(px+ivec2(ns[i%18],ns[(i%18)+1]));\n       sum += n;\n    }\n \n   return sum/9.;\n   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    ivec2 iv = ivec2(fragCoord);\n    fragColor = avg(iv);\n    fragColor = texel(iv);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float r2;\n\n    float dt  = .5+.5*sin(.5*iTime);\n    float dt2 = .5+.5*sin(1.5+.8*iTime);\n    float mdt = .2+.8*dt;\n    float mdt2 = .2+.8*dt2;\n    \n    float dt3 = .5+.5*sin(.1*iTime);\n    float mdt3 = .1+.9*dt3;\n    float dt4 = .5+.5*sin(.17*iTime);\n    float mdt4 = .1+.9*dt4;\n\n    float dt5  = .5+.5*sin(.6*iTime);\n    float mdt5 = .1+.9*dt5;\n    float dt6 = .5+.5*sin(1.5+.7*iTime);\n    float mdt6 = .1+.9*dt6;\n\n\n    uv = vec2(.1+sin(3.1*mdt2*uv));\n    r2 = length(uv)*length(uv);\n    for(int i = 0; i< 4; i++) {\n        //uv = vec2(sin(uv.x), sin(uv.y));\n\n        r2 = length(uv)*length(uv);\n        uv = vec2(1./r2*uv.y, 1./r2*uv.x);\n        uv = vec2(mdt5*sin(tan(.5*mdt3*uv.x)), mdt6*sin(tan(.5*mdt4*uv.y)));\n\n        //uv = vec2(uv.x*sin(r2)-uv.y*cos(r2), uv.x*cos(r2)+uv.y*sin(r2));\n        //uv = vec2(cos(uv.x-uv.y), sin(uv.x-uv.y));\n   \n    }\n    \n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(uv.xyx+vec3(0,2,4));\n\n    vec3 col = vec3(uv.y, uv.x, dt3);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}