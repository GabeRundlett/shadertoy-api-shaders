{
    "Shader": {
        "info": {
            "date": "1609535979",
            "description": "Devious EAS",
            "flags": 0,
            "hasliked": 0,
            "id": "WdKfDd",
            "likes": 5,
            "name": "Devious EAS",
            "published": 3,
            "tags": [
                "deviouseas"
            ],
            "usePreview": 0,
            "username": "public_int_i",
            "viewed": 251
        },
        "renderpass": [
            {
                "code": "/*Ethan Alexander Shulman 2020 - xaloez.com\n4k 60fps video https://www.youtube.com/watch?v=eFnHqsXZ3V4\n4k wallpaper xaloez.com/art/2020/Devious.jpg*/\n\n\n#define EPS 1e-4\n#define PI 3.14159265\n\nmat2 r2(float a) {\n\tfloat s = sin(a), c = cos(a);\n\treturn mat2(c,-s,s,c);\n}\n\nvec4 r4(float n) {\n\t#define R4P 1.1673039782614187\n    return fract(.5+vec4(1./R4P,1./R4P/R4P,1./R4P/R4P/R4P,1./R4P/R4P/R4P/R4P)*n);\n}\nvec4 hash(vec4 a) {\n    a = mod(abs(a),8273.97234);\n    #define R4S(sw) floor(fract(.352347+dot(a,vec4(.001,.1,10.,100.).sw*2.23454))*20000.)\n    return r4(R4S(xyzw)+R4S(yzwx)+R4S(wxyz)+R4S(zwxy));\n}\n\nfloat geo(vec3 p) {\n\tfloat d = 1.;\n\tvec3 fp = floor(p);\n\tfor (float x = -1.; x < 2.; x++) {\n\t\tfor (float y = -1.; y < 2.; y++) {\n\t\t\tfor (float z = -1.; z < 2.; z++) {\n\t\t\t\tfloat h = fract(.5+dot(abs(fp+vec3(x,y,z)),vec3(1.,128.,2048.))/1.6180339887498948482);\n\t\t\t\tif (h > .95) d = min(d,length(max(abs(p-(fp+vec3(x,y,z)+.5))-.5,0.)));\n\t\t\t}\n\t\t}\n\t}\n\treturn max(p.y,d);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n#define time iTime\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y;\n\n\n\tvec4 pxh = hash(uv.xyyx+time);\n\tvec3 rp = vec3(100.+sin(time*.16)*3.5,cos(time*.16)*4.-3.,time),\n\t\trd = normalize(vec3(uv.xy,1.));\n\tvec3 c = vec3(1);\n\n\trd.xz *= r2(time*.1);\n\n\tfor (int i = 0; i < 120; i++) {\n\t\tfloat dst = geo(rp);\n\t\tif (dst <= 0.) {\n\t\t\trp -= rd*EPS*2.;\n\t\t\tdst = geo(rp);\n\t\t\tvec3 nrm = vec3(geo(rp+vec3(EPS,0,0)),geo(rp+vec3(0,EPS,0)),geo(rp+vec3(0,0,EPS)))-dst;\n\t\t\tif (dot(nrm,nrm) == 0.) rp += rd;\n\t\t\telse rd = reflect(rd,normalize(nrm));\n\t\t\tc *= .8;\n\t\t}\n\t\trp += rd*(dst+EPS);\n\t}\n\t\n\tvec3 l = (vec3(.2,.4,.8)+max(0.,1.-length(rd-normalize(vec3(1,1,1)))*2.)*vec3(1.,.98,.92))*clamp(rp.y*.1+1.,0.,1.);\n\tfragColor = vec4(c*l,1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}