{
    "Shader": {
        "info": {
            "date": "1609633003",
            "description": "Approximations of the sine, cosine, and tangent trig functions using Bhaskara I's formula.",
            "flags": 0,
            "hasliked": 0,
            "id": "Wtdczf",
            "likes": 5,
            "name": "Trig Approximations",
            "published": 3,
            "tags": [
                "cheap",
                "approximation",
                "trig",
                "bhaskara"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 162
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926535\n#define HALF_PI 1.5707963268\n#define TWO_PI 6.2831853072\n#define FIVE_PI_SQUARED 49.348022005\n\nfloat cheapSin(in float x) {\n    float nx = mod(x, PI);\n    float PI_MINUS_X = PI - nx;\n    float y = (16.0 * nx * PI_MINUS_X) / (FIVE_PI_SQUARED - 4.0 * nx * PI_MINUS_X);\n    return mod(x, TWO_PI) < PI ? y : -y;\n}\n\nfloat cheapCos(in float x) {\n    return cheapSin(x + HALF_PI);\n}\n\nfloat cheapTan(in float x) {\n    return cheapSin(x) / cheapCos(x);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * 4.0;\n    float unit = 16.0 / iResolution.y;\n\n    uv.x += iTime;\n\n    fragColor = vec4(smoothstep(unit, 0.0, abs(uv.y - cheapSin(uv.x))), 0.0, 0.0, 1.0);\n    fragColor.b += smoothstep(unit, 0.0, abs(uv.y - cheapCos(uv.x)));\n    fragColor.g += smoothstep(unit, 0.0, abs(uv.y - cheapTan(uv.x)));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}