{
    "Shader": {
        "info": {
            "date": "1654936679",
            "description": "variant of https://www.shadertoy.com/view/NdKcWD\nwithout using the letter 'e'\n- but for the mainImage() API ( no choice )\n- and the uniform iResolution ( or we couln't be resolution independant )\n",
            "flags": 0,
            "hasliked": 0,
            "id": "fdGcDm",
            "likes": 15,
            "name": "concentric circles without 'e'",
            "published": 3,
            "tags": [
                "2d",
                "illusion",
                "fake3d",
                "2tweets",
                "perception",
                "short",
                "golf",
                "reproduction",
                "lipogrammatic"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 710
        },
        "renderpass": [
            {
                "code": "// Variant of https://www.shadertoy.com/view/NdKcWD\n// without using the letter 'e'\n// - but for the mainImage() API ( no choice )\n// - and the uniform iResolution ( or we couln't be resolution independant )\n// - Maybe we should allow iTime too. e.g. put these 3 as #defined in Common.\n// - really forbid #define ?\n//   ( would permit #def V(x,y) mat2(x,y,0,0)[0]  to emulate vec2\n//                  #def L(v)   sqrt(dot(v,v))    for length\n//   ) \n//   somehow we need either return or define or code will really be long.\n\nfloat L(mat2 v) { return sqrt(dot(v[0],v[0])); }\n\nvoid mainImage( out vec4 O, vec2 u ) { mat2 R = mat2(iResolution,1); // 'e' only in this line\n\n    O += 1.-O;\n    for (float i=0.; ++i < 6.; )\n        O = min(O, abs( L(mat2(  ( u+u - R[0] ) / R[0][1]\n                               + (.5-i/20.)*cos(mat2(4,37,0,0)[0])\n                              ,0,0)) -i/20.\n                      ) *R[0][1]/2. ),\n        O = min(O, abs( L(mat2(  ( u+u - R[0] ) / R[0][1]\n                               + (.25+i/20.)*cos(mat2(4,37,0,0)[0])\n                              ,0,0)) -.25-i/20.\n                      ) *R[0][1]/2. );\n  \n    for (float i=0.; ++i < 11.; )\n        O = min(O, abs( L(mat2(  ( u+u - R[0] ) / R[0][1]\n                               + (.5-i/20.)*cos(mat2(4,37,0,0)[0])\n                              ,0,0)) -.5-i/20.\n                      ) *R[0][1]/2. );\n   \n    O = sqrt(O);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}