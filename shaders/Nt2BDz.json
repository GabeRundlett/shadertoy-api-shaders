{
    "Shader": {
        "info": {
            "date": "1652055339",
            "description": "had this one in mind for a long time\nbased on: https://i.pinimg.com/originals/0c/36/62/0c3662f99edb3113d88e9a5302656a77.jpg",
            "flags": 0,
            "hasliked": 0,
            "id": "Nt2BDz",
            "likes": 6,
            "name": "prayer plant leaf",
            "published": 3,
            "tags": [
                "leaf",
                "photorecreation"
            ],
            "usePreview": 0,
            "username": "ufffd",
            "viewed": 274
        },
        "renderpass": [
            {
                "code": "#define DEBUG_LEAFMASK false\n#define DEBUG_MAINVEIN false\n#define DEBUG_VEINS false\n#define DEBUG_DARKLEAF false\n#define DEBUG_LIGHTLEAF false\n#define DEBUG_PALETTE false\n\n#define SS(a,b,c) smoothstep(a-b,a+b,c)\n#define rot(a) mat2(cos(a+vec4(0,11,33,0)))\n\n// All components are in the range [0â€¦1], including hue.\nvec3 hsv2rgb(vec3 c){\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec3 rgb2hsv(vec3 c){\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\n\nvec2 random2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\n// Gradient Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/XdXGW8\nfloat noise(vec2 st) {\n    st += iTime*0.5;\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvoid clamp01(inout float a){\n    a = clamp(a,0.,1.);\n}\n\nvec2 toPolar(vec2 decart) {\n    float alpha = atan(decart.x, decart.y);\n    float R = length(decart);\n    return vec2(alpha, R);\n}\n\nfloat cubicPulse( float c, float w, float x )\n{\n    x = abs(x - c);\n    if( x>w ) return 0.0;\n    x /= w;\n    return 1.0 - x*x*(3.0-2.0*x);\n}\n\nvec3 blend(vec3 a, vec3 b, float x) {\n    vec3 colmix = mix(a,b,x); // basic mix\n    a = rgb2hsv(a);\n    b = rgb2hsv(b);\n    vec3 hsvmix = mix(a,b,x);\n    hsvmix.r = rgb2hsv(colmix).r;\n    vec3 col = hsv2rgb(hsvmix);\n    col = colmix;\n    return col;\n}\n\nconst vec3 leaf1 = vec3(21, 41, 15)/255.; // #12260b rgb(18, 38, 11) // darkleaf\nconst vec3 leaf2 = vec3(37, 75, 33)/255.; // #456d4a rgb(69, 109, 74) // leaf\nconst vec3 leaf3 = vec3(91, 169, 45)/255.; // #7dc44d rgb(125, 196, 77) // lightlead\nconst vec3 vein1 = vec3(210, 95, 120)/255.; // #ea7c97 rgb(234, 124, 151) // veins\n\nvec4 drawLeaf(in vec2 uv, in float seed, in bool darkleafmode, in float lightleafsize, in float age) {\n    \n    float veinfreq = age;\n\n    vec3 col = vec3(0.0);\n    vec2 uvc = (uv*2. - 1.)*iResolution.xy/iResolution.y;\n    uvc += noise(uvc*2.+seed)*0.07;\n    uvc += noise(uvc*20.+seed)*0.007;\n    \n    uv -= .5;\n    uv *= rot(3.*uv.y*uv.x*length(uvc-vec2(0.,0.2)));\n    uv.y -= uv.x*uv.x;\n    uv += .5;\n    \n    vec2 px = 1./iResolution.xy;\n    \n    px = vec2(0.00125,0.002);\n    \n    /*\n    uv.x -= 0.5;\n    uv.y -= 0.2;\n    uv = toPolar(uv);\n    uv.x += 0.5;\n    */\n    \n    float leafshape = length( uvc * vec2(1.+uv.y*0.2,0.9));\n    float leafmask = 1.-SS(0.85,px.y*2.,leafshape);\n    float leafmasksoft = 1.-SS(0.75,px.y*40.,leafshape);\n    \n    float mainvein = cubicPulse(0.5,px.x*6.,uv.x)*2.; // horizontal center\n    mainvein *= uv.y*2.;\n    mainvein -= 3.*SS(0.8,0.2,uv.y);\n    clamp01(mainvein);\n    mainvein = SS(0.5,0.1,mainvein);\n    \n    vec2 vuv = uv; // veins uv\n    vuv.y -= cubicPulse(0.5,0.01,vuv.x)*0.01;\n    vuv.y += 2.*(1.-vuv.y)*abs(vuv.x-0.5);\n    vuv.y += abs(vuv.x-0.5);\n    vuv.y += noise(vuv.yy*5.+seed)*0.06; // slightly random vertical spacing\n\n    if (vuv.x>0.5) vuv.y += 1./veinfreq;\n    if (fract(seed*99999.99)<0.6 && vuv.x>0.5) vuv.y -= 4./veinfreq;\n\n    // veins\n    float veins = 0.; // horizontal center\n    veins += cubicPulse(0.,px.y*140.,sin(vuv.y*veinfreq*0.5));\n    veins *= leafmasksoft;\n    clamp01(veins);\n    // veins2\n    float veins2 = 0.; // horizontal center\n    veins2 += cubicPulse(0.,px.y*200.,sin(vuv.y*veinfreq));\n    veins2 *= cubicPulse(0.5,px.x*60.,uv.x);\n    clamp01(veins2);\n    \n    veins2 *= 1.-uv.y*uv.y;\n    veins2 = SS(0.5,0.3,veins2);\n    veins2 *= leafmasksoft;\n    \n    // lightveins\n    float lightveins = 0.; // horizontal center\n    lightveins += cubicPulse(0.,px.y*180.,sin(vuv.y*veinfreq*2.));\n    // lightleaf += lightveins;\n    clamp01(veins);\n    lightveins *= leafmasksoft;\n    \n    veins = max(veins,veins2);\n    veins = max(veins,mainvein);\n    \n    // light leaf\n    vec2 lluv = mix(vuv,uv,0.5);\n    lluv.x *= 1.+sin(vuv.y*veinfreq*0.5)*0.02*(1.-abs(uv.y-0.5)*2.);\n    float lightleaf = cubicPulse(0.5,px.x*40.*lightleafsize*5.,lluv.x)*3.; // horizontal center\n    lightleaf *= lluv.y; // trim bot\n    lightleaf *= 1.2-lluv.y; // trim top\n    lightleaf *= 4.; // sharpen\n    lightleaf *= 0.9+noise(lluv*5.+seed)*2.; // wiggle\n    lightleaf *= 0.9+noise(lluv*200.+seed)*.5; // high freq wiggle\n    lightleaf *= 1.7-sin(lluv.y*60.);// swoops\n    lightleaf += cubicPulse(0.5,.025,lluv.x)*3.; // make sure middle exists at least a bit\n    clamp01(lightleaf);\n    lightleaf = SS(0.85,0.2,lightleaf);\n    // lightleaf -= 1.-SS(0.2,0.1,uv.y);\n    \n    float darkleaf = cubicPulse(0.5,px.x*120.,uv.x)*3.; // horizontal center\n    darkleaf *= uv.y; // trim bot\n    darkleaf *= 1.2-uv.y; // trim top\n    darkleaf *= 2.5; // sharpen\n    darkleaf *= 0.9+noise(uv*7.+seed); // wiggle\n    darkleaf *= 0.9+noise(uv*12.+seed)*.5; // high freq wiggle\n    clamp01(darkleaf);\n    darkleaf = SS(0.4,0.3-0.31*noise(uv*3.+seed),darkleaf);\n    \n    col = leaf2; // base col\n    if (darkleafmode) col = leaf1;\n    col = blend(col,leaf1,darkleaf*leafmasksoft*leafmasksoft); // darkleaf\n    col = blend(col,leaf3,lightleaf*(1.-SS(0.77,0.15,length(uvc-vec2(0.,0.04))))); // lightleaf\n    col *= 1.+lightveins*leaf2; // lightveins\n    col = blend(col,vein1,veins); // veins\n    \n    // hsv adjustments\n    float colnoise = noise(uvc*1.+seed) * noise(uvc*3.+seed);\n    vec3 hsv = rgb2hsv(col);\n    // hsv.r += sin(iTime*col.r+colnoise*10.)*0.05; // shift colors over time to show variations\n    hsv.g -= 0.3*lightveins*lightleaf*(1.-veins); // desaturate light veins\n    hsv.b -= 0.1*lightveins*lightleaf*(1.-veins); // darken light veins\n    hsv.b -= 0.03*lightveins*darkleaf*(1.-veins); // darken light veins\n    hsv.g += sin(iTime+hsv.r+colnoise)*0.1 + 0.66 - uv.y; // vertical sat shift\n    hsv.b *= colnoise*0.2+0.9;\n    col = hsv2rgb(hsv);\n    \n    // mask\n    col *= leafmask;\n    \n    // DA BUGS\n    if (DEBUG_LEAFMASK) col=vec3(leafmask); \n    \n    if (DEBUG_MAINVEIN) col=vec3(mainvein); \n    if (DEBUG_VEINS) col=vec3(veins); \n    if (DEBUG_DARKLEAF) col=vec3(darkleaf); \n    if (DEBUG_LIGHTLEAF) col=vec3(lightleaf); \n    if (DEBUG_PALETTE) {\n        col=vein1;\n        if (uv.x<0.75) col=leaf3;\n        if (uv.x<0.5) col=leaf2;\n        if (uv.x<0.25) col=leaf1;\n    }\n    float alpha = SS(0.5,0.1,leafmask);\n    return vec4(col,alpha);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0.0);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy*1.1;\n    vec2 uvc = ( 2.*fragCoord - iResolution.xy ) / iResolution.y;\n    \n    // leaf4 botleft\n    float leaf4age = 40.+sin(iTime);\n    vec2 leaf4pos = uv;\n    leaf4pos -= 0.5;\n    leaf4pos *= 2.;\n    leaf4pos *= iResolution.xy/iResolution.y;\n    leaf4pos *= rot(-.5);\n    leaf4pos /= iResolution.xy/iResolution.y;\n    leaf4pos += 0.5;\n    leaf4pos.x += 0.2;\n    leaf4pos.y += 0.8;\n    leaf4pos.x += sin(leaf4pos.y*2.+.1)*.1;\n    leaf4pos.x *= 1.2;\n    vec4 leaf4 = drawLeaf(leaf4pos, 3., false, 0.25, leaf4age);\n    col = leaf4.rgb;\n    // leaf3 topleft\n    vec2 leaf3pos = uv*1.3;\n    leaf3pos -= 0.5;\n    leaf3pos *= iResolution.xy/iResolution.y;\n    leaf3pos *= rot(-2.);\n    leaf3pos /= iResolution.xy/iResolution.y;\n    leaf3pos += 0.5;\n    leaf3pos.x += 0.01;\n    leaf3pos.y += 0.6;\n    leaf3pos.x += sin(leaf3pos.y*2.+.1)*.1;\n    leaf3pos.x *= 1.2;\n    vec4 leaf3 = drawLeaf(leaf3pos, -20., true, 0.15, 40.);\n    col += leaf3.rgb;\n    // leaf2 right\n    vec2 leaf2pos = uv;\n    leaf2pos -= 0.5;\n    leaf2pos *= iResolution.xy/iResolution.y;\n    leaf2pos *= rot(0.6);\n    leaf2pos /= iResolution.xy/iResolution.y;\n    leaf2pos += 0.5;\n    leaf2pos.x -= 0.25;\n    leaf2pos.y += 0.15;\n    leaf2pos.x += sin(leaf2pos.y*2.+.1)*-.1;\n    leaf2pos.x *= 1.2;\n    vec4 leaf2 = drawLeaf(leaf2pos, 80., true, 0.0, 50.);\n    col += leaf2.rgb;\n    // leaf1 front\n    vec4 leaf1 = drawLeaf(uv, 20., false, 0.2, 53.);\n    col = mix(col,leaf1.rgb,leaf1.a);\n    \n    fragColor = vec4(col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}