{
    "Shader": {
        "info": {
            "date": "1613819597",
            "description": "WIP:  don't let border clip shape !  \nreproducing [url]https://joshdata.me/iceberger.html[/url] Using smart MIPmaps.\nDraw iceberg (TAB to erase).    SPACE to start/pause the physics.\nRed dot = center of mass, \nGreen dot = immerged center of mass.",
            "flags": 48,
            "hasliked": 0,
            "id": "tlKfzz",
            "likes": 5,
            "name": "iceberger",
            "published": 3,
            "tags": [
                "simulation",
                "physics",
                "reproduction",
                "gpmipmap",
                "iceberger"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 352
        },
        "renderpass": [
            {
                "code": "// reproducing https://joshdata.me/iceberger.html\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = T(U).x  - T(U).y *vec4(.3,.3,-1,0); \n    O = mix(O, vec4(1,0,0,0), D( G.xy, 10.) );\n    O = mix(O, vec4(0,1,0,0), D( G.zw, 10.) );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R              iResolution.xy\n#define dt             iTimeDelta\n//#define T(U)         texelFetch( iChannel0, ivec2(U), 0 )\n#define T(U)           texture( iChannel0, (U)/R )\n#define M            ( textureLod(iChannel0,vec2(.5) , 20.) +1e-9 )  // total mass\n#define G              textureLod(iChannel1,vec2(.5) , 20.)          // center of mass\n#define D(C,r)         smoothstep( 1.5, 0., length(C-U) - r )        // antialiased disk\n#define keyToggle(a) ( texelFetch(iChannel3,ivec2(a,2),0).x > 0.)\n#define rot(a)         mat2( cos(a), -sin(a), sin(a), cos(a) )",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "// O.x = iceberg, O.y = ocean, O.z = immerged iceberg.  \n// Ultimate MIPmap = mass (i.e., volume )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec3 F = keyToggle(32.)                              // --- physics\n               ? G.zww - G.xyy*vec3(1,1,.95) : vec3(0);  // moment+force applying on the iceberg\n            // ? vec2(G.z-G.x, .9 - M.z/M.x).xyy : vec3(0); // WIP: \"better\" physics don't work\n     mat2 r = rot( F.x*F.y*dt*.01 );\n     O = T( (U-G.xy) * r + G.xy  - vec2(0,F.z)*dt );     // previous step ( possibly rot+translate )\n  // O.x = smoothstep(0.,1.,O.x);                        // recontrast\n\nif (iMouse.z>0.)                                         // --- paint\n       O.x = keyToggle(9) \n               ? max( 0., O.x - D( iMouse.xy, .1*R.y ) ) // erase iceberg\n               : max(O.x, D( iMouse.xy, .1*R.y ) );      // paint iceberg\n\n    O.y = step( U.y/R.y , .7 );                          // ocean\n    U = R-1.-abs(2.*U-R); if (U.x*U.y<.5) O.x = 0.;      // clamp paint\n    O.z = O.x*O.y;                                       // immerged part of the iceberg    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*  // --- dynamics simulation\n\n    mat2 r = rot( T(1.5).w*dt );\n    O = T( (U-G.xy) * r + G.xy  - vec2(0,T(.5).w*dt) );    // previous step ( possibly rot+translate )\n\n   if ( U.x<2. && U.y<2. ) {\n        vec3 F = keyToggle(32.)                         // --- physics\n               ? G.zww - G.xyy*vec3(1,1,.95) : vec3(0); // torque+force applying on the iceberg\n        O.w = .99*T(U).w + ( U.x<1. ? F.z*dt : F.x*F.y*dt*dt );  // 0,0: Fy  1,1: torque\n    } \n*/\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// ultimate MIPmap of O.xy = center of mass\n// ultimate MIPmap of O.zw = immerged center of mass\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec4 D = T(U) / M;  // density field\n    O.xy = D.x * U;\n    O.zw = D.z * U;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}