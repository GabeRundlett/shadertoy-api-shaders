{
    "Shader": {
        "info": {
            "date": "1702089132",
            "description": "basic grid shader primitive",
            "flags": 0,
            "hasliked": 0,
            "id": "mlVfWW",
            "likes": 1,
            "name": "grid new",
            "published": 3,
            "tags": [
                "grid",
                "gpt"
            ],
            "usePreview": 0,
            "username": "jakedowns",
            "viewed": 145
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Background color: dark purple\n    vec3 backgroundColor = vec3(0.1, 0.0, 0.2); // Dark purple\n\n    // Line color: slightly lighter purple\n    vec3 lineColor = vec3(0.2, 0.0, 0.4); // Slightly lighter purple\n\n    // Calculate grid lines\n    float lineThickness = 0.1; // Adjust line thickness here\n    float linesFrequency = 100.0; // Increase for more lines\n    float lineX = step(lineThickness, fract(uv.x * linesFrequency));\n    float lineY = step(lineThickness, fract(uv.y * linesFrequency));\n    float grid = min(lineX, lineY);\n\n    // Mix the colors based on grid value\n    vec3 col = mix(lineColor, backgroundColor, grid);\n\n    // Output to screen with half transparency\n    fragColor = vec4(col, 0.5); // Half transparent\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}