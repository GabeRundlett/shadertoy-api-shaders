{
    "Shader": {
        "info": {
            "date": "1613168834",
            "description": "aaa",
            "flags": 32,
            "hasliked": 0,
            "id": "3ttfRX",
            "likes": 29,
            "name": "OMZG shader royale",
            "published": 3,
            "tags": [
                "feedback",
                "competition",
                "royale",
                "omzg"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 503
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage( out vec4 out_color, in vec2 fragCoord )\n{\n\tout_color = texture(iChannel0,fragCoord/iResolution.xy);\n  \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\n#define T(u) texture(iChannel0, (u)/R)\n\nmat3 getOrthBas( vec3 dir){\n  vec3 r = normalize(cross(vec3(0,1,0), dir));\n  vec3 u = normalize(cross( dir, r));\n  return mat3(r,u,dir);\n  }\n\nfloat cyclicNoise(vec3 p){\n  float n = 0.;\n  p *= getOrthBas(normalize(vec3(-4,2.,-2. + sin(iTime)*1.4)));\n  float lac = 1.5;\n  float amp = 1.;\n  float gain = 0.5;\n  \n  mat3 r = getOrthBas(normalize(vec3(-4,2.,-2)));\n  \n\n  for(int i = 0; i < 8; i++){\n    p += cos(p + 2. + vec3(0,0,iTime))*0.5;\n    n += dot(sin(p),cos(p.zxy + vec3(0,0,iTime)))*amp;\n    \n    p *= r*lac;\n    amp *= gain;\n    }\n    return n;\n  }\n\n\n\nvoid mainImage( out vec4 out_color, in vec2 U )\n{\n  #define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n  \n  U -= 0.5*R;\n  //U *= rot(iTime*0.01);\n  U *= 0.99 + sin(iTime)*0.00 - dot(U/R,U/R)*0.05*sin(iTime);\n  U += 0.5*R;\n  out_color = T(U);\n  #define getGrad(axis) vec2(e[axis]-w[axis],n[axis]-s[axis])\n  float offs = 20. + sin(iTime + length((U - 0.5*R)/R.y)*1.5)*30.;\n  offs *= 0.5;\n  vec4 n = T(U + vec2(0,1)*offs);\n  vec4 s = T(U + vec2(0,-1)*offs);\n  vec4 e = T(U + vec2(1,0)*offs);\n  vec4 w = T(U + vec2(-1,0)*offs);\n  \n  vec2 grad = getGrad(0 + int(mod(float(iFrame)/4.,2.)));\n  \n  float noisb = cyclicNoise(vec3(U/R*5.,1. + iTime*0.2 + sin(iTime)*1.));\n  \n  grad *= rot(noisb*0.2*sin(iTime) - iTime*0.);\n  vec2 uu = U;\n  uu += grad*22. + noisb*1.;\n  out_color = T(uu);\n  n = T(uu + vec2(0,1));\n  s = T(uu + vec2(0,-1));\n  e = T(uu + vec2(1,0));\n  w = T(uu + vec2(-1,0));\n  \n  #define pal(a,b,c,d,e) ((a) + (b)*sin((c)*(d) + (e)))\n  \n  float nois = cyclicNoise(vec3(uu/R*80.,1. + iTime*0.2 + sin(iTime)*1.));\n  \n  vec3 nc = nois*pal(0.5,vec3(1.,0.2,1.),1.,vec3(3.,0. + nois*20.,4. + sin(iTime) + 2.),nois*10. + iTime);\n  out_color = mix(out_color,vec4(max(nc,0.),1),0.01);\n  //out_color += cyclicNoise(vec3(uv*20.,1));\n  if(iTime < 0.4){\n    out_color = vec4(0);\n  }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}