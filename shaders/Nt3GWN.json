{
    "Shader": {
        "info": {
            "date": "1636111114",
            "description": "Equalizer",
            "flags": 0,
            "hasliked": 0,
            "id": "Nt3GWN",
            "likes": 1,
            "name": "Circular Equalizer - Blue & Red",
            "published": 3,
            "tags": [
                "music"
            ],
            "usePreview": 0,
            "username": "Meji",
            "viewed": 334
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265\n\nfloat rewrap(float r, float rep) {\n    \n    if (r < PI) {\n        r = -r;\n    }\n    \n    r = mod(r*rep, PI);\n                  \n    return r/(PI);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 px = gl_FragCoord.xy / iResolution.xy;\n    \n    const int size = 24;\n                \n    float ar = iResolution.x / iResolution.y;\n    \n    px.y /= ar;\n    \n    vec2 pos = px-vec2(0.5, 0.5/ar);\n    \n    float len = length(pos);\n    \n\tvec3 color = vec3(0,0,0);\n    \n    float rep = 1.;\n    \n    float delta = rewrap(atan(pos.x, pos.y), rep);\n        \n    float div = 500./float(size);\n    \n    float modifier = sin(iTime*0.15);\n    \n    float index = float(int(mod(iTime*0.+delta+modifier, 3.0) * 100. / div));\n    \n\tfloat f = texelFetch(iChannel0, ivec2(index/float(size)*256.,0.1), 0).x;\n    \n    float base = texelFetch(iChannel0, ivec2(1.*256.,0.1), 0).x;\n    \n    float cpi = smoothstep((0.1 + base*0.05), 0.15 + f * 0.01, len);\n       \n\tif (len < 0.13 + f * 0.13 && len > (0.1 + base*0.001) && mod(delta + modifier, 1./float(size)) < 0.038 && (delta) > 0.0)\n\t\tcolor = vec3(0.95-delta, delta*0.1, delta);\n    \n    color *= cpi;\n    \n    if (len < 0.1 + base * 0.06 && len > 0.09 + base * 0.03)\n      color = vec3(1,1,1);\n    \n    float eq = texelFetch(iChannel0, ivec2(px.x*128.,1), 0).x;\n        \n    if (abs(px.y*ar-0.54+eq*0.1) < 0.01 && \n        px.x > 0.5-(0.1+base * 0.05-1.08) &&\n        px.x < 0.5+(0.1+base * 0.05-0.02)) {\n        color = vec3(1);\n    }\n    \n\tfragColor = vec4(color, 0.1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 20,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}