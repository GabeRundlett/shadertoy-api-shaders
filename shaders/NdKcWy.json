{
    "Shader": {
        "info": {
            "date": "1655516791",
            "description": "Trying out hexagon tiling",
            "flags": 0,
            "hasliked": 0,
            "id": "NdKcWy",
            "likes": 6,
            "name": "Honeycomb pattern Grid",
            "published": 3,
            "tags": [
                "2d",
                "hexagon"
            ],
            "usePreview": 0,
            "username": "El_Sargo",
            "viewed": 307
        },
        "renderpass": [
            {
                "code": "vec2 localHex(vec2 p){\n    const float z = sqrt(1.-0.25);\n    const vec2 g = vec2(1.5,z);\n    vec2 tile = mod(p+g,2.*g)-g;        \n    if (abs(tile.y) > z/0.5*(1.-abs(tile.x))){tile = mod(tile,2.*g)-g;}\n    return tile;\n}\n\nfloat sdHexagon( in vec2 p, in float r )\n{\n    const vec3 k = vec3(-0.866025404,0.5,0.577350269);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p)*sign(p.y);\n}\n\nmat2 rot(float a){\n    float s = sin(a), c = cos(a);\n    return mat2(c,-s,s,c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 prev = texture(iChannel0, uv).xyz;\n    vec2 nuv = (uv-0.5)*vec2(1,iResolution.y/iResolution.x)*20.;\n    vec2 w =  nuv+iTime*vec2(0.2,0.4);\n    vec2 p = localHex(w);\n    float l = length(p);\n    float n = smoothstep(.9,.7,l)*(-1./(smoothstep(.6,0.9,l)+0.01));\n    vec2 id = round(4.*(w-p));\n    vec2 m = iMouse.xy/iResolution.xy;\n    vec2 r = p*rot(3.*iTime*sin(id.y)+id.x+m.x*3.+m.y*5.);\n    float hex = smoothstep(0.2,0.,-sdHexagon(r, 0.45)+0.1)*100.;\n    n = l > 0.5 ? n: hex;\n    vec3 nor = -normalize(vec3(n*p.x,-1.,n*p.y));\n    const vec3 sun = normalize(vec3(0,1,0));\n    vec3 scl = vec3(0.957,0.827,0.541);\n    vec3 amb = vec3(1.000,1.000,1.000);\n    vec3 col;\n    vec3 bcl = vec3(0.855,0.510,0.027);\n    vec3 hvc = normalize(sun-(normalize(vec3(nuv.x*-2.,-0.7,-nuv.y*2.))));\n    \n    col += bcl*max(0.,dot(nor,sun));\n    col += pow(max(0.,dot(nor,hvc)),20.);\n    col += amb*bcl*.1;\n    vec2 sp = l > .5 ? p : r;\n    col += .65*texture(iChannel0,sp).xyz*smoothstep(.3,1.,nor.y);\n    \n    col = smoothstep(0.,1.2,col);\n    col = pow(col, vec3(.5,1.7,1.6));\n    col *= smoothstep(.53,.45,abs(uv.y-0.5))*smoothstep(.53,0.45,abs(uv.x-0.5));\n    // Output to screen\n    fragColor = vec4(sqrt(col),1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 45,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}