{
    "Shader": {
        "info": {
            "date": "1571587407",
            "description": "Hang it on your tree",
            "flags": 0,
            "hasliked": 0,
            "id": "wdcSz4",
            "likes": 3,
            "name": "Shadertober 17 - Ornament",
            "published": 3,
            "tags": [
                "ornament",
                "inktober",
                "shadertober",
                "backwardscaptain"
            ],
            "usePreview": 0,
            "username": "BackwardsCap",
            "viewed": 318
        },
        "renderpass": [
            {
                "code": "bool inSphere(vec3 p)\n{\n    float s = sphere(p,4.8);\n    return sign(s)<0.;\n}\n\nvec2 map(vec3 p)\n{\n    p.xy*=rot(cos(iTime)/15.);\n    p.x+=cos(iTime)*2.;\n    float ca = capsule(p-vec3(0,4.5,0.4),30.,.03);\n    float r = ca;\n    float m = 0.0;\n    if(inSphere(p)){\n\n        float rf = 0.1;\n        p.x+=1.55;\n        p.xy=abs(cos(p.xy));\n        p.xz=abs(p.xz-.4);\n        p.xz*=rot(-PI/4.);\n        p.xy*=rot(2.9+20.*rf/2.);\n        float snf=box(p,vec3(.1,3.,.1));\n        r=min(r,snf);\n    \tif(r==snf)m=1.;\n    }\n    return vec2(r,m);\n}\n\nvec2 ray(vec3 ro, vec3 rd)\n{\n    float t = 0., m=0.;\n    for(int i=0;i<128;i++)\n    {\n        vec3 p = ro+rd*t;\n        vec2 s = map(p);\n        m=s.y;\n        if(s.x<0.0001)break;\n        t+=s.x/2.;\n        if(t>MAX_DIST){t=-1.;break;}\n    }\n    return vec2(t,m);\n}\n\nvec3 normal(vec3 p)\n{\n    vec2 e = vec2(0.001,0);\n    return normalize(vec3(\n        map(p+e.xyy).x-map(p-e.xyy).x,\n        map(p+e.yxy).x-map(p-e.yxy).x,\n        map(p+e.yyx).x-map(p-e.yyx).x\n        ));\n}\n\nvec3 color(vec3 ro, vec3 rd, vec2 r)\n{\n    vec3 col=vec3(0);\n    vec3 mate= vec3(.5);\n    vec3 p = ro+rd*r.x;\n    if(r.y<1.)mate=vec3(1.);\n    vec3 n = normal(p);\n    vec3 sun = normalize(vec3(.2,1.,-.6));\n    float dif = clamp(dot(p+n*0.0001,sun),0.,1.);\n    float sky = clamp(dot(p+n*0.0001,vec3(0,1,0)),0.,1.);\n    float bou = clamp(dot(p+n*0.0001,vec3(0,-1,0)),0.,1.);\n    col =mate* vec3(0.2,0.4,0.5)*dif;\n    col+=mate*vec3(0.3,0.2,0.4)*sky;\n    col+=mate*vec3(0.3,0.2,0.4)*bou*.5;\n    return col;\n}\n\nvoid mainImage( out vec4 c, in vec2 f )\n{\n    vec2 uv = (2.*f-iResolution.xy)/iResolution.y;\n    \n    float t = PI/2.;\n    float d = -5.;\n    vec3 ro = vec3(cos(t)*d,cos(iTime/10.)*.5,sin(t)*d);\n    vec3 ta = vec3(0);\n    vec3 cf = normalize(ta-ro);\n    vec3 cu = normalize(cross(cf,vec3(0,1,0)));\n    vec3 cr = normalize(cross(cu,cf));\n    \n\tfloat ct = clamp(cos(-1.+iTime/10.)*15.,0.,2.5);\n    float pov = (1.+cos(ct))/2.*1.+.5;\n    \n    vec3 rd = normalize(uv.x*cu+uv.y*cr+pov*cf);\n    \n    vec2 r = ray(ro,rd);\n    \n    vec3 col = texture(iChannel0,rd).rgb;\n    \n    if(r.x>0.)\n    {\n\t\tcol=color(ro,rd,r);\n        if(r.y==1.)\n        {\n            vec3 p = ro+rd*r.x;\n            vec3 n = normal(p);\n            ro=p+n*0.0001;\n            rd = reflect(rd,n);\n            col+=texture(iChannel0,rd).rgb;\n        }\n\n    }\n    c.rgb=col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 24,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define MAX_DIST 30.0\n#define PI 3.1415927\n\nmat2 rot(float x)\n{\n    float s = sin(x);\n    float c = cos(x);\n    return mat2(c,-s,s,c);\n}\n\nfloat box(vec3 p, vec3 d)\n{\n  vec3 q = abs(p) - d;\n  return min(max(q.x,max(q.y,q.z)),0.0)+length(max(q,0.0));\n}\n\nfloat sphere(vec3 p, float d)\n{\n    return length(p)-d;\n}\n\nfloat capsule(vec3 p, float h, float r)\n{\n    p.y -= clamp( p.y, 0.0, h );\n    return length( p ) - r;\n}\n\nfloat h21(vec2 p)\n{\n    return abs(fract(sin(dot(p,vec2(12.84,13.1523)))*21.129));\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}