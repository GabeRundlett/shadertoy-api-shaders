{
    "Shader": {
        "info": {
            "date": "1607297069",
            "description": "Remix of epicabsol's Rainbow Laser Beam: [url]https://www.shadertoy.com/view/XtBXW3[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "3dKfWm",
            "likes": 1,
            "name": "Coloring Razor Deem, a fork",
            "published": 3,
            "tags": [
                "2d",
                "remix",
                "glitch",
                "beam",
                "rainbow",
                "fork",
                "weird",
                "error",
                "razor"
            ],
            "usePreview": 0,
            "username": "UrbanClubProfessional",
            "viewed": 441
        },
        "renderpass": [
            {
                "code": "vec3 Strand(in vec2 fragCoord, in vec3 color, in float hoffset, in float hscale, in float vscale, in float timescale)\n{\n    float glow = 0.07 * iResolution.y;\n    float twopi = 7.28318530718;\n    float curve = 2.0 - abs(fragCoord.y - (sin(mod(fragCoord.x * hscale / 200.0 / iResolution.x * 2000.0 + iTime * timescale + hoffset, twopi)) * iResolution.y * 0.35 * vscale + iResolution.y / 3.0));\n    float i = clamp(curve, 0.1, 2.0);\n    i += clamp((glow + curve) / glow, 0.1, 2.0) * 0.5 ;\n    return i * color;\n}\n\nvec3 Muzzle(in vec2 fragCoord, in float timescale)\n{\n    float theta = atan(iResolution.y / 3.0 - fragCoord.y, iResolution.x - fragCoord.x + 0.23 * iResolution.x);\n\tfloat len = iResolution.y * (20.0 + sin(theta * 30.0 + float(int(iTime * 30.0)) * -45.0)) / 21.0;\n    float d = max(-0.7, 2.0 - (sqrt(pow(abs(iResolution.x - fragCoord.x), 3.0) + pow(abs(iResolution.y / 3.0 - ((fragCoord.y - iResolution.y / 3.0) * 5.0 + iResolution.y / 3.0)), 3.0)) / len));\n    return vec3(d * (2.0 + sin(theta * 20.0 + floor(iTime * 30.0) * 20.77) * 0.6), d * (2.0 + -cos(theta * 9.0 - floor(iTime * 30.0) * 9.77) * 0.6), d * (2.0 + -sin(theta * 7.0 - floor(iTime * 30.0) * 234.77) * 0.6));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float timescale = 5.0;\n\tvec3 c = vec3(-1, -1, -1);\n    c += Strand(fragCoord, vec3(2.0, 1, 1), 0.8934 + 2.0 + sin(iTime) * 40.0, 2.0, 0.26, 20.0 * timescale);\n    c += Strand(fragCoord, vec3(0.1, 2.0, 0.1), 0.745 + 2.0 + sin(iTime) * 40.0, 2.5, 0.3, 20.3 * timescale);\n    c += Strand(fragCoord, vec3(0.1, 0.1, 2.0), 0.835 + 2.0 + sin(iTime) * 40.0, 2.3, 0.29, 9.0 * timescale);\n    c += Strand(fragCoord, vec3(2.0, 2.0, 0.1), 1.0245 + 2.0 + sin(iTime) * 40.0, 2.6, 0.24, 22.0 * timescale);\n    c += Strand(fragCoord, vec3(0.1, 2.0, 2.0), 0.8234 + 2.0 + sin(iTime) * 40.0, 2.9, 0.33, 24.0 * timescale);\n    c += Strand(fragCoord, vec3(2.0, 0.1, 2.0), 0.94525 + 2.0 + sin(iTime) * 40.0, 2.2, 0.28, 10.0 * timescale);\n    c += clamp(Muzzle(fragCoord, timescale), 0.1, 2.0);\n\tfragColor = vec4(c.r, c.g, c.b, 2.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}