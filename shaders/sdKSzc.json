{
    "Shader": {
        "info": {
            "date": "1635074570",
            "description": "[url]https://inktober.com/[/url]\n#inktober2021 themes: [img]https://i.imgur.com/QjhAdpd.png[/img]\n\nmouse controls camera.",
            "flags": 0,
            "hasliked": 0,
            "id": "sdKSzc",
            "likes": 13,
            "name": "Fab23 #inktober2021 \"leak\"",
            "published": 3,
            "tags": [
                "raymarching",
                "short",
                "inktober2021"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 337
        },
        "renderpass": [
            {
                "code": "\n#define rot(a)   mat2(cos(a+vec4(0,11,33,0)))                          // rotation\n#define hue(v)  ( .6 + .6 * cos( 6.3*(v)  + vec4(0,23,21,0)  ) )\n\nvoid mainImage(out vec4 O, vec2 U) \n{\n    float t=9.,d, s;                                                   // s: hit object id \n    vec3  R = iResolution,\n          D = normalize(vec3((U+U-R.xy)/R.y, -3.)),                    // ray direction\n          p = 5./R, q,a,                                               // marching point along ray \n          M = iMouse.z > 0. ? iMouse.xyz/R -.5: vec3(20,8,0)/1e2*cos(.3*iTime+vec3(0,11,0)); \n    vec4 r = O-O;\n    for ( O=vec4(1); O.x > 0. && t > .005; O-=.005 )          \n        q = p,\n        q.yz *= rot(.5-6.3*M.y), \n        q.xz *= rot(-6.3*M.x), \n        a = abs(q),\n        t = max( a.x -1.5, max(a.y-.5,a.z-1.) ),                       // sheets\n        t = s = max( t, abs( mod(q.y,.025) - .012 ) ),\n        t = min( t, max( max( a.x -1.5, max(abs(a.y-.5)-.02,a.z-1.05) ), // cover\n                         -length(vec2(q.z+1.,a.y-.53))+.03 )),         // furrow\n        t = min( t, max( max( length(q.zy+vec2(.2,0))-1., -length( q.zy+vec2(.15,0))+1.), // back\n                          max( a.x -1.5, max(a.y-.5,q.z-1.) ))),\n        t = min(t, d = max(-q.z+1.2, length(q.xy/vec2(5,.5)))+.1 ), \n        r += exp( -40.*d*d ) * hue(q.x*.7+.35),                        // rainbow leak\n     // d < m ? m = d, z = q.x : z,\n        p += .25*t*D;                                                  // step forward = dist to obj\n        \n                                                                       // --- materials\n    if ( t!=s ) O *= vec4(.7,.6,.6,1);                                 // cover\n    O += .4*sqrt(r); // * hue(z*.7+.35);                               // rainbow leak (in sRGB )\n    \n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}