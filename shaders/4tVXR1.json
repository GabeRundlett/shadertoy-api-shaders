{
    "Shader": {
        "info": {
            "date": "1482931001",
            "description": " left: sin-based rnd.   right: D.H. fract-based rnd.\nin BufA, try TEST = 1 to 6\n\none thing we can see is that fract noise must be used ~int params (or at least, dx >= .2).",
            "flags": 32,
            "hasliked": 0,
            "id": "4tVXR1",
            "likes": 2,
            "name": "test hash",
            "published": 3,
            "tags": [
                "hash",
                "rnd"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1028
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    if (abs(U.y/R.y-fract(2.*U.x/iResolution.x))<.5/R.y) { O=vec4(0,0,1,0); return; }\n    if (U.y-.5 == R.y/2.) { O=vec4(1,0,0,0); return; }\n    if (abs(U.x-R.x/2.)<1.) { O=vec4(0,1,0,0); return; }\n\n    float TEST = texture(iChannel0,.5/R).x;\n\n    U /= R;\n    O = texture(iChannel0, U); O /= O.w;                             // value\n    \n    if ( TEST == 3. ||  TEST == 4.) O = vec4( U.y < O.x );             // average / histogram\n    if ( TEST == 5. ||  TEST == 6.) O = vec4( U.y-.5  < O.z-O.x*O.y);  // variance / correlation\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define TEST 4\n\n#define rndS(U) fract(13457.*sin(dot(U,vec2(1,77.321))))\n//#define rndS(U) fract(1e4*sin(dot(mod(U, 3.1416), vec2(1,1e3))))\n\nfloat rndF(vec2 p) // Dave_Hoskins sineless hash: https://www.shadertoy.com/view/4djSRW/\n{   vec3 p3  = fract(vec3(p.xyx) *.1031); p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    if (U==vec2(.5)) { O = vec4(TEST); return; }                // store flag\n\tvec2 R = iResolution.xy;\n    O = texture(iChannel0, U/R);\n    bool RND = U.x > R.x/2.; U.x = mod(2.*U.x,R.x);                  // 2 windows\n#define rnd(U) ( RND ? rndF(U) : rndS(U) )\n    \n    float a = rnd(U+iTime); \n    \n#if TEST == 1     \t\t\t\t\t\t\t\t\t\t\t\t// show rnd\n    O = vec4(a,a,a,1);\n\n#elif TEST == 2     \t\t\t\t\t\t\t\t\t\t\t// show rnd - zoom\n    a = rnd(U/10.+iTime); O = vec4(a,a,a,1);\n\n#elif TEST == 3     \t\t\t\t\t\t\t\t\t\t\t// eval distrib\n    O += vec4( a < U.x/R.x, 0,0,1); \n\n#elif TEST == 4   \t\t\t\t\t\t\t\t\t\t\t\t// eval distrib - zoom\n    O += vec4( float(a < U.x/R.x/10.)*10., 0,0,1);\n\n#elif TEST == 5   \t\t\t\t\t\t\t\t\t\t\t\t// eval variance\n    O += vec4(a,a,a*a,1);\n\n#elif TEST == 6   \t\t\t\t\t\t\t\t\t\t\t\t// eval autocorrelation\n    float b = rnd(U+.1+iTime); \n    O += vec4(a,b,a*b,1);\n#endif\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}