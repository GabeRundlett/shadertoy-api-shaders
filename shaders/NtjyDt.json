{
    "Shader": {
        "info": {
            "date": "1650403248",
            "description": "First attempt at making sound with sync\nThanks to this tutorial https://youtu.be/CqDrw0l0tas",
            "flags": 8,
            "hasliked": 0,
            "id": "NtjyDt",
            "likes": 2,
            "name": "First sound with sync",
            "published": 3,
            "tags": [
                "sound"
            ],
            "usePreview": 0,
            "username": "curiouspers",
            "viewed": 235
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    int samp;\n    mainSound(samp, iTime); \n\n    float d= 1.-length(uv)*2.;\n    float v = 1.-VISUALIZATION_PX.w+0.3;\n    float d1 = smoothstep(0.3,0.31,d*(v/1.3))-0.0;\n    d1 += smoothstep(0.2,0.31,d*(v/1.3))-0.0;\n    vec3 col = vec3(1.-d*v+d1)*vec3(0.580,0.580,0.580);\n    mainSound( samp,iTime); \n    fragColor = VISUALIZATION_PX;//vec4(col,1.0);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define THICK_BASS 1\nvec4 VISUALIZATION_PX = vec4(0.0);\n    \n#define Tau (2.*3.1415926)\n\n#define FM(fc, fm, iom) sin(Tau*fract((fc)*t) + (iom)*sin(Tau*fract((fm)*t)))\n\nvec2 mainSound( int samp, float t )\n{\n    vec2 sig = vec2(0);\n    \n    t = t*1.0;\n    t = mod(t, Tau*32.);\n    sig += FM(20., 2., 5.0); // thick bass\n    //sig += FM(20., 5., 5.0) * smoothstep(0.,8.0,t); // thicker bass\n    sig += FM(20., 1., 5.0); \n    sig = mix(sig, sig+FM(21., 1., 5.0*fract(t/8.)), smoothstep(0.66,1.,fract(t/1.))); \n    sig = mix(sig, sig+FM(21., 1., 10.0*fract(t/2.)), smoothstep(0.75,1.,fract(t/2.)));\n    sig = mix(sig, sig+FM(21., 1., 10.0*fract(t/16.)), smoothstep(0.75,1.,fract(t/4.)));\n     \n    // Set our pixel value to be accessible from outside\n    vec2 col = clamp(smoothstep(0.9,0.91,abs(sig/1.)),0.,1.);\n    VISUALIZATION_PX = vec4(col.x,col.y,col.x,(fract(t/1.)+fract(t/2.)+fract(t/4.)+col.x)/4.);\n    return sig*1.;\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}