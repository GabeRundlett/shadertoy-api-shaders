{
    "Shader": {
        "info": {
            "date": "1464711716",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "MdyXWw",
            "likes": 8,
            "name": "crosses ( 204 / 211 chars)",
            "published": 3,
            "tags": [
                "2d",
                "2tweets",
                "short",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 799
        },
        "renderpass": [
            {
                "code": "/**/  // 204 chars aliased, +7 antialiased\n      // ( getting obfuscated... see previous versions before for more readability ! )\n\n#define R mat2(cos(1.57*vec4(0,3,1,0)    // R(-1.25) = tilted grid\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n\tU *=  15./ iResolution.y;\n    \n    //            time rotation          cross center = 0 mod 3 in tilted grid\n  //U = abs(ceil( R+iDate.w)) * ( U - R-1.25))*ceil( R+1.25))*U/3.2 -.5 )*3.2 ) -.5 ));\n  //O = vec4(U.x==0.&&U.y<2.||U.y==0.&&U.x<2.);                       // draw cross \n\n    // antialiased version: +7 chars\n    //       time rotation          cross center = 0 mod 3 in tilted grid\n    U = abs( R+iDate.w)) * ( U - R-1.25))*ceil( R+1.25))*U/3.2 -.5 )*3.2 )  );\n    O = smoothstep(.5, .4, max(min(U.x,U.y),max(U.x,U.y)-1.) ) +O-O;   // draw cross \n}\n   \n/**/\n\n\n\n\n\n/**   // 223 chars aliased, +7 antialiased  ( more readable )\n\n#define R(t) mat2(cos(t),sin(t),-sin(t),cos(t))    // R(-1.25) = tilted grid\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n\tU *=  15./ iResolution.y;\n    \n    //            time rotation          cross center = 0 mod 3 in tilted grid\n  //U = abs(ceil( R(iDate.w) * ( U - R(-1.25)*ceil( R(1.25)*U/sqrt(10.) -.5 )*sqrt(10.) ) -.5 ));\n  //O = vec4(U.x==0.&&U.y<2.||U.y==0.&&U.x<2.);                        // draw cross \n\n    // antialiased version: +7 chars\n    //       time rotation          cross center = 0 mod 3 in tilted grid\n    U = abs( R(iDate.w) * ( U - R(-1.25)*ceil( R(1.25)*U/sqrt(10.) -.5 )*sqrt(10.) )  );\n    O += smoothstep(.5, .4, max(min(U.x,U.y),max(U.x,U.y)-1.) ) -O;   // draw cross \n}\n   \n/**/\n\n\n\n\n/**  // 228 chars aliased, +7 antialiased\n\n#define R(t) mat2(c=cos(t),s=sin(t),-s,c)    // R(-1.25) = tilted grid\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    float c,s, l=sqrt(.9);\n\tU *=  15./ iResolution.y;\n    \n    //            time rotation          cross center = 0 mod 3 in tilted grid\n  //U = abs(ceil( R(iDate.w) * ( U - R(-1.25)*ceil( R(1.25)*U/3.*l -.5 )*3./l ) -.5 ));\n  //O = vec4(U.x==0.&&U.y<2.||U.y==0.&&U.x<2.); // draw cross \n\n    // antialiased version: +7 chars\n    //       time rotation          cross center = 0 mod 3 in tilted grid\n    U = abs( R(iDate.w) * ( U - R(-1.25)*ceil( R(1.25)*U/3.*l -.5 )*3./l )  );\n    O += smoothstep(.5, .4, max(min(U.x,U.y),max(U.x,U.y)-1.) ) -O;\n}\n   \n/**/\n\n\n\n\n/**  // 246 chars aliased, +7 antialiased\n\n#define M(s) mat2(1,s,-s,1) / sqrt(10.)    // tilted grid\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    float t = iDate.w, c=cos(t),s=sin(t), l=sqrt(.9);\n\tU *=  15./ iResolution.y;\n    \n    //            time rotation          cross center = 0 mod 3 in tilted grid\n  //U = abs(ceil( mat2(c,s,-s,c) * ( U - M(-3)*ceil( M(3)*U/3.*l -.5 )*3./l ) -.5 ));\n  //O = vec4(U.x==0.&&U.y<2.||U.y==0.&&U.x<2.); // draw cross \n\n    // antialiased version: +7 chars\n    //       time rotation          cross center = 0 mod 3 in tilted grid\n    U = abs( mat2(c,s,-s,c) * ( U - M(-3)*ceil( M(3)*U/3.*l -.5 )*3./l )  );\n    O += smoothstep(.5, .4, max(min(U.x,U.y),max(U.x,U.y)-1.) ) -O;\n}\n   \n/**/\n\n\n\n\n/**    // 279 chars\n\n#define M(s) mat2(1,s,-s,1) / sqrt(10.)    // tilted grid\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    float t = iDate.w, c=cos(t),s=sin(t), l=sqrt(.9);\n    vec2 u; \n\tU *=  15./ iResolution.y;\n\n    u = M(3)*U;\n    u = floor(u/3.*l+.5)*3./l;\n    u = M(-3)*u;                                  // cross center = 0 mod 3 in tilted grid\n    //O = vec4(length(U-u)<1.5);                  // debug: show tilted frame\n    \n    U = floor(mat2(c,s,-s,c)*(U-u)+.5);           // time rotation of cross coords\n    O = vec4(  (U.x==0. | |U.y==0. ) && abs(U.x)<2. && abs(U.y)<2.); // draw cross\n}\n    \n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}