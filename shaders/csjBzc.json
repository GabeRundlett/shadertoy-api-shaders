{
    "Shader": {
        "info": {
            "date": "1689962757",
            "description": "Forked from Xor's https://shadertoy.com/view/ddjBRK",
            "flags": 0,
            "hasliked": 0,
            "id": "csjBzc",
            "likes": 6,
            "name": "Ball With Humans",
            "published": 3,
            "tags": [
                "humans"
            ],
            "usePreview": 0,
            "username": "elenzil",
            "viewed": 199
        },
        "renderpass": [
            {
                "code": "// Fork of \"Ball [408 Chars]\" by Xor. https://shadertoy.com/view/ddjBRK\n// 2023-07-21 17:57:24\n\n// Hash without Sine by David Hoskins\n// https://www.shadertoy.com/view/4djSRW\nfloat hash13A(vec3 p3)\n{\n    p3  = fract(p3 * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n//Humanshader.com\n//-9 thanks to SnoopethDuckDuck\nvoid mainImage(out vec4 O, vec2 I)\n{\n    I = ceil(I/iResolution.y*40.)-vec2(37,23);\n    float v = I.y,\n    h = dot(I,I),\n    z;\n    O = vec4(240,0,300,0)+I.x-4.*I.y;\n    if (h<2e2)\n    {\n        O = vec4(420,0,520,0);\n        I *= 50.+.08*h;\n        z = (I.x-I.y*2.)/1e2+18.;\n        z>0.?O.r += z*z : z;\n        O = O*(I.y+11e2)/5e3 + max(I.x+I.y,0.)*.1;\n    }\n    else if (v<0.)\n    {\n        O.r = 150.+v+v;\n        O.b = 50.;\n        z = -240.*v - h-8.*v*v;\n        z>12e2? O *= z*(.015-6e-6*z)-8.36 : O;\n        O.r += max(32e2 - h - 2.*(z+I.x*v),0.);\n    }\n    \n    float hash;\n    \n    hash = hash13A(vec3(I, 0.0));\n    if (hash < 0.02) {\n        O.r = hash / 0.02 * 255.0;\n    }\n    if (hash > 0.98) {\n        O.r = 255.0;\n        O.b = (hash - 0.98) / 0.02 * 255.0;\n    }\n    \n    O = min(O/255., 1.);\n    \n    O.g = .7*O.r+.3*O.b;\n    hash = hash13A(vec3(I, 30.0));\n    if (hash < 0.02) {\n        O.g = hash / 0.02 * 2.0;\n    }\n    \n    hash = hash13A(vec3(I, 50.0));\n    if (hash > smoothstep(0.0, 0.2, pow(fract(floor(iTime * 8.0) / 8.0 / 10.0), 3.0))) {\n        O.rgb *= 0.0;\n    }\n\n    \n}\n\n//Original:\n/*\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.y = 1.-uv.y;\n    vec2 P = round(uv*vec2(71,40)-.5);\n    float x = P.x;\n    float y = P.y;\n    \n    float u = x-36.;\n    float v = 18.-y;\n    float h = u*u+v*v;\n    \n    float R,G,B;\n    if (h<200.)\n    {\n        R = 420.;\n        B = 520.;\n        float t = 5000.+8.*h;\n        float p = round(t*u/1e2);\n        float q = round(t*v/1e2);\n        float s = 2.*q;\n        float w = round((1000. + p - s)/1e2)+8.;\n        if (w>0.) R = R + w*w;\n        float o = s+2200.;\n        R = round(R*o/1e4);\n        B = round(B*o/1e4);\n        if (p>-q)\n        {\n            w = round((p+q)/1e1);\n            R += w;\n            B += w;\n        }\n    }\n    else if (v<0.)\n    {\n        R = 150.+2.*v;\n        B = 50.;\n        float p = h+8.*v*v;\n        float c = 240.*-v - p;\n        if (c>1200.)\n        {\n            float o = round(6.*c/1e1);\n            o = c*(1500.-o);\n            o = round(o/1e2)-8360.;\n            R = round(R*o/1e3);\n            B = round(B*o/1e3);\n        }\n        float r = c+u*v;\n        float d = 3200. - h - 2.*r;\n        if (d>0.) R += d;\n    }\n    else\n    {\n        float c = x+4.*y;\n        R = 132.+c;\n        B = 192.+c;\n    }\n    R = min(R, 255.);\n    B = min(B, 255.);\n    G = round((7.*R+3.*B)/1e1);\n    \n    fragColor = vec4(R,G,B,255)/255.;\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}