{
    "Shader": {
        "info": {
            "date": "1693932828",
            "description": "asdf test",
            "flags": 32,
            "hasliked": 0,
            "id": "dtBfWz",
            "likes": 1,
            "name": "laplacian of gaussian",
            "published": 3,
            "tags": [
                "log"
            ],
            "usePreview": 0,
            "username": "Zi7ar21",
            "viewed": 182
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n    fragColor = texture(iChannel1, fragCoord/iResolution.xy);\n    fragColor = texture(iChannel2, fragCoord/iResolution.xy);\n    fragColor = texture(iChannel3, fragCoord/iResolution.xy);\n\n    /*\n    fragColor.rgb =\n    (  -1.0/560.0)*texelFetch(iChannel0, ivec2(fragCoord)-ivec2(4, 0), 0).rgb+\n    (   8.0/315.0)*texelFetch(iChannel0, ivec2(fragCoord)-ivec2(3, 0), 0).rgb+\n    (  -1.0/  5.0)*texelFetch(iChannel0, ivec2(fragCoord)-ivec2(2, 0), 0).rgb+\n    (   8.0/  5.0)*texelFetch(iChannel0, ivec2(fragCoord)-ivec2(1, 0), 0).rgb+\n    (-205.0/ 72.0)*texelFetch(iChannel0, ivec2(fragCoord)+ivec2(0, 0), 0).rgb+\n    (   8.0/  5.0)*texelFetch(iChannel0, ivec2(fragCoord)+ivec2(1, 0), 0).rgb+\n    (  -1.0/  5.0)*texelFetch(iChannel0, ivec2(fragCoord)+ivec2(2, 0), 0).rgb+\n    (   8.0/315.0)*texelFetch(iChannel0, ivec2(fragCoord)+ivec2(3, 0), 0).rgb+\n    (  -1.0/560.0)*texelFetch(iChannel0, ivec2(fragCoord)+ivec2(4, 0), 0).rgb+\n    (  -1.0/560.0)*texelFetch(iChannel0, ivec2(fragCoord)-ivec2(0, 4), 0).rgb+\n    (   8.0/315.0)*texelFetch(iChannel0, ivec2(fragCoord)-ivec2(0, 3), 0).rgb+\n    (  -1.0/  5.0)*texelFetch(iChannel0, ivec2(fragCoord)-ivec2(0, 2), 0).rgb+\n    (   8.0/  5.0)*texelFetch(iChannel0, ivec2(fragCoord)-ivec2(0, 1), 0).rgb+\n    (-205.0/ 72.0)*texelFetch(iChannel0, ivec2(fragCoord)+ivec2(0, 0), 0).rgb+\n    (   8.0/  5.0)*texelFetch(iChannel0, ivec2(fragCoord)+ivec2(0, 1), 0).rgb+\n    (  -1.0/  5.0)*texelFetch(iChannel0, ivec2(fragCoord)+ivec2(0, 2), 0).rgb+\n    (   8.0/315.0)*texelFetch(iChannel0, ivec2(fragCoord)+ivec2(0, 3), 0).rgb+\n    (  -1.0/560.0)*texelFetch(iChannel0, ivec2(fragCoord)+ivec2(0, 4), 0).rgb;\n    */\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define sigma 1.0\n\n#define PI 3.1415926535\n\nfloat LoG(float x, float y) {\n    float r2 = x*x+y*y;\n    return (1.0/(PI*sigma*sigma*sigma*sigma))*(1.0-(r2/(2.0*sigma*sigma)))*exp(-r2/(2.0*sigma*sigma));\n}\n\nfloat g(float x) {\n    return (1.0/(2.506628274631000502415765284811045253006986740609938316629923576*sigma))*exp(-(x*x)/(2.0*sigma*sigma));\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = vec4(texture(iChannel0, fragCoord/iResolution.xy).rgb, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = vec4(0);\n\n    for(int i = -9; i <= 9; i++) {\n        fragColor += g(float(i))*vec4(texelFetch(iChannel0, ivec2(fragCoord)+ivec2(i, 0), 0).rgb, 1.0);\n    }\n\n    fragColor = vec4(fragColor.a != 0.0 ? fragColor.rgb / fragColor.a : fragColor.rgb, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = vec4(0);\n\n    for(int i = -9; i <= 9; i++) {\n        fragColor += g(float(i))*vec4(texelFetch(iChannel0, ivec2(fragCoord)+ivec2(0, i), 0).rgb, 1.0);\n    }\n\n    fragColor = vec4(fragColor.a != 0.0 ? fragColor.rgb / fragColor.a : fragColor.rgb, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = vec4(0);\n\n    for(int i = -7; i <= 7; i++) {\n        for(int j = -7; j <= 7; j++) {\n            fragColor += -LoG(float(i),float(j))*vec4(texelFetch(iChannel0, ivec2(fragCoord)+ivec2(i, j), 0).rgb, 1.0);\n        }\n    }\n\n    //fragColor = vec4(fragColor.a != 0.0 ? fragColor.rgb / fragColor.a : fragColor.rgb, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}