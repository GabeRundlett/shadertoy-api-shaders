{
    "Shader": {
        "info": {
            "date": "1494668307",
            "description": "Hexagonal Conway games of life.  Mouse paint.   Try fullscreen.\nA triangular cell has 12 neighbors. center on + 2 neighbors on: survive. 3 neighbors on: birth (as in regular game).\n\nYou can change SCALE in all tabs.",
            "flags": 32,
            "hasliked": 0,
            "id": "4ssBzn",
            "likes": 15,
            "name": "hexa2 game of life",
            "published": 3,
            "tags": [
                "automata",
                "life",
                "conway",
                "short",
                "hexalife",
                "hexlife"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1020
        },
        "renderpass": [
            {
                "code": "#define SCALE 4.        // change in all tabs\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy, f;\n    U.x += R.y;         // avoids the out-of-grid triangle due to /_ tilting\n    \n    U /= SCALE;\n // U *= mat2(1,.5,0,.866);            // mat ( 1,  1/2,        0, sqrt(3)/2  )\n    U *= mat2(1,-.577,0,1.155);        // mat ( 1, -1/sqrt(3),  0, 2/sqrt(3)  )\n\n    f = fract(U); \n    U = floor(U);\n    \n    O = texture(iChannel0, fract( (U+.5)/R ) );\n    R =  f.x+f.y<1. ? O.xz : O.yw;     // cell= /\\/  .x,.z = left ,  .y,.w = right\n    O = R.x + vec4(1,0,0,0)*R.y;       // x: current state, y: past states\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// inspired from https://www.shadertoy.com/view/4dGSWR  grid : 8 neighbors\n//           and https://www.shadertoy.com/view/4dsfRn  hexa-nodes: 6 neighbors\n\n#define SCALE 4. // change in all tabs\n\n#define T(u,v) + texture(iChannel0, fract( U/R + vec2(u,v)/R ) ) \n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy, \n         V =  U*SCALE* mat2(1,.5,0,.866); // screen coordinates\n         V.x -= R.y;                      // avoids the out-of-grid triangle due to /_ tilting\n\n    //   /\\/\\/\\/\\ -> stored: grid /_/_/_/_/ with 1 cell= /\\/  .x = left ,  .y = right\n\n    if (     iFrame < 37   && length(V - .5*R) < 55.           // initial state\n        || (O=iMouse).z>.5 && length(V - O.xy) < 25. )         // mouse paint\n      O = vec4(1);\n    else {\n      O = T(0,0); O.zw = max(O.zw,O.xy)*.9;                    // relaxation (past states for display)\n        \n      O.x = O.y =   T(-1,1).x+T(-1,1).y + T(0,1).x             // count life in 12-neighborhood\n                  + T(-1,0).y +        + T(1,0).x\n                  + T(0,-1).y + T(1,-1).x+T(1,-1).y;\n      O.x += T(-1,0).x +  T(0,0).y + T(-1,-1).y + T(0,-1).x;\n      O.y += T( 0,1).y +  T(0,0).x + T( 1, 1).x + T(1, 0).y;\n\n      O.xy = vec2( O.x T(0,0).x== 3. ||O.x == 3. ,             // 2 neighbors: survive \n                   O.y T(0,0).y== 3. ||O.y == 3.  );           // 3 neighbors: birth\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}