{
    "Shader": {
        "info": {
            "date": "1522954919",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "ldyczd",
            "likes": 5,
            "name": "sdf of star (internal)",
            "published": 3,
            "tags": [
                "2d",
                "sdf",
                "shapes",
                "short",
                "mz"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 701
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage( out vec4 O, vec2 U )\n{\n   float t = mod(iTime,8.), \n         N = 3.+5.*min(t,8.-t),\n         r = 1.,                   // radius\n        r0 = .5;                   // relative interior radius\n    \n    vec2 R = iResolution.xy;\n    U = ( U+U - R ) / R.y;\n    float a = atan(U.x,U.y), l = length(U),\n          b = 3.14159/N,\n        tb = tan(b),\n       // s = sin(b); // if control by peak angle\n          s = (r0 * tb)/(sqrt(1.+tb*tb)-r0); // control by r\n    a = mod(a,2.*b)-b;\n    U = l * vec2(cos(a),sin(a)) / cos(b);\n    U.y = abs(U.y);\n    U.x -= r/cos(b);\n    l = -(s*U.x+U.y)/sqrt(1.+s*s);  // true euclidian distance ( +: inside )\n  //l = -(U.x+U.y/s);               // field fitting radial distance ( +: indide )\n    O = vec4( l );\n    \n    //O = sin(30.*O);\n    if (O.x<0.) O=vec4(1,0,0,0);\n    O.b = .5*sin(6.28*10.*l);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}