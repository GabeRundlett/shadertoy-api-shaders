{
    "Shader": {
        "info": {
            "date": "1464970393",
            "description": "modification of shane shader : [url=https://www.shadertoy.com/view/MdKXDD]One Tweet Cellular Pattern[/url]\nbetter in full screen",
            "flags": 0,
            "hasliked": 0,
            "id": "4sGSWm",
            "likes": 2,
            "name": "Cellular test  1 (218c)",
            "published": 3,
            "tags": [
                "test",
                "cellular"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 645
        },
        "renderpass": [
            {
                "code": "\n/* 218c by FabriceNeyret2 */\n#define f    ( p *= m, v = abs( fract(p/70.) - .5 ) +.1 , min(v.x, v.y) )\n\nvoid mainImage(out vec4 o, vec2 p){\n\t \n    vec2 v = iResolution.xy;\n    p = (p+p-v)/v.y * 1.2;\n       \n    // Used to rotate cells with slight warping.\n    mat2 m = mat2(v=cos(iTime*.2+vec2(0,1.6)),-v.y,v.x)*7.;\n\tp *= m;\n    \n    // Very cheap wrappable cellular tiles.\n    o += min(min(f, f), f)/.6 - o;   \n}\n\n/* original\nfloat f(vec2 p)\n{\n    p = fract(p/70.) - .5;\n    return min(abs(p.x), abs(p.y)) + 0.1;\n}\n\nvoid mainImage(out vec4 o, vec2 p){\n\t \n    p = (p+p-iResolution.xy)/iResolution.y*1.5;\n\n    float c = cos(iTime*.2)*7.0;\n   \tfloat z = sin(iTime*.2)*7.0;\n   \n    // Used to rotate cells with slight warping.\n    mat2 m = mat2(c, -z, z, c);\n    p *= m*m*.8;\n    \n    // Very cheap wrappable cellular tiles.\n    o += min(min(f(p), f(p*m)), f(p*m*m))/.6 - o;\n    \n}*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}