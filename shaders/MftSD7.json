{
    "Shader": {
        "info": {
            "date": "1714040665",
            "description": "this is a renderer for a triangle it takes three cornerpoints (a ,b and c)\n  and one point p, it gives back a vector with three values\n  the first falue is 1 if p is inside the triangle and 0 if ouside.\n  the last two values are the uv cordinates for the ",
            "flags": 0,
            "hasliked": 0,
            "id": "MftSD7",
            "likes": 0,
            "name": "triangle renderer",
            "published": 3,
            "tags": [
                "trianglerenderer",
                "texturedisplay"
            ],
            "usePreview": 0,
            "username": "simplexqwe",
            "viewed": 128
        },
        "renderpass": [
            {
                "code": "/*this is a renderer for a triangle it takes three cornerpoints (a ,b and c)\n  and one point p, it gives back a vector with three values\n  the first falue is 1 if p is inside the triangle and 0 if ouside.\n  the last two values are the uv cordinates for the triangle wich you can\n  use to display a texture on the triangle.\n  */\n\n\nvec3 t (vec2 p,vec2 a,vec2 b,vec2 c){\n    float w1 = (a.x*(c.y-a.y)+(p.y-a.y)*(c.x-a.x)-p.x*(c.y-a.y))/\n               ((b.y-a.y)*(c.x-a.x)-(b.x-a.x)*(c.y-a.y));\n                \n    float w2 = (p.y-a.y-w1*(b.y-a.y))/(c.y-a.y);\n    \n    float i  = 1.;\n    if(min(w1,w2)<=0.)i=0.;\n    if(w1+w2>=1.)i=0.;\n    \n    return vec3(i,w1,w2);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    vec2 a  = vec2(0.1,0.9);\n    vec2 b  = vec2(0.1,0.1);\n    vec2 c  = vec2(0.9,0.1);\n    \n    vec3 tc = t(uv,a,b,c);\n    \n    vec4 e  = texture(iChannel0,tc.yz,0.)*(tc.x);\n    \n    fragColor = e;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 9,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}