{
    "Shader": {
        "info": {
            "date": "1401447558",
            "description": "The golden spiral and silver spiral.",
            "flags": 0,
            "hasliked": 0,
            "id": "XslSDN",
            "likes": 5,
            "name": "Gold and silver spirals",
            "published": 3,
            "tags": [
                "goldenratio",
                "logarithmicspiral"
            ],
            "usePreview": 0,
            "username": "huttarl",
            "viewed": 586
        },
        "renderpass": [
            {
                "code": "// See http://en.wikipedia.org/wiki/Golden_spiral\n// and http://en.wikipedia.org/wiki/Silver_ratio\n\nconst float phi = 1.618034; // golden ratio\nconst float invlogphi = 2.0780869; // 1.0 / log(phi)\nconst float ds = 2.414213562; // silver ratio = 1 + sqrt(2)\nconst float invlogds =  1.13459265711; // 1.0 / log(ds); used for taking log base ds\nconst float pi = 3.141592654;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tfloat minRes = min(iResolution.x, iResolution.y);\n\t// vec2 offset = (iResolution.xy - vec2(minRes)) * 0.5;\n\n\tvec2 center = 0.5 * iResolution.xy;\n\t// \tvec2(sin(iTime * 2.7), cos(iTime * 3.6)) * minRes * 0.1;\n\n\t// point in unit-ish coordinates, with origin in the middle of the viewport\n\t// vec2 p = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n\tvec2 p = 2.2 * (fragCoord.xy - center) / minRes;\n\t\n\t// TODO: factor out sqrt\n\tfloat r = sqrt(dot(p,p));\n\tfloat rotspd = 5.0; // (sin(iTime * 0.1 * (fi + 1.0)) + 0.5) * 0.01;\n\tfloat a = atan(p.y, p.x);\n\tfloat a1 = a + iTime * rotspd;\n\tfloat a2 = a - iTime * rotspd;\n\t// a = mod(a, pi2);\n\t\n\t// The radius is close to what power of ds?\n\tfloat lr = log(r);\n\tfloat ani = mod(lr * invlogds - a1 + pi, pi + pi) - pi;\n\tvec3 col = vec3(1.0 - smoothstep(0.0, 0.1, abs(ani * r)));\n\t// golden ratio\n\tani = mod(lr * invlogphi + a2 + pi, pi + pi) - pi;\n\tfloat lum = 1.0 - smoothstep(0.0, 0.1, abs(ani * r));\n\tcol += lum * vec3(1.0, 0.8, 0.3);\n\t\n\tfragColor = vec4(col, 1.0);\n\t\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}