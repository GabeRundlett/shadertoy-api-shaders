{
    "Shader": {
        "info": {
            "date": "1535939860",
            "description": "reaction diffusion thing really similar to shiffmans vid.\n\nhttp://www.karlsims.com/rd.html\nbased on this.\n\nred and blue channels hold the chems.",
            "flags": 32,
            "hasliked": 0,
            "id": "ltKyDz",
            "likes": 1,
            "name": "ReactionDiffusionSimplest(Broke)",
            "published": 3,
            "tags": [
                "reactiondiffusionreactiondiffusionpheromone"
            ],
            "usePreview": 0,
            "username": "timeiskey",
            "viewed": 604
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define RADIUS 10.0\n#define PI 3.1415926\n\n#define dA 1.0\n#define dB 0.5\n#define feed 0.055\n#define k 0.062\n#define deltaTime 0.1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec2 nppd = 1.0/iResolution.xy * 1.0;\n    \n    vec2 nmp = iMouse.xy / iResolution.xy;\n\n    vec3 c = vec3(0.0);\n\n    //\tlaplacian\n    vec3 tl = texture(iChannel1, abs(uv + nppd * vec2( -1.0, -1.0))).rgb * 0.05;\n    vec3 tc = texture(iChannel1, abs(uv + nppd * vec2(  0.0, -1.0))).rgb * 0.20;\n    vec3 tr = texture(iChannel1, abs(uv + nppd * vec2(  1.0, -1.0))).rgb * 0.05;\n    vec3 ml = texture(iChannel1, abs(uv + nppd * vec2( -1.0,  0.0))).rgb * 0.20;\n    vec3 mc = texture(iChannel1, abs(uv + nppd * vec2(  0.0,  0.0))).rgb * -1.0;\n    vec3 mr = texture(iChannel1, abs(uv + nppd * vec2(  1.0,  0.0))).rgb * 0.20;\n    vec3 bl = texture(iChannel1, abs(uv + nppd * vec2( -1.0,  1.0))).rgb * 0.05;\n    vec3 bc = texture(iChannel1, abs(uv + nppd * vec2(\t0.0,  1.0))).rgb * 0.20;\n    vec3 br = texture(iChannel1, abs(uv + nppd * vec2(  1.0,  1.0))).rgb * 0.05;\n    vec3 laplace = tl + tc + tr + ml + mc + mr + bl + bc + br;\n \n    float laplaceA = laplace.r;\n    float laplaceB = laplace.b;\n    float lastA = mc.r;\n    float lastB = mc.b;\n    \n    //\ta is stored on r\n    float newA = \tlastA + \n        \t\t\t(\t( dA * laplaceA ) - \n                     \t( lastA * lastB * lastB ) +\n                     \t( feed * (1.0 - lastA) ) + 10.0\t\t) * deltaTime;\n    \n    //\tb is stored on g\n    float newB = \tlastB + \n        \t\t\t(\t( dB * laplaceB ) + \n                     \t( lastA * lastB * lastB ) -\n                     \t( (k + feed) * lastB )\t\t\t) * deltaTime;\n    \n\n    fragColor = vec4( newA, 0.0, newB, 1.0 );\n    \n    float circle = step(length(iMouse.xy - fragCoord),RADIUS);\n    if(iMouse.z > 0.0)\n        //\tplace circle into b channel\n    \tfragColor = max(fragColor,vec4( fragColor.rg, circle, 1.00 ));\n}\n\n\n\n\n\n\n\n\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}