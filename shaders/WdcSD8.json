{
    "Shader": {
        "info": {
            "date": "1571929379",
            "description": "Heads or tails?",
            "flags": 0,
            "hasliked": 0,
            "id": "WdcSD8",
            "likes": 4,
            "name": "Shadertober 21 - Treasure",
            "published": 3,
            "tags": [
                "treasure",
                "inktober",
                "shadertober",
                "backwardscaptain"
            ],
            "usePreview": 0,
            "username": "BackwardsCap",
            "viewed": 365
        },
        "renderpass": [
            {
                "code": "vec2 map(vec3 p)\n{\n    float m = 0., r;\n\t\n    float rt = iTime/3.;\n    float d = 2.;\n    vec3 cp = p+vec3(cos(rt)*d,0.,sin(rt)*d);\n    cp.yz*=rot(PI/2.);\n    cp.xy*=rot(PI*iTime*5.+cos(iTime/2.)*5.);\n    \n    vec2 ap = vec2(atan(cp.z,cp.x),length(cp.xz));\n    \n    float b = cyl(cp,2.+smoothstep(0.,.5,cos(ap.x*100.)*.03),.1);\n    float b2 = cyl(cp,1.9,.03);\n    float b3 = cyl(cp-vec3(0,.17,0),2.,.1); \n    \n    vec3 dp = cp/vec3(1,.25,1);\n    float h = 10000.;\n    float dc = 3.;\n    for(float i=0.;i<dc;i++)\n    {\n        dp.xz*=rot(PI/dc*2.+.425);\n        dp=-abs(dp);\n        h=min(h,oct(dp+vec3(1.4,0,0),.45));\n    }\n    \n    float b4 = min(b3,cyl(cp+vec3(0,.17,0),2.,.1));\n\n    b = max(b,-b4);\n    b=smin(b,h,.1);\n    b=smin(b,b2,.3);\n    \n    float f = p.y+2.;\n    \n    float md = cyl(cp,.55,.05);\n    vec3 op = cp-vec3(0,.1,0);\n    float tl = oct((op)/vec3(1,.25,1),.5);\n    op.xz*=rot(PI/4.);\n    tl = min(tl,oct((op)/vec3(1,.25,1),.5));\n    b3 = cyl(cp-vec3(0,0.2,0),2.,.4);\n    \n    md=max(md,-b3);\n    b3 = cyl(cp+vec3(0,0.1,0),2.,.3);\n    tl=max(tl,-b3);\n    \n    md=smin(md,tl,.2);\n    \n    b=smin(b,md,.3);\n    \n    r=min(b,f);\n    \n    if(r==b)m=1.;\n    else if(r==f)m=2.;\n    \n    return vec2(r,m);\n}\n\nvec2 ray(vec3 ro, vec3 rd)\n{\n    float t=0.,m=0.;\n    for(int i=0;i<128;i++)\n    {\n        vec3 p = ro+rd*t;\n        vec2 s = map(p);\n        m=s.y;\n        if(abs(s.x)<0.000001*t)break;\n        t+=s.x;\n        if(t>MAX_DIST){t=-1.;break;}\n        \n    }\n    return vec2(t,m);\n}\n\nvec3 normal(vec3 p)\n{\n    vec2 e = vec2(0.00001,0);\n    return normalize(vec3(\n        map(p+e.xyy).x-map(p-e.xyy).x,\n        map(p+e.yxy).x-map(p-e.yxy).x,\n        map(p+e.yyx).x-map(p-e.yyx).x\n        ));\n}\n\nvec3 color(vec3 ro, vec3 rd, vec2 r)\n{\n    vec3 col = texture(iChannel0,rd).rgb;\n    vec3 p = ro+rd*r.x;\n    vec3 n = normal(p);\n\n    vec3 mate = vec3(1);\n    if(r.y==1.)mate=vec3(1.6,1.45,.1);\n    else if(r.y==2.)mate=vec3(1.5)*texture(iChannel1,p.xz/5.).rgb;\n\n    vec3 sun = normalize(vec3(0.2,.5,0.5));\n    float dif = clamp(dot(sun,n),0.0,1.0);\n    float sky = clamp(0.5+0.5*dot(n,vec3(0,1,0)),0.0,1.);\n    float bou = clamp(0.5+0.5*dot(n,vec3(0,-1,0)),0.0,1.);\n    float sha = step(ray(p+n*0.0001,sun).x,0.);\n    vec3 ref = reflect(-sun,n);\n\n    float spe = max(0.0,dot(ref,normalize(ro-p)));\n    spe = pow(spe,8.0);\n\n    vec3 sun_col = vec3(0.5,0.4,0.4);\n    vec3 bou_col = vec3(0.3,0.3,0.4);\n    vec3 sky_col = vec3(0.2,0.2,0.4);\n\n    if(r.x>0.){\n        col= mate*sun_col*dif*sha+spe*.5;\n        col+=mate*sky_col*sky*.5;\n        col+=mate*bou_col*bou*.25;\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 c, in vec2 f )\n{\n    vec2 uv = (2.*f-iResolution.xy)/iResolution.y;\n\n    vec3 ro = vec3(0.,1.+cos(iTime/10.)*.5,10.);\n    vec3 ta = vec3(0,1,0);\n    vec3 rd = cam(ro,ta,uv);\n    \n    vec2 r = ray(ro,rd);\n    \n    vec3 col = texture(iChannel0,rd).rgb;\n    if(r.x>0.)\n    {\n\t\tcol=color(ro,rd,r);\n        \n        if(r.y>0.)\n        {\n            float rid = r.y;\n            vec3 p = ro+rd*r.x;\n            vec3 n = normal(p);\n            \n            ro = p+n*0.0001;\n            \n            rd = reflect(rd,n);\n            r = ray(ro,rd);\n            vec3 rc =color(ro,rd,r); \n            if(rid==1.)\n\t            col+=rc;\n            else\n                col+=rc/5.;\n        }\n        \n    }\n    \n    c.rgb=col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 24,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define MAX_DIST 30.0\n#define PI 3.1415927\n\nmat2 rot(float x)\n{\n    float s = sin(x);\n    float c = cos(x);\n    return mat2(c,-s,s,c);\n}\n\n//thanks to iq for sharing this knowledge on his website\nfloat cyl(vec3 p, float h, float r)\n{\n    vec2 x = abs(vec2(length(p.xz),p.y))-vec2(h,r);\n    return length(max(x,0.0))+min(max(x.x,x.y),0.0);\n}\n\nfloat oct(vec3 p, float s)\n{\n    p=abs(p);\n    return(p.x+p.y+p.z-s)*.57735027;\n}\n\nfloat smin(float d1, float d2, float k)\n{\n    float h = clamp(0.5+0.5*(d2-d1)/k,0.0,1.0);\n    return mix(d2,d1,h)-k*h*(1.0-h);\n}\n\nvec3 cam(vec3 ro, vec3 ta, vec2 uv)\n{\n    vec3 cf = normalize(ta-ro);\n    vec3 cu = normalize(cross(cf,vec3(0,1,0)));\n    vec3 cr = normalize(cross(cu,cf));\n    return normalize(uv.x*cu+uv.y*cr+2.*cf);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}