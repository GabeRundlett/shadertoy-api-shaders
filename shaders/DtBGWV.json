{
    "Shader": {
        "info": {
            "date": "1673955683",
            "description": "a very natural mineral formation",
            "flags": 0,
            "hasliked": 0,
            "id": "DtBGWV",
            "likes": 27,
            "name": "Candy Cavern Vomit",
            "published": 3,
            "tags": [
                "rainbow",
                "gyroid"
            ],
            "usePreview": 1,
            "username": "leon",
            "viewed": 434
        },
        "renderpass": [
            {
                "code": "\n// Candy Cavern Vomit by Leon Denise 2023-01-17\n\n// an authentic rainbow unicorn pukey\n\n// snippets\n#define R iResolution\n#define N(x,y,z) normalize(vec3(x,y,z))\n#define ss(a,b,t) smoothstep(a,b,t)\nmat2 rot(float a) { return mat2(cos(a),-sin(a),sin(a),cos(a)); }\nfloat gyroid(vec3 p) { return dot(sin(p), cos(p.yzx)); }\nfloat noise(inout vec3 p)\n{\n    float result = 0., a = .5;\n    for (float i = 0.; i < 3.; ++i, a/=2.)\n    {\n        p.z += result * .5;\n        result += abs(gyroid(p/a)*a);\n    }\n    return result;\n}\n\n// noise pattern\nfloat pattern(vec2 p)\n{\n    vec3 pos = vec3(p, length(p));\n    float n = noise(pos);\n    pos = pos*10.;\n    pos.y *= .25;\n    n = n/2. + noise(pos)/2.;\n    n -= .05*sin((pos.y*1.+n*2.+iTime*.5)*10.);\n    return n;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 color = vec3(0);\n    \n    // coordinates\n    vec2 uv = fragCoord/R.xy;\n    vec2 p = (2.*fragCoord-R.xy)/R.y;\n    float lp = length(p);\n\n    // act as a \"height map\"\n    float n = pattern(p);\n\n    // normal\n    float height = .05;\n    float range = 1.;\n    vec3 unit = vec3(range/R.xy, 0);\n    #define T(uv) pattern(uv)\n    vec3 normal = normalize(vec3(T(p+unit.xz)-T(p-unit.xz),\n                                 T(p-unit.zy)-T(p+unit.zy),\n                                 n * height));\n    \n    // light\n    color += ss(.2,1.,n)*vec3(.5)*pow(dot(normal,N(0,1,.5))*.5+.5, 5.);\n    \n    // color\n    vec3 tint = .5+.5*cos(vec3(1,2,3)*4.9+p.y*2.+n*1.);\n    float mask = ss(.0,.4,n-.55);\n    color += tint*mask;\n    \n    // tunnel shade\n    color *= ss(-.4,1.,lp);\n\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}