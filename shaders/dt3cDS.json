{
    "Shader": {
        "info": {
            "date": "1699578983",
            "description": "a dark looking forest",
            "flags": 0,
            "hasliked": 0,
            "id": "dt3cDS",
            "likes": 0,
            "name": "dark realm",
            "published": 3,
            "tags": [
                "cineshader"
            ],
            "usePreview": 0,
            "username": "ador",
            "viewed": 831
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize coordinates to the range [0, 1]\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Define a dark background color\n    vec3 bgColor = vec3(0.05, 0.05, 0.1);\n\n    // Create a moonlit effect\n    vec3 moonColor = vec3(0.8, 0.8, 0.7);\n    float moonRadius = 0.1;\n    vec2 moonPosition = vec2(0.2, 0.8);\n    float moonIntensity = smoothstep(moonRadius, moonRadius + 0.02, length(uv - moonPosition));\n\n    // Combine background and moonlight\n    vec3 finalColor = mix(bgColor, moonColor, moonIntensity);\n\n    // Add a pseudo-3D effect using noise\n    float depth = 1.0 - 2.0 * fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453);\n    depth = abs(depth);\n\n    // Apply shading based on depth\n    float shading = smoothstep(0.2, 1.0, depth);\n    finalColor *= shading;\n\n    // Apply a vignette effect\n    float vignette = smoothstep(0.8, 1.0, length(uv - 0.5));\n    finalColor *= vignette;\n\n    // Output final color\n    fragColor = vec4(finalColor, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}