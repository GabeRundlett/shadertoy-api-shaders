{
    "Shader": {
        "info": {
            "date": "1555895506",
            "description": "Simple feedback process, mouse movable",
            "flags": 32,
            "hasliked": 0,
            "id": "WlsGRM",
            "likes": 19,
            "name": "Hot blob trails",
            "published": 3,
            "tags": [
                "flame",
                "fire",
                "feedback",
                "buffer",
                "trail",
                "recurrence"
            ],
            "usePreview": 0,
            "username": "xavierseb",
            "viewed": 1733
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tfragColor = vec4(texture(iChannel0,fragCoord.xy/iResolution.xy).xyz,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// basic feedback mechanism by Xavierseb\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){    \n\n    vec2 mouse = iMouse.xy;\n    // if mouse not detected do something\n    if(mouse.x <= 0.) mouse = vec2( iResolution.x * (sin(iTime)+1.)/2., iResolution.y/2.);\n    \n    // diameter of blob and intensity in same formula because why not\n    vec3 blob = vec3(.11-clamp(length((fragCoord.xy-mouse.xy)/iResolution.x),0.,.11))*2.;\n \n    vec3 stack= texture(iChannel0,fragCoord.xy/iResolution.xy).xyz * vec3(0.99,.982,.93);\n    \n    fragColor = vec4(stack + blob, 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}