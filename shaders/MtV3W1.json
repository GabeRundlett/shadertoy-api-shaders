{
    "Shader": {
        "info": {
            "date": "1474523054",
            "description": "Comparison of few noise generation / sampling techniques\nHold mouse to freeze time and number of samples",
            "flags": 0,
            "hasliked": 0,
            "id": "MtV3W1",
            "likes": 28,
            "name": "Blue noise comparison",
            "published": 3,
            "tags": [
                "sampling",
                "rendering",
                "dithering",
                "bluenoise",
                "highpass",
                "uniform",
                "bayer",
                "interleavedgradientnoise"
            ],
            "usePreview": 1,
            "username": "bartwronski",
            "viewed": 3451
        },
        "renderpass": [
            {
                "code": "// Shader comparing some noise functions for disk sampling\n// 1. No noise\n\n// 2. Simple random \"bad\" noise; second coordinate via re-hashing\n\n// 3. Blue noise generated by https://github.com/bartwronski/BlueNoiseGenerator/ single float; second coordinate via re-hashing\n\n// 4. Blue noise generated by https://github.com/bartwronski/BlueNoiseGenerator/ 2 component vector\n\n// 5. High-pass treated normal noise by Timothy Lottes https://www.shadertoy.com/view/4sBSDW \n// disclaimer - I didn't fully understand the implementation, so noise is shifted... Will try to fix it later.\n\n// 6. 16x16 Bayer matrix by patapom https://www.shadertoy.com/view/Mlt3z8 ; second coordinate via re-hashing.\n\n// 7. Interleaved Gradient noise by Jorge Jimenez http://advances.realtimerendering.com/s2014/index.html ; second coordinate via re-hashing.\n\n// 8. (New!) Predefined blue noise texture available in ShaderToy since recently. \n\n#define F1 float\n#define F2 vec2\n#define F3 vec3\n#define F4 vec4\n\nfloat rand(float n){return fract(sin(n) * 43758.5453123);}\nF1 Noise(F2 n,F1 x){n+=x;return fract(sin(dot(n.xy,F2(12.9898, 78.233)))*43758.5453);}\n\n// Step 1 in generation of the dither source texture.\nF1 Step1(F2 uv,F1 n){\n F1 a=1.0,b=2.0,c=-12.0,t=1.0;   \n return (1.0/(a*4.0+b*4.0-c))*(\n  Noise(uv+F2(-1.0,-1.0)*t,n)*a+\n  Noise(uv+F2( 0.0,-1.0)*t,n)*b+\n  Noise(uv+F2( 1.0,-1.0)*t,n)*a+\n  Noise(uv+F2(-1.0, 0.0)*t,n)*b+\n  Noise(uv+F2( 0.0, 0.0)*t,n)*c+\n  Noise(uv+F2( 1.0, 0.0)*t,n)*b+\n  Noise(uv+F2(-1.0, 1.0)*t,n)*a+\n  Noise(uv+F2( 0.0, 1.0)*t,n)*b+\n  Noise(uv+F2( 1.0, 1.0)*t,n)*a+\n 0.0);}\n    \n// Step 2 in generation of the dither source texture.\nF1 Step2(F2 uv,F1 n){\n F1 a=1.0,b=2.0,c=-2.0,t=1.0;   \n return (4.0/(a*4.0+b*4.0-c))*(\n  Step1(uv+F2(-1.0,-1.0)*t,n)*a+\n  Step1(uv+F2( 0.0,-1.0)*t,n)*b+\n  Step1(uv+F2( 1.0,-1.0)*t,n)*a+\n  Step1(uv+F2(-1.0, 0.0)*t,n)*b+\n  Step1(uv+F2( 0.0, 0.0)*t,n)*c+\n  Step1(uv+F2( 1.0, 0.0)*t,n)*b+\n  Step1(uv+F2(-1.0, 1.0)*t,n)*a+\n  Step1(uv+F2( 0.0, 1.0)*t,n)*b+\n  Step1(uv+F2( 1.0, 1.0)*t,n)*a+\n 0.0);}\n\nbool sampleDist(vec2 uv)\n{\n    float radius = 0.1;\n    return sqrt(dot(uv, uv)) < radius;\n}\n\nbool sampleDistComp(vec2 uv, float radius_)\n{\n    float threshold = 0.005;\n    float radius = 0.1 + radius_;\n    \n    return sqrt(dot(uv, uv)) < radius*(1.0+threshold) && sqrt(dot(uv, uv)) > radius * (1.0-threshold);\n}\n\nfloat interleavedGradientNoise(vec2 pos)\n{\n  float f = 0.06711056 * pos.x + 0.00583715 * pos.y;\n  return fract(52.9829189 * fract(f));\n}\n    \nfloat B2( vec2 _P ) {\n//    return ((_P.y << 1) + _P.x + 1) & 3;    <= This would fare much better than modulos and floors :(\n    return mod( 2.0*_P.y + _P.x + 1.0, 4.0 );\n}\n\n// Generates the 16x16 matrix\nfloat B16( vec2 _P ) {\n    vec2    P1 = mod( _P, 2.0 );                    // (P >> 0) & 1\n    vec2    P2 = floor( 0.5 * mod( _P, 4.0 ) );        // (P >> 1) & 1\n    vec2    P4 = floor( 0.25 * mod( _P, 8.0 ) );    // (P >> 2) & 1\n    vec2    P8 = floor( 0.125 * mod( _P, 16.0 ) );    // (P >> 3) & 1\n    return 4.0*(4.0*(4.0*B2(P1) + B2(P2)) + B2(P4)) + B2(P8);\n}\n\nvec2 randBlue2(vec2 coord)\n{\n    int i = int(mod(coord.x, 16.0));\n    int j = int(mod(coord.y, 16.0));\n    int finalDist = j*16+i;\n    \n    if(finalDist < 128) \n{\nif(finalDist < 64) \n{\nif(finalDist < 32) \n{\nif(finalDist < 16) \n{\nif(finalDist < 8) \n{\nif(finalDist < 4) \n{\nif(finalDist < 2) \n{\nif(finalDist < 1) \n{\nreturn vec2(0.332031, 0.707031);} else {\nreturn vec2(0.652344, 0.972656);\n}} else {\nif(finalDist < 3) \n{\nreturn vec2(0.457031, 0.5);} else {\nreturn vec2(0.175781, 0.953125);\n}\n}} else {\nif(finalDist < 6) \n{\nif(finalDist < 5) \n{\nreturn vec2(0.417969, 0.316406);} else {\nreturn vec2(0.398438, 0.609375);\n}} else {\nif(finalDist < 7) \n{\nreturn vec2(0.660156, 0.769531);} else {\nreturn vec2(0.960938, 0.804688);\n}\n}\n}} else {\nif(finalDist < 12) \n{\nif(finalDist < 10) \n{\nif(finalDist < 9) \n{\nreturn vec2(0.3125, 0.25);} else {\nreturn vec2(0.285156, 0.09375);\n}} else {\nif(finalDist < 11) \n{\nreturn vec2(0, 0.851563);} else {\nreturn vec2(0.921875, 0.273438);\n}\n}} else {\nif(finalDist < 14) \n{\nif(finalDist < 13) \n{\nreturn vec2(0.351563, 0.652344);} else {\nreturn vec2(0.167969, 0.738281);\n}} else {\nif(finalDist < 15) \n{\nreturn vec2(0.195313, 0.203125);} else {\nreturn vec2(0.90625, 0.808594);\n}\n}\n}\n}} else {\nif(finalDist < 24) \n{\nif(finalDist < 20) \n{\nif(finalDist < 18) \n{\nif(finalDist < 17) \n{\nreturn vec2(0.203125, 0.0664063);} else {\nreturn vec2(0.839844, 0.160156);\n}} else {\nif(finalDist < 19) \n{\nreturn vec2(0.867188, 0.40625);} else {\nreturn vec2(0.257813, 0.472656);\n}\n}} else {\nif(finalDist < 22) \n{\nif(finalDist < 21) \n{\nreturn vec2(0.785156, 0.164063);} else {\nreturn vec2(0.542969, 0.351563);\n}} else {\nif(finalDist < 23) \n{\nreturn vec2(0.0664063, 0.863281);} else {\nreturn vec2(0.597656, 0.15625);\n}\n}\n}} else {\nif(finalDist < 28) \n{\nif(finalDist < 26) \n{\nif(finalDist < 25) \n{\nreturn vec2(0.0195313, 0.8125);} else {\nreturn vec2(0.6875, 0.601563);\n}} else {\nif(finalDist < 27) \n{\nreturn vec2(0.582031, 0.75);} else {\nreturn vec2(0.765625, 0.0898438);\n}\n}} else {\nif(finalDist < 30) \n{\nif(finalDist < 29) \n{\nreturn vec2(0.304688, 0.242188);} else {\nreturn vec2(0.574219, 0.65625);\n}} else {\nif(finalDist < 31) \n{\nreturn vec2(0.773438, 0.214844);} else {\nreturn vec2(0.128906, 0.886719);\n}\n}\n}\n}\n}} else {\nif(finalDist < 48) \n{\nif(finalDist < 40) \n{\nif(finalDist < 36) \n{\nif(finalDist < 34) \n{\nif(finalDist < 33) \n{\nreturn vec2(0.4375, 0.296875);} else {\nreturn vec2(0.511719, 0.871094);\n}} else {\nif(finalDist < 35) \n{\nreturn vec2(0.0390625, 0.308594);} else {\nreturn vec2(0.539063, 0.632813);\n}\n}} else {\nif(finalDist < 38) \n{\nif(finalDist < 37) \n{\nreturn vec2(0.863281, 0.933594);} else {\nreturn vec2(0.0429688, 0.28125);\n}} else {\nif(finalDist < 39) \n{\nreturn vec2(0.828125, 0.683594);} else {\nreturn vec2(0.585938, 0.261719);\n}\n}\n}} else {\nif(finalDist < 44) \n{\nif(finalDist < 42) \n{\nif(finalDist < 41) \n{\nreturn vec2(0.847656, 0.570313);} else {\nreturn vec2(0.769531, 0.121094);\n}} else {\nif(finalDist < 43) \n{\nreturn vec2(0.0859375, 0.410156);} else {\nreturn vec2(0.933594, 0.910156);\n}\n}} else {\nif(finalDist < 46) \n{\nif(finalDist < 45) \n{\nreturn vec2(0.0078125, 0.894531);} else {\nreturn vec2(0.898438, 0.695313);\n}} else {\nif(finalDist < 47) \n{\nreturn vec2(0.117188, 0.480469);} else {\nreturn vec2(0.914063, 0.511719);\n}\n}\n}\n}} else {\nif(finalDist < 56) \n{\nif(finalDist < 52) \n{\nif(finalDist < 50) \n{\nif(finalDist < 49) \n{\nreturn vec2(0.246094, 0.976563);} else {\nreturn vec2(0.746094, 0.367188);\n}} else {\nif(finalDist < 51) \n{\nreturn vec2(0.566406, 0.304688);} else {\nreturn vec2(0.105469, 0.785156);\n}\n}} else {\nif(finalDist < 54) \n{\nif(finalDist < 53) \n{\nreturn vec2(0.722656, 0.238281);} else {\nreturn vec2(0.761719, 0.0234375);\n}} else {\nif(finalDist < 55) \n{\nreturn vec2(0.382813, 0.832031);} else {\nreturn vec2(0.28125, 0.0273438);\n}\n}\n}} else {\nif(finalDist < 60) \n{\nif(finalDist < 58) \n{\nif(finalDist < 57) \n{\nreturn vec2(0.234375, 0.699219);} else {\nreturn vec2(0.378906, 0.585938);\n}} else {\nif(finalDist < 59) \n{\nreturn vec2(0.421875, 0.636719);} else {\nreturn vec2(0.613281, 0.378906);\n}\n}} else {\nif(finalDist < 62) \n{\nif(finalDist < 61) \n{\nreturn vec2(0.441406, 0.195313);} else {\nreturn vec2(0.519531, 0.171875);\n}} else {\nif(finalDist < 63) \n{\nreturn vec2(0.390625, 0.859375);} else {\nreturn vec2(0.628906, 0.421875);\n}\n}\n}\n}\n}\n}} else {\nif(finalDist < 96) \n{\nif(finalDist < 80) \n{\nif(finalDist < 72) \n{\nif(finalDist < 68) \n{\nif(finalDist < 66) \n{\nif(finalDist < 65) \n{\nreturn vec2(0.835938, 0.417969);} else {\nreturn vec2(0.140625, 0.375);\n}} else {\nif(finalDist < 67) \n{\nreturn vec2(0.96875, 0.84375);} else {\nreturn vec2(0.136719, 0.257813);\n}\n}} else {\nif(finalDist < 70) \n{\nif(finalDist < 69) \n{\nreturn vec2(0.335938, 0.90625);} else {\nreturn vec2(0.65625, 0.664063);\n}} else {\nif(finalDist < 71) \n{\nreturn vec2(0.273438, 0.539063);} else {\nreturn vec2(0.59375, 0.824219);\n}\n}\n}} else {\nif(finalDist < 76) \n{\nif(finalDist < 74) \n{\nif(finalDist < 73) \n{\nreturn vec2(0.917969, 0.800781);} else {\nreturn vec2(0.832031, 0.136719);\n}} else {\nif(finalDist < 75) \n{\nreturn vec2(0.144531, 0.0117188);} else {\nreturn vec2(0.667969, 0.925781);\n}\n}} else {\nif(finalDist < 78) \n{\nif(finalDist < 77) \n{\nreturn vec2(0.101563, 0.449219);} else {\nreturn vec2(0.742188, 0.675781);\n}} else {\nif(finalDist < 79) \n{\nreturn vec2(0.75, 0.0429688);} else {\nreturn vec2(0.0820313, 0.246094);\n}\n}\n}\n}} else {\nif(finalDist < 88) \n{\nif(finalDist < 84) \n{\nif(finalDist < 82) \n{\nif(finalDist < 81) \n{\nreturn vec2(0.179688, 0.914063);} else {\nreturn vec2(0.664063, 0.0351563);\n}} else {\nif(finalDist < 83) \n{\nreturn vec2(0.480469, 0.789063);} else {\nreturn vec2(0.734375, 0.105469);\n}\n}} else {\nif(finalDist < 86) \n{\nif(finalDist < 85) \n{\nreturn vec2(0.753906, 0.390625);} else {\nreturn vec2(0.183594, 0.484375);\n}} else {\nif(finalDist < 87) \n{\nreturn vec2(0.691406, 0.109375);} else {\nreturn vec2(0.359375, 0.175781);\n}\n}\n}} else {\nif(finalDist < 92) \n{\nif(finalDist < 90) \n{\nif(finalDist < 89) \n{\nreturn vec2(0.0625, 0.726563);} else {\nreturn vec2(0.425781, 0.648438);\n}} else {\nif(finalDist < 91) \n{\nreturn vec2(0.449219, 0.761719);} else {\nreturn vec2(0.699219, 0.113281);\n}\n}} else {\nif(finalDist < 94) \n{\nif(finalDist < 93) \n{\nreturn vec2(0.820313, 0.558594);} else {\nreturn vec2(0.0976563, 0.71875);\n}} else {\nif(finalDist < 95) \n{\nreturn vec2(0.609375, 0.523438);} else {\nreturn vec2(0.476563, 0.671875);\n}\n}\n}\n}\n}} else {\nif(finalDist < 112) \n{\nif(finalDist < 104) \n{\nif(finalDist < 100) \n{\nif(finalDist < 98) \n{\nif(finalDist < 97) \n{\nreturn vec2(0.878906, 0.773438);} else {\nreturn vec2(0.191406, 0.269531);\n}} else {\nif(finalDist < 99) \n{\nreturn vec2(0.472656, 0.667969);} else {\nreturn vec2(0.0234375, 0.566406);\n}\n}} else {\nif(finalDist < 102) \n{\nif(finalDist < 101) \n{\nreturn vec2(0.78125, 0.898438);} else {\nreturn vec2(0.078125, 0.535156);\n}} else {\nif(finalDist < 103) \n{\nreturn vec2(0.851563, 0.875);} else {\nreturn vec2(0.925781, 0.292969);\n}\n}\n}} else {\nif(finalDist < 108) \n{\nif(finalDist < 106) \n{\nif(finalDist < 105) \n{\nreturn vec2(0.796875, 0.613281);} else {\nreturn vec2(0.355469, 0.148438);\n}} else {\nif(finalDist < 107) \n{\nreturn vec2(0.957031, 0.222656);} else {\nreturn vec2(0.046875, 0.730469);\n}\n}} else {\nif(finalDist < 110) \n{\nif(finalDist < 109) \n{\nreturn vec2(0.394531, 0.714844);} else {\nreturn vec2(0.484375, 0.015625);\n}} else {\nif(finalDist < 111) \n{\nreturn vec2(0.816406, 0.78125);} else {\nreturn vec2(0.0585938, 0.132813);\n}\n}\n}\n}} else {\nif(finalDist < 120) \n{\nif(finalDist < 116) \n{\nif(finalDist < 114) \n{\nif(finalDist < 113) \n{\nreturn vec2(0.984375, 0.140625);} else {\nreturn vec2(0.679688, 0.425781);\n}} else {\nif(finalDist < 115) \n{\nreturn vec2(0.671875, 0.980469);} else {\nreturn vec2(0.347656, 0.03125);\n}\n}} else {\nif(finalDist < 118) \n{\nif(finalDist < 117) \n{\nreturn vec2(0.941406, 0.199219);} else {\nreturn vec2(0.632813, 0.46875);\n}} else {\nif(finalDist < 119) \n{\nreturn vec2(0.160156, 0.234375);} else {\nreturn vec2(0.261719, 0.890625);\n}\n}\n}} else {\nif(finalDist < 124) \n{\nif(finalDist < 122) \n{\nif(finalDist < 121) \n{\nreturn vec2(0.277344, 0.355469);} else {\nreturn vec2(0.367188, 0.597656);\n}} else {\nif(finalDist < 123) \n{\nreturn vec2(0.328125, 0.488281);} else {\nreturn vec2(0.996094, 0.996094);\n}\n}} else {\nif(finalDist < 126) \n{\nif(finalDist < 125) \n{\nreturn vec2(0.578125, 0.183594);} else {\nreturn vec2(0.929688, 0.515625);\n}} else {\nif(finalDist < 127) \n{\nreturn vec2(0.0117188, 0.988281);} else {\nreturn vec2(0.527344, 0.503906);\n}\n}\n}\n}\n}\n}\n}} else {\nif(finalDist < 192) \n{\nif(finalDist < 160) \n{\nif(finalDist < 144) \n{\nif(finalDist < 136) \n{\nif(finalDist < 132) \n{\nif(finalDist < 130) \n{\nif(finalDist < 129) \n{\nreturn vec2(0.210938, 0.835938);} else {\nreturn vec2(0.714844, 0.3125);\n}} else {\nif(finalDist < 131) \n{\nreturn vec2(0.164063, 0.492188);} else {\nreturn vec2(0.25, 0.589844);\n}\n}} else {\nif(finalDist < 134) \n{\nif(finalDist < 133) \n{\nreturn vec2(0.601563, 0.53125);} else {\nreturn vec2(0.226563, 0.949219);\n}} else {\nif(finalDist < 135) \n{\nreturn vec2(0.757813, 0.117188);} else {\nreturn vec2(0.46875, 0.527344);\n}\n}\n}} else {\nif(finalDist < 140) \n{\nif(finalDist < 138) \n{\nif(finalDist < 137) \n{\nreturn vec2(0.703125, 0.703125);} else {\nreturn vec2(0.675781, 0.992188);\n}} else {\nif(finalDist < 139) \n{\nreturn vec2(0.265625, 0.046875);} else {\nreturn vec2(0.40625, 0.550781);\n}\n}} else {\nif(finalDist < 142) \n{\nif(finalDist < 141) \n{\nreturn vec2(0.292969, 0.542969);} else {\nreturn vec2(0.222656, 0.0390625);\n}} else {\nif(finalDist < 143) \n{\nreturn vec2(0.617188, 0.429688);} else {\nreturn vec2(0.34375, 0.359375);\n}\n}\n}\n}} else {\nif(finalDist < 152) \n{\nif(finalDist < 148) \n{\nif(finalDist < 146) \n{\nif(finalDist < 145) \n{\nreturn vec2(0.433594, 0.0195313);} else {\nreturn vec2(0.113281, 0.757813);\n}} else {\nif(finalDist < 147) \n{\nreturn vec2(0.945313, 0.679688);} else {\nreturn vec2(0.414063, 0.078125);\n}\n}} else {\nif(finalDist < 150) \n{\nif(finalDist < 149) \n{\nreturn vec2(0.695313, 0.582031);} else {\nreturn vec2(0.0703125, 0.691406);\n}} else {\nif(finalDist < 151) \n{\nreturn vec2(0.648438, 0.460938);} else {\nreturn vec2(0.015625, 0.125);\n}\n}\n}} else {\nif(finalDist < 156) \n{\nif(finalDist < 154) \n{\nif(finalDist < 153) \n{\nreturn vec2(0.9375, 0.00390625);} else {\nreturn vec2(0.1875, 0.644531);\n}} else {\nif(finalDist < 155) \n{\nreturn vec2(0.824219, 0.285156);} else {\nreturn vec2(0.546875, 0.6875);\n}\n}} else {\nif(finalDist < 158) \n{\nif(finalDist < 157) \n{\nreturn vec2(0.972656, 0.128906);} else {\nreturn vec2(0.53125, 0.9375);\n}} else {\nif(finalDist < 159) \n{\nreturn vec2(0.371094, 0.753906);} else {\nreturn vec2(0.882813, 0.382813);\n}\n}\n}\n}\n}} else {\nif(finalDist < 176) \n{\nif(finalDist < 168) \n{\nif(finalDist < 164) \n{\nif(finalDist < 162) \n{\nif(finalDist < 161) \n{\nreturn vec2(0.21875, 0.457031);} else {\nreturn vec2(0.492188, 0.855469);\n}} else {\nif(finalDist < 163) \n{\nreturn vec2(0.789063, 0.339844);} else {\nreturn vec2(0.152344, 0.1875);\n}\n}} else {\nif(finalDist < 166) \n{\nif(finalDist < 165) \n{\nreturn vec2(0.683594, 0.960938);} else {\nreturn vec2(0.621094, 0.347656);\n}} else {\nif(finalDist < 167) \n{\nreturn vec2(0.644531, 0.839844);} else {\nreturn vec2(0.992188, 0.605469);\n}\n}\n}} else {\nif(finalDist < 172) \n{\nif(finalDist < 170) \n{\nif(finalDist < 169) \n{\nreturn vec2(0.535156, 0.945313);} else {\nreturn vec2(0.15625, 0.394531);\n}} else {\nif(finalDist < 171) \n{\nreturn vec2(0.792969, 0.371094);} else {\nreturn vec2(0.121094, 0.984375);\n}\n}} else {\nif(finalDist < 174) \n{\nif(finalDist < 173) \n{\nreturn vec2(0.605469, 0.496094);} else {\nreturn vec2(0.0273438, 0.191406);\n}} else {\nif(finalDist < 175) \n{\nreturn vec2(0.464844, 0.277344);} else {\nreturn vec2(0.777344, 0.929688);\n}\n}\n}\n}} else {\nif(finalDist < 184) \n{\nif(finalDist < 180) \n{\nif(finalDist < 178) \n{\nif(finalDist < 177) \n{\nreturn vec2(0.964844, 0.0976563);} else {\nreturn vec2(0.515625, 0.34375);\n}} else {\nif(finalDist < 179) \n{\nreturn vec2(0.730469, 0.621094);} else {\nreturn vec2(0.09375, 0.902344);\n}\n}} else {\nif(finalDist < 182) \n{\nif(finalDist < 181) \n{\nreturn vec2(0.988281, 0);} else {\nreturn vec2(0.386719, 0.328125);\n}} else {\nif(finalDist < 183) \n{\nreturn vec2(0.320313, 0.0625);} else {\nreturn vec2(0.132813, 0.660156);\n}\n}\n}} else {\nif(finalDist < 188) \n{\nif(finalDist < 186) \n{\nif(finalDist < 185) \n{\nreturn vec2(0.300781, 0.476563);} else {\nreturn vec2(0.558594, 0.324219);\n}} else {\nif(finalDist < 187) \n{\nreturn vec2(0.554688, 0.5625);} else {\nreturn vec2(0.0507813, 0.101563);\n}\n}} else {\nif(finalDist < 190) \n{\nif(finalDist < 189) \n{\nreturn vec2(0.625, 0.519531);} else {\nreturn vec2(0.636719, 0.816406);\n}} else {\nif(finalDist < 191) \n{\nreturn vec2(0.890625, 0.386719);} else {\nreturn vec2(0.0351563, 0.578125);\n}\n}\n}\n}\n}\n}} else {\nif(finalDist < 224) \n{\nif(finalDist < 208) \n{\nif(finalDist < 200) \n{\nif(finalDist < 196) \n{\nif(finalDist < 194) \n{\nif(finalDist < 193) \n{\nreturn vec2(0.375, 0.964844);} else {\nreturn vec2(0.253906, 0.210938);\n}} else {\nif(finalDist < 195) \n{\nreturn vec2(0.402344, 0.402344);} else {\nreturn vec2(0.726563, 0.792969);\n}\n}} else {\nif(finalDist < 198) \n{\nif(finalDist < 197) \n{\nreturn vec2(0.207031, 0.507813);} else {\nreturn vec2(0.871094, 0.722656);\n}} else {\nif(finalDist < 199) \n{\nreturn vec2(0.503906, 0.867188);} else {\nreturn vec2(0.507813, 0.21875);\n}\n}\n}} else {\nif(finalDist < 204) \n{\nif(finalDist < 202) \n{\nif(finalDist < 201) \n{\nreturn vec2(0.738281, 0.144531);} else {\nreturn vec2(0.902344, 0.847656);\n}} else {\nif(finalDist < 203) \n{\nreturn vec2(0.5, 0.957031);} else {\nreturn vec2(0.238281, 0.253906);\n}\n}} else {\nif(finalDist < 206) \n{\nif(finalDist < 205) \n{\nreturn vec2(0.8125, 0.179688);} else {\nreturn vec2(0.0898438, 0.414063);\n}} else {\nif(finalDist < 207) \n{\nreturn vec2(0.460938, 0.734375);} else {\nreturn vec2(0.488281, 0.0703125);\n}\n}\n}\n}} else {\nif(finalDist < 216) \n{\nif(finalDist < 212) \n{\nif(finalDist < 210) \n{\nif(finalDist < 209) \n{\nreturn vec2(0.707031, 0.828125);} else {\nreturn vec2(0.976563, 0.554688);\n}} else {\nif(finalDist < 211) \n{\nreturn vec2(0.0546875, 0.628906);} else {\nreturn vec2(0.523438, 0.0820313);\n}\n}} else {\nif(finalDist < 214) \n{\nif(finalDist < 213) \n{\nreturn vec2(0.148438, 0.335938);} else {\nreturn vec2(0.589844, 0.363281);\n}} else {\nif(finalDist < 215) \n{\nreturn vec2(0.0742188, 0.746094);} else {\nreturn vec2(0.980469, 0.777344);\n}\n}\n}} else {\nif(finalDist < 220) \n{\nif(finalDist < 218) \n{\nif(finalDist < 217) \n{\nreturn vec2(0.242188, 0.332031);} else {\nreturn vec2(0.125, 0.625);\n}} else {\nif(finalDist < 219) \n{\nreturn vec2(0.949219, 0.207031);} else {\nreturn vec2(0.363281, 0.796875);\n}\n}} else {\nif(finalDist < 222) \n{\nif(finalDist < 221) \n{\nreturn vec2(0.894531, 0.320313);} else {\nreturn vec2(0.410156, 0.96875);\n}} else {\nif(finalDist < 223) \n{\nreturn vec2(0.859375, 0.441406);} else {\nreturn vec2(0.199219, 0.0859375);\n}\n}\n}\n}\n}} else {\nif(finalDist < 240) \n{\nif(finalDist < 232) \n{\nif(finalDist < 228) \n{\nif(finalDist < 226) \n{\nif(finalDist < 225) \n{\nreturn vec2(0.289063, 0.433594);} else {\nreturn vec2(0.84375, 0.0546875);\n}} else {\nif(finalDist < 227) \n{\nreturn vec2(0.429688, 0.941406);} else {\nreturn vec2(0.953125, 0.640625);\n}\n}} else {\nif(finalDist < 230) \n{\nif(finalDist < 229) \n{\nreturn vec2(0.324219, 0.878906);} else {\nreturn vec2(0.875, 0.230469);\n}} else {\nif(finalDist < 231) \n{\nreturn vec2(0.269531, 0.453125);} else {\nreturn vec2(0.445313, 0.917969);\n}\n}\n}} else {\nif(finalDist < 236) \n{\nif(finalDist < 234) \n{\nif(finalDist < 233) \n{\nreturn vec2(0.910156, 0.0742188);} else {\nreturn vec2(0.339844, 0.546875);\n}} else {\nif(finalDist < 235) \n{\nreturn vec2(0.230469, 0.0507813);} else {\nreturn vec2(0.214844, 0.574219);\n}\n}} else {\nif(finalDist < 238) \n{\nif(finalDist < 237) \n{\nreturn vec2(0.804688, 0.710938);} else {\nreturn vec2(0.171875, 0.167969);\n}} else {\nif(finalDist < 239) \n{\nreturn vec2(0.109375, 0.882813);} else {\nreturn vec2(0.550781, 0.742188);\n}\n}\n}\n}} else {\nif(finalDist < 248) \n{\nif(finalDist < 244) \n{\nif(finalDist < 242) \n{\nif(finalDist < 241) \n{\nreturn vec2(0.453125, 0.4375);} else {\nreturn vec2(0.00390625, 0.300781);\n}} else {\nif(finalDist < 243) \n{\nreturn vec2(0.71875, 0.445313);} else {\nreturn vec2(0.308594, 0.0078125);\n}\n}} else {\nif(finalDist < 246) \n{\nif(finalDist < 245) \n{\nreturn vec2(0.570313, 0.921875);} else {\nreturn vec2(0.855469, 0.152344);\n}} else {\nif(finalDist < 247) \n{\nreturn vec2(0.03125, 0.226563);} else {\nreturn vec2(0.5625, 0.289063);\n}\n}\n}} else {\nif(finalDist < 252) \n{\nif(finalDist < 250) \n{\nif(finalDist < 249) \n{\nreturn vec2(0.316406, 0.765625);} else {\nreturn vec2(0.886719, 0.59375);\n}} else {\nif(finalDist < 251) \n{\nreturn vec2(0.710938, 0.617188);} else {\nreturn vec2(0.496094, 0.820313);\n}\n}} else {\nif(finalDist < 254) \n{\nif(finalDist < 253) \n{\nreturn vec2(0.296875, 0.0585938);} else {\nreturn vec2(0.808594, 0.464844);\n}} else {\nif(finalDist < 255) \n{\nreturn vec2(0.800781, 0.398438);} else {\nreturn vec2(0.640625, 0.265625);\n}\n}\n}\n}\n}\n}\n}\n}\nreturn vec2(0.0);\n}\n\nfloat randBlue(vec2 coord)\n{\n    int i = int(mod(coord.x, 16.0));\n    int j = int(mod(coord.y, 16.0));\n    int finalDist = j*16+i;\n\nif(finalDist < 128) \n{\nif(finalDist < 64) \n{\nif(finalDist < 32) \n{\nif(finalDist < 16) \n{\nif(finalDist < 8) \n{\nif(finalDist < 4) \n{\nif(finalDist < 2) \n{\nif(finalDist < 1) \n{\nreturn 0.28125;} else {\nreturn 0.136719;\n}} else {\nif(finalDist < 3) \n{\nreturn 0.433594;} else {\nreturn 0.03125;\n}\n}} else {\nif(finalDist < 6) \n{\nif(finalDist < 5) \n{\nreturn 0.550781;} else {\nreturn 0.15625;\n}} else {\nif(finalDist < 7) \n{\nreturn 0.714844;} else {\nreturn 0.222656;\n}\n}\n}} else {\nif(finalDist < 12) \n{\nif(finalDist < 10) \n{\nif(finalDist < 9) \n{\nreturn 0.835938;} else {\nreturn 0.488281;\n}} else {\nif(finalDist < 11) \n{\nreturn 0.792969;} else {\nreturn 0.390625;\n}\n}} else {\nif(finalDist < 14) \n{\nif(finalDist < 13) \n{\nreturn 0.878906;} else {\nreturn 0.65625;\n}} else {\nif(finalDist < 15) \n{\nreturn 0.117188;} else {\nreturn 0.542969;\n}\n}\n}\n}} else {\nif(finalDist < 24) \n{\nif(finalDist < 20) \n{\nif(finalDist < 18) \n{\nif(finalDist < 17) \n{\nreturn 0.203125;} else {\nreturn 0.511719;\n}} else {\nif(finalDist < 19) \n{\nreturn 0.925781;} else {\nreturn 0.296875;\n}\n}} else {\nif(finalDist < 22) \n{\nif(finalDist < 21) \n{\nreturn 0.746094;} else {\nreturn 0.480469;\n}} else {\nif(finalDist < 23) \n{\nreturn 0.988281;} else {\nreturn 0.382813;\n}\n}\n}} else {\nif(finalDist < 28) \n{\nif(finalDist < 26) \n{\nif(finalDist < 25) \n{\nreturn 0.628906;} else {\nreturn 0.300781;\n}} else {\nif(finalDist < 27) \n{\nreturn 0.984375;} else {\nreturn 0.0898438;\n}\n}} else {\nif(finalDist < 30) \n{\nif(finalDist < 29) \n{\nreturn 0.1875;} else {\nreturn 0.484375;\n}} else {\nif(finalDist < 31) \n{\nreturn 0.960938;} else {\nreturn 0.859375;\n}\n}\n}\n}\n}} else {\nif(finalDist < 48) \n{\nif(finalDist < 40) \n{\nif(finalDist < 36) \n{\nif(finalDist < 34) \n{\nif(finalDist < 33) \n{\nreturn 0.675781;} else {\nreturn 0.753906;\n}} else {\nif(finalDist < 35) \n{\nreturn 0.101563;} else {\nreturn 0.617188;\n}\n}} else {\nif(finalDist < 38) \n{\nif(finalDist < 37) \n{\nreturn 0.882813;} else {\nreturn 0.351563;\n}} else {\nif(finalDist < 39) \n{\nreturn 0.0625;} else {\nreturn 0.578125;\n}\n}\n}} else {\nif(finalDist < 44) \n{\nif(finalDist < 42) \n{\nif(finalDist < 41) \n{\nreturn 0.875;} else {\nreturn 0.152344;\n}} else {\nif(finalDist < 43) \n{\nreturn 0.722656;} else {\nreturn 0.472656;\n}\n}} else {\nif(finalDist < 46) \n{\nif(finalDist < 45) \n{\nreturn 0.6875;} else {\nreturn 0.289063;\n}} else {\nif(finalDist < 47) \n{\nreturn 0.0078125;} else {\nreturn 0.445313;\n}\n}\n}\n}} else {\nif(finalDist < 56) \n{\nif(finalDist < 52) \n{\nif(finalDist < 50) \n{\nif(finalDist < 49) \n{\nreturn 0.332031;} else {\nreturn 0.839844;\n}} else {\nif(finalDist < 51) \n{\nreturn 0.527344;} else {\nreturn 0.40625;\n}\n}} else {\nif(finalDist < 54) \n{\nif(finalDist < 53) \n{\nreturn 0.121094;} else {\nreturn 0.699219;\n}} else {\nif(finalDist < 55) \n{\nreturn 0.21875;} else {\nreturn 0.765625;\n}\n}\n}} else {\nif(finalDist < 60) \n{\nif(finalDist < 58) \n{\nif(finalDist < 57) \n{\nreturn 0.0195313;} else {\nreturn 0.234375;\n}} else {\nif(finalDist < 59) \n{\nreturn 0.585938;} else {\nreturn 0.261719;\n}\n}} else {\nif(finalDist < 62) \n{\nif(finalDist < 61) \n{\nreturn 0.921875;} else {\nreturn 0.8125;\n}} else {\nif(finalDist < 63) \n{\nreturn 0.539063;} else {\nreturn 0.132813;\n}\n}\n}\n}\n}\n}} else {\nif(finalDist < 96) \n{\nif(finalDist < 80) \n{\nif(finalDist < 72) \n{\nif(finalDist < 68) \n{\nif(finalDist < 66) \n{\nif(finalDist < 65) \n{\nreturn 0.96875;} else {\nreturn 0.0390625;\n}} else {\nif(finalDist < 67) \n{\nreturn 0.207031;} else {\nreturn 0.941406;\n}\n}} else {\nif(finalDist < 70) \n{\nif(finalDist < 69) \n{\nreturn 0.285156;} else {\nreturn 0.828125;\n}} else {\nif(finalDist < 71) \n{\nreturn 0.652344;} else {\nreturn 0.359375;\n}\n}\n}} else {\nif(finalDist < 76) \n{\nif(finalDist < 74) \n{\nif(finalDist < 73) \n{\nreturn 0.523438;} else {\nreturn 0.9375;\n}} else {\nif(finalDist < 75) \n{\nreturn 0.785156;} else {\nreturn 0.386719;\n}\n}} else {\nif(finalDist < 78) \n{\nif(finalDist < 77) \n{\nreturn 0.0351563;} else {\nreturn 0.726563;\n}} else {\nif(finalDist < 79) \n{\nreturn 0.378906;} else {\nreturn 0.644531;\n}\n}\n}\n}} else {\nif(finalDist < 88) \n{\nif(finalDist < 84) \n{\nif(finalDist < 82) \n{\nif(finalDist < 81) \n{\nreturn 0.402344;} else {\nreturn 0.71875;\n}} else {\nif(finalDist < 83) \n{\nreturn 0.601563;} else {\nreturn 0.742188;\n}\n}} else {\nif(finalDist < 86) \n{\nif(finalDist < 85) \n{\nreturn 0.441406;} else {\nreturn 0.046875;\n}} else {\nif(finalDist < 87) \n{\nreturn 0.46875;} else {\nreturn 0.160156;\n}\n}\n}} else {\nif(finalDist < 92) \n{\nif(finalDist < 90) \n{\nif(finalDist < 89) \n{\nreturn 0.824219;} else {\nreturn 0.292969;\n}} else {\nif(finalDist < 91) \n{\nreturn 0.492188;} else {\nreturn 0.125;\n}\n}} else {\nif(finalDist < 94) \n{\nif(finalDist < 93) \n{\nreturn 0.613281;} else {\nreturn 0.183594;\n}} else {\nif(finalDist < 95) \n{\nreturn 0.910156;} else {\nreturn 0.25;\n}\n}\n}\n}\n}} else {\nif(finalDist < 112) \n{\nif(finalDist < 104) \n{\nif(finalDist < 100) \n{\nif(finalDist < 98) \n{\nif(finalDist < 97) \n{\nreturn 0.078125;} else {\nreturn 0.871094;\n}} else {\nif(finalDist < 99) \n{\nreturn 0.257813;} else {\nreturn 0.535156;\n}\n}} else {\nif(finalDist < 102) \n{\nif(finalDist < 101) \n{\nreturn 0.105469;} else {\nreturn 0.972656;\n}} else {\nif(finalDist < 103) \n{\nreturn 0.582031;} else {\nreturn 0.914063;\n}\n}\n}} else {\nif(finalDist < 108) \n{\nif(finalDist < 106) \n{\nif(finalDist < 105) \n{\nreturn 0.671875;} else {\nreturn 0.0664063;\n}} else {\nif(finalDist < 107) \n{\nreturn 0.730469;} else {\nreturn 0.976563;\n}\n}} else {\nif(finalDist < 110) \n{\nif(finalDist < 109) \n{\nreturn 0.308594;} else {\nreturn 0.851563;\n}} else {\nif(finalDist < 111) \n{\nreturn 0.453125;} else {\nreturn 0.554688;\n}\n}\n}\n}} else {\nif(finalDist < 120) \n{\nif(finalDist < 116) \n{\nif(finalDist < 114) \n{\nif(finalDist < 113) \n{\nreturn 0.789063;} else {\nreturn 0.347656;\n}} else {\nif(finalDist < 115) \n{\nreturn 0.113281;} else {\nreturn 0.886719;\n}\n}} else {\nif(finalDist < 118) \n{\nif(finalDist < 117) \n{\nreturn 0.398438;} else {\nreturn 0.691406;\n}} else {\nif(finalDist < 119) \n{\nreturn 0.34375;} else {\nreturn 0.230469;\n}\n}\n}} else {\nif(finalDist < 124) \n{\nif(finalDist < 122) \n{\nif(finalDist < 121) \n{\nreturn 0.425781;} else {\nreturn 0.175781;\n}} else {\nif(finalDist < 123) \n{\nreturn 0.625;} else {\nreturn 0.410156;\n}\n}} else {\nif(finalDist < 126) \n{\nif(finalDist < 125) \n{\nreturn 0.558594;} else {\nreturn 0.0742188;\n}} else {\nif(finalDist < 127) \n{\nreturn 0.710938;} else {\nreturn 0.140625;\n}\n}\n}\n}\n}\n}\n}} else {\nif(finalDist < 192) \n{\nif(finalDist < 160) \n{\nif(finalDist < 144) \n{\nif(finalDist < 136) \n{\nif(finalDist < 132) \n{\nif(finalDist < 130) \n{\nif(finalDist < 129) \n{\nreturn 0.621094;} else {\nreturn 0.457031;\n}} else {\nif(finalDist < 131) \n{\nreturn 0.667969;} else {\nreturn 0.3125;\n}\n}} else {\nif(finalDist < 134) \n{\nif(finalDist < 133) \n{\nreturn 0.78125;} else {\nreturn 0.167969;\n}} else {\nif(finalDist < 135) \n{\nreturn 0.847656;} else {\nreturn 0.0117188;\n}\n}\n}} else {\nif(finalDist < 140) \n{\nif(finalDist < 138) \n{\nif(finalDist < 137) \n{\nreturn 0.769531;} else {\nreturn 0.570313;\n}} else {\nif(finalDist < 139) \n{\nreturn 0.890625;} else {\nreturn 0.00390625;\n}\n}} else {\nif(finalDist < 142) \n{\nif(finalDist < 141) \n{\nreturn 0.808594;} else {\nreturn 0.199219;\n}} else {\nif(finalDist < 143) \n{\nreturn 0.507813;} else {\nreturn 0.992188;\n}\n}\n}\n}} else {\nif(finalDist < 152) \n{\nif(finalDist < 148) \n{\nif(finalDist < 146) \n{\nif(finalDist < 145) \n{\nreturn 0.546875;} else {\nreturn 0.179688;\n}} else {\nif(finalDist < 147) \n{\nreturn 0.902344;} else {\nreturn 0.0507813;\n}\n}} else {\nif(finalDist < 150) \n{\nif(finalDist < 149) \n{\nreturn 0.53125;} else {\nreturn 0.269531;\n}} else {\nif(finalDist < 151) \n{\nreturn 0.589844;} else {\nreturn 0.949219;\n}\n}\n}} else {\nif(finalDist < 156) \n{\nif(finalDist < 154) \n{\nif(finalDist < 153) \n{\nreturn 0.496094;} else {\nreturn 0.273438;\n}} else {\nif(finalDist < 155) \n{\nreturn 0.144531;} else {\nreturn 0.339844;\n}\n}} else {\nif(finalDist < 158) \n{\nif(finalDist < 157) \n{\nreturn 0.679688;} else {\nreturn 0.375;\n}} else {\nif(finalDist < 159) \n{\nreturn 0.863281;} else {\nreturn 0.226563;\n}\n}\n}\n}\n}} else {\nif(finalDist < 176) \n{\nif(finalDist < 168) \n{\nif(finalDist < 164) \n{\nif(finalDist < 162) \n{\nif(finalDist < 161) \n{\nreturn 0.683594;} else {\nreturn 0.355469;\n}} else {\nif(finalDist < 163) \n{\nreturn 0.734375;} else {\nreturn 0.429688;\n}\n}} else {\nif(finalDist < 166) \n{\nif(finalDist < 165) \n{\nreturn 0.996094;} else {\nreturn 0.109375;\n}} else {\nif(finalDist < 167) \n{\nreturn 0.738281;} else {\nreturn 0.324219;\n}\n}\n}} else {\nif(finalDist < 172) \n{\nif(finalDist < 170) \n{\nif(finalDist < 169) \n{\nreturn 0.09375;} else {\nreturn 0.800781;\n}} else {\nif(finalDist < 171) \n{\nreturn 0.957031;} else {\nreturn 0.476563;\n}\n}} else {\nif(finalDist < 174) \n{\nif(finalDist < 173) \n{\nreturn 0.246094;} else {\nreturn 0.945313;\n}} else {\nif(finalDist < 175) \n{\nreturn 0.4375;} else {\nreturn 0.0546875;\n}\n}\n}\n}} else {\nif(finalDist < 184) \n{\nif(finalDist < 180) \n{\nif(finalDist < 178) \n{\nif(finalDist < 177) \n{\nreturn 0.929688;} else {\nreturn 0.015625;\n}} else {\nif(finalDist < 179) \n{\nreturn 0.242188;} else {\nreturn 0.820313;\n}\n}} else {\nif(finalDist < 182) \n{\nif(finalDist < 181) \n{\nreturn 0.597656;} else {\nreturn 0.195313;\n}} else {\nif(finalDist < 183) \n{\nreturn 0.640625;} else {\nreturn 0.414063;\n}\n}\n}} else {\nif(finalDist < 188) \n{\nif(finalDist < 186) \n{\nif(finalDist < 185) \n{\nreturn 0.707031;} else {\nreturn 0.371094;\n}} else {\nif(finalDist < 187) \n{\nreturn 0.609375;} else {\nreturn 0.757813;\n}\n}} else {\nif(finalDist < 190) \n{\nif(finalDist < 189) \n{\nreturn 0.0585938;} else {\nreturn 0.632813;\n}} else {\nif(finalDist < 191) \n{\nreturn 0.316406;} else {\nreturn 0.75;\n}\n}\n}\n}\n}\n}} else {\nif(finalDist < 224) \n{\nif(finalDist < 208) \n{\nif(finalDist < 200) \n{\nif(finalDist < 196) \n{\nif(finalDist < 194) \n{\nif(finalDist < 193) \n{\nreturn 0.164063;} else {\nreturn 0.464844;\n}} else {\nif(finalDist < 195) \n{\nreturn 0.660156;} else {\nreturn 0.894531;\n}\n}} else {\nif(finalDist < 198) \n{\nif(finalDist < 197) \n{\nreturn 0.320313;} else {\nreturn 0.460938;\n}} else {\nif(finalDist < 199) \n{\nreturn 0.917969;} else {\nreturn 0.855469;\n}\n}\n}} else {\nif(finalDist < 204) \n{\nif(finalDist < 202) \n{\nif(finalDist < 201) \n{\nreturn 0.214844;} else {\nreturn 0.0;\n}} else {\nif(finalDist < 203) \n{\nreturn 0.171875;} else {\nreturn 0.515625;\n}\n}} else {\nif(finalDist < 206) \n{\nif(finalDist < 205) \n{\nreturn 0.898438;} else {\nreturn 0.191406;\n}} else {\nif(finalDist < 207) \n{\nreturn 0.796875;} else {\nreturn 0.519531;\n}\n}\n}\n}} else {\nif(finalDist < 216) \n{\nif(finalDist < 212) \n{\nif(finalDist < 210) \n{\nif(finalDist < 209) \n{\nreturn 0.867188;} else {\nreturn 0.367188;\n}} else {\nif(finalDist < 211) \n{\nreturn 0.566406;} else {\nreturn 0.0703125;\n}\n}} else {\nif(finalDist < 214) \n{\nif(finalDist < 213) \n{\nreturn 0.128906;} else {\nreturn 0.777344;\n}} else {\nif(finalDist < 215) \n{\nreturn 0.0273438;} else {\nreturn 0.265625;\n}\n}\n}} else {\nif(finalDist < 220) \n{\nif(finalDist < 218) \n{\nif(finalDist < 217) \n{\nreturn 0.5;} else {\nreturn 0.773438;\n}} else {\nif(finalDist < 219) \n{\nreturn 0.90625;} else {\nreturn 0.304688;\n}\n}} else {\nif(finalDist < 222) \n{\nif(finalDist < 221) \n{\nreturn 0.0976563;} else {\nreturn 0.421875;\n}} else {\nif(finalDist < 223) \n{\nreturn 0.5625;} else {\nreturn 0.253906;\n}\n}\n}\n}\n}} else {\nif(finalDist < 240) \n{\nif(finalDist < 232) \n{\nif(finalDist < 228) \n{\nif(finalDist < 226) \n{\nif(finalDist < 225) \n{\nreturn 0.0820313;} else {\nreturn 0.980469;\n}} else {\nif(finalDist < 227) \n{\nreturn 0.277344;} else {\nreturn 0.703125;\n}\n}} else {\nif(finalDist < 230) \n{\nif(finalDist < 229) \n{\nreturn 0.503906;} else {\nreturn 0.328125;\n}} else {\nif(finalDist < 231) \n{\nreturn 0.636719;} else {\nreturn 0.574219;\n}\n}\n}} else {\nif(finalDist < 236) \n{\nif(finalDist < 234) \n{\nif(finalDist < 233) \n{\nreturn 0.953125;} else {\nreturn 0.363281;\n}} else {\nif(finalDist < 235) \n{\nreturn 0.449219;} else {\nreturn 0.664063;\n}\n}} else {\nif(finalDist < 238) \n{\nif(finalDist < 237) \n{\nreturn 0.816406;} else {\nreturn 0.964844;\n}} else {\nif(finalDist < 239) \n{\nreturn 0.0234375;} else {\nreturn 0.648438;\n}\n}\n}\n}} else {\nif(finalDist < 248) \n{\nif(finalDist < 244) \n{\nif(finalDist < 242) \n{\nif(finalDist < 241) \n{\nreturn 0.804688;} else {\nreturn 0.605469;\n}} else {\nif(finalDist < 243) \n{\nreturn 0.84375;} else {\nreturn 0.210938;\n}\n}} else {\nif(finalDist < 246) \n{\nif(finalDist < 245) \n{\nreturn 0.832031;} else {\nreturn 0.933594;\n}} else {\nif(finalDist < 247) \n{\nreturn 0.417969;} else {\nreturn 0.0859375;\n}\n}\n}} else {\nif(finalDist < 252) \n{\nif(finalDist < 250) \n{\nif(finalDist < 249) \n{\nreturn 0.695313;} else {\nreturn 0.148438;\n}} else {\nif(finalDist < 251) \n{\nreturn 0.0429688;} else {\nreturn 0.59375;\n}\n}} else {\nif(finalDist < 254) \n{\nif(finalDist < 253) \n{\nreturn 0.238281;} else {\nreturn 0.335938;\n}} else {\nif(finalDist < 255) \n{\nreturn 0.761719;} else {\nreturn 0.394531;\n}\n}\n}\n}\n}\n}\n}\n}    \n    return 0.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 uvMod = fragCoord.xy / iResolution.xy;\n    uvMod -= 0.5;\n    uvMod.y *= iResolution.y / iResolution.x;\n    uvMod.y += 0.05;\n\tvec2 fragCoordRescale = fragCoord.xy * 0.25 - fract(fragCoord.xy * 0.25);\n    vec2 fragCoordMod = mod(fragCoordRescale.xy, 16.0);\n    \n    float angle = 0.0;\n    float r = 0.0;\n    float time = fract(iTime/16.0)*16.0;\n    float NUM_SAMP = 8.0;\n    if ( iMouse.z > 0.0 )NUM_SAMP = 9.0-ceil(iMouse.y / iResolution.y * 8.0);\n    if ( iMouse.z > 0.0 ) time = iMouse.x / iResolution.x * 16.0;\n    \n    if (time > 2.0)\n    {\n        angle = Noise(fragCoordRescale.xy, 0.0);\n        r = rand(angle);\n    }\n    if (time > 4.0)\n    {\n        angle = randBlue(fragCoordMod.xy);\n        r = rand(angle);\n    }\n    if (time > 6.0)\n    {\n        vec2 b2 = randBlue2(fragCoordMod.xy);\n        angle = b2.x;\n        r = b2.y;\n    }\n    if (time > 8.0)\n    {    \n        angle = Step2(fragCoordMod.xy,0.0)+0.5;\n        r = Step2(fragCoordMod.xy,0.11)+0.5;\n    }\n\tif (time > 10.0)\n    {\n        angle = B16(fragCoordMod.xy)/ 256.0; \n        r = rand(angle);\n    }\n    if (time > 12.0)\n    {\n        angle = interleavedGradientNoise(fragCoordRescale.xy);\n        r = rand(angle);\n    }\n    if (time > 14.0)\n    {\n        vec2 noise_uv = (fragCoordRescale.xy + vec2(0.5)) / iChannelResolution[0].xy;\n        vec2 noise_sample = texture(iChannel0, noise_uv).xy;\n        angle = noise_sample.x;\n        r = noise_sample.y;\n    }\n    \n    float s = sin(angle * 2.0 * 3.1415926);\n    float c = cos(angle * 2.0 * 3.1415926);\n    \n    vec4 col = vec4(0);\n    vec2 animVec = uvMod + vec2(0.25*sin(0.5*iTime),0);\n    col+=sampleDist(animVec + vec2(s,c) * sqrt(r) * 0.1) ? vec4(1.0) : vec4(0.0);\n    if (NUM_SAMP > 1.0)\n    \tcol+=sampleDist(animVec - vec2(s,c) * sqrt(r) * 0.1) ? vec4(1.0) : vec4(0.0);\n    if (NUM_SAMP > 2.0)\n    \tcol+=sampleDist(animVec + vec2(c,s) * sqrt(r) * 0.1) ? vec4(1.0) : vec4(0.0);\n    if (NUM_SAMP > 3.0)\n    \tcol+=sampleDist(animVec - vec2(c,s) * sqrt(r) * 0.1) ? vec4(1.0) : vec4(0.0);\n    if (NUM_SAMP > 4.0)\n    col+=sampleDist(animVec + vec2(s,c) * sqrt(0.5*r) * 0.1) ? vec4(1.0) : vec4(0.0);\n    if (NUM_SAMP > 5.0)\n    col+=sampleDist(animVec - vec2(s,c) * sqrt(0.5*r) * 0.1) ? vec4(1.0) : vec4(0.0);\n    if (NUM_SAMP > 6.0)\n    col+=sampleDist(animVec + vec2(c,s) * sqrt(0.5*r) * 0.1) ? vec4(1.0) : vec4(0.0);\n    if (NUM_SAMP > 7.0)\n    col+=sampleDist(animVec - vec2(c,s) * sqrt(0.5*r) * 0.1) ? vec4(1.0) : vec4(0.0);\n\n    col *= 1.0/NUM_SAMP;\n    \n    col += sampleDistComp(uvMod, 0.0) ? vec4(1.0,0.0,0.0,0.0) : vec4(0.0);\n    col += sampleDistComp(uvMod, 0.1) ? vec4(0.0,1.0,0.0,0.0) : vec4(0.0);\n    \n    if (fragCoord.y / iResolution.y > 0.8)\n    {\n        col = vec4(angle, r, 0, 0);\n    }\n\n    fragColor = col;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}