{
    "Shader": {
        "info": {
            "date": "1487625963",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "XdXyDr",
            "likes": 4,
            "name": "peace & love (112 chars)",
            "published": 3,
            "tags": [
                "onetweet",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 663
        },
        "renderpass": [
            {
                "code": "#define C  .05 / abs(length(U//\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2 R = iResolution.xy,\n         U = ( u+u - R ) / R.y;\n    O += 1. - C) - .9 )\n            - C.x)    )\n            - C.x)+U.y);}           /*\n             \n\n// --- 132 chars\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U= (U+U -(O.xy=iResolution.xy))/O.y ; // Windows doesn't compile correctly if injected in length(U)\n    O += 1. -O\n       - .05/abs(length(U) -.9)\n       - .05/abs(U.x) - .06/abs(abs(U.x)+U.y);\n\n // O.r = max(O.r,.5); // variant 1: red graffiti look\n // O *= O;            // variant 2: a neat white version automagically appears\n}\n\n\n\n/**    // 144 chars\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = vec4(    abs(length(U= (U+U -(O.xy=iResolution.xy)) / O.y)-.9) > .1 \n              && abs(U.x)>.1 \n              && ( abs(abs(U.x)+U.y)>.13 || U.y<-.64) );\n}\n/**/\n\n\n\n/**    // 153 chars\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n\tU = (U+U -(O.xy=iResolution.xy)) / O.y;\n    U.x = abs(U.x);\n  \n    O = vec4(U.x>.1 && ( abs(1.5*U.x+U.y)>.15 || U.y<-.75) && abs(length(U)-.9)>.1);\n}\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}