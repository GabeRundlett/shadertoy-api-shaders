{
    "Shader": {
        "info": {
            "date": "1613126617",
            "description": "A fire shader.",
            "flags": 0,
            "hasliked": 0,
            "id": "WtcBzX",
            "likes": 4,
            "name": "White Fire",
            "published": 3,
            "tags": [
                "2d",
                "noise",
                "flame",
                "fire",
                "perlin"
            ],
            "usePreview": 0,
            "username": "moranzcw",
            "viewed": 383
        },
        "renderpass": [
            {
                "code": "// White Fire - by moranzcw - 2021\n// Email: moranzcw@gmail.com\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\nfloat rand(vec2 co)\n{\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat hermite(float t)\n{\n  return t * t * (3.0 - 2.0 * t);\n}\n\nfloat noise(vec2 co, float frequency)\n{\n  vec2 v = vec2(co.x * frequency, co.y * frequency);\n\n  float ix1 = floor(v.x);\n  float iy1 = floor(v.y);\n  float ix2 = floor(v.x + 1.0);\n  float iy2 = floor(v.y + 1.0);\n\n  float fx = hermite(fract(v.x));\n  float fy = hermite(fract(v.y));\n\n  float fade1 = mix(rand(vec2(ix1, iy1)), rand(vec2(ix2, iy1)), fx);\n  float fade2 = mix(rand(vec2(ix1, iy2)), rand(vec2(ix2, iy2)), fx);\n\n  return mix(fade1, fade2, fy);\n}\n\nfloat perlinNoise(vec2 co, float freq, int steps, float persistence)\n{\n  float value = 0.0;\n  float ampl = 1.0;\n  float sum = 0.0;\n  for(int i=0 ; i<steps ; i++)\n  {\n    sum += ampl;\n    value += noise(co, freq) * ampl;\n    freq *= 2.0;\n    ampl *= persistence;\n  }\n  return value / sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    // Flame color.\n    vec4 firstColor = vec4(vec3(0.8), 1.0);\n    vec4 secondColor = vec4(vec3(0.9), 1.0);\n    vec4 thirdColor = vec4(vec3(1.0), 1.0);\n    \n    // Uniform scale the coordinates for sampling perlin noise.\n    vec2 pos = fragCoord.xy / iResolution.y;\n    pos.y -= iTime * 0.2;\n    \n    // Perlin noise.\n    float noiseTexel = perlinNoise(pos, 10.0, 5, 0.5);\n    \n    // BackGround color.\n    vec4 color = vec4(vec3(0.7),1.0);\n    \n    // Outer flame.\n    float firstStep = step(noiseTexel, 1.2 - uv.y);\n    color = mix(color, firstColor, firstStep);\n    \n    // Middel flame.\n    float secondStep = step(noiseTexel, pow(1.1 - uv.y,1.3));\n    color = mix(color, secondColor, secondStep);\n    \n    // Inner Flame\n    float thirdStep = step(noiseTexel, pow(1.0 - uv.y, 1.8));\n    color = mix(color, thirdColor, thirdStep);\n    \n\tfragColor = color;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}