{
    "Shader": {
        "info": {
            "date": "1585075024",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "tsscRB",
            "likes": 3,
            "name": "Dying light",
            "published": 3,
            "tags": [
                "shadow",
                "light",
                "minimalism"
            ],
            "usePreview": 0,
            "username": "rrrzzz",
            "viewed": 257
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926535897932384626433832795\n#define TWO_PI 6.283185307179586476925286766559\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 st = fragCoord.xy/iResolution.x;     \n    //0.02 - 0.4\n\n    \n    float stp = smoothstep(0.0, 1.0, mod(iTime / 20.0 , 2.0));\n    float dis = (1.0 - stp) * 0.38 + 0.009;\n    \n\n   //if (dis < 0.01) dis = 0.01;\n\n    \n    float currentDegree = TWO_PI * mod(iTime/4.0, 1.0);\n    float x = cos(currentDegree) * dis;\n    float y = sin(currentDegree) * dis;\n    \n    //0.7 - 20.0\n    stp = smoothstep(0.0, 1.0, mod(iTime / 40.0 , 1.0));\n    float lght = stp * 20.3 + 0.7;\n    float pct = pow(distance(st,vec2(0.4)), distance(st,vec2(x + 0.4, y + 0.4))*lght);\n\n    \n    vec3 color = vec3(pct);\n    float m = smoothstep(0.0, 0.01, stp);\n\tcolor = vec3(mix(1.0, pct, m));\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}