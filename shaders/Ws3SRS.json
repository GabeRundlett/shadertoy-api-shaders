{
    "Shader": {
        "info": {
            "date": "1572222174",
            "description": "A simple particle fireworks with a slight shimmering effect. A quick and dirty mock up to celebrate the Indian festival of lights. Happy Diwali everyone!",
            "flags": 0,
            "hasliked": 0,
            "id": "Ws3SRS",
            "likes": 54,
            "name": "Happy Diwali 2019",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "light",
                "fireworks",
                "particle"
            ],
            "usePreview": 0,
            "username": "piyushslayer",
            "viewed": 3664
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592653589793\n\n#define EXPLOSION_COUNT 8.\n#define SPARKS_PER_EXPLOSION 128.\n#define EXPLOSION_DURATION 20.\n#define EXPLOSION_SPEED 5.\n#define EXPLOSION_RADIUS_THESHOLD .06\n\n// Hash function by Dave_Hoskins.\n#define MOD3 vec3(.1031,.11369,.13787)\nvec3 hash31(float p) {\n   vec3 p3 = fract(vec3(p) * MOD3);\n   p3 += dot(p3, p3.yzx + 19.19);\n   return fract(vec3((p3.x + p3.y) * p3.z, (p3.x + p3.z) * p3.y, (p3.y + p3.z) * p3.x));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float aspectRatio = iResolution.x / iResolution.y;\n    vec2 uv = fragCoord / iResolution.y;\n    float t = mod(iTime + 10., 7200.);;\n\tvec3 col = vec3(0.); \n    vec2 origin = vec2(0.);\n    \n    for (float j = 0.; j < EXPLOSION_COUNT; ++j)\n    {\n        vec3 oh = hash31((j + 1234.1939) * 641.6974);\n        origin = vec2(oh.x, oh.y) * .6 + .2; // .2 - .8 to avoid boundaries\n        origin.x *= aspectRatio;\n        // Change t value to randomize the spawning of explosions\n        t += (j + 1.) * 9.6491 * oh.z;\n        for (float i = 0.; i < SPARKS_PER_EXPLOSION; ++i)\n    \t{\n            // Thanks Dave_Hoskins for the suggestion\n            vec3 h = hash31(j * 963.31 + i + 497.8943);\n            // random angle (0 - 2*PI)\n            float a = h.x * PI * 2.;\n            // random radius scale for spawning points anywhere in a circle\n            float rScale = h.y * EXPLOSION_RADIUS_THESHOLD;\n            // explosion loop based on time\n            if (mod(t * EXPLOSION_SPEED, EXPLOSION_DURATION) > 2.)\n            {\n                // random radius \n                float r = mod(t * EXPLOSION_SPEED, EXPLOSION_DURATION) * rScale;\n                // explosion spark polar coords \n                vec2 sparkPos = vec2(r * cos(a), r * sin(a));\n               \t// sparkPos.y -= pow(abs(sparkPos.x), 4.); // fake gravity\n                // fake-ish gravity\n                float poopoo = 0.04;\n                float peepee = (length(sparkPos) - (rScale - poopoo)) / poopoo;\n                sparkPos.y -= pow(peepee, 3.0) * 6e-5;\n                // shiny spark particles\n                float spark = .0002/pow(length(uv - sparkPos - origin), 1.65);\n                // Make the explosion spark shimmer/sparkle\n                float sd = 2. * length(origin-sparkPos);\n                float shimmer = max(0., sqrt(sd) * (sin((t + h.y * 2. * PI) * 20.)));\n                float shimmerThreshold = EXPLOSION_DURATION * .32;\n                // fade the particles towards the end of explosion\n                float fade = max(0., (EXPLOSION_DURATION - 5.) * rScale - r);\n                // mix it all together\n                col += spark * mix(1., shimmer, smoothstep(shimmerThreshold * rScale,\n\t\t\t\t\t(shimmerThreshold + 1.) * rScale , r)) * fade * oh;\n            }\n    \t}\n    }\n    \n    // evening-sh background gradient\n    col = max(vec3(.1), col);\n    col += vec3(.12, .06, .02) * (1.-uv.y);\n    fragColor = vec4(col, 1.0);\n} ",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}