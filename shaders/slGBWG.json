{
    "Shader": {
        "info": {
            "date": "1665147529",
            "description": "Colorful hex shader",
            "flags": 0,
            "hasliked": 0,
            "id": "slGBWG",
            "likes": 1,
            "name": "COLORFUL HEX SHADER",
            "published": 3,
            "tags": [
                "color",
                "hex"
            ],
            "usePreview": 0,
            "username": "ALESHADER",
            "viewed": 216
        },
        "renderpass": [
            {
                "code": "#define SQRT3 1.73\n\nfloat hexDist(vec2 coord)\n{\n    coord = abs(coord);\n    float d = max(dot(coord, normalize(vec2(SQRT3, 1))), coord.y);\n    return d;\n}\n\nvec4 hexCoord(vec2 coord, float size)\n{\n    coord *= size;\n\n    vec2 r = vec2(SQRT3, 1);\n    vec2 h = r * 0.5;\n    vec2 a = mod(coord, r) - h;\n    vec2 b = mod(coord - h, r) - h;\n    \n    vec2 hx;\n    if (length(a) < length(b)) hx = a;\n    else hx = b;\n    \n    float x = 0.5 - hexDist(hx);\n    float y = atan(hx.y, hx.x);\n    vec2 id = coord - hx;\n    return vec4(x, y, id.x, id.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * 0.5) / min(iResolution.x, iResolution.y) * 2.0;\n    vec3 col1 = 0.5 + 0.5*sin(iTime+uv.xyx+vec3(0,2,4));\n    vec3 col2 = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float size = sin(iTime * 0.5) * 2.0 + 8.0;\n    vec2 pos = vec2(cos(iTime * 0.3) * 4.0, cos(iTime * 0.3 + 45.0) * 4.0);\n    vec4 cd = hexCoord(uv + pos * 0.1, size);\n    vec3 col = mix(col1, col2, (cd.z + cd.w) / 2.0 / size + 0.5);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}