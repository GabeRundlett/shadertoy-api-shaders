{
    "Shader": {
        "info": {
            "date": "1620900139",
            "description": "Quicky done in the ICE, slight difference from Bonzo (mainly texFFT)",
            "flags": 0,
            "hasliked": 0,
            "id": "7sBSWG",
            "likes": 5,
            "name": "大龙猫 - Quicky#052",
            "published": 3,
            "tags": [
                "quicky"
            ],
            "usePreview": 0,
            "username": "totetmatt",
            "viewed": 287
        },
        "renderpass": [
            {
                "code": "#define fGlobalTime iTime\nmat2 rot(float a){float c=cos(a),s=sin(a);return mat2(c,-s,s,c);}\n#define flikflok(t) (floor(t)+pow(fract(t),.25))\nvec2 sdf(vec3 p) {\n  float bt = iTime*.5;\n  float bt3 = iTime*.33;\n   p.z +=floor(bt3*10.);\n   p.xy *=rot(p.z*.785*.1);\n  vec3 op = p;    \n  float tt = texture(iChannel1,p.xz*.1).r*.1;\n\n    vec2 h;\n    vec3 pp = p;\n    p = abs(p)-1.5;\n    h.x = length(p)-1.;\n  p.xy = abs(p.x) < abs(p.y)  ?p.yx:p.xy;\n  \n  \n    p.xz/=3.;\n    p.xz = asin(sin(p.zx));\n    p.xz*=3.;\n    h.x = min(h.x,length(p.xz)-.5-clamp(cos(abs(p.y)*4.+fGlobalTime*180./60.*4.),-.25+sin(p.y*10.)*.1,.25)*.4);   \n     h.y = 1.;\n      h.x*=.7;\n   return h;\n}\nvec2 nv=vec2(-.001,.001);\n#define q(s) s*sdf(p+s).x\nvec3 norm(vec3 p){return normalize(q(nv.xyy)+q(nv.yxy)+q(nv.yyx)+q(nv.xxx));}\nvec3 pal(float t){return .5+.5*cos(6.28*(1.*t+vec3(0.,.3,.7)));}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    float tt = fract(iTime);\n  vec3 bcol = log(1.+tt*100.11)*pal(.5+uv.x);\n  \n  float ttt =texture(iChannel1,uv*10.).r;\n  float pp = fract(iTime);\n\t\n  \n  vec3 ro=vec3(0.,0.,-5.),rd=normalize(vec3(uv,1.-pp*ttt)),rp=ro;\n  vec3 light = vec3(1.,2.,-3.);\n  vec3 acc = vec3(0.);\n  vec3 col =vec3(0.);\n  for(float i=0.;i<=69.;i++){\n      vec2 d = sdf(rp);\n    \n        \n          acc+=mix(vec3(1.,.7,.2),vec3(.1,.5,.7),step(.5,i/69.))*exp(20.*-abs(d.x))/(10.);\n            \n       if(d.x<=0.005){\n         vec3 n = norm(rp);\n        col *= vec3(1.)*max(0.,dot(n,normalize(light-rp)));\n      \n        break;\n        }\n        rp+=rd*d.x;\n   }\n  col +=acc;\n \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}