{
    "Shader": {
        "info": {
            "date": "1602486631",
            "description": "Shader desc",
            "flags": 32,
            "hasliked": 0,
            "id": "WsKyzw",
            "likes": 8,
            "name": "Fractalized Voronoi",
            "published": 3,
            "tags": [
                "fractal",
                "voronoi"
            ],
            "usePreview": 0,
            "username": "milesWaugh",
            "viewed": 344
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord){\n    fragColor = texture(iChannel0,fragCoord.xy/iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 random(float px,float py,float seed){\n    float x = fract(sin(dot(vec3(px,py,seed), vec3(45.84018476, 94.30285684, 33.52930515))) * 23859.2590);\n    float y = fract(sin(dot(vec3(px,py,seed), vec3(96.95283515, 23.59403928, 59.59203951))) * 96834.1853);\n    return vec2(x, y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord/iResolution.x;\n    float d = iResolution.x;\n    float dsum = 0.;\n    d*=d;\n    for(float scale=2.; iResolution.x/scale>1.; scale*=2.){\n        for(float i=-1.; i<2.; i++){\n            for(float j=-1.; j<2.; j++){\n                uv = fragCoord/iResolution.x;\n                uv+=iTime/60.;\n                vec2 uv2 = uv + vec2(i,j)/scale;\n                vec2 pos = random(floor(uv2.x*scale),floor(uv2.y*scale),0.);\n                vec2 d2 = pos-vec2(uv.x*scale-floor(uv2.x*scale), uv.y*scale-floor(uv2.y*scale));\n                d = min(dot(d2,d2),d);\n            }\n        }\n        dsum += d/(scale+5.);\n    }\n    fragColor = vec4(vec3(pow(dsum*5.0,0.9)),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}