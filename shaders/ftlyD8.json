{
    "Shader": {
        "info": {
            "date": "1647922765",
            "description": "Not sure what this is, but it's different",
            "flags": 0,
            "hasliked": 0,
            "id": "ftlyD8",
            "likes": 4,
            "name": "Hole Thing 9023420",
            "published": 3,
            "tags": [
                "e"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 240
        },
        "renderpass": [
            {
                "code": "vec3 getCol(vec2 uv, float sc) {\n    vec2 ipos = floor(sc * uv);\n    vec3 e = vec3(0.5);\n    vec3 col = pal(h21(ipos), e, e, e, vec3(0,1,2)/3.);\n    \n    float m = 1.; // 0.5 looks interesting too    \n    const float n = 5.;\n    for (float i = 0.; i < n; i++) {\n        m *= 2.;\n        ipos = floor(m * sc * uv);\n        float h = h21(ipos);\n        col = mix(col, \n                  pal(h + 2. * i / n, e, e, e, col), \n                  0.5 + 0.5 * thc(4., 2. * pi * h + uv.y - 0.25 * iTime));\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    uv += vec2(0.1,0.04) * iTime;\n    \n    float sc = 1.5;\n    \n    vec3 col = vec3(0.);\n    \n    float o = 1./(sc*80.);\n    col = max(col, getCol(uv + vec2(0, o),  sc));\n    col = max(col, getCol(uv + vec2(0, -o), sc));\n    col = max(col, getCol(uv + vec2(o, 0),  sc));\n    col = max(col, getCol(uv + vec2(-o, 0), sc));\n    \n    col = exp(-1.5 * col);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define pi 3.14159\n\n#define thc(a,b) tanh(a*cos(b))/tanh(a)\n#define ths(a,b) tanh(a*sin(b))/tanh(a)\n#define sabs(x) sqrt(x*x+0.0001)\n//#define sabs(x, k) sqrt(x*x+k)-0.1\n\n#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\nfloat cc(float a, float b) {\n    float f = thc(a, b);\n    return sign(f) * pow(abs(f), 0.25);\n}\n\nfloat cs(float a, float b) {\n    float f = ths(a, b);\n    return sign(f) * pow(abs(f), 0.25);\n}\n\nvec3 pal(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d) {\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat h21(vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat mlength(vec2 uv) {\n    return max(abs(uv.x), abs(uv.y));\n}\n\nfloat mlength(vec3 uv) {\n    return max(max(abs(uv.x), abs(uv.y)), abs(uv.z));\n}\n\nfloat smin(float a, float b)\n{\n    float k = 0.03;\n    float h = clamp(0.5 + 0.5 * (b-a) / k, 0.0, 1.0);\n    return mix(b, a, h) - k * h * (1.0 - h);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}