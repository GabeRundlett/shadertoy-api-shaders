{
    "Shader": {
        "info": {
            "date": "1710059675",
            "description": "Someone made a nice color spectrum, but it wasn't really vibrant. I mean, you can't plot 3 values on a 2d space, but if we ignore tones of colors (adding grey), we can.",
            "flags": 0,
            "hasliked": 0,
            "id": "XXfXDf",
            "likes": 0,
            "name": "Vibrant color spectrum",
            "published": 3,
            "tags": [
                "spectrum",
                "color"
            ],
            "usePreview": 0,
            "username": "LeifMessinger",
            "viewed": 136
        },
        "renderpass": [
            {
                "code": "//Unused here\nvec3 rgb2hsb( in vec3 c ){\n    vec4 K = vec4(0.0,-1.0 / 3.0,2.0 / 3.0,-1.0);\n    vec4 p = mix(vec4(c.bg,K.wz),vec4(c.gb,K.xy),step(c.b,c.g));\n    vec4 q = mix(vec4(p.xyw,c.r),vec4(c.r,p.yzx),step(p.x,c.r));\n    float d = q.x - min(q.w,q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)),d / (q.x + e),q.x);\n}\n\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0,4.0,2.0),6.0)-3.0)-1.0,0.0,1.0);\n    rgb = rgb * rgb * (3.0 -2.0 * rgb);\n    return c.z * mix(vec3(1.0),rgb,c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 hsv = (uv.y < .5)? vec3(uv.x,1.0,(uv.y * 2.0)) : vec3(uv.x,2.0 - (uv.y * 2.0),1.0);\n\n    vec3 color = hsb2rgb(hsv);\n    float alpha = 1.0;   \n    fragColor = vec4(color,alpha);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}