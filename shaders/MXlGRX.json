{
    "Shader": {
        "info": {
            "date": "1707775325",
            "description": "Simple Conical Gradient",
            "flags": 0,
            "hasliked": 0,
            "id": "MXlGRX",
            "likes": 2,
            "name": "Simple Conical Gradient",
            "published": 3,
            "tags": [
                "gradient",
                "cone",
                "conical"
            ],
            "usePreview": 0,
            "username": "zadkielmodeler",
            "viewed": 144
        },
        "renderpass": [
            {
                "code": "#define PI acos(-1.0)\n\nfloat conicalGradient(vec2 uv, vec2 center) {\n    vec2 offset = uv - center;\n    return atan(-offset.y, -offset.x) / (2.0 * PI) + 0.5;\n}\n\n\nvec3 conicalColor (vec2 uv)\n{\n    vec2 center = vec2(0,0);\n    uv -= 0.5;\n    uv *= 2.0;\n    \n    //fix for aspect ratio.\n    uv.x *= iResolution.x / iResolution.y;\n    float conical = conicalGradient(uv, center);\n\n    vec3 col = vec3(1.0-conical,0,0);\n    return col;\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    //vec2 tileduv = tile(uv);\n\n    vec3 color = conicalColor(uv);\n    \n    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}