{
    "Shader": {
        "info": {
            "date": "1500173000",
            "description": "Abstract Clouds",
            "flags": 0,
            "hasliked": 0,
            "id": "4dSBW1",
            "likes": 10,
            "name": "[SH17A] Abstract Clouds",
            "published": 3,
            "tags": [
                "clouds",
                "abstract"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 712
        },
        "renderpass": [
            {
                "code": "/* based on my shader : https://www.shadertoy.com/view/XlSSzV \njust use df based on cos, sin instead of iq 3d noise */\n\nvoid mainImage( out vec4 f, vec2 g )\n{\n    vec3 \n        s = iResolution,\n        r = vec3(g+g-s.xy,s.y),\n    \tk=s,//+iTime,\n        q;\n    \n    k.z = iTime;\n    \n\tfloat d,u,c,i;\n    \n    for(d=u=i=0.;i<1.;i+=.004)\n\t{      \n        // the normalize here is costly but just for have less chars :)\n\t\tq = k + r/length(r) * d * .3;\n\n        // from shane but formula used also in sculpture III :) \n        c = length(cos(q+sin(q.zxy*3.)*.5)) - 1.;\n        // give a sort of latice :) : c = length(cos(q.zxy+sin(q.zxy*3.)*.5)) - 1.;\n        \n        if(u>.9) break;\n        \n        // better if (c < .1) u += (1.-u) * (.1-c) * i;\n        if (c < .1) u += (.1-c) * i; \t\t\t\t\t\n        \n        u += .005; \t\t\t\t\t\t\t\t\t\t\n        \n        d += max(c * .6, .05);\t\t\t\t\t\t\t\n   \t}\n    \n\tf -= f - exp(-d*d/1e3)/i/7.;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}