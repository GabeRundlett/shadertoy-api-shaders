{
    "Shader": {
        "info": {
            "date": "1436024009",
            "description": "cf new version here: [url]https://www.shadertoy.com/view/XtlcWX[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "llsXWr",
            "likes": 20,
            "name": "array of threads - 168 chars",
            "published": 3,
            "tags": [
                "2d",
                "2tweets",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 2086
        },
        "renderpass": [
            {
                "code": "// 168 chars\n#define L  ;for(float i=0.; i<=2.; i+=.1) f+= (i*i-i+.5)/2e2/abs(i*(u.y-u.x-i)+i-u.y);\n\nvoid mainImage( out vec4 f, vec2 u ) {\n    f-=f;\n    u = fract(abs(2.*u/iResolution.y -vec2(1.8,1)))  // also interesting without either fract or abs\n    L\n    u = 1.-u \n    L\n\n  // f*= abs(sin(u.y*1e2)); f.rb*=0.;   // old raster-screen fashion \n} \n\n\n\n\n\n\n\n\n\n/* // 179 chars\n#define L(u)   (i*i-i+.5)/2e2/abs(i*(u.y-u.x-i)+i-u.y)\n\nvoid mainImage( inout vec4 f, vec2 u ) {\n    u = fract(abs(2.*u/iResolution.y -vec2(1.8,1)));  // also interesting without either fract or abs\n    for (float i=0.; i<=2.; i+=.1)\n        f += L(u) + L((1.-u));\n\n  // f*= abs(sin(u.y*1e2)); f.rb*=0.;   // old raster-screen fashion \n} \n*/\n\n\n\n\n\n/*    // 185 chars\n\n//#define L(u)  f+=            dot(V,V)/4e2/abs(-i*(u-V).x-(u).y*V.x);\n  #define L(u)  f+=     (2.*i*i-i-i+1.)/4e2/abs(i*(u.y-u.x-i)+i-u.y);\n\nvoid mainImage( inout vec4 f, vec2 u ) {\n    u = fract(abs(2.*u/iResolution.y -vec2(1.8,1)));\n\n    for (float i=0.; i<=2.; i+=.1) {\n        L(u) L((1.-u))\n\t}\n    \n    // f*= abs(sin(u.y*1e2)); f.rb*=0.;   // old raster screen fashion \n}\n*/\n\n\n\n\n/* //  252 - 237 - 198 chars\n\n//#define L(u)  f+= v*(l-v)<0. ? 0. : smoothstep(.01,.0,abs(-i*(u-V).x-(u).y*V.x)/l);  // 252 chars \n  #define L(u)  f+= v*(l-v)<0. ? 0. : l/4e2/abs(-i*(u-V).x-(u).y*V.x);      //237 chars \n//#define L(u)  f+=            dot(V,V)/4e2/abs(-i*(u-V).x-(u).y*V.x);    // 198 chars (+ 1 comment below)\n\nvoid mainImage( inout vec4 f, vec2 u ) {\n    u = fract(abs(2.*u/iResolution.y -vec2(1.8,1)));\n\n    for (float i=0.; i<=2.; i+=.1) {\n      \tvec2  V = vec2(1,0)-i;   // +.1*fract(iDate.w); // if you want some anim\n        float l = dot(V,V), v = dot(u,V)+i*i;  // -- comment for the 198 chars version\n        L(u) L((1.-u))\n\t}\n    \n    // f*= abs(sin(u.y*1e2)); f.rb*=0.;   // old raster screen fashion \n}\n*/\n\n\n\n\n/* // 269 chars\n\nfloat D(vec2 u, vec2 A) {   // draw line A\n    u.y += A.y; \n    float v = dot(u,A/=dot(A,A));\n    return v-v*v<0. ? 0. :\n       smoothstep(.01,.0,abs(u.x*A.y-u.y*A.x));  // should be /sqrt(l) but look same\n    // 8e-4/abs(u.x*A.y-u.y*A.x)/l;  // should be /sqrt(l) but look same\n}\n \nvoid mainImage( inout vec4 f, vec2 u ) {\n    u = fract(abs(2.*u/iResolution.y -vec2(1.8,1)));\n\n    for (float i=0.; i<=2.; i+=.1) {\n      \tvec2  V = vec2(1,0)-i;   // +.1*fract(iDate.w); // if you want some anim\n        f +=  D(u, V)+ D(1.-u, V);\n    }\n\n    // f*= abs(sin(u.y*1e2)); f.rb*=0.;   // old raster screen fashion \n}\n*/\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}