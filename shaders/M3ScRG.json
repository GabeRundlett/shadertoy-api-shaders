{
    "Shader": {
        "info": {
            "date": "1727365286",
            "description": "originals fractal 62",
            "flags": 0,
            "hasliked": 0,
            "id": "M3ScRG",
            "likes": 1,
            "name": "fractal caleidoscope # 20",
            "published": 3,
            "tags": [
                "fractal",
                "fly"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 56
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*5.5+.5)\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    vec3 p,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<70.;\n        O.xyz+=mix(vec3(.1,0.1,1.),H(g*.1),.8)*10./e/8e3\n    )\n    {\n        p=g*d;\n   p.z-=iTime*5.;\n        a=30.;\n        p=mod(p-a,a*2.)-a;\n        s=2.;\n        p.z+=pow(p.z,2.);\n        p.xy+=mod(p.xy,p.xy*1.);\n           p.xy*=ceil(length(p.xy));\n            p.xz*=cos(iTime*1.1+length(p.xy));\n        for(int i=0;i++<7;){\n            p=.03-abs(p);\n           p.xy+=cos(iTime*0.5+length(p.xz));\n            p.x<p.z?p=p.zyx:p;\n            p.z<p.y?p=p.xzy:p;\n            s*=e=1.7+sin(iTime*.01)*.1;\n            \n            p=abs(p)*e-\n                vec3(\n                    10.*3.,\n                    120.+sin(iTime*.5),\n                    8.+cos(iTime*.5)*5.\n                 );\n         }\n         \n         g+=e=length(p.yzzz)/s;\n    }\n}\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}