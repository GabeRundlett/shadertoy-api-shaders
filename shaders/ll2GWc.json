{
    "Shader": {
        "info": {
            "date": "1433277959",
            "description": "A simple solarization filter",
            "flags": 0,
            "hasliked": 0,
            "id": "ll2GWc",
            "likes": 5,
            "name": "Filter: Solarization",
            "published": 3,
            "tags": [
                "solarization"
            ],
            "usePreview": 0,
            "username": "4rknova",
            "viewed": 994
        },
        "renderpass": [
            {
                "code": "// by Nikos Papadopoulos, 4rknova / 2015\n// WTFPL\n\n#define THRESHOLD vec3(1.,.92,.1)\n\nvec3 texsample(in vec2 uv)\n{\n    return texture(iChannel0, uv).xyz;\n}\n\nvec3 texfilter(in vec2 uv)\n{\n    vec3 val = texsample(uv);\n    if (val.x < THRESHOLD.x) val.x = 1. - val.x;\n    if (val.y < THRESHOLD.y) val.y = 1. - val.y;\n    if (val.z < THRESHOLD.z) val.z = 1. - val.z;\n\treturn val;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y = 1. - uv.y;\n    \n    float m = iMouse.x / iResolution.x;\n    \n    float l = smoothstep(0., 1. / iResolution.y, abs(m - uv.x));\n    \n    vec3 cf = texfilter(uv);\n    vec3 cl = texsample(uv);\n    vec3 cr = (uv.x < m ? cl : cf) * l;\n    \n    fragColor = vec4(cr, 1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}