{
    "Shader": {
        "info": {
            "date": "1715537168",
            "description": "Etude composed by Easely Blackwood\nGraphics inspired by Smalin",
            "flags": 40,
            "hasliked": 0,
            "id": "4cKSR3",
            "likes": 10,
            "name": "17Tet Microtonal Etude",
            "published": 3,
            "tags": [
                "music",
                "audio",
                "microtonal"
            ],
            "usePreview": 0,
            "username": "incription",
            "viewed": 241
        },
        "renderpass": [
            {
                "code": "\n\n#define F(x,y) col = mix(x, col, smoothstep(0., fwidth(y), y))\n\nvec4 mix4(vec4 v1, vec4 v2, float a) { return v1 * (1. - a) + v2 * a; }\n\nvec4 getNote(int n, int channel) {\n    return texelFetch(iChannel1, ivec2(n, channel), 0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y * SCALE;\n    vec3 col = vec3(0.02);\n    vec3 effects = vec3(0);\n\n    int[10] order = int[10](4,0,2,3,5,6,7,8,9, 1);\n    float time = iTime;\n    time = min(time, 166.335);\n    for(int channeli = 0; channeli < CHANNELS; channeli++) {\n        int channel = order[channeli];\n        ivec2 index = ivec2(texelFetch(iChannel0, ivec2(channel, 0), 0).xy);\n        \n        for(int i = 0; i < index.y - index.x; i++) {\n            int noteIndex = index.x + i;\n            \n            vec4 noteBox = getNoteBox(getNote(noteIndex, channel), time);\n            vec4 nextNoteBox = getNoteBox(getNote(noteIndex + 1, channel), iTime);\n            \n            float d = sdNote(noteBox.xy - uv, noteBox.zw, channel);\n            //vec3[6](vec3(1.000,0.000,0.000),vec3(1.000,0.000,0.918),vec3(0.114,0.000,0.980),vec3(0.000,1.000,0.384),vec3(1.000,0.969,0.000),vec3(0.867,0.478,0.031))[channel]\n            vec3 nCol = hsv2rgb(vec3(float(channel+1)/float(CHANNELS),.76,1.));\n\n            F(nCol, d);\n            //col = mix(col, vec3[6](vec3(1.000,0.000,0.000),vec3(1.000,0.000,0.918),vec3(0.114,0.000,0.980),vec3(0.000,1.000,0.384),vec3(1.000,0.969,0.000),vec3(0.867,0.478,0.031))[channel], float(d<=0.));\n            if(noteBox.x - noteBox.z < 0. && noteBox.x + noteBox.z > 0.) F(pow(col,vec3(0.05)), d);\n            \n            float t = 1. - (nextNoteBox.x - nextNoteBox.z) / (nextNoteBox.x - noteBox.x + noteBox.z - nextNoteBox.z);\n            vec4 lerped = mix4(noteBox, nextNoteBox, t * t);\n            float r = sin(t * 3.141) * .1;\n            if(noteIndex % 2 == 1) r *= -1.;\n         \n            effects = mix(effects, float((nextNoteBox.x - nextNoteBox.z) - (noteBox.x + noteBox.z) <= 0.5) * pow(col,vec3(0.2)), float(sdNote(rotate(lerped.xy - uv, r), lerped.zw, channel) <= 0. && (noteBox.x - noteBox.z < 0. && nextNoteBox.x - nextNoteBox.z > 0.)));\n        }\n    }\n    col += effects;\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 uv = ivec2(fragCoord);\n    int n = uv.x;\n    int channel = uv.y;\n    \n    vec4 note = getNoteData(channel, n);\n   \n    fragColor = note;\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int channelIndex = ivec2(fragCoord).x;\n    vec4 data = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    int left = 0;\n    int right = 1;\n    float time = iTime;\n    if(channelIndex < CHANNELS) {\n        left = int(data.x);\n        right = int(data.y);\n        \n        vec4 box = getNoteBox(getNoteData(channelIndex, left), time);\n        if(box.x + box.z < -.5 * SCALE * ASPECT && right < sizes[channelIndex]) left += 1;\n        \n        box = getNoteBox(getNoteData(channelIndex, right), time);\n        if(box.x - box.z < .5 * SCALE * ASPECT && right < sizes[channelIndex]) right += 1;\n    }\n    fragColor = vec4(left, right, -1, -1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "\n\n#define CENTER 70.\n#define BPM 60.\n#define SCALE 5.\n#define ASPECT 1.7777\n#define CHANNELS 10\n#define INTRO 1.2\n\n#define TET 17.\n\nconst vec4 notes0[9] = vec4[9](vec4(152.0, 108, 1.0, 0.55), vec4(154.0, 108, 1.0, 0.54), vec4(156.0, 108, 1.0, 0.51), vec4(158.0, 108, 1.0, 0.53), vec4(161.0, 108, 1.0, 0.59), vec4(162.0, 104, 1.0, 0.53), vec4(163.33, 97, 0.33, 0.53), vec4(163.67, 80, 0.33, 0.43), vec4(164.0, 87, 1.67, 0.71));\nconst vec4 notes1[142] = vec4[142](vec4(7.17, 73, 0.17, 0.56), vec4(7.33, 74, 0.17, 0.63), vec4(7.5, 77, 0.17, 0.65), vec4(7.67, 80, 0.17, 0.67), vec4(7.83, 83, 0.17, 0.67), vec4(8.0, 84, 0.17, 0.64), vec4(8.17, 94, 0.17, 0.74), vec4(8.33, 90, 0.17, 0.55), vec4(8.5, 97, 0.17, 0.69), vec4(8.67, 87, 0.17, 0.43), vec4(8.83, 94, 0.17, 0.68), vec4(9.0, 90, 0.17, 0.54), vec4(9.17, 87, 0.17, 0.53), vec4(9.33, 90, 0.67, 0.65), vec4(10.17, 91, 0.17, 0.57), vec4(10.33, 87, 0.17, 0.54), vec4(10.5, 77, 0.17, 0.4), vec4(10.67, 84, 0.17, 0.71), vec4(10.83, 83, 0.17, 0.58), vec4(11.0, 80, 0.33, 0.59), vec4(11.33, 70, 0.67, 0.44), vec4(12.5, 97, 0.17, 0.57), vec4(12.67, 94, 0.17, 0.54), vec4(12.83, 91, 0.17, 0.54), vec4(13.0, 90, 0.17, 0.61), vec4(13.17, 84, 0.17, 0.54), vec4(13.33, 77, 0.67, 0.46), vec4(14.17, 73, 0.17, 0.54), vec4(14.33, 74, 0.17, 0.63), vec4(14.5, 77, 0.17, 0.65), vec4(14.67, 80, 0.17, 0.65), vec4(14.83, 83, 0.17, 0.63), vec4(15.0, 86, 0.17, 0.65), vec4(15.17, 87, 0.17, 0.62), vec4(15.33, 90, 0.67, 0.67), vec4(19.17, 93, 0.17, 0.54), vec4(19.33, 90, 0.17, 0.54), vec4(19.5, 87, 0.17, 0.54), vec4(19.67, 86, 0.17, 0.58), vec4(19.83, 83, 0.17, 0.54), vec4(20.0, 80, 0.17, 0.52), vec4(20.17, 86, 0.17, 0.66), vec4(20.33, 73, 0.67, 0.44), vec4(21.5, 83, 0.17, 0.54), vec4(21.67, 86, 0.17, 0.64), vec4(21.83, 87, 0.17, 0.61), vec4(22.0, 90, 0.17, 0.65), vec4(22.17, 80, 0.17, 0.46), vec4(22.33, 76, 1.33, 0.45), vec4(43.5, 63, 0.17, 0.56), vec4(43.67, 70, 0.17, 0.65), vec4(43.83, 77, 0.17, 0.74), vec4(44.0, 74, 0.17, 0.59), vec4(44.17, 80, 0.17, 0.7), vec4(44.33, 67, 0.17, 0.4), vec4(44.5, 70, 0.17, 0.65), vec4(44.67, 74, 0.17, 0.68), vec4(44.83, 87, 0.17, 0.8), vec4(45.0, 91, 0.17, 0.69), vec4(45.17, 101, 0.17, 0.76), vec4(45.33, 87, 0.17, 0.46), vec4(45.5, 97, 0.17, 0.71), vec4(45.67, 84, 0.17, 0.46), vec4(45.83, 94, 0.17, 0.71), vec4(46.0, 90, 0.17, 0.56), vec4(46.17, 100, 0.17, 0.73), vec4(46.33, 90, 0.67, 0.45), vec4(47.17, 101, 0.17, 0.57), vec4(47.33, 94, 0.17, 0.5), vec4(47.5, 84, 0.17, 0.46), vec4(47.67, 97, 0.17, 0.72), vec4(47.83, 87, 0.17, 0.49), vec4(48.0, 94, 0.33, 0.69), vec4(48.33, 90, 0.67, 0.55), vec4(49.5, 91, 0.17, 0.54), vec4(49.67, 87, 0.17, 0.51), vec4(49.83, 77, 0.17, 0.46), vec4(50.0, 84, 0.5, 0.66), vec4(50.5, 87, 0.17, 0.65), vec4(50.67, 83, 0.17, 0.55), vec4(50.83, 73, 0.17, 0.43), vec4(51.0, 80, 1.33, 0.68), vec4(69.33, 107, 0.17, 0.54), vec4(69.5, 103, 0.17, 0.56), vec4(69.67, 100, 0.67, 0.57), vec4(70.33, 93, 0.17, 0.5), vec4(70.5, 89, 0.17, 0.52), vec4(70.67, 86, 0.67, 0.54), vec4(71.33, 100, 0.33, 0.76), vec4(71.67, 96, 0.67, 0.57), vec4(72.33, 93, 0.33, 0.56), vec4(72.67, 89, 0.33, 0.54), vec4(73.0, 83, 1.33, 0.49), vec4(88.0, 97, 0.11, 0.56), vec4(88.11, 101, 0.11, 0.67), vec4(88.22, 90, 0.11, 0.43), vec4(88.33, 97, 0.67, 0.72), vec4(90.0, 97, 0.11, 0.52), vec4(90.11, 101, 0.11, 0.65), vec4(90.22, 90, 0.11, 0.45), vec4(90.33, 97, 0.67, 0.68), vec4(92.0, 97, 0.11, 0.55), vec4(92.11, 101, 0.11, 0.66), vec4(92.22, 90, 0.11, 0.43), vec4(92.33, 97, 0.67, 0.73), vec4(93.0, 91, 0.11, 0.51), vec4(93.11, 97, 0.11, 0.69), vec4(93.22, 84, 0.11, 0.45), vec4(93.33, 91, 0.67, 0.67), vec4(94.0, 87, 0.11, 0.51), vec4(94.11, 84, 0.11, 0.54), vec4(94.22, 80, 0.11, 0.51), vec4(94.33, 77, 0.67, 0.53), vec4(95.0, 74, 0.17, 0.57), vec4(95.17, 73, 0.17, 0.58), vec4(95.33, 70, 1.33, 0.51), vec4(152.0, 108, 0.11, 0.55), vec4(152.11, 104, 0.11, 0.53), vec4(152.22, 98, 0.11, 0.46), vec4(152.33, 91, 0.67, 0.44), vec4(154.0, 108, 0.11, 0.52), vec4(154.11, 104, 0.11, 0.52), vec4(154.22, 100, 0.11, 0.5), vec4(154.33, 91, 0.67, 0.46), vec4(156.0, 108, 0.11, 0.55), vec4(156.11, 104, 0.11, 0.54), vec4(156.22, 94, 0.11, 0.43), vec4(156.33, 91, 0.67, 0.53), vec4(158.0, 108, 0.11, 0.57), vec4(158.11, 104, 0.11, 0.55), vec4(158.22, 101, 0.11, 0.54), vec4(158.33, 91, 0.67, 0.42), vec4(160.17, 87, 0.17, 0.53), vec4(160.33, 91, 0.17, 0.63), vec4(160.5, 97, 0.17, 0.69), vec4(160.67, 104, 0.17, 0.75), vec4(160.83, 107, 0.17, 0.69), vec4(161.0, 108, 1.0, 0.62), vec4(162.0, 104, 1.0, 0.53), vec4(163.33, 97, 0.33, 0.52), vec4(163.67, 80, 0.33, 0.46), vec4(164.0, 70, 1.67, 0.44));\nconst vec4 notes2[163] = vec4[163](vec4(129.17, 62, 0.17, 0.55), vec4(129.33, 66, 0.17, 0.66), vec4(129.5, 70, 0.17, 0.67), vec4(129.67, 74, 0.17, 0.67), vec4(129.83, 70, 0.17, 0.51), vec4(130.17, 63, 0.17, 0.54), vec4(130.33, 67, 0.17, 0.63), vec4(130.5, 70, 0.17, 0.65), vec4(130.67, 74, 0.17, 0.66), vec4(130.83, 70, 0.17, 0.53), vec4(131.17, 65, 0.17, 0.55), vec4(131.33, 69, 0.17, 0.66), vec4(131.5, 73, 0.17, 0.66), vec4(131.67, 78, 0.17, 0.73), vec4(131.83, 73, 0.17, 0.56), vec4(132.17, 66, 0.17, 0.5), vec4(132.33, 70, 0.17, 0.66), vec4(132.5, 74, 0.17, 0.69), vec4(132.67, 80, 0.17, 0.67), vec4(132.83, 87, 0.17, 0.72), vec4(133.17, 66, 0.17, 0.53), vec4(133.33, 70, 0.17, 0.65), vec4(133.5, 74, 0.17, 0.69), vec4(133.67, 78, 0.17, 0.69), vec4(133.83, 74, 0.17, 0.56), vec4(134.17, 67, 0.17, 0.55), vec4(134.33, 71, 0.17, 0.66), vec4(134.5, 78, 0.17, 0.72), vec4(134.67, 84, 0.17, 0.72), vec4(134.83, 78, 0.17, 0.53), vec4(135.17, 69, 0.17, 0.53), vec4(135.33, 73, 0.17, 0.66), vec4(135.5, 77, 0.17, 0.69), vec4(135.67, 82, 0.17, 0.72), vec4(135.83, 77, 0.17, 0.56), vec4(136.17, 70, 0.17, 0.52), vec4(136.33, 74, 0.17, 0.63), vec4(136.5, 78, 0.17, 0.65), vec4(136.67, 84, 0.17, 0.73), vec4(136.83, 91, 0.17, 0.72), vec4(137.17, 66, 0.17, 0.54), vec4(137.33, 70, 0.17, 0.63), vec4(137.5, 74, 0.17, 0.72), vec4(137.67, 78, 0.17, 0.67), vec4(137.83, 84, 0.17, 0.7), vec4(138.0, 87, 0.17, 0.71), vec4(138.17, 83, 0.17, 0.57), vec4(138.33, 78, 0.17, 0.47), vec4(138.5, 74, 0.17, 0.5), vec4(138.67, 71, 0.17, 0.56), vec4(138.83, 67, 0.17, 0.5), vec4(139.17, 61, 0.17, 0.55), vec4(139.33, 70, 0.17, 0.71), vec4(139.5, 74, 0.17, 0.71), vec4(139.67, 78, 0.17, 0.69), vec4(139.83, 84, 0.17, 0.68), vec4(140.0, 88, 0.17, 0.69), vec4(140.17, 84, 0.17, 0.59), vec4(140.33, 78, 0.17, 0.54), vec4(140.5, 74, 0.17, 0.54), vec4(140.67, 70, 0.17, 0.54), vec4(140.83, 60, 0.17, 0.43), vec4(141.17, 57, 0.17, 0.54), vec4(141.33, 67, 0.17, 0.7), vec4(141.5, 71, 0.17, 0.69), vec4(141.67, 78, 0.17, 0.69), vec4(141.83, 84, 0.17, 0.71), vec4(142.0, 91, 0.17, 0.69), vec4(142.17, 84, 0.17, 0.49), vec4(142.33, 78, 0.17, 0.51), vec4(142.5, 74, 0.17, 0.52), vec4(142.67, 71, 0.17, 0.53), vec4(142.83, 67, 0.17, 0.53), vec4(143.17, 61, 0.17, 0.53), vec4(143.33, 66, 0.17, 0.65), vec4(143.5, 70, 0.17, 0.72), vec4(143.67, 74, 0.17, 0.68), vec4(143.83, 70, 0.17, 0.57), vec4(144.17, 62, 0.17, 0.56), vec4(144.33, 66, 0.17, 0.64), vec4(144.5, 71, 0.17, 0.68), vec4(144.67, 75, 0.17, 0.73), vec4(144.83, 71, 0.17, 0.51), vec4(145.17, 63, 0.17, 0.54), vec4(145.33, 67, 0.17, 0.68), vec4(145.5, 71, 0.17, 0.67), vec4(145.67, 77, 0.17, 0.71), vec4(145.83, 81, 0.17, 0.69), vec4(146.0, 84, 0.17, 0.65), vec4(146.17, 80, 0.17, 0.52), vec4(146.33, 76, 0.17, 0.54), vec4(146.5, 71, 0.17, 0.51), vec4(146.67, 67, 0.17, 0.5), vec4(146.83, 64, 0.17, 0.53), vec4(147.17, 63, 0.17, 0.5), vec4(147.33, 71, 0.17, 0.69), vec4(147.5, 76, 0.17, 0.7), vec4(147.67, 84, 0.17, 0.74), vec4(147.83, 76, 0.17, 0.46), vec4(148.17, 59, 0.17, 0.51), vec4(148.33, 64, 0.17, 0.68), vec4(148.5, 72, 0.17, 0.76), vec4(148.67, 85, 0.17, 0.75), vec4(148.83, 72, 0.17, 0.5), vec4(149.17, 60, 0.17, 0.54), vec4(149.33, 64, 0.17, 0.63), vec4(149.5, 69, 0.17, 0.68), vec4(149.67, 74, 0.17, 0.7), vec4(149.83, 81, 0.17, 0.72), vec4(150.0, 86, 0.17, 0.68), vec4(150.17, 77, 0.17, 0.45), vec4(150.33, 73, 0.17, 0.53), vec4(150.5, 69, 0.17, 0.53), vec4(150.67, 64, 0.17, 0.54), vec4(150.83, 60, 0.17, 0.52), vec4(151.0, 57, 0.17, 0.58), vec4(151.17, 64, 0.17, 0.72), vec4(151.33, 70, 0.17, 0.73), vec4(151.5, 74, 0.17, 0.7), vec4(151.67, 80, 0.17, 0.69), vec4(151.83, 84, 0.17, 0.66), vec4(152.0, 91, 1.0, 0.74), vec4(153.0, 57, 0.17, 0.58), vec4(153.17, 66, 0.17, 0.72), vec4(153.33, 70, 0.17, 0.66), vec4(153.5, 74, 0.17, 0.69), vec4(153.67, 80, 0.17, 0.73), vec4(153.83, 84, 0.17, 0.67), vec4(154.0, 91, 1.0, 0.72), vec4(155.0, 63, 0.17, 0.45), vec4(155.17, 70, 0.17, 0.66), vec4(155.33, 74, 0.17, 0.66), vec4(155.5, 80, 0.17, 0.7), vec4(155.67, 84, 0.17, 0.69), vec4(155.83, 90, 0.17, 0.7), vec4(156.0, 94, 0.5, 0.64), vec4(156.5, 77, 0.17, 0.47), vec4(156.67, 73, 0.17, 0.46), vec4(156.83, 67, 0.17, 0.5), vec4(157.0, 63, 0.17, 0.51), vec4(157.17, 70, 0.17, 0.7), vec4(157.33, 74, 0.17, 0.67), vec4(157.5, 80, 0.17, 0.74), vec4(157.67, 87, 0.17, 0.69), vec4(157.83, 90, 0.17, 0.69), vec4(158.0, 97, 0.5, 0.72), vec4(158.5, 80, 0.17, 0.45), vec4(158.67, 73, 0.17, 0.49), vec4(158.83, 70, 0.17, 0.51), vec4(159.0, 77, 0.17, 0.68), vec4(159.17, 74, 0.17, 0.57), vec4(159.33, 84, 0.17, 0.73), vec4(159.5, 80, 0.17, 0.54), vec4(159.67, 77, 0.17, 0.53), vec4(159.83, 84, 0.17, 0.69), vec4(160.0, 80, 0.33, 0.57), vec4(160.33, 84, 0.33, 0.63), vec4(160.67, 94, 0.33, 0.76), vec4(161.0, 97, 1.0, 0.68), vec4(162.0, 91, 1.0, 0.57), vec4(163.33, 87, 0.33, 0.54), vec4(163.67, 73, 0.33, 0.4), vec4(164.0, 63, 1.67, 0.42));\nconst vec4 notes3[128] = vec4[128](vec4(15.33, 90, 0.33, 0.55), vec4(15.67, 80, 0.67, 0.43), vec4(16.33, 86, 0.33, 0.69), vec4(16.67, 76, 0.67, 0.5), vec4(17.33, 80, 0.33, 0.65), vec4(17.67, 70, 0.33, 0.45), vec4(18.0, 76, 0.33, 0.68), vec4(18.33, 69, 0.33, 0.52), vec4(18.67, 80, 0.67, 0.76), vec4(19.33, 76, 1.0, 0.54), vec4(20.33, 69, 0.33, 0.47), vec4(20.67, 80, 0.67, 0.76), vec4(21.33, 76, 1.0, 0.54), vec4(22.33, 86, 1.33, 0.72), vec4(35.33, 85, 0.33, 0.53), vec4(35.67, 75, 0.67, 0.45), vec4(36.33, 81, 0.33, 0.69), vec4(36.67, 71, 0.67, 0.48), vec4(37.33, 75, 1.33, 0.63), vec4(41.33, 84, 0.33, 0.51), vec4(41.67, 74, 0.67, 0.46), vec4(42.33, 80, 0.33, 0.68), vec4(42.67, 70, 0.67, 0.5), vec4(43.33, 74, 1.33, 0.65), vec4(56.33, 83, 1.0, 0.54), vec4(57.33, 87, 1.0, 0.65), vec4(58.33, 77, 1.0, 0.46), vec4(59.33, 83, 1.0, 0.68), vec4(60.33, 76, 1.0, 0.5), vec4(61.33, 66, 1.33, 0.46), vec4(62.67, 69, 0.33, 0.65), vec4(63.0, 73, 0.67, 0.69), vec4(63.67, 69, 0.33, 0.58), vec4(64.0, 66, 1.0, 0.57), vec4(65.0, 73, 1.0, 0.68), vec4(66.0, 66, 1.67, 0.49), vec4(75.33, 102, 0.33, 0.54), vec4(75.67, 96, 0.33, 0.48), vec4(76.0, 89, 0.33, 0.49), vec4(76.33, 85, 0.33, 0.5), vec4(76.67, 79, 0.33, 0.48), vec4(77.0, 72, 0.67, 0.46), vec4(77.67, 62, 0.33, 0.47), vec4(78.0, 69, 0.33, 0.65), vec4(78.33, 75, 0.33, 0.7), vec4(78.67, 82, 0.33, 0.72), vec4(79.0, 92, 0.33, 0.77), vec4(79.33, 96, 0.33, 0.72), vec4(79.67, 92, 0.33, 0.55), vec4(80.0, 89, 1.0, 0.5), vec4(81.0, 99, 1.0, 0.72), vec4(82.0, 92, 1.67, 0.52), vec4(97.0, 77, 1.0, 0.51), vec4(98.0, 70, 1.0, 0.47), vec4(99.0, 60, 1.0, 0.46), vec4(100.0, 87, 1.33, 0.7), vec4(101.33, 94, 1.0, 0.7), vec4(102.33, 84, 1.0, 0.45), vec4(103.33, 81, 0.33, 0.55), vec4(103.67, 77, 0.33, 0.51), vec4(104.0, 70, 1.0, 0.45), vec4(105.0, 60, 1.0, 0.43), vec4(109.0, 82, 1.0, 0.55), vec4(110.0, 75, 1.0, 0.46), vec4(111.0, 65, 1.0, 0.45), vec4(112.0, 92, 1.33, 0.76), vec4(113.33, 99, 1.0, 0.7), vec4(114.33, 89, 1.0, 0.5), vec4(115.33, 86, 0.33, 0.52), vec4(115.67, 82, 0.33, 0.54), vec4(116.0, 75, 1.0, 0.43), vec4(117.0, 65, 1.0, 0.43), vec4(121.0, 87, 0.67, 0.5), vec4(121.67, 80, 1.0, 0.47), vec4(122.67, 77, 1.0, 0.56), vec4(123.67, 74, 1.0, 0.54), vec4(124.67, 81, 0.33, 0.74), vec4(125.0, 80, 1.0, 0.6), vec4(126.0, 70, 1.0, 0.41), vec4(127.0, 63, 1.0, 0.47), vec4(128.0, 53, 1.0, 0.51), vec4(129.0, 53, 1.0, 0.6), vec4(130.0, 53, 1.0, 0.61), vec4(131.0, 53, 1.0, 0.59), vec4(132.0, 53, 0.67, 0.57), vec4(132.67, 56, 0.33, 0.66), vec4(133.0, 57, 1.0, 0.59), vec4(134.0, 57, 1.0, 0.61), vec4(135.0, 57, 1.0, 0.58), vec4(136.0, 57, 1.0, 0.58), vec4(137.0, 57, 2.0, 0.58), vec4(139.0, 57, 2.0, 0.61), vec4(141.0, 54, 2.0, 0.57), vec4(143.0, 53, 1.0, 0.57), vec4(144.0, 53, 1.0, 0.61), vec4(145.0, 53, 2.0, 0.6), vec4(147.0, 53, 1.0, 0.59), vec4(148.0, 53, 1.0, 0.62), vec4(149.0, 53, 2.0, 0.62), vec4(151.0, 53, 0.33, 0.58), vec4(151.33, 64, 0.33, 0.73), vec4(151.67, 74, 0.33, 0.78), vec4(152.0, 87, 1.0, 0.77), vec4(153.0, 53, 0.33, 0.57), vec4(153.33, 66, 0.33, 0.77), vec4(153.67, 74, 0.33, 0.74), vec4(154.0, 87, 1.0, 0.78), vec4(155.0, 53, 0.33, 0.56), vec4(155.33, 70, 0.33, 0.76), vec4(155.67, 80, 0.33, 0.76), vec4(156.0, 87, 0.67, 0.74), vec4(156.67, 60, 0.33, 0.47), vec4(157.0, 53, 0.33, 0.5), vec4(157.33, 70, 0.33, 0.76), vec4(157.67, 83, 0.33, 0.76), vec4(158.0, 87, 0.67, 0.75), vec4(158.67, 67, 0.33, 0.46), vec4(159.0, 70, 0.33, 0.64), vec4(159.33, 74, 0.33, 0.67), vec4(159.67, 73, 0.33, 0.59), vec4(160.0, 70, 0.33, 0.54), vec4(160.33, 80, 0.33, 0.71), vec4(160.67, 83, 0.33, 0.69), vec4(161.0, 87, 1.0, 0.72), vec4(162.0, 84, 1.0, 0.55), vec4(163.33, 80, 0.33, 0.57), vec4(163.67, 63, 0.33, 0.45), vec4(164.0, 53, 1.67, 0.54));\nconst vec4 notes4[179] = vec4[179](vec4(24.17, 52, 0.17, 0.54), vec4(24.33, 55, 0.17, 0.61), vec4(24.5, 58, 0.17, 0.62), vec4(24.67, 59, 0.17, 0.63), vec4(24.83, 62, 0.17, 0.65), vec4(25.0, 65, 0.17, 0.66), vec4(25.17, 69, 0.17, 0.73), vec4(25.33, 72, 0.17, 0.65), vec4(25.5, 79, 0.17, 0.76), vec4(25.67, 75, 0.17, 0.56), vec4(25.83, 72, 0.17, 0.54), vec4(26.0, 69, 0.17, 0.59), vec4(26.17, 72, 0.17, 0.67), vec4(26.33, 75, 0.17, 0.7), vec4(26.5, 76, 0.17, 0.65), vec4(26.67, 79, 0.17, 0.64), vec4(26.83, 82, 0.17, 0.61), vec4(27.0, 86, 0.5, 0.67), vec4(27.5, 82, 0.17, 0.61), vec4(27.67, 79, 0.17, 0.54), vec4(27.83, 75, 0.17, 0.53), vec4(28.0, 69, 0.17, 0.46), vec4(28.17, 72, 0.17, 0.61), vec4(28.33, 75, 0.17, 0.61), vec4(28.5, 76, 0.17, 0.61), vec4(28.67, 79, 0.17, 0.68), vec4(28.83, 82, 0.17, 0.66), vec4(29.0, 66, 0.17, 0.47), vec4(29.17, 69, 0.17, 0.62), vec4(29.33, 72, 0.17, 0.63), vec4(29.5, 75, 0.17, 0.67), vec4(29.67, 76, 0.17, 0.67), vec4(29.83, 79, 0.17, 0.64), vec4(30.0, 65, 0.17, 0.44), vec4(30.17, 66, 0.17, 0.61), vec4(30.33, 69, 0.17, 0.65), vec4(30.5, 72, 0.17, 0.65), vec4(30.67, 75, 0.17, 0.64), vec4(30.83, 76, 0.17, 0.65), vec4(31.0, 79, 0.17, 0.64), vec4(31.17, 75, 0.17, 0.54), vec4(31.33, 69, 0.83, 0.51), vec4(32.17, 82, 0.17, 0.75), vec4(32.33, 79, 0.17, 0.58), vec4(32.5, 76, 0.17, 0.56), vec4(32.67, 75, 0.17, 0.55), vec4(32.83, 72, 0.17, 0.5), vec4(33.0, 69, 0.17, 0.52), vec4(33.17, 75, 0.17, 0.69), vec4(33.33, 82, 0.17, 0.73), vec4(33.5, 92, 0.17, 0.73), vec4(33.67, 86, 0.17, 0.57), vec4(33.83, 76, 0.17, 0.44), vec4(34.0, 82, 0.33, 0.68), vec4(34.33, 75, 1.33, 0.51), vec4(37.5, 64, 0.17, 0.54), vec4(37.67, 71, 0.17, 0.69), vec4(37.83, 78, 0.17, 0.72), vec4(38.0, 75, 0.17, 0.57), vec4(38.17, 81, 0.17, 0.69), vec4(38.33, 68, 0.17, 0.45), vec4(38.5, 71, 0.17, 0.65), vec4(38.67, 75, 0.17, 0.65), vec4(38.83, 85, 0.17, 0.72), vec4(39.0, 95, 0.5, 0.78), vec4(39.5, 75, 0.17, 0.45), vec4(39.67, 81, 0.17, 0.66), vec4(39.83, 85, 0.17, 0.69), vec4(40.0, 91, 0.17, 0.69), vec4(40.17, 88, 0.17, 0.61), vec4(40.33, 84, 0.17, 0.55), vec4(40.5, 81, 0.17, 0.51), vec4(40.67, 75, 0.17, 0.51), vec4(40.83, 71, 0.17, 0.54), vec4(41.0, 74, 0.17, 0.61), vec4(41.17, 77, 0.17, 0.73), vec4(41.33, 80, 0.67, 0.64), vec4(67.33, 45, 0.33, 0.59), vec4(67.67, 49, 0.33, 0.67), vec4(68.0, 59, 0.33, 0.68), vec4(68.33, 66, 0.33, 0.76), vec4(68.67, 76, 0.33, 0.75), vec4(69.0, 73, 1.67, 0.58), vec4(72.17, 52, 0.17, 0.54), vec4(72.33, 55, 0.17, 0.61), vec4(72.5, 56, 0.17, 0.63), vec4(72.67, 62, 0.17, 0.69), vec4(72.83, 66, 0.17, 0.69), vec4(73.0, 69, 0.17, 0.67), vec4(73.17, 76, 0.17, 0.73), vec4(73.33, 79, 0.17, 0.69), vec4(73.5, 80, 0.17, 0.6), vec4(73.67, 93, 0.17, 0.8), vec4(73.83, 90, 0.17, 0.58), vec4(74.0, 86, 0.17, 0.54), vec4(74.17, 83, 0.17, 0.54), vec4(74.33, 79, 0.17, 0.54), vec4(74.5, 76, 0.17, 0.54), vec4(74.67, 72, 0.83, 0.53), vec4(83.33, 71, 0.17, 0.55), vec4(83.5, 75, 0.17, 0.65), vec4(83.67, 81, 0.67, 0.69), vec4(84.33, 85, 0.17, 0.66), vec4(84.5, 81, 0.17, 0.55), vec4(84.67, 75, 0.83, 0.5), vec4(85.5, 71, 0.17, 0.53), vec4(85.67, 84, 0.17, 0.76), vec4(85.83, 88, 0.17, 0.69), vec4(86.0, 92, 0.17, 0.66), vec4(86.17, 88, 0.17, 0.57), vec4(86.33, 84, 0.17, 0.52), vec4(86.5, 81, 0.17, 0.51), vec4(86.67, 75, 0.17, 0.48), vec4(86.83, 71, 0.17, 0.51), vec4(87.0, 64, 0.17, 0.5), vec4(87.17, 71, 0.17, 0.68), vec4(87.33, 75, 0.17, 0.7), vec4(87.5, 81, 0.17, 0.73), vec4(87.67, 84, 0.17, 0.65), vec4(87.83, 88, 0.17, 0.68), vec4(88.0, 91, 1.0, 0.69), vec4(89.17, 70, 0.17, 0.57), vec4(89.33, 74, 0.17, 0.65), vec4(89.5, 80, 0.17, 0.72), vec4(89.67, 87, 0.17, 0.73), vec4(89.83, 90, 0.17, 0.63), vec4(90.0, 91, 1.0, 0.64), vec4(91.17, 73, 0.17, 0.51), vec4(91.33, 77, 0.17, 0.65), vec4(91.5, 80, 0.17, 0.65), vec4(91.67, 83, 0.17, 0.69), vec4(91.83, 87, 0.17, 0.69), vec4(92.0, 91, 1.0, 0.69), vec4(97.33, 70, 0.33, 0.54), vec4(97.67, 64, 0.67, 0.52), vec4(98.33, 63, 0.33, 0.6), vec4(98.67, 53, 0.67, 0.49), vec4(99.33, 70, 0.33, 0.76), vec4(99.67, 81, 0.67, 0.77), vec4(100.33, 76, 0.33, 0.52), vec4(100.67, 70, 0.33, 0.47), vec4(101.0, 64, 0.67, 0.5), vec4(101.67, 81, 0.33, 0.79), vec4(102.0, 71, 0.67, 0.46), vec4(102.67, 76, 0.33, 0.66), vec4(103.0, 77, 1.0, 0.65), vec4(109.33, 75, 0.33, 0.53), vec4(109.67, 69, 0.67, 0.5), vec4(110.33, 68, 0.33, 0.58), vec4(110.67, 58, 0.67, 0.54), vec4(111.33, 75, 0.33, 0.76), vec4(111.67, 86, 0.67, 0.79), vec4(112.33, 81, 0.33, 0.54), vec4(112.67, 75, 0.33, 0.47), vec4(113.0, 69, 0.67, 0.53), vec4(113.67, 86, 0.33, 0.76), vec4(114.0, 76, 0.67, 0.45), vec4(114.67, 81, 0.33, 0.69), vec4(115.0, 82, 1.0, 0.65), vec4(121.0, 57, 0.17, 0.55), vec4(121.17, 63, 0.17, 0.69), vec4(121.33, 70, 0.17, 0.72), vec4(121.5, 74, 0.5, 0.68), vec4(122.0, 57, 0.17, 0.53), vec4(122.17, 63, 0.17, 0.69), vec4(122.33, 73, 0.17, 0.77), vec4(122.5, 69, 0.5, 0.56), vec4(123.0, 57, 0.17, 0.5), vec4(123.17, 63, 0.17, 0.66), vec4(123.33, 66, 0.17, 0.65), vec4(123.5, 70, 0.5, 0.67), vec4(124.0, 57, 0.17, 0.54), vec4(124.17, 63, 0.17, 0.68), vec4(124.33, 69, 0.17, 0.67), vec4(124.5, 73, 0.5, 0.65), vec4(125.17, 74, 0.17, 0.53), vec4(125.33, 70, 0.67, 0.56), vec4(126.17, 67, 0.17, 0.5), vec4(126.33, 63, 0.67, 0.48));\nconst vec4 notes5[122] = vec4[122](vec4(97.0, 70, 0.5, 0.57), vec4(97.5, 71, 0.17, 0.66), vec4(97.67, 70, 0.67, 0.57), vec4(98.33, 76, 0.33, 0.68), vec4(98.67, 80, 0.33, 0.7), vec4(99.0, 87, 0.5, 0.72), vec4(99.5, 88, 0.17, 0.66), vec4(99.67, 87, 0.67, 0.57), vec4(100.33, 81, 0.33, 0.53), vec4(100.67, 80, 0.33, 0.57), vec4(101.0, 77, 0.67, 0.52), vec4(101.67, 70, 0.33, 0.47), vec4(102.0, 71, 0.5, 0.59), vec4(102.5, 74, 0.17, 0.65), vec4(102.67, 71, 0.33, 0.56), vec4(103.0, 70, 0.33, 0.6), vec4(103.33, 77, 0.33, 0.71), vec4(103.67, 81, 0.33, 0.69), vec4(104.0, 87, 1.67, 0.71), vec4(109.0, 75, 0.5, 0.54), vec4(109.5, 76, 0.17, 0.62), vec4(109.67, 75, 0.67, 0.56), vec4(110.33, 81, 0.33, 0.68), vec4(110.67, 85, 0.33, 0.71), vec4(111.0, 92, 0.5, 0.69), vec4(111.5, 93, 0.17, 0.65), vec4(111.67, 92, 0.67, 0.57), vec4(112.33, 86, 0.33, 0.48), vec4(112.67, 85, 0.33, 0.58), vec4(113.0, 82, 0.67, 0.52), vec4(113.67, 75, 0.33, 0.45), vec4(114.0, 76, 0.5, 0.61), vec4(114.5, 79, 0.17, 0.67), vec4(114.67, 76, 0.33, 0.57), vec4(115.0, 75, 0.33, 0.54), vec4(115.33, 82, 0.33, 0.73), vec4(115.67, 86, 0.33, 0.7), vec4(116.0, 92, 1.67, 0.72), vec4(121.0, 80, 0.5, 0.58), vec4(121.5, 81, 0.17, 0.61), vec4(121.67, 80, 0.67, 0.57), vec4(122.33, 86, 0.33, 0.69), vec4(122.67, 90, 0.33, 0.67), vec4(123.0, 80, 0.5, 0.47), vec4(123.5, 81, 0.17, 0.61), vec4(123.67, 80, 0.67, 0.57), vec4(124.33, 74, 0.33, 0.52), vec4(124.67, 77, 0.33, 0.65), vec4(125.0, 80, 0.33, 0.68), vec4(129.0, 74, 0.5, 0.52), vec4(129.5, 77, 0.17, 0.65), vec4(129.67, 74, 0.67, 0.55), vec4(130.33, 80, 0.33, 0.66), vec4(130.67, 84, 0.33, 0.69), vec4(131.0, 90, 0.67, 0.71), vec4(131.67, 86, 0.33, 0.55), vec4(132.0, 80, 1.0, 0.51), vec4(133.0, 78, 0.5, 0.56), vec4(133.5, 81, 0.17, 0.67), vec4(133.67, 78, 0.67, 0.57), vec4(134.33, 84, 0.33, 0.68), vec4(134.67, 88, 0.33, 0.68), vec4(135.0, 94, 0.67, 0.71), vec4(135.67, 90, 0.33, 0.57), vec4(136.0, 84, 0.67, 0.49), vec4(136.67, 88, 0.33, 0.64), vec4(137.0, 87, 0.67, 0.61), vec4(137.67, 88, 0.33, 0.65), vec4(138.0, 87, 0.67, 0.58), vec4(138.67, 84, 0.33, 0.56), vec4(139.0, 83, 0.67, 0.58), vec4(139.67, 84, 0.33, 0.58), vec4(140.0, 78, 0.67, 0.52), vec4(140.67, 81, 0.33, 0.64), vec4(141.0, 78, 0.67, 0.57), vec4(141.67, 84, 0.33, 0.67), vec4(142.0, 78, 0.67, 0.49), vec4(142.67, 77, 0.33, 0.54), vec4(143.0, 74, 1.0, 0.55), vec4(144.0, 75, 1.0, 0.63), vec4(145.0, 76, 0.67, 0.61), vec4(145.67, 77, 0.33, 0.65), vec4(146.0, 80, 0.67, 0.67), vec4(146.67, 81, 0.33, 0.63), vec4(147.0, 84, 1.0, 0.64), vec4(148.0, 85, 1.0, 0.64), vec4(149.0, 86, 1.67, 0.62), vec4(150.67, 86, 0.33, 0.62), vec4(151.0, 87, 0.67, 0.63), vec4(151.67, 84, 0.33, 0.58), vec4(152.0, 81, 0.67, 0.54), vec4(152.67, 80, 0.33, 0.57), vec4(153.0, 77, 0.67, 0.53), vec4(153.67, 80, 0.33, 0.64), vec4(154.0, 83, 0.5, 0.68), vec4(154.5, 80, 0.17, 0.56), vec4(154.67, 83, 0.33, 0.65), vec4(155.0, 84, 0.67, 0.64), vec4(155.67, 80, 0.33, 0.54), vec4(156.0, 77, 0.67, 0.53), vec4(156.67, 80, 0.33, 0.61), vec4(157.0, 84, 0.33, 0.67), vec4(157.33, 80, 0.33, 0.55), vec4(157.67, 77, 0.33, 0.55), vec4(158.0, 80, 0.33, 0.63), vec4(158.33, 84, 0.33, 0.65), vec4(158.67, 80, 0.33, 0.57), vec4(159.0, 77, 0.33, 0.55), vec4(159.33, 80, 0.33, 0.62), vec4(159.67, 84, 0.33, 0.68), vec4(160.0, 80, 0.67, 0.54), vec4(160.67, 83, 0.33, 0.62), vec4(161.0, 84, 0.33, 0.61), vec4(161.33, 80, 0.33, 0.55), vec4(161.67, 77, 0.33, 0.57), vec4(162.0, 80, 0.33, 0.67), vec4(162.33, 74, 0.33, 0.54), vec4(162.67, 73, 0.33, 0.55), vec4(163.0, 74, 0.33, 0.64), vec4(163.33, 70, 0.33, 0.54), vec4(163.67, 67, 0.33, 0.54), vec4(164.0, 70, 1.67, 0.65));\nconst vec4 notes6[320] = vec4[320](vec4(0.0, 84, 0.33, 0.56), vec4(0.33, 80, 0.33, 0.54), vec4(0.67, 84, 0.33, 0.65), vec4(1.0, 83, 0.5, 0.57), vec4(1.5, 80, 0.17, 0.52), vec4(1.67, 83, 0.33, 0.66), vec4(2.0, 84, 0.33, 0.62), vec4(2.33, 80, 0.33, 0.55), vec4(2.67, 84, 0.33, 0.64), vec4(3.0, 87, 0.67, 0.67), vec4(3.67, 83, 0.33, 0.54), vec4(4.0, 84, 0.33, 0.61), vec4(4.33, 80, 0.33, 0.54), vec4(4.67, 77, 0.33, 0.59), vec4(5.0, 80, 0.33, 0.65), vec4(5.33, 74, 0.33, 0.52), vec4(5.67, 73, 0.33, 0.57), vec4(6.0, 74, 0.33, 0.63), vec4(6.33, 70, 0.33, 0.51), vec4(6.67, 67, 0.33, 0.54), vec4(7.0, 70, 1.0, 0.65), vec4(8.0, 84, 0.33, 0.79), vec4(8.33, 80, 0.33, 0.55), vec4(8.67, 84, 0.33, 0.64), vec4(9.0, 83, 0.5, 0.58), vec4(9.5, 80, 0.17, 0.57), vec4(9.67, 83, 0.33, 0.65), vec4(10.0, 84, 0.33, 0.62), vec4(10.33, 83, 0.33, 0.56), vec4(10.67, 77, 0.33, 0.48), vec4(11.0, 74, 0.67, 0.54), vec4(11.67, 73, 0.33, 0.57), vec4(12.0, 70, 0.33, 0.54), vec4(12.33, 67, 0.33, 0.51), vec4(12.67, 70, 0.33, 0.63), vec4(13.0, 73, 0.5, 0.67), vec4(13.5, 77, 0.17, 0.67), vec4(13.67, 73, 0.33, 0.57), vec4(14.0, 70, 0.33, 0.53), vec4(14.33, 67, 0.33, 0.59), vec4(14.67, 70, 0.33, 0.63), vec4(15.0, 73, 2.67, 0.65), vec4(17.67, 70, 0.33, 0.57), vec4(18.0, 69, 1.67, 0.57), vec4(19.67, 66, 0.33, 0.55), vec4(20.0, 69, 1.17, 0.65), vec4(21.17, 73, 0.17, 0.69), vec4(21.33, 69, 0.33, 0.59), vec4(21.67, 66, 0.33, 0.52), vec4(22.0, 69, 1.67, 0.67), vec4(23.67, 69, 0.33, 0.58), vec4(24.0, 69, 0.67, 0.61), vec4(24.67, 66, 0.33, 0.51), vec4(25.0, 65, 0.67, 0.55), vec4(25.67, 66, 0.33, 0.61), vec4(26.0, 69, 0.67, 0.65), vec4(26.67, 72, 0.33, 0.68), vec4(27.0, 75, 0.17, 0.66), vec4(27.17, 79, 0.17, 0.69), vec4(27.33, 75, 0.33, 0.54), vec4(27.67, 72, 0.33, 0.54), vec4(28.0, 69, 1.0, 0.53), vec4(29.0, 66, 1.0, 0.52), vec4(30.0, 65, 0.67, 0.55), vec4(30.67, 62, 0.33, 0.56), vec4(31.0, 62, 0.67, 0.54), vec4(31.67, 66, 0.33, 0.64), vec4(32.0, 65, 0.67, 0.55), vec4(32.67, 69, 0.33, 0.69), vec4(33.0, 62, 0.33, 0.51), vec4(33.33, 69, 0.33, 0.71), vec4(33.67, 72, 0.33, 0.65), vec4(34.0, 75, 0.5, 0.67), vec4(34.5, 72, 0.17, 0.54), vec4(34.67, 69, 0.33, 0.52), vec4(35.0, 68, 0.67, 0.56), vec4(35.67, 71, 0.33, 0.62), vec4(36.0, 68, 0.67, 0.59), vec4(36.67, 67, 0.33, 0.54), vec4(37.0, 68, 0.33, 0.65), vec4(37.33, 75, 0.33, 0.65), vec4(37.67, 78, 0.33, 0.65), vec4(38.0, 81, 0.5, 0.64), vec4(38.5, 78, 0.17, 0.52), vec4(38.67, 75, 0.67, 0.56), vec4(39.33, 71, 0.33, 0.52), vec4(39.67, 68, 0.33, 0.51), vec4(40.0, 67, 0.5, 0.57), vec4(40.5, 68, 0.17, 0.64), vec4(40.67, 67, 0.67, 0.6), vec4(41.33, 67, 0.33, 0.56), vec4(41.67, 70, 0.33, 0.64), vec4(42.0, 67, 0.67, 0.58), vec4(42.67, 66, 0.33, 0.54), vec4(43.0, 67, 0.33, 0.64), vec4(43.33, 74, 0.33, 0.7), vec4(43.67, 77, 0.33, 0.69), vec4(44.0, 80, 0.67, 0.7), vec4(44.67, 83, 0.33, 0.66), vec4(45.0, 84, 0.33, 0.65), vec4(45.33, 80, 0.33, 0.54), vec4(45.67, 84, 0.33, 0.65), vec4(46.0, 83, 0.5, 0.56), vec4(46.5, 80, 0.17, 0.56), vec4(46.67, 83, 0.33, 0.66), vec4(47.0, 84, 0.33, 0.64), vec4(47.33, 80, 0.33, 0.51), vec4(47.67, 84, 0.33, 0.66), vec4(48.0, 87, 0.67, 0.65), vec4(48.67, 83, 0.33, 0.56), vec4(49.0, 84, 0.33, 0.65), vec4(49.33, 80, 0.33, 0.57), vec4(49.67, 77, 0.33, 0.54), vec4(50.0, 80, 0.33, 0.61), vec4(50.33, 74, 0.33, 0.5), vec4(50.67, 73, 0.33, 0.53), vec4(51.0, 74, 0.33, 0.64), vec4(51.33, 70, 0.33, 0.56), vec4(51.67, 67, 0.33, 0.58), vec4(52.0, 70, 0.17, 0.65), vec4(52.17, 63, 0.17, 0.46), vec4(52.33, 70, 0.17, 0.65), vec4(52.5, 73, 0.17, 0.68), vec4(52.67, 74, 0.17, 0.61), vec4(52.83, 80, 0.17, 0.7), vec4(53.0, 84, 0.33, 0.66), vec4(53.33, 80, 0.33, 0.55), vec4(53.67, 84, 0.33, 0.66), vec4(54.0, 83, 0.5, 0.58), vec4(54.5, 80, 0.17, 0.57), vec4(54.67, 83, 0.33, 0.64), vec4(55.0, 84, 0.33, 0.64), vec4(55.33, 80, 0.33, 0.54), vec4(55.67, 77, 0.33, 0.53), vec4(56.0, 76, 0.5, 0.57), vec4(56.5, 77, 0.17, 0.61), vec4(56.67, 76, 0.33, 0.59), vec4(57.0, 76, 0.67, 0.6), vec4(57.67, 73, 0.33, 0.52), vec4(58.0, 70, 0.5, 0.55), vec4(58.5, 73, 0.17, 0.66), vec4(58.67, 70, 0.33, 0.56), vec4(59.0, 70, 0.67, 0.58), vec4(59.67, 69, 0.33, 0.54), vec4(60.0, 66, 0.67, 0.55), vec4(60.67, 70, 0.33, 0.66), vec4(61.0, 70, 0.67, 0.61), vec4(61.67, 69, 0.33, 0.57), vec4(62.0, 66, 1.0, 0.54), vec4(63.0, 63, 3.0, 0.54), vec4(66.0, 66, 1.67, 0.64), vec4(67.67, 69, 0.33, 0.63), vec4(68.0, 72, 0.67, 0.69), vec4(68.67, 76, 0.33, 0.66), vec4(69.0, 83, 1.67, 0.71), vec4(70.67, 79, 0.33, 0.55), vec4(71.0, 76, 0.67, 0.54), vec4(71.67, 80, 0.33, 0.67), vec4(72.0, 76, 0.67, 0.54), vec4(72.67, 73, 0.33, 0.55), vec4(73.0, 72, 0.67, 0.57), vec4(73.67, 69, 0.33, 0.54), vec4(74.0, 66, 0.67, 0.54), vec4(74.67, 67, 0.33, 0.62), vec4(75.0, 68, 0.67, 0.63), vec4(75.67, 71, 0.33, 0.66), vec4(76.0, 72, 0.67, 0.65), vec4(76.67, 68, 0.33, 0.52), vec4(77.0, 72, 0.5, 0.6), vec4(77.5, 75, 0.17, 0.69), vec4(77.67, 72, 0.33, 0.57), vec4(78.0, 69, 0.67, 0.54), vec4(78.67, 75, 0.33, 0.7), vec4(79.0, 79, 0.5, 0.69), vec4(79.5, 82, 0.17, 0.7), vec4(79.67, 79, 0.33, 0.58), vec4(80.0, 79, 0.33, 0.62), vec4(80.33, 78, 0.33, 0.57), vec4(80.67, 75, 0.67, 0.53), vec4(81.33, 72, 0.33, 0.54), vec4(81.67, 69, 0.33, 0.56), vec4(82.0, 69, 0.67, 0.56), vec4(82.67, 68, 0.33, 0.54), vec4(83.0, 68, 0.33, 0.6), vec4(83.33, 68, 0.33, 0.56), vec4(83.67, 71, 0.33, 0.67), vec4(84.0, 68, 0.67, 0.55), vec4(84.67, 67, 0.33, 0.6), vec4(85.0, 68, 0.33, 0.64), vec4(85.33, 75, 0.33, 0.71), vec4(85.67, 78, 0.33, 0.64), vec4(86.0, 81, 0.5, 0.65), vec4(86.5, 88, 0.17, 0.75), vec4(86.67, 85, 0.33, 0.59), vec4(87.0, 85, 0.67, 0.57), vec4(87.67, 84, 0.67, 0.57), vec4(88.33, 80, 0.33, 0.57), vec4(88.67, 84, 0.33, 0.65), vec4(89.0, 83, 0.5, 0.56), vec4(89.5, 80, 0.17, 0.53), vec4(89.67, 83, 0.33, 0.61), vec4(90.0, 84, 0.33, 0.62), vec4(90.33, 80, 0.33, 0.55), vec4(90.67, 84, 0.33, 0.65), vec4(91.0, 87, 0.67, 0.68), vec4(91.67, 83, 0.33, 0.52), vec4(92.0, 84, 0.33, 0.61), vec4(92.33, 80, 0.33, 0.54), vec4(92.67, 77, 0.33, 0.57), vec4(93.0, 80, 0.33, 0.65), vec4(93.33, 74, 0.33, 0.51), vec4(93.67, 73, 0.33, 0.56), vec4(94.0, 74, 0.33, 0.64), vec4(94.33, 70, 0.33, 0.51), vec4(94.67, 67, 0.33, 0.54), vec4(95.0, 70, 0.17, 0.64), vec4(95.17, 63, 0.17, 0.47), vec4(95.33, 70, 0.17, 0.68), vec4(95.5, 80, 0.17, 0.79), vec4(95.67, 74, 0.17, 0.53), vec4(95.83, 73, 0.17, 0.54), vec4(96.0, 70, 0.17, 0.55), vec4(96.17, 57, 0.17, 0.5), vec4(96.33, 53, 0.17, 0.57), vec4(96.5, 63, 0.17, 0.73), vec4(96.67, 64, 0.17, 0.63), vec4(96.83, 67, 0.17, 0.67), vec4(97.0, 70, 5.0, 0.62), vec4(102.0, 67, 1.0, 0.53), vec4(103.0, 70, 1.0, 0.66), vec4(104.0, 70, 0.5, 0.62), vec4(104.5, 71, 0.17, 0.61), vec4(104.67, 70, 2.0, 0.57), vec4(106.67, 70, 0.33, 0.62), vec4(107.0, 72, 1.33, 0.67), vec4(108.33, 75, 0.33, 0.68), vec4(108.67, 76, 0.33, 0.63), vec4(109.0, 75, 5.0, 0.58), vec4(114.0, 72, 1.0, 0.54), vec4(115.0, 75, 1.0, 0.6), vec4(116.0, 75, 0.5, 0.58), vec4(116.5, 76, 0.17, 0.63), vec4(116.67, 75, 2.0, 0.57), vec4(118.67, 75, 0.33, 0.59), vec4(119.0, 77, 1.33, 0.67), vec4(120.33, 80, 0.33, 0.66), vec4(120.67, 81, 0.33, 0.61), vec4(121.0, 80, 4.33, 0.63), vec4(125.33, 84, 0.33, 0.65), vec4(125.67, 77, 0.33, 0.5), vec4(126.0, 80, 0.33, 0.61), vec4(126.33, 74, 0.33, 0.48), vec4(126.67, 73, 0.33, 0.54), vec4(127.0, 74, 0.33, 0.58), vec4(127.33, 70, 0.33, 0.55), vec4(127.67, 67, 0.33, 0.56), vec4(128.0, 70, 1.0, 0.65), vec4(129.0, 74, 2.0, 0.69), vec4(131.0, 78, 1.0, 0.65), vec4(132.0, 80, 1.0, 0.64), vec4(133.0, 78, 2.0, 0.56), vec4(135.0, 82, 1.0, 0.66), vec4(136.0, 84, 0.67, 0.62), vec4(136.67, 88, 0.33, 0.63), vec4(137.0, 87, 0.67, 0.55), vec4(137.67, 88, 0.33, 0.62), vec4(138.0, 87, 0.67, 0.57), vec4(138.67, 84, 0.33, 0.55), vec4(139.0, 83, 0.67, 0.57), vec4(139.67, 84, 0.33, 0.65), vec4(140.0, 78, 0.67, 0.53), vec4(140.67, 81, 0.33, 0.65), vec4(141.0, 78, 0.67, 0.53), vec4(141.67, 84, 0.33, 0.69), vec4(142.0, 78, 0.67, 0.5), vec4(142.67, 77, 0.33, 0.5), vec4(143.0, 74, 1.0, 0.51), vec4(144.0, 75, 1.0, 0.59), vec4(145.0, 76, 0.67, 0.62), vec4(145.67, 77, 0.33, 0.64), vec4(146.0, 80, 0.67, 0.67), vec4(146.67, 81, 0.33, 0.63), vec4(147.0, 84, 1.0, 0.65), vec4(148.0, 85, 1.0, 0.63), vec4(149.0, 86, 1.67, 0.62), vec4(150.67, 86, 0.33, 0.61), vec4(151.0, 87, 0.67, 0.62), vec4(151.67, 84, 0.33, 0.53), vec4(152.0, 81, 0.67, 0.55), vec4(152.67, 80, 0.33, 0.58), vec4(153.0, 77, 0.67, 0.57), vec4(153.67, 80, 0.33, 0.61), vec4(154.0, 83, 0.5, 0.66), vec4(154.5, 80, 0.17, 0.55), vec4(154.67, 83, 0.33, 0.66), vec4(155.0, 84, 0.67, 0.63), vec4(155.67, 80, 0.33, 0.54), vec4(156.0, 77, 0.67, 0.56), vec4(156.67, 80, 0.33, 0.65), vec4(157.0, 84, 0.33, 0.61), vec4(157.33, 80, 0.33, 0.56), vec4(157.67, 77, 0.33, 0.47), vec4(158.0, 80, 0.33, 0.65), vec4(158.33, 84, 0.33, 0.68), vec4(158.67, 80, 0.33, 0.54), vec4(159.0, 77, 0.33, 0.56), vec4(159.33, 80, 0.33, 0.64), vec4(159.67, 84, 0.33, 0.66), vec4(160.0, 80, 0.67, 0.57), vec4(160.67, 83, 0.33, 0.63), vec4(161.0, 84, 0.33, 0.61), vec4(161.33, 80, 0.33, 0.54), vec4(161.67, 77, 0.33, 0.53), vec4(162.0, 80, 0.33, 0.64), vec4(162.33, 74, 0.33, 0.52), vec4(162.67, 73, 0.33, 0.55), vec4(163.0, 74, 0.33, 0.61), vec4(163.33, 70, 0.33, 0.54), vec4(163.67, 67, 0.33, 0.54), vec4(164.0, 70, 1.67, 0.61));\nconst vec4 notes7[281] = vec4[281](vec4(0.0, 74, 0.33, 0.54), vec4(0.33, 73, 0.33, 0.56), vec4(0.67, 74, 0.33, 0.65), vec4(1.0, 77, 0.5, 0.65), vec4(1.5, 74, 0.17, 0.57), vec4(1.67, 77, 0.33, 0.65), vec4(2.0, 74, 0.33, 0.54), vec4(2.33, 73, 0.33, 0.55), vec4(2.67, 74, 0.33, 0.65), vec4(3.0, 83, 0.67, 0.71), vec4(3.67, 77, 0.33, 0.52), vec4(4.0, 74, 0.33, 0.56), vec4(4.33, 73, 0.33, 0.56), vec4(4.67, 70, 0.33, 0.54), vec4(5.0, 74, 0.33, 0.7), vec4(5.33, 63, 0.33, 0.48), vec4(5.67, 66, 0.33, 0.63), vec4(6.0, 67, 0.33, 0.6), vec4(6.33, 63, 0.33, 0.51), vec4(6.67, 60, 0.33, 0.55), vec4(7.0, 67, 1.0, 0.72), vec4(8.0, 74, 0.33, 0.76), vec4(8.33, 73, 0.33, 0.61), vec4(8.67, 74, 0.33, 0.61), vec4(9.0, 77, 0.5, 0.65), vec4(9.5, 74, 0.17, 0.57), vec4(9.67, 77, 0.33, 0.66), vec4(10.0, 74, 0.33, 0.57), vec4(10.33, 70, 0.33, 0.55), vec4(10.67, 73, 0.33, 0.65), vec4(11.0, 67, 0.83, 0.52), vec4(11.83, 66, 0.17, 0.54), vec4(12.0, 63, 0.33, 0.57), vec4(12.33, 57, 0.33, 0.55), vec4(12.67, 63, 0.33, 0.69), vec4(13.0, 66, 0.5, 0.69), vec4(13.5, 63, 0.17, 0.54), vec4(13.67, 66, 0.33, 0.65), vec4(14.0, 63, 0.33, 0.58), vec4(14.33, 66, 0.33, 0.65), vec4(14.67, 63, 0.33, 0.57), vec4(15.0, 69, 1.67, 0.72), vec4(16.67, 66, 0.33, 0.5), vec4(17.0, 63, 0.67, 0.55), vec4(17.67, 62, 0.33, 0.57), vec4(18.0, 63, 1.67, 0.62), vec4(19.67, 62, 0.33, 0.57), vec4(20.0, 63, 0.67, 0.58), vec4(20.67, 66, 0.33, 0.65), vec4(21.0, 63, 0.67, 0.58), vec4(21.67, 62, 0.33, 0.54), vec4(22.0, 63, 0.67, 0.64), vec4(22.67, 66, 0.33, 0.63), vec4(23.0, 59, 0.17, 0.56), vec4(23.17, 62, 0.17, 0.69), vec4(23.33, 63, 0.67, 0.62), vec4(24.0, 62, 0.67, 0.58), vec4(24.67, 59, 0.33, 0.56), vec4(25.0, 58, 0.67, 0.54), vec4(25.67, 59, 0.33, 0.54), vec4(26.0, 62, 0.67, 0.63), vec4(26.67, 66, 0.33, 0.67), vec4(27.0, 69, 0.17, 0.65), vec4(27.17, 72, 0.17, 0.66), vec4(27.33, 69, 0.33, 0.54), vec4(27.67, 65, 0.33, 0.52), vec4(28.0, 62, 0.67, 0.54), vec4(28.67, 59, 1.0, 0.58), vec4(29.67, 58, 0.67, 0.56), vec4(30.33, 55, 0.67, 0.57), vec4(31.0, 52, 0.67, 0.57), vec4(31.67, 58, 0.67, 0.69), vec4(32.33, 55, 0.33, 0.56), vec4(32.67, 59, 0.33, 0.62), vec4(33.0, 58, 0.33, 0.61), vec4(33.33, 62, 0.33, 0.66), vec4(33.67, 66, 0.33, 0.68), vec4(34.0, 69, 0.5, 0.7), vec4(34.5, 65, 0.17, 0.54), vec4(34.67, 62, 0.33, 0.48), vec4(35.0, 64, 0.67, 0.62), vec4(35.67, 67, 0.33, 0.65), vec4(36.0, 64, 0.67, 0.57), vec4(36.67, 61, 0.33, 0.53), vec4(37.0, 64, 0.33, 0.69), vec4(37.33, 68, 0.33, 0.7), vec4(37.67, 71, 0.33, 0.7), vec4(38.0, 75, 0.5, 0.69), vec4(38.5, 71, 0.17, 0.55), vec4(38.67, 68, 0.33, 0.53), vec4(39.0, 67, 0.67, 0.57), vec4(39.67, 64, 0.33, 0.54), vec4(40.0, 61, 0.5, 0.57), vec4(40.5, 64, 0.17, 0.65), vec4(40.67, 61, 0.33, 0.53), vec4(41.0, 63, 0.67, 0.63), vec4(41.67, 66, 0.33, 0.65), vec4(42.0, 63, 0.67, 0.57), vec4(42.67, 60, 0.33, 0.51), vec4(43.0, 63, 0.33, 0.67), vec4(43.33, 67, 0.33, 0.65), vec4(43.67, 70, 0.33, 0.65), vec4(44.0, 74, 1.0, 0.71), vec4(45.0, 74, 0.33, 0.62), vec4(45.33, 73, 0.33, 0.58), vec4(45.67, 74, 0.33, 0.63), vec4(46.0, 77, 0.5, 0.66), vec4(46.5, 74, 0.17, 0.54), vec4(46.67, 77, 0.33, 0.63), vec4(47.0, 74, 0.33, 0.58), vec4(47.33, 73, 0.33, 0.54), vec4(47.67, 74, 0.33, 0.64), vec4(48.0, 83, 0.67, 0.76), vec4(48.67, 77, 0.33, 0.54), vec4(49.0, 74, 0.33, 0.5), vec4(49.33, 70, 0.33, 0.54), vec4(49.67, 66, 0.33, 0.51), vec4(50.0, 67, 0.33, 0.6), vec4(50.33, 63, 0.33, 0.53), vec4(50.67, 70, 0.33, 0.69), vec4(51.0, 67, 0.17, 0.6), vec4(51.17, 66, 0.17, 0.54), vec4(51.33, 63, 0.33, 0.52), vec4(51.67, 60, 0.33, 0.53), vec4(52.0, 67, 1.0, 0.71), vec4(53.0, 74, 0.33, 0.69), vec4(53.33, 73, 0.33, 0.58), vec4(53.67, 74, 0.33, 0.61), vec4(54.0, 77, 0.5, 0.66), vec4(54.5, 74, 0.17, 0.61), vec4(54.67, 77, 0.33, 0.66), vec4(55.0, 74, 0.33, 0.59), vec4(55.33, 73, 0.33, 0.57), vec4(55.67, 66, 0.33, 0.49), vec4(56.0, 70, 1.0, 0.61), vec4(57.0, 70, 0.67, 0.58), vec4(57.67, 69, 0.33, 0.6), vec4(58.0, 66, 1.0, 0.55), vec4(59.0, 60, 1.0, 0.49), vec4(60.0, 63, 1.0, 0.65), vec4(61.0, 60, 0.67, 0.58), vec4(61.67, 63, 0.5, 0.63), vec4(62.17, 60, 0.17, 0.56), vec4(62.33, 59, 0.33, 0.56), vec4(62.67, 56, 0.67, 0.54), vec4(63.33, 53, 0.33, 0.57), vec4(63.67, 56, 0.33, 0.65), vec4(64.0, 59, 0.5, 0.62), vec4(64.5, 60, 0.17, 0.63), vec4(64.67, 59, 0.33, 0.57), vec4(65.0, 59, 0.67, 0.58), vec4(65.67, 56, 0.33, 0.56), vec4(66.0, 59, 1.67, 0.62), vec4(67.67, 63, 0.33, 0.68), vec4(68.0, 66, 0.67, 0.65), vec4(68.67, 69, 0.33, 0.62), vec4(69.0, 73, 2.0, 0.68), vec4(71.0, 69, 2.0, 0.54), vec4(73.0, 63, 1.0, 0.51), vec4(74.0, 59, 0.67, 0.54), vec4(74.67, 63, 0.33, 0.67), vec4(75.0, 62, 3.67, 0.61), vec4(78.67, 65, 0.33, 0.66), vec4(79.0, 69, 0.67, 0.65), vec4(79.67, 75, 0.33, 0.68), vec4(80.0, 69, 1.33, 0.54), vec4(81.33, 68, 0.33, 0.55), vec4(81.67, 65, 0.33, 0.56), vec4(82.0, 62, 1.0, 0.52), vec4(83.0, 64, 0.33, 0.66), vec4(83.33, 64, 0.33, 0.6), vec4(83.67, 67, 0.33, 0.65), vec4(84.0, 64, 0.67, 0.57), vec4(84.67, 61, 0.33, 0.56), vec4(85.0, 64, 0.33, 0.64), vec4(85.33, 68, 0.33, 0.68), vec4(85.67, 75, 0.33, 0.72), vec4(86.0, 75, 2.0, 0.63), vec4(88.0, 74, 0.33, 0.57), vec4(88.33, 73, 0.33, 0.57), vec4(88.67, 74, 0.33, 0.63), vec4(89.0, 70, 0.5, 0.52), vec4(89.5, 67, 0.17, 0.53), vec4(89.67, 70, 0.33, 0.65), vec4(90.0, 74, 0.33, 0.66), vec4(90.33, 73, 0.33, 0.56), vec4(90.67, 74, 0.33, 0.61), vec4(91.0, 77, 1.0, 0.65), vec4(92.0, 74, 0.33, 0.56), vec4(92.33, 73, 0.33, 0.57), vec4(92.67, 70, 0.33, 0.59), vec4(93.0, 74, 0.33, 0.67), vec4(93.33, 70, 0.33, 0.54), vec4(93.67, 63, 0.33, 0.5), vec4(94.0, 67, 0.17, 0.65), vec4(94.17, 66, 0.17, 0.58), vec4(94.33, 63, 0.33, 0.59), vec4(94.67, 60, 0.33, 0.54), vec4(95.0, 67, 2.0, 0.65), vec4(97.0, 64, 1.0, 0.53), vec4(98.0, 63, 1.0, 0.56), vec4(99.0, 60, 1.0, 0.54), vec4(100.0, 63, 1.0, 0.63), vec4(101.0, 64, 1.0, 0.66), vec4(102.0, 63, 1.0, 0.58), vec4(103.0, 60, 1.0, 0.5), vec4(104.0, 63, 1.0, 0.64), vec4(105.0, 64, 0.5, 0.64), vec4(105.5, 67, 0.17, 0.64), vec4(105.67, 64, 2.33, 0.55), vec4(108.0, 68, 1.0, 0.64), vec4(109.0, 69, 1.0, 0.65), vec4(110.0, 68, 1.0, 0.54), vec4(111.0, 65, 1.0, 0.57), vec4(112.0, 68, 1.0, 0.66), vec4(113.0, 69, 1.0, 0.61), vec4(114.0, 68, 1.0, 0.55), vec4(115.0, 65, 1.0, 0.55), vec4(116.0, 68, 1.0, 0.67), vec4(117.0, 69, 0.5, 0.65), vec4(117.5, 72, 0.17, 0.65), vec4(117.67, 69, 2.33, 0.52), vec4(120.0, 73, 1.0, 0.68), vec4(121.0, 74, 1.0, 0.61), vec4(122.0, 73, 1.0, 0.55), vec4(123.0, 70, 1.0, 0.56), vec4(124.0, 73, 1.0, 0.65), vec4(125.0, 74, 0.67, 0.65), vec4(125.67, 66, 0.33, 0.48), vec4(126.0, 70, 0.33, 0.69), vec4(126.33, 63, 0.33, 0.53), vec4(126.67, 67, 0.33, 0.62), vec4(127.0, 63, 0.67, 0.58), vec4(127.67, 60, 0.33, 0.53), vec4(128.0, 67, 1.0, 0.69), vec4(129.0, 70, 2.0, 0.66), vec4(131.0, 73, 1.0, 0.67), vec4(132.0, 74, 0.67, 0.62), vec4(132.67, 77, 0.33, 0.65), vec4(133.0, 74, 2.0, 0.53), vec4(135.0, 77, 1.0, 0.69), vec4(136.0, 78, 0.67, 0.64), vec4(136.67, 78, 0.33, 0.6), vec4(137.0, 78, 3.0, 0.6), vec4(140.0, 74, 1.0, 0.54), vec4(141.0, 71, 2.0, 0.56), vec4(143.0, 70, 1.0, 0.6), vec4(144.0, 71, 3.0, 0.65), vec4(147.0, 76, 1.0, 0.68), vec4(148.0, 72, 1.0, 0.55), vec4(149.0, 73, 0.67, 0.6), vec4(149.67, 74, 0.33, 0.61), vec4(150.0, 77, 0.67, 0.66), vec4(150.67, 77, 0.33, 0.61), vec4(151.0, 74, 1.67, 0.54), vec4(152.67, 74, 0.33, 0.57), vec4(153.0, 74, 2.0, 0.64), vec4(155.0, 74, 0.67, 0.61), vec4(155.67, 67, 0.33, 0.46), vec4(156.0, 70, 0.67, 0.65), vec4(156.67, 67, 0.33, 0.57), vec4(157.0, 74, 0.33, 0.72), vec4(157.33, 70, 0.33, 0.55), vec4(157.67, 73, 0.33, 0.63), vec4(158.0, 74, 0.33, 0.65), vec4(158.33, 70, 0.33, 0.54), vec4(158.67, 73, 0.33, 0.64), vec4(159.0, 74, 0.67, 0.63), vec4(159.67, 73, 0.33, 0.56), vec4(160.0, 70, 0.67, 0.54), vec4(160.67, 77, 0.33, 0.69), vec4(161.0, 74, 0.33, 0.56), vec4(161.33, 73, 0.33, 0.56), vec4(161.67, 70, 0.33, 0.58), vec4(162.0, 74, 0.33, 0.65), vec4(162.33, 63, 0.33, 0.44), vec4(162.67, 66, 0.33, 0.65), vec4(163.0, 67, 0.33, 0.66), vec4(163.33, 63, 0.33, 0.54), vec4(163.67, 63, 0.33, 0.59), vec4(164.0, 67, 1.67, 0.64));\nconst vec4 notes8[121] = vec4[121](vec4(3.0, 77, 0.83, 0.56), vec4(5.0, 67, 0.33, 0.57), vec4(7.0, 57, 1.0, 0.55), vec4(13.0, 67, 1.0, 0.51), vec4(15.0, 63, 1.67, 0.56), vec4(16.67, 62, 0.33, 0.57), vec4(17.0, 59, 1.0, 0.56), vec4(18.0, 59, 3.17, 0.59), vec4(21.17, 62, 0.17, 0.64), vec4(21.33, 59, 2.67, 0.6), vec4(36.0, 58, 1.33, 0.55), vec4(37.33, 64, 0.33, 0.7), vec4(37.67, 67, 0.33, 0.69), vec4(38.0, 68, 0.5, 0.65), vec4(38.5, 67, 0.17, 0.57), vec4(38.67, 64, 0.33, 0.59), vec4(39.0, 61, 0.67, 0.55), vec4(42.0, 57, 1.33, 0.56), vec4(43.33, 63, 0.33, 0.66), vec4(43.67, 66, 0.33, 0.68), vec4(44.0, 67, 0.33, 0.67), vec4(44.33, 63, 0.33, 0.56), vec4(44.67, 62, 0.33, 0.57), vec4(45.0, 63, 0.33, 0.63), vec4(48.0, 77, 0.83, 0.55), vec4(53.0, 57, 1.0, 0.57), vec4(66.0, 55, 0.67, 0.51), vec4(66.67, 52, 0.33, 0.6), vec4(67.0, 55, 0.67, 0.63), vec4(67.67, 56, 0.33, 0.61), vec4(68.0, 59, 0.67, 0.6), vec4(68.67, 63, 0.33, 0.67), vec4(69.0, 62, 1.67, 0.58), vec4(70.67, 66, 0.33, 0.65), vec4(71.0, 55, 0.67, 0.54), vec4(71.67, 56, 0.33, 0.59), vec4(72.0, 55, 0.67, 0.57), vec4(72.67, 62, 0.33, 0.71), vec4(73.0, 69, 0.83, 0.7), vec4(84.0, 58, 1.17, 0.57), vec4(89.0, 74, 1.0, 0.55), vec4(91.0, 73, 1.0, 0.57), vec4(92.0, 70, 0.33, 0.54), vec4(92.33, 67, 0.33, 0.54), vec4(92.67, 66, 0.33, 0.6), vec4(93.0, 67, 0.33, 0.6), vec4(93.33, 63, 0.33, 0.53), vec4(93.67, 67, 0.33, 0.66), vec4(94.0, 60, 0.33, 0.5), vec4(94.33, 53, 0.33, 0.55), vec4(94.67, 56, 0.33, 0.6), vec4(95.0, 57, 2.0, 0.57), vec4(97.0, 60, 1.0, 0.69), vec4(98.0, 59, 1.0, 0.57), vec4(99.0, 56, 1.0, 0.59), vec4(100.0, 59, 1.0, 0.61), vec4(101.0, 60, 1.0, 0.62), vec4(102.0, 59, 1.0, 0.62), vec4(103.0, 56, 1.0, 0.59), vec4(104.0, 59, 1.0, 0.65), vec4(105.0, 60, 1.0, 0.64), vec4(106.0, 59, 0.5, 0.54), vec4(106.5, 60, 0.17, 0.64), vec4(106.67, 59, 1.33, 0.61), vec4(108.0, 64, 1.0, 0.69), vec4(109.0, 65, 1.0, 0.64), vec4(110.0, 64, 1.0, 0.6), vec4(111.0, 61, 1.0, 0.52), vec4(112.0, 64, 1.0, 0.65), vec4(113.0, 65, 1.0, 0.62), vec4(114.0, 64, 1.0, 0.57), vec4(115.0, 61, 1.0, 0.55), vec4(116.0, 64, 1.0, 0.61), vec4(117.0, 65, 1.0, 0.63), vec4(118.0, 64, 0.5, 0.54), vec4(118.5, 65, 0.17, 0.64), vec4(118.67, 64, 0.33, 0.6), vec4(119.0, 64, 1.0, 0.61), vec4(120.0, 69, 1.0, 0.69), vec4(121.0, 70, 1.0, 0.63), vec4(122.0, 69, 1.0, 0.57), vec4(123.0, 66, 1.0, 0.55), vec4(124.0, 69, 1.0, 0.63), vec4(125.0, 70, 0.67, 0.65), vec4(128.0, 57, 0.33, 0.54), vec4(128.33, 63, 0.33, 0.7), vec4(128.67, 67, 0.33, 0.72), vec4(129.0, 66, 1.0, 0.61), vec4(130.0, 67, 1.0, 0.63), vec4(131.0, 69, 1.0, 0.65), vec4(132.0, 70, 2.0, 0.66), vec4(134.0, 71, 1.0, 0.59), vec4(135.0, 73, 1.0, 0.62), vec4(136.0, 74, 0.67, 0.61), vec4(136.67, 74, 0.33, 0.58), vec4(137.0, 74, 3.0, 0.61), vec4(140.0, 71, 0.67, 0.55), vec4(140.67, 70, 0.33, 0.56), vec4(141.0, 67, 0.67, 0.55), vec4(141.67, 74, 0.33, 0.73), vec4(142.0, 67, 1.0, 0.5), vec4(143.0, 66, 2.0, 0.56), vec4(145.0, 67, 2.0, 0.62), vec4(147.0, 71, 1.0, 0.68), vec4(148.0, 64, 2.67, 0.48), vec4(150.67, 64, 0.33, 0.61), vec4(151.0, 64, 0.67, 0.57), vec4(151.67, 63, 0.33, 0.58), vec4(152.0, 70, 0.67, 0.7), vec4(152.67, 70, 0.33, 0.6), vec4(153.0, 70, 2.0, 0.62), vec4(155.0, 70, 2.0, 0.61), vec4(157.0, 70, 1.0, 0.62), vec4(158.0, 70, 1.0, 0.62), vec4(159.0, 70, 1.0, 0.61), vec4(160.0, 70, 1.0, 0.61), vec4(161.0, 70, 0.33, 0.61), vec4(162.0, 67, 0.33, 0.55), vec4(163.33, 57, 0.33, 0.53), vec4(163.67, 60, 0.33, 0.65), vec4(164.0, 57, 1.67, 0.59));\nconst vec4 notes9[253] = vec4[253](vec4(0.0, 63, 0.33, 0.54), vec4(0.33, 67, 0.33, 0.67), vec4(0.67, 70, 0.33, 0.67), vec4(1.0, 73, 1.0, 0.67), vec4(2.0, 63, 0.33, 0.48), vec4(2.33, 67, 0.33, 0.65), vec4(2.67, 70, 0.33, 0.65), vec4(3.0, 73, 1.0, 0.68), vec4(4.0, 63, 0.33, 0.45), vec4(4.33, 67, 0.33, 0.65), vec4(4.67, 66, 0.33, 0.58), vec4(5.0, 53, 0.33, 0.52), vec4(5.33, 56, 0.33, 0.61), vec4(5.67, 60, 0.33, 0.64), vec4(6.0, 53, 0.17, 0.55), vec4(6.17, 50, 0.17, 0.58), vec4(6.33, 49, 0.33, 0.58), vec4(6.67, 56, 0.33, 0.65), vec4(7.0, 46, 1.0, 0.57), vec4(8.0, 63, 0.33, 0.76), vec4(8.33, 67, 0.33, 0.71), vec4(8.67, 70, 0.33, 0.64), vec4(9.0, 73, 1.0, 0.66), vec4(10.0, 63, 0.33, 0.47), vec4(10.33, 60, 0.33, 0.52), vec4(10.67, 67, 0.33, 0.71), vec4(11.0, 63, 0.67, 0.57), vec4(11.67, 60, 0.33, 0.52), vec4(12.0, 57, 0.33, 0.59), vec4(12.33, 63, 0.33, 0.69), vec4(12.67, 57, 0.33, 0.55), vec4(13.0, 60, 1.0, 0.69), vec4(14.0, 57, 0.33, 0.57), vec4(14.33, 60, 0.33, 0.65), vec4(14.67, 57, 0.33, 0.61), vec4(15.0, 59, 2.0, 0.57), vec4(17.0, 53, 1.0, 0.54), vec4(18.0, 56, 1.0, 0.64), vec4(19.0, 53, 1.0, 0.57), vec4(20.0, 56, 1.0, 0.63), vec4(21.0, 53, 1.0, 0.6), vec4(22.0, 56, 2.0, 0.66), vec4(24.0, 58, 0.67, 0.59), vec4(24.67, 55, 0.33, 0.59), vec4(25.0, 52, 0.67, 0.59), vec4(25.67, 55, 0.33, 0.61), vec4(26.0, 58, 0.67, 0.64), vec4(26.67, 59, 0.33, 0.63), vec4(27.0, 62, 0.17, 0.64), vec4(27.17, 65, 0.17, 0.68), vec4(27.33, 62, 0.33, 0.57), vec4(27.67, 59, 0.33, 0.57), vec4(28.0, 58, 0.67, 0.56), vec4(28.67, 55, 1.0, 0.55), vec4(29.67, 52, 0.67, 0.54), vec4(30.33, 49, 0.67, 0.56), vec4(31.0, 41, 0.67, 0.52), vec4(31.67, 45, 0.33, 0.61), vec4(32.0, 52, 0.67, 0.64), vec4(32.67, 48, 0.33, 0.57), vec4(33.0, 52, 0.33, 0.67), vec4(33.33, 58, 0.33, 0.66), vec4(33.67, 59, 0.33, 0.64), vec4(34.0, 62, 0.5, 0.65), vec4(34.5, 59, 0.17, 0.57), vec4(34.67, 58, 1.33, 0.6), vec4(36.0, 54, 1.0, 0.53), vec4(37.0, 58, 4.0, 0.64), vec4(41.0, 57, 1.0, 0.61), vec4(42.0, 53, 1.0, 0.59), vec4(43.0, 57, 2.0, 0.62), vec4(45.0, 63, 0.33, 0.69), vec4(45.33, 67, 0.33, 0.71), vec4(45.67, 70, 0.33, 0.65), vec4(46.0, 73, 1.0, 0.69), vec4(47.0, 63, 0.33, 0.46), vec4(47.33, 67, 0.33, 0.69), vec4(47.67, 70, 0.33, 0.65), vec4(48.0, 73, 1.0, 0.64), vec4(49.0, 63, 0.33, 0.46), vec4(49.33, 67, 0.33, 0.63), vec4(49.67, 70, 0.33, 0.64), vec4(50.0, 57, 0.33, 0.54), vec4(50.33, 53, 0.33, 0.54), vec4(50.67, 60, 0.33, 0.7), vec4(51.0, 53, 0.33, 0.57), vec4(51.33, 49, 0.33, 0.54), vec4(51.67, 46, 0.33, 0.57), vec4(52.0, 46, 1.0, 0.57), vec4(53.0, 63, 0.33, 0.79), vec4(53.33, 67, 0.33, 0.73), vec4(53.67, 70, 0.33, 0.68), vec4(54.0, 73, 1.0, 0.69), vec4(55.0, 63, 0.33, 0.47), vec4(55.33, 67, 0.33, 0.65), vec4(55.67, 70, 0.33, 0.68), vec4(56.0, 63, 0.5, 0.49), vec4(56.5, 66, 0.17, 0.61), vec4(56.67, 63, 0.33, 0.54), vec4(57.0, 60, 1.0, 0.53), vec4(58.0, 59, 0.5, 0.61), vec4(58.5, 60, 0.17, 0.65), vec4(58.67, 59, 0.33, 0.61), vec4(59.0, 59, 0.67, 0.63), vec4(59.67, 56, 0.33, 0.57), vec4(60.0, 53, 0.67, 0.57), vec4(60.67, 59, 0.33, 0.65), vec4(61.0, 59, 0.33, 0.61), vec4(61.33, 56, 1.0, 0.6), vec4(62.33, 53, 0.33, 0.6), vec4(62.67, 52, 0.33, 0.57), vec4(63.0, 49, 0.67, 0.61), vec4(63.67, 52, 0.33, 0.61), vec4(64.0, 53, 0.5, 0.61), vec4(64.5, 56, 0.17, 0.6), vec4(64.67, 53, 0.33, 0.57), vec4(65.0, 53, 0.67, 0.59), vec4(65.67, 52, 0.33, 0.57), vec4(66.0, 49, 0.67, 0.6), vec4(66.67, 46, 0.33, 0.54), vec4(67.0, 49, 2.67, 0.66), vec4(69.67, 55, 0.33, 0.64), vec4(70.0, 52, 3.0, 0.62), vec4(73.0, 59, 0.67, 0.64), vec4(73.67, 56, 0.33, 0.58), vec4(74.0, 55, 1.67, 0.57), vec4(75.67, 50, 0.33, 0.6), vec4(76.0, 51, 0.67, 0.6), vec4(76.67, 55, 0.33, 0.61), vec4(77.0, 51, 0.5, 0.58), vec4(77.5, 52, 0.17, 0.6), vec4(77.67, 51, 0.33, 0.61), vec4(78.0, 48, 0.67, 0.59), vec4(78.67, 52, 0.33, 0.65), vec4(79.0, 58, 0.67, 0.64), vec4(79.67, 65, 0.33, 0.69), vec4(80.0, 68, 0.33, 0.65), vec4(80.33, 65, 0.33, 0.55), vec4(80.67, 62, 0.33, 0.56), vec4(81.0, 61, 1.33, 0.54), vec4(82.33, 58, 1.67, 0.57), vec4(84.0, 54, 1.0, 0.6), vec4(85.0, 58, 0.33, 0.63), vec4(85.33, 64, 0.33, 0.69), vec4(85.67, 67, 0.33, 0.66), vec4(86.0, 68, 0.33, 0.65), vec4(86.33, 67, 0.33, 0.59), vec4(86.67, 64, 0.33, 0.54), vec4(87.0, 64, 0.67, 0.61), vec4(87.67, 61, 0.33, 0.55), vec4(88.0, 63, 0.33, 0.65), vec4(88.33, 67, 0.33, 0.66), vec4(88.67, 63, 0.33, 0.53), vec4(89.0, 60, 1.0, 0.51), vec4(90.0, 63, 0.33, 0.66), vec4(90.33, 67, 0.33, 0.69), vec4(90.67, 63, 0.33, 0.5), vec4(91.0, 66, 0.67, 0.68), vec4(91.67, 70, 0.33, 0.67), vec4(92.0, 63, 0.33, 0.5), vec4(92.33, 60, 0.33, 0.53), vec4(92.67, 63, 0.33, 0.65), vec4(93.0, 53, 0.33, 0.54), vec4(93.33, 60, 0.33, 0.66), vec4(93.67, 57, 0.33, 0.58), vec4(94.0, 46, 0.33, 0.53), vec4(94.33, 49, 0.33, 0.57), vec4(94.67, 50, 0.33, 0.61), vec4(95.0, 46, 2.0, 0.56), vec4(97.0, 53, 10.0, 0.64), vec4(107.0, 51, 0.67, 0.58), vec4(107.67, 55, 0.33, 0.64), vec4(108.0, 59, 0.67, 0.63), vec4(108.67, 58, 0.33, 0.53), vec4(109.0, 58, 10.0, 0.61), vec4(119.0, 56, 0.67, 0.62), vec4(119.67, 60, 0.33, 0.66), vec4(120.0, 64, 0.67, 0.66), vec4(120.67, 63, 0.33, 0.57), vec4(121.0, 63, 4.67, 0.6), vec4(125.67, 56, 0.33, 0.54), vec4(126.0, 57, 0.33, 0.58), vec4(126.33, 53, 0.33, 0.54), vec4(126.67, 60, 0.33, 0.72), vec4(127.0, 50, 0.33, 0.54), vec4(127.33, 49, 0.33, 0.58), vec4(127.67, 46, 0.33, 0.59), vec4(128.0, 46, 0.33, 0.59), vec4(128.33, 50, 0.33, 0.63), vec4(128.67, 57, 0.33, 0.65), vec4(129.0, 62, 1.0, 0.72), vec4(130.0, 63, 1.0, 0.65), vec4(131.0, 65, 1.0, 0.64), vec4(132.0, 66, 2.0, 0.64), vec4(134.0, 67, 1.0, 0.65), vec4(135.0, 69, 1.0, 0.66), vec4(136.0, 70, 0.67, 0.63), vec4(136.67, 67, 0.33, 0.56), vec4(137.0, 66, 0.67, 0.57), vec4(137.67, 67, 0.33, 0.65), vec4(138.0, 66, 0.67, 0.61), vec4(138.67, 71, 0.33, 0.66), vec4(139.0, 70, 0.67, 0.59), vec4(139.67, 71, 0.33, 0.66), vec4(140.0, 67, 0.67, 0.54), vec4(140.67, 60, 0.33, 0.48), vec4(141.0, 54, 1.0, 0.53), vec4(142.0, 57, 0.67, 0.61), vec4(142.67, 60, 0.33, 0.62), vec4(143.0, 61, 1.0, 0.64), vec4(144.0, 62, 1.0, 0.66), vec4(145.0, 63, 0.67, 0.63), vec4(145.67, 64, 0.33, 0.64), vec4(146.0, 59, 0.67, 0.56), vec4(146.67, 60, 0.33, 0.57), vec4(147.0, 63, 1.0, 0.65), vec4(148.0, 59, 1.0, 0.54), vec4(149.0, 60, 0.67, 0.62), vec4(149.67, 63, 0.33, 0.68), vec4(150.0, 56, 0.67, 0.55), vec4(150.67, 56, 0.33, 0.62), vec4(151.0, 57, 1.67, 0.61), vec4(152.67, 67, 0.33, 0.72), vec4(153.0, 66, 0.67, 0.6), vec4(153.67, 63, 0.33, 0.54), vec4(154.0, 60, 0.5, 0.56), vec4(154.5, 57, 0.17, 0.55), vec4(154.67, 60, 0.33, 0.63), vec4(155.0, 63, 0.67, 0.65), vec4(155.67, 60, 0.33, 0.54), vec4(156.0, 66, 0.67, 0.7), vec4(156.67, 60, 0.33, 0.52), vec4(157.0, 63, 0.33, 0.66), vec4(157.33, 67, 0.33, 0.65), vec4(157.67, 66, 0.33, 0.57), vec4(158.0, 67, 0.33, 0.61), vec4(158.33, 63, 0.33, 0.54), vec4(158.67, 67, 0.33, 0.67), vec4(159.0, 70, 0.67, 0.65), vec4(159.67, 63, 0.33, 0.51), vec4(160.0, 67, 0.67, 0.64), vec4(160.67, 60, 0.33, 0.51), vec4(161.0, 63, 0.33, 0.64), vec4(161.33, 67, 0.33, 0.65), vec4(161.67, 66, 0.33, 0.55), vec4(162.0, 53, 0.33, 0.5), vec4(162.33, 56, 0.33, 0.6), vec4(162.67, 60, 0.33, 0.66), vec4(163.0, 53, 0.17, 0.59), vec4(163.17, 50, 0.17, 0.52), vec4(163.33, 49, 0.33, 0.6), vec4(163.67, 56, 0.33, 0.65), vec4(164.0, 46, 1.67, 0.55));\nconst int sizes[10] = int[10](9,142,163,128,179,122,320,281,121,253);\n\nvec4 getNoteData(int channel, int n) {\n    switch(channel) {\n        case 0: return notes0[n];\n        case 1: return notes1[n];\n        case 2: return notes2[n];\n        case 3: return notes3[n];\n        case 4: return notes4[n];\n        case 5: return notes5[n];\n        case 6: return notes6[n];\n        case 7: return notes7[n];\n        case 8: return notes8[n];\n        case 9: return notes9[n];\n        \n    }\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvec4 getNoteBox(vec4 note, float t) {\n    t -= INTRO;\n    float m = 60. / BPM;\n    note.xz *= m;\n    float interval = 2.5 / 88.; \n    return vec4(note.x + note.z / 2. - t,                        \n               (note.y - CENTER) * interval * 2. - interval / 2.,\n                note.z / 2.,\n                interval * 2.);\n}\n\nfloat ndot(vec2 a, vec2 b ) { return a.x*b.x - a.y*b.y; }\nfloat sdRhombus( in vec2 p, in vec2 b ) \n{\n    p = abs(p);\n    float h = clamp( ndot(b-2.0*p,b)/dot(b,b), -1.0, 1.0 );\n    float d = length( p-0.5*b*vec2(1.0-h,1.0+h) );\n    return d * sign( p.x*b.y + p.y*b.x - b.x*b.y );\n}\n\nfloat sdStar5(in vec2 p, in float r, in float rf)\n{\n    const vec2 k1 = vec2(0.809016994375, -0.587785252292);\n    const vec2 k2 = vec2(-k1.x,k1.y);\n    p.x = abs(p.x);\n    p -= 2.0*max(dot(k1,p),0.0)*k1;\n    p -= 2.0*max(dot(k2,p),0.0)*k2;\n    p.x = abs(p.x);\n    p.y -= r;\n    vec2 ba = rf*vec2(-k1.y,k1.x) - vec2(0,1);\n    float h = clamp( dot(p,ba)/dot(ba,ba), 0.0, r );\n    return length(p-ba*h) * sign(p.y*ba.x-p.x*ba.y);\n}\n\nfloat sdSphere(in vec2 p, in float r) {\n    return length(p) - r;\n}\n\nfloat sdNote(in vec2 p, in vec2 wh, in int channel) {\n    float d = sdBox(p, wh);\n    if(channel == 4) d = sdSphere(p, wh.x);\n    if(channel == 1) d = sdRhombus(p, wh);\n    return d;\n}\n\nvec2 rotate(vec2 uv, float th) {\n    return mat2(cos(th), sin(th), -sin(th), cos(th)) * uv;\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat noteToFrequency(float n) {\n    return 440. * exp2((n-60.)/12.);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "#define pi 3.14159\n\n\n// Various temperaments, expressed as the number of cents from which they differ\n// from the equal temperament.\n// https://en.wikipedia.org/wiki/Musical_temperament\n\n// 12-tone equal temperament\nconst float[] adjustment = float[12](0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);\n\n//Five-limit tuning: unpleasant intervals appear when modulating\n//const float[] adjustment = float[12](0., 12., 4., 16., -14., -2., -10., 2., 14., -16., 18., -12.);\n\n// 1/4 comma meantone\n//const float[] adjustment = float[12](0., 16., -6., 10., -13., 3., -19., -3., 13., -10., 6., -16.);\n\nfloat pitch(float i)\n{\n    // Chromatic scale degree within the G minor scale.\n    // Goes from 0 (note B) to 11 (note A#).\n    int degree = int(mod(i + 1., TET));\n    // Baroque tuning (middle A = 415hz vs 440hz)\n    // Adjust each degree with the number of cents prescribed.\n    return 261.625565 * pow(2., (i - (60.) + 0.01*adjustment[degree]) / TET);\n}\n\nvec2 wave(vec2 f, vec2 a, float time)\n{\n    vec2 w = 2.*pi*fract(f * time);\n    //float v = pow(abs(sin(w / 2.)), 8.) - .5;\n    //float v = pow(max(0., (sin(w) + 1.) / 2.), 2.) - .5;\n    vec2 sw = sin(w/2.);\n    vec2 sw2 = sw*sw;\n    vec2 v = sw2*sw2 - .375; // Remove DC offset\n    //vec2 v = sw2*sw2*sw2 - .3125; // Remove DC offset\n    a *= sqrt(clamp(800./f, 1., 10.));\n    return a * v;\n}\n\nvec2 organ(vec2 f, float time)\n{\n    vec2 sound = vec2(0);\n    sound += wave(f, vec2(.08), time);\n    sound += wave(f * 2., vec2(0.8,1)*.01, time);\n    sound += wave(f * 4., vec2(.004), time);\n    sound += wave(f * .5, vec2(1,0.5)*.008, time);\n    return sound;\n}\n\n\nvec2 mainSound(int samp, float time)\n{\n    vec2 sound = vec2(0);\n\n    float t = time - INTRO;\n    t *= BPM / 60.;\n    for(int channel = 0; channel < CHANNELS; channel++)\n        for (int i=min(0, int(iSampleRate)) ; i<sizes[channel]; ++i)\n        {\n            vec4 note = getNoteData(channel, i);\n            note.y;\n            if (note.w == -1.)\n                continue;\n            if (note.x < t && t < note.x + note.z  + 5.)\n            {\n                float f = pitch(note.y);\n                float velocity = note.w;\n                // Add random pitch variation per note,\n                // so that if several notes with the same pitch are\n                // played at the same time, they are still\n                // decorrelated.\n                // Otherwise the combined tone sounds too loud\n                // (amplitude proportional to n, instead of sqrt(n)).\n                f += 0.3*sin(float(i));\n\n                float pos = sin(note.w);\n                vec2 pan = sqrt(vec2(1) + 0.5*vec2(1,-1)*pos);\n\n\n                float t_in = t - note.x; // Time since attack\n                float t_out = t_in - note.z; // Time since release\n                float env = smoothstep(0., .05, t_in) * smoothstep(.05,0.,t_out);\n                sound += velocity * pan*env*organ(vec2(f), time);\n                float rtime = 0.1 + smoothstep(100.,400.,f);\n                float rtau = 99./rtime; // Reverb decay time: lower for bass notes\n                float env_verb = clamp(1.-exp(-t_in*rtau),0.,1.)*clamp(exp(-t_out*rtau),0.,1.);\n                sound += velocity * 0.5 * rtime * env_verb * organ(f+vec2(-.2,.32), time);\n\n            }\n        }\n\n    return sound;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}