{
    "Shader": {
        "info": {
            "date": "1543654102",
            "description": "The shader I made at the Cookie Demoparty against Nusan",
            "flags": 0,
            "hasliked": 0,
            "id": "4lVfzd",
            "likes": 9,
            "name": "Cheddar the cat",
            "published": 3,
            "tags": [
                "2d",
                "cute",
                "cat",
                "cheddar"
            ],
            "usePreview": 0,
            "username": "Eybor",
            "viewed": 564
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592\n\nfloat h(vec2 uv)\n{\n    float a = acos(cos(clamp(mod((atan(uv.x, -uv.y)+PI)*10., 14.*PI)-2.*PI, 0., 2.*PI)))/PI;\n\n    return smoothstep(.0075, .015, abs(length(uv)-(.4+a*.2)));\n}\n\nfloat e(vec2 uv, vec2 p)\n{\n    uv += p;\n    uv /= vec2(.2, .1);\n    float d = smoothstep(.625, .7, length(uv));\n\n    uv += vec2(.3, -.25);\n\n    d += smoothstep(.175, .1, length(uv));\n\n    uv += vec2(-.2, .2);\n\n    d += smoothstep(.1, .05, length(uv));\n\n    return d;\n}\n\nfloat n(vec2 uv)\n{\n    return smoothstep(0.04, 0.055, abs(uv.x)+mix(-uv.y, 1., smoothstep(-.01, .2, uv.y)));\n}\n\nfloat m(vec2 uv, vec2 p)\n{\n    uv += p;\n\n    float h = 0.01;\n\n    float d = mix(1., smoothstep(.001, .0075, abs(uv.y-(abs(uv.x)*.1+cos(uv.x*70.)*h))), step(-0.08, uv.x)*(1.-step(0.08, uv.x)));\n\n    d *= mix(1., smoothstep(0.002, 0.007, abs(uv.x)), step(h, uv.y)*(1.-step(p.y, uv.y)));\n\n    return d;\n}\n\nvec2 rot(vec2 v, float a)\n{\n    return mat2(cos(a), sin(a), -sin(a), cos(a))*v;\n}\n\nfloat s(vec2 uv, vec2 p, float r, float inv)\n{\n    uv += p;\n    uv = rot(uv, r*(2.*inv-1.));\n\n    float f1 = mix(1.-step(-0.05, uv.x), step(0.05, uv.x), inv);\n    float f2 = mix(step(-0.25, uv.x), 1.-step(0.25, uv.x), inv);\n\n    return mix(1., smoothstep(0., 0.007, abs(uv.y+uv.x*uv.x)), f1*f2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n  \tvec3 co = vec3(1.);\n\n  \tvec2 eOffset = vec2(.2, -.1);\n  \tvec2 sOffset = vec2(0., .05);\n  \tvec2 mOffset = vec2(0., .1);\n  \tvec2 fOffset = vec2(0., .1);\n\n  \tuv.y *= 1.5;\n\n  \tuv = rot(uv, .2);\n\n    co *= h(uv);\n\n    uv += fOffset;\n\n    co *= e(uv, eOffset);\n    co *= e(uv, eOffset*vec2(-1., 1.));\n\n    co *= n(uv);\n    co *= m(uv, mOffset);\n    co *= s(uv, sOffset, -.20, 1.);\n    co *= s(uv, sOffset, -.10, 1.);\n    co *= s(uv, sOffset,  .10, 1.);\n    co *= s(uv, sOffset, -.25, 0.);\n    co *= s(uv, sOffset, -.15, 0.);\n    co *= s(uv, sOffset,  .10, 0.);\n\n    fragColor = vec4(co, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}