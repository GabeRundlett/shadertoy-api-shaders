{
    "Shader": {
        "info": {
            "date": "1638984225",
            "description": "bit of a mess,\nbasically cut out 1 section of equation from here:\nhttps://math.stackexchange.com/questions/1353065/function-that-graphs-repeating-upper-halves-of-circles\n...then copy + paste + rotated a few times",
            "flags": 0,
            "hasliked": 0,
            "id": "Nl3XD8",
            "likes": 16,
            "name": "2.5D sphere 2",
            "published": 3,
            "tags": [
                "e"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 398
        },
        "renderpass": [
            {
                "code": "#define pi 3.14159\n\nfloat thc(float a, float b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nfloat ths(float a, float b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec2 thc(float a, vec2 b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nvec2 ths(float a, vec2 b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat h21 (vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat mlength(vec2 uv) {\n    return max(abs(uv.x), abs(uv.y));\n}\n\nvec2 rot(vec2 uv, float a) {\n    //float s = 2. + cos(a + iTime);\n    //mat2 m = mat2(thc(s,a), ths(s,a), -ths(s,a), thc(s,a));\n\n    mat2 m = mat2(cos(a), sin(a), -sin(a), cos(a));\n    return m * uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv2 = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n\n    float r = 0.3;\n    float s = 0.;\n    \n    // not consistently using this (given up on keeping things tidy)\n    float time = 0.3 * iTime;\n       \n    for (float i = 0.; i<20.; i++ ) {\n        float n = i / 8. * pi ;\n        vec2 uv = rot(uv2, i * 10. + iTime * (0.1 + i / 40.));\n        \n        //--\n        vec2 p = vec2(r * cos(iTime) * cos(4. * uv.y), 0.);\n\n        float k = 0.5 * thc(1., iTime) + 3.;\n   \n\n        float y = k * uv.y;\n    \n        float m = 0.08;\n        float se = smoothstep(-m, m, 1. - y) * smoothstep(-m, m, y + 1.);\n        //--\n        \n        \n        // circle equation\n        float a = mod(y + 1., 2.) - 1.;  \n        float b = pow(a, 2.);\n        float c = cos(n + time) * sqrt(1. - b);\n        float c2 = cos(pi + n + time) * sqrt(1. - b);\n\n        float d = abs(uv.x - 1./k * c);//abs(uv.x - 0.4 * cos(iTime) * cos(10. * uv.y));\n        float d2 = abs(uv.x - 1./k * c2);\n   \n       \n        float k2 = 0.4 + 0.4 * thc(2., 0.1 * i + 4. * uv.y + time);\n        \n        k2 = 0.4 + 4. * pow(cos(10. * i + uv.y - time), 11.);\n        k2 *= 0.2;//0.3 + 0.1 * cos(time + 10. * i);\n       \n        float s1 = smoothstep(-k2, k2,        \n        -d + 0.012 * (1. - 0.5 * thc(4., 20. * uv.y - 10. * n - 8. * time)) );\n        s1 -= smoothstep(-0.01,0.01, -d + 0.005 * (1. - 0.5 * thc(4., 20. * uv.y - 10. * n - 8. * time)) );\n        s1 *= 3. * s1 * s1 * se;\n          \n        float s2 = smoothstep(-k2, k2,        \n        -d2 + 0.012 * (1. - 0.5 * thc(4., 20. * uv.y - 10. *  n - 8. * time)));\n        s2 -= smoothstep(-0.01,0.01, -d2 + 0.005 * (1. - 0.5 * thc(4., 20. * uv.y - 10. *  n - 8. * time)));\n        s2 *= 3. * s2 * s2 * se; // 3. * s1 * s2 * se;\n        \n        s += (s1 + s2) * 0.5 * (1. + thc(4., i + 4. * time));\n    }\n    \n    s = clamp(s, 0., 1.);\n    vec3 col = vec3(s);\n    col += .25 * s * pal(2. * s + 0.1 * iTime, vec3(1.), vec3(1.), vec3(1.), 0.5 * vec3(0.,0.33,0.66));\n    col += vec3(0.025,0.,0.05);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}