{
    "Shader": {
        "info": {
            "date": "1663305732",
            "description": "Yet another fractal mosaic pattern.",
            "flags": 8,
            "hasliked": 0,
            "id": "7ttfRB",
            "likes": 4,
            "name": "Fractal mosaic 19 (music)",
            "published": 3,
            "tags": [
                "fractal",
                "music",
                "mosaic",
                "rug"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 295
        },
        "renderpass": [
            {
                "code": "vec2 triangle_wave(vec2 a){\n    vec2 a2 = //change this constant to get other interesting patterns\n        vec2(1.,0.5)\n        //vec2(1.5,0.5)\n        //vec2(-2.,.5+mod(floor(a.x),2.))\n\n        ///vec2(1.,.5+floor(a.y-.5)/2.)\n        //vec2(2.,0.)\n        //vec2(1.5,0.)\n        //vec2(1.25,1.75)\n        //vec2(abs(mod(a.x-.5,2.)-1.),abs(mod(a.y-.5,2.)-1.))\n    ,\n    \n    a1 = a+a2;\n    //a1 *= (1. + fmod(abs(a1/2.),2.));\n    return abs(fract((a1)*(a2.x+a2.y))-.5);\n}\n\n\n\nvec3 image1(vec2 uv){\n    vec3 col = vec3(0.);\n    vec3 col1 = col;\n    float scale = 1.5;\n    vec2 t2 = vec2(0.);\n    for(int k = 0; k < 3; k++){\n        //uv += floor(uv);\n        uv = abs(uv+t2);\n        \n        t2 = triangle_wave(uv+.5);\n        uv = t2-triangle_wave(uv.yx);\n        if(iMouse.z>.5)\n        uv = uv.xy + iMouse.xy / iResolution.xy;\n        \n        col.x =\n            //(length(uv-t2.yx)-.5)*3.;\n            //(length(uv-t2.yx)-t2.x)*3.;\n            (length(uv-t2.yx)-uv.x)*3.;\n            //(length(uv*t2.yx)-uv.x)*2.;\n        col =\n            min(abs(abs(col-1.)-col),abs(abs(col-1.)-col.yzx));\n            //min(abs(abs(col.yzx-1.)-col),abs(abs(col-1.)-col));\n        col1 =\n            abs(col1+col.yzx-1.);\n            //abs(col1.yzx*col+col-1.);\n            //abs(col1*col.yzx+col.yzx-1.);\n            //if(t2.y>t2.x) {uv=uv.yx;t2=t2.yx;}\n        //if(t2.x>t2.y) col1=col1.yzx;\n    }\n    return col1;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 1.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += iTime/t1/24.;\n    float scale = 1.5;\n    vec2 t2 = vec2(0.);\n    vec3 col1 = image1(uv);\n    fragColor = vec4(col1,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 mainSound(int samp, float t){\n  float m1 =\n      3.\n      //fmod(t/3.,3.)+3.\n  ,\n  s1 = 4.+fmod(t/m1,m1),\n  tempo =\n      3.5,\n      //4./(1.+fmod(t*(1.+fmod(t,2.)),2.)),\n\n      //2.5+fmod(t/4.+floor(t/4.),8.)/4.,\n  t1 = t*tempo+m1,\n  m2 = fmod(t1+floor(t1/m1+floor(t1/s1)/m1),s1+fmod(t1,m1)),\n\n  a=\n      //sqrt((1.-sqrt(fract((t*tempo+m2+t1)/2.))))*.2\n      32.*pow((1.-sqrt(fract((t*tempo+m2+t1)/2.))/1.25),2.)*.2\n  ,\n  \n  nb =\n      t*pow(2.,m2/5.+7.5);\n      //pow(2.,m2/(5.+s1/5.)+7.5);\n\n  return\n      abs(.5-vec2(fract(nb*.998*2.),fract(nb)))*a\n      //vec2(fract(t*nb*.998/(1.+m2)),fract(t*nb/(1.+m2)))*a\n  ;\n}\n\n/*\nvec2 mainSound(int samp, float t){\n  float m1 = 4.,\n  s1 = m1+fmod(t,m1),\n  tempo =\n      2.,\n      //2.5+fmod(t/4.+floor(t/4.),8.)/4.,\n      t1 = t*tempo+m1,\n  m2 = fmod(floor(-t1*m1+floor(t/s1))+floor(t1/m1-floor(t*m1)),s1),\n\n  a=sqrt((1.-sqrt(fract(t*tempo+(m2)/2.))))*.2,\n  \n  nb = pow(2.,m2/5.+7.5);\n\n  return vec2(fract(t*nb*.998)*a\n   ,fract(t*nb)*a);\n}\n*/\n\n/*\nvec2 mainSound(int samp, float t){\n  float m1 = 4.,\n  s1 = m1+fmod(t,m1),\n  tempo =\n      2.,\n      //2.5+fmod(t/4.+floor(t/4.),8.)/4.,\n      t1 = t*tempo+m1,\n  m2 = fmod(floor(-t1*m1+floor(t/m1))+floor(t1/m1-floor(t*m1)),s1),\n\n  a=sqrt((1.-sqrt(fract(t*tempo+(m2)/2.))))*.2,\n  \n  nb = pow(2.,m2/5.+7.5);\n\n  return vec2(fract(t*nb*.998)*a\n   ,fract(t*nb)*a);\n}\n*/\n\n/*\nvec2 mainSound(int samp, float t){\n  float m1 = 4.,\n  s1 = m1+fmod(t,m1),\n  tempo =\n      2.,\n      //2.5+fmod(t/4.+floor(t/4.),8.)/4.,\n      t1 = t*tempo+m1,\n  m2 = fmod(floor(t1*m1)*floor(t1/m1),s1),\n\n  a=sqrt((1.-sqrt(fract(t*tempo+(m2)/2.))))*.2,\n  \n  nb = pow(2.,m2/5.+7.5);\n\n  return vec2(fract(t*nb*.998)*a\n   ,fract(t*nb)*a);\n}\n*/\n\n/*\nvec2 mainSound(int samp, float t){\n  float m1 = 5.,\n  f1 = floor(t+floor(t/m1)),\n  s1 = m1+fmod(t+f1,m1),\n  tempo =\n      3.5,\n      t1 = t*tempo+m1,\n  m2 = fmod(floor(t1)+floor(t1/s1+f1),s1),\n\n  a=sqrt((1.-sqrt(fract(t*tempo+(m2)/2.))))*.2,\n  \n  nb = pow(2.,m2/5.+7.5);\n\n  return vec2(fract(t*nb*.998)*a\n   ,fract(t*nb)*a);\n}\n*/\n\n/*\nvec2 mainSound(int samp, float t){\n  float m1 = 4.,\n\n  tempo =\n      3.5,\n      //2.5+fmod(t/4.+floor(t/4.),8.)/4.,\n      t1 = t*tempo+m1,\n  m2 = fmod(t1+(floor(t1)+floor(t/m1)+floor(t1/m1)),m1+fmod(t1,m1)),\n\n  a=sqrt((1.-sqrt(fract(t*tempo+(m2)/2.))))*.2,\n  \n  nb = pow(2.,m2/5.+7.5);\n\n  return vec2(fract(t*nb*.998)*a\n   ,fract(t*nb)*a);\n}\n\n*/\n\n/*\nvec2 mainSound(int samp, float t){\n  float m1 = 2.+fmod(t,6.),\n  tempo =\n      3.5,\n      //2.5+fmod(t/4.+floor(t/4.),8.)/4.,\n      t1 = t,\n  m2 = fmod(float(samp),m1),\n\n  a=sqrt((1.-sqrt(fract(t*tempo+(m2)/2.))))*.2,\n  \n  nb = pow(2.,m2/5.+7.5);\n\n  return vec2(fract(t*nb*.998)*a\n   ,fract(t*nb)*a);\n}\n*/\n\n/*\nvec2 mainSound(int samp, float t){\n  float m1 = 4.+fmod(t/4.,4.),\n  s1 = 4.+fmod(t/m1,m1),\n  tempo =\n      3.5,\n      //2.5+fmod(t/4.+floor(t/4.),8.)/4.,\n      t1 = t*tempo+m1,\n  m2 = fmod(t1+floor(t1/m1+floor(t1/s1)/m1),s1+fmod(t1,m1)),\n\n  a=sqrt((1.-sqrt(fract(t*tempo+(m2)/2.))))*.2,\n  \n  nb = pow(2.,m2/5.+7.5);\n\n  return vec2(fract(t*nb*.998)*a\n   ,fract(t*nb)*a);\n}\n\n*/\n\n/*\nvec2 mainSound(int samp, float t){\n  float m1 = 4.+fmod(t*4.,4.),\n  s1 = 4.,\n  tempo =\n      4.,\n      t1 = (t*tempo+m1)/m1,\n  m2 = fmod(t1+floor(t1*m1),s1),\n\n  a=sqrt((1.-sqrt(fract(t*tempo+(m2)/2.))))*.2,\n  \n  nb = pow(2.,m2/5.+7.5);\n\n  return vec2(fract(t*nb*.998)*a\n   ,fract(t*nb)*a);\n}\n*/\n\n/*\nvec2 mainSound(int samp, float t){\n  float m1 = 3.,\n  s1 = 8.,\n  tempo =\n      3.,\n      //3.+fmod(t/8.+floor(t/8.),8.)/4.,\n  t1 = t*tempo+m1,\n  m2 = fmod(t1*2.+floor(t1/m1+floor(t1/s1)/m1),s1+fmod(t1,2.)),\n\n  a=sqrt((1.-sqrt(fract(t*tempo+(m2)/2.))))*.2,\n  \n  nb = pow(2.,m2/5.+7.5);\n\n  return vec2(fract(t*nb*.998)*a\n   ,fract(t*nb)*a);\n\n}\n*/\n\n/*\nvec2 mainSound(int samp, float t){\n  float s1 = 8.,\n  tempo =\n      3.5,\n      //2.5+fmod(t/4.+floor(t/4.),8.)/4.,\n      t1 = (t+s1)*tempo,\n      c2 = fmod(t1/tempo,4.),\n      c1 = fmod(t1/4.+c2,2.+fmod(t1*2.,4.)+c2),\n  m2 = c1,\n\n  a=sqrt((1.-sqrt(fract(t*tempo+(m2)/2.))))*.2,\n  \n  nb = pow(2.,m2/5.+7.5);\n\n  return vec2(fract(t*nb*.998)*a\n   ,fract(t*nb)*a);\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            },
            {
                "code": "#define fmod1(x,y) mod(floor(y*((x)/y+floor((x)/y)/y)),y)\n\nfloat fmod(float a, float b){\n    //multiply by prime numbers to get interesting rhythms\n    //a /= 2.;\n    //a /= 1. + max(mod(floor((a))*7.,2.),mod(floor((a))*5.,2.));\n\n    //a += mod(floor((a))*7.,2.);\n    //a /= 5.;\n    \n    return mod(floor(a),b);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}