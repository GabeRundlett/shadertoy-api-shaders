{
    "Shader": {
        "info": {
            "date": "1717151038",
            "description": "Complex tetration, 301 iterations.",
            "flags": 0,
            "hasliked": 0,
            "id": "l3t3Wl",
            "likes": 1,
            "name": "Complex Tetration",
            "published": 3,
            "tags": [
                "colors",
                "complex",
                "tetration"
            ],
            "usePreview": 0,
            "username": "tungster24",
            "viewed": 77
        },
        "renderpass": [
            {
                "code": "// π\n#define PI 3.14159265358\n// 2π\n#define TA 6.28318530718\n// 2π/3\n#define PJ 2.09439510239\n// 4π/3\n#define PK 4.18879020479\n// 3/2π\n#define PL 0.47746482927\n\n//conversion function, don't worry about it\nvec2 exppolar_to_cartesian(float t, float r) {\n    return vec2(cos(t),sin(t))*exp(r);\n}\n\n//returns z^w, z,w ∈ C\nvec2 complex_exponentiate(vec2 z, vec2 w) {\n    float tz = atan(z.y,z.x);\n    float rz = log(distance(z,vec2(0.)));\n    \n    return exppolar_to_cartesian(rz*w.y+tz*w.x,rz*w.x-tz*w.y);\n}\n\n//precursor to the hsv function. x ∈ [0,2π)\nfloat q(float x) {\n    if (x<PJ) return 1. - PL * x;\n    if (x<PK) return 0.;\n    return PL*x - 2.;\n}\n\n//colormapping function. hue ∈ [0,2π], saturation,value ∈ [0,1]\n//it's not quite hsv, but it looks nice :P\nvec3 hsv(float hue, float saturation, float value) {\n    vec3 color = normalize(vec3(q(hue),q(mod(hue-PJ,TA)),q(mod(hue-PK,TA))));\n    color = mix(vec3(1.),color,saturation) * value;\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 z = (fragCoord / iResolution.xy - vec2(0.9,0.5)) * iResolution.xy/iResolution.yy * 2.0;\n    vec2 z0 = z;\n    \n    for (int i = 0;i < 301;i++) {\n        z = complex_exponentiate(z0,z);\n    }\n    float r = distance(z,vec2(0.));\n    fragColor = vec4(hsv(atan(z.y,z.x)+PI,clamp(1.0-sqrt(r)*0.3,0.0,1.0),sqrt(min(r,1.0))),0.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}