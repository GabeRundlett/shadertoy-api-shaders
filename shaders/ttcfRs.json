{
    "Shader": {
        "info": {
            "date": "1613248714",
            "description": "Distance estimate to n-focal ellipse.",
            "flags": 0,
            "hasliked": 0,
            "id": "ttcfRs",
            "likes": 4,
            "name": "N-Focal Ellipse DE",
            "published": 3,
            "tags": [
                "distance",
                "de",
                "ellipse",
                "bound",
                "nfocalellipse",
                "foci"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 149
        },
        "renderpass": [
            {
                "code": "#define FOCI 10\n\n// Not exact (but it tries to be)\nfloat sdNFocalEllipse(in vec2 p, in vec2[FOCI] foci, in float e) {\n    vec2 g = vec2(0.0);\n    float d = length(p - foci[0]);\n    for (int fp=1; fp < foci.length(); fp++) {\n        vec2 tf = p - foci[fp];\n        float l = length(tf);\n        g += tf / l;\n        d += l;\n    }\n\n    return (d - e) / length(g);\n}\n\nfloat Hash11(in float x) {\n    return fract(593.594 * cos(x * 695.395));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float unit = 2.0 / iResolution.y;\n    float time = iTime * 2.0;\n\n    float fd = 1000000.0;\n    vec2[FOCI] foci;\n    for (int fp=0; fp < FOCI; fp++) {\n        float id = float(fp);\n        float o11 = Hash11(id * 594.394 + 284.958) + 0.5;\n        float o21 = Hash11(id * 264.596 + 476.694) + 0.5;\n        float o12 = Hash11(id * 395.472 + 395.483) + 0.5;\n        float o22 = Hash11(id * 953.385 + 395.584) + 0.5;\n        float s1 = Hash11(id * 294.495 + 284.585) + 0.5;\n        float s2 = Hash11(id * 848.384 + 385.485) + 0.5;\n\n        vec2 scale = vec2(0.25 * (iResolution.x / iResolution.y), 0.25);\n        foci[fp] = vec2(cos(time * o11 + o21) * s1, sin(time * o12 + o22) * s2) * scale;\n        fd = min(fd, length(uv - foci[fp]) - 0.02);\n    }\n\n    float d = sdNFocalEllipse(uv, foci, 4.5);\n\n    // Nice colors from iq\n    vec3 color = 1.0 - sign(d) * vec3(0.1, 0.4, 0.7);\n\tcolor *= 1.0 - exp(-4.0 * abs(d));\n\tcolor *= 0.8 + 0.2 * cos(140.0 * d);\n\tcolor = mix(color, vec3(1.0), 1.0 - smoothstep(0.0, 0.015, abs(d)));\n\n    fragColor = vec4(mix(color, vec3(0.25, 0.25, 1.0), smoothstep(unit, 0.0, fd)), 1.0);\n    fragColor -= smoothstep(unit * 0.75, 0.0, abs(fd));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}