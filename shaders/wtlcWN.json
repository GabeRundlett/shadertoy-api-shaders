{
    "Shader": {
        "info": {
            "date": "1592148037",
            "description": "Keep m1 pressed on a hue to expand it. The closer to the center, the more it will expand.\nhttps://thebookofshaders.com/06/\nExercise: Use a shaping function to expand a particular hue value and shrink the rest.",
            "flags": 0,
            "hasliked": 0,
            "id": "wtlcWN",
            "likes": 0,
            "name": "BoS - HSB in polar coords",
            "published": 3,
            "tags": [
                "bookofshaders"
            ],
            "usePreview": 0,
            "username": "zeta",
            "viewed": 373
        },
        "renderpass": [
            {
                "code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\n// Function from IÃ±igo Quiles\n// https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\n// http://www.flong.com/texts/code/shapers_poly/\nfloat doubleCubicSeatWithLinearBlend(float x, float a, float b)\n{\n  float epsilon = 0.00001;\n  float min_param_a = 0.0 + epsilon;\n  float max_param_a = 1.0 - epsilon;\n  float min_param_b = 0.0;\n  float max_param_b = 1.0;\n  a = min(max_param_a, max(min_param_a, a));  \n  b = min(max_param_b, max(min_param_b, b)); \n  b = 1.0 - b; //reverse for intelligibility.\n  \n  float y = 0.;\n  if (x<=a){\n    y = b*x + (1.-b)*a*(1.-pow(1.-x/a, 3.0));\n  } else {\n    y = b*x + (1.-b)*(a + (1.-a)*pow((x-a)/(1.-a), 3.0));\n  }\n  return y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 m = iMouse / iResolution.xyxy;\n    vec3 color = vec3(0.0);\n\n    vec2 toCenter = vec2(0.5)-uv;\n    float angle = atan(toCenter.y,toCenter.x);\n    float radius = length(toCenter)*2.0;\n\n    float hue = (angle/TWO_PI)+0.5;\n    \n    // Exercise: use a shaping function to expand a particular hue based on mouse coords.\n    if (m.z > 0.0) {\n        vec2 m_toc = vec2(.5) - m.xy;\n        float lens = .5 + (atan(m_toc.y, m_toc.x) / TWO_PI);\n        float lens_width = 1.0 - (length(m_toc) * 2.0);\n        hue = doubleCubicSeatWithLinearBlend(hue, lens, lens_width);\n    }\n    \n    // TODO: the opposite color of red should be green, but in our example it is cyan. Can you find a way to fix that\n    // hue = shaping_function(hue);\n    color = hsb2rgb(vec3(hue,radius,1.0));\n    fragColor = vec4(color,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}