{
    "Shader": {
        "info": {
            "date": "1587813215",
            "description": "Many games either have color bleeding at leaves border or switch off MIPmap&interp.\nLeft:   interpolate or MIPmap RGBA texture , then apply transparency & blend.\nRight: alpha-premultiply colors then interpolate or MIPmap aRaGaBA texture  then blend.",
            "flags": 32,
            "hasliked": 0,
            "id": "3ssfz4",
            "likes": 15,
            "name": "Alpha-premultiplied",
            "published": 3,
            "tags": [
                "interpolation",
                "tuto"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 990
        },
        "renderpass": [
            {
                "code": "vec4 Bg = vec4(0,.8,1,1);                // Background color\nvoid mainImage( out vec4 O, vec2 u) {\n    vec2 U = 4.*u/R;\n    O = textureLod(iChannel0,U,2.*floor(U.y));\n    float a = O.a;\n    O = U.x<2. ? a * O + (1.-a) * Bg     //  L: blend( back, front, a )\n               :     O + (1.-a) * Bg  ;  //  R: front was alpha-premultiplied *before* MIPmap\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// --- leaf texture\n// adapted from \"shortest heart\" https://shadertoy.com/view/wtcXR7\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2  U = (u+u-R-.5)/R.y, C = u/u - abs(U).x,\n          A = 19. -8.*C,\n          B = 6. -C-C  -8.*C*C + U*16.;\n    O.ag =    C * A*A - B*B ;\n    O.ag = clamp(O/fwidth(O), 0.,1.).gg + .01/abs(U.x); }",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R iResolution.xy",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}