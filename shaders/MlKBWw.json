{
    "Shader": {
        "info": {
            "date": "1542801119",
            "description": "Starfields will never die.\n\n(Realistic colour version.)",
            "flags": 0,
            "hasliked": 0,
            "id": "MlKBWw",
            "likes": 14,
            "name": "Starfields Will Never Die Part 2",
            "published": 3,
            "tags": [
                "never",
                "will",
                "starfields",
                "die"
            ],
            "usePreview": 0,
            "username": "WAHa_06x36",
            "viewed": 897
        },
        "renderpass": [
            {
                "code": "// brightness = pow(2.521, -magnitude)\nvec3 starColour(float bv, float brightness) {\n\tif (bv < -0.4) bv = -0.4;\n\tif (bv > 2.0) bv=2.0;\n\n\tfloat r = 0.0;\n\tif (bv < 0.00) { float t=(bv+0.40)/(0.00+0.40); r=0.61+(0.11*t)+(0.1*t*t); }\n\telse if (bv < 0.40) { float t=(bv-0.00)/(0.40-0.00); r=0.83+0.17*t; }\n\telse { r = 1.00; }\n\n\tfloat g = 0.0;\n\tif (bv < 0.00) { float t=(bv+0.40)/(0.00+0.40); g=0.70+(0.07*t)+(0.1*t*t); }\n\telse if (bv < 0.40) { float t=(bv-0.00)/(0.40-0.00); g=0.87+(0.11*t); }\n\telse if (bv < 1.60) { float t=(bv-0.40)/(1.60-0.40); g=0.98-(0.16*t); }\n\telse { float t=(bv-1.60)/(2.00-1.60); g=0.82-(0.5*t*t); }\n\n\tfloat b = 0.0;\n\tif (bv < 0.40) { b = 1.00; }\n\telse if (bv < 1.50) { float t=(bv-0.40)/(1.50-0.40); b=1.00-(0.47*t)+(0.1*t*t); }\n\telse if (bv < 1.94) { float t=(bv-1.50)/(1.94-1.50); b=0.63-(0.6*t*t); }\n\telse { b = 0.0; }\n\n\tvec3 linear = pow(vec3(r, g, b), vec3(2.2));\n\n\treturn pow(brightness * 3.0 * linear / (linear.x + linear.y + linear.z), vec3(1.0 / 2.2));\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 colour = vec3(0.0);\n\tfor(float i = 0.0; i < 5.0; i++) {\n\t\tvec2 p = (2.0 * fragCoord.xy - iResolution.xy) / min(iResolution.x, iResolution.y);\n\t\tvec3 v = vec3(p, 1.0 - length(p) * 0.2);\n\t\n\t\tfloat ta = iTime * 0.1;\n\t\tmat3 m=mat3(\n\t\t\t0.0,1.0,0.0,\n\t\t\t-sin(ta),0.0,cos(ta),\n\t\t\tcos(ta),0.0,sin(ta));\n\t\tm*=m*m;\n\t\tm*=m;\n\t\tv=m*v;\n\t\n\t\tfloat a = (atan(v.y, v.x) / 3.141592 / 2.0 + 0.5);\n\t\tfloat slice = floor(a * 1000.0);\n\t\tfloat phase = rand(vec2(slice, 0.0 + i * 10.0));\n\t\tfloat dist = rand(vec2(slice, 1.0 + i * 10.0)) * 3.0;\n\t\tfloat hue = rand(vec2(slice, 2.0 + i * 10.0));\n\t\tfloat bright = pow(rand(vec2(slice, 3.0)), 5.0);\n\t\n\t\tfloat z = dist / length(v.xy) * v.z;\n\t\tfloat Z = mod(z + phase + iTime * 0.6, 1.0);\n\t\tfloat d = sqrt(z * z + dist * dist);\n\t\n\t\tfloat c = exp(-Z * 40.0 + 0.3) / (d * d + 1.0);\n\t\tcolour += starColour(hue * 2.4 - 0.4, c * 2.0 * bright);\n\t}\n\tfragColor = vec4(colour, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}