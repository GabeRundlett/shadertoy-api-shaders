{
    "Shader": {
        "info": {
            "date": "1481152873",
            "description": "Trying the new font texture [url]https://www.shadertoy.com/view/llcXRl[/url]\n\nSee comments for nice 3D variants.",
            "flags": 0,
            "hasliked": 0,
            "id": "ltcXzs",
            "likes": 117,
            "name": "font morph",
            "published": 3,
            "tags": [
                "font",
                "morphing"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 8904
        },
        "renderpass": [
            {
                "code": " // --- access to the image of ascii code c\nvec4 char(vec2 p, int C) {\n    if (p.x<0.|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n  //return texture   ( iChannel0, p/16. + fract( vec2(C, 15-C/16) / 16. ) );\n  //return textureLod( iChannel0, p/16. + fract( vec2(C, 15-C/16) / 16. ) , \n  //                   log2(length(fwidth(p/16.*iResolution.xy))) );\n    return textureGrad( iChannel0, p/16. + fract( vec2(C, 15-C/16) / 16. ) , \n                       dFdx(p/16.),dFdy(p/16.) );\n    // possible variants: (but better separated in an upper function) \n    //     - inout pos and include pos.x -= .5 + linefeed mechanism\n    //     - flag for bold and italic \n}\n\n// --- display int4\nvec4 pInt(vec2 p, float n) {\n    vec4 v = vec4(0);\n    if (n < 0.) \n        v += char(p - vec2(-.5,0), 45 ),\n        n = -n;\n\n    for (float i = 3.; i>=0.; i--) \n        n /= 10.,\n        v += char(p - vec2(.5*i,0), 48+ int(fract(n)*10.) );\n    return v;\n}\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    U /= iResolution.y;\n    float t = 3.*iTime;\n\n    O = char(U,int(t));     // try .xxxx for mask, .wwww for distance field.\n // return;                 // uncomment to just see the letter count.\n    \n    vec4 O2 = char(U,int(++t));\n    O = mix(O,O2,fract(t));             // linear morphing \n // O = sqrt(mix(O*O,O2*O2,fract(t)));  // quadratic morphing\n    \n    \n    O =  smoothstep(.5,.49,O.wwww)\n       * O.yzww;                        // comment for B&W\n\n  \n  U *= 8.; O+=pInt(U,t).xxxx;           // ascii code\n  U.x -=9.; \n  O += char(U,64+13   ).x; U.x-=.5;     // text\n  O += char(U,64+15+32).x; U.x-=.5;\n  O += char(U,64+18+32).x; U.x-=.5;\n  O += char(U,64+16+32).x; U.x-=.5;\n  O += char(U,64+ 8+32).x; U.x-=.5;\n  O += char(U,64+ 9+32).x; U.x-=.5;\n  O += char(U,64+14+32).x; U.x-=.5;\n  O += char(U,64+ 7+32).x; U.x-=.5;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}