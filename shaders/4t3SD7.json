{
    "Shader": {
        "info": {
            "date": "1479835213",
            "description": "just a proposal.",
            "flags": 0,
            "hasliked": 0,
            "id": "4t3SD7",
            "likes": 7,
            "name": "smoothfloor",
            "published": 3,
            "tags": [
                "smoothfloor"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1019
        },
        "renderpass": [
            {
                "code": "#define SmoothWidth .2\n\nfloat smoothfloor(float x) \n{\n#if 1\n    float F = floor(x), \n          f = clamp( 1.-(1.-fract(x))/SmoothWidth, 0.,1.);\n       // f = clamp( 1.-fract(-x)/SmoothWidth, 0.,1.);  // cause artifact\n\n // return F + smoothstep(0.,1., smoothstep(0.,1., f)) ; // C3\n // return F + f*f*f*(10.-15.*f+6.*f*f);                 // C2\n    return F + smoothstep(0.,1., f) ;                    // C1   NB: 3.x^2 - 2.x^3\n // return F + f;                                        // C0\n#else\n  #define b(x) ( abs(x)>1. ? sign(x) : (x) * (3.-(x)*(x) ) /2. )  // (3x-x^3)/2\n  return floor(x-.5)+.5 + .5 * b( ( mod(2.*x-1.,2.) -1. ) / SmoothWidth ) ; // C1\n#endif\n}\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    vec2 R =  iResolution.xy;\n\tU *= 4. / R;\n    \n    float v = U.x<.5 \n        ? smoothfloor(2.*U.y)/8.                             // grey ramp\n        : smoothstep (0.,20./R.y,  smoothfloor(U.x)-U.y);    // smoothfloor curve\n    \n    \n    O += sqrt(v) -O;                                         // sRGB convertion\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}