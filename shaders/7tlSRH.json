{
    "Shader": {
        "info": {
            "date": "1625167157",
            "description": "iam",
            "flags": 0,
            "hasliked": 0,
            "id": "7tlSRH",
            "likes": 0,
            "name": "iam",
            "published": 3,
            "tags": [
                "iam"
            ],
            "usePreview": 0,
            "username": "MaksymYakushev",
            "viewed": 225
        },
        "renderpass": [
            {
                "code": "float _(float a, float b, float c){\n                  return max(a,max(b,c));\n        }\n             \n        float L(vec2 p, vec2 P0, vec2 P1){\n                float a = -(P1.y-P0.y);\n                float b =  (P1.x-P0.x);\n                float d =  P0.x*P1.y- P0.y*P1.x; \n                float x = p.x;\n                float y = p.y;\n                \n                 return a*x + b*y + d;\n        }\n    \n    float T(vec2 p, vec2 P0, vec2 P1, vec2 P2){\n          return  _(\n                     L(p, P0, P1),\n                     L(p, P1, P2), \n                     L(p, P2, P0)\n                   );   \n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n//  digitalized Pi profile                      \n          vec2 P[76];\n           P[ 0] = vec2(0.94063,-1.4750);\n           P[ 1] = vec2(0.89063,-1.4563);\n           P[ 2] = vec2(0.86563,-1.4031);\n           P[ 3] = vec2(0.84063,-1.3875);\n           P[ 4] = vec2(0.80313,-1.40310);\n           P[ 5] = vec2(0.76875,-1.4438);\n           P[ 6] = vec2(0.72188,-1.4813);\n           P[ 7] = vec2(0.6625,-1.5094);\n           P[ 8] = vec2(0.59375,-1.5406);\n           P[ 9] = vec2(0.50938,-1.5500);\n           P[10] = vec2(0.47188,-1.5250);\n           P[11] = vec2(0.44063,-1.5063);\n           P[12] = vec2(0.42188,-1.4781);\n           P[13] = vec2(0.38125,-1.4656);\n           P[14] = vec2(0.35938,-1.4375);\n           P[15] = vec2(0.3375,-1.4125);\n           P[16] = vec2(0.32188,-1.3906);\n           P[17] = vec2(0.30313,-1.3781);\n           P[18] = vec2(0.29063,-1.3656);\n           P[19] = vec2(0.275,-1.3469);\n           P[20] = vec2(0.26875,-1.3188);\n           P[21] = vec2(0.24063,-1.3188);\n           P[22] = vec2(0.22188,-1.3406);\n           P[23] = vec2(0.18437,-1.3375);\n           P[24] = vec2(0.14688,-1.3250);\n           P[25] = vec2(0.14688,-1.3000);\n           P[26] = vec2(0.15625,-1.2719);\n           P[27] = vec2(0.15625,-1.0906);\n           P[28] = vec2(0.14375,-1.0344);\n           P[29] = vec2(0.10938,-1.0156);\n           P[30] = vec2(0.075,-0.98438);\n           P[31] = vec2(0.0375,-0.95000);\n           P[32] = vec2(0.021875,-0.91250);\n           P[33] = vec2(0.00625,-0.86875);\n           P[34] = vec2(-0.00625,-0.81250);\n           P[35] = vec2(-0.059375,-0.65000);\n           P[36] = vec2(-0.08125,-0.58438);\n           P[37] = vec2(-0.1375,-0.52500);\n           P[38] = vec2(-0.16875,-0.45313);\n           P[39] = vec2(-0.17812,-0.35938);\n           P[40] = vec2(-0.1625,-0.28750);\n           P[41] = vec2(-0.12187,-0.21563);\n           P[42] = vec2(0.10313,0.053125);\n           P[43] = vec2(0.19688,0.12500);\n           P[44] = vec2(0.28438,0.15312);\n           P[45] = vec2(0.40938,0.20000);\n           P[46] = vec2(0.49375,0.21250);\n           P[47] = vec2(0.57188,0.21250);\n           P[48] = vec2(0.65625,0.20000);\n           P[49] = vec2(0.73438,0.19062);\n           P[50] = vec2(0.7625,0.16562);\n           P[51] = vec2(0.83438,0.13437);\n           P[52] = vec2(0.8625,0.10938);\n           P[53] = vec2(0.8875,0.081250);\n           P[54] = vec2(0.92813,0.040625);\n           P[55] = vec2(0.95313,0.021875);\n           P[56] = vec2(0.97188,0.0031250);\n           P[57] = vec2(0.975,-0.021875);\n           P[58] = vec2(0.99688,-0.037500);\n           P[59] = vec2(1.0125,-0.090625);\n           P[60] = vec2(1.0219,-0.11563);\n           P[61] = vec2(1.0406,-0.16563);\n           P[62] = vec2(1.0688,-0.22500);\n           P[63] = vec2(1.0969,-0.30938);\n           P[64] = vec2(1.0969,-0.33438);\n           P[65] = vec2(1.1156,-0.38125);\n           P[66] = vec2(1.1281,-0.40938);\n           P[67] = vec2(1.1344,-0.49688);\n           P[68] = vec2(1.1438,-0.57813);\n           P[69] = vec2(1.1719,-0.65625);\n           P[70] = vec2(1.1719,-0.74063);\n           P[71] = vec2(1.1969,-0.80938);\n           P[72] = vec2(1.2406,-0.89375);\n           P[73] = vec2(1.2625,-0.91563);\n           P[74] = vec2(1.3219,-0.97188);\n           P[75] = vec2(1.3656,-1.0281);\n   \n    // Normalized pixel coordinates (from -1 to 1)\n            vec2 p = 1.0 - 2.0* fragCoord/iResolution.xy;\n            vec2 m = 1.0 - 2.0* iMouse.xy/iResolution.xy;\n\n             float x = p.x * iResolution.x/iResolution.y;\n             float y = p.y ;\n     \n              float mx = m.x * iResolution.x/iResolution.y;\n              float my = m.y ;\n           \n               x/=mx;\n               y/=my;\n            \n                p.x=x;\n                p.y=y;\n   \n\n                 float  z = 1.0e23; \n                 for(int i=0;i<76-3;i++)\n                  z = min(z, T(p,  P[i],P[i+1], P[i+3]) );   \n                   float f = 10.0/z; \n\n    // Time varying pixel color\n                    vec3 col = vec3(1.0, 1.0, 1.0);\n                    if(f >= 0.0)col.g = f;\n                    else col.r = f; col.g = f; col.b = f;\n                \n\n    // Output to screen\n                     fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}