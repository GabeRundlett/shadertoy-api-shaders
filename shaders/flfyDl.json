{
    "Shader": {
        "info": {
            "date": "1648881725",
            "description": "Just messing around",
            "flags": 8,
            "hasliked": 0,
            "id": "flfyDl",
            "likes": 2,
            "name": "Short bleh song",
            "published": 3,
            "tags": [
                "sound"
            ],
            "usePreview": 0,
            "username": "scry",
            "viewed": 233
        },
        "renderpass": [
            {
                "code": "#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\nfloat message(vec2 uv) { // to alter in the icon\n    \n    //uv.y += sin(acos(-1.)*iTime/beat + sin(acos(-1.)*iTime/beat*2.)*float(iTime > msr*2.));\n    \n    uv-=vec2(1.,10.); \n    uv -= vec2(16.,1.5);\n    //uv *= 0.5;\n    //uv.xy *= rot(sin(acos(-1.)*iTime/beat*0.5)*0.1*mod(iTime/beat,2.));\n    \n    //uv += cyclicNoise(vec3(uv*0.2,iTime + sin(iTime)));\n        \n    uv += vec2(16.,1.5);\n    if ((uv.x<0.)||(uv.x>=32.)||(uv.y<0.)||(uv.y>=3.)) return -1.; \n    int i=1, bit=int(pow(2.,floor(32.-uv.x)));\n    if (int(uv.y)==2) i=  928473456/bit; // 00110111 01010111 01100001 01110000\n    if (int(uv.y)==1) i=  626348112/bit; // 00100101 01010101 01010000 01010000\n    if (int(uv.y)==0) i= 1735745872/bit; // 01100111 01110101 01100001 01010000\n \treturn float(i-2*(i/2));\n}    \n   \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    //  if (iResolution.y<200.) to display only in the icon \n    if (iResolution.y<2000.) {float c=message(fragCoord.xy/8.);if(c>=0.){fragColor=vec4(c);return;}}\n\t//tGlobal = iTime*2.;\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.8+0.5*sin(iTime),1.0);\n    /*\n    if(iTime > msr*6.)\n        fragColor = 0.5 + 0.5*sin(fragColor + iTime);\n    */\n}   ",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define pi 3.14159265\n#define tau pi*2.\n\n//https://www.shadertoy.com/view/ttBXRG\nfloat staircase( in float x, in float k )\n{\n    float i = floor(x);\n    float f = fract(x);\n    \n    float a = 0.5*pow(2.0*((f<0.5)?f:1.0-f), k);\n    f = (f<0.5)?a:1.0-a;\n    \n    return i+f;\n}\n\n\nfloat FtoS(float f,float time) {\n    return sin(f*tau*time);\n}\n\nvec2 mainSound( int samp, float time )\n{\n    float f = 140.;\n    float a = FtoS(f,time);\n    f += sin(time*0.1);\n    a += FtoS(f*0.1,time);\n    float ii = 1.;\n    f *= 2.;\n    for (int i=0;i<60;i++) {\n        f += sin(time*0.08*ii)*20.1;\n        a *= 1.7;\n        a *= 0.475;\n        a += FtoS(f+a*0.001,time);\n        ii *= 1.5*0.5;\n    }\n    a = clamp(a*0.003,-1.,1.)/4.;\n    f = 60.;\n    float bpm = 34.;\n    float am = 1.32;\n    float s = staircase(time/4.,0.01)+1.;\n    //int s = int(time/4.);\n    //s = exp(s);\n    //s = int(time)/s;\n    for (int i=0;i<7;i++) {\n        if (i > int(s)) {break;}\n        if (i > 1) {\n            am *= sin(time*((bpm/4.)/60.))*0.5+0.5;\n            //bpm += sin(time*0.1)*f*0.01;\n            //am *= 0.5;\n        }\n        //a = FtoS(f,time);\n        ///a = FtoS(f,time)*sin(time*pi*(bpm/60.))*exp(-3.*fract(time*(bpm/60.)));\n        \n        a += FtoS(f,time)*exp(-3.*(fract(time*(bpm/60.))))*am;\n        //f *= 1.25+sin(time*0.3)*0.5;\n        f *= 1.05;\n        f = fract(f/400.+time*0.1)*100.;\n        f -= fract(time*0.15)*1.;\n        //am *= 0.8+sin(time)*0.2;\n        bpm *= 2.;\n    }\n    a /= 8.;\n    return vec2(a);\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}