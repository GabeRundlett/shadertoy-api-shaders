{
    "Shader": {
        "info": {
            "date": "1570599464",
            "description": "Inktober, but with shaders",
            "flags": 0,
            "hasliked": 0,
            "id": "WdKGRK",
            "likes": 1,
            "name": "shadetober #08 (frail)",
            "published": 3,
            "tags": [
                "inktober",
                "shadertober",
                "shadetober",
                "inktober2019"
            ],
            "usePreview": 0,
            "username": "percentcer",
            "viewed": 291
        },
        "renderpass": [
            {
                "code": "mat2 rot(float a) {\n    return mat2(cos(a), -sin(a),\n                sin(a), cos(a)\n               );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.x/iResolution.y;\n    uv.x *= aspect;\n    uv -= vec2(aspect * .5, 0.5);\n\n    // Time varying pixel color\n    vec3 col = vec3(.8,0.,.1);\n    \n    float wiggliness = 10.;\n    uv.x += sin((uv.y + iTime) * wiggliness) * .2;\n    \n    uv = rot(iTime) * uv;\n    \n    float p = length(uv);\n    p = smoothstep(.2, .22, p);\n    \n    col *= fract(uv * 2.).xyx;\n\n    // Output to screen\n    fragColor = vec4(col,1.0) + p * .5;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}