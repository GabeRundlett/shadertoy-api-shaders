{
    "Shader": {
        "info": {
            "date": "1562319480",
            "description": "(convex-) interpolated values have lesser range than node values. -> interpolated texture values have less contrast than stored texture. Worse: this contrast can fluctuate in space.\n\nTop: variance fixed.   Right: final sRGB.     Click: 1-1 mapping.",
            "flags": 0,
            "hasliked": 0,
            "id": "tlsXRN",
            "likes": 3,
            "name": "contrast corrected interpolation",
            "published": 3,
            "tags": [
                "contrast",
                "interpolation",
                "variance"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 407
        },
        "renderpass": [
            {
                "code": "// Top: Correcting the contrast fluctuation due to interpolation.\n// ( of course this does not solve aliasing :-) )\n// This adds to the gamma problem (Left: final sRGB omitted ) that is even more visible.\n\n// This is valid for random noise. Try other textures (even blue noise) to see the effect of correlation. :-)\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    float t = iMouse.z>0. ? 0. : iTime; // click for 1-1 mapping\n    vec2 R = iResolution.xy,\n         V = vec2(1.+ .05*sin(t))* (U-.5),\n         S = vec2(textureSize(iChannel0,0).xy),\n         F = fract(V);\n    O = texture(iChannel0, (V+.5)/S).rrrr;\n    \n    if (U.y/R.y > .5) {   // Top: corrected contrast\n        O -= .5;          // centered noise\n        float s2 =        // statistically, this is the variance of interpolated value\n                     ( F.x*F.x + (1.-F.x)*(1.-F.x) )\n                   * ( F.y*F.y + (1.-F.y)*(1.-F.y) );\n        O /= sqrt(s2);\n      //O *= .75*.75;\n        O += .5;          // back to correct centering\n    }\n    if (U.x/R.x > .5)     // Right: with sRGB convertion\n        O = pow( O, vec4(1./2.2) );\n    \n    if (U.y-.5==R.y/2.) O = vec4(1,0,0,1);\n    if (U.x-.5==R.x/2.) O = vec4(1,0,0,1);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}