{
    "Shader": {
        "info": {
            "date": "1698621347",
            "description": "halftones, although not very good.",
            "flags": 0,
            "hasliked": 0,
            "id": "Ws3XRN",
            "likes": 8,
            "name": "dalp Halftone zoomer",
            "published": 3,
            "tags": [
                "halftone"
            ],
            "usePreview": 0,
            "username": "dalp",
            "viewed": 393
        },
        "renderpass": [
            {
                "code": "float Xor(float a, float b) {\n    return a*(1.-b) + b*(1.-a);\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n\n    float a = sin(iTime);//*0.26;\n    float s = sin(a+iTime*0.03*sin(-iTime)*0.001);\n    float c = cos(a+iTime*0.1);\n    uv *= mat2(c,-s,s,c);\n    \n    uv *= 32.;\n    vec2 gv = fract (uv)-.5;\n    vec2 id = floor (uv);\n    \n    float d = length(gv);\n    float m = 0.;\n    float t = iTime;\n    \n    for(float y=-1.;y<=1.;y++) {\n\t    for(float x=-1.;x<=1.;x++) {\n        \tvec2 offs = vec2(x,y);\n            \n    \t\tfloat d = length(gv-offs);\n    \t\tfloat dist = length(id+offs)*.1;\n           \n            float r = mix(.02, 1., sin(dist-(t*2.))*.5+.5);\n            m += smoothstep(48./iResolution.y,0., d-r); \n            //m = Xor(m, smoothstep(r,r*.95, d));\n        }    \n    }\n   \n    col += m;    \n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}