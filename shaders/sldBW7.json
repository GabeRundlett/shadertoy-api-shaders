{
    "Shader": {
        "info": {
            "date": "1663195636",
            "description": "epic way to remove the silly green from a video!!!",
            "flags": 0,
            "hasliked": 0,
            "id": "sldBW7",
            "likes": 2,
            "name": "green screen shader",
            "published": 3,
            "tags": [
                "video",
                "screen",
                "blending",
                "green"
            ],
            "usePreview": 0,
            "username": "Stilic",
            "viewed": 485
        },
        "renderpass": [
            {
                "code": "// Based off https://jameshfisher.com/2020/08/11/production-ready-green-screen-in-the-browser/\n\n// From https://github.com/libretro/glsl-shaders/blob/master/nnedi3/shaders/rgb-to-yuv.glsl\nvec2 RGBtoUV(vec3 rgb) {\n  return vec2(\n    rgb.r * -0.169 + rgb.g * -0.331 + rgb.b *  0.5    + 0.5,\n    rgb.r *  0.5   + rgb.g * -0.419 + rgb.b * -0.081  + 0.5\n  );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 texCoord = fragCoord.xy / iResolution.xy;\n\n  vec4 rgba = texture(iChannel0, texCoord);\n  float chromaDist = distance(RGBtoUV(texture(iChannel0, texCoord).rgb), RGBtoUV(vec3(0.0, 1.0, 0.0)));\n\n  // For similarity\n  float baseMask = chromaDist - 0.46;\n  // For smoothness\n  float fullMask = pow(clamp(baseMask / 0.08, 0., 1.), 1.5);\n  rgba.a = fullMask;\n\n  // For spill\n  float spillVal = pow(clamp(baseMask / 0.1, 0., 1.), 1.5);\n  float desat = clamp(rgba.r * 0.2126 + rgba.g * 0.7152 + rgba.b * 0.0722, 0., 1.);\n  rgba.rgb = mix(vec3(desat, desat, desat), rgba.rgb, spillVal);\n  fragColor = rgba;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}