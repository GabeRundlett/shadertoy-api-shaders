{
    "Shader": {
        "info": {
            "date": "1610929494",
            "description": "I used the snow effect from my \"[url=https://www.shadertoy.com/view/tdKBWy]Holiday Greetings![/url]\" shader to create a cascade of images.\nPlease forgive the awful pun :D",
            "flags": 0,
            "hasliked": 0,
            "id": "3tVyW1",
            "likes": 5,
            "name": "Its Raining Jean Cloude!",
            "published": 3,
            "tags": [
                "raining",
                "jeanclaude",
                "imagesprites"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 354
        },
        "renderpass": [
            {
                "code": "#define SMOOTHING_SIZE 1.0 / iResolution.y\n\nfloat noise(in float x) {\n    return fract(cos(x * 4754.673) * 573.123);\n}\n\nvoid ImageSprite(inout vec3 color, in sampler2D channel, in vec2 p, in vec2 pos, in vec2 size, in float ori, in float border) {\n    float c = cos(ori), s = sin(ori);\n    p = (p - pos) * mat2(c, -s, s, c) / size + 0.5;\n\n    float halfBorder = 0.5 * border;\n    vec2 corner = abs(p - 0.5) - 0.5;\n    float bbox = max(corner.x, corner.y);\n    if (bbox < halfBorder) {\n        color = texture(channel, p).rgb;\n        float smoothing = SMOOTHING_SIZE / size.x;\n        color *= smoothstep(-smoothing, smoothing, abs(bbox) - halfBorder);\n    }\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 color = texture(iChannel0, fragCoord / iResolution.xy).rgb * 0.8;\n\n    float screenRight = 0.5 * iResolution.x / iResolution.y;\n    for (float column=-screenRight; column < screenRight; column += 0.2) {\n        vec2 columnUV = uv - vec2(column, 0.0);\n        float colId = floor(column / 0.2);\n\n        columnUV.y += noise(colId) * iTime * 4.0 + 1.0;\n        float rowId = floor(columnUV.y / 0.4);\n\n        columnUV.x += 0.2 * sin(floor(columnUV.y / 0.4) + iTime);\n        columnUV.y = mod(columnUV.y, 0.4) - 0.2;\n\n        float n = noise(colId + 573.674 + rowId * 654.986);\n        ImageSprite(color, iChannel0, columnUV, vec2(0.0), vec2(0.25), (n + 3.0) * iTime, 0.025);\n    }\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}