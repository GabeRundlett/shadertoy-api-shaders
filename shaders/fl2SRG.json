{
    "Shader": {
        "info": {
            "date": "1627932778",
            "description": "golfing the n=2 version of https://shadertoy.com/view/7tSXzG ( 369 chars )",
            "flags": 0,
            "hasliked": 0,
            "id": "fl2SRG",
            "likes": 8,
            "name": "pattern in colored grains jar (g",
            "published": 3,
            "tags": [
                "patterns",
                "random",
                "2tweets",
                "hexagonal",
                "packing",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 435
        },
        "renderpass": [
            {
                "code": "// golfing 369 chars https://shadertoy.com/view/7tSXzG for n = 2\n\n\n// --- 216 with DjinnKahn's approach https://www.shadertoy.com/view/NtBSRV\n//   ( and quite cheaper )\nvoid mainImage( out vec4 O, vec2 U )\n{    \n    float  s = 1.73;\n    U *= .2;\n                       // to tilted space\n    vec3 C = ceil( mat2x3( 2,1,-1, 0,s,s )/2.  * U );\n                                    // hex coords:  mat3x2(1,0,1,1,0,1)/3 *\n    vec2 H =  mat2(2,0,-1,s) * floor( (C.y + C.xz) / 3. ); // node center\n                                      \n    O  += .5 +    max( 1. - length( U - H ) , 0. )         // disc \n              * ( fract(sin(dot(H, vec2(13,79))) * 4e5) > .5 ? 2.5 : -2.5 ) -O;                                     // blend disc color ( = black or white )\n}                                                          // blend random disc color ( = black or white )\n/**/\n\n/* // --- 196 char : - 16 Xor  -4 Fab\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec3 C = ceil( mat2x3( 2,1,-1, 0, O += 1.73-O ) * U*.1 ) / 3.;\n    vec2 H =  mat2(2,0,-1,O) * floor( C.y + C.xz );\n    O  += .5 + max( 1. - length( U*.2 - H ), 0. )\n               / ( int( sin(H*13.+H.y*79.) * 4e5 )%2 < 1 ? .4 : -.4 ) - O;\n}                                  // use ( int() &2 ) < 1 on Windows  ( sign issue on % )\n/**/\n\n\n\n\n\n/* // --- 219 with my initial approach --------------------\n\nvoid mainImage( out vec4 O, vec2 U )\n{ \n    U *= mat2(.1,-.058,0,.115);            // to tilted space \n           \n    O += .5-O;                             // grey background\n    for(int i=0; i<4; i++) {\n       vec2 D = vec2(i%2,i/2);             // 4 tilted cell corners = hexa grid\n                                           // disc ( back to screen space )\n       O +=     max( 5. - length( (fract(U)-D) *mat2(10,5,0,8.7) ) , 0. ) \n            * ( step(.5, fract(sin(dot(ceil(U)+D, vec2(13,79))) * 4e5) ) - O );\n    }                                      // blend random disc color ( = black or white )\n\n}\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}