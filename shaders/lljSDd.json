{
    "Shader": {
        "info": {
            "date": "1447505126",
            "description": "Pixel shader on acid",
            "flags": 0,
            "hasliked": 0,
            "id": "lljSDd",
            "likes": 2,
            "name": "Pshychodelic",
            "published": 3,
            "tags": [
                "mandlebrot"
            ],
            "usePreview": 0,
            "username": "Instationa",
            "viewed": 1018
        },
        "renderpass": [
            {
                "code": "vec2 calcMandleBase(vec2 xy, vec2 c)\n{\n    return vec2(xy.x*xy.x-xy.y*xy.y + c.x, 2.0*xy.x*xy.y + c.y);\n}\n\nfloat calcMandelBrot(vec2 xy)\n{\n    float count = 0.0;\n    float vecLength = 0.0;\n    vec2 mandleBase = xy;\n    for(int i = 0; i < 500; i++)\n    {\n    \tmandleBase = calcMandleBase(mandleBase, xy);\n    \tvecLength = length(mandleBase);\n        if(vecLength >= 2.0)\n        {\n         \tbreak;   \n        }\n        count++;\n    }\n    \n    return count;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 Position = (fragCoord - iResolution.xy/2.0) / iResolution.xy;\n    float mandleBrot = mod(calcMandelBrot((Position+vec2(0.08802,0.1058)*pow(iTime * 10.0,2.0))*4.0/(pow(iTime* 10.0,2.0))),iTime * 10.0) / (iTime * 10.0);\n    float mandleBrot2 = mod(calcMandelBrot((Position+vec2(0.08702,0.1055)*pow(iTime * 20.0,2.0))*4.0/(pow(iTime* 20.0,2.0))),iTime * 20.0) / (iTime * 20.0);\n    float mandleBrot3 = mod(calcMandelBrot((Position+vec2(0.08602,0.1045)*pow(iTime * 40.0,2.0))*4.0/(pow(iTime* 40.0,2.0))),iTime * 5.0) / (iTime * 5.0);\n    fragColor = vec4(mandleBrot, mandleBrot2 , mandleBrot3,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}