{
    "Shader": {
        "info": {
            "date": "1483058624",
            "description": "A wobbly triangle tunnel",
            "flags": 0,
            "hasliked": 0,
            "id": "XlGSRW",
            "likes": 20,
            "name": "Triangle Wobble Stairs",
            "published": 3,
            "tags": [
                "tunnel",
                "triangles",
                "oscillation",
                "stairs"
            ],
            "usePreview": 0,
            "username": "cacheflowe",
            "viewed": 1217
        },
        "renderpass": [
            {
                "code": "// triangle shape from: https://thebookofshaders.com/edit.php?log=160414041142\n\nconst float TWO_PI = 6.28318530718;\nconst int steps = 36;\nconst float brighten = 1.4;\n\nfloat map(float value, float low1, float high1, float low2, float high2) {\n   return low2 + (value - low1) * (high2 - low2) / (high1 - low1);\n}\n\nfloat triangle(vec2 p, float size) {\n    vec2 q = abs(p);\n    return max(q.x * 0.866025 + p.y * 0.5, -p.y * 0.5) - size * 0.5;\n}\n\nfloat hexagon(vec2 p, float radius) {\n    vec2 q = abs(p);\n    return max(abs(q.y), q.x * 0.866025 + q.y * 0.5) - radius;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime * 2.;\n    vec2 st = (2. * fragCoord.xy - iResolution.xy) / iResolution.y;\n    st -= vec2(0, 0.3); // offset overall y a bit for more \"floor\"\n\n    // start white and head towards black as triangles shrink\n    float col = 1.; \n    float sizeStart = 5. + cos(time); \n    float sizeEnd = 0.; \n    float stepSize = sizeStart / float(steps); \n    for(int i = 0; i < steps; i++) {\n        float curStepSize = float(i) * stepSize;\n        float stepColor = map(curStepSize, sizeStart, sizeEnd, 1., 0.05);\n        float yCompensate = float(i) * -0.22; // triangle isn't centered, so we can offset for better concentricity\n        vec2 stMoved = st + 0.2 * vec2(0, yCompensate + sin(float(i) * 0.25 + time * 3.)); // offset wobble y down the tunnel, 3x faster than main oscillation\n        if(triangle(stMoved, curStepSize) > 0.) {\n        \tcol = stepColor;\n        }\n    }\n\tfragColor = vec4(vec3(col * brighten), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}