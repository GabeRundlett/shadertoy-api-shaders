{
    "Shader": {
        "info": {
            "date": "1641463725",
            "description": "My participation to genuary 2022\nDestroy a square",
            "flags": 0,
            "hasliked": 0,
            "id": "7lKXWc",
            "likes": 4,
            "name": "Genuary 2022 - Day5",
            "published": 3,
            "tags": [
                "generative",
                "genuary",
                "2022",
                "destroysquare"
            ],
            "usePreview": 0,
            "username": "z0rg",
            "viewed": 244
        },
        "renderpass": [
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\n#define sat(a) clamp(a, 0.,1.)\nmat2 r2d(float a) { float c = cos(a), s = sin(a); return mat2(c, -s, s, c); }\nfloat _sqr(vec2 uv, vec2 s)\n{\n    vec2 l = abs(uv)-s;\n    return max(l.x, l.y);\n}\n\nvec3 rdr(vec2 uv, float t)\n{\n    vec3 col = vec3(0.);\n    float acc = 1000.;\n    const int cnt = 9;\n    for (int x = 0; x < cnt; ++x)\n    {\n        for (int y = 0; y < cnt; ++y)\n        {\n            vec2 cpos = (vec2(x, y)/float(cnt-1)-vec2(.5))*2.;\n            vec2 pos = .05*cpos*pow(mod(t*2.,5.),5.);\n\n            float shape = _sqr((uv-pos), vec2(.05)*abs(sin(t*2.)));\n            acc = min(acc, shape);\n        }\n    }\n    col = mix(col, vec3(1.), 1.-sat(acc*iResolution.x*.5));\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.xx;\n\n    float off = sin(iTime)*.1;\n\n\n    vec3 col = vec3(0.);\n    col.x = rdr(uv,iTime).x;\n    col.y = rdr(uv,iTime+off).y;\n    col.z = rdr(uv,iTime+off*2.).z;\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}