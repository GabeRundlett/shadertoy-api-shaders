{
    "Shader": {
        "info": {
            "date": "1446057099",
            "description": "Good old Garry's Mod...\nWhat, were you expecting a bathtub flying via balloons with a vehicular seat and some rockets masquerading as soda cans?",
            "flags": 0,
            "hasliked": 0,
            "id": "XtBSWG",
            "likes": 4,
            "name": "Garry's Mod",
            "published": 3,
            "tags": [
                "texture",
                "error",
                "gmod",
                "missing",
                "hl2",
                "sourceengine"
            ],
            "usePreview": 0,
            "username": "1j01",
            "viewed": 1236
        },
        "renderpass": [
            {
                "code": "\n/*\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//vec2 uv = fragCoord.xy / iResolution.xy;\n\t//vec2 uv = fragCoord.xy / length(iResolution.xy); // shorter way of getting the max\n\tvec2 uv = fragCoord.xy / min(iResolution.x, iResolution.y); // but we want to use the min\n    //if(mod(floor(fragCoord.x / 32.0) + floor(fragCoord.y / 32.0), 2.0) == 1.0){\n    if(mod(floor(uv.x * 32.0) + floor(uv.y * 32.0), 2.0) == 1.0){\n        fragColor = vec4(1,0,1,1);\n    }else{\n        fragColor = vec4(0,0,0,1);\n    }\n}\n*/\n\nvoid mainImage( out vec4 C, in vec2 P ){\n\tvec2 p = P.xy / iResolution.x;\n    //C = mod(floor(p.x * 32.) + floor(p.y * 32.), 2.) == 1.\n    //    ? vec4(1,0,1,1)\n    //    : vec4(0,0,0,1);\n    float _ = mod(floor(p.x * 32.) + floor(p.y * 32.), 2.);\n    C = vec4(_,0,_,1);\n}\n",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}