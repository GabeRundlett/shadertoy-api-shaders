{
    "Shader": {
        "info": {
            "date": "1556731125",
            "description": "Add more life to previous shader https://www.shadertoy.com/view/WllGRn",
            "flags": 0,
            "hasliked": 0,
            "id": "WtlGzS",
            "likes": 22,
            "name": "Rising bubbles 2",
            "published": 3,
            "tags": [
                "bubbles"
            ],
            "usePreview": 0,
            "username": "avin",
            "viewed": 1515
        },
        "renderpass": [
            {
                "code": "// Add more life to previous shader https://www.shadertoy.com/view/WllGRn\n// Very similar to https://www.shadertoy.com/view/Wll3RS\n    \n// Force range [.1, .3]\n#define FORCE .28\n#define INIT_SPEED 80.\n#define AMOUNT 10.\n#define WATER_COL vec3(18,140,200)/255.\n\nfloat rand(vec2 co) {\n    return fract(sin(dot(co.xy , vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat bubbles( vec2 uv, float size, float speed, float timeOfst, float blur, float time)\n{\n    vec2 ruv = uv*size  + .05;\n    vec2 id = ceil(ruv) + speed;\n\n    float t = (time + timeOfst)*speed;\n\n    ruv.y -= t * (rand(vec2(id.x))*0.5+.5)*.1;\n    vec2 guv = fract(ruv) - 0.5;\n\n    ruv = ceil(ruv);\n    float g = length(guv);\n\n    float v = rand(ruv)*0.5;\n    v *= step(v, clamp(FORCE, .1, .3));\n\n    float m = smoothstep(v,v - blur, g);\n\n    v*=.85;\n    m -= smoothstep(v,v- .1, g);\n\n    g = length(guv - vec2(v*.35, v*.35));\n    float hlSize = v*.75;\n    m += smoothstep(hlSize, 0., g)*.75;\n\n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n\n    float m = 0.;\n\n    float sizeFactor = iResolution.y / 10.;\n\n    float fstep = .1/AMOUNT;\n    for(float i=-1.0; i<=0.; i+=fstep){\n        vec2 iuv = uv + vec2(cos(uv.y*2. + i*20. + iTime*.5)*.1, 0.);\n        float size = (i*.15+0.2) * sizeFactor + 10.;\n        m += bubbles(iuv + vec2(i*.1, 0.), size, INIT_SPEED + i*5., i*10., .3 + i*.25, iTime) * abs(i);\n    }\n\n    vec3 col = WATER_COL + m*.4;\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}