{
    "Shader": {
        "info": {
            "date": "1567258714",
            "description": "да, тупо для тестов ага",
            "flags": 0,
            "hasliked": 0,
            "id": "wlSXW3",
            "likes": 3,
            "name": "Point Cube ray f + plane test",
            "published": 3,
            "tags": [
                "dbdbdrb"
            ],
            "usePreview": 0,
            "username": "MODer",
            "viewed": 350
        },
        "renderpass": [
            {
                "code": "#define tex iChannel0\n#define pixe iResolution.xy\n#define t iTime\nvec3 m(vec3 p, float r){return vec3(p.x,cos(r)*p.y+sin(r)*p.z,cos(r)*p.z-sin(r)*p.y);}\nvec3 mx(vec3 p, float x){return m(p.xzy, x).xzy;}\nvec3 my(vec3 p, float y){return m(p.yxz, y).yxz;}\nvec3 mz(vec3 p, float z){return m(p.zyx, z).zyx;}\nvec3 mxyz(vec3 p, vec3 r){return mx(my(mz(p,r.z),r.y),r.x);}\n\nfloat rep(float f){if(f > 0.){if(f < 1.){return 1.;}}return 0.;}\nfloat point(vec2 uv, vec2 p, float s){return smoothstep(s, s-0.001, distance(uv,p)*4.);}\nfloat ray(vec2 uv, vec3 pos, vec3 r, vec3 f, float s){\n    pos += mxyz(f,r);\n    pos.z += 1.;\n    pos.xy /= pos.z;\n    pos.z = 1./pos.z;\n    pos.z *= 0.06125*s;\n    return point(uv, pos.xy,pos.z);}\nfloat cub(vec3 pos, vec2 uv, vec3 r, float s){\n    float col;\n    vec3 f;\n    for(int d = 0; d < 2; d ++){\n        for(int g = 0; g < 4; g ++){\n            f = my(vec3(0.5,0.25,0)*s, float(g)*3.14/2. );\n            f = mz(f, float(d)*3.14 );\n            col += ray(uv, pos, r, f, s);\n        }\n    }\n    return col;\n}\n\nvec3 plane(vec3 cor, vec3 r, vec2 fog){\n    #define add vec2(0.5);\n    cor.z = 0.;\n    \n    \n    \n    cor.xy -=add;\n    cor /= 0.5;\n    \n    cor.xy /= mxyz(vec3(1,1,0), vec3(r.xy,0)).xy;\n    cor.z   = mxyz(cor,         vec3(r.xy,0)).z ;\n    cor     =   mz(cor,                 -r.z)   ;\n    /*\n    ///////MATH_PROECTED__FOOOR\n    cor.xy +=add;\n    cor.xyz = mxyz(cor-vec3(0,0,1), vec3(fog.xy, 0) );\n    cor.xy -=add;\n    cor.xy /= cor.z;\n    */\n    cor.xy /= cor.z-1.;\n    \n    cor.xy +=add;\n    return cor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv;\n    float col;\n    vec3 pos;\n    vec3 r;\n    vec3 f;\n    float s;\n    vec2 fog;\n    \n    \n    \n    fog = ( (fragCoord.xy-vec2(pixe.x/2.,0) )/pixe.y-vec2(0,0.5) ).yx/180.*3.14/4.;\n    \n    fog.x *= 45.;\n    fog.y *= 45.;\n    \n    \n    \n    {\n    s = 1.;\n    uv = fragCoord.xy/iResolution.y; \n    uv.x -= iResolution.x/iResolution.y/4.;\n    uv -= 0.5;\n    r.y += iTime*2.5;\n    //r.z += iTime*1.425;  \n    //pos.x += sin(iTime);\n    \n    col += cub(pos,uv, r, s);\n    col += cub(mxyz(pos+vec3(0,0.5,0), r),uv, r, s*0.5);\n    col += cub(mxyz(pos+vec3(0.5,0,0), r+vec3(0,0.5,0)*3.14/2.),uv, r, s*0.25);\n    }//point V.\n    \n    {\n    //uv = fragCoord.xy/iResolution.xy;\n    uv *= 0.5;\n    uv.xy += 0.5;\n    pos.z = 1.;\n    r.y = iTime*2.5;\n    pos = plane(vec3(uv,0)+pos, r, fog);\n    col += texture(iChannel0, pos.xy).x*rep(pos.x)*rep(pos.y);\n    }\n    \n    \n    fragColor = vec4(col);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}