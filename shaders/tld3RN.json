{
    "Shader": {
        "info": {
            "date": "1576229621",
            "description": "Hiccup sine glow ",
            "flags": 0,
            "hasliked": 0,
            "id": "tld3RN",
            "likes": 4,
            "name": "Hiccup Sine Glow",
            "published": 3,
            "tags": [
                "glow",
                "sine"
            ],
            "usePreview": 0,
            "username": "tombla",
            "viewed": 473
        },
        "renderpass": [
            {
                "code": "#define COLORF            vec3(1.0, 0.5, 0.0)\n#define COLORG            vec3(0.1, 0.9, 0.1)\n#define COLORH            vec3(0.2, 0.2, 1.0)\n\n#define COLOR_INNER       vec3(1.0, 1.0, 1.0)\n\n#define OUTER 0.07\n#define INNER 0.01\n\n\nfloat pulse(float factor, float x)\n{\n    float t = factor*x;\n    return t*exp(1.0-t);\n}\n\nvec3 mindist_f(float a, float b, vec2 uv, float step)\n{\n    vec3 mindist = vec3(10., 10., 10.);\n    for(float d=-0.05; d<=0.05; d+=0.005) {\n        float x = uv.x + d;\n        float y1 = 0.5 + (0.30 + a + b) * sin(0.5 + x * 12. + step);\n        float y2 = 0.5 + (0.25 + 1.2 * a + 0.8 * b) * sin(4. + x * 9. + step * 1.1);\n        float y3 = 0.5 + (0.20 + 1.4 * a + 0.7 * b) * sin(3. + x * 7. + step * 1.2);\n        float dist1 = distance(uv, vec2(x, y1));\n        float dist2 = distance(uv, vec2(x, y2));\n        float dist3 = distance(uv, vec2(x, y3));\n        mindist = min(mindist, vec3(dist1, dist2, dist3));\n    }\n    return mindist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1 for y, from 0 to n for x)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // Step based on time\n    float step = iTime * 3.;\n    \n    // Slow and small amplitude.\n    float a = 0.02 * cos(iTime * 4.);\n    // Longer and larger amplitude\n    float b = 0.1 * pulse(10., mod(iTime * 1.5, 4.));\n    \n    vec3 dist = mindist_f(a, b, uv, step);\n    float fx = dist[0];\n    float gx = dist[1];\n    float hx = dist[2];\n    // Blue and white parts.\n    float fcolor = smoothstep(OUTER, 0., fx);\n    float fwhite = smoothstep(INNER, 0., fx);\n    float gcolor = smoothstep(OUTER, 0., gx);\n    float gwhite = smoothstep(INNER, 0., gx);\n    float hcolor = smoothstep(OUTER, 0., hx);\n    float hwhite = smoothstep(INNER, 0., hx);\n    vec3 color = fcolor * COLORF +\n                 gcolor * COLORG +\n                 hcolor * COLORH +\n                 fwhite * COLOR_INNER +\n                 gwhite * COLOR_INNER +\n                 hwhite * COLOR_INNER;\n    \n    fragColor = vec4(color, 1.0);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}