{
    "Shader": {
        "info": {
            "date": "1721705657",
            "description": "bruh",
            "flags": 0,
            "hasliked": 0,
            "id": "lfscWX",
            "likes": 2,
            "name": "jul212024v3",
            "published": 3,
            "tags": [
                "popart"
            ],
            "usePreview": 0,
            "username": "brendanluu",
            "viewed": 108
        },
        "renderpass": [
            {
                "code": "vec3 palette(float t) {\n    vec3 a = vec3(0.439, 0.420, 0.420);\n    vec3 b = vec3(0.322, 0.318, 0.322);\n    vec3 c = vec3(0.447, 0.431, 0.443);\n    vec3 d = vec3(0.000, 0.000, 0.000);\n    \n    return a + b * cos(1.28318 * (c * t + d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Adjust the uv.x coordinate to introduce the glitch effect\n    uv.x *= iResolution.x / iResolution.y;\n    uv.x *= 1.0 + 0.5 * (iResolution.x * iResolution.y);\n\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 1.0; i++) {\n        uv = fract(uv * 0.1);\n        float d = length(uv);\n        vec3 col = palette(iTime * 3.0 + i + length(uv0));\n        d = sin(d * 1000.0 + (iTime) / 4.0) / 8.0;\n        d = abs(d);\n        d = 0.009 / d;\n        finalColor += col * d;\n    }\n\n    fragColor = vec4(finalColor, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}