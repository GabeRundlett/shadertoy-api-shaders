{
    "Shader": {
        "info": {
            "date": "1619515958",
            "description": "Color cube (Use mouse to move)",
            "flags": 0,
            "hasliked": 0,
            "id": "sdfXRX",
            "likes": 6,
            "name": "Color Volume",
            "published": 3,
            "tags": [
                "3d",
                "volumetric",
                "transparent"
            ],
            "usePreview": 0,
            "username": "Txoka",
            "viewed": 375
        },
        "renderpass": [
            {
                "code": "vec3 volume(vec3 p,vec3 rd){\n    if(p.x*p.x>1.)return vec3(0);\n    if(p.y*p.y>1.)return vec3(0);\n    if(p.z*p.z>1.)return vec3(0);\n    \n    vec3 col=vec3(0);\n    col.r=smoothstep(-1.,1.,p.x);\n    col.g=smoothstep(-1.,1.,p.y);\n    col.b=smoothstep(-1.,1.,p.z);\n    //col.r+=0.4/dot2(p-vec3(0.5,0,0));\n    //col.g+=0.4/dot2(p-vec3(0,0.5,0));\n    //col.b+=0.4/dot2(p-vec3(0,0,0.5));\n    \n    return col;\n}\n\nvec3 trace(vec3 ro,vec3 rd){\n    vec3 col=vec3(0);\n    for(int i=0;i<512;i++){\n        ro+=rd*dx;\n        col+=pow(volume(ro,rd)*I,vec3(gamma));\n    }\n    return pow(col,vec3(1./gamma));\n}\n\nvoid mainImage(out vec4 O,in vec2 C){\n    vec3 uv = vec3((C*2.-iResolution.xy)/iResolution.y,-2);\n    \n    vec2 m=(iMouse.xy*2.-iResolution.xy)/iResolution.xy;\n\n    if(iMouse.z<=0.)m=vec2(-iTime/3.,0.4);\n\n    m*=vec2(1,0.5)*pi;\n    \n\n    vec3 ro=vec3(0,0,-3);\n    \n    \n    ro.yz*=mat2(cos(m.y),-sin(m.y),sin(m.y),cos(m.y));\n    ro.xz*=mat2(cos(m.x),-sin(m.x),sin(m.x),cos(m.x));\n    uv.yz*=mat2(cos(m.y),-sin(m.y),sin(m.y),cos(m.y));\n    uv.xz*=mat2(cos(m.x),-sin(m.x),sin(m.x),cos(m.x));\n    \n    vec3 rd=normalize(uv-ro);\n    \n    vec3 col=trace(uv,rd);\n    \n    O=vec4(col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "const float gamma=2.2;\nconst float dx=0.01;\nconst float I=0.5*sqrt(dx);\n\nfloat dot2(vec2 a){return dot(a,a);}\nfloat dot2(vec3 a){return dot(a,a);}\n\nfloat pi=atan(1.)*4.;",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}