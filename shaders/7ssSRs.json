{
    "Shader": {
        "info": {
            "date": "1619385574",
            "description": "a lowkey black and white image showing a picture frame a white glowing light  in the middel and what appers to be a creature in the eye of the tornado, surronded by clouds.",
            "flags": 40,
            "hasliked": 0,
            "id": "7ssSRs",
            "likes": 18,
            "name": " good intentions",
            "published": 3,
            "tags": [
                "raymarch",
                "sound",
                "fm",
                "blackandwhite",
                "pathtracer",
                "vox",
                "neoromanticism"
            ],
            "usePreview": 0,
            "username": "nabr",
            "viewed": 583
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 c = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    if(abs(fragCoord.x*2.-iResolution.x)/iResolution.y<1.3)\n    fragColor = vec4((c.xyz/c.w)*6.+.05, 1);//contrast,brightness\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\n//some suff by iq>website\nfloat sdBox(vec3 p,vec3 s){p=abs(p)-s;return(length(max(p,0.))+min(max(p.x,max(p.y,p.z)),0.));}\nvec2 hash21(uint q)\n{\n    uvec2 n=q*uvec2(1597334697U,3812015801U);\n    n=(n.x^n.y)*uvec2(1597334697U,3812015801U);\n    return vec2(n)*(1.0/float(0xffffffffU));\n}\n\n//by sphinx glslsandbox.com/e#31401.0 \nfloat pnoise(in vec2 uv) \n{\n    const float k = 257.;\n    vec4 l = vec4(floor(uv), fract(uv));\n    float u = l.x + l.y * k;\n    vec4 v = vec4(u, u + 1., u + k, u + k + 1.);\n    v = fract(fract(1.23456789 * v) * v / .987654321);\n    l.zw = l.zw * l.zw * (3. - 2. * l.zw);\n    return mix(mix(v.x, v.y, l.z), mix(v.z, v.w, l.z), l.w);\n}\n\n//fractal with minification help by FabriceNeyret2\nfloat df(vec2 p)\n{\n    vec2 z=p;\n    for(float i=0.;i<9.;i++)\n    if((4.-dot(z=1.5*dot(z,z)*sin(4.3*atan(z.x*1.6,z.y)+vec2(0,33))+p,z))<0.)\n    return i;\n}\n\n\n#define dmin(a,b)((a.x<b.x)?a:b)\n\nvec2 f(vec3 p) \n{   \n    //light\n    float lt = sdBox(p, vec3(.175, .25, .2))- .015;\n    //frame\n    vec3 rp = abs(p) - vec3(1., 1.2, .2);\n    float y=length(length(vec2(max(rp.x, rp.y))))-.05;\n    float fr=max(y, rp.z-.1)+min(max(rp.x,max(rp.y,rp.z)),0.0);\n    //clouds\n    float s = 6.,h = 0.1, w = s/2., m = s/8.;\n    for(int i = 0; i<8; i++)\n    h += smoothstep(-.25,5.,((w*=.5)*pnoise((p.xy*(m*=2.)))));\n    p.z +=.8;\n    float fcd = sdBox(abs(vec3(p.xy,-min(p.z,-h+p.z))),vec3(2,2,.05));\n    \n    return dmin(dmin(vec2(lt,5.), vec2(fcd, 13.)), vec2(fr, 11.));\n}\n\nvec3 calcNormal(in vec3 pos)\n{\nvec3 eps=vec3(0.0001,0.0,0.0);\nreturn normalize(vec3((f(pos+eps.xyy)-f(pos-eps.xyy)).x,(f(pos+eps.yxy)-f(pos-eps.yxy)).x,(f(pos+eps.yyx)-f(pos-eps.yyx)).x));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) \n{\n    if(iFrame > 0)fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    \n    vec3 col = vec3(1e-6);\n    vec2 R = iResolution.xy,  h = vec2(0);\n    float dy = df(11.*((fragCoord-.5*R)/R.y));//fractal\n    //seed by demofox \n    uint seed = (uint(fragCoord.x) * 1973u + uint(fragCoord.y) * 9277u + uint(iFrame) * 2669u) | 1u;\n    vec2 jjt = vec2(cos(R.y*hash21(seed)).x,sin(R.y*hash21(seed).y)),st =((fragCoord+jjt)*2.-R)/R.y;\n    \n    vec3 ro = vec3(0,0,3),rd = normalize(vec3(st,-2));\n    \n    if(abs(st.x)<1.3)\n    for(int b = 1; b < 4 + min(iFrame, 0); b++) \n    {\n        float t = 0.;\n        for(int i = 0; i < 80; i++) \n        {\n            h = f(ro + t * rd );\n            if(abs(h.x) < t *.001 || t > 5.)break;\n            t += h.x;\n        }\n        \n        ro+=t*rd;\n        vec3 n = calcNormal(ro);\n        ro+=n*.001;\n        \n        vec2 rv  = vec2(hash21(seed).x*2.-1., hash21(seed).y*6.283185);\n        float phi =rv.y, th = rv.x;\n        \n        // light frame cosine weighted hemisphere \n        vec3 u = normalize(cross(abs(n.x)>.1 ?vec3(0,1,0):vec3(1,0,0) , n )), v = cross(n, u);\n        float r = sqrt(th);\n        rd = (u * cos(phi) * r + v * sin(phi) * r + n * sqrt(1. - th));\n        \n        // light clouds\n        if(h.y == 13.&&h.y!=5.)\n        {\n        if(cos(t) < 0.001)n = -n;\n        vec3 ld = normalize(vec3(0.001, 0.001, 2. )) + n ;\n        //based on http://lolengine.net/blog/2013/09/21/picking-orthogonal-vector-combing-coconuts\n        vec3 u = normalize((abs(ld.x) >.01 ) ? vec3(-ld.y, ld.x, 0.) : vec3(0., -ld.z, ld.y)), v = cross(ld, u);\n        float sth = sin(th);\n        rd =  (u * cos(phi) * sth + v * sin(phi) * sth + ld * cos(th));\n        }\n        rd = normalize(rd);\n        \n       col +=  float(h.y==5.)*(vec3(3)-max(1.,dy)) * vec3(.974);\n    }\n    \n    //reinhard gamma\n    col = col/(1.+col); \n    fragColor += vec4(pow(col,vec3(0.4545)),1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "\n\n#define _f(x)fract(x)\nvoid f(float ft,float t,inout float y)\n{\n    y+=sin(2.*3520.*t)*exp(-6.*ft)\n        *sin(t*50.*exp(-0.05*pow(1.-ft,12.)))\n        *((1.-sqrt(ft))*3.*ft);\n}\n\nvec2 mainSound( int samp, float time )\n{\n    vec2 y=vec2(1e-6);\n    float t=(float(samp)*(1./iSampleRate)),u=y.y;\n    for(int i=0;i<6;++i)\n    {\n        float x=1./4.95;\n        f(_f(t),vec2(17,27)[i%2]+t,y.x);\n        x+= 1./vec2(8,17)[i%2];\n        f(_f(t),x+t,y.y);\n        f(_f(x+.1*t),x+t,u);\n        t*= abs(1.-x);\n    }\n    float ft = _f(4.*t);\n    return.3*y+(u+.7*y*((1.-sqrt(ft))*5.*ft));\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}