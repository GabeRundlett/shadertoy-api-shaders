{
    "Shader": {
        "info": {
            "date": "1571350563",
            "description": "variable resolution can be fun but I didn't expect a 3d effect! ",
            "flags": 0,
            "hasliked": 0,
            "id": "wdcSzn",
            "likes": 14,
            "name": "pixelatedcircle",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "scry",
            "viewed": 464
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\tvec3 col = vec3(0.);\n    vec2 p = vec2(0.);\n    //uv = floor(uv*120.)/120.;\n    //float steps = abs(sin(iTime*0.1)*16.)+4.;\n    float steps = 32. + sin(iTime*0.1)*31.;\n    //float steps = 64.;\n    float s = iTime*01.25;\n    for (float i;i<steps;i++) {\n        float ii = i*02.102/steps;\n        p = vec2(sin(s+ii),cos(s+ii))*(0.3+sin((s+ii)*8.)*0.1);\n        ii = ii*ii*15.;\n        //ii += 40.;\n        //ii = ii*20.;\n        //ii = (steps*3.)-ii;\n        vec2 pv = floor(uv*ii)/ii;\n    \tif (length(pv+p) < 0.1*(i/steps)) {\n            col = vec3(i/(steps-1.));\n            col = col*col*col;\n        \t//col = vec3((i/steps)+(.025));\n        }\n    }\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}