{
    "Shader": {
        "info": {
            "date": "1705197351",
            "description": "quick wobbly function sketch for genuary",
            "flags": 0,
            "hasliked": 0,
            "id": "lfXSD8",
            "likes": 3,
            "name": "wobbly canvas genuary13",
            "published": 3,
            "tags": [
                "annialbers",
                "genuary"
            ],
            "usePreview": 0,
            "username": "ufffd",
            "viewed": 148
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col = vec3(0.);\n    if (uv.x < .23 || uv.x > .77 || uv.y < .03 || uv.y > .97) {\n        // background/wall\n        float plank_r = hash11(floor(uv.x*12.));\n        col = texture(iChannel0, rot(PI/2.1 + PI*plank_r*.1)*uv*(2.+plank_r)).rgb;\n        col += .1;\n        col *= .8;\n        col -= smoothstep(0.96,1.,fract(uv.x*12.))/6.;\n        col += smoothstep(0.04,.0,fract(uv.x*12.))/8.;\n        col -= 0.5*(smoothstep(0.19,0.3,uv.x) - smoothstep(0.7,0.81,uv.x)) * smoothstep(0.,0.04,uv.y) * smoothstep(0.,.1,1.-uv.y);\n        fragColor = vec4(col,1.);\n        return;\n    }\n    \n    col = vec3(sin(sin(uv.x*300.*sin(uv.x*3.+iTime*.3))+uv.y*300.+sin(iTime*3.+sin(iTime*10.)*.2-uv.x*50.)*10.)*.5+.5);\n    col = smoothstep(0.1,0.8,col);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float hash11(float p) {\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n\nmat2 rot(in float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n\n    return mat2(\n        c, -s,\n        s, c\n    );\n}\n\n#define PI 3.14289\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}