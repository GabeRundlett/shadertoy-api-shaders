{
    "Shader": {
        "info": {
            "date": "1533875051",
            "description": "Testing copying outlines with feedback. Click to move circle",
            "flags": 32,
            "hasliked": 0,
            "id": "4tdyDS",
            "likes": 5,
            "name": "feedback stripes",
            "published": 3,
            "tags": [
                "shapes",
                "stripes",
                "feedback"
            ],
            "usePreview": 0,
            "username": "aferriss",
            "viewed": 710
        },
        "renderpass": [
            {
                "code": "vec3 brightnessContrast(vec3 value, float brightness, float contrast)\n{\n    return (value - 0.5) * contrast + 0.5 + brightness;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 t = texture(iChannel0, uv)+0.03;\n    //t.rgb = brightnessContrast(t.rgb, 0.0,2.0);\n    //t = pow(t, vec4(4.0));\n    t = smoothstep(0.4, 0.7, t);\n    //t = smoothstep(0.7, 0.9, t);\n    //t = step(0.5, t);\n    fragColor = t;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// just make a circle that you can move with the mouse\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec2 m = iMouse.xy / iResolution.xy;\n    m = m * 2.0 - 1.0;\n    \n    uv.xy += -m.xy*0.5;\n    \n    float l = length(uv - 0.5 );\n    \n    \n    float l1 = smoothstep(0.1, 0.11, l);\n    \n    l = 1.0 - l1;\n    fragColor = vec4(l,l,l,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "float dampening = 0.9;\nvec2 scale = vec2(0.9);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 uv2 = uv;\n    \n    vec2 m = iMouse.xy / iResolution.xy;\n    m = m * 2.0 - 1.0;\n    m *= 0.5;\n    \n    float aspect = iResolution.y / iResolution.x;\n   \n    //scale.x *= aspect;\n    \n    // scale tex coords based on buf a circle pos\n    uv2 -= m;\n    uv2 = 2.0 * uv2 - 1.0;\n    uv2 *= scale;\n    uv2 = 0.5 * uv2 + 0.5;\n    uv2 += m;\n    \n    vec4 a = texture(iChannel0, uv);\n    vec4 b = texture(iChannel1, uv2);\n\n    b = a + (1.0 - b)*(dampening);//*(distance(uv-0.5, m)+1.0));\n   // b = fract(b);\n    fragColor = b;//clamp(b, vec4(0.0), vec4(1.0));\n    //fragColor.a = 1.0;\n   \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}