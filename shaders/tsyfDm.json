{
    "Shader": {
        "info": {
            "date": "1607284184",
            "description": "Renders smooth anti-aliased lines analytically with a simple animation to change their thickness.",
            "flags": 0,
            "hasliked": 0,
            "id": "tsyfDm",
            "likes": 3,
            "name": "Analytical Smooth Lines",
            "published": 3,
            "tags": [
                "lines",
                "antialias",
                "analyticallines"
            ],
            "usePreview": 0,
            "username": "LukasBanana",
            "viewed": 326
        },
        "renderpass": [
            {
                "code": "\n#define COLOR_RED   \t\tvec3(1.0, 0.0, 0.0)\n#define COLOR_GREEN \t\tvec3(0.0, 1.0, 0.0)\n#define COLOR_BLUE  \t\tvec3(0.0, 0.0, 1.0)\n#define LINE_THICKNESS_MIN \t1.5\n#define LINE_THICKNESS_MAX \t50.0\n#define M_PI\t\t\t\t3.141592654\n\nfloat DistanceToLine(vec2 a, vec2 b, vec2 p)\n{\n    vec2 pos = p - a;\n    vec2 dir = b - a;\n    float len = length(dir);\n    dir /= len;\n    float f = dot(dir, pos);\n    if (f < 0.0)\n        return distance(a, p);\n   \telse if (f > len)\n        return distance(b, p);\n    else\n        return distance(a + dir * f, p);\n}\n\nvoid DrawSmoothLine(inout vec3 fragColor, vec2 fragCoord, vec2 a, vec2 b, float thickness, vec3 color)\n{\n    float d = DistanceToLine(a, b, fragCoord);\n    float t = clamp(thickness, LINE_THICKNESS_MIN, LINE_THICKNESS_MAX);\n    float e = 1.0 + (t - LINE_THICKNESS_MIN) / (LINE_THICKNESS_MAX - LINE_THICKNESS_MIN) * (LINE_THICKNESS_MAX * 10.0);\n    float s = pow(smoothstep(0.0, t, d), e);\n    fragColor += color * (1.0 - s);\n}\n\n#define SMOOTH_LINE(A, B, THICKNESS, COL) \\\n    DrawSmoothLine(col, fragCoord, (A), (B), (THICKNESS), (COL))\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec3 col = vec3(0);\n    float anim = 0.5 + 0.5 * clamp(cos(iTime + M_PI)*1.1, -1.0, +1.0);\n    float thickness = mix(LINE_THICKNESS_MIN, LINE_THICKNESS_MAX, anim);\n    \n    SMOOTH_LINE(\n        iResolution.xy/2.0 + vec2(-150.0, -150.0),\n        iResolution.xy/2.0 + vec2(   0.0, +150.0),\n        thickness,\n        COLOR_RED\n   \t);\n    SMOOTH_LINE(\n        iResolution.xy/2.0 + vec2(   0.0, +150.0),\n        iResolution.xy/2.0 + vec2(+150.0, -150.0),\n        thickness,\n        COLOR_GREEN\n   \t);\n    SMOOTH_LINE(\n        iResolution.xy/2.0 + vec2(-150.0, -150.0),\n        iResolution.xy/2.0 + vec2(+150.0, -150.0),\n        thickness,\n        COLOR_BLUE\n   \t);\n    \n    fragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}