{
    "Shader": {
        "info": {
            "date": "1698662680",
            "description": "Practice from The Book of Shaders",
            "flags": 0,
            "hasliked": 0,
            "id": "DdKBzW",
            "likes": 5,
            "name": "Practice - 2023-10-30",
            "published": 3,
            "tags": [
                "thebookofshaders"
            ],
            "usePreview": 0,
            "username": "INCHMAN1900",
            "viewed": 184
        },
        "renderpass": [
            {
                "code": "vec3 line(vec2 uv,vec2 pos,float width) {\n    vec2 c1=smoothstep(pos-vec2(width/2.,0.),pos-vec2(width/2.,0.)+.00001,uv);\n    vec2 c2=smoothstep(pos+vec2(width/2.,0.),pos+vec2(width/2.,0.)+.00001,uv);\n    return vec3(c1.x*c1.y*(1.-c2.x*c2.y));\n}\n\nfloat random(in vec2 _st) {\n    return fract(sin(dot(_st.xy,vec2(1422.9898,7248.233)))*23.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ys=100.;\n    vec2 uv=fragCoord/iResolution.xy;\n    float r1=random(vec2(2143.51,floor(uv.y*ys)));\n    uv*=vec2(.001,1.);\n    uv-=vec2(r1*.001*iTime,0.);\n    float speed=r1*.5;\n    float r2=random(vec2(uv.x*10.-354.53,floor(uv.y*ys)));\n    vec3 col=line(uv,vec2(r2,.0),r1*((1.-iMouse.x/iResolution.x)*3.+.01));\n    // erase some lines\n    col*=mod(uv.y*ys,2.)>1.?0.:1.;\n    fragColor = vec4(1.-col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}