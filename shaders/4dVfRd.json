{
    "Shader": {
        "info": {
            "date": "1558437195",
            "description": "klj",
            "flags": 0,
            "hasliked": 0,
            "id": "4dVfRd",
            "likes": 1,
            "name": "akakakakakakaak",
            "published": 3,
            "tags": [
                "ljlfkjlkj"
            ],
            "usePreview": 0,
            "username": "lennyjpg",
            "viewed": 393
        },
        "renderpass": [
            {
                "code": "\tvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\tfloat snoise(vec2 v){\n\t  const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439);\n\t  vec2 i  = floor(v + dot(v, C.yy) );\n\t  vec2 x0 = v -   i + dot(i, C.xx);\n\t  vec2 i1;\n\t  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n\t  vec4 x12 = x0.xyxy + C.xxzz;\n\t  x12.xy -= i1;\n\t  i = mod(i, 289.0);\n\t  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n\t  + i.x + vec3(0.0, i1.x, 1.0 ));\n\t  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n\t  m = m*m;\n\t  m = m*m;\n\t  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n\t  vec3 h = abs(x) - 0.5;\n\t  vec3 ox = floor(x + 0.5);\n\t  vec3 a0 = x - ox;\n\t  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\t  vec3 g;\n\t  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n\t  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n\t  return 130.0 * dot(m, g);\n\t}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord/iResolution.xy-0.5;\n    float t = iTime; \n   float x = uv.x * 0.2;\n   vec3 speed = vec3(-.4,.7,-1.3) * t;\n   vec3 f = vec3(0.25,0.13,0.05)*t;\n   vec3 q = vec3(1,1.5,0.5)*x;    \n   vec3 d =vec3( snoise(vec2(q.x+speed.x, f.x)), snoise(vec2(q.y+speed.y, f.y)), snoise(vec2(q.z+speed.z, f.z)));\n   vec3 w = sin(d)*0.5;\n    float blur = 0.37;\n   vec3 ww = smoothstep(w-blur,w+blur,vec3(uv.y+0.02));\n    ww *=0.5;\n    \n    vec3 fu = vec3(1.0,0.0,0.0);\n    vec3 g = vec3(3.0*uv.y+0.5);\n    vec3 overlay = mix(fu,g,0.5);\n    \n    vec3 final = mix(overlay,ww,0.5);\n    fragColor = vec4(final,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}