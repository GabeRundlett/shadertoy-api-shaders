{
    "Shader": {
        "info": {
            "date": "1558202676",
            "description": "sdfgsdfg",
            "flags": 0,
            "hasliked": 0,
            "id": "XttyWX",
            "likes": 1,
            "name": "xcvdfdsf",
            "published": 3,
            "tags": [
                "sdfgsdfg"
            ],
            "usePreview": 0,
            "username": "lennyjpg",
            "viewed": 346
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n\nfloat N21(vec2 p)\n{\t// Dave Hoskins - https://www.shadertoy.com/view/4djSRW\n\tvec3 p3  = fract(vec3(p.xyx) * vec3(443.897, 441.423, 437.195));\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle), sin(_angle),cos(_angle));\n}\n\nfloat tri(vec2 uv){\n    vec2 id = floor(uv)*0.02;\n    float t = iTime*0.00005;\n    uv = fract(uv);\n    uv -= vec2(0.5);    \n    float angle = N21(vec2(id.x,+id.y)+t*0.001);\n    angle = floor(angle*4.0)*0.5;\n    uv = rotate2d( angle* PI ) * uv;\n    uv += vec2(0.5);\n    return smoothstep(1.0,0.99,length(uv));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = (fragCoord-0.5)*0.5/iResolution.y;\n   vec2 u = uv;\n\n   uv *= 10.;\n   float f =  tri(uv);\n    \nuv+=10.0;\n    uv*=0.5;\n    \n    f *=  tri(uv);\n    \n    \n \n   fragColor = vec4(f);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}