{
    "Shader": {
        "info": {
            "date": "1556395874",
            "description": "My avatar reproduction. ",
            "flags": 32,
            "hasliked": 0,
            "id": "ttlGD4",
            "likes": 12,
            "name": "My self portrait",
            "published": 3,
            "tags": [
                "fun",
                "draw",
                "horse"
            ],
            "usePreview": 0,
            "username": "avin",
            "viewed": 618
        },
        "renderpass": [
            {
                "code": "#define BACK_COL vec3(150,206,208)/255.\n#define BROWN_COL vec3(213,126,127)/255.\n#define PURPLE_COL vec3(150,117,168)/255.\n#define BLACK_COL vec3(81,66,84)/255.\n#define PINK_COL vec3(218,114,175)/255.\n#define PINK_L_COL vec3(220,174,209)/255.\n\n#define SF 1./min(iResolution.x,iResolution.y)\n#define SS(l,s) smoothstep(SF,-SF,l-s)\n\nfloat neck(vec2 p){\n    \n    vec2 pp = p;\n    \n    pp.x +=.25;    \n    float l = length(pp);            \n    float d = SS(l, .945); \n    \n    pp = p;\n    \n    p.x += .8;\n    p.y -= .15;    \n    l = length(p);\n    d *= SS(l, .8);\n    \n    pp = p;\n    \n    p.x -= 0.8; // top heck\n    p.y += .9;    \n    l = length(p);\n    d *= SS(l, 1.0);\n    \n    pp = p;   \n    pp *= mat2(cos( sin(-.25) + cos(iTime*2.)*.05 + vec4(0,33,11,0)));\n    pp.x *= .2;\n    pp.x += .43;    \n    pp.y -= .38;   \n    l = length(pp);\n    d += SS(l, .5) * SS(p.x, -.2 + cos(iTime*5.)*.035);\n    \n    \n    \n    return d;      \n}\n\nfloat head(vec2 p){\n\tvec2 pp = p;\n    pp.x-=.0;\n    pp *= mat2(cos( sin(-.1) + vec4(0,33,11,0)));\n    float d = SS(pp.x, .15);\n    \n    pp = p; // face\n    pp *= mat2(cos( sin(-.25) + vec4(0,33,11,0)));\n    d *= SS(-.1, pp.x);    \n    pp = p; \n    pp.y += .05;\n    float l = length(pp);\n    d *= SS(l, .3);\n    \n    pp = p; // nose\n    pp.y += .29;\n    pp.x -= .07;\n    l = length(pp);\n    d += SS(l, .12);\n    \n    pp = p; //ear l\n    pp.y -= .29;\n    pp.y *= .5;\n    pp.x += .07;\n    l = length(pp);\n    d += SS(l, .05);\n    \n    pp = p; // ear r\n    pp *= mat2(cos( sin(+.5) + vec4(0,33,11,0)));\n    pp.y -= .29;\n    pp.y *= .5;        \n    l = length(pp);\n    d += SS(l, .05);\n    \n    \n    return d;\n}\n\nfloat earLInner(vec2 p){\n    \n    vec2 pp = p;\n\t\n    pp.y -= .29;\n    pp.y *= .5;\n    pp.x += .07;\n    float l = length(pp);\n    float d = SS(l, .03);\n    \n    d *= SS(-.02, pp.y);\n       \n    return d;\n}\n\nfloat mane(vec2 p){\n\tvec2 pp = p + vec2(.04, -.1) + vec2(cos(iTime*1.5), sin(iTime*3.))*.02;\n    \n    pp.x +=.28;\n    float l = length(pp);\n    float d = SS(l, .2);\n    \n    pp = p + vec2(cos(iTime), sin(iTime*3.))*.01;\n    \n    pp.x +=.48;\n    pp.y +=.02;\n    l = length(pp);\n    d += SS(l, .25);\n    \n    pp = p + vec2(cos(iTime*2.), sin(iTime))*.01;\n    \n    pp *= (cos(pp.x*20.1)*.5+.5)*.1+1.;\n    pp.x += .05;\n    pp.y += .02;\n    \n    d *= neck(pp*.9);\n    \n    pp = p + vec2(cos(iTime), sin(iTime))*.01;\n    \n    pp.x +=.28;\n    pp.y -=.10;\n    l = length(pp);\n    d += SS(l, .15);\n    \n    pp = p + vec2(cos(iTime*.8), sin(iTime*3.))*.01;\n    \n    pp.x +=.18;\n    pp.y -=.18;\n    l = length(pp);\n    d += SS(l, .10);\n    \n    return d;\n}\n\nfloat face(vec2 p){    \n    vec2 pp = p;\n        \n    pp.y += .35;\n    pp.x -= .07;\n    \n    float l = length(pp);\n    float d = SS(l, .1);\n       \n    pp = p;       \n    pp.y += .33;\n    pp.x -= .09;\n    \n    l = length(pp);\n    d -= SS(l, .1 + (clamp(sin(iTime*2.)*.5+1., .0, 1.))*0.001);    \n    \n    for(float i=-1.;i<=1.;i+=2.){\n        pp = p; // nose\n        pp.y += .31;\n        pp.x -= .10 + i*.03;\n        l = length(pp);\n        d += SS(l, .01);\t\n    }\n    \n\n    pp = p; // main contour\n    pp.y += .29;\n    pp.x -= .07;\n    l = length(pp);\n    d *= SS(l, .12);\n    \n    \n    \n    return  d;\n}\n\nfloat glass(vec2 p){\n    \n    float d = 0.;\n    p.x -= .075;\n    p.y -= .01;\n    for(float i=-1.;i<=1.;i+=2.){\n        vec2 pp = p;\n    \n        pp.x += i*.075;\n        pp.y -= abs(pp.x*.75);\n        pp.y *= 1.2;\n        \n        float l = length(pp);\n\n        d += SS(l, .07);\n    }\n    \n    vec2 pp = p;\n    pp.y -= .05;\n    float dd = SS(abs(pp.y), .008);\n    dd *= SS(abs(pp.x), .1);\n    d+=dd;\n    \n    pp = p;\n    pp *= mat2(cos( sin(.5) + vec4(0,33,11,0)));\n    pp.y += .02;\n    pp.x += .2;\n    dd = SS(abs(pp.y), .008);\n    dd *= SS(abs(pp.x), .1);\n    d+=dd;\n\t\n    \n    return d;\n}\n\nfloat glassHighlight(vec2 p){\n    float d = 0.;\n    p.x -= .075;\n    p.y -= .01;\n    \n\tfor(float i=-1.;i<=1.;i+=2.){\n        vec2 pp = p;\n        pp.x += i*.075 + sin(iTime*5.)*.05;\n        pp *= mat2(cos( sin(.5) + vec4(0,33,11,0)));\n        float dd = SS(abs(pp.x), .02);\n        pp = p;    \n        pp.x += i*.075;\n        pp.y -= abs(pp.x*.75);\n        pp.y *= 1.2;\n        \n        float l = length(pp);\n\n        dd *= SS(l, .07);\n        \n        dd *= cos(iTime*5.);\n        \n        d+=dd;\n    }\n    \n    return d;\n}\n\nfloat bang(vec2 p){\n    vec2 pp = p + vec2(cos(iTime*2.), sin(iTime*1.))*.005;\n    pp.y -= .3;\n    pp.x -= .17;\n    pp.x += sin(p.y*40.+2.)*.01;\n    float l = length(pp);\n    \n\tfloat d = SS(l, .2);\n    \n    pp = p;\n    pp.y -= .05;        \n    pp.x += sin(p.y*40.+2.)*.015 + sin(p.y*40.+2. + iTime*10.)*.005;    \n    l = length(pp);    \n\td *= SS(l, .2);\n    \n    return d;\n}\n\nfloat horn (vec2 p){\n    vec2 pp = p + vec2(.25,0.);\n    \n    pp *= mat2(cos( sin(+.5) + vec4(0,33,11,0)));\n    float d = SS(.1, pp.x);\n    \n    pp = p + vec2(.11,0.);    \n    pp *= mat2(cos( sin(+.25) + vec4(0,33,11,0)));\n    d *= SS(pp.x, .1);\n    \n    pp = p;\n    pp *= mat2(cos( sin(.1) + vec4(0,33,11,0)));\n    d *= SS(.245, pp.y);\n    \n    return d;\n\t\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 ouv = fragCoord/iResolution.xy;\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    uv.x -= .15 + sin(iTime*1.) * .05; // move head    \n    uv.y += sin(iTime*5.) * .025;\n    uv *= mat2(cos( sin(iTime*2.5)*.1 + vec4(0,33,11,0)));\n\n    // head    \n    float m = neck(uv);\n    m+=head(uv);\n    m = clamp(m, .0, 1.);\n    vec3 col = mix(texture(iChannel0, ouv).rgb, vec3(1.), m);\n    \n    // ear L inner\n    m = earLInner(uv);\n    col = mix(col, BROWN_COL, m);       \n    \n    // face\n    m = face(uv);\n    m = clamp(m, .0, 1.); \n    col = mix(col, BLACK_COL, m);\n    \n    // glass\n    m = glass(uv);\n    m = clamp(m, .0, 1.);\n    col = mix(col, PINK_COL, m);\n    \n    // glass highlight\n    m = glassHighlight(uv);\n    m = clamp(m, .0, 1.);\n    col = mix(col, PINK_L_COL, m);\n    \n    // mane\n    m = mane(uv + vec2(.02, 0.));\n    m = clamp(m, .0, 1.);\n    col = mix(col, PURPLE_COL, m);\n    \n    // bang\n    m = bang(uv);\n    m = clamp(m, .0, 1.);\n    col = mix(col, PURPLE_COL, m);\n    \n    // horn\n    m = horn(uv);\n    m = clamp(m, .0, 1.);\n    col = mix(col, BROWN_COL, m);\n\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Original code from https://www.shadertoy.com/view/WllGRn\n\n#define SIZE 15.\n#define WHITE_COL vec3(235,241,245)/255.\n#define BLACK_COL vec3(81,66,84)/255.\n#define BACK_COL vec3(150,206,208)/255.\n\n// Get random value\nfloat rand(vec2 co) { \n    return fract(sin(dot(co.xy , vec2(12.9898, 78.233))) * 43758.5453);\n} \n\nvec3 background( vec2 uv )\n{           \n    float smf = 1./(iResolution.y) * SIZE * 2.; // smooth factor\n    \n    vec2 ruv = uv*SIZE;    \n    vec2 id = ceil(ruv);       \n        \n    ruv.x += iTime*20. * (rand(vec2(id.y))*0.5+.5); // move up    \n    vec2 guv = fract(ruv) - 0.5; // ceneterize guv   \n    \n    ruv = ceil(ruv);    \n    float g = length(guv);\n    \n    float v = rand(ruv)*0.5; // random size     \n    v *= step(v, 0.2); // remove too BIG\n    float m = smoothstep(v,v-smf, g);    \n    \n    return mix(BACK_COL, WHITE_COL, m); // final color       \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = vec4(background(uv),1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Motion blur for Buffer A\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 mainCol = texture(iChannel0, uv).rgb ;\n\n    vec3 col = texture(iChannel0, uv).rgb*.3;\n    col += texture(iChannel1, uv).rgb*.7;          \n    \n    fragColor = vec4(col,1.0);\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}