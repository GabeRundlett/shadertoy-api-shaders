{
    "Shader": {
        "info": {
            "date": "1554986430",
            "description": "simple multi-color example",
            "flags": 0,
            "hasliked": 0,
            "id": "3s2XWV",
            "likes": 4,
            "name": "Polycolor circles",
            "published": 3,
            "tags": [
                "circles",
                "polycolor",
                "multicolor"
            ],
            "usePreview": 0,
            "username": "avin",
            "viewed": 436
        },
        "renderpass": [
            {
                "code": "#define SIZE 10.\n\nfloat rand(vec2 co) { \n    return fract(sin(dot(co.xy , vec2(12.9898, 78.233))) * 43758.5453);\n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{     \n    vec2 uv = (fragCoord.xy - iResolution.xy * 0.5) / iResolution.y;\n    \n    uv = uv * SIZE;\n    uv.x += floor(mod(uv.y, 2.0)) * iTime * 2.0 - iTime;\n    vec2 id = floor(uv);\n    vec2 gv = fract(uv) - 0.5;\n    \n    float sF = 1.5 * (SIZE / iResolution.y);         \n    float size = 0.4;\n    float colMask = smoothstep(size, size - sF, length(gv));\n        \n    vec3 circleColor = vec3(\n        rand(id),\n        rand(id + 1.0),\n        rand(id + 2.0)\n    );\n    \n    vec3 col = mix(vec3(1.0), circleColor, colMask);\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}