{
    "Shader": {
        "info": {
            "date": "1668169528",
            "description": "local frame ( per tile ) in an incompressible field  ( made with curl of flownoise ).\nintensity ~ speed.\nBest seen in fullscreen.",
            "flags": 0,
            "hasliked": 0,
            "id": "md23DK",
            "likes": 19,
            "name": "incompressible field div(V) = 0",
            "published": 3,
            "tags": [
                "fluid",
                "curlnoise",
                "flownoise",
                "incompressible"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 414
        },
        "renderpass": [
            {
                "code": "// --- noise ---------------------------------------------------------\n//#define T(u) texture(iChannel0,.01*u/iChannelResolution[0].xy).x // interp text noise\n  #define T(u) ( .5 + 1.5* noise (.005*u) )  // base gradient noise\n//#define T(u) ( .5 + 1.5* perlin(.005*u) )  // perlin noise\n\n#define hash(p )     ( 2.* fract(sin((p)*mat2(127.1,311.7, 269.5,183.3)) *43758.5453123) - 1. ) \\\n                    *  mat2(cos(iTime+vec4(0,11,33,0)))\n#define grad(x,y)      dot( hash( i+vec2(x,y) ), f-vec2(x,y) )\n\nfloat noise( vec2 p )\n{\n    vec2 i = floor(p), f = fract(p), // u = f*f*(3.-2.*f);              // = smoothstep\n                                        u = f*f*f*( 10. +f*(6.*f-15.)); // better with derivatives\n    return mix( mix( grad(0,0), grad(1,0), u.x),\n                mix( grad(0,1), grad(1,1), u.x), u.y);\n}\n\nfloat perlin( vec2 U ) { // inspired from https://www.shadertoy.com/view/XdXGW8\n    float v = 0., s = .5;\n    mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n    for( int i=0; i<3; i++, s/=2., U*=m )\n        v  += s * noise( U ); \n    return v;\n}\n// ---------------------------------------------------------------\n\n#define cross(a,b) ( (a).x*(b).y - (a).y*(b).x )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = u/32., I = floor(U), V, A;\n    float psi = T(u);\n    V = 5e3 * vec2( -dFdy(psi), dFdx(psi) ); // div(V) = 0\n    U = fract(U)-.5;\n    A = vec2( dot(U,V) , cross(U,V) );       // draw local frame ( orthoV, V )\n    A = sin(A); // A = 1./abs(A); \n    O = .5 + .5 * vec4( A , 0,0);            // colored frame\n    O = vec4( A.x + A.y );                   // dots\n    O = vec4(  max( A.x, A.y ) );            // frame\n    O *= .4 + .6* length(V)/40.;             // intensity = speed \n // O.r = min(O.r, length(V)/40. );\n // U = .5+.5*cos(3.14*U); O *= U.x*U.y;     // tile vignetting\n    \n// ......................................... // debug\n // O = vec4 ( psi );                \n // O = vec4 ( .5+.02*V, 0,1);      \n // O = vec4( length(V)/40. );   \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}