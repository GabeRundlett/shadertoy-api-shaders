{
    "Shader": {
        "info": {
            "date": "1527935869",
            "description": "the sum of 2 disk distances gives unintuitive result. \n    + ,  max,   d1+d2-d1*d2, smoothmax\nBottom: with sRGB transform.\nmouse: distance.",
            "flags": 0,
            "hasliked": 0,
            "id": "4dGBRm",
            "likes": 2,
            "name": "unintuitive sum of blob",
            "published": 3,
            "tags": [
                "perception"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 453
        },
        "renderpass": [
            {
                "code": "float r = .9, d = .5, k=4.;\n    \n#define D(U,C,r) clamp( 1.-length(U-C)/r, 0., 1. )         // disk\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    U = ( U+U - R ) / R.y;\n    if (iMouse.z>0.) d = (2.*iMouse.x-R.x)/R.y;\n    float t = floor(mod(iTime, 4.)),\n         d1 = D(U,vec2(-d,0),r), d2 = D(U,vec2(d,0),r);    // 2 disks\n    O = vec4(  t==0. ? d1 + d2\n             : t==1. ? max( d1, d2 )\n             : t==2. ? d1+d2 - d1*d2 // = 1-(1.-d1)(1-d2) \n             :         log( exp(k*d1) + exp(k*d2)-1. ) / k );\n    O.r += smoothstep(3./r/R.y, 0., abs(O.r-.5) );         // isovalue\n    if (U.y<0.) O = sqrt(O);                               // to sRGB\n    \n    O.g +=  D(U,vec2(.9*R.x/R.y, -1.+2.*(t+.5)/4.), .05);  // cursor\n    O +=    D(U,vec2(.9*R.x/R.y, (floor(U.y*2.)+.5)/2.), .01);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}