{
    "Shader": {
        "info": {
            "date": "1570728934",
            "description": "Click: [url]JAVASCRIPT: H=location.host;E=(H?window:opener);E.tab1.click();E.gShaderToy.SetTexture(1,{mSrc:'https://i.imgur.com/H5YzLhr.png',mType:'texture',mID:1,mSampler:{filter:'mipmap',vflip:'true',srgb:'false',internal:'byte'}});if(!H)close();[/url]",
            "flags": 32,
            "hasliked": 0,
            "id": "wdyGRt",
            "likes": 16,
            "name": "geometry images - mesh texture",
            "published": 3,
            "tags": [
                "mipmap",
                "mesh",
                "encoding",
                "load",
                "customtexture",
                "custommesh"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 979
        },
        "renderpass": [
            {
                "code": "// Geometry Images: encoding mesh & bump in texture. From http://hhoppe.com/proj/gim/\n// mesh image :               https://i.imgur.com/H5YzLhr.png\n// bump image (unused here) : https://i.imgur.com/HE34SCq.png\n// you can load them in shadertoy either from the JS console ( press F12 )\n//      window.tab1.click(); gShaderToy.SetTexture(1,{mSrc:'https://i.imgur.com/H5YzLhr.png',mType:'texture',mID:1,mSampler:{filter:'mipmap',wrap:'repeat',vflip:'true',srgb:'false',internal:'byte'}});\n// or by clicking the magic link in shader description.\n\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = texelFetch(iChannel0,ivec2(U), 0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Geometry Images: encoding mesh & bump in texture. From http://hhoppe.com/proj/gim/\n// mesh image :               https://i.imgur.com/H5YzLhr.png\n// bump image (unused here) : https://i.imgur.com/HE34SCq.png\n// you can load them in shadertoy either from the JS console ( press F12 )\n//      window.tab1.click(); gShaderToy.SetTexture(1,{mSrc:'https://i.imgur.com/H5YzLhr.png',mType:'texture',mID:1,mSampler:{filter:'mipmap',wrap:'repeat',vflip:'true',srgb:'false',internal:'byte'}});\n// or by clicking the magic link in shader description.\n\n#define LOD 1 // Compatible with MIPmapping and compression ! \n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = texelFetch(iChannel0,ivec2(U), 0);\n    U *= 256./iResolution.y;\n    if (max(U.x,U.y)>256.) return;\n   \n    float eps = exp2(float(LOD)) / 256., \n          //z = fract(iTime);\n            z = fract(float(iFrame<<LOD)/256.);\n    \n    for(int y = 0; y < 1+256>>LOD; y++)\n        for(int x = 0; x < 1+256>>LOD; x++) {\n            vec3 P = texelFetch(iChannel1,ivec2(x,y), LOD).xyz;\n            vec2 V = P.xy - U/257.;\n            if (abs(P.z-z)<eps && dot(V,V)<eps*eps) { O = vec4(z); return; }\n        }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}