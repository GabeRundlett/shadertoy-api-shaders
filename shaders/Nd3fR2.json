{
    "Shader": {
        "info": {
            "date": "1656762159",
            "description": "I wanted more colormaps from matplotlib, so I made a python script to translate every Colormap ([url]https://pastebin.com/mf5GfGCc[/url]).",
            "flags": 0,
            "hasliked": 0,
            "id": "Nd3fR2",
            "likes": 23,
            "name": "matplotlib Color Maps",
            "published": 3,
            "tags": [
                "colormap",
                "polynomial",
                "uniform",
                "viridis",
                "magma",
                "python",
                "inferno",
                "matplotlib",
                "perceptually",
                "fitcolormap",
                "cmap",
                "plt"
            ],
            "usePreview": 0,
            "username": "gehtsiegarnixan",
            "viewed": 766
        },
        "renderpass": [
            {
                "code": "/* \nGrayscale is boring. Feel free to use these for your projects. \n\nI wanted more colormaps to choose from. I already had a cmap \ntranslator into textures, graphs, and csv laying around.\nI added a simple scipy fitter to translate any cmap into poly6 \nfunctions too. It doesn't work for all colormaps, but all the \npretty ones work great. \n\nIf you want to add a colormap thats not here you can use my\npython code to make it yourself (https://pastebin.com/mf5GfGCc)\n\nIf you wonder how all the other colormaps look, see an \nincomplete list the matplotlib documentation \n(https://matplotlib.org/stable/tutorials/colors/colormaps.html)\nor my graphs with everything (https://imgur.com/a/xfZlxlp).\n\nIf you want to imporve the default mpl color maps use gamma \nadjustment suggested by xrx to remove color bleeding:\nfragColor.xyz = pow(fragColor.xyz,vec3(.455));\nGamma Color Adjustment is showcased here: \nhttps://www.shadertoy.com/view/WdXGzl\n*/\n\n// makes afmhot colormap with polynimal 6\nvec3 afmhot(float t) {\n    const vec3 c0 = vec3(-0.020390,0.009557,0.018508);\n    const vec3 c1 = vec3(3.108226,-0.106297,-1.105891);\n    const vec3 c2 = vec3(-14.539061,-2.943057,14.548595);\n    const vec3 c3 = vec3(71.394557,22.644423,-71.418400);\n    const vec3 c4 = vec3(-152.022488,-31.024563,152.048692);\n    const vec3 c5 = vec3(139.593599,12.411251,-139.604042);\n    const vec3 c6 = vec3(-46.532952,-0.000874,46.532928);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes Blues_r colormap with polynimal 6\nvec3 Blues_r(float t) {\n    const vec3 c0 = vec3(0.042660,0.186181,0.409512);\n    const vec3 c1 = vec3(-0.703712,1.094974,2.049478);\n    const vec3 c2 = vec3(7.995725,-0.686110,-4.998203);\n    const vec3 c3 = vec3(-24.421963,2.680736,7.532937);\n    const vec3 c4 = vec3(47.519089,-4.615112,-5.126531);\n    const vec3 c5 = vec3(-46.038418,2.606781,0.685560);\n    const vec3 c6 = vec3(16.586546,-0.279280,0.447047);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes bone colormap with polynimal 6\nvec3 bone(float t) {\n    const vec3 c0 = vec3(-0.005007,-0.003054,0.004092);\n    const vec3 c1 = vec3(1.098251,0.964561,0.971829);\n    const vec3 c2 = vec3(-2.688698,-0.537516,2.444353);\n    const vec3 c3 = vec3(12.667310,-0.657473,-8.158684);\n    const vec3 c4 = vec3(-27.183124,8.398806,10.182004);\n    const vec3 c5 = vec3(26.505377,-12.576925,-5.329155);\n    const vec3 c6 = vec3(-9.395265,5.416416,0.883918);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes BuPu_r colormap with polynimal 6\nvec3 BuPu_r(float t) {\n    const vec3 c0 = vec3(0.290975,0.010073,0.283355);\n    const vec3 c1 = vec3(2.284922,-0.278000,1.989093);\n    const vec3 c2 = vec3(-6.399278,8.646163,-3.757712);\n    const vec3 c3 = vec3(2.681161,-20.491129,4.065305);\n    const vec3 c4 = vec3(12.990405,24.836197,0.365773);\n    const vec3 c5 = vec3(-16.216830,-16.111779,-4.006291);\n    const vec3 c6 = vec3(5.331023,4.380922,2.057249);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes cividis colormap with polynimal 6\nvec3 cividis(float t) {\n    const vec3 c0 = vec3(-0.008598,0.136152,0.291357);\n    const vec3 c1 = vec3(-0.415049,0.639599,3.028812);\n    const vec3 c2 = vec3(15.655097,0.392899,-22.640943);\n    const vec3 c3 = vec3(-59.689584,-1.424169,75.666364);\n    const vec3 c4 = vec3(103.509006,2.627500,-122.512551);\n    const vec3 c5 = vec3(-84.086992,-2.156916,94.888003);\n    const vec3 c6 = vec3(26.055600,0.691800,-28.537831);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes CMRmap colormap with polynimal 6\nvec3 CMRmap(float t) {\n    const vec3 c0 = vec3(-0.046981,0.001239,0.005501);\n    const vec3 c1 = vec3(4.080583,1.192717,3.049337);\n    const vec3 c2 = vec3(-38.877409,1.524425,20.200215);\n    const vec3 c3 = vec3(189.038452,-32.746447,-140.774611);\n    const vec3 c4 = vec3(-382.197327,95.587531,270.024592);\n    const vec3 c5 = vec3(339.891791,-100.379096,-212.471161);\n    const vec3 c6 = vec3(-110.928480,35.828481,60.985694);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes coolwarm colormap with polynimal 6\nvec3 coolwarm(float t) {\n    const vec3 c0 = vec3(0.227376,0.286898,0.752999);\n    const vec3 c1 = vec3(1.204846,2.314886,1.563499);\n    const vec3 c2 = vec3(0.102341,-7.369214,-1.860252);\n    const vec3 c3 = vec3(2.218624,32.578457,-1.643751);\n    const vec3 c4 = vec3(-5.076863,-75.374676,-3.704589);\n    const vec3 c5 = vec3(1.336276,73.453060,9.595678);\n    const vec3 c6 = vec3(0.694723,-25.863102,-4.558659);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes cubehelix colormap with polynimal 6\nvec3 cubehelix(float t) {\n    const vec3 c0 = vec3(-0.079465,0.040608,-0.009636);\n    const vec3 c1 = vec3(6.121943,-1.666276,1.342651);\n    const vec3 c2 = vec3(-61.373834,27.620334,19.280747);\n    const vec3 c3 = vec3(240.127160,-93.314549,-154.494465);\n    const vec3 c4 = vec3(-404.129586,133.012936,388.857101);\n    const vec3 c5 = vec3(306.008802,-81.526778,-397.337219);\n    const vec3 c6 = vec3(-85.633074,16.800478,143.433300);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes gist_earth colormap with polynimal 6\nvec3 gist_earth(float t) {\n    const vec3 c0 = vec3(-0.005626,-0.032771,0.229230);\n    const vec3 c1 = vec3(0.628905,1.462908,4.617318);\n    const vec3 c2 = vec3(3.960921,9.740478,-25.721645);\n    const vec3 c3 = vec3(-32.735710,-53.470618,60.568598);\n    const vec3 c4 = vec3(91.584783,109.398709,-74.866221);\n    const vec3 c5 = vec3(-101.138314,-103.815111,48.418061);\n    const vec3 c6 = vec3(38.745198,37.752237,-12.232828);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes hsv colormap with polynimal 6\nvec3 hsv(float t) {\n    const vec3 c0 = vec3(0.834511,-0.153764,-0.139860);\n    const vec3 c1 = vec3(8.297883,13.629371,7.673034);\n    const vec3 c2 = vec3(-80.602944,-80.577977,-90.865764);\n    const vec3 c3 = vec3(245.028545,291.294154,390.181844);\n    const vec3 c4 = vec3(-376.406597,-575.667879,-714.180803);\n    const vec3 c5 = vec3(306.639709,538.472148,596.580595);\n    const vec3 c6 = vec3(-102.934273,-187.108098,-189.286489);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes inferno colormap with polynimal 6\nvec3 inferno(float t) {\n    const vec3 c0 = vec3(0.000129,0.001094,-0.041044);\n    const vec3 c1 = vec3(0.083266,0.574933,4.155398);\n    const vec3 c2 = vec3(11.783686,-4.013093,-16.439814);\n    const vec3 c3 = vec3(-42.246539,17.689298,45.210269);\n    const vec3 c4 = vec3(78.087062,-33.838649,-83.264061);\n    const vec3 c5 = vec3(-72.108852,32.950143,74.479447);\n    const vec3 c6 = vec3(25.378501,-12.368929,-23.407604);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes jet colormap with polynimal 6\nvec3 jet(float t) {\n    const vec3 c0 = vec3(-0.071839,0.105300,0.510959);\n    const vec3 c1 = vec3(3.434264,-5.856282,5.020179);\n    const vec3 c2 = vec3(-35.088272,62.590515,-12.661725);\n    const vec3 c3 = vec3(125.621078,-187.192678,8.399805);\n    const vec3 c4 = vec3(-179.495111,277.458688,-26.089763);\n    const vec3 c5 = vec3(113.825719,-218.486063,52.463600);\n    const vec3 c6 = vec3(-27.714880,71.427477,-27.714893);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes jet colormap with polynimal 6\nvec3 magma(float t) {\n    const vec3 c0 = vec3(-0.002292,-0.001348,-0.011890);\n    const vec3 c1 = vec3(0.234451,0.702427,2.497211);\n    const vec3 c2 = vec3(8.459706,-3.649448,0.385699);\n    const vec3 c3 = vec3(-28.029205,14.441378,-13.820938);\n    const vec3 c4 = vec3(52.814176,-28.301374,13.021646);\n    const vec3 c5 = vec3(-51.349945,29.406659,4.305315);\n    const vec3 c6 = vec3(18.877608,-11.626687,-5.627010);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes ocean colormap with polynimal 6\nvec3 ocean(float t) {\n    const vec3 c0 = vec3(0.005727,0.451550,-0.000941);\n    const vec3 c1 = vec3(-0.112625,1.079697,1.001170);\n    const vec3 c2 = vec3(-0.930272,-28.415474,0.004744);\n    const vec3 c3 = vec3(15.125713,109.226840,-0.011841);\n    const vec3 c4 = vec3(-54.993643,-168.660130,0.012964);\n    const vec3 c5 = vec3(74.155713,119.622305,-0.005110);\n    const vec3 c6 = vec3(-32.297651,-32.297650,-0.000046);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes PuBu_r colormap with polynimal 6\nvec3 PuBu_r(float t) {\n    const vec3 c0 = vec3(-0.006363,0.212872,0.336555);\n    const vec3 c1 = vec3(1.081919,1.510170,1.985891);\n    const vec3 c2 = vec3(-14.783872,-6.062404,-2.068039);\n    const vec3 c3 = vec3(71.020484,24.455925,-4.350981);\n    const vec3 c4 = vec3(-127.620020,-46.977973,14.599012);\n    const vec3 c5 = vec3(101.930678,41.789097,-14.293631);\n    const vec3 c6 = vec3(-30.634205,-13.967854,4.778537);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes rainbow colormap with polynimal 6\nvec3 rainbow(float t) {\n    const vec3 c0 = vec3(0.503560,-0.002932,1.000009);\n    const vec3 c1 = vec3(-1.294985,3.144463,0.001872);\n    const vec3 c2 = vec3(-16.971202,0.031355,-1.232219);\n    const vec3 c3 = vec3(97.134102,-5.180126,-0.029721);\n    const vec3 c4 = vec3(-172.585487,-0.338714,0.316782);\n    const vec3 c5 = vec3(131.971426,3.514534,-0.061568);\n    const vec3 c6 = vec3(-37.784412,-1.171512,0.003376);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes PuRd_r colormap with polynimal 6\nvec3 PuRd_r(float t) {\n    const vec3 c0 = vec3(0.425808,-0.016400,0.108687);\n    const vec3 c1 = vec3(0.317304,0.729767,2.091430);\n    const vec3 c2 = vec3(13.496685,-7.880910,-14.132707);\n    const vec3 c3 = vec3(-48.433187,38.030685,64.370712);\n    const vec3 c4 = vec3(60.867293,-65.403385,-126.336402);\n    const vec3 c5 = vec3(-28.305816,50.079623,111.580346);\n    const vec3 c6 = vec3(2.578842,-14.582396,-36.726260);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes RdYlBu_r colormap with polynimal 6\nvec3 RdYlBu_r(float t) {\n    const vec3 c0 = vec3(0.207621,0.196195,0.618832);\n    const vec3 c1 = vec3(-0.088125,3.196170,-0.353302);\n    const vec3 c2 = vec3(8.261232,-8.366855,14.368787);\n    const vec3 c3 = vec3(-2.922476,33.244294,-43.419173);\n    const vec3 c4 = vec3(-34.085327,-74.476041,37.159352);\n    const vec3 c5 = vec3(50.429790,67.145621,-1.750169);\n    const vec3 c6 = vec3(-21.188828,-20.935464,-6.501427);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes Spectral_r colormap with polynimal 6\nvec3 Spectral_r(float t) {\n    const vec3 c0 = vec3(0.426208,0.275203,0.563277);\n    const vec3 c1 = vec3(-5.321958,3.761848,5.477444);\n    const vec3 c2 = vec3(42.422339,-15.057685,-57.232349);\n    const vec3 c3 = vec3(-100.917716,57.029463,232.590601);\n    const vec3 c4 = vec3(106.422535,-116.177338,-437.123306);\n    const vec3 c5 = vec3(-48.460514,103.570154,378.807920);\n    const vec3 c6 = vec3(6.016269,-33.393152,-122.850806);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes twilight colormap with polynimal 6\nvec3 twilight(float t) {\n    const vec3 c0 = vec3(0.996106,0.851653,0.940566);\n    const vec3 c1 = vec3(-6.529620,-0.183448,-3.940750);\n    const vec3 c2 = vec3(40.899579,-7.894242,38.569228);\n    const vec3 c3 = vec3(-155.212979,4.404793,-167.925730);\n    const vec3 c4 = vec3(296.687222,24.084913,315.087856);\n    const vec3 c5 = vec3(-261.270519,-29.995422,-266.972991);\n    const vec3 c6 = vec3(85.335349,9.602600,85.227117);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes twilight_shifted colormap with polynimal 6\nvec3 twilight_shifted(float t) {\n    const vec3 c0 = vec3(0.120488,0.047735,0.106111);\n    const vec3 c1 = vec3(5.175161,0.597944,7.333840);\n    const vec3 c2 = vec3(-47.426009,-0.862094,-49.143485);\n    const vec3 c3 = vec3(197.225325,47.538667,194.773468);\n    const vec3 c4 = vec3(-361.218441,-146.888121,-389.642741);\n    const vec3 c5 = vec3(298.941929,151.947507,359.860766);\n    const vec3 c6 = vec3(-92.697067,-52.312119,-123.143476);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes viridis colormap with polynimal 6\nvec3 viridis(float t) {\n    const vec3 c0 = vec3(0.274344,0.004462,0.331359);\n    const vec3 c1 = vec3(0.108915,1.397291,1.388110);\n    const vec3 c2 = vec3(-0.319631,0.243490,0.156419);\n    const vec3 c3 = vec3(-4.629188,-5.882803,-19.646115);\n    const vec3 c4 = vec3(6.181719,14.388598,57.442181);\n    const vec3 c5 = vec3(4.876952,-13.955112,-66.125783);\n    const vec3 c6 = vec3(-5.513165,4.709245,26.582180);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes YlGnGn_r colormap with polynimal 6\nvec3 YlGnGn_r(float t) {\n    const vec3 c0 = vec3(0.006153,0.269865,0.154795);\n    const vec3 c1 = vec3(-0.563452,1.218061,0.825586);\n    const vec3 c2 = vec3(7.296193,-2.560031,-5.402727);\n    const vec3 c3 = vec3(-19.990101,12.478140,25.051507);\n    const vec3 c4 = vec3(37.139815,-26.377692,-45.607642);\n    const vec3 c5 = vec3(-35.072408,24.166247,36.357837);\n    const vec3 c6 = vec3(12.187661,-8.203542,-10.475316);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes YlGnBu_r colormap with polynimal 6\nvec3 YlGnBu_r(float t) {\n    const vec3 c0 = vec3(0.016999,0.127718,0.329492);\n    const vec3 c1 = vec3(1.571728,0.025897,2.853610);\n    const vec3 c2 = vec3(-4.414197,5.924816,-11.635781);\n    const vec3 c3 = vec3(-12.438137,-8.086194,34.584365);\n    const vec3 c4 = vec3(67.131044,-2.929808,-58.635788);\n    const vec3 c5 = vec3(-82.372983,11.898509,47.184502);\n    const vec3 c6 = vec3(31.515446,-5.975157,-13.820580);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\n// makes YlGnBu_r colormap with polynimal 6\nvec3 YlGnRd_r(float t) {\n    const vec3 c0 = vec3(0.501291,0.002062,0.146180);\n    const vec3 c1 = vec3(1.930635,-0.014549,0.382222);\n    const vec3 c2 = vec3(0.252402,-2.449429,-6.385366);\n    const vec3 c3 = vec3(-10.884918,30.497903,29.134150);\n    const vec3 c4 = vec3(18.654329,-67.528678,-54.909286);\n    const vec3 c5 = vec3(-12.193478,59.311181,49.311295);\n    const vec3 c6 = vec3(2.736321,-18.828760,-16.894758);\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n    float cmapCount = 25.;\n    float x = floor(uv.x*cmapCount);    \n    fragColor = vec4(0, 0, 0, 1);\n    \n    if (x == 0.) {\n        fragColor.xyz = afmhot(uv.y);\n    } else if (x == 1.) {\n        fragColor.xyz = Blues_r(uv.y);\n    } else if (x == 2.) {\n        fragColor.xyz = bone(uv.y);\n    } else if (x == 3.) {\n        fragColor.xyz = BuPu_r(uv.y);\n    } else if (x == 4.) {\n        fragColor.xyz = cividis(uv.y);\n    } else if (x == 5.) {\n        fragColor.xyz = CMRmap(uv.y);\n    } else if (x == 6.) {\n        fragColor.xyz = coolwarm(uv.y);\n    } else if (x == 7.) {\n        fragColor.xyz = cubehelix(uv.y);\n    } else if (x == 8.) {\n        fragColor.xyz = gist_earth(uv.y);\n    } else if (x == 9.) {\n        fragColor.xyz = hsv(uv.y);\n    } else if (x == 10.) {\n        fragColor.xyz = inferno(uv.y);\n    } else if (x == 11.) {\n        fragColor.xyz = jet(uv.y);\n    } else if (x == 12.) {\n        fragColor.xyz = magma(uv.y);\n    } else if (x == 13.) {\n        fragColor.xyz = ocean(uv.y);\n    } else if (x == 14.) {\n        fragColor.xyz = PuBu_r(uv.y);\n    } else if (x == 15.) {\n        fragColor.xyz = rainbow(uv.y);\n    } else if (x == 16.) {\n        fragColor.xyz = PuRd_r(uv.y);\n    } else if (x == 17.) {\n        fragColor.xyz = RdYlBu_r(uv.y);\n    } else if (x == 18.) {\n        fragColor.xyz = Spectral_r(uv.y);\n    } else if (x == 19.) {\n        fragColor.xyz = twilight(uv.y);\n    } else if (x == 20.) {\n        fragColor.xyz = twilight_shifted(uv.y);\n    } else if (x == 21.) {\n        fragColor.xyz = viridis(uv.y);\n    } else if (x == 22.) {\n        fragColor.xyz = YlGnGn_r(uv.y);\n    } else if (x == 23.) {\n        fragColor.xyz = YlGnBu_r(uv.y);\n    } else if (x == 24.) {\n        fragColor.xyz = YlGnRd_r(uv.y);\n    }   \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}