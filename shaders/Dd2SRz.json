{
    "Shader": {
        "info": {
            "date": "1669895600",
            "description": "Black and white render\nDrag your mouse across the output!",
            "flags": 0,
            "hasliked": 0,
            "id": "Dd2SRz",
            "likes": 4,
            "name": "Mandelbrot set for arbitrary pow",
            "published": 3,
            "tags": [
                "fractal",
                "mandelbrot"
            ],
            "usePreview": 0,
            "username": "iluha168",
            "viewed": 217
        },
        "renderpass": [
            {
                "code": "#define MAX_ITER 100\n\nconst float halfPI = 1.57079632679;\n\nfloat atan2(vec2 xy){\n    if(xy.x>0.) return atan(xy.y/xy.x);\n    if(xy.y>0.) return halfPI-atan(xy.x/xy.y);\n    if(xy.y<0.) return -halfPI-atan(xy.x/xy.y);\n    if(xy.x<0.) return atan(xy.y/xy.x) + 2.*halfPI;\n}\n\nvec2 cis(float t){\n    return vec2(cos(t), sin(t));\n}\n\nvec2 toPolar(vec2 ab){\n    return vec2(length(ab), atan2(ab));\n}\nvec2 toCartesian(vec2 rt){\n    return cis(rt[1]) * rt[0];\n}\n\nvec2 complexPow(vec2 rt, vec2 ab){\n    //polar\n    return vec2(exp(ab[0]*log(rt[0])-rt[1]*ab[1]), ab[1]*log(rt[0])+rt[1]*ab[0]);\n}\n\nint mandelbrot(vec2 c){\n    vec2 z = c;\n    int i = 0;\n    vec2 m = iMouse.xy;\n    if(m == vec2(0)) m = (vec2(sin(iTime), cos(iTime/2.+1.9))+2.)*100.;\n    vec2 two = vec2(2,0) + (m/iResolution.xy*2.-1.);\n    while(abs(z.x*z.x + z.y*z.y) <= 4. && i < MAX_ITER){\n        z = toCartesian(complexPow(toPolar(z), two)) + c;\n        i++;\n    }\n    return i;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates\n    //x [-2; 1]\n    //y [-1; 1]\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x = uv.x*3. - 2.;\n    uv.y = uv.y*2. - 1.;\n    // Output to screen\n    float col = 1.-float(mandelbrot(uv))/float(MAX_ITER);\n    fragColor.rgb = vec3(col);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}