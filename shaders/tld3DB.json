{
    "Shader": {
        "info": {
            "date": "1577498921",
            "description": "A simple text scroller with a bit of extra bounce",
            "flags": 0,
            "hasliked": 0,
            "id": "tld3DB",
            "likes": 7,
            "name": "ZX Spectrum text scroller",
            "published": 3,
            "tags": [
                "noise",
                "retro",
                "scroll"
            ],
            "usePreview": 0,
            "username": "ndxbxrme",
            "viewed": 590
        },
        "renderpass": [
            {
                "code": "//zx spectrum font\nconst int[] chars = int[](\n    0,0,1052688,268439552,2368512,0,2391588,612246528,540200,1040858632,6448136,270943744,1058832,\n    709114368,528384,0,264200,134743040,2101264,269492224,5128,1040716800,2056,1040713728,0,526352,\n    0,1040187392,0,1579008,516,135274496,3950154,1382169600,1583112,134757888,3949058,1010859520,\n    3949068,37895168,530472,1216219136,8274044,37895168,3948668,1111636992,8258052,135270400,3949116,\n    1111636992,3949122,1040333824,16,4096,4096,1052704,1032,268960768,62,4063232,4104,67637248,3949060,\n    134219776,3951190,1581267968,3949122,2118271488,8143484,1111653376,3949120,1078082560,7881794,\n    1111783424,8274044,1077968384,8274044,1077952512,3949120,1312963584,4342398,1111638528,4065288,\n    134757888,131586,1111636992,4474992,1212432896,4210752,1077968384,4351578,1111638528,4350546,\n    1246118400,3949122,1111636992,8143426,2084585472,3949122,1380596736,8143426,2084848128,3948604,\n    37895168,16650256,269488128,4342338,1111636992,4342338,1109661696,4342338,1113203712,4334616,\n    405029376,8537128,269488128,8258568,270564864,919560,134745600,16416,268960768,7344144,269512704,\n    1062996,269488128,0,255,1843832,539000320,14340,1011104768,2105404,572668928,7200,538975232,263228,\n    1145322496,14404,2017475584,790552,269488128,15428,1144783928,4210808,1145324544,1048624,269498368,\n    262148,67380248,2107440,807937024,1052688,269487104,26708,1414812672,30788,1145324544,14404,\n    1145321472,30788,1148731456,15428,1144783878,7200,538976256,14400,939816960,1062928,269487104,\n    17476,1145321472,17476,673714176,17492,1414801408,17448,271074304,17476,1144783928,31752,270564352,\n    919600,134745600,526344,134744064,7344140,269512704,1320960,0,1010997665,2711175740\n);\n\n//i made a tool for this, https://codepen.io/ndxbxrme/pen/jOELyvd\nconst int[] message = int[](\n  0x3a,0x38,0x0,0x33,0x50,0x45,0x43,0x54,0x52,0x55,0x4d,0x0,0x46,0x4f,0x4e,0x54,0x0,0x54,0x45,0x58,0x54,0x0,0x53,0x43,0x52,0x4f,0x4c,0x4c,0x45,0x52,0x0,0x57,0x49,0x54,0x48,0x0,0x45,0x58,0x54,0x52,0x41,0x0,0x57,0x4f,0x42,0x42,0x4c,0x45,0xe,0xe,0xe,0x1,0x0,0x0,0x39,0x45,0x41,0x48,0x1a,0x9  \n);\nconst int noChars = 64;\nconst float[] offsets = float[](\n  0., 2., 4., 6.    \n);\nfloat pn(vec3 p) {\n\t//noise function by CPU https://www.shadertoy.com/view/4sfGRH\n    vec3 i = floor(p); \n\tvec4 a = dot(i, vec3(1., 57., 21.)) + vec4(0., 57., 21., 78.);\n    vec3 f = cos((p-i)*3.141592653589793)*(-.5) + .5;  \n\ta = mix(sin(cos(a)*a), sin(cos(1.+a)*(1.+a)), f.x);\n    a.xy = mix(a.xz, a.yw, f.y);   \n\treturn mix(a.x, a.y, f.z);\n}\nfloat printChar(vec2 uv, int charNo, int id) {\n    uv.y += .5;\n    uv.y -= pn(vec3(float(id) * .24 + iTime));\n    charNo *= 2;\n    ivec2 p = ivec2(floor((uv - vec2(id * 2, 0.)) * 8.));\n    if(p.x < 0 || p.x >= 8 || p.y < 0 || p.y >= 8) {\n    \treturn 0.;   \n    }\n    if(p.y >= 4) {\n    \tp.y -= 4;\n    }\n    else\n        charNo++;\n    vec2 q = vec2(p);\n    q -= .5;\n    return float((((chars[charNo] & (0xff << (p.y * 8))) >> p.y * 8) >> (8 - p.x)) & 1) * smoothstep(0.8,0.81,length(q));\n}\nfloat printMessage(vec2 uv) {\n    uv.x = mod(uv.x, float(noChars + 4));\n\tint id = int(floor(uv.x));\n    return printChar(uv + vec2(float(id), 0.), message[id], id);\n}\n\n// HSV to RGB, from nrx, https://www.shadertoy.com/view/XljXRG\nvec3 hsv2rgb (in vec3 hsv) {\n\thsv.yz = clamp (hsv.yz, 0.0, 1.0);\n\treturn hsv.z * (1.0 + hsv.y * clamp (abs (fract (hsv.x + vec3 (0.0, 2.0 / 3.0, 1.0 / 3.0)) * 6.0 - 3.0) - 2.0, -1.0, 0.0));\n}\n\nvec3 rainbow(vec2 uv) {\n    uv *= 8.;\n    uv += vec2(1.2, 0.0);\n    uv.y -= uv.x;\n\tvec3 col = hsv2rgb(vec3(floor(uv.y * 4.) * -0.15, 1., 1.));\t\n    return (uv.y > -9.75 || uv.y < -11.) ? vec3(0.0) : col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv -= .5;\n\tuv.x *= iResolution.x/iResolution.y;\n    vec3 col = rainbow(uv);\n    uv.x += iTime * .4;\n    uv *= 8.;\n\tcol += vec3(printMessage(uv));\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec3 rotateX(vec3 p, float t)\n{\n\tfloat s = sin(t);\n\tfloat c = cos(t);\n\tmat3 m = mat3(\n\t\t1.0, 0.0, 0.0, \n\t\t0.0, c, -s, \n\t\t0.0, s, c\n\t\t);\n\treturn p * m;\n}\n\nvec3 rotateY(vec3 p, float t)\n{\n\tfloat s = sin(t);\n\tfloat c = cos(t);\n\tmat3 m = mat3(\n\t\tc, 0.0, s, \n\t\t0.0, 1, 0.0, \n\t\t-s, 0.0, c\n\t\t);\n\treturn p * m;\n}\n\nvec3 rotateZ(vec3 p, float t)\n{\n\tfloat s = sin(t);\n\tfloat c = cos(t);\n\tmat3 m = mat3(\n\t\tc, -s, 0.0, \n\t\ts, c, 0.0, \n\t\t0.0, 0.0, 1.0\n\t\t);\n\treturn p * m;\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}