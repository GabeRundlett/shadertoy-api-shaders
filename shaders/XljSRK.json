{
    "Shader": {
        "info": {
            "date": "1444965215",
            "description": "Trick",
            "flags": 0,
            "hasliked": 0,
            "id": "XljSRK",
            "likes": 23,
            "name": "Trick!",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "iq",
            "viewed": 2616
        },
        "renderpass": [
            {
                "code": "float sphIntersect( in vec3 ro, in vec3 rd, in vec4 sph )\n{\n\tvec3 oc = ro - sph.xyz;\n\tfloat b = dot( oc, rd );\n\tfloat c = dot( oc, oc ) - sph.w*sph.w;\n\tfloat h = b*b - c;\n\tif( h<0.0 ) return -1.0;\n\treturn -b - sqrt( h );\n}\n\nfloat pattern( in vec2 p )\n{\n    vec2 uv = p + 0.1*texture( iChannel1, 0.05*p ).xy;\n    return texture( iChannel0, 16.0*uv ).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n\n    //-----------------\n\n    float fa = pattern( (fragCoord+0.0)/iChannelResolution[0].xy );\n    float fb = pattern( (fragCoord-0.5)/iChannelResolution[0].xy );\n    \n    vec3 col = vec3( 0.822 + 0.4*(fa-fb) );\n\n    //-----------------\n    \n    p = (2.0*fragCoord.xy-iResolution.xy) / iResolution.y;\n\tvec3 ro = vec3(0.0, 0.0, 4.0 );\n\tvec3 rd = normalize( vec3(p,-2.0) );\n\t\n    // sphere animation\n    vec4 sph = vec4( cos( iTime + vec3(2.0,1.0,1.0) + 0.0 )*vec3(1.5,1.2,1.0), 1.0 );\n    float t = sphIntersect( ro, rd, sph );\n    if( t>0.0 )\n    {\n        vec3 pos = ro + t*rd;\n        vec3 nor = normalize( pos - sph.xyz );\n        float fre = clamp(1.0+dot(nor,rd),0.0,1.0);\n\t\tcol = vec3(1.0);\n        col += 0.4*fre*fre;\n        col *= 0.6 + 0.4*nor.y;\n        col *= 0.5 + 0.8*texture( iChannel2, 4.0*vec2(atan(nor.x,nor.z)/6.2831,acos(nor.y)/3.1416) ).xyz;\n\t}\n    \n    \n    \n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 9,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}