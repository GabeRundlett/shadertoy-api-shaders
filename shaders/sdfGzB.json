{
    "Shader": {
        "info": {
            "date": "1616151591",
            "description": "Learning Shader Magic",
            "flags": 0,
            "hasliked": 0,
            "id": "sdfGzB",
            "likes": 3,
            "name": "6. Better Smily Face",
            "published": 3,
            "tags": [
                "learning",
                "smiley"
            ],
            "usePreview": 0,
            "username": "Sp3cim4n",
            "viewed": 270
        },
        "renderpass": [
            {
                "code": "\n#define S(a,b,t) smoothstep(a,b,t)\n#define Sat(x) clamp(x, 0., 1.)\n\nfloat Remap01(float a, float b, float t)\n{\n    return Sat((t - a)/(b - a));\n}\n\nfloat Remap(float a,float b,float c,float d,float t)\n{\n    return Sat((t - a)/(b - a)) * (d - c) + c;\n}\n\nvec2 Within(vec2 uv, vec4 rect)\n{\n    return (uv - rect.xy)/(rect.zw-rect.xy);\n}\n\nvec4 Eye(vec2 uv)\n{\n    uv -= .5;\n    \n    float d = length(uv);\n    \n    vec4 irisColor = vec4(.3,.5,1.,1.);\n    vec4 col = mix(vec4(1.), irisColor, S(.1,.7,d) * 0.5 );\n    \n    col.rgb *= 1. - S(.45, .5, d) * .5 * Sat(-uv.y - uv.x);\n    col.rgb = mix(col.rgb, vec3(.0), S(.3,.28,d)); // Iris Outline\n    \n    irisColor.rgb *= 1. + S(.3, .05, d);\n    col.rgb = mix(col.rgb, irisColor.rgb, S(.28,.25,d));\n    \n    col.rgb = mix(col.rgb, vec3(.0), S(.16,.14,d));\n    \n    float highlight = S(.1, .09, length(uv-vec2(-.15,.15)));\n    highlight += S(.07, .05, length(uv+vec2(-.08,.08)));\n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    \n    col.a = S(.5, .48,d);\n    \n    return col;\n}\n\nvec4 Mouth(vec2 uv)\n{\n    uv -= .5;\n    vec4 col = vec4(.5, .18, .05, 1.);\n\n    uv.y *= 1.5;\n    uv.y -= uv.x * uv.x * 2.;\n    \n    //circle\n    float d = length(uv);\n    col.a = S(.5, .48, d);\n    \n    float td = length(uv-vec2(.0, .6));\n    vec3 toothColor = vec3(1.) * S(.6, .35, d);\n    col.rgb = mix(col.rgb, toothColor, S(.4, .37, td));\n    \n    td = length(uv+vec2(.0, .5));\n    vec3 tongueColor = vec3(1., .5, .5);\n    col.rgb = mix(col.rgb, tongueColor, S(.5, .2, td));\n    \n    return col;\n}\n\nvec4 Head(vec2 uv)\n{\n    vec4 col = vec4(.9,.65,.1,1.);\n    \n    float d = length(uv);\n    col.a = S(.5,.49,d);\n    \n    float edgeShade = Remap01(.35, .5, d);\n    edgeShade *= edgeShade;\n    col.rgb *= 1.-edgeShade * .3;\n    \n    col.rgb = mix(col.rgb, vec3(.6,.3,.1), S(.47,.48,d));\n    \n    float highLight = S(.41, .405, d);\n    highLight *= Remap(.41, .0, .75, 0., uv.y);\n    col.rgb = mix(col.rgb, vec3(1.), highLight);\n    \n    d = length(uv - vec2(.25,-.2));\n    float cheek = S(.2,.01,d) * .4;\n    cheek *= S(.17,.16, d);\n    col.rgb = mix(col.rgb, vec3(1.,.1,.1), cheek);\n    \n    return col;\n}\n\nvec4 Smiley(vec2 uv)\n{\n    vec4 col = vec4(0.);\n    \n    uv.x = abs(uv.x);\n    vec4 head = Head(uv);\n    vec4 eye = Eye(Within(uv, vec4(.03, -.1, .37, .25)));\n    vec4 mouth = Mouth(Within(uv, vec4(-.3, -.4, .3, -.1)));\n    \n    \n    col = mix(col, head, head.a);\n    col = mix(col, eye, eye.a);\n    col = mix(col, mouth, mouth.a);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    \n    fragColor = Smiley(uv);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}