{
    "Shader": {
        "info": {
            "date": "1670168133",
            "description": "just playing around",
            "flags": 0,
            "hasliked": 0,
            "id": "DsjSDz",
            "likes": 3,
            "name": "random sdf functions",
            "published": 3,
            "tags": [
                "template"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 193
        },
        "renderpass": [
            {
                "code": "float f_n_dist11(vec2 o_1, vec2 o_2){\n\n    vec2 o_delta = abs(o_1-o_2);\n    float n_angle = atan(o_delta.y, o_delta.x);\n\n    return fract(n_angle);\n}\nfloat f_n_dist10(vec2 o_1, vec2 o_2){\n    vec2 o_delta = abs(o_1-o_2);\n    vec2 o_3 = o_delta * o_1 * o_2;\n    return fract(o_3.x+o_3.y);\n}\nfloat f_n_dist9(vec2 o_1, vec2 o_2){\n    vec2 o_delta = abs(o_1-o_2);\n    float n = sqrt(o_delta.x*o_delta.y + o_delta.x * o_delta.y);\n    return n;\n}\nfloat f_n_dist8(vec2 o_1, vec2 o_2){\n    vec2 o_delta = abs(o_1-o_2);\n    float n_length = sqrt(o_delta.x*o_delta.x + o_delta.y * o_delta.y);\n    return n_length;\n}\nfloat f_n_dist7(vec2 o_1, vec2 o_2){\n    vec2 o_delta = abs(o_1-o_2);\n    return abs(o_delta.x-o_delta.y);\n}\nfloat f_n_dist6(vec2 o_1, vec2 o_2){\n    vec2 o_delta = abs(o_1-o_2);\n    return (o_delta.x+o_delta.y);\n}\nfloat f_n_dist5(vec2 o_1, vec2 o_2){\n    vec2 o_delta = abs(o_1-o_2);\n    return pow(o_delta.x,o_delta.y);\n}\nfloat f_n_dist4(vec2 o_1, vec2 o_2){\n    vec2 o_delta = abs(o_1-o_2);\n    return o_delta.x / o_delta.y;\n}\nfloat f_n_dist3(vec2 o_1, vec2 o_2){\n    vec2 o_delta = (o_1-o_2);\n    return o_delta.x * o_delta.y;\n}\nfloat f_n_dist2(vec2 o_1, vec2 o_2){\n    vec2 o_delta = abs(o_1-o_2);\n    return max(o_delta.x, o_delta.y);\n}\nfloat f_n_dist1(vec2 o_1, vec2 o_2){\n    vec2 o_delta = abs(o_1-o_2);\n    return min(o_delta.x, o_delta.y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 o_trpino = (fragCoord.xy - iResolution.xy*0.5)/ iResolution.y;\n    vec2 o_trmono = (iMouse.xy - iResolution.xy*0.5)/ iResolution.y;\n\n\n    vec2 o_scale = vec2(0.009);\n\n    vec2 o_fragCoord_scaled = (fragCoord.xy*o_scale);\n    vec2 o_iResolution_scaled = (iResolution.xy * o_scale);\n    vec2 o_fragCoord_scaled_floor = floor(o_fragCoord_scaled);\n    vec2 o_iResolution_scaled_floor = floor(o_iResolution_scaled);\n    vec2 o_fragCoord_scaled_fract = fract(o_fragCoord_scaled);\n    vec2 o_iResolution_scaled_fract = fract(o_iResolution_scaled);\n       \n\n    \n    vec2 o_trpino_scldfloor = (o_fragCoord_scaled_floor.xy - o_iResolution_scaled_floor.xy*0.5)/ o_iResolution_scaled_floor.y;\n\n    \n\n    float n_index = o_fragCoord_scaled_floor.y * o_iResolution_scaled_floor.x + o_fragCoord_scaled_floor.x;\n    float n_index_nor = n_index / (o_iResolution_scaled_floor.x * o_iResolution_scaled_floor.y);\n    \n\n    float n_t = iTime * 0.;\n    vec2 o_tanim = fract(o_fragCoord_scaled_fract+n_t);\n    \n    float[] a_n_dist = float[](\n        (f_n_dist1(o_tanim, vec2(0.))),\n        (f_n_dist1(o_tanim, vec2(0.5))),\n        (f_n_dist1(o_tanim, vec2(1.0))), \n        (f_n_dist2(o_tanim, vec2(0.))),\n        (f_n_dist2(o_tanim, vec2(0.5))),\n        (f_n_dist2(o_tanim, vec2(1.0))),\n        (f_n_dist3(o_tanim, vec2(0.))),\n        (f_n_dist3(o_tanim, vec2(0.5))),\n        (f_n_dist3(o_tanim, vec2(1.0))),\n        (f_n_dist4(o_tanim, vec2(0.))),\n        (f_n_dist4(o_tanim, vec2(0.5))),\n        (f_n_dist4(o_tanim, vec2(1.0))),\n        (f_n_dist5(o_tanim, vec2(0.))),\n        (f_n_dist5(o_tanim, vec2(0.5))),\n        (f_n_dist5(o_tanim, vec2(1.0))),\n        (f_n_dist6(o_tanim, vec2(0.))),\n        (f_n_dist6(o_tanim, vec2(0.5))),\n        (f_n_dist6(o_tanim, vec2(1.0))),\n        (f_n_dist7(o_tanim, vec2(0.))),\n        (f_n_dist7(o_tanim, vec2(0.5))),\n        (f_n_dist7(o_tanim, vec2(1.0))),\n        (f_n_dist8(o_tanim, vec2(0.))),\n        (f_n_dist8(o_tanim, vec2(0.5))),\n        (f_n_dist8(o_tanim, vec2(1.0))),\n        (f_n_dist9(o_tanim, vec2(0.))),\n        (f_n_dist9(o_tanim, vec2(0.5))),\n        (f_n_dist9(o_tanim, vec2(1.0))),\n        (f_n_dist10(o_tanim, vec2(0.))),\n        (f_n_dist10(o_tanim, vec2(0.5))),\n        (f_n_dist10(o_tanim, vec2(1.0))),\n        (f_n_dist11(o_tanim, vec2(0.))),\n        (f_n_dist11(o_tanim, vec2(0.5))),\n        (f_n_dist11(o_tanim, vec2(1.0)))\n        \n    );\n    \n    float n_index_mod = mod(n_index, float(a_n_dist.length()));\n    float n_dist = a_n_dist[int(n_index_mod)];\n    float n_dist_tanim = fract(n_dist+iTime);\n    fragColor = vec4( n_dist_tanim);\n    \n    fragColor = sqrt(fragColor);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}