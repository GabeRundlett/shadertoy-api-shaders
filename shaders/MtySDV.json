{
    "Shader": {
        "info": {
            "date": "1485941353",
            "description": "Mouse control preempt time. (click to the the bottom-left corner to go back to auto-move)\nChange #EPS for less/more sharp.",
            "flags": 0,
            "hasliked": 0,
            "id": "MtySDV",
            "likes": 6,
            "name": "crowded 24-e",
            "published": 3,
            "tags": [
                "raytracing",
                "spheremarching"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 659
        },
        "renderpass": [
            {
                "code": "// using the base ray-marcher of Trisomie21: https://www.shadertoy.com/view/4tfGRB#\n// complementary of: https://www.shadertoy.com/view/MtKXDG\n\n#define EPS .001 // smaller = sharper & more contrasted\n\n#define r(v,t) { float a = (t)*T, c=cos(a),s=sin(a); v*=mat2(c,s,-s,c); }\n\nvoid mainImage( out vec4 f, vec2 w ) {\n    float T = iTime+20., \n        closest = 999.;\n    vec2 R = iResolution.xy,\n         m = iMouse.xy/R;\n    vec4 p = vec4((w-.5*R)/R.y,-.5,0), d,c;      // init ray \n    p.z -= .4;                                   // view angle width / zoom\n    if (length(m)>.01)  T = 30.*m.x; // mouse control preempts.\n    r(p.xz,.13); r(p.yz,.2); r(p.xy,.1);         // camera rotations\n  //d = p;                                       // ray dir = ray0-vec3(0) \n    d = normalize(p);\n    //if (length(m)>.01) p.z = -30.*(1.-m.y), T = 30.*m.x; // mouse control preempts.\n    //else p.z -= 60.;                             // camera distance.\n    p.z = T; \n    f -= f;\n   \n    for (float i=1.; i>0.; i-=.01)  {\n        \n        vec4 //u = floor(p/18.+3.5), \n            t = p, ta;\n            c = p/p*1.2;\n\t    float x=1e9,x1=1e9,x2=1e9;\n\n#define smod(t,n)       ( mod(t+(n)/2., n) - (n)/2.  )\n#define setbox(t,h,w,d)   abs(t) / vec4(h,w,d,1)\n#define setboxU(t)        abs(t)\n#define dbox(t,r)       ( max(t.x,max(t.y,t.z)) -(r) )\n#define dsphere(t,r)    ( length((t).xyz) -(r)       )\n#define dcyl(t,r)       ( length((t).xy ) -(r)       )\n#define union(a,b)        min(a,b)\n#define inter(a,b)        max(a,b)\n#define sub(a,b)          max(a,-(b))\n        \n       // r(t.xz,.13); r(t.yz,.2); r(t.xy,.1);         // object rotation\n        // the object\n        \n        ta =  cos(t); x1 =  abs( .2+ (ta.x+ta.y+ta.z)/3.)-.005;// + smoothstep(1.,0.,p.z-T));      \n        x1 = inter(x1,\n                   union( sub( dsphere(smod(t/3.14    ,.5),.25) ,\n                               dsphere(smod(t/3.14    ,.5),.20) ),\n                         dsphere(smod(t/3.14+.25,.5),.16) ));\n\n        ta =  sin(t); x2 =  abs( .2+ (ta.x+ta.y+ta.z)/3.)-.005;// + smoothstep(1.,0.,p.z-T));      \n        x2 = inter(x2,\n                   union( sub( dsphere(smod(t/3.14+.25,.5),.25) ,\n                               dsphere(smod(t/3.14+.25,.5),.20) ),\n                         dsphere(smod(t/3.14    ,.5),.16) ));\n \t\tx = union(x1,x2);\n\n        vec4 color = vec4(1,.7,.7,0); // .8 for pastel version\n        if (x==x1) c  = color.rgba;   // redish\n        if (x==x2) c  = color.bgra;   // blueish\n \n                     \n        if(x<EPS)                           // hit ! \n            {\n               c *= 1.-.5*clamp(cos(63.3*t)-.9,0.,1.)/.1; \n #define sort(v)  if (abs(v.z)>abs(v.y)) v.yz=v.zy;  if (v.y>v.x) v.xy=v.yx;  if (v.z>v.y) v.yz=v.zy;               \n             /*   if (x==x1) {\n                \tta =  abs(cos(t)); sort(ta);  \t\n                \t//c = .5+.5*cos(63.3*t.xyxy);\n                    c = texture(iChannel0,ta.xy);\n                } else {\n                \tta =  abs(sin(t)); sort(ta);\n                    c = texture(iChannel1,ta.xy);\n                }*/\n                x = i+.01*(1.-abs(x)/EPS);  // decrease banding\n                f = x*c; break;           // color texture + black fog \n            }\n        p -= d*x;                           // march ray\n     }\n\n     f = sqrt(f)*1.1;  // pastel version\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}