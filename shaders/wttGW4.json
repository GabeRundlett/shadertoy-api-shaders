{
    "Shader": {
        "info": {
            "date": "1576410425",
            "description": "Here is the references:\nhttps://us.puma.com/en/us/pd/puma-x-mixtape-mens-tee/598850.html?dwvar_598850_color=01\nhttps://us.puma.com/en/us/pd/rs-x-mixtape-sneakers/928583.html?dwvar_928583_color=01",
            "flags": 0,
            "hasliked": 0,
            "id": "wttGW4",
            "likes": 17,
            "name": "RS-X Mixtape",
            "published": 3,
            "tags": [
                "reproduction",
                "puma",
                "mixtape"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 531
        },
        "renderpass": [
            {
                "code": "#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing 3./min(iResolution.y,iResolution.x)\n\nfloat dBox2d(vec2 p, vec2 b) {\n    return max(abs(p.x) - b.x, abs(p.y) - b.y);\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,vec2(0))) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdLine( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat sdTriangle( in vec2 p0, in vec2 p1, in vec2 p2, in vec2 p )\n{\n    vec2 e0 = p1 - p0;\n    vec2 e1 = p2 - p1;\n    vec2 e2 = p0 - p2;\n\n    vec2 v0 = p - p0;\n    vec2 v1 = p - p1;\n    vec2 v2 = p - p2;\n\n    vec2 pq0 = v0 - e0*clamp( dot(v0,e0)/dot(e0,e0), 0.0, 1.0 );\n    vec2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\n    vec2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\n    \n    float s = sign( e0.x*e2.y - e0.y*e2.x );\n    vec2 d = min( min( vec2( dot( pq0, pq0 ), s*(v0.x*e0.y-v0.y*e0.x) ),\n                       vec2( dot( pq1, pq1 ), s*(v1.x*e1.y-v1.y*e1.x) )),\n                       vec2( dot( pq2, pq2 ), s*(v2.x*e2.y-v2.y*e2.x) ));\n\n    return -sqrt(d.x)*sign(d.y);\n}\n\nfloat sdEllipse( in vec2 p, in vec2 ab )\n{\n    p = abs(p); if( p.x > p.y ) {p=p.yx;ab=ab.yx;}\n    float l = ab.y*ab.y - ab.x*ab.x;\n    float m = ab.x*p.x/l;      float m2 = m*m; \n    float n = ab.y*p.y/l;      float n2 = n*n; \n    float c = (m2+n2-1.0)/3.0; float c3 = c*c*c;\n    float q = c3 + m2*n2*2.0;\n    float d = c3 + m2*n2;\n    float g = m + m*n2;\n    float co;\n    if( d<0.0 )\n    {\n        float h = acos(q/c3)/3.0;\n        float s = cos(h);\n        float t = sin(h)*sqrt(3.0);\n        float rx = sqrt( -c*(s + t + 2.0) + m2 );\n        float ry = sqrt( -c*(s - t + 2.0) + m2 );\n        co = (ry+sign(l)*rx+abs(g)/(rx*ry)- m)/2.0;\n    }\n    else\n    {\n        float h = 2.0*m*n*sqrt( d );\n        float s = sign(q+h)*pow(abs(q+h), 1.0/3.0);\n        float u = sign(q-h)*pow(abs(q-h), 1.0/3.0);\n        float rx = -s - u - c*4.0 + 2.0*m2;\n        float ry = (s - u)*sqrt(3.0);\n        float rm = sqrt( rx*rx + ry*ry );\n        co = (ry/sqrt(rm-rx)+2.0*g/rm-m)/2.0;\n    }\n    vec2 r = ab * vec2(co, sqrt(1.0-co*co));\n    return length(r-p) * sign(p.y-r.y);\n}\n\nfloat recycleLogo(vec2 p) {\n    vec2 pref = p;\n    vec2 scale = vec2(3.0);\n    \n    p *= scale;\n    mat2 rot1 = Rot(radians(30.0));\n    mat2 rot2 = Rot(radians(-30.0));\n    mat2 rot3 = Rot(radians(150.0));\n    float recycleRectA1 = dBox2d((p+vec2(0.1,0.0))*rot1,vec2(0.08,0.15));\n    float recycleRectA2 = dBox2d((p+vec2(-0.1,0.0))*rot2,vec2(0.08,0.15));\n    float arrowA = sdTriangle(vec2(0.15,0.0),vec2(-0.15,0.0),vec2(0.0,0.11),(p+vec2(-0.18,0.13))*rot3);\n    float recycleRectA = min(arrowA,max((p.y-0.1),min(recycleRectA1,recycleRectA2)));\n    \n    p += vec2(0.28,0.5);\n    p *= Rot(radians(-120.0));\n    float recycleRectB1 = dBox2d((p+vec2(0.1,0.0))*rot1,vec2(0.08,0.15));\n    float recycleRectB2 = dBox2d((p+vec2(-0.1,0.0))*rot2,vec2(0.08,0.15));\n    float arrowB = sdTriangle(vec2(0.15,0.0),vec2(-0.15,0.0),vec2(0.0,0.11),(p+vec2(-0.18,0.13))*rot3);\n    float recycleRectB = min(arrowB,max((p.y-0.1),min(recycleRectB1,recycleRectB2)));\n    p = pref;\n    \n    p *= scale;\n    p += vec2(-0.28,0.5);\n    p *= Rot(radians(120.0));\n    float recycleRectC1 = dBox2d((p+vec2(0.1,0.0))*rot1,vec2(0.08,0.15));\n    float recycleRectC2 = dBox2d((p+vec2(-0.1,0.0))*rot2,vec2(0.08,0.15));\n    float arrowC = sdTriangle(vec2(0.15,0.0),vec2(-0.15,0.0),vec2(0.0,0.11),(p+vec2(-0.18,0.13))*rot3);\n    float recycleRectC = min(arrowC,max((p.y-0.1),min(recycleRectC1,recycleRectC2)));\n    p = pref;\n    \n    return min(min(recycleRectA,recycleRectB),recycleRectC);\n}\n\nfloat plasticLogo(vec2 p) {\n    vec2 pref = p;\n    vec2 scale = vec2(2.4);\n    \n    p *= scale;\n    \n    mat2 rot1 = Rot(radians(180.0));\n    float rectA1 = dBox2d((p+vec2(0.25,0.0)),vec2(0.05,0.1));\n    float rectA2 = dBox2d((p+vec2(0.0,-0.05)),vec2(0.2,0.05));\n    float rectA3 = dBox2d((p+vec2(-0.25,-0.03)),vec2(0.05,0.07));\n    float arrowA = sdTriangle(vec2(0.09,0.0),vec2(-0.09,0.0),vec2(0.0,0.1),(p+vec2(-0.25,0.03))*rot1);\n    float prectA = min(arrowA,min(min(rectA1,rectA2),rectA3));\n    \n    float rectB1 = dBox2d((p+vec2(0.25,0.4)),vec2(0.05,0.15));\n    float rectB2 = dBox2d((p+vec2(0.0,0.5)),vec2(0.2,0.05));\n    float rectB3 = dBox2d((p+vec2(-0.25,0.48)),vec2(0.05,0.07));\n    float arrowB = sdTriangle(vec2(0.09,0.0),vec2(-0.09,0.0),vec2(0.0,0.1),(p+vec2(0.25,0.25)));\n    float prectB = min(arrowB,min(min(rectB1,rectB2),rectB3));\n    \n    mat2 rot2 = Rot(radians(30.0));\n    float r1 = length(p+vec2(-0.05,0.2))-0.03;\n    float r2 = length(p+vec2(-0.05,0.2))-0.07;\n    float r = max(-r1,r2);\n    float b =  dBox2d((p+vec2(0.0,0.25)),vec2(0.08,0.025));\n    float b1 =  dBox2d((p+vec2(-0.04,0.31))*rot2,vec2(0.025,0.08));\n    float charA = min(min(r,b),b1);\n    \n    float b2 =  dBox2d((p+vec2(-0.25,0.18)),vec2(0.06,0.02));\n    float b3 =  dBox2d((p+vec2(-0.29,0.31))*rot2,vec2(0.025,0.08));\n    float b4 =  dBox2d((p+vec2(-0.26,0.25)),vec2(0.09,0.025));\n    float charB = max(p.x-0.34,min(min(b2,b3),b4));\n    \n    return min(min(min(prectA,prectB),charA),charB);\n}\n\nfloat paperLogo(vec2 p) {\n    vec2 pref = p;\n    vec2 scale = vec2(1.6);\n    \n    p *= scale;\n    \n    p *= Rot(radians(45.0)+iTime*0.5);\n    mat2 rot1 = Rot(radians(90.0));\n    float e = sdEllipse(p,vec2(0.27,0.32));\n    float e2 = sdEllipse(p,vec2(0.22,0.27));\n    float b =  dBox2d((p),vec2(0.06,0.5));\n    float arrowA = sdTriangle(vec2(0.09,0.0),vec2(-0.09,0.0),vec2(0.0,0.1),(p+vec2(0.08,-0.28))*rot1);\n    float arrowB = sdTriangle(vec2(0.09,0.0),vec2(-0.09,0.0),vec2(0.0,0.1),(p+vec2(-0.08,0.28))*rot1*-1.0);\n    float res = min(min(max(-b,max(-e2,e)),arrowA),arrowB);\n    p = pref;\n    \n    p *= scale;\n    vec2 pos = vec2(0.02,0.0);\n    float b1 = dBox2d((p+vec2(0.07,-0.095)+pos)*Rot(radians(35.0)),vec2(0.015,0.05));\n    float b2 = dBox2d((p+vec2(0.03,-0.04)+pos)*Rot(radians(35.0)),vec2(0.015,0.05));\n    float b3 = dBox2d((p+vec2(0.07,-0.02)+pos)*Rot(radians(-30.0)),vec2(0.015,0.05));\n    float b4 = dBox2d((p+vec2(0.055,0.02)+pos),vec2(0.06,0.015));\n    float b5 = dBox2d((p+vec2(0.055,0.07)+pos),vec2(0.015,0.06));\n    float b6 = dBox2d((p+vec2(0.11,0.09)+pos)*Rot(radians(20.0)),vec2(0.012,0.03));\n    float b7 = dBox2d((p+vec2(0.00,0.09)+pos)*Rot(radians(-20.0)),vec2(0.012,0.03));\n    res = min(res,min(b1,min(b2,min(b3,min(b4,min(b5,min(b6,b7)))))));\n    \n    float b8 = dBox2d((p+vec2(-0.10,-0.12)+pos)*Rot(radians(70.0)),vec2(0.012,0.06));\n    float b9 = dBox2d((p+vec2(-0.05,0.01)+pos),vec2(0.012,0.11));\n    float b10 = dBox2d((p+vec2(-0.10,0.0)+pos),vec2(0.06,0.012));\n    float b11 = dBox2d((p+vec2(-0.13,-0.01)+pos),vec2(0.012,0.13));\n    float b12 = dBox2d((p+vec2(-0.06,0.11)+pos)*Rot(radians(-5.0)),vec2(0.038,0.012));\n    float b13 = dBox2d((p+vec2(-0.15,0.10)+pos)*Rot(radians(-45.0)),vec2(0.03,0.013));\n    \n    res = min(res,min(b8,min(b9,min(b10,min(b11,min(b12,b13))))));\n    \n    return res;\n}\n\nfloat pvcLogo(vec2 p) {\n    vec2 pref = p;\n    vec2 scale = vec2(2.2);\n    \n    p *= scale;\n    p *= Rot(iTime*-0.6);\n    float c1 = length(p)-0.3;\n    float c2 = length(p)-0.27;\n    float b = dBox2d((p)*Rot(radians(45.0)),vec2(0.02,0.3));\n    float res = min(max(-c2,c1),b);\n    return res;\n}\n\nfloat outLine(vec2 p) {\n    vec2 pref = p;\n    float b =  sdBox(p,vec2(1.4,0.8));\n    float b2 =  sdBox(p,vec2(1.5,0.9));\n    float res = max(-b2,b);\n    return res-0.11;\n}\n\nfloat outLine2(vec2 p){\n    vec2 pref = p;\n    float l0 = sdLine(p,vec2(-0.65,-0.3),vec2(-0.5,0.15));\n    float l1 = sdLine(p,vec2(0.65,-0.3),vec2(0.5,0.15));\n    float l2 = sdLine(p,vec2(0.5,0.15),vec2(-0.5,0.15));\n    float res = min(min(l0,l1),l2);\n    return res-0.03;\n}\n\nfloat mixTape(vec2 p) {\n    vec2 pref = p;\n    \n    float mrgX = 0.3;\n    \n    // M\n    vec2 apos = vec2(0.0,sin(iTime*2.0)*0.02);\n    float m0 =  sdLine(p+apos,vec2(-1.15+mrgX,0.1),vec2(-1.1+mrgX,0.35));\n    float m1 =  sdLine(p+apos,vec2(-1.05+mrgX,0.15),vec2(-1.1+mrgX,0.35));\n    float m2 =  sdLine(p+apos,vec2(-1.0+mrgX,0.35),vec2(-1.05+mrgX,0.15));\n    float m3 =  sdLine(p+apos,vec2(-0.93+mrgX,-0.05),vec2(-1.0+mrgX,0.35));\n    float m = min(min(min(m0,m1),m2),m3);\n    \n    // I\n    apos = vec2(0.0,sin(iTime*3.0)*0.02);\n    float i = sdLine(p+apos,vec2(-0.85+mrgX,0.15),vec2(-0.86+mrgX,0.3));\n    \n    // X\n    apos = vec2(0.0,sin(iTime*3.5)*0.02);\n    float x0 = sdLine(p+apos,vec2(-0.73+mrgX,0.15),vec2(-0.6+mrgX,0.35));\n    float x1 = sdLine(p+apos,vec2(-0.73+mrgX,0.3),vec2(-0.6+mrgX,0.15));\n    float x = min(x0,x1);\n    \n    // T\n    apos = vec2(0.0,sin(iTime*3.2)*0.02);\n    float t0 = sdLine(p+apos,vec2(-0.53+mrgX,0.25),vec2(-0.32+mrgX,0.3));\n    float t1 = sdLine(p+apos,vec2(-0.45+mrgX,0.35),vec2(-0.43+mrgX,0.1));\n    float t = min(t0,t1);\n    \n    // A\n    apos = vec2(0.0,sin(iTime*2.9)*0.02);\n    float a0 = sdLine(p+apos,vec2(-0.3+mrgX,0.05),vec2(-0.2+mrgX,0.37));\n    float a1 = sdLine(p+apos,vec2(-0.1+mrgX,0.05),vec2(-0.2+mrgX,0.37));\n    float a2 = sdLine(p+apos,vec2(-0.15+mrgX,0.17),vec2(-0.25+mrgX,0.15));\n    float a = min(min(a0,a1),a2);\n    \n    // P\n    apos = vec2(0.0,sin(iTime*3.1)*0.02);\n    mat2 rot = Rot(radians(-10.0));\n    float pp0 = sdLine(p+apos,vec2(0.02+mrgX,0.1),vec2(0.0+mrgX,0.37));\n    float pp1 = sdEllipse((p+apos+vec2(-0.05-mrgX,-0.27))*rot,vec2(0.15,0.06));\n    float pp2 = sdEllipse((p+apos+vec2(-0.05-mrgX,-0.27))*rot,vec2(0.14,0.05));\n    float pp3 = sdEllipse((p+apos+vec2(0.15-mrgX,-0.27))*Rot(radians(-40.0)),vec2(0.13,0.3));\n    float pp = min(pp0,max(-pp3,max(-pp2,pp1)));\n    \n    // E\n    apos = vec2(0.0,sin(iTime*3.5)*0.02);\n    float e0 = sdLine(p+apos,vec2(0.3+mrgX,0.33),vec2(0.45+mrgX,0.37));\n    float e1 = sdLine(p+apos,vec2(0.27+mrgX,0.22),vec2(0.45+mrgX,0.27));\n    float e2 = sdLine(p+apos,vec2(0.2+mrgX,0.1),vec2(0.45+mrgX,0.17));\n    float e = min(min(e0,e1),e2);\n    \n    vec2 scale = vec2(1.0-(sin(iTime*2.3)*cos(iTime*2.3))*0.05);\n    p*= scale;\n    \n    // //1\n    float bsl0 = sdLine(p,vec2(-1.25+mrgX,0.3),vec2(-1.27+mrgX,0.4));\n    float bsl1 = sdLine(p,vec2(-1.19+mrgX,0.33),vec2(-1.21+mrgX,0.4));\n    float bsl = min(bsl0,bsl1)+0.009;\n    \n    // //2\n    float bsr0 = sdLine(p,vec2(1.25+mrgX-0.68,0.27),vec2(1.25+mrgX-0.6,0.35));\n    float bsr1 = sdLine(p,vec2(1.19+mrgX-0.65,0.33),vec2(1.21+mrgX-0.6,0.4));\n    float bsr = min(bsr0,bsr1)+0.009;\n    \n    float res = min(min(min(min(min(min(min(min(m,i),x),t),a),pp),e),bsl),bsr);\n    \n    return res-0.025;\n}\n\nfloat yellowCircle(vec2 p) {\n    vec2 pref = p;\n    \n    mat2 r = Rot(radians(45.0)+iTime*0.8);\n    vec2 left = vec2(0.78,0.0);\n    float cl0 = length((p+left)*r)-0.2;\n    float cl1 = length((p+left)*r)-0.15;\n    float cl2 = sdLine((p+left)*r,vec2(-0.18,0.17),vec2(-0.05,0.17))-0.026;\n    float cl = min(max(-cl1,cl0),cl2);\n    \n    vec2 right = vec2(-0.78,0.0);\n    float cr0 = length((p+right)*r)-0.2;\n    float cr1 = length((p+right)*r)-0.15;\n    float cr2 = sdLine((p+right)*r,vec2(-0.15,0.17),vec2(-0.05,0.17))-0.026;\n    float cr = min(max(-cr1,cr0),cr2);\n    \n    float c = min(cl,cr);\n    return c;\n}\n\nfloat rsx(vec2 p) {\n    vec2 pref = p;\n    \n    p.y = abs(p.y);\n    p.y -= 0.17+sin(iTime*5.0)*0.01;\n    \n    float outl0 = sdLine(p,vec2(-0.4,0.0),vec2(0.4,0.0))-0.026;\n    p = pref;\n    \n    p.x = abs(p.x);\n    p.x -= 0.35+sin(iTime*5.0)*0.01;\n    float outl1 = sdLine(p,vec2(0.0,-0.22),vec2(0.0,0.22))-0.026;\n    p = pref;\n    float outl = min(outl0,outl1);\n    \n    // R\n    float r0 =  sdLine(p,vec2(-0.25,-0.08),vec2(-0.25,0.08))-0.02;\n    float r1 =  sdEllipse(p+vec2(0.24,-0.04),vec2(0.1,0.06));\n    float r2 =  sdEllipse(p+vec2(0.24,-0.04),vec2(0.07,0.03));\n    float r3 =  sdLine(p,vec2(-0.25,0.0),vec2(-0.15,-0.08))-0.02;\n    float r = min(min(r0,max(-p.x-0.24,max(-r2,r1))),r3);\n    \n    // S\n    mat2 rot = Rot(radians(30.0));\n    p*=rot;\n    p.y+=0.025;\n    float s0 = sdEllipse(p+vec2(0.04,-0.038),vec2(0.09,0.055));\n    float s1 = sdEllipse(p+vec2(0.04,-0.038),vec2(0.05,0.025));\n    float s2 = sdEllipse(p+vec2(0.05,0.042),vec2(0.09,0.055));\n    float s3 = sdEllipse(p+vec2(0.05,0.042),vec2(0.05,0.025));\n    float s = min(max(p.x+0.05,max(-s1,s0)),max(-p.x-0.05,max(-s3,s2)));\n    p = pref;\n    \n    // -\n    float bar = sdLine(p,vec2(0.06,0.00),vec2(0.09,0.00))-0.02;\n    \n    // X\n    float x0 = sdLine(p,vec2(0.15,-0.06),vec2(0.25,0.06))-0.02;\n    float x1 = sdLine(p,vec2(0.25,-0.08),vec2(0.15,0.08))-0.02;\n    float x = min(x0,x1);\n    \n    vec2 scale = vec2(1.0-(sin(iTime*2.0)*cos(iTime*2.0))*0.03);\n    p*= scale;\n    \n    // //1\n    float bsl0 = sdLine(p,vec2(-1.02,0.2),vec2(-1.07,0.1))-0.015;\n    float bsl1 = sdLine(p,vec2(-1.09,0.2),vec2(-1.12,0.15))-0.015;\n    float bsl = min(bsl0,bsl1);\n    \n    // //2\n    float bsr0 = sdLine(p,vec2(0.92,0.21),vec2(1.0,0.16))-0.015;\n    float bsr1 = sdLine(p,vec2(0.96,0.26),vec2(1.01,0.23))-0.015;\n    float bsr = min(bsr0,bsr1);\n    \n    // //3 \n    float bsr2 = sdLine(p,vec2(0.9,-0.3),vec2(1.02,-0.24))-0.015;\n    \n    float res = min(min(min(min(min(min(min(outl,r),s),bar),x),bsl),bsr),bsr2);\n    \n    return res;\n}\n\nfloat sideA(vec2 p) {\n    vec2 pref = p;\n    \n    vec2 scale = vec2(0.5);\n    \n    p*=scale;\n    \n    float b0 =  dBox2d(p+vec2(0.0,-0.05),vec2(0.05,0.02));\n    float b1 =  dBox2d(p+vec2(0.0,0.05),vec2(0.08,0.02));\n    \n    p.x = abs(p.x);\n    p.x -= 0.12;\n    mat2 rot = Rot(radians(-20.0));\n    float b2 =  dBox2d((p+vec2(0.06,0.02))*rot,vec2(0.02,0.12));\n    p = pref;\n    \n    p*=scale;\n    float res = max(p.y-0.07,max(-p.y-0.12,min(min(b0,b1),b2)));\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*fragCoord.xy-iResolution.xy)/min(iResolution.y,iResolution.x);\n    vec2 pref = p;\n    \n    // bg color\n    vec3 col = vec3(0.0);\n    \n    float doutLine = outLine(p);\n    float doutLine2 = outLine2(p+vec2(0.0,0.55));\n    float dmixTape = mixTape(p+vec2(-0.03,-0.3));\n    float dyellowCircle = yellowCircle(p+vec2(0.0,0.05));\n    float drsx = rsx(p);\n    float dsideA = sideA(p+vec2(1.01,0.5));\n    float dsideAMask = max(p.y+0.3+abs(sin(iTime*0.7)*0.5),sideA(p+vec2(1.01,0.5)));\n    float drLogo = recycleLogo(p+vec2(-0.35,0.51));\n    float dpLogo = plasticLogo(p+vec2(0.0,0.52));\n    float dpaLogo = paperLogo(p+vec2(-1.0,0.55));\n    float dpvcLogo = pvcLogo(p+vec2(0.33,0.61));\n    \n    // outline\n    col = mix( col, vec3(0.8,0.2,0.2), 1.0-smoothstep(0.0,0.007,doutLine) );\n    col = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.007,doutLine2) );\n    \n    // mixtape\n    col = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.007,dmixTape) );\n    \n    // yellow circle\n    col = mix( col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0,0.007,dyellowCircle) );\n    \n    // rs-x\n    col = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.007,drsx) );\n    \n    // side A\n    col = mix( col, vec3(0.0,0.0,1.0), 1.0-smoothstep(0.0,0.007,dsideA) );\n    col = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.007,dsideAMask) );\n    \n    // informations\n    col = mix( col, vec3(0.0,0.5,0.3), 1.0-smoothstep(0.0,antialiasing,drLogo) );\n    col = mix( col, vec3(0.0,0.5,0.3), 1.0-smoothstep(0.0,antialiasing,dpLogo) );\n    col = mix( col, vec3(0.0,0.5,0.3), 1.0-smoothstep(0.0,antialiasing,dpaLogo) );\n    col = mix( col, vec3(0.0,0.5,0.3), 1.0-smoothstep(0.0,antialiasing,dpvcLogo) );\n        \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}