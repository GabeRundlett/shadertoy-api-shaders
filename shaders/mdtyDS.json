{
    "Shader": {
        "info": {
            "date": "1695424174",
            "description": "warp warp warp and then warp",
            "flags": 0,
            "hasliked": 0,
            "id": "mdtyDS",
            "likes": 4,
            "name": "warped",
            "published": 3,
            "tags": [
                "fbm",
                "warp"
            ],
            "usePreview": 0,
            "username": "makscee",
            "viewed": 257
        },
        "renderpass": [
            {
                "code": "#define pi 3.141592653589793\nvec2 rotate(vec2 vec, float rot)\n{\n    float s = sin(rot), c = cos(rot);\n    return vec2(vec.x*c-vec.y*s, vec.x*s+vec.y*c);\n}\nfloat hash(vec2 p, float t)\n{\n    vec3 p3 = vec3(p, t);\n    p3  = fract(p3*0.1031);\n    p3 += dot(p3, p3.zyx+31.32);\n    return fract((p3.x+p3.y)*p3.z);\n}\nfloat noise(vec2 p, float t)\n{\n    vec4 b = vec4(floor(p), ceil(p));\n    vec2 f = smoothstep(0.0, 1.0, fract(p));\n    return mix(mix(hash(b.xy, t), hash(b.zy, t), f.x), mix(hash(b.xw, t), hash(b.zw, t), f.x), f.y);\n}\n#define num_octaves 1\nfloat fbm(vec2 v)\n{\n    float value = 0.0;\n    float scale = 1.0;\n    float atten = 0.5;\n    float t = 0.0;\n    for(int i = 0; i < num_octaves; i++)\n    {\n        t += atten;\n        value += noise(v*scale, float(i))*atten;\n        scale *= 2.0;\n        atten *= 0.5;\n        v = rotate(v, 0.125*pi);\n    }\n    return value/t;\n}\nvec2 fbm_vec(vec2 v, vec2 offset)\n{\n    return vec2(fbm(v), fbm(v + offset));\n}\nvec2 warp(vec2 v, float str, vec2 offset)\n{\n    return v + fbm_vec(v, offset) * str;\n}\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xx - vec2(.4)) * (8.0 + sin(iTime * 0.1) * 2.);\n    uv = warp(uv, 2., vec2(iTime * 0.5));\n    uv = warp(uv, 1., vec2(sin(iTime * .5) * .5));\n    uv = warp(uv, length(uv + vec2(.5)) * .1 + sin(iTime * .022) * 2., vec2(iTime * .001, 0.));\n    uv = warp(uv, length(uv + vec2(.5)) * .2, vec2(sin(iTime * .5) * .5));\n    uv = warp(uv, .5 + sin(iTime * 0.5 + uv.x * 20.) * 2., vec2(iTime * .001, 0.));\n    uv = warp(uv, 2., vec2(sin(iTime * 0.2) * 1.5));\n    uv = warp(uv, 1. + sin(iTime * .45) * 2., vec2(iTime * .001, 0.));\n    float v = length(uv);\n    vec3 col = hsv2rgb(vec3(v * sin(iTime * .1) * .1 + iTime * .0153 , fbm(warp(uv, 1., vec2(0)) + vec2(2.)) * 1.1, length(warp(uv, 1., vec2(0))) * .1));\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}