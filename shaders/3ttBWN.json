{
    "Shader": {
        "info": {
            "date": "1612768410",
            "description": "A shader that Fabrice could make 95% shorter.",
            "flags": 0,
            "hasliked": 0,
            "id": "3ttBWN",
            "likes": 10,
            "name": "Trapped in the ball pit",
            "published": 3,
            "tags": [
                "3d",
                "short"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 353
        },
        "renderpass": [
            {
                "code": "#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    vec3 l = normalize(vec3((u/iResolution.xy-.5)*vec2(1.8, 1.), 1.9)),\n    o = vec3(-iTime, iTime, -8.),\n    p;\n    \n    l.yz *= rot(-2.2/2.);\n    l.xy *= rot(3.14/4.);\n    \n    float d, t = 0., s = 0.;\n    for(int i = 0; i < 40; i++){\n        p = o+l*t;\n    \td = length(vec3(mod(p.xy, 1.8)-1.8*.5, p.z))-1.; \n        \n        if(d < .002 || t > 40.) break;\n        \n        t += d * .95;\n        s++;\n    }\n    \n    vec2 k = floor(p.xy/1.8);\n    vec3 c = .33+.34*cos(vec3(.6,.1,1.)*(k.x*52.+k.y*72.)*12.);\n\n    f = vec4(1.-exp(-c*1.5*smoothstep(4., 1., s/10.)), 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}