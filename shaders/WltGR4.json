{
    "Shader": {
        "info": {
            "date": "1576930741",
            "description": "Participation to codevember a bit late",
            "flags": 0,
            "hasliked": 0,
            "id": "WltGR4",
            "likes": 11,
            "name": "Codevember28 - Repeat",
            "published": 3,
            "tags": [
                "abstract",
                "repeat",
                "codevember"
            ],
            "usePreview": 0,
            "username": "z0rg",
            "viewed": 215
        },
        "renderpass": [
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\nconst float PI = 3.14159265;\n\n\nfloat lenny(vec2 v)\n{\n  return abs(v.x)+abs(v.y);\n}\nfloat sat(float a)\n{\n  return clamp(a,0.,1.);\n}\n\nfloat _sub(float a, float b)\n{\n  return max(a,-b);\n}\n\nfloat _union(float a, float b)\n{\n  return max(a,b);\n}\n\nfloat sdf_cir(vec2 uv, float r)\n{\n  return length(uv)-r;\n}\n\nfloat sdf_rect(vec2 uv, vec2 sz)\n{\n  vec2 r = abs(uv)-sz;\n  return max(r.x,r.y);\n}\n\nbool inTriangle(vec2 A, vec2 B, vec2 C, vec2 P, float thick)\n{\n  vec2 v0 = C - A ;\n  vec2 v1 = B - A ;\n  vec2 v2 = P - A; // Compute dot products\n  float dot00 = dot(v0, v0) ;\n  float dot01 = dot(v0, v1) ;\n  float  dot02 = dot(v0, v2) ;\n  float dot11 = dot(v1, v1) ;\n  float dot12 = dot(v1, v2) ;\n  // Compute barycentric coordinates\n  float invDenom = 1. / (dot00 * dot11 - dot01 * dot01) ;\n  float u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n   float v = (dot00 * dot12 - dot01 * dot02) * invDenom ;\n   // Check if point is in triangle return\n   ;\n   return (u >= 0.) && (v >= 0.) && (u + v < 1.) &&\n   (u<thick||v<thick||(u+v)>1.-thick);\n}\n\nfloat curve(float a)\n{\n  return max(mod(iTime,10.)/10.,0.5)*(sin(iTime+a*102.4)*0.5+0.5)*((sin(a*5.-iTime*15.)*0.3+0.3)+(sin((iTime+a)*13.5)*0.5+0.5));\n}\n\nvec3 mix3(vec3 a, vec3 b, vec3 c, float f)\n{\n\n  vec3 gradA = mix(a, b, sat(f*2.));\n  vec3 gradB = mix(gradA, c, sat(f-0.5)*2.);\n  return gradB;\n}\n\nvec3 rdr(vec2 uv)\n{\n  vec3 col;\n\ncol = mix(vec3(0.6,0.3,.7),vec3(0.),abs(uv.y)*0.5);\n  if (uv.y <0.)\n  col = mix(vec3(0.),0.5*vec3(0.81,0.1,.937),pow(-uv.y,.5)*.5);\n\n  vec2 posT= vec2(0.,-0.6);\n  float rT = 1.2;//1.7+float(mod(iTime,0.25*sin(iTime)));\n  float aT = (PI*2.)/3.;\n  float offA = 0.;//iTime;\n\n  vec2 A = vec2(rT*sin(aT*1.+offA),rT *cos(aT*1.+offA))-posT;//+vec2(0.,0.1*sin(iTime));\nvec2 B = vec2(rT*sin(aT*2.+offA),rT *cos(aT*2.+offA))-posT;\nvec2 C = vec2(rT*sin(aT*3.+offA),rT *cos(aT*3.+offA))-posT;\n\nvec2 posT2= vec2(0.,0.6);\nfloat angleB = 3.14159265;\nvec2 A2 = vec2(rT*sin(aT*1.+angleB),rT *cos(aT*1.+angleB))-posT2;//+vec2(0.,0.1*sin(iTime));\nvec2 B2 = vec2(rT*sin(aT*2.+angleB),rT *cos(aT*2.+angleB))-posT2;\nvec2 C2 = vec2(rT*sin(aT*3.+angleB),rT *cos(aT*3.+angleB))-posT2;\n\nif(inTriangle(A,B,C,uv,1.))\n  col += mix3(vec3(0.),vec3(0.6,0.,1.),vec3(1.),abs(uv.y));\nif(inTriangle(A2,B2,C2,uv,1.))\n  col += mix3(vec3(0.),vec3(0.7,0.,1.),vec3(1.),abs(uv.y))*float(0.02*sin(2.*uv.x+iTime*5.)+mod(abs(uv.y+iTime*0.05),0.07)<0.01);\n  return col;\n}\n\n\nvec3 rdrChroma(vec2 uv)\n{\n  float r = lenny(uv)*(sin(iTime*0.4)*0.3+0.3);\n//  uv = uv+vec2(sin(iTime),cos(iTime))*0.2;\n  vec3 col;\n\n  col += rdr(uv+uv*r).r*vec3(0.63,0.72,0.75);\n  col += rdr(uv).r;\n  col +=rdr(uv-uv*r).r;\n  return col/3.;\n}\n\nvec3 rdrRetro(vec2 uv)\n{\n  vec2 posT= vec2(0.,-.8);\n  float rT = 3.2;//1.7+float(mod(iTime,0.25*sin(iTime)));\n  float aT = (PI*2.)/3.;\n  float offA = PI;//sin(iTime)*0.2+1.;//iTime;\n\nvec2 A = 0.5*vec2(rT*sin(aT*1.+offA)*sin(iTime),rT *cos(aT*1.+offA))-posT;//+vec2(0.,0.1*sin(iTime));\nvec2 B = 0.5*vec2(rT*sin(aT*2.+offA)*sin(iTime),rT *cos(aT*2.+offA))-posT;\nvec2 C = vec2(rT*sin(aT*3.+offA),rT *cos(aT*3.+offA))-posT;\n\nfloat inTriA = float(inTriangle(A,B,C,uv,0.2));\n  return vec3(0.48,0.43,0.57).zyx*inTriA+0.5;\n}\n\nvec3 rdrChroma2(vec2 uv)\n{\n  float r = 0.05*clamp(length(uv),0.,0.4);\n  vec3 col;\n  col.r = rdrChroma(uv+uv*r).r;\n  col.g = rdrChroma(uv).r;\n  col.b = rdrChroma(uv-uv*r).r;\n\n   col += sat(1.-lenny(uv*0.5))*vec3(.1,.4,.6);\n\n   col*= rdrRetro(uv);\n  return col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = fragCoord.xy / iResolution.xx;\n  uv = uv-(iResolution.xy/iResolution.xx)*0.5;\nuv*=10.;\n vec3 col;// = vec3(length(uv));\n col += rdrChroma2(uv);\n\n  fragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}