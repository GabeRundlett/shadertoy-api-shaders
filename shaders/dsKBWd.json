{
    "Shader": {
        "info": {
            "date": "1698786420",
            "description": "This took wayy to long to get correct, but this is an anti-derivative / integral solve for an anti aliased circle given w as some fwidth / ddx ddy, and a radius.",
            "flags": 0,
            "hasliked": 0,
            "id": "dsKBWd",
            "likes": 1,
            "name": "Shrimple Anti-aliased circle",
            "published": 3,
            "tags": [
                "antialiasing",
                "pain",
                "suffering"
            ],
            "usePreview": 0,
            "username": "OwenTheProgrammer",
            "viewed": 277
        },
        "renderpass": [
            {
                "code": "#define SHOW_INTEGRAL 0\n\n\n//The derivative of the domain in the range A-B IS the\n//colour of the pixel, so when you form a pixel colour\n//over a larger area, you're basically solving the integrated\n//area gradient over that pixel space dxdy.\nfloat F(float radius, float dist) {\n    return radius - abs(radius - dist);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    //Centered uv set\n    vec2 uv = (-0.5 * iResolution.xy + fragCoord);\n    uv /= iResolution.y;\n    \n    //The pixel domain width, could also specify a pixel width\n    float w = max(abs(dFdx(uv.x)), abs(dFdy(uv.y))) * 2.0;\n    //The radius in UV space of the circle\n    float radius = 0.2 * sin(iTime * 0.1) + 0.2;\n    \n    //Integrating a line across the euclidean distance from the center\n    float x = length(uv);\n    \n    //Calculate domain across A->B w.r.t the euclidean distance\n    //May not need to /2 but I cant remember\n    float A = x - w * 0.5;\n    float B = x + w * 0.5;\n    \n    //Fundamental theorem of calculus F'(x+dx)-F'(x-dx) / dx\n#if !SHOW_INTEGRAL\n    float dom = (F(radius, B) - F(radius, A)) / w;\n#else\n    //2x just to illustrate the magnitude changing better\n    float dom = 2.0 * F(radius, x);\n#endif\n    fragColor = vec4(dom);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}