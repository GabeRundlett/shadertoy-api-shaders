{
    "Shader": {
        "info": {
            "date": "1711239381",
            "description": "Fall of fractures",
            "flags": 0,
            "hasliked": 0,
            "id": "4X2XWd",
            "likes": 3,
            "name": "Fracture Fall",
            "published": 3,
            "tags": [
                "fracture"
            ],
            "usePreview": 0,
            "username": "gl1tch",
            "viewed": 121
        },
        "renderpass": [
            {
                "code": "vec3 palette(in float t) {\n    vec3 a = vec3(0.728, 0.298, 1.478);\n    vec3 b = vec3(-0.342, 0.088, -0.522);\n    vec3 c = vec3(1.417, 1.778, 1.574);\n    vec3 d = vec3(1.208, 1.542, 1.875);\n    \n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = 2.0 * fragCoord / iResolution.xy - 1.0;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n    uv.y += 2.0;\n    uv.x += 3.0;\n\n    vec2 uv0 = uv;\n   \n    vec3 finalColor = vec3(0.0);\n   \n    for (int i = 0; i < 2; i++) {\n        vec2 s = uv0 * length(uv0) / 2.0;\n        s.y += iTime;\n        \n        uv = fract(s) - 0.5;\n        uv += 0.5;\n\n        float d = length(uv);\n\n        vec3 col = palette(length(uv0) + iTime * 0.1);\n        \n        d = sin(d * 32.0 + iTime) / 32.0;\n        d = abs(d);\n\n        d = 0.01 / d;\n\n        finalColor += col * d;\n    }\n\n    fragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}