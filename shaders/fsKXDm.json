{
    "Shader": {
        "info": {
            "date": "1634762322",
            "description": "forked this shader and made it to some sort of lavalamp",
            "flags": 64,
            "hasliked": 0,
            "id": "fsKXDm",
            "likes": 22,
            "name": "this so needs a chill track",
            "published": 3,
            "tags": [
                "raymarch",
                "circle"
            ],
            "usePreview": 1,
            "username": "Arrangemonk",
            "viewed": 624
        },
        "renderpass": [
            {
                "code": "#define MAX_STEPS 100\n#define MAX_DIST 100.\n#define MIN_DIST 0.1\nfloat HALF = 0.5;\nfloat PIH = 1.57079632679;\nfloat PI  = 3.14159265359;\nfloat TAU = 6.28318530718;\nfloat E = 2.71828182846;\nfloat RADIUS = 6.;\nvec4 sphere = vec4(0.,1.,0.,1.);\nvec3 lightpos = vec3(10.,10.,6.);\nfloat ballspeed = 1.;\nfloat cameraspeed = .3;\n\n\nfloat opSmoothUnion( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\nfloat getdist(vec3 raypos)\n{\nfloat time = iTime * ballspeed;\n    float planedist = raypos.y - texture(iChannel0,raypos.xz *0.01).x*0.5;\n    float spheredist = length(raypos-vec3(0.,1.,0.))-1.;\n    float spheredist2 = length(raypos-vec3(0.,2.2 + 1. + 0.5 *sin(time * .25),sin(time * .5)))-.6;\n    float spheredist3 = length(raypos-vec3(0.,3.5 - sin(time * .125),-1.))-.2;\n    float dist = opSmoothUnion(planedist,spheredist,1.0);\n    dist =opSmoothUnion(dist,spheredist2,.5);\n    dist =opSmoothUnion(dist,spheredist3,.25);\n    //return dist;\n    return smoothstep(0.,3.,dist);\n}\nvec3 getnormal(vec3 p)\n{\n \treturn normalize(sphere.xyz-p);   \n}\nfloat getlight(vec3 p)\n{\n    vec3 lightdir = normalize(lightpos-p);\n    vec3 normal = getnormal(p);\n    float diff = dot(normal,lightdir);\n    return diff;\n}\nfloat raymarch(vec3 camera, vec3 dir)\n{\n\tfloat dist = 0.; \n    for(int i=0; i<MAX_STEPS; i++){\n   \t\tvec3 pos = camera+dir*dist;\n        float stepdist = getdist(pos);\n        dist+=stepdist;\n        if(dist>MAX_DIST || dist<MIN_DIST) break;\n    }\n    return dist;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*HALF)/iResolution.y;\n    vec3 col = vec3(0.);\n    float time = iTime * cameraspeed;\n\t\n    vec3 camera = vec3(sin(time -PIH) * RADIUS,2. +sin(time),cos(time -PIH) * RADIUS);\n    vec3 ray = vec3(sin(time) * uv.x + cos(time), uv.y - sin(time)*0.2,cos(time)*uv.x - sin(time));\n    float d = raymarch(camera, normalize(ray));\n    vec3 p = camera + ray*d;\n    float diff = getlight(p);\n    col+=vec3(1.-diff);\n    col = col *.5;\n    \n    \n    \n    fragColor = vec4(mix(vec3(.1,-.1,.3),vec3(1.5,.7,-.6),col),1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "musicstream",
                        "id": 29458,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/lofi_girl/momentary?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}