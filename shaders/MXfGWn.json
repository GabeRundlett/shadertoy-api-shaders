{
    "Shader": {
        "info": {
            "date": "1707327229",
            "description": ".",
            "flags": 32,
            "hasliked": 0,
            "id": "MXfGWn",
            "likes": 19,
            "name": "LCG - linear congruence random",
            "published": 3,
            "tags": [
                "lcg"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 331
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    O = T(U);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define H(p)  fract(sin( (p)* vec2(12.9898, 78.233)) * 43758.5453)\n\nuint s;\n#define r float( s = s* 747796405u + 2891336453u )/4294967296. // 1<<32\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = T(U)*.99;                        // previous state\n    \n // s = uint(100.*H(iTime));\n    s = floatBitsToUint(H(iTime)).x;     // init seed with hash(time)\n    \n    for( float i; i++ < 100. ; ) {\n        vec2 V; V.x = r; V.y = r;        // point = (LCG,LCG)\n        if( U-.5 == floor(iResolution.xy*V) ) O++;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define T(U) texelFetch( iChannel0, ivec2(U), 0 )\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}