{
    "Shader": {
        "info": {
            "date": "1613249835",
            "description": "Temporal integration for the versatile noise created by @kinonik:\n\nhttps://www.shadertoy.com/view/tlcBRl",
            "flags": 32,
            "hasliked": 0,
            "id": "wt3Bzs",
            "likes": 4,
            "name": "Integration of good white noise",
            "published": 3,
            "tags": [
                "noise",
                "template",
                "float"
            ],
            "usePreview": 0,
            "username": "spawner64",
            "viewed": 422
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float c = texture(iChannel0, uv).r;\n    fragColor = vec4(c, c, c, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float noise1(float seed1,float seed2);\n\nfloat noise2(float seed1,float seed2);\n\nfloat noise2(float seed1,float seed2,float seed3);\n\nfloat noise3(float seed1,float seed2,float seed3);\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x;\n    float c;\n    //c = noise1(uv.x*100., uv.y*100.); //mini [0,+10k]\n    //c = noise2(uv.x, uv.y, iTime); //medium [-100k,+100k]\n    //c = noise3(uv.x*0.000001, uv.y*0.000001, iTime); //hard [-100k,+100k] high accuracy\n    //c = noise3(uv.x*0.000001, uv.y*0.000001, iTime * 1e-15); // just for fun\n    c = noise3(uv.x*0.000001, uv.y*0.000001, iTime * 1e-6); // just for fun\n    //c = rand(uv+100.); // trash\n    \n    fragColor = vec4(c, c, c, 1.0);\n}\n\n\n//mini\nfloat noise1(float seed1,float seed2){\nreturn(\nfract(seed1+12.34567*\nfract(100.*(abs(seed1*0.91)+seed2+94.68)*\nfract((abs(seed2*0.41)+45.46)*\nfract((abs(seed2)+757.21)*\nfract(seed1*0.0171))))))\n* 1.0038 - 0.00185;\n}\n\n//2 seeds\nfloat noise2(float seed1,float seed2){\nfloat buff1 = abs(seed1+100.94) + 1000.;\nfloat buff2 = abs(seed2+100.73) + 1000.;\nbuff1 = (buff1*fract(buff2*fract(buff1*fract(buff2*0.63))));\nbuff2 = (buff2*fract(buff2*fract(buff1+buff2*fract(seed1*0.79))));\nbuff1 = noise1(buff1, buff2);\nreturn(buff1 * 1.0038 - 0.00185);\n}\n\n//3 seeds\nfloat noise2(float seed1,float seed2,float seed3){\nfloat buff1 = abs(seed1+100.81) + 1000.3;\nfloat buff2 = abs(seed2+100.45) + 1000.2;\nfloat buff3 = abs(noise1(seed1, seed2)+seed3) + 1000.1;\nbuff1 = (buff3*fract(buff2*fract(buff1*fract(buff2*0.146))));\nbuff2 = (buff2*fract(buff2*fract(buff1+buff2*fract(buff3*0.52))));\nbuff1 = noise1(buff1, buff2);\nreturn(buff1);\n}\n\n//3 seeds hard\nfloat noise3(float seed1,float seed2,float seed3){\nfloat buff1 = abs(seed1+100.813) + 1000.314;\nfloat buff2 = abs(seed2+100.453) + 1000.213;\nfloat buff3 = abs(noise1(buff2, buff1)+seed3) + 1000.17;\nbuff1 = (buff3*fract(buff2*fract(buff1*fract(buff2*0.14619))));\nbuff2 = (buff2*fract(buff2*fract(buff1+buff2*fract(buff3*0.5215))));\nbuff1 = noise2(noise1(seed2,buff1), noise1(seed1,buff2), noise1(seed3,buff3));\nreturn(buff1);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// EMA IIR filter #1\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float c = texture(iChannel0, uv).r;\n    float h = texture(iChannel1, uv).r;\n    float t = sin(iTime) * 0.5 + 0.5;\n    t *= 0.99;\n    c = mix(c, h, t);\n    c = clamp(c, 0.0, 1.0);\n\n    fragColor = vec4(c, c, c, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// EMA IIR filter #2\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float c = texture(iChannel0, uv).r;\n    float h = texture(iChannel1, uv).r;\n    float t = sin(iTime) * 0.5 + 0.5;\n    t *= 0.99;\n    c = mix(c, h, t);\n    c = clamp(c, 0.0, 1.0);\n\n    fragColor = vec4(c, c, c, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// EMA IIR filter #3\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float c = texture(iChannel0, uv).r;\n    float h = texture(iChannel1, uv).r;\n    float t = sin(iTime) * 0.5 + 0.5;\n    t *= 0.99;\n    c = mix(c, h, t);\n    c = clamp(c, 0.0, 1.0);\n\n    fragColor = vec4(c, c, c, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}