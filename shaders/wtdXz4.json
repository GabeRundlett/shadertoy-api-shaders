{
    "Shader": {
        "info": {
            "date": "1580547115",
            "description": "Shortened version of  \"Stellar magnetic field\" by tdhooper. [url]https://shadertoy.com/view/3lc3WN[/url]\nAt first for me to better understand ( via holistic view of equations gathered in one window ).\n\nRemaining questions in [...]Â in comments\n",
            "flags": 0,
            "hasliked": 0,
            "id": "wtdXz4",
            "likes": 5,
            "name": "Stellar magnetic field (short)",
            "published": 3,
            "tags": [
                "field",
                "magnetic"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 464
        },
        "renderpass": [
            {
                "code": "// Shortened version of \"Stellar magnetic field\" by tdhooper. https://shadertoy.com/view/3lc3WN\n// Even shorter version: https://www.shadertoy.com/view/ttdSRN\n\n#define SC(a)    vec2( sin(a), cos(a) )\n#define H(n)   ( fract(sin(n) * 4e5 )*2. - 1. )\n#define R        iResolution.xy\n\nfloat Velocity(vec2 p) {            // --- adding complex poles. returns Arg(result)\n  \tvec2  f; // , V = vec2(0);      //    [ how is this a \"velocity\" ? is it holomorphic ]\n  \tfloat j = 0., N = 15.;\n  \tfor (float i=0.,s=-1.; i < N; i++, s=-s )\n        f  = p - SC( 6.28 * ( i +  H(i/N)/2. + H(i+1.)*(iTime+23.78e3) ) / N ),\n        j += s* atan(f.x, f.y);\n     // V -= s* f/dot(f,f);\n    return j;                       // CORRECT_STREAMLINES\n  //return atan(V.x, V.y);\n}\n\n// --- [ what kind of derivative is this ? looks like an extension of ||complex derivative|| ]\n //    [ is Velocity not holomorphic ?  And why this stange FD pattern ? ]\n#define L(i,j)       length( SC(a) - SC( Velocity( p + vec2(i,j) *2./R.x ) ) )\n#define Derivative(a, p)   ( L(0,1) + L(1,0) + L(1,1) + L(1,-1) ) / 4.\n\nvoid mainImage( out vec4 O, vec2 U )      // --------------------------\n{\n    vec2  p = 3.* (2.*U - R) / R.x;\n    float s = 1./30.,                                   // 1./ number or radial iso lines\n          a = Velocity(p),\n          d = Derivative(a, p); // very close to below without wrap glitch :\n       // d = fwidth(a/6.28);  if (d>.5) d--; d*=1.2;   // trying to kill the glitch\n   // vec2 D = abs(vec2(dFdx(a/6.28),dFdy(a/6.28)));    // done !\n   // d = 1.6*length(D-step(.5,D));\n    \n    a = abs( mod( a/6.28, s ) *2. -s );                 // isolines\n    a = clamp( a/d - R.x/2e3 ,0.,1.);\n  //a = mod( a/6.28 , s ) ;                             // isolines\n  //a = clamp( 2.*min(a,s-a)/d - R.x/2e3 ,0.,1.);\n    d = length(p) - 1.;                                 // central disk\n    a = mix( 1.-a, a, clamp(d/fwidth(d),0.,1.)) ;\n    O = vec4( pow( a , 1./2.2 ) );                      // to sRGB\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}