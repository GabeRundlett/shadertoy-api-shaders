{
    "Shader": {
        "info": {
            "date": "1607162218",
            "description": "my entry for shader royale 2 4/12/2020\n\nplease play the audio in iChannel0 for maximum effect",
            "flags": 64,
            "hasliked": 0,
            "id": "WdKBWD",
            "likes": 5,
            "name": "Shader Royale #2",
            "published": 3,
            "tags": [
                "raymarch",
                "shader",
                "glow",
                "2",
                "royale"
            ],
            "usePreview": 0,
            "username": "anticore",
            "viewed": 494
        },
        "renderpass": [
            {
                "code": "\nfloat sdSphere(vec3 p, vec3 pos, float r) {\n  return length(p + pos) -r;\n}\n\nmat2 rot(float a) {\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c,s,-s,c);\n}\n\nfloat sdBox(vec3 p, vec3 pos, vec3 b) {\n    vec3 q = abs(p + pos) - b;\n    return min(max(q.x, max(q.y, q.z)), 0.);\n}\n\nfloat sdBoxes(vec3 p, vec3 pos, vec3 b) {\n    float n = texelFetch( iChannel0, ivec2(0.2 * 512.,0), 0 ).x;\n    p.xy *= rot(sin(iTime * 3.));\n    p.y += sin(iTime * 2. + p.x * (1.2 + sin(iTime) / 2.) + n );\n    p = vec3(p.x, mod(p.y, 0.4), p.z);\n    vec3 q = abs(p + pos) - b;\n    return min(max(q.x, max(q.y, q.z)), 0.);\n}\n\nfloat opMin(float d1, float d2) {\n    return max(-d1, d2);\n}\n\nfloat opSmooth(float d1, float d2, float k) {\n  float h = clamp(0.5 + 0.5 * (d2 - d1) / k, 0., 1.);\n  return mix(d2, d1, h) - k * h * (1.-h);\n}\n\nfloat sdSpheres(vec3 p) {\n    float n = texelFetch( iChannel0, ivec2(0.2 * 512.,0), 0 ).x;\n    p = p - mod(p, 0.16 + n * 0.1 - abs(cos(iTime)) / 5. );\n    float t = iTime;\n  \n    float spheres = 999.;\n    for (int i = 0; i < 18; i++) {\n        float p1 = t / 2. * float(i);\n        float p2 = t /4. * (5. - float(i));\n        float p3 = t + float(i) * 2.;\n      \n        spheres = opSmooth(spheres, sdSphere(p, vec3(sin(p1)*3., cos(p2)*3., sin(p3)+12.), float(i) * 0.05), 1.);\n    }\n    \n    return spheres;\n}\n\nvec2 map(vec3 p) {\n    float n = texelFetch( iChannel0, ivec2(0.2 * 512.,0), 0 ).x;\n    float s = sdSphere(p, vec3(0.,0.,10.), 2. + n );\n    float b = sdBoxes(p, vec3(5,0,10), vec3(10,.2,5));\n    float bms = opMin(b,s);\n    float ss = sdSpheres(p);\n    \n    return vec2(opSmooth(bms, ss, 0.5), ss < bms ? 1 : 0);\n}\n\nvec3 tr(vec3 ro, vec3 rd){\n    float td = 1.;\n    vec2 h;\n  \n    float n = texelFetch( iChannel0, ivec2(0,0), 0 ).x;\n  \n    vec3 c0 = vec3(0.);\n    vec3 glo0 = vec3(abs(sin(iTime)) * n * 0.035,abs(cos(iTime)) * n * 0.035,0.03);\n    vec3 c1 = vec3(0.);\n    //vec3 glo1 = vec3(0.02, 0,0);\n    vec3 glo1 = 0.015 * (0.5 + 0.5 * cos(iTime * 2. + rd.y*2. + vec3(4.,1.,0.))) + 0.015 * (0.5 + 0.5 * cos(iTime * 3. + rd.y*5. + vec3(1.,4.,0.)));\n  \n    for (int i = 0; i < 100; i++) {\n        h = map(ro + rd * td);\n        td += h.x;\n      \n        if (h.y == 0.) c0 += glo0; else c1 += glo1;\n      \n        if (h.x < 0.01 || h.x > 20.) break;\n    }\n    \n    return c0 + c1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \n    float n = texelFetch( iChannel0, ivec2(0,0), 0 ).x;\n  vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  uv -= 0.5;\n  uv /= vec2(iResolution.y / iResolution.x, 1);\n  uv = sin(iTime / 2.) > 0. ? uv : abs(uv);\n  \n  vec3 ro= vec3(cos(iTime * 4.) / 4. + 0.2,0.,1.7 + n / 1.);\n  vec3 rd = normalize(vec3(uv, 0) - ro);\n\n  fragColor = vec4( tr(ro, rd), 1);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 24800,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/lug00ber/oh-let-you-lift-me-remix"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}