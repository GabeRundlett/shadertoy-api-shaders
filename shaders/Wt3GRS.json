{
    "Shader": {
        "info": {
            "date": "1576602006",
            "description": "Based off https://www.shadertoy.com/view/lsf3RH",
            "flags": 0,
            "hasliked": 0,
            "id": "Wt3GRS",
            "likes": 12,
            "name": "2D Portals",
            "published": 3,
            "tags": [
                "perlin",
                "portal"
            ],
            "usePreview": 0,
            "username": "mat44",
            "viewed": 863
        },
        "renderpass": [
            {
                "code": "// most of the code is from https://www.shadertoy.com/view/lsf3RH\n\n\nfloat snoise(vec3 uv, float res)\n{\n\tconst vec3 s = vec3(1e0, 1e2, 1e3);\n\t\n\tuv *= res;\n\t\n\tvec3 uv0 = floor(mod(uv, res))*s;\n\tvec3 uv1 = floor(mod(uv+vec3(1.), res))*s;\n\t\n\tvec3 f = fract(uv); f = f*f*(3.0-2.0*f);\n\n\tvec4 v = vec4(uv0.x+uv0.y+uv0.z, uv1.x+uv0.y+uv0.z,\n\t\t      \t  uv0.x+uv1.y+uv0.z, uv1.x+uv1.y+uv0.z);\n\n\tvec4 r = fract(sin(v*1e-1)*1e3);\n\tfloat r0 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n\t\n\tr = fract(sin((v + uv1.z - uv0.z)*1e-1)*1e3);\n\tfloat r1 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n\t\n\treturn mix(r0, r1, f.z)*2.-1.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n\tvec2 p = -.5 + fragCoord.xy / iResolution.xy;\n\tp.x *= iResolution.x/iResolution.y;\n\t\n    p.x *= 1.5;\n    \n    p.x = mod(p.x, 1.3) - 0.65;\n    \n\tfloat color = 3.0 - (3.*length(2.*p));\n    \n\tvec3 coord = vec3(atan(p.x,p.y)/6.2832+.5, length(p)*.4, .5);\n\t\n    coord = 1.0 - coord;\n    \n    for(int i = 1; i <= 2; i++) {\n        float power = pow(2.0, float(i));\n        color += (0.4 / power) * snoise(coord + vec3(0.,-iTime*.05, iTime*.01), power*16.);\n    }\n    color = 1.0 - color;\n    color *= 2.7;\n    \n    color *= smoothstep(0.43, 0.4, length(p));\n\n\tif (fragCoord.x > iResolution.x * 0.5)\n\t\tfragColor = vec4(color, pow(max(color,0.),2.)*0.4, pow(max(color,0.),3.)*0.15 , 1.0);\n    else\n    \tfragColor = vec4(pow(max(color,0.),3.)*0.15, pow(max(color,0.),2.)*0.4, color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}