{
    "Shader": {
        "info": {
            "date": "1508777622",
            "description": "simple game of life (use mouse for drawing)",
            "flags": 32,
            "hasliked": 0,
            "id": "llBcDw",
            "likes": 3,
            "name": "Game of life_",
            "published": 3,
            "tags": [
                "conway",
                "gameoflife"
            ],
            "usePreview": 0,
            "username": "Txoka",
            "viewed": 675
        },
        "renderpass": [
            {
                "code": "//#define COLOR\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 uv = fragCoord/iResolution.xy;\n    #ifdef COLOR\n    fragColor=texture(iChannel0,uv).r*vec4(uv,0.5+0.5*sin(iTime),1.0);\n    #else\n    fragColor=texture(iChannel0,uv);\n    #endif\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define survive n>1 && n<4\n#define born n==3\n#define zoom 4.\n#define noise\n\n#define t(uv)  texture( iChannel0, (uv)/iResolution.xy ).r\n\nint i(vec2 uv) {\n    float s=0.;\n    for (int i=0; i<9; i++)s+=t(uv+vec2(i%3-1,i/3-1));\n\treturn int(s-t(uv));\n}\n\nvoid mainImage( out vec4 o, in vec2 uv){\n    o = vec4(0.,zoom,0.,1.);\n    if(distance(uv,iMouse.xy/zoom)<3.&&iMouse.z>1.)o = vec4(1.,zoom,0.,1.);\n    int n = i(uv);\n    if(t(uv)==1.) {\n    \tif(survive)o = vec4(1.,zoom,0.,1.);\n    } else if(born) {\n    \to = vec4(1.,zoom,0.,1.);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define t(x)  texture(iChannel0,x).r\n#define Smooth\n#define SFactor 5.\n#define trail 0.8\nfloat i(vec2 coord) {\n\tvec2 R = iResolution.xy;\n\n\tvec2 x = vec2(coord.x-1.,coord.y)/R;\n\tvec2 x1 = vec2(coord.x+1.,coord.y)/R;\n\tvec2 y = vec2(coord.x,coord.y-1.)/R;\n\tvec2 y1 = vec2(coord.x,coord.y+1.)/R;\n\n\treturn t(x)+t(x1)+t(y)+t(y1);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    float zoom = texture(iChannel0,vec2(0.)).g;\n    vec2 co=fragCoord/zoom;\n\tvec2 uv = co/ iResolution.xy;\n    fragColor=vec4(texture(iChannel0,uv).rrr,1.);\n    #ifdef Smooth\n    if(fragColor.r!=1.)fragColor=vec4(i(co)/SFactor);\n    #endif\n    fragColor=mix(fragColor,texture(iChannel1,fragCoord/iResolution.xy),trail);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buf B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}