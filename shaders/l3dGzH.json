{
    "Shader": {
        "info": {
            "date": "1716194823",
            "description": "SFI",
            "flags": 0,
            "hasliked": 0,
            "id": "l3dGzH",
            "likes": 0,
            "name": "SFI Testing",
            "published": 3,
            "tags": [
                "sfi"
            ],
            "usePreview": 0,
            "username": "Elyades",
            "viewed": 106
        },
        "renderpass": [
            {
                "code": "float squareColor(vec2 uv){\n    uv = abs(uv);\n    return ( pow(max(2.0*(0.5 - max(uv.x,uv.y)) , 0.0) , 0.2) ) ;\n}\n\nfloat squareColor2(vec2 uv){\n    uv = abs(uv);\n    if( 0.5 - max(uv.x,uv.y) > 0.0){return 1.0;}\n    else return 0.0;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Normalized coordinates from -1 to 1\n    vec2 uv = 2.0*(fragCoord/iResolution.xy - 0.5);\n    uv.y *= iResolution.y/iResolution.x;\n    vec2 uv1 = uv; vec2 uv2 = uv; vec2 uv3 = uv;\n    int iterationAmount = 0;\n    for (int i = 0; i < iterationAmount; i++){\n        uv1 *= 2.0; uv1 += vec2(0.0 , 0.5);\n        uv2 *= 2.0; uv2 += vec2(-0.5 , -0.5);\n        uv3 *= 2.0; uv3 += vec2(0.5 , -0.5);\n    }\n    \n    \n    vec3 finalColor = vec3( clamp(squareColor(uv1) + squareColor(uv2) + squareColor(uv3), 0.0, 1.0) ) ;\n    \n    fragColor = vec4(finalColor, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}