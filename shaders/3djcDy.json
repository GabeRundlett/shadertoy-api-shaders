{
    "Shader": {
        "info": {
            "date": "1587279606",
            "description": "antialiasing + golfing RadoKirov's shader [url]https://shadertoy.com/view/3sjyWG[/url] ( 1303 chars  )\n",
            "flags": 0,
            "hasliked": 0,
            "id": "3djcDy",
            "likes": 20,
            "name": "Conformal Droste - 322 chars",
            "published": 3,
            "tags": [
                "droste",
                "escher",
                "short",
                "golf",
                "conformalmapping",
                "3tweets"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 532
        },
        "renderpass": [
            {
                "code": "// antialiasing + golfing RadoKirov's shader ( 1303 chars ) https://shadertoy.com/view/3sjyWG 2020-04-19\n\n// --- 322 again with analytic form of the version with \"even better antialiasing\" \n\n#define g(g,r) ( c = abs( fract(g/e +.5) -.5 ),                \\\n                 c = min(c,c.y) - r/20. ,                      \\\n                 smoothstep(-g, g, c*.4* l*R  ).x )           //\nvoid mainImage(out vec4 O, vec2 U) {\n    vec2  R = iResolution.xy,\n          c = U+U - R, l = length(c) / R,\n          e = mat2(.75, -.1103, .1103,.75)\n              * vec2( atan(c.y, c.x) , log(l) );\n    e  = exp( .7 * fract( iTime/2. ) -e.y )\n         / abs( cos( e.x + vec2(0,1.57)) );\n    e /= exp2( ceil( log( min(e,e.yx) ) / .7 ) );\n    O +=   g( 1.01, .7 )\n         * g( 3.  , .5 );\n}/*\n\n\n\n\n\n\n// --- +12 -8: analytic form of the version with \"even better antialiasing\" \n\n#define g(g,r) ( R = abs( fract(e*g +.5) -.5 ),                \\\n                 R = min(R,R.y) - r/20. ,                      \\\n                 smoothstep(-g, g, R*.4* length(c)  ).x )     //\n#define mainImage(O,U)                                         \\\n    vec2  R = iResolution.xy,                                  \\\n          c = U+U - R,                                         \\\n          e = mat2(.75, -.1103, .1103,.75)                     \\\n              * vec2( atan(c.y, c.x) , log( length(c) / R ) ); \\\n    e  = exp( e.y -.7 * fract( iTime/2. ) )                    \\\n         * abs( cos( e.x + vec2(0,1.57)) );                    \\\n    e *= exp2( ceil( -log( max(e.x,e.y) ) / .7 ) );            \\\n    O +=   g( 1.01, .7 )                                       \\\n         * g( 3.  , .5 )                                      /*\n\n\n\n\n\n// --- 334 chars : +12 : version with even better antialiasing\n\n#define g(e,r) ( c = abs( fract(e +.5) -.5 ),                  \\\n                 c = min(c,c.y) - r/20. ,                      \\\n                 smoothstep(-1., 1., c/fwidth(length(e)) ).x )//\n#define mainImage(O,U)                                         \\\n    vec2  R = iResolution.xy,                                  \\\n          c = U+U - R,                                         \\\n          e = mat2(.75, -.1103, .1103,.75)                     \\\n              * vec2( atan(c.y, c.x) , log( length(c) / R ) ); \\\n    e =   exp( e.y -.7 * fract( iTime/2. ) )                   \\\n        * abs( cos( e.x + vec2(0,1.57)) );                     \\\n    e *= exp2( ceil( -log( max(e.x,e.y) ) / .7 +.02) );        \\\n    O +=   g( e   , .7 )                                       \\\n         * g( e*3., .5 )                                      /*\n\n\n\n\n\n// --- 322 chars   ( with pretty good antialiasing )   < < <\n\n#define g(e,r) ( c = abs( fract(e +.5) -.5 ),                  \\\n                 c = min(c,c.y) - r/20. ,                      \\\n                 smoothstep(-1., 1., c/fwidth(c) ).x )        //\n#define mainImage(O,U)                                         \\\n    vec2  R = iResolution.xy,                                  \\\n          c = U+U - R,                                         \\\n          e = mat2(.75, -.1103, .1103,.75)                     \\\n              * vec2( atan(c.y, c.x) , log( length(c) / R ) ); \\\n    e =   exp( e.y -.7 * fract( iTime/2. ) )                   \\\n        * abs( cos( e.x + vec2(0,1.57)) );                     \\\n    e *= exp2( ceil( -log( max(e.x,e.y) ) / .7 ) );            \\\n    O +=   g( e   , .7 )                                       \\\n         * g( e*3., .5 )                                      /*\n\n\n\n\n\n// --- 327 chars\n\n#define g(g,r) ( c = abs( fract(e * g +.5) -.5 ),                \\\n                 c = min(c,c.y),                                 \\\n                 smoothstep(-1., 1., ( c - r ) / fwidth(c) ).x )//\n#define mainImage(O,U)                                           \\\n    vec2  R = iResolution.xy,                                    \\\n          c = U+U - R,                                           \\\n          e = mat2(.75, .1103, -.1103,.75)                       \\\n              * vec2( log(length(c)/R.x) , atan(c.y, c.x) );     \\\n    e =   exp(e.x -.7 * fract( iTime / 2.) )                     \\\n        * abs( cos( e.y + vec2(0,1.57)) );                       \\\n    e *= exp2( ceil( -log( max(e.x,e.y) ) / .7 ) );              \\\n    O +=   g(1., .035)                                           \\\n         * g(3., .025)                                          /*\n\n\n\n\n\n// --- 352 chars\n\n#define g(g,r) ( a = abs( fract(e * g +.5) -.5 ),              \\\n                 l = min(a.x,a.y),                             \\\n                 smoothstep(-1., 1., ( l - r ) / fwidth(l) ) )//\n#define mainImage(O,U)                                         \\\n    float l;                                                   \\\n    vec2  R = iResolution.xy, a,                               \\\n          c = ( U+U - R) / R.x,                                \\\n          e =  vec2( .75, .1103 );                             \\\n    e = mat2(e, -e.y,e.x)                                      \\\n        * vec2( log(length(c)) , atan(c.y, c.x) );             \\\n    e = exp(e.x) * abs( cos( e.y + vec2(0,1.57)) )             \\\n        / exp(.7 * fract( iTime / 2.) );                       \\\n    e *= exp2( ceil( -log( max(e.x,e.y) ) / .7 ) );            \\\n    O +=   g(1., .035)                                         \\\n         * g(3., .025)                                        /*\n\n\n\n\n\n// --- 372 chars\n\n#define g(g,r) ( a = abs( fract(e * g +.5) -.5 ),              \\\n             t = min(a.x,a.y),                                 \\\n             smoothstep(-1., 1., ( t - r ) / fwidth(t) ) )    //\n#define mainImage(O,U)                                         \\\n    float t = iTime / 3. , l = log(2.);                        \\\n    vec2  R = iResolution.xy, a,                               \\\n          c = (2. * U - R) / R.x,                              \\\n          e =  vec2( .75, l / 6.28 );                          \\\n    e = mat2(e, -e.y,e.x)                                      \\\n        * vec2( log(length(c)) , atan(c.y, c.x) );             \\\n    e = exp(e.x) * cos( e.y + vec2(0,1.57) )                   \\\n        / exp(l * fract(t / l) );                              \\\n    e *= exp2( floor( -log( max(abs(e.x),abs(e.y)) ) / l ) );  \\\n    O +=   g(2., .035)                                         \\\n         * g(6., .025)                                        /*\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}