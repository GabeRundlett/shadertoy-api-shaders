{
    "Shader": {
        "info": {
            "date": "1718998528",
            "description": "originals /* \"Voyager\" by @kishimisu (2024) - https://www.shadertoy.com/view/M33XDH and https://www.shadertoy.com/view/XX3Szr",
            "flags": 0,
            "hasliked": 0,
            "id": "433XWN",
            "likes": 1,
            "name": " white kaleidoscope",
            "published": 3,
            "tags": [
                "fractal",
                "blackandwhite",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 232
        },
        "renderpass": [
            {
                "code": "/*originals  \"Voyager\" by @kishimisu (2024)\n- https://www.shadertoy.com/view/M33XDH and https://www.shadertoy.com/view/XX3Szr*/\n#define N_BOXES 10.\n#define ROTATION 1\n#define DEPTH 5.\n\n\nmat2 rot(float a)\n{\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat periphery(vec2 p, float s)\n{\n    float per;\n    float t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(p.xy) + .117)) * 2.2;\nfloat si = sin(t);\nfloat co = cos(t);\nmat2 ma = mat2(co, si, -si, co);\n   \n    for (float i=1.; i<N_BOXES+1.; i++)\n    {\n        vec2 p0 = p;\n        float a = radians(20./N_BOXES) *i;\n        float mean = (N_BOXES+DEPTH*i)*.4;\n   \n   \n       \n        float box = sdBox(p0, vec2(s)*ma);\n        float gamma = mean * 1e-4*.7;\n        box = gamma/abs(box);\n       \n        per += box;\n    }\n    return per;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 tc, c;\n\n    vec2 p = (fragCoord -.5* iResolution.xy) / iResolution.y;\n     vec3  p2, q, f = vec3(.2, 2,.2);\n     vec4 O = fragColor;\n     vec2 F= fragCoord;\n    vec2  R = iResolution.xy,\n          u = abs(F+F-R)/R.y;  \n    float i, t, d, n, T = -iTime;\n   \n    for (O *= i; i++ < 50.;\n   \n        p2 = q = t * normalize(vec3(u * mat2(cos(T/16. + vec4(0,33,11,0))), 1))    \n    )\n        n =   tan(p2.z*0.5 - T*.05) * .5 + .5,\n       \n        p2.y += 1. + q.z * sin(T/6.) * .2 - n,      \n         \n        t += d = length(p2= mod(p2, f+f) - f) - .1,      \n\n        O += .27 * pow(n, 5.) / ++d *\n             (1. + cos(  length(q*1.7) * .2\n                       + length(u) * 3. - T\n                       / 1.4\n                        ));\n    float td;\n   \n    for (float i=0.; i<DEPTH; i+=.45)\n    {\n        float size = pow(0.25*O.y, i);\n        float per = periphery(p, size);\n        td += per;\n    }\n   \n    \n    c = vec3(DEPTH*0.2);\n  \n  \n   \n    tc += c*td*vec3(0.5,0.5,0.5);\n   \n    fragColor = vec4(tc, 1.);\n}\n\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}