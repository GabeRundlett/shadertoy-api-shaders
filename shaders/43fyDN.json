{
    "Shader": {
        "info": {
            "date": "1726161531",
            "description": "reboot",
            "flags": 34,
            "hasliked": 0,
            "id": "43fyDN",
            "likes": 4,
            "name": "cy",
            "published": 3,
            "tags": [
                "kopimi"
            ],
            "usePreview": 0,
            "username": "klxx",
            "viewed": 129
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0, uv).rgb;\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float shape_d(vec2 p) {\n    p.y += 0.125 * cos((beat - p.x) * pi);\n    p.y += 0.250 * (fract(p.x * 4.0 - beat) * 2.0 - 1.0);\n    p.x += 0.250 * (fract(p.y * 4.0 - beat) * 2.0 - 1.0);\n    \n    return length(p) - 0.5;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 p = uv * 2.0 - 1.0;\n    p = p * iResolution.xy / iResolution.yy;\n    \n    vec3 col = vec3(0.0, 1.0, 0.0);\n    \n    col *= step(0.0, -shape_d(p));\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define BPM 150.0\n#define beat (iTime * BPM / 60.0)\n#define pi 3.141592",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = fragCoord/iResolution.xy;\n    uv =  abs(uv - 0.5) -beat / 32.0;\n    \n    vec3 col = texture(iChannel0, uv).rgb;\n    col = fract(col + vec3(0.125, 0.25, 0.375) * beat);\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv_fb = (uv - 0.5) / 1.10 + 0.5;\n    vec2 uv_col = uv;\n    uv_col.x = 1.0 - uv.x;\n    \n    vec3 mask = texture(iChannel0, uv).rgb;\n    vec3 col = 1.0 - texture(iChannel1, uv_col).rgb;\n    col = fract(col * 4.0 - beat  * 1.0);\n    \n    vec3 fb = fract(texture(iChannel2, uv_fb).rgb - 4.0 / 255.0);\n    \n    col = mix(col, fb, 1.0 - mask.g);\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}