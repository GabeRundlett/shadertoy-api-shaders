{
    "Shader": {
        "info": {
            "date": "1530484164",
            "description": "pattern sequence thing",
            "flags": 0,
            "hasliked": 0,
            "id": "MdKfRd",
            "likes": 2,
            "name": "ticktack",
            "published": 3,
            "tags": [
                "asfdasdf"
            ],
            "usePreview": 0,
            "username": "lennyjpg",
            "viewed": 384
        },
        "renderpass": [
            {
                "code": "float one(vec2 uv, float t){\n    vec2 rnd = vec2(1119.34 , 991.131);\n    return fract(iTime*0.1 + uv.x* rnd.y + uv.y* rnd.x);\n}\n\nfloat two(vec2 uv, float t){\n    float d = length(uv);\n    d = sin(d*0.24);\n    float f = sin(d*50.0 - iTime * (step(uv.x,0.0)-0.5));\n    float e = step(f,0.0);\n    return e;\n}\n\nfloat three(vec2 uv, float t){\n    float e = cos( iTime*10.0+floor(uv.x * 30.0)*2.0 + uv.y * 50.0);\n   return step(e, 0.0);\n}\n\nfloat four(vec2 uv, float t){\n    float k = sin(abs(uv.x)-uv.y)*-3.0;\n    float r = k + sin( iTime + uv.y * 16.4) * 0.1;\n    return sin(r * 20.0) * 20.0;\n}\n\nfloat indexToFunction(int i, vec2 uv, float t){\n    i = int(mod(float(i),4.0));\n    if( i == 0){\n\t\treturn one(uv,t);\n    }else if( i == 1){\n        return two(uv,t);\n    }else if( i == 2){\n        return three(uv,t);\n    }else if( i == 3){\n        return four(uv,t);\n    }\n}\n\nvoid mainImage( out vec4 O, in vec2 f ){\n    vec2 uv = f / iResolution.xy - 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    float xx = f.x / iResolution.x;\n    float t = iTime * .1; \n    float i = fract(t)*4.;\n    float tt = fract(i);\n    //i = 2.0;\n    vec2 m = iMouse.xy/iResolution.xy -0.5;\n    \n    float radius = length(m)*2.0-0.1;\n    float g = length(uv);\n    float circle = smoothstep(radius+0.005,radius,length(uv));\n    float swipe =  step(xx,fract(i)*5.0);\n    float k =  indexToFunction(int(i+swipe),uv,tt);\n    if(uv.y < -0.49) k = step(uv.x, fract(i));\n    \n    vec3 foreground = mix(vec3(1.0, 0.2, 0.2),vec3(0.3, 0.2, 1.0),vec3(clamp(0.0,1.0,k)));\n    vec3 background = vec3(0.0, 0.1, 0.2);\n    vec3 final = mix(background, foreground, circle);\n    O = vec4(final,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}