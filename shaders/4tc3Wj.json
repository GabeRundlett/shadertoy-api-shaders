{
    "Shader": {
        "info": {
            "date": "1471468292",
            "description": "\"Cassini(an) Ovals\" are metaball-like elongated 0'S, like ellipses, but 2 distances are multiplied instead of added.\nFaster than metaballs and good for cell/limb-shapes.",
            "flags": 0,
            "hasliked": 0,
            "id": "4tc3Wj",
            "likes": 3,
            "name": "Cell Limb Cassinoid Cassini Oval",
            "published": 3,
            "tags": [
                "cell",
                "ellipse",
                "oval",
                "limb",
                "cassinoid",
                "cassini"
            ],
            "usePreview": 0,
            "username": "ollj",
            "viewed": 733
        },
        "renderpass": [
            {
                "code": "//chatting in https://www.shadertoy.com/live\n\n//\"Cassini(an) Ovals\" are metaball-like elongated 0'S\n//they are like ellipses, but 2 distances are multiplied instead of added.\nfloat dCassinoid(vec2 p, vec2 a, vec2 b){\n return length(p-a)*length(p-b);}\n\nfloat ssf(float a,float d){return smoothstep(-a,a,d);}\n\nfloat waveTri(float x,float d){\n ;d=fract(d*x);//sawtooth (not c0 continuous)\n ;d=abs(d-.5);//to C0 continuous triangle\n ;return d;   \n  //return min(mod(x,d),mod(-x,d))\n     \n     ;}\n\nfloat WavSaw(float x,float w){\n return abs((x)/w);}//waveSaw saw-function\n\nvoid mainImage(out vec4 r,in vec2 c){\n vec2 res=iResolution.xy;\n vec2 p=c/min(res.x,res.y);\n float dx=res.x/res.y;\n vec2 mr=iMouse.xy/res.xy;//relative mouse position on the screen\n mr.x*=res.x/res.y;\n r.rgb = vec3(p,sin(iTime));\n \n vec2 a=vec2(.2);\n vec2 b=mr;\n float d=dCassinoid(p,a,b);\n float lq=length(a-b);lq*=lq;\n float dist=lq*(.4+sin(iTime*2.)*.07);\n float eps=0.01;\n float e=1.;\n if(d<dist+eps)e=-.125;\n if(d<dist+eps && d>dist-eps)e*=4.;//optional line\n d=waveTri(d*30.,.6);\n d=1.-ssf(.25,d*e);\n r.rgb=vec3(d);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}