{
    "Shader": {
        "info": {
            "date": "1491247335",
            "description": "This sounds close enough like Mangles' Voice from FNAF.",
            "flags": 8,
            "hasliked": 0,
            "id": "Ms2yRD",
            "likes": 3,
            "name": "Mangles Voicebox GPU Sound",
            "published": 3,
            "tags": [
                "gpu",
                "voicebox",
                "manglesvoice"
            ],
            "usePreview": 0,
            "username": "hopskotchrainbow",
            "viewed": 899
        },
        "renderpass": [
            {
                "code": "float checkerboard(vec2 xy) {\n    float z = 0.0;\n    if ((fract(xy.x) < 0.5)!=(fract(xy.y) < .5)) {\n        z = 1.0;\n    }\n    return z;\n}\nfloat checkerboard(vec3 xyz) {\n    float z = 0.0;\n    if ((checkerboard(xyz.xy)>0.0)!=(fract(xyz.z)<.5)) {\n        z = 1.0;\n    }\n    return z;\n}\nfloat tex(vec3 v) {\n    float z = 0.0;\n    for (int i=0; i<32; ++i) {\n        z += checkerboard(v/float(i));\n    }\n    z /= 32.0;\n    return z;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat f = tex(vec3(fragCoord.xy-iResolution.xy, iFrame));\n\tfragColor = vec4(vec3(f),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define pi 3.14152865\n\nvec3 hash3( vec2 p )\n{\n    vec3 q = vec3( dot(p,vec2(127.1,311.7)), \n\t\t\t\t   dot(p,vec2(269.5,183.3)), \n\t\t\t\t   dot(p,vec2(419.2,371.9)) );\n\treturn fract(sin(q)*43758.5453);\n}\n\nfloat iqnoise( in vec2 x, float u, float v )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n\t\t\n\tfloat k = 1.0+63.0*pow(1.0-v,4.0);\n\t\n\tfloat va = 0.0;\n\tfloat wt = 0.0;\n    for( int j=-2; j<=2; j++ )\n    for( int i=-2; i<=2; i++ )\n    {\n        vec2 g = vec2( float(i),float(j) );\n\t\tvec3 o = hash3( p + g )*vec3(u,u,1.0);\n\t\tvec2 r = g - f + o.xy;\n\t\tfloat d = dot(r,r);\n\t\tfloat ww = pow( 1.0-smoothstep(0.0,1.414,sqrt(d)), k );\n\t\tva += o.z*ww;\n\t\twt += ww;\n    }\n\t\n    return va/wt;\n}\n\nfloat isqrt( float x )\n{\n    return sqrt(abs(x))*sign(x);\n}\nfloat ipow(float x, float p) {\n    return pow(abs(x),p)*sign(x);\n}\n\nfloat waveform( float time ) {\n    float i = isqrt(sin(time*pi*300.0));\n    float j = atan(sin(time*pi*700.0));\n    float m = iqnoise(vec2(time*100.0,0.0), 1.0, 0.0);\n    float g = mix(i, j, m)*ipow(sin(time*2000.0),0.5);\n    return g;\n}\n\nvec2 mainSound( in int samp, float time )\n{\n    return vec2( waveform(time) );\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}