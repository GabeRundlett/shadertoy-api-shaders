{
    "Shader": {
        "info": {
            "date": "1712936144",
            "description": "weight lifting animation",
            "flags": 0,
            "hasliked": 0,
            "id": "lfVGRy",
            "likes": 7,
            "name": "weight lifting animation",
            "published": 3,
            "tags": [
                "2d",
                "animation"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 118
        },
        "renderpass": [
            {
                "code": "//por jorge2017a2\n//weight lifting animation\n//---12-abril-2024\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n#define S2(d,b) smoothstep(antialiasing(0.5),0. , d - (b) )\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\nstruct TLinea\n{  vec2 A;\n   vec2 B;\n};\nTLinea arr[14];\n\nvec2 pt1_1[28]=vec2[](\nvec2(0.305,0.728),vec2(0.305,0.702),\nvec2(0.305,0.702),vec2(0.305,0.548),\nvec2(0.305,0.702),vec2(0.268,0.613),\nvec2(0.268,0.613),vec2(0.235,0.538),\nvec2(0.235,0.538),vec2(0.221,0.521),\nvec2(0.305,0.702),vec2(0.342,0.613),\nvec2(0.342,0.613),vec2(0.373,0.537),\nvec2(0.373,0.537),vec2(0.387,0.521),\nvec2(0.305,0.548),vec2(0.26,0.441),\nvec2(0.26,0.441),vec2(0.26,0.338),\nvec2(0.26,0.338),vec2(0.223,0.338),\nvec2(0.305,0.548),vec2(0.349,0.441),\nvec2(0.349,0.441),vec2(0.349,0.338),\nvec2(0.349,0.338),vec2(0.386,0.338)\n);\n\n\nvec2 pt1_2[28]=vec2[](\nvec2(0.305,0.728),vec2(0.305,0.702),\nvec2(0.305,0.702),vec2(0.305,0.548),\nvec2(0.305,0.702),vec2(0.268,0.613),\nvec2(0.268,0.613),vec2(0.227,0.68),\nvec2(0.227,0.68),vec2(0.209,0.684),\nvec2(0.305,0.702),vec2(0.342,0.613),\nvec2(0.342,0.613),vec2(0.382,0.68),\nvec2(0.382,0.68),vec2(0.4,0.684),\nvec2(0.305,0.548),vec2(0.26,0.441),\nvec2(0.26,0.441),vec2(0.26,0.338),\nvec2(0.26,0.338),vec2(0.223,0.338),\nvec2(0.305,0.548),vec2(0.349,0.441),\nvec2(0.349,0.441),vec2(0.349,0.338),\nvec2(0.349,0.338),vec2(0.386,0.338)\n);\n\nvec2 pt1_3[28]=vec2[](\nvec2(0.305,0.728),vec2(0.305,0.702),\nvec2(0.305,0.702),vec2(0.305,0.548),\nvec2(0.305,0.702),vec2(0.231,0.702),\nvec2(0.231,0.702),vec2(0.19,0.769),\nvec2(0.19,0.769),vec2(0.172,0.773),\nvec2(0.305,0.702),vec2(0.379,0.702),\nvec2(0.379,0.702),vec2(0.419,0.769),\nvec2(0.419,0.769),vec2(0.437,0.773),\nvec2(0.305,0.548),vec2(0.26,0.441),\nvec2(0.26,0.441),vec2(0.26,0.338),\nvec2(0.26,0.338),vec2(0.223,0.338),\nvec2(0.305,0.548),vec2(0.349,0.441),\nvec2(0.349,0.441),vec2(0.349,0.338),\nvec2(0.349,0.338),vec2(0.386,0.338)\n);\n\n\nvec2 pt1_4[28]=vec2[](\nvec2(0.305,0.728),vec2(0.305,0.702),\nvec2(0.305,0.702),vec2(0.305,0.548),\nvec2(0.305,0.702),vec2(0.231,0.702),\nvec2(0.231,0.702),vec2(0.242,0.788),\nvec2(0.242,0.788),vec2(0.238,0.813),\nvec2(0.305,0.702),vec2(0.379,0.702),\nvec2(0.379,0.702),vec2(0.368,0.788),\nvec2(0.368,0.788),vec2(0.371,0.813),\nvec2(0.305,0.548),vec2(0.26,0.441),\nvec2(0.26,0.441),vec2(0.26,0.338),\nvec2(0.26,0.338),vec2(0.223,0.338),\nvec2(0.305,0.548),vec2(0.349,0.441),\nvec2(0.349,0.441),vec2(0.349,0.338),\nvec2(0.349,0.338),vec2(0.386,0.338)\n);\n\n\nvec2 pt1_5[28]=vec2[](\nvec2(0.305,0.728),vec2(0.305,0.702),\nvec2(0.305,0.702),vec2(0.305,0.548),\nvec2(0.305,0.702),vec2(0.257,0.781),\nvec2(0.257,0.781),vec2(0.268,0.867),\nvec2(0.268,0.867),vec2(0.265,0.892),\nvec2(0.305,0.702),vec2(0.352,0.781),\nvec2(0.352,0.781),vec2(0.341,0.867),\nvec2(0.341,0.867),vec2(0.344,0.892),\nvec2(0.305,0.548),vec2(0.26,0.441),\nvec2(0.26,0.441),vec2(0.26,0.338),\nvec2(0.26,0.338),vec2(0.223,0.338),\nvec2(0.305,0.548),vec2(0.349,0.441),\nvec2(0.349,0.441),vec2(0.349,0.338),\nvec2(0.349,0.338),vec2(0.386,0.338)\n);\n\n//4\nvec2 pt1_6[28]=vec2[](\nvec2(0.305,0.728),vec2(0.305,0.702),\nvec2(0.305,0.702),vec2(0.305,0.548),\nvec2(0.305,0.702),vec2(0.231,0.702),\nvec2(0.231,0.702),vec2(0.242,0.788),\nvec2(0.242,0.788),vec2(0.238,0.813),\nvec2(0.305,0.702),vec2(0.379,0.702),\nvec2(0.379,0.702),vec2(0.368,0.788),\nvec2(0.368,0.788),vec2(0.371,0.813),\nvec2(0.305,0.548),vec2(0.26,0.441),\nvec2(0.26,0.441),vec2(0.26,0.338),\nvec2(0.26,0.338),vec2(0.223,0.338),\nvec2(0.305,0.548),vec2(0.349,0.441),\nvec2(0.349,0.441),vec2(0.349,0.338),\nvec2(0.349,0.338),vec2(0.386,0.338)\n);\n\n\n//3--7\nvec2 pt1_7[28]=vec2[](\nvec2(0.305,0.728),vec2(0.305,0.702),\nvec2(0.305,0.702),vec2(0.305,0.548),\nvec2(0.305,0.702),vec2(0.231,0.702),\nvec2(0.231,0.702),vec2(0.19,0.769),\nvec2(0.19,0.769),vec2(0.172,0.773),\nvec2(0.305,0.702),vec2(0.379,0.702),\nvec2(0.379,0.702),vec2(0.419,0.769),\nvec2(0.419,0.769),vec2(0.437,0.773),\nvec2(0.305,0.548),vec2(0.26,0.441),\nvec2(0.26,0.441),vec2(0.26,0.338),\nvec2(0.26,0.338),vec2(0.223,0.338),\nvec2(0.305,0.548),vec2(0.349,0.441),\nvec2(0.349,0.441),vec2(0.349,0.338),\nvec2(0.349,0.338),vec2(0.386,0.338)\n);\n\n\n//2--8\nvec2 pt1_8[28]=vec2[](\nvec2(0.305,0.728),vec2(0.305,0.702),\nvec2(0.305,0.702),vec2(0.305,0.548),\nvec2(0.305,0.702),vec2(0.268,0.613),\nvec2(0.268,0.613),vec2(0.227,0.68),\nvec2(0.227,0.68),vec2(0.209,0.684),\nvec2(0.305,0.702),vec2(0.342,0.613),\nvec2(0.342,0.613),vec2(0.382,0.68),\nvec2(0.382,0.68),vec2(0.4,0.684),\nvec2(0.305,0.548),vec2(0.26,0.441),\nvec2(0.26,0.441),vec2(0.26,0.338),\nvec2(0.26,0.338),vec2(0.223,0.338),\nvec2(0.305,0.548),vec2(0.349,0.441),\nvec2(0.349,0.441),vec2(0.349,0.338),\nvec2(0.349,0.338),vec2(0.386,0.338)\n);\n\n///---1---9\nvec2 pt1_9[28]=vec2[](\nvec2(0.305,0.728),vec2(0.305,0.702),\nvec2(0.305,0.702),vec2(0.305,0.548),\nvec2(0.305,0.702),vec2(0.268,0.613),\nvec2(0.268,0.613),vec2(0.235,0.538),\nvec2(0.235,0.538),vec2(0.221,0.521),\nvec2(0.305,0.702),vec2(0.342,0.613),\nvec2(0.342,0.613),vec2(0.373,0.537),\nvec2(0.373,0.537),vec2(0.387,0.521),\nvec2(0.305,0.548),vec2(0.26,0.441),\nvec2(0.26,0.441),vec2(0.26,0.338),\nvec2(0.26,0.338),vec2(0.223,0.338),\nvec2(0.305,0.548),vec2(0.349,0.441),\nvec2(0.349,0.441),vec2(0.349,0.338),\nvec2(0.349,0.338),vec2(0.386,0.338)\n);\n\n\n\nvec3 DrawFigSolo(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut; }\n\nvec3 D2(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S2( distObj,0.0)); return colOut; }\n\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nfloat divf(float a, float b)\n{   //evita crash por 1/0.0 =Infinito=error, en compilar\n    if(b==0.0)\n    {b=0.00001;}\n    return a/b;\n}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{  vec2 pa = p-a, ba = b-a;\n    float h = clamp( divf( dot(pa,ba),dot(ba,ba)), 0.0, 1.0 );\n    return length( pa - ba*h );\n    \n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\n\n\nfloat lineSegment(vec2 uv, vec2 p1, vec2 p2) \n{   float pixel = dFdx(uv.x);\n    float t = clamp(dot(uv - p1, normalize(p2 - p1)), 0., length(p2-p1));\n    vec2 pt = p1 + t * normalize(p2 - p1);\n    float v = length(uv - pt);\n    v = smoothstep(0.0, 30.0*pixel, v);\n    return v;\n}\n\n\nvec3 hacerCuerpo(vec2 p, vec3 colout,vec3 colin,  int poc, float rc)\n{\n    vec2 a, b;\n    int k,op;\n    k=0;\n    op=int(mod((iTime+float(poc))*3.0,9.0));\n    \n    for(int i=0;i<28;i++)\n    {        \n        if(op==0)\n        {  a=pt1_1[i];arr[k].A=a;b=pt1_1[i+1];arr[k].B=b;i++;k++;}\n        \n        if(op==1)\n        {  a=pt1_2[i]; arr[k].A=a; b=pt1_2[i+1];  arr[k].B=b;i++; k++;}\n        \n        if(op==2)\n        {  a=pt1_3[i]; arr[k].A=a; b=pt1_3[i+1];  arr[k].B=b; i++; k++;}\n        \n        if(op==3)\n        {  a=pt1_4[i]; arr[k].A=a; b=pt1_4[i+1];  arr[k].B=b; i++; k++; }\n        \n        if(op==4)\n        {  a=pt1_5[i]; arr[k].A=a; b=pt1_5[i+1];  arr[k].B=b; i++; k++; }\n       \n        if(op==5)\n        {  a=pt1_6[i]; arr[k].A=a; b=pt1_6[i+1];  arr[k].B=b; i++; k++;}\n       \n        if(op==6)\n        {  a=pt1_7[i]; arr[k].A=a; b=pt1_7[i+1];  arr[k].B=b; i++; k++;}\n       \n        if(op==7)\n        {  a=pt1_8[i]; arr[k].A=a; b=pt1_8[i+1];  arr[k].B=b; i++; k++; }\n\n        if(op==8)\n        {  a=pt1_9[i]; arr[k].A=a; b=pt1_9[i+1];  arr[k].B=b;i++; k++; }   \n    }\n    \n   ///cabeza  \n   float d2= sdCircle( p-arr[0].A-vec2(0.0,0.035), rc );\n   colout=D2( colin, colout,abs(d2)-0.01);\n    \n    float dfin,d1;\n    dfin=9999.9;\n    bool blncol;\n    \n    blncol=false;\n    float dsum=0.0;\n   \n    for(int i=0;i<14;i++)\n    {   a=arr[i].A;\n        b=arr[i].B;\n        d1=sdSegment(p, a,b );\n        //d1=lineSegment(p, a,b );\n        dfin=min(dfin,d1);\n         if(i==3)\n        { colout=D2(vec3(1.0,1.0,0.0)+colin, colout,abs(d1)-0.01); }\n        else if(i==6)  //brazo der\n        { colout=D2(vec3(0.0,1.0,0.0)+colin, colout,abs(d1)-0.01); }\n        else if(i==9) //rodilla izq\n        { colout=D2(vec3(1.0,.0,1.0)+colin, colout,abs(d1)-0.01); }\n        else if(i==12) //rodilla der\n        { colout=D2(vec3(0.0,1.0,1.0)+colin, colout,abs(d1)-0.01); }\n        else\n        { colout=D2(colin, colout,abs(d1)-0.01); }\n    }\n    \n   //pesa\n   \n   vec2 PA=vec2(0.1,arr[4].B.y);\n   vec2 PB=vec2(0.5,arr[4].B.y);\n   \n   //float d3= sdSegment(p, arr[4].B-vec2(0.1,0.0), arr[7].B+vec2(0.1,0.0) );\n   float d3= sdSegment(p, PA, PB );\n   colout=D2(vec3(0.0), colout,abs(d3)-0.01);\n   \n   ///float d4=sdBox(p-arr[4].B+vec2(0.1,0.0),vec2(0.01,0.02) );\n   float d4=sdBox(p-PA,vec2(0.01,0.02) );\n   colout=D2(vec3(0.5), colout,d4-0.01);\n   \n   float d5=sdBox(p-PB,vec2(0.01,0.02) );\n   colout=D2(vec3(0.5), colout,d5-0.01);\n   \n   \n   return  colout; \n}\n\nvec3 suelo(vec2 p, vec3 colout)\n{   float fx=0.01*sin(p.x*20.0);\n    float d1=fx+1.15+p.y;\n    d1=abs(d1)-1.7;\n    colout=D2(vec3(0.0,1.0,0.0)-p.y,colout,d1);\n    return colout;\n}\n\nvec3 lineah(vec2 p, vec3 colout)\n{   float d1;\n    d1=p.y-0.5;\n    d1=abs(d1)-0.001;\n    colout=D2(vec3(0.0),colout,d1);\n    return colout;\n}\n\n\nvec3 montes(vec2 p, vec3 colout)\n{//Mountains\n    ///https://www.shadertoy.com/view/MfyGW1\n    float y = abs(fract(p.x*5.0)-0.5)*0.1;\n    y+=abs(fract(p.x*12.0)-0.5)*0.05+0.75;\n    y+=sin(p.x*8.0)*0.05;\n    y+=sin(p.x*15.0)*0.02;\n    y+=0.01;\n    float m1 = smoothstep(y-0.003,y+0.003,p.y);\n    colout = mix(vec3(0.4,0.2,0.1),colout,m1);\n    return colout;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    uv-=vec2(0.15,-1.35);\n    float esc=0.56;\n    uv*=esc;\n    vec2 uv0=uv;\n    float t=iTime;\n    vec3 col=vec3(0.0,0.0,1.0)-uv.y+0.75; \n    col= montes(uv,col);\n    col=suelo(uv, col);\n    col= hacerCuerpo(uv-vec2(-0.3,0.0),col,vec3(1.0,0.0,0.0),0,0.015);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}