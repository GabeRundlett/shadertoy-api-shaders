{
    "Shader": {
        "info": {
            "date": "1547037961",
            "description": "A simple test with waves",
            "flags": 0,
            "hasliked": 0,
            "id": "3dl3RX",
            "likes": 1,
            "name": "Waves Eseris",
            "published": 3,
            "tags": [
                "seawave"
            ],
            "usePreview": 0,
            "username": "Eseris",
            "viewed": 287
        },
        "renderpass": [
            {
                "code": "const vec3 SkyCol = vec3(.5, .7, 1.);\nconst vec3 White  = vec3(1.);\nconst vec3 SeaTop = vec3(.1, .2, .9);\nconst vec3 SeaBot = vec3(.3, .5, 1.);\nconst float Horizon = .5;\n\nfloat wave(float freq, float amp, float x, float phase) {\n    return amp * sin(freq * x + phase);\n}\n\nfloat rand(float x) {\n    return fract(sin(x)*43758.5453123);\n}\n\nfloat randWaves(float seed, float x, float t) {\n    float p = 0.;\n    for(int i = 0; i < 20; ++i) {\n        float amp = rand(seed * float(i) * .473);\n        float freq = rand(amp*8736.);\n        p += wave(freq * 50., amp * .02, x, pow(freq, .1) * t + rand(seed));\n    }\n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    float t = iTime;\n    float p = Horizon + randWaves(1., uv.x, t*3.);\n    \n    vec3 col;\n    if(uv.y < p)\n        col = mix(SeaBot, SeaTop, smoothstep(0., Horizon, uv.y));\n    else\n    \tcol = mix(White, SkyCol, smoothstep(Horizon, 1., uv.y));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}