{
    "Shader": {
        "info": {
            "date": "1522673297",
            "description": "Tri Poloski!",
            "flags": 64,
            "hasliked": 0,
            "id": "XdKyW1",
            "likes": 1,
            "name": "Tri Poloski!",
            "published": 3,
            "tags": [
                "audioviz",
                "tripoloski"
            ],
            "usePreview": 0,
            "username": "DonKarlssonSan",
            "viewed": 507
        },
        "renderpass": [
            {
                "code": "#define rotate(a)  mat2(cos(a), -sin(a), sin(a), cos(a))\n\nfloat getAverage(float start, float end) {\n    float sum = 0.0;\n    int count = 0;\n    for(float i = start; i < end; i += 1.0/512.0) {\n        ivec2 tx = ivec2(i*512.0, 0);\n    \n        // Audio data is in channel0\n        // Time domain\n        sum += texelFetch(iChannel0, tx, 0).x;\n        count++;\n    }\n    float average = sum/float(count);\n    return average;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    bool c;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // Make the lines start at 20% (\"bottom\")\n    if (uv.y > 0.2) {\n        uv.y -= 0.2;\n    \n        mat2 rot = rotate(-0.35);\n        uv *= rot;\n\n        float bass = getAverage(0.001, 0.005);\n        float mids = getAverage(0.005, 0.7);  \n        float highs = getAverage(0.7, 1.0);\n\n        float width = 0.07; // half width, really\n\n        // Make the lines end at the current \n        // volume level for their respecive \n        // frequency range.\n        if(uv.x > 0.3 - width && uv.x < 0.3 + width) {\n            c = bass > uv.y + 0.6;\n        } else if(uv.x > 0.5 - width && uv.x < 0.5 + width) {\n            c = mids > uv.y + 0.4;\n        } else if(uv.x > 0.7 - width && uv.x < 0.7 + width) {\n            c = highs > uv.y + 0.2;\n        }\n    }\n            \n\tfragColor = vec4(vec3(c), 1.0);\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 14106,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/comili1389/tri-poloski"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}