{
    "Shader": {
        "info": {
            "date": "1726246947",
            "description": "Overlay of 5x4 wave planes approaching each other.",
            "flags": 0,
            "hasliked": 0,
            "id": "Xc2BR1",
            "likes": 4,
            "name": "5x4-QuasiP",
            "published": 3,
            "tags": [
                "plasma",
                "quasiperiodic"
            ],
            "usePreview": 0,
            "username": "Refurio",
            "viewed": 110
        },
        "renderpass": [
            {
                "code": "const float pi = 3.1415926536;\n\nfloat speed = 0.2;\n\n// center coordinates\nfloat x0 = 21.;\nfloat y0 = 16.;\nfloat radius_lo = 1.5;\nfloat radius_hi = 35.8;\nfloat angle_speed = 0.2;\n\nconst int n = 5;\nfloat a = 360./float(n);\n\nfloat sqr(float x) {\n  return x*x;\n}\n\nfloat osc(float t, float lo, float hi) {\n  return (.5+.5*sin(t*pi))*(hi-lo)+lo;\n}\n\nvec3 hsv(float h, float s, float v) {\n    vec3 c = vec3(h,s,v);\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat w(float m, float t) {\n  return sin(m*t);\n  return exp(sin(m*t));\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  float t = iTime*speed;\n  float radius = osc(t/10., radius_lo, radius_hi);\n  float angle = t*angle_speed;\n  float w2 = iResolution.x / 2.;\n  float h2 = iResolution.y / 2.;\n  float m = h2 < w2 ? h2 : w2;\n\n  // make complex radius from r and a:\n  float rr = radius * cos(-angle*pi/180.) / m;\n  float ri = radius * sin(-angle*pi/180.) / m;\n\n  float cx = fragCoord.x - w2;\n  float cy = fragCoord.y - h2;\n  float x  = cx*rr - cy*ri + x0;\n  float y  = cx*ri + cy*rr + y0;\n\n  float g0 = 0., g1 = 0., g2 = 0., g3 = 0.;\n  for(int i = 0; i < n; ++i) {\n    float ax  = cos(a*float(i)*pi/180.);\n    float ay  = sin(a*float(i)*pi/180.);\n    float z = ay*y+ax*x+sin(float(i)*t/5.)*float(i);\n    g0 += w(.5, z);\n    g1 += w(1., z);\n    g2 += w(2., z);\n    g3 += w(1.5, z);\n  }\n  g0 = abs(g0 / float(n));\n  g1 = abs(g1 / float(n));\n  g2 = abs(g2 / float(n));\n  g3 = abs(g3 / float(n));\n//  g0 = g4/float(n)*.5+.5;\n//  g1 = g1/float(n)*.5+.5;\n//  g2 = g2/float(n)*.5+.5;\n//  g3 = g3/float(n)*.5+.5;\n//  fragColor = vec4(g1, g2, g3, 1.);\n  fragColor = vec4(hsv(t/8.+g1/3.,1.-pow(g2,1.),min(exp(-g0/1.), 1.-g1*pow(g3,.5))),1.);\n//  float gg = pow(g1,.3);\n//  fragColor = vec4(hsv(1.,0.,g1),1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}