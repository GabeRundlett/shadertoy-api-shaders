{
    "Shader": {
        "info": {
            "date": "1595853761",
            "description": "what",
            "flags": 0,
            "hasliked": 0,
            "id": "3lsfRn",
            "likes": 2,
            "name": "pattern4",
            "published": 3,
            "tags": [
                "what"
            ],
            "usePreview": 0,
            "username": "Ausfragezeichen",
            "viewed": 275
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //constants\n    float pi     = 3.14159265359;\n    //float piHalf = 1.57079632679;\n    \n    //variables\n    float zoom = 4.;\n    float speed = 0.125; //rotation speed\n    float space =3.;\n    float radius = 1.;\n    \n    \n    vec2 uv = (fragCoord *2. - iResolution.xy)/iResolution.y;\n    \n    uv *= zoom;\n    \n    vec2 gv = fract(uv);\n    \n    gv *= space;\n    gv -= space/2.;\n    \n    vec3 col = vec3(0.);\n       \n    float cycle = fract(iTime * speed); // from 0. to 1.\n    float alpha = cycle * 2. * pi; // alpha in rad from 0 to 2*pi\n    \n    vec3 coord3D = vec3(gv.x, gv.y, gv.x*gv.y); //start with slice at z=0.\n    //coord3D = vec3();\n    \n    float dist = coord3D.x * coord3D.x + coord3D.y * coord3D.y + coord3D.z * coord3D.z; //!? sqrt missing?\n    \n    float c1 = fract(iTime * speed);\n    float a1 = c1 * 2. * pi; \n    float f1 = sin(a1+gv.x)-cos(a1+gv.y);\n    coord3D.x += uv.x*f1;\n    coord3D.y += uv.y*f1;\n    coord3D.z *= coord3D.z+f1;\n    \n    float c2 = fract(iTime * speed * 0.5);\n    float a2 = c2 * 2. * pi; \n    float f2 = cos(a2+gv.x)+sin(a2+gv.y);\n    coord3D.x += uv.x*f2;\n    coord3D.y += uv.y*f2;\n    coord3D.z += coord3D.z*f2;\n    \n    float lenght3D = length(coord3D);\n    \n    if(lenght3D < radius){\n        col = vec3(coord3D.x, coord3D.y, coord3D.z);\n    }\n\n    //col += vec3(gv, 0.);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}