{
    "Shader": {
        "info": {
            "date": "1704618300",
            "description": "cyberpunk elements",
            "flags": 0,
            "hasliked": 0,
            "id": "XcBGDK",
            "likes": 20,
            "name": "Graphic Design Experiment 12",
            "published": 3,
            "tags": [
                "graphicdesign",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 927
        },
        "renderpass": [
            {
                "code": "#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.5),-antialiasing(1.5),d - b)\n#define B(p,s) max(abs(p).x-s.x,abs(p).y-s.y)\n#define deg45 .707\n#define R45(p) (( p + vec2(p.y,-p.x) ) *deg45)\n#define Tri(p,s) max(R45(p).x,max(R45(p).y,B(p,s)))\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n#define seg_0 0\n#define seg_1 1\n#define seg_2 2\n#define seg_3 3\n#define seg_4 4\n#define seg_5 5\n#define seg_6 6\n#define seg_7 7\n#define seg_8 8\n#define seg_9 9\n\nfloat random (vec2 p) {\n    return fract(sin(dot(p.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nfloat segBase(vec2 p){\n    vec2 prevP = p;\n    \n    float size = 0.02;\n    float padding = 0.05;\n\n    float w = padding*3.0;\n    float h = padding*5.0;\n\n    p = mod(p,0.05)-0.025;\n    float thickness = 0.005;\n    float gridMask = min(abs(p.x)-thickness,abs(p.y)-thickness);\n    \n    p = prevP;\n    float d = B(p,vec2(w*0.5,h*0.5));\n    float a = radians(40.0);\n    p.x = abs(p.x)-0.11;\n    p.y = abs(p.y)-0.06;\n    float d2 = dot(p,vec2(cos(a),sin(a)));\n    d = max(d2,d);\n    d = max(-(abs(prevP.x)-0.01),d);\n    //d = max(-gridMask,d);\n    return d;\n}\n\nfloat seg0(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    float mask = B(p,vec2(size,size*2.7));\n    d = max(-mask,d);\n    return d;\n}\n\nfloat seg1(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x+=size;\n    p.y+=size;\n    float mask = B(p,vec2(size*2.,size*3.7));\n    d = max(-mask,d);\n    \n    p = prevP;\n    \n    p.x+=size*1.9;\n    p.y-=size*3.2;\n    mask = B(p,vec2(size,size+0.01));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg2(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x+=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x-=size;\n    p.y+=0.05;\n    mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg3(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.y = abs(p.y);\n    p.x+=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x+=0.06;\n    mask = B(p,vec2(size,size+0.01));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg4(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    \n    p.x+=size;\n    p.y+=0.08;\n    float mask = B(p,vec2(size*2.,size*2.0));\n    d = max(-mask,d);\n\n    p = prevP;\n    \n    p.y-=0.08;\n    mask = B(p,vec2(size,size*2.0));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg5(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x-=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x+=size;\n    p.y+=0.05;\n    mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg6(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x-=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.y+=0.05;\n    mask = B(p,vec2(size,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg7(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x+=size;\n    p.y+=size;\n    float mask = B(p,vec2(size*2.,size*3.7));\n    d = max(-mask,d);\n    return d;\n}\n\n\nfloat seg8(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.y = abs(p.y);\n    p.y-=0.05;\n    float mask = B(p,vec2(size,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg9(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.y-=0.05;\n    float mask = B(p,vec2(size,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x+=size;\n    p.y+=0.05;\n    mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat checkChar(int targetChar, int char){\n    return 1.-abs(sign(float(targetChar) - float(char)));\n}\n\nfloat drawFont(vec2 p, int char){\n    p.y*=1.05;\n    float d = seg0(p)*checkChar(seg_0,char);\n    d += seg1(p)*checkChar(seg_1,char);\n    d += seg2(p)*checkChar(seg_2,char);\n    d += seg3(p)*checkChar(seg_3,char);\n    d += seg4(p)*checkChar(seg_4,char);\n    d += seg5(p)*checkChar(seg_5,char);\n    d += seg6(p)*checkChar(seg_6,char);\n    d += seg7(p)*checkChar(seg_7,char);\n    d += seg8(p)*checkChar(seg_8,char);\n    d += seg9(p)*checkChar(seg_9,char);\n    \n    return d;\n}\n\nfloat charX(vec2 p, float t){\n    vec2 prevP = p;\n    \n    p = abs(p)-0.1;\n    p.x*=-1.;\n    float a = radians(45.);\n    float thick = t;\n    float d = dot(p-vec2(thick,0.0),vec2(cos(a),sin(a)));\n    float d2 = dot(p-vec2(-thick,0.0),vec2(cos(a),sin(a)));\n    d = max(-d2,d);\n    \n    d = max(abs(prevP.y)-0.1,d);\n    return d;\n}\n\nfloat graphicItem0(vec2 p, int outline){\n    vec2 prevP = p;\n    p.y*=0.85;\n    p.x+=iTime*0.2;\n    p.x = mod(p.x,0.22)-0.11;\n    float d = charX(p,0.04);\n    \n    if(outline == 1){\n        d = abs(d)-0.002;\n    }\n    \n    return d;\n}\n\nfloat graphicItem1_0(vec2 p){\n    vec2 prevP = p;\n    float d = charX(p,0.03);\n    p.x = abs(p.x)-0.1;\n    p.y = abs(p.y)-0.08;\n    float d2 = B(p,vec2(0.03,0.02));\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y = abs(p.y)-0.06;\n    p.y*=-1.;\n    d2 = Tri(p,vec2(0.04));\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.11;\n    p.y-=0.02;\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(0.02,0.05));\n    p = prevP;\n    d2 = max(p.y-0.04,d2);\n    d2 = max(abs(p.x)-0.13,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.105;\n    p.y+=0.05;\n    p*=Rot(radians(-90.));\n    d2 = Tri(p,vec2(0.025));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat graphicItem1_1(vec2 p){\n    vec2 prevP = p;\n    p.x+=0.03;\n    p*=Rot(radians(90.));\n    float d = Tri(p,vec2(0.1));\n    p.y+=0.05;\n    float d2 = Tri(p,vec2(0.1));\n    d = max(-d2,d);\n    \n    p = prevP;\n    p.x+=0.11;\n    p*=Rot(radians(90.));\n    d2 = Tri(p,vec2(0.02));\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y-=0.08;\n    d2 = B(p,vec2(0.13,0.02));\n    float a = radians(45.);\n    p.x +=0.08;\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x-=0.028;\n    p*=Rot(radians(-45.));\n    d2 = B(p,vec2(0.02,0.17));\n    d2 = max(prevP.y-0.04,d2);\n    d2 = max(-(prevP.y+0.1),d2);\n    d2 = max(prevP.x-0.13,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y*=-1.;\n    p.x-=0.13;\n    p.y-=0.045;\n    d2 = Tri(p,vec2(0.085));\n    d2 = max(prevP.x-0.13,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x+=0.015;\n    p.y+=0.015;\n    d2 = Tri(p,vec2(0.085));\n    p.y+=0.05;\n    d2 = max(-Tri(p,vec2(0.085)),d2);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat graphicItem1_2(vec2 p){\n    vec2 prevP = p;\n    \n    float a = radians(-45.);\n    float thick = 0.03;\n    float d = dot(p-vec2(thick,0.0),vec2(cos(a),sin(a)));\n    float d2 = dot(p-vec2(-thick,0.0),vec2(cos(a),sin(a)));\n    d = max(-d2,d);\n    d = max(abs(prevP.y)-0.1,d);\n    p = prevP;\n    p.y-=0.08;\n    d2 = B(p,vec2(0.13,0.02));\n    d2 = max(dot(p-vec2(0.1,0.0),vec2(cos(a),sin(a))),d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x+=0.1;\n    p.y+=0.08;\n    d2 = B(p,vec2(0.03,0.02));\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x-=0.09;\n    d2 = dot(p-vec2(thick,0.0),vec2(cos(a),sin(a)));\n    float d3 = dot(p-vec2(-thick,0.0),vec2(cos(a),sin(a)));\n    d2 = max(-d3,d2);\n    d2 = max(abs(prevP.y)-0.1,d2);\n    d2 = max(prevP.x-0.13,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x-=0.13;\n    p.y+=0.02;\n    d2 = Tri(p,vec2(0.08));\n    d2 = max(prevP.x-0.13,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = B(p,vec2(0.13,0.04));\n    d2 = max(dot(p-vec2(-0.06,0.0),vec2(cos(a),sin(a))),d2);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat graphicItem1(vec2 p, int outline){\n    vec2 prevP = p;\n    p.x-=iTime*0.3+0.5;\n    p*=3.;\n    p.y+=0.5;\n    vec2 gv = fract(p)-0.5;\n    vec2 id = floor(p);\n    float n = random(id);\n    \n    float sc = 0.28;\n    gv*=sc;\n    vec2 prevGV = gv;\n    float d = 10.;\n    if(n<0.2){\n        d = graphicItem1_1(gv);\n    } else if(n>=0.2 && n<0.4){\n        gv.x*=-1.;\n        d = graphicItem1_1(gv);\n    } else if(n>=0.4 && n<0.6){\n        d = graphicItem1_0(gv);\n    } else if(n>=0.6 && n<0.8){\n        d = graphicItem1_2(gv);\n    } else if(n>=0.8 && n<=1.0){\n        gv.x*=-1.;\n        d = graphicItem1_2(gv);\n    }\n    \n    float a = radians(45.);\n    gv = abs(gv)-vec2(0.15,0.06);\n    d = max(dot(gv,vec2(cos(a),sin(a))),d);\n    \n    if(outline == 1){\n        d = abs(d)-0.002;\n    }\n    gv = prevGV;\n    d = max(abs(gv.x)-0.135,d);\n    d = max(abs(prevP.y)-0.12,d);\n    return d;\n}\n\nfloat graphicItem2_0(vec2 p){\n    vec2 prevP = p;\n    float d = B(p,vec2(0.02,0.13));\n    \n    float a = radians(-50.);\n    p.x -=0.02;\n    p.y-=0.05;\n    float d2 = B(p,vec2(0.02,0.04));\n    p.y = abs(p.y)-0.04;\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);\n    d = max(-d2,d);\n    \n    a = radians(50.);\n    p = prevP;\n    p.x +=0.02;\n    p.y+=0.05;\n    d2 = B(p,vec2(0.02,0.04));\n    p.y = abs(p.y)-0.04;\n    d2 = max(dot(p,vec2(cos(a),sin(a))),d2);\n    d = max(-d2,d);\n    p = prevP;\n    d = max(-(length(p)-0.005),d);\n    \n    p = prevP;\n    a = radians(-50.);\n    p.y = abs(p.y)-0.12;\n    d = max(-dot(p,vec2(cos(a),sin(a))),d);\n    return d;\n}\n\nfloat graphicItem2(vec2 p, float dir){\n    vec2 prevP2 = p;\n\n    p.x+=iTime*0.03*dir;\n    p.x = mod(p.x,0.06)-0.03;\n    p*=Rot(radians(20.));\n    vec2 prevP = p;\n\n    float d = graphicItem2_0(p);\n    \n    d = max(B(prevP2,vec2(0.15,0.105)),d);\n    \n    float d2 = abs(B(prevP2,vec2(0.16,0.12)))-0.002;\n    d2 = max(-(abs(prevP2.x)-0.14),d2);\n    d2 = max(-(abs(prevP2.y)-0.1),d2);\n    \n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat graphicItem3(vec2 p){\n    vec2 prevP = p;\n    float d = abs(B(p,vec2(0.16,0.12)))-0.002;\n    d = max(-(abs(p.x)-0.14),d);\n    d = max(-(abs(p.y)-0.1),d);\n    \n    p = abs(p);\n    p.x*=-1.;\n    p*=Rot(radians(-55.));\n    float d2 = B(p,vec2(0.002,0.15));\n    \n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat graphicItem4(vec2 p, float dir){\n    vec2 prevP = p;\n    \n    float d = 10.;\n    for(float i = 0.; i<3.; i++){\n        p*=Rot(radians(dir*iTime*i*20.0+sin(i)*110.));\n        p = abs(p)-0.05;\n        p.y+=0.05;\n        p*=1.1;\n        float d2 = graphicItem2_0(p);\n        d = min(d,d2);\n    }\n    \n    d = max(B(prevP,vec2(0.15,0.105)),d);\n    \n    float d2 = abs(B(prevP,vec2(0.16,0.12)))-0.002;\n    d2 = max(-(abs(prevP.x)-0.14),d2);\n    d2 = max(-(abs(prevP.y)-0.1),d2);\n    \n    d = min(d,d2);    \n    \n    return d;\n}\n\nfloat graphicItem5(vec2 p){\n    vec2 prevP = p;\n    \n    p.x = abs(p.x);\n    p.x*=-1.;\n    p.x-=iTime*0.1;\n    p.x = mod(p.x,0.12)-0.06;\n    p*=Rot(radians(90.));\n    p.y-=0.06;\n    float d = Tri(p,vec2(0.12));\n    p.y+=0.05;\n    float d2 = Tri(p,vec2(0.12));\n    d = max(-d2,d);\n    \n    p.x=abs(p.x);\n    p*=Rot(radians(-45.));\n    float a = radians(-50.);\n    p.x -=0.04;\n    p.y+=0.05;\n    d2 = B(p,vec2(0.02,0.04));\n    p.y = abs(p.y)-0.04;\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);\n    d = max(-d2,d);\n    \n    d = max(B(prevP,vec2(0.15,0.12)),d);\n    \n    return d;\n}\n\nfloat drawNumber(vec2 p, float n){\n    float d = drawFont(p-vec2(-0.085,0.0),int(mod(9.+iTime*n,10.0)));\n    float d2 = drawFont(p-vec2(0.085,0.0),int(mod(9.+iTime*2.*n,10.0)));\n    d = min(d,d2);\n    float numd = d;\n    p*=Rot(radians(40.));\n    p.x+=iTime*0.05;\n    p.x = mod(p.x,0.02)-0.01;\n    d2 = abs(p.x)-0.003;\n    d = max(d2,d);\n    \n    return min(abs(numd)-0.002,d);\n}\n\nfloat randomDots(vec2 p, float n2, float dir){\n    vec2 prevP = p;\n    p.y-=iTime*0.05*dir;\n    p*=35.;\n    vec2 gv = fract(p)-0.5;\n    vec2 id = floor(p);\n    float n = random(id)*n2;\n    float d = 10.;\n    if(n<0.2){\n        d = length(gv)-(0.05+abs(sin(10.*iTime*n+5.))*0.15);\n    }\n    d = max(abs(prevP.y)-0.12,d);\n    \n    p = prevP;\n    \n    d = max(B(p,vec2(0.15,0.105)),d);\n    \n    float d2 = abs(B(p,vec2(0.16,0.12)))-0.002;\n    d2 = max(-(abs(p.x)-0.14),d2);\n    d2 = max(-(abs(p.y)-0.1),d2);\n    \n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat drawAll(vec2 p){\n    vec2 prevP = p;\n    p.y+=iTime*0.1;\n    p*=3.5;\n    vec2 gv = fract(p)-0.5;\n    vec2 id = floor(p);\n    float n = random(id);\n    gv*=0.35;\n    float d = 10.;\n\n    if(n<0.17){\n        d = graphicItem2(gv,(n>=0.085)?-1.:1.);\n    } else if(n>=0.17 && n<0.34){\n        d = randomDots(gv,n*1.9,(n>=0.255)?-1.:1.);\n    } else if(n>=0.34 && n<0.51){\n        d = graphicItem3(gv);\n    } else if(n>=0.51 && n<0.68){\n        d = drawNumber(gv,n*5.);\n    } else if(n>=0.68 && n<0.85){\n        d = graphicItem4(gv,(n>=0.765)?-1.:1.);\n    } else if(n>=0.85){\n        d = graphicItem5(gv);\n    }\n    \n    return d;\n}\n\nfloat rulerItem0(vec2 p){\n    p.y = abs(p.y)-0.28;\n    float d = B(p,vec2(0.15,0.14));\n    float a = radians(-45.);\n    p.x = abs(p.x)-0.26;\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    d = abs(d)-0.005;\n    d = max(p.y+0.12,d);\n    return d;\n}\n\nfloat arrow(vec2 p){\n    p*=Rot(radians(-90.));\n    vec2 prevP = p;\n    float d = Tri(p,vec2(0.05));\n    p.y+=0.025;\n    float d2 = Tri(p,vec2(0.05));\n    d = max(-d2,d);\n    p = prevP;\n    p.x = abs(p.x)-0.036;\n    p.y+=0.056;\n    float a = radians(45.);\n    d2 = B(p,vec2(0.01));\n    p.x = abs(p.x)-0.014;\n    d2 = max(dot(p,vec2(cos(a),sin(a))),d2);\n    d = max(-d2,d);\n    return d;\n}\n\nfloat plus(vec2 p){\n    p.y+=iTime*0.1;\n    p*=3.5;\n    p.y+=0.5;\n    \n    vec2 gv = fract(p)-0.5;\n    vec2 newGV = vec2(p.x,gv.y);\n    vec2 id = floor(p);\n    \n    newGV.x = mod(newGV.x,0.5)-0.25;\n    float d = min(B(newGV,vec2(0.003,0.03)),B(newGV,vec2(0.03,0.003)));\n    return d;\n}\n\nfloat drawRulerVertical(vec2 p, int bg){\n    vec2 prevP = p;\n    p.y-=iTime*0.1;\n    \n    p*=Rot(radians(90.));\n    float d = graphicItem0(p,bg);\n\n    p = prevP;\n    p.y += sin(iTime-10.)*0.4;\n    p.x = abs(p.x)-0.13;\n    float d2 = arrow(p);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y -= sin(0.5*iTime-30.)*0.35;\n    d = max(-B(p,vec2(0.135,0.14)),d);\n    d2 = rulerItem0(p);\n    \n    d = min(d,d2);\n    return d;\n}\n\nfloat drawRulerHolizontal(vec2 p, int bg){\n    vec2 prevP = p;\n    \n    float d = graphicItem1(p,bg);\n    return d;\n}\n\nfloat drawRuler(vec2 p, int bg){\n    vec2 prevP = p;\n    \n    p.x+=sin(0.6*iTime-20.)*0.6;\n    float d = drawRulerVertical(p,bg);\n    \n    p = prevP;\n    p.y -= sin(0.5*iTime-30.)*0.35;\n    float d2 = drawRulerHolizontal(p,bg);\n    d = min(d,d2);\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 prevUV = uv;\n    \n    vec3 col = vec3(0.0);\n    float d = drawAll(uv);\n    \n    col = mix(col,vec3(0.7),S(d,0.0));\n    \n    d = plus(uv);\n    col = mix(col,vec3(0.5),S(d,0.0));\n    \n    d = drawRuler(uv,0);\n    col = mix(col,vec3(1.0),S(d,0.0));\n    \n    d = drawRuler(uv,1);\n    col = mix(col,vec3(1.),S(d,0.0));\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}