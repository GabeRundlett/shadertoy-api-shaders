{
    "Shader": {
        "info": {
            "date": "1687509000",
            "description": "The shader is counting in binary.",
            "flags": 32,
            "hasliked": 0,
            "id": "msByRw",
            "likes": 2,
            "name": "Counting Up In Binary",
            "published": 3,
            "tags": [
                "binary"
            ],
            "usePreview": 0,
            "username": "tomachi",
            "viewed": 125
        },
        "renderpass": [
            {
                "code": "#define tex0(pos) texture(iChannel0, pos)\n#define tex1(pos) texture(iChannel1, pos)\n#define tex2(pos) texture(iChannel2, pos)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Output to screen\n    fragColor = tex0(uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define tex0(pos) texture(iChannel0, pos)\n#define tex1(pos) texture(iChannel1, pos)\n#define tex2(pos) texture(iChannel2, pos)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 p = vec3(vec2(1.)/iResolution.xy, 0.);\n    float samp = tex0(vec2(uv.x - p.x, uv.y - p.y)).x;\n    float col = tex0(uv).x;\n    if (fragCoord.x <= 1. && fragCoord.y <= 1. || samp >=1.) {\n        col += -1.;\n        col = abs( col);\n    }\n    \n    fragColor = vec4(col);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}