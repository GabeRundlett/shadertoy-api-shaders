{
    "Shader": {
        "info": {
            "date": "1583263182",
            "description": "No attempts were made at optimization. Just looking for interesting aesthetics.",
            "flags": 32,
            "hasliked": 0,
            "id": "3tVXzc",
            "likes": 6,
            "name": "Semi stable collapse",
            "published": 3,
            "tags": [
                "feedback"
            ],
            "usePreview": 0,
            "username": "hamoid",
            "viewed": 383
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec3 video = texture(iChannel0, uv).rgb;\n    vec2 theOff;\n\n    float maxd = 0.0;\n    for(int i=0; i<6; i++) {\n      float a = float(i)*6.28318/6.0;\n      vec2 off = 0.03 * vec2(cos(a), sin(a));\n      vec3 old = texture(iChannel1, uv + off).rgb;\n      \n      float d = distance(old, video);\n      if(d > maxd) {\n          maxd = d;\n          theOff = off;\n      }\n    }\n    \n    vec3 feedback = texture(iChannel1, uv + theOff * 0.05).rgb;\n    \n    feedback *= (0.995 + 0.006 * smoothstep(-0.2, 0.2, feedback.r-feedback.g));\n        \n    fragColor = vec4(mix(video, feedback, 0.995), 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}