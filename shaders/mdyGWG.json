{
    "Shader": {
        "info": {
            "date": "1678984678",
            "description": "This is a variably rotating fractal using a sphere. Mouse around to make explore it.",
            "flags": 0,
            "hasliked": 0,
            "id": "mdyGWG",
            "likes": 4,
            "name": "interactive kaleidoscopic gems",
            "published": 3,
            "tags": [
                "raymarching",
                "fractal",
                "golf"
            ],
            "usePreview": 0,
            "username": "timmaffett",
            "viewed": 214
        },
        "renderpass": [
            {
                "code": "// Fork of \"gem_220725\" by tk87. https://shadertoy.com/view/7t3cRr\n// 2023-03-16 16:06:05\n\n/*\n    This is a rewrite of the following tweet in ShaderToy format.\n    https://twitter.com/tk87__/status/1551506550262755328\n*/\n#define SLOW_DOWN_RATIO    7.\n#define MAX_ITERATIONS   50.\n#define INNER_COMPLEXITY  3\n\nconst vec4 hsv_t = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\nvec3 hsv(float h, float s, float v){\n    vec3 p = abs(fract(vec3(h) + hsv_t.xyz) * 6.0 - vec3(hsv_t.w));\n    return v * mix(vec3(hsv_t.x), clamp(p - vec3(hsv_t.x), 0.0, 1.0), s);\n}\nmat2 rotate2D(float r){\n    float cr=cos(r);\n    float sr=sin(r);\n    //return mat2(cos(r), sin(r), -sin(r), cos(r));\n    return mat2(cr, sr, -sr, cr);\n}\n\nvoid mainImage( out vec4 O, in vec2 FC ){\n     vec2 mouse = (iMouse.xy == vec2(0.)) ? vec2(1.0) : iMouse.xy/iResolution.xy;\n    \n    vec2 r = iResolution.xy;\n    float t = iTime/SLOW_DOWN_RATIO;\n    vec3 baseFC = normalize(vec3((FC.xy*2.-r.xy)/r.x,1.));\n    mat2 rotYZ = rotate2D(mouse.x*1.*(t/2.0));\n    mat2 rotXY = rotate2D(mouse.y*0.3*t);\n    mat2 rotXZ = rotate2D((mouse.x/mouse.y)*.5*(t/1.0));\n    \n    float d,a;\n    for(float i=0.;i<MAX_ITERATIONS;i++){\n        vec3 p=baseFC*(a+=d),q;\n        p.z-=3.2;\n        for(int j=0;j<INNER_COMPLEXITY;j++){\n            p=abs(p)-.2;\n            if(/*mod(i,5.0)<1. ||*/ mod(t,20.)>10.0) {\n                p.yz*=rotYZ;\n            } else {\n                p.xy*=rotXY;\n            }\n            p.xz*=rotXZ;\n        }\n        q=mod(p,1.)-.5;\n        d=abs(length(q)-.75);\n        if(d<1e-3) {\n            O.rgb += hsv(sin(q.z*8.+t),.7,.01/abs(sin(p.z+t))+.2);\n            d+=3e-3;\n        }\n    }\n    O = vec4(O.rgb,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}