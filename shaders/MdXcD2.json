{
    "Shader": {
        "info": {
            "date": "1489916675",
            "description": "A quick visualisation of the relationship between the Mandelbrot set and the Julia set corresponding to a given point.\n\nPlay around with the value of z0 on line 26 to change the part of the set to explore!",
            "flags": 0,
            "hasliked": 0,
            "id": "MdXcD2",
            "likes": 14,
            "name": "Juliamorph",
            "published": 3,
            "tags": [
                "fractal",
                "julia",
                "mandelbrot"
            ],
            "usePreview": 0,
            "username": "WAHa_06x36",
            "viewed": 1005
        },
        "renderpass": [
            {
                "code": "float triangle(float x) {\n\tx -= 1.0;\n    x /= 4.0;\n    x -= floor(x);\n    x *= 4.0;\n    x -= 2.0;\n\tx = abs(x);\n    x -= 1.0;\n    return x;\n}\n\nfloat square(float x) {\n    x /= 4.0;\n    x -= floor(x);\n\treturn 1.0 - 2.0 * step(0.5, x);\n}\n\nvec3 palette(float i) {\n\tfloat x = 0.5 + 0.5*triangle(i / 30.0);\n    return vec3(2.0 * x, 2.0 * x - 0.5, 2.0 * x - 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 pos = (2.0 * fragCoord.xy - iResolution.xy) / max(iResolution.x, iResolution.y);\n    vec2 z0 = vec2(-0.905, 0.25);\n    //vec2 z0 = vec2(-1.748, 0.001);\n    float zoom = 1.0 * exp(7.0 * smoothstep(0.0, 1.0, 0.5 + 0.5 * triangle(iTime / 20.0 + 1.0)));\n\tvec2 z = 2.0 / zoom * pos + z0;\n\n    float t = iTime / 2.0;\n    float r = length(pos);\n    float blend = clamp(2.0 * triangle(t) - square(t + 1.0) * r * 0.5, 0.0, 1.0);\n    \n    vec2 c = mix(z, z0, smoothstep(0.0, 1.0, blend));\n    \n    for(int i = 0; i < 128; i++) {\n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y);\n        z += c;\n        if(dot(z,z) > 4.0) {    \n\t\t    fragColor = vec4(palette(float(i)),1.0);\n            return;\n        }\n    }\n\n    fragColor = vec4(0.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}