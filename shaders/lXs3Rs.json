{
    "Shader": {
        "info": {
            "date": "1707869573",
            "description": "copy sick",
            "flags": 0,
            "hasliked": 0,
            "id": "lXs3Rs",
            "likes": 3,
            "name": "mtn2",
            "published": 3,
            "tags": [
                "mtn2"
            ],
            "usePreview": 0,
            "username": "vonboot",
            "viewed": 237
        },
        "renderpass": [
            {
                "code": "float km = 0.3;\n\nfloat h1(vec2 p) {\n    return textureLod(iChannel0, p.xy*.03, 0.0).x;\n}\n\nfloat h(vec2 p) {\n    float ret = 0.0;\n    float m = 1.0;\n    for(int i=0; i<8; i++) {\n        ret += m * h1(p/m);\n        m *= -0.5;\n    }\n    return ret * ret;\n}\n\nfloat df(vec3 p) {\n    return p.y - h(p.xz);\n}\n\nmat3 rotationXY( vec2 angle ) {\n\tvec2 c = cos( angle );\n\tvec2 s = sin( angle );\n\treturn mat3(\n\t\tc.y      ,  0.0, -s.y      ,\n\t\ts.y * s.x,  c.x,  c.y * s.x,\n\t\ts.y * c.x, -s.x,  c.y * c.x\n\t);\n}\n\n// from https://iquilezles.org/articles/rmshadows\nfloat softshadow( in vec3 ro, in vec3 rd, float mint, float maxt, float k ) {\n    float res = 1.0;\n    float t=mint;\n    for(int i=0;i<8; i++) {\n        if(t>maxt) break;\n        float h = df(ro + rd*t);\n        if( h<0.001 )\n            return 0.0;\n        res = min( res, k*h/t );\n        t += h*km;\n    }\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\t{\n\tvec2 p2=(fragCoord.xy/iResolution.xy)*2.0-1.0;\n    vec2 m=iMouse.yx/iResolution.yx*2.-1.;\n    m.y = -m.y;\n    vec3 ldir = normalize(vec3(-1.0,.01,.01));\n\tvec3 o = vec3(0.0, 0.0, iTime * .2);\n    o.y = h1(o.xz) + .2;\n    mat3 rot = rotationXY(m*vec2(0.5,4.0)+vec2(0.5,0.0));\n    //mat3 rot = rotationXY(m+vec2(1.,0.0));\n\tvec3 dir = rot * normalize(vec3(p2*vec2(1.77,1.0),2.0));\t\t// screen ratio (x,y) fov (z)\n\tvec3 hit;\n\tfloat t=0.0, k;\n\tfor(int i=0;i<40;i++) {\n\t\tk=df(hit=o+dir*t);\n\t\tt+=k*km;\n\t}\n    vec2 e=vec2(-0.01, 0.0);\n    float hh = h((hit.xz)*128.);\n    hit += hh * vec3(0.007, -0.002, 0.007);\n    vec3 n = normalize(vec3(k-df(hit+e.xyy), k-df(hit+e.yxy), k-df(hit+e.yyx)));\n    float ss = softshadow(hit, ldir, .01, .01, .01 );\n    float dif = dot(n,ldir);\n    vec3 fogc = mix(vec3(.01,.01,.01), vec3(1.0,1.1,1.9), (pow(1.0+dot(dir,ldir), 2.0))*.25);\n    vec3 c = vec3(1.6,.5,.4) *  (dif + .1) * (ss + .1);\n    c = mix(c, fogc, min(1.9,t*.1));\n    fragColor = vec4(c,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}