{
    "Shader": {
        "info": {
            "date": "1597487376",
            "description": "noise from sin",
            "flags": 0,
            "hasliked": 0,
            "id": "WlsBzs",
            "likes": 1,
            "name": "noise by chenxiyu",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "chenxiyu",
            "viewed": 244
        },
        "renderpass": [
            {
                "code": "vec3 frequency(vec2 uv, float cycle, float tangle)\n{\n    float l = uv.x * cos(tangle) + uv.y * sin(tangle);\n    float c = 0.5 + 0.5 * cos(cycle * l);\n    return vec3(c,c,c);\n}\n\nfloat random(float val)\n{\n\treturn fract(sin(val * 12.9898) * 43756.5453123 );   \n}\n\n#define loops 100\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(0,0,0);\n    \n    \n\tfloat wightSum = 0.0;\n    for(float i = 0.0; i < float(loops); i++)\n    {\n        float cycle = random(i) * 400.0;\n        float wight = (1.0/cycle) * 400.0;\n        wightSum += wight;\n        float tangle =  random(i * float(loops) + float(loops)) * 300.0;\n        col += frequency(uv, cycle, tangle);\n    }\n    col /= float(loops);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}