{
    "Shader": {
        "info": {
            "date": "1685936386",
            "description": "just screwing arround lol",
            "flags": 0,
            "hasliked": 0,
            "id": "clVXR1",
            "likes": 0,
            "name": "pulsating circles",
            "published": 3,
            "tags": [
                "pulse",
                "circle"
            ],
            "usePreview": 0,
            "username": "ravenstargames",
            "viewed": 147
        },
        "renderpass": [
            {
                "code": "float sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nfloat ndot(vec2 a, vec2 b ) { return a.x*b.x - a.y*b.y; }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= 8.0 * (sin(iTime) + 64.0)/ 64.0;\n    float l = fract(length(uv) * 4.0);\n    \n    uv -= 0.5;\n    //pulse\n    vec2 pr = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n\tfloat dr = sdCircle(pr,sin(l*11.70*8.0 + iTime)/8.0);\n    \n    //circle\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n\tfloat d = sdCircle(p,sin(l*8.0 + iTime)/8.0);\n    d = fract(d);\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    col -= abs(l) + smoothstep(0.01,0.2,abs(d));\n    col += 0.8 + 0.2*cos(150.0*d);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}