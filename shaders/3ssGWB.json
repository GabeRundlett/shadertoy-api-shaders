{
    "Shader": {
        "info": {
            "date": "1547398722",
            "description": "(re)starting with random opinion,\neach cell get the average opinion of its neighborhood (  #def CASE for variants )\nFunnily, this does not end up with unanimity.\nTry changing the initial probability: CASE=0: even with 60 / 40%, islands remains if no noise",
            "flags": 32,
            "hasliked": 0,
            "id": "3ssGWB",
            "likes": 2,
            "name": "simu: copy neighbors opinion",
            "published": 3,
            "tags": [
                "simulation",
                "automata",
                "short",
                "ising",
                "simulatedannealing"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 486
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 O, vec2 U) { O = T(U); }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define CASE 0  // 0: opt for dominant opinion 1: only if N more opponants\n\n#define N(U)   fract(sin(dot(U, vec2(12.9898, 78.233)) - iTime) * 43758.5453)\n    \nvoid mainImage( out vec4 O, vec2 U )\n{\n    O -= O;\n  //for (int i=1; i<8; i++) if (i!=2 && i!=6) // 4-neighbors\n    for (int i=0; i<9; i++)                   // 8 neighbors\n        O += T(U+vec2(i%3-1,i/3-1));\n    O -= T(U);\n    \n#if CASE==0\n    O = sign( O ); // opt for dominant neighbors opinion\n // O =  O /7.9;   // variant with opinion strength\n#else              // change mind only if N more people think the opposite\n    if ( abs( O - T(U) ).x > 3. ) O = sign( O );\n#endif\n                       \n    iFrame==0 // || N(U+.1)>.99     // uncomment ||... for injecting noise\n        ? O = vec4( N(U) < .5 ? -1. : 1. ) : O;\n                        // ^^^ try other initial balance\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "//#define T(U) texelFetch( iChannel0, ivec2(U), 0)\n//#define T(U) texelFetch( iChannel0, ivec2(U)%ivec2(iResolution.xy), 0)\n#define T(U) texelFetch( iChannel0, ivec2(mod(U,iResolution.xy)), 0)",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}