{
    "Shader": {
        "info": {
            "date": "1672910107",
            "description": "golfed version of 2021 chars \"BlackHole\" by bloodnok. [url]https://shadertoy.com/view/XdjXDy[/url]\n",
            "flags": 0,
            "hasliked": 0,
            "id": "ctBGRD",
            "likes": 39,
            "name": "BlackHole - golf",
            "published": 3,
            "tags": [
                "procedural",
                "raymarch",
                "golf"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 1653
        },
        "renderpass": [
            {
                "code": "// golfed version of 2021 chars \"BlackHole\" by bloodnok. https://shadertoy.com/view/XdjXDy\n// more readable version at the end\n\n\n/**/ // --- 492 chars   -2 fab -5 by coyote, -5 by Xor\n\n#define N normalize//\n#define V vec3\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    float d = .1, w;\n    V  R = iResolution, L,\n       p = 6.3 * V(iMouse) / R,\n       D = p = N( V(cos(p.x), tan(p.y+d), sin(p)) );\n    D.y += .05;\n    D = N( mat3( L = N(cross( D, V(0,1,d) )), \n                 cross(L,D), \n                 D*1.5 ) \n           * V( R.xy-U-U, R.y ) \n         );  \n    p += p - D * texture( iChannel0, D/d+iTime ).r * d;\n    \n    for( O *= 0. ; O.a < .2 && d > .05;\n         D += N( p -= D * .02 ) /2e2 / w\n       )  \n        O +=  vec4(   ( .05 + texture( iChannel1, \n                                       vec2( d = sqrt( w = dot(p,p) ) - .25, \n                                             atan(p.x,p.z) * ( .1 + d*.02 ) + iTime*.2 \n                                           )\n                                      ).r ) \n                    * ( V(80,64,48) / d - d * V(40,36,40) )\n                    * V( w - 1.6*d + p.y*p.y*25e2 < .75 )\n                    + V(3,2.7,2) / w  \n                  , 1 ) / 1e3;    \n}\n\n/**/\n\n\n\n\n/** // --- 504 chars   -6 by coyote, -12 by Xor\n\n#define N normalize//\n#define V vec3\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    float d = .1, w;\n    V  R = iResolution, L,\n       p = 6.3 * V(iMouse) / R,\n       D = p = N( V(cos(p.x), tan(p.y+d), sin(p)) );\n    U += U - R.xy;\n    D.y += .05;\n    L = N( cross( D, V(0,1,d) ) );\n    D = N( U.x*L + U.y*cross(L,D) - D*1.5*R.y );\n    p += p+ D * texture( iChannel0, D/d+iTime ).r * d;\n    \n    for( O *= 0. ; O.a < .2 && d > .05;\n         D -= N( p += D * .02 ) /2e2 / w\n       )  \n        d = sqrt( w = dot(p,p) ) - .25,     \n        O +=  vec4(   ( V(80,64,48) / d - d * V(40,36,40) )\n                    * V( length(V(d-.55, p.yy*36.)) < 1. )\n                    * ( .05 + texture( iChannel1, \n                                       vec2(d+.25, \n                                             atan(p.x,p.z) * ( .1 + d*.02 ) + iTime*.2 \n                                           )\n                                      ).r ) \n                    + V(3,2.7,2) / w  \n                  , 1 ) / 1e3;    \n}\n\n/**/\n\n\n\n\n/** // --- 523 chars  -1 ch by fab,  -11 ch by xor,  -9 ch by coyote \n\n#define N normalize//\n#define V vec3\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    V  R = iResolution,\n       p = 6.3 * V(iMouse) / R,\n       D, L;\n       U += U - R.xy;\n    float l, d = .1, w;\n    D = p = N( V(cos(p.x), tan(p.y+d), sin(p)) );\n    D.y += .05; \n    L = N( cross( D, V(0,1,-d) ) );\n    D = N( U.x*L + U.y*cross(L,D) - D*1.5*R.y );      \n    p += p+ D * texture( iChannel0, D/d+iTime ).r * d; // broken ! :-(\n    \n    for( O *= 0. ; O.a++ < 2e2 && d > .05;\n         D -= N( p += D * .02 ) /2e2 / w\n       )  \n        d = sqrt( w = dot(p,p) ) - .25,     \n        O.rgb +=  (   ( V(80,64,48) - d*d* V(40,36,40) )\n                    * ( .05 + texture( iChannel1, \n                                       vec2( l = length(p), \n                                             atan(p.x,p.z) * ( .095 + l*.02 ) + iTime*.2 \n                                           )\n                                      ).r ) \n                    / d\n                    * step( length(V(l-.8, p.y*50.,0)) , 1. ) \n                    + V(3,2.7,2) / w  \n                  ) / 1e3;     \n}\n\n\n\n\n\n/** // --- 544 chars  -11 ch by coyote,  -11 by xor,  -23 by fab\n\n#define N normalize\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n\tvec2  R = iResolution.xy,\n          M = 6.3 * iMouse.xy / R;\n          U+= U - R;\n    float l = M.x, d =  M.y+.1, w;\n\tvec3  p = N( vec3(cos(l), tan(d), sin(l)) ),\n\t      F = vec3(0,.05,0) + p ,\n\t      L = N( cross( F, vec3(0,1,-.1) ) ),\n\t      D = N( U.x*L + U.y*cross(L,F) - F*1.5*R.y );      \n    p += p+ D * texture( iChannel0, D/.1+iTime ).r * .1;\n    \n    for( O *= 0. ; O.a++ < 2e2 && d > .05;\n         D -= N( p += D * .02 ) /2e2 / w\n       )  \n        d = sqrt( w = dot(p,p) ) - .25,     \n        O.rgb +=  (   ( vec3(80,64,48) - d*d* vec3(40,36,40) )\n                    * ( .05 + texture( iChannel1, \n                                       vec2( l = length(p.xz), \n                                             atan(p.x,p.z) * ( .095 + l*.02 ) + iTime*.2 \n                                           )\n                                      ).r ) \n                    / d\n                    * step( length(vec2(l-.8, p.y*50.)) , 1. ) \n                    + vec3(3,2.7,2) / w  \n                  ) / 1e3;     \n}\n\n\n\n\n\n/** // --- 589 chars   -5 by iq , -24 by fab , -12 for dithering \n\n#define N normalize\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n\tvec2  R = iResolution.xy,\n          U = ( u+u - R ) / R.y,\n          M = 6.3 * iMouse.xy / R;\n    float l =  M.x, d =  M.y,\n          t=0., w, r = .3, f; // r: radius  f: noncaptured\n\tvec3  p = vec3( cos(l) * cos(d),\n                             sin(d),\n                    sin(l) * cos(d) ),\n\t      F = vec3(0,.05,0) + p ,\n\t      L = N( cross( F, vec3(0,1,-.1) ) ),\n\t      D = N( U.x*L + U.y*cross(L,F) - F*1.5 );      \n    p += p+ D * texture( iChannel0, D/.1+iTime ).r * .1;\n    \n    for( O *= 0. ; t++<2e2; // dt    mass\n         D -= N( p += D * f * .02 ) /2e2 / w\n       )\n        w = dot(p,p),\n        f = smoothstep(0.,.01, d = length(p) - r ),     \n        O.rgb += f/1e3 *(    ( vec3(80,64,48) - d*d* vec3(40,36,40) )\n                           * ( .05 + texture( iChannel1, \n                                              vec2( l = length(p.xz), \n                                                    atan(p.x,p.z) * ( .1 + (l - r)*.02 ) + iTime*.2 \n                                                  )\n                                             ).r ) \n                           / d\n                           * step( length(vec2(l-.8, p.y*50.)) , 1. ) // sdTorus\n                           +  vec3(10,9,7) / w * .3  \n                        );     \n}\n\n\n\n\n\n/** // --- 630 chars \n\n#define N normalize\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n\tvec2  R = iResolution.xy,\n          U = ( u+u - R ) / R.y,\n          M = iMouse.xy / R;\n    float l =  M.x      * 6.28,\n          d = (M.y-.24) * 6.28,\n          t=0., r = .3, f; // r: radius  f: noncaptured\n\tvec3  p = 2.* vec3( cos(l) * sin(d),\n                                 cos(d),\n                        sin(l) * sin(d) ),\n\t      F = N( vec3(0,-.1,0) - p ),\n\t      L = N( cross(vec3(0,1,-.1), F) ),\n\t      D = N( F*1.5 + U.x*L + U.y*cross(F, L) );      \n  //p += D * H( D + iTime ) * .02;\n    p += D * fract(1e4*sin(dot( D +iTime, vec3(R-17.,173)))) * .02;\n    \n    for( O *= 0. ; t++<2e2; // dt    mass\n         D -= N( p += D * f * .02 ) /2e2 / dot(p,p) \n       )\n        U =  vec2( l = length(p.xz), \n                   atan(p.x,p.z) * ( .1 + (l - r)*.02 ) + iTime*.2 \n                 ),\n        f = smoothstep(0.,.01, d = length(p) - r ),     \n        O.rgb += f *(    mix( vec3(1,.8,.6), vec3(.5,.35,.1),  d*d )\n                       * ( texture(iChannel1,U).r+.05 ) \n                       * .08 / d\n                       * step( length(vec2(l-.8, p.y*50.)) , 1. ) // sdTorus\n                      +  vec3(1,.9,.7) / dot(p,p) * .003  \n                    );     \n}\n\n/**/",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "volume",
                        "id": 39,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}