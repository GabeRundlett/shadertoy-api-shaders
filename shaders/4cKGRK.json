{
    "Shader": {
        "info": {
            "date": "1712978440",
            "description": "Simple model of the Bragg Peak",
            "flags": 32,
            "hasliked": 0,
            "id": "4cKGRK",
            "likes": 10,
            "name": "Bragg Peak",
            "published": 3,
            "tags": [
                "physics",
                "radiation",
                "proton",
                "ion"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 260
        },
        "renderpass": [
            {
                "code": "Main {\n    Q = vec4(0);\n    \n    for (float i = 0.; i < 50.; i++) {\n        vec4 q  = A(vec2(U.x,R.y-R.y*.02*i));\n        \n        vec2 u = U/R;\n        Q += sin(-2.+(50.-i)/50.*3.1+vec4(1,2,3,4))*exp(-(u.y-q.x)*(u.y-q.x)/(1e-5+dFdx(q.x)*dFdx(q.x)));\n    }\n    \n\n\n}\n/*\nMain { // Demonstrates Brag peak as used in medical physics to constrain dose of radiation\n    Q = vec4(0);\n    if (iFrame >0) discard;\n    for (float i = -500.; i < 500.; i++) {\n        vec2 a = vec2(0.,.5*R.y), b = vec2(R.x,.5*R.y);\n        a.xy -=.5*R;\n        a.xy *= ei(3.14159*i/500.);\n        a.xy +=.5*R;\n        b.xy -=.5*R;\n        b.xy *= ei(3.14159*i/500.);\n        b.xy +=.5*R;\n        float x = clamp(dot(U-a,b-a)/dot(b-a,b-a),0.,1.);\n        \n        vec4 q  = A(vec2(x*R.x,.4*R.x));\n        Q += q.x/100.*exp(-.2*line(U,a,b));\n    }\n\n}*/\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "Main {\n\n    float p = 0.;\n    float v = U.y/R.y;\n       \n    for (float i = 0.; i < U.x; i++) {\n    \n        Q.x = v*(.2+1./(.05*(.3+.8*U.y/R.y)+15.*v*v));\n        //Q.x = 2.*v/(U.y/R.y+3.*v*v); // (for electrons)\n        \n        v -= 3.8*Q.x/R.x;\n        \n        p += v;\n    }\n    \n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel1,(U)/R)\n#define C(U) textureiChannel2,(U)/R)\n#define D(U) texture(iChannel3,(U)/R)\n#define Main void mainImage(out vec4 Q, in vec2 U) \n\nfloat line (vec2 p, vec2 a, vec2 b) { \n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\n\n#define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}