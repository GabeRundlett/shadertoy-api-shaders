{
    "Shader": {
        "info": {
            "date": "1526736414",
            "description": "2d",
            "flags": 0,
            "hasliked": 0,
            "id": "ls3BW2",
            "likes": 5,
            "name": "Quantum Kaboom",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "Alkama",
            "viewed": 998
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926\n#define TAU 2.*PI\n#define ss(a,b,c) smoothstep(a,b,c)\n#define sat(a) clamp(a,0.,1.)\n#define sat3(a) clamp(a,vec3(0.),vec3(1.))\n#define rnd(t) (fract(sin(t*427.)*1789.))\n#define rnd4(t) vec4(fract(sin(t*427.)*651.),fract(sin(t*273.)*1741.),fract(sin(t*721.)*1393.),fract(sin(t*913.)*597.))\n\nstruct ray { vec3 o,d; };\nray makeray(vec2 uv, vec3 o, vec3 d) {\n  vec3 z=normalize(d-o),x=cross(vec3(0,1,0),z),y=cross(z,x),c=o+z*1.5,i=c+uv.x*x+uv.y*y;\n  ray a; a.o=o; a.d=normalize(i-o);\n  return a;\n}\nvec3 proj(ray r, vec3 p) { return r.o+r.d*max(dot(p-r.o,r.d),0.); }\nfloat dist(ray r, vec3 p) { return length(p-proj(r,p)); }\nfloat sprite(ray r, vec3 p, float s, float b) { float d=dist(r,p);d=ss(s,s*(1.-b),d)+d*3.*ss(s+b,s-b,d);return d; }\nvec3 bobz(ray r) {\n  float t=iTime*0.25;\n  vec3 acc=vec3(0.);\n  float rd=4.;\n  for(float i=0.;i<1.0;i+=.005) {\n    float ti=fract(t+i);\n    float ph=acos(1.-2.*i);\n\tfloat th=PI*(1.+pow(5.,.5))*i*200.;\n    vec3 p=vec3(cos(th)*sin(ph),sin(th)*sin(ph),cos(ph));\n    p*=vec3(rd*ti*cos(i*TAU)*sin(ti*TAU),rd*ti*sin(i*TAU)*sin(ti*TAU),rd*ti*cos(ti*TAU));\n    p*=vec3(sin(ti),cos(ti),1.-ti);\n    p*=vec3(sin(cos(t+sin(t))+i*TAU),cos(sin(t+sin(t))+i*TAU),4.);\n    acc += vec3(1.-ti,ti,i)*sprite(r,p,.01,.1);\n  }\n  return acc;\n}\nvec3 storm(ray r) {\n  float t=iTime*0.5;\n  vec3 acc=vec3(0);\n  r.d.x = pow(abs(r.d.y), 1.3);\n  r.d.y = pow(abs(r.d.x), 1.9);\n  r.d.x += 5.1*abs(sin(r.d.x*.5));\n  for(float i=0.;i<1.0;i+=.1) {\n    if(rnd(i)>.9) continue;\n    vec4 rnd=rnd4(i);\n    float ti=fract(t+i);\n    vec3 p=vec3(2.1+2.1*sin(ti*4.*PI),cos(sin(ti*2.)*4.*PI)*0.9,50.-50.*ti);\n    float c = sprite(r,p,.7*ti,.999);\n    acc += vec3(1.,.7,.3)*rnd.xyz*c*c*c;\n  }\n  vec3 a=sat3(pow(acc, vec3(2.)));\n  vec3 b=0.05*sat3(pow(acc, vec3(0.2)));\n  return sat3(a+b);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/iResolution.xy;\n  uv -= 0.5;\n  uv /= vec2(iResolution.y / iResolution.x, 1);\n  vec3 o=vec3(0,0,-3);\n  vec3 d=vec3(0);\n  ray r=makeray(uv,o,d);\n  vec3 p=vec3(0,0,3);\n  vec3 c=vec3(0);\n  c+=bobz(r);\n  c+=storm(r);\n  c+=vec3(0,.4,.75)*pow(abs(uv.y),1.2);\n  fragColor = vec4(c,1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}