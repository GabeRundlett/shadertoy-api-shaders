{
    "Shader": {
        "info": {
            "date": "1665932583",
            "description": "This is a cubemap Render Target ",
            "flags": 0,
            "hasliked": 0,
            "id": "cdXGDr",
            "likes": 2,
            "name": "This is a cubemap Render Target ",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "MacLin",
            "viewed": 260
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 texCoord = fragCoord.xy / iResolution.xy; \n    vec2 thetaphi = ((texCoord * 2.0) - vec2(1.0)) * vec2(3.1415926535897932384626433832795, 1.5707963267948966192313216916398); \n    vec3 rayDirection = vec3(cos(thetaphi.y) * cos(thetaphi.x), sin(thetaphi.y), cos(thetaphi.y) * sin(thetaphi.x));\n\tfragColor = texture(iChannel0, rayDirection);\n    // for apply the equirectangular map like a cubemap:\n    // rayDirection = normalize(rayDirection);\n    // texture(uTexEnvMap, vec2((atan(rayDirection.z, rayDirection.x) / 6.283185307179586476925286766559) + 0.5, acos(rayDirection.y) / 3.1415926535897932384626433832795));    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 41,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a//media/previz/cubemap00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "/*\nvoid mainCubemap( out vec4 fragColor, in vec2 fragCoord, in vec3 rayOri, in vec3 rayDir )\n{\n    // Ray direction as color\n    vec3 col = 0.5 + 0.5*rayDir;\n\n    // Output to cubemap\n    fragColor = vec4(col,1.0);\n}\n*/\nfloat max3(vec3 rd) {\n   return max(max(rd.x, rd.y), rd.z);\n}\n\nvoid mainCubemap( out vec4 fragColor, in vec2 fragCoord, in vec3 rayOri, in vec3 rayDir )\n{\n    vec3 rd = abs(rayDir);\n    \n    vec3 col = vec3(0);\n    if (max3(rd) == rd.x) col = vec3(1, 0, 0);\n    if (max3(rd) == rd.y) col = vec3(0, 1, 0);\n    if (max3(rd) == rd.z) col = vec3(0, 0, 1);\n    \n    fragColor = vec4(col,1.0); // Output cubemap\n}",
                "description": "",
                "inputs": [],
                "name": "Cube A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 41
                    }
                ],
                "type": "cubemap"
            }
        ],
        "ver": "0.1"
    }
}