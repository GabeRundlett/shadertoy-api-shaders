{
    "Shader": {
        "info": {
            "date": "1686033909",
            "description": "An intresting transition between colors",
            "flags": 0,
            "hasliked": 0,
            "id": "dtGSDR",
            "likes": 2,
            "name": "Intresting Transition",
            "published": 3,
            "tags": [
                "transition"
            ],
            "usePreview": 0,
            "username": "bfge",
            "viewed": 128
        },
        "renderpass": [
            {
                "code": "float rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\n/*\n\nconst vec3 colors[9] = vec3[9](\n  vec3(1.0, 1.0, 0.0),\n  vec3(0.627, 0.627, 0.0),\n  vec3(0.0, 1.0, 0.0),\n  vec3(0.0, 0.627, 0.0),\n  vec3(0.0, 1.0, 1.0),\n  vec3(0.0, 0.627, 0.627),\n  vec3(0.627, 0.392, 0.0),\n  vec3(0.431, 0.2, 0.0),\n  vec3(0.0, 0.235, 0.322)\n);\n\n\nconst vec3 colors[9] = vec3[9](\n  vec3(1.0, 0.0, 0.0),   // Red\n  vec3(0.0, 1.0, 0.0),   // Green\n  vec3(0.0, 0.0, 1.0),   // Blue\n  vec3(1.0, 1.0, 0.0),   // Yellow\n  vec3(1.0, 0.0, 1.0),   // Magenta\n  vec3(0.0, 1.0, 1.0),   // Cyan\n  vec3(0.627, 0.627, 0.627),  // Gray\n  vec3(0.392, 0.0, 0.627),    // Purple\n  vec3(0.0, 0.627, 0.627)     // Teal\n);\n\n*/\n\nconst float dithering_factor = 3.0;\n\nconst int color_count = 11;\n\nconst vec3 colors[color_count] = vec3[color_count](\n  vec3(0, 0, 0),\n  vec3(0.1, 0.1, 0.1),\n  vec3(0.2, 0.2, 0.2),\n  vec3(0.3, 0.3, 0.3),\n  vec3(0.4, 0.4, 0.4),\n  vec3(0.5, 0.5, 0.5),\n  vec3(0.6, 0.6, 0.6),\n  vec3(0.7, 0.7, 0.7),\n  vec3(0.8, 0.8, 0.8),\n  vec3(0.9, 0.9, 0.9),\n  vec3(1.0, 1.0, 1.0)\n);\n\nconst int scalingFactor = 6;\n\nint getColor( in vec2 uv){\n    int val =  int(mod(uv.x + uv.y +rand(uv.xy) * dithering_factor + iTime , float(color_count)  ));\n    \n    if(val == 0 || val == color_count){\n        return int(mod(uv.x + uv.y + iTime , float(color_count)  ));\n    }\n    \n    return val;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    \n\n    vec2 uv = (fragCoord/iResolution.xy ) * vec2(scalingFactor , scalingFactor);\n\n    // Time varying pixel color\n    vec3 col =  colors[getColor(uv)];\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}