{
    "Shader": {
        "info": {
            "date": "1476284814",
            "description": "darkened corridor effect",
            "flags": 0,
            "hasliked": 0,
            "id": "llK3zt",
            "likes": 13,
            "name": "darkened corridor effect",
            "published": 3,
            "tags": [
                "effect",
                "corridor",
                "darkened"
            ],
            "usePreview": 0,
            "username": "public_int_i",
            "viewed": 846
        },
        "renderpass": [
            {
                "code": "//Ethan Alexander Shulman 2016\n\n//I wanted a darkened corridor on a wall that doesn't have a hole\n//so i made a fake darkened corridor that can just be rendered on a plane in front of the wall\n\n//no optimizations done yet\n\n\n#define pi 3.1415926\n#define pi2 (pi*2.0)\n\n\n\nvec2 rot(in vec2 v, in float ang) {\n    float si = sin(ang);\n    float co = cos(ang);\n    return v*mat2(si,co,-co,si);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    //ray direction from uvs and ray position at origin\n    vec3 rd = normalize(vec3((fragCoord*2.-iResolution.xy)*vec2(-1.,1.)/iResolution.x,1.)),\n         rp = vec3(0.,0.,-1.);\n    \n    //setup camera\n    vec2 cameraRot = -vec2(pi+iTime,pi/2.+iMouse.y/iResolution.y-0.5);\n    rd.yz = rot(rd.yz,cameraRot.y);\n    rd.xz = rot(rd.xz,cameraRot.x);\n    \n    rp.yz = rot(rp.yz,cameraRot.y);\n    rp.xz = rot(rp.xz,cameraRot.x);\n    rp *= vec3(5.,4.,5.);\n    rp += vec3(0.,-2.,0.);\n    \n    \n    //floor plane\n    float dst = rp.y/-rd.y;\n    vec3 prp = rp+rd*dst;\n    \n    vec3 gridTex = texture(iChannel0,prp.xz/10.).xyz;\n    \n    fragColor = vec4(\n        \t\t\tmix(vec3(0.),gridTex,step(0.,dst)),\n        \t\t\t1.);\n    \n    \n    //darkened corridor plane\n    float dst2 = rp.x/-rd.x;\n    vec3 drp = rp+rd*dst2;\n    \n    //darkened corridor inner perspective\n    float dx = (drp.z-3.*sign(rd.z))/-rd.z,\n          dy = (drp.y-5.*sign(rd.y))/-rd.y;\n    \n    if (abs(dx) < abs(dy)) {\n        gridTex = texture(iChannel0, (drp+rd*abs(dx)).xy/10.).xyz/(1.+max(0.,abs(dx)-1.));\n    } else {\n        gridTex = texture(iChannel0, (drp+rd*abs(dy)).xz/10.).xyz/(1.+max(0.,abs(dy)-1.));\n    }    \n    //gridTex = texture(iChannel0,drp.zy/10.).xyz;\n\n    //darkened corridor plane vs floor depth test\n    dst2 = mix(dst2, -1e2, clamp(length(max(abs(drp.zy)-vec2(3.,5.),0.))*1e4, 0., 1.));\n    fragColor.xyz = mix(fragColor.xyz,gridTex,step(0.,dst2)*(step(dst,0.)+step(dst2,dst)));\n        \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}