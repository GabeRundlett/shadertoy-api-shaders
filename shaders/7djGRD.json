{
    "Shader": {
        "info": {
            "date": "1617073177",
            "description": "tres brazos--three arms",
            "flags": 0,
            "hasliked": 0,
            "id": "7djGRD",
            "likes": 1,
            "name": "tres brazos--three arms",
            "published": 3,
            "tags": [
                "tresbrazosthreearms"
            ],
            "usePreview": 0,
            "username": "jorge2017a1",
            "viewed": 238
        },
        "renderpass": [
            {
                "code": "//por jorge flores p.\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n\n#define opU2(d1, d2) ( d1.x < d2.x ? d1 : d2 )\n\nfloat opU( float d1, float d2 ) { return  min(d1,d2); }\nfloat opS( float d1, float d2 ) { return max(-d1,d2); }\nfloat opI( float d1, float d2 ) { return max(d1,d2); }\n\n#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n\n//Constants\nconst float tau = atan(1.0)*8.0;\nconst float pi = atan(1.0)*4.0;\n\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}\n  \nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n\nvec2 rotatev2(vec2 p, float ang)\n{\n    float c = cos(ang);\n    float s = sin(ang);\n    return vec2(p.x*c - p.y*s, p.x*s + p.y*c);\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\n\nfloat line(in vec2 p, in vec2 a, in vec2 b, in float thick)\n{\n    //correcion por FabriceNeyret2,     \n    float pix = 1.5/iResolution.y;\n    return smoothstep(thick + pix, thick - pix, sdSegment(p,a,b));   \n\n    //return 1.-smoothstep(thick - 1.5/iResolution.y, thick, sdSegment(p,a,b));   \n}\n\nvec3 LineasCuadriculado(vec2 p, vec3 col)\n{\n     vec2 a1=vec2(0.0,-1.5);\n    vec2 b1=vec2(0.0,1.5);\n     \n    vec2 a2=vec2(-2.0, 0.0);\n    vec2 b2=vec2( 2.0, 0.0);\n    \n    //float thick = 2./iResolution.y;\n    float thick =3./iResolution.y;\n    \n    float ds2= line(p, a1, b1, thick);  //vertical\n    float ds3= line(p, a2, b2, thick);  //horizontal\n    \n    col = mix(col,vec3(0.0, 0.0,0.0)*1.2,ds2);\n    col = mix(col,vec3(0.0, 0.0,0.0)*1.2,ds3);\n    return col;\n    \n}\n    \nvec2 RotarPuntoPivote(vec2 p,vec2 pXrYr, float theta)\n{\n     vec2 pp=p;\n     vec2 pos=pXrYr;\n     pp=pp-pos;\n     pp.xy = rotatev2(pp.xy, theta);\n     pp=pp+pos;   \n     return pp;\n}    \n\nvec3 HacerBrazo(vec2 p, vec3 col )\n{\n    float thick = 2./iResolution.y;\n    \n    vec2 p1=vec2(0.0,0.0) ;\n    vec2 p2=vec2(0.5,0.5) ;\n    \n    vec2 p3=p2 ;\n    vec2 p4=p3+vec2(0.35,0.0) ;\n    \n    \n    vec2 p5=p4 ;\n    vec2 p6=p5+vec2(0.3,0.3) ;\n    \n    \n    vec2 pr1= RotarPuntoPivote( p,  p1, iTime);\n    vec2 pr2= RotarPuntoPivote( pr1,p3, iTime);\n    vec2 pr3= RotarPuntoPivote( pr2,p5, iTime*0.25);\n    \n    \n    float ds2= line(pr1, p1, p2, thick);  \n    float ds3= line(pr2, p3, p4, thick);  \n    float ds4= line(pr3, p5, p6, thick);  \n    \n    col = mix(col,vec3(1.0, 0.0,0.0),ds2);\n    col = mix(col,vec3(0.0, 0.0,1.0),ds3);\n    col = mix(col,vec3(0.0, 1.0,1.0),ds4);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 p=uv;\n    //vec3 col=vec3(0.65,0.7,1.0);\n    vec3 col=vec3(0.65);\n    col= LineasCuadriculado(p, col);\n    col= HacerBrazo( p,col );\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}