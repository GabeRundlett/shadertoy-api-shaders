{
    "Shader": {
        "info": {
            "date": "1638528561",
            "description": "convex combination",
            "flags": 0,
            "hasliked": 0,
            "id": "NlKGWt",
            "likes": 5,
            "name": "voronoi splatting",
            "published": 3,
            "tags": [
                "voronoi"
            ],
            "usePreview": 0,
            "username": "AnonN10",
            "viewed": 182
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926535897932\n#define NUM_POINTS 16\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.0);\n    float pw = ((iMouse.z>0.0)?(iMouse.x/iResolution.x):(sin(iTime*0.5)*0.5+0.5))*18.0;\n    \n    vec2 points[NUM_POINTS];\n    vec3 colors[NUM_POINTS];\n    for(int i = 0; i < NUM_POINTS; ++i)\n    {\n        //[-1; 1]\n        points[i] = vec2(\n            cos(iTime*2.0*PI*0.1*rand(vec2(float(i+1)*0.5574, float(i+1)*0.6425))),\n            sin(iTime*2.0*PI*0.1*rand(vec2(float(i+1)*0.8464, float(i+1)*0.8345)))\n        );\n        //[0; 1]\n        points[i] = points[i]*0.5+0.5;\n        \n        colors[i] = vec3(\n            rand(vec2(float(i+1)*0.1251, float(i+1)*0.2605)),\n            rand(vec2(float(i+1)*0.8681, float(i+1)*0.6385)),\n            rand(vec2(float(i+1)*0.9663, float(i+1)*0.4395))\n        );\n    }\n\n    float nf = 0.0;\n    for(int i = 0; i < NUM_POINTS; ++i)\n    {\n        float dist = length(points[i] - uv);\n        dist = 1.0/dist;\n        dist = pow(dist, pw);\n        nf += dist;\n    }\n    nf = 1.0/nf;\n    \n    for(int i = 0; i < NUM_POINTS; ++i)\n    {\n        float dist = length(points[i] - uv);\n        if(dist < 0.01f)\n        {\n            col = vec3(1.0f);\n            break;\n        }\n        dist = 1.0/dist;\n        dist = pow(dist, pw);\n        col += colors[i]*dist*nf;\n    }\n    \n    col = pow(col, vec3(1.0/2.2));\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}