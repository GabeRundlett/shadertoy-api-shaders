{
    "Shader": {
        "info": {
            "date": "1447614697",
            "description": "Compacting [url=https://www.shadertoy.com/view/4tlXR4]matrix - 255 char[/url] by FabriceNeyret2 even more and added some color. All credits go to FabriceNeyret2.",
            "flags": 0,
            "hasliked": 0,
            "id": "XdcGzr",
            "likes": 45,
            "name": "Matrix rain < 200 char",
            "published": 3,
            "tags": [
                "font",
                "2tweets",
                "short",
                "pseudofont"
            ],
            "usePreview": 0,
            "username": "reinder",
            "viewed": 3340
        },
        "renderpass": [
            {
                "code": "// Created by Reinder Nijhoff 2015\n// Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.\n// @reindernijhoff\n//\n// https://www.shadertoy.com/view/XdcGzr\n//\n// Based on matrix - 255 char by FabriceNeyret2: https://www.shadertoy.com/view/4tlXR4\n// compacting to 2-tweets patriciogv's Matrix shader https://www.shadertoy.com/view/MlfXzN ( 819 -> 255 chars ) \n// But first go see patriciogv's comments and readable sources :-D\n//\n// All credits go to FabriceNeyret2\n//\n\n#define R fract(43.*sin(dot(p,p)))\n\nvoid mainImage( out vec4 o, vec2 i) {\n    vec2 j = fract(i*=.1), \n         p = vec2(9,int(iTime*(9.+8.*sin(i-=j).x)))+i;\n    o-=o; o.g=R; p*=j; o*=R>.5&&j.x<.6&&j.y<.8?1.:0.;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}