{
    "Shader": {
        "info": {
            "date": "1496561470",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "MslfD7",
            "likes": 0,
            "name": "25/100",
            "published": 3,
            "tags": [
                "color"
            ],
            "usePreview": 0,
            "username": "yahe",
            "viewed": 435
        },
        "renderpass": [
            {
                "code": "vec2 rotate( vec2 inVec, float angle )\n{\n \tmat4 rotMatrix = mat4\n    (\n    \tcos( angle ),\t-sin( angle ),\t0,\t0,\n        sin( angle ), \tcos( angle ),\t0,\t0,\n        0,\t\t\t\t0,\t\t\t\t1,\t0,\n        0,\t\t\t\t0,\t\t\t\t0,\t1    );\n    \n    return ( vec4( inVec, 0.0, 1.0 ) * rotMatrix ).xy;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= .5;\n    uv.x += sin(iTime/4.)/2.;\n    uv.y += sin(iTime*2.)/4.;\n    \n    float offsetVal = iTime;\n    \n    vec2 uvR = uv;\n    uvR.y /= abs(uvR.x);\n    uvR = rotate( uvR, offsetVal );\n    \n    vec2 uvG = uv;\n    uvG.x /= abs(uvG.y);\n    uvG = rotate( uvG, offsetVal );\n    \n    vec2 uvB = uv;\n    uvB.xy -= sin( offsetVal );\n    \n    fragColor = vec4( uvR.y * 0.5 + 0.5, uvG.y * 0.5 + 0.5, uvB.y * 0.5 + 0.5, 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}