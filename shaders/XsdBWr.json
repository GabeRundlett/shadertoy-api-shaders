{
    "Shader": {
        "info": {
            "date": "1524725887",
            "description": "laplacian propogating weeeeeeeeeeeeeeeeeeeee",
            "flags": 32,
            "hasliked": 0,
            "id": "XsdBWr",
            "likes": 2,
            "name": "continuous sharpen",
            "published": 3,
            "tags": [
                "sharpensobel"
            ],
            "usePreview": 0,
            "username": "timeiskey",
            "viewed": 539
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel1, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define RADIUS 10.0\n#define PI 3.1415926\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec2 nppd = 1.0/iResolution.xy * 1.0;\n    \n    vec2 nmp = iMouse.xy / iResolution.xy;\n\n    vec3 c = vec3(0.0);\n\n    vec3 tl = texture(iChannel1, abs(uv + nppd * vec2( -1.0, -1.0))).rgb;\n    vec3 tc = texture(iChannel1, abs(uv + nppd * vec2(  0.0, -1.0))).rgb;\n    vec3 tr = texture(iChannel1, abs(uv + nppd * vec2(  1.0, -1.0))).rgb;\n    vec3 ml = texture(iChannel1, abs(uv + nppd * vec2( -1.0,  0.0))).rgb;\n    vec3 mc = texture(iChannel1, abs(uv + nppd * vec2(  0.0,  0.0))).rgb;\n    vec3 mr = texture(iChannel1, abs(uv + nppd * vec2(  1.0,  0.0))).rgb;\n    vec3 bl = texture(iChannel1, abs(uv + nppd * vec2( -1.0,  1.0))).rgb;\n    vec3 bc = texture(iChannel1, abs(uv + nppd * vec2(\t0.0,  1.0))).rgb;\n    vec3 br = texture(iChannel1, abs(uv + nppd * vec2(  1.0,  1.0))).rgb;\n \n    if (iFrame < 20)\n    {\n        tl = texture(iChannel0, uv + nppd * vec2( -1.0, -1.0)).rgb;\n        tc = texture(iChannel0, uv + nppd * vec2(  0.0, -1.0)).rgb;\n        tr = texture(iChannel0, uv + nppd * vec2(  1.0, -1.0)).rgb;\n        ml = texture(iChannel0, uv + nppd * vec2( -1.0,  0.0)).rgb;\n        mc = texture(iChannel0, uv + nppd * vec2(  0.0,  0.0)).rgb;\n        mr = texture(iChannel0, uv + nppd * vec2(  1.0,  0.0)).rgb;\n        bl = texture(iChannel0, uv + nppd * vec2( -1.0,  1.0)).rgb;\n        bc = texture(iChannel0, uv + nppd * vec2(\t0.0,  1.0)).rgb;\n        br = texture(iChannel0, uv + nppd * vec2(  1.0,  1.0)).rgb;\n    }\n    \n    vec3 dx = mr-ml;\n    vec3 dy = bc-tc;\n    vec3 d = (dx + dy) * 0.5;\n    \n    float a = iTime * PI / 2.0;\t//\tangle in radians\n    \n    vec3 dys = sin( a ) \t* dy;\t//\tdx\n    vec3 dxs = cos( a ) \t* dx;\t//\tdy\n    vec3 ds = (dx + dy) * 0.5;\n\n    \n    float sharpness = 1.0;\n    c = mc - d * sharpness;\n    c = clamp(c, 0.0, 1.0);\n\n    \n    fragColor = vec4( c, 1.0 );\n    \n    if(iMouse.z > 0.0)\n    \tfragColor = max(fragColor,vec4(step(length(iMouse.xy - fragCoord),RADIUS)));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}