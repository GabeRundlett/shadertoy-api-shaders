{
    "Shader": {
        "info": {
            "date": "1627340359",
            "description": "fractal",
            "flags": 0,
            "hasliked": 0,
            "id": "Nl2XRm",
            "likes": 8,
            "name": "Fractal 70_gaz",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "gaz",
            "viewed": 431
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    vec3 p,r=iResolution,\n    d=normalize(vec3((C-.5*r.xy)/r.y,1));  \n    for(float i=0.,s,e,g=.3;\n        ++i<90.;\n        O.xyz+=mix(vec3(1),H(log(s)*.3),.8)*.03*exp(-i*i*e)\n    )\n    {\n        p=g*d;\n        p+=R(vec3(1,.8,1.2),vec3(.577),iTime*.03);\n        p=R(p,vec3(.577),iTime*.1);\n        // https://www.shadertoy.com/view/3ttyzB\n        // Based on the idea of jarble\n        p=cos(p*3.+4.*cos(p*.5));\n        vec4 q=vec4(p,sin(iTime)*.2);\n        s=3.;\n        for(int j=0;j++<8;)\n            q=clamp(q,-.5,.5)*2.-q,\n            s*=e=7.*clamp(.3/min(dot(q,q),1.),.0,1.),\n            q*=e;\n        g+=e=length(q)/s;\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}