{
    "Shader": {
        "info": {
            "date": "1458314166",
            "description": "Here is a very simple, legible, and well commented example for the purpose of education. Thanks to @FabriceNeyret2 for the optimizations! Check out his 2tweet version in the comments below.\n\nR - Reset\nMouse - Interact",
            "flags": 48,
            "hasliked": 0,
            "id": "ld3Sz7",
            "likes": 19,
            "name": "Basic Conway's Game of Life",
            "published": 3,
            "tags": [
                "feedback",
                "buffer",
                "conway",
                "gameoflife",
                "conways",
                "gol"
            ],
            "usePreview": 0,
            "username": "matthewwachter",
            "viewed": 3166
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tfragColor = texture(iChannel0,fragCoord/iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define brushSize 20.0\n\n#define T(i,j) texture(iChannel0, (uv + vec2(i,j)*vec2(1.0/R) )).r \n#define N(i,j)  + float( T(i,j) > 0.)\n\n//noise see https://www.shadertoy.com/view/ltB3zD\nfloat snoise(in vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n// set value for r key to reset with\nconst int Key_R = 82;\n\n// process keyboard input\nbool ReadKey( int key )//, bool toggle )\n{\n\tbool toggle = false;\n\tfloat keyVal = texture( iChannel1, vec2( (float(key)+.5)/256.0, toggle?.75:.25 ) ).x;\n\treturn (keyVal>.5)?true:false;\n}\n\n\nvoid mainImage( out vec4 O, in vec2 c )\n{\n\tvec2 R = iResolution.xy;\n    \n    // retrieve the texture coordinate\n    vec2 uv = c.xy / R;\n    \n    // get the current pixel\n    float v = texture(iChannel0, uv).r;\n    \n    // check to seee if we are at the start of the timeline or if the R key is pressed.\n    if(iFrame > 4 && !ReadKey(Key_R))\n    {\n        // draw a circle if the mouse is clicked\n        if(distance(iMouse.xy, c) < brushSize && iMouse.z > .0)\n        {\n        \tO = vec4(1.0);\n        }\n        else\n        {\n            float n =   N(-1,-1) + N(-1, 0) + N(-1, 1)\n                      + N( 0,-1)            + N( 0, 1)\n                      + N( 1,-1) + N( 1, 0) + N( 1, 1);\n\n\n            // resurect if we are not live, and have 3 live neighrbours\n            v += (1.0-float(v > 0.0)) * float(n == 3.0);\n\n            // kill if we do not have either 3 or 2 neighbours\n            v *= float(n == 2.0) + float(n == 3.0);\n\n            // fade the current pixel as it ages\n            v -= float(v > 0.4)*0.05;\n\n            // write out the pixel\n            O = vec4(vec3(v), 1.0);\n        }\n    }\n    //Generate some noise to get things going\n    else\n    {\n        O = vec4(snoise(c) > 0.8 ? 1.0 : 0.0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}