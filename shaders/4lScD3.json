{
    "Shader": {
        "info": {
            "date": "1510244209",
            "description": "revisit [url]https://www.shadertoy.com/view/XtjcWK[/url] using MIPmap to calculate laplacian. More stable -> dt*2.\nYou might relate it to Multigrid solvers and to Difference of Gaussians. \n\nMouse paint.",
            "flags": 32,
            "hasliked": 0,
            "id": "4lScD3",
            "likes": 9,
            "name": "Gray-Scott Model (MIP Laplacian)",
            "published": 3,
            "tags": [
                "simulation",
                "mipmap",
                "diffusion",
                "gray",
                "reactiondiffusion",
                "reaction",
                "grayscott",
                "scottmodel"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 872
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 O, vec2 U) { O = texelFetch( iChannel0, ivec2(U), 0);  O.x = 1.-O.x; }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// directly inspired from https://www.shadertoy.com/view/XtjcWK\n// But using MIPmap to evaluate Laplacian\n\n#define T(z) texture(iChannel0, U, z)\n\nvoid mainImage( out vec4 O,  vec2 U )\n{  \n    vec2 R = iResolution.xy;\n    U /= R;\n    \n   \tvec4 C = T(0.),\n         D = 4.5* ( T(.66) - C );             // laplacian\n    \n    float dt = 2.,\n          f = .01 + U.x/13.,\n          k = .04 + U.y/35.,\n          s = C.x*C.y*C.y;\n\n    C += dt * vec4( -s + f*(1.-C.x) + .2*D.x, // Gray-Scott Model + integration\n                     s - (f+k)*C.y  + .1*D.y, // http://mrob.com/pub/comp/xmorphia/\n                     0, 0 );\n\n    O = length( iMouse.xy  -U*R ) < 10.\n            ? vec4(.25,.5,0,0)                // mouse paint\n            : C;\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}