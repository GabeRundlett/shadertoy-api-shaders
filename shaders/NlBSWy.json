{
    "Shader": {
        "info": {
            "date": "1628462377",
            "description": "Inspiration from https://imgur.com/e9IMX",
            "flags": 0,
            "hasliked": 0,
            "id": "NlBSWy",
            "likes": 9,
            "name": "大龙猫 - Quicky #058",
            "published": 3,
            "tags": [
                "quicky"
            ],
            "usePreview": 0,
            "username": "totetmatt",
            "viewed": 423
        },
        "renderpass": [
            {
                "code": "#define fGlobalTime iTime\nfloat diam(vec3 p,float s){\n   p=  abs(p);\n   return (p.x+p.z+p.y-s)*inversesqrt(3.);  \n }\nfloat box(vec3 p, vec3 b){\n    vec3 q = abs(p)-b;\n    return length(max(vec3(0.),q))+min(0.,max(q.x,max(q.y,q.z)));\n }\n float sdBoxFrame( vec3 p, vec3 b, float e )\n{\n  p = abs(p  )-b;\n  vec3 q = abs(p+e)-e;\n  return min(min(\n      length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n      length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n      length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n}\nmat2 rot(float a){float c=cos(a),s=sin(a);return mat2(c,-s,s,c);}\nfloat smin( float a, float b, float k )\n{\nfloat h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\nfloat bbox(vec3 p,float q){\n    float h = sdBoxFrame(p,vec3(1.),.1);\n    return smin(h, diam(abs(p)-.9,.3),q);\n  \n }\nvec3 extp,intp;\n vec2 struc(vec3 p,float q){\n      \n     vec2 h,t;\n     vec3 pp = p;\n     p.xy*=rot(fGlobalTime);\n     p.xz*=rot(fGlobalTime);\n     extp=p;\n     h.x = box(p,vec3(2.55));\n     h.y = 1.;\n     p = abs(p)-.9;\n     p = abs(p)-.9;\n     h.x = max(-h.x,bbox(p,q));\n     \n     \n     pp.xy*=rot(-fGlobalTime);\n     pp.xz*=rot(-fGlobalTime);\n     t.x = bbox(pp,q);\n     t.y = 1.5;\n     h= t.x < h.x ? t:h;\n     intp=pp;\n   return h;\n   \n }\n\nvec2 sdf(vec3 p){\n\n     p.yz*=rot(atan(inversesqrt(1./2.)));\n     p.xz*=rot(3.141592/4.);\n      p.xz/=4.;\n     p.xz = asin(sin(p.xz)*(.925-texture(iChannel0,p.xz*.1).r*.075));\n     p.xz*=4.;\n    vec2 h;\n\n     h= struc(p*.92,-.01);\n     vec2 t = struc(p,.0);\n     t.y += 1.;\n     h= t.x < h.x ? t:h;\n    return h;\n}\n#define q(s) s*sdf(p+s).x\nvec2 e=vec2(-.003,.003);\nvec3 norm(vec3 p){return normalize(q(e.xyy)+q(e.yxy)+q(e.yyx)+q(e.xxx));}\n#define ao(rp,n,k) (sdf(rp+n*k).x/k)\n#define AO(rp,n) (ao(rp,n,.1)+ao(rp,n,.5)+ao(rp,n,1.1))\nvec3 pal(float t){\n  \n  return .5+.5*cos(6.28*(.1*t+vec3(1.,.4,.3)));\n  }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\nvec3  col = vec3(.1);\n  vec3 ro = vec3((uv)*10.,-30.);\n  vec3 rd = vec3(0.,0.,1.);\n  vec3 light = vec3(7.,5.,-5.);\n  vec3 rp = ro;\n  vec3 acc = vec3(.0);\n  for(float i=0.;i<=128.;i++){\n      vec2 d = sdf(rp);\n    if(d.y >= 2.){\n         vec3 off = d.y == 2.5 ? intp:extp;\n         acc +=sqrt(pal(length(off)+iTime*2.))*exp(2.*-abs(d.x))/(29.+sin(atan(off.x,off.y)*10.)*20.);\n       d.x = max(.002+sin(off.y*20.+off.x*20.)*.01,abs(d.x));\n     }\n    if(length(rp)>50.) break;\n     if(d.x <=.001){\n         if(d.y==1.){\n          vec3 n = norm(rp);\n          float diff = max(0.,dot(normalize(light-rp),n));\n          float sp = max(0.,dot(normalize(ro-rp),reflect(-normalize(light),n)));\n            col = vec3(.5)*diff+vec3(5.,0.,0.)*pow( sp,32.);\n            col *=AO(rp,n)/1.7;\n           }\n        break;\n      }\n      rp+=d.x*rd;\n  }\n  col +=acc;\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}