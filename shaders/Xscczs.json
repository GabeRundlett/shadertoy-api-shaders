{
    "Shader": {
        "info": {
            "date": "1519764899",
            "description": "My attempt at finding a solution to https://twitter.com/FioraAeterna/status/968547926396973056.\nUnfortunally not scale invariant, but a mathematical way of achieving bloating nontheless.",
            "flags": 0,
            "hasliked": 0,
            "id": "Xscczs",
            "likes": 3,
            "name": "Bloating Image transform",
            "published": 3,
            "tags": [
                "imagetransform"
            ],
            "usePreview": 0,
            "username": "Fra32",
            "viewed": 568
        },
        "renderpass": [
            {
                "code": "float maxPower = 1.5; //Change this to change the grade of bloating that is applied to the image.\nvec2 bloatPos = vec2(0,0); //The position at which the effect occurs\n\nfloat circle(vec2 p, vec2 pos, float r){\n    p-=pos;\n    float x = length(p);\n    float val = 1.-pow((r-x)*16.,2.);\n    if(val<0.)val=0.;\n    return val;\n}\n\nfloat arg(vec2 p){\n    float arg = acos(clamp(dot(normalize(p),vec2(1,0)),-1.,1.));\n    if(p.y<0.) arg=-arg;\n    if(length(p)==0.)arg = 0.;\n    return arg;\n}\n\nvec3 image(vec2 p){\n    vec3 col = texture(iChannel0,p).xyz;\n    return col;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord)/iResolution.xy;\n    float n = smoothstep(0.,1.,abs(1.-mod(iTime/2.,2.)));\n    vec2 p = (bloatPos+iResolution.xy/2.)/iResolution.xy;\n    float l = length(uv-p);\n    float a = arg(uv-p);\n\tl = pow(l,1.+n*(maxPower-1.));\n    vec2 uv2 = l*vec2(cos(a),sin(a))+p;\n    // Time varying pixel color\n    vec3 col = image(uv2);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}