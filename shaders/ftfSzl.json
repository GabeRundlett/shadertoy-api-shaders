{
    "Shader": {
        "info": {
            "date": "1626272560",
            "description": "Wave to the camera!",
            "flags": 34,
            "hasliked": 0,
            "id": "ftfSzl",
            "likes": 1,
            "name": "Webcam fractals",
            "published": 3,
            "tags": [
                "fractal",
                "webcam"
            ],
            "usePreview": 0,
            "username": "kaihagseth",
            "viewed": 582
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 prevFrame = texelFetch(iChannel1, ivec2(fragCoord), 0);\n    vec2 st = ( fragCoord * iChannelResolution[0].xy) / iResolution.xy;\n    vec4 currFrame = texelFetch(iChannel0, ivec2(st), 0);\n    fragColor = abs(currFrame - prevFrame);\n    //fragColor = currFrame;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = ( fragCoord * iChannelResolution[0].xy) / iResolution.xy;\n    fragColor = texelFetch(iChannel0, ivec2(st), 0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec4 projection(vec2 pos, float scale, float angle, vec2 st)\n{\n    st = ( st /  iResolution. x) - .5;\n    st = st - pos;\n    st =  mat2 (cos(angle), -sin(angle), sin(angle), cos(angle)) * st;\n    st = st / scale;\n    st = ( (st + .5) *  iResolution.x);\n    return texelFetch(iChannel1, ivec2(st), 0) * .6;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec4 new = texelFetch(iChannel0, ivec2(fragCoord), 0);  \n    if (length(new) < 0.05) {\n        new = vec4(0.0);\n    }\n    vec4 p1 = projection( vec2(0.0, -0.2), .7 - (.26124*sin(iTime)), cos(iTime/5.4) * -1.115351, fragCoord) ;\n    vec4 p2 = projection(vec2(sin(iTime)*.2,-0.1), .7 - (.1516*sin(iTime/12.)), sin(iTime/4.0) * 1.12, fragCoord) ;\n    vec4 p3 = projection(vec2(sin(iTime)*.1,+0.1), .7 - (.123425*sin(iTime/12.)), sin(iTime/3.09509) * 1.12, fragCoord) ;\n    fragColor = new + p1 + p2 + p3 ;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}