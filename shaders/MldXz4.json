{
    "Shader": {
        "info": {
            "date": "1478617435",
            "description": "...",
            "flags": 0,
            "hasliked": 0,
            "id": "MldXz4",
            "likes": 12,
            "name": "Menger2D",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "mengerspone"
            ],
            "usePreview": 0,
            "username": "EvilRyu",
            "viewed": 750
        },
        "renderpass": [
            {
                "code": "// Created by evilryu\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat s=0.95,a=0.006,scale=3.;\nfloat d_box(vec2 q){float d=max(abs(q.x),abs(q.y));return smoothstep(s,s+a,d)+smoothstep(s-a,s-a-a,d);}\nfloat d_sph(vec2 q,float s){float d=pow(pow(abs(q.x),3.0)+pow(abs(q.y),3.0),1./3.);return smoothstep(s,s+a,d)+smoothstep(s-a,s-a-a,d);}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 q = (-iResolution.xy + 2.0*fragCoord)/iResolution.y;\n    vec3 col=vec3(1.0)*d_box(q);\n    float iter = mod(floor(iTime),7.0);\n    for(int i=0;i<4;++i)\n    {\n        if(i<int(iter+0.5))\n        {\n            q=abs(q);\n            if(q.x>q.y)q.xy=q.yx;\n            s*=1.0/scale;\n            col*=d_sph(q,s);\n            q-=s*(scale-1.);\n            if(q.x<-0.5*s*(scale-1.0))q.x+=s*(scale-1.0);\n        }\n        else\n        {\n            col*=d_sph(q,fract(iTime)*s/scale);\n        }\n    }\n    fragColor.xyz=col;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}