{
    "Shader": {
        "info": {
            "date": "1592398770",
            "description": " ",
            "flags": 0,
            "hasliked": 0,
            "id": "wtlcRS",
            "likes": 0,
            "name": "Pulse From Center",
            "published": 3,
            "tags": [
                "2d",
                "pulse",
                "visualization",
                "hypnotic"
            ],
            "usePreview": 0,
            "username": "fermion",
            "viewed": 193
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    float aspectRatio = iResolution.y/iResolution.x;\n    vec2 uv = fragCoord/iResolution.x;\n    \n    //center at (0, 0)\n    uv = (2.0 * uv) - vec2(1, aspectRatio);\n    \n    //polar coords\n    float distanceFromCenter = distance(vec2(0, 0), uv.xy);\n    float angle = atan(uv.y, uv.x);\n    \n    float angularSpeed = 2.0f;\n    float spiralOffset = sin(iTime * 0.05f) * distanceFromCenter * 25.0f;\n    \n    float rippleVariance = (1.0f - abs( cos(iTime * 0.01f) )) * 0.07f + 0.01f;\n    int numPetals = 9;\n    \n    // apply petals\n    distanceFromCenter += sin(iTime * angularSpeed + angle * float(numPetals) + spiralOffset) * rippleVariance;\n    \n    float speed = 1.0f;\n    float zoom = log(iTime + 1.0f) * 3.0f + 5.0f;\n    float phase = -(speed * iTime / zoom) + distanceFromCenter;\n\n    vec3 brightness = sin(vec3(phase * zoom));\n    \n    //make sin oscillate between 0 and 1\n    brightness = (0.5 * brightness) + 0.5;\n    \n    // blend between colors\n    float lowColorBlend = 0.5f * sin(iTime * 0.1) + 0.5f;\n    vec3  lowColor_0 = vec3(0.9, 0.0, 0.3);\n    vec3  lowColor_1 = vec3(0.2, 0.0, 0.9);\n    vec3  lowColor = mix(lowColor_0, lowColor_1, lowColorBlend);\n    \n    float highColorBlend = 0.5f * sin(iTime * 0.04f) + 0.5f;\n    vec3  highColor_0 = vec3(1.0, 0.5, 0.4);\n    vec3  highColor_1 = vec3(0.3, 0.0, 0.3);\n    vec3  highColor = mix(highColor_0, highColor_1, highColorBlend);\n    \n    vec3 color = mix(lowColor, highColor, brightness);\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}