{
    "Shader": {
        "info": {
            "date": "1598220192",
            "description": "A glowing orb loading spinner",
            "flags": 0,
            "hasliked": 0,
            "id": "WtjBRz",
            "likes": 7,
            "name": "Spinner 1",
            "published": 3,
            "tags": [
                "animation",
                "glow",
                "loading",
                "spinner"
            ],
            "usePreview": 0,
            "username": "michalwa",
            "viewed": 457
        },
        "renderpass": [
            {
                "code": "#define NUM_BALLS 3\n#define BLENDING 30.0\n#define FALLOFF 20.0\n#define SIZE 100.0\n#define GLOW 200.0\n\nfloat smin(float a, float b, float k)\n{\n    float res = exp2(-k * a) + exp2(-k * b);\n    return -log2(res) / k;\n}\n\nfloat glow(float dist)\n{\n    return max(SIZE - dist, 0.0) / FALLOFF;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 center = iResolution.xy / 2.0;\n    \n    // { X freq, X phase, Y freq, Y phase, radius }\n    const float waves[NUM_BALLS * 5] = float[](\n        1.23, 4.56, 3.21, 5.43, 50.0,\n        3.45, 1.26, 3.45, 2.15, 50.0,\n        2.14, 2.52, 1.25, 3.64, 50.0\n    );\n    \n    const vec3 colors[NUM_BALLS] = vec3[](\n        vec3(1.0, 0.0, 0.0),\n        vec3(0.0, 1.0, 0.0),\n        vec3(0.0, 0.0, 1.0)\n    );\n    \n    \n    vec2 balls[NUM_BALLS];\n    for(int i = 0; i < NUM_BALLS; i++)\n    {\n        balls[i] = center + vec2(\n            cos(iTime * waves[i * 5]     + waves[i * 5 + 1]),\n            sin(iTime * waves[i * 5 + 2] + waves[i * 5 + 3])) * waves[i * 5 + 4];\n    }\n    \n    float minDist = distance(fragCoord, balls[0]);\n    vec3 finalColor = colors[0] * clamp(1.0 - minDist / GLOW, 0.0, 1.0);\n    \n       for(int i = 1; i < NUM_BALLS; i++)\n    {\n        float dist = distance(fragCoord, balls[i]);\n        minDist = smin(minDist, dist, 1.0 / BLENDING);\n        \n        finalColor += colors[i] * clamp(1.0 - dist / GLOW, 0.0, 1.0);\n    }\n    \n    fragColor = vec4(finalColor * glow(minDist), 0.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}