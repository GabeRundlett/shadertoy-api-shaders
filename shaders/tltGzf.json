{
    "Shader": {
        "info": {
            "date": "1577119714",
            "description": "Modification of https://www.shadertoy.com/view/MddfR4 for more audio reactivity",
            "flags": 64,
            "hasliked": 0,
            "id": "tltGzf",
            "likes": 8,
            "name": "Stable environment ",
            "published": 3,
            "tags": [
                "3d",
                "raymarching",
                "voronoi",
                "music"
            ],
            "usePreview": 0,
            "username": "grinchdubs",
            "viewed": 740
        },
        "renderpass": [
            {
                "code": "#define zoom 0.45\n#define time iTime * 0.7\n\n// Didn't change the hash at all, so taken directly from here https://www.shadertoy.com/view/ltK3DR\nvec3 hash33(vec3 p3)\n{\n\tp3 = fract(p3 * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+19.19);\n    return fract(vec3((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y, (p3.y+p3.z)*p3.x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy ) / iResolution.y;\n\n    // 'Look at' vector.\n    vec3 la = vec3(1., .25, 1.) + vec3(.5 + cos(time * .7), .25, .5 + sin(time * .5));\n    \n    // Uncomment for mouse look.\n    //la = vec3(1., .25, 1.0) + vec3(-0.5 + iMouse.x / 50., -0.5 + iMouse.y / 50., 0.5);\n    \n    vec3 forward = normalize(la);\n    vec3 right = normalize(vec3(forward.z, 0., -forward.x )); \n    vec3 up = cross(forward, right);\n\n    // rd - Final ray direction.\n    vec3 rd = normalize(forward + uv.x * right + uv.y * up);\n\n    // Points movement speed.\n    vec3 p = time + vec3(1.0);\n    float l = .0;\n    \n    // Main marching loop.\n    for(int i = 0; i < 48; i++)\n    {\n        float dis = 1.0;\n        \n        // 3D voronoi loop.\n        for (int y= -1; y <= 1; y++) \n        {\n            for (int x= -1; x <= 1; x++) \n            {\n                 for (int z= -1; z <= 1; z++) \n                {\n                    vec3 np = ceil(p + l*rd) + vec3(x,y,z);\n                    \n                    // Here we distribute points in space. (comment to see it).\n                    np += (hash33(np) - .5);\n                    dis = min(dis, length(p + l * rd - np));\n                }\n            }\n        }\n        \n        // Adjusting sphere size and zoom.\n        l += zoom * dis - l / (350. * length(dis) * texture(iChannel0, vec2(.5, .52)).x) ;\n    }\n    \n    // Adding more impact on color pallete. Try multiplying by say 25 or more ;)\n    l += 5.5 * texture(iChannel0, vec2(.19, .21)).x;\n\n    // Output to screen.\n    vec3 col = .25 + (.4 * sin(.75 * l * vec3(.75, .41, .33) * (texture(iChannel0, vec2(.06, .08)).x) + time));\n    \n    // Other version\n    //vec3 col = (0.7 * (vec3(0.15, 0.63, 0.81) + (0.35 * (sin(0.25 * l + time)))));\n    \n    // Additional color mix (contrast).\n    col = mix(col, col * col * col * 3.5, col);\n\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 21730,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/grinchdubs/grnch-real-quik-05-ridin-it"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}