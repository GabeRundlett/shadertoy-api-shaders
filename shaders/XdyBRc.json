{
    "Shader": {
        "info": {
            "date": "1529685119",
            "description": "Working sample of how to implement seamless (tileable) 2d cell noise.",
            "flags": 0,
            "hasliked": 0,
            "id": "XdyBRc",
            "likes": 4,
            "name": "Seamless cell noise",
            "published": 3,
            "tags": [
                "noise",
                "cell",
                "seamless"
            ],
            "usePreview": 0,
            "username": "piluve",
            "viewed": 708
        },
        "renderpass": [
            {
                "code": "/*\n\t--: Seamless cell noise : --\n\t   nachocpol@gmail.com\n*/\n\nvec2 ran2( vec2 p ) \n{\n\treturn fract(sin(vec2(dot(p,vec2(127.1,311.7)),\n\t\t\t  \t\t\t  dot(p,vec2(269.5,183.3))))\n                 \t\t\t* 43758.5453123);\n}\n\nfloat TileCell(vec2 tc, int grid, float seed)\n{\n    vec2 p   = tc * float(grid);\n    vec2 ftc = fract(p);\n    vec2 itc = floor(p);\n    float m  = 1.0;\n    \n    for(int i = -1; i < 2; i++)\n    {\n        for(int j = -1; j < 2; j++)\n        {\n            vec2 n = vec2(i,j);\n            vec2 q = itc + n;\n            \n            if(q.x == -1.0)q.x = float(grid-1);\n            else if(q.x == float(grid))q.x = 0.0;\n                \n            if(q.y == -1.0)q.y =float(grid-1);\n            else if(q.y == float(grid))q.y = 0.0;\n\n            vec2 rp \t= ran2(q * seed);\n            vec2 diff \t= n + rp - ftc;\n            float dist \t= length(diff);\n            m \t\t\t= min(m,dist);\n        }\n    } \n    \n    return pow(1.0 - m,1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv \t= fragCoord/iResolution.xy;\n    float t \t= (sin(iTime * 0.25) * 4.0) + 6.0;\n    uv \t\t\t= fract(uv*t);   \n    // Cell noise \n    float c \t= TileCell(uv,4,1.0);\n    fragColor.xyz = vec3(0.3,0.25,0.67) * c;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}