{
    "Shader": {
        "info": {
            "date": "1700770177",
            "description": "just a test. was trying to calculate perspective projection and made a wrong assumption, but it turned out kinda weird. the horizontal lines are evenly spaced instead of getting closer toward the horizon.",
            "flags": 0,
            "hasliked": 0,
            "id": "clGcW3",
            "likes": 1,
            "name": "weird-projection",
            "published": 3,
            "tags": [
                "projection"
            ],
            "usePreview": 0,
            "username": "LydianLights",
            "viewed": 131
        },
        "renderpass": [
            {
                "code": "vec3 gamma(in vec3 color)\n{\n    return pow(max(color, 0.0), vec3(1.0 / 2.2));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv0 = vec2(\n        (fragCoord.x - 0.5 * iResolution.x) / iResolution.y,\n        fragCoord.y / iResolution.y\n    );\n    \n    float t = -0.05 * iTime;\n    float h = 0.5;\n    \n    vec2 xy = vec2(\n        uv0.x * (h / (h - uv0.y)),\n        uv0.y + t\n    );\n    \n    vec2 grid = fract(5.0 * xy);\n    vec3 color = vec3(grid.xy, 0.0);\n    if (grid.x < 0.05 || grid.y < 0.05) {\n        color = vec3(1.0);\n    } else if (abs(grid.x - grid.y) < 0.05) {\n        color = vec3(1.0);\n    }\n    \n    \n    color = gamma(color);\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}