{
    "Shader": {
        "info": {
            "date": "1667550338",
            "description": "hsvfilterlsw",
            "flags": 0,
            "hasliked": 0,
            "id": "cs23Dh",
            "likes": 0,
            "name": "hsvfilterlsw",
            "published": 3,
            "tags": [
                "image"
            ],
            "usePreview": 0,
            "username": "lsw",
            "viewed": 137
        },
        "renderpass": [
            {
                "code": "// Color-Space Conversion RGB to HSV written 2015 by Jakob Thomsen\n// https://en.wikipedia.org/wiki/HSL_and_HSV\n\nvec3 RGBtoHSV(vec3 rgb)\n{\n    // Hue: red = 0/6, yellow = 1/6, green = 2/6,\n    //      cyan = 3/6, blue = 4/6, magenta = 5/6\n    vec3 hsv;\n    float cmax = max(rgb.r, max(rgb.g, rgb.b));\n    float cmin = min(rgb.r, min(rgb.g, rgb.b));\n    \n    hsv.z = cmax; // value\n\n    float chroma = cmax - cmin;\n    //if(chroma != 0.0)\n    {\n        hsv.y = chroma / cmax; // saturation\n\n        //if(cmax == rgb.r)\n        if(rgb.r > rgb.g && rgb.r > rgb.b)\n        {\n            hsv.x = (0.0 + (rgb.g - rgb.b) / chroma) / 6.0; // hue\n        }\n        //else if(cmax == rgb.m_Green)\n        else if(rgb.g > rgb.b)\n        {\n            hsv.x = (2.0 + (rgb.b - rgb.r) / chroma) / 6.0; // hue\n        }\n        else\n        {\n            hsv.x = (4.0 + (rgb.r - rgb.g) / chroma) / 6.0; // hue\n        }\n\n        // Make sure hue is in range [0..1]\n        hsv.x = fract(hsv.x);\n    }\n    //else\n    //{\n    //    hsv.x = 0.0; // rnd();\n    //}\n    return hsv;\n}\n\nvec3 HSVtoRGB(in vec3 c) // thanks to iq for this much more compact version!\n{\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // 取纹理坐标\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    // 取图片纹理像素值\n    vec3 rgb = texture(iChannel0, uv).rgb;\n    // 把纹理像素值转HSV\n    vec3 hsv = RGBtoHSV(rgb);\n\n    // 可修改hsv中的色调、饱和度、明度\n    hsv = vec3(hsv.x, hsv.y, hsv.z);\n    \n    rgb = HSVtoRGB(hsv);\n\tfragColor = vec4(rgb, 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}