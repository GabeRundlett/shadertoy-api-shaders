{
    "Shader": {
        "info": {
            "date": "1591478318",
            "description": "second attempt! this one much more successful, i think it looks nice : )",
            "flags": 0,
            "hasliked": 0,
            "id": "wtlyzH",
            "likes": 10,
            "name": "earthbound bg 1",
            "published": 3,
            "tags": [
                "2d",
                "abstract",
                "snes",
                "earthbound"
            ],
            "usePreview": 0,
            "username": "thefox231",
            "viewed": 702
        },
        "renderpass": [
            {
                "code": "const vec3 mainColor = vec3(.6, .0, 136./255.);\n\nfloat sawtooth(float a, float freq) {\n    if (mod(a, freq) < freq * 0.5) return mod(a, freq * 0.5);\n    return freq * 0.5 - mod(a, freq * 0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float resolutionRatio = iResolution.x / iResolution.y;\n    \n    // uv fuckery !\n    // pixelate\n    \n    float pxAmt = 60.0;\n    \n    uv.x = floor(uv.x * pxAmt) / pxAmt;\n    uv.y = floor(uv.y * pxAmt) / pxAmt;\n    \n    // interlacing .\n    float pixAmt = 2.;\n    if (mod(fragCoord.y, pixAmt) < pixAmt * 0.5) {\n        uv += 0.1 + sin(iTime * 0.2 + uv.y * 8.) * 0.05;\n    } else {\n        uv -= 0.1 + sin(iTime * 0.2 + uv.y * 8. + .5) * 0.05;\n    }\n    \n    vec2 uv2 = uv;\n    \n    vec3 color = vec3(0.1);\n    \n    // first one (bg-ish thing??)\n    \n    color = vec3(mod(abs(sawtooth(uv.x, 0.6) * resolutionRatio + sawtooth(uv.y, 0.6) + iTime * 0.3), 0.4)) * mainColor;\n    \n    // second one (stripes-like thing)\n    \n    if (uv2.x < 0.5) {\n        uv2.x = 1.0 - uv2.x;\n    }\n    if (uv2.y > 0.5) {\n        uv2.y = 1.0 - uv2.y;\n    }\n\n    uv2.x += sin(uv2.y * 4.0 + iTime) * 0.1;\n    \n    if (mod(abs(uv2.x * resolutionRatio + uv2.y + iTime * 0.2), 0.2) < 0.1) {\n        vec3 lines = vec3(cos(uv.x * 2.0 + iTime + uv.y * 3.0)) * mainColor * 0.7;\n        color = mix(color, lines, 0.3);\n    }\n    \n    // color shortening\n    // gives it a kind of like snes-like palette\n    float shortAmt = 10.0;\n    color = ceil(color * shortAmt) / shortAmt;\n    \n    // feed the frag color .\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}