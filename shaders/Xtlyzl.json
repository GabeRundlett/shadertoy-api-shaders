{
    "Shader": {
        "info": {
            "date": "1506009509",
            "description": "This is a slight modification and reduction of Shane's amazing SH17A entry:\n[url]https://www.shadertoy.com/view/4d2BW1[/url]\nA BIG thanks to Fabrice for helping me reduce this shader.",
            "flags": 64,
            "hasliked": 0,
            "id": "Xtlyzl",
            "likes": 28,
            "name": "Apollonian Elevator-257 chars",
            "published": 3,
            "tags": [
                "raymarching",
                "twotweets",
                "apollonian",
                "short"
            ],
            "usePreview": 0,
            "username": "GregRostami",
            "viewed": 5165
        },
        "renderpass": [
            {
                "code": "// 257 chars - coyote removed 2 chars by using a loop:\n#define M { q.y += .2*iTime; s = o/o;                          \\\n            for(int i; i++<7; s*=k)                            \\\n            q *= k += 1.5 / dot(q = mod(--q, 2.) - 1., q) - k; \\\n            s = length(q)/s - .01 ;\n            \nvoid mainImage(out vec4 c, vec2 u)\n{\n    vec3 q = iResolution, o=q/q, s, k,\n         d = ( vec3(u+u,q.y)-q ) / q.y / 6.;\n    for(c*=0.; c.w++<1e2; q= o += d*s) M } q-=d; M }\n    c.rgb = ( o*s - 2. ) / o.z + 1.;\n}\n\n/*\n// 259 chars - coyote vanquished another char:\n#define L q *= k += 1.5 / dot(q = mod(--q, 2.) - 1., q) -k, s *= k//\n#define m ( q.y += .2*iTime, s = o/o,              \\\n            L,L,L,L,L,L,L,                         \\\n            length(q)/s - .01 ) \n    \nvoid mainImage(out vec4 c, vec2 u)\n{    \n    vec3 q = iResolution, o=q/q, s, k,\n         d = ( vec3(u+u,q.y)-q ) / q.y / 6.;\n    for(c*=0.; c.w++<1e2; ) q= o += m * d;\n    q-=d; c.rgb = ( o*m - 2. ) / o.z + 1.;\n}\n\n// 240 chars - Replaced while with for and some more Fabrice MAGIC!\n#define L q *= k += 1.5 / dot(q = mod(--q, 2.) - 1., q) -k, s *= k//\n#define m (                                \\\n    q.y += .2*iTime, s = o/o,              \\\n    L,L,L,L,L,L,L,                         \\\n    length(q)/s - .01 )                   //\n#define mainImage(c,u)\t                   \\\n    vec3 q = iResolution,  o,s,k,          \\\n         d = (vec3(u+u,q.y)-q)/q.y/6.;     \\\n    for(o=q/q; c.w++<1e2; ) q= o+= m*d;    \\\n    q-=d; c.rgb = ( o*m - 2. ) / o.z + 1. /*\n\n\n// 247 chars - color shading and centered\n// Fabrice has already made this smaller ...\nfloat m(vec3 p)\n{\n    float i=0., s = 1., k;\n    for(p.y += .2*iTime ; i++<7.; s *= k )\n        p *= k = 1.5 / dot(p = mod(--p, 2.) - 1., p);\n    return length(p)/s - .01;   \n}\n\n#define mainImage(c,u)\t                 \\\n    vec3 o = iResolution,                \\\n         d = vec3((u+u-o.xy)/o.y, 1)/6.; \\\n         o/=o;\t                         \\\n    while(c.w++<1e2) o += m(o)*d;        \\\n    c.rgb = ( o*m(o - d) - 2. ) / o.z + 1.\n        \n\n// 219 chars - bare bones minimum\n\nfloat m(vec3 p) {\n    float i=0., s = 1., k;\n    for(p.z -= iTime ; i++<7.; s *= k )\n        p *= k = 1.5 / dot(p = mod(p - 1., 2.) - 1., p);\n    return length(p)/s - .01;   }\n\n#define mainImage(c,u)\t\t\t\t\t\t\t\t\\\n    vec3 d = vec3(u/iResolution.y-.8, 1)/6., o=d/d;\t\\\n    while(c.w++<1e2) o += m(o)*d;\t\t\t\t\t\\\n    c += m(o - d)  /*\n*/",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 12219,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/antonio-antetomaso/mutiny-on-the-bounty-closing-titles-cover"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}