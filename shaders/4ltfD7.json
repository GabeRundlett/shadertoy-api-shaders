{
    "Shader": {
        "info": {
            "date": "1539883265",
            "description": "just fooling around.",
            "flags": 0,
            "hasliked": 0,
            "id": "4ltfD7",
            "likes": 11,
            "name": "sans titre",
            "published": 3,
            "tags": [
                "circles",
                "dfdx",
                "fwidth"
            ],
            "usePreview": 0,
            "username": "elenzil",
            "viewed": 614
        },
        "renderpass": [
            {
                "code": "#define GRADMAG(f) (sqrt(dFdx(f) * dFdx(f) + dFdy(f) * dFdy(f)))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float cellDensity = 7.0; // sin(iTime) * 1.0 + 5.0;\n    float lineWidth   = 2.0;\n    \n    vec2 ms = iMouse.xy;\n    if (ms.x < 10.0 && ms.y < 10.0) {\n        ms.x = sin(iTime * 0.31) * 0.5 + 0.5;\n        ms.y = cos(iTime * 0.34) * 0.5 + 0.5;\n        ms *= iResolution.xy;\n    }\n    \n    vec2 p = (fragCoord - iResolution.xy / 2.0) / iResolution.y;\n    \n    p *= cellDensity;\n    p.y += 0.5;\n  //  p += iTime * vec2(1.0, 0.0);\n    \n    p = (fract(p) - 0.5) * 2.0;\n    \n    float d = length(fragCoord - ms) / 100.0;\n    d = d - length(p);\n    \n    // d = 1.0 / (0.0 + d);\n    \n    // because we're dividing by fwidth below,\n    // d can be scaled by any value here without effect !\n    d *= 10000.0;\n        \n    float l = smoothstep(0.1, 0.0, abs(d) / GRADMAG(d) / (10.0 * lineWidth));\n    \n    fragColor = vec4(vec3(l),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}