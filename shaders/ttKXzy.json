{
    "Shader": {
        "info": {
            "date": "1583086016",
            "description": "I combined two of my shaders to make this animation.",
            "flags": 0,
            "hasliked": 0,
            "id": "ttKXzy",
            "likes": 2,
            "name": "Fractal storm",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 265
        },
        "renderpass": [
            {
                "code": "\n//This parameter changes the magnification.\nconst float mag = 9.0;\n\nconst float GREEN = 0.0;\nconst float BLUE = 1.0;\nconst float GRAY = 2.0;\nconst float YELLOW = 3.0;\nconst float RED = 5.0;\nconst float WHITE = 6.0;\n//this function is from https://www.shadertoy.com/view/4djSRW\nfloat hash12(vec2 p)\n{\n\tfloat num_colors = 3.0;\n    //set the number of colors to be randomly generated\n    \n    vec3 p3  = fract(vec3(p.xyx) * (.1031));\n    p3 += dot(p3, p3.yzx + 33.33+iTime/1000.);\n    return floor(fract((p3.x + p3.y) * p3.z)*num_colors);\n}\n\n\nvec3 hash32(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy+p3.yzz)*p3.zyx);\n}\n\n\nfloat magnify1(vec2 fragCoord,float mag){\n\treturn hash12(floor(fragCoord/pow(2.0,mag)));\n}\n\nfloat pixel_above(vec2 fragCoord,float mag){\n\treturn magnify1(fragCoord+vec2(pow(2.0,mag),0)*iTime,mag);\n}\n\nvoid rainbowClouds( out float fragColor, in vec2 fragCoord,float maximum)\n{\n    float color1 = 0.0;\n    for(float i = 1.0; i < 1.0+maximum; i++){\n    \tcolor1 += pixel_above(fragCoord,i+1.0)+magnify1(fragCoord,maximum);\n    }\n    fragColor = color1/maximum;\n}\n\nfloat magnify(vec2 fragCoord,float mag){\n\tfloat the_color;\n    rainbowClouds(the_color,fragCoord,mag);\n    return floor(the_color);\n}\n\nbool is_above(vec2 fragCoord,float mag,float color){\n\treturn magnify(fragCoord,mag) == color;\n}\nbool is_surrounded_by(vec2 fragCoord,float mag,float color){\n\treturn magnify(fragCoord+vec2(0,1),mag) == color\n        && magnify(fragCoord+vec2(1,0),mag) == color\n        && magnify(fragCoord-vec2(0,1),mag) == color\n        && magnify(fragCoord-vec2(1,0),mag) == color;\n}\n\nbool is_next_to(vec2 fragCoord,float mag,float color){\n\treturn magnify(fragCoord+vec2(0,1),mag) == color\n        || magnify(fragCoord+vec2(1,0),mag) == color\n        || magnify(fragCoord-vec2(0,1),mag) == color\n        || magnify(fragCoord-vec2(1,0),mag) == color;\n}\n\n\nvec3 get_color(float color){\n    if(color == BLUE){\n    \treturn vec3(0.149,0.141,0.912);\n   \t}\n    else if(color == GREEN){\n    \treturn vec3(0.000,0.833,0.224);\n   \t}\n    else if(color == RED){\n    \treturn vec3(1.0,0.0,0.0);\n   \t}\n    else if(color == WHITE){\n    \treturn vec3(1.0,1.0,1.0);\n   \t}\n    else if(color == GRAY){\n    \treturn vec3(192.0,192.0,192.0)/255.0;\n    }\n    else if(color == YELLOW){\n    \treturn vec3(1.0,1.0,0.0);\n   \t}\n}\n\nfloat iterations(float color1,in vec2 fragCoord,float mag){\n    float mag1 = 0.0;\n    while(mag1 < mag){\n    bool modified = true;\n    if(color1 == GREEN && is_next_to(fragCoord,mag1,BLUE)){\n    \tcolor1 = BLUE;\n    }\n    else if(color1 == BLUE && is_next_to(fragCoord,mag1,GREEN)){\n    \tcolor1 = YELLOW;\n    }\n    else if(color1 == YELLOW && is_next_to(fragCoord,mag1,BLUE)){\n    \tcolor1 = GREEN;\n    }\n    \n    mag1 += 1.0;\n    }\n    return color1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragCoord = fragCoord + iTime*vec2(50.0,0.0);\n    float color1 = magnify(fragCoord,mag);\n    //color1 = replace_pattern(mat2(1.0,1.0,1.0,1.0),mat2(0.0,2.0,2.0,0.0),fragCoord,mag);\n\n    color1 = iterations(color1,fragCoord,mag-1.0);\n\n    fragColor = vec4(get_color(color1),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}