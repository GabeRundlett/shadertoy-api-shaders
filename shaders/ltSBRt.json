{
    "Shader": {
        "info": {
            "date": "1516815951",
            "description": "Rayleigh scattering is maximal at violet, not blue ! ;-)\nfrom top to bottom:\n- Rayleigh intensity\n- 1freq perception\n- sum up to freq\n- sum up to freq * Rayleigh\n- sum up to freq                    (chrominance)\n- sum up to freq * Rayleigh  (chrominance)\n",
            "flags": 0,
            "hasliked": 0,
            "id": "ltSBRt",
            "likes": 18,
            "name": "why sky color is not violet",
            "published": 3,
            "tags": [
                "spectrum",
                "color",
                "sky",
                "rayleigh",
                "perception",
                "metameric"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1189
        },
        "renderpass": [
            {
                "code": "// perception = int( intensity(f) * coneResponse(f) )\n// using very heuristical cone response. ( May try with: https://www.shadertoy.com/view/llKSDz )\n// missing: solar spectrum ( cut some violet )\n\n#define N 50.            // spectrum sampling rate\n\n#define RGB(f, fc) ( .5 + .5* cos(3.14*clamp(f-(fc),-1.,1.) ) ) // base lobe approximation\n#define EQ(f,a) ( abs(f-(a)) < .5/N )\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    O -= O;\n    vec2 R = iResolution.xy;\n    U /= R;\n    float y = 6.*U.y, a = fract(y),\n          F = 2.*(2.*U.x-1.),\n          I, v=0., r;    \n    if (a < 6./R.y) return;                        // line separator\n    \n    for (float f=-2.; f<2.; f+=1./N) {             // --- color spectrum (normalized):\n        r = 909.*pow(5.5-f,-4.);                   // Rayleigh scattering ~ 1/lambda^4\n        I =   y > 5. ?   EQ(f,F) ? smoothstep(.04,0.,abs(a-r/3.)) : 0. // Rayleigh curve\n            : y > 4. ?   EQ(f,F) ? 1. : 0.         // peak at F\n            : y > 3. ?      f<F  ? 1. : 0.         // sum from IR to F\n            : y > 2. ?      f<F  ? r  : 0.         // with Rayleigh intensity\n            : y > 1. ?      f<F  ? 1. : 0.         // sames displayed with chrominance only\n            :               f<F  ? r  : 0.;        \n        v += I;\n        O[0] += I * ( RGB(f, -2./3.)*.7 + RGB(f, 2./3.)*.3);  // perceptive integration\n        O[1] += I * RGB(f,  0.   );\n        O[2] += I * RGB(f,  2./3.);\n    }\n    \n    if ( y > 2. && y < 4. ) O *= 2./v;\n    if ( y < 2. ) O /= max(O.r,max(O.g,O.b));      // chrominance only\n    O = pow(O,vec4(1./2.2));                       // RGB to sRGB transform\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}