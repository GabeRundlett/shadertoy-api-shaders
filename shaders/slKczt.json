{
    "Shader": {
        "info": {
            "date": "1662048319",
            "description": "!!",
            "flags": 0,
            "hasliked": 0,
            "id": "slKczt",
            "likes": 7,
            "name": "Spirals wee",
            "published": 3,
            "tags": [
                "3d",
                "spheres",
                "stars",
                "spirals"
            ],
            "usePreview": 0,
            "username": "lechuga",
            "viewed": 319
        },
        "renderpass": [
            {
                "code": "\n#define nois texture(iChannel0, vec2(0.1)).x * 3.5\n#define t mod(iTime, 100.)\n#define fin return vec2(d, id)\n#define pi acos(-1.)\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\nfloat h(float a){\n  return fract(sin(a*324.43)*455.3434);\n}\nfloat h(vec2 a){\n  return fract(sin(dot(a,vec2(234.45,456.5))*347.734));\n}\nfloat c(float tt){\n  tt *= .5;\n  return mix(h(floor(tt)), h(floor(tt)+1.), pow(smoothstep(0., 1., fract(tt)), 40.));\n}\nfloat pp = 1.;\nvec2 m(vec3 p){\n  float d,id;\n  vec3 ppp = p;\n  p.x += sin(p.z*smoothstep(1.21, -1.25,nois))*.25+.25;\n  vec3 p2 = p;\n  p2.x = atan(p.y,p.x)*20./3.141592;\n  p2.x -= p.z*.1+t*16.;\n  p2.y = length(p.xy)-19.;\n  float s = 5.;\n  p2.z += t*26.75;\n  p2 = (fract(p2/s-.5)-.5)*s;\n  d = length(p2)-.125-nois*.0625;\n  pp += 1./(1.+d*d)*nois;\n  fin;\n}\n\nvec3 nm(vec3 p){\n  vec2 e= vec2(0.01,0.);\n  return normalize(m(p).x-vec3(m(p-e.xyy).x, m(p-e.yxy).x, m(p-e.yyx).x));\n}\n\nvoid ray(inout vec3 p, inout vec3 r, inout vec3 co){\n  vec3 l = vec3(-1.);\n  float dd = 1.;\n  for(float i = 0.; i < 100.; i++){\n    vec2 e = m(p);\n    float d = e.x;\n    float id = e.y;\n    if(d < .01){\n      \n      vec3 n = nm(p);\n      float dif = clamp(dot(l,n), 0., 1.);\n      co = vec3(dif);\n      dd += d;\n      break;\n      \n    }\n    else if(dd > 100.) break;\n    p+=d*r;\n    \n  }\n  \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec3 s = vec3(0.01,0.01,-10.01);\n    vec2 uv = fragCoord / iResolution.xy;\n    uv -= .5;\n    uv /= vec2(iResolution.y / iResolution.x, 1.);\n  \n  vec3 p = s;\n  vec3 tg = vec3(0.01+sin(t+pi)*.15, 0.01+sin(t+pi)*.16, 0.01);\n  vec3 cz = normalize(tg-s);\n  vec3 cx = normalize(cross(cz,vec3(0., -1., 0.)));\n  vec3 cy = normalize(cross(cz,cx));\n  vec3 r = mat3(cx,cy,cz)*normalize(vec3(uv, 1.+c(t)*10.));\n  vec3 co = vec3(0.165);\n  \n  ray(p,r,co);\n  co += pp*vec3(.23,.45,.56);\n  co = pow(co, vec3(.3435));\n  co *= 1.-length(p)*.005;\n\tfragColor = vec4(co, 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 18,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}