{
    "Shader": {
        "info": {
            "date": "1490565921",
            "description": "Shader version of this fantastic [url=https://es.pinterest.com/pin/473792823282294133/]piece of art[/url].",
            "flags": 0,
            "hasliked": 0,
            "id": "MsSyRz",
            "likes": 71,
            "name": "Giraffe(s) 2D",
            "published": 3,
            "tags": [
                "animation",
                "shapes",
                "vector",
                "art",
                "minimalist",
                "animal",
                "sines",
                "giraffe",
                "safari",
                "vectorart"
            ],
            "usePreview": 0,
            "username": "josemorval",
            "viewed": 2158
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159\n#define PI2 PI*2.0\n#define sm(a,b) smoothstep( a - 10./iResolution.y, a, b)\n\nfloat EvaluateCustomMove(float time, float a, float b){\n  float t = time;\n  t = mod(t,1.0);\n  t=pow(-4.0*t*(t-1.0),1.0);\n  return a*(1.0-t) + b*t;\n}\n\nfloat PatternCircles(vec2 p, float m){\n  p.x-=m/2.0*step(0.0,sin(PI*p.y/m));\n  p = mod(p,m)-m/2.0;\n  return 1.0-sm(0.0,(p.x*p.x+p.y*p.y)-1.0);\n}\n\nvec4 rgba(float r, float g, float b, float a){\n  return vec4(r/255.0,g/255.0,b/255.0,a/255.0);\n}\n\nvec2 vec2_n(float x, float y){\n  return normalize(vec2(x,y));\n}\n\nfloat sRegion(vec2 p, vec2 dir){\n  return step(0.0,dot(p,dir));\n}\n\nfloat sSquare(vec2 p){\n  return sRegion(p+vec2(1.0,0.0),vec2_n(1.0,0.0))*\n         sRegion(p+vec2(-1.0,0.0),vec2_n(-1.0,0.0))*\n         sRegion(p+vec2(0.0,1.0),vec2_n(0.0,1.0))*\n         sRegion(p+vec2(0.0,-1.0),vec2_n(0.0,-1.0));\n}\n\nfloat sCircle(vec2 p, float radius){\n  return sm(0.0,radius*radius-(p.x*p.x+p.y*p.y));\n}\n\nfloat sSemiCircle(vec2 p, float radius){\n  return sm(0.0,p.y) * sCircle(p,radius);\n}\n\nfloat fHead(vec2 p, float width){\n  vec2 psquare = p;\n  psquare.x/=width;\n  return max(\n            max(sCircle(p-vec2(-width,0.0),1.0),\n                sCircle(p-vec2(width,0.0),1.0)\n            ),\n            sSquare(psquare))\n            ;\n}\n\n\nfloat fBody(vec2 p){\n\n  vec2 psquare = p;\n\n  vec2 pinvcirc = p;\n  pinvcirc -= vec2(-1.95,2.6);\n\n  vec2 pcirc = p;\n\n  float f = sCircle(pcirc,1.0);\n  psquare.x *= 1.2;\n  psquare -= vec2(-1.0,0.0);\n  f = max(f,sSquare(psquare));\n  psquare = p;\n  psquare.y *= 1.0;\n  psquare.x *= 1.5;\n  psquare -= vec2(0.5,1.0);\n  f = max(f,sSquare(psquare));\n\n  f = min(f,(1.0-1.0*sCircle(pinvcirc,2.5)));\n  return f;\n}\n\nfloat fLollipop(vec2 p, float width, float height, float radius){\n  vec2 psquare = p;\n  psquare.y-=(1.0+height)*radius;\n  psquare.x/=width;\n  psquare.y/=height;\n  return max(sCircle(p,radius),sSquare(psquare));\n}\n\nfloat fLeg(vec2 p, float amp, float thickness){\n  float f = p.y-amp*sin(p.x);\n  f = (1.0-sm(0.0,p.x-PI))*sm(0.0,p.x)*(1.0-sm(thickness,f))*sm(-thickness,f);\n  return f;\n}\n\nfloat fTail(vec2 p, float amp, float thickness,float limitx){\n  return fLeg(p,amp,thickness)*(1.0-sm(0.0,p.x-limitx));\n}\n\nfloat fEye(vec2 p,float thickness,float limitx){\n  return sm(-limitx,p.x)*(1.0-sm(limitx,p.x))*sm(-thickness,p.y-p.x*p.x)*(1.0-sm(thickness,p.y-p.x*p.x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n  float time = 3.0*iTime;\n  vec4 backgroundCol = rgba(38.0,173.0,106.0,1.0);\n  vec4 shadowCol = rgba(34.0,130.0,89.0,1.0);\n  vec4 skinCol = rgba(255.0,207.0,64.0,1.0);\n  vec4 noseCol = rgba(232.0,163.0,1.0,0.0);\n  vec4 spotsCol = rgba(208.0,124.0,74.0,1.0);\n  vec4 blackCol = vec4(0.0,0.0,0.0,1.0);\n  \n  vec4 col = backgroundCol;\n\n  vec2 p = fragCoord.xy/iResolution.xy;\n  p -= 0.5;\n  p.x*=iResolution.x/iResolution.y;\n  p.y-=-0.3;\n  p*=19.0;\n  p.x-=mod(time,22.0*2.0)-22.0;\n  \n  //Inspired by Javier Ag√ºera, iapafoto and FabriceNeyret2, \n  //here a little familiar improve :)\n  \n  //Just for fun!\n  //float k = 1.5 + 3.5*(0.5-0.5*cos(time));\n  float k = 1.;\n  float motherHeight = mix(k,6.0-k,step(0.0,p.x));\n  p.x = mix(p.x,mod(p.x,6.)-2.5,step(-6.0,p.x)*(1.0-step(6.0,p.x))); \n\n  float f;\n\n  vec2 pbody = p;\n  pbody.y+=EvaluateCustomMove(time,0.0,-0.4*PI);\n  f = fBody(pbody);\n  col = mix(col,skinCol,f);\n  f *= PatternCircles(3.0*pbody,3.0)+\n  PatternCircles(7.0*(pbody+vec2(0.0,0.7)),7.0); \n  f*=step(1.0,pbody.y);\n  col = mix(col,spotsCol,f);\n\n\n  vec2 psquare = pbody;\n  psquare.x-=0.74;\n  psquare.y-=7.0-(5.0-motherHeight);\n  psquare.x*=3.8;\n  psquare.y/=motherHeight;\n  f =sSquare(psquare);\n  col = mix(col,skinCol,f);\n  f *= PatternCircles(3.0*pbody,3.0)+\n  PatternCircles(7.0*(pbody+vec2(0.0,0.7)),7.0);\n  f*=1.0-step(11.0,pbody.y);\n  col = mix(col,spotsCol,f);\n\n    \n  vec2 phead = p;\n  phead -= vec2(2.75,12.4-1.85*(5.0-motherHeight));\n  float t = EvaluateCustomMove(time,0.05*PI2,-0.05*PI2);\n  phead = mat2(cos(t),-sin(t),sin(t),cos(t))*phead;\n  phead*=1.3;\n  phead -= vec2(-1.0,0.0);\n  f = fHead(phead,1.0);\n  col = mix(col,skinCol,f);\n\n  vec2 pear = pbody;\n  t = PI+EvaluateCustomMove(time,-0.2*PI,0.1*PI);\n  pear -= vec2(0.4,12.0-1.85*(5.0-motherHeight));\n  pear = mat2(cos(t),-sin(t),sin(t),cos(t))*pear;\n  pear *= 2.0;\n  pear += vec2(-1.0,0.0);\n  \n  pear.x*=0.8;\n  f = sSemiCircle(pear,1.0);\n  col = mix(col,skinCol,f);\n\n  vec2 plollipop = phead;\n  plollipop -= vec2(-1.9,2.0);\n  plollipop = mat2(cos(PI),-sin(PI),sin(PI),cos(PI))*plollipop;\n  f = fLollipop(3.4*plollipop,0.25,2.5,1.0);\n  col = mix(col,skinCol,f);\n\n  plollipop = phead;\n  plollipop -= vec2(-1.1,2.4);\n  plollipop = mat2(cos(PI),-sin(PI),sin(PI),cos(PI))*plollipop;\n  f = fLollipop(3.5*plollipop,0.25,2.5,1.0);\n  col = mix(col,skinCol,f);\n\n  vec2 pnose = 3.5*phead;\n  pnose-=vec2(3.3,1.5);\n  f = sCircle(pnose,1.0);\n  pnose = 3.5*phead;\n  pnose-=vec2(3.3,-1.5);\n  f += sCircle(pnose,1.0);\n  col = mix(col,noseCol,f);  \n\n  vec2 peye = 3.0*phead;\n  peye -= vec2(-3.0,0.4);\n  peye.x*=1.3;\n  f = fEye(peye,0.2,1.1);\n  col = mix(col,blackCol,f);  \n\n  float angle,amp;\n\n  vec2 pleg = pbody;\n  pleg.y-=-0.9;\n  pleg.x-=0.3;\n  angle = EvaluateCustomMove(time,-PI/2.0,-0.6*PI/2.0);\n  pleg = mat2(cos(angle),-sin(angle),sin(angle),cos(angle))*pleg;\n  pleg*=1.7;\n  amp = 0.6*sin(2.0*PI*time);\n  f = fLeg(pleg,amp,0.12);\n  col = mix(col,skinCol,f);\n\n  pleg = pbody;\n  pleg.y-=-0.9;\n  pleg.x-=-1.0;\n  angle = EvaluateCustomMove(time,-PI/2.0,-0.6*PI/2.0);\n  pleg = mat2(cos(angle),-sin(angle),sin(angle),cos(angle))*pleg;\n  pleg*=1.7;\n  amp = 0.5*sin(2.0*PI*time);\n  f = fLeg(pleg,amp,0.12);\n  col = mix(col,skinCol,f);\n\n  pleg = pbody;\n  pleg.y-=-0.9;\n  pleg.x-=-1.2;\n  angle = EvaluateCustomMove(time,-PI/2.0,-1.5*PI/2.0);\n  pleg = mat2(cos(angle),-sin(angle),sin(angle),cos(angle))*pleg;\n  pleg*=1.7;\n  amp = 0.8*(0.5-0.5*cos(2.0*PI*time));\n  f = fLeg(pleg,amp,0.12);\n  col = mix(col,skinCol,f);\n\n  pleg = pbody;\n  pleg.y-=-0.9;\n  pleg.x-=-0.0;\n  angle = EvaluateCustomMove(time,-PI/2.0,-1.5*PI/2.0);\n  pleg = mat2(cos(angle),-sin(angle),sin(angle),cos(angle))*pleg;\n  pleg*=1.7;\n  amp = 0.8*(0.5-0.5*cos(2.0*PI*time));\n  f = fLeg(pleg,amp,0.12);\n  col = mix(col,skinCol,f);\n\n  vec2 ptail = pbody;\n  ptail-=vec2(-1.6,0.05);\n  angle = PI + EvaluateCustomMove(time,-0.8*PI/2.0,0.8*PI/2.0);;\n  ptail = mat2(cos(angle),-sin(angle),sin(angle),cos(angle))*ptail;\n  ptail*=3.0;\n  ptail.x*=1.0;\n  amp = 0.4*cos(2.0*PI*time);\n  f = fLeg(ptail,amp,0.2);\n  col = mix(col,skinCol,f);\n\n  vec2 pshadow = 7.0*p;\n  pshadow-=vec2(-3.0,-20.0);\n  float len = EvaluateCustomMove(time,8.0,15.0);\n  f=fHead(pshadow,len);\n  col = mix(col,shadowCol,f);  \n  \n  fragColor = col;\n\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}