{
    "Shader": {
        "info": {
            "date": "1675850171",
            "description": "ripple normal",
            "flags": 0,
            "hasliked": 0,
            "id": "ct2Szw",
            "likes": 2,
            "name": "ripple_xiao",
            "published": 3,
            "tags": [
                "normal"
            ],
            "usePreview": 0,
            "username": "The_King_Of_Shader",
            "viewed": 186
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord/iResolution.xy) - vec2(0.5);\n    vec2 uv2 = (fragCoord/iResolution.xy) - vec2(0.5,0.505);\n    vec2 uv3 = (fragCoord/iResolution.xy) - vec2(0.505,0.5);\n    float Circle = (length(uv) + (5.*(iTime*-0.02))) * 40.;\n    float Circle2 = (length(uv2) + (5.*(iTime*-0.02))) * 40.;\n    float Circle3 = (length(uv3) + (5.*(iTime*-0.02))) * 40.;\n\n    float Cc = (sin(Circle)+1.)/2.;\n    float Cc2 = (sin(Circle2)+1.)/2.;\n    float Cc3 = (sin(Circle3)+1.)/2.;\n    float intensity = 10.;\n    float Cy = (Cc-Cc2) * intensity;\n    float Cx = (Cc-Cc3) * intensity;\n\n    vec3 Result = normalize(cross(vec3(1,0,Cy),vec3(0,1,Cx)));\n    Result *= vec3(1.,1.,Result.z*10.);\n    fragColor=vec4(vec3(Result),1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}