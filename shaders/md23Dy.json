{
    "Shader": {
        "info": {
            "date": "1668096712",
            "description": "distance",
            "flags": 0,
            "hasliked": 0,
            "id": "md23Dy",
            "likes": 1,
            "name": "distance to line 2 ",
            "published": 3,
            "tags": [
                "distance"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 197
        },
        "renderpass": [
            {
                "code": "float f_n_dist_to_line(\n    vec2 o_p1, \n    vec2 o_p2,\n    vec2 o_pixel_coord_norm\n){\n\n    //y = m*x + b\n    // y = m*(x-x1) + y1;\n    if(o_p1.x > o_p2.x){\n        vec2 o_p_tmp = o_p1; \n        o_p1 = o_p2;\n        o_p2 = o_p_tmp;\n    }\n    vec2 o_delta = o_p2-o_p1; \n    \n    float n_m = o_delta.y/o_delta.x;\n    \n    float n_y = n_m * (o_pixel_coord_norm.x - o_p1.x) + o_p1.y;\n\n    float n_dist_line = length(o_pixel_coord_norm-vec2(o_pixel_coord_norm.x, n_y));\n    \n    if(\n        o_pixel_coord_norm.x < min(o_p1.x, o_p2.x)\n    ){\n        n_dist_line = length(o_pixel_coord_norm-o_p1);\n        n_dist_line = 1.0;\n    }\n    if(\n        o_pixel_coord_norm.x > max(o_p1.x, o_p2.x)\n    ){\n        n_dist_line = length(o_pixel_coord_norm-o_p2);\n        n_dist_line = 1.0;\n    }\n    \n    return n_dist_line;\n    \n\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 o_pixel_coord_norm = fragCoord.xy / iResolution.xy;\n    vec2 o_mouse_coord_norm = iMouse.xy / iResolution.xy;\n    if(iMouse.w==0.0){o_mouse_coord_norm =vec2(0.5,0.5);}\n    o_pixel_coord_norm -= 0.5;\n    float n_tau = 6.283185;\n    o_pixel_coord_norm.x *= iResolution.x/iResolution.y;\n\n    o_pixel_coord_norm *=10.0*o_mouse_coord_norm.x;\n    float n_amp = 0.5; \n    float n_lines = 99.0;\n    \n    float delta_x = o_pixel_coord_norm.x - 0.0;\n    float delta_y = o_pixel_coord_norm.y - 0.0;\n    float theta_radians = atan(delta_y, delta_x);\n    float n_nth_line = theta_radians/(n_tau / n_lines);\n    float n_radians = n_tau * n_nth_line; \n\n    float n_x = sin(n_radians)*n_amp;\n    float n_y = cos(n_radians)*n_amp;\n\n    float n_dist_to_line = f_n_dist_to_line(\n        vec2(0.0, 0.0),\n        vec2(n_x, n_y), \n        o_pixel_coord_norm\n    );\n            \n    fragColor = vec4(n_dist_to_line);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}