{
    "Shader": {
        "info": {
            "date": "1449553263",
            "description": "test2",
            "flags": 0,
            "hasliked": 0,
            "id": "4scGWN",
            "likes": 8,
            "name": "test2 endomorphosis",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "endomorphosis",
            "viewed": 876
        },
        "renderpass": [
            {
                "code": "// Created by inigo quilez - iq/2014\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\n// A simple and cheap 2D shader to accompany the Pirates of the Caribean music.\n\n\nfloat fbm( vec2 p )\n{\n    return 0.5000*texture( iChannel1, p*1.00 ).x + \n           0.2500*texture( iChannel1, p*2.02 ).x + \n           0.1250*texture( iChannel1, p*4.03 ).x + \n           0.0625*texture( iChannel1, p*8.04 ).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = mod( iTime, 60.0 );\n\tvec2 p = (-iResolution.xy+2.0*fragCoord.xy) / iResolution.y;\n    vec2 i = p;\n\n    // camera\n    p += vec2(1.0,3.0)*0.001*2.0*cos( iTime*5.0 + vec2(0.0,1.5) );    \n    p += vec2(1.0,3.0)*0.001*1.0*cos( iTime*1.0 + vec2(1.0,4.5) );    \n    p *= 0.85 + 0.05*length(p);\n    float an = 0.3*sin( 0.1*time );\n    float co = cos(an);\n    float si = sin(an);\n    p = mat2( co, -si, si, co )*p;\n    \n    // water\n    vec2 q = vec2(p.x,1.0)/p.y;\n    q.y -= 0.9*time;    \n    vec2 off = texture( iChannel0, 0.1*q*vec2(1.0,2.0) - vec2(0.0,0.007*iTime) ).xy;\n    q += 0.4*(-1.0 + 2.0*off);\n    vec3 col = texture( iChannel0, 0.1*q *vec2(.5,8.0) + vec2(0.0,0.01*iTime) ).zyx;\n    col *= 0.4;\n    float re = 1.0-smoothstep( 0.0, 0.7, abs(p.x-0.6) - abs(p.y)*0.5+0.2 );\n    col += 1.0*vec3(1.0,0.9,0.73)*re*0.2*off.y*5.0*(1.0-col.x);\n    float re2 = 1.0-smoothstep( 0.0, 2.0, abs(p.x-0.6) - abs(p.y)*0.85 );\n    col += 0.7*re2*smoothstep(0.35,1.0,texture( iChannel1, 0.1*q *vec2(0.5,8.0) ).x);\n    \n    // sky\n    vec3 sky = vec3(0.0,0.05,0.1)*1.4;\n    // stars    \n    sky += 0.5*smoothstep( 0.95,1.00,texture( iChannel1, 0.25*p ).x);\n    sky += 0.5*smoothstep( 0.85,1.0,texture( iChannel1, 0.25*p ).x);\n    sky += 0.2*pow(1.0-max(0.0,p.y),2.0);\n    // clouds    \n    float f = fbm( 0.002*vec2(p.x,1.0)/p.y );\n    vec3 cloud = vec3(0.3,0.4,0.5)*0.7*(1.0-0.85*sqrt(smoothstep(0.4,1.0,f)));\n    sky = mix( sky, cloud, 0.95*smoothstep( 0.4, 0.6, f ) );\n    sky = mix( sky, vec3(0.33,0.34,0.35), pow(1.0-max(0.0,p.y),2.0) );\n    col = mix( col, sky, smoothstep(0.0,0.1,p.y) );\n    \n    // horizon\n    col += 0.1*pow(clamp(1.0-abs(p.y),0.0,1.0),9.0);\n\n    // moon\n    float d = length(p-vec2(0.6,0.5));\n    float g = 1.0 - smoothstep( 0.2, 0.22, d );\n    float moontex = 0.8+0.2*smoothstep(0.25,0.7,fbm(0.06*p));\n    vec3 moon = vec3(1.0,0.97,0.9)*(1.0-0.1*smoothstep(0.2,0.5,f));\n    col += 0.8*moon*exp(-4.0*d)*vec3(1.1,1.0,0.8);\n    col += 0.2*moon*exp(-2.0*d);\n    col = mix( col, moon*moontex, g );\n    \n    // postprocess\n    col *= 1.4;\n    col = pow( col, vec3(1.5,1.2,1.0) );    \n    col *= clamp(1.0-0.3*length(i), 0.0, 1.0 );\n\n    // fade\n\n    fragColor = vec4( col, 1.0 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}