{
    "Shader": {
        "info": {
            "date": "1632914470",
            "description": "benching  Box–Muller vs Marsaglia polar Gaussian RNG methods.\nno surprise: the rejection variant, even if sometime faster on CPU ( no sin/cos ), is desastrous on SIMD parallelism : 4 to 8 times slower.\nSwitch 1st and last comments to see distribution.",
            "flags": 0,
            "hasliked": 0,
            "id": "fscXDr",
            "likes": 2,
            "name": " benching Gaussian generators",
            "published": 3,
            "tags": [
                "gaussian",
                "rng"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 270
        },
        "renderpass": [
            {
                "code": "// generation Gaussian samples: benching  Box–Muller vs Marsaglia polar methods\n// https://en.wikipedia.org/wiki/Normal_distribution#Generating_values_from_normal_distribution\n\n// #define H(p) fract(sin((p)*mat2(127.1,311.7, 269.5,183.3)) *43758.5453123)\n   #define H(p) fract((p)/1.237) // fake hash to avoid counting this time\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R =  iResolution.xy,\n         U =  u/R - .5, H;\n    for(float i=0.,s,j; i < 10000.; i++) { // to get measurable durations\n    \n#if 1                      // --- Box–Muller method : 270 ms  Fake hash : 194 ms\n      H = H(U+i); \n  //  O.xy += H; continue; //     raw Uniform eval  : 202 ms  Fake hash : 108 ms\n      H = sqrt(-2.*log(H.x)) * vec2( sin(H.y*=6.283),cos(H.y)); \n#else                      // --- Marsaglia polar method : 715 ms\n      for( s = 2.,j=i; s > 1.; j+=.12347) { \n          H = 2.* H(U+j) - 1.; \n          s = dot(H,H); \n      }\n      H = sqrt(-2.*log(s)/s) * H;\n#endif\n      O.xy += H;           // to fight the optimizer \n   // O += vec4( max(0., 2.-R.y * length( 5.*U - H ) ) ); // display distrib instead\n  }\n        \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}