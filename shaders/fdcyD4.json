{
    "Shader": {
        "info": {
            "date": "1653428413",
            "description": "fps fixes",
            "flags": 32,
            "hasliked": 0,
            "id": "fdcyD4",
            "likes": 4,
            "name": "voronoi procedural islands",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "ArmandB",
            "viewed": 268
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    \n    vec3 col = texelFetch(iChannel0, ivec2(fragCoord),0).rgb;\n    float n = voronoi3d(vec3((uv+vec2(iTime/20.0,0))*5.0,40.0))*voronoi3d(vec3((uv+vec2(iTime/20.0,0))*30.0,40.0+iTime/3.0))/2.0;\n    col = smoothmix(vec3(1.0 - n*3.0), col, -0.01, 0.03, clamp(n-0.05,0.0,1.0));\n    \n    fragColor = vec4(col, 0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iFrame <= 1){\n        vec2 uv = fragCoord/iResolution.y;\n\n        vec3 col = vec3(0,0,1);\n        \n        col = smoothmix(vec3(0,0.5,1), col, 0.1, 0.3, voronoi3d(vec3(uv*5.0,1.0))+voronoi3d(vec3(uv*10.0,1.0))/2.0-0.6);\n        col = smoothmix(vec3(0.9,1.0,0.4), col, 0.05, 0.08, voronoi3d(vec3(uv*5.0,1.0))+voronoi3d(vec3(uv*10.0,1.0))/2.0-0.6);\n        col = smoothmix(vec3(0.1,0.8,0), col, 0.0, 0.03, voronoi3d(vec3(uv*5.0,1.0))+voronoi3d(vec3(uv*10.0,1.0))/2.0-0.6);\n        col = smoothmix(vec3(0.2,0.6,0.1), col, -0.08, 0.0, voronoi3d(vec3(uv*5.0,1.0))+voronoi3d(vec3(uv*10.0,1.0))/2.0-0.6);\n        col = smoothmix(vec3(0,0.4,0.2), col, 0.0, 0.03, voronoi3d(vec3(uv*100.0,1.0))+mix(0.0,1.0,smoothstep(-0.1, -0.02, voronoi3d(vec3(uv*5.0,1.0))+voronoi3d(vec3(uv*10.0,1.0))/2.0-0.6))-0.6);\n        \n        fragColor = vec4(col,1);\n        \n    } else {\n        fragColor = texelFetch(iChannel0, ivec2(fragCoord),0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "//given a point, output a random point with values from 0 to 1\n///  3 out, 3 in...\nvec3 hash33(vec3 p3) //https://www.shadertoy.com/view/4djSRW\n{\n\tp3 = fract(p3 * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy + p3.yxx)*p3.zyx);\n\n}\n\n//https://iquilezles.org/articles/smin/\n// power smooth min (k=8)\nfloat smin( float a, float b, float k )\n{\n    a = pow( a, k ); b = pow( b, k );\n    return pow( (a*b)/(a+b), 1.0/k );\n}\n\nfloat voronoi3d(vec3 uv){\n    //assume uv is on a 0-1 scale\n    float n = 999.0;\n    for (int x = -1; x < 2; x++){\n        for (int y = -1; y < 2; y++){\n            for (int z = -1; z < 2; z++){\n                n = smin(n,distance(floor(uv) + vec3(x,y,z) + hash33(floor(uv) + vec3(x,y,z)),uv),8.0);\n            }\n        }\n    }\n    return n;\n}\n\nvec3 smoothmix(vec3 a, vec3 b, float l, float h, float t){\n    return mix(a,b,smoothstep(l,h,t));\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}