{
    "Shader": {
        "info": {
            "date": "1497871077",
            "description": "Voronoi Experiment 14",
            "flags": 0,
            "hasliked": 0,
            "id": "MsXfDB",
            "likes": 8,
            "name": "Voronoi Experiment 14",
            "published": 3,
            "tags": [
                "voronoi",
                "experiment",
                "14"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 572
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - @Aiekick/2017\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// based on my https://www.shadertoy.com/view/MdXBRs\n\nfloat df(vec2 p, vec2 vec)\n{\n    float a = atan(vec.x, vec.y);\n    p *= mat2(cos(a), -sin(a), sin(a), cos(a));\n    p *= 5.;\n    \n    vec *= 10.;\n    \n    vec2 c = p - vec * 0.5;\n    float len = length(vec);\n    \n    return abs(length(c) - len * .5) + 0.6;\n}\n\nvec2 move(vec2 g, vec2 p, float t)\n{\n   return sin( t * 2. + 9. * fract(sin((floor(g)+p)*mat2(2,7,2,5)*mat2(7,-2,2,5))));\n}\n\nvoid mainImage( out vec4 f, vec2 g )\n{\n    vec2 uvt = g / iResolution.xy;\n    \n    vec2 p = g /= iResolution.y / 8., ac,al; f-=f-9.;\n       \t\n    for(int x=-1;x<=1;x++)\n    for(int y=-1;y<=1;y++)\n        p = vec2(x,y),\n        al = move(g,p, iDate.w-.1),\n        ac = move(g,p, iDate.w),\n        p += .5 + .5 * ac - fract(g),\n        f = min(f, df(p,ac-al));\n    \n    f = sqrt(vec4(.5,1,1,1)-mix(0., 1., f.x));\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}