{
    "Shader": {
        "info": {
            "date": "1643651504",
            "description": "Fractal",
            "flags": 0,
            "hasliked": 0,
            "id": "tddyW8",
            "likes": 3,
            "name": "Simple Mandelbrot experiment",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "MarcoF",
            "viewed": 231
        },
        "renderpass": [
            {
                "code": "vec2 cart2pol(vec2 c) {\n    vec2 p = vec2(0);\n    p.x = length(c);\n    if (c.x != 0.0) p.y = atan(c.y / c.x);\n    return p;\n}\n\nvec2 pol2cart(vec2 p) {\n    vec2 c = vec2(0);\n    c.x = p.x * cos(p.y);\n    c.y = p.x * sin(p.y);\n    return c;\n}\n\nvec2 complexPow(vec2 polar, float n) {\n    polar.x = pow(polar.x, n);\n    polar.y *= n;\n    return polar;\n}\n\nvec2 scale(vec2 original, vec2 factor, vec2 pivot) {\n    factor = 1.0 / factor;\n    mat2 s = mat2(factor.x, 0.0, 0.0, factor.y);\n    vec2 result = original;\n    result -= pivot;\n    result *= s;\n    result += pivot;\n    return result;\n}\n\nvec2 nextNumber(vec2 prevZ, vec2 c, float power) {\n    vec2 polarZ = cart2pol(prevZ);\n        \n    polarZ = complexPow(polarZ, power);\n        \n    return pol2cart(polarZ) + c;\n}\n\nfloat zoomSpeed = 2.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float minRes = min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / minRes;\n    uv -= vec2(1.2, 0.5);\n    uv = scale(uv, vec2(0.45), vec2(0.0));\n    vec3 color = vec3(0);\n    \n    // Zoom.\n    //if (iTime > 10.)\n    //\tuv = scale(uv, vec2(iTime*zoomSpeed + 1. - 10.*zoomSpeed), vec2(-1.8, 0.));\n    \n    vec2 z = vec2(0.0);\n    int iterations = 0;\n    while (iterations < int(iTime)) {\n        iterations++;\n        \n        z = nextNumber(z, uv, 2.0);\n    }\n    \n    color = vec3(1) * length(z) / iTime;\n    \n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}