{
    "Shader": {
        "info": {
            "date": "1539180861",
            "description": "weierstrass function",
            "flags": 0,
            "hasliked": 0,
            "id": "4lycDK",
            "likes": 7,
            "name": "sin sum",
            "published": 3,
            "tags": [
                "math"
            ],
            "usePreview": 0,
            "username": "xdaimon",
            "viewed": 513
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926535897932384626433833\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 m = iMouse.xy / iResolution.xy;\n    uv.x += 4.* m.x;\n    //uv.x *= 24.;\n    float s = 0.;\n    float alpha = (1. + 2.*m.y);\n    //float alpha = iTime / 20.;\n    if (iMouse.z < 1.)\n        alpha = 2.;\n    for (int i = 1; i < 101; ++i) {\n        s += sin(PI * uv.x * pow(float(i), alpha)) / (PI * pow(float(i), alpha));\n    }\n    s *= 4.;\n    fragColor = vec4(.004/abs(uv.y*4.-2. - s));\n\n\tfragColor += vec4(.01/(smoothstep(.0, .05, abs(uv.y-.5))), 0, 0, 1);\n    fragColor += vec4(.003/abs(sin(PI * uv.x)));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}