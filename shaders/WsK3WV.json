{
    "Shader": {
        "info": {
            "date": "1570989570",
            "description": "yeah i didn't respect the theme. I wanted to create something cool without any boring raymarching issue",
            "flags": 0,
            "hasliked": 0,
            "id": "WsK3WV",
            "likes": 1,
            "name": "Shadertober 13 Ash",
            "published": 3,
            "tags": [
                "ash",
                "inktober"
            ],
            "usePreview": 0,
            "username": "GreenChicken",
            "viewed": 321
        },
        "renderpass": [
            {
                "code": "// SHADERTOBER 13 Ash\n// Poulet Vert 13-10-2019\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat opU(float s1, float s2) { return min(s1, s2); }\n\nfloat box(vec2 st, float s)\n{\n    vec2 bl = step(s, st);\n    vec2 tr = step(s, 1.0-st);\n    return bl.x * bl.y * tr.x * tr.y;\n}\n\nvec3 render(vec2 st)\n{\n    vec2 uv = st;\n    uv.y = abs(uv.y);\n    uv.x = abs(uv.x);\n    uv.x *= 1.0 - uv.y;\n    \n    uv.y = fract(uv.y-iTime+sin(iTime)); // the slow animation changing\n    \n    float l = step(uv.y, .5);\n    l -= step(fract(sin(uv.x*10.+iTime)), .5);\n    \n    l = clamp(l, 0.0, 1.0);\n    \n    return mix(vec3(1.0, 0.5, 0.0), vec3(0.0, 0.0, .5), l);\n    \n    \n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = 2.0 * fragCoord.xy / iResolution.xy - 1.0;\n    \n    float glitchMotion = random(vec2(fract(iTime)))+sin(iTime);\n    \n    vec3 r1 = render(uv + vec2(0.01*glitchMotion, 0.0));\n    vec3 r2 = render(uv + vec2(-0.01*glitchMotion, 0.0));\n    vec3 r3 = render(uv + vec2(0.0, 0.0));\n    \n    vec3 final = vec3(r3.x, r1.y+r1.y, r3.z);\n    \n    // post effect\n    vec2 st = 2.0 * fragCoord.xy / iResolution.xy - 1.0;\n    st.x *= iResolution.x / iResolution.y;\n    \n    final *= 1.0 - length(st) * .5;\n    final -= random(st)*.1* length(st) * .2;\n    \n    fragColor = vec4(final,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}