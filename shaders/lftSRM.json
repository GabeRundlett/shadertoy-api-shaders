{
    "Shader": {
        "info": {
            "date": "1713749940",
            "description": "implementation of the burning ship fractal\nread more here: https://en.wikipedia.org/wiki/Burning_Ship_fractal",
            "flags": 0,
            "hasliked": 0,
            "id": "lftSRM",
            "likes": 3,
            "name": "burning ships",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "pask",
            "viewed": 196
        },
        "renderpass": [
            {
                "code": "#define MAX_ITERATION 100\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    // fit to mandelbrot scale\n    vec2 c = vec2((uv.x * 3.5) - 2.5, (uv.y * 2.0) - 1.0);\n    \n    // fit to custom scale\n    c /= 10.0;\n    c.x -= 26.0 / 16.0;\n    c.y = -c.y; // flip y\n    c.y -= 0.5 / 16.0;\n    \n    vec2 z = vec2(0.0);\n    int iteration;\n    for (iteration = 0; iteration < MAX_ITERATION; iteration++)\n    {\n        z = vec2(z.x * z.x - z.y * z.y + c.x, 2.0 * abs(z.x * z.y) + c.y);\n        if (length(z) > 4.0)\n            break;\n    }\n    \n    vec3 col = vec3(0.0);\n    if (iteration < MAX_ITERATION)\n    {\n        float f0 = float(iteration) / float(MAX_ITERATION);\n        float f1 = max(0.0, mix(0.4 - f0, 0.1 - f0, uv.y));\n        col = vec3(f0, f1 * 0.8, f1);\n    }\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}