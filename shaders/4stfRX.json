{
    "Shader": {
        "info": {
            "date": "1526160859",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "4stfRX",
            "likes": 29,
            "name": "gyroid",
            "published": 3,
            "tags": [
                "raymarching",
                "sdf",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1109
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 O, vec2 U) {\n    \n    float t = iTime,v,d=t;\n    mat2  R = mat2( sin(t+vec4(0,33,11,0)) );\n    vec3  q = iResolution,\n          D = vec3(.3*(U+U-q.xy)/q.y, -1),              // ray direction\n          p = 30./q, a;                                 // marching point along ray \n    O-=O; \n    for ( O++; O.x > 0. && d > .01 ; O-=.015 )\n        q = p,\n        q.xz *= R, q.yz *= R,                           // rotation\n        d = abs( v= dot(sin(q),cos(q.yzx)) ) -.1,       // gyroid\n        a = abs(q),\n        d = max(d, max(a.x,max(a.y,a.z))-6.),           // clamped to cube\n        a = abs(fract(q)-.5),\n        d = max(d, max(a.x,max(a.y,a.z))-.5+.05*sin(t) ), // grid\n        p += .5*d*D;                                    // step forward = dist to obj\n    O *= v>0. ? vec4(1,.8,.8,1) : vec4(.8,.8,1,1);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}