{
    "Shader": {
        "info": {
            "date": "1723385927",
            "description": "combination  https://www.shadertoy.com/view/4tyfWy https://www.shadertoy.com/view/Nsy3Dy https://www.shadertoy.com/view/mtyGWy",
            "flags": 0,
            "hasliked": 0,
            "id": "lclfz8",
            "likes": 1,
            "name": " colorful Kaleidoscope 12",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 71
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)cos((h)*6.3+vec3(0,23,21))*.5+.5\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\nfloat happy_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\n \n\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    \n     vec2 uv = (C * 2.0 - iResolution.xy) / iResolution.y;\n     \n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    vec2 cPos = -1.0 + 2.0 * C.xy / iResolution.xy;\n    vec2 uv2 = (C * 2.0 - iResolution.xy) / iResolution.y;\n    \n\tfloat cLength = length(cPos);\n\n\t uv =(cPos/cLength)*cos(cLength*12.0-iTime*4.0) * 0.03;\n    for (float i = 0.0; i < 10.0; i++) {\n        uv = fract(atan(uv) * 2.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.4 + iTime*.4);\n\n        d = sin(d*8. + iTime)/8.;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2);\n\n        finalColor += col * d;\n    }\n\n    uv *= 2.0 * ( cos(iTime * 2.0) -2.5); // scale\n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;  // anim between 0.9 - 1.1 \n    \n    vec3 p,r=iResolution,\n    d=normalize(vec3((C-.5*r.xy)/r.y,1));  \n    for(\n        float i=0.,g=0.,e,s;\n        ++i<99.;\n        O.rgb+=mix(r/r,H(log(s)),.7)*.05*exp(-.45*i*i*e))\n    {\n        p=g*d*finalColor;\n        p.z-=1.;\n    \n        p=R(p,normalize(vec3(1,-2,2)),0.);\n        s=4.;\n        vec4 q=vec4(p,sin(iTime*.4)*.5);\n\t\tfor(int j=0;j++<8;)\n            q=abs(q),\n            q=q.x<q.y?q.zwxy:q.zwyx,\n            s*=e=1.35/min(dot(q,q),0.54),\n            q=q*e-vec4(0,4,.8,3);\n        g+=e=min(\n            length(q.w)/s,\n            length(cross(q.xyw,normalize(vec3(1,2,3))))/s-.0002\n        );\n    }\n    O=pow(O,vec4(5));\n    O*= vec4(happy_star(uv2, anim) * vec3(0.35,0.2,2.15)*100., 1.0);\n }",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}