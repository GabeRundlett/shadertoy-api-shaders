{
    "Shader": {
        "info": {
            "date": "1553360664",
            "description": "based on [url=https://www.shadertoy.com/view/ltK3WD]Triangular Voronoi Lighted[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "WdSSDz",
            "likes": 17,
            "name": "Log Triangular Voronoi Lighted",
            "published": 3,
            "tags": [
                "voronoi",
                "2",
                "triangular",
                "lighted"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 594
        },
        "renderpass": [
            {
                "code": "// tuned with NoodlesPlate https://github.com/aiekick/NoodlesPlate/releases\n\n#define AA 2\n\nvoid mainImage( out vec4 f, vec2 v )\n{\n    f = vec4(0);\n    \n    for(int x=0; x<AA; x++)\n\tfor(int y=0; y<AA; y++)\n\t{\n\t\tvec4 c = vec4(9);\n    \t\n        vec2 g = v + vec2(float(x),float(y)) / float(AA) - 0.5, p = g;\n\t\t\n        g = (g+g-iResolution.xy)/iResolution.y;\n        \n        float t = iTime * 0.1;\n\n        //g = vec2(-1./tan(length(g))-iTime, atan(g.x,g.y));\n        g = vec2(log(length(g))-iTime, atan(g.x,g.y));\n        \n        float t2 = sin(iTime*0.2)*0.5+0.5;\n        \n        g.y = abs(fract(g.y/6.28318*(10.*t2+2.))-0.5);\n\n        for(int x=-2;x<=2;x++)\n        for(int y=-2;y<=2;y++)\n        {\t\n            p = vec2(x,y);\n            p += .5 + .5*sin( t * 10. + 9. * fract(sin((floor(g)+p)*mat2(2,5,5,2)))) - fract(g);\n            p *= mat2(cos(t), -sin(t), sin(t), cos(t));\n            c.y = max(abs(p.x)*.866 - p.y*.5, p.y);\n            if (c.y < c.x)\n            {\n                c.x = c.y;\n                c.zw = p;\n            }\n        }\n\n        vec3 n = vec3(0);\n\n        if ( (c.x - (-c.z*.866 - c.w*.5)) \t<.0001) \tn = vec3(1,0,0);\n        if ( (c.x - (c.z*.866 - c.w*.5))\t<.0001) \tn = vec3(0,1,0);\n        if ( (c.x - c.w)\t\t\t\t\t<.0001) \tn = vec3(0,0,1);\n\n        f += sqrt(texture(iChannel0, -n) * c.x * 1.5);\n    }\n    \n    f /= float(AA * AA);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 27,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}