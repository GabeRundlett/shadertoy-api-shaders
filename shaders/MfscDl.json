{
    "Shader": {
        "info": {
            "date": "1721803105",
            "description": "original  https://glslsandbox.com/e#59831.0 and gaz fractal",
            "flags": 0,
            "hasliked": 0,
            "id": "MfscDl",
            "likes": 3,
            "name": "molicula ERQ",
            "published": 3,
            "tags": [
                "fractal",
                "cindeshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 109
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)cos((h)*6.3+vec3(0,23,21))*.5+.5\n\n// https://iquilezles.org/articles/distfunctions2d\nfloat sdHexagon(vec2 p, float r)\n{\n    const vec3 k = vec3(-0.866025404,0.5,0.577350269);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p)*sign(p.y);\n}\n#define resolution iResolution.xy\n#define PI 3.14\n#define time iTime\n#define THICKNESS 0.98\n#define LENGTH 0.15\nfloat hseed(float t,float ct,float seed)\n{\n\tfloat cn = floor(t/ct);\n\tfloat poff= 0.3+0.7*fract(0.4+5.2147*cn);\n\tfloat s = step(0.25,fract(cn*0.5));\n\tfloat y = resolution.y*fract((mod(cn,943.7)+2.2)*(1.1+mod(cn,676.7))*(0.27+seed*22.773));\n\tfloat x = resolution.x*mix(-0.3,1.3,(t/ct-cn)/(poff)*(1.0-2.0*s)+s);\n\tfloat col = max(0.0,1.0-THICKNESS*abs(gl_FragCoord.y-y));\n\treturn col * 150.0/(150.0+LENGTH*(gl_FragCoord.x-x)*(gl_FragCoord.x-x));\n}\n\nfloat vseed(float t,float ct,float seed)\n{\n\tfloat cn = floor(t/ct);\n\tfloat poff= 0.3+0.7*fract(0.4+7.42787*cn);\n\tfloat s = step(0.25,fract(cn*0.5));\n\tfloat x = resolution.x*fract((mod(cn,912.7)+1.22)*(2.11+mod(cn,674.7))*(0.21+seed*13.773));\n\tfloat y = resolution.y*mix(-0.5,1.5,(t/ct-cn)/(poff)*(1.0-2.0*s)+s);\n\tfloat col = max(0.0,1.0-THICKNESS*abs(gl_FragCoord.x-x));\n\treturn col * 150.0/(50.0+LENGTH*(gl_FragCoord.y-y)*(gl_FragCoord.y-y));\n}\n\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    vec3 p,r=iResolution,\n    d=normalize(vec3((C-.5*r.xy)/r.y,1));  \n    float i=0.,g=0.,e,s;\n    for(;++i<99.;){\n        p=d*g;\n        vec2 uv = (2. * C.xy - resolution) / resolution.y;\n\tfloat t = time;\n      float l = sqrt(length(uv));\n    float a = l * 1.0 + iTime;\n        p=R(p,vec3(1),.0);\n    vec2 z = 1.3*(-resolution.xy+2.0*gl_FragCoord.xy)/resolution.y;\n\t\n\tvec2 an = 0.5*cos( vec2(10.0,1.313) + 0.2*(time+100.0) ) - 0.25*cos( vec2(1.0,1.313) + 0.4*(time+100.0) );\nan*=uv*mat2(cos(iTime),sin(iTime),-sin(iTime),cos(iTime) );\n\tfloat f = 1000.;\n\tfor( int i=0; i<10; i++ ) \n\t{\n\t\tz = vec2( z.x*z.x-z.y*z.y, 2.0*z.x*z.y ) + an;\n        \t\t\n\t\tf = min( f, dot(z,z) );\n   \n\t}\n\t\n\tf = 0.9+log(f)/3.0;\nfloat col = 0.0;\n\tfor(float i=0.0;i<40.0;i++)\n\t{\n\t\t//col = (1.0-col)*(1.0-hseed(time,5.0+i/4.0,.10,i/1.0));\n\t\t//col = col*(1.0-vseed(time,5.0+i/4.0,1.0,i/10.0));\n\t\tcol = max(col,hseed(time,4.0+i*0.078,1.0+i/1.0));\n\t\tcol = max(col,vseed(time,(4.0+i*0.78)*resolution.x/resolution.y,12.0+i/100.0));\t\t\n\t}\n  \n        p=asin(sin(p*4.));\n        float sdf=sdHexagon(p.xy,10.);\n        p.xy=vec2(uv);\n        s=3.;\n        for(int i=0;i++<6;){\n\t\t\tp=vec3(3.2,6.8,5.2)-abs(p-vec3(3.4,4.8,2.4));            \t\t\t\n          \tp=p.x<p.y?p.zxy:p.zyx;\n            s*=e=17.8/min(dot(p,p),11.8);\n            p=abs(p)*e+f ;\n        }\n        g+=e=abs(p.y)/s+.001;\n        O.xyz+=(H(log(s)*.8)+.5)*exp(sin(i))/e*3e-5;\n    }\n    O*=O*O*O;\n }",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}