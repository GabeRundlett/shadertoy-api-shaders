{
    "Shader": {
        "info": {
            "date": "1555397812",
            "description": "Nothing special here.  Added some mouse controls.",
            "flags": 0,
            "hasliked": 0,
            "id": "ts2XDt",
            "likes": 12,
            "name": "Orange And Teal",
            "published": 3,
            "tags": [
                "raymarching",
                "mouse",
                "ifs"
            ],
            "usePreview": 0,
            "username": "zackpudil",
            "viewed": 586
        },
        "renderpass": [
            {
                "code": "mat2 rot(float a) {\n    float s = sin(a);\n    float c = cos(a);\n    \n    return mat2(c, s, -s, c);\n}\n\nfloat box(vec3 p, vec3 b) {\n    vec3 q = abs(p) - b;\n    return max(max(q.x, q.y), q.z);\n}\n\nvec2 shape(vec3 p) {\n    float a = box(p, vec3(1));\n    \n\tp = abs(p) - vec3(1);\n    float b = box(p + vec3(1, 0, 0), vec3(1.200,0.200,0.200));\n    float c = box(p + vec3(0, 0, 1), vec3(0.2, 0.2, 1));\n    float d = box(p + vec3(0, 1, 0), vec3(0.2, 1, 0.2));\n    \n    vec2 s = vec2(a, 1.0);\n    vec2 t = vec2(min(b, min(c, d)), 2.0);\n    \n    return s.x < t.x ? s : t;\n}\n\nvoid opIFS(inout vec4 q) {\n    for(int i = 0; i < 9; i++) {\n        q.xyz = abs(q.xyz) - vec3(0.900,1.393,0.594);\n        q.xz *= rot(0.628 + float(i)*0.932);\n        q.xy *= rot(0.644);\n        \n        q *= 1.2;\n    }\n}\n\nvec2 de(vec3 p) {\n    vec4 q = vec4(p, 1);\n    \n    opIFS(q);\n    \n    return shape(q.xyz)/vec2(q.w, 1);\n}\n\nvec3 form(vec2 p, sampler2D s) {\n    for(int i = 0; i < 3; i++) {\n        p = abs(p)/clamp(dot(p, p), 0.5, 1.0) - vec2(0.1, 0.3);\n        p *= rot(0.33);\n    }\n    \n    return texture(s, p).rgb;\n}\n\nvec3 mat(vec3 p, vec3 n, sampler2D s) {\n    vec3 m = pow(abs(n), vec3(10.0));\n    m /= dot(vec3(1), m);\n    \n    vec3 x = form(p.yz, s);\n    vec3 y = form(p.xz, s);\n    vec3 z = form(p.xy, s);\n    \n    return (m.x*x*x + m.y*y*y + m.z*z*z);\n}\n\nvec3 bump(vec3 p, vec3 n, sampler2D s, float bf) {\n    vec2 h = vec2(0.01, 0);\n    vec3 g = mat3(\n        mat(p - h.xyy, n, s),\n        mat(p - h.yxy, n, s),\n        mat(p - h.yyx, n, s)\n    )*vec3(0.299, 0.548, 0.114);\n    \n    g -= dot(mat(p, n, s), vec3(0.299, 0.548, 0.114));\n    g -= n*dot(g, n);\n    \n    return normalize(n + bf*g);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (gl_FragCoord.xy - 0.5*iResolution.xy)/iResolution.y;\n    vec2 mo = 5.0*iMouse.xy/iResolution.xy;\n    \n    vec3 col = vec3(0);\n    \n    float a = 6.8;\n    float at = iTime*0.1;\n    \n    vec3 ro = vec3(a*sin(at + mo.x), 2.0*sin(at*2.0 + mo.y), -a*cos(at + mo.x));\n    vec3 ww = normalize(vec3(0)-ro);\n    vec3 uu = cross(vec3(0, 1, 0), ww);\n    vec3 vv = cross(ww, uu);\n    vec3 rd = normalize(mat3(uu, vv, ww)*vec3(uv, 1));\n    \n    float t = 0.0, m = -1.0, mx = 10.0;\n    for(int i = 0; i < 200; i++) {\n        vec2 d = de(ro + rd*t);\n        if(d.x < 0.001 || t >= mx) break;\n        t += d.x*0.5;\n        m = d.y;\n    }\n    \n    if(t < mx) {\n        vec3 p = ro + rd*t;\n        vec2 h = vec2(0.001, 0.0);\n        vec3 n = normalize(vec3(\n            de(p + h.xyy).x - de(p - h.xyy).x,\n            de(p + h.yxy).x - de(p - h.yxy).x,\n            de(p + h.yyx).x - de(p - h.yyx).x\n        ));\n        \n        vec3 ld = normalize(p);\n        \n        vec3 alb = vec3(1);\n        vec4 q = vec4(p, 1);\n        \n        opIFS(q);\n        if(m == 1.0) {\n\t\t\talb = vec3(0.075,0.401,1.000);\n            n = bump(p, n, iChannel0, 0.2);\n        } else if(m == 2.0) {\n            alb = vec3(1.000,0.550,0.015);\n            n = bump(p, n, iChannel0, 0.15);\n        }\n        \n        float oat = t/50.0;\n        float occ = exp2(-pow(max(0.0, 1.0 - de(p + n*oat).x/oat), 2.0));\n        float dif = max(0.0, dot(ld, n));\n        \n        float sp = pow(max(0.0, dot(reflect(-ld, n), -rd)), 32.0);\n        \n        col = 0.75*occ*(alb*(0.25 + dif) + 2.0*vec3(0.6, 0.7, 1.0)*sp);\n    }\n    \n    fragColor = vec4(pow(col, vec3(0.4545)), 1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}