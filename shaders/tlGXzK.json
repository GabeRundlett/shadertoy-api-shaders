{
    "Shader": {
        "info": {
            "date": "1588323861",
            "description": "simple radar",
            "flags": 0,
            "hasliked": 0,
            "id": "tlGXzK",
            "likes": 1,
            "name": "Shader3_DelaVega",
            "published": 3,
            "tags": [
                "midterms"
            ],
            "usePreview": 0,
            "username": "zerotojiro",
            "viewed": 331
        },
        "renderpass": [
            {
                "code": "float circle(vec2 uv,float radius, vec2 pos)\n{\n     \n    float d = distance(pos,uv);\n    float value = step(radius,d);\n    \n    return value; \n}\n\nmat2 rotate2d(float angle)\n{\n    return mat2(cos(angle),-sin(angle), sin(angle), cos(angle));\n}\n\nfloat rect (vec2 uv, vec2 pos, vec2 size)\n{\n\tfloat value = step(pos.x - size.x/2.,uv.x) - step(pos.x + size.x/2.,uv.x);\n    return value *= step(pos.y, uv.y) - step(pos.y + size.y,uv.y);\n}\n\nfloat distLine(vec2 p, vec2 a, vec2 b){\n\tvec2 pa = p-a;\n    vec2 ba = b-a;\n    float t = clamp(dot(pa, ba)/dot(ba, ba),0., 1.);\n    return length(pa-ba*t);\n}\n\nfloat line(vec2 p, vec2 a, vec2 b){\n\tfloat d = distLine(p,a,b);\n    float m = .9*smoothstep(.01, .001, d);\n    \n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord/iResolution.xy;\t \n    float ratio = iResolution.x / iResolution.y;\n    \n    //circle position\n    vec2 circlePos = vec2(.5,.5);\n    //rectangular position\n    vec2 rectPos = vec2(.5*ratio,.5);\n    \n    circlePos.x *= ratio;\n    uv.x *= ratio;\n    \n    //circles\n    float value = circle(uv,.49,circlePos);\n    value -= circle(uv, .5,circlePos);\n    \n    float value2 = circle(uv,.34,circlePos);\n    value2 -= circle(uv,.35,circlePos);\n    \n    float value3 = circle(uv,.19,circlePos);\n    value3 -= circle(uv,.20,circlePos);\n\n    float value4 = circle(uv, .015,circlePos);\n    value4 -= circle(uv,.02,circlePos);\n    \n    float value5 = circle(uv, .64,circlePos);\n    value5 -= circle(uv,.65,circlePos);\n    \n    //pings\n    vec2 ping1 = vec2((sin(iTime*.5)*.3 + .5)*ratio, (sin(iTime*.9)*.2+.3)*ratio);\n    vec2 ping2 = vec2((sin(iTime*.3)*.2 + .4)*ratio, (sin(iTime*.5)*.2+.3)*ratio);\n    \n    float dist = distance(uv, ping1);\n    float dist2 = distance(uv, ping2);\n    \n    float t = cos(iTime*2.5)*.1 - .3;\n    float t2 = sin(iTime*2.5)*.1 - .3;\n    \n    vec3 pingOne = vec3(1.-fract(smoothstep(0.2 + t, .25 + t, dist)));\n    vec3 pingTwo = vec3(1.-fract(smoothstep(0.2 + t2, .25 + t2, dist2)));\n    \n    //lines\n    float l = line(uv, vec2(.5*ratio, 0.), vec2(.5*ratio, 1.));\n    l += line(uv, vec2(.14*ratio, .5), vec2(.86*ratio, .5));\n    \n    //rotating bar\n    uv-=rectPos;\n    uv*= rotate2d((iTime)*2.);\n    uv+=rectPos;\n    vec3 rectangle = vec3(rect(uv,rectPos,vec2(.007,.65)));\n    \n    vec3 col = mix(vec3(0.,0.,0.), vec3(0.,1.,0.),value);\n    col = mix(col, vec3(.0, 1. ,.0), l);\n    \n    col += mix(vec3(1.,0.,0.), vec3(0., 0., 0.), pingOne);\n    col += mix(vec3(0.,0.,1.), vec3(0., 0., 0.), pingTwo);\n    \n    col += mix(vec3(0.,0.,0.), vec3(0.,0.8,0.),value2);\n    col += mix(vec3(0.,0.,0.), vec3(0.,0.6,0.),value3);\n    col += mix(vec3(0.,0.,0.), vec3(0.,1.,0.),value4);\n    col += mix(vec3(0.,0.,0.), vec3(0.,1.,0.),value5);\n    \n    col += mix(vec3(0,0,0),vec3(0,0.8,0), rectangle);\n   \n    \n    fragColor = vec4(col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}