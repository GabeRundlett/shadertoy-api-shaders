{
    "Shader": {
        "info": {
            "date": "1522347408",
            "description": "Practising from book of shaders by patriciogv\n",
            "flags": 0,
            "hasliked": 0,
            "id": "4sycD1",
            "likes": 0,
            "name": "Movement in Cellural",
            "published": 3,
            "tags": [
                "cellural"
            ],
            "usePreview": 0,
            "username": "ircss",
            "viewed": 509
        },
        "renderpass": [
            {
                "code": "// Practice based on book of shaders\n\nvec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nvoid DrawCircle(inout vec3 lFragColor, in vec2 pos, in vec2 uv, in vec3 color){\n \t lFragColor=mix(color, lFragColor, smoothstep(0.1, 0.102, distance(pos, uv)));   \n}\nfloat randFloat( in float seed){\n \treturn fract(sin(seed)*50000.);   \n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    vec3 color = vec3(.0);\n    vec2 uv = st;\n\n    \n    st *= 8.;\n    \n    vec2 f = fract(st);\n    vec2 i = floor(st);\n    \n\n    float time = iTime * 0.4;\n    float time_i = floor(time);\n    float time_f = fract(time);\n    \n    vec2 pos = vec2(randFloat(time_i)*iResolution.x/iResolution.y, randFloat(time_i+ 44.));\n    vec2 posNext = vec2(randFloat(time_i+1.)*iResolution.x/iResolution.y, randFloat(time_i+45.));\n    pos = mix(pos, posNext, time_f);\n    \n    //float distanceToMoving = distance(closestPoint/8., pos);\n    float distanceToMoving = distance(st/8., pos);\n    float m_dist = 1.0;  // minimun distance\n    \n    vec2 closestPoint = vec2(0.0,0.0);\n    vec3 closestPointFactor = vec3(0.);\n    for (int y= -1; y <= 1; y++) {\n        for (int x= -1; x <= 1; x++) {\n            // Neighbor place in the grid\n            vec2 neighbor = vec2(float(x),float(y));\n\n            // Random position from current + neighbor place in the grid\n            vec2 point = random2(i + neighbor);\n\t\t\tvec2 randSeed=point;\n\t\t\t// Animate the point\n            //point = 0.5 + 0.5*sin(iTime*(0.4 +point.y *0.9) + 6.2831*point);\n\n\t\t\t// Vector between the pixel and the point\n            vec2 diff = neighbor + point - f;\n\t\t\tfloat factor = .38;\n            \n             // Distance to the point\n            float dist = length(diff);\n            for (int d= -1; d <= 1; d++) {\n        \t\tfor (int j= -1; j <= 1; j++) {\n            \tvec2 neighborSecondIteration = vec2(float(d),float(j));\n\t\t\t\t\n                vec2 seed = random2(i + neighbor);\n                \n            \tfloat weight = seed.x;\n                factor +=  dist *weight* float ((d==0)&&(j==0)) * (sin(iTime*4.1*(1.-seed.x )+seed.y*4.21321)*0.5+0.5 ) ;\n            \n        \t\t}\n    \t\t}\n\t\t\t\n            if(distanceToMoving*8.<2.){ \n                factor += (1.0-pow(smoothstep(0.,2.,distanceToMoving*8.), 2.))* 0.5;\n            }\n\t\t\t\n            // Keep the closer distance\n            if(dist*factor<= m_dist){\n                m_dist =dist *factor;\n                closestPoint = point + i + neighbor;\n                closestPointFactor.x =factor; \n                closestPointFactor.yz = randSeed.xy;\n            }\n            \n        }\n    }\n\n\t\n \n    m_dist = min(distanceToMoving*8.*0.5, m_dist);\n    // Draw the min distance (distance field)\n    color += 1.0 -m_dist;\n    \n    \n\n    color *= vec3(0.3,0.9,0.2);\n    color.g *= 1.0- m_dist;\n    color.g *= 1.0- m_dist;\n    color.b *=  pow(m_dist,-0.328);\n   \n    // Debug Circle\n    //DrawCircle(color,pos,uv,vec3(1.));\n\t//color = vec3(closestPointFactor.x);\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}