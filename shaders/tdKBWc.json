{
    "Shader": {
        "info": {
            "date": "1608158117",
            "description": "Just a simple spin loader made using radial symmetry.",
            "flags": 0,
            "hasliked": 0,
            "id": "tdKBWc",
            "likes": 1,
            "name": "Dots spin loader",
            "published": 3,
            "tags": [
                "radialsymmetrydots"
            ],
            "usePreview": 0,
            "username": "NoxWings",
            "viewed": 359
        },
        "renderpass": [
            {
                "code": "#define S(x,y,z) smoothstep(x,y,z)\n#define debug(x) fragColor = vec4(vec3(x), 1.0); return\n#define debug2(x) fragColor = vec4(vec2(x), 0.0, 1.0); return\n#define debug3(x) fragColor = vec4(x, 1.0); return\n\nconst float PI = 3.14159;\nconst float TAU = PI * 2.0;\nconst float AA = 0.005;\n\nfloat circle(vec2 uv, float r) {\n    float d = length(uv);\n    return S(r+AA, r-AA, d);\n}\n\nmat2 rot2D(float a) {\n    float sa = sin(a), ca = cos(a);\n    return mat2(ca, -sa, sa, ca);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 coords = uv * 2.0 - 1.0;\n    coords.x *= iResolution.x / iResolution.y;\n    coords = rot2D(-iTime* 2.) * coords;\n    \n    float numberOfDots = 8.0; \n    float angle = (atan(coords.y, coords.x) + PI) / TAU * numberOfDots;\n    float rid = floor(angle);\n    float baseAngle = rid / numberOfDots * TAU - PI;\n    vec2 ruv = rot2D(baseAngle) * coords;\n    \n    //debug(rid / numberOfDots); // Debug radial ids\n    //debug2(ruv);               // Debug radial uvs\n    \n    float sizeId = (numberOfDots - rid - 1.);\n    float circleBaseRadius = 0.03;\n    float circleDynRadius = sizeId * 0.01;\n    float circleRadius = circleBaseRadius + circleDynRadius;\n    float circleDistance = 0.4 - circleDynRadius;\n    \n    vec3 col = vec3(circle(ruv - vec2(circleDistance, circleRadius), circleRadius));\n\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}