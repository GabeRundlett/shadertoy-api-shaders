{
    "Shader": {
        "info": {
            "date": "1595444128",
            "description": "A shader made on new song from Agneton !",
            "flags": 64,
            "hasliked": 0,
            "id": "wlVXRV",
            "likes": 10,
            "name": "Goatrance trip !",
            "published": 3,
            "tags": [
                "psy",
                "psytrance",
                "goatrance",
                "agneton",
                "nithzogoa"
            ],
            "usePreview": 0,
            "username": "z0rg",
            "viewed": 487
        },
        "renderpass": [
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\nconst float PI = 3.14159265;\nmat2 r2d(float a){float sa = sin(a);float ca=cos(a);return mat2(ca,sa,-sa,ca);}\n\nfloat lenny(vec2 v)\n{\n  return abs(v.x)+abs(v.y);\n}\nfloat sat(float a)\n{\n  return clamp(a,0.,1.);\n}\nvec3 sat(vec3 v)\n{\n  return vec3(sat(v.x),sat(v.y), sat(v.z));\n}\nvec2 repeat(vec2 p, vec2 sp)\n{\n  return mod(p,sp)-sp/2.;\n}\nfloat _cir(vec2 uv, float sz)\n{\n  return length(uv)-sz;\n}\n\n float sdf_rect(vec2 uv, vec2 sz)\n{\n  vec2 r = abs(uv)-sz;\n  return max(r.x,r.y);\n}\n\nfloat _union(float a, float b)\n{\n  return min(a,b);\n}\nfloat _sub(float a, float b)\n{\n  return max(a,-b);\n}\n\n\nvec3 rdrPsy(vec2 uv)\n{\n  vec3 cols[4];\n\n  cols[0] = vec3(196.,1.,44.)/255.;\n  cols[1] = .0*vec3(1.,44.,196.)/255.;\n  cols[2] = vec3(1.,196.,153.)/255.;\n  cols[3] = vec3(196.,153.,1.)/255.;\n  float fidx= mod(-iTime+length(uv)*4.+.2*-abs(sin(50.*atan(uv.y,uv.x)/PI))\n    +abs(0.1*sin(iTime*5.+sin(uv.x*5.)*179.7*atan(uv.y,uv.x)/PI))\n      ,4.);\n  int curIdx=int(fidx);\n  vec3 bubbles = vec3(uv,.5)*(1.-sat(50.*_cir(repeat(uv*(sin(iTime*.5)*.2+.5)*r2d(.5*sin(uv.y*2.+iTime*.5)),vec2(.1)),.02)));\n  return bubbles+vec3(.3)+mix(cols[curIdx], cols[int(mod(float(curIdx)+1.,4.))], fract(fidx));\n}\n\nvec3 rdrScn(vec2 uv)\n{\n  vec2 uvc = vec2(abs(uv.x),uv.y*sign(uv.x));\n  vec2 uvcir =uvc- vec2(.0);\n  float acir = atan(uvcir.y,uvcir.x)/PI;\n  vec2 pcir = vec2(sin(iTime),cos(iTime*.7))*.5;\n  float cir = (1.-sat(_cir(uv+pcir,.5)*200.))*float(acir<.7*sin(10.*-iTime+length(uvcir)*20.));;\n\n\n  return vec3(abs(uv),.5)*cir*2.;\n}\n\nvec3 rdrDot(vec2 uv, float szmin, float szmax)\n{\n  vec2 ouv = uv;\n  uv = vec2(int(uv.x/szmax),int(uv.y/szmax))*szmax;\n  vec3 col = rdrScn(uv);\n\n  return col*(1.-sat((length(ouv-uv-vec2(.5*szmax*sign(uv.x),.5*szmax*sign(uv.y)))-mix(szmin,(szmax-.1*szmax)*.5,col.x))*200.*(col.x+.1)));\n}\n\nfloat sdCross(vec2 p, float sz)\n{\n  vec2 sz2 = vec2(sz,sz/3.);\n  float a = sdf_rect(p,sz2);\n  float b = sdf_rect(p,sz2.yx);\n\n  return _union(a,b);\n}\n\nvec3 rdrCross(vec2 uv)\n{\n  vec3 acc;\n\n  for (int i = 0;i<16;++i)\n  {\n    float fi = float(i);\n    float px = sin(fi)*.5;\n    vec2 pos= vec2(px,sin(px*2.+iTime)+mod((fi-4.)*5.,.53));\n    vec2 p = (uv-vec2(pos))*r2d(sin(iTime*.5+float(i)));\n\n    float sd = sat(sdCross(p,.1*fi*.3)*200.);\n    float sdHalo = sat(sdCross(p,.1*(fi*.2))*5.);\n    float sd2 = sat(sdCross(p,.08*(fi*.3))*200.);\n\n    acc*= sd;\n    acc+= vec3(1.)*(sd2*(1.-sd))+(1.-sdHalo)*sd*vec3(uv.xyx*.5+.5);\n  }\n  return acc;\n}\n\nvec3 rdr(vec2 uv)\n{\n  vec3 opsy = rdrPsy(uv*r2d(-iTime));\n  uv = abs(uv);\n  uv = uv*r2d(20.*atan(uv.y,uv.x)/PI);\n  uv= uv+(vec2(.1)*r2d(-iTime));\n  float sel = float(mod(iTime,.4)<.2);\n  vec3 col = rdrDot((uv+vec2(.3))*r2d(iTime),.02,mix(.05,.01,sel));\n  vec3 c2 = rdrCross(uv);\n\n  return mix(col,c2,c2.x)+rdrPsy(uv).yxz-opsy.zyx*.5;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = fragCoord.xy / iResolution.xx;\n  uv -= vec2(.5)*iResolution.xy/iResolution.xx;\nuv*=2.+(sin(iTime)*.5+.5);\n  vec3 col = rdr(uv);\n    //uv.x += .5;\n    float rad = length(uv)-.1;\n    float an = abs(atan(uv.y, uv.x)/PI);\n    vec3 col2 = col*float(rad < texelFetch(iChannel0, ivec2(int((an)*512.), 0), 0).x)*.5;\n    vec3 outcol = sat(1.-lenny(uv*.5))*col.zxy*.5+col2.zxy;\n//    outcol = pow(outcol, vec3(1./2.2));\n    \n    float fadeIn = clamp(iTime,0.,3.)/3.;\n  fragColor = vec4(outcol*fadeIn, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 23055,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/agneton/agneton-fire-in-the-sky"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}