{
    "Shader": {
        "info": {
            "date": "1629200859",
            "description": "based on a xor pattern",
            "flags": 0,
            "hasliked": 0,
            "id": "fs33R4",
            "likes": 4,
            "name": "xor pattern animated",
            "published": 3,
            "tags": [
                "xor"
            ],
            "usePreview": 0,
            "username": "hikiko",
            "viewed": 332
        },
        "renderpass": [
            {
                "code": "float M_PI = 3.14;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int xor = (int(fragCoord.x) ^ int(fragCoord.y));\n    \n    float r = float((xor * 2) & 0xff) / 255.0 * 0.3;\n    float g = float((xor * 4) & 0xff) / 255.0 * 0.7;\n\tfloat b = float((xor * 8) & 0xff) / 255.0 * 0.6;\n    \n    vec3 col = vec3(b * atan(r * cos(iTime + M_PI / 3.0), b * sin(iTime - M_PI / 2.0) + 0.0001), \n    g * atan(r * cos(iTime - M_PI / 4.0), g * sin(iTime + M_PI * 4.0 / 3.0) + 0.0004),\n    b * atan(b * sin(iTime + M_PI / 2.0), g * cos(iTime + M_PI / 2.0)) + 0.0004);\n    \n    fragColor = vec4(mix(col.x * atan(iTime * 0.8 + M_PI / 8.0, col.y), 1.0, cos(g * b - M_PI / r / 2.0)), col.y, col.z, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}