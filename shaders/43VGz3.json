{
    "Shader": {
        "info": {
            "date": "1718003925",
            "description": "yum",
            "flags": 0,
            "hasliked": 0,
            "id": "43VGz3",
            "likes": 2,
            "name": "mandelbulb union",
            "published": 3,
            "tags": [
                "fractal",
                "raymarch",
                "sdf"
            ],
            "usePreview": 0,
            "username": "graygoose",
            "viewed": 90
        },
        "renderpass": [
            {
                "code": "// Fork of \"mandelbulb-pathtraced\" by graygoose. https://shadertoy.com/view/dscXDs\n// 2024-06-10 07:18:02\n#define T (iTime*.5)\n\n\n#define MAX_ITERATIONS 64\n#define BAILOUT 8.0\nfloat mandelbulb(vec3 z, vec3 offset, float pw) {\n    z -= offset;\n    vec3 c = z;\n    float dr = 1.0, r = 0.0, the, phi;\n    for (int i = 0; i < MAX_ITERATIONS; i++) {\n        r = length(c);\n        if (r > BAILOUT) break;\n        \n        the = acos(c.z / r) * pw;\n        phi = atan(c.y, c.x) * pw;\n\n        c = pow(r, pw) * vec3(\n            sin(the) * cos(phi),\n            sin(the) * sin(phi),\n            cos(the)\n        ) + z;\n\n        dr = pow(r, pw - 1.0) * pw * dr + 1.0;\n    }\n    return 0.5 * log(r) * r / dr;\n}\n\nfloat sceneSDF(vec3 p) {\n    float a = T * 0.5, d1, d2,\n     p1 = (sin(T * 0.25) * 0.5 + 1.0) * 3.0,\n     p2 = (cos(T * 0.25) * 0.5 + 1.0) * 5.0;\n\n    mat3 R = mat3(\n        vec3(cos(a), 0.0, -sin(a)),\n        vec3(0.0, 1.0, 0.0),\n        vec3(sin(a), 0.0, cos(a))\n    );\n\n    d1 = mandelbulb(p*R, vec3(-0.5, 0.0, 0.0), p1);\n    d2 = mandelbulb(p*-R, vec3(0.5, 0.0, 0.0), p2);\n    return smin(d1, d2, .01);\n}\n\n\n#define EPS 0.0001\n#define MAX_RAY_STEPS 128\n#define MAX_RAY_DIST 5.0\n#define MIN_RAY_DIST 0.001\nvoid mainImage(out vec4 O, in vec2 U) {\n    vec2 uv = (U.xy / iResolution.xy) * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float d, t, a = T * 0.3;\n    mat3 rot = mat3(\n        vec3(cos(a), 0.0, sin(a)),\n        vec3(0.0, 1.0, 0.0),\n        vec3(-sin(a), 0.0, cos(a))\n    );\n    \n    vec3 ro = rot * vec3(0.0, 0.0, 2.0),\n         rd = rot * normalize(vec3(uv, -1.0)), hit, normal;\n    \n    t = 0.0;\n    for (int i = 0; i < MAX_RAY_STEPS; i++) {\n        hit = ro + rd * t;\n        d = sceneSDF(hit);\n        if (d < MIN_RAY_DIST) {\n            vec3 epsilon = vec3(EPS, 0.0, 0.0);\n            normal = normalize(vec3(\n                sceneSDF(hit + epsilon.xyy) - d,\n                sceneSDF(hit + epsilon.yxy) - d,\n                sceneSDF(hit + epsilon.yyx) - d\n            ));\n            break;\n        }\n        t += d;\n        if (t > MAX_RAY_DIST) {\n            t = -1.0;\n            break;\n        }\n    }\n    \n    if (t > 0.0) {\n        vec3 lD = rot * normalize(vec3(3.0, 1.0, 3.0));\n        float diffuse = max(dot(normal, lD), 0.0),\n         specular = pow(max(dot(reflect(-lD, normal), -normalize(hit)), 0.0), 32.0);\n        O = vec4(vec3(0.1, 0.6, 0.9) * diffuse + vec3(1.0) * specular, 1.0);\n    } else {\n        O = vec4(0.0);\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Thanks iq: https://iquilezles.org/articles/smin/ (sigmoidal)\nfloat smin(float a, float b, float k){b -= a;return a + b/(1.0-exp2(b/(k*log(2.))));} \n\nfloat sdiff(float d1, float d2, float k) {\n    float h = max(k - abs(d1 + d2), 0.0) / k;\n    return max(d1, -d2) + h * h * h * k * (1.0 / 6.0);\n}\n\nfloat eunion(float d1, float d2, float radius) {\n    return max(min(d1, d2), -radius);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}