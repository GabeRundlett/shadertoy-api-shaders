{
    "Shader": {
        "info": {
            "date": "1616773076",
            "description": "texture 4-quadrants roll.\nSince it is done on a buffer of uv coordinates rather than directly on the texture pixels, this allows videos or webcam.\nRolling back should restore the image.",
            "flags": 32,
            "hasliked": 0,
            "id": "fdXGDl",
            "likes": 5,
            "name": "texture roll",
            "published": 3,
            "tags": [
                "uv",
                "roll"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 462
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    O = texture(iChannel1, T(U).xy );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    vec2 V = U - R/2.;\n    \n    if (iFrame<1) O.xy = U/R; // init with uv coordinates\n    else\n      O =  iFrame % 2 > 0     // must alternate rolls to allow transmission via overlapping\n             ?  T( U + vec2( 0 , sign(V.x) ))\n             :  T( U + vec2( -sign(V.y), 0.));  // 0. instead of 0 to fix a windows bug.\n}                                               // see https://www.shadertoy.com/view/fsj3Wh\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R    iResolution.xy\n#define T(U) texelFetch( iChannel0, ivec2(U), 0 )",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}