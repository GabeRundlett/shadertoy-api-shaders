{
    "Shader": {
        "info": {
            "date": "1596872172",
            "description": "polkaTunnel0",
            "flags": 4,
            "hasliked": 0,
            "id": "wlXfW7",
            "likes": 3,
            "name": "polkaTunnel0",
            "published": 3,
            "tags": [
                "polkatunnel0"
            ],
            "usePreview": 0,
            "username": "pohy",
            "viewed": 258
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159\n\nfloat getFreq(float freq) {\n    int tx = int(freq / 22000. * 512.);\n    return texelFetch(iChannel0, ivec2(tx, 0), 0).r;\n}\n\nfloat getBand(float freq, float width) {\n    float avg = 0.;\n    float it = width / freq;\n    for (float i = 0.; i < it; i++) {\n        avg += getFreq(freq * i);\n    }\n    return avg;\n}\n\nvec2 toLogPolar(vec2 uv) {\n    return vec2(log(length(uv)), atan(uv.y, uv.x));\n}\n\nmat2 rot(float a) {\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    float t = iTime * .1;\n    vec3 col = vec3(0);\n    \n    float snare = getFreq(5000.);\n    \n    uv *= 6. + (sin(t) * 3.);\n    uv = fract(abs(uv));\n    uv = toLogPolar(uv);\n    uv.x -= t + snare * .1;\n    uv *= 6. / PI;\n    uv = fract(uv) - .5;\n    \n    float r = .25 + getFreq(80.) * .2;\n    float dist = length(uv);\n    float delta = fwidth(dist);\n    float c = smoothstep(r * 1.01, r - delta, dist);\n    vec3 color = mix(vec3(.8, .8, .5), vec3(.2, .2, .8), snare);\n    col += c;//vec3(.8 + (snare * .2), .8 - (snare * .2), .5 - (snare * .2));\n    //col.rg = id;\n    //col += getFreq(60.);\n    //col.rg += uv;\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "mic",
                        "id": 32,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/mic.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}