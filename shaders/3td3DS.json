{
    "Shader": {
        "info": {
            "date": "1577454117",
            "description": "visualize orbits",
            "flags": 32,
            "hasliked": 0,
            "id": "3td3DS",
            "likes": 0,
            "name": "orbit visualizer",
            "published": 3,
            "tags": [
                "interactive"
            ],
            "usePreview": 0,
            "username": "zzggbb",
            "viewed": 489
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord){\n    fragColor = texelFetch(IMAGE, ivec2(fragCoord), 0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "/*\n\t[0,0] is previous mouse position\n\t[1,0] is current mouse position\n\n\t[3,0] is previous orbit position\n\t[4,0] is current orbit position\n*/\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord ) {    \n    if (ivec2(fragCoord) == ivec2(0,0))\n    \tfragColor = texelFetch(STATE, ivec2(1, 0), 0);\n        \n    if (ivec2(fragCoord) == ivec2(1, 0))\n        fragColor = vec4(ivec2(iMouse.xy), 0, 0);\n    \n    if (ivec2(fragCoord) == ivec2(3,0)) {\n    \tfragColor = texelFetch(STATE, ivec2(4, 0), 0);\n    }\n    \n    if (ivec2(fragCoord) == ivec2(4, 0)) {\n    \tvec2 previous;\n        if (MOUSE_CHANGE) \n            previous = vec2(0.0);\n        else\n        \tprevious = texelFetch(STATE, ivec2(3,0), 0).xy;\n        \n\t    vec2 m = ZOOM*screen_coord(iMouse.xy, iResolution.xy);\n        vec2 next = F(previous, m);\n        if (length(next) > 5000.0) {\n        \tnext = previous;\n        }\n        fragColor = vec4(next, 0.0, 0.0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define STATE iChannel0\n#define IMAGE iChannel1\n#define ZOOM 20.0\n#define MOUSE_PRESSED (int(iMouse.z) > 0 && int(iMouse.w) > 0)\n#define MOUSE_CHANGE (ivec2(texelFetch(STATE, ivec2(0,0), 0).xy) != ivec2(texelFetch(STATE, ivec2(1,0), 0).xy))\n#define RADIUS 0.01\n\nvec2 dual_pow(vec2 d, float p) {\n    // implement d^p = (a+bÎµ)^p\n    float r = pow(d.x, p);\n    float r1 = pow(d.x, p - 1.0);\n\treturn vec2(r, d.y * p * r1);    \n}\n\nvec2 cmul(vec2 c1, vec2 c2) {\n    // complex multiplication\n    return vec2(c1.x*c2.x - c1.y*c2.y, \n                c1.x*c2.y + c1.y*c2.x);\n}\n\nvec2 cpow(vec2 c, float p) {\n\t// implement c^p\n    float r = length(c);\n    float a = atan(c.y, c.x);\n    return vec2(pow(r, p), a * p);\n}\n\n\nvec2 F(vec2 z, vec2 c) {\n\treturn dual_pow(z, 2.0) + c;\n    //return cmul(z,z) + c;\n}\n\nvec2 screen_coord(vec2 xy, vec2 dim) {\n    return (xy - 0.5*dim) / min(dim.x, dim.y);\n}\n\nfloat sd_line(vec2 p, vec2 a, vec2 b) {\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length(pa - ba*h);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = ZOOM*screen_coord(fragCoord.xy, iResolution.xy);\n\n    vec2 previous_orbit = texelFetch(STATE, ivec2(3,0), 0).xy;\n    vec2 current_orbit = texelFetch(STATE, ivec2(4,0), 0).xy;\n    \n    float dist = sd_line(uv, current_orbit, previous_orbit); \n    //float dist = length(current_orbit - uv);\n    \n    float current_shade = float(dist < RADIUS);\n    \n    float shade;\n    \n    if (MOUSE_CHANGE) {\n    \tshade = current_shade;\n    } else {\n    \tfloat previous_shade = texelFetch(IMAGE, ivec2(fragCoord), 0).x;\n        shade = previous_shade + current_shade;\n    }\n    \n\tfragColor = vec4(vec3(shade), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buf B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}