{
    "Shader": {
        "info": {
            "date": "1595694469",
            "description": "coded in 25 minutes for shader showdown!",
            "flags": 0,
            "hasliked": 0,
            "id": "tlBcWd",
            "likes": 32,
            "name": "Unicorn Torus (FieldFX)",
            "published": 3,
            "tags": [
                "shadershowdown",
                "livecode"
            ],
            "usePreview": 0,
            "username": "blackle",
            "viewed": 2042
        },
        "renderpass": [
            {
                "code": "//CC0 1.0 Universal https://creativecommons.org/publicdomain/zero/1.0/\n//To the extent possible under law, Blackle Mori has waived all copyright and related or neighboring rights to this work.\n\nvec3 erot(vec3 p, vec3 ax, float ro) {\n    return mix(dot(ax,p)*ax,p,cos(ro))+sin(ro)*cross(ax,p);\n}\n\nfloat box(vec2 p, vec2 d) {\n    p = abs(p)-d;\n    return length(max(p,0.))+min(0.,max(p.x,p.y));\n}\n\nfloat blob(vec3 p) {\n    p =asin(sin(p*10.))/10.;\n    return length(p);\n}\n\nfloat wallthing;\nfloat light;\nfloat t;\nfloat scene(vec3 p) {\n    vec2 tdim = vec2(3.,1.5);\n    float tdist = length(vec2(length(p.xy)-tdim.x,p.z))-tdim.y;\n    \n    vec3 pring = vec3(normalize(p.xy)*tdim.x,0);\n    vec3 pax = normalize(cross(pring,vec3(0,0,1)));\n    vec3 poff = p-pring;\n    float pang = atan(pring.x,pring.y);\n    float prot = sin(iTime+pang);\n    poff = erot(poff,pax,prot);\n    vec3 ploc = pring+poff;\n    vec3 pclos = pring+normalize(poff)*tdim.y;\n    \n    float wdth = dot(sin(pclos*2.),cos(pclos*2.))*.5+.3;\n    float blb = blob(pclos);\n    wallthing = box(vec2(blb,tdist), vec2(wdth,.2))-.05;\n    wallthing = min(wallthing, box(vec2(blb,tdist), vec2(.04,.4+sin(t*5.)*.2))-.01);\n    vec3 rtd=vec3(asin(sin(ploc.xy*2.))/2.,ploc.z);\n    float pillar = length(rtd.xy)-.02;\n    pillar = min(pillar, box(vec2(pillar,asin(sin(rtd.z*10.+t*6.))/10.),vec2(0.03,0.02))-.01);\n    light = length(vec2(wallthing,tdist))-.02;\n    light = min(light, box(vec2(pillar,asin(sin(rtd.z*10.+t*6.+11.))/10.),vec2(0.03,0.02))-.01);\n    \n    wallthing *= .9;\n    \n    return min(min(min(-tdist,wallthing), pillar),light);\n}\n\nvec3 norm (vec3 p) {\n    mat3 k = mat3(p,p,p)-mat3(0.01);\n    return normalize(scene(p)-vec3(scene(k[0]),scene(k[1]),scene(k[2])));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    t = iTime/60.*135.;\n    t = pow(sin(fract(t)*3.1415/2.)*.5+.5,10.)+floor(t);\n    vec3 cam = normalize(vec3(1.-dot(uv,uv)*.9+sin(t*1.5)*.4,uv));\n    vec3 init = vec3(-3.5,0,0)+cam*.1;\n    \n    cam = erot(cam, vec3(1,0,0), cos(t/2.)*.5);\n    cam = erot(cam, vec3(0,0,1), t/4.);\n    cam = erot(cam, vec3(0,0,1), .7+sin(t)*.5);\n    init = erot(init, vec3(0,0,1), t/4.);\n    \n    \n    vec3 p = init;\n    bool hit = false;\n    float dist;\n    float glo = 0.;\n    for (int i = 0; i < 200 && !hit; i++) {\n        dist = scene(p);\n        hit = dist*dist < 1e-6;\n        glo += .05/(1.+abs(light)*30.);\n        p+=dist*cam*.7;\n    }\n    bool wt = wallthing == dist;\n    bool lt = light == dist;\n    vec3 n = norm(p);\n    vec3 r = reflect(cam,n);\n    float ao = smoothstep(-.1,.1,scene(p+n*.1));\n    float ro = smoothstep(-.1,.1,scene(p+r*.1));\n    float spec = length(sin(r*3.)*.5+.5)/sqrt(3.);\n    float diff = length(sin(n*2.)*.4+.6)/sqrt(3.);\n    float fres = 1.-abs(dot(n,cam))*.98;\n    vec3 matcol = wt ? vec3(0.9,0.2,0.8) : vec3(0.04);\n    vec3 col = diff*matcol*ao + pow(spec,10.)*fres*ro;\n    col = abs(erot(col, normalize(sin(p*2.+iTime*2.+r)),1.));\n    if (lt) col = vec3(1);\n    fragColor.xyz = hit ? col : vec3(0.01);\n    fragColor.xyz = sqrt(fragColor.xyz+ glo*glo + glo*vec3(.2,.5,1));\n    fragColor.xyz *= 1.-dot(uv,uv)*.7;\n    fragColor.xyz *= 1.1;\n    fragColor.xyz = smoothstep(0.,1.,fragColor.xyz);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}