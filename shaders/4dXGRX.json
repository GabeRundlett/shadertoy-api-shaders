{
    "Shader": {
        "info": {
            "date": "1374996661",
            "description": "track and zoom on the brightest part of the video.\n2 methods: barycenter of v^2 and invmax(v). First is more robust, but if multiple bright areas it goes at the middle :-)",
            "flags": 0,
            "hasliked": 0,
            "id": "4dXGRX",
            "likes": 3,
            "name": "tracker",
            "published": 3,
            "tags": [
                "video",
                "tracking"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1597
        },
        "renderpass": [
            {
                "code": "#define SAMPLE 16\n#define LEVEL 5 // log(iChannelResolution/16)/log(2)\n\n#define MODE 0 // 0 for barycenter   1 for max\n\n//int textureLogRes = int(log(iChannelResolution[0].xy/16)/log(2.));\n\nvec2 findTextureCenter()\n{\t\n\tvec2 g = vec2(0.); float vtot=0.;\n\tvec2 gmax = vec2(0.); float vmax=-1.;\n\tfor (int j=0; j< SAMPLE; j++)\n\t  for (int i=0; i< SAMPLE; i++)\n\t  {\n\t\t  vec2 pos = (.5+vec2(i,j))/float(SAMPLE);\n\t\t  float v = texture(iChannel0,pos,float(LEVEL)).r;\n\t\t  v = clamp(2.*(v-.5),0.,1.);\n\t\t  v = pow(v,2.);\n\t\t  g    += pos*v;\n\t\t  vtot += v;\n\t\t  if (v>vmax)\n\t\t     { vmax= v; gmax = pos;  }\n\t\t\t  \n\t  }\n#if MODE==1\n\treturn gmax;\n#else\n\treturn g/vtot;\t\t \n#endif\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 offset = findTextureCenter()-.0;\n\tvec4 col = texture(iChannel0,(uv-.5)/8.+offset);\n\t//col = ((col-.5)*2.-.2)/.6;\n\tfragColor = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}