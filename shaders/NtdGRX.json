{
    "Shader": {
        "info": {
            "date": "1636451495",
            "description": "Based on \"domino piece \" by bmax.",
            "flags": 0,
            "hasliked": 0,
            "id": "NtdGRX",
            "likes": 3,
            "name": "Domino 2",
            "published": 3,
            "tags": [
                "proceduralgeneration",
                "domino"
            ],
            "usePreview": 0,
            "username": "nihohit",
            "viewed": 195
        },
        "renderpass": [
            {
                "code": "#define BLUR_RADIUS 0.015\n\nfloat sdCircle(vec2 p, vec2 c, float r) {\n    return length(p - c) - r;\n}\n\nfloat sdLine(vec2 p, vec2 a, vec2 b) {\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp(dot(pa, ba)/dot(ba, ba), 0.0, 1.0);\n    return length(pa - ba*h);\n}\n\nfloat sdRoundedLine(vec2 p, vec2 a, vec2 b, float r) {\n    return sdLine(p, a, b) - r;\n}\n\nfloat sdBox(vec2 p, vec2 b) {\n    vec2 d = abs(p) - b;\n    return length(max(d, 0.0)) + min(max(d.x, d.y),0.0);\n}\n\nfloat sdRoundedBox(vec2 p, vec2 b, float r) {\n    return sdBox(p, b) - r;\n}\n\nvec4 shapeColor(vec3 fillColor, float dist, float gradience) {\n    float smoothDist = smoothstep(0.00, BLUR_RADIUS, dist);\n    float opacity = 1.0 - smoothDist;\n    return vec4(fillColor * opacity + abs(dist * gradience), opacity);\n}\n\nvec4 combine(vec4 color1, vec4 color2) {\n    return min(color1, color2);\n}\n\nmat2 scale(vec2 scale) {\n    return mat2(scale.x, 0.0, 0.0, scale.y);\n}\n\nvec3 white = vec3(0.8, 0.8, 0.8);\nvec3 black = vec3(0.0, 0.0, 0.0);\nvec3 green = vec3(0.0, 0.4, 0.0);\nvec3 red = vec3(0.5, 0.0, 0.0);\nfloat dotRadius = 0.06;\nint numberOfValues = 7;\n\nvec4 draw1Dot(vec3 color, vec2 center, vec4 background) {\n    vec4 dot = shapeColor(color, sdCircle(center, vec2(0.0, -0.0), dotRadius), 5.0);\n    return mix(background, dot, dot.a);\n}\n\nvec4 draw2Dots(vec3 color, vec2 center, vec4 background) {\n    vec4 dot = shapeColor(color, sdCircle(center, vec2(0.18, 0.18), dotRadius), 5.0);\n    vec4 blendedDots = mix(background, dot, dot.a);\n    dot = shapeColor(color, sdCircle(center, vec2(-0.18, -0.18), dotRadius), 5.0);\n    blendedDots = combine(blendedDots, mix(background, dot, dot.a));\n    return blendedDots;\n}\n\n\nvec4 draw3Dots(vec3 color, vec2 center, vec4 background) {\n    vec4 dot = shapeColor(color, sdCircle(center, vec2(0.0, 0.0), dotRadius), 5.0);\n    vec4 blendedDots = mix(background, dot, dot.a);\n    dot = shapeColor(color, sdCircle(center, vec2(0.18, 0.18), dotRadius), 5.0);\n    blendedDots = combine(blendedDots, mix(background, dot, dot.a));\n    dot = shapeColor(color, sdCircle(center, vec2(-0.18, -0.18), dotRadius), 5.0);\n    blendedDots = combine(blendedDots, mix(background, dot, dot.a));\n    return blendedDots;\n}\n\nvec4 draw4Dots(vec3 color, vec2 center, vec4 background) {\n    vec4 dot = shapeColor(color, sdCircle(center, vec2(0.18, 0.18), dotRadius), 5.0);\n    vec4 blendedDots = mix(background, dot, dot.a);\n    dot = shapeColor(color, sdCircle(center, vec2(-0.18, -0.18), dotRadius), 5.0);\n    blendedDots = combine(blendedDots, mix(background, dot, dot.a));\n    dot = shapeColor(color, sdCircle(center, vec2(-0.18, 0.18), dotRadius), 5.0);\n    blendedDots = combine(blendedDots, mix(background, dot, dot.a));\n    dot = shapeColor(color, sdCircle(center, vec2(0.18, -0.18), dotRadius), 5.0);\n    blendedDots = combine(blendedDots, mix(background, dot, dot.a));\n    return blendedDots;\n}\n\nvec4 draw5Dots(vec3 color, vec2 center, vec4 background) {\n    vec4 dot = shapeColor(color, sdCircle(center, vec2(0.0, 0.0), dotRadius), 5.0);\n    vec4 blendedDots = mix(background, dot, dot.a);\n    dot = shapeColor(color, sdCircle(center, vec2(0.18, 0.18), dotRadius), 5.0);\n    blendedDots = combine(blendedDots, mix(background, dot, dot.a));\n    dot = shapeColor(color, sdCircle(center, vec2(-0.18, -0.18), dotRadius), 5.0);\n    blendedDots = combine(blendedDots, mix(background, dot, dot.a));\n    dot = shapeColor(color, sdCircle(center, vec2(-0.18, 0.18), dotRadius), 5.0);\n    blendedDots = combine(blendedDots, mix(background, dot, dot.a));\n    dot = shapeColor(color, sdCircle(center, vec2(0.18, -0.18), dotRadius), 5.0);\n    blendedDots = combine(blendedDots, mix(background, dot, dot.a));\n    return blendedDots;\n}\n\nvec4 draw6Dots(vec3 color, vec2 center, vec4 background) {\n    vec4 dot = shapeColor(color, sdCircle(center, vec2(0.18, 0.0), dotRadius), 5.0);\n    vec4 blendedDots = mix(background, dot, dot.a);\n    dot = shapeColor(color, sdCircle(center, vec2(0.18, 0.18), dotRadius), 5.0);\n    blendedDots = combine(blendedDots, mix(background, dot, dot.a));\n    dot = shapeColor(color, sdCircle(center, vec2(0.18, -0.18), dotRadius), 5.0);\n    blendedDots = combine(blendedDots, mix(background, dot, dot.a));\n    dot = shapeColor(color, sdCircle(center, vec2(-0.18, 0.0), dotRadius), 5.0);\n    blendedDots = combine(blendedDots, mix(background, dot, dot.a));\n    dot = shapeColor(color, sdCircle(center, vec2(-0.18, 0.18), dotRadius), 5.0);\n    blendedDots = combine(blendedDots, mix(background, dot, dot.a));\n    dot = shapeColor(color, sdCircle(center, vec2(-0.18, -0.18), dotRadius), 5.0);\n    blendedDots = combine(blendedDots, mix(background, dot, dot.a));\n    return blendedDots;\n}\n\nvec4 drawBlackCircle(vec2 center, float radius, float thickness) {\n    vec4 circle = vec4(1.0-step(sdCircle(center, vec2(0.0, -0.0), radius),  radius));\n    circle += vec4(step(sdCircle(center, vec2(0.0, -0.0), radius - thickness), radius - thickness));\n    circle.a = 1.0-step(sdCircle(center, vec2(0.0, -0.0), radius), radius);\n    return circle;\n}\n\nvec4 drawSagie(vec2 center) {\n    vec4 hair = drawBlackCircle(center - vec2(0.07, 0.19), 0.01, 0.008);\n    hair *= drawBlackCircle(center - vec2(-0.07, 0.19), 0.01, 0.008);\n    hair *= drawBlackCircle(center - vec2(0.055, 0.195), 0.01, 0.008);\n    hair *= drawBlackCircle(center - vec2(-0.055, 0.195), 0.01, 0.008);\n    hair *= drawBlackCircle(center - vec2(0.04, 0.2), 0.01, 0.008);\n    hair *= drawBlackCircle(center - vec2(-0.04, 0.2), 0.01, 0.008);\n    hair *= drawBlackCircle(center - vec2(0.015, 0.205), 0.01, 0.008);\n    hair *= drawBlackCircle(center - vec2(-0.015, 0.205), 0.01, 0.008);\n    hair *= drawBlackCircle(center - vec2(0.085, 0.175), 0.01, 0.008);\n    hair *= drawBlackCircle(center - vec2(-0.085, 0.175), 0.01, 0.008);\n    hair *= drawBlackCircle(center - vec2(0.1, 0.165), 0.01, 0.008);\n    hair *= drawBlackCircle(center - vec2(-0.1, 0.165), 0.01, 0.008);\n    hair *= drawBlackCircle(center - vec2(0.115, 0.15), 0.01, 0.008);\n    hair *= drawBlackCircle(center - vec2(-0.115, 0.15), 0.01, 0.008);\n    hair *= drawBlackCircle(center - vec2(0.13, 0.141), 0.01, 0.008);\n    hair *= drawBlackCircle(center - vec2(-0.13, 0.141), 0.01, 0.008);\n    hair *= drawBlackCircle(center - vec2(-0.00, 0.21), 0.01, 0.008);\n    \n    vec4 beard = drawBlackCircle(center - vec2(-0.0, -0.19), 0.01, 0.02);\n    beard *= drawBlackCircle(center - vec2(-0.07, -0.19), 0.01, 0.02);\n    beard *= drawBlackCircle(center - vec2(0.055, -0.195), 0.01, 0.02);\n    beard *= drawBlackCircle(center - vec2(-0.055, -0.195), 0.01, 0.02);\n    beard *= drawBlackCircle(center - vec2(0.04, -0.2), 0.01, 0.02);\n    beard *= drawBlackCircle(center - vec2(-0.04, -0.2), 0.01, 0.02);\n    beard *= drawBlackCircle(center - vec2(0.015, -0.205), 0.01, 0.02);\n    beard *= drawBlackCircle(center - vec2(-0.015, -0.205), 0.01, 0.02);\n    beard *= drawBlackCircle(center - vec2(0.085, -0.175), 0.01, 0.02);\n    beard *= drawBlackCircle(center - vec2(-0.085, -0.175),0.01, 0.02);\n    beard *= drawBlackCircle(center - vec2(0.1, -0.165), 0.01, 0.02);\n    beard *= drawBlackCircle(center - vec2(-0.1, -0.165), 0.01, 0.02);\n    beard *= drawBlackCircle(center - vec2(0.115,- 0.15), 0.01, 0.02);\n    beard *= drawBlackCircle(center - vec2(-0.115, -0.15), 0.01, 0.02);\n    hair *= drawBlackCircle(center - vec2(0.13, -0.141), 0.01, 0.02);\n    beard *= drawBlackCircle(center - vec2(-0.13, -0.141), 0.01, 0.02);\n    \n    vec4 face = drawBlackCircle(center, 0.1, 0.01);\n    vec4 leftEye = drawBlackCircle(center - vec2(0.07, 0.06), 0.01, 0.003);\n    leftEye *= drawBlackCircle(center - vec2(0.07, 0.06), 0.005, 0.1);\n    face = mix(face, leftEye, 1.0-leftEye.a);\n    vec4 rightEye = drawBlackCircle(center- vec2(-0.07, 0.06), 0.01, 0.003);\n    rightEye *= drawBlackCircle(center - vec2(-0.07, 0.06), 0.005, 0.1);\n    face = mix(face, rightEye, 1.0-rightEye.a);\n    return mix(hair,face, 1.0-face.a) * beard;\n}\n\nvec4 drawDots(vec3 color, int number, vec2 center, vec4 background) {\n    vec4 aggregate = vec4(0);   \n    aggregate += draw1Dot(color, center, background) * float(number == 1);\n    aggregate += draw2Dots(color, center, background) * float(number == 2);\n    aggregate += draw3Dots(color, center, background) * float(number == 3);\n    aggregate += draw4Dots(color, center, background) * float(number == 4);\n    aggregate += draw5Dots(color, center, background) * float(number == 5);\n    aggregate += draw6Dots(color, center, background) * float(number == 6);\n    aggregate += drawSagie(center) * float(number == 0);\n    return aggregate;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 pos = 2.0 * fragCoord/iResolution.xy - 1.0;\n    float aspectRatio = iResolution.x / iResolution.y;\n    pos.x *= aspectRatio;\n    pos = scale(vec2(0.5 + 0.5 * cos(iTime))) * pos;\n    \n    vec2 pieceSize = vec2(0.22, 0.54);\n    float pieceRadius = 0.08;\n    vec4 piece = shapeColor(white, sdRoundedBox(pos, pieceSize, pieceRadius), 0.65);\n\n    int counter = int((iTime + 3.15) / 6.25) % numberOfValues;\n    vec4 blendedRedDots = drawDots(red, counter, pos + vec2(0.0, 0.32), piece);\n\n    vec4 blendedGreenDots = drawDots(green, (counter + 1) % numberOfValues , pos - vec2(0.0, 0.32), piece);\n\n    vec2 divStart = vec2(-0.24, 0.0);\n    vec2 divEnd = vec2(0.24, 0.0);\n    float divRadius = 0.02;\n    vec4 divider = shapeColor(black, sdRoundedLine(pos, divStart, divEnd, divRadius), 15.0);\n    vec4 blendedDivider = mix(piece, divider, divider.a);\n\n    fragColor = combine(combine(blendedRedDots, blendedGreenDots), blendedDivider);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}