{
    "Shader": {
        "info": {
            "date": "1528668242",
            "description": "Short exemple of dithering for a facebook question.",
            "flags": 0,
            "hasliked": 0,
            "id": "XsVBW1",
            "likes": 9,
            "name": "Dithering tutorial",
            "published": 3,
            "tags": [
                "banding",
                "dither",
                "dithering"
            ],
            "usePreview": 0,
            "username": "Klems",
            "viewed": 1058
        },
        "renderpass": [
            {
                "code": "float hash13(vec3 p3) {\n\tp3  = fract(p3 * .1031);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n// how many values per channels\n// this is 256 for most displays\nconst float SIZE = 8.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    // color to display, use floating point precision here\n    vec3 col = vec3(fragCoord/iResolution.xy, sin(iTime)*0.5+0.5);\n    \n    // get some noise\n    float noise = 0.0;\n    // you can use different noises\n    // best is to use the dither texture, or use white noise\n    noise = texture(iChannel0, fragCoord/8.0).r;\n    if (fragCoord.x<iResolution.x*0.5)\n    \tnoise = hash13(vec3(fragCoord, iFrame));\n    \n    \n    // to do dithering, simply add noise to your frame\n    // that's it\n    col += (noise-0.5)/SIZE*2.0;\n    \n    \n    // do quantization, this will simulate a lower color depth\n    // essentialy, go from a float to an int\n    col = (floor(col*SIZE)+0.5)/SIZE;\n    fragColor = vec4(col, 1);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}