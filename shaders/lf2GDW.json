{
    "Shader": {
        "info": {
            "date": "1704243516",
            "description": "yeah",
            "flags": 0,
            "hasliked": 0,
            "id": "lf2GDW",
            "likes": 5,
            "name": "Firstof2024",
            "published": 3,
            "tags": [
                "infinite2d"
            ],
            "usePreview": 0,
            "username": "antoinefortin",
            "viewed": 143
        },
        "renderpass": [
            {
                "code": "#define RING 50. \nvec2 Hash12(float t) {\n    float x = fract(sin(t * 674.3) * 453.2);\n    float y = fract(sin(t * 2674.3) * 453.2);\n    return vec2(x,y);\n}\n\nvec3 layer1(vec2 uv)\n{\n    vec3 col = vec3(0.0f);\n    for(float i = 0.; i < RING; i++) {\n        vec2 dir = Hash12(i) - 0.5;\n        float t = sin(iTime * .5 - i * .01); \n        float d = sin(length(uv + dir * t * t) * 6.28f); // Oscillate distance for an explosive effect\n\n        float brightness = 1.5 / (d * 0.01); // Increase brightness, adjust for explosion\n\n        //vec3 particleColor = vec3(Hash12(i + iTime).x, Hash12(i + iTime).y, sin(i + iTime)); // Colorful particles\n        col +=brightness;\n    }\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 col = vec3(0.0);\n    col = layer1(uv);\n    vec3 co1 = vec3(Hash12(sin(iTime) * 0.005).x *Hash12(cos(iTime) * 0.05).y);\n    col += co1;\n    fragColor = vec4(col * vec3(sin(cos(uv.x) * 12.0f * uv.y + iTime)), 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}