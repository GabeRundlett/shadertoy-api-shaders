{
    "Shader": {
        "info": {
            "date": "1670023568",
            "description": "mouse reactive psychedelic fun",
            "flags": 0,
            "hasliked": 0,
            "id": "DsBXRm",
            "likes": 8,
            "name": " psychedelic scope",
            "published": 3,
            "tags": [
                "colors",
                "shading",
                "transparent"
            ],
            "usePreview": 0,
            "username": "timmaffett",
            "viewed": 267
        },
        "renderpass": [
            {
                "code": "// Fork of \"transparent\" by pequalsnp. https://shadertoy.com/view/4sVfD3\n// 2022-12-02 23:20:40\n\nvec2 mouse;\n\nfloat Angle(vec3 v,vec3 u)\n{\n    return dot(v,u)/(length(v)*length(u));\n}\n\nfloat Delta(vec3 pos,vec3 spos)\n{\n    float a = Angle(pos,vec3(sin(iTime*0.15),cos(iTime*0.1),sin(iTime*0.1)));\n    \n\treturn  abs(length(pos-spos)\n               - 1.0\n               + 0.15*sin(mouse.x/mouse.y*13.0*pos.y + iTime)\n               - 0.15*sin(91.0*mouse.x*pos.x*pos.y + iTime)\n        \t   + 0.15*sin(71.0*mouse.y*a));\n}\n\nvec3 Normal(vec3 pos,vec3 spos) {\n    return normalize(pos-spos);\n}\n\nvec3 Col(vec3 pos,vec3 spos)\n{\n    vec3 norm = Normal(pos,spos);\n    return norm*Angle(norm,vec3(1.0,0.5,0.5));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n mouse = (iMouse.xy == vec2(0.)) ? vec2(0.75,0.25) : (iMouse.xy/iResolution.xy)-0.5;\n    \n    vec2 uv = 2.0*fragCoord/iResolution.xy - 1.0;\n    \n\tvec3 pos = vec3(uv,0.0);\n    vec3 dir = pos - vec3(0.0,0.0,-1.5);\n    \n    vec3 spos = vec3(sin(iTime)*0.1,cos(iTime)*0.1,1.);\n    \n\tvec3 color  = vec3(0.0);\n    \n    int steps = 60;\n    for(int i = 0; i < steps; i++)\n    {\n        if(Delta(pos,spos) < 0.015)\n        {\n            color += Col(pos,spos)*(float(i)/float(steps));\n        }\n        pos += 0.01*dir;\n    }\n    \n\tcolor *= 0.35;\n    \n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}