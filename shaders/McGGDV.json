{
    "Shader": {
        "info": {
            "date": "1713293856",
            "description": "Fake physics. I wish there was a way to do this for real. ",
            "flags": 32,
            "hasliked": 0,
            "id": "McGGDV",
            "likes": 13,
            "name": "Carbons",
            "published": 3,
            "tags": [
                "atom"
            ],
            "usePreview": 1,
            "username": "wyatt",
            "viewed": 236
        },
        "renderpass": [
            {
                "code": "Main {\n\n    Q = B(U);\n    \n    Q += sin(-2.+6.*Q.w+vec4(1,2,3,4));\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define M 6\n\n#define N ((M+1)*3)\n\n\n#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel1,(U)/R)\n#define Main void mainImage(out vec4 Q, in vec2 U)\n#define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define pi 3.14159265\n\n\n#define normaliz(v) (length(v)>0.?normalize(v):vec2(0))",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "Main {\n    if (U.y>2.) discard;\n    vec4 p[N];\n    vec4 v[N];\n    for (int i = 0; i < N; i++) {\n        p[i] = A(.5+vec2(i,0));\n        v[i] = A(.5+vec2(i,1));\n        \n    }\n    for (int k = 0; k < min(50,50+iFrame); k++) \n    for (int i = 0; i < min(N,N+iFrame); i++) {\n        vec2 f = vec2(0);\n        for (int j = 0; j < min(N,N+iFrame); j++) if (i!=j) {\n        \n            vec2 r = p[j].xy-p[i].xy;\n            float l = length(r);\n            f -= .1*p[i].w*p[j].w*r/l/l*(1.-exp(-.2*l));\n            f -= 1.*abs(p[i].w*p[j].w)*r/l*(exp(-.2*l));\n            f += 1.*(v[j].xy-v[i].xy)*pow(dot(normaliz(v[j].xy-v[i].xy),r/l),1.)/l/l;\n        } \n        v[i].xy += f/p[i].z;\n        p[i].xy += f/p[i].z+v[i].xy*inversesqrt(1.+dot(v[i].xy,v[i].xy));\n    }\n    \n    \n    for (int i = 0; i < N; i++) {\n        if (U.y < 1. && int(U.x-.5)==i) Q = p[i];\n        if (U.y > 1. && int(U.x-.5)==i) Q = v[i]; \n    }\n    \n    \n    if (iFrame < 1) {\n    \n        Q = vec4(.5*R,1,-1);\n        int b = int(U.x)/(M+1);\n        U.x = mod(U.x,float(M+1));\n        if (U.x < 1.) {\n            Q.x += 0.;\n            Q.z = 200.*float(M);\n            Q.w = float(M);\n        } else if (U.x < float(M+1)) {\n            Q.xy += vec2(30,0)*ei(2.*pi*U.x/float(M));\n        } \n        \n        \n        if (int(U.y)%2==1) {\n            Q = vec4(Q.y-.5*R.y,.5*R.x-Q.x,0,0)/1000.;\n        } else \n        {\n            Q.x -= .2*R.x;\n            Q.x += .2*R.x*float(b);\n         }\n        \n        \n        \n    }\n\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main {\n\n    Q = vec4(0);\n    for (int i = 0; i < N; i++) {\n        vec4 a = A(.5+vec2(i,0));\n        Q += abs(a.w)*exp(-.5*length(a.xy-U));\n        Q.w += a.w/length(a.xy-U);\n    }\n    \n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}