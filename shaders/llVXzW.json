{
    "Shader": {
        "info": {
            "date": "1483389595",
            "description": "Just a different type of mandelbrot fractal.",
            "flags": 0,
            "hasliked": 0,
            "id": "llVXzW",
            "likes": 2,
            "name": "Mandelbrots",
            "published": 3,
            "tags": [
                "mandelbrot"
            ],
            "usePreview": 0,
            "username": "Tryton",
            "viewed": 659
        },
        "renderpass": [
            {
                "code": "vec3 MandelBrot(vec2 p){\n        float time = iTime;\n    \n        float coa = cos( time );\n        float sia = sin( time );\n        vec2 xy = mat2(coa,sia,-sia,coa)*p;\n        vec2 c =  xy;\n    \n        vec2 z=vec2(0);\n        float l=0.0;\n\n    \tint sinTimeFrac = int((sin(time) + 1.0)*2.0);\n    \n        for(int i=0;i<256;i++){\n            \n            for(int j=0;j<sinTimeFrac;j++){\n                z = mat2(z, -z.y, z.x)*z;\n            }\n            \n            z = mat2(z,-z.y,z.x)*z + c;\n            \n            if( dot(z,z)>4.0 ) break;\n            l++;\n        }\n    \n    \tif( dot(z,z)<4.0 )l=sqrt(dot(xy,z))*4.0;\n    \tfloat sl = (log(dot(z,z)/l));\n\t\n        float al = smoothstep( 0.1, 0.4, (sin(iTime)+1.0)/2.0);\n        l = mix( l, sl, al );\n\n        vec3 col = vec3(l*0.2,0.0,0.0);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \n    vec2 p = (-iResolution.xy + 2.0*fragCoord.xy)/iResolution.y;\n    fragColor = vec4(MandelBrot(p),0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}