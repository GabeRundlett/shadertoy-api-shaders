{
    "Shader": {
        "info": {
            "date": "1487905932",
            "description": "Pushing for the support of mipmaps for audio buffer by making it myself, but with a 9 frames delay. This would allow the use of textureGrad to fetch a large surface area, allowing for better sound visualization. 512 is a bit large by itself :(",
            "flags": 32,
            "hasliked": 0,
            "id": "lsfyW8",
            "likes": 14,
            "name": "1D texture mip-mapping",
            "published": 3,
            "tags": [
                "filtering",
                "mipmap",
                "1d"
            ],
            "usePreview": 0,
            "username": "Klems",
            "viewed": 864
        },
        "renderpass": [
            {
                "code": "#define RESOLUTION 512.0\nfloat texture1DNoFiltering(float x, float floorLod) {\n    floorLod = min(floorLod, log2(RESOLUTION));\n    float width = RESOLUTION / exp2(floorLod);\n    vec2 uv = vec2(x*(width - 1.0) + 0.5, floorLod + 0.5);\n    return texture(iChannel0, uv / iResolution.xy).r;\n}\n\nfloat texture1D(float x, float lod) {\n    float a = floor(lod);\n    float b = a + 1.0;\n    return mix(texture1DNoFiltering(x, a), texture1DNoFiltering(x, b), fract(lod));\n}\n\nvec3 hsv2rgb( in vec3 c ) {\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float lod = uv.x*9.0;\n    if (iMouse.z > 0.0) lod = (iMouse.x / iResolution.x * 9.0);\n    float value = texture1D(uv.y, lod);\n    fragColor.rgb = hsv2rgb(vec3(1.0-value, 1.0, value));\n    fragColor.a = 1.0;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define RESOLUTION 512.0\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    fragColor = vec4(0);\n    float width = RESOLUTION;\n    float level = floor(fragCoord.y);\n    width /= exp2(level);\n    if (fragCoord.x < width) {\n        if (level > 0.0) {\n            vec2 a = vec2(floor(fragCoord.x)*2.0+0.5, fragCoord.y - 1.0);\n            vec2 b = vec2(floor(fragCoord.x)*2.0+1.5, fragCoord.y - 1.0);\n            float va = texture(iChannel0, a / iResolution.xy).r;\n            float vb = texture(iChannel0, b / iResolution.xy).r;\n            fragColor.r = (va+vb)*0.5;\n        } else {\n            fragColor.r = texture(iChannel3, vec2(fragCoord.x / width, 0)).r;\n        }\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "music",
                        "id": 20,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}