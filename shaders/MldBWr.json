{
    "Shader": {
        "info": {
            "date": "1539268039",
            "description": "polygonal columns with rounded corners.\n\nmouse click to see SDF.",
            "flags": 0,
            "hasliked": 0,
            "id": "MldBWr",
            "likes": 16,
            "name": "columns 2c: rounded polygons",
            "published": 3,
            "tags": [
                "raymarching",
                "sdf",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 713
        },
        "renderpass": [
            {
                "code": "// rounded edges variant of https://shadertoy.com/view/4dVfD3\n// variant of https://shadertoy.com/view/4sKfD3 ( columns )\n// and https://www.shadertoy.com/view/lsGczd    ( polygons )\n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float t = iTime, i, v=0.;\n    mat2  R = mat2( sin(t+vec4(0,33,11,0)) );\n    vec3  q = iResolution,\n          D = normalize(vec3(.3*(U+U-q.xy)/q.y, -1)),// ray direction\n          p = 30./q;                             // marching point along ray \n    O-=O;\n    for ( O++; O.x > 0. && t > .01 ; O-=.015 ) {\n        q = p,\n        q.xz *= R, q.yz *= R,                    // rotation\n        i = (q.x+3.)/6.;                         // floor = column number\n        q.x = mod(q.x+3.,6.)-3.,                 // repeat in x\n        q.y = abs(q.y)-5.;                       // 2 rows\n        \n        float c = .4, r = 2.-c, h = 2.,          // corner, radius, height/2\n              N = 3. + floor(abs(i)),            // number poly sides\n              a = atan(q.x,q.y), l = length(q.xy), d,\n              b = 3.14159/N;\n        a = mod(a,2.*b)-b;\n        d = l*cos(a) -r*cos(b);                  // 2D polygonal distance\n        if (d>0.) d = length(vec2(max(0., abs(l*sin(a))-r*sin(b) ), d)); // rounded edges\n\n        t = max( d-c, abs(q.z) -h );             // inter Z-range\n        if (i<0.) t = max(t, -(d+r*cos(b)*.25)); // hole\n        if (iMouse.z>0.) t = min(v=t, q.z+h);    // debug: plot SDF on a floor\n        \n        p += t*D;                                // step forward = dist to obj\n    }\n    if (v>0.) O.r = sin(6.28*2.*v);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}