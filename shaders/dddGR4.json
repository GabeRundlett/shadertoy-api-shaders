{
    "Shader": {
        "info": {
            "date": "1677446072",
            "description": "Made live during \"La Fabrique Ã  cookie 05\"",
            "flags": 0,
            "hasliked": 0,
            "id": "dddGR4",
            "likes": 18,
            "name": "The dunnos return",
            "published": 3,
            "tags": [
                "2d",
                "tunnel",
                "dunno"
            ],
            "usePreview": 0,
            "username": "z0rg",
            "viewed": 221
        },
        "renderpass": [
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\n// Thanks Inigo :)\nfloat sdSegment(vec2 p, vec2 a, vec2 b)\n{\n  vec2 pa = p-a, ba = b-a;\n  float h = clamp(dot(pa,ba)/dot(ba,ba), 0., 1.);\n  return length(pa-ba*h);\n}\n#define sat(a) clamp(a, 0., 1.)\n\n\nvec3 drawTheBlobs(vec2 uv, vec3 col, vec3 rgb)\n{\n  vec3 color = col;\n  float an2 = atan(uv.y, uv.x);\n  float rep2 = acos(-1.)*2./15.;\n  float id = floor((an2+rep2*.5)/rep2);\n  float sector2 = mod(an2+rep2*.5,rep2)-rep2*.5;\n  uv = vec2(sin(sector2), cos(sector2))*length(uv);\n  uv.x += sin(uv.y*10.+iTime*3.+id)*.02;\n  uv.y -= (sin(id+iTime)*.5+.5)*.2;\n  float blob = sdSegment(uv, vec2(0.,20.), vec2(0.,.3))-.05;\n  color = mix(color, rgb, 1.-sat(blob*500.));\n  uv.x = abs(uv.x);\n  float blink = sat(sin(iTime*5.)+sin(iTime*3.+id*15.)+sin(iTime*2.+id));\n  float eyes = length((uv-vec2(0.02,0.3))*vec2(1.,1.+blink*5.))-.01;\n  color = mix(color, vec3(1.,1.,0.), 1.-sat(eyes*500.));\n\n    return color;\n}\nmat2 r2d(float a) { float c = cos(a), s =sin(a); return mat2(c, -s, s, c);}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord.xy-iResolution.xy/2.) / iResolution.y;\n    vec2 saveuv = uv;\n    float rep = acos(-1.)*2./mix(1.,8.,sat(sin(iTime*.25)*.5+.5));\n    uv = abs(uv);\n    float an = atan(uv.y, uv.x);\n    float sector = mod(an+rep*.5,rep)-rep*.5;\n    uv = vec2(sin(sector), cos(sector))*length(uv);\n\n    float shape = abs(uv.x)-.05;\n    vec3 color = vec3(0.);\ncolor = vec3(.3,.1,.05)*10.*(1.-sat(length(uv)*7.));\n    uv = saveuv;\n    for (float i = 16.; i > 0.; --i)\n    {\n      float f = i/16.;\n      vec3 rgb = mix(vec3(0.),vec3(.3,.1,.05)*3.,f);\n      color = drawTheBlobs(uv*mix(1.,5.,f)*r2d(i), color, rgb);\n    }\n    color = drawTheBlobs(uv, color, vec3(0.));\n    fragColor = vec4(color, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}