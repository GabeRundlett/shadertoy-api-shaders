{
    "Shader": {
        "info": {
            "date": "1498500174",
            "description": "INSTRUCTIONS: Drag mouse click left and right to change quantization\n+1.0 Top \n0.0 Middle\n-1.0 Bottom Left",
            "flags": 0,
            "hasliked": 0,
            "id": "XdsBWX",
            "likes": 3,
            "name": "Discrete Sine Wave",
            "published": 3,
            "tags": [
                "fft",
                "sin",
                "discrete",
                "dct",
                "quantize",
                "quantized"
            ],
            "usePreview": 0,
            "username": "MichaelPohoreski",
            "viewed": 674
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n\nfloat plot(vec2 st, float y)\n{\n  return  smoothstep( y-0.02, y     , st.y) - \n          smoothstep( y     , y+0.02, st.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2  uv = fragCoord.xy / iResolution.xy;\n\n    // Quantized Steps\n    float SENS = 1.0; // 0.5 = less senstive, easier to select 2, 3, 4, etc zoom.\n    float SIZE = 8.0;\n    if( iMouse.z > 0.0)\n        SIZE = max( 1.0, min( SENS * iMouse.x, iResolution.x ));\n    vec2  st = vec2( floor( uv * SIZE ) / SIZE );\n    \n    float y       = 0.5 + 0.5*sin( 2.0 * PI * st.x );\n    float percent = plot( uv, y );\n    vec3  color   = vec3( y ); // TODO: Gamma correct\n    vec3  green   = vec3( 0.0, 1.0, 0.0 ); // Foreground: wave color\n          color   = mix( color, green, percent );\n    fragColor = vec4(color,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}