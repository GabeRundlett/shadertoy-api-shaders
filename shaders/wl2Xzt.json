{
    "Shader": {
        "info": {
            "date": "1582583669",
            "description": "adsdsfdsfdfs",
            "flags": 0,
            "hasliked": 0,
            "id": "wl2Xzt",
            "likes": 3,
            "name": "asddfsadfsdfsa",
            "published": 3,
            "tags": [
                "asddfsdsfdfsa"
            ],
            "usePreview": 0,
            "username": "lennyjpg",
            "viewed": 306
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\n\nvec3 colors[8] = vec3[]( \n    vec3( 1.0, 0.2, 0.0 ),\n    vec3( 0.1, 0.2, 0.3 ),\n    vec3( 0.1, 0.1, 0.0 ),\n    vec3( 0.4, 0.9, 0.8 ),\n    vec3( 1.0, 1.0, 0.9 ),\n    vec3( 0.4, 0.2, 1.0 ),\n    vec3( 0.6, 1.0, 0.9 ),\n    vec3( 1.0, 0.1, 0.2 ));\n\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat rot = 0.1;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x;\n    \n    \n    \nrot += iTime*0.1;\n    \n    float z = sin(iTime*0.2)+1.5;\n    uv*=z;\n    \n    uv -= vec2(0.5);\n//    uv = rotate2d( sin(iTime*0.1)*PI ) * uv;\n    uv = rotate2d( rot ) * uv;\n uv += vec2(0.5);\n    \n \tuv+= 999.999;\n      //  uv.y+=sin(uv.x*5.3)*0.5;\n\n    \n    uv.x+=iTime*0.1;\n    float t = 9999. + iTime * 0.2;\n   //t += 0.1*(sin(t*11.5)+1.0);\n    vec2 foo = uv;\n    \n   // foo.y+=sin(foo.x*4.0);\n    foo.x += sin(t+5.73+foo.x*1.1)*2.13;\n    foo.x -= cos(t-8.73-foo.x*5.1)*.14;\n\n        //t+= sin(foo.x*61.6)*.2;\n\n    float res = 17.0;\n    foo.x = floor(foo.x*res) / (res-1.0);\n    \n   // foo.y += sin(foo.x*32.156) * t;\n    t*= sin(foo.x*1.6)* 2.2;\n    foo.y += t;\n    \n    float n = rand(vec2(112.5,floor(foo.y*.1)))*43.01;\n    float m = rand(vec2(24.2,floor(foo.y)))*0.28;\n  \n    if(m>0.03) m+= n;\n   // n = min(n,m);\n//    foo.y = floor(fract(foo.y*n)+0.5);\n    foo.y = mod(foo.y+m,0.43);\n   // vec3 cc = colors[int(foo.y*8.0 )];\n    vec3 aa = colors[int(foo.y*6.0 )];\n    vec3 bb = colors[int(foo.y*6.0+.9 )];\n    vec3 cc = mix(aa,bb,foo.y*9.);\n\n    \n    /*\n    float e = rand(foo);\n    vec2 p = uv;\n\n    p.y+=uv.y;\n    \n    float a = fract(p.y*20.0*e);\n    a= floor(a+0.5);\n    \n    vec2 u = fract(p *20.0);\n    float k = length(u-0.5);\n    k = smoothstep(0.0,0.2,k);\n    \n    float s = sin(uv.x);\n    */\n    vec3 ca= vec3(1.0,0.3,0.1);\n    vec3 cb= vec3(1,1,0.4);\n    vec3 c = mix(ca, cb, foo.y);\n    \n    vec3 rgb = hsb2rgb(vec3(foo.y,1.0,1.0));\n    \n    fragColor = vec4(cc,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}