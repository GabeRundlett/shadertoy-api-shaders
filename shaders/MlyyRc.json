{
    "Shader": {
        "info": {
            "date": "1537113799",
            "description": "just fuck it",
            "flags": 0,
            "hasliked": 0,
            "id": "MlyyRc",
            "likes": 1,
            "name": "Fuck this",
            "published": 3,
            "tags": [
                "tutorial"
            ],
            "usePreview": 0,
            "username": "wangyue66",
            "viewed": 448
        },
        "renderpass": [
            {
                "code": "\nconst vec3 RED = vec3(1.0, 0.0, 0.0);\nconst vec3 GREEN = vec3(0.0, 1.0, 0.0);\nconst vec3 BLUE = vec3(0.0, 0.0, 1.0);\nconst vec3 PURPLE = vec3(1.0, 0.0, 1.0);\nconst vec3 CYAN = vec3(0.0, 1.0, 1.0);\n\n// rate = long radius / short radius\nvec3 DrawEllipse(in vec2 uv, in vec2 center, float radius, float rate, float blur, in vec3 backCol, in vec3 drawCol)\n{\n    vec2 origin = uv - center;\n    origin.y /= rate;\n    float dis = length(origin);\n    \n    float t = smoothstep(radius, radius - blur, dis);\n    vec3 col = mix(backCol, drawCol, t);\n    return col;\n}\n\nvec3 DrawCircle(in vec2 uv, in vec2 center, float radius, float blur, in vec3 backCol, in vec3 drawCol)\n{\n    float dis = length(uv - center);\n    float rate = smoothstep(radius, radius - blur, dis);\n    vec3 col = mix(backCol, drawCol, rate);\n    return col;\n}\n\nvec3 DrawMouse(in vec2 uv, in vec2 center,in float offset, float radius, float blur, in vec3 backCol, in vec3 drawCol)\n{\n    float dis = length(uv - center);\n    float rate1 = smoothstep(radius, radius - blur, dis);\n    float dis2 = length(uv - vec2(center.x, center.y + offset));\n    float rate2 = smoothstep(radius, radius - blur, dis2);\n    float rate = rate1 - rate2;\n    vec3 col = mix(backCol, drawCol, rate);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n    uv -= 0.5;\n    uv *= 2.0;  //(x,y -> [-1,1])\n    uv.x *= iResolution.x / iResolution.y; //x unit equal y unit\n\t// head\n    vec3 head = DrawCircle(uv, vec2(0.0,0.0), 0.8, 0.1, RED, BLUE);\n    // left eye  \n    vec3 leftEye = DrawEllipse(uv, vec2(-0.35,0.2), 0.12, 0.6, 0.02, head, GREEN);\n    // right eye\n    vec3 rightEye = DrawEllipse(uv, vec2(0.35,0.2), 0.12, 0.6, 0.02, leftEye, GREEN);\n    // nose\n    vec3 nose = DrawEllipse(uv, vec2(0.0,-0.08), 0.04, 1.0, 0.02, rightEye, CYAN);\n    \n    // mouth\n    float offset = sin(iTime * 5.0) * 0.04;\n    vec3 mouth;\n    if(offset < 0.0)\n    {\n        mouth = DrawMouse(uv, vec2(0.0,-0.5), offset, 0.1, 0.02, nose, PURPLE);\n    }\n    else\n    {\n        mouth = DrawMouse(uv, vec2(0.0,-0.4), offset, 0.1, 0.02, nose, PURPLE);\n    }\n    \n    vec3 lastCol = mouth;\n    // Output to screen\n    fragColor = vec4(lastCol,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}