{
    "Shader": {
        "info": {
            "date": "1486125983",
            "description": "a simple animation where circles and a gradient are added together.",
            "flags": 0,
            "hasliked": 0,
            "id": "llySW3",
            "likes": 7,
            "name": "simple circles and gradients",
            "published": 3,
            "tags": [
                "circle",
                "gradient"
            ],
            "usePreview": 0,
            "username": "stebi",
            "viewed": 812
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 ratio;\n    ratio.x = iResolution.x / iResolution.y;\n    ratio.y = 1.0;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5; // center coordinates\n    uv *= ratio;\n    \n    // calculate circles\n    float distance1 = sin(length(uv - vec2(-cos(iTime * 5.0) * 0.05, -sin(iTime * 5.0) * 0.05)) * (30.0 + abs(sin(iTime) * 100.0)));\n    float distance2 = sin(length(uv - vec2(+cos(iTime * 5.0) * 0.05, +sin(iTime * 5.0) * 0.05)) * 100.0);\n    \n    fragColor.rgb = vec3(distance1 * distance2);\n    fragColor.a = 1.0;\n    \n    // calculate rotating color grading\n    float angleRad = iTime;\n    vec2 sc;\n    sc.x = cos(angleRad);\n    sc.y = sin(angleRad);\n    mat2 m = mat2(sc.y, sc.x, -sc.x, sc.y); \n    \n    uv = m * uv;\n    vec4 color1 = vec4(1, 0.4, 0.0, 1);\n    vec4 color2 = vec4(0.1, 0.8, 0.9, 1);\n    fragColor += mix(color1, color2, uv.y);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}