{
    "Shader": {
        "info": {
            "date": "1591083871",
            "description": "Originally based on https://shadertoy.com/view/Xslfzj by user rohtie, but I modified it now to work better.",
            "flags": 50,
            "hasliked": 0,
            "id": "3sBBDd",
            "likes": 6,
            "name": "WebCam Long Exposure",
            "published": 3,
            "tags": [
                "fork",
                "webcam",
                "lowlight",
                "lowlight",
                "noisereduction",
                "webcamghosting",
                "longexposure",
                "webcamlongexposure",
                "webcamaveraging"
            ],
            "usePreview": 0,
            "username": "Zi7ar21",
            "viewed": 1163
        },
        "renderpass": [
            {
                "code": "// ^^^ Change to Buffer A for settings or B for export up here ^^^\n\n// Fork of \"Extremely Long Exposure\" by rohtie. https://shadertoy.com/view/Xslfzj\n// 2020-06-02 07:38:44\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// These two numbers change the output.\n// Calibration coming soon.\n// For now, take your main exposure and then take one with the camera in a dark spot with no light or just cover it.\n// Then, use a third-party program like GIMP (https://www.gimp.org/downloads/) to subract the light from the dark.\nbool isKeyPressed(int KEY){\n\treturn texelFetch( iChannel3, ivec2(KEY,0), 0 ).x > 0.5;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv)+(texture(iChannel1, uv)/8192.0);\n    vec4 oldFragColor = vec4(0.);\n    fragColor += oldFragColor;\n    if(iFrame != 0) oldFragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    if(isKeyPressed(32)){\n        fragColor.rgba = vec4(0.0);\n    }\n    if(iMouse.z >= 128.0){\n        fragColor.rgba = vec4(0.0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Settings in Buffer A and Export in Buffer B\n// Export this with the button in the bottom left of the editor, it will save a 32-Bit OpenEXR File (I think)\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 texel = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    vec3 color = (texel.a == 0. ? vec3(0.) : texel.rgb / texel.a);\n\tfragColor = vec4(color, 1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}