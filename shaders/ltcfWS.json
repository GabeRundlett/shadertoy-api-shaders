{
    "Shader": {
        "info": {
            "date": "1540822771",
            "description": "Adds procedural glitchy static effect to default shader. This uses the famous \"rand () one-liner\" function. The background can be changed to anything, and the effect could be toggled on and off based off of what is going on in a game, for example.",
            "flags": 0,
            "hasliked": 0,
            "id": "ltcfWS",
            "likes": 1,
            "name": "Glitchy Static Effect",
            "published": 3,
            "tags": [
                "noise",
                "static",
                "glitchy"
            ],
            "usePreview": 0,
            "username": "Nihilistic_Furry",
            "viewed": 425
        },
        "renderpass": [
            {
                "code": "// Rand one-liner\nfloat rand(vec2 co)\n{\n\treturn fract (sin (dot (co.xy, vec2 (12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5 * cos (iTime + uv.xyx + vec3 (0, 2, 4));\n    \n    // If time is in glitch state, \n    if (rand (vec2 (iTime, iTime)) > 0.9) \n    {\n        float noise = rand (uv * iTime);\n        col *= vec3 (noise, noise, noise);\n    }\n\n    // Output to screen\n    fragColor = vec4 (col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}