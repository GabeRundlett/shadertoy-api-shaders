{
    "Shader": {
        "info": {
            "date": "1681535341",
            "description": "A zellij tile pattern.",
            "flags": 8,
            "hasliked": 0,
            "id": "mdyXDy",
            "likes": 5,
            "name": "Zellij pattern 3 (music)",
            "published": 3,
            "tags": [
                "fractal",
                "music",
                "zellige"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 295
        },
        "renderpass": [
            {
                "code": "vec2 f1(vec2 a){\n    return\n        //abs(.5-fract(a))*abs(.5-fract(a*2.))\n        //min(abs(fract(a)-.5),abs(fract(a*1.5)-.5))\n        //max(abs(.5-fract(a)),abs(.5-fract(a.yx+.5)))\n        abs(.5-fract(a))\n    ;    \n}\n\nvec2 triangle_wave(vec2 a){\n    vec2 a2 =\n        vec2(1.,0.5)\n        //vec2(1.+sign(a.x)/2.,0.5-sign(a.x)/2.)\n    ,\n    a1 = a+a2;\n    return\n        f1((a1)*(a2.x+a2.y))\n        //sqrt(f1((a1)*(a2.x+a2.y)))\n    ;\n}\n\nfloat binary_digit(int n, int i){\n    return float((n >> i) & 1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 1.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    if(iMouse.z>.5)\n    uv = uv.xy + iMouse.xy / iResolution.xy/t1;\n    vec2 t2 = vec2(0.);\n    for(int k = 0; k < 6; k++){\n        \n        //if((k)%3 == 0) t2 *= 0.;\n\n        //k += int(uv.y>uv.x);\n        \n        //if(t2.x<t2.y)t2.x -= .5;\n        \n        \n        \n        uv =\n            abs(.5+uv+t2)/1.5\n            //abs(.5+uv+t2*(1.+mod(floor(uv.y),2.)/2.))/1.5\n            //abs(.5+uv-t2*sign(uv.x-uv.y))/1.5\n        ;\n        //uv += binary_digit(k,2)/2.;\n        uv.x -= .5;\n        //if(k%2==0&&uv.y>uv.x) uv /= 1.5;\n        \n        \n\n        t2 =\n            -triangle_wave(uv+.5)\n        ;\n        uv =\n            t2-triangle_wave(uv.yx)\n            //t2-triangle_wave(uv.yx-floor(.5+t2.y+t2.x))\n        ;\n        \n        \n\n        {t2 = t2.yx; uv=uv.yx;}\n        //uv.x = uv.x-col.x/1.5;\n\n        //if(t2.x>t2.y)\n        col =\n            vec3(col.zx,max(abs(uv.x-uv.y)*sign(t2.x-t2.y),0.))\n            //vec3(col.zx,max(abs(uv.x-uv.y)*sign(t2.x-t2.y),col.y))\n            //vec3(col.zx,max(uv.x-uv.y,col.y))\n            //vec3(col.zx,max(abs(uv.x-uv.y)*sign(-t2.x+t2.y),col.x))\n        ;\n        //if(uv.x>uv.y) uv.y -= .5;\n        //if(uv.x>uv.y && k%5 == 0) {uv = -uv;break;}\n\n        //if(uv.x>uv.y) col=col.yzx;\n    }\n    fragColor = vec4(col*2.,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float fract1(float a){\n    return\n        fract(a)\n        //abs(fract(a)+.25)/1.25\n        //abs(max(fract(a/2.),fract(a*2.))+.25)/1.25\n        //fract(a+pow(fract(a*2.),2.))\n    ;\n}\n\nfloat fmod2(float a, float b){\n    return b*mod(floor(a),b);\n}\n\nfloat fmod1(float a, float b){\n    //a += fmod2(a*b,8.);\n    //a += floor(a/b)/8.;\n    //a /= (1. + floor(mod(1.+a/2.*b,2.)));\n    /*\n    for(int i = 0; i < 3; i++){\n        a += floor(a/2.)/2.;\n    }\n    */\n    \n    //a += floor(a/8.*b)/8.*b;\n    //a += floor(a*2./b)/b;\n    /*\n    for(int i = 0; i < 3; i++){\n        a += mod(floor(a*2.),2.);\n        //a /= (1. + floor(mod(a/2.,2.)));\n    }\n    */\n    //a -= floor(a/8.)/8.;\n    \n    a = (a + pow(2.,mod(floor(a),3.)));\n    a += pow(2.,mod(floor(a*8.),8.));\n    \n    return\n        mod(floor(a*b),b)*mod(floor(a/b)*floor(a*b),b/2.)\n        //floor(mod(floor(a*b),b/2.)*mod(floor(a/b)*floor(a*b),b)/2.)\n        //mod(mod(floor(a*b),b)*mod(floor(a/b)*floor(a*b),b*8.),b)\n        //mod(floor(floor(a*b)/3./4.),b)\n        //mod(floor(a*b/2.+8./b)+floor(a*b/2.+b/8.)+floor((a+8.)/b),b)\n        //floor(mod(floor(a*b),b*2.)*mod(floor(a*b),b)/4.)\n        //mod(mod(floor(a*b),floor(a/b)+b),b)\n        //mod(mod(floor(a/2.+4.),floor(a/8.+4.)),b)\n        //mod(mod(floor((a+2.)*b),floor(a/2.)),b)\n        //max(mod(floor(a*8./b),b),mod(floor(a/b),b))\n        //mod(floor(a*b),floor(b/2.))*mod(floor(a*pow(b,floor(mod(floor(a/b),b)/b))),(b))\n        //floor(sqrt(mod(floor(a*b),b)*mod(floor(a/b)*floor(a*b)/2.,b*2.)))\n        //mod(floor(a*b),(b/2.))*mod(floor(a/b)*floor(a*b/2.),b)\n        //floor(sqrt((b/2.+mod(floor(a*b),b))*(b/2.+mod(floor(a/b)*floor(a*b),b))))\n    ;\n}\n\nfloat fmod(float a, float b){\n    return\n        fmod1(a,b)\n        //fmod1(a+fmod1(a/2.,b/2.),b)\n    ;\n}\n\nvec2 mainSound(int samp, float t){\n  float tempo = 2.;\n  //t /= tempo;\n\n  //t += floor(t*pow(2.,mod(floor(t/2.),3.)));\n  \n  /*\n  for(int i = 0; i < 3; i++){\n      t += mod(floor(t*2.),2.)/2.+mod(floor(t*2.),2.)/2.;\n      //a /= (1. + floor(mod(a/2.,2.)));\n  }\n  */\n  \n  //t += floor(t*pow(2.,fmod(t/4.,4.)))/pow(2.,fmod(t/4.,4.));\n  float s1 =\n      8.\n  ;\n  float p1 = 1. + floor(mod((1.+t/4.)/2.,2.));\n  t *= p1/2.;\n  \n  /*\n  for(int i = 0; i < 3; i++){\n      t += mod(floor(t*4.),2.)/2.;\n  }\n  */\n  \n  float a=\n      //128.*pow((1.-sqrt(fract1(t*p1))),2.)\n      //(2.-1.*log(fract(t*p1)))*(2.-1.*log(fract(t*p1)))\n      2.*pow(log(fract(t*p1)/2.),2.)\n  ,\n  nb =\n      .5*t*tempo*pow(2.,(2.+fmod(t/s1,s1/2.)+fmod(t,s1)+1.)/5.+7.)/p1\n      //.5*t*tempo*pow(2.,(2.+fmod(t,s1)+1. + fmod(floor(t/s1),2.))/5.+7.)/p1\n  ;\n  return\n      log(abs(.5-vec2(fract(nb*.998*2.),fract(nb)))*a)\n      \n      //sitar\n      //log(abs(a/16.-abs(.5-vec2(fract(nb*.998),fract(nb)))*a))\n      \n      //log(abs(a/4.-abs(.5-vec2(fract(nb*.998*2.),fract(nb)))*a))\n  ;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}