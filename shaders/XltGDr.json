{
    "Shader": {
        "info": {
            "date": "1469367906",
            "description": "Brings me back memories of the 90s in grim Eastern Europe (just after Soviet Union fell). Loved to watch western action movies (Rambo!) and of course to play Contra! Can you finish 1st lvl?\nA/Q - fire S/W - jump Arrows - move, jump, lie down, dive",
            "flags": 112,
            "hasliked": 0,
            "id": "XltGDr",
            "likes": 186,
            "name": "[SH16C] Contra",
            "published": 3,
            "tags": [
                "2d",
                "game",
                "retro",
                "crt",
                "sprite",
                "nes",
                "challenge",
                "shadertoycompetition",
                "sh16c"
            ],
            "usePreview": 1,
            "username": "knarkowicz",
            "viewed": 22889
        },
        "renderpass": [
            {
                "code": "#define POST_PROCESS\n\nvec2 CRTCurveUV( vec2 uv, float str )\n{\n    uv = uv * 2.0 - 1.0;\n    vec2 offset = ( str * abs( uv.yx ) ) / vec2( 6.0, 4.0 );\n    uv = uv + uv * offset * offset;\n    uv = uv * 0.5 + 0.5;\n    return uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 baseUV = fragCoord.xy / iResolution.xy;\n    \n#ifdef POST_PROCESS    \n    vec2 uv = CRTCurveUV( baseUV, 0.5 );\n    \n    // chromatic abberation\n\tfloat caStrength    = 0.003;\n    vec2 caOffset       = uv - 0.5;\n    //caOffset = vec2( 1.0, 0.0 ) * 0.3;\n    vec2 caUVG          = uv + caOffset * caStrength;\n    vec2 caUVB          = uv + caOffset * caStrength * 2.0;\n    \n    vec3 color;\n    color.x = texture( iChannel0, uv ).x;\n    color.y = texture( iChannel0, caUVG ).y;\n    color.z = texture( iChannel0, caUVB ).z;\n    \n    uv = CRTCurveUV( baseUV, 1.0 );\n    if ( uv.x < 0.0 || uv.x > 1.0 || uv.y < 0.0 || uv.y > 1.0 )\n    {\n        color = vec3( 0.0, 0.0, 0.0 );\n    }    \n    float vignette = uv.x * uv.y * ( 1.0 - uv.x ) * ( 1.0 - uv.y );\n    vignette = clamp( pow( 16.0 * vignette, 0.3 ), 0.0, 1.0 );\n    color *= vignette * 1.1;\n    \n#else\n    vec3 color = texture( iChannel0, baseUV ).xyz;\n    \n#endif\n    \n    fragColor = vec4( color, 1.0 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "musicstream",
                        "id": 4306,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/somari_musics/nes_contra_jungle-stage"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Gameplay\n\n// debug cheats\n//#define KONAMI_CODE\n//#define SPEED_RUN\n//#define GOD_MODE\n\n// storage\nconst vec2 txPlayer \t\t\t= vec2( 0.0, 0.0 ); \t// xy - pos, z - jump start, w - jump dir\nconst vec2 txPlayerState\t\t= vec2( 1.0, 0.0 ); \t// x - state, y - frame, z - jump tick, w - lifes\nconst vec2 txPlayerDir\t\t\t= vec2( 2.0, 0.0 ); \t// xy - dir, z - flip, w - immortality\nconst vec2 txPlayerWeapon\t\t= vec2( 3.0, 0.0 ); \t// x - weapon, y - weapon cooldown, z - weapon fire rate, w - weapon bullet num\nconst vec2 txCamera \t\t\t= vec2( 4.0, 0.0 ); \t// x - cam offset, y - spawn counter, z - soldier spawn counter\nconst vec2 txSoldier0 \t\t\t= vec2( 5.0, 0.0 ); \t// xy - pos, z - flip\nconst vec2 txSoldier1 \t\t\t= vec2( 5.0, 1.0 ); \t// xy - pos, z - flip\nconst vec2 txSoldier2 \t\t\t= vec2( 5.0, 2.0 ); \t// xy - pos, z - flip\nconst vec2 txSoldier0State \t\t= vec2( 6.0, 0.0 ); \t// x - state, y - frame, z - jump tick\nconst vec2 txSoldier1State \t\t= vec2( 6.0, 1.0 ); \t// x - state, y - frame, z - jump tick\nconst vec2 txSoldier2State \t\t= vec2( 6.0, 2.0 ); \t// x - state, y - frame, z - jump tick\nconst vec2 txSniper\t \t\t\t= vec2( 7.0, 0.0 ); \t// xy - pos, z - flip, w - weapon cooldown\nconst vec2 txPlayerBullet0 \t\t= vec2( 8.0, 0.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet1 \t\t= vec2( 8.0, 1.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet2 \t\t= vec2( 8.0, 2.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet3 \t\t= vec2( 8.0, 3.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet4 \t\t= vec2( 8.0, 4.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet5 \t\t= vec2( 8.0, 5.0 ); \t// xy - pos, xy - dir\nconst vec2 txEnemyBullet0 \t\t= vec2( 9.0, 0.0 ); \t// xy - pos, xy - dir\nconst vec2 txEnemyBullet1 \t\t= vec2( 9.0, 1.0 ); \t// xy - pos, xy - dir\nconst vec2 txEnemyBullet2 \t\t= vec2( 9.0, 2.0 ); \t// xy - pos, xy - dir\nconst vec2 txEnemyBullet3 \t\t= vec2( 9.0, 3.0 ); \t// xy - pos, xy - dir\nconst vec2 txExplosion \t\t\t= vec2( 10.0, 0.0 ); \t// xy - pos, z - frame\nconst vec2 txHit \t\t\t\t= vec2( 11.0, 0.0 ); \t// xy - pos, z - frame\nconst vec2 txTurret0\t\t\t= vec2( 12.0, 0.0 ); \t// xy - pos, z - angle\nconst vec2 txTurret1\t\t\t= vec2( 12.0, 1.0 ); \t// xy - pos, z - angle\nconst vec2 txTurret0State\t\t= vec2( 13.0, 0.0 ); \t// x - HP, y - weapon cooldown\nconst vec2 txTurret1State\t\t= vec2( 13.0, 1.0 ); \t// x - HP, y - weapon cooldown\nconst vec2 txPowerUp\t\t\t= vec2( 14.0, 0.0 ); \t// xy - pos, z - frame\nconst vec2 txPowerUpState\t\t= vec2( 15.0, 0.0 ); \t// x - state, y - initial height, z - jump tick\nconst vec2 txBossCore\t\t\t= vec2( 16.0, 0.0 ); \t// xy - pos, z - HP\nconst vec2 txBossCannon0\t\t= vec2( 17.0, 0.0 ); \t// xy - pos, z - cooldown, w - HP\nconst vec2 txBossCannon1\t\t= vec2( 17.0, 1.0 ); \t// xy - pos, z - cooldown, w - HP\nconst vec2 txBossBullet0\t\t= vec2( 18.0, 0.0 ); \t// xy - pos, zw - velocity\nconst vec2 txBossBullet1\t\t= vec2( 18.0, 1.0 ); \t// xy - pos, zw - velocity\nconst vec2 txGameState\t\t\t= vec2( 19.0, 0.0 ); \t// x - state, y - state tick\nconst vec2 txBridge\t\t\t\t= vec2( 20.0, 0.0 ); \t// x - draw start, y - explode tick\n\n#ifdef KONAMI_CODE\n\tconst float PLAYER_LIFE_NUM\t\t= 10.0;\n#else\n\tconst float PLAYER_LIFE_NUM\t\t= 3.0;\n#endif\n\n#ifdef SPEED_RUN\n\tconst float PLAYER_RUN_SPEED \t= 5.0;\n#else\n\tconst float PLAYER_RUN_SPEED \t= 1.0;\n#endif\n\nconst float MATH_PI \t\t\t\t= 3.14159265359;\nconst float NES_RES_X\t\t\t\t= 224.0;\nconst float NES_RES_Y \t\t\t\t= 192.0;\nconst float KEY_A    \t\t\t\t= 65.5 / 256.0;\nconst float KEY_Q    \t\t\t\t= 81.5 / 256.0;\nconst float KEY_S    \t\t\t\t= 83.5 / 256.0;\nconst float KEY_W    \t\t\t\t= 87.5 / 256.0;\nconst float KEY_LEFT  \t\t\t\t= 37.5 / 256.0;\nconst float KEY_UP    \t\t\t\t= 38.5 / 256.0;\nconst float KEY_RIGHT \t\t\t\t= 39.5 / 256.0;\nconst float KEY_DOWN  \t\t\t\t= 40.5 / 256.0;\nconst float STATE_RUN\t\t\t\t= 0.0;\nconst float STATE_PRONE \t\t\t= 1.0;\nconst float STATE_JUMP \t\t\t\t= 2.0;\nconst float STATE_FALL \t\t\t\t= 3.0;\nconst float STATE_WATER \t\t\t= 4.0;\nconst float STATE_UNDER_WATER \t\t= 5.0;\nconst float WEAPON_RIFLE\t\t\t= 0.0;\nconst float WEAPON_MACHINE_GUN\t\t= 1.0;\nconst float RIFLE_FIRE_RATE\t\t\t= 20.0;\nconst float RIFLE_BULLET_NUM\t\t= 4.0;\nconst float MACHINE_GUN_FIRE_RATE\t= 10.0;\nconst float MACHINE_GUN_BULLET_NUM\t= 6.0;\nconst float SNIPER_FIRE_RATE\t\t= 160.0;\nconst float TURRET_FIRE_RATE\t\t= 100.0;\nconst float PLAYER_SPAWN_HEIGHT\t\t= 200.0;\nconst float PLAYER_JUMP_HEIGHT\t\t= 16.0 * 3.0;\nconst float PLAYER_IMMORTALITY_LEN\t= 60.0 * 3.0;\nconst float PLAYER_RUN_ANIM_SPEED \t= 0.13;\nconst float PLAYER_JUMP_ANIM_SPEED\t= 0.13;\nconst float PLAYER_FALL_SPEED \t\t= 3.0;\nconst float PLAYER_BULLET_SPEED\t\t= 3.0;\nconst float PLAYER_HIT_BOX_SIZE_MUL\t= 0.7;\nconst float ENEMY_RUN_SPEED \t\t= 1.0;\nconst float ENEMY_BULLET_SPEED \t\t= 1.0;\nconst float ENEMY_ANIM_SPEED\t\t= 0.13;\nconst float SOLDIER_SPAWN_RATE\t\t= 180.0;\nconst float BOSS_CORE_HP\t\t\t= 32.0;\nconst float BOSS_CANNON_HP\t\t\t= 8.0;\nconst float BOSS_CANNON_FIRE_RATE\t= 120.0;\nconst float WATER_HEIGHT\t\t\t= 8.0;\nconst float WATER_END\t\t\t\t= 32.0 * 63.0;\nconst float BRIDGE_0_START_TILE\t\t= 30.0;\nconst float BRIDGE_0_END_TILE\t\t= 35.0;\nconst float BRIDGE_1_START_TILE\t\t= 40.0;\nconst float BRIDGE_1_END_TILE\t\t= 45.0;\nconst float BRIGDE_EXPLODE_TIME\t\t= 70.0;\nconst float CAMERA_END\t\t\t\t= 32.0 * 102.0;\nconst float PLAYER_END\t\t\t\t= 32.0 * 108.0 + 16.0;\nconst float SOLDIER_SPAWN_END\t\t= 32.0 * 99.0 - 32.0 * 2.0;\nconst vec2 \tBILL_PRONE_SIZE\t\t\t= vec2( 32.0, 18.0 );\nconst vec2 \tBILL_RUN_SIZE\t\t\t= vec2( 24.0, 34.0 );\nconst vec2 \tBILL_JUMP_SIZE\t\t\t= vec2( 20.0, 20.0 );\nconst vec2 \tSOLDIER_SIZE \t\t\t= vec2( 16.0, 32.0 );\nconst vec2 \tSNIPER_SIZE\t\t\t\t= vec2( 24.0, 32.0 );\nconst vec2 \tBULLET_SIZE\t\t\t\t= vec2( 3.0,  3.0  );\nconst vec2 \tPOWER_BULLET_SIZE\t\t= vec2( 5.0,  5.0  );\nconst vec2 \tTURRET_SIZE\t\t\t\t= vec2( 32.0, 32.0 );\nconst vec2 \tPOWER_UP_SIZE\t\t\t= vec2( 24.0, 14.0 );\nconst vec2 \tBOSS_CORE_SIZE\t\t\t= vec2( 24.0, 31.0 );\nconst vec2 \tBOSS_CANNON_SIZE\t\t= vec2( 14.0, 6.0 );\nconst float TURRET_HP\t\t\t\t= 8.0;\nconst float GAME_STATE_TITLE\t\t= 0.0;\nconst float GAME_STATE_LEVEL\t\t= 1.0;\nconst float GAME_STATE_LEVEL_DIE\t= 2.0;\nconst float GAME_STATE_LEVEL_WIN\t= 3.0;\nconst float GAME_STATE_GAME_OVER\t= 4.0;\nconst float GAME_STATE_VICTORY\t\t= 5.0;\nconst float UI_TITLE_TIME\t\t\t= 120.0;\nconst float UI_GAME_START_TIME\t\t= 60.0;\nconst float UI_VICTORY_TIME\t\t\t= 300.0;\n\nvec4 gPlayer;\nvec4 gPlayerState;\nvec4 gPlayerDir;\nvec4 gPlayerWeapon;\nvec4 gCamera;\nvec4 gSoldier0;\nvec4 gSoldier1;\nvec4 gSoldier2;\nvec4 gSoldier0State;\nvec4 gSoldier1State;\nvec4 gSoldier2State;\nvec4 gSniper;\nvec4 gPlayerBullet0;\nvec4 gPlayerBullet1;\nvec4 gPlayerBullet2;\nvec4 gPlayerBullet3;\nvec4 gPlayerBullet4;\nvec4 gPlayerBullet5;\nvec4 gEnemyBullet0;\nvec4 gEnemyBullet1;\nvec4 gEnemyBullet2;\nvec4 gEnemyBullet3;\nvec4 gExplosion;\nvec4 gHit;\nvec4 gTurret0;\nvec4 gTurret1;\nvec4 gTurret0State;\nvec4 gTurret1State;\nvec4 gPowerUp;\nvec4 gPowerUpState;\nvec4 gBossCore;\nvec4 gBossCannon0;\nvec4 gBossCannon1;\nvec4 gBossBullet0;\nvec4 gBossBullet1;\nvec4 gGameState;\nvec4 gBridge;\n\nfloat IsInside( vec2 p, vec2 c ) { vec2 d = abs(p-0.5-c) - 0.5; return -max(d.x,d.y); }\n\nfloat Rand()\n{\n    vec2 co = vec2( iTime, iTime );\n    return fract( sin( dot( co.xy, vec2( 12.9898, 78.233 ) ) ) * 43758.5453 );\n}\n\nvec4 LoadValue( vec2 tx )\n{\n    return texture( iChannel0, ( tx + 0.5 ) / iChannelResolution[ 0 ].xy );\n}\n\nvoid StoreValue( vec2 re, vec4 va, inout vec4 fragColor, vec2 fragCoord )\n{\n    fragCoord = floor( fragCoord );\n    fragColor = ( fragCoord.x == re.x && fragCoord.y == re.y ) ? va : fragColor;\n}\n\nbool Collide( vec2 p0, vec2 s0, vec2 p1, vec2 s1 )\n{\n    // pivot x in the middle, and y in the bottom\n    p0.x -= s0.x * 0.5;\n    p1.x -= s1.x * 0.5;\n    \n    return \t\tp0.x <= p1.x + s1.x\n        \t&& \tp0.y <= p1.y + s1.y\n        \t&& \tp1.x <= p0.x + s0.x\n        \t&& \tp1.y <= p0.y + s0.y;\n}\n\nfloat GetSupport( vec2 p )\n{\n    float tileX\t= floor( p.x / 32.0 );\n    float tileY\t= floor( p.y / 16.0 );\n    \n    bool grass0 = false;\n    bool grass2 = false;\n    bool grass3 = false;\n    bool grass4 = false;\n    bool grass6 = false;\n    bool grass8 = false;\n    \n\tif ( \t\t( tileX >= 52.0 && tileX < 67.0 ) \n\t\t\t|| \t( tileX >= 72.0 && tileX < 77.0 )   \n\t\t\t|| \t( tileX >= 86.0 && tileX < 88.0 ) )\n    {\n        grass8 = true;\n    }\n    \n\tif ( \t\t( tileX >= 3.0   && tileX < 30.0 ) \n        \t|| \t( tileX >= 35.0  && tileX < 40.0 ) \n        \t|| \t( tileX >= 45.0  && tileX < 53.0 ) \n        \t|| \t( tileX >= 66.0  && tileX < 73.0 )\n            || \t( tileX >= 78.0  && tileX < 80.0 )\n            || \t( tileX >= 85.0  && tileX < 87.0 )\n            || \t( tileX >= 89.0  && tileX < 91.0 )\n            ||  ( tileX >= 102.0 && tileX < 106.0 ) )\n    {\n        grass6 = true;\n    }\n    \n\tif ( \t\t( tileX >= 10.0 && tileX < 13.0 )\n\t\t\t||\t( tileX >= 18.0 && tileX < 20.0 )\n        \t|| \t( tileX >= 58.0 && tileX < 65.0 )\n\t\t\t|| \t( tileX >= 76.0 && tileX < 79.0 )\n            || \t( tileX >= 81.0 && tileX < 83.0 )\n            || \t( tileX >= 90.0 && tileX < 95.0 )\n            ||  ( tileX >= 100.0 && tileX < 102.0 )\n            || \t( tileX == 106.0 ) )\n    {\n        grass4 = true;\n    }\n    \n    if ( \t\t( tileX >= 26.0 && tileX < 29.0 )\n            ||  ( tileX >= 55.0 && tileX < 57.0 )\n            || \t( tileX == 74.0 )\n\t\t\t||  ( tileX == 87.0 )\n\t\t\t|| \t( tileX >= 103.0 && tileX < 106.0 ) )\n    {\n        grass3 = true;\n    }\n        \n\tif ( \t\t( tileX == 13.0 || tileX == 16.0 )\n            ||  ( tileX >= 68.0 && tileX < 70.0 )\n            ||  ( tileX >= 71.0 && tileX < 73.0 )\n            || \t( tileX >= 82.0 && tileX < 85.0 )\n            ||  ( tileX >= 97.0 && tileX < 99.0 )\n            || \t( tileX == 107.0 ) )\n    {\n        grass2 = true;\n    }\n        \n\tif ( \t\t( tileX >= 14.0 && tileX < 16.0 ) \n            || \t( tileX >= 24.0 && tileX < 26.0 ) \n            || \t( tileX >= 52.0 && tileX < 55.0 ) \n            || \t( tileX >= 62.0 && tileX < 68.0 )\n            || \t( tileX == 81.0 )\n\t\t\t||  ( tileX == 86.0 )\n            || \t( tileX >= 93.0 && tileX < 96.0 )\n            ||  ( tileX >= 102.0 ) )      \n\t{\n        grass0 = true;\n    }\n    \n\tif ( tileX >= BRIDGE_0_START_TILE && tileX < BRIDGE_0_END_TILE && gBridge.x < tileX )\n    {\n        grass6 = true;\n    }\n\n\tif ( tileX >= BRIDGE_1_START_TILE && tileX < BRIDGE_1_END_TILE && gBridge.x < tileX )\n    {\n        grass6 = true;\n    } \n    \n    float height = 8.0;\n    if ( grass0 )\n    {\n        height = 1.0 * 16.0;\n    }    \n    if ( grass2 && tileY >= 2.0 )\n    {\n        height = 3.0 * 16.0;\n    }\n    if ( grass3 && tileY >= 3.0 )\n    {\n        height = 4.0 * 16.0;\n    }    \n    if ( grass4 && tileY >= 4.0 )\n    {\n        height = 5.0 * 16.0;\n    }\n    if ( grass6 && tileY >= 6.0 )\n    {\n        height = 7.0 * 16.0;\n    } \n   \tif ( grass8 && tileY >= 8.0 )\n    {\n        height = 9.0 * 16.0;\n    }     \n    \n    return height - 4.0;\n}\n\nvoid SpawnSniper( float tileX, float tileY, float screenWidth )\n{\n    float spawnX = tileX * 32.0 - screenWidth;\n    if ( gCamera.x > spawnX && gCamera.y < spawnX )\n    {\n\t\tgSniper = vec4( tileX * 32.0, tileY * 32.0 + 12.0, 0.0, 0.0 );\n        gCamera.y = spawnX;\n    }\n}\n\nvoid SpawnTurret( float tileX, float tileY, float screenWidth )\n{\n    float spawnX = tileX * 32.0 - screenWidth;\n    if ( gCamera.x >= spawnX && gCamera.y < spawnX )\n    {\n        if ( gTurret0.x == 0.0 || ( gTurret1.x > 0.0 && gTurret0.x < gTurret1.x ) )\n        {\n\t\t\tgTurret0 \t\t= vec4( tileX * 32.0 + 16.0, tileY * 32.0, 0.0, 0.0 );\n        \tgTurret0State\t= vec4( TURRET_HP, 0.0, 0.0, 0.0 );\n        }\n        else\n        {\n\t\t\tgTurret1 \t\t= vec4( tileX * 32.0 + 16.0, tileY * 32.0, 0.0, 0.0 );\n        \tgTurret1State\t= vec4( TURRET_HP, 0.0, 0.0, 0.0 );\n        }\n\n        gCamera.y = spawnX;\n    }\n}\n\nvoid SpawnPowerUp( float tileX, float screenWidth )\n{\n    float spawnX = tileX * 32.0 - screenWidth;\n    if ( gCamera.x > spawnX && gCamera.y < spawnX )\n    {\n    \tgPowerUp \t\t= vec4( spawnX, 150.0, 0.0, 0.0 );\n        gPowerUpState\t= vec4( STATE_RUN, 150.0, 0.0, 0.0 );  \n        gCamera.y = spawnX;\n    }\n}\n\nvoid UpdateSpawner( float screenWidth )\n{\n    SpawnSniper( 15.0, 0.0, screenWidth );\n    SpawnPowerUp( 23.0, screenWidth );    \n    SpawnSniper( 25.0, 0.0, screenWidth );\n    SpawnTurret( 47.0, 2.0, screenWidth );\n    SpawnSniper( 48.0, 3.0, screenWidth );\n    SpawnSniper( 56.0, 4.0, screenWidth );\n    SpawnPowerUp( 55.0, screenWidth ); \n    SpawnTurret( 59.0, 3.0, screenWidth );\n    SpawnTurret( 65.0, 3.0, screenWidth );\n    SpawnTurret( 72.0, 2.0, screenWidth );\n    SpawnTurret( 76.0, 5.0, screenWidth );\n    SpawnSniper( 82.0, 2.0, screenWidth );\n    SpawnPowerUp( 89.0, screenWidth );    \n    SpawnTurret( 94.0, 3.0, screenWidth );\n    SpawnTurret( 101.0, 1.0, screenWidth );\n    SpawnTurret( 105.0, 1.0, screenWidth );\n    SpawnSniper( 109.8, 4.875, screenWidth );\n\n    if ( gCamera.z == 0.0 && Rand() > 0.5 )\n    {\n        gCamera.z = SOLDIER_SPAWN_RATE - 20.0;\n    }\n\n    ++gCamera.z;\n    vec4 newSoldier \t\t= vec4( gCamera.x + screenWidth, 300.0, -1.0, 0.0 );\n    vec4 newSoldierState \t= vec4( 0.0, 0.0, 0.0, 0.0 );\n\tnewSoldier.y = GetSupport( newSoldier.xy );    \n    if ( gCamera.x < SOLDIER_SPAWN_END && gCamera.z > SOLDIER_SPAWN_RATE && newSoldier.y > WATER_HEIGHT )\n    {\n        gCamera.z = 0.0;\n        \n        if ( gSoldier0.x <= 0.0 )\n        {\n            gSoldier0 \t\t= newSoldier;\n            gSoldier0State \t= newSoldierState;\n        }\n\t\telse if ( gSoldier1.x <= 0.0 )\n        {\n            gSoldier1 \t\t= newSoldier;\n            gSoldier1State \t= newSoldierState;\n        }\n\t\telse if ( gSoldier2.x <= 0.0 )\n        {\n            gSoldier2 \t\t= newSoldier;\n            gSoldier2State \t= newSoldierState;\n        }        \n    }\n}\n\nvoid SpawnEnemyBullet( vec2 pos, vec2 dir )\n{\n    if ( gEnemyBullet0.x <= 0.0 )\n    {\n\t\tgEnemyBullet0 = vec4( pos, dir );\n    }\n    else if ( gEnemyBullet1.x <= 0.0 )\n    {\n        gEnemyBullet1 = vec4( pos, dir );\n    }\n    else if ( gEnemyBullet2.x <= 0.0 )\n    {\n        gEnemyBullet2 = vec4( pos, dir );\n    }\n    else if ( gEnemyBullet3.x <= 0.0 )\n    {\n        gEnemyBullet3 = vec4( pos, dir );\n    }    \n}\n\nvoid UpdateSniper( inout vec4 sniper, vec2 playerTarget )\n{\n    if ( sniper.x + SNIPER_SIZE.x * 0.5 < gCamera.x )\n    {\n        sniper.x = 0.0;\n    }  \n    \n    ++sniper.w;\n\tif ( sniper.x > 0.0 && sniper.w > SNIPER_FIRE_RATE )\n    {\n        sniper.w = 0.0;\n        vec2 pos = sniper.xy + vec2( 0.0, 24.0 );\n        SpawnEnemyBullet( pos, normalize( playerTarget - pos ) );\n    }\n    sniper.z = playerTarget.x > sniper.x ? 1.0 : -1.0;    \n}\n\nvoid UpdateTurret( inout vec4 turret, inout vec4 turretState, vec2 playerTarget )\n{\n    if ( turret.x + TURRET_SIZE.x * 0.5 < gCamera.x )\n    {\n        turret.x = 0.0;\n    }    \n    \n\tvec2 turretAim = normalize( playerTarget - turret.xy );\n\n    // constrain barrel to one of the 12 possible rotations\n    float turretAimAngle = atan( -turretAim.y, turretAim.x );    \n    turretAimAngle = turretAimAngle / ( 2.0 * MATH_PI );\n    turretAimAngle = floor( turretAimAngle * 12.0 + 0.5 );\n    turret.z = mod( turretAimAngle + 6.0, 12.0 );\n    turretAimAngle = turretAimAngle * 2.0 * MATH_PI / 12.0;\n    turretAim = vec2( cos( turretAimAngle ), -sin( turretAimAngle ) );\n    \n    ++turretState.y;\n\tif ( turret.x > 0.0 && turretState.y > TURRET_FIRE_RATE )\n    {\n        turretState.y = 0.0;\n\t\tSpawnEnemyBullet( turret.xy, turretAim );\n    }\n}\n\nvoid UpdateBossCannon( inout vec4 bossCannon )\n{\n    float accX \t\t= -fract( iTime * 1.069 + bossCannon.x * 7.919 ) * 5.0;\n    vec4 newBullet\t= vec4( bossCannon.xy - vec2( BOSS_CANNON_SIZE.x * 0.5, 0.0), accX, 0.0 );\n    \n    ++bossCannon.z;\n    if ( bossCannon.z > BOSS_CANNON_FIRE_RATE )\n    {\n        bossCannon.z = 0.0;\n        if ( gBossBullet0.x <= 0.0 )\n        {\n            gBossBullet0 = newBullet;\n        }\n        else if ( gBossBullet1.x <= 0.0 )\n        {\n            gBossBullet1 = newBullet;\n        }\n    }\n}\n\nvoid PlayerBulletSoldierTest( inout vec4 playerBullet, inout vec4 soldier )\n{\n    if ( playerBullet.x > 0.0 && Collide( playerBullet.xy, BULLET_SIZE, soldier.xy, SOLDIER_SIZE ) )\n    {\n        gExplosion \t\t= vec4( soldier.xy + vec2( 0.0, SOLDIER_SIZE.y * 0.5 ), 0.0, 0.0 );\n        gHit\t\t \t= vec4( playerBullet.xy, 0.0, 0.0 );\n\t\tsoldier.x \t\t= 0.0;\n        playerBullet.x \t= 0.0;\n    }\n}\n\nvoid PlayerBulletSniperTest( inout vec4 playerBullet, inout vec4 sniper )\n{\n\tif ( playerBullet.x > 0.0 && Collide( playerBullet.xy, BULLET_SIZE, sniper.xy, SNIPER_SIZE ) )\n    {\n        gExplosion\t\t= vec4( sniper.xy + vec2( 0.0, SNIPER_SIZE.y * 0.5 ), 0.0, 0.0 );\n        gHit\t\t  \t= vec4( playerBullet.xy, 0.0, 0.0 );\n\t\tsniper.x\t\t= 0.0;\n        playerBullet.x \t= 0.0;\n    }\n}\n\nvoid PlayerBulletTurretTest( inout vec4 playerBullet, inout vec4 turret, inout vec4 turretState )\n{\n\tif ( playerBullet.x > 0.0 && Collide( playerBullet.xy, BULLET_SIZE, turret.xy + vec2( 0.0, -TURRET_SIZE.y * 0.5 ), TURRET_SIZE ) )\n    {\n        gHit\t\t\t= vec4( playerBullet.xy, 0.0, 0.0 );\n        playerBullet.x \t= 0.0;\n        \n        --turretState.x;        \n        if ( turretState.x <= 0.0 )\n        {\n\t\t\tgExplosion = vec4( turret.xy, 0.0, 0.0 );\n        \tturret.x = 0.0;\n        }\n    }\n}\n\nvoid PlayerBulletPowerUpTest( inout vec4 playerBullet )\n{\n\tif ( playerBullet.x > 0.0 && gPowerUpState.x == STATE_RUN && Collide( playerBullet.xy, BULLET_SIZE, gPowerUp.xy, POWER_UP_SIZE ) )\n    {\n\t\tgHit\t\t\t= vec4( playerBullet.xy, 0.0, 0.0 );\n        gExplosion \t\t= vec4( gPowerUp.xy + vec2( 0.0, POWER_UP_SIZE.y * 0.5 ), 0.0, 0.0 );        \n        playerBullet.x \t= 0.0;\n        gPowerUpState.x = STATE_JUMP;\n        gPowerUp.z\t\t= 1.0;\n    }\n}\n\nvoid PlayerBulletBossCoreTest( inout vec4 playerBullet )\n{\n\tif ( playerBullet.x > 0.0 && Collide( playerBullet.xy, BULLET_SIZE, gBossCore.xy + vec2( 0.0, BOSS_CORE_SIZE.y * 0.25 ), BOSS_CORE_SIZE * 0.5 ) )\n    {\n\t\tgHit\t\t\t= vec4( playerBullet.xy, 0.0, 0.0 );\n        playerBullet.x \t= 0.0;\n\t\t--gBossCore.z;\n        if ( gBossCore.z < 0.0 )\n        {\n            gExplosion \t\t= vec4( gBossCore.xy + vec2( 0.0, BOSS_CORE_SIZE.y * 0.5 ), 0.0, 0.0 );\n            gBossCore.x \t= 0.0;\n            gGameState.x \t= GAME_STATE_LEVEL_WIN;\n\t\t\tgGameState.y \t= 0.0;\n        }\n    }\n}\n\nvoid PlayerBulletBossCannonTest( inout vec4 playerBullet, inout vec4 bossCannon )\n{\n\tif ( playerBullet.x > 0.0 && Collide( playerBullet.xy, BULLET_SIZE, bossCannon.xy, BOSS_CANNON_SIZE ) )\n    {\n\t\tgHit\t\t\t= vec4( playerBullet.xy, 0.0, 0.0 );\n        playerBullet.x \t= 0.0;\n\t\t--bossCannon.w;\n        if ( bossCannon.w < 0.0 )\n        {\n            gExplosion \t\t= vec4( bossCannon.xy + vec2( 0.0, BOSS_CANNON_SIZE.y * 0.5 ), 0.0, 0.0 );\n            bossCannon.x \t= 0.0;\n        }\n    }\n}\n\nvoid UpdatePlayerBullet( inout vec4 playerBullet, float screenWidth, float screenHeight )\n{\n    if ( !Collide( playerBullet.xy, BULLET_SIZE, vec2( gCamera.x + screenWidth * 0.5, 0.0 ), vec2( screenWidth, screenHeight ) ) )\n    {\n        playerBullet.x = 0.0;\n    }\n    if ( playerBullet.x > 0.0 )\n    {\n    \tplayerBullet.xy += playerBullet.zw * PLAYER_BULLET_SPEED;\n    }\n}\n\nvoid PlayerHit( vec4 playerHitBox )\n{\n#ifndef GOD_MODE\n    if ( gGameState.x == GAME_STATE_LEVEL && gGameState.y > UI_GAME_START_TIME )\n    {\n        gPlayerState.x \t= STATE_JUMP;\n        gPlayerState.y \t= 0.0;        \n        gPlayerState.z \t= 1.0;\n        gPlayerState.w -= 1.0;    \n        gExplosion \t\t= vec4( gPlayer.xy + vec2( 0.0, playerHitBox.z * 0.5 ), 0.0, 0.0 );\n        gPlayer \t\t= vec4( gCamera.x + 32.0 * 2.0 + 24.0, PLAYER_SPAWN_HEIGHT, PLAYER_SPAWN_HEIGHT, 0.0 );\n        gPlayerDir\t\t= vec4( 1.0, 0.0, 0.0, PLAYER_IMMORTALITY_LEN );\n        gPlayerWeapon \t= vec4( WEAPON_RIFLE, 0.0, RIFLE_FIRE_RATE, RIFLE_BULLET_NUM );\n\n        if ( gPlayerState.w <= 0.0 )\n        {\n            gGameState.x \t= GAME_STATE_LEVEL_DIE;\n            gGameState.y \t= 0.0;\n            gPlayer\t\t\t= vec4( 0.0, 1000000.0, 0.0, 0.0 );\n            gPlayerState.x \t= STATE_FALL;\n        }\n    }\n#endif\n}\n\nvoid UpdateEnemyBullet( inout vec4 enemyBullet, vec4 playerHitBox, float screenWidth, float screenHeight )\n{\n    if ( !Collide( enemyBullet.xy, BULLET_SIZE, vec2( gCamera.x + screenWidth * 0.5, 0.0 ), vec2( screenWidth, screenHeight ) ) )\n    {\n        enemyBullet.x = 0.0;\n    }\n    \n\tif ( enemyBullet.x > 0.0 )\n    {\n    \tenemyBullet.xy += enemyBullet.zw * ENEMY_BULLET_SPEED;\n    }\n   \n\tif ( Collide( playerHitBox.xy, playerHitBox.zw, enemyBullet.xy, BULLET_SIZE ) )\n    {\n        PlayerHit( playerHitBox );\n        enemyBullet.x = 0.0;\n    }        \n}\n\nvoid UpdateBossBullet( inout vec4 bossBullet, vec4 playerHitBox, float screenWidth, float screenHeight )\n{\n    if ( !Collide( bossBullet.xy, POWER_BULLET_SIZE, vec2( gCamera.x + screenWidth * 0.5, 0.0 ), vec2( screenWidth, screenHeight ) ) )\n    {\n        bossBullet.x = 0.0;\n    }\n    \n\tif ( bossBullet.x > 0.0 )\n    {\n        bossBullet.xy += bossBullet.zw;\n        bossBullet.w -= 1.0 / 10.0;\n    }\n   \n\tif ( Collide( playerHitBox.xy, playerHitBox.zw, bossBullet.xy, POWER_BULLET_SIZE ) )\n    {\n        PlayerHit( playerHitBox );\n        bossBullet.x = 0.0;\n    }        \n}\n\nvoid UpdateSoldier( inout vec4 soldier, inout vec4 soldierState, vec4 playerHitBox, float screenWidth, float screenHeight )\n{\n    float soldierSupport = GetSupport( soldier.xy );    \n    if ( soldierState.x == STATE_RUN )\n    {\n\t\tsoldierState.y = mod( soldierState.y + ENEMY_ANIM_SPEED, 2.0 );        \n        \n        if ( soldier.y != soldierSupport )\n        {\n            // lost support - either jump or go back\n            if ( Rand() > 0.3 )\n            {\n            \tsoldierState.x = STATE_JUMP;\n            \tsoldierState.y = 1.0;\n            \tsoldierState.z = 0.0;\n\t\t\t}\n            else\n            {\n            \tsoldier.z = -soldier.z;\n            }\n        }\n    }\n    else if ( soldierState.x == STATE_JUMP )\n    {\n\t\tsoldierState.z += 1.0 / 20.0;\n        soldier.y += 3.0 * ( 1.0 - soldierState.z );\n        if ( soldierState.z > 1.0 && soldier.y <= soldierSupport )\n        {\n            soldier.y = soldierSupport;\n            soldierState.x = STATE_RUN;\n        }\n    }\n\tsoldier.x += soldier.z * ENEMY_RUN_SPEED;\n\n    if ( soldier.x > gCamera.x + screenWidth || soldier.x < gCamera.x )\n    {\n    \tsoldier.x = -1.0;        \n    }\n\n    // soldier death\n    if ( soldier.x > 0.0 && soldier.y < WATER_HEIGHT )   \n    {\n        gExplosion \t= vec4( soldier.xy + vec2( 0.0, SOLDIER_SIZE.y * 0.5 ), 0.0, 0.0 );\n\t\tsoldier \t= vec4( 0.0, 0.0, 0.0, 0.0 );\n    }\n    \n\tif ( soldier.x > 0.0 && Collide( playerHitBox.xy, playerHitBox.zw, soldier.xy, SOLDIER_SIZE ) )\n    {\n        PlayerHit( playerHitBox );\n    }    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // don't compute gameplay outside of the data area\n    if ( fragCoord.x > 32.0 || fragCoord.y > 32.0 ) \n    {\n        discard;    \n    }\n\n    float resMultX  \t= floor( iResolution.x / NES_RES_X );\n    float resMultY  \t= floor( iResolution.y / NES_RES_Y );\n    float resRcp\t\t= 1.0 / max( min( resMultX, resMultY ), 1.0 );\n    float screenWidth\t= floor( iResolution.x * resRcp );\n    float screenHeight\t= floor( iResolution.y * resRcp );\n    \n    // keys\n    bool keyLeft  \t= texture( iChannel1, vec2( KEY_LEFT, 0.25 ) ).x > 0.5;\n    bool keyRight \t= texture( iChannel1, vec2( KEY_RIGHT, 0.25 ) ).x > 0.5;\n    bool keyUp  \t= texture( iChannel1, vec2( KEY_UP, 0.25 ) ).x > 0.5;\n    bool keyDown \t= texture( iChannel1, vec2( KEY_DOWN, 0.25 ) ).x > 0.5;    \n    bool keyShoot\t= texture( iChannel1, vec2( KEY_A, 0.25 ) ).x > 0.5 || texture( iChannel1, vec2( KEY_Q, 0.25 ) ).x > 0.5;\n    bool keyJump \t= texture( iChannel1, vec2( KEY_S, 0.25 ) ).x > 0.5 || texture( iChannel1, vec2( KEY_W, 0.25 ) ).x > 0.5;\n    \n\tgPlayer        \t= LoadValue( txPlayer );\n\tgPlayerState   \t= LoadValue( txPlayerState );\n\tgPlayerDir    \t= LoadValue( txPlayerDir );\n    gPlayerWeapon  \t= LoadValue( txPlayerWeapon );\n\tgCamera       \t= LoadValue( txCamera );\n\tgSoldier0     \t= LoadValue( txSoldier0 );\n    gSoldier1      \t= LoadValue( txSoldier1 );\n    gSoldier2      \t= LoadValue( txSoldier2 );\n\tgSoldier0State \t= LoadValue( txSoldier0State );\n    gSoldier1State \t= LoadValue( txSoldier1State );\n    gSoldier2State \t= LoadValue( txSoldier2State );\n\tgSniper        \t= LoadValue( txSniper );\n\tgPlayerBullet0 \t= LoadValue( txPlayerBullet0 );\n    gPlayerBullet1 \t= LoadValue( txPlayerBullet1 );\n    gPlayerBullet2 \t= LoadValue( txPlayerBullet2 );\n\tgPlayerBullet3 \t= LoadValue( txPlayerBullet3 );\n    gPlayerBullet4 \t= LoadValue( txPlayerBullet4 );\n    gPlayerBullet5 \t= LoadValue( txPlayerBullet5 );    \n\tgEnemyBullet0  \t= LoadValue( txEnemyBullet0 );\n\tgEnemyBullet1  \t= LoadValue( txEnemyBullet1 );\n    gEnemyBullet2  \t= LoadValue( txEnemyBullet2 );\n    gEnemyBullet3  \t= LoadValue( txEnemyBullet3 );\n\tgExplosion     \t= LoadValue( txExplosion );\n\tgHit           \t= LoadValue( txHit );\n\tgTurret0       \t= LoadValue( txTurret0 );\n\tgTurret1       \t= LoadValue( txTurret1 );\n\tgTurret0State   = LoadValue( txTurret0State );\n\tgTurret1State   = LoadValue( txTurret1State );    \n    gPowerUp\t\t= LoadValue( txPowerUp );\n    gPowerUpState\t= LoadValue( txPowerUpState );\n    gBossCore\t\t= LoadValue( txBossCore );\n    gBossCannon0\t= LoadValue( txBossCannon0 );\n    gBossCannon1\t= LoadValue( txBossCannon1 );\n    gBossBullet0\t= LoadValue( txBossBullet0 );\n    gBossBullet1\t= LoadValue( txBossBullet1 );\n    gGameState\t\t= LoadValue( txGameState );\n    gBridge\t\t\t= LoadValue( txBridge );\n\n    // game state machine\n    ++gGameState.y;    \n    if ( gGameState.x == GAME_STATE_TITLE )\n    {\n        if ( gGameState.y > UI_TITLE_TIME )\n        {\n            gGameState.x = GAME_STATE_LEVEL;\n            gGameState.y = 0.0;\n        }\n    }\n    else if ( gGameState.x == GAME_STATE_LEVEL )\n    {\n\t\tif ( gGameState.y <= UI_GAME_START_TIME )\n    \t{\n        \tgCamera \t\t= vec4( 32.0, -100.0, 0.0, 0.0 );\n\t\t\tgPlayer \t\t= vec4( gCamera.x + 32.0 * 2.0 + 24.0, PLAYER_SPAWN_HEIGHT, PLAYER_SPAWN_HEIGHT, 0.0 );\n    \t\tgPlayerState.x \t= STATE_JUMP;\n        \tgPlayerState.y \t= 0.0;        \n        \tgPlayerState.z \t= 1.0;\n        \tgPlayerState.w \t= PLAYER_LIFE_NUM;\n        \tgPlayerWeapon \t= vec4( WEAPON_RIFLE, 0.0, RIFLE_FIRE_RATE, RIFLE_BULLET_NUM );\n        \tgBossCore\t\t= vec4( 32.0 * 108.0 + 23.0 + 12.0, 34.0, BOSS_CORE_HP, 0.0 );\n            gBossCannon0\t= vec4( 3478.0, 92.0, 0.0, BOSS_CANNON_HP );\n            gBossCannon1\t= gBossCannon0 + vec4( 22.0, 0.0, 0.0, 0.0 );\n            gSoldier0\t\t= vec4( 0.0, 0.0, 0.0, 0.0 );\n            gSoldier1\t\t= vec4( 0.0, 0.0, 0.0, 0.0 );\n            gSoldier2\t\t= vec4( 0.0, 0.0, 0.0, 0.0 );\n            gBridge\t\t\t= vec4( 0.0, 0.0, 0.0, 0.0 );\n            gPowerUp\t\t= vec4( 0.0, 0.0, 0.0, 0.0 );\n            gTurret0\t\t= vec4( 0.0, 0.0, 0.0, 0.0 );\n            gTurret1\t\t= vec4( 0.0, 0.0, 0.0, 0.0 );\n    \t}\n    }\n    else if ( gGameState.x == GAME_STATE_LEVEL_DIE )\n    {\n        if ( gGameState.y > UI_TITLE_TIME )\n        {\n            gGameState.x = GAME_STATE_GAME_OVER;\n            gGameState.y = 0.0;\n        }\n    }    \n    else if ( gGameState.x == GAME_STATE_LEVEL_WIN )\n    {\n        if ( gGameState.y > UI_TITLE_TIME )\n        {\n            gGameState.x = GAME_STATE_VICTORY;\n            gGameState.y = 0.0;\n        }\n    }\n    else if ( gGameState.x == GAME_STATE_VICTORY )\n    {\n        if ( gGameState.y > UI_VICTORY_TIME )\n        {\n            gGameState.x = GAME_STATE_TITLE;\n            gGameState.y = 0.0;\n        }\n    } \n\tif ( gGameState.x == GAME_STATE_GAME_OVER )\n    {\n\t\tif ( gGameState.y > UI_TITLE_TIME )\n        {\n            gGameState.x = GAME_STATE_TITLE;\n            gGameState.y = 0.0;\n        }\n    }\n\n \n\tUpdateSpawner( screenWidth );\n        \n    // player state machine\n\tfloat playerSupport = GetSupport( gPlayer.xy );\n    if ( gPlayerState.x == STATE_RUN )\n    {\n        if ( keyJump )\n    \t{\n            gPlayer.z\t\t= gPlayer.y;\n            gPlayer.w\t\t= 0.0;\n\t        gPlayerState.x \t= STATE_JUMP;\n            gPlayerState.y \t= 0.0;\n\t\t\tgPlayerState.z \t= 0.0;\n    \t}\n        else if ( keyRight || keyLeft )\n        {\n    \t\tgPlayerState.y = mod( gPlayerState.y + PLAYER_RUN_ANIM_SPEED, 3.0 );\n        }        \n        else\n        {\n            if ( keyDown )\n            {\n                gPlayerState.x = STATE_PRONE;\n            }\n            gPlayerState.y = 0.0;\n        }\n\n        if ( gPlayer.y != playerSupport )\n        {\n\t\t\tgPlayerState.x = STATE_FALL;\n        }\n        if ( gPlayer.y <= WATER_HEIGHT )\n        {\n            if ( gPlayer.x < WATER_END )\n            {\n            \tgPlayerState.x = STATE_WATER;\n            }\n            else\n            {\n                PlayerHit( vec4( gPlayer.xy, BILL_PRONE_SIZE ) );\n            }\n        }\n    }        \n    else if ( gPlayerState.x == STATE_PRONE )\n    {\n        if ( !keyDown || keyRight || keyLeft )\n        {\n            gPlayerState.x = STATE_RUN;\n        }\n        else if ( keyJump )\n    \t{\n     \t\tgPlayerState.x = STATE_FALL;\n        \tgPlayer.y -= PLAYER_FALL_SPEED + 20.0;\n\t\t}        \n    }\n    else if ( gPlayerState.x == STATE_JUMP )\n    {\n        if ( keyRight )\n        {\n            gPlayer.w = 1.0;\n        }\n        else if ( keyLeft )\n        {\n            gPlayer.w = -1.0;\n        }\n        \n        gPlayerState.y = mod( gPlayerState.y + PLAYER_JUMP_ANIM_SPEED, 2.0 );\n\t\tgPlayerState.z += 1.0 / 30.0;\n        gPlayer.x += gPlayer.w * PLAYER_RUN_SPEED;\n        gPlayer.y += 4.5 * ( 1.0 - gPlayerState.z );\n        if ( gPlayerState.z > 1.0 && gPlayer.y <= playerSupport && gPlayer.y - gPlayer.z < PLAYER_JUMP_HEIGHT )\n        {\n            gPlayer.y = playerSupport;\n            gPlayerState.x = STATE_RUN;\n        }\n    }\n    else if ( gPlayerState.x == STATE_FALL )\n    {\n        if ( gPlayer.y <= playerSupport )\n        {\n            gPlayer.y = playerSupport;\n            gPlayerState.x = STATE_RUN;\n        }\n        else\n        {\n            gPlayer.y -= PLAYER_FALL_SPEED;\n        }\n    }    \n    else if ( gPlayerState.x == STATE_WATER )\n    {\n        if ( keyDown )\n        {\n\t\t\tgPlayerState.x = STATE_UNDER_WATER;\n        }\n        \n\t\tif ( playerSupport > WATER_HEIGHT )\n        {\n            gPlayerState.x \t= STATE_RUN;\n            gPlayer.y\t\t= playerSupport;\n        }\n    }\n    else if ( gPlayerState.x == STATE_UNDER_WATER )\n    {\n        if ( !keyDown )\n        {\n        \tgPlayerState.x = STATE_WATER;\n        }\n    }\n    \n    // importality tick\n    --gPlayerDir.w;\n    \n    // look dir\n    vec2 newDir;\n    gPlayerDir.x = keyRight ? 1.0 : ( keyLeft ? -1.0 : 0.0 );\n\tgPlayerDir.y = keyUp \t? 1.0 : ( keyDown ? -1.0 : 0.0 );\n    if ( ( gPlayerDir.x == 0.0 && gPlayerDir.y == 0.0 ) || gPlayerState.x == STATE_PRONE )\n    {\n        gPlayerDir.xy = gPlayerDir.z < 0.0 ? vec2( -1.0, 0.0 ) : vec2( 1.0, 0.0 );\n    }\n    \n    // flip\n    if ( keyRight && gPlayerState.x != STATE_UNDER_WATER )\n    {\n        gPlayerDir.z = 1.0;\n    }\n    else if ( keyLeft && gPlayerState.x != STATE_UNDER_WATER )\n    {\n        gPlayerDir.z = -1.0;\n    }    \n    \n    // move\n    if ( gPlayerState.x != STATE_PRONE && gPlayerState.x != STATE_UNDER_WATER && gPlayerState.x != STATE_JUMP )\n    {\n        if ( keyLeft )\n        {\n            gPlayer.x -= PLAYER_RUN_SPEED;\n        }\n        else if ( keyRight )\n        {\n            gPlayer.x += PLAYER_RUN_SPEED;\n        }\n    }\n    \n\n    // clamp player to edge of the screen\n    gPlayer.x = clamp( gPlayer.x, gCamera.x, PLAYER_END );\n    \n    // scroll camera\n   \tif ( gPlayer.x - screenWidth * 0.5 + 24.0 > gCamera.x )\n    {\n        gCamera.x = min( gPlayer.x - screenWidth * 0.5 + 24.0, CAMERA_END );\n    }\n        \n    \n    // player size and center\n    vec4 playerHitBox \t\t= vec4( 0.0, 0.0, BILL_RUN_SIZE );\n    vec2 playerWeaponOffset = gPlayerDir.y == 1.0 && gPlayerDir.x != 0.0 ? vec2( 6.0, 30.0 ) : ( gPlayerDir.y == 1.0 ? vec2( -2.0, 40.0 ) : ( gPlayerDir.y == -1.0 ? vec2( 7.0, 14.0 ) : vec2( 10.0, 19.0 ) ) );    \n    if ( gPlayerState.x == STATE_PRONE )\n    {\n        playerHitBox.zw\t\t= BILL_PRONE_SIZE;\n        playerWeaponOffset \t= vec2( 14.0, 7.0 );\n    }\n    else if ( gPlayerState.x == STATE_JUMP )\n    {    \n        playerHitBox.zw \t= BILL_JUMP_SIZE;\n        playerWeaponOffset \t= vec2( 0.0, BILL_JUMP_SIZE.y * 0.5 );\n    }\n    else if ( gPlayerState.x == STATE_WATER )\n    {\n        playerWeaponOffset.y -= 12.0;\n    }\n\n    playerHitBox.x = gPlayer.x;\n    playerHitBox.y = floor( gPlayer.y + playerHitBox.w * 0.5 * ( 1.0 - PLAYER_HIT_BOX_SIZE_MUL ) + 0.5 );\n    playerHitBox.zw *= PLAYER_HIT_BOX_SIZE_MUL;\n\n    if ( gPlayerDir.w > 0.0 || gPlayerState.x == STATE_UNDER_WATER )\n    {\n    \t// player is immortal        \n        playerHitBox = vec4( -1000000.0 );\n    }\n\n    playerWeaponOffset.x = gPlayerDir.z < 0.0 ? -playerWeaponOffset.x : playerWeaponOffset.x;\n    vec2 playerWeapon = gPlayer.xy + playerWeaponOffset;\n    vec2 playerTarget = gPlayer.xy + vec2( 0.0, BILL_RUN_SIZE.y * 0.5 );\n    \n    // player shooting\n    ++gPlayerWeapon.y;\n    float playerBulletNum = \tfloat( gPlayerBullet0.x > 0.0 ) \n        \t\t\t\t\t+ \tfloat( gPlayerBullet1.x > 0.0 )\n    \t\t\t\t\t\t+ \tfloat( gPlayerBullet2.x > 0.0 )\n    \t\t\t\t\t\t+ \tfloat( gPlayerBullet3.x > 0.0 )\n    \t\t\t\t\t\t+ \tfloat( gPlayerBullet4.x > 0.0 )\n    \t\t\t\t\t\t+ \tfloat( gPlayerBullet5.x > 0.0 );\n\n    if ( keyShoot && gPlayerWeapon.y > gPlayerWeapon.z && playerBulletNum < gPlayerWeapon.w && gPlayerState.x != STATE_UNDER_WATER )\n    {\n        gPlayerWeapon.y = 0.0;\n        if ( gPlayerBullet0.x <= 0.0 )\n        {\n        \tgPlayerBullet0.xy = playerWeapon;\n            gPlayerBullet0.zw = normalize( gPlayerDir.xy );\n        }\n        else if ( gPlayerBullet1.x <= 0.0 )\n        {\n        \tgPlayerBullet1.xy = playerWeapon;\n            gPlayerBullet1.zw = normalize( gPlayerDir.xy );\n        }\n        else if ( gPlayerBullet2.x <= 0.0 )\n        {\n        \tgPlayerBullet2.xy = playerWeapon;\n            gPlayerBullet2.zw = normalize( gPlayerDir.xy );\n        }     \n        else if ( gPlayerBullet3.x <= 0.0 )\n        {\n        \tgPlayerBullet3.xy = playerWeapon;\n            gPlayerBullet3.zw = normalize( gPlayerDir.xy );\n        }\n        else if ( gPlayerBullet4.x <= 0.0 )\n        {\n        \tgPlayerBullet4.xy = playerWeapon;\n            gPlayerBullet4.zw = normalize( gPlayerDir.xy );\n        }  \n        else if ( gPlayerBullet5.x <= 0.0 )\n        {\n        \tgPlayerBullet5.xy = playerWeapon;\n            gPlayerBullet5.zw = normalize( gPlayerDir.xy );\n        }          \n    }\n    \n    UpdatePlayerBullet( gPlayerBullet0, screenWidth, screenHeight );\n    UpdatePlayerBullet( gPlayerBullet1, screenWidth, screenHeight );\n    UpdatePlayerBullet( gPlayerBullet2, screenWidth, screenHeight );\n    UpdatePlayerBullet( gPlayerBullet3, screenWidth, screenHeight );\n    UpdatePlayerBullet( gPlayerBullet4, screenWidth, screenHeight );\n    UpdatePlayerBullet( gPlayerBullet5, screenWidth, screenHeight );    \n    UpdateEnemyBullet( gEnemyBullet0, playerHitBox, screenWidth, screenHeight );\n    UpdateEnemyBullet( gEnemyBullet1, playerHitBox, screenWidth, screenHeight );\n    UpdateEnemyBullet( gEnemyBullet2, playerHitBox, screenWidth, screenHeight );\n    UpdateEnemyBullet( gEnemyBullet3, playerHitBox, screenWidth, screenHeight );\n    UpdateBossBullet( gBossBullet0, playerHitBox, screenWidth, screenHeight );\n    UpdateBossBullet( gBossBullet1, playerHitBox, screenWidth, screenHeight );\n    UpdateSoldier( gSoldier0, gSoldier0State, playerHitBox, screenWidth, screenHeight );\n    UpdateSoldier( gSoldier1, gSoldier1State, playerHitBox, screenWidth, screenHeight );\n    UpdateSoldier( gSoldier2, gSoldier2State, playerHitBox, screenWidth, screenHeight );\n\n    PlayerBulletSoldierTest( gPlayerBullet0, gSoldier0 );\n    PlayerBulletSoldierTest( gPlayerBullet1, gSoldier0 );\n    PlayerBulletSoldierTest( gPlayerBullet2, gSoldier0 );\n    PlayerBulletSoldierTest( gPlayerBullet3, gSoldier0 );\n    PlayerBulletSoldierTest( gPlayerBullet4, gSoldier0 );\n    PlayerBulletSoldierTest( gPlayerBullet5, gSoldier0 );    \n    \n    PlayerBulletSoldierTest( gPlayerBullet0, gSoldier1 );\n    PlayerBulletSoldierTest( gPlayerBullet1, gSoldier1 );\n    PlayerBulletSoldierTest( gPlayerBullet2, gSoldier1 );\n    PlayerBulletSoldierTest( gPlayerBullet3, gSoldier1 );\n    PlayerBulletSoldierTest( gPlayerBullet4, gSoldier1 );\n    PlayerBulletSoldierTest( gPlayerBullet5, gSoldier1 );    \n    \n    PlayerBulletSoldierTest( gPlayerBullet0, gSoldier2 );\n    PlayerBulletSoldierTest( gPlayerBullet1, gSoldier2 );\n    PlayerBulletSoldierTest( gPlayerBullet2, gSoldier2 );\n    PlayerBulletSoldierTest( gPlayerBullet3, gSoldier2 );\n    PlayerBulletSoldierTest( gPlayerBullet4, gSoldier2 );\n    PlayerBulletSoldierTest( gPlayerBullet5, gSoldier2 );    \n    \n    PlayerBulletSniperTest( gPlayerBullet0, gSniper );\n    PlayerBulletSniperTest( gPlayerBullet1, gSniper );\n    PlayerBulletSniperTest( gPlayerBullet2, gSniper );\n    PlayerBulletSniperTest( gPlayerBullet3, gSniper );\n    PlayerBulletSniperTest( gPlayerBullet4, gSniper );\n    PlayerBulletSniperTest( gPlayerBullet5, gSniper );    \n    \n    PlayerBulletTurretTest( gPlayerBullet0, gTurret0, gTurret0State );\n    PlayerBulletTurretTest( gPlayerBullet1, gTurret0, gTurret0State );\n    PlayerBulletTurretTest( gPlayerBullet2, gTurret0, gTurret0State );\n    PlayerBulletTurretTest( gPlayerBullet3, gTurret0, gTurret0State );\n    PlayerBulletTurretTest( gPlayerBullet4, gTurret0, gTurret0State );\n    PlayerBulletTurretTest( gPlayerBullet5, gTurret0, gTurret0State );    \n    \n    PlayerBulletTurretTest( gPlayerBullet0, gTurret1, gTurret1State );\n    PlayerBulletTurretTest( gPlayerBullet1, gTurret1, gTurret1State );\n    PlayerBulletTurretTest( gPlayerBullet2, gTurret1, gTurret1State );\n    PlayerBulletTurretTest( gPlayerBullet3, gTurret1, gTurret1State );\n    PlayerBulletTurretTest( gPlayerBullet4, gTurret1, gTurret1State );\n    PlayerBulletTurretTest( gPlayerBullet5, gTurret1, gTurret1State );    \n    \n    PlayerBulletPowerUpTest( gPlayerBullet0 );\n    PlayerBulletPowerUpTest( gPlayerBullet1 );\n    PlayerBulletPowerUpTest( gPlayerBullet2 );\n    PlayerBulletPowerUpTest( gPlayerBullet3 );\n    PlayerBulletPowerUpTest( gPlayerBullet4 );\n    PlayerBulletPowerUpTest( gPlayerBullet5 );    \n    \n    PlayerBulletBossCoreTest( gPlayerBullet0 );\n    PlayerBulletBossCoreTest( gPlayerBullet1 );\n    PlayerBulletBossCoreTest( gPlayerBullet2 );\n    PlayerBulletBossCoreTest( gPlayerBullet3 );\n    PlayerBulletBossCoreTest( gPlayerBullet4 );\n    PlayerBulletBossCoreTest( gPlayerBullet5 );  \n    \n    PlayerBulletBossCannonTest( gPlayerBullet0, gBossCannon0 );\n    PlayerBulletBossCannonTest( gPlayerBullet1, gBossCannon0 );\n    PlayerBulletBossCannonTest( gPlayerBullet2, gBossCannon0 );\n    PlayerBulletBossCannonTest( gPlayerBullet3, gBossCannon0 );\n    PlayerBulletBossCannonTest( gPlayerBullet4, gBossCannon0 );\n\tPlayerBulletBossCannonTest( gPlayerBullet5, gBossCannon0 );  \n\n    PlayerBulletBossCannonTest( gPlayerBullet0, gBossCannon1 );\n    PlayerBulletBossCannonTest( gPlayerBullet1, gBossCannon1 );\n    PlayerBulletBossCannonTest( gPlayerBullet2, gBossCannon1 );\n    PlayerBulletBossCannonTest( gPlayerBullet3, gBossCannon1 );\n    PlayerBulletBossCannonTest( gPlayerBullet4, gBossCannon1 );\n\tPlayerBulletBossCannonTest( gPlayerBullet5, gBossCannon1 );  \t    \n     \n    \n    // powerup state machine\n\tfloat powerUpSupport = GetSupport( gPowerUp.xy );    \n    if ( gPowerUp.x > 0.0 )\n    {\n        if( gPowerUpState.x == STATE_RUN )\n        {        \n            gPowerUp.x += 2.0;\n            gPowerUp.y = gPowerUpState.y + 32.0 * sin( 5.0 * iTime );\n        }\n        else if( gPowerUpState.x == STATE_JUMP )\n        {\n            gPowerUpState.z += 1.0 / 30.0;\n            gPowerUp.x += 1.0;\n            gPowerUp.y += 4.5 * ( 1.0 - gPowerUpState.z );\n            if ( gPowerUpState.z > 1.0 && gPowerUp.y <= powerUpSupport )\n            {\n                if ( gPowerUp.y <= WATER_HEIGHT )\n                {\n                    gPowerUp.x = 0.0;\n                    gExplosion = vec4( gPowerUp.xy + vec2( 0.0, POWER_UP_SIZE.y * 0.5 ), 0.0, 0.0 );\n                }\n                else\n                {\t\n                    gPowerUp.y = powerUpSupport;\n                \tgPowerUpState.x = STATE_WATER;\n                }\n            } \n        }\n        \n        if ( gPowerUpState.x != STATE_RUN )\n        {\n            if ( Collide( gPlayer.xy, BILL_RUN_SIZE, gPowerUp.xy, POWER_UP_SIZE ) )\n            {\n                gPowerUp.x \t\t= 0.0;\n\t\t\t\tgPlayerWeapon \t= vec4( WEAPON_MACHINE_GUN, 0.0, MACHINE_GUN_FIRE_RATE, MACHINE_GUN_BULLET_NUM );\n            }  \n        }\n    }\n    \n    // first exploding bridge\n    if ( gPlayer.x > BRIDGE_0_START_TILE * 32.0 - 16.0 && gBridge.x == 0.0 )\n    {\n        gBridge.x \t= BRIDGE_0_START_TILE;\n        gBridge.y \t= 0.0;\n        gExplosion \t= vec4( gBridge.x * 32.0 + 16.0, 16.0 * 6.0, 0.0, 0.0 );\n    }\n    if ( gBridge.x > 0.0 && gBridge.x < BRIDGE_0_END_TILE - 1.0 )\n    {\n        ++gBridge.y;\n        if ( gBridge.y > BRIGDE_EXPLODE_TIME )\n        {\n            ++gBridge.x;\n            gBridge.y = 0.0;\n            gExplosion = vec4( gBridge.x * 32.0 + 16.0, 16.0 * 6.0, 0.0, 0.0 );\n        }\n    }\n    \n    // second exploding bridge\n    if ( gPlayer.x > BRIDGE_1_START_TILE * 32.0 - 16.0 && gBridge.x == BRIDGE_0_END_TILE - 1.0 )\n    {\n        gBridge.x \t= BRIDGE_1_START_TILE;\n        gBridge.y \t= 0.0;\n        gExplosion \t= vec4( gBridge.x * 32.0 + 16.0, 16.0 * 6.0, 0.0, 0.0 );\n    }\n    if ( gBridge.x >= BRIDGE_1_START_TILE - 1.0 && gBridge.x < BRIDGE_1_END_TILE - 1.0 )\n    {\n        ++gBridge.y;\n        if ( gBridge.y > BRIGDE_EXPLODE_TIME )\n        {\n            ++gBridge.x;\n            gBridge.y = 0.0;\n            gExplosion = vec4( gBridge.x * 32.0 + 16.0, 16.0 * 6.0, 0.0, 0.0 );\n        }\n    }    \n    \n\tUpdateSniper( gSniper, playerTarget );    \n\tUpdateTurret( gTurret0, gTurret0State, playerTarget );\n    UpdateTurret( gTurret1, gTurret1State, playerTarget );\n    UpdateBossCannon( gBossCannon0 );\n    UpdateBossCannon( gBossCannon1 );\n    \n    // explosion\n    if ( gExplosion.z >= 3.0 )\n    {\n        gExplosion.xy = vec2( 0.0 );\n    }\n    else\n    {\n        gExplosion.z += 0.2;\n    }\n    \n    // hits\n    if ( gHit.z >= 1.0 )\n    {\n\t\tgHit.xy = vec2( 0.0 );\n    }\n    else\n    {\n        gHit.z += 0.2;\n    }    \n    \n    fragColor = vec4( 0.0 );\n    StoreValue( txPlayer, gPlayer, fragColor, fragCoord );\n    StoreValue( txPlayerState, gPlayerState, fragColor, fragCoord );\n    StoreValue( txPlayerWeapon, gPlayerWeapon, fragColor, fragCoord );\n    StoreValue( txPlayerDir, gPlayerDir, fragColor, fragCoord );\n    StoreValue( txCamera, gCamera, fragColor, fragCoord );\n    StoreValue( txSoldier0, gSoldier0, fragColor, fragCoord );\n    StoreValue( txSoldier1, gSoldier1, fragColor, fragCoord );\n    StoreValue( txSoldier2, gSoldier2, fragColor, fragCoord );\n    StoreValue( txSoldier0State, gSoldier0State, fragColor, fragCoord );\n    StoreValue( txSoldier1State, gSoldier1State, fragColor, fragCoord );\n    StoreValue( txSoldier2State, gSoldier2State, fragColor, fragCoord );\n    StoreValue( txSniper, gSniper, fragColor, fragCoord );\n    StoreValue( txPlayerBullet0, gPlayerBullet0, fragColor, fragCoord );\n    StoreValue( txPlayerBullet1, gPlayerBullet1, fragColor, fragCoord );\n    StoreValue( txPlayerBullet2, gPlayerBullet2, fragColor, fragCoord );\n    StoreValue( txPlayerBullet3, gPlayerBullet3, fragColor, fragCoord );\n    StoreValue( txPlayerBullet4, gPlayerBullet4, fragColor, fragCoord );\n    StoreValue( txPlayerBullet5, gPlayerBullet5, fragColor, fragCoord );    \n    StoreValue( txEnemyBullet0, gEnemyBullet0, fragColor, fragCoord );\n    StoreValue( txEnemyBullet1, gEnemyBullet1, fragColor, fragCoord );\n    StoreValue( txEnemyBullet2, gEnemyBullet2, fragColor, fragCoord );\n    StoreValue( txEnemyBullet3, gEnemyBullet3, fragColor, fragCoord );\n    StoreValue( txExplosion, gExplosion, fragColor, fragCoord );\n    StoreValue( txHit, gHit, fragColor, fragCoord );\n    StoreValue( txTurret0, gTurret0, fragColor, fragCoord );\n    StoreValue( txTurret1, gTurret1, fragColor, fragCoord );\n    StoreValue( txTurret0State, gTurret0State, fragColor, fragCoord );\n    StoreValue( txTurret1State, gTurret1State, fragColor, fragCoord );    \n    StoreValue( txPowerUp, gPowerUp, fragColor, fragCoord );\n    StoreValue( txPowerUpState, gPowerUpState, fragColor, fragCoord );\n    StoreValue( txBossCore, gBossCore, fragColor, fragCoord );\n    StoreValue( txBossCannon0, gBossCannon0, fragColor, fragCoord );\n    StoreValue( txBossCannon1, gBossCannon1, fragColor, fragCoord );\n    StoreValue( txBossBullet0, gBossBullet0, fragColor, fragCoord );\n    StoreValue( txBossBullet1, gBossBullet1, fragColor, fragCoord );    \n    StoreValue( txGameState, gGameState, fragColor, fragCoord );\n    StoreValue( txBridge, gBridge, fragColor, fragCoord );\n    \n    // clear to 0 on first frame\n    fragColor = iFrame < 1 ? vec4( 0.0 ) : fragColor;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Background\n\n#define SPRITE_DEC_2( x, i ) mod( floor( i / pow( 2.0, mod( x, 24.0 ) ) ), 2.0 )\n#define SPRITE_DEC_3( x, i ) mod( floor( i / pow( 4.0, mod( x, 11.0 ) ) ), 4.0 )\n#define SPRITE_DEC_4( x, i ) mod( floor( i / pow( 4.0, mod( x, 8.0 ) ) ), 4.0 )\n#define RGB( r, g, b ) vec3( float( r ) / 255.0, float( g ) / 255.0, float( b ) / 255.0 )\n\nconst float NES_RES_X           = 224.0;\nconst float NES_RES_Y           = 192.0;\nconst float JUNGLE_START        = 32.0 * 52.0;\nconst float JUNGLE_END          = 32.0 * 108.0 + 16.0;\nconst float WATER_END           = 32.0 * 63.0;\nconst vec2  BOSS_CORE_SIZE      = vec2( 24.0, 31.0 );\nconst vec2  BOSS_CANNON_SIZE    = vec2( 14.0, 6.0 );\nconst float BRIDGE_0_START_TILE = 30.0;\nconst float BRIDGE_0_END_TILE   = 35.0;\nconst float BRIDGE_1_START_TILE = 40.0;\nconst float BRIDGE_1_END_TILE   = 45.0;\n\n// storage\nconst vec2 txPlayer \t\t\t= vec2( 0.0, 0.0 ); \t// xy - pos, z - jump start, w - jump dir\nconst vec2 txPlayerState\t\t= vec2( 1.0, 0.0 ); \t// x - state, y - frame, z - jump tick, w - lifes\nconst vec2 txPlayerDir\t\t\t= vec2( 2.0, 0.0 ); \t// xy - dir, z - flip, w - immortality\nconst vec2 txPlayerWeapon\t\t= vec2( 3.0, 0.0 ); \t// x - weapon, y - weapon cooldown, z - weapon fire rate, w - weapon bullet num\nconst vec2 txCamera \t\t\t= vec2( 4.0, 0.0 ); \t// x - cam offset, y - spawn counter, z - soldier spawn counter\nconst vec2 txSoldier0 \t\t\t= vec2( 5.0, 0.0 ); \t// xy - pos, z - flip\nconst vec2 txSoldier1 \t\t\t= vec2( 5.0, 1.0 ); \t// xy - pos, z - flip\nconst vec2 txSoldier2 \t\t\t= vec2( 5.0, 2.0 ); \t// xy - pos, z - flip\nconst vec2 txSoldier0State \t\t= vec2( 6.0, 0.0 ); \t// x - state, y - frame, z - jump tick\nconst vec2 txSoldier1State \t\t= vec2( 6.0, 1.0 ); \t// x - state, y - frame, z - jump tick\nconst vec2 txSoldier2State \t\t= vec2( 6.0, 2.0 ); \t// x - state, y - frame, z - jump tick\nconst vec2 txSniper\t \t\t\t= vec2( 7.0, 0.0 ); \t// xy - pos, z - flip, w - weapon cooldown\nconst vec2 txPlayerBullet0 \t\t= vec2( 8.0, 0.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet1 \t\t= vec2( 8.0, 1.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet2 \t\t= vec2( 8.0, 2.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet3 \t\t= vec2( 8.0, 3.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet4 \t\t= vec2( 8.0, 4.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet5 \t\t= vec2( 8.0, 5.0 ); \t// xy - pos, xy - dir\nconst vec2 txEnemyBullet0 \t\t= vec2( 9.0, 0.0 ); \t// xy - pos, xy - dir\nconst vec2 txEnemyBullet1 \t\t= vec2( 9.0, 1.0 ); \t// xy - pos, xy - dir\nconst vec2 txEnemyBullet2 \t\t= vec2( 9.0, 2.0 ); \t// xy - pos, xy - dir\nconst vec2 txEnemyBullet3 \t\t= vec2( 9.0, 3.0 ); \t// xy - pos, xy - dir\nconst vec2 txExplosion \t\t\t= vec2( 10.0, 0.0 ); \t// xy - pos, z - frame\nconst vec2 txHit \t\t\t\t= vec2( 11.0, 0.0 ); \t// xy - pos, z - frame\nconst vec2 txTurret0\t\t\t= vec2( 12.0, 0.0 ); \t// xy - pos, z - angle\nconst vec2 txTurret1\t\t\t= vec2( 12.0, 1.0 ); \t// xy - pos, z - angle\nconst vec2 txTurret0State\t\t= vec2( 13.0, 0.0 ); \t// x - HP, y - weapon cooldown\nconst vec2 txTurret1State\t\t= vec2( 13.0, 1.0 ); \t// x - HP, y - weapon cooldown\nconst vec2 txPowerUp\t\t\t= vec2( 14.0, 0.0 ); \t// xy - pos, z - frame\nconst vec2 txPowerUpState\t\t= vec2( 15.0, 0.0 ); \t// x - state, y - initial height, z - jump tick\nconst vec2 txBossCore\t\t\t= vec2( 16.0, 0.0 ); \t// xy - pos, z - HP\nconst vec2 txBossCannon0\t\t= vec2( 17.0, 0.0 ); \t// xy - pos, z - cooldown, w - HP\nconst vec2 txBossCannon1\t\t= vec2( 17.0, 1.0 ); \t// xy - pos, z - cooldown, w - HP\nconst vec2 txBossBullet0\t\t= vec2( 18.0, 0.0 ); \t// xy - pos, zw - velocity\nconst vec2 txBossBullet1\t\t= vec2( 18.0, 1.0 ); \t// xy - pos, zw - velocity\nconst vec2 txGameState\t\t\t= vec2( 19.0, 0.0 ); \t// x - state, y - state tick\nconst vec2 txBridge\t\t\t\t= vec2( 20.0, 0.0 ); \t// x - draw start, y - explode tick\n\nfloat Rand( vec2 co )\n{\n    return fract( sin( dot( co.xy, vec2( 12.9898, 78.233 ) ) ) * 43758.5453 );\n}\n\nvec4 LoadValue( vec2 tx )\n{\n    return floor( texture( iChannel0, ( tx + 0.5 ) / iChannelResolution[ 0 ].xy ) );\n}\n\nvoid SpriteBush( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;    \n    \n    idx = y == 8.0 ? ( x <= 10.0 ? 1419584.0 : ( x <= 21.0 ? 1.0 : 1360.0 ) ) : idx;\n    idx = y == 7.0 ? ( x <= 10.0 ? 2796196.0 : ( x <= 21.0 ? 21.0 : 22176.0 ) ) : idx;\n    idx = y == 6.0 ? ( x <= 10.0 ? 2796201.0 : ( x <= 21.0 ? 87125.0 : 87721.0 ) ) : idx;\n    idx = y == 5.0 ? ( x <= 10.0 ? 2534058.0 : ( x <= 21.0 ? 436310.0 : 88681.0 ) ) : idx;\n    idx = y == 4.0 ? ( x <= 10.0 ? 1681065.0 : ( x <= 21.0 ? 365637.0 : 71061.0 ) ) : idx;\n    idx = y == 3.0 ? ( x <= 10.0 ? 1464937.0 : ( x <= 21.0 ? 91137.0 : 1381.0 ) ) : idx;\n    idx = y == 2.0 ? ( x <= 10.0 ? 1332565.0 : ( x <= 21.0 ? 283908.0 : 266564.0 ) ) : idx;\n    idx = y == 1.0 ? ( x <= 10.0 ? 332884.0 : ( x <= 21.0 ? 267328.0 : 65616.0 ) ) : idx;\n\n    idx = SPRITE_DEC_3( x, idx );\n\n    color = y >= 0.0 && y < 9.0 ? RGB( 0, 0, 0 ) : color;\n    color = idx == 1.0 ? RGB( 0,   144, 0 ) : color;\n    color = idx == 2.0 ? RGB( 144, 213, 0 ) : color;\n}\n\nvoid SpriteRockTop( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;    \n    \n    idx = y == 7.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 89.0 : ( x <= 23.0 ? 0.0 : 341.0 ) ) ) : idx;\n    idx = y == 6.0 ? ( x <= 7.0 ? 38144.0 : ( x <= 15.0 ? 5466.0 : ( x <= 23.0 ? 20480.0 : 5466.0 ) ) ) : idx;\n    idx = y == 5.0 ? ( x <= 7.0 ? 43604.0 : ( x <= 15.0 ? 21851.0 : ( x <= 23.0 ? 42305.0 : 1386.0 ) ) ) : idx;\n    idx = y == 4.0 ? ( x <= 7.0 ? 65168.0 : ( x <= 15.0 ? 21866.0 : ( x <= 23.0 ? 43345.0 : 1387.0 ) ) ) : idx;\n    idx = y == 3.0 ? ( x <= 7.0 ? 47680.0 : ( x <= 15.0 ? 21914.0 : ( x <= 23.0 ? 64144.0 : 5547.0 ) ) ) : idx;\n    idx = y == 2.0 ? ( x <= 7.0 ? 43269.0 : ( x <= 15.0 ? 5718.0 : ( x <= 23.0 ? 65188.0 : 5526.0 ) ) ) : idx;\n    idx = y == 1.0 ? ( x <= 7.0 ? 20584.0 : ( x <= 15.0 ? 1.0 : ( x <= 23.0 ? 60329.0 : 22102.0 ) ) ) : idx;\n    idx = y == 0.0 ? ( x <= 7.0 ? 5860.0 : ( x <= 15.0 ? 0.0 : ( x <= 23.0 ? 43769.0 : 22101.0 ) ) ) : idx;\n    \n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 32.0 ? idx : 0.0;\n    \n    color = x >= 0.0 && x < 32.0 && y >= 0.0 && y < 8.0 ? RGB( 0, 0, 0 ) : color;\n    color = idx == 1.0 ? RGB( 68,  80,  0 ) : color;\n    color = idx == 2.0 ? RGB( 126, 126, 0 ) : color;\n    color = idx == 3.0 ? RGB( 208, 190, 0 ) : color;\n}\n\nvoid SpriteRock( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;    \n    \n    idx = y == 31.0 ? ( x <= 7.0 ? 5860.0 : ( x <= 15.0 ? 0.0 : ( x <= 23.0 ? 43769.0 : 22101.0 ) ) ) : idx;\n    idx = y == 30.0 ? ( x <= 7.0 ? 1444.0 : ( x <= 15.0 ? 1365.0 : ( x <= 23.0 ? 45049.0 : 22869.0 ) ) ) : idx;\n    idx = y == 29.0 ? ( x <= 7.0 ? 17809.0 : ( x <= 15.0 ? 6826.0 : ( x <= 23.0 ? 32420.0 : 22869.0 ) ) ) : idx;\n    idx = y == 28.0 ? ( x <= 7.0 ? 37201.0 : ( x <= 15.0 ? 27311.0 : ( x <= 23.0 ? 27284.0 : 25941.0 ) ) ) : idx;\n    idx = y == 27.0 ? ( x <= 7.0 ? 57669.0 : ( x <= 15.0 ? 27327.0 : ( x <= 23.0 ? 43668.0 : 25941.0 ) ) ) : idx;\n    idx = y == 26.0 ? ( x <= 7.0 ? 58373.0 : ( x <= 15.0 ? 43695.0 : ( x <= 23.0 ? 43601.0 : 38229.0 ) ) ) : idx;\n    idx = y == 25.0 ? ( x <= 7.0 ? 63765.0 : ( x <= 15.0 ? 43695.0 : ( x <= 23.0 ? 43345.0 : 38230.0 ) ) ) : idx;\n    idx = y == 24.0 ? ( x <= 7.0 ? 63764.0 : ( x <= 15.0 ? 43695.0 : ( x <= 23.0 ? 42322.0 : 38234.0 ) ) ) : idx;\n    idx = y == 23.0 ? ( x <= 7.0 ? 63748.0 : ( x <= 15.0 ? 43695.0 : ( x <= 23.0 ? 42310.0 : 21866.0 ) ) ) : idx;\n    idx = y == 22.0 ? ( x <= 7.0 ? 65088.0 : ( x <= 15.0 ? 43711.0 : ( x <= 23.0 ? 42266.0 : 5486.0 ) ) ) : idx;\n    idx = y == 21.0 ? ( x <= 7.0 ? 65092.0 : ( x <= 15.0 ? 43711.0 : ( x <= 23.0 ? 37914.0 : 5566.0 ) ) ) : idx;\n    idx = y == 20.0 ? ( x <= 7.0 ? 65088.0 : ( x <= 15.0 ? 43775.0 : ( x <= 23.0 ? 20570.0 : 5886.0 ) ) ) : idx;\n    idx = y == 19.0 ? ( x <= 7.0 ? 65089.0 : ( x <= 15.0 ? 43775.0 : ( x <= 23.0 ? 20570.0 : 5881.0 ) ) ) : idx;\n    idx = y == 18.0 ? ( x <= 7.0 ? 64145.0 : ( x <= 15.0 ? 44031.0 : ( x <= 23.0 ? 20570.0 : 1445.0 ) ) ) : idx;\n    idx = y == 17.0 ? ( x <= 7.0 ? 43664.0 : ( x <= 15.0 ? 44031.0 : ( x <= 23.0 ? 16730.0 : 1429.0 ) ) ) : idx;\n    idx = y == 16.0 ? ( x <= 7.0 ? 43664.0 : ( x <= 15.0 ? 44798.0 : ( x <= 23.0 ? 16730.0 : 18005.0 ) ) ) : idx;\n    idx = y == 15.0 ? ( x <= 7.0 ? 44004.0 : ( x <= 15.0 ? 22266.0 : ( x <= 23.0 ? 16741.0 : 18005.0 ) ) ) : idx;\n    idx = y == 14.0 ? ( x <= 7.0 ? 45049.0 : ( x <= 15.0 ? 21930.0 : ( x <= 23.0 ? 1381.0 : 1621.0 ) ) ) : idx;\n    idx = y == 13.0 ? ( x <= 7.0 ? 49065.0 : ( x <= 15.0 ? 21930.0 : ( x <= 23.0 ? 1429.0 : 1365.0 ) ) ) : idx;\n    idx = y == 12.0 ? ( x <= 7.0 ? 60073.0 : ( x <= 15.0 ? 21867.0 : ( x <= 23.0 ? 1429.0 : 340.0 ) ) ) : idx;\n    idx = y == 11.0 ? ( x <= 7.0 ? 43689.0 : ( x <= 15.0 ? 21846.0 : ( x <= 23.0 ? 1109.0 : 340.0 ) ) ) : idx;\n    idx = y == 10.0 ? ( x <= 7.0 ? 43690.0 : ( x <= 15.0 ? 21846.0 : ( x <= 23.0 ? 357.0 : 340.0 ) ) ) : idx;\n    idx = y == 9.0 ? ( x <= 7.0 ? 38566.0 : ( x <= 15.0 ? 21849.0 : ( x <= 23.0 ? 1049.0 : 336.0 ) ) ) : idx;\n    idx = y == 8.0 ? ( x <= 7.0 ? 25941.0 : ( x <= 15.0 ? 21849.0 : ( x <= 23.0 ? 4101.0 : 256.0 ) ) ) : idx;\n    idx = y == 7.0 ? ( x <= 7.0 ? 25941.0 : ( x <= 15.0 ? 21861.0 : ( x <= 23.0 ? 1.0 : 21.0 ) ) ) : idx;\n    idx = y == 6.0 ? ( x <= 7.0 ? 22868.0 : ( x <= 15.0 ? 23141.0 : ( x <= 23.0 ? 20480.0 : 361.0 ) ) ) : idx;\n    idx = y == 5.0 ? ( x <= 7.0 ? 21840.0 : ( x <= 15.0 ? 5525.0 : ( x <= 23.0 ? 42240.0 : 5546.0 ) ) ) : idx;\n    idx = y == 4.0 ? ( x <= 7.0 ? 20800.0 : ( x <= 15.0 ? 5377.0 : ( x <= 23.0 ? 64080.0 : 1451.0 ) ) ) : idx;\n    idx = y == 3.0 ? ( x <= 7.0 ? 4096.0 : ( x <= 15.0 ? 1024.0 : ( x <= 23.0 ? 65428.0 : 1391.0 ) ) ) : idx;\n    idx = y == 2.0 ? ( x <= 7.0 ? 16464.0 : ( x <= 15.0 ? 1024.0 : ( x <= 23.0 ? 65188.0 : 5531.0 ) ) ) : idx;\n    idx = y == 1.0 ? ( x <= 7.0 ? 5541.0 : ( x <= 15.0 ? 4097.0 : ( x <= 23.0 ? 60069.0 : 5526.0 ) ) ) : idx;\n    idx = y == 0.0 ? ( x <= 7.0 ? 23288.0 : ( x <= 15.0 ? 0.0 : ( x <= 23.0 ? 43705.0 : 22101.0 ) ) ) : idx;\n\n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 32.0 ? idx : 0.0;\n    \n    color = x >= 0.0 && x < 32.0 && y >= 0.0 && y < 32.0 ? RGB( 0, 0, 0 ) : color;\n    color = idx == 1.0 ? RGB( 68,  80,  0 ) : color;\n    color = idx == 2.0 ? RGB( 126, 126, 0 ) : color;\n    color = idx == 3.0 ? RGB( 208, 190, 0 ) : color;\n}\n\nvoid SpriteTreeTrunk( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n    idx = y == 1.0 ? 2918701.0 : idx;\n    idx = y == 0.0 ? 1263122.0 : idx;\n    \n    idx = SPRITE_DEC_2( x, idx );\n    \n    color = idx == 1.0 ? RGB( 64,  44,  0 ) : RGB( 0,  0,  0 );\n}\n\nvoid SpriteTreeStart( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n\tidx = y == 22.0 ? 32768.0 : idx;\n\tidx = y == 21.0 ? 10240.0 : idx;\n\tidx = y == 20.0 ? 9088.0 : idx;\n\tidx = y == 19.0 ? 10976.0 : idx;\n\tidx = y == 18.0 ? 9016.0 : idx;\n\tidx = y == 17.0 ? 33580.0 : idx;\n\tidx = y == 16.0 ? 2874.0 : idx;\n\tidx = y == 15.0 ? 41644.0 : idx;\n\tidx = y == 14.0 ? 13240.0 : idx;\n\tidx = y == 13.0 ? 824.0 : idx;\n\tidx = y == 12.0 ? 4128.0 : idx;\n\tidx = y == 11.0 ? 17408.0 : idx;\n\tidx = y == 10.0 ? 1024.0 : idx;\n\tidx = y == 9.0 ? 34048.0 : idx;\n\tidx = y == 8.0 ? 33024.0 : idx;\n\tidx = y == 7.0 ? 0.0 : idx;\n\tidx = y == 6.0 ? 51840.0 : idx;\n\tidx = y == 5.0 ? 44000.0 : idx;\n\tidx = y == 4.0 ? 1760.0 : idx;\n\tidx = y == 3.0 ? 17584.0 : idx;\n\tidx = y == 2.0 ? 17440.0 : idx;\n\tidx = y == 1.0 ? 17440.0 : idx;\n\tidx = y == 0.0 ? 16384.0 : idx;\n    \n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 8.0 ? idx : 0.0;\n\n    color = x >= 0.0 && x < 8.0 && y >= 0.0 && y < 24.0 ? RGB( 0, 0, 0 ) : color;\n    color = idx == 1.0 ? RGB( 64, 44, 0 ) : color;\n    color = idx == 2.0 ? RGB( 0, 148, 0 ) : color;    \n    color = idx == 3.0 ? RGB( 128, 208, 16 ) : color;\n}\n\nvoid SpriteTreeMiddle( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n    idx = y == 23.0 ? ( x <= 7.0 ? 10240.0 : 0.0 ) : idx;\n    idx = y == 22.0 ? ( x <= 7.0 ? 48770.0 : 2688.0 ) : idx;\n    idx = y == 21.0 ? ( x <= 7.0 ? 10283.0 : 12266.0 ) : idx;\n    idx = y == 20.0 ? ( x <= 7.0 ? 32959.0 : 48059.0 ) : idx;\n    idx = y == 19.0 ? ( x <= 7.0 ? 58080.0 : 44782.0 ) : idx;\n    idx = y == 18.0 ? ( x <= 7.0 ? 35470.0 : 12012.0 ) : idx;\n    idx = y == 17.0 ? ( x <= 7.0 ? 8763.0 : 2248.0 ) : idx;\n    idx = y == 16.0 ? ( x <= 7.0 ? 35723.0 : 32898.0 ) : idx;\n    idx = y == 15.0 ? ( x <= 7.0 ? 11835.0 : 57866.0 ) : idx;\n    idx = y == 14.0 ? ( x <= 7.0 ? 15155.0 : 57896.0 ) : idx;\n    idx = y == 13.0 ? ( x <= 7.0 ? 60450.0 : 45240.0 ) : idx;\n    idx = y == 12.0 ? ( x <= 7.0 ? 60480.0 : 8930.0 ) : idx;\n    idx = y == 11.0 ? ( x <= 7.0 ? 60481.0 : 930.0 ) : idx;\n    idx = y == 10.0 ? ( x <= 7.0 ? 51280.0 : 4738.0 ) : idx;\n    idx = y == 9.0 ? ( x <= 7.0 ? 49234.0 : 4226.0 ) : idx;\n    idx = y == 8.0 ? ( x <= 7.0 ? 32848.0 : 4096.0 ) : idx;\n    idx = y == 7.0 ? ( x <= 7.0 ? 32852.0 : 16416.0 ) : idx;\n    idx = y == 6.0 ? ( x <= 7.0 ? 23.0 : 18528.0 ) : idx;\n    idx = y == 5.0 ? ( x <= 7.0 ? 30.0 : 18536.0 ) : idx;\n    idx = y == 4.0 ? ( x <= 7.0 ? 17464.0 : 18536.0 ) : idx;\n    idx = y == 3.0 ? ( x <= 7.0 ? 1064.0 : 18504.0 ) : idx;\n    idx = y == 2.0 ? ( x <= 7.0 ? 1312.0 : 16448.0 ) : idx;\n    idx = y == 1.0 ? ( x <= 7.0 ? 17668.0 : 18496.0 ) : idx;\n    idx = y == 0.0 ? ( x <= 7.0 ? 16660.0 : 16448.0 ) : idx;\n    \n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 16.0 ? idx : 0.0;\n\n    color = x >= 0.0 && x < 16.0 && y >= 0.0 && y < 24.0 ? RGB( 0, 0, 0 ) : color;\n    color = idx == 1.0 ? RGB( 64, 44, 0 ) : color;\n    color = idx == 2.0 ? RGB( 0, 148, 0 ) : color;    \n    color = idx == 3.0 ? RGB( 128, 208, 16 ) : color;\n}\n\nvoid SpriteTreeEnd( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n\tidx = y == 17.0 ? 960.0 : idx;\n\tidx = y == 16.0 ? 2744.0 : idx;\n\tidx = y == 15.0 ? 8227.0 : idx;\n\tidx = y == 14.0 ? 3022.0 : idx;\n\tidx = y == 13.0 ? 48674.0 : idx;\n\tidx = y == 12.0 ? 41136.0 : idx;\n\tidx = y == 11.0 ? 52192.0 : idx;\n\tidx = y == 10.0 ? 36516.0 : idx;\n\tidx = y == 9.0 ? 15140.0 : idx;\n\tidx = y == 8.0 ? 15108.0 : idx;\n\tidx = y == 7.0 ? 12292.0 : idx;\n\tidx = y == 6.0 ? 8452.0 : idx;\n\tidx = y == 5.0 ? 68.0 : idx;\n\tidx = y == 4.0 ? 68.0 : idx;\n\tidx = y == 3.0 ? 68.0 : idx;\n\tidx = y == 2.0 ? 20.0 : idx;\n\tidx = y == 1.0 ? 20.0 : idx;\n\tidx = y == 0.0 ? 20.0 : idx;\n    \n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 8.0 ? idx : 0.0;\n\n    color = x >= 0.0 && x < 8.0 && y >= 0.0 && y < 24.0 ? RGB( 0, 0, 0 ) : color;\n    color = idx == 1.0 ? RGB( 64, 44, 0 ) : color;\n    color = idx == 2.0 ? RGB( 0, 148, 0 ) : color;    \n    color = idx == 3.0 ? RGB( 128, 208, 16 ) : color;\n}\n\nvoid SpriteBridge( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n\tidx = y == 26.0 ? ( x <= 10.0 ? 349509.0 : ( x <= 21.0 ? 1381717.0 : 349269.0 ) ) : idx;\n\tidx = y == 25.0 ? ( x <= 10.0 ? 349573.0 : ( x <= 21.0 ? 1447254.0 : 350293.0 ) ) : idx;\n\tidx = y == 24.0 ? ( x <= 10.0 ? 2184545.0 : ( x <= 21.0 ? 1410389.0 : 349717.0 ) ) : idx;\n\tidx = y == 23.0 ? ( x <= 10.0 ? 2184545.0 : ( x <= 21.0 ? 1410389.0 : 349717.0 ) ) : idx;\n\tidx = y == 22.0 ? ( x <= 10.0 ? 1594712.0 : ( x <= 21.0 ? 1401173.0 : 349573.0 ) ) : idx;\n\tidx = y == 21.0 ? ( x <= 10.0 ? 1594712.0 : ( x <= 21.0 ? 1401173.0 : 349573.0 ) ) : idx;\n\tidx = y == 20.0 ? ( x <= 10.0 ? 2730665.0 : ( x <= 21.0 ? 2795178.0 : 699034.0 ) ) : idx;\n\tidx = y == 19.0 ? ( x <= 10.0 ? 1594712.0 : ( x <= 21.0 ? 1398101.0 : 349573.0 ) ) : idx;\n\tidx = y == 18.0 ? ( x <= 10.0 ? 546136.0 : ( x <= 21.0 ? 0.0 : 349576.0 ) ) : idx;\n\tidx = y == 17.0 ? ( x <= 10.0 ? 524288.0 : ( x <= 21.0 ? 0.0 : 8.0 ) ) : idx;\n\tidx = y == 16.0 ? ( x <= 10.0 ? 567976.0 : ( x <= 21.0 ? 0.0 : 699016.0 ) ) : idx;\n\tidx = y == 15.0 ? ( x <= 10.0 ? 2643288.0 : ( x <= 21.0 ? 2796202.0 : 349578.0 ) ) : idx;\n\tidx = y == 14.0 ? ( x <= 10.0 ? 1594712.0 : ( x <= 21.0 ? 1398101.0 : 349573.0 ) ) : idx;\n\tidx = y == 11.0 ? ( x <= 10.0 ? 26729.0 : ( x <= 21.0 ? 2204672.0 : 6.0 ) ) : idx;\n\tidx = y == 10.0 ? ( x <= 10.0 ? 5140.0 : ( x <= 21.0 ? 1069056.0 : 1.0 ) ) : idx;\n\tidx = y == 9.0 ? ( x <= 10.0 ? 1397865.0 : ( x <= 21.0 ? 1156437.0 : 349525.0 ) ) : idx;\n\tidx = y == 8.0 ? ( x <= 10.0 ? 2791700.0 : ( x <= 21.0 ? 2380458.0 : 699049.0 ) ) : idx;\n\tidx = y == 7.0 ? ( x <= 10.0 ? 1393769.0 : ( x <= 21.0 ? 1156437.0 : 349524.0 ) ) : idx;\n\tidx = y == 6.0 ? ( x <= 10.0 ? 20.0 : ( x <= 21.0 ? 20480.0 : 0.0 ) ) : idx;\n\tidx = y == 5.0 ? ( x <= 10.0 ? 105.0 : ( x <= 21.0 ? 107520.0 : 0.0 ) ) : idx;\n\tidx = y == 4.0 ? ( x <= 10.0 ? 20.0 : ( x <= 21.0 ? 20480.0 : 0.0 ) ) : idx;\n\tidx = y == 3.0 ? ( x <= 10.0 ? 1398149.0 : ( x <= 21.0 ? 1447253.0 : 349525.0 ) ) : idx;\n\tidx = y == 2.0 ? ( x <= 10.0 ? 2796193.0 : ( x <= 21.0 ? 2786986.0 : 699050.0 ) ) : idx;\n\tidx = y == 1.0 ? ( x <= 10.0 ? 1398113.0 : ( x <= 21.0 ? 1410389.0 : 349525.0 ) ) : idx;\n\tidx = y == 0.0 ? ( x <= 10.0 ? 1398085.0 : ( x <= 21.0 ? 1381717.0 : 349525.0 ) ) : idx;  \n\n    idx = SPRITE_DEC_3( x, idx );\n    idx = x >= 0.0 && x < 32.0 ? idx : 0.0;\n    \n    color = x >= 0.0 && x < 32.0 && y >= 0.0 && y < 13.0 ? RGB( 0, 0, 0 ) : color;\n    \n    float blink = abs( sin( iTime * 3.0 ) ) + 0.5;\n    color = x >= 12.0 && x < 24.0 && y >= 17.0 && y < 19.0 ? blink * RGB( 228, 68, 52 ) : color;\n    color = idx == 1.0 ? RGB( 179, 179, 179 ) : color;\n    color = idx == 2.0 ? RGB( 255, 255, 255 ) : color;    \n}\n\nvoid SpriteGrass( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n    idx = y == 15.0 ? ( x <= 10.0 ? 1398096.0 : ( x <= 21.0 ? 1398101.0 : 87381.0 ) ) : idx;\n    idx = y == 14.0 ? ( x <= 10.0 ? 1398101.0 : ( x <= 21.0 ? 1398101.0 : 349525.0 ) ) : idx;\n    idx = y == 13.0 ? ( x <= 10.0 ? 1398101.0 : ( x <= 21.0 ? 1398101.0 : 349525.0 ) ) : idx;\n    idx = y == 12.0 ? ( x <= 10.0 ? 1398101.0 : ( x <= 21.0 ? 1398101.0 : 349525.0 ) ) : idx;\n    idx = y == 11.0 ? ( x <= 10.0 ? 1398102.0 : ( x <= 21.0 ? 1398101.0 : 349525.0 ) ) : idx;\n    idx = y == 10.0 ? ( x <= 10.0 ? 1418921.0 : ( x <= 21.0 ? 1398102.0 : 419158.0 ) ) : idx;\n    idx = y == 9.0 ? ( x <= 10.0 ? 2779749.0 : ( x <= 21.0 ? 2796202.0 : 285353.0 ) ) : idx;\n    idx = y == 8.0 ? ( x <= 10.0 ? 2796197.0 : ( x <= 21.0 ? 2791078.0 : 345494.0 ) ) : idx;\n    idx = y == 7.0 ? ( x <= 10.0 ? 1681049.0 : ( x <= 21.0 ? 1468826.0 : 70997.0 ) ) : idx;\n    idx = y == 6.0 ? ( x <= 10.0 ? 2517412.0 : ( x <= 21.0 ? 2463126.0 : 280153.0 ) ) : idx;\n    idx = y == 5.0 ? ( x <= 10.0 ? 1681057.0 : ( x <= 21.0 ? 2459241.0 : 71013.0 ) ) : idx;\n    idx = y == 4.0 ? ( x <= 10.0 ? 2468240.0 : ( x <= 21.0 ? 1448218.0 : 267413.0 ) ) : idx;\n    idx = y == 3.0 ? ( x <= 10.0 ? 1137172.0 : ( x <= 21.0 ? 332905.0 : 20818.0 ) ) : idx;\n    idx = y == 2.0 ? ( x <= 10.0 ? 1148161.0 : ( x <= 21.0 ? 332900.0 : 325.0 ) ) : idx;\n    idx = y == 1.0 ? ( x <= 10.0 ? 16640.0 : ( x <= 21.0 ? 69648.0 : 68.0 ) ) : idx;\n    \n    idx = SPRITE_DEC_3( x, idx );\n    idx = x >= 0.0 && x < 32.0 ? idx : 0.0;\n\n    color = x >= 0.0 && x < 32.0 && y >= 0.0 && y < 16.0 ? RGB( 0, 0, 0 ) : color;\n    color = idx == 1.0 ? RGB( 0,   144, 0 ) : color;\n    color = idx == 2.0 ? RGB( 144, 213, 0 ) : color;\n}\n\nvoid SpriteLeaves( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n    idx = y == 29.0 ? ( x <= 7.0 ? 8224.0 : ( x <= 15.0 ? 514.0 : ( x <= 23.0 ? 10400.0 : 41122.0 ) ) ) : idx;\n    idx = y == 28.0 ? ( x <= 7.0 ? 35330.0 : ( x <= 15.0 ? 2110.0 : ( x <= 23.0 ? 14496.0 : 35723.0 ) ) ) : idx;\n    idx = y == 27.0 ? ( x <= 7.0 ? 41090.0 : ( x <= 15.0 ? 995.0 : ( x <= 23.0 ? 12996.0 : 11788.0 ) ) ) : idx;\n    idx = y == 26.0 ? ( x <= 7.0 ? 14466.0 : ( x <= 15.0 ? 3595.0 : ( x <= 23.0 ? 58256.0 : 14380.0 ) ) ) : idx;\n    idx = y == 25.0 ? ( x <= 7.0 ? 36352.0 : ( x <= 15.0 ? 2223.0 : ( x <= 23.0 ? 57860.0 : 47928.0 ) ) ) : idx;\n    idx = y == 24.0 ? ( x <= 7.0 ? 58240.0 : ( x <= 15.0 ? 8958.0 : ( x <= 23.0 ? 57424.0 : 64312.0 ) ) ) : idx;\n    idx = y == 23.0 ? ( x <= 7.0 ? 47810.0 : ( x <= 15.0 ? 2956.0 : ( x <= 23.0 ? 12288.0 : 51772.0 ) ) ) : idx;\n    idx = y == 22.0 ? ( x <= 7.0 ? 14338.0 : ( x <= 15.0 ? 3631.0 : ( x <= 23.0 ? 0.0 : 52012.0 ) ) ) : idx;\n    idx = y == 21.0 ? ( x <= 7.0 ? 35842.0 : ( x <= 15.0 ? 2091.0 : ( x <= 23.0 ? 10250.0 : 776.0 ) ) ) : idx;\n    idx = y == 20.0 ? ( x <= 7.0 ? 51200.0 : ( x <= 15.0 ? 50.0 : ( x <= 23.0 ? 8352.0 : 712.0 ) ) ) : idx;\n    idx = y == 19.0 ? ( x <= 7.0 ? 34818.0 : ( x <= 15.0 ? 40992.0 : ( x <= 23.0 ? 43650.0 : 32896.0 ) ) ) : idx;\n    idx = y == 18.0 ? ( x <= 7.0 ? 40.0 : ( x <= 15.0 ? 2048.0 : ( x <= 23.0 ? 552.0 : 2570.0 ) ) ) : idx;\n    idx = y == 17.0 ? ( x <= 7.0 ? 128.0 : ( x <= 15.0 ? 11256.0 : ( x <= 23.0 ? 8367.0 : 8232.0 ) ) ) : idx;\n    idx = y == 16.0 ? ( x <= 7.0 ? 42.0 : ( x <= 15.0 ? 64010.0 : ( x <= 23.0 ? 35458.0 : 35328.0 ) ) ) : idx;\n    idx = y == 15.0 ? ( x <= 7.0 ? 128.0 : ( x <= 15.0 ? 44960.0 : ( x <= 23.0 ? 34863.0 : 49282.0 ) ) ) : idx;\n    idx = y == 14.0 ? ( x <= 7.0 ? 32783.0 : ( x <= 15.0 ? 3055.0 : ( x <= 23.0 ? 12472.0 : 63522.0 ) ) ) : idx;\n    idx = y == 13.0 ? ( x <= 7.0 ? 63544.0 : ( x <= 15.0 ? 63738.0 : ( x <= 23.0 ? 58080.0 : 52736.0 ) ) ) : idx;\n    idx = y == 12.0 ? ( x <= 7.0 ? 11778.0 : ( x <= 15.0 ? 33772.0 : ( x <= 23.0 ? 52111.0 : 50050.0 ) ) ) : idx;\n    idx = y == 11.0 ? ( x <= 7.0 ? 49195.0 : ( x <= 15.0 ? 16014.0 : ( x <= 23.0 ? 2606.0 : 45187.0 ) ) ) : idx;\n    idx = y == 10.0 ? ( x <= 7.0 ? 64686.0 : ( x <= 15.0 ? 14383.0 : ( x <= 23.0 ? 3128.0 : 60419.0 ) ) ) : idx;\n    idx = y == 9.0 ? ( x <= 7.0 ? 11020.0 : ( x <= 15.0 ? 57599.0 : ( x <= 23.0 ? 3248.0 : 58114.0 ) ) ) : idx;\n    idx = y == 8.0 ? ( x <= 7.0 ? 35532.0 : ( x <= 15.0 ? 50419.0 : ( x <= 23.0 ? 35040.0 : 12800.0 ) ) ) : idx;\n    idx = y == 7.0 ? ( x <= 7.0 ? 57480.0 : ( x <= 15.0 ? 50050.0 : ( x <= 23.0 ? 227.0 : 12304.0 ) ) ) : idx;\n    idx = y == 6.0 ? ( x <= 7.0 ? 45232.0 : ( x <= 15.0 ? 35595.0 : ( x <= 23.0 ? 131.0 : 8257.0 ) ) ) : idx;\n    idx = y == 5.0 ? ( x <= 7.0 ? 59428.0 : ( x <= 15.0 ? 3640.0 : ( x <= 23.0 ? 258.0 : 20.0 ) ) ) : idx;\n    idx = y == 4.0 ? ( x <= 7.0 ? 35361.0 : ( x <= 15.0 ? 10272.0 : ( x <= 23.0 ? 1104.0 : 32833.0 ) ) ) : idx;\n    idx = y == 3.0 ? ( x <= 7.0 ? 33284.0 : ( x <= 15.0 ? 8354.0 : ( x <= 23.0 ? 261.0 : 8212.0 ) ) ) : idx;\n    idx = y == 2.0 ? ( x <= 7.0 ? 1105.0 : ( x <= 15.0 ? 8706.0 : ( x <= 23.0 ? 1104.0 : 10305.0 ) ) ) : idx;\n    idx = y == 1.0 ? ( x <= 7.0 ? 260.0 : ( x <= 15.0 ? 532.0 : ( x <= 23.0 ? 261.0 : 8212.0 ) ) ) : idx;\n    idx = y == 0.0 ? ( x <= 7.0 ? 1105.0 : ( x <= 15.0 ? 16449.0 : ( x <= 23.0 ? 1104.0 : 2113.0 ) ) ) : idx;\n    \n    idx = SPRITE_DEC_4( x, idx );\n\n    color = RGB( 0, 0, 0 );\n    color = idx == 1.0 ? RGB( 64,  44,  0  ) : color;\n    color = idx == 2.0 ? RGB( 0,   148, 0  ) : color;    \n    color = idx == 3.0 ? RGB( 128, 208, 16 ) : color;\n}\n\nvoid SpriteShoreSide( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;    \n    \n\tidx = y == 19.0 ? 43.0 : idx;\n\tidx = y == 18.0 ? 190.0 : idx;\n\tidx = y == 17.0 ? 2025.0 : idx;\n\tidx = y == 16.0 ? 3773.0 : idx;\n\tidx = y == 15.0 ? 3050.0 : idx;\n\tidx = y == 14.0 ? 445.0 : idx;\n\tidx = y == 13.0 ? 2981.0 : idx;\n\tidx = y == 12.0 ? 765.0 : idx;\n\tidx = y == 11.0 ? 4005.0 : idx;\n\tidx = y == 10.0 ? 6869.0 : idx;\n\tidx = y == 9.0 ? 3669.0 : idx;\n\tidx = y == 8.0 ? 15189.0 : idx;\n\tidx = y == 7.0 ? 3029.0 : idx;\n\tidx = y == 6.0 ? 16037.0 : idx;\n\tidx = y == 5.0 ? 11221.0 : idx;\n\tidx = y == 4.0 ? 32341.0 : idx;\n\tidx = y == 3.0 ? 43989.0 : idx;\n\tidx = y == 2.0 ? 64853.0 : idx;\n\tidx = y == 1.0 ? 22869.0 : idx;\n\tidx = y == 0.0 ? 21850.0 : idx;\n    \n    idx = SPRITE_DEC_4( x, idx );\n    \n    float blink = fract( iTime * 3.0 );\n    idx = blink > 0.5 && ( idx == 2.0 || idx == 3.0 ) ? 5.0 - idx : idx;\n    \n    color = y >= 0.0 && y < 20.0 ? RGB( 0, 0, 0 ) : color;\n    color = idx == 1.0 ? RGB( 0,   112, 236 ) : color;\n    color = idx == 2.0 ? RGB( 60,  188, 252 ) : color;\n    color = idx == 3.0 ? RGB( 255, 255, 255 ) : color;\n}\n\nvoid SpriteShore( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;    \n    \n    idx = y == 6.0 ? 0.0 : idx;\n    idx = y == 5.0 ? ( x <= 7.0 ? 65024.0 : ( x <= 15.0 ? 2.0 : ( x <= 23.0 ? 760.0 : 188.0 ) ) ) : idx;\n    idx = y == 4.0 ? ( x <= 7.0 ? 43904.0 : ( x <= 15.0 ? 60143.0 : ( x <= 23.0 ? 2990.0 : 3051.0 ) ) ) : idx;\n    idx = y == 3.0 ? ( x <= 7.0 ? 24303.0 : ( x <= 15.0 ? 49061.0 : ( x <= 23.0 ? 48789.0 : 61095.0 ) ) ) : idx;\n    idx = y == 2.0 ? ( x <= 7.0 ? 21926.0 : ( x <= 15.0 ? 21909.0 : ( x <= 23.0 ? 58709.0 : 42902.0 ) ) ) : idx;\n    idx = y == 1.0 ? ( x <= 7.0 ? 38229.0 : ( x <= 15.0 ? 22869.0 : ( x <= 23.0 ? 21845.0 : 21925.0 ) ) ) : idx;\n    idx = y == 0.0 ? ( x <= 7.0 ? 21865.0 : ( x <= 15.0 ? 22137.0 : 21845.0 ) ) : idx;\n    \n    idx = SPRITE_DEC_4( x, idx );\n    \n    float blink = fract( iTime * 3.0 );\n    idx = blink > 0.5 && ( idx == 2.0 || idx == 3.0 ) ? 5.0 - idx : idx;\n    \n    color = RGB( 0, 0, 0 );\n    color = idx == 1.0 ? RGB( 0,   112, 236 ) : color;\n    color = idx == 2.0 ? RGB( 60,  188, 252 ) : color;\n    color = idx == 3.0 ? RGB( 255, 255, 255 ) : color;\n}\n\nvoid SpriteBossCore( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n    idx = y == 30.0 ? ( x <= 7.0 ? 21844.0 : ( x <= 15.0 ? 85.0 : 0.0 ) ) : idx;\n    idx = y == 29.0 ? ( x <= 7.0 ? 65533.0 : ( x <= 15.0 ? 21845.0 : 5461.0 ) ) : idx;\n    idx = y == 28.0 ? ( x <= 7.0 ? 43689.0 : ( x <= 15.0 ? 65345.0 : 28671.0 ) ) : idx;\n    idx = y == 27.0 ? ( x <= 7.0 ? 43689.0 : ( x <= 15.0 ? 43861.0 : 21930.0 ) ) : idx;\n    idx = y == 26.0 ? ( x <= 7.0 ? 43685.0 : ( x <= 15.0 ? 43841.0 : 21610.0 ) ) : idx;\n    idx = y == 25.0 ? ( x <= 7.0 ? 43665.0 : ( x <= 15.0 ? 43861.0 : 21850.0 ) ) : idx;\n    idx = y == 24.0 ? ( x <= 7.0 ? 43605.0 : ( x <= 15.0 ? 43841.0 : 27462.0 ) ) : idx;\n    idx = y == 23.0 ? ( x <= 7.0 ? 43293.0 : ( x <= 15.0 ? 43861.0 : 27605.0 ) ) : idx;\n    idx = y == 22.0 ? ( x <= 7.0 ? 42361.0 : ( x <= 15.0 ? 27457.0 : 23476.0 ) ) : idx;\n    idx = y == 21.0 ? ( x <= 7.0 ? 20969.0 : ( x <= 15.0 ? 23381.0 : 27565.0 ) ) : idx;\n    idx = y == 20.0 ? ( x <= 7.0 ? 38825.0 : ( x <= 15.0 ? 17855.0 : 23467.0 ) ) : idx;\n    idx = y == 19.0 ? ( x <= 7.0 ? 26281.0 : ( x <= 15.0 ? 55009.0 : 27562.0 ) ) : idx;\n    idx = y == 18.0 ? ( x <= 7.0 ? 26276.0 : ( x <= 15.0 ? 38592.0 : 32746.0 ) ) : idx;\n    idx = y == 17.0 ? ( x <= 7.0 ? 22928.0 : ( x <= 15.0 ? 39808.0 : 23162.0 ) ) : idx;\n    idx = y == 16.0 ? ( x <= 7.0 ? 6544.0 : ( x <= 15.0 ? 39808.0 : 23390.0 ) ) : idx;\n    idx = y == 15.0 ? ( x <= 7.0 ? 6544.0 : ( x <= 15.0 ? 39808.0 : 23390.0 ) ) : idx;\n    idx = y == 14.0 ? ( x <= 7.0 ? 6544.0 : ( x <= 15.0 ? 39808.0 : 23390.0 ) ) : idx;\n    idx = y == 13.0 ? ( x <= 7.0 ? 6564.0 : ( x <= 15.0 ? 39808.0 : 23390.0 ) ) : idx;\n    idx = y == 12.0 ? ( x <= 7.0 ? 22953.0 : ( x <= 15.0 ? 39808.0 : 23162.0 ) ) : idx;\n    idx = y == 11.0 ? ( x <= 7.0 ? 26281.0 : ( x <= 15.0 ? 38592.0 : 32746.0 ) ) : idx;\n    idx = y == 10.0 ? ( x <= 7.0 ? 26281.0 : ( x <= 15.0 ? 38625.0 : 27562.0 ) ) : idx;\n    idx = y == 9.0 ? ( x <= 7.0 ? 38569.0 : ( x <= 15.0 ? 17850.0 : 23466.0 ) ) : idx;\n    idx = y == 8.0 ? ( x <= 7.0 ? 20905.0 : ( x <= 15.0 ? 24405.0 : 27561.0 ) ) : idx;\n    idx = y == 7.0 ? ( x <= 7.0 ? 46441.0 : ( x <= 15.0 ? 27457.0 : 23460.0 ) ) : idx;\n    idx = y == 6.0 ? ( x <= 7.0 ? 44313.0 : ( x <= 15.0 ? 43861.0 : 27541.0 ) ) : idx;\n    idx = y == 5.0 ? ( x <= 7.0 ? 43861.0 : ( x <= 15.0 ? 43841.0 : 27462.0 ) ) : idx;\n    idx = y == 4.0 ? ( x <= 7.0 ? 43729.0 : ( x <= 15.0 ? 43861.0 : 21850.0 ) ) : idx;\n    idx = y == 3.0 ? ( x <= 7.0 ? 45045.0 : ( x <= 15.0 ? 43841.0 : 21610.0 ) ) : idx;\n    idx = y == 2.0 ? ( x <= 7.0 ? 62804.0 : ( x <= 15.0 ? 65365.0 : 21930.0 ) ) : idx;\n    idx = y == 1.0 ? ( x <= 7.0 ? 21504.0 : ( x <= 15.0 ? 21845.0 : 27391.0 ) ) : idx;\n    idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 20480.0 : 5461.0 ) ) : idx;\n    \n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 24.0 ? idx : 0.0;\n\n    float blink = abs( sin( iTime * 3.0 ) ) + 0.5;\n    color = idx == 1.0 ? RGB( 0,   0,   0   ) : color;\n    color = idx == 2.0 ? RGB( 192, 192, 192 ) : color;\n    color = idx == 3.0 ? RGB( 255, 255, 255 ) : color;\n    color = idx == 0.0 && x >= 1.0 && x < 21.0 && y >= 3.0 && y < 30.0 ? blink * RGB( 228, 68, 52 ) : color;\n}\n\nvoid SpriteBossCannonBase( inout vec3 color, float x, float y )\n{\n\tfloat idx = 0.0;\n    \n\tidx = y == 41.0 ? ( x <= 7.0 ? 11606.0 : ( x <= 15.0 ? 395.0 : ( x <= 23.0 ? 43584.0 : 21946.0 ) ) ) : idx;\n\tidx = y == 40.0 ? ( x <= 7.0 ? 11611.0 : ( x <= 15.0 ? 32774.0 : ( x <= 23.0 ? 43595.0 : 22250.0 ) ) ) : idx;\n\tidx = y == 39.0 ? ( x <= 7.0 ? 6491.0 : ( x <= 15.0 ? 11520.0 : ( x <= 23.0 ? 43298.0 : 22250.0 ) ) ) : idx;\n\tidx = y == 38.0 ? ( x <= 7.0 ? 366.0 : ( x <= 15.0 ? 35042.0 : ( x <= 23.0 ? 43275.0 : 23466.0 ) ) ) : idx;\n\tidx = y == 37.0 ? ( x <= 7.0 ? 5486.0 : ( x <= 15.0 ? 11532.0 : ( x <= 23.0 ? 42082.0 : 43946.0 ) ) ) : idx;\n\tidx = y == 36.0 ? ( x <= 7.0 ? 5562.0 : ( x <= 15.0 ? 35042.0 : ( x <= 23.0 ? 41995.0 : 21850.0 ) ) ) : idx;\n\tidx = y == 35.0 ? ( x <= 7.0 ? 5866.0 : ( x <= 15.0 ? 11532.0 : ( x <= 23.0 ? 20578.0 : 5.0 ) ) ) : idx;\n\tidx = y == 34.0 ? ( x <= 7.0 ? 5866.0 : ( x <= 15.0 ? 35042.0 : ( x <= 23.0 ? 11.0 : 27744.0 ) ) ) : idx;\n\tidx = y == 33.0 ? ( x <= 7.0 ? 11178.0 : ( x <= 15.0 ? 11532.0 : ( x <= 23.0 ? 24674.0 : 27756.0 ) ) ) : idx;\n\tidx = y == 32.0 ? ( x <= 7.0 ? 5466.0 : ( x <= 15.0 ? 35042.0 : ( x <= 23.0 ? 24587.0 : 27756.0 ) ) ) : idx;\n\tidx = y == 31.0 ? ( x <= 7.0 ? 21.0 : ( x <= 15.0 ? 11532.0 : ( x <= 23.0 ? 24674.0 : 27756.0 ) ) ) : idx;\n\tidx = y == 30.0 ? ( x <= 7.0 ? 11264.0 : ( x <= 15.0 ? 35042.0 : ( x <= 23.0 ? 24587.0 : 27756.0 ) ) ) : idx;\n\tidx = y == 29.0 ? ( x <= 7.0 ? 11372.0 : ( x <= 15.0 ? 11532.0 : ( x <= 23.0 ? 24674.0 : 27756.0 ) ) ) : idx;\n\tidx = y == 28.0 ? ( x <= 7.0 ? 11372.0 : ( x <= 15.0 ? 35042.0 : ( x <= 23.0 ? 24587.0 : 27756.0 ) ) ) : idx;\n\tidx = y == 27.0 ? ( x <= 7.0 ? 11372.0 : ( x <= 15.0 ? 11532.0 : ( x <= 23.0 ? 24674.0 : 21612.0 ) ) ) : idx;\n\tidx = y == 26.0 ? ( x <= 7.0 ? 11372.0 : ( x <= 15.0 ? 35042.0 : ( x <= 23.0 ? 20491.0 : 84.0 ) ) ) : idx;\n\tidx = y == 25.0 ? ( x <= 7.0 ? 11372.0 : ( x <= 15.0 ? 11532.0 : ( x <= 23.0 ? 98.0 : 27648.0 ) ) ) : idx;\n\tidx = y == 24.0 ? ( x <= 7.0 ? 5228.0 : ( x <= 15.0 ? 35042.0 : ( x <= 23.0 ? 24587.0 : 27756.0 ) ) ) : idx;\n\tidx = y == 23.0 ? ( x <= 7.0 ? 84.0 : ( x <= 15.0 ? 11532.0 : ( x <= 23.0 ? 24674.0 : 27756.0 ) ) ) : idx;\n\tidx = y == 22.0 ? ( x <= 7.0 ? 11264.0 : ( x <= 15.0 ? 35042.0 : ( x <= 23.0 ? 24587.0 : 27756.0 ) ) ) : idx;\n\tidx = y == 21.0 ? ( x <= 7.0 ? 11372.0 : ( x <= 15.0 ? 11532.0 : ( x <= 23.0 ? 24674.0 : 27756.0 ) ) ) : idx;\n\tidx = y == 20.0 ? ( x <= 7.0 ? 11372.0 : ( x <= 15.0 ? 35042.0 : ( x <= 23.0 ? 24587.0 : 27756.0 ) ) ) : idx;\n\tidx = y == 19.0 ? ( x <= 7.0 ? 11372.0 : ( x <= 15.0 ? 11532.0 : ( x <= 23.0 ? 24674.0 : 21612.0 ) ) ) : idx;\n\tidx = y == 18.0 ? ( x <= 7.0 ? 11372.0 : ( x <= 15.0 ? 35042.0 : ( x <= 23.0 ? 20491.0 : 84.0 ) ) ) : idx;\n\tidx = y == 17.0 ? ( x <= 7.0 ? 11372.0 : ( x <= 15.0 ? 11532.0 : ( x <= 23.0 ? 98.0 : 27648.0 ) ) ) : idx;\n\tidx = y == 16.0 ? ( x <= 7.0 ? 5228.0 : ( x <= 15.0 ? 35042.0 : ( x <= 23.0 ? 24587.0 : 27756.0 ) ) ) : idx;\n\tidx = y == 15.0 ? ( x <= 7.0 ? 11348.0 : ( x <= 15.0 ? 11532.0 : ( x <= 23.0 ? 24674.0 : 27756.0 ) ) ) : idx;\n\tidx = y == 14.0 ? ( x <= 7.0 ? 11264.0 : ( x <= 15.0 ? 35042.0 : ( x <= 23.0 ? 24587.0 : 11372.0 ) ) ) : idx;\n\tidx = y == 13.0 ? ( x <= 7.0 ? 11372.0 : ( x <= 15.0 ? 11532.0 : ( x <= 23.0 ? 24674.0 : 35948.0 ) ) ) : idx;\n\tidx = y == 12.0 ? ( x <= 7.0 ? 11372.0 : ( x <= 15.0 ? 35042.0 : ( x <= 23.0 ? 24587.0 : 34924.0 ) ) ) : idx;\n\tidx = y == 11.0 ? ( x <= 7.0 ? 11372.0 : ( x <= 15.0 ? 11532.0 : ( x <= 23.0 ? 24674.0 : 57452.0 ) ) ) : idx;\n\tidx = y == 10.0 ? ( x <= 7.0 ? 11372.0 : ( x <= 15.0 ? 35042.0 : ( x <= 23.0 ? 20491.0 : 57428.0 ) ) ) : idx;\n\tidx = y == 9.0 ? ( x <= 7.0 ? 5228.0 : ( x <= 15.0 ? 11532.0 : ( x <= 23.0 ? 98.0 : 47104.0 ) ) ) : idx;\n\tidx = y == 8.0 ? ( x <= 7.0 ? 108.0 : ( x <= 15.0 ? 35042.0 : ( x <= 23.0 ? 4107.0 : 47125.0 ) ) ) : idx;\n\tidx = y == 7.0 ? ( x <= 7.0 ? 84.0 : ( x <= 15.0 ? 11532.0 : ( x <= 23.0 ? 98.0 : 44544.0 ) ) ) : idx;\n\tidx = y == 6.0 ? ( x <= 7.0 ? 16128.0 : ( x <= 15.0 ? 0.0 : ( x <= 23.0 ? 0.0 : 45044.0 ) ) ) : idx;\n\tidx = y == 5.0 ? ( x <= 7.0 ? 10752.0 : ( x <= 15.0 ? 43689.0 : ( x <= 23.0 ? 5467.0 : 47780.0 ) ) ) : idx;\n\tidx = y == 4.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 43689.0 : ( x <= 23.0 ? 5467.0 : 0.0 ) ) ) : idx;\n\tidx = y == 3.0 ? ( x <= 7.0 ? 10896.0 : ( x <= 15.0 ? 43689.0 : ( x <= 23.0 ? 5467.0 : 64169.0 ) ) ) : idx;\n\tidx = y == 2.0 ? ( x <= 7.0 ? 10916.0 : ( x <= 15.0 ? 43689.0 : ( x <= 23.0 ? 17755.0 : 44714.0 ) ) ) : idx;\n\tidx = y == 1.0 ? ( x <= 7.0 ? 15017.0 : ( x <= 15.0 ? 43689.0 : ( x <= 23.0 ? 37211.0 : 43946.0 ) ) ) : idx;\n\tidx = y == 0.0 ? ( x <= 7.0 ? 15017.0 : ( x <= 15.0 ? 43689.0 : ( x <= 23.0 ? 37211.0 : 43946.0 ) ) ) : idx;\n\n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 32.0 ? idx : 0.0;    \n    \n    color = idx == 0.0 && x >= 0.0 && x < 32.0 && y >= 0.0 && y < 42.0 ? RGB( 0, 0, 0 ) : color;\n    color = idx == 1.0 ? RGB( 4,   88,  180 ) : color;\n    color = idx == 2.0 ? RGB( 192, 192, 192 ) : color;\n    color = idx == 3.0 ? RGB( 255, 255, 255 ) : color;    \n}\n\nvoid SpriteBossTopPanel( inout vec3 color, float x, float y )\n{\n\tfloat idx = 0.0;    \n\n\tidx = y == 51.0 ? ( x <= 7.0 ? 16384.0 : 10922.0 ) : idx;\n\tidx = y == 50.0 ? ( x <= 7.0 ? 62464.0 : 9558.0 ) : idx;\n\tidx = y == 49.0 ? ( x <= 7.0 ? 61248.0 : 9558.0 ) : idx;\n\tidx = y == 48.0 ? ( x <= 7.0 ? 60148.0 : 9558.0 ) : idx;\n\tidx = y == 47.0 ? ( x <= 7.0 ? 60078.0 : 9558.0 ) : idx;\n\tidx = y == 46.0 ? ( x <= 7.0 ? 58793.0 : 9558.0 ) : idx;\n\tidx = y == 45.0 ? ( x <= 7.0 ? 57433.0 : 9558.0 ) : idx;\n\tidx = y == 44.0 ? ( x <= 7.0 ? 57353.0 : 9558.0 ) : idx;\n\tidx = y == 43.0 ? ( x <= 7.0 ? 61193.0 : 9558.0 ) : idx;\n\tidx = y == 42.0 ? ( x <= 7.0 ? 60153.0 : 9558.0 ) : idx;\n\tidx = y == 41.0 ? ( x <= 7.0 ? 58761.0 : 9558.0 ) : idx;\n\tidx = y == 40.0 ? ( x <= 7.0 ? 57609.0 : 9558.0 ) : idx;\n\tidx = y == 39.0 ? ( x <= 7.0 ? 61193.0 : 9558.0 ) : idx;\n\tidx = y == 38.0 ? ( x <= 7.0 ? 60153.0 : 9558.0 ) : idx;\n\tidx = y == 37.0 ? ( x <= 7.0 ? 58761.0 : 9558.0 ) : idx;\n\tidx = y == 36.0 ? ( x <= 7.0 ? 57609.0 : 9558.0 ) : idx;\n\tidx = y == 35.0 ? ( x <= 7.0 ? 61193.0 : 9558.0 ) : idx;\n\tidx = y == 34.0 ? ( x <= 7.0 ? 60153.0 : 9558.0 ) : idx;\n\tidx = y == 33.0 ? ( x <= 7.0 ? 58761.0 : 9558.0 ) : idx;\n\tidx = y == 32.0 ? ( x <= 7.0 ? 57609.0 : 9558.0 ) : idx;\n\tidx = y == 31.0 ? ( x <= 7.0 ? 61193.0 : 9558.0 ) : idx;\n\tidx = y == 30.0 ? ( x <= 7.0 ? 60153.0 : 9558.0 ) : idx;\n\tidx = y == 29.0 ? ( x <= 7.0 ? 58761.0 : 9558.0 ) : idx;\n\tidx = y == 28.0 ? ( x <= 7.0 ? 57609.0 : 9558.0 ) : idx;\n\tidx = y == 27.0 ? ( x <= 7.0 ? 61193.0 : 9558.0 ) : idx;\n\tidx = y == 26.0 ? ( x <= 7.0 ? 60153.0 : 9558.0 ) : idx;\n\tidx = y == 25.0 ? ( x <= 7.0 ? 58761.0 : 9558.0 ) : idx;\n\tidx = y == 24.0 ? ( x <= 7.0 ? 57609.0 : 9558.0 ) : idx;\n\tidx = y == 23.0 ? ( x <= 7.0 ? 61193.0 : 10582.0 ) : idx;\n\tidx = y == 22.0 ? ( x <= 7.0 ? 60153.0 : 11606.0 ) : idx;\n\tidx = y == 21.0 ? ( x <= 7.0 ? 58761.0 : 11606.0 ) : idx;\n\tidx = y == 20.0 ? ( x <= 7.0 ? 57609.0 : 11606.0 ) : idx;\n\tidx = y == 19.0 ? ( x <= 7.0 ? 61193.0 : 11606.0 ) : idx;\n\tidx = y == 18.0 ? ( x <= 7.0 ? 60153.0 : 11606.0 ) : idx;\n\tidx = y == 17.0 ? ( x <= 7.0 ? 58761.0 : 11606.0 ) : idx;\n\tidx = y == 16.0 ? ( x <= 7.0 ? 57609.0 : 11606.0 ) : idx;\n\tidx = y == 15.0 ? ( x <= 7.0 ? 61193.0 : 11606.0 ) : idx;\n\tidx = y == 14.0 ? ( x <= 7.0 ? 60153.0 : 11606.0 ) : idx;\n\tidx = y == 13.0 ? ( x <= 7.0 ? 58761.0 : 11606.0 ) : idx;\n\tidx = y == 12.0 ? ( x <= 7.0 ? 57609.0 : 11606.0 ) : idx;\n\tidx = y == 11.0 ? ( x <= 7.0 ? 59913.0 : 11606.0 ) : idx;\n\tidx = y == 10.0 ? ( x <= 7.0 ? 60073.0 : 11606.0 ) : idx;\n\tidx = y == 9.0 ? ( x <= 7.0 ? 65449.0 : 11611.0 ) : idx;\n\tidx = y == 8.0 ? ( x <= 7.0 ? 60158.0 : 6491.0 ) : idx;\n\tidx = y == 7.0 ? ( x <= 7.0 ? 43684.0 : 366.0 ) : idx;\n\tidx = y == 6.0 ? ( x <= 7.0 ? 43684.0 : 5486.0 ) : idx;\n\tidx = y == 5.0 ? ( x <= 7.0 ? 43664.0 : 5562.0 ) : idx;\n\tidx = y == 4.0 ? ( x <= 7.0 ? 43664.0 : 5866.0 ) : idx;\n\tidx = y == 3.0 ? ( x <= 7.0 ? 43584.0 : 5866.0 ) : idx;\n\tidx = y == 2.0 ? ( x <= 7.0 ? 43264.0 : 11178.0 ) : idx;\n\tidx = y == 1.0 ? ( x <= 7.0 ? 43264.0 : 5466.0 ) : idx;\n\tidx = y == 0.0 ? ( x <= 7.0 ? 21504.0 : 21.0 ) : idx;\n    \n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 15.0 ? idx : 0.0;    \n    \n    color = idx == 0.0 && x >= 0.0 && x < 15.0 && y >= 8.0 && y < 48.0 ? RGB( 0, 0, 0 ) : color;\n    color = idx == 1.0 ? RGB( 4,   88,  180 ) : color;\n    color = idx == 2.0 ? RGB( 192, 192, 192 ) : color;\n    color = idx == 3.0 ? RGB( 255, 255, 255 ) : color;        \n}\n\nvoid SpriteBossCannon0( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n\tidx = y == 5.0 ? ( x <= 7.0 ? 39340.0 : 1706.0 ) : idx;\n\tidx = y == 4.0 ? ( x <= 7.0 ? 30663.0 : 2044.0 ) : idx;\n\tidx = y == 3.0 ? ( x <= 7.0 ? 17415.0 : 1024.0 ) : idx;\n\tidx = y == 2.0 ? ( x <= 7.0 ? 30663.0 : 2044.0 ) : idx;\n\tidx = y == 1.0 ? ( x <= 7.0 ? 26615.0 : 2047.0 ) : idx;\n\tidx = y == 0.0 ? ( x <= 7.0 ? 39340.0 : 682.0 ) : idx;\n\n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 14.0 ? idx : 0.0;\n\n    color = idx == 0.0 && x >= 1.0 && x < 11.0 && y >= 0.0 && y < 6.0 ? RGB( 255, 255, 255 ) : color;    \n    color = idx == 1.0 ? RGB( 0,   0,   0 )   : color;\n    color = idx == 2.0 ? RGB( 4,   88,  180 ) : color;\n    color = idx == 3.0 ? RGB( 192, 192, 192 ) : color;\n}\n\nvoid SpriteBossCannon1( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n\tidx = y == 5.0 ? ( x <= 7.0 ? 39340.0 : 1706.0 ) : idx;\n\tidx = y == 4.0 ? ( x <= 7.0 ? 30663.0 : 2044.0 ) : idx;\n\tidx = y == 3.0 ? ( x <= 7.0 ? 17415.0 : 256.0 ) : idx;\n\tidx = y == 2.0 ? ( x <= 7.0 ? 30663.0 : 508.0 ) : idx;\n\tidx = y == 1.0 ? ( x <= 7.0 ? 26615.0 : 127.0 ) : idx;\n\tidx = y == 0.0 ? ( x <= 7.0 ? 39340.0 : 106.0 ) : idx;\n\n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 14.0 ? idx : 0.0;\n\n    color = idx == 0.0 && x >= 1.0 && x < 12.0 && y >= 0.0 && y < 6.0 ? RGB( 255, 255, 255 ) : color;    \n    color = idx == 1.0 ? RGB( 0,   0,   0 )   : color;\n    color = idx == 2.0 ? RGB( 4,   88,  180 ) : color;\n    color = idx == 3.0 ? RGB( 192, 192, 192 ) : color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float resMultX      = floor( iResolution.x / NES_RES_X );\n    float resMultY      = floor( iResolution.y / NES_RES_Y );\n    float resRcp        = 1.0 / max( min( resMultX, resMultY ), 1.0 );\n    float screenWidth   = floor( iResolution.x * resRcp );\n    float screenHeight  = floor( iResolution.y * resRcp );\n    float pixelX        = floor( fragCoord.x * resRcp );\n    float pixelY        = floor( fragCoord.y * resRcp );\n    \n    vec4 camera         = LoadValue( txCamera );\n    vec4 bridge         = LoadValue( txBridge );\n    vec4 bossCore       = LoadValue( txBossCore );\n    vec4 bossCannon0    = LoadValue( txBossCannon0 );\n    vec4 bossCannon1    = LoadValue( txBossCannon1 );\n    \n    float worldX        = pixelX + camera.x;\n    float worldY        = pixelY - 8.0;\n    float tileX         = floor( worldX / 32.0 );\n    float tile8X        = floor( worldX / 8.0 );\n    float tile32Y       = floor( worldY / 32.0 );\n    float tile16Y       = floor( worldY / 16.0 );\n    float tile8Y        = floor( worldY / 8.0 );\n    float worldXMod16   = mod( worldX, 16.0 );\n    float worldYMod16   = mod( worldY, 16.0 );    \n    float worldYMod8    = mod( worldY,  8.0 );\n    float worldXMod32   = mod( worldX, 32.0 );\n    float worldYMod32   = mod( worldY, 32.0 );\n    \n\n    vec3 color = RGB( 0, 0, 0 );\n    \n    // stars\n    float starRand = Rand( vec2( worldX * 0.01, worldY * 0.01 ) );\n    if ( starRand > 0.998 && worldY > 160.0 )\n    {\n        color = fract( iTime + starRand * 113.17 + worldX * 3.14 ) < 0.5 ? RGB( 255, 255, 255 ) : RGB( 0, 112, 236 );\n    }\n    \n    // background water\n    if ( worldY < 80.0 && worldX < WATER_END )\n    {\n        color = RGB( 0, 112, 236 );\n    }\n   \n    if ( worldX >= JUNGLE_START + 3.0 && worldX < JUNGLE_END )\n    {\n        SpriteTreeTrunk( color, mod( worldX - 3.0, 16.0 ), mod( worldY, 2.0 ) );    \n        \n    }\n\n    if ( worldX >= JUNGLE_START + 3.0 && worldX < JUNGLE_END && floor( ( worldY + 5.0 ) / 32.0 ) == 6.0 )\n    {\n        SpriteLeaves( color, mod( worldX - 3.0, 32.0 ), mod( worldY + 5.0, 32.0 ) );\n    }\n    \n    bool grass0 = false;\n    bool grass2 = false;\n    bool grass3 = false;\n    bool grass4 = false;\n    bool grass6 = false;\n    bool grass8 = false;\n    \n    if (        ( tileX >= 52.0 && tileX < 67.0 ) \n            ||  ( tileX >= 72.0 && tileX < 77.0 )   \n            ||  ( tileX >= 86.0 && tileX < 88.0 ) )\n    {\n        grass8 = true;\n    }\n    \n    if (        ( tileX >= 3.0   && tileX < 30.0 ) \n            ||  ( tileX >= 35.0  && tileX < 40.0 ) \n            ||  ( tileX >= 45.0  && tileX < 53.0 ) \n            ||  ( tileX >= 66.0  && tileX < 73.0 )\n            ||  ( tileX >= 78.0  && tileX < 80.0 )\n            ||  ( tileX >= 85.0  && tileX < 87.0 )\n            ||  ( tileX >= 89.0  && tileX < 91.0 )\n            ||  ( tileX >= 102.0 && tileX < 106.0 ) )\n    {\n        grass6 = true;\n    }\n    \n    if (        ( tileX >= 10.0 && tileX < 13.0 )\n            ||  ( tileX >= 18.0 && tileX < 20.0 )\n            ||  ( tileX >= 58.0 && tileX < 65.0 )\n            ||  ( tileX >= 76.0 && tileX < 79.0 )\n            ||  ( tileX >= 81.0 && tileX < 83.0 )\n            ||  ( tileX >= 90.0 && tileX < 95.0 )\n            ||  ( tileX >= 100.0 && tileX < 102.0 )\n            ||  ( tileX == 106.0 ) )\n    {\n        grass4 = true;\n    }\n    \n    if (        ( tileX >= 26.0 && tileX < 29.0 )\n            ||  ( tileX >= 55.0 && tileX < 57.0 )\n            ||  ( tileX == 74.0 )\n            ||  ( tileX == 87.0 )\n            ||  ( tileX >= 103.0 && tileX < 106.0 ) )\n    {\n        grass3 = true;\n    }\n        \n    if (        ( tileX == 13.0 || tileX == 16.0 )\n            ||  ( tileX >= 68.0 && tileX < 70.0 )\n            ||  ( tileX >= 71.0 && tileX < 73.0 )\n            ||  ( tileX >= 82.0 && tileX < 85.0 )\n            ||  ( tileX >= 97.0 && tileX < 99.0 )\n            ||  ( tileX == 107.0 ) )\n    {\n        grass2 = true;\n    }\n        \n    if (        ( tileX >= 14.0 && tileX < 16.0 ) \n            ||  ( tileX >= 24.0 && tileX < 26.0 ) \n            ||  ( tileX >= 52.0 && tileX < 55.0 ) \n            ||  ( tileX >= 62.0 && tileX < 68.0 )\n            ||  ( tileX == 81.0 )\n            ||  ( tileX == 86.0 )\n            ||  ( tileX >= 93.0 && tileX < 96.0 )\n            ||  ( tileX >= 102.0 ) )      \n    {\n        grass0 = true;\n    }\n    \n    float rockTile32Y = -1.0;\n    if ( grass2 )\n    {\n        rockTile32Y = 1.0;\n    }       \n    if ( grass4 )\n    {\n        rockTile32Y = 2.0;\n    }        \n    if ( grass6 )\n    {\n        rockTile32Y = 3.0;\n    }\n    if ( grass8 )\n    {\n        rockTile32Y = 4.0;\n    }    \n    \n    if ( tile32Y < rockTile32Y )\n    {\n        SpriteRock( color, worldXMod32, mod( worldY + 8.0, 32.0 ) );    \n    }\n    \n    if (        ( tile8Y == -1.0 && grass0 ) \n            ||  ( tile8Y == 3.0 && grass2 )\n            ||  ( tile8Y == 5.0 && grass3 )\n            ||  ( tile8Y == 7.0 && grass4 )\n            ||  ( tile8Y == 11.0 && grass6 )\n            ||  ( tile8Y == 15.0 && grass8 ) )\n    {\n        SpriteRockTop( color, worldXMod32, worldYMod8 );\n    }    \n    \n    // foreground water\n    if ( ( worldY < 16.0 && worldX < WATER_END ) \n        || ( tile16Y < 2.0 && (\n                    ( tileX < 10.0 ) \n                ||  ( tileX == 17.0 )\n                ||  ( tileX >= 20.0 && tileX < 23.0 )\n                ||  ( tileX >= 33.0 && tileX < 47.0 )\n                ||  ( tileX == 57.0 ) \n           ) )\n       )\n    {\n        color = RGB( 0, 112, 236 );\n    }    \n    \n    if (    ( floor( ( worldY - 1.0 ) / 8.0 ) == 3.0 && ( ( tileX >= 3.0 && tileX < 10.0 ) || ( tileX == 17.0 ) || ( tileX >= 20.0 && tileX < 23.0 ) || ( tileX >= 35.0 && tileX < 40.0 ) || ( tileX >= 45.0 && tileX < 47.0 ) || ( tileX == 57.0 ) ) )\n         || ( floor( ( worldY - 1.0 ) / 8.0 ) == 1.0 && ( ( tileX >= 10.0 && tileX < 17.0 ) || ( tileX >= 18.0 && tileX < 20.0 ) || ( tileX >= 23.0 && tileX < 30.0 ) || ( tileX >= 47.0 && tileX < 57.0 ) || ( tileX >= 58.0 && tileX < 63.0 ) ) )\n         || ( floor( ( worldY - 1.0 ) / 8.0 ) == -1.0 && ( ( tileX >= 14.0 && tileX < 16.0 ) || ( tileX >= 24.0 && tileX < 26.0 ) || ( tileX >= 52.0 && tileX < 55.0 ) || ( tileX == 62.0 ) ) )\n       )\n    {\n        SpriteShore( color, mod( worldX, 32.0 ), mod( worldY - 1.0, 8.0 ) );  \n    }    \n    \n    if ( floor( ( worldY ) / 24.0 ) == 1.0 && ( tile8X == 11.0 || tile8X == 139.0 || tile8X == 160.0 || tile8X == 179.0 ) )\n    {\n        float shoreX = ( tile8X == 160.0 ) ? 7.0 - worldX : worldX;\n        SpriteShoreSide( color, mod( shoreX, 8.0 ), mod( worldY, 24.0 ) );\n    }        \n    \n\tif ( floor( ( worldY + 14.0 ) / 24.0 ) == 1.0 && ( tile8X == 39.0 || tile8X == 68.0 || tile8X == 72.0 || tile8X == 80.0 || tile8X == 91.0 || tile8X == 120.0 || tile8X == 187.0 || tile8X == 228.0 || tile8X == 231.0 ) )\n    {\n        float shoreX = ( tile8X == 68.0 || tile8X == 80.0 || tile8X == 120.0 || tile8X == 228.0 ) ? 7.0 - worldX : worldX;\n        SpriteShoreSide( color, mod( shoreX, 8.0 ), mod( worldY + 14.0, 24.0 ) );\n    }    \n    \n    if ( floor( ( worldY + 6.0 ) / 24.0 ) == 0.0 && ( tile8X == 55.0 || tile8X == 64.0 || tile8X == 95.0 || tile8X == 104.0 || tile8X == 207.0 || tile8X == 220.0 || tile8X == 247.0 ) )\n    {\n        float shoreX = ( tile8X == 64.0 || tile8X == 104.0 || tile8X == 220.0 ) ? 7.0 - worldX : worldX;\n    \tSpriteShoreSide( color, mod( shoreX, 8.0 ), mod( worldY + 6.0, 24.0 ) );\n    }\n    \n    if (        ( tile16Y == 0.0 && grass0 ) \n            ||  ( tile16Y == 2.0 && grass2 )\n            ||  ( tile16Y == 3.0 && grass3 )\n            ||  ( tile16Y == 4.0 && grass4 )\n            ||  ( tile16Y == 6.0 && grass6 )\n            ||  ( tile16Y == 8.0 && grass8 ) )\n    {\n        SpriteGrass( color, worldXMod32, worldYMod16 );\n    }\n    \n    if (        ( grass8 && tile16Y == 9.0 )\n            ||  ( !grass8 && grass6 && tile16Y == 7.0 )\n            ||  ( !grass8 && !grass6 && grass4 && tile16Y == 5.0 )\n            ||  ( !grass8 && !grass6 && !grass4 && grass2 && tile16Y == 3.0 )\n            ||  ( !grass8 && !grass6 && !grass4 && !grass2 && grass0 && tile16Y == 1.0 ) )\n    {\n        SpriteBush( color, worldXMod32, worldYMod16 );\n    }\n    \n    if ( floor( ( worldY - 1.0 ) / 24.0 ) == 5.0 && ( \n                ( tileX >= 3.0 && tileX < 30.0 ) \n            ||  ( tileX >= 35.0 && tileX < 40.0 )\n            ||  ( tileX >= 45.0 && tileX < 52.0 )) )\n    {\n\t\tSpriteTreeMiddle( color, mod( worldX + 8.0, 16.0 ), mod( worldY - 1.0, 24.0 ) );\n    }\n    \n    if ( floor( ( worldY - 1.0 ) / 24.0 ) == 5.0 && \n        ( ( tile8X == 12.0 || tile8X == 34.0 || tile8X == 140.0 || tile8X == 180.0 )\n        || ( mod( tile8X, 16.0 ) == 0.0 ) && tile8X < 119.0 ) )\n    {\n    \tSpriteTreeStart( color, mod( worldX, 8.0 ), mod( worldY - 1.0, 24.0 ) );\n    }\n    \n    if ( floor( ( worldY - 1.0 ) / 24.0 ) == 5.0 && \n        ( ( tile8X == 119.0 || tile8X == 159.0 || tile8X == 207.0 )\n        || ( mod( tile8X + 1.0, 16.0 ) == 0.0 ) && tile8X < 119.0 ) )\n    {\n    \tSpriteTreeEnd( color, mod( worldX, 8.0 ), mod( worldY - 1.0, 24.0 ) );\n    }    \n    \n    if ( floor( ( worldY + 12.0 ) / 32.0 ) == 3.0 && bridge.x < tileX && (\n            ( tileX >= BRIDGE_0_START_TILE && tileX < BRIDGE_0_END_TILE )\n        ||  ( tileX >= BRIDGE_1_START_TILE && tileX < BRIDGE_1_END_TILE )\n       ) )\n    {\n        SpriteBridge( color, worldXMod32, mod( worldY + 12.0, 32.0 ) );\n    }  \n    \n    // boss back\n    if ( worldX > 3506.0 && worldY < 168.0 )\n    {\n        float idx = 2.0;\n                \n        // horizontal bars\n        idx = mod( worldX, 16.0 ) == 0.0 && mod( worldY + 8.0, 88.0 ) < 76.0 ? 3.0 : idx;\n        idx = mod( worldX + 8.0, 16.0 ) == 0.0 && mod( worldY + 8.0, 88.0 ) < 76.0 ? 1.0 : idx;\n        idx = mod( worldX, 16.0 ) > 8.0 && mod( worldY + 8.0, 88.0 ) == 76.0 ? 1.0 : idx;\n        \n        // vertical bars\n        idx = mod( worldY + 8.0, 88.0 ) == 0.0 ? 1.0 : idx;\n        idx = mod( worldY + 9.0, 88.0 ) == 0.0 ? 3.0 : idx;\n        idx = mod( worldY + 10.0, 88.0 ) == 0.0 ? 4.0 : idx;\n        idx = mod( worldY + 11.0, 88.0 ) == 0.0 ? 3.0 : idx;\n        idx = mod( worldY + 12.0, 88.0 ) == 0.0 ? 3.0 : idx;\n        idx = mod( worldY + 13.0, 88.0 ) == 0.0 ? 1.0 : idx;\n        idx = worldX == 3506.0 + 1.0 ? 3.0 : idx;\n        idx = worldX == 3506.0 + 2.0 ? 4.0 : idx;\n        \n        color = idx == 1.0 ? RGB( 0,   0,   0   ) : color;\n        color = idx == 2.0 ? RGB( 4,   88,  180 ) : color;\n        color = idx == 3.0 ? RGB( 192, 192, 192 ) : color;\n        color = idx == 4.0 ? RGB( 255, 255, 255 ) : color;\n    }\n    \n    // boss front\n    if ( worldX >= 3476.0 && worldX <= 3506.0 && worldY >= 16.0 && worldY <= 152.0 + floor( 0.5 * ( worldX - 3476.0 ) ) )\n    {\n        float idx = 3.0;\n        \n        // vertical bars\n        idx = mod( worldX, 4.0 ) == 0.0       ? 1.0 : idx;\n        idx = mod( worldX - 1.0, 8.0 ) == 0.0 ? 4.0 : idx;\n        idx = mod( worldX - 3.0, 8.0 ) == 0.0 ? 2.0 : idx;\n        \n        // top\n        idx = worldY == 152.0 + floor( 0.5 * ( worldX - 3476.0 ) ) ? 2.0 : idx;\n        \n        // middle\n        idx = worldY == 83.0 && worldX < 3504.0 ? 1.0 : idx;\n        idx = worldY == 82.0 && worldX >= 3477.0 && worldX < 3504.0 ? 3.0 : idx;\n        idx = worldY == 81.0 && worldX >= 3477.0 && worldX < 3504.0 ? 3.0 : idx;\n        idx = worldY == 81.0 && mod( worldX + 4.0, 8.0 ) > 4.0 && worldX < 3504.0 ? 1.0 : idx;\n        \n        // bottom\n        idx = worldY < 20.0 - floor( 0.2 * ( worldX - 3476.0 ) ) ? 1.0 : idx;\n        idx = worldY == 20.0 - floor( 0.2 * ( worldX - 3476.0 ) ) ? 2.0 : idx;\n        \n        \n        color = idx == 1.0 ? RGB( 0,   0,   0   ) : color;\n        color = idx == 2.0 ? RGB( 4,   88,  180 ) : color;\n        color = idx == 3.0 ? RGB( 192, 192, 192 ) : color;\n        color = idx == 4.0 ? RGB( 255, 255, 255 ) : color;        \n    }\n    \n    SpriteBossCore( color, worldX - bossCore.x + BOSS_CORE_SIZE.x * 0.5, worldY - bossCore.y );\n    SpriteBossCannonBase( color, worldX - 3477.0, worldY - 84.0 );\n    SpriteBossTopPanel( color, worldX - 3469.0, worldY - 116.0 );\n    SpriteBossTopPanel( color, worldX - 3493.0, worldY - 120.0 );\n    SpriteBossCannon0( color, worldX - bossCannon0.x + BOSS_CANNON_SIZE.x * 0.5, worldY - bossCannon0.y );\n    SpriteBossCannon1( color, worldX - bossCannon1.x + BOSS_CANNON_SIZE.x * 0.5, worldY - bossCannon1.y );\n    \n    fragColor = vec4( color, 1.0 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Foreground\n\n#define SPRITE_DEC_2( x, i ) mod( floor( i / pow( 2.0, mod( x, 24.0 ) ) ), 2.0 )\n#define SPRITE_DEC_3( x, i ) mod( floor( i / pow( 4.0, mod( x, 11.0 ) ) ), 4.0 )\n#define SPRITE_DEC_4( x, i ) mod( floor( i / pow( 4.0, mod( x, 8.0 ) ) ), 4.0 )\n#define RGB( r, g, b ) vec3( float( r ) / 255.0, float( g ) / 255.0, float( b ) / 255.0 )\n\nconst float NES_RES_X           = 224.0;\nconst float NES_RES_Y           = 192.0;\nconst float STATE_RUN           = 0.0;\nconst float STATE_PRONE         = 1.0;\nconst float STATE_JUMP          = 2.0;\nconst float STATE_FALL          = 3.0;\nconst float STATE_WATER         = 4.0;\nconst float STATE_UNDER_WATER   = 5.0;\nconst vec2  BILL_PRONE_SIZE     = vec2( 32.0, 18.0 );\nconst vec2  BILL_RUN_SIZE       = vec2( 24.0, 34.0 );\nconst vec2  BILL_JUMP_SIZE      = vec2( 20.0, 20.0 );\nconst vec2  SOLDIER_SIZE        = vec2( 18.0, 32.0 );\nconst vec2  SNIPER_SIZE         = vec2( 24.0, 32.0 );\nconst vec2  TURRET_SIZE         = vec2( 32.0, 32.0 );\nconst vec2  BOSS_CORE_SIZE      = vec2( 24.0, 31.0 );\n\n// storage\nconst vec2 txPlayer \t\t\t= vec2( 0.0, 0.0 ); \t// xy - pos, z - jump start, w - jump dir\nconst vec2 txPlayerState\t\t= vec2( 1.0, 0.0 ); \t// x - state, y - frame, z - jump tick, w - lifes\nconst vec2 txPlayerDir\t\t\t= vec2( 2.0, 0.0 ); \t// xy - dir, z - flip, w - immortality\nconst vec2 txPlayerWeapon\t\t= vec2( 3.0, 0.0 ); \t// x - weapon, y - weapon cooldown, z - weapon fire rate, w - weapon bullet num\nconst vec2 txCamera \t\t\t= vec2( 4.0, 0.0 ); \t// x - cam offset, y - spawn counter, z - soldier spawn counter\nconst vec2 txSoldier0 \t\t\t= vec2( 5.0, 0.0 ); \t// xy - pos, z - flip\nconst vec2 txSoldier1 \t\t\t= vec2( 5.0, 1.0 ); \t// xy - pos, z - flip\nconst vec2 txSoldier2 \t\t\t= vec2( 5.0, 2.0 ); \t// xy - pos, z - flip\nconst vec2 txSoldier0State \t\t= vec2( 6.0, 0.0 ); \t// x - state, y - frame, z - jump tick\nconst vec2 txSoldier1State \t\t= vec2( 6.0, 1.0 ); \t// x - state, y - frame, z - jump tick\nconst vec2 txSoldier2State \t\t= vec2( 6.0, 2.0 ); \t// x - state, y - frame, z - jump tick\nconst vec2 txSniper\t \t\t\t= vec2( 7.0, 0.0 ); \t// xy - pos, z - flip, w - weapon cooldown\nconst vec2 txPlayerBullet0 \t\t= vec2( 8.0, 0.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet1 \t\t= vec2( 8.0, 1.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet2 \t\t= vec2( 8.0, 2.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet3 \t\t= vec2( 8.0, 3.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet4 \t\t= vec2( 8.0, 4.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet5 \t\t= vec2( 8.0, 5.0 ); \t// xy - pos, xy - dir\nconst vec2 txEnemyBullet0 \t\t= vec2( 9.0, 0.0 ); \t// xy - pos, xy - dir\nconst vec2 txEnemyBullet1 \t\t= vec2( 9.0, 1.0 ); \t// xy - pos, xy - dir\nconst vec2 txEnemyBullet2 \t\t= vec2( 9.0, 2.0 ); \t// xy - pos, xy - dir\nconst vec2 txEnemyBullet3 \t\t= vec2( 9.0, 3.0 ); \t// xy - pos, xy - dir\nconst vec2 txExplosion \t\t\t= vec2( 10.0, 0.0 ); \t// xy - pos, z - frame\nconst vec2 txHit \t\t\t\t= vec2( 11.0, 0.0 ); \t// xy - pos, z - frame\nconst vec2 txTurret0\t\t\t= vec2( 12.0, 0.0 ); \t// xy - pos, z - angle\nconst vec2 txTurret1\t\t\t= vec2( 12.0, 1.0 ); \t// xy - pos, z - angle\nconst vec2 txTurret0State\t\t= vec2( 13.0, 0.0 ); \t// x - HP, y - weapon cooldown\nconst vec2 txTurret1State\t\t= vec2( 13.0, 1.0 ); \t// x - HP, y - weapon cooldown\nconst vec2 txPowerUp\t\t\t= vec2( 14.0, 0.0 ); \t// xy - pos, z - frame\nconst vec2 txPowerUpState\t\t= vec2( 15.0, 0.0 ); \t// x - state, y - initial height, z - jump tick\nconst vec2 txBossCore\t\t\t= vec2( 16.0, 0.0 ); \t// xy - pos, z - HP\nconst vec2 txBossCannon0\t\t= vec2( 17.0, 0.0 ); \t// xy - pos, z - cooldown, w - HP\nconst vec2 txBossCannon1\t\t= vec2( 17.0, 1.0 ); \t// xy - pos, z - cooldown, w - HP\nconst vec2 txBossBullet0\t\t= vec2( 18.0, 0.0 ); \t// xy - pos, zw - velocity\nconst vec2 txBossBullet1\t\t= vec2( 18.0, 1.0 ); \t// xy - pos, zw - velocity\nconst vec2 txGameState\t\t\t= vec2( 19.0, 0.0 ); \t// x - state, y - state tick\nconst vec2 txBridge\t\t\t\t= vec2( 20.0, 0.0 ); \t// x - draw start, y - explode tick\n\nvoid Swap( inout float a, inout float b )\n{\n    float tmp = a;\n    a = b;\n    b = tmp;\n}\n\nvec4 LoadValue( vec2 tx )\n{\n    return floor( texture( iChannel0, ( tx + 0.5 ) / iChannelResolution[ 0 ].xy ) );\n}\n\nvoid SpriteTurret( inout vec3 color, float x, float y, float frame )\n{\n    float idx = 0.0;    \n    \n    if ( frame == 0.0 )\n    {\n        // left\n        idx = y == 13.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 21844.0 : 0.0 ) ) : idx;\n        idx = y == 12.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 65533.0 : 21.0 ) ) : idx;\n        idx = y == 11.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 48927.0 : 127.0 ) ) : idx;\n        idx = y == 10.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 44922.0 : 426.0 ) ) : idx;\n        idx = y == 9.0 ? ( x <= 7.0 ? 21780.0 : ( x <= 15.0 ? 27621.0 : 425.0 ) ) : idx;\n        idx = y == 8.0 ? ( x <= 7.0 ? 43625.0 : ( x <= 15.0 ? 11162.0 : 681.0 ) ) : idx;\n        idx = y == 7.0 ? ( x <= 7.0 ? 65469.0 : ( x <= 15.0 ? 11127.0 : 681.0 ) ) : idx;\n        idx = y == 6.0 ? ( x <= 7.0 ? 43625.0 : ( x <= 15.0 ? 11262.0 : 681.0 ) ) : idx;\n        idx = y == 5.0 ? ( x <= 7.0 ? 21845.0 : ( x <= 15.0 ? 27509.0 : 425.0 ) ) : idx;\n        idx = y == 4.0 ? ( x <= 7.0 ? 21844.0 : ( x <= 15.0 ? 44650.0 : 427.0 ) ) : idx;\n        idx = y == 3.0 ? ( x <= 7.0 ? 17680.0 : ( x <= 15.0 ? 47642.0 : 362.0 ) ) : idx;\n        idx = y == 2.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 43689.0 : 341.0 ) ) : idx;\n        idx = y == 1.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 21845.0 : 85.0 ) ) : idx;\n        idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 21844.0 : 5.0 ) ) : idx; \n    }\n    else if ( frame == 1.0 )\n    {\n        // up - left\n        idx = y == 14.0 ? ( x <= 7.0 ? 276.0 : ( x <= 15.0 ? 64.0 : 0.0 ) ) : idx;\n        idx = y == 13.0 ? ( x <= 7.0 ? 361.0 : ( x <= 15.0 ? 1488.0 : 0.0 ) ) : idx;\n        idx = y == 12.0 ? ( x <= 7.0 ? 5753.0 : ( x <= 15.0 ? 24564.0 : 0.0 ) ) : idx;\n        idx = y == 11.0 ? ( x <= 7.0 ? 27541.0 : ( x <= 15.0 ? 48253.0 : 1.0 ) ) : idx;\n        idx = y == 10.0 ? ( x <= 7.0 ? 47701.0 : ( x <= 15.0 ? 65014.0 : 7.0 ) ) : idx;\n        idx = y == 9.0 ? ( x <= 7.0 ? 58708.0 : ( x <= 15.0 ? 45018.0 : 30.0 ) ) : idx;\n        idx = y == 8.0 ? ( x <= 7.0 ? 38208.0 : ( x <= 15.0 ? 43766.0 : 106.0 ) ) : idx;\n        idx = y == 7.0 ? ( x <= 7.0 ? 25856.0 : ( x <= 15.0 ? 27381.0 : 169.0 ) ) : idx;\n        idx = y == 6.0 ? ( x <= 7.0 ? 41984.0 : ( x <= 15.0 ? 10939.0 : 169.0 ) ) : idx;\n        idx = y == 5.0 ? ( x <= 7.0 ? 41984.0 : ( x <= 15.0 ? 19129.0 : 169.0 ) ) : idx;\n        idx = y == 4.0 ? ( x <= 7.0 ? 41984.0 : ( x <= 15.0 ? 19124.0 : 170.0 ) ) : idx;\n        idx = y == 3.0 ? ( x <= 7.0 ? 37888.0 : ( x <= 15.0 ? 38587.0 : 106.0 ) ) : idx;\n        idx = y == 2.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 44713.0 : 106.0 ) ) : idx;\n        idx = y == 1.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 43669.0 : 90.0 ) ) : idx;\n        idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 21844.0 : 85.0 ) ) : idx;   \n    }\n    else\n    {\n        // down - left\n        idx = y == 14.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 21824.0 : 5.0 ) ) : idx;\n        idx = y == 13.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 65428.0 : 27.0 ) ) : idx;\n        idx = y == 12.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 45053.0 : 106.0 ) ) : idx;\n        idx = y == 11.0 ? ( x <= 7.0 ? 53248.0 : ( x <= 15.0 ? 38591.0 : 106.0 ) ) : idx;\n        idx = y == 10.0 ? ( x <= 7.0 ? 62464.0 : ( x <= 15.0 ? 19188.0 : 170.0 ) ) : idx;\n        idx = y == 9.0 ? ( x <= 7.0 ? 58368.0 : ( x <= 15.0 ? 19133.0 : 169.0 ) ) : idx;\n        idx = y == 8.0 ? ( x <= 7.0 ? 41984.0 : ( x <= 15.0 ? 10938.0 : 169.0 ) ) : idx;\n        idx = y == 7.0 ? ( x <= 7.0 ? 25600.0 : ( x <= 15.0 ? 27365.0 : 169.0 ) ) : idx;\n        idx = y == 6.0 ? ( x <= 7.0 ? 37888.0 : ( x <= 15.0 ? 43750.0 : 107.0 ) ) : idx;\n        idx = y == 5.0 ? ( x <= 7.0 ? 58624.0 : ( x <= 15.0 ? 44954.0 : 90.0 ) ) : idx;\n        idx = y == 4.0 ? ( x <= 7.0 ? 47680.0 : ( x <= 15.0 ? 47526.0 : 86.0 ) ) : idx;\n        idx = y == 3.0 ? ( x <= 7.0 ? 27540.0 : ( x <= 15.0 ? 43113.0 : 85.0 ) ) : idx;\n        idx = y == 2.0 ? ( x <= 7.0 ? 22137.0 : ( x <= 15.0 ? 23205.0 : 5.0 ) ) : idx;\n        idx = y == 1.0 ? ( x <= 7.0 ? 38249.0 : ( x <= 15.0 ? 21909.0 : 1.0 ) ) : idx;\n        idx = y == 0.0 ? ( x <= 7.0 ? 21844.0 : ( x <= 15.0 ? 21845.0 : 0.0 ) ) : idx;      \n    }\n\n    idx = SPRITE_DEC_4( x, idx );    \n    idx = x >= 0.0 && x < 21.0 ? idx : 0.0;\n\n    float blink = abs( sin( iTime * 3.0 ) ) + 0.5;\n    \n    color = idx == 0.0 && x >= 8.0 && x < 16.0 && y >= 3.0 && y < 12.0 ? blink * RGB( 228, 68, 52 ) : color;\n    color = idx == 1.0 ? RGB( 0,   0,   0   ) : color;\n    color = idx == 2.0 ? RGB( 192, 192, 192 ) : color;\n    color = idx == 3.0 ? RGB( 255, 255, 255 ) : color;\n}\n\nvoid SpriteTurretBase( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;    \n    \n    idx = y == 31.0 ? ( x <= 10.0 ? 2796201.0 : ( x <= 21.0 ? 2796202.0 : 174762.0 ) ) : idx;\n    idx = y == 30.0 ? ( x <= 10.0 ? 1398102.0 : ( x <= 21.0 ? 1398101.0 : 349525.0 ) ) : idx;\n    idx = y == 29.0 ? ( x <= 10.0 ? 2796182.0 : ( x <= 21.0 ? 2796202.0 : 289450.0 ) ) : idx;\n    idx = y == 28.0 ? ( x <= 10.0 ? 2796198.0 : ( x <= 21.0 ? 2796202.0 : 285354.0 ) ) : idx;\n    idx = y == 27.0 ? ( x <= 10.0 ? 1398182.0 : ( x <= 21.0 ? 1398101.0 : 279893.0 ) ) : idx;\n    idx = y == 26.0 ? ( x <= 10.0 ? 1397158.0 : ( x <= 21.0 ? 1398101.0 : 279637.0 ) ) : idx;\n    idx = y == 25.0 ? ( x <= 10.0 ? 1399206.0 : ( x <= 21.0 ? 1398101.0 : 280149.0 ) ) : idx;\n    idx = y == 24.0 ? ( x <= 10.0 ? 21926.0 : ( x <= 21.0 ? 0.0 : 279888.0 ) ) : idx;\n    idx = y == 23.0 ? ( x <= 10.0 ? 2692518.0 : ( x <= 21.0 ? 2796202.0 : 279905.0 ) ) : idx;\n    idx = y == 22.0 ? ( x <= 10.0 ? 1709478.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;\n    idx = y == 21.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;\n    idx = y == 20.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;\n    idx = y == 19.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;\n    idx = y == 18.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;\n    idx = y == 17.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;\n    idx = y == 16.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;\n    idx = y == 15.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;\n    idx = y == 14.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;\n    idx = y == 13.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;\n    idx = y == 12.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;\n    idx = y == 11.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;\n    idx = y == 10.0 ? ( x <= 10.0 ? 1447334.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;\n    idx = y == 9.0 ? ( x <= 10.0 ? 1381798.0 : ( x <= 21.0 ? 1398101.0 : 279905.0 ) ) : idx;\n    idx = y == 8.0 ? ( x <= 10.0 ? 5542.0 : ( x <= 21.0 ? 0.0 : 279904.0 ) ) : idx;\n    idx = y == 7.0 ? ( x <= 10.0 ? 2774438.0 : ( x <= 21.0 ? 2796202.0 : 279898.0 ) ) : idx;\n    idx = y == 6.0 ? ( x <= 10.0 ? 1398182.0 : ( x <= 21.0 ? 1398101.0 : 279893.0 ) ) : idx;\n    idx = y == 5.0 ? ( x <= 10.0 ? 1397158.0 : ( x <= 21.0 ? 1398101.0 : 279637.0 ) ) : idx;\n    idx = y == 4.0 ? ( x <= 10.0 ? 1399206.0 : ( x <= 21.0 ? 1398101.0 : 280149.0 ) ) : idx;\n    idx = y == 3.0 ? ( x <= 10.0 ? 102.0 : ( x <= 21.0 ? 0.0 : 278528.0 ) ) : idx;\n    idx = y == 2.0 ? ( x <= 10.0 ? 1398102.0 : ( x <= 21.0 ? 1398101.0 : 283989.0 ) ) : idx;\n    idx = y == 1.0 ? ( x <= 10.0 ? 6.0 : ( x <= 21.0 ? 0.0 : 262144.0 ) ) : idx;\n    idx = y == 0.0 ? ( x <= 10.0 ? 1398100.0 : ( x <= 21.0 ? 1398101.0 : 87381.0 ) ) : idx;\n\n    idx = SPRITE_DEC_3( x, idx );    \n    if ( x >= 0.0 && x < 32.0 && y >= 0.0 && y < 32.0 )\n    {\n        color = RGB( 0, 0, 0 );\n        color = idx == 1.0 ? RGB( 192, 192, 192 ) : color;\n        color = idx == 2.0 ? RGB( 255, 255, 255 ) : color;  \n    }\n}\n\nvoid SpriteSniper( inout vec3 color, float x, float y )\n{\n    float idx = 0.0; \n    \n    idx = y == 30.0 ? ( x <= 7.0 ? 21504.0 : 0.0 ) : idx;\n    idx = y == 29.0 ? ( x <= 7.0 ? 43264.0 : ( x <= 15.0 ? 1.0 : 0.0 ) ) : idx;\n    idx = y == 28.0 ? ( x <= 7.0 ? 48704.0 : ( x <= 15.0 ? 6.0 : 0.0 ) ) : idx;\n    idx = y == 27.0 ? ( x <= 7.0 ? 23104.0 : ( x <= 15.0 ? 5125.0 : ( x <= 23.0 ? 20821.0 : 0.0 ) ) ) : idx;\n    idx = y == 26.0 ? ( x <= 7.0 ? 62720.0 : ( x <= 15.0 ? 32085.0 : ( x <= 23.0 ? 30711.0 : 0.0 ) ) ) : idx;\n    idx = y == 25.0 ? ( x <= 7.0 ? 30032.0 : ( x <= 15.0 ? 65021.0 : ( x <= 23.0 ? 20863.0 : 0.0 ) ) ) : idx;\n    idx = y == 24.0 ? ( x <= 7.0 ? 21924.0 : ( x <= 15.0 ? 21855.0 : ( x <= 23.0 ? 117.0 : 0.0 ) ) ) : idx;\n    idx = y == 23.0 ? ( x <= 7.0 ? 55993.0 : ( x <= 15.0 ? 58869.0 : ( x <= 23.0 ? 21.0 : 0.0 ) ) ) : idx;\n    idx = y == 22.0 ? ( x <= 7.0 ? 22185.0 : ( x <= 15.0 ? 63997.0 : ( x <= 23.0 ? 1.0 : 0.0 ) ) ) : idx;\n    idx = y == 21.0 ? ( x <= 7.0 ? 64917.0 : ( x <= 15.0 ? 23903.0 : 0.0 ) ) : idx;\n    idx = y == 20.0 ? ( x <= 7.0 ? 64852.0 : ( x <= 15.0 ? 1893.0 : 0.0 ) ) : idx;\n    idx = y == 19.0 ? ( x <= 7.0 ? 21860.0 : ( x <= 15.0 ? 342.0 : 0.0 ) ) : idx;\n    idx = y == 18.0 ? ( x <= 7.0 ? 27280.0 : ( x <= 15.0 ? 5.0 : 0.0 ) ) : idx;\n    idx = y == 17.0 ? ( x <= 7.0 ? 54608.0 : ( x <= 15.0 ? 23.0 : 0.0 ) ) : idx;\n    idx = y == 16.0 ? ( x <= 7.0 ? 21824.0 : ( x <= 15.0 ? 26.0 : 0.0 ) ) : idx;\n    idx = y == 15.0 ? ( x <= 7.0 ? 43664.0 : ( x <= 15.0 ? 90.0 : 0.0 ) ) : idx;\n    idx = y == 14.0 ? ( x <= 7.0 ? 43664.0 : ( x <= 15.0 ? 105.0 : 0.0 ) ) : idx;\n    idx = y == 13.0 ? ( x <= 7.0 ? 27200.0 : ( x <= 15.0 ? 426.0 : 0.0 ) ) : idx;\n    idx = y == 12.0 ? ( x <= 7.0 ? 28304.0 : ( x <= 15.0 ? 490.0 : 0.0 ) ) : idx;\n    idx = y == 11.0 ? ( x <= 7.0 ? 7824.0 : ( x <= 15.0 ? 489.0 : 0.0 ) ) : idx;\n    idx = y == 10.0 ? ( x <= 7.0 ? 7824.0 : ( x <= 15.0 ? 421.0 : 0.0 ) ) : idx;\n    idx = y == 9.0 ? ( x <= 7.0 ? 1956.0 : ( x <= 15.0 ? 1700.0 : 0.0 ) ) : idx;\n    idx = y == 8.0 ? ( x <= 7.0 ? 420.0 : ( x <= 15.0 ? 1700.0 : 0.0 ) ) : idx;\n    idx = y == 7.0 ? ( x <= 7.0 ? 420.0 : ( x <= 15.0 ? 1680.0 : 0.0 ) ) : idx;\n    idx = y == 6.0 ? ( x <= 7.0 ? 404.0 : ( x <= 15.0 ? 1680.0 : 0.0 ) ) : idx;\n    idx = y == 5.0 ? ( x <= 7.0 ? 84.0 : ( x <= 15.0 ? 1360.0 : 0.0 ) ) : idx;\n    idx = y == 4.0 ? ( x <= 7.0 ? 84.0 : ( x <= 15.0 ? 1344.0 : 0.0 ) ) : idx;\n    idx = y == 3.0 ? ( x <= 7.0 ? 21.0 : ( x <= 15.0 ? 1344.0 : 0.0 ) ) : idx;\n    idx = y == 2.0 ? ( x <= 7.0 ? 53.0 : ( x <= 15.0 ? 7488.0 : 0.0 ) ) : idx;\n    idx = y == 1.0 ? ( x <= 7.0 ? 213.0 : ( x <= 15.0 ? 30016.0 : 0.0 ) ) : idx;\n    idx = y == 0.0 ? ( x <= 7.0 ? 340.0 : ( x <= 15.0 ? 21824.0 : 0.0 ) ) : idx;\n\n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 24.0 ? idx : 0.0;\n\n    color = idx == 1.0 ? RGB( 0,   0,  0 ) : color;\n    color = idx == 2.0 ? RGB( 248, 56, 0 ) : color;\n    color = idx == 3.0 ? y > 16.0 ? RGB( 240, 208, 176 ) : RGB( 255, 255, 255 ) : color;      \n}\n\nvoid SpriteSoldier( inout vec3 color, float x, float y, float frame )\n{\n    float idx = 0.0;    \n    \n    if ( frame == 0.0 )\n    {\n        idx = y == 31.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 1344.0 : 0.0 ) ) : idx;\n        idx = y == 30.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 6804.0 : 0.0 ) ) : idx;\n        idx = y == 29.0 ? ( x <= 7.0 ? 21504.0 : ( x <= 15.0 ? 27621.0 : 0.0 ) ) : idx;\n        idx = y == 28.0 ? ( x <= 7.0 ? 64768.0 : ( x <= 15.0 ? 5781.0 : 0.0 ) ) : idx;\n        idx = y == 27.0 ? ( x <= 7.0 ? 65344.0 : ( x <= 15.0 ? 7510.0 : 0.0 ) ) : idx;\n        idx = y == 26.0 ? ( x <= 7.0 ? 65492.0 : ( x <= 15.0 ? 7514.0 : 0.0 ) ) : idx;\n        idx = y == 25.0 ? ( x <= 7.0 ? 65497.0 : ( x <= 15.0 ? 5542.0 : 0.0 ) ) : idx;\n        idx = y == 24.0 ? ( x <= 7.0 ? 49113.0 : ( x <= 15.0 ? 5561.0 : 0.0 ) ) : idx;\n        idx = y == 23.0 ? ( x <= 7.0 ? 28629.0 : ( x <= 15.0 ? 30125.0 : 0.0 ) ) : idx;\n        idx = y == 22.0 ? ( x <= 7.0 ? 27229.0 : ( x <= 15.0 ? 29802.0 : 0.0 ) ) : idx;\n        idx = y == 21.0 ? ( x <= 7.0 ? 38260.0 : ( x <= 15.0 ? 21845.0 : 0.0 ) ) : idx;\n        idx = y == 20.0 ? ( x <= 7.0 ? 38388.0 : ( x <= 15.0 ? 62973.0 : ( x <= 23.0 ? 1.0 : 0.0 ) ) ) : idx;\n        idx = y == 19.0 ? ( x <= 7.0 ? 27088.0 : ( x <= 15.0 ? 65525.0 : ( x <= 23.0 ? 1.0 : 0.0 ) ) ) : idx;\n        idx = y == 18.0 ? ( x <= 7.0 ? 43328.0 : ( x <= 15.0 ? 21845.0 : ( x <= 23.0 ? 1.0 : 0.0 ) ) ) : idx;\n        idx = y == 17.0 ? ( x <= 7.0 ? 21760.0 : ( x <= 15.0 ? 29701.0 : 0.0 ) ) : idx;\n        idx = y == 16.0 ? ( x <= 7.0 ? 21760.0 : ( x <= 15.0 ? 21509.0 : 0.0 ) ) : idx;\n        idx = y == 15.0 ? ( x <= 7.0 ? 21504.0 : ( x <= 15.0 ? 23.0 : 0.0 ) ) : idx;\n        idx = y == 14.0 ? ( x <= 7.0 ? 21504.0 : ( x <= 15.0 ? 87.0 : 0.0 ) ) : idx;\n        idx = y == 13.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 93.0 : 0.0 ) ) : idx;\n        idx = y == 12.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 93.0 : 0.0 ) ) : idx;\n        idx = y == 11.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 93.0 : 0.0 ) ) : idx;\n        idx = y == 10.0 ? ( x <= 7.0 ? 21504.0 : ( x <= 15.0 ? 93.0 : 0.0 ) ) : idx;\n        idx = y == 9.0 ? ( x <= 7.0 ? 21504.0 : ( x <= 15.0 ? 87.0 : 0.0 ) ) : idx;\n        idx = y == 8.0 ? ( x <= 7.0 ? 21504.0 : ( x <= 15.0 ? 23.0 : 0.0 ) ) : idx;\n        idx = y == 7.0 ? ( x <= 7.0 ? 23808.0 : ( x <= 15.0 ? 5.0 : 0.0 ) ) : idx;\n        idx = y == 6.0 ? ( x <= 7.0 ? 23808.0 : ( x <= 15.0 ? 5.0 : 0.0 ) ) : idx;\n        idx = y == 5.0 ? ( x <= 7.0 ? 55104.0 : ( x <= 15.0 ? 7.0 : 0.0 ) ) : idx;\n        idx = y == 4.0 ? ( x <= 7.0 ? 57296.0 : ( x <= 15.0 ? 7.0 : 0.0 ) ) : idx;\n        idx = y == 3.0 ? ( x <= 7.0 ? 55104.0 : ( x <= 15.0 ? 5.0 : 0.0 ) ) : idx;\n        idx = y == 2.0 ? ( x <= 7.0 ? 62720.0 : ( x <= 15.0 ? 23.0 : 0.0 ) ) : idx;\n        idx = y == 1.0 ? ( x <= 7.0 ? 62464.0 : ( x <= 15.0 ? 127.0 : 0.0 ) ) : idx;\n        idx = y == 0.0 ? ( x <= 7.0 ? 21504.0 : ( x <= 15.0 ? 85.0 : 0.0 ) ) : idx;\n    }\n    else\n    {\n        idx = y == 30.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 5376.0 : 0.0 ) ) : idx;\n        idx = y == 29.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 27200.0 : 0.0 ) ) : idx;\n        idx = y == 28.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 44949.0 : ( x <= 23.0 ? 1.0 : 0.0 ) ) ) : idx;\n        idx = y == 27.0 ? ( x <= 7.0 ? 62464.0 : ( x <= 15.0 ? 23127.0 : ( x <= 23.0 ? 1.0 : 0.0 ) ) ) : idx;\n        idx = y == 26.0 ? ( x <= 7.0 ? 64768.0 : ( x <= 15.0 ? 30107.0 : 0.0 ) ) : idx;\n        idx = y == 25.0 ? ( x <= 7.0 ? 65344.0 : ( x <= 15.0 ? 30038.0 : 0.0 ) ) : idx;\n        idx = y == 24.0 ? ( x <= 7.0 ? 65344.0 : ( x <= 15.0 ? 21925.0 : 0.0 ) ) : idx;\n        idx = y == 23.0 ? ( x <= 7.0 ? 48960.0 : ( x <= 15.0 ? 5561.0 : 0.0 ) ) : idx;\n        idx = y == 22.0 ? ( x <= 7.0 ? 28224.0 : ( x <= 15.0 ? 7597.0 : 0.0 ) ) : idx;\n        idx = y == 21.0 ? ( x <= 7.0 ? 26880.0 : ( x <= 15.0 ? 7530.0 : 0.0 ) ) : idx;\n        idx = y == 20.0 ? ( x <= 7.0 ? 21760.0 : ( x <= 15.0 ? 21845.0 : 0.0 ) ) : idx;\n        idx = y == 19.0 ? ( x <= 7.0 ? 54272.0 : ( x <= 15.0 ? 32095.0 : 0.0 ) ) : idx;\n        idx = y == 18.0 ? ( x <= 7.0 ? 25600.0 : ( x <= 15.0 ? 32767.0 : 0.0 ) ) : idx;\n        idx = y == 17.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 21845.0 : 0.0 ) ) : idx;\n        idx = y == 16.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 7509.0 : 0.0 ) ) : idx;\n        idx = y == 15.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 1397.0 : 0.0 ) ) : idx;\n        idx = y == 14.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 1525.0 : 0.0 ) ) : idx;\n        idx = y == 13.0 ? ( x <= 7.0 ? 16469.0 : ( x <= 15.0 ? 6101.0 : 0.0 ) ) : idx;\n        idx = y == 12.0 ? ( x <= 7.0 ? 22013.0 : ( x <= 15.0 ? 23893.0 : 0.0 ) ) : idx;\n        idx = y == 11.0 ? ( x <= 7.0 ? 63485.0 : ( x <= 15.0 ? 30039.0 : 0.0 ) ) : idx;\n        idx = y == 10.0 ? ( x <= 7.0 ? 21885.0 : ( x <= 15.0 ? 30021.0 : 0.0 ) ) : idx;\n        idx = y == 9.0 ? ( x <= 7.0 ? 93.0 : ( x <= 15.0 ? 29952.0 : 0.0 ) ) : idx;\n        idx = y == 8.0 ? ( x <= 7.0 ? 93.0 : ( x <= 15.0 ? 23808.0 : 0.0 ) ) : idx;\n        idx = y == 7.0 ? ( x <= 7.0 ? 21.0 : ( x <= 15.0 ? 5440.0 : 0.0 ) ) : idx;\n        idx = y == 6.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 5440.0 : 0.0 ) ) : idx;\n        idx = y == 5.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 5952.0 : 0.0 ) ) : idx;\n        idx = y == 4.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 8144.0 : 0.0 ) ) : idx;\n        idx = y == 3.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 2000.0 : 0.0 ) ) : idx;\n        idx = y == 2.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 24564.0 : 0.0 ) ) : idx;\n        idx = y == 1.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 65360.0 : ( x <= 23.0 ? 1.0 : 0.0 ) ) ) : idx;\n        idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 21760.0 : ( x <= 23.0 ? 1.0 : 0.0 ) ) ) : idx;\n    }\n    \n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 18.0 ? idx : 0.0;\n\n    color = idx == 1.0 ? RGB( 0,   0,     0 ) : color;\n    color = idx == 2.0 ? RGB( 248, 56,    0 ) : color;\n    color = idx == 3.0 ? y > 16.0 ? RGB( 240, 208, 176 ) : RGB( 255, 255, 255 ) : color;  \n}\n\nvoid SpriteBillTorsoR( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n    idx = y == 13.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 5.0 : 0.0 ) ) : idx;\n    idx = y == 12.0 ? ( x <= 7.0 ? 42240.0 : ( x <= 15.0 ? 6.0 : 0.0 ) ) : idx;\n    idx = y == 11.0 ? ( x <= 7.0 ? 21824.0 : ( x <= 15.0 ? 21.0 : 0.0 ) ) : idx;\n    idx = y == 10.0 ? ( x <= 7.0 ? 58688.0 : ( x <= 15.0 ? 23.0 : 0.0 ) ) : idx;\n    idx = y == 9.0 ? ( x <= 7.0 ? 58624.0 : ( x <= 15.0 ? 7.0 : 0.0 ) ) : idx;\n    idx = y == 8.0 ? ( x <= 7.0 ? 28240.0 : ( x <= 15.0 ? 87.0 : 0.0 ) ) : idx;\n    idx = y == 7.0 ? ( x <= 7.0 ? 44004.0 : ( x <= 15.0 ? 117.0 : 0.0 ) ) : idx;\n    idx = y == 6.0 ? ( x <= 7.0 ? 61433.0 : ( x <= 15.0 ? 494.0 : 0.0 ) ) : idx;\n    idx = y == 5.0 ? ( x <= 7.0 ? 61433.0 : ( x <= 15.0 ? 491.0 : 0.0 ) ) : idx;\n    idx = y == 4.0 ? ( x <= 7.0 ? 56313.0 : ( x <= 15.0 ? 1947.0 : 1024.0 ) ) : idx;\n    idx = y == 3.0 ? ( x <= 7.0 ? 63165.0 : ( x <= 15.0 ? 21867.0 : 6485.0 ) ) : idx;\n    idx = y == 2.0 ? ( x <= 7.0 ? 23540.0 : ( x <= 15.0 ? 57301.0 : 31671.0 ) ) : idx;\n    idx = y == 1.0 ? ( x <= 7.0 ? 65488.0 : ( x <= 15.0 ? 21851.0 : 5461.0 ) ) : idx;\n    idx = y == 0.0 ? ( x <= 7.0 ? 64848.0 : ( x <= 15.0 ? 39515.0 : 425.0 ) ) : idx;\n    \n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 24.0 ? idx : 0.0;    \n    color = idx == 1.0 ? RGB( 0,   0,     0 ) : color;\n    color = idx == 2.0 ? RGB( 248, 56,    0 ) : color;\n    color = idx == 3.0 ? RGB( 240, 208, 176 ) : color;\n}\n\nvoid SpriteBillTorsoT( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n    idx = y == 25.0 ? ( x <= 7.0 ? 0.0 : 16.0 ) : idx;\n    idx = y == 24.0 ? ( x <= 7.0 ? 0.0 : 116.0 ) : idx;\n    idx = y == 23.0 ? ( x <= 7.0 ? 0.0 : 105.0 ) : idx;\n    idx = y == 22.0 ? ( x <= 7.0 ? 0.0 : 116.0 ) : idx;\n    idx = y == 21.0 ? ( x <= 7.0 ? 0.0 : 356.0 ) : idx;\n    idx = y == 20.0 ? ( x <= 7.0 ? 0.0 : 1652.0 ) : idx;\n    idx = y == 19.0 ? ( x <= 7.0 ? 0.0 : 1652.0 ) : idx;\n    idx = y == 18.0 ? ( x <= 7.0 ? 0.0 : 1636.0 ) : idx;\n    idx = y == 17.0 ? ( x <= 7.0 ? 0.0 : 1397.0 ) : idx;\n    idx = y == 16.0 ? ( x <= 7.0 ? 16384.0 : 1654.0 ) : idx;\n    idx = y == 15.0 ? ( x <= 7.0 ? 16384.0 : 1382.0 ) : idx;\n    idx = y == 14.0 ? ( x <= 7.0 ? 16384.0 : 1655.0 ) : idx;\n    idx = y == 13.0 ? ( x <= 7.0 ? 16384.0 : 1399.0 ) : idx;\n    idx = y == 12.0 ? ( x <= 7.0 ? 36928.0 : 1654.0 ) : idx;\n    idx = y == 11.0 ? ( x <= 7.0 ? 57744.0 : 1639.0 ) : idx;\n    idx = y == 10.0 ? ( x <= 7.0 ? 55140.0 : 1398.0 ) : idx;\n    idx = y == 9.0 ? ( x <= 7.0 ? 40921.0 : 2038.0 ) : idx;\n    idx = y == 8.0 ? ( x <= 7.0 ? 40868.0 : 2038.0 ) : idx;\n    idx = y == 7.0 ? ( x <= 7.0 ? 26256.0 : 1957.0 ) : idx;\n    idx = y == 6.0 ? ( x <= 7.0 ? 39908.0 : 505.0 ) : idx;\n    idx = y == 5.0 ? ( x <= 7.0 ? 31737.0 : 510.0 ) : idx;\n    idx = y == 4.0 ? ( x <= 7.0 ? 65529.0 : 123.0 ) : idx;\n    idx = y == 3.0 ? ( x <= 7.0 ? 64116.0 : 127.0 ) : idx;\n    idx = y == 2.0 ? ( x <= 7.0 ? 21968.0 : 21.0 ) : idx;\n    idx = y == 1.0 ? ( x <= 7.0 ? 27600.0 : 0.0 ) : idx;\n    idx = y == 0.0 ? ( x <= 7.0 ? 44880.0 : 1.0 ) : idx;\n    \n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 14.0 ? idx : 0.0;    \n    color = idx == 1.0 ? RGB( 0,   0,     0 ) : color;\n    color = idx == 2.0 ? RGB( 248, 56,    0 ) : color;\n    color = idx == 3.0 ? RGB( 240, 208, 176 ) : color;\n}\n\nvoid SpriteBillTorsoTR( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n    idx = y == 15.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 16384.0 : 0.0 ) ) : idx;\n    idx = y == 14.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 54272.0 : 1.0 ) ) : idx;\n    idx = y == 13.0 ? ( x <= 7.0 ? 1280.0 : ( x <= 15.0 ? 47360.0 : 1.0 ) ) : idx;\n    idx = y == 12.0 ? ( x <= 7.0 ? 6736.0 : ( x <= 15.0 ? 26964.0 : 0.0 ) ) : idx;\n    idx = y == 11.0 ? ( x <= 7.0 ? 1445.0 : ( x <= 15.0 ? 7037.0 : 0.0 ) ) : idx;\n    idx = y == 10.0 ? ( x <= 7.0 ? 24405.0 : ( x <= 15.0 ? 1757.0 : 0.0 ) ) : idx;\n    idx = y == 9.0 ? ( x <= 7.0 ? 24485.0 : ( x <= 15.0 ? 6583.0 : 0.0 ) ) : idx;\n    idx = y == 8.0 ? ( x <= 7.0 ? 43348.0 : ( x <= 15.0 ? 6765.0 : 0.0 ) ) : idx;\n    idx = y == 7.0 ? ( x <= 7.0 ? 26356.0 : ( x <= 15.0 ? 6747.0 : 0.0 ) ) : idx;\n    idx = y == 6.0 ? ( x <= 7.0 ? 56317.0 : ( x <= 15.0 ? 1654.0 : 0.0 ) ) : idx;\n    idx = y == 5.0 ? ( x <= 7.0 ? 23549.0 : ( x <= 15.0 ? 1657.0 : 0.0 ) ) : idx;\n    idx = y == 4.0 ? ( x <= 7.0 ? 32509.0 : ( x <= 15.0 ? 509.0 : 0.0 ) ) : idx;\n    idx = y == 3.0 ? ( x <= 7.0 ? 49005.0 : ( x <= 15.0 ? 507.0 : 0.0 ) ) : idx;\n    idx = y == 2.0 ? ( x <= 7.0 ? 64953.0 : ( x <= 15.0 ? 95.0 : 0.0 ) ) : idx;\n    idx = y == 1.0 ? ( x <= 7.0 ? 63161.0 : ( x <= 15.0 ? 7.0 : 0.0 ) ) : idx;\n    idx = y == 0.0 ? ( x <= 7.0 ? 42724.0 : ( x <= 15.0 ? 1.0 : 0.0 ) ) : idx;\n    \n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 18.0 ? idx : 0.0;    \n    color = idx == 1.0 ? RGB( 0,   0,     0 ) : color;\n    color = idx == 2.0 ? RGB( 248, 56,    0 ) : color;\n    color = idx == 3.0 ? RGB( 240, 208, 176 ) : color;\n}\n\nvoid SpriteBillTorsoBR( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n    idx = y == 21.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 1.0 : 0.0 ) ) : idx;\n    idx = y == 20.0 ? ( x <= 7.0 ? 38208.0 : ( x <= 15.0 ? 6.0 : 0.0 ) ) : idx;\n    idx = y == 19.0 ? ( x <= 7.0 ? 25680.0 : ( x <= 15.0 ? 26.0 : 0.0 ) ) : idx;\n    idx = y == 18.0 ? ( x <= 7.0 ? 59648.0 : ( x <= 15.0 ? 5.0 : 0.0 ) ) : idx;\n    idx = y == 17.0 ? ( x <= 7.0 ? 59984.0 : ( x <= 15.0 ? 7.0 : 0.0 ) ) : idx;\n    idx = y == 16.0 ? ( x <= 7.0 ? 63460.0 : ( x <= 15.0 ? 1.0 : 0.0 ) ) : idx;\n    idx = y == 15.0 ? ( x <= 7.0 ? 22521.0 : ( x <= 15.0 ? 21.0 : 0.0 ) ) : idx;\n    idx = y == 14.0 ? ( x <= 7.0 ? 49145.0 : ( x <= 15.0 ? 118.0 : 0.0 ) ) : idx;\n    idx = y == 13.0 ? ( x <= 7.0 ? 64505.0 : ( x <= 15.0 ? 474.0 : 0.0 ) ) : idx;\n    idx = y == 12.0 ? ( x <= 7.0 ? 64505.0 : ( x <= 15.0 ? 1946.0 : 0.0 ) ) : idx;\n    idx = y == 11.0 ? ( x <= 7.0 ? 63396.0 : ( x <= 15.0 ? 1894.0 : 0.0 ) ) : idx;\n    idx = y == 10.0 ? ( x <= 7.0 ? 39908.0 : ( x <= 15.0 ? 7653.0 : 0.0 ) ) : idx;\n    idx = y == 9.0 ? ( x <= 7.0 ? 32720.0 : ( x <= 15.0 ? 1951.0 : 0.0 ) ) : idx;\n    idx = y == 8.0 ? ( x <= 7.0 ? 49104.0 : ( x <= 15.0 ? 6783.0 : 0.0 ) ) : idx;\n    idx = y == 7.0 ? ( x <= 7.0 ? 60736.0 : ( x <= 15.0 ? 30063.0 : 0.0 ) ) : idx;\n    idx = y == 6.0 ? ( x <= 7.0 ? 37888.0 : ( x <= 15.0 ? 58970.0 : 1.0 ) ) : idx;\n    idx = y == 5.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 39504.0 : 22.0 ) ) : idx;\n    idx = y == 4.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 26896.0 : 109.0 ) ) : idx;\n    idx = y == 3.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 41984.0 : 105.0 ) ) : idx;\n    idx = y == 2.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 36864.0 : 485.0 ) ) : idx;\n    idx = y == 1.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 16384.0 : 400.0 ) ) : idx;\n    idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 0.0 : 64.0 ) ) : idx;\n    \n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 21.0 ? idx : 0.0;    \n    color = idx == 1.0 ? RGB( 0,   0,     0 ) : color;\n    color = idx == 2.0 ? RGB( 248, 56,    0 ) : color;\n    color = idx == 3.0 ? RGB( 240, 208, 176 ) : color;\n}\n\nvoid SpriteBillLegs( inout vec3 color, float x, float y, float frame )\n{\n    // lower body\n    float idx = 0.0;\n    \n    if ( frame == 0.0 )\n    {\n        x -= 2.0;\n        idx = y == 19.0 ? ( x <= 7.0 ? 62800.0 : 1.0 ) : idx;\n        idx = y == 18.0 ? ( x <= 7.0 ? 43664.0 : 1.0 ) : idx;\n        idx = y == 17.0 ? ( x <= 7.0 ? 43664.0 : 1.0 ) : idx;\n        idx = y == 16.0 ? ( x <= 7.0 ? 64080.0 : 1.0 ) : idx;\n        idx = y == 15.0 ? ( x <= 7.0 ? 42320.0 : 6.0 ) : idx;\n        idx = y == 14.0 ? ( x <= 7.0 ? 43328.0 : 27.0 ) : idx;\n        idx = y == 13.0 ? ( x <= 7.0 ? 42560.0 : 26.0 ) : idx;\n        idx = y == 12.0 ? ( x <= 7.0 ? 22848.0 : 110.0 ) : idx;\n        idx = y == 11.0 ? ( x <= 7.0 ? 38144.0 : 26.0 ) : idx;\n        idx = y == 10.0 ? ( x <= 7.0 ? 39168.0 : 26.0 ) : idx;\n        idx = y == 9.0 ? ( x <= 7.0 ? 42560.0 : 7.0 ) : idx;\n        idx = y == 8.0 ? ( x <= 7.0 ? 43344.0 : 6.0 ) : idx;\n        idx = y == 7.0 ? ( x <= 7.0 ? 63892.0 : 1.0 ) : idx;\n        idx = y == 6.0 ? ( x <= 7.0 ? 27241.0 : 0.0 ) : idx;\n        idx = y == 5.0 ? ( x <= 7.0 ? 32357.0 : 0.0 ) : idx;\n        idx = y == 4.0 ? ( x <= 7.0 ? 6756.0 : 0.0 ) : idx;\n        idx = y == 3.0 ? ( x <= 7.0 ? 27216.0 : 0.0 ) : idx;\n        idx = y == 2.0 ? ( x <= 7.0 ? 43584.0 : 5.0 ) : idx;\n        idx = y == 1.0 ? ( x <= 7.0 ? 43584.0 : 26.0 ) : idx;\n        idx = y == 0.0 ? ( x <= 7.0 ? 21824.0 : 21.0 ) : idx;\n        idx = x >= 0.0 && x < 12.0 ? idx : 0.0;\n    }\n    else if ( frame == 1.0 )\n    {\n        idx = y == 19.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 341.0 : 0.0 ) ) : idx;\n        idx = y == 18.0 ? ( x <= 7.0 ? 36864.0 : ( x <= 15.0 ? 1466.0 : 0.0 ) ) : idx;\n        idx = y == 17.0 ? ( x <= 7.0 ? 36864.0 : ( x <= 15.0 ? 6570.0 : 0.0 ) ) : idx;\n        idx = y == 16.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 27246.0 : 0.0 ) ) : idx;\n        idx = y == 15.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 43626.0 : 1.0 ) ) : idx;\n        idx = y == 14.0 ? ( x <= 7.0 ? 36864.0 : ( x <= 15.0 ? 43374.0 : 6.0 ) ) : idx;\n        idx = y == 13.0 ? ( x <= 7.0 ? 36864.0 : ( x <= 15.0 ? 42090.0 : 6.0 ) ) : idx;\n        idx = y == 12.0 ? ( x <= 7.0 ? 20480.0 : ( x <= 15.0 ? 42267.0 : 1.0 ) ) : idx;\n        idx = y == 11.0 ? ( x <= 7.0 ? 41984.0 : ( x <= 15.0 ? 43610.0 : 1.0 ) ) : idx;\n        idx = y == 10.0 ? ( x <= 7.0 ? 59648.0 : ( x <= 15.0 ? 27206.0 : 0.0 ) ) : idx;\n        idx = y == 9.0 ? ( x <= 7.0 ? 43264.0 : ( x <= 15.0 ? 6721.0 : 0.0 ) ) : idx;\n        idx = y == 8.0 ? ( x <= 7.0 ? 28224.0 : ( x <= 15.0 ? 1616.0 : 0.0 ) ) : idx;\n        idx = y == 7.0 ? ( x <= 7.0 ? 6800.0 : ( x <= 15.0 ? 1700.0 : 0.0 ) ) : idx;\n        idx = y == 6.0 ? ( x <= 7.0 ? 2000.0 : ( x <= 15.0 ? 425.0 : 0.0 ) ) : idx;\n        idx = y == 5.0 ? ( x <= 7.0 ? 420.0 : ( x <= 15.0 ? 420.0 : 0.0 ) ) : idx;\n        idx = y == 4.0 ? ( x <= 7.0 ? 425.0 : ( x <= 15.0 ? 1680.0 : 0.0 ) ) : idx;\n        idx = y == 3.0 ? ( x <= 7.0 ? 1961.0 : ( x <= 15.0 ? 6720.0 : 0.0 ) ) : idx;\n        idx = y == 2.0 ? ( x <= 7.0 ? 5796.0 : ( x <= 15.0 ? 1280.0 : 0.0 ) ) : idx;\n        idx = y == 1.0 ? ( x <= 7.0 ? 31376.0 : 0.0 ) : idx;\n        idx = y == 0.0 ? ( x <= 7.0 ? 21824.0 : 0.0 ) : idx;\n        idx = x >= 0.0 && x < 18.0 ? idx : 0.0;\n    }\n    else\n    {   \n        idx = y == 18.0 ? ( x <= 7.0 ? 37888.0 : ( x <= 15.0 ? 422.0 : 0.0 ) ) : idx;\n        idx = y == 17.0 ? ( x <= 7.0 ? 36864.0 : ( x <= 15.0 ? 342.0 : 0.0 ) ) : idx;\n        idx = y == 16.0 ? ( x <= 7.0 ? 36880.0 : ( x <= 15.0 ? 362.0 : 0.0 ) ) : idx;\n        idx = y == 15.0 ? ( x <= 7.0 ? 21860.0 : ( x <= 15.0 ? 489.0 : 0.0 ) ) : idx;\n        idx = y == 14.0 ? ( x <= 7.0 ? 43428.0 : ( x <= 15.0 ? 421.0 : 0.0 ) ) : idx;\n        idx = y == 13.0 ? ( x <= 7.0 ? 44457.0 : ( x <= 15.0 ? 1962.0 : 0.0 ) ) : idx;\n        idx = y == 12.0 ? ( x <= 7.0 ? 54377.0 : ( x <= 15.0 ? 1710.0 : 0.0 ) ) : idx;\n        idx = y == 11.0 ? ( x <= 7.0 ? 16489.0 : ( x <= 15.0 ? 1765.0 : 0.0 ) ) : idx;\n        idx = y == 10.0 ? ( x <= 7.0 ? 25.0 : ( x <= 15.0 ? 6480.0 : 0.0 ) ) : idx;\n        idx = y == 9.0 ? ( x <= 7.0 ? 25.0 : ( x <= 15.0 ? 27200.0 : 0.0 ) ) : idx;\n        idx = y == 8.0 ? ( x <= 7.0 ? 25.0 : ( x <= 15.0 ? 26880.0 : 0.0 ) ) : idx;\n        idx = y == 7.0 ? ( x <= 7.0 ? 4.0 : ( x <= 15.0 ? 30976.0 : 0.0 ) ) : idx;\n        idx = y == 6.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 43264.0 : 1.0 ) ) : idx;\n        idx = y == 5.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 41984.0 : 1.0 ) ) : idx;\n        idx = y == 4.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 21504.0 : 0.0 ) ) : idx;\n        idx = y == 3.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 41984.0 : 5.0 ) ) : idx;\n        idx = y == 2.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 41984.0 : 90.0 ) ) : idx;\n        idx = y == 1.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 41984.0 : 426.0 ) ) : idx;\n        idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 20480.0 : 85.0 ) ) : idx;\n        idx = x >= 0.0 && x < 22.0 ? idx : 0.0;\n    }\n    \n    idx = SPRITE_DEC_4( x, idx );\n    \n\n    color = idx == 1.0 ? RGB( 0,   0,   0   ) : color;\n    color = idx == 2.0 ? RGB( 0,   88,  248 ) : color;\n    color = idx == 3.0 ? RGB( 255, 224, 168 ) : color;   \n}\n\nvoid SpriteBillProne( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n    idx = y == 16.0 ? ( x <= 7.0 ? 64.0 : 0.0 ) : idx;\n    idx = y == 15.0 ? ( x <= 7.0 ? 400.0 : 0.0 ) : idx;\n    idx = y == 14.0 ? ( x <= 7.0 ? 1940.0 : 0.0 ) : idx;\n    idx = y == 13.0 ? ( x <= 7.0 ? 6745.0 : ( x <= 15.0 ? 0.0 : ( x <= 23.0 ? 84.0 : 0.0 ) ) ) : idx;\n    idx = y == 12.0 ? ( x <= 7.0 ? 27044.0 : ( x <= 15.0 ? 0.0 : ( x <= 23.0 ? 425.0 : 0.0 ) ) ) : idx;\n    idx = y == 11.0 ? ( x <= 7.0 ? 27024.0 : ( x <= 15.0 ? 0.0 : ( x <= 23.0 ? 341.0 : 1280.0 ) ) ) : idx;\n    idx = y == 10.0 ? ( x <= 7.0 ? 7744.0 : ( x <= 15.0 ? 20480.0 : ( x <= 23.0 ? 22005.0 : 6485.0 ) ) ) : idx;\n    idx = y == 9.0 ? ( x <= 7.0 ? 6800.0 : ( x <= 15.0 ? 41984.0 : ( x <= 23.0 ? 62966.0 : 31710.0 ) ) ) : idx;\n    idx = y == 8.0 ? ( x <= 7.0 ? 18128.0 : ( x <= 15.0 ? 64773.0 : ( x <= 23.0 ? 38747.0 : 27306.0 ) ) ) : idx;\n    idx = y == 7.0 ? ( x <= 7.0 ? 38564.0 : ( x <= 15.0 ? 65370.0 : ( x <= 23.0 ? 65435.0 : 5461.0 ) ) ) : idx;\n    idx = y == 6.0 ? ( x <= 7.0 ? 59833.0 : ( x <= 15.0 ? 65390.0 : ( x <= 23.0 ? 49051.0 : 501.0 ) ) ) : idx;\n    idx = y == 5.0 ? ( x <= 7.0 ? 60009.0 : ( x <= 15.0 ? 48602.0 : ( x <= 23.0 ? 44774.0 : 101.0 ) ) ) : idx;\n    idx = y == 4.0 ? ( x <= 7.0 ? 44718.0 : ( x <= 15.0 ? 64986.0 : ( x <= 23.0 ? 22267.0 : 126.0 ) ) ) : idx;\n    idx = y == 3.0 ? ( x <= 7.0 ? 43753.0 : ( x <= 15.0 ? 63125.0 : ( x <= 23.0 ? 43454.0 : 31.0 ) ) ) : idx;\n    idx = y == 2.0 ? ( x <= 7.0 ? 22185.0 : ( x <= 15.0 ? 62784.0 : ( x <= 23.0 ? 58495.0 : 5.0 ) ) ) : idx;\n    idx = y == 1.0 ? ( x <= 7.0 ? 340.0 : ( x <= 15.0 ? 54272.0 : ( x <= 23.0 ? 20511.0 : 0.0 ) ) ) : idx;\n    idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 16384.0 : ( x <= 23.0 ? 5.0 : 0.0 ) ) ) : idx;\n    \n    idx = SPRITE_DEC_4( x, idx );\n    \n    idx = x >= 0.0 && x < 32.0 ? idx : 0.0;\n    color = idx == 1.0 ? RGB( 0,   0,   0   ) : color;\n    color = idx == 2.0 ? x < 15.0 ? RGB( 0,   88,  248 ) : RGB( 248, 56,  0   ) : color;\n    color = idx == 3.0 ? x < 15.0 ? RGB( 255, 224, 168 ) : RGB( 240, 208, 176 ) : color;   \n}\n\nvoid SpriteBillJump( inout vec3 color, float x, float y, float frame )\n{\n    float idx = 0.0;\n    bool colorA;\n    \n    if ( frame == 0.0 )\n    {   \n        colorA = x > 10.0;\n        idx = y == 15.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 5.0 : 0.0 ) ) : idx;\n        idx = y == 14.0 ? ( x <= 7.0 ? 53312.0 : ( x <= 15.0 ? 95.0 : 0.0 ) ) : idx;\n        idx = y == 13.0 ? ( x <= 7.0 ? 53648.0 : ( x <= 15.0 ? 415.0 : 16.0 ) ) : idx;\n        idx = y == 12.0 ? ( x <= 7.0 ? 25956.0 : ( x <= 15.0 ? 1947.0 : 100.0 ) ) : idx;\n        idx = y == 11.0 ? ( x <= 7.0 ? 38745.0 : ( x <= 15.0 ? 7787.0 : 109.0 ) ) : idx;\n        idx = y == 10.0 ? ( x <= 7.0 ? 24549.0 : ( x <= 15.0 ? 27247.0 : 107.0 ) ) : idx;\n        idx = y == 9.0 ? ( x <= 7.0 ? 38825.0 : ( x <= 15.0 ? 43375.0 : 26.0 ) ) : idx;\n        idx = y == 8.0 ? ( x <= 7.0 ? 59748.0 : ( x <= 15.0 ? 38527.0 : 26.0 ) ) : idx;\n        idx = y == 7.0 ? ( x <= 7.0 ? 65428.0 : ( x <= 15.0 ? 27295.0 : 5.0 ) ) : idx;\n        idx = y == 6.0 ? ( x <= 7.0 ? 49124.0 : ( x <= 15.0 ? 27287.0 : 0.0 ) ) : idx;\n        idx = y == 5.0 ? ( x <= 7.0 ? 49120.0 : ( x <= 15.0 ? 43737.0 : 1.0 ) ) : idx;\n        idx = y == 4.0 ? ( x <= 7.0 ? 27600.0 : ( x <= 15.0 ? 43882.0 : 1.0 ) ) : idx;\n        idx = y == 3.0 ? ( x <= 7.0 ? 48960.0 : ( x <= 15.0 ? 27247.0 : 0.0 ) ) : idx;\n        idx = y == 2.0 ? ( x <= 7.0 ? 64768.0 : ( x <= 15.0 ? 27263.0 : 0.0 ) ) : idx;\n        idx = y == 1.0 ? ( x <= 7.0 ? 54272.0 : ( x <= 15.0 ? 5759.0 : 0.0 ) ) : idx;\n        idx = y == 0.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 341.0 : 0.0 ) ) : idx;\n        idx = x >= 0.0 && x < 20.0 ? idx : 0.0;\n    }\n    else\n    {\n        colorA = y < 9.0;\n        idx = y == 19.0 ? ( x <= 7.0 ? 0.0 : 84.0 ) : idx;\n        idx = y == 18.0 ? ( x <= 7.0 ? 20480.0 : 409.0 ) : idx;\n        idx = y == 17.0 ? ( x <= 7.0 ? 26880.0 : 1642.0 ) : idx;\n        idx = y == 16.0 ? ( x <= 7.0 ? 48960.0 : 6521.0 ) : idx;\n        idx = y == 15.0 ? ( x <= 7.0 ? 65488.0 : 1533.0 ) : idx;\n        idx = y == 14.0 ? ( x <= 7.0 ? 65268.0 : 374.0 ) : idx;\n        idx = y == 13.0 ? ( x <= 7.0 ? 65268.0 : 5718.0 ) : idx;\n        idx = y == 12.0 ? ( x <= 7.0 ? 59837.0 : 32155.0 ) : idx;\n        idx = y == 11.0 ? ( x <= 7.0 ? 63229.0 : 32767.0 ) : idx;\n        idx = y == 10.0 ? ( x <= 7.0 ? 56061.0 : 32447.0 ) : idx;\n        idx = y == 9.0 ? ( x <= 7.0 ? 22205.0 : 5547.0 ) : idx;\n        idx = y == 8.0 ? ( x <= 7.0 ? 44373.0 : 6741.0 ) : idx;\n        idx = y == 7.0 ? ( x <= 7.0 ? 43945.0 : 1958.0 ) : idx;\n        idx = y == 6.0 ? ( x <= 7.0 ? 43684.0 : 489.0 ) : idx;\n        idx = y == 5.0 ? ( x <= 7.0 ? 43684.0 : 105.0 ) : idx;\n        idx = y == 4.0 ? ( x <= 7.0 ? 23120.0 : 26.0 ) : idx;\n        idx = y == 3.0 ? ( x <= 7.0 ? 17664.0 : 122.0 ) : idx;\n        idx = y == 2.0 ? ( x <= 7.0 ? 16384.0 : 490.0 ) : idx;\n        idx = y == 1.0 ? ( x <= 7.0 ? 0.0 : 1701.0 ) : idx;\n        idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : 336.0 ) : idx;\n        idx = x >= 0.0 && x < 16.0 ? idx : 0.0;\n    }\n    \n    idx = SPRITE_DEC_4( x, idx );\n    \n    color = idx == 1.0 ? RGB( 0,   0,   0   ) : color;\n    color = idx == 2.0 ? colorA ? RGB( 0,   88,  248 ) : RGB( 248, 56,  0   ) : color;\n    color = idx == 3.0 ? colorA ? RGB( 255, 224, 168 ) : RGB( 240, 208, 176 ) : color;   \n}\n\nvoid SpriteWaterCircle( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n    idx = y == 6.0 ? ( x <= 7.0 ? 14336.0 : 44.0 ) : idx;\n    idx = y == 5.0 ? ( x <= 7.0 ? 49360.0 : 1795.0 ) : idx;\n    idx = y == 4.0 ? ( x <= 7.0 ? 31874.0 : 33341.0 ) : idx;\n    idx = y == 3.0 ? ( x <= 7.0 ? 819.0 : 52416.0 ) : idx;\n    idx = y == 2.0 ? ( x <= 7.0 ? 47112.0 : 8238.0 ) : idx;\n    idx = y == 1.0 ? ( x <= 7.0 ? 4144.0 : 3076.0 ) : idx;\n    idx = y == 0.0 ? ( x <= 7.0 ? 36352.0 : 178.0 ) : idx;\n\n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 16.0 ? idx : 0.0;\n    \n    color = idx == 1.0 ? RGB( 0,    0,   0   ) : color;\n    color = idx == 2.0 ? RGB( 248,  56,  0   ) : color;\n    color = idx == 3.0 ? RGB( 240,  208, 176 ) : color;\n}\n\nvoid DrawTurret( inout vec3 color, vec4 turret, float worldX, float worldY )\n{\n    SpriteTurretBase( color, worldX - turret.x + TURRET_SIZE.x * 0.5, worldY - turret.y + TURRET_SIZE.y * 0.5 );\n    \n    // left \n    float frame     = 0.0;\n    float turretX   = worldX - turret.x;\n    float turretY   = worldY - turret.y;\n\n    if ( turret.z == 0.0 )\n    {\n        frame = 0.0;\n        turretX += 14.0;\n        turretY += 7.0;\n    }\n    else if ( turret.z == 1.0 )\n    {\n        frame = 1.0;\n        turretX += 13.0;\n        turretY += 7.0;\n    }\n    else if ( turret.z == 2.0 )\n    {\n        frame = 2.0;\n        turretX += 8.0;\n        turretY += 3.0;\n        Swap( turretX, turretY );\n        turretX = 15.0 - turretX;\n    }     \n    else if ( turret.z == 3.0 )\n    {\n        frame = 0.0;\n        turretX += 15.0;\n        turretY += 2.0;\n        Swap( turretX, turretY );\n        turretX = 15.0 - turretX;\n        turretY = 21.0 - turretY;\n    }\n    else if ( turret.z == 4.0 )\n    {\n        frame = 2.0;\n        turretX += 14.0;\n        turretY += 3.0;\n        Swap( turretX, turretY );\n        turretX = 15.0 - turretX;\n        turretY = 21.0 - turretY;\n    }\n    else if ( turret.z == 5.0 )\n    {\n        frame = 1.0;\n        turretX += 4.0;\n        turretY += 7.0;\n        turretX = 15.0 - turretX;        \n    }    \n    else if ( turret.z == 6.0 )\n    {\n        frame = 0.0;\n        turretX += 9.0;\n        turretY += 7.0;\n        turretX = 21.0 - turretX;       \n    }     \n    else if ( turret.z == 7.0 )\n    {\n        frame = 2.0;\n        turretX += 10.0;\n        turretY += 7.0;\n        turretX = 21.0 - turretX;       \n    }    \n    else if ( turret.z == 8.0 )\n    {\n        frame = 1.0;\n        turretX += 8.0;\n        turretY += 12.0;\n        Swap( turretX, turretY );       \n    }  \n    else if ( turret.z == 9.0 )\n    {\n        frame = 0.0;\n        turretX += 15.0;\n        turretY += 13.0;\n        Swap( turretX, turretY );\n        turretY = 21.0 - turretY;        \n    }          \n    else if ( turret.z == 10.0 )\n    {\n        frame = 1.0;\n        turretX += 15.0;\n        turretY += 12.0;\n        Swap( turretX, turretY );\n        turretY = 21.0 - turretY;        \n    }\n    else\n    {\n        frame = 2.0;\n        turretX += 13.0;\n        turretY += 8.0;        \n    }      \n\n    SpriteTurret( color, turretX, turretY, frame );\n}\n\nvoid DrawSoldier( inout vec3 color, vec4 soldier, vec4 soldierState, float worldX, float worldY )\n{\n    float soldierX = worldX - soldier.x + SOLDIER_SIZE.x * 0.5;\n    float soldierY = worldY - soldier.y;\n    soldierX = soldier.z < 0.0 ? SOLDIER_SIZE.x - soldierX : soldierX;\n    SpriteSoldier( color, soldierX, soldierY, soldierState.y );        \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // we want 224x192 (overscan) and we want multiples of pixel size\n    float resMultX      = floor( iResolution.x / NES_RES_X );\n    float resMultY      = floor( iResolution.y / NES_RES_Y );\n    float resRcp        = 1.0 / max( min( resMultX, resMultY ), 1.0 );\n    float screenWidth   = floor( iResolution.x * resRcp );\n    float screenHeight  = floor( iResolution.y * resRcp );\n    float pixelX        = floor( fragCoord.x * resRcp );\n    float pixelY        = floor( fragCoord.y * resRcp );  \n    \n    vec4 player         = LoadValue( txPlayer );\n    vec4 playerState    = LoadValue( txPlayerState );\n    vec4 playerDir      = LoadValue( txPlayerDir );\n    vec4 camera         = LoadValue( txCamera );\n    vec4 soldier0       = LoadValue( txSoldier0 );\n    vec4 soldier1       = LoadValue( txSoldier1 );\n    vec4 soldier2       = LoadValue( txSoldier2 );\n    vec4 soldier0State  = LoadValue( txSoldier0State );\n    vec4 soldier1State  = LoadValue( txSoldier1State );\n    vec4 soldier2State  = LoadValue( txSoldier2State );\n    vec4 sniper         = LoadValue( txSniper );\n    vec4 turret0        = LoadValue( txTurret0 );\n    vec4 turret1        = LoadValue( txTurret1 );\n\n    float worldX        = pixelX + camera.x;\n    float worldY        = pixelY - 8.0;\n    \n    vec2 screenUV = fragCoord.xy / iResolution.xy;\n    vec3 color = texture( iChannel1, screenUV ).xyz;\n            \n    float sniperX = worldX - sniper.x + SNIPER_SIZE.x * 0.5;\n    float sniperY = worldY - sniper.y;\n    sniperX = sniper.z < 0.0 ? 24.0 - sniperX : sniperX;\n    SpriteSniper( color, sniperX, sniperY );\n    \n    DrawTurret( color, turret0, worldX, worldY );\n    DrawTurret( color, turret1, worldX, worldY );\n    DrawSoldier( color, soldier0, soldier0State, worldX, worldY );\n    DrawSoldier( color, soldier1, soldier1State, worldX, worldY );\n    DrawSoldier( color, soldier2, soldier2State, worldX, worldY );\n   \n    // draw player\n    float billX = worldX - player.x;\n    float billY = worldY - player.y;\n    billX = playerDir.w > 0.0 && fract( 3.0 * iTime ) < 0.5 ? 100.0 : billX;\n    if ( playerState.x == STATE_PRONE )\n    {\n        billX += BILL_PRONE_SIZE.x * 0.5;\n        billX = playerDir.z < 0.0 ? BILL_PRONE_SIZE.x - billX : billX;\n        SpriteBillProne( color, billX, billY );\n    }\n    else if ( playerState.x == STATE_JUMP )\n    {\n        billX += BILL_JUMP_SIZE.x * 0.5;\n        billX = playerDir.z < 0.0 ? BILL_JUMP_SIZE.x - billX : billX;\n        SpriteBillJump( color, billX, billY, playerState.y );\n    }\n    else\n    {           \n        billX += BILL_RUN_SIZE.x * 0.5;\n        billX = playerDir.z < 0.0 ? BILL_RUN_SIZE.x - billX : billX;        \n\n        if ( playerState.x == STATE_WATER || playerState.x == STATE_UNDER_WATER )\n        {\n            SpriteWaterCircle( color, billX, billY - 4.0 );\n        }\n        \n        if ( playerState.x != STATE_WATER && playerState.x != STATE_UNDER_WATER )\n        {\n            SpriteBillLegs( color, billX, billY, playerState.y );            \n        }\n\n        float torsoX = billX + ( playerState.y == 0.0 ? 0.0 : -2.0 );\n        float torsoY = billY + ( playerState.x == STATE_WATER ? -8.0 : -20.0 );\n        if ( playerState.x != STATE_UNDER_WATER )\n        {\n            if ( playerDir.y > 0.0 && abs( playerDir.x ) > 0.0 )\n            {\n                SpriteBillTorsoTR( color, torsoX - 2.0, torsoY + 1.0 );            \n            }\n            else if ( playerDir.y > 0.0 )        \n            {\n                SpriteBillTorsoT( color, torsoX, torsoY + 1.0 );\n            }\n            else if ( playerDir.y < 0.0 )\n            {\n                SpriteBillTorsoBR( color, torsoX, torsoY + 7.0 );\n            }\n            else\n            {\n                SpriteBillTorsoR( color, torsoX, torsoY + 1.0 );\n            }\n        }\n    }\n\n    fragColor = vec4( color, 1.0 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buf C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// UI and some foreground stuff\n\n#define SPRITE_DEC_2( x, i ) mod( floor( i / pow( 2.0, mod( x, 24.0 ) ) ), 2.0 )\n#define SPRITE_DEC_3( x, i ) mod( floor( i / pow( 4.0, mod( x, 11.0 ) ) ), 4.0 )\n#define SPRITE_DEC_4( x, i ) mod( floor( i / pow( 4.0, mod( x, 8.0 ) ) ), 4.0 )\n#define RGB( r, g, b ) vec3( float( r ) / 255.0, float( g ) / 255.0, float( b ) / 255.0 )\n\nconst float NES_RES_X               = 224.0;\nconst float NES_RES_Y               = 192.0;\nconst float GAME_STATE_TITLE\t\t= 0.0;\nconst float GAME_STATE_LEVEL\t\t= 1.0;\nconst float GAME_STATE_LEVEL_DIE\t= 2.0;\nconst float GAME_STATE_LEVEL_WIN\t= 3.0;\nconst float GAME_STATE_GAME_OVER\t= 4.0;\nconst float GAME_STATE_VICTORY\t\t= 5.0;\nconst float WEAPON_RIFLE        \t= 0.0;\nconst vec2  BULLET_SIZE         \t= vec2( 3.0,  3.0  );\nconst vec2  POWER_UP_SIZE       \t= vec2( 24.0, 14.0 );\nconst float UI_VICTORY_TIME\t\t\t= 300.0;\n\n// storage\nconst vec2 txPlayer \t\t\t= vec2( 0.0, 0.0 ); \t// xy - pos, z - jump start, w - jump dir\nconst vec2 txPlayerState\t\t= vec2( 1.0, 0.0 ); \t// x - state, y - frame, z - jump tick, w - lifes\nconst vec2 txPlayerDir\t\t\t= vec2( 2.0, 0.0 ); \t// xy - dir, z - flip, w - immortality\nconst vec2 txPlayerWeapon\t\t= vec2( 3.0, 0.0 ); \t// x - weapon, y - weapon cooldown, z - weapon fire rate, w - weapon bullet num\nconst vec2 txCamera \t\t\t= vec2( 4.0, 0.0 ); \t// x - cam offset, y - spawn counter, z - soldier spawn counter\nconst vec2 txSoldier0 \t\t\t= vec2( 5.0, 0.0 ); \t// xy - pos, z - flip\nconst vec2 txSoldier1 \t\t\t= vec2( 5.0, 1.0 ); \t// xy - pos, z - flip\nconst vec2 txSoldier2 \t\t\t= vec2( 5.0, 2.0 ); \t// xy - pos, z - flip\nconst vec2 txSoldier0State \t\t= vec2( 6.0, 0.0 ); \t// x - state, y - frame, z - jump tick\nconst vec2 txSoldier1State \t\t= vec2( 6.0, 1.0 ); \t// x - state, y - frame, z - jump tick\nconst vec2 txSoldier2State \t\t= vec2( 6.0, 2.0 ); \t// x - state, y - frame, z - jump tick\nconst vec2 txSniper\t \t\t\t= vec2( 7.0, 0.0 ); \t// xy - pos, z - flip, w - weapon cooldown\nconst vec2 txPlayerBullet0 \t\t= vec2( 8.0, 0.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet1 \t\t= vec2( 8.0, 1.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet2 \t\t= vec2( 8.0, 2.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet3 \t\t= vec2( 8.0, 3.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet4 \t\t= vec2( 8.0, 4.0 ); \t// xy - pos, xy - dir\nconst vec2 txPlayerBullet5 \t\t= vec2( 8.0, 5.0 ); \t// xy - pos, xy - dir\nconst vec2 txEnemyBullet0 \t\t= vec2( 9.0, 0.0 ); \t// xy - pos, xy - dir\nconst vec2 txEnemyBullet1 \t\t= vec2( 9.0, 1.0 ); \t// xy - pos, xy - dir\nconst vec2 txEnemyBullet2 \t\t= vec2( 9.0, 2.0 ); \t// xy - pos, xy - dir\nconst vec2 txEnemyBullet3 \t\t= vec2( 9.0, 3.0 ); \t// xy - pos, xy - dir\nconst vec2 txExplosion \t\t\t= vec2( 10.0, 0.0 ); \t// xy - pos, z - frame\nconst vec2 txHit \t\t\t\t= vec2( 11.0, 0.0 ); \t// xy - pos, z - frame\nconst vec2 txTurret0\t\t\t= vec2( 12.0, 0.0 ); \t// xy - pos, z - angle\nconst vec2 txTurret1\t\t\t= vec2( 12.0, 1.0 ); \t// xy - pos, z - angle\nconst vec2 txTurret0State\t\t= vec2( 13.0, 0.0 ); \t// x - HP, y - weapon cooldown\nconst vec2 txTurret1State\t\t= vec2( 13.0, 1.0 ); \t// x - HP, y - weapon cooldown\nconst vec2 txPowerUp\t\t\t= vec2( 14.0, 0.0 ); \t// xy - pos, z - frame\nconst vec2 txPowerUpState\t\t= vec2( 15.0, 0.0 ); \t// x - state, y - initial height, z - jump tick\nconst vec2 txBossCore\t\t\t= vec2( 16.0, 0.0 ); \t// xy - pos, z - HP\nconst vec2 txBossCannon0\t\t= vec2( 17.0, 0.0 ); \t// xy - pos, z - cooldown, w - HP\nconst vec2 txBossCannon1\t\t= vec2( 17.0, 1.0 ); \t// xy - pos, z - cooldown, w - HP\nconst vec2 txBossBullet0\t\t= vec2( 18.0, 0.0 ); \t// xy - pos, zw - velocity\nconst vec2 txBossBullet1\t\t= vec2( 18.0, 1.0 ); \t// xy - pos, zw - velocity\nconst vec2 txGameState\t\t\t= vec2( 19.0, 0.0 ); \t// x - state, y - state tick\nconst vec2 txBridge\t\t\t\t= vec2( 20.0, 0.0 ); \t// x - draw start, y - explode tick\n\nvec4 LoadValue( vec2 tx )\n{\n    return floor( texture( iChannel0, ( tx + 0.5 ) / iChannelResolution[ 0 ].xy ) );\n}\n\nfloat Rand( vec2 co )\n{\n    return fract( sin( dot( co.xy, vec2( 12.9898, 78.233 ) ) ) * 43758.5453 );\n}\n\nvoid SpritePowerBullet( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n    idx = y == 4.0 ? ( x <= 7.0 ? 84.0 : 0.0 ) : idx;\n    idx = y == 3.0 ? ( x <= 7.0 ? 349.0 : 0.0 ) : idx;\n    idx = y == 2.0 ? ( x <= 7.0 ? 405.0 : 0.0 ) : idx;\n    idx = y == 1.0 ? ( x <= 7.0 ? 361.0 : 0.0 ) : idx;\n    idx = y == 0.0 ? ( x <= 7.0 ? 84.0 : 0.0 ) : idx;\n\n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 5.0 ? idx : 0.0;\n    \n    color = idx == 1.0 ? RGB( 255,  46,   0 ) : color;\n    color = idx == 2.0 ? RGB( 255, 112,  78 ) : color;\n    color = idx == 3.0 ? RGB( 255, 255, 255 ) : color;\n}\n\nvoid SpriteBullet( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n    idx = y == 2.0 ? ( x <= 7.0 ? 4.0 : 0.0 ) : idx;\n    idx = y == 1.0 ? ( x <= 7.0 ? 21.0 : 0.0 ) : idx;\n    idx = y == 0.0 ? ( x <= 7.0 ? 4.0 : 0.0 ) : idx;\n\n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 3.0 ? idx : 0.0;\n    \n    color = idx == 1.0 ? RGB( 255, 255, 255 ) : color;\n}\n\nvoid SpriteHit( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;    \n    \n    idx = y == 6.0 ? 608.0 : idx;\n    idx = y == 5.0 ? 2056.0 : idx;\n    idx = y == 4.0 ? 8194.0 : idx;\n    idx = y == 3.0 ? 4097.0 : idx;\n    idx = y == 2.0 ? 8194.0 : idx;\n    idx = y == 1.0 ? 2056.0 : idx;\n    idx = y == 0.0 ? 608.0 : idx;\n\n    idx = SPRITE_DEC_3( x, idx );\n    idx = x >= 0.0 && x < 7.0 ? idx : 0.0;\n    \n    color = idx == 1.0 ? RGB( 228,  68,  52 ) : color;\n    color = idx == 2.0 ? RGB( 255, 140, 124 ) : color;\n}\n\nvoid SpriteExplosion( inout vec3 color, float x, float y, float frame )\n{\n    float idx = 0.0;\n    \n    x = abs( x );\n    y = abs( y );\n\n    if ( frame == 0.0 )\n    {\n        idx = y == 11.0 ? ( x <= 7.0 ? 21.0 : 0.0 ) : idx;\n        idx = y == 10.0 ? ( x <= 7.0 ? 342.0 : 0.0 ) : idx;\n        idx = y == 9.0 ? ( x <= 7.0 ? 5541.0 : 0.0 ) : idx;\n        idx = y == 8.0 ? ( x <= 7.0 ? 26990.0 : 0.0 ) : idx;\n        idx = y == 7.0 ? ( x <= 7.0 ? 32182.0 : ( x <= 15.0 ? 1.0 : 0.0 ) ) : idx;\n        idx = y == 6.0 ? ( x <= 7.0 ? 39595.0 : ( x <= 15.0 ? 5.0 : 0.0 ) ) : idx;\n        idx = y == 5.0 ? ( x <= 7.0 ? 64183.0 : ( x <= 15.0 ? 6.0 : 0.0 ) ) : idx;\n        idx = y == 4.0 ? ( x <= 7.0 ? 44783.0 : ( x <= 15.0 ? 23.0 : 0.0 ) ) : idx;\n        idx = y == 3.0 ? ( x <= 7.0 ? 48127.0 : ( x <= 15.0 ? 22.0 : 0.0 ) ) : idx;\n        idx = y == 2.0 ? ( x <= 7.0 ? 44799.0 : ( x <= 15.0 ? 103.0 : 0.0 ) ) : idx;\n        idx = y == 1.0 ? ( x <= 7.0 ? 64511.0 : ( x <= 15.0 ? 90.0 : 0.0 ) ) : idx;\n        idx = y == 0.0 ? ( x <= 7.0 ? 49151.0 : ( x <= 15.0 ? 90.0 : 0.0 ) ) : idx;\n    }\n    else if ( frame == 1.0 )\n    {\n        idx = y == 13.0 ? ( x <= 7.0 ? 25.0 : 0.0 ) : idx;\n        idx = y == 12.0 ? ( x <= 7.0 ? 1705.0 : 0.0 ) : idx;\n        idx = y == 11.0 ? ( x <= 7.0 ? 23295.0 : 0.0 ) : idx;\n        idx = y == 10.0 ? ( x <= 7.0 ? 32682.0 : ( x <= 15.0 ? 5.0 : 0.0 ) ) : idx;\n        idx = y == 9.0 ? ( x <= 7.0 ? 65232.0 : ( x <= 15.0 ? 22.0 : 0.0 ) ) : idx;\n        idx = y == 8.0 ? ( x <= 7.0 ? 58384.0 : ( x <= 15.0 ? 27.0 : 0.0 ) ) : idx;\n        idx = y == 7.0 ? ( x <= 7.0 ? 57600.0 : ( x <= 15.0 ? 107.0 : 0.0 ) ) : idx;\n        idx = y == 6.0 ? ( x <= 7.0 ? 41216.0 : ( x <= 15.0 ? 110.0 : 0.0 ) ) : idx;\n        idx = y == 5.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 430.0 : 0.0 ) ) : idx;\n        idx = y == 4.0 ? ( x <= 7.0 ? 32768.0 : ( x <= 15.0 ? 430.0 : 0.0 ) ) : idx;\n        idx = y == 3.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 442.0 : 0.0 ) ) : idx;\n        idx = y == 2.0 ? ( x <= 7.0 ? 4096.0 : ( x <= 15.0 ? 1462.0 : 0.0 ) ) : idx;\n        idx = y == 1.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 1520.0 : 0.0 ) ) : idx;\n        idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 1460.0 : 0.0 ) ) : idx;\n    }\n    else\n    {   \n        idx = y == 15.0 ? ( x <= 7.0 ? 68.0 : 0.0 ) : idx;\n        idx = y == 14.0 ? ( x <= 7.0 ? 1280.0 : 0.0 ) : idx;\n        idx = y == 13.0 ? ( x <= 7.0 ? 16384.0 : 0.0 ) : idx;\n        idx = y == 12.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 5.0 : 0.0 ) ) : idx;\n        idx = y == 11.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 16.0 : 0.0 ) ) : idx;\n        idx = y == 10.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 64.0 : 0.0 ) ) : idx;\n        idx = y == 8.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 256.0 : 0.0 ) ) : idx;\n        idx = y == 5.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 4096.0 : 0.0 ) ) : idx;\n        idx = y == 3.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 16384.0 : 0.0 ) ) : idx;\n        idx = y == 2.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 16384.0 : 0.0 ) ) : idx;\n        \n    }\n\n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 12.0 + frame * 2.0 ? idx : 0.0;\n    \n    color = idx == 1.0 ? RGB( 228,  68,  52 ) : color;\n    color = idx == 2.0 ? RGB( 255, 140, 124 ) : color;\n    color = idx == 3.0 ? RGB( 255, 255, 255 ) : color;\n}\n\nvoid SpritePowerUp( inout vec3 color, float x, float y, float frame )\n{\n    float idx = 0.0;    \n    \n    if ( frame == 0.0 )\n    {\n        idx = y == 13.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 5460.0 : 0.0 ) ) : idx;\n        idx = y == 12.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 32765.0 : 1.0 ) ) : idx;\n        idx = y == 11.0 ? ( x <= 7.0 ? 54272.0 : ( x <= 15.0 ? 54615.0 : 23.0 ) ) : idx;\n        idx = y == 10.0 ? ( x <= 7.0 ? 23808.0 : ( x <= 15.0 ? 31421.0 : 117.0 ) ) : idx;\n        idx = y == 9.0 ? ( x <= 7.0 ? 55104.0 : ( x <= 15.0 ? 65215.0 : 471.0 ) ) : idx;\n        idx = y == 8.0 ? ( x <= 7.0 ? 40276.0 : ( x <= 15.0 ? 43690.0 : 5494.0 ) ) : idx;\n        idx = y == 7.0 ? ( x <= 7.0 ? 57193.0 : ( x <= 15.0 ? 43690.0 : 27127.0 ) ) : idx;\n        idx = y == 6.0 ? ( x <= 7.0 ? 57193.0 : ( x <= 15.0 ? 64175.0 : 27127.0 ) ) : idx;\n        idx = y == 5.0 ? ( x <= 7.0 ? 56660.0 : ( x <= 15.0 ? 65215.0 : 5495.0 ) ) : idx;\n        idx = y == 4.0 ? ( x <= 7.0 ? 55104.0 : ( x <= 15.0 ? 64175.0 : 471.0 ) ) : idx;\n        idx = y == 3.0 ? ( x <= 7.0 ? 23808.0 : ( x <= 15.0 ? 27305.0 : 117.0 ) ) : idx;\n        idx = y == 2.0 ? ( x <= 7.0 ? 54272.0 : ( x <= 15.0 ? 54615.0 : 23.0 ) ) : idx;\n        idx = y == 1.0 ? ( x <= 7.0 ? 16384.0 : ( x <= 15.0 ? 32765.0 : 1.0 ) ) : idx;\n        idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 5460.0 : 0.0 ) ) : idx;\n    }\n    else\n    {\n        idx = y == 14.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 320.0 : 0.0 ) ) : idx;\n        idx = y == 13.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 1744.0 : 0.0 ) ) : idx;\n        idx = y == 12.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 6836.0 : 0.0 ) ) : idx;\n        idx = y == 11.0 ? ( x <= 7.0 ? 2389.0 : ( x <= 15.0 ? 1680.0 : 21856.0 ) ) : idx;\n        idx = y == 10.0 ? ( x <= 7.0 ? 8123.0 : ( x <= 15.0 ? 21845.0 : 61172.0 ) ) : idx;\n        idx = y == 9.0 ? ( x <= 7.0 ? 31078.0 : ( x <= 15.0 ? 26969.0 : 39277.0 ) ) : idx;\n        idx = y == 8.0 ? ( x <= 7.0 ? 42669.0 : ( x <= 15.0 ? 27241.0 : 31386.0 ) ) : idx;\n        idx = y == 7.0 ? ( x <= 7.0 ? 39252.0 : ( x <= 15.0 ? 27305.0 : 5478.0 ) ) : idx;\n        idx = y == 6.0 ? ( x <= 7.0 ? 27344.0 : ( x <= 15.0 ? 27305.0 : 1961.0 ) ) : idx;\n        idx = y == 5.0 ? ( x <= 7.0 ? 42304.0 : ( x <= 15.0 ? 27033.0 : 346.0 ) ) : idx;\n        idx = y == 4.0 ? ( x <= 7.0 ? 44288.0 : ( x <= 15.0 ? 26969.0 : 122.0 ) ) : idx;\n        idx = y == 3.0 ? ( x <= 7.0 ? 21504.0 : ( x <= 15.0 ? 26969.0 : 21.0 ) ) : idx;\n        idx = y == 2.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 26969.0 : 0.0 ) ) : idx;\n        idx = y == 1.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 26969.0 : 0.0 ) ) : idx;\n        idx = y == 0.0 ? ( x <= 7.0 ? 0.0 : ( x <= 15.0 ? 21845.0 : 0.0 ) ) : idx;\n    }\n\n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 24.0 ? idx : 0.0;    \n    \n    color = idx == 1.0 ? RGB( 0,    0,   0   ) : color;\n    color = idx == 2.0 ? RGB( 228,  68,  52  ) : color;\n    color = idx == 3.0 ? RGB( 255,  184, 168 ) : color;\n}\n\nvoid SpriteLife( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n    \n    idx = y == 15.0 ? 21845.0 : idx;\n    idx = y == 14.0 ? 26985.0 : idx;\n    idx = y == 13.0 ? 26985.0 : idx;\n    idx = y == 12.0 ? 26985.0 : idx;\n    idx = y == 11.0 ? 26985.0 : idx;\n    idx = y == 10.0 ? 6500.0 : idx;\n    idx = y == 9.0 ? 1360.0 : idx;\n    idx = y == 8.0 ? 1744.0 : idx;\n    idx = y == 7.0 ? 1360.0 : idx;\n    idx = y == 6.0 ? 7140.0 : idx;\n    idx = y == 5.0 ? 28345.0 : idx;\n    idx = y == 4.0 ? 31725.0 : idx;\n    idx = y == 3.0 ? 31725.0 : idx;\n    idx = y == 2.0 ? 28345.0 : idx;\n    idx = y == 1.0 ? 7140.0 : idx;\n    idx = y == 0.0 ? 1360.0 : idx;    \n    \n    idx = SPRITE_DEC_4( x, idx );\n    \n    color = idx == 1.0 ? RGB( 0,    0,   0   ) : color;\n    color = idx == 2.0 ? RGB( 48,   31,  252 ) : color;\n    color = idx == 3.0 ? RGB( 255,  218, 144 ) : color;\n}\n\nvoid SpriteStage1( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n\n    idx = y == 6.0 ? ( x <= 23.0 ? 4095806.0 : ( x <= 47.0 ? 32574.0 : 30.0 ) ) : idx;\n    idx = y == 5.0 ? ( x <= 23.0 ? 8330311.0 : ( x <= 47.0 ? 1895.0 : 28.0 ) ) : idx;\n    idx = y == 4.0 ? ( x <= 23.0 ? 7412743.0 : ( x <= 47.0 ? 1799.0 : 28.0 ) ) : idx;\n    idx = y == 3.0 ? ( x <= 23.0 ? 7412798.0 : ( x <= 47.0 ? 32631.0 : 28.0 ) ) : idx;\n    idx = y == 2.0 ? ( x <= 23.0 ? 8330352.0 : ( x <= 47.0 ? 1895.0 : 28.0 ) ) : idx;\n    idx = y == 1.0 ? ( x <= 23.0 ? 7412851.0 : ( x <= 47.0 ? 1911.0 : 28.0 ) ) : idx;\n    idx = y == 0.0 ? ( x <= 23.0 ? 7412798.0 : ( x <= 47.0 ? 32606.0 : 62.0 ) ) : idx;\n    \n    idx = SPRITE_DEC_2( x, idx );\n    idx = x >= 0.0 && x < 54.0 ? idx : 0.0;\n\n    color = idx == 1.0 ? RGB( 255, 255, 255 ) : color;\n}\n\nvoid SpriteJungle( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n\n    idx = y == 6.0 ? ( x <= 23.0 ? 6776700.0 : 8324926.0 ) : idx;\n    idx = y == 5.0 ? ( x <= 23.0 ? 7300920.0 : 460647.0 ) : idx;\n    idx = y == 4.0 ? ( x <= 23.0 ? 8087352.0 : 460551.0 ) : idx;\n    idx = y == 3.0 ? ( x <= 23.0 ? 7563064.0 : 8324983.0 ) : idx;\n    idx = y == 2.0 ? ( x <= 23.0 ? 6514489.0 : 460647.0 ) : idx;\n    idx = y == 1.0 ? ( x <= 23.0 ? 6514489.0 : 460663.0 ) : idx;\n    idx = y == 0.0 ? ( x <= 23.0 ? 6503966.0 : 8355678.0 ) : idx;\n\n    idx = SPRITE_DEC_2( x, idx );\n    idx = x >= 0.0 && x < 47.0 ? idx : 0.0;\n\n    color = idx == 1.0 ? RGB( 255, 255, 255 ) : color;\n}\n\nvoid SpriteGameOver( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n\n    idx = y == 6.0 ? ( x <= 23.0 ? 6503998.0 : ( x <= 47.0 ? 4063359.0 : 4161399.0 ) ) : idx;\n    idx = y == 5.0 ? ( x <= 23.0 ? 7831399.0 : ( x <= 47.0 ? 7536647.0 : 6752119.0 ) ) : idx;\n    idx = y == 4.0 ? ( x <= 23.0 ? 8352007.0 : ( x <= 47.0 ? 7536647.0 : 6752054.0 ) ) : idx;\n    idx = y == 3.0 ? ( x <= 23.0 ? 6123895.0 : ( x <= 47.0 ? 7536767.0 : 4161334.0 ) ) : idx;\n    idx = y == 2.0 ? ( x <= 23.0 ? 4816743.0 : ( x <= 47.0 ? 7536647.0 : 3606300.0 ) ) : idx;\n    idx = y == 1.0 ? ( x <= 23.0 ? 4288887.0 : ( x <= 47.0 ? 8323079.0 : 6752028.0 ) ) : idx;\n    idx = y == 0.0 ? ( x <= 23.0 ? 4288862.0 : ( x <= 47.0 ? 4063359.0 : 6782728.0 ) ) : idx;\n\n    idx = SPRITE_DEC_2( x, idx );\n    idx = x >= 0.0 && x < 71.0 ? idx : 0.0;\n\n    color = idx == 1.0 ? RGB( 255, 255, 255 ) : color;\n}\n\nvoid SpriteHelicopter( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;    \n    \n\tidx = y == 10.0 ? ( x <= 7.0 ? 0.0 : 32768.0 ) : idx;\n\tidx = y == 9.0 ? ( x <= 7.0 ? 0.0 : 28672.0 ) : idx;\n\tidx = y == 8.0 ? ( x <= 7.0 ? 0.0 : 24672.0 ) : idx;\n\tidx = y == 7.0 ? ( x <= 7.0 ? 0.0 : 6155.0 ) : idx;\n\tidx = y == 6.0 ? ( x <= 7.0 ? 57344.0 : 1600.0 ) : idx;\n\tidx = y == 5.0 ? ( x <= 7.0 ? 6400.0 : 424.0 ) : idx;\n\tidx = y == 4.0 ? ( x <= 7.0 ? 36944.0 : 106.0 ) : idx;\n\tidx = y == 3.0 ? ( x <= 7.0 ? 58373.0 : 27.0 ) : idx;\n\tidx = y == 2.0 ? ( x <= 7.0 ? 57600.0 : 26.0 ) : idx;\n\tidx = y == 1.0 ? ( x <= 7.0 ? 43264.0 : 5.0 ) : idx;\n\tidx = y == 0.0 ? ( x <= 7.0 ? 21760.0 : 0.0 ) : idx;\n    \n    idx = SPRITE_DEC_4( x, idx );\n    idx = x >= 0.0 && x < 16.0 ? idx : 0.0;\n\n    color = idx == 1.0 ? RGB( 0,   91,  0 )   : color;\n    color = idx == 2.0 ? RGB( 0,   171, 71 )  : color;\n    color = idx == 3.0 ? RGB( 184, 248, 216 ) : color;\n}\n\nvoid SpriteVictory( inout vec3 color, float x, float y )\n{\n    float idx = 0.0;\n\n    idx = y == 6.0 ? ( x <= 23.0 ? 6766142.0 : ( x <= 47.0 ? 4079422.0 : ( x <= 71.0 ? 485247.0 : ( x <= 95.0 ? 4095806.0 : ( x <= 119.0 ? 4089662.0 : 28.0 ) ) ) ) ) : idx;\n    idx = y == 5.0 ? ( x <= 23.0 ? 7304039.0 : ( x <= 47.0 ? 8349543.0 : ( x <= 71.0 ? 485148.0 : ( x <= 95.0 ? 1842303.0 : ( x <= 119.0 ? 4681587.0 : 28.0 ) ) ) ) ) : idx;\n    idx = y == 4.0 ? ( x <= 23.0 ? 8090471.0 : ( x <= 47.0 ? 7431943.0 : ( x <= 71.0 ? 485148.0 : ( x <= 95.0 ? 1842289.0 : ( x <= 119.0 ? 490355.0 : 28.0 ) ) ) ) ) : idx;\n    idx = y == 3.0 ? ( x <= 23.0 ? 7566087.0 : ( x <= 47.0 ? 7421815.0 : ( x <= 71.0 ? 485148.0 : ( x <= 95.0 ? 1842289.0 : ( x <= 119.0 ? 4092787.0 : 28.0 ) ) ) ) ) : idx;\n    idx = y == 2.0 ? ( x <= 23.0 ? 6517607.0 : ( x <= 47.0 ? 8337255.0 : ( x <= 71.0 ? 485148.0 : ( x <= 95.0 ? 1842303.0 : ( x <= 119.0 ? 7365491.0 : 0.0 ) ) ) ) ) : idx;\n    idx = y == 1.0 ? ( x <= 23.0 ? 6520679.0 : ( x <= 47.0 ? 7432055.0 : ( x <= 71.0 ? 485148.0 : ( x <= 95.0 ? 1842289.0 : ( x <= 119.0 ? 7562111.0 : 0.0 ) ) ) ) ) : idx;\n    idx = y == 0.0 ? ( x <= 23.0 ? 6503998.0 : ( x <= 47.0 ? 7432030.0 : ( x <= 71.0 ? 8338972.0 : ( x <= 95.0 ? 4070513.0 : ( x <= 119.0 ? 4088638.0 : 28.0 ) ) ) ) ) : idx;\n\n    idx = SPRITE_DEC_2( x, idx );\n    idx = x >= 0.0 && x < 125.0 ? idx : 0.0;\n\n    color = idx == 1.0 ? RGB( 255, 255, 255 ) : color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    // we want 224x192 (overscan) and we want multiples of pixel size\n    float resMultX      = floor( iResolution.x / NES_RES_X );\n    float resMultY      = floor( iResolution.y / NES_RES_Y );\n    float resRcp        = 1.0 / max( min( resMultX, resMultY ), 1.0 );\n    float screenWidth   = floor( iResolution.x * resRcp );\n    float screenHeight  = floor( iResolution.y * resRcp );\n    float pixelX        = floor( fragCoord.x * resRcp );\n    float pixelY        = floor( fragCoord.y * resRcp );   \n    \n    vec4 playerState    = LoadValue( txPlayerState );\n    vec4 playerWeapon   = LoadValue( txPlayerWeapon );    \n    vec4 camera         = LoadValue( txCamera );\n    vec4 playerBullet0  = LoadValue( txPlayerBullet0 );\n    vec4 playerBullet1  = LoadValue( txPlayerBullet1 );\n    vec4 playerBullet2  = LoadValue( txPlayerBullet2 );\n    vec4 playerBullet3  = LoadValue( txPlayerBullet3 );\n    vec4 playerBullet4  = LoadValue( txPlayerBullet4 );\n    vec4 playerBullet5  = LoadValue( txPlayerBullet5 );\n    vec4 enemyBullet0   = LoadValue( txEnemyBullet0 );\n    vec4 enemyBullet1   = LoadValue( txEnemyBullet1 );\n    vec4 enemyBullet2   = LoadValue( txEnemyBullet2 );\n    vec4 enemyBullet3   = LoadValue( txEnemyBullet3 );\n    vec4 bossBullet0\t= LoadValue( txBossBullet0 );\n    vec4 bossBullet1\t= LoadValue( txBossBullet1 );\n    vec4 powerUp        = LoadValue( txPowerUp );    \n    vec4 explosion      = LoadValue( txExplosion );\n    vec4 hit            = LoadValue( txHit );    \n    vec4 gameState      = LoadValue( txGameState );\n\n    float worldX        = pixelX + camera.x;\n    float worldY        = pixelY - 8.0;    \n\n    vec2 screenUV = fragCoord.xy / iResolution.xy;\n    vec3 color = texture( iChannel1, screenUV ).xyz; \n    \n    SpritePowerUp( color, worldX - powerUp.x + POWER_UP_SIZE.x * 0.5, worldY - powerUp.y, powerUp.z );\n    if ( playerWeapon.x == WEAPON_RIFLE )\n    {\n        SpriteBullet( color, worldX - playerBullet0.x + 1.0, worldY - playerBullet0.y );\n        SpriteBullet( color, worldX - playerBullet1.x + 1.0, worldY - playerBullet1.y );\n        SpriteBullet( color, worldX - playerBullet2.x + 1.0, worldY - playerBullet2.y );\n        SpriteBullet( color, worldX - playerBullet3.x + 1.0, worldY - playerBullet3.y );\n        SpriteBullet( color, worldX - playerBullet4.x + 1.0, worldY - playerBullet4.y );\n        SpriteBullet( color, worldX - playerBullet5.x + 1.0, worldY - playerBullet5.y );\n    }\n    else\n    {\n        SpritePowerBullet( color, worldX - playerBullet0.x + 2.0, worldY - playerBullet0.y );\n        SpritePowerBullet( color, worldX - playerBullet1.x + 2.0, worldY - playerBullet1.y );\n        SpritePowerBullet( color, worldX - playerBullet2.x + 2.0, worldY - playerBullet2.y );\n        SpritePowerBullet( color, worldX - playerBullet3.x + 2.0, worldY - playerBullet3.y );\n        SpritePowerBullet( color, worldX - playerBullet4.x + 2.0, worldY - playerBullet4.y );\n        SpritePowerBullet( color, worldX - playerBullet5.x + 2.0, worldY - playerBullet5.y );\n    }\n    SpriteBullet( color, worldX - enemyBullet0.x + 1.0, worldY - enemyBullet0.y );\n    SpriteBullet( color, worldX - enemyBullet1.x + 1.0, worldY - enemyBullet1.y );\n    SpriteBullet( color, worldX - enemyBullet2.x + 1.0, worldY - enemyBullet2.y );\n    SpriteBullet( color, worldX - enemyBullet3.x + 1.0, worldY - enemyBullet3.y );\n\tSpritePowerBullet( color, worldX - bossBullet0.x + 2.0, worldY - bossBullet0.y );\n\tSpritePowerBullet( color, worldX - bossBullet1.x + 2.0, worldY - bossBullet1.y );    \n    SpriteExplosion( color, worldX - explosion.x, worldY - explosion.y, explosion.z );\n    SpriteHit( color, worldX - hit.x, worldY - hit.y );      \n    \n    if ( pixelX > 32.0 && pixelX < 32.0 + 8.0 * ( playerState.w - 1.0 ) )\n    {\n        SpriteLife( color, pixelX, pixelY - screenHeight + 32.0 );\n    }\n    \n    if ( gameState.x == GAME_STATE_TITLE )\n    {\n        color = vec3( 0.0 );\n        SpriteStage1( color, pixelX - floor( screenWidth * 0.5 - 30.5 ), pixelY - floor( screenHeight * 0.5 - 10.5 ) );\n        SpriteJungle( color, pixelX - floor( screenWidth * 0.5 - 30.5 ), pixelY - floor( screenHeight * 0.5 + 10.5 ) );\n    }\n    else if ( gameState.x == GAME_STATE_GAME_OVER )\n    {\n        color = vec3( 0.0 );\n        SpriteGameOver( color, pixelX - floor( screenWidth * 0.5 - 36.5 ), pixelY - floor( screenHeight * 0.5 ) );\n    }\n    else if ( gameState.x == GAME_STATE_VICTORY )\n    {\n        // water / sky\n        color = pixelY < 80.0 ? RGB( 0, 112, 236 ) : vec3( 0.0 );\n        \n        // stars\n        float starRand = Rand( vec2( worldX * 0.01, worldY * 0.01 ) );\n        if ( starRand > 0.998 && worldY > 130.0 )\n        {\n            color = fract( iTime + starRand * 113.17 + worldX * 3.14 ) < 0.5 ? RGB( 255, 255, 255 ) : RGB( 0, 112, 236 );\n        }        \n        \n        SpriteVictory( color, pixelX - floor( screenWidth * 0.5 - 63.5 ), pixelY - floor( screenHeight * 0.5 ) - 20.0 );\n        SpriteHelicopter( color, floor( pixelX - screenWidth * ( 0.25 + 0.5 * ( 1.0 - gameState.y / UI_VICTORY_TIME ) ) ), pixelY - 90.0 );\n    }\n    else if ( gameState.x == GAME_STATE_LEVEL )\n    {\n\t\tfloat fadeAlpha = clamp( ( gameState.y - 30.0 ) / 30.0, 0.0, 1.0 );\n        color = pixelX < fadeAlpha * screenWidth ? color : vec3( 0.0 );\n    }\n    \n    fragColor = vec4( color, 1.0 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buf D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}