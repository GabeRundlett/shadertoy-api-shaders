{
    "Shader": {
        "info": {
            "date": "1657435482",
            "description": "Add motion blur to any shader by including a simple #define in the Common pass (see comments).\nThis method uses procedural noise, instead of the textured blue noise.\nI've had SO MUCH FUN adding motion blur to YOUR shaders ... everything becomes SMOOTHER!!",
            "flags": 0,
            "hasliked": 0,
            "id": "7scBWs",
            "likes": 12,
            "name": "Add Motion Blur to any shader 2",
            "published": 3,
            "tags": [
                "raymarching",
                "motionblur",
                "utility",
                "small"
            ],
            "usePreview": 0,
            "username": "GregRostami",
            "viewed": 864
        },
        "renderpass": [
            {
                "code": "// This is a fork of Fabrice's amazing tuto: motion blur (dithering):\n// https://www.shadertoy.com/view/wt3fDH\n//\n// Dithered motion blur adds motion blur to your shader without slowing it down.\n// \n// Thanks to Fabrice's help, you can add motion blur to your shader by simply\n// adding the \"Common\" Pass to your shader with this #define in it:\n// #define iTime (iTime + fract(1e4*sin(dot(gl_FragCoord.xy,vec2(137,-13))))* iTimeDelta)\n//\n// This is the easiest way of adding motion blur to your shader, since\n// all references to iTime in your shader stay intact.\n\nvoid mainImage(out vec4 o, vec2 u)\n{\n    float T = iTime;\n    o-=o;\n    for(vec4 p = vec4(10.*cos(T), 0, 0, 30.+30.*sin(T)-40.*T), i = o-2.;\n        o.x > (p*.1*i+i).y; i+=.002)\n    o = i* texture(iChannel0, p.xw/2e2),\n    p.xy += u/iResolution.x*.1, p-=.05;\n    o++;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define iTime ( iTime + fract(1e4*sin(dot(gl_FragCoord.xy,vec2(137,-13))))* iTimeDelta )",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}