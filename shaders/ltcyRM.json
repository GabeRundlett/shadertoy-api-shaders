{
    "Shader": {
        "info": {
            "date": "1536350605",
            "description": "Shader to simulate bending a card. I am using a chrome plugin to use my own images. However, the default pictures look weird, but get the point across.",
            "flags": 0,
            "hasliked": 0,
            "id": "ltcyRM",
            "likes": 6,
            "name": "Card Bending",
            "published": 3,
            "tags": [
                "bending",
                "pokercards"
            ],
            "usePreview": 0,
            "username": "metaphysical_quandary",
            "viewed": 1000
        },
        "renderpass": [
            {
                "code": "\n#define distance 0.0015\n#define M_PI 3.1415926535897932384626433832795\n\nvec2 enter = vec2(0.0, 9.0);\nvec2 line = vec2(0.24,0.67);\n\nfloat CalculateY(float x, vec2 line)\n{\n\treturn (x * line.x) + line.y;\n}\nfloat CalculateX(float y, vec2 line)\n{\n    return (y / line.x) - line.y;\n}\nfloat Distance(vec2 pos, vec2 line)\n{\n    return abs(line.x * pos.x - pos.y + line.y) / sqrt(line.x * line.x + 1.0);\n}\nfloat PointDistance(vec2 a, vec2 b)\n{\n    float x = a.x - b.x;\n    float y = a.y - b.y;\n    return sqrt((x * x) + (y * y));\n}\nvec2 Reflection(vec2 pos, vec2 line)\n{\n    float d = (pos.x + (pos.y - line.y) * line.x) / (1.0 + line.x * line.x);\n    return vec2(2.0 * d - pos.x, 2.0 * d * line.x - pos.y + 2.0 * line.y);\n}\nfloat Sigmoid(float x)\n{\n    return ((x) / (1.0 + abs(x)));\n}\nvec4 GetTextureScaled(sampler2D sampler, vec2 p)\n{\n    vec2 a = vec2(p.x / 16.0, p.y / 9.0); \n    return texture(sampler, a); \n}\nvoid CalculateLine()\n{\n    vec2 mouse = iMouse.xy;\n    mouse.x = mouse.x / iResolution.x * 16.0;\n    mouse.y = mouse.y / iResolution.y * 9.0;\n    float dx = mouse.x - enter.x;\n    float dy = mouse.y - enter.y;\n    vec2 mid = vec2(enter.x + (dx / 2.0), enter.y + (dy / 2.0)); \n    float m = -(mouse.x - enter.x) / (mouse.y - enter.y);\n    line = vec2(m, ((-m * mid.x) + mid.y));   \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tvec2 pos = fragCoord.xy;\n    pos.x = pos.x / iResolution.x * 16.0;\n    pos.y = pos.y / iResolution.y * 9.0;\n    \n    CalculateLine();\n    //------Debugging Start------\n    if(false)\n    {\n        vec2 mouse = iMouse.xy;\n        mouse.x = mouse.x / iResolution.x * 16.0;\n        mouse.y = mouse.y / iResolution.y * 9.0;\n        if(PointDistance(pos, mouse) < 0.08)\n        {\n            fragColor = vec4(0.1, 0.5, 1.0, 1.0);\n            return;\n        }\n        if(PointDistance(pos, enter) < 0.1)\n        {\n            fragColor = vec4(0.1, 0.8, 0.1, 1.0);\n            return;\n        }\n        if(Distance(pos, line) < 0.05)\n        {\n            fragColor = vec4(0.7, 0.1, 0.5, 1.0);\n            return;\n        }\n    }\n    //------Debugging End------\n    \n    float ye = CalculateY(enter.x, line);\n    float yp = CalculateY(pos.x, line);\n    \n    if(pos.y > yp == enter.y > ye)\n    {\n        float d = clamp(1.0 - Sigmoid(Distance(pos, line)) * 0.8, 0.0, 1.0);\n        vec4 color = GetTextureScaled(iChannel2, pos.xy);\n        color.xyz = color.xyz - d;\n        fragColor = color;\n    }\n\telse \n    {\n        vec2 ref = Reflection(pos, line);\n        ref.y = 9.0 - ref.y;\n        float yr = CalculateY(ref.x, line);\n        \n        if(ref.x >= 0.0 && ref.x <= 16.0 && ref.y >= 0.0 && ref.y <= 9.0)\n        {\n        \tfloat d = clamp(1.0 - Sigmoid(Distance(pos, line)) * 1.3, 0.0, 1.2);\n            vec4 color = GetTextureScaled(iChannel1, ref.xy);\n            if(color.w < 1.0)\n            {\n        \t\tcolor = GetTextureScaled(iChannel0, pos.xy);\n                if(color.w < 1.0)\n                    color = GetTextureScaled(iChannel2, pos.xy);\n            \tcolor.xyz = color.xyz - d;\n            }\n            else\n            {\n\t        \tcolor.xyz = color.xyz - d;\n    \t    \tfragColor = color;\n            }\n        }\n        else\n        {\n        \tfloat d = clamp(1.0 - Sigmoid(Distance(pos, line)) * 1.3, 0.0, 1.2);\n            fragColor = GetTextureScaled(iChannel0, pos.xy);\n            if(fragColor.w < 1.0)\n                fragColor = GetTextureScaled(iChannel2, pos.xy);\n            fragColor.xyz = fragColor.xyz - d;\n        }\n    }\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 9,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}