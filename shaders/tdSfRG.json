{
    "Shader": {
        "info": {
            "date": "1590257710",
            "description": "potoa",
            "flags": 0,
            "hasliked": 0,
            "id": "tdSfRG",
            "likes": 7,
            "name": "Day 155",
            "published": 3,
            "tags": [
                "mdtmjvm"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 421
        },
        "renderpass": [
            {
                "code": "vec3 glow = vec3(0);\n\nfloat id = 0.;\n\nfloat sdBox(vec3 p, vec3 s){\n\tp = abs(p) - s;\n\treturn max(p.x, max(p.y,p.z));\n}\n\n\n    \n#define rot(j) mat2(cos(j),-sin(j),sin(j),cos(j))\n#define pal(a,b,c,d,e) (a + b*sin(c*d + e))\n#define AO(j) clamp(map(p+n*j).x/j,0.,1.)\n#define SSS(j) smoothstep(0.,1.,map(p+l*j).x/j)\n\n\nfloat r11(float t){return fract(sin(t*414.125)*114.12521);}\n\nfloat valN(float t){return mix(r11(floor(t)),r11(floor(t)+1.),pow(fract(t),2.));}\nvec3 nois(float t){\n    t /= 2.;\n\treturn vec3(valN(t+200.),valN(t+10.),valN(t+50.));\n\n}\n\nvec3 n;\n\nvec2 map(vec3 p){\n\tvec2 d = vec2(10e7);\n    \n    \n    vec3 sz = vec3(1.,0.5,0.5)/2.;\n    \n    //p.y += sz.y;\n    \n    \n    for(int i = 0; i < 8; i++){\n    \t\n        float b = sdBox(p, sz);\n        \n        sz *= vec3(0.74,0.5,0.74);\n        if(b<=d.x){\n        \tid = float(i);\n            d.x = b;\n        }\n        p=abs(p);\n        \n        p.xy *= rot(-0.9+n.x);\n        p.yz *= rot(0.6-n.y*0.3);\n        p.xz *= rot(-0.2+n.y*0.1);\n    \tp.xy -= sz.xy*2.;\n        \n        \n    }\n    \n    //glow += exp(-d.x*20.)*pal(0.5,0.6,vec3(0.6,0.2,0.1),1.,p.x+iTime);\n    return d;\n\n}\n\nvec3 getNormal(vec3 p){\n\tvec2 t = vec2(0.001,0.);\n\treturn normalize(map(p).x - vec3(\n    \tmap(p-t.xyy).x,\n    \tmap(p-t.yxy).x,\n    \tmap(p-t.yyx).x\n    ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    n = nois(iTime);\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0);\n\n    vec3 ro = vec3(0);\n    \n    ro.xz = 2.*vec2(cos(n.x*6.14),sin(n.x*6.));\n    \n    \n    vec3 lookAt = vec3(0);\n    \n    vec3 dir = normalize(lookAt - ro);\n    \n    vec3 right = normalize(cross(vec3(0,1,0), dir));\n    vec3 up = normalize(cross(dir, right));\n    \n    vec3 rd = normalize(dir + right*uv.x + up*uv.y);\n    \n    \n    \n    vec3 p = ro; float t = 0.; bool hit = false;\n    \n    vec2 d;\n    \n    for(int i = 0; i < 250; i++){\n    \td = map(p);\n        \n        \n        if(d.x < 0.001){\n        \thit = true;\n            break;\n        }\n    \n        p += rd*d.x;\n        t += d.x;\n    }\n    \n    vec3 l = normalize(vec3(1));\n    if(hit){\n    \tvec3 n = getNormal(p);\n        \n        float ao = AO(0.6)*AO(0.1)*AO(0.3)*SSS(0.8);\n        \n        vec3 c = pal(0.5, 0.5,vec3(1.,0.4,0.2),1., iTime + length(p) +id );\n        \n        col += c*ao;\n        \n    }\n    \n    col = mix(col, vec3(0.1,0.1,0.1)/7.,smoothstep(0.,1.,t*0.1));\n    \n    if(!hit){\n    \tcol += glow*0.01;\n    \n    }    \n    \n    col *= 4.;\n    \n    \n    //col *= 1. - pow(dot(p,p), 2.);\n    \n    col = pow(max(col,0.),vec3(0.4545454));\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}