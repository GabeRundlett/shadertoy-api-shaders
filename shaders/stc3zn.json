{
    "Shader": {
        "info": {
            "date": "1635592467",
            "description": "https://www.reveal-sound.com/plug-ins/spire",
            "flags": 0,
            "hasliked": 0,
            "id": "stc3zn",
            "likes": 13,
            "name": "Reveal Sound Spire Knob",
            "published": 3,
            "tags": [
                "knob"
            ],
            "usePreview": 0,
            "username": "Lastminute",
            "viewed": 332
        },
        "renderpass": [
            {
                "code": "precision lowp float;\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\n\n#define PI 3.1415926\n\nvec4 overlay(vec4 a, vec4 b)\n{\n\tfloat f = a.a + b.a * (1.0 - a.a);\n\treturn vec4((a.rgb * a.a + b.rgb * b.a * (1.0 - a.a)) / f, f);\n}\n\nfloat line(vec2 p, vec2 a, vec2 b)\n{\n\tvec2 pa = p - a, ba = b - a;\n\tfloat h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n\treturn length(pa - ba * h);\n}\n\nmat2 rotate2d(float angle)\n{\n\treturn mat2(-cos(angle), sin(angle), -sin(angle), -cos(angle));\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float aa = 1.0 / ((iResolution.x + iResolution.y) / 2.0);\n\tfloat range = 0.75;\n\n    vec2 uv = (fragCoord.xy - iResolution.xy * 0.5) / iResolution.y * 1.25;\n\n\tfloat av = (1.0 - range) * PI + (iMouse.x / iResolution.x) * 2.0 * PI * range;\n\tfloat avn = (iMouse.x / iResolution.x);\n\tfloat a = atan(uv.x, uv.y) - av;\n\tfloat l = length(uv);\n\n\tfloat a2 = fract((atan(uv.x, uv.y) + PI * 0.75) / (2.0 * PI));\n\n\tfloat arc = smoothstep(a2 - 0.001, a2 + 0.001, 0.75);\n\tfloat arcm = smoothstep(a2 - aa / 2.0, a2 + aa / 2.0, 0.75 * avn);\n\tfloat line_df = line(uv * rotate2d(av), vec2(0.0, 0.325), vec2(0.0, 0.0));\n\n\tvec4 colour = vec4(0.0);\n\n\tfloat cap_df = l - (smoothstep(1.0, -1.0, sin(a * 12. + PI / 2.0) -1.0)) * 0.05;\n\tvec4 border = vec4(vec3(0.737,0.733,0.733), smoothstep(l - aa, l + aa, 0.5));\n\tvec4 bttm = vec4(vec3(0.0), smoothstep(l - aa, l + aa, 0.485));\n\tvec4 bttm_arc = vec4(vec3(0.22), arc);\n\tvec4 bttm_arc2 = vec4(vec3(0.361), arc);\n\tvec4 top_arc1 = vec4(vec3(1.0, 0.498, 0.0), arcm);\n\tvec4 top_arc2 = vec4(vec3(1.0, 0.831, 0.0), arcm);\n\tvec3 capct = vec3(0.961);\n\tvec3 capcb = vec3(0.333);\n\tvec3 capg = mix(capct, capcb, length(0.5 - uv.y));\n\tvec4 metal = vec4(vec3(1.0), max(smoothstep(sin((atan(uv.x, uv.y) - av * 0.05) * 2.0) - 0.5, sin((atan(uv.x, uv.y) - av * 0.025) * 4.0) + 3.0, 0.75) * 0.5, 0.0));\n\tvec4 line = vec4(vec3(1.0), smoothstep(line_df - aa, line_df + aa, 0.025));\n\tvec4 line_s = vec4(vec3(0.0), smoothstep(line_df - 0.025, line_df + 0.025, 0.025) * 0.25);\n\n\tcolour = overlay(vec4(vec3(0.863), 1.0), colour);\n\tcolour = overlay(border, colour);\n\tcolour = overlay(bttm, colour);\n\tcolour = overlay(bttm_arc * smoothstep(length(uv) - aa, length(uv) + aa, 0.475), colour);\n\tcolour = overlay(bttm_arc2 * smoothstep(length(uv) - aa, length(uv) + aa, 0.435), colour);\n\tcolour = overlay(vec4(vec3(0.0), smoothstep(cap_df - 0.05, cap_df + 0.05, 0.325)) * 0.25, colour);\n\tcolour = overlay(vec4(vec3(0.0), smoothstep(length(uv + vec2(0.0, 0.2)) - 0.3, length(uv + vec2(0.0, 0.2)) + 0.3, 0.3)), colour);\n\tcolour = overlay(vec4(top_arc1.rgb, top_arc1.a * smoothstep(length(uv) - aa, length(uv) + aa, 0.475) * smoothstep(length(uv) + aa, length(uv) - aa, 0.385)), colour);\n\tcolour = overlay(vec4(top_arc2.rgb, top_arc2.a * smoothstep(length(uv) - 0.025, length(uv) + 0.025, 0.45) * smoothstep(length(uv) + 0.025, length(uv) - 0.025, 0.42)), colour);\n\tcolour = overlay(vec4(capg, smoothstep(cap_df - aa, cap_df + aa, 0.325)), colour);\n\tcolour = overlay(vec4(vec3(0.0), smoothstep(l - aa, l + aa, 0.32)), colour);\n\tcolour = overlay(vec4(vec3(0.1), smoothstep(l - aa, l + aa, 0.31)), colour);\n\tcolour = overlay(metal * smoothstep(l - aa, l + aa, 0.32), colour);\n\tcolour = overlay(line_s, colour);\n\tcolour = overlay(line, colour);\n\n\tfragColor =  colour;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}