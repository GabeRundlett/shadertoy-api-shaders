{
    "Shader": {
        "info": {
            "date": "1582731731",
            "description": "Lord of the Rings - One Ring to rule them all.\nRevisiting https://www.shadertoy.com/view/4tfBRf with proper Elvish inscription, thanks to user Dave (https://www.shadertoy.com/user/Dave) and his excellent font: https://www.shadertoy.com/view/MtS3RK",
            "flags": 64,
            "hasliked": 0,
            "id": "ttGSDD",
            "likes": 16,
            "name": "The One Ring Revisited",
            "published": 3,
            "tags": [
                "sdf",
                "hell",
                "ring",
                "sauron",
                "fonts",
                "lotr",
                "gold"
            ],
            "usePreview": 1,
            "username": "k_kondrak",
            "viewed": 823
        },
        "renderpass": [
            {
                "code": "// ----------------------------------------------------\n//  \"The One Ring Revisited\" by Krzysztof Kondrak @k_kondrak\n// ----------------------------------------------------\n\n// enable/disable AA\n#define ANTIALIASING 1\n#define AA_SAMPLES 2\n#define AA_WIDTH .8\n\n#define FOV 5.5\n#define RING_RADIUS 1.5\n\n// raymarching constants\n#define MIN_DIST  .001\n#define MAX_DIST  30.\n#define NUM_STEPS 100\n#define BACKGROUND_ID 0\n#define RING_ID       1\n\n// Gold color: https://www.shadertoy.com/view/XdVSRV\nconst vec3 GOLD1 = vec3(1.1,  0.91, 0.52);\nconst vec3 GOLD2 = vec3(1.1,  1.07, 0.88);\nconst vec3 GOLD3 = vec3(1.02, 0.82, 0.55);\n\n// texture mapping parameters for text positioning\nconst float vMin = -0.45;\nconst float vMax = 0.45;\n\n// initial eye/camera position\nvec3 EYE = vec3(7.5, 0., 0.);\n\n// helper struct to collect raymarching data\nstruct RMInfo\n{\n  \tvec3 pos;\n  \tvec3 normal;\n  \tint  objId;\n};\n\n// ------------------\n//  1D hash function\n// ------------------\nfloat hash(float n)\n{\n    return fract(sin(n)*753.5453123);\n}\n\n// ----------------------------------------------\n//  noise: https://www.shadertoy.com/view/4sfGzS\n// ----------------------------------------------\nfloat noise(vec3 x)\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f * f * (3.0 - 2.0 * f);\n\t\n    float n = p.x + p.y * 157.0 + 113.0 * p.z;\n    return mix(mix(mix(hash(n +   0.0), hash(n +   1.0), f.x),\n                   mix(hash(n + 157.0), hash(n + 158.0), f.x), f.y),\n               mix(mix(hash(n + 113.0), hash(n + 114.0), f.x),\n                   mix(hash(n + 270.0), hash(n + 271.0), f.x), f.y), f.z);\n}\n\n// -----------------\n//  vector rotation\n// -----------------\nvec2 rotate(vec2 v, float a)\n{\n    return vec2(v.x * cos(a) - v.y * sin(a), v.x * sin(a) + v.y * cos(a));\n}\n\n\n// ----------------------------------------------------------\n//  Elvish characters: https://www.shadertoy.com/view/MtS3RK\n// ----------------------------------------------------------\nstruct EL\n{\n    float x, y, rx, ry, dx, dy;\n};\n\nmat3 myInverse( mat3 m )\n{\n    mat3 res;\n    res[0][0] = m[0][0];\n    res[0][1] = m[1][0];\n    res[1][0] = m[0][1];\n    res[1][1] = m[1][1];\n    vec2 t = mat2( res ) * vec2( -m[2][0], -m[2][1] );\n    res[2] = vec3( t, 1.0 );\n    return res;\n}\n\nfloat toEL( in vec2 v, in EL el )\n{\n    mat3 m = mat3(\n        el.dx, el.dy, 0.0,\n        -el.dy, el.dx, 0.0,\n        el.x, el.y, 1.0 );\n    mat3 mi = myInverse( m );\n\n    vec2 t = ( mi * vec3( v, 1.0 ) ).xy;\n    return t.x * t.x / ( el.rx * el.rx ) + t.y * t.y / ( el.ry * el.ry ) - 1.0;\n}\n\nfloat toDash1( vec2 uv )\n{\n\tEL ael[12];\n\tael[0] = EL( 110.0, 117.0, 8.8, 200.3, 0.966, -0.259 );\n\tael[1] = EL( 90.0, 39.0, 72.2, 242.6, 0.966, -0.259 );\n\tael[2] = EL( 161.0, 306.0, 5.0, 11.0, 0.966, -0.259 );\n\tael[3] = EL( 152.0, 278.0, 4.0, 6.0, 1.000, 0.000 );\n\tael[4] = EL( 32.0, 276.0, 112.0, 118.0, 1.000, 0.000 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = min( d, toEL( uv, ael[2] ) );\n\td = min( d, toEL( uv, ael[3] ) );\n    return d;\n}\n\nfloat toDash3( vec2 uv )\n{\n\tEL ael[8];\n\tael[0] = EL( 32.0, 276.0, 112.0, 118.0, 1.000, 0.000 );\n\tael[1] = EL( -17.0, 250.0, 159.0, 163.0, 1.000, 0.000 );\n\tael[2] = EL( 65.0, 362.0, 100.0, 100.0, 1.000, 0.000 );\n\tael[3] = EL( 138.0, 296.0, 4.3, 12.3, 0.966, 0.259 );\n\tael[4] = EL( 243.0, 207.0, 100.0, 126.5, 0.940, -0.342 );\n\tael[5] = EL( 238.0, 140.0, 125.4, 193.2, 0.951, -0.309 );\n\tael[6] = EL( 278.0, 295.0, 100.0, 100.0, 1.000, 0.000 );\n\tael[7] = EL( 180.0, 283.0, 5.7, 9.8, 0.866, -0.500 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = max( d, -toEL( uv, ael[2] ) );\n\td = min( d, toEL( uv, ael[3] ) );\n\td = min( d, toEL( uv, ael[4] ) );\n\td = max( d, -toEL( uv, ael[5] ) );\n\td = max( d, -toEL( uv, ael[6] ) );\n\td = min( d, toEL( uv, ael[7] ) );\n    d = min( d, toDash1( uv ) );\n\treturn d;    \n}\n\nfloat toCharC( vec2 uv )\n{\n    float d = toEL( uv, EL( 106.0, 102.0, 76.0, 100.0, 0.96, -0.25 ) );\n    d = max( d, -toEL( uv, EL( 118.0, 105.0, 71.0, 90.0, 0.97, -0.20 ) ) );\n    d = min( d, toEL( uv, EL( 151.0, 177.0, 10.4, 15.8, -0.788, -0.615 ) ) );\n    return d;\n}\n\nfloat toCharC1( vec2 uv )\n{\n\tfloat d = toEL( uv, EL( 98.0, 100.0, 78.8, 105.5, 0.866, -0.500 ) );\n\td = max( d, -toEL( uv, EL( 88.0, 94.0, 70.0, 95.4, 0.858, -0.513 ) ) );\n\td = min( d, toEL( uv, EL( 46.0, 22.0, 12.0, 19.8, 0.755, 0.656 ) ) );\n\treturn d;\n}\n\nfloat toCharp( vec2 uv )\n{\n    float d = toEL( uv, EL( -303.0, 201.0, 357.0, 379.0, 1.0, 0.0 ) );\n    d = max( d, -toEL( uv, EL( -353.0, 218.0, 410.0, 408.0, 1.0, 0.0 ) ) );\n    d = min( d, toEL( uv, EL( 389.0, 21.0, 359.0, 351.0, 1.0, 0.0 ) ) );\n    d = max( d, -toEL( uv, EL( 435.0, -16.0, 411.0, 404.0, 1.0, 0.0 ) ) );\n    d = min( d, toEL( uv, EL( 145.0, 100.0, 100.0, 100.0, 1.0, 0.0 ) ) );\n    d = max( d, -toEL( uv, EL( 182.0, 90.0, 139.0, 112.0, 1.0, 0.0 ) ) );\n    d = min( d, toEL( uv, EL( 95.0, 68.0, 49.0, 141.0, 0.92, -0.39 ) ) );\n    d = max( d, -toEL( uv, EL( 71.0, 28.0, 51.5, 180.2, 0.92, -0.39 ) ) );\n    return d;\n}\n\nfloat toCharZ( vec2 uv )\n{\n\tEL ael[4];\n\tael[0] = EL( 100.0, 86.0, 87.4, 123.6, 0.799, -0.602 );\n\tael[1] = EL( 67.0, 66.0, 81.6, 147.1, 0.719, -0.695 );\n\tael[2] = EL( 65.0, -174.0, 100.0, 194.2, 0.819, -0.574 );\n\tael[3] = EL( 41.0, -173.0, 104.4, 194.5, 0.739, -0.674 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = min( d, toEL( uv, ael[2] ) );\n\td = max( d, -toEL( uv, ael[3] ) );\n\treturn d;\n}\n\nfloat toCharw( vec2 uv )\n{\n\tEL ael[8];\n\tael[0] = EL( 120.0, -80.0, 74.8, 359.8, 0.875, -0.485 );\n\tael[1] = EL( 117.0, -50.0, 81.7, 390.5, 0.883, -0.469 );\n\tael[2] = EL( 95.0, 101.0, 66.5, 103.5, 0.940, -0.342 );\n\tael[3] = EL( 109.0, 117.0, 52.8, 95.3, 0.914, -0.407 );\n\tael[4] = EL( 215.0, 101.0, 66.8, 103.1, 0.940, -0.342 );\n\tael[5] = EL( 224.0, 116.0, 52.6, 95.7, 0.914, -0.407 );\n\tael[6] = EL( 385.0, 136.0, 100.0, 100.0, 1.000, 0.000 );\n\tael[7] = EL( 388.0, 108.0, 100.0, 146.7, 0.966, -0.259 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = min( d, toEL( uv, ael[2] ) );\n\td = max( d, -toEL( uv, ael[3] ) );\n\td = min( d, toEL( uv, ael[4] ) );\n\td = max( d, -toEL( uv, ael[5] ) );\n\td = min( d, toEL( uv, ael[6] ) );\n\td = max( d, -toEL( uv, ael[7] ) );\n\treturn d;\n}\n\nfloat toCharTilda( vec2 uv )\n{\n\tEL ael[3];\n\tael[0] = EL( 255.0, -7.0, 619.0, 209.0, 1.000, 0.000 );\n\tael[1] = EL( 116.0, -43.0, 1030.2, 229.2, 0.999, 0.052 );\n\tael[2] = EL( 301.0, 125.0, 371.9, 66.7, 0.974, 0.225 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = max( d, -toEL( uv, ael[2] ) );\n\treturn d;\n}\n\nfloat toCharj( vec2 uv )\n{\n\tEL ael[2];\n\tael[0] = EL( -63.0, -82.0, 83.0, 329.0, 0.848, -0.530 );\n\tael[1] = EL( -98.0, -106.0, 88.7, 340.7, 0.829, -0.559 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\treturn d;\n}\n\nfloat toCurl( vec2 uv )\n{\n\tEL ael[7];\n\tael[0] = EL( 204.0, 181.0, 100.0, 271.1, 0.904, -0.428 );\n\tael[1] = EL( 191.0, 148.0, 92.6, 277.2, 0.912, -0.409 );\n\tael[2] = EL( 284.0, 301.0, 60.0, 60.0, 1.000, 0.000 );\n\tael[3] = EL( 391.0, 38.0, 146.0, 302.2, 0.978, -0.208 );\n\tael[4] = EL( 288.0, 317.0, 45.0, 67.3, 0.996, -0.087 );\n\tael[5] = EL( 256.0, 335.0, 17.0, 16.0, 1.000, 0.000 );\n\tael[6] = EL( 110.0, 99.0, 100.0, 100.0, 1.000, 0.000 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = min( d, toEL( uv, ael[2] ) );\n\td = max( d, -toEL( uv, ael[3] ) );\n\td = max( d, -toEL( uv, ael[4] ) );\n\td = min( d, toEL( uv, ael[5] ) );\n\td = max( d, -toEL( uv, ael[6] ) );\n\treturn d;\n}\n\nfloat toCurl2( vec2 uv )\n{\n\tEL ael[4];\n\tael[0] = EL( 193.0, 89.0, 100.0, 355.7, 0.919, -0.394 );\n\tael[1] = EL( 198.0, 77.0, 100.0, 375.2, 0.914, -0.405 );\n\tael[2] = EL( 112.0, 14.0, 385.0, 187.0, 1.000, 0.000 );\n\tael[3] = EL( 321.0, 408.0, 11.0, 19.1, 0.164, 0.986 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = max( d, -toEL( uv, ael[2] ) );\n\td = min( d, toEL( uv, ael[3] ) );\n\treturn d;\n}\n\nfloat toCharh( vec2 uv )\n{\n\tEL ael[4];\n\tael[0] = EL( 9.0, 14.0, 81.4, 220.5, 0.821, -0.571 );\n\tael[1] = EL( -7.0, -3.0, 78.9, 214.6, 0.839, -0.545 );\n\tael[2] = EL( -57.0, 182.0, 100.0, 100.0, 1.000, 0.000 );\n\tael[3] = EL( 104.0, -100.0, 196.0, 99.9, 0.970, 0.242 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = max( d, -toEL( uv, ael[2] ) );\n\td = max( d, -toEL( uv, ael[3] ) );\n    d = min( d, toCharC1( uv + vec2( -110.0, 0.0 ) ) );\n    d = min( d, toCurl( uv + vec2( -20.0, 0.0 ) ) );\n\treturn d;\n}\n\nfloat toCharpm( vec2 uv )\n{\n\tEL ael[8];\n\tael[0] = EL( 273.0, -7.0, 100.0, 224.2, 0.875, -0.485 );\n\tael[1] = EL( 264.0, -20.0, 88.4, 225.2, 0.866, -0.500 );\n\tael[2] = EL( 139.0, -3.0, 100.0, 227.4, 0.875, -0.485 );\n\tael[3] = EL( 131.0, -16.0, 85.9, 229.6, 0.875, -0.485 );\n\tael[4] = EL( 305.0, -126.0, 417.0, 130.0, 1.000, 0.000 );\n\tael[5] = EL( -21.0, -86.0, 100.0, 313.6, 0.906, -0.423 );\n\tael[6] = EL( -38.0, -105.0, 88.2, 323.4, 0.899, -0.438 );\n\tael[7] = EL( -99.0, 58.0, 100.0, 261.7, 0.899, -0.438 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = min( d, toEL( uv, ael[2] ) );\n\td = max( d, -toEL( uv, ael[3] ) );\n\td = max( d, -toEL( uv, ael[4] ) );\n\td = min( d, toEL( uv, ael[5] ) );\n\td = max( d, -toEL( uv, ael[6] ) );\n\td = max( d, -toEL( uv, ael[7] ) );\n    d = min( d, toCharTilda( vec2( uv + vec2( -135.0, 190.0 ) ) ) );\n\treturn d;\n}\n\nfloat toTilda2( vec2 uv )\n{\n    EL ael[4];\n\tael[0] = EL( 148.0, 43.0, 224.0, 158.0, 1.000, 0.000 );\n\tael[1] = EL( 156.0, 35.0, 266.0, 151.0, 1.000, 0.000 );\n\tael[2] = EL( 293.0, 267.0, 100.0, 100.0, 1.000, 0.000 );\n\tael[3] = EL( 290.0, 287.0, 118.0, 113.0, 1.000, 0.000 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = min( d, toEL( uv, ael[2] ) );\n\td = max( d, -toEL( uv, ael[3] ) );\n    return d;\n}\n\nfloat toCharE1( vec2 uv )\n{\n\tEL ael[8];\n\tael[0] = EL( 172.0, 51.0, 132.0, 146.0, 1.000, 0.000 );\n\tael[1] = EL( 189.0, 57.0, 126.7, 133.2, 1.000, 0.017 );\n\tael[2] = EL( 271.0, 92.0, 146.8, 79.4, 0.755, 0.656 );\n\tael[3] = EL( 261.0, 110.0, 158.9, 89.5, 0.766, 0.643 );\n\tael[4] = EL( 223.0, -5.0, 59.6, 68.0, 0.999, 0.052 );\n\tael[5] = EL( 209.0, -8.0, 54.0, 65.0, 1.000, 0.000 );\n\tael[6] = EL( 212.0, 20.0, 62.2, 41.6, 0.982, 0.191 );\n\tael[7] = EL( 210.0, 20.0, 44.1, 34.5, 0.956, 0.292 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = min( d, toEL( uv, ael[2] ) );\n\td = max( d, -toEL( uv, ael[3] ) );\n\td = min( d, toEL( uv, ael[4] ) );\n\td = max( d, -toEL( uv, ael[5] ) );\n\td = min( d, toEL( uv, ael[6] ) );\n\td = max( d, -toEL( uv, ael[7] ) );\n    d = min( d, toTilda2( uv ) );\n    d = min( d, toCurl( uv ) );\n\treturn d;\n}\n\nfloat toCharE2( vec2 uv )\n{\n\tEL ael[8];\n\tael[0] = EL( 172.0, 51.0, 132.0, 146.0, 1.000, 0.000 );\n\tael[1] = EL( 189.0, 57.0, 126.7, 133.2, 1.000, 0.017 );\n\tael[2] = EL( 271.0, 92.0, 146.8, 79.4, 0.755, 0.656 );\n\tael[3] = EL( 261.0, 110.0, 158.9, 89.5, 0.766, 0.643 );\n\tael[4] = EL( 223.0, -5.0, 59.6, 68.0, 0.999, 0.052 );\n\tael[5] = EL( 209.0, -8.0, 54.0, 65.0, 1.000, 0.000 );\n\tael[6] = EL( 212.0, 20.0, 62.2, 41.6, 0.982, 0.191 );\n\tael[7] = EL( 210.0, 20.0, 44.1, 34.5, 0.956, 0.292 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = min( d, toEL( uv, ael[4] ) );\n\td = max( d, -toEL( uv, ael[5] ) );\n\td = min( d, toEL( uv, ael[6] ) );\n\td = max( d, -toEL( uv, ael[7] ) );\n    d = min( d, toTilda2( uv ) );\n    d = min( d, toCurl( uv ) );\n\treturn d;\n}\n\nfloat toCharY2( vec2 uv )\n{\n\tEL ael[8];\n\tael[0] = EL( 120.0, -80.0, 74.8, 359.8, 0.875, -0.485 );\n\tael[1] = EL( 117.0, -50.0, 81.7, 390.5, 0.883, -0.469 );\n\tael[2] = EL( 95.0, 101.0, 66.5, 103.5, 0.940, -0.342 );\n\tael[3] = EL( 109.0, 117.0, 52.8, 95.3, 0.914, -0.407 );\n\tael[4] = EL( 215.0, 101.0, 66.8, 103.1, 0.940, -0.342 );\n\tael[5] = EL( 224.0, 116.0, 52.6, 95.7, 0.914, -0.407 );\n\tael[6] = EL( 385.0, 136.0, 100.0, 100.0, 1.000, 0.000 );\n\tael[7] = EL( 388.0, 108.0, 100.0, 146.7, 0.966, -0.259 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = min( d, toEL( uv, ael[4] ) );\n\td = max( d, -toEL( uv, ael[5] ) );\n    d = min( d, toTilda2( uv + vec2( -100.0, -15.0 ) ) );\n    d = min( d, toCurl( uv + vec2( -170.0, 0.0 ) ) );\n    d = min( d, toCurl2( uv + vec2( -80.0, 0.0 ) ) );\n\treturn d;\n}\n\nfloat toPeriod( vec2 uv )\n{\n\tEL ael[1];\n\tael[0] = EL( 40.0, 23.0, 21.0, 22.0, 1.000, 0.000 );\n    float d = toEL( uv, ael[0] );\n\treturn d;\n}\n\nfloat toCharC2( vec2 uv )\n{\n\tEL ael[6];\n\tael[0] = EL( 88.0, 80.0, 81.9, 278.4, 0.914, -0.407 );\n\tael[1] = EL( 89.0, 59.0, 87.8, 292.0, 0.914, -0.407 );\n\tael[2] = EL( -51.0, 15.0, 40.0, 124.9, 0.945, -0.328 );\n\tael[3] = EL( 98.0, 100.0, 78.4, 105.8, 0.866, -0.500 );\n\tael[4] = EL( 88.0, 94.0, 70.9, 95.2, 0.866, -0.500 );\n\tael[5] = EL( 46.0, 22.0, 11.6, 16.4, 0.755, 0.656 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = max( d, -toEL( uv, ael[2] ) );\n\td = min( d, toEL( uv, ael[3] ) );\n\td = max( d, -toEL( uv, ael[4] ) );\n\td = min( d, toEL( uv, ael[5] ) );\n\treturn d;\n}\n\nfloat toCharY3( vec2 uv )\n{\n\tEL ael[6];\n\tael[0] = EL( 23.0, -51.0, 77.6, 268.1, 0.934, -0.358 );\n\tael[1] = EL( 6.0, -62.0, 77.5, 273.0, 0.921, -0.391 );\n\tael[2] = EL( 75.0, 77.0, 60.5, 74.5, 0.993, -0.121 );\n\tael[3] = EL( 78.0, 95.0, 55.8, 82.7, 0.993, -0.122 );\n\tael[4] = EL( -27.0, 82.0, 44.2, 126.6, 0.951, -0.309 );\n\tael[5] = EL( -37.0, 57.0, 49.4, 138.5, 0.968, -0.253 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = min( d, toEL( uv, ael[2] ) );\n\td = max( d, -toEL( uv, ael[3] ) );\n\td = min( d, toEL( uv, ael[4] ) );\n\td = max( d, -toEL( uv, ael[5] ) );\n\treturn d;\n}\n\nfloat toSmallTilda( vec2 uv )\n{\n\tEL ael[4];\n\tael[0] = EL( 168.0, 126.0, 178.0, 84.0, 1.000, 0.000 );\n\tael[1] = EL( 196.0, 84.0, 302.9, 120.3, 1.000, 0.017 );\n\tael[2] = EL( 177.0, 295.0, 189.0, 95.0, 1.000, 0.000 );\n\tael[3] = EL( 106.0, 310.0, 337.2, 104.9, 1.000, -0.017 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = min( d, toEL( uv, ael[2] ) );\n\td = max( d, -toEL( uv, ael[3] ) );\n\treturn d;\n}\n\nfloat toCharE3( vec2 uv )\n{\n\tEL ael[7];\n\tael[0] = EL( 170.0, 229.0, 100.0, 244.3, 0.909, -0.418 );\n\tael[1] = EL( 201.0, 253.0, 102.4, 268.7, 0.887, -0.462 );\n\tael[2] = EL( 66.0, -136.0, 100.0, 153.6, 0.921, -0.391 );\n\tael[3] = EL( 79.0, -126.0, 87.3, 142.4, 0.921, -0.391 );\n\tael[4] = EL( 118.0, -126.0, 54.0, 69.8, 0.891, -0.454 );\n\tael[5] = EL( 116.0, -142.0, 47.9, 61.1, 0.866, -0.500 );\n\tael[6] = EL( 75.0, -157.0, 12.8, 11.8, 0.946, -0.326 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = min( d, toEL( uv, ael[2] ) );\n\td = max( d, -toEL( uv, ael[3] ) );\n\td = min( d, toEL( uv, ael[4] ) );\n\td = max( d, -toEL( uv, ael[5] ) );\n\td = min( d, toEL( uv, ael[6] ) );\n\treturn d;\n}\n\nfloat toCharq( vec2 uv )\n{\n\tEL ael[8];\n\tael[0] = EL( 120.0, -80.0, 74.8, 359.8, 0.875, -0.485 );\n\tael[1] = EL( 117.0, -50.0, 81.7, 390.5, 0.883, -0.469 );\n\tael[2] = EL( 215.0, 101.0, 66.8, 103.1, 0.940, -0.342 );\n\tael[3] = EL( 224.0, 116.0, 52.6, 95.7, 0.914, -0.407 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = min( d, toEL( uv, ael[2] ) );\n\td = max( d, -toEL( uv, ael[3] ) );\n    d = min( d, toSmallTilda( uv + vec2( -50.0, 0.0 ) ) );\n\treturn d;\n}\n\nfloat toCharm( vec2 uv )\n{\n\tEL ael[9];\n\tael[0] = EL( 273.0, -7.0, 100.0, 224.2, 0.875, -0.485 );\n\tael[1] = EL( 264.0, -20.0, 88.4, 225.2, 0.866, -0.500 );\n\tael[2] = EL( 139.0, -3.0, 100.0, 227.4, 0.875, -0.485 );\n\tael[3] = EL( 131.0, -16.0, 85.9, 229.6, 0.875, -0.485 );\n\tael[4] = EL( 305.0, -126.0, 417.0, 130.0, 1.000, 0.000 );\n\tael[5] = EL( -21.0, -86.0, 100.0, 313.6, 0.906, -0.423 );\n\tael[6] = EL( -38.0, -105.0, 88.2, 323.4, 0.899, -0.438 );\n\tael[7] = EL( -99.0, 58.0, 100.0, 261.7, 0.899, -0.438 );\n\tael[8] = EL( 95.0, -110.0, 195.0, 101.0, 1.000, 0.000 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = min( d, toEL( uv, ael[2] ) );\n\td = max( d, -toEL( uv, ael[3] ) );\n\td = max( d, -toEL( uv, ael[4] ) );\n\td = min( d, toEL( uv, ael[5] ) );\n\td = max( d, -toEL( uv, ael[6] ) );\n\td = max( d, -toEL( uv, ael[7] ) );\n\td = max( d, -toEL( uv, ael[8] ) );\n    d = min( d, toCharTilda( vec2( uv + vec2( -135.0, 190.0 ) ) ) );\n\treturn d;\n}\n\nfloat toCharp2( vec2 uv )\n{\n\tfloat d = toEL( uv, EL( 145.0, 100.0, 100.0, 100.0, 1.0, 0.0 ) );\n    d = max( d, -toEL( uv, EL( 182.0, 90.0, 139.0, 112.0, 1.0, 0.0 ) ) );\n    d = min( d, toEL( uv, EL( 95.0, 68.0, 49.0, 141.0, 0.92, -0.39 ) ) );\n    d = max( d, -toEL( uv, EL( 71.0, 28.0, 51.5, 180.2, 0.92, -0.39 ) ) );\n    d = min( d, toCharj( uv + vec2( 70.0, 0.0 ) ) );\n    return d;\n}\n\nfloat toQuotes( vec2 uv )\n{\n\tEL ael[11];\n\tael[0] = EL( -61.0, 222.0, 153.0, 95.1, 0.643, -0.766 );\n\tael[1] = EL( -34.0, 239.0, 175.2, 119.3, 0.755, -0.656 );\n\tael[2] = EL( -185.0, 208.0, 128.7, 48.4, 0.500, -0.866 );\n\tael[3] = EL( -175.0, 152.0, 52.9, 170.0, 0.899, 0.438 );\n\tael[4] = EL( -250.0, 295.0, 13.0, 11.0, 1.000, 0.000 );\n\tael[5] = EL( 4.0, 98.0, 10.0, 8.0, 1.000, 0.000 );\n\tael[6] = EL( -77.0, 68.0, 87.3, 25.0, 1.000, 0.000 );\n\tael[7] = EL( -82.0, 75.0, 96.0, 22.0, 0.999, -0.052 );\n\tael[8] = EL( -180.0, 84.0, 44.7, 7.5, 0.777, -0.629 );\n\tael[9] = EL( -216.0, 103.0, 11.0, 11.0, 1.000, 0.000 );\n\tael[10] = EL( -5.0, 61.0, 12.0, 9.8, 0.914, 0.407 );\n\tfloat d = toEL( uv, ael[0] );\n\td = max( d, -toEL( uv, ael[1] ) );\n\td = min( d, toEL( uv, ael[2] ) );\n\td = max( d, -toEL( uv, ael[3] ) );\n\td = min( d, toEL( uv, ael[4] ) );\n\td = min( d, toEL( uv, ael[5] ) );\n\td = min( d, toEL( uv, ael[6] ) );\n\td = max( d, -toEL( uv, ael[7] ) );\n\td = min( d, toEL( uv, ael[8] ) );\n\td = min( d, toEL( uv, ael[9] ) );\n\td = min( d, toEL( uv, ael[10] ) );\n\treturn d;\n}\n\n// -------------------------------------------------------\n//  Text rendering: https://www.shadertoy.com/view/MtS3RK\n// -------------------------------------------------------\nfloat texScriptF( vec2 uv )\n{\n    uv.x -= uv.y * 0.15;\n    float d = toQuotes( uv + vec2( -180.0, 0.0 ) );\n    d = min( d, toCharC( uv + vec2( -200.0, 0.0 ) ) );\n    d = min( d, toDash3( uv + vec2( -200.0, 0.0 ) ) );\n    d = min( d, toCharp( uv + vec2( -340.0, 0.0 ) ) );\n    d = min( d, toCharC1( uv + vec2( -480.0, 0.0 ) ) );\n    d = min( d, toCharC1( uv + vec2( -630.0, 0.0 ) ) );\n    d = min( d, toCharZ( uv + vec2( -760.0, 0.0 ) ) );\n    d = min( d, toDash3( uv + vec2( -760.0, 0.0 ) ) );\n    d = min( d, toCharw( uv + vec2( -960.0, 0.0 ) ) );\n    d = min( d, toCharTilda( uv + vec2( -960.0, 0.0 ) ) );\n    d = min( d, toCharj( uv + vec2( -1230.0, 0.0 ) ) );\n    d = min( d, toCharC1( uv + vec2( -1320.0, 0.0 ) ) );\n    d = min( d, toCharC1( uv + vec2( -1470.0, 0.0 ) ) );\n    d = min( d, toCharh( uv + vec2( -1590.0, 0.0 ) ) );\n    d = min( d, toCharpm( uv + vec2( -1820.0, 0.0 ) ) );\n    d = min( d, toCharj( uv + vec2( -2190.0, 0.0 ) ) );\n    d = min( d, toCharC1( uv + vec2( -2280.0, 0.0 ) ) );\n    d = min( d, toDash3( uv + vec2( -2280.0, 0.0 ) ) );\n    d = min( d, toCharE1( uv + vec2( -2450.0, 0.0 ) ) );\n    d = min( d, toCharY2( uv + vec2( -2670.0, 0.0 ) ) );\n    d = min( d, toPeriod( uv + vec2( -3000.0, 0.0 ) ) );\n    \n    d = min( d, toCharC( uv + vec2( -3400.0, 0.0 ) ) );\n    d = min( d, toDash3( uv + vec2( -3400.0, 0.0 ) ) );\n    d = min( d, toCharp( uv + vec2( -3540.0, 0.0 ) ) );\n    d = min( d, toCharC1( uv + vec2( -3680.0, 0.0 ) ) );\n    d = min( d, toCharC1( uv + vec2( -3830.0, 0.0 ) ) );\n    d = min( d, toCharZ( uv + vec2( -3960.0, 0.0 ) ) );\n    d = min( d, toDash3( uv + vec2( -3960.0, 0.0 ) ) );\n    d = min( d, toCharw( uv + vec2( -4160.0, 0.0 ) ) );\n    d = min( d, toCharTilda( uv + vec2( -4160.0, 0.0 ) ) );\n    d = min( d, toCharw( uv + vec2( -4510.0, 0.0 ) ) );\n    d = min( d, toCharTilda( uv + vec2( -4510.0, 0.0 ) ) );\n    d = min( d, toCharpm( uv + vec2( -4770.0, 0.0 ) ) );\n    d = min( d, toCharTilda( uv + vec2( -4920.0, -70.0 ) ) );\n    d = min( d, toDash1( uv + vec2( -4920.0, -50.0 ) ) );\n    d = min( d, toCharj( uv + vec2( -5140.0, 0.0 ) ) );\n    d = min( d, toCharC1( uv + vec2( -5230.0, 0.0 ) ) );\n    d = min( d, toDash3( uv + vec2( -5230.0, 0.0 ) ) );\n    d = min( d, toCharE2( uv + vec2( -5420.0, 0.0 ) ) );\n    d = min( d, toQuotes( vec2( -uv.x, uv.y ) + vec2( 5760.0, 0.0 ) ) );\n\n\n    d = min( d, toCharC( uv + vec2( -6200.0, 0.0 ) ) );\n    d = min( d, toDash3( uv + vec2( -6200.0, 0.0 ) ) );\n    d = min( d, toCharp( uv + vec2( -6340.0, 0.0 ) ) );\n    d = min( d, toCharC1( uv + vec2( -6480.0, 0.0 ) ) );\n    d = min( d, toCharC1( uv + vec2( -6630.0, 0.0 ) ) );\n    d = min( d, toCharZ( uv + vec2( -6760.0, 0.0 ) ) );\n    d = min( d, toDash3( uv + vec2( -6760.0, 0.0 ) ) );\n    d = min( d, toCharw( uv + vec2( -6960.0, 0.0 ) ) );\n    d = min( d, toCharTilda( uv + vec2( -6960.0, 0.0 ) ) );\n    d = min( d, toCharC2( uv + vec2( -7260.0, 0.0 ) ) );\n    d = min( d, toCharY3( uv + vec2( -7440.0, 0.0 ) ) );\n    d = min( d, toCharq( uv + vec2( -7460.0, 0.0 ) ) );\n    d = min( d, toDash3( uv + vec2( -7590.0, 0.0 ) ) );\n    d = min( d, toCharj( uv + vec2( -7740.0, 0.0 ) ) );\n    d = min( d, toCharC1( uv + vec2( -7830.0, 0.0 ) ) );\n    d = min( d, toDash3( uv + vec2( -7800.0, 0.0 ) ) );\n    d = min( d, toCharE1( uv + vec2( -8000, 0.0 ) ) );\n    d = min( d, toCharY2( uv + vec2( -8220.0, 0.0 ) ) );\n    d = min( d, toPeriod( uv + vec2( -8550.0, 0.0 ) ) );\n    \n    d = min( d, toCharw( uv + vec2( -9000.0, 0.0 ) ) );\n    d = min( d, toCharTilda( uv + vec2( -9000.0, 0.0 ) ) );\n    d = min( d, toDash3( uv + vec2( -9050.0, 0.0 ) ) );\n    d = min( d, toCurl2( uv + vec2( -9180.0, 0.0 ) ) );\n    d = min( d, toCharpm( uv + vec2( -9260.0, 0.0 ) ) );\n    d = min( d, toCharh( uv + vec2( -9630.0, 0.0 ) ) );\n\td = min( d, toCharE3( uv + vec2( -9920.0, 0.0 ) ) );\n    d = min( d, toCharm( uv + vec2( -10030.0, 0.0 ) ) );\n    d = min( d, toCurl( uv + vec2( -10150.0, 0.0 ) ) );\n    d = min( d, toCharC( uv + vec2( -10430.0, 0.0 ) ) );\n    d = min( d, toDash1( uv + vec2( -10430.0, 0.0 ) ) );\n    d = min( d, toCharp( uv + vec2( -10560.0, 0.0 ) ) );\n    d = min( d, toDash1( uv + vec2( -10650.0, 0.0 ) ) );\n    d = min( d, toCharq( uv + vec2( -10620.0, 0.0 ) ) );\n    d = min( d, toCharY3( uv + vec2( -10940.0, 0.0 ) ) );\n    d = min( d, toCharp2( uv + vec2( -11130.0, 0.0 ) ) );\n    d = min( d, toSmallTilda( uv + vec2( -11080.0, 200.0 ) ) );\n    d = min( d, toSmallTilda( uv + vec2( -11080.0, -50.0 ) ) );\n    d = min( d, toDash1( uv + vec2( -11100.0, 0.0 ) ) );\n    d = min( d, toCharj( uv + vec2( -11310.0, 0.0 ) ) );\n    d = min( d, toCharC1( uv + vec2( -11400.0, 0.0 ) ) );\n    d = min( d, toDash3( uv + vec2( -11380.0, 0.0 ) ) );\n    d = min( d, toCharE1( uv + vec2( -11600.0, 0.0 ) ) );\n    \n    if ( d <= 0.0 ) return 1.0;\n    else return 0.0;\n}\n\n// --------------------\n//  \"noisy\" gold color\n// --------------------\nvec3 Gold(vec3 p, float fade)\n{\n    p += .4 * noise(p * 24.);\n    float t = noise(p * 30.);\n\n    vec3 gold = mix(GOLD1, GOLD2, smoothstep(.55, .95, t));\n    // darker gold tint if the inscription is visible\n    gold = mix(gold, GOLD3, smoothstep(.45, .25, t)) * (1. - 0.666 * fade);\n\n    return gold;\n}\n\n// ----------------------------------------\n//  calculate ray direction for eye/camera\n// ----------------------------------------\nvec3 EyeRay(vec2 fragCoord, vec3 eyeDir)\n{\n  \tvec2 uv = fragCoord.xy / iResolution.xy; \n  \tuv = uv * 2.0 - 1.0;\n  \tuv.x *= iResolution.x / iResolution.y;\n\n    vec3 forward = normalize(eyeDir);\n\tvec3 right   = normalize(cross(vec3(.0, 1., .0), forward));\n\tvec3 up      = normalize(cross(forward, right));    \n\n\treturn normalize(uv.x * right + uv.y * up + forward * FOV);\n}\n\n// ----------------------------------------------\n//  SDF for the ring - a slightly deformed torus\n// ----------------------------------------------\nfloat Ring(vec3 pos)\n{\n    vec2 t = vec2(RING_RADIUS, RING_RADIUS * .2);\n    vec2 q = vec2(clamp(2. * (length(pos.xz) - t.x), -5., 5.),pos.y);\n\n    return length(q) - t.y;\n}\n\n// -------------------------------\n//  flickering hellish background\n// -------------------------------\nvec3 Background(vec3 ray)\n{ \n    return texture(iChannel2, ray).rgb * vec3(.7, .15, .0) * (1. + texture(iChannel1, vec2(0., 0.)).r);\n}\n\n// ----------------\n//  surface normal\n// ----------------\nvec3 SurfaceNormal(in vec3 pos)\n{\n    vec3 eps = vec3( MIN_DIST, 0., 0. );\n    return normalize(-vec3(Ring(pos + eps.xyy) - Ring(pos - eps.xyy),\n                           Ring(pos + eps.yxy) - Ring(pos - eps.yxy),\n                           Ring(pos + eps.yyx) - Ring(pos - eps.yyx)));\n}\n\n// ------------------\n//  scene raymarcher\n// ------------------\nRMInfo Raymarch(vec3 from, vec3 to)\n{\n    float t = 0.;\n    int objId = BACKGROUND_ID;\n    vec3 pos;\n    vec3 normal;\n    float dist;\n    \n  \tfor (int i = 0; i < NUM_STEPS; ++i)\n    {\n    \tpos = from + to * t;\n        dist = Ring(pos);\n\n        if (dist > MAX_DIST || abs(dist) < MIN_DIST)\n            break;\n\n        t += dist * 0.43;\n        objId = RING_ID;\n  \t}\n    \n    if (t < MAX_DIST)\n    {\n        normal = SurfaceNormal(pos);\n    }\n    else\n    {\n        objId = BACKGROUND_ID;\n    }\n\n    return RMInfo(pos, normal, objId);\n}\n\n\n// -------------------------\n//  here be scene rendering\n// -------------------------\nvec4 Draw(vec2 fragCoord)\n{   \n    vec3   col = vec3(0.);\n  \tvec3   ray = EyeRay(fragCoord, -EYE);\n  \tRMInfo rmi = Raymarch(EYE, ray);\n\n    if (rmi.objId == RING_ID)\n    {\n        vec2 uv;\n        float fade = max(0., sin(iTime * .3));\n        col = mix(col, Gold(rmi.pos, fade) * texture(iChannel0, reflect(ray, rmi.normal)).rgb, .99);            \n        rmi = Raymarch(rmi.pos, reflect(ray, rmi.normal));\n\n        // render the inscription!\n        uv.x = atan( rmi.pos.z, rmi.pos.x ) / 3.14159;\n        uv.y = 2.0 * rmi.pos.y;\n\n        if ( uv.y > vMin && uv.y < vMax )\n        {\n            uv.x = ( uv.x + 1.0 ) * 0.5;\n            uv.y = 1.0 - ( uv.y - vMin ) / ( vMax - vMin );\n            float s = texScriptF( uv * vec2( 12500.0, -800.0 ) + vec2( 0.0, 450.0 ));\n\n            // text is flickering depending on current audio value\n            col += vec3( 0.9, 0.9, 0.5 ) * 1.5 * fade * vec3(1., .3, 0.) * (1. + 10. * texture(iChannel1, vec2(50., 0.)).r) * s;\n        }\n    }\n    else if(rmi.objId == BACKGROUND_ID)\n    {\n        col += Background(ray);\n    }\n\n  \treturn vec4(col, 1.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    EYE.xy = rotate(EYE.xy, iTime * .03 + .015);\n    EYE.yz = rotate(EYE.yz, iTime * .03 + .015);\n\n    // Antialiasing: https://www.shadertoy.com/view/XdVSRV\n#if ANTIALIASING\n    vec4 vs = vec4(0.);\n    for (int j = 0; j < AA_SAMPLES ;j++)\n    {\n        float oy = float(j) * AA_WIDTH / max(float(AA_SAMPLES - 1), 1.);\n        for (int i = 0; i < AA_SAMPLES; i++)\n        {\n            float ox = float(i) * AA_WIDTH / max(float(AA_SAMPLES - 1), 1.);\n            vs += Draw(fragCoord + vec2(ox, oy));\n        }\n    }\n\n    fragColor = vs/vec4(AA_SAMPLES * AA_SAMPLES);\n#else\n    fragColor = Draw(fragCoord);\n#endif\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "cubemap",
                        "id": 24,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 25,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "musicstream",
                        "id": 21348,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/dnd-music-444515068/sauron-voice-black-speech"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}