{
    "Shader": {
        "info": {
            "date": "1480712893",
            "description": "I've loved Flyguy's Ring Twister since the first time I saw it. I always knew that we can make it smaller.\n[url]https://www.shadertoy.com/view/Xt23z3[/url]\nWe have it down to 316 chars, but I KNOW that we can get it smaller.\nPlease HELP!!",
            "flags": 64,
            "hasliked": 0,
            "id": "lltXz2",
            "likes": 16,
            "name": "Ring Twister - 314 chars",
            "published": 3,
            "tags": [
                "2d",
                "twist",
                "codegolf"
            ],
            "usePreview": 0,
            "username": "GregRostami",
            "viewed": 961
        },
        "renderpass": [
            {
                "code": "// Calling ALL code golfers (iq, Fabrice, coyote, LaBodilsen, 834144373)\n// Please help make this smaller.\n\n// Master Fabrice reduced the shader to 316 chars!!\n/**/\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float\n        T = iTime,\n        r = length(U += U-(O.xy=iResolution.xy)) / O.y * 4. - 2.8,\n        a = atan(U.y, U.x),\n        B = mod( a+T + sin(a-=T) * sin(T) * 3.14, 1.57 )  - 2.;\n    \n    r -= T = sin( B += r > cos(B) ? 1.6 : 0.);\n    B = cos(B)- T;   \n\n    O =  vec4(5, 9, 9, 0)*B - vec4(-5, 3, 9, 0) * r;\n    O *= smoothstep(.45, .4, T = abs(r/B-.5) ) + .5;\n  \n    O *= T<.5 ? sin(r/B * 13.) * cos(a * 16.) < 0. ? .04 : .05 \n              : 0.;\n}\n/**/\n\n// 349 chars - DjinnKahn and GregRostami shaved a few more chars ...\n/**\nfloat T = iDate.w, P = 1.57, r, a, w, A, B;\n\nvoid mainImage(out vec4 O,vec2 U)\n{\n    r = length(U = (U+U-(O.xy=iResolution.xy)) / O.y * 4.) - 2.8;\n    A = sin(B += r > cos(B = mod( sin(a = atan(U.y, U.x) - T) * sin(T) * P * 2.+ a + T+T, P )\n                         - P*1.5) ? P : 0.);  \n    w = cos(B)- A;   \n    B = (r - A)/w;\n    O = (smoothstep(.45, .4, A = abs(B-.5)) + .5)\n      * (vec4(.5, .9, .95, P) - vec4(-.45, .3, .85, P) * B)\n      * w\n      * (.5 + sign(sin(B * P * 8.) * cos(a * 16.)) / 23.)\n      * step( A, .5 );\n}\n/**/\n\n// 334 chars - Smallest shader with some cheating.  ;-)\n/**\nfloat T = iDate.w, P = 1.57, r, a, w, A, B;\n\nvoid mainImage(out vec4 o,vec2 u)\n{\n    r = length(u = (u/iResolution.y-.5) * 8.) - 2.8;\n    A = sin(B += r > cos(B = mod( sin(a = atan(u.y, u.x) - T) * sin(T) * P * 2.+ a + T+T, P )\n                         - P*1.5) ? P : 0.);  \n    w = cos(B)- A;   \n    B = (r - A)/w;\n    o = (smoothstep(.45, .4, A = abs(B-.5)) + .5)\n      * (vec4(.5, .9, 1, P) - vec4(-.5, .3, .9, P) * B)\n      * w\n      * (.5 + sign(sin(B * P * 8.) * cos(a * 16.)) / 23.)\n      * step( A, .5 );\n}\n/**/\n\n// 382 chars - DjinnKahn showed us the power of the DARK SIDE!!\n/**\nfloat T = iDate.w, P = 3.14, r, a, u, v, A, B;\n\n#define s(A, w) ( u = (r - A)/w, v = abs(u-.5), mix(vec4(.5, .9, .95, P), vec4(.95, .6, .1, P), u) * w * (smoothstep(.45, .4, v) + .5) * (.5 + sign(sin(u * P * 4.) * cos(a * 16.)) / 23.) * step( v, .5 ) )\n\nvoid mainImage(out vec4 O,vec2 p)\n{\n    r = length(p = (p+p-(O.xy=iResolution.xy)) / O.y * 4.) - 2.8;\n    a = atan(p.y, p.x) + P - T;\n    B = mod( a + T+T + sin(a) * sin(T) * P, P*.5 ) - P*.75;\n    A = sin(B);\n    B = cos(B);      \n\tO = s(A, (B-A)) + s(B, (-A-B));\n}\n/**/\n\n// 451 chars - tabman came out of the shadows to school me in code golf!\n/**\nvoid mainImage(out vec4 o,vec2 u)\n{\n    vec2 R = iResolution.xy/2.;   \n    u = (u-R)/R.y;\n    float T = iTime, q = 1.57;\n    u = vec2(length(u)-.7,atan(u.y,u.x)+q+q);\n    o-= o-.05;\n    \n    for(float i = 0.;i < 4.;i++){\n        float a = u.y+2.*T+sin(u.y)*sin(T)*q*2.+q*i,\n              X = sin(a)/4.,\n              Y = sin(a+q)/4.,\n              w = Y-X,\n              U = (u.x-X)/w;\n\n        o = mix(o\n                ,\n                mix(vec4(.5,.9,.95,1),vec4(.95,.6,.1,1),U)\n                *w/sqrt((1.-cos(q))/8.)\n                *(smoothstep(.05,.1,U)*smoothstep(.95,.9,U)+.5)\n                *(sign(sin(U*q*8.)*cos((u.y+T*-.9)*16.))/16.+.7)\n                ,\n                vec4(U > 0. && U < 1. && X < Y)\n               );\n    }\n}\n/**/\n\n// 560 chars - Original reduced shader by Greg Rostami\n/**\nvec3 R = iResolution,c;\nfloat T = iDate.w, p = 3.14, t = p+p, a, f = 4.;\n\nvec4 s(float X, float Y, vec2 U)\n{\n    float w = Y - X, u = (U.x - X)/w;\n    vec3 c;\n    c = mix(vec3 (.5, .9, 1),vec3(1, .6, .1), u);\n    c *= w / sqrt( (1. - cos(t/f)) / 8. );\n    c *= smoothstep(.05, .1, u) * smoothstep(.95, .9, u) + .5;\n    U.y += T * -.9;\n    c *= sign(sin(u * p * f) * cos(U.y * 16.)) / 8. + .7;\n    return vec4(c, float((u > 0. && u < 1.) && X < Y));\n}\n\nvoid mainImage(out vec4 o,vec2 u)\n{\n    vec2 U, w = u / R.y;\n    w = 2.*w - R.xy / R.y,\n    U = vec2(length(w)-.7, atan(w.y, w.x) + p);\n    c = R-R + .05;\n    a = U.y + 2.*T + sin(U.y) * sin(T) * p;\n    for(float i = 0.;i < 4.;i++)\n        o = s(sin(a + t * i / f) / f, sin(a + t * ((i + 1.) / f)) / f, U),\n        c = mix(c, o.rgb, o.a);\n\to.rgb = c;\n}\n/**/",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 5577,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/algoritmos666/tron-legacy-soundtrack-ost-03"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}