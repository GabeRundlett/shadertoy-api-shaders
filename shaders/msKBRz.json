{
    "Shader": {
        "info": {
            "date": "1701826343",
            "description": "Hope everyone has a happy holiday - thanks to everyone here, and everyone I've learned a little something from! 🙏\n",
            "flags": 64,
            "hasliked": 0,
            "id": "msKBRz",
            "likes": 27,
            "name": "Year of Truchets #063 unreleased",
            "published": 3,
            "tags": [
                "2d",
                "truchet"
            ],
            "usePreview": 1,
            "username": "byt3_m3chanic",
            "viewed": 252
        },
        "renderpass": [
            {
                "code": "/**\n    License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n    \n    Year of Truchets #063\n    12/05/2023  @byt3_m3chanic\n    Truchet Core \\M/->.<-\\M/ 2023 \n    \n    Just saying thanks - learned a lot from everyone over the year doing truchets\n    \n    see all https://www.shadertoy.com/user/byt3_m3chanic/sort=newest\n*/\n\n#define R   iResolution\n#define M   iMouse\n#define T   iTime\n#define PI  3.14159265359\n#define PI2 6.28318530718\n\n// only the good parts\n// Fabrice Neyret https://www.shadertoy.com/view/llySRh\nint CAPS=0;\n#define spc  U.x-=.44;\n#define C(c) spc O+= char(U,64+c);\nvec4 char(vec2 p, int c) {\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n    p/=16.;\n\treturn textureGrad(iChannel0,p+fract(vec2(c,15-c/16)/16.),dFdx(p),dFdy(p));\n}\n\n// string text\nfloat scale = 5.;\nconst int txt[188]=int[188](\n52, 40, 33, 46, 43,-32, 57, 47, 53,-32, 52, 47,-32, 34, 44, 33, 35, 43, 44, 37, \n-20, 4, 33, 54, 37, 31,  8, 47, 51, 43, 41, 46, 51,-20, 36, 37, 33, 46, 31, 52, \n40, 37, 31, 35, 47, 36, 37, 50,-20,  9, 17,-20, 41, 25, 15, 25, 41,-20, 42, 52,\n-20,43, 33, 45, 47, 51, 40, 41, 43, 33,-20,  6, 33, 34, 50, 41, 35, 37, 14, 37, \n57, 50, 37, 52,-20, 48, 33, 46, 46, 33, 31, 48, 53, 36, 41,-20, 19, 40, 33, 46, \n37,-20, 51, 52, 34,-20, 51, 53, 43, 53, 48, 33, 48, 37, 50,-20, 52, 47, 52, 37, \n52, 45, 33, 52, 52,-20, 57, 33, 51, 53, 47,-20, 24, 47, 50,-32, 33, 46, 36,-32, \n51, 47,-32, 45, 33, 46, 57,-32, 45, 47, 50, 37,-31,-31,-32,-32,-32, 34, 57, 52,\n-13,-32,45,-13, 35, 40, 33, 46, 41, 35,-32,-32, 40, 33, 48, 48, 57,-32, 40, 47, \n44 ,41, 36, 33, 57, 51,-32,-32\n);\n\n\nmat2 rot(float a){ return mat2(cos(a),sin(a),-sin(a),cos(a));}\nfloat hash21(vec2 p){return fract(sin(dot(p,vec2(27.619,57.583)))*43758.5453);}\n\n// @Shane\n// An offset grid pattern with some random subdivision.\nvec4 distField(vec2 p, inout float sc){    \n    vec2 q = p;\n    vec2 ip = floor(p/sc);\n    p -= (ip + .5)*sc;\n\n    for(int i = 0; i<5; i++){\n        if(hash21(ip + float(i + 1)*.01)<.235){\n            sc /= 2.;\n            p = q;\n            ip = floor(p/sc);\n            p -= (ip + .5)*sc;\n        }\n    }\n    return vec4(p, ip);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 F ){\n\n    vec2 uv = (F.xy - R.xy*.5)/R.y;\n    vec2 vv = (2.*F.xy-R.xy)/max(R.x,R.y);\n\n    float cale = .1591;\n    if(vv.y<.333 && vv.y>-.333) {\n\n        uv.x -= .25;\n        uv /= uv.x*uv.x + uv.y*uv.y;\n        uv.x += 2.;\n\n        uv *= rot(-T*.05);\n        uv = vec2(log(length(uv)), atan(uv.y, uv.x))*cale;\n        uv.x -= T*.025;\n    }else{\n        uv.y-=.15*sin(uv.x*3.+T*.5);\n        uv.x-= T*.05;\n    }\n    vec2 p = uv;\n    //\n    \n    float oSc = 1./4.;\n    float sc = oSc; \n    \n    vec4 d4 = distField(p, sc);\n    float px = fwidth(p.x)*.8;\n\n    vec2 dv = d4.xy;\n    vec2 id = d4.zw;   \n\n    float ch = mod(id.x+id.y,2.)*2.-1.;\n\n    vec3 col = vec3(.0);\n\n    float rnd = hash21(id);\n    float bnd = fract((rnd*147.32)+(T*.025));\n    \n    vec3 h  = .45 + .45*cos(4.5*(uv.y+(rnd*.5)) + vec3(0, 1, 2));\n    \n    if(rnd<.45) dv.x = -dv.x;\n    rnd = fract(rnd*247.32);\n    \n    float sx = .5*sc;\n    \n    vec2 gx = length(dv-sx)<length(dv+sx) ? vec2(dv-sx) : vec2(dv+sx);\n    float cx = length(gx)-sx;\n\n    if(rnd>.85 && bnd<.4) cx = min(length(dv.x),length(dv.y))-(.001*sc);\n\n    if (bnd<.25) { \n        cx = smoothstep(px,-px, abs(abs(abs(cx)-(.2*sc))-(.1*sc))-(.05*sc));\n    } else if (bnd>.4) {\n        cx = (ch>.5 ^^ rnd<.45) ? smoothstep(px,-px,cx):smoothstep(-px,px,cx);\n    } else {\n        cx = smoothstep(-px,px, abs(cx)-(.125*sc));\n    }\n\n    col = mix(h,col,cx);\n    px = fwidth(vv.x);\n    float bl = length(abs(vv.y)-.34)-.02;\n    col = mix(col,vec3(.0),smoothstep(px,-px,bl));\n    \n    // text overlay\n    vec4 O = vec4(0);\n    vv.x += T*.25;\n    vec2 dd = floor(vec2(vv.x,1)*scale);\n    vv.x = fract(vv.x*scale)-.5;\n    vv.y *= scale;\n    \n   \n\n    float ph = .25;\n\n    float ss = ph*sin(.2*dd.x*PI+T)+.25;\n    vv =(vv*.25)+vec2(.48,ss);\n    \n    float ds=(26.*R.x/R.y);\n    vv = floor(vv*ds)/ds;\n    vec2 U = vv;\n    px = 255./R.x;\n     \n    int mid = int(mod(floor(dd.x),187.));\n    U = (vv)/.5;\n    C(txt[mid]);\n\n    col = mix(col,vec3(1),smoothstep(px,px+.9,O.x));\n    \n    fragColor = vec4(pow(col, vec3(.4545)),1.);\n    }\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "musicstream",
                        "id": 35442,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/alldayidream/shai-t-summer-oclock"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}