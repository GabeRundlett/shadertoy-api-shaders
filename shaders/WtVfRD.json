{
    "Shader": {
        "info": {
            "date": "1613995069",
            "description": "Isn't my tutorial.\nYoutube Tutorial : https://www.youtube.com/watch?v=3CycKKJiwis&t=1329s",
            "flags": 0,
            "hasliked": 0,
            "id": "WtVfRD",
            "likes": 0,
            "name": "Animus",
            "published": 3,
            "tags": [
                "animus"
            ],
            "usePreview": 0,
            "username": "rge15",
            "viewed": 169
        },
        "renderpass": [
            {
                "code": "#define S(a,b,t) smoothstep(a,b,t)\n\nfloat DistLine(vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p-a;\n    vec2 ba = b-a;\n    float t = clamp(dot(pa,ba)/dot(ba,ba),0.,1.);\n    return length(pa-ba*t);\n}\n\nfloat N21(vec2 p)\n{\n    p = fract(p*vec2(233.34, 851.73));\n    p += dot(p,p+23.45);\n    return fract(p.x*p.y);\n}\n\nvec2 N22(vec2 p)\n{\n    float n = N21(p);\n    return vec2(n , N21(p+n));\n}\n\nvec2 GetPos(vec2 id, vec2 offs)\n{\n    vec2 n = N22(id+offs)*iTime;\n    return offs+sin(n)*0.3;\n}\n\nfloat Line(vec2 p , vec2 a, vec2 b)\n{\n    float d = DistLine(p,a,b);\n    float m = S(.03,.01,d);\n    m *= S(1.2,.8,length(a-b));\n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Origin at the middle and aspect ratio correct\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.x;\n\n    float m = 0.;\n    \n    uv *= 10.;\n    vec2 gv = fract(uv)-.5;\n    vec2 id = floor(uv);\n    \n    vec2 p[9];\n    int i = 0;\n    for(float y=-1. ; y<=1. ; y++)\n    {\n        for(float x =-1. ; x<=1. ; x++)\n        {\n            p[i++] = GetPos(id,vec2(x,y));         \n        }\n    }   \n    \n    for(int i = 0 ; i<9 ; i++)\n    {\n        m += Line(gv, p[4] , p[i]);\n        \n        vec2 j = (p[i]-gv)*15.;\n        float spk = 1./ dot(j,j);\n        m += spk*(sin(iTime+p[i].x*5.)*.5+.5);\n    }\n    \n    m += Line(gv, p[1] , p[3]);\n    m += Line(gv, p[1] , p[5]);\n    m += Line(gv, p[7] , p[3]);\n    m += Line(gv, p[7] , p[5]);\n    \n    vec3 col = vec3(m);\n    \n    //if(gv.x > .48 || gv.y > .48) col = vec3(1,0,0);\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}