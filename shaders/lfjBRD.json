{
    "Shader": {
        "info": {
            "date": "1724746791",
            "description": "Just something super simple.",
            "flags": 0,
            "hasliked": 0,
            "id": "lfjBRD",
            "likes": 1,
            "name": "Checkerboard madness",
            "published": 3,
            "tags": [
                "checkerboard"
            ],
            "usePreview": 0,
            "username": "triggthediscovery",
            "viewed": 57
        },
        "renderpass": [
            {
                "code": "// Simple 2 layer checkerboard effect.\n//\n// Provided under CC0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float ang = iTime / 2.0;\n    float an2 = ang*1.42431;\n    \n    // Scale of the layers. \n    float checkerboard = (sin(ang/1.0)*0.1)+0.15;\n    float checkerboard_2 = (sin(an2/1.0)*0.1)+0.15;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord - (iResolution.xy/2.0);\n    \n    uv = uv/iResolution.y;\n    \n    vec3 color = vec3(0);\n    \n    // Rotation of the layers. \n    vec2 uv2 = vec2((uv.x*cos(ang))+(uv.y*sin(ang)), (uv.x*sin(ang))-(uv.y*cos(ang)));\n    vec2 uv3 = vec2((uv.x*cos(an2))+(uv.y*sin(an2)), (uv.x*sin(an2))-(uv.y*cos(an2)));\n\n    bool c_x = mod(uv2.x, checkerboard) > checkerboard/2.0;\n    bool c_y = mod(uv2.y, checkerboard) > checkerboard/2.0;\n    bool c_x_2 = mod(uv3.x, checkerboard_2) > checkerboard_2/2.0;\n    bool c_y_2 = mod(uv3.y, checkerboard_2) > checkerboard_2/2.0;\n\n    if (c_x ^^ c_y ^^ c_x_2 ^^ c_y_2) color = vec3(1);\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}