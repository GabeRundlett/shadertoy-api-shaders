{
    "Shader": {
        "info": {
            "date": "1465417778",
            "description": "Simple cross blur shader",
            "flags": 0,
            "hasliked": 0,
            "id": "XsKSRV",
            "likes": 8,
            "name": "CrossBlur",
            "published": 3,
            "tags": [
                "blur",
                "cross",
                "crossblur",
                "gausian"
            ],
            "usePreview": 0,
            "username": "robobo1221",
            "viewed": 1115
        },
        "renderpass": [
            {
                "code": "//#define GLARE_BLOOM //Gives a glare like bloom\n\nvec3 getTexure(vec2 coord){\n\treturn texture(iChannel0,coord.st).rgb;    \n}\n\nvec3 getBloom(vec2 coord){\n    \n    const int samples = 32;\n    vec3 color;\n    float colorTresh;\n    int weight;\n \n    float size = 12.0; //size in pixels\n   \n    for (int i = 0; i < samples;i++){\n        \n        vec2 coord0 = coord + (vec2(i,i) * size / float(samples) / iResolution.xy);\n        vec2 coord1 = coord + (vec2(-i,-i) * size / float(samples) / iResolution.xy);\n        vec2 coord2 = coord + (vec2(-i,i) * size / float(samples) / iResolution.xy);\n        vec2 coord3 = coord + (vec2(i,-i) * size / float(samples) / iResolution.xy);\n            \n        color += getTexure(coord0);\n        color += getTexure(coord1);\n        color += getTexure(coord2);\n        color += getTexure(coord3);\n        \n        weight++;\n    }\n    \n    color /= float(weight);\n    color = pow(color,vec3(1.0));\n    \n    return (color / 4.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    #ifdef GLARE_BLOOM\n\t\tvec3 getColor = mix(getTexure(uv),getBloom(uv) * 2.0,0.5);\n    #else\n    \tvec3 getColor = getBloom(uv);\n    #endif\n        \n\tfragColor = vec4(getColor,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}