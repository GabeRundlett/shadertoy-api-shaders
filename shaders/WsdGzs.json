{
    "Shader": {
        "info": {
            "date": "1569135988",
            "description": "fuzzy purple",
            "flags": 0,
            "hasliked": 0,
            "id": "WsdGzs",
            "likes": 4,
            "name": "Purple Fuzz",
            "published": 3,
            "tags": [
                "2d",
                "abstract"
            ],
            "usePreview": 0,
            "username": "atsn",
            "viewed": 363
        },
        "renderpass": [
            {
                "code": "float N21(vec2 uv){\n\treturn fract(\n        sin(uv.x*1377.425)+sin(uv.y*2645.5623) *\n        sin(uv.x*1247.78977)+sin(uv.y*16658.58273)\n    );\n}\nvec2 N22(vec2 uv){\n\treturn vec2(N21(uv),N21(uv+N21(uv)));\n}\nvec3 N23(vec2 uv){\n\treturn vec3(N21(uv),N21(uv+N21(uv)),N21(uv+N21(uv+N21(uv))));\n}\n\nfloat pattern(vec2 uv,float time){\n    vec2 lvid = floor(uv);\n    vec2 lv = fract(uv);\n    lv -= 0.5;\n    \n\n    float col = 0.;\n    float rad = 0.1;\n    \n    float closest = 2.;\n    float next_closest = 2.;\n    for(int x=-1;x<2;x++){\n        for(int y=-1;y<2;y++){\n            vec2 cid = lvid+vec2(x,y);\n            float influence = sin(2.*time*N21(cid))*.2+1.;\n            //influence = 1.;\n            vec2 offset = sin(5.*time*(N22(cid)*.1+.1))*.2;\n            float dist = length(lv+offset-vec2(x,y))*influence;\n            if(dist<closest){\n                next_closest = closest;\n                float delta = abs(closest-dist);\n                closest = dist;\n                \n                \n            }\n            else if(dist<next_closest){\n             \tnext_closest = dist;   \n            }\n            col = max(\n                .0*smoothstep(.1,.09,abs(next_closest-closest)),\n                1.0*smoothstep(1.0,.10,next_closest)\n            );\n        }\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float t = -iTime * .05;\n    \n    uv *= mat2(sin(t),cos(t),-cos(t),sin(t));\n    \n    uv *= 10.;\n    \n    vec3 col = vec3(0.);\n    float tm = iTime*1.;\n    for(float i=1.;i<8.;i++){\n        vec3 ccol = vec3(1.,.25,1.)*(sin(vec3(tm+i*5.,tm*1.2+i*7.,tm+1.3+i*11.))*.4+.9 + N23(uv)*.2);\n    \tcol += ccol * pattern(uv/(i),iTime+i*1000.)*.5;\n    }\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}