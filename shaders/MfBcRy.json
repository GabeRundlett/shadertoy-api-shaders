{
    "Shader": {
        "info": {
            "date": "1722508906",
            "description": "orginals  https://glslsandbox.com/e#44471.0 https://glslsandbox.com/e#50097.0",
            "flags": 0,
            "hasliked": 0,
            "id": "MfBcRy",
            "likes": 1,
            "name": "color bubles",
            "published": 3,
            "tags": [
                "fractal",
                "bubles",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 185
        },
        "renderpass": [
            {
                "code": "\n\nuniform vec2  resolution;\nuniform float time;\nuniform vec2 mouse;\n#define time iTime\n#define resolution iResolution.xy\nfloat PI = 3.1415926535;\nfloat speed = 0.0750;\n\nfloat ball(vec2 p, float fx, float fy, float ax, float ay)\n{\n\tvec2 r = vec2(p.x + sin(time*speed / 2.0 * fx) * ax * 12.0, p.y + cos(time*speed/ 2.0 * fy) * ay * 8.0);\t\n\treturn .057 / length(r / sin(fy * time * 0.1));\n}\n\nconst float fRadius = 0.05;\nconst int bubles = 640;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p=(gl_FragCoord.xy -.5 * resolution)/ min(resolution.x,resolution.y);\n    vec3 c = vec3(0);\n   p.xy*=mat2(cos(iTime), sin(iTime), -sin(iTime), cos(iTime));\n   float t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(p.xy) + .07)) * 2.2;\n\tfloat si = sin(t);\n\tfloat co = cos(t);\n\tmat2 ma = mat2(co, si, -si, co);\n   \n   \n   \n   float x = gl_FragCoord.x / resolution.x;\n\tfloat y = gl_FragCoord.y / resolution.y;\n\tvec2 xy = vec2(x, y);\n\tvec2 m = vec2(0.5, 0.5);\n\t\n\tfloat v = (sin(- time * 1.0 + distance(xy, m) * 50.0) + 1.0) / 2.0;\n\t\n\tfragColor = vec4(v, v, v, 1.0);\n\n\n\t\n\tvec2 norm = normalize(m - xy);\n\tvec2 newCoord = xy*ma + norm * v * 0.1;\n\n\ty = newCoord.y;\n\t\n\tvec4 white = vec4(0.6, 0.0, 0.0, 1.0);\n\tvec4 red = vec4(1.0, 1.0, 0.0, 1.0);\n\tvec4 blue = vec4(0.0, 0.5, 1.0, 1.0);\n\tvec4 green = vec4(0.0, 0.0, 0.0, 1.0);\n\tfloat step1 = 0.0;\n\tfloat step2 = 0.33;\n\tfloat step3 = 0.66;\n\tfloat step4 = 1.0;\n\t\n\tvec4 color2 = mix(white, red, smoothstep(step1, step2, y));\n\tcolor2 = mix(color2, blue, smoothstep(step2, step3, y));\n\tcolor2 = mix(color2, green, smoothstep(step3, step4, y));\n   \n   vec2 p2 = ( gl_FragCoord.xy/ resolution.xy ) * 2.0 - 1.0;\n       p2*=3.*ma; \n\t\t\n    vec2 uv = -1.0 + 2.0*gl_FragCoord.xy / resolution.xy;\n    uv.x *=  resolution.x / resolution.y;\n    \n    vec3 color = vec3(0.0);\n\n    // bubbles\n    for (int i=0; i < bubles; i++ ) {\n            // bubble seeds\n        float pha = tan(float(i)*1.+1.0)*0.5 + 0.5;\n        float siz = pow( cos(float(i)*2.4+5.0)*0.5 + 0.5, 4.0 );\n        float pox = cos(float(i)*1.55+1.1) * resolution.x / resolution.y;\n        \n            // buble size, position and color\n        float rad = fRadius + sin(float(i))*0.022+0.08;\n        vec2  pos = vec2( pox+sin(time/15.+pha+siz), -1.0-rad + (2.0+2.0*rad)\n                         *mod(pha+0.1*(time/5.)*(0.2+0.8*siz),1.0)) * vec2(1.0, 1.0);\n        float dis = length( uv - pos );\n        vec3  col = mix( vec3(0.1, 0.2, 0.8), vec3(0.2,0.8,0.6), 0.5+0.5*sin(float(i)*sin(time*pox*0.03)+1.9));\n        \n            // render\n        color += col.xyz *(1.- smoothstep( rad*(0.65+0.20*sin(pox*time)), rad, dis )) * (1.0 - cos(pox*time));\n    }\n      \n\tfloat col = 0.0 ,col2 = 0.0;\n\tcol += ball(p2, 31.0, 22.0, 0.03, 0.09);\n\tcol += ball(p2, 22.5, 22.5, 0.04, 0.04);\n\tcol += ball(p2, 12.0, 23.0, 0.05, 0.03);\n\tcol += ball(p2, 32.5, 33.5, 0.06, 0.04);\n\tcol += ball(p2, 23.0, 24.0, 0.07, 0.03);\t\n\tcol += ball(p2, 21.5, 22.5, 0.08, 0.02);\n\tcol += ball(p2, 33.1, 21.5, 0.09, 0.07);\n\tcol += ball(p2, 23.5, 32.5, 0.09, 0.06);\n\tcol += ball(p2, 14.1, 13.5, 0.09, 0.05);\n\t\n\tcol2 += ball(p2, 22.0, 27.0, 0.03, 0.05);\n\tcol2 += ball(p2, 12.5, 17.5, 0.04, 0.06);\n\tcol2 += ball(p2, 23.0, 17.0, 0.05, 0.02);\n\tcol2 += ball(p2, 19.5, 23.5, 0.06, 0.09);\n\tcol2 += ball(p2, 33.0, 14.0, 0.07, 0.01);\t\n\tcol2 += ball(p2, 11.5, 12.5, 0.08, 0.04);\n\tcol2 += ball(p2, 23.1, 11.5, 0.09, 0.07);\n\tcol2 += ball(p2, 13.5, 22.5, 0.09, 0.03);\n\tcol2 += ball(p2, 14.1, 23.5, 0.09, 0.08);\n\tcol2 += ball(p2, 4.1, 3.5, 0.07, 0.05);\n  \n    for(int i = 0; i < 10; i++){\n    float f=2.* PI * float(i) / 2. ;\n    float t =  (time,1.0/( 1.0*9.0 /20.0));\n   // float x = cos(t) * sin(t);\n    float x = cos(t*f);\n    float y = sin(t*f);\n    vec2 o = 0.25*cos(iTime) * vec2(x,y);\n\t    \n        \n\t\n    float r = fract(t*f);\n    float g = 1.-r;\n    float b = 1.-r;\n    c += 0.002/(length(p2-o))*vec3(r,g,1);\n    }\n    \n    fragColor= vec4(c+color2.xyz*0.25* color*10.,1);\n     vec2 center_xy = (gl_FragCoord.xy * 2.0 - resolution.xy) / min(resolution.x, resolution.y);\n        for(float i = 0.0; i < 5.0 ; i++)\n        {\n\t\tfloat v = i *10.0;\n\t\tfloat t = time / 2.0;\n\t\tvec2 xy_1      = vec2(center_xy.x + cos(t + v) * cos(t), center_xy.y + sin(t + v) * sin(t));\n\t\tvec2 xy_2      = vec2(xy_1.x      + sin(t + v) * cos(t), xy_1.y      + cos(t + v) * sin(t));\n\t\tvec2 xy_3      = vec2(xy_2.x      + cos(t + v) * cos(t), xy_2.y      + cos(t + v) * sin(t));\n\t\tvec2 xy_4      = vec2(xy_1.x      + sin(t + v) * cos(t), xy_1.y      + sin(t + v) * sin(t));\n\t\tvec2 xy_5      = vec2(xy_2.x      + cos(t + v) * sin(t), xy_2.y      + sin(t + v) * cos(t));\n\t\tvec2 xy_6      = vec2(xy_3.x      + sin(t + v) * sin(t), xy_3.y      + cos(t + v) * cos(t));\n                vec2 xy_7      = vec2(xy_3.x      + cos(t + v) * sin(t), xy_3.y      + cos(t + v) * cos(t));\n\t\tfloat red      = 0.01 / abs(length(xy_1));\n\t\tfloat green    = 0.01 / abs(length(xy_2));\n\t\tfloat blue     = 0.01 / abs(length(xy_5));\n\t\tfloat yellow   = 0.01 / abs(length(xy_3));\n\t\tfloat purple   = 0.01 / abs(length(xy_4));\n\t\tfloat orange   = 0.01 / abs(length(xy_6));\n\t\tfloat sky      = 0.01 / abs(length(xy_7));\n\t\tfragColor  += vec4(0.0, 0.0, blue, 1.0);\n\t\tfragColor  += vec4(red, 0.0, 0.0, 1.0);\n\t\tfragColor  += vec4(0.0, green, 0.0, 1.0);\n\t\tfragColor  += vec4(yellow, yellow, 0.0, 1.0);\n\t\tfragColor  += vec4(purple, 0.0, purple, 1.0);\n                fragColor  += vec4(orange, orange / 2.0, 0.0, 1.0);\n\t\tfragColor  += vec4(0.0, sky / 2.0, sky, 1.0);\n\t}\n    \n   \n   fragColor+= vec4(pow(col * 0.54 * col2,3.0/col), col * 0.34, col2 * 0.9 * sin(time), 1.0) + vec4(col2 * 0.33, col * col2 * 0.24 * cos(time),col2*0.9,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}