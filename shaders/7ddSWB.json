{
    "Shader": {
        "info": {
            "date": "1633897498",
            "description": "Byte Patten 2",
            "flags": 0,
            "hasliked": 0,
            "id": "7ddSWB",
            "likes": 0,
            "name": "Byte Patten 2",
            "published": 3,
            "tags": [
                "bytepatten2"
            ],
            "usePreview": 0,
            "username": "foxic",
            "viewed": 151
        },
        "renderpass": [
            {
                "code": "#define TileSize 8.\n\nvec2 rotate2D(vec2 _st,float _angle){\n    //_st-=.5;\n    _st=mat2(cos(_angle),-sin(_angle),\n    sin(_angle),cos(_angle))*_st;\n    //_st+=.5;\n    return _st;\n}\n\nfloat random(in float x){\n    return fract(sin(x)*43758.5453);\n}\n\n\nbool patten(in vec2 uv){\n    ivec2 uvs = ivec2(uv*TileSize);\n    uvs.x = (uvs.x+10000)%3;\n    \n    int byte = int( random(float(uvs.y))*7. );\n    return ((byte >> uvs.x)&1) == 0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){   \n    vec2 uv = ((2.0*fragCoord-iResolution.xy)/iResolution.y);\n\n    uv.y +=1.;\n    //uv = vec2( atan(uv.x ,uv.y)*0.159, length(uv)*0.25 );\n    uv.y += iTime*0.1;\n    \n    uv = rotate2D(uv,-0.7853);\n    float b = float(patten(uv));\n    b = max( b, float(!patten(uv+0.05))*0.0625 );\n    b = mix( b, 0.5,0.2);\n    \n    vec2 q = fragCoord / iResolution.xy;\n    \n    b *= b+0.5*pow(16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.5)*3.;\n    b = clamp(b,0.,1.);\n    fragColor = vec4(vec3(b),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}