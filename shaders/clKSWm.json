{
    "Shader": {
        "info": {
            "date": "1686139769",
            "description": "an even more extreme version of the classic psychedelic spiral!",
            "flags": 0,
            "hasliked": 0,
            "id": "clKSWm",
            "likes": 5,
            "name": "more extreme psychedelic spiral",
            "published": 3,
            "tags": [
                "spiral",
                "psychedelic"
            ],
            "usePreview": 0,
            "username": "tungster24",
            "viewed": 159
        },
        "renderpass": [
            {
                "code": "/*\nextreme psychedelia by tungster24\n    -SUBSAMPLING should be kept between 1-8 for best effect\n    -MOTIONSTEPS should be kept between 10-20 for best effect (even lower\n     if SUBSAMPLING is high\n    -MOTIONBLUR should be kept between 1.0 and 3.0 for best effect.    \n    -added a BPM modifier if you wish to sync it to a song.\n\n*/\n#define SUBSAMPLING 1\n#define MOTIONSTEPS 10\n#define MOTIONBLUR 1.0\n#define BPM 200\n\nfloat theta(vec2 p) {return atan(p.y,p.x);}\nfloat dis(vec2 p) {return distance(vec2(0.0),p);}\nfloat wave(float x) {return min(mod(x,1.0)*2.0,mod(-x,1.0)*2.0);}\nvec4 preset(vec2 fragCoord,float timedisplacement)\n{\n    vec4 fragColor;\n    \n    vec2 uv = fragCoord/iResolution.xy-vec2(0.5,0.5);\n    uv*=2.0;\n    uv *= iResolution.xy/iResolution.yy;\n    \n    float ps = iTime+timedisplacement;\n    float s = 2.0*ps+2.0*sin(ps*6.2839*float(BPM)/60.0)/14.0/float(BPM)*60.0;\n    float t = theta(uv)/3.1415926, r = 1.0/pow(dis(uv),0.5);\n    \n    fragColor = vec4(0.0);\n    \n    fragColor.r = wave(r*5.0-t+2.0*s);\n    fragColor.g = wave(r*5.0*1.0/(pow(wave(t*3.0),2.0)/1.0+2.0)+t+s);\n    fragColor.b = wave(r*5.0*1.0/(pow(wave(t*3.0+1.5075),2.0)/1.0+2.0)+t+s);\n    \n    \n    //put this part in quotes to have a smooth spiral.\n    fragColor.r = round(wave(r*5.0-t+2.0*s));\n    fragColor.g = round(wave(r*5.0*1.0/(pow(wave(t*3.0),2.0)/1.0+2.0)+t+s*1.5))*0.8;\n    fragColor.b = round(wave(r*5.0*1.0/(pow(wave(t*3.0+1.5075),2.0)/1.0+2.0)+t-s*1.7));\n    \n    return fragColor;\n\n}\nvoid mainImage( out vec4 C, in vec2 P )\n{\n    vec2 s[SUBSAMPLING*SUBSAMPLING];\n    for(int i = 0;i < SUBSAMPLING;i++) for(int j = 0;j < SUBSAMPLING;j++) {\n        s[SUBSAMPLING*i+j] = vec2(float(i)/float(SUBSAMPLING),float(j)/float(SUBSAMPLING));\n    }\n    float t[MOTIONSTEPS];\n    for(int i = 0;i < MOTIONSTEPS;i++) t[i] = MOTIONBLUR * iTimeDelta / float(MOTIONSTEPS) * float(i);\n    \n    C=vec4(0.0);\n    for(int i = 0;i < SUBSAMPLING*SUBSAMPLING;i++) for(int j = 0;j < MOTIONSTEPS;j++){\n        C+=preset(P+s[i],t[j])/float(SUBSAMPLING*SUBSAMPLING*MOTIONSTEPS);\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}