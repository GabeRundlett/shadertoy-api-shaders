{
    "Shader": {
        "info": {
            "date": "1604418972",
            "description": "simple rain droplets",
            "flags": 0,
            "hasliked": 0,
            "id": "ltlSzl",
            "likes": 7,
            "name": "droplets",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "water",
                "rain",
                "droplets"
            ],
            "usePreview": 1,
            "username": "miloszmaki",
            "viewed": 670
        },
        "renderpass": [
            {
                "code": "const int NUM = 50;\n\nfloat rand(float x)\n{\n    return fract(sin(x * 154.4514) * 72561.556);\n}\n\nfloat rand(vec2 x)\n{\n    return rand(dot(x, vec2(11.4935, 17.5183)));\n}\n\nfloat circle(vec2 uv, vec2 pos, float rad)\n{\n    return length(pos - uv) - rad;\n}\n\nvec3 normal(vec2 uv, vec2 pos, float rad)\n{\n    vec2 d = pos - uv;\n    float x = length(d);\n    float z = 1. - pow(x / rad, 5.0);\n    return normalize(vec3(d, z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y = 1. - uv.y;\n    \n    vec3 color = texture(iChannel0, uv).rgb;\n    \n    float aspect = iResolution.x / iResolution.y;\n    \n    vec2 uv1 = uv * 2.0 - 1.0;\n    uv1.x *= aspect;\n    \n    \n    for (int i=0; i<NUM; i++)\n    {\n    \tvec2 pos = vec2(-1, -1) + vec2(2, 2) * vec2(rand(float(i)+234.230), rand(float(i)+173.1523));\n        pos.x *= aspect;\n        pos.y += iTime * (0.1 + 0.1 * rand(float(float(i)*34.35)));\n        pos.y = mod(pos.y + 1.0, 2.0) - 1.0;\n    \tfloat rad = 0.02 + 0.1 * rand(float(i));\n        pos.y = pos.y * (1.0 + 2.0 * rad) - rad; // avoid popping\n        \n        float d = circle(uv1, pos, rad);\n    \tif (d <= 0.)\n        {\n            vec2 n = normal(uv1, pos, rad).xy;\n            vec2 uv2 = uv + n * 2.;\n            vec3 drop = texture(iChannel0, uv2).rgb;\n            float alpha = smoothstep(0., -0.02, d); // smooth edges\n            color = mix(color, drop, alpha);\n        }\n    }\n    \n    \n\tfragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}