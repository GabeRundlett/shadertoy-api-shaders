{
    "Shader": {
        "info": {
            "date": "1581841590",
            "description": "visual experiment",
            "flags": 0,
            "hasliked": 0,
            "id": "tt3SDf",
            "likes": 19,
            "name": "Snake scales",
            "published": 3,
            "tags": [
                "circles",
                "lines",
                "vector"
            ],
            "usePreview": 0,
            "username": "avin",
            "viewed": 648
        },
        "renderpass": [
            {
                "code": "#define SIZE 15.0\n#define COL1 vec3(32, 43, 51) / 255.0\n#define COL2 vec3(235, 241, 245) / 255.0\n\n#define SF 1. / min(iResolution.x, iResolution.y) * SIZE * .5\n#define SS(l, s) smoothstep(SF, -SF, l - s)\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord.xy - iResolution.xy * 0.5) / iResolution.x;\n    float ssf = SF * iResolution.y * .004;\n\n    uv *= SIZE;\n    vec2 id = floor(uv);\n    uv = fract(uv) - 0.5;\n\n    float mask = 0.0;\n    float rmask = 0.0;\n\n    for (int k = 0; k < 9; k++) {\n        vec2 P = vec2(k % 3, k / 3) - 1.;\n        vec2 rid = id - P;\n        vec2 ruv = uv + P + vec2(0, mod(rid, 2.) * .5) + vec2(0, sin(iTime * 2. + rid.x * 5. + rid.y * 100.) * .2);\n\n        float l = length(ruv);\n\n        float d = SS(l, .75) * (ruv.y + 1.);\n\n        mask = max(mask, d);\n        if (d >= mask) {\n            mask = d;\n            rmask = SS(abs(l - .65), SF * iResolution.y * .007);\n        }\n    }\n\n    vec3 col = mix(COL1, COL2, rmask);\n\n    fragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}