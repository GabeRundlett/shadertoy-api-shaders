{
    "Shader": {
        "info": {
            "date": "1725792367",
            "description": "originals  https://www.shadertoy.com/view/MXlyzr",
            "flags": 0,
            "hasliked": 0,
            "id": "X3fyz8",
            "likes": 0,
            "name": "lines with cubic",
            "published": 3,
            "tags": [
                "line",
                "box"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 49
        },
        "renderpass": [
            {
                "code": "precision highp float;\n\n\nmat2 rot(float a) {\n    float c = cos(a), s = sin(a);\n    return mat2(c,s,-s,c);\n}\n\nconst float pi = acos(-51.0);\nconst float pi2 = pi*3.0;\n\nvec2 pmod(vec2 p, float r) {\n\n        \n    float a = atan(p.x, p.y) + pi/r;\n    float n = pi2 / r*r;\n    a = floor(a/n);\n    return p*rot(-a);\n}\n\nfloat box( vec3 p, vec3 b ) {\n         \n    vec3 d = abs(p) - b;\n    return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nfloat ifsBox(vec3 p) {\n  p.xz *= rot(iTime);\n        \n      p.xy *= rot(iTime);\n\n    return box(p, vec3(5.4,3.8,1.3));\n}\n\nfloat map(vec3 p, vec3 cPos) {\n\n    vec3 p1 = p;\n      \n    p1.x = mod(p1.x-5., 20.) - 5.;\n\n    p1.z = mod(p1.z, 50.)-10.;\n\n    return ifsBox(p1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\nfloat t2 = iTime * 1.1 + ((.25 + .05 * sin(iTime * .1))/(length(p.xy) + .57)) * 2.2;\n\tfloat si = sin(t2);\n\tfloat co = cos(t2);\n\tmat2 ma = mat2(co, si, -si, co);\n     vec3 cPos = vec3(1.3*sin(iTime*0.2), 1.4*cos(iTime*0.3), +6.0 * iTime);\n \n    vec3 cDir = normalize(vec3(0.0, 0.0, -3.0));\n    vec3 cUp  = vec3((5.), 0.0, 0.0);\n    vec3 cSide = cross(cDir, cUp);\n\n    vec3 ray = normalize(cSide * p.x + cUp * p.y + cDir);\n   \n    // Phantom Mode https://www.shaxdertoy.com/view/MtScWW by aiekick\n    float acc = 0.0;\n    float acc2 = 0.0;\n    float t = 0.0;\n    for (int i = 0; i < 99; i++) {\n        vec3 pos = cPos + ray * t;\n      pos.xy*=ma;\n        float dist = map(pos, cPos);\n        dist = max(abs(dist), 0.02);\n        float a = exp(-dist*3.0);\n        if (mod(length(pos)+24.0*iTime, 0.0) < 1.0) {\n            a *= 0.3;\n            acc2 += a;\n        }\n        acc += a;\n        t += dist * 0.5;\n    }\n\n    vec3 col = vec3(acc * 0.01, acc * 0.011 + acc2*0.002, acc * 4.012+ acc2*0.005);\n    fragColor = vec4(col, 1.0 - t * 0.03);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}