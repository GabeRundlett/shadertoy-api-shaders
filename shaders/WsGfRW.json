{
    "Shader": {
        "info": {
            "date": "1606623522",
            "description": ".",
            "flags": 32,
            "hasliked": 0,
            "id": "WsGfRW",
            "likes": 13,
            "name": "2-Fluids",
            "published": 3,
            "tags": [
                "fluid"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 458
        },
        "renderpass": [
            {
                "code": "// Fork of \"Transport Dynamics\" by wyatt. https://shadertoy.com/view/wdVBRR\n// 2020-11-29 03:57:58\n\nMain {\n    vec4 a = A(U), b = B(U);\n    Q = .8*atan(a.w+vec4(0.,.5*b.w,b.w,1));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel1,(U)/R)\n#define Main void mainImage(out vec4 Q, in vec2 U)\nfloat ln (vec2 p, vec2 a, vec2 b) { // returns distance to line segment for mouse input\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nfloat ln (vec3 p, vec3 a, vec3 b) { // returns distance to line segment for mouse input\n    return length(p-a-(b-a)*dot(p-a,b-a)/dot(b-a,b-a));\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "// Apply forces\nvec2 F (vec2 u) {\n    vec4 a = A(gl_FragCoord.xy + u);\n    vec4 b = B(gl_FragCoord.xy + u);\n\treturn .125*(b.w+sqrt(a.w)*abs(sqrt(a.w)-.5))*u/dot(u,u);\n}\nvec4 X (vec4 Q, vec2 u) {\n\tvec4 a = A(gl_FragCoord.xy + u);\n    float f = Q.w-a.w;\n    return mix(Q,a,clamp(10.*f*f,0.,1.));\n}\nMain {\n\tQ = A(U);\n    if (iFrame%2==0)  {\n        float e = .2+.8*Q.w;\n        Q.xy -= e*F(vec2(0,1));\n        Q.xy -= e*F(vec2(1,0));\n        Q.xy -= e*F(vec2(0,-1));\n        Q.xy -= e*F(vec2(-1,0));\n        Q.xy -= e*F(vec2(1,1));\n        Q.xy -= e*F(vec2(-1,1));\n        Q.xy -= e*F(vec2(1,-1));\n        Q.xy -= e*F(vec2(-1,-1));\n        if (length(Q.xy)>1.) Q.xy = normalize(Q.xy);\n        if (iFrame < 1) {\n            Q = vec4(0,0,0,.5+.1*sin(U.x)*sin(U.y));\n        }\n    } else {\n    \tQ = \n        0.125*X(Q,vec2(1,0))+\n        0.125*X(Q,vec2(0,1))+\n        0.125*X(Q,vec2(-1,0))+\n        0.125*X(Q,vec2(0,-1))+\n        0.125*X(Q,vec2(1,1))+\n        0.125*X(Q,vec2(1,-1))+\n        0.125*X(Q,vec2(-1,-1))+\n        0.125*X(Q,vec2(-1,1));\n    }\n    if (iMouse.z>0.&&length(U-iMouse.xy)<20.)\n        Q = vec4(1,0,6,1);\n    if (U.x<1.||U.y<1.||R.x-U.x<1.||R.y-U.y<1.)Q.xy*=0.;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Conservative advect alternating x and y-direction\nMain {\n    Q = vec4(0);\n    if (iFrame%2==0)\n\tfor (float i = -1.; i <= 1.; i++)\n    {\n    \tvec2 u = vec2(0,i);\n        vec4 a = A(U+u-vec2(0,0.5)),\n             b = A(U+u),\n             c = A(U+u+vec2(0,0.5));\n        float w1 = 1.+c.y-a.y;\n        if (w1>0.) {\n            float w = clamp(u.y+.5+c.y,-.5,.5)-\n                      clamp(u.y-.5+a.y,-.5,.5);\n            Q.xyz += b.w*w/w1*b.xyz;\n            Q.w += b.w*w/w1;\n        }\n    } else \n\tfor (float i = -1.; i <= 1.; i++)\n    {\n    \tvec2 u = vec2(i,0);\n        vec4 a = A(U+u-vec2(0.5,0)),\n             b = A(U+u),\n             c = A(U+u+vec2(0.5,0));\n        float w1 = 1.+c.x-a.x;\n        if (w1 > 0.) {\n            float w = clamp(u.x+.5+c.x,-.5,.5)-\n                      clamp(u.x-.5+a.x,-.5,.5);\n            Q.xyz += b.w*w/w1*b.xyz;\n            Q.w += b.w*w/w1;\n        }\n    }\n    if (Q.w > 0.) Q.xyz /= Q.w;\n    if (U.x<1.||U.y<1.||R.x-U.x<1.||R.y-U.y<1.)Q.xy*=0.;\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Apply forces\nvec2 F (vec2 u) {\n    vec4 a = A(gl_FragCoord.xy + u);\n    vec4 b = B(gl_FragCoord.xy + u);\n\treturn .125*(b.w+sqrt(a.w)*abs(sqrt(a.w)-.5))*u/dot(u,u);\n}\nvec4 X (vec4 Q, vec2 u) {\n\tvec4 a = A(gl_FragCoord.xy + u);\n    float f = Q.w-a.w;\n    if ((a.w+Q.w)>0.)\n        a.xyz = (Q.xyz*Q.w+a.xyz*a.w)/(a.w+Q.w);\n    return mix(Q,a,clamp(10.*f*f,0.,1.));\n}\nMain {\n\tQ = A(U);\n    if (iFrame%2==0)  {\n        float e = .2+.8*Q.w;\n        Q.xy -= e*F(vec2(0,1));\n        Q.xy -= e*F(vec2(1,0));\n        Q.xy -= e*F(vec2(0,-1));\n        Q.xy -= e*F(vec2(-1,0));\n        Q.xy -= e*F(vec2(1,1));\n        Q.xy -= e*F(vec2(-1,1));\n        Q.xy -= e*F(vec2(1,-1));\n        Q.xy -= e*F(vec2(-1,-1));\n        if (length(Q.xy)>1.) Q.xy = normalize(Q.xy);\n        if (iFrame < 1) {\n            Q = vec4(0,0,0,.5);\n        }\n    } else {\n    \tQ = \n        0.125*X(Q,vec2(1,0))+\n        0.125*X(Q,vec2(0,1))+\n        0.125*X(Q,vec2(-1,0))+\n        0.125*X(Q,vec2(0,-1))+\n        0.125*X(Q,vec2(1,1))+\n        0.125*X(Q,vec2(1,-1))+\n        0.125*X(Q,vec2(-1,-1))+\n        0.125*X(Q,vec2(-1,1));\n    }\n    if (iMouse.z>0.&&length(U-iMouse.xy)<20.)\n        Q = vec4(1,0,6,1);\n    if (U.x<1.||U.y<1.||R.x-U.x<1.||R.y-U.y<1.)Q.xy*=0.;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Conservative advect alternating x and y-direction\nMain {\n    Q = vec4(0);\n    if (iFrame%2==0)\n\tfor (float i = -1.; i <= 1.; i++)\n    {\n    \tvec2 u = vec2(0,i);\n        vec4 a = A(U+u-vec2(0,0.5)),\n             b = A(U+u),\n             c = A(U+u+vec2(0,0.5));\n        float w1 = 1.+c.y-a.y;\n        if (w1>0.) {\n            float w = clamp(u.y+.5+c.y,-.5,.5)-\n                      clamp(u.y-.5+a.y,-.5,.5);\n            Q.xyz += b.w*w/w1*b.xyz;\n            Q.w += b.w*w/w1;\n        }\n    } else \n\tfor (float i = -1.; i <= 1.; i++)\n    {\n    \tvec2 u = vec2(i,0);\n        vec4 a = A(U+u-vec2(0.5,0)),\n             b = A(U+u),\n             c = A(U+u+vec2(0.5,0));\n        float w1 = 1.+c.x-a.x;\n        if (w1 > 0.) {\n            float w = clamp(u.x+.5+c.x,-.5,.5)-\n                      clamp(u.x-.5+a.x,-.5,.5);\n            Q.xyz += b.w*w/w1*b.xyz;\n            Q.w += b.w*w/w1;\n        }\n    }\n    if (Q.w > 0.) Q.xyz /= Q.w;\n    if (U.x<1.||U.y<1.||R.x-U.x<1.||R.y-U.y<1.)Q.xy*=0.;\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}