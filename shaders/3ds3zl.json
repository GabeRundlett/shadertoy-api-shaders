{
    "Shader": {
        "info": {
            "date": "1547217309",
            "description": "something something voronoi",
            "flags": 0,
            "hasliked": 0,
            "id": "3ds3zl",
            "likes": 2,
            "name": "something something voronoi",
            "published": 3,
            "tags": [
                "2d",
                "voronoi",
                "lighting",
                "something"
            ],
            "usePreview": 0,
            "username": "public_int_i",
            "viewed": 417
        },
        "renderpass": [
            {
                "code": "//Ethan Alexander Shulman 2019, made on livestream at twitch.tv/ethanshulman\n\n#define time iTime\n\nfloat voronoi(vec2 u, float i) {\n\t#define l(i) length(fract(abs(u)*.01+fract(i*vec2(1,8))+cos(u.yx*fract(time*.02)*.07+i*8.))-.5)\n\treturn l(i);\n}\n\n#define NORMAL_PRECISION 1e-1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.-iResolution.xy)*2./iResolution.x;\n    \n\tvec2 u = uv.xy*300.0;\n\tvec3 o = vec3(0.),\n\t\tlpos = vec3(sin(time*.2), 0.01, cos(time*.3)),\n\t\twpos = vec3(uv.x, 0., uv.y),\n\t\trpos = lpos-wpos,\n\t\trdir = normalize(rpos);\n\tfor (int i = 0; i < 10; i++) {\n\t\tfloat mo = float(i + 1) / 4.0,\n\t\t\tdst = voronoi(u, mo);\n\t\tvec3 nrm = normalize(vec3(voronoi(u + vec2(NORMAL_PRECISION, 0), mo) - dst, NORMAL_PRECISION*.01, voronoi(u + vec2(0, NORMAL_PRECISION), mo) - dst));\n\t\to += vec3(max(0.,1.-dst*2.)*(.2+max(0., dot(rdir, nrm))) / (1.+length(rpos)*10.));\n\t}\n\tfragColor = vec4(o+max(0.,2.-length(wpos.xz-lpos.xz)*50.), 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}