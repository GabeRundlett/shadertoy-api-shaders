{
    "Shader": {
        "info": {
            "date": "1722877816",
            "description": "//4.1\n//Formas\n//Obtencion de radio y angulo.\n",
            "flags": 0,
            "hasliked": 0,
            "id": "lfjczd",
            "likes": 0,
            "name": "Formas 4.1",
            "published": 3,
            "tags": [
                "mix",
                "tutorial",
                "sin",
                "color",
                "cos",
                "shaders",
                "shaders",
                "livecoding",
                "functions",
                "taller",
                "tutoriales",
                "osciladores"
            ],
            "usePreview": 0,
            "username": "jpupper",
            "viewed": 47
        },
        "renderpass": [
            {
                "code": "#define resolution iResolution\n#define time iTime\n\n//4.1\n//Formas\n//Obtencion de radio y angulo.\n \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \n       vec2 uv = gl_FragCoord.xy / resolution.xy; // De esta manera obtenemos las coordenadas cartesianas\n    \n    //Al igual que cuando utilizamos uv.x y uv.y tambi√©n podemos utilizar las variables r y a.\n    //Estas variables son el radio y el angulo . \n    //Se obtienen de la siguiente manera : \n    \n    vec2 p = vec2(0.5) - uv; //Genero un punto en el espacio(en este caso en el medio.\n    \n    //Obtengo el radio(calcula la distancia del punto del medio con las puntas mas alejadas y por eso me genera el radio \n    float r = length(p);\n    \n    //obtengo el angulo. (Calcula el angulo existente que hay en el punto p.)\n    float a = atan(p.x,p.y);\n    \n    fragColor = vec4(r,a,r+a,1.0); //Visualizo solo el radio.\n    //fragColor = vec4(vec3(a),1.0); //Visualizo solo el angulo.\n    \n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}