{
    "Shader": {
        "info": {
            "date": "1716281475",
            "description": "a euler estimation over 10 sec of the evolution of population prey, preadator between 0 and 250. With a K who change.",
            "flags": 0,
            "hasliked": 0,
            "id": "lXt3RM",
            "likes": 0,
            "name": "Fork euler esti new F",
            "published": 3,
            "tags": [
                "math",
                "euler"
            ],
            "usePreview": 0,
            "username": "coco1001coco",
            "viewed": 100
        },
        "renderpass": [
            {
                "code": "float euclidien_divide(float a, float b) {\n    return a - floor(a/b)*b;\n}\n\nfloat F(float t, float x, float y) {\n    return x*(3.*(1.-x/euclidien_divide(iTime,100.0))-2.*y);\n}\n\nfloat G(float t, float x, float y){\n    return y*(-4.0+x);\n}\n\nvec3 euler(float t, float dt, vec2 origine) {\n    float x = origine.x;\n    float y = origine.y;\n\n    for (float i = 0.0; i<t; i+=dt) {\n        float x_1 = x + dt*F(i,x,y);\n        float y_1 = y + dt*G(i,x,y);\n        x = x_1;\n        y = y_1;\n    }\n    return vec3(x,y,0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.x;\n    float t = 10.0; // iMouse.x/iResolution.x*20.0;\n    vec3 col = euler(t,0.001,uv*250.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}