{
    "Shader": {
        "info": {
            "date": "1721258707",
            "description": "Got from BigWIngs tutorial https://www.shadertoy.com/view/ttlcR2\n",
            "flags": 0,
            "hasliked": 0,
            "id": "lflcD7",
            "likes": 8,
            "name": "Falling leaves",
            "published": 3,
            "tags": [
                "leaf",
                "autumn"
            ],
            "usePreview": 0,
            "username": "clicker",
            "viewed": 163
        },
        "renderpass": [
            {
                "code": "#define S smoothstep\n\nvec3 GetPaletteColor(float t)\n{\n    vec3 a = vec3(0.74, 0.64, 0.24);\n    vec3 b = vec3(1.00, 0.28, 0.00);\n    vec3 c = vec3(0.19, 1.00, 0.17);\n    vec3 d = vec3(0.15, 0.60, 0.00);\n\n    return a + b * cos(radians(360.0) * (c * t + d));\n}\n\nmat2 Rot(float a)\n{\n\tfloat s=sin(a), c=cos(a);\n    return mat2(c,-s,s,c);\n}\n\nvec3 Transform(vec3 p, float angle) {\n\tp.xz *= Rot(angle );\n    p.xy *= Rot(angle * 1.7);\n\n    return p;\n}\n\nfloat Leaf(vec2 p)\n{\n    float w = fwidth(p.y);\n\n\tfloat d = length(p - vec2(0.0, clamp(p.y, -0.3, 0.3)));\n\n    float r = mix(0.07, .001, S(0.0, 0.3, abs(p.y - 0.03)));\n\n    float m = S(w, -w, d-r);\n    \n    float side = sign(p.x);\n\n    float x = 0.9 * abs(p.x) / r;\n    \n    float wave = (1.-x)*sqrt(x) + x*(1.-sqrt(1.-x));\n\n    float y = (p.y - wave * 0.2) * 20.0 + side * 243.75;\n\n    float id = floor(y + 20.0);\n\n    float n = fract(sin(id*564.32)*763.);\n    \n    float shade = mix(.8, 0.9, n);\n    \n    d = length(p - vec2(0.0, clamp(p.y, -0.3, 0.2)));\n    \n    float strand = S(.0, .1, abs( fract(y) - 0.5 ) - 0.4);\n\n    strand *= S(w, -w, x - 0.9);\n    strand *= S(-w, w, x - 0.02);\n    strand *= S(w, -w, abs(p.y) - 0.3);\n\n    float stem = S(w, -w, d + (p.y-0.3) * 0.01);\n    \n    return max(m * shade, max(stem, strand));\n}\n\nfloat ScrewLeaf(vec2 p, float angle)\n{\n    p -= vec2(0,-.45);\n    float d = length(p);\n    p *= Rot(sin(angle) * 0.5 * d);\n\n    p += vec2(0,-.45);\n\n    return Leaf(p);\n}\n\nvec4 LeafBall(vec3 ro, vec3 rd, vec3 pos, vec3 color, float angle)\n{\t\n    vec4 col = vec4(0);\n    \n    float t = dot(pos-ro, rd);\n    vec3 p = ro + rd * t;\n    float y = length(pos-p);\n    \n    if (y < 1.0)\n    {\n        float x = sqrt(1.-y*y);\n        vec3 pF = ro + rd * (t-x) - pos;\n        float n = pF.y*.5+.5;\n        \n        pF = Transform(pF, angle);\n        vec2 uvF = vec2(atan(pF.x, pF.z), pF.y); // -pi<>pi, -1<>1\n        uvF *= vec2(.25,.5);\n        float f = Leaf(uvF);\n        \n        vec4 front = vec4(f * color, S(0., .6, f));\n        \n        vec3 pB = ro + rd * (t+x) - pos;\n        n = pB.y*.5+.5;\n        pB = Transform(pB, angle);\n        vec2 uvB = vec2(atan(pB.x, pB.z), pB.y); // -pi<>pi, -1<>1\n        uvB *= vec2(.25, .5);\n        float b = Leaf(uvB);\n        vec4 back = vec4(b * color * 0.7, S(0., .6, b));\n        \n    \tcol = mix(back, front, front.a);\n    }\n    \n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\tvec2 M  = (iMouse.xy - 0.5 * iResolution.xy) / iResolution.y;\n\n    float addend = (sin(10.0 * length(uv - M) - iTime * 2.0) * 0.5 + 0.5) * 0.05 - 0.2;\n\n    vec3 bg = vec3(0.7, 0.8, 0.87);\n    bg      = mix(bg, GetPaletteColor(0.2), S(1.0, 0.4, uv.y + addend + 1.1));\n    \n    vec4 col = vec4(bg, 0.0);\n\t\n    vec3 ro = vec3(0.0, 0.0, -3.0);\n    vec3 rd = normalize(vec3(uv, 1.0));\n\n    for (float i = 0.0; i < 1.0; i += 1.0 / 30.0)\n    {\n        vec3 color = GetPaletteColor(1.0 -i);\n\n        float n = fract(sin(i*564.3)*4570.3);\n        float x = mix(-12., 12., n) + M.x;\n        float y = mix(5.0, -5.0, fract(fract(n * 10.) + iTime * 0.3)) + M.y;\n        \n        float z = mix(5., 0., i);\n        float a = iTime * 1.2 + i * 53.34;\n        \n    \tvec4 leaf = LeafBall(ro, rd, vec3(x, y, z), color, a);\n        \n        leaf.rgb = mix(bg, leaf.rgb, mix(.3, 1., i));\n        leaf.rgb = sqrt(leaf.rgb);\n        \n        col = mix(col, leaf, leaf.a);\n    }\n    \n    fragColor = col;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}