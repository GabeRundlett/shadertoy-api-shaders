{
    "Shader": {
        "info": {
            "date": "1681980757",
            "description": "Birthday cake drawn without using a 2D curve",
            "flags": 0,
            "hasliked": 0,
            "id": "DlcGRN",
            "likes": 1,
            "name": "Happy birthday cake",
            "published": 3,
            "tags": [
                "birthday",
                "cake"
            ],
            "usePreview": 0,
            "username": "cisemsu",
            "viewed": 180
        },
        "renderpass": [
            {
                "code": "vec2 remap01(vec2 x, vec2 minvalue, vec2 maxvalue){\n    return clamp((x - minvalue) / (maxvalue - minvalue), 0.0, 1.0);\n}\nfloat radian (float angle){\n//to convert to radians\nfloat rad = angle / 180.*3.14159265;\nreturn rad;\n\n}\nvec2 rotation1(vec2 center,in vec2 fragCoord,float rotation){\n    //to rotate the ellipse\n    vec2 right = vec2 (-cos(rotation), sin(rotation));\n    vec2 up = vec2(-right.y,right.x);\n    \n    vec2 asd = fragCoord - center;\n    float x = dot(asd, right);\n    float y = dot(asd, up);\n    return vec2(x,y);\n\n\n}\nvoid elips(inout vec4 fragColor,vec3 color,in vec2 fragCoord,vec2 center, float radius1, float radius2,float rotation,vec3 color2){\n\n    vec2 rot = rotation1(center,fragCoord,rotation);\n    float result = (rot.x*rot.x)/(radius1*radius1) + (rot.y*rot.y)/(radius2*radius2);\n    \n    if (result <= 1. && fragCoord.y >= center.y)\n        fragColor = vec4(color,1.0);\n    else if (result <= 1. && fragCoord.y <= center.y)\n        fragColor = vec4(color2,1.0);}\n        \nvoid circle(vec2 uv,inout vec4 fragColor, in vec2 fragCoord,vec2 center,float radius,vec3 color){\n\n   float d = length (center - uv);\n   if (d <= radius){\n        fragColor = vec4 (color,1.0);\n    }\n\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n    vec2 uv2 = fragCoord.xy;\n    \n    // The centers of the circles used in the eyes of the cake\n    vec2 center2 = vec2(380.,190.);\n    vec2 center3 = vec2(450.,190.);\n    vec2 center4 = vec2(375.,195.);\n    vec2 center5 = vec2(445.,195.);\n    vec2 center6 = vec2(387.,188.);\n    vec2 center7 = vec2(457.,188.);\n    vec2 center8 = vec2(380.,186.);\n    vec2 center9 = vec2(450.,186.);\n    \n    // Creams of the first layer of the cake\n    vec2 center_1a = vec2(346.,218.);\n    vec2 center_1b = vec2(362.,218.);\n    vec2 center_1c = vec2(377.,218.);\n    vec2 center_1d = vec2(392.,218.);\n    vec2 center_1e = vec2(407.,218.);\n    vec2 center_1f = vec2(422.,218.);\n    vec2 center_1g = vec2(437.,218.);\n    vec2 center_1h = vec2(452.,218.);\n    vec2 center_1i = vec2(467.,218.);\n    vec2 center_1j = vec2(482.,218.);\n    \n    // Creams of the second layer of the cake\n    vec2 center_2a = vec2(353.,298);\n    vec2 center_2b = vec2(369.,298);\n    vec2 center_2c = vec2(384.,298);\n    vec2 center_2d = vec2(399.,298);\n    vec2 center_2e = vec2(414.,298);\n    vec2 center_2f = vec2(429.,298);\n    vec2 center_2g = vec2(444.,298);\n    vec2 center_2h = vec2(460.,298);\n    vec2 center_2i = vec2(476.,298);\n    \n    \n    \n    float radius = 0.03 * iResolution.y; // for the size of your eyes\n    float radius2 = 0.0109 * iResolution.y; //for the size of your eyes\n    float radius3 = 0.009 * iResolution.y; //for the size of your eyes\n    float radius4 = 0.019 * iResolution.y; //for creams\n    \n    \n    // for creams color\n    vec3 yellow = vec3(255.0/255.0,218.0/255.0,185.0/255.0);\n    vec3 red = vec3(135.0/255.0,206.0/255.0,325.0/255.0);\n    vec3 blue = vec3(176.0/255.0,196.0/255.0,255.0/255.0);\n    vec3 blue2 = vec3(0.0/255.0,191.0/255.0,255.0/255.0);\n    vec3 black = vec3(0.0,0.0,0.0);\n    vec3 white = vec3(1.0,1.0,1.0);\n    vec3 orange = vec3(255.0/255.0,69.0/255.0,0.0/255.);\n    vec3 orange2 = vec3(255.0/255.0,102.0/255.0,0.0/255.);\n    vec3 cream = vec3(254.0/255.0,251.0/255.0,234.0/255.);\n\n    fragColor =vec4(mix(red, yellow, fragCoord.y/450.),1.0); //for background color\n\n    vec2 uv = fragCoord/iResolution.xy;\n    float ratio = iResolution.x / iResolution.y;\n    vec2 center = vec2(0.25,0.375);\n    vec2 extent = vec2(0.25);\n    uv.x *= ratio;\n    \n     // mouth radius \n     float radius_a = 30.0;\n     float radius_b = 20.0;\n     \n     // candles radius \n     float radius_c = 5.0;\n     float radius_d = 10.0;\n     \n     //eyelash radius\n     float radius_e = 2.0;\n     float radius_f = 9.0;\n     \n     //for mouth\n     vec2 location1 = vec2(415.,155.);\n     vec2 location2 = vec2(415.,160.);\n     \n     //for candles\n     vec2 location3 = vec2(364.,370.);\n     vec2 location4 = vec2(409.,370.);\n     vec2 location5 = vec2(459.,370.);\n     \n     //for eyelash\n     vec2 location6 = vec2(462.,205.);\n     vec2 location7 = vec2(463.,198.);\n     \n     //for blue eyes \n     vec2 location8 = vec2(367.,205.);\n     vec2 location9 = vec2(365.,198.);\n     \n     \n    if (uv.x >=0.75 && uv.x <= 1.1 && uv.y >=0.25 && uv.y <=0.5) // first layer of cake\n        fragColor = vec4 (254.0/255.0,251.0/255.0,234.0/255.,1.0);\n    if (uv.x >=0.77 && uv.x <= 1.080 && uv.y >=0.45 && uv.y <=0.68) //second layer of cake\n        fragColor = vec4 (254.0/255.0,251.0/255.0,234.0/255.,1.0);\n    if (uv.x >=0.80 && uv.x <= 0.820 && uv.y >=0.682 && uv.y <=0.80) //first candle\n       fragColor = vec4 (1.0/255.0,191.0/255.0,255.0/255.,1.0);\n    if (uv.x >=0.90 && uv.x <= 0.920 && uv.y >=0.682 && uv.y <=0.80) //second candle\n       fragColor = vec4 (0.0/255.0,191.0/255.0,255.0/255.,1.0);\n    if (uv.x >=1.01 && uv.x <= 1.03 && uv.y >=0.682 && uv.y <=0.80) //third candle\n       fragColor = vec4 (0.0/255.0,191.0/255.0,255.0/255.,1.0);\n        \n        \n   circle(uv2,fragColor,fragCoord,center8,radius,blue2);\n   circle(uv2,fragColor,fragCoord,center9,radius,blue2);\n   \n   circle(uv2,fragColor,fragCoord,center2,radius,black);\n   circle(uv2,fragColor,fragCoord,center3,radius,black);\n   \n   circle(uv2,fragColor,fragCoord,center4,radius2,white);\n   circle(uv2,fragColor,fragCoord,center5,radius2,white);\n   \n   circle(uv2,fragColor,fragCoord,center6,radius3,white);\n   circle(uv2,fragColor,fragCoord,center7,radius3,white);\n   \n\n\n\n   circle(uv2,fragColor,fragCoord,center_1a,radius4,vec3(148.0/255.0,0.0/255.0,211.0/255.));\n   circle(uv2,fragColor,fragCoord,center_1b,radius4,vec3(75.0/255.0,0.0/255.0,130.0/255.));\n   circle(uv2,fragColor,fragCoord,center_1c,radius4,vec3(0.0/255.0,0.0/255.0,125.0/255.));\n   circle(uv2,fragColor,fragCoord,center_1d,radius4,vec3(0.0/255.0,255./255.0,211.0/255.));\n   circle(uv2,fragColor,fragCoord,center_1e,radius4,vec3(255.0/255.0,255.0/255.0,.0/255.));\n   circle(uv2,fragColor,fragCoord,center_1f,radius4,vec3(255.0/255.0,127.0/255.0,0.0/255.));\n   circle(uv2,fragColor,fragCoord,center_1g,radius4,vec3(255.0/255.0,0.0/255.0,0.0/255.));\n   circle(uv2,fragColor,fragCoord,center_1h,radius4,vec3(255.0/255.0,20.0/255.0,147.0/255.));\n   circle(uv2,fragColor,fragCoord,center_1i,radius4,vec3(0.0/255.0,0.0/255.0,255.0/255.));\n   circle(uv2,fragColor,fragCoord,center_1j,radius4,vec3(123.0/255.0,104.0/255.0,238.0/255.));\n   \n   \n   \n   \n   circle(uv2,fragColor,fragCoord,center_2a,radius4,vec3(123.0/255.0,104.0/255.0,238.0/255.));\n   circle(uv2,fragColor,fragCoord,center_2b,radius4,vec3(0.0/255.0,0.0/255.0,255.0/255.));\n   circle(uv2,fragColor,fragCoord,center_2c,radius4,vec3(255.0/255.0,20.0/255.0,147.0/255.));\n   circle(uv2,fragColor,fragCoord,center_2d,radius4,vec3(255.0/255.0,127.0/255.0,0.0/255.));\n   circle(uv2,fragColor,fragCoord,center_2e,radius4,vec3(255.0/255.0,255.0/255.0,.0/255.));\n   circle(uv2,fragColor,fragCoord,center_2f,radius4,vec3(0.0/255.0,255./255.0,211.0/255.));\n   circle(uv2,fragColor,fragCoord,center_2g,radius4,vec3(0.0/255.0,0.0/255.0,125.0/255.));\n   circle(uv2,fragColor,fragCoord,center_2h,radius4,vec3(75.0/255.0,0.0/255.0,130.0/255.));\n   circle(uv2,fragColor,fragCoord,center_2i,radius4,vec3(148.0/255.0,0.0/255.0,211.0/255.));\n \n  \n   vec3 color =vec3(mix(orange2, orange, fragCoord.y/450.));\n\n   elips(fragColor,black,fragCoord,location1,radius_a,radius_b,radian(110.),black);\n   elips(fragColor,cream,fragCoord,location2,radius_a,radius_b,radian(110.),cream);\n   elips(fragColor,color,fragCoord,location3,radius_c,radius_d,radian(0.),color);\n   elips(fragColor,color,fragCoord,location4,radius_c,radius_d,radian(0.),color);\n   elips(fragColor,color,fragCoord,location5,radius_c,radius_d,radian(0.),color);\n   \n   elips(fragColor,black,fragCoord,location6,radius_e,radius_f,radian(45.),black);\n   elips(fragColor,black,fragCoord,location7,radius_e,radius_f,radian(45.),black);\n   elips(fragColor,black,fragCoord,location8,radius_e,radius_f,radian(145.),black);\n   elips(fragColor,black,fragCoord,location9,radius_e,radius_f,radian(145.),black);\n\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}