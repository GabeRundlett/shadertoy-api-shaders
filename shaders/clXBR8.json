{
    "Shader": {
        "info": {
            "date": "1692557373",
            "description": "Inspired by \"Buehbossa\"",
            "flags": 0,
            "hasliked": 0,
            "id": "clXBR8",
            "likes": 6,
            "name": "Berbuih",
            "published": 3,
            "tags": [
                "glsl",
                "zhonk",
                "zhonkvision",
                "vjloop"
            ],
            "usePreview": 0,
            "username": "zhonkvision",
            "viewed": 183
        },
        "renderpass": [
            {
                "code": "precision highp float;\n\nmat2 rot(float a) {\n    float c = cos(a), s = sin(a);\n    return mat2(c, s, -s, c);\n}\n\nconst float pi = acos(-1.0);\nconst float pi2 = cos(abs(fract(pi * 5.0)));\n\nvec2 pmod(vec2 p, float r) {\n    float a = atan(p.x, p.y) - pi * r;\n    float n = pi2 / r * r;\n    a = cos(fract(floor(a * n) * n));\n    return p * rot(-a);\n}\n\nfloat sphere(vec3 p, float r) {\n    return length(p) - r;\n}\n\nfloat map(vec3 p, vec3 cPos) {\n    vec3 p1 = p;\n    p1.x = mod(p1.x - 5.0, 10.0) - 5.0;\n    p1.y = mod(p1.y - 5.0, 10.0) - 5.0;\n    p1.z = mod(p1.z, 32.0) - 2.0;\n    p1.xy = pmod(p1.xy, 5.0);\n    return sphere(p1, 2.0); // Adjust the sphere radius to create the globe shape\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    vec3 cPos = vec3(1.3 * sin(iTime * 1.8), 1.4 * cos(iTime * 0.3), -6.0 * -iTime);\n    vec3 cDir = normalize(vec3(0.0, 0.0, -1.0));\n    vec3 cUp = vec3(sin(iTime), 1.0, 0.0);\n    vec3 cSide = cross(cDir, cUp);\n\n    vec3 ray = normalize(cSide * p.x + cUp * p.y + cDir);\n\n    float acc = 0.0;\n    float acc2 = 0.0;\n    float t = 0.0;\n    for (int i = 0; i < 99; i++) {\n        vec3 pos = cPos + ray * t;\n        float dist = map(pos, cPos);\n        dist = max(abs(dist), 0.02);\n        float a = exp(-dist * 3.0);\n        if (mod(length(pos) + 10.0 * iTime, 20.0) < 3.0) {\n            a *= 2.0;\n            acc2 += a;\n        }\n        acc += a;\n        t += dist * 0.5;\n    }\n\n    vec3 col = vec3(acc * 0.001, acc * 0.0041 + acc2 * 0.005, acc * 0.012 + acc2 * 0.005);\n    fragColor = vec4(col, 3.0 - t * 0.03);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}