{
    "Shader": {
        "info": {
            "date": "1642322733",
            "description": "based on\nhttps://www.youtube.com/watch?v=E0dsqlajCM4",
            "flags": 0,
            "hasliked": 0,
            "id": "sdsczS",
            "likes": 2,
            "name": "easy motion blur test",
            "published": 3,
            "tags": [
                "motionblur"
            ],
            "usePreview": 0,
            "username": "takahiroando",
            "viewed": 231
        },
        "renderpass": [
            {
                "code": "float sphere(vec3 p) {\n    return length(p) - 2.0;\n}\n\n\nfloat map(vec3 p) {\n    vec3 c = vec3(10.0);\n    return sphere(mod(p + 0.5*c, c) - 0.5 * c);\n}\n\nvec4 raymarch(vec3 ro, vec3 rd) {\n    float hit = 0.0;\n    for (int i = 0; i < 100; ++i) {\n        float d = map(ro);\n        ro += d * rd;\n        if (abs(d) < 0.0001) {\n            hit = 1.0;\n            break;\n        }\n    }\n    return vec4(ro, hit);\n}\n\nfloat hash(vec2 uv) {\n    return fract(sin(dot(uv, vec2(123.45, 678.90))) * 987654.321);\n    }\n   \nvec3 normal(vec3 p) {\n    mat3 m = mat3(p, p, p) - mat3(0.01);\n    return normalize(map(p) - vec3(map(m[0]), map(m[1]), map(m[2])));\n    }\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0 * fragCoord -  iResolution.xy) / min(iResolution.x, iResolution.y);\n    // time += 0.01 * random()\n    float blur = uv.x > 0.0 ? 0.01 : 0.0;\n    float t = iTime + blur * hash(uv + iTime);\n    vec3 ro = vec3(5.0, 0.0, -10.0 * t);\n    vec3 rd = normalize(vec3(uv, -1.0));\n\n    vec4 hit = raymarch(ro, rd);\n    \n    vec3 light = normalize(vec3(1.0, 1.0, 1.0));\n    float col = hit.w > 0.0 ? max(dot(normal(hit.xyz), light), 0.0) : 0.0;\n    //col = hash(uv);\n\n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}