{
    "Shader": {
        "info": {
            "date": "1576407160",
            "description": "( more like a L1 Laplacian ).  better seen in fullscreen. try other textures in bufA.\nbottom: raw fwidth shows the 2x2 blocks\ntop: correction using the correct 3x3 cross neighborhood. Trick: store fwidth( f(u) ) and fwidth( f(u+1) )\n",
            "flags": 32,
            "hasliked": 0,
            "id": "3lt3DN",
            "likes": 8,
            "name": "rebalanced hardware derivatives",
            "published": 3,
            "tags": [
                "derivatives"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 543
        },
        "renderpass": [
            {
                "code": "// --- reconstruction of balanced derivatives \n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 U = u/R, \n         f = mod( u-.5,2.);               // position within 2x2 neighborhood\n\n    float v =  texture(iChannel0,U).y;    // y = D(u) , w = D(u+1): checkered 2x2 neighborhood\n    if (U.y>.5 )                          // top: reconstruct the 3x3 cross footprint\n        v = ( v + texture(iChannel0, (u-(1.-f))/R).w ) / 2.;\n\n    if ( u.x > R.x*.75 ) {                // right: show derivative 0 of sin(length)\n        v = v/w/sqrt(2.);\n     // v = step(v,w/2.);\n     // v = smoothstep(w,0.,v);\n    }\n    else if ( u.x > R.x/2.) \n        v = smoothstep(.008,0.,abs(v));   // far right: show derivative of abs(sin(length))\n    \n    O = vec4( pow( v, 1./2.2) );          // to sRGB\n    \n    U = u-.5 - floor(R/2.);\n    if ( U.x*U.y * (U.x-floor(R.x/4.)) == 0. ) O=vec4(1,0,0,1);   // separators\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// --- source image\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n\n    if ( U.x < R.x/2. )                         // texture in flat RGB\n        O = texture(iChannel0,fract(U*2./R)/2.*R/iChannelResolution[0].xy), \n        O*=O;\n    else {\n        float v = sin(w*length(U-R/2.));        // abs( sin ( length ) )\n        v = abs(v);\n        //v = step(v,w/2.);\n        //v = smoothstep(w,0.,v);\n        O = vec4(v);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// --- to get all hardware derivatives without the 2x2 limitation, evaluate checkered versions\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    float a = texture(iChannel0, U    /R).r,\n          b = texture(iChannel0,(U+1.)/R).r;\n    O.x = a;\n    O.y = fwidth(a);\n    O.z = b;\n    O.w = fwidth(b);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R ( iResolution.xy )\n float w = 3.1416/40.;",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}