{
    "Shader": {
        "info": {
            "date": "1717318704",
            "description": "Graphic Design Experiment 14",
            "flags": 0,
            "hasliked": 0,
            "id": "MXV3R1",
            "likes": 15,
            "name": "Graphic Design Experiment 14",
            "published": 3,
            "tags": [
                "graphicdesign",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 350
        },
        "renderpass": [
            {
                "code": "#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.5),-antialiasing(1.5),d - b)\n#define B(p,s) max(abs(p).x-s.x,abs(p).y-s.y)\n#define deg45 .707\n#define R45(p) (( p + vec2(p.y,-p.x) ) *deg45)\n#define Tri(p,s) max(R45(p).x,max(R45(p).y,B(p,s)))\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n#define SkewX(a) mat2(1.0,tan(a),0.0,1.0)\n#define BASE_FONT_SIZE 0.0714\n\nfloat stripe(vec2 p, float s, float space){\n    vec2 prevP = p;\n    p*=Rot(radians(-45.));\n    p.x-=iTime*0.05;\n    p.x = mod(p.x,space)-(space*0.5);\n    float d = B(p,vec2(s,10.));\n    return d;\n}\n\nint c0[20] = int[](2,1,1,3,1,0,1,0,1,0,1,0,1,0,1,0,5,1,3,0);\nint c1[20] = int[](0,1,3,0,0,1,0,0,0,1,0,0,0,1,0,0,0,3,0,0);\nint c2[20] = int[](2,1,1,3,0,0,1,0,2,1,3,0,1,0,0,0,5,1,4,0);\nint c3[20] = int[](2,1,1,3,0,0,1,0,2,1,1,0,0,0,1,0,2,1,3,0);\nint c4[20] = int[](4,0,1,3,1,0,1,0,5,1,1,0,0,0,1,0,0,0,3,0);\nint c5[20] = int[](2,1,1,3,1,0,0,0,5,1,4,0,0,0,1,0,2,1,3,0);\nint c6[20] = int[](2,1,1,3,1,0,0,0,1,1,4,0,1,0,1,0,5,1,3,0);\nint c7[20] = int[](2,1,1,3,0,0,1,0,0,0,1,0,0,0,1,0,0,0,3,0);\nint c8[20] = int[](2,1,1,3,1,0,1,0,1,1,1,0,1,0,1,0,5,1,3,0);\nint c9[20] = int[](2,1,1,3,1,0,1,0,1,1,1,0,0,0,1,0,2,1,3,0);\n\nfloat baseFontShape(vec2 p){\n    float size = BASE_FONT_SIZE-0.001;\n    float d = B(p,vec2(size));\n    return d;\n}\n\nfloat baseFontShape2(vec2 p, float deg){\n    float size = BASE_FONT_SIZE-0.001;\n    float d = B(p,vec2(size));\n    float a = radians(deg);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    return d;\n}\n\nfloat chars(vec2 p, int[20] data){\n    vec2 prevP  = p;\n    float size = BASE_FONT_SIZE;\n    float d = 10.;\n    for(int i = 0; i<data.length(); i++){\n        p = prevP;\n        p.x-=(float(i%4)*(size*2.))-(size*2.);\n        p.y+=(float(i/4)*(size*2.))-(size*4.);\n        \n        if(data[i] == 1){\n            float d2 = baseFontShape(p);\n            d = min(d,d2);\n        } else if(data[i] == 2){\n            float d2 = baseFontShape2(p,-225.);\n            d = min(d,d2);\n        } else if(data[i] == 3){\n            float d2 = baseFontShape2(p,-45.);\n            d = min(d,d2);\n        } else if(data[i] == 4){\n            float d2 = baseFontShape2(p,45.);\n            d = min(d,d2);\n        } else if(data[i] == 5){\n            float d2 = baseFontShape2(p,-135.);\n            d = min(d,d2);\n        } else if(data[i] == 0){\n            float d2 = max(B(p,vec2(size)),stripe(p,0.001,0.02));\n            d = min(d,d2);\n        }\n    }\n    return d;\n}\n\nfloat drawFont(vec2 p, int char){\n    float d = 10.;\n    if(char == 0) {\n        d = chars(p,c0);\n    } else if(char == 1) {\n        d = chars(p,c1);\n    } else if(char == 2) {\n        d = chars(p,c2);\n    } else if(char == 3) {\n        d = chars(p,c3);\n    } else if(char == 4) {\n        d = chars(p,c4);\n    } else if(char == 5) {\n        d = chars(p,c5);\n    } else if(char == 6) {\n        d = chars(p,c6);\n    } else if(char == 7) {\n        d = chars(p,c7);\n    } else if(char == 8) {\n        d = chars(p,c8);\n    } else if(char == 9) {\n        d = chars(p,c9);\n    }\n    \n    return d;\n}\n\nfloat random (vec2 p) {\n    return fract(sin(dot(p.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nfloat arrowItem0(vec2 p){\n    vec2 prevP = p;\n    \n    p.y-=iTime*0.05;\n    p.x*=4.;\n    p.y*=0.7;\n    \n    p.y = mod(p.y,0.04)-0.02;\n    p.y-=0.02;\n    float d = Tri(p,vec2(0.025));\n    p = prevP;\n    d = max(p.y-0.03,d);\n    return d;\n}\n\nfloat arrowItem1(vec2 p){\n    vec2 prevP = p;\n    \n    p.y-=iTime*0.02;\n    p.x*=4.;\n    \n    p.y = mod(p.y,0.04)-0.02;\n    p.y-=0.02;\n    p.y+=0.006;\n    float d = Tri(p,vec2(0.025));\n    p = prevP;\n    d = max(p.y,d);\n    return d;\n}\n\nfloat shape0(vec2 p){\n    vec2 prevP = p;\n    p.x*=3.5;\n    p.y*=0.9;\n    p.y= abs(p.y)-0.09;\n    float d = Tri(p,vec2(0.1));\n    \n    p = prevP;\n    p.x*=3.5;\n    p.y*=0.9;\n    p.y= abs(p.y)-0.07;\n    float d2 = Tri(p,vec2(0.08));\n    d = max(-d2,d);\n    \n    p = prevP;\n    p.y= abs(p.y)-0.05;\n    d2 = arrowItem0(p);\n    p = prevP;\n    d2 = max(-B(p,vec2(0.01)),d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = length(p)-0.005;\n    d = min(d,d2);\n    \n    p.x= abs(p.x)-0.03;\n    d2 = arrowItem1(p);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat shape1_1(vec2 p){\n    vec2 prevP = p;\n    float d = B(p,vec2(0.02,0.1));\n    float a = radians(-10.);\n    p.x-=0.001;\n    d = max(-dot(p,vec2(cos(a),sin(a))),d);\n    p = prevP;\n    a = radians(30.);\n    p.y+=0.05;\n    d = max(-dot(p,vec2(cos(a),sin(a))),d);\n    return d;\n}\n\nfloat shape1_2(vec2 p){\n    vec2 prevP = p;\n    \n    p.x = abs(p.x)-0.012;\n    p.x*=-1.;\n    p.y = abs(p.y)-0.1;\n    float d = shape1_1(p);\n    p = prevP;\n    d = min(length(p)-0.01,d);\n    return d;\n}\n\nfloat shape1(vec2 p){\n    vec2 prevP = p;\n    p.y+=0.04;\n    p*=-1.;\n    float d = shape1_1(p);\n    p = prevP;\n    p.x-=0.065;\n    p.y-=0.02;\n    p*=Rot(radians(60.));\n    float d2 = shape1_1(p);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x+=0.02;\n    p.y-=0.05;\n    p*=Rot(radians(-60.));\n    d2 = shape1_1(p);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat shape2(vec2 p){\n    vec2 prevP = p;\n    p.x = abs(p.x)-0.25;\n    p*=Rot(radians(-30.*iTime));\n    float d = min(B(p,vec2(0.002,0.03)),B(p,vec2(0.03,0.002)));\n    return d;\n}\n\nfloat baseShape(vec2 p){\n    p*=Rot(radians(90.));\n    p = DF(p,1.5);\n    p-=0.07;\n    p*=Rot(radians(45.));\n    float d = shape0(p);\n    return d;\n}\n\nfloat drawGlitchStripe(vec2 p){\n    vec2 prevP = p;\n    float d = stripe(p,0.012,0.05);\n    d = max(abs(p.y)-0.023,d);\n    d = max(p.y,d);\n    p.x+=0.085;\n    float d2 = stripe(p,0.012,0.05);\n    d2 = max(abs(p.y)-0.023,d2);\n    d2 = max(-p.y,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    d = max(abs(p.x)-0.165,d);\n    \n    p = prevP;\n    p.x-=0.14;\n    d2 = B(p,vec2(0.07,0.03));\n    float a = radians(45.);\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);\n    \n    a = radians(45.);\n    p.x-=0.05;\n    d2 = max(dot(p,vec2(cos(a),sin(a))),d2);\n    \n    d = min(d,d2);\n    \n    p = prevP;\n    p.x+=0.14;\n    d2 = B(p,vec2(0.07,0.03));\n    a = radians(45.);\n    d2 = max(dot(p,vec2(cos(a),sin(a))),d2);\n    \n    a = radians(45.);\n    p.x+=0.05;\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);\n    \n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat ring(vec2 p, float speed){\n    vec2 prevP = p;\n    float size = 0.03;\n    float d = abs(length(p)-size)-0.001;\n    p*=Rot(radians(sin(iTime*speed)*240.));\n    float d2 = abs(length(p)-size)-0.003;\n    d2 = max(abs(p.y)-size*0.5,d2);\n    d = min(d,d2);\n    return d;\n}\n\nfloat slider(vec2 p){\n    vec2 prevP = p;\n    float d = B(p,vec2(0.002,0.06));\n    p.y+=sin(iTime*1.5)*0.05;\n    float d2 = B(p,vec2(0.0035,0.015));\n    d = min(d,d2);\n    return d;\n}\n\nfloat arrows(vec2 p){\n    vec2 prevP = p;\n    p.y-=iTime*0.05;\n    p.y = mod(p.y,0.03)-0.015;\n    p.y-=0.015;\n    p.x*=2.;\n    float d = Tri(p,vec2(0.015));\n    p = prevP;\n    d = max(abs(p.y)-0.03,d);\n    return d;\n}\n\nfloat mainGraphic(vec2 p){\n    vec2 prevP = p;\n    float d = baseShape(p);\n    p.y=abs(p.y)-0.2;\n    \n    float d2 = baseShape(p);\n    d = min(d,d2);\n    p.y=abs(p.y)-0.2;\n    d2 = baseShape(p);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.17;\n    p.y = abs(p.y)-0.1;\n    d2 = baseShape(p);\n    d = min(d,d2);\n    p.y = abs(p.y)-0.2;\n    d2 = baseShape(p);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.34;\n    d2 = baseShape(p);\n    d = min(d,d2);\n    p.y = abs(p.y)-0.2;\n    d2 = baseShape(p);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.47;\n    p.y = abs(p.y)-0.43;\n    p*=Rot(radians(-30.+iTime*20.));\n    p*=1.3;\n    d2 = shape1(p);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.57;\n    d2 = shape1_2(p);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.8;\n    p.y = abs(p.y)-0.58;\n    p*=1.3;\n    d2 = shape2(p);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.38;\n    p.y = abs(p.y)-0.57;\n    p*=Rot(radians(-8.));\n    p.x*=-1.;\n    p.y*=1.5;\n    d2 = drawGlitchStripe(p);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.27;\n    p.y = abs(p.y)-0.46;\n    d2 = ring(p,1.5);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.57;\n    p.y = abs(p.y)-0.26;\n    d2 = ring(p,-1.2);\n    d = min(d,d2);    \n        \n    p = prevP;\n    p.x = abs(p.x)-0.62;\n    p.y = abs(p.y)-0.42;\n    d2 = slider(p);\n    d = min(d,d2);    \n    \n    p = prevP;\n    p.x = abs(p.x)-0.08;\n    p.y = abs(p.y)-0.54;\n    p*=Rot(radians(-145.));\n    d2 = arrows(p);\n    d = min(d,d2);    \n    \n    return d;\n}\n\nfloat numbers(vec2 p, float dir){\n    vec2 prevP = p;\n    p*=SkewX(radians(-25.));\n    p*=1.7;\n    p.x+=iTime*0.1*dir;\n    p.y+=1.;\n    p*=1.5;\n    p.x*=1.4;\n    vec2 id = floor(p);\n    vec2 gr = fract(p)-0.5;\n    \n    float n = random(id)*10.;\n    int num = int(mod(n+0.5*iTime*float(n),10.0));\n    gr.x*=0.75;\n    gr.x+=0.075;\n    float d = drawFont(gr,num);\n    \n    p = prevP;\n    d = max(abs(p.y)-0.25,d);\n    \n    p*=SkewX(radians(-25.));\n    p*=1.7;\n    p.x+=iTime*0.1*dir;\n    p.y+=1.;\n    p*=1.5;\n    p.x*=1.4;\n    gr = fract(p)-0.5;\n    gr.x =abs(gr.x)-0.5;\n    gr.y =abs(gr.y)-0.41;\n    float d2 = B(gr,vec2(0.1,0.01));\n    p = prevP;\n    d2 = max(abs(p.y)-0.16,d2);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat bg(vec2 p){\n    vec2 prevP = p;\n    p.y-=iTime*0.1;\n    p*=5.;\n    vec2 id = floor(p);\n    vec2 gr = fract(p)-0.5;\n    vec2 prevGr = gr;\n    float n = random(id);\n    float dir = (n<0.5)?-1.:1.;\n    gr*=Rot(radians(45.)*dir);\n    gr.y = abs(gr.y)-0.355;\n    float d = B(gr,vec2(0.3,0.25));\n    float d2 = B(gr,vec2(0.6,0.07));\n    float thick = 0.005;\n    d = min(abs(d)-thick,abs(d2)-thick);\n    return d;\n}\n\nfloat drawNumbers(vec2 p){\n    vec2 prevP = p;\n    p*=Rot(radians(-90.));\n    float d = numbers(p-vec2(0.0,0.8),1.0);\n    p = prevP;\n    p*=Rot(radians(90.));\n    float d2 = numbers(p-vec2(0.,0.8),1.0);\n    d = min(d,d2);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    \n    p*=1.25;\n    vec2 prevP = p;\n\n    vec3 col = vec3(0.0);\n    float d = bg(p);\n    col = mix(col,vec3(0.5),S(d,0.0));\n    d = drawNumbers(p);\n    col = mix(col,vec3(1.),S(d,0.0));\n    d = mainGraphic(p);\n    col = mix(col,vec3(1.),S(d,0.0));\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}