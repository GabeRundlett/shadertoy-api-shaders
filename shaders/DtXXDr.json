{
    "Shader": {
        "info": {
            "date": "1674669881",
            "description": "it just works",
            "flags": 0,
            "hasliked": 0,
            "id": "DtXXDr",
            "likes": 1,
            "name": "round pixelate filter",
            "published": 3,
            "tags": [
                "2d",
                "pixelart"
            ],
            "usePreview": 1,
            "username": "ArmandB",
            "viewed": 212
        },
        "renderpass": [
            {
                "code": "float pixelation = 7.0;\n\nvec2 pixelate(vec2 a, float k){\n    float p = pow(2.0,k);\n    return floor(a*p)/p;\n}\n\nvec4 pixelate(vec4 a, float k){\n    float p = pow(2.0,k);\n    return floor(a*p)/p;\n}\n\nvec4 getcol(vec2 p, vec2 o){\n    return pixelate(textureLod(iChannel0,p + o/pow(2.0,pixelation) + iTime*0.005,0.0),3.0);\n}\n\nvec4 mincol(vec4 a, vec4 b){\n    float A = (0.299*a.r + 0.587*a.g + 0.114*a.b);\n    float B = (0.299*b.r + 0.587*b.g + 0.114*b.b);\n    return A < B ? a : (B < A ? b : (a.r+a.g+a.b > b.r+b.g+b.b ? a : b));\n}\n\nvec4 mincol4(vec4 a, vec4 b, vec4 c, vec4 d){\n    return mincol(mincol(a,b),mincol(c,d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y/2.0;\n    vec2 uvpx = pixelate(uv,pixelation);\n    float pxunit = 1.0/pow(2.0,pixelation);\n\n    vec4 c = getcol(uvpx,vec2(0,0));\n    vec4 c0 = getcol(uvpx,vec2(1,0));\n    vec4 c1 = getcol(uvpx,vec2(1,1));\n    vec4 c2 = getcol(uvpx,vec2(0,1));\n    vec4 c3 = getcol(uvpx,vec2(-1,1));\n    vec4 c4 = getcol(uvpx,vec2(-1,0));\n    vec4 c5 = getcol(uvpx,vec2(-1,-1));\n    vec4 c6 = getcol(uvpx,vec2(0,-1));\n    vec4 c7 = getcol(uvpx,vec2(1,-1));\n    bool u = c2 == c;\n    bool d = c6 == c;\n    bool l = c4 == c;\n    bool r = c0 == c;\n    \n    vec2 relcoord = uv - uvpx - pxunit/2.0;\n    float dist = length(relcoord);\n        \n    if (!(u || l) && relcoord.y > 0.0 && relcoord.x < 0.0 && dist > pxunit/2.0){\n        c = c2 == c4 ? c2 : (c == c3 ? c : mincol4(c,c2,c3,c4));\n    } else if (!(u || r) && relcoord.y > 0.0 && relcoord.x > 0.0 && dist > pxunit/2.0){\n        c = c == c1 ? c : (c2 == c0 ? c2 : mincol4(c,c0,c1,c2));\n    } else if (!(d || l) && relcoord.y < 0.0 && relcoord.x < 0.0 && dist > pxunit/2.0){\n        c = c == c5 ? c : (c6 == c4 ? c6 : mincol4(c,c4,c5,c6));\n    } else if (!(d || r) && relcoord.y < 0.0 && relcoord.x > 0.0 && dist > pxunit/2.0){\n        c = c6 == c0 ? c6 : (c == c7 ? c : mincol4(c,c0,c6,c7));\n    }\n    \n    fragColor = c;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}