{
    "Shader": {
        "info": {
            "date": "1586957591",
            "description": "Just add a powerful blue in z of color\n+trying to do fractal noise with iq method",
            "flags": 0,
            "hasliked": 0,
            "id": "wsSczV",
            "likes": 0,
            "name": "Noise + blue color = jean look",
            "published": 3,
            "tags": [
                "noise",
                "blue",
                "jean"
            ],
            "usePreview": 0,
            "username": "Leria",
            "viewed": 287
        },
        "renderpass": [
            {
                "code": "//Disclaimer : I use some parts of codes from @iq\n\nvec2 hash(vec2 p)  { return ( 2.* fract(sin( (p) * 78.233 ) * 43758.5453) -1. );}\n\n//quintique\nvec2 fade5(vec2 f) {return f * f * f * (f * (f * 6.0 - 15.0) + 10.0);}\n\n//cubique\nvec2 fade3(vec2 f) {return f*f*(3.0-2.0*f);}\n\nfloat noise(vec2 p)\n{\n \tvec2 i = floor( p );\n    vec2 f = fract( p );\n    \n    vec2 u = fade5(f);\n    \n    return mix( mix( dot( hash( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \n                     dot( hash( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( hash( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \n                     dot( hash( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n        \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = vec2(fragCoord.x/3., fragCoord.y/2.);\n    \n\tfloat n = noise(fragCoord);\n    \n    vec2 uv = p*vec2(iResolution.x/iResolution.y,1.0);\n    \n    mat2 m = mat2( 0.6,  0.2, -0.2,  0.8 );\n    \n\tn  = 0.5000*noise( uv ); uv = m*uv;\n\tn += 0.2500*noise( uv ); uv = m*uv;\n\tn += 0.1250*noise( uv ); uv = m*uv;\n\tn += 0.0625*noise( uv ); uv = m*uv;\n\n\tn *= 0.5 + 0.5*n;\n\t\n    n *= smoothstep( 0.0, 0.005, abs(p.x-0.6) );\t\n\t    \n    fragColor = vec4(0.4*n, 0.5*n, n, 1.);\n   \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}