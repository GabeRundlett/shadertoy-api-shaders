{
    "Shader": {
        "info": {
            "date": "1718049956",
            "description": "Shader generated by GPT 4o.\n\nprompt: Interactive Particles",
            "flags": 0,
            "hasliked": 0,
            "id": "4XG3zd",
            "likes": 1,
            "name": "Colors and Light",
            "published": 3,
            "tags": [
                "gpt"
            ],
            "usePreview": 0,
            "username": "sferrando",
            "viewed": 87
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 iResolution = vec2(640.0, 360.0);\n    vec2 iMouse = iMouse.xy / iResolution;\n\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = uv * 2.0 - 1.0;\n    p.x *= iResolution.x/iResolution.y;\n\n    float t = iTime * 0.5;\n    \n    vec3 color = vec3(0.0);\n    for (int i = 0; i < 100; i++)\n    {\n        float fi = float(i);\n        vec2 pos = vec2(sin(fi + t * 0.1) * 0.3, cos(fi + t * 0.1) * 0.3);\n        float d = length(p - pos);\n        float size = 0.03 / d;\n        color += vec3(size * sin(d * 20.0 + t), size * cos(d * 20.0 + t), size * sin(d * 10.0 + t));\n    }\n\n    for(int i = 0; i < 10; i++)\n    {\n        float fi = float(i);\n        vec2 pos = vec2(sin(fi) * 0.9, cos(fi) * 0.9);\n        pos += iMouse * 2.0 - 1.0;\n        float d = length(p - pos);\n        float size = 0.1 / d;\n        color += vec3( size, size, size );\n    }\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}