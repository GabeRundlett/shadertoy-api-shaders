{
    "Shader": {
        "info": {
            "date": "1590202696",
            "description": "Eazy peazy. spam",
            "flags": 0,
            "hasliked": 0,
            "id": "td2BWm",
            "likes": 2,
            "name": "Menger squares - sorry bout that",
            "published": 3,
            "tags": [
                "fractal",
                "menger",
                "sponge"
            ],
            "usePreview": 0,
            "username": "alvarobyrne",
            "viewed": 336
        },
        "renderpass": [
            {
                "code": "// Fork of \"Menger squares\" by kindpotato. https://shadertoy.com/view/ttsGW8\n// 2020-05-23 02:56:09\n\n#define third 0.3333\n\nbool coloured(vec2 uv){\n    \n    return uv.x < third || uv.x > 2.*third || uv.y < third || uv.y > 2.*third;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.x;\n    float zoom = mod(-30.*iTime,109.);\n    uv*= pow(0.99,zoom);\n    fragColor = vec4(1);\n    float its = log(iResolution.y)/log(3.+0.5*sin(iTime));\n\n    for(float i = 0.; i < its; i+=1.){\n        if (coloured(uv)){\n            uv = fract((3.+0.1*tan(iTime/181.))*uv);\n        }\n        else{\n        \tfragColor = vec4(0,0,0,1);\n            return;\n        }\n    } \n\n   \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}