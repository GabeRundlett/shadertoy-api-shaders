{
    "Shader": {
        "info": {
            "date": "1609843904",
            "description": "Trying mandelbox formula\nEdit, yes the fomula is broken, but I like the effect it generate",
            "flags": 0,
            "hasliked": 0,
            "id": "3ldyDB",
            "likes": 4,
            "name": "大龙猫 - Quicky#049",
            "published": 3,
            "tags": [
                "quicky"
            ],
            "usePreview": 0,
            "username": "totetmatt",
            "viewed": 314
        },
        "renderpass": [
            {
                "code": "#define S 2.\n#define PI 3.141592\n#define sqz iTime*123./60.*.5\nvoid mdb(inout vec2 uv){\n    uv.x = uv.x > 1. ? 2. -uv.x:uv.x;\n    uv.x = uv.x < -1. ? -2. -uv.x:uv.x;\n    uv.y = uv.y > 1. ? 2. -uv.y:uv.y;\n    uv.y = uv.y < -1. ? -2. -uv.y:uv.y;\n    \n    uv = length(uv) < .5 ? uv * 4.:uv;\n    uv = length(uv) < 1. ? uv /(length(uv)*length(uv)) : uv;\n    \n    uv = uv *S + vec2(cos(iTime+fract(sqz)),sin(iTime-fract(sqz)));\n}\nmat2 r(float a){\n    float c=cos(a),s=sin(a);\n    return mat2(c,s,-s,c);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord.xy -.5* iResolution.xy) /iResolution.y;\n    uv +=vec2(sin(sqz*.1)*.5+fract(sqz*.25),cos(sqz*.1)*.5);\n    uv *=2.;\n    \n    mdb(uv);\n    uv*=r(PI/4.);\n    mdb(uv);\n    \n    uv*=r(PI/4.);\n    mdb(uv);\n    \n    uv*=r(PI/4.+fract(sqz*.5));\n    \n    float d = length(uv)-1.1;\n    d = max(abs(uv.x)-.01,.0) - max(abs(uv.y),0.);\n    d = smoothstep(0.1,0.2,d);\n    vec3 col = vec3(d);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}