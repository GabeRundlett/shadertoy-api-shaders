{
    "Shader": {
        "info": {
            "date": "1428019002",
            "description": "simple shader",
            "flags": 0,
            "hasliked": 0,
            "id": "Xt2GRD",
            "likes": 10,
            "name": "ripple7",
            "published": 3,
            "tags": [
                "test",
                "ripple"
            ],
            "usePreview": 1,
            "username": "ap",
            "viewed": 1829
        },
        "renderpass": [
            {
                "code": "// Copyright (c) 2015, shadertoy user ap. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions\n// are met:\n//  * Redistributions of source code must retain the above copyright\n//    notice, this list of conditions and the following disclaimer.\n//  * Redistributions in binary form must reproduce the above copyright\n//    notice, this list of conditions and the following disclaimer in the\n//    documentation and/or other materials provided with the distribution.\n//  * Neither the name of ap nor the names of its\n//    contributors may be used to endorse or promote products derived\n//    from this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\n// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nfloat sinc(float r, float width)\n{\n    width *= 10.0;\n    \n    float scale = 1.0;\n    \n    float N = 1.1;\n    float numer = sin(r / width);\n    float denom = (r /width);\n    \n    if(abs(denom) <= 0.1 ) return scale;\n    else return scale * abs(numer / denom);\n}\n\nfloat expo(float r, float dev)\n{\n    return 1.0 * exp(- r*r / dev);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy);\n    float aspect = iResolution.x / iResolution.y;\n    uv.x *= aspect;\n\t//fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0); \n       \n    vec2 cdiff = abs(uv - 0.5 * vec2(aspect, 1.0));\n    \n    \n    float myradius = length(cdiff) * mix(1.0, texture( iChannel0, uv ).r, 0.02);//max(cdiff.x, cdiff.y);\n    \n    vec3 wave = texture( iChannel0, vec2(myradius, 0.25) ).rgb;\n    \n    float radius =1.5 * (iTime)/3.0; \n   \n    float r = sin((myradius - radius) * 5.0);\n     \n    r = r*r;\n    \n    vec3 dev = wave * vec3(1.0/500.0, 1.0/500.0, 1.0/500.0);\n      \n    fragColor = vec4(sinc(r, dev.x), sinc(r, dev.y), sinc(r, dev.z), 1.0);\n    \n    float siny = sin(fragCoord.y/1.5);\n    \n    fragColor =  fragColor * vec4(1.0 - 0.5*siny*siny);\n    \n    fragColor = mix(fragColor, \n        vec4(\n            texture(iChannel1, uv / 1000.0).xy * 0.3, \n            0.7 * sin(iTime) * sin(iTime), 0.0), 0.5);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "music",
                        "id": 13,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}