{
    "Shader": {
        "info": {
            "date": "1564723134",
            "description": "from Hable John Uncharted2 Hdr Lighting",
            "flags": 0,
            "hasliked": 0,
            "id": "3tBXzR",
            "likes": 2,
            "name": "Filmic Tonemap",
            "published": 3,
            "tags": [
                "tonemap"
            ],
            "usePreview": 0,
            "username": "scahp",
            "viewed": 855
        },
        "renderpass": [
            {
                "code": "float reinhardTonemap(float x)\n{\n    x = (x / (x + 1.0));\n    return x;\n}\n\nfloat filmicTonemap(float x)\n{\n    x = max(0.0, x - 0.004);\n    float gammaColor = (x * (6.2 * x + 0.5)) / (x * (6.2 * x + 1.7) + 0.06);\n    return pow(gammaColor, 2.2);\n    //return gammaColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float r = 255.0;\n    float g = 88.0;\n    float b = 21.0;\n\n    r /= 255.0;\n    g /= 255.0;\n    b /= 255.0;\n\n    float u = fragCoord.x/(iResolution.x);\n    float v = fragCoord.y/iResolution.y;\n\n    // adjust uv coords\n    if (u <= 0.5)\n    {\n        u *= 2.0;\n    }\n    else\n    {\n        u -= 0.5;\n        u *= 2.0;\n        \n        float exp = 13.0;\n        r *= u * exp;\n        g *= u * exp;\n        b *= u * exp;        \n    }\n    \n    const float step0 = 1.0 / 3.0;\n    const float step1 = 2.0 / 3.0;\n\n    r *= u;\n    g *= u;\n    b *= u;\n    \n    if (v < step0)\t\t\t// reinhard\n    {\n        r = reinhardTonemap(r);\n        g = reinhardTonemap(g);\n        b = reinhardTonemap(b);        \n    }\n    else if (v < step1)\t\t// linear\n    {\n\n    }\n    else\t\t\t\t\t// filmic\n    {\n        r = filmicTonemap(r);\n        g = filmicTonemap(g);\n        b = filmicTonemap(b);        \n    }\n\n    //bool badGamma = false;\n    //if (badGamma)\n    //{\n    //    r = pow(r, 2.2);\n    //    g = pow(g, 2.2);\n    //    b = pow(b, 2.2);\n    //}\n    \n    fragColor = vec4(r, g, b, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}