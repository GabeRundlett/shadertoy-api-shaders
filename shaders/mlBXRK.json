{
    "Shader": {
        "info": {
            "date": "1676317529",
            "description": "Forked from newl shader from Yonatan :\nhttps://twitter.com/zozuar/status/1625182758745128981",
            "flags": 0,
            "hasliked": 0,
            "id": "mlBXRK",
            "likes": 64,
            "name": "Wet neural network",
            "published": 3,
            "tags": [
                "neuron"
            ],
            "usePreview": 0,
            "username": "guil",
            "viewed": 1356
        },
        "renderpass": [
            {
                "code": "mat2 rotate2D(float r) {\n    return mat2(cos(r), sin(r), -sin(r), cos(r));\n}\n\n\n\n// based on the follow tweet:\n// https://twitter.com/zozuar/status/1625182758745128981\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    float t = iTime;\n    \n    vec2 n = vec2(0),q;\n    vec2 N = vec2(0);\n    vec2 p = uv + t/10.;\n    float S = 10.;\n    mat2 m = rotate2D(1.);\n\n    for(float j=0.;j++<30.;){\n      p*=m;\n      n*=m;\n      q=p*S+j+n+t;\n      n+=sin(q);\n      N+=cos(q)/S;\n      S*=1.2;\n    }\n    col = vec3(1, 2, 4) * ((N.x + N.y + .15)+.005/length(N));\n    \n    //col=pow(max(vec3(0),(N.x+N.y+.5)*.1*vec3(6,1,2)+.003/length(N)),vec3(.45));\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}