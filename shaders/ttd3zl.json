{
    "Shader": {
        "info": {
            "date": "1577314333",
            "description": "MDTMJVM = Middecembertomidjanuaryvember\nCheck out the other days at https://github.com/wrightwriter/Middecembertomidjanuaryvember\n\nCoding daily at http://twitch.tv/wwrighter",
            "flags": 64,
            "hasliked": 0,
            "id": "ttd3zl",
            "likes": 6,
            "name": "[twitch] Day 7 of MDTMJVM",
            "published": 3,
            "tags": [
                "tunnel",
                "ifs",
                "trippy",
                "pallete"
            ],
            "usePreview": 0,
            "username": "jeyko",
            "viewed": 626
        },
        "renderpass": [
            {
                "code": "\n#define iTime (iTime + 40.*(iMouse.x/iResolution.x))\n\n#define fov (0.8 + sin(iTime)*0.2)\n\n#define dmin(a, b) (a.x < b.x) ? a : b\n\nvec3 getRd(vec3 ro, vec3 lookAt, vec2 uv) {\n  vec3 dir = normalize(lookAt - ro);\n    vec3 right = normalize(cross(vec3(0,1,0), dir));\n  vec3 up = normalize(cross(dir, right));\n  \n  return dir*1. + right*uv.x*fov + up*uv.y*fov;\n}\n\n#define rot(x) mat2(cos(x), -sin(x), sin(x), cos(x))\n#define pi acos(-1.)\n\n#define dmin(a, b) (a.x < b.x) ? a : b // takes 2 vec2, does a minimum of them \n\n#define pmod(p, x) (mod(p,x) - x*0.5)\n\n\nfloat sdBox(vec3 p, vec3 r){\n  p = abs(p);\n  p-= r;\n  return max(p.x, max(p.y, p.z));\n}\n\nfloat sdObjA(vec3 p, float r){  \n  p.y *= 0.6;\n  p = abs(p);\n  p -= r;\n  float d = max(p.x, p.y);\n  d = max(d, p.z);\n  d = max(d, dot(p + 0.2, normalize(vec3(1))));\n  return d;\n}\nvec3 getTunnel(float z) {\n  z *= 0.02;\n  return vec3(sin(z*0.7)*10. , cos(z*2.) + sin(z*0.8)*10., 0.)*3.;\n}\n\n\nvec2 sdThing(vec3 p) {\n  vec2 d = vec2(10e3);\n    \n  vec3 z = p;\n  \n  float modDist = 50.;\n  \n  z -= getTunnel(p.z);\n  float id = floor((z.z )/ modDist)- + 0.5*modDist;\n  z.z = pmod(z.z, modDist);\n  \n  int iters = 4;\n  for (int i = 0; i<= iters; i++) {\n    //z.xy *= rot(-0.25*pi + id*1.4);\n    //z.yz *= rot(0.7 + sin(id*0.1)*0.1);\n      if( i > 1) {\n    \tz.xy *= rot(.2 + sin(id*0.8)*0.9);\n      }\n      if( i > 3) { \n    \tz.yz *= rot(0.1 + sin(id*0.6)*0.9 + sin(iTime)*2.5);\n      }\n    z.y -= 1.4;\n    z.x -= 0.4;\n      \n      \n    z.x = abs(z.x);\n    z.y = abs(z.y);\n    \n      if (i == iters ){\n          z.x -= 0.9;\n      }\n      \n    \n  }\n  \n  \n  p = z;\n  //d = min(d,sdBox(p,vec3(0.4,0.7,0.2)) );\n  \n  d = min(d,sdObjA(p,0.4));\n  d = dmin(d, vec2(sdBox(p, vec3(0.3,2.,0.3)), 1.));\n  \n  d.x *= 0.3;\n  return vec2(d);\n}\n\n\n\n\nfloat sdTunnel(vec3 p) {\n  float r =10.;\n  \n  p -= getTunnel(p.z);\n  float d = -(length(p.xy) - r);\n  \n  \n  float reprng = 10.;\n  \n  \n  //reprng *= 1. + sin(p.z*0.5)*0.1;\n  \n  for (int i = 0; i < 5;i++) {\n      p.xy *= rot(0.5 + p.z);\n  \n      p.y -= 0.4;\n      p = abs(p);\n  }\n  float id = -p.z/ reprng;\n  \n  //p.z -= 7.*(sin(id*15.12));\n  p.z -= 10.*(sin(id*0.5));\n    \n  d = max(d, abs(mod(-p.z, reprng)) - 0.4 + 0.2);\n  //d = max(d,  abs(mod(-p.y, reprng)) + 0.01 );\n  //d = max(d, abs(mod(p.x, reprng)) - 0.7);\n  \n  d *= 0.6;\n  return d;\n}\n\n#define spectra(x,t ) (1. + sin(vec3(0.9,0.1,0.3)*t + x + iTime))\n\nvec2 map(vec3 p){ // gets distance to everything\n  vec2 d = vec2(10e3); // d.x = distance, d.y = id\n\n    \n  d = dmin(d, sdThing(p));\n  d = dmin(d, vec2(sdTunnel(p),3));\n  \n\n  //d.x = length(p) - 1.;\n  \n  return d;\n}\n\nvec3 getNormal(vec3 p) {\n    vec2 t = vec2(0.001, 0.);\n  return normalize(map(p).x - vec3(\n    map(p - t.xyy).x,\n    map(p - t.yxy).x,\n    map(p - t.yyx).x\n  ));\n}\n\n#define zoom 30.\n\n\n\nfloat softshadow( in vec3 ro, in vec3 rd, float mint, float maxt, float w )\n{\n    float s = 1.0;\n    float t = 0.1;\n    for( float i=0.; i<100.; i++ )\n    {\n        float h = map(ro + rd*t).x;\n        s = min( s, 0.5+0.5*h/(w*t) );\n        if( s<0.0 ) break;\n        t += h;\n    }\n    s = max(s,0.0);\n    return s*s*(3.0-2.0*s); // smoothstep\n}\n\nvec3 glow = vec3(0);\n#define rotSpeed 1.\nvec4 render(vec2 uv) {\n  vec3 col = vec3 (0);\n  \n  //vec3 ro = vec3(sin(iTime*rotSpeed)*zoom,0,cos(iTime*rotSpeed) * zoom);\n  \n  \n\n  vec3 ro = vec3(0,0.,0. + iTime*60.);\n  //ro.z = 160;\n  vec3 currTunn = getTunnel(ro.z);\n  vec3 nextTunn = getTunnel(ro.z + 5. + sin(iTime)*3.);\n  vec3 lookAt = ro + vec3(0,0,4)  + vec3(nextTunn.xy,0.);\n  ro += currTunn;\n  vec3 rd = getRd(ro, lookAt, uv);\n  \n  rd.xy *= 1. + pow(length(uv.xy)*1.2, 6.4 + sin(iTime)*5.);\n  rd = normalize(rd);\n  vec3 p = ro; \n  float t = 0.;\n  \n  for (int i = 0; i < 250; i++) {\n      vec2 d = map(p);\n      \n      glow += spectra(d.x + p.z*0.05, 5.);\n      \n      if (d.x < 0.001) {\n\n        \n        vec3 dirLight = normalize(vec3(4.));\n        dirLight += vec3(sin(iTime)*10., 0.,0.);\n\n        vec3 n = getNormal(p);\n\n\n        \n        float diff = max(dot(dirLight, n), 0.);\n        float fres = pow(max(dot(-rd, n), 0.),5.);\n        float spec = pow(max(dot(-rd, n), 0.),5.);\n \n        col += fres*diff * vec3(0.1);\n\n        //col += fres;\n          \n          break;\n      }\n      \n      if (d.x > 100.) {\n        col = vec3(0.01);\n        break;\n      }\n      \n      \n      \n      t += d.x;\n      p = ro + rd * t;\n  }\n  col += glow*0.03;\n  //col *= glow*0.04;\n  col = pow(col, vec3(1.  - sin(iTime*0.2)*0.2,1.2 + sin(iTime)*0.2,1.));\n  col *= 0.2;\n  col = pow(col, vec3(0.44));\n  \n  return vec4(col, 0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n\n    fragColor = render(uv);\n\n    //fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 20624,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/plrusek-chan/crack-her-pelvis"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}