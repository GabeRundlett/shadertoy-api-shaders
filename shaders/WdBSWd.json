{
    "Shader": {
        "info": {
            "date": "1555250583",
            "description": "dance of pluses",
            "flags": 0,
            "hasliked": 0,
            "id": "WdBSWd",
            "likes": 8,
            "name": "Dance of pluses",
            "published": 3,
            "tags": [
                "rotate"
            ],
            "usePreview": 0,
            "username": "avin",
            "viewed": 563
        },
        "renderpass": [
            {
                "code": "#define SIZE 25.0 \n#define COL_BLACK vec3(23, 32, 38) / 255.0 \n#define COL_WHITE vec3(245, 248, 250) / 255.0 \n \nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n {     \n    vec2 uv = (fragCoord - iResolution.xy * 0.5) / iResolution.y;\n     \n    vec2 ouv = floor(uv * SIZE) / SIZE;    \n    uv *= SIZE;    \n    uv = fract(uv) - 0.5;\n    \n    float a = length(ouv * 5.0) - iTime * 2.5;\n    float ca = cos(a);\n    float sa = sin(a);\n    mat2 rot = mat2(ca, - sa, sa, ca);\n    \n    uv *= rot;\n    \n    float sm = 1.0 / (iResolution.x / SIZE) * 2.0;\n    float s = 0.05;\n    float mask = smoothstep(s + sm, s, abs(uv.x));\n    mask += smoothstep(s + sm, s, abs(uv.y));\n    \n    s = 0.25 + (ca * 0.5 + 0.5) * 0.2;\n    mask *= smoothstep(s, s - sm, abs(uv.x));\n    mask *= smoothstep(s, s - sm, abs(uv.y));\n    \n    vec3 col = mix(COL_BLACK, COL_WHITE, mask);\n    \n    fragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}