{
    "Shader": {
        "info": {
            "date": "1696006211",
            "description": "just messing around with random stuff. Ended up pretty cool. ",
            "flags": 0,
            "hasliked": 0,
            "id": "mdKyWR",
            "likes": 12,
            "name": "some imaginary stuff",
            "published": 3,
            "tags": [
                "smol"
            ],
            "usePreview": 0,
            "username": "01000001",
            "viewed": 306
        },
        "renderpass": [
            {
                "code": "#define s(x) smoothstep(0., .7, x)\n#define iters 7\n\n//#define darkmode\n#ifdef darkmode \n    #define dark 1.-\n#else\n    #define dark\n#endif\n\n//hash by IQ https://www.shadertoy.com/view/XlXcW4\nconst uint k = 1103515245U;\nvec3 hash( uvec3 x )\n{\n    x += k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    \n    return vec3(x)*(1.0/float(0xffffffffU));\n}\n\nvec2 m(vec2 uv, float s){\n    \n    vec2 a,x,p=uv;\n    \n    for (int i = 0; i++<2<<iters;){\n    \n        vec2 t = p, b = t*0.;\n        a = uv;\n        a = mix(a, t               , s(s-b++)); // Julia set becomes this at a certain input ðŸ¤”\n        a = mix(a, vec2(uv.x,  t.y), s(s-b++)); \n        a = mix(a, vec2(t.  x,uv.y), s(s-b++));\n        a = mix(a, vec2(t.  y,uv.x), s(s-b++)); // Not surprised its asymmetrical.\n        a = mix(a, vec2(uv.y,  t.x), s(s-b++)); // Curly area below looks cool. Top edge might be interesting\n        a = mix(a, uv.     yx      , s(s-b++)); // Favourite one\n        a = mix(a, t.      yx      , s(s-b++)); // What's this?! Seems rotationally symmetrical\n                                                // which is incredibly weird. Why 3? Huh???\n        a = mix(a, t*uv.yx         , s(s-b++));                                \n        a = mix(a, t.yx*uv         , s(s-b++));                                \n\n        a = mix(a, uv.     xy      , s(s-b++)); // Restore to loop\n\n        p.x = t.x*t.x - t.y*t.y + a.x;\n        p.y = 2.*t.x*t.y + a.y;\n        \n        x.y = float(i);\n        \n        if (length(p) > 2.) break;\n    }\n    x.x = dark exp(-x.y/4e1);\n    \n    return x;\n\n}\n\nvoid mainImage( out vec4 O, vec2 U ){\n    vec2 r = iResolution.xy;\n    vec2 uv = U/r;\n    vec2 cuv = (2.*U-r)/r.y;\n    \n    float s = mod(iTime/2., 10.);\n    cuv *= 2.;\n    \n    int ssaa = 1 + int(iFrameRate/10.);\n    \n    vec2 x = uv*0.;\n    for (int i = 0; i++<ssaa;){\n    \n        x += m(cuv + (hash(uvec3(i)).xy*2.-1.)/r.y, s);\n        \n    }\n    x /= float(ssaa);\n    \n    O = x.xxxx;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}