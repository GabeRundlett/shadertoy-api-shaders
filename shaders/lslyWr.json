{
    "Shader": {
        "info": {
            "date": "1487782413",
            "description": "Move particles with litte help of your pc mouse!",
            "flags": 32,
            "hasliked": 0,
            "id": "lslyWr",
            "likes": 20,
            "name": "Lots of particles",
            "published": 3,
            "tags": [
                "particles",
                "alot"
            ],
            "usePreview": 0,
            "username": "afl_ext",
            "viewed": 1316
        },
        "renderpass": [
            {
                "code": "vec2 ratio = vec2(0.0);\nvec2 uv = vec2(0.0);\n\n#define balls 1000.0\n\n\nfloat visualize_particle(float i){\n    i /= iResolution.x;\n    vec2 p = vec2(mod(i, iResolution.x), floor(i / iResolution.x));\n    vec2 position = texture(iChannel0, p).rg;\n\treturn 0.5 * (1.0 - smoothstep(0.0022, 0.00622, distance(position * ratio, uv * ratio )));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tuv = fragCoord.xy / iResolution.xy;\n    ratio = vec2(1.0, iResolution.y / iResolution.x);\n    float v = 0.0;\n    for(float i=0.0;i<balls;i+=1.0){\n     \tv += visualize_particle(i);   \n    }\n\tfragColor = vec4(vec3(v), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 uv = vec2(0.0);\nvec2 mouse = vec2(0.0);\n\n// iq value noise\nfloat noise3d( in vec3 x ){\n    #define hash(n) fract(sin(n)*758.5453)\n\tvec3 p = floor(x);\n\tvec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\tfloat n = p.x + p.y*157.0 + 113.0*p.z;\n\treturn mix(mix(\tmix( hash(n+0.0), hash(n+1.0),f.x),\n    mix(hash(n+157.0), hash(n+158.0),f.x),f.y),\n    mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n    mix(hash(n+270.0), hash(n+271.0),f.x),f.y),f.z);\n}\n\nvec4 update(){\n    // aquire backbuffer particle data\n\tvec2 position = texture(iChannel0, uv).rg;\n\tvec2 velocity = texture(iChannel0, uv).ba;\t\n    \n    vec2 n = normalize((mouse) - position);\n    float D = distance(mouse, position);\n    \n    // calculate mouse \"drag\"\n    velocity +=  0.25 * n * (1.0 / (D * D*10.0 + 1.0));\n    \n    // update particle position\n    position += velocity * 0.0256;\n    \n    // branchless collision box\n    velocity.y *= max(-0.95, sign(position.y));\n    velocity.y *= mix(1.0, -0.8, step(1.0, position.y));\n    velocity.x *= max(-0.95, sign(position.x));\t\t\n    velocity.x *= mix(1.0, -0.8, step(1.0, position.x));\n    \n    // air drag\n    velocity *= 0.97;\n    \n    // random \"wind\"\n\tposition += (vec2(noise3d(vec3(uv.x * 43.4, uv.y * 43.4, iTime)), \n                     noise3d(vec3(-uv.x * 43.4, -uv.y * 43.4, -iTime))) * 2.0 - 1.0) * 0.02;\n    \n    //gravity\n    velocity += vec2(0.0, -0.052);\n    \n    return vec4(clamp(position, 0.01, 0.99), clamp(velocity, -1.0, 1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uv = fragCoord.xy / iResolution.xy;\n    mouse = iMouse.xy / iResolution.xy;\n    fragColor = update();\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}