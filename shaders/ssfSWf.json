{
    "Shader": {
        "info": {
            "date": "1619354319",
            "description": "just trying to optimize the code size, the only criterion is for it to look similar enough\nwas golfing this thing with https://www.shadertoy.com/user/loicvdb",
            "flags": 0,
            "hasliked": 0,
            "id": "ssfSWf",
            "likes": 28,
            "name": "Volumetric fractal golf",
            "published": 3,
            "tags": [
                "2tweets"
            ],
            "usePreview": 0,
            "username": "michael0884",
            "viewed": 603
        },
        "renderpass": [
            {
                "code": "//318 by Xor\n#define V vec3\n#define f for(int i; i++<9;)\n\nvoid mainImage(out vec4 o, vec2 u) {\n    V R = iResolution, p = V(0,9,50.+fract(u*.5+u.y*.3)), a, l, c, e;\n    a++;\n    f f {\n        f {\n            c.y--;\n            V z = c.zzz*.1;\n            f z = V(z.x*z.x/z.y-z.y,z+z)*z.y + c*.1;\n            l *= e = dot(z,z) < 4. ? V(.6,.7,.8) : V(1);\n        }\n        o.rgb-=l*e-l;\n        l=a*=e;\n        c = p+=V(u-R.xy*.5, -R)/R.x;\n        c.xz *= mat2(sin(iTime-V(0,11,3)).yzxy);\n    }\n}\n\n\n//321 by loicvdb\n/*#define V vec3\n#define f for(int i; i++<9;)\n\nvoid mainImage(out vec4 o, vec2 u) {\n    V R = iResolution, p = V(0,9,50.+fract(u.x*.5+u.y*.3)), a, l, c, e;\n    a++;\n    f f {\n        f {\n            c.y--;\n            V z = c.zzz*.1;\n            f z = V(z.x*z.x-z.y*z.y, 2.*z.y*z) + c*.1;\n            l *= e = dot(z,z) < 4. ? V(.6,.7,.8) : V(1);\n        }\n        o.rgb-=l*e-l;\n        l=a*=e;\n        c = p+=V(u-R.xy*.5, -R)/R.x;\n        c.xz *= mat2(sin(iTime-V(0,11,3)).yzxy);\n    }\n}\n\n/*\n//322 by loicvdb\n\n#define V vec3\n#define f for(int i; i<9; i++)\n\nvoid mainImage(out vec4 o, vec2 u) {\n    V R = iResolution, p = V(0,9,50.+fract(u.x*.5+u.y*.3)), a, l, c, e;\n    a++;\n    f f {\n        f {\n            c.y--;\n            V z = c.zzz*.1;\n            f z = V(z.x*z.x-z.y*z.y, 2.*z.y*z) + c*.1;\n            l *= e = dot(z,z) < 4. ? V(.6,.7,.8) : V(1);\n        }\n        o.rgb-=l*e-l;\n        l=a*=e;\n        c = p+=V(u-R.xy*.5, -R)/R.x;\n        c.xz *= mat2(sin(iTime-V(0,11,3)).yzxy);\n    }\n}\n\n\n/*\n//327 chars by me\n\n#define V vec3\n#define f for(int i; i<9; i++)\n\n\nvoid mainImage(out vec4 o, vec2 u) {\n    V R = iResolution, p = V(0,0,50.+fract(u.x*.5+u.y*.3)), a, l, x;\n    a++;\n    f f {\n        f {\n            x = p+V(0,9-i,0);\n            x.xz *= mat2(sin(iTime-V(0,11,3)).yzxy);\n            V z = x.zzz*.1;\n            f z = V(z.x*z.x-z.y*z.y, 2.*z.y*z) + x*.1;\n            l *= x = dot(z,z) < 4. ? V(.6,.7,.8) : V(1);\n        }\n        o.rgb-=l*x-l;\n        p+=V(u-R.xy*.5, -R)/R.x;\n        l=a*=x;\n    }\n}\n\n/*\n//330 chars by loicvdb\n\n#define V vec3\n#define f for(int i; i<9; i++)\n\n\nvoid mainImage(out vec4 o, vec2 u) {\n    V R = iResolution, p = V(0,0,50.+fract(u.x*.5+u.y*.3)), a, l, x;\n    a++;\n    f f {\n        f {\n            x = p+V(0,9-i,0);\n            x.xz *= mat2(sin(iTime-V(0,11,3)).yzxy);\n            V z = x.zzz*.1;\n            f z = V(z.x*z.x-z.y*z.y, 2.*z.y*z) + x*.1;\n            l /= x = exp(V(dot(z,z) < 4.)*V(5,4,3)*.1);\n        }\n        o.rgb-=l/x-l;\n        p+=V(u-R.xy*.5, -R)/R.x;\n        l=a/=x;\n    }\n}\n\n/*\n\n//340 chars by me\n\n#define V vec3\n#define f for(int i; i<9; i++)\n\nvoid mainImage(out vec4 o, vec2 u) \n{\n    V R = iResolution, \n    p = V(0,0,50.+fract(u.x*.5+u.y*.3)),//bayer dither\n    a, l, \n    z, b, m; a++;\n    f f //ray marching loop\n    f //shadow loop\n    { \n      m = i>0 ? p+V(0,i,0) : p+=V(u-R.xy*.5, -R)/R.x;\n      m.xz *= mat2(sin(iTime-V(0,11,22)).yzxy); //rotation, closest integers to multiples of pi used here\n      z = m.zzz*.1;\n      f z = V(z.x*z.x-z.y*z.y, 2.*z.y*z) + m*.1; //fractal loop\n      b = exp(V(dot(z,z) < 4.) * V(.5,.4,.3)); //extinction\n    \n      i>0 ? l/=b: o.rgb-=l/b-l, l=a/=b; //integrate color\n    }\n}\n\n///350 chars by me\n\n#define V vec3\n#define f for(int i; i<9; i++)\n\nV e(V p) //density\n{\n    p.xz *= mat2(sin(iTime-V(0,11,22)).yzxy); //rotation, closest integers to multiples of pi used here\n    V z = p.zzz;\n    f z = V(z.x*z.x-z.y*z.y, 2.*z.y*z) + p; //fractal loop\n    return exp(V(dot(z,z) < 4.) * V(.5,.4,.3)); //extinction\n}\n\n\nvoid mainImage(out vec4 o, vec2 u) \n{\n    V R = iResolution, \n    d = .1*V(u-R.xy*.5, -R)/R.x, //ray\n    p = V(0,0,5) + d*fract(u.x*.5+u.y*.3),//bayer dither\n    a, l; a++;\n    f f //ray marching loop\n    { \n      o.rgb-=l/e(p+=d)-l, l=a/=e(p); //integrate color\n      f l/=e(p+.1*V(0,i,0)); //shadow ray\n    }\n}\n\n\n\n\n\n\n///351 chars\n\n\n#define V vec3\n#define f for(int i; i<9; i++)\n\nV e(V p) //density\n{\n    p.xz *= mat2(sin(iTime-V(0,11,22)).yzxy); //rotation, closest integers to multiplies of pi used here\n    V z = p.zzz;\n    f z = V(z.x*z.x-z.y*z.y, 2.*z.y*z) + p; //fractal loop\n    return exp(V(dot(z,z) < 4.) * V(.5,.4,.3)); //extinction\n}\n\n\nvoid mainImage(out vec4 o, vec2 u) \n{\n    V R = iResolution, \n    d = .1*V(u-R.xy*.5, -R)/R.y, //ray\n    p = V(0,0,5) + d*fract(u.x*.5+u.y*.3),//bayer dither\n    a, l; a++;\n    f f //ray marching loop\n    { \n      o.rgb-=l/e(p+=d)-l, l=a/=e(p); //integrate color\n      f l/=e(p+.1*V(0,i,0)); //shadow ray\n    }\n}\n\n\n\n\n\n\n//365 chars\n\n#define V vec3\n#define f for(int i = 0; i<9; i++)\n\nV e(V p) //density\n{\n    p.xz *= mat2(sin(iTime+V(0,1.5,3)).yzxy); //rotation \n    V z = p.zzz*.1;\n    f z = V(z.x*z.x-z.y*z.y, 2.*z.x*z.y, 0) + p*.1; //fractal loop\n    return exp(V(dot(z,z) < 4.) * V(.5,.4,.3)); //extinction\n}\n\n\nvoid mainImage(out vec4 o, vec2 u) \n{\n    V R = iResolution, \n    d = V(u-R.xy*.5, -R.y)/R.y, //ray\n    p = V(0,0,30) + d*fract(u.x*.5+u.y*.3),//bayer dither\n    a = V(1), l;\n    o-=o;\n    f f //ray marching loop\n    { \n      o.rgb-=l/e(p+=d)-l, l=a/=e(p); //integrate color\n      f l/=e(p+V(0,i,0)); //shadow ray\n    }\n}\n\n\n\n\n\n//381 chars by loicvdb\n\n#define V vec3\n#define f for(int i = 0; i < 9; i++)\n\nV e(V p) {\n    p.xz *= mat2(sin(iTime+V(0,1.5,3)).yzxy);\n    p *= .1;\n    V z = p.zzz;\n    f z = V(z.x*z.x-z.y*z.y, 2.*z.x*z.y, 0) + p;\n    return exp(-V(dot(z,z) < 4.) * V(.5,.4,.3));\n}\n\nvoid mainImage(out vec4 o, vec2 u) {\n    V R = iResolution, \n    d = V((u-R.xy*.5)/R.y, -1),\n    p = V(0,0,30) + d*fract(u.x*.5+u.y*.3),\n    a = V(1),\n    b, l;\n    for(o-=o; dot(p,p) < 1e3;\n        o.rgb-=(b=e(p+=d))*l-l,\n        l=a*=b)\n        f l *= e(p+V(0,i,0));\n}\n\n\n\n\n\n//485 chars - original starting point \n\nfloat e(vec3 p) {\n    vec2 z = p.zz, c = p.xy;\n    int i = 0;\n    for(; i < 9 && dot(z, z) < 4.; i++) z = vec2(z.x*z.x-z.y*z.y, 2.*z.x*z.y) + c;\n    return float(i>8);\n}\n\nvoid mainImage(out vec4 o, vec2 u) {\n    o.xyz = iResolution;\n    float c = cos(iTime), s = sin(iTime);\n    mat3 r = mat3(c, 0, -s, 0, 1, 0, s, 0, c);\n    vec3 d = vec3((u-o.xy*.5)/o.y, -1.)*r*.05,\n    p = vec3(0,0,3)*r + d*fract(u.x*.5+u.y*.3),\n    a = vec3(1),\n    v = vec3(5,4,3),\n    b;\n    o -= o;\n    for(; o.w < 99.; o.w++) {\n        vec3 l = vec3(0);\n        for(; l.y < .9; l.x -= .1*e(p+vec3(0,l.y+=.1,0)));\n        b = exp(-.05*e(p += d)*v);\n        o.rgb += (a*=b) * (1.-b) * exp(l.x*v);\n    }\n}\n\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}