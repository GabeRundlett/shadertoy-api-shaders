{
    "Shader": {
        "info": {
            "date": "1692145832",
            "description": "light clouds",
            "flags": 0,
            "hasliked": 0,
            "id": "clBczd",
            "likes": 3,
            "name": "PaintPourOne",
            "published": 3,
            "tags": [
                "paint"
            ],
            "usePreview": 0,
            "username": "kushnadas",
            "viewed": 129
        },
        "renderpass": [
            {
                "code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n// A simple hash function to create randomness, used to make a basic noise function\nfloat hash(float n) {\n    return fract(sin(n) * 43758.5453);\n}\n\n// Basic noise function using random hashing\nfloat noise(vec2 x) {\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f * f * (3.0 - 2.0 * f);\n    float n = p.x + p.y * 57.0;\n    return mix(mix(hash(n), hash(n + 1.0), f.x),\n               mix(hash(n + 57.0), hash(n + 58.0), f.x), f.y);\n}\n\nvec3 liquidLight(vec2 st) {\n    vec2 distortedCoords = st + 0.5 * vec2(noise(st + iTime), noise(st - iTime));\n    float timeFactor = iTime * 0.1;\n    \n    vec3 color = vec3(0.0);\n    \n    // Layer 1: Base flow\n    float baseNoise = noise(distortedCoords + timeFactor);\n    color += mix(vec3(0.216,1.000,0.000), vec3(0.565,0.000,0.639), baseNoise);\n    \n    // Layer 2: Fine details\n    float fineNoise = noise(distortedCoords * 3.69 + timeFactor);\n    color += mix(vec3(0.114,0.000,0.961), vec3(1.000,0.451,0.000), fineNoise) * 0.5;\n\n    // Layer 3: Medium disturbances\n    float medNoise = noise(distortedCoords * 2.69 + timeFactor);\n    color += mix(vec3(0.016,0.000,1.000), vec3(1.000,0.000,0.000), medNoise) * 0.75;\n    \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st = st * 2.0 - 1.0;  // Normalize to [-1, 1]\n    st.x *= iResolution.x / iResolution.y;  // Adjust for aspect ratio\n    \n    vec3 color = liquidLight(st);\n    \n    fragColor = vec4(color, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}