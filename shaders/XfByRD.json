{
    "Shader": {
        "info": {
            "date": "1721947141",
            "description": "Burn O Flame!",
            "flags": 0,
            "hasliked": 0,
            "id": "XfByRD",
            "likes": 10,
            "name": "Burn O Flame!",
            "published": 3,
            "tags": [
                "burn",
                "flame",
                "fire",
                "inferno"
            ],
            "usePreview": 0,
            "username": "Peace",
            "viewed": 168
        },
        "renderpass": [
            {
                "code": "const float PI = 3.141592653;\n\nvec2 hash22(vec2 p) {\n\tvec3 p3 = fract(p.xyx * vec3(0.1031, 0.1030, 0.0973));\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx + p3.yz) * p3.zy);\n}\n\nfloat noise(vec2 p) {\n\tvec2 i = floor(p + (p.x + p.y) * 0.366025);\n    vec2 a = p - i + (i.x + i.y) * 0.211324;\n    float m = step(a.y, a.x); \n    vec2 o = vec2(m, 1.0 - m);\n    vec2 b = a - o + 0.211324;\n\tvec2 c = a - 0.577351;\n    vec3 h = max(0.5 - vec3(dot(a, a), dot(b, b), dot(c, c)), 0.0);\n\tvec3 n = h * h * h * h * \n        vec3(dot(a, hash22(i) - 0.5), \n             dot(b, hash22(i + o) - 0.5), \n             dot(c, hash22(i + 1.0) - 0.5));\n    return dot(n, vec3(70));\n}\n\nfloat fbm(vec2 uv) {\n\tconst mat2 m = mat2(1.6, 1.2, -1.2, 1.6);\n\tfloat f = 0.5 * noise(uv); uv = m * uv;\n\tf += 0.25 * noise(uv); uv = m * uv;\n\tf += 0.125 * noise(uv); uv = m * uv;\n\tf += 0.0625 * noise(uv); uv = m * uv;\n\tf += 0.03 * noise(uv); uv = m * uv;\n\treturn f + 0.55;\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    float r = iResolution.x / iResolution.y;\n    vec2 a = mix(vec2(1, 1.0 / r), vec2(r, 1), step(1.0, r));\n    \n    float d = fbm(uv * 1.5 - vec2(0, iTime));\n    float y = uv.y * 0.5 + 0.5 * a.y;\n    float x = sqrt(y) * PI * 0.5;\n    x = sin(x * 0.7) * cos(x);\n    float z = smoothstep(0.2*d*x, 0.7*d*d, x - sqrt(abs(uv.x)) * abs(uv.x) * 1.5);\n\n    d = smoothstep(0.0, 0.9+0.7*y*y*z, d);\n    d *= z * z;\n    vec3 col = vec3(d*sqrt(d), d*d*d, d*d*d*d);\n    z = max(0.0001, z);\n    col *= vec3(3.1, 3.8 / (z * z), 2.5 / (z * z * z * z));\n\n    fragColor = vec4(col, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}