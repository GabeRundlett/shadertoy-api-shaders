{
    "Shader": {
        "info": {
            "date": "1586624765",
            "description": "tweaking this one : https://www.shadertoy.com/view/WtBXz1\n\nclick and drag",
            "flags": 0,
            "hasliked": 0,
            "id": "WsBcDD",
            "likes": 0,
            "name": "tie dye anim",
            "published": 3,
            "tags": [
                "psyche"
            ],
            "usePreview": 0,
            "username": "_sans_titre",
            "viewed": 374
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159\n\nvec3 palette(float l) {\n    float m = 2.0*PI * l;\n\treturn vec3(\n    \tcos(m),\n        cos(m + 2.0 * PI / 3.0),\n        cos(m + 3.0 * PI / 3.0)\n    );\n}\n\nvec4 m = vec4(0.3);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iMouse.x > 0.0)\n    \tm = iMouse / iResolution.xyxy;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    //uv += vec2(0.0, -1.5);\n    float th = atan(uv.y, uv.x);\n    float baseLength = length(uv*0.1);\n    vec2 wavy = vec2(\n        sin(th * 1.0 + iTime),\n        cos(th * 23.0 + iTime)\n    );\n    float waveScale = max(0.01*m.x*100.01, baseLength * 0.2);\n    wavy *= waveScale * m.y * 5.;\n    float f = length(uv + wavy);\n    f -= iTime / 10.0;\n    f = floor(8.4 * f)/8.0;\n\n    vec3 col = palette(f);\n    col = pow(col, vec3(1.0/( m.y * 10.0)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}