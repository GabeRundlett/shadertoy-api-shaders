{
    "Shader": {
        "info": {
            "date": "1569782801",
            "description": "messing around with flow patterns and complex maps",
            "flags": 32,
            "hasliked": 0,
            "id": "wsG3Rh",
            "likes": 38,
            "name": "Streamline Flows",
            "published": 3,
            "tags": [
                "streamline"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 1014
        },
        "renderpass": [
            {
                "code": "#define X 5.\n#define L 3.\n#define z 3.\nfloat time;\nfloat ln (vec2 p, vec2 a, vec2 d,float i) {\n    float r = clamp(dot(p-a,d)/dot(d,d),0.,1.);\n\treturn length(p-a-d*r);\n}\nvoid mainImage( out vec4 Q, vec2 U )\n{\n    vec4 a = A(U);\n    Q =  vec4(1);\n    for (int x = -4; x <= 4; x++)\n    for (int y = -4; y <= 4; y++) {\n        vec2 V = floor(U/X+0.5+vec2(x,y))*X;\n        V += X*h(V)-.5;\n        V += X*sin(10.*h(2.*V).x+vec2(0,3.14/2.)+iTime)-.5;\n        vec4 a;\n        a = A(V);\n        for (float i = 0.; i < L; i++) {\n            Q += smoothstep(1.5,0.25,ln(U,V,z*X*a.xy/L,i));\n            V += z*X*a.xy/L;\n            a = A(V);\n        }   Q += smoothstep(1.5,0.25,ln(U,V,z*X*a.xy/L,L));\n    }\n    Q  /= 10.;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel0,(U)/R)\nvec2 h(vec2 p)//Dave H\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "mat2 ro (float a) {\n\tfloat s = sin(a), c = cos(a);\n    return mat2(c,-s,s,c);\n}\nvec2 mul (vec2 a, vec2 b) {\n\treturn vec2 (a.x*b.x-a.y*b.y,a.x*b.y+a.y*b.x);\n}\nvec2 inv (vec2 a) {\n\treturn vec2(a.x,-a.y)/dot(a,a);\n}\nvec2 div (vec2 a, vec2 b) {\n\treturn mul(a,inv(b));\n}\nvec2 pol (vec2 a) {\n\treturn vec2(length(a),atan(a.y,a.x));\n}\nvec2 car (vec2 p) {\n    return p.x*vec2(cos(p.y),sin(p.y));\n}\nvec2 sqr (vec2 a) {\n\tvec2 p = pol(a);\n   \tp.x = sqrt(p.x);\n    p.y /= 2.;\n    return car(p);\n}\n#define i vec2(0,1)\n#define re vec2(1,0)\n#define M vec2(cos(iTime),sin(iTime))\nvec2 a (vec2 U) {U = mul(U,U)-.3*M;U = mul(U,U)-.3*M; U = mul(U,U)-.3*M;\n    return U;}\nvec2 b (vec2 U) {U = div(.4*M,U)+mul(U,U);\n    return U;}\nvec2 c (vec2 U) {U = pol(U); U.y = U.y*2.+iTime; U.x = 1.;  U=car(U);\n    return U;}\nvec2 d (vec2 U) {U = pol(U); U.y = iTime+6.*U.x; U.x = 1.;  U=car(U);\n    return U;}\nvec2 e (vec2 U) {U = sin(iTime+10.*mul(U,i));\n    return U;}\nvec2 f (vec2 U) {U = pol(U); U.y += iTime; U = car(U);\n    return U;}\nvec2 g (vec2 U) {U *= ro(iTime); U = mul(U + div(.2*re,U),i); U *= ro(-iTime);\n    return U;}\nvec2 j (vec2 U) {U*=ro(iTime);U = mul(.5*re+U,mul(U-.5*re,i));U*=ro(-iTime);\n    return U;}\nvec2 k (vec2 U) {U = mul(abs(U*ro(iTime))-.3,i)*ro(-iTime);\n\treturn U;}\nfloat q (float t) {\n    float T = mod(.5*iTime,18.);\n\treturn exp(-(t-T)*(t-T));\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    U = 2.*(U-0.5*R)/R.y;\n    U = \n        a(U)*q(0.)+\n        b(U)*q(2.)+\n        c(U)*q(4.)+\n        d(U)*q(6.)+\n        e(U)*q(8.)+\n        f(U)*q(10.)+\n        g(U)*q(12.)+\n        j(U)*q(14.)+\n        k(U)*q(16.)+\n        a(U)*q(18.);\n    \n    \n    if (length(Q.xy)>0.) U = normalize(vec2(U));\n    \n    Q = vec4(U,0,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}