{
    "Shader": {
        "info": {
            "date": "1693534660",
            "description": ".",
            "flags": 32,
            "hasliked": 0,
            "id": "ctsfDj",
            "likes": 10,
            "name": "Shader Sorter",
            "published": 3,
            "tags": [
                "sorting",
                "bubblesort"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 232
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 dist = abs(uv.y - texture(iChannel0, vec2(uv.x, 0)));\n    fragColor = smoothstep(2.0 / iResolution.y, 0.0, dist);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    if (iFrame == 0) {\n        float x1 = fragCoord.x / iResolution.x * 3.1415;\n        float x2 = x1 - 1.0;\n        fragColor = vec4(sin(x1), cos(x1), 0.5 * exp(-10.0 * x2 * x2), 0);\n    } else {\n        ivec2 thisCoord = ivec2(fragCoord);\n        fragColor = texelFetch(iChannel0, thisCoord, 0);\n        if ((thisCoord.x & 1) == (iFrame & 1)) {\n            int nextIndex = thisCoord.x + 1;\n            if (nextIndex < int(iResolution.x)) {\n                vec4 nextBin = texelFetch(iChannel0, ivec2(nextIndex, 0), 0);\n                fragColor = min(fragColor, nextBin);\n            }\n        } else {\n            int prevIndex = thisCoord.x - 1;\n            if (prevIndex >= 0) {\n                vec4 prevBin = texelFetch(iChannel0, ivec2(prevIndex, 0), 0);\n                fragColor = max(prevBin, fragColor);\n            }\n        }\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}