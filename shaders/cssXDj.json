{
    "Shader": {
        "info": {
            "date": "1674286443",
            "description": "exercise done while going through www.thebookofshaders.com",
            "flags": 0,
            "hasliked": 0,
            "id": "cssXDj",
            "likes": 1,
            "name": "2.01-ColorWheel",
            "published": 3,
            "tags": [
                "thebookofshaders"
            ],
            "usePreview": 0,
            "username": "retonym",
            "viewed": 156
        },
        "renderpass": [
            {
                "code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define TWO_PI 6.28318530718\n\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    //squash screen space into a square instead of a rectangle\n    vec2 uv = fragCoord/iResolution.xy;\n    float screenRatio = iResolution.x/iResolution.y;\n    uv.x *= screenRatio;\n    uv.x -= .4;\n    vec3 color = vec3(0.0);\n\n    // Use polar coordinates instead of cartesian\n    vec2 toCenter = vec2(0.5)-uv;\n    float angle = atan(toCenter.y,toCenter.x);\n    float radius = length(toCenter)*2.0;\n    \n    \n    //E1: MAKE COLOR WHEEL SPIN\n    //redundant but i just needed to make this its own line\n    float time = iTime;\n    color = hsb2rgb(vec3((angle/TWO_PI)+time,radius,1.0));\n    \n    \n    //E2: MAKE ONE HUE COVER A GREATER ANGLE AND ALL THE REST A SMALLER ANGLE\n    //distort the angle -- color bands will look narrow on the 'ends', wide in the 'center'\n    angle = (pow(angle, 3.0));\n    color = hsb2rgb(vec3((angle/TWO_PI)+time,radius,1.0));\n\n    \n    //E3: FIX THE COLOR WHEEL WITH SHAPING FUNCTIONS\n    //ref to match: https://thebookofshaders.com/06/colorwheel.png\n    //angle = atan(toCenter.y,toCenter.x);\n    //angle = angle/TWO_PI + .5;\n    //angle = pow(angle, 2.0);\n    //color = hsb2rgb(vec3((angle + 0.05),radius,1.0));\n    \n       \n    //E4: add the circle frame around the wheel\n    vec2 center = vec2(0.5, 0.5);\n    float len = distance(uv, center);\n    len = step(.5, len);\n    vec3 circle = vec3(len, len, len);\n    circle = 1.0 - circle;\n\n\n    fragColor = vec4(color * circle,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}