{
    "Shader": {
        "info": {
            "date": "1597584890",
            "description": "Abstract Apollonian fractal with raymarching techniques",
            "flags": 0,
            "hasliked": 0,
            "id": "wlfBWS",
            "likes": 5,
            "name": "Abstract Fractal",
            "published": 3,
            "tags": [
                "raymarching",
                "fractal",
                "apollonian"
            ],
            "usePreview": 0,
            "username": "propagant",
            "viewed": 470
        },
        "renderpass": [
            {
                "code": "// Apollonian fractal formula by Matej Vanco, 2020\n\nstruct ray\n{\n\tvec3 o,d;\n\tfloat l;\n};\n\nvec4 fractal(vec3 p, vec2 par, vec3 color)\n{\n\tfloat s = par.x;\n\tfloat g = 45.;\n\tp.xy*=mat2(sin(g), -cos(g), cos(g), sin(g));\n\tfloat c = 1.5;\n\n\tfloat scale = 1.;\n\tvec3 cStorage = color;\n    \n\tfor (int i = 0; i < 13; i++)\n\t{\n\t\tp = -1. + 2.0 * fract(0.5 * p + 0.5);\n\n\t\tfloat r2 = dot(p, p);\n\n\t\tcolor += mix(0.8 - color, vec3(0.09,0.0,0.8) * pow(r2, 0.8), 0.8);\n\n\t\tfloat k = s / r2;\n\t\tp *= k;\n\t\tp.x *= par.y;\n\t\tscale *= k;\n\t}\n\treturn vec4(color * cStorage, 0.25 * abs(p.y) / scale);\n}\n\t\nvec4 geo(vec3 p)\n{\n\treturn fractal(p-vec3(0.22+sin(iTime * 0.2)*0.1,0.9,0.2),vec2(1.24,0.75),vec3(0.3,0.29,0.095));\t\n}\n\t\nvec4 march(ray r)\n{\n\tvec3 c = vec3(0.);\n\tfor(int i = 0; i < 64; i++)\n\t{\n\t\tvec3 p = r.o + r.d * r.l;\n\t\tvec4 g = geo(p);\n\t\tc = g.rgb;\n\t\tr.l += g.w;\n\t\tif(r.l>8.)\n\t\t\tbreak;\n\t}\n\treturn vec4(c, r.l);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = ( fragCoord.xy -0.5 * iResolution.xy ) / iResolution.y;\n\n    vec3 c = vec3(0.);\n\t\n\tray r = ray(vec3(0.), vec3(uv,1.), 0.);\n\tvec4 mm = march(r);\n\tvec3 p = r.o + r.d * mm.w;\n\tc = mm.rgb * mm.w;\n\n    fragColor = vec4(c,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}