{
    "Shader": {
        "info": {
            "date": "1516687017",
            "description": "radial blur from old gpu gems article",
            "flags": 0,
            "hasliked": 0,
            "id": "MtSBzc",
            "likes": 2,
            "name": "radial_blur",
            "published": 3,
            "tags": [
                "blur"
            ],
            "usePreview": 1,
            "username": "xxyxxy",
            "viewed": 877
        },
        "renderpass": [
            {
                "code": "// radial blur via https://developer.nvidia.com/gpugems/GPUGems3/gpugems3_ch13.html\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t\n    \n    // KNOBS TO PLAY WITH\n    // KNOBS TO PLAY WITH\n    // KNOBS TO PLAY WITH\n    const vec2 BLUR_CENTER = vec2(0.5, 0.5);\n    const int NUM_SAMPLES = 60;\n    const float WEIGHT = 0.9;\n    const float DECAY = 0.99;\n\tconst float EXPOSURE = 1.0;\n    // KNOBS TO PLAY WITH\n    // KNOBS TO PLAY WITH\n    // KNOBS TO PLAY WITH\n\n    vec2 currentPosition = fragCoord.xy / iResolution.xy;\n    vec2 originalPosition = currentPosition;\n    \n    vec2 toCenter = BLUR_CENTER - currentPosition;\n    vec2 stepSize = toCenter / float(NUM_SAMPLES);\n    \n    vec3 color = texture(iChannel0, currentPosition).rgb;\n    vec3 originalColor = color;\n    \n    float illuminationDecay = 1.0;\n    \n    for (int i = 0; i < NUM_SAMPLES; i++) {\n    \tcurrentPosition += stepSize;\n        vec3 smp = texture(iChannel0, currentPosition).rgb;\n        smp *= illuminationDecay * WEIGHT;\n        \n        color += smp;\n        \n        illuminationDecay *= DECAY;\n    }\n    \n    color /= vec3(NUM_SAMPLES);\n    \n    \n    fragColor = vec4(color * EXPOSURE, 1.0);\n    \n    // uncomment to attenuate by distance\n    //float blendFactor = 1.0 - distance(originalPosition, BLUR_CENTER);\n    //vec3 finalColor = blendFactor * color + (1.0 - blendFactor) * originalColor;\n    //fragColor = vec4(finalColor * EXPOSURE, 1.0);\n    \n    // uncomment to see original texture\n\t//vec2 originalUv = fragCoord.xy / iResolution.xy;\n    //fragColor = texture(iChannel0, originalUv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}