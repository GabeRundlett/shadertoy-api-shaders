{
    "Shader": {
        "info": {
            "date": "1619209688",
            "description": "Aquiles",
            "flags": 0,
            "hasliked": 0,
            "id": "NsXSW2",
            "likes": 9,
            "name": "Aquiles",
            "published": 3,
            "tags": [
                "aquiles"
            ],
            "usePreview": 0,
            "username": "jorge2017a1",
            "viewed": 229
        },
        "renderpass": [
            {
                "code": "//por jorge2017a1 ----jorgeFloresP---23/abril/2021\n// referencia\n//https://www.shadertoy.com/view/tlGBW3\n#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n#define opU2(d1, d2) ( d1.x < d2.x ? d1 : d2 )\n\nfloat opU( float d1, float d2 ) { return  min(d1,d2); }\nfloat opS( float d1, float d2 ) { return max(-d1,d2); }\nfloat opI( float d1, float d2 ) { return max(d1,d2); }\n\n//----------oPeraciones de Repeticion\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}\n//----------\nfloat sdBox( in vec2 p, in vec2 b )\n{  vec2 d = abs(p)-b; return length(max(d,0.0)) + min(max(d.x,d.y),0.0); }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r; }\n\nvec2 rotatev2(vec2 p, float ang)\n{\n    float c = cos(ang); float s = sin(ang);\n    return vec2(p.x*c - p.y*s, p.x*s + p.y*c);\n}\n////-------------------\n\n//https://www.shadertoy.com/view/tlGBW3\n//Created by manu210404 in 2021-03-13\n#define POLY(N) (in vec2 p, in vec2[N] v) {const int n=v.length();float d=dot(p-v[0],p-v[0]);float s=1.;for(int i=0,j=n-1;i<n;j=i,i++){vec2 e=v[j]-v[i];vec2 w=p-v[i];vec2 b=w-e*clamp(dot(w,e)/dot(e,e),0.,1.);d=min(d,dot(b,b));bvec3 cond=bvec3(p.y>=v[i].y,p.y<v[j].y,e.x*w.y>e.y*w.x);if(all(cond)||all(not(cond))) s=-s;}return s*sqrt(d);}\n\n\nfloat sdPoly60 POLY(60)\nvec2 pt60[ 60]=vec2[](  \nvec2(.42,.44),vec2(.08,.71),vec2(.06,.75),vec2(.10,.73),vec2(.43,.47),\nvec2(.44,.47),vec2(.21,.80),vec2(.19,.87),vec2(.24,.82),vec2(.46,.49),\nvec2(.47,.49),vec2(.33,.90),vec2(.33,.93),vec2(.35,.90),vec2(.50,.51),\nvec2(.51,.51),vec2(.48,.92),vec2(.48,.95),vec2(.49,.92),vec2(.53,.51),\nvec2(.55,.51),vec2(.63,.88),vec2(.65,.92),vec2(.66,.88),vec2(.58,.51),\nvec2(.59,.50),vec2(.76,.81),vec2(.79,.84),vec2(.79,.80),vec2(.62,.48),\nvec2(.64,.47),vec2(.86,.68),vec2(.91,.70),vec2(.90,.67),vec2(.66,.45),\nvec2(.66,.44),vec2(.89,.53),vec2(.95,.54),vec2(.90,.50),vec2(.68,.41),\nvec2(.68,.40),vec2(.90,.40),vec2(.94,.38),vec2(.90,.36),vec2(.71,.36),\nvec2(.70,.35),vec2(.73,.31),vec2(.74,.29),vec2(.74,.29),vec2(.72,.30),\nvec2(.68,.36),vec2(.65,.42),vec2(.61,.46),vec2(.56,.48),vec2(.51,.48),\nvec2(.46,.46),vec2(.43,.43),vec2(.41,.44),vec2(.42,.45),vec2(.42,.44) );\n\n\nfloat sdPoly15 POLY(15)\nvec2 pt15[ 15]=vec2[](  \nvec2(.46,.42),vec2(.44,.44),vec2(.46,.46),vec2(.51,.48),vec2(.56,.48),\nvec2(.61,.46),vec2(.65,.42),vec2(.68,.37),vec2(.63,.37),vec2(.61,.41),\nvec2(.57,.44),vec2(.53,.44),vec2(.49,.43),vec2(.48,.43),vec2(.46,.42) );\n\n\nfloat sdPoly77 POLY(77)\nvec2 pt77[ 77]=vec2[](  \nvec2(.41,.32),vec2(.42,.35),vec2(.44,.38),vec2(.46,.40),vec2(.47,.41),\nvec2(.48,.41),vec2(.48,.40),vec2(.46,.40),vec2(.45,.39),vec2(.46,.38),\nvec2(.49,.38),vec2(.50,.39),vec2(.52,.38),vec2(.54,.37),vec2(.56,.35),\nvec2(.57,.33),vec2(.57,.30),vec2(.57,.29),vec2(.56,.28),vec2(.55,.26),\nvec2(.54,.25),vec2(.57,.27),vec2(.57,.28),vec2(.58,.29),vec2(.59,.29),\nvec2(.61,.29),vec2(.62,.27),vec2(.64,.25),vec2(.62,.24),vec2(.61,.23),\nvec2(.60,.22),vec2(.61,.22),vec2(.62,.23),vec2(.64,.24),vec2(.65,.23),\nvec2(.66,.23),vec2(.65,.25),vec2(.64,.26),vec2(.62,.29),vec2(.61,.30),\nvec2(.60,.30),vec2(.58,.30),vec2(.58,.32),vec2(.58,.34),vec2(.60,.33),\nvec2(.62,.33),vec2(.63,.34),vec2(.64,.35),vec2(.64,.36),vec2(.62,.35),\nvec2(.61,.34),vec2(.59,.34),vec2(.57,.35),vec2(.56,.36),vec2(.54,.38),\nvec2(.61,.39),vec2(.60,.40),vec2(.58,.41),vec2(.54,.42),vec2(.51,.41),\nvec2(.50,.40),vec2(.50,.40),vec2(.49,.41),vec2(.52,.42),vec2(.54,.43),\nvec2(.57,.42),vec2(.59,.42),vec2(.61,.41),vec2(.61,.41),vec2(.57,.44),\nvec2(.51,.44),vec2(.46,.42),vec2(.44,.40),vec2(.42,.37),vec2(.41,.33),\nvec2(.40,.32),vec2(.41,.32) );\n\n// pelo\nfloat sdPoly30 POLY(30)\nvec2 pt30[ 30]=vec2[](  \nvec2(.42,.34),vec2(.44,.40),vec2(.48,.43),vec2(.51,.44),vec2(.56,.44),\nvec2(.61,.42),vec2(.63,.39),vec2(.64,.34),vec2(.62,.26),vec2(.60,.23),\nvec2(.59,.22),vec2(.58,.24),vec2(.58,.27),vec2(.58,.27),vec2(.58,.31),\nvec2(.57,.32),vec2(.55,.30),vec2(.54,.30),vec2(.54,.32),vec2(.53,.28),\nvec2(.53,.27),vec2(.51,.28),vec2(.51,.31),vec2(.49,.32),vec2(.47,.33),\nvec2(.45,.34),vec2(.44,.34),vec2(.43,.33),vec2(.42,.33),vec2(.42,.34) );\n\n// rostro\nfloat sdPoly33 POLY(33)\nvec2 pt33[ 33]=vec2[](  \nvec2(.42,.33),vec2(.43,.30),vec2(.41,.26),vec2(.41,.25),vec2(.42,.25),\nvec2(.43,.25),vec2(.43,.23),vec2(.44,.22),vec2(.44,.22),vec2(.44,.22),\nvec2(.44,.21),vec2(.45,.20),vec2(.44,.20),vec2(.44,.18),vec2(.45,.17),\nvec2(.47,.18),vec2(.53,.20),vec2(.57,.22),vec2(.59,.23),vec2(.58,.26),\nvec2(.58,.29),vec2(.58,.31),vec2(.56,.33),vec2(.54,.30),vec2(.53,.32),\nvec2(.53,.27),vec2(.51,.28),vec2(.51,.31),vec2(.48,.33),vec2(.45,.34),\nvec2(.43,.34),vec2(.42,.34),vec2(.42,.33) );\n\n// pestana\nfloat sdPoly7 POLY(7)\nvec2 pt7[ 7]=vec2[](  \nvec2(.42,.32),vec2(.45,.33),vec2(.46,.32),vec2(.45,.32),vec2(.43,.32),\nvec2(.43,.32),vec2(.42,.32) );\n\n//ojo\nfloat sdPoly6 POLY(6)\nvec2 pt6[ 6]=vec2[](  \nvec2(.44,.31),vec2(.46,.31),vec2(.47,.30),vec2(.45,.29),vec2(.44,.30),\nvec2(.44,.31) );\n\nvec3 rayo(vec2 puv )\n{   vec2 uv=puv;\n    float s1 = 0.5+0.5*sin(iTime+uv.x*20.*(sin(iTime)+4.0));\n    float s2 = 0.5+0.25*sin(iTime+uv.x*100.*(sin(iTime)*2.0+2.0));\n    float r = pow(1.0-sqrt( abs(uv.y-s1)),1.5 );\n    float g = pow(1.0-sqrt( abs(uv.y-s2)),1.5 );\n    float b = 1.0*(r+g);\n   return vec3(r,g,b);\n}\n\nvec4 lines(vec2 position)\n{\tvec3 color;\n    if (position.x>0.4) return vec4(0.0);\n    float red1 = position.y-(0.02*cos(iTime+1.5)+1.)/2.+0.35;\n    float red2 = position.y-(0.02*cos(iTime+1.5)+1.)/2.+0.45;\n    \n\tred1 = 1.-pow(abs(red1*20.),.5);\n    red2 = 1.-pow(abs(red2*20.),.5);\n\tcolor= mix(vec3(0.),vec3(2.,0.,0.), red1);\n    color= mix(color,vec3(2.,0.,0.), red2);\n\t\n    color = clamp(color, 0.,2.);\n\tfloat m = max(max(color.x - 1.,color.y - 1.),color.z-1.);\n\tcolor += vec3(m);\n\tcolor = clamp(color, 0.,1.);\n\treturn vec4(color,float(distance(color,vec3(0.))));\n}\n\nvec3 RostroAquiles(in vec2 pp, vec3 col) \n{\n  vec2 p=pp;\n  float sd1 = sdPoly60(p-vec2(0.0,-0.2), pt60);  //casco1\n  float sd2 = sdPoly15(p-vec2(0.0,-0.2), pt15);  // casco2\n  float sd3 = sdPoly77(p-vec2(0.0,-0.2), pt77);  //casco3\n  float sd4 = sdPoly30(p-vec2(0.0,-0.2), pt30); //pelo\n  float sd5 = sdPoly33(p-vec2(0.0,-0.2), pt33); //rostro\n  float sd6 = sdPoly7(p-vec2(0.0,-0.2), pt7);  //pesta√±a\n  float sd7 = sdPoly6(p-vec2(0.0,-0.2), pt6);  //ojo\n  \n //col = mix(col,vec3(0.6, 0.4,1.0),S(sd1,0.0));\n  col = mix(col,vec3(0.7, 0.6,0.5),S(sd1,0.0));\n  col = mix(col,vec3(0.9, 0.8,0.6),S(sd2,0.0));\n  col = mix(col,vec3(0.98, 0.82,0.720),S(sd5,0.0));   //vec3(0.98, 0.82,0.720) piel\n  col = mix(col,vec3(0.1, 0.1,0.2),S(sd4,0.0));\n  col = mix(col,vec3(1.0, 0.3,0.6),S(sd3,0.0));\n  col = mix(col,vec3(0.2, 0.2,0.2),S(sd6,0.0));\n  col = mix(col,vec3(0.8, 0.2,0.2),S(sd7,0.0));\n  \n  vec3 cr1= rayo(p);\n  float sb1=sdBox(p-vec2(-0.1,0.1), vec2(0.5,0.0125) );\n  col = mix(col,cr1,S(sb1,0.0));\n  return col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   vec2 uv = (fragCoord-iResolution.xy)/iResolution.y;\n    //posicion\n    vec2 p=uv+vec2(1.5,0.7);\n    // escala\n    p.x*=0.7;\n    p.y*=0.8;\n    p*=0.5+1.0*abs(sin(iTime*0.35));\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    col=vec3((col.x+col.y+col.z)/3.0)*vec3(0.2,0.2,1.0);\n    \n     col= RostroAquiles( p,col*2.0);\n    \n    vec4 l1= lines(p);\n  col = mix(l1.xyz,col,S(l1.w,0.0));\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}