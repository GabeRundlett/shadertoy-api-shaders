{
    "Shader": {
        "info": {
            "date": "1702069891",
            "description": "Truchet Patterns",
            "flags": 0,
            "hasliked": 0,
            "id": "ctKfWW",
            "likes": 5,
            "name": "Truchet pattern - Punpun",
            "published": 3,
            "tags": [
                "patterns",
                "truchet"
            ],
            "usePreview": 0,
            "username": "punpun",
            "viewed": 121
        },
        "renderpass": [
            {
                "code": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265358979323846\n\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nvec2 truchetPattern(in vec2 _st, in float _index){\n    _index = fract(((_index-0.5)*2.0));\n    if (_index > 0.75) {\n        _st = vec2(1.0) - _st;\n    } else if (_index > 0.5) {\n        _st = vec2(1.0-_st.x,_st.y);\n    } else if (_index > 0.25) {\n        _st = 1.0-vec2(1.0-_st.x,_st.y);\n    }\n    return _st;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    st *= 10.0;\n    \n    // Animation\n    st = (st-vec2(5.0))*(abs(sin(iTime*0.2))*5.);\n    st.x += iTime*3.0;\n\n    vec2 ipos = floor(st);  // integer\n    vec2 fpos = fract(st);  // fraction\n\n    vec2 tile = truchetPattern(fpos, random( ipos ));\n    // tile = ipos/fpos;\n\n    float color = 0.0;\n\n    // Maze\n    color = smoothstep(tile.x-0.3,tile.x,tile.y)-smoothstep(tile.x,tile.x+0.3,tile.y);\n\t\n    // Circles\n    color /= (step(length(tile),0.6) -\n             step(length(tile),0.4) ) +\n            (step(length(tile-vec2(1.)),0.6) -\n             step(length(tile-vec2(1.)),0.4) );\n\n    // Truchet (2 triangles)\n    color /= step(tile.x,tile.y);\n\n    fragColor = vec4(vec3(color, 0., 0.),1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}