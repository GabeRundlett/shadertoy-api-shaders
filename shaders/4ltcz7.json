{
    "Shader": {
        "info": {
            "date": "1532059565",
            "description": "Friday practice. Getting the hang of using a transformation matrix. Also figuring out how to rotate things around an arbitrary pivot (move st before rotating).",
            "flags": 0,
            "hasliked": 0,
            "id": "4ltcz7",
            "likes": 3,
            "name": "Gooey Transformations",
            "published": 3,
            "tags": [
                "bookofshaders"
            ],
            "usePreview": 0,
            "username": "momoro",
            "viewed": 414
        },
        "renderpass": [
            {
                "code": "vec3 rect(vec2 st) {\n    vec2 f = max(abs(st) - .1, 0.);\n\tfloat c = length(f);\n\tc = smoothstep(.1, .101, c);\n    \n    return vec3(1.0 - c);\n}\n\n\nmat2 rotate2d(float _angle) {\n    return mat2(cos(_angle), -sin(_angle),\n                sin(_angle), cos(_angle));\n}\n\nmat2 scale(vec2 _scale) {\n    return mat2(_scale.x, 0.0,\n                0.0, _scale.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.y;\n\tst -= .5;\n    st.x -= .3;\n\n   \n    vec3 color = vec3(0.);\n    float u_time = iTime;\n    \n    float incr = .38 + sin(u_time/5.) / 5. + .2;\n    float offset = cos(u_time/2.)/10. + .2 ;\n    float time = u_time;\n    float s = 1.2;\n    st *= 3.;\n    st *= tan(atan(st.x * st.y + st.x/2.) + sin(u_time * 1.) / 2. + .2);\n    \n    for(float i=0.; i<20.; i++) {\n\t\t//Black square\n        color = clamp(color, vec3(0.,0.,0.), vec3(1.,1.,1.));\n\n    \tcolor = color - rect(scale(vec2(1. * s)) * (rotate2d(i/incr + time) *  (st) + offset));\n\n\t    // White outline \n        color = color + (rect(scale(vec2(.9 * s)) * (rotate2d(i/incr + time) *  (st) + offset)) -\n            \t \t\trect(scale(vec2(1. * s)) * (rotate2d(i/incr + time) *  (st) + offset)));\n    \t\n    }\n    \n    fragColor = vec4(color,1.0);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}