{
    "Shader": {
        "info": {
            "date": "1574099214",
            "description": "golfing of [url]https://shadertoy.com/view/WsyXW1[/url] (1190 chars)\nwhich fixed the math in 'Repeating Celtic Pattern' [url]https://www.shadertoy.com/view/3syXDz[/url]\nNB: I woundn't personally call it \"celtic\" ;-)",
            "flags": 0,
            "hasliked": 0,
            "id": "wsVSWW",
            "likes": 2,
            "name": "Celtic Pattern - Fixed (248 ch)",
            "published": 3,
            "tags": [
                "hexagon",
                "pattern",
                "tile",
                "2tweets",
                "repeat"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 366
        },
        "renderpass": [
            {
                "code": "// golfing of 1190 chars https://shadertoy.com/view/WsyXW1\n\n// --- -5 chars ( 248 )\n\n#define C(d,r)  smoothstep(-p, p, r+.9 - length( d-b + mod( V + vec2( int( V.y/2. +i ), 0 ), 2.) *a - a ) ) //\nvoid mainImage(out vec4 O, vec2 U) {\n    vec2 V, y = vec2(0,1), b = y*.66, a = vec2(1.154,1);\n     for( float i = -1., p = 10./iResolution.y ;\n          ++i < 3. ;\n          O[int(i)] = C( b , -.1 )\n                    - C( a-y,    )\n                    - C(-a+y,    )\n                    - C( b- ,    )\n       )\n        V = U * p *a.yx - i*b;\n}/*\n\n\n\n\n              \n// --- -2 chars ( 253 ) \n\n#define C(x,y,r)  smoothstep(-p, p, r+.9 - length( V + vec2(x,y-b) ) ) //\n#define mainImage( O, U )                         \\\n    float b = .66, a = 1.154,                     \\\n          i = -1., p = 10./iResolution.y;         \\\n     for( vec2 V ;                                \\\n          ++i < 3. ;                              \\\n          O[int(i)] = C( 0, b , -.1 )             \\\n                    - C( a,   ,     )             \\\n                    - C(-a,   ,     )             \\\n                    - C( 0, b-,     )             \\\n       )                                          \\\n        V = U * p,                                \\\n        V.y = V.y*a - i*b,                        \\\n        V = mod( V + vec2( int( V.y/2. +i ), 0 ), 2.) - 1., \\\n        V.x *= a                                 /*\n\n\n\n              \n \n// --- -3 chars ( 255 )\n\n#define C(x,y,r)  smoothstep(-p, p, r+.9 - length( V + vec2(x,y-b) ) ) //\n#define mainImage( O, U )                         \\\n    float b = .66, a = 1.154,                     \\\n          i = -1., p = 10./iResolution.y;         \\\n     for( vec2 V ;                                \\\n          ++i < 3. ;                              \\\n          O[int(i)] = C( 0, b , -.1 )             \\\n                    - C( a,   ,     )             \\\n                    - C(-a,   ,     )             \\\n                    - C( 0, b-,     )             \\\n       )                                          \\\n        V = U * p,                                \\\n        int( ( V.y = V.y*a - i*b )/2. +i ) % 2 > 0 ? V.x++ : a , \\\n        V = mod(V,2.) - 1.,                       \\\n        V.x *= a                                 /*\n\n\n              \n \n\n// --- -5 chars ( 258 ) \n\n#define C(x,y,r)  smoothstep(-p, p, r+.45 - length( V + vec2(x,y-b) ) ) //\n#define mainImage( O, U )                         \\\n    float b = .33, a = .577,                      \\\n          i = -1., p = 5./iResolution.y;          \\\n     for( vec2 V ;                                \\\n          ++i < 3. ;                              \\\n          O[int(i)] = C( 0, b , -.05 )            \\\n                    - C( a,   ,      )            \\\n                    - C(-a,   ,      )            \\\n                    - C( 0, b-,      )            \\\n       )                                          \\\n        V = U * p,                                \\\n        int( (V.y = V.y*2.*a - i*b) +i ) % 2 > 0 ? V.x += .5 : a , \\\n        V = fract(V) - .5,                        \\\n        V.x *= a+a                               /*\n\n\n              \n \n\n// --- -3 chars by mathmasterzach  -5 by Fab  ( 263 ) \n\n#define C(x,y,r)  smoothstep(-p, p, r+.45 - length( V + vec2(x,y-b) ) ) //\n#define mainImage( O, U )                         \\\n    float b = .33, a = .577,                      \\\n          i = -1., p = 5./iResolution.y;          \\\n     for( vec2 V ;                                \\\n          ++i < 3. ;                              \\\n          O[int(i)] = C( 0, b , -.05 )            \\\n                    - C( a,   ,      )            \\\n                    - C(-a,   ,      )            \\\n                    - C( 0, b-,      )            \\\n       )                                          \\\n        V = U * p,                                \\\n        mod( V.y = V.y*2.*a - i*b, 2. ) > 1. ^^ i==1. ? V.x += .5 : a , \\\n        V = fract(V) - .5,                        \\\n        V.x *= a+a                               /*\n\n              \n \n\n              \n// --- 271 chars\n\n#define C(x,y,r)  smoothstep(-p, p, r+.45 - length( V + vec2(x,y) ) ) //\n#define mainImage( O, U )                         \\\n    float b = .33, a = .577,                      \\\n          i = -1., p = 5./iResolution.y;          \\\n     for( vec2 V ;                                \\\n          i++ < 3. ;                              \\\n          O[int(i)] = C( 0, 0 , -.05 )            \\\n                    - C( a,-b ,      )            \\\n                    - C(-a,-b ,      )            \\\n                    - C( 0,b+b,      )            \\\n       )                                          \\\n        V = U * p,                                \\\n        V.y *= a+a ,                              \\\n        V -= i * vec2(.5, b),                     \\\n        mod(V.y,2.) > 1. ? V.x += .5 : a,         \\\n        V = fract(V) - .5,                        \\\n        V.x *= a+a                               /*\n\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}