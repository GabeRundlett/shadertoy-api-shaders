{
    "Shader": {
        "info": {
            "date": "1551653590",
            "description": "(1st shader on shadertoy. advance thanks for any advice!!)\n\na code rumination after Escher's exhibition.",
            "flags": 0,
            "hasliked": 0,
            "id": "3d23Rc",
            "likes": 24,
            "name": "penrose flower",
            "published": 3,
            "tags": [
                "triangle",
                "flower",
                "escher",
                "red",
                "penrose",
                "black",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "spleenooname",
            "viewed": 27221
        },
        "renderpass": [
            {
                "code": "\n#define luma( rgba ) ( dot( rgba, vec4(0.2126, 0.7152, 0.0722, 1.0) ) )\n\n#define R iResolution\n#define t iTime\n\nvoid mainImage( out vec4 O, in vec2 XY ) {\n    \n    // get normalized texture coordinates\n    vec2 p = (XY * 2. - R.xy ) /R.y;\n    \n    float a = -.5 + max( abs(p.x) + p.y, -p.y);\n    //float a = 0.15 + min( 1.0 * abs(p.x) + p.y * 0.75, -p.y); //like this variation:\n   \n    p = vec2( a, atan(p.x, p.y) );\n    \n    float c = 25. * log(t) * sin(t * .25 ) / t;\n    \n    vec4 s = .25 * cos( vec4(c, 1., 2., 0.) + t - p.y );\n    \n    vec4 e = s.yzxy;\n       \n    vec4 f = min(p.x - s, e - p.x); \n    \n    vec4 col = dot( clamp( f * 100., 0., 1.), 20. * (s - e) ) * (e -.1) ;\n    \n    // output color with luma subtract\n    O = vec4(1.0, 0.0, 0.0, 1.0) - luma(col);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}