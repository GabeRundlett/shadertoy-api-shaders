{
    "Shader": {
        "info": {
            "date": "1644050435",
            "description": "integers and their divisions by power of 2 can be stored exactly in floats.\nBut division often breaks this, and thus mod as well ( in particular, 3./3. is not exactly 1 ).\nIf you see a grid of dots, you have exact (1.+z)/(64.+z) and mod(U,3).\nTell me !",
            "flags": 0,
            "hasliked": 0,
            "id": "7djyDy",
            "likes": 8,
            "name": "test: exact floats",
            "published": 3,
            "tags": [
                "test",
                "glsl"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 323
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n    O -= O;\n    float z = min(0.,iTime); // to prevent compile-time optimizations\n    \n    for(float i=z; i<1.-z; i+= (1.+z)/(64.+z) )\n        O += vec4( mod(U,3.) == vec2(i) );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}