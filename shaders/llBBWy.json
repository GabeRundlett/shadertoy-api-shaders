{
    "Shader": {
        "info": {
            "date": "1516992709",
            "description": "2d truchet with a 3d effect on it",
            "flags": 0,
            "hasliked": 0,
            "id": "llBBWy",
            "likes": 8,
            "name": "shiny 2d truchet",
            "published": 3,
            "tags": [
                "2d",
                "truchet",
                "ortographic"
            ],
            "usePreview": 0,
            "username": "abje",
            "viewed": 609
        },
        "renderpass": [
            {
                "code": "#define HASHSCALE1 .1031\n#define HASHSCALE3 vec3(.1031, .1030, .0973)\n#define HASHSCALE4 vec4(.1031, .1030, .0973, .1099)\n\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec4 shade(vec3 ro, vec3 normal, vec3 light, float lightlen) {\n    vec3 rd = vec3(0,0,1);\n    vec4 fragColor = vec4(1);\n    float ambient = 0.1;\n\n    vec3 color = texture(iChannel0, ro*0.05,0.0).xyz;\n    \n    float diffusion = dot(-light,normal)*2.0/(lightlen*lightlen*2.0+1.0);\n\n    float lighting = clamp(diffusion,ambient,1.0);\n\n    fragColor.xyz = min(color*lighting,1.0);\n    fragColor += clamp((dot(reflect(rd,normal),-light)*20.0-19.0)/(lightlen+1.0),0.0,1.0);\n    return (fragColor);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.0*(fragCoord.xy*2.0-iResolution.xy) / iResolution.y+iTime;\n    \n    vec2 cell = floor(uv);\n    \n    vec2 p = uv-cell-0.5;\n    \n    vec3 lightdelta = vec3(cos(iTime)*2.0,sin(iTime)*2.0,-1.5);\n    vec3 lightpos = vec3(iTime,iTime,0)+lightdelta;\n    float flip = step(hash12(cell),0.5)*2.0-1.0;\n    p.x *= flip;\n    \n    float torus = step(dot(p,vec2(1)),0.0)-0.5;\n    \n    float len = 5.0*abs(length(p+torus)-0.5);\n    \n    if (len > 1.0) {\n        vec2 uv = 2.0*(fragCoord.xy*2.0-iResolution.xy) / iResolution.y+iTime+lightdelta.xy*0.2;\n\n        vec2 cell = floor(uv);\n\n        vec2 p = uv-cell-0.5;\n\n        vec3 lightpos = vec3(iTime+cos(iTime)*2.0,iTime+sin(iTime)*2.0,-1.5);\n        float flip = step(hash12(cell),0.5)*2.0-1.0;\n        p.x *= flip;\n\n        float torus = step(dot(p,vec2(1)),0.0)-0.5;\n\n        float len = 5.0*abs(length(p+torus)-0.5);\n        \n        fragColor = vec4(0.4,0.6,0.2,1);\n        fragColor *= vec4(clamp(len-0.5,0.2,1.0));\n        \n    } else {\n    \n        float depth = sqrt(1.0-len*len);\n\n        vec3 p2 = vec3(uv,-depth);\n\n        vec3 p3 = vec3(p+torus,-depth);\n\n        p3.xy -= normalize(p3.xy)*0.5;\n        p3 = normalize(p3);\n        p3.x *= flip;\n        vec3 light = - lightpos + p2;\n        float lightlen = length(light);\n        light /= lightlen;\n\n        fragColor.xyz = vec3(dot(p3,light))/(max(lightlen,2.0)-1.0);\n\n        fragColor = shade(p2,p3,light,lightlen);\n    }\n    fragColor += vec4(clamp(1.0-length(uv-lightpos.xy)*5.0,0.0,1.0));\n    \n    fragColor = sqrt(fragColor);\n    \n    //fragColor = vec4(mod(cell,2.0),max(p.x,p.y),1);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "volume",
                        "id": 40,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}