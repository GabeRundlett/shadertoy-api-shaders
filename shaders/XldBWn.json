{
    "Shader": {
        "info": {
            "date": "1539203625",
            "description": "This was an idea about how to get a somewhat random one-dimensional \"noise\" pattern with some coherence across multiple length scales: u ^ u << 2. I added some cubic sampling jitter to break up the obtrusive aliasing patterns from the rotation.",
            "flags": 0,
            "hasliked": 0,
            "id": "XldBWn",
            "likes": 1,
            "name": "Fractal striations",
            "published": 3,
            "tags": [
                "fractal",
                "1d"
            ],
            "usePreview": 0,
            "username": "xentrac",
            "viewed": 428
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float scale = 1./min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord*scale;\n    float t = iTime / 40.;\n\n    vec2 fpos = fragCoord/iResolution.xy;\n    float jitter = 20. * (fpos.x + fpos.y + fract(iTime));\n    jitter = 2. * sin(iTime/16.18) * fract(jitter*jitter*jitter);\n\n    int u = int(dot(uv, 300. * vec2(cos(t), sin(t))) + jitter);\n    float i = float((u ^ u << 2) * 15 & 255)/255.0;\n    \n    fragColor = vec4(0.5 + 0.5*i*vec3(1,5,2),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}