{
    "Shader": {
        "info": {
            "date": "1545917833",
            "description": "experiments with math behind the perspective and rotation, at the end I also added a bit of color",
            "flags": 0,
            "hasliked": 0,
            "id": "3dfGW8",
            "likes": 4,
            "name": "ouroboros 2",
            "published": 3,
            "tags": [
                "endless",
                "loop",
                "dots",
                "rotation",
                "perspective"
            ],
            "usePreview": 0,
            "username": "morisil",
            "viewed": 585
        },
        "renderpass": [
            {
                "code": "#define SCALE 50.0\n\n// negative speed = moving backwards \n#define SPEED 60.0\n\n#define SCENE_ROTATION_SPEED 0.2\n\n#define PLANE_ROTATION_SPEED -1.0\n\n#define DOT_SHARPNESS 5.0\n\nmat2 rotate2d(float angle){\n    return mat2(\n        cos(angle), -sin(angle),\n        sin(angle), cos(angle)\n    );\n}\n\n\nfloat getColor(vec2 pixel, vec2 trans, float delay) {\n    float value = cos(trans.x);\n    value += cos(trans.y - (iTime - delay) * SPEED);\n    value = (value + 2.0) / 4.0;\n    value = pow(value, DOT_SHARPNESS);\n    value *= abs(pixel.y * 2.0);\n    return value;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 pixel = (fragCoord -.5 * iResolution.xy) / iResolution.y;\n    pixel *= rotate2d(iTime * SCENE_ROTATION_SPEED);\n    vec2 trans = vec2(pixel.x / pixel.y, log(abs(pixel.y)));\n    trans *= rotate2d(iTime * PLANE_ROTATION_SPEED);    \n    trans *= SCALE;\n    \n    \n    float value = cos(trans.x);\n    value += cos(trans.y - iTime * SPEED);\n    value = (value + 2.0) / 4.0;\n    value = pow(value, DOT_SHARPNESS);\n    // apply air perspective\n    value *= abs(pixel.y * 2.0);\n    fragColor = vec4(\n        getColor(pixel, trans, sin(iTime * 1.0) * 0.015),\n        getColor(pixel, trans, sin(iTime * 1.1) * 0.015),\n        getColor(pixel, trans, sin(iTime * 1.2) * 0.015),\n        1.0\n    );\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}