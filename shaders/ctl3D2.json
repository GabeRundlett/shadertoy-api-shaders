{
    "Shader": {
        "info": {
            "date": "1672530242",
            "description": "happy new year",
            "flags": 32,
            "hasliked": 0,
            "id": "ctl3D2",
            "likes": 6,
            "name": "firework explosion",
            "published": 3,
            "tags": [
                "firework"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 223
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 o_trn_fc_nor = fragCoord.xy / iResolution.xy;\n    vec2 o_trn_mo_nor = iMouse.xy / iResolution.xy;\n    \n    vec4 o_col = texture(iChannel0, o_trn_fc_nor);\n    \n    fragColor = vec4(o_col);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float f_n_rand(float p)\n{\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\nvec3 f_o_dist_it_tnor_firework(\n    vec2 o_trn_fc_nor_offset,\n    float n_duration, \n    vec2 o_rocket_direction, \n    float n_explosion_speed, \n    float n_explosion_start_nor,\n    float n_its//iterations\n){\n    float n_tau = 6.2831;\n    float n_mod = n_duration;\n\n    float n_tmod = mod(iTime,n_mod);\n    float n_it_min = 1.;\n    float n_dist_min = 1.;\n    for(float n_it =0.; n_it < n_its; n_it+=1.){\n        float n_rand_flicker = f_n_rand(n_it+fract(iTime)); \n    \n        float n_ang_nor_snapped = (1./n_its)*n_it;\n\n        float n_rand = f_n_rand(n_it*floor(iTime/n_mod));\n        float n_t_explosion = float(n_tmod > (n_mod*n_explosion_start_nor))*(n_tmod-(n_mod*n_explosion_start_nor));\n\n        float n_radius = n_t_explosion*n_explosion_speed;//no explosion\n        vec2 o_rocket_velocity = o_rocket_direction * n_tmod;\n        vec2 o_p= o_rocket_velocity;\n        \n        o_p += vec2(\n            cos((n_ang_nor_snapped+(1./n_its/2.))*n_tau)*n_radius, \n            sin((n_ang_nor_snapped+(1./n_its/2.))*n_tau)*n_radius\n        );\n\n        \n        vec2 o_gravity = vec2(\n            0., \n            //pow((1.+n_tmod), 2.), \n               pow((n_tmod), 2.)*9.81//i know that this is wrong :shrug:\n        );\n        o_p -= o_gravity;\n\n        float n_size = 0.1;\n\n        float n_dist = length(o_p-o_trn_fc_nor_offset);\n        if(n_tmod > (n_mod*n_explosion_start_nor)){\n            n_dist = n_dist*n_rand_flicker+0.5*0.01;\n            n_size = n_rand*0.1;\n            //n_dist = float(n_dist > n_rand_flicker*0.3);\n        }\n\n        n_dist = smoothstep(n_size, n_size*2., n_dist);\n\n        if(n_dist < n_dist_min){\n            n_dist_min = n_dist;\n            n_it_min = n_it;\n        }\n\n    }\n    //fadeout\n    float n_start_fadeout_nor = 0.8;\n    float n_t_diff = n_tmod - (n_mod*n_start_fadeout_nor);\n    if(n_t_diff > 0.){\n        float n_t_diff_nor = n_t_diff/((1.-n_start_fadeout_nor)*n_mod);\n        n_dist_min += n_t_diff_nor*n_t_diff_nor;\n    }\n\n    return vec3(n_dist_min, n_it_min, iTime/n_mod);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 o_trn_fc_nor = fragCoord.xy / iResolution.xy;\n    vec2 o_trn_mo_nor = iMouse.xy / iResolution.xy;\n    \n    vec4 o_col_last = texture(iChannel0, o_trn_fc_nor);\n    \n    vec2 o_trn_fc_nor_offset = o_trn_fc_nor - vec2(0.5);\n    vec2 o_trn_mo_nor_offset = o_trn_mo_nor - vec2(0.5);\n    o_trn_fc_nor_offset*=80.;\n    vec2 o_diff = vec2(0.)-o_trn_fc_nor_offset;\n    float n_tau = 6.2831;\n    \n    float n_ang_nor = fract(((atan(o_diff.y, o_diff.x)+(n_tau/2.))/n_tau));\n    \n    vec4 o_col_min = vec4(1.);\n    \n    float n_its = 20.;\n    float n_explosion_start_nor_min = 0.;\n    float n_explosion_start_nor1 = 0.5;\n    vec3 o_dist_it_tnor_firework = f_o_dist_it_tnor_firework(\n        o_trn_fc_nor_offset,\n        4., \n        vec2(2.5, 33.), \n        3., \n        n_explosion_start_nor1, \n        n_its\n    );\n    float n_explosion_start_nor2 = 0.2;\n    vec3 o_dist_it_tnor_firework2 = f_o_dist_it_tnor_firework(\n        o_trn_fc_nor_offset,//vec2 o_trn_fc_nor_offset,\n        5.,//float n_duration, \n        vec2(-4.5, 25.),//vec2 o_rocket_direction, \n        0.3,//float n_explosion_speed, \n        n_explosion_start_nor2,//float n_explosion_start_nor,\n        33.//float n_its//iterations\n    );\n    \n    vec3 o_dist_it_tnor_firework_min = vec3(1.);\n    n_explosion_start_nor_min = n_explosion_start_nor2;\n    o_dist_it_tnor_firework_min = o_dist_it_tnor_firework2;\n    if(o_dist_it_tnor_firework.x < o_dist_it_tnor_firework2.x){\n        o_dist_it_tnor_firework_min = o_dist_it_tnor_firework;\n        n_explosion_start_nor_min = n_explosion_start_nor1;\n    }\n\n    //vec4 o_col = vec4(o_dist_it_tnor_firework_min.x);\n    vec4 o_col = vec4(\n    o_dist_it_tnor_firework2.x*o_dist_it_tnor_firework.x);\n    o_col = 1.-o_col;\n    o_col *= vec4(\n        f_n_rand(o_dist_it_tnor_firework_min.y*3.)*0.2+0.8, \n        f_n_rand(o_dist_it_tnor_firework_min.y)*0.5, \n        f_n_rand(o_dist_it_tnor_firework_min.y*2.)*0.8, \n        1.\n    );\n   // if(fract(o_dist_it_tnor_firework_min.z) > n_explosion_start_nor_min){\n    //    o_col = o_col*0.5;\n    //}\n    \n    o_col += mix(\n        o_col_last, \n        o_col, \n        0.3\n    );\n    //if(o_dist_it_firework.x>.9){o_col = vec4(1.);}\n\n    //o_col+=o_col_last;\n    \n    fragColor = o_col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}