{
    "Shader": {
        "info": {
            "date": "1708545403",
            "description": "magnets you can play with",
            "flags": 32,
            "hasliked": 0,
            "id": "l32GDm",
            "likes": 39,
            "name": "Little Magnets",
            "published": 3,
            "tags": [
                "physics",
                "boxes",
                "magnetism",
                "body",
                "magnets",
                "rigid"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 314
        },
        "renderpass": [
            {
                "code": "Main {\n\n    Q = A(U);\n    Q = sin(-2.+12./N/N*length(Q.xy)+vec4(1,2,3,4));\n    vec2 u = U, v = U;\n    float h = 0.;\n    for (float i = 0.; i < 40.; i++) {\n        h += texture(iChannel1,1.5*u/R.y).x/40.;\n        h += texture(iChannel1,1.5*u/R.y).x/40.;\n        vec2 du = texture(iChannel0,u/R).xy;\n        if (length(du)>0.)u += normalize(du);\n        vec2 dv = texture(iChannel0,u/R).xy;\n        if (length(dv)>0.)v -= normalize(dv);\n    }\n    Q *= .5+.5*h;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define N 2.\n\n#define dim .2\n\n#define circles vec3[41] (\\\n                         vec3(0,0,1),\\\n                         vec3(.828449, 0.828449,  .1716),\\\n                         vec3(.97042,  .97042,    .02995),\\\n                         vec3(.58612986,.914268197,.08573),\\\n                         vec3(.45330248,.948901589,.0511028358),\\\n                         vec3(.37024959,.966959162,.03399144),\\\n                         vec3(.31273385,.975663696,.0243671298),\\\n                         vec3(.914268197,.58612986,.08573),\\\n                         vec3(.948901589,.45330248,.0511028358),\\\n                         vec3(.966959162,.37024959,.03399144),\\\n                         vec3(.975663696,.31273385,.0243671298),\\\n                         vec3(-.828449, 0.828449,  .1716),\\\n                         vec3(-.97042,  .97042,    .02995),\\\n                         vec3(-.58612986,.914268197,.08573),\\\n                         vec3(-.45330248,.948901589,.0511028358),\\\n                         vec3(-.37024959,.966959162,.03399144),\\\n                         vec3(-.31273385,.975663696,.0243671298),\\\n                         vec3(-.914268197,.58612986,.08573),\\\n                         vec3(-.948901589,.45330248,.0511028358),\\\n                         vec3(-.966959162,.37024959,.03399144),\\\n                         vec3(-.975663696,.31273385,.0243671298),\\\n                         vec3(-.828449, -0.828449,  .1716),\\\n                         vec3(-.97042,  -.97042,    .02995),\\\n                         vec3(-.58612986,-.914268197,.08573),\\\n                         vec3(-.45330248,-.948901589,.0511028358),\\\n                         vec3(-.37024959,-.966959162,.03399144),\\\n                         vec3(-.31273385,-.975663696,.0243671298),\\\n                         vec3(-.914268197,-.58612986,.08573),\\\n                         vec3(-.948901589,-.45330248,.0511028358),\\\n                         vec3(-.966959162,-.37024959,.03399144),\\\n                         vec3(-.975663696,-.31273385,.0243671298),\\\n                         vec3(.828449, -0.828449,  .1716),\\\n                         vec3(.97042,  -.97042,    .02995),\\\n                         vec3(.58612986,-.914268197,.08573),\\\n                         vec3(.45330248,-.948901589,.0511028358),\\\n                         vec3(.37024959,-.966959162,.03399144),\\\n                         vec3(.31273385,-.975663696,.0243671298),\\\n                         vec3(.914268197,-.58612986,.08573),\\\n                         vec3(.948901589,-.45330248,.0511028358),\\\n                         vec3(.966959162,-.37024959,.03399144),\\\n                         vec3(.975663696,-.31273385,.0243671298))\n                         \n\n#define A(U) texelFetch(iChannel0,ivec2(U),0)\n#define B(U) texelFetch(iChannel1,ivec2(U),0)\n\n#define Main void mainImage(out vec4 Q, in vec2 U) \n\n#define R iResolution.xy\n\n#define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nfloat roundBox ( vec2 p, vec2 b, float r) \n    \t\t{\n    \t\t    vec2 h = 0.5*vec2(b.x,b.y)-r;\n    \t\t    p.xy = abs(p.xy);\n    \t\t    p.xy = p.xy-clamp(p.xy,-h,h);\n    \t\t    return length(p)-r;\n    \t\t}\n\nvec2 integral (float X, float Y, float A, float B, float d) {\n                    \n    return vec2 (\n        (\n            (B*log((-d-Y)*(-d-Y)+(+d-X)*(+d-X))-2.*A*atan((+d-X)/(-d-Y))) - \n            (B*log((-d-Y)*(-d-Y)+(-d-X)*(-d-X))-2.*A*atan((-d-X)/(-d-Y)))\n        ) - (\n            (B*log((+d-Y)*(+d-Y)+(+d-X)*(+d-X))-2.*A*atan((+d-X)/(+d-Y))) - \n            (B*log((+d-Y)*(+d-Y)+(-d-X)*(-d-X))-2.*A*atan((-d-X)/(+d-Y)))\n        )  , \n        (\n            (-A*log((+d-Y)*(+d-Y)+(+d-X)*(+d-X))+2.*B*atan((+d-Y)/(+d-X))) - \n            (-A*log((-d-Y)*(-d-Y)+(+d-X)*(+d-X))+2.*B*atan((-d-Y)/(+d-X)))\n        ) -  (\n            (-A*log((+d-Y)*(+d-Y)+(-d-X)*(-d-X))+2.*B*atan((+d-Y)/(-d-X))) - \n            (-A*log((-d-Y)*(-d-Y)+(-d-X)*(-d-X))+2.*B*atan((-d-Y)/(-d-X)))\n        )\n    );\n}\nvec2 fd_grad_integral (vec2 m, float X, float Y, float A, float B, float d) {\n    float e = 1e-5;\n    float px = dot(m,integral(X+e,Y,A,B,d));\n    float nx = dot(m,integral(X-e,Y,A,B,d));\n    float py = dot(m,integral(X,Y+e,A,B,d));\n    float ny = dot(m,integral(X,Y-e,A,B,d));\n    \n    return .5*vec2(px-nx,py-ny)/e;\n}\nvec2 fd_grad_integral (float X, float Y, float A, float B, float d) {\n    float e = 1e-5;\n    vec2 px = integral(X+e,Y,A,B,d);\n    vec2 nx = integral(X-e,Y,A,B,d);\n    vec2 py = integral(X,Y+e,A,B,d);\n    vec2 ny = integral(X,Y-e,A,B,d);\n    \n    return .5*vec2(px.x-nx.x,py.y-ny.y)/e;\n}\nvec2 grad_integral (float X, float Y, float A, float B, float d) {\n    return vec2(\n        (\n            (2.*(B*X+d*(-B-A)-A*Y)/(X*X-2.*d*X+2.*d*d+2.*Y*d+Y*Y)) - \n            (2.*(B*X+d*(+B-A)-A*Y)/(X*X+2.*d*X+2.*d*d+2.*Y*d+Y*Y))\n        ) - (\n            (2.*(B*X+d*(-B+A)-A*Y)/(X*X-2.*d*X+2.*d*d-2.*Y*d+Y*Y)) - \n            (2.*(B*X+d*(+B+A)-A*Y)/(X*X+2.*d*X+2.*d*d-2.*Y*d+Y*Y))\n        )  , \n        (\n            (-2.*(A*Y+d*(+B-A)-B*X)/(Y*Y-2.*d*Y+2.*d*d-2.*X*d+X*X)) - \n            (-2.*(A*Y+d*(+B+A)-B*X)/(Y*Y+2.*d*Y+2.*d*d-2.*X*d+X*X))\n        ) -  (\n            (-2.*(A*Y+d*(-B-A)-B*X)/(Y*Y-2.*d*Y+2.*d*d+2.*X*d+X*X)) - \n            (-2.*(A*Y+d*(-B+A)-B*X)/(Y*Y+2.*d*Y+2.*d*d+2.*X*d+X*X))\n        )\n    );\n}\n/*\nvec2 grad_integral (float X, float Y, float A, float B, float d) {\n    return vec2(\n         (\n            (\n                -2.*B*(+d-X)/( (+d-X)*(+d-X)+(-d-Y)*(-d-Y) ) -\n                -2.*A/(-d-Y)/( (+d-X)*(+d-X)/(-d-Y)/(-d-Y)+1.)\n            ) - (\n                -2.*B*(-d-X)/( (-d-X)*(-d-X)+(-d-Y)*(-d-Y) ) -\n                -2.*A/(-d-Y)/( (-d-X)*(-d-X)/(-d-Y)/(-d-Y)+1.)\n            )\n         ) - (\n            (\n                -2.*B*(+d-X)/( (+d-X)*(+d-X)+(+d-Y)*(+d-Y) ) -\n                -2.*A/(+d-Y)/( (+d-X)*(+d-X)/(+d-Y)/(+d-Y)+1.)\n            ) - (\n                -2.*B*(-d-X)/( (-d-X)*(-d-X)+(+d-Y)*(+d-Y) ) -\n                -2.*A/(+d-Y)/( (-d-X)*(-d-X)/(+d-Y)/(+d-Y)+1.)\n            )\n         ) ,\n         \n          (\n            (\n                -2.*A*(+d-X)/( (+d-X)*(+d-X)+(+d-Y)*(+d-Y) ) -\n                -2.*B/(+d-Y)/( (+d-X)*(+d-X)/(+d-Y)/(+d-Y)+1.)\n            ) - (\n                -2.*A*(+d-X)/( (-d-X)*(-d-X)+(-d-Y)*(-d-Y) ) -\n                -2.*B/(-d-Y)/( (+d-X)*(+d-X)/(-d-Y)/(-d-Y)+1.)\n            )\n         ) - (\n            (\n                -2.*A*(-d-X)/( (-d-X)*(-d-X)+(+d-Y)*(+d-Y) ) -\n                -2.*B/(+d-Y)/( (-d-X)*(-d-X)/(+d-Y)/(+d-Y)+1.)\n            ) - (\n                -2.*A*(-d-X)/( (-d-X)*(-d-X)+(-d-Y)*(-d-Y) ) -\n                -2.*B/(-d-Y)/( (-d-X)*(-d-X)/(-d-Y)/(-d-Y)+1.)\n            )\n         ) \n    );\n}*/\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "\nvoid impulse (vec4 p, vec4 v, vec2 pos, vec2 im, vec2 dv, inout vec4 f) {\n    im -= .5*dv;\n    f.xy += .2*im * dot(normalize(p.xy-pos),normalize(im));\n    f.z  += .2*dot(vec2(im.y,-im.x),normalize(p.xy-pos));\n}\nMain {\n    U = floor(U);\n    if (U.y>1.||U.x>=N) discard;\n    vec4 p = A(vec2(U.x,0));\n    vec4 v = A(vec2(U.x,1));\n    \n    vec2 m = vec2(0,1)*ei(p.z);\n    \n    \n    vec4 f = vec4(0,-.0000,0,0);\n    for (int j = 0; j < 41; j++) {\n        vec3 c = dim*circles[j];\n        c.xy *= ei(p.z);\n        c.xy += p.xy;\n        for (float i = 0.; i < N; i++) if (i!=U.x) {\n            vec4 p1 = A(vec2(i,0));\n            vec4 v1 = A(vec2(i,1));\n            \n            \n            if (j == 0) {\n                vec2 r = p1.xy-c.xy;\n                float eps = 1e-4;\n                vec2 rpx = (r+vec2(eps,0))*ei(-p1.z);\n                vec2 rnx = (r-vec2(eps,0))*ei(-p1.z);\n                vec2 rpy = (r+vec2(0,eps))*ei(-p1.z);\n                vec2 rny = (r-vec2(0,eps))*ei(-p1.z);\n                r *= ei(-p1.z);\n                float px = dot(m,integral(rpx.x,rpx.y,0.,1.,dim)*ei(p1.z));\n                float nx = dot(m,integral(rnx.x,rnx.y,0.,1.,dim)*ei(p1.z));\n                float py = dot(m,integral(rpy.x,rpy.y,0.,1.,dim)*ei(p1.z));\n                float ny = dot(m,integral(rny.x,rny.y,0.,1.,dim)*ei(p1.z));\n                vec2 fp = -.0005*c.z*c.z*.5/eps*vec2(px-nx,py-ny);\n                f.xy += fp;\n                f.z += .05*dot(vec2(m.y,-m.x),c.z*c.z*integral(r.x,r.y,0.,1.,dim)*ei(p1.z));\n            }\n            //else impulse(p,v,c.xy,fp,vec2(0),f);\n            \n            \n            if (length(p.xy-p1.xy)<=4.*dim)\n            for (int k = 0; k < 41; k++) {\n                vec3 c1 = dim*circles[k];\n                c1.xy *= ei(p1.z);\n                c1.xy += p1.xy;\n                if (length(c.xy-c1.xy)<c.z+c1.z) {\n                    vec2 pos = (c.xy*c.z+c1.xy*c1.z)/(c.z+c1.z);\n                    vec2 im = .2*(length(c.xy-c1.xy)-c.z-c1.z)*normalize(c1.xy-c.xy);\n                    vec2 w = p.xy-pos;\n                    w = vec2(-w.y,w.x);\n                    vec2 dv = v.xy + w*v.z;\n                    vec2 w1 = p1.xy-pos;\n                    w = vec2(-w.y,w.x);\n                    vec2 dv1 = v1.xy + w1*v1.z;\n                    impulse(p,v,pos,im,0.*(dv-dv1),f);\n                }\n            }\n        }\n        if (c.y-c.z<-1.) {\n            vec2 pos = vec2(c.x,-1.);\n            vec2 im = vec2(0,-.2*(c.y-c.z+1.));\n            vec2 w = p.xy-pos;\n            w = vec2(-w.y,w.x);\n            vec2 dv = v.xy + w*v.z;\n            impulse(p,v,pos,im,dv,f);\n        }\n        if (c.y-c.z>+1.) {\n            vec2 pos = vec2(c.x,+1.);\n            vec2 im = vec2(0,+.2*(c.y-c.z-1.));\n            vec2 w = p.xy-pos;\n            w = vec2(-w.y,w.x);\n            vec2 dv = v.xy + w*v.z;\n            impulse(p,v,pos,im,dv,f);\n        }\n        float bx = R.x/R.y;\n        if (c.x-c.z<-bx) {\n            vec2 pos = vec2(-bx,c.y);\n            vec2 im = vec2(-.2*(c.x-c.z+bx),0);\n            vec2 w = p.xy-pos;\n            w = vec2(-w.y,w.x);\n            vec2 dv = v.xy + w*v.z;\n            impulse(p,v,pos,im,dv,f);\n        }\n        if (c.x+c.z>+bx) {\n            vec2 pos = vec2(+bx,c.y);\n            vec2 im = vec2(+.2*(c.x+c.z-bx),0);\n            vec2 w = p.xy-pos;\n            w = vec2(-w.y,w.x);\n            vec2 dv = v.xy + w*v.z;\n            impulse(p,v,pos,im,dv,f);\n        }\n    }\n    \n    float dt = 1.;\n    vec2 mo = 2.*(iMouse.xy-.5*R)/R.y;\n    if (iMouse.z>0.&&length(p.xy-mo)<dim) f.xy += .1*(mo-p.xy) - .01*v.xy;\n    \n    v.xyz +=    dt*f.xyz - dt*.01*v.xyz;\n    p.xyz += .5*dt*f.xyz + dt*v.xyz;\n    \n    \n    if (iFrame < 1) {\n        \n        p.xy = vec2(U.x/(N-1.)*2.-1.,.5-.5*U.x/(N-1.));\n        p.z =3.+U.x;\n        v = vec4(0);\n    \n    }\n    \n    if (U.y < 1.) Q = p; else Q = v;\n\n    \n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "\nvoid impulse (vec4 p, vec4 v, vec2 pos, vec2 im, vec2 dv, inout vec4 f) {\n    im -= .5*dv;\n    f.xy += .2*im * dot(normalize(p.xy-pos),normalize(im));\n    f.z  += .2*dot(vec2(im.y,-im.x),normalize(p.xy-pos));\n}\nMain {\n    U = floor(U);\n    if (U.y>1.||U.x>=N) discard;\n    vec4 p = A(vec2(U.x,0));\n    vec4 v = A(vec2(U.x,1));\n    \n    vec2 m = vec2(0,1)*ei(p.z);\n    \n    \n    vec4 f = vec4(0,-.0000,0,0);\n    for (int j = 0; j < 41; j++) {\n        vec3 c = dim*circles[j];\n        c.xy *= ei(p.z);\n        c.xy += p.xy;\n        for (float i = 0.; i < N; i++) if (i!=U.x) {\n            vec4 p1 = A(vec2(i,0));\n            vec4 v1 = A(vec2(i,1));\n            \n            \n            if (j == 0) {\n                vec2 r = p1.xy-c.xy;\n                float eps = 1e-4;\n                vec2 rpx = (r+vec2(eps,0))*ei(-p1.z);\n                vec2 rnx = (r-vec2(eps,0))*ei(-p1.z);\n                vec2 rpy = (r+vec2(0,eps))*ei(-p1.z);\n                vec2 rny = (r-vec2(0,eps))*ei(-p1.z);\n                r *= ei(-p1.z);\n                float px = dot(m,integral(rpx.x,rpx.y,0.,1.,dim)*ei(p1.z));\n                float nx = dot(m,integral(rnx.x,rnx.y,0.,1.,dim)*ei(p1.z));\n                float py = dot(m,integral(rpy.x,rpy.y,0.,1.,dim)*ei(p1.z));\n                float ny = dot(m,integral(rny.x,rny.y,0.,1.,dim)*ei(p1.z));\n                vec2 fp = -.0005*c.z*c.z*.5/eps*vec2(px-nx,py-ny);\n                f.xy += fp;\n                f.z += .05*dot(vec2(m.y,-m.x),c.z*c.z*integral(r.x,r.y,0.,1.,dim)*ei(p1.z));\n            }\n            //else impulse(p,v,c.xy,fp,vec2(0),f);\n            \n            \n            if (length(p.xy-p1.xy)<=4.*dim)\n            for (int k = 0; k < 41; k++) {\n                vec3 c1 = dim*circles[k];\n                c1.xy *= ei(p1.z);\n                c1.xy += p1.xy;\n                if (length(c.xy-c1.xy)<c.z+c1.z) {\n                    vec2 pos = (c.xy*c.z+c1.xy*c1.z)/(c.z+c1.z);\n                    vec2 im = .2*(length(c.xy-c1.xy)-c.z-c1.z)*normalize(c1.xy-c.xy);\n                    vec2 w = p.xy-pos;\n                    w = vec2(-w.y,w.x);\n                    vec2 dv = v.xy + w*v.z;\n                    vec2 w1 = p1.xy-pos;\n                    w = vec2(-w.y,w.x);\n                    vec2 dv1 = v1.xy + w1*v1.z;\n                    impulse(p,v,pos,im,0.*(dv-dv1),f);\n                }\n            }\n        }\n        if (c.y-c.z<-1.) {\n            vec2 pos = vec2(c.x,-1.);\n            vec2 im = vec2(0,-.2*(c.y-c.z+1.));\n            vec2 w = p.xy-pos;\n            w = vec2(-w.y,w.x);\n            vec2 dv = v.xy + w*v.z;\n            impulse(p,v,pos,im,dv,f);\n        }\n        if (c.y-c.z>+1.) {\n            vec2 pos = vec2(c.x,+1.);\n            vec2 im = vec2(0,+.2*(c.y-c.z-1.));\n            vec2 w = p.xy-pos;\n            w = vec2(-w.y,w.x);\n            vec2 dv = v.xy + w*v.z;\n            impulse(p,v,pos,im,dv,f);\n        }\n        float bx = R.x/R.y;\n        if (c.x-c.z<-bx) {\n            vec2 pos = vec2(-bx,c.y);\n            vec2 im = vec2(-.2*(c.x-c.z+bx),0);\n            vec2 w = p.xy-pos;\n            w = vec2(-w.y,w.x);\n            vec2 dv = v.xy + w*v.z;\n            impulse(p,v,pos,im,dv,f);\n        }\n        if (c.x+c.z>+bx) {\n            vec2 pos = vec2(+bx,c.y);\n            vec2 im = vec2(+.2*(c.x+c.z-bx),0);\n            vec2 w = p.xy-pos;\n            w = vec2(-w.y,w.x);\n            vec2 dv = v.xy + w*v.z;\n            impulse(p,v,pos,im,dv,f);\n        }\n    }\n    \n    float dt = 1.;\n    vec2 mo = 2.*(iMouse.xy-.5*R)/R.y;\n    if (iMouse.z>0.&&length(p.xy-mo)<dim) f.xy += .1*(mo-p.xy) - .01*v.xy;\n    \n    v.xyz +=    dt*f.xyz - dt*.01*v.xyz;\n    p.xyz += .5*dt*f.xyz + dt*v.xyz;\n    \n    \n    if (iFrame < 1) {\n        \n        p.xy = vec2(U.x/(N-1.)*2.-1.,.5-.5*U.x/(N-1.));\n        p.z =3.+U.x;\n        v = vec4(0);\n    \n    }\n    \n    if (U.y < 1.) Q = p; else Q = v;\n\n    \n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "\nvoid impulse (vec4 p, vec4 v, vec2 pos, vec2 im, vec2 dv, inout vec4 f) {\n    im -= .5*dv;\n    f.xy += .2*im * dot(normalize(p.xy-pos),normalize(im));\n    f.z  += .2*dot(vec2(im.y,-im.x),normalize(p.xy-pos));\n}\nMain {\n    U = floor(U);\n    if (U.y>1.||U.x>=N) discard;\n    vec4 p = A(vec2(U.x,0));\n    vec4 v = A(vec2(U.x,1));\n    \n    vec2 m = vec2(0,1)*ei(p.z);\n    \n    \n    vec4 f = vec4(0,-.0000,0,0);\n    for (int j = 0; j < 41; j++) {\n        vec3 c = dim*circles[j];\n        c.xy *= ei(p.z);\n        c.xy += p.xy;\n        for (float i = 0.; i < N; i++) if (i!=U.x) {\n            vec4 p1 = A(vec2(i,0));\n            vec4 v1 = A(vec2(i,1));\n            \n            \n            if (j == 0) {\n                vec2 r = p1.xy-c.xy;\n                float eps = 1e-4;\n                vec2 rpx = (r+vec2(eps,0))*ei(-p1.z);\n                vec2 rnx = (r-vec2(eps,0))*ei(-p1.z);\n                vec2 rpy = (r+vec2(0,eps))*ei(-p1.z);\n                vec2 rny = (r-vec2(0,eps))*ei(-p1.z);\n                r *= ei(-p1.z);\n                float px = dot(m,integral(rpx.x,rpx.y,0.,1.,dim)*ei(p1.z));\n                float nx = dot(m,integral(rnx.x,rnx.y,0.,1.,dim)*ei(p1.z));\n                float py = dot(m,integral(rpy.x,rpy.y,0.,1.,dim)*ei(p1.z));\n                float ny = dot(m,integral(rny.x,rny.y,0.,1.,dim)*ei(p1.z));\n                vec2 fp = -.0005*c.z*c.z*.5/eps*vec2(px-nx,py-ny);\n                f.xy += fp;\n                f.z += .05*dot(vec2(m.y,-m.x),c.z*c.z*integral(r.x,r.y,0.,1.,dim)*ei(p1.z));\n            }\n            //else impulse(p,v,c.xy,fp,vec2(0),f);\n            \n            \n            if (length(p.xy-p1.xy)<=4.*dim)\n            for (int k = 0; k < 41; k++) {\n                vec3 c1 = dim*circles[k];\n                c1.xy *= ei(p1.z);\n                c1.xy += p1.xy;\n                if (length(c.xy-c1.xy)<c.z+c1.z) {\n                    vec2 pos = (c.xy*c.z+c1.xy*c1.z)/(c.z+c1.z);\n                    vec2 im = .2*(length(c.xy-c1.xy)-c.z-c1.z)*normalize(c1.xy-c.xy);\n                    vec2 w = p.xy-pos;\n                    w = vec2(-w.y,w.x);\n                    vec2 dv = v.xy + w*v.z;\n                    vec2 w1 = p1.xy-pos;\n                    w = vec2(-w.y,w.x);\n                    vec2 dv1 = v1.xy + w1*v1.z;\n                    impulse(p,v,pos,im,0.*(dv-dv1),f);\n                }\n            }\n        }\n        if (c.y-c.z<-1.) {\n            vec2 pos = vec2(c.x,-1.);\n            vec2 im = vec2(0,-.2*(c.y-c.z+1.));\n            vec2 w = p.xy-pos;\n            w = vec2(-w.y,w.x);\n            vec2 dv = v.xy + w*v.z;\n            impulse(p,v,pos,im,dv,f);\n        }\n        if (c.y-c.z>+1.) {\n            vec2 pos = vec2(c.x,+1.);\n            vec2 im = vec2(0,+.2*(c.y-c.z-1.));\n            vec2 w = p.xy-pos;\n            w = vec2(-w.y,w.x);\n            vec2 dv = v.xy + w*v.z;\n            impulse(p,v,pos,im,dv,f);\n        }\n        float bx = R.x/R.y;\n        if (c.x-c.z<-bx) {\n            vec2 pos = vec2(-bx,c.y);\n            vec2 im = vec2(-.2*(c.x-c.z+bx),0);\n            vec2 w = p.xy-pos;\n            w = vec2(-w.y,w.x);\n            vec2 dv = v.xy + w*v.z;\n            impulse(p,v,pos,im,dv,f);\n        }\n        if (c.x+c.z>+bx) {\n            vec2 pos = vec2(+bx,c.y);\n            vec2 im = vec2(+.2*(c.x+c.z-bx),0);\n            vec2 w = p.xy-pos;\n            w = vec2(-w.y,w.x);\n            vec2 dv = v.xy + w*v.z;\n            impulse(p,v,pos,im,dv,f);\n        }\n    }\n    \n    float dt = 1.;\n    vec2 mo = 2.*(iMouse.xy-.5*R)/R.y;\n    if (iMouse.z>0.&&length(p.xy-mo)<dim) f.xy += .1*(mo-p.xy) - .01*v.xy;\n    \n    v.xyz +=    dt*f.xyz - dt*.01*v.xyz;\n    p.xyz += .5*dt*f.xyz + dt*v.xyz;\n    \n    \n    if (iFrame < 1) {\n        \n        p.xy = vec2(U.x/(N-1.)*2.-1.,.5-.5*U.x/(N-1.));\n        p.z =3.+U.x;\n        v = vec4(0);\n    \n    }\n    \n    if (U.y < 1.) Q = p; else Q = v;\n\n    \n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "Main {\n    U = 2.05*(U-.5*R)/R.y;\n    float d = 1e9;\n    Q = vec4(0);\n    //if (iFrame % 4 > 0) discard;\n    for (float i = 0.; i < N; i++ ) {\n    \n            vec4 q = A(vec2(i,0));\n            vec2 v = q.xy - U;\n            v *= ei(-q.z);\n            float rb = roundBox(v,vec2(2.*dim-.02),.01);\n            vec4 dQ = max(4.*sin(atan(v.y,v.x)+vec4(1,2,3,4))*(1.-exp(-dot(v,v)))+\n                sin(-2.+vec4(1,2,3,4)+.6*i),0.);\n            dQ *= .5+.75*smoothstep(.02,0.,abs(rb));\n            dQ *= exp(-10.*max(rb,0.));\n            Q += .0*dQ;\n                     \n     \n            vec2 m = vec2(0,1);\n            Q.xy += .1*integral(v.x,v.y,m.x,m.y,dim)*ei(q.z);\n               \n            \n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}