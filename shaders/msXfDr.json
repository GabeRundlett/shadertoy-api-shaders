{
    "Shader": {
        "info": {
            "date": "1688626162",
            "description": "SIX shaders squeezed into 487 chars (with wipe transitions) ... That's an average of 81 chars per shader!!\nThanks to Smake's amazing DigEggs shader:\n[url]https://www.shadertoy.com/view/wdlfDH[/url]\nLet me know if this does not work on your computer.\n",
            "flags": 64,
            "hasliked": 0,
            "id": "msXfDr",
            "likes": 11,
            "name": "SIX Shaders in 487 chars",
            "published": 3,
            "tags": [
                "raymarching",
                "short",
                "golf",
                "multiple"
            ],
            "usePreview": 1,
            "username": "GregRostami",
            "viewed": 289
        },
        "renderpass": [
            {
                "code": "// SIX shaders squeezed into 487 chars ... That's an average of 81 chars per shader!!\n// I tried to combine shaders together in a way that saves chars and embed multiple \n// calculations in one loop for greater efficiency.\n\n// 487 chars - Xor made another 5 chars DISAPPEAR!!\nvoid mainImage (out vec4 O, vec2 u)\n{  \n    vec3 m, r, o, C = vec3(u/=iResolution.x, 1); \n    float t = iTime, c = fract (.04*(t-u.x)), i;\n    O *= i;\n    r.z = t;\n    for ( ++o.y; i++<98.; o += C * (length (cos (o + t)) - .3))\n        m.xy = .55 - mat2(-m.y,m.x,m)*m.yx+(u-.4)*cos(.3*t),\n        r += C*(length(cos(r))-.6);\n    u -= .4;\n    for (ivec4 b; (b.x^b.y^b.z)%99 > b.z-7; )\n        b = ivec4 ( t*vec2(2,4) + 6.*u*O.a, O+=.1 );\n    O.rgb =\n        c < .2 ? o/50.\n      : c < .3 ? max ( u = fract( u/dot(u,u)-t ), u.x-u ).yyy\n      : c < .5 ? m\n      : c < .7 ? fract(r*3.) - (r.z-t)/30.\n      : ( c < .8 ? texture(iChannel1, vec2(t + .3/length(u), atan(u.yx, u)/3.14))\n      :  O/74.).rgb;\n}\n\n// 492 chars - Master Fabrice eradicated 3 chars!\n/*\nvoid mainImage (out vec4 O, vec2 u)\n{  \n    vec3 m, r, o, C = vec3(u/=iResolution.x, 1); \n    float t = iTime, c = fract (.04*(t-u.x)), i;\n    O *= i;\n    r.z = t;\n    for ( ++o.y; i++<98.; o += C * (length (cos (o + t)) - .3))\n        m.xy = .55 - mat2(-m.y,m.x,m)*m.yx+(u-.4)*cos(.3*t),\n        r += C*(length(fract(r)-.5)-.2);\n    u -= .4;\n    for (ivec4 b; (b.x^b.y^b.z)%99 > b.z-7; )\n        b = ivec4 ( t*vec2(2,4) + 6.*u*O.a, O+=.1 );\n    O.rgb =\n        c < .2 ? o/50.\n      : c < .3 ? max ( u = fract( u/dot(u,u)-t ), u.x-u ).yyy\n      : c < .5 ? m\n      : c < .7 ? fract(r*9.) - .1*(r.z-t)\n      : ( c < .8 ? texture(iChannel1, vec2(t + .3/length(u), atan(u.y, u.x)/3.14))\n      :  O/74.).rgb;\n}\n*/\n\n// 495 chars - Greg Rostami's best version\n/*\nvoid mainImage (out vec4 o, vec2 u)\n{\n    u /= iResolution.x;\n    float t = iTime, c = fract (.03*(t-u.x));\n    vec4 x,m,r,C = vec4(u, 1, 0); o *= x;\n    r.z = t;\n    for ( ++o.y; o.a++<98.; o += C * (length (cos (o.xyz + t)) - .3))\n        m.xy = .55 - mat2(-m.y,m.x,m)*m.yx+(u-.4)*cos(.3*t),\n        r += C*(length(fract(r.xyz)-.5)-.2);\n    u -= .4;\n    for (ivec4 b; (b.x^b.y^b.z)%99 > b.z-7; )\n        b = ivec4 ( t*vec2(2,4) + 6.*u*x.a, x+=.1 );\n    o = c < .2 ? o/50.\n      : c < .3 ? max ( u = fract( u/dot(u,u)-t ), u.x-u ).yyyy\n      : c < .4 ? texture( iChannel1, vec2(t + .3/length(u), atan(u.y, u.x)/3.14) )\n      : c < .6 ? m\n      : c < .8 ? fract(r*9.) - .1*(r.z-t)\n      : x/74.;\n}\n*/",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 33909,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/the-flying-camel/iaso-tomita-debussy-arabesque"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}