{
    "Shader": {
        "info": {
            "date": "1573122964",
            "description": "fooling around with circles",
            "flags": 0,
            "hasliked": 0,
            "id": "tdtXWf",
            "likes": 11,
            "name": "Uplifting Units",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "andremichelle",
            "viewed": 514
        },
        "renderpass": [
            {
                "code": "// cleanup by https://www.shadertoy.com/user/FabriceNeyret2\nfloat rand(vec2  n){ return fract(sin(n.x*11.+n.y*17.) * 43758.5453123);}\nfloat rand(float n){ return fract(sin(n)               * 43758.5453123);}\n\nfloat sdRoundBox( vec2 p, vec2 b, float r )\n{\n  vec2 q = abs(p) - b;\n  return length(max(q,0.)) + min(max(q.x,q.y),0.) - r;\n}\n\nvoid mainImage( out vec4 O, vec2 u ) {\n    O = vec4(0);\n    vec2  R = iResolution.xy,\n          U = ( u - R*.5 ) / R.y;\n    float t = -iTime;\n    U.x += sin(t*.05)*.25;\n    U.y += sin(t*.10)*.25;\n    for(float i = 0. ; i < 1. ; i += .2) {\n        float u = fract(t*.125+i),\n              q = rand(i+10.)*9. + u*2. + sin(t*.3)*2.;\n        vec2  P = U *u*90. * mat2(cos(q), -sin(q), sin(q), cos(q)),\n              f = 2.*fract(P)-1.;\n        float rn = rand(floor(P)),\n              c = pow( abs(sin( (iTime*.04+rn)*3.14159 )) ,16.),\n              s = smoothstep(.02, .01, length(f) - c);\n        O = max(O, vec4(1,1, .2*c,1)*s*(1.-u));\n    }\n    \n    O *= min(1., iTime*.05);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}