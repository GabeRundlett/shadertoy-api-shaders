{
    "Shader": {
        "info": {
            "date": "1596407639",
            "description": "yeah",
            "flags": 0,
            "hasliked": 0,
            "id": "3tlBRr",
            "likes": 6,
            "name": "Another blue noise gen",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "michael0884",
            "viewed": 472
        },
        "renderpass": [
            {
                "code": "const float ITER = 36.;\nconst float FREQ = 0.7*3.14159;\n\nvec2 hash21(float p)\n{\n\tvec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n\tp3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\n//a wave with its gradient\nvec4 sinC(vec2 uv, float freq, float i)\n{\n    vec2 ang = 2.*3.14159*hash21(i+ITER*float(iFrame/60));\n \tvec2 k = vec2(sin(ang.x), cos(ang.x));\n    float x = freq*dot(uv,k)  - ang.y;\n    float amp = 1.;//pow(freq, -3.5);\n    float H = amp*sin(x);\n    float Hdx = amp*cos(x);\n    return vec4(H, Hdx*k*freq, 0.3*amp);\n}\n\nvec3 map(vec2 uv) {\n    float freq = FREQ;\n    float amp = 1.;\n\n    vec4 h = vec4(0.0);\n    for(float i = 0.; i < ITER; i++) \n    {        \n        h += sinC(uv, freq, i);\n    \tfreq *= 1.0 + 0.3/ITER;\n    }\n    return 0.5*h.xyz/h.w + 0.5;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //pixel coordinates\n    vec2 p = 0.4*fragCoord;\n\n    vec3 wave = map(p);\n    \n    if(iMouse.z > 0.)\n    {\n    \tif(iMouse.x > fragCoord.x) \n       \t\t wave = texture(iChannel0, p/1024.).xyz;\n    }\n    else\n        if(fragCoord.x < 0.5*iResolution.x) \n       \t\t wave = texture(iChannel0, p/1024.).xyz;\n        \n        \n    fragColor = vec4(wave.xxx,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}