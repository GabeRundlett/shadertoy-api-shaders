{
    "Shader": {
        "info": {
            "date": "1626986513",
            "description": "As shown in [url]https://fabiensanglard.net/doom_fire_psx/index.html[/url].\n[b]Mouse click to stop fire[/b]",
            "flags": 32,
            "hasliked": 0,
            "id": "7l2XRz",
            "likes": 8,
            "name": "Doom Fire!",
            "published": 3,
            "tags": [
                "fire",
                "doom",
                "fx",
                "particle"
            ],
            "usePreview": 0,
            "username": "chenglou",
            "viewed": 450
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 hash22(vec2 p) {\n    vec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {    \n    if (fragCoord.y < 2. && iMouse.z < 0.001) {\n        fragColor = vec4(1);\n        return;\n    }\n    \n    vec2 rand = floor(hash22(fragCoord * 999. + iTime) * 3.);\n    \n    vec2 offset = vec2(rand.x - 1., -rand.y);\n    vec4 neighbor = texelFetch(iChannel0, ivec2(mod(fragCoord + offset, iResolution.xy)), 0);\n    vec3 color = neighbor.rgb - vec3(0.0025, 0.0035, 0.005);\n\n    fragColor = vec4(color, 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}