{
    "Shader": {
        "info": {
            "date": "1691855262",
            "description": "CC0: Truchet coding on the bus\nAnother quick shader created while travelling by bus\n",
            "flags": 0,
            "hasliked": 0,
            "id": "cljcDw",
            "likes": 16,
            "name": "Truchet coding on the bus",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 1,
            "username": "mrange",
            "viewed": 249
        },
        "renderpass": [
            {
                "code": "// CC0: Truchet coding on the bus\n// Another quick shader created while travelling by bus\n\n\n#define TIME        iTime\n#define RESOLUTION  iResolution\n#define PI          3.141592654\n#define TAU         (2.0*PI)\n#define ROT(a)      mat2(cos(a), sin(a), -sin(a), cos(a))\n\nconst float lw = 0.033;\n\nconst mat2[4] rots =mat2[4](ROT(0.0*TAU/4.0),ROT(1.0*TAU/4.0),ROT(2.0*TAU/4.0),ROT(3.0*TAU/4.0));\n// License: Unknown, author: Unknown, found: don't remember\nfloat hash(vec2 co) {\n  return fract(sin(dot(co.xy ,vec2(12.9898,58.233))) * 13758.5453);\n}\n\nfloat circle(vec2 p, float r) {\n  return length(p)-r;\n}\n\nfloat df0(vec2 p) {\n  return 1E3;\n}\n\nfloat df1(vec2 p, int v) {\n  p *= rots[v];\n  float d0 = abs(p.y);\n  float d1 = length(p);\n  float d2 = p.x > 0.0 ? d0 : d1;\n  return d2;\n}\n\nfloat df2_s(vec2 p, int v) {\n  float d0 = abs(p.y);\n  float d1 = abs(p.x);\n  return v == 0 ? d0 : d1;\n}\n\nfloat df2_c(vec2 p, int v) {\n  p *= rots[v];\n  float d = abs(circle(p-0.5, 0.5));\n  return d;\n}\n\nfloat df3(vec2 p, int v) {\n  p *= rots[v];\n  float d0 = abs(p.x);\n  float d1 = length(p);\n  float d2 = p.y > 0.0 ? d0 : d1;\n  float d3 = abs(p.y);\n  float d = d2;\n  d = min(d, d3); \n  return d;\n}\n\nfloat df4(vec2 p, float h) {\n  p = h > 0.5 ? p : vec2(p.y, -p.x);\n  float d1 = abs(circle(p-0.5, 0.5));\n  float d2 = abs(circle(p+0.5, 0.5));\n  float d = d1;\n  d = min(d, d2); \n  return d;\n}\n\nfloat df(vec2 p, int n, float h) {\n  float d0 = circle(p, lw);\n  float d;\n  switch(n) {\n  default:\n  case 0:   d = df0(p);       break;\n  case 1:   d = df1(p, 0);    break;\n  case 2:   d = df1(p, 1);    break;\n  case 3:   d = df2_c(p, 0);  break;\n  case 4:   d = df1(p, 2);    break;\n  case 5:   d = df2_s(p, 0);  break;\n  case 6:   d = df2_c(p, 1);  break;\n  case 7:   d = df3(p, 0);    break;\n  case 8:   d = df1(p, 3);    break;\n  case 9:   d = df2_c(p, 3);  break;\n  case 10:  d = df2_s(p, 1);  break;\n  case 11:  d = df3(p, 3);    break;\n  case 12:  d = df2_c(p, 2);  break;\n  case 13:  d = df3(p, 2);    break;\n  case 14:  d = df3(p, 1);    break;\n  case 15:  d = df4(p, h);    break;\n  }\n  d = min(d, d0);\n  return d-lw;\n}\n\nint select(vec2 np) {\n  vec2 p0 = 0.05*np;\n  vec2 p1 = 0.025*np;\n  float off = 0.5+0.5*sin(-p1.x+p1.y+0.25*TIME);\n  off *= off;\n  return int(15.0*clamp(1.5*texture(iChannel0, p0).x+0.25*off, 0.0, 1.0));\n}\nvec3 effect(vec2 p) {\n  const float z = .15;\n  float aa = 4.0/RESOLUTION.y;\n\n  vec2 zp = p;\n  float amp = 10.0;\n  zp += amp*sin(0.25*vec2(1.0, sqrt(0.5))*TIME/amp);\n  zp /=z; \n  vec2 np = round(zp);\n  vec2 cp = zp - np;\n  float h = hash(np);\n  int sel0 = select(np);\n  int sel1 = \n      ((1&select(np - vec2(+1.0, +0.0)))==0?0:4)\n    + ((2&select(np - vec2(+0.0, +1.0)))==0?0:8)\n    + ((4&select(np - vec2(-1.0, +0.0)))==0?0:1)\n    + ((8&select(np - vec2(+0.0, -1.0)))==0?0:2)\n    ;\n  bool choice = mod(np.x+np.y, 2.0) == 0.0;\n  int sel = choice ? sel0 : sel1;\n\n  float d = df(cp, sel, h)*z;\n  vec3 col = vec3(0.0);\n  col += choice ? 0.125 : 0.0;\n  col = mix(col, vec3(1.0), smoothstep(0.0, -aa, d));\n  \n  col = sqrt(col);\n\n  return col;\n  \n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 q = fragCoord/RESOLUTION.xy;\n  vec2 p = -1. + 2. * q;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n  vec3 col = effect(p);\n  \n  fragColor = vec4(col, 1.0);\n}\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}