{
    "Shader": {
        "info": {
            "date": "1688443298",
            "description": "Making @SnoopethDuckDuck 's small shader less small, but moving",
            "flags": 0,
            "hasliked": 0,
            "id": "msXBzH",
            "likes": 4,
            "name": "moving, not as small shader",
            "published": 3,
            "tags": [
                "tiny",
                "small",
                "tweet",
                "golf",
                "100chars"
            ],
            "usePreview": 0,
            "username": "timmaffett",
            "viewed": 161
        },
        "renderpass": [
            {
                "code": "// Fork of \"ᵛᵉʳʸ ˢᵐᵃˡˡ ˢʰᵃᵈᵉʳˢ [85 Chars]\" by SnoopethDuckDuck. https://shadertoy.com/view/csScWt\n// 2023-07-04 03:57:52\n\n// Abstract fractal [85] \n// >>> DON'T PLAY WITH THIS OR YOUR WEBGL WILL CRASH <<<\nvoid mainImage( out vec4 O, vec2 I )\n{ \n   for(O-=O; O.x<0.4;)\n       O += .05/length(tan(O.x-(I*=.5+(sin(fract(mod(iTime,100.0)/200.))/2.0))));\n}\n// >>> DON'T PLAY WITH THIS OR YOUR WEBGL WILL CRASH <<<\n\n/*\n\n// Stars [85]\nvoid mainImage( out vec4 O, vec2 I )\n{ \n    for(O-=O; O.w++ < 9.;)\n    O += atan(2.-length(tan(I*=.5)));\n}\n\n// 2^n fractal [85]\nvoid mainImage( out vec4 O, vec2 I )\n{ \n    for(int i; i++ < 8;)\n    O = 0.*O + cos(O/length(cos(I*=.5)));\n}\n\n// Grid [93]\nvoid mainImage( out vec4 O, vec2 I )\n{ \n    O *= 0.;\n    //I += 100. * iTime;\n    for(int i; i++ < 9;)\n    O += .1*atan(2.-length(tan(I*=.25)));\n}\n\n//*/\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}