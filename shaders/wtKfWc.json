{
    "Shader": {
        "info": {
            "date": "1615231490",
            "description": "Blur-Edge loop",
            "flags": 32,
            "hasliked": 0,
            "id": "wtKfWc",
            "likes": 5,
            "name": "Blur-Edge loop",
            "published": 3,
            "tags": [
                "blur",
                "loop",
                "edge"
            ],
            "usePreview": 0,
            "username": "account",
            "viewed": 359
        },
        "renderpass": [
            {
                "code": "\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    //vec3 col = edge(uv);\n    vec3 col = texture(iChannel0, uv).xyz;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec3 blur(vec2 uv){\nvec3 c = texture(iChannel0, uv).xyz;\nuv *= iResolution.xy;\nfloat r = 2.;\nfloat ang = 20.;\nfloat iter = 0.;\nfor(int i = 0; i < 10; i++){\n  for(int k = 0; k < 10; k++){\n     float x = float(k)-5.;\n     float y = float(i)-5.;\n     vec3 col = texture(iChannel0, (uv+vec2(x,y))/iResolution.xy).xyz;\n     c += col;\n     iter+=1.;\n  }\n}\nc/=iter;\nreturn c;\n}\n\nvec3 edge(vec2 uv,vec3 c, vec3 c1, vec3 c2, vec3 c3, vec3 c4){\nvec3 col = vec3(0.);\nfloat f = 0.05;\nfloat filter2 = 0.5;\nvec3 shade = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\nif(abs(c.x-c1.x) >  f || abs(c.y-c1.y) >  f || abs(c.z-c1.z) >  f ){\n  col += min(max(abs(c.x-c1.x), max(abs(c.y-c1.y),abs(c.z-c1.z)))*1.5, filter2);\n}\nif(abs(c.x-c2.x) >  f || abs(c.y-c2.y) >  f || abs(c.z-c2.z) >  f ){\n  col += min(max(abs(c.x-c2.x), max(abs(c.y-c2.y),abs(c.z-c2.z)))*1.5, filter2);\n}\nif(abs(c.x-c3.x) >  f || abs(c.y-c3.y) >  f || abs(c.z-c3.z) >  f ){\n   col += min(max(abs(c.x-c3.x), max(abs(c.y-c3.y),abs(c.z-c3.z)))*1.5, filter2);\n}\nif(abs(c.x-c4.x) >  f || abs(c.y-c4.y) >  f || abs(c.z-c4.z) >  f ){\n   col += min(max(abs(c.x-c4.x), max(abs(c.y-c4.y),abs(c.z-c4.z)))*1.5, filter2);\n}\ncol *= shade*1.1;\nreturn col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord;\n    \n    vec3 col;\n    if(iFrame > 2){\n    vec3 c =  blur(uv/iResolution.xy);\n    vec3 c1 = blur((uv + vec2(-3.,0.))/iResolution.xy);\n    vec3 c2 = blur((uv + vec2(3.,0.))/iResolution.xy );\n    vec3 c3 = blur((uv + vec2(0.,3.))/iResolution.xy );\n    vec3 c4 = blur((uv + vec2(0.,-3.))/iResolution.xy);\n    \n    col = edge(uv/iResolution.xy,c,c1,c2,c3,c4);\n    //col = c;\n    }else{\n    col = texture(iChannel1, uv/iResolution.xy).xyz;\n    }\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}