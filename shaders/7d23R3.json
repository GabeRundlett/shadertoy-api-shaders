{
    "Shader": {
        "info": {
            "date": "1617763193",
            "description": "would be cool if someone made this in 3D, maybe I should learn ray marching. ",
            "flags": 0,
            "hasliked": 0,
            "id": "7d23R3",
            "likes": 16,
            "name": "Clockwork Spacetime",
            "published": 3,
            "tags": [
                "2d",
                "gears",
                "warp",
                "rotation",
                "spin"
            ],
            "usePreview": 0,
            "username": "Tater",
            "viewed": 516
        },
        "renderpass": [
            {
                "code": "#define pi 3.14159265359\n#define rot(a) mat2( cos(a),-sin(a),sin(a),cos(a) )\n#define a(c) float( clamp(c,0.0,1.0) )\nfloat gear(vec2 uv, float aa,float tth){ //this is a mess lol\n    float inn = 0.275; //Inner Circle Size\n    float th = atan(-uv.y,-uv.x)/(2.0*pi)+0.5;\n    float id = mod(floor(th*tth),2.0);\n    th = mod(th,1./tth)*tth;\n    float r = length(uv);\n    float c = smoothstep(r-aa,r+aa,inn);\n    th = abs(th-0.5)*1.05;\n    float end = (-pow(th,3.4)+1.0)*0.425; //Tooth Shape\n    c += smoothstep(r-aa,r+aa,end)*id*\n    smoothstep(th-aa*tth/2.5,th+aa*tth/2.5,0.5);\n    return c;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = (fragCoord-.5*R.xy)/R.y;\n    float aa = 1./R.y;\n    \n    float t = iTime*1.5;\n    //Time Warping\n    t = pow(fract(t),3.5)+floor(t);\n    \n    //Size of rotation steps\n    t*=pi/(6.0);\n    \n    //Whole Screen Rotation + direction flip\n    uv*=rot(-t*sign(sin(t)));\n    vec2 uv2 = uv;\n    \n    //Gear Tooth Count /2 (works well with 20,16,12,8,4)\n    float tth =12.0;\n    \n    //Overall Scale\n    float scl = 3.7;\n    \n    //Zoom In/Out\n    scl-=cos(t)*0.75;\n    \n    //Slight Initial Offset\n    t+=pi/tth;\n    \n    //Edge of screen warping\n    scl*=1.0+pow(length(uv),10.0);\n    \n    //The Gears\n    aa*=scl;\n    vec3 gearCol = vec3(1.0); //I like it b/w but you can change it\n    uv = 0.5-fract(uv*scl);\n    uv *= rot(-t);\n    vec3 col = gearCol*a(gear(uv,aa,tth))*(1.0-length(uv));\n    \n    t+=pi/2.;\n    uv2 += 0.5/scl;\n    uv = 0.5-fract(uv2*scl);\n    uv *= rot(t);\n    col += gearCol*a(gear(uv,aa,tth))*(0.05+length(uv));\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}