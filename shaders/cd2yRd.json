{
    "Shader": {
        "info": {
            "date": "1688055142",
            "description": "Playing around while following https://www.youtube.com/watch?v=f4s1h2YETNY",
            "flags": 0,
            "hasliked": 0,
            "id": "cd2yRd",
            "likes": 2,
            "name": "HeartyBoi",
            "published": 3,
            "tags": [
                "heart"
            ],
            "usePreview": 0,
            "username": "KishCom",
            "viewed": 167
        },
        "renderpass": [
            {
                "code": "float dot2( in vec2 v ) { return dot(v,v); }\nfloat sdHeart( in vec2 p ) {\n    p.x = abs(p.x);\n\n    if( p.y+p.x>1.0 )\n        return sqrt(dot2(p-vec2(0.25,0.75))) - sqrt(2.0)/4.0;\n    return sqrt(min(dot2(p-vec2(0.00,1.00)),\n                    dot2(p-0.5*max(p.x+p.y,0.0)))) * sign(p.x-p.y);\n}\n\n\n\nvec3 palette (float t) {\n    // These values come from a gradient generated at: http://dev.thi.ng/gradients\n    vec3 a = vec3(0.748, 0.378, 0.738);\n    vec3 b = vec3(0.916, 0.609, 0.456);\n    vec3 c = vec3(0.508, 0.508, 1.488);\n    vec3 d = vec3(-0.292, -0.062, 0.168);\n    return a + b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n    float offset = 1.25;\n    float offset2y = 0.05;\n    float offset2x = 0.5;\n    \n    uv.x = (uv.x - offset2x) * offset;\n    uv.y = (uv.y - offset2y) * offset;\n    uv.x *= iResolution.x / iResolution.y;\n    vec2 uv0 = uv;\n    uv0.y += offset2x;\n    //uv = fract(uv * offset);\n    //uv.x -= offset2x;\n    uv.y -= offset2y;\n    \n    //vec3 color = palette(iTime);\n    \n    //float d = sdHeart(uv);\n    float d = sdHeart(uv);\n    \n    vec3 color = palette(length(uv0) + iTime); // Try moving this line above d and just use iTime)\n    \n    //float d = length(uv);\n    //d -= 0.5;\n    \n    d = sin(d + iTime * 2.5)/2.5;\n    d = abs(d);\n\n    //for (float i = 0.0; i < 3.0; i++){\n    //    if (i == 0.0){\n    //        d = smoothstep(0.0, 0.10, d);\n    //   }\n    //    if (i == 1.0){\n    //        d = step(0.1, d);\n    //    }\n    //    if (i == 2.0){\n    //        //d = pow(0.01 / d, .75);\n    //        d = 0.05 / d;\n    //   }\n    //}\n    //d = step(0.1, d);\n    d = smoothstep(0.0, 0.10, d);\n    //d = 0.05 / d;\n    //d = pow(0.01 / d, .75);\n    color *= d;\n    \n    fragColor = vec4(color, 0.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}