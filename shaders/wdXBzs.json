{
    "Shader": {
        "info": {
            "date": "1588873891",
            "description": "Friday Giro Fever - Result of improvised live code session on Twitch\nLIVE SHADER CODING, SHADER SHOWDOWN STYLE, EVERY TUESDAYS 21:00 Uk time:\nhttps://www.twitch.tv/evvvvil_",
            "flags": 0,
            "hasliked": 0,
            "id": "wdXBzs",
            "likes": 32,
            "name": "[TWITCH] Friday Giro Fever",
            "published": 3,
            "tags": [
                "demoscene",
                "abstract",
                "glow",
                "reflections",
                "rotation",
                "gyroscope",
                "circular",
                "spaceship",
                "gyro",
                "structure",
                "industrial",
                "twitch",
                "improv"
            ],
            "usePreview": 1,
            "username": "evvvvil",
            "viewed": 1050
        },
        "renderpass": [
            {
                "code": "// Friday Giro Fever - Result of an improvised live code session on Twitch\n// LIVE SHADER CODING, SHADER SHOWDOWN STYLE, EVERY TUESDAYS 21:00 Uk time:\n// https://www.twitch.tv/evvvvil_\n\n// \"Being on the dole doesn't have to be dull.\" - William Shakespeare\n\nvec2 z,v,e=vec2(.05,-.05);float t,tt,spo,g,gg;vec3 np,bp,pp,cp,po,no,al,ld;//global vars. About as boring as being stuck in lockdown with your wife and kids.\nfloat cy(vec3 p,vec3 r){return max(abs(length(p.xz)-r.x)-r.y,abs(p.y)-r.z/2.);} //my own primitive function which I didn't steal from IQ. Not bad for an ageing bitter skateboarder. It makes a hollow tube\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));}//rotate function. Short and sweet, just like Napoleon before his megalomaniac fit.\nvec2 fb( vec3 p,float s,float m) // fb \"fucking bit\" function make a base geometry which we use to make gyro and flying objects\n{\n  for(int i=0;i<4;i++){//bullshit kifs rotation cloner. \"Friday Giro Fever\" is a reference to the UK umemployment benefits, the \"giro\". It usually lands on friday, meaning there is always a party for everyone, every friday, in England.\n    p=abs(p);//People against unemployment benefit are heartless like people annoyed at my humourous comments are boring\n    p.xy*=r2(.48);//clone along xy axis with rotation\n    p.yz*=r2(s*sin(p.z*.5)*.3);//this tweaks the gyro into much different shape for flying objects\n  }\n  vec2 h,t=vec2(cy(p,vec3(2,.3,.4)),m);//Make thin hollow tube either yellow or blue \n  h=vec2(cy(p,vec3(2,.1,.6)),6); //Make white hollow tube\n  t=t.x<h.x?t:h; //Make toobs touch boobs! (blend geometry together while retaining nipple colour, I mean material ID)\n  h=vec2(cy(p,vec3(2.,.4,.2)),3); //Make black hollow tube\n  t=t.x<h.x?t:h; //Make toobs touch boobs! (blend geometry together while retaining nipple colour, I mean material ID)\n  return t;\n}\nvec2 road( vec3 p) //Road is yellow circular bit in middle. Nah it doesn't lead to Rome, it leads to an industrial estate in Birmingham. What? You got something against burnt cars and the smell of petrol?\n{ \n  vec2 h,t=vec2(cy(p,vec3(6,.5,1)),8);//Use my fancy fucking hollow tube primitive function, I know some clever bastard probably thought about it before but this is me we're talking about: I once got into an argument with the neighbour's dog and lost.\n  h=vec2(cy(p,vec3(6,.5,5)),3);//Make another hollow toob, this time black and...\n  h.x=abs(h.x)-.1;//...whip that fucker into shape, push it against the edges, and other sexual innuendos...\n  h.x=max(h.x,abs(p.y)-.6); //croperoo the fuckeroo and whatch it groove\n  t=t.x<h.x?t:h; //Make toobs touch boobs! (blend geometry together while retaining nipple colour, I mean material ID)\n  t.x=max(t.x,-(abs(p.z)-.3)); //remove middle bit, otherwise it's full circle and so this way you can see it rotate more. Simple and easy like daddy in mommy\n  h=vec2(cy(p,vec3(6.9,0,.1)),6); //One more hollow tube this time around the whole shit, make it glow, so it's nice a central focal point to the composition (look at me talking like I actually know what I'm doing... fucking hipster)\n  g+=0.1/(0.1+h.x*h.x*100.);//Glow trick by Balkhan, which I tend to rinse and use as a party trick.\n  t=t.x<h.x?t:h; //Make toobs touch boobs! (blend geometry together while retaining nipple colour, I mean material ID)\n  return t;\n}\nvec2 mp( vec3 p )\n{ \n  bp=np=cp=pp=p; //GYROBULLSHIT starts here\n  bp.xy*=r2(tt); //We make two positions bp and np, one rotate clockwise the other anti-clockwise\n  np.xy*=r2(-tt); //None of those positions are either right or wrong in terms of movements direction, get out of your hemisphere-centric bubble, Steve.\n  vec2 h,t=fb(bp*.6,0.,5.); //Make first gyro bit and spin the fucker\n  t.x/=0.6; //Since we scale the pos we must tweak domain into shape to avoid artifact\n  t.x=max(t.x,-(abs(p.z)-.3)); //remove middle bit of outter gyro\n  h=fb(np,0.,5.); //Make another fucking gyro and make it spin\n  t=t.x<h.x?t:h;  //Mege both spinning gyros, bit like \"Mr Speaker\" trying to order the parliament with both parties spinning out of control around their own lame centre of political gravity\n  h=fb(bp*1.7,0.,5.);h.x/=1.7;t=t.x<h.x?t:h; //Yeah yeah one more gyro, blah blah blah, something about distance fucking fields, man I'm so borded when is football restarting, being a geek is cool, but hooliganism is more rewarding.\n  h=vec2(length(p)-.4);//Dumb fucking sphere in middle, make it glow, call the Tate Modern, tell them about my struggle as a child in our anonymous post-post-modern society and give me the Turner Prize.\n  g+=0.1/(0.1+h.x*h.x*40.);t=t.x<h.x?t:h;//Make said dumb sphere glow, call Tate Modern again, explain I wasn't myself when I sent \"that\" email and and it's all due to Donald Trump's rage at China. Collect Turner Prize.\n  h=vec2(length(p.xz+sin(p.y*20.)*.03)-(2.-cos(p.y*.15)*2.3));//Middle pointy erections. What? Yeah broh they are errected, so they are erections... You need to get laid more ma broski.\n  h.x*=0.7; t=t.x<h.x?t:h; //Add those middle pointy erections... Mind where you sit.\n  h=road(p);t=t.x<h.x?t:h; //Whole road thingy is added here.  \n  pp.xz*=r2(tt);//Objects flying around, there is actually a sick position trick in there\n  pp.xy=abs(pp.xy);//Rotate first, then abs symetry on xy axis\n  pp+=vec3(cos(-3.+sin(tt))*6.,-2.,sin(-3.+sin(tt))*6.); //push position along circle\n  pp.xz*=r2(sin(tt));//Rotate the fucking whole thing back and forth\n  h=fb(pp*3.5,3.,7.);//And that's how we get satisfying pandular action. Please note \"satisfying pandular action\" is also what wives want.\n  h.x*=0.15;  t=t.x<h.x?t:h;//since we scaled position, tweak back domain\n  h=vec2(length(pp)-.2);//Blue glow sphere inside flying objects\n  gg+=0.2/(0.1+h.x*h.x*(50.-sin(pp.z*.5+tt*2.)*48.)); //Make it glow and collect some Italia'90 football cards for your meak effort\n  t=t.x<h.x?t:h; //Merge geom together, retain material ID \n  h=fb(p*.165,3.,7.); //Big outter shell is made of flying object body\n  h.x*=3.0; t=t.x<h.x?t:h; //Scaled position means tweak domain. Should have gone to Stockton to become a tweaker when i had the opportunity back in 2010.\n  h=vec2(length(p.xy)-.2+abs(p.z*.02)); //Long white line, usually taken on fridays, through a straw, while talking about how great a drummer Zach Hill really is.\n  g+=0.2/(0.1+h.x*h.x*(50.-sin(pp.z*.2+tt*2.)*45.)); //Glow the fat white line along z axis, I know, I know, it is inviting. Who doesn't like to buy a gram of fun and chat shit to their friends?\n  t=t.x<h.x?t:h;//Merge it all, get into rehab and become a \"hero\" for saving your own skin.\n  return t; //I'm done commenting this and can go back to pointing menacingly at the neighbour's dog\n}\nvec2 tr( vec3 ro, vec3 rd,float _max,int iter) // main trace / raycast / raymarching loop function \n{\n  vec2 h,t= vec2(.1); //Near plane because when it all started the hipsters still lived in Norwich and they only wore tweed.\n  for(int i=0;i<iter;i++){ //Main loop de loop \n    h=mp(ro+rd*t.x); //Marching forward like any good fascist army: without any care for culture theft. (get distance to geom)\n    if(h.x<.00001||t.x>_max) break;//Conditional break we hit something or gone too far. Don't let the bastards break you down!\n    t.x+=h.x;t.y=h.y; //Huge step forward and remember material id. Let me hold the bottle of gin while you count the colours.\n  }\n  if(t.x>_max) t.y=0.;//If we've gone too far then we stop, you know, like Alexander The Great did when he realised his wife was sexting some Turkish bloke. (10 points whoever gets the reference)\n  return t;\n}\n// Rough shadertoy approximation of the bonzomatic noise texture by yx - https://www.shadertoy.com/view/tdlXW4\nvec4 texNoise(vec2 uv){ float f = 0.; f+=texture(iChannel0, uv*.125).r*.5;\n    f+=texture(iChannel0,uv*.25).r*.25;f+=texture(iChannel0,uv*.5).r*.125;\n    f+=texture(iChannel0,uv*1.).r*.125;f=pow(f,1.2);return vec4(f*.45+.05);\n}\n#define a(d) clamp(mp(po+no*d).x/d,0.,1.)\n#define s(d) smoothstep(0.,1.,mp(po+ld*d).x/d)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )//2 lines above are a = ambient occlusion and s = sub surface scattering\n{\n  vec2 uv=(fragCoord.xy/iResolution.xy-0.5)/vec2(iResolution.y/iResolution.x,1); //get UVs, nothing fancy, \n  tt=mod(iTime,62.82);  //Time variable, modulo'ed to avoid ugly artifact. Imagine moduloing your timeline, you would become a cry baby straight after dying a bitter old man. Christ, that's some fucking life you've lived, Steve.\n  v=mix(vec2(3.,8.8),vec2(12.,16.),ceil(cos(tt*.4)));//Reuse the v variable as holder of camera variables\n  vec3 ro=mix(vec3(1),vec3(-1,-.8,-1),ceil(sin(tt*.4)))*vec3(cos(tt*.2)*v.y,v.x+sin(tt*.4)*2.,sin(tt*.2)*v.y),//Ro=ray origin=camera position We build camera right here broski. Gotta be able to see, to peep through the keyhole.\n  cw=normalize(vec3(0)-ro),cu=normalize(cross(cw,vec3(0,1,0))),cv=normalize(cross(cu,cw)), //camera forward, left and up vector.\n  rd=mat3(cu,cv,cw)*normalize(vec3(uv,.5)),co,fo;//rd=ray direction (where the camera is pointing), co=final color, fo=fog color\n  ld=normalize(vec3(.2,.5,-.1)); //ld=light direction\n  co=fo=vec3(.09)-length(uv*.8)*.107;//background is dark with vignette\n  z=tr(ro,rd,50.,128);t=z.x; //Trace the trace in the loop de loop. Sow those fucking ray seeds and reap them fucking pixels.\n  if(z.y>0.){ //Yeah we hit something, unlike you trying to throw a spear at a pig. We wouldnt have survive the ice age with you and your nerdy mates.\n    po=ro+rd*t; //Get ray pos, know where you at, be where you is.\n    no=normalize(e.xyy*mp(po+e.xyy).x+e.yyx*mp(po+e.yyx).x+e.yxy*mp(po+e.yxy).x+e.xxx*mp(po+e.xxx).x); //Make some fucking normals. You do the maths while I count how many instances of Holly Willoughby there really is.\n    spo=20.+20.*exp2(10.*texNoise(vec2(bp.z,dot(bp.xy,vec2(.7)))*.3).r);//spo is specular power and refraction index\n    al=vec3(1.,.5,0);//albedo is base colour by default it's yellow \n    if(z.y<5.) spo=40.,al=vec3(0); //material system if less than 5 make it black, with specular power 40 and no reflections\n    if(z.y>5.) spo=40.,al=vec3(1); //material system if more than 5 make it white, with specular power 40 and no reflections\n    if(z.y>6.) al=mix(vec3(.1,.2,.4),vec3(.1,.35,.6),sin(cp*.5)*.5+.5); //Material Id more than 6 makes it blue / green gradient\n    if(z.y>7.) al=vec3(1.,.5,0),spo=20.+20.*exp2(10.*texNoise(vec2(cp.z,dot(cp.xy,vec2(.7)))*.3).r); //Material ID more than 7 makes it yellow and we re adapt the specular power and refraction index\n    float dif=max(0.,dot(no,ld)), //Dumb as fuck diffuse lighting\n    fr=pow(1.+dot(no,rd),4.), //Fr=fresnel which adds background reflections on edges to composite geometry better\n    sp=pow(max(dot(reflect(-ld,no),-rd),0.),spo);//Sp=specular, stolen from shane\n    co=mix(sp+mix(vec3(.8),vec3(1.),abs(rd))*al*(a(.1)*a(.2)+.2)*(dif+s(13.)),fo,min(fr,0.2));//Building the final lighting result, compressing the fuck outta everything above into an RGB shit sandwich\n    if(z.y>7.||z.y==5.){ //If material id is 5 or more than 7 then we do reflections\n      rd=refract(rd,-no,1.-(spo*.0005));//reflect rd with refraction\n      z=tr(po+rd*0.01,rd,50.,80); //Throw another ray from surface, shift ray start position a bit and shoot\n      if(z.y>0.){ //If we hit something in reflection ray... (optimization and cleanup this)\n        po=po+rd*z.x; //Get where we at\n        no=no=normalize(e.xyy*mp(po+e.xyy).x+e.yyx*mp(po+e.yyx).x+e.yxy*mp(po+e.yxy).x+e.xxx*mp(po+e.xxx).x);//More broing normals calculations\n        al=vec3(1.,.5,0);//Gotta give it the material id thing so we know how to colour what\n        if(z.y<5.) al=vec3(0);//ya ya give it back the colours\n        if(z.y>5.) al=vec3(1);//Still pretty boring shit\n        if(z.y>6.) al=vec3(.1,.2,.4);//Did you know Louis Theroux had interviewed Tiger King before he went to prison?\n        if(z.y>7.) al=vec3(1.,.5,0); \n        float dif=max(0.,dot(no,ld));\n        co=co+(dif*al*fr);\n      }\n    }\n    co=mix(fo,co,exp(-.0001*t*t*t)); //Fog soften things, but it won't stop your mother from being unimpressed by your current girlfriend\n  } \n  fragColor = vec4(pow(co+g*.2+gg*.3*vec3(.0,.1,.7),vec3(.45)),1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}