{
    "Shader": {
        "info": {
            "date": "1521491846",
            "description": "Show vertically, horizontally and diagonally half of the screen with a different color than the other half depending on the keys pressed (W, A, S, D) or the time passed",
            "flags": 16,
            "hasliked": 0,
            "id": "XsVczm",
            "likes": 1,
            "name": "Basic key capture and coloring",
            "published": 3,
            "tags": [
                "pixel",
                "key",
                "keyboard",
                "half",
                "halfscreen"
            ],
            "usePreview": 0,
            "username": "condeagustin",
            "viewed": 467
        },
        "renderpass": [
            {
                "code": "const int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\nconst int KEY_W = 87;\nconst int KEY_A = 65;\nconst int KEY_S = 83;\nconst int KEY_D = 68;\n\n\nbool ReadKey( int key, bool toggle )\n{\n\tfloat keyVal = texture( iChannel0, vec2( (float(key) + .5) / 256.0, toggle ? .75 : .25 ) ).x;\n\treturn (keyVal > .5) ? true : false;\n}\n\nbool GetKey(int key)\n{\n    return ReadKey(key, true);\n}\n\nbool GetKeyDown(int key)\n{\n    return ReadKey(key, false);\n}\n\n//This is the pixel/fragment shader function\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n \tvec4 color = vec4(0, 0, 0, 1);\n    \n  \tfloat sinTime = sin(iTime);\n    \n    \n    if((GetKeyDown(KEY_W) || (sinTime >= -1.0 && sinTime < -0.8)) && uv.x > 0.5)\n    {\n        color.r = 1.0;\n    }\n    else if ((GetKeyDown(KEY_A) || (sinTime >= -0.8 && sinTime < 0.0)) && uv.y > 0.5)\n    {\n        color.g = 1.0;\n    }\n    else if((GetKeyDown(KEY_S) || (sinTime >= 0.0 && sinTime < 0.8)) && uv.x > uv.y) \n    {\n    \tcolor.b = 1.0;\n    }\n    else if((GetKeyDown(KEY_D) || (sinTime >= 0.8 && sinTime <= 1.0)) && uv.x > 1.0 - uv.y)\n    {\n        color.r = 1.0;\n        color.g = 1.0;\n    }\n\n    if(uv.x >= 0.496 && uv.x <= 0.504) \n    {\n        color.r = 1.0;\n    }\n    \n    if(uv.x >= uv.y - 0.005 && uv.x <= uv.y + 0.005) \n    {\n        color.g = 1.0;\n    }\n    \n    if(uv.x >= 1.0 - uv.y - 0.005 && uv.x <= 1.0 - uv.y + 0.005)\n    {\n        color.b = 1.0;\n    }\n    \n    if(uv.y >= 0.494 && uv.y <= 0.506) \n    {\n        color.r = 1.0;\n        color.g = 1.0;\n        color.b = 1.0;\n    }\n    \n    // Output to screen\n    fragColor = color;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}