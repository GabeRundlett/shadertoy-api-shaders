{
    "Shader": {
        "info": {
            "date": "1613288748",
            "description": "Dots universe",
            "flags": 0,
            "hasliked": 0,
            "id": "WttBDN",
            "likes": 1,
            "name": "Dots universe",
            "published": 3,
            "tags": [
                "noise",
                "random",
                "dots"
            ],
            "usePreview": 0,
            "username": "abelu",
            "viewed": 300
        },
        "renderpass": [
            {
                "code": "#ifdef GL_ES\nprecision highp float;\n#endif\n\nfloat random(vec2 st) {\n  return fract(\n    sin(dot(st.xy, vec2(12.9898,78.233)) * 43758.5453123)\n  );\n}\n\n#define PI 3.1415926538\n#define SCALE 7.\n#define FACTOR .4\n#define SPEED .5\n#define LINE_THICKNESS 0.072\n#define POINT_SIZE 0.03\n#define TIME_SHIFT 100.0\n\nfloat lineSegment(vec2 p, vec2 a, vec2 b) {\n  vec2 pa = p - a;\n  vec2 ba = b - a;\n  float h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n\n  return smoothstep(\n    0.0,\n    1.0 / iResolution.x + LINE_THICKNESS,\n    length(pa - ba * h)\n  );\n}\n\nvec2 getOffset(vec2 indecies) {\n  float noiseX = clamp(random(indecies.xy + 0.1), 0.0, 1.0);\n  float noiseY = clamp(random(indecies.yx + 0.1), 0.0, 1.0);\n  float seedX = sin(noiseX * TIME_SHIFT + iTime * noiseX * SPEED);\n  float seedY = cos(noiseY * TIME_SHIFT + iTime * 2.0 * noiseY * SPEED);\n\n  return vec2(\n    noiseX * FACTOR * seedX,\n    noiseY * FACTOR * seedY\n  );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  const vec2 center = vec2(0.5);\n\n  vec2 st = fragCoord / iResolution.y;\n  float scale = SCALE + sin(iTime * 0.1);\n  vec2 position = (st - center) * scale - center * scale;\n\n  st = fract(position);\n\n  vec2 indecies = floor(position);\n  vec2 point = getOffset(indecies) + center;\n  float pointAlpha = random(indecies.yx);\n  float size = POINT_SIZE + random(indecies) * 0.02 + 0.02 * (sin(iTime * random(indecies.yx)) * 0.5 + 0.5);\n  float shapeAlpha = smoothstep(\n    size,\n    size - 0.05,\n    length(st - point)\n  ) * pointAlpha;\n\n  float linesAlpha = 0.0;\n\n  for (float i = 0.0; i < 4.0; i += 1.0) {\n    float angle = PI * 0.5 * i;\n    vec2 shift = vec2(sin(angle), cos(angle));\n    vec2 to = getOffset(indecies + shift) + shift + center;\n\n    linesAlpha += max(\n      0.0,\n      (1.0 - lineSegment(st, point, to)) * (1.0 - distance(point, to)) * 2.0\n    );\n  }\n\n  const vec3 pointColor = vec3(0.99, 0.8, 0.99);\n  const vec3 linesColor = vec3(0.9, 0.5, 0.8);\n\n  vec3 color = pointColor * shapeAlpha + linesColor * linesAlpha;\n\n  // Output to screen\n  fragColor = vec4(color, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}