{
    "Shader": {
        "info": {
            "date": "1724747296",
            "description": "trying to get 'circular' pixels",
            "flags": 0,
            "hasliked": 0,
            "id": "MfjBRD",
            "likes": 0,
            "name": "circular pixels",
            "published": 3,
            "tags": [
                "circular"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 65
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float n_factor = .5;\n    vec2 o_res = iResolution.xy * n_factor;\n    vec2 o_fc = fragCoord.xy * n_factor;\n    float n_scl_min = min(o_res.x, o_res.y);\n    vec2 o_trn = (o_fc.xy-(o_res.xy*.5))/n_scl_min;\n    \n    float n_tau = radians(360.);\n    float n_ang_nor = fract(atan(o_trn.x, o_trn.y)/n_tau);\n    float n_d_cntr = length(o_trn);\n    float n_d_cntr_snapped = floor(n_d_cntr*n_scl_min*2.)/n_scl_min*2.;\n    float n_pixels = n_scl_min;\n    float n_pixels_per_circumfence = n_scl_min*n_d_cntr_snapped;\n    float n_pixel = floor(n_ang_nor * n_pixels_per_circumfence);\n    float n_ang_nor_snapped = n_pixel/n_pixels_per_circumfence;\n    float n_ang_nor_snapped2 = 1.-(n_pixel/n_pixels_per_circumfence);\n    float n = (mod(n_pixel, 2.) == 0.) ?  n_ang_nor_snapped : n_ang_nor_snapped2;\n    fragColor = vec4(n);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}