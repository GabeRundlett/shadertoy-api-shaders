{
    "Shader": {
        "info": {
            "date": "1663084880",
            "description": "CC0: Random fractal hack\nInspired by: http://www.fractalforums.com/new-theories-and-research/very-simple-formula-for-fractal-patterns/\nDid this along time ago. It was created by just applying random math to kali fractal.\n",
            "flags": 0,
            "hasliked": 0,
            "id": "sl3BD4",
            "likes": 11,
            "name": "Random fractal hack",
            "published": 3,
            "tags": [
                "2d",
                "kali"
            ],
            "usePreview": 0,
            "username": "mrange",
            "viewed": 384
        },
        "renderpass": [
            {
                "code": "// CC0: Random fractal hack\n//  Inspired by: http://www.fractalforums.com/new-theories-and-research/very-simple-formula-for-fractal-patterns/\n//  Did this along time ago. It was created by just applying random math to kali fractal.\n//  I kind of like it though and thought it is worth to share.\n\n// SABS by ollj\n#define less(a,b,c)      mix(a,b,step(0.,c))\n#define sabs(x,k) less((.5/k)*x*x+k*.5,abs(x),abs(x)-k)\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 q = fragCoord/iResolution.xy;\n  vec2 p = -1. + 2. * q;\n  p.x *= iResolution.x/iResolution.y;\n  p *= 2.0;\n\n  vec2 c = vec2(-0.5, -0.5)*1.0;\n  vec2 u = p;\n  for (int i = 0; i < 5; ++i) {\n    float m = pow(dot(u,u),0.3);\n    u = sabs(u, (0.33 + 0.1*p.y))/m + c;\n  }\n  \n  vec3 col = vec3(length(u));\n  fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}