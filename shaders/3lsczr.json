{
    "Shader": {
        "info": {
            "date": "1591293571",
            "description": "The result of third week of learning shaders with Book of Shaders.",
            "flags": 0,
            "hasliked": 0,
            "id": "3lsczr",
            "likes": 4,
            "name": "pixel goose paws",
            "published": 3,
            "tags": [
                "2d",
                "bookofshaders",
                "2dshaders"
            ],
            "usePreview": 0,
            "username": "postviolet",
            "viewed": 277
        },
        "renderpass": [
            {
                "code": "float box(vec2 _st, vec2 _size){\n    _size = vec2(0.940,0.460)-_size*0.532;\n    vec2 uv = smoothstep(_size,_size+vec2(1e-4),_st);\n    uv *= smoothstep(_size,_size+vec2(1e-4),vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 st = fragCoord.xy/iResolution.xy;\n  vec3 color = vec3(0.0);\n\n  st.x *= 32.0;\n  st.y *= 8.0;\n\n  st.x +=  step(1., mod(st.y,2.0)) * fract(st.x);\n  st.y +=  step(1., mod(st.x,2.0)) * fract(st.y)+(iTime);\n\n  vec2 ipos = floor(st);\n  vec2 fpos = fract(st);\n  color = vec3(step(0.332, random(ipos+iTime/24.)));\n\n  fragColor = vec4(color,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}