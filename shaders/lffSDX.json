{
    "Shader": {
        "info": {
            "date": "1705784385",
            "description": "domain warping",
            "flags": 0,
            "hasliked": 0,
            "id": "lffSDX",
            "likes": 10,
            "name": "Fractal Warp",
            "published": 3,
            "tags": [
                "warp"
            ],
            "usePreview": 0,
            "username": "itishappy",
            "viewed": 253
        },
        "renderpass": [
            {
                "code": "void warp(inout vec2 P, float scale, float amount) {\n    // rotate\n    P *= mat2(cos(1.0), -sin(1.0), sin(1.0), cos(1.0));\n    // shift\n    vec2 S = scale * P.yx,\n         D = sin(iTime) * cos(S) + cos(iTime) * sin(S);\n    P += D / scale * 0.5 * amount;\n}\n\nfloat grid(vec2 P) {\n    vec2 Pre = P;\n    P = abs(fract(P) - 0.5);\n    return smoothstep(length(fwidth(Pre)), 0.0, min(P.x, P.y));\n}\n\nvoid mainImage(out vec4 O, vec2 I) {\n    vec2 R = iResolution.xy,\n         P = (2.0 * I - R) / R.y;\n    \n    warp(P,  1.1, 0.2);\n    warp(P,  2.0, 0.4);\n    warp(P,  3.8, 0.6);\n    warp(P,  9.7, 0.8);\n    warp(P, 15.0, 0.8);\n    warp(P, 24.3, 0.6);\n    warp(P, 38.9, 0.4);\n    warp(P, 49.3, 0.2);\n    \n    O = vec4(grid(16.0 * P), 0, 0, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}