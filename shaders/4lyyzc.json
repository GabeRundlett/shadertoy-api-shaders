{
    "Shader": {
        "info": {
            "date": "1537057206",
            "description": "I changed up how my fluid works this time.\nA fluid behaves according to the wave equation, but the space moves through itself and advects so there are no straight lines. Notice how the wave fronts are warped by the velocity field. Best in fullscreen",
            "flags": 32,
            "hasliked": 0,
            "id": "4lyyzc",
            "likes": 96,
            "name": "Fluid II",
            "published": 3,
            "tags": [
                "fluid"
            ],
            "usePreview": 1,
            "username": "wyatt",
            "viewed": 4813
        },
        "renderpass": [
            {
                "code": "vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    R = iResolution.xy;\n    vec4 \n        a = T(U+vec2(1,0)),\n        b = T(U-vec2(1,0)),\n        c = T(U+vec2(0,1)),\n        d = T(U-vec2(0,1));\n        \n    vec4 g = vec4(a.zw-b.zw,c.zw-d.zw);\n    vec2 dz = g.xz;\n    vec2 dw = g.yw;\n   \tvec4 v = T(U);\n    C.xyz = max(vec3(0),sin(1.5+5.*v.z+3.*(v.w)*v.w*vec3(1,2,3)));\n    vec3 n = normalize(vec3(dz,.05));\n    vec4 tx = texture(iChannel1,reflect(vec3(0,0,1),n));\n    float p = 1e6*dot(dz,dz);\n    p = atan(p*p)*.63661977237;\n    float w = atan(3.*v.w)*.63661977237;\n    C *= (0.7+0.3*tx);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "cubemap",
                        "id": 24,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \t\n \tvec2 O = U,A = U+vec2(1,0),B = U+vec2(0,1),C = U+vec2(-1,0),D = U+vec2(0,-1);\n \tvec4 u,a,b,c,d;\n \tfloat p = 0.;\n \tvec2 g = vec2(0);\n \t#define I 2\n \tfor (int i = 0; i < I; i++) {\n        u = T(U); U -= u.xy;\n \t\ta = T(A); b = T(B); c = T(C); d = T(D);\n        A -=a.xy; B -=b.xy; C -=c.xy; D -=d.xy; \n        p += length(U-A)+length(U-B)+length(U-C)+length(U-D)-4.;\n        g += vec2(a.z-c.z,b.z-d.z);\n \t}\n \tu = T(U); a = T(A); b = T(B); c = T(C); d = T(D);\n \tQ = T(U);\n \tvec4 N = 0.25*(a+b+c+d);\n \tQ = mix(Q,N, vec4(0,0,1,0));\n \tQ.xy -= g/8./float(I);\n \tQ.z += p/8.;\n \tQ.z *= 0.9999;\n \tif (iFrame < 1) Q = vec4(0,0,0,0);\n \tif (length(U-vec2(0.925,0.5)*R) < 2.) Q.xyw = vec3(Q.xy*0.5+0.5*vec2(-0.2,0),1.);\n \tif (U.x<1.||U.y<1.||R.x-U.x<1.||R.y-U.y<1.) Q.xy*=0.;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \t\n \tvec2 O = U,A = U+vec2(1,0),B = U+vec2(0,1),C = U+vec2(-1,0),D = U+vec2(0,-1);\n \tvec4 u,a,b,c,d;\n \tfloat p = 0.;\n \tvec2 g = vec2(0);\n \t#define I 2\n \tfor (int i = 0; i < I; i++) {\n        u = T(U); U -= u.xy;\n \t\ta = T(A); b = T(B); c = T(C); d = T(D);\n        A -=a.xy; B -=b.xy; C -=c.xy; D -=d.xy; \n        p += length(U-A)+length(U-B)+length(U-C)+length(U-D)-4.;\n        g += vec2(a.z-c.z,b.z-d.z);\n \t}\n \tu = T(U); a = T(A); b = T(B); c = T(C); d = T(D);\n \tQ = T(U);\n \tvec4 N = 0.25*(a+b+c+d);\n \tQ = mix(Q,N, vec4(0,0,1,0));\n \tQ.xy -= g/8./float(I);\n \tQ.z += p/8.;\n \tQ.z *= 0.9999;\n \tif (iFrame < 1) Q = vec4(0,0,0,0);\n \tif (length(U-vec2(0.925,0.5)*R) < 2.) Q.xyw = vec3(Q.xy*0.5+0.5*vec2(-0.2,0),1.);\n \tif (U.x<1.||U.y<1.||R.x-U.x<1.||R.y-U.y<1.) Q.xy*=0.;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \t\n \tvec2 O = U,A = U+vec2(1,0),B = U+vec2(0,1),C = U+vec2(-1,0),D = U+vec2(0,-1);\n \tvec4 u,a,b,c,d;\n \tfloat p = 0.;\n \tvec2 g = vec2(0);\n \t#define I 2\n \tfor (int i = 0; i < I; i++) {\n        u = T(U); U -= u.xy;\n \t\ta = T(A); b = T(B); c = T(C); d = T(D);\n        A -=a.xy; B -=b.xy; C -=c.xy; D -=d.xy; \n        p += length(U-A)+length(U-B)+length(U-C)+length(U-D)-4.;\n        g += vec2(a.z-c.z,b.z-d.z);\n \t}\n \tu = T(U); a = T(A); b = T(B); c = T(C); d = T(D);\n \tQ = T(U);\n \tvec4 N = 0.25*(a+b+c+d);\n \tQ = mix(Q,N, vec4(0,0,1,0));\n \tQ.xy -= g/8./float(I);\n \tQ.z += p/8.;\n \tQ.z *= 0.9999;\n \tif (iFrame < 1) Q = vec4(0,0,0,0);\n \tif (length(U-vec2(0.925,0.5)*R) < 2.) Q.xyw = vec3(Q.xy*0.5+0.5*vec2(-0.2,0),1.);\n \tif (U.x<1.||U.y<1.||R.x-U.x<1.||R.y-U.y<1.) Q.xy*=0.;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \t\n \tvec2 O = U,A = U+vec2(1,0),B = U+vec2(0,1),C = U+vec2(-1,0),D = U+vec2(0,-1);\n \tvec4 u,a,b,c,d;\n \tfloat p = 0.;\n \tvec2 g = vec2(0);\n \t#define I 2\n \tfor (int i = 0; i < I; i++) {\n        u = T(U); U -= u.xy;\n \t\ta = T(A); b = T(B); c = T(C); d = T(D);\n        A -=a.xy; B -=b.xy; C -=c.xy; D -=d.xy; \n        p += length(U-A)+length(U-B)+length(U-C)+length(U-D)-4.;\n        g += vec2(a.z-c.z,b.z-d.z);\n \t}\n \tu = T(U); a = T(A); b = T(B); c = T(C); d = T(D);\n \tQ = T(U);\n \tvec4 N = 0.25*(a+b+c+d);\n \tQ = mix(Q,N, vec4(0,0,1,0));\n \tQ.xy -= g/8./float(I);\n \tQ.z += p/8.;\n \tQ.z *= 0.9999;\n \tif (iFrame < 1) Q = vec4(0,0,0,0);\n \tif (length(U-vec2(0.925,0.5)*R) < 2.) Q.xyw = vec3(Q.xy*0.5+0.5*vec2(-0.2,0),1.);\n \tif (U.x<1.||U.y<1.||R.x-U.x<1.||R.y-U.y<1.) Q.xy*=0.;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}