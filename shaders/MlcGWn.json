{
    "Shader": {
        "info": {
            "date": "1468649432",
            "description": "First Shader! Basic metaball test",
            "flags": 0,
            "hasliked": 0,
            "id": "MlcGWn",
            "likes": 7,
            "name": "Basic 2D Metaballs",
            "published": 3,
            "tags": [
                "2d",
                "metaballs"
            ],
            "usePreview": 0,
            "username": "Dalton",
            "viewed": 1065
        },
        "renderpass": [
            {
                "code": "vec3 Sphere(vec2 uv, vec2 position, float radius)\n{\n    float dist = radius / distance(uv, position);\n    return vec3(dist * dist);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = 2.0 * vec2(fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    \n    vec3 pixel = vec3(0.0, 0.0, 0.0);\n    \n    vec2 positions[4];\n    positions[0] = vec2(sin(iTime * 1.4) * 1.3, cos(iTime * 2.3) * 0.4);\n    positions[1] = vec2(sin(iTime * 3.0) * 0.5, cos(iTime * 1.3) * 0.6);\n    positions[2] = vec2(sin(iTime * 2.1) * 0.1, cos(iTime * 1.9) * 0.8);\n    positions[3] = vec2(sin(iTime * 1.1) * 1.1, cos(iTime * 2.6) * 0.7);\n        \n    for\t(int i = 0; i < 4; i++)\n        pixel += Sphere(uv, positions[i], 0.22);\n    \n    pixel = step(1.0, pixel) * pixel;\n    \n    fragColor = vec4(pixel, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}