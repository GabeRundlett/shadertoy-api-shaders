{
    "Shader": {
        "info": {
            "date": "1577546193",
            "description": "Taken from the Shadertone example 'zoomwave' and added rotation\n\nhttps://github.com/overtone/shadertone/blob/master/examples/zoomwave.glsl",
            "flags": 32,
            "hasliked": 0,
            "id": "3lc3W2",
            "likes": 3,
            "name": "Spinny Zoomwave",
            "published": 3,
            "tags": [
                "waveform"
            ],
            "usePreview": 0,
            "username": "markw",
            "viewed": 1334
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2  uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel1,uv);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// taken from the Shadertone example 'zoomwave' and added rotation\n// https://github.com/overtone/shadertone/blob/master/examples/zoomwave.glsl\n\n#define ZOOM -0.035\n#define PREV_FRAME_ALPHA 0.9\n\nfloat smoothbump(float center, float width, float x) {\n  float w2 = width/2.00;\n  float cp = center+w2;\n  float cm = center-w2;\n  float c = smoothstep(cm, center, x) * (1.0-smoothstep(center, cp, x));\n  return c;\n}\n\nvec3 hsv2rgb(float h,float s,float v) {\n  return mix(vec3(1.),clamp((abs(fract(h+vec3(3.,2.,1.)/3.)*6.-3.)-1.),0.,1.),s)*v;\n}\n\n// https://gist.github.com/ayamflow/c06bc0c8a64f985dd431bd0ac5b557cd\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2  uvOrig = fragCoord/iResolution.xy;\n    float rad    = iTime*-1.; // rotate clock-wise\n\tvec2 uv      = rotateUV(uvOrig, rad);\n\n    // fix vertical position and scaling\n    uv.y -= 0.5;\n    uv.y *= 2.;\n\n    // fix diagonal wave lengths\n    uv.x *= 0.5;\n    uv.x += 0.2;\n\n    float wave   = texture(iChannel0,vec2(uv.x,0.75)).x;\n    wave         = smoothbump(0.0,(6.0/iResolution.y), wave + uv.y - 0.5);\n    vec3  wc     = wave*hsv2rgb(fract(iTime/2.0),0.9,0.9);\n\n    // zoom into the previous frame\n    float zf     = ZOOM;\n    vec2  uv2    = (1.0+zf)*uvOrig-(zf/2.0,zf/2.0);\n    vec3  pc     = PREV_FRAME_ALPHA*texture(iChannel1,uv2).rgb;\n\n    // mix the two\n    fragColor = vec4(vec3(wc+pc),1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 34,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}