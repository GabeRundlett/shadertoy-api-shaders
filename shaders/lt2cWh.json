{
    "Shader": {
        "info": {
            "date": "1508859114",
            "description": "Is this method widely known on this website? I don't think I've seen it before, but I haven't been here that long.",
            "flags": 0,
            "hasliked": 0,
            "id": "lt2cWh",
            "likes": 3,
            "name": "Interesting Fractal Generator",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "DJDoomz",
            "viewed": 677
        },
        "renderpass": [
            {
                "code": "/*\nthis code seems to be wildly chaotic... just modify some of the parameters and see what kind of neat effects you get!\n*/\n\n//main idea from:\n//http://www.pouet.net/topic.php?which=10164\nvoid mainImage( out vec4 fragColor, in vec2 f )\n{\n    \n    vec3 x = vec3(f/iResolution.xy*128.+iTime,0);\n    \n    //float c = (sin(iTime/4.+f.x/64.) + sin(iTime/4.+f.y/64.))/16. + .2 ;\n    \n    float c = .01;\n\t\n    for(int i = 0; i < 24; i++) //mess around w/ number of iterations!\n    {\n        x.y+=x.x;\n        x.y/=2.;\n        \n        if(fract(x.x+x.y) > c)\n        {\n            x.z++;\n            x.x-=2.*sin(iTime/25.); //this is where all the \"movement\" comes from \n            x.z*=2.;\n        }\n        x.x-=x.y;\n    }\n    fragColor = vec4(.5 + .5* cos(6.28*(vec3(2,2,1)*x.z+vec3(1,.333,-.333))) ,0); //don't like this palette, but it works for now\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}