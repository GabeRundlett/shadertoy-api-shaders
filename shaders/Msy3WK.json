{
    "Shader": {
        "info": {
            "date": "1456390640",
            "description": "Not much of a visual shader. Turn up the sound!",
            "flags": 8,
            "hasliked": 0,
            "id": "Msy3WK",
            "likes": 5,
            "name": "GTP",
            "published": 3,
            "tags": [
                "music"
            ],
            "usePreview": 0,
            "username": "Snurrgrunka",
            "viewed": 660
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat beat = (150.0/60.0) * iTime;\n    float bar = fract(beat / 16.0);\n\tfloat env = (1.0 - pow(fract(beat), 3.0));\n    \n    //vec2 halfRes = ();\n\tvec2 uv = (fragCoord.xy / iResolution.xy);\n    \n    float len = length(uv);\n    float anim = 0.5+0.5*sin(iTime);\n    vec4 clr = vec4(uv,anim,1.0);\n\t//fragColor = mix(vec4(0.0), clr, env);\n    float lenEnv = len * env;\n    float invBar = bar * (1.0-len);\n    //fragColor = mix(vec4(lenEnv, 0.0, invBar, 1.0), vec4(lenEnv, lenEnv, invBar, 1.0), lenEnv);\n    \n    //OMG the syntax help me...\n\tfloat c = texture(iChannel0, uv + bar).r;\n    float c2 = texture(iChannel0, uv - beat).r;\n\n    float d = c * c2;\n    vec3 a = vec3(1.0, 0.0, 0.0);\n    vec3 b = vec3(1.0, 1.0, 0.0);\n\n    //fragColor = vec4(mix(a, b, d), 1);\n    fragColor = vec4(len, len, len, 1.0);\n    //GG\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 15,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float getBeat (float time, float num, float div)\n{\n    return fract((150.0/60.0/num) * time) * div;\n}\n\nfloat squareWave(float time, float freq)\n{\n\tfloat tau = 6.2831;\n\treturn (ceil(sin(tau*freq*time)) * 2.0 - 1.0);   \n}\nfloat sawWave(float time, float freq)\n{\n    return fract(freq*time) * 2.0 - 1.0;\n}\n\nfloat superSawWave(float time, float freq)\n{\n\tfloat a = sawWave(time, freq*1.001) * 0.125;\n    float b = sawWave(time+0.25, freq*1.002) * 0.125;   \n\tfloat c = sawWave(time+0.5, freq*0.999) * 0.125;   \n\tfloat d = sawWave(time+0.75, freq*0.998) * 0.125;   \n    float m = sawWave(time+1.0, freq) * 0.5;   \n\n    return (a + b + c + d + m);\n}\n\nfloat getKick(float beat)\n{\n    // Halp!\n    float inv = 1.0 - beat;\n    float invPow = pow(inv, 4.0);\n    float sn = sin(invPow * 1.5708 * 100.0) * invPow;\n    float sq = (ceil(sn) * 2.0 - 1.0);   \n\treturn (sn * 0.5) + (sq * 0.5);\n}\nvec2 mainSound( in int samp, float time )\n{\n    // A# = 116.54;\n    // A# = 116.54;\n\t// F# = 92.50; \n\t// G# = 103.83; \n\n    float pi = 3.1416;\n    float halfPi = 1.5708;\n    \n    // Beats per minute, 150 is good.\n    float bpm = 150.0;\n    \n    \n    float beat = getBeat(time, 1.0, 1.0);\n    \n    // Swing up an octave 1/8T\n    float up = clamp(ceil(beat * 3.0) - 1.0, 1.0, 2.0);\n\n    // 4 bars 4 beats each.\n    float part = getBeat(time, 16.0, 16.0);\n    \n    \n\t// Set bass note frequency A# A# F# G#\n    float notehzx = 55.0;\n    if (part < 8.0) notehzx = 116.54;\n    else if (part < 12.0) notehzx = 92.5;\n    else notehzx = 103.83;\n\n    // Set lead frequency\n    float notehzy = 116.54;\n    \n    // GTP\n    \n    if (part < 1.0) notehzy = 116.54; \t\t// G#\n    else if (part < 2.0) notehzy = 130.81; \t// C\n\telse if (part < 3.0) notehzy = 138.59; \t// C#\n    else if (part < 4.0) notehzy = 155.56; \t// D#\n        \n    else if (part < 5.0) notehzy = 116.54;  // G#\n    else if (part < 6.0) notehzy = 130.81; \t// C\n\telse if (part < 7.0) notehzy = 138.59; \t// C#\n    else if (part < 8.0) notehzy = 174.61; \t// F     \n\n    else if (part < 9.0) notehzy = 116.54;  // G#\n    else if (part < 10.0) notehzy = 130.81; // C\n\telse if (part < 11.0) notehzy = 138.59; // C#\n    else if (part < 12.0) notehzy = 155.56; // D#\n\n    else if (part < 13.0) notehzy = 174.61; // F     \n    else if (part < 14.0) notehzy = 155.56; // D#\n\telse if (part < 15.0) notehzy = 138.59; // C#\n    else if (part < 16.0) notehzy = 130.81; // C\n\t\n    \n    // GGS\n    /*\n    if (part < 1.0) notehzy = 116.54; \t\t// G#\n    else if (part < 2.0) notehzy = 130.81; \t// C\n    else if (part < 3.0) notehzy = 155.56; \t// D#\n\telse if (part < 4.0) notehzy = 138.59; \t// C#\n        \n    else if (part < 5.0) notehzy = 116.54;  // G#\n    else if (part < 6.0) notehzy = 155.56; \t// D#  \n\telse if (part < 7.0) notehzy = 138.59; \t// C#\n    else if (part < 8.0) notehzy = 130.81; \t// C\n\n    else if (part < 9.0) notehzy = 116.54;  // G#\n    else if (part < 10.0) notehzy = 130.81; // C\n\telse if (part < 11.0) notehzy = 138.59; // C#\n    else if (part < 12.0) notehzy = 155.56; // D#\n\n    else if (part < 13.0) notehzy = 174.61; // F     \n    else if (part < 14.0) notehzy = 155.56; // D#\n\telse if (part < 15.0) notehzy = 138.59; // C#\n    else if (part < 16.0) notehzy = 130.81; // C\n    */\n        \n    // Current frequency\n    float hzx = notehzx * up * 0.5;\n    float hzy = notehzy * 2.0;\n    \n    float bass = squareWave(time, hzx);\n        \n    float envelope = (1.0 - pow(fract(beat), 5.0));\n    \n    float leadl = superSawWave(time, hzy) * envelope;\n    float leadr = superSawWave(time+5.0, hzy) * envelope;\n        \n    float kick = getKick(beat);\n\n    // Arrangement\n    float leadMag = 0.0;\n\tfloat bassMag = 0.0;\n    float kickMag = 0.0;\n\n    float bar = getBeat(time, 128.0, 8.0);\n    if (bar < 1.0)\n    {\n      \tkickMag = 0.0;\n\t\tleadMag = 0.0;\n        bassMag = sin(fract(bar) * halfPi);\n    }\n    else if (bar < 2.0)\n    {\n       \tkickMag = 0.0;\n    \tleadMag = 0.0;\n        bassMag = 1.0;\n    }\n    else if (bar < 3.0)\n    {\n       \tkickMag = 0.0;\n        float pw = pow(1.0 - sin(fract(bar) * halfPi + halfPi), 8.0);\n    \tleadMag = pw;\n        bassMag =  1.0 - pw;\n    }\n    else if (bar < 4.0)\n    {\n       \tkickMag = 0.0;\n    \tleadMag = 1.0;\n        bassMag = 0.0;\n    }\n    else\n    {\n       \tkickMag = 1.0;\n    \tleadMag = 1.0;\n        bassMag = 1.0;\n    }\n        \n\n    // Masterfully mix!\n    float ol = (kick * 0.3 * kickMag) + (bass * 0.3 * bassMag) + (leadl * 0.4 * leadMag);\n    float or = (kick * 0.3 * kickMag) + (bass * 0.3 * bassMag) + (leadr * 0.4 * leadMag); \n\n    return vec2(ol, or);\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 38
                    }
                ],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}