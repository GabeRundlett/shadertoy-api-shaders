{
    "Shader": {
        "info": {
            "date": "1611244328",
            "description": "the colors and motion give me a city vibe. ",
            "flags": 0,
            "hasliked": 0,
            "id": "3tKyzG",
            "likes": 9,
            "name": "horizontal city",
            "published": 3,
            "tags": [
                "grid",
                "interactive",
                "time",
                "sin",
                "color",
                "random",
                "atan",
                "cos",
                "city",
                "lights",
                "pattern",
                "velocity",
                "offset"
            ],
            "usePreview": 0,
            "username": "YitingLiu",
            "viewed": 436
        },
        "renderpass": [
            {
                "code": "// Inspiration https://thebookofshaders.com/edit.php#10/ikeda-03.frag\n// I created the city vibe with time, movements, and colors \n\n\n\nfloat random (in float x) {\n    return fract(sin(x)*1e4);\n}\n\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nfloat pattern(vec2 st, vec2 v, float t) {\n    vec2 p = floor(st+v);\n    return step(t, random(cos(iTime/1e6)+p*0.00000001)+random(p.x)*0.5 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n\n    vec2 grid = vec2(100.0,50.);\n    st *= grid;\n\n    vec2 ipos = floor(st);  // integer\n    vec2 fpos = fract(st);  // fraction\n\n    vec2 vel = vec2(iTime*0.5*max(grid.x,grid.y)); // time\n    vel *= vec2(-1.,0.0) * random(1.0+ipos.y); // direction\n\n    // Assign a random value base on the integer coord\n    vec2 offset = vec2(cos(iTime*1e5));\n\n    vec3 color = vec3(0.905,0.613,0.081);\n    color.r = pattern(st+offset,vel,max(random(abs(tan(iTime))),0.5)+iMouse.x/iResolution.x);\n    color.g = pattern(st,vel,0.5+iMouse.x/iResolution.x);\n    color.b = pattern(st-offset,vel,0.5+iMouse.x/iResolution.x);\n\n    // Margins\n    color *= step(0.2,fpos.y);\n    color *= step(abs(sin(iTime)),fpos.y) - step(iTime,fpos.x/fpos.y);\n    // color *= s;\n\n    fragColor = vec4(color*(0.8+step(random(ipos.y),random(vel.y))),1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}