{
    "Shader": {
        "info": {
            "date": "1490958337",
            "description": "Forked from https://www.shadertoy.com/view/4tdXDl.\n\nThe same as its upstream except that it allows for any magnification factor, instead of being hard-coded to 2x magnification.\n\nI also took a couple of magic number into `const`s for clarity.",
            "flags": 0,
            "hasliked": 0,
            "id": "lsjczh",
            "likes": 10,
            "name": "Magnify Shader",
            "published": 3,
            "tags": [
                "glass",
                "magnification"
            ],
            "usePreview": 1,
            "username": "drewsberry",
            "viewed": 1380
        },
        "renderpass": [
            {
                "code": "// Forked from https://www.shadertoy.com/view/4tdXDl.\n\nconst float magnification = 2.0;\nconst float lens_radius = 0.3;\nconst float border_thickness = 0.01;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    //Convert to UV coordinates, accounting for aspect ratio\n    vec2 uv = fragCoord.xy / iResolution.y;\n    \n    //at the beginning of the sketch, center the magnifying glass.\n    //Thanks to FabriceNeyret2 for the suggestion\n    vec2 mouse = iMouse.xy;\n    if (mouse == vec2(0.0)) {\n        mouse = iResolution.xy / 2.0;\n    }\n    \n    //UV coordinates of mouse\n    vec2 mouse_uv = mouse / iResolution.y;\n    \n    //Distance to mouse\n    float mouse_dist = distance(uv, mouse_uv);\n    \n    //Draw the texture\n\tfragColor = texture(iChannel0, uv);\n    \n    //Draw the outline of the glass\n    if (mouse_dist < lens_radius + border_thickness) {\n        fragColor = vec4(0.1, 0.1, 0.1, 1.0);\n    }\n    \n    //Draw a zoomed-in version of the texture\n    if (mouse_dist < lens_radius) {\n        fragColor = texture(iChannel0, mouse_uv + (uv - mouse_uv) / magnification);\n    }    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}