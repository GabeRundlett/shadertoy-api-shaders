{
    "Shader": {
        "info": {
            "date": "1491314658",
            "description": "Based on the code of Shane : [url=https://www.shadertoy.com/view/ll3GRM]Rounded Voronoi Borders[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "XsByzm",
            "likes": 8,
            "name": "2D Lighted Flower Shape",
            "published": 3,
            "tags": [
                "2d",
                "simple",
                "shape",
                "lighted"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 888
        },
        "renderpass": [
            {
                "code": "// use the code and tricks of shane shader\n// Rounded Voronoi Borders https://www.shadertoy.com/view/ll3GRM\n\n#define maxRadius 20.\n#define petalThickness 5.\n#define petalCount 8.\n#define flowerThickness 6.\n\nfloat df(vec2 p)\n{\n\tfloat flower = maxRadius - petalThickness * cos(atan(p.x,p.y) * petalCount) - dot(p,p);\n\treturn flowerThickness - abs(flower);\n}\n\nvec2 hMap(vec2 uv)\n{\n    float h = df(uv*6.);\n    float c = smoothstep(0., fwidth(h)*4., h)*h;\n    return vec2(c, h);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy*2.-iResolution.xy)/iResolution.y;\n\t\n\tfloat a = iTime;\n\tvec2 ld = vec2(cos(a),sin(a)) * 0.004;\n\t\n    vec2 c = hMap(uv);\n    vec2 c2 = hMap(uv + ld);\n    \n    float b = max(c2.x - c.x, 0.)*12.;\n    \n    vec3 col = vec3(0.13,0.03,0.06)*c.x;\n\n    col += vec3(0.1,0.05,0.4)*(b*b*0.04 + b*b*b*b*0.07);\n\t \n\tfragColor = vec4(sqrt(clamp(col, 0., 1.)), 1);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}