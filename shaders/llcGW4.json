{
    "Shader": {
        "info": {
            "date": "1469213732",
            "description": "An adaptation of an outer blur shader I displayed on Twitter for my friend Siddharth Gupta",
            "flags": 0,
            "hasliked": 0,
            "id": "llcGW4",
            "likes": 4,
            "name": "Outer Blur for Siddharth",
            "published": 3,
            "tags": [
                "blur"
            ],
            "usePreview": 0,
            "username": "gunnarclovis",
            "viewed": 763
        },
        "renderpass": [
            {
                "code": "#define maxBlurStrength 720.0\n#define radius 5.0\n#define resolution 1920.0\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec4 col = vec4(0.0);\n    //float resolution = iResolution.x;\n    vec2 dir = vec2(0.001 * smoothstep(0.0, iResolution.x, iMouse.x),\n                    0.001 * smoothstep(0.0, iResolution.y, iMouse.y));\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    vec2 pos = 2.0 * fragCoord.xy - 1.0;\n    float l = length(pos);\n    if(l > radius)\n    {\n        float blur = ((l-radius) * maxBlurStrength) / resolution;\n    \n        float hstep = dir.x;\n        float vstep = dir.y;\n \n        col += texture(iChannel0, vec2(uv.x - 4.0 * blur * hstep, uv.y - 4.0 * blur * vstep)) * 0.02;\n        col += texture(iChannel0, vec2(uv.x - 3.0 * blur * hstep, uv.y - 3.0 * blur * vstep)) * 0.05;\n        col += texture(iChannel0, vec2(uv.x - 2.0 * blur * hstep, uv.y - 2.0 * blur * vstep)) * 0.12;\n        col += texture(iChannel0, vec2(uv.x - 1.0 * blur * hstep, uv.y - 1.0 * blur * vstep)) * 0.20;\n    \n        col += texture(iChannel0, vec2(uv.x, uv.y)) * 0.23;\n    \n        col += texture(iChannel0, vec2(uv.x + 1.0 * blur * hstep, uv.y + 1.0 * blur * vstep)) * 0.19;\n        col += texture(iChannel0, vec2(uv.x + 2.0 * blur * hstep, uv.y + 2.0 * blur * vstep)) * 0.12;\n        col += texture(iChannel0, vec2(uv.x + 3.0 * blur * hstep, uv.y + 3.0 * blur * vstep)) * 0.05;\n        col += texture(iChannel0, vec2(uv.x + 4.0 * blur * hstep, uv.y + 4.0 * blur * vstep)) * 0.02;\n        \n        fragColor = vec4(col.rgba);\n    }\n    else\n    {\n       fragColor = texture(iChannel0, uv);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}