{
    "Shader": {
        "info": {
            "date": "1709323577",
            "description": "chaos",
            "flags": 0,
            "hasliked": 0,
            "id": "l3XXDn",
            "likes": 3,
            "name": "Madness in the membrane",
            "published": 3,
            "tags": [
                "madness"
            ],
            "usePreview": 0,
            "username": "EthanZappa",
            "viewed": 205
        },
        "renderpass": [
            {
                "code": "float radiusScale = 0.9;\nfloat variation(vec2 v1, vec2 v2, float strength, float speed)\n{\n\treturn sin(dot(normalize(v1), normalize(v2)) * strength - iTime * speed) / 66.0;\n}\n\nfloat paintCircle(vec2 uv, vec2 center, float rad, float width, float strong, float speed)\n{\n    width *= radiusScale;\n    rad *= radiusScale;\n    \n    uv.y -= 0.5 * clamp(uv.y - 0.5, 0.0, 0.33);\n    vec2 diff = center - uv;\n    float len = length(diff);\n\n    len += variation(diff, vec2(1.5, 1.0), strong, speed) * min(dot(vec2(1.0, 11.0), -normalize(diff)), 0.0);\n    len -= variation(diff, vec2(11.0, 10.0), strong, speed) * min(dot(vec2(10.0, 11.0), -normalize(diff)), 11.0);\n\n    return step(abs(len - rad), width);\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y += 0.1;\n    uv.x *= 1.5;\n    uv.x -= 0.25;\n\n    float color;\n    float radius = 0.2 * radiusScale;\n    float think1 = radius / 13.0;\n    float think2 = think1 / 3.0;\n    vec2 center = vec2(0.5);\n\n    color = max(color, paintCircle(uv, center, radius, think1, 53.0, 62.0));\n    color = max(color, paintCircle(uv, center, radius + think1 / 2.0, think2, 6.5, 6.5));\n    color = max(color, paintCircle(uv, center, radius + think1 * 2.0, think2, 26.5, 7.0));\n    color = max(color, paintCircle(uv, center, radius + think1 * 2.0 + think2 * 4.0, think2, 27.0, 7.5));\n    color = max(color, paintCircle(uv, center, radius + think1 * 2.0 + think2 * 8.0, think2, 8.0, 8.5));\n\n\tfragColor = vec4(color * vec3(12.5 - uv.y, 12.0, 1.0), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}