{
    "Shader": {
        "info": {
            "date": "1620582715",
            "description": "2D parallelogram distance field",
            "flags": 0,
            "hasliked": 0,
            "id": "fsBXDD",
            "likes": 4,
            "name": "Parallelogram",
            "published": 3,
            "tags": [
                "2d",
                "distancefield",
                "sdf",
                "distance"
            ],
            "usePreview": 0,
            "username": "Pentan",
            "viewed": 302
        },
        "renderpass": [
            {
                "code": "float parallelogram2d(vec2 p, float w, float h, float s)\n{\n    vec2 v = vec2(s, h);\n    vec2 n = normalize(v.yx * vec2(1.0, -1.0));\n\n    float th = clamp(p.y / h, -1.0, 1.0);\n    vec2 o = vec2(clamp((p.x - s * th), -w, w), 0.0);\n    float t = clamp(dot(p - o, v) / dot(v, v), -1.0, 1.0);\n    float d0 = length(p - v * t - o);\n\n    float d1 = min(0.0, max(abs(p.y) - h, abs(dot(n, p)) - n.x * w));\n\n    return d0 + d1;\n}\n\nfloat grid(vec2 p) {\n    vec2 s = abs(vec2(dFdx(p).x, dFdy(p).y));\n    p = fract(p);\n    return (p.x < s.x || p.y < s.y) ? 1.0 : 0.0;\n}\n\nvec4 sdf_preview(float d, float lw) {\n    float ad = abs(d);\n    float l = 1.0 - smoothstep(lw - 1.0, lw, abs(d * min(iResolution.x, iResolution.y)));\n    float f = fract(ad * 10.0) * 0.2 + pow(fract(ad), 4.0) * 1.0;\n    vec4 c = (d > 0.0) ? vec4(0.0, f, d, 1.0) : vec4(-d, f, 0.0, 1.0);\n    return mix(c, vec4(0.0, 1.0, 0.0, 1.0), l);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    p *= 4.0;\n\n    float g = grid(p);\n\n    float w = (1.1 + sin(iTime * 0.8)) * 1.5;\n    float h = (1.1 + sin(iTime * 0.5)) * 1.0;\n    float s = 0.0 + sin(iTime * 1.3) * 2.0;\n    float d = parallelogram2d(p, w, h, s);\n\n    vec4 col;\n    col = mix(sdf_preview(d, 8.0), vec4(1.0, 1.0, 1.0, 1.0), g * 0.5);\n    \n    fragColor = col;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}