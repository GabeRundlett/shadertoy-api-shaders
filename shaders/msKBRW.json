{
    "Shader": {
        "info": {
            "date": "1698012501",
            "description": "Siri Wave",
            "flags": 0,
            "hasliked": 0,
            "id": "msKBRW",
            "likes": 2,
            "name": "Siri AI",
            "published": 3,
            "tags": [
                "wave",
                "siri"
            ],
            "usePreview": 0,
            "username": "Peace",
            "viewed": 113
        },
        "renderpass": [
            {
                "code": "const float PI = 3.14159265358;\n\nvec4 smin(vec4 a, vec4 b, float k) {\n    float h = clamp(0.5 + 0.5 * (a.w - b.w) / k, 0.0, 1.0);\n    return mix(a, b, h) - k * h * (1.0 - h);\n}\n\nfloat luma(vec3 color) {\n  return dot(color, vec3(0.299, 0.587, 0.114));\n}\n        \nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float min_res = min(iResolution.x, iResolution.y);\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / min_res * 1.5;\n    float t = iTime;\n    const float w = 0.01; // Line Width\n    const float f = 1.0; // Frequency\n    const float b = 60.0; // Bands\n    float amp = 0.8 * texelFetch(iChannel0, ivec2(0), 0).r; // Amplitude\n\n    float xd = abs(uv.x);\n    float falloff = (1.0 - exp(-xd * xd) + uv.x * uv.x * 0.05);\n    vec4 d = vec4(vec3(0), 999999.0);\n    float off = t * 2.0;\n    float fm = (1.0 + 0.3 * sin(t));\n    float x = uv.x * PI * f * fm - off;\n    vec4 y1 = vec4(vec3(1.0, 0.0, 0.0), sin(x));\n    vec4 y2 = vec4(vec3(0.0, 0.7, 1.0), sin(x + 1.0) * 0.5);\n    vec4 y3 = vec4(vec3(1.0, 0.0, 1.0), sin(x + 1.8) * 1.1);\n    vec4 y4 = vec4(vec3(0.0, 1.0, 1.0), sin(x + 3.0) * 0.7);\n    float am = amp / (1.0 + xd * xd * 4.0);\n    for (float i = 0.0; i <= 1.001; i += 1.0 / b) {\n        vec4 yy1 = mix(y1, y2, i);\n        vec4 yy2 = mix(y3, y4, i);\n        vec4 y = mix(yy1, yy2, i);\n        y.w = abs(uv.y - y.w * am) - w + falloff * 0.05;\n        y.rgb *= y.rgb;\n        d = smin(y, d, 0.05);\n    }\n    float a = 0.01;\n    float c = smoothstep(a, -a, d.w);\n    vec3 col = d.rgb * sqrt(c) * 0.5;\n    col += pow(luma(col), 0.3) * 1.0;\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 35,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}