{
    "Shader": {
        "info": {
            "date": "1522793474",
            "description": "You must give a description to your shader",
            "flags": 0,
            "hasliked": 0,
            "id": "XsVyzc",
            "likes": 3,
            "name": "Spinning Square - Antialias",
            "published": 3,
            "tags": [
                "square",
                "smoothstep",
                "spin"
            ],
            "usePreview": 0,
            "username": "DonKarlssonSan",
            "viewed": 614
        },
        "renderpass": [
            {
                "code": "#define rotate(a)  mat2(cos(a), -sin(a), sin(a), cos(a))\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    /*\n    vec2 uv = (fragCoord.xy -0.5 * iResolution.xy) / iResolution.x * rotate(iTime / 3.0);\n\n    float smoothness = 2.0 / iResolution.x;\n    float size = 0.18;\n    float left = smoothstep(-size, -size + smoothness, uv.x); \n    float bottom = smoothstep(-size, -size + smoothness, uv.y);\n    float top = smoothstep(1.0 - size - smoothness, 1.0 - size, 1.0 - uv.x);\n    float right = smoothstep(1.0 - size -smoothness, 1.0 - size, 1.0 - uv.y);   \n    \n    vec3 color = vec3(left * top * right * bottom);\n    \n    fragColor = vec4(color, 1.0);\n    */\n    \n    \n    float size = 0.18;\n    float smoothness = 2.0 / iResolution.x;\n    vec2 uv = (fragCoord.xy -0.5 * iResolution.xy) / iResolution.x * rotate(iTime / 3.0);\n\n    // Thanks to FabriceNeyret2 for this clever snippet!\n    uv = abs(uv);\n    float d = max(uv.x, uv.y);\n    fragColor = vec4(smoothstep(size, size - smoothness, d));\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}