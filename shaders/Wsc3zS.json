{
    "Shader": {
        "info": {
            "date": "1568733809",
            "description": "SPACE: switch mode 0: horizontal gradient between still & rotating texture.  mode 1: 50-50\nTop: smart blend (morph bases). Bottom: simple blend + stddev-normalize.\n\nMouse.y : amount of grey transition. -> pure Black-or-white (bottom)  vs grey-level noise.",
            "flags": 16,
            "hasliked": 0,
            "id": "Wsc3zS",
            "likes": 0,
            "name": "smart perlin blend percep. - rot",
            "published": 3,
            "tags": [
                "noise",
                "perlin",
                "perception",
                "short",
                "artefact",
                "paradoxical"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 429
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/3d3GzS\n// PS: this is just a sketch of test: noise is too low quality as it is.\n\n#define L  10.\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a)) // rot\n#define T(u) ( 2.* texture(iChannel0, (u)/1e3 ).r -1. )\n#define B(T) ( 1. - abs( T ) )\n#define R (iResolution.xy)\n#define keyToggle(a)  ( texelFetch(iChannel3,ivec2(a,2),0).x > 0.)\n\nfloat N(vec2 u0, vec2 u1) { // smart blend of 2 perlin noise \n\tmat2 M = rot(1.7);                        // to decorelate layers\n    float v = 0., S = 0., s=1.,\n          a = keyToggle(32) ? .5 : clamp(u0.x*R.y/R.x+.5,0.,1.);\n    \n    for (float k=0.; k<L; k++) {              // loop on harmonics\n        vec2  x0 = 10.*M*u0/s,\n              x1 = 10.*M*u1/s;\n        float t0 = T(x0), t1 = T(x1),\n              t = mix(t0,t1,a)/sqrt(a*a + (1.-a)*(1.-a)), // morph: blend random bases\n              b0 = B(t0) -.5,\n              b1 = B(t1) -.5,\n              b = u0.y > 0. \n                      ? B(t) - .5                               // morphing\n                      : mix(b0,b1,a)/sqrt(a*a + (1.-a)*(1.-a)); // blend+normalize\n\t    v += (.5 + b ) *s; \n        S += s;\n\t\tM *= M; s/=2.; \n\t}\n    return v/S;\n}\n\nvoid mainImage( out vec4 O, vec2 U ) {\n    if (floor(U.y)==floor(R.y/2.)) { O=vec4(1,0,0,0); return; }\n\tU = (U-.5*R)/R.y;\n    float T = .5*iTime;\n    float e = iMouse.y > 0. ? .5*iMouse.y/R.y: 3./R.y,  // tunes transition\n          v = N(U, U*rot(T)+10.);    \n    O = vec4( pow(smoothstep(.7-e,.7+e, v ),1./2.2) );  // antialiasing + to SRGB\n}                                               // .7 because of interp ( otherwise .5 )",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}