{
    "Shader": {
        "info": {
            "date": "1672375256",
            "description": "for a screen-printing project.",
            "flags": 0,
            "hasliked": 0,
            "id": "dllGDB",
            "likes": 7,
            "name": "catradora starfield",
            "published": 3,
            "tags": [
                "catradorastars"
            ],
            "usePreview": 0,
            "username": "elenzil",
            "viewed": 238
        },
        "renderpass": [
            {
                "code": "#define RES    iResolution\n#define MINRES min(RES.x, RES.y)\nconst float   DEG2RAD = 2.0 * 3.14159 / 360.0;\n\n// units per pixel. set at runtime.\nfloat UPP = 1.0;\n\nfloat THETA = 5.0 * DEG2RAD;\n\n\nmat2 rot2(in float theta) {\n    return mat2(cos(theta), sin(theta), -sin(theta), cos(theta));\n}\n\n\nvoid star(inout float c, in vec2 p, in vec2 q, in float r, in float z) {\n    p  -= q;\n    p *= rot2(THETA);\n    float l  = length(p);\n    float d   = l - r;\n    \n    z *= r / 0.2;\n    \n    d *= pow(abs(p.x), z);\n    d *= pow(abs(p.y), z);\n    \n    d = smoothstep(0.0, 0.1, d) * 18.0;\n    d = max(d, (l - r * 5.0));\n    \n    c = mix(c, 1.0, smoothstep(UPP, 0.0, d));\n    c = mix(c, 0.0, smoothstep(UPP, 0.0, l - r * 0.9));\n}\n\nvoid mainImage(out vec4 RGBA, in vec2 XY) {\n    float zoom = 0.8;\n    UPP = 1.0 / (zoom * MINRES);\n    vec2 uv = (XY - RES.xy/2.0) * UPP * 2.0;\n    \n    float c = 0.0;\n    \n    float num = 60.0;\n    \n    for (float n = 0.0; n < num; ++n) {\n        vec3  h = hash31(n * 11.0);\n        \n        vec2  p = (h.xy - 0.5) * 4.0;\n        float r = mix(0.03, 0.3, pow(h.z, 4.8));\n    \n        star(c, uv, p, r, 1.1);\n    }\n    \n    \n    RGBA = vec4(c, c, c, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\n// Dave Hoskins\n// https://www.shadertoy.com/view/4djSRW\n//----------------------------------------------------------------------------------------\n//  2 out, 1 in...\nvec2 hash21(float p)\n{\n\tvec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n\tp3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n//----------------------------------------------------------------------------------------\n//  3 out, 1 in...\nvec3 hash31(float p)\n{\n   vec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n   p3 += dot(p3, p3.yzx+33.33);\n   return fract((p3.xxy+p3.yzz)*p3.zyx); \n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}