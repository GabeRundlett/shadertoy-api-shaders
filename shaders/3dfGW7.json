{
    "Shader": {
        "info": {
            "date": "1546454279",
            "description": "you have 4 second on 60Hz display for switch fullscreen\n\nif you go fullscreen after, the mipmap cause problem, so you need to reset before fullscreen\n\nif you see only yellow background, please reset time\n",
            "flags": 32,
            "hasliked": 0,
            "id": "3dfGW7",
            "likes": 10,
            "name": "Shortest GrayScott (192c)",
            "published": 3,
            "tags": [
                "2tweets",
                "grayscott",
                "shortest"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 778
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 f,vec2 u) { mi }\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage(out vec4 f,vec2 u) { mi }",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Shortest GrayScott (187/244c)\n// https://www.shadertoy.com/view/3dfGW7\n\n/* iapafoto and FabriceNeyret2 Version with LOD 1 width define trick : 192c */\n#define t texture(iChannel0, g/iResolution.xy//\n#define mi                                   \t    \\\n    vec2 g = u,                      \t\t\t\t\\\n         w = t).g * t).b * t).bb;                   \\\n    f   =  .8 * t,1.)   - w.x + .045 + .155 * t);   \\\n    f.b = .32 * t,1.).b + w.x        + .575 * t).b; \\\n    iFrame < 240 ? f = texture(iChannel1, g/640.) : f;  \n        \n/* FabriceNeyret2 and iapafoto Version with LOD 1 width define trick : 202c\n#define t texture( iChannel0, g\n#define mainImage(f,u)                         \t\t\\\n    vec2 g = u/iResolution.xy;                 \t\t\\\n    f = t);                                    \t\t\\\n    float w = f.g * f.b * f.b;                 \t\t\\\n    f.rg +=  .8 * t,1.).g - w + .045 - .845 * f.g;  \\\n    f.b  += .32 * t,1.).b + w - .425 * f.b;         \\\n    iTime < 4. ? f = texture(iChannel1, g).rrgg : f\n/**/\n\n/* FabriceNeyret2 Version with LOD 1 : 211c\n#define t texture( iChannel0, g\nvoid mainImage( out vec4 f, vec2 g )\n{\n    g /= iResolution.xy;\n    f = t );\n    \n    float w = f.g * f.b * f.b;\n    vec4 l = t, 1. ) -f;    \n\n    f.rg +=      l.g - w + .045 * (1. - f.g);\n    f.b  += .4 * l.b + w - .105 * f.b;\n    \n    f = iTime < 1. ? texture(iChannel1, g).rrgg : f; // thanks iapafoto\n}/**/\n\n/* FabriceNeyret2 Version without LOD 1 : 236c\nvoid mainImage( out vec4 f, vec2 g )\n{\n    f = max(t(g),0.); \n    \n    vec4  l = -f;\n    \n    float a = 0., w = f.g * f.b * f.b;\n    for (; a < 6.; a+=.8) \n        l += t( g + sin(a+vec2(0,1.6)) ) / 8.;    \n\n    f.rg +=      l.g - w + .045 * (1. - f.g);\n    f.b  += .4 * l.b + w - .105 * f.b;\n    \n    if (iFrame < 60) f = texture(iChannel1, g/iResolution.xy).rrgg;\n    \n}/**/\n\n/* Aiekick (me) version : 320c\n#define t texture(iChannel0,\nvoid mainImage( out vec4 f, vec2 g )\n{\n    vec4 \n        k = vec4(iResolution.xy,.045,.06), \t// res, feed, kill\n        l = k-k; \t\t\t\t\t\t\t// laplacin var\n    \n    // laplacian\n    // here the factors are all .2, instead of .05 for corner and .2 for sides\n    // juste for code golf\n    // the normal angle step is .78539 (pi/4), but 0.8 work because we just\n    // need the round coordinates here, for laplacian check :)\n    // for glsl 2.0 es, round(a) can be replaced by floor(a+.5)\n    for (float a = 0.; a < 6.; a+=.8) \n        l += t (g + round(sin(a+vec2(0,1.6))))/k.xy)/8.; \n    l -= f = t g/k.xy);\n    \n    l.w = f.g * f.b * f.b; // reaction A * B * B\n    \n    // we juste need f.g but here f.r is used only\n    // because classic reg/green break my eyes :)\n    f.rg += l.g + k.z * (1. - f.g) - l.w;\n    f.b += .4 * l.b + l.w - (k.z + k.w) * f.b;\n    \n    // some times its necessary fo clamp result, for avoid trash\n    // f = clamp(f,0.,1e2);\n    \n    // alpha is rewritten by shadertoy in the image sheet not in buffer\n    // but alpha is never used in buffer, so idc :)\n    // in GLSLSandBox we need to define it )\n    \n    if (iFrame < 60) f = texture(iChannel1, g/k.xy).rrgg;\n    //if (iFrame < 60 && length(g-k.xy*.5)<5.) f = vec4(1,1,0,1);\n}/**/",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}