{
    "Shader": {
        "info": {
            "date": "1637671087",
            "description": "A four-leaf clover pattern.",
            "flags": 0,
            "hasliked": 0,
            "id": "NtGGWD",
            "likes": 3,
            "name": "Four-leaf clover quilt",
            "published": 3,
            "tags": [
                "fractal",
                "clover",
                "carpet",
                "rug"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 254
        },
        "renderpass": [
            {
                "code": "//change this constant to get different patterns!\n#define c2 0.\n\n#define c1 vec4(3.0+c2,2.5+c2,1.5,0)\n\nvec2 triangle_wave(vec2 a,float scale){\n    return abs(fract((a+c1.xy)*scale)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col;  \n    float t1 = 9.;\n\n    vec2 uv = (fragCoord-iResolution.xy)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float offset = .5;\n    float scale2 = 1.5;\n    for(int c=0;c<3;c++){\n        float scale = c1.z;\n        for(int i=0;i<3;i++)\n        {\n            float bend = 1.0; \n            for(int k = 0; k < 9; k++){       \n                uv /= scale2;\n                uv = triangle_wave(uv.yx+offset,scale)/bend+triangle_wave(uv+offset/scale2,scale)*bend;\n                //bend = 1.+uv.x/2.;\n            }\n            scale /= 1.+(scale2)*col.x/(8.);\n            scale2 -= (col.x-1.)/4.;\n            col[c] = abs(col[c] - ((uv.x)-(uv.y)));\n        }\n\t}\n    fragColor = vec4(vec3(col),1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}