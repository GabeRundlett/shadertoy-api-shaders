{
    "Shader": {
        "info": {
            "date": "1604980838",
            "description": "Hap brth",
            "flags": 0,
            "hasliked": 0,
            "id": "WddfW8",
            "likes": 3,
            "name": "For rentacat45",
            "published": 3,
            "tags": [
                "2d",
                "relax"
            ],
            "usePreview": 0,
            "username": "Arseny",
            "viewed": 269
        },
        "renderpass": [
            {
                "code": "// https://www.shadertoy.com/view/4djSRW\nfloat hash12(vec2 p)\n{\n    p += vec2(523.124, 244.155);\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n//https://iquilezles.org/articles/distfunctions2d\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nvec4 blend(vec4 a, vec4 b){\n    return vec4(mix(a.rgb, b.rgb, clamp(-b.a, 0., 1.)), min(b.a, a.a));\n}\n\nvec4 cloud(vec2 uv, float seed){\n    uv.x *= mix(0.9, 1.1, hash12(vec2(seed, 0.)));\n    uv.y *= mix(0.9, 1.1, hash12(vec2(seed, -1.)));\n    float d = 0.;\n    d = sdSegment(\n        uv, vec2(-1., 0.), vec2(1., 0.)\n    ) - 0.25;\n    vec2 c1 = vec2(\n        mix(\n            -0.65, -0.55, \n            hash12(\n                vec2(seed, 1.)\n            )\n        ), \n        mix(\n            0.3, 0.45, \n            hash12(\n                vec2(seed, 2.)\n            )\n        )\n    );\n    d = min(d, length(uv - c1) - mix(0.35, 0.45, hash12(vec2(seed, 3.))));\n    vec2 c2 = vec2(\n        mix(\n            -0.1, 0.1, \n            hash12(\n                vec2(seed, 4.)\n            )\n        ), \n        mix(\n            0.45, 0.55, \n            hash12(\n                vec2(seed, 5.)\n            )\n        )\n    );\n    d = min(d, length(uv - c2) - mix(0.6, 0.7, hash12(vec2(seed, 6.))));\n    vec2 c3 = vec2(\n        mix(\n            0.5, 0.6, \n            hash12(\n                vec2(seed, 7.)\n            )\n        ), \n        mix(\n            0.3, 0.4, \n            hash12(\n                vec2(seed, 8.)\n            )\n        )\n    );\n    d = min(d, length(uv - c3) - mix(0.4, 0.5, hash12(vec2(seed, 9.))));\n    return vec4(1., 1., 1., d * 20.);\n}\n\nvec4 clouds(vec2 uv){\n    uv /= 1.2;\n    vec2 lv = uv;\n    vec2 rep = vec2(4., 2.);\n    vec2 id = floor(vec2(uv.x / 5. + iTime / 4. * floor(uv.y / 2. + 1.), uv.y / 2.));\n    id.y = floor(uv.y / rep.y) * rep.y;\n    uv.x -= (2. - id.y / 10.) * iTime;\n    id.x = floor(uv.x / rep.x) * rep.x;\n    \n    lv = uv - id;\n    lv.x -= 2.5;\n    lv.y -= 1.;\n    lv.x -= mix(-0.5, 0.5, hash12(id));\n    lv.y -= mix(-.8, .2, hash12(id));\n    return cloud(lv * 1.5, hash12(id)) * step(0., uv.y);\n    return vec4(lv, 0., step(0., uv.y) * -1.);\n}\n\nvec2 strangeTrans1(vec2 uv){\n\tvec2 lv = uv;\n    lv.y += 4.2;\n    lv.x += 1.;\n    lv.y -= pow(lv.x / 6., 2.);\n    return lv;\n}\n\nvec2 strangeTrans2(vec2 uv){\n    vec2 lv = uv;\n    lv.y += 3.8;\n    lv.x -= 1.;\n    lv.y -= pow(lv.x / 5.8, 2.);\n    return lv;\n}\n\nvec4 wires(vec2 uv){\n    vec2 lv = uv;\n    vec4 ans = vec4(0., 0., 0., 0.);\n    lv = uv - vec2(0., 0.7);\n    float d = sdSegment(lv, vec2(-7., -7), vec2(-7., -3.)) - 0.1;\n    d = min(d, sdSegment(lv, vec2(-8., -3.5), vec2(-6., -3.)) - 0.07);\n    d = min(d, sdSegment(lv, vec2(-6.5, -3.12), vec2(-7., -3.9)) - 0.07);\n    \n    \n    \n    vec4 pole1 = vec4(0.64, 0.43, 0.39, d * 30.);\n    lv = uv - vec2(0., 0.7);\n    d = sdSegment(lv, vec2(7., -7), vec2(7., -3.)) - 0.1;\n    d = min(d, sdSegment(lv, vec2(6., -3.5), vec2(8., -3.)) - 0.07);\n    //d = min(d, sdSegment(lv, vec2(6., -4.), vec2(8., -3.5)) - 0.07);\n    d = min(d, sdSegment(lv, vec2(7.5, -3.12), vec2(7., -3.9)) - 0.07);\n    vec4 pole2 = vec4(0.64, 0.43, 0.39, d * 30.);\n    \n    ans = blend(ans, pole1);\n    \n    lv = strangeTrans1(uv);\n    d = sdSegment(lv, vec2(-7., 0.), vec2(7., 0.)) - 0.05;\n    /*lv = uv;\n    lv.y += 3.8;\n    lv.x -= 1.;\n    lv.y -= pow(lv.x / 5.8, 2.);*/\n    lv = strangeTrans2(uv);\n    d = min(d, sdSegment(lv, vec2(-7., 0.), vec2(7., 0.)) - 0.05);\n    vec4 wire = vec4(0., 0., 0., d * 20.);\n    ans = blend(ans, wire);\n    \n    ans = blend(ans, pole2);\n    \n    return ans;\n}\n\nvec4 pigeon(vec2 uv){\n    uv -= vec2(0.3, 1.2);\n    float d = sdSegment(uv, vec2(0., -0.2), vec2(0., -1.)) - 0.22;\n    d = min(d, sdSegment(uv, vec2(-0.5, -1.), vec2(0., -1.)) - 0.32);\n    vec4 ans = vec4(0.47, 0.51, 0.72, d * 40.);\n    ans = blend(ans, vec4(0.37, 0.41, 0.62, 40. * (sdSegment(uv, vec2(-0.7, -0.85), vec2(-.1, -0.8)) - 0.2)));\n    \n    ans = blend(ans, vec4(0.37, 0.41, 0.62, 40. * (sdSegment(uv, vec2(0.15, -0.3), vec2(0.25, -0.3)) - 0.05)));\n    \n    ans = blend(ans, vec4(1., 1., 1., 40. * (length(uv / vec2(1., 0.7) - vec2(0., -0.23)) - 0.1)));\n    return ans;\n}\n\nvec4 pigeons(){\n    return vec4(0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    uv *= 10.;\n    \n    vec4 res = vec4(0., 0.8, 0.9, 1.);\n    //res = blend(res, cloud(uv, iTime));\n    res = blend(res, clouds(uv));\n    res = blend(res, wires(uv));\n\t//res = blend(res, pigeon(uv));\n    //uv.y += iTime;\n    \n    vec2 sh = mix(vec2(10., -5.), vec2(-5., 0.), min(iTime / 5., 1.));\n    //vec2 sh = vec2(iTime, -3.);\n    \n    //res = blend(res, pigeon(strangeTrans1( uv ) + sh ));\n    for (float i = 0.; i < 8.; ++i){\n        //float iter = floor(iTime / 5. / 3.);\n        float t_ = iTime / 8. - hash12(vec2(i * i)) / 3.;\n        float t = fract(t_ / 5. + i / 8.) * 6.;\n        float id = floor(t_ / 5. + i / 8.);\n        vec2 b = vec2(13., mix(-3., -5., hash12(vec2(i * 1.413, id))));\n        vec2 m = vec2(mix(6., -5., hash12(vec2(i * 35.4, id))), 0.);\n        vec2 e = vec2(-13., mix(-3., -5., hash12(vec2(i * 43.4, id))));\n        float leaveT = mix(2., 3., hash12(vec2(i * 153.4, id)));\n        sh = mix( mix(b, m, clamp(t, 0., 1.)), mix(m, e, clamp(t, leaveT, leaveT + 1.) - leaveT), step(leaveT, t)  );\n        \n        res = blend(res, pigeon(\n            mix(strangeTrans1( uv ), strangeTrans2( uv ), \n                step(0.5, hash12(vec2(i * 123.4, id)))\n            ) + sh \n        ));\n    }\n    \n    // Time varying pixel color\n\n    // Output to screen\n    fragColor = res;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}