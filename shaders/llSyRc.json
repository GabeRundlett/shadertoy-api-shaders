{
    "Shader": {
        "info": {
            "date": "1509488147",
            "description": "Concentric lines",
            "flags": 0,
            "hasliked": 0,
            "id": "llSyRc",
            "likes": 5,
            "name": "Concentric lines",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "lines",
                "spiral",
                "concentric"
            ],
            "usePreview": 0,
            "username": "jakeactuallynext",
            "viewed": 607
        },
        "renderpass": [
            {
                "code": "float rand(vec2 c){\n\treturn fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise(vec2 p, float freq ){\n\tfloat unit = iResolution.x/freq;\n\tvec2 ij = floor(p/unit);\n\tvec2 xy = mod(p,unit)/unit;\n\t//xy = 3.*xy*xy-2.*xy*xy*xy;\n\txy = .5*(1.-cos(3.14*xy));\n\tfloat a = rand((ij+vec2(0.,0.)));\n\tfloat b = rand((ij+vec2(1.,0.)));\n\tfloat c = rand((ij+vec2(0.,1.)));\n\tfloat d = rand((ij+vec2(1.,1.)));\n\tfloat x1 = mix(a, b, xy.x);\n\tfloat x2 = mix(c, d, xy.x);\n\treturn mix(x1, x2, xy.y);\n}\n\nfloat pNoise(vec2 p, int res){\n\tfloat persistance = .5;\n\tfloat n = 0.;\n\tfloat normK = 0.;\n\tfloat f = 4.;\n\tfloat amp = 1.;\n\tint iCount = 0;\n\tfor (int i = 0; i<50; i++){\n\t\tn+=amp*noise(p, f);\n\t\tf*=2.;\n\t\tnormK+=amp;\n\t\tamp*=persistance;\n\t\tif (iCount == res) break;\n\t\tiCount++;\n\t}\n\tfloat nf = n/normK;\n\treturn nf*nf*nf*nf;\n}\n\nvoid mainImage(out vec4 O, in vec2 u)\n{\n    u = u - iResolution.xy / 2.0;\n    float angle = atan(u.x, u.y);\n\tfloat mag = sqrt(u.x * u.x + u.y * u.y);\n    float twirlX = mag - angle * 100.0;\n    float twirlY = mag + angle * 100.0 + iTime * 200.0;\n    float pointX = step( 0.01, pNoise(vec2(twirlX * 10.0, iTime * 20.0), 1) );\n    float pointY = step( 0.05, pNoise(vec2(twirlY * 2.0, 0.0), 1) );\n\tO = vec4(pointX + pointY);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}