{
    "Shader": {
        "info": {
            "date": "1576355518",
            "description": "Number of pens = res.x\nscribbles speed = brightness ( here, of red channel ).",
            "flags": 32,
            "hasliked": 0,
            "id": "tl33WN",
            "likes": 16,
            "name": "scribbles video",
            "published": 3,
            "tags": [
                "doodles",
                "scribbles",
                "graffitis"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 643
        },
        "renderpass": [
            {
                "code": "// --- display\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = sqrt( texture(iChannel0, U/iResolution.xy) );  // to sRGB\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// --- source\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = texture(iChannel0, U/iResolution.xy); O*=O;  // texture in flat RGB\n    O.a = length(O.rgb)/sqrt(3.);                    // brightness\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// --- draw\n\n// --- antialiased line drawing ------ // https://www.shadertoy.com/view/llySRh\n#define S(d) smoothstep( .8/R.y, 0., d )                  // antialiased draw\n// segment with disc ends: seamless distance to segment\nfloat line(vec2 p, vec2 a,vec2 b) { \n    p -= a, b -= a;\n    float h = clamp(dot(p, b) / dot(b, b), 0., 1.);       // proj coord on line\n    p -=  b * h;\n    return dot(p,p);                                      // distÂ² to segment\n}\n\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n   \n    if (texture(iChannel0, .5/R).w != R.x ) {             // 1st frame or resize\n        if(U.y==.5) {                                     // init particles\n            float i = U.x/sqrt(R.x);\n            O.x = fract(i), O.y = i/sqrt(R.x), O.z = 1.;  // x,y, v\n            O.w = R.x;\n        }\n        return;    \n    }\n        \n                                                          // scribble motion\n#define V(V,x) cos( v*6.28* sign(mod(x,2.)-1.) * iTime + x + vec2(0,11)) *2.*v*V/R.y + cos(x+vec2(0,11))/R.y\n    float v= 3.;\n    \n    O = texture(iChannel0, U/R);\n    if(U.y==.5) {                                         // move paticles\n        O.xy = fract( O.xy + V(O.z,U.x) );                // speed prop to image value\n        O.z  = texture(iChannel1, O.xy).r;\n        return;\n    }\n    \n    float d = 1e5;\n    for (float i = .5; i < R.x; i++) {                    // draw particles trajectory\n        vec4 T = texture(iChannel0, vec2(i,.5)/R);\n        d = min(d, line( U/R, T.xy,  T.xy +  V(T.z,i) ) );\n   }\n    \n   O = .97*O + S(sqrt(d)) *texture(iChannel1,U/R);        // blend and fade\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}