{
    "Shader": {
        "info": {
            "date": "1602871345",
            "description": "Studying color science. The colors are converted by me from the official L*a*b* D50 values to sRGB D65.",
            "flags": 0,
            "hasliked": 0,
            "id": "WdVcDW",
            "likes": 10,
            "name": "The ColorChecker",
            "published": 3,
            "tags": [
                "color",
                "macbeth",
                "colorchecker"
            ],
            "usePreview": 0,
            "username": "thepheer",
            "viewed": 473
        },
        "renderpass": [
            {
                "code": "const vec3 colors[] = vec3[] (\n    vec3(0.454, 0.311, 0.255), // Dark skin\n    vec3(0.773, 0.563, 0.497), // Light skin\n    vec3(0.356, 0.472, 0.609), // Blue sky\n    vec3(0.359, 0.425, 0.250), // Foliage\n    vec3(0.514, 0.498, 0.685), // Blue flower\n    vec3(0.374, 0.740, 0.673), // Bluish green\n    vec3(0.879, 0.487, 0.189), // Orange\n    vec3(0.269, 0.351, 0.656), // Purplish blue\n    vec3(0.774, 0.313, 0.373), // Moderate red\n    vec3(0.364, 0.227, 0.407), // Purple\n    vec3(0.612, 0.734, 0.228), // Yellow green\n    vec3(0.892, 0.633, 0.153), // Orange yellow\n    vec3(0.156, 0.241, 0.570), // Blue\n    vec3(0.238, 0.577, 0.275), // Green\n    vec3(0.699, 0.210, 0.222), // Red\n    vec3(0.927, 0.782, 0.057), // Yellow\n    vec3(0.750, 0.309, 0.574), // Magenta\n    vec3(0.000, 0.521, 0.648), // Cyan\n    vec3(0.945, 0.948, 0.923), // White\n    vec3(0.789, 0.793, 0.788), // Neutral 8\n    vec3(0.632, 0.640, 0.638), // Neutral 6.5\n    vec3(0.473, 0.474, 0.473), // Neutral 5\n    vec3(0.324, 0.330, 0.331), // Neutral 3.5\n    vec3(0.194, 0.195, 0.197)  // Black\n);\n\nvec3 colorchecker(vec2 uv) {\n    vec2 xy = vec2(3.0, 2.0) + vec2(3.0, -2.0)*uv;\n    vec2 ta = smoothstep(0.45, 0.42, 0.5 - fract(xy));\n    vec2 tb = step(abs(0.5 - fract(xy)), vec2(0.45));\n    vec3 ca = rsrgb(vec3(64.0/255.0));\n    vec3 cb = rsrgb(colors[6*int(xy.y) + int(xy.x)]);\n    vec3 cc = mix(vec3(0.02), cb, 0.2 + 0.8*ta.x*ta.y);\n    return srgb(mix(ca, cc, tb.x*tb.y));\n}\n\nvoid mainImage(out vec4 rgba, in vec2 xy) {\n    vec2 uv = 2.0*xy/iResolution.xy - 1.0;\n    vec2 r = vec2(6.0, 4.0)/iResolution.xy;\n    vec2 s = 1.1*max(r.x, r.y)/r.xy;\n    rgba = vec4(colorchecker(clamp(s*uv, -1.0, 1.0)), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec3 srgb(vec3 c) {\n    vec3 a = 1.055*pow(c, vec3(1.0/2.4)) - 0.055;\n    vec3 b = 12.92*c;\n    return mix(a, b, lessThanEqual(c, vec3(0.0031308)));\n}\n\nvec3 rsrgb(vec3 c) {\n    vec3 a = pow((c + 0.055)/1.055, vec3(2.4));\n    vec3 b = c/12.92;\n    return mix(a, b, lessThanEqual(c, vec3(0.04045)));\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}