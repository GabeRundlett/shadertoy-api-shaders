{
    "Shader": {
        "info": {
            "date": "1622200559",
            "description": "Well I tried to use the code I found to convert the HSV value to RGB instead, of the one I wrote and this kind of thing comes out of it, I kinda like it.",
            "flags": 0,
            "hasliked": 0,
            "id": "stf3D7",
            "likes": 3,
            "name": "Kinda cool, HSV Wheel Mishap",
            "published": 3,
            "tags": [
                "wheel",
                "hsv",
                "mishap"
            ],
            "usePreview": 0,
            "username": "MrNissenDK",
            "viewed": 277
        },
        "renderpass": [
            {
                "code": "float PI = 3.1415926;\nfloat THI = 6.2831853;\n\nvec3 HSV2RGB(vec3 color){//Based on https://www.rapidtables.com/convert/color/hsv-to-rgb.html\n    color.x = fract(color.x);\n    color = clamp(color,0.,1.);\n    \n    float C = color.z * color.y;\n    float X = C * (1. - abs(mod(color.x*360./60.,2.) - 1.));\n    float m = color.z - C;\n    \n    vec3 RGB_1;\n    switch(int(color.x*6.)){\n        case 0:\n            RGB_1 = vec3(C,X,0);\n            break;\n        case 1:\n            RGB_1 = vec3(X,C,0);\n            break;\n        case 2:\n            RGB_1 = vec3(0,C,X);\n            break;\n        case 3:\n            RGB_1 = vec3(0,X,C);\n            break;\n        case 4:\n            RGB_1 = vec3(X,0,C);\n            break;\n        case 5:\n            RGB_1 = vec3(C,0,X);\n            break;\n            \n    }\n    return vec3((RGB_1.x+m),(RGB_1.y+m),(RGB_1.z+m));\n}\nvec3 hsv2rgb(vec3 c){\n\tvec4 K=vec4(1.,2./3.,1./3.,3.);\n\treturn c.z*mix(K.xxx,clamp(abs(fract(c.x+K.xyz)*6.-K.w)-K.x,0.,1.),c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ((fragCoord - .5 * iResolution.xy) / iResolution.y) * 3.;\n    \n    vec3 col = vec3(0);\n    \n    col += hsv2rgb(vec3(atan(uv.y,uv.x)/THI + iTime / 5.,length(uv)*4.,4.-length(uv)*4.));\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}