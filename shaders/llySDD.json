{
    "Shader": {
        "info": {
            "date": "1484345236",
            "description": "A feedback system made by differencing frames and a little hash. Give it a second to get started.",
            "flags": 32,
            "hasliked": 0,
            "id": "llySDD",
            "likes": 20,
            "name": "random feed",
            "published": 3,
            "tags": [
                "random",
                "feedback",
                "difference"
            ],
            "usePreview": 0,
            "username": "aferriss",
            "viewed": 1152
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 feedback = texture(iChannel0, uv);\n\tfragColor = feedback;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define TWO_PI 6.283185\n\nfloat map(float value, float inMin, float inMax, float outMin, float outMax) {\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 vUv = fragCoord.xy / iResolution.xy;\n    float time = iTime;\n\tfloat angle =  TWO_PI + time*0.001;\n    \n    //zoom texcoords\n\tvec2 tc = vUv;\n\ttc = -1.0 + 2.0 * tc;\n\ttc *= 0.995;\n\ttc = tc * 0.5 + 0.5;\n\n\tvec2 tc2 = vUv;\n\t// tc2 = -1.0 + 2.0 * tc2;\n\ttc2 *= map(sin(time*0.01), -1.0, 1.0, 0.7, 0.9);\n\t// tc2 = tc2 * 0.5 + 0.5;\n\ttc.y += 0.006;\n\ttc.x -= 0.006;\n    \n\tvec4 tex = texture(iChannel0, tc2 );\n\t\n    //a little offset rotation\n\ttc.x += cos(angle) / iResolution.x*5.0;\n\ttc.y += sin(angle) / iResolution.y*5.0;\n\t\n\tvec4 tex2 = texture(iChannel0, vec2(tc.x - tex.r*0.03, tc.y - tex.g*0.03));\n\n    //some colors\n\ttex.r += 0.011;\n\ttex.g += 0.012;\n\ttex.b += 0.013;\n\t\n    //diff frames\n\ttex2.rgb -= tex.rgb*0.1;\n    \n\t\n    //add some juice\n\tfragColor = tex2 * 1.01;\n    fragColor.rgb = clamp(fragColor.rgb,vec3(0.0), vec3(1.0)); \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime*0.1;\n    vec2 vUv = fragCoord.xy / iResolution.xy;\n    vec4 tex = texture(iChannel0, vUv);\n\tfloat random = rand(vUv+time*0.01);\n\n\tfragColor = mix(vec4(random), tex+random*0.025, clamp(time*10.0, 0.0,1.0));\n    \n    fragColor.rgb = clamp(fragColor.rgb,vec3(0.0), vec3(1.0)); \n\tfragColor.a = 1.0;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}