{
    "Shader": {
        "info": {
            "date": "1458061967",
            "description": "I'm trying to recreate the intro screen of the game nuclear throne by vlamber.<br/>I've started from aiekick's Subo Glacius 2 : https://www.shadertoy.com/view/MsGGWy#<br/>I'm not good with 3D shaders",
            "flags": 0,
            "hasliked": 0,
            "id": "ldtSR4",
            "likes": 9,
            "name": "Nuclear Throne tunnel",
            "published": 3,
            "tags": [
                "tunnel"
            ],
            "usePreview": 0,
            "username": "antonOTI",
            "viewed": 1115
        },
        "renderpass": [
            {
                "code": "// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//base shader : https://www.shadertoy.com/view/MsGGWy#\n// this shader was made by Anton Roy/ 2016\n\n// missing : \n// - particles\n// - lightnings\n\nconst float mPi = 3.14159;\nconst float m2Pi = 6.28318;\n\nvec3 wtexture(vec2 pos)\n{\n    return mix(vec3(0.211,0.101,0.266),vec3(0.070,0.035,0.090),step(mod(pos.x * 4.38 - pos.y * 12.,1.),.5));\n}\n\nvec2 path(vec3 p)\n{\n    float amplitude = 1.9;\n    float speed = 1.5;\n\tp.x = sin(p.z*speed)*amplitude;\n\tp.y = cos(p.z*speed)*amplitude;\n\treturn p.xy;\n}\n\nfloat df(vec3 p)\n{\n\tp.xy += path(p);\n\treturn 2. - length(p.xy);\n}\n\n\nvec3 dcol(vec3 p)\n{\n\tp.xy += path(p);\n\treturn wtexture(p.xz/5. * vec2(1.,sign(p.y))) ;\n}\n\nvoid mainImage( out vec4 f, in vec2 g )\n{\n\tf = vec4(0);\n\t\n\t\n\t// params\n\tvec2 si = iResolution.xy;\n\tvec2 uv = (g+g-si.xy) / min(si.x, si.y);\n    float pixel = 50.;\n    uv = floor(uv * pixel)/pixel;\n    \n\tfloat t = iTime * .5;\n\tvec3 ro = vec3(0,-.5,t);\n\tro.xy -= path(ro);\n\t\n\tvec3 co = ro + vec3(0,0,1);\n\tvec3 cu = vec3(0,1,0);\n\t\n\tfloat fov = 5.;\n\tvec3 z = normalize(co - ro);\n\tvec3 x = normalize(cross(cu, z));\n\tvec3 y = normalize(cross(z, x));\n\tvec3 rd = normalize(z + fov * uv.x * x + fov * uv.y * y);\n\n\tfloat md = 50.;\n\t\n\tfloat s = 0.1, d = -0.2;\n\tvec3 p = ro + rd * d;\n    vec3 col;\n\tfor (int i=0;i<100;i++)\n\t{\n\t\tif (s < 0.0005*d  || d > md) break;\n\t\tp = ro + rd * d;\n\t\td += s = df(p)*0.3;;\n        col = dcol(p) * (2./d) ;\n\t}\n\t\n\tif ( d < md)\n\t{\n        p.xy = path(p);\n\t\tp.z = d;\n        f.rgb = col ;\n\t}\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}