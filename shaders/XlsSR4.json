{
    "Shader": {
        "info": {
            "date": "1434895946",
            "description": "Simple effect that my daughter asked me for ;).",
            "flags": 0,
            "hasliked": 0,
            "id": "XlsSR4",
            "likes": 26,
            "name": "Psycho dots",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "Nrx",
            "viewed": 781
        },
        "renderpass": [
            {
                "code": "#define PIXELS 40.0\n\nconst float PI = 3.14159;\n\nfloat rand (in vec2 seed) {\n\tseed = fract (seed * vec2 (5.6789, 5.4321));\n\tseed += dot (seed.yx, seed + vec2 (12.3456, 15.1273));\n\treturn fract (seed.x * seed.y * 5.1337);\n}\n\nvec3 hsv2rgb (in float h, in float s, in float v) {\n\treturn v * (1.0 + 0.5 * s * (cos (2.0 * PI * (h + vec3 (0.0, 2.0 / 3.0, 1.0 / 3.0))) - 1.0));\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 frag = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n\t#ifdef PIXELS\n\tvec2 pixels = frag * PIXELS;\n\tfrag = (floor (pixels) + 0.5) / PIXELS;\n\tpixels = fract (pixels) - 0.5;\n\t#endif\n\n\tfloat radius = max (length (frag), 0.3);\n\tfrag *= 1.0 + 0.1 * cos (radius * 3.0 - iTime * 7.0) / radius;\n\tfloat light = smoothstep (-0.7, 0.7, cos (iTime * 0.4));\n\tvec3 colorBackground = hsv2rgb (radius * 0.4 - iTime * 1.5, 0.5, light);\n\n\tfloat angle = 2.0 * PI * cos (iTime * 0.2 + 0.5 * PI * cos (iTime * 0.1));\n\tfloat c = cos (angle);\n\tfloat s = sin (angle);\n\tfrag = (4.0 + 1.5 * cos (iTime)) * mat2 (c, s, -s, c) * frag;\n\tfrag += 5.0 * vec2 (s, c);\n\n\tfloat random = rand (floor (frag));\n\tfrag = fract (frag) - 0.5;\n\tangle = atan (frag.y, frag.x);\n\tradius = length (frag);\n\tradius *= 1.0 + (0.3 + 0.3 * cos (angle * 5.0 + PI * cos (random * PI * 2.0 + iTime * 5.0))) * smoothstep (-0.5, 0.5, cos (random * PI * 2.0 + iTime * 2.0));\n\n\tvec3 colorShape = hsv2rgb (radius * 0.6 + random * 13.0 - iTime, 0.5, 1.0 - light);\n\tfloat display = smoothstep (0.5, 0.4, radius);\n\tdisplay *= smoothstep (-0.5, 0.5, cos (random * PI * 2.0 + iTime * 1.5));\n\n\tfragColor = vec4 (mix (colorBackground, colorShape, display), 1.0);\n\t#ifdef PIXELS\n\tfragColor *= 1.0 - dot (pixels, pixels);\n\t#endif\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}