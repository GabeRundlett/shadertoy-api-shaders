{
    "Shader": {
        "info": {
            "date": "1559343811",
            "description": "Iterating on an idea. \n[url]javascript:  (function(){if(Effect.prototype.Paint.toString().length>1000){_Paint=Effect.prototype.Paint;} Effect.prototype.Paint = function(...args){for(var i=0; i<3;i++){_Paint.apply(this,args);}}})()[/url]\n",
            "flags": 32,
            "hasliked": 0,
            "id": "3tjGDh",
            "likes": 62,
            "name": "Ecosystem",
            "published": 3,
            "tags": [
                "fluid",
                "particles",
                "dynamics",
                "naturalselection"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 2043
        },
        "renderpass": [
            {
                "code": "/*\n\n\tFluid dynamics controls velocity field.\n\tParticles translate with the velocity field.\n\tParticles reproduce as they move. \n\tParticles diffuse  4  hormones. \n\tDiffusion is mediated by the diffusinon equation and fluid dynamics\n\tParticles experience a force from each hormone.\n\tThe force is proportional to their own hormone signature. \n\tEach hormone diffuses with a different radius. \n\tEach initial particle has its own hormone signature.\n\tParticles metamorphosize when hormone levels are high\n\tThen they battle it out! \n\n*/\nvoid mainImage( out vec4 Q, in vec2 U)\n{\n    if(iMouse.z>0.) {\n        U -= iMouse.xy;\n        U*=.5;\n        U += iMouse.xy;\n    }\n    vec4 b = B(U);\n    vec4 h = (hash(b.w));\n    Q = smoothstep(2.,0.,length(b.xy-U))*(.5+2.*h);\n\tQ += C(U).yzwx;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// FLUID DYNAMICS\n// FORCE on FLUID = (PARTICLE)*(GRADIENT OF BUFFER D)\n\n#define R iResolution.xy\n#define A(U) texture(iChannel0, (U)/R)\n#define B(U) texture(iChannel1, (U)/R)\nvec4 T (vec2 U) {return A(U-A(U).xy);}\nvoid mainImage( out vec4 Q, in vec2 U)\n{\n    Q = T(U);\n    vec4 // neighborhood\n        n = T(U+vec2(0,1)),\n        e = T(U+vec2(1,0)),\n        s = T(U-vec2(0,1)),\n        w = T(U-vec2(1,0));\n   // FLUID DYNAMICS\n   Q.x -= (0.25*(e.z-w.z-Q.w*(n.w-s.w)));\n   Q.y -= (0.25*(n.z-s.z-Q.w*(e.w-w.w)));\n   Q.z += (0.25*((s.y-n.y+w.x-e.x)+(n.z+e.z+s.z+w.z))-Q.z);\n   Q.w += (0.25*(s.x-n.x+w.y-e.y)-Q.w);\n   Q.xy *= 0.995;\n   // COMPUTE HORMONE FEILD\n   n = C(U+vec2(0,1));\n   e = C(U+vec2(1,0));\n   s = C(U-vec2(0,1));\n   w = C(U-vec2(1,0));\n   // THIS PARTICLE\n   vec4 b = B(U);\n   // COMPUTE HORMONE SIGNATURE\n   vec4 h = hash(b.w);\n   // SUM HORMONE FORCE\n   vec2 v = vec2(0);\n   v += h.x*vec2(e.x-w.x,n.x-s.x);\n   v += h.y*vec2(e.y-w.y,n.y-s.y);\n   v += h.z*vec2(e.z-w.z,n.z-s.z);\n   v += h.w*vec2(e.w-w.w,n.w-s.w);\n   // APPLY HORMONE FORCE TO THIS PARTICLE\n   Q.xy += v*smoothstep(1.,0.,length(U-b.xy));\n   // BOUNDARY CONDITIONS\n   if (U.x<1.||U.y<1.||R.x-U.x<1.||R.y-U.y<1.||iFrame<1)\n       Q.xyw = vec3(0);\n   \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// SPACIALLY SORT VORONOI PARTICLES\n// ALLOW MOVING PARTICLES TO LEAVE A TRAIL OF CLONES\nvoid swap (inout vec4 Q, vec2 U, vec2 r) {\n\tvec4 n = B(U+r);\n    if (length(U-n.xy)<length(U-Q.xy)) Q = n;\n}\nvoid mainImage( out vec4 Q, in vec2 U)\n{\n    // FIND NEAREST PARTICLE\n    Q = B(U);\n    swap(Q,U,vec2(1,0));\n    swap(Q,U,vec2(0,1));\n    swap(Q,U,vec2(-1,0));\n    swap(Q,U,vec2(0,-1));\n    swap(Q,U,vec2(2,2));\n    swap(Q,U,vec2(2,-2));\n    swap(Q,U,vec2(-2,2));\n    swap(Q,U,vec2(-2,-2));\n    if (length(hash(Q.w)-C(U))<.1)Q.w=dot(hash(Q.w),vec4(1e3));\n    // LEAVE A TRIAL OF CLONES AS PARTICLE TRANSLATES\n    Q.xy += A(mix(U,Q.xy,.7)).xy;\n    // BOUNDARY CONDITIONS\n    if ((iMouse.z>0.&&length(iMouse.xy-U)<30.)||iFrame < 1) {\n    \tQ = vec4(U,0,0);\n        Q.w = .1*(Q.x+R.x*Q.y+dot(iDate,vec4(1)));\n    }\n   \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "//Diffusion on fluid\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    vec4 b = B(U), a= A(U);\n    U -= .5*a.xy;\n    Q = D(U);\n    vec4 \n        n = D(U+vec2(0,1)),\n        e = D(U+vec2(1,0)),\n        s = D(U-vec2(0,1)),\n        w = D(U-vec2(1,0));\n    Q = mix(Q,0.25*(n+e+s+w),.2*vec4(2,3,4,5));\n    vec4 h = hash(b.w);\n    Q += .1*(h-Q)*smoothstep(1.,0.,length(b.xy-U));\n    \n    if (iFrame < 1) Q = vec4(0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texture(iChannel0, (U)/R)\n#define B(U) texture(iChannel1, (U)/R)\n#define C(U) texture(iChannel2, (U)/R)\n#define D(U) texture(iChannel3, (U)/R)\n\n\n#define S vec4(2,4,6,8)\n#define M .5*vec4(4,3,2,1)\n#define O .5/S/S\n#define I 12.\n\nvec4 hash (float p) // Dave (Hash)kins\n{\n\tvec4 p4 = fract(vec4(p) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+19.19);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx)*2.-1.;\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "//Diffusion on fluid\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    vec4 b = B(U), a= A(U);\n    U -= .5*a.xy;\n    Q = C(U);\n    vec4 \n        n = C(U+vec2(0,1)),\n        e = C(U+vec2(1,0)),\n        s = C(U-vec2(0,1)),\n        w = C(U-vec2(1,0));\n    Q = mix(Q,0.25*(n+e+s+w),.2*vec4(2,3,4,5));\n    vec4 h = hash(b.w);\n    Q += .1*(h-Q)*smoothstep(1.,0.,length(b.xy-U));\n    \n    if (iFrame < 1) Q = vec4(0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 3,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}