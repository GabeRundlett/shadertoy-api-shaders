{
    "Shader": {
        "info": {
            "date": "1561108113",
            "description": "based on [url=https://www.shadertoy.com/view/MtScWW]Phantom Mode[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "ttBGWK",
            "likes": 6,
            "name": "Phantom Mode Colored",
            "published": 3,
            "tags": [
                "colored",
                "mode",
                "phantom"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 466
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2017\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat map(vec3 p)\n{   \n\t//p += sin(p.zxy*3.36) * 0.44;\n\t//p += 0.5 * sin(p.zxy*3.36) * 0.44;\n    \n    p = mod(p,5.) - 2.5;\n    \n    //float t = sin(iTime * 0.5);\n    \n    float sp = length(p) - 2.;\n    //float cu = max(abs(p.x), max(abs(p.y), abs(p.z))) - 2.;\n    //float tr = max(abs(max(abs(p.x)+p.y,-p.y))+p.z,-p.z) - 2.;\n    \n    return sp;\n}\n\nvec3 nor( vec3 p, float prec )\n{\n    vec2 e = vec2( prec, 0. );\n    vec3 n = vec3(\n\t\tmap(p+e.xyy) - map(p-e.xyy),\n\t\tmap(p+e.yxy) - map(p-e.yxy),\n\t\tmap(p+e.yyx) - map(p-e.yyx) );\n    return normalize(n);\n}\n\nvoid mainImage( out vec4 f, in vec2 g )\n{\n    vec2 si = iResolution.xy;\n   \tfloat t = iTime * .2;\n\n    float cd = 6.;\n    \n   \tvec3 ro = vec3(cos(t)*cd, 3., sin(t)*cd);\n    vec3 rov = normalize(vec3(0,0,0)-ro);\n    vec3 u = normalize(cross(vec3(0,1,0), rov));\n    vec3 v = cross(rov, u);\n    vec2 uv = (g+g-si)/min(si.x, si.y);\n    vec3 rd = mat3(u,v,rov) * vec3(uv, 1);\n    \n    float accum = 0.0;\n\n    float d = 0.;\n    float s = 1.;\n    for(int i=0;i<200;i++)\n    {      \n\t\tif(s<0.01||d>80.) break;\n        \n        s = map(ro + rd * d);\n        \n        s = max(abs(s), 0.01);  // Phantom Mode\n        \n        d += s * 0.5;\n        \n       \taccum += 0.007; // Phantom Mode\n   \t}\n\n    vec3 c = nor(ro + rd * d, 0.1) * 0.5 + 0.5;\n    \n    f = vec4(c * accum  * (1.0-exp(-0.002*d*d)), 1); // Phantom Mode\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}