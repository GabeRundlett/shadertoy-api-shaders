{
    "Shader": {
        "info": {
            "date": "1718645746",
            "description": " gomunkul",
            "flags": 0,
            "hasliked": 0,
            "id": "l3tXRH",
            "likes": 1,
            "name": " gomunkul in box",
            "published": 3,
            "tags": [
                "fractal",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 300
        },
        "renderpass": [
            {
                "code": "/* https://www.shadertoy.com/view/XttXRr https://www.shadertoy.com/view/DtGyWh*/\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(20,43,21))*1.5+.5)\nfloat pi = 3.14159265;\nfloat v = 2.11655518;\n\nfloat newDist(float dist) {\n    return (15.0 * pi * dist + 0.15 * sin(15.0 * pi * dist - 10.0 * iTime) / (dist)) / 15.0 / pi;\n}\n\nfloat star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n      vec2 uv =C.xy / iResolution.xy;\n    \n    uv.y *= iResolution.y / iResolution.x;\n \n     uv.y-=0.25;\n      uv.x-=0.5;\n      uv.x+=0.1*cos(iTime);\n       uv.y+=0.1*sin(iTime);\n    float dist = sqrt((uv.x ) * (uv.x ) + (uv.y+0.01 ) * (uv.y ));\n    \n    uv.xy = dist / newDist(dist) * (uv.xy );\n    \n    uv.y = uv.y * iResolution.x / iResolution.y;\n    vec3 n1,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<110.;\n        O.xyz+=mix(vec3(1),H(g*.1),sin(.8))*1./e/8e3\n    )\n    {\n        n1=g*d;\n     n1.z+=iTime;\n   \n        a=20.;\n       n1=mod(n1-a,a*2.)-a;\n        s=3.;\n         n1.xy*=uv;\n        for(int i=0;i++<8;){\n            n1=.3-abs(n1);\n           \n            n1.x<n1.z?n1=n1.zyx:n1;\n            n1.x>n1.z?n1=n1.xzy:n1;\n            n1.y<n1.x?n1=n1.zyx:n1;\n            \n            s*=e=1.2+sin(iTime*.234)*.1;\n            n1=abs(n1)*e-\n                vec3(\n                    5.+cos(iTime*.3+.5*cos(iTime*.3))*3.,\n                    40,\n                    7.+cos(iTime*.5)*5.\n                 );\n         }\n     \n         g+=e=length(n1.xy)/s;\n    }\n   \n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;  // anim between 0.9 - 1.1 \n  O+= vec4(star(uv, anim) * vec3(0.55,0.0,0.75)*0.0205, 1.0);\n    O+= vec4(star(uv, anim) * vec3(0.55,0.5,0.55)*0.0105, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}