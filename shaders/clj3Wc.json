{
    "Shader": {
        "info": {
            "date": "1674036520",
            "description": "CC0: Grid inside a grid\n On twitter there's a bunch of Grid inside a grid tweets today\n So I removed the coordinate transform from an earlier shader to fit in theme.\n",
            "flags": 0,
            "hasliked": 0,
            "id": "clj3Wc",
            "likes": 23,
            "name": "Grid inside a grid",
            "published": 3,
            "tags": [
                "2d",
                "grid"
            ],
            "usePreview": 0,
            "username": "mrange",
            "viewed": 347
        },
        "renderpass": [
            {
                "code": "// CC0: Grid inside a grid\n//  On twitter there's a bunch of Grid inside a grid tweets today\n//  So I removed the coordinate transform from an earlier shader to fit in theme.\n//  Best view on 4K + Fullscreen\n#define TIME        iTime\n#define RESOLUTION  iResolution\n#define PI          3.141592654\n#define TAU         (2.0*PI)\n#define ROT(a)      mat2(cos(a), sin(a), -sin(a), cos(a))\n\nconst int II = 5;\nconst float ZZ = sqrt(2.0);\n\n// License: MIT, author: Inigo Quilez, found: https://iquilezles.org/www/articles/distfunctions2d/distfunctions2d.htm\nfloat box(vec2 p, vec2 b) {\n  vec2 d = abs(p)-b;\n  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n// License: MIT OR CC-BY-NC-4.0, author: mercury, found: https://mercury.sexy/hg_sdf/\nvec2 mod2(inout vec2 p, vec2 size) {\n  vec2 c = floor((p + size*0.5)/size);\n  p = mod(p + size*0.5,size) - size*0.5;\n  return c;\n}\n\n// License: Unknown, author: Hexler, found: Kodelife example Grid\nfloat hash2(vec2 uv) {\n  return fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\n// License: Unknown, author: Unknown, found: don't remember\nfloat tanh_approx(float x) {\n  //  Found this somewhere on the interwebs\n  //  return tanh(x);\n  float x2 = x*x;\n  return clamp(x*(27.0 + x2)/(27.0+9.0*x2), -1.0, 1.0);\n}\n\nfloat dot2(vec2 p) {\n  return dot(p, p);\n}\n\nvec2 df(vec2 p, float aa, out float h, out float sc) {\n  vec2 pp = p;\n  \n  float sz = 2.0;\n  \n  float r = 123.4;\n  \n  for (int i = 0; i < II; ++i) {\n    vec2 nn = mod2(pp, vec2(sz));\n    sz /= 3.0;\n    float rr = hash2(nn+123.4);\n    r += rr;\n    if (rr < 0.5) break;\n  }\n  \n  float d0 = box(pp, vec2(1.45*sz-aa))-0.05*sz;\n  float d1 = sqrt(sqrt(dot2(pp*pp)));\n  h = fract(r);\n  sc = sz;\n  return vec2(d0, d1);\n}\n\n// License: Unknown, author: Unknown, found: don't remember\nfloat hash1(float co) {\n  co += 1234.5;\n  return fract(sin(co*12.9898) * 13758.5453);\n}\n\nvec2 transform(vec2 p) {\n  vec2 op = p;\n  p *= ZZ;\n  const float period = 10.0;\n  float nt = TIME/period;\n  float n  = floor(nt);\n  n += 2.0;\n  float m  = fract(nt);\n  float h = hash1(n);\n  float f = floor(4.0*h);\n  float t = floor(4.0*hash1(n+1.0));;\n  float sp = max(abs(t-f), 1.0);\n  float flip = 0.025*sp;\n  m += 0.5*(fract(8677.0*h)-0.5);\n  p *= ROT(PI/2.0*mix(f, t, smoothstep(flip, -flip, cos(-0.0125*length(op)+TAU*m/(2.0)))));\n  p += 100.0*sin((vec2(1.0, 0.5)*0.125*TAU/100.0)*(TIME+100.0));\n  return p;\n}\n\nvec3 effect(vec2 p, vec2 np, vec2 pp) {\n  p = transform(p);\n  float aa = (ZZ*2.0)/RESOLUTION.y; \n\n  float h = 0.0;\n  float sc = 0.0;\n  vec2 d2 = df(p, aa, h, sc);\n\n  vec3 col = vec3(0.0);\n\n  vec3 rgb = ((2.0/3.0)*(cos(TAU*h+vec3(0.0, 1.0, 2.0))+vec3(1.0))-d2.y/(3.0*sc));\n  col = mix(col, rgb, smoothstep(aa, -aa, d2.x));\n  \n  const vec3 gcol1 = vec3(.5, 2.0, 3.0);\n  col += gcol1*tanh_approx(0.025*aa);\n  col = clamp(col, 0.0, 1.0);\n  col = sqrt(col);\n  \n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 q = fragCoord/RESOLUTION.xy;\n  vec2 p = -1. + 2. * q;\n  vec2 pp = p;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n  vec2 np = p+1.0/RESOLUTION.y;\n  vec3 col = effect(p, np, pp);\n  fragColor = vec4(col, 1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}