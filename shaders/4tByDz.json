{
    "Shader": {
        "info": {
            "date": "1508158733",
            "description": "line 14-18: try with / without fract  , etc (despite 0 <  i/200 < 1. )\nline 24: try with / without abs  ( despite r > 0 ) \n   or w/wout  if  ( despite always true )\n   or .1/r  vs  r  vs  .9*r\nOn linux (or all OpenGL, probably), any of these moves blobs.",
            "flags": 0,
            "hasliked": 0,
            "id": "4tByDz",
            "likes": 1,
            "name": "glsl \"bug\" #10",
            "published": 3,
            "tags": [
                "noise",
                "glsl",
                "bug",
                "hash",
                "rand"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 708
        },
        "renderpass": [
            {
                "code": "// all this is related to the stability of less significant bit : lesser issue if * 43.758 \nfloat noise1(vec2 n) {\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453); }\nvec2  noise2( vec2 x) { return vec2(noise1(x*107.3), noise1(x*879.3)) ; }\n//vec2 pnoise( vec2 x) { return .5*vec2(sin(x*vec2(107.3,879.3))); } \n\n#define N 8.                                        // if N = 1.(pre-scale), no problem !\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    U *= .1 * (N/8.);       \n    O -= O;\n\n    for (float i = 1.; i < 3.; i++) {\n        float seed =  fract(i/200.);                // these 3 give same result\n      //float seed = (i/200.- floor(i/200.));    \n      //float seed = (i/200.- floor(1./iResolution.x));         \n      //float seed = (i/200.- (0.));                // these 2 give same (different) result\n      //float seed = (i/200.);         \n        vec2 C = floor(U/N),\n           loc = N * C + N * noise2(C*seed);\n         //loc = N* ( C + noise2(C*seed) ) ;        // factoring: fix issue !\n        \n        float r = length(U - loc) / N;\n        if (abs(r) < 1e10)  O += .1/r;              // try no abs, or no if, or += r or += .9*r\n        \n                                                // --- these 4 color tests see nothing:\n      //if (r<0.) { O = vec4(1,0,0,0); return;}     // NB: return vs break vs nothing changes !!! \n      //O -= (1e36*(r-abs(r))) * vec4(1,-1,0,0);  \n      //O += (1e36*(seed0*ceil(1./iTime)-seed1*ceil(.9/iTime))) * vec4(1,-1,0,0);\n      //O += vec4(1e36*floor(i/200.));\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}