{
    "Shader": {
        "info": {
            "date": "1640819457",
            "description": "A simple way of making a gravitational lensing effect for a black hole.",
            "flags": 0,
            "hasliked": 0,
            "id": "ftKSDm",
            "likes": 8,
            "name": "Simple Gravitational Lensing",
            "published": 3,
            "tags": [
                "blackhole",
                "gravitationallensing"
            ],
            "usePreview": 0,
            "username": "pancakespeople",
            "viewed": 462
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.x + vec2(0.5);\n    vec2 mousePos = (iMouse.xy-0.5*iResolution.xy)/iResolution.x + vec2(0.5);\n    \n    // The position of the black hole\n    vec2 pos = vec2(cos(iTime)*0.25+0.5, sin(iTime)*0.1+0.5);\n    //vec2 pos = mousePos;\n    \n    // The distance of the pixel from the black hole\n    float radius = length(uv - pos);\n    \n    // The angle between the pixel and the black hole\n    float angle = atan(uv.y - pos.y, uv.x - pos.x);\n    \n    // How much the light is bent\n    float bend = 0.05 / radius;\n    \n    // Bend the light towards the black hole\n    uv += -bend * vec2(cos(angle), sin(angle));\n\n    // Sample the texture\n    vec4 col = texture(iChannel0, uv);\n    \n    // The black part of the black hole\n    col *= smoothstep(1.0, 0.9, bend);\n    \n    // A little fade on the right\n    col *= smoothstep(1.0, 0.0, uv.x);\n\n    // Output to screen\n    fragColor = vec4(col);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 4,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}