{
    "Shader": {
        "info": {
            "date": "1456508162",
            "description": "test...",
            "flags": 32,
            "hasliked": 0,
            "id": "4sKGDV",
            "likes": 32,
            "name": "Test 2.",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "piotrekli",
            "viewed": 888
        },
        "renderpass": [
            {
                "code": "vec4 light(sampler2D channel, vec2 fragCoord)\n{\n    vec4 s = vec4(0.0);\n    s += 1.0*texture(channel, (fragCoord+vec2(0.0, 0.0))/iResolution.xy);\n    s -= 0.5*texture(channel, (fragCoord+vec2(1.0, 0.0))/iResolution.xy);\n    s -= 0.5*texture(channel, (fragCoord+vec2(0.0, 1.0))/iResolution.xy);\n    return s;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 color = 1.0-texture(iChannel0, uv).xyz;\n    color *= color;\n    //color *= color*color*color;\n    color = 1.0-color;\n    color += dot(vec3(1.0), light(iChannel0, fragCoord).xyz)*2.0;\n\tfragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define DISPLACEMENT 20.0\n\n// function from https://www.shadertoy.com/view/4djSRW\n#define HASHSCALE3 vec3(.1031, .1030, .0973)\nvec2 hash23(vec3 p3)\n{\n\tp3 = fract(p3 * HASHSCALE3);\n    p3 += dot(p3, p3.yzx+19.19);\n    return fract(vec2((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y));\n}\n\nvec2 noise(vec2 coord, float time)\n{\n    vec2 g = fract(coord);\n    coord -= g;\n    return mix(mix(hash23(vec3(coord.x+0., coord.y+0., time)), hash23(vec3(coord.x+1., coord.y+0., time)), g.x),\n               mix(hash23(vec3(coord.x+0., coord.y+1., time)), hash23(vec3(coord.x+1., coord.y+1., time)), g.x), g.y);\n}\n\nvec2 tnoise(vec2 coord, float time)\n{\n    float g = fract(time);\n    time -= g;\n    return mix(noise(coord, time), noise(coord, time+1.0), g);\n}\n\nvec3 fm(vec3 a, vec3 b)\n{\n    a *= 0.025;\n    return (a + b - a*b)*0.992;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float t = iTime+noise(vec2(1.0, 1.0+iTime*0.2), 1.0).x;//+texture(iChannel1, uv).x;\n    vec3 color = mix(vec3(tnoise(uv, t+0.1234), 0.5), vec3(tnoise(uv*70.8856, t*2.9+0.7834), 0.5), 0.3);\n    float h = 0.07;\n    vec2 v = texture(iChannel0, uv).xy - 0.25;\n    color = fm(color, texture(iChannel0, uv+DISPLACEMENT*v/iResolution.xy).xyz);\n    color -= (1.0-color)*0.01;\n    if (color.x < 0.0) color.x = 0.0;\n    if (color.y < 0.0) color.y = 0.0;\n    if (color.z < 0.0) color.z = 0.0;\n    if (iMouse.w > 0.0 || iMouse.z > 0.0)\n    {\n        float g = 1.0 - distance(iMouse.xy, fragCoord)*0.04;\n        if (g > 0.0)\n        {\n            color.x *= mix(1.0, color.x, g);\n        \tcolor.y *= mix(1.0, color.y, g);\n        \tcolor.z *= mix(1.0, color.z, g);\n        }\n    }\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}