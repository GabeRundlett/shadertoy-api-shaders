{
    "Shader": {
        "info": {
            "date": "1576598946",
            "description": "One more tuto about hexa tiling stuff:\n2 families of disks, colored edges.",
            "flags": 0,
            "hasliked": 0,
            "id": "wldGD7",
            "likes": 2,
            "name": "hexa disk tiling",
            "published": 3,
            "tags": [
                "tiling",
                "hexagonal",
                "tuto",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 341
        },
        "renderpass": [
            {
                "code": "#define S(v)      smoothstep( 3./R.y, -3./R.y, v )\n#define SQRT3S2 ( sqrt(3.)/2. )\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy, \n         U = u / R.y * 4.,\n         T = vec2( .5, SQRT3S2 ), I = vec2(1,0),\n         H = mat2(I,-.5/SQRT3S2,1./SQRT3S2 ) * U, // inverse(mat2(I,T))\n         V = mat2(I,T) * U;\n\n    \n    U -= mat2(I,T) * floor(H); // undistorted coord relative to dark marks\n    // mid-segment disks\n    O.r = S( length(U-T.y*T.yx) - .43 );\n    // node-centered disks\n    O.g = S( min(min(length(U),length(I+T-U)),min(length(I-U),length(T-U))) - .5 );\n    \n    // triangular tiles\n    H = fract(H); float z = 1.-H.x-H.y; vec3 C = vec3(z>0. ?H :1.-H ,abs(z)); // barycentric coordinates\n    vec4 B = smoothstep(12./R.y,0.,vec4(C,0)); O = mix(O,B,max(B.r,max(B.g,B.b))); // borders\n\n    // dark marks\n    O -= S( length(U) - .1 ); \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}