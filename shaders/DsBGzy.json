{
    "Shader": {
        "info": {
            "date": "1667768753",
            "description": "Something sort of like that example I saw once which tries to pick an arbitrary number of distinct colours with stable first choices.",
            "flags": 0,
            "hasliked": 0,
            "id": "DsBGzy",
            "likes": 5,
            "name": "colour picker using hsv and phi.",
            "published": 3,
            "tags": [
                "palette"
            ],
            "usePreview": 0,
            "username": "sh1boot",
            "viewed": 190
        },
        "renderpass": [
            {
                "code": "vec3 hsv2rgb(float h, float s, float v) {\n    vec3 h3 = mod(6.0 * h + vec3(5.0, 3.0, 1.0), 6.0);\n    h3 = min(h3, 4.0 - h3);\n    h3 = clamp(h3, 0.0, 1.0);\n    return pow(v - v * s * h3, vec3(1.0/2.4));\n}\n\nvec3 palette(int i) {\n    float f = float(i);\n    float h =  mod(1.618033988749894848204586834 * f, 1.0);\n    float s = exp(-0.00025 * f) * 0.65 + 0.25;\n    float v = 1.0;\n    return hsv2rgb(h, s, v);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float r = floor(uv.x * 6.0) / 7.1;\n    float t = 3.0 + 12.0 * (0.5 + 0.5 * cos(iTime * r));\n    float u = sin(iTime * r) * 8.0;\n\n    int i = int(floor(uv.y * t + u));\n\n    vec3 col = palette(i);\n    //col = hsv2rgb(uv.y, uv.x, 1.0);\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}