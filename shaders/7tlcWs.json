{
    "Shader": {
        "info": {
            "date": "1648965676",
            "description": "Every day, All day",
            "flags": 0,
            "hasliked": 0,
            "id": "7tlcWs",
            "likes": 3,
            "name": "Daily Five - Lambmeow",
            "published": 3,
            "tags": [
                "sdf",
                "glow",
                "daily",
                "v"
            ],
            "usePreview": 0,
            "username": "lambmeow",
            "viewed": 233
        },
        "renderpass": [
            {
                "code": "//Daily Shader Day 5\n//lopea\n\n//thank you iq for these sdf functions\n//https://iquilezles.org/articles/distfunctions2d\n\nfloat box(vec2 v, vec2 b)\n{\n    vec2 q = abs(v) - b;\n    return length(max(q,0.)) + min(max(q.x, q.y),0.);\n}\nmat2 rot(float r)\n{\n    float cr = cos(r), sr = sin(r);\n    return mat2(cr, -sr, sr, cr);\n}\nfloat cinco(vec2 p)\n{\n    //offset\n    p.y-= -0.25;\n    \n    //get bounds of the v\n    float bb = box(p, vec2(1));\n    \n    //get \n    p.x = abs(p.x);\n    p *= rot(radians(25.));\n    float res = max(box(p - vec2(0.,0), vec2(0.1,2)), bb);\n    return abs(res);\n}\nfloat ss(vec3 p) \n{\n    p.z = mod(p.z + 7.,14.) - 7.;\n    //get 5\n    float cc = cinco(p.xy);\n    \n    ///extrude it\n    vec2 w = vec2( cc, abs(p.z - .6));\n    return min(max(w.x, w.y), 0.) + length(max(w,0.));\n}\n\nvec3 rt(vec3 ro, vec3 rd, out vec3 p)\n{\n    vec3 dl = vec3(0, 0, 1000.);\n    \n    for(int i = 0; i < 200; i ++)\n    {\n        p = ro + rd * dl.y;\n        dl.x = ss(p);\n        dl.z = min(dl.x, dl.z);\n        dl.y += dl.x;\n        if(dl.x < 0.001 || dl.y > 100.)\n            break;\n    }\n    return dl;\n}\n\nvec4 gc(vec3 ro, vec3 rd)\n{\n    vec3 p;\n    vec3 r = rt(ro, rd, p);\n    float d = r.z;\n    \n    p.z = (mod(p.z + 7.,14.) - 7.);\n    \n    float atten =  1. + d*d * 1.4 + d * 5.;\n    return vec4(1./atten)+ max(vec4(asin(p.x + p.y +p.z)) * 0.2, 0.); \n}\nvoid mainImage(out vec4 c, in vec2 f)\n{\n    vec2 r = iResolution.xy, u = (2. * f - r)/r.y;\n    vec3 ro = vec3(0,0,iTime), rd = normalize(vec3(u, 4.)), p;\n    c = gc(ro,rd);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}