{
    "Shader": {
        "info": {
            "date": "1637143906",
            "description": "Fast and dirty Reaction  Diffusion\nInspired by https://www.youtube.com/watch?v=ga1xt5zkmPI \nTrying to use only mipmaps for the convolutions (blur and high pass filter)\nPlenty of artefacts due to mipmaps but it works.\nTried also to make a short code \n",
            "flags": 32,
            "hasliked": 0,
            "id": "flGGzR",
            "likes": 6,
            "name": "Reaction Diffusion - 164 chars",
            "published": 3,
            "tags": [
                "2d",
                "diffusion",
                "organic",
                "highpass",
                "reaction",
                "mipmaps"
            ],
            "usePreview": 0,
            "username": "benoitM",
            "viewed": 296
        },
        "renderpass": [
            {
                "code": "/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n//     Fast & Simple & Dirty Reaction Diffusion Pattern                //\n//                                                                     //\n//             Copyright Benoit Marini - 11/2021                       //     \n//             License Creative Commons Attribution                    //\n//         NonCommercial-ShareAlike 3.0 Unported License.              //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// Inspired by https://www.youtube.com/watch?v=ga1xt5zkmPI             //\n// Trying to use only mipmaps for \"Kernel operations\", knowing that    //\n// mipmaps are far from gaussian blur...                               //\n// High pass filter from iq  (shadertoy.com/view/XsX3zj)               //\n// Noise in Buffer B is only here for initial pertubation              //\n//                                                                     //\n//                                                                     //  \n//  ////////  Buffer A  ////////            //////  Buffer B  //////   //\n//  //                        //       \\\\   //                    //   //\n//  // 1) High pass filter B  //   \\\\\\\\\\\\\\  // 1) Blur  A         //   //\n//  // 2) threshold B         //   ///////  // 2) Add small noise //   //\n//  //                        //       //   //                    //   //\n//  ////////////////////////////            ////////////////////////   //\n//                                                                     //\n//                /\\                                   ////            //\n//               //\\\\                                  ////            //\n//              ///\\\\\\                                 ////            //\n//               ////                                  ////            //\n//               //////////////////////////////////////////            //\n//               //////////////////////////////////////////            //\n//                                                     ////            //\n//                                                    \\\\\\///           //\n//                                                     \\\\//            //\n//                                                      \\/             //\n//                                                                     //\n//                                            //////   Image  //////   //\n//                                            //                  //   //\n//                                            // 1) Blur B        //   //\n//                                            // 2) threshold B   //   //\n//                                            //                  //   //\n//                                            //////////////////////   //\n//                                                                     //        \n/////////////////////////////////////////////////////////////////////////  \n\n\n\n////////////////////////////////////////////// \n// high pass filter & threshold of Buffer B //\n////////////////////////////////////////////// \n\nM\n     8.*T(0.)-4.; // -3 chars Thanks Fabrice !\n}\n\n// original code (169 chars)\n// M\n//     step(.5,T(0.));\n// }\n//\n// code after #define from Common applied :\n//\n// void mainImage( out vec4 o, in vec2 i )\n// {\n//     o = step (.5,textureLod(iChannel0,i/iResolution.xy,0.));\n// }\n\n\n\n             \n       ",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//////////////////////////////////////////////\n// high pass filter & threshold of Buffer B //\n//////////////////////////////////////////////\n\nM    \n    step (.0, T(0.)-T(4.5)) ; // -1 char Thanks Fabrice !\n}\n\n// original code (169 chars)\n// M\n//     step (.01, T(0.)-T(4.5)); // WARNING Remplacing 0. by .01  is not thresholded well the fake high-pass filter\n// }\n//\n// code after #define from Common applied :\n//\n// void mainImage( out vec4 o, in vec2 i )\n// {\n//     o = step (.02, textureLod(iChannel0,i/iResolution.xy,0.) - textureLod(iChannel0,i/iResolution.xy,3.5+cos(iTime)) ) ;\n// }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "///////////////////////////////////////////////\n// blur buffer A + add small perturbation    //\n///////////////////////////////////////////////\n\nM\n     T(3.5) + cos(i.x*i.y)/1e2;\n}\n\n\n// code after #define from Common applied :\n//\n// void mainImage( out vec4 o, in vec2 i )\n// {\n//     o = textureLod( iChannel0, i/iResolution.xy, 3.) + cos(i.x*i.y)/1e2;\n// }",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define M void mainImage( out vec4 o, vec2 i ) { o=\n#define T(l) texture(iChannel0,i/iResolution.xy,l)\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}