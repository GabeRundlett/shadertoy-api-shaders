{
    "Shader": {
        "info": {
            "date": "1706547601",
            "description": "An XOR pattern zoomer. The formula is (X^Y)%9",
            "flags": 0,
            "hasliked": 0,
            "id": "Xc2SRK",
            "likes": 4,
            "name": "Alien9",
            "published": 3,
            "tags": [
                "xor",
                "pattern"
            ],
            "usePreview": 0,
            "username": "pinko",
            "viewed": 168
        },
        "renderpass": [
            {
                "code": "\nfloat antialias=0.175;//smaller is more antialiasing and slower. >2.0 is no antialias\n\n\nvec2 rot(vec2 uv,float a){\n\treturn vec2(uv.x*cos(a)-uv.y*sin(a),uv.y*cos(a)+uv.x*sin(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragCoord=rot(fragCoord,3.141592*0.25);\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 fc=fragCoord-iResolution.xy*0.5;\n    vec3 col2=vec3(0.0);\n    float count=0.0;\n    float speed=0.1;\n    int p=(int(iTime*speed)%2);\n\n    for(int i=0;i<3;i++)\n    {\n        float z=fract(iTime*speed+float(i)*0.33);\n        fragCoord=fc*z;\n\n        vec3 col = (1.0-z)*(0.6 + 0.4*cos(iTime+z+uv.xyx*3.0+vec3(1,2,3)));\n\n        fragCoord.x+=sin(iTime*speed*8.0+float(i))*20.5;\n        fragCoord.y+=sin(iTime*speed*8.0*1.681+float(i))*10.5;\n        \n        int t=int(iTime*60.0);\n\n        int x=int(abs(fragCoord.x));\n        int y=int(abs(fragCoord.y));\n        int g=(x^y)%9;\n        if(g<1+p)\n            col2+=col*((1.5-1.0)*3.0*(1.0-z));\n        count+=1.0;\n         \n    }\n    col2/=count;\n\n    fragColor = vec4(col2*2.0,1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}