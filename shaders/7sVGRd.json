{
    "Shader": {
        "info": {
            "date": "1632007995",
            "description": "The 'g' in GPU stands for gay",
            "flags": 0,
            "hasliked": 0,
            "id": "7sVGRd",
            "likes": 1,
            "name": "Gay Flag",
            "published": 3,
            "tags": [
                "gay",
                "lgbt"
            ],
            "usePreview": 0,
            "username": "Ravbug",
            "viewed": 223
        },
        "renderpass": [
            {
                "code": "// set to 0 to disable the waving animation\n#define WAVE 1\n\n// adjust the number of stripes\nconst float steps = 2.0;\n\n// linear value remap\nfloat remap(float value, float low1, float high1, float low2, float high2){\n    return low2 + (value - low1) * (high2 - low2) / (high1 - low1);\n}\n\n// step function w/ floor\nfloat stepf(float value){\n    return remap(floor(remap(value,0.0,1.0,0.0,steps)),0.0,steps,0.0,1.0);\n}\n\n// step function w/ ceiling \nfloat stepc(float value){\n    return remap(ceil(remap(value,0.0,1.0,0.0,steps)),0.0,steps,0.0,1.0);\n}\n\n// keep in range\nfloat clampInRange(float x){\n    return ((x >= 0.0 && x <= 1.0) ? 1.0 : 0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     // Normalized pixel coordinates (from 0 to 1)\n     vec2 uv = fragCoord/iResolution.xy;\n     #if WAVE\n     uv.y += (sin(10.0*(-iTime/3.0+uv.x))*0.03);\n     #endif\n\n     // green, white, blue\n     vec3 col1 = vec3(0.24,0.54,0.44);\n     vec3 col2 = vec3(1.0,1.0,1.0);\n     vec3 col3 = vec3(0.22,0.13,0.45);\n     \n     float diff = 0.4;\n     \n     // gradient + step function\n     vec3 colorTop = mix(col1,col2,stepf(1.0-remap(uv.y,1.0-diff,1.0,0.0,1.0)));\n     vec3 colorBot = mix(col2,col3,stepc(1.0-remap(uv.y,0.0,diff,0.0,1.0)));\n     \n     vec3 resCol = uv.y < 0.5 ? colorBot : colorTop;\n \n\n    // Output to screen\n    fragColor = vec4(resCol * clampInRange(uv.y),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}