{
    "Shader": {
        "info": {
            "date": "1583721830",
            "description": "pixel gradient color transition",
            "flags": 0,
            "hasliked": 0,
            "id": "3lVXW3",
            "likes": 3,
            "name": "pixel gradient",
            "published": 3,
            "tags": [
                "pixel"
            ],
            "usePreview": 0,
            "username": "Arthas_me",
            "viewed": 762
        },
        "renderpass": [
            {
                "code": "bool pixelGradient(in vec2 uv) {\n\tuv = floor(uv * 40.);\n    float percentage = floor(uv.x /40. * 10.);\n      int p = int(percentage)/2,\n          n = 8 >>  min(p,4-p), \n          q = 4 - 2*min(p,4-p),\n          i = int(uv.x + uv.y) % n, \n          x = int(uv.x) % q; \n\treturn\n        p < 1 ?    i==0 && x > 2\n      : p < 2 ?    i==0 && x > 0\n      : p < 3 ?    i==0\n      : p < 4 ? !( i==0 && x > 0 )\n      : p < 5 ? !( i==0 && x > 2 )\n      : true;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy * vec2((iResolution.x/iResolution.y), 1.);\n    \n    \n    \n    vec3 a = vec3(0.7, 0.2, 0.4);\n    vec3 b = vec3(0.3, 0.2, 0.7);\n\n    vec3 col = pixelGradient(uv) ? a : b;\n\n    fragColor = vec4(pow(col, vec3(1.0/2.2)),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}