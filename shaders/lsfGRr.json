{
    "Shader": {
        "info": {
            "date": "1360471812",
            "description": "The logo of Beautypi :)\n\nYou can see the steps on the creation process here: https://www.youtube.com/watch?v=emjuqqyq_qc",
            "flags": 0,
            "hasliked": 0,
            "id": "lsfGRr",
            "likes": 113,
            "name": "Beautypi",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "eye"
            ],
            "usePreview": 0,
            "username": "iq",
            "viewed": 7144
        },
        "renderpass": [
            {
                "code": "// Created by beautypi in 2012\n\n// Tutorial: https://www.youtube.com/watch?v=emjuqqyq_qc\n\nconst mat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );\n\nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise( in vec2 x )\n{\n    vec2 i = floor(x);\n    vec2 f = fract(x);\n\n    f = f*f*(3.0-2.0*f);\n\n    float n = i.x + i.y*57.0;\n\n    return mix(mix( hash(n+ 0.0), hash(n+ 1.0),f.x),\n               mix( hash(n+57.0), hash(n+58.0),f.x),f.y);\n}\n\nfloat fbm( vec2 p )\n{\n    float f = 0.0;\n    f += 0.50000*noise( p ); p = m*p*2.02;\n    f += 0.25000*noise( p ); p = m*p*2.03;\n    f += 0.12500*noise( p ); p = m*p*2.01;\n    f += 0.06250*noise( p ); p = m*p*2.04;\n    f += 0.03125*noise( p );\n    return f/0.984375;\n}\n\nfloat length2( vec2 p )\n{\n    vec2 q = p*p*p*p;\n    return pow( q.x + q.y, 1.0/4.0 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n\n    // polar coordinates\n    float r = length( p );\n    float a = atan( p.y, p.x );\n\n    // animate\n    r *= 1.0 + 0.2*clamp(1.0-r,0.0,1.0)*sin(4.0*iTime);\n\n    // iris (blue-green)\n    vec3 col = vec3( 0.0, 0.3, 0.4 );\n    float f = fbm( 5.0*p );\n    col = mix( col, vec3(0.2,0.5,0.4), f );\n    \n    // yellow towards center\n    col = mix( col, vec3(0.9,0.6,0.2), 1.0-smoothstep(0.2,0.6,r) );\n\n    // darkening\n    f = smoothstep( 0.4, 0.9, fbm( vec2(15.0*a,10.0*r) ) );\n    col *= 1.0-0.5*f;\n\n    // distort\n    a += 0.05*fbm( 20.0*p );\n\n    // cornea\n    f = smoothstep( 0.3, 1.0, fbm( vec2(20.0*a,6.0*r) ) );\n    col = mix( col, vec3(1.0,1.0,1.0), f );\n\n    // edges\n    col *= 1.0-0.25*smoothstep( 0.6,0.8,r );\n\n    // highlight\n    f = 1.0-smoothstep( 0.0, 0.6, length2( mat2(0.6,0.8,-0.8,0.6)*(p-vec2(0.3,0.5) )*vec2(1.0,2.0)) );\n    col += vec3(1.0,0.9,0.9)*f*0.985;\n    \n    // shadow\n    col *= vec3(0.8+0.2*cos(r*a));\n\n    // pupil\n    f = 1.0-smoothstep( 0.2, 0.25, r );\n    col = mix( col, vec3(0.0), f );\n\n    // crop\n    f = smoothstep( 0.79, 0.82, r );\n    col = mix( col, vec3(1.0), f );\n\n    // vignetting\n    vec2 q = fragCoord/iResolution.xy;\n    col *= 0.5 + 0.5*pow(16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.1);\n \n\tfragColor = vec4( col, 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}