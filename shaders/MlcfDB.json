{
    "Shader": {
        "info": {
            "date": "1540849032",
            "description": "frag mouse button sideways to \"mix()\"\n\ni wanted a (dynamic contrast) (type float) of\nhttps://www.shadertoy.com/view/wllcRN\nsierpinsky with fast bokeh-param, but mostly keep failing.\n\nfloat-sierpinsky is almost okay.",
            "flags": 0,
            "hasliked": 0,
            "id": "MlcfDB",
            "likes": 3,
            "name": "float sierpinsky BokehXor fail",
            "published": 3,
            "tags": [
                "bokeh",
                "xor",
                "sierpinsky",
                "bokehxor"
            ],
            "usePreview": 0,
            "username": "ollj",
            "viewed": 574
        },
        "renderpass": [
            {
                "code": "//self                                      : https://www.shadertoy.com/view/MlcfDB\n//this is NOT what i am looking for, i think: https://www.shadertoy.com/view/ll2GWy \n\n#define NINF 65536.\n\n\n#define sat(a) clamp(a,0.,1.)\n\n//sierpinski triangle or diagonal\n\n\nfloat mi(vec2 a){return min(a.x,a.y);}\n\n\n\n\nfloat sierpinsky(vec2 u,float a\n){\n ;if(u.x>u.y*2.)return float(15&int(u.x)&(int(u.y)))/a //target for comparison\n ;ivec2 ui=ivec2(u)\n ;float r=0.\n ;vec2 a1=mod(u          ,vec2(2))\n ;vec2 a2=mod(floor(u/2.),vec2(2))*2.\n ;vec2 a4=mod(floor(u/4.),vec2(2))*4.\n ;vec2 a8=mod(floor(u/8.),vec2(2))*8.\n ;a1.x=min(a1.x,a1.y)\n ;a2.x=min(a2.x,a2.y)\n ;a4.x=min(a4.x,a4.y)\n ;a8.x=min(a8.x,a8.y)\n ;vec4 s=1.-vec4(a1.x,a2.x,a4.x,a8.x)\n ;vec4 ss1=step(16.*s,vec4(1,2,4,8)) //smoothstep(vec4(.0),vec4(.2),s)//this part keeps failing\n ;s=vec4(a1.x,a2.x,a4.x,a8.x)-1.\n ;vec4 ss2=step(16.*s,vec4(1,2,4,8)) \n ;//vec4 ss2=step(4./s,vec4(8,4,2,1)) //smoothstep(vec4(-.1),vec4(.1),s)\n ;s=smoothstep(1.-ss1,ss2,vec4(.5))\n //;s=mix(1.-ss2,ss1,smoothstep(0.,1.,(ss1+ss2)*.5))\n     //also invervall open/close is different!\n ;r+=   s.x\n ;r+=2.*s.y\n ;r+=4.*s.z\n ;r+=8.*s.w\n ;//r+=u8.x&u8.y\n ;return r/a\n /**/\n /*\n ;u=floor(u)\n ;vec2 l0=mod(u,vec2(2.)) //only cares if u is odd or even.\n ;vec2 l1=(mod(u-l0,vec2(4.)))/2.\n ;vec2 l2=(mod(u-l0-l1,vec2(8.)))/4.\n ;vec2 l3=(mod(u-l0-l1-l2,vec2(16.)-l0))/8.\n\n ;l0.x=mi(l0)\n ;l1.x=mi(l1)\n ;l2.x=mi(l2)\n ;l3.x=mi(l3)\n ;float r=0.\n ;vec4 l=vec4(l0.x,l1.x,l2.x,l3.x)\n ;//if(l.x!=l.y)l.x=1.;else l.x=0.\n ;//if(l.x!=l.y)l.x=1.;else l.x=0.\n ;//if(l.z!=l.w)l.z=1.;else l.z=0.\n ;//if(l.x!=l.z)l.x=1.;else l.x=0.\n ;if(l.x<1.)r+=1.;\n ;if(l.y<1.)r+=2.;\n ;if(l.z<1.)r+=4.;\n ;if(l.w<1.)r+=8.;\n ;return 1.-(r/16.)//so close and so far. this is just the greyscale but it fails to scale by a\n  /**/\n ;\n ;return float(int(u.x)&(int(u.y)))/a;\n ;}\n\n\nfloat sierpinskyOld(vec2 u,float a){return float(int(u.x)&(int(u.y)))/a;}\nfloat sierpinskyXor(vec2 u,float a){return float(int(u.x)^(int(u.y)))/a;}\n\n//tatio of 2 of the above is invariant over m, and infinite tooms over s.\n#define SierpinskyRat(u,s,m) sierpinsky(u/s,m/s)/sierpinskyXor(u/s,m/s)\n\nvec4 demoSierpRat(vec2 u\n){float s=1.//(1.-sqrt(abs(cos(iTime))))*9.\n ;return vec4(SierpinskyRat(u,s*iMouse.y/iMouse.x,iMouse.x))//is fine, because:  1/(b/0.) == b*0\n ;}\n\n//https://www.shadertoy.com/view/MdlfRM\nvoid mainImage(out vec4 o,vec2 u\n){\n ;//O=demoSierpRat(u)\n ;vec2 m=(iResolution.xy-iMouse.xy)/vec2(1./9.,9)\n ;//m.y=9./(1.)\n ;float a=sierpinsky(u/m.y,m.x/m.y/9.)\n ;float b=sierpinskyXor(u/m.y,m.x/m.y/9.)\n ;o=vec4(mix(sat(a),sat(b),.5+.5*cos(iTime)))\n ;o=vec4(a)\n ;}//unify with sierpinsky\n\n//void mainImage(out vec4 O,vec2 U){  O=vec4(int(U.x)&int(U.y))/256.;}\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}