{
    "Shader": {
        "info": {
            "date": "1665887699",
            "description": "A series of strange-looking glyphs.",
            "flags": 8,
            "hasliked": 0,
            "id": "dsl3zM",
            "likes": 3,
            "name": "Acid Hieroglyphs",
            "published": 3,
            "tags": [
                "2d",
                "hexagon",
                "rainbow",
                "pattern",
                "everyday",
                "hieroglyphs"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 246
        },
        "renderpass": [
            {
                "code": "// Code by Flopine (modified by jarble)\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings, FabriceNeyret and Blackle for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n\n#define PI acos(-1.)\n#define TAU (2.*PI)\n#define hr vec2(1.,sqrt(3.))\n\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\n#define hd(u, s) (max(abs(u.x), dot(abs(u), normalize(hr)))-s)\n#define circle(u,s) (length(u)-s)\n#define AAstep(thre, val) smoothstep(-.7,.7,(val-thre)/min(0.02,fwidth(val-thre)))\n\n#define palette(t,c,d) (vec3(0.5)+vec3(0.5)*cos(TAU*(c*t+d)) )\n\n#define noise(u) textureLod(iChannel0, u, 0.).x\n\n\nfloat moda(inout vec2 p, float rep)\n{\n    float per = TAU/rep;\n    float a = atan(p.y,p.x);\n    float c = floor(a/per)+floor(iTime*8.);\n    a = mod(a,per/(1.+p.x))-per*.5;\n    if (abs(c) >= (rep*.5)) c = abs(c);\n    p = vec2(cos(a), sin(a))*length(p);\n    return c;\n}\n\nvec4 hexgrid (vec2 uv)\n{\n    vec2 ga=mod(uv,hr)-hr*.5, gb=mod(uv-hr*.5,hr)-hr*.5, \n    guv=dot(ga,ga)<dot(gb,gb)?ga:gb, gid=uv-guv;\n    return vec4(guv,gid);\n}\n\nvec3 frame (vec2 uv)\n{\n    vec4 hg = hexgrid(uv);\n    vec2 uu = hg.xy, uid = hg.zw;    \n    float uswi = noise(uid*.25);\n    \n    float h = 1.;\n    \n    float aid = moda(uu, 6.);  \n    h *= AAstep(0.001, abs(uu.y)-0.01);\n    \n    if (uswi <.5)\n    {\n        uu.x -= 0.5;\n        h *= AAstep( 0.02, abs(circle(uu, 0.25)) );\n    }\n\n    h *= AAstep( 0.02, abs(circle(uu, 0.35)) ); \n    uu.x -= 0.435;\n    h *= AAstep(0.001, abs(uu.x)-0.01);\n    \n    return mix(palette(aid+mod(uid.x*uid.y, 2.), vec3(.1), vec3(0.3,0.8,0.1)), vec3(0.),  h);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    uv.y += iTime*.3;\n    uv *= 2.;\n    \n    vec3 col = frame(uv);\n\n    fragColor = vec4(sqrt(col),1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define fmod(x,y) mod(floor(x),y)\n#define floor1(x) fmod((x)*2.,2.)*floor(x)\n#define fmod1(x,y) mod(floor1(x),y)\n\nvec2 mainSound(int samp, float time){\n  \n  float s1 =\n      4.,\n      //5./(1.+fmod(time/2.,2.)), //varying tempo\n\n  s2 = 8.,\n  t= //varying tempo\n      //time\n      time*(2.-fmod(time/s1+floor1(time),2.))/2.\n      //time/(1.+fmod(time*s1,2.))\n      //time/(1.+fmod(time/s1+floor(time*s1),2.))\n      //time/(1.+fmod(time*s1+floor(time),2.))\n      //time*(1.+fmod(time*s1,2.))/2.\n  ,\n  m1 =\n      fmod1(t*s2/2.,s2)\n      //fmod(t/s1+floor(t*s1),s2)\n      //fmod(t*s1+floor(t/s1),s2)\n  ,\n  //m4 = fmod(t*s1,s1),\n  m3 =\n      fmod(-t/(m1+.5),s2);\n      //fmod(t*(s1+m4)/(m1+.5),s2);\n      //fmod((t+m1)*s1/(m4+.5),s2);\n      //fmod(t*s1/abs(2.5-m1),s2);\n  \n  //m1 = fmod(t/s1,s2),\n  \n  //t += m3/2.;\n  t *= s1;\n  t /=  //varying tempo\n      (1.+fmod((-t+floor(t))/2.,2.))\n      //(1.+fmod((t/s1-floor(t/s1))/2.,2.))\n      //(1.+fmod(t/s1+floor(t*s1),2.))\n  ;\n  \n  \n    float m2 =\n      1. + fmod(t,s1)\n      //1. + fmod(t/s1,8./(1.+fmod(t/s1,2.)))\n      //1. + fmod(t/s1,s1/2.)*fmod(t/s1/2.,s1/2.)\n      //1. + min(fmod(time,s1),t)\n  ;\n  //t /= max(m2,m1+m3+1.);\n  \n  float a=\n      32.*(sqrt(1.-sqrt(fract(t)/1.25)))*.2\n      //(pow(1.-fract(t/s1)/1.25,2.))*.2\n  ,\n  \n\n  \n  nb = time*pow(2.,(m3+m2)/7.+6.5);\n\n  return abs(.5-vec2(fract(nb*.998)\n   ,fract(nb)))*a;\n\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}