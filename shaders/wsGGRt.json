{
    "Shader": {
        "info": {
            "date": "1570724991",
            "description": "study making couple palm trees \nadd a ground\nadd a smile face to the sun\nadd jumping stars \nadd glowworm",
            "flags": 0,
            "hasliked": 0,
            "id": "wsGGRt",
            "likes": 2,
            "name": "some shapes",
            "published": 3,
            "tags": [
                "image"
            ],
            "usePreview": 0,
            "username": "zrcoy",
            "viewed": 775
        },
        "renderpass": [
            {
                "code": "float makeBand(float d, float start, float end, float blur)\n{\n    float band1 = smoothstep(start - blur, start + blur, d);\n    float band2 = smoothstep(end + blur, end - blur, d);\n    return band1*band2;\n}\n\nfloat makeRect(vec2 uv, float left, float right, float top, float bottom, float blur)\n{\n    float verticalBand = makeBand(uv.x ,left,right,blur );\n    float horizontalBand = makeBand(uv.y, bottom, top, blur);\n    return verticalBand * horizontalBand;\n}\n\nfloat makeDiamond(vec2 uv, float left, float right, float top, float bottom, float blur)\n{\n    float verticalBand = makeBand(uv.x +uv.y ,left,right,blur );\n    float horizontalBand = makeBand(uv.y - uv.x, bottom, top, blur);\n    return verticalBand * horizontalBand;\n}\n\nfloat makeCircle(vec2 xy, float r, vec2 p, float blur)\n{   \n\n    return (1.0f-smoothstep(r,  r*blur,length(p-xy)));\n    \n}\n \nfloat makeSmileMask(vec2 xy, vec2 p, float r, float blur)\n{\n    float mask = 0.0f,mask_mouth=0.0f,mask_leftEye=0.0f,mask_rightEye=0.0f;\n    //mask = makeCircle(xy,0.2f,vec2(0,0),1.1f);       \n    mask = makeCircle(xy,r,p,blur);\n    mask_leftEye = makeCircle(xy,0.12f*r,vec2(p.x - 1.0f/3.0f*r,p.y + 1.0f/3.0f*r),1.5f*blur);\n    mask_rightEye = makeCircle(xy,0.12f*r,vec2(p.x + 1.0f/3.0f*r,p.y + 1.0f/3.0f*r),1.5f*blur);\n    mask_mouth = makeCircle( xy , 0.8f * r , p , blur) - makeCircle(xy,0.75f*r,vec2(p.x,0.2f * r+p.y),blur);\n    mask -= (mask_leftEye + mask_rightEye + mask_mouth);\n    return mask;\n}\n\n\n\nvoid makePalmTreeWithGround(inout vec3 col, in vec2 xy,in vec2 dToTreeOrigin,in float leafNum,in float originCircleRadius, in float palmTreeLengthOffset, in float bendLeafOffset)\n{\n    \n \t//tree\n    float r = originCircleRadius + palmTreeLengthOffset * cos(atan(dToTreeOrigin.y,dToTreeOrigin.x) * leafNum + bendLeafOffset * dToTreeOrigin.x + 2.0f * sin(iTime));    \n    col *= smoothstep(r - 0.02f, r, length(dToTreeOrigin));\n    float branchEdgeWidth =  0.03f;\n    //wave edge on the branch\n    branchEdgeWidth += 0.01f + 0.0055f * cos(10.0f * dToTreeOrigin.y * 10.0f);\n    //the ground\n    branchEdgeWidth += 0.000001f * exp(-12.0f * dToTreeOrigin.y);\n    //cut down upper part of the branch\n    col *= 1.0f - (1.0f - smoothstep(branchEdgeWidth,branchEdgeWidth+0.02f,abs(dToTreeOrigin.x + 0.2f * sin(2.0f * dToTreeOrigin.y)))) * (1.0f - smoothstep(0.0f,0.1f,dToTreeOrigin.y));   \n}\n\nfloat remap1(float a, float b, float t) //remap t to a - b in a range of 0-1 \n{\n \treturn ((t-a) / (b - a));\n}\n\nfloat remap2(float a , float b, float c, float d , float t)\n{\n    return remap1(a,b,t) * (d-c) + c;\n}\n\nfloat DistToLine(vec3 ro, vec3 rd, vec3 p)\n{\n \treturn length(cross(p-ro,rd))/ length(rd);   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //make center of screen (0,0) and not affect by screen ratio\n    vec2 xy = fragCoord / iResolution.xy;\n    xy-=.5f;\n    xy.x *= iResolution.x/ iResolution.y;\n    vec3 ro = vec3(0,0,-2.0f);\n    vec3 rd = vec3(xy.x,xy.y,0)- ro;\n    float t =iTime;\n    \n    //first tree\n    vec2 treeOrigin = vec2(0.3f,0.01f);\n    vec2 dToTreeOrigin = xy - treeOrigin; \n    dToTreeOrigin *=3.5f;   \n    \n    //glowworm \n    vec3 col_w = vec3(0.2,1.0f,0.0f);\n    vec3 p = vec3(0.5f * sin(t),0.8f,2.0f + 3.0f * cos(t));\n    p -= vec3(dToTreeOrigin.x - 0.8f , dToTreeOrigin.y+1.3f , 0);\n    float dist_p = smoothstep(0.2f,0.1f,DistToLine(ro,rd,p));\n    col_w *= dist_p;\n    \n    //Sun\n    vec3 col = mix(vec3(0.2f, .6f, 1.0f), vec3(1.0f,0.7f,0.9f),5.0f*sin(2.0f*t+(-xy.x+xy.y)));\n    vec2 rSunOrigin = vec2(-0.5,0.4f); \n    vec2 vToSun = xy - rSunOrigin; \n    vToSun *=5.5f;\n    float dToSun = length(vToSun);\n    \n    //Second Tree\n    vec2 secondTreeOrigin = vec2(0.6f,.8f);\n    vec2 dToSTreeOrigin = xy - secondTreeOrigin;\n   \n       \n    \n    makePalmTreeWithGround(col, xy, dToTreeOrigin,10.0f,0.3f,0.2f,20.0f);\n    \n    makePalmTreeWithGround(col, xy, dToSTreeOrigin,5.0f,0.4f,0.2f,20.0f);\n    \n    //Sun\n   \tfloat r_Sun = 0.6f + 0.2f * cos(atan(vToSun.y,vToSun.x) * 10.0f + 20.0f * sin(t)); \n    col *= smoothstep(r_Sun - 0.02f, r_Sun, dToSun);\n      \n    //smile face\n    float mask=0.0f;\n    vec3 col_SmileFace = mix(vec3(1.0f,0.5f,0.2f),vec3(0.5f,1.0f,0.2f), sin(0.4f*t + xy.x));\n    mask = makeSmileMask(xy,rSunOrigin,0.05f,1.1f);\n\tcol_SmileFace*=mask;\n    \n    //jumping star\n    float starMask = makeDiamond(xy-vec2(1.0f * sin(t),0.2f * abs(cos(t * 2.0f))) - vec2(0,-0.3f), -.03f * abs(sin(iTime)) , .03f* abs(sin(iTime)) ,.03f * abs(sin(iTime)),-.03f* abs(sin(iTime)), .002f);\n    float star2Mask = makeRect(xy-vec2(1.0f * sin(t *1.5f),0.2f * abs(cos(t * 4.0f))) - vec2(0,-0.3f), -.04f * abs(sin(iTime)) , .04f* abs(sin(iTime)) ,.04f * abs(sin(iTime)),-.04f* abs(sin(iTime)), .002f);\n    \n    //river\n    float riverX = xy.x;\n    float riverY = xy.y;\n    riverY +=0.42f;\n    float m = 0.03f*sin(t+riverX*8.0f);\n    riverY +=m;\n    float blur = remap2(-.9f,.9f, 0.002f,0.05f,riverX);\n    float riverMask = makeRect(vec2(riverX,riverY),-.9f,.9f, .01f,-.01f,blur);\n    \n\n    col += col_SmileFace+ starMask + star2Mask + riverMask +col_w ;\n    \n    fragColor = vec4(col,1.0f);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}