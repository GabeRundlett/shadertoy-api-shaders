{
    "Shader": {
        "info": {
            "date": "1689630086",
            "description": "doodle",
            "flags": 0,
            "hasliked": 0,
            "id": "csBBW1",
            "likes": 12,
            "name": "polar doodle",
            "published": 3,
            "tags": [
                "polar"
            ],
            "usePreview": 0,
            "username": "elenzil",
            "viewed": 166
        },
        "renderpass": [
            {
                "code": "const float pi   = 3.14159265359;\nconst float pipi = pi * 2.0;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = fragCoord - iResolution.xy/2.0;\n\n\n    float angle = fract((atan(xy.y, xy.x) + pipi) / pipi);\n    float dist  = length(xy);\n    \n    float numLanes = 17.0;\n    \n    float lane = floor(angle * numLanes);\n    \n    float distCompressed = pow(dist, 0.2) * 520.0;\n\n    float c = sin(distCompressed * 0.1 - 8.0 * iTime * (0.7 + 0.3 * sin(iTime * 0.01 + 5.0 * lane / numLanes * pipi)));\n    c = smoothstep(-0.4, 0.4, c);\n    \n    float minContrast = 0.0;\n    float maxContrast = 0.6;\n    float d = dist/iResolution.x * 2.0;\n    \n    c *=       mix(minContrast, maxContrast, d);\n    c += 1.0 - mix(minContrast, maxContrast, d);   \n    \n    fragColor = vec4(c, c, c, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}