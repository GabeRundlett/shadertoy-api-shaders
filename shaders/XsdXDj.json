{
    "Shader": {
        "info": {
            "date": "1461686792",
            "description": "Two dynamic circles",
            "flags": 0,
            "hasliked": 0,
            "id": "XsdXDj",
            "likes": 21,
            "name": "Sun and Moon Dynamic",
            "published": 3,
            "tags": [
                "sun",
                "light",
                "radial",
                "gradient",
                "moon"
            ],
            "usePreview": 0,
            "username": "Danich",
            "viewed": 1647
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 sunXY;\n    vec2 moonXY;\n    \n    sunXY.x = iResolution.x * 0.5 + iResolution.x * sin(2.0 * 3.14 / 24.0 * iTime) * 0.4 * (iResolution.y / iResolution.x);\n    sunXY.y = iResolution.y * 0.5 + iResolution.y * cos(2.0 * 3.14 / 24.0 * iTime) * 0.4;\n    \n    moonXY.x = iResolution.x - sunXY.x;\n    moonXY.y = iResolution.y - sunXY.y;\n\n    vec4 sunColor = vec4(0.0, 0.0, 0.0, 1.0);\n    vec4 moonColor = vec4(0.0, 0.0, 0.0, 1.0);\n//    vec4 skyColor = vec4(0.0, 0.0, 0.1, 1.0);\n    \n//    skyColor.r = cos(iTime);\n//    skyColor.b = sin(iTime);\n    \n    \n    float dSun = sin(3.14 / (distance(sunXY, fragCoord.xy) + 1.0)) * 10.0;\n    float dMoon = sin(2.00 / (distance(moonXY, fragCoord.xy) + 1.0)) * 8.0;\n    \n    \n    sunColor.r = dSun;\n    sunColor.g = dSun * 0.7;\n    \n    moonColor.r = dMoon * 0.7;\n    moonColor.g = dMoon * 0.7;\n    moonColor.b = dMoon;\n    \n    \n    \n    fragColor = sunColor + moonColor;\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}