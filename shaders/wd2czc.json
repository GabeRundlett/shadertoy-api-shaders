{
    "Shader": {
        "info": {
            "date": "1587149757",
            "description": "pattern attack",
            "flags": 0,
            "hasliked": 0,
            "id": "wd2czc",
            "likes": 3,
            "name": "Experiment_2",
            "published": 3,
            "tags": [
                "intro"
            ],
            "usePreview": 0,
            "username": "okh0056",
            "viewed": 372
        },
        "renderpass": [
            {
                "code": "float f(vec2 p, float featureSize)\n{\n\tp.x = cos(p.x*1.3+t*0.09)*tanh(t+p.x*0.13)*2.;\t\n    p += crd(p.x*1.5)*0.6;\n    return smoothstep(-0.02,featureSize,abs(p.y));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec3 c;\n    vec3 col;\n    vec2 uv;\n\tfloat l,z=t;\n    float aspect = iResolution.y/iResolution.x;\n    float featureSize = 135./((iResolution.x*aspect+iResolution.y));\n\n    vec2 p = fragCoord.xy / iResolution.xy*2.3;\n\tp.x *= aspect;\n\tp.y = abs(p.y);\n    for(int i=0;i<3;i++) {       \n\t   uv=p;\n\t   p+=coth(t*DELTA);\n\t   p.x*=r.x/r.y;\n       l=length(p)*aspect;\n\t   z+=log(t*DELTA);\t\t    \n\t   uv+=(sec(l)*abs(tan(z)));\n       \n\t\tc[i] = ANGLE*length(abs(mod(coth(uv),f(sec(p),atan(featureSize)))));\n        \n\t   \n    \n\t}\n      c -= (cos(vec3(0.5,2.5,1.6)* -0.15)*0.19)*(1.-f(p,featureSize));\n    \n\t   fragColor=vec4(c,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\n#define t iTime\n#define r iResolution.xy\n#define ANGLE 1.25\n#define DELTA 0.00315\n#define XOFF .99\n\nfloat crd(float ang) {\n    return 2.*sin(ang/2.);\n}\nvec2 crd(vec2 ang) {\n    return 2.*sin(ang/2.);\n}\n\nfloat sec(float ang) {\n    return 1./cos(ang);\n}\nvec2 sec(vec2 ang) {\n    return 1./cos(ang);\n}\n\nfloat csc(float ang) {\n    return 1./sin(ang);\n}\nvec2 csc(vec2 ang) {\n    return 1./sin(ang);\n}\n\nfloat cot(float ang) {\n    return 1./tan(ang);\n}\nvec2 cot(vec2 ang) {\n    return 1./tan(ang);\n}\n\nfloat sech(float ang) {\n    return 1./cosh(ang);\n}\n\nvec2 sech(vec2 ang) {\n    return 1./cosh(ang);\n}\n\nfloat csch(float ang) {\n    return 1./sinh(ang);\n}\n\nvec2 csch(vec2 ang) {\n    return 1./sinh(ang);\n}\n\nfloat coth(float ang) {\n    return 1./tanh(ang);\n}\n\nvec2 coth(vec2 ang) {\n    return 1./tanh(ang);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}