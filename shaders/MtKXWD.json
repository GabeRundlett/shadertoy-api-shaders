{
    "Shader": {
        "info": {
            "date": "1484480250",
            "description": "Trying simple tracking of lips. Not so easy, indeed !\n\nIf people experienced better way to detect lips in such video, I'ld be curious to know (visually it's obvious, but it's surprisingly hard to get clean math/algorithmics criterion ).",
            "flags": 0,
            "hasliked": 0,
            "id": "MtKXWD",
            "likes": 9,
            "name": "bloody Britney",
            "published": 3,
            "tags": [
                "tracking",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1235
        },
        "renderpass": [
            {
                "code": "// --- trying simple tracking of lips.\n\n// Red component is dominating the whole body.\n// (col-min)/(Max-min) is normalized saturated color\n// ( no luminance effect, 0 for blue, 1 for red )\n// so that (col.g-min)/(Max-min) measures the orangeness: 0:red 1:yellow\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = texture(iChannel0, U / iResolution.xy);\n    float m = min(O.r,min(O.g,O.b)),\n          M = max(O.r,max(O.g,O.b));\n    \n // O = vec4(1.-(O.g-m)/(M-m)); // orangeness map\n    O = mix(O, vec4(length(O.xyz)), smoothstep(.2,.4, (O.g-m)/(M-m)) );\n // O = mix(O, vec4(length(O.xyz)), smoothstep(.0,.1, abs((O.g-m)/(M-m))-.27) );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}