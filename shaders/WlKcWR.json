{
    "Shader": {
        "info": {
            "date": "1610806653",
            "description": "An in-between psychedelic and mesmerizing experiment. ",
            "flags": 0,
            "hasliked": 0,
            "id": "WlKcWR",
            "likes": 0,
            "name": "Box Spin",
            "published": 3,
            "tags": [
                "time",
                "sin",
                "color",
                "rotate",
                "pi",
                "atan",
                "cos",
                "box",
                "spin",
                "cross",
                "scale",
                "movement",
                "tan",
                "translate"
            ],
            "usePreview": 0,
            "username": "YitingLiu",
            "viewed": 265
        },
        "renderpass": [
            {
                "code": "//Learned Matrix from The Book of Shaders\n//Edited the code from Author @patriciogv ( patriciogonzalezvivo.com ) - 2015\n\n\n#define PI 3.14159265359\n\n\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);\n}\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat box(in vec2 _st, in vec2 _size){\n    _size = vec2(0.5)*abs(sin(iTime)) - _size*0.2;\n    vec2 uv = smoothstep(_size,\n                        _size+vec2(0.001),\n                        _st);\n    uv *= smoothstep(_size,\n                    _size+vec2(0.001),\n                    vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\nfloat cross(in vec2 _st, float _size){\n    return  box(_st, vec2(_size,_size/4.)) +\n            box(_st, vec2(_size/4.,_size));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 st = fragCoord.xy/iResolution.xy;\n    vec3 color = vec3(0.819,0.865,0.002);\n\n    st -= vec2(0.5);\n    st = scale( vec2(sin(iTime)+1.0) ) * st;\n    st = rotate2d( sin(iTime)*PI ) * st;\n\n    st += vec2(0.5);\n\n    // Show the coordinates of the space on the background\n    color = vec3(st.x,st.y,atan(st.x,st.y));\n    color /= vec3(st.x,st.y,1.0);\n    color *= vec3(st.x,st.y,0.8);\n    color += vec3(st.x,st.y,0.6);\n    color += vec3(st.x,st.y,0.4);\n\n    // Add the shape on the foreground\n    color -= vec3(cross(st,0.2));\n    color /= vec3(cross(st,0.5*sin(iTime)));\n    color /= vec3(cross(st,1.0-0.5*cos(iTime)));\n    color += vec3(cross(st,0.5*tan(iTime)));\n    color /= vec3(cross(st,1.0-0.5*tan(iTime)));\n\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}