{
    "Shader": {
        "info": {
            "date": "1614273554",
            "description": "from Martin Roberts [url]http://extremelearning.com.au/unreasonable-effectiveness-of-quasirandom-sequences/[/url]\nProbably implemented 50x in Shadertoy...\nBlue, White, Disk, Sphere. left half: fading old points\n(not so good even distribution, to my taste)",
            "flags": 32,
            "hasliked": 0,
            "id": "wlVBWh",
            "likes": 12,
            "name": "low discrepancy nD open sequence",
            "published": 3,
            "tags": [
                "hash",
                "bluenoise",
                "goldenratio",
                "lowdiscrepancy",
                "quasimontecarlo"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 447
        },
        "renderpass": [
            {
                "code": "// from http://extremelearning.com.au/unreasonable-effectiveness-of-quasirandom-sequences/\n\nvoid mainImage( out vec4 O, vec2 U ) {   O = T(U);   }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// from Martin Roberts  http://extremelearning.com.au/unreasonable-effectiveness-of-quasirandom-sequences/\n\nvec2 rand(float n) {\n    float g = 1.32471795724474602596; // Phi_2.  Phi_n: solve x^(n+1) = x+1\n    vec2 a = 1./vec2(g,g*g);          // a = 1/Phi_n^(1,2...n)\n    return fract( .5 + a * n );\n}\n\n#define hash(n)  fract(sin( (n) * vec2(12.9898, 78.233) ) * 43758.5453)  // old uniform hash\n\n\nint N = 10;                           // number of samples per frame\n#define sqr(x) ( (x) * (x) )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = T(U);\n\n    ivec2 I = ivec2(2.*U/R); int i = I.x+2*I.y; // tile ID\n    U = mod(2.*U,R);\n    \n    if ( U.x < R.x/2. ) O *= .99;\n    for( int k=0; k < N; k++ ) {\n        float n =  float(k + N*iFrame);\n        vec2 r = rand(n),\n        P = i==2 ? R * r\n          : i==3 ? R * hash(n)\n       // : i==0 ? R/2. + R.y/2.            * sqrt(r.x)   * cos(6.283*(r.y+vec2(0,.25)))\n          : i==0 ? R/2. + R.y/2.            *(2.*r.x-1.)  * cos(6.283*(r.y+vec2(0,.25)))\n          :        R/2. + R.y/2.* sqrt(1.-sqr(2.*r.x-1.)) * cos(6.283*(r.y+vec2(0,.25)));\n        O += clamp(1.5-length( U - P ), 0., 1.);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R     iResolution.xy\n#define T(U)  texelFetch( iChannel0, ivec2(U), 0 )\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}