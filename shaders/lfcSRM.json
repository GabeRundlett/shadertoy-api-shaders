{
    "Shader": {
        "info": {
            "date": "1713714383",
            "description": "Some simple educational content",
            "flags": 0,
            "hasliked": 0,
            "id": "lfcSRM",
            "likes": 0,
            "name": "First steps into 3D",
            "published": 3,
            "tags": [
                "3d",
                "simple",
                "education"
            ],
            "usePreview": 0,
            "username": "Chalouek",
            "viewed": 108
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // just values for future point\n    vec3 point = vec3(cos(iTime),-0.3,sin(iTime)+2.);\n    float pointScale = 0.2;\n\n    vec2 uv = fragCoord/iResolution.xy;\n    float ratio = iResolution.x/iResolution.y;\n    vec2 viewport = vec2((uv.x-0.5)*ratio,(uv.y-0.5));//centered uv coordinates with aspect ratio correction\n    \n    vec2 zOffset = viewport*point.z;// by multiplication we offsetting our viewport plane into Z depth direction\n    //as if our POV = 90 deg\n    //Viewport * 1 means 1 length of horizontal line from center to edge of viewport into screen depth direction\n    //more you multiply smaller scale of object you get, \n    //smaller appears distance of 1 unit from viewport center in screen plane direction\n    //play with point values to understand\n    \n    //draw our circle on zOffseted plane of viewport\n    if (distance(zOffset,vec2(point.x,point.y)) < pointScale){\n    fragColor = vec4(point.z/3.);\n    }else{\n    fragColor = vec4(zOffset,0.,1.0); //our zOffset coords\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}