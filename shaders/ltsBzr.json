{
    "Shader": {
        "info": {
            "date": "1510855705",
            "description": "In each line, compute the rank of each dot (and thus the number of dot per line).\nIndex stored in fragColor.g after log2(size) pass.\nHere, visualized as color in the segment after the dot (i.e. index don't increment).\n",
            "flags": 32,
            "hasliked": 0,
            "id": "ltsBzr",
            "likes": 7,
            "name": "Stream reduction: parallel count",
            "published": 3,
            "tags": [
                "parallelism",
                "sum",
                "compaction",
                "prefix"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1083
        },
        "renderpass": [
            {
                "code": "// https://en.wikipedia.org/wiki/Prefix_sum\n// http://www.seas.upenn.edu/~cis565/Lectures2011/Lecture12.pdf\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n  //O = texelFetch(iChannel0,ivec2(U.x/1.,0),0);\n    O = texelFetch(iChannel0,ivec2(U/1.),0);\n    //O.g /= iResolution.x/100.; \n    \n    O = O.r==1. \n            ? vec4(1)\n            : .3+.3*cos(1.8138*O.g+vec4(0,-2.1,2.1,0));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define rnd(U)   fract(sin(dot(U, vec2(12.9898, 78.233))) * 43758.5453)\n#define T(U,d)   texelFetch( iChannel0, ivec2(U) - d, 0 )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    int i = iFrame%300;\n    \n    O = i == 0 \n        ? float( rnd(U) < .01 ) * vec4(1,1,0,0) // .r = data, scattered 1 among zeros.\n        : T(U,0);                               // .g = index count\n    \n    if ( i <= int(log2(iResolution.x))+1 )        \n        O.g += T(U,ivec2(1<<(i-1),0)).g;        // the hearth of the algorithm\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}