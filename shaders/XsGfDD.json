{
    "Shader": {
        "info": {
            "date": "1528815988",
            "description": "Another live-coding / VJing loop.",
            "flags": 0,
            "hasliked": 0,
            "id": "XsGfDD",
            "likes": 11,
            "name": "Radiography",
            "published": 3,
            "tags": [
                "raymarch",
                "livecoding"
            ],
            "usePreview": 0,
            "username": "lsdlive",
            "viewed": 1987
        },
        "renderpass": [
            {
                "code": "// @lsdlive\n// CC-BY-NC-SA\n\nmat2 r2d(float a) {\n\tfloat c = cos(a), s = sin(a);\n\treturn mat2(c, s, -s, c);\n}\n\n// http://mercury.sexy/hg_sdf/\n// hglib mirrorOctant\nvoid mo(inout vec2 p, vec2 d) {\n\tp.x = abs(p.x) - d.x;\n\tp.y = abs(p.y) - d.y;\n\tif (p.y > p.x)p = p.yx;\n}\n\n// hglib pMod1\nfloat re(float p, float d) {\n\treturn mod(p - d * .5, d) - d * .5;\n}\n\n// hglib pModPolar\nvoid amod(inout vec2 p, float d) {\n\tfloat a = re(atan(p.x, p.y), d);\n\tp = vec2(cos(a), sin(a)) * length(p);\n}\n\n// signed cube\n// https://iquilezles.org/articles/distfunctions\nfloat cube(vec3 p, vec3 b) {\n\tb = abs(p) - b;\n\treturn min(max(b.x, max(b.y, b.z)), 0.) + length(max(b, 0.));\n}\n\nfloat g = 0.;\nfloat de(vec3 p) {\n\tfloat t = iTime * 7.;\n\tfloat s = (t*.1 + sin(t)*.1)*2.5;\n\tp.xz *= r2d(s);\n    //p.xz *= r2d(iTime);\n\n\tamod(p.xz, 6.28 / 4.);\n\tmo(p.xz, vec2(2.7));\n\n\tvec3 q = p;\n\tq.xz *= r2d(q.y*.7 + iTime * 2.);\n\tamod(q.xz, 6.28 / 9.);\n\tq.x = abs(q.x) - 2.4;\n\tfloat c = cube(q, vec3(.1, 1e6, .1));\n\n\tq = p;\n\tmo(q.xz, vec2(.3));\n\tq.x = abs(q.x) - 2.;\n\tfloat cyl = length(q.xz) - .15;\n\n\tp.xz *= r2d(p.y*.3 + iTime * 4.);\n\tfloat d = cube(p, vec3(.9, 1e6, .9));\n\td = min(d, cyl);\n\td = min(d, c);\n\tg += .01 / (.01 + d * d);// glow trick from balkhan https://www.shadertoy.com/view/4t2yW1\n\treturn d;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n\n\tvec3 ro = vec3(0, -iTime * 6., -0);\n\tvec3 rd = normalize(vec3(uv, .4 - length(uv))); // fisheye learnt from xt95 & lamogui\n\t\n    vec3 p;\n\tfloat t = 0., ri;\n\tfor (float i = 0.; i < 1.; i += .01) {\n\t\tri = i;\n\t\tp = ro + rd * t;\n\t\tfloat d = de(p);\n\t\t//if(d<.001)break;\n\t\td = max(abs(d), .02);// phantom mode trick from aiekick https://www.shadertoy.com/view/MtScWW\n\t\tt += d * .2;\n\t}\n\n\tvec3 c = mix(vec3(.9, .8, .6), vec3(.1, .1, .2), sin(uv.x*2.) + ri);\n\tc.r += sin(iTime)*.3;\n\tc += g * .03; // glow trick from balkhan https://www.shadertoy.com/view/4t2yW1\n\tc = mix(c, vec3(.1, .1, .12), 1. - exp(-.07*t*t)); // fog\n\n\tfragColor = vec4(c, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}