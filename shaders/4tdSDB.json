{
    "Shader": {
        "info": {
            "date": "1481491425",
            "description": "Wha?\n\nLittle shader art.",
            "flags": 40,
            "hasliked": 0,
            "id": "4tdSDB",
            "likes": 8,
            "name": "DnB (sound)",
            "published": 3,
            "tags": [
                "sound",
                "music",
                "art"
            ],
            "usePreview": 0,
            "username": "srtuss",
            "viewed": 485
        },
        "renderpass": [
            {
                "code": "// srtuss, 2016\n\nfloat tempo = 2.2;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2. - 1.;\n    \n    float t = mod(iTime * tempo, 64.);\n    float b = min(1., t * 0.1) * exp(max(0., t - 30.) * -1.);\n    \n    t = mod(iTime * tempo - 32., 64.);\n    float a = min(1., max(t, 0.) * 0.1) * exp(max(0., t - 30.) * -1.);\n    \n    \n    float d = dot(uv, uv);\n    uv *= mix(1., (3. + d + d * d) * .1, a);\n    \n    uv *= mix(vec2(1.), uv, b);\n    \n    fragColor = texture(iChannel0, uv * .5 + .5);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// srtuss, 2016\n\nfloat hsh(float x)\n{\n    return fract(sin(x * 237.234234) * 982734.1235);\n}\n\nfloat nse(float x)\n{\n    float fl = floor(x);\n    x = fract(x);\n    x = smoothstep(0., 1., x);\n    return mix(hsh(fl), hsh(fl + 1.), x) - .5;\n}\n\nfloat fbm(float x)\n{\n    return nse(x) + nse(x * -2.) * .5 + nse(x * 4.1) * .25;\n}\n\nfloat tempo = 2.2;\n\nvec2 metal(float time, float seed, float fmul, float lp, float decay)\n{\n    vec2 v = vec2(0.);\n    \n    #define N 100\n    \n    float btm = time;\n    \n    for(int i = 0; i < N; ++i)\n    {\n        float x = float(i) / float(N);\n        \n        float f = 300. * exp2(hsh(float(i) + seed) * 6.195);\n        f *= fmul;\n        \n        //f = log2(f / 440.) * 12. + 69.;\n        //f = floor(f / 6.) * 6.;\n        //f = exp2((f - 69.) / 12.) * 440.;\n        \n        vec4 dat = texture(iChannel0, vec2(x, btm * 0.5));\n        \n        float amp = dat.x * exp(-f * lp);// / float(i + 1);\n        \n        amp *= exp(-time * decay * (1. - exp(-f * 100.)));\n        \n        vec2 modulation = vec2(nse(btm * .09 * f), nse(btm * .091 * f));\n        \n        modulation = mix(modulation, vec2(1.), .7 * hsh(float(i)));\n        \n    \tv += sin(btm * f * 6.) * amp * modulation;\n        \n        btm -= 3.3333;\n    }\n    v *= 0.1;\n    return v;\n}\n\nfloat pad(float t)\n{\n    t *= 100.;\n    float v = 0.;\n    for(int i = 0; i < 10; ++i)\n    {\n        float h = float(i+1);\n        v += sin(t * h * 6.) / h;\n        \n    }\n    return v;\n}\n\nfloat echo(float time)\n{\n   \t/*float v = 0.;\n    float nt = floor(hsh(floor(time * tempo * 4.)) * 2.) * 5.;\n    float tm = fract(time * tempo * 4.);\n    v += sin(time * 5000. * exp2(nt / 12.)) * exp(tm * -2.) * smoothstep(.0, .1, tm);\n    */\n    \n    time *= exp2(floor(5. * hsh(floor(time * tempo / 4.))) / 12.);\n    \n    time *= exp2(floor(5. * hsh(floor(time * tempo))));\n    \n    float v = (pad(time) + pad(time * exp2(11. / 12.)) + pad(time * exp2(14. / 12.)) + pad(time * exp2(16. / 12.)));\n    \n    return v * min(1., fract(time * tempo) * 2.) * .2;\n}\n\nvec2 mainSound( in int samp, float time )\n{\n    float t = mod(time * tempo, 4.);\n    t = mod(t, 2.5);\n    t /= tempo * .9;\n    vec2 v = nse(120. * sqrt(t)) * min(exp(t * -10.) * 2., 1.) * min(1., t * 5000.) * vec2(0.5);\n    \n    t = mod(time * tempo, 1.) / tempo;\n    v += metal(t, 35., 2., 0., 2.) * .05;\n    \n    t = mod(time * tempo + .5, 1.) / tempo;\n    v += metal(t, 35., 1., 0., 2.) * .04 * step(8., mod(time * tempo, 16.));\n    \n    t = mod(time * tempo, .25) / tempo;\n    v += metal(t, 500., 10., 0., 20.) * .1;\n    \n    \n    t = mod(time * tempo, 2.) / tempo;\n    v += metal(t, 500., 10., 0., 20.) * .1;\n    \n    \n    \n    t = mod(time * tempo + 1., 2.) / tempo;\n    \n    t *= 1.9;\n    vec2 w = vec2(hsh(t), hsh(t + .1)) * exp(t * -10.) * 0.2;\n    w += sin(t * 400.) * exp(t * -10.) * min(1., t * 5000.) * .1;\n   \t\n    //float amp = clamp(1. - abs(t - .1) * 8., 0., 1.);\n    v += w * (max(exp(-1. * fract(t * 20.)), min(t * 9., 1.)) + 3. * clamp(1. - abs(t - .4) * 10., 0., 1.));\n    \n    \n    \n    t = (8. - mod(time * tempo, 8.)) / tempo;\n    w = metal(t, 400., 1., 0., 0.5) * .2;\n    \n    \n    v = mix(v, w, step(mod(time * tempo, 32.), 8.));\n    \n    \n    \n    t = mod(time * tempo, 8.);\n    t = mod(t, 3.);\n    t /= tempo;\n    v += sin(300. * (t - t * t * .3)) * smoothstep(0., .01, t) * smoothstep(.4, .3, t) * vec2(.2);\n    \n    \n    \n    \n    \n    float et = tempo / 4.;\n    v += (echo(time) + echo(time - et) * vec2(.5, .3) + echo(time - et * 2.) * vec2(.10, .25)) * .05;// * smoothstep(15.99, 16., time * tempo);\n    \n    v *= 4.;\n    \n    return v;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    }
                ],
                "name": "Sound",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 38
                    }
                ],
                "type": "sound"
            },
            {
                "code": "// srtuss, 2016\n\nvec2 rotate(vec2 p, float a)\n{\n\treturn vec2(p.x * cos(a) - p.y * sin(a), p.x * sin(a) + p.y * cos(a));\n}\n\nfloat tempo = 2.2;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = 2.0 * uv - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    float x = mod(iTime * tempo, 3.) / tempo;\n    uv += sin(x * 20.) * .1 * exp(x * -3.);\n    uv = rotate(uv, iTime * 0.01);\n    vec2 p = uv;\n    float tm = iTime * 0.1;\n    vec2 t = vec2(-0.1288, 0.15296);\n    t += vec2(cos(tm), sin(tm)) * 0.0000;\n    p *= 3.0 + sin(tm);\n    p += iTime;\n    for(int i = 0; i < 30; i++)\n    {\n        p.x = p.x - floor(t.x * p.y);\n\t\tp.y = p.y + floor(t.y * p.x);\n    }\n    vec3 cl = vec3(sin(p * 0.1) * 0.5 + 0.5, 0.0);\n    cl *= cl;\n\tfragColor = mix(vec4(cl, 1.0), texture(iChannel0, (fragCoord / iResolution.xy - .5) * 1.01 + .5), .91);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}