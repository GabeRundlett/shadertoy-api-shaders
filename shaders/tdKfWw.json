{
    "Shader": {
        "info": {
            "date": "1607309857",
            "description": "2d-Puerta-simple",
            "flags": 0,
            "hasliked": 0,
            "id": "tdKfWw",
            "likes": 1,
            "name": "2d-Puerta-simple",
            "published": 3,
            "tags": [
                "2dpuertasimple"
            ],
            "usePreview": 0,
            "username": "jorge2017a1",
            "viewed": 250
        },
        "renderpass": [
            {
                "code": "/// por jorge2017a1 ----jorge flore p. --6-dic/2020\n#define saturate(x) clamp(x, 0.0, 1.0)\n#define R iResolution.xy\n#define ss(a, b, t) smoothstep(a, b, t)\n#define SS(U) smoothstep(3./R.y,0.,U)\n\nfloat oU( float d1, float d2 ) { return  min(d1,d2); }\nfloat oS( float d1, float d2 ) { return max(-d1,d2); }\nfloat oI( float d1, float d2 ) { return max(d1,d2); }\n\nvec2 opRep2D( in vec2 p, in vec2 c )\n{\n    vec2 q = mod(p+0.5*c,c)-0.5*c;\n    return  q;\n}\n\n\nfloat sdbox(vec2 p, vec2 b)\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdcirc(vec2 p, float r)\n{\n    return length(p)-r;\n}\n\n\nfloat Bloques(vec2 p)\n{\n    float b1a=sdBox(p-vec2(-1.5,-0.9), vec2(0.2,0.08 ) );\n    float b2a=sdBox(p-vec2(-1.08,-0.9), vec2(0.2,0.08 ) );\n    float b3a=sdBox(p-vec2(-0.66,-0.9), vec2(0.2,0.08 ) );\n    float resp=oU(b1a,b2a);\n    resp=oU(resp,b3a);\n    \n    return resp;\n}\n\n\nfloat Bloquesv2(vec2 p)\n{\n    vec2 pp=p;\n    \n    pp.x=pp.x+0.5*sin(iTime);\n   \n    float suma=1000.0;\n    \n    for (float i=0.0; i<12.0;i++)\n \t{       \n    \tfloat b1a=sdBox(pp-vec2(-2.2+0.425*float(i),-1.4), vec2(0.2,0.08 ) );\n    \tsuma=oU(suma, b1a);\n        \n\t}   \n    \n    float resp=suma;\n    \n    return resp;\n}\n\n\nfloat Puerta(vec2 p)\n{       \n     p.x=p.x+0.5*sin(iTime);\n\tfloat b1a=sdBox(p-vec2(0.0,-0.28), vec2(0.3,0.32 ) );\n    float s1= sdcirc(p-vec2(0.0,0.06), 0.3);\n    \n    float resp=b1a;\n    resp=oU(resp, s1);\n    return resp;\n        \n}   \n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = (2.*fragCoord-iResolution.xy)/iResolution.y;\n\t\n    vec3 col = 0.5 + 0.5*cos(2.0+uv.xyx+vec3(0,2,4));\n    \n\n    float sp1 = sdcirc(p-vec2(-1.0,0.57),.165);\n    float b1 = Bloquesv2(p-vec2(-0.2,0.7));\n    float b2 = Bloquesv2(p-vec2(0.0,0.5));\n    float p1= Puerta(p-vec2(0.0,0.0));\n     \n    \n    col= dibujoSobresaltado(p, sp1, vec3(0.9,0.8,0.3),  col);\n    col= dibujoSobresaltado(p, b1, vec3(0.2,0.8,0.3),  col);\n    col= dibujoSobresaltado(p, b2, vec3(0.2,0.8,0.3),  col);\n    col= dibujoSobresaltado(p, p1, vec3(0.0),  col);\n   \n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// MASKS\nfloat fillMask(float distanceChange, float dist) \n{\n    return smoothstep(distanceChange, -distanceChange, dist);\n}\n\nfloat blurMask(float distanceChange, float dist, float blurAmount) {\n    float blurTotal = blurAmount*.01;\n    return smoothstep(blurTotal+distanceChange, -distanceChange, dist);\n}\n\nfloat innerMask(float distanceChange, float dist, float width) {\n    return smoothstep(distanceChange,-distanceChange,dist+width);\n}\n\nfloat outerMask(float distanceChange, float dist, float width) {\n    return smoothstep(distanceChange,-distanceChange,dist-width);\n}\n\n\nvec3 dibujoSobresaltado(vec2 uv, float dist, vec3 colIn,  vec3 colOut)\n{   \n    float distanceChange = fwidth(dist) * 0.5;\n    float flm=fillMask(distanceChange, dist);\n    \n    float uWotM8 = 0.009;\n    \n    uWotM8 = outerMask(distanceChange, dist, uWotM8);\n    colOut = mix(colOut, vec3(0,0,0), uWotM8);\n    \n    return mix(colOut,colIn, flm );\n}\n\n\nfloat sdCirc(vec2 p, float r)\n{\n    return length(p)-r;\n}\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}