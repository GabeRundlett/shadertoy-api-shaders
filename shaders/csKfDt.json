{
    "Shader": {
        "info": {
            "date": "1698771641",
            "description": "https://www.shadertoy.com/view/dsyfWt\nxy = p.x / p.y :: secret sauce\nhttps://www.shadertoy.com/view/msGBDt",
            "flags": 0,
            "hasliked": 0,
            "id": "csKfDt",
            "likes": 2,
            "name": "Soul of Sarah II",
            "published": 3,
            "tags": [
                "shapes",
                "figures"
            ],
            "usePreview": 0,
            "username": "ElSolem",
            "viewed": 78
        },
        "renderpass": [
            {
                "code": "vec3 pal( in float t)\n{\n    vec3 a = vec3(0.5,0.5,0.5);\n    vec3 b = vec3(0.5,0.5,0.5);\n    vec3 c = vec3(2.0,1.0,0.0);\n    vec3 d = vec3(0.5,0.20,0.25);\n    return a + b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Convert pixel coordinates to a normalized range (-1 to 1)\n    vec2 p = (2.0*fragCoord-iResolution.xy)/min(iResolution.y,iResolution.x);\n\n    // Calculate the value of xy using your equation\n    float xy = p.x / p.y;\n\n    // Define a threshold for plotting the point\n    float threshold = 2.; // Adjust this value as needed // air: 1.0, water: 1.33, glass: 1.5, diamond: 2.4\n\n    // Check if xy is within the threshold to plot the point\n    if (abs(xy) < abs(threshold))\n    {\nvec2 normalizedCoord = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\nfor(float i = 0.0; i< 19.0; i+=1.0){\n normalizedCoord =abs(normalizedCoord );\n normalizedCoord -=0.6;\n  normalizedCoord *=1.3;\n  normalizedCoord *= mat2(\n  cos(0.2),-sin(0.2),\n  sin(0.2),cos(0.2)\n  );\n}\n    normalizedCoord *= mat2(\n sin(0.3),cos(0.3),\n  cos(0.3),sin(0.3)\n  );\n    fragColor = vec4(0,length(normalizedCoord),length(normalizedCoord),1.0);\n    }\n    else\n    {\nfloat angle = iTime*0.01;\nvec2 normalizedCoord = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\nfor(float i = 0.0; i< 19.0; i+=1.0){\n normalizedCoord =abs(normalizedCoord );\n normalizedCoord -=0.6;\n  normalizedCoord *=1.3;\n  normalizedCoord *= mat2(\n  cos(angle),-sin(angle),\n  sin(angle),cos(angle)\n  );\n}\n\n    fragColor = vec4(length(normalizedCoord+vec2(-.5,-0.7)),length(normalizedCoord+vec2(0.2,-0.3)),length(normalizedCoord+vec2(-0.4,-0.1)),1.0);\n}\n    }",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}