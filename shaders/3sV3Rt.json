{
    "Shader": {
        "info": {
            "date": "1570761673",
            "description": "Game of life with different SCALEs. Interaction with mouse supported.\n\n",
            "flags": 32,
            "hasliked": 0,
            "id": "3sV3Rt",
            "likes": 2,
            "name": "GOLife",
            "published": 3,
            "tags": [
                "gameoflife"
            ],
            "usePreview": 0,
            "username": "zxxuan1001",
            "viewed": 368
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(texelFetch( iChannel0, ivec2(fragCoord), 0 ).rgb, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define SCALE 2\n\nint pixel(in ivec2 p) \n{\n    float tx = 0.3*texelFetch(iChannel0, p, 0).r\n            + 0.6*texelFetch(iChannel0, p, 0).g\n        \t+ 0.11*texelFetch(iChannel0, p, 0).b;\n    return int(step(0.3, tx));\n}\n\nfloat rnd(in vec2 p) \n{\n    return fract(sin(p.x*17.0*p.y*13.0)*138.5453123);\n}\n\nfloat init( in vec2 p )\n{\n    return step(0.8, rnd(p));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float o = 0.0;\n    float b = 0.0;\n    float g = 0.0;\n    ivec2 px = ivec2(fragCoord);\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    vec2 mo = iMouse.xy/iResolution.xy;\n    mo.x *= iResolution.x/iResolution.y;\n    int nb = 0;\n    \n    nb += pixel(ivec2(px) + SCALE*ivec2(-1, -1));\n    nb += pixel(ivec2(px) + SCALE*ivec2(-1, 0));\n    nb += pixel(ivec2(px) + SCALE*ivec2(-1, 1));\n    nb += pixel(ivec2(px) + SCALE*ivec2(0, -1));\n    nb += pixel(ivec2(px) + SCALE*ivec2(0, 1));\n    nb += pixel(ivec2(px) + SCALE*ivec2(1, -1));\n    nb += pixel(ivec2(px) + SCALE*ivec2(1, 0));\n    nb += pixel(ivec2(px) + SCALE*ivec2(1, 1));\n    \n    int sf = pixel(px);\n    sf += int(step(0.9, 1.0-length(uv-mo)/0.5));\n    \n    if (sf == 1) \n    {\n        o = (nb == 2 || nb == 3) ? 1.0 : 0.0;\n        b = (nb == 3) ? 1.0 : 0.0;\n        g = (nb == 2) ? 0.5: 0.0;\n    } else \n    {\n        o = (nb == 3) ? 1.0 : 0.0;\n        b = (nb == 4) ? 1.0 : 0.0;\n        g = (nb > 7) ? 1.0 : 0.0;\n    }\n    \n    if (iFrame == 0) \n    {\n        o = init(fragCoord/iResolution.xy);\n        b = init(fragCoord*2.0/iResolution.xy);\n        g = init(fragCoord*3.0/iResolution.xy);\n    }\n    \n    fragColor = vec4(o,g,b,1.0);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}