{
    "Shader": {
        "info": {
            "date": "1707668302",
            "description": "Grid Line",
            "flags": 0,
            "hasliked": 0,
            "id": "43X3z2",
            "likes": 2,
            "name": "Grid Line",
            "published": 3,
            "tags": [
                "grid"
            ],
            "usePreview": 0,
            "username": "antoinebou12",
            "viewed": 105
        },
        "renderpass": [
            {
                "code": "\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Adjust grid size based on mouse x position\n    float gridSize = 30.0 + 10.0 * (iMouse.x / iResolution.x);\n\n    // Calculate grid lines\n    vec2 grid = abs(fract(uv * gridSize - 0.5) - 0.5) / fwidth(uv * gridSize);\n    float line = 1.0 - min(grid.x, grid.y);\n\n    // Create a time-varying background color\n    vec3 bgCol = 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0, 2, 4));\n\n    // Mix the line color with the background color based on line presence\n    vec3 col = mix(bgCol, vec3(1.0, 0.8, 0.1), line);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}