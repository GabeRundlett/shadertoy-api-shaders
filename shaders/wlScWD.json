{
    "Shader": {
        "info": {
            "date": "1594359404",
            "description": "方块显隐2",
            "flags": 0,
            "hasliked": 0,
            "id": "wlScWD",
            "likes": 2,
            "name": "方块显隐2",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "miracleYang",
            "viewed": 268
        },
        "renderpass": [
            {
                "code": "float PI=3.1415926;\nfloat Hash21(vec2 p){\n    p = fract(p*vec2(234.34,435.345));\n    p+=dot(p,p+34.23);\n    return fract(p.x*p.y);\n}\nvec2 N22(vec2 p){\n    vec3 a = fract(p.xyx*vec3(123.34,234.34,345.65));\n    a+=dot(a,a+34.45);\n    return fract(vec2(a.x*a.y,a.y*a.z));\n}\nfloat aa = 0.;\nfloat radio=0.;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    //uv.x*=iResolution.x/iResolution.y;\n    //uv.x+=.011;\n    radio=iResolution.x/iResolution.y;\n    \n    \n    //uv= (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    //vec2 screen = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    float backgroundColor =1.0;\n    \n    vec3 col = vec3(0);\n    uv *= 5.;\n    \n    vec2 c = fract(uv);\n    \n    vec2 id = floor(uv)+.5;\n    float n=Hash21(id);\n    \n    float width=.1;\n    \n    float t = iTime;\n    aa = abs(sin(t));    \n    vec2 edge =sin(c*PI);\n    //edge.x-=clamp(aa*2.-n,width,1.);\n    edge.x-=width;\n    edge.y-=width*radio;\n    \n    float x= step(.01,edge.x);\n    float y= step(.01,edge.y);\n    if(x== 0.&& y==0.)\n    {\n        col=vec3(0);\n    }\n    else if(x== 1. && y==1.)\n    {\n        col=vec3(1);\n    }\n    if(n<1.)\n    {\n        n-=aa;\n        n=clamp(n,0.,1.);\n    }\n    col=n*col;\n    \n    //col.z=1.;\n    //col+=step(.01,edge.x);\n    //col*=step(.01,edge.y);\n    //col.y=edge.y;\n    col=mix(vec3(0.),col,backgroundColor);\n    \n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}