{
    "Shader": {
        "info": {
            "date": "1456969375",
            "description": "Clone of one of Com Truise's visuals he showed me. It's based on the cover for the album &quot;In Decay&quot;, which is here: https://www.youtube.com/watch?v=yergWdn968o",
            "flags": 64,
            "hasliked": 0,
            "id": "Xsy3Dd",
            "likes": 5,
            "name": "In Decay",
            "published": 3,
            "tags": [
                "album",
                "comtruise",
                "indecay",
                "electronic",
                "visuals"
            ],
            "usePreview": 0,
            "username": "sixstring982",
            "viewed": 894
        },
        "renderpass": [
            {
                "code": "#define BORDER_COLOR rgbFromVec(vec3(255.0, 244.0, 199.0))\n#define BG_TOP_COLOR rgbFromVec(vec3(105.0, 22.0, 152.0))\n#define BG_BOT_COLOR rgbFromVec(vec3(5.0, 146.0, 255.0))\n#define RASTER_COLOR rgbFromVec(vec3(255.0, 91.0, 61.0))\n#define FACE_COLOR   rgbFromVec(vec3(0.0,176.0, 217.0))\n\nvec3 rgbFromVec(in vec3 vec) {\n    return vec / 255.0;\n}\n\nbool isBorder(in vec2 p) {\n    return abs(p.x) > 0.9 ||\n           abs(p.y) > 0.9;\n}\n\nvec3 bgGradient(in vec2 uv) {\n\tfloat amt = (uv.y + 0.9) / 1.8;\n\treturn mix(BG_BOT_COLOR, BG_TOP_COLOR, amt);\n}\n\nbool isFaceBackground(in vec2 uv, float left) {\n    /* The face is sorta like a piecewise function */\n    if (uv.y > -0.02) { /* Forehead*/\n\t    return -uv.y + 4.0 * (uv.x - left) > 0.0;\n    } else if (uv.y > -0.1459) { /* Nose */\n        return uv.y + 2.0 * (uv.x - left) + 0.03 > 0.0;\n    } else if (uv.y > -0.2385) { /* Upper lip */\n        return -uv.y + 4.0 * (uv.x - left - 0.095) > 0.0;\n    } else if (uv.y > -0.2896) { /* Inner upper lip */\n        return uv.y + 4.0 * (uv.x - left + 0.025) > 0.0;\n    } else if (uv.y > -0.3435) { /* Inner lower lip */\n        return -uv.y + 4.0 * (uv.x - left - 0.12) > 0.0;\n    } else if (uv.y > -0.4624) { /* Lower lip */\n        return uv.y + 5.0 * (uv.x - left + 0.035) > 0.0;\n    } else if (uv.y > -0.5772) { /* Upper chin */\n        return -uv.y + 5.16 * (uv.x - left - 0.147) > 0.0;\n    } else if (uv.y > -0.6449) { /* Lower chin */\n        return uv.y + 2.0 * (uv.x - left + 0.255) > 0.0;\n    } else { /* Jaw */\n        return uv.y + 0.6 * (uv.x + 1.01) > left * 0.6;\n    }\n    return false;\n}\n\nfloat faceBorderWidth(in vec2 uv) {\n    if (uv.y > -0.02) { /* Forehead*/\n\t    return 0.118;\n    } else if (uv.y > -0.1459) {\n        return 0.118;\n    } else if (uv.y > -0.2385) {\n        return 0.118;\n    } else if (uv.y > -0.2896) {\n        return 0.118;\n    } else if (uv.y > -0.3435) {\n        return 0.118;\n    } else if (uv.y > -0.4624) {\n        return 0.118;\n    } else if (uv.y > -0.5772) {\n        return 0.118;\n    } else if (uv.y > -0.6449) {\n        return 0.118;\n    } else {\n        return 0.118;\n    }\n}\n\nbool isEye(in vec2 uv, float left) {\n    bool inRect = uv.y < 0.42 &&\n                  uv.y > 0.313 &&\n                  uv.x > 0.33 + left &&\n                  uv.x < 0.41 + left;\n    \n    bool inRight = length(uv - vec2(0.40 + left, 0.3665)) < 0.055;\n    bool inLeft  = length(uv - vec2(0.33 + left, 0.3665)) < 0.055;\n    \n    return inRect || inLeft || inRight;\n}\n\nbool isFaceRasterLine(in vec2 uv) {\n    return mod(uv.y, 0.02) > 0.0075;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = ((fragCoord / iResolution.xy) * 2.0) - vec2(1.0);\n    \n    \n    if (isBorder(uv)) {\n        fragColor = vec4(BORDER_COLOR, 1.0);\n    } else {\n        /* Draw main image */\n        float face_bg = 0.5 + 0.5 * cos(iTime);\n        float face_fg = 0.5 + 0.5 * sin(iTime);\n        \n        if (isFaceBackground(uv, face_fg) && \n            !isFaceBackground(uv, face_fg + faceBorderWidth(uv))) {\n            fragColor = vec4(FACE_COLOR, 1.0);\n        } else if (isEye(uv, face_fg)) {\n         \tfragColor = vec4(FACE_COLOR, 1.0);\n        } else if (isFaceBackground(uv, face_fg) && \n                   (uv.y > 0.8 || uv.y < -0.8)) {\n         \tfragColor = vec4(FACE_COLOR, 1.0);\n        } else if (isFaceBackground(uv, face_bg) && isFaceRasterLine(uv)) {\n            fragColor = vec4(RASTER_COLOR, 1.0);\n        } else if (isFaceBackground(uv, face_bg) &&\n                   isFaceBackground(uv, face_fg)) {\n        \tfragColor = vec4(BORDER_COLOR, 1.0);\n        } else {\n        \tfragColor = vec4(bgGradient(uv), 1.0);\n        }\n    }\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 4384,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/ghostly/com-truise-klymaxx"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}