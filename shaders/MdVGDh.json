{
    "Shader": {
        "info": {
            "date": "1454699853",
            "description": "sometimes my imagination is lacking",
            "flags": 96,
            "hasliked": 0,
            "id": "MdVGDh",
            "likes": 7,
            "name": "My SOund VisUalization",
            "published": 3,
            "tags": [
                "soundcloud"
            ],
            "usePreview": 0,
            "username": "eiffie",
            "viewed": 862
        },
        "renderpass": [
            {
                "code": "//Too Tey. Bee Yen by Villainous Willis is used CC\n\nvoid mainImage(out vec4 O, in vec2 U){\n    O=texture(iChannel0,U/iResolution.xy);\n    if(U.y>0.85){\n        O=O*0.5+texture(iChannel0,(U+vec2(1.0))/iResolution.xy)*0.5;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//Font code ripped from: ASCII Characters... font texture by Bart_Verheijen\n//  Created by Bart Verheijen 2016\n//  License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// font data is copied from Flyguy:\n// https://www.shadertoy.com/view/Mt2GWD\n\n//Automatically generated from the 8x12 font sheet here:\n//http://www.massmind.org/techref/datafile/charset/extractor/charset_extractor.htm\n\n#define CHAR_SIZE vec2(8, 12)\n\nvec4 ch_spc = vec4(0x000000,0x000000,0x000000,0x000000);\nvec4 ch_exc = vec4(0x003078,0x787830,0x300030,0x300000);\nvec4 ch_quo = vec4(0x006666,0x662400,0x000000,0x000000);\nvec4 ch_hsh = vec4(0x006C6C,0xFE6C6C,0x6CFE6C,0x6C0000);\nvec4 ch_dol = vec4(0x30307C,0xC0C078,0x0C0CF8,0x303000);\nvec4 ch_pct = vec4(0x000000,0xC4CC18,0x3060CC,0x8C0000);\nvec4 ch_amp = vec4(0x0070D8,0xD870FA,0xDECCDC,0x760000);\nvec4 ch_apo = vec4(0x003030,0x306000,0x000000,0x000000);\nvec4 ch_lbr = vec4(0x000C18,0x306060,0x603018,0x0C0000);\nvec4 ch_rbr = vec4(0x006030,0x180C0C,0x0C1830,0x600000);\nvec4 ch_ast = vec4(0x000000,0x663CFF,0x3C6600,0x000000);\nvec4 ch_crs = vec4(0x000000,0x18187E,0x181800,0x000000);\nvec4 ch_com = vec4(0x000000,0x000000,0x000038,0x386000);\nvec4 ch_dsh = vec4(0x000000,0x0000FE,0x000000,0x000000);\nvec4 ch_per = vec4(0x000000,0x000000,0x000038,0x380000);\nvec4 ch_lsl = vec4(0x000002,0x060C18,0x3060C0,0x800000);\nvec4 ch_0 = vec4(0x007CC6,0xD6D6D6,0xD6D6C6,0x7C0000);\nvec4 ch_1 = vec4(0x001030,0xF03030,0x303030,0xFC0000);\nvec4 ch_2 = vec4(0x0078CC,0xCC0C18,0x3060CC,0xFC0000);\nvec4 ch_3 = vec4(0x0078CC,0x0C0C38,0x0C0CCC,0x780000);\nvec4 ch_4 = vec4(0x000C1C,0x3C6CCC,0xFE0C0C,0x1E0000);\nvec4 ch_5 = vec4(0x00FCC0,0xC0C0F8,0x0C0CCC,0x780000);\nvec4 ch_6 = vec4(0x003860,0xC0C0F8,0xCCCCCC,0x780000);\nvec4 ch_7 = vec4(0x00FEC6,0xC6060C,0x183030,0x300000);\nvec4 ch_8 = vec4(0x0078CC,0xCCEC78,0xDCCCCC,0x780000);\nvec4 ch_9 = vec4(0x0078CC,0xCCCC7C,0x181830,0x700000);\nvec4 ch_col = vec4(0x000000,0x383800,0x003838,0x000000);\nvec4 ch_scl = vec4(0x000000,0x383800,0x003838,0x183000);\nvec4 ch_les = vec4(0x000C18,0x3060C0,0x603018,0x0C0000);\nvec4 ch_equ = vec4(0x000000,0x007E00,0x7E0000,0x000000);\nvec4 ch_grt = vec4(0x006030,0x180C06,0x0C1830,0x600000);\nvec4 ch_que = vec4(0x0078CC,0x0C1830,0x300030,0x300000);\nvec4 ch_ats = vec4(0x007CC6,0xC6DEDE,0xDEC0C0,0x7C0000);\nvec4 ch_A = vec4(0x003078,0xCCCCCC,0xFCCCCC,0xCC0000);\nvec4 ch_B = vec4(0x00FC66,0x66667C,0x666666,0xFC0000);\nvec4 ch_C = vec4(0x003C66,0xC6C0C0,0xC0C666,0x3C0000);\nvec4 ch_D = vec4(0x00F86C,0x666666,0x66666C,0xF80000);\nvec4 ch_E = vec4(0x00FE62,0x60647C,0x646062,0xFE0000);\nvec4 ch_F = vec4(0x00FE66,0x62647C,0x646060,0xF00000);\nvec4 ch_G = vec4(0x003C66,0xC6C0C0,0xCEC666,0x3E0000);\nvec4 ch_H = vec4(0x00CCCC,0xCCCCFC,0xCCCCCC,0xCC0000);\nvec4 ch_I = vec4(0x007830,0x303030,0x303030,0x780000);\nvec4 ch_J = vec4(0x001E0C,0x0C0C0C,0xCCCCCC,0x780000);\nvec4 ch_K = vec4(0x00E666,0x6C6C78,0x6C6C66,0xE60000);\nvec4 ch_L = vec4(0x00F060,0x606060,0x626666,0xFE0000);\nvec4 ch_M = vec4(0x00C6EE,0xFEFED6,0xC6C6C6,0xC60000);\nvec4 ch_N = vec4(0x00C6C6,0xE6F6FE,0xDECEC6,0xC60000);\nvec4 ch_O = vec4(0x00386C,0xC6C6C6,0xC6C66C,0x380000);\nvec4 ch_P = vec4(0x00FC66,0x66667C,0x606060,0xF00000);\nvec4 ch_Q = vec4(0x00386C,0xC6C6C6,0xCEDE7C,0x0C1E00);\nvec4 ch_R = vec4(0x00FC66,0x66667C,0x6C6666,0xE60000);\nvec4 ch_S = vec4(0x0078CC,0xCCC070,0x18CCCC,0x780000);\nvec4 ch_T = vec4(0x00FCB4,0x303030,0x303030,0x780000);\nvec4 ch_U = vec4(0x00CCCC,0xCCCCCC,0xCCCCCC,0x780000);\nvec4 ch_V = vec4(0x00CCCC,0xCCCCCC,0xCCCC78,0x300000);\nvec4 ch_W = vec4(0x00C6C6,0xC6C6D6,0xD66C6C,0x6C0000);\nvec4 ch_X = vec4(0x00CCCC,0xCC7830,0x78CCCC,0xCC0000);\nvec4 ch_Y = vec4(0x00CCCC,0xCCCC78,0x303030,0x780000);\nvec4 ch_Z = vec4(0x00FECE,0x981830,0x6062C6,0xFE0000);\nvec4 ch_lsb = vec4(0x003C30,0x303030,0x303030,0x3C0000);\nvec4 ch_rsl = vec4(0x000080,0xC06030,0x180C06,0x020000);\nvec4 ch_rsb = vec4(0x003C0C,0x0C0C0C,0x0C0C0C,0x3C0000);\nvec4 ch_pow = vec4(0x10386C,0xC60000,0x000000,0x000000);\nvec4 ch_usc = vec4(0x000000,0x000000,0x000000,0x00FF00);\nvec4 ch_a = vec4(0x000000,0x00780C,0x7CCCCC,0x760000);\nvec4 ch_b = vec4(0x00E060,0x607C66,0x666666,0xDC0000);\nvec4 ch_c = vec4(0x000000,0x0078CC,0xC0C0CC,0x780000);\nvec4 ch_d = vec4(0x001C0C,0x0C7CCC,0xCCCCCC,0x760000);\nvec4 ch_e = vec4(0x000000,0x0078CC,0xFCC0CC,0x780000);\nvec4 ch_f = vec4(0x00386C,0x6060F8,0x606060,0xF00000);\nvec4 ch_g = vec4(0x000000,0x0076CC,0xCCCC7C,0x0CCC78);\nvec4 ch_h = vec4(0x00E060,0x606C76,0x666666,0xE60000);\nvec4 ch_i = vec4(0x001818,0x007818,0x181818,0x7E0000);\nvec4 ch_j = vec4(0x000C0C,0x003C0C,0x0C0C0C,0xCCCC78);\nvec4 ch_k = vec4(0x00E060,0x60666C,0x786C66,0xE60000);\nvec4 ch_l = vec4(0x007818,0x181818,0x181818,0x7E0000);\nvec4 ch_m = vec4(0x000000,0x00FCD6,0xD6D6D6,0xC60000);\nvec4 ch_n = vec4(0x000000,0x00F8CC,0xCCCCCC,0xCC0000);\nvec4 ch_o = vec4(0x000000,0x0078CC,0xCCCCCC,0x780000);\nvec4 ch_p = vec4(0x000000,0x00DC66,0x666666,0x7C60F0);\nvec4 ch_q = vec4(0x000000,0x0076CC,0xCCCCCC,0x7C0C1E);\nvec4 ch_r = vec4(0x000000,0x00EC6E,0x766060,0xF00000);\nvec4 ch_s = vec4(0x000000,0x0078CC,0x6018CC,0x780000);\nvec4 ch_t = vec4(0x000020,0x60FC60,0x60606C,0x380000);\nvec4 ch_u = vec4(0x000000,0x00CCCC,0xCCCCCC,0x760000);\nvec4 ch_v = vec4(0x000000,0x00CCCC,0xCCCC78,0x300000);\nvec4 ch_w = vec4(0x000000,0x00C6C6,0xD6D66C,0x6C0000);\nvec4 ch_x = vec4(0x000000,0x00C66C,0x38386C,0xC60000);\nvec4 ch_y = vec4(0x000000,0x006666,0x66663C,0x0C18F0);\nvec4 ch_z = vec4(0x000000,0x00FC8C,0x1860C4,0xFC0000);\nvec4 ch_lpa = vec4(0x001C30,0x3060C0,0x603030,0x1C0000);\nvec4 ch_bar = vec4(0x001818,0x181800,0x181818,0x180000);\nvec4 ch_rpa = vec4(0x00E030,0x30180C,0x183030,0xE00000);\nvec4 ch_tid = vec4(0x0073DA,0xCE0000,0x000000,0x000000);\nvec4 ch_lar = vec4(0x000000,0x10386C,0xC6C6FE,0x000000);\n\n\n\n/**\n * x [0..8>\n * y [0..12>\n **/\nfloat drawCh(in vec4 character, in float x, in float y)\n{\n    if(x<0.0 || y<0.0 || x>7.0 || y>11.0) return 0.0;\n    float word = 0.0;\n    if (y>5.9)\n    {\n        if (y>8.9) word = character.x;\n        else       word = character.y;\n    }\n    else\n    {\n        if (y>2.9) word = character.z;\n        else       word = character.a;\n    }\n    float n = floor(7.0-x + 8.0*mod(y,3.0));\n    return mod(floor(word/pow(2.0,n)), 2.0);\n}\nvec4 numToSprite(float a)\n{\n    if (a<0.5) return ch_0;\n    if (a<1.5) return ch_1;\n    if (a<2.5) return ch_2;\n    if (a<3.5) return ch_3;\n    if (a<4.5) return ch_4;\n    if (a<5.5) return ch_5;\n    if (a<6.5) return ch_6;\n    if (a<7.5) return ch_7;\n    if (a<8.5) return ch_8;\n    else return ch_9;\n}\n//from IQ\nfloat Capsule(in vec2 p, vec3 r){return length(vec2(p.x-clamp(p.x,r.x,r.y),p.y))-r.z;}\n\n#define F(ch) drawCh(ch, X-=8.0, Y)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=fragCoord.xy/iResolution.xy;\n    float x=floor(uv.x*36.0)/36.0;\n    \n    float a=0.0;\n    if(x>=2.0/36.0 && x<34.0/36.0)a=texture(iChannel0,vec2(x-2.0/36.0,0.25)).r;\n    a*=0.8;\n    vec3 col=vec3(a,2.0*a,1.0-a)*step(0.0,min(a-uv.y,uv.x-x-1.0/iResolution.x));\n    float X=floor(fragCoord.x-iResolution.x+mod(iTime*22.0,iResolution.x*2.0)),Y=floor(fragCoord.y-iResolution.y*2.0/3.0);\n    a=F(ch_V)+F(ch_i)+F(ch_l)+F(ch_l)+F(ch_a)+F(ch_i)+F(ch_n)+F(ch_o)+F(ch_u)+F(ch_s);\n    X-=10.0;\n    a+=F(ch_W)+F(ch_i)+F(ch_l)+F(ch_l)+F(ch_i)+F(ch_s);\n    X-=10.0;\n    a+=F(ch_dsh);\n    X-=10.0;\n    a+=F(ch_T)+F(ch_o)+F(ch_o)+F(ch_spc)+F(ch_T)+F(ch_e)+F(ch_y)+F(ch_per);\n    a+=F(ch_spc)+F(ch_B)+F(ch_e)+F(ch_e)+F(ch_spc)+F(ch_Y)+F(ch_e)+F(ch_n);\n    \n    X=floor(fragCoord.x*0.5);Y=floor(fragCoord.y*0.5-iResolution.y*0.5+20.0);\n    float n=iChannelTime[0];\n    float c=floor(max(log(n)/log(10.0),0.0));\n    if(c>0.0)n/=pow(10.0,c);\n    for(float i=0.0;i<5.0;i++){\n        if(i>c+2.)continue;\n\t\tfloat ch=floor(n);\n\t\ta+=F(numToSprite(ch));\n\t\tn=(n-ch)*10.0;\n        if(i==c)a+=F(ch_per);\n    }\n    a+=F(ch_s);\n    X=floor(fragCoord.x*0.5-iResolution.x*0.25);\n    a+=F(ch_S)+F(ch_O)+F(ch_U)+F(ch_N)+F(ch_D)+F(ch_C)+F(ch_L)+F(ch_O)+F(ch_U)+F(ch_D);\n    float d=Capsule(uv-vec2(0.4,0.9),vec3(-0.05,0.04,0.03));\n    d=min(d,Capsule(uv-vec2(0.4,0.93),vec3(-0.02,0.02,0.03)));\n    d=min(d,Capsule(uv-vec2(0.4,0.95),vec3(0.02,0.02,0.03)));\n    if(d<0.0 && (uv.x-0.4>0.0 || mod(uv.x,0.012)>0.003))a=1.0;\n    if(a>0.0)col=vec3(1.0);\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 1496,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/villainouswillis/too-tey-bee-yen"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}