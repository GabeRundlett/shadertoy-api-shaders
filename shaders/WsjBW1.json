{
    "Shader": {
        "info": {
            "date": "1590169322",
            "description": "Gradient Noise 3d first implementation.",
            "flags": 0,
            "hasliked": 0,
            "id": "WsjBW1",
            "likes": 5,
            "name": "Gradient Noise 3D",
            "published": 3,
            "tags": [
                "noise3d"
            ],
            "usePreview": 0,
            "username": "im_sky",
            "viewed": 471
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n\n#define CosineCurve 0\n#define PerlinSmoothCurve 1\n\nconst vec3 dirs[] = vec3[26]\n(\n    vec3(0.57735, 0.57735, -0.57735),                                                                                                                                                                                                                 \n    vec3(0.57735, 0.57735, 0.57735),                                                                                                                                                                                                                  \n    vec3(0.70711, 0.70711, 0),                                                                                                                                                                                                                        \n    vec3(0.70711, 0, -0.70711),                                                                                                                                                                                                                       \n    vec3(0.70711, 0, 0.70711),                                                                                                                                                                                                                        \n    vec3(1, 0, 0),                                                                                                                                                                                                                                    \n    vec3(0.57735, -0.57735, -0.57735),                                                                                                                                                                                                                \n    vec3(0.57735, -0.57735, 0.57735),                                                                                                                                                                                                                 \n    vec3(0.70711, -0.70711, 0),                                                                                                                                                                                                                       \n    vec3(0, 0.70711, -0.70711),                                                                                                                                                                                                                       \n    vec3(0, 0.70711, 0.70711),                                                                                                                                                                                                                        \n    vec3(0, 1, 0),                                                                                                                                                                                                                                    \n    vec3(0, 0, -1),                                                                                                                                                                                                                                   \n    vec3(0, 0, 1),                                                                                                                                                                                                                                    \n    //vec3(0,0,0),                                                                                                                                                                                                                           \n    vec3(0, -0.70711, -0.70711),                                                                                                                                                                                                                      \n    vec3(0, -0.70711, 0.70711),                                                                                                                                                                                                                       \n    vec3(0, -1, 0),                                                                                                                                                                                                                                   \n    vec3(-0.57735, 0.57735, -0.57735),                                                                                                                                                                                                                \n    vec3(-0.57735, 0.57735, 0.57735),                                                                                                                                                                                                                 \n    vec3(-0.70711, 0.70711, 0),                                                                                                                                                                                                                       \n    vec3(-0.70711, 0, -0.70711),                                                                                                                                                                                                                      \n    vec3(-0.70711, 0, 0.70711),                                                                                                                                                                                                                       \n    vec3(-1, 0, 0),                                                                                                                                                                                                                                   \n    vec3(-0.57735, -0.57735, -0.57735),                                                                                                                                                                                                               \n    vec3(-0.57735, -0.57735, 0.57735),                                                                                                                                                                                                                \n    vec3(-0.70711, -0.70711, 0)         \n);\n\nconst int tableSize = 512;\nconst int permutationMask = 512/2 - 1;\nconst int permutationTable[512] = int[]\n(                                                                                                                                                                                                                                          \n    180, 3, 121, 17, 22, 7, 69, 202, 72, 172,                                                                                                                                                                                                         \n    56, 94, 92, 254, 122, 139, 118, 127, 76, 2,                                                                                                                                                                                                       \n    46, 74, 169, 147, 228, 196, 47, 110, 138, 217,                                                                                                                                                                                                    \n    155, 39, 91, 61, 45, 238, 242, 229, 251, 207,                                                                                                                                                                                                     \n    192, 198, 175, 222, 176, 75, 234, 10, 25, 63,                                                                                                                                                                                                     \n    250, 135, 159, 183, 253, 96, 68, 153, 87, 50,                                                                                                                                                                                                     \n    226, 241, 114, 188, 13, 112, 21, 66, 249, 144,                                                                                                                                                                                                    \n    126, 1, 233, 124, 148, 43, 199, 156, 208, 223,                                                                                                                                                                                                    \n    164, 213, 18, 219, 59, 209, 108, 134, 27, 100,                                                                                                                                                                                                    \n    197, 90, 53, 140, 168, 29, 165, 19, 65, 161,                                                                                                                                                                                                      \n    141, 52, 195, 128, 151, 37, 117, 150, 36, 105,                                                                                                                                                                                                    \n    49, 6, 187, 116, 235, 216, 201, 119, 182, 204,                                                                                                                                                                                                    \n    221, 136, 0, 113, 24, 111, 158, 131, 212, 58,                                                                                                                                                                                                     \n    41, 85, 102, 166, 77, 157, 64, 103, 184, 83,                                                                                                                                                                                                      \n    237, 220, 23, 149, 84, 171, 99, 230, 152, 178,                                                                                                                                                                                                    \n    190, 215, 38, 34, 163, 93, 14, 244, 79, 31,                                                                                                                                                                                                       \n    9, 142, 240, 132, 145, 231, 95, 236, 8, 167,                                                                                                                                                                                                      \n    82, 80, 133, 137, 252, 211, 57, 248, 89, 20,                                                                                                                                                                                                      \n    30, 154, 32, 174, 205, 42, 98, 11, 15, 243,                                                                                                                                                                                                       \n    78, 203, 146, 185, 107, 51, 224, 54, 70, 106,                                                                                                                                                                                                     \n    194, 35, 177, 160, 255, 16, 104, 189, 12, 67,                                                                                                                                                                                                     \n    125, 33, 123, 55, 120, 186, 40, 143, 181, 239,                                                                                                                                                                                                    \n    193, 214, 115, 81, 4, 44, 200, 101, 206, 71,                                                                                                                                                                                                      \n    73, 28, 86, 130, 48, 225, 210, 227, 245, 109,                                                                                                                                                                                                     \n    232, 162, 129, 179, 218, 88, 247, 173, 191, 97,                                                                                                                                                                                                   \n    62, 60, 246, 5, 26, 170,\n    180, 3, 121, 17, 22, 7, 69, 202, 72, 172,                                                                                                                                                                                                         \n    56, 94, 92, 254, 122, 139, 118, 127, 76, 2,                                                                                                                                                                                                       \n    46, 74, 169, 147, 228, 196, 47, 110, 138, 217,                                                                                                                                                                                                    \n    155, 39, 91, 61, 45, 238, 242, 229, 251, 207,                                                                                                                                                                                                     \n    192, 198, 175, 222, 176, 75, 234, 10, 25, 63,                                                                                                                                                                                                     \n    250, 135, 159, 183, 253, 96, 68, 153, 87, 50,                                                                                                                                                                                                     \n    226, 241, 114, 188, 13, 112, 21, 66, 249, 144,                                                                                                                                                                                                    \n    126, 1, 233, 124, 148, 43, 199, 156, 208, 223,                                                                                                                                                                                                    \n    164, 213, 18, 219, 59, 209, 108, 134, 27, 100,                                                                                                                                                                                                    \n    197, 90, 53, 140, 168, 29, 165, 19, 65, 161,                                                                                                                                                                                                      \n    141, 52, 195, 128, 151, 37, 117, 150, 36, 105,                                                                                                                                                                                                    \n    49, 6, 187, 116, 235, 216, 201, 119, 182, 204,                                                                                                                                                                                                    \n    221, 136, 0, 113, 24, 111, 158, 131, 212, 58,                                                                                                                                                                                                     \n    41, 85, 102, 166, 77, 157, 64, 103, 184, 83,                                                                                                                                                                                                      \n    237, 220, 23, 149, 84, 171, 99, 230, 152, 178,                                                                                                                                                                                                    \n    190, 215, 38, 34, 163, 93, 14, 244, 79, 31,                                                                                                                                                                                                       \n    9, 142, 240, 132, 145, 231, 95, 236, 8, 167,                                                                                                                                                                                                      \n    82, 80, 133, 137, 252, 211, 57, 248, 89, 20,                                                                                                                                                                                                      \n    30, 154, 32, 174, 205, 42, 98, 11, 15, 243,                                                                                                                                                                                                       \n    78, 203, 146, 185, 107, 51, 224, 54, 70, 106,                                                                                                                                                                                                     \n    194, 35, 177, 160, 255, 16, 104, 189, 12, 67,                                                                                                                                                                                                     \n    125, 33, 123, 55, 120, 186, 40, 143, 181, 239,                                                                                                                                                                                                    \n    193, 214, 115, 81, 4, 44, 200, 101, 206, 71,                                                                                                                                                                                                      \n    73, 28, 86, 130, 48, 225, 210, 227, 245, 109,                                                                                                                                                                                                     \n    232, 162, 129, 179, 218, 88, 247, 173, 191, 97,                                                                                                                                                                                                   \n    62, 60, 246, 5, 26, 170\n);\n\nint Hash(vec3 x)\n{\n    // using ampersand to calculate modulus because-\n    // mod() for negative integers gives \"wrong\" results, for instance mod(-3, 4) = 1 and not 3\n    // the ampersand trick works only if the divisor is a power of two minus 1\n    // less operatons compared to x - y * floor(x/y)\n    return permutationTable[permutationTable[permutationTable[int(x.x) & permutationMask] + int(x.z) & permutationMask] + int(x.y) & permutationMask];\n}\n\nfloat SmoothCurve(float t)\n{\n#if CosineCurve\n    return (1.0 - cos(t * PI)) * 0.5;\n#elif PerlinSmoothCurve\n    return t * t * (3.0 - 2.0 * t);\n#else\n    return t;\n#endif\n}\n\nfloat GetIntegerNoise(vec2 p)  // replace this by something better, p is essentially ivec2\n{\n    p  = 53.7 * fract( (p*0.3183099) + vec2(0.71,0.113));\n    return fract( p.x*p.y*(p.x+p.y) );\n}\n\nvec3 GetGradient(vec3 x)\n{\n    // using % instead of & operator, below, because the divisor is not a power of two minus 1, and the divisor will never be negative here.\n    int i = Hash(x) % 26;\n    return dirs[i];\n}\n\nfloat Get3DNoise(vec3 uvw)\n{\n    float noise = 0.0;\n    \n    vec3 p = floor(uvw);\n    vec3 f = fract(uvw);\n    \n    vec3 p1 = p + vec3(0.0, 0.0, 0.0);\n    vec3 p2 = p + vec3(1.0, 0.0, 0.0);\n    vec3 p3 = p + vec3(0.0, 1.0, 0.0);\n    vec3 p4 = p + vec3(1.0, 1.0, 0.0);\n    vec3 p5 = p + vec3(0.0, 0.0, 1.0);\n    vec3 p6 = p + vec3(1.0, 0.0, 1.0);\n    vec3 p7 = p + vec3(0.0, 1.0, 1.0);\n    vec3 p8 = p + vec3(1.0, 1.0, 1.0);\n    \n    vec3 g1 = GetGradient(p1);\n    vec3 g2 = GetGradient(p2);\n    vec3 g3 = GetGradient(p3);\n    vec3 g4 = GetGradient(p4);\n    vec3 g5 = GetGradient(p5);\n    vec3 g6 = GetGradient(p6);\n    vec3 g7 = GetGradient(p7);\n    vec3 g8 = GetGradient(p8);\n    \n    float dot1 = dot(g1, uvw - p1);\n    float dot2 = dot(g2, uvw - p2);\n    float dot3 = dot(g3, uvw - p3);\n    float dot4 = dot(g4, uvw - p4);\n    float dot5 = dot(g5, uvw - p5);\n    float dot6 = dot(g6, uvw - p6);\n    float dot7 = dot(g7, uvw - p7);\n    float dot8 = dot(g8, uvw - p8);\n    \n    float wX = SmoothCurve(f.x);\n    float noiseY1 = mix(dot1, dot2, wX);\n    float noiseY2 = mix(dot3, dot4, wX);\n    float noiseY3 = mix(dot5, dot6, wX);\n    float noiseY4 = mix(dot7, dot8, wX);\n    \n    float wY = SmoothCurve(f.y);\n    float noiseZ1 = mix(noiseY1, noiseY2, wY);\n    float noiseZ2 = mix(noiseY3, noiseY4, wY);\n    \n    float wZ = SmoothCurve(f.z);\n    noise = mix(noiseZ1, noiseZ2, wZ);\n    \n    return noise;\n}\n\n//https://iquilezles.org/articles/fbm\n// H: Hurst Exponent, affects the integration of noise partially\nfloat fBM(vec3 x, float H, int numOctaves)\n{\n    float total = 0.0;\n    for(int i = 0; i < numOctaves; ++i)\n    {\n        float frequency = pow(2.0, float(i));\n        float amplitude = pow(frequency, -H);\n        total += amplitude * Get3DNoise(x * frequency);\n    }\n\t\n    return total;\n}\n\n// https://www.scratchapixel.com/lessons/procedural-generation-virtual-worlds/procedural-patterns-noise-part-1/simple-pattern-examples\n// output range -1.0 to 1.0\nfloat fBM(vec3 x, float lacunarity, float gain, int numOctaves)\n{\n    float total = 0.0;\n    float frequency = 1.0;\n    float amplitude = 1.0;\n    for(int i = 0; i < numOctaves; ++i)\n    {\n        total += amplitude * Get3DNoise(x * frequency);\n        frequency *= lacunarity;\n        amplitude *= gain;\n    }\n    \n    return total;\n}\n\nfloat Turbulence(vec3 x, float lacunarity, float gain, int numOctaves)\n{\n    float total = 0.0;\n    float frequency = 1.0;\n    float amplitude = 1.0;\n    for(int i = 0; i < numOctaves; ++i)\n    {\n        total += amplitude * abs(Get3DNoise(x * frequency));\n        frequency *= lacunarity;\n        amplitude *= gain;\n    }\n\t\n    return total;\n}\n\nfloat HighPassFilter(float x, float threshold)\n{\n    x = max(x, threshold);\n    x -= threshold;\n    x /= (1.0 - threshold);\n    return x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    uv *= 2.0;\n    vec3 uvw = vec3(uv, iTime * 0.1);\n\n    \n\t//float noise = fBM(uvw, 2.0, 0.4, 4);\n    //noise = 0.5 * noise + 0.5;\n    \n    float noise = 0.0;\n    {\n        float windowWidth = iResolution.x / 4.0; \n\n        if(fragCoord.x < windowWidth)\t\n        {\n            // pink noise\n            noise = fBM(uvw, 3.0, 1.0/3.0, 7);\n            noise = 0.5 * noise + 0.5;  \n        }\n        else if(fragCoord.x < 2.0 * windowWidth)\t\n        {\n            // brown noise\n            noise = fBM(uvw, 2.0, 0.5, 7);\n            noise = 0.5 * noise + 0.5;  \n        }\n        else if(fragCoord.x < 3.0 * windowWidth)\t\n        {\n            // turbulence\n            noise = Turbulence(uvw, 2.0, 0.5, 7);\n        }\n        else\n        {\n            uvw *= 2.0;\n            uvw.y *= 0.4; \n            // wood grain\n            noise = fBM(uvw, 0.02, 0.35, 2) * 10.0;\n            //noise = (sin((5.0 * noise * 100.0) * 2.0 * PI / 200.0) + 1.0) / 2.0;\n            noise = noise - floor(noise);\n        }\n    }\n    \n    noise = pow(noise, 2.2);\n    fragColor = vec4(noise, noise, noise, 1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}