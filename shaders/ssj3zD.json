{
    "Shader": {
        "info": {
            "date": "1617087362",
            "description": "just for fun.",
            "flags": 0,
            "hasliked": 0,
            "id": "ssj3zD",
            "likes": 2,
            "name": "Transparency Thing",
            "published": 3,
            "tags": [
                "2d",
                "random",
                "abstract"
            ],
            "usePreview": 0,
            "username": "Tater",
            "viewed": 305
        },
        "renderpass": [
            {
                "code": "//https://www.shadertoy.com/view/4djSRW\nvec2 hash21(float p){\n\tvec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n\tp3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\nfloat circle(vec2 uv, float r){\nreturn smoothstep(r,r-0.04*hash21(r).x,length(uv));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime+10.0;\n    vec2 R = iResolution.xy;\n    vec2 uv = (fragCoord-.5*R.xy)/R.y;\n    vec3 col = vec3(0.0);\n    \n    for(float i = 0.0; i<150.0; i++){\n    \n        vec3 c = vec3(hash21(i*0.3123+floor(t)),hash21(i*0.3344+floor(t)).x); //Color\n        \n        vec2 pos = + vec2(sin(hash21(i).x*t),cos(hash21(i).y*t)); //Position\n        \n        c*=vec3(circle(uv+pos,0.1+0.0002*i+0.1*hash21(i).x))*(hash21(i).x*0.7); \n        \n        col.rgb+=c;\n    }\n    col+=0.25*(1.0-smoothstep(0.1,0.102,-(abs(uv.y)-0.3-0.2*sin(t)*sin(t))+0.02*sin(uv.x*20.0+t*10.0)));\n    fragColor = vec4(col,0.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}