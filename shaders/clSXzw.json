{
    "Shader": {
        "info": {
            "date": "1675798789",
            "description": "... you can't see it if you pause. https://www.shadertoy.com/view/4djSRW for hash. It would be interesting to see this code golfed more also",
            "flags": 0,
            "hasliked": 0,
            "id": "clSXzw",
            "likes": 1,
            "name": "Video but...",
            "published": 3,
            "tags": [
                "noise",
                "video",
                "effect",
                "greenscreen"
            ],
            "usePreview": 0,
            "username": "fishy",
            "viewed": 201
        },
        "renderpass": [
            {
                "code": "// Inspired by https://www.youtube.com/watch?v=Myeatl2Q3wM\n// and https://www.shadertoy.com/view/4tsSWl\n\n#define INVERSE 0\n#define ANIMATED 0\n\nvec3 hash23(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy+p3.yzz)*p3.zyx);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = \n    #if INVERSE\n    1.-\n    #endif\n    step(0.0001, pow(1.-texture(iChannel0, fragCoord/iResolution.xy).ggg, vec3(10)));\n    \n    fragColor = vec4(hash23(fragCoord+col.r*100.\n    #if ANIMATED\n    *iTime\n    #endif\n    ), 1.);\n}\n/*\n// First attempt at golfing (I am terrible at it) (still 258 chars)\n// The hash function is the biggest thing right now\nvec3 hash23(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy+p3.yzz)*p3.zyx);\n}\n\nvoid mainImage( out vec4 r, in vec2 d )\n{\n    r = vec4(hash23(d+\n    step(1e-4, pow(1.-texture(iChannel0, d/iResolution.xy).g, 10.))\n    *10.), 1.);\n}\n*/",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}