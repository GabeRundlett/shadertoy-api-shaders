{
    "Shader": {
        "info": {
            "date": "1537118230",
            "description": "223 chars.",
            "flags": 0,
            "hasliked": 0,
            "id": "MlycRc",
            "likes": 3,
            "name": "Power Failure",
            "published": 3,
            "tags": [
                "tweet"
            ],
            "usePreview": 0,
            "username": "yx",
            "viewed": 695
        },
        "renderpass": [
            {
                "code": "#define V vec2\n#define B(a,b)(all(lessThan(a,u))&&all(lessThan(u,a+b)))\nvoid mainImage(out vec4 c,vec2 f){\n\tV u=V(f.x,iResolution.y-f.y);\\\n    c+=float((B(V(20),V(48,28))||B(V(68,29),V(4,10)))&&!B(V(24),V(40,20))),\\\n    c.r+=float(B(V(26),V(2,16)));}\n\n// un-minified code:\n\n/*bool inBox(vec2 p, vec2 xy, vec2 wh)\n{\n\t// is `p` inside a box with upper-left corner `xy` and dimensions `wh`?\n    return all(lessThan(xy, p)) && all(lessThan(p, xy + wh));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = vec2(fragCoord.x, iResolution.y - fragCoord.y);\n    \n    bool outerBox  = inBox(uv, vec2(20, 20), vec2(48, 28));\n    bool endBump   = inBox(uv, vec2(68, 29), vec2(4, 10));\n    bool innerBox  = inBox(uv, vec2(24, 24), vec2(40, 20));\n    bool redMarker = inBox(uv, vec2(26, 26), vec2(2, 16));\n    \n    fragColor += float((outerBox || endBump) && !innerBox);\n    fragColor.r += float(redMarker);\n}*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}