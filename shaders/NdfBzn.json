{
    "Shader": {
        "info": {
            "date": "1644370075",
            "description": "just playing around with things",
            "flags": 0,
            "hasliked": 0,
            "id": "NdfBzn",
            "likes": 50,
            "name": "Square Tiling Example E",
            "published": 3,
            "tags": [
                "tiling"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 993
        },
        "renderpass": [
            {
                "code": "#define pi 3.14159\n\n#define thc(a,b) tanh(a*cos(b))/tanh(a)\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d ) {\n    return a+b*cos(2.*pi*(c*t+d));\n}\n\nfloat h21 (vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat sdBox( in vec2 p, in vec2 b ) {\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    uv.x -= 1. + 0.25 * pi * 0.2 * iTime; \n    uv.y += 0.06 * cos(4. * uv.x + pi* 0.2 * iTime);\n    \n    float sc = 42. + .025 * (1. + thc(1., 4. * uv.x + uv.y + iTime));\n    vec2 ipos = floor(sc * uv);\n    vec2 fpos = fract(sc * uv);\n       \n    // m determines what new cell the old cell lies in\n    // 3 -> small\n    // 0 -> tl big, 2 -> tr big, 4 -> bl big, 1 -> br big\n    float m = mod(2. * ipos.x - ipos.y, 5.);\n    \n    // id = 2 if small cell, id = 1 if big cell (used to make outlines same size)\n    float id = 2.;\n    vec2 o = vec2(0);\n    \n    if (m != 3.) { fpos *= 0.5;  id = 1.; }    \n    if (m == 2.)      o = vec2(1,0); // top right\n    else if (m == 4.) o = vec2(0,1); // bottom left\n    else if (m == 1.) o = vec2(1);   // bottom right\n    \n    // if in big cell, halve fpos + translate\n    fpos += 0.5 * o - 0.5;\n    ipos -= o;\n    \n    float h = h21(ipos);    \n    float v = 0.3 * ipos.x/sc + 0.25 * h + 0.2 * iTime;\n    \n    float d = sdBox(fpos, vec2(0.1)) - 0.28 - 0.1 * thc(20., 2. * pi * v);\n    float k = 10. / iResolution.y;\n    float s = smoothstep(-k, k, -d);\n        \n    float c = (0.75/sc) * ipos.y + 0.5 + 0.5 * h;\n    c *= s;\n    \n    vec3 e = vec3(1.);\n    float f = smoothstep(-0.5, 0.5, fpos.x);\n    vec3 col = c * pal(v, 0.6 * f * e, e, 0.8 * e, (0.75/sc) * ipos.y * vec3(0., 0.33, 0.66)); \n    //col -= step(sdBox(fpos, vec2(0.1)), 0.28 * id);\n    col = clamp(col, 0., 1.);\n    col += 0.1;\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}