{
    "Shader": {
        "info": {
            "date": "1618210296",
            "description": "mouse click to paint\nkey A to reset image\nkey S to clean image\nI think I have already seen this process somewhere\nincrease the convolution size to make points bigger\n",
            "flags": 48,
            "hasliked": 0,
            "id": "fdsSRr",
            "likes": 1,
            "name": "pointify image",
            "published": 3,
            "tags": [
                "convolution",
                "paint"
            ],
            "usePreview": 0,
            "username": "lomateron",
            "viewed": 300
        },
        "renderpass": [
            {
                "code": "//an accident\n//was exploring how to make fluids using only kernel convolutions\n//read my comment here https://www.shadertoy.com/view/fdjGzW\n//code applies blur kernel each frame https://en.wikipedia.org/wiki/Kernel_(image_processing)\n//but the kernel values are different across space\n//the kernel values are the same image its convolving\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 u = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0,u)+.5;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    float keyA  = texture( iChannel1, vec2(65.5/256.,.25) ).x;\n    float keyS  = texture( iChannel1, vec2(83.5/256.,.25) ).x;\n    float z = 1.;//kernel convolution size\n    vec4 b0 = abs(A(u+vec2(0,0)));\n    vec4 b = vec4(0);\n    for(float i = -z; i<z+.5;++i){\n    for(float j = -z; j<z+.5;++j){\n      vec4 s = vec4(0);\n      for(float i2 = -z; i2<z+.5;++i2){\n      for(float j2 = -z; j2<z+.5;++j2){\n      s += abs(A(u+vec2(i,j)+vec2(i2,j2)));\n      }}\n      if(s.x==0.)s.x = 1.;\n      if(s.y==0.)s.y = 1.;\n      if(s.z==0.)s.z = 1.;\n      if(s.w==0.)s.w = 1.;\n      b += b0/s*A(u+vec2(i,j));\n    }}\n    vec4 a = b;\n    if(keyA!=0.)a = texture( iChannel2, u/iResolution.xy)-.5;\n    if(keyS!=0.)a = vec4(0);\n    if(iFrame==0)a = sin(u.xy*.04+sin(u.yx*.04)).xyxy;\n    if(iMouse.z>0.||iFrame==0)\n    {\n        vec2 m1 = 2.*(u-iMouse.xy)/iResolution.y;\n        a += sin(m1.x*32.)/exp(dot(m1,m1)*111.);\n    }\n    fragColor = a;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}