{
    "Shader": {
        "info": {
            "date": "1632026854",
            "description": "Worley Noise and Voronoi diagram implementation in web GLSL",
            "flags": 0,
            "hasliked": 0,
            "id": "fdyGDG",
            "likes": 5,
            "name": "Worley Noise and Voronoi Diagram",
            "published": 3,
            "tags": [
                "voronoi",
                "noise",
                "random",
                "worley",
                "diagram",
                "voronoy"
            ],
            "usePreview": 0,
            "username": "Felipe_Rodrigues",
            "viewed": 382
        },
        "renderpass": [
            {
                "code": "int VORONOI_POINTS = 100;\n\nvoid voronoi(out int point_index, out float node_magnitude, out vec2 node_position,in vec2 uv){\n    \n    // initialize variables\n    float minMagnitude = infinity;\n    vec2 closestPoint;\n    int index;\n    \n    for(int i=1;i<=VORONOI_POINTS;i++){\n        \n        //get a random point\n        vec2 pointPosition = randomVec2(i);\n        \n        //move each point at different speed\n        pointPosition+=vec2(sin(iTime*float(i)/float(VORONOI_POINTS)),cos(iTime*float(i)/float(VORONOI_POINTS)))/10.0;\n       \n        //Voronoi, closest point\n        float dist = distance(pointPosition,uv); \n        if(dist<minMagnitude){\n            closestPoint = pointPosition;\n            minMagnitude = dist;\n            index = i;\n        }\n    }\n    // return the information\n    point_index = index;\n    node_magnitude = minMagnitude;\n    node_position = closestPoint;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xx;\n\n    //initialize variables\n    vec2 closestPoint;\n    float minMagnitude;\n    int index;\n\n    //calculate\n    voronoi(index,minMagnitude,closestPoint,uv);\n\n    // Output to screen\n    fragColor = (vec4(closestPoint,0,0));\n    //fragColor += minMagnitude*sqrt(float(VORONOI_POINTS));\n    fragColor *= clamp(minMagnitude*100.0,0.0,1.0);\n    //fragColor += clamp(minMagnitude*100.0,0.0,1.0);\n    //fragColor += float(index)/float(VORONOI_POINTS);\n    //fragColor = vec4(uv,0,0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\nfloat seed1 = 43.5453;\nfloat seed2 = 91.3458;\nfloat seed3 = 545.88558;\nfloat seed4 = 841.5544;\n\nconst float infinity = 9999999999999.999;\n\nfloat random_seed1_seed2(int number,float firstSeed,float secondSeed) {\n    return fract(sin(float(number)*(firstSeed)) * secondSeed); \n}\n\nvec2 randomVec2(int number){\n    return vec2(random_seed1_seed2(number,seed1,seed2),random_seed1_seed2(number,seed3,seed4));\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}