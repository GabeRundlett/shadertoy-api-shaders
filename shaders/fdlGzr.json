{
    "Shader": {
        "info": {
            "date": "1615401748",
            "description": "Learning, training and building my ray maching routine. a mix of FMS_Cat, evvvvil and Flopine code / knowledge.",
            "flags": 0,
            "hasliked": 0,
            "id": "fdlGzr",
            "likes": 1,
            "name": "大龙猫 - SHMUP",
            "published": 3,
            "tags": [
                "shmup",
                "boulette"
            ],
            "usePreview": 0,
            "username": "totetmatt",
            "viewed": 334
        },
        "renderpass": [
            {
                "code": "vec3 pal(float t){\n    return .5+.5*cos(2.*3.1415*(1.*t+vec3(.0,.3,.7)));\n}\n    mat2 r(float a){\n      float c=cos(a),s=sin(a);\n      return mat2(c,-s,s,c);\n      }\nfloat sdf(vec3 p){\n\n  p.x = abs(p.x)-1.1; \n   \n    p.y = abs(p.y)-1.3;  \n   p.zy = p.z>p.y ? p.zy:p.yz;\n    p.z = abs(p.z)-1.5; p.zy = p.z>p.y ? p.zy:p.yz;\n \n      p.z = abs(p.z)-1.5;\n  float h = 10000.;\n  float li = 32.;\n  for(float i=0.;i<li;i++){  \n       float gg =fract(iTime+i/li);\n    float t= .5+log(1.+gg);\n    float po = i*(3.1415*2./li);\n    vec3 o= vec3(sin(po)*t,cos(po)*t,1.);\n     h = min(h, length(p+o)-.05);\n  }\n  \n    return h;\n  }\n\n  \n  vec3 normal(vec3 p){\n     vec2 n= vec2(.001,0.);\n      return normalize(vec3(\n        sdf(p+n.xyy)-sdf(p-n.xyy),\n     sdf(p+n.yxy)-sdf(p-n.yxy),\n     sdf(p+n.yyx)-sdf(p-n.yyx))\n    );\n      \n    }\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5* iResolution.xy)/iResolution.y;\n\n      vec3 ro = vec3(0.,0.,-3.);\n  \n  \n  vec3 cameraW = normalize(vec3(0)-ro);\n  vec3 cameraU = normalize(cross(cameraW,vec3(0.,1.,0.)));\n  vec3 cameraV = normalize(cross(cameraU,cameraW));\n  mat3 cameraMat = mat3(cameraU,cameraV,cameraW);\n  vec3 rd = cameraMat* normalize(vec3(uv,.5)); \n\n\n   \n  vec3 col = vec3(.1)-length(uv)*.1 ;\n  vec3 light = vec3(.2,.5,-1.5);\n  float rl = 1E-2;\n  float isec;\n  vec3 rp = ro+rd*rl;\n\n\n  for(int i=0;i<69;i++) {\n      isec = sdf(rp); \n      rl+=isec;\n      rp = ro+rd*rl;\n      if(isec<1E-2) {\n \n      \n        col = vec3(.4)* max(0.,dot(light,normal(rp)))*pal(length(uv.xy*2.));\n        break;\n      }\n  }\n  \n  \n\n\n    // Output to screen\n    fragColor = vec4(pow(col,vec3(.5)),1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}