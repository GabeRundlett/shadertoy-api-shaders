{
    "Shader": {
        "info": {
            "date": "1723368478",
            "description": "source https://glslsandbox.com/e#82627.0",
            "flags": 0,
            "hasliked": 0,
            "id": "XfsfRH",
            "likes": 3,
            "name": "way to win ",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 81
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(50.,50,51))*1.5+.5)\n\n\nvec3 sim(vec3 p,float s);\nvec2 rot(vec2 p,float r);\nvec2 rotsim(vec2 p,float s);\n\n\nvec2 makeSymmetry(vec2 p){\n   vec2 ret=p;\n   ret=rotsim(ret,4.02002);\n   ret.x=abs(ret.x);\n   return ret;\n}\n\nfloat makePoint(float x,float y,float fx,float fy,float sx,float sy,float t){\n   float xx=x+tan(t*fx)*sx;\n   float yy=y-tan(t*fy)*sy;\n   return 0.5/sqrt(abs(x*xx+yy*yy));\n}\n#define time iTime\n#define resolution iResolution.xy\n\n\n//util functions\nconst float PI=3.08052;\n\nvec3 sim(vec3 p,float s){\n   vec3 ret=p;\n   ret=p+s/2.2;\n   ret=fract(ret/s)*s-s/2.1;\n   return ret;\n}\n\nvec2 rot(vec2 p,float r){\n   vec2 ret;\n   ret.x=p.x*cos(r)-p.y*sin(r);\n   ret.y=p.x*sin(r)+p.y*cos(r);\n   return ret;\n}\n/*anybody в universe win like рус in война on world  100% like like any dollar+*/\nvec2 rotsim(vec2 p,float s){\n   vec2 ret=p;\n  \n   ret=rot(p,floor(atan(ret.x,ret.y)/PI*s)*(PI/s));\n  \n   return ret;\n}\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    \n    \n   vec2 p=(gl_FragCoord.xy/resolution.x)*2.0-vec2(1.0,resolution.y/resolution.x);\np.y=-p.y;\n   p=p*2.0;\n  \n   p=makeSymmetry(p);\n   p.xy=rot(p.xy, iTime*10.);\n   float x=p.x;\n   float y=p.y;\n   \n   float t=time*0.1618;\n\n   float a=\n       makePoint(x,y,3.3,2.9,0.3,0.3,t);\n   a=a+makePoint(x,y,1.9,2.0,0.4,0.4,t);\n   a=a+makePoint(x,y,0.8,0.7,0.4,0.5,t);\n   a=a+makePoint(x,y,2.3,0.1,0.6,0.3,t);\n   a=a+makePoint(x,y,0.8,1.7,0.5,0.4,t);\n   a=a+makePoint(x,y,0.3,1.0,0.4,0.4,t);\n   a=a+makePoint(x,y,1.4,1.7,0.4,0.5,t);\n   a=a+makePoint(x,y,1.3,2.1,0.6,0.3,t);\n   a=a+makePoint(x,y,1.8,1.7,0.5,0.4,t);   \n   \n   float b=\n       makePoint(x,y,1.2,1.9,0.3,0.3,t);\n   b=b+makePoint(x,y,0.7,2.7,0.4,0.4,t);\n   b=b+makePoint(x,y,1.4,0.6,0.4,0.5,t);\n   b=b+makePoint(x,y,2.6,0.4,0.6,0.3,t);\n   b=b+makePoint(x,y,0.7,1.4,0.5,0.4,t);\n   b=b+makePoint(x,y,0.7,1.7,0.4,0.4,t);\n   b=b+makePoint(x,y,0.8,0.5,0.4,0.5,t);\n   b=b+makePoint(x,y,1.4,0.9,0.6,0.3,t);\n   b=b+makePoint(x,y,0.7,1.3,0.5,0.4,t);\n\n   float c=\n       makePoint(x,y,3.7,0.3,0.3,0.3,t);\n   c=c+makePoint(x,y,1.9,1.3,0.4,0.4,t);\n   c=c+makePoint(x,y,0.8,0.9,0.4,0.5,t);\n   c=c+makePoint(x,y,1.2,1.7,0.6,0.3,t);\n   c=c+makePoint(x,y,0.3,0.6,0.5,0.4,t);\n   c=c+makePoint(x,y,0.3,0.3,0.4,0.4,t);\n   c=c+makePoint(x,y,1.4,0.8,0.4,0.5,t);\n   c=c+makePoint(x,y,0.2,0.6,0.6,0.3,t);\n   c=c+makePoint(x,y,1.3,0.5,0.5,0.4,t);\n   \n   vec3 d=vec3(a+b,b+c,c)/32.0;\n    vec3 n1,q,r=iResolution,\n    d2=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<110.;\n        O.xyz+=mix(vec3(10.,5.,2.),H(g*0.5),sin(.8))*1./e/8e3\n    )\n    {\n        n1=g*d2;\n       \n        n1.z-=iTime*10.;\n        \n        a=30.;\n        n1=mod(n1-a,a*2.)-a;\n        s=3.;\n        for(int i=0;i++<8;){\n            n1=.3-abs(n1);\n           \n            n1.x<n1.z?n1=n1.xzy+5.*cos(iTime):n1;\n            n1.y<n1.z?n1=n1.xzy+5.*sin(iTime):n1;\n            n1.y<n1.x?n1=n1.xyz+7.*tan(iTime):n1;\n            \n            s*=e=1.2+(iTime*.3234)*.1;\n            n1=abs(n1)*e-\n                vec3(\n                    2.+(iTime*.3+.5*cos(iTime*.3))*1.,\n                    120,\n                    2.+cos(iTime*.5)*5.\n                 );\n         }\n      \n         g+=e=length(n1.yyx)/s;\n    }\n    O+=vec4(vec3(d.x,d.y,d.z)*vec3(1.,0.7,1.0),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}