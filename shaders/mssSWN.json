{
    "Shader": {
        "info": {
            "date": "1668951429",
            "description": "This is a simple demo about how to use algebra matrix rotation with sine and cosine functions. \nYou can see each step is commented.",
            "flags": 0,
            "hasliked": 0,
            "id": "mssSWN",
            "likes": 3,
            "name": "math - rotate uv 001",
            "published": 3,
            "tags": [
                "example",
                "simple",
                "math",
                "uv",
                "rotation",
                "algebra",
                "matrixrotation"
            ],
            "usePreview": 0,
            "username": "catafest",
            "viewed": 392
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //set the uv to a proper size on the center of screen \n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / min(iResolution.x, iResolution.y);\n    // set rotation angle value\n    float rot = radians(0.0);\n    // this set rotation by time and \n    rot = iTime;\n    // algebra formula for rotation by matrix , https://en.wikipedia.org/wiki/Rotation_matrix\n    mat2 m = mat2(cos(rot), -sin(rot), sin(rot), cos(rot));\n    // rotation of uv with matrix algebra formula where is set the rotation angle \n    uv = m* uv;\n    // define float by function module from 1.0 and uv.x - uv.y\n    float d = mod(uv.x - uv.y, 1.0);\n    // color for fragColor is value of fload d by module function\n    vec4 col = vec4(vec3(d), 1.0);\n    fragColor = vec4(col);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}