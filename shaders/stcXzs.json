{
    "Shader": {
        "info": {
            "date": "1639585204",
            "description": "reference:\nhttps://www.youtube.com/watch?v=lVYksrvNe28\n",
            "flags": 0,
            "hasliked": 0,
            "id": "stcXzs",
            "likes": 19,
            "name": "retro cityscape by graphtoy",
            "published": 3,
            "tags": [
                "graphtoy"
            ],
            "usePreview": 0,
            "username": "yasuo",
            "viewed": 392
        },
        "renderpass": [
            {
                "code": "#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define B(p,s) max(abs(p.x)-s.x,abs(p.y)-s.y)\n\nfloat hash(vec2 p){\n    vec2 rand = fract(sin(p*123.456)*567.89);\n    rand += dot(rand,rand*34.56);\n    return fract(rand.x*rand.y);\n}\n\nfloat starLayer(vec2 p){\n    p.x += iTime*0.1;\n    p*=12.0;\n    vec2 uv = fract(p)-0.5;\n    vec2 id = floor(p);\n    float n = hash(id);\n    \n    vec2 size = vec2(0.0);\n    float x = 0.0;\n    if(n<0.1){\n        size = vec2(0.025,0.2);\n        uv.x-=0.2;\n        uv.y-=0.2;\n    } else if(n>=0.1 && n<0.4){\n        size = vec2(0.02,0.15);\n        uv.x+=0.3;\n        uv.y+=0.2;\n    }\n    return min(B(uv,size),B(uv,vec2(size.y,size.x)));\n}\n\nfloat buildingWindowBase(vec2 p, float scale){\n    p*=scale;\n    vec2 uv = fract(p)-0.5;\n    vec2 id = floor(p);\n    vec2 size = vec2(0.25);\n    return B(uv,size);\n}\n\nfloat buildingWindow(vec2 p, float scale){\n    p*=scale;\n    vec2 uv = fract(p)-0.5;\n    vec2 id = floor(p);\n    float n = hash(id);\n    \n    vec2 size = vec2(0.0);\n    if(n<0.5){\n        size = vec2(0.25);\n    }\n    return B(uv,size);\n}\n\nvec3 buildingMaterial(vec2 p, vec3 col, float scale){\n    float d = buildingWindowBase(p,scale);\n    col = mix(col,vec3(0.3),S(d,0.0));\n    d = buildingWindow(p,scale);\n    col = mix(col,vec3(0.8),S(d,0.0));\n    return col;\n}\n\nfloat birds(vec2 p){\n    p.x+=iTime*0.2;\n    p.x = mod(p.x,0.8)-0.4;\n    p.y-=0.45;\n    float d = B(p,vec2(0.04,0.006));\n    p.x+=0.01;\n    p.y-=0.01+sin(iTime*5.0)*0.006;\n    float d2 = B(p,vec2(0.02,0.006));\n    return min(d,d2);\n}\n\nfloat cloud(vec2 p){\n    float d = B(p,vec2(0.06,0.003));\n    p.y+=0.011;\n    d = min(B(p,vec2(0.1,0.003)),d);\n    p.y+=0.011;\n    d = min(B(p,vec2(0.28,0.003)),d);\n    p.y+=0.011;\n    p.x = abs(p.x);\n    p.x-=0.13;\n    d = min(B(p,vec2(0.09,0.003)),d);\n    p.y+=0.011;\n    d = min(B(p,vec2(0.05,0.003)),d);\n    return d;\n}\n\nvec3 car(vec2 p, vec3 col){\n    p*=7.0;\n    vec2 prevP = p;\n    \n    p = prevP;\n    p.y+=0.13;\n    p.y*=7.0;\n    float d = length(p)-0.4;\n    col = mix(col,vec3(0.3),S(d,-0.2));    \n    \n    p = prevP;\n    d = B(p,vec2(0.3,0.08));\n    float a = radians(45.);\n    p = abs(p);\n    p-=vec2(0.3,0.05);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.15;\n    p.y+=0.05;\n    d = max(-(length(p)-0.09),d);    \n    \n    col = mix(col,vec3(0.7,0.6,0.1),S(d,0.0));\n    \n    p = prevP;\n    p.y-=0.16;\n    d = B(p,vec2(0.19,0.08));\n    a = radians(20.);\n    p.x = abs(p.x);\n    p.x-=0.14;\n    p.y-=0.05;\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    col = mix(col,vec3(0.7,0.6,0.1),S(d,0.0));\n    \n    p = prevP;\n    p.y-=0.16;\n    d = B(p,vec2(0.15,0.06));\n    a = radians(20.);\n    p.x = abs(p.x);\n    p.x-=0.11;\n    p.y-=0.06;\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    p = prevP;\n    d = max(-(abs(p.x)-0.012),d);\n    col = mix(col,vec3(0.6,0.8,0.9),S(d,0.0));\n    \n    p = prevP;\n    p.x = abs(p.x)-0.15;\n    p.y+=0.05;\n    d = length(p)-0.08;\n    col = mix(col,vec3(0.),S(d,0.0));\n    d = length(p)-0.06;\n    col = mix(col,vec3(0.7),S(d,0.0));\n    \n    return col;\n}\n\nvec3 missile(vec2 p, vec3 col, vec3 col2){\n    vec2 prevP = p;\n    p = prevP;\n    p -= vec2(0.06,-0.02);\n    float d = B(p,vec2(0.07,0.015));\n    d = min(length(p-vec2(-0.07,0.0))-0.015,d);\n    \n    p.x -= 0.03;\n    p.y = abs(p.y);\n    p.y-=0.02;\n    float d2 = B(p,vec2(0.03,0.02));\n    float a = radians(-40.0);\n    d2 = max(-dot(p,vec2(cos(a),sin(a))),d2);\n    d = min(d2,d);\n    col = mix(col,col2,S(d,0.0));\n    return col;\n}\n\nvec3 chopper(vec2 p, vec3 col){\n    p*=Rot(radians(-10.0));\n    p*=1.7;\n    p.y+=sin(iTime*3.0)*0.02;\n    vec2 prevP = p;\n    float d = B(p,vec2(0.22,0.1));\n    float a = radians(-70.);\n    p.y-=0.09;\n    d = max(-dot(p,vec2(cos(a),sin(a))),d);\n    p = prevP;\n    a = radians(70.);\n    p.y+=0.13;\n    d = max(-dot(p,vec2(cos(a),sin(a))),d);\n    p = prevP;\n    a = radians(45.);\n    p.x-=0.26;\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    p = prevP;\n    a = radians(-50.);\n    p.x-=0.3;\n    p.y-=0.06;\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    \n    p = prevP;\n    p.x-=0.35;\n    p.y-=0.015;\n    d = min(B(p,vec2(0.15,0.025)),d);\n    \n    p = prevP;\n    p.y-=0.015;\n    p.y = abs(p.y);\n    p.x-=0.49;\n    p.y-=0.06;\n    \n    p*=Rot(radians(10.0));\n    a = radians(-10.);\n    \n    d = min(max(-dot(p-vec2(-0.01,0.0),vec2(cos(a),sin(a))),B(p,vec2(0.02,0.05))),d);\n    \n    col = mix(col,vec3(0.3,0.5,0.3),S(d,0.0));\n    \n    p = prevP;\n    p.x+=0.08;\n    p.y-=0.05;\n    d = B(p,vec2(0.1,0.05));\n    a = radians(-70.);\n    d = max(-dot(p,vec2(cos(a),sin(a))),d);\n    \n    a = radians(-70.);\n    d = max(dot(p-vec2(0.00,-0.05),vec2(cos(a),sin(a))),d);\n    \n    col = mix(col,vec3(0.6,0.8,0.9),S(d,0.0));\n    \n    p = prevP;\n    p.x = abs(p.x)-0.06;\n    p.y+=0.13;\n    d = B(p,vec2(0.006,0.03));\n    p.y+=0.03;\n    d = min(B(p,vec2(0.07,0.006)),d);\n    col = mix(col,vec3(0.3,0.5,0.5),S(d,0.0));\n    \n    p = prevP;\n    p.x-=0.1;\n    p.y-=0.14;\n    d = B(p,vec2(0.01,0.05));\n    p.y-=0.02;\n    d = min(B(p,vec2(0.3+sin(iTime*10.0)*0.25,0.01)),d);\n    \n    col = mix(col,vec3(0.3,0.5,0.5),S(d,0.0));\n    \n    p = prevP;\n    col = missile(p-vec2(0.01,-0.01),col,vec3(0.2,0.4,0.4)*0.3);\n    col = missile(p,col,vec3(0.2,0.4,0.4));\n    \n    \n    return col;\n}\n\nvec3 streetLight(vec2 p, vec3 col){\n    p*=2.0;\n    vec2 prevP = p;\n    float d = B(p,vec2(0.005,0.1));\n    col = mix(col,vec3(0.7,0.3,0.2),S(d,0.0));\n    \n    p*=Rot(radians(45.));\n    p.x+=0.068;\n    p.y-=0.115;\n    d = B(p,vec2(0.005,0.05));\n    col = mix(col,vec3(0.7,0.3,0.2),S(d,0.0));\n    \n    p = prevP;\n    \n    p*=Rot(radians(45.));\n    p.x+=0.058;\n    p.y-=0.115;\n    d = B(p,vec2(0.005,0.025));\n    col = mix(col,vec3(1.0),S(d,0.0));\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 prevUV = uv;\n    \n    vec3 col = mix(vec3(0.5,0.3,0.7),vec3(0.3,0.3,0.5),uv.y+0.3);\n    \n    float t = iTime;\n    \n    // The following code should be `sqrt(8^2-x^2)`, but it does not work for me, so I used the normal circle distance function.\n    float d = length(uv-vec2(0.0,-0.15))-0.6;\n    uv.y-=iTime*0.05;\n    uv.y = mod(uv.y,0.05)-0.025;\n    d = max(-B(uv,vec2(10.0,0.01)),d);\n    col = mix(col,mix(vec3(0.7,0.5,0.6),vec3(0.7,0.1,0.5),prevUV.y+0.2),S(d,0.0));    \n    \n    // star\n    uv = prevUV;\n    d = starLayer(uv);\n    col = mix(col,vec3(0.6,0.4,0.5),S(max(-uv.y+0.25,d),0.0));  \n    \n    // clouds\n    uv = prevUV;\n    uv.x-=iTime*0.05;\n    uv.x = mod(uv.x,1.6)-0.8;\n    uv.y-=0.45;\n    d = cloud(uv);\n    col = mix(col,vec3(0.6,0.2,0.3),S(d,0.0)); \n    \n    // birds\n    uv = prevUV;\n    d = birds(uv);\n    col = mix(col,vec3(0.0),S(d,0.0)); \n    \n    // buildings1\n    uv*=6.0;\n    d = -0.7+1.5*sin(floor((uv.x*2.5)+t)*4321.);\n    uv.y += d;\n    col = mix(col,vec3(0.15),S(uv.y,0.0));\n    \n    // buildings2\n    uv = prevUV;\n    uv*=6.0;\n    d = -0.7+1.*sin(floor((uv.x*1.5)+(t*1.5))*2121.);\n    uv.y += d;\n    uv.x+=iTime+0.22;\n    col = mix(col,buildingMaterial(uv,vec3(0.2),8.5),S(uv.y,0.0));\n    \n    // buildings3\n    uv = prevUV;\n    uv.x+=iTime*0.3;\n    uv*=1.2;\n    uv.y+=0.1;\n    uv.x = mod(uv.x,0.6)-0.3;\n    d = B(uv,vec2(0.1,0.16));\n    float a = radians(30.0);\n    uv.x = abs(uv.x);\n    uv.y-=0.3;\n    d = max(dot(uv,vec2(cos(a),sin(a))),d);\n    col = mix(col,buildingMaterial(uv,vec3(0.05),60.),S(d,0.0));\n    uv.x = abs(uv.x)-0.05;\n    uv.y+=0.13;\n    d = B(uv,vec2(0.01,0.01));\n    col = mix(col,vec3(0.5,0.0,0.0),S(d,0.0));\n\n    uv = prevUV;\n    uv.x+=iTime*0.3;\n    uv*=1.2;\n    uv.y+=0.1;\n    uv.x-=0.3;\n    uv.x = mod(uv.x,0.6)-0.3;\n    d = B(uv,vec2(0.1,0.22));\n    uv.x = abs(uv.x);\n    uv.y-=0.36;\n    d = max(dot(uv,vec2(cos(a),sin(a))),d);\n    col = mix(col,buildingMaterial(uv,vec3(0.05),80.),S(d,0.0));\n    \n    \n    // road\n    uv = prevUV;\n    col = mix(col,vec3(0.3),S(uv.y+0.2,0.0));\n    col = mix(col,vec3(0.4),S(uv.y+0.25,0.0));\n    col = mix(col,vec3(0.5),S(uv.y+0.45,0.0));\n    \n    uv.x+=iTime*0.3;\n    uv.x = mod(uv.x,0.4)-0.2;\n    uv.y+=0.34;\n    d = B(uv,vec2(0.1,0.002));\n    col = mix(col,vec3(1.0),S(d,0.0));\n    \n    // street rights\n    uv = prevUV;\n    uv.x+=iTime*0.28;\n    uv.x = mod(uv.x,0.4)-0.2;\n    uv.y+=0.18;\n    col = streetLight(uv,col);\n    \n    // cars\n    uv = prevUV;\n    uv.x+=iTime*0.4;\n    uv.x = mod(uv.x,0.15)-0.075;\n    uv.y+=0.28;\n    col = car(uv,col);\n    \n    uv = prevUV;\n    uv.x-=iTime*0.2-0.075;\n    uv.x = mod(uv.x,0.15)-0.075;\n    uv.y+=0.4;\n    col = car(uv,col);\n    \n    // street rights\n    uv = prevUV;\n    uv.x+=iTime*0.28;\n    uv.x = mod(uv.x,0.4)-0.2;\n    uv.y+=0.43;\n    col = streetLight(uv,col);    \n    \n    // chopper\n    uv = prevUV;\n    uv.x+=iTime*0.6-0.6;\n    uv.x = mod(uv.x,2.6)-1.3;\n    uv.y-=0.2;\n    col = chopper(uv,col);\n    \n    // test codes\n    uv = prevUV;\n    //col = streetLight(uv,col);\n    \n    // Output to screen\n    //fragColor = vec4(col,1.0);\n    fragColor = vec4(col, 1.0)+(hash(uv*iTime*0.1))*0.13;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}