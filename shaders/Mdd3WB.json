{
    "Shader": {
        "info": {
            "date": "1452064051",
            "description": "Drive with mouse.   Clear screen with rewind icon.\nbufA::1 #def sticky   allows to change the consistentness ",
            "flags": 32,
            "hasliked": 0,
            "id": "Mdd3WB",
            "likes": 8,
            "name": "snake3",
            "published": 3,
            "tags": [
                "snake"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 828
        },
        "renderpass": [
            {
                "code": "#define N 10. // N*N particles\n#define R iResolution.xy\n#define t iTime\n#define id(v)    ( floor(v.x) + N*floor(v.y) )\n#define point(P) texture(iChannel0,(P+.5)/R ).xy\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O -= O;\n    \n    for (float j=0.; j<N; j++)\n        for (float i=0.; i<N; i++) {\n            vec2 p = ( U - point(vec2(i,j))  )/R.y;\n            float id = id(vec2(i,j)), a = id/(N*N);\n            p *= rot(id+t);\n            O += (1.-O.a) * smoothstep(.1,.08,length(p))\n                          * mix(texture(iChannel1,4.*p),texture(iChannel2,4.*p),.5+.5*cos(6.28*16.*a));\n\t       // O += 1e-5/dot(p,p);\n        }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 48,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            },
            {
                "code": "#define sticky 0.1  // the closer to 1 the more consistant the body\n\n#define N 10. // N*N particles\n#define R iResolution.xy\n#define t iTime\n#define id(v)    ( floor(v.x) + N*floor(v.y) )\n#define slot(i)  ( vec2(mod(i,N), floor((i)/N))  )\n#define point(P) texture(iChannel0, (P+.5)/R ).xy\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    float i = id(U); // we should only consider u.x,u.y < N , but no harm.\n\tvec2 p = point(slot(i)), q = point(slot(i+1.));\n    if (i==N*N) {\n        q = iMouse.xy;    \n        if (length(q)<1.) q = R*(1.+.8*cos(t*vec2(1.8,1))+.4*cos(t*vec2(4,5)))/2.; // fake mouse\n    }\n    \n    if (length(p)==0.)  // initialization\n       p = i/(N*N)*R+.5;\n    else\n\t\tp += sticky*(q-p); // attracted by previous point\n\n    O.xy = p;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}