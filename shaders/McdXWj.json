{
    "Shader": {
        "info": {
            "date": "1714506944",
            "description": "Click to add cells,\nPress R to fill board.",
            "flags": 48,
            "hasliked": 0,
            "id": "McdXWj",
            "likes": 3,
            "name": "Berry's Game of Life",
            "published": 3,
            "tags": [
                "simulation",
                "life"
            ],
            "usePreview": 0,
            "username": "BerryArray",
            "viewed": 101
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col = vec3(0.0);\n    \n    if (distance(fragCoord, iMouse.xy) < 10.0 && iMouse.z > 0.5) {\n        col = vec3(step(texture(iChannel1, uv).r,0.5));\n    }\n    \n    if (texelFetch(iChannel2, ivec2(82,0),0).x == 1.0) {\n        col = vec3(step(texture(iChannel1, uv).r,0.5));\n    }\n\n    col += texture(iChannel0, uv).rgb;\n  \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 color;\n    float myself = texture(iChannel0, fragCoord/iResolution.xy).r;\n    \n    float total = \n    texture(iChannel0, (fragCoord - vec2(0.0, -1.0))/iResolution.xy).r\n    + texture(iChannel0, (fragCoord - vec2(1.0, -1.0))/iResolution.xy).r\n    + texture(iChannel0, (fragCoord - vec2(1.0, 0.0))/iResolution.xy).r\n    + texture(iChannel0, (fragCoord - vec2(1.0, 1.0))/iResolution.xy).r\n    + texture(iChannel0, (fragCoord - vec2(0.0, 1.0))/iResolution.xy).r\n    + texture(iChannel0, (fragCoord - vec2(-1.0, 1.0))/iResolution.xy).r\n    + texture(iChannel0, (fragCoord - vec2(-1.0, 0.0))/iResolution.xy).r\n    + texture(iChannel0, (fragCoord - vec2(-1.0, -1.0))/iResolution.xy).r;\n    \n    \n    \n    if (myself == 1.0) {\n        if (total >= 2.0 && total <= 3.0) {\n            color = vec3(1.0);\n        }\n    }\n    else {\n        if (total == 3.0) {\n            color = vec3(1.0);\n        }\n    }\n    \n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}