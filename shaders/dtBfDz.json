{
    "Shader": {
        "info": {
            "date": "1693930738",
            "description": "Just a quick mod on jonobr1's circle shader to make it look like a button.",
            "flags": 0,
            "hasliked": 0,
            "id": "dtBfDz",
            "likes": 5,
            "name": "Circular Button.",
            "published": 3,
            "tags": [
                "circle",
                "button"
            ],
            "usePreview": 0,
            "username": "ianbryant",
            "viewed": 181
        },
        "renderpass": [
            {
                "code": "/**\n   Original circle shader author:\n * @author jonobr1 / http://jonobr1.com/\n */\n\n/**\n * Convert r, g, b to normalized vec3\n */\nvec3 rgb(float r, float g, float b) {\n\treturn vec3(r / 255.0, g / 255.0, b / 255.0);\n}\n\n/**\n * Draw a circle at vec2 `pos` with radius `rad` and\n * color `color`.\n */\nvec4 circle(vec2 uv, vec2 pos, float rad, vec3 color) {\n\tfloat d = length(pos - uv) - rad;\n\tfloat t = clamp(d, 0.0, 1.0);\n\treturn vec4(d>-0.1*rad ? color+dot(normalize(uv-pos),vec2(-1,1))*vec3(0.1,0.1,0.1) : color, 1.0 - t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 uv = fragCoord.xy;\n\tvec2 center = iResolution.xy * 0.5;\n\tfloat radius = 0.25 * iResolution.y;\n\n    // Background layer\n\tvec4 layer1 = vec4(rgb(210.0, 222.0, 228.0), 1.0);\n\t\n\t// Circle\n\tvec3 red = rgb(225.0, 95.0, 60.0);\n\tvec4 layer2 = circle(uv, center, radius, red);\n\t\n\t// Blend the two\n\tfragColor = mix(layer1, layer2, layer2.a);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}