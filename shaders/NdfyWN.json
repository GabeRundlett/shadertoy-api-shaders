{
    "Shader": {
        "info": {
            "date": "1642070771",
            "description": "Trippy thing",
            "flags": 0,
            "hasliked": 0,
            "id": "NdfyWN",
            "likes": 5,
            "name": "Sponge Cells",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "fx",
                "lsd"
            ],
            "usePreview": 0,
            "username": "ersh",
            "viewed": 267
        },
        "renderpass": [
            {
                "code": "mat2 rotate2d(float a) {\n  return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  float size = iResolution.x / (25.0 + pow(sin(iTime/5.5),9.)*10.);\n  float angle = iTime / 10.0;\n  float kx = sin(iTime/1.)/(iResolution.x*1.3*(1.-pow(sin(iTime/15.),5.)));\n  float ky = pow(sin(iTime/1.4),3.)/(iResolution.x*1.3*(1.-pow(sin(iTime/22.),7.)));\n  fragCoord = fragCoord.xy - iResolution.xy / 2.0;\n  float stretch_x = fragCoord.x - iResolution.x * 1.5 / 2.0 * sin(iTime/11.);\n  float stretch_y = fragCoord.y - iResolution.y * 1.5 / 2.0 * sin(iTime/19.);\n  vec2 p = fragCoord.xy * rotate2d(angle + kx*stretch_x - ky*stretch_y);\n  vec2 pmod = vec2(mod(p.x, size * 2.0), mod(p.y, size * 2.0));\n  float k = max(pmod.x, pmod.y)/size/2.;\n  fragColor = vec4(vec3(k), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}