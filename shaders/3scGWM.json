{
    "Shader": {
        "info": {
            "date": "1568624813",
            "description": "Just my go of following this Truchet tutorial https://www.youtube.com/watch?v=2R7h76GoIJM&t=1990s , then adding parallax layers and color. This is my first shader. \n\nVersion 2, with perpendicular junctions: https://www.shadertoy.com/view/3ddGW7",
            "flags": 0,
            "hasliked": 0,
            "id": "3scGWM",
            "likes": 26,
            "name": "Parallax Truchet",
            "published": 3,
            "tags": [
                "2d",
                "lines",
                "colorful",
                "parallax",
                "truchet",
                "maze",
                "pipes"
            ],
            "usePreview": 0,
            "username": "Jordan",
            "viewed": 1114
        },
        "renderpass": [
            {
                "code": "// FYI: LEFT:37  UP:38  RIGHT:39  DOWN:40   PAGEUP:33  PAGEDOWN:34  END : 35  HOME: 3\n\nfloat rand(vec2 p)\n{\n    p = fract(p*vec2(234.51,124.89));\n    p += dot(p,p+54.23);\n    p = fract(p*vec2(121.80,456.12));\n    p += dot(p,p+25.12);\n    return fract(p.x);\n}\n\nfloat width = 0.2;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    \n    \n    vec2 pos = 5.*vec2(sin(iTime*0.2)+0.1*iTime,cos(iTime*0.2)+0.1*iTime);\n    vec3 col = vec3(0.);//0.5 + 0.5*cos(iTime+(fragCoord/iResolution.xy).xyx+vec3(0,2,4));\n    \n    for(float i=5.;i<10.;i+=1.)\n    {\t\n        vec2 uv = pos+((20.-1.8*i)*(fragCoord-.5*iResolution.xy)/iResolution.y);\n        vec2 gv = (fract(uv)-0.5);\n        vec2 id = floor(uv);\n        vec3 col2 = (0.5 + 0.2*sin(iTime+(i/2.)+0.3*uv.xyx+vec3(0,2,4))*sin(iTime+(i/2.)+0.3*uv.xyx+vec3(0,2,4)) + 0.5*cos(iTime+(i/2.)+0.3*uv.xyx+vec3(0,2,4)))*(i+1.)/11.;\n\n        gv.x *= (float(rand(id*i)>0.5)-0.5)*2.;\n\n        float mask1 = smoothstep(-0.01,0.01,width-abs(gv.x+gv.y-0.5*sign(gv.x+gv.y+0.01)));\n\t\tfloat mask2 = smoothstep(-0.2,0.2,width-abs(gv.x+gv.y-0.5*sign(gv.x+gv.y+0.01)));\n\n        // Output to screen\n        col = - 0.3*mask2 + 0.5*(col2.r*col2.r+col2.g*col2.g+col2.b*col2.b + col2*col2)*col2*mask1 + col*(1.-mask1);\n    }\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}