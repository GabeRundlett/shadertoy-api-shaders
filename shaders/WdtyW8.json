{
    "Shader": {
        "info": {
            "date": "1600844463",
            "description": "Jittered super sampling\nUse 1 to 9 on keyboard to set the super-sampling level - The default is 4 (16 samples/pixel).\nHold left Mouse button to toggle animation.\nSpace-bar toggles on/off jittered sampling.",
            "flags": 48,
            "hasliked": 0,
            "id": "WdtyW8",
            "likes": 9,
            "name": "Jittered Super Sampling",
            "published": 3,
            "tags": [
                "supersampling",
                "jitter"
            ],
            "usePreview": 0,
            "username": "GregRostami",
            "viewed": 609
        },
        "renderpass": [
            {
                "code": "// I borrowed the raytracer that Fabrice had created (for higher precision in the checker sampling).\n\n// Jittered super sampling\n// Use 1 to 9 on keyboard to set the Anti-Aliasing value (The default is 4 (16 samples/pixel))\n// Hold left Mouse button to toggle animation.\n// Space-bar toggles on/off jittered sampling.\n\nbool T (int c){return texelFetch(iChannel1,ivec2(c,2),0).x > 0.;}\n\nvoid lookAt(inout vec3 ro, inout vec3 rd, vec3 tg) {\n    vec3 ot = normalize(tg - ro),\n         up = vec3(0, 1, 0),\n         rr = normalize(cross(ot, up));\n         up = cross(rr, ot);\n    rd = mat3(rr, up, ot) * rd;\n}\n\nfloat checker(vec3 p, float t) {\n    p -= iMouse.z > 0. ? 0. : .4*iTime;\n    p = floor(p);    return float( mod(p.x + p.z, 2.) > 0. ); // base checkers\n}\n\nvec4 fC( vec2 u ) {\n    vec3 R = iResolution,\n         p = vec3(0, 3.5, 15),           // setup camera\n         D = normalize( vec3( ( u+u - R.xy ) / R.y, 1) ); \n         lookAt(p, D, vec3(0));                                   // --- true ray-tracing\n    float t = p.y  / D.y; p += t * D; \n\n    return vec4( vec3(checker(p, t)), 0 ); // return color & texture at hit point\n}\n\n// Do jittered super sampling \nvoid mainImage( out vec4 o, vec2 u )\n{\n    o *= 0.;\n    int AA = int(texelFetch(iChannel0,ivec2(0,0),0).r),\n        x = 0, y;\n        \n    vec2 O,N;\n    \n    float A = float (AA);\n    \n    for (;x++<AA;) for (y=0; y++<AA;)\n        O = u + vec2(x,y)/A - .5,\n        N = T(32) ? vec2(0) : fract(sin((O)*mat2(127.1,311.7, 269.5,183.3)) * fract(iTime)*15467.289) / A ,\n        \n        o += min ( fC(O+N), 1.0 );\n        \n\to = pow (o/(A*A),vec4(.455));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define k(a) ( texelFetch(iChannel3,ivec2(a,1),0).x > 0. )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    \n    if ( iFrame == 0 ) { O = vec4(4); return; }\n    \n    if (U.y>1.) return;\n    O = texelFetch(iChannel0,ivec2(U),0);   \n    \n \tint x = int(U.x);  \n    if ( x == 0 ) {\n        for (int i=1; i<10; i++)\n            if (k(48+i)) O.r = float(i);  \n     }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}