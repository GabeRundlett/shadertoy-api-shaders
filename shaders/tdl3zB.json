{
    "Shader": {
        "info": {
            "date": "1547169382",
            "description": "test",
            "flags": 0,
            "hasliked": 0,
            "id": "tdl3zB",
            "likes": 0,
            "name": "punya johny",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "FrostHard",
            "viewed": 328
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592654\n#define TWO_PI 6.28318530718\nfloat Band(float t, float start, float end, float blur){\n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    \n    return step1*step2;\n}\n\nfloat Rect(vec2 uv, float left, float right, float bottom, float top, float blur){\n\tfloat band1 = Band(uv.x, left, right, blur);\n    float band2 = Band(uv.y, bottom, top, blur);\n    return band1*band2;\n}    \n\nfloat Circle(vec2 uv, vec2 p, float r, float blur)\n{\n    float d = length(uv-p);\n    float c = smoothstep(r, r-blur, d);\n    return c;\n}\n\n\nfloat Triangle(vec2 uv, float size)\n{\n    float N = 3.0;\n    \n    float a = atan(uv.x,uv.y)+PI;\n  \tfloat r = TWO_PI/N;\n    float d = cos(floor(.5+a/r)*r-a)*length(uv)+size;\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    float canvas;\n    vec3 col;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //Fill circle\n    uv.x += .45;\n    uv.y -= .2;\n    float circ_fill = Circle(uv, vec2(0.), .17, .01);\n    canvas += circ_fill; \n    \n    //No fill circle\n    uv.y += .4;\n    float circ_no_fill = Circle(uv, vec2(0.), .17, .01) - Circle(uv, vec2(0.), .16, .01);\n    canvas += circ_no_fill;\n    uv.x -= .45; //Reset position\n    uv.y -= .2;\n    \n    //Fill triangle\n    uv.x -= .45;\n    uv.y -= .154;\n    float tri_fill = Triangle(uv, .31);\n    vec3 tri_fill_vec3 = vec3(1.0-smoothstep(.4,.405,tri_fill), .1, .1);\n    \n    //No fill triangle\n    uv.y += .40;\n    float tri_no_fill = Triangle(uv, .31);\n    float tri_no_fill2 = Triangle(uv, .32);\n    vec3 tri_no_fill_vec3 = vec3(1.0-smoothstep(.4,.405,tri_no_fill), .1, .1) \n    - vec3(1.0-smoothstep(.4,.405,tri_no_fill2), .1, .1);\n    uv.x += .45; //Reset position\n    uv.y -= .246;\n    \n    //Fill rectangle\n    uv.y -= .2;\n    float rect_fill = Rect(uv, -.15, .15, -.15, .15, .001);\n    canvas += rect_fill;\n    \n    //No fill rectangle\n    uv.y += .4;\n    float rect_no_fill = Rect(uv, -.15, .15, -.15, .15, .001) - Rect(uv, -.14, .14, -.14, .14, .001);\n    canvas += rect_no_fill;\n    col = vec3(1., 0., 0.)*canvas + tri_fill_vec3 + tri_no_fill_vec3;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}