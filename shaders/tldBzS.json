{
    "Shader": {
        "info": {
            "date": "1612991061",
            "description": "Fractal.",
            "flags": 0,
            "hasliked": 0,
            "id": "tldBzS",
            "likes": 5,
            "name": "Fractal Ball",
            "published": 3,
            "tags": [
                "fractal",
                "ball",
                "kifs"
            ],
            "usePreview": 0,
            "username": "oneshade",
            "viewed": 157
        },
        "renderpass": [
            {
                "code": "float mapScene(in vec3 p) {\n    float c = cos(1.875), s = sin(1.875);\n    float d = 1000000.0;\n    float size = 1.0;\n    for (int i=0; i < 10; i++) {\n        d = min(d, max(abs(p.x), max(abs(p.y), abs(p.z))) - size);\n        float c1 = cos(s), s1 = sin(s);\n        float c2 = cos(c), s2 = sin(c);\n        p.xz *= mat2(c1, -s1, s1, c1);\n        p.yz *= mat2(c2, -s2, s2, c2);\n        p = abs(p) - 0.3;\n        size *= 0.75;\n    }\n\n    return d - 0.1;\n}\n\nvec3 getNormal(in vec3 p) {\n    vec3 e = vec3(0.001, 0.0, 0.0);\n    return normalize(vec3(mapScene(p + e.xyy) - mapScene(p - e.xyy),\n                          mapScene(p + e.yxy) - mapScene(p - e.yxy),\n                          mapScene(p + e.yyx) - mapScene(p - e.yyx)));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 screenCenter = 0.5 * iResolution.xy;\n\n    vec2 mouse = vec2(iTime);//(iMouse.xy - screenCenter) / iResolution.y * 6.28;\n    vec2 uv = (fragCoord.xy - screenCenter) / iResolution.y;\n    fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\n    vec3 ro = vec3(0.0, 0.0, 10.0);\n    vec3 rd = normalize(vec3(uv, -1.0));\n\n    float cy = cos(mouse.x), sy = sin(mouse.x);\n    float cp = cos(mouse.y), sp = sin(mouse.y);\n\n    float t = 0.0;\n    for (float iters=0.0; iters < 150.0; iters++) {\n        vec3 p = ro + rd * t;\n\n        p.yz *= mat2(cp, -sp, sp, cp);\n        p.xz *= mat2(cy, -sy, sy, cy);\n\n        float d = mapScene(p / 1.5) * 1.5;\n        if (d < 0.001) {\n            vec3 n = getNormal(p / 1.5) * 1.2;\n            vec3 l = vec3(-0.58, 0.58, 0.58);\n\n            n.xz *= mat2(cy, sy, -sy, cy);\n            n.yz *= mat2(cp, sp, -sp, cp);\n\n            fragColor.rgb += max(0.2, dot(n, l));\n            break;\n        }\n\n        if (t > 50.0) {\n            break;\n        }\n\n        t += d;\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}