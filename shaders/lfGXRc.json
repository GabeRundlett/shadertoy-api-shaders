{
    "Shader": {
        "info": {
            "date": "1715535699",
            "description": "Etude composed by Easely Blackwood\nGraphics inspired by Smalin",
            "flags": 40,
            "hasliked": 0,
            "id": "lfGXRc",
            "likes": 4,
            "name": "16Tet Microtonal Etude, E. Bw",
            "published": 3,
            "tags": [
                "music",
                "audio",
                "microtonal"
            ],
            "usePreview": 0,
            "username": "incription",
            "viewed": 143
        },
        "renderpass": [
            {
                "code": "\n\n#define F(x,y) col = mix(x, col, smoothstep(0., fwidth(y), y))\n\nvec4 mix4(vec4 v1, vec4 v2, float a) { return v1 * (1. - a) + v2 * a; }\n\nvec4 getNote(int n, int channel) {\n    return texelFetch(iChannel1, ivec2(n, channel), 0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    uv *= SCALE;\n\n    vec3 col = vec3(0.02);\n    vec3 effects = vec3(0);\n\n    int[12] order = int[12](4,0,1,2,3,5,6,7,8,9,10,11);\n    for(int channeli = 0; channeli < CHANNELS; channeli++) {\n        int channel = order[channeli];\n        ivec2 index = ivec2(texelFetch(iChannel0, ivec2(channel, 0), 0).xy);\n        \n        for(int i = 0; i < index.y - index.x; i++) {\n            int noteIndex = index.x + i;\n            \n            vec4 noteBox = getNoteBox(getNote(noteIndex, channel), iTime);\n            vec4 nextNoteBox = getNoteBox(getNote(noteIndex + 1, channel), iTime);\n            \n            float d = sdNote(noteBox.xy - uv, noteBox.zw, channel);\n            //vec3[6](vec3(1.000,0.000,0.000),vec3(1.000,0.000,0.918),vec3(0.114,0.000,0.980),vec3(0.000,1.000,0.384),vec3(1.000,0.969,0.000),vec3(0.867,0.478,0.031))[channel]\n            vec3 nCol = hsv2rgb(vec3(float(channel+1)/float(CHANNELS),.76,1.));\n            if(channel==4)nCol*=.5;\n            F(nCol, d);\n            //col = mix(col, vec3[6](vec3(1.000,0.000,0.000),vec3(1.000,0.000,0.918),vec3(0.114,0.000,0.980),vec3(0.000,1.000,0.384),vec3(1.000,0.969,0.000),vec3(0.867,0.478,0.031))[channel], float(d<=0.));\n            if(noteBox.x - noteBox.z < 0. && noteBox.x + noteBox.z > 0.) F(pow(col,vec3(0.05)), d);\n            \n            float t = 1. - (nextNoteBox.x - nextNoteBox.z) / (nextNoteBox.x - noteBox.x + noteBox.z - nextNoteBox.z);\n            vec4 lerped = mix4(noteBox, nextNoteBox, t * t);\n            float r = sin(t * 3.141) * .1;\n            if(noteIndex % 2 == 1) r *= -1.;\n         \n            effects = mix(effects, float((nextNoteBox.x - nextNoteBox.z) - (noteBox.x + noteBox.z) <= 0.5) * pow(col,vec3(0.2)), float(sdNote(rotate(lerped.xy - uv, r), lerped.zw, channel) <= 0. && (noteBox.x - noteBox.z < 0. && nextNoteBox.x - nextNoteBox.z > 0.)));\n        }\n    }\n    col += effects;\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 uv = ivec2(fragCoord);\n    int n = uv.x;\n    int channel = uv.y;\n    \n    vec4 note = getNoteData(channel, n);\n   \n    fragColor = note;\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int channelIndex = ivec2(fragCoord).x;\n    vec4 data = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    int left = 0;\n    int right = 1;\n    if(channelIndex < CHANNELS) {\n        left = int(data.x);\n        right = int(data.y);\n        \n        vec4 box = getNoteBox(getNoteData(channelIndex, left), iTime);\n        if(box.x + box.z < -.5 * SCALE * ASPECT) left += 1;\n        \n        box = getNoteBox(getNoteData(channelIndex, right), iTime);\n        if(box.x - box.z < .5 * SCALE * ASPECT && iTime < 179.) right += 1;\n    }\n    fragColor = vec4(left, right, -1, -1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "\n\n#define CENTER 70.\n#define BPM 60.\n#define SCALE 5.\n#define ASPECT 1.7777\n#define CHANNELS 12\n#define INTRO 1.2\n\n#define TET 16.\n\nconst vec4 notes0[74] = vec4[74](vec4(31.51, 94, 0.6, 0.57), vec4(32.12, 93, 0.61, 0.56), vec4(32.73, 90, 0.6, 0.54), vec4(33.33, 89, 0.6, 0.6), vec4(33.94, 86, 0.61, 0.5), vec4(34.55, 85, 2.73, 0.55), vec4(40.6, 90, 0.6, 0.53), vec4(41.21, 89, 0.61, 0.56), vec4(41.82, 86, 0.6, 0.54), vec4(42.42, 85, 0.6, 0.55), vec4(43.03, 82, 0.61, 0.54), vec4(43.64, 81, 2.73, 0.56), vec4(47.88, 95, 0.6, 0.52), vec4(48.48, 94, 0.61, 0.55), vec4(49.09, 90, 0.6, 0.5), vec4(49.7, 89, 0.6, 0.57), vec4(50.3, 86, 0.61, 0.55), vec4(50.91, 85, 2.73, 0.57), vec4(56.97, 91, 0.6, 0.56), vec4(57.57, 90, 0.61, 0.57), vec4(58.18, 87, 0.6, 0.54), vec4(58.79, 86, 2.12, 0.55), vec4(62.73, 85, 0.91, 0.54), vec4(63.64, 83, 1.82, 0.54), vec4(66.36, 85, 1.36, 0.52), vec4(67.73, 90, 1.36, 0.7), vec4(71.51, 88, 0.6, 0.58), vec4(72.12, 84, 1.97, 0.55), vec4(74.55, 72, 1.82, 0.53), vec4(77.27, 65, 0.91, 0.57), vec4(79.09, 64, 0.91, 0.56), vec4(80.91, 65, 0.91, 0.55), vec4(82.73, 64, 0.91, 0.57), vec4(84.55, 63, 0.91, 0.56), vec4(86.36, 62, 0.91, 0.55), vec4(88.18, 63, 0.91, 0.56), vec4(90.0, 62, 0.91, 0.52), vec4(92.73, 69, 1.36, 0.54), vec4(98.79, 72, 0.6, 0.57), vec4(99.39, 71, 0.61, 0.61), vec4(100.0, 76, 0.6, 0.69), vec4(100.6, 75, 0.6, 0.61), vec4(101.21, 81, 0.61, 0.7), vec4(101.82, 80, 2.73, 0.57), vec4(133.33, 94, 0.6, 0.56), vec4(133.94, 93, 0.61, 0.58), vec4(134.55, 90, 0.6, 0.57), vec4(135.15, 89, 0.6, 0.56), vec4(135.75, 86, 0.61, 0.53), vec4(136.36, 85, 2.73, 0.54), vec4(142.42, 90, 0.6, 0.54), vec4(143.03, 89, 0.61, 0.57), vec4(143.64, 86, 0.6, 0.57), vec4(144.24, 85, 0.6, 0.57), vec4(144.84, 82, 0.61, 0.52), vec4(145.45, 81, 2.73, 0.58), vec4(149.7, 94, 0.6, 0.53), vec4(150.3, 93, 0.61, 0.57), vec4(150.91, 90, 0.6, 0.56), vec4(151.51, 89, 0.6, 0.5), vec4(152.12, 87, 0.61, 0.54), vec4(152.73, 86, 2.73, 0.57), vec4(158.79, 95, 0.6, 0.56), vec4(159.39, 94, 0.61, 0.54), vec4(160.0, 91, 0.6, 0.54), vec4(160.6, 90, 2.12, 0.55), vec4(164.55, 86, 0.91, 0.54), vec4(165.45, 82, 1.82, 0.51), vec4(168.18, 78, 1.36, 0.54), vec4(169.55, 86, 1.36, 0.7), vec4(173.33, 87, 0.6, 0.54), vec4(173.94, 80, 1.97, 0.47), vec4(176.36, 67, 1.82, 0.57), vec4(179.09, 73, 0.91, 0.54));\nconst vec4 notes1[74] = vec4[74](vec4(31.51, 80, 0.6, 0.54), vec4(32.12, 81, 0.61, 0.6), vec4(32.73, 76, 0.6, 0.52), vec4(33.33, 77, 0.6, 0.61), vec4(33.94, 72, 0.61, 0.53), vec4(34.55, 73, 2.73, 0.61), vec4(40.6, 76, 0.6, 0.54), vec4(41.21, 77, 0.61, 0.67), vec4(41.82, 72, 0.6, 0.54), vec4(42.42, 73, 0.6, 0.59), vec4(43.03, 68, 0.61, 0.52), vec4(43.64, 69, 2.73, 0.62), vec4(47.88, 80, 0.6, 0.49), vec4(48.48, 81, 0.61, 0.61), vec4(49.09, 77, 0.6, 0.54), vec4(49.7, 78, 0.6, 0.62), vec4(50.3, 72, 0.61, 0.53), vec4(50.91, 73, 2.73, 0.63), vec4(56.97, 81, 0.6, 0.51), vec4(57.57, 82, 0.61, 0.63), vec4(58.18, 77, 0.6, 0.54), vec4(58.79, 78, 2.12, 0.6), vec4(62.73, 78, 0.91, 0.57), vec4(63.64, 74, 1.82, 0.52), vec4(66.36, 78, 1.36, 0.54), vec4(67.73, 83, 1.36, 0.69), vec4(71.51, 84, 0.6, 0.56), vec4(72.12, 79, 1.97, 0.5), vec4(74.55, 68, 1.82, 0.54), vec4(77.27, 60, 0.91, 0.53), vec4(79.09, 59, 0.91, 0.52), vec4(80.91, 60, 0.91, 0.57), vec4(82.73, 60, 0.91, 0.56), vec4(84.55, 58, 0.91, 0.56), vec4(86.36, 57, 0.91, 0.54), vec4(88.18, 58, 0.91, 0.55), vec4(90.0, 57, 0.91, 0.53), vec4(92.73, 64, 1.36, 0.55), vec4(98.79, 67, 0.6, 0.54), vec4(99.39, 66, 0.61, 0.55), vec4(100.0, 71, 0.6, 0.66), vec4(100.6, 70, 0.6, 0.57), vec4(101.21, 74, 0.61, 0.68), vec4(101.82, 73, 2.73, 0.57), vec4(133.33, 80, 0.6, 0.56), vec4(133.94, 81, 0.61, 0.6), vec4(134.55, 76, 0.6, 0.53), vec4(135.15, 77, 0.6, 0.62), vec4(135.75, 72, 0.61, 0.53), vec4(136.36, 73, 2.73, 0.61), vec4(142.42, 76, 0.6, 0.55), vec4(143.03, 77, 0.61, 0.61), vec4(143.64, 72, 0.6, 0.52), vec4(144.24, 73, 0.6, 0.63), vec4(144.84, 68, 0.61, 0.47), vec4(145.45, 69, 2.73, 0.65), vec4(149.7, 85, 0.6, 0.53), vec4(150.3, 86, 0.61, 0.63), vec4(150.91, 80, 0.6, 0.5), vec4(151.51, 81, 0.6, 0.61), vec4(152.12, 76, 0.61, 0.54), vec4(152.73, 77, 2.73, 0.63), vec4(158.79, 81, 0.6, 0.55), vec4(159.39, 82, 0.61, 0.61), vec4(160.0, 77, 0.6, 0.53), vec4(160.6, 78, 2.12, 0.61), vec4(164.55, 82, 0.91, 0.53), vec4(165.45, 78, 1.82, 0.55), vec4(168.18, 74, 1.36, 0.55), vec4(169.55, 82, 1.36, 0.72), vec4(173.33, 80, 0.6, 0.54), vec4(173.94, 71, 1.97, 0.48), vec4(176.36, 64, 1.82, 0.54), vec4(179.09, 68, 0.91, 0.56));\nconst vec4 notes2[74] = vec4[74](vec4(31.51, 72, 0.6, 0.53), vec4(32.12, 73, 0.61, 0.62), vec4(32.73, 68, 0.6, 0.5), vec4(33.33, 69, 0.6, 0.65), vec4(33.94, 64, 0.61, 0.55), vec4(34.55, 65, 2.73, 0.6), vec4(40.6, 68, 0.6, 0.53), vec4(41.21, 69, 0.61, 0.61), vec4(41.82, 64, 0.6, 0.52), vec4(42.42, 65, 0.6, 0.59), vec4(43.03, 60, 0.61, 0.52), vec4(43.64, 61, 2.73, 0.59), vec4(47.88, 72, 0.6, 0.52), vec4(48.48, 73, 0.61, 0.65), vec4(49.09, 68, 0.6, 0.52), vec4(49.7, 69, 0.6, 0.62), vec4(50.3, 64, 0.61, 0.51), vec4(50.91, 65, 2.73, 0.61), vec4(56.97, 77, 0.6, 0.56), vec4(57.57, 78, 0.61, 0.62), vec4(58.18, 73, 0.6, 0.53), vec4(58.79, 74, 2.12, 0.61), vec4(62.73, 74, 0.91, 0.54), vec4(63.64, 70, 1.82, 0.52), vec4(66.36, 74, 1.36, 0.53), vec4(67.73, 78, 1.36, 0.66), vec4(71.51, 79, 0.6, 0.54), vec4(72.12, 75, 1.97, 0.52), vec4(74.55, 63, 1.82, 0.54), vec4(77.27, 56, 0.91, 0.54), vec4(79.09, 56, 0.91, 0.52), vec4(80.91, 56, 0.91, 0.54), vec4(82.73, 56, 0.91, 0.51), vec4(84.55, 54, 0.91, 0.56), vec4(86.36, 54, 0.91, 0.54), vec4(88.18, 54, 0.91, 0.54), vec4(90.0, 54, 0.91, 0.49), vec4(92.73, 57, 1.36, 0.54), vec4(98.79, 63, 0.6, 0.53), vec4(99.39, 62, 0.61, 0.58), vec4(100.0, 67, 0.6, 0.69), vec4(100.6, 66, 0.6, 0.59), vec4(101.21, 70, 0.61, 0.67), vec4(101.82, 69, 2.73, 0.57), vec4(133.33, 72, 0.6, 0.57), vec4(133.94, 73, 0.61, 0.63), vec4(134.55, 68, 0.6, 0.51), vec4(135.15, 69, 0.6, 0.61), vec4(135.75, 64, 0.61, 0.53), vec4(136.36, 65, 2.73, 0.59), vec4(142.42, 68, 0.6, 0.54), vec4(143.03, 69, 0.61, 0.61), vec4(143.64, 64, 0.6, 0.5), vec4(144.24, 65, 0.6, 0.61), vec4(144.84, 60, 0.61, 0.53), vec4(145.45, 61, 2.73, 0.6), vec4(149.7, 80, 0.6, 0.52), vec4(150.3, 81, 0.61, 0.61), vec4(150.91, 76, 0.6, 0.53), vec4(151.51, 77, 0.6, 0.6), vec4(152.12, 72, 0.61, 0.54), vec4(152.73, 73, 2.73, 0.61), vec4(158.79, 73, 0.6, 0.53), vec4(159.39, 74, 0.61, 0.61), vec4(160.0, 69, 0.6, 0.54), vec4(160.6, 70, 2.12, 0.58), vec4(164.55, 78, 0.91, 0.54), vec4(165.45, 75, 1.82, 0.5), vec4(168.18, 70, 1.36, 0.54), vec4(169.55, 78, 1.36, 0.73), vec4(173.33, 76, 0.6, 0.5), vec4(173.94, 67, 1.97, 0.42), vec4(176.36, 60, 1.82, 0.54), vec4(179.09, 64, 0.91, 0.56));\nconst vec4 notes3[74] = vec4[74](vec4(31.51, 68, 0.6, 0.55), vec4(32.12, 69, 0.61, 0.64), vec4(32.73, 64, 0.6, 0.51), vec4(33.33, 65, 0.6, 0.62), vec4(33.94, 60, 0.61, 0.5), vec4(34.55, 61, 2.73, 0.59), vec4(40.6, 64, 0.6, 0.54), vec4(41.21, 65, 0.61, 0.61), vec4(41.82, 60, 0.6, 0.52), vec4(42.42, 61, 0.6, 0.59), vec4(43.03, 56, 0.61, 0.56), vec4(43.64, 57, 2.73, 0.6), vec4(47.88, 68, 0.6, 0.53), vec4(48.48, 69, 0.61, 0.65), vec4(49.09, 64, 0.6, 0.5), vec4(49.7, 65, 0.6, 0.6), vec4(50.3, 61, 0.61, 0.48), vec4(50.91, 62, 2.73, 0.6), vec4(56.97, 69, 0.6, 0.52), vec4(57.57, 70, 0.61, 0.59), vec4(58.18, 65, 0.6, 0.5), vec4(58.79, 66, 2.12, 0.62), vec4(62.73, 66, 0.91, 0.53), vec4(63.64, 62, 1.82, 0.51), vec4(66.36, 66, 1.36, 0.53), vec4(67.73, 70, 1.36, 0.65), vec4(71.51, 75, 0.6, 0.57), vec4(72.12, 71, 1.97, 0.51), vec4(74.55, 59, 1.82, 0.53), vec4(77.27, 52, 0.91, 0.57), vec4(79.09, 52, 0.91, 0.56), vec4(80.91, 52, 0.91, 0.57), vec4(82.73, 52, 0.91, 0.55), vec4(84.55, 50, 0.91, 0.55), vec4(86.36, 50, 0.91, 0.5), vec4(88.18, 50, 0.91, 0.54), vec4(90.0, 50, 0.91, 0.56), vec4(92.73, 44, 1.36, 0.51), vec4(98.79, 52, 0.6, 0.54), vec4(99.39, 53, 0.61, 0.61), vec4(100.0, 56, 0.6, 0.6), vec4(100.6, 57, 0.6, 0.61), vec4(101.21, 59, 0.61, 0.61), vec4(101.82, 60, 2.73, 0.61), vec4(133.33, 68, 0.6, 0.54), vec4(133.94, 69, 0.61, 0.63), vec4(134.55, 64, 0.6, 0.53), vec4(135.15, 65, 0.6, 0.62), vec4(135.75, 60, 0.61, 0.52), vec4(136.36, 61, 2.73, 0.61), vec4(142.42, 64, 0.6, 0.54), vec4(143.03, 65, 0.61, 0.63), vec4(143.64, 60, 0.6, 0.52), vec4(144.24, 61, 0.6, 0.61), vec4(144.84, 56, 0.61, 0.57), vec4(145.45, 57, 2.73, 0.6), vec4(149.7, 72, 0.6, 0.57), vec4(150.3, 73, 0.61, 0.62), vec4(150.91, 69, 0.6, 0.54), vec4(151.51, 70, 0.6, 0.61), vec4(152.12, 64, 0.61, 0.51), vec4(152.73, 65, 2.73, 0.63), vec4(158.79, 69, 0.6, 0.5), vec4(159.39, 70, 0.61, 0.61), vec4(160.0, 65, 0.6, 0.52), vec4(160.6, 66, 2.12, 0.61), vec4(164.55, 74, 0.91, 0.54), vec4(165.45, 70, 1.82, 0.57), vec4(168.18, 66, 1.36, 0.55), vec4(169.55, 75, 1.36, 0.72), vec4(173.33, 67, 0.6, 0.53), vec4(173.94, 60, 1.97, 0.52), vec4(176.36, 55, 1.82, 0.57), vec4(179.09, 60, 0.91, 0.52));\nconst vec4 notes4[190] = vec4[190](vec4(4.55, 77, 0.91, 0.54), vec4(5.45, 68, 1.36, 0.45), vec4(6.82, 71, 0.45, 0.63), vec4(7.27, 72, 0.45, 0.65), vec4(7.73, 75, 0.45, 0.68), vec4(8.18, 77, 0.45, 0.68), vec4(8.64, 81, 0.45, 0.7), vec4(9.09, 88, 1.21, 0.74), vec4(10.3, 87, 0.3, 0.59), vec4(10.6, 84, 0.3, 0.56), vec4(10.91, 81, 0.91, 0.56), vec4(11.82, 80, 0.6, 0.53), vec4(12.42, 75, 0.3, 0.52), vec4(12.73, 77, 0.6, 0.62), vec4(13.33, 68, 3.94, 0.44), vec4(18.64, 84, 0.45, 0.51), vec4(19.09, 79, 0.6, 0.52), vec4(19.7, 75, 0.3, 0.51), vec4(20.0, 76, 0.45, 0.61), vec4(20.45, 88, 0.45, 0.74), vec4(20.91, 83, 0.6, 0.53), vec4(21.51, 79, 0.3, 0.53), vec4(21.82, 80, 0.6, 0.62), vec4(22.42, 89, 1.82, 0.69), vec4(24.24, 88, 0.6, 0.56), vec4(24.84, 85, 1.06, 0.5), vec4(25.91, 80, 0.45, 0.49), vec4(26.36, 79, 0.6, 0.58), vec4(26.97, 75, 0.3, 0.54), vec4(27.27, 81, 0.45, 0.71), vec4(27.73, 76, 0.45, 0.54), vec4(28.18, 75, 0.6, 0.56), vec4(28.79, 71, 0.3, 0.53), vec4(29.09, 77, 0.6, 0.69), vec4(29.7, 68, 5.76, 0.49), vec4(38.64, 79, 0.45, 0.52), vec4(39.09, 75, 0.6, 0.51), vec4(39.7, 71, 0.3, 0.54), vec4(40.0, 73, 0.6, 0.65), vec4(40.6, 64, 4.85, 0.47), vec4(45.91, 77, 0.45, 0.58), vec4(46.36, 72, 0.6, 0.51), vec4(46.97, 68, 0.3, 0.54), vec4(47.27, 73, 0.6, 0.69), vec4(47.88, 65, 3.49, 0.47), vec4(51.36, 68, 0.45, 0.66), vec4(51.82, 69, 0.45, 0.67), vec4(52.27, 73, 0.45, 0.63), vec4(52.73, 77, 1.21, 0.65), vec4(53.94, 76, 0.3, 0.54), vec4(54.24, 74, 0.3, 0.57), vec4(54.55, 73, 1.36, 0.56), vec4(55.91, 69, 0.45, 0.55), vec4(56.36, 74, 2.27, 0.67), vec4(58.64, 90, 0.45, 0.72), vec4(59.09, 86, 0.45, 0.57), vec4(59.55, 85, 0.45, 0.61), vec4(60.0, 82, 1.21, 0.55), vec4(61.21, 81, 0.3, 0.59), vec4(61.51, 78, 0.3, 0.52), vec4(61.82, 77, 1.21, 0.58), vec4(63.03, 74, 0.3, 0.59), vec4(63.33, 73, 0.3, 0.55), vec4(63.64, 74, 1.82, 0.64), vec4(65.91, 78, 0.75, 0.52), vec4(66.66, 77, 0.3, 0.56), vec4(66.97, 76, 0.3, 0.56), vec4(67.27, 74, 1.36, 0.57), vec4(68.64, 70, 0.45, 0.52), vec4(69.09, 79, 0.45, 0.76), vec4(69.55, 75, 0.75, 0.57), vec4(70.3, 74, 0.3, 0.59), vec4(70.6, 73, 0.3, 0.6), vec4(70.91, 72, 1.82, 0.59), vec4(76.82, 81, 0.45, 0.54), vec4(77.27, 76, 0.6, 0.5), vec4(77.88, 75, 0.3, 0.54), vec4(78.18, 72, 0.45, 0.54), vec4(78.64, 75, 0.45, 0.61), vec4(79.09, 76, 0.45, 0.65), vec4(79.55, 72, 0.91, 0.54), vec4(80.45, 71, 0.45, 0.57), vec4(80.91, 72, 0.6, 0.59), vec4(81.51, 75, 0.3, 0.67), vec4(81.82, 76, 0.6, 0.64), vec4(82.42, 79, 0.3, 0.63), vec4(82.73, 76, 0.45, 0.57), vec4(83.18, 75, 0.45, 0.56), vec4(83.64, 74, 1.36, 0.57), vec4(85.0, 73, 0.45, 0.59), vec4(85.45, 70, 0.45, 0.5), vec4(85.91, 73, 0.45, 0.67), vec4(86.36, 74, 0.45, 0.65), vec4(86.82, 70, 0.91, 0.57), vec4(87.73, 69, 0.45, 0.59), vec4(88.18, 70, 0.6, 0.62), vec4(88.79, 73, 0.3, 0.67), vec4(89.09, 74, 0.6, 0.68), vec4(89.7, 77, 0.3, 0.63), vec4(90.0, 74, 0.45, 0.54), vec4(90.45, 73, 0.45, 0.6), vec4(90.91, 72, 0.6, 0.58), vec4(91.51, 75, 0.3, 0.64), vec4(91.82, 76, 0.45, 0.65), vec4(92.27, 79, 0.45, 0.65), vec4(92.73, 80, 1.36, 0.65), vec4(94.09, 76, 0.45, 0.54), vec4(94.55, 72, 1.36, 0.5), vec4(95.91, 75, 0.45, 0.67), vec4(96.36, 77, 1.36, 0.66), vec4(97.73, 79, 0.45, 0.66), vec4(98.18, 80, 4.55, 0.63), vec4(106.36, 69, 0.91, 0.54), vec4(107.27, 60, 1.36, 0.46), vec4(108.64, 63, 0.45, 0.64), vec4(109.09, 64, 0.45, 0.61), vec4(109.55, 67, 0.45, 0.68), vec4(110.0, 69, 0.45, 0.64), vec4(110.45, 73, 0.45, 0.65), vec4(110.91, 80, 1.21, 0.71), vec4(112.12, 79, 0.3, 0.57), vec4(112.42, 76, 0.3, 0.5), vec4(112.73, 73, 0.91, 0.53), vec4(113.64, 72, 0.6, 0.55), vec4(114.24, 67, 0.3, 0.5), vec4(114.55, 69, 0.6, 0.61), vec4(115.15, 60, 3.94, 0.48), vec4(120.45, 76, 0.45, 0.54), vec4(120.91, 71, 0.6, 0.52), vec4(121.51, 67, 0.3, 0.52), vec4(121.82, 68, 0.45, 0.59), vec4(122.27, 80, 0.45, 0.76), vec4(122.73, 75, 0.6, 0.54), vec4(123.33, 71, 0.3, 0.53), vec4(123.64, 72, 0.6, 0.61), vec4(124.24, 81, 1.82, 0.7), vec4(126.06, 80, 0.6, 0.57), vec4(126.66, 77, 1.06, 0.55), vec4(127.73, 72, 0.45, 0.52), vec4(128.18, 71, 0.6, 0.61), vec4(128.79, 67, 0.3, 0.51), vec4(129.09, 73, 0.45, 0.7), vec4(129.55, 68, 0.45, 0.51), vec4(130.0, 67, 0.6, 0.56), vec4(130.6, 63, 0.3, 0.53), vec4(130.91, 69, 0.6, 0.63), vec4(131.51, 60, 3.94, 0.46), vec4(140.45, 87, 0.45, 0.55), vec4(140.91, 83, 0.6, 0.53), vec4(141.51, 79, 0.3, 0.54), vec4(141.82, 81, 0.6, 0.63), vec4(142.42, 72, 4.85, 0.48), vec4(147.73, 85, 0.45, 0.52), vec4(148.18, 80, 0.6, 0.5), vec4(148.79, 76, 0.3, 0.54), vec4(149.09, 81, 0.6, 0.67), vec4(149.7, 73, 3.49, 0.5), vec4(153.18, 76, 0.45, 0.64), vec4(153.64, 77, 0.45, 0.61), vec4(154.09, 81, 0.45, 0.69), vec4(154.55, 85, 1.21, 0.66), vec4(155.75, 84, 0.3, 0.59), vec4(156.06, 82, 0.3, 0.57), vec4(156.36, 81, 1.36, 0.58), vec4(157.73, 77, 0.45, 0.53), vec4(158.18, 82, 2.27, 0.65), vec4(160.45, 86, 0.45, 0.65), vec4(160.91, 78, 0.45, 0.47), vec4(161.36, 77, 0.45, 0.56), vec4(161.82, 74, 1.21, 0.54), vec4(163.03, 73, 0.3, 0.58), vec4(163.33, 70, 0.3, 0.57), vec4(163.64, 69, 1.21, 0.6), vec4(164.84, 66, 0.3, 0.55), vec4(165.15, 65, 0.3, 0.56), vec4(165.45, 66, 1.82, 0.61), vec4(167.73, 70, 0.75, 0.54), vec4(168.48, 69, 0.3, 0.56), vec4(168.79, 68, 0.3, 0.57), vec4(169.09, 66, 1.36, 0.56), vec4(170.45, 62, 0.45, 0.5), vec4(170.91, 71, 0.45, 0.76), vec4(171.36, 67, 0.75, 0.53), vec4(172.12, 66, 0.3, 0.55), vec4(172.42, 65, 0.3, 0.61), vec4(172.73, 64, 1.82, 0.55), vec4(178.64, 89, 0.45, 0.57), vec4(179.09, 84, 0.6, 0.49), vec4(179.69, 83, 0.3, 0.52), vec4(180.0, 80, 0.45, 0.54));\nconst vec4 notes5[3] = vec4[3](vec4(178.18, 68, 1.36, 0.57), vec4(179.55, 71, 0.45, 0.65), vec4(180.0, 68, 0.91, 0.58));\nconst vec4 notes6[139] = vec4[139](vec4(76.36, 65, 1.36, 0.52), vec4(77.73, 68, 0.45, 0.65), vec4(78.18, 65, 0.91, 0.56), vec4(79.09, 64, 0.91, 0.55), vec4(80.0, 65, 0.6, 0.62), vec4(80.6, 68, 0.3, 0.66), vec4(80.91, 69, 0.45, 0.63), vec4(81.36, 68, 0.45, 0.58), vec4(81.82, 65, 0.91, 0.54), vec4(82.73, 64, 0.91, 0.52), vec4(83.64, 63, 0.45, 0.54), vec4(84.09, 62, 0.45, 0.59), vec4(84.55, 63, 0.6, 0.61), vec4(85.15, 66, 0.3, 0.64), vec4(85.45, 63, 0.91, 0.56), vec4(86.36, 62, 0.91, 0.57), vec4(87.27, 63, 0.6, 0.61), vec4(87.88, 66, 0.3, 0.65), vec4(88.18, 67, 0.45, 0.66), vec4(88.64, 66, 0.45, 0.58), vec4(89.09, 63, 0.91, 0.54), vec4(90.0, 62, 0.91, 0.59), vec4(90.91, 56, 0.91, 0.56), vec4(91.82, 55, 0.91, 0.57), vec4(92.73, 57, 0.6, 0.62), vec4(93.33, 56, 0.3, 0.58), vec4(93.64, 57, 0.45, 0.62), vec4(94.09, 60, 0.45, 0.65), vec4(94.55, 61, 0.6, 0.64), vec4(95.15, 64, 0.3, 0.69), vec4(95.45, 65, 0.45, 0.65), vec4(95.91, 64, 0.45, 0.61), vec4(96.36, 61, 0.91, 0.56), vec4(97.27, 60, 0.91, 0.54), vec4(98.18, 57, 4.09, 0.61), vec4(102.27, 64, 0.45, 0.7), vec4(102.73, 69, 1.36, 0.73), vec4(104.09, 60, 0.45, 0.48), vec4(104.55, 69, 1.36, 0.7), vec4(105.91, 67, 0.45, 0.6), vec4(106.36, 60, 4.09, 0.49), vec4(110.45, 69, 0.45, 0.75), vec4(110.91, 73, 0.45, 0.69), vec4(111.36, 72, 0.45, 0.59), vec4(111.82, 69, 0.45, 0.56), vec4(112.27, 68, 0.45, 0.56), vec4(112.73, 68, 0.91, 0.63), vec4(113.64, 67, 0.45, 0.53), vec4(114.09, 63, 0.45, 0.55), vec4(114.55, 57, 0.91, 0.53), vec4(115.45, 60, 0.45, 0.65), vec4(115.91, 56, 0.45, 0.53), vec4(116.36, 57, 0.45, 0.6), vec4(116.82, 64, 0.45, 0.72), vec4(117.27, 69, 1.36, 0.69), vec4(118.64, 60, 0.45, 0.47), vec4(119.09, 69, 1.82, 0.71), vec4(120.91, 67, 0.91, 0.57), vec4(121.82, 61, 0.45, 0.5), vec4(122.27, 68, 0.91, 0.69), vec4(123.18, 59, 0.45, 0.56), vec4(123.64, 68, 1.36, 0.72), vec4(125.0, 72, 0.45, 0.72), vec4(125.45, 68, 1.36, 0.53), vec4(126.82, 72, 0.45, 0.71), vec4(127.27, 68, 0.91, 0.54), vec4(128.18, 64, 0.91, 0.52), vec4(129.09, 61, 0.91, 0.53), vec4(130.0, 60, 1.36, 0.59), vec4(131.36, 63, 0.45, 0.65), vec4(131.82, 64, 1.82, 0.62), vec4(133.64, 69, 1.36, 0.71), vec4(135.0, 60, 0.45, 0.5), vec4(135.45, 69, 1.36, 0.68), vec4(136.82, 68, 0.45, 0.57), vec4(137.27, 69, 0.45, 0.64), vec4(137.73, 73, 0.45, 0.65), vec4(138.18, 69, 0.45, 0.57), vec4(138.64, 64, 0.45, 0.52), vec4(139.09, 68, 0.45, 0.69), vec4(139.55, 69, 0.45, 0.57), vec4(140.0, 71, 0.45, 0.64), vec4(140.45, 67, 0.45, 0.54), vec4(140.91, 66, 0.45, 0.56), vec4(141.36, 67, 0.45, 0.63), vec4(141.82, 69, 0.45, 0.62), vec4(142.27, 65, 0.45, 0.54), vec4(142.73, 69, 3.18, 0.65), vec4(145.91, 68, 0.45, 0.56), vec4(146.36, 69, 0.45, 0.65), vec4(146.82, 65, 0.45, 0.5), vec4(147.27, 69, 1.82, 0.69), vec4(149.09, 70, 0.45, 0.64), vec4(149.55, 69, 0.45, 0.6), vec4(150.0, 70, 0.45, 0.64), vec4(150.45, 65, 0.45, 0.52), vec4(150.91, 70, 0.45, 0.64), vec4(151.36, 69, 0.45, 0.6), vec4(151.82, 70, 1.36, 0.61), vec4(153.18, 69, 0.45, 0.58), vec4(153.64, 70, 0.45, 0.57), vec4(154.09, 73, 0.45, 0.63), vec4(154.55, 74, 0.6, 0.63), vec4(155.15, 77, 0.3, 0.68), vec4(155.45, 74, 0.45, 0.57), vec4(155.91, 73, 0.45, 0.57), vec4(156.36, 70, 0.45, 0.56), vec4(156.82, 69, 0.45, 0.57), vec4(157.27, 70, 0.45, 0.63), vec4(157.73, 65, 0.45, 0.51), vec4(158.18, 70, 0.45, 0.67), vec4(158.64, 69, 0.45, 0.58), vec4(159.09, 70, 1.36, 0.65), vec4(160.45, 69, 0.45, 0.55), vec4(160.91, 66, 1.51, 0.53), vec4(162.42, 70, 0.3, 0.61), vec4(162.73, 66, 0.45, 0.53), vec4(163.18, 62, 0.45, 0.53), vec4(163.64, 61, 1.36, 0.61), vec4(165.0, 58, 0.45, 0.58), vec4(165.45, 59, 0.6, 0.6), vec4(166.06, 58, 0.3, 0.6), vec4(166.36, 59, 0.45, 0.61), vec4(166.82, 63, 0.45, 0.65), vec4(167.27, 61, 1.36, 0.59), vec4(168.64, 58, 0.45, 0.57), vec4(169.09, 59, 2.27, 0.59), vec4(171.36, 58, 0.45, 0.59), vec4(171.82, 59, 0.91, 0.64), vec4(172.73, 60, 0.6, 0.63), vec4(173.33, 59, 0.3, 0.59), vec4(173.64, 60, 0.45, 0.65), vec4(174.09, 64, 0.91, 0.68), vec4(175.0, 59, 0.45, 0.56), vec4(175.45, 60, 0.45, 0.63), vec4(175.91, 63, 0.45, 0.65), vec4(176.36, 64, 0.45, 0.66), vec4(176.82, 60, 0.45, 0.52), vec4(177.27, 64, 7.73, 0.66));\nconst vec4 notes7[231] = vec4[231](vec4(0.0, 65, 0.45, 0.54), vec4(0.45, 61, 0.45, 0.5), vec4(0.91, 65, 1.36, 0.67), vec4(2.27, 61, 0.45, 0.51), vec4(2.73, 65, 1.36, 0.67), vec4(4.09, 61, 0.45, 0.55), vec4(4.55, 65, 0.91, 0.67), vec4(5.45, 64, 1.21, 0.57), vec4(6.66, 60, 0.3, 0.54), vec4(6.97, 59, 0.3, 0.58), vec4(7.27, 61, 0.45, 0.65), vec4(7.73, 64, 0.45, 0.62), vec4(8.18, 65, 1.36, 0.65), vec4(9.55, 64, 0.45, 0.57), vec4(10.0, 61, 0.45, 0.52), vec4(10.45, 60, 0.45, 0.6), vec4(10.91, 68, 1.36, 0.75), vec4(12.27, 64, 0.45, 0.56), vec4(12.73, 65, 0.45, 0.65), vec4(13.18, 61, 0.45, 0.56), vec4(13.64, 59, 0.45, 0.6), vec4(14.09, 64, 0.45, 0.69), vec4(14.55, 61, 0.45, 0.54), vec4(15.0, 64, 0.45, 0.65), vec4(15.45, 65, 1.36, 0.69), vec4(16.82, 61, 0.45, 0.57), vec4(17.27, 65, 1.36, 0.65), vec4(18.64, 61, 0.45, 0.51), vec4(19.09, 63, 0.45, 0.65), vec4(19.55, 68, 0.45, 0.73), vec4(20.0, 69, 0.45, 0.65), vec4(20.45, 65, 0.45, 0.57), vec4(20.91, 67, 0.45, 0.65), vec4(21.36, 72, 0.45, 0.68), vec4(21.82, 73, 0.45, 0.65), vec4(22.27, 69, 0.45, 0.53), vec4(22.73, 73, 1.36, 0.64), vec4(24.09, 69, 0.45, 0.57), vec4(24.55, 73, 1.36, 0.65), vec4(25.91, 69, 0.45, 0.51), vec4(26.36, 68, 0.45, 0.57), vec4(26.82, 72, 0.45, 0.64), vec4(27.27, 69, 0.45, 0.55), vec4(27.73, 65, 0.45, 0.56), vec4(28.18, 64, 0.45, 0.54), vec4(28.64, 68, 0.45, 0.65), vec4(29.09, 61, 0.45, 0.53), vec4(29.55, 60, 0.45, 0.55), vec4(30.0, 61, 0.45, 0.63), vec4(30.45, 64, 0.45, 0.67), vec4(30.91, 65, 0.45, 0.65), vec4(31.36, 60, 0.45, 0.51), vec4(31.82, 65, 1.36, 0.69), vec4(33.18, 61, 0.45, 0.57), vec4(33.64, 65, 1.36, 0.66), vec4(35.0, 64, 0.45, 0.57), vec4(35.45, 65, 0.45, 0.66), vec4(35.91, 61, 0.45, 0.51), vec4(36.36, 65, 0.45, 0.61), vec4(36.82, 61, 0.45, 0.57), vec4(37.27, 60, 0.45, 0.59), vec4(37.73, 64, 0.45, 0.66), vec4(38.18, 63, 0.45, 0.57), vec4(38.64, 59, 0.45, 0.54), vec4(39.09, 58, 0.45, 0.6), vec4(39.55, 59, 0.45, 0.64), vec4(40.0, 61, 0.45, 0.62), vec4(40.45, 57, 0.45, 0.57), vec4(40.91, 61, 3.18, 0.68), vec4(44.09, 60, 0.45, 0.6), vec4(44.55, 61, 0.45, 0.61), vec4(45.0, 57, 0.45, 0.57), vec4(45.45, 61, 1.82, 0.68), vec4(47.27, 62, 0.45, 0.63), vec4(47.73, 61, 0.45, 0.57), vec4(48.18, 62, 0.45, 0.58), vec4(48.64, 57, 0.45, 0.54), vec4(49.09, 62, 0.45, 0.71), vec4(49.55, 61, 0.45, 0.62), vec4(50.0, 62, 1.36, 0.63), vec4(51.36, 61, 0.45, 0.59), vec4(51.82, 62, 0.45, 0.64), vec4(52.27, 65, 0.45, 0.65), vec4(52.73, 66, 0.6, 0.66), vec4(53.33, 69, 0.3, 0.68), vec4(53.64, 66, 0.45, 0.54), vec4(54.09, 65, 0.45, 0.58), vec4(54.55, 62, 0.45, 0.56), vec4(55.0, 61, 0.45, 0.56), vec4(55.45, 62, 0.45, 0.62), vec4(55.91, 57, 0.45, 0.57), vec4(56.36, 62, 0.45, 0.65), vec4(56.82, 61, 0.45, 0.61), vec4(57.27, 62, 1.36, 0.62), vec4(58.64, 61, 0.45, 0.54), vec4(59.09, 62, 0.45, 0.66), vec4(59.55, 65, 0.45, 0.65), vec4(60.0, 66, 0.6, 0.61), vec4(60.6, 69, 0.3, 0.63), vec4(60.91, 66, 0.91, 0.58), vec4(61.82, 62, 0.45, 0.5), vec4(62.27, 61, 0.45, 0.54), vec4(62.73, 62, 0.45, 0.61), vec4(63.18, 66, 0.45, 0.63), vec4(63.64, 67, 0.6, 0.63), vec4(64.24, 66, 0.3, 0.57), vec4(64.55, 67, 0.45, 0.61), vec4(65.0, 62, 0.91, 0.51), vec4(65.91, 61, 0.45, 0.58), vec4(66.36, 62, 0.45, 0.64), vec4(66.82, 66, 0.45, 0.68), vec4(67.27, 67, 2.27, 0.62), vec4(69.55, 66, 0.45, 0.55), vec4(70.0, 67, 0.45, 0.65), vec4(70.45, 63, 1.06, 0.54), vec4(71.51, 62, 0.3, 0.57), vec4(71.82, 63, 0.45, 0.62), vec4(72.27, 68, 0.91, 0.67), vec4(73.18, 67, 0.45, 0.57), vec4(73.64, 68, 0.45, 0.59), vec4(74.09, 63, 0.91, 0.52), vec4(75.0, 68, 0.45, 0.68), vec4(75.45, 72, 0.45, 0.7), vec4(75.91, 68, 0.45, 0.54), vec4(76.36, 60, 1.36, 0.44), vec4(77.73, 63, 0.45, 0.68), vec4(78.18, 60, 0.91, 0.54), vec4(79.09, 59, 0.91, 0.6), vec4(80.0, 60, 0.6, 0.65), vec4(80.6, 63, 0.3, 0.66), vec4(80.91, 65, 0.45, 0.69), vec4(81.36, 63, 0.45, 0.54), vec4(81.82, 60, 1.36, 0.55), vec4(83.18, 56, 0.45, 0.57), vec4(83.64, 58, 0.45, 0.64), vec4(84.09, 57, 0.45, 0.56), vec4(84.55, 58, 0.6, 0.62), vec4(85.15, 61, 0.3, 0.66), vec4(85.45, 58, 0.91, 0.57), vec4(86.36, 57, 0.91, 0.58), vec4(87.27, 58, 0.6, 0.63), vec4(87.88, 61, 0.3, 0.65), vec4(88.18, 63, 0.45, 0.64), vec4(88.64, 61, 0.45, 0.57), vec4(89.09, 58, 0.91, 0.54), vec4(90.0, 57, 0.91, 0.61), vec4(90.91, 61, 0.91, 0.67), vec4(91.82, 60, 0.91, 0.61), vec4(92.73, 53, 0.6, 0.54), vec4(93.33, 52, 0.3, 0.55), vec4(93.64, 53, 0.45, 0.61), vec4(94.09, 55, 0.45, 0.6), vec4(94.55, 56, 0.6, 0.6), vec4(95.15, 59, 0.3, 0.63), vec4(95.45, 61, 0.45, 0.64), vec4(95.91, 59, 0.45, 0.61), vec4(96.36, 56, 0.91, 0.58), vec4(97.27, 55, 0.91, 0.6), vec4(98.18, 53, 4.09, 0.57), vec4(102.27, 57, 0.45, 0.62), vec4(102.73, 64, 4.55, 0.69), vec4(107.27, 67, 0.45, 0.65), vec4(107.73, 51, 0.45, 0.54), vec4(108.18, 67, 0.91, 0.75), vec4(109.09, 64, 4.55, 0.57), vec4(113.64, 56, 0.91, 0.54), vec4(114.55, 60, 0.45, 0.65), vec4(115.0, 53, 0.45, 0.57), vec4(115.45, 56, 0.45, 0.62), vec4(115.91, 51, 0.45, 0.55), vec4(116.36, 53, 0.45, 0.59), vec4(116.82, 57, 0.45, 0.64), vec4(117.27, 64, 4.09, 0.72), vec4(121.36, 60, 0.45, 0.52), vec4(121.82, 52, 0.45, 0.56), vec4(122.27, 61, 0.45, 0.74), vec4(122.73, 59, 0.45, 0.61), vec4(123.18, 64, 0.45, 0.68), vec4(123.64, 65, 0.45, 0.62), vec4(124.09, 61, 0.45, 0.57), vec4(124.55, 65, 1.36, 0.66), vec4(125.91, 61, 0.45, 0.54), vec4(126.36, 65, 1.36, 0.65), vec4(127.73, 61, 0.45, 0.51), vec4(128.18, 60, 0.45, 0.56), vec4(128.64, 59, 0.45, 0.58), vec4(129.09, 57, 0.45, 0.58), vec4(129.55, 56, 0.45, 0.58), vec4(130.0, 55, 0.45, 0.55), vec4(130.45, 56, 0.45, 0.63), vec4(130.91, 57, 0.45, 0.6), vec4(131.36, 56, 0.45, 0.61), vec4(131.82, 57, 0.45, 0.65), vec4(132.27, 68, 0.45, 0.74), vec4(132.73, 69, 0.45, 0.67), vec4(133.18, 60, 0.45, 0.48), vec4(133.64, 64, 5.0, 0.65), vec4(138.64, 60, 0.45, 0.54), vec4(139.09, 64, 0.91, 0.69), vec4(140.0, 63, 1.82, 0.61), vec4(141.82, 60, 1.82, 0.5), vec4(143.64, 61, 0.45, 0.64), vec4(144.09, 64, 0.45, 0.65), vec4(144.55, 65, 0.45, 0.66), vec4(145.0, 60, 0.45, 0.52), vec4(145.45, 61, 2.27, 0.63), vec4(147.73, 64, 0.45, 0.65), vec4(148.18, 61, 6.36, 0.57), vec4(154.55, 65, 1.82, 0.64), vec4(156.36, 61, 1.82, 0.52), vec4(158.18, 62, 3.18, 0.61), vec4(161.36, 57, 0.45, 0.55), vec4(161.82, 58, 0.6, 0.61), vec4(162.42, 61, 0.3, 0.65), vec4(162.73, 58, 0.45, 0.57), vec4(163.18, 57, 0.45, 0.62), vec4(163.64, 54, 0.45, 0.58), vec4(164.09, 53, 0.45, 0.55), vec4(164.55, 54, 0.45, 0.61), vec4(165.0, 50, 2.27, 0.57), vec4(167.27, 54, 0.45, 0.6), vec4(167.73, 53, 0.45, 0.57), vec4(168.18, 54, 0.45, 0.65), vec4(168.64, 50, 1.06, 0.57), vec4(169.69, 53, 0.3, 0.59), vec4(170.0, 54, 0.91, 0.59), vec4(170.91, 55, 6.82, 0.63), vec4(177.73, 60, 0.45, 0.69), vec4(178.18, 57, 1.36, 0.61), vec4(179.55, 60, 0.45, 0.65), vec4(180.0, 57, 0.91, 0.57));\nconst vec4 notes8[145] = vec4[145](vec4(0.0, 56, 1.36, 0.54), vec4(1.36, 61, 0.45, 0.67), vec4(1.82, 56, 1.36, 0.56), vec4(3.18, 61, 0.45, 0.68), vec4(3.64, 56, 1.36, 0.59), vec4(5.0, 61, 0.45, 0.69), vec4(5.45, 55, 1.36, 0.58), vec4(6.82, 48, 0.45, 0.52), vec4(7.27, 56, 4.09, 0.69), vec4(11.36, 61, 0.45, 0.69), vec4(11.82, 55, 0.91, 0.55), vec4(12.73, 52, 1.82, 0.58), vec4(14.55, 56, 1.36, 0.62), vec4(15.91, 61, 0.45, 0.65), vec4(16.36, 56, 1.36, 0.58), vec4(17.73, 61, 0.45, 0.69), vec4(18.18, 56, 1.82, 0.53), vec4(20.0, 60, 1.82, 0.65), vec4(21.82, 64, 1.36, 0.65), vec4(23.18, 69, 0.45, 0.68), vec4(23.64, 64, 1.36, 0.5), vec4(25.0, 69, 0.45, 0.66), vec4(25.45, 64, 0.91, 0.55), vec4(26.36, 59, 0.91, 0.56), vec4(27.27, 60, 0.91, 0.59), vec4(28.18, 55, 0.91, 0.57), vec4(29.09, 56, 9.09, 0.61), vec4(38.18, 51, 1.82, 0.54), vec4(40.0, 52, 1.82, 0.61), vec4(41.82, 53, 0.45, 0.6), vec4(42.27, 56, 0.45, 0.62), vec4(42.73, 57, 0.45, 0.61), vec4(43.18, 52, 0.45, 0.6), vec4(43.64, 53, 2.27, 0.65), vec4(45.91, 56, 0.45, 0.61), vec4(46.36, 53, 6.36, 0.6), vec4(52.73, 57, 1.82, 0.62), vec4(54.55, 53, 1.82, 0.59), vec4(56.36, 54, 3.64, 0.6), vec4(60.0, 57, 1.82, 0.64), vec4(61.82, 53, 1.82, 0.57), vec4(63.64, 54, 1.82, 0.62), vec4(65.45, 53, 1.82, 0.59), vec4(67.27, 54, 1.82, 0.61), vec4(69.09, 55, 1.82, 0.61), vec4(70.91, 56, 1.82, 0.63), vec4(72.73, 59, 1.36, 0.66), vec4(74.09, 51, 0.45, 0.54), vec4(74.55, 56, 0.45, 0.59), vec4(75.0, 47, 0.45, 0.55), vec4(75.45, 59, 0.45, 0.68), vec4(75.91, 56, 4.09, 0.6), vec4(80.0, 60, 1.82, 0.65), vec4(81.82, 56, 1.82, 0.59), vec4(83.64, 54, 3.64, 0.54), vec4(87.27, 58, 1.82, 0.67), vec4(89.09, 54, 1.36, 0.58), vec4(90.45, 53, 0.45, 0.57), vec4(90.91, 52, 0.91, 0.61), vec4(91.82, 51, 0.91, 0.57), vec4(92.73, 48, 1.82, 0.6), vec4(94.55, 56, 1.82, 0.67), vec4(96.36, 52, 1.36, 0.56), vec4(97.73, 51, 0.45, 0.56), vec4(98.18, 48, 4.09, 0.57), vec4(102.27, 53, 0.45, 0.61), vec4(102.73, 57, 1.36, 0.66), vec4(104.09, 53, 0.45, 0.57), vec4(104.55, 57, 1.36, 0.57), vec4(105.91, 56, 0.45, 0.59), vec4(106.36, 57, 0.91, 0.61), vec4(107.27, 56, 1.36, 0.54), vec4(108.64, 51, 0.45, 0.57), vec4(109.09, 53, 0.45, 0.61), vec4(109.55, 56, 0.45, 0.59), vec4(110.0, 57, 0.45, 0.64), vec4(110.45, 53, 0.91, 0.58), vec4(111.36, 52, 0.45, 0.59), vec4(111.82, 57, 0.45, 0.66), vec4(112.27, 56, 0.45, 0.61), vec4(112.73, 57, 0.91, 0.61), vec4(113.64, 63, 0.45, 0.71), vec4(114.09, 60, 0.45, 0.58), vec4(114.55, 53, 0.45, 0.54), vec4(115.0, 48, 0.45, 0.54), vec4(115.45, 51, 0.45, 0.6), vec4(115.91, 47, 0.45, 0.57), vec4(116.36, 48, 0.45, 0.61), vec4(116.82, 53, 0.45, 0.63), vec4(117.27, 57, 1.36, 0.59), vec4(118.64, 53, 0.45, 0.6), vec4(119.09, 57, 1.82, 0.64), vec4(120.91, 55, 0.91, 0.59), vec4(121.82, 57, 0.91, 0.62), vec4(122.73, 55, 0.45, 0.62), vec4(123.18, 51, 0.45, 0.55), vec4(123.64, 56, 1.36, 0.66), vec4(125.0, 61, 0.45, 0.72), vec4(125.45, 56, 1.36, 0.61), vec4(126.82, 61, 0.45, 0.67), vec4(127.27, 56, 0.91, 0.57), vec4(128.18, 60, 0.45, 0.66), vec4(128.64, 55, 0.45, 0.6), vec4(129.09, 52, 0.91, 0.57), vec4(130.0, 54, 0.45, 0.61), vec4(130.45, 51, 0.45, 0.59), vec4(130.91, 53, 0.45, 0.66), vec4(131.36, 52, 0.45, 0.61), vec4(131.82, 53, 0.45, 0.61), vec4(132.27, 56, 0.45, 0.63), vec4(132.73, 57, 0.45, 0.6), vec4(133.18, 53, 0.45, 0.56), vec4(133.64, 57, 1.36, 0.65), vec4(135.0, 53, 0.45, 0.55), vec4(135.45, 57, 1.36, 0.62), vec4(136.82, 56, 0.45, 0.57), vec4(137.27, 57, 0.45, 0.63), vec4(137.73, 48, 0.45, 0.56), vec4(138.18, 57, 0.91, 0.7), vec4(139.09, 60, 0.45, 0.65), vec4(139.55, 57, 0.45, 0.56), vec4(140.0, 59, 1.82, 0.64), vec4(141.82, 56, 5.45, 0.59), vec4(147.27, 53, 0.45, 0.56), vec4(147.73, 56, 0.45, 0.66), vec4(148.18, 57, 0.91, 0.61), vec4(149.09, 57, 5.0, 0.57), vec4(154.09, 60, 0.45, 0.65), vec4(154.55, 61, 1.36, 0.65), vec4(155.91, 60, 0.45, 0.59), vec4(156.36, 57, 4.55, 0.59), vec4(160.91, 59, 0.45, 0.61), vec4(161.36, 61, 0.45, 0.63), vec4(161.82, 57, 1.36, 0.61), vec4(163.18, 53, 0.45, 0.56), vec4(163.64, 50, 1.36, 0.57), vec4(165.0, 53, 0.45, 0.64), vec4(165.45, 54, 1.82, 0.63), vec4(167.27, 50, 1.36, 0.58), vec4(168.64, 53, 0.45, 0.63), vec4(169.09, 54, 1.82, 0.59), vec4(170.91, 51, 6.82, 0.6), vec4(177.73, 55, 0.45, 0.66), vec4(178.18, 52, 1.82, 0.6), vec4(180.0, 51, 1.82, 0.57));\nconst vec4 notes9[293] = vec4[293](vec4(0.0, 45, 0.45, 0.53), vec4(0.45, 49, 0.45, 0.64), vec4(0.91, 45, 0.45, 0.56), vec4(1.36, 40, 0.45, 0.56), vec4(1.82, 45, 0.45, 0.63), vec4(2.27, 49, 0.45, 0.69), vec4(2.73, 45, 0.45, 0.57), vec4(3.18, 40, 0.45, 0.54), vec4(3.64, 45, 0.45, 0.65), vec4(4.09, 49, 0.45, 0.64), vec4(4.55, 45, 0.45, 0.57), vec4(5.0, 52, 0.91, 0.67), vec4(5.91, 48, 0.45, 0.55), vec4(6.36, 52, 0.91, 0.64), vec4(7.27, 49, 0.45, 0.57), vec4(7.73, 48, 0.45, 0.6), vec4(8.18, 45, 1.36, 0.63), vec4(9.55, 44, 0.45, 0.61), vec4(10.0, 49, 0.45, 0.64), vec4(10.45, 48, 0.45, 0.59), vec4(10.91, 45, 0.45, 0.6), vec4(11.36, 52, 0.45, 0.64), vec4(11.82, 48, 0.45, 0.56), vec4(12.27, 52, 0.45, 0.61), vec4(12.73, 45, 0.45, 0.56), vec4(13.18, 49, 0.45, 0.63), vec4(13.64, 48, 0.45, 0.61), vec4(14.09, 43, 0.45, 0.56), vec4(14.55, 49, 0.45, 0.64), vec4(15.0, 48, 0.45, 0.58), vec4(15.45, 45, 0.45, 0.58), vec4(15.91, 40, 0.45, 0.54), vec4(16.36, 45, 0.45, 0.61), vec4(16.82, 49, 0.45, 0.66), vec4(17.27, 45, 0.45, 0.57), vec4(17.73, 40, 0.45, 0.56), vec4(18.18, 45, 0.45, 0.63), vec4(18.64, 49, 0.45, 0.65), vec4(19.09, 52, 0.45, 0.62), vec4(19.55, 47, 0.45, 0.58), vec4(20.0, 49, 0.45, 0.64), vec4(20.45, 53, 0.45, 0.63), vec4(20.91, 56, 0.45, 0.66), vec4(21.36, 51, 0.45, 0.58), vec4(21.82, 53, 0.45, 0.62), vec4(22.27, 57, 0.45, 0.62), vec4(22.73, 53, 0.45, 0.58), vec4(23.18, 48, 0.45, 0.59), vec4(23.64, 53, 0.45, 0.61), vec4(24.09, 57, 0.45, 0.64), vec4(24.55, 53, 0.45, 0.54), vec4(25.0, 48, 0.45, 0.54), vec4(25.45, 53, 0.45, 0.63), vec4(25.91, 57, 0.45, 0.66), vec4(26.36, 56, 0.45, 0.59), vec4(26.82, 52, 0.45, 0.57), vec4(27.27, 49, 0.45, 0.56), vec4(27.73, 53, 0.45, 0.64), vec4(28.18, 52, 0.45, 0.57), vec4(28.64, 48, 0.45, 0.57), vec4(29.09, 49, 0.45, 0.61), vec4(29.55, 48, 0.45, 0.62), vec4(30.0, 49, 0.45, 0.57), vec4(30.45, 44, 0.45, 0.55), vec4(30.91, 45, 0.45, 0.59), vec4(31.36, 49, 0.45, 0.62), vec4(31.82, 45, 1.36, 0.56), vec4(33.18, 49, 0.45, 0.62), vec4(33.64, 45, 1.36, 0.55), vec4(35.0, 44, 0.45, 0.6), vec4(35.45, 45, 0.45, 0.6), vec4(35.91, 49, 0.45, 0.66), vec4(36.36, 45, 0.45, 0.6), vec4(36.82, 49, 0.45, 0.64), vec4(37.27, 48, 0.45, 0.57), vec4(37.73, 44, 0.45, 0.57), vec4(38.18, 43, 0.45, 0.59), vec4(38.64, 47, 0.45, 0.61), vec4(39.09, 46, 0.45, 0.54), vec4(39.55, 47, 0.45, 0.59), vec4(40.0, 41, 0.45, 0.54), vec4(40.45, 45, 0.45, 0.63), vec4(40.91, 41, 0.45, 0.52), vec4(41.36, 40, 0.45, 0.55), vec4(41.82, 41, 0.45, 0.61), vec4(42.27, 44, 0.45, 0.61), vec4(42.73, 45, 0.45, 0.62), vec4(43.18, 40, 0.45, 0.58), vec4(43.64, 41, 0.45, 0.64), vec4(44.09, 40, 0.45, 0.56), vec4(44.55, 41, 0.45, 0.61), vec4(45.0, 45, 0.45, 0.59), vec4(45.45, 41, 0.45, 0.57), vec4(45.91, 44, 0.45, 0.6), vec4(46.36, 45, 0.45, 0.64), vec4(46.82, 41, 0.45, 0.57), vec4(47.27, 41, 0.45, 0.62), vec4(47.73, 40, 0.45, 0.62), vec4(48.18, 41, 0.45, 0.63), vec4(48.64, 46, 0.45, 0.63), vec4(49.09, 41, 0.45, 0.58), vec4(49.55, 40, 0.45, 0.61), vec4(50.0, 41, 1.36, 0.62), vec4(51.36, 40, 0.45, 0.56), vec4(51.82, 41, 0.45, 0.59), vec4(52.27, 44, 0.45, 0.63), vec4(52.73, 45, 0.6, 0.6), vec4(53.33, 48, 0.3, 0.57), vec4(53.64, 45, 0.45, 0.55), vec4(54.09, 44, 0.45, 0.61), vec4(54.55, 42, 0.45, 0.58), vec4(55.0, 40, 0.45, 0.58), vec4(55.45, 42, 0.45, 0.61), vec4(55.91, 46, 0.45, 0.63), vec4(56.36, 42, 0.45, 0.54), vec4(56.82, 41, 0.45, 0.55), vec4(57.27, 42, 1.36, 0.65), vec4(58.64, 45, 0.45, 0.64), vec4(59.09, 42, 0.45, 0.6), vec4(59.55, 41, 0.45, 0.61), vec4(60.0, 46, 0.6, 0.64), vec4(60.6, 49, 0.3, 0.65), vec4(60.91, 46, 0.45, 0.56), vec4(61.36, 45, 0.45, 0.59), vec4(61.82, 50, 0.45, 0.6), vec4(62.27, 49, 0.45, 0.59), vec4(62.73, 50, 0.45, 0.61), vec4(63.18, 45, 0.45, 0.54), vec4(63.64, 46, 0.6, 0.64), vec4(64.24, 45, 0.3, 0.6), vec4(64.55, 46, 0.45, 0.61), vec4(65.0, 49, 0.45, 0.61), vec4(65.45, 50, 0.45, 0.62), vec4(65.91, 49, 0.45, 0.61), vec4(66.36, 50, 0.45, 0.62), vec4(66.82, 45, 0.45, 0.55), vec4(67.27, 46, 1.82, 0.64), vec4(69.09, 47, 0.45, 0.61), vec4(69.55, 46, 0.45, 0.61), vec4(70.0, 47, 0.45, 0.6), vec4(70.45, 51, 0.45, 0.64), vec4(70.91, 52, 0.6, 0.62), vec4(71.51, 51, 0.3, 0.57), vec4(71.82, 52, 0.45, 0.65), vec4(72.27, 47, 0.45, 0.57), vec4(72.73, 55, 1.82, 0.65), vec4(74.55, 52, 0.45, 0.54), vec4(75.0, 56, 0.45, 0.63), vec4(75.45, 52, 0.45, 0.54), vec4(75.91, 47, 0.45, 0.55), vec4(76.36, 52, 3.18, 0.64), vec4(79.55, 55, 0.45, 0.63), vec4(80.0, 56, 1.36, 0.61), vec4(81.36, 53, 0.45, 0.57), vec4(81.82, 52, 1.36, 0.59), vec4(83.18, 51, 0.45, 0.56), vec4(83.64, 50, 3.18, 0.61), vec4(86.82, 53, 0.45, 0.63), vec4(87.27, 54, 1.36, 0.63), vec4(88.64, 51, 0.45, 0.57), vec4(89.09, 50, 1.36, 0.57), vec4(90.45, 49, 0.45, 0.57), vec4(90.91, 48, 1.36, 0.57), vec4(92.27, 47, 0.45, 0.58), vec4(92.73, 44, 1.82, 0.51), vec4(94.55, 52, 1.36, 0.68), vec4(95.91, 49, 0.45, 0.6), vec4(96.36, 48, 1.36, 0.61), vec4(97.73, 47, 0.45, 0.66), vec4(98.18, 44, 5.0, 0.54), vec4(103.18, 48, 0.45, 0.66), vec4(103.64, 53, 0.45, 0.67), vec4(104.09, 57, 0.45, 0.68), vec4(104.55, 53, 0.45, 0.56), vec4(105.0, 48, 0.45, 0.57), vec4(105.45, 53, 0.45, 0.65), vec4(105.91, 57, 0.45, 0.62), vec4(106.36, 53, 0.45, 0.58), vec4(106.82, 48, 0.45, 0.55), vec4(107.27, 47, 1.36, 0.57), vec4(108.64, 56, 0.45, 0.64), vec4(109.09, 44, 5.0, 0.54), vec4(114.09, 47, 0.45, 0.61), vec4(114.55, 44, 3.18, 0.58), vec4(117.73, 48, 0.45, 0.63), vec4(118.18, 53, 0.45, 0.65), vec4(118.64, 57, 0.45, 0.65), vec4(119.09, 53, 0.45, 0.59), vec4(119.55, 48, 0.45, 0.55), vec4(120.0, 53, 0.45, 0.66), vec4(120.45, 48, 0.45, 0.57), vec4(120.91, 44, 0.45, 0.54), vec4(121.36, 47, 0.45, 0.64), vec4(121.82, 48, 1.82, 0.62), vec4(123.64, 45, 0.45, 0.56), vec4(124.09, 49, 0.45, 0.64), vec4(124.55, 45, 0.45, 0.54), vec4(125.0, 40, 0.45, 0.57), vec4(125.45, 45, 0.45, 0.65), vec4(125.91, 49, 0.45, 0.68), vec4(126.36, 45, 0.45, 0.56), vec4(126.82, 40, 0.45, 0.55), vec4(127.27, 45, 0.45, 0.65), vec4(127.73, 49, 0.45, 0.67), vec4(128.18, 51, 0.91, 0.63), vec4(129.09, 48, 1.36, 0.59), vec4(130.45, 47, 0.45, 0.56), vec4(130.91, 48, 1.82, 0.6), vec4(132.73, 53, 0.45, 0.65), vec4(133.18, 57, 0.45, 0.65), vec4(133.64, 53, 1.36, 0.57), vec4(135.0, 57, 0.45, 0.61), vec4(135.45, 53, 3.64, 0.57), vec4(139.09, 56, 0.45, 0.59), vec4(139.55, 53, 0.45, 0.57), vec4(140.0, 51, 0.45, 0.58), vec4(140.45, 55, 0.45, 0.63), vec4(140.91, 54, 0.45, 0.58), vec4(141.36, 55, 0.45, 0.6), vec4(141.82, 49, 0.45, 0.53), vec4(142.27, 53, 0.45, 0.64), vec4(142.73, 49, 0.45, 0.55), vec4(143.18, 48, 0.45, 0.61), vec4(143.64, 49, 0.45, 0.59), vec4(144.09, 52, 0.45, 0.61), vec4(144.55, 53, 0.45, 0.6), vec4(145.0, 48, 0.45, 0.57), vec4(145.45, 49, 0.45, 0.6), vec4(145.91, 48, 0.45, 0.56), vec4(146.36, 49, 0.45, 0.61), vec4(146.82, 53, 0.45, 0.64), vec4(147.27, 49, 0.45, 0.55), vec4(147.73, 52, 0.45, 0.59), vec4(148.18, 53, 0.45, 0.59), vec4(148.64, 49, 0.45, 0.57), vec4(149.09, 49, 0.45, 0.59), vec4(149.55, 48, 0.45, 0.58), vec4(150.0, 49, 0.45, 0.62), vec4(150.45, 54, 0.45, 0.62), vec4(150.91, 49, 0.45, 0.54), vec4(151.36, 48, 0.45, 0.56), vec4(151.82, 49, 1.36, 0.63), vec4(153.18, 48, 0.45, 0.63), vec4(153.64, 49, 0.45, 0.59), vec4(154.09, 52, 0.45, 0.61), vec4(154.55, 53, 0.6, 0.6), vec4(155.15, 56, 0.3, 0.64), vec4(155.45, 53, 0.45, 0.6), vec4(155.91, 52, 0.45, 0.62), vec4(156.36, 49, 0.45, 0.57), vec4(156.82, 48, 0.45, 0.59), vec4(157.27, 49, 0.45, 0.62), vec4(157.73, 54, 0.45, 0.65), vec4(158.18, 50, 0.45, 0.6), vec4(158.64, 49, 0.45, 0.59), vec4(159.09, 50, 1.36, 0.61), vec4(160.45, 49, 0.45, 0.6), vec4(160.91, 54, 0.45, 0.62), vec4(161.36, 53, 0.45, 0.6), vec4(161.82, 54, 0.6, 0.58), vec4(162.42, 53, 0.3, 0.59), vec4(162.73, 54, 0.45, 0.61), vec4(163.18, 50, 0.45, 0.54), vec4(163.64, 42, 0.45, 0.55), vec4(164.09, 41, 0.45, 0.55), vec4(164.55, 42, 0.45, 0.62), vec4(165.0, 45, 0.45, 0.61), vec4(165.45, 46, 0.6, 0.61), vec4(166.06, 45, 0.3, 0.57), vec4(166.36, 46, 0.45, 0.61), vec4(166.82, 43, 0.45, 0.59), vec4(167.27, 42, 0.45, 0.55), vec4(167.73, 41, 0.45, 0.6), vec4(168.18, 42, 0.45, 0.64), vec4(168.64, 45, 0.45, 0.64), vec4(169.09, 46, 1.82, 0.62), vec4(170.91, 47, 0.45, 0.64), vec4(171.36, 46, 0.45, 0.59), vec4(171.82, 47, 0.45, 0.64), vec4(172.27, 43, 0.45, 0.58), vec4(172.73, 48, 0.6, 0.64), vec4(173.33, 47, 0.3, 0.53), vec4(173.64, 48, 0.45, 0.58), vec4(174.09, 44, 0.91, 0.57), vec4(175.0, 47, 0.45, 0.58), vec4(175.45, 44, 0.45, 0.57), vec4(175.91, 43, 0.45, 0.55), vec4(176.36, 44, 0.45, 0.61), vec4(176.82, 48, 0.45, 0.65), vec4(177.27, 44, 0.45, 0.57), vec4(177.73, 51, 0.45, 0.65), vec4(178.18, 48, 1.82, 0.55), vec4(180.0, 44, 1.36, 0.55));\nconst vec4 notes10[92] = vec4[92](vec4(0.0, 36, 5.0, 0.53), vec4(5.0, 40, 0.45, 0.64), vec4(5.45, 43, 1.21, 0.63), vec4(6.66, 40, 0.3, 0.57), vec4(6.97, 39, 0.3, 0.58), vec4(7.27, 36, 4.09, 0.57), vec4(11.36, 40, 0.45, 0.61), vec4(11.82, 43, 0.91, 0.65), vec4(12.73, 40, 0.91, 0.6), vec4(13.64, 39, 0.91, 0.54), vec4(14.55, 36, 4.55, 0.57), vec4(19.09, 43, 0.91, 0.62), vec4(20.0, 40, 0.91, 0.58), vec4(20.91, 47, 0.91, 0.65), vec4(21.82, 44, 4.55, 0.6), vec4(26.36, 47, 0.91, 0.61), vec4(27.27, 40, 0.91, 0.59), vec4(28.18, 43, 0.91, 0.61), vec4(29.09, 36, 9.09, 0.54), vec4(38.18, 39, 1.82, 0.61), vec4(40.0, 32, 5.45, 0.57), vec4(45.45, 33, 7.27, 0.6), vec4(52.73, 37, 0.3, 0.64), vec4(53.03, 40, 0.3, 0.62), vec4(53.33, 37, 1.21, 0.55), vec4(54.55, 33, 5.45, 0.58), vec4(60.0, 38, 0.3, 0.63), vec4(60.3, 37, 0.3, 0.55), vec4(60.6, 38, 1.21, 0.61), vec4(61.82, 42, 6.06, 0.64), vec4(67.88, 41, 0.3, 0.6), vec4(68.18, 42, 0.45, 0.61), vec4(68.64, 43, 4.09, 0.62), vec4(72.73, 47, 0.45, 0.61), vec4(73.18, 46, 0.45, 0.6), vec4(73.64, 47, 0.45, 0.58), vec4(74.09, 43, 1.36, 0.57), vec4(75.45, 47, 0.45, 0.64), vec4(75.91, 43, 0.45, 0.54), vec4(76.36, 36, 1.82, 0.58), vec4(78.18, 43, 1.82, 0.66), vec4(80.0, 36, 1.82, 0.55), vec4(81.82, 43, 1.82, 0.65), vec4(83.64, 34, 1.82, 0.57), vec4(85.45, 41, 1.82, 0.65), vec4(87.27, 34, 1.82, 0.6), vec4(89.09, 41, 1.82, 0.65), vec4(90.91, 32, 0.91, 0.55), vec4(91.82, 35, 0.91, 0.59), vec4(92.73, 28, 1.82, 0.55), vec4(94.55, 32, 1.82, 0.59), vec4(96.36, 35, 1.82, 0.63), vec4(98.18, 28, 8.64, 0.54), vec4(106.82, 32, 0.45, 0.65), vec4(107.27, 35, 1.21, 0.61), vec4(108.48, 32, 0.3, 0.58), vec4(108.79, 31, 0.3, 0.61), vec4(109.09, 28, 4.09, 0.58), vec4(113.18, 32, 0.45, 0.62), vec4(113.64, 35, 0.91, 0.6), vec4(114.55, 32, 0.91, 0.58), vec4(115.45, 31, 0.91, 0.6), vec4(116.36, 28, 4.55, 0.61), vec4(120.91, 35, 0.91, 0.63), vec4(121.82, 32, 0.91, 0.59), vec4(122.73, 39, 0.91, 0.64), vec4(123.64, 36, 4.55, 0.6), vec4(128.18, 39, 0.91, 0.62), vec4(129.09, 32, 0.91, 0.53), vec4(130.0, 35, 0.91, 0.61), vec4(130.91, 28, 9.09, 0.57), vec4(140.0, 31, 1.82, 0.61), vec4(141.82, 40, 5.45, 0.65), vec4(147.27, 41, 7.27, 0.61), vec4(154.55, 45, 0.3, 0.62), vec4(154.84, 48, 0.3, 0.64), vec4(155.15, 45, 1.21, 0.61), vec4(156.36, 41, 5.45, 0.58), vec4(161.82, 46, 0.3, 0.66), vec4(162.12, 45, 0.3, 0.61), vec4(162.42, 46, 0.76, 0.6), vec4(163.18, 42, 0.45, 0.56), vec4(163.64, 34, 6.06, 0.56), vec4(169.69, 33, 0.3, 0.55), vec4(170.0, 34, 0.45, 0.61), vec4(170.45, 35, 4.09, 0.62), vec4(174.55, 39, 0.45, 0.61), vec4(175.0, 38, 0.45, 0.58), vec4(175.45, 39, 0.45, 0.59), vec4(175.91, 35, 2.27, 0.56), vec4(178.18, 28, 1.82, 0.58), vec4(180.0, 35, 1.82, 0.64));\nconst vec4 notes11[92] = vec4[92](vec4(0.0, 36, 5.0, 0.54), vec4(5.0, 40, 0.45, 0.61), vec4(5.45, 43, 1.21, 0.61), vec4(6.66, 40, 0.3, 0.59), vec4(6.97, 39, 0.3, 0.6), vec4(7.27, 36, 4.09, 0.57), vec4(11.36, 40, 0.45, 0.65), vec4(11.82, 43, 0.91, 0.64), vec4(12.73, 40, 0.91, 0.55), vec4(13.64, 39, 0.91, 0.57), vec4(14.55, 36, 4.55, 0.57), vec4(19.09, 43, 0.91, 0.65), vec4(20.0, 40, 0.91, 0.55), vec4(20.91, 31, 0.91, 0.52), vec4(21.82, 28, 4.55, 0.6), vec4(26.36, 31, 0.91, 0.61), vec4(27.27, 40, 0.91, 0.68), vec4(28.18, 43, 0.91, 0.64), vec4(29.09, 36, 9.09, 0.56), vec4(38.18, 39, 1.82, 0.65), vec4(40.0, 32, 5.45, 0.58), vec4(45.45, 33, 7.27, 0.61), vec4(52.73, 37, 0.3, 0.64), vec4(53.03, 40, 0.3, 0.62), vec4(53.33, 37, 1.21, 0.57), vec4(54.55, 33, 5.45, 0.52), vec4(60.0, 38, 0.3, 0.64), vec4(60.3, 37, 0.3, 0.58), vec4(60.6, 38, 1.21, 0.61), vec4(61.82, 26, 6.06, 0.5), vec4(67.88, 25, 0.3, 0.57), vec4(68.18, 26, 0.45, 0.62), vec4(68.64, 27, 4.09, 0.62), vec4(72.73, 31, 0.45, 0.65), vec4(73.18, 30, 0.45, 0.58), vec4(73.64, 31, 0.45, 0.64), vec4(74.09, 27, 1.36, 0.53), vec4(75.45, 31, 0.45, 0.65), vec4(75.91, 27, 0.45, 0.56), vec4(76.36, 36, 1.82, 0.61), vec4(78.18, 27, 1.82, 0.52), vec4(80.0, 36, 1.82, 0.66), vec4(81.82, 27, 1.82, 0.53), vec4(83.64, 34, 1.82, 0.67), vec4(85.45, 25, 1.82, 0.53), vec4(87.27, 34, 1.82, 0.67), vec4(89.09, 25, 1.82, 0.55), vec4(90.91, 32, 0.91, 0.65), vec4(91.82, 35, 0.91, 0.58), vec4(92.73, 28, 1.82, 0.53), vec4(94.55, 32, 1.82, 0.62), vec4(96.36, 35, 1.82, 0.63), vec4(98.18, 28, 8.64, 0.51), vec4(106.82, 32, 0.45, 0.64), vec4(107.27, 35, 1.21, 0.62), vec4(108.48, 32, 0.3, 0.58), vec4(108.79, 31, 0.3, 0.57), vec4(109.09, 28, 4.09, 0.59), vec4(113.18, 32, 0.45, 0.65), vec4(113.64, 35, 0.91, 0.64), vec4(114.55, 32, 0.91, 0.57), vec4(115.45, 31, 0.91, 0.59), vec4(116.36, 28, 4.55, 0.58), vec4(120.91, 35, 0.91, 0.63), vec4(121.82, 32, 0.91, 0.61), vec4(122.73, 39, 0.91, 0.66), vec4(123.64, 36, 4.55, 0.58), vec4(128.18, 39, 0.91, 0.61), vec4(129.09, 32, 0.91, 0.57), vec4(130.0, 35, 0.91, 0.64), vec4(130.91, 28, 9.09, 0.54), vec4(140.0, 31, 1.82, 0.62), vec4(141.82, 24, 5.45, 0.56), vec4(147.27, 25, 7.27, 0.61), vec4(154.55, 29, 0.3, 0.61), vec4(154.84, 32, 0.3, 0.65), vec4(155.15, 29, 1.21, 0.56), vec4(156.36, 25, 5.45, 0.57), vec4(161.82, 30, 0.3, 0.61), vec4(162.12, 29, 0.3, 0.59), vec4(162.42, 30, 0.76, 0.61), vec4(163.18, 26, 0.45, 0.57), vec4(163.64, 34, 6.06, 0.67), vec4(169.69, 33, 0.3, 0.6), vec4(170.0, 34, 0.45, 0.59), vec4(170.45, 35, 4.09, 0.61), vec4(174.55, 39, 0.45, 0.66), vec4(175.0, 38, 0.45, 0.59), vec4(175.45, 39, 0.45, 0.57), vec4(175.91, 35, 2.27, 0.57), vec4(178.18, 28, 1.82, 0.57), vec4(180.0, 35, 1.82, 0.63));\n\nconst int sizes[12] = int[12](74,74,74,74,190,3,139,231,145,293,92,92);\n\nvec4 getNoteData(int channel, int n) {\n    switch(channel) {\n        case 0: return notes0[n];\n        case 1: return notes1[n];\n        case 2: return notes2[n];\n        case 3: return notes3[n];\n        case 4: return notes4[n];\n        case 5: return notes5[n];\n        case 6: return notes6[n];\n        case 7: return notes7[n];\n        case 8: return notes8[n];\n        case 9: return notes9[n];\n        case 10: return notes10[n];\n        case 11: return notes11[n];\n        \n    }\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvec4 getNoteBox(vec4 note, float t) {\n    t -= INTRO;\n    float m = 60. / BPM;\n    note.xz *= m;\n    float interval = 2.5 / 88.; \n    return vec4(note.x + note.z / 2. - t,                        \n               (note.y - CENTER) * interval * 2. - interval / 2.,\n                note.z / 2.,\n                interval * 2.);\n}\n\nfloat ndot(vec2 a, vec2 b ) { return a.x*b.x - a.y*b.y; }\nfloat sdRhombus( in vec2 p, in vec2 b ) \n{\n    p = abs(p);\n    float h = clamp( ndot(b-2.0*p,b)/dot(b,b), -1.0, 1.0 );\n    float d = length( p-0.5*b*vec2(1.0-h,1.0+h) );\n    return d * sign( p.x*b.y + p.y*b.x - b.x*b.y );\n}\n\nfloat sdStar5(in vec2 p, in float r, in float rf)\n{\n    const vec2 k1 = vec2(0.809016994375, -0.587785252292);\n    const vec2 k2 = vec2(-k1.x,k1.y);\n    p.x = abs(p.x);\n    p -= 2.0*max(dot(k1,p),0.0)*k1;\n    p -= 2.0*max(dot(k2,p),0.0)*k2;\n    p.x = abs(p.x);\n    p.y -= r;\n    vec2 ba = rf*vec2(-k1.y,k1.x) - vec2(0,1);\n    float h = clamp( dot(p,ba)/dot(ba,ba), 0.0, r );\n    return length(p-ba*h) * sign(p.y*ba.x-p.x*ba.y);\n}\n\nfloat sdSphere(in vec2 p, in float r) {\n    return length(p) - r;\n}\n\nfloat sdNote(in vec2 p, in vec2 wh, in int channel) {\n    float d = sdBox(p, wh);\n    if(channel == 4) d = sdSphere(p, wh.x);\n    if(channel < 3) d = sdRhombus(p, wh);\n    return d;\n}\n\nvec2 rotate(vec2 uv, float th) {\n    return mat2(cos(th), sin(th), -sin(th), cos(th)) * uv;\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat noteToFrequency(float n) {\n    return 440. * exp2((n-60.)/12.);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "#define pi 3.14159\n\n\n// Various temperaments, expressed as the number of cents from which they differ\n// from the equal temperament.\n// https://en.wikipedia.org/wiki/Musical_temperament\n\n// 12-tone equal temperament\nconst float[] adjustment = float[12](0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);\n\n//Five-limit tuning: unpleasant intervals appear when modulating\n//const float[] adjustment = float[12](0., 12., 4., 16., -14., -2., -10., 2., 14., -16., 18., -12.);\n\n// 1/4 comma meantone\n//const float[] adjustment = float[12](0., 16., -6., 10., -13., 3., -19., -3., 13., -10., 6., -16.);\n\nfloat pitch(float i)\n{\n    // Chromatic scale degree within the G minor scale.\n    // Goes from 0 (note B) to 11 (note A#).\n    int degree = int(mod(i + 1., TET));\n    // Baroque tuning (middle A = 415hz vs 440hz)\n    // Adjust each degree with the number of cents prescribed.\n    return 440. * pow(2., (i - (70.) + 0.01*adjustment[degree]) / TET);\n}\n\nvec2 wave(vec2 f, vec2 a, float time)\n{\n    vec2 w = 2.*pi*fract(f * time);\n    //float v = pow(abs(sin(w / 2.)), 8.) - .5;\n    //float v = pow(max(0., (sin(w) + 1.) / 2.), 2.) - .5;\n    vec2 sw = sin(w/2.);\n    vec2 sw2 = sw*sw;\n    vec2 v = sw2*sw2 - .375; // Remove DC offset\n    //vec2 v = sw2*sw2*sw2 - .3125; // Remove DC offset\n    a *= sqrt(clamp(800./f, 1., 10.));\n    return a * v;\n}\n\nvec2 organ(vec2 f, float time)\n{\n    vec2 sound = vec2(0);\n    sound += wave(f, vec2(.08), time);\n    sound += wave(f * 2., vec2(0.8,1)*.01, time);\n    sound += wave(f * 4., vec2(.004), time);\n    sound += wave(f * .5, vec2(1,0.5)*.008, time);\n    return sound;\n}\n\n\nvec2 mainSound(int samp, float time)\n{\n    vec2 sound = vec2(0);\n\n    float t = time - INTRO;\n    t *= BPM / 60.;\n    for(int channel = 0; channel < CHANNELS; channel++)\n        for (int i=min(0, int(iSampleRate)) ; i<sizes[channel]; ++i)\n        {\n            vec4 note = getNoteData(channel, i);\n            note.y;\n            if (note.w == -1.)\n                continue;\n            if (note.x < t && t < note.x + note.z  + 5.)\n            {\n                float f = pitch(note.y);\n                float velocity = note.w;\n                // Add random pitch variation per note,\n                // so that if several notes with the same pitch are\n                // played at the same time, they are still\n                // decorrelated.\n                // Otherwise the combined tone sounds too loud\n                // (amplitude proportional to n, instead of sqrt(n)).\n                f += 0.3*sin(float(i));\n\n                float pos = sin(note.w);\n                vec2 pan = sqrt(vec2(1) + 0.5*vec2(1,-1)*pos);\n\n\n                float t_in = t - note.x; // Time since attack\n                float t_out = t_in - note.z; // Time since release\n                float env = smoothstep(0., .05, t_in) * smoothstep(.05,0.,t_out);\n                sound += velocity * pan*env*organ(vec2(f), time);\n                float rtime = 0.1 + smoothstep(100.,400.,f);\n                float rtau = 99./rtime; // Reverb decay time: lower for bass notes\n                float env_verb = clamp(1.-exp(-t_in*rtau),0.,1.)*clamp(exp(-t_out*rtau),0.,1.);\n                sound += velocity * 0.5 * rtime * env_verb * organ(f+vec2(-.2,.32), time);\n\n            }\n        }\n\n    return sound;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}