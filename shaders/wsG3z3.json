{
    "Shader": {
        "info": {
            "date": "1570635350",
            "description": "note that the full SDF distance would be more complicated.",
            "flags": 0,
            "hasliked": 0,
            "id": "wsG3z3",
            "likes": 4,
            "name": "draw triangle 2",
            "published": 3,
            "tags": [
                "triangle",
                "distance"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 674
        },
        "renderpass": [
            {
                "code": "vec2 R;\n\n#define S(d) smoothstep( 1., -1., d*R.y)                   // antialiased draw\nfloat cross2(vec2 a,vec2 b) { return a.x*b.y - a.y*b.x; }  // 2D cross product (so stupid built-in is only for vec3 )\n\n#if 0 // variant 1\n\nfloat triangle(vec2 p, vec2 a, vec2 b, vec2 c) {           // --- draw triangle \n    if ( cross2(c-a,b-a) < 0. ) { vec2 t=b; b=a; a=t; }    // make triangle direct\n    float d  = cross2(p-a,b-a)/length(b-a);\n    d = min(d, cross2(p-b,c-b)/length(c-b) );\n    d = min(d, cross2(p-c,a-c)/length(a-c) );              // inside distance to closest border\n    return S(-d);                                          // draw \n}\n\n#else // variant 2\n\n#define B(p,a,b) S(-cross2( p-a, normalize(b-a) ) )\nfloat triangle(vec2 p, vec2 a, vec2 b, vec2 c) {           // --- draw triangle \n    if ( cross2(c-a,b-a) < 0. ) { vec2 t=b; b=a; a=t; }    // make triangle direct\n    return   B(p,a,b) * B(p,b,c) * B(p,c,a);               // combines 3 half-planes\n}\n\n#endif\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    R = iResolution.xy;\n    vec2 U = u/R.y;\n    float t = iTime+5.;\n    O += triangle(U, vec2(.1),vec2(.8,.6)+.4*vec2(cos(t),sin(t)), vec2(1.3,.9));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}