{
    "Shader": {
        "info": {
            "date": "1502069257",
            "description": "Attempt to remove bright lights",
            "flags": 34,
            "hasliked": 0,
            "id": "lsjfWy",
            "likes": 1,
            "name": "Light streak reduction",
            "published": 3,
            "tags": [
                "demo"
            ],
            "usePreview": 0,
            "username": "vii",
            "viewed": 1188
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 duv = vec2(1.0)/200.0;\n  \n    vec4 aa = texture(iChannel1, uv - duv);\n    vec4 ab = texture(iChannel1, uv - vec2(duv.x, 0));\n    vec4 ba = texture(iChannel1, uv - vec2(0, duv.y));\n    vec4 bb = texture(iChannel1, uv);\n    vec4 cc = texture(iChannel1, uv + duv);\n    vec4 cb = texture(iChannel1, uv + vec2(duv.x, 0));\n    vec4 bc = texture(iChannel1, uv + vec2(0, duv.y));\n    vec4 ca = texture(iChannel1, uv + vec2(duv.x, -duv.y));\n    vec4 ac = texture(iChannel1, uv + vec2(-duv.x, duv.y));\n    \n\tvec4 lowest = bb;\n    lowest = min(lowest, aa);\n    lowest = min(lowest, ab);\n    lowest = min(lowest, ba);\n    lowest = min(lowest, cc);\n    lowest = min(lowest, cb);\n    lowest = min(lowest, bc);\n    lowest = min(lowest, ca);\n    lowest = min(lowest, ac);\n\n    fragColor = (aa + ab + ba + cc + cb + bc + ca + ac + bb + lowest*4.)/13.0;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 duv = vec2(3.0, 3.0)/100.0;\n    \n    vec4 aa = texture(iChannel0, uv - duv);\n    vec4 ab = texture(iChannel0, uv - vec2(duv.x, 0));\n    vec4 ba = texture(iChannel0, uv - vec2(0, duv.y));\n    vec4 bb = texture(iChannel0, uv);\n    vec4 cc = texture(iChannel0, uv + duv);\n    vec4 cb = texture(iChannel0, uv + vec2(duv.x, 0));\n    vec4 bc = texture(iChannel0, uv + vec2(0, duv.y));\n    vec4 ca = texture(iChannel0, uv + vec2(duv.x, -duv.y));\n    vec4 ac = texture(iChannel0, uv + vec2(-duv.x, duv.y));\n    \n\tvec4 lowest = bb;\n    lowest = min(lowest, aa);\n    lowest = min(lowest, ab);\n    lowest = min(lowest, ba);\n    lowest = min(lowest, cc);\n    lowest = min(lowest, cb);\n    lowest = min(lowest, bc);\n    lowest = min(lowest, ca);\n    lowest = min(lowest, ac);\n\n    if (dot(lowest, lowest) > 2.5) {\n\t    fragColor = vec4(1.0);\n    } else {\n        fragColor = vec4(0.0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}