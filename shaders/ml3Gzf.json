{
    "Shader": {
        "info": {
            "date": "1683321240",
            "description": "test of offset in texture tilling",
            "flags": 0,
            "hasliked": 0,
            "id": "ml3Gzf",
            "likes": 3,
            "name": "less repetitive texture tilling",
            "published": 3,
            "tags": [
                "texture",
                "tilling"
            ],
            "usePreview": 1,
            "username": "mdb",
            "viewed": 205
        },
        "renderpass": [
            {
                "code": "vec2 getOffset(vec2 p){\n    return vec2(fract(sin(p.x*946336.+6.+p.y*334747.)), \n                fract(sin(p.x*756854. + p.y*95236.+1.)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv*=6.;\n    \n    float overlap = 0.1;\n    \n    float w = 0.;\n    vec3 col = vec3(0.);\n    vec2 uvf = fract(uv);\n    for(int i=-1; i<=1; i++){\n        for(int j=-1; j<=1; j++){\n            vec2 off = vec2(i, j);\n            vec2 uv2 = off+vec2((i==0)?uvf.x:1.-uvf.x, (j==0)?uvf.y:1.-uvf.y);\n            \n            \n            float weight = (1. - smoothstep(0., overlap, abs(uvf.x - uv2.x)))\n                          *(1. - smoothstep(0., overlap, abs(uvf.y - uv2.y)));\n            \n            w += weight;\n            col += weight*texture(iChannel0, uvf+getOffset(floor(uv)+off)).rgb;\n        }\n    }\n    col /= w;\n    //test\n    if(fragCoord.x/iResolution.x < 0.5) col = texture(iChannel0, uv).rgb; \n    if(abs(fragCoord.x/iResolution.x-0.5) < 0.001) col = vec3(1.000,0.808,0.478);\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}