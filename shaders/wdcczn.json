{
    "Shader": {
        "info": {
            "date": "1605110015",
            "description": "Minimal code for a grid (Used for debugging purposes)",
            "flags": 0,
            "hasliked": 0,
            "id": "wdcczn",
            "likes": 2,
            "name": "Sin transition",
            "published": 3,
            "tags": [
                "grid"
            ],
            "usePreview": 0,
            "username": "ElMehdiBouamama",
            "viewed": 296
        },
        "renderpass": [
            {
                "code": "#define grid_opacity 1.\n#define anti_aliasing 0.007\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - iResolution.xy * 0.5)/iResolution.y;\n\tuv *= 10.;\n    // Time varying pixel color\n    float distance = length(uv);\n    \n    float y = sin(iTime) * abs(distance * (uv.y + uv.y)) + cos(iTime);\n    float x = cos(iTime) * abs(distance * (uv.x + uv.x)) + sin(iTime);\n\tfloat angle = atan(atan(x),atan(y));\n    \n    float color = fract(atan(distance,angle));\n\tfloat colo = fract(fract(angle)*(uv.x-uv.y));\n    //color *= atan(colo);\n    vec3 col = vec3(color,0., .6) * 1.3;\n    // Output to screens\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}