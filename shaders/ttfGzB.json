{
    "Shader": {
        "info": {
            "date": "1556697188",
            "description": "periodical change rules",
            "flags": 32,
            "hasliked": 0,
            "id": "ttfGzB",
            "likes": 9,
            "name": "Conway experiments",
            "published": 3,
            "tags": [
                "simple",
                "life",
                "conway",
                "learn"
            ],
            "usePreview": 0,
            "username": "avin",
            "viewed": 570
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 rand( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 co = ivec2(fragCoord);\n    vec3 col = texelFetch(iChannel0, co, 0).rgb *.9; // stay for motion blur\n    vec2 uv = (fragCoord - iResolution.xy*.5)/iResolution.y;\n    \n    vec2 backRes = texelFetch(iChannel1, ivec2(0,0), 0).xy;\n    if(iFrame == 0 || backRes.xy != iResolution.xy){                \n    \tcol = rand(fragCoord).x > .5 ? vec3(1.) : vec3(0.);           \n    } else {            \n        \n        float orig = texelFetch(iChannel0, co, 0).r;\n        \n        int count = 0;\n        \n        for(int y = -1; y<=1; y+=1){\n            for(int x = -1; x<=1; x+=1){\n                if(!(y==0 && x==0)){\n                    ivec2 target = co+ivec2(x,y);\n                    target.x = int(mod(float(target.x), iResolution.x));\n                    target.y = int(mod(float(target.y), iResolution.y));\n                    \n                    float p = texelFetch(iChannel0, target, 0).r;                    \n                    count += p == 1. ? 1 : 0;\n                }\n            }\n        }\n                \n        float m1 = floor(length(uv) * (sin(iTime*2.)*.5+.5)*5.5);\n        \n        float c = float(count);\n        \n        if((orig != 1. && c == 3. ) || (orig == 1. && (c >= 2. && c <= 3. + m1))){\n            \n        \tcol = vec3(1.);\n        }        \n    }\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// Store resolution here to catch resize canvas\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(iResolution.xy,1.0,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}