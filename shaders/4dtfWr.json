{
    "Shader": {
        "info": {
            "date": "1524727656",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "4dtfWr",
            "likes": 6,
            "name": "catadioptre 3d",
            "published": 3,
            "tags": [
                "raymarching",
                "sdf",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 555
        },
        "renderpass": [
            {
                "code": "// variant of https://shadertoy.com/view/lscfDr\n\n#define C      max(max(a.x,a.y),a.z)\n#define B(x,r) t = min(t, ( a = abs(q), a.x/=r, C ) ) // or just max.yz\n                                              // NB: /r is bad. but cause a cool glow :-)\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float t = iTime,v, g=0.;\n    mat2  R = mat2( sin(t+vec4(0,33,11,0)) );\n    vec3  q = iResolution,\n          D = vec3(.3*(U+U-q.xy)/q.y, -1),    // ray direction\n          p = 30./q, a;                       // marching point along ray \n    O-=O;\n    for ( O++; O.x > 0. && t > .01 ; O-=.015 )\n        q = p,\n        q.xz *= R, q.yz *= R,                 // rotation\n        a = abs(q), // v = C - 5.,            // bounding cube\n        a = abs(a-3.), t = C,                 // 8 small cubes\n        B(x,5.), B(y,5.), B(z,5.)-1.,         // 3 boxes\n      //t = max(v,t),\n        v = C-5., g += exp(-v*v),             // glow\n        p += t*D;                             // step forward = dist to obj\n\n  //O.r += .02*g;                             // glow\n  //v = C-5.; O.r += exp(-v*v);\n\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}