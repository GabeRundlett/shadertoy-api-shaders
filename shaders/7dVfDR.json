{
    "Shader": {
        "info": {
            "date": "1658047526",
            "description": "Display \"Hello, world!\" overlaid on top of an arbitrary background.",
            "flags": 0,
            "hasliked": 0,
            "id": "7dVfDR",
            "likes": 2,
            "name": "Overlaid text",
            "published": 3,
            "tags": [
                "text",
                "beginner",
                "helloworld"
            ],
            "usePreview": 0,
            "username": "u004fu0077u004f",
            "viewed": 207
        },
        "renderpass": [
            {
                "code": "// This is one of my first shaders.\n// Special thanks to FabriceNeyret2's <https://www.shadertoy.com/view/llySRh>\n// Special thanks to PrzemyslawZaworski's <https://www.shadertoy.com/view/4sBfRd>\n#define CHARACTERS_WIDE 16\n#define CHARACTERS_WIDE_F float(CHARACTERS_WIDE)\n#define CHARACTER_WIDTH 1./CHARACTERS_WIDE_F\n#define CHARACTERS_TALL 16\n#define CHARACTERS_TALL_F float(CHARACTERS_TALL)\n#define CHARACTER_HEIGHT 1./CHARACTERS_TALL_F\nvoid draw_character(inout vec4 color, in vec2 uv, in vec2 pos, in uint index) {\n    uv -= pos;\n    if (uv.x < 0. || uv.y < 0. || uv.x >= CHARACTER_WIDTH || uv.y >= CHARACTER_HEIGHT) return;\n    uv.x += mod(float(index), CHARACTERS_WIDE_F)*CHARACTER_WIDTH;\n    uv.y += (CHARACTERS_TALL_F-floor(float(index)/CHARACTERS_TALL_F)-1.)*CHARACTER_HEIGHT;\n    color.rgb = texture(iChannel0, uv).rrr;\n}\n#define C(index) {\\\n    draw_character(color, uv, pos, index);\\\n    pos.x += CHARACTER_WIDTH;\\\n}\n#define STRETCH 0\n#define FIT 1\n#define FILL 2\n#define MODE FILL\nvoid mainImage(out vec4 color, in vec2 uv) {\n    #if MODE == STRETCH\n        uv /= iResolution.xy;\n    #elif MODE == FIT\n        uv /= iResolution.y;\n        uv.x += iResolution.y/iResolution.x-1.; // Doesn't work as expected.\n        uv = mod(uv, 1.);\n    #elif MODE == FILL\n        uv /= iResolution.x;\n        uv.y -= iResolution.x/iResolution.y-2.;\n    #endif\n    color = texture(iChannel1, uv);\n    //color = vec4(uv.x, uv.y, 0., 1.);\n    vec2 pos = vec2(0., .5-CHARACTER_HEIGHT/2.);\n    C(0x48U);C(0x65U);C(0x6cU);C(0x6cU);C(0x6fU);C(0x2cU);C(0x20U);C(0x77U);C(0x6fU);C(0x72U);C(0x6cU);C(0x64U);C(0x21U);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}