{
    "Shader": {
        "info": {
            "date": "1706550862",
            "description": "here in shadertoy, but easy to use elsewhere :)",
            "flags": 0,
            "hasliked": 0,
            "id": "XfjSzK",
            "likes": 1,
            "name": "animated reticle, square->circle",
            "published": 3,
            "tags": [
                "animated",
                "reticle",
                "sdftransition"
            ],
            "usePreview": 0,
            "username": "cedric_h",
            "viewed": 180
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592653589793\n#define THICKNESS 0.1\n\n// b.x = width\n// b.y = height\n// r.x = roundness top-right  \n// r.y = roundness boottom-right\n// r.z = roundness top-left\n// r.w = roundness bottom-left\nfloat sdRoundBox( in vec2 p, in vec2 b, in vec4 r ) \n{\n    r.xy = (p.x>0.0)?r.xy : r.zw;\n    r.x  = (p.y>0.0)?r.x  : r.y;\n    vec2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\n}\n\nfloat sdCross( in vec2 p, in vec2 b, float r ) \n{\n    p = abs(p); p = (p.y>p.x) ? p.yx : p.xy;\n    \n\tvec2  q = p - b;\n    float k = max(q.y,q.x);\n    vec2  w = (k>0.0) ? q : vec2(b.y-p.x,-k);\n    float d = length(max(w,0.0));\n    return ((k>0.0)?d:-d) + r;\n}\n\nfloat opSubtraction( float d1, float d2 )\n{\n    return max(-d1,d2);\n}\n\nfloat opOnion( in float p, in float r )\n{\n  return abs(p) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 m = (2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n    \n    float transition = (sin(iTime/0.5) + 1.0) / 2.0;\n\n\tfloat d = opOnion(sdRoundBox( p, vec2(1.0, 1.0), vec4(transition) ) + THICKNESS, THICKNESS);\n    d = opSubtraction(sdCross( p, vec2(1.5, 0.15), 0.0 ), d);\n\n    vec3 col = (d>0.0) ? vec3(0.0, 0.0, 0.0) : vec3(0.95,0.55,0.25);\n\n\tfragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}