{
    "Shader": {
        "info": {
            "date": "1721658751",
            "description": "small mandelbrot implementation, essentials only (location, scale, color theme)",
            "flags": 0,
            "hasliked": 0,
            "id": "4cfcWf",
            "likes": 1,
            "name": "Mandelbrot Minimal",
            "published": 3,
            "tags": [
                "2d",
                "mandelbrot"
            ],
            "usePreview": 0,
            "username": "draradech",
            "viewed": 105
        },
        "renderpass": [
            {
                "code": "#define  ITER   5000.\n#define  ESCA   1000.\n#define  LOCA   vec2(-.74635054, .098537);\n#define  SCAL   .00051\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (2. * fragCoord - iResolution.xy) / min(iResolution.y, iResolution.x);\n    vec2 c = SCAL * uv + LOCA;\n    vec2 z = c;\n    vec2 zz;\n    float n;\n    for (n = 0.; n < ITER; n++)\n    {\n        zz = vec2(z.x * z.x, z.y * z.y);\n        if(zz.x + zz.y > ESCA) break;\n        z = vec2(zz.x - zz.y, 2. * z.x * z.y) + c;\n    }\n    n -= log(zz.x + zz.y) / log(ESCA) + 30.;\n    n /= 800.;\n    fragColor = vec4(pow(n, 1.5), pow(n, .4), pow(n, .2), 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}