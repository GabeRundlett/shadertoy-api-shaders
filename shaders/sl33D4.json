{
    "Shader": {
        "info": {
            "date": "1636122677",
            "description": "e",
            "flags": 0,
            "hasliked": 0,
            "id": "sl33D4",
            "likes": 0,
            "name": "Pixel Spiral Test",
            "published": 3,
            "tags": [
                "ee"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 254
        },
        "renderpass": [
            {
                "code": "float thc(float a, float b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nfloat ths(float a, float b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float c = 5. + 1. * thc(2., 0.8 * iTime);\n    float l = mix(4. * length(uv) * length(uv), 1. / (1. + length(uv)), .5 + .5 * thc(3., iTime));\n    uv = vec2(ths(3., c * uv.x * l), ths(3., c * uv.y * l));\n    \n    float sc = 64.;\n    vec2 fpos = fract(sc * uv) - 0.5;\n    vec2 ipos = floor(sc * uv) + 0.5;\n    \n    float a = atan(ipos.y, ipos.x);\n    float r = log(cos(10. * length(ipos)/sc + 4. * iTime) + thc(3.,30. * length(ipos)/sc + 2. * a + iTime));//log(length(ipos));\n   \n    vec2 v = r * vec2(cos(a), sin(a));\n    \n    float d = length(v);\n    d = clamp(d, 0., 1.);\n    float s = step(d,0.74 -.25 * thc(4., iTime));\n    \n    vec3 col = vec3(s);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}