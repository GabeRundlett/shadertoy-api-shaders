{
    "Shader": {
        "info": {
            "date": "1641727659",
            "description": "My participation to genuary 2022",
            "flags": 0,
            "hasliked": 0,
            "id": "7slyR8",
            "likes": 8,
            "name": "Genuary 2022 - Day8",
            "published": 3,
            "tags": [
                "generative",
                "genuary",
                "2022",
                "singlecurve"
            ],
            "usePreview": 0,
            "username": "z0rg",
            "viewed": 288
        },
        "renderpass": [
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\n#define sat(a) clamp(a, 0.,1.)\nfloat time;\n\n// Thanks IQ\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nvec3 rdr(vec2 uv)\n{\n    vec3 col = vec3(0.);\n    \n    for (int i = 0; i < 16; ++i)\n    {\n\n        float f = (float(i)/16.-.5)*2.*.5;//+iTime*.5+float(i+1)*iTime*.1;\n        vec2 a = vec2(f-.5, sin(f+time)*.1);\n        vec2 b = vec2(f+.5,  sin(f*3.+time+1.)*.2);\n        float shape = sdSegment(uv, a,b)-.001;\n        col = mix(col, vec3(1.), 1.-sat(shape*iResolution.x*.5));\n    \n    }\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    time = iTime*2.;\n    float off = .05;//sin(iTime)*.1;\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.xx;\n\n    vec3 col = vec3(0.);\n    col.x = rdr(uv).x;\n    time = time+off;\n    col.y = rdr(uv).y;\n    time = time+off*2.;\n    col.z = rdr(uv).z;\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}