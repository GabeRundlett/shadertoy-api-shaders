{
    "Shader": {
        "info": {
            "date": "1647830359",
            "description": "A fractal with leaf and star patterns.",
            "flags": 0,
            "hasliked": 0,
            "id": "NlscWr",
            "likes": 4,
            "name": "Leaves and stars",
            "published": 3,
            "tags": [
                "fractal",
                "knot"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 335
        },
        "renderpass": [
            {
                "code": "//change these constants to get different patterns!\n#define c1 vec3(1.,0.5,1.5)\n\nvec2 triangle_wave(vec2 a,float scale){\n    return abs(fract((a+c1.xy)*scale)-.5);\n    //return abs(fract((a+c1.xy)*scale+iTime/500.)-.5); //morphing\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 8.*4.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = c1.z;\n\n    vec2 t2 = vec2(0.);\n        vec2 t3 = vec2(0.);   \n        for(int k = 0; k < 12; k++){\n            vec2 uv1 = uv;\n            uv -= (t2.yx);\n            //uv.x += sign(uv.x)/2.;\n\n            //uv -= (t2.yx)/(1.+(t2.x-t2.y)/4.);\n            vec2 temp = t2*t3;\n            t2 = triangle_wave(uv.yx+.5,scale);\n            t3 = triangle_wave(uv,scale);\n            //t2 = triangle_wave(uv.yx+.5,scale)/(1.+t2);\n            //t3 = triangle_wave(uv,scale)/(1.+t3);\n            \n            uv.yx = t3-t2/2.;\n            //uv /= 1.+temp;\n            //uv -= uv.yx/8.;\n\n        col.x = max((uv.x-uv.y),col.x);\n        col = abs(col.yzx-vec3(col.x*(2.)));\n        \n        //col.x = abs(uv.x+uv.y-col.x*2.);\n        //col = abs(1.-col.yzx);\n        \n        uv /= scale*scale;\n        //uv -= ceil(t2.x*t2.y+2.)/2.; //mosaic pattern\n        //uv /= 1.+temp.yx;\n      }\n    fragColor = vec4(abs(col),1.0);   \n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}