{
    "Shader": {
        "info": {
            "date": "1676060411",
            "description": "A shader that generates black and white ripples.",
            "flags": 0,
            "hasliked": 0,
            "id": "mtBXDW",
            "likes": 2,
            "name": "Black and White Simple Ripples",
            "published": 3,
            "tags": [
                "waves",
                "ripples",
                "sound",
                "interference",
                "physics"
            ],
            "usePreview": 0,
            "username": "alexisupsidedown",
            "viewed": 180
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265358979323846\n#define RIPPLE_AMOUNT 10.0\n\n#define ADD_SECOND_SOURCE\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.yy;\n    vec2 mouse_uv = iMouse.xy / iResolution.yy; // think of the mouse_uv as an offset from 0,0\n    vec3 color = vec3(0.0);\n    \n    {\n        float d = distance(uv, mouse_uv); // suggestion by @eo\n        float sine = sin((RIPPLE_AMOUNT * d - iTime) * PI);\n        color += vec3(sine); // suggestion by @eo\n    }\n    \n    #ifdef ADD_SECOND_SOURCE\n    {\n        float d = distance(uv, vec2(.5));\n        float sine = sin((RIPPLE_AMOUNT * d - iTime) * PI);\n        color += vec3(sine);\n    }\n    #endif\n    \n    // normalise - from -1..1 to 0..1\n    color = vec3(0.5 + 0.5 * color.r); // suggestion by @eo\n    \n    // thank you @eo for cleaning up my code :D\n    \n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}