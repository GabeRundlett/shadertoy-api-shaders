{
    "Shader": {
        "info": {
            "date": "1643736239",
            "description": "not physically accurate, but looks nice",
            "flags": 0,
            "hasliked": 0,
            "id": "sd2yzy",
            "likes": 16,
            "name": "Stateless Balls",
            "published": 3,
            "tags": [
                "balls",
                "bounce",
                "physics",
                "timeinvariant"
            ],
            "usePreview": 0,
            "username": "me_123",
            "viewed": 321
        },
        "renderpass": [
            {
                "code": "float t(in float x) { // triangle wave\n    return abs(fract(0.5*x)-0.5)*2.;\n}\nfloat b(in float x) {\n    return 1.-((pow((fract((0.5*x)+0.5)-0.5), 2.0))*4.0);\n}\nfloat hash(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * 0.2324);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n\n    // Time varying pixel color\n    float c = 1.0;\n    if (uv.x > 1.) {\n        return;\n    }\n    for (float i = 0.; i < 10.; i += 1.) {\n        vec2 p = vec2(hash(vec2(i, 0)), hash(vec2(i, 1)));\n        vec2 v = vec2(hash(vec2(i+.1, 0))-0.5, hash(vec2(i+.1, .1))-0.5);\n        c = min(c, length(uv-vec2(t(p.x+v.x*iTime), b(p.y+(v.y-iTime)+v.y)*p.y)));\n    }\n    fragColor = vec4(vec3(c-0.02)*300.,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}