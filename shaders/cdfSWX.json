{
    "Shader": {
        "info": {
            "date": "1669618624",
            "description": "ref to https://www.shadertoy.com/view/lsS3WV",
            "flags": 0,
            "hasliked": 0,
            "id": "cdfSWX",
            "likes": 3,
            "name": "odos | spiral2",
            "published": 3,
            "tags": [
                "spiral",
                "archimedes"
            ],
            "usePreview": 0,
            "username": "ErinZ",
            "viewed": 318
        },
        "renderpass": [
            {
                "code": "#define S(v,r) smoothstep( r, r+ 3./iResolution.y, v )\nfloat logo(vec2 uv);\nconst float kRadius = 0.4;\nconst float kPi = 3.14159;\nconst float k2Pi = kPi*2.0;\nconst float kA = kRadius / kPi;\n\nconst float rotatespeed = 1.5;\n\nfloat random (vec2 uv)\n{\n    return fract(sin(dot(uv.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nvec2 rotate(vec2 uv, float th) {\n  return mat2(cos(th), sin(th), -sin(th), cos(th)) * uv;\n}\n\nfloat arclength(float a, float theta) {\n\tfloat d = theta * sqrt(abs(1.0 - theta*theta));\n\treturn 0.5 * a * (d*2.0 + log(d));\n}\n\nvec3 spiral(vec2 uv)\n{\n    float ang = atan(uv.y,uv.x);\n    float turn = (length(uv)/kRadius - ang/k2Pi);\n    ang += ceil(turn)*k2Pi;\n\tfloat d = arclength(kA, ang)  - iTime * rotatespeed;\n\treturn vec3(fract(d), fract(turn),floor(d));\n}\nfloat dot2( in vec2 v ) { return dot(v,v); }\n//https://www.shadertoy.com/view/NslXDM\nfloat sdRoundedCross( in vec2 p, in float h )\n{\n    float k = 0.5*(h+1.0/h); // k should be const at modeling time\n    p = abs(p);\n    return ( p.x<1.0 && p.y<p.x*(k-h)+h ) ? \n             k-sqrt(dot2(p-vec2(1,k)))  :\n           sqrt(min(dot2(p-vec2(0,h)),\n                    dot2(p-vec2(1,0))));\n}\n\n//https://iquilezles.org/articles/palettes\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    vec3 spiral_uv = spiral(uv)-0.5;\n    vec2 uv1 = spiral_uv.xy;\n    float offset = abs(fract(iTime*0.5)-0.5)*0.2+0.2;\n    float startex = smoothstep(0.1,0.05,sdRoundedCross(uv1,1.0)+offset);\n    float index = spiral_uv.z;\n    vec3 starcolor = (spiral_uv.y+0.3) *\n              pal(random(vec2(index)), \n                  vec3(0.9,0.7,0.4),\n                  vec3(0.8,0.2,0.9),\n                  vec3(1.0,1.0,1.0),\n                  vec3(0.3,0.3,0.6) );;\n    starcolor = mix(starcolor,vec3(0.2,0.7,1.0),0.5);\n\n    vec3 col = startex*starcolor;\n    col +=logo(uv);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n \nfloat logo(vec2 uv){\nfloat n = 0.;\nn += S(.05,abs(length(uv-vec2(-1.23,0))-.12));\nn *= 1.-S(-1.25,uv.x);\nn += S(.17,abs(uv.y))*S(.05,abs(uv.x+1.29));\nn += S(.05,abs(length(uv-vec2(-1.5,0))-.12));\nn += S(.05,abs(length(uv-vec2(-0.9,0))-.12));\nn += (1.+S(-.6,uv.x)-S(.05,uv.y))*S(.05,abs(length(uv-vec2(-0.6,.03))-.09));\nn += (1.-S(-.6,uv.x)+S(-.05,uv.y))*S(.05,abs(length(uv-vec2(-0.6,-.04))-.09));\nreturn n;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}