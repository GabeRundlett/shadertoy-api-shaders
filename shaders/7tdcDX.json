{
    "Shader": {
        "info": {
            "date": "1660699935",
            "description": "2 layers across time of 3x3+4 pixel grid",
            "flags": 32,
            "hasliked": 0,
            "id": "7tdcDX",
            "likes": 4,
            "name": "team sparkle",
            "published": 3,
            "tags": [
                "automata"
            ],
            "usePreview": 0,
            "username": "lomateron",
            "viewed": 217
        },
        "renderpass": [
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = A(fragCoord);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec2 v = 1.*(u        *2.-iResolution.xy)/iResolution.y;\n    vec2 m = 1.*(iMouse.xy*2.-iResolution.xy)/iResolution.y;\n\n    vec4 a = +A(u+vec2( 1, 0))\n             +A(u+vec2( 0, 1))\n             +A(u+vec2(-1, 0))\n             +A(u+vec2( 0,-1))\n             +A(u+vec2( 1, 1))\n             +A(u+vec2(-1, 1))\n             +A(u+vec2( 1,-1))\n             +A(u+vec2(-1,-1))\n             +A(u+vec2( 0, 0))\n             \n             +A(u+vec2( 2, 0))\n             +A(u+vec2( 0, 2))\n             +A(u+vec2(-2, 0))\n             +A(u+vec2( 0,-2));\n    uint s = uint(dot(a,vec4(1,1,0,0))+.1);\n    vec4 o = A(u+vec2(0,0)).xxyz;\n         o.x=float((+8U*4U*8U*4U* 16U //mod 7U to get similar world\n                    +8U*4U*8U*    0U\n                    +8U*4U*       0U\n                    +8U*          3U\n                    +             5U>>s)&1U);\n\n    if(iFrame==0||iMouse.z>.5)\n    {\n        o = floor(fract(cos(dot(u,vec2(1.76543,iTime+1.5363)))*vec4(2467.5678,\n                                                                    3467.5678,\n                                                                    4467.5678,\n                                                                    5467.5678))+.5);\n        o*= step(dot(v,v),dot(m,m)*.1);\n    }\n    fragColor = o;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec2 v = 1.*(u        *2.-iResolution.xy)/iResolution.y;\n    vec2 m = 1.*(iMouse.xy*2.-iResolution.xy)/iResolution.y;\n\n    vec4 a = +A(u+vec2( 1, 0))\n             +A(u+vec2( 0, 1))\n             +A(u+vec2(-1, 0))\n             +A(u+vec2( 0,-1))\n             +A(u+vec2( 1, 1))\n             +A(u+vec2(-1, 1))\n             +A(u+vec2( 1,-1))\n             +A(u+vec2(-1,-1))\n             +A(u+vec2( 0, 0))\n             \n             +A(u+vec2( 2, 0))\n             +A(u+vec2( 0, 2))\n             +A(u+vec2(-2, 0))\n             +A(u+vec2( 0,-2));\n    uint s = uint(dot(a,vec4(1,1,0,0))+.1);\n    vec4 o = A(u+vec2(0,0)).xxyz;\n         o.x=float((+8U*4U*8U*4U* 16U //mod 7U to get similar world\n                    +8U*4U*8U*    0U\n                    +8U*4U*       0U\n                    +8U*          3U\n                    +             5U>>s)&1U);\n\n    if(iFrame==0||iMouse.z>.5)\n    {\n        o = floor(fract(cos(dot(u,vec2(1.76543,iTime+1.5363)))*vec4(2467.5678,\n                                                                    3467.5678,\n                                                                    4467.5678,\n                                                                    5467.5678))+.5);\n        o*= step(dot(v,v),dot(m,m)*.1);\n    }\n    fragColor = o;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define A(u) texture(iChannel0,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    vec2 v = 1.*(u        *2.-iResolution.xy)/iResolution.y;\n    vec2 m = 1.*(iMouse.xy*2.-iResolution.xy)/iResolution.y;\n\n    vec4 a = +A(u+vec2( 1, 0))\n             +A(u+vec2( 0, 1))\n             +A(u+vec2(-1, 0))\n             +A(u+vec2( 0,-1))\n             +A(u+vec2( 1, 1))\n             +A(u+vec2(-1, 1))\n             +A(u+vec2( 1,-1))\n             +A(u+vec2(-1,-1))\n             +A(u+vec2( 0, 0))\n             \n             +A(u+vec2( 2, 0))\n             +A(u+vec2( 0, 2))\n             +A(u+vec2(-2, 0))\n             +A(u+vec2( 0,-2));\n    uint s = uint(dot(a,vec4(1,1,0,0))+.1);\n    vec4 o = A(u+vec2(0,0)).xxyz;\n         o.x=float((+8U*4U*8U*4U* 16U //mod 7U to get similar world\n                    +8U*4U*8U*    0U\n                    +8U*4U*       0U\n                    +8U*          3U\n                    +             5U>>s)&1U);\n\n    if(iFrame==0||iMouse.z>.5)\n    {\n        o = floor(fract(cos(dot(u,vec2(1.76543,iTime+1.5363)))*vec4(2467.5678,\n                                                                    3467.5678,\n                                                                    4467.5678,\n                                                                    5467.5678))+.5);\n        o*= step(dot(v,v),dot(m,m)*.1);\n    }\n    fragColor = o;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}