{
    "Shader": {
        "info": {
            "date": "1600193700",
            "description": "gaussblur implementiation?",
            "flags": 34,
            "hasliked": 0,
            "id": "ttjfDt",
            "likes": 1,
            "name": "jh0ker_gaussblur",
            "published": 3,
            "tags": [
                "blur",
                "gauss"
            ],
            "usePreview": 0,
            "username": "jh0ker",
            "viewed": 292
        },
        "renderpass": [
            {
                "code": "int width = 17;\nfloat weights[17] = float[] (0.05105, 0.05066, 0.04952, 0.04766, 0.04519, 0.0422, 0.03882, 0.03519, 0.03143, 0.02767, 0.02401, 0.02056, 0.01737, 0.0145, 0.01197, 0.00978, 0.00793);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = texture(iChannel1, uv) * weights[0];\n    \n    for (int i = 1; i < width; i++) {\n\n        col += texture(\n            iChannel1,\n            uv + vec2(0, i) / iChannelResolution[1].xy\n        ) * weights[i];\n        \n        col += texture(\n            iChannel1,\n            uv - vec2(0, i) / iChannelResolution[1].xy\n        ) * weights[i];\n    }\n    \n    // Output to screen\n    fragColor = vec4(col.rgb,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "int width = 17;\nfloat weights[17] = float[] (0.05105, 0.05066, 0.04952, 0.04766, 0.04519, 0.0422, 0.03882, 0.03519, 0.03143, 0.02767, 0.02401, 0.02056, 0.01737, 0.0145, 0.01197, 0.00978, 0.00793);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 col = texture(iChannel0, uv) * weights[0];\n    \n    for (int i = 1; i < width; i++) {\n\n        col += texture(\n            iChannel0,\n            uv + vec2(i, 0) / iChannelResolution[0].xy\n        ) * weights[i];\n        \n        col += texture(\n            iChannel0,\n            uv - vec2(i, 0) / iChannelResolution[0].xy\n        ) * weights[i];\n    }\n    \n    //col /= float(box);\n\n    // Output to screen\n    fragColor = vec4(col.rgb,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}