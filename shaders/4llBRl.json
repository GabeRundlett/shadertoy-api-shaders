{
    "Shader": {
        "info": {
            "date": "1512921903",
            "description": "Semi-analytic Kelvin waves, in deep water conditions ( w=sqrt(gk), group velocity = 1/2 phase velocity ).\n\nMouse.x controls boat size ( in facts, the max of waves emission spectrum ).\nMouse.y controls the width of emission spectrum.\n(0,0) : auto-demo",
            "flags": 0,
            "hasliked": 0,
            "id": "4llBRl",
            "likes": 68,
            "name": "Kelvin waves / ship waves",
            "published": 3,
            "tags": [
                "2d",
                "waves",
                "water",
                "fluid",
                "physics",
                "short",
                "wake"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 4152
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n\tvec2 R = iResolution.xy, \n         M = length(iMouse.xy) > 10. ? iMouse.xy / R : vec2(.55,.7);\n    O = vec4(0);\n    U = ( 2.*U - R ) / R.y;  U.x += 1.2;\n \n    float  S = 1.,                                // invariant scaling factor\n           V = 10./sqrt(S),                       // [m/s] boat spead\n           L = 2500./S,                           // [m] screen->world scaling\n          l0 = 2.*L*M.x,                          // boat scale - peak of emission spectrum\n           W =  128./S*exp2(5.*M.y),              // width of spectrum of emission\n           dx = 2./R.y;                           // pixel size. Multiply for more FPS\n    if ( U.x< 0. ) { O += .5; return;}            // 2 optimizations\n    if ( R.y>200. && abs(U.y*R.y)>100.) dx *= 8.*abs(U.y);\n    \n    for (float x = 0.; x<=5.; x += dx ) {         // sum pulse emitted at each past location\n        vec2 P = U  - vec2(x,.2*sin(2.*x-iTime)); // pixel position in past boat frame\n        float l = length(P)*L, \n              k = 6.283/(2.*l),                   // k=2pi/L, energy at l=L/2 since Cg = 1/2 Cphi\n              t = x*L/V,                          // time where boat was at x (approx)\n              a = 3.1416 - sqrt(9.81*k) *t,       // cos(kl-wt), kl=pi, w=sqrt(gk)  \n              v = (l-l0)/W;                       // ( Dispersion relations: https://en.wikipedia.org/wiki/Dispersion_(water_waves)\n        O +=  cos(a) / l  * exp(-.5*v*v);         // spectrum of wave emission by the boat\n    }\n    O = .5 + .5* O*dx *1.7e3/S;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}