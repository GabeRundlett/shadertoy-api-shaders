{
    "Shader": {
        "info": {
            "date": "1452808449",
            "description": "the code is a mess, sorry. I'm on a deadline...",
            "flags": 0,
            "hasliked": 0,
            "id": "lddGWl",
            "likes": 35,
            "name": "Kindergarten Fluid Simulation",
            "published": 3,
            "tags": [
                "2d",
                "sea",
                "cartoon"
            ],
            "usePreview": 0,
            "username": "s23b",
            "viewed": 2100
        },
        "renderpass": [
            {
                "code": "vec4 makeWave(vec2 uv, vec2 o, vec2 s, vec2 v, vec4 c1, vec4 c2, vec4 ch)\n{\n    uv *= s;\n    uv += o;\n    float f = sin(uv.x+iTime * v.x) - uv.y - sin(iTime*v.y);\n    vec4 c = vec4(0.);\n    if (f > 10.)\n    {\n        c = c2;\n    }\n    else if (f > .0)\n    {\n        c = mix(c1, c2, f / 10.);\n    }\n    else if (f > -.2*s.y / 10.)\n    {\n        c = ch;\n    }\n\treturn c;\n}\n\nvec4 blend(vec4 c1, vec4 c2)\n{\n    return vec4(mix(c1.rgb, c2.rgb, c2.a), max(c1.a, c2.a)); \n}\n\nfloat hash(float n)\n{\n    return fract(sin(n) * 123.456);\n}\n\nvec4 sun(vec2 uv, vec4 c1, vec4 c2, vec4 ch)\n{\n    vec4 c = vec4(0.);\n    float f = length(uv) * 2. -  sin(atan(uv.x, uv.y) / cos(.0) * 10. + iTime * 10.)/ 50.;\n    if (f < 1.05 && f >= 1.)\n    {\n        c = ch;\n    }\n    else if (f < 1.)\n    {\n        c = mix(c1, c2, f);\n    }\n\treturn c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy / .5 - 1.;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec4 bg = mix(vec4(.5, .6, .7, 1.), vec4(.2, .6, .9, 1.), clamp(uv.y, 0., 1.));\n    \n    bg = blend (bg, sun(uv, vec4(1., .4, .1, 1.), vec4(1., .7, .2, 1.), vec4(1.)));\n    \n    for (float i = .1; i <= 1.0; i += .1)\n    {\n    \tbg = blend(bg, makeWave(\n            uv,\n            vec2(hash(i) * 10., i * 10.),\n            vec2(10. * (1.25 - i), 10. / i),\n            vec2( i*5. + hash(i), i*3.),\n            vec4(.1, .3, .5, .5), vec4(.4, .8, 1., .6), vec4(1.)));\n    }\n    \n    fragColor = bg;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}