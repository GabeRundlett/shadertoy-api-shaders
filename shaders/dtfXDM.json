{
    "Shader": {
        "info": {
            "date": "1674853152",
            "description": "transposing yonatan's [url]https://twitter.com/zozuar/status/1618281672008675330[/url]\nwith antialiasing",
            "flags": 0,
            "hasliked": 0,
            "id": "dtfXDM",
            "likes": 56,
            "name": "fractale fern  ( 296 ch )",
            "published": 3,
            "tags": [
                "short",
                "fractale",
                "golf",
                "reproduction"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 675
        },
        "renderpass": [
            {
                "code": "// transposing yonatan's https://twitter.com/zozuar/status/1618281672008675330\n\n\nvoid mainImage( out vec4 o, vec2 u )\n{\n    float k = fract(iTime*.5), i=0., y = i, f;\n    vec2  R = iResolution.xy,\n          p = ( u+u - R ) / R.y / exp(k+2.);                // normalization & zoom\n          \n    for(o *= i ; i++ < 6. && y < .5; p -= round(p) )        // fractal loop ( try without y<.5 ;-) )\n        o += smoothstep( f = fwidth(p.y), -f , p.y+.26 )    // antialias outer spiral arm\n           * smoothstep( 0., min(.1,f+f) , .5 - abs(p.y) ), // antialias inner spiral arm\n        p = vec2( y = atan(p.x,p.y)/1.05 + k + 2.,          // spiral transform\n                  y = log(length(p)*2.7) - k/6.28 + y/6. );\n     // p -= round(p);                                      // tiling along the spiral\n}\n\n\n\n\n\n\n/** // 319 chars\n\nvoid mainImage( out vec4 o, vec2 u )\n{\n    float k = fract(iTime*.5), y = -1., i=0.;\n    vec2  R = iResolution.xy,\n          p = ( u+u - R ) / R.y / exp(k+9.);             // normalization & zoom\n          \n    for(o *= i ; i++ < 6. && y < -.5; )                  // fractal loop ( try without y<-.5 ;-) )\n     // o += step(p.y,-.7),\n        o += smoothstep( 1., -1. ,(p.y+.7)/fwidth(p.y) ) // antialias outer spiral arm\n           * smoothstep( .0, 2. , ( 1.35 - abs(p.y) ) / min(.1,fwidth(p.y)) ), // antialias inner spiral arm\n        p = vec2( y = atan(p.x,p.y)/1.05 + k - 4.,       // spiral transform\n                  y = log(length(p)) - k/6.28 + y/6. ),\n        p -= round(p),                                   // tiling along the spiral\n     // p = fract(p+.5) - .5,\n        p *= 2.7;                                        // scaling between levels\n}\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}