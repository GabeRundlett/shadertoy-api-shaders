{
    "Shader": {
        "info": {
            "date": "1591899130",
            "description": "pixelgraphics",
            "flags": 0,
            "hasliked": 0,
            "id": "WtfyD8",
            "likes": 1,
            "name": "Pixel graphics \"ПТО\"",
            "published": 3,
            "tags": [
                "pixelgraphics"
            ],
            "usePreview": 0,
            "username": "tanya",
            "viewed": 281
        },
        "renderpass": [
            {
                "code": "const float PI = 3.1415926535897932384626433832795;\n\nfloat box(float x,float y) {\n\treturn 1.0 - max(abs(x),abs(y));\n}\n\n\nvec2 rotate(float a,vec2 v) {\n\tfloat c_a = cos(a);\n\tfloat s_a = sin(a);\n\tfloat x1 = v.x * c_a + v.y * s_a;\n\tfloat y1 = v.x * -s_a + v.y * c_a;\n\tv.x = x1;\n\tv.y = y1;\n    return v;\n}\nvec2 scale(float s1,float s2,vec2 v) {\n\tv.x /= s1;\n\tv.y /= s2;\n    return v;\n}\n\n\nvec2 translate(vec2 dv,vec2 v) {\n\tv.x -= dv.x;\n\tv.y -= dv.y;\n    return v;\n}\nvec2 shearx(float t,vec2 v)\n{\n   v.x -= v.y*t;return v;\n}\n\nvec2 sheary(float t,vec2 v)\n{\n   v.y -= v.x*t;return v;\n}\nfloat axes(float x, float y)\n{\n    float axis_y;\n    float axis_x;\n    if(abs(x)< 0.1) axis_y=1.0;\n    if(abs(y)< 0.1) axis_x=1.0;\n    return   axis_y+axis_x;           \n}\n\nfloat grid(float x, float y)\n{\n    float grid_y = 0.0;\n    float grid_x = 0.0;\n    if(abs(mod(x,1.0)) < 0.2) grid_x=1.0;\n    if(abs(mod(y,1.0)) < 0.2) grid_y=1.0;\n    return (grid_y+grid_x)/4.0;\n}\nfloat drawP(float x, float y)\n{\n \tvec2 left = vec2(x, y);\n    left = translate(vec2(-21, 13), left);\n\tleft = scale(2.0, 10.0, left);\n\tfloat leftP = box(left[0], left[1]);\n\n\tvec2 right = vec2(x, y);\n\tright = translate(vec2(-5, 13), right);\n\tright = scale(2.0, 10.0, right);\n\tfloat rightP = box(right[0], right[1]);\n\n\tvec2 top = vec2(x, y);\n\ttop = translate(vec2(-13, 21), top);\n\ttop = rotate(PI / 2.0, top);\n\ttop = scale(2.0, 9.0, top);\n\tfloat topP = box(top[0], top[1]);\n\n\n\treturn \n       max (leftP,max(rightP,(topP))); \n}\n\n\nfloat drawT(float x, float y)\n{\n \tvec2 center = vec2(x, y);\n    center = translate(vec2(21, 13), center);\n\tcenter = scale(2.0, 10.0, center);\n\tfloat centerT = box(center[0], center[1]);\n\t\n\tvec2 top = vec2(x, y);\n\ttop = translate(vec2(21, 21), top);\n\ttop = rotate(PI / 2.0, top);\n\ttop = scale(2.0, 9.0, top);\n\tfloat topT = box(top[0], top[1]);\n\n\n\treturn \n       max (centerT,(topT)); \n}\n\n\nfloat drawO(float x, float y)\n{\n \tvec2 left = vec2(x, y);\n    left = translate(vec2(21, -13), left);\n\tleft = scale(2.0, 10.0, left);\n\tfloat leftO = box(left[0], left[1]);\n\n\tvec2 right = vec2(x, y);\n\tright = translate(vec2(5, -13), right);\n\tright = scale(2.0, 10.0, right);\n\tfloat rightO = box(right[0], right[1]);\n\n\n\tvec2 top = vec2(x, y);\n\ttop = translate(vec2(13, -5), top);\n\ttop = rotate(PI / 2.0, top);\n\ttop = scale(2.0, 9.0, top);\n\tfloat topO = box(top[0], top[1]);\n    \n    vec2 down = vec2(x, y);\n\tdown = translate(vec2(13, -21), down);\n\tdown = rotate(PI / 2.0, down);\n\tdown = scale(2.0, 9.0, down);\n\tfloat downO = box(down[0], down[1]);\n\n\n\treturn \n       max (leftO,max(rightO,max(topO,(downO)))); \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float wmax=max(iResolution.x,iResolution.y);\n    float aspect =iResolution.y/iResolution.x;\n    vec2  vnorm = vec2(wmax,wmax);   \n    vec2 uv = fragCoord/vnorm ; \n    float x=uv.x;\n    float y=uv.y;\n\n    x *=100.0;\n    y *=100.0;\n    \n    x -=50.0;\n    y -=50.0*aspect;\n    \n\n    float grid =  max(grid(x,y), axes(x,y))/2.0;\n\n    float f = drawP(x,y)/10.0;\n    f = max(f, drawT(x,y)/10.0);\n     f = max(f, drawO(x,y)/10.0);\n    f = 0.01/f; \n    vec3 col = vec3(0.0,grid,0.0);\n\n    if(f >= 0.0)col.x =  f;\n    else      col.z = -f;\n    fragColor = vec4(col,1.0);}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}