{
    "Shader": {
        "info": {
            "date": "1657274314",
            "description": "fingerprint",
            "flags": 0,
            "hasliked": 0,
            "id": "ssdfD2",
            "likes": 2,
            "name": "ffingerprint",
            "published": 3,
            "tags": [
                "fingerprint"
            ],
            "usePreview": 0,
            "username": "jsfour",
            "viewed": 65
        },
        "renderpass": [
            {
                "code": "vec2 hash2( vec2 p )\n{\n\tp = vec2( dot(p,vec2(63.31,127.63)), dot(p,vec2(395.467,213.799)) );\n\treturn -1.0 + 2.0*fract(sin(p)*43141.59265);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float invzoom = 100.;\n    vec2 uv = invzoom*((fragCoord-0.5*iResolution.xy)/iResolution.x);\n    float bounds = smoothstep(9.,10.,length(uv*vec2(0.7,0.5)));\n\n    //cumulate information\n    float a=0.;\n    vec2 h = vec2(floor(7.*iTime), 0.);\n    for(int i=0; i<50; i++){\n        float s=sign(h.x);\n        h = hash2(h)*vec2(15.,20.);\n    \ta += s*atan(uv.x-h.x, uv.y-h.y);\n    }\n    \n    //comment this out for static center\n    uv += 20.*abs(hash2(h));\n    \n    a+=atan(uv.y, uv.x); //spirallic center more likely\n\n    float w = 0.8; //row width\n    float p=(1.-bounds)*w; //pressure\n    float s = min(0.3,p); //smooth\n    float l = length(uv)+0.319*a; //base rings plus information\n    \n    //dist -> alternate pattern\n    float m = mod(l,2.);\n    float v = (1.-smoothstep(2.-s,2.,m))*smoothstep(p,p+s,m);\n    \n\tfragColor = vec4(v,v,v,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}