{
    "Shader": {
        "info": {
            "date": "1637881123",
            "description": "dont stare at it for too long or you'll feel dizzy",
            "flags": 0,
            "hasliked": 0,
            "id": "stG3Ry",
            "likes": 11,
            "name": "I dont know what this is",
            "published": 3,
            "tags": [
                "e"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 424
        },
        "renderpass": [
            {
                "code": "#define pi 3.14159\n\nfloat thc(float a, float b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nfloat ths(float a, float b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec2 thc(float a, vec2 b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nvec2 ths(float a, vec2 b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat h21 (vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat mlength(vec2 uv) {\n    return max(abs(uv.x), abs(uv.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 ouv = uv;\n    \n    \n    float v = 0.;\n    float n = 6.;\n    \n    for (float i = 0.; i<n; i++) {\n        float f = pow(0.5, i) * thc(4.,i * 10. * length(uv) + iTime) + i/n;\n        v += 0.5 * f * cosh(2. * thc(4., 2. * pi + iTime) + 1.1 * length(uv));\n    }\n    // */\n    uv /= v;\n    uv /= cosh(0.8 * thc(4., iTime) + 1.1 * length(uv));\n    uv /= -0.6 + cosh(0.4 * ths(4., 1. * iTime) + 1.1 * length(uv));\n    \n    float a = atan(uv.y, uv.x);\n    float r = length(uv);\n       \n\n    uv.x = 1. * a + 0.15 * iTime;\n    uv.y = log(r);\n\n    uv = uv.y * vec2(thc(2., uv.x), ths(2., uv.x));\n\n    //a = atan(uv.y, uv.x);\n    //r = length(uv);\n    \n    //uv.x = r;\n    //uv.y = r;\n\n    float sc = 2. + thc(1., 18. * r + a + iTime);\n    vec2 ipos = floor(sc * uv) + 0.5;\n    vec2 fpos = fract(sc * uv) - 0.5;\n    \n    float d = mlength(fpos);\n    float s = 1.-smoothstep(-0.05,0.05, 0.47-d);\n    s *= s * s * 1.5;\n //   s += step(d,0.1);\n    //s *= thc(4., 3. * s + iTime) ;\n\n    //vec3 col = vec3(s);\n    vec3 col = s * pal(r * 10. + 0.8 * iTime, vec3(1.), vec3(1.), vec3(1.), vec3(0.,0.33,0.66));\n    col += clamp(pow(4. * (1.-r) * r,2.),0.,1.);\n    //col *= 20.;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}