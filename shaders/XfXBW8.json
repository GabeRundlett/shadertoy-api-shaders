{
    "Shader": {
        "info": {
            "date": "1723644684",
            "description": "from bottom right to top left: \nsinus interpolation\nlinear interpolation\nhue from normalized (stolen)\nnormalized angle",
            "flags": 0,
            "hasliked": 0,
            "id": "XfXBW8",
            "likes": 3,
            "name": "color wheel 100",
            "published": 3,
            "tags": [
                "colorinterpolationlinearsinusal"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 79
        },
        "renderpass": [
            {
                "code": "float f_n_lin_inout(float n_t){\n    //https://www.desmos.com/calculator/3a7uhp3om5\n    float n_tau = radians(360.);\n    n_t = fract(n_t/n_tau);\n    return max(min(n_t*4., -(n_t-.5)*4.), (n_t-1.)*4.);\n}\nvec3 f_o_rgb_from_o_hsl( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/ iResolution.xy;\n    vec2 o_screens = vec2(2., 2.);\n    vec2 o_ratio = vec2(iResolution.x / iResolution.y, 1.);\n    uv = uv*o_screens;\n    vec2 o_screen_nor = floor(uv)/o_screens;\n    uv = fract(uv)-(.5);\n    uv *= o_ratio;\n    \n    float n_tau = radians(360.);\n    float n_ang_nor = fract(atan(uv.x, uv.y)/n_tau);\n    \n    vec4[] a_o_col = vec4[](\n        //sinusal\n        clamp(vec4(\n                sin((n_ang_nor+(0./3.))*n_tau)*.5+.5, \n                sin((n_ang_nor+(1./3.))*n_tau)*.5+.5, \n                sin((n_ang_nor+(2./3.))*n_tau)*.5+.5, \n                1.\n            ), 0., 1.),\n        //linear\n        clamp(\n            vec4(\n                f_n_lin_inout((n_ang_nor+(0./3.))*n_tau)*.5+.5, \n                f_n_lin_inout((n_ang_nor+(1./3.))*n_tau)*.5+.5, \n                f_n_lin_inout((n_ang_nor+(2./3.))*n_tau)*.5+.5, \n                1.\n            ),\n            0., \n            1.\n        ),\n        vec4(f_o_rgb_from_o_hsl(vec3(n_ang_nor, 1., .5)),1.),\n        vec4(n_ang_nor)\n    );\n    //a_o_col[3] = vec4(0.);\n    float n_aa = 1./min(iResolution.x, iResolution.y);\n    float n_radius = 0.4;\n    float n_c = smoothstep(n_aa*5., .0, length(uv)-n_radius);\n    float n_idx = ((o_screen_nor.y*o_screens.y)*o_screens.x+(o_screen_nor.x*o_screens.x));\n    fragColor = a_o_col[int(n_idx)]*n_c;\n\n\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}