{
    "Shader": {
        "info": {
            "date": "1593749481",
            "description": "https://progur.com/2017/03/how-to-create-animated-shaders-in-shadertoy.html",
            "flags": 0,
            "hasliked": 0,
            "id": "WdXfD4",
            "likes": 1,
            "name": "Tutorial from progur",
            "published": 3,
            "tags": [
                "tutorial"
            ],
            "usePreview": 0,
            "username": "landicefu",
            "viewed": 252
        },
        "renderpass": [
            {
                "code": "#define SMOOTH_EDGE_LENGTH 0.01\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // value between 0~1 based on current frame\n    float frame = (float(iFrame % 400)) / 400.0;\n \n    // Normalize the coordinate to 0-1 based on height of the view port\n    // Assume the view port is (1200, 600), (300, 300) -> (0.5, 0.5)\n    vec2 uv = fragCoord.xy / iResolution.yy;\n\n\tvec2 center1 = vec2(0.4 + frame, 0.5);\n    float radius1 = 0.3;\n    float distance1 = distance(center1, uv);\n    float red = smoothstep(radius1, radius1 - SMOOTH_EDGE_LENGTH, distance1);\n\n\tvec2 center2 = vec2(0.8 - frame, 0.5);\n    float radius2 = 0.1;\n\tfloat distance2 = distance(center2, uv);\n\tfloat green = smoothstep(radius2, radius2 - SMOOTH_EDGE_LENGTH, distance2);\n\n\tvec4 redColor = vec4(red, 0, 0, 1);\n\tvec4 greenColor = vec4(0, green, 0, 1);\n\tvec4 sum = redColor + greenColor;\n\tfragColor = sum; \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}