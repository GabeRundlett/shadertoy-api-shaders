{
    "Shader": {
        "info": {
            "date": "1598246754",
            "description": "Gaussian Blur Test",
            "flags": 0,
            "hasliked": 0,
            "id": "tt2BRz",
            "likes": 2,
            "name": "Gaussian Blur Ts",
            "published": 3,
            "tags": [
                "blur",
                "gaussianblur"
            ],
            "usePreview": 0,
            "username": "tigershan1130",
            "viewed": 352
        },
        "renderpass": [
            {
                "code": "#define textureLoaded(s) (textureSize(s,0).x>1)\n\nconst float weights[25] = float[25]\n    (\n      0.01, 0.02, 0.04, 0.02, 0.01,\n      0.02, 0.04, 0.08, 0.04, 0.02,\n      0.04, 0.08, 0.16, 0.08, 0.04,\n      0.02, 0.04, 0.08, 0.04, 0.02,\n      0.01, 0.02, 0.04, 0.02, 0.01 \n    );\n\nconst float offsets[5] = float[5](-2.0, -1.0, 0.0, 1.0, 2.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 res = vec3(0,0,0);\n    \n    float BlurRadius = sin(iTime) * 3.0; // blur fades in and out\n    \n    // Half of the screen's uv so it is at its illusional center\n    vec2 uv = fragCoord * 0.5;\n\n    for(int i = 0; i < 5; ++i)\n    {\n    \tfloat v = uv.y + offsets[i] * BlurRadius;\n        \n        int temp = i * 5;\n        \n        for(int j = 0; j < 5; ++j)\n        {\n\n            float u = uv.x + offsets[j] * BlurRadius;\n            vec2 uvShifted = uv + vec2(u,v);\n            \n            \n            float weight = weights[temp+j];\n            vec3 col = texture(iChannel0, uvShifted / iResolution.xy).rgb;\n            \n            res += col * weight;\n        }               \n    }\n    \n    \n    \n    // Output to screen\n    fragColor = vec4(res,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}