{
    "Shader": {
        "info": {
            "date": "1512521348",
            "description": "Quick experiment with some math I learned about recently—complex numbers are fun! Further reading: https://en.wikipedia.org/wiki/Blaschke_product",
            "flags": 0,
            "hasliked": 0,
            "id": "XtsBz2",
            "likes": 23,
            "name": "Blaschke product",
            "published": 3,
            "tags": [
                "rainbow",
                "complex"
            ],
            "usePreview": 0,
            "username": "mahalis",
            "viewed": 933
        },
        "renderpass": [
            {
                "code": "vec2 cMul(vec2 a, vec2 b) { // complex multiplication\n    return vec2(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);\n}\n\nvec2 cDiv(vec2 a, vec2 b) { // complex division\n    return vec2((a.x * b.x + a.y * b.y), (a.y * b.x - a.x * b.y)) / dot(b, b);\n}\n\nvec2 conj(vec2 a) { // complex conjugate\n    return vec2(a.x, -a.y);\n}\n\nvec2 blaschkeB(vec2 a, vec2 z) { // a is the point in the set, z is the sample point on the grid\n    return cDiv(a - z, vec2(1.,0.) - cMul(conj(a), z));\n}\n\n// from iq’s article here: https://iquilezles.org/articles/palettes\nvec3 palette(float v) {\n    return vec3(0.5) + 0.5 * cos(6.28318 * (v + vec3(0.0,0.333,0.667)));\n}\n\nvec2 thingPosition(float t) { // from an old thing of mine here: https://www.shadertoy.com/view/Xl33D7\n    return vec2(sin(2.2 * t) - cos(1.4 * t), cos(1.3 * t) + sin(-1.9 * t)) * 0.2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.x;\n    uv *= 1.1;\n    \n    vec2 prod = vec2(1.,0.);\n    for(int i = 0; i < 43; i++) {\n   \t\tvec2 a = thingPosition(float(i) * 37. /* arbitrary */ + iTime * 0.3);\n        prod = cMul(prod, blaschkeB(a, uv));\n    }\n    \n    float angle = atan(prod.y, prod.x) * 1.;\n\tfragColor = vec4(palette(angle / 6.28318 - iTime * 1.9),1.0);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}