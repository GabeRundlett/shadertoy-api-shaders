{
    "Shader": {
        "info": {
            "date": "1605376288",
            "description": "Session raymarching",
            "flags": 0,
            "hasliked": 0,
            "id": "WdcBRB",
            "likes": 2,
            "name": "Session raymarching",
            "published": 3,
            "tags": [
                "raymarching"
            ],
            "usePreview": 0,
            "username": "illus0r",
            "viewed": 279
        },
        "renderpass": [
            {
                "code": "float sdBox( vec3 p )\n{\n  vec3 b = vec3(1.);\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\nmat2 rot(float a){float s=sin(a),c=cos(a);return mat2(c,-s,s,c);}\nvoid mainImage( out vec4 fragColor, in vec2 FC )\n{\n    vec2 uv = (FC*2.-iResolution.xy)/iResolution.y;\n    float d=0.,e;\n    vec3 rd=normalize(vec3(uv,1.)), p;\n    rd.xz*=rot(iMouse.x/100.);\n    rd.xy*=rot(iMouse.y/100.);\n    for(int i=0;i<99;i++){\n        p=rd*d;// uncomment for isometry: +vec3(uv*5.,0.);\n        float size=.2+.15*sin(p.x+iTime);\n        p.z+=iTime;\n        //p=normalize(p)/length(p);\n        p=mod(p,1.);\n        p-=.5;\n        d+=e=(length(p)-size);\n        if(e<.01)break;\n    }\n    float col = (d*.1)+.5;\n    \n    //uv=normalize(uv)/length(uv);\n    //uv = mod(uv,1.);\n    //uv-=.5;\n    //uv*=2.;\n    //col = length(uv)/1.5;\n    fragColor = vec4(col*vec3(203.,221.,180)/255.,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}