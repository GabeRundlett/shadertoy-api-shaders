{
    "Shader": {
        "info": {
            "date": "1585961734",
            "description": "using fbm technique to create a cool ripple effect",
            "flags": 0,
            "hasliked": 0,
            "id": "WdjyzR",
            "likes": 6,
            "name": "yet another ripple effect",
            "published": 3,
            "tags": [
                "fbm",
                "water",
                "ripple"
            ],
            "usePreview": 1,
            "username": "lambmeow",
            "viewed": 624
        },
        "renderpass": [
            {
                "code": "vec2 random(vec2 uv)\n{\n    return fract(vec2(dot(uv, vec2(435.6,534.3)), dot(uv, vec2(358.463,246.3))) );\n}\n\nfloat noise(vec2 uv)\n{\n    \n    //get decimal and integer portions from position\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    \n    //randomize each position around current position\n    vec2 a = random(i);\n    vec2 b = random(i + vec2(1.0, 0.0));\n    vec2 c = random(i + vec2(0.0, 1.0));\n    vec2 d = random(i + vec2(1.0, 1.0));\n    \n    //interpolate decimal position\n    vec2 m = smoothstep(0.0,1.0,f);\n    \n    //apply interpolation to 4 corners and return result.\n    return mix(mix(dot(a,f), dot(b, f-vec2(1.0,0.0)), m.x),\n               mix(dot(c,f - vec2(0.0, 1.0)), dot(d,f - vec2(1,1)), m.x), m.y);\n}\n\n\nfloat fbm(vec2 uv)\n{\n\n    //store the final value \n    float v = 0.;\n    \n    //store the current amplitude for the noise texture\n    float a =.9;\n    \n    for(int i = 0; i < 6; i++)\n    {\n        v += a * noise(uv);\n        a *= 0.5;\n        uv *= 2.0;\n    }\n    \n    return v;\n}\n\nvec2 rip(vec2 uv)\n{\n    return uv + fbm(uv + iTime);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n    uv = rip(uv * 10.0)/10.;\n    // Time varying pixel color\n  \tvec4 col = texture(iChannel0, uv);\n\n    // Output to screen\n    fragColor = vec4(col);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}