{
    "Shader": {
        "info": {
            "date": "1532023504",
            "description": "I've seen this done, and wanted to try",
            "flags": 0,
            "hasliked": 0,
            "id": "ll3yR7",
            "likes": 5,
            "name": "Gridworld",
            "published": 3,
            "tags": [
                "raymarching",
                "infinite"
            ],
            "usePreview": 0,
            "username": "_polymath",
            "viewed": 509
        },
        "renderpass": [
            {
                "code": "#define R     0.1\n#define RSQ 0.01\n\n#define ls(A) dot(A, A)\n#define lowerd(D) x = dot(D,D); if (x<d) { d=x; minn = D; }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord - iResolution.xy * 0.5 ) /iResolution.y;\n    vec3 lookAt = normalize(vec3(cos(iTime * 0.0745), sin(iTime * 0.63435), cos(iTime * 0.3423))),\n        \tup = normalize(cross(lookAt, vec3(sin(iTime * 0.232), sin(iTime* 0.3463), cos(iTime * 0.2343)))),\n        \txAxis = cross(up, lookAt);\n\tvec3 ray = normalize(vec3(uv, 0.8)),\n        start = vec3(0.5, 0.5, iTime * 1.),\n        cam = start,\n        light = normalize(vec3(0.8, 0.3, 0.5));\n    ray = ray.x * xAxis + ray.y * up + ray.z * lookAt;\n    \n    vec2 minn;\n    for (int i = 0; i < 50; ++i) {\n        float d = 1.0, x;\n        vec2[] slices = vec2[] (cam.xy, cam.yz, cam.zx);\n        for (int s = 0; s < 3; ++s) {\n            vec2 slice = slices[s],\n                toLast = mod(slice, 1.0),\n                toNext = 1.0 - toLast;\n            lowerd(toLast);\n            lowerd(toNext);\n            lowerd(vec2(toLast.x, toNext.y));\n            lowerd(vec2(toNext.x, toLast.y));\n        }\n        if (d <= RSQ) {\n            break;\n        }\n        float l = sqrt(d) - R;\n        cam += ray * l;\n    }\n    \n    fragColor = texture(iChannel0, cam.xy + cam.yz)\n        * (atan(minn.y, minn.x) * 0.5 + 1.)\n        / length(cam - start);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 3,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}