{
    "Shader": {
        "info": {
            "date": "1713360868",
            "description": "Switch to low resolution. (alt/cmd+1) with shadertoy plugin",
            "flags": 32,
            "hasliked": 0,
            "id": "4cV3W3",
            "likes": 10,
            "name": "Proton MonteCarlo",
            "published": 3,
            "tags": [
                "physics",
                "radiation",
                "proton",
                "ion"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 220
        },
        "renderpass": [
            {
                "code": "// Fork of \"Electron MonteCarlo\" by wyatt. https://shadertoy.com/view/XcGGW3\n// 2024-04-17 13:19:00\n\n// Fork of \"Bragg Peak\" by wyatt. https://shadertoy.com/view/4cKGRK\n// 2024-04-16 22:48:42\n\nMain {\n    Q = vec4(0);\n    \n    \n    Q = A(U)/float(iFrame);\n\n    Q = sin(-2.+6.*Q.x+vec4(1,2,3,4));\n\n\n    \n    for (float i = 0.; i < N; i++) {\n        vec4 q  = A(vec2(U.x,.5+i))/float(iFrame);\n        \n        vec2 u = U/R;\n        q.y *= .15;\n        if (!isnan(q.y))\n        Q += exp(-.25*(u.y-q.y)*(u.y-q.y)*R.x*R.x);\n    }\n    \n\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "Main {\n\n    if (U.y > N) discard;\n    \n    vec3 p = vec3(hash(vec4(U,iFrame,iTime)).xyz*12.-6.);\n    vec3 v = vec3((1.5*(2.+U.y)/N),0,0);\n    vec4 h;\n    for (float i = 0.; i < U.x; i++) {\n    \n        h = hash(vec4(U,i,iFrame));\n        h.xyz = length(v)*normalize(h.xyz*2.-1.)*(.2+1./(.1+2.*dot(v,v)));\n        h.xyz = 1.*h.xyz*dot(normalize(h.xyz),normalize(v));\n        v -= .007*h.xyz;\n        \n        p += v;\n    }\n    Q = vec4(p,length(h.xyz));\n    if (isnan(Q.x)||isnan(Q.y)||isnan(Q.z)||isnan(Q.w)) Q = vec4(0);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define N 10.\n\n#define R (iResolution.xy)\n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel1,(U)/R)\n#define C(U) textureiChannel2,(U)/R)\n#define D(U) texture(iChannel3,(U)/R)\n#define Main void mainImage(out vec4 Q, in vec2 U) \n\nfloat line (vec2 p, vec2 a, vec2 b) { \n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\n\n#define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nvec4 hash(vec4 p4)\n{\n\tp4 = fract(p4  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "Main {\n    Q = B(U);\n    for (float i = 0.; i< R.x; i++) {\n    \n        vec4 q = A(vec2(.5+i,U.y));\n        if (!isnan(q.w)&&!isnan(q.x))\n        Q.y += q.w*exp(-pow(q.x-U.x,2.));\n        \n        \n        {vec4 q = A(.5+vec2(i,N-4.));\n        if (!isnan(q.w)&&!isnan(q.x)&&!isnan(q.y))\n        Q.x += .5*q.w*exp(-.5*pow(length(U-q.xy-vec2(0,.5*R.y)),2.));}\n    }\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}