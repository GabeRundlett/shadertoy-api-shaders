{
    "Shader": {
        "info": {
            "date": "1652400424",
            "description": "https://eventhorizontelescope.org/blog/astronomers-reveal-first-image-black-hole-heart-our-galaxy",
            "flags": 32,
            "hasliked": 0,
            "id": "7l2fRy",
            "likes": 13,
            "name": "Sgr A*",
            "published": 3,
            "tags": [
                "blackhole",
                "photorecreation"
            ],
            "usePreview": 0,
            "username": "ufffd",
            "viewed": 457
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = fragCoord/R;\n    vec2 uvc = ( 2.*fragCoord - R ) / R.y; \n    vec3 col = vec3(0.);\n    col = texture(iChannel0,uv,7.).rgb;\n    col = mix(col,texture(iChannel0,uv,6.).rgb,0.5);\n    col = mix(col,texture(iChannel0,uv,5.).rgb,0.5);\n    col = mix(col,texture(iChannel0,uv,4.).rgb,0.5);\n    col = mix(col,texture(iChannel0,uv,3.).rgb,0.5);\n    col = mix(col,texture(iChannel0,uv).rgb,0.5);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// draw blackhole\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = fragCoord/R;\n    vec2 uvc = ( 2.*fragCoord - R ) / R.y; \n\n    vec3 col = vec3(0.);\n    \n    int t = int(iTime*2.)%100;\n    \n    float bh = 0.;\n    // draw main blackhole donut\n    bh = 1.1*circle(uvc*rot(-0.2)*vec2(1.,1.4)*0.9); // base shape\n    bh -= 1.1*circle2(uvc*rot(-0.2)*vec2(1.1,1.4)*1.3); // cut out center\n    // draw main blackhole donut\n    bh += .05*circle(uvc*rot(-0.2)*vec2(1.,1.5)*1.); // base shape\n    // add 3 bright spots on donut\n    mixin(bh, .9*circle2(uvc*rot(-0.25)*vec2(0.8,1.5)*1.9-vec2(0.1,.9))); // top right bigdot\n    mixin(bh, 1.05*circle(uvc*rot(-0.4)*vec2(0.8,1.5)*1.8-vec2(0.15,0.95))); // top right bigdot big\n    mixin(bh, 0.8*circleS(uvc*rot(3.6)*vec2(1.,1.3)*2.7-vec2(-0.4,1.7))); // bot right bigdot\n    bh += 0.1*circleS(uvc*rot(3.6)*vec2(1.,1.3)*2.7-vec2(-0.4,1.7)); // bot right bigdot big\n    mixin(bh,.85*circleS(uvc*rot(3.5)*vec2(1.,1.3)*2.7-vec2(-0.4,1.6))); // bot right bigdot big2\n    mixin(bh, 0.8*circle(uvc*rot(1.4)*vec2(1.,1.)*1.5-vec2(0.05,.7))); // left bigdot\n    bh -= .1*circleS(uvc*rot(-0.2)*vec2(0.9,1.7)*2.); // cut out center\n    mixin(bh,.2*circle(uvc*rot(-0.2)*vec2(1.,1.7)*0.9)); // base shape\n    // reduce background redness\n    // bh -= 0.05;\n    // background blobs (approximately starting at top left and going counterclockwise)\n    float bs = 2.; // blob size\n    vec2 bp = vec2(1.1,-1.5); // blob pos\n    mixin(bh, circleS(uvc*bs+bp)*0.2);\n    bp = vec2(0.9,-0.9);\n    mixin(bh, circleS(uvc*bs+bp)*.25);\n    bp = vec2(1.3,-0.9);\n    mixin(bh, circleS(uvc*bs+bp)*.25);\n    bp = vec2(2.5,0.6);\n    mixin(bh, circle(uvc*bs+bp)*.15);\n    bp = vec2(1.7,0.8);\n    mixin(bh, circle(uvc*bs+bp)*.15);\n    bp = vec2(1.3,1.7);\n    mixin(bh, circle(uvc*bs+bp)*.1);\n    bp = vec2(-0.6,1.8);\n    mixin(bh, circle(uvc*bs+bp)*.15);\n    bp = vec2(-.98,1.25);\n    mixin(bh, circleS(uvc*bs+bp)*.19);\n    bp = vec2(-.7,-.8);\n    mixin(bh, circle(uvc*bs+bp)*.3);\n    bs = 1.2;\n    bp = vec2(.6,-.6);\n    mixin(bh, circle2(uvc*bs+bp)*.3);\n    bs = 1.3;\n    bp = vec2(.45,-.75);\n    mixin(bh, circle(uvc*bs+bp)*.25);\n    bs = 4.;\n    bp = vec2(-.98,1.2) * 2.;\n    bh += circle(uvc*bs+bp)*.1;\n    \n    bh -= length(uv-0.5)*0.1;\n    \n    col = colormap(bh);\n    // col = vec3(bh); // grayscale\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "vec3 colormap(in float c) {\n    vec3 col = vec3(0.);\n    // color steps\n    vec3 c1 = vec3(1., 0., 0.)/255.;\n    vec3 c2 = vec3(121., 5., 1.)/255.;\n    // vec3 c3 = vec3(201., 73., 0.)/255.;\n    vec3 c3 = vec3(231., 100., 10.)/255.;\n    vec3 c4 = vec3(247., 200., 98.)/255.;\n    vec3 c5 = vec3(254., 253., 247.)/255.;\n    c*=4.;\n    if (c<1.) {\n        col = mix(c1,c2,c);\n    } else if (c<2.) {\n        col = mix(c2,c3,c-1.);\n    } else if (c<3.) {\n        col = mix(c3,c4,c-2.);\n    } else {\n        col = mix(c4,c5,c-3.);\n    }\n    return col;\n}\n\n#define SS(a,b,c) smoothstep(a-b,a+b,c)\n#define rot(a) mat2(cos(a+vec4(0,11,33,0)))\n//  Function from IÃ±igo Quiles\n//  www.iquilezles.org/www/articles/functions/functions.htm\nfloat cubicPulse( float c, float w, float x ){\n    x = abs(x - c);\n    if( x>w ) return 0.0;\n    x /= w;\n    return 1.0 - x*x*(3.0-2.0*x);\n}\n\nfloat circle(in vec2 uv) {\n    float c=0.;\n    c = 1.-length(uv);\n    c = clamp(c,0.,1.);\n    return c;\n}\n\nfloat circle2(in vec2 uv) {\n    float c = circle(uv);\n    return c*c;\n}\n\nfloat circleS(in vec2 uv) {\n    float c = circle(uv);\n    return pow(c,0.7);\n}\n\nfloat smax(float a, float b, float k)\n{\n    return log(exp(k * a) + exp(k * b)) / k;\n}\nfloat smax(float a, float b) {\n    return smax(a,b,30.);\n}\n\nvoid mixin(inout float a, in float b) {\n    a = smax(a,b);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}