{
    "Shader": {
        "info": {
            "date": "1576946305",
            "description": "This supposedly displays 0, as fract(1), as fract(U/U). \nBut in floating points U/U is not always exactly 1: it can be epsilon more or less. \nWhich makes totally different fract() ;-)\n",
            "flags": 0,
            "hasliked": 0,
            "id": "wtt3R2",
            "likes": 3,
            "name": "remainder: floats are approx :-)",
            "published": 3,
            "tags": [
                "glsl",
                "approximation",
                "ieeefloat"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 442
        },
        "renderpass": [
            {
                "code": "// #define mainImage(O,U)  O.rg = fract( U / U )\nvoid mainImage(out vec4 O, vec2 U) {  O.rg = fract( max(U,0.) / U ); }  // to fool the optimizer\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}