{
    "Shader": {
        "info": {
            "date": "1720134535",
            "description": "I didn't know what I wanted to make so I just started messing with some integer rotation maths to get janky weird patterns.",
            "flags": 32,
            "hasliked": 0,
            "id": "XXGSRK",
            "likes": 8,
            "name": "Shifting Spiral Doodle",
            "published": 3,
            "tags": [
                "doodle"
            ],
            "usePreview": 0,
            "username": "TekF",
            "viewed": 134
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColour, in vec2 fragCoord )\n{\n    fragColour = texelFetch(iChannel0,ivec2(fragCoord),0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColour, in vec2 fragCoord )\n{\n    ivec2 uv = ivec2(fragCoord);\n    ivec2 ir = ivec2(iResolution.xy);\n\n    ivec2 ir2 = (ir * (1 + ((ivec2(50728129,77557187)*int(floor(iTime))) & 3))) / 6;\n\n    uv -= ir2;\n    uv = (uv*1002+uv.yx*ivec2(-1,1)*5)/1000;\n    uv += ir2;\n    fragColour = texelFetch(iChannel0,uv,0);\n    if ( min(uv.x,uv.y) < 0 || max(uv.x-ir.x,uv.y-ir.y) >= 0 )\n        fragColour = vec4(sin(vec3(7,8,9.7)*iTime),0);\n    if ( iFrame == 0 ) fragColour = vec4(vec3((uv.y&32)/32),1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}