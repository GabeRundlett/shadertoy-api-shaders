{
    "Shader": {
        "info": {
            "date": "1628057289",
            "description": "I like it a lot",
            "flags": 0,
            "hasliked": 0,
            "id": "7tBSRV",
            "likes": 23,
            "name": "70s Petals",
            "published": 3,
            "tags": [
                "flower",
                "petals",
                "70s"
            ],
            "usePreview": 0,
            "username": "JennySchub",
            "viewed": 507
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592653 \n#define countX 17.\n#define petalWidth .4\n#define AA 2.\n\nvec3 colMap(float v) {\n\n\tv=mod(v, PI+1.3)-.8;\t\n    return vec3(\n\t\tsin(sin(v-.6)),\n\t\tsin(sin(v)),\n\t\tsin(sin(v+.8))\n\t);\n\n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor= vec4(0.);\n    for(float aa=0.; aa<AA; aa++){\n        for(float bb=0.; bb<AA; bb++){\n\n            vec2 uv = (fragCoord + vec2(aa,bb)*1./AA)/iResolution.xy;\n\n\n            uv-=.5;\n            uv.y*=iResolution.y/iResolution.x;\n            uv*=2.;\n\n            float tim=-iTime*.1;\n            float posintim=sin(tim)*.5+.5;\n            float dst=length(uv);\n            vec2 tuv = vec2(0.,dst);\n            vec2 id = vec2(0.);\n            float zoomSpeed=tim*.4;\n            float angle1=(atan(uv.x,uv.y)/PI*.5+.5)+zoomSpeed + tim*.3;\n            float angle2=angle1-2.*zoomSpeed;\n            float add=pow(dst, posintim*.7+.1)*countX*petalWidth;\n            tuv.x=mod(angle1*countX+add, 1.);\n            tuv.y=mod(angle2*countX-add, 1.);\n            id.x=ceil(angle1*countX+add);\n            id.y=floor(angle2*countX-add);\n            float edgeDist = max(max(tuv.x, tuv.y), max(1.-tuv.x, 1.-tuv.y));\n            tuv-=.5;\n            tuv*=dst*3.;\n            float t=log(dst+1.6);\n            float v=abs(tuv.x+tuv.y)+pow(tuv.y-tuv.x, 2.);\n            v+=posintim *pow(edgeDist,25.);\n            vec3 col=vec3(smoothstep(t+.1,t,v) );\n            col*=colMap(abs(id.x-id.y)*.4);\n\n\n            fragColor += vec4(col/(AA*AA),1.0);\n        }\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}