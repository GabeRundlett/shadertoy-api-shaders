{
    "Shader": {
        "info": {
            "date": "1456242423",
            "description": "long name, sound math",
            "flags": 0,
            "hasliked": 0,
            "id": "XdKGDy",
            "likes": 8,
            "name": "sdIsoscelesTrapezoid",
            "published": 3,
            "tags": [
                "cone",
                "trapezoid",
                "isosceles",
                "capped"
            ],
            "usePreview": 0,
            "username": "paniq",
            "viewed": 824
        },
        "renderpass": [
            {
                "code": "\nfloat dot2( in vec2 v ) { \n    return dot(v,v);\n}\n// bottom width, top width, height\nfloat sdIsoscelesTrapezoid (vec2 p, vec3 s) {\n    p.x = abs(p.x);\n    vec2 ba = vec2(s.x - s.y, -2.0*s.z);\n    vec2 pa = vec2(p.x - s.y, p.y - s.z);\n    \n    vec2 d = pa - ba * clamp(dot(pa,ba) / dot(ba,ba),0.0,1.0);\n    vec2 h0 = vec2(max(p.x - s.x,0.0),p.y + s.z);\n    vec2 h1 = vec2(max(p.x - s.y,0.0),p.y - s.z);\n    \n    return sqrt(min(dot2(d),min(dot2(h0),dot2(h1))))\n        * sign(max(dot(pa,vec2(-ba.y, ba.x)), abs(p.y) - s.z));\n}\n\nfloat map (vec2 p) {\n    \n    float w1 = mix(0.0,1.0,sin(iTime*0.1)*0.5+0.5);\n    float w2 = mix(0.0,1.5,sin(-0.7 + iTime*0.13)*0.5+0.5);\n    float h = mix(0.1,0.7,sin(0.4 + iTime*0.27)*0.5+0.5);\n    \n    return sdIsoscelesTrapezoid(p, vec3(w1,w2,h));\n}\n\n//-------------------------------------------------------\n\nfloat circle (vec2 p, float r) {\n    return length(p) - r;\n}\n\nfloat outline (float d) {\n    return 1.0 - smoothstep(0.0, 3.0 / iResolution.y, abs(d));\n}\nfloat isolines (float d) {\n    return abs(mod(d, 0.1)/0.1 - 0.5) + outline(d) + 0.3 * step(d,0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p = uv * 2. - 1.;\n    p.x *= iResolution.x / iResolution.y;\n    \n    vec2 m = (iMouse.xy / iResolution.xy)*2.0-1.0;\n    m.x *= iResolution.x / iResolution.y;\n\n    float d = map(p);\n\n    float d2 = abs(map(m));\n    \n\tfragColor = vec4(((iMouse.z > 0.5)?outline(circle(p-m,d2)):0.0)+vec3(isolines(d)),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}