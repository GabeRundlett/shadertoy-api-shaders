{
    "Shader": {
        "info": {
            "date": "1667388415",
            "description": "Originally [SH17A] Lake Drops by fizzer.\nGreat job on the shader, fizzer.\n\nThis was originally code golfed to be sent out in a Twitter competition (< 255 characters).\nhttps://www.shadertoy.com/view/MdjBDh",
            "flags": 0,
            "hasliked": 0,
            "id": "dsB3Rm",
            "likes": 5,
            "name": "Fork [SH17A] La elevations 409",
            "published": 3,
            "tags": [
                "water",
                "ripple",
                "pond"
            ],
            "usePreview": 0,
            "username": "elevations02",
            "viewed": 280
        },
        "renderpass": [
            {
                "code": "// Originally [SH17A] Lake Drops by fizzer.\n// Great job on the shader, fizzer.\n//\n// This was originally code golfed to be sent out in a Twitter competition (< 255 characters).\n//\n// https://www.shadertoy.com/view/MdjBDh\n\n#define PI 3.1415936535\n\nvoid mainImage(out vec4 color,vec2 fragCoord) {\n\tvec2 screen_window = fragCoord / iResolution.x * 2.0 - 1.0; // x goes from [-1 to 1].\n    // This is used to accumulate over all ripples at the fragment location.\n    vec2 displacement = vec2(0.0);\n    // Same ripples over and over again, they repeat with this frequency.\n    float loop_time = 3.0;\n    // Lower numbers make wider ripples.\n    float ripple_width_inverse = 20.0;\n    float limits = PI / ripple_width_inverse;\n    // Increase decay to quicken fading of ripples with time.\n    float decay = 2.0;\n    // Controls the concentration of ripples (how far they spawn from the origin).\n    float spread = 4.0;\n    // Increase number of ripples. It can be cheaper to decrease the loop time.\n    int num_ripples = 68;\n    \n    // Change the perspective from top down (straight) to an angular view.\n    screen_window /= (screen_window.y += 1.6) - 2.00;\n    \n    for (float i = 0.0; i < float(num_ripples); ++i) {\n        // Distance from the origin of a ripple.\n        vec2 origin = vec2(919.,154.) * i;\n        // The cos wraps the ripple spawn points to within the local area.\n        vec2 dist = screen_window - spread * (cos(origin) - 0.5);\n        // Increasing this value staggers the creation time of ripples. For zero, they all create at the\n        // same time.\n        float time_offset = i * 0.12;\n        float t = length(dist) - mod(time_offset + iTime, loop_time);\n        // Only show one period of each sine wave.\n        float t_one_period = clamp(t, -limits, limits);\n        // Waves decay with time. I've added a decay parameter to control this more as well as\n        // a small offset to prevent a divide by zero artifact.\n        vec2 amplitude = dist / (pow(dot(dist, dist), decay) + 1e-3);\n        displacement += amplitude * sin(ripple_width_inverse * t_one_period);        \n    }\n    // Original: use the displacement to offset the read from the texture.\n    color = 0.7 * texture(iChannel0, vec3(displacement - screen_window * 6.0, 5.0)) +\n            // Bottom of the pond. No magic here.\n            0.4 * texture(iChannel1, screen_window);\n    // View only the displacement.\n    // color = vec4(vec3(displacement + 0.5,0.5), 1);\n\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 26,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}