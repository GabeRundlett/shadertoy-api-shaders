{
    "Shader": {
        "info": {
            "date": "1577953571",
            "description": "the graph of the function",
            "flags": 0,
            "hasliked": 0,
            "id": "wt33Ds",
            "likes": 2,
            "name": "y=x*x*x",
            "published": 3,
            "tags": [
                "mathfunction"
            ],
            "usePreview": 0,
            "username": "changjiu",
            "viewed": 330
        },
        "renderpass": [
            {
                "code": "bool near(float a, float b){\n\treturn abs(a-b)<10.;\n}\n\nfloat f(float x){\n\treturn 0.00005*x*x*x;\n}\n\n/*\nfloat f(float x){\n\treturn 100.*sin(0.01*x);\n}\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = fragCoord-0.5*iResolution.xy;\n    \n    float x= uv.x;\n    float y= uv.y;\n\n    float gray;\n    \n    if(((y+0.5)-f(x-0.5))*((y-0.5)-f(x+0.5))<=0.){\n        gray = 1.;\n    }else if(((y+0.5)-f(x+0.5))*((y-0.5)-f(x-0.5))<=0.){\n    \tgray = 1.;\n    }else{\n    \tgray = 0.;\n    }\n\n\n    float r = gray;\n    float g = gray;\n    float b = gray;\n    \n    vec3 col = vec3(r,g,b);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}