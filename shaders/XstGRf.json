{
    "Shader": {
        "info": {
            "date": "1451724223",
            "description": "Conway's Game of Life [url]https://iquilezles.org/articles/gameoflife/gameoflife.htm[/url]. Buffer A contains the world and it reads/writes to itself to perform the simulation. I implemented 3 variants",
            "flags": 32,
            "hasliked": 0,
            "id": "XstGRf",
            "likes": 75,
            "name": "GameOfLife",
            "published": 3,
            "tags": [
                "2d",
                "simulation",
                "automata",
                "life",
                "conway",
                "gameoflife",
                "multipass"
            ],
            "usePreview": 0,
            "username": "iq",
            "viewed": 7071
        },
        "renderpass": [
            {
                "code": "// I implemented three variants of Conway's Game of Life with\n// three different interpretations: the regular one, as low\n// pass filter and as a high pass filter. Tweak line 11 in\n// Bufer A to see them all. More info here:\n// https://iquilezles.org/articles/gameoflife/\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4( texelFetch( iChannel0, ivec2(fragCoord), 0 ).xxx, 1.0 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// I implemented three variants of Conway's Game of Life with\n// three different interpretations: the regular one, as low\n// pass filter and as a high pass filter. Tweak line 11 to see\n// them all. More info here:\n// https://iquilezles.org/articles/gameoflife/\n\n\n// VARIANT = 0: traditional\n// VARIANT = 1: as a convolution (low pass fiter)\n// VARIANT = 2: as a convolution (high pass fiter)\n#define VARIANT 0\n\n\nint cell( in ivec2 p )\n{\n    ivec2 r = ivec2(textureSize(iChannel0, 0));\n    p = (p+r) % r;\n    return (texelFetch(iChannel0, p, 0 ).x > 0.5 ) ? 1 : 0;\n}\n\nfloat hash1( float n )\n{\n    return fract(sin(n)*138.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 px = ivec2( fragCoord );\n    \n    // traditional\n    #if VARIANT==0\n\tint k =   cell(px+ivec2(-1,-1)) + cell(px+ivec2(0,-1)) + cell(px+ivec2(1,-1))\n            + cell(px+ivec2(-1, 0))                        + cell(px+ivec2(1, 0))\n            + cell(px+ivec2(-1, 1)) + cell(px+ivec2(0, 1)) + cell(px+ivec2(1, 1));\n    int e = cell(px);\n    float f = ( ((k==2)&&(e==1)) || (k==3) ) ? 1.0 : 0.0;\n    #endif\n\n    // convolution (low pass filter)\n    #if VARIANT==1\n\tint k =   cell(px+ivec2(-1,-1)) + cell(px+ivec2(0,-1)) + cell(px+ivec2(1,-1))\n            + cell(px+ivec2(-1, 0)) + cell(px)*9           + cell(px+ivec2(1, 0))\n            + cell(px+ivec2(-1, 1)) + cell(px+ivec2(0, 1)) + cell(px+ivec2(1, 1));\n    float f = (k==3 || k==11 || k==12) ? 1.0 : 0.0;\n    #endif\n    \n    // convolution (high pass filter)\n    #if VARIANT==2 \n\tint k = cell(px+ivec2(-1,-1)) +   cell(px+ivec2(0,-1)) + cell(px+ivec2(1,-1))\n          + cell(px+ivec2(-1, 0)) - 8*cell(px)             + cell(px+ivec2(1, 0))\n          + cell(px+ivec2(-1, 1)) +   cell(px+ivec2(0, 1)) + cell(px+ivec2(1, 1));\n    float f = (k==-6 || k==-5 || k==3) ? 1.0 : 0.0;\n    #endif\n    \n\n    if( iFrame==0 ) f = step(0.5, hash1(fragCoord.x*13.0+hash1(fragCoord.y*71.1)));\n\t\n\tfragColor = vec4( f, 0.0, 0.0, 0.0 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}