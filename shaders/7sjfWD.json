{
    "Shader": {
        "info": {
            "date": "1646343943",
            "description": "yo",
            "flags": 0,
            "hasliked": 0,
            "id": "7sjfWD",
            "likes": 1,
            "name": "BuzzyVRTest",
            "published": 3,
            "tags": [
                "yo"
            ],
            "usePreview": 0,
            "username": "antoinefortin",
            "viewed": 200
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 m = iMouse.xy/iResolution.xy;\n    uv.x -=0.5 + abs(sin((m.x * 5.0f)));\n    uv.y -=.5 + abs(sin((m.y * 5.0f)));;\n    uv *= 2.;  \n    uv.x = uv.x * ( iResolution.x / iResolution.y);\n \n    float pixel_angle = atan(uv.x,uv.y * 2.) ;\n    float pixel_distance =  length(uv * sin(uv.x + iTime))* 12.0 ;\n    vec2 st = vec2(pixel_angle , pixel_distance); \n    vec3 c = vec3(abs(sin(st.x) * abs(sin(iTime))), abs(cos(st.y)), abs(sin(cos(st.x * st.y))));\n    vec3 c2 = vec3(\n    atan(abs(length(c.r * .04)), \n            c.g * sin(c.b))) * (1.0f-abs(uv.x)  \n            \n    );\n    vec3 col = 1.f -(c + abs(sin(st.x * c2)));\n    col.r -= .5;\n    col *= col * c2 + col;\n    // Output to screen\n    fragColor = vec4(sqrt(col),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}