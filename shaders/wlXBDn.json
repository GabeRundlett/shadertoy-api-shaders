{
    "Shader": {
        "info": {
            "date": "1596462346",
            "description": " ",
            "flags": 0,
            "hasliked": 0,
            "id": "wlXBDn",
            "likes": 2,
            "name": "Waving_001",
            "published": 3,
            "tags": [
                "waves"
            ],
            "usePreview": 0,
            "username": "cambalamas",
            "viewed": 300
        },
        "renderpass": [
            {
                "code": "const float pi = 3.14159265358979323846264338327950288;\n\n//#define ANIMATE_ZOOM\n\n\n// -----------------------------------------------------------------------\n\nfloat map(in float v, in float i, in float I, in float o, in float O) {\n    return o + (O-o) * (v-i) / (I-i);\n}\nvec3 uClamp(in vec3 v) {\n    return clamp(vec3(0.), vec3(1.), v);\n}\nfloat uClamp(in float v) {\n    return clamp(0., 1., v);\n}\n\n// -----------------------------------------------------------------------\n\nfloat fleur(in float t, in vec2 p, in float n)\n{\n    float r = length(p);\n    float a = atan(p.x, p.y);\n    \n#ifdef ANIMATE_ZOOM\n    float rn = mix(0., 2., cos(t*0.15 + sin(t*0.1))) * r * pi;\n#else\n    float rn = 3. * r * pi;\n#endif\n    float an = a * n;\n    \n    float w = sin(t + an + cos(t + rn));\n    float e = cos(t - rn  + sin(t + an - w) - w) + w * w;\n    \n    return e;\n}\n\n\n// -----------------------------------------------------------------------\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t     = iTime;\n    vec2  uv    = (fragCoord / iResolution.xy);\n    \n    float e = 0.;\n    vec2  p = uv * 2. - 1.;\n    \n    float tails = 500.;\n\n    float I = .2;\n    e += fleur(t, p + vec2(0.,0.), tails) * I;\n\n\n\n    float l1 = e;\n    float l2 = 1.-l1;\n    float l3 = smoothstep(0.1, 1., l2);\n    \n    float a1 = l1 - (l2);\n    float a2 = l2 - (l1);\n    float a3 = l3 - (l1+l2);\n    \n\n    vec3 cl1 = vec3(1,0,0) * a1 * I;\n    vec3 cl2 = vec3(0,1,0) * a2 * I;\n    vec3 cl3 = vec3(0,0,1) * a3 * I;\n    \n    fragColor = vec4(vec3(1.-e),1.);\n    //fragColor = vec4(vec3( e + (abs(e)-e) ),1.);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}