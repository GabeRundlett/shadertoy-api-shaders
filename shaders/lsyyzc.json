{
    "Shader": {
        "info": {
            "date": "1522772093",
            "description": "Early test for my analytical area lighting effect.",
            "flags": 0,
            "hasliked": 0,
            "id": "lsyyzc",
            "likes": 54,
            "name": "Analytical area light prototype",
            "published": 3,
            "tags": [
                "lighting"
            ],
            "usePreview": 1,
            "username": "yx",
            "viewed": 1950
        },
        "renderpass": [
            {
                "code": "vec2 rotate(vec2 a,float b) {\n    return vec2(a.x*cos(b)-a.y*sin(b),a.x*sin(b)+a.y*cos(b));\n}\n\nvec4 light(int index){\n\tfloat x = mod(float(index),8.)-4.;\n\tfloat y = floor(float(index)/8.);\n    x*=.4;\n    y*=.4;\n    y+=.2;\n    float s=(sin(-y-x+iTime*4.)*.5+.5)*.2;\n    return vec4(x-s,x+s,y+s,y-s);\n}\nvec3 lum(int index){\n\tfloat x = mod(float(index),8.)*.125;\n\tfloat y = floor(float(index)/8.)*.125;\n    vec3 rgb = texture(iChannel0,vec2(x,y)).rgb;\n    rgb /= max(rgb.x,max(rgb.y,rgb.z));\n    rgb.x=pow(rgb.x,3.);\n    rgb.y=pow(rgb.y,3.);\n    rgb.z=pow(rgb.z,3.);\n    return rgb;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    const float pi=acos(-1.);\n    vec2 uv=fragCoord/iResolution.xy-.5;\n    uv.x*=iResolution.x/iResolution.y;\n    float time=iTime*.1;\n    vec3 cam=vec3(sin(time)*4.,1,-5);\n    vec3 dir=normalize(vec3(uv,1));\n    dir.xz=rotate(dir.xz,sin(time)*.6);\n    \n    float tw=-cam.z/dir.z;\n    float tf=-cam.y/dir.y;\n\tconst float PI = acos(-1.);\n    \n    vec3 color=vec3(0);\n    if(tf<tw&&tf>.0)\n    {\n    \tvec3 hit=cam+dir*tf;\n        for(int i=0;i<64;++i)\n        {\n            vec4 l1 = light(i);\n            vec3 col1 = lum(i);\n        \tvec4 i1 = atan(hit.zzzz,vec4(hit.xxyy-l1.xyzw));\n        \tfloat w1 = max(0.,((i1.x-i1.y)*(i1.w-i1.z)));\n\t\t\tcolor += w1*col1;\n        }\n\t\tcolor /= PI*PI*.5;\n    }\n    else\n    {\n\t\tvec3 hit=cam+dir*tw;\n        for(int i=0;i<64;++i){\n            vec4 l1 = light(i);\n            vec3 col1=lum(i);\n            vec2 mid=(l1.xz+l1.yw)*.5;\n            vec2 rad=(l1.yz-l1.xw)*.5;\n            vec2 a=(rad-abs(hit.xy-mid))*iResolution.y*.25+.5;\n            color+=clamp(min(a.x,a.y),0.,1.)*col1;\n        }\n    }\n    \n    // add some noise to hide the banding\n    fragColor=vec4(color,1)+texture(iChannel0,fragCoord/256.)*.004;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}