{
    "Shader": {
        "info": {
            "date": "1491758670",
            "description": "Reference GIF by Dave Whyte\nhttps://inspirationfeeed.files.wordpress.com/2014/09/gif10.gif",
            "flags": 0,
            "hasliked": 0,
            "id": "Md2yWR",
            "likes": 153,
            "name": "A Spiral of Circles",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "gif",
                "copyagif"
            ],
            "usePreview": 0,
            "username": "knarkowicz",
            "viewed": 3968
        },
        "renderpass": [
            {
                "code": "const float MATH_PI\t= float( 3.14159265359 );\n\nvoid Rotate( inout vec2 p, float a ) \n{\n\tp = cos( a ) * p + sin( a ) * vec2( p.y, -p.x );\n}\n\nfloat saturate( float x )\n{\n\treturn clamp( x, 0.0, 1.0 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 p = ( 2.0 * fragCoord - iResolution.xy ) / iResolution.x * 1000.0;\n    \n    float sdf = 1e6;\n    float dirX = 0.0;\n    for ( float iCircle = 1.0; iCircle < 16.0 * 4.0 - 1.0; ++iCircle )\n    {\n        float circleN = iCircle / ( 16.0 * 4.0 - 1.0 );\n        float t = fract( circleN + iTime * 0.2 );\n        \n        float offset = -180.0 - 330.0 * t;\n        float angle  = fract( iCircle / 16.0 + iTime * 0.01 + circleN / 8.0 );\n        float radius = mix( 50.0, 0.0, 1.0 - saturate( 1.2 * ( 1.0 - abs( 2.0 * t - 1.0 ) ) ) );\n        \n        vec2 p2 = p;\n        Rotate( p2, -angle * 2.0 * MATH_PI );\n        p2 += vec2( -offset, 0.0 );\n        \n        float dist = length( p2 ) - radius;\n        if ( dist < sdf )\n        {\n            dirX = p2.x / radius;\n            sdf\t = dist;\n        }\n    }\n    \n    vec3 colorA = vec3( 24, 30, 28 );\n    vec3 colorB = vec3( 249, 249, 249 );\n    \n    vec3 abberr = colorB;\n\tabberr = mix( abberr, vec3( 205, 80, 28 ), saturate( dirX ) );\n    abberr = mix( abberr, vec3( 38, 119, 208 ), saturate( -dirX ) );\n    \n    colorB = mix( colorB, abberr, smoothstep( 0.0, 1.0, ( sdf + 5.0 ) * 0.1 ) );\n    \n    vec3 color = mix( colorA, colorB, vec3( 1.0 - smoothstep( 0.0, 1.0, sdf * 0.3 ) ) );\n\tfragColor = vec4( color / 255.0, 1.0 );\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}