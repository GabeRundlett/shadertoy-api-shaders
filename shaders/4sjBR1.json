{
    "Shader": {
        "info": {
            "date": "1499466785",
            "description": "I needed a chevron pattern for a project, so here it is :) ",
            "flags": 0,
            "hasliked": 0,
            "id": "4sjBR1",
            "likes": 6,
            "name": "Chevron",
            "published": 3,
            "tags": [
                "blackandwhite",
                "bw",
                "pattern",
                "chevron"
            ],
            "usePreview": 0,
            "username": "cacheflowe",
            "viewed": 1049
        },
        "renderpass": [
            {
                "code": "#define PI     3.14159265358\n\n// updated saw() from @ollj\nfloat sawNew(float rads) {\n    rads = rads / (PI * 2.) + PI / 4.;\n    rads = fract(rads); \n    return -1. + 2. * abs(rads * 2. - 1.);\n}\n\nfloat saw(float rads) {\n    rads += PI * 0.5;\n    float percent = fract(rads/PI);\t\t\t\t\n    float dir = sign(sin(rads));\n    return dir * (2. * percent  - 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime;\t\t\t\t\t\t\t\t\t\n\tvec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    float amp = 0.06;\n    float freq = 25.;\n    float numLines = 70. + 25. * sin(time);\n    float sawWaveDisp = saw(uv.x * freq);\n    float sinWaveDisp = sin(uv.x * freq);\n    uv.y += amp * mix(sawWaveDisp, sinWaveDisp, 0.5 + 0.5 * sin(time));\n    float col = 0.5 + 0.5 * sin(uv.y * numLines);\n    float aA = 1./(iResolution.y * 0.01) ;\n    col = smoothstep(0.5 - aA, 0.5 + aA, col);\n\tfragColor = vec4(vec3(col),1.0);\n}\n    \n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}