{
    "Shader": {
        "info": {
            "date": "1471513991",
            "description": "form https://www.shadertoy.com/view/Mtt3zN   how to rotate the rectangle?",
            "flags": 0,
            "hasliked": 0,
            "id": "Xlc3Dj",
            "likes": 1,
            "name": "Rectangle test",
            "published": 3,
            "tags": [
                "rectangletest"
            ],
            "usePreview": 0,
            "username": "luguanking",
            "viewed": 600
        },
        "renderpass": [
            {
                "code": "\nfloat RoundRect(in vec2 distFromCenter, in vec2 halfSize, in float radius)\n{\n    float t = length(max(abs(distFromCenter) - (halfSize - radius), vec2(0.0))) - radius;\n    //return clamp(t, 0.0, 1.0);\n    return smoothstep(-1.0, 1.0,t);\n\n}\nfloat RectAngle(vec2 center, vec2 size,float rotation, vec2 coord){\n    //(a^2-x^2)+(b^2-y^2)-((a^2-x^2)^2+(b^2-y^2)^2 )^0.5=0;\n    float a = size.x;\n    float b = size.y;\n    float a2 = a*a;\n    float b2 = b*b;\n    float x2 = (coord.x-center.x)*(coord.x-center.x);\n    float y2 = (coord.y-center.y)*(coord.y-center.y);\n    \n    float d = 1.0;\n    float p = (a2-x2)+(b2-y2)+((a2-x2)*(a2-x2)+(b2-y2)*(b2-y2));\n    d = pow(p,0.5);\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\tvec2 size = vec2(220.0, 30.0);\n\tfloat radius = 21.0;\n    \n\tfloat pct = RoundRect(fragCoord.xy-0.5*iResolution.xy, size, radius);\n\t\n    vec4 rectColor = vec4(uv.x, uv.y, 0.37, 1.0);\n    \n\tfragColor = mix(rectColor, vec4(0.0), pct);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}