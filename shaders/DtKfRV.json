{
    "Shader": {
        "info": {
            "date": "1702631138",
            "description": "7",
            "flags": 0,
            "hasliked": 0,
            "id": "DtKfRV",
            "likes": 1,
            "name": "ShaderToy_7_TextureCoord",
            "published": 3,
            "tags": [
                "learning"
            ],
            "usePreview": 0,
            "username": "tbx",
            "viewed": 153
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592653\n\n#define COUNT 20.0\n\nfloat drawCoord(vec2 uv)\n{\n   float x = distance(vec2(uv.x, 0.0), vec2(0.0, 0.0));\n   float y = distance(vec2(0.0, uv.y), vec2(0.0, 0.0));\n   \n   return 1e-3 / x + 1e-3 / y;\n}\n\nfloat net(vec2 coord)\n{\n    float xline = cos(coord.x * PI * COUNT);\n    xline = step(1.0 - 1e-1, xline);\n    \n    float yline = cos(coord.y * PI * COUNT);\n    yline = step(1.0 - 1e-1, yline);\n    \n    return xline + yline;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float asp = iResolution.x / iResolution.y;\n    \n    vec2 coord = uv * 2.0 - 1.0;\n    \n    vec2 aspCoord = vec2(coord.x * asp, coord.y);\n    \n    float factor1 = coord.x * coord.y;\n    factor1 = step(1e-12, factor1);\n    float factor2 = -coord.x * coord.y;\n    factor2 = step(1e-12, factor2);\n    float factor3 = step(1e-12, coord.y); \n    float factor4 = step(1e-12, -coord.y);\n    \n    float f1 = factor1 * factor3;\n    float f2 = factor2 * factor4;\n    float f3 = factor1 * factor4;\n    float f4 = factor2 * factor3;\n    \n    vec3 col = vec3(0.0);\n    \n    col += net(aspCoord) * 0.125;\n    col += drawCoord(aspCoord);\n    \n    col += texture(iChannel0, coord).xyz * f1;\n    vec2 scale = iResolution.xy / 8.0;\n    col += texture(iChannel0, floor(coord * scale) * (1.0 / scale)).xyz * f2;\n    scale = iResolution.xy / 16.0;\n    col += texture(iChannel0, floor(coord * scale) * (1.0 / scale)).xyz * f3;\n    scale = iResolution.xy / 32.0;\n    col += texture(iChannel0, floor(coord * scale) * (1.0 / scale)).xyz * f4;\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}