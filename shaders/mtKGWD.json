{
    "Shader": {
        "info": {
            "date": "1684057571",
            "description": "WIP\ninspiration reference:https://twitter.com/PavelBoytchev/status/1650945937462685713\n- any cheap way to avoid the artifact ?\n- way to accelerate ?",
            "flags": 0,
            "hasliked": 0,
            "id": "mtKGWD",
            "likes": 30,
            "name": "animated knitting",
            "published": 3,
            "tags": [
                "short",
                "reproduction"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 277
        },
        "renderpass": [
            {
                "code": "// cf https://www.desmos.com/calculator/zd265cjxqi\n#define rot2(a)  mat2(cos(a+vec4(0,11,33,0)))\n#define arc(L)   t = min(t, max( length( vec2( length((L).xy)-r,(L).z) ) -.1, abs(atan((L).x,(L).y)-A)-A ))\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t=9.,d=1., h,r,A,i, T,y;\n    vec3  R = iResolution, \n          D = normalize(vec3(U+U, -12.*R.y) - R),        // ray direction\n          p = vec3(0,0,30), q,                           // marching point along ray \n          M = iMouse.z > 0. ? 6.*iMouse.xyz/R -3.        // camera control\n              :  vec3( -.8,-.5,0);\n    \n    for ( O=vec4(1); O.x > 0. && t > .01; O-=.01 ) {     // march scene\n        q = p, \n        q.yz *= rot2(-M.y),                              // rotations\n        q.xz *= rot2(-M.x-1.57),\n        T = fract(iTime), q.y += 1.5*T + 6.,             // infinite scroll\n        T -= floor(abs(q.x/2.)+.5)*1.3, q.x = abs(mod(q.x-1.,2.)-1.); // repeat along x\n        for( i=0.; i<8.; i++ , q.y -= 1.5 )              // foreach thread\n            h = 3.*clamp(T-i+4.7,1e-3,1.), r = (d*d+h*h)/h/4., A = atan(h/d),\n            y = .5*sin(1.5*q.y),\n            arc(     vec3(1, r  , y ) - q ), \n            arc( q - vec3(0, h-r, y )     ),\n            t = min(t, length(q-vec3(1,.75,0))+.1 );     // trick to limit the artifact\n         // t = min(t,max( length(q.yz)-.1, 1.-abs(q.x)) );\n        p += .5*t*D;                                     // step forward = dist to obj    \n    }\n   O *= O*O*O*2.;                                        // color scheme \n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}