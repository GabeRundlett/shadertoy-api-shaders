{
    "Shader": {
        "info": {
            "date": "1658070432",
            "description": "square",
            "flags": 0,
            "hasliked": 0,
            "id": "sdGBWh",
            "likes": 1,
            "name": "chientrm Square",
            "published": 3,
            "tags": [
                "square"
            ],
            "usePreview": 0,
            "username": "chientrm",
            "viewed": 167
        },
        "renderpass": [
            {
                "code": "vec2 rotate(vec2 uv, float th) {\n  return mat2(cos(th), sin(th), -sin(th), cos(th)) * uv;\n}\n\nvec3 sdfSquare(vec2 uv, float size, vec2 offset) {\n  float x = uv.x - offset.x;\n  float y = uv.y - offset.y;\n  vec2 rotated = rotate(vec2(x,y), iTime);\n  float d = max(abs(rotated.x), abs(rotated.y)) - size;\n  return d > 0. ? vec3(1.) : vec3(1., 0., 0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    vec2 offset = vec2(0.0, 0.0);\n    vec3 col = sdfSquare(uv, 0.2, offset);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}