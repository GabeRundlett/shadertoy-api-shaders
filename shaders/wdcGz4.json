{
    "Shader": {
        "info": {
            "date": "1567990350",
            "description": "A Blob I made using metaballs influenced by https://www.shadertoy.com/view/4lKXzd",
            "flags": 0,
            "hasliked": 0,
            "id": "wdcGz4",
            "likes": 7,
            "name": "Metaball Blob",
            "published": 3,
            "tags": [
                "blob"
            ],
            "usePreview": 0,
            "username": "vitasa",
            "viewed": 393
        },
        "renderpass": [
            {
                "code": "const float numOfBalls = 10.;\t\t\t\t\t\t\t\t\t\t// number of balls\nconst float distanceTraveled = .8;\nconst float speed = 1.;\t\t\t\t\t\t\t\t\t\t\t\t// speed of effect\n\nfloat metaballs(vec2 uv, float time) {\t\t\t\t\t\t\t\t\t\n    float size = .5;\t\t\t\t\t\t\t\t\t\t\t\t// base size\n    const float startIndex = numOfBalls;\n\tconst float endIndex = numOfBalls * 2.;\n    \n    for(float i = startIndex; i < endIndex; i++) {\t\t\t\t\t// create x number of balls\t\t\t\t\t\t\t\t\t\t\t\n        float radius = distanceTraveled * sin(time + i * 2.);\t\t// calculate radius\n        vec2 ball = radius * vec2(sin(i), cos(i));\t\t\t\t\t// ball position\n\t\tsize += 1. / pow(i, distance(uv, ball));\t\t\t\t\t// metaball calculation\n    }\n    return size;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy;\n    float time = iTime * speed;\t\t\t\t\t\t\t\t\t\t// assigning time\n    vec2 uv = (2. * fragCoord - R.xy) / R.y;\t\t\t\t\t\t// center coordinates\n\tuv *= 3.; \t\t\t\t\t\t\t\t\t\t\t\t\t\t// zoom out    \n\n    float blob = metaballs(uv, time);\t\t\t\t\t\t\t\t// creating the blob\n    blob = smoothstep(1., 1. + 50./R.y, blob);\t\t\t\t\t\t// Anti Aliasing\t\t\t\n    \n    vec3 col = vec3(.8, .2, .2);\t\t\t\t\t\t\t\t\t// color of blob\n    vec3 final = blob * col;\t\t\t\t\t\t\t\t\t\t// combining the color with the effect\n    fragColor = vec4(final, 1); \t\t\t\t\t\t\t\t\t// ouput\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}