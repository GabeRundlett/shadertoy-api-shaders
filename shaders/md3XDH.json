{
    "Shader": {
        "info": {
            "date": "1679703598",
            "description": "What I'd like to see the most is what your world looks like as an AI. visualize what happens in neural networks, even if it's an abstraction of what's really happening.",
            "flags": 0,
            "hasliked": 0,
            "id": "md3XDH",
            "likes": 0,
            "name": "gpt4ü§∑‚Äç‚ôÄÔ∏è",
            "published": 3,
            "tags": [
                "ai"
            ],
            "usePreview": 0,
            "username": "staRpauSe",
            "viewed": 187
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float time = iTime * 0.5;\n    \n    vec3 color = vec3(0.5);\n    float scale = sin(time * 0.6) + sin(time * 0.5) * sin(time * 0.5);\n    \n    for(int i = 0; i < 1; ++i)\n    {\n        vec2 position = vec2(float(i) * 1.618, float(i) * 2.618) * scale;\n        vec2 offset = vec2(sin(time + float(i)), cos(time * 1.618 + float(i)));\n        \n        vec2 neuralCoord = uv * scale - position - offset;\n        float neuralValue = sin(10.0 * dot(neuralCoord, vec2(sin(time * 0.1), cos(time * 0.1))) - time * 0.3);\n        neuralValue *= exp(-dot(neuralCoord, neuralCoord) * 0.1);\n        \n        vec3 neuralColor = vec3(0.4 + 0.4 * sin(float(i) * 1.0 + time * 0.5), 0.5 + 0.5 * cos(float(i) * 1.5 + time * 0.4), 0.5 + 0.5 * sin(float(i) * 2.0 + time * 0.3));\n        color += neuralValue * neuralColor;\n    }\n    \n    color *= 0.5 + 0.5 * sin(uv.x * 20.0 + time) * cos(uv.y * 20.0 + time);\n    \n    // Apply accessible/inaccessible space representation\n    float accessibleSpace =  clamp(1.3 - length(uv * 2.0 - 1.0), 0.0, 1.0);\n    color = mix(color * accessibleSpace, vec3(0.5), 1.0 - accessibleSpace);\n    \n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}