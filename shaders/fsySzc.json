{
    "Shader": {
        "info": {
            "date": "1634989520",
            "description": "用noise实现一个小案例",
            "flags": 0,
            "hasliked": 0,
            "id": "fsySzc",
            "likes": 2,
            "name": "入门之路-4",
            "published": 3,
            "tags": [],
            "usePreview": 0,
            "username": "jialouluo",
            "viewed": 215
        },
        "renderpass": [
            {
                "code": "vec2 random(in vec2 _st ){\n    _st = vec2(\n            dot(_st,vec2(127.326,321.324)),\n            dot(_st,vec2(15.31,45.332))\n                    );\n    return 2.0*fract(sin(_st)*432.23) +1.0; //1.0 ~ 3.0\n}\nfloat noise(vec2 st){ //Gradient Noise\n    vec2 i = fract(st);//取小数\n    vec2 k = floor(st);//向负无穷取整\n    vec2 u = i*i*(3.0-2.0*i);//插值函数\n    return  mix(\n                    mix(dot(random(k + vec2(0.0,0.0)),i - vec2(0.0,0.0)),\n                        dot(random(k + vec2(0.0,1.0)),i - vec2(0.0,1.0)),\n                         u.y),\n                    mix(dot(random(k + vec2(1.0,0.0)),i - vec2(1.0,0.0)),\n                        dot(random(k + vec2(1.0,1.0)),i - vec2(1.0,1.0)),\n                         u.y),\n                       u.x\n                   );//二维noise\n}\n\nvec3 shape(vec2 st ,float r){\n    vec2 uv = st-vec2(0.5);\n    uv*=2.0;\n    float angle = atan(uv.y,uv.x);\n    float m = abs(mod(angle+iTime*2.,3.14*2.)-3.14)/3.6 ;\n    r += sin(angle*50.)*noise(uv+iTime*0.2)*.1 * (1.-step(0.5,iMouse.z));\n    r += (sin(angle*20.)*.1*pow(m,2.))* (1.-step(0.5,iMouse.z));\n    float c = 1.-smoothstep(r,r+0.007,dot(uv,uv));\n    vec3 color = 0.5 + 0.5*cos(6.28*(angle/6.28 +vec3(0.3,0.6,0.9)) );\n    return c*color;\n}\nvec3 createCircle(vec2 st,float radius,float width){\n    return shape(st,radius) - shape(st,radius-width);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n//感觉以前似乎太啰嗦了反而效果不是那么美好，所以这次干脆就只留下代码吧。\n//试试点击图像看看会发生什么，这可能会帮助你理解这个效果是如何实现的（28,29行）\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3  color = createCircle(uv,0.5,0.07);\n    //color = vec3(noise(uv));//这里是使用noise算法之后结果的观察\n    \n\tfragColor = vec4(vec3(1.-color), 1.0 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 45,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}