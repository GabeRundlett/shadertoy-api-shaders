{
    "Shader": {
        "info": {
            "date": "1659289759",
            "description": "It displays text, but with fancy lines. This isn't really my best text renderer; I just made this as a joke. Use it however you see fit, except the 'line' function which I stole.",
            "flags": 0,
            "hasliked": 0,
            "id": "stdyRH",
            "likes": 2,
            "name": "SPEED DMODE",
            "published": 3,
            "tags": [
                "text",
                "fonts"
            ],
            "usePreview": 0,
            "username": "u004fu0077u004f",
            "viewed": 266
        },
        "renderpass": [
            {
                "code": "const float line_thickness = .01;\nconst vec3 line_color = vec3(.956, .584, .137);\nvoid line(inout vec4 color, vec2 uv, vec2 a, vec2 b) {\n    // Code stolen from rkibria's \"Wireframe cube\", because I suck at math.\n    // <https://www.shadertoy.com/view/4lfBWf>\n    uv -= a;\n    b -= a;\n    color.rgb = mix(color.rgb, line_color, 1.-smoothstep(0., 1., length(uv-b*clamp(dot(b, uv)/dot(b, b), 0., 1.))/line_thickness));\n}\nvec2 text_pos;\nfloat text_x;\nvoid set_text_pos(vec2 pos) {\n    text_pos = pos;\n    text_x = pos.x;\n}\nconst vec2 character_size = vec2(.0475, .1);\nconst vec2 character_padding = character_size*.36;\n#define L(ax, ay, bx, by) line(color, uv, vec2(ax, ay)*character_size+text_pos, vec2(bx, by)*character_size+text_pos)\nvoid C(inout vec4 color, vec2 uv, uint character) {\n    switch (character) {\n        case 0x00u: // NULL\n            return;\n        case 0x0au: // LINE FEED\n            text_pos.x = text_x;\n            text_pos.y -= character_size.y+character_padding.y;\n            return;\n        case 0x20u: // SPACE (\" \")\n            break;\n        case 0x2cu: // COMMA (\",\")\n            L(.5, .333, 0., 0.);\n            break;\n        case 0x41u: // LATIN CAPITAL LETTER A (\"A\")\n            L(0., 0., 0., .667);\n            L(0., .667, .5, 1.);\n            L(.5, 1., 1., .667);\n            L(1., .667, 1., 0.);\n            L(0., .333, 1., .333);\n            break;\n        case 0x43u: // LATIN CAPITAL LETTER C (\"C\")\n            L(1., 1., 0., 1.);\n            L(0., 1., 0., 0.);\n            L(0., 0., 1., 0.);\n            break;\n        case 0x44u: // LATIN CAPITAL LETTER D (\"D\")\n            L(0., 1., 0., 0.);\n            L(0., 1., .5, 1.);\n            L(.5, 1., 1., .667);\n            L(1., .667, 1., .333);\n            L(1., .333, .5, 0.);\n            L(.5, 0., 0., 0.);\n            break;\n        case 0x45u: // LATIN CAPITAL LETTER E (\"E\")\n            L(0., 0., 0., 1.);\n            L(0., 1., 1., 1.);\n            L(0., .5, 1., .5);\n            L(0., 0., 1., 0.);\n            break;\n        case 0x46u: // LATIN CAPITAL LETTER F (\"F\")\n            L(0., 0., 0., 1.);\n            L(0., 1., 1., 1.);\n            L(0., .5, 1., .5);\n            break;\n        case 0x47u: // LATIN CAPITAL LETTER G (\"G\")\n            L(1., 1., 0., 1.);\n            L(0., 1., 0., 0.);\n            L(0., 0., 1., 0.);\n            L(1., 0., 1., .5);\n            L(1., .5, .5, .5);\n            break;\n        case 0x48u: // LATIN CAPITAL LETTER H (\"H\")\n            L(0., 1., 0., 0.);\n            L(0., .5, 1., .5);\n            L(1., 1., 1., 0.);\n            break;\n        case 0x49u: // LATIN CAPITAL LETTER I (\"I\")\n            L(0., 1., 1., 1.);\n            L(0., 0., 1., 0.);\n            L(.5, 1., .5, 0.);\n            break;\n        case 0x4bu: // LATIN CAPITAL LETTER K (\"K\")\n            L(0., 1., 0., 0.);\n            L(0., .5, 1., 1.);\n            L(0., .5, 1., 0.);\n            break;\n        case 0x4cu: // LATIN CAPITAL LETTER L (\"L\")\n            L(0., 1., 0., 0.);\n            L(0., 0., 1., 0.);\n            break;\n        case 0x4du: // LATIN CAPITAL LETTER M (\"M\")\n            L(0., 0., 0., 1.);\n            L(0., 1., .5, .667);\n            L(.5, .667, 1., 1.);\n            L(1., 1., 1., 0.);\n            break;\n        case 0x4eu: // LATIN CAPITAL LETTER N (\"N\")\n            L(0., 0., 0., 1.);\n            L(0., 1., 1., 0.);\n            L(1., 0., 1., 1.);\n            break;\n        case 0x4fu: // LATIN CAPITAL LETTER O (\"O\")\n            L(0., 0., 1., 0.);\n            L(1., 0., 1., 1.);\n            L(1., 1., 0., 1.);\n            L(0., 1., 0., 0.);\n            break;\n        case 0x50u: // LATIN CAPITAL LETTER P (\"P\")\n            L(0., 0., 0., 1.);\n            L(0., 1., 1., 1.);\n            L(1., 1., 1., .5);\n            L(1., .5, 0., .5);\n            break;\n        case 0x52u: // LATIN CAPITAL LETTER R (\"R\")\n            L(0., 0., 0., 1.);\n            L(0., 1., 1., 1.);\n            L(1., 1., 1., .5);\n            L(1., .5, 0., .5);\n            L(0., .5, 1., 0.);\n            break;\n        case 0x53u: // LATIN CAPITAL LETTER S (\"S\")\n            L(0., 0., 1., 0.);\n            L(1., 0., 1., .5);\n            L(1., .5, 0., .5);\n            L(0., .5, 0., 1.);\n            L(0., 1., 1., 1.);\n            break;\n        case 0x54u: // LATIN CAPITAL LETTER T (\"T\")\n            L(0., 1., 1., 1.);\n            L(.5, 1., .5, 0.);\n            break;\n        case 0x55u: // LATIN CAPITAL LETTER U (\"U\")\n            L(0., 0., 1., 0.);\n            L(1., 0., 1., 1.);\n            L(0., 1., 0., 0.);\n            break;\n        case 0x56u: // LATIN CAPITAL LETTER V (\"V\")\n            L(0., 1., .5, 0.);\n            L(1., 1., .5, 0.);\n            break;\n        case 0x58u: // LATIN CAPITAL LETTER X (\"X\")\n            L(0., 0., 1., 1.);\n            L(1., 0., 0., 1.);\n            break;\n        case 0x59u: // LATIN CAPITAL LETTER V (\"V\")\n            L(0., 1., .5, .667);\n            L(1., 1., .5, .667);\n            L(.5, .667, .5, 0.);\n            break;\n        case 0xfffdu: // REPLACEMENT CHARACTER (\"ï¿½\")\n        default:\n            L(0., 0., 1., 0.);\n            L(1., 0., 1., 1.);\n            L(1., 1., 0., 1.);\n            L(0., 1., 0., 0.);\n            L(0., 0., 1., 1.);\n            L(1., 0., 0., 1.);\n            break;\n    }\n    text_pos.x += character_size.x+character_padding.x;\n}\n#define C(c) C(color, uv, c)\n#define Q(c) {\\\n    C((uint(c) & 0xff000000u) >> 24);\\\n    C((uint(c) & 0xff0000u) >> 16);\\\n    C((uint(c) & 0xff00u) >> 8);\\\n    C(uint(c) & 0xffu);\\\n};\nvoid mainImage(out vec4 color, vec2 coord) {\n    vec2 uv = coord/iResolution.xy;\n    color = vec4(mix(vec3(.137, .129, .129), vec3(.321, .317, .337), uv.y), 1.);\n    set_text_pos(vec2(.025, 1.-character_size.y-.025));\n    Q(0x46524f4d)Q(0x20495659)Q(0x2c204f55)Q(0x540a4d49)Q(0x44444c45)Q(0x2c205448) // \"FROM IVY, OUT\\nMIDDLE, TH\"\n    Q(0x524f5547)Q(0x480a4f55)Q(0x5220434f)Q(0x4e4e4543)Q(0x544f522c)Q(0x0a4c494b) // \"ROUGH\\nOUR CONNECTOR,\\nLIK\"\n    Q(0x4520410a)Q(0x53504545)Q(0x44204445)Q(0x4d4f4e00) // \"E A\\nSPEED DEMON\"\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}