{
    "Shader": {
        "info": {
            "date": "1643967496",
            "description": "todayâ€™s shader--learn to draw a spiral.\nrefers to https://www.shadertoy.com/view/4tBXRy \n         & https://www.shadertoy.com/view/MtSXW1",
            "flags": 0,
            "hasliked": 0,
            "id": "sd2cRd",
            "likes": 3,
            "name": "odos | spiral",
            "published": 3,
            "tags": [
                "spiral"
            ],
            "usePreview": 0,
            "username": "ErinZ",
            "viewed": 331
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926\n//original version:https://www.shadertoy.com/view/MtSXW1\n//with aa: https://www.shadertoy.com/view/4tBXRy\n\n\nfloat logo(vec2);\n\n//https://iquilezles.org/articles/palettes\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    float a =atan(uv.y,uv.x);//angle -Pi~Pi\n    float w = 1.5;//width \n    float r = length(uv/w);    \n    \n    vec4 m = vec4(fract(vec3(0,1,2)/3.+ a/2./PI + r - iTime/8. ),0);\n    m.w = m.x; //w records min(x,y,z)\n    m.x=0.;//x records which pieces does this pix belong to\n    if(m.y < m.w){m.w = m.y; m.x = .33;}\n    if(m.z < m.w){m.w = m.z; m.x = .67;}\n    m.w = min(m.w, m.w*(1. - m.w)*iResolution.y*w/(1. + .16/r));//AA\n\n    \n    \n    vec3 col = m.w*\n          pal( r/3.+ m.x +iTime/12., \n                  vec3(0.9,0.7,0.4),\n                  vec3(0.8,0.2,0.9),\n                  vec3(1.0,1.0,1.0),\n                  vec3(0.0,0.3,0.6) );\n          \n    col = clamp(col,0.,1.);\n    col += logo(uv);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n\n}\n#define S(v,r) smoothstep( r, r+ 3./iResolution.y, v ) \nfloat logo(vec2 uv){\nfloat n = 0.;\nn += S(.05,abs(length(uv-vec2(-1.23,0))-.12));\nn *= 1.-S(-1.25,uv.x);\nn += S(.17,abs(uv.y))*S(.05,abs(uv.x+1.29));\nn += S(.05,abs(length(uv-vec2(-1.5,0))-.12));\nn += S(.05,abs(length(uv-vec2(-0.9,0))-.12));\nn += (1.+S(-.6,uv.x)-S(.05,uv.y))*S(.05,abs(length(uv-vec2(-0.6,.03))-.09));\nn += (1.-S(-.6,uv.x)+S(-.05,uv.y))*S(.05,abs(length(uv-vec2(-0.6,-.04))-.09));\nreturn n;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}