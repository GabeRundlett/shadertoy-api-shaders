{
    "Shader": {
        "info": {
            "date": "1527104593",
            "description": "Feel the power of color and sound rewiring your synapses!",
            "flags": 8,
            "hasliked": 0,
            "id": "XltSRl",
            "likes": 4,
            "name": "Brainwashing ðŸ”Š",
            "published": 3,
            "tags": [
                "2d",
                "sound",
                "colorful",
                "psychodelic",
                "strobe",
                "annoying",
                "stressfull"
            ],
            "usePreview": 0,
            "username": "blurryroots",
            "viewed": 1387
        },
        "renderpass": [
            {
                "code": "// === icon message: \"sound in\". link: https://www.shadertoy.com/view/MtyXRW\n\nfloat message(vec2 uv) { // to alter in the icon\n    uv-=vec2(1.,10.); if ((uv.x<0.)||(uv.x>=32.)||(uv.y<0.)||(uv.y>=3.)) return -1.; \n    int i=1, bit=int(pow(2.,floor(32.-uv.x)));\n    if (int(uv.y)==2) i=  928473456/bit; // 00110111 01010111 01100001 01110000\n    if (int(uv.y)==1) i=  626348112/bit; // 00100101 01010101 01010000 01010000\n    if (int(uv.y)==0) i= 1735745872/bit; // 01100111 01110101 01100001 01010000\n \treturn float(i-2*(i/2));\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n    if (iResolution.y<2000.) {float c=message(fragCoord.xy/8.);if(c>=0.){fragColor=vec4(c);return;}}  \n\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 center = iResolution.xy / 2.;\n    float aspect = iResolution.y / iResolution.x;\n    \n    if (length ((uv - vec2(.5,.5)) * vec2(1., aspect)) < .1) {\n\t\tfragColor = vec4(\n            cos (dream (3.1415 * sin (iTime), iTime)),\n            sin (iTime),\n            cos (iTime),\n            1.\n        );\n    }\n    else {\n        fragColor = vec4 (1., InvGold * cos (sin (iTime) * ULTRA * iTime) + DimGold, InvGold, 1.);\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 mainSound (in int samp, float time) {\n    vec2 feel = confuse ((time));\n    return feel * vec2(dream(feel.x, time), 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            },
            {
                "code": "const float MK = 1030307.;\nconst float ULTRA = 23.33;\n\nconst float Gold = (1. + sqrt(5.))/2.;\nconst float InvGold = 1. / Gold;\nconst float OneMinusInvGold = 1. - InvGold;\nconst float DimGold = OneMinusInvGold*OneMinusInvGold;\n\nvec2 confuse (float time) {\n    return vec2 (cos (sin (time) * ULTRA * time)) * MK;\n}\n\nfloat dream (float of, float time) {\n    vec2 trip = confuse (time);\n    \n    return length (of * trip);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}