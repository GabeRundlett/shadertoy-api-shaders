{
    "Shader": {
        "info": {
            "date": "1681372992",
            "description": "Anti Tiling",
            "flags": 0,
            "hasliked": 0,
            "id": "mdyXR3",
            "likes": 2,
            "name": "Anti Tiling",
            "published": 3,
            "tags": [
                "2d",
                "voronoi",
                "tiling",
                "antitiling"
            ],
            "usePreview": 0,
            "username": "l1ghtrider",
            "viewed": 203
        },
        "renderpass": [
            {
                "code": "vec2 hash2( vec2 p )\n{\n    vec2 q = vec2( dot(p,vec2(127.1,311.7)), \n\t\t\t\t   dot(p,vec2(269.5,183.3)));\n\treturn fract(sin(q)*43758.5453);\n}\n\nvec4 voronoi( in vec2 x, out vec2 yuanxin, out float rotValue, out vec2 indexOffset )\n{\n    vec2 n = floor(x);\n    vec2 f = fract(x);\n\n    //----------------------------------\n    // first pass: regular voronoi\n    //----------------------------------\n    vec2 mg, mr;\n\n    float md = 8.0;\n    for( int j=-1; j<=1; j++ )\n    for( int i=-1; i<=1; i++ )\n    {\n        vec2 g = vec2(float(i),float(j));\n        vec2 o = hash2( n + g );\n        #ifdef ANIMATE\n        o = 0.5 + 0.5*sin( iTime + 6.2831*o );\n        #endif        \n        vec2 r = g + o - f;\n        float d = dot(r,r);\n\n        if( d<md )\n        {\n            md = d;\n            mr = r;\n            mg = g;\n            indexOffset = g;\n            yuanxin = g - 0.5 + o;\n            rotValue = d / 2.0f;\n        }\n    }\n\n    //----------------------------------\n    // second pass: distance to borders\n    //----------------------------------\n    md = 8.0;\n    for( int j=-2; j<=2; j++ )\n    for( int i=-2; i<=2; i++ )\n    {\n        vec2 g = mg + vec2(float(i),float(j));\n        vec2 o = hash2( n + g );\n        #ifdef ANIMATE\n        o = 0.5 + 0.5*sin( iTime + 6.2831*o );\n        #endif        \n        vec2 r = g + o - f;\n\n        if( dot(mr-r,mr-r)>0.00001 )\n        md = min( md, dot( 0.5*(mr+r), normalize(r-mr) ) );\n    }\n\n    return vec4(mr, md, 0.2 + (mg.x + 1.0) * (mg.y + 1.0));\n}\n\nvec2 rot2d(vec2 v,float d)\n{\n    float s = sin(d),c = cos(d);\n    mat2 rot = mat2(c,-s,s,c);\n    return rot * v;\n}\n\n//#define DisplayVoronoi\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float tileScale = 1.0;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.yy;\n    uv = uv * 3.0f;\n\n    vec2 yuanxin;\n    float rotVal;\n    vec2 indexOffset;\n    vec4 vor = voronoi( uv * tileScale, yuanxin, rotVal, indexOffset);\n\n    vec3 col = texture(iChannel0,uv).rgb;\n\n    vec2 hehe = uv - ((floor(uv) + 0.5) + yuanxin);\n    float rotV = hash2(indexOffset + floor(uv)).x;\n    rotV = 0.5;\n    vec3 col2 = texture(iChannel0, ( \n        ( (floor(uv) + 0.5) + yuanxin)\n        + rot2d(hehe, (rotV) * 1.5 * smoothstep(0.01,0.5,vor.z))\n    \n     ) ).rgb ;\n    //col2 *= smoothstep(0.0,0.1,dot(hehe,hehe));\n\n    if(iMouse.z <= 0.0)\n    {\n        //col = col2;\n        //col2 = col;\n        col = mix(col2, col, 1.0-smoothstep(0.05,0.1,vor.z));\n#ifdef DisplayVoronoi\n        col = vec3(smoothstep(0.02,0.04,vor.z));\n        col *= smoothstep(0.0,0.001,dot(vor.xy,vor.xy));\n        //col = vec3(1.0 - dot(vor.xy,vor.xy));\n        \n#endif\n\n    }//else\n    //col = mix(col, col2, 1.0-smoothstep(0.03,0.08,vor.z));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 7,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}