{
    "Shader": {
        "info": {
            "date": "1558041211",
            "description": "[b]photosensitivity warning[/b]\nA dizzyingly rotating checkerboard pattern.\nWatch at fullscreen and stare at the center.",
            "flags": 0,
            "hasliked": 0,
            "id": "wtfGDs",
            "likes": 3,
            "name": "dizzychess",
            "published": 3,
            "tags": [
                "checkerboard",
                "illusion",
                "rotation"
            ],
            "usePreview": 0,
            "username": "donda",
            "viewed": 452
        },
        "renderpass": [
            {
                "code": "// dizzychess\n// CA 2019-5-16\n\n// number of checkerboard units along shorter edge\nconst float no = 40.;\n// time for one cycle (in seconds)\nconst float period = 60.;\n// rotation speed at height of cycle (in degrees per second)\nconst float speed = radians(360.);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalized coordinates\n    vec2 c = (fragCoord - iResolution.xy / 2.0) /\n        min(iResolution.x, iResolution.y) * 2.0;\n\n    // rotation angle\n    const float a = 2. * radians(180.) / period;\n    float angle = speed * (iTime - sin(a * iTime) / a);\n\n    // rotation\n    c = vec2(c.x * cos(angle) + c.y * sin(angle),\n             c.x * sin(angle) - c.y * cos(angle));\n\n    // 2d rectangle wave\n    c = mod(floor(c * no), 2.0);\n\n    // checkerboard\n\tfloat checker = (c.x - 0.5) * (c.y - 0.5) * 2.0 + 0.5;\n\n    // make fields red and white\n    fragColor = vec4(1.0, 1.0 - checker, 1.0 - checker, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}