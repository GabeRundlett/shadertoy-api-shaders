{
    "Shader": {
        "info": {
            "date": "1643685271",
            "description": ".......",
            "flags": 0,
            "hasliked": 0,
            "id": "flyXW3",
            "likes": 6,
            "name": "............",
            "published": 3,
            "tags": [],
            "usePreview": 0,
            "username": "lllcz",
            "viewed": 228
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy; \n    float gris = 1.0;\n    float divisor = 4.8 / iResolution.y;\n    float grosorInicial = divisor * 0.2;\n\n    const int kNumPatrones = 6;\n\n    //x:角的正弦，y:角的余弦，z:亮度因子\n    vec3 datosPatron[kNumPatrones];\n    //datosPatron[0] = vec3(-0.7071, 0.7071, 1.0); // -45°\n    datosPatron[1] = vec3(0.0, 1.0, 0.6); // 0°\n    //datosPatron[2] = vec3(0.0, 1.0, 0.5); // 0°\n    //datosPatron[3] = vec3(1.0, 0.0, 0.4); // 90°\n    //datosPatron[4] = vec3(1.0, 0.0, 0.3); // 90°\n    //datosPatron[5] = vec3(0.0, 1.0, 0.2); // 0°\n\n    vec4 color = texture(iChannel0, uv);\n    fragColor = color;\n\n    for (int i = 0; i < kNumPatrones; i++)\n    {\n        float sinv = datosPatron[i].x;\n        float cosv = datosPatron[i].y;\n\n        // @note 对 uv 坐标进行旋转\n        vec2 rotuv = vec2(\n                         uv.x * cosv - uv.y * sinv,\n                         uv.x * sinv + uv.y * cosv\n                     );\n\n        //增加对比度\n        float grosor = grosorInicial * float(i + 1);\n        //构造不同方向的 “木刻纹”\n        float dist = mod(rotuv.y - sin(rotuv.x * 20.0) * 0.03, divisor); \n        //灰度\n        float lum = dot(vec3(.299, .578, .114), color.rgb);\n        //将各个亮度分级的 “木刻纹” 进行融合\n        if (lum < 0.82 - .12 * float(i)) //亮度分级\n        {\n            //增加对比\n            float k = datosPatron[i].z;\n            float x = (grosor - dist) / grosor;\n            float fx = abs(x / k);\n            gris = min(gris, fx);\n        }\n    }\n\n    fragColor = vec4(gris, gris, gris, 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}