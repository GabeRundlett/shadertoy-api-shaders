{
    "Shader": {
        "info": {
            "date": "1678747106",
            "description": "Detailed version",
            "flags": 0,
            "hasliked": 0,
            "id": "mdG3Wm",
            "likes": 5,
            "name": "Lakes land 3",
            "published": 3,
            "tags": [
                "clouds",
                "mountains"
            ],
            "usePreview": 0,
            "username": "guil",
            "viewed": 195
        },
        "renderpass": [
            {
                "code": "// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Created by S. Guillitte 2021\n \n\nmat2 rot(float a) {\n\treturn mat2(cos(a),sin(a),-sin(a),cos(a));\t\n}\n\nconst vec3 l = vec3(1.);\nconst vec3 sundir = normalize( vec3(-1.,.5,-1.) );\nconst vec3 suncol = vec3(1.,.8,.5);\n\n\nfloat cloud(in vec3 p) {\n\t\n\tfloat s=2.,e;\n    p.xz *=.7;\n\tfor(e=(1.7-p.y)*(3.-p.y);s<8e2;s*=1.7)\n            p.xz*=rot(1.),\n            e+=abs(dot(sin(p*s)/s,.8*l));\n    return e;\n}\n\nfloat ground(in vec3 p) {\n\t\n\tfloat s=2.,f;\t\n\tfor(f=p.y;s<1e3;s*=1.7)\n            p.xz*=rot(1.),            \n            f+=dot(sin(p.xz*s*.4)/s,l.xz);    \n    return f;\n}\n\nvec3 sky( in vec3 ro, in vec3 rd ,in vec2 res)//modified from IQ clouds\n{\n  \n    // background sky         \n    float sun = max( dot(sundir,rd), 0.0);    \n    vec3 col = vec3(0.6,0.6,0.78) - abs(rd.y)*0.5*vec3(1.0,0.4,.05) ;    \n    col += 0.4*suncol*pow( sun, 8.0 ); \n    // clouds        \n    float k = max(res.x,-.4), c = res.y;\n    if(c>.0)\n       col *= 1.-.4*c,\n       col += 3.*(.5+k)*c*suncol,\n       col += vec3(0.2,0.08,0.04)*pow( sun, 3.0 )*c;    \n    return col;\n}\n\n\nvec3 raycast( in vec3 ro, vec3 rd )\n{\n    float t = 4.5,e,f,de=0.,df,d,c=1.,dt=1.,r=1.;\n    vec3 col= vec3(0.),p;\n    for( int i=0; i<128; i++ )\n\t{                \n        p = ro+t*rd;\n        if(p.y<0.)rd.y = -rd.y, ro = p, t = .2, r=.6;\n        e = cloud(p), f=ground(p),             \n        d =min(min(f,p.y+.1),max(e,.1));\n        t +=.52*d;\n        if(e<.1)de+=(cloud(p + dt*sundir)-e)/dt;\n        c *= 1./(1.+ exp(-12.*e));        \t\n    }\n    if(f>.1)return r*sky(ro,rd,vec2(.03*de,(1.-c)*.3));        \n    df=max(ground(p+.01*sundir)-f,-.3)*20.+.6;\n    f=.4-exp(-f*f);\n    col = vec3(f, f*f,f*f*f)*df;\n    return r*col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n\tfloat t = iTime;\n     vec2  R = iResolution.xy,\n           q = ( u+u - R ) / R.y;   \n    \n    // camera\n    \n    vec3 ro = vec3(0.), rd = normalize(vec3(q,3.) );\n    rd.yz*=rot(-.15); \n    rd.xz*=rot(0.1*t);\n    ro.x -=t*.4;\n    ro.y += 2.;\n\n\t// raymarch \n    \n    vec3 col = raycast(ro,rd);\n    \t\n\t// shade\n    \n    col = (log(1.+col));\n    col = clamp(col,0.,1.);\n    fragColor = vec4( col, 1.0 );\n\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}