{
    "Shader": {
        "info": {
            "date": "1726399131",
            "description": "source  https://glslsandbox.com/e#55836.0 https://glslsandbox.com/e#55472.1 https://glslsandbox.com/e#55712.0",
            "flags": 0,
            "hasliked": 0,
            "id": "43fczj",
            "likes": 1,
            "name": "eye and particles",
            "published": 3,
            "tags": [
                "eye",
                "color",
                "particles"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 83
        },
        "renderpass": [
            {
                "code": "#define time iTime\n#define resolution iResolution.xy\nmat2 rot(float a) {\n    float c = cos(a), s = sin(a);\n    return mat2(c,s,-s,c);\n}\n\nfloat box(vec3 p, float s) {\n    p = abs(p) - s;\n    return max(max(p.x, p.y), p.z);\n}\n\nfloat ifsBox(vec3 p) {\n    for(int i=0; i<4; i++) {\n        p = abs(p) - 1.; // Fold\n        p.xz *= rot(1.); // 回転\n        p.xy *= rot(1.); // 回転\n    }\n    return box(p, 0.6);\n}\n\nfloat map(vec3 p) {\n    p.xy *= rot(time);\n    p.xz *= rot(time);\n    return ifsBox(p);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    \n  vec2 p = (gl_FragCoord.xy * 2.0 - resolution) / min(resolution.x, resolution.y);\n\n    vec3 cPos = vec3(0., 0., 10.0);\n    vec3 cDir = vec3(0.0, 0.0, -1.0);\n    vec3 cUp  = vec3(0.0, 1.0, 0.0);\n    vec3 cSide = cross(cDir, cUp);\nvec3 destColor = vec3(0.5, 0.05, 0.5);\n    vec2 p2 = (gl_FragCoord.xy * 2.0 - resolution) / min(resolution.x, resolution.y); // 正規化\n    float l = 0.05 / abs(length(p) - 0.5);\n    l += 0.05 / abs(length(p) - 0.3);\n    l += 0.05 / abs(length(p) - 0.1);\n    vec3 ray = normalize(cSide * p.x + cUp * p.y + cDir);\n\n\t\n    vec3 c = vec3(0);\n    vec3 c2 = vec3(0);\n    for(int i = 0; i < 10; i++){\n    float f2=2.* 3.14 * float(i) / 20. ;\n    float t =  reflect(time,1.0/( 1.0*9.0 /20.0));\n\n    float x2 = cos(t*f2);\n    float y2 = sin(t*f2);\n    vec2 o = 0.25*sin(iTime) * vec2(x2,y2);\n\t      vec2 o2 = 0.55*cos(iTime) * vec2(x2,-y2);  \n    float r2 = fract(t*f2);\n    float g = 1.-r2;\n    float b = 1.-r2;\n    c += 0.005/(length(p-o))*vec3(r2,g,1);\n\t      c2 += 0.005/(length(p-o2))*vec3(r2,g,1);\n    }\n\t\n\t\n    float dist = 0.0;\n    float t = 0.01;\n    float acc = 0.0;\n    for (int i = 0; i < 99; i++){\n        vec3 pos = cPos + ray * t;\n        dist = map(pos)+l;\n\n    \tdist = max(abs(dist), 0.02);\n    \tacc += exp(-dist*3.0);\n\n    \tt += dist*0.5;\n    }\n\n    vec3 col = vec3(acc * 0.013);\n    fragColor = vec4(col, 1.0);\n\tfragColor*= vec4(destColor*100., 1.0);\n\t fragColor+= vec4(c+c2,1);\n    // Output to screen\n   \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}