{
    "Shader": {
        "info": {
            "date": "1562423665",
            "description": "wanted to try fractals. ",
            "flags": 0,
            "hasliked": 0,
            "id": "tlfSz7",
            "likes": 2,
            "name": "mandelbrot test I",
            "published": 3,
            "tags": [
                "mandelbrot"
            ],
            "usePreview": 0,
            "username": "dagbrynildsentholander",
            "viewed": 309
        },
        "renderpass": [
            {
                "code": "float N = 2048.;\nvec2 mouse = vec2(0.);\n\nfloat mandelbrot(vec2 c)\n{\n    vec2 z = vec2(-.3, .0);\n    for(float i = 0.; i < N; i++)\n    {        \n        if(length(z)>2.)\n            return i;\n     \telse \n        \tz = vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y)+c;\n    }\n    return N;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ((fragCoord/iResolution.xy)-vec2(.5))*5.;\n    // Time varying pixel color\n    vec3 col = vec3(0);\n\tmouse+=vec2(-1.37, -.01);\n    float value = mandelbrot((uv.xy/(iTime*(iTime*iTime)+1.)+mouse))/N;\n\tcol = vec3( sin(fract(value*value*20.)), sin(fract(value*7.)*5.),  sin(value*value*5.));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}