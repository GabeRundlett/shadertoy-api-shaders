{
    "Shader": {
        "info": {
            "date": "1594359326",
            "description": "方块显隐",
            "flags": 0,
            "hasliked": 0,
            "id": "tlScWD",
            "likes": 0,
            "name": "方块Noise",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "miracleYang",
            "viewed": 248
        },
        "renderpass": [
            {
                "code": "float PI=3.1415926;\nfloat Hash21(vec2 p){\n    p = fract(p*vec2(234.34,435.345));\n    p+=dot(p,p+34.23);\n    return fract(p.x*p.y);\n}\nvec2 N22(vec2 p){\n    vec3 a = fract(p.xyx*vec3(123.34,234.34,345.65));\n    a+=dot(a,a+34.45);\n    return fract(vec2(a.x*a.y,a.y*a.z));\n}\nfloat aa = 0.;\nfloat width=.1;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    //uv= (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    //vec2 screen = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    //float backgroundColor =smoothstep(-.01,.01, cos(screen.x*PI)+.035);\n    \n    vec3 col = vec3(0);\n    uv *= 5.;\n    \n    float t = iTime;\n    aa = abs(sin(t));\n    \n    //vec2 c = fract(uv);\n    \n    vec2 id = floor(uv)+0.5;\n    float n=Hash21(id);\n    \n   \n    \n\n    fragColor = vec4(n,n,n,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}