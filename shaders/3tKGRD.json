{
    "Shader": {
        "info": {
            "date": "1578416740",
            "description": "Visualizing the time inside a year. Millennium version: [url]https://www.shadertoy.com/view/3sBfW1[/url]\nfrom the inside:\n   second\n   minute\n   hour\n   day\n   week (very inaccurate)\n   month (inaccurate)\n   year\n",
            "flags": 0,
            "hasliked": 0,
            "id": "3tKGRD",
            "likes": 9,
            "name": "Yearclock / Circular Calendar",
            "published": 3,
            "tags": [
                "timer",
                "calendar"
            ],
            "usePreview": 0,
            "username": "izutionix",
            "viewed": 854
        },
        "renderpass": [
            {
                "code": "#define ss(d) smoothstep(.159155/p.y*b,-.159155/p.y*b, d)\n#define sc(o) smoothstep(1.*b,-1.*b,p.y-r+o)\n\nvec3 pal(float g)\n{\n\treturn pow(cos(.8-g-vec3(0,.25,.5) ), vec3(12) ); // https://www.shadertoy.com/view/WsffWB\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2.*fragCoord - iResolution.xy ) /iResolution.y;\n\n    vec2 p = vec2(atan(uv.x,uv.y)/6.283185+.5, length(uv));\n    \n    float b = 2./iResolution.y;\t// blur\n    float r = .85;\t// size\n    float bg = .15; // background brightness\n    \n    \n    // year\n    float ty = fract(iDate.y/12. + iDate.z/30./12. + iDate.w/86400./30./12.);\n    float dy = p.x-ty;\n\tfloat sy = ss(dy);\n    float cy = sc(0.);\n    vec3 year = vec3(max(sy*cy, bg*cy) * pal(1./7.));\n    \n    // month (inaccurate)\n    float tm = fract(iDate.z/30. + iDate.w/86400./30.);\n    float dm = p.x-tm;\n\tfloat sm = ss(dm);\n    float cm = sc(1./8.);\n    vec3 month = vec3(max(sm*cm, bg*cm) * pal(2./7.));\n    \n    // week (very inaccurate)\n    float tw = fract(iDate.z/4.7 + iDate.w/86400./30.);\n    float dw = p.x-tw;\n\tfloat sw = ss(dw);\n    float cw = sc(2./8.);\n    vec3 week = vec3(max(sw*cw, bg*cw) * pal(3./7.));\n\n    // day\n    float td = fract(iDate.w/86400.);\n    float dd = p.x-td;\n\tfloat sd = ss(dd);\n    float cd = sc(3./8.);\n    vec3 day = vec3(max(sd*cd, bg*cd) * pal(4./7.));\n    \n    // hour\n    float th = fract(iDate.w/3600.);\n    float dh = p.x-th;\n\tfloat sh = ss(dh);\n    float ch = sc(4./8.);\n    vec3 hour = vec3(max(sh*ch, bg*ch) * pal(5./7.));\n    \n    // minute\n    float tmi = fract(iDate.w/60.);\n    float dmi = p.x-tmi;\n\tfloat smi = ss(dmi);\n    float cmi = sc(5./8.);\n    vec3 minute = vec3(max(smi*cmi, bg*cmi) * pal(6./7.));\n    \n    // second\n    float ts = fract(iDate.w);\n    float ds = p.x-ts;\n\tfloat ss = ss(ds);\n    float cs = sc(6./8.);\n    vec3 second = vec3(max(ss*cs, bg*cs) * pal(1.));\n    \n    \n    vec3 col = mix(mix(mix(mix(mix(mix(\n\tyear,\n\tmonth, cm),\n\tweek, cw),\n\tday, cd),\n\thour, ch),\n\tminute, cmi),\n\tsecond, cs);\n\n    fragColor = vec4(col, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}