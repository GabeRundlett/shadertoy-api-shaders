{
    "Shader": {
        "info": {
            "date": "1473652171",
            "description": "New deep realms which:\nReally is deep,\nHas light of a flashlight\nRaymarching\n\nThank You for viewing.\n",
            "flags": 16,
            "hasliked": 0,
            "id": "MlKGRD",
            "likes": 3,
            "name": "Deep realms 2!",
            "published": 3,
            "tags": [
                "raymarching",
                "light",
                "cave",
                "realm"
            ],
            "usePreview": 0,
            "username": "Imsure1200q_1UWE130",
            "viewed": 698
        },
        "renderpass": [
            {
                "code": "const float KEY_SP    = 32.5/256.0;\nstruct arc{\n    vec2 x;\n    vec2 y;\n    vec2 z;\n};\nfloat art(vec2 base)\n{\n    float x = length(base - 1.0);\n    float x2 = length(1.0 - base); //This is a max negative\n    float q = smoothstep(length(base), x2, x) - sqrt(max(max(x, 0.0),max(x2, 0.0)));\n    arc h = arc(vec2(x, x2) - base, vec2(q, x), vec2(q, x2));\n    vec3 part = vec3(h.x, h.y.x);\n    vec3 part2 = vec3(h.y.y, h.z);\n    vec3 hsec = vec3(dot(min(cos(h.x.x),sin(h.x.y)),\n                        max(cos(h.y.x),sin(h.y.y)))\n                    - length(sqrt(h.z.x) - cos(h.z.y)));\n    return length(hsec);\n    \n}\nfloat map(vec3 p)\n{\n    return length(max(vec3(dot(sin(p),cos(p))),cos(p))*2.0-1.0) - 3.0;\n}\nfloat isKeyPressed(float key)\n{\n\treturn texture( iChannel1, vec2(key, 1.0) ).x;\n}\nfloat trace(vec3 ro, vec3 rd)\n{\n    float t = 0.0;\n    for(int i = 0; i < 24; i++)\n    {\n        vec3 p = ro+t*rd;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 rd = normalize(vec3(uv, 1.0));\n    rd.xz *= mat2(cos(iTime), -sin(iTime), sin(iTime), cos(iTime));\n    vec3 ro = vec3(0.0, 0.0, -3.0);\n    float t = trace(ro, rd);\n    float fog = 1.0/(1.0+t*t*0.1);\n    vec3 fc = vec3(fog);\n    if(isKeyPressed(KEY_SP) > 0.0) //Much less light\n    {\n        fc *= 0.1;\n        fc += sqrt(sqrt(length(fog)));\n        fc += vec3(.6, .025, .125) - 0.3 - length(uv+rd.xy);\n    }\n    else //Much more light\n    {\n        fc /= 0.1;\n        fc /= sqrt(sqrt(length(fog)));\n        fc += vec3(.6, .025, .125) - 0.3 - length(uv+rd.xy);\n    }\n\tfragColor = vec4(art(uv/uv)/length(uv-rd.xz)) * vec4(fc, 1.0) +\n        0.0 + vec4(0.025, 0.025, 0.025, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}