{
    "Shader": {
        "info": {
            "date": "1614635182",
            "description": "following a tutorial https://youtu.be/hlM940IqpRU\n",
            "flags": 64,
            "hasliked": 0,
            "id": "3tGfRK",
            "likes": 3,
            "name": "Feather Feather everywhere",
            "published": 3,
            "tags": [
                "smoothstep",
                "feather",
                "artofthecode"
            ],
            "usePreview": 0,
            "username": "YitingLiu",
            "viewed": 324
        },
        "renderpass": [
            {
                "code": "#define S smoothstep \n#define T (iTime*.05)\n\n\nmat2 Rot(float a){\n    float c = cos(a), s = sin(a);\n    return mat2(c,s,-s,c);\n}\n\nfloat Feather(vec2 p ){\n    float d = length(p-vec2(0,clamp(p.y,-.3,.3)));\n    float r = mix(.1,.01,S(-.3,.3,p.y));// feather shape \n    float m = S(.01,.0,d-r);\n    \n    float side = sign(p.x);\n    //strands \n    float x = .9*abs(p.x)/r;// stretch out the corner \n    float wave = (1.-x)*sqrt(x)+x*(1.-sqrt(1.-x));\n    float y = (p.y-wave*.2)*80.+side*56.;// number of strands\n    float id = floor(y+20.);\n    \n    float n=fract(sin(id*564.2)*5623.2);\n    float shade = mix(.5,1.,n);\n    float strandLength = mix(.3,1.,fract(n*n*355.));\n    \n    // gaps in between strand \n    float strand = S(.4,.0,abs(fract(y)-.5)-.35);\n    strand*=S(.1,-.2,x-strandLength);\n    \n    d = length(p-vec2(0,clamp(p.y,-.45,.1)));\n\n    float stem = S(.002,.0,d+p.y*.025);\n    \n    return max(strand*m*shade,stem); \n\n\n}\n\nvec3 Transform(vec3 p, float angle){\n    p.xz*=Rot(angle);\n    p.xy*=Rot(angle*.5);// rotate along z axis as well \n    return p;\n\n}\n\nvec4 FeatherBall(vec3 ro, vec3 rd, vec3 pos,float angle ){\n\n    vec4 col = vec4(0);\n    float t = dot(pos-ro,rd);\n    \n    vec3 p = ro+rd*t;\n    float y = length(pos-p);\n    \n    if(y<1.){\n        float x = sqrt(1.-y);\n        vec3 pF = ro+rd*(t-x)-pos;//front intersection \n        pF = Transform(pF,angle);\n        vec2 uvF = vec2(atan(pF.x,pF.z),pF.y);//y axis to be the up and down axis\n        uvF*=vec2(.3,.5);\n        \n        // alpha blending \n        \n        float f = Feather(uvF);\n        vec4 front = vec4(vec3(f),S(.0,.1,f));\n\n        vec3 pB = ro+rd*(t+x)-pos;//back intersection \n        pB = Transform(pB,angle);\n\n        vec2 uvB = vec2(atan(pB.x,pB.z),pB.y);//y axis to be the up and down axis\n        uvB*=vec2(.3,.5);\n        \n        float b = Feather(uvB);\n        vec4 back = vec4(vec3(b),S(.0,.1,b));\n        col=mix(back, front, front.a);// alpha blend - see both back and front \n\n   }\n   \n   return col;\n\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    float fft  = texelFetch( iChannel0, ivec2(0.,0.), 0 ).x; \n\n    vec4 col = vec4(0);\n    \n    vec3 ro = vec3(0,0,0.+mix(-3.,-1.5*min(fract(T),fft),sin(T*10.)));\n    vec3 rd = normalize(vec3(uv,1));\n \n    // bg\n    vec3 bg = vec3(.2,.5*fft,.9)*(uv.y+.5);\n    bg+=vec3(.9,fft*.8,.1)*(-uv.y+.5);\n    col = vec4(bg,0);\n    \n    \n    for (float i = 0.; i <=1.; i+=1./70.){\n         \n         float x =mix(-15.,15.,fract(i+T));\n         float y =mix(-6.,6.,fract(sin(i*643.2)*8593.1));\n         float z =mix(8.+min(.5,fft),0.,i);\n         float a = max(fract(i+T),fft)+T+i*5643.1;\n         vec4 feather = FeatherBall(ro,rd,vec3(x,y,z),a);\n         feather.rgb = mix(bg,feather.rgb,mix(.3,1.,i));\n         feather.rgb=sqrt(feather.rgb);\n         col = mix(col, feather, max(feather.a,fft)*feather.a);\n\n    \n    }\n \n     col = pow(col, vec4(.4545));//gamma correction\n   \n    \n    // Output to screen\n    fragColor =col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 25939,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/raveenaloves/honey-1"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}