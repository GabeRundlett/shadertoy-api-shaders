{
    "Shader": {
        "info": {
            "date": "1633992221",
            "description": "Physically based lightness calculation for a point light above a 100% matte (Lambertian) ground plane.\ndetails: https://hyperknot.com/blog/area_lights_in_shaders/",
            "flags": 0,
            "hasliked": 0,
            "id": "sstSWj",
            "likes": 1,
            "name": "Physically based point light",
            "published": 3,
            "tags": [
                "pointlight",
                "physics"
            ],
            "usePreview": 0,
            "username": "hyperknot",
            "viewed": 742
        },
        "renderpass": [
            {
                "code": "// Physically based lightness calculation \n// for a point light above a 100% matte (Lambertian) ground plane,\n// moving up and down.\n// details: https://hyperknot.com/blog/area_lights_in_shaders/\n\nfloat point_light(vec2 uv, float h, float i) {\n  // h - light's height over the ground\n  // i - light's intensity\n  return i * h * pow(dot(uv,uv) + h*h, -1.5);\n}\n\nfloat lin_to_srgb ( float val ) {\n  if( val < 0.0031308 )\n    return val * 12.92;\n  else\n    return 1.055 * pow(val,1.0/2.4) - 0.055;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n\n    float h = pow(sin(iTime/3.), 2.) * 0.1 + 0.001;\n    float v = point_light(uv, h, 0.005);\n    v = lin_to_srgb(v);\n\t\n \tfragColor=vec4(v);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}