{
    "Shader": {
        "info": {
            "date": "1707669185",
            "description": "Sun Ray Clockwise",
            "flags": 0,
            "hasliked": 0,
            "id": "X3f3z2",
            "likes": 1,
            "name": "Sun Ray Clockwise",
            "published": 3,
            "tags": [
                "ray",
                "polar",
                "clockwise"
            ],
            "usePreview": 0,
            "username": "antoinebou12",
            "viewed": 190
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Transform the screen coordinate to [-1, 1] range for both axes\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n\n    // Parameters for the \"fake\" 3D effect and visualization\n    float angle = 360.0;\n    float scale = 0.9;\n    float offset = iTime * 0.2; // Use time to animate\n\n    // Convert to polar coordinates\n    float r = length(uv) * scale;\n    float theta = atan(uv.y, uv.x) * degrees(1.0); // Convert to degrees\n\n    // Apply the angle and add time-based animation\n    theta += angle * offset;\n\n    // Create a simple pattern based on the angle and distance from center\n    float pattern = mod(floor(theta / angle), 2.0);\n    pattern *= step(0.5, abs(sin(r - offset) * cos(theta - offset)));\n\n    // Use the pattern to mix colors\n    vec3 col = mix(vec3(0.2, 0.3, 0.6), vec3(0.8, 0.7, 0.4), pattern);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}