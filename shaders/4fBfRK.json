{
    "Shader": {
        "info": {
            "date": "1725161855",
            "description": "if you know, you know",
            "flags": 0,
            "hasliked": 0,
            "id": "4fBfRK",
            "likes": 0,
            "name": "Origin Realms",
            "published": 3,
            "tags": [
                "minecraft",
                "bc7",
                "colorcompression"
            ],
            "usePreview": 0,
            "username": "DarkReaper231",
            "viewed": 65
        },
        "renderpass": [
            {
                "code": "uint H_A[80] = uint[80](\n    0x00c00000u, 0x69d97f0au, 0x00da0005u, 0x00fe00cau, \n    0x3e3a6b00u, 0xb6ce2e0eu, 0xcade1037u, 0x0029bbc1u, \n    0xbac3f500u, 0x4526154eu, 0x99f85900u, 0x1367004fu, \n    0x65003000u, 0xe0df94bbu, 0xef950000u, 0x8dfe0723u, \n    0xd7c90000u, 0xa362002bu, 0xba000030u, 0xa2f7002bu, \n    0xd71d83fcu, 0x00cb0ff0u, 0xf61c9200u, 0x2b003b37u, \n    0x4e2a9d00u, 0x0025f2c9u, 0x00e06095u, 0x014fa90bu, \n    0xe18f0015u, 0xb11106d2u, 0x240000bfu, 0x005e72a4u, \n    0x0097c421u, 0x347d1799u, 0xaf9b000bu, 0x7700002fu, \n    0x31051700u, 0x003a00dau, 0x95030000u, 0x00000bd4u, \n    0x57a10074u, 0x26396a0cu, 0x9f67f400u, 0xb2257fa7u, \n    0xa3b30012u, 0x7b002349u, 0x6a3c0090u, 0x42285e94u, \n    0x662695deu, 0x003a00f3u, 0x5c85f200u, 0xc8b20079u, \n    0x23171600u, 0x2cf40773u, 0x2600d1f0u, 0x0003dc00u, \n    0x4e00dbd0u, 0x000bd200u, 0x2200fccfu, 0x33b450bau, \n    0x5f960c00u, 0x00afc200u, 0x334d5b85u, 0x0d373224u, \n    0x00c68600u, 0x90000000u, 0x04a5bdc0u, 0x978119e6u, \n    0x549a0f26u, 0x5918e885u, 0x00000004u, 0xfd005a3fu, \n    0xa3542960u, 0x06006d2eu, 0xfb005fc4u, 0x00006384u, \n    0x2a1dec10u, 0xb8a50aceu, 0xd6f2012du, 0x1f002a30u\n);\n\nuint H_h(int x) {\n    x = max(0, x - 1);\n    uint y = H_A[x >> 2];\n    uint z;\n    switch (x >> 5) {\n        case 0: z = 0x43280110u; break;\n        case 1: z = 0x30000060u; break;\n        case 2: z = 0x80041000u; break;\n        case 3: z = 0x08008000u; break;\n        case 4: z = 0x20040320u; break;\n        case 5: z = 0x00210090u; break;\n        case 6: z = 0x000e0000u; break;\n        case 7: z = 0x10008000u; break;\n        case 8: z = 0x01030000u; break;\n        case 9: z = 0xa2010090u; break;\n        default: z = 0u;\n    }\n\n    return (((z >> (x & 31)) & 1u) << 8) | ((y >> ((x & 3) << 3)) & 0xffu);\n}\n\nuint H_get(vec4 c) {\n    ivec3 H_1 = ivec3(103, 49, 313);\n    ivec3 H_2 = ivec3(103, 112, 119);\n    ivec3 s = ivec3(c.xyz * 255.0);\n\n    ivec3 s1 = s * H_1 + H_1;\n    ivec3 s2 = s * H_2 + H_2;\n\n    int f1 = (s1.x + s1.y + s1.z) % 321;\n    int f2 = (s2.x + s2.y + s2.z) % 321;\n    \n    return (H_h(f1) + H_h(f2)) % 321u;\n}\n\nuint[15] M_b(uint[16] g) {\n  uint[15] r;\n\n  for (uint i = 0u; i < 16u; i++) {\n      uint a = g[i];\n\n      for (uint j = 0u; j < i; j++) {\n          uint t = r[14u - j] * 240u + a;\n          r[14u - j] = t & 0xFFu;\n          a = t >> 8;\n      }\n\n      if (i < 15u) {\n          r[14u - i] = a & 0xFFu;\n      }\n  }\n\n  return r;\n}\n\nuint M_q(uint v, uint p, uint b) {\n    v = (v << 1u) | p;\n    v <<= (8u - (b + 1u));\n    v |= (v >> (b + 1u));\n\n    return v;\n}\n\nvec4 M_read(sampler2D data, ivec2 coord) {\n    ivec2 c = coord >> 2 << 2;\n    vec4[16] a;\n\n    for (int i = 0; i < 16; i += 4) {\n        a[i + 0] = texelFetch(data, c + ivec2(0, i >> 2), 0);\n        a[i + 1] = texelFetch(data, c + ivec2(1, i >> 2), 0);\n        a[i + 2] = texelFetch(data, c + ivec2(2, i >> 2), 0);\n        a[i + 3] = texelFetch(data, c + ivec2(3, i >> 2), 0);\n    }\n\n    uint[16] g;\n    for (int i = 0; i < 16; i += 4) {\n        g[i + 0] = H_get(a[i + 0]);\n        g[i + 1] = H_get(a[i + 1]);\n        g[i + 2] = H_get(a[i + 2]);\n        g[i + 3] = H_get(a[i + 3]);\n    }\n\n    uint[15] b = M_b(g);\n  \n    // Mode 6\n    uint h = ((b[1] & 0x3Fu) << 2) | ((b[0] & 0x80u) >> 6) | 1u;\n    uint k = ((b[2] & 0x1Fu) << 3) | ((b[1] & 0xE0u) >> 5) | 1u;\n    uint l = ((b[3] & 0x0Fu) << 4) | ((b[2] & 0xF0u) >> 4) | 1u;\n    uint m = ((b[4] & 0x07u) << 5) | ((b[3] & 0xF8u) >> 3) | 1u;\n    uint o = ((b[5] & 0x03u) << 6) | ((b[4] & 0xFCu) >> 2) | 1u;\n    uint p = ((b[6] & 0x01u) << 7) | ((b[5] & 0xFEu) >> 1) | 1u;\n    uint q = (b[6] & 0x1Eu) >> 1;\n    uint r = ((b[7] & 0x01u) << 3) | ((b[6] & 0xE0u) >> 5);\n\n    q = M_q(q, 1u, 4u);\n    r = M_q(r, 1u, 4u);\n\n    uint x =                 (b[14] << 23) | (b[13] << 15) | (b[12] << 7) | ((b[11] & 0xFEu) >> 1);\n    uint y = (b[11] << 31) | (b[10] << 23) | (b[ 9] << 15) | (b[ 8] << 7) | ((b[ 7] & 0xFEu) >> 1);\n    uint z = uint(coord.y & 3) * 4u + uint(coord.x & 3);\n\n    int d = z == 0u ? 0 : int(z - 1u) * 4 + 3;\n    int e = 32 - d;\n\n    uint w = ((((d < 32 ? (y >> d) : 0u) | (e == 32 ? 0u : (e < 0 ? (x >> (-e)) : (x << e)))) & (z == 0u ? 7u : 15u)) * 64u + 7u) / 15u;\n    uint f = 64u - w;\n\n    return vec4(\n        float((h * f + k * w + 32u) >> 6) / 255.0,\n        float((l * f + m * w + 32u) >> 6) / 255.0,\n        float((o * f + p * w + 32u) >> 6) / 255.0,\n        float((q * f + r * w + 32u) >> 6) / 255.0\n    );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float scale = floor(iResolution.y / 128.0); \n    \n    vec2 texCoord = floor(fragCoord / scale) / (iResolution.y / scale);\n    texCoord.y = 1.0 - texCoord.y;\n\n    vec4 textureColor = M_read(iChannel0, ivec2(texCoord * 128.0));\n    fragColor = textureColor;\n\n    if (textureColor.w > 0.1) fragColor = textureColor;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}