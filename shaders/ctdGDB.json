{
    "Shader": {
        "info": {
            "date": "1683050869",
            "description": "Based on https://thebookofshaders.com/07/",
            "flags": 0,
            "hasliked": 0,
            "id": "ctdGDB",
            "likes": 1,
            "name": "Galaxy flash",
            "published": 3,
            "tags": [
                "space",
                "galaxy",
                "red",
                "blue",
                "flash"
            ],
            "usePreview": 0,
            "username": "bronna",
            "viewed": 177
        },
        "renderpass": [
            {
                "code": "// easing function from https://easings.net/\nfloat quarticInOut(float t) {\n  return t < 0.5\n    ? +8.0 * pow(t, 4.0)\n    : -8.0 * pow(t - 1.0, 4.0) + 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Calculate the aspect ratio\n    float aspectRatio = iResolution.y / iResolution.x;\n    \n\t// Calculate the normalized pixel coordinates\n    vec2 uv = ( ( fragCoord.xy / iResolution.xy ) - 0.5 ) * vec2( 1.0, aspectRatio ) + vec2( 0.5 );\n    float position = 0.0;\n    \n    float t = quarticInOut(abs(fract(iTime)) / 2.4);\n\n    // the galaxy\n    position = max(distance(uv,vec2(0.1)),distance(uv,vec2(0.9)));\n    float circ = smoothstep(0.49, position, 0.5+t/4.0);\n\n    vec3 color = vec3(circ, 0.2, 0.4);\n\n\tfragColor = vec4( color, 1.0 );\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}