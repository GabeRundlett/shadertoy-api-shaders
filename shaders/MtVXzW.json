{
    "Shader": {
        "info": {
            "date": "1483390356",
            "description": "From sumerians to modern occultism :-) [url]https://en.wikipedia.org/wiki/Pentagram[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "MtVXzW",
            "likes": 20,
            "name": "pentacle (212 chars)",
            "published": 3,
            "tags": [
                "2d",
                "2tweets",
                "gothic",
                "pentagram",
                "pentacle",
                "esoteric",
                "occult"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1049
        },
        "renderpass": [
            {
                "code": "//  ( see more readable versions below )\n\n/** // --- 212 chars ( golfed )\n\n#define mainImage(O,u)                           \\\n    vec2 R = iResolution.xy, U = (u+u-R)/R.y, V; \\\n    for ( R += dot(U,U) *11. -6. -R;             \\\n          O.a++ < 6.;                            \\\n          U *= mat2(.31,-.95,.95,.31) )          \\\n        R = abs(V=20.*U-4.).x < 1.  &&  abs(V.y=U.y) < .75  &&  ( abs(V.y) >.4 ? V.x>R.x: V.y>R.y )\\\n            ?  V  :  R;                          \\\n    O += 3.-4.*(R*R).x\n\n/**/\n   \n\n\n/**/ // --- 233 chars ( cleanup )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 V, R = iResolution.xy;\n    R += dot( U= (U+U-R)/R.y ,U) *11. -6. -R;     // circle\n    \n    for (int i=0; i<5; i++)                       // rotate and repeat\n        R = abs(V=20.*U-4.).x < 1.  &&  abs(V.y=U.y) < .75  &&  ( abs(V.y) >.4 ? V.x>R.x: V.y>R.y )\n            ?  V  :  R,  \n        U *= mat2(.31,-.95,.95,.31);\n\n    O = 3.-4.*(R*R).xxxx;                         // decoration (less resolution-independant)\n}\n/**/\n\n\n\n\n/** // --- 233 chars by Fabrice ( from Z-buffer version )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n  //float a = 6.28/5., c=cos(a),s=sin(a);  // try a= 6.28/7.; i<7  or  a= 6.28/3.33; i<10\n    vec2 V, R = iResolution.xy;\n    R += dot( U= (U+U-R)/R.y ,U) *11. -6. -R;     // circle\n    \n    for (int i=0; i<5; i++)                       // rotate and repeat\n        R = abs(V=20.*U-4.).x < 1.  &&  abs(V.y=U.y) < .75  &&  ( abs(V.y) >.4 ? V.x>R.x: V.y>R.y )\n            ?  V  :  R,  \n        U *= mat2(.31,-.95,.95,.31);\n      //U *= mat2(c,-s,s,c);\n      //U *= mat2(sin(1.26+1.57*vec4(1,2,0,1)));  //     1.26 = 2pi/5\n\n    O = 3.-4.*(R*R).xxxx;                         // decoration (less resolution-independant)\n}\n/**/\n\n\n\n\n/** // --- 237 chars by coyote ( from Z-buffer version )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n  //float a = 6.28/5., c=cos(a),s=sin(a);  // try a= 6.28/7.; i<7  or  a= 6.28/3.33; i<10\n    vec2 V, R = iResolution.xy;\n    R += length( U= (U+U-R)/R.y )*22.-16.6 -R;    // circle\n    \n    for (int i=0; i<5; i++)                       // rotate and repeat\n        R = abs(V=20.*U-4.).x < 1.  &&  abs(V.y=U.y) < .75  &&  ( abs(V.y) >.4 ? V.x>R.x: V.y>R.y )\n            ?  V  :  R,  \n        U *= mat2(.31,-.95,.95,.31);\n      //U *= mat2(c,-s,s,c);\n      //U *= mat2(sin(1.26+1.57*vec4(1,2,0,1)));  //     1.26 = 2pi/5\n\n    O = 3.-3.*abs(R.xxxx);                        // decoration\n}\n/**/\n\n\n\n\n/** // --- 245 chars: -46 ( from Z-buffer version ) \n\nvoid mainImage( out vec4 O, vec2 U )\n{\n  //float a = 6.28/5., c=cos(a),s=sin(a);  // try a= 6.28/7.; i<7  or  a= 6.28/3.33; i<10\n    float w , y;\n    vec2 R = iResolution.xy;\n    R += length( U= (U+U-R)/R.y )*22.-16.6 -R;    // circle\n    \n    for (int i=0; i<5; i++)                       // rotate and repeat\n        //  each bar:   width,       height,          different Z-buffer cond at ends vs center\n        abs(w=20.*U.x-4.) < 1.  &&  abs(y=U.y) < .75  &&  ( abs(y) >.4 ? w>R.x: y>R.y )\n            ?  R = vec2( w, y )  :  U,  \n        U *= mat2(.31,-.95,.95,.31);\n      //U *= mat2(c,-s,s,c);\n      //U *= mat2(sin(1.26+1.57*vec4(1,2,0,1)));  //     1.26 = 2pi/5\n\n    O += 3.-3.*abs(R.x) -O;                       // decoration\n  //O += smoothstep(1.,.6, abs(R.x) ) -O;\n}\n/**/\n\n\n\n\n/** // --- 281 chars: -36 ( from Z-buffer version )\n\n#define S  O = vec4( w, y, smoothstep(1.,.6, abs(w) ), 1 )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O.xyz = iResolution;\n  //float a = 6.28/5., c=cos(a),s=sin(a);  // try a= 6.28/7.; i<7  or  a= 6.28/3.33; i<10\n    float w = (length(U= (U+U-O.xy)/O.y )-.75)/.045, y = -1.;\n    S;  // circle\n    \n    for (int i=0; i<5; i++)\n\t\ty = U.y, w = (U.x-.2)/.05, \n        abs(y)<.75 && ( abs(y) >.4 ? w>O.x: y>O.y ) && abs(w)<1.  ?  S  :  O,  \n        U *= mat2(.31,-.95,.95,.31);\n      //U *= mat2(c,-s,s,c);\n\n    O = O.zzzz;\n}\n/**/\n\n\n\n\n/** // --- alternate code design ( kind of Z-buffer) - 317 chars\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = iResolution.xyzz;\n    U = (U+U-O.xy)/O.y;\n  //float a = 6.28/5., c=cos(a),s=sin(a);\n    float l = length(U)-.75, w;\n    \n    O = mix(-O/O, vec4(.2+.05*l/.04,0, 1,0), smoothstep(.015, .0, abs(l)-.03));  // circle\n    \n    for (int i=0; i<5; i++)\n\t\tl = abs(U.y), w = abs(U.x-.2)/.05, \n        O = l<.75 && ( l >.4 ? U.x>O.x: U.y>O.y ) && w<1.\n                ? vec4(U, smoothstep(1.,.6, w ),1)\n                : O,  \n        U *= mat2(.31,-.95,.95,.31);\n      //U *= mat2(c,-s,s,c);\n \n    O = O.zzzz;\n}\n/**/\n\n\n\n\n/** // --- iq: -9 chars from original code design.\n\n#define s(p,w,a,b) smoothstep(.015, .0, abs(U.x-p)-w )*step(abs(a),b)\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O.xyz = iResolution;\n    U = (U+U-O.xy)/O.y;\n    O -= O;   \n\n    for( int i=0; i<5; i++ ) \n        O +=  s(.2  , .025, U.y,   .68)\n             -s(.245, 0.  , .2,    abs(U.y+.2))*2.\n             -s(.155, 0.  , U.y-.2,.2)*2.,\n        U *= mat2(.31,-.95,.95,.31);\n\n    U.x = length(U);\n    O += s(.75, .03, 0.,1.);\n}\n/**/\n\n\n\n\n/**  // --- 305 chars - original code design (not so neat)\n\n#define s(x,p,w) smoothstep(.015, .0, abs(x-p) -w )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n\tvec2 R = iResolution.xy;\n    U = (U+U-R)/R.y;\n  //float a = 6.28/5., c=cos(a),s=sin(a);\n    \n    O += s(length(U), .75, .03) -O; \n    \n    for (int i=0; i<5; i++) {\n\t\tif (abs(U.y)<.68)      O += s(U.x, .2, .025);\n        if (U.y>0. || U.y<-.4) O -= s(U.x, .245, 0.)*2.;\n        if (U.y>0. && U.y< .4) O -= s(U.x, .155, 0.)*2.;\n        U *= mat2(.31,-.95,.95,.31);\n      //U *= mat2(c,-s,s,c);\n    } \n}\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}