{
    "Shader": {
        "info": {
            "date": "1588659193",
            "description": "practice",
            "flags": 0,
            "hasliked": 0,
            "id": "tslfRj",
            "likes": 5,
            "name": "Diving Gold",
            "published": 3,
            "tags": [
                "rauymarching"
            ],
            "usePreview": 0,
            "username": "butadiene",
            "viewed": 363
        },
        "renderpass": [
            {
                "code": "mat2 rot (float r){\n  return mat2(cos(r),sin(r),-sin(r),cos(r));\n}\n\nfloat cube(vec3 p,vec3 s){\n  vec3 q = abs(p);\n  vec3 m = max(s-q,0.);\n  return length(max(q-s,0.))-min(min(m.x,m.y),m.z);\n}\n\nvec2 pmod(vec2 p,float n){\n  float np = 3.141592*2./n;\n  float r = atan(p.x,p.y)-0.5*np;\n  r  =mod(r,np)-0.5*np;\n  return length(p)*vec2(cos(r),sin(r));\n}\n\nfloat dist2(vec3 p){\n    float k = 0.5;\n    p.y += 0.1*sin(p.z*5.+iTime);\n    p.xy *= rot(p.z*0.1);\n    p.z += -iTime;\n    \n    \n    p = mod(p,k)-0.5*k;\n    float d;\n    vec2 c = vec2(max(0.,length(p.xy)-0.0),max(abs(p.z)-0.04,0.));\n    d = length(c);\n\treturn d;\n}\n\nfloat dist(vec3 p){\n    p.z += iTime;\n    for(int i = 0;i<6;i++){\n    float si = step(mod(iTime,6.),float(i));\n    p.xy = mix(p.xy,p.xy*rot(0.3+step(0.6,fract(iTime))),si);\n    p.yz = mix(p.yz,p.yz*rot(0.2+step(0.3,fract(iTime))),si);\n    p = abs(p)-0.2;\n  }\n\n  p.xy = pmod(p.xy,6.);\n  \n  p.x -= 0.6;\n  float k = 0.8;\n  p = mod(p,k)-0.5*k;\n \n  float s = 0.2-0.03;\n  float d2 = cube(p,vec3(10.,0.05,0.05));\n  float d3 = cube(p,vec3(0.05,0.05,10.));\n  float d4 = cube(p,vec3(0.05,10.,0.05));\n  return min(cube(p,vec3(0.2,0.2,s)),min(min(d2,d3),d4));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 uv = fragCoord.xy/iResolution.xy;\n  float s = 0.1;\n  vec2 r=iResolution.xy,p=(fragCoord.xy*2.-r)/min(r.y,r.x);\n  p *= rot(iTime);\n  float radius = 0.1;\n  float rkt = iTime*0.2;\n  vec3 ro = vec3(cos(rkt)*radius,0.,sin(rkt)*radius);\n  vec3 ta = vec3(0.,0.,0.);\n  vec3 cdir = normalize(ta-ro);\n  vec3 side = cross(cdir,vec3(0.,1.,0.));\n  vec3 up = cross(side,cdir);\n  float fov = 0.4;\n  vec3 rd = normalize(p.x*side+p.y*up+cdir*fov);\n  float d,t=0.5;\n  float ac = 0.;\n  float ac2 = 0.;\n  for(int i = 0;i<76;i++){\n    d = dist(ro+rd*t);\n    float d2 = dist2(ro+rd*t);\n    ac += exp(abs(d)*-.2)*step(d,d2);\n    ac2 += 0.03/abs(d2)*step(d2,d);\n      d = min(d,d2);\n      if(d<0.001) break;\n    t+=d;\n  }\n  vec3 col = vec3(0.);;\n   col +=0.05*ac*vec3(1.0,0.5,0.1);\n      col +=.1*ac2*vec3(1.,1.,1.);\n  float near = 0.;\n  float far = 7.;\n  vec3 fcol = vec3(0.3,0.3,0.3);\n  col = mix(fcol,col,clamp((far-t)/(far-near),0.0,1.0));\n  float suv = 0.96;\n  uv = (uv-0.5)*suv+0.5;\n  vec2 sd = vec2(0.002,0.);\n \n  col = clamp(col,0.,1.);\n \n \n    col *= 1.5;\n    fragColor=vec4(col,1);\n  \n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}