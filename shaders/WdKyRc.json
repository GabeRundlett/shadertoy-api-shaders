{
    "Shader": {
        "info": {
            "date": "1603381446",
            "description": "A nice degrading wave",
            "flags": 32,
            "hasliked": 0,
            "id": "WdKyRc",
            "likes": 1,
            "name": "Shore Flood 3",
            "published": 3,
            "tags": [
                "buffer",
                "sequel"
            ],
            "usePreview": 0,
            "username": "Leasel",
            "viewed": 299
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n\tfragColor = Smp(fragCoord*dif.xy); \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord*dif.xy;\n    \n    float Value = max(Smp(uv).x-DegradingValue,0.) + ((\n        Smp(uv).x == 0. &&\n        (\n        \tSmp(uv + dif.xz).x == 1. ||\n        \tSmp(uv - dif.xz).x == 1. ||\n        \tSmp(uv + dif.zy).x == 1. ||\n        \tSmp(uv - dif.zy).x == 1.\n     \t)) ? 1. : 0.);\n    \n    float Mouse = \n        (\n        \t(length(fragCoord-iMouse.xy) < 20. && iMouse.z > 0.) || \n        \t(iTime < 0.1 && length(uv-vec2(0.5, 0.25)) < 0.1) ||\n            (iTime < 0.1 && length(uv-vec2(0.25, 0.60)) < 0.1) \n        ) ? 1. : 0.;\n    \n    fragColor = vec4(min(Value + Mouse, 1.)); \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     \n    \n    fragColor = Smp(fragCoord*dif.xy); \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "//General\n#define dif vec3(1./iResolution.xy,0.)\n#define Smp(uv) texture(iChannel0,uv)\n\n//Flood parameters\n//Set this to 0.5 for more interesting effect\n#define DegradingValue 0.01 ",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}