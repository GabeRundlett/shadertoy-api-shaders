{
    "Shader": {
        "info": {
            "date": "1551105387",
            "description": "performance comparison for compressing multiple values into one float, uintBitsToFloat vs dot/floor",
            "flags": 0,
            "hasliked": 0,
            "id": "tssSWr",
            "likes": 3,
            "name": "bits to float vs dot performance",
            "published": 3,
            "tags": [
                "test",
                "performance",
                "dot",
                "to",
                "float",
                "bits"
            ],
            "usePreview": 0,
            "username": "public_int_i",
            "viewed": 484
        },
        "renderpass": [
            {
                "code": "/*\nResults\n╔════════════════════════╦════════════╦═══════════╦═════════╦════════════════════╗\n║ System/Processor       ║ Iterations ║ Float fps ║ Int fps ║ Percent Difference ║\n╠════════════════════════╬════════════╬═══════════╬═════════╬════════════════════╣\n║ Win10/GTX 980          ║ 100000     ║ 14.6      ║ 10.7    ║ float 36% > int    ║\n╠════════════════════════╬════════════╬═══════════╬═════════╬════════════════════╣\n║ Android/Mali-T880 MP12 ║ 10000      ║ 3.3       ║ 4.2     ║ int 27% > float    ║\n╚════════════════════════╩════════════╩═══════════╩═════════╩════════════════════╝\n\nIf anyone tries this post your results in the comments.\n*/\n\n//Toggle tests using the defines\n#define TEST_SPEEDF 10000\n//#define TEST_SPEEDI 10000\n//#define TEST_PRECISIONF 1e-3\n//#define TEST_PRECISIONI 1e-4\n\n//dot/floor based encoding, precision errors show up between 1e-2 and 1e-3\nfloat vtof(vec2 v) {\n    return dot(floor(v*8191.9999),vec2(1./8192.,1.));\n}\nvec2 ftov(float v) {\n    return vec2(fract(v)*(8192./8191.),floor(v)/8191.);\n}\n\n//uint bits based encoding, precision errors show up at 1e-4\nfloat vtoi(vec2 v) {\n    return uintBitsToFloat(uint(v.x*65535.99) | (uint(v.y*65535.99)<<16));\n}\nvec2 itov(float v) {\n    uint u = floatBitsToUint(v);\n\treturn vec2(float(u&uint(0xFFFF)),float(u>>16))/65535.;\n}\n\nvoid mainImage( out vec4 o, in vec2 u)\n{\n    vec2 uv = u/iResolution.xy;\n\n    #ifdef TEST_SPEEDF\n    for (int i = 0; i < TEST_SPEEDF; i++) uv = ftov(vtof(uv));\n    o = vec4(uv,0,1);\n    #endif\n    #ifdef TEST_SPEEDI\n    for (int i = 0; i < TEST_SPEEDI; i++) uv = itov(vtoi(uv));\n    o = vec4(uv,0,1);\n    #endif\n    \n    #ifdef TEST_PRECISIONF\n    o = vec4(dot(abs(uv-ftov(vtof(uv))),vec2(1))/TEST_PRECISIONF);\n    #endif\n    #ifdef TEST_PRECISIONI\n    o = vec4(dot(abs(uv-itov(vtoi(uv))),vec2(1))/TEST_PRECISIONI);\n    #endif\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}