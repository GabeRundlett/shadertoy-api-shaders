{
    "Shader": {
        "info": {
            "date": "1716221940",
            "description": "Note: no extra variable are used.\ncould it be smaller ?",
            "flags": 0,
            "hasliked": 0,
            "id": "4X33zM",
            "likes": 16,
            "name": "shortest TickTaToo ( 224 ch )",
            "published": 3,
            "tags": [
                "2tweets",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 312
        },
        "renderpass": [
            {
                "code": "// golfing +AA 1557 chars \"bookOfShader-04-Patten_TickTaToo\" by doolhong. https://shadertoy.com/view/4XtGRN\n\n\n/**/ // -35 chars by SnoopethDuckDuck(most), FordPerfect(?), spalmer(1), GregRostami(?), Dave_Hoskins(2), Fab(2)\n     // ( for the details of contributions, follow the epic battle in the chat on 2024-05-21 :-) )\n\n#define L   length( U//\n#define K   L - vec2( .5 , min( 1.4, U\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = iResolution.yyyx / 4.;\n    U = .75 * min( abs( U - 2.*O.wy ) / O.y, 2. ); // coords + sym + clamp to square board\n\n    O *= .06 - min( L ) < .5                       // pieces\n                     ? L - min( U.x+U.y, .6 ) /2.) //   cross\n                     : abs( L - round(U)) - .3 )   //   ring\n                   , min( K.y))),                  // separators\n                          K.x)).yx) ) +.02 \n                  );\n}\n\n\n\n\n\n\n/**  // 259 chars ---  -20 chars by Fab\n\n#define l(p) length( p - vec2( .5, min( p.y, 1.4 ))) // segment\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = 3.*abs( u -.5*R ) / R.y,              // coordinates + sym\n         t = U - ceil(U-.5);                       // cell coords   \n\n    O = R.yyyy/4.* step(U.x,1.5)                   // board square\n        * ( .06 - min(  max(U.x,U.y) < .5 \n                          ? length( t - min( t.x+t.y, .6 )/2. ) // cross\n                          : abs( length(t) - .3 )  // ring\n                      , min( l(U), l(U.yx) ) +.02  // separators\n          )          );\n}\n\n\n\n\n\n/** // 279 chars ---   -16 chars by SnoopethDuckDuck\n\n#define L(p,b) length( p - b * min( dot(p,b)/dot(b,b), 1. ) ) // segment\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = 3.*abs( u -.5*R ) / R.y,              // coordinates + sym\n         t = U - ceil(U-.5),                       // cell coords\n         i, j;\n    i.x += .5;\n    j.y += 1.4;\n\n    O = R.yyyy/4.* step(U.x,1.5)                   // board square\n        * ( .06 - min(  max(U.x,U.y) < .5 \n                          ? L( t, .3*R/R  )        // cross\n                          : abs( length(t) - .3 )  // ring\n                      , min( L(U-i,    j), \n                             L(U.yx-i, j) ) +.02   // separators\n          )          );\n}\n\n\n\n\n\n/**  --- 295 chars \n\n#define L(p,b) length( p - b * min( dot(p,b)/dot(b,b), 1. ) ) // segment\n#define B(U)   L(U-vec2(.5,0), vec2(0,1.4))        // diagonal\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = 3.*abs( u -.5*R ) / R.y,              // coordinates + sym\n         t = fract(U+.5) - .5;                     // cell coords\n\n    O = R.y/4.* vec4(U.x<1.5)                      // board square\n        * ( .06 - min(  max(U.x,U.y) < .5 \n                          ? L( abs(t), vec2(.3)  ) // cross\n                          : abs( length(t) - .3 )  // ring\n                      , min( B(U), B(U.yx) ) +.02  // separators\n          )          );\n}\n\n/**/\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}