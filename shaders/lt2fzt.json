{
    "Shader": {
        "info": {
            "date": "1516908672",
            "description": "feedback is the future, raymarching is just a neat trick for 4k demos",
            "flags": 32,
            "hasliked": 0,
            "id": "lt2fzt",
            "likes": 17,
            "name": "rgb shifting",
            "published": 3,
            "tags": [
                "feedback",
                "shaderclub"
            ],
            "usePreview": 0,
            "username": "jrsa",
            "viewed": 854
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 poltocar( vec2 pol ) {\n    return vec2( pol.x * cos(pol.y), pol.x * sin(pol.y) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.st;\n    vec2 displacedUv = uv;\n    vec4 imageIn = texture(iChannel1, uv);    \n    vec4 feedbackIn = texture(iChannel0, uv);\n\n    displacedUv += poltocar( vec2(length(feedbackIn.rg), length(feedbackIn.rb)) ) / 1000.0;\n    vec4 feedback = texture(iChannel0, displacedUv);\n    feedback.r = mod(feedback.r + 0.001, 1.0);\n    feedback.b = mod(feedback.b + (feedback.r / 10.0), 1.0);\n    \n    if(iFrame <= 10 || iMouse.z > 0.0){\n        fragColor = imageIn;\n    } else {\n        fragColor = feedback;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}