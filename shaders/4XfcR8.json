{
    "Shader": {
        "info": {
            "date": "1725790797",
            "description": "deep simplification from \"wireframe dodecahedron\" https://shadertoy.com/view/lfj3W1\n                               from  \"Compound of Five Tetrahedra\" by mla. https://shadertoy.com/view/tsXyWs\nMouse controls camera\nsquare rodes variant: uncomment #32",
            "flags": 0,
            "hasliked": 0,
            "id": "4XfcR8",
            "likes": 12,
            "name": "wireframe dodecahedron 3",
            "published": 3,
            "tags": [
                "wireframe",
                "dodecahedron"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 126
        },
        "renderpass": [
            {
                "code": "// simplified from \"wireframe dodecahedron\" https://shadertoy.com/view/lfj3W1\n// Fork of 2020 \"Compound of Five Tetrahedra\" by mla. https://shadertoy.com/view/tsXyWs\n// keeping only the edges, + simplification\n// See also the projective vector variant: https://www.shadertoy.com/view/4cBGDW\n\n\n#define rot(a) mat2(cos(a+vec4(0,33,11,0)))\n#define F(A)   dot(q,A) < 0. ?  q = reflect(q,A) : q \n\nvoid mainImage( out vec4 O, vec2 u ) {\n\n    vec3 R = iResolution,\n         P = vec3(0, 0, 2.5), q,\n         D = normalize(vec3( u - .5*R.xy, -R.y )),\n         M = iMouse.z > 0. ? iMouse.xyz/R -.5 :           // comment for no mouse cam\n                 vec3( .15,.07,0) * cos(.3*iTime + vec3(0,11,0)),\n         C = vec3(-.81,-.47, .36);\n          \n    float h=1., i;\n    for ( O=vec4(1); O.x > 0. && h > .01; O-=.01 ) {      // --- march scene\n        q = P,\n        q.yz *= rot(-6.*M.y),                             // rotations\n        q.xz *= rot(-6.*M.x-1.57);\n                                                          //  --- dodecahedron edges  \n        for (int i; i++ < 5; )                            // cascaded folding  p = fold(p) \n            F( vec3( 1  , 0  , 0  ) ), \n            F( vec3(-.5 , .87, 0  ) ),\n            F( C );   \n\n        q.z--;                                            // draw edge   \n        h = length(q + C*.72 * clamp(-dot(q,C*1.44) , 0., 1.) ) - .03;\n     // q = abs( q + C*.72 * clamp(-dot(q,C*1.44) , 0., 1.) ); h = max(q.x,max(q.y,q.z))-.02;\n        P += .5* h*D;\n    }\n    O *= O*O * 1.2;                                       // color scheme\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}