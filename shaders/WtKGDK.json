{
    "Shader": {
        "info": {
            "date": "1579901568",
            "description": "I was playing with some blurring distributions, to try and make something super super soft and asymptotic (think like a GGX distribution).\nI think the results are interesting though a bit subtle. It flips between a rough gaussian blur and custom function.",
            "flags": 0,
            "hasliked": 0,
            "id": "WtKGDK",
            "likes": 6,
            "name": "FrostyBlur",
            "published": 3,
            "tags": [
                "2d",
                "blur"
            ],
            "usePreview": 1,
            "username": "space928",
            "viewed": 817
        },
        "renderpass": [
            {
                "code": "const float r = 20.;\nconst float pi = 3.14159265;\n\nconst float g = 0.76;\nfloat henyey_greenstein_phase_func(float mu)\n{\n\treturn\n\t\t\t\t\t\t(1. - g*g)\n\t/ //---------------------------------------------\n\t\t((4. * pi) * pow(1. + g*g - 2.*g*mu, 1.5));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.);\n    float sum = 0.;\n    //col.r = CalculateGGX(.25,uv.r);\n    \n    for(float x = -r; x < r; x++)\n    {\n        for(float y = -r; y < r; y++)\n        {\n            /*if(sqrt(x*x+y*y)>r)\n                continue;*/\n            vec2 off = vec2(x,y)/r;\n            vec2 offFrost = tan(off*pi/2.)*(2./pi);\n            //offFrost = vec2(henyey_greenstein_phase_func(off.x*3.), henyey_greenstein_phase_func(off.y*3.))*(2./pi);\n            \n            float l = 1.-sqrt(x*x+y*y)/r;\n            float lHermite = -2.*l*l*l+3.*l*l;\n            float lFrost = tan(l);\n            //lFrost = henyey_greenstein_phase_func(l);\n            //lFrost = lHermite;\n            \n            //Pick between frosty and less frosty\n            off = mix(offFrost, off, sin(iTime)*.5+.5>.5?0.:1.);\n            float weight = mix(lFrost,lHermite, sin(iTime)*.5+.5>.5?1.:1.);\n            \n            off *= 30.;\n            sum += weight;\n            col += textureLod(iChannel0, uv + off/iResolution.xy,2.).rgb*weight;\n        }\n    }\n    col /= sum;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}