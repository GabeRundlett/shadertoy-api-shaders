{
    "Shader": {
        "info": {
            "date": "1621218974",
            "description": "game map -challenger -v2",
            "flags": 0,
            "hasliked": 0,
            "id": "fdSXWt",
            "likes": 4,
            "name": "game map -challenger -v2",
            "published": 3,
            "tags": [
                "2d",
                "map",
                "polygon"
            ],
            "usePreview": 0,
            "username": "jorge2017a1",
            "viewed": 243
        },
        "renderpass": [
            {
                "code": "//por jorge2017a1 ----jorgeFloresP---16/may/2021\n// referencia \n////-------------------\n/// IQ funciones....librerias\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define S2(d,b) smoothstep(antialiasing(0.5),b,d)\n\n//----------oPeraciones de Repeticion\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}\n    \nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r; }\n\nvec3 ponerBorde2(vec3 pColObj, vec3 colOut, float distObj )\n{\n  colOut = mix(colOut,pColObj ,S( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S(abs( distObj),0.0));\n  return colOut;\n}\n\n\nvec3 ponerBorde(vec3 pColObj, vec3 colOut, float distObj )\n{\n  colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj),0.0));\n  return colOut;\n}\n\nconst vec3 colNegro= vec3(0.0);\nconst vec3 col0= vec3(0.03,0.35,0.70);\nconst vec3 col1= vec3(0.38,0.69,1.00);\nconst vec3 col2= vec3(0.50,0.50,0.50);\nconst vec3 col3= vec3(0.75,0.75,0.75);\nconst vec3 col4= vec3(0.50,0.50,0.50);\nconst vec3 col5= vec3(0.1,1.0,0.1);\nconst vec3 col6= vec3(0.1,0.8,0.1);\n\nfloat opU(float d1, float d2) {return min(d1, d2); }\n\n#define POLY(N) (in vec2 p, in vec2[N] v) {const int n=v.length();float d=dot(p-v[0],p-v[0]);float s=1.;for(int i=0,j=n-1;i<n;j=i,i++){vec2 e=v[j]-v[i];vec2 w=p-v[i];vec2 b=w-e*clamp(dot(w,e)/dot(e,e),0.,1.);d=min(d,dot(b,b));bvec3 cond=bvec3(p.y>=v[i].y,p.y<v[j].y,e.x*w.y>e.y*w.x);if(all(cond)||all(not(cond))) s=-s;}return s*sqrt(d);}\n\nfloat sdPolyc000 POLY(23)\nvec2 ptc000[ 23]=vec2[](  \nvec2(.478,.064),vec2(.476,.107),vec2(.336,.106),vec2(.265,.188),vec2(.266,.260),\nvec2(.192,.340),vec2(.193,.581),vec2(.157,.581),vec2(.156,.661),vec2(.192,.661),\nvec2(.262,.738),vec2(.262,.819),vec2(.367,.936),vec2(.581,.934),vec2(.687,.816),\nvec2(.686,.741),vec2(.758,.658),vec2(.757,.421),vec2(.613,.260),vec2(.614,.179),\nvec2(.546,.105),vec2(.547,.066),vec2(.478,.064) );\n\nfloat sdPolyc001 POLY(5)\nvec2 ptc001[ 5]=vec2[](  \nvec2(.367,.182),vec2(.401,.261),vec2(.473,.259),vec2(.508,.181),vec2(.367,.182) );\n\nfloat sdPolyc002 POLY(5)\nvec2 ptc002[ 5]=vec2[](  \nvec2(.473,.261),vec2(.492,.280),vec2(.544,.221),vec2(.509,.181),vec2(.473,.261) );\n\nfloat sdPolyc003 POLY(5)\nvec2 ptc003[ 5]=vec2[](  \nvec2(.402,.261),vec2(.418,.280),vec2(.491,.280),vec2(.473,.261),vec2(.402,.261) );\n\nfloat sdPolyc004 POLY(5)\nvec2 ptc004[ 5]=vec2[](  \nvec2(.421,.276),vec2(.480,.276),vec2(.472,.266),vec2(.412,.265),vec2(.421,.276) );\n\nfloat sdPolyc005 POLY(5)\nvec2 ptc005[ 5]=vec2[](  \nvec2(.421,.272),vec2(.474,.271),vec2(.471,.266),vec2(.414,.267),vec2(.421,.272) );\n\nfloat sdPolyc006 POLY(5)\nvec2 ptc006[ 5]=vec2[](  \nvec2(.413,.241),vec2(.429,.241),vec2(.426,.231),vec2(.411,.232),vec2(.413,.241) );\n\nfloat sdPolyc007 POLY(5)\nvec2 ptc007[ 5]=vec2[](  \nvec2(.415,.232),vec2(.415,.240),vec2(.428,.239),vec2(.426,.233),vec2(.415,.232) );\n\nfloat sdPolyc008 POLY(5)\nvec2 ptc008[ 5]=vec2[](  \nvec2(.299,.421),vec2(.316,.441),vec2(.348,.441),vec2(.331,.420),vec2(.299,.421) );\n\nfloat sdPolyc010 POLY(5)\nvec2 ptc010[ 5]=vec2[](  \nvec2(.312,.426),vec2(.317,.431),vec2(.333,.431),vec2(.330,.426),vec2(.312,.426) );\n\nfloat sdPolyc011 POLY(5)\nvec2 ptc011[ 5]=vec2[](  \nvec2(.299,.419),vec2(.331,.421),vec2(.367,.342),vec2(.265,.341),vec2(.299,.419) );\n\nfloat sdPolyc012 POLY(9)\nvec2 ptc012[ 9]=vec2[](  \nvec2(.332,.739),vec2(.368,.815),vec2(.510,.815),vec2(.547,.739),vec2(.459,.739),\nvec2(.458,.767),vec2(.422,.768),vec2(.413,.740),vec2(.332,.739) );\n\nfloat sdPolyc013 POLY(4)\nvec2 ptc013[ 4]=vec2[](  \nvec2(.412,.740),vec2(.422,.748),vec2(.422,.768),vec2(.412,.740) );\n\nfloat sdPolyc014 POLY(5)\nvec2 ptc014[ 5]=vec2[](  \nvec2(.422,.750),vec2(.431,.749),vec2(.431,.765),vec2(.421,.766),vec2(.422,.750) );\n\nfloat sdPolyc015 POLY(5)\nvec2 ptc015[ 5]=vec2[](  \nvec2(.449,.765),vec2(.448,.749),vec2(.457,.749),vec2(.457,.766),vec2(.449,.765) );\n\nfloat sdPolyc016 POLY(5)\nvec2 ptc016[ 5]=vec2[](  \nvec2(.422,.768),vec2(.458,.767),vec2(.458,.748),vec2(.421,.749),vec2(.422,.768) );\n\nfloat sdPolyc017 POLY(5)\nvec2 ptc017[ 5]=vec2[](  \nvec2(.369,.816),vec2(.402,.856),vec2(.545,.856),vec2(.509,.816),vec2(.369,.816) );\n\nfloat sdPolyc018 POLY(5)\nvec2 ptc018[ 5]=vec2[](  \nvec2(.377,.822),vec2(.403,.851),vec2(.533,.851),vec2(.508,.823),vec2(.377,.822) );\n\nfloat sdPolyc019 POLY(5)\nvec2 ptc019[ 5]=vec2[](  \nvec2(.381,.821),vec2(.404,.846),vec2(.527,.848),vec2(.508,.822),vec2(.381,.821) );\n\nfloat sdPolyc020 POLY(5)\nvec2 ptc020[ 5]=vec2[](  \nvec2(.509,.816),vec2(.545,.856),vec2(.599,.796),vec2(.548,.739),vec2(.509,.816) );\n\nfloat sdPolyc021 POLY(5)\nvec2 ptc021[ 5]=vec2[](  \nvec2(.332,.421),vec2(.350,.441),vec2(.403,.381),vec2(.368,.341),vec2(.332,.421) );\n\nfloat sdPolyc022 POLY(18)\nvec2 ptc022[ 18]=vec2[](  \nvec2(.272,.700),vec2(.273,.704),vec2(.269,.706),vec2(.264,.709),vec2(.263,.709),\nvec2(.263,.714),vec2(.261,.719),vec2(.268,.726),vec2(.273,.728),vec2(.278,.726),\nvec2(.287,.722),vec2(.288,.716),vec2(.288,.709),vec2(.284,.706),vec2(.279,.705),\nvec2(.277,.705),vec2(.277,.700),vec2(.272,.700) );\n\nvec3 HacerVentana(vec2 p, vec3 col)\n{\n//ventana\n    float sdc006 = sdPolyc006(p, ptc006);\n    col=ponerBorde(colNegro,col,sdc006 );\n    \n    float sdc007 = sdPolyc007(p, ptc007);\n    col=ponerBorde(col1,col,sdc007 );\n return col;\n}\n\n\nvec3 HacerCuartoN1(vec2 p, vec3 col)\n{\n//hacer cuarto 1\n    float sdc001 = sdPolyc001(p, ptc001);\n    col=ponerBorde(col2,col,sdc001 );\n    \n    float sdc002 = sdPolyc002(p, ptc002);\n    col=ponerBorde(colNegro,col,sdc002 );\n\n    float sdc003 = sdPolyc003(p, ptc003);\n    col=ponerBorde(col3,col,sdc003 );\n        \n    float sdc004 = sdPolyc004(p, ptc004);\n    col=ponerBorde(colNegro,col,sdc004 );\n    \n    float sdc005 = sdPolyc005(p, ptc005);\n    col=ponerBorde(col2,col,sdc005 );\n    \n    col= HacerVentana( p,  col);\n    col= HacerVentana( p-vec2(0.04,0.0),  col);\n     return col;\n} \n\nvec3 HacerCuartoN2(vec2 p, vec3 col)\n{\n//hacer cuarto n2\n    float sdc008 = sdPolyc008(p, ptc008);\n    col=ponerBorde(col3,col,sdc008 );\n\n    float sdc010 = sdPolyc010(p, ptc010);\n    col=ponerBorde(col1,col,sdc010 );\n    \n    float sdc011 = sdPolyc011(p, ptc011);\n    col=ponerBorde(col2,col,sdc011 );\n    \n    col= HacerVentana( p-vec2(-0.1,0.15),  col);\n    \n     float sdc021 = sdPolyc021(p, ptc021);\n    col=ponerBorde(colNegro,col,sdc021 );\n  return col;\n}\n\nvec3 HacerCuartoN3Grande(vec2 p, vec3 col)\n{\n//hacer cuarto n3 grande\n    float sdc012 = sdPolyc012(p, ptc012);\n    col=ponerBorde(col2,col,sdc012 );\n    \n    float sdc013 = sdPolyc013(p, ptc013);\n    col=ponerBorde(colNegro,col,sdc013 );\n    \n    float sdc016 = sdPolyc016(p, ptc016);\n    col=ponerBorde(colNegro,col,sdc016 );\n    \n    float sdc014 = sdPolyc014(p, ptc014);\n    col=ponerBorde(col2,col,sdc014 );\n    \n    float sdc015 = sdPolyc015(p, ptc015);\n    col=ponerBorde(col2,col,sdc015 );\n\n    float sdc017 = sdPolyc017(p, ptc017);\n    col=ponerBorde(col3,col,sdc017 );\n    \n    float sdc018 = sdPolyc018(p, ptc018);\n    col=ponerBorde(col2,col,sdc018 );\n    \n    float sdc019 = sdPolyc019(p, ptc019);\n    col=ponerBorde(col2,col,sdc019 );\n\n    float sdc020 = sdPolyc020(p, ptc020);\n    col=ponerBorde(colNegro,col,sdc020 );\n     return col;\n}\n\n\nvec3 HacerArbol(vec2 p, vec3 col)\n{\n    float sdc022 = sdPolyc022(p, ptc022);\n    col=ponerBorde(col6,col,sdc022 );\n    return col;\n}\n    \n\n//***------------****-----------****------------******-------\nvec3 ChallengerNes(in vec2 pp, vec3 col) \n{\n  vec2 p=pp,pr1=pp, pr2=pp;\n  \n    float sdc000 = sdPolyc000(p, ptc000);\n    //col=mix(col,col1 ,S( sdc000 ,0.0));\n    col=ponerBorde(col2,col,sdc000 );\n    col= HacerCuartoN1(p,col);\n    col= HacerCuartoN2(p,col);\n    col= HacerCuartoN2(p-vec2(0.22,0.0),col);\n    col= HacerCuartoN1(p-vec2(-0.1,0.32),col);\n    col= HacerCuartoN1(p-vec2(0.12,0.32),col);\n    col= HacerCuartoN3Grande(p,col);\n    col= HacerArbol(p,col);\n    col= HacerArbol(p-vec2(0.05,0.0),col);\n    col= HacerArbol(p-vec2(0.3,0.0),col);\n    col= HacerArbol(p-vec2(0.35,0.0),col);\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    float t=iTime*0.25;\n    vec2 p=uv*0.325-vec2(-0.45,-0.7+0.5*sin(fract(t)));\n     vec3 col=vec3(0.0,0.0,1.0);\n    //vec3 col=col2;\n    col=ChallengerNes(p, col);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}