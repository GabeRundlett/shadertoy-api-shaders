{
    "Shader": {
        "info": {
            "date": "1490139677",
            "description": "use the code of the shader of abje : [url=https://www.shadertoy.com/view/lssyW2]Voxel Sponge[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "XdlyWf",
            "likes": 12,
            "name": "Voxel Sponge : Hazard Experiment",
            "published": 3,
            "tags": [
                "experiment",
                "voxel",
                "sponge",
                "hazard"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 749
        },
        "renderpass": [
            {
                "code": "#define rot(spin) mat2(cos(spin),-sin(spin),sin(spin),cos(spin))\n\nfloat time;\n\n/*\nwhat to fix:\npositions are wrong\n\"sign(dir)*0.001\" is wrong\n*/\n\nfloat map(vec3 p) {\n    p = mod(p,3.0);\n    vec3 q = p;\n    //return dot(q-1.0,q-1.0)-max(abs(q.x)+q.y,-q.y)*max(abs(q.y)+q.z,-q.z)*max(abs(q.z)+q.x,-q.x); // the pifometer change\n    return dot(q-1.5,q-1.5)-3.5; // the pifometer change\n    //return dot(p-1.0,p-1.0)-1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    time = iTime * .5;\n\tvec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\n    \n    \n    vec3 cam = vec3(1.5,1.5,time);\n    vec3 pos = cam;\n    vec3 dir = normalize(vec3(uv,1.0));\n    vec3 floorpos = floor(pos);\n    vec3 mask;\n    \n    float dist = 0.0;\n    vec3 localpos = pos;\n    vec3 localfloor = floorpos;\n    float stepsize = 1.0;\n    float count = 0.0;\n    \n    \n    for (int i = 0; i < 12; i++) {\n        float len = map(localfloor);\n        if (len > 0.0) {\n            localpos *= 3.0;\n            localpos = localpos-sign(dir)*1.5+1.5;\n            \n            localfloor = floor(localpos-sign(dir)*0.001);\n            stepsize /= 3.0;\n            \n            if (count > 2.0) {\n                break;\n            }\n            count ++;\n        } else {\n        \n            vec3 dists = abs((sign(dir)*0.5+0.5)-(localpos-localfloor))*1.0/abs(dir);\n\n            float m = min(min(dists.x,dists.y),dists.z);\n\n            mask = step(dists,vec3(m));\n\n            pos += m*dir*stepsize;\n            dist += m*stepsize;\n            localpos += m*dir;\n            localfloor += mask*sign(dir);\n\n            floorpos += mask*sign(dir)*stepsize;\n        }\n    }\n    \n\t//fragColor = vec4(,1.0);\n    fragColor = vec4((.5+.25*(sin((floorpos)*10.0+time)*0.5+0.5)+.25*mask)*.5/dist, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}