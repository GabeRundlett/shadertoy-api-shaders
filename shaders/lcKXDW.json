{
    "Shader": {
        "info": {
            "date": "1715215542",
            "description": "Just a messy happy accident. If you squint the rings opening up in the bubble kinda look like a water droplet falling on a lake.",
            "flags": 0,
            "hasliked": 0,
            "id": "lcKXDW",
            "likes": 1,
            "name": "Universe in a Bubble",
            "published": 3,
            "tags": [
                "experiment"
            ],
            "usePreview": 0,
            "username": "UnchartedSystems",
            "viewed": 106
        },
        "renderpass": [
            {
                "code": "// Fork of \"Folded Rainbow2\" by UnchartedSystems. https://shadertoy.com/view/lcKSDW\n// 2024-05-09 00:35:28\n\n// Fork of \"Folded Rainbow prototype\" by UnchartedSystems. https://shadertoy.com/view/lfKSWW\n// 2024-05-08 23:38:19\n// Fork of \"Bermuda Timespan\" by UnchartedSystems. https://shadertoy.com/view/lcKXD1\n// 2024-05-08 21:05:08\n\nfloat trigFn(float base, float o1, float div, float o2) {\n        return sin((base+o1)/div)+(sin(base*1.00+o2*0.0015)*6.25);\n}\n\nfloat trigMod(float x, float xMult, float xAdd) {\n       return x*xMult+xAdd;\n}\n\nfloat fractSplit(float x, float e, float m)\n{\n    return fract(pow(x*m, e));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{        \n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    float d = length(uv);\n    \n    // Just getting into the right starting position!\n    float iTime = iTime+18.2;\n    \n    float tOffset = 500.0;\n    \n    // !!!   This is where the magic happens   !!!\n    // Set the tMult numerator from 1.0 -> 0.0 to see the original shader\n    // Change uv.y -> uv.x in the tMult divisor to change the orientation.\n    // wtf is an interesting variable to play with.\n    // Alternatively, replace tMult with: (1.0/(d+-26.0))*11.1 for something neat\n    float wtf = 29.; // Still wrapping my brain around this.\n    float tMult = (1.0/(uv.y+wtf))*11.1;\n        \n    // 18.0 + 18.2\n    float t = ((iTime+.0)*2.8+tOffset*tMult)+18.0;\n\n    // This multiplier essentially acts as a zoom.\n    float m = 1.82;\n\n    float r;\n    float g;\n    float b;\n\n    float div = 7.5;\n\n    r = fractSplit(d, trigMod(trigFn(t, 2.8, div, 120.), 0.2, 0.3), m);\n    g = fractSplit(d, trigMod(trigFn(t, 1.9, div, 240.), 0.2, 0.3), m);\n    b = fractSplit(d, trigMod(trigFn(t, 1.0, div, 0.00), 0.2, 0.3), m);\n        \n    // Cycles the inversion of colors!\n    r = abs((sin(iTime*0.3+0.0)*0.5+0.5)-r);\n    g = abs((sin(iTime*0.3+180.0)*0.5+0.5)-g);\n    b = abs((sin(iTime*0.3+90.0)*0.5+0.5)-b);\n    fragColor = vec4(r, g, b, 1.0); \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}