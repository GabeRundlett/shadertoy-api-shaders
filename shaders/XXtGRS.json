{
    "Shader": {
        "info": {
            "date": "1716663331",
            "description": "Plotting the function that Stefan Steinerberger defined in https://arxiv.org/abs/1610.04090 that has a lot of local minima.",
            "flags": 0,
            "hasliked": 0,
            "id": "XXtGRS",
            "likes": 4,
            "name": "Steinerberger function",
            "published": 3,
            "tags": [
                "2d",
                "plot"
            ],
            "usePreview": 0,
            "username": "NinjaKoala",
            "viewed": 111
        },
        "renderpass": [
            {
                "code": "const int n = 30;\n\nconst float y_offset = .64;\n\nconst vec3 line_col = vec3(0);\nconst vec3 bg_col = vec3(1);\n\nconst float line_width = .0004;\n\nconst float zoom = 1.;\n\nconst float y_scaling = .4;\n\nconst float pi = 3.14159274;\n\nfloat steinerberger_func(float x, int n){\n    float sum = 0.;\n    for(int k=1; k<n; k++){\n        sum += abs(sin(float(k)*pi*x))/float(k);\n    }\n    return sum;\n}\n\nfloat steinerberger_func_diff(float x, int n){\n    float sum = 0.;\n    for(int k=1; k<n; k++){\n        sum += (sign(sin(float(k)*pi*x)) * float(k)*pi*cos(float(k)*pi*x))/float(k);\n    }\n    return sum;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    float border = 2./iResolution.x;\n\n\tvec2 uv = fragCoord.xy / iResolution.x;\n    uv.y += y_offset;\n    \n    border *= zoom;\n\tuv *= zoom;\n    \n    float f = y_scaling * steinerberger_func(uv.x, n);\n    float df = y_scaling * steinerberger_func_diff(uv.x, n);\n\n    float dis = (uv.y-f) / length(vec2(df,1)) - line_width;\n\n    vec3 color = bg_col;\n    color = mix(line_col, color, smoothstep(-border/2., border/2., dis));\n\n\tfragColor = vec4(color,1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}