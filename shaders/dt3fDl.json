{
    "Shader": {
        "info": {
            "date": "1701714440",
            "description": "just a weird idea I had",
            "flags": 0,
            "hasliked": 0,
            "id": "dt3fDl",
            "likes": 4,
            "name": "hash-confetti",
            "published": 3,
            "tags": [
                "confetti"
            ],
            "usePreview": 0,
            "username": "LydianLights",
            "viewed": 194
        },
        "renderpass": [
            {
                "code": "#define GRID 32.0\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float px = 2.0 / iResolution.y;\n    vec2 uv0 = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec2 uv1 = mat2(cos(PI / 6.0), sin(PI / 6.0), -sin(PI / 6.0), cos(PI / 6.0)) * uv0;\n    vec2 uv2 = mat2(cos(PI / 3.0), sin(PI / 3.0), -sin(PI / 3.0), cos(PI / 3.0)) * uv0;\n    \n    const int N = 3;\n    vec2 uvs[] = vec2[](uv0, uv1, uv2);\n    \n    float hash;\n    for (int i = 0; i < N; i++) {\n        vec2 uv = uvs[i];\n        uv.y += 0.1 * iTime;\n        \n        vec2 id = floor(uv * GRID) + vec2(42 * i, -69 * i);\n        uv = mod(uv, 1.0 / GRID);\n        \n        float h = hash12(id);\n        if (h > hash) {\n            hash = h;\n        }\n    }\n    \n    vec3 color = hash31(hash);\n\n    fragColor = vec4(color, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define PI 3.1415927\n\nfloat hash12(vec2 p) {\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 hash31(float p) {\n   vec3 p3 = fract(vec3(p) * vec3(.192, .594, .137));\n   p3 += dot(p3, p3.yzx+33.33);\n   return fract((p3.xxy+p3.yzz)*p3.zyx); \n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}