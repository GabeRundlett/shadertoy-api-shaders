{
    "Shader": {
        "info": {
            "date": "1697602433",
            "description": "ca shader",
            "flags": 32,
            "hasliked": 0,
            "id": "cddfWB",
            "likes": 1,
            "name": "Life of Game (Copy)",
            "published": 3,
            "tags": [
                "ca"
            ],
            "usePreview": 0,
            "username": "tooboi710",
            "viewed": 127
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0,uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Borrowed from someone on here not mine using for personal project\n\n#define lookup(pos) texture(iChannel0,pos).x\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 invResolution = 1. / iResolution.xy;\n    vec2 uv = fragCoord.xy * invResolution;\n    \n    float prevState = texture(iChannel0,uv).x;\n    \n    float e = 0.;\n    e += lookup(uv + vec2( 0., 1.) * invResolution);\n    e += lookup(uv + vec2( 0.,-1.) * invResolution);\n    e += lookup(uv + vec2( 1., 0.) * invResolution);\n    e += lookup(uv + vec2(-1., 0.) * invResolution);\n    e += lookup(uv + vec2( 1., 1.) * invResolution);\n    e += lookup(uv + vec2( 1.,-1.) * invResolution);\n    e += lookup(uv + vec2(-1., 1.) * invResolution);\n    e += lookup(uv + vec2(-1.,-1.) * invResolution);\n    if( e == 2. && prevState == 1. || e == 3. )\n    \tfragColor= vec4(1.);\n    else\n    \tfragColor= vec4(0.);\n    \n    if(iMouse.z > .5)\n    \tfragColor= max(fragColor,vec4(step(length(iMouse.xy - fragCoord),25.)));\n    else if (iFrame < 10)\n        fragColor = vec4(step(length(vec2(.5) - uv),.1));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}