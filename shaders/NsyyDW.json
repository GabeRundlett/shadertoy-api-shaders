{
    "Shader": {
        "info": {
            "date": "1654822555",
            "description": "tree",
            "flags": 0,
            "hasliked": 0,
            "id": "NsyyDW",
            "likes": 40,
            "name": "Friendly Tree",
            "published": 3,
            "tags": [
                "tree"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 476
        },
        "renderpass": [
            {
                "code": "Main {\n    U = 2.*(U-.5*R)/R.y;\n    Q = vec4(0);\n    float d = 1e9; \n    U.y -= -1.;\n    float r = 0.;\n    for (float i = 0.; i < 15.; i++) {\n        \n        float s = segment(U,vec2(0),vec2(0,.6));\n        d = min(d,s);\n        U.y -= .6;\n        float h = -.5+hash(vec2(i,1+iFrame)).x;\n        h = sign(h);\n        r += h*exp2(i);\n        vec3 f = hash(vec2(r));\n        U *= 1.1+.5*f.y;\n        if (h!=0.)\n        U.x = h*U.x;\n        U.xy *= ei(-1.+.5*f.x);\n    }\n    vec3 hh = hash(vec2(r));\n    Q = step(d,.05)*.15*vec4(4,3,2,1);\n    U.y -= -.5;\n    U *= .3;\n    U = vec2(atan(U.y,U.x),length(U));\n    U.x += .1*fbm(vec2(10.*U.y,round(U.x/5.))).x;\n    U.y += (.5+.5*abs(sin(5.*U.x)))*-sin(U.x);\n    U.y += .5*fbm(r+10.*U.xx).x;\n    if (U.y<.5) Q = sin(.5*(hh.x*2.-1.)+.5+U.y+vec4(1,2,3,4));\n    if (length(Q)==0.) discard;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\n#define Main void mainImage(out vec4 Q, in vec2 U)\n#define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))\nfloat segment (vec2 p, vec2 a, vec2 b) {\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nvec3 hash (vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy+p3.yzz)*p3.zyx);\n}\nvec3 noise(vec2 p)\n{\n    vec4 w = vec4(\n        floor(p),\n        ceil (p)  );\n    vec3 \n        _00 = hash(w.xy),\n        _01 = hash(w.xw),\n        _10 = hash(w.zy),\n        _11 = hash(w.zw),\n    _0 = mix(_00,_01,fract(p.y)),\n    _1 = mix(_10,_11,fract(p.y));\n    return mix(_0,_1,fract(p.x));\n}\nvec3 fbm (vec2 p)\n{\n    vec3 w = vec3(0);\n    float N = 5.;\n    for (float i = 1.; i < N; i++)\n    {\n        p *= 1.7*ei(.5);\n        w += noise(p)/N/i;\n    }\n    return w;\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}