{
    "Shader": {
        "info": {
            "date": "1599254579",
            "description": "based on https://www.shadertoy.com/view/4sSXWR which is recursive maze\n\nwarning: this shader may look different from intended result since it depends on how does your GPU handle float rounding and overflows",
            "flags": 0,
            "hasliked": 0,
            "id": "tt2fzG",
            "likes": 7,
            "name": "trippy stuff",
            "published": 3,
            "tags": [
                "trip"
            ],
            "usePreview": 0,
            "username": "Kat_Purpy",
            "viewed": 369
        },
        "renderpass": [
            {
                "code": "#define rnd( x)    fract(1000.*sin(345.2345*x))\n#define id( x,y)   floor(x)+100.*floor(y)\n\nfloat maze(vec2 u) {\n    float n = id(u.x,u.y);  u = fract(u);\n    return 1.-smoothstep(.61,.15,((rnd(n*.5)>.61)?u.x:u.y))/sin(n+iTime) * sin(iTime);\n}\n\nvoid mainImage( out vec4 o, vec2 u ){\n    float t = iTime;\n    u  /= iResolution.y;\n    u = (u + vec2(1.8*cos(.2*t)+.6*sin(.4*t), sin(.3*t)+.4*cos(.4*t)) ) * (1.2-cos(.5*t));\n    float a = 3.*(cos(.05*t)-.5*cos(1.-.1*t)), C=cos(a), S=sin(a),\n          v = 0., w=1., s=0.; u *= 2.*mat2(C,-S,S,C);\n\n #define L  v+= w*maze(u*=4.); s+= w;  w *= .3;\n    L L L L L\n    \n\to += 1.-v/s -o;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}