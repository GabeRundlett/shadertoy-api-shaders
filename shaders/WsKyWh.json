{
    "Shader": {
        "info": {
            "date": "1602750241",
            "description": "Nice and branchless.",
            "flags": 0,
            "hasliked": 0,
            "id": "WsKyWh",
            "likes": 9,
            "name": "Hard and Soft HSL",
            "published": 3,
            "tags": [
                "color",
                "hsl"
            ],
            "usePreview": 0,
            "username": "thepheer",
            "viewed": 369
        },
        "renderpass": [
            {
                "code": "#define rep(m, x) (mod(x, 2.0*(m)) - (m))\n#define sdf(w, d) smoothstep(1.5*(w), 0.0, d)\n#define plot(w, x, y) sdf(w, abs((x) - (y)))\n#define range(x, a, b) ((a) <= (x) && (x) < (b))\n\nvec3 hard(vec3 hsl) {\n    const vec3 offset = vec3(0.0, 2.0, 1.0)/3.0;\n    float limit = 0.5 - abs(0.5 - hsl.z);\n    vec3 rgb = 12.0*abs(fract(offset + hsl.x) - 0.5) - 3.0;\n    return hsl.z + hsl.y*limit*clamp(rgb, -1.0, 1.0);\n}\n\nvec3 soft(vec3 hsl) {\n    const float tau = radians(360.0);\n    const vec3 offset = vec3(0.0, 1.0, 2.0)/3.0;\n    float limit = (1.0 - hsl.z)*hsl.z;\n\treturn hsl.z + hsl.y*limit*cos(tau*(offset - hsl.x));\n}\n\nvoid mainImage(out vec4 rgba, vec2 xy) {\n    float dashed = sdf(1.0, abs(rep(6.0, xy.x)) - 4.0);\n    float dotted = sdf(1.0, abs(rep(2.0, xy.x)));\n    \n    vec2 px = 1.0/iResolution.xy;\n    vec2 uv = xy*px;\n\n    vec3 a = hard(vec3(0.1*iTime + uv.x, 1.0, 0.5));\n    vec3 b = soft(vec3(0.1*iTime + uv.x, 2.0, 0.5));\n    \n    vec3 plots =\n        plot(px.y, uv.y, 0.7)*0.1 +\n        plot(px.y, uv.y, 0.7 + 0.4*(a - b)) +\n        plot(px.y, uv.y, 0.1 + 0.4*a)*dashed +\n        plot(px.y, uv.y, 0.1 + 0.4*b)*dotted;\n\n    vec3 rgb =\n        range(uv.y, px.y + 0.95, 1.00) ? a :\n    \trange(uv.y, px.y + 0.90, 0.95) ? b :\n    \tplots;\n\n    rgba = vec4(srgb(rgb), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec3 srgb(vec3 c) {\n    vec3 a = 1.055*pow(c, vec3(1.0/2.4)) - 0.055;\n    vec3 b = 12.92*c;\n    return mix(a, b, lessThanEqual(c, vec3(0.0031308)));\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}