{
    "Shader": {
        "info": {
            "date": "1481413875",
            "description": "A simple geometric pentagon, fractionalized and animated.",
            "flags": 0,
            "hasliked": 0,
            "id": "MlcXDB",
            "likes": 7,
            "name": "Neon Pentagram",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "loop"
            ],
            "usePreview": 0,
            "username": "WuTangTan",
            "viewed": 1278
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\nvec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat polygon(vec2 st, int numVertices) {\n  float a = atan(st.x, st.y) + PI;\n  float r = TWO_PI / float(numVertices);\n\n  return cos(floor(.5+a/r)*r-a)*length(st);;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = (fragCoord.xy / iResolution.xy) * 2. - 1.;\n    st.x *= iResolution.x/iResolution.y;\n\n    float d = polygon(st, 5);\n    float f = mod(fract(d * 7.0) + iTime / 4.0, 1.0);\n    d = smoothstep(0.0, f, d);\n\n    vec3 c = hsv2rgb(vec3(mod(d + iTime / 8.0 + (1.0 - length(st) / 4.0), 1.0), 1.0, 0.9));\n    c = mix(c, vec3(0, 0, 0), length(st) * 0.3);\n\n    fragColor = vec4(c,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}