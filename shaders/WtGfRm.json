{
    "Shader": {
        "info": {
            "date": "1614051457",
            "description": "Its growing blood! Draw more with the mouse.",
            "flags": 32,
            "hasliked": 0,
            "id": "WtGfRm",
            "likes": 3,
            "name": "Growing Blood",
            "published": 3,
            "tags": [
                "2d",
                "red",
                "blood",
                "reactiondiffusion",
                "glowing",
                "growing"
            ],
            "usePreview": 1,
            "username": "oneshade",
            "viewed": 271
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 ab = texture(iChannel0, fragCoord / iResolution.xy).xy;\n    fragColor = vec4(ab.y * 3.0, 0.0, 0.0, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Algorithm from https://www.karlsims.com/rd.html\n#define Da 0.8 // Diffusion rate of A\n#define Db 0.4 // Diffusion rate of B\n#define f 0.01 // Feed rate\n#define k 0.035 // Kill rate\n#define dt 1.4 // Time step\n\n// Convolution weights\nconst mat3 weights = mat3(0.05,  0.2, 0.05,\n                          0.20, -1.0, 0.20,\n                          0.05,  0.2, 0.05);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    ivec2 iFragCoord = ivec2(fragCoord);\n    vec2 ab;\n    if (iFrame == 0) {\n        ab = texture(iChannel1, fragCoord / iResolution.xy).xy;\n    }\n\n    if (iFrame > 0) {\n        ab = texelFetch(iChannel0, iFragCoord, 0).xy;\n        vec2 laplacian = vec2(0.0);\n        for (int i=-1; i < 2; i++) {\n            for (int j=-1; j < 2; j++) {\n                ivec2 offs = ivec2(i, j);\n                vec2 c = texelFetch(iChannel0, iFragCoord + offs, 0).xy; // Neighboring cell\n                float w = weights[j + 1][i + 1]; // Weight\n                laplacian += c * w; // Weighted sum\n            }\n        }\n\n        ab.x += (Da * laplacian.x - ab.x * ab.y * ab.y + f * (1.0 - ab.x)) * dt; // Update A\n        ab.y += (Db * laplacian.y + ab.x * ab.y * ab.y - (k + f) * ab.y) * dt; // Update B\n    }\n\n    if (length(fragCoord - iMouse.xy) < 10.0 && iMouse.z > 0.0) {\n        ab.y += 0.01;\n    }\n\n    fragColor = vec4(ab, 0.0, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}