{
    "Shader": {
        "info": {
            "date": "1702824612",
            "description": "inspired by the lollipop spinner on android",
            "flags": 0,
            "hasliked": 0,
            "id": "4csGz4",
            "likes": 0,
            "name": "Fork L spinner IAMDEAD 432",
            "published": 3,
            "tags": [
                "spinnercircle"
            ],
            "usePreview": 0,
            "username": "IAMDEAD",
            "viewed": 157
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n#define TPI 6.28318530718\n\nfloat resize(float inputs, float factor, float offset)\n{ \n    return (inputs - 0.5f + offset) / factor + 0.5f - offset; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 screen_res = vec4(iResolution.xy, 1.0 / iResolution.xy);\n    vec2 texcoord = fragCoord * screen_res.zw;\n\n\n    //texcoord.x = resize(texcoord.x, screen_res.x / screen_res.y, 0.0);\n\tvec2 p = texcoord;\n    p -= 0.5;\n    p.x *= screen_res.x * screen_res.w;\n\n\n    float time = iTime / 1.0;\n    p.x = - p.x;\n    \n    float angle = -(time - sin(PI) * cos(time));\n    mat2 rot = mat2(cos(angle),sin(angle),-sin(angle),cos(angle));\n    p = rot * p * 1.35;\n    \n    vec3 col = vec3(0.);\n    float L = length(p);\n    float f = 0.;\n    \n    f = smoothstep(L-.007, L, .35);\n    f -= smoothstep(L,L + 0.007, .33);\n    //f = step(sin(L * 200. + iTime * p.x)*.5+.5,.25); // uncomment for a headache\n    \n    float t = mod(time,TPI) - PI;\n    float t1 = -PI;\n    float t2 = (PI );\n    float t3 = (PI - 6.1);\n    \n    float a = atan(p.x,p.y);\n    f = f * step(a,t2);\n    \n    float f_final = f * step(a,t3);\n    \n    \n    vec3 col2 = mix(col,vec3(0.1,0.1,0.1),f);\n    \n    vec3 col3 = mix(col,vec3(cos(time),cos(time + TPI / 3.),cos(time + 2.* TPI/3.)),f_final);\n\n    vec4 t_vp2 = texture(iChannel0, texcoord);\n\n\n    vec4 fragsColor = vec4(col2,0.0) + vec4(col3,0.0);\n\n    if (fragsColor.r > 0.1 || fragsColor.g > 0.1 || fragsColor.b > 0.1)\n        fragsColor.a = 1.0;\n\n\n    fragColor = fragsColor + t_vp2;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}