{
    "Shader": {
        "info": {
            "date": "1724651078",
            "description": "opart",
            "flags": 0,
            "hasliked": 0,
            "id": "4c2BR1",
            "likes": 0,
            "name": "aug25 [flashwarning]",
            "published": 3,
            "tags": [
                "popart"
            ],
            "usePreview": 0,
            "username": "graycrawford",
            "viewed": 58
        },
        "renderpass": [
            {
                "code": "// Fork of \"aug232024v4[flashwarning]\" by brendanluu. https://shadertoy.com/view/XclfDX\n// 2024-08-26 05:44:12\n\n// IQ Color Palette Function\nvec3 colorIQ(float t)\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.00, 0.33, 0.67);\n    return a + b * cos(6.28318 * (c * t + d));\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 col = vec3(0);\n    vec2 gv = fract(uv * 6.) - 0.5;\n    float m = 0.0;\n    float t = iTime * 0.1; // Increased speed for more rapid color changes\n    float dist = length(uv);\n    for (float y = -1.; y <= 1.; y++) {\n        for (float x = -1.; x <= 1.; x++) {\n            vec2 offs = vec2(x, y);\n            float d = length(gv - offs);\n            float r = mix(0.025, 1., sin(t + dist) * 0.5 + 0.5);\n            m += smoothstep(r, r / 7., d);\n        }\n    }\n    // Use the IQ color palette\n    col = colorIQ(t + dist * 0.5); // Base color\n    // Modify the color based on the grid pattern\n    col *= mod(m, 2.);\n    // Add some variation\n    col += colorIQ(t * 1.5 - dist) * 0.2 * sin(m * 3.14159);\n    // Ensure colors are in valid range\n    col = clamp(col, 0.0, 1.0);\n    // Create flashing effect alternating every frame\n    float flash = mod(float(iFrame), 4.0);\n    // On even frames, keep the colorful pattern\n    // On odd frames, display a bright flash\n    col = mix(vec3(1.0), col, flash);\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}