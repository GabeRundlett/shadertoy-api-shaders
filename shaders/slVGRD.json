{
    "Shader": {
        "info": {
            "date": "1637298366",
            "description": "simple game of life exploration",
            "flags": 32,
            "hasliked": 0,
            "id": "slVGRD",
            "likes": 3,
            "name": "Game of Life Exploration",
            "published": 3,
            "tags": [
                "life"
            ],
            "usePreview": 0,
            "username": "DanielXMoore",
            "viewed": 281
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Output to screen\n    fragColor = vec4(texture(iChannel0, uv).rgb, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float Hash21(vec2 p) {\n  p = fract(p*vec2(234.34, 435.345));\n  p += dot(p, p+34.23);\n  return fract(p.x * p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 px = 1. / iResolution.xy;\n\n    if (iFrame < 3) {\n        fragColor = step(0.5, vec4(Hash21(uv)));\n    } else {\n        float v = texture(iChannel0, uv).r;\n        float n = -v;\n        for (int y = -1; y <= 1; y++) {\n            for (int x = -1; x <= 1; x++) {\n                n += texture(iChannel0, vec2(x, y) * px + uv).r;\n            }\n        }\n        \n        if (v > 0.5) {\n            if ((n >= 1.5) && (n <= 3.5)) {\n                v = 1.;\n            } else {\n                v = 0.;\n            }\n        } else {\n            if ((n >= 2.5) && (n <= 3.5)) {\n                v = 1.;\n            } else {\n                v = 0.;\n            }\n        }\n        \n        fragColor = vec4(v);\n    }\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}