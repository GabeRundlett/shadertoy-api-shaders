{
    "Shader": {
        "info": {
            "date": "1705627122",
            "description": "mouse around to affect color palette\njust added color variation to @Zokalyx 's work.\nnspired by the \"ant highway\" shader of the book of shaders",
            "flags": 0,
            "hasliked": 0,
            "id": "4ffXDS",
            "likes": 14,
            "name": "Rainbow Bitstream- mousepalette",
            "published": 3,
            "tags": [
                "parallax",
                "abstract",
                "pattern",
                "bookofshaders"
            ],
            "usePreview": 0,
            "username": "timmaffett",
            "viewed": 315
        },
        "renderpass": [
            {
                "code": "//@FabriceNeyret2 's golf to 406 characters!\n#define H(c) fract(sin(dot(vec2(floor(c)+42.), vec2(12.9898, 78.233))) * 43758.5453)\n\nvoid mainImage( out vec4 O, vec2 u ) {\n    vec2  R = iResolution.xy,\n          U = u /R.y * 30.,\n          M = iMouse.xy != R-R ? iMouse.xy/R : vec2(.0184,.853);   \n    float N = 5.,\n          L = ceil( N * H( U.y ) ),\n          l = L/N;    \n    U.x += ( 3.*L - 2.) * iTime;\n\n    O = 2. - abs( 6.*fract(M*U).x - vec4(3,2,4,0) );  // hue\n    O.x = 1.-O.x;\n    R = step( abs( fract(U) -.5 ) , vec2(l-.1)/2. );  // rect\n    O = H(U)>.6 ? l* R.x*R.y\n                   * mod( vec4(L), 3. + M.y*  clamp(O-1., -1., 0.)*3. ) \n                : O-O;\n}\n\n\n#ifdef ORIGINAL\n// Fork of \"Abstract parallax effect\" by Zokalyx. https://shadertoy.com/view/lcsSzs\n// 2024-01-19 01:18:13\n\n// Author: zokalyx\n// Title: parallax effect\n// Comment: inspired by the \"ant highway\" shader of the book of shaders\n\n#define ROWS 30.0\n#define COLS 30.0\n#define LAYERS 5.0\n#define DENSITY 0.4\n#define SEED 42.0\n\n// https://stackoverflow.com/questions/4200224/random-noise-functions-for-glsl\nfloat rand(vec2 co){\n    return fract(sin(dot(co + SEED, vec2(12.9898, 78.233))) * 43758.5453);\n}\nfloat rand(float c){\n    return fract(sin(dot(vec2(c + SEED), vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat rect(in vec2 size, in vec2 _st) {\n    vec2 condition = step(_st, 0.5 - 0.5 * size) - step(_st, 0.5 + 0.5 * size);\n    return condition.x * condition.y;\n}\n\n\n// customizable color from @WhiteTophat  in https://www.shadertoy.com/view/dlBczW\nvec4 lerp(vec4 a, vec4 b, float t) {\n    return (a * vec4(t)) + (b * vec4(1.0-t));\n}\nvec4 lerp(vec4 a, vec4 b, vec4 t) {\n    return (a * t) + (b * (vec4(1.0) * t));\n}\n\nvec4 hue2rgb(float hue) {\n    hue = fract(hue); //only use fractional part of hue, making it loop\n    float r = abs(hue * 6.0 - 3.0) - 1.0; //red\n    float g = 2.0 - abs(hue * 6.0 - 2.0); //green\n    float b = 2.0 - abs(hue * 6.0 - 4.0); //blue\n    vec4 rgb = vec4(r,g,b, 1.0); //combine components\n    rgb = clamp(rgb, 0.0, 1.0); //clamp between 0 and 1\n    return rgb;\n}\nvec4 hsv2rgb(vec3 hsv) {\n    vec4 rgb = hue2rgb(hsv.x); //apply hue\n    rgb = lerp(vec4(1.0), rgb, 1.0 - hsv.y); //apply saturation\n    rgb = rgb * hsv.z; //apply value\n    return rgb;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord.xy / iResolution.y;\n\tst *= vec2(COLS, ROWS);\n    \n    \n    float layer = floor( LAYERS * rand( floor(st.y) ) ) + 1.0;\n    \n    st.x += (3.0 * layer - 2.0) * iTime;\n    float show = step(1.0 - DENSITY, rand(floor(st)));\n  \n    vec2 mouse = vec2(0.01843,0.8532) * iResolution.xy;  // provide default that is colorful\n    if(iMouse.xy!=vec2(0.)) {\n      mouse=iMouse.xy;\n    }\n  \n    vec2 mouseUV = mouse / iResolution.xy;\n    vec4 mouseColor = hsv2rgb(vec3(mouseUV.x*st.x, mouseUV.y, 1.0));\n\n    st = fract(st);\n\n    vec3 color = (layer / LAYERS) * mod(vec3(layer), mouseColor.rgb*3.) * show * rect(vec2(layer / LAYERS - 0.1, layer / LAYERS - 0.1), st);\n    \n    fragColor = vec4(color, 1.0);\n    \n\n}\n#endif",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}