{
    "Shader": {
        "info": {
            "date": "1538073750",
            "description": "I tried my hand at modeling surface tension and wound up with this",
            "flags": 32,
            "hasliked": 0,
            "id": "XtGyDd",
            "likes": 49,
            "name": "Weird Science II",
            "published": 3,
            "tags": [
                "fluid"
            ],
            "usePreview": 1,
            "username": "wyatt",
            "viewed": 1752
        },
        "renderpass": [
            {
                "code": "vec4 t (vec2 v) {return texture(iChannel0,v/iResolution.xy);}\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec4 me = t(U);\n    vec2 dw = vec2(\n    \tt(U+vec2(1,0)).w-t(U-vec2(1,0)).w,\n    \tt(U+vec2(0,1)).w-t(U-vec2(0,1)).w\n    );\n    vec3 n = normalize(vec3(dw,.05));\n    C = sin(vec4(1.5,2.5,3,4)*me.w*2.);\n    float l = dot(n,normalize(vec3(3,1,0)));\n    C *= 0.7+0.4*(0.5-0.5*l)*texture(iChannel2, reflect(vec3(0,0,-1),n));\n\tC = (0.8+0.4*l)*sqrt(C)*sqrt(sqrt(C));\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "cubemap",
                        "id": 26,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define Y 6.5\n#define S -0.7\n\nvec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvec2 st (float p, float n, float p1, float n1, vec2 v) {\n\treturn (p*p1+n*n1-p*n1-n*p1)*normalize(v)/dot(v,v);\n}\nvec2 f (vec2 U) {\n\tvec4 me = T(U);\n    vec2 sf = vec2(0);\n    me.z+=1.;\n    for (int x = -2; x <= 2; x++) {\n    for (int y = -2; y <= 2; y++) {\n       if (x==0&&y==0) continue;\n       vec2 u = vec2(x,y)*Y;\n       vec4 o = T(U+u);\n       o.z+=1.;\n       sf += st (me.w*me.z,(1.-me.w)*me.z,o.w*o.z,(1.-o.w)*o.z,u);\n    }\n    }\n    return sf;\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec2 O = U,A = U+vec2(1,0),B = U+vec2(0,1),C = U+vec2(-1,0),D = U+vec2(0,-1);\n \tvec4 u = T(U), a = T(A), b = T(B), c = T(C), d = T(D);\n \tvec4 p;\n \tvec2 g = vec2(0);\n \t#define I 2\n \tfor (int i = 0; i < I; i++) {\n        U -=u.xy; A -=a.xy; B -=b.xy; C -=c.xy; D -=d.xy; \n        p += vec4(length(U-A),length(U-B),length(U-C),length(U-D))-1.;\n        g += vec2(a.z-c.z,b.z-d.z);\n       \tu = T(U);a = T(A); b = T(B); c = T(C); d = T(D);\n \t}   \n \tQ = u; \n \tvec4 N = 0.25*(a+b+c+d);\n \tQ = mix(Q,N, vec4(0,0,1,0.01)); \n \tQ.xy -= g/10./float(I); \n \tQ.z += (p.x+p.y+p.z+p.w)/10.;\n \t\n \tQ.xy += S*f(U);\n    \n \tQ.z *= 0.999;\n    \n \t\n \tif (iFrame < 1) Q = vec4(0);\n \tif (length(U-vec2(0.1,.5)*R) < 2.) Q.xyw = vec3(0.2,0,.6);\n \tif (U.x<1.||U.y<1.||R.x-U.x<1.||R.y-U.y<1.) Q.xyw=vec3(0,0,0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define Y 4.5\n#define S -.4\n\nvec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvec2 st (float p, float n, float p1, float n1, vec2 v) {\n\treturn (p*p1+n*n1-p*n1-n*p1)*normalize(v)/dot(v,v);\n}\nvec2 f (vec2 U) {\n\tvec4 me = T(U);\n    vec2 sf = vec2(0);\n    me.z+=1.;\n    for (int x = -2; x <= 2; x++) {\n    for (int y = -2; y <= 2; y++) {\n       if (x==0&&y==0) continue;\n       vec2 u = vec2(x,y)*Y;\n       vec4 o = T(U+u);\n       o.z+=1.;\n       sf += st (me.w*me.z,(1.-me.w)*me.z,o.w*o.z,(1.-o.w)*o.z,u);\n    }\n    }\n    return sf;\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec2 O = U,A = U+vec2(1,0),B = U+vec2(0,1),C = U+vec2(-1,0),D = U+vec2(0,-1);\n \tvec4 u = T(U), a = T(A), b = T(B), c = T(C), d = T(D);\n \tvec4 p;\n \tvec2 g = vec2(0);\n \t#define I 2\n \tfor (int i = 0; i < I; i++) {\n        U -=u.xy; A -=a.xy; B -=b.xy; C -=c.xy; D -=d.xy; \n        p += vec4(length(U-A),length(U-B),length(U-C),length(U-D))-1.;\n        g += vec2(a.z-c.z,b.z-d.z);\n       \tu = T(U);a = T(A); b = T(B); c = T(C); d = T(D);\n \t}   \n \tQ = u; \n \tvec4 N = 0.25*(a+b+c+d);\n \tQ = mix(Q,N, vec4(0,0,1,0.01)); \n \tQ.xy -= g/10./float(I); \n \tQ.z += (p.x+p.y+p.z+p.w)/10.;\n \t\n \tQ.xy += S*f(U);\n    \n \tQ.z *= 0.999;\n    \n \t\n \tif (iFrame < 1) Q = vec4(0);\n \tif (length(U-vec2(0.1,.5)*R) < 2.) Q.xyw = vec3(0.2,0,.6);\n \tif (U.x<1.||U.y<1.||R.x-U.x<1.||R.y-U.y<1.) Q.xyw=vec3(0,0,0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define Y 2.\n#define S 0.2\n\nvec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvec2 st (float p, float n, float p1, float n1, vec2 v) {\n\treturn (p*p1+n*n1-p*n1-n*p1)*normalize(v)/dot(v,v);\n}\nvec2 f (vec2 U) {\n\tvec4 me = T(U);\n    vec2 sf = vec2(0);\n    for (int x = -1; x <= 1; x++) {\n    for (int y = -1; y <= 1; y++) {\n       if (x==0&&y==0) continue;\n       vec2 u = vec2(x,y)*Y;\n       vec4 o = T(U+u);\n       sf += st (me.w,(1.-me.w),o.w,(1.-o.w),u);\n    }\n    }\n    return sf;\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec2 O = U,A = U+vec2(1,0),B = U+vec2(0,1),C = U+vec2(-1,0),D = U+vec2(0,-1);\n \tvec4 u = T(U), a = T(A), b = T(B), c = T(C), d = T(D);\n \tvec4 p;\n \tvec2 g = vec2(0);\n \t#define I 2\n \tfor (int i = 0; i < I; i++) {\n        U -=u.xy; A -=a.xy; B -=b.xy; C -=c.xy; D -=d.xy; \n        p += vec4(length(U-A),length(U-B),length(U-C),length(U-D))-1.;\n        g += vec2(a.z-c.z,b.z-d.z);\n       \tu = T(U);a = T(A); b = T(B); c = T(C); d = T(D);\n \t}   \n \tQ = u; \n \tvec4 N = 0.25*(a+b+c+d);\n \tQ = mix(Q,N, vec4(0,0,1,0.01)); \n \tQ.xy -= g/10./float(I); \n \tQ.z += (p.x+p.y+p.z+p.w)/10.;\n \t\n \tQ.xy += S*f(U);\n    \n \tQ.z *= 0.999;\n    \n \t\n \tif (iFrame < 1) Q = vec4(0);\n \tif (length(U-vec2(0.1,.5)*R) < 2.) Q.xyw = vec3(0.2,0,.6);\n \tif (U.x<1.||U.y<1.||R.x-U.x<1.||R.y-U.y<1.) Q.xyw=vec3(0,0,0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define Y 1.5\n#define S 0.4\n\nvec2 R;\nvec4 T ( vec2 U ) {return texture(iChannel0,U/R);}\nvec2 st (float p, float n, float p1, float n1, vec2 v) {\n\treturn (p*p1+n*n1-p*n1-n*p1)*normalize(v)/dot(v,v);\n}\nvec2 f (vec2 U) {\n\tvec4 me = T(U);\n    vec2 sf = vec2(0);\n    for (int x = -1; x <= 1; x++) {\n    for (int y = -1; y <= 1; y++) {\n       if (x==0&&y==0) continue;\n       vec2 u = vec2(x,y)*Y;\n       vec4 o = T(U+u);\n       sf += st (me.w,(1.-me.w),o.w,(1.-o.w),u);\n    }\n    }\n    return sf;\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{   R = iResolution.xy;\n \tvec2 O = U,A = U+vec2(1,0),B = U+vec2(0,1),C = U+vec2(-1,0),D = U+vec2(0,-1);\n \tvec4 u = T(U), a = T(A), b = T(B), c = T(C), d = T(D);\n \tvec4 p;\n \tvec2 g = vec2(0);\n \t#define I 2\n \tfor (int i = 0; i < I; i++) {\n        U -=u.xy; A -=a.xy; B -=b.xy; C -=c.xy; D -=d.xy; \n        p += vec4(length(U-A),length(U-B),length(U-C),length(U-D))-1.;\n        g += vec2(a.z-c.z,b.z-d.z);\n       \tu = T(U);a = T(A); b = T(B); c = T(C); d = T(D);\n \t}   \n \tQ = u; \n \tvec4 N = 0.25*(a+b+c+d);\n \tQ = mix(Q,N, vec4(0,0,1,0.01)); \n \tQ.xy -= g/10./float(I); \n \tQ.z += (p.x+p.y+p.z+p.w)/10.;\n \t\n \tQ.xy += S*f(U);\n    \n \tQ.z *= 0.999;\n    \n \t\n \tif (iFrame < 1) Q = vec4(0);\n \tif (length(U-vec2(0.1,.5)*R) < 2.) Q.xyw = vec3(0.2,0,.6);\n \tif (U.x<1.||U.y<1.||R.x-U.x<1.||R.y-U.y<1.) Q.xyw=vec3(0,0,0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}