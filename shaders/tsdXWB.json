{
    "Shader": {
        "info": {
            "date": "1572841914",
            "description": "Click to interact\n\nGraph that undergoes physics and evolves its state.",
            "flags": 32,
            "hasliked": 0,
            "id": "tsdXWB",
            "likes": 37,
            "name": "Bouncy Graph",
            "published": 3,
            "tags": [
                "graph",
                "physics"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 870
        },
        "renderpass": [
            {
                "code": "/*\n\tIt's really hard to realize that \n\tI am a colonist, a murderer, a rapist, an evil being capable of genocide and massacre.\n\tI am a white devil derived from a megaculture devoid of real culture and tight community.\n\tI am a pig who undervalues female voices and the words of my elders.\n\tI am a privileged racist who benefits from systems of oppression and institutions of slavery\n\tI am a pillager of foreign lands and the benefactor of evil deeds committed on false pretenses.\n\tI am an American boy.\n*/\n\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    Q = vec4(0);\n    for (float i = 0.; i < N; i++) {\n        vec4 a = A(vec2(i,0));\n        for (float j = i+1.; j < N; j++) {\n            vec4 b = A(vec2(j,0));\n            Q += 3./N*exp(-2.*ln(a.xy,b.xy,U));\n        }\n    }\n    Q = .8-Q*vec4(1,.9,.8,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = A(U);\n    vec4 b = B(U);\n    Q.w -= g;\n    vec4 dQ = vec4(0);\n    for (float i = 0.; i < N; i++) {\n    \tfloat L = length(B(vec2(i,0)).xy-b.xy);\n        vec2 r = A(vec2(i,0)).xy-Q.xy;\n        float l = length(r);\n        if (l>0.) {\n            vec2 f = normalize(r)*(l-L);\n            dQ.xy += Rigid*f;\n            dQ.zw += f;\n        }\n    }\n    Q += dQ/N;\n    Q.xy += Q.zw;\n    if (Q.x<1.)  {Q.x = 1.; Q.zw *= vec2(-1.,.99);}\n    if (Q.y<1.)  {Q.y = 1.; Q.zw *= vec2(.5,-1.);}\n    if (Q.x>R.x) {Q.x = R.x; Q.zw *= vec2(-1.,.99);}\n    if (Q.y>R.y) {Q.y = R.y; Q.zw *= vec2(.99,-1.);}\n    \n    if (iMouse.z>0.) {\n    \tQ.zw -= 10.*(Q.xy-iMouse.xy)/(10.+dot(Q.xy-iMouse.xy,Q.xy-iMouse.xy));\n    \t\n    }\n    \n    if (iFrame < 1) {\n    \tQ.xy = (hash(U+10.+dot(iDate,vec4(1))).xy*0.3+vec2(.25,.5))*R;\n        Q.zw = vec2(0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define R iResolution.xy\n#define A(U) texelFetch(iChannel0,ivec2(U),0)\n#define B(U) texelFetch(iChannel1,ivec2(U),0)\n\n#define N 20.\n#define Rigid 1.\n#define g (9.8/R.y)\n\nfloat ln (vec2 a, vec2 b, vec2 u) {\n\tu = u-a;\n    b = b-a;\n    return length(u-b*clamp(dot(u,b)/dot(b,b),0.,1.));\n}\nvec2 hash(vec2 p) // Dave Hoskins\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = B(U);\n    vec2 h = hash(U/R.yy);\n    Q.xy += h.y*vec2(sin(3.*iTime*h.x),cos(3.*iTime*h.x));\n    vec2 m = vec2(0);\n    if (iFrame < 1) {\n        Q = A(U);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = A(U);\n    vec4 b = B(U);\n    Q.w -= g;\n    vec4 dQ = vec4(0);\n    for (float i = 0.; i < N; i++) {\n    \tfloat L = length(B(vec2(i,0)).xy-b.xy);\n        vec2 r = A(vec2(i,0)).xy-Q.xy;\n        float l = length(r);\n        if (l>0.) {\n            vec2 f = normalize(r)*(l-L);\n            dQ.xy += Rigid*f;\n            dQ.zw += f;\n        }\n    }\n    Q += dQ/N;\n    Q.xy += Q.zw;\n    if (Q.x<1.)  {Q.x = 1.; Q.zw *= vec2(-1.,.99);}\n    if (Q.y<1.)  {Q.y = 1.; Q.zw *= vec2(.5,-1.);}\n    if (Q.x>R.x) {Q.x = R.x; Q.zw *= vec2(-1.,.99);}\n    if (Q.y>R.y) {Q.y = R.y; Q.zw *= vec2(.99,-1.);}\n    \n    if (iMouse.z>0.) {\n    \tQ.zw -= 10.*(Q.xy-iMouse.xy)/(10.+dot(Q.xy-iMouse.xy,Q.xy-iMouse.xy));\n    \t\n    }\n    \n    if (iFrame < 1) {\n    \tQ.xy = (hash(U+10.+dot(iDate,vec4(1))).xy*0.3+vec2(.25,.5))*R;\n        Q.zw = vec2(0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = B(U);\n    vec2 h = hash(U/R.yy);\n    Q.xy += h.y*vec2(sin(3.*iTime*h.x),cos(3.*iTime*h.x));\n    vec2 m = vec2(0);\n    if (iFrame < 1) {\n        Q = A(U);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}