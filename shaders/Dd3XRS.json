{
    "Shader": {
        "info": {
            "date": "1679975449",
            "description": "Fluid simulation on a sphere.",
            "flags": 0,
            "hasliked": 0,
            "id": "Dd3XRS",
            "likes": 23,
            "name": "Jupiter Simulation",
            "published": 3,
            "tags": [
                "fluid"
            ],
            "usePreview": 0,
            "username": "wyatt",
            "viewed": 445
        },
        "renderpass": [
            {
                "code": "#define R iResolution.xy\n#define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))\nfloat sphere (vec3 p, vec3 d,float r) {\n    //|| p + di || = r*r;\n    // p.p-rr+2p.di+ii=0\n    float b = 2.*dot(p,d);\n    float c = dot(p,p)-r*r;\n    float det = b*b-4.*c;\n    if (det<0.) return -1.;\n    return (-b-sqrt(det))/2.;\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    if (iFrame % 2 > 0) discard;\n    U = 2.*(U-.5*R)/R.y;\n    vec3 p = vec3(0,0,-12.);\n    vec3 d = normalize(vec3(U,10));\n    float i = sphere(p,d,1.);\n    p += d*i;\n    p.yz *= ei(-.3+iMouse.y/R.y*6.2);\n    p.xz *= ei(iMouse.x/R.x*6.2);\n    vec3 perp = normalize(mix(normalize(vec3(p.z,0,-p.x)),vec3(0,1,0),abs(dot(p,vec3(0,0,sign(p.z))))));\n    vec3 X = cross(p,perp);\n    vec3 Y = cross(p,X);\n    vec4 n = texture(iChannel0,p+Y/N);\n    vec4 e = texture(iChannel0,p+X/N);\n    vec4 s = texture(iChannel0,p-Y/N);\n    vec4 w = texture(iChannel0,p-X/N);\n    vec3 dx = X*(e-w).w;\n    vec3 dy = Y*(n-s).w;\n    vec3 dz = -1e-3*p;\n    vec3 normal = normalize(dx+dy+dz);\n    Q = vec4(0);\n    vec3 p1 = p;\n    #define M 150.\n    for (float j = 0.; j < M; j++){\n        p -= 2.*normalize(texture(iChannel0,p).xyz)/N;\n        vec4 q = texture(iChannel1,p);\n        Q += sin(q.x*3.*vec4(1,2,3,4))/M;\n        //p1 += 10.*normalize(texture(iChannel0,p1).xyz)/N;\n        //Q += .5*sin(texture(iChannel1,p1,2.).x*3.*vec4(1,2,3,4))/M;\n    }\n    Q *= max(dot(normal,normalize(vec3(0,-.3,1))),0.);\n    //Q = sin(30.*texture(iChannel1,p).x+vec4(1,2,3,4));\n    //Q = texture(iChannel0,p);\n    if (i < 0.) {\n     Q = vec4(0);\n     vec2 V = vec2(iTime*4.,0)+gl_FragCoord.xy+iMouse.xy;\n     for (float j = 1.; j < 8.; j++) {\n         V *= ei(.3);\n         Q += texture(iChannel2,.25*j*(V/R)).x/8.;\n         Q = 4.*Q*Q;\n      }\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "cubemap",
                        "id": 26,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 41,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a//media/previz/cubemap00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainCubemap( out vec4 Q, in vec2 U, in vec3 rayOri, in vec3 d )\n{\n    if (I%3==0)for(float j = 0.; j < 3.; j++) d -= texture(iChannel0,d).xyz/N;\n    Q = texture(iChannel0,d);\n    vec4 dQ = vec4(0);\n    vec3 perp = normalize(vec3(d.z,0,-d.x));//normalize(mix(normalize(vec3(d.z,0,-d.x)),vec3(0,1,0),abs(dot(d,vec3(0,1,0)))));\n    vec3 X = cross(d,perp);\n    vec3 Y = cross(d,X);\n    for (float x = -1.; x <= 1.; x++)\n    for (float y = -1.; y <= 1.; y++)\n    if (abs(x)!=abs(y))\n    {\n        vec3 du = x*X+y*Y;\n        vec3 u = d+du/N;\n        if (I%3==0)  u -= 3.*texture(iChannel0,u).xyz/N;\n        vec4 q = texture(iChannel0,u);\n        \n        dQ.xyz += 0.25*du*(Q.w-q.w);\n        dQ.w += 0.25*(q.w-Q.w-dot(du,q.xyz));\n    }\n    Q += dQ;\n    Q.xz += .01/N*(vec2(-d.z,d.x))*sign(sin(15.*asin(d.y)));\n    Q.xyz -= d*dot(Q.xyz,d);\n    if (iFrame < 1) {\n        Q = vec4(0); \n        Q.xz = .1*vec2(-d.z,d.x)*sign(sin(15.*d.y));\n    }\n    /*if (length(d-vec3(0,0,-1))<.01)\n            Q.x = .5;\n    if (length(d-vec3(0,0,1))<.01)\n            Q.x = -.5;\n    if (length(d-vec3(-1,0,0))<.01)\n            Q.y = .5;\n    if (length(d-vec3(1,0,0))<.01)\n            Q.y = -.5;\n    if (length(d-vec3(0,-1,0))<.01)\n            Q.z = .5;\n    if (length(d-vec3(0,1,0))<.01)\n            Q.z = -.5;*/\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 41,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a//media/previz/cubemap00.png"
                    }
                ],
                "name": "Cube A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 41
                    }
                ],
                "type": "cubemap"
            },
            {
                "code": "#define N 500.\n#define I iFrame",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}