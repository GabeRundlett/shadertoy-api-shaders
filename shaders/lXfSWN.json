{
    "Shader": {
        "info": {
            "date": "1709518525",
            "description": "Concentric Circles Experiment",
            "flags": 0,
            "hasliked": 0,
            "id": "lXfSWN",
            "likes": 3,
            "name": "Concentric Circles 888",
            "published": 3,
            "tags": [
                "circles",
                "concentric",
                "neverending"
            ],
            "usePreview": 0,
            "username": "harsh",
            "viewed": 128
        },
        "renderpass": [
            {
                "code": "const float diffuse_seconds = 7.0;\nconst float cutoff_radii = 1.1;\nconst float wave_length = 0.53 / 2.0;\nconst float wave_amplitude = 1.25; \nconst float wave_frequency = 1.0;\n\nfloat sdf_circle(vec2 p, float r) {\n    return length(p) - r;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - iResolution.xy * 0.5) / iResolution.y;\n        float time = iTime * 0.1;\n    float size = time;\n    float sdf = sdf_circle(uv, time);    \n    float value = pow(mod(sdf * (1.0 / wave_length), 1.0), 2.0);\n    float cutoff = 1.0 - smoothstep(0.0, cutoff_radii, length(uv));\n\n    vec3 pink = vec3(1.0, 0.5, 1.0);\n    vec3 violet = vec3(0.7, 0.5, 1.0);\n    vec3 baseBlue = vec3(0.1, 0.5, 1.0);\n    vec3 lightBlue = vec3(0.1, 0.8, 1.0);\n\n    vec3 colorMix1 = mix(baseBlue, pink, sqrt(value));\n    vec3 colorMix2 = mix(lightBlue, violet, sqrt(value));\n    fragColor = vec4(mix(colorMix1, colorMix2, cutoff), 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}