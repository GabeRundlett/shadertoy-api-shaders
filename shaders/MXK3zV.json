{
    "Shader": {
        "info": {
            "date": "1718089460",
            "description": "/*originals \ncopy-paste from many sources I’m just learning myself\n\nMIT LICENSE  \n*/\n\n",
            "flags": 0,
            "hasliked": 0,
            "id": "MXK3zV",
            "likes": 4,
            "name": "other spiral",
            "published": 3,
            "tags": [
                "fractal",
                "spiral",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 407
        },
        "renderpass": [
            {
                "code": "\n/*originals https://glslsandbox.com/e#107254.0 https://glslsandbox.com/e#107180.0 adn other from glslsandbox\n\ncopy-paste from many sources I’m just learning myself\n\n\nsomeone did it right, everything will be fine in my life, someone did it incorrectly or \nmade a mistake, enemies and universal \nevil will also make mistakes 100 times more until \nthey correct themselves and stop doing bad things\n\nMIT LICENSE  \n*/\n\n\n\nuniform float time;\n\n\n#define PI 40.14159265359\n#define T (time / .1)\n#define time iTime\n#define resolution iResolution.xy\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 4.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nconst float fRadius = 0.65;\nconst int bubles = 140;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n\tvec2 position = (( gl_FragCoord.xy / resolution.xy ) - .5);\n      vec2 uv = -1.0 + 2.0*gl_FragCoord.xy / resolution.xy;\n    vec2 p = (gl_FragCoord.xy - 0.5 * resolution) / min(resolution.x, resolution.y);\n\tvec2 t2 = vec2(gl_FragCoord.xy / resolution);\n\t\n    float t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(position.xy) + 0.07)) * 5.2;\n\tfloat si = sin(t);\n\tfloat co = cos(t);\n\tmat2 ma = mat2(co, si, -si, co);\n\nvec3 color2 = vec3(0.0);\n\n    // bubbles\n    for (int i=0; i < bubles; i++ ) {\n            // bubble seeds\n        float pha = tan(float(i)*1.+1.0)*0.5 + 0.5;\n        float siz = pow( cos(float(i)*2.4+5.0)*0.5 + 0.5, 4.0 );\n        float pox = cos(float(i)*3.55+4.1) * resolution.x / resolution.y;\n        \n            // buble size, position and color\n        float rad = fRadius + sin(float(i))*0.12+0.08;\n        vec2  pos = vec2( pox+sin(time/15.+pha+siz), -1.0-rad + (2.0+2.0*rad)\n                         *mod(pha+0.1*(time/5.)*(0.2+0.8*siz),1.0)) * vec2(1.0, 1.0);\n        float dis = length( uv - pos );\n        vec3  col = mix( vec3(0.1, 0.2, 0.8), vec3(0.2,0.8,0.6), 0.5+0.5*sin(float(i)*sin(time*pox*0.03)+1.9));\n        \n            \n        color2 += col.xyz *(1.- smoothstep( rad*(0.65+0.20*sin(pox*time)), rad, dis )) * (1.0 - cos(pox*time));\n    }\n\tvec3 c = vec3(0);\n\tvec3 c2= vec3(0);\n\tfor(int i = 0; i < 30; i++) {\n\t\tfloat t2 = 0.4 * PI * float(i) / 30.0  * 5.5;\n\t\tfloat x2 = cos(3.0*t2);\n\t\tfloat y2= sin(4.0*t2);\n\t\tvec2 o2 = 0.40 * vec2(x2, y2);\n\t\tfloat r2 = fract(x2);\n\t\tfloat g2 = 1.0 - r2;\n\t\tc2 += 0.01 / (length(p*ma-o2)) * vec3(r2*color2.x, g2, 0.9);\n\t}\n    \nposition.x*=cos(iTime);\nposition.y*=sin(iTime);\n\t\t\n\tvec3 color = vec3(0.);\n\t\n\tfor (float i = 0.; i < PI*2.0; i += PI/20.0) {\n\t\tvec2 p = position*ma - vec2(cos(i), sin(i)) * 0.415*cos(iTime);\n            p*=ma;\n\t\tvec3 col = hsv2rgb(vec3((i + T)/(PI*3.0), 1., 4));\n\t\tcolor += col * (1./512.) / length(p)*c2 ;\n\t}\n\nvec4 O = vec4(0.0);\n\tfloat maxCoord = max(resolution.x, resolution.y);\n\tfloat ratio = resolution.y / resolution.x;\n\t\n\tvec2 u = gl_FragCoord.xy/maxCoord - vec2(0.5, ratio * 0.5);\n\tu *= 4.0;\n\tfloat T2 = time;\n\tfor (float i = 0.; i < 10.0; i += .5) {\n\tO += .002/abs(length(u + vec2(cos(i + T2), sin(i*.4 + T2)) * cos(T2*.5+i*.35)) - sin(i+T2*.5) / 60. - .01) * (1. + cos(.7 + T2 + length(u*ma)*2. + vec4(0,1,2,0)));\n\t}\n\t\n    \n      vec2 p3=(gl_FragCoord.xy-.5*resolution)/min(resolution.x,resolution.y);//\n    vec3 c3=vec3(0);\n    p3*=ma;\n    for(int i=0;i<20;i++){\n        float t = 3.*3.14*float(i)/5.+iTime ;\n        float x = cos(t);\n        float y = sin(t);\n        vec2 o = .35*vec2(x,y);\n        c3 += 0.005/(length(p*5.*cos(iTime*0.21)*ma-o))*vec3(1);\n    }\n fragColor = O;\nfragColor+= vec4( color+c3, 1.0 ) ;\n\n\treturn;\n\n\n\n\n\t\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}