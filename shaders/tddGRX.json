{
    "Shader": {
        "info": {
            "date": "1569006625",
            "description": "None",
            "flags": 0,
            "hasliked": 0,
            "id": "tddGRX",
            "likes": 6,
            "name": "Seamless Colorful Connection",
            "published": 3,
            "tags": [
                "lines",
                "color",
                "dots",
                "points",
                "quad",
                "sparkle",
                "connections"
            ],
            "usePreview": 0,
            "username": "yuchengzhong",
            "viewed": 567
        },
        "renderpass": [
            {
                "code": "#define s(a,b,c) smoothstep(a,b,c)\n#define m(a,b,c) mix(a,b,c)\n\n#define Movable 0.15\n#define Sat 0.8\n#define Val 0.7\nvec3 hsv2rgb(vec3 c) \n{\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nhighp float rand(vec2 co) \n{\n    return fract(sin(mod(dot(co.xy+0.1 ,vec2(12.9898,78.233)),3.14))*43758.5453);\n}\nvec3 rndc(vec2 v)\n{\n  return hsv2rgb(vec3(rand(v),Sat,Val));\n}\n\nhighp vec3 rand3(vec2 co)\n{\n\tfloat t=rand(co);\n\tfloat z=rand(co+t);\n\treturn vec3(t,z,rand(co+z));\n}\nvec3 getpoint(vec2 id)\n{\n\tvec3 r=rand3(id);\n\tvec3 ou=vec3(sin(iTime*r.x+52.0),cos(iTime*r.y+1243.0),sin(iTime*r.z));\n\treturn ou*Movable+0.5;//0.05-0.95\n}\n#define LineThickness 0.12\nfloat line(vec2 uv, vec2 p, vec2 p2)\n{\n\tvec2 n=uv-p;\n\tvec2 w=p2-p;\n\tfloat r=clamp(dot(n,w)/dot(w,w),0.,1.);\n\tr=length(n-w*r);   \n    float bright =(s(0.0,1.6,1.0/distance(p,p2)));\n    return clamp(s(LineThickness,0.01,r)*bright,0.0,1.0);\n}\nvec3 linex(vec2 uv, vec2 p, vec2 p2,vec3 co, vec3 co2)\n{\n\tvec2 n=uv-p;\n\tvec2 w=p2-p;\n\tfloat r=clamp(dot(n,w)/dot(w,w),0.,1.);\n\tr=length(n-w*r);   \n    float bright =(s(0.0,1.5,1.0/distance(p,p2)));\n    vec3 co3 = mix(co2,co,0.5);\n    return 2.5*co3*clamp(s(LineThickness,0.01,r)*bright,0.0,1.0);\n}\n#define Num 2.0\n#define Repeat 4.0\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n\tuv*=Num*Repeat;\n    \n\t\n\tvec2 id=floor(mod(uv,Repeat));\n    vec2 c=fract(mod(uv,Repeat));\n\n    vec2 p[9];\n    vec3 co[9];\n     \n\tvec3 col=vec3(0.);\n    int i=0;\n    for(float n=-1.;n<=1.;n++)\n    {\n        for(float w=-1.;w<=1.;w++)\n        {\n\t\t\tvec2 nc=id+vec2(w,n);\n\t\t\tvec3 point=getpoint(mod(nc,Repeat));\n            co[i] = rndc(mod(nc,Repeat));\n\t\t\tp[i]=point.xy+vec2(w,n);\n            vec2 a = (p[i] -c);            \n\t\t\tcol+=co[i]*min(0.005/dot(a,a),1.0);//point.z\n            \n            i++;\n\t\t}\n\t}\n    vec3 linec = vec3(0.0);\n    for(int i=0;i<9;i++)\n    {\n\t\tlinec += linex(c,p[i].xy,p[4].xy,co[i],co[4]);\n\t}    \n\tlinec+= linex(c,p[1].xy,p[3].xy,co[1],co[3]);\n\tlinec+= linex(c,p[1].xy,p[5].xy,co[1],co[5]);\n\tlinec+= linex(c,p[7].xy,p[3].xy,co[7],co[3]);\n    linec+= linex(c,p[7].xy,p[5].xy,co[7],co[5]);\n    \n    col +=linec;\n    col = clamp(col*0.5,0.0,1.0);\n    col = pow(col,vec3(2.5));\n    \n    vec2 q = fragCoord/iResolution.xy;\n    vec2 p_ = -1.0 + 2.0 * q;\n    float an1 = 0.0;\n\tfloat an2 = 0.6;\n    vec3 ro = 2.5*normalize(vec3(sin(an2)*cos(an1), cos(an2)-0.5, sin(an2)*sin(an1)));\n    vec3 ww = normalize(vec3(0.0,0.0,0.0) - ro);\n    vec3 uu = normalize(cross( vec3(0.0,1.0,0.0), ww ));\n    vec3 vv = normalize(cross(ww,uu));\n    vec3 rd = normalize( p_.x*uu + p_.y*vv + 1.4*ww );\n    vec3 colb = texture( iChannel0, rd ).xyz;\n    vec3 colb2 = texture( iChannel0, rd*vec3(1.0,1.0,-1.0) ).xyz;\n\n    float lumin = dot(col,vec3(0.25,0.4,0.35));\n    fragColor = vec4(colb+col*mix(vec3(1.0),colb2,0.2),1.0);\n    fragColor = pow(fragColor,vec4(1.0/2.2));\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 26,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}