{
    "Shader": {
        "info": {
            "date": "1378830900",
            "description": "Vampire fun, using a recently posted edge detector. Sorry about the crappy moon! - as an excuse, it mixes well with the 80s vibe of the whole thing. ;)",
            "flags": 0,
            "hasliked": 0,
            "id": "ldl3WB",
            "likes": 17,
            "name": "Vamp",
            "published": 3,
            "tags": [
                "video",
                "edge",
                "britney",
                "vamp"
            ],
            "usePreview": 0,
            "username": "Dave_Hoskins",
            "viewed": 1989
        },
        "renderpass": [
            {
                "code": "\nfloat Hash( float n )\n{\n    return fract(sin(n)*43758.5453123);\n}\n\n//--------------------------------------------------------------------------\nfloat Noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0;\n    float res = mix(mix( Hash(n+  0.0), Hash(n+  1.0),f.x),\n                    mix( Hash(n+ 57.0), Hash(n+ 58.0),f.x),f.y);\n    return res-.5;\n}\n\nfloat Intensity(vec2 uv)\n{\n\tfloat edginess = 0.0;\n\tfloat fudge2 = 25.0;\n\tfloat fudge = 14.0;\n\n\t\n\tfor (int i = 0; i < 30; i++)\n\t{\n\t\tvec4 texColorA = texture(iChannel0, uv);\n\t\tfloat texBW = distance(vec3(0.0, .0, 0.0), texColorA.xyz*iResolution.x*.002);\n\t\tfloat clampedder = (max(abs(fwidth(texBW)), 0.05) - 0.5) / 0.85;\n\t\tedginess += exp(clampedder * fudge) * fudge2;\n\t\tuv.y += .0035;\n\t\tuv.x += Noise(uv*50.0)*.0015;\n\t\tfudge2 *= .93;\n\t}\n\treturn edginess;\n}\n\nvec3 Sky(vec2 uv)\n{\n\tuv.x *= iResolution.x / iResolution.y;\n\tvec3 col = mix(vec3(.75, .62, .4), vec3(.1, .0, .0), min(uv.y*1.4, 1.0));\n\tfloat moon = pow(max(1.0-length(uv-vec2(.2, .9)), 0.0), 10.0)*43.7;\n\t\n\tif (moon > 2.5)\n\t{\n\t\tmoon *= .25+smoothstep(2.5, 18.5, moon);\t\n\t\tmoon = min(moon, 1.0);\n\t\tfloat f = .95\t+ Noise(uv*19.5+vec2(4.5, 3.3))*.75\n\t\t\t\t\t\t+ Noise(uv*39.0)*.45\n\t\t\t\t\t\t+ Noise(uv*93.0)*.25\n\t\t\t\t\t\t+ Noise(uv*203.0)*.15;\n\t\tmoon = min(moon*f, 1.1);\n\t}else moon *= .2;\n\tcol = mix(col, vec3(1.0, .85, .65), moon);\n\treturn col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\tfloat bri = clamp(Intensity(uv), 0.0, 1.0);\n\tvec3 vid = texture(iChannel0, uv).xyz;\n\tvec3 col =  mix(vid, vec3(Noise(uv*13.3)*.2+.3, 0.0, 0.0), bri);\n\t\n    float maxrb = max( vid.r, vid.b);\n    float k = clamp((vid.g-maxrb)*11.0,0.0,1.0);\n    col = mix(col, Sky(uv), k);\n\tfragColor = vec4(vec3(col), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}