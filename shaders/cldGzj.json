{
    "Shader": {
        "info": {
            "date": "1682737246",
            "description": "fan-bulma",
            "flags": 0,
            "hasliked": 0,
            "id": "cldGzj",
            "likes": 13,
            "name": "fan-bulma",
            "published": 3,
            "tags": [
                "fanbulma"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 187
        },
        "renderpass": [
            {
                "code": "//por Jorge F.P.----jorge2017a2\n//28-abril-2023\n//----Fan Bulma....faltan detalles,,, y el pelo es dificil\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(6.0*antialiasing(1.0),b,d)\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\ncolOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\nreturn colOut;\n}\nvec3 DrawFigBordeCol(vec3 pColObj, vec3 colOut, float distObj , vec3 colBorde )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,colBorde ,S2(abs( distObj)-0.01,0.0));\n  return colOut;\n}\n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n\nfloat sdCircle( vec2 p, float r )\n{return length(p) - r; }\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\nvec2 pa = p-a, ba = b-a;\nfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\nreturn length( pa - ba*h );\n}\n\nvec2 rotatev2(vec2 p, float ang)\n{   float c = cos(ang); float s = sin(ang);\n    return vec2(p.x*c - p.y*s, p.x*s + p.y*c);\n}\n\nvec3 CejaDer(vec2 uv,vec3  col) \n{\nfloat d1,d2,d3,d4,df;\nvec2 p1,p2,p3,p4,p5;\nfloat r1,r2,r3,r4,r5;\nfloat a1,a2,a3;\nfloat b1,b2,b3;\n    p1 = vec2(3.69, 3.2); r1 = 0.25;\n    p2 = vec2(3.77, 3.13); r2 = 0.3;\n    p3 = vec2(3.37, 3.02); r3 = 0.25;\n    d1 = sdCircle(uv- p1, r1);\n    d2 = sdCircle(uv- p2, r2);\n    d3 = sdCircle(uv- p3, r3);\n    df = differenceSDF(d1, d2);\n    df = differenceSDF(df, d3);\n    col = DrawFigBorde(vec3(70.0/ 255.0, 151.0/ 255.0, 205.0/ 255.0), col, df);\n    return  col;\n}\n\nvec3 Cejaizq(vec2 uv,vec3 col ) \n{\nfloat d1,d2,d3,d4,df;\nvec2 p1,p2,p3,p4,p5;\nfloat r1,r2,r3,r4,r5;\nfloat a1,a2,a3; \nfloat b1,b2,b3;\n////------ceja izq;\n//inter , dif;\np1 = vec2(2.77, 3.14);  r1 = 0.25;\np2 = vec2(2.75, 3.1);  r2 = 0.25;\np3 = vec2(3.1, 2.99);  r3 = 0.25;\n    d1 = sdCircle(uv- p1, r1);\n    d2 = sdCircle(uv- p2, r2);\n    d3 = sdCircle(uv- p3, r3);\n    df = differenceSDF(d1, d2);\n    df = differenceSDF(df, d3);\n    col = DrawFigBorde(vec3(70.0 / 255.0, 151.0 / 255.0, 205.0 / 255.0), col, df);\n    return col;\n}\n\nvec3 OrejaDer(vec2 uv ,vec3 col)\n{\nfloat d1,d2,d3,d4,df;\nvec2 p1,p2,p3,p4,p5;\nfloat r1,r2,r3,r4,r5;\nfloat a1,a2,a3; \nfloat b1,b2,b3;\n////oreja der;\np1 = vec2(4.32, 2.6);  r1 = 0.25;\np2 = vec2(4.39, 2.78);  r2 = 0.15;\np3 = vec2(4.21, 2.54);  r3 = 0.25;\n    d1 = sdCircle(uv- p1, r1);\n    d2 = sdCircle(uv- p2, r2);\n    d3 = sdCircle(uv- p3, r3);\n    df = unionSDF(d1, d2);\n    df = unionSDF(df, d3);\n    col = DrawFigBorde(vec3(249.0 / 255.0, 210.0/255., 203.0/255.0), col, df);\n    return col;\n}\n\nvec3 OjoIzq(vec2 uv,vec3 col)\n{\nfloat d1,d2,d3,d4,d5,d6,df;\nvec2 p1,p2,p3,p4,p5, p6;\nfloat r1,r2,r3,r4,r5,r6;\nfloat a1,a2,a3,a4,a5; \nfloat b1,b2,b3,b4,b5;\n    ////-----ojo izquierdo;\n//interseccion;\np1 = vec2(2.925, 2.74);  a1 = 0.185;  b1 = 0.32;\np2 = vec2(2.865, 2.69);  a2 = 0.185;  b2 = 0.37;\np3 = vec2(2.94, 2.12);  r3 = 0.5; //diferencia;\n    ////ojo base\n    d1 = sdEllipse(uv- p1, vec2(a1, b1));\n    d2 = sdEllipse(uv- p2, vec2(a2, b2));\n    d3 = sdCircle(uv- p3, r3);\n    //cornea\n    p4 = vec2(2.96, 2.74);  a4 = 0.11;  b4 = 0.22;\n    d4 = sdEllipse(uv- p4, vec2(a4, b4));\n    //pupila\n    p5 = vec2(2.97, 2.82);  a5 = 0.06; b5 = 0.12;\n    d5 = sdEllipse(uv- p5, vec2(a5, b5));\n    //pupila luz\n    p6 = vec2(2.94, 2.89);  r6 = 0.05;\n    d6 = sdCircle(uv- p6, r6);\n    df = intersectSDF(d1, d2);\n    df = differenceSDF(df, d3);\n    d4 = intersectSDF(df, d4); ////cornea\n    \n    col = DrawFigBorde(vec3(1.0, 1.0, 1.0), col, df);\n    col = DrawFigBorde(vec3(33.0 / 255.0, 141.0 / 255.0, 192.0 / 255.0), col, d4);\n    col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, d5);\n    col = DrawFigBorde(vec3(1.0, 1.0, 1.0), col, d6);\n    return  col;\n}\n\nvec3 ojoDer(vec2 uv, vec3 col)\n{\nfloat d1,d2,d3,d4,d5,d6,df;\nvec2 p1,p2,p3,p4,p5, p6;\nfloat r1,r2,r3,r4,r5,r6;\nfloat a1,a2,a3,a4,a5; \nfloat b1,b2,b3,b4,b5;\n\n//----ojo derecho  bulma;\n//Union;\np1 = vec2(3.715, 2.77);  a1 = 0.185;  b1 = 0.32;\np2 = vec2(3.715, 2.75);  a2 = 0.185;  b2 = 0.37;\n//diferencia;\np3 = vec2(3.71, 2.17);  r3 = 0.5;\n    d1 = sdEllipse(uv- p1, vec2(a1, b1));\n    d2 = sdEllipse(uv- p2, vec2(a2, b2));\n    d3 = sdCircle(uv- p3, r3);\n    //der;\n    p4 = vec2(3.625, 2.805);  a4 = 0.135;  b4 = 0.195;\n    d4 = sdEllipse(uv- p4, vec2(a4, b4));\n    //pupila;\n    p5 = vec2(3.62, 2.87);  a5 = 0.06; b5 = 0.12;\n    d5 = sdEllipse(uv- p5, vec2(a5, b5));\n    //pupila luz;\n    p6 = vec2(3.61, 2.92);  r6 = 0.05;\n    d6 = sdCircle(uv- p6, r6);\n    //df = intersectSDF(d1, d2);\n    df = unionSDF(d1, d2);\n    df = differenceSDF(df, d3);\n    d4 = intersectSDF(df, d4); ////cornea;\n    col = DrawFigBorde(vec3(1.0, 1.0, 1.0), col, df);\n    col = DrawFigBorde(vec3(33.0 / 255.0, 141.0 / 255.0, 192.0 / 255.0), col, d4);\n    col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, d5);\n    col = DrawFigBorde(vec3(1.0, 1.0, 1.0), col, d6);\n\n    return  col;\n}\n\nvec3 PestanasIzq(vec2 uv,vec3 col)\n{\nvec2 lA1,lA2;\nvec2 lB1,lB2;\nvec2 lC1,lC2 ;\nfloat d1, d2,d3;\n    lA1 = vec2(2.65, 2.89);  lA2 = vec2(2.75, 2.86);\n    lB1 = vec2(2.67, 2.79);  lB2 = vec2(2.77, 2.76);\n    lC1 = vec2(2.68, 2.62);  lC2 = vec2(2.78, 2.64);\n    d1 = sdSegment(uv, lA1, lA2);\n    d2 = sdSegment(uv, lB1, lB2);\n    d3 = sdSegment(uv, lC1, lC2);\n    \n    col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, d1);\n    col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, d2);\n    col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, d3);\n    return col;\n}\n\nvec3 PestanasDer(vec2 uv,vec3 col)\n{\nvec2 lA1,lA2;\nvec2 lB1,lB2;\nvec2 lC1,lC2 ;\nfloat d1, d2,d3;\n    lA1 = vec2(3.85, 2.94);  lA2 = vec2(3.95, 3.01);\n    lB1 = vec2(3.88, 2.89);  lB2 = vec2(3.98, 2.92);\n    lC1 = vec2(3.88, 2.81);  lC2 = vec2(3.98, 2.83);\n    d1 = sdSegment(uv, lA1, lA2);\n    d2 = sdSegment(uv, lB1, lB2);\n    d3 = sdSegment(uv, lC1, lC2);\n    col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, d1);\n    col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, d2);\n    col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, d3);\n    return col;\n}\n\nvec3 nariz(vec2 uv ,vec3 col)\n{\nvec2 lA1,lA2;\nvec2 lB1,lB2;\nvec2 lC1,lC2 ;\nfloat d1, d2,d3;\n    \n    lA1 = vec2(3.06, 2.48);  lA2 = vec2(3.16, 2.46);\n    lB1 = vec2(3.06, 2.48);  lB2 = vec2(3.16, 2.41);\n    lC1 = vec2(3.11, 2.48);  lC2 = vec2(3.21, 2.61);\n    d1 = sdSegment(uv, lA1, lA2);\n    d2 = sdSegment(uv, lB1, lB2);\n    d3 = sdSegment(uv, lC1, lC2);\n    col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, d1);\n    col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, d2);\n    col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, d3);\n    return col;\n}\n\nvec3  Pelo(vec2 uv,vec3 col )\n{\nfloat d1,d2,d3,d4,d5,d6,d7,d8,d9,d10,df;\nvec2 p1,p2,p3,p4,p5, p6,p7,p8,p9,p10;\nfloat r1,r2,r3,r4,r5,r6,r7,r8,r9,r10;\nfloat a1,a2,a3,a4,a5; \nfloat b1,b2,b3,b4,b5;\n\np1 = vec2(3.51, 3.26);  r1 = 1.3;\np2 = vec2(3.57, 3.12);  r2 = 0.6;\np3 = vec2(3.24, 2.73);  r3 = 0.75;\np4 = vec2(3.42, 2.72);  r4 = 0.85;\np5 = vec2(2.71, 2.83);  r5 = 0.3;\n\n////union p1 y p2;\n//diferencia con p3 y otra diferencia con lo demas;\np6 = vec2(3.29, 4.22);  r6 = 0.4;\np7 = vec2(4.01, 4.18);  r7 = 0.35;\np8 = vec2(3.66, 4.52);  r8 = 0.35;\n    d1 = sdCircle(uv- p1, r1);\n    d2 = sdCircle(uv- p2, r2);\n    d3 = sdCircle(uv- p3, r3);\n    d4 = sdCircle(uv- p4, r4);\n    d5 = sdCircle(uv- p5, r5);\n    d6 = sdCircle(uv- p6, r6);\n    d7 = sdCircle(uv- p7, r7);\n    d8 = sdCircle(uv- p8, r8);\n    df = differenceSDF(d1, d2);\n    df = differenceSDF(df, d3);\n    df = differenceSDF(df, d4);\n    df = unionSDF(df, d5);\n    d6 = unionSDF(d6, d7);\n    d6 = differenceSDF(d8, d6);\n    df = differenceSDF(df, d6);\n    col = DrawFigBorde(vec3(70.0 / 255.0, 151.0 / 255.0, 205.0 / 255.0), col, df);\n    \n    return col;\n}\n\n\nvec3 OrejaIzq(vec2 uv,vec3 col)\n{\nfloat d1,d2,d3,d4,d5,d6,df;\nvec2 p1,p2,p3,p4,p5, p6;\nfloat r1,r2,r3,r4,r5,r6;\nfloat a1,a2,a3,a4,a5; \nfloat b1,b2,b3,b4,b5;\n\np1 = vec2(0.72, 3.37);  r1 = 0.25;\np2 = vec2(0.88, 3.32);  r2 = 0.25;\np3 = vec2(0.72, 3.65);  r3 = 0.2;\np4 = vec2(0.475, 3.885);  r4 = 0.175;\np5 = vec2(0.64, 3.93);  r5 = 0.2;\n    d1 = sdCircle(uv- p1, r1);\n    d2 = sdCircle(uv- p2, r2);\n    d3 = sdCircle(uv- p3, r3);\n    d4 = sdCircle(uv- p4, r4);\n    d5 = sdCircle(uv- p5, r5);\n    df = unionSDF(d1, d2);\n    df = unionSDF(df, d3);\n    df = unionSDF(df, d4);\n    df = unionSDF(df, d5);\n    col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, df);\n    return col;\n}\n\n\nvec3 Boca(vec2 uv,vec3 col)\n{\nfloat d1,d2,d3,d4,d5,d6,df;\nvec2 p1,p2,p3,p4,p5, p6;\nfloat r1,r2,r3,r4,r5,r6;\nfloat a1,a2,a3,a4,a5; \nfloat b1,b2,b3,b4,b5;\n////-----boca diferenica;\np1 = vec2(3.23, 2.8);  r1 = 0.5;\np2 = vec2(3.345, 2.34);  a1 = 0.185;  b1 = 0.32;\np3 = vec2(3.4, 2.23);  r3 = 0.2;\n    d1 = sdCircle(uv- p1, r1);\n    d2 = sdEllipse(uv- p2, vec2(a1, b1));\n    d3 = sdCircle(uv- p3, r3);\n    df = differenceSDF(d2, d1);\n    d3 = intersectSDF(df, d3);\n    col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, df);\n    col = DrawFigBorde(vec3(210.0/255.0, 136.0/255., 110.0/255.), col, d3);\n    return col;\n}\n\nvec3 Cabeza(vec2 uv,vec3 col)\n{\nfloat d1,d2,d3,d4,d5,d6,d7,d8,d9,d10,d11,d12,d13,d14,d15,d16,df;\nvec2 p1,p2,p3,p4,p5, p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16;\nfloat r1,r2,r3,r4,r5,r6,r7,r8,r9,r10;\nfloat a1,a2,a3,a4,a5,a6,a7,a8,a9,a10; \nfloat b1,b2,b3,b4,b5,b6,b7,b8,b9,b10;\nvec2 p17,p18;\n\nfloat a11,a12,a13,a14,a15,a16,a17;\nfloat b11,b12,b13,b14,b15,b16,b17;\n\np1 = vec2(3.45, 2.69);  r1 = 0.8;\np2 = vec2(3.23, 2.44);  r2 = 0.55;\np3 = vec2(3.54, 2.44);  r3 = 0.6;\np4 = vec2(3.43, 2.21);  r4 = 0.45;\np5 = vec2(3.43, 3.04);  r5 = 0.85;\np6 = vec2(3.39, 2.34);  a6 = 0.36;  b6 = 0.57;\n////diferencia rostro;\np7 = vec2(3.705, 1.715);  a7 = 0.335;  b7 = 0.645;\n    d1 = sdCircle(uv- p1, r1);\n    d2 = sdCircle(uv- p2, r2);\n    d3 = sdCircle(uv- p3, r3);\n    d4 = sdCircle(uv- p4, r4);\n    d5 = sdCircle(uv- p5, r5);\n    d6 = sdEllipse(uv- p6, vec2(a6, b6));\n    d7 = sdEllipse(uv- p7, vec2(a7, b7));\n    df = unionSDF(d1, d2);\n    df = unionSDF(df, d3);\n    df = unionSDF(df, d4);\n    df = unionSDF(df, d5);\n    df = unionSDF(df, d6);\n    col = Pelo(uv, col);\n    col = OrejaDer(uv, col);\n    col = DrawFigBorde(vec3(249.0/255.0, 210.0/ 255., 203.0/255.0), col, d7);\n    col = DrawFigBorde(vec3(249.0/255.0, 210.0/ 255., 203.0 /255.0), col, df);\n    col = OjoIzq(uv, col);\n    col = ojoDer(uv, col);\n    col = Boca(uv, col);\n    col = CejaDer(uv, col);\n    col = Cejaizq(uv, col);\n    col = PestanasIzq(uv, col);\n    col = PestanasDer(uv, col);\n    col = nariz(uv, col);\n    ////----diferencia de pelo y union con total;\n    p9 = vec2(3.5, 2.78);  r9 = 1.1;\n    p10 = vec2(3.85, 2.27);  r10 = 1.45;\n    //parte del pelo posterior;\n    d9 = sdCircle(uv- p9, r9);\n    d10 = sdCircle(uv- p10, r10);\n    d9 = differenceSDF(d9, d10);\n    col = DrawFigBorde(vec3(70.0/255.0, 151.0/255.0, 205.0/ 255.0), col, d9);\n    return  col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    uv-=vec2(0.0,-0.5); uv*=4.5;\n   vec3 col =vec3(1.0); \n    uv.x=abs(uv.x)-0.5;\n    col= Cabeza(uv,col);\n    float t=iTime*3.0;\n    vec2 uv1= rotatev2(uv, t);\n    vec2 uv2= rotatev2(uv, -t);\n    col= Cabeza(uv1,col);\n    col= Cabeza(uv2,col);\n  fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float sdEllipse( in vec2 p, in vec2 ab )\n{\n    p = abs(p); if( p.x > p.y ) {p=p.yx;ab=ab.yx;}\n    float l = ab.y*ab.y - ab.x*ab.x;\n    float m = ab.x*p.x/l;      float m2 = m*m; \n    float n = ab.y*p.y/l;      float n2 = n*n; \n    float c = (m2+n2-1.0)/3.0; float c3 = c*c*c;\n    float q = c3 + m2*n2*2.0;\n    float d = c3 + m2*n2;\n    float g = m + m*n2;\n    float co;\n    if( d<0.0 )\n    {\n        float h = acos(q/c3)/3.0;\n        float s = cos(h);\n        float t = sin(h)*sqrt(3.0);\n        float rx = sqrt( -c*(s + t + 2.0) + m2 );\n        float ry = sqrt( -c*(s - t + 2.0) + m2 );\n        co = (ry+sign(l)*rx+abs(g)/(rx*ry)- m)/2.0;\n    }\n    else\n    {\n        float h = 2.0*m*n*sqrt( d );\n        float s = sign(q+h)*pow(abs(q+h), 1.0/3.0);\n        float u = sign(q-h)*pow(abs(q-h), 1.0/3.0);\n        float rx = -s - u - c*4.0 + 2.0*m2;\n        float ry = (s - u)*sqrt(3.0);\n        float rm = sqrt( rx*rx + ry*ry );\n        co = (ry/sqrt(rm-rx)+2.0*g/rm-m)/2.0;\n    }\n    vec2 r = ab * vec2(co, sqrt(1.0-co*co));\n    return length(r-p) * sign(p.y-r.y);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}