{
    "Shader": {
        "info": {
            "date": "1444555782",
            "description": "one more variant of https://www.shadertoy.com/view/ltfXRM <br/><br/>How many different behavior will you count ? :-)",
            "flags": 0,
            "hasliked": 0,
            "id": "MlBSRy",
            "likes": 15,
            "name": "crowded cubes 4",
            "published": 3,
            "tags": [
                "3d",
                "raymarching",
                "short",
                "spheremarching"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1917
        },
        "renderpass": [
            {
                "code": "// using the base ray-marcher of Trisomie21: https://www.shadertoy.com/view/4tfGRB#\n\n#define T iTime\n#define r(v,t) v *= mat2( C = cos((t)*T), S = sin((t)*T), -S, C )\n\nvoid mainImage( out vec4 f, vec2 w ) {\n    f-=f;\n    float C,S,r,rt,r2,x,x1,x2,x3,n;\n    vec4 p = vec4(w,0,1)/iResolution.yyxy-.5, d; p.x-=.4; // init ray \n    r(p.xz,.13); r(p.yz,.2); r(p.xy,.1);   // camera rotations\n    d = p;                                 // ray dir = ray0-vec3(0)\n    p.z += 5.*T;\n   \n    for (float i=1.; i>0.; i-=.01)  \n    {\n        vec4 u = floor(p/8.), t = mod(p, 8.)-4., ta, M,m; // objects id + local frame\n        //r(t.xy,u.x); r(t.xz,u.y); r(t.yz,1.);           // objects rotations\n        u = fract(1234.*sin(78.*(u+u.yzxw)));             // randomize ids\n   \n        r = 1.2;\n        ta = abs(t); M=max(ta,ta.yzxw); m=min(M,M.yzxw);\n        x1 = max(ta.x,M.y)-r;\n        x2 = min(m.x,m.y);\n        x = max(x1,1.1-x2);                     // cube frame\n        rt = cos(3.*T+10.*u.y+23.*u.z);\n        r2 = r*(.5+.4*rt);\n        n = fract(u.x+u.y+u.z);\n        if      (n<.25) x3 = max(ta.x-r2,M.y-r); // growing plate\n        else if (n< .5) x3 = max(ta.x-r,M.y-r2); // growing bar\n        else if (n<.75) {                        // moving plate\n       \t\t     ta.x = abs(t.x-r*rt);  M=max(ta,ta.yzxw);      \n        \t     x3 = max(ta.x-r*.1,M.y-r);\n               }\n        else   { r(t.xy,3.); ta = abs(t); M=max(ta,ta.yzxw);\n                 x3 = max(ta.x-r*.1,M.y-r);      // rotating plate\n               }\n        x = min(x, x3 );\n\n        if(x<.01)  // hit !\n            { f = i*i*(1.+.2*t); break; } // color texture + black fog \n\n        p -= d*x;           // march ray\n     }\n }\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}