{
    "Shader": {
        "info": {
            "date": "1594107491",
            "description": "golfing 1361 char sl2c's  [url]https://shadertoy.com/view/3tBczh[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "tlSyDz",
            "likes": 12,
            "name": "Mellifera I  - golfed ( 465 ch )",
            "published": 3,
            "tags": [
                "circles",
                "hyperbolic",
                "golf",
                "4tweets",
                "horosphere"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 428
        },
        "renderpass": [
            {
                "code": "// golfing 1361 chars  sl2c's https://shadertoy.com/view/3tBczh\n\nvoid mainImage( out vec4 O, vec2 U )\n{    \n    vec2 o = iResolution.xy, e;\n    vec4 f = vec4(1), t = f, k,\n         z = vec4( U+U - o, 0, 1) / o.y / .1;\n         z.z++; o-=o;\n    z *= exp( 2.29 - mod(iTime*.2, 4.58) ); // -8 * log(r)\n    \n    float Z, r; // sqrt(sqrt(3) - sqrt(2))\n    for ( int J,j,i=0; i<84; i++ )\n        J = int[] (3,0,1,2,0,1,2,0,2,1,0,2,1,3) [ j = i%14 ],\n        r = .564, e = 1.414 * sin( 1.047 * vec2(j%6-1) + vec2(1.57,0) ),\n        z -= k = vec4(  j<1  ?            o\n                      : j>12 ? r = -1./r, o\n                      : j>6  ? r =  1./r,-e.yx\n                      :                   e   \n                      , o ) *r,\n        Z = dot(z,z) / r ,\n        Z < r ? Z = r*r/Z, z *= Z/r , r : f[J] *= -1.,\n        t[J] = min( t[J], .5* ( Z - r ) / z.w ),\n        z += k;\n    t*= f;                    // Col0        Col1   Col2\n // O = sqrt( .5 + t.w * mat4( .25,o,    o,  .3,o, -.13*z/z ,o,o) * t );\n    O = sqrt( .5 + t.w * mat4( .25,o,o.x,o.y,.3,o, -.13*z/z ,o,o) * t );\n} /*\n\n\n\n\n\n\n// --- 466 chars\n\nvoid mainImage( out vec4 O, vec2 U )\n{    \n    vec2 o = iResolution.xy, e;\n    vec4 f = vec4(1), t = f, k,\n         z = vec4( U+U - o, 0, 1) / o.y / .1;\n         z.z++; o-=o;\n    z *= exp( 2.29 - mod(iTime*.2, 4.58) ); // -8 * log(r)\n    \n    float Z, r; // sqrt(sqrt(3) - sqrt(2))\n    for ( int J,j,i=0; i<84; i++ )\n        J = int[] (3,0,1,2,0,1,2,0,2,1,0,2,1,3) [ j = i%14 ],\n        r = .564, e = 1.414 * sin( 1.047 * vec2(j%6-1) + vec2(1.57,0) ),\n        z -= k = vec4(  j<1  ?            o\n                      : j>12 ? r = -1./r, o\n                      : j>6  ? r =  1./r,-e.yx\n                      :                   e   \n                      , o ) *r,\n        Z = dot(z,z) / r / r,\n        r * Z < r ? z *= Z = 1./Z , r : f[J] *= -1.,\n        t[J] = min( t[J], .5* ( r*Z - r ) / z.w ),\n        z += k;\n    t*= f;                    // Col0 Col1   Col2\n    O = sqrt( .5 + t.w * mat4( .25,o,o,.3,o, -.13*z/z ,o,o) * t );\n} /*\n\n\n\n\n\n\n// --- 474 chars\n\nvoid mainImage( out vec4 O, vec2 U )\n{    \n    vec2 o = iResolution.xy, e;\n    vec4 f = vec4(1), t = f, k,\n         z = vec4( U+U - o, 0, 1) / o.y / .1;\n         z.z++; o-=o;\n    z *= exp( 2.29 - mod(iTime*.2, 4.58) ); // -8 * log(r)\n    \n    float Z, b, r = .564; // sqrt(sqrt(3) - sqrt(2))\n    for ( int J,j,i=0; i<84; i++ )\n        J = int[] (3,0,1,2,0,1,2,0,2,1,0,2,1,3) [ j = i%14 ],\n        b = r, e = 1.414 * sin( 1.047 * vec2(j%6-1) + vec2(1.57,0) ),\n        z -= k = vec4(  j<1  ?            o\n                      : j>12 ? b = -1./r, o\n                      : j>6  ? b =  1./r,-e.yx/ r\n                      :                   e   * r\n                      , o ),\n        Z = b*b / dot(z,z),\n        b / Z < b ? z *= Z , r : f[J] *= -1.,\n        t[J] = min( t[J], .5* ( dot(z,z)/b - b ) / z.w ),\n        z += k;\n    t*= f;                    // Col0 Col1   Col2\n    O = sqrt( .5 + t.w * mat4( .25,o,o,.3,o, -.13*z/z ,o,o) * t );\n} /*\n\n\n\n\n\n\n// --- 488 chars\n\nvoid mainImage( out vec4 O, vec2 U )\n{    \n    vec2 R = iResolution.xy, e, c, o=R-R;\n    vec4 f = vec4(1), t = f, k,\n         z = vec4( U+U - R, 0, 1) / R.y / .1;\n         z.z++;\n    z *= exp( 2.29 - mod(iTime*.2, 4.58) ); // -8. * log(r);\n    \n    float Z, b, r = .564; // sqrt(sqrt(3.) - sqrt(2.));\n    for ( int J,j,i=0; i<84; i++ )\n        j = i%14,  b = r,\n        e = 1.414 * cos( 1.047 * vec2(j%6-1) + vec2(0,-1.57) ),\n        c =  j<1  ?            o\n           : j>12 ? b = -1./r, o\n           : j>6  ? b =  1./r,-e.yx/ r\n           :                   e   * r,\n        z -= k = vec4(c,o),\n        Z = dot(z,z),\n        J = int[](3,0,1,2,0,1,2,0,2,1,0,2,1,3) [j],\n        Z*b < b*b*b ? z *= b*b / Z , r : f[J] *= -1.,\n        t[J] = min( t[J], .5* ( dot(z,z)/b - b ) / z.w ),\n        z += k;\n    t*= f;                    // Col0 Col1   Col2\n    O = sqrt( .5 + t.w * mat4( .25,o,o,.3,o, -.13*z/z ,o,o) * t );\n} /*\n\n\n\n\n\n\n// --- 497 chars\n\nvoid mainImage( out vec4 O, vec2 U )\n{    \n    vec2 R = iResolution.xy, e, c, o=R-R;\n    vec4 f = vec4(1), t = f, k,\n         z = vec4( U+U - R, 0, 1) / R.y / .1;\n         z.z++;\n    z *= exp( 2.29 - mod(iTime*.2, 4.58) ); // -8. * log(r);\n    \n    float Z, b, r = .564; // sqrt(sqrt(3.) - sqrt(2.));\n\n    for ( int J,j,i=0; i<84; i++ )\n        j = i%14,\n        e = 1.414 * cos( 1.047 * float(j%6-1) + vec2(0,-1.57) ),\n        c =  j<1  ? b =  r,    o\n           : j>12 ? b = -1./r, o\n           : j<7  ? b =  r,    e   * r\n           :      ( b =  1./r,-e.yx/ r ),\n        z -= k = vec4(c,o),\n        Z = dot(z,z),\n        J = int[](3,0,1,2,0,1,2,0,2,1,0,2,1,3) [j],\n        Z*b < b*b*b ? z *= b*b / Z : ( f[J] *= -1., z ),\n        t[J] = min( t[J], .5* ( dot(z,z)/b - b ) / z.w ),\n        z += k;\n    t*= f;                    // Col0 Col1   Col2\n    O = sqrt( .5 + t.w * mat4( .25,o,o,.3,o, -.13*z/z ,o,o) * t );\n} /*\n\n\n\n\n\n\n// --- 533 chars\n\nvoid mainImage( out vec4 O, vec2 U )\n{    \n    vec2 R = iResolution.xy, e;\n    vec4 f = vec4(1), t = f, k,\n         z = vec4( U+U - R, 0, 1) / R.y / .1;\n         z.z++;\n    z *= exp( 2.29 - mod(iTime*.2, 4.58) ); // -8. * log(r);\n    \n    float Z, b, r = .564; // sqrt(sqrt(3.) - sqrt(2.));\n\n    for ( int J,j,i=0; i<84; i++ ) {\n        j = i%14;\n        e = sqrt(2.) * cos(1.047 * float(j%6-1) + vec2(0,-1.57) );\n        vec3 c = j<1  ? vec3( 0, 0, r )\n                :j>12 ? vec3( 0, 0,-1 ) / r\n                :j<7  ? vec3(  e  , 1 ) * r\n                :       vec3( -e.yx,1 ) / r;\n        z -= k = vec4(c.xy,0,0);\n        b = c.z,  Z = dot(z,z);\n        J = int[](3,0,1,2,0,1,2,0,2,1,0,2,1,3) [j];\n        Z*b < b*b*b ? z *= b*b / Z : ( f[J] *= -1., z );\n        t[J] = min( t[J], .5* ( dot(z,z)/b - b ) / z.w );\n        z += k;\n    }\n\n    O = sqrt( .5 + t[3]*f[3]* mat3x4( .25,z-z,.3,0,0, -.13*z/z ) * (t*f).xyz );\n} /*\n\n\n\n\n\n\n// --- 620 chars\n\n// golfing 1361 chars  sl2c's https://shadertoy.com/view/3tBczh\n\nvoid mainImage( out vec4 O, vec2 U )\n{    \n    vec2 R = iResolution.xy, e;\n    vec4 z = vec4( U+U - R, 0, 1) / R.y / .1;\n         z.z++;\n    z *= exp( 2.29 - mod(iTime*.2, 4.58) ); //  -8. * log(r);\n    \n    float Z=0., r = .564; // sqrt(sqrt(3.) - sqrt(2.));\n    vec3[14] c; \n    c[0] =       vec3( 0, 0, r );\n     for (int i=0; i<6; i++)\n        e = sqrt(2.) * cos(1.047 * Z++ + vec2(0,-1.57) ),\n        c[i+1] = vec3( e   , 1 ) * r,\n        c[i+7] = vec3(-e.yx, 1 ) / r;\n    c[13] =      vec3( 0, 0,-1 ) / r;         \n\t\n    vec4 f = vec4(1), t = f, k;\n    for ( int J,j=0; j<84; j++ )\n            z -= k = vec4(c[j%14].xy,0,0),\n            r = c[ j%14 ].z,  Z = dot(z,z),\n            J = int[](3,0,1,2,0,1,2,0,2,1,0,2,1,3) [ j%14 ],\n            Z*r < r*r*r ? z *= r*r / Z : ( f[J] *= -1., z ),\n            t[J] = min( t[J], .5* ( dot(z,z)/r - r ) / z.w ),\n            z += k;\n    O-=O;\n    for ( int i=0; i<3; i++ )\n        O +=   mat3x4( .25,0,0,0,  0,.3,0,0, vec4(-.13) ) [i] \n             * t[i]*f[i];\n\n    O = pow( .5 + t[3]*f[3]* O, vec4(1./2.2) );\n}\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}