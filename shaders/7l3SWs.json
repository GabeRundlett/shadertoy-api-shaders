{
    "Shader": {
        "info": {
            "date": "1639979270",
            "description": "testing texture mapping with more complex shapes.\n12/20/2021 - fixed lighing a bit",
            "flags": 0,
            "hasliked": 0,
            "id": "7l3SWs",
            "likes": 8,
            "name": "texture_lighting_test",
            "published": 3,
            "tags": [
                "sdf",
                "texture",
                "lighting",
                "wood"
            ],
            "usePreview": 0,
            "username": "lambmeow",
            "viewed": 297
        },
        "renderpass": [
            {
                "code": "mat2 rot(float a) { \n    float ca = cos(a), sa = sin(a);\n    return mat2(ca, -sa, sa, ca);\n}\n\nvec2 ss(vec3 p, vec3 l)\n{\n    //p.x = abs(p.x);\n    float sph = length(p - l) - 0.2;\n    p.x = sin(p.x );\n    p.y = abs(sin(p.y));\n    p.x = mod(p.x + 2.25, 4.5) - 2.25;\n    \n   \n    for(int i = 0; i < 3; i ++)\n    {\n        p.xy *= rot(p.y + iTime + float(i) * 0.5);\n    }\n    p.yz += 0.30 * sin(iTime * 2. + p.z);\n\n   float res = min(length(p.xy) - .75, sph);\n   return vec2(res, res == sph);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 r = iResolution.xy, uv= (2. * fragCoord.xy - r)/r.y;\n    vec3 pos = vec3(0), \n    ro = vec3(3.141529/2. + sin(iTime  + 0.5) * 0.5, \n    11. + cos(iTime + 0.4) *0.25, \n    iTime * 1.5), \n    rd = normalize(vec3(uv, 2.));\n    rd.xy *= rot(iTime * 0.25);\n    float ll = 0.;\n    vec3 lpos = ro + vec3(sin(iTime + 3.5235) * 0.5 + 1., cos(iTime) * 0.53, 3);\n    vec2 dd = vec2(0);\n    float cc = 100.;\n    for(int i = 0; i < 255; i ++)\n    {\n        pos = ro + rd * ll;  \n        dd = abs(ss(pos, lpos));\n        ll += dd.x;\n        cc = min(cc, length(pos - lpos) - 1.);\n        \n        if ( ll > 100. || dd.x < 0.001) break;   \n    }\n    if(dd.y == 1.)\n        fragColor = vec4(1);\n    else if(ll > 100.)\n        fragColor =  vec4(0);\n    else\n    {\n        \n    vec3 n = vec3(0);\n    for(int i = 0; i < 4; i++)\n    {\n        vec3 eps = 0.001 * (vec3(9 >> i&1, i >> 1 & 1, i & 1) * 2. - 1.);\n        n += eps * ss(pos + eps, lpos).x;\n    }\n    \n    n = normalize(n);\n    \n    float x = mod(pos.x + 1.5, 3.) - 1.5; \n    vec3 lv = lpos - pos; \n    float d = length(lv),ndl = max(dot(normalize(lv) , n), 0.0) , a =1./(1. + d * 0.1 + d * d * 0.025);\n    \n    vec4 color = texture(iChannel0, vec2(atan(pos.y/x) , pos.z));\n    fragColor = vec4(ndl) * color;\n    fragColor += vec4(max(pow(dot(n, normalize(n + normalize(lv))), 200.),0.) ) * (color.r+ color.g + color.z)/7.;\n    fragColor *= max(1./(1.+cc),0.);\n    fragColor *= a;\n    \n    \n\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}