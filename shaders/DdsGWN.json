{
    "Shader": {
        "info": {
            "date": "1666159450",
            "description": "Yet another fractal mosaic pattern.",
            "flags": 8,
            "hasliked": 0,
            "id": "DdsGWN",
            "likes": 4,
            "name": "Fractal mosaic 23 (music)",
            "published": 3,
            "tags": [
                "fractal",
                "music",
                "mosaic",
                "rug"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 226
        },
        "renderpass": [
            {
                "code": "vec2 triangle_wave(vec2 a){\n    vec2 a2 =\n        vec2(1.,0.5)\n    ,\n    \n    a1 = a-a2;\n    return abs(fract((a1)*(a2.x+a2.y))-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 8.*8.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    if(iMouse.z>.5)\n    uv = uv.xy + iMouse.xy / iResolution.xy/t1;\n    float scale = 1.5;\n    vec2 t2 = vec2(0.);\n    bool t3 = true;\n    for(int k = 0; k < 9; k++){\n        t3 = uv.y > uv.x || !t3;\n        uv =\n            abs(.5+uv+t2*fmod(uv.x+t2.x,2.))  \n        ;\n        t2 =\n            -triangle_wave(uv-.5)\n        ;\n        uv = t2-triangle_wave(uv.yx);\n        float c1 =\n            (uv.x-uv.y)\n        ;\n        col = col.yzx;\n        vec3 col1 = col;\n        if(t3) col1 = abs(col.yzx-vec3(col.yz,c1));\n        if(!t3 || uv.y < uv.x) col1 = abs(col1-max(col,vec3(col.yz,c1)));\n        col = col1;\n    }\n    fragColor = vec4(min(col*2.,vec3(1.)),1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec2 mainSound(int samp, float time){\n  float tempo = 1.;\n  time /= tempo;\n  float m4 =\n      fmod(time*8.,2.)\n      //fmod(floor(time*2.)*floor(time*2.)/4.,2.)\n  ,\n  t=\n      time/(1.+m4)\n  ,\n  m1 =\n      fmod(t,8.)\n  ,\n  m3 =\n      fmod(t/(m1+.5),8./(1.+fmod(t*8.,2.)));\n      //fmod(t/(m1+.5),8./(1.+fmod(t*8.*floor(t),2.)))\n  ;\n  \n  //t /= (1.+fmod(floor(t*2.+1.)*floor(t+1.),2.))/(1.+fmod(floor(t*2.)*floor(t*4.+1.),2.));\n\n  float a = 64.*sqrt((1.-sqrt(fract(t))))*.2,\n  \n  nb = time*tempo*pow(2.,(m3+m1+1.)/5.+6.5);\n\n  return abs(.5-vec2(fract(nb*.998)\n   ,fract(nb)))*a;\n\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            },
            {
                "code": "#define fmod(x,y) mod(floor(x),y)\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}