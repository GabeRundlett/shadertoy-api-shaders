{
    "Shader": {
        "info": {
            "date": "1375812626",
            "description": "mouse works",
            "flags": 0,
            "hasliked": 0,
            "id": "4sl3RX",
            "likes": 37,
            "name": "infinite fall",
            "published": 3,
            "tags": [
                "procedural"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 3024
        },
        "renderpass": [
            {
                "code": "//--- infinite fall --- Fabrice NEYRET  august 2013\n\n#define SPEED 1.5\n#define SHAKE 3.\n#define ROTATE 1.\n\n#define Pi 3.1415927\n\n// --- base noise\nfloat tex(vec2 uv, float va) \n{\n\tfloat n = texture(iChannel0,uv).r;\n\t//n = .5+.5*cos(2.*Pi*(n-.1*va*t));\n\t//float n2 = texture(iChannel0,uv+1./512.).r;\n\t//n=.5+.5*cos(va*t+atan(2.*n2-1.,2.*n-1.));\n\t//float n2 = texture(iChannel0,uv+.5).r;\n\t//n = mix(n,n2,.5+.5*cos(va*t));\n\t\n#define MODE 3  // kind of noise texture\n#if MODE==0\n\t#define A 2.\n\treturn n;\n#elif MODE==1\n\t#define A 3.\n\treturn 2.*n-1.;\n#elif MODE==2\n\t#define A 3.\n\treturn abs(2.*n-1.);\n#elif MODE==3\n\t#define A 1.5\n\treturn 1.-abs(2.*n-1.);\n#endif\n}\n\n\n// --- infinite perlin noise\nfloat noise(vec2 uv, float z)\n{\n\tfloat v=0.,p=0.;\n\tfloat co=cos(1.7),si=sin(1.7); mat2 M = mat2(co,-si,si,co);\n\tconst int L = 20;\n\tfor (int i=0; i<L; i++)\n\t{\n\t\tfloat k = float(i)-z;\n\t\tfloat a =  (.5-.5*cos(2.*Pi*k/float(L)));\n\t\tfloat s = pow(2., fract(k/float(L))*float(L));\n\t\tv += a/s* tex(.001*(M*uv)*s,k); M *=M;\n\t\tp += a/s;\n\t}\n\t\n    return A*v/p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat t = SPEED*iTime;\n\tvec2 uv = fragCoord.xy / iResolution.y-vec2(.8,.5);\n\n\tvec2 mouse=vec2(0.);\n\tif (iMouse.x>0.) mouse = iMouse.xy/ iResolution.y-vec2(.8,.5);\n\t\n\tuv.x += SHAKE/100.*pow(texture(iChannel0,vec2(t,.5)).r,4.);\n\n\tfloat va = ROTATE; // mouse.x;\n\tfloat co=cos(va*t),si=sin(va*t);uv = mat2(co,-si,si,co)*uv;\n\n\t// uv *= pow(8.,mouse.y);\n\tuv -= 4.*mouse;\n\t\n\n    // terrain and normals\n\tfloat v,vx,vy;\n\tvec2 eps = vec2(1./256.,0.);\n\tv = noise(uv,t); \n\tvec2 N = (vec2(noise(uv+eps.xy,t), noise(uv+eps.yx,t))-v)*256.;\n\n\t\n\t// shading\n\t\n\tvec2 LUM = vec2(.2,.8);\n\tfloat lum = clamp(max(.1,dot(N,LUM)),0.,1.);\n\n\t//v = smoothstep(.2,.9,v/2.);\n\tv = pow(v,3.);\n\t//v *= 2.;\n\tvec3 col = vec3(v,v/2.,v/4.)*lum;\n\t\n\tfragColor = vec4(col,1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}