{
    "Shader": {
        "info": {
            "date": "1676361941",
            "description": "Same idea as the last one, jazzed up with some color, which brings out the depth effect even more. I tried to apply the same tricks that FabriceNeyret2 found in this shader's fork parent, but I probably missed something.",
            "flags": 0,
            "hasliked": 0,
            "id": "ctSXz3",
            "likes": 8,
            "name": "Apparent Depth (color) (494 ch)",
            "published": 3,
            "tags": [
                "2d",
                "illusion",
                "hexagon",
                "depth",
                "tiling",
                "hex",
                "hexagons",
                "tiles",
                "codegolf"
            ],
            "usePreview": 0,
            "username": "fenix",
            "viewed": 267
        },
        "renderpass": [
            {
                "code": "// ---------------------------------------------------------------------------------------\n// Created by fenix in 2023\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//\n//   Same idea as the last one, jazzed up with some color, which brings out the depth\n//   effect even more. I tried to apply the same tricks that FabriceNeyret2 found in\n//   this shader's fork parent, but I probably missed something.\n//\n// ---------------------------------------------------------------------------------------\n\n// My attempt to apply FabriceNeyret2's changes from fork parent: 494 chars\n//*\n#define n(X) fract(dot(sin(X+i), sin(X+i)))                 //\n#define r(X) sin(.523 * vec2(X+1, X+4) )                    //\n#define c(X) (X + u - (length(a = mod(X + u, h + h) - h) <  \\\n                      length(b = mod(X + u - h, h + h) - h) \\\n                      ? a : b))                             //\n#define o(X) max(0., max(0., dot(X, u - c())) *    \\\n                     mix(n(c(X) -1.) - n(c() -1.), \\\n                         n(c(X)    ) - n(c()    ), \\\n                         pow(fract(t), 7.)))       //\n#define M(h,v,w) max( o(r(w)), max( o(r(w+v)), o(r(w-v)) ) /2. )\n               \nvoid mainImage(out vec4 O, vec2 u)\n{\n    u *= 9. / iResolution.y;\n    \n    float t = iTime * .2, i = ceil(t);\n    vec2 h = r(), a, b;\n    \n    O = O * 0.\n        + (.4 - M(h,2,) + M(-h,4,) * .4) * vec4(1, .1, 1, 1)\n        + (.4 - M(h,2,-2) + M(-h,4,-2) * .4) * vec4(.1, 1, 1, 1);\n}\n/**/\n\n// Original: 577 chars\n/*\n#define n(X) fract(dot(sin(X), sin(X)))\n#define r(X) sin(.523 * (X + vec2(1, 4)))\n#define c(X) (X - (length(a = mod(X    , h + h) - h) < \\\n                   length(b = mod(X - h, h + h) - h) \\\n                   ? a : b))\n#define o(X) max(0., max(0., dot(X, u - c(u))) * \\\n                     mix(n(c(u + X) + s.x) - n(d + s.x), \\\n                         n(c(u + X) + s.y) - n(d + s.y), \\\n                         pow(fract(iTime*.2), 7.)))\n               \nvoid mainImage(out vec4 O, vec2 u)\n{\n    u *= 9. / iResolution.y;\n    \n    vec2 h = r(0.),\n         s = trunc(iTime * .2 + vec2(0, 1)),\n         a, b, d = c(u);\n    \n    O = O * 0.\n        + (.4\n        + max(max(o(-h) * 2., o(r(4.))), o(r(-4.))) * .2\n        - max(max(o(h) * 2., o(r(2.))), o(r(-2.))) * .5) * vec4(1, .1, 1, 1)\n        + (.4\n        + max(max(o(-h), o(r(4.))) * 2., o(r(2.))) * .2\n        - max(max(o(h), o(r(-4.))), o(r(-2.)) * 2.) * .5) * vec4(.1, 1, 1, 1);\n}\n/**/\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}