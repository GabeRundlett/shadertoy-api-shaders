{
    "Shader": {
        "info": {
            "date": "1649088778",
            "description": "When they want to pad the meter.",
            "flags": 40,
            "hasliked": 0,
            "id": "7ljyRz",
            "likes": 11,
            "name": "Taxi Spirals",
            "published": 3,
            "tags": [
                "taxidistance"
            ],
            "usePreview": 0,
            "username": "eiffie",
            "viewed": 294
        },
        "renderpass": [
            {
                "code": "//Taxi Spirals by eiffie \n//Similar to euler spirals but with taxi rotation and a weird angle formula.\n//So yeah not similar to euler spirals much.\n#define time iTime\n#define rez iResolution.xy\n\nvoid mainImage(out vec4 O, in vec2 U){\n  O=texture(iChannel0,U/rez.xy)\n   +texture(iChannel0,(U/rez.xy)/(.1+iTime*.5)-vec2(sin(iTime)*.1+.5,iTime))*iTime*.002;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//choose a trig based on the definition of length\n#define TAXICAB\n#ifdef EUCLIDEAN\n #define Pi 3.14159263\n #define dSin cos\n#endif\n#ifdef TAXICAB\n #define Pi (2.0*SQRT2)\n #define dSin t_dSin\n#endif\n#ifdef STOPSIGN\n #define Pi 4\n #define dSin o_dSin\n#endif\n//DIV is the divisor of the delta where angle+=delta*step*2pi, the numerator is animated\n#define DIV 500\n//PER is the number of line segments to draw per frame\n#define PER 10\n#define rez iResolution.xy\nconst float SQRT2=sqrt(2.);\n//the derivative of sin is the change in y with respect to the angle\nfloat t_dSin(float a){a=mod(a-.5*Pi,2.*Pi);return (a<Pi?-.5:.5);}\nfloat o_dSin(float a){a=floor(mod(a+.5,2.*Pi));return cos(a*.785398);}\nfloat dCos(float a){return dSin(a-Pi/2.);}//the change in x is just a 1/4 turn\nvec4 load(float x, float y){return texture(iChannel0,vec2(x+.5,y+.5)/rez.xy);}\nvec4 cmap(float a){return abs(vec4(sin(a),sin(a+.4),sin(a+1.4),0.));}\nfloat tube(vec2 pa, vec2 ba){return length(pa-ba*clamp(dot(pa,ba)/dot(ba,ba),0.0,1.0));}\nvoid mainImage(out vec4 O, in vec2 U){\n  O=texture(iChannel0,U/rez.xy);\n  U=floor(U);\n  vec4 L=load(0.,0.);\n  int mf=DIV*2,f=(PER*iFrame) % mf;\n  float s=floor(float(iFrame*PER)/float(mf)),q=(s+1.)/float(DIV);\n  if(f==0){//setup new doodles\n    if(iFrame==0)O=vec4(0);\n    if(U.x+U.y==0.){\n      if(iFrame==0)O=vec4(-15.,0.,15.,0.);\n      if(length(O.xy)>20.)L.xy=O.xy=vec2(-15.,0.);else L.y=O.y-=.25;\n      if(length(O.zw)>20.)L.zw=O.zw=vec2(15.,0.);else L.z=O.z-=.25;\n    }\n  }\n  vec2 p1=L.xy,p2=L.zw,nv,u=20.*(2.*U-rez.xy)/rez.y;\n  float a,d1=1.,d2=1.,q2=(s+1.)/float(DIV+2);\n  for(int i=0;i<PER;i++){\n    float n=float(f+i+1);\n    a=Pi*q*.5+2.*Pi*fract((n-1.)*fract(q*(n-.5)));\n    nv=vec2(dSin(a),dCos(a));\n    d1=min(d1,tube(u-p1,nv));\n    p1+=nv;\n    a=Pi*q2*.5+2.*Pi*fract((n-1.)*fract(q2*(n-.5)));\n    nv=vec2(dSin(a),dCos(a));\n    d2=min(d2,tube(u-p2,nv));\n    p2+=nv;\n  }\n  if(U.x+U.y==0.){O=vec4(p1,p2);}//logic pixel\n  else {//draw\n    O*=.995;\n    //O=mix(O,vec4(-.25,0,.25,0),0.005);\n    d1=smoothstep(40./rez.y,0.,d1);d2=smoothstep(40./rez.y,0.,d2);\n    O=mix(O,cmap(s),d1);\n    O=mix(O,cmap(s+.7),d2);\n  }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define pi 3.14159\nint N[8]=int[8](0,3,5,7,5,2,3,0);\nfloat scale(float note){//throws out dissonant tones \n float n2=mod(note,12.); \n if((n2==1.)||(n2==4.)||(n2==6.)||(n2==8.)||(n2==11.))note=-100.;//mixolydian +minor 3rd \n return note; \n}\n// note number to frequency  from https://www.shadertoy.com/view/ldfSW2 \nfloat ntof(int n0){\n float n=scale(float(n0));\n return (n>0.)?440.0 * pow(2.0, (float(n) - 67.0) / 12.0):0.0;\n} \nvec2 rot(vec2 v, float a) {return cos(a)*v+sin(a)*vec2(v.y,-v.x);}\nvec2 I(int n, float t, vec3 p, vec4 e, vec4 d){\n  float bt=t,t2,t3,t4,f=ntof(n);\n  if(f==0.)return vec2(0);\n  t-=t*d.y*sin((d.w*pi+t)*pi*d.z);t3=t*d.x;\n  t2=fract(t*p.y*f);t4=fract(t3*p.y*f);\n  t=fract(t*f);t3=fract(t3*f);\n  float amp=abs(1.+sin(bt*e.z*pi)*e.w)*exp(-bt*e.y)*(1.0-exp(-bt*e.x))*min(1.,100.-bt*100.);\n  return amp*rot(vec2(sin(pow(t,p.x)*pi*2.+pi*2.*p.z*sin(pow(t2,p.x)*pi*2.)),\n    sin(pow(t3,p.x)*pi*2.+pi*2.*p.z*sin(pow(t4,p.x)*pi*2.))),float(n)+bt*pi*2.);\n}\nvec2 Sound(float time, float bps){\n//return vec2(sin(time*500.));\n  float tim=mod(time*bps,256.);\n  float m=pow(fract(fract(tim+.5)*1.125),20.);tim+=sin(m);\n  float bt=floor(tim),t=fract(tim);\n  int n1=N[int(bt/64.)];\n  int n0=n1+N[int(bt/8.)%8],n=n0+N[int(bt)%8],n2=n0+N[int(bt/2.)%8],n4=n0+N[int(bt/4.)%8];\n  vec2 v=I(n+24,t,vec3(1.-t*.5,1.,t),vec4(10.,1.0,12.,t*.3),vec4(1.014,0.005,1.,.5))*.25;\n  t=fract(tim/2.);\n  float fo=pow(1.-t,2.0);\n  v+=I(n2+36,t,vec3(1.-fo*.5,1.5,fo),vec4(10.,4.0,24.,t*.8),vec4(1.014,0.005,1.,.5));\n  \n  t=fract(tim/4.);\n  fo=pow(1.-t,2.0);\n  v+=I(n4+48,t,vec3(1.-fo*.5,1.5,fo),vec4(10.,4.0,36.,t*.8),vec4(1.014,0.005,1.,.5))*.75;\n  v+=I(n4+57,t,vec3(1.-fo*.5,1.5,fo),vec4(10.,4.0,36.,t*.8),vec4(1.014,0.005,1.,.5))*.5;\n  \n  t=fract(tim/8.);\n  fo=pow(1.-t,2.0);\n  v+=I(n0+36,t,vec3(1.-fo*.5,1.5,fo),vec4(10.,2.0,0.,t*.8),vec4(1014.014,0.005,1.,.5));\n  return v*.1;\n}\nvec2 mainSound(int samp, float time){\n  return Sound(time+0.03125,4.)-max(sin(pi*time/64.)*.5+time*.006,0.0)*Sound(time,8.).yx;\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}