{
    "Shader": {
        "info": {
            "date": "1722872593",
            "description": "Taller de Livecoding con visuales en GLSL\n1.2\nEstructura del lenguaje inicial parte 2 \nIntro a creacion de variables.",
            "flags": 0,
            "hasliked": 0,
            "id": "McjyRd",
            "likes": 0,
            "name": "Estructura del lenguaje 1.2",
            "published": 3,
            "tags": [
                "tutorial",
                "shaders",
                "shaders",
                "livecoding",
                "taller",
                "tutoriales"
            ],
            "usePreview": 0,
            "username": "jpupper",
            "viewed": 38
        },
        "renderpass": [
            {
                "code": "\n//Taller de Livecoding con visuales en GLSL\n//1.2\n//Estructura del lenguaje inicial parte 2 \n//Intro a creacion de variables.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n      \n    //También podemos definir nuestras propias variables para colocar          //dentro del vec4 final.\n    \n    //Ejemplo 1 : \n    //descomentar codigo : \n    float red = 0.9;   //Cantidad de rojo \n    float green = 0.3; //Cantidad de verde.\n    float blue = 0.3;  //Cantidad de azul.  \n    //fragColor = vec4(red,green,blue,1.0); \n    \n    //Ejemplo 2 : \n    //Tambien podemos definir una variable vec3 y luego meterla dentro del vec4 obligatorio final : \n    //usemos float , vec2 , vec3 o vec4 las variables son siempre intercambiables.\n    vec3 color = vec3(0.2,0.5,0.4); \n    //fragColor = vec4(color,1.0); \n    \n    \n    //Ejemplo 3 : \n    //También podemos obtener un valor especifico de un vector utilizando el nombre del vector + .r\n    //.r obtiene el primer valor del vector.\n    //.g obtiene el segundo valor del vector.\n    //.b obtiene el tercer valor del vector.\n    //.a obtiene el cuarto valor del vector.\n    \n    //EN ESTE CASO ESTAMOS colocando en el valor R del fragcolor, el valor G de color 2. \n    //De esta manera nosotros podemos decidir que valores entran en que lugar.\n    fragColor = vec4(color.b,color.g,color.r,1.0); \n    \n    //Ejemplo 4 : \n    //Otra manera de obtener los valores individuales de los vectores es utilizando xyzw en vez de rgba\n    //Se suele utilizar xyz cuando nuestros vectores representan puntos en el espacio y no valores de colores.\n    fragColor = vec4(color.x,color.y,color.z,1.0); \n    \n    //Ejemplo 5 : \n    //Otra manera de obtener los valores individuales de los vectores es utilizando los vectores como si \n    //estuvieramos pasandole el indice al array.\n    fragColor = vec4(color[0],color[1],color[2],1.0); \n    \n    \n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}