{
    "Shader": {
        "info": {
            "date": "1702730812",
            "description": "Just a simple audio visualizer that I did primarily to test the inputs.\nBuffer A: Audio processing\nBuffer B: IO\nA/D: Decrease/Increase size\nSet the audio in the Buffer A tab.",
            "flags": 112,
            "hasliked": 0,
            "id": "lfXGzH",
            "likes": 2,
            "name": "Simple buffered audio visualizer",
            "published": 3,
            "tags": [
                "audio",
                "visualizer",
                "buffered"
            ],
            "usePreview": 0,
            "username": "rafa_br34",
            "viewed": 192
        },
        "renderpass": [
            {
                "code": "void mainImage(out vec4 FragColor, in vec2 FragCoord) {\n    FragColor = READP_V4(C_AudioBuffer, FragCoord);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Tracks:\n// https://soundcloud.com/azerkd/balaganazerkd-bootleg-skazi-free-download\n// https://soundcloud.com/nocopyrightsounds/oneeva-platform-9-ncs-release\n// https://soundcloud.com/monstercat/ephixa-dreamstate\n// https://soundcloud.com/alteza-records/whiteno1se-terra-astro-alteza-records\n\n\nvoid mainImage(out vec4 FragColor, in vec2 FragCoord) {\n    if (FragCoord.y <= 1.0) {\n        float Size = mix(512.0, float(RESX), READP_V4(C_DataBuffer, ivec2(1, 1)).x);\n        float X = (FragCoord.x / Size) * 512.0;\n        \n        FragColor = vec4(\n            READP_V4(C_AudioInput, ivec2(X, 0)).x,\n            0.0,\n            READP_V4(C_AudioInput, ivec2(X, 1)).x,\n            1.0\n        );\n    }\n    else {\n        FragColor = READP_V4(C_AudioBuffer, ivec2(FragCoord + vec2(0.0, -1.0)));\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "musicstream",
                        "id": 35518,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/monstercat/ephixa-dreamstate"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define C_AudioBuffer iChannel0\n#define C_DataBuffer iChannel1\n#define C_AudioInput iChannel2\n#define C_Keyboard iChannel3\n\n\n#define RESX uint(iResolution.x)\n#define RESY uint(iResolution.y)\n\n#define FLATTEN_V2(Width, Vector) ((Width) * (Vector).y + (Vector).x)\n\n#define READP_V4(Buffer, Position) texelFetch(Buffer, ivec2(Position), 0)\n#define READP_F32(Buffer, Position) READP_V4(Buffer, ivec2(Position) / 4)[FLATTEN_V2(2, ivec2(Position)) % 4]\n#define READP_U8(Buffer, Position) READP_F32(Buffer, ivec2(Position) / 4)[FLATTEN_V2(2, ivec2(Position)) % 4]\n\n\n#define READI_V4(Buffer, Index) READP_V4(Buffer, ivec2(uint(Index) % RESX, uint(Index) / RESX))\n#define READI_F32(Buffer, Index) READI_V4(Buffer, uint(Index) / 4u)[uint(Index) % 4u]\n#define READI_U8(Buffer, Index) (uint(READI_F32(Buffer, uint(Index) / 4u)) & (0xFFu << ((Index % 4u) * 8u))) >> ((Index % 4u) * 8u)\n\n#define RAND_STATE(Coord) ((RESX * uint(Coord.y) + uint(Coord.x) + 1u) * uint(iFrame))\n\n#define UI8(V) uint(int(V) % 256)\n#define FUI8(V) float(UI8(V)) / 255.0",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "\n\n\nvoid mainImage(out vec4 FragColor, in vec2 FragCoord) {\n    float Size = READP_V4(C_DataBuffer, ivec2(0, 0)).x;\n    \n    // Keycode A\n    if (READP_V4(C_Keyboard, ivec2(65, 0)).x > 0.0 && Size > 0.0) Size -= 0.004;\n    \n    // Keycode D\n    if (READP_V4(C_Keyboard, ivec2(68, 0)).x > 0.0 && Size < 1.0) Size += 0.004;\n    \n    \n    FragColor = vec4(Size, 0.0, 0.0, 0.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 3,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}