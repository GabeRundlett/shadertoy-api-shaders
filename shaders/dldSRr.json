{
    "Shader": {
        "info": {
            "date": "1684981558",
            "description": "vegeta",
            "flags": 0,
            "hasliked": 0,
            "id": "dldSRr",
            "likes": 15,
            "name": "vegeta",
            "published": 3,
            "tags": [
                "vegeta"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 207
        },
        "renderpass": [
            {
                "code": "//por jorge2017a2\n///vegeta \n//24-may-2023-\n//tiene algunas errores la funcion Lineas04, pero no logre encontrar.\n//The Lineas04 function has some bugs, but I couldn't find it.\n//not optimized!!!\n\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(5.0*antialiasing(1.0),b,d)\n#define POLY(N) (in vec2 p, in vec2[N] v) {const int n=v.length();float d=dot(p-v[0],p-v[0]);float s=1.;for(int i=0,j=n-1;i<n;j=i,i++){vec2 e=v[j]-v[i];vec2 w=p-v[i];vec2 b=w-e*clamp(dot(w,e)/dot(e,e),0.,1.);d=min(d,dot(b,b));bvec3 cond=bvec3(p.y>=v[i].y,p.y<v[j].y,e.x*w.y>e.y*w.x);if(all(cond)||all(not(cond))) s=-s;}return s*sqrt(d);}\n#define PI 3.141516\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\ncolOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.001,0.0));\nreturn colOut;\n}\nvec3 DrawFigBordeCoL(vec3 pColObj, vec3 colOut, float distObj , vec3 colBorde )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,colBorde ,S2(abs( distObj)-0.01,0.0));\n  return colOut;\n}\n\nvec3 DrawFigDelgado(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj-0.001,0.0)); return colOut; }\n\n\n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\n///oneshade    \nvec2 Rotate(in vec2 p, in vec2 o, in float r) \n{   float c = cos(r), s = sin(r);\n    return (p - o) * mat2(c, -s, s, c) + o;\n}\n\nfloat sdCircle( vec2 p, float r )\n{return length(p) - r; }\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b; return length(max(d,0.0)) + min(max(d.x,d.y),0.0); }\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\nvec2 pa = p-a, ba = b-a;\nfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\nreturn length( pa - ba*h );\n}\n\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n\n\nfloat sdTrapezoid( in vec2 p, in float r1, float r2, float he )\n{\n    vec2 k1 = vec2(r2,he);\n    vec2 k2 = vec2(r2-r1,2.0*he);\n    p.x = abs(p.x);\n    vec2 ca = vec2(p.x-min(p.x,(p.y<0.0)?r1:r2), abs(p.y)-he);\n    vec2 cb = p - k1 + k2*clamp( dot(k1-p,k2)/dot2(k2), 0.0, 1.0 );\n    float s = (cb.x<0.0 && ca.y<0.0) ? -1.0 : 1.0;\n    return s*sqrt( min(dot2(ca),dot2(cb)) );\n}\n\n\nvec2 p0_; //punto uv\nvec2 pt0; //punto pos0\nfloat DistL;\nvec3 ColL;  //color linea\nvec3 ColO;  //color salida Out\n\nvoid L( vec2 p1)  //Lineto\n{   float l1=sdSegment(p0_, pt0, p1 );\n    DistL=min(DistL,l1);\n    ColO= DrawFigBorde(ColL, ColO,DistL); \n    pt0 = p1;\n}\nvoid SZ(vec2 p ){pt0 = p;DistL=9999.9; }\nvoid M(vec2 p1){pt0 = p1;}  //Moveto\nvoid C(vec3 pcol){ColL=pcol;}  //Set color\n\n\n\nfloat sdPoly9 POLY(9)\nvec2  pt9[9]=vec2[](\nvec2(1.81,1.78),vec2(1.79,1.55),vec2(1.04,0.89),vec2(0.47,0.56),vec2(0.2,0.56),\nvec2(0.03,0.68),vec2(0.02,1.11),vec2(0.37,1.05),vec2(1.81,1.78)  );\n\nfloat sdPoly12 POLY(12)\nvec2  pt12[12]=vec2[](\nvec2(2.39,1.75),vec2(2.68,1.73),vec2(3.86,1.06),vec2(4.64,0.74),vec2(5.01,0.63),\nvec2(5.63,0.55),vec2(5.4,0),vec2(4.52,0.24),vec2(2.55,1.53),vec2(2.31,1.61),\nvec2(2.31,1.61),vec2(2.39,1.75)  );\n\n\nfloat sdPoly10R POLY(10)\nvec2  pt10R[10]=vec2[](\nvec2(0., 0.01), vec2(5.75, 0), vec2(5.73, 4.12), vec2(5.68, 4.17),vec2(1.35, 4.18),\nvec2(1.19, 4.03), vec2(0.78, 2.81), vec2(0.4, 1.91),vec2(0.01, 1.31),vec2(0., 0.01) );\n\n\nfloat sdPoly6a POLY(6)\nvec2  pt6a[6]=vec2[](\nvec2(1.95, 1.85), vec2(1.87, 2.03), vec2(0.93, 1.97), vec2(0.63, 1.55),vec2(0.34, 1.05),\nvec2(1.95, 1.85) );\n\nfloat sdPoly7a POLY(7)\nvec2  pt7a[7]=vec2[](\nvec2(2.9, 1.65),vec2(3.07, 1.85), vec2(3.11, 1.86), vec2(4.67, 1.42), vec2(5.01, 0.64),\n vec2(4.29, 0.86),vec2(2.9, 1.65) );\n\n\n\nvec3 OjosIzqyDer(vec2 p ,vec3 col ) \n{\nfloat sd6;\n\n    sd6 = sdPoly6a(p, pt6a);\n    col = DrawFigBorde(vec3(1.0, 1.0, 1.0), col, sd6);\n\nfloat r1, d1;\nr1 = 0.2;\nfloat t=iTime;\nvec2 posa=vec2(-0.3-0.5*sin(iTime),-0.2*sin(t));\nvec2 posb=vec2(0.5-0.5*sin(iTime),0.2*sin(t));\n\nvec2 p1 = vec2(1.55, 1.63);\nd1 = sdCircle(p- p1-posa, r1);\n//---------;\n    d1 = intersectSDF(sd6, d1);\n    col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, d1);\n\n\n    float sd7 = sdPoly7a(p, pt7a);\n    col = DrawFigBorde(vec3(1.0, 1.0, 1.0), col, sd7);\n    r1 = 0.25;\n    p1 = vec2(3.52, 1.29);\n    d1 = sdCircle(p- p1-posb, r1);\n    d1 = intersectSDF(d1, sd7);\n    col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, d1);\n    \n    return col;\n}\n\nvec3 Rostro(vec2 p ,vec3 col )\n{\nvec3 colc;\n colc = vec3(0.96, 0.73, 0.57);\n    float sd10 = sdPoly10R(p, pt10R);\n    col = DrawFigBorde(colc, col, sd10);\n    return col;\n}\n\nvec3 Lineas01(vec2 p,vec3 col)\n{\nvec2 p1,p2, p3,p4, p5, p6,p7;\nvec2 p8, p9,p10, p11,p12,p13,p14;\n\nColO = col;\np0_ = p;\n\np1 = vec2(2.15, 2.18);p2 = vec2(2.09, 2.59);\np3 = vec2(1.98, 2.9);p4 = vec2(1.85, 3.21);\np5 = vec2(1.71, 3.43);p6 = vec2(1.71, 3.42);\np7 = vec2(1.73, 3.5);p8 = vec2(1.79, 3.55);\np9 = vec2(1.89, 3.58);p10 = vec2(2, 3.56);\np11 = vec2(2, 3.56);p12 = vec2(2, 3.57);\np13 = vec2(2.49, 3.34);p14 = vec2(2.62, 3.31);\n\nSZ(p1);  M(p1); C(vec3(0.0));\nL(p1);  L(p2);L(p3); L(p4); L(p5); L(p6);;\n L(p7);L(p8); L(p9);L(p10); L(p11); L(p12);;\n L(p13); L(p14);;\ncol = ColO;\n    return  col;\n}\n\nvec3 Lineas02(vec2 p ,vec3 col )\n{\nvec2 p1,p2, p3,p4, p5, p6,p7;\np1 = vec2(2, 1.3);\np2 = vec2(2.02, 1.48);\np3 = vec2(2.11, 1.83);\np4 = vec2(2.28, 1.84);\np5 = vec2(2.39, 1.79);\np6 = vec2(2.3, 1.61);\np7 = vec2(2.19, 1.18);\np0_ = p;\nColO = col;\n SZ(p1);  M(p1);  C(vec3(0.0));\n L(p1);  L(p2);  L(p3);  L(p4);  L(p5);  L(p6);  L(p7);;\n////otra linea;\np1 = vec2(1.83, 1.22);\np2 = vec2(1.81, 1.76);\np3 = vec2(2.02, 1.86);\np4 = vec2(2.08, 1.92);\n//ColO = col;\n SZ(p1);  M(p1);  C(vec3(0.0));\n L(p1);  L(p2);  L(p3);  L(p4);;\ncol = ColO;\ncol = ColO;\n    return col;\n}\n\nvec3 Lineas03(vec2 p,vec3 col)\n{\n////lineas debajo de ojo;\nvec2 p1, p2, p3, p4, p5, p6;\n\n\n//linea1;\np1 = vec2(0.97, 2.23);\np2 = vec2(1.29, 2.21);\np3 = vec2(1.58, 2.2);\n\np0_ = p;\nColO = col;\n SZ(p1); M(p1); C(vec3(0.0));\n L(p1); L(p2); L(p3);;\ncol = ColO;\n//linea 2;\np1 = vec2(1.27, 2.27);\np2 = vec2(1.62, 2.23);\np3 = vec2(1.6, 2.27);\np4 = vec2(1.49, 2.27);\np5 = vec2(1.79, 2.26);\np6 = vec2(1.95, 2.29);\np0_ = p;\nColO = col;\n\n\nSZ(p1); M(p1); C(vec3(0.0));\nL(p1); L(p2); L(p3); L(p4);  L(p5);  L(p6);;\ncol = ColO;\n\n//Linea 3;\np1 = vec2(2.41, 2.26);\np2 = vec2(2.57, 2.12);\np3 = vec2(2.61, 2.14);\np0_ = p;\nColO = col;\nSZ(p1); M(p1); C(vec3(0.0));\n L(p1); L(p2); L(p3);;\ncol = ColO;\n////Linea 4;\np1 = vec2(2.85, 1.98);\np2 = vec2(2.77, 2.13);\np3 = vec2(2.97, 2.24);\np4 = vec2(3.23, 2.09);\np5 = vec2(3.66, 1.88);\np0_ = p;\nColO = col;\n SZ(p1);  M(p1);  C(vec3(0.0));\n L(p1); L(p2); L(p3); L(p4); L(p5);;\ncol = ColO;\n////linea 5;\np1 = vec2(3.24, 2.11);\np2 = vec2(3.66, 1.91);\np3 = vec2(3.67, 1.91);\np4 = vec2(4.19, 1.76);\np0_ = p;\nColO = col;\nSZ(p1);  M(p1);  C(vec3(0.0));\n L(p1);  L(p2);  L(p3);  L(p4);;\ncol = ColO;\n\n//linea 6;\np1 = vec2(3.47, 2.06);\np2 = vec2(4, 1.85);\np3 = vec2(4.6, 1.73);\np0_ = p;\nColO = col;\n SZ(p1);  M(p1);  C(vec3(0.0));\n L(p1);  L(p2);  L(p3);;\ncol = ColO;\n\n//linea 7;\np1 = vec2(3.94, 1.93);\np2 = vec2(4.55, 1.8);\np3 = vec2(4.98, 1.72);\np4 = vec2(5.33, 1.7);\np0_ = p;\nColO = col;\n SZ(p1);  M(p1);  C(vec3(0.0));\n L(p1);  L(p2);  L(p3);  L(p4);;\ncol = ColO;\n\n    return col;\n}\n\n\n\nvec3 Lineas04(vec2 pp,vec3 col )\n{\nvec2 p1, p2, p3, p4, p5, p6;\nvec2 p=pp;\n//linea 1;\np1 = vec2(1.78, 0.86);\np2 = vec2(1.63, 0.62);\np3 = vec2(1.47, 0.44);\np4 = vec2(1.34, 0.35);\np0_ = p;\nColO = col;\nSZ(p1); M(p1);C(vec3(0.0));\nL(p1);L(p2);L(p3);L(p4);\ncol = ColO;\n \n\n//linea 2;\np1 = vec2(2.41, 0.92);\np2 = vec2(2.92, 0.23);\np3 = vec2(2.69, 0.61);\np4 = vec2(3.18, 0.13);\n\np0_ = p;\nColO = col;\nSZ(p1);M(p1);C(vec3(0.0));\nL(p1);L(p2);L(p3);L(p4);\ncol = ColO;\n\n//linea 4;\np1 = vec2(2.41, 2.28);\np2 = vec2(2.54, 2.14);\np3 = vec2(2.6, 2.14);\n\np0_ = p;\nColO = col;\nSZ(p1);M(p1);C(vec3(0.0));\nL(p1);L(p2);L(p3);\ncol = ColO;\n\n\n////linea 5;\np1 = vec2(2.35, 3.78);\np2 = vec2(2.53, 3.82);\np3 = vec2(2.88, 3.67);\np4 = vec2(3.25, 3.65);\np5 = vec2(3.24, 3.65);\np6 = vec2(3.35, 3.68);\n\np0_ = p;\nColO = col;\nSZ(p1); M(p1);C(vec3(0.0));\nL(p1);L(p2);L(p3);L(p4);L(p5);L(p6);\ncol = ColO;\n\n\n//linea 6;\np1 = vec2(3.63, 3.53);\np2 = vec2(3.76, 3.7);\np3 = vec2(3.74, 3.92);\n\np0_=p;\nColO = col;\nSZ(p1); M(p1);C(vec3(0.0));\nL(p1); L(p2);L(p3);\ncol = ColO;\n\n\n//linea 7;\np1 = vec2(2.66, 4.16);\np2 = vec2(2.95, 4.08);\np3 = vec2(3.23, 4.23);\np4 = vec2(2.92, 4.13);\np5 = vec2(2.85, 4.13);\np6 = vec2(3.11, 4.25);\n\np0_= p;\nColO = col;\n SZ(p1);M(p1);C(vec3(0.0));\n L(p1);L(p2);L(p3);L(p4);L(p5);L(p6);\ncol = ColO;\n//-----;\n    return col;\n}\n\nvec3 CejaIzq(vec2 p ,vec3 col) \n{\n   float sd9;\n   sd9 = sdPoly9(p, pt9);\n   col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, sd9);\n    return col;\n}\n\nvec3 CejaDer(vec2 p ,vec3  col )\n{   float sd12 = sdPoly12(p, pt12);    \n    col = DrawFigBorde(vec3(0.0, 0.0, 0.0), col, sd12);\n    return col;\n}\n\nvec3 Vegeta(vec2 uv)\n{  vec3 col = vec3(0.19, 0.64, 0.37);\n    col = Rostro(uv, col);\n    col = OjosIzqyDer(uv, col);\n    col = Lineas01(uv, col);\n    col = Lineas02(uv, col);\n    col = Lineas03(uv, col);\n    col=(col+ Lineas04(uv, col))/2.0;   //bug\n    col = CejaIzq(uv, col);\n    col = CejaDer(uv, col);\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    DistL=9999.9;\n    uv*=2.1;\n    uv.y=2.1-uv.y;\n    uv.x+=1.6;\n    vec3 col=Vegeta(uv);\n    fragColor = vec4(col,1.0);\n}\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float sdEllipse( in vec2 p, in vec2 ab )\n{\n    p = abs(p); if( p.x > p.y ) {p=p.yx;ab=ab.yx;}\n    float l = ab.y*ab.y - ab.x*ab.x;\n    float m = ab.x*p.x/l;      float m2 = m*m; \n    float n = ab.y*p.y/l;      float n2 = n*n; \n    float c = (m2+n2-1.0)/3.0; float c3 = c*c*c;\n    float q = c3 + m2*n2*2.0;\n    float d = c3 + m2*n2;\n    float g = m + m*n2;\n    float co;\n    if( d<0.0 )\n    {\n        float h = acos(q/c3)/3.0;\n        float s = cos(h);\n        float t = sin(h)*sqrt(3.0);\n        float rx = sqrt( -c*(s + t + 2.0) + m2 );\n        float ry = sqrt( -c*(s - t + 2.0) + m2 );\n        co = (ry+sign(l)*rx+abs(g)/(rx*ry)- m)/2.0;\n    }\n    else\n    {\n        float h = 2.0*m*n*sqrt( d );\n        float s = sign(q+h)*pow(abs(q+h), 1.0/3.0);\n        float u = sign(q-h)*pow(abs(q-h), 1.0/3.0);\n        float rx = -s - u - c*4.0 + 2.0*m2;\n        float ry = (s - u)*sqrt(3.0);\n        float rm = sqrt( rx*rx + ry*ry );\n        co = (ry/sqrt(rm-rx)+2.0*g/rm-m)/2.0;\n    }\n    vec2 r = ab * vec2(co, sqrt(1.0-co*co));\n    return length(r-p) * sign(p.y-r.y);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}