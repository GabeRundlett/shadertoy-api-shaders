{
    "Shader": {
        "info": {
            "date": "1634807100",
            "description": "[url]https://inktober.com/[/url]\n#inktober2021 themes: [img]https://i.imgur.com/QjhAdpd.png[/img]\n\nmouse controls camera",
            "flags": 0,
            "hasliked": 0,
            "id": "NsySRy",
            "likes": 13,
            "name": "Fab21 #inktober2021 \"fuzzy\"",
            "published": 3,
            "tags": [
                "raymarching",
                "short",
                "inktober2021"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 421
        },
        "renderpass": [
            {
                "code": "#define rot(a)  mat2(cos(a+vec4(0,11,33,0)))                       // rotation\n\n#define r  q.yz *= rot(.5-6.*M.y),                                 \\\n           q.xz *= rot(2.-6.*M.x)                                  \\\n\n#define C(l,w)  (                         /* rotated cube SDF */   \\\n        r,                                                         \\\n        a = abs(q)-(l),                                            \\\n        t = min(t, min(length(max(a.xy,a.xz)),length(max(a.xy,a.zy))) - (w) ) )\n\nvoid mainImage(out vec4 O, vec2 U) \n{\n    float t=9.,h=0.,b,c;                                           // b,c: hit object id \n    vec3  R = iResolution,\n          D = normalize(vec3(U+U, -3.5*R.y) - R),                  // ray direction\n          p = 9./R, q, a,                                          // marching point along ray \n          M = iMouse.z > 0. ? iMouse.xyz/R -.5: vec3(20,8,0)/1e2*cos(.3*iTime+vec3(0,11,0)); \n     \n    for (c=1.; c > 0. && t > .01; c-=.01)                          // --- draw the fuzzy cube\n        q = p, t = 9., \n        r, C( 1.2, -.05 ), h += exp(-t*t), \n        p += .5*t*D;                                               // step forward = dist to obj\n\n    p = 9./R;\n    for (O=vec4(1); O.x > 0. && t > .01; O-=.01)                   // --- draw the sharp cubes\n        q = p, \n        c = C( 1.5, .04 ),\n        r,                                                         // ( frame of the fuzzy cube )\n        b = C( .8 , .03 ), \n        p += .2*t*D;                                               // step forward = dist to obj\n\n  O *= 1.5; t==c ? O *= vec4(.8,.9,1,1) : t==b ? O *= vec4(1,.9,.8,1) : O; // color scheme\n  O = max( O, .04*h*vec4(.8,1,.8,1) );                             // combine sharp + fuzzy\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}