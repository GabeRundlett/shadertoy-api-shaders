{
    "Shader": {
        "info": {
            "date": "1669162686",
            "description": "simple eq inside the frequency domain",
            "flags": 64,
            "hasliked": 0,
            "id": "ddlXzB",
            "likes": 8,
            "name": "ferquency domain eq #2",
            "published": 3,
            "tags": [
                "eq"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 200
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 o_pix_coo_nor = (fragCoord.xy - iResolution.xy*0.5)/iResolution.y;\n    vec2 o_mou_coo_nor = (iMouse.xy - iResolution.xy*0.5)/iResolution.y;\n    \n    if(iMouse.w == 0.){\n        o_mou_coo_nor = vec2(0.01, 0.0);\n    }\n    \n    float n_freqs = o_mou_coo_nor.x*1000.0;\n    n_freqs = 111.; //tmp static\n    vec2 o_opcn_big = o_pix_coo_nor*vec2(n_freqs);\n    vec2 o_opcn_big_mod = fract(o_opcn_big);\n    vec2 o_opcn_big_floor = floor(o_opcn_big);\n    // 0.1, 0.1, 0.1, instead of 0.13, 0.16, 0.19...\n    vec2 o_pix_coo_nor_subdivfloor = vec2(1.) / o_opcn_big_floor;\n    \n    float n_amp = texture(iChannel0,abs(o_pix_coo_nor_subdivfloor)).x; \n    n_amp *=0.5;\n    fragColor = vec4(length(o_opcn_big_mod-vec2(0.5)));\n    //if(n_amp < abs(o_pix_coo_nor.y)){\n    float n_delta = (n_amp*n_freqs) - abs(o_opcn_big.y);\n    if(n_delta < 0.){\n        vec2 o_mod = fract(vec2(o_opcn_big.x, (n_amp*2.0*n_freqs)));\n        \n        float n_length = length(o_mod-vec2(0.5));\n        //fragColor = vec4(abs(n_delta/n_freqs));\n        fragColor = vec4(n_length*fract(n_delta));\n    }\n    \n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 30554,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/mmw/sham-time?in=mmw/sets/mmw-tracks&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}