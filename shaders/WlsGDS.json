{
    "Shader": {
        "info": {
            "date": "1557490967",
            "description": "April 24th, 2019. Direct application of a raymarching seminar held by flopine and evvvvil at Revision 2019.",
            "flags": 0,
            "hasliked": 0,
            "id": "WlsGDS",
            "likes": 1,
            "name": "[Wan] Negative space",
            "published": 3,
            "tags": [
                "raymarching",
                "infinite"
            ],
            "usePreview": 0,
            "username": "wan",
            "viewed": 446
        },
        "renderpass": [
            {
                "code": "#define STEPS 100.\n#define SLOWRAY .7\n\n\nfloat sphere(vec3 p, float radius) {\n\treturn length(p) - radius;\n}\n\nfloat box(vec3 p, float size) {\n\tp = abs(p) - size;\n\tfloat rot = pow(sin(iTime), 3.);\n\tp = vec3(p.x*cos(rot)-p.y*sin(rot),p.x*sin(rot)+p.y*cos(rot), p.z);\n\treturn length(max(p,0.0)) - min(max(p.x,max(p.y,p.z)),0.0);\n}\n\nfloat map(vec3 p) {\n\tp = mod(p, 3.) -1.5;\n\treturn max(\n\t\t-sphere(p, 1.3 + .26*pow(sin(iTime*2.), 3.)),\n\t\tbox(p, 1.1)\n\t);\n}\n\nvec3 normal(vec3 p) {\n\tvec2 c = vec2(.001/*epsilon*/,0.);\n\treturn normalize(vec3(\n\t\tmap(p+c.xyy) - map(p-c.xyy),\n\t\tmap(p+c.yxy) - map(p-c.yxy),\n\t\tmap(p+c.yyx) - map(p-c.yyx)\t\t\n\t\t));\n}\n\nfloat light(vec3 p, vec3 ldir) {\n\treturn dot(normal(p), ldir) * .7 + .3;\n}\n\t     \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = (2. * fragCoord.xy - iResolution.xy) / min(iResolution.x, iResolution.y);\n\tvec3 raydir = normalize(vec3(uv, 1.5));\n\n\tbool hit = false;\n\tvec3 eye = vec3(0.,0.,iTime+.3*cos(iTime*4.));\n\tvec3 p = eye;\n\tfloat shading = 0.;\n\t\n\tvec3 ldir = normalize(vec3(.5,1.,-3.));\n\t\n\tfor (float step = 0.; step < STEPS; step++) {\n\t\tfloat d = map(p);\n\t\tif (d < 0.01) {\n\t\t\thit = true;\n\t\t\tshading = step/STEPS;\n\t\t\tbreak;\n\t\t}\n\t\tp += d * raydir * SLOWRAY;\n\t}\n\t\n\t\n\tvec3 color = vec3(0.);\n\tif (hit) color = mix(vec3(.2,.1,.3), vec3(.9,.5,.3), light(p,ldir))-shading;\t\n\t\n\tcolor = mix(color, vec3(.2,.3,.6), clamp(length(p-eye)/80., 0., 1.));\n\t\n\t\n\tfragColor = vec4(color,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}