{
    "Shader": {
        "info": {
            "date": "1674056622",
            "description": "fun",
            "flags": 0,
            "hasliked": 0,
            "id": "mtj3D3",
            "likes": 0,
            "name": "radial neighbors 3 ",
            "published": 3,
            "tags": [
                "radial"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 153
        },
        "renderpass": [
            {
                "code": "float f_n_rand(float n){\n    n = fract(n * .1031);\n    n *= n + 33.33;\n    n *= n + n;\n    return fract(n);\n}\n\nvec2 f_o_radial(vec2 o_fc_nor_off, float n_its, float n_it){\n    float n_rand = f_n_rand(n_it);//*sin(iTime)*0.01;\n    float n_tau = 6.283185;\n    float n_one_it_nor = 1./n_its;\n    float n_it_nor = n_it/ n_its;\n    float n_dcntr = length(o_fc_nor_off);\n\n    float n_ang_off = sin(n_dcntr*12.+iTime*4.)*n_one_it_nor*n_rand*5.;\n    n_ang_off = n_one_it_nor*0.5;\n    //n_ang_off = (sin(33.*n_dcntr+iTime+mod(n_it,2.)*sin(iTime)*(n_tau/2.))*0.5+0.5)*n_one_it_nor*2.;\n    //n_ang_off = 0.;\n    vec2 o = vec2(\n        cos(((n_it/ n_its)+n_ang_off) * n_tau) * n_dcntr,\n        sin(((n_it/ n_its)+n_ang_off) * n_tau) * n_dcntr\n    );\n    float n_len = length(o_fc_nor_off - o);\n    \n    float naa = (1./iResolution.x)*20.;\n    float n_t = iTime*1.;\n    float nss = 1.5;//(sin(n_t*10.*(sin(((n_it_new+n_t*0.1)/n_its)*n_tau))*2.+(n_it_new/n_its)*n_tau+n_dcntr*300.)*0.5+0.5)*0.75;\n    //n_len = smoothstep(nss,nss+naa, n_len); \n    n_len = n_len*(sin(iTime+n_it_nor*n_tau)*0.5+0.5)*10.;\n\n    \n    //n_len = n_len*1.5*(sin(n_dcntr*n_tau+iTime*2.+n_it_nor*20.)*0.5+0.5);\n    float n_len_nor = n_len/n_dcntr*n_its/4.;// i dont know if this is correct, probably not...\n    //n_len_nor = smoothstep(0.1, 0.11, n_len_nor);\n    //n_len_nor = n_len_nor*1.;//(sin(n_dcntr*10.+iTime*10.)*0.5+0.5)*n_len*30.;\n    \n    return vec2(n_len, n_len_nor);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float n_dscl = 1.;// dscl down scale\n    vec2 o_lires = iResolution.xy * n_dscl;// lres low resolution\n    vec2 o_lfc = fragCoord.xy * n_dscl;\n    float n_t = iTime*0.5; \n    \n\n    float n_ratio_1to_iresx = 1./ o_lires.x;\n\n    vec2 o_lfc_nor = floor(o_lfc) / o_lires; // low frag coord normalized\n    vec2 o_lfc_nor_off = (floor(o_lfc)-0.5*o_lires.xy)/ o_lires.y;\n    vec2 o_fc_nor = fragCoord.xy / iResolution.xy;\n    vec2 o_fc_nor_off = (fragCoord.xy-0.5*iResolution.xy) / iResolution.y;\n    vec2 o_mo_nor_off = (iMouse.xy-0.5*iResolution.xy) / iResolution.y;\n    \n    //o_fc_nor_off *= 2.;\n    float n_its = 9.;//(sin(iTime)*.5+0.5)*18.+2.;\n    float n_tau = 6.283185;\n    \n    float n_ang_nor = fract(atan(o_fc_nor_off.y, o_fc_nor_off.x)/n_tau);\n\n    float n_dcntr = length(o_fc_nor_off);\n\n    float n_one_it_nor = 1./n_its;\n    float n_it = floor(n_ang_nor/n_one_it_nor);\n    float n_it_nor = n_it / n_its;\n    float n_nei = floor((1.-n_dcntr)*n_its);\n    vec2 o_len_min = vec2(1.);\n    float n_it_min = 0.;\n    float n_len_prod = 1.;\n\n    for(float n = 0.; n < n_nei ; n+=1.){\n        float n_pm = n - floor(n_nei/2.);\n        float n_it_new = mod(n_it+n_pm, n_its);\n        vec2 o_len = f_o_radial(o_fc_nor_off, n_its, n_it_new);\n\n        if(o_len.x < o_len_min.x){\n            o_len_min = o_len;\n            n_it_min = n_it_new;\n        }\n        n_len_prod *= o_len.x;\n    }\n    \n    if(iMouse.z == 0.){\n        o_mo_nor_off = vec2(sin(n_t), cos(n_t)*0.5+0.5);\n    }\n    \n    float n = o_len_min.y;\n    fragColor = vec4(n);\n    \n    if(o_fc_nor_off.x > o_mo_nor_off.x){\n    \n        fragColor = (1.-n)*vec4(\n            f_n_rand(1.+n_it_min),\n            f_n_rand(1.+n_it_min*2.),\n            f_n_rand(1.+n_it_min*3.),\n            1.\n        );\n\n    }\n\n\n    \n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}