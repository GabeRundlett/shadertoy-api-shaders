{
    "Shader": {
        "info": {
            "date": "1648136586",
            "description": "e",
            "flags": 0,
            "hasliked": 0,
            "id": "7tsyDM",
            "likes": 14,
            "name": "Little Particles 29480234",
            "published": 3,
            "tags": [
                "e"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 320
        },
        "renderpass": [
            {
                "code": "float seg( in vec2 p, in vec2 a, in vec2 b ){\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n// this is very bad but works (clover trajectory)\nfloat pos(float x) {\n    const float[16] arr = float[] (0.,0.,0.,1.,1.,0.,1.,1.,0.,0.,0.,-1.,-1.,0.,-1.,-1.);\n    float f = fract(16. * x);\n    f = smoothstep(0., 1., f);\n    int index = int(floor(16. * x));\n    \n    return mix(arr[(index) & 15], arr[(index + 1) & 15], f);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n   // float a = 10.;\n   // float t = 2.1 * iTime;\n    /*\n    float d = 1.;\n    for (float i = 0.; i < 1.; i++) {\n        vec2 p = 0.45 * vec2(fnc(a, t), fnc(a, t + pi/8.));\n        t += pi/75.;\n        d = min(d, length(uv - p));\n    }\n    */\n    \n    float d = 1., d2 = 1.;\n    float s = 0.12;\n    float k = 1. / iResolution.y;\n    float t = -0.04 * iTime;\n    float n = 50.;\n    for (float i = 0.; i < n; i++) {\n        t += mix(0.04, 0.12, mod(i,2.)) * pi; // * 0.005\n        float o = pi * 4.;\n        vec2 p = 0.3 * vec2(pos(fract(t)), pos(fract(t + 0.25)));\n        vec2 q = 0.3 * vec2(pos(fract(t + o)), pos(fract(t + o + 0.25)));\n       \n        d = length(uv - p);\n        d2 = abs(i/n * 0.25 - seg(uv, p, q));\n        \n        float s2 = exp(-50. * d) + smoothstep(-k, k, -d + 0.008);\n        s2 += (0.5 - 0.5 * thc(4., i/n - 0.5 * iTime)) \n            * (exp(-50. * d2) + smoothstep(-k, k, -d2 + 0.002));\n        s2 *= exp(-2.4 * i/n);\n        s = max(s,s2);\n    }\n    vec3 e = vec3(0.5);\n    \n    vec3 col = s * pal(uv.y, e, e, e, 0.5 * vec3(0,1,2)/3.);\n    //scanlines\n    col -= 0.2 * pal(uv.y * iResolution.y * 0.5, e, e, e, 0.5 * vec3(0,1,2)/3.);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define pi 3.14159\n\n#define thc(a,b) tanh(a*cos(b))/tanh(a)\n#define ths(a,b) tanh(a*sin(b))/tanh(a)\n#define sabs(x) sqrt(x*x+0.0001)\n//#define sabs(x, k) sqrt(x*x+k)-0.1\n\n#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\nfloat cc(float a, float b) {\n    float f = thc(a, b);\n    return sign(f) * pow(abs(f), 0.25);\n}\n\nfloat cs(float a, float b) {\n    float f = ths(a, b);\n    return sign(f) * pow(abs(f), 0.25);\n}\n\nvec3 pal(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d) {\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat h21(vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat mlength(vec2 uv) {\n    return max(abs(uv.x), abs(uv.y));\n}\n\nfloat mlength(vec3 uv) {\n    return max(max(abs(uv.x), abs(uv.y)), abs(uv.z));\n}\n\nfloat smin(float a, float b)\n{\n    float k = 0.03;\n    float h = clamp(0.5 + 0.5 * (b-a) / k, 0.0, 1.0);\n    return mix(b, a, h) - k * h * (1.0 - h);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}