{
    "Shader": {
        "info": {
            "date": "1716107576",
            "description": "dithering to music power",
            "flags": 0,
            "hasliked": 0,
            "id": "MXdGz8",
            "likes": 1,
            "name": "Radiance 24",
            "published": 3,
            "tags": [
                "probabilities",
                "integrated"
            ],
            "usePreview": 0,
            "username": "ShadeWhizz",
            "viewed": 113
        },
        "renderpass": [
            {
                "code": "float sampleMusicA() {\n\treturn 1.1 * (\n\t\ttexture( iChannel0, vec2( 0.15, 0.25 ) ).x + \n\t\ttexture( iChannel0, vec2( 0.30, 0.25 ) ).x);\n}\nfloat music() {\n    float x = sampleMusicA();\n    return x*x;\n}\nfloat hash(float p) {\n    return sin(p*13411.69348721);\n}\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\nfloat base(vec2 uv, float t) {\n    vec2 ndc = (uv - 0.5) * 2.0;\n    float h = 1.0 - dot(ndc,ndc);\n    float q = fract(t);\n    float hstart = fract(q + h);\n    float gray = hstart;\n    return 1.0 - gray;\n}\n\nfloat channel(vec2 uv, float t) {\n    float themin = 1.0;\n    for (int i = 0; i < 3; i++) {\n        vec2 uv2 = fract(uv*(float(i)+1.0));\n        float h = base(uv2, t);\n        themin = min(themin, h);\n    }\n    return themin;\n}\n\nfloat ichannel(vec2 uv, float t) {\n    bool b = channel(uv, t) * music() > hash12(uv*396.0);\n    return b ? 1.0 : 0.0;\n}\n\nvec3 image(vec2 uv, float t) {\n    float x = ichannel(uv, t);\n    return vec3(x,x,x);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = vec4(image(uv, iTime*0.111),1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 13,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}