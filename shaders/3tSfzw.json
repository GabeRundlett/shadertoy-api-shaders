{
    "Shader": {
        "info": {
            "date": "1598555401",
            "description": "Custom Equalizer",
            "flags": 96,
            "hasliked": 0,
            "id": "3tSfzw",
            "likes": 16,
            "name": "Bar Circular Equalizer",
            "published": 3,
            "tags": [
                "music",
                "equalizer",
                "sfx"
            ],
            "usePreview": 0,
            "username": "Gerard97",
            "viewed": 966
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265\n\nfloat rewrap(float r, float rep) {\n    \n    if (r < 0.) {\n        r = -r;\n    }\n    \n    r = mod(r*rep, PI);\n                  \n    return r/(PI);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ar = iResolution.x / iResolution.y;\n    \n    vec2 px = gl_FragCoord.xy / iResolution.xy;\n    \n    if (px.x < 0.15 && px.y < 0.15 * ar) {\n        \n        vec4 buffer = texture(iChannel1, px);\n        fragColor = vec4(0,0,buffer.r, 0);\n        return;\n    }\n    \n    const int size = 24;\n                    \n    px.y /= ar;\n    \n    vec2 pos = px-vec2(0.5, 0.5/ar);\n    \n    float len = length(pos);\n    \n\tvec3 color = vec3(0,0,0);\n    \n    float rep = 1.;\n    \n    float delta = rewrap(atan(pos.x, pos.y), rep);\n        \n    float div = 100./float(size);\n    \n    float modifier = sin(iTime*0.1);\n    \n    float index = float(int(mod(iTime*0.+delta+modifier, 1.) * 100. / div));\n    \n\tfloat f = texelFetch(iChannel0, ivec2(index/float(size)*512.,0), 0).x;\n    \n    float base = texelFetch(iChannel0, ivec2(0.*512.,0), 0).x;\n    \n    float cpi = smoothstep((0.1 + base*0.05), 0.15 + f * 0.01, len);\n       \n\tif (len < 0.15 + f * 0.1 && len > (0.1 + base*0.05) && mod(delta + modifier, 1./float(size)) < 0.035 && (delta) > 0.009)\n\t\tcolor = vec3(1.-delta, delta*0.3, delta);\n    \n    color *= cpi;\n    \n    if (len < 0.1 + base * 0.05 && len > 0.09 + base * 0.05)\n      color = vec3(1);\n    \n    float eq = texelFetch(iChannel1, ivec2(px.x*800.,px.y), 0).x;\n        \n    if (abs(px.y*ar-0.54+eq*0.1) < 0.008 && \n        px.x > 0.5-(0.1+base * 0.05-0.01) &&\n        px.x < 0.5+(0.1+base * 0.05-0.01)) {\n        color = vec3(eq,1.-eq,eq*eq);\n    }\n    \n\tfragColor = vec4(color, 1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 34,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 px = gl_FragCoord.xy / iResolution.xy;\n    float m = texture(iChannel0, px).r;\n    vec4 p = texture(iChannel1, px);\n    fragColor = vec4(m,p.g + 1., 0. ,1.0);\n    //fragColor = vec4(0,0.0,0,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 33794,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/nocopyrightsounds/jo-cohen-sex-whales-we-are-ncs-rellease"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}