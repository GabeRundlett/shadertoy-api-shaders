{
    "Shader": {
        "info": {
            "date": "1472779102",
            "description": "A simple paint program, mapped onto a plane. Paint on the wood also affects the light and specular highlights. Mouse coordinates isn't quite right, but I'm happy with the results.",
            "flags": 32,
            "hasliked": 0,
            "id": "XtVGRz",
            "likes": 9,
            "name": "3D Paint Program",
            "published": 3,
            "tags": [
                "3d",
                "lighting",
                "color",
                "circle",
                "raymarcher",
                "paint",
                "floor"
            ],
            "usePreview": 1,
            "username": "jackdavenport",
            "viewed": 1903
        },
        "renderpass": [
            {
                "code": "#define MAX_ITERATIONS 256\n#define MAX_DISTANCE  256.\n\n#define LIGHT_DIR normalize(vec3(45.,75.,45.))\n#define LIGHT_COL vec3(1.)\n#define LIGHT_AMB .25\n\n#define EPSILON .001\n#define SHADOW_BIAS .01\n\nvec2 rot2D(vec2 p, float angle) {\n\tangle = radians(angle);\n    float s = sin(angle), c = cos(angle);\n    return mat2(c,s,-s,c)*p;\n}\n\nfloat dstScene(vec3 p) {\n    float h = texture(iChannel1,p.xz).x * .01;\n    float d = p.y - h;\n   \treturn d;\n}\n\nfloat raymarch(vec3 ori, vec3 dir, int iter) {\n    float t = 0.;\n    for(int i = 0; i < MAX_ITERATIONS; i++) {\n        if(i >= iter) {\n            t = MAX_DISTANCE;\n        \tbreak;\n        }\n        vec3  p = ori+dir*t;\n        float d = dstScene(p);\n        if(d < EPSILON)\n            break;\n        t += d * .75;\n    }\n    return t;\n}\n\nvec3 calcNormal(vec3 p, float t) {\n\tvec2 e = vec2(EPSILON*t,0.);\n    vec3 n = vec3(dstScene(p+e.xyy)-dstScene(p-e.xyy),\n                  dstScene(p+e.yxy)-dstScene(p-e.yxy),\n                  dstScene(p+e.yyx)-dstScene(p-e.yyx));\n    return normalize(n);\n}\n\nvec3 calcLighting(vec3 col, vec3 p, vec3 n, vec3 r, float sh, float sp) {\n    float d = max(dot(LIGHT_DIR,n),0.);\n    float s = 0.;\n    float sd = 1.;\n    if(raymarch(p+LIGHT_DIR*SHADOW_BIAS,LIGHT_DIR,32) < MAX_DISTANCE)\n        sd = 0.;\n    if(sh > 0.)\n        s = pow(max(dot(LIGHT_DIR,r),0.),sh)*sp;\n    d *= sd;\n    s *= sd;\n    return (col*(LIGHT_AMB+LIGHT_COL*d))+(LIGHT_COL*s);\n}\n\nvec3 shade(vec3 ori, vec3 dir) {\n    float  t = raymarch(ori,dir,MAX_ITERATIONS);\n    vec3 col = vec3(0.);\n    if(t < MAX_DISTANCE) {\n        vec3 p = ori+dir*t;\n        vec3 n = calcNormal(p,t);\n        vec3 r = normalize(reflect(dir, n));\n        \n        vec4 tx = texture(iChannel0,mod((p.xz+vec2(.9,.5))*vec2(.5,1.),1.));\n        col = calcLighting(tx.xyz, p, n, r, mix(10.,60.,tx.w), mix(.4,1.,tx.w));\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    \n    vec3 ori = vec3(0.,1.,0.);\n    vec3 dir = vec3(uv, 1.);\n    dir.yz = rot2D(dir.yz, 90.);\n    \n\tfragColor = vec4(shade(ori,normalize(dir)),1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2  uv = fragCoord / iResolution.xy;\n    vec4 col = texture(iChannel0, uv);\n    if(iFrame == 0) col = texture(iChannel1, uv) * vec4(1.,1.,1.,0.);\n    \n    uv = fragCoord - iResolution.xy * .5;\n    vec2 m  = iMouse.xy - iResolution.xy * .5;\n    float c = length(m-uv)-5.;\n    if(iMouse.z > 0. && c <= 0.) {\n    \tcol.w += 1. - smoothstep(4.5,0.,abs(c)); \n    }\n    col.w = clamp(col.w, 0., 1.);\n    \n    fragColor = col;\n    fragColor.xyz = mix(fragColor.xyz, vec3(1.,0.,0.), col.w);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}