{
    "Shader": {
        "info": {
            "date": "1614163314",
            "description": "License CC0: D3.js logo created when I should be lunching instead\nI thought the result turned out quite nice so I share the code.\nLogo is trademark of D3.js (https://d3js.org/)",
            "flags": 0,
            "hasliked": 0,
            "id": "wtGBWz",
            "likes": 5,
            "name": "D3.js logo lunch activity",
            "published": 3,
            "tags": [
                "2d",
                "d3"
            ],
            "usePreview": 0,
            "username": "mrange",
            "viewed": 263
        },
        "renderpass": [
            {
                "code": "// License CC0: D3.js logo created when I should be lunching instead\n//  I thought the result turned out quite nice so I share the code.\n//  Logo is trademark of D3.js (https://d3js.org/)\n#define RESOLUTION iResolution\n#define TIME       iTime\n#define PSIN(x)    (0.5+0.5*sin(x))\n\nfloat pmin(float a, float b, float k) {\n  float h = clamp(0.5+0.5*(b-a)/k, 0.0, 1.0);\n  return mix(b, a, h) - k*h*(1.0-h);\n}\n\nfloat pmax(float a, float b, float k) {\n  return -pmin(-a, -b, k);\n}\n\nfloat pabs(float a, float k) {\n  return pmax(-a, a, k);\n}\n\nfloat linex(vec2 p, float w) {\n  float d0 = length(p)-w;\n  float d1 = abs(p.y)-w;\n  return p.x > 0.0 ? d0 : d1;\n}\n\nfloat d3(vec2 p) {\n  const float sm = 7.0;\n  p.x -= -125.0;\n  p.y = pabs(p.y, sm);\n  float d0 = linex(p - vec2(235.0, 100), 45.0);\n  float d1 = linex(p - vec2(235.0, 100), 155.0);\n  float d2 = linex(p - vec2(-100.0, 0), 297.0);\n  float d3 = linex(p - vec2(-100.0, 0), 255.0);\n  float d4 = linex(p - vec2(-100.0, 0), 145.0);\n  float d5 = (p - vec2(-145.0, 0.0)).x;\n    \n  float d = 1E6;\n  d = min(d, d1);\n  d = max(d, -d0);\n  d = pmax(d, -d2, sm);\n  d = min(d, d3);\n  d = max(d, -d4);\n  d = pmax(d, -d5, sm);\n  return d;\n}\n\nvec3 postProcess(vec3 col, vec2 q) {\n  col = clamp(col, 0.0, 1.0);\n  col = pow(col, 1.0/vec3(2.2));\n  col = col*0.6+0.4*col*col*(3.0-2.0*col);\n  col = mix(col, vec3(dot(col, vec3(0.33))), -0.4);\n  col *=0.5+0.5*pow(19.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.7);\n  return col;\n}\n\nvec3 hsv2rgb(vec3 c) {\n  const vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 q = fragCoord/RESOLUTION.xy;\n  vec2 p = -1. + 2. * q;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n  float aa = 2.0/RESOLUTION.y;\n  const float s = 1.0/300.0;\n\n  float d = d3(p/s)*s;\n  float sd = d3((p-vec2(-0.025))/s)*s;\n\n  vec3 col = vec3(1.0);\n  float m = max(tanh(2.0*(q.x+q.y)-1.125), 0.0);\n  vec3 hsv = vec3((mix(-40.0, 00.0, PSIN(0.25*TIME)) +30.0*m)/360.0, 1.0-m*m*m*m, m*m);\n  vec3 logocol = hsv2rgb(hsv);\n  col = mix(col, 0.25*col, exp(-20.0*max(sd, 0.0)));\n  col = mix(col, vec3(0.0), smoothstep(-aa, aa, -d+0.025));\n  col = mix(col, logocol, smoothstep(-aa, aa, -d));\n  col = postProcess(col, q);\n  \n  fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}