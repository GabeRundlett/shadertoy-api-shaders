{
    "Shader": {
        "info": {
            "date": "1505228208",
            "description": "Varied rotations depending on distance from a point. It goes from hot to cold from within the crustacean's core.",
            "flags": 0,
            "hasliked": 0,
            "id": "ltXyzS",
            "likes": 28,
            "name": "Hot and Cold Crustacean",
            "published": 3,
            "tags": [
                "2d",
                "sin",
                "rotate",
                "hot",
                "cold",
                "crustacean",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "TheGrego",
            "viewed": 45678
        },
        "renderpass": [
            {
                "code": "#define M_PI 3.1415926535897932384626433832795\n#define rot(a)  mat2( cos(a), sin(a),  -sin(a), cos(a) )\n\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    // set my uv\n    vec2 uv = iResolution.xy;\n    uv = (u+u - vec2(uv.x, 0) ) / uv.y;\n    \n    float T = iTime;\n    \n    // rotate the uv\n    float l = length(uv);\n    uv *= rot( l * 0.5);\n    uv *= uv/l * 4.0;\t\t// detail resolution\n        \n    // set some colors\n    vec3 color;\n    for( int i = 0; i < 3; i++){\n        float v = length( mod(uv, 0.5) - uv.x * 0.25 );\n        uv.y *= ((sin( v * 5.0) ) * 0.5) * ((sin(T - length(uv) * 0.5 ) + M_PI) * 0.4);\n        color[i] = cos(T + pow(length(uv), float(i) * 0.25));\n    }\n\n    vec3 color2 = vec3(pow(uv.y, 1.0) * 0.5);\n    fragColor = vec4( mix(color, color2, length(uv) * 0.5), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}