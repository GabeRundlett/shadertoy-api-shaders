{
    "Shader": {
        "info": {
            "date": "1521144043",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "XdGcRD",
            "likes": 32,
            "name": "ascii art video (215 chars)",
            "published": 3,
            "tags": [
                "text",
                "matrix",
                "2tweets",
                "asciiart",
                "short",
                "golf"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 1954
        },
        "renderpass": [
            {
                "code": "// see character grey-code construction at the end\n\n// -8 by Xor\n\nvoid mainImage(out vec4 O, vec2 U) {\n    vec2 S = vec2(8,16); O*=0.;\n    int  c = 140 + int[](68,82,63,69,0,1,54,37,51,21,-27,36)\n                      [int(12.* texture( iChannel0, ceil(U/S)*S/iResolution.xy ))];\n   O.g = texture( iChannel3, (mod(U,S) + vec2(c*16+4,c&240)) / 256. ).r; }\n   \n   \n   \n   \n   \n/** // 215 ( +Â 14 now that #def mainImage is forbidden )  \n\nvoid mainImage(out vec4 O, vec2 U) {\n    vec2 S = vec2(8,16); O-=O;\n    int  c = 140 + int[](68,82,63,69,0,1,54,37,51,21,-27,36)\n                      [int(12.* texture( iChannel0, ceil(U/S)*S/iResolution.xy ))];\n   O.g = texture( iChannel3, ( mod(U,S) + vec2(4,0) )/256.\n                             + vec2(c,c/16) / 16. ).r; }\n\n/**/\n\n\n                     \n                          \n                          \n/** // 225 chars                     \n                     \n#define mainImage(O,U)                                            \\\n    vec2 S = vec2(8,16);                                          \\\n    int  c = int[] (32,46,59,33,124,125,50,65,79,81,129,64)       \\\n                 [int(12.* texture( iChannel0, ceil(U/S)*S/iResolution.xy ))]; \\\n     O.g = texture( iChannel3, ( mod(U,S) + vec2(4,0) )/256.      \\\n                               + fract( vec2(c, 15-c/16) / 16. )).r\n\n/**/\n\n                          \n\n\n\n/** // 232 chars\n\n#define mainImage(O,U)                                            \\\n    vec2 S = vec2(8,16);                                          \\\n    int c = int[](32,46,59,33,124,125,50,65,79,81,129,64)         \\\n                 [int(12.* texture( iChannel0, floor(U/S)*S/iResolution.xy ).r)]; \\\n     O.g = texture( iChannel3, ( fract(U/S)*S + vec2(4,0) )/256.  \\\n                               + fract( vec2(c, 15-c/16) / 16. )).r\n\n/**/\n        \n\n        \n        \n        \n/**\n#define G 12\nint grey[G] = int[](32,46,59,33,124,125,50,65,79,81,129,64);\n    \nvoid mainImage( out vec4 O, vec2 U )\n{  \n    vec2 R = iResolution.xy,\n         S = vec2(8,16);             // character size\n    U /= S;\n    O-=O;\n    float v = texture(iChannel0,floor(U)*S/R).r; //v*=v;\n    U = fract(U); U.x = U.x/2.+.2;\n    int c = grey[int(float(G)*v)];\n    O.g = textureGrad( iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16. ), \n                        dFdx(U/16.),dFdy(U/16.) ).r;\n}\n/**/\n      \n                          \n\n        \n        \n// coverage of ascii chars from #32: (x2 by supressing 50% L+R margins)\n//  0 16 13 41 38 45 46  6 22 22 22 17  7  7  5 17   32:  !\"#$%&'()*+,-./\n// 36 20 30 33 34 33 36 25 40 36  7 10 17 20 17 23   48: 0123456789:;<=>?\n// 55 35 47 29 41 36 29 38 39 27 22 36 23 52 44 40   64: @ABCDEFGHIJKLMNO\n// 34 45 41 34 25 36 32 45 34 27 34 27 17 27 17 12   80: PQRSTUVWXYZ[\\]^_\n//  5 32 39 23 39 33 27 45 34 24 28 33 25 39 29 29   96: `abcdefghijklmno\n// 39 39 20 27 24 29 24 39 27 32 25 25 20 25 10  0  112: pqrstuvwxyz{|}~\n// 34 50                                            128: alpha beta\n\n// -> grey 0 - 55 step 5:   SPC .  ;  !  |   }   2  A  O  Q beta @\n//                          32,46,59,33,124,125,50,65,79,81,129,64\n        \n// obtained via texture MIPmap 6 :\n//  U *= 256./iResolution.y;\n//  O = texelFetch(iChannel3, ivec2(U*4.), 0 ).xxxx;\n//  O.x += 3.1* texelFetch(iChannel3, ivec2(U/16.), 6 ).x;\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}