{
    "Shader": {
        "info": {
            "date": "1578589961",
            "description": "drawing => mouse\nspace => reset",
            "flags": 48,
            "hasliked": 0,
            "id": "wtK3Rm",
            "likes": 12,
            "name": "ReactionDiffusion 10 : Attractor",
            "published": 3,
            "tags": [
                "diffusion",
                "10",
                "reaction"
            ],
            "usePreview": 0,
            "username": "aiekick",
            "viewed": 472
        },
        "renderpass": [
            {
                "code": "// Created by Stephane Cuillerdier - Aiekick/2019 (twitter:@aiekick)\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// tuned with NoodlesPlate : https://github.com/aiekick/NoodlesPlate\n\nvoid mainImage( out vec4 fragColor, in vec2 g )\n{\n    vec2 s = iResolution.xy;\n\tvec2 v = (g+g-s)/s.y;\n    float a = atan(v.x,v.y) + length(v) * 4. - iTime * 2.;\n    float cc = get(iChannel0, g, iResolution.xy, 0., 0.).r;\n    float cc2 = get(iChannel0, g, iResolution.xy, cos(a)*.8, sin(a)*.8).r;\n    fragColor = vec4(uColorBG,1)*vec4(cc*cc);\n\tfragColor = fragColor * .2 + fragColor.grba * .3;\n    fragColor += vec4(uColorLight,1)*max(cc2*cc2*cc2 - cc*cc*cc, 0.0)*iResolution.y*0.2;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 f, in vec2 g )\n{\n    f = frag(iChannel0, g, iResolution.xy, iFrame, iMouse, iChannel1, iTime, iChannel2);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 16,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 f, in vec2 g )\n{\n    f = frag(iChannel0, g, iResolution.xy, iFrame, iMouse, iChannel1, iTime, iChannel2);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 f, in vec2 g )\n{\n    f = frag(iChannel0, g, iResolution.xy, iFrame, iMouse, iChannel1, iTime, iChannel2);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 f, in vec2 g )\n{\n    f = frag(iChannel0, g, iResolution.xy, iFrame, iMouse, iChannel1, iTime, iChannel2);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "//#define TORUS_EMITER\n\n// default\nconst float uAA = 0.01131;\nconst float uBB = 0.04;\nconst float uCC = 1.75;\n//uniform sampler2D uCol;\nconst vec3 uColorBG = vec3(0.99999,0.999997,1);\nconst vec3 uColorLight = vec3(1,0.428571,0);\nconst vec2 uDiff = vec2(0.5068,0.7381);\nconst float uE = 1.75;\nconst float uLapCorner = 0.2;\nconst float uScale = 1.0013;\n//uniform sampler2D uSim;\n\n/* laplacian corner ratio */\t#define lc uLapCorner\n/* laplacian side ratio */ \t\t#define ls (1.0-uLapCorner)\n/* key space */ \t\t\t\t#define kbd_space 32\n\nvec4 get(sampler2D sam, vec2 g, vec2 s, float x, float y)\n{\n    g += vec2(x,y);\n\treturn texture(sam, g / s);\n}\n\nvec4 frag(\n    sampler2D sam, vec2 g, vec2 s, \n    int i, vec4 mo, sampler2D kbd, \n    float time, sampler2D noise)\n{\n\tg -= s * 0.5;\n\tg *= uScale;\n\tg += s * 0.5;\n\t\n    vec4 l \t= \tget(sam, g, s, -1. ,  0.);\n\tvec4 lt = \tget(sam, g, s, -1. ,  1.);\n\tvec4 t \t= \tget(sam, g, s,  0. ,  1.);\n\tvec4 rt = \tget(sam, g, s,  1. ,  1.);\n\tvec4 r \t= \tget(sam, g, s,  1. ,  0.);\n\tvec4 rb = \tget(sam, g, s,  1. , -1.);\n\tvec4 b \t= \tget(sam, g, s,  0. , -1.);\n\tvec4 lb = \tget(sam, g, s, -1. , -1.);\n\tvec4 c \t= \tget(sam, g, s,  0. ,  0.);\n\tvec4 lap = (l+t+r+b)/4.*ls + (lt+rt+rb+lb)/4.*lc - c; // laplacian\n\n\t// http://www.math.univ-toulouse.fr/~cbesse/teaching/M2/M2Mapi3/Projet.pdf\n\t// da = Du*lap + f(u,v);\n\t// db = Dv*lap + g(u,v);\n\t// GrayScott : Du!=0,Dv!=0\n\t// f(u,v) = F(1-u) - uv²\n\t// g(u,v) = uv² - (F+K)*v\n\t\n\tvec2 uv = g / s;\n\t\n\tfloat Du = uDiff.x;\n\tfloat Dv = uDiff.y;\n\tfloat re = c.x * c.y * c.y;\n    c.x += Du * lap.x + uAA * (1.0 - c.x) - re;\n\tc.y += Dv * lap.y + re - (uAA + uBB) * c.y;\n\t\n    float kbdValue = texelFetch(kbd, ivec2(kbd_space,1),0).x;\n    \n\tvec2 p = (g-s*0.5)/s.y;\n    float di = length(p)-0.45;\n    float da = abs(di)-0.01;\n    \n    if (i < 1)\tc = vec4(1,0,0,1);\n\tif (kbdValue > 0.) c = vec4(1,0,0,1);\n\tif (length(g - s * 0.5) < 5.) c = vec4(0,1,0,1);\n\t\n#ifdef TORUS_EMITER\n    if (da < 0.0 ) c = vec4(0,1,0,1);\n#endif\n    \n\tif (mo.z > 0.) \n\t{\n\t\tif (length(g - mo.xy) < 5.) \n\t\t\tc = vec4(0,1,0,1);\n\t}\n\t\n\treturn vec4(clamp(c.xy, 0., 1e1), 0, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}