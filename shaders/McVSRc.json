{
    "Shader": {
        "info": {
            "date": "1715598797",
            "description": "this is so cool looking, finally got complex exponents working",
            "flags": 0,
            "hasliked": 0,
            "id": "McVSRc",
            "likes": 0,
            "name": "multibrot culegamer",
            "published": 3,
            "tags": [
                "fractal",
                "mandelbrot"
            ],
            "usePreview": 0,
            "username": "CuleGamer",
            "viewed": 108
        },
        "renderpass": [
            {
                "code": "vec2 cpow(vec2 B, mat2 E)\n{\n    vec2 temp = E * vec2(log(length(B)), atan(B.y,B.x));\n    return exp(temp.x) * vec2(cos(temp.y), sin(temp.y));\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const int maxI = 512;\n    vec2 uv = 2.*(2.*fragCoord - iResolution.xy) / iResolution.y;\n    vec2 exponent = 2.*vec2(cos(iTime/4.), sin(iTime/4.));\n    mat2 exponentMat = mat2(exponent.x, -exponent.y, exponent.y, exponent.x);\n    vec2 z = uv;\n    float val;\n    for(int i; i < maxI; i++)\n    {\n        z = cpow(z, exponentMat) + uv;\n        if(dot(z,z) > 128.)\n        {\n            val = 16.*float(i)/float(maxI);\n            break;\n        }\n    }\n    vec3 col = vec3(val);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}