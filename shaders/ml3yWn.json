{
    "Shader": {
        "info": {
            "date": "1699730524",
            "description": "WARNING - FLASHING LIGHTS\nEarly 1980s, it was so cool to have a spectrum analyzer on your stereo...\nMusic: \"Crazy Comets\" (main theme, C64) by Rob Hubbard.\nhttps://soundcloud.com/commodore64sidtribute/crazy-comets-main-theme-cover",
            "flags": 64,
            "hasliked": 0,
            "id": "ml3yWn",
            "likes": 14,
            "name": "\"Crazy Comets\" Tribute",
            "published": 3,
            "tags": [
                "retro",
                "audio"
            ],
            "usePreview": 0,
            "username": "ruudhelderman",
            "viewed": 342
        },
        "renderpass": [
            {
                "code": "// \"Crazy Comets\" Tribute\n// by Ruud Helderman, November 2023 - MIT License\n//\n// Appropriate music (iChannel0):\n// https://soundcloud.com/commodore64sidtribute/crazy-comets-main-theme-cover\n//\n// Thanks iq for \"Input - SoundCloud\" - https://www.shadertoy.com/view/MsdGzn\n\nfloat rsqr(vec2 xy) { return sqrt(length(xy * xy)); }       // rounded square (x^4 + y^4)^0.25\nfloat rsqr(float x, float y) { return rsqr(vec2(x, y)); }\n\nfloat cup(vec2 p)\n{\n    return (p.y -= 8.0) > 0.0 ? rsqr(abs(p.x) - 8.0, p.y) : abs(length(p) - 8.0);\n}\n\nfloat letter_o(vec2 p)\n{\n    return abs(rsqr(p) - 8.0);\n}\n\nfloat letter_a(vec2 p)\n{\n    return min(\n        p.y > 0.0 ? letter_o(p) : rsqr(abs(p.x) - 8.0, min(p.y + 8.0, 0.0)),\n        rsqr(max(abs(p.x) - 8.0, 0.0), p.y)\n    );\n}\n\nfloat letter_c(vec2 p)\n{\n    return p.x < 0.0 ? letter_o(p) : rsqr(max(p.x - 8.0, 0.0), abs(p.y) - 8.0);\n}\n\nfloat letter_e(vec2 p)\n{\n    return min(letter_c(p), rsqr(clamp(0.0, p.x - 3.0, p.x + 7.0), p.y));\n}\n\nfloat letter_m(vec2 p)\n{\n    float c1 = cos(0.15 * p.x);\n    float c2 = c1 * c1;\n    float c4 = c2 * c2 * 6.0;\n    return min(\n        rsqr(abs(p.x) - 8.0, max(abs(p.y) - 8.0, 0.0)),\n        rsqr(max(abs(p.x) - 7.0, 0.0), max(p.y + c2*c4 - 8.0, min(p.y + c4 - 7.0, 0.0)))\n    );\n}\n\nfloat letter_r(vec2 p)\n{\n    return min(\n        p.x < 4.0 ? rsqr(min(p.x + 8.0, 0.0), abs(p.y - 4.0) - 4.0) : abs(rsqr(p - 4.0) - 4.0),\n        p.x < 0.0 ? rsqr(p.x + 8.0, max(abs(p.y) - 8.0, 0.0)) : cup(-p)\n    );\n}\n\nfloat letter_s(vec2 p)\n{\n    p *= sign(2.0 * p.y - p.x);\n    return p.x > -4.0 ? rsqr(max(p.x - 8.0, 0.0), abs(p.y - 4.0) - 4.0) : abs(rsqr(p + vec2(4, -4)) - 4.0);\n}\n\nfloat letter_t(vec2 p)\n{\n    return min(rsqr(p.x, max(abs(p.y) - 8.0, 0.0)), rsqr(max(abs(p.x) - 8.0, 0.0), p.y - 8.0));\n}\n\nfloat letter_y(vec2 p)\n{\n    return min(cup(p), rsqr(p.x, clamp(0.0, p.y, p.y + 8.0)));\n}\n\nfloat letter_z(vec2 p)\n{\n    return letter_s(p * vec2(-1, 1));\n}\n\nfloat crazy(vec2 p)\n{\n    float n = round(p.x);\n    p.x -= n;\n    p *= 24.0;\n    switch (int(n))\n    {\n        case 0: return letter_c(p);\n        case 1: return letter_r(p);\n        case 2: return letter_a(p);\n        case 3: return letter_z(p);\n        case 4: return letter_y(p);\n        default: return 9.0;\n    }\n}\n\nfloat comets(vec2 p)\n{\n    float n = round(p.x);\n    p.x -= n;\n    p *= 24.0;\n    switch (int(n))\n    {\n        case 0: return letter_c(p);\n        case 1: return letter_o(p);\n        case 2: return letter_m(p);\n        case 3: return letter_e(p);\n        case 4: return letter_t(p);\n        case 5: return letter_s(p);\n        default: return 9.0;\n    }\n}\n\nvec2 bend(vec2 uv)\n{\n    return uv / vec2(1.0 - uv.y, 0.8 + 8.0 * uv.x * uv.x);\n}\n\nvec4 logo_crazy(vec2 uv)\n{\n    return vec4(0.7, 0.5, 0, smoothstep(-2.5, -2.0, -crazy(32.0 * uv + vec2(2.0, -4.4))));\n}\n\nvec4 logo_comets(vec2 uv)\n{\n    uv.y += smoothstep(-4.0, 4.0, -iTime);       // appear from the bottom (first 4 seconds)\n    float f = fract(8.0 * uv.y - 0.5 * iTime);\n    vec3 color = 0.7 * vec3(1, 0.5 + f - smoothstep(0.4, 0.6, f), 0);    // red/yellow gradient\n    return vec4(color, smoothstep(-1.1, -0.9, -abs(comets(8.0 * bend(uv) + vec2(2.5, -0.5)) - 2.0)));\n}\n\nvec4 logo(vec2 uv)\n{\n    return uv.y > uv.x * uv.x + 0.1 ? logo_crazy(uv) : logo_comets(uv);\n}\n\nvec4 starfield(vec2 uv)        // ohhh, it's so retro... flying through a repetitive tube of dots\n{\n    const float r = 22.6;      // sectors per rad; totalling 142 stars (based on 355/113 approx of pi)\n    \n    float a = atan(uv.y, uv.x);                                       // angle (polar coordinate)\n    a += 8.0 * smoothstep(0.2, 0.3, abs(fract(0.02 * iTime) - 0.5));  // periodically rotate the scene\n    float s = floor(a * r);                                           // sector\n    float h = float(int(s) * 43759 ^ 28571) / 271.0;                  // poor PRNG, but is fine here\n    float t = 1.0 / (0.5 + 25.0 * fract(h - 0.2 * iTime));            // tube in 3D perspective\n    float d = length(vec2(1.0 - t / length(uv), a - (s + 0.5) / r));  // distance to star (normalized)\n    return vec4(1, 1, 0.7, 3.0 * t * max(0.0, 1.0 - 2.0 * r * d));    // color, brightness\n}\n\nvec4 wave(vec2 uv)\n{\n    return vec4(0.7, 0, 1,\n        smoothstep(0.02, 0.0, abs((texture(iChannel0, vec2(uv.x + 0.5, 0.75)).x - 0.5) * 0.5 - uv.y)));\n}\n\nfloat fft(vec2 uv)\n{\n    return floor(uv) == vec2(0) ? step(uv.y, texture(iChannel0, vec2(uv.x, 0.25)).x) : 0.0;\n}\n\nvec2 perspective(vec2 uv)\n{\n    const vec3 a = normalize(vec3(2, -1, 2));     // direction looking forward\n    const vec3 b = normalize(vec3(10, 1, -10));   // direction sideways\n    vec3 v = mat3(a, b, cross(a, b)) * vec3(1, 0.5 * uv);\n    return vec2(0.2, 1) * v.xy / v.z + vec2(-0.12, 1.3);\n}\n\nvec4 leds(vec2 uv)\n{\n    const vec2 grid = vec2(128, 100);\n    vec2 s = perspective(uv) * grid;\n    vec2 f = fract(s);\n    vec2 p = (s - f + 0.5) / grid;\n    return vec4(step(0.8, p.y), step(p.y, 0.9), 0,\n        fft(p) * 2.0 * smoothstep(-0.25, 0.25, -length(clamp(vec2(0), f - 0.75, f - 0.25))));\n        //fft(p) * exp(-9.0 * length(clamp(vec2(0), f - 0.75, f - 0.25))));\n}\n\nvec3 mix2(vec4 front, vec3 back)\n{\n    return mix(back, front.rgb, front.a);\n}\n\nvec3 mixall(vec2 uv)\n{\n    return mix2(leds(uv), mix2(wave(uv), mix2(logo(uv), mix2(starfield(uv), vec3(0)))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(mixall((fragCoord - 0.5 * iResolution.xy) / iResolution.x), 1);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 35208,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/commodore64sidtribute/crazy-comets-main-theme-cover"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}