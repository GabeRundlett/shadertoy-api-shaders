{
    "Shader": {
        "info": {
            "date": "1514738102",
            "description": "A simple wave equation implemented as a cellular automaton",
            "flags": 32,
            "hasliked": 0,
            "id": "ll2fRz",
            "likes": 2,
            "name": "Simple wave equation",
            "published": 3,
            "tags": [
                "wave",
                "cellularautomatonn"
            ],
            "usePreview": 0,
            "username": "LuisRodriguezRuiz",
            "viewed": 796
        },
        "renderpass": [
            {
                "code": "\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    fragColor=texture(iChannel0,fragCoord.xy/iResolution.xy);\n\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0,fragCoord.xy/iResolution.xy);\n}\n\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0,fragCoord.xy/iResolution.xy);\n}\n    \n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buf B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "const float wave=0.1;\n\n\n\nfloat rnd(vec2 seed)\n{\n    return fract(sin(dot(seed.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n\nfloat getNeighborValue(vec2 pos)\n{   \n  \n  return texture(iChannel0,pos/iResolution.xy).x;  \t\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    \t float waveValue;\n         float prevValue = texture(iChannel1,fragCoord.xy/iResolution.xy).x;        \n     \t\n         float currentValue = texture(iChannel0,fragCoord.xy/iResolution.xy).x;\t\t\n\t\t\n         if(iFrame==0)        \n             waveValue=rnd(fragCoord.xy);\n         else\n         { \n                   \n            float neighborsValue=(getNeighborValue(fragCoord.xy+vec2(0,-1))+\n                                  getNeighborValue(fragCoord.xy+vec2(0,1))+\n                                  getNeighborValue(fragCoord.xy+vec2(-1,0))+\n                                  getNeighborValue(fragCoord.xy+vec2(1,0)))/4.;\n             \n            \n            waveValue=clamp(2.0*currentValue-prevValue+2.0*wave*(neighborsValue-currentValue),0.0,1.0);\n           \n          }\n              \n        fragColor=vec4(waveValue);\n    \t                                           \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buf C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}