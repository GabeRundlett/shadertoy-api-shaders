{
    "Shader": {
        "info": {
            "date": "1618387476",
            "description": "There's an awful lot of bright colors for a river, but it does look like dyes flowing through water somewhat. Part of my Northern Lights series, with some updates.",
            "flags": 0,
            "hasliked": 0,
            "id": "sdXSRM",
            "likes": 3,
            "name": "Northern Stream, Maybe Clean",
            "published": 3,
            "tags": [
                "noise",
                "plasma",
                "water",
                "lights",
                "stream",
                "northern"
            ],
            "usePreview": 0,
            "username": "TEttinger",
            "viewed": 349
        },
        "renderpass": [
            {
                "code": "// CC0 licensed, do what thou wilt.\nconst float SEED = 42.0;\n\n// UE4 PseudoRandom function\nfloat pseudo(vec2 v) {\n    v = v + vec2(-64.340622, -72.465622);\n    return sin(dot(v.xyx * v.xyy, vec3(20.390625, 60.703125, 2.4281209)));\n}\n\nfloat swayRandomized(float seed, float value)\n{\n    float f = floor(value);\n    float start = pseudo(vec2(seed, f));\n    float end   = pseudo(vec2(seed, f+1.0));\n    return mix(start, end, smoothstep(0., 1., value - f));\n}\n\nvec3 cosmic(float seed, vec3 con)\n{\n    con.x += swayRandomized(seed, con.z + con.x);\n    con.y += swayRandomized(seed, con.x + con.y);\n    con.z += swayRandomized(seed, con.y + con.z);\n    return con * 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 8.0 * fragCoord/iResolution.xy;\n    // aTime, s, and c could be uniforms in some engines.\n    float aTime = iTime * 0.225;\n    vec3 s = vec3(swayRandomized(-164.0531527, aTime - 1.11),\n                  swayRandomized(-776.648142, aTime + 1.41),\n                  swayRandomized(-509.935190, aTime + 1.61));\n    vec3 c = vec3(swayRandomized(-105.2792407, aTime - 1.11),\n                  swayRandomized(-615.576687, aTime + 1.41),\n                  swayRandomized(-435.278990, aTime + 1.61));\n    vec3 con = vec3(0.0004375, 0.0005625, 0.0008125) * aTime + c * uv.x + s * uv.y;\n    con = cosmic(SEED, con);\n    con = cosmic(SEED, con);\n    con = cosmic(SEED, con);\n    \n    fragColor = vec4(sin(con * 3.14159265) * 0.5 + 0.5,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}