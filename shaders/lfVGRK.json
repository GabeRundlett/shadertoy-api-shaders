{
    "Shader": {
        "info": {
            "date": "1713004430",
            "description": "My first shader; circles that converge on the mouse position with a color gradient.",
            "flags": 0,
            "hasliked": 0,
            "id": "lfVGRK",
            "likes": 2,
            "name": "Yep, my first shader",
            "published": 3,
            "tags": [
                "color",
                "circle"
            ],
            "usePreview": 0,
            "username": "NickSpyker",
            "viewed": 127
        },
        "renderpass": [
            {
                "code": "// https://iquilezles.org/articles/palettes/\nvec3 createPalette(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d)\n{\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\n// https://iquilezles.org/articles/distfunctions2d/\nfloat sdCircle(vec2 p, float r)\n{\n    return length(p) - r;\n}\n\nvec2 calcUv(in vec2 value)\n{\n    vec2 result = (value / iResolution.xy - .5) * 2.;\n    result.x *= iResolution.x / iResolution.y;\n    return result;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = calcUv(fragCoord);\n    vec2 mouse = calcUv(iMouse.xy);\n    \n    float d = length(uv - mouse);\n    \n    vec3 palette = createPalette(\n        d + cos(iTime) / 2.,\n        vec3(.5, .5, .5),\n        vec3(.5, .5, .5),\n        vec3(1., 1., .5),\n        vec3(.8, .9, .3)\n    );\n    \n    float circle = sdCircle(uv - mouse, .5);\n    \n    float value = sin(circle * 15. + iTime);\n    value = 0.25 / abs(value);\n    \n    fragColor = vec4(value * palette, 1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}