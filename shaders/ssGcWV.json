{
    "Shader": {
        "info": {
            "date": "1655623492",
            "description": "mess around with the #defines a little!\noriginally made for https://juke.fr/",
            "flags": 0,
            "hasliked": 0,
            "id": "ssGcWV",
            "likes": 1,
            "name": "the nyan cat tunnel",
            "published": 3,
            "tags": [
                "2d",
                "simple",
                "texture",
                "post",
                "abstract"
            ],
            "usePreview": 0,
            "username": "oatmealine",
            "viewed": 322
        },
        "renderpass": [
            {
                "code": "#define TEXMULT vec2(1.0/6.0, 1.0) // get just 1 nyancat\n#define DEPTH 4.0 // fun to mess around with\n#define RADIUS 0.3\n#define AMP 1. // please do not set this to 0. or else you'll cause an infinite loop\n\n//#define NOFLASH\n//#define NOCOLOR\n\nvec4 dist(vec2 uv, float radius, vec2 dir) {\n    float middle = uv.x * iResolution.x;\n    float rad = radius * iResolution.x;\n    for (\n        vec2 offset = vec2(0.0);\n        length(offset) <= rad;\n        offset += dir\n    ) {\n        vec3 oldCol = vec3(0.0);\n        for (\n            float neg = -1.0;\n            neg <= 1.0;\n            neg += 2.0\n        ) {\n          vec2 uv2 = uv + offset * neg / iResolution.xy;\n          vec4 tex = texture(iChannel0, uv2 * TEXMULT);\n          if (tex.a < 1.0) return vec4(oldCol.rgb, length(offset) / rad);\n          oldCol = tex.rgb;\n        }\n    }\n    return vec4(vec3(0.0), 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 tcolor = texture(iChannel0, uv * TEXMULT);\n    if (tcolor.a >= 1.0) {\n        float t = iTime * 0.9;\n        vec4 dr = dist(uv, RADIUS, vec2(sin(t), cos(t)) * AMP);\n        float d = dr.a;\n        float a = sin(t * 4.0 + d * DEPTH);\n        #ifdef NOFLASH\n        a = 1.0;\n        #endif\n        #ifdef NOCOLOR\n        dr.rgb = vec3(1.0);\n        #endif\n        fragColor = vec4(vec3(a) * dr.rgb, 1.0);\n    } else {\n        fragColor = vec4(vec3(sin(uv.y * 1.8 + iTime * 0.9 * 2.0) * 0.1 + 0.45 - 0.3) * vec3(0.8, 0.7, 1.0), 1.0);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 14,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}