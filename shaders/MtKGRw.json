{
    "Shader": {
        "info": {
            "date": "1473903731",
            "description": "A weird broken tv effect.  ",
            "flags": 0,
            "hasliked": 0,
            "id": "MtKGRw",
            "likes": 3,
            "name": "BrokenTV",
            "published": 3,
            "tags": [
                "2d",
                "tveffect"
            ],
            "usePreview": 0,
            "username": "seani",
            "viewed": 695
        },
        "renderpass": [
            {
                "code": "float envWidth = 25.0 + 25.0*sin(iTime*3.0);\n\nfloat tri(float x, float freqScale)\n{\n    x = x*freqScale;\n    return 2.0*(abs(mod(x++, 2.) - 1.) - 0.5);\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 r = 2.*vec2(fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    //r = r*(0.5 + 0.5*cos(iTime*2.0));\n    float xMax = iResolution.x/iResolution.y;\n    \n    //the scanPoint moves left and right across the display at a high frequency\n    float scanPoint = xMax * tri(iTime*rand(vec2(r.y, 1.0)), 10.);\n    \n    //how much the current coordinate should be sampled\n    float scanAmt = smoothstep(scanPoint-envWidth/2., scanPoint, r.x)*smoothstep(scanPoint + envWidth/2., scanPoint, r.x);\n    //sample the current coordinate but also distort it according to the scanAmt;\n    vec3 ret = texture(iChannel0, vec2(r.x+(scanAmt*1.0), r.y)).rgb;\n    \n    if((abs(r.x) > xMax) || (abs(r.y) > 1.0))\n    {\n        ret = vec3(0.);\n    }\n    \n    fragColor = vec4(ret*scanAmt, 1.0);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}