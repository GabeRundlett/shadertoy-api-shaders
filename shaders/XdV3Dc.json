{
    "Shader": {
        "info": {
            "date": "1456895503",
            "description": "Quickly drawing an outline on the alpha channel of a 2D image. The edges should pickup the smoothness of the image it's outlining. Nyan cat is a bad test for this but you can see what I mean by switching between different filters.",
            "flags": 0,
            "hasliked": 0,
            "id": "XdV3Dc",
            "likes": 39,
            "name": "Fast Solid 2D Outline",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "Squiggle",
            "viewed": 6119
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n\n#define SAMPLES 32\n#define WIDTH 0.8\n#define COLOR vec4(0.0,0.0,1.0,1.0)\n#define NUM_FRAMES 6.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 v_texCoord = fragCoord.xy / iResolution.xy;\n    \n    vec2 u_textureRes = iChannelResolution[0].xy - vec2(15.0,0.0);\n    float frame = floor(mod(iTime*10.0, NUM_FRAMES));\n    float frameWidth = u_textureRes.x / NUM_FRAMES;\n    \n    float catUVWidth = u_textureRes.x / iChannelResolution[0].x;\n    vec4 u_textureBoundsUV = vec4(catUVWidth/NUM_FRAMES * frame, 0.0, catUVWidth/6.0 * (frame+1.0), 1.0);\n    \n    vec2 catScale = vec2(0.10);\n    vec2 catPos = vec2(0.0-(frameWidth-2.5)*frame,0.0) + vec2(10.0,0.0);\n    vec2 catUV = clamp((fragCoord*catScale-catPos) / u_textureRes, u_textureBoundsUV.xy, u_textureBoundsUV.zw );\n    \n    //OUTLINE\n    float outlineAlpha = 0.0;\n\tfloat angle = 0.0;\n\tfor( int i=0; i<SAMPLES; i++ ){\n\t\tangle += 1.0/(float(SAMPLES)/2.0) * PI;\n\t\tvec2 testPoint = vec2( (WIDTH/u_textureRes.x)*cos(angle), (WIDTH/u_textureRes.y)*sin(angle) );\n\t\ttestPoint = clamp( catUV + testPoint, u_textureBoundsUV.xy, u_textureBoundsUV.zw );\n\t\tfloat sampledAlpha = texture( iChannel0,  testPoint ).a;\n\t\toutlineAlpha = max( outlineAlpha, sampledAlpha );\n\t}\n\tfragColor = mix( vec4(0.0), COLOR, outlineAlpha );\n\n\t//TEXTURE\n\tvec4 tex0 = texture( iChannel0, catUV );\n\tfragColor = mix( fragColor, tex0, tex0.a );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 14,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}