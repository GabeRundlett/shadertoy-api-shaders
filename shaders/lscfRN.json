{
    "Shader": {
        "info": {
            "date": "1524224847",
            "description": "I found \nhttps://medium.com/@gordonnl/the-ocean-170fdfd659f1\nand just want to test this cheap noise.",
            "flags": 0,
            "hasliked": 0,
            "id": "lscfRN",
            "likes": 2,
            "name": "anotehr cheap nosie",
            "published": 3,
            "tags": [
                "noise",
                "water",
                "sin"
            ],
            "usePreview": 0,
            "username": "capitanNeptune",
            "viewed": 673
        },
        "renderpass": [
            {
                "code": "#define time iTime*3.0\n\nfloat noise(float x)\n{\n    return (sin(x * 1.0 + time * 1.0) + sin(x * 2.3 + time * 1.5) + sin(x * 3.3 + time * 0.4)) / 3.0;\n}\n\nfloat fractal(float x)\n{\n    float f = 0.0;\n    f  = 0.50000*(noise( x )); x = x*2.01;\n    f += 0.25000*(noise( x )); x = x*2.02;\n    f += 0.03125*(noise( x )); x = x*2.05;\n    return f;\n}\n\nfloat norm(float x)\n{\n    return x * 0.5 + 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n    uv *= 5.0;\n   \n    float h = norm((fractal(uv.x) + fractal(uv.y)) / 2.0);\n    \n    // Time varying pixel color\n    vec3 col = vec3(h);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}