{
    "Shader": {
        "info": {
            "date": "1725042069",
            "description": " originals  https://www.shadertoy.com/view/Xf2BDm https://www.shadertoy.com/view/stsXDl",
            "flags": 0,
            "hasliked": 0,
            "id": "McjBWm",
            "likes": 1,
            "name": "fractal eye",
            "published": 3,
            "tags": [
                "fractal",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 151
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(23,223,21))*.5+.5)\n#define t iTime\n#define res iResolution.xy\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n     vec3 col = vec3(0.0);\n    float lum;\n    float zoom = t;\n\n    for (int i = 0; i < 10; i++) {\n       \n        vec2 uv = C / res;\n        uv = uv * 2.0 - 1.0;\n        uv.x *= res.x / res.y; //adjusting aspect ratio\n        //creating radial offset\n        vec2 radialOffset = vec2(-sin(zoom + length(uv) * 1.0), -cos(zoom + length(uv) * 8.0));\n        \n        //calculating luminance based on distance from center\n        lum = 0.2 / (length(mod(uv * 10.0, 1.0) - 0.5) + 0.01);\n        col[i] = lum * abs(sin(-zoom + length(uv) * 5.0));\n     \n        zoom +=2.1;\n    }\n    vec3 p,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<70.;\n        O.xyz+=mix(vec3(0.1,0.2,2.),H(g*.1),.8)*1./e/8e3\n    )\n    {\n      vec2 uv = C / res;\n      \n        p=g*d;\n  \n     p.z-=iTime;\n        a=30.;\n        p=mod(p-a,a*2.)-a;\n        s=3.;\n        for(int i=0;i++<8;){\n            p=.3-abs(p);\n            \n             p.xz*=mat2(cos(iTime),sin(iTime),-sin(iTime), cos(iTime));\n            p.x<p.z?p=p.zyx:p;\n            p.z<p.y?p=p.xzy:p;\n              p.x<p.y?p=p.zyx:p;\n              \n            s*=e=1.7+sin(iTime*.1)*.1;\n            p=abs(p)*e-\n                vec3(\n                    5.+sin(iTime*.3+1.5*sin(iTime*.3))*3.,\n                    120,\n                    8.+cos(iTime*.5)*5.\n                 )*col/ lum;\n         }\n         g+=e=length(p.yx)/s;\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}