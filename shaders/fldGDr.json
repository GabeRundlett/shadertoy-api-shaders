{
    "Shader": {
        "info": {
            "date": "1636265796",
            "description": "landtest. High contract image make people feel nevous or exsiting sometime,i give this image a soft light spreading from far distance to feel comfortable.  ",
            "flags": 0,
            "hasliked": 0,
            "id": "fldGDr",
            "likes": 23,
            "name": "wasteland",
            "published": 3,
            "tags": [
                "landwalk"
            ],
            "usePreview": 0,
            "username": "rockhard",
            "viewed": 470
        },
        "renderpass": [
            {
                "code": "float map(vec3 p){\n    p.z+=iTime*0.5;\n    //push away the height to make a road.\n    float wav=(sin(p.x*0.25+4.4))*0.5\n        + texture(iChannel0,p.xz*0.5).x*0.007;  \n    float h = dot(sin(p - cos(p.zyx)),vec3(0.03));\n    p*=0.65;\n    h += dot(sin(p- cos(p.yzx*2.5)),vec3(0.05));\n     //-0.35 ~ 0.52 can flatten the ground and top surface \n    return p.y + smoothstep(-0.35,0.52,h-wav);   \n}\n\nvec3 getNormal(vec3 p){\n    vec2 e = vec2(0.002, -0.002); \n    return normalize(\n        e.xyy * map(p + e.xyy) + e.yyx * map(p + e.yyx) + \n        e.yxy * map(p + e.yxy) + e.xxx * map(p + e.xxx));\n}\n\nvec3 col(vec3 rd, vec3 norm, float md, float t)\n{     \n    //a simply trick without the heavy mie calculation\n    //to control color\n    vec3 sun=(1.0-rd.y-rd.x)*vec3(0.4,0.3,0.2);\n    vec3 sky=mix(vec3(0.25,0.2,0.1),vec3(0.0,0.3,0.75),rd.y)+sun;\n    //cloud is also not nessesary this time..\n    \n    // light\n    vec3 ld =normalize(vec3(0.25, 0.5, 0.51)); \n    \n    float diff = dot(norm, ld);\n    \n    vec3 col= vec3(0.25)*(diff-0.5); \n    //fog\n    col = mix(col,sky, 1.0 - exp(-0.0006*t*t*t) );\n    //https://www.shadertoy.com/view/MlccDf\n    float sand = smoothstep(-0.2, 0.35, 0.0001 / md * t);\n    \n    return col+sand*vec3(0.15,0.1,0.01);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy-0.5;\n    float vig=(1.0-uv.x*uv.x)*(1.0-uv.y*uv.y);\n    \n    uv.x*=iResolution.x/iResolution.y; \n  \n    vec3 ro = vec3(0.0, 0.36, 0.0); \n    vec3 rd = normalize(vec3(uv,0.65));\n        \n    float t = 0.1;    \n    float minDist = 50.0;\n    \n    for (int i = 0; i < 64; i++){\n        float d = map(ro + rd*t);\n        if(d<0.01){\n            minDist = 0.1;\n            break;  \n        }\n        if(t>25.0) break;//early exist.               \n        t += d;\n    }    \n    \n    vec3 n =rd.y>0.15? vec3(0.0): getNormal(ro + rd * t);\n    vec3 color = col(rd, n, minDist, t);\n \n    fragColor = vec4(sqrt(clamp(color,0.0,1.0))*vig*1.25, 1.0);\n \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}