{
    "Shader": {
        "info": {
            "date": "1504612525",
            "description": "spatio-temporal dithering, click and drag to see/hide banding ",
            "flags": 0,
            "hasliked": 0,
            "id": "XlsyD8",
            "likes": 2,
            "name": "Spatio Temporal Dithering",
            "published": 3,
            "tags": [
                "dither"
            ],
            "usePreview": 0,
            "username": "05gash",
            "viewed": 393
        },
        "renderpass": [
            {
                "code": "precision highp float;\n\nfloat hw_bitdepth = 256.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat lMean = 0.5;\n    float contrast = 1.;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n   \tvec3 L = vec3(lMean + lMean*(uv.x*2.0-1.0)*(1.-uv.y)*contrast);   \n\t//vec3 LSBs = mod(vec3(L*hw_bitdepth),1.0);\n    \n    //LSBs = floor(LSBs*4.0)/4.0;\n    \n    float spatial_dither = step(0.5,texture(iChannel0, uv*4.0 + mod(vec2(iFrame*19, iFrame*13),1.0)).x);\n    \n    vec3 bit_h = mod(floor(L.xyz*hw_bitdepth*2.0),2.0); //the 9th bit\n    vec3 bit_l = mod(floor(L.xyz*hw_bitdepth*4.0),2.0); //the 10th bit\n \n    L = floor(L*hw_bitdepth)/hw_bitdepth; //just in case :)\n    \n    \n    float flicker = mod(float(iFrame),2.0); //0. every other frame\n    vec3 full_bit = flicker * bit_h * bit_l;\n    vec3 half_bit = ceil((mod(flicker + 1.0,2.0) * bit_h) + (flicker * mod(bit_h + bit_l, 2.0) ) / 2.0);\n    \n    \n    if(fragCoord.x > iMouse.x){\n        L += (full_bit + spatial_dither * half_bit)/256.0;\n    }\n    \n    fragColor.xyz = L;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}