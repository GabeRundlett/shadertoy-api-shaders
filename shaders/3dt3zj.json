{
    "Shader": {
        "info": {
            "date": "1568936530",
            "description": "Parameters:\nJULIA/Mandelbrot: z=z^d+c\nd=2;\nd=3;\nd=4;\nSome interactions with mouse position.\n\nI will probably come back and do some decorations in the future.",
            "flags": 0,
            "hasliked": 0,
            "id": "3dt3zj",
            "likes": 0,
            "name": "Mandelbrot Ex",
            "published": 3,
            "tags": [
                "mandelbrot"
            ],
            "usePreview": 0,
            "username": "zxxuan1001",
            "viewed": 384
        },
        "renderpass": [
            {
                "code": "#define JULIA 1\n#define POLYNOMIAL_DEGREE 4\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0*fragCoord.xy - iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    float scale = 2.0;\n    float zoom = exp(-scale*mouse.x);\n    float aTime = iTime*0.5;\n    uv = vec2( uv.x*sin(aTime)-uv.y*cos(aTime), \n             uv.x*cos(aTime)+uv.y*sin(aTime) );\n    vec2 c = vec2(0.0);\n    vec2 z = vec2(0.0);\n#if JULIA==0\n    c = uv*zoom*scale;\n    z = vec2(0.1*cos(aTime), 0.1*sin(aTime)) + mouse;\n#else\n    c = vec2(sin(aTime), cos(aTime)) + mouse ;\n    z = uv*zoom*scale;\n \n#endif\n    float iter = 0.0;\n    vec3 col = vec3(0.0);\n    const float MAX_STEP = 200.0;\n    float pl = 0.0;\n    float dist = 0.0;\n    vec2 rst = vec2(0.0);\n    for (float i = 0.0; i < MAX_STEP; i++)\n    {\n        \n#if POLYNOMIAL_DEGREE==3\n        //(a+bi)^3\n        z = c + vec2(z.x*z.x*z.x-3.0*z.x*z.y*z.y, \n                 3.0*z.x*z.x*z.y-z.y*z.y*z.y);\n#elif POLYNOMIAL_DEGREE==4        \n        //(a+bi)^4\n        z = c + vec2( z.x*z.x*z.x*z.x-6.0*z.x*z.x*z.y*z.y+z.y*z.y*z.y*z.y,\n        \t\t\t  4.0*z.x*z.x*z.x*z.y-4.0*z.x*z.y*z.y*z.y );\n#else\n        //(a+bi)^2\n        z = c + vec2(z.x*z.x-z.y*z.y, 2.0*z.x*z.y);\n#endif\n        dist = dot(z,z);\n        if ( dist>4.0 ) break;\n        \n        pl = iter/MAX_STEP;\n        col += vec3( pl, 0.0, pow(0.1,dist) );\n        iter++; \n    }\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}