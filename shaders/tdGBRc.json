{
    "Shader": {
        "info": {
            "date": "1607616029",
            "description": "Simple 3D-Sphere with light, \nTraining project",
            "flags": 0,
            "hasliked": 0,
            "id": "tdGBRc",
            "likes": 1,
            "name": "3D-Sphere_Brodyaga_rus",
            "published": 3,
            "tags": [
                "sphere"
            ],
            "usePreview": 0,
            "username": "Brodyaga_rus",
            "viewed": 286
        },
        "renderpass": [
            {
                "code": "//O - начало координат\n\nvec3 B = vec3(0.0, 0.0, 5.0); \t//Точка, где находится центр экрана, через который смотрит камера\nfloat x_res = 16.0; \t\t\t//Размер экрана по горизонтали\nfloat y_res = 9.0;\t\t\t\t//Размер экрана по вертикали\n\nfloat A_r = 5.0;\nvec3 A = vec3(0, 0, 10.0);\t\t\t\t//Точка где находится центр сферы\nfloat r = 3.0;\t\t\t\t\t\t\t\t//Радиус сферы\nvec4 A_color = vec4(1.0, 0.0, 0.0, 1.0);\t//Цвет сферы\n\nfloat Light_r = 10.0;\nvec3 Light_pos = vec3(0.0, 13.0, 10.0);\t\t\t//Точка где находится точечный источник света\nvec4 Light_color = vec4(0.8, 0.8, 0.0, 1.0);\t//Цвет точечного источника\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tLight_pos = vec3(sin(iTime)*Light_r + Light_pos.x, 15.0, cos(iTime)*Light_r + Light_pos.z);\n\t//A = vec3(sin(iTime)*A_r + A.x, A.y, cos(iTime)*A_r + A.z);\n\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 d = normalize(vec3((uv.x - 0.5 - B.x / x_res)*x_res, (uv.y - 0.5 - B.y / y_res)*y_res, B.z)); //Луч направленый из начала координат в точку на экране\n\n    vec3 s = A;\n    \n    float D = dot(d,s)*dot(d,s) - (dot(s,s)-r*r);\n\n    if(D >= 0.0)\n    {\n    \tfloat t = (dot(d, s) - sqrt(D));\n        \n        vec3 M = vec3(d.x*t, d.y*t, d.z*t);\n        \n        vec3 n = M - A;\n\t\t\n        vec3 l = Light_pos - M;\n        \n        fragColor = A_color + 0.025 * Light_color * dot(n, l);\n        \n    }\n    else\n    \tfragColor = vec4(0.7, 0.7, 0.7, 1.0);\n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}