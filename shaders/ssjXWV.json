{
    "Shader": {
        "info": {
            "date": "1621076342",
            "description": "Outline demoparty 2021 shader showdown quarterfinals, match #2\n",
            "flags": 64,
            "hasliked": 0,
            "id": "ssjXWV",
            "likes": 6,
            "name": "anticore - Outline SS QF #2",
            "published": 3,
            "tags": [
                "ye"
            ],
            "usePreview": 0,
            "username": "anticore",
            "viewed": 340
        },
        "renderpass": [
            {
                "code": "float ffti(float a) {\n    return texelFetch( iChannel0, ivec2(a,0), 0 ).x;\n}\n\nfloat ffts(float a) {\n    return 0.;\n}\n\nfloat sdBox(vec3 p, vec3 b) {\n    return length(max(abs(p) - b, 0.));\n}\n\nfloat smin(float d1, float d2, float k){\n    float h = max(k - abs(d1 - d2), 0.); \n    return min(d1, d2) - h * h * .25 / k;\n}\n\nvec3 repl(vec3 p, vec3 c, vec3 l) {\n    return p - c * clamp(round(p / c), -l, l);\n}\n\nvec3 rep(vec3 p, vec3 c) {\n    return mod(p + .5 * c, c) - .5 * c;\n}\n\nmat2 rot(float a) {\n    float c = cos(a);\n    float s = sin(a);\n  \n    return mat2(c, s,-s, c);\n}\nfloat PI = acos(-1.);\nfloat hei = 1.;\nfloat sdE(vec3 p) {\n  float e = sdBox(p, vec3(0.1, hei, 0.1));\n  e = smin(e, sdBox(repl(p + vec3(0.4,0,0), vec3(1), vec3(0,.9,0)), vec3(hei / 2., 0.1, 0.1)), 0.1);\n  \n  return e - 0.1;\n}\n\nfloat sdY(vec3 p) {\n    float y = sdBox(p + vec3(0, hei / 2., 0), vec3(0.1, hei / 2., 0.1));\n    vec3 pp = p + vec3(0.3, -hei / 2., 0);\n    pp.xy *= rot(PI / 6.);\n    y = smin(y, sdBox(pp, vec3(0.1, hei / 2., 0.1)), 0.1);\n    pp = p + vec3(-0.3, -hei / 2., 0); pp.xy *= rot(-PI / 6.);\n    y = smin(y, sdBox(pp, vec3(0.1, hei/2., 0.1)), 0.1);\n  \n    return y - 0.1;\n}\n\nfloat dirlight(vec3 n, vec3 ld) {\n     ld = normalize(ld);\n    return clamp(max(dot(n, ld), 0.0), 0., 1.);\n}\n\nfloat spec(vec3 p, vec3 n, vec3 ld) {\n     ld = normalize(ld);\n    vec3 r = reflect(-ld, n);\n    vec3 v = normalize(-p);\n    return pow(max(dot(r,v) , 0.), 100.5);\n}\n\nvec2 map(vec3 p) {\n    p = rep(p + vec3(sin(p.z), cos(p.z), sin(p.y / 3. + iTime)), vec3(10));\n    float y = sdY(p + vec3(-1,0,5));\n    float e = sdE(p + vec3(0,0,5));\n    float ye = min(y, e);\n    ye -= ffti(0.) * 0.3;\n  \n    return vec2(ye,0);\n}\n\nvec3 norm(vec3 p) {\n    float E = 0.001; vec2 k = vec2(1,-1);\n    \n    return normalize(\n    k.xyy * map(p + k.xyy * E).x +\n  k.yyx * map(p + k.yyx * E).x +\n  k.yxy * map(p + k.yxy * E).x +\n  k.xxx * map(p + k.xxx * E).x\n    );\n}\n\nvec3 pal(float t) {\n    vec3 a = vec3(0.5);\n    vec3 b = vec3(0.5);\n    vec3 c = vec3(1);\n    vec3 d = vec3(0, .2, .4);\n    return a + b * cos(6.283 * (c * t + d));\n}\n\nvec3 tr(vec3 ro, vec3 rd) {\n    float td = .1;\n    vec2 h;\n  \n    for (int i = 0; i < 1000; i++) {\n      \n        vec3 ip = ro + rd * td;\n        h = map(ip);\n        td += h.x * 0.3;\n      \n        if (h.x < 0.01) {\n            vec3 inorm = norm(ip);\n            vec3 ld = vec3(0, 2, 10);\n            return (pal(iTime + ip.z / 100. + ip.y / 100.) * dirlight(inorm, ld) + spec(ip, inorm, ld) * 1.) * exp(-td * 0.02);\n        }\n    }\n  \n    return vec3(0);\n}\n\nvec3 cam(vec3 ro, vec3 tar, vec2 uv) {\n    vec3 f = normalize(tar-ro);\n    vec3 l = normalize(cross(vec3(0,1,0), f));\n    vec3 u = normalize(cross(f,l));\n    return normalize(f + l * uv.x + u * uv.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n\tuv /= vec2(iResolution.y / iResolution.x, 1);\n    \n    vec3 ro = vec3(iTime * 2.,3. * sin( iTime), 0.);\n    vec3 tar = vec3(iTime * 2., 0., -5.);\n    vec3 rd = cam(ro, tar, uv);\n  \n\tfragColor = vec4(tr(ro, rd), 1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 27154,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/worinpro/machinedrum-center-your-love"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}