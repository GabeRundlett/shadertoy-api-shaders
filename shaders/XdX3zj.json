{
    "Shader": {
        "info": {
            "date": "1373960067",
            "description": "yellow-blue: original texture\nblue-green: displacement shrink\ngreen-red: displacement inflate\nred-cyan: differential shrink\ncyan-red: differential inflate",
            "flags": 0,
            "hasliked": 0,
            "id": "XdX3zj",
            "likes": 14,
            "name": "emphasing textures",
            "published": 3,
            "tags": [
                "texture"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 2221
        },
        "renderpass": [
            {
                "code": "// try \"true\" if your browser allows loops of variable length\n#define VariableLoop 0\n\n#define maxLOD 6.\n#define CENTRED true\n#define EPS .5e-2\n\nfloat level;\n\nvec3 mytex(vec2 uv) \n{\n\tvec3 t0 = texture(iChannel0, uv, 0.).xyz;\n\tvec3 t1 = texture(iChannel0, uv, level).xyz;\n\treturn .5+.5*(t0-t1)*(1.+pow(2.,maxLOD-2.-level));\n\n}\nvec3 mytexg(vec2 uv) \n{\n\treturn texture(iChannel0, uv, level).xyz;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfloat mode = mod(uv.y+.1*iTime,1.);\n\tlevel = maxLOD*uv.x*uv.x;\n\t\n\tif (mod(mode*5.,1.)<.015) \n\t{\n\t\tif (abs(mode-.0)<.003) fragColor = vec4(1.,0.,0.,1.0);\n\t\tif (abs(mode-.2)<.003) fragColor = vec4(0.,1.,0.,1.0);\n\t\tif (abs(mode-.4)<.003) fragColor = vec4(0.,0.,1.,1.0);\n\t\tif (abs(mode-.6)<.003) fragColor = vec4(1.,1.,0.,1.0);\n\t\tif (abs(mode-.8)<.003) fragColor = vec4(0.,1.,1.,1.0);\n\t\treturn;\n\t}\n\t\n   if(abs(mode-.5)>.1)\n\t{\n\t\tvec3 tex,texx,texy,texmx,texmy;\n\t\tvec2 uvx,uvy,uvmx,uvmy;\n\t\tuvx  = uv+vec2(EPS,0.);\n\t\tuvy  = uv+vec2(0.,EPS);\t\n\t\tif (CENTRED)\n\t\t{\tuvmx = uv-vec2(EPS,0.);\n\t\t\tuvmy = uv-vec2(0.,EPS);\t\n\t\t}\n\t\tvec2 grad; \n\t\tfloat g=1.; \n\t\tbool isin = (mode>.5); \n\t\tfloat sgn = sign(abs(mode-.5)-.3);\n#if VariableLoop\n\t\tint disp = int(200.*(1.+sin(iTime)))/2;\n\t\tif (!isin)  disp /= 4;\n#else\n\t\tconst int disp = 30;\n#endif\n \t\tfor (int i=0; i<disp; i++) \n\t\t{\n\t\t\ttex = mytexg(uv);\n\n\t\t\tif (isin)\n\t\t\t{\n\t\t\t\tuvx  = uv+vec2(EPS,0.);\n\t\t\t\tuvy  = uv+vec2(0.,EPS);\t\n\t\t\t\tif (CENTRED)\n\t\t\t\t{\tuvmx = uv-vec2(EPS,0.);\n\t\t\t\t\tuvmy = uv-vec2(0.,EPS);\t\n\t\t\t\t}\n\t\t\t}\n\t\t\ttexx  = mytexg(uvx );\n\t\t\ttexy  = mytexg(uvy );\n\t\t\tif (CENTRED)\n\t\t\t{\ttexmx = mytexg(uvmx);\n\t\t\t\ttexmy = mytexg(uvmy);\n\t\t\t\tgrad  = sgn*vec2(texx.x-texmx.x,texy.x-texmy.x); \n\t\t\t}\n\t\t\telse\n\t\t\t\tgrad  = sgn*vec2(texx.x-tex.x,texy.x-tex.x); \n\t\t\tuv    += EPS*grad;\n\t\t\tuvx.x += EPS*grad.x;\n\t\t\tuvy.y += EPS*grad.y;\n\t\t\tif (CENTRED)\n\t\t\t\t{\tuvmx.x -= EPS*grad.x;\n\t\t\t\t \tuvmx.y -= EPS*grad.y;\n\t\t\t\t}\n\t\t}\n\t}\n\n\n\tvec3 col;\n\t//col = t1;\n\t//col = .5+.5*(t0-t1)*pow(2.,10.-3.-level);\n\t//col = .5+.25*(t0-t1)*(1.+pow(2.,10.-level));\n\t//col = mytexg(uv);\n\tcol = texture(iChannel0, uv, 0.).xyz;\n\t\n\tfragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}