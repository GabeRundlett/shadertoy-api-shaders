{
    "Shader": {
        "info": {
            "date": "1710163420",
            "description": "A two-dimensional demo. of Julia set with varying complex number c in the quadratic function:\nz <--- z^2+c\nChanging the constant values of the program will lead to different demos.",
            "flags": 0,
            "hasliked": 0,
            "id": "l3lXWl",
            "likes": 0,
            "name": "2D Julia set with varying c",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "julia",
                "animation",
                "quadratic",
                "set"
            ],
            "usePreview": 0,
            "username": "AI",
            "viewed": 101
        },
        "renderpass": [
            {
                "code": "#define MAXITER 500\n#define MAXVAL 5.\n\nvec3 getColorf(float iter,vec2 z){\n\n    vec3 color;\n    color.r=float(mod(iter,10.))/9.;\n    color.b=float(mod(iter/10.,10.))/9.;\n    color.g=.5+.5*sin(iter/10.-log2(1.+log2(1.+dot(z,z))));\n    return color;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv-=.5;\n    uv*=4.; \n    vec2 c=vec2(.7885*cos(.5*iTime),.7885*sin(.5*iTime));\n    vec3 color;\n    vec2 z=uv;\n    float iter=0.;\n    float warp=2.;\n    for(int i=0;i<MAXITER;++i){\n        z=vec2(z.x*z.x-z.y*z.y,warp*z.x*z.y)+c;\n        if (length(z)>MAXVAL) break;\n        iter++;\n    }\n    color=getColorf(iter,z);    \n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}