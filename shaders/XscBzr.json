{
    "Shader": {
        "info": {
            "date": "1523902218",
            "description": "The not-good-at-gaming-Rocketbean i used in my latest visualization video:\nyoutube.com/watch?v=_7r3CWvHnNU\n\nIt's a sort of caricature of the logo of the nerdy Internet-TV Station \"RocketbeansTV\" from Germany.",
            "flags": 0,
            "hasliked": 0,
            "id": "XscBzr",
            "likes": 2,
            "name": "Rocketbean",
            "published": 3,
            "tags": [
                "2d",
                "simple",
                "rocketbean"
            ],
            "usePreview": 0,
            "username": "vapoi",
            "viewed": 952
        },
        "renderpass": [
            {
                "code": "const float fPi = 3.14159;\nconst float fSmile = 0.0;\t// 1.0 for a smiling bean\n\nfloat DistanceP(vec2 p, vec2 segA, vec2 segB)\n{\n    \tvec2 p2 = vec2(segB.x - segA.x,segB.y - segA.y);\n    \tfloat num = p2.x * p2.x + p2.y * p2.y;\n    \tfloat u = ((p.x - segA.x) * p2.x + (p.y - segA.y) * p2.y) / num;\n\n    \tif (u > 1.0 ) {\n    \t\tu = 1.0;\n    \t}\n    \telse if (u < 0.0) {\n    \t\tu = 0.0;\n    \t}\n\n    \tfloat x = segA.x + u * p2.x;\n    \tfloat y = segA.y + u * p2.y;\n\n    \tfloat dx = x - p.x;\n    \tfloat dy = y - p.y;\n\n    \treturn sqrt(dx*dx + dy*dy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 pMid = vec2(-2.5, -1.5) + uv * vec2(5.0, 3.0);\n    float fTime = iTime + 25.0;\n\n    \tfloat distMid = DistanceP(pMid, vec2(0.0, -0.5), vec2(0.0, 0.5));\n\t\n\t\n\tfloat beanForm = distMid * (1.0 - 0.17 * abs(cos(2.0 + pMid.y * 3.1)));\n\t\n\tbeanForm *= 1.0 - 0.1 * max(0.0, sin(fTime * 2.1)) * max(0.0, sin(-pMid.y * fPi + 0.5)); //clamp(-pMid.y * 3.0, 0.0, 1.0);\n\t\n\tfloat fBean = smoothstep(-0.4, -0.35, -beanForm);\n\tfloat fBeanSoft = smoothstep(-0.4, -0.3, -beanForm);\n\tfloat fBeanSuperSoft = smoothstep(-0.4, 0.05, -beanForm);\n\t\n\t// Augen\n\tvec2 v2Eyes = vec2(abs(pMid.x), pMid.y); \n\t\n\tvec2 v2LookTo = 0.03 * vec2(sin(pMid.x * 3.7 + fTime * 0.91), \n\t\t\t\t\t\t\t\tsin(pMid.x * 4.2 + fTime * 1.03));\n\t\n\tfloat fPupiDist = length(v2Eyes - vec2(0.175, 0.32) + v2LookTo);\n\t\n\tvec2 v2Blink = vec2(1.0, 1.0 + 12.0 * (max(0.0, 3.0 * sin(fTime * 1.7) - 2.9)));\n\tfloat fEyeDist = length(v2Blink * (v2Eyes - vec2(0.175, 0.32)));\n\tfloat fEyesBorder = smoothstep(-0.17, -0.16, -fEyeDist);\n\tfloat fEyes = smoothstep(-0.16, -0.12, -fEyeDist);\n\t\n\tfloat fPupi = smoothstep(-0.08, -0.06, -fPupiDist);\n\tvec3 colEye = mix(vec3(0.0), vec3(1.0) * (1.0 - fPupi), fEyes);\n\tfEyes = max(fEyes, fEyesBorder);\n\t\n\t\n\t// Mund\n\tfloat fMouth = smoothstep(-0.03, -0.005, -abs(pMid.y + (0.1 - 0.27 * fSmile) * (1.0 - cos(pMid.x * fPi * 0.8))));\n\t//fMouth = max(fMouth, clamp(fValue - 0.5, 0.0, 1.0) * 2.0 * smoothstep(-0.11, -0.07, -length(pMid * vec2(0.3, 1.0))));\n\tfMouth = fMouth * fBeanSuperSoft;\n\t\n\t// Helm\n\tfloat fHelmet = smoothstep(-0.5, -0.4, -beanForm);\n\tfHelmet = clamp((fHelmet - \n\t\t\t\t\t min(fBeanSoft, fBeanSoft * (-pMid.y * 3.0 + 3.2)))  // Bohnenkopf nicht bedecken, ganz oben einen Streifen lassen\n\t\t\t\t\t * max(0.0, (pMid.y - 0.05) * 7.5), 0.0, 1.0);\t\t // Helm ist nur am Kopf\n\t\n\tfHelmet += 0.5 * fHelmet * max(0.0, cos(abs(pMid.y * fPi)) - fBean); // Lichteffekt\n\t\n\t// Engine\n\t// 1) Grundform\n\tfloat fEngine = (  0.15 + -pMid.y * 0.8 - abs(pMid.x) * 1.4  \t// shape\n\t\t\t\t\t + 0.2 * (1.0 - cos(pMid.x * 4.6)))\t\t\t\t// swing\n\t\t\t\t\t* smoothstep(-0.75, -0.7, pMid.y + 0.15);\t\t// Bottom\n\n\tfEngine *= 5.0;\t\t// mehr Kontur\n\tfEngine = smoothstep(0.7, 1.0, fEngine);\n\t\n\t// 2) dasselbe nochmal etwas niedriger (y-Achse)\n\tfloat fEngineBottom = (-0.4 + -pMid.y * 1.2 - abs(pMid.x) * 1.25  \t\n\t\t\t\t\t\t   + 0.2 * (1.0 - cos(pMid.x * 4.3)))\n\t\t\t\t\t\t   ;\t\n\tfEngineBottom *= 5.0;\n\tfEngineBottom = smoothstep(0.7, 1.0, fEngineBottom);\t\n\t\n\t// 3) und extrahieren für die endgültige Form\n\tfEngine = fEngine - fEngineBottom;\n\t\n\t// 4) nochmal die Engine für die Kante:\n\tfEngine = \tfEngine * 1.2 - fEngine * \n\t\t\t\t0.4 * smoothstep(0.7, 1.0,\n\t\t\t\t(5.75 * (0.05 + -pMid.y * 0.8 - abs(pMid.x) * 1.4\n\t\t\t\t+ 0.2 * (1.0 - cos(pMid.x * 4.6)))));\n\tfEngine = clamp(fEngine, 0.0, 1.0);\n\t\n\t// 5) Fertig, noch die Bohne bevorzugen:\n\tfEngine = clamp(fEngine - fBeanSoft, 0.0, 1.0);\n\t\n\t\n\t// alle Farben addieren:\n\tvec3 col1 = vec3(0.85, 0.2, 0.2) * (0.8 * fBean + 0.4 * fBeanSuperSoft);\n\tcol1 += vec3(0.85, 0.65, 0.25) * fHelmet;\n\tcol1 += vec3(0.85, 0.65, 0.25) * fEngine * 1.2;\n\tcol1 = mix(col1, colEye, fEyes);\n\tcol1 = mix(col1, vec3(0.0), fMouth);\n\t\n    // background\n\tcol1 = mix(vec3(0.2, 0.3, 0.6), col1, fBean + fHelmet + fEngine);\n\tfragColor = vec4(col1, 1.0);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}