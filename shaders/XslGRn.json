{
    "Shader": {
        "info": {
            "date": "1361084822",
            "description": "One of the more sophisticated demos out there",
            "flags": 0,
            "hasliked": 0,
            "id": "XslGRn",
            "likes": 7,
            "name": "Nyan and Britney Take London",
            "published": 3,
            "tags": [
                "nyan",
                "mix",
                "chroma",
                "flat"
            ],
            "usePreview": 0,
            "username": "mtf",
            "viewed": 1101
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n\r\n\tvec2 uv    = -fragCoord.xy / iResolution.xy;\r\n\tvec2 uvCat =  fragCoord.xy / iResolution.xy;\r\n\tvec2 uvBrit = fragCoord.xy / iResolution.xy; \r\n\t\r\n\tfloat run = .08 + (.32 * abs(sin(iTime)));\r\n\trun = floor(run * 30.0) / 30.0;\r\n\t\r\n\tuvCat = (uvCat - vec2(run,0.0)) / \r\n\t\t    (vec2(1.02,0.9) - vec2(0.5,0.15));\r\n\t\r\n\r\n\tuvCat = clamp( uvCat, 0.0, 1.0 );\r\n\t\r\n\t// look where you're going kitty\r\n\tif( sin(2.0 * iTime) < 0.0){\r\n\t\tuvCat.x = 1.0 - uvCat.x;\r\n\t}\r\n\t\r\n\tfloat ofx = floor( mod( iTime * 12.0, 6.0 ) );\r\n\tfloat ww = 40.0 / 256.0;\r\n\t\r\n\tuvCat.x = (uvCat.x * ww) + (ofx * ww);\r\n\tuvCat.y = 1.0 - uvCat.y;\r\n\t\r\n\tuvBrit.y -= .4;\r\n\t\r\n\tvec4 fg   = texture( iChannel0, uvCat );\r\n\t\r\n\tfloat londonZoom = .4;\r\n\tfloat lz = londonZoom + (floor(sin(iTime/4.0)+1.0) * (1.0-londonZoom));\r\n\t\t\r\n\tvec4 bg   = texture( iChannel1, uv * vec2(lz) );\r\n\tvec4 brit = texture( iChannel2, uvBrit);\r\n\t\r\n\tfloat britMix = 0.6;\r\n\tfloat thresh = .3;\r\n\tif( brit[0] < thresh && \r\n\t   \tbrit[1] > thresh && \r\n\t    brit[2] < thresh ){\r\n\t\t\tbritMix = 0.0;\r\n\t}\r\n\t\r\n\tfloat skyMix = 0.0;\r\n\tfloat skyThresh = .9;\r\n\tif( bg[0] > skyThresh &&\r\n\t    bg[1] > skyThresh &&\r\n\t    bg[2] > skyThresh &&\r\n\t    uv.y  < -.5\r\n\t  \t){\r\n\t\t\tskyMix = 1.0;\r\n\t}\r\n\t\r\n\t//iq contact shadow from comments\r\n\t//16.2.13\r\n\tfloat occ = length( (uv - vec2(-0.25-run,-0.12))*vec2(2.0,6.0) ); \r\n\tbg *= 0.3 + 0.7*smoothstep( 0.3, 0.9, occ );\r\n\r\n\tfloat rr = (sin(iTime) + 1.0)*.5;\r\n\tfloat gg = (sin(iTime  + 4.0)+1.0)*.5;\r\n\tfloat bb = (sin(iTime  + 3.0)+1.0)*.5;\r\n\t\r\n\tvec4 sky = vec4(rr, gg, bb, 1.0);\r\n\tvec4 col = mix(fg, bg, 1.0 - fg.w);\r\n\tvec4 britSky = mix(sky, brit, britMix);\r\n\tcol = mix(col, britSky, skyMix);\r\n\t\r\n\tfragColor = col;\r\n\r\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 14,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png"
                    }
                ],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}