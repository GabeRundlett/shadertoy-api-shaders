{
    "Shader": {
        "info": {
            "date": "1567292884",
            "description": "yep",
            "flags": 32,
            "hasliked": 0,
            "id": "3tBXD3",
            "likes": 2,
            "name": "buffer flower thing",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "dashsc",
            "viewed": 366
        },
        "renderpass": [
            {
                "code": "//http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0, uv).rgb*0.5;\n    uv -= 0.5;\n    uv *= 1.0+sin(iTime*0.6)*0.4;\n    uv += 0.5;\n    col -= mix(col,1.-(texture(iChannel0, uv).rgb)*2.,0.84);\n    float cs = (col.r+col.g+col.b)/3.;\n    col = hsv2rgb(vec3(fract((cs*cs*0.18)+iTime*0.07),1.,cs));\n    \n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.);//texture(iChannel0, uv).rgb;\n    float onep = 0.65/min(iResolution.x,iResolution.y);\n    float circ = 9.+sin(iTime*0.7)*3.;\n    vec2 cen = iResolution.xy/2.;\n    if (distance(cen,fragCoord) < circ && distance(cen,fragCoord) > circ-1.) {\n    //if (distance(vec2(0.5),uv) < edge+onep && distance(vec2(0.5),uv) > edge) {\n    \tcol = vec3(1.+sin(iTime*8.))*0.25;\n    }\n    vec2 buv = uv;\n    buv -= 0.5;\n    buv *= 0.98+sin(iTime*6.)*0.03;\n    buv += 0.5;\n    vec3 bak = texture(iChannel0, buv).rgb;\n \tbuv -= 0.5;\n    buv *= 0.99+0.07*(1.-bak.r);\n    buv += 0.5;\n\n    vec3 bac = texture(iChannel0, buv).rgb;\n    col += mix(col,bac,0.99);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}