{
    "Shader": {
        "info": {
            "date": "1700419573",
            "description": "A new implementation of Archimedean spiral.",
            "flags": 0,
            "hasliked": 0,
            "id": "mtGyzV",
            "likes": 3,
            "name": "Implementing archimedean spiral",
            "published": 3,
            "tags": [
                "sdf",
                "spiral"
            ],
            "usePreview": 0,
            "username": "INCHMAN1900",
            "viewed": 141
        },
        "renderpass": [
            {
                "code": "#define RES iResolution.xy\n#define PI 3.1415926\n#define TAU (2.*PI)\n\nfloat w = .01;\n\nvec3 spiral(vec2 uv, float r) {\n    float a = fract((atan(uv.y, uv.x) + iTime * 10.) / TAU + .5);\n    float l = length(uv);\n    float d = l - (floor(l / r) + a) * r;\n    float c = smoothstep(w, .0, abs(d)) + smoothstep(w, .0, abs(d + r)) + smoothstep(w, .0, abs(d - r));\n    return vec3(c);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord * 2. - RES) / RES.y;\n    fragColor = vec4(spiral(uv, .1), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}