{
    "Shader": {
        "info": {
            "date": "1722195069",
            "description": "a bunch of gradients I use sometimes, from black to white.",
            "flags": 0,
            "hasliked": 0,
            "id": "MfjcDz",
            "likes": 1,
            "name": "bw gradients",
            "published": 3,
            "tags": [
                "tool"
            ],
            "usePreview": 0,
            "username": "01000001",
            "viewed": 81
        },
        "renderpass": [
            {
                "code": "const int num = 18;\n#define pi 3.14159265\n#define phi 1.6180339887\n\nvoid mainImage( out vec4 O, vec2 U ){\n\n    vec2 r = iResolution.xy;\n    vec2 uv = U/r;\n    vec2 cuv = (2.*U-r)/r.y;\n    vec2 muv = (2.*iMouse.xy-r)/r.y;\n    \n    /*\n    if (cos(uv.x*pi*2.*float(num)) > .99){\n        O = vec4(1.-uv.y)*.5;\n        return;\n    }*/\n    \n    float x = uv.y;\n    switch (int(uv.x * float(num))){\n        case 0:\n            O = vec4(\n                sqrt(x),\n                x*x,\n                x,\n                1.\n            );\n            return;\n        case 1:\n            O = vec4(\n                sqrt(x),\n                x,\n                x*x,\n                1.\n            );\n            return;\n        case 2:\n            O = vec4(\n                x,\n                sqrt(x),\n                x*x,\n                1.\n            );\n            return;\n        case 3:\n            O = vec4(\n                x*x,\n                sqrt(x),\n                x,\n                1.\n            );\n            return;\n        case 4: \n            O = vec4(\n                x*x,\n                x,\n                sqrt(x),\n                1.\n            );\n            return;\n        case 5:\n            O = vec4(\n                x,\n                x*x,\n                sqrt(x),\n                1.\n            );\n            return;\n        case 6:\n            O = vec4(\n                x,\n                x*x*x,\n                x*x*x,\n                1.\n            );\n            return;\n        case 7: \n            O = vec4(\n                x*x*x,\n                x,\n                x*x*x,\n                1.\n            );\n            return;\n        case 8: \n            O = vec4(\n                x*x*x,\n                x*x*x,\n                x,\n                1.\n            );\n            return;\n        case 9:\n            O = mix(x*(sin(-x*pi*1.5 + vec4(2.*pi/3.,4.*pi/3.,0,0))), vec4(1), x);\n            return;\n        case 10:\n            O = vec4(\n                x,\n                x,\n                x*x*x,\n                1.\n            );\n            return;\n        case 11:\n            O = vec4(\n                x*x*x,\n                x,\n                sqrt(x),\n                1.\n            );\n            return;\n        case 12:\n            O = vec4(\n                x,\n                x*x*x,\n                x*x,\n                1.\n            );\n            return;\n        case 13:\n            O = vec4(\n                x,\n                x*x,\n                x*x*x,\n                1.\n            );\n            return;\n        case 14:\n            O = vec4(\n                x*x,\n                x,\n                x*x*x,\n                1.\n            );\n            return;\n        case 15:\n            O = vec4(\n                x*x*x,\n                x,\n                x*x,\n                1.\n            );\n            return;\n        case 16:\n            O = vec4(\n                x*x*x,\n                x*x,\n                x,\n                1.\n            );\n            return;\n        case 17:\n            O = vec4(\n                x*x,\n                x*x*x,\n                x,\n                1.\n            );\n            return;\n            \n        default: \n            O = vec4(.1);\n            return;\n                \n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}