{
    "Shader": {
        "info": {
            "date": "1672189113",
            "description": "Clock constructed with distance fields. sdOrientedBox and the smoothMax functions are by @iq and the blackbody function is by @FabriceNeyret2 (modified by me). Simple design now (and loopless!)",
            "flags": 0,
            "hasliked": 0,
            "id": "mls3Rf",
            "likes": 9,
            "name": "Minimalist clock",
            "published": 3,
            "tags": [
                "time",
                "sdf",
                "clock"
            ],
            "usePreview": 0,
            "username": "fishy",
            "viewed": 232
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592653\n#define date (iDate * 1.)\n\n#define rot(t) mat2(cos(t), -sin(t), sin(t), cos(t))\n\nfloat join(float d1, float d2) { return min(d1, d2); }\n\nfloat sdOrientedBox( in vec2 p, in vec2 a, in vec2 b, float th ) // Made by iq\n{\n    float l = length(b-a);\n    vec2  d = (b-a)/l;\n    vec2  q = (p-(a+b)*0.5);\n          q = mat2(d.x,-d.y,d.y,d.x)*q;\n          q = abs(q)-vec2(l,th)*0.5;\n    return length(max(q,0.0)) + min(max(q.x,q.y),0.0);    \n}\n\nfloat sdDisk(vec2 p, float r)\n{\n    return length(p) - r;\n}\n\nfloat sdDiskOutline(vec2 p, float r1, float r2)\n{\n    return abs(length(p) - r1) - r2*0.5;\n}\n\nfloat sdRotatedLine(vec2 p, vec2 start, float offset, float len, float theta, float thick)\n{\n    return sdOrientedBox(p, start + vec2(sin(theta), cos(theta)) * offset, vec2(sin(theta), cos(theta)) * (len + offset), thick);\n}\n\nvec2 radialArray(vec2 p, float r)\n{\n    float t = mod(atan(p.y, p.x), 2.*PI/r)+(r/2.-1.)*PI/r;\n    return vec2(cos(t), sin(t))*length(p);\n}\n\nfloat sd(vec2 p)\n{\n    float seconds = sdRotatedLine(p, vec2(0.0, 0.0), 0.0, 0.15, (floor(date.w)/60.0)*2.0*PI, 0.005);\n    float minutes = sdRotatedLine(p, vec2(0.0, 0.0), 0.0, 0.1, (date.w/60.0/60.0)*2.0*PI, 0.005);\n    float hours = sdRotatedLine(p, vec2(0.0, 0.0), 0.0, 0.06, (date.w/60.0/60.0/12.0)*2.0*PI, 0.005);\n    float centerDisk = sdDisk(p, 0.0025);\n    float outerCircle = sdDiskOutline(p, 0.22, 0.005);\n    \n    float ticks = 1000000.0;\n    ticks = join(ticks, sdRotatedLine(radialArray(p*rot(PI/60.),60.), vec2(0.0, 0.0), 0.2, 0.01, 0., 0.0025));\n    ticks = join(ticks, sdRotatedLine(radialArray(p*rot(PI/12.),12.), vec2(0.0, 0.0), 0.18, 0.03, 0., 0.005));\n    \n    return join(join(join(join(join(seconds, minutes), hours), centerDisk), outerCircle), ticks);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y*0.5;\n    \n    float px = 0.5/iResolution.y;\n    vec4 col = vec4(smoothstep(px, -px, sd(uv)));\n    fragColor = col;\n    //fragColor = vec4(radialArray(uv, PI*1.), 0.0, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}