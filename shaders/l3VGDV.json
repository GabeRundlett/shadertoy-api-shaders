{
    "Shader": {
        "info": {
            "date": "1718283741",
            "description": "A capsule that resizes with the canvas without being stretched.",
            "flags": 0,
            "hasliked": 0,
            "id": "l3VGDV",
            "likes": 0,
            "name": "No Stretch Capsule",
            "published": 3,
            "tags": [
                "simple",
                "basic",
                "beginner",
                "capsule"
            ],
            "usePreview": 0,
            "username": "megabits_mzq",
            "viewed": 73
        },
        "renderpass": [
            {
                "code": "float drawCapsule(in float longSide, in float shortSide, in float differenceXY) {\n    if (longSide < 0.) {\n        differenceXY = -differenceXY;\n    }\n\n    if (abs(longSide) < abs(differenceXY)) {\n        // Space between the circle along the longSide.\n        // Always use the longest distance possible to cover the space.\n        longSide = 0.;\n    } else {\n        // Increase the circle distance along the longSide by differenceXY.\n        longSide -= differenceXY;\n    }\n\n    float rawDistanceToCenter = length(abs(vec2(longSide, shortSide)));\n    return rawDistanceToCenter;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Move the coordinate zero to the center.\n    vec2 centeredCoordinate = fragCoord.xy - iResolution.xy / 2.;\n    \n    float capsuleSize = 0.9;\n\n    float differenceXY = (iResolution.x - iResolution.y) / 2.;\n    if (differenceXY > 0.) {\n        // The resolution is wider than it is tall.\n        float distanceToCenter = drawCapsule(centeredCoordinate.x, centeredCoordinate.y, differenceXY);\n        float relativeDistanceToCenter = distanceToCenter / (iResolution.y / 2.);\n        fragColor = vec4(vec3( step(capsuleSize, relativeDistanceToCenter) ),1.0);\n    } else {\n        // The resolution is taller than it is wide.\n        differenceXY = abs(differenceXY);\n        float distanceToCenter = drawCapsule(centeredCoordinate.y, centeredCoordinate.x, differenceXY);\n        float relativeDistanceToCenter = distanceToCenter / (iResolution.x / 2.);\n        fragColor = vec4(vec3( step(capsuleSize, relativeDistanceToCenter) ),1.0);\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}