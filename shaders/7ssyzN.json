{
    "Shader": {
        "info": {
            "date": "1641825911",
            "description": "staircase-basic line",
            "flags": 0,
            "hasliked": 0,
            "id": "7ssyzN",
            "likes": 2,
            "name": "staircase-basic line",
            "published": 3,
            "tags": [
                "staircasebasicline"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 261
        },
        "renderpass": [
            {
                "code": "//por jorge2017a2\n\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(6.0*antialiasing(0.5),b,d)\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}    \n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\nvec3 DrawFig(vec3 pColObj, vec3 colOut, float distObj )\n{  colOut = mix(colOut,pColObj ,S2( distObj-0.05,0.0)); return colOut;}\n\nvec3 DrawFigSolo(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut; }\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{  vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n\n\nvec3 escalera(vec2 p, vec3 col, float med)\n{   float dfin;\n    vec2 a,b ;\n    float xold;\n    float yold;\n    float y;\n    a=vec2(0.0,0.0);\n    b=vec2(0.0,1.0);\n    dfin=9999.0;\n    \n    xold=0.0;\n    yold=0.0;\n    for(float x=0.0; x<med;x+=0.05)\n    {\n        y=floor(x);\n        a=vec2(xold,yold);\n        b=vec2(x,y);\n        float d1= sdSegment(p,a,b);\n        dfin=min(dfin,d1);\n        xold=x;\n        yold=y;\n    }\n    \n    //col=DrawFigDelgado(vec3(0.0), col, dfin );\n    col= DrawFig(vec3(0.0), col, dfin );\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    uv-=vec2(0.0,-0.5);\n    float esc=8.0;\n    uv*=esc;\n    \n    vec2 uv0=uv;\n    uv.x+=iTime*5.0;\n    //uv.y+=0.5+0.75*sin(iTime*0.5);\n    uv.y+=0.5;\n    //vec3 col=vec3(0.0,0.1,0.8);\n    vec3 col=vec3(1.0);\n    \n    uv.x= opRep1D( uv.x,5.0);\n    col= escalera(uv,col,2.5);\n    col= escalera(vec2(-uv.x,uv.y),col,2.5);\n    \n    uv.y=uv0.y-2.0;\n    uv.x=uv0.x-0.2-iTime;\n    uv.x= opRep1D(uv.x,20.0);\n    col= escalera(uv,col,10.0);\n    col= escalera(vec2(-uv.x,uv.y),col,10.0);\n    \n    col=pow(col,  vec3(0.554545));\n    fragColor = vec4(col,1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}