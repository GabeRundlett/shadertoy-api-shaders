{
    "Shader": {
        "info": {
            "date": "1493308728",
            "description": "quadtree traverser, marks visited squares red, and makes the screen whiter if the ray hits the sphere.\nit has a bug, which may cause some ugly artifacts in 3d.",
            "flags": 0,
            "hasliked": 0,
            "id": "Xs2czK",
            "likes": 33,
            "name": "quadtree traverser",
            "published": 3,
            "tags": [
                "2d",
                "raycast",
                "quadtree"
            ],
            "usePreview": 0,
            "username": "abje",
            "viewed": 2165
        },
        "renderpass": [
            {
                "code": "#define detail 4\n#define steps 50\n\nfloat time;\n\nvec2 ball;\n\nfloat line( vec2 p, vec2 a, vec2 b ) \n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nbool isinbox(vec2 a, vec2 b, float size) {\n    return all(greaterThan(a, b))&&all(lessThan(a,b+size));\n}\n\nfloat box(vec2 pos, float size) {\n    \n    return length(max(vec2(0.0),abs(pos)-size*0.5));\n    \n}\n\nvoid mainImage( out vec4 fragColor,  vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    time = iTime;\n    vec2 pos = (fragCoord.xy * 2.0 - iResolution.xy) /iResolution.y*3.0;\n    ball = vec2(sin(time),cos(time))*(sin(time*1.34)+1.0);\n    vec2 localpos = fract(pos);\n    vec2 floorpos = pos-localpos;\n    float stepsize = 1.0;\n    for (int i=0; i<detail; i++) {\n        if (box(floorpos-ball+stepsize*0.5, stepsize) > 1.0) break;\n        stepsize *= 0.5;\n        floorpos += floor(localpos*2.0)*stepsize;\n        localpos = fract(localpos*2.0);\n        fragColor.y += 0.5*1.0/float(detail);\n    }\n    fragColor.z = max(max(abs(localpos.x-0.5),abs(localpos.y-0.5))*10.0-4.0,fragColor.z);\n\tfragColor -= vec4(step(box(floorpos-ball+stepsize*0.5, stepsize),1.0)); // draw object\n\t//fragColor -= vec4(1.0-step(1.0,length(ball-pos))); // draw object\n    \n    vec4 muv= (abs(iMouse) * 2.0 - iResolution.xyxy) / iResolution.y;\n    if (muv.y < -0.9) {\n        muv = vec4(sin(iTime), cos(iTime),0.0,0.0)+0.5;\n    }\n    \n    \n    int c;\n    float raycol = 0.0;\n    vec2 cam = (muv.zw) * 3.0;\n    vec2 raypos = cam;\n    vec2 dir = normalize(-(muv.zw)+(muv.xy)+0.0001);\n    stepsize = 1.0;\n    float count = 0.0;\n    vec2 mask = vec2(0.0);\n    \n    float dist = 0.0;\n    floorpos = floor(raypos);\n    localpos = raypos;\n    vec2 localfloor = floorpos;\n    \n    \n    \n    //traversing here\n    for (int i = 0; i < steps; i++) {\n        bool len = box(floorpos-ball+stepsize*0.5, stepsize) > 1.0;\n        if (count > float(detail)||dist > 12.0) break;\n        \n        if((max(localfloor.x,localfloor.y) > 1.5||min(localfloor.x,localfloor.y) < -0.5) && count > 0.5) {\n\n            stepsize *= 2.0;\n            count--;\n            floorpos += -localfloor*stepsize/2.0+mask*sign(dir)*stepsize;\n            raypos += 0.001*sign(dir);\n            localpos = mod(raypos/stepsize-mask*sign(dir),2.0)+mask*sign(dir);\n\n            localfloor = floor(localpos);\n            \n\t\t} else\n        if (!len && count <= float(detail)) {\n            stepsize *= 0.5;\n            count++;\n            localpos = (localpos-localfloor)*2.0;\n            localfloor = step(vec2(1.0),localpos);\n            floorpos += localfloor*stepsize;\n            i--;\n        } else {\n        \tif(isinbox(pos,floorpos,stepsize))fragColor.r+=0.3;\n            //coloring\n            \n            vec2 dists = abs((sign(dir)*0.5+0.5)-(localpos-localfloor))*1.0/abs(dir);\n\t\t\t\n            float m = min(dists.x,dists.y);\n\t\t\t\n            mask.x = step(dists.x,m);\n            mask.y = 1.0-mask.x;\n\t\t\t\n            dist += m*stepsize;\n            \n            //draws a line from where it was, to where it ends up,\n            //i do that in the loop for debugging\n    \t\traycol = max(raycol, 1.0-20.0*line(pos,raypos,raypos+m*dir*stepsize));\n            \n            raypos += m*dir*stepsize;\t\t\t\t//moves the ray to the next grid border\n            localpos += m*dir;\t\t\t\t\t\t\n            localfloor += mask*sign(dir);\t\t\t\n            floorpos += mask*sign(dir)*stepsize;\t//moves to the next grid cell\n            \n            //draws a yellow circle around where the ray currently is\n            raycol = max(raycol, 1.0-abs(length(raypos-pos)*20.0-1.0));\n            \n            \n        }\n    }\n    fragColor = max(fragColor,vec4(raycol,raycol,0.0,1.0)) //adds the yellow ray color to the screen\n        +step(float(detail),count)*0.1; //adds white color to the screen if the ray hits something\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}