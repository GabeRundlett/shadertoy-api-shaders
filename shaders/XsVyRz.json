{
    "Shader": {
        "info": {
            "date": "1520852615",
            "description": "inspired by topographical maps",
            "flags": 0,
            "hasliked": 0,
            "id": "XsVyRz",
            "likes": 2,
            "name": "saddleback circles",
            "published": 3,
            "tags": [
                "2d",
                "circles"
            ],
            "usePreview": 0,
            "username": "benhardy",
            "viewed": 584
        },
        "renderpass": [
            {
                "code": "float stepper(float x) {\n    return fract(x*50.0);\n}\nfloat bounce(float x) {\n    return 2.0 * abs(x -0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float aspect = iResolution.y /iResolution.x;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2(0.5,0.5);\n    uv.y *= aspect;\n    vec2 c1 = vec2(0.3 * sin(iTime * 0.25), \n                   0.2 * cos(iTime * 0.75));\n    vec2 c2 = vec2(0.4 * sin(iTime * 1.00), \n                   -0.2 +0.1 * cos(iTime * 0.25));\n    vec2 c4 = vec2(0.1 + 0.5 * sin(iTime * 0.75), \n                   0.3 * cos(iTime * 1.00));\n    vec2 middle = vec2(0.0,0.0);\n    float d1 = length(c1-uv);\n    float d2 = length(c2-uv);\n    float d4 = length(c4-uv);\n    \n    float tdist = 0.7 * (d1 + d2 + d4- length(vec3(d1, d2, d4)));\n    float level = bounce(stepper(pow(tdist, 0.125)));\n    fragColor = vec4(level,level,level, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}