{
    "Shader": {
        "info": {
            "date": "1635065707",
            "description": "noise + mix",
            "flags": 0,
            "hasliked": 0,
            "id": "ssVSRc",
            "likes": 1,
            "name": "入门之路-5",
            "published": 3,
            "tags": [],
            "usePreview": 0,
            "username": "jialouluo",
            "viewed": 199
        },
        "renderpass": [
            {
                "code": "vec2 random(in vec2 _st ){\n    _st = vec2(\n            dot(_st,vec2(127.326,321.324)),\n            dot(_st,vec2(15.31,45.332))\n                    );\n    return 2.0*fract(sin(_st)*432.23) +1.0; //1.0 ~ 3.0\n}\nfloat snoise(vec2 st){ //Gradient Noise\n    vec2 i = fract(st);//取小数\n    vec2 k = floor(st);//向负无穷取整\n    vec2 u = i*i*(3.0-2.0*i);//插值函数\n    return  mix(\n                    mix(dot(random(k + vec2(0.0,0.0)),i - vec2(0.0,0.0)),\n                        dot(random(k + vec2(0.0,1.0)),i - vec2(0.0,1.0)),\n                         u.y),\n                    mix(dot(random(k + vec2(1.0,0.0)),i - vec2(1.0,0.0)),\n                        dot(random(k + vec2(1.0,1.0)),i - vec2(1.0,1.0)),\n                         u.y),\n                       u.x\n                   );//二维noise\n}\nfloat Model(vec2 st,float N){\n    st = st*2.-1.;\n    float a = atan(st.x,st.y)+3.14;\n    float r = 6.28/N;\n    return abs(cos(floor(.5+a/r)*r-a)*length(st));\n}\nfloat getModel(vec2 st,vec2 size){\n    return Model(st*size,4.);\n}\nfloat createModel(in vec2 st,in float num[4]){\n    float exy =4.;\n    float exx =2.;\n    st*=vec2(exx,exy);\n    vec2 fi = fract(st);\n    vec2 df = floor(st);\n    fi.x = mix(fi.x,1.-fi.x,step(1.0,df.x));\n    return mix(getModel(fi,vec2(0.83,1.)),getModel(fi - vec2(0.03,0.),vec2(1.0)),num[int(df.y)]);\n}\nfloat getWork(vec2 st,float t){\n    float exy =4.;\n    float exx =2.;\n    float num[4];\n    float j = floor(mod(t,pow(2.,exy)));\n    for(int i=0;i<4;i++){\n        num[i] =0.0;\n        num[i] = step(1.0,mod(j,2.));\n        j = ceil(j/2.);\n    }\n    return createModel(st,num);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 vUv = fragCoord/iResolution.xy;\n    vec2 uv = fract(vUv);\n  //  uv.x*=iResolution.x/iResolution.y;\n    float t = iTime;\n    float c = mix(getWork(uv,t),getWork(uv,t + 1.0),fract(t));\n    c += snoise(uv*7.)*0.08;\n    float angle = atan(uv.y,uv.x);\n    vec3 color = (0.5 + 0.5*cos(6.28*(angle/6.28 +vec3(0.3,0.6,0.9)) ))*c;\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}