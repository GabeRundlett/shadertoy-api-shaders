{
    "Shader": {
        "info": {
            "date": "1621116558",
            "description": "Just a beginner messing around with radial coordinates. It started to look like an eye at some point so I just ran with it.",
            "flags": 0,
            "hasliked": 0,
            "id": "NdBSDc",
            "likes": 10,
            "name": "Eye of the Infinite",
            "published": 3,
            "tags": [
                "beginner"
            ],
            "usePreview": 0,
            "username": "pugbyte",
            "viewed": 483
        },
        "renderpass": [
            {
                "code": "#define M_PI 3.14159\n\nvec2 getRadialUv(vec2 uv) {\n    float angle = atan(uv.x, uv.y);\n\n    vec2 radialUv = vec2(0.0);\n    radialUv.x = angle / (M_PI * 2.0) + 0.5;\n    radialUv.y = length(uv);\n\n    return radialUv;\n}\n\nfloat lid(float x, float openess) {\n    //return cos(x) * abs(sin(iTime*2.0));\n    return cos(x) * openess;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Start at an interesting time where the eyelids are moving frequently\n    float time = iTime + 48.0;\n    \n    vec2 uv = (fragCoord.xy - iResolution.xy * 0.5) / iResolution.yy * 2.0;\n    \n    // Move the whole eye around sporadically\n    float eye_move = sin(texture(iChannel0, vec2(time*0.004)).x-0.5);\n    float eye_move_y = sin(texture(iChannel0, vec2((time+20.0)*0.004)).x-0.5);\n    //uv += vec2(eye_move,0.0);\n    \n    \n    // displace the coordinates using interesting texture\n    float displacement = texture(iChannel0, uv).x*0.1;\n    \n    vec2 uv_anim = uv + vec2(eye_move*1.9+displacement, eye_move_y);\n\n    vec2 radialUv = getRadialUv(uv_anim);\n    \n    float warpedX = fract(radialUv.x - (time*2.0 - radialUv.y*5.0));\n    float warpedY = radialUv.y;\n\n    vec3 color = vec3(warpedX, warpedY, 1.0);\n    \n    float pupil_size = texture(iChannel1, vec2((time-0.3)*0.01)).x*0.5;\n    //pupil_size = 0.1;\n    float pupil = 1.0 - smoothstep(pupil_size, pupil_size + 0.02, radialUv.y);\n    color = mix(color, vec3(.1,.1,.2), pupil);\n    \n    color = mix(color, vec3(.4,.1,.1), min(1.,pow(warpedY*0.6, 8.0)));\n\n    // form the eye lids\n    float lidedge = displacement*0.5;\n    float openess = texture(iChannel1, vec2(time*0.011)).x-0.5;\n    openess *= 2.0;\n    openess = 0.7-clamp(openess, 0.0, 0.7);\n    \n    float lid_move = eye_move*0.5;\n    //lid_move = 0.0;\n    \n    float ulidy = lid(uv.x+lid_move, openess);\n    float upperLid = smoothstep(ulidy-lidedge, ulidy, uv.y);\n    \n    float llidy = -lid(uv.x+lid_move, openess);\n    float lowerLid = 1.0-smoothstep(llidy, llidy+lidedge, uv.y);\n    \n    vec3 lidColor = vec3(.1,.1,.2);\n    vec3 lidHighlight = vec3(0.);\n   \n    \n    float dist = uv.y+0.5 - ulidy;\n    float wrinkles = 30.*(0.5-dist);\n    vec3 upperLidColor = mix(lidColor, lidHighlight, sin(uv.y*wrinkles-lidedge*20.0));\n    \n    dist = abs(uv.y-0.39 - llidy);\n    wrinkles = 30.*(0.5-dist);\n    vec3 lowerLidColor = mix(lidColor, lidHighlight, sin(uv.y*wrinkles-lidedge*20.0));\n    \n    color = mix(color, lowerLidColor, lowerLid);\n    color = mix(color, upperLidColor, upperLid);\n    \n\n    fragColor = vec4(color,1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 3,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 9,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}