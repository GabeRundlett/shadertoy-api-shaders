{
    "Shader": {
        "info": {
            "date": "1654412840",
            "description": "Top: mix\nBottom: new method\nAn alternative to mix that tries to avoid the grey colors that sometimes occur when using mix.\nIt's pretty cheap, just a couple mins and maxes.\nmix sometimes produces better results, eg when blending red and green. ",
            "flags": 0,
            "hasliked": 0,
            "id": "sddyR2",
            "likes": 2,
            "name": "Alternative blend",
            "published": 3,
            "tags": [
                "blending",
                "rbg"
            ],
            "usePreview": 0,
            "username": "El_Sargo",
            "viewed": 240
        },
        "renderpass": [
            {
                "code": "const vec3 col1 = vec3(0.553,0.933,0.090);\nconst vec3 col2 = vec3(0.153,0.118,0.643);\n\n\nvec3 blend(vec3 a, vec3 b, float t){\n    vec3 delta = a - b;\n    float maxDelta =     max(\n        max(\n            abs(delta.x),\n            abs(delta.y)),\n            abs(delta.z)\n    );\n    vec3 s = sign(delta);\n    vec3 c = a - s*maxDelta*t;\n    \n    vec3 minc = vec3(\n        min(a.x, b.x),\n        min(a.y, b.y),\n        min(a.z, b.z)\n    );\n    \n    vec3 maxc = vec3(\n        max(a.x, b.x),\n        max(a.y, b.y),\n        max(a.z, b.z)\n    );\n    \n    return clamp(c,minc,maxc);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col;\n    if(uv.y > 0.5)col = mix(col1, col2, uv.x);\n    else          col = blend(col1, col2, uv.x);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}