{
    "Shader": {
        "info": {
            "date": "1699098441",
            "description": "Un mandelbrot coloreado, el zoom es el eje x del rat√≥n",
            "flags": 0,
            "hasliked": 0,
            "id": "dldyDr",
            "likes": 2,
            "name": "Mandelbrot coloreado",
            "published": 3,
            "tags": [
                "mandelbrot"
            ],
            "usePreview": 0,
            "username": "EnriqueDreams",
            "viewed": 141
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 m = iMouse.xy/iResolution.xy;\n    float zoom = pow(10., -m.x*3.);\n    \n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    \n    vec2 c = uv * zoom * 3.;\n    \n    c += vec2(- .69955, .37999);\n    \n    vec2 z = vec2(0.);\n    \n    float iter = 0.;\n    \n    const float max_iter = 500.;\n    \n    for(float i = 0.; i < max_iter; i++){\n        z = vec2(z.x * z.x - z.y * z.y, 2. * z.x * z.y) + c;\n        \n        if(length(z) > 2.) break;\n        iter++;\n    }\n    \n    float t = iter / 500.;\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c1 = vec3(1.0,1.0,10.);\n    vec3 d = vec3(0.00, 0.33, 0.67);\n    \n    vec3 col;\n    if(length(z)>2.)\n    {\n        col = a + b*cos( 6.28318*(c1*t+d) );\n    }\n    else\n        col = vec3(0.);\n    \n    // Output to screen\n    fragColor = vec4(col,0.5);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}