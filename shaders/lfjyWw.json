{
    "Shader": {
        "info": {
            "date": "1722437782",
            "description": "test your functions",
            "flags": 0,
            "hasliked": 0,
            "id": "lfjyWw",
            "likes": 1,
            "name": "Function preview",
            "published": 3,
            "tags": [
                "function"
            ],
            "usePreview": 0,
            "username": "klemek",
            "viewed": 75
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415927\n#define E .001\n#define SQRT2 1.4142136\n\nfloat function(float x) {\n    return log(-x) * 5.0;\n}\n\n#define ZOOM 3.0\n\nfloat chart(vec2 u) {\n    return clamp(step(u.y, u.x + 0.006 * ZOOM) - step(u.y, u.x - 0.006 * ZOOM), 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n\n    uv *= ZOOM;\n    const float inv_zoom = 1.0 / ZOOM;\n\n    vec3 c = vec3(0.);\n    \n    const vec3 grid_color = 0.6 - vec3(0.1, 0.0, 0.9);\n    \n    c += clamp(0.0\n            + step(abs(uv.x), 0.004 * ZOOM) \n            + step(abs(uv.y), 0.004 * ZOOM) \n            + step(abs(fract(uv.x)), 0.004 * ZOOM) * 0.5\n            + step(abs(fract(uv.y)), 0.004* ZOOM) * 0.5\n            + step(abs(mod(uv.x, 0.25)), 0.004 * ZOOM) * 0.25\n            + step(abs(mod(uv.y, 0.25)), 0.004 * ZOOM) * 0.25,\n         0.0, 1.0)  * grid_color;\n         \n    c += chart(vec2(uv.y,\n        function(uv.x) // HERE\n    ));\n    \n    fragColor = vec4(1.0 - c,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}