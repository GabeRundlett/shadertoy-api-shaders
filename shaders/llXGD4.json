{
    "Shader": {
        "info": {
            "date": "1422347978",
            "description": "Remake of my [url=https://www.shadertoy.com/view/XlfGR4]Voxel land[/url].",
            "flags": 0,
            "hasliked": 0,
            "id": "llXGD4",
            "likes": 17,
            "name": "[2TC 15] Voxel land",
            "published": 3,
            "tags": [
                "2tc15"
            ],
            "usePreview": 0,
            "username": "Nrx",
            "viewed": 1036
        },
        "renderpass": [
            {
                "code": "// Created by Nicolas Robert (Nrx) - 2015\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n\n// Entry for [2TC 15] (= 280 chars or less, as counted by Shadertoy)\nvoid mainImage (out vec4 f, vec2 p) {\n\tf *= 0.;\n\tvec4 r = f, P = f, T;\n\tr.xy = p / iResolution.y - .8;\n\t++r.y;\n\tfor (int i = 0; i < 42; ++i)\n\t\tif ((p.x = cos (P.x * P.y + iTime * 4.) - 15.) < p.y)\n\t\t\tP += T = p.x > (p.y = min (f.x, f.y) * (r.y - 2.)) ? f - f : step (f, f.yxzw) * sign (r),\n\t\t\tf += T / r;\n\tf = .4 + .4 * sin (P) - .2 * T.x - .1 * T.y;\n}\n\n/*\n// Below: simplified version (206 chars)\nvoid mainImage (out vec4 f, vec2 p) {\n\tf *= 0.;\n\tvec4 r, P = f, T;\n\tr.xy = p / iResolution.y - .8;\n\t++r.y;\n\tfor (int i = 0; i < 42; ++i)\n\t\tif (cos (P.x * P.y + iTime * 4.) - 15. < min (f.x, f.y) * (r.y - 2.))\n\t\t\tP += T = step (f, f.yxzw) * sign (r),\n\t\t\tf += T / r;\n\tf = .6 + .4 * sin (P);\n}\n*/\n\n/*\n// Below: code to demonstrate how to move the camera (296 chars)\nvoid mainImage (out vec4 f, vec2 p) {\n\tfloat t = iTime * 4., m = t, h;\n\tvec4 N = vec4 (cos (t), t, -.8, .2),\n\t\tr = vec4 (p, p) / iResolution.y + N.zwxy,\n\t\tS = sign (r),\n\t\tT = (.5 + .5 * S - fract (N)) / r,\n\t\tP = floor (N);\n\tfor (int i = 0; i < 42; ++i)\n\t\tif ((h = cos (P.x * P.y + t) - 9.) < m)\n\t\t\tP += N = h > (m = min (T.x, T.y) * (r.y - 2.)) ? N - N : step (T, T.yxww) * S,\n\t\t\tT += N / r;\n\tf = cos (P) + N.x * .4 + N.y * .2;\n}\n*/",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 19,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}