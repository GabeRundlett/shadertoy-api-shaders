{
    "Shader": {
        "info": {
            "date": "1533755967",
            "description": "My second Shader toy experiment. Another simple fractal. In this excercise I was also experimenting with custom function declaration and usage in glsl.",
            "flags": 0,
            "hasliked": 0,
            "id": "Xt3yWS",
            "likes": 2,
            "name": "Cantor set",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "kristoflovas",
            "viewed": 531
        },
        "renderpass": [
            {
                "code": "//Step on a gradient\nfloat GS (float G, float TS, float SS)\n{\nfloat Pos = G*TS-SS;\nreturn (1.0-floor(clamp(Pos,0.,1.)))*ceil(clamp(Pos,0.,1.));\n}\n//Cantor set level\nfloat CSL(float Coord)\n{\nreturn 1.0 - round((Coord * (1.0 - Coord))*2.25);\n}\n//Render\nvoid mainImage( out vec4 cs, in vec2 fragCoord )\n{\n//Variables\nvec2 uv = (fragCoord/iResolution.xy)*vec2(1.777,1.0)- vec2(0.3885,0.0);\nint T = int(fract(iTime*0.2)*5.)+1;\nfloat PL = CSL(uv.x);\nfloat CS = PL;\nfloat M = clamp(ceil(uv.x)*ceil(1.0-uv.x),0.,1.);\n//Loop\nfor(int i=0;i < T; i++)\n{\nfloat CurLevel = CSL(fract(uv.x*pow(3.,float(i+1))));\nCS = mix(CS,CurLevel*PL,GS(1.0-uv.y,float(T+1),float(i+2)));\nPL *= CurLevel;\n}\n//After loop\nCS = mix(CS,1.0,GS(1.0-uv.y,float(T+1),float(0.0)))*M;\n//Output to screen\ncs = vec4(CS,CS,CS,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}