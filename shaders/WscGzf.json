{
    "Shader": {
        "info": {
            "date": "1568983635",
            "description": "Winning shader made at NOVA 2019 Shader Showdown. First round against LovelyHannibal / Amnesty. Live coded on stage in 25 minutes.\nVideo of the battle: https://youtu.be/xegAFqulK8I?t=319",
            "flags": 0,
            "hasliked": 0,
            "id": "WscGzf",
            "likes": 8,
            "name": "Shader Showdown Nova-19 Round 1",
            "published": 3,
            "tags": [
                "demoscene",
                "abstract",
                "glow",
                "vortex",
                "live",
                "neon",
                "battle",
                "shadershowdown",
                "nova",
                "industrial"
            ],
            "usePreview": 1,
            "username": "evvvvil",
            "viewed": 785
        },
        "renderpass": [
            {
                "code": "// Winning shader made at Nova 2019 Shader Showdown,\n// First round round against LovelyHannibal / Amnesty\n// Video of the battle: https://youtu.be/xegAFqulK8I?t=319\n\n// The \"Shader Showdown\" is a demoscene live-coding shader battle competition.\n// 2 coders battle for 25 minutes making a shader on stage. No google, no cheat sheets.\n// The audience votes for the winner by making noise or by voting on their phone.\n\n// \"It turns out that if you bang 2 halves of a horse together, it does not make the sound of a coconut.\" Sir Ken Dodd\n\nvec2 s,e=vec2(.00035,-.00035);float t,tt,att,g,f;vec3 np;\n#define pi acos(-1.)\nfloat bo(vec3 p,vec3 r){p=abs(p)-r;return max(max(p.x,p.y),p.z);}\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));}\nvec2 fb( vec3 p)\n{\n    vec2 h,t=vec2(bo(abs(p)-vec3(3,0,0),vec3(1)),3);\n    t.x=min(bo(p,vec3(3,.5,.5)),t.x);\n    h=vec2(bo(abs(abs(p)-vec3(3,0,0))-vec3(.4,0,.4),vec3(.3,1.2,.3)),5);\n    h.x=min(bo(abs(p)-vec3(1,0,0),vec3(.1,100,.1)),h.x);\n    h.x=min(length(p-vec3(0,att*.3,0))-2.5,h.x);\n    t=t.x<h.x?t:h;\n    h=vec2(bo(p,vec3(10,.3,.7)),6);\n    t=t.x<h.x?t:h;\n    p.xz*=r2(pi/2.+sin(tt)*pi);\n    h=vec2(bo(abs(p)-vec3(2,2,0),vec3(10,0,0)),6);\n    g+=0.1/(0.1+h.x*h.x*10.);\n    t=t.x<h.x?t:h;\n    t.x*=.5;  \n    return t;\n}\nvec2 mp( vec3 p)\n{\n    p.yz*=r2(sin(p.x*.1+tt)*.75);\n    np=p;\n    np.x=mod(np.x-tt*5.,10.)-5.;\n    att=min(length(p)-(10.+f*6.),15.);\n    for(int i=0;i<6;i++){\n        np=abs(np)-vec3(2,2,0)-att*.3;\n        np.xz*=r2(.3-att*.02);\n    }\n    vec2 h,t=fb(np);\n    h=vec2(.7*bo(p,vec3(1,100,1)),6);\n    t=t.x<h.x?t:h;\n    return t;\n}\nvec2 tr( vec3 ro, vec3 rd)\n{\n    vec2 h,t=vec2(.1);\n    for(int i=0;i<128;i++){\n        h=mp(ro+rd*t.x);\n        if(t.x<.0001||t.x>70.) break;\n        t.x+=h.x;t.y=h.y;    \n    }\n    if(t.x>70.) t.x=0.;\n    return t;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(fragCoord.x/iResolution.x,fragCoord.y/iResolution.y);\n    uv -= 0.5;uv/=vec2(iResolution.y/iResolution.x,1);\n    tt=mod(iTime*.6,37.7);\n    //f=abs(sin(tt))*texelFetch( iChannel1, ivec2(200,0), 0 ).x; \n    vec3 ro=vec3(10,cos(tt)*10.,sin(tt)*40.),\n        cw=normalize(vec3(0)-ro),\n        cu=normalize(cross(cw,vec3(0,1,0))),\n        cv=normalize(cross(cu,cw)),\n        rd=mat3(cu,cv,cw)*normalize(vec3(uv,.5)),co,fo,ld=normalize(vec3(.1,.3,-.1));\n    co=fo=vec3(.5)*(1.-(length(uv)-.4));\n    s=tr(ro,rd);t=s.x;\n    if(t>0.){\n        vec3 po=ro+rd*t,no=normalize(e.xyy*mp(po+e.xyy).x+e.yyx*mp(po+e.yyx).x+e.yxy*mp(po+e.yxy).x+e.xxx*mp(po+e.xxx).x),\n            al=vec3(1,.5,0);\n        if(s.y<5.) al=vec3(0);\n        if(s.y>5.) al=vec3(1);\n        float dif=max(0.,dot(no,ld)),aor=t/50.,ao=exp2(-2.*pow(max(0.,1.-mp(po+no*aor).x/aor),2.)),\n            spo=exp2(5.*texture(iChannel0,vec2(np.y,dot(np.xz,vec2(0.7)))/vec2(16,20)).r),\n            fr=pow(1.+dot(no,rd),4.),\n            sss=0.5+smoothstep(0.,1.,mp(po+ld*.4).x/.4),\n            sp=pow(max(dot(reflect(-ld,no),-rd),0.),spo);    \n        co=mix(sp+al*(.2+ao)*(dif+sss),fo,min(fr,.5));\n        co=mix(co,fo,1.-exp(-.00002*t*t*t));\n    }\n    fragColor = vec4(pow(co+g*.3*vec3(.2,.3,.9),vec3(.45)),1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 47,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}