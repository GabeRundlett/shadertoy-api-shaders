{
    "Shader": {
        "info": {
            "date": "1537305207",
            "description": "A little experiment as I learn to use buffers. Best in full-screen. \nFilter for iChannel0 in BufA has to be set to \"Nearest.\"",
            "flags": 32,
            "hasliked": 0,
            "id": "MlycRt",
            "likes": 14,
            "name": "Data Migration",
            "published": 3,
            "tags": [
                "2d",
                "experiment",
                "buffer"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 883
        },
        "renderpass": [
            {
                "code": "\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.0, 0.0, 0.0);\n    \n    col = texture(iChannel1, uv).xyz;\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define HASHSCALE1 .1031\n\n\nvec3 hsv( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nfloat hash11(float p)\n{\n\tvec3 p3  = fract(vec3(p) * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\nmat2 rot(float a) {\n    return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float t = iTime * 0.05;\n    \n    vec3 col = vec3(0);\n    vec2 uv = vec2(0);\n    \n    for(float i = 2.0; i <= 20.0; i += 1.0)\n    {\n        uv = fragCoord/iResolution.xy;\n        uv *= i * 0.1;\n \n        //uv*= rot(t*1.7 + 3.145);\n        \n   \t\tuv*= rot(-3.1415 / 2.0);\n         \n        uv.x += i + sin(i+t*0.7)*0.2;\n        uv.x += i + sin(i+t*0.7)*0.06;\n        \n    \tuv.y += iTime*0.035;\n        \n    \tfloat n = texture(iChannel0, uv).x;\n   \t\t\n        vec3 c = hsv(vec3(hash11(i), 1.0, 1.0))* 0.93 / i;\n        \n    \tcol += mix(c, vec3(0), ceil(n));\n   \n    }\n    \n    uv = fragCoord/iResolution.xy;\n   \n    col += mix(col, texture(iChannel1, uv).xyz, 0.865);\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}