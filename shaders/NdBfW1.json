{
    "Shader": {
        "info": {
            "date": "1646073827",
            "description": "Water Refraction Effect with Pixel Offset only",
            "flags": 0,
            "hasliked": 0,
            "id": "NdBfW1",
            "likes": 12,
            "name": "Water Effect with Pixel Offset",
            "published": 3,
            "tags": [
                "refraction",
                "distortion",
                "pixel",
                "water",
                "effect",
                "image",
                "offset",
                "spi3lot",
                "watereffect"
            ],
            "usePreview": 0,
            "username": "Spi3lot",
            "viewed": 528
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926535\n#define TAU 2.0 * PI\n\n#define REZ iResolution.xy\n\n// ANGLE... angle where the water comes from, not where it goes!\n#define ANGLE PI * 0.4  \n#define MAX_OFFSET 30.\n#define ZOOM 1.0\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 normalizedPixel = 1.0 / iResolution.xy;\n    vec2 uv = fragCoord * normalizedPixel;\n\n    // Calculating the pixel offset\n    //\n    // Some variables are named noise because I had originally planned to make\n    // a kind of blurry distortion effect but then I tried using a texture\n    // that is not noise, and then (an early version of) this came out!\n    // I discovered this accidentally!\n    vec2 angleTransform = vec2(cos(ANGLE), sin(ANGLE));\n    vec2 movement = iTime * angleTransform * REZ;  // in px per second\n    vec2 noiseUV = mod(movement + fragCoord / ZOOM, iChannelResolution[1].xy);\n    float noise = texelFetch(iChannel1, ivec2(noiseUV), 0).r;\n    vec2 offset = MAX_OFFSET * normalizedPixel * noise;\n\n    // Output to screen\n    fragColor = texture(iChannel0, uv + offset);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}