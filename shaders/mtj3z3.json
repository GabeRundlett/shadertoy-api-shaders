{
    "Shader": {
        "info": {
            "date": "1673654242",
            "description": "yet another matrix\n",
            "flags": 0,
            "hasliked": 0,
            "id": "mtj3z3",
            "likes": 6,
            "name": "yet another matrix",
            "published": 3,
            "tags": [
                "matrix"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 261
        },
        "renderpass": [
            {
                "code": "vec4 f_o_col_char(vec2 o_trn_fc_nor, vec2 o_char){\n    \n    vec2 o_scl_chars = vec2(16.);\n    vec2 o = (o_trn_fc_nor.xy/o_scl_chars.xy)+vec2(1./16.)*o_char;\n    vec4 o_col = texture(iChannel0, o);\n    return o_col;\n}\n\nfloat f_n_rand(float n){\n    n = n*0.338;\n    n = n+n;\n    n = sin(n*231.234)*1223.23;\n    return fract(n);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float n_ratio_x_to_y = iResolution.x / iResolution.y; \n\n    float n = 40.; \n    vec2 o_tres  = vec2(n*n_ratio_x_to_y, n);//target resolution\n    vec2 o_scl_tres = o_tres / iResolution.xy;\n    vec2 o_ires = iResolution.xy * o_scl_tres;\n    vec2 o_fc = fragCoord.xy * o_scl_tres.xy;\n    //o_fc += iTime;\n    float n_idx_fc = (floor(o_fc.x) + floor(o_fc.y)*floor(o_tres.x));// index\n    float n_idx_fc_nor = n_idx_fc / floor(o_tres.x*o_tres.y);\n    \n    float n_ratio_1to_iresx = 1./ o_ires.x;//we can make a lowres AA\n    float n_ratio_1to_iresolutionx = 1./ iResolution.x;//we need the real resolution for AA\n    //needed for anti aliasing ?\n    \n    float n_speed_max = 10.;\n    float n_speed_min = 5.;\n    float n_random_per_x = f_n_rand(floor(o_fc.x));\n    o_fc.y += iTime*(n_random_per_x*n_speed_max+n_speed_min);\n    vec2 o_trn_fc_nor = o_fc.xy / o_ires.xy;\n    vec2 o_trn_mo_nor = iMouse.xy / iResolution.xy;\n    \n    \n    vec2 o_trn_fc_nor_offset = (o_trn_fc_nor - vec2(0.5))*vec2(n_ratio_x_to_y, 1.);\n    vec2 o_trn_mo_nor_offset = (o_trn_mo_nor - vec2(0.5))*vec2(n_ratio_x_to_y, 1.);\n        \n        \n    vec2 o_scl_letters = vec2(16.,16.);\n\n    vec2 o_trn_char = vec2(\n        f_n_rand(floor(o_fc.x))*o_scl_letters.x, \n        f_n_rand(floor(o_fc.y))*o_scl_letters.y\n    );\n    float b_showx = float(n_random_per_x > 0.5);\n    float b_showy = float(f_n_rand(floor(o_fc.y)));\n    \n    vec4 o_col_char = f_o_col_char(fract(o_fc), floor(o_trn_char));\n\n    o_col_char *= b_showy;\n    fragColor = o_col_char.xxxx*vec4(0., 1.,0.,1.);\n    \n    //fragColor = vec4(texture(iChannel0, fragCoord.xy/iResolution.xy).r);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 49,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}