{
    "Shader": {
        "info": {
            "date": "1635668179",
            "description": "Decorative. ",
            "flags": 32,
            "hasliked": 0,
            "id": "fl33z8",
            "likes": 26,
            "name": "Embossed wallpaper",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "mouse",
                "bump"
            ],
            "usePreview": 1,
            "username": "Plento",
            "viewed": 497
        },
        "renderpass": [
            {
                "code": "// Cole Peterson\n\n\n#define R iResolution.xy\n\nvec3 t(vec2 p){\n    return texture(iChannel0, p).xyz;   \n}\n\nfloat height(vec2 p){\n    return t(p).r;\n}\n\nvec3 bump(vec2 uv, float strength){\n    float h = 0.004;\n    \n    vec3 p = t(uv); \n    float dx = height(uv) - height(uv + vec2(h, .0));\n    float dy = height(uv) - height(uv + vec2(0., h));\n    \n    return normalize( vec3(0., 0., -1.) + vec3(dx, dy, 0.)*strength);\n}\n\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    vec2 uv = u / R;\n    vec2 nuv = vec2(u.xy - 0.5*R.xy)/R.y;\n    \n    vec3 lp = vec3(cos(iTime*.5)*.1, sin(iTime*.5)*.1, -1.0);\n    vec3 sp = vec3(nuv, 0.0);\n    vec3 ro = vec3(0, 0, -1.0);\n    vec3 rd = normalize(sp - ro);\n    vec3 ld = lp - sp;\n    \n    float dist = max(length(ld), 0.001);\n    ld /= dist;\n    vec3 objCol = t(uv) * vec3(.99, .95, .9);\n    vec3 norm = bump(uv, 5.);\n  \t\n    float dif = max(dot(norm, ld), 0.);  \n    float spec = pow(max(dot( reflect(-ld, norm), -rd), 0.), 16.); \n    float fal = 0.85 / (dist*dist);\n    \n    vec3 col = (objCol*(dif + .2))*fal;\n    col += vec3(0.6, 0.6, 0.6)*spec*.12*fal;\n        \n    col = pow(col*1.5, vec3(1.6));\n    col *= smoothstep(0.8, .35, abs(nuv.y));\n\n    f = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R iResolution.xy\n#define m vec2(R.x/R.y*(iMouse.x/R.x-.5),iMouse.y/R.y-.5)\n\nvoid mirror(inout vec2 p){\n    p = fract(p)-0.5;\n    vec2 id = floor(p);\n    \n    if(int(id.x) % 2 == 0){\n        p.x *= -1.;\n    }\n    if(int(id.y) % 2 == 0){\n        p.y *= -1.;\n    }\n}\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    vec2 uv = u / R;\n    vec2 uv2 = u / R;\n    vec2 nuv = vec2(u.xy - 0.5*R.xy)/R.y;\n    \n    uv -= .5;\n    uv *= .3;\n    uv.x *= 2.;\n    if(iMouse.z > 0.)\n        uv *= max((m.y+.3) * 5., .1);\n    uv += .5;\n    \n    uv.x-=200.;\n    uv += .4*vec2(cos(iTime*.3)*.3, -iTime*0.05);\n    uv = (uv + vec2(-uv.y,uv.x) ) / 1.4;\n    mirror(uv);\n    \n    float a = -.093;\n    vec2 v = vec2(cos(a), sin(a));\n    \n    for(float i = 0.; i < 35.; i++){\n        uv -= .5;\n        uv *= 1.1;\n        uv += .74;\n        \n        uv = abs(uv - .5);\n        uv.x -= .505;\n        uv -= v*min(0., dot(uv, v))*2.;\n        \n    }\n\n    float k = (dot(uv, uv))*18. + 3.;\n    float t = 1.8*(uv.x*2. + uv.y*3.);\n    vec3 col = .5+.6*cos(vec3(2.4, 2., 5.)*t + k*.6);\n    col -= .3*texture(iChannel0, uv*.5).xyz;\n    col += .2*texture(iChannel0, uv*0.4).xyz;\n    \n    col = mix(col.bbb, col.ggg, .5+.5*sin(iTime*.5 + dot(uv, uv)*12.));\n    \n    col = clamp(col, .25, .9);\n    col = 1.-exp(-col);\n    \n    f = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}