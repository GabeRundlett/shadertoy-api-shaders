{
    "Shader": {
        "info": {
            "date": "1577105356",
            "description": "Srce",
            "flags": 0,
            "hasliked": 0,
            "id": "wlt3RX",
            "likes": 1,
            "name": "Srce",
            "published": 3,
            "tags": [
                "srce"
            ],
            "usePreview": 0,
            "username": "Zigi",
            "viewed": 281
        },
        "renderpass": [
            {
                "code": "float srce( vec2 p )\n{\n    p *= 0.5;\n    p.x = abs(p.x);\n    p.y = -0.15 -p.y*1.2 + p.x*(1.0-p.x);\n    return length(p) - 0.5;\n}\n\nvec3 hsv(float h,float s,float v) { return mix(vec3(1.),clamp((abs(fract(h+vec3(3.,2.,1.)/3.)*6.-3.)-1.),0.,1.),s)*v; }\nfloat pow4(float x) { x *= x; return x * x; }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    //pozadina\n    const float brzinaP = 0.15;\n    const float duzinaP = 2.0;\n    const vec3 maska = vec3(1.0, 0.6, 0.6);\n\n    \n    //srce\n    float velicina =  2.0;// + (1.0 - sqrt(1.0 - sin(iTime) * sin(iTime)));\n    vec3 boja = vec3(1.0, 0.2, 0.1);\n\n    const float debljinaOko = 0.03;\n    const vec3 bojaOko = vec3(1.0);\n\t\n \n    vec2 P = velicina * 2.0 * (fragCoord.xy - iResolution.xy / 2.0) / min(iResolution.x, iResolution.y);\n\tfloat d = srce(P);\n \n    vec3 pozadina = hsv(\n        brzinaP * iTime - d * 0.1 / duzinaP, \n        0.65, \n        0.9);\n\n    boja = mix(maska, pozadina, clamp(d / (debljinaOko / 2.0), 0.0, 1.0));\n\n    boja = mix(bojaOko, boja, clamp(pow4(abs(d / debljinaOko)), 0.0, 1.0));\n\n    \n    fragColor = vec4(mix(boja, pozadina, clamp(d, 0.0, 1.0)),1.0);\n\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}