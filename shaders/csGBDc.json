{
    "Shader": {
        "info": {
            "date": "1698693289",
            "description": "yeah",
            "flags": 2,
            "hasliked": 0,
            "id": "csGBDc",
            "likes": 1,
            "name": "Wiggle Effect from HaxeFlixel",
            "published": 3,
            "tags": [
                "wavy"
            ],
            "usePreview": 1,
            "username": "TheCatWithShaders",
            "viewed": 339
        },
        "renderpass": [
            {
                "code": "const int EFFECT_TYPE_DREAMY = 0;\n\n\t\tconst int EFFECT_TYPE_WAVY = 1;\n\n\t\tconst int EFFECT_TYPE_HEAT_WAVE_HORIZONTAL = 2;\n\n\t\tconst int EFFECT_TYPE_HEAT_WAVE_VERTICAL = 3;\n\n\t\tconst int EFFECT_TYPE_FLAG = 4;\n\n\t\t\n\n\t\tconst int effectType = 4;\n\n   const float uSpeed = 2.25;\n\nconst float uFrequency = 5.0;\n\nconst float uWaveAmplitude = 0.1;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n\n{\n\n    vec2 uv = (fragCoord-iResolution.xy)/iResolution.y;\n\n    vec2 pt = uv;\n\n    if (effectType == EFFECT_TYPE_DREAMY) \n\n    {\n\n        float offsetX = sin(pt.y * uFrequency + iTime * uSpeed) * uWaveAmplitude;\n\n        pt.x += offsetX;\n\n    }\n\n    else if (effectType == EFFECT_TYPE_WAVY) \n\n    {\n\n        float offsetY = sin(pt.x * uFrequency + iTime * uSpeed) * uWaveAmplitude;\n\n        pt.y += offsetY;\n\n    }\n\n    else if (effectType == EFFECT_TYPE_HEAT_WAVE_HORIZONTAL)\n\n    {\n\n        float x = sin(pt.x * uFrequency + iTime * uSpeed) * uWaveAmplitude;\n\n        pt.x += x;\n\n    }\n\n    else if (effectType == EFFECT_TYPE_HEAT_WAVE_VERTICAL)\n\n    {\n\n        float y = sin(pt.y * uFrequency + iTime * uSpeed) * uWaveAmplitude;\n\n        pt.y += y;\n\n    }\n\n    else if (effectType == EFFECT_TYPE_FLAG)\n\n    {\n\n        float y = sin(pt.y * uFrequency + 10.0 * pt.x + iTime * uSpeed) * uWaveAmplitude;\n\n        float x = sin(pt.x * uFrequency + 5.0 * pt.y + iTime * uSpeed) * uWaveAmplitude;\n\n        pt.x += x;\n\n        pt.y += y;\n\n    }\n\n    vec2 texCoord = (pt + 1.0) / 2.0;\n\n    fragColor = texture(iChannel0, texCoord);\n\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}