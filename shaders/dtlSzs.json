{
    "Shader": {
        "info": {
            "date": "1675267147",
            "description": "multiplication",
            "flags": 0,
            "hasliked": 0,
            "id": "dtlSzs",
            "likes": 2,
            "name": "multiplication dist point",
            "published": 3,
            "tags": [
                "multiplication"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 147
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 o_fc = (fragCoord.xy - iResolution.xy*.5)/iResolution.y;\n    vec2 o_mc = (iMouse.xy - iResolution.xy*.5)/iResolution.y;\n    vec2 o_fc_nooff = (fragCoord.xy)/iResolution.xy;\n    vec2 o_mc_nooff = (iMouse.xy )/iResolution.xy;\n    \n    vec2 o_scl = vec2(9., 9.);\n    vec2 o_scl_one_nor = 1./o_scl;\n    float n_its = o_scl.x*o_scl.y;\n        \n    float n_d_sum = 0.;\n    float n_d_sum_pow = 0.;\n    float n_d_min = 1.;\n    float n_d_sum_currlast = 0.;\n    float n_d_last = 0.;\n    float n_d;\n    float n_d_prod = 1.;\n    float n_d_prod_pow = 1.;\n    float n_it_min = 0.;\n    float n_tau = 6.2831;\n    float n_d_mouse = length(o_fc - o_mc);\n    for(float n_it = 0.; n_it < n_its; n_it+=1.){\n            float n_x = mod(n_it , o_scl.x);\n            float n_y = floor(n_it / o_scl.x);\n            float n_it_nor = n_it /n_its;\n            \n            vec2 o_p = vec2(n_x, n_y);\n            vec2 o_p_nor = (o_p / o_scl)+o_scl_one_nor*.5;\n            float n_d_mouse2 = length(o_p_nor-o_mc_nooff);\n            n_d = length(o_fc_nooff-o_p_nor);//*min(o_scl.x, o_scl.y);\n            n_d_sum += n_d;\n            n_d_prod *= (1.-n_d);\n            n_d_mouse2 = n_d_mouse2*1.2;\n            n_d_prod_pow *= pow(n_d*(2.+(sin(iTime*2.)*0.5+0.5)), 1.);//n_d_mouse*20.);//(sin(n_it_nor*n_tau*33.+iTime))*3.);\n            n_d_sum_pow += pow(n_d,1.);//pow(n, 1./(sin(iTime)*.5+.5+.5));\n            if(n_d < n_d_min){\n                n_d_min = n_d;\n                n_it_min = n_it;\n            }\n            n_d_sum_currlast = (n_d + n_d_last)/2.;\n            n_d_last = n_d_sum_currlast;//n_d;\n\n    }\n    float nmin = pow(n_d_min, 1./2.);\n    float n_d_sum_nor = n_d_sum / n_its;\n    float n_d_sum_pow_nor = n_d_sum_pow / n_its;\n    //fragColor = vec4(n_d_prod*n_its*10000000000000000000.);\n    fragColor = vec4(pow(n_d_prod_pow,1.));//sin(iTime)*0.2));\n    //fragColor = vec4(n_d_mouse);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}