{
    "Shader": {
        "info": {
            "date": "1583528298",
            "description": "play with BEAM_X and BEAM_Y !\n\nuse t for the function and toff for animating the function.",
            "flags": 0,
            "hasliked": 0,
            "id": "wlVXWy",
            "likes": 5,
            "name": "point vibes",
            "published": 3,
            "tags": [
                "2d",
                "oscilloscope"
            ],
            "usePreview": 0,
            "username": "artemis",
            "viewed": 325
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n#define TAU (3.14159265359 * 2.0)\n\n// change BEAM_X and BEAM_Y :)\n// use t wave functions and toff for dynamic phase shifts\n#define BEAM_X (cos(t * 4.0 + toff / 2.0) * 250.0 + cos(t) * 250.0) / 2.0\n#define BEAM_Y (sin(t * 3.0 - toff / 2.0) * 250.0) / 2.0\n//#define BEAM_X cos(t) * 125.0\n//#define BEAM_Y sin(t) * 125.0\n\n\n#define FALLOFF_START 1.0\n#define DECAY_START 0.1\n#define DECAY 20.0\n#define LP_STEP 0.02\n\n\nfloat sRGB(float x) {\n    if (x <= 0.00031308)\n        return 12.92 * x;\n    else\n        return 1.055*pow(x,(1.0 / 2.4) ) - 0.055;\n}\n\nfloat saw(float t) {\n \treturn t - floor(t);   \n}\n\nfloat tri(float t) {\n    return 2.0 * abs(t - floor(t + 0.5));\n}\n\n\nfloat electron_beam(vec2 pix, float t, float toff) {\n    float beam_x = BEAM_X;\n    float beam_y = BEAM_Y;\n\n    float dist = distance(pix, vec2(beam_x, beam_y));\n    \n    float power = 1.0 - (min(toff * 2.0 - t, DECAY) / DECAY);\n    \n    float falloff = power * FALLOFF_START;\n    \n    return min(power, power * (falloff * falloff) / (dist * dist));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 center = iResolution.xy / 2.0;\n    \n    float scale = 512.0 / iResolution.x;\n    \n    vec2 uv = (fragCoord - center) * scale;\n        \n    float beam = 0.0;\n    float init_t = iTime - mod(iTime, LP_STEP);\n    \n    for (int i = 0; i < 400; i++) {\n        float t = float(i) * LP_STEP;\n        beam += electron_beam(uv, init_t - t, init_t / 2.0);\n    }\n    \n    vec3 beam_col = vec3(sRGB(beam * 0.25), sRGB(beam), sRGB(beam));\n    \n    fragColor = vec4(beam_col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}