{
    "Shader": {
        "info": {
            "date": "1633595421",
            "description": "Mountains at dawn\nUsing Yonatan clouds/mountains combined field",
            "flags": 0,
            "hasliked": 0,
            "id": "sdtSz2",
            "likes": 13,
            "name": "Mountains at dawn",
            "published": 3,
            "tags": [
                "clouds",
                "mountains"
            ],
            "usePreview": 0,
            "username": "guil",
            "viewed": 440
        },
        "renderpass": [
            {
                "code": "// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Created by S. Guillitte 2021\n \n\nmat2 rot(float a) {\n\treturn mat2(cos(a),sin(a),-sin(a),cos(a));\t\n}\n\nvec3 l = vec3(1.);\n\n//Yonatan clouds/mountains combined field\nfloat field(in vec3 p) {\n\t\n\tfloat s=2.,e,f,o=1.;\n\t\n\tfor(e=f=p.y;s<1e2;s*=1.6)\n            p.xz*=rot(s),\n            e+=abs(dot(sin(p*s)/s,.4*l)),\n            f+=abs(dot(sin(p.xz*s*.5)/s,l.xz));\n\to+=(f>.001?e:-exp(-f*f));\n    return max(o,0.);\n}\n\n\nvec3 raycast( in vec3 ro, vec3 rd )\n{\n    float t = 3.5;\n    float dt = .0018;\n    vec3 col= vec3(0.);\n    for( int i=0; i<100; i++ )\n\t{        \n        float c = field(ro+t*rd);               \n        t+=dt*(c*c*2.5);\n        dt *= 1.025;\n        col = .95*col+ .08*vec3(c*c*c, c*c, c);\t\n    }\n    \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat t = iTime;\n    vec2 q = fragCoord.xy / iResolution.xy;\n    vec2 p = -1.0 + 2.0 * q;\n    p.x *= iResolution.x/iResolution.y;\n    \n\n    // camera\n\n    vec3 ro = vec3(2.);\n   \n    ro.yz*=rot(-1.2); \n    ro.y +=3.;\n    ro.xz*=rot(0.1*t);\n    \n    vec3 ta = vec3( 0.0 , 0.0, 0.0 );\n    vec3 ww = normalize( ta - ro );\n    vec3 uu = normalize( cross(ww,vec3(0.0,1.0,0.0) ) );\n    vec3 vv = normalize( cross(uu,ww));\n    vec3 rd = normalize( p.x*uu + p.y*vv + 4.0*ww );\n    ro.x -=t*.4;\n\n\t// raymarch \n    \n    vec3 col = raycast(ro,rd);\n    \n\t\n\t// shade\n    \n    col =  .5 *(log(1.+col));\n    col = clamp(col,0.,1.);\n    fragColor = vec4( col, 1.0 );\n\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}