{
    "Shader": {
        "info": {
            "date": "1548370331",
            "description": "Pulse Synesthesia",
            "flags": 0,
            "hasliked": 0,
            "id": "ws23zD",
            "likes": 0,
            "name": "Wavy MOFIABLE2",
            "published": 3,
            "tags": [
                "compatible"
            ],
            "usePreview": 0,
            "username": "TheHybridProject",
            "viewed": 400
        },
        "renderpass": [
            {
                "code": "\nvec2 GetOffsetFromCenter(vec2 screenCoords, vec2 screenSize)\n{\n    vec2 halfScreenSize = screenSize / 2.0;\n    \n\treturn (screenCoords.xy - halfScreenSize) / min(halfScreenSize.x, halfScreenSize.y);\n}\n\nfloat Multiply =1.0;\nfloat EffectDuration = 1.0;    // SPEEEED\nfloat EffectFadeInTimeFactor = 0.5;\nfloat EffectWidth = 0.4;\nfloat EffectMaxTexelOffset = 20.0;\n\nvec2 GetDistortionTexelOffset(vec2 offsetDirection, float offsetDistance, float time)\n{\n    float progress = mod(time, EffectDuration) / EffectDuration/0.5; //ScreenSize\n    \n    float halfWidth = EffectWidth*Multiply / 2.0; // 2\n    float lower = 1.0 - smoothstep(progress - halfWidth, progress, offsetDistance);\n    float upper = smoothstep(progress, progress + halfWidth, offsetDistance);\n    \n    float band = 1.0 - (upper + lower);\n    \n    \n    float strength = 1.0 - progress;\n    float fadeStrength = smoothstep(0.0, EffectFadeInTimeFactor, progress);\n    \n    float distortion = band * strength * fadeStrength;\n    \n    \n    return distortion * offsetDirection * EffectMaxTexelOffset*Multiply;\n}\n\n\nvec3 GetTextureOffset(vec2 coords, vec2 textureSize, vec2 texelOffset)\n{\n    vec2 texelSize = 1.0 / textureSize;\n    vec2 offsetCoords = coords + texelSize * texelOffset;\n    \n    vec2 halfTexelSize = texelSize / 2.0;\n    vec2 clampedOffsetCoords = clamp(offsetCoords, halfTexelSize, 1.0 - halfTexelSize);\n    \n    return texture(iChannel0, clampedOffsetCoords).rgb;\n}\n\n\nvoid mainImage(out vec4 result, in vec2 fragCoord)\n{\n    float time = iTime;\n    \n    vec2 screenCoords = fragCoord.xy;\n    vec2 screenSize = iResolution.xy;\n    \n    \n    vec2 offsetFromCenter = GetOffsetFromCenter(screenCoords, screenSize);\n    vec2 offsetDirection = normalize(-offsetFromCenter);\n    float offsetDistance = length(offsetFromCenter);\n    \n    \n    vec2 offset = GetDistortionTexelOffset(offsetDirection, offsetDistance, time);\n    \n    \n    vec2 coords = (fragCoord.xy / screenSize);\n    coords.y = 1.0 - coords.y;\n    \n    vec3 background = GetTextureOffset(coords, screenSize, offset);\n    \n\tresult = vec4(background, 1.0);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}