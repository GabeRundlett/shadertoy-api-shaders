{
    "Shader": {
        "info": {
            "date": "1678948847",
            "description": "A fractal rug pattern.",
            "flags": 8,
            "hasliked": 0,
            "id": "DdV3Rt",
            "likes": 6,
            "name": "Pink ribbon rug",
            "published": 3,
            "tags": [
                "fractal",
                "music",
                "rug"
            ],
            "usePreview": 0,
            "username": "jarble",
            "viewed": 226
        },
        "renderpass": [
            {
                "code": "vec2 triangle_wave(vec2 a){\n    return abs(fract((a+vec2(1.,0.5))*1.5)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 8.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    float time1 = iTime/64.;\n    uv += vec2(time1/2.0,time1/3.0)/t1/4.0+(vec2(cos(time1),sin(time1)))*8./t1;\n    float scale = 1.5;\n    float p1 = 1.;\n    vec2 t2 = vec2(0.);\n    vec3 col1 = col;\n    float multiplier = 1.5;\n    if(iMouse.z>.5)\n    uv = uv.xy + iMouse.xy / iResolution.xy/t1;\n    for(int k = 0; k < 9; k++){\n        uv += p1*t2;\n        uv /= -scale*sign(uv.x-.5);\n        //uv = (fract(vec2(uv+vec2(.5,1.5))*2.)-.5)/2.;\n        t2 = triangle_wave(uv-.5);\n        uv = -p1*(t2+triangle_wave(uv.yx));\n        p1 *= -1.;\n        col.x = max(uv.y+uv.x-col.x*multiplier,col.x*(multiplier));\n        \n        //awesome colors!\n        //if(uv.x>0.)\n        \n        col = abs(col.yzx-vec3(1.-col.x))/multiplier;\n    }\n    fragColor =\n        vec4(col*multiplier,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float fmod(float a, float b){\n    //divide by powers of 2 to get interesting rhythms\n    //float a1 = a;\n    //a /= 1. + mod(floor(a1/32.),2.);\n    //a /= 1. + mod(floor(a1/16.),2.);\n    //a /= 1. + mod(floor(a1/8.),2.);\n    //a /= 1. + mod(floor(a1/4.),2.);\n    //a /= 1. + mod(floor(a1/2.),2.);\n    return\n        mod(floor(a),b)\n        //mod(floor(a+floor(a/b)),b)\n        //mod(floor(a)+floor(a+floor(a/b)),b)\n    ;\n}\n\nvec2 mainSound(int samp, float time){\n  \n  float tempo = 7.*2.;\n  time /= tempo;\n  //for(int i = 0; i < 5; i++){ time += fmod(floor(time/4.)/4.,2.); }\n  \n  //time *= 2.;\n  float s1 =\n      7.,\n  s2 = 7.,\n  t=time,\n  m1 =\n      fmod(time*s2,s2)\n  ;\n  for(int i = 0; i < 4; i++){\n      t = t+m1;\n      m1 = fmod((time/s2+m1),s2);\n      t *= 2./(1.+fmod(t*s2,2.));\n      //t = t/(1.+fmod(m1+floor(t-m1)/s1,2.));\n  }\n  \n  float\n  m4 =\n      fmod(t*s1+s1,s2)\n  ,\n  m3 =\n      fmod((t+m4)*s1/(m1+.5),s2)\n      //fmod((t+m4)*s1/(m1+.5+fmod(t*s1,s1)),s2)\n  ;\n\n  t *=\n      s1*s1\n  ;\n\n  float m2 =\n      1. + fmod(t/s1,s1);\n  ;\n  \n  float a=\n      pow(log((fract(t/s1)/8.)),2.)\n  ;\n  \n  float nb = time*tempo*pow(2.,(7.+m3+m2-m1)/5.+6.5)/2.;\n\n  return\n      abs(.5-vec2(fract(nb*.998),fract(nb)))*a\n      \n      //log(abs(a/8.-abs(.5-vec2(fract(nb*.998),fract(nb)))*a))\n  ;\n\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}