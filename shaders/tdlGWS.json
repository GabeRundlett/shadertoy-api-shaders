{
    "Shader": {
        "info": {
            "date": "1547412480",
            "description": "learning about shaders",
            "flags": 0,
            "hasliked": 0,
            "id": "tdlGWS",
            "likes": 1,
            "name": "theBeginning",
            "published": 3,
            "tags": [
                "learn",
                "explore"
            ],
            "usePreview": 0,
            "username": "newpublicvoid",
            "viewed": 336
        },
        "renderpass": [
            {
                "code": "#define ORANGE vec3(1.0, 0.4, 0.1)\n#define YELLOW vec3(1.0, 0.8, 0.3)\n#define BLACK vec3(.0, 0.0, 0.0)\nconst vec2 PALM_CENTER = vec2(.35, .75);\nconst vec2 SUN = vec2(1.4, .05);\nconst vec2 Ctr = vec2(0.5, 0.5);\n\n// runs from clean at every pixel   \nvoid mainImage( out vec4 cout, in vec2 fragCoord )\n{\n vec3 rgb = vec3(0.0, .3, 0.0 );\n    \n vec2 p = fragCoord.xy / iResolution.xy;\n //exploring iResolution    \n float xtemp = fragCoord.xy.x;\n float ytemp = fragCoord.xy.y;\n vec2 tempvec2 = vec2(xtemp / 500.0, ytemp / 400.0);\n p = tempvec2;    \n    \n    // col = col * 0.5;\n    //rgb+= p.y ;  \t// from rgb, r&b saturate linear to 1,1,1 \n    //rgb*= p.y ;  \t// from 0,\t r&b static   slower to rgb  \n\n    rgb*= (p.x + p.y) - .1 ;// diag drkr , y is \"heard\"\n    // rgb*= p.y ;\n\n    cout = vec4(rgb, 1.0);\n    //if(p.x < .1 || p.x > .9 ) cout = vec4(BLACK, 1.0);// frame\n    //if(p.x < .1 || p.x > .9 ) cout = vec4(BLACK, 1.0);\n    //if(p.x>Ctr.x-.1  && p.x< Ctr.x+.1 ) cout = vec4(YELLOW, 1.0);//stripe\n\n    /*  vec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 dst = uv - PALM_CENTER;\n    \n    float head_rad = .2;\n    head_rad += .1 * sin(atan(dst.x, dst.y) * 10.0 - 20. * dst.x + sin(iTime));\n    head_rad += .0125 * sin(atan(dst.y, dst.x) * 100.0);\n    float head = smoothstep(head_rad, head_rad + .02, length(dst));\n    \n    float trunk_width = .0125 + cos(dst.y * 250.) * 0.001;\n    trunk_width += exp(-20. * uv.y);\n    float trunk = smoothstep(trunk_width, trunk_width + .005,\n                             abs(dst.x - sin(dst.y * 2.) * .2));\n    trunk = step(0.5, trunk + step(0., dst.y));\n    \n    float lsun = length(uv * vec2(iResolution.x/iResolution.y, 1.) - SUN);\n    \n    float f = 1.0 - smoothstep(.1, .15, lsun);\n    f += 1.0 - pow(lsun, .75);\n    vec3 clr = mix(ORANGE, YELLOW, f) * head * trunk;\n    //clr = pow(clr, vec3(length(uv - vec2(.8, .1))));\n    \n    fragColor = vec4(vec3(clr), 1.);\n*/\n    \n    \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}