{
    "Shader": {
        "info": {
            "date": "1650160782",
            "description": "revision shader jam 2022",
            "flags": 32,
            "hasliked": 0,
            "id": "NtScDG",
            "likes": 10,
            "name": "Texture Chaos",
            "published": 3,
            "tags": [
                "livecode"
            ],
            "usePreview": 0,
            "username": "blackle",
            "viewed": 338
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    fragColor = texelFetch(iChannel0,ivec2(fragCoord),0 );\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "\nvec3 plane(vec3 cam, vec3 ini, vec3 o, vec3 n, vec3 tn) {\n  float t = dot(o-ini, n)/dot(n,cam);\n  vec3 p = (cam*t+ini)-o;\n  vec3 l1 = normalize(cross(n,tn));\n  vec3 l2 = normalize(cross(n,l1));\n  return vec3(dot(p,l1),dot(p,l2),t);\n}\n\n#define ro(r) mat2(cos(r),sin(r),-sin(r),cos(r))\nfloat bpm = 145.;\nfloat mul = 6.*60./145.;\nfloat linedist(vec2 p, vec2 a, vec2 b) {\n  float k = dot(p-a,b-a)/dot(b-a,b-a);\n  return distance(p,mix(a,b,clamp(k,0.,1.)));\n}\n\nfloat fakefft(float k) {\nfloat mul = fract(sin(k*564.)*353.);\n    return pow(1.-k,3.) * (.5+.5*sin(iTime*2.*k*(4.4544+mul)))*1.5;\n}\n\n\nfloat love(vec2 p) {\n  //p.x=abs(p.x);\n  p.x = sqrt(p.x*p.x+.001);\n  p.y+=.1;\n  return linedist(p,vec2(.2,.2),vec2(-0.2,-.2))-.2;\n}\n\nvec4 tex(vec2 crds, int i) {\n  float pulse = iTime - floor(iTime*mul)/mul;\n  if(i%3==0)crds *= ro(iTime);\n  crds.x+=.5;\n  crds*=.6+pulse*.5;\n  if(abs(crds.y)>.5||abs(crds.x)>.5)return vec4(0);\n  if(i%3==0) return texture(iChannel1,crds+.5);\n  if(i%3==1) return texture(iChannel2,crds+.5);\n  if(i%3==2) return texture(iChannel3,crds+.5);\n  /*\n  if(i%6==4) return texture(texChecker,crds+.5);\n  if (length(crds)>.5)return vec4(0);\n  if(i%6==1) return texture(texRevision,crds+.5).xyzy;\n  //float d = linedist()\n  if (length(crds-vec2(.7,-.2))<.5)return vec4(0);\n  if (length(crds-vec2(-.7,-.2))<.5)return vec4(0);\n  if (length(crds-vec2(-.4,-.7))<.5)return vec4(0);\n  if (length(crds-vec2(.2,-.85))<.5)return vec4(0);\n  return texture(texDfox,crds+.5)*2.;*/\n}\n\nvec3 curve(float k) {\n  float t = iTime/9. + k;\n  float w = 1. + sin(floor(iTime)*45.)*.3;\n  return vec3(sin(t*w),cos(t*9.),sin(t*2.5))*4.;\n}\n\nvec2 delt(vec2 p) {\n  mat2 k = mat2(p,p)-mat2(0.001);\n  return normalize(love(p) - vec2(love(k[0]),love(k[1])));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n  vec4 last = texture(iChannel0,fragCoord.xy/iResolution.xy);\n\n  vec3 cam = normalize(vec3(1,uv));\n  vec3 init = vec3(-3,0,0);\n  \n  vec4 col = vec4(0);\n  float mt = 1e4;\n  for (int i = 0; i < 200; i++) {\n    vec3 org = curve(float(i)*3.14159/100.);\n    vec3 hit = plane(cam, init, org, normalize(-org), normalize(vec3(cos(vec2(-org.z,org.x)),0)));\n    if (hit.z > .8 && hit.z < mt) {\n      vec4 tx = tex(hit.xy,i);\n      if (tx.w > 0.5) { \n        col = tx;\n        \n      mt = hit.z;\n      }\n    }\n  }\n  \n\tfragColor = (mt>0.)?col:vec4(0);\n  //fragColor = mix(fragColor ,last,sin(iTime)*.4+.5);\n  fragColor = mix(fragColor, last*.9, 1.-clamp(fragColor.w,0.,1.));\n  //fragColor = mix(fragColor ,last,sin(iTime)*.4+.5);\n  \n  float sx = floor(fragCoord.x/iResolution.x*30.)/30.;\n  sx = abs(sx-.5)*2.;\n  if (fragCoord.y/iResolution.y < fakefft(sx)) fragColor=vec4(1);\n  \n  float pulse = iTime - floor(iTime*mul)/mul;\n  uv *= ro(cos(iTime*mul*3.1415)*.3);\n  uv.y += cos(iTime/2.*mul)*.1;\n  uv.x += sin(iTime/2.*mul)*.1;\n  uv *= (1.+pulse);\n  float lv = love(uv);\n  float edge = smoothstep(0.,-.1,lv);\n  vec3 n = normalize(vec3(edge,delt(uv)*(1.-edge)));\n  vec3 r = reflect(cam,n);\n  float spec=  length(sin(n*4.)*.5+.5)/sqrt(3.);\n  if (lv<0.)fragColor.xyz=vec3(.9,.1,.1)+pow(spec,10.)*3.;\n  \n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 1,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg"
                    },
                    {
                        "channel": 3,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}