{
    "Shader": {
        "info": {
            "date": "1661721036",
            "description": "Content warning: War\n\nPC 4k Intro for Linux released at evoke 2022.\nBy juvi and me of epoqe\nPouet: https://www.pouet.net/prod.php?which=91934",
            "flags": 40,
            "hasliked": 0,
            "id": "ftKczG",
            "likes": 16,
            "name": "\"Special military operation\"",
            "published": 3,
            "tags": [
                "intro",
                "4k",
                "evoke",
                "ukraine",
                "war"
            ],
            "usePreview": 1,
            "username": "NinjaKoala",
            "viewed": 778
        },
        "renderpass": [
            {
                "code": "/*\nThis was just lazily transpiled from the minified version\nwith spirv-cross, so this is an unreadable mess.\n\nIf you want to know how some specific thing works, just ask in the comments.\nNothing too fancy is going on, really\n\nThe first ~25 seconds show a black screen, this is intentional.\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "vec4 u;\n\nfloat c;\nfloat f;\nfloat y;\nfloat x;\nfloat z;\nfloat m;\nfloat d;\nfloat a;\nfloat s;\nfloat p;\nfloat b;\nfloat e;\nfloat w;\nfloat r;\nfloat i;\nfloat g;\nfloat o;\nfloat l;\nfloat n;\nfloat h;\nfloat F;\nfloat C;\nfloat D;\nfloat Y;\nvec3 X;\nvec3 W;\nvec3 V;\nvec3 U;\n\nfloat T(float x_1)\n{\n    return fract((x_1 * 17.0) * fract(x_1 * 0.31830990314483642578125));\n}\n\nfloat S(vec3 x_1)\n{\n    vec3 c_1 = floor(x_1);\n    vec3 f_1 = fract(x_1);\n    vec3 s_1 = (f_1 * f_1) * (vec3(3.0) - (f_1 * 2.0));\n    float y_1 = ((111.0 * c_1.x) + (317.0 * c_1.y)) + (157.0 * c_1.z);\n    float param = y_1;\n    float z_1 = T(param);\n    float param_1 = y_1 + 157.0;\n    float a_1 = T(param_1);\n    float param_2 = y_1 + 268.0;\n    float e_1 = T(param_2);\n    float param_3 = y_1 + 317.0;\n    float m_1 = T(param_3);\n    float param_4 = y_1 + 111.0;\n    float d_1 = T(param_4);\n    float param_5 = y_1 + 585.0;\n    float o_1 = T(param_5);\n    float param_6 = y_1 + 428.0;\n    float p_1 = T(param_6);\n    float param_7 = y_1 + 474.0;\n    float v_1 = T(param_7);\n    float _369 = (((((((z_1 + ((d_1 - z_1) * s_1.x)) + ((m_1 - z_1) * s_1.y)) + ((a_1 - z_1) * s_1.z)) + (((((z_1 - d_1) - m_1) + p_1) * s_1.x) * s_1.y)) + (((((z_1 - m_1) - a_1) + v_1) * s_1.y) * s_1.z)) + (((((z_1 - d_1) - a_1) + e_1) * s_1.z) * s_1.x)) + ((((((((((d_1 - z_1) + m_1) - p_1) + a_1) - e_1) - v_1) + o_1) * s_1.x) * s_1.y) * s_1.z)) * 2.0;\n    return _369 - 1.0;\n}\n\nfloat S(inout vec3 x_1, int y_1)\n{\n    mat3 s_1 = mat3(vec3(0.0, 0.800000011920928955078125, 0.60000002384185791015625), vec3(-0.800000011920928955078125, 0.36000001430511474609375, -0.4799999892711639404296875), vec3(-0.60000002384185791015625, -0.4799999892711639404296875, 0.63999998569488525390625));\n    mat3 f_1 = mat3(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0));\n    float z_1 = 0.0;\n    float m_1 = 0.5;\n    for (int i_1 = 0; i_1 < y_1; i_1++)\n    {\n        vec3 param = x_1;\n        z_1 += (m_1 * S(param));\n        m_1 *= 0.64999997615814208984375;\n        x_1 = (s_1 * 2.0) * x_1;\n        f_1 = (inverse(s_1) * 2.0) * f_1;\n    }\n    return z_1;\n}\n\nvec4 M(vec3 x_1, vec3 s_1)\n{\n    vec4 f_1 = vec4(0.0);\n    float z_1 = 100.0;\n    float _1166;\n    for (int i_1 = 0; i_1 < 200; i_1++)\n    {\n        vec3 c_1 = x_1 + (s_1 * z_1);\n        float y_1 = sign(c_1.y - 250.0);\n        vec3 param = (vec3(2.0, 2.0, 1.0) + (c_1 * 0.0030000000260770320892333984375)) + vec3(u.z * 0.0500000007450580596923828125);\n        int param_1 = 8;\n        float _1096 = S(param, param_1);\n        float m_1 = (40.0 - abs(c_1.y - 250.0)) - ((200.0 * _1096) * 0.699999988079071044921875);\n        if (m_1 > 0.0)\n        {\n            m_1 = min(m_1 / 50.0, 0.25);\n            f_1 += (((vec4((((((vec3(0.0500000007450580596923828125) * (0.699999988079071044921875 + (0.5 * y_1))) + (vec3(0.20000000298023223876953125, 0.300000011920928955078125, 0.4000000059604644775390625) * (0.699999988079071044921875 - (0.5 * y_1)))) + ((vec3(0.60000002384185791015625, 0.699999988079071044921875, 0.699999988079071044921875) * clamp(0.4000000059604644775390625 + ((0.60000002384185791015625 * y_1) * W.y), 0.0, 1.0)) * 3.0)) * (0.4000000059604644775390625 + (0.5 * (1.0 - m_1)))) + vec3(0.100000001490116119384765625)) / vec3(2.0), 0.300000011920928955078125) * (clamp((m_1 * 0.00260000000707805156707763671875) * z_1, 0.0, 1.0) * 0.4000000059604644775390625)) * (1.0 - f_1.w)) * exp((-0.00069999997504055500030517578125) * z_1));\n        }\n        if (m_1 > 0.001000000047497451305389404296875)\n        {\n            _1166 = z_1 * 0.0199999995529651641845703125;\n        }\n        else\n        {\n            _1166 = abs(m_1) + 0.100000001490116119384765625;\n        }\n        z_1 += _1166;\n        if (z_1 > 5000.0)\n        {\n            i_1 = 200;\n        }\n    }\n    return clamp(f_1, vec4(0.0), vec4(1.0));\n}\n\nvec3 M(vec3 x_1)\n{\n    return mix(vec3(0.100000001490116119384765625, 0.14000000059604644775390625, 0.20000000298023223876953125), vec3(0.300000011920928955078125, 0.4000000059604644775390625, 0.60000002384185791015625), vec3(clamp(x_1.y, 0.0, 1.0))) * 0.300000011920928955078125;\n}\n\nfloat R(vec3 x_1, vec3 z_1)\n{\n    vec3 f_1 = abs(x_1) - z_1;\n    return length(max(f_1, vec3(0.0))) + min(max(f_1.x, max(f_1.y, f_1.z)), 0.0);\n}\n\nfloat R(vec3 x_1, float s_1, float f_1)\n{\n    vec3 param = x_1 * 10.0;\n    int param_1 = 2;\n    float _472 = S(param, param_1);\n    return (0.004999999888241291046142578125 * pow(abs(sin(x_1.y * s_1)), f_1)) * (2.0 + (_472 * 2.5));\n}\n\nvec2 S(vec2 s_1, float x_1, float f_1)\n{\n    vec2 _431;\n    if (x_1 < s_1.x)\n    {\n        _431 = vec2(x_1, f_1);\n    }\n    else\n    {\n        _431 = s_1;\n    }\n    return _431;\n}\n\nvec2 T(vec2 s_1, float x_1, float f_1)\n{\n    vec2 _446;\n    if (x_1 > s_1.x)\n    {\n        _446 = vec2(x_1, f_1);\n    }\n    else\n    {\n        _446 = s_1;\n    }\n    return _446;\n}\n\nvec2 R(vec3 x_1)\n{\n    vec2 f_1 = vec2(1000000.0);\n    if (x_1.z > 2.2999999523162841796875)\n    {\n        vec3 param = x_1 - X;\n        vec3 param_1 = vec3(2.400000095367431640625, 1.2999999523162841796875, 1.39999997615814208984375);\n        float z_1 = R(param, param_1);\n        vec3 param_2 = x_1 - X;\n        vec3 param_3 = vec3(2.5, 1.39999997615814208984375, 1.5);\n        float a_1 = R(param_2, param_3);\n        vec3 param_4 = x_1 * 0.699999988079071044921875;\n        int param_5 = 6;\n        float _535 = S(param_4, param_5);\n        float s_1 = clamp((_535 + x_1.y) - 0.800000011920928955078125, 0.0, 0.0040000001899898052215576171875);\n        vec3 param_6 = x_1 - vec3(-1.0, 1.7999999523162841796875, 3.0);\n        vec3 param_7 = vec3(0.699999988079071044921875, 0.300000011920928955078125, 1.0);\n        float _560;\n        if (s_1 > 0.0)\n        {\n            _560 = 0.0;\n        }\n        else\n        {\n            vec3 param_8 = x_1 * vec3(5.0);\n            float param_9 = 3.400000095367431640625;\n            float param_10 = 1000.0;\n            vec3 param_11 = x_1 * 25.0;\n            int param_12 = 3;\n            float _580 = S(param_11, param_12);\n            _560 = (R(param_8, param_9, param_10) / 4.0) - (clamp(_580 - 0.449999988079071044921875, 0.0, 1.0) * 0.0199999995529651641845703125);\n        }\n        vec3 param_13 = x_1 * 1.39999997615814208984375;\n        int param_14 = 4;\n        float _595 = S(param_13, param_14);\n        vec3 param_15 = x_1 * 10.0;\n        int param_16 = 4;\n        float _602 = S(param_15, param_16);\n        vec2 param_17 = f_1;\n        float param_18 = ((max(-z_1, max(a_1, -R(param_6, param_7))) - _560) + mix(0.00039999998989515006542205810546875, (_595 * 0.008000000379979610443115234375) + clamp(_602 * 0.0030000000260770320892333984375, 0.0, 0.00025000001187436282634735107421875), 400.0 * s_1)) - s_1;\n        float param_19 = float((s_1 > 0.0030000000260770320892333984375) ? 2 : 1);\n        f_1 = S(param_17, param_18, param_19);\n        vec3 param_20 = x_1 - (floor((x_1 * 4.150000095367431640625) + vec3(0.5)) / vec3(4.150000095367431640625));\n        vec3 param_21 = vec3(0.11200000345706939697265625);\n        vec3 param_22 = x_1;\n        int param_23 = 2;\n        float _647 = S(param_22, param_23);\n        vec3 param_24 = (x_1 - vec3(-1.0, 1.7999999523162841796875, 2.5)) + vec3(0.02999999932944774627685546875 * _647);\n        vec3 param_25 = vec3(0.699999988079071044921875, 0.300000011920928955078125, 0.00200000009499490261077880859375);\n        vec3 param_26 = x_1 * 200.0;\n        int param_27 = 2;\n        float _661 = S(param_26, param_27);\n        vec2 param_28 = f_1;\n        float param_29 = max(-R(param_20, param_21), R(param_24, param_25) + (0.00039999998989515006542205810546875 * _661));\n        float param_30 = 3.0;\n        f_1 = S(param_28, param_29, param_30);\n        vec3 param_31 = x_1 - vec3(0.449999988079071044921875, 1.39999997615814208984375, 5.0);\n        vec3 param_32 = vec3(0.100000001490116119384765625, 0.25, 0.1500000059604644775390625);\n        vec2 param_33 = f_1;\n        float param_34 = R(param_31, param_32) - 0.00999999977648258209228515625;\n        float param_35 = 4.0;\n        f_1 = S(param_33, param_34, param_35);\n        vec3 param_36 = x_1 * 200.0;\n        int param_37 = 2;\n        float _703 = S(param_36, param_37);\n        vec2 param_38 = f_1;\n        float param_39 = (length(vec2(abs(x_1.x) - 0.02300000004470348358154296875, x_1.z - 2.6400001049041748046875)) - 0.00999999977648258209228515625) + (0.0003000000142492353916168212890625 * _703);\n        float param_40 = 7.0;\n        f_1 = S(param_38, param_39, param_40);\n        return f_1;\n    }\n    vec2 s_2 = vec2(0.0199999995529651641845703125);\n    vec2 z_2 = vec2(42.0);\n    vec2 y_1 = floor(vec2(0.5) + ((x_1.xz - z_2) * s_2));\n    vec2 a_2 = (x_1.xz - z_2) - (y_1 / s_2);\n    vec3 c_1 = vec3(5.0, 9.0 + (7.69999980926513671875 * sin(4.0 + (2.0 * length(y_1)))), 2.0);\n    vec3 m_1 = vec3(a_2.x, x_1.y, a_2.y);\n    vec3 v_1 = vec3(c_1.x * 0.100000001490116119384765625, 0.5, 0.0);\n    vec3 d_1 = (m_1 - v_1) - (clamp(floor(vec3(0.5) + ((m_1 - v_1) * vec3(1.0, 0.89999997615814208984375, 1.0))), vec3(-floor(c_1.x * 0.89999997615814208984375), 2.0, 0.0), vec3(floor(c_1.x * 0.699999988079071044921875), floor(c_1.y * 0.819999992847442626953125), c_1.z)) / vec3(1.0, 0.89999997615814208984375, 1.0));\n    vec3 param_41 = m_1;\n    vec3 param_42 = c_1;\n    vec3 param_43 = m_1 + vec3(7.0);\n    float param_44 = 2.83500003814697265625;\n    float param_45 = 500.0;\n    vec3 param_46 = m_1 + vec3(4.19999980926513671875);\n    float param_47 = 2.83500003814697265625;\n    float param_48 = 500.0;\n    float _824;\n    if (x_1.z < (-10.0))\n    {\n        vec3 param_49 = x_1.xyx;\n        int param_50 = 3;\n        float _831 = S(param_49, param_50);\n        _824 = clamp(_831 - 0.4000000059604644775390625, 0.0, 1.0);\n    }\n    else\n    {\n        _824 = 0.0;\n    }\n    vec3 param_51 = d_1;\n    vec3 param_52 = vec3(0.23999999463558197021484375, 0.300000011920928955078125, 0.0500000007450580596923828125);\n    vec2 param_53 = vec2(((R(param_41, param_42) + R(param_43, param_44, param_45)) + R(param_46, param_47, param_48)) + _824, 4.0);\n    float param_54 = -R(param_51, param_52);\n    float param_55 = 5.0;\n    vec2 i_1 = T(param_53, param_54, param_55);\n    bool _852 = i_1.y == 5.0;\n    bool _862;\n    if (_852)\n    {\n        _862 = m_1.z > (c_1.z - 0.0489999987185001373291015625);\n    }\n    else\n    {\n        _862 = _852;\n    }\n    if (_862)\n    {\n        i_1.y = 6.0;\n    }\n    vec2 param_56 = f_1;\n    float param_57 = i_1.x;\n    float param_58 = i_1.y;\n    f_1 = S(param_56, param_57, param_58);\n    vec2 param_59 = f_1;\n    float param_60 = length((x_1.yz * vec2(1.0, -sign(x_1.z))) - vec2(2.0 + cosh(x_1.x * 0.100000001490116119384765625), ((sin(u.z) * cos(u.z * 0.4000000059604644775390625)) * 0.100000001490116119384765625) - 0.699999988079071044921875)) - 0.0199999995529651641845703125;\n    float param_61 = 8.0;\n    f_1 = S(param_59, param_60, param_61);\n    vec3 param_62 = x_1 - vec3(-4.0, 0.0, -8.80000019073486328125);\n    vec3 param_63 = vec3(1.39999997615814208984375, 16.0, 3.0);\n    vec3 param_64 = x_1 + vec3(4.0);\n    float param_65 = 4.0;\n    float param_66 = 500.0;\n    float _932;\n    if (x_1.x < (-2.7000000476837158203125))\n    {\n        vec3 param_67 = x_1 * 0.300000011920928955078125;\n        int param_68 = 7;\n        float _947 = S(param_67, param_68);\n        _932 = clamp(clamp((x_1.y * 0.20000000298023223876953125) - 0.1599999964237213134765625, 0.0, 1.0) * _947, 0.0, 1.0);\n    }\n    else\n    {\n        _932 = 0.0;\n    }\n    vec2 param_69 = f_1;\n    float param_70 = ((R(param_62, param_63) + R(param_64, param_65, param_66)) + _932) - 0.60000002384185791015625;\n    float param_71 = 4.0;\n    f_1 = S(param_69, param_70, param_71);\n    return f_1;\n}\n\nfloat T(float x_1, float f_1)\n{\n    return sign(x_1) * pow(abs(x_1), f_1);\n}\n\nfloat Q(vec3 x_1, vec3 s_1)\n{\n    float f_1 = 1.0;\n    float z_1 = 0.0199999995529651641845703125;\n    for (int i_1 = 0; i_1 < 30; i_1++)\n    {\n        vec3 param = x_1 + (s_1 * z_1);\n        float c_1 = R(param).x;\n        float m_1 = clamp((8.0 * c_1) / z_1, 0.0, 1.0);\n        z_1 += clamp(c_1, 0.0199999995529651641845703125, 0.20000000298023223876953125);\n        f_1 = min(f_1, (m_1 * m_1) * (3.0 - (m_1 * 2.0)));\n    }\n    return clamp(f_1, 0.0, 1.0);\n}\n\nfloat O(vec3 x_1, vec3 s_1)\n{\n    float f_1 = 1.0;\n    float z_1 = 0.0;\n    for (float i_1 = 0.0; i_1 < 4.0; i_1 += 1.0)\n    {\n        float m_1 = 0.00999999977648258209228515625 + (0.02500000037252902984619140625 * i_1);\n        vec3 param = x_1 + (s_1 * m_1);\n        float _1033 = f_1;\n        float _1034 = _1033 * 0.949999988079071044921875;\n        f_1 = _1034;\n        z_1 += ((m_1 - R(param).x) * _1034);\n    }\n    return clamp(1.0 - (3.0 * z_1), 0.0, 1.0) * (0.5 + (0.5 * s_1.y));\n}\n\nvec3 K(vec3 x_1, inout vec3 f_1)\n{\n    float z_1 = 0.0;\n    vec2 s_1 = vec2(9.9999997473787516355514526367188e-05, -9.9999997473787516355514526367188e-05);\n    vec3 param = x_1;\n    vec3 param_1 = f_1;\n    vec4 c_1 = M(param, param_1);\n    vec3 param_2 = f_1;\n    vec3 i_1 = mix(M(param_2), c_1.xyz, vec3(c_1.w));\n    vec3 a_1 = sin((fract(vec3(dot(f_1, f_1.zxy) * 798.0) + f_1) * u.z) * 634.20001220703125);\n    f_1 += (a_1 * 0.00015000000712461769580841064453125);\n    vec2 v_1;\n    vec3 m_1;\n    for (int y_1 = 0; y_1 < 100; y_1++)\n    {\n        float _1259 = z_1;\n        float _1260 = _1259 + v_1.x;\n        z_1 = _1260;\n        vec3 _1263 = x_1 + (f_1 * _1260);\n        m_1 = _1263;\n        vec3 param_3 = _1263;\n        v_1 = R(param_3);\n        if ((abs(v_1.x) < 0.001000000047497451305389404296875) || (z_1 > 270.0))\n        {\n            y_1 = 200;\n        }\n    }\n    if (z_1 < 270.0)\n    {\n        vec3 y_2 = (X + vec3(-1.0, 1.2999999523162841796875, -0.800000011920928955078125)) - m_1;\n        vec3 param_4 = m_1 + s_1.xxx;\n        vec3 param_5 = m_1 + s_1.yxy;\n        vec3 param_6 = m_1 + s_1.yyx;\n        vec3 param_7 = m_1 + s_1.xyy;\n        vec3 o_1 = normalize((((s_1.xxx * R(param_4).x) + (s_1.yxy * R(param_5).x)) + (s_1.yyx * R(param_6).x)) + (s_1.xyy * R(param_7).x));\n        vec3 e_1 = vec3(-9.0, 3.0, (0.5 * sin(u.z * 3.0)) - 2.0) - m_1;\n        vec3 n_1 = normalize(y_2);\n        vec3 h_1 = normalize(e_1);\n        vec3 p_1 = vec3(0.0);\n        float r_1 = 0.0;\n        float g_1 = v_1.y;\n        float b_1 = (1.5 * clamp(dot(o_1, n_1), 0.0, 1.0)) / dot(y_2, y_2);\n        float w_1 = (5.0 * clamp(dot(o_1, h_1), 0.0, 1.0)) / dot(e_1, e_1);\n        b_1 = mix(0.0, b_1, clamp(pow(dot(n_1, V) * 3.5, 11.0), 0.0, 1.0));\n        if (g_1 == 1.0)\n        {\n            vec3 param_8 = m_1 * 100.0;\n            int param_9 = 3;\n            float _1393 = S(param_8, param_9);\n            float param_10 = _1393;\n            float param_11 = 3.0;\n            p_1 += vec3(0.5 + (T(param_10, param_11) * 0.60000002384185791015625));\n        }\n        if (g_1 == 6.0)\n        {\n            p_1 = vec3(0.100000001490116119384765625, 0.100000001490116119384765625, 0.0);\n        }\n        if (g_1 == 7.0)\n        {\n            p_1 = vec3(0.1500000059604644775390625, 0.100000001490116119384765625, 0.100000001490116119384765625);\n            r_1 = 1.5;\n        }\n        if (g_1 == 3.0)\n        {\n            p_1 += vec3(0.0500000007450580596923828125);\n            r_1 = 1.2000000476837158203125;\n        }\n        if (g_1 == 4.0)\n        {\n            vec3 param_12 = (m_1 * 200.0) / vec3(m_1.z);\n            int param_13 = 2;\n            float _1435 = S(param_12, param_13);\n            float param_14 = _1435;\n            float param_15 = 2.0;\n            vec3 param_16 = m_1 * vec3(3.0, 0.89999997615814208984375, 2.0);\n            int param_17 = 2;\n            float _1447 = S(param_16, param_17);\n            vec3 param_18 = m_1;\n            int param_19 = 4;\n            float _1459 = S(param_18, param_19);\n            p_1 = mix((vec3(0.800000011920928955078125, 0.829999983310699462890625, 0.87000000476837158203125) + vec3(T(param_14, param_15) * 0.699999988079071044921875)) + vec3(pow(abs(0.20000000298023223876953125 + _1447), 2.0) * 0.800000011920928955078125), vec3(0.0, 0.02999999932944774627685546875, 0.0), vec3(1.0299999713897705078125 * smoothstep(3.0, 0.0, _1459 + length(m_1.xy - vec2(-4.5, 7.5)))));\n            if (m_1.z > 2.0)\n            {\n                p_1 *= 0.1500000059604644775390625;\n                r_1 = 0.4000000059604644775390625;\n            }\n        }\n        if (g_1 == 2.0)\n        {\n            p_1 = vec3(0.14000000059604644775390625, 0.119999997317790985107421875, 0.12999999523162841796875);\n            r_1 = 0.60000002384185791015625;\n            if (dot(vec3(0.0, 0.0, 1.0), o_1) < 0.89999997615814208984375)\n            {\n                p_1 += vec3((((u.z < d) ? 0.300000011920928955078125 : 0.100000001490116119384765625) * smoothstep((-0.699999988079071044921875) * abs(m_1.z - 2.599999904632568359375), 0.0, 0.689999997615814208984375 - abs(m_1.x + 1.0))) * smoothstep(0.89999997615814208984375, 0.0, abs(m_1.z - 2.599999904632568359375)));\n            }\n        }\n        float t_1 = clamp(pow(dot(normalize(n_1 - f_1), o_1), 16.0), 0.0, 1.0) / dot(y_2, y_2);\n        t_1 = mix(0.0, t_1, clamp(pow(dot(n_1, V) * 3.0, 11.0), 0.0, 1.0));\n        if (u.z < d)\n        {\n            b_1 = 0.0;\n            t_1 = 0.0;\n        }\n        float _1552;\n        if (m_1.z > 0.0)\n        {\n            _1552 = 1.0;\n        }\n        else\n        {\n            vec3 param_20 = m_1 + vec3(u.z / 2.0);\n            int param_21 = 2;\n            float _1564 = S(param_20, param_21);\n            _1552 = 0.5 + _1564;\n        }\n        float _1577;\n        if (m_1.z > 0.0)\n        {\n            _1577 = 0.0;\n        }\n        else\n        {\n            vec3 param_22 = m_1;\n            vec3 param_23 = W;\n            _1577 = Q(param_22, param_23);\n        }\n        vec3 param_24 = m_1;\n        vec3 param_25 = o_1;\n        i_1 = (((((vec3(0.0599999986588954925537109375) * _1552) + ((vec3((0.3499999940395355224609375 * clamp(dot(o_1, W), 0.0, 1.0)) * _1577) + (vec3(1.0, 0.60000002384185791015625, 0.300000011920928955078125) * w_1)) + (U * b_1))) * p_1) * (0.4000000059604644775390625 + (0.60000002384185791015625 * O(param_24, param_25)))) + (U * (t_1 * r_1))) * 0.5;\n        if (g_1 == 5.0)\n        {\n            vec3 param_26 = m_1;\n            vec3 param_27 = reflect(f_1, o_1);\n            vec4 F_1 = M(param_26, param_27);\n            vec3 param_28 = reflect(f_1, o_1);\n            i_1 = pow(mix(M(param_28) + vec3(0.100000001490116119384765625), F_1.xyz, vec3(F_1.w)), vec3(2.0, 2.5, 3.0)) * 0.60000002384185791015625;\n        }\n        vec3 param_29 = f_1;\n        i_1 = mix(M(param_29), i_1, vec3(clamp(exp((0.008000000379979610443115234375 * m_1.z) + 1.0), 0.0, 1.0)));\n    }\n    i_1 += ((vec3(0.001000000047497451305389404296875) + (i_1 * 0.070000000298023223876953125)) * a_1.y);\n    return i_1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    u=vec4(iResolution.xy,iTime,iTimeDelta);\n    c = 3.1415998935699462890625;\n    f = 25.0;\n    y = f + 3.0;\n    x = f + 12.0;\n    z = x + 3.0;\n    m = z + 3.0;\n    d = m;\n    a = m + 8.0;\n    s = c * 19.0;\n    p = a + 3.0;\n    b = p + 8.0;\n    e = p + 8.5;\n    w = p + 9.0;\n    r = p + 10.0;\n    i = p + 11.0;\n    g = p + 17.0;\n    o = g + 0.5;\n    l = o + 3.7999999523162841796875;\n    n = o + 4.0;\n    h = n + 0.699999988079071044921875;\n    F = h + 0.0;\n    C = F + 10.0;\n    D = C + 6.0;\n    Y = D + 0.100000001490116119384765625;\n    X = vec3(-2.0, 0.800000011920928955078125, 4.0);\n    W = vec3(0.666666686534881591796875, 0.666666686534881591796875, 0.3333333432674407958984375);\n    V = vec3(0.0, 1.0, 0.0);\n    U = vec3(1.0, 0.64999997615814208984375, 0.4000000059604644775390625);\n    float c_1 = clamp((u.z - x) * 0.4000000059604644775390625, 0.0, 2.0);\n    float d_1 = mix(0.10999999940395355224609375, 0.0, smoothstep(0.0, o - g, clamp(u.z - g, 0.0, o - g)));\n    float W_1 = clamp(c_1, 0.00999999977648258209228515625, 1.57000005245208740234375);\n    W_1 = mix(W_1, 2.7999999523162841796875, smoothstep(0.0, h - n, clamp(u.z - n, 0.0, h - n)));\n    vec3 X_1 = vec3(-0.89999997615814208984375, 0.300000011920928955078125 + (smoothstep(0.0, 1.0, clamp((u.z - z) * 2.0, 0.0, 1.0)) * 1.2000000476837158203125), 5.0);\n    X_1 = mix(X_1, vec3(-0.89999997615814208984375, 1.5, 3.0), vec3(smoothstep(0.0, a - m, clamp(u.z - m, 0.0, a - m))));\n    X_1 = mix(X_1, vec3(-0.89999997615814208984375, 1.5, 3.2000000476837158203125), vec3(smoothstep(0.0, o - g, clamp(u.z - g, 0.0, o - g))));\n    X_1 = mix(X_1, vec3(-0.89999997615814208984375, 1.5, 4.0), vec3(smoothstep(0.0, n - o, clamp(u.z - o, 0.0, n - o))));\n    vec3 _1808;\n    if (u.z > l)\n    {\n        vec3 param = vec3((4.0 * u.z) + 4.0);\n        int param_1 = 3;\n        float _1824 = S(param, param_1);\n        vec3 param_2 = vec3((4.0 * u.z) + 8.0);\n        int param_3 = 3;\n        float _1832 = S(param_2, param_3);\n        vec3 param_4 = vec3(4.0 * u.z);\n        int param_5 = 3;\n        float _1839 = S(param_4, param_5);\n        _1808 = vec3(_1824, _1832, _1839) * exp((l - u.z) * 2.0);\n    }\n    else\n    {\n        _1808 = vec3(0.0);\n    }\n    X_1 = mix(X_1, vec3(-2.5, 0.1500000059604644775390625, 4.0), vec3(smoothstep(0.0, h - n, clamp(u.z - n, 0.0, h - n)))) + _1808;\n    vec3 U_1 = X_1 + vec3((cos(c_1 * 0.449999988079071044921875) * 0.5) - 0.5, (0.5 * sin(c_1 * 3.0)) + 0.100000001490116119384765625, -1.0);\n    U_1 = mix(U_1, X_1 + vec3(sin(min(u.z, s)) * 0.4000000059604644775390625, 0.5, -1.0), vec3(smoothstep(0.0, p - a, clamp(u.z - a, 0.0, p - a))));\n    U_1 = mix(U_1, X_1 + vec3(0.300000011920928955078125, 0.5, -1.0), vec3(smoothstep(0.0, e - b, clamp(u.z - b, 0.0, e - b))));\n    U_1 = mix(U_1, X_1 + vec3(0.4000000059604644775390625, 0.5, -1.0), vec3(smoothstep(0.0, w - e, clamp(u.z - e, 0.0, w - e))));\n    U_1 = mix(U_1, X_1 + vec3(0.100000001490116119384765625, 0.5, -1.0), vec3(smoothstep(0.0, i - r, clamp(u.z - r, 0.0, i - r))));\n    U_1 = mix(U_1, X_1 + vec3(0.100000001490116119384765625 + (sin((u.z - g) * 6.0) * d_1), 0.4000000059604644775390625 + (cos((u.z - g) * 6.0) * d_1), -1.0), vec3(smoothstep(0.0, o - g, clamp(u.z - g, 0.0, o - g))));\n    U_1 = mix(U_1, X_1 + vec3(0.0, 0.4000000059604644775390625, -1.0), vec3(smoothstep(0.0, n - o, clamp(u.z - o, 0.0, n - o))));\n    U_1 = mix(U_1, X_1 + vec3(-0.800000011920928955078125, -1.0, -1.7999999523162841796875), vec3(smoothstep(0.0, h - n, clamp(u.z - n, 0.0, h - n))));\n    U_1 = mix(U_1, X_1 + vec3(0.60000002384185791015625, 0.699999988079071044921875, -0.20000000298023223876953125), vec3(smoothstep(0.0, C - F, clamp(u.z - F, 0.0, C - F))));\n    U_1.x += (0.008000000379979610443115234375 * dot(vec3(sin(u.z * 4.0)), vec3(0.20000000298023223876953125, 0.800000011920928955078125, 0.300000011920928955078125)));\n    U_1.y += (0.007000000216066837310791015625 * dot(vec3(cos(u.z * 3.0)), vec3(0.300000011920928955078125, 0.4000000059604644775390625, 0.699999988079071044921875)));\n    vec3 _2073 = V;\n    vec2 _2075 = _2073.xz + vec2(mix(0.0, 0.119999997317790985107421875 * sin(6.0 * u.z), smoothstep(0.0, o - g, clamp(u.z - g, 0.0, o - g))));\n    V.x = _2075.x;\n    V.z = _2075.y;\n    vec3 T_1 = normalize(X_1 - U_1);\n    vec3 R_1 = normalize(cross(vec3(cos(W_1), sin(W_1), 0.0), T_1));\n    vec3 param_6 = X_1;\n    vec3 param_7 = mat3(vec3(R_1), vec3(cross(T_1, R_1)), vec3(T_1)) * normalize(vec3(((fragCoord.xy * 2.0) - u.xy) / vec2(u.y), -1.7000000476837158203125));\n    vec3 _2133 = K(param_6, param_7);\n    fragColor = vec4(mix(vec3(mix(vec3(0.0), pow(abs(mix(_2133, pow(abs(texture(iChannel0, fragCoord.xy / u.xy).xyz), vec3(2.2002201080322265625)), vec3(mix(0., 0.8, smoothstep(0.0, h - n, clamp(u.z - n, 0.0, h - n)))))), vec3(0.4544999897480010986328125)), vec3(smoothstep(0.0, y - f, clamp(u.z - f, 0.0, y - f))))), vec3(0.0), vec3(smoothstep(0.0, Y - D, clamp(u.z - D, 0.0, Y - D)))), 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "float p(inout uint s_1)\n{\n    s_1 ^= (s_1 >> uint(16));\n    s_1 *= 2146121005u;\n    s_1 ^= (s_1 >> uint(15));\n    s_1 *= 2221713035u;\n    s_1 ^= (s_1 >> uint(16));\n    return (-1.0) + (4.656612873077392578125e-10 * float(s_1));\n}\n\nfloat p(inout float s_1, int f, float v)\n{\n    float e = 0.699999988079071044921875;\n    float r = 0.0;\n    s_1 *= 44100.0;\n    for (int i = 0; i < f; i++)\n    {\n        float m = (s_1 / v) * exp(float(i));\n        uint param = uint(int(m));\n        float _131 = p(param);\n        uint param_1 = uint(int(m) + 1);\n        float _138 = p(param_1);\n        r += ((mix(_131, _138, smoothstep(0.0, 1.0, mod(m, 1.0))) * e) * exp(float(-i)));\n    }\n    return r;\n}\n\nfloat t(float s_1, float f)\n{\n    float _160;\n    if (s_1 < f)\n    {\n        _160 = ((2.0 * s_1) / f) - 1.0;\n    }\n    else\n    {\n        _160 = 1.0 - ((2.0 * (s_1 - f)) / (1.0 - f));\n    }\n    return _160;\n}\n\nfloat f(inout float s_1, float f_1)\n{\n    float v = 3.1415998935699462890625;\n    float e = 3.0;\n    float m = 7.0;\n    float i = 16.0;\n    float r = 0.20000000298023223876953125;\n    float p_1 = s_1;\n    s_1 = mod(s_1, i);\n    float o = sin(((s_1 / e) * v) / 2.0);\n    float x = ((((-2.0) * cos(((s_1 / e) / 2.0) * v)) * f_1) * e) / v;\n    o = (s_1 < e) ? o : 1.0;\n    float _228;\n    if (s_1 < m)\n    {\n        _228 = o;\n    }\n    else\n    {\n        _228 = exp((m - s_1) * r);\n    }\n    o = _228;\n    float _243;\n    if (s_1 < e)\n    {\n        _243 = x;\n    }\n    else\n    {\n        _243 = f_1 * (s_1 - e);\n    }\n    x = _243;\n    float _257;\n    if (s_1 < m)\n    {\n        _257 = x;\n    }\n    else\n    {\n        _257 = f_1 * (((m - e) + (1.0 / r)) - (exp((m - s_1) * r) / r));\n    }\n    x = _257;\n    bool _281 = p_1 > 0.0;\n    bool _288;\n    if (_281)\n    {\n        _288 = p_1 < (i * 3.0);\n    }\n    else\n    {\n        _288 = _281;\n    }\n    float _289;\n    if (_288)\n    {\n        float param = mod(x, 1.0);\n        float param_1 = 0.5;\n        float param_2 = mod(x * 2.0, 1.0);\n        float param_3 = 0.20000000298023223876953125;\n        _289 = (o * (clamp(5.0 * t(param, param_1), -1.0, 1.0) + t(param_2, param_3))) * 0.100000001490116119384765625;\n    }\n    else\n    {\n        _289 = 0.0;\n    }\n    return _289;\n}\n\nvec2 p(vec2 s_1, float f_1)\n{\n    float v = exp2(f_1);\n    return sqrt(vec2(v) / (vec2(1.0) + ((s_1 * (v - 1.0)) * s_1))) * s_1;\n}\n\nvec2 f(float s_1)\n{\n    float param = s_1 - 0.0;\n    float param_1 = 392.0;\n    float _321 = f(param, param_1);\n    float param_2 = s_1 - 0.180000007152557373046875;\n    float param_3 = 390.0;\n    float _329 = f(param_2, param_3);\n    float param_4 = s_1 - 0.2899999916553497314453125;\n    float param_5 = 391.0;\n    float _339 = f(param_4, param_5);\n    vec2 param_6 = vec2(((_321 * 0.100000001490116119384765625) + (_329 * 0.0500000007450580596923828125)) + (_339 * 0.02500000037252902984619140625));\n    float param_7 = 7.5;\n    return p(param_6, param_7) * 0.070000000298023223876953125;\n}\n\nvec2 t(inout float s_1, float f_1, float v)\n{\n    float m = 1.0;\n    vec2 r = vec2(0.0);\n    vec2 _415;\n    for (int i = 0; i < 20; i++)\n    {\n        bool _406 = s_1 > f_1;\n        bool _414;\n        if (_406)\n        {\n            _414 = (s_1 - f_1) < v;\n        }\n        else\n        {\n            _414 = _406;\n        }\n        if (_414)\n        {\n            float param = s_1;\n            int param_1 = 10;\n            float param_2 = 30.0;\n            float _424 = p(param, param_1, param_2);\n            vec2 param_3 = vec2((_424 * pow(0.5 + (0.5 * sin(60.0 * (s_1 - f_1))), 40.0)) * 0.300000011920928955078125);\n            float param_4 = 6.30000019073486328125;\n            _415 = p(param_3, param_4);\n        }\n        else\n        {\n            _415 = vec2(0.0);\n        }\n        r += (_415 * m);\n        uint param_5 = uint(i);\n        float _451 = p(param_5);\n        s_1 -= (0.100000001490116119384765625 + (_451 * 0.07999999821186065673828125));\n        uint param_6 = uint(i * i);\n        float _462 = p(param_6);\n        m *= (0.699999988079071044921875 + (_462 * 0.20000000298023223876953125));\n    }\n    return r;\n}\n\nvec2 f(float s_1, float f_1, float v)\n{\n    vec2 _355;\n    if (s_1 > f_1)\n    {\n        float param = s_1;\n        int param_1 = 1;\n        float param_2 = 150.0;\n        float _363 = p(param, param_1, param_2);\n        float param_3 = s_1;\n        int param_4 = 7;\n        float param_5 = 150.0;\n        float _369 = p(param_3, param_4, param_5);\n        vec2 param_6 = vec2(mix(_363, _369, exp((-3.0) * (s_1 - f_1))) * exp(f_1 - s_1));\n        float param_7 = v;\n        _355 = p(param_6, param_7);\n    }\n    else\n    {\n        _355 = vec2(0.0);\n    }\n    return _355;\n}\n\nvec2 mainSound( int samp, float time )\n{\n    float m = time;\n    float param = m;\n    int param_1 = 3;\n    float param_2 = 150.0;\n    float _491 = p(param, param_1, param_2);\n    float param_3 = m - 4.0;\n    float param_4 = m - 7.0;\n    float param_5 = m;\n    float param_6 = m;\n    float param_7 = 47.0;\n    float param_8 = 0.60000002384185791015625;\n    vec2 _517 = t(param_6, param_7, param_8);\n    float param_9 = m;\n    float param_10 = 49.0;\n    float param_11 = 0.4000000059604644775390625;\n    vec2 _526 = t(param_9, param_10, param_11);\n    float param_12 = m;\n    float param_13 = 57.0;\n    float param_14 = 0.5;\n    vec2 _535 = t(param_12, param_13, param_14);\n    float param_15 = m;\n    float param_16 = 58.0;\n    float param_17 = 0.699999988079071044921875;\n    vec2 _543 = t(param_15, param_16, param_17);\n    float param_18 = m;\n    float param_19 = 71.0;\n    float param_20 = 3.7999999523162841796875;\n    float param_21 = m;\n    float param_22 = 62.0;\n    float param_23 = 1.2999999523162841796875;\n    float param_24 = m;\n    float param_25 = 62.5;\n    float param_26 = 1.2999999523162841796875;\n    float param_27 = m;\n    float param_28 = 64.0;\n    float param_29 = 0.60000002384185791015625;\n    float param_30 = m;\n    float param_31 = 75.0;\n    float param_32 = 5.0;\n    return mix(((((((((((((vec2(_491) * 0.07999999821186065673828125) + (f(param_3) * 0.5)) + (f(param_4) * 0.20000000298023223876953125)) + f(param_5)) + (_517 * 0.0500000007450580596923828125)) + (_526 * 0.1500000059604644775390625)) + (_535 * 0.1500000059604644775390625)) + (_543 * 0.100000001490116119384765625)) + (f(param_18, param_19, param_20) * 0.300000011920928955078125)) + (f(param_21, param_22, param_23) * 0.100000001490116119384765625)) + (f(param_24, param_25, param_26) * 0.1500000059604644775390625)) + (f(param_27, param_28, param_29) * 0.0500000007450580596923828125)) + f(param_30, param_31, param_32), vec2(sin(m * 8000.0)) * 0.00999999977648258209228515625, vec2(smoothstep(75.8000030517578125, 77.0, m)));\n}",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}