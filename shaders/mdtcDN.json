{
    "Shader": {
        "info": {
            "date": "1695612759",
            "description": "this was hard and still has some issues...",
            "flags": 32,
            "hasliked": 0,
            "id": "mdtcDN",
            "likes": 7,
            "name": "3D Magnetic Blocks",
            "published": 3,
            "tags": [
                "rigidbodyphysics"
            ],
            "usePreview": 1,
            "username": "wyatt",
            "viewed": 295
        },
        "renderpass": [
            {
                "code": "obj get (int i) {\n    return obj(\n        A(0,i).xyz,\n        mat3(\n            A(1,i).xyz,\n            A(2,i).xyz,\n            A(3,i).xyz),\n        A(4,i).xyz,\n        A(5,i).xyz,mat3(\n            A(6,i).xyz,\n            A(7,i).xyz,\n            A(8,i).xyz),\n        vec3(0),\n        vec3(0)\n    );\n}\nfloat absmin(float a, float b) {if (b < 0. ) return a; if (a < 0.) return b; if (b < a) return b; return a; }\nfloat tri (vec3 p, vec3 d, obj o, vec3 a, vec3 b, vec3 c) {\n    a = a*o.o+o.m;\n    b = b*o.o+o.m;\n    c = c*o.o+o.m;\n    return iTriangle(p,d,a,b,c);//iTriple(p,d,a,b,c,.02,.02);\n}\nMain {\n    vec3 p = vec3(0,0,-1.2),\n         d = normalize(vec3(2.*(U-.5*R)/R.y,1));\n    float t = -1.2;\n    p.yz *= mat2(cos(t),sin(t),-sin(t),cos(t));\n    d.yz *= mat2(cos(t),sin(t),-sin(t),cos(t));\n    \n    \n    float x = 1e9;\n    x = absmin(x, iPlane(p-vec3(1,0,0),d,vec3(1,0,0)) );\n    x = absmin(x,iPlane(p-vec3(-1,0,0),d,vec3(1,0,0)));\n    x = absmin(x,iPlane(p-vec3(0,0,1),d,vec3(0,0,1)));\n    x = absmin(x,iPlane(p-vec3(0,0,-1),d,vec3(0,0,1)));\n    x = absmin(x,iPlane(p-vec3(0,-.5,0),d,vec3(0,1,0)));\n   for (int i = 0;  i < N; i++) {\n        obj o = get(i);\n        \n        x = absmin(x,tri(p,d,o,_T1));\n        x = absmin(x,tri(p,d,o,_T2));\n        x = absmin(x,tri(p,d,o,_T3));\n        x = absmin(x,tri(p,d,o,_T4));\n        x = absmin(x,tri(p,d,o,_T5));\n        x = absmin(x,tri(p,d,o,_T6));\n        x = absmin(x,tri(p,d,o,_T7));\n        x = absmin(x,tri(p,d,o,_T8));\n        x = absmin(x,tri(p,d,o,_T9));\n        x = absmin(x,tri(p,d,o,_T10));\n        x = absmin(x,tri(p,d,o,_T11));\n        x = absmin(x,tri(p,d,o,_T12));\n        \n        \n    }\n    \n    vec3 q = p + d*x;\n    vec3 b = vec3(0);\n    for (int i = min(0,iFrame); i < N; i++) {\n        obj o = get(i);\n\t\tvec3 r = (q-o.m)*o.io;\n\t\tb += B(r,vec3(1.01*_s_),vec3(0),vec3(1,0,0))*o.o;\n    }\n    \n     Q =  (sin(-2.+length(b)*.25+vec4(1,2,3,4)));\n     float s = abs(sin(b.x*5.));\n    Q *= smoothstep(.0,1.*fwidth(s),s);\n    vec3 no =normalize(vec3(R*vec2(dFdx(x),dFdy(x)),1));\n    Q.xyz *= .7+.5*no.z;\n    //Q = texture(iChannel0,floor((U)*.02)/R);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define N 7\n\n#define dt .08\n\n#define G 6e-4\n#define K  3e-5\n#define K1 .01\n#define K2 .1\n#define K3 .000\n\n#define Main void mainImage(out vec4 Q, in vec2 U)\n#define R iResolution.xy\n#define A(x,y) texelFetch(iChannel0,ivec2(x,y),0)\n\n#define _s_ vec3(.3,.2,.15)\n\n#define _a _s_*vec3(-1, -1,  1)\n#define _b _s_*vec3( 1, -1,  1)\n#define _c _s_*vec3(-1,  1,  1)\n#define _d _s_*vec3( 1,  1,  1)\n#define _e _s_*vec3(-1, -1, -1)\n#define _f _s_*vec3( 1, -1, -1)\n#define _g _s_*vec3(-1,  1, -1)\n#define _h _s_*vec3( 1,  1, -1)\n\n// Define the 12 triangles\n#define _T1  _a, _e, _b\n#define _T2  _b, _e, _f\n#define _T3  _b, _f, _d\n#define _T4  _d, _f, _h\n#define _T5  _d, _h, _c\n#define _T6  _c, _h, _g\n#define _T7  _c, _g, _a\n#define _T8  _a, _g, _e\n#define _T9  _c, _b, _d\n#define _T10 _c, _a, _b\n#define _T11 _g, _f, _h\n#define _T12 _g, _f, _e\n\n\n\nstruct obj {\n    vec3 m; // 0\n    mat3 o; // 1 2 3\n    vec3 v; // 4\n    vec3 s; // 5\n    \n    mat3 io; \n    \n    vec3 f; \n    vec3 t; \n};\n\nmat3 matrix (vec3 r) { \n   if (length(r)==0.) return mat3(1);\n   float a = length(r);\n   vec3 o = normalize(r);\n   float c = cos(a), t = 1.-c;\n   float s = sin(a);\n   return mat3(\n       t*o.x*o.x+c,t*o.x*o.y-o.z*s,t*o.x*o.z+o.y*s,\n       t*o.x*o.y+o.z*s,t*o.y*o.y+c,t*o.y*o.z-o.x*s,\n       t*o.x*o.z-o.y*s,t*o.y*o.z+o.x*s,t*o.z*o.z+c\n   \n   );\n}\nfloat iSphere (vec3 p, vec3 d, vec3 m, float r) {\n\n    p -= m;\n    \n    float b = 2.*dot(p,d);\n    float c = dot(p,p)-r*r;\n    float s = (b*b-4.*c);\n    if (s < 0.) return 1e9;\n    else return .5*(-b-sqrt(s));\n\n}\nfloat iSegment (vec3 p, vec3 d, vec3 a, vec3 b, float r) {    \n    vec3 q = p-a;\n    vec3 u = b-a;\n    float du = dot(d,u);\n    float uu = dot(u,u);\n    float qu = dot(q,u);\n    float dq = dot(d,q);\n    float qq = dot(q,q);\n    float a_ = 1. - du*du/uu;\n    float b_ = 2.*(dq - qu*du/uu);\n    float c_ = qq - qu*qu/uu - r*r;\n    float s = b_*b_-4.*a_*c_;\n    if (s < 0.) return 1e9;\n    float i = (-b_-sqrt(s))/(2.*a_);\n    float x = dot(p+d*i-a,u)/uu;\n    if (x < 0. || x > 1.) return 1e9;\n    return i;\n}\nfloat iPlane (vec3 p, vec3 d, vec3 n) {\n    return -dot(p,n)/dot(d,n);\n}\nfloat iTriangle (vec3 p, vec3 d, vec3 a, vec3 b, vec3 c) {\n    vec3 n = normalize(cross(b-a,c-a));\n    float i = -dot(p-a,n)/dot(d,n);\n    vec3 x = p + d*i;\n    float ab = dot(x-a,cross(n,normalize(b-a)));\n    float bc = dot(x-b,cross(n,normalize(c-b)));\n    float ca = dot(x-c,cross(n,normalize(a-c)));\n    if (ab<0.||bc<0.||ca<0.) return 1e9;\n    return i;\n}\n\nfloat iTriple (vec3 p, vec3 d, vec3 a, vec3 b, vec3 c, float r1, float r2) {\n       float i = 1e9;\n    \n     i = min(i,iSphere(p,d,a,r1));\n     i = min(i,iSphere(p,d,b,r1));\n     i = min(i,iSphere(p,d,c,r1));\n     \n     i = min(i,iSegment(p,d,a,b,r2));\n     i = min(i,iSegment(p,d,b,c,r2));\n     i = min(i,iSegment(p,d,c,a,r2));\n     \n     i = min(i,iTriangle(p,d,a,b,c));\n     return i;\n}\n\n\nfloat dSegment (vec3 p, vec3 a, vec3 b) {\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nfloat dBox ( vec2 p, vec2 b, float r) \n\t\t{\n\t\t    vec2 h = 0.5*vec2(b.x,b.y);\n\t\t    vec2 q = p-clamp(p,-h+r,h-r);\n\t\t    if (length(q)>0.) return length(q) - r ;\n            else return max((abs(p.x)-h.x)*h.y,(abs(p.y)-h.y)*h.x);\n\t\t}\nmat3 rotationMatrix(float a, float b, float c)\n{\n    float cosA = cos(a);\n    float sinA = sin(a);\n    float cosB = cos(b);\n    float sinB = sin(b);\n    float cosC = cos(c);\n    float sinC = sin(c);\n\n    mat3 rotX = mat3(\n        1.0, 0.0, 0.0,\n        0.0, cosA, -sinA,\n        0.0, sinA, cosA\n    );\n\n    mat3 rotY = mat3(\n        cosB, 0.0, sinB,\n        0.0, 1.0, 0.0,\n        -sinB, 0.0, cosB\n    );\n\n    mat3 rotZ = mat3(\n        cosC, -sinC, 0.0,\n        sinC, cosC, 0.0,\n        0.0, 0.0, 1.0\n    );\n\n    // Combine the three rotation matrices\n    return rotZ * rotY * rotX;\n}\nvec3 velocity (obj o, vec3 p) {\n    return o.v+cross(o.s,p-o.m);\n}\nvoid impulse (inout obj o, vec3 p, vec3 f) {\n    vec3 r = p-o.m;\n    if (length(r)>0.) {\n        o.f += f*dot(normalize(f),normalize(-r))+f*cross(normalize(r),o.s);\n        o.t += cross(r,f)/(_s_);\n    } else o.f += f;\n}\nbool line_triangle (vec3 a, vec3 b, vec3 e, vec3 g, vec3 h, inout vec3 p, inout vec3 f) {\n    vec3 u = normalize(b-a);\n    float i = iTriangle (a,u,e,g,h);\n    if (i < 0. || i > length(a-b)) {\n        p = vec3(0), f = vec3(0);\n        return false;\n    } else {\n            p = a + u*i;\n            vec3 k = u;\n            if (length(p-b) > length(p-a)) k = -u;\n            f = normalize(cross(g-e,h-e));\n            f *= -K1*dot(k,f)*length(a-b);\n            return true;\n    }\n}\n\nvec3 integral (vec3 p, vec3 h, vec3 j, vec3 m) {\n\t\t    p -= h;\n\t\t    float L = length(p);\n\t\t    float X = p.x, Y = p.y, Z = p.z,\n\t\t          A = j.x, B = j.y, C = j.z;\n\t\t    vec3 bj = vec3(\n\t\t             B*(\n\t\t                 -sign(X)*abs(Z)*atan(-Y*abs(X)/L/abs(Z))\n\t\t                 +X/2.*(log(L-Y)-log(L+Y))\n\t\t                 +Y/2.*(log(L-X)-log(L+X))\n\t\t             ) + \n\t\t             C*(\n\t\t                 -sign(X)*abs(Y)*atan(-Z*abs(X)/L/abs(Y))\n\t\t                 +X/2.*(log(L-Z)-log(L+Z))\n\t\t                 +Z/2.*(log(L-X)-log(L+X))\n\t\t             )\n\t\t           , \n\t\t             C*(\n\t\t                 -sign(Y)*abs(X)*atan(-Z*abs(Y)/L/abs(X))\n\t\t                 +Y/2.*(log(L-Z)-log(L+Z))\n\t\t                 +Z/2.*(log(L-Y)-log(L+Y))\n\t\t             ) + \n\t\t             A*(\n\t\t                 -sign(Y)*abs(Z)*atan(-X*abs(Y)/L/abs(Z))\n\t\t                 +Y/2.*(log(L-X)-log(L+X))\n\t\t                 +X/2.*(log(L-Y)-log(L+Y))\n\t\t             )\n\t\t           ,\n\t\t             A*(\n\t\t                 -sign(Z)*abs(Y)*atan(-X*abs(Z)/L/abs(Y))\n\t\t                 +Z/2.*(log(L-X)-log(L+X))\n\t\t                 +X/2.*(log(L-Z)-log(L+Z))\n\t\t             ) + \n\t\t             B*(\n\t\t                 -sign(Z)*abs(X)*atan(-Y*abs(Z)/L/abs(X))\n\t\t                 +Z/2.*(log(L-Y)-log(L+Y))\n\t\t                 +Y/2.*(log(L-Z)-log(L+Z))\n\t\t             )\n\t\t         );\n\t\t   \n\t\t    A = m.x;\n\t\t    B = m.y;\n\t\t    C = m.z;\n\t\t    vec3 bm = -vec3(\n\t\t            +A*sign(X)*sign(Y)*atan(-Z*abs(Y)/L/abs(X))\n\t\t            -B*log((L-Z)/sqrt(X*X+Y*Y))\n\t\t            -C*sign(Y)*atan(L/abs(Y))\n\t\t            \n\t\t            +A*sign(X)*sign(Z)*atan(-Y*abs(Z)/L/abs(X))\n\t\t            -C*log((L-Y)/sqrt(X*X+Z*Z))\n\t\t            -B*sign(Z)*atan(L/abs(Z))\n\t\t          ,\n\t\t            +B*sign(Y)*sign(X)*atan(-Z*abs(X)/L/abs(Y))\n\t\t            -A*log((L-Z)/sqrt(X*X+Y*Y))\n\t\t            -C*sign(X)*atan(L/abs(X))\n\t\t            \n\t\t            +B*sign(Y)*sign(Z)*atan(-X*abs(Z)/L/abs(Y))\n\t\t            -C*log((L-X)/sqrt(Z*Z+Y*Y))\n\t\t            -A*sign(Z)*atan(L/abs(Z))\n\t\t          ,\n\t\t            +C*sign(Z)*sign(Y)*atan(-X*abs(Y)/L/abs(Z))\n\t\t            -B*log((L-X)/sqrt(Z*Z+Y*Y))\n\t\t            -A*sign(Y)*atan(L/abs(Y))\n\t\t            \n\t\t            +C*sign(Z)*sign(X)*atan(-Y*abs(X)/L/abs(Z))\n\t\t            -A*log((L-Y)/sqrt(Z*Z+X*X))\n\t\t            -B*sign(X)*atan(L/abs(X))\n\t\t    );\n\t\t         \n\t\t    return bj+bm;\n\n\t\t}\n\n\n\n\t\tvec3 B (vec3 p, vec3 h, vec3 j, vec3 m) {\n\t\t    return (\n\t\t      (\n\t\t        ( integral(p,vec3(+h.x,+h.y,+h.z),j,m) - integral(p,vec3(-h.x,+h.y,+h.z),j,m) ) \n\t\t        \n\t\t            -\n\t\t         \n\t\t        ( integral(p,vec3(+h.x,-h.y,+h.z),j,m) - integral(p,vec3(-h.x,-h.y,+h.z),j,m) ) \n\t\t      ) \n\t\t      \n\t\t          - \n\t\t      \n\t\t      (\n\t\t        ( integral(p,vec3(+h.x,+h.y,-h.z),j,m) - integral(p,vec3(-h.x,+h.y,-h.z),j,m) ) \n\t\t        \n\t\t            -\n\t\t         \n\t\t        ( integral(p,vec3(+h.x,-h.y,-h.z),j,m) - integral(p,vec3(-h.x,-h.y,-h.z),j,m) ) \n\t\t      )\n\t\t    );\n\t\t}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "obj get (int i);vec4 set (obj o,int x);\n\nvoid triangle_triangle (inout obj o, inout obj q, vec3 a, vec3 b, vec3 c, vec3 e, vec3 g, vec3 h) {\n    vec3 _, f;\n    a = a*o.o+o.m;\n    b = b*o.o+o.m;\n    c = c*o.o+o.m;\n    e = e*q.o+q.m;\n    g = g*q.o+q.m;\n    h = h*q.o+q.m;\n    if (line_triangle(a,b,e,g,h ,_,f)) {\n        f += K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }\n    if (line_triangle(b,c,e,g,h ,_,f)) {\n        f += K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }\n    if (line_triangle(c,a,e,g,h ,_,f)) {\n        f += K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }    \n    \n    if (line_triangle(e,g,a,b,c ,_,f)) {\n        f = -f+ K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }\n    if (line_triangle(g,h,a,b,c ,_,f)) {\n        f = -f+ K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    } \n    if (line_triangle(h,e,a,b,c ,_,f)) {\n        f = -f+ K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }\n}\nvoid cube_cube(inout obj o, inout obj q) {\n    triangle_triangle(o,q,_T1,_T1);\n    triangle_triangle(o,q,_T1,_T2);\n    triangle_triangle(o,q,_T1,_T3);\n    triangle_triangle(o,q,_T1,_T4);\n    triangle_triangle(o,q,_T1,_T5);\n    triangle_triangle(o,q,_T1,_T6);\n    triangle_triangle(o,q,_T1,_T7);\n    triangle_triangle(o,q,_T1,_T8);\n    triangle_triangle(o,q,_T1,_T9);\n    triangle_triangle(o,q,_T1,_T10);\n    triangle_triangle(o,q,_T1,_T11);\n    triangle_triangle(o,q,_T1,_T12);\n    triangle_triangle(o,q,_T2,_T1);\n    triangle_triangle(o,q,_T2,_T2);\n    triangle_triangle(o,q,_T2,_T3);\n    triangle_triangle(o,q,_T2,_T4);\n    triangle_triangle(o,q,_T2,_T5);\n    triangle_triangle(o,q,_T2,_T6);\n    triangle_triangle(o,q,_T2,_T7);\n    triangle_triangle(o,q,_T2,_T8);\n    triangle_triangle(o,q,_T2,_T9);\n    triangle_triangle(o,q,_T2,_T10);\n    triangle_triangle(o,q,_T2,_T11);\n    triangle_triangle(o,q,_T2,_T12);\n    triangle_triangle(o,q,_T3,_T1);\n    triangle_triangle(o,q,_T3,_T2);\n    triangle_triangle(o,q,_T3,_T3);\n    triangle_triangle(o,q,_T3,_T4);\n    triangle_triangle(o,q,_T3,_T5);\n    triangle_triangle(o,q,_T3,_T6);\n    triangle_triangle(o,q,_T3,_T7);\n    triangle_triangle(o,q,_T3,_T8);\n    triangle_triangle(o,q,_T3,_T9);\n    triangle_triangle(o,q,_T3,_T10);\n    triangle_triangle(o,q,_T3,_T11);\n    triangle_triangle(o,q,_T3,_T12);\n    triangle_triangle(o,q,_T4,_T1);\n    triangle_triangle(o,q,_T4,_T2);\n    triangle_triangle(o,q,_T4,_T3);\n    triangle_triangle(o,q,_T4,_T4);\n    triangle_triangle(o,q,_T4,_T5);\n    triangle_triangle(o,q,_T4,_T6);\n    triangle_triangle(o,q,_T4,_T7);\n    triangle_triangle(o,q,_T4,_T8);\n    triangle_triangle(o,q,_T4,_T9);\n    triangle_triangle(o,q,_T4,_T10);\n    triangle_triangle(o,q,_T4,_T11);\n    triangle_triangle(o,q,_T4,_T12);\n    triangle_triangle(o,q,_T5,_T1);\n    triangle_triangle(o,q,_T5,_T2);\n    triangle_triangle(o,q,_T5,_T3);\n    triangle_triangle(o,q,_T5,_T4);\n    triangle_triangle(o,q,_T5,_T5);\n    triangle_triangle(o,q,_T5,_T6);\n    triangle_triangle(o,q,_T5,_T7);\n    triangle_triangle(o,q,_T5,_T8);\n    triangle_triangle(o,q,_T5,_T9);\n    triangle_triangle(o,q,_T5,_T10);\n    triangle_triangle(o,q,_T5,_T11);\n    triangle_triangle(o,q,_T5,_T12);\n    triangle_triangle(o,q,_T6,_T1);\n    triangle_triangle(o,q,_T6,_T2);\n    triangle_triangle(o,q,_T6,_T3);\n    triangle_triangle(o,q,_T6,_T4);\n    triangle_triangle(o,q,_T6,_T5);\n    triangle_triangle(o,q,_T6,_T6);\n    triangle_triangle(o,q,_T6,_T7);\n    triangle_triangle(o,q,_T6,_T8);\n    triangle_triangle(o,q,_T6,_T9);\n    triangle_triangle(o,q,_T6,_T10);\n    triangle_triangle(o,q,_T6,_T11);\n    triangle_triangle(o,q,_T6,_T12);\n    triangle_triangle(o,q,_T7,_T1);\n    triangle_triangle(o,q,_T7,_T2);\n    triangle_triangle(o,q,_T7,_T3);\n    triangle_triangle(o,q,_T7,_T4);\n    triangle_triangle(o,q,_T7,_T5);\n    triangle_triangle(o,q,_T7,_T6);\n    triangle_triangle(o,q,_T7,_T7);\n    triangle_triangle(o,q,_T7,_T8);\n    triangle_triangle(o,q,_T7,_T9);\n    triangle_triangle(o,q,_T7,_T10);\n    triangle_triangle(o,q,_T7,_T11);\n    triangle_triangle(o,q,_T7,_T12);\n    triangle_triangle(o,q,_T8,_T1);\n    triangle_triangle(o,q,_T8,_T2);\n    triangle_triangle(o,q,_T8,_T3);\n    triangle_triangle(o,q,_T8,_T4);\n    triangle_triangle(o,q,_T8,_T5);\n    triangle_triangle(o,q,_T8,_T6);\n    triangle_triangle(o,q,_T8,_T7);\n    triangle_triangle(o,q,_T8,_T8);\n    triangle_triangle(o,q,_T8,_T9);\n    triangle_triangle(o,q,_T8,_T10);\n    triangle_triangle(o,q,_T8,_T11);\n    triangle_triangle(o,q,_T8,_T12);\n    triangle_triangle(o,q,_T9,_T1);\n    triangle_triangle(o,q,_T9,_T2);\n    triangle_triangle(o,q,_T9,_T3);\n    triangle_triangle(o,q,_T9,_T4);\n    triangle_triangle(o,q,_T9,_T5);\n    triangle_triangle(o,q,_T9,_T6);\n    triangle_triangle(o,q,_T9,_T7);\n    triangle_triangle(o,q,_T9,_T8);\n    triangle_triangle(o,q,_T9,_T9);\n    triangle_triangle(o,q,_T9,_T10);\n    triangle_triangle(o,q,_T9,_T11);\n    triangle_triangle(o,q,_T9,_T12);\n    triangle_triangle(o,q,_T10,_T1);\n    triangle_triangle(o,q,_T10,_T2);\n    triangle_triangle(o,q,_T10,_T3);\n    triangle_triangle(o,q,_T10,_T4);\n    triangle_triangle(o,q,_T10,_T5);\n    triangle_triangle(o,q,_T10,_T6);\n    triangle_triangle(o,q,_T10,_T7);\n    triangle_triangle(o,q,_T10,_T8);\n    triangle_triangle(o,q,_T10,_T9);\n    triangle_triangle(o,q,_T10,_T10);\n    triangle_triangle(o,q,_T10,_T11);\n    triangle_triangle(o,q,_T10,_T12);\n    triangle_triangle(o,q,_T11,_T1);\n    triangle_triangle(o,q,_T11,_T2);\n    triangle_triangle(o,q,_T11,_T3);\n    triangle_triangle(o,q,_T11,_T4);\n    triangle_triangle(o,q,_T11,_T5);\n    triangle_triangle(o,q,_T11,_T6);\n    triangle_triangle(o,q,_T11,_T7);\n    triangle_triangle(o,q,_T11,_T8);\n    triangle_triangle(o,q,_T11,_T9);\n    triangle_triangle(o,q,_T11,_T10);\n    triangle_triangle(o,q,_T11,_T11);\n    triangle_triangle(o,q,_T11,_T12);\n    triangle_triangle(o,q,_T12,_T1);\n    triangle_triangle(o,q,_T12,_T2);\n    triangle_triangle(o,q,_T12,_T3);\n    triangle_triangle(o,q,_T12,_T4);\n    triangle_triangle(o,q,_T12,_T5);\n    triangle_triangle(o,q,_T12,_T6);\n    triangle_triangle(o,q,_T12,_T7);\n    triangle_triangle(o,q,_T12,_T8);\n    triangle_triangle(o,q,_T12,_T9);\n    triangle_triangle(o,q,_T12,_T10);\n    triangle_triangle(o,q,_T12,_T11);\n    triangle_triangle(o,q,_T12,_T12);\n}\nvoid tri_boundaries (inout obj o, vec3 a, vec3 b, vec3 c) {\n    a = a*o.o+o.m;\n    b = b*o.o+o.m;\n    c = c*o.o+o.m;\n    vec3 da = -velocity(o,a);\n    vec3 db = -velocity(o,b);\n    vec3 dc = -velocity(o,c);\n    \n    if (a.y < -.5) impulse(o, a, vec3(0,-a.y-.5,0) + K3*da);\n    if (b.y < -.5) impulse(o, b, vec3(0,-b.y-.5,0) + K3*db);\n    if (c.y < -.5) impulse(o, c, vec3(0,-c.y-.5,0) + K3*dc);\n    \n    if (a.x < -1.) impulse(o, a, vec3(-a.x-1.,0,0) + K3*da);\n    if (b.x < -1.) impulse(o, b, vec3(-b.x-1.,0,0) + K3*db);\n    if (c.x < -1.) impulse(o, c, vec3(-c.x-1.,0,0) + K3*dc);\n    \n    if (a.z < -1.) impulse(o, a, vec3(0,0,-a.z-1.) + K3*da);\n    if (b.z < -1.) impulse(o, b, vec3(0,0,-b.z-1.) + K3*db);\n    if (c.z < -1.) impulse(o, c, vec3(0,0,-c.z-1.) + K3*dc);\n    \n    if (a.x > +1.) impulse(o, a, vec3(1.-a.x,0,0) +  K3*da);\n    if (b.x > +1.) impulse(o, b, vec3(1.-b.x,0,0) +  K3*db);\n    if (c.x > +1.) impulse(o, c, vec3(1.-c.x,0,0) +  K3*dc);\n    \n    if (a.z > +1.) impulse(o, a, vec3(0,0,1.-a.z) +  K3*da);\n    if (b.z > +1.) impulse(o, b, vec3(0,0,1.-b.z) +  K3*db);\n    if (c.z > +1.) impulse(o, c, vec3(0,0,1.-c.z) +  K3*dc);\n    \n}\nvoid boundaries (inout obj o) {\n\n    tri_boundaries(o,_T1);\n    tri_boundaries(o,_T2);\n    tri_boundaries(o,_T3);\n    tri_boundaries(o,_T4);\n    tri_boundaries(o,_T5);\n    tri_boundaries(o,_T6);\n    tri_boundaries(o,_T7);\n    tri_boundaries(o,_T8);\n    tri_boundaries(o,_T9);\n    tri_boundaries(o,_T10);\n    tri_boundaries(o,_T11);\n    tri_boundaries(o,_T12);\n}\nvoid magnet_magnet(inout obj o, obj q) {\n    vec2 e = vec2(1e-2,0);\n    vec3 r = (o.m-q.m)*q.io;\n    float k = K;\n    \n    float b0 = dot(B(r,.99*_s_,vec3(0),vec3(1,0,0))*q.o,vec3(1,0,0)*o.o);\n    float bx = dot(B(r+e.xyy,.99*_s_,vec3(0),vec3(1,0,0))*q.o,vec3(1,0,0)*o.o);\n    float by = dot(B(r+e.yxy,.99*_s_,vec3(0),vec3(1,0,0))*q.o,vec3(1,0,0)*o.o);\n    float bz = dot(B(r+e.yyx,.99*_s_,vec3(0),vec3(1,0,0))*q.o,vec3(1,0,0)*o.o);\n    \n    o.f += k*vec3(bx-b0,by-b0,bz-b0)/e.x;\n        \n    o.t += k*cross(vec3(1,0,0),B(r,vec3(_s_),vec3(0),vec3(1,0,0))*q.o);\n\n}\nMain {\n    \n    int x = int(U.x); // nth feature\n    int y = int(U.y); // nth object\n    if (x > 8 || y > N) discard;  \n    obj me = get(y);\n    \n    \n    me.f = vec3(0,-G,0);\n    me.t = vec3(0);\n    \n    for (int i = min(0,iFrame); i < N; i++) if (i != y) { \n        \n        obj o = get(i);\n        \n        magnet_magnet(me,o);\n        \n        if (length(o.m-me.m)<2.01*length(_s_)) cube_cube(me,o);\n    \n    }\n    \n    boundaries(me);\n    me.v = dt*me.f + me.v*.999;\n    me.m = dt*.5*me.f + dt*me.v + me.m;\n    me.s = dt*me.t + me.s;\n    me.o = me.o * matrix(.5*dt*me.s+dt*me.t);\n    me.o[0] = normalize(cross(me.o[1],me.o[2]));\n    me.o[1] = normalize(cross(me.o[2],me.o[0]));\n    me.o[2] = normalize(cross(me.o[0],me.o[1]));\n    if (iFrame < 1) {\n        \n        me = obj (\n            vec3(.2*sin(float(y)*123.4),float(y)*.4,.2*sin(float(y)*10.)),\n            rotationMatrix(3.14*.5+55.*float(y),0.6+float(y)*.2,0.),\n            vec3(0),\n            vec3(0.05*sin(float(y)*.3),0.1*cos(float(y)*.77),0),\n            mat3(1),\n            vec3(0),\n            vec3(0)\n        \n        );\n    \n    }\n    \n    Q = set(me,x);\n\n\n}\nobj get (int i) {\n    return obj(\n        A(0,i).xyz,\n        mat3(\n            A(1,i).xyz,\n            A(2,i).xyz,\n            A(3,i).xyz),\n        A(4,i).xyz,\n        A(5,i).xyz,\n        mat3(1),\n        vec3(0),\n        vec3(0)\n    );\n}\nvec4 set (obj o,int x) {\n    if (x==0) return vec4(o.m,1);\n    if (x==1) return vec4(o.o[0],1);\n    if (x==2) return vec4(o.o[1],1);\n    if (x==3) return vec4(o.o[2],1);\n    if (x==4) return vec4(o.v,1);\n    if (x==5) return vec4(o.s,1);\n    o.io = inverse(o.o);\n    if (x==6) return vec4(o.io[0],1);\n    if (x==7) return vec4(o.io[1],1);\n    if (x==8) return vec4(o.io[2],1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 260,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer03.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "obj get (int i);vec4 set (obj o,int x);\n\nvoid triangle_triangle (inout obj o, inout obj q, vec3 a, vec3 b, vec3 c, vec3 e, vec3 g, vec3 h) {\n    vec3 _, f;\n    a = a*o.o+o.m;\n    b = b*o.o+o.m;\n    c = c*o.o+o.m;\n    e = e*q.o+q.m;\n    g = g*q.o+q.m;\n    h = h*q.o+q.m;\n    if (line_triangle(a,b,e,g,h ,_,f)) {\n        f += K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }\n    if (line_triangle(b,c,e,g,h ,_,f)) {\n        f += K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }\n    if (line_triangle(c,a,e,g,h ,_,f)) {\n        f += K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }    \n    \n    if (line_triangle(e,g,a,b,c ,_,f)) {\n        f = -f+ K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }\n    if (line_triangle(g,h,a,b,c ,_,f)) {\n        f = -f+ K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    } \n    if (line_triangle(h,e,a,b,c ,_,f)) {\n        f = -f+ K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }\n}\nvoid cube_cube(inout obj o, inout obj q) {\n    triangle_triangle(o,q,_T1,_T1);\n    triangle_triangle(o,q,_T1,_T2);\n    triangle_triangle(o,q,_T1,_T3);\n    triangle_triangle(o,q,_T1,_T4);\n    triangle_triangle(o,q,_T1,_T5);\n    triangle_triangle(o,q,_T1,_T6);\n    triangle_triangle(o,q,_T1,_T7);\n    triangle_triangle(o,q,_T1,_T8);\n    triangle_triangle(o,q,_T1,_T9);\n    triangle_triangle(o,q,_T1,_T10);\n    triangle_triangle(o,q,_T1,_T11);\n    triangle_triangle(o,q,_T1,_T12);\n    triangle_triangle(o,q,_T2,_T1);\n    triangle_triangle(o,q,_T2,_T2);\n    triangle_triangle(o,q,_T2,_T3);\n    triangle_triangle(o,q,_T2,_T4);\n    triangle_triangle(o,q,_T2,_T5);\n    triangle_triangle(o,q,_T2,_T6);\n    triangle_triangle(o,q,_T2,_T7);\n    triangle_triangle(o,q,_T2,_T8);\n    triangle_triangle(o,q,_T2,_T9);\n    triangle_triangle(o,q,_T2,_T10);\n    triangle_triangle(o,q,_T2,_T11);\n    triangle_triangle(o,q,_T2,_T12);\n    triangle_triangle(o,q,_T3,_T1);\n    triangle_triangle(o,q,_T3,_T2);\n    triangle_triangle(o,q,_T3,_T3);\n    triangle_triangle(o,q,_T3,_T4);\n    triangle_triangle(o,q,_T3,_T5);\n    triangle_triangle(o,q,_T3,_T6);\n    triangle_triangle(o,q,_T3,_T7);\n    triangle_triangle(o,q,_T3,_T8);\n    triangle_triangle(o,q,_T3,_T9);\n    triangle_triangle(o,q,_T3,_T10);\n    triangle_triangle(o,q,_T3,_T11);\n    triangle_triangle(o,q,_T3,_T12);\n    triangle_triangle(o,q,_T4,_T1);\n    triangle_triangle(o,q,_T4,_T2);\n    triangle_triangle(o,q,_T4,_T3);\n    triangle_triangle(o,q,_T4,_T4);\n    triangle_triangle(o,q,_T4,_T5);\n    triangle_triangle(o,q,_T4,_T6);\n    triangle_triangle(o,q,_T4,_T7);\n    triangle_triangle(o,q,_T4,_T8);\n    triangle_triangle(o,q,_T4,_T9);\n    triangle_triangle(o,q,_T4,_T10);\n    triangle_triangle(o,q,_T4,_T11);\n    triangle_triangle(o,q,_T4,_T12);\n    triangle_triangle(o,q,_T5,_T1);\n    triangle_triangle(o,q,_T5,_T2);\n    triangle_triangle(o,q,_T5,_T3);\n    triangle_triangle(o,q,_T5,_T4);\n    triangle_triangle(o,q,_T5,_T5);\n    triangle_triangle(o,q,_T5,_T6);\n    triangle_triangle(o,q,_T5,_T7);\n    triangle_triangle(o,q,_T5,_T8);\n    triangle_triangle(o,q,_T5,_T9);\n    triangle_triangle(o,q,_T5,_T10);\n    triangle_triangle(o,q,_T5,_T11);\n    triangle_triangle(o,q,_T5,_T12);\n    triangle_triangle(o,q,_T6,_T1);\n    triangle_triangle(o,q,_T6,_T2);\n    triangle_triangle(o,q,_T6,_T3);\n    triangle_triangle(o,q,_T6,_T4);\n    triangle_triangle(o,q,_T6,_T5);\n    triangle_triangle(o,q,_T6,_T6);\n    triangle_triangle(o,q,_T6,_T7);\n    triangle_triangle(o,q,_T6,_T8);\n    triangle_triangle(o,q,_T6,_T9);\n    triangle_triangle(o,q,_T6,_T10);\n    triangle_triangle(o,q,_T6,_T11);\n    triangle_triangle(o,q,_T6,_T12);\n    triangle_triangle(o,q,_T7,_T1);\n    triangle_triangle(o,q,_T7,_T2);\n    triangle_triangle(o,q,_T7,_T3);\n    triangle_triangle(o,q,_T7,_T4);\n    triangle_triangle(o,q,_T7,_T5);\n    triangle_triangle(o,q,_T7,_T6);\n    triangle_triangle(o,q,_T7,_T7);\n    triangle_triangle(o,q,_T7,_T8);\n    triangle_triangle(o,q,_T7,_T9);\n    triangle_triangle(o,q,_T7,_T10);\n    triangle_triangle(o,q,_T7,_T11);\n    triangle_triangle(o,q,_T7,_T12);\n    triangle_triangle(o,q,_T8,_T1);\n    triangle_triangle(o,q,_T8,_T2);\n    triangle_triangle(o,q,_T8,_T3);\n    triangle_triangle(o,q,_T8,_T4);\n    triangle_triangle(o,q,_T8,_T5);\n    triangle_triangle(o,q,_T8,_T6);\n    triangle_triangle(o,q,_T8,_T7);\n    triangle_triangle(o,q,_T8,_T8);\n    triangle_triangle(o,q,_T8,_T9);\n    triangle_triangle(o,q,_T8,_T10);\n    triangle_triangle(o,q,_T8,_T11);\n    triangle_triangle(o,q,_T8,_T12);\n    triangle_triangle(o,q,_T9,_T1);\n    triangle_triangle(o,q,_T9,_T2);\n    triangle_triangle(o,q,_T9,_T3);\n    triangle_triangle(o,q,_T9,_T4);\n    triangle_triangle(o,q,_T9,_T5);\n    triangle_triangle(o,q,_T9,_T6);\n    triangle_triangle(o,q,_T9,_T7);\n    triangle_triangle(o,q,_T9,_T8);\n    triangle_triangle(o,q,_T9,_T9);\n    triangle_triangle(o,q,_T9,_T10);\n    triangle_triangle(o,q,_T9,_T11);\n    triangle_triangle(o,q,_T9,_T12);\n    triangle_triangle(o,q,_T10,_T1);\n    triangle_triangle(o,q,_T10,_T2);\n    triangle_triangle(o,q,_T10,_T3);\n    triangle_triangle(o,q,_T10,_T4);\n    triangle_triangle(o,q,_T10,_T5);\n    triangle_triangle(o,q,_T10,_T6);\n    triangle_triangle(o,q,_T10,_T7);\n    triangle_triangle(o,q,_T10,_T8);\n    triangle_triangle(o,q,_T10,_T9);\n    triangle_triangle(o,q,_T10,_T10);\n    triangle_triangle(o,q,_T10,_T11);\n    triangle_triangle(o,q,_T10,_T12);\n    triangle_triangle(o,q,_T11,_T1);\n    triangle_triangle(o,q,_T11,_T2);\n    triangle_triangle(o,q,_T11,_T3);\n    triangle_triangle(o,q,_T11,_T4);\n    triangle_triangle(o,q,_T11,_T5);\n    triangle_triangle(o,q,_T11,_T6);\n    triangle_triangle(o,q,_T11,_T7);\n    triangle_triangle(o,q,_T11,_T8);\n    triangle_triangle(o,q,_T11,_T9);\n    triangle_triangle(o,q,_T11,_T10);\n    triangle_triangle(o,q,_T11,_T11);\n    triangle_triangle(o,q,_T11,_T12);\n    triangle_triangle(o,q,_T12,_T1);\n    triangle_triangle(o,q,_T12,_T2);\n    triangle_triangle(o,q,_T12,_T3);\n    triangle_triangle(o,q,_T12,_T4);\n    triangle_triangle(o,q,_T12,_T5);\n    triangle_triangle(o,q,_T12,_T6);\n    triangle_triangle(o,q,_T12,_T7);\n    triangle_triangle(o,q,_T12,_T8);\n    triangle_triangle(o,q,_T12,_T9);\n    triangle_triangle(o,q,_T12,_T10);\n    triangle_triangle(o,q,_T12,_T11);\n    triangle_triangle(o,q,_T12,_T12);\n}\nvoid tri_boundaries (inout obj o, vec3 a, vec3 b, vec3 c) {\n    a = a*o.o+o.m;\n    b = b*o.o+o.m;\n    c = c*o.o+o.m;\n    vec3 da = -velocity(o,a);\n    vec3 db = -velocity(o,b);\n    vec3 dc = -velocity(o,c);\n    \n    if (a.y < -.5) impulse(o, a, vec3(0,-a.y-.5,0) + K3*da);\n    if (b.y < -.5) impulse(o, b, vec3(0,-b.y-.5,0) + K3*db);\n    if (c.y < -.5) impulse(o, c, vec3(0,-c.y-.5,0) + K3*dc);\n    \n    if (a.x < -1.) impulse(o, a, vec3(-a.x-1.,0,0) + K3*da);\n    if (b.x < -1.) impulse(o, b, vec3(-b.x-1.,0,0) + K3*db);\n    if (c.x < -1.) impulse(o, c, vec3(-c.x-1.,0,0) + K3*dc);\n    \n    if (a.z < -1.) impulse(o, a, vec3(0,0,-a.z-1.) + K3*da);\n    if (b.z < -1.) impulse(o, b, vec3(0,0,-b.z-1.) + K3*db);\n    if (c.z < -1.) impulse(o, c, vec3(0,0,-c.z-1.) + K3*dc);\n    \n    if (a.x > +1.) impulse(o, a, vec3(1.-a.x,0,0) +  K3*da);\n    if (b.x > +1.) impulse(o, b, vec3(1.-b.x,0,0) +  K3*db);\n    if (c.x > +1.) impulse(o, c, vec3(1.-c.x,0,0) +  K3*dc);\n    \n    if (a.z > +1.) impulse(o, a, vec3(0,0,1.-a.z) +  K3*da);\n    if (b.z > +1.) impulse(o, b, vec3(0,0,1.-b.z) +  K3*db);\n    if (c.z > +1.) impulse(o, c, vec3(0,0,1.-c.z) +  K3*dc);\n    \n}\nvoid boundaries (inout obj o) {\n\n    tri_boundaries(o,_T1);\n    tri_boundaries(o,_T2);\n    tri_boundaries(o,_T3);\n    tri_boundaries(o,_T4);\n    tri_boundaries(o,_T5);\n    tri_boundaries(o,_T6);\n    tri_boundaries(o,_T7);\n    tri_boundaries(o,_T8);\n    tri_boundaries(o,_T9);\n    tri_boundaries(o,_T10);\n    tri_boundaries(o,_T11);\n    tri_boundaries(o,_T12);\n}\nvoid magnet_magnet(inout obj o, obj q) {\n    vec2 e = vec2(1e-2,0);\n    vec3 r = (o.m-q.m)*q.io;\n    float k = K;\n    \n    float b0 = dot(B(r,.99*_s_,vec3(0),vec3(1,0,0))*q.o,vec3(1,0,0)*o.o);\n    float bx = dot(B(r+e.xyy,.99*_s_,vec3(0),vec3(1,0,0))*q.o,vec3(1,0,0)*o.o);\n    float by = dot(B(r+e.yxy,.99*_s_,vec3(0),vec3(1,0,0))*q.o,vec3(1,0,0)*o.o);\n    float bz = dot(B(r+e.yyx,.99*_s_,vec3(0),vec3(1,0,0))*q.o,vec3(1,0,0)*o.o);\n    \n    o.f += k*vec3(bx-b0,by-b0,bz-b0)/e.x;\n        \n    o.t += k*cross(vec3(1,0,0),B(r,vec3(_s_),vec3(0),vec3(1,0,0))*q.o);\n\n}\nMain {\n    \n    int x = int(U.x); // nth feature\n    int y = int(U.y); // nth object\n    if (x > 8 || y > N) discard;  \n    obj me = get(y);\n    \n    \n    me.f = vec3(0,-G,0);\n    me.t = vec3(0);\n    \n    for (int i = min(0,iFrame); i < N; i++) if (i != y) { \n        \n        obj o = get(i);\n        \n        magnet_magnet(me,o);\n        \n        if (length(o.m-me.m)<2.01*length(_s_)) cube_cube(me,o);\n    \n    }\n    \n    boundaries(me);\n    me.v = dt*me.f + me.v*.999;\n    me.m = dt*.5*me.f + dt*me.v + me.m;\n    me.s = dt*me.t + me.s;\n    me.o = me.o * matrix(.5*dt*me.s+dt*me.t);\n    me.o[0] = normalize(cross(me.o[1],me.o[2]));\n    me.o[1] = normalize(cross(me.o[2],me.o[0]));\n    me.o[2] = normalize(cross(me.o[0],me.o[1]));\n    if (iFrame < 1) {\n        \n        me = obj (\n            vec3(.2*sin(float(y)*123.4),float(y)*.4,.2*sin(float(y)*10.)),\n            rotationMatrix(3.14*.5+55.*float(y),0.6+float(y)*.2,0.),\n            vec3(0),\n            vec3(0.05*sin(float(y)*.3),0.1*cos(float(y)*.77),0),\n            mat3(1),\n            vec3(0),\n            vec3(0)\n        \n        );\n    \n    }\n    \n    Q = set(me,x);\n\n\n}\nobj get (int i) {\n    return obj(\n        A(0,i).xyz,\n        mat3(\n            A(1,i).xyz,\n            A(2,i).xyz,\n            A(3,i).xyz),\n        A(4,i).xyz,\n        A(5,i).xyz,\n        mat3(1),\n        vec3(0),\n        vec3(0)\n    );\n}\nvec4 set (obj o,int x) {\n    if (x==0) return vec4(o.m,1);\n    if (x==1) return vec4(o.o[0],1);\n    if (x==2) return vec4(o.o[1],1);\n    if (x==3) return vec4(o.o[2],1);\n    if (x==4) return vec4(o.v,1);\n    if (x==5) return vec4(o.s,1);\n    o.io = inverse(o.o);\n    if (x==6) return vec4(o.io[0],1);\n    if (x==7) return vec4(o.io[1],1);\n    if (x==8) return vec4(o.io[2],1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "obj get (int i);vec4 set (obj o,int x);\n\nvoid triangle_triangle (inout obj o, inout obj q, vec3 a, vec3 b, vec3 c, vec3 e, vec3 g, vec3 h) {\n    vec3 _, f;\n    a = a*o.o+o.m;\n    b = b*o.o+o.m;\n    c = c*o.o+o.m;\n    e = e*q.o+q.m;\n    g = g*q.o+q.m;\n    h = h*q.o+q.m;\n    if (line_triangle(a,b,e,g,h ,_,f)) {\n        f += K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }\n    if (line_triangle(b,c,e,g,h ,_,f)) {\n        f += K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }\n    if (line_triangle(c,a,e,g,h ,_,f)) {\n        f += K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }    \n    \n    if (line_triangle(e,g,a,b,c ,_,f)) {\n        f = -f+ K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }\n    if (line_triangle(g,h,a,b,c ,_,f)) {\n        f = -f+ K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    } \n    if (line_triangle(h,e,a,b,c ,_,f)) {\n        f = -f+ K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }\n}\nvoid cube_cube(inout obj o, inout obj q) {\n    triangle_triangle(o,q,_T1,_T1);\n    triangle_triangle(o,q,_T1,_T2);\n    triangle_triangle(o,q,_T1,_T3);\n    triangle_triangle(o,q,_T1,_T4);\n    triangle_triangle(o,q,_T1,_T5);\n    triangle_triangle(o,q,_T1,_T6);\n    triangle_triangle(o,q,_T1,_T7);\n    triangle_triangle(o,q,_T1,_T8);\n    triangle_triangle(o,q,_T1,_T9);\n    triangle_triangle(o,q,_T1,_T10);\n    triangle_triangle(o,q,_T1,_T11);\n    triangle_triangle(o,q,_T1,_T12);\n    triangle_triangle(o,q,_T2,_T1);\n    triangle_triangle(o,q,_T2,_T2);\n    triangle_triangle(o,q,_T2,_T3);\n    triangle_triangle(o,q,_T2,_T4);\n    triangle_triangle(o,q,_T2,_T5);\n    triangle_triangle(o,q,_T2,_T6);\n    triangle_triangle(o,q,_T2,_T7);\n    triangle_triangle(o,q,_T2,_T8);\n    triangle_triangle(o,q,_T2,_T9);\n    triangle_triangle(o,q,_T2,_T10);\n    triangle_triangle(o,q,_T2,_T11);\n    triangle_triangle(o,q,_T2,_T12);\n    triangle_triangle(o,q,_T3,_T1);\n    triangle_triangle(o,q,_T3,_T2);\n    triangle_triangle(o,q,_T3,_T3);\n    triangle_triangle(o,q,_T3,_T4);\n    triangle_triangle(o,q,_T3,_T5);\n    triangle_triangle(o,q,_T3,_T6);\n    triangle_triangle(o,q,_T3,_T7);\n    triangle_triangle(o,q,_T3,_T8);\n    triangle_triangle(o,q,_T3,_T9);\n    triangle_triangle(o,q,_T3,_T10);\n    triangle_triangle(o,q,_T3,_T11);\n    triangle_triangle(o,q,_T3,_T12);\n    triangle_triangle(o,q,_T4,_T1);\n    triangle_triangle(o,q,_T4,_T2);\n    triangle_triangle(o,q,_T4,_T3);\n    triangle_triangle(o,q,_T4,_T4);\n    triangle_triangle(o,q,_T4,_T5);\n    triangle_triangle(o,q,_T4,_T6);\n    triangle_triangle(o,q,_T4,_T7);\n    triangle_triangle(o,q,_T4,_T8);\n    triangle_triangle(o,q,_T4,_T9);\n    triangle_triangle(o,q,_T4,_T10);\n    triangle_triangle(o,q,_T4,_T11);\n    triangle_triangle(o,q,_T4,_T12);\n    triangle_triangle(o,q,_T5,_T1);\n    triangle_triangle(o,q,_T5,_T2);\n    triangle_triangle(o,q,_T5,_T3);\n    triangle_triangle(o,q,_T5,_T4);\n    triangle_triangle(o,q,_T5,_T5);\n    triangle_triangle(o,q,_T5,_T6);\n    triangle_triangle(o,q,_T5,_T7);\n    triangle_triangle(o,q,_T5,_T8);\n    triangle_triangle(o,q,_T5,_T9);\n    triangle_triangle(o,q,_T5,_T10);\n    triangle_triangle(o,q,_T5,_T11);\n    triangle_triangle(o,q,_T5,_T12);\n    triangle_triangle(o,q,_T6,_T1);\n    triangle_triangle(o,q,_T6,_T2);\n    triangle_triangle(o,q,_T6,_T3);\n    triangle_triangle(o,q,_T6,_T4);\n    triangle_triangle(o,q,_T6,_T5);\n    triangle_triangle(o,q,_T6,_T6);\n    triangle_triangle(o,q,_T6,_T7);\n    triangle_triangle(o,q,_T6,_T8);\n    triangle_triangle(o,q,_T6,_T9);\n    triangle_triangle(o,q,_T6,_T10);\n    triangle_triangle(o,q,_T6,_T11);\n    triangle_triangle(o,q,_T6,_T12);\n    triangle_triangle(o,q,_T7,_T1);\n    triangle_triangle(o,q,_T7,_T2);\n    triangle_triangle(o,q,_T7,_T3);\n    triangle_triangle(o,q,_T7,_T4);\n    triangle_triangle(o,q,_T7,_T5);\n    triangle_triangle(o,q,_T7,_T6);\n    triangle_triangle(o,q,_T7,_T7);\n    triangle_triangle(o,q,_T7,_T8);\n    triangle_triangle(o,q,_T7,_T9);\n    triangle_triangle(o,q,_T7,_T10);\n    triangle_triangle(o,q,_T7,_T11);\n    triangle_triangle(o,q,_T7,_T12);\n    triangle_triangle(o,q,_T8,_T1);\n    triangle_triangle(o,q,_T8,_T2);\n    triangle_triangle(o,q,_T8,_T3);\n    triangle_triangle(o,q,_T8,_T4);\n    triangle_triangle(o,q,_T8,_T5);\n    triangle_triangle(o,q,_T8,_T6);\n    triangle_triangle(o,q,_T8,_T7);\n    triangle_triangle(o,q,_T8,_T8);\n    triangle_triangle(o,q,_T8,_T9);\n    triangle_triangle(o,q,_T8,_T10);\n    triangle_triangle(o,q,_T8,_T11);\n    triangle_triangle(o,q,_T8,_T12);\n    triangle_triangle(o,q,_T9,_T1);\n    triangle_triangle(o,q,_T9,_T2);\n    triangle_triangle(o,q,_T9,_T3);\n    triangle_triangle(o,q,_T9,_T4);\n    triangle_triangle(o,q,_T9,_T5);\n    triangle_triangle(o,q,_T9,_T6);\n    triangle_triangle(o,q,_T9,_T7);\n    triangle_triangle(o,q,_T9,_T8);\n    triangle_triangle(o,q,_T9,_T9);\n    triangle_triangle(o,q,_T9,_T10);\n    triangle_triangle(o,q,_T9,_T11);\n    triangle_triangle(o,q,_T9,_T12);\n    triangle_triangle(o,q,_T10,_T1);\n    triangle_triangle(o,q,_T10,_T2);\n    triangle_triangle(o,q,_T10,_T3);\n    triangle_triangle(o,q,_T10,_T4);\n    triangle_triangle(o,q,_T10,_T5);\n    triangle_triangle(o,q,_T10,_T6);\n    triangle_triangle(o,q,_T10,_T7);\n    triangle_triangle(o,q,_T10,_T8);\n    triangle_triangle(o,q,_T10,_T9);\n    triangle_triangle(o,q,_T10,_T10);\n    triangle_triangle(o,q,_T10,_T11);\n    triangle_triangle(o,q,_T10,_T12);\n    triangle_triangle(o,q,_T11,_T1);\n    triangle_triangle(o,q,_T11,_T2);\n    triangle_triangle(o,q,_T11,_T3);\n    triangle_triangle(o,q,_T11,_T4);\n    triangle_triangle(o,q,_T11,_T5);\n    triangle_triangle(o,q,_T11,_T6);\n    triangle_triangle(o,q,_T11,_T7);\n    triangle_triangle(o,q,_T11,_T8);\n    triangle_triangle(o,q,_T11,_T9);\n    triangle_triangle(o,q,_T11,_T10);\n    triangle_triangle(o,q,_T11,_T11);\n    triangle_triangle(o,q,_T11,_T12);\n    triangle_triangle(o,q,_T12,_T1);\n    triangle_triangle(o,q,_T12,_T2);\n    triangle_triangle(o,q,_T12,_T3);\n    triangle_triangle(o,q,_T12,_T4);\n    triangle_triangle(o,q,_T12,_T5);\n    triangle_triangle(o,q,_T12,_T6);\n    triangle_triangle(o,q,_T12,_T7);\n    triangle_triangle(o,q,_T12,_T8);\n    triangle_triangle(o,q,_T12,_T9);\n    triangle_triangle(o,q,_T12,_T10);\n    triangle_triangle(o,q,_T12,_T11);\n    triangle_triangle(o,q,_T12,_T12);\n}\nvoid tri_boundaries (inout obj o, vec3 a, vec3 b, vec3 c) {\n    a = a*o.o+o.m;\n    b = b*o.o+o.m;\n    c = c*o.o+o.m;\n    vec3 da = -velocity(o,a);\n    vec3 db = -velocity(o,b);\n    vec3 dc = -velocity(o,c);\n    \n    if (a.y < -.5) impulse(o, a, vec3(0,-a.y-.5,0) + K3*da);\n    if (b.y < -.5) impulse(o, b, vec3(0,-b.y-.5,0) + K3*db);\n    if (c.y < -.5) impulse(o, c, vec3(0,-c.y-.5,0) + K3*dc);\n    \n    if (a.x < -1.) impulse(o, a, vec3(-a.x-1.,0,0) + K3*da);\n    if (b.x < -1.) impulse(o, b, vec3(-b.x-1.,0,0) + K3*db);\n    if (c.x < -1.) impulse(o, c, vec3(-c.x-1.,0,0) + K3*dc);\n    \n    if (a.z < -1.) impulse(o, a, vec3(0,0,-a.z-1.) + K3*da);\n    if (b.z < -1.) impulse(o, b, vec3(0,0,-b.z-1.) + K3*db);\n    if (c.z < -1.) impulse(o, c, vec3(0,0,-c.z-1.) + K3*dc);\n    \n    if (a.x > +1.) impulse(o, a, vec3(1.-a.x,0,0) +  K3*da);\n    if (b.x > +1.) impulse(o, b, vec3(1.-b.x,0,0) +  K3*db);\n    if (c.x > +1.) impulse(o, c, vec3(1.-c.x,0,0) +  K3*dc);\n    \n    if (a.z > +1.) impulse(o, a, vec3(0,0,1.-a.z) +  K3*da);\n    if (b.z > +1.) impulse(o, b, vec3(0,0,1.-b.z) +  K3*db);\n    if (c.z > +1.) impulse(o, c, vec3(0,0,1.-c.z) +  K3*dc);\n    \n}\nvoid boundaries (inout obj o) {\n\n    tri_boundaries(o,_T1);\n    tri_boundaries(o,_T2);\n    tri_boundaries(o,_T3);\n    tri_boundaries(o,_T4);\n    tri_boundaries(o,_T5);\n    tri_boundaries(o,_T6);\n    tri_boundaries(o,_T7);\n    tri_boundaries(o,_T8);\n    tri_boundaries(o,_T9);\n    tri_boundaries(o,_T10);\n    tri_boundaries(o,_T11);\n    tri_boundaries(o,_T12);\n}\nvoid magnet_magnet(inout obj o, obj q) {\n    vec2 e = vec2(1e-2,0);\n    vec3 r = (o.m-q.m)*q.io;\n    float k = K;\n    \n    float b0 = dot(B(r,.99*_s_,vec3(0),vec3(1,0,0))*q.o,vec3(1,0,0)*o.o);\n    float bx = dot(B(r+e.xyy,.99*_s_,vec3(0),vec3(1,0,0))*q.o,vec3(1,0,0)*o.o);\n    float by = dot(B(r+e.yxy,.99*_s_,vec3(0),vec3(1,0,0))*q.o,vec3(1,0,0)*o.o);\n    float bz = dot(B(r+e.yyx,.99*_s_,vec3(0),vec3(1,0,0))*q.o,vec3(1,0,0)*o.o);\n    \n    o.f += k*vec3(bx-b0,by-b0,bz-b0)/e.x;\n        \n    o.t += k*cross(vec3(1,0,0),B(r,vec3(_s_),vec3(0),vec3(1,0,0))*q.o);\n\n}\nMain {\n    \n    int x = int(U.x); // nth feature\n    int y = int(U.y); // nth object\n    if (x > 8 || y > N) discard;  \n    obj me = get(y);\n    \n    \n    me.f = vec3(0,-G,0);\n    me.t = vec3(0);\n    \n    for (int i = min(0,iFrame); i < N; i++) if (i != y) { \n        \n        obj o = get(i);\n        \n        magnet_magnet(me,o);\n        \n        if (length(o.m-me.m)<2.01*length(_s_)) cube_cube(me,o);\n    \n    }\n    \n    boundaries(me);\n    me.v = dt*me.f + me.v*.999;\n    me.m = dt*.5*me.f + dt*me.v + me.m;\n    me.s = dt*me.t + me.s;\n    me.o = me.o * matrix(.5*dt*me.s+dt*me.t);\n    me.o[0] = normalize(cross(me.o[1],me.o[2]));\n    me.o[1] = normalize(cross(me.o[2],me.o[0]));\n    me.o[2] = normalize(cross(me.o[0],me.o[1]));\n    if (iFrame < 1) {\n        \n        me = obj (\n            vec3(.2*sin(float(y)*123.4),float(y)*.4,.2*sin(float(y)*10.)),\n            rotationMatrix(3.14*.5+55.*float(y),0.6+float(y)*.2,0.),\n            vec3(0),\n            vec3(0.05*sin(float(y)*.3),0.1*cos(float(y)*.77),0),\n            mat3(1),\n            vec3(0),\n            vec3(0)\n        \n        );\n    \n    }\n    \n    Q = set(me,x);\n\n\n}\nobj get (int i) {\n    return obj(\n        A(0,i).xyz,\n        mat3(\n            A(1,i).xyz,\n            A(2,i).xyz,\n            A(3,i).xyz),\n        A(4,i).xyz,\n        A(5,i).xyz,\n        mat3(1),\n        vec3(0),\n        vec3(0)\n    );\n}\nvec4 set (obj o,int x) {\n    if (x==0) return vec4(o.m,1);\n    if (x==1) return vec4(o.o[0],1);\n    if (x==2) return vec4(o.o[1],1);\n    if (x==3) return vec4(o.o[2],1);\n    if (x==4) return vec4(o.v,1);\n    if (x==5) return vec4(o.s,1);\n    o.io = inverse(o.o);\n    if (x==6) return vec4(o.io[0],1);\n    if (x==7) return vec4(o.io[1],1);\n    if (x==8) return vec4(o.io[2],1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "obj get (int i);vec4 set (obj o,int x);\n\nvoid triangle_triangle (inout obj o, inout obj q, vec3 a, vec3 b, vec3 c, vec3 e, vec3 g, vec3 h) {\n    vec3 _, f;\n    a = a*o.o+o.m;\n    b = b*o.o+o.m;\n    c = c*o.o+o.m;\n    e = e*q.o+q.m;\n    g = g*q.o+q.m;\n    h = h*q.o+q.m;\n    if (line_triangle(a,b,e,g,h ,_,f)) {\n        f += K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }\n    if (line_triangle(b,c,e,g,h ,_,f)) {\n        f += K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }\n    if (line_triangle(c,a,e,g,h ,_,f)) {\n        f += K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }    \n    \n    if (line_triangle(e,g,a,b,c ,_,f)) {\n        f = -f+ K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }\n    if (line_triangle(g,h,a,b,c ,_,f)) {\n        f = -f+ K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    } \n    if (line_triangle(h,e,a,b,c ,_,f)) {\n        f = -f+ K2*(velocity(q,_)-velocity(o,_));\n        impulse(o,_,f);\n    }\n}\nvoid cube_cube(inout obj o, inout obj q) {\n    triangle_triangle(o,q,_T1,_T1);\n    triangle_triangle(o,q,_T1,_T2);\n    triangle_triangle(o,q,_T1,_T3);\n    triangle_triangle(o,q,_T1,_T4);\n    triangle_triangle(o,q,_T1,_T5);\n    triangle_triangle(o,q,_T1,_T6);\n    triangle_triangle(o,q,_T1,_T7);\n    triangle_triangle(o,q,_T1,_T8);\n    triangle_triangle(o,q,_T1,_T9);\n    triangle_triangle(o,q,_T1,_T10);\n    triangle_triangle(o,q,_T1,_T11);\n    triangle_triangle(o,q,_T1,_T12);\n    triangle_triangle(o,q,_T2,_T1);\n    triangle_triangle(o,q,_T2,_T2);\n    triangle_triangle(o,q,_T2,_T3);\n    triangle_triangle(o,q,_T2,_T4);\n    triangle_triangle(o,q,_T2,_T5);\n    triangle_triangle(o,q,_T2,_T6);\n    triangle_triangle(o,q,_T2,_T7);\n    triangle_triangle(o,q,_T2,_T8);\n    triangle_triangle(o,q,_T2,_T9);\n    triangle_triangle(o,q,_T2,_T10);\n    triangle_triangle(o,q,_T2,_T11);\n    triangle_triangle(o,q,_T2,_T12);\n    triangle_triangle(o,q,_T3,_T1);\n    triangle_triangle(o,q,_T3,_T2);\n    triangle_triangle(o,q,_T3,_T3);\n    triangle_triangle(o,q,_T3,_T4);\n    triangle_triangle(o,q,_T3,_T5);\n    triangle_triangle(o,q,_T3,_T6);\n    triangle_triangle(o,q,_T3,_T7);\n    triangle_triangle(o,q,_T3,_T8);\n    triangle_triangle(o,q,_T3,_T9);\n    triangle_triangle(o,q,_T3,_T10);\n    triangle_triangle(o,q,_T3,_T11);\n    triangle_triangle(o,q,_T3,_T12);\n    triangle_triangle(o,q,_T4,_T1);\n    triangle_triangle(o,q,_T4,_T2);\n    triangle_triangle(o,q,_T4,_T3);\n    triangle_triangle(o,q,_T4,_T4);\n    triangle_triangle(o,q,_T4,_T5);\n    triangle_triangle(o,q,_T4,_T6);\n    triangle_triangle(o,q,_T4,_T7);\n    triangle_triangle(o,q,_T4,_T8);\n    triangle_triangle(o,q,_T4,_T9);\n    triangle_triangle(o,q,_T4,_T10);\n    triangle_triangle(o,q,_T4,_T11);\n    triangle_triangle(o,q,_T4,_T12);\n    triangle_triangle(o,q,_T5,_T1);\n    triangle_triangle(o,q,_T5,_T2);\n    triangle_triangle(o,q,_T5,_T3);\n    triangle_triangle(o,q,_T5,_T4);\n    triangle_triangle(o,q,_T5,_T5);\n    triangle_triangle(o,q,_T5,_T6);\n    triangle_triangle(o,q,_T5,_T7);\n    triangle_triangle(o,q,_T5,_T8);\n    triangle_triangle(o,q,_T5,_T9);\n    triangle_triangle(o,q,_T5,_T10);\n    triangle_triangle(o,q,_T5,_T11);\n    triangle_triangle(o,q,_T5,_T12);\n    triangle_triangle(o,q,_T6,_T1);\n    triangle_triangle(o,q,_T6,_T2);\n    triangle_triangle(o,q,_T6,_T3);\n    triangle_triangle(o,q,_T6,_T4);\n    triangle_triangle(o,q,_T6,_T5);\n    triangle_triangle(o,q,_T6,_T6);\n    triangle_triangle(o,q,_T6,_T7);\n    triangle_triangle(o,q,_T6,_T8);\n    triangle_triangle(o,q,_T6,_T9);\n    triangle_triangle(o,q,_T6,_T10);\n    triangle_triangle(o,q,_T6,_T11);\n    triangle_triangle(o,q,_T6,_T12);\n    triangle_triangle(o,q,_T7,_T1);\n    triangle_triangle(o,q,_T7,_T2);\n    triangle_triangle(o,q,_T7,_T3);\n    triangle_triangle(o,q,_T7,_T4);\n    triangle_triangle(o,q,_T7,_T5);\n    triangle_triangle(o,q,_T7,_T6);\n    triangle_triangle(o,q,_T7,_T7);\n    triangle_triangle(o,q,_T7,_T8);\n    triangle_triangle(o,q,_T7,_T9);\n    triangle_triangle(o,q,_T7,_T10);\n    triangle_triangle(o,q,_T7,_T11);\n    triangle_triangle(o,q,_T7,_T12);\n    triangle_triangle(o,q,_T8,_T1);\n    triangle_triangle(o,q,_T8,_T2);\n    triangle_triangle(o,q,_T8,_T3);\n    triangle_triangle(o,q,_T8,_T4);\n    triangle_triangle(o,q,_T8,_T5);\n    triangle_triangle(o,q,_T8,_T6);\n    triangle_triangle(o,q,_T8,_T7);\n    triangle_triangle(o,q,_T8,_T8);\n    triangle_triangle(o,q,_T8,_T9);\n    triangle_triangle(o,q,_T8,_T10);\n    triangle_triangle(o,q,_T8,_T11);\n    triangle_triangle(o,q,_T8,_T12);\n    triangle_triangle(o,q,_T9,_T1);\n    triangle_triangle(o,q,_T9,_T2);\n    triangle_triangle(o,q,_T9,_T3);\n    triangle_triangle(o,q,_T9,_T4);\n    triangle_triangle(o,q,_T9,_T5);\n    triangle_triangle(o,q,_T9,_T6);\n    triangle_triangle(o,q,_T9,_T7);\n    triangle_triangle(o,q,_T9,_T8);\n    triangle_triangle(o,q,_T9,_T9);\n    triangle_triangle(o,q,_T9,_T10);\n    triangle_triangle(o,q,_T9,_T11);\n    triangle_triangle(o,q,_T9,_T12);\n    triangle_triangle(o,q,_T10,_T1);\n    triangle_triangle(o,q,_T10,_T2);\n    triangle_triangle(o,q,_T10,_T3);\n    triangle_triangle(o,q,_T10,_T4);\n    triangle_triangle(o,q,_T10,_T5);\n    triangle_triangle(o,q,_T10,_T6);\n    triangle_triangle(o,q,_T10,_T7);\n    triangle_triangle(o,q,_T10,_T8);\n    triangle_triangle(o,q,_T10,_T9);\n    triangle_triangle(o,q,_T10,_T10);\n    triangle_triangle(o,q,_T10,_T11);\n    triangle_triangle(o,q,_T10,_T12);\n    triangle_triangle(o,q,_T11,_T1);\n    triangle_triangle(o,q,_T11,_T2);\n    triangle_triangle(o,q,_T11,_T3);\n    triangle_triangle(o,q,_T11,_T4);\n    triangle_triangle(o,q,_T11,_T5);\n    triangle_triangle(o,q,_T11,_T6);\n    triangle_triangle(o,q,_T11,_T7);\n    triangle_triangle(o,q,_T11,_T8);\n    triangle_triangle(o,q,_T11,_T9);\n    triangle_triangle(o,q,_T11,_T10);\n    triangle_triangle(o,q,_T11,_T11);\n    triangle_triangle(o,q,_T11,_T12);\n    triangle_triangle(o,q,_T12,_T1);\n    triangle_triangle(o,q,_T12,_T2);\n    triangle_triangle(o,q,_T12,_T3);\n    triangle_triangle(o,q,_T12,_T4);\n    triangle_triangle(o,q,_T12,_T5);\n    triangle_triangle(o,q,_T12,_T6);\n    triangle_triangle(o,q,_T12,_T7);\n    triangle_triangle(o,q,_T12,_T8);\n    triangle_triangle(o,q,_T12,_T9);\n    triangle_triangle(o,q,_T12,_T10);\n    triangle_triangle(o,q,_T12,_T11);\n    triangle_triangle(o,q,_T12,_T12);\n}\nvoid tri_boundaries (inout obj o, vec3 a, vec3 b, vec3 c) {\n    a = a*o.o+o.m;\n    b = b*o.o+o.m;\n    c = c*o.o+o.m;\n    vec3 da = -velocity(o,a);\n    vec3 db = -velocity(o,b);\n    vec3 dc = -velocity(o,c);\n    \n    if (a.y < -.5) impulse(o, a, vec3(0,-a.y-.5,0) + K3*da);\n    if (b.y < -.5) impulse(o, b, vec3(0,-b.y-.5,0) + K3*db);\n    if (c.y < -.5) impulse(o, c, vec3(0,-c.y-.5,0) + K3*dc);\n    \n    if (a.x < -1.) impulse(o, a, vec3(-a.x-1.,0,0) + K3*da);\n    if (b.x < -1.) impulse(o, b, vec3(-b.x-1.,0,0) + K3*db);\n    if (c.x < -1.) impulse(o, c, vec3(-c.x-1.,0,0) + K3*dc);\n    \n    if (a.z < -1.) impulse(o, a, vec3(0,0,-a.z-1.) + K3*da);\n    if (b.z < -1.) impulse(o, b, vec3(0,0,-b.z-1.) + K3*db);\n    if (c.z < -1.) impulse(o, c, vec3(0,0,-c.z-1.) + K3*dc);\n    \n    if (a.x > +1.) impulse(o, a, vec3(1.-a.x,0,0) +  K3*da);\n    if (b.x > +1.) impulse(o, b, vec3(1.-b.x,0,0) +  K3*db);\n    if (c.x > +1.) impulse(o, c, vec3(1.-c.x,0,0) +  K3*dc);\n    \n    if (a.z > +1.) impulse(o, a, vec3(0,0,1.-a.z) +  K3*da);\n    if (b.z > +1.) impulse(o, b, vec3(0,0,1.-b.z) +  K3*db);\n    if (c.z > +1.) impulse(o, c, vec3(0,0,1.-c.z) +  K3*dc);\n    \n}\nvoid boundaries (inout obj o) {\n\n    tri_boundaries(o,_T1);\n    tri_boundaries(o,_T2);\n    tri_boundaries(o,_T3);\n    tri_boundaries(o,_T4);\n    tri_boundaries(o,_T5);\n    tri_boundaries(o,_T6);\n    tri_boundaries(o,_T7);\n    tri_boundaries(o,_T8);\n    tri_boundaries(o,_T9);\n    tri_boundaries(o,_T10);\n    tri_boundaries(o,_T11);\n    tri_boundaries(o,_T12);\n}\nvoid magnet_magnet(inout obj o, obj q) {\n    vec2 e = vec2(1e-2,0);\n    vec3 r = (o.m-q.m)*q.io;\n    float k = K;\n    \n    float b0 = dot(B(r,.99*_s_,vec3(0),vec3(1,0,0))*q.o,vec3(1,0,0)*o.o);\n    float bx = dot(B(r+e.xyy,.99*_s_,vec3(0),vec3(1,0,0))*q.o,vec3(1,0,0)*o.o);\n    float by = dot(B(r+e.yxy,.99*_s_,vec3(0),vec3(1,0,0))*q.o,vec3(1,0,0)*o.o);\n    float bz = dot(B(r+e.yyx,.99*_s_,vec3(0),vec3(1,0,0))*q.o,vec3(1,0,0)*o.o);\n    \n    o.f += k*vec3(bx-b0,by-b0,bz-b0)/e.x;\n        \n    o.t += k*cross(vec3(1,0,0),B(r,vec3(_s_),vec3(0),vec3(1,0,0))*q.o);\n\n}\nMain {\n    \n    int x = int(U.x); // nth feature\n    int y = int(U.y); // nth object\n    if (x > 8 || y > N) discard;  \n    obj me = get(y);\n    \n    \n    me.f = vec3(0,-G,0);\n    me.t = vec3(0);\n    \n    for (int i = min(0,iFrame); i < N; i++) if (i != y) { \n        \n        obj o = get(i);\n        \n        magnet_magnet(me,o);\n        \n        if (length(o.m-me.m)<2.01*length(_s_)) cube_cube(me,o);\n    \n    }\n    \n    boundaries(me);\n    me.v = dt*me.f + me.v*.999;\n    me.m = dt*.5*me.f + dt*me.v + me.m;\n    me.s = dt*me.t + me.s;\n    me.o = me.o * matrix(.5*dt*me.s+dt*me.t);\n    me.o[0] = normalize(cross(me.o[1],me.o[2]));\n    me.o[1] = normalize(cross(me.o[2],me.o[0]));\n    me.o[2] = normalize(cross(me.o[0],me.o[1]));\n    if (iFrame < 1) {\n        \n        me = obj (\n            vec3(.2*sin(float(y)*123.4),float(y)*.4,.2*sin(float(y)*10.)),\n            rotationMatrix(3.14*.5+55.*float(y),0.6+float(y)*.2,0.),\n            vec3(0),\n            vec3(0.05*sin(float(y)*.3),0.1*cos(float(y)*.77),0),\n            mat3(1),\n            vec3(0),\n            vec3(0)\n        \n        );\n    \n    }\n    \n    Q = set(me,x);\n\n\n}\nobj get (int i) {\n    return obj(\n        A(0,i).xyz,\n        mat3(\n            A(1,i).xyz,\n            A(2,i).xyz,\n            A(3,i).xyz),\n        A(4,i).xyz,\n        A(5,i).xyz,\n        mat3(1),\n        vec3(0),\n        vec3(0)\n    );\n}\nvec4 set (obj o,int x) {\n    if (x==0) return vec4(o.m,1);\n    if (x==1) return vec4(o.o[0],1);\n    if (x==2) return vec4(o.o[1],1);\n    if (x==3) return vec4(o.o[2],1);\n    if (x==4) return vec4(o.v,1);\n    if (x==5) return vec4(o.s,1);\n    o.io = inverse(o.o);\n    if (x==6) return vec4(o.io[0],1);\n    if (x==7) return vec4(o.io[1],1);\n    if (x==8) return vec4(o.io[2],1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Buffer D",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 260
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}