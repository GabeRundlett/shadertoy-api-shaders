{
    "Shader": {
        "info": {
            "date": "1569835845",
            "description": "smallest Conway's game of life\ndeeper golfing of [url]https://shadertoy.com/view/4dGSWR[/url] using modern webGL2 tricks\ncould you find smaller ? ;-)",
            "flags": 32,
            "hasliked": 0,
            "id": "WsV3zW",
            "likes": 4,
            "name": "game of life (223 chars)",
            "published": 3,
            "tags": [
                "automata",
                "life",
                "2tweets",
                "conway",
                "short",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 604
        },
        "renderpass": [
            {
                "code": "// deeper golfing of 311 chars https://shadertoy.com/view/4dGSWR\n// compaction of 890 chars https://www.shadertoy.com/view/4ddSRM\nvoid mainImage(out vec4 O, vec2 U) { mi }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage(out vec4 O, vec2 U) { mi }",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// 224 chars: coyote just #define mainized the prev shader in Common :-p \n//            -1 by Fab\n\n#define T   + texture( iChannel0, P +=                           //\n#define mi                                                        \\\n    vec2 R = iResolution.xy, P = U/R, h = O.zw/R, v = O.wz/R;     \\\n    O =  T -v) T h) T v) T v)  T -h)  T -h) T -v) T -v) - 3.;     \\\n    O = vec4(   O*O == -T h+v)*O                                  \\\n              ||iFrame < 9 && length(P - .5) < .1                 \\\n              ||(O= iMouse).z > .5 && length( O.xy - U ) < 25. );/*\n        \n        \n        \n        \n// --- 229 chars by Fab, -1 by coyote\n\n//#define T(U) texture(iChannel0, (U)/R)   // +1: use this and def R for wrappable domain \n  #define T(U) texelFetch(iChannel0, ivec2(U), 0)                //\n#define mainImage(O,U)                                            \\\n    O-=O;                                                         \\\n    for (int k=0; k<9; k+= k==3? 2: 1 )                           \\\n        O +=  T( U + vec2(k%3,k/3)-1. ) -.375;                    \\\n    O = vec4(   O*O == -T(U)*O                                    \\\n              ||iFrame < 9 && length(U/iResolution.xy - .5) < .1  \\\n              ||(O= iMouse).z > .5 && length( O.xy - U ) < 25.    \\\n            )                                                    /*\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}