{
    "Shader": {
        "info": {
            "date": "1656238204",
            "description": "Hubris. Aiming down. Unnecessary suffering. Bad karma. Punishment pending.",
            "flags": 0,
            "hasliked": 0,
            "id": "ss3Bz7",
            "likes": 3,
            "name": "Nocebo",
            "published": 3,
            "tags": [
                "illusion",
                "perception",
                "goldenratio",
                "disease",
                "reality",
                "biology",
                "illness",
                "stress"
            ],
            "usePreview": 0,
            "username": "blurryroots",
            "viewed": 235
        },
        "renderpass": [
            {
                "code": "// Perception != Realtiy != Truth.\n\n// Shadertoy Educational License\n// You cannot host, display, distribute or share this Work in any form,\n// including physical and digital. You cannot use this Work in any\n// commercial or non-commercial product, website or project. You cannot\n// sell this Work and you cannot mint an NFTs of it.\n// I share this Work for educational purposes, and you can link to it,\n// through an URL, proper attribution and unmodified screenshot, as part\n// of your educational material. If these conditions are too restrictive\n// please contact me and we'll definitely work it out.\n// You are free however, to incorporate this work within the Shadertoy\n// ecosystem, e.g. by forking.\n// This work may incorporate other permissivly shared, educational work,\n// which is attributed appropriatly. Please do so as well.\n// Thanks to https://www.shadertoy.com/user/iq for inspiring this license.\n\n#define SF_THRESHOLD 0.0000001\n\nconst float PI = 355./113.;\nconst float PHI = (1. + sqrt(5.)) / 2.;\nconst float PHI_ONE = PHI - 1.;\nconst float PHI_ONE_INV = 1. - PHI_ONE;\nconst float K = 3., KK = 333.;\nconst float SPEED = PHI_ONE*1., KSPEED = PHI_ONE_INV / 2.;\nconst float SAMPLE_RATE = PHI_ONE_INV;\nconst vec4 base_color = vec4(1. - PHI_ONE, 0., 0., 1.);\nconst vec4 high_color = vec4(PHI_ONE, 0.1, 0.03, 1.);\n\nfloat df_circle(vec3 circle, vec2 uv) {\n    vec2 p = vec2(circle.x, circle.y);\n    float r = circle.z - length(uv - p);\n    return r;\n}\n\nfloat psin(float x) {\n    return (sin(x) + 1.) / 2.;\n}\n\nfloat pcos(float x) {\n    return (cos(x) + 1.) / 2.;\n}\n\nvec2 weird(float time) {\n    float t = time * .1 * 2. * PI;\n    float k = .5 * (psin(t) + pcos(t));\n    float j = pow(PHI, pcos(time))*PHI*PHI_ONE - PHI/2.;\n    return vec2(k, j);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 center = iResolution.xy / 2.;\n    vec3 aspect = vec3(iResolution.x / iResolution.y, 1.0, 1.0);\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 color = vec4(0.);\n    float s = 0.003, S = 0.013;\n    \n    float k = mix(K, KK, psin(iTime*KSPEED));\n    float R = 0.;\n    for (float i = 0.; i < k; i += SAMPLE_RATE) {\n        float n = i / k;\n        float m = 1. - n;\n        float I = iTime * SPEED + i;\n        float size = mix(s, S, n);\n        vec3 circle = vec3(weird(I), size);\n        float r = df_circle(circle*aspect, uv*aspect.xy);\n        R = max(R, r);\n        if (R < SF_THRESHOLD) {\n            color += mix(base_color, high_color, n);\n            color.a = length(color.rgb);\n        }\n    }\n\n    if (R < SF_THRESHOLD) {\n        float d = (SF_THRESHOLD - R) / SF_THRESHOLD;\n        fragColor = vec4(1.-PHI_ONE, PHI_ONE, .5, 1. - d);\n    }\n    else {\n        fragColor = (color / k);\n    }\n}\n\n/** SHADERDATA\n{\n\t\"title\": \"Nocebo\",\n\t\"description\": \"Hubris. Aiming down. Unnecessary suffering. Bad karma. Punishment pending.\",\n\t\"model\": \"person\"\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}