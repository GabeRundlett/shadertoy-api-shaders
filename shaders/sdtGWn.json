{
    "Shader": {
        "info": {
            "date": "1629589139",
            "description": "Can you make it shorter?\nI prefer the original look (the one on display) but I'll allow it to be horizontally and/or vertically flipped as long as the texture maintains the original orientation.",
            "flags": 0,
            "hasliked": 0,
            "id": "sdtGWn",
            "likes": 9,
            "name": "Mipmap Generator - Code Golf",
            "published": 3,
            "tags": [
                "texture",
                "mipmap",
                "codegolf",
                "generate"
            ],
            "usePreview": 1,
            "username": "oneshade",
            "viewed": 514
        },
        "renderpass": [
            {
                "code": "/* 135 chars by (by @Xor) - horizontally and vertically flipped *\nvoid mainImage(out vec4 o, vec2 u) {\n    u /= iResolution.xy;\n    u /= exp2(floor(log2(u.y + ceil(u.x = u.x * 1.5 - .5))));\n    o = u.x > -1. ? texture(iChannel0, u): o - o; // Changing -o to more compatible o-o\n}\n/**/\n\n/* 144 chars (by @Xor) - original look */\nvoid mainImage(out vec4 o, vec2 u) {\n    u /= iResolution.xy;\n    o = texture(iChannel0, u /= u.x < .5 ?\n        vec2(.5, 1): -exp2(floor(log2(u = vec2(.5, 1)-u).yy))) - floor(u.x);\n}\n/**/\n\n/* 145 chars (by @Jodie) - horizontally and vertically flipped *\nvoid mainImage(out vec4 o, vec2 u) {\n    u /= iResolution.xy;\n    o -= o;\n    u.x = u.x * 1.5 - .5;\n    u /= exp2(floor(log2(u.y + ceil(u.x))));\n    if (u.x > -1.) {\n        o = texture(iChannel0, u);\n    }\n}\n/**/\n\n/* 201 chars (original) *\nvoid mainImage(out vec4 o, vec2 u) {\n    u /= iResolution.xy;\n    o -= o;\n\n    if (u.x < .5) {\n        u.x *= 2.;\n        o = texture(iChannel0, u);\n    }\n\n    else {\n        u = vec2(u.x - .5, 1. - u.y);\n        u /= exp2(floor(log2(u.y)));\n        if (u.x < 1.) {\n            u.y = 2. - u.y;\n            o = texture(iChannel0, u);\n        }\n    }\n}\n/**/\n\n/* Less compressed version *\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = vec4(0.0);\n\n    if (uv.x < 0.5) {\n        uv.x *= 2.0;\n        fragColor = texture(iChannel0, uv);\n    }\n\n    else {\n        uv = vec2(uv.x - 0.5, 1.0 - uv.y);\n        uv /= exp2(floor(log2(uv.y)));\n        if (uv.x < 1.0) {\n            uv.y = 2.0 - uv.y;\n            fragColor = texture(iChannel0, uv);\n        }\n    }\n}\n/**/",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}