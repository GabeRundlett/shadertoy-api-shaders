{
    "Shader": {
        "info": {
            "date": "1436395085",
            "description": "Use the 'r' key to switch between the rendering modes.\nHold down the key corresponding to the fractal you wish to see (keys: 1-5).\nChange the rendering mode to clear the frame.",
            "flags": 48,
            "hasliked": 0,
            "id": "XllXD8",
            "likes": 5,
            "name": "Sierpinski Fractals, Chaos Game",
            "published": 3,
            "tags": [
                "fractal",
                "triangle",
                "sierpinski",
                "chaosgame"
            ],
            "usePreview": 0,
            "username": "4rknova",
            "viewed": 1350
        },
        "renderpass": [
            {
                "code": "// by Nikos Papadopoulos, 4rknova / 2016\n// WTFPL\n\nfloat message(vec2 p) {\n    int x = int(p.x+1.)-1, y=int(p.y)-10,  i;\n    if (x<1||x>32||y<0||y>2) return -1.; \n    i = ( y==2? i=  757737252: y==1? i= 1869043565: y==0? 623593060: 0 )/ int(exp2(float(32-x)));\n \treturn i==2*(i/2) ? 1. : 0.;\n}\n\nvoid mainImage(out vec4 c, vec2 p)\n{\n    if   (iResolution.y<200.){float t=message(2.*p.xy/8.); if(t>=0.){ c=vec4(t);return; }}\n    else \t\t\t\t\t {c = texture(iChannel0, p.xy / iResolution.xy);        }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define E  1e-3\n#define P  3.14159265359\n#define Q  0.78539816339\n\n#define TOGGLED .75\n#define HELD    .25\n#define KEY(k, y) (texture(iChannel0, vec2(float(k) / 255., y)).x == 1.)\n\n// Fractal parameters (TYPE, VERTICES, RATIO)\n#define S vec3(1, 8, 1./3.)\n\nvec2 r(vec3 s, float t)\n{\n    float r = floor(fract(cos(iTime+t)*43758.5453) * float(s.y));\n    float f = 2.* Q + 2. * P / s.y * r;\n    vec2  p = vec2(cos(f), sin(f));\n    vec2  q = vec2(abs(cos(Q)), abs(sin(Q)));\n\n    if (s.x == 1. && (abs(p.x) > q.x || abs(p.y) > q.y)) {\n        float F = f - 2. * Q;\n        if      (F >       Q && F <  3. * Q) p.x = -q.x;\n        else if (F >= 3. * Q && F <= 5. * Q) p.y = -q.y;\n        else if (F >= 5. * Q && F <= 7. * Q) p.x =  q.x;\n        else                                 p.y =  q.y;\n    }\n    \n    return p;\n}\n\nvoid mainImage(out vec4 c, in vec2 p)\n{\n    vec3 s = S;\n    if      (KEY(49, HELD)) s = vec3(0, 3, 1./2.); // Sierpinski Gasket\n    else if (KEY(50, HELD)) s = vec3(0, 4, 1./2.); // Sierpinski Square\n    else if (KEY(51, HELD)) s = vec3(1, 3, 1./2.); // Sierpinski Gasket\n    else if (KEY(52, HELD)) s = vec3(1, 8, 1./3.); // Sierpinski Carpet\n    else if (KEY(53, HELD)) s = vec3(0, 6, 1./3.); // Sierpinski Fraction\n    \n    vec2 u = 1.1 * (p / iResolution.xy * 2. - 1.);\n    u.x *= iResolution.x / iResolution.y;\n    \n    vec2 e = r(s, 0.);    \n    for (float i = 0.; i < 7e2; ++i) {\n        e = mix(r(s, i), e, s.z);\n        vec2 v = e - u;\n        if (max(abs(v.x), abs(v.y)) < 75e-4) {\n            c = vec4(1); \n            return;\n        }  \n    }\n   \n    if (KEY(82, TOGGLED)) discard;\n    c = vec4(0,0,0,1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "keyboard",
                        "id": 33,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/tex00.jpg"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}