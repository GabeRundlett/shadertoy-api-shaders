{
    "Shader": {
        "info": {
            "date": "1653827147",
            "description": "Point doing a circular loop",
            "flags": 0,
            "hasliked": 0,
            "id": "Nsdyzj",
            "likes": 0,
            "name": "1 - Point doing a circular loop",
            "published": 3,
            "tags": [
                "basics"
            ],
            "usePreview": 0,
            "username": "kampta",
            "viewed": 184
        },
        "renderpass": [
            {
                "code": "bool inCircle(vec2 ctr, float r, vec2 uv) {\n    vec2 vec = ctr - uv;\n    return length(vec*iResolution.xy) < r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // center and radius of circle\n    vec2 ctr = 0.5*iResolution.xy;\n    float r_circ = 100.;\n    \n    ctr = (ctr + r_circ*vec2(cos(2.*3.14*iTime), sin(2.*3.14*iTime)))/iResolution.xy;\n    \n    // radius of point\n    float r_pt = 20.;\n\n    // Time varying pixel color\n    vec3 col = inCircle(ctr, r_pt, uv) ? vec3(0.) : 0.5+ 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    // position of pixel\n\n    // Output to screen\n    fragColor = vec4(col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}