{
    "Shader": {
        "info": {
            "date": "1631611940",
            "description": "timeline tutorial",
            "flags": 0,
            "hasliked": 0,
            "id": "fs3Gz4",
            "likes": 7,
            "name": "timeline tutorial",
            "published": 3,
            "tags": [
                "tutorial",
                "timeline"
            ],
            "usePreview": 0,
            "username": "jcyuan",
            "viewed": 183
        },
        "renderpass": [
            {
                "code": "#define PI 3.141592653589793\n\nfloat sdBox(in vec2 p, in vec2 b) {\n    vec2 d = abs(p) - b;\n    return length(max(d, 0.0)) + min(max(d.x,d.y), 0.0);\n}\n\nfloat timeSpan(float t, float from, float to) {\n    return clamp((t - from) / (to - from), 0., 1.);\n}\n\nmat2 rot(float a) {\n    float cs = cos(a);\n    float ss = sin(a);\n    return mat2(cs, ss, -ss, cs);\n}\n\nmat2 scale(float sx, float sy) {\n    return mat2(sx, 0., 0., sy);\n}\n\nfloat curve(float v) {\n    float st = step(1., v *= 2.);\n    return mix(\n        .5 * pow(2., 10. * (v - 1.)),\n        .5 * (2. - pow(2., -10. * (v - 1.))),\n        st\n    );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    \n    // 整体时间轴缩放\n    float timeScale = 6.;\n    // 规一化\n    float time = fract(iTime / timeScale);\n    \n    // 取得时间片段（返回0到1并使用曲线修改）\n    float t1 = curve(timeSpan(time, .0, .2));\n    float t2 = curve(timeSpan(time, .2, .4));\n    float t3 = curve(timeSpan(time, .4, .6));\n    float t4 = curve(timeSpan(time, .6, .8));\n    float t5 = curve(timeSpan(time, .8, 1.));\n    \n    // 使用各个时间片段做分动画\n    // anim1 从中心移动到左下角\n    vec2 p = mix(uv, uv - vec2(-1., -.3), t1);\n    \n    // anim2 原地旋转\n    p = rot(t2 * PI) * p;\n    \n    // anim3 移动至左上角\n    p = mix(p, p - vec2(0., -.7), t3);\n    \n    // anim4 反向旋转移动到右侧中间\n    p = mix(p, p + vec2(2., -.5), t4);\n    p = rot(-t4 * PI) * p;\n    \n    // anim5 边旋转缩放边回到中间\n    p = mix(p, p + vec2(1., -.1), t5);\n    float s = abs(sin(t5 * PI * .5) - .5) + .5;\n    p = rot(t5 * PI) * scale(s, s) * p;\n    \n    // 显示结果\n    float box = sdBox(p, vec2(.2));\n    float w = fwidth(box);\n    float d = 1. - smoothstep(-w, w, box);\n    \n    fragColor = vec4(vec3(1., 0., 0.) * d, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}