{
    "Shader": {
        "info": {
            "date": "1463749987",
            "description": "based on Siri Ripple https://www.shadertoy.com/view/4sVSzw, controlled by audio input",
            "flags": 0,
            "hasliked": 0,
            "id": "MdGSWz",
            "likes": 0,
            "name": "Waves sound controlled",
            "published": 3,
            "tags": [
                "sound",
                "wave"
            ],
            "usePreview": 0,
            "username": "mandragora",
            "viewed": 797
        },
        "renderpass": [
            {
                "code": "#define WAVES 2.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float s = texture( iChannel0, vec2(1.0,0.0) ).x*5.0;\n    vec2 uvNorm = fragCoord.xy / iResolution.xy;\n\tvec2 uv = -1.0 + 2.0 * uvNorm;\n    float time = iTime * 10.3;\n       \n  \tvec4 color = vec4(0.0);    \n    vec3 colorLine = vec3(1.0, 1.0, 1.0);\n    //float epaisLine = 0.002;   \n    float epaisLine = texture( iChannel0, vec2(1.0,0.0) ).x/30.0;\n\n    for(float i=0.0; i<WAVES; i++){\n\t\tfloat sizeDif = (i * 4.0);\n        colorLine = vec3(1.0 - (i*0.2));\n        \n        \n\t\t//SiriWave\t\n        //float K = 4.0;\n        float K = s;\n        //float B = 5.0;\n        float B = s;\n        float x = uv.x * 2.5;\n        float att = (1.0 - (i*0.2)) * 0.3;\n        float posOnde = uv.y + (att*pow((K/(K+pow(x, K))), K) * cos((B*x)-(time+(i*2.5))));\n      \n        //Line\n        float difEpais = epaisLine + ((epaisLine/WAVES)*i);\n        vec3 line = smoothstep( 0.0, 1.0, abs(epaisLine / posOnde)) * colorLine;\n        color += vec4(line, smoothstep( 0.0, 1., abs(epaisLine / posOnde)) * colorLine );\n    }\n\n\n    \n    fragColor = color;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "music",
                        "id": 18,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}