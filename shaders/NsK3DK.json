{
    "Shader": {
        "info": {
            "date": "1632245864",
            "description": "No aa, glitchy af.",
            "flags": 0,
            "hasliked": 0,
            "id": "NsK3DK",
            "likes": 9,
            "name": "大龙猫 - Geode",
            "published": 3,
            "tags": [
                "geode"
            ],
            "usePreview": 0,
            "username": "totetmatt",
            "viewed": 334
        },
        "renderpass": [
            {
                "code": "\n\nfloat box(vec3 p,vec3 b){\n    vec3 q = abs(p)-b;\n    return length(max(vec3(0.),q))+min(0.,max(q.x,max(q.z,q.y)));\n}\nmat2 rot(float a){float c=cos(a),s=sin(a);return mat2(c,-s,s,c);}\n\nvec2 sdf(vec3 p){\n\n vec2 h;\n float s = 1000.;\n\n vec4 pp = vec4(p,1.);\n pp.xyz = asin(sin(p.xyz));\n for(float i =0.;i<=8.;i++){\n   s = min(pp.x,min(pp.y,pp.z))/pp.a;\n    pp.xyz = abs(pp.xyz)-(.3),\n    pp.xz*=rot(.785*i+i);  \n    pp.yz = pp.y < pp.z ? pp.zy:pp.yz;\n    pp*=1.05;\n    pp.xy *=rot(-.785*i);\n  \n }\n s /=pp.a;\n\n h.x = mix(abs(length(p+vec3(0.,0.,0.))-19.)-.01,s*1.5,.5);\n\nh.x = max(-(abs(p.y)-(1.)  ),h.x);\nvec2 t ;\nt.x = min(length(p.xz)-15.-s*s*s,h.x);\nt.x = max(abs(p.y)-15.,t.x);\n h.y = 1.+s;\nt.y = 2.;\n h = t.x < h.x ? t:h;\n return h;\n    \n}\n#define q(s) s*sdf(p+s).x\nvec3 norm(vec3 p,float e){vec2 nv=vec2(-e,e);return normalize(q(nv.xyy)+q(nv.yxy)+q(nv.yyx)+q(nv.xxx));}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n    uv*=rot(.13*iTime);\n    vec3 ro = vec3(20.*sin(iTime*.033),0.,20.*cos(iTime*.033));\n      \n    vec3 rp = ro;\n    \n    vec3 rt  = vec3(.1+10.*sin(iTime*.033),0.1,.1+20.*cos(iTime*.033));\n\n    vec3 z = normalize(rt-ro);\n    vec3 x = normalize(cross(z,vec3(0,-1,0)));\n    vec3 y = normalize(cross(z,x));\n    \n    vec3 rd = mat3(x,y,z)*normalize(vec3(uv,.95));\n    vec3 light = vec3(1.+20.*sin(iTime*.033),2.,-1.+20.*cos(iTime*.033));\n    vec3 col = vec3(.01);\n    vec3 acc = vec3(0.);\n    for(float i=0.;i<=128.;i++){\n        vec2 d = sdf(rp);\n        if(d.y ==2.){\n            acc +=vec3(.01)*exp(-abs(d.x))/(15.+sin(atan(rp.x,rp.z)*40.)*14.);\n            d.x = max(0.,abs(d.x));\n        }\n        if(length(rp) > 100.) break;\n        if(d.x <.0001 && d.y != 2.){\n            vec3 n = norm(rp,.0003);\n            vec3 nn = norm(rp,.003);\n            float dif = dot(normalize(light-rp),n);\n            float spc = max(0.,dot(normalize(ro-rp),reflect(normalize(rp-light),n)));\n            spc = pow(spc,32.);\n          \n            col += max(0.,1.-dot(n,nn))*max(dif,spc)+vec3(1.9+sin(rp.y*10.),.9,1.9+cos(rp.x*10.))*spc*.59;\n            break;\n        }\n        rp +=rd*d.x;\n    \n    }\n    col = max(acc,col);\n    fragColor = vec4(sqrt(col),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}