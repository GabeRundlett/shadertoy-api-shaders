{
    "Shader": {
        "info": {
            "date": "1684268055",
            "description": "Smileytutorial",
            "flags": 0,
            "hasliked": 0,
            "id": "clG3Ww",
            "likes": 1,
            "name": "Smileytutorial12312",
            "published": 3,
            "tags": [
                "smileytutorial"
            ],
            "usePreview": 0,
            "username": "defomans",
            "viewed": 147
        },
        "renderpass": [
            {
                "code": "#define S(a, b, t) smoothstep(a, b, t)\n#define sat(x) clamp(x, 0.0, 1.0)\n\nfloat remap01(float a, float b, float t)\n{\n    return sat((t-a) / (b-a));\n}\n\nfloat remap(float a, float b, float c, float d, float t)\n{\n    return remap01(a, b, t) * (d-c) + c;\n}\n\nvec2 within(vec2 uv, vec4 rect)\n{\n    return (uv - rect.xy) / (rect.zw - rect.xy);\n}\n\nvec4 Brow(vec2 uv)\n{\n    float y = uv.y;\n    uv.y += uv.x*0.8-0.3;\n    uv.x -= 0.1;\n    uv -= 0.5;\n    \n    vec4 col = vec4(0.0);\n    \n    float blur = 0.1;\n    \n    float d1 = length(uv);\n    float s1 = S(0.45, 0.45-blur, d1);\n    float d2 = length(uv-vec2(0.1, -0.2)*0.7);\n    float s2 = S(0.5, 0.5-blur, d2);\n    \n    float browMask = sat(s1-s2);\n    \n    float colMask = remap01(0.7, 0.8, y)*0.75;\n    colMask *= S(0.6, 0.9, browMask);\n    vec4 browCol = mix(vec4(0.4, 0.2, 0.2, 1.0), vec4(1., .75, .5, 1.), colMask);\n    \n    col = mix(col, vec4(0.0, 0.0, 0.0, 1.0), S(0.0, 1.0, browMask));\n    \n    col = mix(col, browCol, S(0.2, 0.4, browMask));\n    \n    return col;\n}\n\nvec4 Eye(vec2 uv)\n{\n    uv -= 0.5;\n    float dist = length(uv);\n    vec4 irisCol = vec4(0.3, 0.5, 1.0, 1.0);\n    vec4 color = mix(vec4(1.0), irisCol, S(0.1, 0.7, dist)*0.5);\n    \n    color.rgb *= 1.0 - S(0.45, 0.5, dist)*0.5*sat(-uv.y-uv.x);\n    color.rgb = mix(color.rgb, vec3(0.0), S(0.3, 0.28, dist)); // iris outline black\n    irisCol.rgb *= 1.0 + S(0.3, 0.05, dist);\n    \n    color.rgb = mix(color.rgb, irisCol.rgb, S(0.28, 0.25, dist));\n    color.rgb = mix(color.rgb, vec3(0.0), S(0.16, 0.14, dist));\n    \n    float highlight = S(0.1, 0.08, length(uv - vec2(-0.15, 0.15)));\n    highlight += S(0.07, 0.05, length(uv + vec2(-0.08, 0.08)));\n    color.rgb = mix(color.rgb, vec3(1.0), highlight);\n    \n    color.a = S(0.5, 0.48, dist);\n    \n    return color;\n}\n\nvec4 Mouth(vec2 uv)\n{\n    uv -= 0.5;\n    vec4 color = vec4(0.5, 0.18, 0.05, 1.0);\n    \n    uv.y *= 1.5;\n    uv.y -= uv.x * uv.x * 2.0;\n        \n    float dist = length(uv);\n    \n    color.a = S(0.5, 0.48, dist);\n    \n    float td = length(uv - vec2(0.0, 0.6));\n    \n    vec3 toothCol = vec3(1.0) * S(0.6, 0.35, dist);\n    color.rgb = mix(color.rgb, toothCol, S(0.4, 0.37, td));\n    \n    td = length(uv+vec2(0.0, 0.5));\n    color.rgb = mix(color.rgb, vec3(1.0, 0.5, 0.5), S(0.5, 0.2, td));\n    \n    return color;\n}\n\nvec4 Head(vec2 uv)\n{\n    vec4 color = vec4(0.9, 0.65, 0.1, 1.0);\n    \n    float dist = length(uv);\n    \n    color.a = S(0.5, 0.49, dist);\n    \n    float edgeShade = remap01(0.35, 0.5, dist);\n    edgeShade *= edgeShade;\n    \n    color.rgb *= 1.0 - edgeShade*0.5;\n    \n    color.rgb = mix(color.rgb, vec3(0.6, 0.3, 0.1), S(0.47, 0.48, dist));\n    \n    float highlight = S(0.41, 0.405, dist);\n    \n    highlight *= remap(0.41, -0.1, 0.75, 0.0, uv.y);\n    highlight *= S(0.18, 0.19, length(uv-vec2(0.21, 0.09)));\n    color.rgb = mix(color.rgb, vec3(1.0), highlight);\n    \n    dist = length(uv - vec2(0.25, -0.2));\n    float cheek = S(0.2, 0.01, dist)*0.4;\n    cheek *= S(0.17, 0.16, dist);\n    color.rgb = mix(color.rgb, vec3(1.0, 0.1, 0.1), cheek);\n    \n    return color;\n}\n\nvec4 Smiley(vec2 uv)\n{\n    vec4 color = vec4(0.0);\n    \n    uv.x = abs(uv.x);\n    vec4 head = Head(uv);\n    vec4 eye = Eye(within(uv, vec4(0.03, -0.1, 0.37, 0.25)));\n    vec4 mouth = Mouth(within(uv, vec4(-0.3, -0.4, 0.3, -0.1)));\n    vec4 brow = Brow(within(uv, vec4(0.03, 0.2, 0.4, 0.43)));\n    \n    color = mix(color, head, head.a);\n    color = mix(color, eye, eye.a);\n    color = mix(color, mouth, mouth.a);\n    color = mix(color, brow, brow.a);\n    \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Output to screen\n    fragColor = Smiley(uv);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}