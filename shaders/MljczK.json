{
    "Shader": {
        "info": {
            "date": "1509375161",
            "description": "Looks even more lovely in fullscreen!",
            "flags": 0,
            "hasliked": 0,
            "id": "MljczK",
            "likes": 5,
            "name": "Lovely Curtain",
            "published": 3,
            "tags": [
                "heart",
                "sine",
                "distance",
                "tiling",
                "cosine",
                "hearts"
            ],
            "usePreview": 0,
            "username": "DrLuke",
            "viewed": 1693
        },
        "renderpass": [
            {
                "code": "/*\nWanted to make something with hearts, don't know why.\n\nThis work is licensed under a Creative Commons Attribution 4.0 International License.\nhttps://creativecommons.org/licenses/by/4.0/\n*/\n\n\nvec3 heart(vec2 uv, vec2 orient)\n{\n    uv -= vec2(0.5,0.81);\t// Offset so heart is placed better\n    vec2 uvp = vec2(length(uv), atan(uv.y, uv.x));\t// Turn cartesian UV into polar coordinates\n    \n    float heartdist = 2.-2.*sin(uvp.y) + sin(uvp.y) * (sqrt(abs(cos(uvp.y)))/(sin(uvp.y)+1.4));\t// Polar heart function\n    heartdist *= 0.2;\t// scale it down a bit\n    \n\n\tvec3 col = mix(vec3(255,105,180)/255. * 0.9 - uvp.x*0.4,\t// Pink with some distance-based shading\n                   vec3(0.5,0.5,0.5),\n                   (smoothstep(heartdist, heartdist + .05, uvp.x)));   \n    \n    return col;\n}\n\n// Resolution dependent cell-size\n#define cellsize (iResolution.x / 23.)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy*2. / iResolution.xy)-vec2(1);\n    \n    #define heartoffset vec2(sin(uv.x + iTime)*10., cos(uv.x * 10. + iTime)*15.*(1.5-uv.y)*0.4)\n    #define heartcoord fract(((fragCoord.xy + heartoffset) - iResolution.xy/2.) / cellsize)\n    \n    vec3 col = heart(heartcoord, vec2(1));\n    \n    // Add a bit of shading to make things seem more 3-dimensional\n    col -= (heartoffset.y + heartoffset.x) * 0.01 * (1.-uv.y)*0.4;\n    col -= vec3((1.-uv.y)*0.1,0,0);\n    \n\tfragColor = vec4(col, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}