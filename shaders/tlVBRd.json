{
    "Shader": {
        "info": {
            "date": "1614918035",
            "description": "A Tile with a built in LED for a project.",
            "flags": 0,
            "hasliked": 0,
            "id": "tlVBRd",
            "likes": 0,
            "name": "LED Tile",
            "published": 3,
            "tags": [
                "2d",
                "led",
                "tile"
            ],
            "usePreview": 0,
            "username": "foxic",
            "viewed": 196
        },
        "renderpass": [
            {
                "code": "float sdBox( in vec2 p, in float b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdCircle( in vec2 p, in float r ) \n{\n    return length(p)-r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n\n    \n\t// LED\n    float led_state = sin(iTime)*0.5; //how much its on\n    float led_power =(sin(iTime*100.)*cos(iTime*30.)*0.02)+1.; //flicker\n    led_power *= clamp(sin(led_state+(sin(iTime*50.)*0.05))*30., 0., 1.);\n    float led = smoothstep(0.0,1.0*led_power,sdCircle(p,0.02));\n    \n    led = (1.-led)*led_power;\n    \n\t// tile\n    float tile_mask = smoothstep(0.0,0.02,sdBox(p,0.6)-0.05);\n    float tile = mix(smoothstep(0.0,0.1,sdBox(p+vec2(0.,0.025),0.6)-0.025)+0.1, 0., tile_mask);\n    tile = mix(((led*0.5)+tile)-(smoothstep(0.0,0.1,sdBox(p-vec2(0.,0.05),0.55)-0.07)*0.05), 0., tile_mask);\n    \n    \n\t// Bubble\n    float bubble_mask = smoothstep(0.0,0.05,sdCircle(p,0.5));\n    float bubble_dark = mix(smoothstep(0.0,0.7,sdCircle(p+vec2(0.,0.1),0.4)), 0., bubble_mask)*0.3;\n    \n    float bubble = mix(smoothstep(0.0,0.5,sdCircle(p+vec2(0.,-0.1),0.4)), 0., bubble_mask);\n    \n    \n    float d = mix(0.05-(min(bubble_dark-(led*0.5), 0.)-bubble), tile, bubble_mask);\n    vec3 led_col = mix( vec3(led*led_power,0.,0.), vec3(1.), max(max(smoothstep(0.0,0.9,led-0.5), smoothstep(0.0,0.3,led-0.85)), 0.) );\n    \n\tfragColor = vec4(vec3(d)+(led_col),1.0);\n}\n\n\n\n\n\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}