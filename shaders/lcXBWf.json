{
    "Shader": {
        "info": {
            "date": "1724440274",
            "description": "originals https://www.shadertoy.com/view/DtGyWh https://www.shadertoy.com/view/tsSyDD",
            "flags": 0,
            "hasliked": 0,
            "id": "lcXBWf",
            "likes": 0,
            "name": "colorful journey 13",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 61
        },
        "renderpass": [
            {
                "code": "#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(20,13,21))*0.5+.5)\n#define NUM_OCTAVES 2\n\nfloat rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise2(vec2 p){\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\nfloat fbm(vec2 x) {\n\tfloat v = 0.0;\n\tfloat a = 1.1;\n\tvec2 shift = vec2(100);\n\t// Rotate to reduce axial bias\n    mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\n\tfor (int i = 0; i < NUM_OCTAVES; ++i) {\n\t\tv += a * noise2(x);\n\t\tx = rot * x * 2.0 + shift;\n\t\ta *= 0.5* noise2(x);\n\t}\n\treturn v;\n}\n\n// https://iquilezles.org/articles/warp\nfloat pattern( in vec2 p )\n{\n    vec2 q = vec2( fbm( p + vec2(0.0,0.0) ),\n                   fbm( p + vec2(5.2,1.3) ) );\n\n    return fbm( p + 4.0*q );\n}\n\nvec3 colour(float x) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.0, 0.0, 0.0);\n    \n    return a + b * cos(6.28318*(c*x+d));\n}\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n#define resolution iResolution.xy\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    \n    vec2 uv = C/iResolution.xy;\n    uv = 0.7*abs(2.0*(uv-0.5));\n     vec2 p3 = 2. * (gl_FragCoord.xy-resolution/2.) / resolution.y;\n    float t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(p3.xy) + .07)) * 10.2;\n\tfloat si = sin(t);\n\tfloat co = cos(t);\n\tmat2 ma = mat2(co, si, -si, co);\n    uv.y += uv.x / 10.0+noise2(uv*ma)-noise2(uv);\n\n    float noise = fbm(iTime*0.2+uv*10.0) / 4.0;\n    float noiseTex = pattern(rotate(uv*10.0*(1.0+(0.05*sin(iTime*0.5))), iTime*0.01)) * 0.5+cos(0.2*iTime+sin(iTime)*0.2);\n    \n    float inside = (sin((uv.x+uv.y))*10.0) + (uv.y*10.0+uv.x*10.0);\n    float mask = (uv.y*2.0 + sin(inside)) / 1.5;\n    \n    vec3 col = colour(noiseTex+mask);\n    col.rg += -abs(rotate(uv, 0.3*iTime+noise*10.0).xy);\n    vec3 p,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<110.;\n        O.xyz+=mix(vec3(1),H(g*.1),sin(.8))*1./e/8e3\n    )\n    {\n        p=g*d;\n       p.xz*=mat2(cos(iTime),sin(iTime),-sin(iTime), cos(iTime));\n         p.xy*=mat2(cos(iTime),sin(iTime),-sin(iTime), cos(iTime));\n            p.yz*=mat2(cos(iTime),sin(iTime),-sin(iTime), cos(iTime));\n        a=30.;\n        p=mod(p-a,a*2.)-a;\n        s=3.;\n        for(int i=0;i++<8;){\n            p=.3-abs(p);\n            \n            p.x<p.z?p=p.zyx:p;\n            p.z<p.y?p=p.xzy:p;\n            p.y<p.x?p=p.zyx:p;\n            \n            s*=e=1.4+sin(iTime*.234)*.1;\n            p=abs(p)*e-\n                vec3(\n                    5.+cos(iTime*.3+.5*cos(iTime*.3))*3.,\n                    120,\n                    8.+cos(iTime*.5)*5.\n                 )*col;\n         }\n       //  g+=e=length(p.yz)/s;\n         g+=e=length(p.yx)/s;\n    }\n    O*=vec4(col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}