{
    "Shader": {
        "info": {
            "date": "1607240994",
            "description": "using \"hexa world\" [url]https://shadertoy.com/view/tsKBDD[/url]",
            "flags": 0,
            "hasliked": 0,
            "id": "WsGBWm",
            "likes": 5,
            "name": "hexa marketery (169ch)",
            "published": 3,
            "tags": [
                "tiling",
                "2tweets",
                "hexagonal",
                "short",
                "golf"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 319
        },
        "renderpass": [
            {
                "code": "// using \"hexa world\" https://shadertoy.com/view/tsKBDD\n\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U = ( 12.* U / iResolution.y + iTime ) * mat2(1,0,.5,.87);\n    vec3 V = vec3( U, U.y-U +2. ), J = ceil(V);                     \n    O += .5+ .5* sin( 62.8* V [ int(J+=J.y)%3 /2 + int(J.z)%3 /2 *2 ] ); \n}\n\n\n\n\n\n/* // --- 171 chars\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U = ( 12.* U / iResolution.y + iTime ) * mat2(1,0,.5,.87);\n    vec3 V = vec3( U, U.y-U +2. ), J = ceil(V);                     \n    O += .5+ .5* sin( 62.8* V [ int(J +=J.yzx)%3 /2 + int(J.y)%3 /2 *2 ] ); \n}\n\n\n\n\n\n/* // --- 178 chars. ugly variant to save one char. could be save the other branch ? \n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U = ( 12.* U / iResolution.y + iTime ) * mat2(1,0,.5,.87);\n    vec3 V = vec3( U, U.y-U +2. ), J = ceil(V);                     \n    O += .5+ .5* sin( 63.* mod( V, 2. ) [ int(J +=J.yzx)%3 /2 + int(J.y)%3 /2 *2 ] ); \n}\n\n\n\n\n\n/* // --- 179 chars (  -4 by xor )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U = ( 12.* U / iResolution.y + iTime ) * mat2(1,0,.5,.87);      // parallelogram coords\n    vec3  V = vec3( U, U.y-U +12. );\n    ivec3 J = ivec3(V); J = (J+J.yzx) % 3 / 2;                      // J = face Id\n    O +=  .5+ .5* sin( 63.* mod( V, 2. ) [ J.x +2* J.y ] ); \n}\n\n\n\n\n\n/* // --- 183 chars\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U = ( 12.* U / iResolution.y + iTime ) * mat2(1,0,.5,.87);      // parallelogram coords\n    vec3  V = vec3( U, U.y-U +3. ), F = floor(V);\n    ivec3 J =  ivec3(F+F.yzx) % 3 / 2;                              // J = face Id\n    O +=  .5+ .5* sin( 63.* mod( V, 2. ) [ J.x +2* J.y ] ); \n}\n\n\n\n\n\n/* // --- 219 chars\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U = ( 12.* U / iResolution.y + iTime ) * mat2(1,0,.5,.87);      // parallelogram coords\n    vec3  V = vec3( U, U.y-U +3. ), F = floor(V);\n    ivec3 I = ivec3(F+F.yzx), J =  I % 3 / 2;                       // J = face Id\n    I.x += 4; I /= 3;                                               // I.xy = tileId\n    O +=  .5+ .5* sin(63.* mod( V + vec3( I.y, I.y+I.x, I ), 2. )   // tile coords\n                           [ J.x +2* J.y ] ); \n // O = sqrt(O);                                                    // to sRGB\n}\n\n\n\n\n\n/* // --- 229 chars\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U = ( 12.* U / iResolution.y + iTime ) * mat2(1,0,.5,.87);      // parallelogram coords\n    vec3  V = vec3( U, U.y-U.x +3. ), F = floor(V);\n    ivec3 I = ivec3(F+F.yzx), J =  I % 3;                           // J = face Id\n    I.x += 4; I /= 3;                                               // I.xy = tileId\n    O +=  .5+ .5* sin(63.* mod( V + vec3( I.y, I.y+I.x, I.x ) ,2. ) // tile coords\n                           [ J.x>1 ? 1 : J.y>1 ? 2 : 0 ] ); \n}\n\n/**/\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}