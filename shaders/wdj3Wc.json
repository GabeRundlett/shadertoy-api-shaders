{
    "Shader": {
        "info": {
            "date": "1550191184",
            "description": "Just made the step count small and it looked pretty trppy. ",
            "flags": 0,
            "hasliked": 0,
            "id": "wdj3Wc",
            "likes": 12,
            "name": "zooooooooom",
            "published": 3,
            "tags": [
                "3d",
                "raymarch"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 555
        },
        "renderpass": [
            {
                "code": "// Plento\n\n#define FAR 60.0\n#define DISTANCE_BIAS 0.75\n\nmat2 rot(float a) {\n    return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\n\nfloat map(vec3 rp)\n{\n    vec3 pos = rp - vec3(0.0, 0.0, 0.0);\n    vec3 b = vec3(1.9);\n    \n    pos.x += sin(pos.z + iTime*0.6)*0.56;\n    pos.y += cos(pos.z + iTime*0.6)*0.56;\n    \n    pos = mod(pos, b)-0.5*b;\n    \n    float res = length(pos)-0.5;\n    \n    return res;\n}\nvec3 getNormal(vec3 p)\n{\n    vec2 e = vec2(0.0035, -0.0035); \n    return normalize(\n        e.xyy * map(p + e.xyy) + \n        e.yyx * map(p + e.yyx) + \n        e.yxy * map(p + e.yxy) + \n        e.xxx * map(p + e.xxx));\n}\n\nvec3 color(vec3 ro, vec3 rd, vec3 norm, float t)\n{\n    vec3 lp = ro + vec3(0.0, 0.0, -1.0) * 10.; \n    \n\tvec3 ld = normalize(lp - (ro + rd*t));\n    \n    vec3 p = (ro + rd * t);\n    \n    vec3 pb = mod(p, vec3(8))-0.5*vec3(8);\n    \n    // color stuff\n    float diff = max(dot(norm, ld), 0.0);\n    \n    vec3 oCol = mix(vec3(1.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), pb);\n    \n    vec3 col;\n    \n    col = oCol*diff;\n    \n    return col;\n    \n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 1.1 * vec2(fragCoord.xy - 0.5*iResolution.xy)/iResolution.y; \n   \n    vec3 ro = vec3(0.0, 0.0, -3.0); \n    vec3 rd = normalize(vec3(uv,2.0));\n    \n    rd.xy *= rot(iTime*0.15);\n    ro.z += iTime*1.4;\n    \n    \n    // march stuff\n    float t = 0.0; \n    float d; \n    \n    \n    // glow stuff\n    float minDist = 999.0; \n  \n    vec3 glowCol = vec3(0);\n    \n    float g = 1.0;\n    \n    vec3 bg = vec3(0.4, 0.4, 0.1);\n    \n    float fog = 0.0;\n    \n    float oWidth = 0.2;\n    float softness = 0.4;\n    \n    // march\n    for (int i = 0; i < 31; i++)\n    {\n        d = map(ro + rd*t);\n        \n        minDist = min(minDist, d); \n        minDist = clamp(minDist, 0.02, d); \n        if(abs(d)<0.003) \n        {\n            minDist = abs(d);\n            break;  \n        }\n        if(t>FAR) \n        {\n            minDist = min(minDist, d);\n            t = FAR;\n            break;\n        }\n        \n        t += d * DISTANCE_BIAS;\n        \n        // Add Glow\n        if(d > minDist && abs(d) > 0.15)\n        {\n            fog = smoothstep(0.41, 0.0, t / FAR);\n            \n            glowCol += vec3(0.6, 0.0, 0.0) \n                * smoothstep(oWidth,oWidth-softness, minDist) * fog\n                   ;\n            g++;\n        }\n    }\n    \n   \n    glowCol /= g;\n    \n    vec3 col = vec3(0); \n    \n    vec3 norm = getNormal(ro + rd * t); \n   \n    col = color(ro, rd, norm, t);\n    \n    col += glowCol*80.0;\n    \n    // crap reflection\n    ro += rd*t;\n    \n    rd = reflect(rd, norm);\n    \n    float rt = 0.0;\n    d = 0.0;\n    for (int i = 0; i < 25; i++)\n    {\n    \td = map(ro + rd * rt);\n    \t\n        if(abs(d) < 0.0001)\n        {\n         \tbreak;   \n        }\n        if(rt > FAR)\n        {\n         \tbreak;   \n        }\n        \n        rt += d;\n        \n    }\n    \n    norm = getNormal(ro + rd * rt); \n    \n   \n    col *= mix(col, color(ro, rd, norm, rt), 0.6);\n    col = mix( col, vec3(0.0,0.0,0.9), 1.0 - exp( -0.0003*t*t*t ) );\n    col = mix( col, vec3(0), 1.0 - exp( -0.01*rt*rt*rt ) );\n    \n    col /= 5.0;\n    \n    \n         \n    fragColor = vec4(sqrt(clamp(col, 0.0, 1.0)), 1.0);\n \n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}