{
    "Shader": {
        "info": {
            "date": "1702829880",
            "description": "spirograph false-2",
            "flags": 0,
            "hasliked": 0,
            "id": "Xcs3zN",
            "likes": 25,
            "name": "spirograph false-2",
            "published": 3,
            "tags": [
                "2d",
                "spirograph"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 229
        },
        "renderpass": [
            {
                "code": "//por jorge2017a2\n//spirograph false-2\n// 17-dic-2023-\n\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(6.0*antialiasing(0.5),b,d)\n#define PI     3.14159265\n\n\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\nvec3 DrawFigBordev2(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj+0.05,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.05,0.0));\n  return colOut;\n}\n\n\nvec3 DrawFigBordeCol(vec3 pColObj, vec3 colOut, float distObj , vec3 colBorde )\n{ colOut = mix(colOut,pColObj ,S2( distObj+0.05,0.0));\n  colOut = mix(colOut,colBorde ,S2(abs( distObj)-0.05,0.0));\n  return colOut;\n}\n\n\n///oneshade    \nvec2 Rotate(in vec2 p, in vec2 o, in float r) \n{   float c = cos(r), s = sin(r);\n    return (p - o) * mat2(c, -s, s, c) + o;\n}\n\n\nvec3 spiro(vec2 p, vec3 col)\n{  float d1,d2,d3;\n    vec2 pos=vec2(2.5,0.0);\n    vec2 pos2=vec2(2.5,0.65);\n    int n, nmax;\n    nmax=30;\n    float ang=360.0/float(nmax);\n    float angrad;\n    vec2 p2,p3;\n    float df=9999.9;\n    float df2=9999.9;\n    \n    for(n=0; n<nmax;n++)\n    {   float t=iTime*60.0;\n        \n        angrad=radians(ang*float(n)+t );\n        p2=Rotate(p, pos, angrad);\n        p3=Rotate(p, pos2+p2, angrad+radians(5.0+t));\n        \n        d3= sdCircle(p3,2.0);  //circulo chico\n        d3=abs(d3);\n        df2=min(df2,d3);\n    }\n    \n    col= DrawFigBordeCol(vec3(0.0,1.0,0.0),col,df2,vec3(1.0,0.0,0.0));\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n\tuv-=vec2(-0.5,0.0);\n    float esc=8.0;\n    uv*=esc;\n    vec2 uv0=uv;\n    vec3 col=vec3(1.0);\n    col= spiro(uv,col);\n    col=pow(col,  vec3(0.554545));\n    fragColor = vec4(col,1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}