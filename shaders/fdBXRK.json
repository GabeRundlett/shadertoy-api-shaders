{
    "Shader": {
        "info": {
            "date": "1620527184",
            "description": "Rey sentado",
            "flags": 0,
            "hasliked": 0,
            "id": "fdBXRK",
            "likes": 4,
            "name": "Rey sentado",
            "published": 3,
            "tags": [
                "2d",
                "draw",
                "reysentado",
                "pintura",
                "dibujo"
            ],
            "usePreview": 0,
            "username": "jorge2017a1",
            "viewed": 223
        },
        "renderpass": [
            {
                "code": "//por jorge2017a1 ----jorgeFloresP---8/may/2021\n// referencia \n////-------------------\n/// IQ funciones....librerias\n//https://www.shadertoy.com/view/tlGBW3\n//Created by manu210404 in 2021-03-13\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r; }\n\nvec3 ponerBorde(vec3 pColObj, vec3 colOut, float distObj )\n{\n  colOut = mix(colOut,pColObj ,S( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S(abs( distObj),0.0));\n  return colOut;\n}\n\nfloat opU(float d1, float d2) {return min(d1, d2); }\nconst vec3 colNegro=vec3(0.0);\nconst vec3 colGris=vec3(0.49,0.49,0.49);\nconst vec3 colGris2=vec3(0.6);\nconst vec3 colBlanco=vec3(1.0);\nconst vec3 colRojo=vec3(1.0,0.0,0.0);\nconst vec3 colAzul=vec3(0.0,0.0,1.0);\nconst vec3 colVerde=vec3(0.0,1.0,0.0);\n\nconst vec3 col1=vec3(0.54,0.49,0.39);\nconst vec3 col2=vec3(0.06,0.07,1.0);\nconst vec3 col3=vec3(0.06,0.07,0.8);\n//const vec3 col4=vec3(0.45,0.13,0.15); //rojo obscuro\nconst vec3 col4=vec3(0.60,0.17,0.17); //vestido\nconst vec3 col5=vec3(0.73,0.60,0.55);\nconst vec3 colDorado=vec3(0.925,0.67,0.0);\n\n#define POLY(N) (in vec2 p, in vec2[N] v) {const int n=v.length();float d=dot(p-v[0],p-v[0]);float s=1.;for(int i=0,j=n-1;i<n;j=i,i++){vec2 e=v[j]-v[i];vec2 w=p-v[i];vec2 b=w-e*clamp(dot(w,e)/dot(e,e),0.,1.);d=min(d,dot(b,b));bvec3 cond=bvec3(p.y>=v[i].y,p.y<v[j].y,e.x*w.y>e.y*w.x);if(all(cond)||all(not(cond))) s=-s;}return s*sqrt(d);}\n\nfloat sdPoly25 POLY(25)\nvec2 pt25[ 25]=vec2[](  \nvec2(.08,.01),vec2(.07,.50),vec2(.08,.58),vec2(.09,.65),vec2(.10,.67),\nvec2(.12,.67),vec2(.14,.65),vec2(.16,.57),vec2(.17,.55),vec2(.18,.51),\nvec2(.19,.47),vec2(.17,.45),vec2(.17,.44),vec2(.18,.37),vec2(.21,.28),\nvec2(.26,.21),vec2(.33,.17),vec2(.39,.15),vec2(.40,.11),vec2(.40,.05),\nvec2(.37,.02),vec2(.33,.03),vec2(.31,.05),vec2(.31,.01),vec2(.08,.01) );\n\nfloat sdPoly41 POLY(41)\nvec2 pt41[ 41]=vec2[](  \nvec2(.09,.65),vec2(.11,.57),vec2(.13,.56),vec2(.14,.53),vec2(.14,.48),\nvec2(.13,.46),vec2(.11,.45),vec2(.13,.36),vec2(.13,.31),vec2(.16,.23),\nvec2(.20,.18),vec2(.26,.14),vec2(.31,.13),vec2(.34,.12),vec2(.35,.08),\nvec2(.34,.06),vec2(.32,.05),vec2(.31,.05),vec2(.33,.04),vec2(.37,.03),\nvec2(.39,.05),vec2(.40,.08),vec2(.40,.11),vec2(.39,.14),vec2(.34,.17),\nvec2(.28,.20),vec2(.24,.23),vec2(.18,.34),vec2(.17,.41),vec2(.17,.45),\nvec2(.18,.47),vec2(.19,.50),vec2(.18,.54),vec2(.16,.56),vec2(.16,.57),\nvec2(.15,.62),vec2(.14,.65),vec2(.13,.66),vec2(.11,.67),vec2(.10,.66),\nvec2(.09,.65) );\n\n\nfloat sdPoly5 POLY(5)\nvec2 pt5[ 5]=vec2[](  \nvec2(.07,.57),vec2(.79,.60),vec2(.80,.01),vec2(.08,.01),vec2(.07,.57) );\n\n\nfloat sdPoly25c POLY(25)\nvec2 pt25c[ 25]=vec2[](  \nvec2(.26,.22),vec2(.26,.30),vec2(.30,.40),vec2(.34,.52),vec2(.36,.57),\nvec2(.40,.58),vec2(.43,.59),vec2(.46,.63),vec2(.50,.68),vec2(.53,.78),\nvec2(.57,.83),vec2(.62,.85),vec2(.66,.84),vec2(.70,.80),vec2(.74,.72),\nvec2(.73,.67),vec2(.71,.61),vec2(.69,.56),vec2(.68,.55),vec2(.73,.46),\nvec2(.81,.32),vec2(.84,.28),vec2(.93,.02),vec2(.26,.01),vec2(.26,.22) );\n\n\nfloat sdPoly31 POLY(31)\nvec2 pt31[ 31]=vec2[](  \nvec2(.26,.01),vec2(.26,.29),vec2(.36,.57),vec2(.42,.59),vec2(.45,.62),\nvec2(.49,.67),vec2(.51,.71),vec2(.53,.77),vec2(.55,.80),vec2(.59,.84),\nvec2(.63,.85),vec2(.66,.84),vec2(.70,.81),vec2(.73,.75),vec2(.66,.73),\nvec2(.63,.72),vec2(.62,.68),vec2(.60,.67),vec2(.59,.65),vec2(.57,.62),\nvec2(.55,.62),vec2(.55,.59),vec2(.54,.57),vec2(.53,.56),vec2(.57,.50),\nvec2(.55,.47),vec2(.53,.30),vec2(.52,.22),vec2(.51,.13),vec2(.50,.02),\nvec2(.26,.01) );\n\n\nfloat sdPoly14 POLY(14)\nvec2 pt14[ 14]=vec2[](  \nvec2(.52,.55),vec2(.55,.54),vec2(.57,.54),vec2(.59,.54),vec2(.60,.56),\nvec2(.61,.54),vec2(.60,.53),vec2(.59,.53),vec2(.58,.52),vec2(.58,.52),\nvec2(.58,.53),vec2(.55,.53),vec2(.53,.54),vec2(.52,.55) );\n\n\nfloat sdPoly30 POLY(30)\nvec2 pt30[ 30]=vec2[](  \nvec2(.53,.56),vec2(.58,.64),vec2(.65,.78),vec2(.70,.74),vec2(.70,.71),\nvec2(.70,.70),vec2(.69,.68),vec2(.68,.64),vec2(.68,.63),vec2(.67,.63),\nvec2(.66,.63),vec2(.66,.63),vec2(.67,.62),vec2(.67,.62),vec2(.65,.62),\nvec2(.64,.62),vec2(.66,.61),vec2(.66,.60),vec2(.65,.60),vec2(.65,.58),\nvec2(.64,.58),vec2(.61,.59),vec2(.59,.61),vec2(.60,.59),vec2(.60,.57),\nvec2(.60,.56),vec2(.59,.55),vec2(.56,.55),vec2(.54,.55),vec2(.53,.56) );\n\nfloat sdPoly7 POLY(7)\nvec2 pt7[ 7]=vec2[](  \nvec2(.69,.69),vec2(.68,.70),vec2(.67,.70),vec2(.64,.71),vec2(.67,.69),\nvec2(.68,.69),vec2(.69,.69) );\n\n\nfloat sdPoly9 POLY(9)\nvec2 pt9[ 9]=vec2[](  \nvec2(.64,.69),vec2(.65,.69),vec2(.66,.68),vec2(.67,.68),vec2(.66,.67),\nvec2(.65,.67),vec2(.64,.68),vec2(.64,.68),vec2(.64,.69) );\n\nfloat sdPoly5b POLY(5)\nvec2 pt5b[ 5]=vec2[](  \nvec2(.51,.68),vec2(.19,.72),vec2(.23,.68),vec2(.49,.65),vec2(.51,.68) );\n\nfloat sdPoly9b POLY(9)\nvec2 pt9b[ 9]=vec2[](  \nvec2(.51,.68),vec2(.19,.72),vec2(.23,.68),vec2(.49,.65),vec2(.51,.70),\nvec2(.22,.82),vec2(.19,.87),vec2(.53,.74),vec2(.51,.68) );\n\nfloat sdPoly13 POLY(13)\nvec2 pt13[ 13]=vec2[](  \nvec2(.51,.68),vec2(.19,.72),vec2(.23,.68),vec2(.49,.65),vec2(.51,.70),\nvec2(.22,.82),vec2(.19,.87),vec2(.53,.74),vec2(.54,.79),vec2(.33,.95),\nvec2(.33,1.00),vec2(.57,.82),vec2(.51,.68) );\n\nfloat sdPoly5c POLY(5)\nvec2 pt5c[ 5]=vec2[](  \nvec2(.67,.82),vec2(.85,.98),vec2(.89,.97),vec2(.70,.79),vec2(.67,.82) );\n\nfloat sdPoly20 POLY(20)\nvec2 pt20[ 20]=vec2[](  \nvec2(.51,.10),vec2(.53,.07),vec2(.55,.03),vec2(.56,.02),vec2(.57,.02),\nvec2(.57,.04),vec2(.57,.03),vec2(.58,.03),vec2(.59,.04),vec2(.59,.03),\nvec2(.61,.03),vec2(.61,.05),vec2(.62,.03),vec2(.63,.03),vec2(.63,.06),\nvec2(.60,.10),vec2(.55,.13),vec2(.53,.14),vec2(.52,.13),vec2(.51,.10) );\n\n\n\nfloat sdPoly7b POLY(7)\nvec2 pt7b[ 7]=vec2[](  \nvec2(.66,.62),vec2(.65,.62),vec2(.64,.62),vec2(.64,.62),vec2(.65,.62),\nvec2(.66,.61),vec2(.66,.62) );\n\nfloat sdPoly12 POLY(12)\nvec2 pt12[ 12]=vec2[](  \nvec2(.52,.56),vec2(.60,.55),vec2(.68,.36),vec2(.70,.28),vec2(.72,.24),\nvec2(.73,.04),vec2(.73,.08),vec2(.73,.07),vec2(.80,.03),vec2(.82,.01),\nvec2(.50,.01),vec2(.52,.56) );\n\nfloat sdPoly5d POLY(5)\nvec2 pt5d[ 5]=vec2[](  \nvec2(.66,.71),vec2(.92,.85),vec2(.97,.84),vec2(.70,.68),vec2(.66,.71) );\n\n\nfloat sdPoly5e POLY(5)\nvec2 pt5e[ 5]=vec2[](  \nvec2(.70,.67),vec2(.94,.76),vec2(.98,.74),vec2(.70,.63),vec2(.70,.67) );\n\nfloat sdPoly7c POLY(7)\nvec2 pt7c[ 7]=vec2[](  \nvec2(.00,.93),vec2(.05,.92),vec2(.15,.92),vec2(.17,.02),vec2(.06,.01),\nvec2(.00,.05),vec2(.00,.93) );\n\n//***------------****-----------****------------******-------\nvec3 RostroChica(in vec2 pp, vec3 col) \n{\n  vec2 p=pp;\n  \n   float sd25 = sdPoly25(p, pt25);\n   float sd41 = sdPoly41(p, pt41);\n   float sd5 = sdPoly5(p, pt5);\n   \n   float sd25b = sdPoly25(p-vec2(0.7,0.0), pt25);\n   float sd41b = sdPoly41(p-vec2(0.7,0.0), pt41);\n   float sd25c = sdPoly25c(p, pt25c);\n   float sd31 = sdPoly31(p, pt31);    \n   float sd14 = sdPoly14(p, pt14);\n   float sd30 = sdPoly30(p, pt30);\n   float sd7 = sdPoly7(p, pt7);\n   float sd9 = sdPoly9(p, pt9);\n   float sd5b = sdPoly5b(p, pt5b);\n   float sd9b = sdPoly9b(p, pt9b);\n   float sd13 = sdPoly13(p, pt13);\n   float sd5c = sdPoly5c(p, pt5c);\n   float sd20 = sdPoly20(p-vec2(-0.01,0.05*sin(iTime)), pt20);\n   float sd12 = sdPoly12(p, pt12);\n   float sd5d = sdPoly5d(p, pt5d);    \n   float sd5e = sdPoly5e(p, pt5e);\n   float sd7c = sdPoly7c(p, pt7c);\n   float sd7d = sdPoly7c(p-vec2(0.8,0.0), pt7c);\n   \n   col= ponerBorde(col1,col,sd5); //respaldo silla\n   col= ponerBorde(col1,col,sd7c); //columna\n   col= ponerBorde(col1,col,sd7d); //columna\n   col= ponerBorde(col1,col,sd25b);//silla figura 2\n   col= ponerBorde(col1,col,sd41b); //figura silla 2\n   col= ponerBorde(colDorado,col,sd5b); // rayo1\n   col= ponerBorde(colDorado,col,sd9b); // rayo1\n   col= ponerBorde(colDorado,col,sd13); // rayo1\n   col= ponerBorde(colDorado,col,sd5c); // rayo1\n   col= ponerBorde(colDorado,col,sd5d); // rayo1\n   col= ponerBorde(colDorado,col,sd5e); // rayo1\n   col= ponerBorde(col3,col,sd25c); //vestido izq\n   col= ponerBorde(col2,col,sd31); //vestido der\n   col= ponerBorde(col4,col,sd12); //vestido\n   col= ponerBorde(col1,col,sd25);//silla izq\n   col= ponerBorde(col1,col,sd41); //figura silla izq\n   col= ponerBorde(colVerde,col,sd14); //anillo cuello\n   col= ponerBorde(col5,col,sd30); //rostro\n   col= ponerBorde(colNegro,col,sd7); //pesta√±a\n   col= ponerBorde(colBlanco,col,sd9); //ojo\n   col= ponerBorde(col5,col,sd20); //mano\n   \n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    float t=iTime*1.0;\n    vec2 p=uv*0.5-vec2(-0.5,-0.5);\n    vec3 col=vec3(0.0); //vec3(0.25);\n    \n    //col=RostroChica(p*0.5-vec2(-0.25,0.0), col);\n    col=RostroChica(p, col);\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}