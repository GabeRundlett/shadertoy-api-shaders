{
    "Shader": {
        "info": {
            "date": "1572308515",
            "description": "Light the way",
            "flags": 0,
            "hasliked": 0,
            "id": "WsdSzB",
            "likes": 6,
            "name": "Shadertober 26 - Dark",
            "published": 3,
            "tags": [
                "dark",
                "inktober",
                "shadertober",
                "backwardscaptain"
            ],
            "usePreview": 0,
            "username": "BackwardsCap",
            "viewed": 434
        },
        "renderpass": [
            {
                "code": "float g;\nfloat map(vec3 p)\n{\n    float r=0.;\n    float d = 1.3;\n    vec3 lp=p+vec3(cos(iTime*1.5)*d,sin(iTime)*d,-3. + cos(iTime)*7.);\n    float s = length(lp)-.1;\n    g+=0.01/(0.01+s*s);\n    float hw = 3.;\n    float hh = 3.+cos(iTime);\n    p.xy*=rot(mod(iTime,PI)+p.z/20.);\n    float f = p.y+hh;\n    float rw = dot(p+vec3(hw,0,0),normalize(vec3(1,0,0)));\n    float lw = dot(p-vec3(hw,0,0),normalize(vec3(-1,0,0)));\n    float tw = dot(p-vec3(0,hh,0),normalize(vec3(0,-1,0)));\n    \n    r=min(s,f);\n    r=min(r,rw);\n    r=min(r,lw);\n    r=min(r,tw);\n    \n    return r;\n}\n\nfloat ray(vec3 ro, vec3 rd)\n{\n    float t=0.;\n    for(int i=0;i<128;i++)\n    {\n        vec3 p = ro+rd*t;\n        float s = map(p);\n        if(s<0.000001)break;\n        t+=s;\n        if(t>MAX_DIST){t=-1.;break;}\n    }\n    \n    return t;\n}\n\nvec3 normal(vec3 p)\n{\n    vec2 e = vec2(0.00005,0.);\n    return normalize(vec3(\n        map(p+e.xyy)-map(p-e.xyy),\n        map(p+e.yxy)-map(p-e.yxy),\n        map(p+e.yyx)-map(p-e.yyx)\n        ));\n}\n\nvoid mainImage( out vec4 c, in vec2 f )\n{\n    vec2 uv = (2.*f-iResolution.xy)/iResolution.y;\n    \n    vec3 ro = vec3(0,0,-10);\n    vec3 ta = vec3(0);\n    vec3 rd = cam(ro,ta,uv);\n    \n    float r = ray(ro,rd);\n    vec3 col = vec3(0);\n    \n    if(r>0.)\n    {\n        vec3 p = ro+rd*r;\n        vec3 n = normal(p);\n        vec3 sun = normalize(vec3(0,0,.1));\n        float dif = clamp(dot(sun,n),0.,1.);\n        col=vec3(0.5)*dif;\n    }\n    \n\tc.rgb=col+g/3.;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define MAX_DIST 100.\n#define PI 3.1415927\n\nmat2 rot(float v)\n{\n    float s= sin(v);\n    float c = cos(v);\n    return mat2(c,-s,s,c);\n}\n\nvec3 cam(vec3 ro, vec3 ta, vec2 uv)\n{\n    vec3 cf = normalize(ta-ro);\n    vec3 cu = normalize(cross(cf,vec3(0,1,0)));\n    vec3 cr = normalize(cross(cu,cf));\n    return normalize(uv.x*cu+uv.y*cr+2.*cf);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}