{
    "Shader": {
        "info": {
            "date": "1611406983",
            "description": "Slime mold simulation\nsensor snippet is from https://www.shadertoy.com/view/ttjSW1",
            "flags": 32,
            "hasliked": 0,
            "id": "3tyyzc",
            "likes": 2,
            "name": "z Slime mold",
            "published": 3,
            "tags": [
                "slime",
                "cellular"
            ],
            "usePreview": 0,
            "username": "illus0r",
            "viewed": 553
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 o, vec2 FC ) {\n    o = texelFetch(iChannel1,ivec2(FC),0);\n    o.rgb = pow(o.rgb,vec3(.3));\n    //o.rgb = pow(vec3(o.a),vec3(1.));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define R 1. // interaction radius\n#define C 2. // max speed\n#define LOOKUP_DIST (.1*1280./iResolution.x * iMouse.x/iResolution.x)\n#define LOOKUP_ANGLE (iMouse.y/iResolution.y)\n#define rnd(x) fract(54321.987*sin(987.12345*x))\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "vec2 turn(vec2 uv, vec2 p){\n    vec2 sensorL = uv+(rot(-LOOKUP_ANGLE)*p)*LOOKUP_DIST; // location of sensor A\n    vec2 sensorC = uv+p*LOOKUP_DIST;\n    vec2 sensorR = uv+(rot(LOOKUP_ANGLE)*p)*LOOKUP_DIST;\n\n    float senseL = texture(iChannel1, sensorL).a;\n    float senseC = texture(iChannel1, sensorC).a;\n    float senseR = texture(iChannel1, sensorR).a;\n\n    if (senseC < senseL && senseC < senseR){\n      if(rnd(p.x)<.5)\n          p*=rot(LOOKUP_ANGLE);\n      else\n          p*=rot(-LOOKUP_ANGLE);\n    }\n    else if(senseL < senseR){\n      p *= rot(-LOOKUP_ANGLE);\n    }\n    else if(senseL > senseR){\n      p *= rot(LOOKUP_ANGLE);\n    }\n    return p;\n}\n\n\nvoid mainImage( out vec4 o, in vec2 FC ){\n    vec2 uv=FC.xy/iResolution.xy,p_g,v_g;\n    vec4 n,g;\n    o-=o;\n    if(mod(iTime, 20000.)<=4.1){if(length(mod(vec2(FC.xy-.5), 10.)) == 0. && length(uv-.5) < .5)o+=vec4(.5,.5,-(uv+.5)*.5+.5);return;}\n    for(float i=-C;i<=C;i++){\n      for(float j=-C;j<=C;j++){\n        vec2 ij=vec2(i,j);\n        vec2 uv_g = fract(uv+ij/iResolution.xy);\n        g=texture(iChannel0,uv_g);\n        if(length(g)==0.)continue;\n        p_g=g.rg+ij;\n        v_g=g.ba;\n        if(p_g+v_g==fract(p_g+v_g)){\n          p_g = fract(p_g+v_g);\n          v_g=turn(uv_g,v_g);\n          \n          //v_g+=vec2(.0,.2)*rot(atan(uv.y-.5,uv.x-.5));\n          \n          vec2 g_ij=ij;\n          float sig = round(rnd(length(uv)))*2.-1.;\n          for(float di=-R*sig;abs(di)<=R;di+=sig){\n            for(float dj=-R*sig;abs(dj)<=R;dj+=sig){\n              vec2 n_ij=vec2(g_ij.x+di,g_ij.y+dj);\n              if(length(n_ij)>0.&&length(n_ij)<R){\n                vec2 uv_n=fract(uv+n_ij/iResolution.xy);\n                n=texture(iChannel0,uv_n);\n                if(length(n)==0.)continue;\n                vec2 p_n = n.rg+n_ij;\n                float dist=length(p_g-p_n);\n                v_g+=.5*normalize(p_g-p_n)/(dist*dist);\n              }\n            }\n          }\n          \n          v_g=C*normalize(v_g);\n          o=vec4(p_g,v_g);\n          break;\n        }\n      }\n    }\n\n    if(length(o)==0.){\n        vec2 ij=vec2(.0,2.)*rot(3.14159265*.5*float(iFrame%4));\n        vec4 n=texture(iChannel0,fract(uv+ij/iResolution.xy));\n        if(length(n)==0.)\n            return;\n        if(rnd(length(uv)+iTime)<.08)\n            o=n;\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 o, in vec2 FC ){\n    if(iFrame==0){o-=o;return;}\n    vec2 uv=FC.xy/iResolution.xy;\n    vec4 cell=texture(iChannel0,uv);\n    if(length(cell)>0.){o=vec4(cell.zw/C*.5+.5,1.,1.);return;}\n    o=(texture(iChannel1,uv,.1))*.99;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}