{
    "Shader": {
        "info": {
            "date": "1426624029",
            "description": "STYLE?2",
            "flags": 0,
            "hasliked": 0,
            "id": "MlBGzz",
            "likes": 21,
            "name": "STYLE?2",
            "published": 3,
            "tags": [
                "style2"
            ],
            "usePreview": 0,
            "username": "Branch",
            "viewed": 3066
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 p = fragCoord.xy / iResolution.xy;\n\n\tfloat aspectCorrection = (iResolution.x/iResolution.y);\n\tvec2 coordinate_entered = 2.0 * p - 1.0;\n\tvec2 coord = vec2(aspectCorrection,1.0) *coordinate_entered;\n\tfloat vignette = 1.0 / max(0.25 + 0.34*dot(coord,coord),1.);\n    \n    vec2 unreal=coord;\n    unreal*=4.-0.1*iTime+sin(iTime)*.1;\n    float beat = mod(iTime,1.);\n    unreal *= vec2(sin(beat+unreal.y+iTime*.01)*0.05*beat+1.,cos(beat*.01*1.121+unreal.x)*0.05*beat+1.);\n    unreal.x = mod(unreal.x,.5)-0.35;\n    unreal.y = mod(unreal.y,.5)-0.35;\n    float sizer1 = 1.+abs(coord.y*1.2);\n    vec3 rgb = vec3(0.1)-.1*mod(fragCoord.x+fragCoord.y,4.);\n    rgb += vec3(max(min(floor(length(unreal)*10.*sizer1),1.),0.));\n    rgb *= vec3(max(min(floor(length(unreal+vec2(.25))*10.*sizer1),1.),0.));\n    rgb = vec3(min(max(rgb.r,0.),1.),min(max(rgb.g,0.),1.),min(max(rgb.b,0.),1.));\n    rgb -= vec3(0.9,0.5,-0.);\n    \n    \n    vec2 cyclicmovement = vec2(cos(iTime*1.121),sin(iTime*1.121));\n    vec2 magicCoord = cyclicmovement+coord*length(coord+cyclicmovement*mod(iTime*2.,4.));\n    float s=texture(iChannel0,magicCoord).r*.1;\n    if(length(coord+s)*(.7+.1*sin(iTime))<.3)\n        rgb = vec3(1.0,.75,.2);\n    else \n        rgb += vec3(.11);\n    rgb += vec3(1.1-min(mod(floor(length(coord)*(2.3+mod(floor(iTime)+length(coord)*2.121,4.)))+iTime,4.),1.));\n\tfragColor = vec4(rgb*vignette\n         \t\t\t\t,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}