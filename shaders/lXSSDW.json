{
    "Shader": {
        "info": {
            "date": "1710585561",
            "description": "Voronoi",
            "flags": 0,
            "hasliked": 0,
            "id": "lXSSDW",
            "likes": 1,
            "name": "Voronoi001",
            "published": 3,
            "tags": [
                "voronoi"
            ],
            "usePreview": 0,
            "username": "kenshin",
            "viewed": 113
        },
        "renderpass": [
            {
                "code": "#define T iTime * 0.8\n\nvec2 N22(vec2 p)\n{\n    vec3 a = fract(p.xyx*vec3(123.34, 234.34, 345.65));\n    a += dot(a, a+34.45);\n    return fract(vec2(a.x*a.y, a.y*a.z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy)/iResolution.y;   \n    vec3 col = vec3(uv, .0);\n    float dist = .0;\n    float minDist = 100.0;\n    float cellIndex = 0.;\n    \n    if(false)\n    {\n        for(float i = 0.; i < 100.; i++)\n        {\n            vec2 n = N22(vec2(i));\n            vec2 p = sin(n*T);\n            dist = length(uv - p);\n            if(dist < minDist)\n            {\n                minDist = dist;\n                cellIndex = i;\n            }\n        }\n\n        //col = vec3(minDist);\n        col = (cellIndex / 100. + .1) * vec3(.2, .6, .8);\n    }\n    else\n    {\n        uv *= 30.;\n        vec2 gv = fract(uv) - .5;\n        vec2 id = floor(uv);\n        vec2 cid = vec2(.0);\n        float ed = .0;\n        float md = .0;\n    \n        for(float y = -1.; y <= 1.; y++)\n        {\n            for(float x = -1.; x <= 1.; x++)\n            {\n                vec2 offset = vec2(x, y);\n                vec2 n      = N22(offset + id);\n                vec2 p      = sin(n * T)*.5 + offset;\n                p           = gv - p;\n                ed          = length(p);\n                md          = abs(p.x) + abs(p.y);\n                dist        = mix(ed, md, sin(iTime) * .5 + .5);\n                if(dist < minDist)\n                {\n                    minDist = dist;\n                    cid     = vec2(id + offset);\n                }\n            }\n        }\n        col = (smoothstep(.8, .0, minDist)) * vec3(.8, .2, .2);        \n    }\n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}