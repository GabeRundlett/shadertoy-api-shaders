{
    "Shader": {
        "info": {
            "date": "1601315946",
            "description": "Red: integer as float -> v\nGreen: sqrt(v*v)\nBlue: sqrt(v) * sqrt(v)\n\nColumn 1: bit 31 (sign)\nColumn 2: bits 30-23 (exponent)\nColumn 3: bits 22-0 (significand)",
            "flags": 0,
            "hasliked": 0,
            "id": "tddyzj",
            "likes": 4,
            "name": "float: v vs. sqrt(v*v)",
            "published": 3,
            "tags": [
                "math",
                "precision",
                "ieee",
                "error"
            ],
            "usePreview": 0,
            "username": "ttg",
            "viewed": 410
        },
        "renderpass": [
            {
                "code": "void mainImage (out vec4 fd, vec2 fc ) {\n  vec2 g = vec2(32,4*30);\n  ivec2 c = ivec2(fc*g/iResolution.xy),\n        edge = -c + ivec2((fc+1.)*g/iResolution.xy);\n\n  //   c.y = int(fc.y);                 // show more values\n\n  int test = c.y%4,  // input vs. output\n         i = c.y/4,  // test value\n         j = 31-c.x; // bit number\n  fd = vec4(0.);\n\n  //   for (int test=0; test<2; test++) // show tests 0,1 overlayed (easier to see differences)\n\n  if (test<3) {\n    float v = min(float(i),iTime+1e11); // i as float,\n    // attempting to stop the compiler from tracing the algebra ahead-of-time\n\n      //         v = v                   (Red)\n    if (test==1) v = sqrt(v*v);       // Green\n    if (test==2) v = sqrt(v)*sqrt(v); // Blue\n\n    fd[test] = float((floatBitsToUint(v)>>j)&1u);\n  }\n  fd += .3*length(fd); // lighten result\n  if (edge.x>0) {\n    fd+=.2;\n    if (j==31 || j==23) fd+=1.;\n  }\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}