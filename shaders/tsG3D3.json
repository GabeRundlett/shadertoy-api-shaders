{
    "Shader": {
        "info": {
            "date": "1571184370",
            "description": "A dragonfly\n\nMouse X to rotate",
            "flags": 0,
            "hasliked": 0,
            "id": "tsG3D3",
            "likes": 11,
            "name": "Shadertober 12 - Dragon",
            "published": 3,
            "tags": [
                "dragon",
                "inktober",
                "shadertober",
                "backwardscaptain"
            ],
            "usePreview": 0,
            "username": "BackwardsCap",
            "viewed": 435
        },
        "renderpass": [
            {
                "code": "float legs(vec3 p , float s)\n{\n    float c1 = capsule(p+vec3(0,0,.5),vec3(0),vec3(s*.6,-.9,.3),.05);\n    float c2 = capsule(p+vec3(0,0,.5),vec3(s*.6,-.9,0.3),vec3(s*.1,-1.,1.),.04);\n    float c3 = capsule(p+vec3(0,0,.7),vec3(0),vec3(s*.6,-1.1,.2),.05);\n    float c4 = capsule(p+vec3(0,0,.7),vec3(s*.6,-1.1,0.2),vec3(s*.19,-1.2,1.),.04);\n    float c5 = capsule(p+vec3(0,0,.9),vec3(0),vec3(s*.3,-.8,-.7),.05);\n    float c6 = capsule(p+vec3(0,0,.9),vec3(s*.3,-.8,-.7),vec3(s*.12,-2.3,.0),.04);\n    float r = min(c1,c2);\n    r = min(r,min(c3,c4));\n    r=min(r,min(c5,c6));\n    return r;\n}\n\nfloat wing(vec3 p, float s, float o)\n{\n\tp.xz/=s;\n    p.y+=.8;\n    p.x=-abs(p.x);\n    p.yz*=rot(-PI);\n    p.xy*=rot(-PI/2.*(.3+o)+cos01(iTime/2.+o*3.)*.25);\n    p.xz*=rot(0.1);\n    vec3 p1 = p/vec3(3,1,1)+vec3(.45,0,0);\n    float w = cyl(p1,.2,.01,.001);\n    //p.xz*=rot(PI/8.);\n    //p1=p/vec3(3.5,1,1.2)+vec3(.3,0,0.3);\n    //float w2 = cyl(p1-vec3(.05,0,0.15),.1,0.01,.001);\n    //float w3 = cyl(p1-vec3(.1,0,0.3),.1,.01,.001);\n    return w;//min(w,min(w2,w3));\n}\n\nvec2 df(vec3 p)\n{\n\tfloat b = capsule(p,vec3(0,1.-clamp(-p.z-2.,-1.,0.)*.25,-4),vec3(0,-.05,0.1),.1+cos01(p.z+.3)/4.5);\n    float h = capsule(p,vec3(0),vec3(0,0,.3),.4);\n    float es = .35, eh = -.2;\n    float e = min(length(p+vec3(es,eh,-.15))-.45,length(p+vec3(-es,eh,-.15))-.45);\n    \n    float l1 =legs(p,1.);\n    float l2 = legs(p,-1.);\n    float dfl = min(l1,l2);\n    \n    float st = capsule(p,vec3(0,-1.2,.5),vec3(0,-100,-100),.2);\n    \n    vec3 wp =p+vec3(0.,-1.,.8);\n    wp.yz*=rot(.25);\n    float w = wing(wp,1.5,0.);\n    wp+=vec3(0.,0.,.4);\n    w=min(w,wing(wp,1.2,.2));\n    \n\n    float wng = smin(b,w,.1);\n\tfloat lgs = smin(b,dfl,.1);\n    \n    float r=wng;\n    r=min(r,e);\n    r=min(r,lgs);\n    r=min(r,h);\n    r=min(r,st);\n    \n    float m = 0.;\n    if(r==b)m=1.;\n    else if(r==e)m=2.;\n\telse if(r==w)m=3.;\n    else if(r==dfl)m=4.;\n\telse if(r==st)m=6.;\n    else if(r==h)m=5.;\n    return vec2(r,m);\n}\n\nvec2 map(vec3 p)\n{\n    return df(p);\n}\n\nvec3 normal(vec3 p)\n{\n    vec2 e = vec2(0.0005,0.);\n    return normalize(vec3(\n        map(p+e.xyy).x-map(p-e.xyy).x,\n        map(p+e.yxy).x-map(p-e.yxy).x,\n        map(p+e.yyx).x-map(p-e.yyx).x\n        ));\n}\n\n\nvec2 ray(vec3 ro, vec3 rd)\n{\n    float t = 0.;\n    float m =0.;\n    for(int i=0;i<128;i++)\n    {\n        \n\n        vec3 p = ro+rd*t;\n        vec2 s = map(p);\n        \n        m=s.y;\n        if(s.x<0.005)break;\n        t+=s.x;\n        if(t>MAX_DIST){t=-1.; break;}\n    }\n    \n    return vec2(t,m);\n}\n\n//iq's soft shadow function\nfloat shadow(in vec3 ro, in vec3 rd)\n{\n    float res = 1.0;\n    float t = 0.0001;\n    for(int i=0;i<64;i++)\n    {\n        \n        vec3 pos = ro+t*rd;\n        float h = map(pos).x;\n        \n        res= min(res, 18.0*h/t);\n        if(h<0.0001)break;\n        t+=h;\n        if(t>MAX_DIST)break;\n        \n    }\n    \n    return clamp(res,0.,1.);\n}\n\nvec3 color(vec3 ro, vec3 rd, vec2 r)\n{\n    vec3 p = ro+rd*r.x;\n    vec3 n = normal(p);\n    vec3 col = texture(iChannel0,rd).xyz;\n    \n    vec3 mate = vec3(1.);\n    \n    float at = atan(p.y,p.x);\n    \n    //body\n    if(r.y<1.5)mate=vec3(.2,.5,.8)+vec3(0,1.,0)*smoothstep(0.,1.,cos(p.z*50.+at))*(p.y+.1)+vec3(.5,0.5,1)*(.5-p.y+.1);\n    //eyes\n    else if(r.y<2.5)mate=vec3(0.1);\n\t//wings\n\telse if(r.y<3.5)mate=vec3(0.5,1.1,1.5)+vec3(0,1,0)*(cos(p.y*5.))+.1*(vec3(1,1,1)*cos(p.z*100.)*sin(p.y*50.));\n    //legs\n    else if(r.y<4.5)mate=vec3(0);\n    //head\n    else if(r.y<5.5)mate=vec3(0.4,0.1,2)+vec3(0,1.,0)*smoothstep(0.,1.,cos(p.z*50.+at));\n    //stick\n    else if(r.y>5.5)mate=vec3(0.35,0.15,0.0)+texture(iChannel1,(p.xz+p.xy+p.yz)/3.).rgb;\n    \n    \n    vec3 sun=normalize(vec3(-0.5,0.5,.75));\n    float dif = clamp(dot(sun,n),0.0,1.0);\n    float sha = shadow(p+n*0.01,sun);\n    float sky = clamp(0.5+0.5*dot(n,vec3(0,1,0)),0.,1.);\n    float bou = clamp(0.5+0.5*dot(n,vec3(0,-1,0)),0.,1.);\n    \n\tvec3 ref = reflect(-sun,n);\n    \n    float spe = max(0.0,dot(ref,normalize(ro-p)));\n    spe = pow(spe,8.0);\n\n    if(r.x>0.){\n        col=mate*vec3(0.6,0.4,0.4)*dif*sha+spe*0.5;\n        col+=mate*vec3(0.4,0.3,0.5)*sky*.5;\n        col+=mate*vec3(0.6,0.3,0.3)*bou*.25;\n    }\n        \n    return col;\n    \n}\n\nvoid mainImage( out vec4 c, in vec2 f )\n{\n    vec2 uv = (2.*f-iResolution.xy)/iResolution.y;\n\n    float mx = .6+iMouse.x/100.;\n    \n    float dst = 6.5, t = mx, h = cos01(iTime/5.)*1.+.5;\n    vec3 ro = vec3(sin(t)*dst,h,cos(t)*dst);\n    vec3 ta = vec3(0,0,0);\n    vec3 cf = normalize(ta-ro);\n    vec3 cu = normalize(cross(cf,vec3(0,1,0)));\n    vec3 cr = normalize(cross(cu,cf));\n    vec3 rd = normalize(uv.x*cu+uv.y*cr+2.*cf);\n    vec2 r = ray(ro,rd);\n\n    vec3 col = color(ro,rd,r);\n    \n    if(r.x>0.&&(r.y<=5.))\n    {\n        float rid = r.y;\n        vec3 p = ro+rd*r.x;\n        vec3 n = normal(p);\n        rd = reflect(rd,n);\n        ro=p+n*texture(iChannel2,rd.xy).g/2.;\n        r = ray(ro,rd);\n        vec3 rc = color(p,rd,r);\n        if(rid==2.)\n\t        col+=rc/4.;\n        else if(rid==3.)\n            col+=rc;\n        else\n            col+=rc/10.;\n    }\n    \n    c.rgb = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 6,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 26,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 14854,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define MAX_DIST 30.\n#define PI 3.1415927\n\n//thanks to iq as always!\nfloat capsule(vec3 p, vec3 a, vec3 b, float r)\n{\n    vec3 pa = p-a, ba = b-a;\n    float h = clamp(dot(pa,ba)/dot(ba,ba),0.,1.);\n    return length(pa-ba*h)-r;\n}\n\nfloat smin(float d1, float d2, float k)\n{\n    float h = clamp(0.5+0.5*(d2-d1)/k,0.0,1.0);\n    return mix(d2,d1,h)-k*h*(1.0-h);\n}\n\nfloat cyl(vec3 p, float ra, float rb, float h)\n{\n    vec2 d = vec2(length(p.xz)-2.0*ra+rb, abs(p.y)-h);\n    return min(max(d.x,d.y),0.0)+length(max(d,0.0))-rb;\n}\n        \nfloat cos01(float x)\n{\n    return (1.+cos(x))/2.;\n}\n\nmat2 rot(float t)\n{\n    float s = sin(t);\n    float c = cos(t);\n    return mat2(c, -s, s, c);\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}