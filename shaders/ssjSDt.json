{
    "Shader": {
        "info": {
            "date": "1621331638",
            "description": "YOU WANT TO PRESS THE LIKE BUTTON AND IT IS ENTIRELY YOUR DECISION, YOU ARE NOT BEING INFLUENCED BY THE SPIRAL.\n\nNaive spiral implementation- if you change 'nCols' to 3  you'll see where it breaks.",
            "flags": 0,
            "hasliked": 0,
            "id": "ssjSDt",
            "likes": 6,
            "name": "PRESS THE LIKE BUTTON, DAVE",
            "published": 3,
            "tags": [
                "simple",
                "spiral",
                "quick"
            ],
            "usePreview": 0,
            "username": "JeanPaulSoftware",
            "viewed": 361
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926538\n\nfloat getEdgeFactor (float x, float lineWidth) {\n    // Probably a better way to do this\n    float halfWidth = lineWidth * 0.5;\n    float minDist = 0.0;\n    if (x > halfWidth && x < (1.0 - halfWidth)) {\n        return 0.0;\n    }\n    \n    minDist = min(abs(halfWidth - x), abs(1.0 - halfWidth - x));  \n    return clamp((minDist) / halfWidth, 0.0, 1.0);\n\n}\n\nvec3[5] palette = vec3[](\n    vec3(1., 22., 39.) / 255.0,\n    vec3(253., 255., 252.) / 255.,\n    vec3(46., 196., 182.) / 255.,\n    vec3(231., 29., 54.) / 255.,\n    vec3(255., 159., 28.) / 255.\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = 2.3;   \n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    \n    float angleScale = 2.0; // 1.0;\n    float nCols = 4.0; // 2.0;\n    float direction = -1.0; // 1.0;\n\n    float angle = PI * 2.0 + atan(uv.y, uv.x) / PI * angleScale;\n    vec2 scaledUV = scale * uv;\n    \n    float dist = distance(scaledUV, vec2(0.0, 0.0));\n    float distFloor = floor(dist + angle + iTime * direction);\n    float distFract = fract(dist + angle + iTime * direction);\n    \n\n    \n    int paletteIndex = int(mod(distFloor, nCols));\n    vec3 background = palette[paletteIndex];\n    \n    float edgeFactor = getEdgeFactor(distFract, 0.04);\n    vec3 edgeColour = palette[4]; //palette[2];\n\n    // Output to screen\n    fragColor = vec4(mix(background, edgeColour, edgeFactor), 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}