{
    "Shader": {
        "info": {
            "date": "1534266181",
            "description": "what is this, 1999?\n\n(help i can't seem to stop making 3d rotating cubes)",
            "flags": 0,
            "hasliked": 0,
            "id": "MtdyWj",
            "likes": 19,
            "name": "twisty cuby",
            "published": 3,
            "tags": [
                "3d",
                "raytracing",
                "plasma",
                "dithering"
            ],
            "usePreview": 0,
            "username": "DJDoomz",
            "viewed": 1278
        },
        "renderpass": [
            {
                "code": "//force 20 fps\n//#define iTime (floor(iTime*20.)/20.)\n\nfloat t;\n\nmat2 rot(float a)\n{\n    float s = sin(a), c = cos(a);\n    return mat2(c,s,-s,c);\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  //p = fract(p/10.)*10.-5.;\n  //p = sin(p/6.)*6.;\n  p.xz *= rot(t);\n  p.yx *= rot(.6*t);\n  \n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nfloat sdRay(vec3 p, vec3 s, vec3 e){\n    e = s + e;\n    vec3 l1 = p-s;\n    vec3 l2 = (e-s)*(max( dot(l1,(e-s) ) /(dot(e-s,e-s)), 0.) );\n    \n    return length(l1-l2)-.2;\n}\n\nfloat map(vec3 p){\n    float b = sdBox(p-vec3(0,0,7),vec3(2.7));\n    return b;\n}\n\nvec3 norm(vec3 p){\n    vec2 xz = dFdx(p).xz;\n    vec2 yz = dFdy(p).yz;\n    vec3 xyz = vec3(-xz.x,yz.y,(xz.y+yz.y)/2.);\n    return normalize(xyz);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    //vec2 uv = 2.*fragCoord/iResolution.xy-1.;\n    vec2 tuv = fragCoord/iResolution.xy;\n    \n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;    \n    \n    t = iTime+.2*sin(uv.x*1.76+uv.y*1.+iTime);\n    \n    vec3 p = vec3(0,0,-2);\n    p.y += .6*sin(iTime);\n    vec3 rd = normalize(vec3(uv,1.4));\n    \n    //rd.xz*=rot(iTime);\n        \n    float d =9999.;\n    \n    for(int i = 0; i < 14; i++)\n    {\n        d = map(p);\n        p += rd*d;\n        if(d < .001 || d > 10.) break;\n    }\n    \n    vec3 n;\n    n = norm(p);\n    \n    vec3 ld = normalize(vec3(0.5,.0,-.4));\n    \n    float l = max(0.4,dot(-n,ld));\n    //vec3 c = .5+.5*sin( sin(6.*n)+3.*length(p)+3.*iTime );\n               \n    d = l/(d*d+.6);\n\n    // Output to screen\n    fragColor = d*(.4+.3* abs(sin(length(2.*cos(p))*n+t)).rgbb);\n    float b = texelFetch(iChannel0, ivec2(fragCoord)/2%8,0).r;\n    fragColor = floor(fragColor*4.+2.*b-1.)/4.;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 28,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}