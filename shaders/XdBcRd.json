{
    "Shader": {
        "info": {
            "date": "1493232309",
            "description": "Was looking for a simple triangle DE and couldn't find one, so kinda came up with this. Don't know if it's useful.",
            "flags": 0,
            "hasliked": 0,
            "id": "XdBcRd",
            "likes": 4,
            "name": "[ #14 ] - Triangle, Trapezoid DE",
            "published": 3,
            "tags": [
                "2d",
                "sdf",
                "triangle"
            ],
            "usePreview": 0,
            "username": "Yrai",
            "viewed": 772
        },
        "renderpass": [
            {
                "code": "#define res_ iResolution\n\n#define d(uv,s) (2. * uv.xy - res_.xy) / res_.y * s\n\n\nvoid mainImage(out vec4 o, vec2 f) {\n\tvec2 p = d(f, 2.);\n\n    // Triangle in one line?\n    float d = max(abs(p.x)+p.y, abs(p.y)) - 1.;\n    //float d = max(abs(p.x+p.y)+p.y, abs(p.y)) - 1.;\n    //float d = max(abs(p.x*1.5)+p.y, abs(p.y)) - 1.;\n    \n    // Trapezoid\n    //float d = max(abs(p.x)+.3*p.y, abs(p.y)) - 1.;\n    \n    vec3 c = vec3(.0, .0, .0);\n\tc = mix(c, vec3(1.), smoothstep(.02, .01, abs(d)));\n    c = mix(c, vec3(1., 0., 0.), fract(-d) / sqrt(d*9.));\n    \n    o = vec4(c, 1.);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}