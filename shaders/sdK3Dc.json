{
    "Shader": {
        "info": {
            "date": "1632363708",
            "description": "basic geometric images\n\n",
            "flags": 0,
            "hasliked": 0,
            "id": "sdK3Dc",
            "likes": 3,
            "name": "basic geometric images",
            "published": 3,
            "tags": [
                "basicgeometricimages"
            ],
            "usePreview": 0,
            "username": "jorge2017a2",
            "viewed": 247
        },
        "renderpass": [
            {
                "code": "//basic geometric images\n\n//https://iquilezles.org/articles/distfunctions2d\n\n///por jorge2017a2...2021-sep-19\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define S2(d,b) smoothstep(antialiasing(0.05),b,d)\n\n///---------------------------\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}    \nvec2 opRep2D( in vec2 p, in vec2 c )\n\t{ vec2 q = mod(p+0.5*c,c)-0.5*c; return  q ;}\n\n///----------Operacion de Distancia--------\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n    \nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{\n  colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\nvec3 DrawFig(vec3 pColObj, vec3 colOut, float distObj )\n{  colOut = mix(colOut,pColObj ,S2( distObj,0.0));\nreturn colOut;\n}\n\nfloat sdCircle( vec2 p, float r )\n{return length(p) - r; }\n\nvec3 circulosvarios(vec2 p, vec3 col, float pradio  )\n{\n    float pr=0.272;\n    p.x=mod(p.x,pr);\n    p.y=mod(p.y,pr);\n    float r1=iTime/100.0;    \n    r1=pradio;\n    float c1=sdCircle( p-vec2(.0,.0), r1 );\n    float c2=sdCircle( p-vec2(.25,.0),r1 );\n    float c3=sdCircle( p-vec2(.0,.25),r1 );\n    float c4=sdCircle( p-vec2(.25,.25),r1 );\n    \n    col= DrawFigBorde(vec3(1.0), col, abs(c1) );\n    col= DrawFigBorde(vec3(1.0), col, abs(c2) );\n    col= DrawFigBorde(vec3(1.0), col, abs(c3) );\n    col= DrawFigBorde(vec3(1.0), col, abs(c4) );\n    \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord.xy-iResolution.xy)/max(iResolution.x,iResolution.y);    \n    //vec3 col=vec3(0.4,0.4,0.4);\n    vec3 col=vec3(0.6);\n    \n    col= circulosvarios(uv, col,0.2); \n    col= circulosvarios(uv, col,0.15+0.07*sin(iTime)); \n    fragColor = vec4(col,1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}