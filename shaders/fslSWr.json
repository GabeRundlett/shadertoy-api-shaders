{
    "Shader": {
        "info": {
            "date": "1618488979",
            "description": "Original tweet: https://twitter.com/aemkei/status/1378106731386040322\n\nTODO:\n- figure out how to do a perfecto loop\n- more bit patterns",
            "flags": 0,
            "hasliked": 0,
            "id": "fslSWr",
            "likes": 5,
            "name": "Alien Bit Patterns",
            "published": 3,
            "tags": [
                "alien",
                "xor",
                "pattern"
            ],
            "usePreview": 0,
            "username": "thope",
            "viewed": 342
        },
        "renderpass": [
            {
                "code": "/*\n    Not working in latest Safari! Try Chrome or something instead.\n*/\n\n\nfloat random(vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat saturate(float x) {\n    return clamp(x, 0.0, 1.0);\n}\n\nvec3 get_col(vec2 uv)\n{\n     return 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = get_col(uv);\n\n    // Adjust offset and scale\n    float scale = 0.1;\n    vec2 offset = iResolution.xy * 0.5;\n    offset.x -= iTime * 100.0;\n    offset.y += sin(iTime) * 100.0;\n    vec2 coord = fragCoord - offset;\n    coord *= scale;\n    \n    // Get x and y as integers\n    int x = abs(int(coord.x));\n    int y = abs(int(coord.y));\n    vec2 icoord = vec2(x,y);\n    \n    // Sparkle\n    float sparkle = random(icoord + iTime * 0.00001);\n    sparkle = saturate(sparkle - 0.2);\n    col = mix(get_col(uv + sparkle * 1.0), vec3(.0,.0,.0), sparkle);\n    \n    // Ripple\n    float ripple = texture(iChannel0, coord * 0.001 + iTime * 0.0001).r;\n    ripple *= texture(iChannel0, coord * 0.001 + iTime * 0.0001 * vec2(-.9,-1.)).r;\n    col *= saturate(ripple + 0.5);\n    \n    // Magic alien formulae\n    if((x ^ y) % 9 == 1)\n    {\n        fragColor = vec4(col,1.0);\n    }\n    else\n    {\n        col = get_col(uv) * ripple * 0.1;\n        fragColor = vec4(col,1.0);\n    }\n}\n\n/*\n    Unlicense    \n    This is free and unencumbered software released into the public domain.\n    For more information, please refer to <http://unlicense.org/>\n*/",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}