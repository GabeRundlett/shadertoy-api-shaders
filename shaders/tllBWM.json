{
    "Shader": {
        "info": {
            "date": "1596912684",
            "description": "color geo tunnel",
            "flags": 0,
            "hasliked": 0,
            "id": "tllBWM",
            "likes": 2,
            "name": "color_geo_tunnel",
            "published": 3,
            "tags": [
                "tunnel"
            ],
            "usePreview": 0,
            "username": "slackmage",
            "viewed": 259
        },
        "renderpass": [
            {
                "code": "float map(vec3 p){\n    p=mod(p,2.)-1.;\n    p = abs(p)-1.;\n    if (p.x < p.z) p.xz = p.zx;\n    if (p.y < p.z) p.yz = p.zy;\n    if (p.x < p.y) p.xy = p.yx;\n    float s=1.;\n    for(int i=0;i++<10;)\n    {\n      float r2=2./clamp(dot(p,p),.1,1.);\n      p=abs(p)*r2-vec3(.6,.6,1.5);\n      s*=r2;\n    }\n    return length(p)/s;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv=(2.*fragCoord-iResolution.xy)/iResolution.y;\n\tvec3 p,\n  \t\tro=vec3(.4+.2*sin(iTime*.09),.2+.05*cos(iTime*.09),-1.0*iTime),\n  \t\tw=normalize(vec3(.2,sin(iTime*.05),-1)),\n  \t\tu=normalize(cross(w,vec3(0,1,0))),\n  \t\trd=mat3(u,cross(u,w),w)*normalize(vec3(uv,2));\n  \tfloat h=0.1,d,i,zoom = 2.;\n \tro*=zoom;\n\tfor(i=1.;i<1000.;i++){\n    \tp=ro+rd*h;\n    \tp/=zoom;\n\t  \td=map(p);\n    \tif(d<0.001||h>25.)break;\n    \th+=d;\n\t}\n\tfragColor.xyz=90.*vec3(cos(p*.8)*.5+.5)/i;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}