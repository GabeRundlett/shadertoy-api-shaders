{
    "Shader": {
        "info": {
            "date": "1623907078",
            "description": "The equivalent of CSS shadow, in shader.\nMouse click and drag to move shadow.",
            "flags": 0,
            "hasliked": 0,
            "id": "ftBGDD",
            "likes": 0,
            "name": "Fake Shadow Test CL",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "chenglou",
            "viewed": 194
        },
        "renderpass": [
            {
                "code": "vec4 black = vec4(0,0,0,1);\nvec4 white = vec4(1,1,1,1);\nvec4 blueish = vec4(0,0.5,0.8,1);\n\nfloat sdBox( in vec2 p, in vec2 b ) {\n    // equation from https://iquilezles.org/articles/distfunctions2d\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Configs. Feel free to tweak\n    vec2 boxDimensions = vec2(500, 300);\n    vec2 center = vec2(700, 400);\n    float shadowSpread = 20.;\n    \n    // Draw box\n    float sdBox_ = sdBox(fragCoord.xy - center, boxDimensions / 2.);\n    // Draw shadow. Mouse click and drag to move it\n    float sdShadow = sdBox(fragCoord.xy - center + (iMouse.xy - center) / 30., boxDimensions / 2.);\n\n    if (sdBox_ <= 0.) {\n        // negative sdf -> inside the box\n        fragColor = blueish;\n    } else if (sdShadow > 0.) {\n        // positive sdf -> outside the box. Sdf gets rounder and rounder the further it is from the box\n        fragColor = mix(black, white, sdShadow / 20.);\n    }\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}