{
    "Shader": {
        "info": {
            "date": "1727979207",
            "description": "A little modification of musk's lense flare shader. The f0 part here looks reasonably better.",
            "flags": 0,
            "hasliked": 0,
            "id": "4XXfz8",
            "likes": 2,
            "name": "musk's len Kusou1 159",
            "published": 3,
            "tags": [
                "2d",
                "lensflare"
            ],
            "usePreview": 1,
            "username": "Kusou1",
            "viewed": 46
        },
        "renderpass": [
            {
                "code": "// musk's lense flare, modified by icecool.\n// See the original at: https://www.shadertoy.com/view/4sX3Rs \n\nfloat noise(float t)\n{\n return texture(iChannel0,vec2(t, 0.0) / iChannelResolution[0].xy).x;\n}\nfloat noise(vec2 t)\n{\n return texture(iChannel0,(t + vec2(iTime)) / iChannelResolution[0].xy).x;\n}\n\nvec3 lensflare(vec2 uv,vec2 pos)\n{\n vec2 main = uv-pos;\n vec2 uvd = uv*(length(uv));\n \n float ang = atan(main.y, main.x);\n float dist=length(main); dist = pow(dist,.1);\n float n = noise(vec2((ang-iTime/9.0)*16.0,dist*32.0));\n \n float f0 = 1.0/(length(uv-pos)*300.0+1.0);\n\n float f2 = max(1.0/(1.0+32.0*pow(length(uvd+0.8*pos),2.0)),.0)*00.55;\n float f22 = max(1.0/(1.0+32.0*pow(length(uvd+0.85*pos),2.0)),.0)*00.53;\n float f23 = max(1.0/(1.0+32.0*pow(length(uvd+0.9*pos),2.0)),.0)*00.51;\n \n vec2 uvx = mix(uv,uvd,-0.5);\n \n float f4 = max(0.01-pow(length(uvx+0.4*pos),2.4),.0)*6.0;\n float f42 = max(0.01-pow(length(uvx+0.45*pos),2.4),.0)*5.0;\n float f43 = max(0.01-pow(length(uvx+0.5*pos),2.4),.0)*3.0;\n \n uvx = mix(uv,uvd,-.4);\n \n float f5 = max(0.01-pow(length(uvx+0.2*pos),5.5),.0)*2.0;\n float f52 = max(0.01-pow(length(uvx+0.4*pos),5.5),.0)*2.0;\n float f53 = max(0.01-pow(length(uvx+0.6*pos),5.5),.0)*2.0;\n \n uvx = mix(uv,uvd,-0.5);\n \n float f6 = max(0.01-pow(length(uvx-0.3*pos),1.6),.0)*6.0;\n float f62 = max(0.01-pow(length(uvx-0.325*pos),1.6),.0)*3.0;\n float f63 = max(0.01-pow(length(uvx-0.35*pos),1.6),.0)*5.0;\n \n vec3 c = vec3(.0);\n \n c.r+=f2+f4+f6; c.g+=f22+f42+f62; c.b+=f23+f43+f53+f63;\n c+=vec3(f0);\n \n return c;\n}\n\nvec3 cc(vec3 color, float factor,float factor2) // color modifier\n{\n float w = color.x+color.y+color.z;\n return mix(color,vec3(w)*factor,w*factor2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n vec2 uv = fragCoord.xy / iResolution.xy - 0.5;\n uv.x *= iResolution.x/iResolution.y; //fix aspect ratio\n vec3 mouse = vec3(iMouse.xy/iResolution.xy - 0.5,iMouse.z-.5);\n mouse.x *= iResolution.x/iResolution.y; //fix aspect ratio\n if (iMouse.z<.5)\n {\n  mouse.x=sin(iTime)*.5;\n  mouse.y=sin(iTime*.913)*.5;\n }\n \n vec3 color = vec3(1.4,1.2,1.0)*lensflare(uv,mouse.xy);\n color = cc(color,.5,.1);\n fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}