{
    "Shader": {
        "info": {
            "date": "1724006642",
            "description": "Make quasi-periodic patterns by overlaying 5 waves.",
            "flags": 0,
            "hasliked": 0,
            "id": "4cXBz2",
            "likes": 4,
            "name": "Quasi-periodic Waves",
            "published": 3,
            "tags": [
                "tiling",
                "aperiodic",
                "evoke25"
            ],
            "usePreview": 0,
            "username": "Refurio",
            "viewed": 108
        },
        "renderpass": [
            {
                "code": "const float pi = 3.1415926536;\n\n// center coordinates\nfloat x0 = 0.;\nfloat y0 = 0.;\n\nconst int n = 5;\nfloat r = 60.; // radius\nfloat a = 360./float(n); // angle\n\nfloat sqr(float x) {\n  return x*x;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  float w2 = iResolution.x / 2.;\n  float h2 = iResolution.y / 2.;\n  float m = h2 < w2 ? h2 : w2;\n\n  // make complex radius from r and a:\n  float rr = r * cos(-a*pi/180.) / m;\n  float ri = r * sin(-a*pi/180.) / m;\n\n  float cx = fragCoord.x - w2;\n  float cy = fragCoord.y - h2;\n  float dx  = cx*rr - cy*ri + x0;\n  float dy  = cx*ri + cy*rr + y0;\n  float t = iTime/3.;  \n\n  float g = 0.;\n  for(int i = 0; i < n; ++i) {\n    float ax  = cos(a*float(i)*pi/180.);\n    float ay  = sin(a*float(i)*pi/180.);\n    g += sin(ay*dy+ax*dx+t*float(i));\n  }\n  g = g / float(n);\n  if(g < 0.)\n    g = 0.;\n  else\n    g = 1.;\n  fragColor = vec4(g, g, g, 0.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}