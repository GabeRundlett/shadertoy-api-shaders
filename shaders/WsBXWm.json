{
    "Shader": {
        "info": {
            "date": "1554045491",
            "description": "A plasma ball",
            "flags": 0,
            "hasliked": 0,
            "id": "WsBXWm",
            "likes": 4,
            "name": "Plasma Ball",
            "published": 3,
            "tags": [
                "raymarched",
                "plasma"
            ],
            "usePreview": 0,
            "username": "_polymath",
            "viewed": 651
        },
        "renderpass": [
            {
                "code": "float noise(float x) {\n\treturn mod(sin(tan(x * 26434.3643) * 3643.2372), 1.);\n}\n\nfloat osPlasma(vec3 uv, float s) {\n\tfloat c = 0.;\n    for (float i = 0.; i < 10.; ++i) {\n        float x = noise(i * 253.2623 + s * 25.623),\n            y = noise(i * 8463.373 + s * 73.372),\n            z = noise(i * 4584.564 + s * 53.572),\n            r = .4 + noise(i * 362.236 + s * 623.62) * 3.;\n        vec3 d = vec3(\n        \tsin(x * (iTime + 3463.345) * 0.7),\n        \tcos(y * (iTime + 5734.724) * 0.5),\n        \tcos(z * (iTime + 8233.623) * 0.3)) * r;\n        c += dot(d-uv,d-uv);\n    }\n    return pow( abs(sin(c * .3) ), 8.);\n}\n\nfloat cPlasma(vec3 uv) {\n    return osPlasma(uv, 3463.634)\n       * osPlasma(uv, 8462.273);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - iResolution.xy * .5)\n        /iResolution.y;\n\n    // Time varying pixel color\n\n    // Output to screen\n   // fragColor = vec4(osPlasma(vec3(uv, 0.4), 1.)); return;\n    \n    float t = iTime * 0.3, s = sin(t), c = cos(t);\n    mat2 m = mat2(-s, c, c, s);\n    \n\tvec3 cam = vec3(0., 0., -5.),\n        ray = normalize(vec3(uv.xy, 1.));\n    cam.xz *= m;\n    ray.xz *= m;\n    \n    vec3 acc = vec3(0.);\n    \n    // go up to the outer edge...\n    for (int i = 0; i < 400; ++i) {\n        float d = length(cam) - 2.; // radius of outer ball\n        if (d < 0.05) {\n                acc += (cam.y) * .2;\n                acc +=\n                    cPlasma(normalize(cam))\n                    * vec3( 1., 0.3, 3. ); // front glass\n                acc += texture(iChannel0,\n                               reflect(ray, normalize(cam))).rgb * 0.4;\n            break;\n        }\n        if (i == 399) {\n           \tfragColor = texture(iChannel0, ray);\n            return; \n        }\n        cam += ray * d;\n    }\n    \n    cam = normalize(cam) * 1.99;\n    \n    // volumetric plasma \n    for (int i = 0; i < 400; ++i) {\n        float d = length(cam); // radius of outer ball\n        cam += ray * min(2. - d, 0.02); // step distance through plasma\n            if (d < .75) { // radius of inner ball\n                // inner ball\n                acc += vec3( 0.4, 0.0, 0.6 ) +\n                    cPlasma(cam / d)\n                    * vec3(1.1, 0.5, 1.6 );\n                break;\n            } else if (d > 2.02 || i == 399) {\n                //exiting the ball\n            \t//acc -= min(cam.y, 0.) * .2; // rear glass\n                acc += texture(iChannel0, reflect(ray, cam / d)).rgb * 0.3;\n                acc += texture(iChannel0, ray).rgb * 0.6;\n                break;\n            } else {\n                // volumetric plasma\n                acc += cPlasma(cam / d)\n                    * vec3( 0.02, 0.003, 0.06 );\n            }\n    }//*/\n       \n            \n    \n    fragColor = vec4(acc, 1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 24,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}