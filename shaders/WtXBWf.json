{
    "Shader": {
        "info": {
            "date": "1597849542",
            "description": "Venus Bebop - Result of improvised live code session on Twitch\nLIVE SHADER CODING, SHADER SHOWDOWN STYLE, EVERY TUESDAYS 20:00 Uk time:\nhttps://www.twitch.tv/evvvvil_",
            "flags": 0,
            "hasliked": 0,
            "id": "WtXBWf",
            "likes": 19,
            "name": "[TWITCH] Venus Bebop",
            "published": 3,
            "tags": [
                "terrain",
                "demoscene",
                "glow",
                "organic",
                "city",
                "island",
                "world",
                "dark",
                "mountain",
                "other",
                "network",
                "cowboy",
                "bebop"
            ],
            "usePreview": 0,
            "username": "evvvvil",
            "viewed": 852
        },
        "renderpass": [
            {
                "code": "// Venus Bebop - Result of an improvised live coding session on Twitch\n// Vaguely inspired by the floating islands on Venus in Cowboy Bebop\n// LIVE SHADER CODING, SHADER SHOWDOWN STYLE, EVERY TUESDAYS 20:00 Uk time: \n// https://www.twitch.tv/evvvvil_\n\nvec2 z,v,e=vec2(.0035,-.0035);float t,tt,b,bb,g,gg,tnoi; vec3 np,bp,op,pp,po,no,al,ld;\nfloat bo(vec3 p,vec3 r){ p = abs(p) - r; return max(max(p.x,p.y),p.z);}\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));}\nfloat smin( float d1, float d2, float k ){  float h = max(k-abs(d1-d2),0.0);return min(d1,d2)-h*h*0.25/k; }\nfloat smax( float d1, float d2, float k ){  float h = max(k-abs(-d1-d2),0.0);return max(-d1,d2)+h*h*0.25/k; }\nvec4 texNoise(vec2 uv){ float f = 0.; f+=texture(iChannel0, uv*.125).r*.5; f+=texture(iChannel0,uv*.25).r*.25; //MERCURTY SDF LIBRARY IS HERE OFF COURSE: http://mercury.sexy/hg_sdf/\n                       f+=texture(iChannel0,uv*.5).r*.125; f+=texture(iChannel0,uv*1.).r*.125; f=pow(f,1.2);return vec4(f*.45+.05);}\nfloat cy(vec3 p,vec3 r){ return max(abs(length(p.xz)-r.x)-r.y,abs(p.y)-r.z);}\nvec2 tower( vec3 p,float flying)\n{\n    vec2 h,t=vec2(cy(p,vec3(.8,.2,1.2)),5);//BLUE CYL CUT\n    t.x=max(t.x,-(abs(abs(abs(p.y)-.4)-.2)-.1));\n    t.x=max(t.x,-(abs(p.z)-.2)); \n    h=vec2(cy(p,vec3(.5,.1,1.4)),6); //WHITE OUTTER\n    h.x=max(h.x,-(abs(p.z)-.4));\n    h.x=smin(h.x,length(abs(p)-vec3(0,1.5,1))-.4,.5);\n    h.x=smin(h.x,.6*length(abs(p.xz)-vec2(0,1))-.1+abs(p.y)*.02,.5);  \n    h.x=min(h.x,bo(p+vec3(.7,1,-2.2),vec3(2,4,1))); //FLOOR WHITE\n    t=t.x<h.x?t:h;    \n    if(flying>0.) {\n        h=vec2(bo(abs(p+vec3(.7,1,-2.))-vec3(1.6,1.-sin(tt)*2.,0),vec3(p.z*.1,p.z*.1,10)),6); //BLACK CUBES FLYING  \n        gg+=0.1/(0.1+h.x*h.x*40.);\n        t=t.x<h.x?t:h;\n    }  \n    h=vec2(cy(p,vec3(.8,.1,1.4)),3);//BLACK CYL  \n    h.x=min(h.x,bo(abs(p+vec3(.7,1,-2.))-vec3(2.,2,0),vec3(.1,2,1))); //BLACK EDGES FLOOR \n    h.x=max(h.x,-(abs(p.z)-.3));\n    t=t.x<h.x?t:h;\n    p.xy*=r2(-sin(p.y*.2)*.5);  \n    t=t.x<h.x?t:h;  \n    return t;\n}\nvec4 c=vec4(0,5,5,.2);\nvec2 mp( vec3 p)\n{\n    op=p;\n    p.x+=sin(op.z*.1+tt*.2)*2.;\n    p.z=mod(p.z+tt*2.,20.)-10.;\n    vec3 tp=p;\n    float disp=sin(p.x*.4)+cos(p.z*.2)*.5;\n    vec2 _uv=vec2(op.x,dot(op.yz+vec2(0,tt*2.),vec2(.5)));\n    tnoi=texNoise(_uv*.05).r;  \n    vec3 towp=2.1*(p-vec3(0,1.1,-1.));\n    for(int i=0;i<3;i++){\n        towp.xz=abs(towp.xz)-vec2(1.5,1);\n        towp.xz*=r2(.55);\n    }   \n    towp.xz-=1.;\n    vec2 h,t=tower(towp,0.);t.x/=2.5;  //FIRST ROUND OF TOWER KIFS\n    bp=towp; bp.xy*=r2(-.3-sin(p.y*.2+tt+op.z*.1)*.4);\n    h=vec2(.7*(length(bp.xz+vec2(-0,2.))-.1+p.y*.05)*.5,6);//LAZER\n    h.x=max(h.x,-p.y);\n    g+=0.1/(0.1+h.x*h.x*40.);   \n    t=t.x<h.x?t:h;   \n    towp.yz*=r2(.785*2.); \n    towp.xy-=vec2(1.,0.1);\n    h=tower(towp,1.);h.x/=2.5;  //SECOND ROUND OF TOWER KIFS\n    t=t.x<h.x?t:h;\n    h=vec2(length(tp)-7.+sin(p.z*.3)*1.5+tnoi*2.5,7);//TERRAIN  STARTS WITH SPHERE\n    h.x=smax(-p.y-.2+tnoi*2.,h.x,1.5);  //SMOOTH CUT SPHERE WITH PLANE\n    h.x=smax(length(tp-vec3(0,0,-1))-1.5+tnoi,h.x,1.5);   //SMOOTH SUBSTRACT SPHERE IN MIDDLE OF ISLAND\n    h.x=smin(h.x,p.y+7.+sin(op.x*.15+1.5)+sin(op.z*.3+tt*.6+3.14)*1.5+tnoi*3.,5.); //SMOOTH MIN ADD TERRAIN AT BOTTOM\n    h.x=smin(length(abs(tp.xz-vec2(2.-tnoi,-1))-4.+disp)-2.+tnoi+(abs(p.y)+5.+tnoi*2.)*0.2,h.x,1.5);//SMOOTH MIN ADD 4 SPIKEY MOUTAINS ON SIDE OF ISLAND\n    h.x=smin(length(abs(op.xy+vec2(0,1.5))-vec2(2.5+sin(op.z*.2+tt*.4)*1.,0.))-1.3+tnoi*2.+sin(op.z*10.+tt*20.)*.03+sin(op.z*.5+tt*2.)*.4,h.x,1.5);  //SMOOTH MIN ADD 2 INFINITE Z CYLINDERS\n    h.x*=0.6; pp=tp;\n    t=t.x<h.x?t:h;   \n    h=vec2(length(cos(p*.5+towp*.4+vec3(0,0,tt*2.))),6); //PARTICLES\n    h.x=max(h.x,length(p.xz)-7.);\n    g+=0.1/(0.1+h.x*h.x*200.);\n    t=t.x<h.x?t:h;\n    return t;\n}\nvec2 tr( vec3 ro,vec3 rd )\n{\n    vec2 h,t=vec2(0.1);\n    for(int i=0;i<128;i++){\n        h=mp(ro+rd*t.x);\n        if(h.x<.0001||t.x>100.) break;\n        t.x+=h.x;t.y=h.y;\n    }  \n    if(t.x>100.) t.y=0.;\n    return t;\n}\n#define a(d) clamp(mp(po+no*d).x/d,0.,1.)\n#define s(d) smoothstep(0.,1.,mp(po+ld*d).x/d)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=(fragCoord.xy/iResolution.xy-0.5)/vec2(iResolution.y/iResolution.x,1);\n    tt=mod(16.+iTime,62.82);\n    vec3 ro=mix(vec3(1),vec3(.3,1.5,1),ceil(sin(tt*.2)))*vec3(cos(tt*.4)*9.,3.-cos(tt*.4)*1.5,-15.),\n    cw=normalize(vec3(0,-6.+sin(tt*.4)*5.,0)-ro),\n    cu=normalize(cross(cw,vec3(0,1,0))),\n    cv=normalize(cross(cu,cw)),\n    rd=mat3(cu,cv,cw)*normalize(vec3(uv,.6)),co,fo;\n    v=vec2(abs(atan(rd.x,rd.z)),rd.y-tt*.02);\n    co=fo=vec3(.13,.1,.1)-length(uv)*.15-rd.y*.15+texNoise(v*.4).r*.3,\n    ld=normalize(vec3(-.2,.3,-.4));\n    z=tr(ro,rd);t=z.x;\n    if(z.y>0.){   \n        po=ro+rd*t;\n        no=normalize(e.xyy*mp(po+e.xyy).x+e.yyx*mp(po+e.yyx).x+e.yxy*mp(po+e.yxy).x+e.xxx*mp(po+e.xxx).x);\n        al=mix(vec3(.1,.2,0.7),vec3(.1,.6,0.8),.5+.5*sin(pp.y*2.+1.));\n        float sp=pow(max(dot(reflect(-ld,no),-rd),0.),40.);\n        if(z.y<5.) al=vec3(0);\n        if(z.y>5.) al=vec3(1);\n        if(z.y>6.) sp=0.,al=mix(vec3(1),vec3(.2,.4,.5),.5+.5*sin(min(-pp.y*.7+.7,2.)+.2+pp.x*.1))-tnoi*1.8;\n        float dif=max(0.,dot(no,ld)),\n        fr=pow(1.+dot(no,rd),4.);    \n        co=mix(sp+al*(a(.05)*a(.1)+.2)*(dif+s(3.)),fo,min(fr,.5));\n        co=mix(fo,co,exp(-.00002*t*t*t));\n    }\n    fragColor = vec4(pow(co+g*.2*vec3(.1,.2,.7)+gg*.2*vec3(.7,.2,.1),vec3(.55)),1);\n} ",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 46,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}