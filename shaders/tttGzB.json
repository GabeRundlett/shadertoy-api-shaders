{
    "Shader": {
        "info": {
            "date": "1577193462",
            "description": "music renderer template",
            "flags": 8,
            "hasliked": 0,
            "id": "tttGzB",
            "likes": 17,
            "name": "[â™ª]Music Renderer",
            "published": 3,
            "tags": [
                "music"
            ],
            "usePreview": 0,
            "username": "Catzpaw",
            "viewed": 614
        },
        "renderpass": [
            {
                "code": "//---Music Renderer\n// by Catzpaw 2019\n\n#define BPM 120.\n#define BEATS 4.\n#define OFFSET 1.3\n#define END 180.\n#define FADE 10.\n\nconst vec3 nc1=vec3(0.0,1.0,0.5);\nconst vec3 nc2=vec3(0.0,0.5,1.0);\n\nfloat hash(vec2 p){p=floor(p*128.)/128.;return fract(sin((p.x+p.y*1e2+iTime)*1313.13)*717.17);}\nvec2 rot(vec2 p,float a){return vec2(p.x*cos(a)-p.y*sin(a),p.x*sin(a)+p.y*cos(a));}\n\nvec4 image(vec2 uv){\n\tvec3 v=vec3(uv,-1);\n    v.xz=rot(v.xz,iTime*.1);\n    vec4 t=texture(iChannel0,v);\n    t*=vec4(mix(mix(nc1,nc2,.5+sin(iTime*1e2)*.2),vec3(1),.5),1);\n    return t;\n}\n\nvec4 mask(vec2 p){return vec4(vec3(smoothstep(.3,.4,length(p)+hash(p)*.01)),1.);}\n\nvec2 ripples(vec2 uv){\n\tfloat l=length(uv),t=(iTime+OFFSET)*3.14*BPM/30.;\n    vec2 p=uv;\n    p*=1.+smoothstep(.8,.95,sin(l*20.-t))*.1;\n    p*=1.+smoothstep(.5,.95,sin(l*10.-t/BEATS))*.5;\n    uv=mix(p,uv,max(1.-smoothstep(OFFSET/2.,OFFSET,iTime),smoothstep(END-FADE,END,iTime)));\n    return uv;\n}\n\nfloat rect(vec2 p,vec4 r){r/=768.;return step(r.x,p.x)*(1.-step(r.x+r.z,p.x))*step(r.y,p.y)*(1.-step(r.y+r.w,p.y));}\nfloat circ(vec2 p,vec4 r){r/=768.;return 1.-step(r.z,length((p-r.xy)*vec2(1,r.w)));}\n\nfloat map(vec2 p){\n    float c=0.;p.y-=p.x*0.15;p+=vec2(0.01,0.02);\n    c+=rect(p,vec4(-80,100,220,40));\n    c+=rect(p,vec4(-80,40,220,40));\n    c+=rect(p,vec4(-80,-80,20,200));\n    c+=rect(p,vec4(120,-80,20,200));\n    c+=rect(p,vec4(-110,-80,50,33.5));\n    c+=rect(p,vec4(90,-80,50,33.5));\n    c+=circ(p,vec4(-110,-80,50,1152));\n    c+=circ(p,vec4(90,-80,50,1152));\n    return clamp(c,0.,1.);\n}\n\nfloat note(vec2 p){\n    float c=map(p)+map(p+vec2(1e-2,0))+map(p+vec2(0,1e-2))+map(p+1e-2);\n\treturn c/4.;\n}\n\nvec4 tex(vec2 p){\n    float c=hash(p);\n\treturn vec4(mix(nc1,nc2,c),1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv=(fragCoord.xy-.5*iResolution.xy)/iResolution.y;\n    float y=uv.y;\n    uv.y=floor(uv.y*128.)/128.;\n    vec4 col=image(ripples(uv))*mask(uv)+note(uv)*tex(uv);\n    col*=(1.-abs(cos(y*128.*3.14)*.2));\n    fragColor=clamp(col,0.,1.);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "cubemap",
                        "id": 24,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "false",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//---Music Renderer\n// by Catzpaw 2019\n\n//SETUP\nconst float base =432.;\t//A tuning (Hz)\nconst float bpm  =120.;\t//beats per minute\nconst float steps=240.;\t//block length\nconst float start=2.;   //start count (beats)\n\n//STATE\nfloat gtime=0.;\t//time\nint   gchord=0;\t//chord\nfloat garp=0.;\t//arpeggio pattern\nfloat gdyn=1.;\t//dynamics\n\n//RANDOM ARP PATTERN GENERATOR\nfloat hash(float s){s=fract(s*.13);s*=s+33.33;return fract(s+s*s);}\nfloat pgen(float s,float r){\n    int p=0;\n    for(int i=0;i<16;i+=2){p+=int(hash(s)*r)<<i;s+=1.;}\n    return float(p);\n}\n\n//AMP\n//  vec3 p( drive, pressure, volume)\nvec2 amp(vec2 i,vec3 p){\n    vec2 v=pow(abs(i*p.x),vec2(1./p.y));\n    return clamp(sign(i)*v,-1.,1.)*p.z;\n}\n\n//CHORD\n//  global int gchord ...hex tetrad chord pattern\nfloat chord(float n){ // n:place in gchord (0-3)\n    float c=0.;\n    if(n>2.)c+=float((gchord>>8)&15);\n    if(n>1.)c+=float((gchord>>4)&15);\n    if(n>0.)c+=float(gchord&15);\n    return c; // return:relative note number to add to root note\n}\n\n//ARPEGGIATOR\n//  vec3 p( pattern, step_length, pattern_steps)\n//    arp_gate :p.pattern ...1bit pattern 1-16 steps 0:off 1:on\n//    arp_chord:p.pattern ...2bit pattern 1-8 steps 0-3:note\nfloat arp_gate(float t,vec3 p){\n    float l=15.*p.y/bpm;\n    float g=float((int(p.x)>>int(mod(t/l,p.z)))&1);\n    return (g>0.)?mod(t,l):-1.; // return:gate time or note off (-1)\n}\nfloat arp_chord(float t,vec3 p){\n    return chord(float((int(p.x)>>int(floor(mod(t/(15.*p.y/bpm),p.z))*2.))&3));\n}\n\n//FREQUENCY FROM MIDI NOTE NUMBER\n//single note\nfloat freq(float n){\n    return pow(2.,(n-69.)/12.)*base*6.283;\n}\n//with tetrad chord\nvec4 freq4(float n){\n    vec4 r;\n    r.x=freq(n);\n    r.y=gchord>0?freq(n+chord(1.)):0.;\n    r.z=gchord>16?freq(n+chord(2.)):0.;\n    r.w=gchord>256?freq(n+chord(3.)):0.;\n    return r;\n}\n\n//SOUND GENERATORS\n//  sequence => note pattern => instrument => oscillator\n\n//OSC\nfloat osc_saw(float x,float v){return clamp(mod(x/6.283,1.)*2.-1.,-1.,1.)*v;}\nfloat osc_sin(float x,float v){return clamp(sin(x)*v,-1.,1.);}\nfloat osc_sqr(float x,float v){return clamp(sign(sin(x))*v,-1.,1.);}\nfloat osc_noise(float x,float v){x=floor(x*1e3/v)*1e-3;return fract(sin(x*1717.17)*1313.13)*2.-1.;}\nfloat osc_metal(float x,float v){return fract(sin(x*v*171.17)*313.13)*2.-1.;}\n\n//ENVELOPE\nconst vec4 env0=vec4(0.00,.2,0.60,1.50); //piano\nconst vec4 env1=vec4(0.10,.4,0.50,0.50); //woodwind\nconst vec4 env2=vec4(0.20,.6,0.50,0.50); //string\nconst vec4 env3=vec4(0.00,.2,0.90,1.50); //synth\nfloat env_d(float x,float d){return max(0.,1.-x/max(d,1e-4));}\nfloat env_ad(float x,float a,float d){return min(x/max(a,1e-4),max(0.,1.-(x-a)/max(d,1e-4)));}\nfloat env_adsr(float x,vec4 e,float g){return max(0.,min(1.,x/max(e.x,1e-4))-min(1.-e.z,max(x-e.x,0.)*(1.-e.z)/max(e.y,1e-4))-max(x-g,0.)*e.z/max(e.w,1e-4));}\n\n//PERCUSSION INSTRUMENTS (time)\nfloat bass_drum(float x){return osc_sin(x*freq(46./(1.+x*2.)),8.*env_d(x,.11));}\nfloat snare_drum(float x){return (osc_noise(x,.194)*env_d(x,.15)+osc_sin(x*freq(53./(1.+x*.2)),8.*env_d(x,.4)));}\nfloat hihat(float x,float d){return osc_metal(x,2.5)*env_d(x,d);}\n\n//MELODIC INSTRUMENTS (freq)\nfloat vibe(float f){return osc_sin(f+osc_sin(f*8.+osc_sin(f*.02,1.),.3),1.5);}\nfloat harpsi(float f){return osc_saw(f*4.+osc_sin(f*18.,.5),1.3);}\nfloat organ(float f){return osc_sin(f,1.3)+osc_sin(f*.5,1.)+osc_sin(f*2.,1.)+osc_sin(f*4.,.5);}\nfloat reed(float f){return osc_sin(f,1.)*osc_sqr(f*3.,1.);}\nfloat sawlead(float f){return osc_saw(f,1.)+osc_saw(f*2.01,1.);}\nfloat sqrlead(float f){return osc_sqr(f,.7)+osc_sqr(f*2.01,.7);}\nfloat synlead(float f){return osc_saw(f,1.)*osc_sqr(f*3.02,1.);}\n\n//MELODIC INSTRUMENTS (freq,time)\nfloat piano(float f,float x){return osc_sin(f+osc_sin(f,env_d(x,.5))+osc_sin(f*3.,env_d(x,2.)*.8),1.);}\nfloat epiano(float f,float x){return osc_sin(f+osc_sin(f*15.,.04)+osc_sin(f*.99,.4),1.);}\nfloat bass(float f,float x){return osc_sin(f*.5+osc_sin(f*4.,env_d(x,.06)*.5)+osc_sin(f,env_ad(x,.1,.2)*.4),2.)*env_d(x,.6);}\nfloat bell(float f,float x){return osc_sin(f+osc_sin(f*3.4,env_d(x,1.)*.2)+osc_sin(f*4.,.5),1.);}\nfloat guitar(float f,float x){return osc_sin(f+osc_sin(f*8.,env_d(x,.05)*.3)+osc_sin(f*5.,env_ad(x,.03,5.)*.3),2.);}\n\n//NOTE OPERATORS\nfloat bup(float x){return min(x*(bpm/30.)-1.,0.);}\nfloat bdwn(float x){return max(1.-x*(bpm/30.),0.);}\nfloat pral(float x){float y=20./bpm;return ((x>y/2.)&&(x<y))?2.:0.;}\nfloat mord(float x){float y=20./bpm;return ((x>y/2.)&&(x<y))?-2.:0.;}\nfloat tril(float x){return sign(sin(3.14+x*bpm*6.28/15.))+1.;}\n\n//NOTE PATTERNS\n//P( note length, num of notes) ...pattern init\n//T( position)                  ...set trigger (for percussion)\n//N( position, note)            ...set note (for melody)\n//NU( position, note)           ...set note with bend up\n//ND( position, note)           ...set note with bend down\n//NP( position, note)           ...set note with pral triller\n//NM( position, note)           ...set note with mordent\n//NT( position, note)           ...set note with trill\n//X( position, macro)           ...execute macro (CHORD_mM7 etc.)\n//X( position, code)            ...execute code (gchord=0x333; etc.)\n#define P(l,s) float x=1e3,y=15.*float(l)/bpm,z=0.,v=mod(t,y*float(s));\n#define T(s) if(v>float(s)*y){x=v-float(s)*y;}\n#define N(s,n) if(v>float(s)*y){x=v-float(s)*y;z=float(n);}\n#define NU(s,n) if(v>float(s)*y){x=v-float(s)*y;z=float(n)+bup(x);}\n#define ND(s,n) if(v>float(s)*y){x=v-float(s)*y;z=float(n)+bdwn(x);}\n#define NP(s,n) if(v>float(s)*y){x=v-float(s)*y;z=float(n)+pral(x);}\n#define NM(s,n) if(v>float(s)*y){x=v-float(s)*y;z=float(n)+mord(x);}\n#define NT(s,n) if(v>float(s)*y){x=v-float(s)*y;z=float(n)+tril(x);}\n#define X(s,n) if(v>float(s)*y){x=v-float(s)*y;n;}\n\n#define R -1e3\n#define C  60.\n#define Cs 61.\n#define Db 61.\n#define D  62.\n#define Ds 63.\n#define Eb 63.\n#define E  64.\n#define F  65.\n#define Fs 66.\n#define Gb 66.\n#define G  67.\n#define Gs 68.\n#define Ab 68.\n#define A  69.\n#define As 70.\n#define Bb 70.\n#define B  71.\n#define HI  12.+\n#define LO -12.+\n\n#define CHORD_3        gchord=0x484;\n#define CHORD_4        gchord=0x575;\n#define CHORD_5        gchord=0x757;\n#define CHORD_M        gchord=0x534;\n#define CHORD_on3      gchord=0x453;\n#define CHORD_on5      gchord=0x345;\n#define CHORD_sus4     gchord=0x525;\n#define CHORD_sus4on4  gchord=0x552;\n#define CHORD_sus4on5  gchord=0x255;\n#define CHORD_7        gchord=0x334;\n#define CHORD_7sus4    gchord=0x325;\n#define CHORD_7alt     gchord=0x424;\n#define CHORD_M7       gchord=0x434;\n#define CHORD_M7sus4   gchord=0x425;\n#define CHORD_m        gchord=0x543;\n#define CHORD_mon3     gchord=0x354;\n#define CHORD_mon5     gchord=0x435;\n#define CHORD_m7       gchord=0x343;\n#define CHORD_mM7      gchord=0x443;\n#define CHORD_add9     gchord=0x734;\n#define CHORD_madd9    gchord=0x743;\n#define CHORD_add9on5  gchord=0x552;\n\n#define DYN_ff gdyn=1.0;\n#define DYN_f  gdyn=0.9;\n#define DYN_mf gdyn=0.8;\n#define DYN_mp gdyn=0.7;\n#define DYN_p  gdyn=0.6;\n#define DYN_pp gdyn=0.5;\n\n#define ARP4_up 58596.\n#define ARP4_down 6939.\n#define ARP4_updown 18148.\n#define ARP4_downup 47387.\n#define ARP4_p1 18118.\n#define ARP4_p2 4656.\n\n#define ARP3_up 18724.\n#define ARP3_down 24966.\n#define ARP3_updown 25700.\n#define ARP3_downup 17990.\n#define ARP3_p1 4486.\n#define ARP3_p2 8480.\n\n//NOTE PATTERNS:percussion\nvec2 bd(float t,float p){\n    float g=arp_gate(t,vec3(p,1.,16.));\n    return g<0.?vec2(0):amp(vec2(.6*bass_drum(g*1.05),.6*bass_drum(g*.95)),vec3(1,2.2,1));\n}\nvec2 sd(float t,float p){\n    float g=arp_gate(t,vec3(p,1.,16.));\n    return g<0.?vec2(0):vec2(.4*snare_drum(g*.995),.4*snare_drum(g*1.005));\n}\nvec2 hh(float t,float p1,float p2){\n    float g=arp_gate(t,vec3(p1,1.,16.));\n    vec2 r=g<0.?vec2(0):vec2(.2)*hihat(g,.08);\n    g=arp_gate(t,vec3(p2,2.,8.));r+=g<0.?vec2(0):vec2(.2)*hihat(g,.3);\n    return r;\n}\n\n//NOTE PATTERNS:bass\nvec2 bs0(float t,float o){\n    P(2,1)\n    N(0,0)\n    z+=arp_chord(t,vec3(ARP4_p1,2.,6.));\n    float f=freq(z+o-12.)*x;\n    return z<0.?vec2(0):amp(vec2(bass(f+1.005,x),bass(f*.995,x)),vec3(gdyn,1.8,0.7));\n}\n\n//NOTE PATTERNS:piano\nvec2 pi(float x,float n){\n\tvec4 fl=freq4(n)*x,fr=fl*.995;fl*=1.005;\n    return vec2(\n        (piano(fl.x,x)+piano(fl.y,x)+piano(fl.z,x)+piano(fl.w,x))*env_adsr(x,env0,1.)*gdyn,\n        (piano(fr.x,x)+piano(fr.y,x)+piano(fr.z,x)+piano(fr.w,x))*env_adsr(x,env0,1.)*gdyn);\n}\nvec2 pi0(float t,float o){\n    P(4,16)\n    X(0,CHORD_madd9)\n    N(0,E)\n    X(4,CHORD_mon5)\n    N(4,LO A)\n    X(8,CHORD_m)\n    N(8,C)\n    X(12,CHORD_m7)\n    N(12,LO B)\n    return z<0.?vec2(0):pi(x,z+o)*.3;\n}\n\n//NOTE PATTERNS:guitar\nvec2 gt(float x,float n){\n    n+=sin(x*15.)*min(max(0.,x-.4),.05);\n\tvec4 fl=freq4(n)*x,fr=fl*1.005;fl*=.995;\n    return amp(vec2(\n        (guitar(fl.x,x)+guitar(fl.z,x)+guitar(fl.w,x))*env_adsr(x,env0,1.),\n        (guitar(fr.x,x)+guitar(fr.z,x)+guitar(fr.w,x))*env_adsr(x,env0,1.))*gdyn,\n        vec3(1.8,1.,1.));\n}\nvec2 gt0(float t,float o){\n    P(1,32)\n    X(0,CHORD_madd9)\n    N(0,E) N(1,R)\n    NU(4,E)\n    X(7,CHORD_m)\n    ND(7,D)\n    N(16,E) N(17,R)\n    NP(20,E)      \n    N(23,D) N(24,R)\n    N(26,D) N(27,R)\n    N(29,D)\n    return z<0.?vec2(0):gt(x,z+o)*.3;\n}\n\n//NOTE PATTERNS:synth lead\nvec2 ld(float x,float n){\n\tfloat fl=freq(n)*x,fr=fl*.995;fl*=1.005;\n    return vec2(synlead(fl),synlead(fr))*env_adsr(x,env3,1.)*gdyn;     \n}\nvec2 ld0(float t,float o){\n    P(1,16)\n    N(0,0)\n    z+=arp_chord(x,vec3(garp,2.,8.));\n    z*=ceil(arp_gate(x,vec3(55253.,1.,16.)));\n    return z<0.?vec2(0):ld(x,z+o)*.4;\n}\n\n//SEQUENCE\n#define TRACK t=time;v=vec2(0);\n#define   SEGNO(block,blocks)        if(t>float(block)*l){t=mod(t-float(block)*l,float(blocks)*l);\n#define     REP(block,blocks,repend) if((t>float(block)*l)&&(t<=float(block)*l+float(repend)*l)){t=mod(t-float(block)*l,float(blocks)*l);\n#define       SEQ(block,patterns)    if(t>float(block)*l){v=patterns;v*=d;}\n#define     NEXT                     }\n#define   DS                         }\n#define END                          o+=v;\nvoid sequence(float time,float l,float d,inout vec2 o){vec2 v=vec2(0);float t=time;\n\n    DYN_mf\n\n    TRACK //1 rhythm bd & hh\n      SEQ(0,bd(t,4889.)+hh(t,13107.,170.))      \n      SEGNO(1,8)\n        REP(0,4,7)\n          SEQ(0,bd(t,4369.)+hh(t,13107.,170.))\n          SEQ(3,bd(t,4889.)+hh(t,13107.,170.))\n        NEXT\n        SEQ(7,bd(t,56091.)+hh(t,13107.,170.))\n      DS\n    END\n\n    TRACK //2 rhythm sd\n      SEQ(0,sd(t,41616.))\n      SEGNO(1,8)\n        SEQ(0,sd(t,4240.))\n        SEQ(3,sd(t,41616.))\n        SEQ(4,sd(t,4240.))\n        SEQ(7,sd(t,63120.))\n      DS\n    END\n\n    TRACK //3 bass\n      DYN_f\n      CHORD_m\n      SEQ(0.5,bs0(t,D));\n      SEGNO(1,4)\n        SEQ(0,bs0(t,E));\n        SEQ(1,bs0(t,D));\n        SEQ(2,bs0(t,C));\n        SEQ(3,bs0(t,D));\n      DS\n    END\n\n    TRACK //4 chord\n      DYN_mf\n      SEGNO(1,8)\n        SEQ(0,pi0(t,0.));\n      DS\n    END\n\n    TRACK //5 guitar\n      DYN_mp\n      SEGNO(1,8)\n        SEQ(0,gt0(t,0.));\n        SEQ(2,gt0(t,1.));\n        SEQ(3,gt0(t,0.));\n        SEQ(6,gt0(t,-2.));\n        SEQ(7,gt0(t,0.));\n      DS\n    END\n\n    TRACK //6 synth lead\n      DYN_f\n      SEGNO(1,4)\n        garp=pgen(floor(gtime/(l*.25)),3.);\n        CHORD_m\n        SEQ(0,ld0(t,E));\n        CHORD_mon5\n        SEQ(1,ld0(t,LO A));\n        CHORD_m\n        SEQ(2,ld0(t,C));\n        CHORD_mon5\n        SEQ(3,ld0(t,LO A));\n      DS\n    END\n\n}\n\n//MASTER SECTION\n#define MASTER_DRIVE    0.3\n#define MASTER_PRESSURE 1.1\n#define DELAY_REPEAT    6\n#define DELAY_WET       0.2\n#define DELAY_FEEDBACK  0.85\n#define DELAY_TIME      0.05\nvec2 mainSound( in int samp,float time){\n    float l=steps/bpm,vol=1.,d=DELAY_WET,r=DELAY_TIME;vec2 o=vec2(0),v=vec2(0);\n    if(time>170.){vol=(180.-min(time,180.))/10.;}\n    time-=start*60./bpm;if(time<0.)return o;\n    gtime=time;\n    sequence(time,l,1.,o);\n    for(int i=0;i<DELAY_REPEAT;i++){\n        time-=r;gtime-=r;\n        sequence(time,l,d,o);\n        d*=DELAY_FEEDBACK;\n        r+=DELAY_TIME;\n    }\n    return amp(o,vec3(MASTER_DRIVE,MASTER_PRESSURE,vol));\n}\n",
                "description": "",
                "inputs": [],
                "name": "Sound",
                "outputs": [],
                "type": "sound"
            }
        ],
        "ver": "0.1"
    }
}