{
    "Shader": {
        "info": {
            "date": "1527263116",
            "description": "Another glsl exercise.\nNot really sure what I'm trying to do here, just playing around",
            "flags": 0,
            "hasliked": 0,
            "id": "XddfDs",
            "likes": 4,
            "name": "Circle Hipnosis",
            "published": 3,
            "tags": [
                "circles"
            ],
            "usePreview": 0,
            "username": "lowww",
            "viewed": 292
        },
        "renderpass": [
            {
                "code": "#define FREQUENCY 20.0\n#define SPEED 2.0\n#define OFFSET 0.5\n\nfloat drawCircle(vec2 uv, vec2 offset) {\n    float ratio = iResolution.x / iResolution.y;\n\tfloat d = length(uv - vec2(0.5 * ratio, 0.5) - offset);\n    float c = cos(d * FREQUENCY - iTime * SPEED);\n\tc *= 500.0;\n\treturn c;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord/iResolution.y;\n\t\n    float c = 0.0;\n    \n    // \"original\" circle\n    c += drawCircle(uv, vec2(0.0));\n    \n    // horizontal displacement\n    float h = cos(iTime);\n\tc += mix(c, drawCircle(uv, vec2(-OFFSET, 0.0)), h);\n    c += mix(c, drawCircle(uv, vec2(OFFSET, 0.0)), h);\n\t\n    // vertical displacement\n    float v = sin(iTime);\n    c += mix(c, drawCircle(uv, vec2(0.0, -OFFSET)), v);\n    c += mix(c, drawCircle(uv, vec2(0.0, OFFSET)), v);\n    \n    // antialias as suggested by @FabriceNeyret2\n    c = c / fwidth(c);\n\n    fragColor = vec4(c);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}