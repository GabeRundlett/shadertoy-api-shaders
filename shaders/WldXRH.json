{
    "Shader": {
        "info": {
            "date": "1580400667",
            "description": "for test",
            "flags": 0,
            "hasliked": 0,
            "id": "WldXRH",
            "likes": 6,
            "name": "Truchet Tiles Test",
            "published": 3,
            "tags": [
                "cineshader"
            ],
            "usePreview": 0,
            "username": "tonywu",
            "viewed": 17109
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265358979323846\n\n\nvec2 rotate2D (vec2 _st, float _angle) {\n    _st -= 0.5;\n    _st =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _st;\n    _st += 0.5;\n    return _st;\n}\n\nvec2 tile (vec2 _st, float _zoom) {\n    _st *= _zoom;\n    return fract(_st);\n}\n\nvec2 rotateTilePattern(vec2 _st){\n\n    //  Scale the coordinate system by 2x2\n    _st *= 2.0;\n\n    //  Give each cell an index number\n    //  according to its position\n    float index = 0.0;\n    index += step(1., mod(_st.x,2.0));\n    index += step(1., mod(_st.y,2.0))*2.0;\n\n    //      |\n    //  2   |   3\n    //      |\n    //--------------\n    //      |\n    //  0   |   1\n    //      |\n\n    // Make each cell between 0.0 - 1.0\n    _st = fract(_st);\n\n    // Rotate each cell according to the index\n    if(index == 1.0){\n        //  Rotate cell 1 by 90 degrees\n        _st = rotate2D(_st,PI*0.5);\n    } else if(index == 2.0){\n        //  Rotate cell 2 by -90 degrees\n        _st = rotate2D(_st,PI*-0.5);\n    } else if(index == 3.0){\n        //  Rotate cell 3 by 180 degrees\n        _st = rotate2D(_st,PI);\n    }\n\n    return _st;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n  \n    uv = tile(uv,6.0);\n    uv = rotateTilePattern(uv);\n\n    // Make more interesting combinations\n    //uv *= tile(uv,2.0);\n    //uv *= rotate2D(uv,-PI*sin(iTime));\n    //uv = rotateTilePattern(uv*2.);\n    uv *= rotate2D(uv,PI*iTime*0.25);\n\n    // step(st.x,st.y) just makes a b&w triangles\n    // but you can use whatever design you want.\n    float f = step(uv.x,uv.y);\n    fragColor = vec4(vec3(f*.5,f*cos(iTime), f*sin(iTime)),1.0);\n    float gamma = 2.2;\n    fragColor.rgb = pow(fragColor.rgb, vec3(1.0/gamma));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}