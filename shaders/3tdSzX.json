{
    "Shader": {
        "info": {
            "date": "1581476136",
            "description": "\"Do you like Sushi?\"\n\nLittle variation of https://www.shadertoy.com/view/tttXRB",
            "flags": 32,
            "hasliked": 0,
            "id": "3tdSzX",
            "likes": 15,
            "name": "The Vandamme Wave",
            "published": 3,
            "tags": [
                "2d",
                "funny",
                "vandamme"
            ],
            "usePreview": 0,
            "username": "xjorma",
            "viewed": 480
        },
        "renderpass": [
            {
                "code": "// Created by David Gallardo - xjorma/2020\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n\n\n#define TAU radians(360.)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 \ttex = texture(iChannel0, fragCoord / iResolution.xy);\n\tvec2\tp = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    float\tangle = atan(p.y, p.x);\n    float \tl = length(p) * 20.;\n    float\tcircleId = floor(l);\n    float\tmodCircleId = mod(circleId, 2.);\n    float \td = tex.x;\n    float speed = mix(0.1, -0.1, modCircleId);\n    l+= sin((angle - iTime * speed) * circleId * 5.) * 0.3 * d;\n    l = fract(l) * 2.;\n    float\tt = min(l, 2. - l);\n    t = smoothstep((100. + 100. * tex.y) / iResolution.y, 0., abs(t-1.)); \n    fragColor = vec4(vec3(pow(t,1./2.2)),1.);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 259,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer02.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "const\tvec3\tck = vec3(13., 163., 38.) / 255.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 c = texture(iChannel0, fragCoord / iResolution.xy).xyz;\n    vec3 d = c - ck;\n    float m = smoothstep(0., 0.01, dot(d, d));    \n    fragColor = vec4(vec3(m,dot(c, vec3(1)) * m, 0.),1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 36,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 acc = vec4(0);\n    for(int i = -10; i <= 10; i ++)\n    {\n\t\t acc += texture(iChannel0, fragCoord / iResolution.xy + vec2(float(i), 0.) / iResolution.x);\n    }\n    fragColor = acc / float(10 * 2 + 1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 acc = vec4(0);\n    for(int i = -10; i <= 10; i ++)\n    {\n\t\t acc += texture(iChannel0, fragCoord / iResolution.xy + vec2(0., float(i)) / iResolution.y);\n    }\n    fragColor = acc / float(10 * 2 + 1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer C",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 259
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}