{
    "Shader": {
        "info": {
            "date": "1683529715",
            "description": "( not at all what I was looking for, but still fun :-) ).\nsome worms are drawing mazes under bark on in the silt above marine stones.\nThese correspond to very simple exploration rules. Here is an artificial example.\nChange parameters, try fullscreen.",
            "flags": 32,
            "hasliked": 0,
            "id": "dlyGzz",
            "likes": 28,
            "name": "maze worms / graffitis 6",
            "published": 3,
            "tags": [
                "automata",
                "worms",
                "maze",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 284
        },
        "renderpass": [
            {
                "code": "// all maze worms: https://www.shadertoy.com/results?query=maze+worms\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = T(U);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "#define CS(a)  vec2(cos(a),sin(a))\n//#define rnd(x) ( 2.* fract(1456.68*sin(1e4*(x+fract(iDate.w)))) -1.) // NB: mod(t,1.) for less packed pattern\n#define rnd(x) ( 2.* fract(1456.68*sin(dot(vec2(x,fract(iDate.w)),R+71.))) -1.) // NB: mod(t,1.) for less packed pattern\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    float r = 1.5, N = min(500.,R.x); // width , number of worms\n    \n    //if (T(R).x==0.) { U = abs(U/R*2.-1.); O  = vec4(max(U.x,U.y)>1.-r/R.y); O.w=0.; return; }\n\n    if (U.y==.5 && T(U).w==0.) {                           // initialize heads state: P, a, t\n        if (iFrame<1)\n            O = vec4(vec2( R.x/2. + R.x/4.* rnd(U.x),0) , 1.57+.3*rnd(U.x+.2), 1);\n        else {\n            vec4 P = T(vec2(.5+(.5+.5*rnd(U.x+.1))*N,.5)); // parallel to an existing one\n            if (P.w < 3.) return;\n            float a = P.z;\n            O = vec4( P.xy+(r+2.)*CS(a+1.57*sign(rnd(U.x))), a, 1);\n           // O = vec4( R/2. + R/2.4* vec2(rnd(U.x),rnd(U.x+.1)) , 3.14 * rnd(U.x+.2), 1);\n         }\n        if (T(O.xy).w>0.) O.w = 0.;                        // invalid start position\n        return;\n    }\n    \n    O = T(U);\n//  vec2 M = iMouse.xy; if (length(M)>0.) O += smoothstep(r,0., length(M-U));\n    \n    for (float x=.5; x<N; x++) {                           // draw heads\n        vec4 P = T(vec2(x,.5));                            // head state: P, a, t\n        if (P.w>0.) O += smoothstep(r,0., length(P.xy-U))  // draw head if active\n                         * .2*vec4(.01*P.w,1,0,1);          // coloring scheme\n                     // *.5*(.5+.5*sin(6.3*x/N+vec4(0,-2.1,2.1,1)));   // coloring scheme\n    }\n    \n    if (U.y==.5) {                                         // head programms: worm strategy\n        vec4 P = T(U);                                     // head state: P, a, t\n        if (P.w>0.) {                                      // if active\n            vec2 A = abs(P.xy-R/2.)-R/2.; if ( max(A.x,A.y) > 0. ) { O.w = 0.; return; }  // out: stop head\n            float a = P.z;\n            if ( T(P.xy+(r+2.)*CS(a)).w > 0. ) { O.w = 0.; return; }  // hit: stop head\n            if ( T(P.xy+(r+1.)*CS(a)).w > 0. ) { O.w = 0.; return; }  // hit: stop head\n            for (float x=U.x+1.; x<N; x++) \n                if( length(P.xy-T(vec2(x,.5)).xy)<1.)  { O.w = 0.; return; }  // hit: stop head\n                \n            a += .08*2.*rnd(U.x);// .08*rnd(P.x) + .02;\n            O = vec4(P.xy+1.*CS(a),mod(a,6.2832),P.w+1.);     // move head\n        }\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define T(u) texelFetch(iChannel0, ivec2(u), 0)",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}