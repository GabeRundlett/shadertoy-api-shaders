{
    "Shader": {
        "info": {
            "date": "1503734315",
            "description": "getting cozy w/ shadertoy. crudely simulating analog video distortion (specifically, what happens when you add an audio signal's voltage to an existing video signal's voltage).",
            "flags": 64,
            "hasliked": 0,
            "id": "Xtlyz4",
            "likes": 10,
            "name": "Music Distortion",
            "published": 3,
            "tags": [
                "glitch"
            ],
            "usePreview": 0,
            "username": "ompuco",
            "viewed": 992
        },
        "renderpass": [
            {
                "code": "//YIQ/RGB shit\n\tvec3 rgb2yiq(vec3 c){   \n\t\t\t\t\treturn vec3(\n\t\t\t\t\t\t(0.2989*c.x + 0.5959*c.y + 0.2115*c.z),\n\t\t\t\t\t\t(0.5870*c.x - 0.2744*c.y - 0.5229*c.z),\n\t\t\t\t\t\t(0.1140*c.x - 0.3216*c.y + 0.3114*c.z)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\tvec3 yiq2rgb(vec3 c){\t\t\t\t\n\t\t\t\t\treturn vec3(\n\t\t\t\t\t\t(\t 1.0*c.x +\t  1.0*c.y + \t1.0*c.z),\n\t\t\t\t\t\t( 0.956*c.x - 0.2720*c.y - 1.1060*c.z),\n\t\t\t\t\t\t(0.6210*c.x - 0.6474*c.y + 1.7046*c.z)\n\t\t\t\t\t);\n\t\t\t\t}\n        \n        vec2 Circle(float Start, float Points, float Point) \n{\n\tfloat Rad = (3.141592 * 2.0 * (1.0 / Points)) * (Point + Start);\n\t//return vec2(sin(Rad), cos(Rad));\n\t\treturn vec2(-(.3+Rad), cos(Rad));\n\n}\n\nvec3 Blur(vec2 uv, float f, float d, float n){\n    uv.y*=1.0-.01*floor(n*2.50);\n  float t = (sin(iTime*5.0+uv.y*5.0))/10.0;\n    float b = 1.0;\n   t=sin(iTime*5.0+f)/10.0;\n    t=0.0;\n    vec2 PixelOffset=vec2(d+.0005*t,0);\n    \n    float Start = 2.0 / 14.0;\n    vec2 Scale = 0.66 * 4.0 * 2.0 * PixelOffset.xy;\n    \n    vec3 N0 = texture(iChannel0, uv + Circle(Start, 14.0, 0.0) * Scale).rgb;\n    vec3 N1 = texture(iChannel0, uv + Circle(Start, 14.0, 1.0) * Scale).rgb;\n    vec3 N2 = texture(iChannel0, uv + Circle(Start, 14.0, 2.0) * Scale).rgb;\n    vec3 N3 = texture(iChannel0, uv + Circle(Start, 14.0, 3.0) * Scale).rgb;\n    vec3 N4 = texture(iChannel0, uv + Circle(Start, 14.0, 4.0) * Scale).rgb;\n    vec3 N5 = texture(iChannel0, uv + Circle(Start, 14.0, 5.0) * Scale).rgb;\n    vec3 N6 = texture(iChannel0, uv + Circle(Start, 14.0, 6.0) * Scale).rgb;\n    vec3 N7 = texture(iChannel0, uv + Circle(Start, 14.0, 7.0) * Scale).rgb;\n    vec3 N8 = texture(iChannel0, uv + Circle(Start, 14.0, 8.0) * Scale).rgb;\n    vec3 N9 = texture(iChannel0, uv + Circle(Start, 14.0, 9.0) * Scale).rgb;\n    vec3 N10 = texture(iChannel0, uv + Circle(Start, 14.0, 10.0) * Scale).rgb;\n    vec3 N11 = texture(iChannel0, uv + Circle(Start, 14.0, 11.0) * Scale).rgb;\n    vec3 N12 = texture(iChannel0, uv + Circle(Start, 14.0, 12.0) * Scale).rgb;\n    vec3 N13 = texture(iChannel0, uv + Circle(Start, 14.0, 13.0) * Scale).rgb;\n    vec3 N14 = texture(iChannel0, uv).rgb;\n    \n    vec4 clr = texture(iChannel0, uv);\n    float W = 1.0 / 15.0;\n    \n    clr.rgb= \n\t\t(N0 * W) +\n\t\t(N1 * W) +\n\t\t(N2 * W) +\n\t\t(N3 * W) +\n\t\t(N4 * W) +\n\t\t(N5 * W) +\n\t\t(N6 * W) +\n\t\t(N7 * W) +\n\t\t(N8 * W) +\n\t\t(N9 * W) +\n\t\t(N10 * W) +\n\t\t(N11 * W) +\n\t\t(N12 * W) +\n\t\t(N13 * W) +\n    (N14 * W);\n    \n   \n    return  vec3(clr.xyz)*b;\n    }\n\n\n        \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   // float d = (iResolution.x/500.0)/2.0-.1*iMouse.x/50.0;\n    float d = .1*iMouse.x/50.0;\n    d=.1-round(mod(iTime/3.0,1.0))*.1;\n    \tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n\n    float s = (texture(iChannel1,fragCoord).r);// - texture(iChannel1,vec2(0.01+uv.y/1000.0,1.0)).r)*2.0;\n       \n    \n    float ff = (texture(iChannel1,vec2(.0,1.0)).r);// - texture(iChannel1,vec2(0.01+uv.y/1000.0,1.0)).r)*2.0;\n\n        \n            float e = min(.30,pow(max(0.0,cos(uv.y*4.0+.3)-.75)*(s+0.5)*1.0,3.0))*25.0;\n     s-=pow(texture(iChannel1,vec2(0.01+(uv.y*32.0)/32.0,1.0)).r,1.0);\nuv.x+=e*abs(s*3.0);\n    float r = texture(iChannel2,vec2(mod(iTime*10.0,mod(iTime*10.0,256.0)*(1.0/256.0)),0.0)).r*(2.0*s);\n    uv.x-=r*pow(min(.003,(uv.y-.15))*6.0,2.0);\n    \n    d=.1+sin(s);\n    float c = .002*d;\n\tvec2 uvo = uv;\n   // uv.x+=.1*d;\n    fragColor.xyz =Blur(uv,0.0,c,ff);\n    float y = rgb2yiq(fragColor.xyz).r;\n    \n    \n    \n   uv.x+=.01*d;\n    c*=2.0;\n    fragColor.xyz =Blur(uv,.333,c,ff);\n    // texture(iChannel0, uv);\n    float i = rgb2yiq(fragColor.xyz).g;\n    \n    \n    uv.x+=.005*d;\n    \n    c*=1.50;\n    fragColor.xyz =Blur(uv,.666,c,ff);\n    float q = rgb2yiq(fragColor.xyz).b;\n    \n   \n    \n    fragColor.xyz=yiq2rgb(vec3(y,i,q))-pow(s+e*2.0,3.0);\n    fragColor.xyz*=smoothstep(1.0,.999,uv.x-.1);\n    \n   // fragColor.xyz-=min(0.10,pow(uv.x,3.0))*d;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 2,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "musicstream",
                        "id": 11799,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/welcome2thebonezone/bonezonefixmix"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}