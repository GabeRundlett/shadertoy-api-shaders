{
    "Shader": {
        "info": {
            "date": "1671931382",
            "description": "its not working as expected :O",
            "flags": 0,
            "hasliked": 0,
            "id": "mlX3zB",
            "likes": 2,
            "name": "traces without buffer",
            "published": 3,
            "tags": [
                "traces"
            ],
            "usePreview": 0,
            "username": "jonasfrey",
            "viewed": 187
        },
        "renderpass": [
            {
                "code": "vec4 f_o_col(vec2 o_fc_nor_offset, float n_t){\n    vec2 o_p = vec2(\n        sin(n_t)*0.24,\n        cos(n_t)*0.24\n    );\n    float n_dist = length(o_fc_nor_offset-o_p);\n    n_dist= smoothstep(0.1, 0.2, n_dist);\n    vec4 o_col_for_time_it = vec4(n_dist);\n    return o_col_for_time_it;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 o_fc_nor = fragCoord.xy / iResolution.y;\n    float n_ratio_x_to_y = iResolution.x / iResolution.y;\n    vec2 o_fc_nor_offset = o_fc_nor-vec2(n_ratio_x_to_y/2., 0.5);\n    vec2 o_p = vec2(0.,0.);\n    float n_time_its = 10.;\n    float n_dist = 0.;\n    vec4 o_col_now = f_o_col(o_fc_nor_offset, iTime);\n    for(float n_time_it = 1.; n_time_it<n_time_its; n_time_it+=1.){\n        float n_time_it_nor = (1./n_time_its)*n_time_it;\n        vec4 o_col_for_time_it = f_o_col(o_fc_nor_offset, iTime-n_time_it_nor*4.); \n        vec4 o_col_mix = mix(o_col_now, o_col_for_time_it, (n_time_it_nor*0.2));\n        o_col_now = o_col_now - (1.-o_col_for_time_it*(1.+1.-n_time_it_nor));\n    }\n    fragColor = vec4(o_col_now);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}