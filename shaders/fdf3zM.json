{
    "Shader": {
        "info": {
            "date": "1615652782",
            "description": "Another try to have a continuous hatchign with dots / checkers",
            "flags": 0,
            "hasliked": 0,
            "id": "fdf3zM",
            "likes": 8,
            "name": "points hatching2",
            "published": 3,
            "tags": [
                "video",
                "postprocess",
                "checker",
                "dots",
                "hatching"
            ],
            "usePreview": 0,
            "username": "ManuManu",
            "viewed": 504
        },
        "renderpass": [
            {
                "code": "vec3 W = vec3(0.2125, 0.7154, 0.0721);\n\n\n//#define TEST\n\nfloat checker(vec2 uv, float scale, float angle)\n{\n    float s = sin( angle ), c = cos( angle );\n    vec2 uv2 = vec2( c * uv.x - s * uv.y, s * uv.x + c * uv.y ) * scale;\n\treturn sin( uv2.x ) * sin( uv2.y );\n}\n\nfloat processLum( vec2 uv, float lum )\n{\n    float angle = 1.;\n    vec2 center = vec2(.5,.5);\n    float scale = 350.;\n\n    float dots = checker(uv, scale, angle);\n    float intens = 5.;\n    float intens2 = ( intens - 1.) * .5;\n    return lum * intens - intens2 * ( 1. - dots);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n#ifdef TEST\n    vec3 col = vec3(uv.x );\n#else\n    vec3 col = texture( iChannel0, uv ).xyz;\n#endif\n    float lum = dot(col, W);\n    float color = processLum( uv, lum );\n\n    // add a blueish style for ink like :\n    color = clamp(color, 0.,1.);\n    vec3 outputColor = mix( vec3( 0.,.2,.3), vec3(1.,1.,1.), color);\n\n#ifdef TEST\n    if (uv.y > .7 )\n        outputColor = col;        \n#endif\n    fragColor = vec4(vec3(outputColor),1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 12,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}