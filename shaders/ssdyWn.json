{
    "Shader": {
        "info": {
            "date": "1653320281",
            "description": "2d corner wang tiles. 16 states.",
            "flags": 0,
            "hasliked": 0,
            "id": "ssdyWn",
            "likes": 6,
            "name": "Wang corner tiling",
            "published": 3,
            "tags": [
                "2d",
                "infinite",
                "tiles",
                "wang",
                "corner"
            ],
            "usePreview": 0,
            "username": "me_123",
            "viewed": 261
        },
        "renderpass": [
            {
                "code": "const bool debug = false;\n\nfloat aa = 40.;\nconst vec3 color0 = vec3(0.25, 0.45, 1.0)*0.75;\nconst vec3 color1 = vec3(0.25, 0.8, 0.25);\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\nvec4 s0(in vec2 p) {\n    vec3 color = color0;\n    return vec4(color, 1.0);\n}\nvec4 s1(in vec2 p) {\n    float d = abs(length(p-0.5)-0.5)-0.1;\n    vec3 color = mix(vec3(0), mix(vec3(0.6, 0.3, 0.0), vec3(length(p-0.5)-0.5<0.0?color1:color0), clamp(d*aa, 0.0, 1.0)), clamp((abs(d)-0.025)*aa, 0.0, 1.0));\n    return vec4(color, d);\n}\nvec4 s2(in vec2 p) {\n    return s1(vec2(p.x, -p.y));\n}\nvec4 s3(in vec2 p) {\n    float d = abs(p.x)-0.1;\n    vec3 color = mix(vec3(0),mix(vec3(0.6,0.3,0.0),p.x>0.0?color1:color0,clamp(d*aa,0.0,1.0)),clamp((abs(d)-0.025)*aa,0.0,1.0));\n    return vec4(color, d);\n}\nvec4 s4(in vec2 p) {\n    return s1(vec2(-p.x, -p.y));\n}\nvec4 s10(in vec2 p) {\n    float d = abs(p.y)-0.1;\n    float d1 = abs(p.x)-0.1;\n    bool g = p.x<0.0 && p.y<0.0 || p.x > 0. && p.y > 0.0;\n    vec3 c = g?color0:color1;\n    vec3 color = mix(vec3(0), mix(vec3(0.6, 0.3, 0.0), c, clamp(d*aa, 0.0, 1.0)), clamp((abs(d)-0.025)*aa, 0.0, 1.0));\n    color = mix(vec3(0), color, clamp(length(p*vec2(0.6, 1.0))*4., 0.0, 1.0));\n    color = mix(vec3(0), mix(vec3(0.6, 0.3, 0.0), color, clamp(d1*aa, 0.0, 1.0)), clamp((abs(d1)-0.025)*aa, 0.0, 1.0));\n    return vec4(color, min(d, d1));\n}\nvec4 s6(in vec2 p) {\n    return s3(vec2(-p.y, p.x));\n}\nvec4 s8(in vec2 p) {\n    return s1(vec2(-p.x, p.y));\n}\nvec4 s5(in vec2 p) {\n    float d = abs(p.x)-0.1;\n    float d1 = abs(p.y)-0.1;\n    bool g = !(p.x<0.0 && p.y<0.0 || p.x > 0. && p.y > 0.0);\n    vec3 c = g?color0:color1;\n    vec3 color = mix(vec3(0), mix(vec3(0.6, 0.3, 0.0), c, clamp(d*aa, 0.0, 1.0)), clamp((abs(d)-0.025)*aa, 0.0, 1.0));\n    color = mix(vec3(0), color, clamp(length(p*vec2(0.6, 1.0))*4., 0.0, 1.0));\n    color = mix(vec3(0), mix(vec3(0.6, 0.3, 0.0), color, clamp(d1*aa, 0.0, 1.0)), clamp((abs(d1)-0.025)*aa, 0.0, 1.0));\n    return vec4(color, min(d, d1));\n}\nvec4 s14(in vec2 p) {\n    float d = abs(length(p-0.5)-0.5)-0.1;\n    vec3 color = mix(vec3(0), mix(vec3(0.6, 0.3, 0.0), vec3(length(p-0.5)-0.5<0.0?color0:color1), clamp(d*aa, 0.0, 1.0)), clamp((abs(d)-0.025)*aa, 0.0, 1.0));\n    return vec4(color, d);\n}\nvec4 s7(in vec2 p) {\n    return s14(vec2(-p.x, p.y));\n}\nvec4 s11(in vec2 p) {\n    return s14(vec2(-p.x, -p.y));\n}\nvec4 s9(in vec2 p) {\n    return s6(vec2(p.x, -p.y));\n}\nvec4 s12(in vec2 p) {\n    return s3(vec2(-p.x, p.y));\n}\nvec4 s13(in vec2 p) {\n    return s14(vec2(-p.y, p.x));\n}\nvec4 s15(in vec2 p) {\n    return vec4(color1, 1.0);\n}\nvec4 bits(in vec2 p, in int state) {\n    float c = 0.0;\n    if(p.x>0.0){\n        if (p.y>0.0)c=float(state&1);\n        if (p.y<0.0)c=float(state&2);\n    }\n    if (p.x<0.0){\n        if (p.y<0.0)c=float(state&4);\n        if (p.y>0.0)c=float(state&8);\n    }\n    return vec4(c>0.0?float(state)/15.:0.0);\n}\nvec4 state(in vec2 p, in int s) {\n    if(s==0)return s0(p);\n    if(s==1)return s1(p);\n    if(s==2)return s2(p);\n    if(s==3)return s3(p);\n    if(s==4)return s4(p);\n    if(s==5)return s5(p);\n    if(s==6)return s6(p);\n    if(s==7)return s7(p);\n    if(s==8)return s8(p);\n    if(s==9)return s9(p);\n    if(s==10)return s10(p);\n    if(s==11)return s11(p);\n    if(s==12)return s12(p);\n    if(s==13)return s13(p);\n    if(s==14)return s14(p);\n    if(s==15)return s15(p);\n}\nfloat hash21(vec2 p){return fract(sin(dot(p*0.001,vec2(27.609,57.583)))*43758.5453);}\nfloat noise(in vec2 p) {\n    vec2 f = floor(p);\n    vec2 fr = fract(p);\n    return mix(mix(hash21(f), hash21(f+vec2(1, 0)), fr.x),mix(hash21(f+vec2(0, 1)), hash21(f+vec2(1, 1)), fr.x), fr.y);\n}\nint random(in ivec2 p) {\n    int r = int(hash21(vec2(p))*16.);\n    return r;\n}\nint get(in ivec2 p) {\n    int l = random(p+ivec2(1, 0));\n    int r = random(p+ivec2(-1, 0));\n    int s = int((l&8)>0)<<0|int((r&1)>0)<<3|int((r&2)>0)<<2|int((l&4)>0)<<1;\n    return s;\n}\n\nint get1(in ivec2 p) {\n    int l = random(p+ivec2(0, 1));\n    int r = random(p+ivec2(0, -1));\n    int s = int((r&1) > 0)<<1|int((r&8) > 0)<<2|int((l&2) > 0)<<0|int((l&4) > 0)<<3;\n    return s;\n}\nint get3(in ivec2 p) {\n    return int((random(p+ivec2(1, 1))&4) > 0)<<0|int((random(p+ivec2(1, -1))&8) > 0)<<1|int((random(p+ivec2(-1, -1))&1) > 0)<<2|int((random(p+ivec2(-1, 1))&2)>0)<<3;\n}\n\nvec4 sdf(in vec2 p) {\n    ivec2 id = ivec2(floor(p));\n    p = fract(p)-0.5;\n    vec4 s = vec4(0);\n    if (!debug) {\n        if((id.x%2&id.y%2)==1)s=state(p,random(id));\n        if(((id.x+1)%2&(id.y)%2)==1)s=state(p,get(id));\n        if(((id.x)%2&(id .y+1)%2)==1)s=state(p,get1(id));\n        if(((id.x+1)%2&(id.y+1)%2)==1)s=state(p,get3(id));\n    } else {\n        if((id.x%2&id.y%2)==1)s=bits(p,random(id))*vec4(0,1,0,0);\n        if(((id.x+1)%2&(id.y)%2)==1)s=bits(p,get(id))*vec4(1,0,0,0);\n        if(((id.x)%2&(id .y+1)%2)==1)s=bits(p,get1(id))*vec4(0,0,1,0);\n        if(((id.x+1)%2&(id.y+1)%2)==1)s=bits(p,get3(id))*vec4(1,1,0,0);\n        s.xyz = mix(vec3(1), s.xyz, clamp(aa*(min(abs(p.x+0.5), abs(p.y+0.5))-0.05), 0.0, 1.0));\n    }\n        \n    return s;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    aa = iResolution.y*0.15;\n    vec2 uv = (fragCoord.xy/iResolution.xy)-0.5;\n    uv.x += iTime*0.1;\n    uv.y += iTime*0.05;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= 10.;\n    fragColor = vec4(sdf(uv));\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}