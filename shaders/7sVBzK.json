{
    "Shader": {
        "info": {
            "date": "1658517587",
            "description": "Mint your own iteration of this endless video synthesis on fx(hash):\n\nhttps://www.fxhash.xyz/generative/slug/the-mathematics-of-perception\n",
            "flags": 0,
            "hasliked": 0,
            "id": "7sVBzK",
            "likes": 32,
            "name": "The Mathematics of Perception",
            "published": 3,
            "tags": [
                "grid",
                "chromatic",
                "aberration",
                "depthoffield",
                "iterative",
                "perception",
                "infinitivespace"
            ],
            "usePreview": 0,
            "username": "morisil",
            "viewed": 738
        },
        "renderpass": [
            {
                "code": "// Copyright Kazimierz Pogoda, 2022 - https://xemantic.com/\n// I am the sole copyright owner of this Work.\n// You cannot host, display, distribute or share this Work in any form,\n// including physical and digital. You cannot use this Work in any\n// commercial or non-commercial product, website or project. You cannot\n// sell this Work and you cannot mint an NFTs of it.\n// I share this Work for educational purposes, and you can link to it,\n// through an URL, proper attribution and unmodified screenshot, as part\n// of your educational material. If these conditions are too restrictive\n// please contact me and we'll definitely work it out.\n\n// copyright statement borrowed from Inigo Quilez\n\n/*\nDescripition copied from fx(hash), where this system is mintable in unique\niterations:\n\nhttps://www.fxhash.xyz/generative/slug/the-mathematics-of-perception\n\nThis system, called The Mathematics of Perception, emerged from a\nseries of thought experiments. Our xemantic collective applies philosophy\nto facts about the world. The physics behind sensory experience is already\ndeeply researched. But what makes certain experiences evoke certain\nfeelings and affectionate states in the broader sense? I want to evoke\nemotions with algorithms. This research is needed for bigger immersive\ninstallations, using certain aesthetics for telling various narratives.\nHowever I am not a video artist, I don't cut and transform existing frames.\nI synthesize them with equations. The process can be described as\nsculpting in light and time with math.\n\nGenerating video-experience, which is perceptually pleasant, usually\ninvolves 3D modeling. There is no 3D per se involved in this system, not\neven so called ray marching. It represents an optical illusion of infinitive\nspace coded as a single GLSL fragment shader.\n\nIt started with a sketch - how to show an unlimited grid of lights,\noverlapping each other in perspective and movement.\n\nThen I added depth of field simulation, to blur the light discs depending\non perceived distance. Usually generating things \"out of focus\" is surprisingly\nexpensive to compute. Here simplicity of mathematical analytic formula\ncame very handy without extra cost.\n\nAfter depth of field, the simulation of connected chromatic aberration\nfollowed. This alone is the actual source of color in this system.\n\nBy accident I discovered that I can also introduce simulated refractions.\nIt's hard to believe how much this simple addition improved the experience.\nThe \"refraction\" is not fully following the physics of perception. It is\n\"impossible\" on purpose, still believable optical illusion. If you feel\noniric and escheresque, probably it's thanks to this single line of code.\n\nThe waves are important as well. Usually I use trigonometric functions for\nexpressing motion. They have this ability of producing oscillation cycles\nwe observe everywhere in the physical world. From rocking in our cradles,\nlater observing branches of a tree when the wind blows, through experience\nof music, which is unconscious perception of ratios between waves, we relate\nto this kind of swinging movement. This is how we dance.\n\nEach minted variant of this system will have different base parameters and\nmotion, providing similar, but unique experience. I hope that due to\ndifferences, each of them might evoke slightly different emotions.\nTherefore this drop is to please your senses, but also to continue with\nour experiment. After minting each variant please write us back how you\nfeel out it.\n\nKazik Pogoda\nthe mother of xemantic\n */\n\nconst int ITERATIONS = 15;\nconst float PI = 3.14159265359;\n\nmat2 rotate2d(in float angle){\n  return mat2(cos(angle),-sin(angle), sin(angle),cos(angle));\n}\n\nfloat shape(in vec2 st, in float size, in float blur) {\n  vec2 modSt = mod(st, 1.) * 2. - 1.;\n  float dist = length(modSt);\n  return smoothstep(size + blur, size - blur, dist);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 st = (2.* fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n  vec3 color = vec3(0);\n  float luma = .5;\n  vec2 layerSt = st * (cos(iTime * .115) * .6 + .8);\n  layerSt *= rotate2d(cos(iTime * .023 + 5.) * PI + PI);\n\n  for (int i = 0; i < ITERATIONS; i++) {\n    vec2 gridSt = layerSt + vec2(cos(iTime * .013) * 6. + 6., cos(iTime * .011) * 6. + 6.);\n    layerSt *= rotate2d(-cos(iTime * .0012) * PI + 1.);\n\n    float depth = (float(i) + .5) / float(ITERATIONS);\n    float focusDepth = depth - (cos(iTime * .73) * .5 + .5) * .8 + .1;\n    float blur = .05 + focusDepth * focusDepth * .4;\n\n    float chromaticAberration = cos(iTime * .15) * .2 + .2;\n    float shapeSize = + .3 + cos(iTime * .074) * .2;\n    vec3 shapeColor = vec3(\n      shape(gridSt - st * chromaticAberration * blur, shapeSize, blur),\n      shape(gridSt, shapeSize, blur),\n      shape(gridSt + st * chromaticAberration * blur, shapeSize, blur)\n    ) * luma;\n\n    layerSt += st * shape(gridSt, shapeSize, .5) * cos(iTime * .081) * .6;\n    layerSt *= cos(iTime * .23) * .05 + 1.1;\n    color += shapeColor;\n    luma *= .85;\n  }\n  fragColor = vec4(color, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}