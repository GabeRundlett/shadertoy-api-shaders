{
    "Shader": {
        "info": {
            "date": "1573100975",
            "description": "Old shader thats been sitting in private. Might need to restart shader to load texture.",
            "flags": 32,
            "hasliked": 0,
            "id": "wdsSRX",
            "likes": 31,
            "name": "Watercolor Smear",
            "published": 3,
            "tags": [
                "2d",
                "paint",
                "buffer",
                "smear"
            ],
            "usePreview": 1,
            "username": "Plento",
            "viewed": 2570
        },
        "renderpass": [
            {
                "code": "\nvoid mainImage( out vec4 f, in vec2 u )\n{\n    f = texture(iChannel0, u/iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "const float pi = 3.1415926;\nvec2 hash22(vec2 p) // Dave hoshkin hash\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\nvec2 R;\nvec4 T(vec2 p){\n \treturn texture(iChannel0, p / R);   \n    \n}\nvec4 T2(vec2 p){\n \treturn texture(iChannel1, p / R);\n}\n\nvoid mainImage( out vec4 f, in vec2 u )\n{\n    R = iResolution.xy;\n    \n    vec2 uv = u/R.xy;\n\t\n    vec4 col = vec4(0);\n\n    col = T(u);\n    \n    vec4 me = T(u);\n    \n    vec4 Up = T(u + vec2(.0, 1.));\n    vec4 Down = T(u + vec2(.0, -1.));\n    vec4 Left = T(u + vec2(-1., .0));\n    vec4 Right = T(u + vec2(1., .0));\n    \n    vec2 resDir = normalize(Up.yz + Down.yz + Left.yz + Right.yz);\n    \n    resDir += (hash22(u - sin(uv*25.))*.1);\n    \n    float angle = abs(atan(resDir.y, resDir.x)) - pi;\n    \n    u.x += 0.25;\n    u.y += 0.3;\n    \n    float s = smoothstep(0.0, 1.0, angle);\n    vec4 newCol = mix(T(u + (resDir - 1.0)), col, s);\n    \n    col = newCol;\n    \n    if(iFrame <= 5)\n        col = T2(u);\n    \n    f = col;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 5,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}