{
    "Shader": {
        "info": {
            "date": "1547799233",
            "description": "voronoi",
            "flags": 0,
            "hasliked": 0,
            "id": "3slGWl",
            "likes": 4,
            "name": "[Ese] Voronoi",
            "published": 3,
            "tags": [
                "voronoi"
            ],
            "usePreview": 0,
            "username": "Eseris",
            "viewed": 305
        },
        "renderpass": [
            {
                "code": "const float Pi = 3.1415926535;\n\nvec2 hash22(vec2 st){\n    st = vec2(dot(st, vec2(127.1, 311.7)), dot(st, vec2(269.5, 183.3)));\n    return fract(sin(st) * 43758.5453123);\n}\n\n\nfloat hash21(vec2 v) {\n    return fract(sin(dot(v, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat noise21(vec2 uv) {\n\tvec2 f = fract(uv);\n\tvec2 i = floor(uv);\n\tf = f * f * (3. - 2. * f);\n\treturn mix(\n\t\tmix(hash21(i), hash21(i + vec2(1,0)), f.x),\n\t\tmix(hash21(i + vec2(0,1)), hash21(i + vec2(1,1)), f.x), f.y);\n}\n\nvec2 noisyMove(vec2 id, float time) {\n\treturn vec2(\n\t\tnoise21(20. * hash22(id) + time),\n\t\tnoise21(-20. * hash22(id) + time));\n}\n\n\nvec3 voronoi(vec2 x) {\n    vec2 ix = floor(x);\n    vec2 fx = fract(x);\n    float w = .03;\n    \n    float mdist = 8.;\n    vec2  dir   = vec2(0);\n    vec3  col   = vec3(0);\n    \n    for(int j = -1; j <= 1; j++) {\n        for(int i =- 1; i <= 1; i++) {\n            vec2 next = vec2(i, j);\n            vec2 pt = noisyMove(ix + next, .3 * iTime);\n            vec2  diff = vec2(next) - fx + pt;\n        \tfloat weight = dot(pt, pt) * .5 + .5;\n            float dist = length(diff) * pow(weight, .3);\n            \n    \t\tvec3 bcol = mix(vec3(.3, .8, .1), vec3(.9, .95, .1), hash21(ix + next));\n            \n            float h = smoothstep(0., 1., 0.5 + .5*(mdist - dist)/w );\n\t    \tmdist = mix(mdist, dist, h);\n\t\t\tdir   = mix(dir,   diff, h);\n           \tcol   = mix(col,   bcol, h);\n        }\n\t}\n    \n    float angle = atan(dir.y, dir.x) / Pi;\n    angle = .5 * angle + .5;\n    float light = .5 + .5 * sin((angle - .1) * 2. * Pi);\n    \n    col = mix(col, vec3(.07, .1, .05), 1.2 * mdist);\n    return col + .3 * pow(1. - mdist, 2.) * (2. * light - 1.);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.y;\n    vec3 col = voronoi(4. * uv);\n    fragColor = vec4(col, 1);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}