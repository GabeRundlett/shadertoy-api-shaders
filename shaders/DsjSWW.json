{
    "Shader": {
        "info": {
            "date": "1670311455",
            "description": "for hmh.",
            "flags": 0,
            "hasliked": 0,
            "id": "DsjSWW",
            "likes": 4,
            "name": "❤",
            "published": 3,
            "tags": [
                "cineshader"
            ],
            "usePreview": 0,
            "username": "slj",
            "viewed": 2141
        },
        "renderpass": [
            {
                "code": "vec3 square(vec3 v){return v*v;}\n\nvec3 cube(vec3 v){return v*v*v;}\n\nfloat num_cube(float f){return f*f*f;}\n\nfloat heart_function(vec3 v){return num_cube(square(v).x + 2.25 * square(v).y + square(v).z - 1.0) - (square(v).x + 0.1125 * square(v).y) * cube(v).z;}\n\nfloat h(float x, float z){\n    float a = 0.0, b = 0.75, y = 0.5;\n    for (int i = 0; i < 10; i++){\n        if (heart_function(vec3(x, y, z)) <= 0.0) a = y;\n        else b = y;\n        y = (a + b) * 0.5;\n    }\n    return y;\n}\n\nvec3 nml(vec2 p){\n    vec3 v = vec3(p.x, h(p.x, p.y), p.y);\n    float a = -1.0 + dot(square(v), vec3(1, 2.25, 1));a *= a;   \n    float x = -2.0 * v.x * cube(v).z +  6.0 * v.x * a;\n    float y = -0.225 * v.y * cube(v).z + 13.5 * v.y * a;\n    float z = v.z * (-3.0 * square(v).x * v.z - 0.3375 * square(v).y * v.z + 6.0 * a);\n  \treturn normalize(vec3(x, y, z));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec3 col;\n    float t = sin(iTime * 4.0);\n    t = t * t * t * t * -0.1;\n    vec3 p = vec3((2.0 * fragCoord.xy - iResolution.xy) / min(iResolution.y, iResolution.x),0);\n    vec3 itime_p = p * vec3(1.0 + t, 1.0 + t, 0.0) * 4.5;\n    if (heart_function(itime_p.xzy) <= 0.0){\n        vec3 n = nml(itime_p.xy);\n        float diffuse = dot(n, normalize(vec3(-1, 1, 1))) * 0.5 + 0.5;\n        float rim = 1.0 - dot(n, vec3(0.0, 1.0, 0.0));\n        col = diffuse * vec3(1.0, 0, 0) + rim * vec3(0.5);\n    }\n\telse\n        col = vec3(1, 0.75, 0.8) * (1.1 - 0.25 * length(p));\n\tfragColor = vec4(col, 1.0);\n}\n/** SHADERDATA\n{\n\t\"title\": \"❤\",\n\t\"description\": \"for hmh.\",\n\t\"model\": \"nothing\"\n}\n*/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}