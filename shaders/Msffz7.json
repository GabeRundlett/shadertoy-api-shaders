{
    "Shader": {
        "info": {
            "date": "1495341232",
            "description": "Crazy Apollonian thing",
            "flags": 64,
            "hasliked": 0,
            "id": "Msffz7",
            "likes": 2,
            "name": "Crazy fractal visualizer",
            "published": 3,
            "tags": [
                "2d",
                "fractal",
                "music",
                "visualizer"
            ],
            "usePreview": 0,
            "username": "Ebanflo",
            "viewed": 759
        },
        "renderpass": [
            {
                "code": "const int ITS = 50;\nconst float pi = 3.1515926536;\nconst vec2 c1 = vec2(0, 1);\nconst vec2 c2 = vec2(.866, -.866);\nconst vec2 c3 = vec2(-.866, -.866);\n\nvec2 circleInverse(vec2 pos, vec2 center, float rad){\n    vec2 d = pos - center;\n\treturn d * rad * rad/dot(d, d) + center;\n}\n\nvec3 gasket(vec2 pos){\n    float rad1 = .75 + .75 * texture(iChannel0, vec2(.5, .2)).x;\n    float rad2 = 1.0;\n    float rad3 = 1.0;\n    float index = 0.;\n\tfor(int i = 0 ; i < ITS; i++){\n\t\tif(distance(pos, c1) < rad1){\n\t\t\tpos = circleInverse(pos, c1, rad1); index++;\n\t\t}\n        else if(distance(pos, c2) < rad2){\n\t\t\tpos = circleInverse(pos, c2, rad2); index++;\n\t\t}\n        else if(distance(pos, c3) < rad3){\n\t\t\tpos = circleInverse(pos, c3, rad3); index++;\n\t\t}\n        else if(pos.y < 0.){\n\t\t\tpos = vec2(pos.x, -pos.y); index++;\n\t\t}\n        else return vec3(pos, index);\n\t}\n}\n\nvec4 getCol(vec3 n){\n    float s = 0.08 * (4.0-length(n.xy)) + n.z;\n    if (n.z==50.0)return vec4(0);\n    float arg = pi * s / 20.;\n    float shift = 2. * texture(iChannel0, vec2(.5 * sin(100. * n.z / float(ITS)) + .5, .2)).x;\n    vec3 col = sin(vec3(arg - shift * pi, arg - shift * 2. * pi, arg - 4. * shift * pi / 3.)) * 0.5 + 0.5;\n    return vec4(col*col, 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 pos = fragCoord.xy / iResolution.y - .5 * vec2(iResolution.x / iResolution.y, 1.);\n    pos.y -= .2;\n    fragColor = getCol(gasket(pos));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "musicstream",
                        "id": 8995,
                        "published": 0,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "https://soundcloud.com/waveshaper-2/waveshaper-vector-dream1"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}