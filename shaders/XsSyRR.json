{
    "Shader": {
        "info": {
            "date": "1490474702",
            "description": "Generates a random permutation table (restart for new seed)\nthen draw the cycles. (color scheme not always ideal...)\nMore analytic display on [url]https://www.shadertoy.com/view/Ml3GWl[/url]",
            "flags": 32,
            "hasliked": 0,
            "id": "XsSyRR",
            "likes": 6,
            "name": "cycles in permutations - 2",
            "published": 3,
            "tags": [
                "cycles",
                "orbits",
                "permutations"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 723
        },
        "renderpass": [
            {
                "code": "// buf A: generate a permutation table using https://www.shadertoy.com/view/Ml3GWl\n#define Ni  8        // change in all tabs !\n#define N   float(Ni)\n#define M   (N*N-1.)\n\nfloat line(vec2 p, vec2 a, vec2 b)  {                   // --- draw line\n\tvec2 pa = p - a, ba = b - a;\n    float u = dot(pa, ba)/dot(ba, ba);\n \treturn length(pa - ba * clamp(u,0.,1.));\n}\nvec2 R;\n#define rnd(x)  fract(3563.*sin(1e4*x))\n#define rnd2(v) (2.*fract(4563.*sin(1e4*mat2(1,173.1,-31.7,275.3)*(v)))-1.)\n#define pos(P)  (P+.5)/N+rnd2(P)*.4/N\n\nvoid color(inout vec4 O, vec2 P, float d) {             // --- blend with color scheme\n    if (d<2./R.y) {\n        float c = texture(iChannel1,(.5+P)/R).x;        // cycle Id\n        vec4  C = ( .5+.5*sin(1e3*c+vec4(0,2.1,-2.1,0) ) ) * (.7+.7*rnd(c));\n        O = mix(O, C, smoothstep(2./R.y,0.,d));\n        //O = vec4(mod(c,N),floor(c/N),0,0)/N, O.b = 1.-O.r-O.g;\n    }\n}\n\nvoid mainImage( out vec4 O, vec2 U ) {\n    R = iResolution.xy;      \n    vec2 P = floor((U-.5)/R*N), V;\n    O = texture(iChannel0,(.5+P)/R);                    // grey display permutation\n    float d = length( pos(P) - U/R ) -3./R.y;           // display cycle node\n    color(O,P,d);\n    \n    for (int i=0; i<Ni*Ni;i++) {                        // display cycle links\n        P = vec2(i%Ni,i/Ni);\n        int v = int(texture(iChannel0,(.5+P)/R).x*M+.5);\n        V = vec2(v%Ni,v/Ni);\n        d = line( U/R, pos(P), pos(V) );\n        if (i==v) d -= 8./R.y;                          // if fix node, draw big disk\n        color(O,P,d);\n    }\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// generates a permutation table using https://www.shadertoy.com/view/Ml3GWl\n\n#define N 8.        // change in all tabs !\n\n//#define t float(iFrame)          // deterministic seed\n#define t (60.*iTime)        // time-random seed\n\n#define rnd2(x,y) fract(4563.*sin(1e4*((x)+.017*(y))-17.53*t))\n#define T(U) texture(iChannel0, mod(.5+U,N)/iResolution.xy)\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U -= .5;                               // we want integer index\n    if (iFrame<1) {\n        O +=  ( U.x + N*U.y +.0*.5 ) / (N*N-1.) -O; // start with ordered list\n        return;\n    }\n    \n    O = T(U);\n    \n    if (iFrame > 150) return;  \n    \n    float n = mod(float(iFrame),3.);      // alternate 3 phases in time\n    \n    if (n==0.) O = T(U+1.);               // offset\n    \n    if (n==1. &&\n        rnd2(floor(U.x/2.),U.y) < .5 )    // random twin-lines permutations\n           O = T(U-vec2(2.*mod(U.x,2.)-1., 0));\n    \n    if (n==2. &&\n        rnd2(U.x,floor(U.y/2.)) < .5 )    // random twin-columns permutations\n           O = T(U-vec2(0, 2.*mod(U.y,2.)-1.));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "// compute orbits ( cycles id and length )\n\n#define N 8.        // change in all tabs !\n#define M (N*N-1.)\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy,\n         P = U-.5;\n    \n    float T = P.x+N*P.y, m=T, C;           // start position\n\n    for (float i = 0.; i < N*N; i++) {     // itered permutations\n        T = floor(.5+ M* texture(iChannel0,(.5+vec2(mod(T,N),floor(T/N)))/R).x);\n        m = min(m,T);\n        if (T==C) { C=i; break; }\n    }\n    O = vec4(m/(N*N),C,0,0);               // cycle id, length\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}