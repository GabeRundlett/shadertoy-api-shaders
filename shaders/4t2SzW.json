{
    "Shader": {
        "info": {
            "date": "1442010295",
            "description": "needs some anti aliasing but i can't be bothered at the moment",
            "flags": 0,
            "hasliked": 0,
            "id": "4t2SzW",
            "likes": 0,
            "name": "2d experiment #2 - public_int_i",
            "published": 3,
            "tags": [
                "2d",
                "experiment"
            ],
            "usePreview": 0,
            "username": "public_int_i",
            "viewed": 451
        },
        "renderpass": [
            {
                "code": "\n#define withColor 0\n#define maxIter 9\n#define timeScale 1.\nconst vec3 color1 = vec3(.6,.54,.78);\nconst vec3 color2 = vec3(.44, .64, .3);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - .5;\n\n    int iter = int(mod(iTime*timeScale, float(maxIter)) + 1.);\n    #ifdef withColor\n    float sum = 0.;\n    #endif\n\tfloat is = -1.;\n    for (int i = 0; i < maxIter+1; i++) {\n\t\tif (i > iter) break;\n\n        is *= sign(cos((atan(uv.y,uv.x))*8. + \n                      floor(length(uv)*float(i)*16.) ));\n    \t#ifdef withColor\n        sum += is;\n        #endif\n   \t}\n   \n    #ifdef withColor\n    \n    float am = (is*.5+.5)*.75 + .25;\n    fragColor.xyz = mix( color1 ,\n                         color2 ,\n                        sum/(float(iter)*2.+1.) ) * am;\n    #else\n    fragColor.xyz = vec3(is*.5+.5);\n    #endif\n    \n    fragColor.w = 1.;\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}