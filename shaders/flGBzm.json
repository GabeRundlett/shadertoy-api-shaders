{
    "Shader": {
        "info": {
            "date": "1664224727",
            "description": "e",
            "flags": 32,
            "hasliked": 0,
            "id": "flGBzm",
            "likes": 4,
            "name": "Little Planet Thing",
            "published": 3,
            "tags": [
                "e"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 235
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0. * iResolution.xy) / iResolution.xy;\n\n    vec3 col = texture(iChannel0, uv).rgb; \n    col = length(col) * pal(col.g * 0.2 + uv.y + 0.6, 0.5 * vec3(0,1,2)/3.);\n    col *= 1.8 * pow(0.5 + 0.5 * uv.y, 4.);\n    col = sqrt(col);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec2 uv2 = fragCoord / iResolution.xy;\n    float mx = 0.5 + 0.5 * thc(4., 8. * (uv.x + uv.y) + 0.5 * iTime);\n    \n    float m = mix(1., 0.01, tanh(0.6 * iTime));\n    vec2 o1 = vec2(m * cos(10. * uv.y + 200. * iTime),\n                   m * sin(10. * uv.x + 200. * iTime));\n    vec2 o2 = vec2(m * cos(10. * uv.y + 0.25 * iTime),\n                   m * sin(10. * uv.x + 0.25 * iTime)); \n    vec2 o = mix(o2, o1, mx);\n    uv2 += o;\n                \n    uv2 = fract(uv2);\n    vec3 col = texture(iChannel0, uv2).rgb; \n\n    float xp = exp(-pow(8. * dot(uv,uv), 6.));\n    \n    if (length(col) < 0.75 + 0.25 * cos(iTime))\n        col = mix(1.5, 3., mx) * xp * pal(1., 1.* vec3(0,1,1)/3.);\n    \n    //col += pal(v, (0.5 + 0.4 * cos(3.25 * v)) * vec3(0,1,2)/3.);\n    //col = clamp(col, 0., 0.8);\n    //col *= 0.99;\n    col *= 0.96;\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define pi 3.14159\n#define thc(a,b) tanh(a*cos(b))/tanh(a)\n\nfloat h21(vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nvec3 pal(in float t, in vec3 d) {\n    return 0.5 + 0.5 * cos(2. * pi * (0.5 * t + d));\n}\n",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            }
        ],
        "ver": "0.1"
    }
}