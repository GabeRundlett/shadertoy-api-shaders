{
    "Shader": {
        "info": {
            "date": "1626198720",
            "description": "Idea stolen from https://www.youtube.com/watch?v=Pv26QAOcb6Q\nI was wondering if this would also work with the julia set.\nGo full screen, and point a webcam at the screen. Drag with the mouse to change the value of 'c'",
            "flags": 2,
            "hasliked": 0,
            "id": "NtsXRf",
            "likes": 3,
            "name": "Analog Julia Fractal",
            "published": 3,
            "tags": [
                "fractal",
                "webcam",
                "feedback",
                "julila"
            ],
            "usePreview": 0,
            "username": "TheJimJames40",
            "viewed": 429
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 m  = iMouse.xy/iResolution.xy;\n    \n    vec2 ratio = vec2(iResolution.y / iResolution.x, 1.0);\n    \n    float s = 2.0;\n    \n    vec2 i = (uv*2.0 - 1.0)*s;\n    m = (m*2.0 - 1.0)*s;\n    float d = length(i)*8.0;\n    \n    vec2 c = i;\n\n    vec2 z = vec2(0.0);\n    \n    z = i;\n\n    {\n        vec2 z2;\n        z2.x = z.x*z.x - z.y*z.y;\n        z2.y = z.x*z.y*2.0;\n        z2 += m;\n        z = z2;\n    }\n    \n    vec2 o = (z / s + 1.0) / 2.0;\n    // o = (o / ratio / 3.0 + 1.0)*0.5;\n    \n\n    // Time varying pixel color\n    vec4 col = max(texture(iChannel0, o)*0.5, 1.0 / (d*d + 1.0));\n\n    // Output to screen\n    fragColor = col;\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "webcam",
                        "id": 31,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/webcam.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}