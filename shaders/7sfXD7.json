{
    "Shader": {
        "info": {
            "date": "1618699194",
            "description": "A funky little feedback system I found today while playing around.",
            "flags": 32,
            "hasliked": 0,
            "id": "7sfXD7",
            "likes": 4,
            "name": "Odd little system",
            "published": 3,
            "tags": [
                "feedback"
            ],
            "usePreview": 0,
            "username": "aferriss",
            "viewed": 253
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Output to screen\n    fragColor = 1.0- step(0.00001, texture(iChannel0, uv));\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 tc = fragCoord.xy / iResolution.xy;\n    \n    vec4 tex = texture(iChannel1, tc);\n    //vec4 past = texture(iChannel0, tc + vec2(0.01));\n    \n    if(iFrame < 1 || iFrame % 1500 == 0 || iMouse.z > 0.0){\n    // Seed the feedback\n         if(tc.x >0.475 && tc.x < 0.525 && tc.y > 0.475 && tc.y <0.525){\n            fragColor = vec4(1.0);\n        } else {\n            fragColor = vec4(0.0,0.0,0.0,1.0);\n        }\n    } else {\n        fragColor = tex;\n    }\n    \n    \n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "float rand(float n){return fract(sin(n) * 43758.5453123);}\n\nfloat noise(float p){\n    float fl = floor(p);\n    float fc = fract(p);\n    return mix(rand(fl), rand(fl + 1.0), fc);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 texel = 1.0 / iResolution.xy;\n    \n    vec4 t = texture(iChannel0, uv);\n    \n    vec4 n = texture(iChannel0, uv + vec2(0.0, texel.y));\n    vec4 e = texture(iChannel0, uv + vec2(texel.x, 0.0));\n    vec4 w = texture(iChannel0, uv + vec2(-texel.x, 0.0));\n    vec4 s = texture(iChannel0, uv + vec2(0.0, -texel.y));\n    \n    if(iFrame % 2 == 0){ \n        fragColor = abs(e - t) + abs(w - t) ;\n    } else {\n        fragColor = abs(n - t) + abs(s - t) ;\n    }\n    \n    \n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}