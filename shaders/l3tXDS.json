{
    "Shader": {
        "info": {
            "date": "1719516304",
            "description": "aha",
            "flags": 0,
            "hasliked": 0,
            "id": "l3tXDS",
            "likes": 3,
            "name": "Everything converges",
            "published": 3,
            "tags": [
                "2d",
                "trippy",
                "sinefunction"
            ],
            "usePreview": 0,
            "username": "kostik1337",
            "viewed": 176
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926536\n\nmat2 mr(float a) {float c=cos(a),s=sin(a); return mat2(c,s,-s,c);}\nfloat hash(float t) {return fract(sin(t)*45398.248996);}\nfloat hash(vec2 t) {return hash(dot(t, vec2(45.123,32.64345)));}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime+25.;\n    vec2 p = fragCoord/iResolution.xy;\n    vec2 pp = (p-.5 - .2*cos(.2*vec2(time, time+PI/2.)));\n    p /= 1.+.5*dot(pp, pp);\n    p += .1;\n    vec3 col = vec3(0.);\n    for(float i=0.; i<32.; ++i) {\n        time+=.1*hash(p+time+.1);\n        p *= 1.1;\n        p *= mix(vec2(1.), .5*sin(14.*p.yx + .2*time)+.5, .4);\n        p *= mr(mix(.001, .05, i/32.)*time);\n\n        int ii = int(mod(i, 3.));\n        vec2 p1 = p;\n        p1.x += mix(.03,.01,i/32.)*hash(p.y);\n        col[ii] += pow(.002/abs(mod(p1.x, 1.)-.03), 1.5);\n    }\n    col = min(col, vec3(1.));\n    col = mat3(\n      1.,.5,.1,\n      0.5,.8,0.1,\n      0.3,0.2,0.8\n    )*col;\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}