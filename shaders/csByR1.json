{
    "Shader": {
        "info": {
            "date": "1687386911",
            "description": "noises",
            "flags": 0,
            "hasliked": 0,
            "id": "csByR1",
            "likes": 2,
            "name": "Ruidos en el planeta",
            "published": 3,
            "tags": [
                "noise",
                "ruidos"
            ],
            "usePreview": 0,
            "username": "leosalvatierra",
            "viewed": 144
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float PI = 3.1415926535897932384626433832795;\n    \n    vec2 c = (2.0*fragCoord-iResolution.xy)/min(iResolution.y,iResolution.x);\n\n    // Ajusta el valor de beat desde tu software de música\n    // Cuando un beat ocurre, incrementa este valor\n    float beat = 0.0; \n\n    // Parámetros basados en el tiempo para la animación\n    vec2 k = vec2(0.4*cos(iTime/2.0 + beat), 0.4*sin(iTime/2.0 + beat));\n\n    // Valores iniciales\n    vec2 z = c;\n    float m = dot(z,z);\n\n    // Conjunto de Mandelbrot\n    for(int i = 0; i < 256; i++)\n    {\n        if(m < 1024.0)\n        {\n            z = vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y) + c + k;\n            m = dot(z,z);\n        }\n        else break;\n    }\n\n    // Color psicodélico\n    vec3 color = 0.5 + 0.5*cos( 3.0 + iTime + vec3(0.0, 0.6, 1.0) * m * 0.1 + beat * 2.0 );\n\n    fragColor = vec4( color, 1.0 );\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}