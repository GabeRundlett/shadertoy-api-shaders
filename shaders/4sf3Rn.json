{
    "Shader": {
        "info": {
            "date": "1358124981",
            "description": "A planet rotating",
            "flags": 0,
            "hasliked": 0,
            "id": "4sf3Rn",
            "likes": 47,
            "name": "Planet",
            "published": 3,
            "tags": [
                "2d",
                "planet"
            ],
            "usePreview": 0,
            "username": "iq",
            "viewed": 5192
        },
        "renderpass": [
            {
                "code": "// Copyright Inigo Quilez, 2013 - https://iquilezles.org/\n// I am the sole copyright owner of this Work.\n// You cannot host, display, distribute or share this Work in any form,\n// including physical and digital. You cannot use this Work in any\n// commercial or non-commercial product, website or project. You cannot\n// sell this Work and you cannot mint an NFTs of it.\n// I share this Work for educational purposes, and you can link to it,\n// through an URL, proper attribution and unmodified screenshot, as part\n// of your educational material. If these conditions are too restrictive\n// please contact me and we'll definitely work it out.\n\nvec3 doit( in vec2 pix )\n{\n    vec2 p = -1.0 + 2.0*pix;\n    p.x *= iResolution.x/iResolution.y;\n\n    vec3 ro = vec3( 0.0, 0.0, 2.5 );\n    vec3 rd = normalize( vec3( p, -2.0 ) );\n\n    vec3 col = vec3(0.1);\n\n    // intersect sphere\n    float b = dot(ro,rd);\n    float c = dot(ro,ro) - 1.0;\n    float h = b*b - c;\n    if( h>0.0 )\n    {\n        float t = -b - sqrt(h);\n        vec3 pos = ro + t*rd;\n        vec3 nor = pos;\n\n        // texture mapping\n        vec2 uv;\n        uv.x = atan(nor.x,nor.z)/6.2831 - 0.03*iTime - iMouse.x/iResolution.x;\n        uv.y = acos(nor.y)/3.1416;\n\t\tuv.y *= 0.5;\n\n        col = vec3(0.2,0.3,0.4);\n        vec3 te  = 1.0*texture( iChannel1, 0.5*uv.yx ).xyz;\n             te += 0.3*texture( iChannel1, 2.5*uv.yx ).xyz;\n\t\tcol = mix( col, (vec3(0.2,0.5,0.1)*0.55 + 0.45*te + 0.5*texture( iChannel0, 15.5*uv.yx ).xyz)*0.4, smoothstep( 0.45,0.5,te.x) );\n\n        vec3 cl = texture( iChannel0, 2.0*uv ).xxx;\n\t\tcol = mix( col, vec3(0.9), 0.75*smoothstep( 0.55,0.8,cl.x) );\n\t\n        // lighting\n        float dif = max(nor.x*2.0+nor.z,0.0);\n        float fre = 1.0-clamp(nor.z,0.0,1.0);\n        float spe = clamp( dot( nor,normalize(vec3(0.4,0.3,1.0)) ), 0.0, 1.0 );\n        col *= 0.03 + 0.75*dif;\n        col += pow(spe,64.0)*(1.0-te.x);\n        col += mix( vec3(0.20,0.10,0.05), vec3(0.4,0.7,1.0), dif )*0.3*fre;\n        col += mix( vec3(0.02,0.10,0.20), vec3(0.7,0.9,1.0), dif )*2.5*fre*fre*fre;\n    }\n\telse\n\t{\n\t\tc = dot(ro,ro) - 10.0;\n\t\th = b*b - c;\n        float t = -b - sqrt(h);\n        vec3 pos = ro + t*rd;\n        vec3 nor = pos;\n\n        vec2 uv;\n        uv.x = 16.0*atan(nor.x,nor.z)/6.2831 - 0.05*iTime - iMouse.x/iResolution.x;\n        uv.y = 2.0*acos(nor.y)/3.1416;\n        col = texture( iChannel0, uv, 1.0 ).zyx;\n\t\tcol = col*col*col;\n        col *= 0.15;\n        vec3 sta = texture( iChannel0, 0.5*uv, 4.0 ).yzx;\n\t\tcol += pow(sta, vec3(8.0))*1.3;\n\n\t}\n\t\n    col = 0.5*(col+sqrt(col));\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // render this with four sampels per pixel\n    vec3 col0 = doit( (fragCoord.xy+vec2(0.0,0.0) )/iResolution.xy );\n    vec3 col1 = doit( (fragCoord.xy+vec2(0.5,0.0) )/iResolution.xy );\n    vec3 col2 = doit( (fragCoord.xy+vec2(0.0,0.5) )/iResolution.xy );\n    vec3 col3 = doit( (fragCoord.xy+vec2(0.5,0.5) )/iResolution.xy );\n    vec3 col = 0.25*(col0 + col1 + col2 + col3);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 10,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg"
                    },
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 45,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}