{
    "Shader": {
        "info": {
            "date": "1601021978",
            "description": "A cute creature based only on circles :)",
            "flags": 0,
            "hasliked": 0,
            "id": "wdccW7",
            "likes": 4,
            "name": "2D Octopus",
            "published": 3,
            "tags": [
                "2d",
                "cute",
                "motion",
                "octopus"
            ],
            "usePreview": 0,
            "username": "z0rg",
            "viewed": 289
        },
        "renderpass": [
            {
                "code": "// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\nvec3 red = vec3(255.,21.,47.)/255.;//vec3(.97,.12,.21);\nvec3 yellow = vec3(255.,198.,80.)/255.;\nvec3 pink = vec3(255.,159.,196.)/255.;\n\n#define sat(x) clamp(x, 0., 1.)\n\nfloat cir(vec2 p, float r) { return length(p)-r; }\n\nvec3 patternBack(vec2 uv)\n{\n  vec3 col;\n  float rep = 0.38;\n  uv-=vec2(.1);\n  float r = abs(cir(mod(uv,rep)-rep*.5,.14))-0.03;\n\n  col = mix(col, red*.5*(1.-sat(uv.y+.3)),1.-sat(r*40.));\n  return col;\n}\n\nvec4 spot(vec2 uv)\n{\n  float sz = 0.03;\n  return vec4(pink*(1.-sat(cir(uv-vec2(-sz*.1),sz*.8)*40.)), cir(uv,sz));\n}\n\nvec3 post(vec2 uv,vec3 rd)\n{\n  vec3 col = rd;\n  vec3 blue =vec3(89.,151.,255.)/255.;\n\n  col += blue*(sin(uv.x+uv.y)*.5+.5);\n  float an = uv.x+uv.y*.5;\n  col += sat(uv.y)*blue*.5*sat((sin(an*25.+iTime)*.5+.5)+(sin(an*5.-iTime*.5)*.5+.5));\n\n  float n = texture(iChannel0,vec2(sin(uv.y*5.+iTime+sin(uv.y*15.))*.05+uv.x,uv.y-iTime*.2)).x;\n  col += blue*float(n>.85)*(sin(uv.x+uv.y)*.5+.5);\n  return col;\n}\nvec3 rdr(vec2 uv, float shp)\n{\n  vec3 col = patternBack(uv);\n  col = .2*post(uv*-1.,col);\n\n\nvec2 uvt = vec2(abs(uv.x),uv.y*.7) -vec2(.38,-.2);\n  float tent = abs(cir(uvt,.25))-.12;\n  col = mix(col,red*(1.-sat(uvt.y)),1.-sat(tent*shp));\n\n  float head = cir(uv-vec2(0.,.1), .4);\n  col = mix(col,red,1.-sat(head*shp));\n\n  vec2 uve = vec2(abs(uv.x),uv.y)-vec2(.25,0.);\n  float eye = cir(uve,.17);\n  col = mix(col,yellow,1.-sat(eye*shp));\n\n  float eyeb = cir(uve,.12);\n  col = mix(col,vec3(0.),1.-sat(eyeb*shp));\n\n  vec2 uvew = vec2(abs(uv.x-.07),uv.y)-vec2(.25,0.07);\n  float eyew = cir(uvew, .03);\n  col = mix(col, vec3(1.),1.-sat(eyew*shp));\n\n  vec2 uver = vec2(abs(uv.x-.15),uv.y)-vec2(.27,-0.15);\n  float eyer = cir(uver,.15);\n  col = mix(col,mix(col,vec3(1.),.3),1.-sat(max(eyer,eye)*shp));\n\n  int i = 0;\n  vec2 uvss = vec2(abs(uv.x),uv.y)-vec2(.37,0.);\n  while (i<5)\n  {\n    float an = float(i-2)*.5;\n    vec2 uvs = uvss+vec2(sin(an),cos(an)*2.)*.23;\n    vec4 spt = spot(uvs);\n    col = mix(col, spt.xyz,1.-sat(spt.w*shp));\n    ++i;\n  }\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = (fragCoord.xy-.5*iResolution.xy) / iResolution.xx;\n  uv*=2.;\n  vec3 col = rdr(uv, mix(40.,400.,sin((uv.x+uv.y)*15.-iTime)*.5+.5));\n  col = post(uv, col);\n  fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}