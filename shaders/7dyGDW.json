{
    "Shader": {
        "info": {
            "date": "1631570883",
            "description": "cloudy stuff.\nLooks drastically different on different platforms :/",
            "flags": 0,
            "hasliked": 0,
            "id": "7dyGDW",
            "likes": 12,
            "name": "cloudyStuff",
            "published": 3,
            "tags": [
                "abstract"
            ],
            "usePreview": 0,
            "username": "stephenl7797",
            "viewed": 464
        },
        "renderpass": [
            {
                "code": "\nfloat hash31(vec3 p) {\n    float q = dot(p,vec3(170.1,110.7,100.6));\n\treturn fract(sin(q)*480.5453);\n}\n\nfloat fbm(vec3 p) {\n    float f = 0.;\n    f += hash31(floor(p*2.5+100.)) * .1;\n    f += hash31(floor(p*2.+200.)) * .5;\n    f += hash31(floor(p*1.+200.)) * 1.;\n    f += hash31(floor(p/2.+200.)) * .5;\n    f += hash31(floor(p/4.+400.)) * .25;\n    f += hash31(floor(p/8.+400.)) * .25;\n    f += hash31(floor(p/16.+400.)) * .25;\n    return f / 3.65;\n}\nvec3 calcNormal(vec3 p) {\n    float d = .4;\n    return normalize(vec3(\n        fbm(p+vec3(d,0.,0.)) - fbm(p-vec3(d,0.,0.)),\n        fbm(p+vec3(0.,d,0.)) - fbm(p-vec3(0.,d,0.)),\n        fbm(p+vec3(0.,0.,d)) - fbm(p-vec3(0.,0.,d))));\n}\n\n// The ray is rotated along z axis while marching, which gives a slight spiral.\nvec3 rot(vec3 x, float t) {\n    return normalize(vec3(x.x-x.y*t, x.y+x.x*t, x.z));\n}\nvec3 map(vec3 ro, vec3 rd) {\n    float t = 0.9, d = 10.;\n    for (int it=0; it<53; it++) {\n        vec3 rp = ro + t*rd;\n        rd = rot(rd, .023);\n        d = fbm(rp);\n        t += d * .992;\n    }\n    return ro + t * rd;\n}\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x += fract(sin(uv.x*250.3+uv.y*400.)*280.24) * .00051;\n\n    vec3 col = vec3(0.);\n    \n    \n    \n    //vec3 ro = vec3(cos(iTime), sin(iTime) ,-2.5 + iTime * .71);\n    vec3 ro = vec3(0.,0. ,-2.5 + iTime);\n    //vec3 ro = vec3(iTime,iTime ,-2.5 + iTime);\n    \n    vec3 rd = normalize(vec3((uv-.5)*vec2(1.0,iResolution.y/iResolution.x),.075));\n    \n    if (iMouse.z > .5) {\n        float pitch = (iMouse.y/iResolution.y-.5)*3., yaw = (iMouse.x/iResolution.x-.5)*3.;\n        rd = mat3(1., 0., 0.,   0., cos(pitch), -sin(pitch),   0., sin(pitch), cos(pitch)) *\n             mat3(cos(yaw), 0., -sin(yaw),   0.,1.,0.,  sin(yaw),0.,cos(yaw)) * rd;\n    }\n    \n    vec3 rp = map(ro,rd);\n    float d = length(rp-ro);\n    \n    float v = clamp(d * .034, 0.,1.);\n\n    col.rgb = clamp(pow(v,9.)*(10.*pal(v*v, vec3(0.0,0.0,0.0),vec3(0.5,0.50,0.98),vec3(-1.,.50,.0),vec3(0.10,0.72,0.1))),0.,1.);\n    col.rgb += .8 * clamp(v*pal(v, vec3(0.01,0.0,0.07),vec3(0.9,0.0,0.999),vec3(.85,.0,.65),vec3(0.4,0.0,0.5) ),0.,1.);\n    \n    vec3 n = calcNormal(rp);\n    col.rgb += clamp(v*v*pow(abs(n.z),3.) * vec3(.05,.716,.91) * 1.2, 0.,1.);\n    col.rgb += clamp(v*pow((n.y-.1),5.) * vec3(.75,.7216,.01) * .97, 0.,1.);\n    col.r = pow(col.r,1.25);\n    //col.g = pow(col.g,2.5);\n    //col.b = pow(col.b,2.5);\n\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}