{
    "Shader": {
        "info": {
            "date": "1631116853",
            "description": "simple first animated shader built from demos by IQ and World of Zero",
            "flags": 0,
            "hasliked": 0,
            "id": "sdK3R1",
            "likes": 3,
            "name": "Animated Aesthetic Palm Tree",
            "published": 3,
            "tags": [
                "procedural",
                "80s",
                "animated",
                "neon",
                "synthetic",
                "miami"
            ],
            "usePreview": 0,
            "username": "axx0009",
            "viewed": 270
        },
        "renderpass": [
            {
                "code": "//built from palm tree tutorial by Inigo Quilez, with grid shader by World of Zero, animation by me\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //time variable bounce\n    float b = 0.5*cos(iTime);    \n    \n    //Center of origin\n    vec2 q = uv - vec2(0.3,0.7);\n\n    // Time varying background color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    //variable radius\n    float r = 0.2;\n    \n    //float scale = 15.0 + 5.0*cos(iTime); \n    float scale=15.0;\n    float gridPointX = step(float(mod(uv.x * scale, 0.75)), 0.1);\n    float gridPointY = step(float(mod(uv.y * scale, 1.0)), 0.1);\n    float gridPoint = min(1.0, gridPointX + gridPointY);\n\n    // Output to screen\n//    fragColor = vec4(gridPoint, gridPoint, gridPoint, 1.0);\n    \n    //modulated wave on radius r\n    r +=0.1*cos(atan(q.y,q.x-0.025*b)*10.0 + 20.0*(q.x+0.01*b) + 1.0 + 0.05*b);\n    \n    //render canopy\n    col *= smoothstep(r,r+0.005,length(q+.01*b));\n    \n    //trunk width\n    float w = 0.02;\n    //trunk texture\n    w += 0.002*cos(120.0*q.y);\n    //trunk taper\n    w -= 0.005*cos(2.0*q.y);\n    //ground union\n    w+= exp(-40.0*uv.y);    \n    //trunk curve\n    float c = 0.2 * sin(2.0 * (q.y+0.05*b));\n    \n    //render trunk\n    col *= 1.0 -(1.0-smoothstep(w,w+0.001,abs(q.x - c)))*(1.0-smoothstep(0.0,0.001,q.y));\n    \n    //superimpose black grid\n    col -= (gridPoint,gridPoint,gridPoint);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}