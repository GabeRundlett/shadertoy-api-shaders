{
    "Shader": {
        "info": {
            "date": "1625614873",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "ftsXD8",
            "likes": 3,
            "name": "Dim in Another World",
            "published": 3,
            "tags": [
                "3d"
            ],
            "usePreview": 0,
            "username": "squid",
            "viewed": 263
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926535898\n\n#define MOD2 vec2(443.8975,397.2973)\n#define MOD3 vec3(443.8975,397.2973, 491.1871)\n#define MOD4 vec4(443.8975,397.2973, 491.1871, 470.7827)\nfloat hash13(vec3 p)\n{\n\tp  = fract(p * MOD3);\n    p += dot(p.xyz, p.yzx + 19.19);\n    return fract(p.x * p.y * p.z);\n}\n\nvec3 hash32(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * MOD3);\n    p3 += dot(p3.zxy, p3.yxz+19.19);\n    return fract(vec3(p3.x * p3.y, p3.x*p3.z, p3.y*p3.z));\n}\nvec3 hash33(vec3 p)\n{\n\tp = fract(p * MOD3);\n    p += dot(p.zxy, p+19.19);\n    return fract(vec3(p.x * p.y, p.x*p.z, p.y*p.z));\n}\nvec4 hash43(vec3 p)\n{\n\tvec4 p4 = fract(vec4(p.xyzx) * MOD4);\n    p4 += dot(p4.wzxy, p4+19.19);\n    return fract(vec4(p4.x * p4.y, p4.x*p4.z, p4.y*p4.w, p4.x*p4.w));\n}\n\nmat2 rot2(float a){\n    float c = cos(a); float s = sin(a);\n\treturn mat2(c, s, -s, c);\n}\n\nfloat SM(float a, float b, float k)\n{\n    float xp = clamp(-(b-a) * k + 0.5, 0.0, 1.0), xp2 = xp*xp;\n   \treturn a+min((b-a), xp2 * (xp2 * 0.5 - xp) / k);\n}\n\nvec2 U(vec2 a, vec2 b) {\n    return a.x < b.x ? a : b;\n}\n\nfloat sdTorus( vec3 p, vec2 t )\n{\n  return length( vec2(length(p.xz)-t.x,p.y) )-t.y;\n}\n\nfloat sdCappedCylinder( vec3 p, float h, float r )\n{\n  vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(h,r);\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nvec3 path(float ct) {\n    return vec3(cos(ct*0.05)*6.,sin(ct*0.4)*1.6+10.0, ct*3.);\n}\n\nfloat height(vec2 p) {\n    return (sin(p.y*0.5+63.)+sin(p.x*0.5-23.))*1. + (cos(p.y*0.06-35.)+cos(p.x*0.02+95.))*2. + 3.;\n}\n\nvec2 map_(vec3 p){\n    float lt = p.y - height(p.xz);\n    vec3 q = mod(p, 8.)-4.;\n    vec4 h = hash43(floor(p/8.));\n    lt = max(lt, (3.+h.x*h.y)-length(q));\n    return vec2(lt, 1.);\n}\nfloat map(vec3 p) { return map_(p).x; }\n\nvec3 N(in vec3 p)\n{  \n    vec2 e = vec2(-1.,1.)*0.01;   \n\treturn normalize(e.yxx*map(p + e.yxx) + e.xxy*map(p + e.xxy) + \n\t\t\t\t\t e.xyx*map(p + e.xyx) + e.yyy*map(p + e.yyy) );   \n}\n\n\nfloat G(vec3 uv, float width) {\n\tvec3 c = max(step(abs(uv), vec3(width*.5))*.8,step(fract(uv), vec3(width*1.2))*.2);\n\treturn max(c.x,max(c.y,c.z));\n}\n\n\nvec2 trace(in vec3 ro, in vec3 rd) {\n    float t = 0., dt;\n\tfor(int i=0; i<512; i++){\n\t\tdt = map(ro + rd*t);\n\t\tif(dt<5e-3 || t > 150.) break;\n\t\tt += dt*0.5;\n\t}\n    return vec2(t,dt);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 uv = (fragCoord - iResolution.xy*.5)/iResolution.y;\n    \n    vec3 ro = path(iTime) + vec3(0., 0.0, -2.);\n\tvec3 c,sp,\n        f = normalize(path(iTime+1.)-ro),\n        r = normalize(vec3(f.z, 0., -f.x)),\n        u = cross(f, r),\n        rd = normalize(f + uv.x*r + uv.y*u);\n    \n    const vec3 sun = normalize(vec3(0.15,0.125,0.6));\n    const vec3 sun_col = vec3(1.0,0.8,0.5);\n    const vec3 lamp_col = vec3(0.9,0.99,0.75);\n    const vec3 surf = vec3(0.6,0.6,0.64);\n        \n\tvec2 trs = trace(ro, rd);\n\tfloat t = trs.x, dt = trs.y, x;\n\tif(dt<5e-3){\n    \tsp = t * rd+ro;\n        x = map_(sp).y;\n        vec3 n = N(sp);\n        vec3 L = (sp-(path(iTime+8.0)));\n        float Ld = length(L);\n        L /= -Ld;\n        c = min(1./(0.05*Ld*Ld),1.0)*lamp_col * max(dot(L,n),0.) * surf * (trace(sp+L*0.1,L).y<5e-3?0.:1.) +\n            sun_col * max(dot(sun,n),0.) * surf * (trace(sp+sun*0.1,sun).y<5e-3?0.:1.) +\n            0.5*(1.-surf)*pow(max(1.-abs(dot(n, rd)), 0.),10.);\n        c = mix(c, vec3(0.0), t/150.0);\n\t} else {\n        c = pow(dot(rd,sun),2000.)*sun_col;\n    }\n    c = mix(c, vec3(0.0), pow(length(uv*vec2(0.9,1.2)),5.));\n    c = pow(c, vec3(0.735));\n\t\n\tfragColor = c.xyzz;\n\t\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}