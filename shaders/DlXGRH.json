{
    "Shader": {
        "info": {
            "date": "1671238402",
            "description": "lights",
            "flags": 0,
            "hasliked": 0,
            "id": "DlXGRH",
            "likes": 3,
            "name": "flower lights",
            "published": 3,
            "tags": [
                "lights"
            ],
            "usePreview": 0,
            "username": "TestCoder",
            "viewed": 286
        },
        "renderpass": [
            {
                "code": "float lightCircle(vec2 uv, float radius, vec2 position, float radiusReduction) {\n    float d = length(uv-position)*radiusReduction;\n\n    d = smoothstep(d,0.,radius);\n    \n    return 1.-d;\n}\n\nvec2 getRotation(float spin, float itemsAmount, float d) {\n    float cosineTime = cos(iTime + spin / itemsAmount * 3.14 * 2.) * d;\n    float sineTime = sin(iTime + spin / itemsAmount * 3.14 * 2.) * d;\n    \n    return vec2(cosineTime, sineTime);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy-.5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Time varying pixel color\n    vec3 color = vec3(0.);\n    float timeSpeed = .5;\n    vec3 rotatingColor = cos(iTime*timeSpeed+uv.xyx+vec3(0,2,4));\n    float itemsAmount = 20.;\n    float zoom = .25;\n    float amount = 20.;\n    float stretch = 4.;\n    float shineReduction = 7.;\n    float rotationDisplacement = 2. + sin(iTime * timeSpeed) * cos(iTime * timeSpeed);\n\n    for (float d = 0.; d < amount; d++) {\n        for (float index = 0.; index < itemsAmount; index++) {\n            float itemsDistance = d / amount * stretch * zoom;\n            color += rotatingColor*lightCircle(uv, .1, getRotation(index + d / rotationDisplacement, itemsAmount, itemsDistance), shineReduction / zoom);\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}