{
    "Shader": {
        "info": {
            "date": "1611355012",
            "description": "Reaction diffusion using LOD",
            "flags": 32,
            "hasliked": 0,
            "id": "tlKcRK",
            "likes": 1,
            "name": "Reaction diffusion using LOD",
            "published": 3,
            "tags": [
                "lod",
                "cellular"
            ],
            "usePreview": 0,
            "username": "illus0r",
            "viewed": 279
        },
        "renderpass": [
            {
                "code": "//IMG\nvoid mainImage(out vec4 o, vec2 FC) {\n    o = texelFetch(iChannel0, ivec2(FC), 0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// A\n#define rnd(x) fract(1e5 * sin(1e5 * x))\n#define S smoothstep(0., .2, iTime)\n#define K .062\n#define F .06\n#define Dab vec2(1,.4)*S\n#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n\nvoid mainImage(out vec4 o, vec2 FC) {\n    vec2 uv = FC / iResolution.xy;\n    vec2 v = texture(iChannel0, uv, .0).xy;\n    vec2 d, delta;\n    uv = .5 + (uv - .5) * rot(.02 * length(uv - .5));\n    d = -v + texture(iChannel0,uv, 4.).xy;\n    delta = Dab * d\n        + vec2(-1., 1.) * v.x * v.y * v.y\n        + vec2(F * (1. - v.x), -(K + F) * v.y);\n    o = iTime < .1\n        ? vec4(rnd(floor(uv.x * 10.)))\n        : v.xyxx + delta.xyxx;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}