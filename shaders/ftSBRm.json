{
    "Shader": {
        "info": {
            "date": "1651898979",
            "description": "Coordinate visualization & function image.",
            "flags": 0,
            "hasliked": 0,
            "id": "ftSBRm",
            "likes": 3,
            "name": "Coordinate visualization",
            "published": 3,
            "tags": [
                "2d",
                "math",
                "visualization",
                "net"
            ],
            "usePreview": 0,
            "username": "fl0a1e",
            "viewed": 234
        },
        "renderpass": [
            {
                "code": "// --------------------------------------------------------\n\n#define S(y,f) smoothstep(f-0.05, f, y)-smoothstep(f, f+.05, y);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    uv*=8.;\n    \n    vec2 gv = fract(uv)-.5;\n    \n    \n    float y1 = pow(uv.x, -1.);\n    float y2 = pow(uv.x, 2.);        // f(x)=x^2\n    float y3 = pow(uv.x, 3.);        // f(x)=x^3\n    float y4 = sin(uv.x*sin(iTime*0.1)*10.);//noise\n    float y5 = log(uv.x);            // f(x)=ln(x)\n    \n    \n    float m = 0.;\n    m += S(uv.y, y1);\n    m += S(uv.y, y2);\n    m += S(uv.y, y3);\n    m += S(uv.y, y4);\n    m += S(uv.y, y5);\n    \n    \n    vec3 col;\n    col.rg = floor(uv)*.15+0.1;\n    if(gv.x>.48 || gv.y>.48) col=vec3(0.6,0.6,0.6);\n    col += m * vec3(1.,1.,1.);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n// --------------------------------------------------------",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}