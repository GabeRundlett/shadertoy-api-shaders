{
    "Shader": {
        "info": {
            "date": "1615718551",
            "description": "License CC0: Gooey distance field visualization\nWas trying to optimize my old Impulse logo but was bored with the simple visualization so played around a bit.\nGooey effect turned out quite nice so I share. Also quite cheap to compute",
            "flags": 0,
            "hasliked": 0,
            "id": "fssGR7",
            "likes": 14,
            "name": "Gooey distance field",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "mrange",
            "viewed": 452
        },
        "renderpass": [
            {
                "code": "// License CC0: Gooey distance field visualization\n//  Was trying to optimize my old Impulse logo but was bored\n//  with the simple visualization so played around a bit.\n//  Gooey effect turned out quite nice so I share\n//  Also quite cheap to compute\n\n#define RESOLUTION    iResolution\n#define PI            3.141592654\n#define TAU           (2.0*PI)\n#define TIME          iTime\n#define SCA(a)        vec2(sin(a), cos(a))\n#define ROT(a)        mat2(cos(a), sin(a), -sin(a), cos(a))\n\nconst vec2 sca0 = SCA(0.0);\n\n// IQ's smooth min\nfloat pmin(float a, float b, float k) {\n  float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n  return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat pmax(float a, float b, float k) {\n  return -pmin(-a, -b, k);\n}\n\nfloat circle(vec2 p, float r) {\n  return length(p) - r;\n}\n\n// IQ's box\nfloat box(vec2 p, vec2 b) {\n  vec2 d = abs(p)-b;\n  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n// IQ's horseshoe\nfloat horseshoe(vec2 p, vec2 c, float r, vec2 w) {\n  p.x = abs(p.x);\n  float l = length(p);\n  p = mat2(-c.x, c.y, \n            c.y, c.x)*p;\n  p = vec2((p.y>0.0)?p.x:l*sign(-c.x),\n           (p.x>0.0)?p.y:l );\n  p = vec2(p.x,abs(p.y-r))-w;\n  return length(max(p,0.0)) + min(0.0,max(p.x,p.y));\n}\n\n// https://stackoverflow.com/a/17897228/418488\nvec3 hsv2rgb(vec3 c) {\n  const vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n// https://mercury.sexy/hg_sdf/\nfloat mod1(inout float p, float size) {\n  float halfsize = size*0.5;\n  float c = floor((p + halfsize)/size);\n  p = mod(p + halfsize, size) - halfsize;\n  return c;\n}\n\nfloat lettere(inout vec2 pp, float off) {\n  vec2 p = pp;\n  pp.x -= 1.05+off;\n  p -= vec2(0.5, 0.5);\n  return min(box(p, vec2(0.4, 0.1)), max(circle(p, 0.5), -circle(p, 0.3)));\n}\n\nfloat letterI(inout vec2 pp, float off) {\n  vec2 p = pp;\n  pp.x -= 0.25+off;\n  p -= vec2(0.125, 0.75);\n  return box(p, vec2(0.125, 0.75));\n}\n\nfloat letterl(inout vec2 pp, float off) {\n  vec2 p = pp;\n  pp.x -= 0.2+off;\n  p -= vec2(0.10, 0.58);\n  return box(p, vec2(0.1, 0.58));\n}\n\nfloat letterm(inout vec2 pp, float off) {\n  vec2 p = pp;\n  pp.x -= 2.2+off;\n  p -= vec2(1.1, 0.5);\n  p.y = -p.y;\n  p.x = abs(p.x);\n  p -= vec2(0.5, 0.0);\n  float d = horseshoe(p, sca0, 0.5, vec2(0.5, 0.1));\n  return d;\n}\n\nfloat letterp(inout vec2 pp, float off) {\n  vec2 p = pp;\n  pp.x -= 1.05+off;\n  p -= vec2(0.55, 0.5);\n  float b = box(p - vec2(-0.45, -0.25), vec2(0.1, 0.75));\n  float c = abs(circle(p, 0.4)) - 0.1;\n  return min(b, c);\n}\n\nfloat letters(inout vec2 pp, float off) {\n  const mat2 rots1 = ROT(-PI/6.0-PI/2.0);\n  const mat2 rots2 = ROT(PI);\n  vec2 p = pp;\n  pp.x -= 0.875+off;\n  p -= vec2(0.435, 0.5);\n  p *= rots1;\n  float u = horseshoe(p - vec2(-0.25*3.0/4.0, -0.125/2.0), sca0, 0.375, vec2(0.2, 0.1));\n  p *= rots2;\n  float l = horseshoe(p - vec2(-0.25*3.0/4.0, -0.125/2.0), sca0, 0.375, vec2(0.2, 0.1));\n  return min(u,l);\n}\n\nfloat letteru(inout vec2 pp, float off) {\n  vec2 p = pp;\n  pp.x -= 1.2+off;\n  p -= vec2(0.6, 0.475);\n  return horseshoe(p - vec2(0.0, 0.125), sca0, 0.5, vec2(0.4, 0.1));\n}\n\nfloat impulse(vec2 p, float off) {\n  p += vec2(3.385+3.0*off, 0.5);\n  \n  float d = 1E6;\n  d = min(d, letterI(p, off));\n  d = min(d, letterm(p, off));\n  d = min(d, letterp(p, off));\n  d = min(d, letteru(p, off));\n  d = min(d, letterl(p, off));\n  d = min(d, letters(p, off));\n  d = min(d, lettere(p, off));\n\n  return d;\n}\n\nfloat df(vec2 p, float tm) {\n  const float z = 0.3;\n  p *= ROT(0.25*sin(tm));\n  float di = impulse(p/z, 0.275)*z;\n  float dy = p.y;\n  dy = abs(dy);\n  dy -= 0.04;\n  dy = abs(dy) - 0.02;\n  \n  float d = di;  \n  d = pmax(d, -dy, 0.0125);\n  return d;\n}\n\nvec3 postProcess(in vec3 col, in vec2 q)  {\n  col=pow(clamp(col,0.0,1.0),vec3(1.0/2.2)); \n  col=col*0.6+0.4*col*col*(3.0-2.0*col);  // contrast\n  col=mix(col, vec3(dot(col, vec3(0.33))), -0.4);  // satuation\n  col*=0.5+0.5*pow(19.0*q.x*q.y*(1.0-q.x)*(1.0-q.y),0.7);  // vigneting\n  return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 q = fragCoord/RESOLUTION.xy;\n  vec2 p = -1. + 2. * q;\n  vec2 sp = p;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n  float aa = 2.0/RESOLUTION.y;\n\n  float tm = TIME;\n  float d = df(p, tm);\n  \n  // Compute the \"gooey\" time. This will distort the distance field timewise \n  //  based on the distance from the surface\n  float gtm = tm-max(d, 0.0)*1.25;\n  float gd = df(p, gtm);\n\n  vec3 col = vec3(0.0);\n  const float per = 0.18;\n  gd -= per*0.625;\n  float nd = mod1(gd, per);\n  float h = fract(nd*per+0.6);\n  float s = 0.5*(1.0-0.5*tanh(0.5*dot(sp, sp)));\n  float v = 1.0-abs(gd/per);\n\n  col = hsv2rgb(vec3(h, s, v));\n  col = mix(col, pow(col, vec3(0.66)), smoothstep(-aa, aa, -d));\n  col = postProcess(col, q);\n  \n  fragColor = vec4(col, 1.0);\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}