{
    "Shader": {
        "info": {
            "date": "1670131429",
            "description": "y2k fractal",
            "flags": 0,
            "hasliked": 0,
            "id": "dsBXWR",
            "likes": 14,
            "name": "Graphic Design Experiment 5",
            "published": 3,
            "tags": [
                "graphicdesign",
                "cineshader",
                "y2k"
            ],
            "usePreview": 1,
            "username": "yasuo",
            "viewed": 2580
        },
        "renderpass": [
            {
                "code": "#define MAX_STEPS 100\n#define MAX_DIST 100.\n#define SURF_DIST .0005\n#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define B(p,s) max(abs(p).x-s.x,abs(p).y-s.y)\n#define Tri(p,s,a) max(-dot(p,vec2(cos(-a),sin(-a))),max(dot(p,vec2(cos(a),sin(a))),max(abs(p).x-s.x,abs(p).y-s.y)))\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n#define SPEED 200.\n#define ZERO (min(iFrame,0))\n#define PI 3.141592653589793\n\n#define FS 0.1 // font size\n#define FGS FS/5. // font grid size\n\n#define char_0 0\n#define char_1 1\n#define char_2 2\n#define char_3 3\n#define char_4 4\n#define char_5 5\n#define char_6 6\n#define char_7 7\n#define char_8 8\n#define char_9 9\n\nfloat cubicInOut(float t) {\n  return t < 0.5\n    ? 4.0 * t * t * t\n    : 0.5 * pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\nfloat getTime(float t, float duration){\n    return clamp(t,0.0,duration)/duration;\n}\n\n// thx iq! https://iquilezles.org/articles/distfunctions2d/\nfloat smin( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); \n}\n\n// thx iq! https://iquilezles.org/articles/distfunctions/\nfloat sdBox( vec3 p, vec3 b )\n{\n    vec3 q = abs(p) - b;\n    return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat char1(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(-FGS*2.,FGS*4.),vec2(FGS*3.,FGS));\n    \n    float d2 = B(p,vec2(FGS,FS));\n    d = min(d,d2);\n\n    d2 = B(p-vec2(0.,-FGS*4.),vec2(FS,FGS));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat char2(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(FGS*2.,FGS*4.),vec2(FGS*3.,FGS));\n    \n    float d2 = B(p-vec2(FGS*4.,FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    d2 = B(p-vec2(FGS*2.,0.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    \n    d2 = B(p-vec2(0.,-FGS*4.),vec2(FS,FGS));\n    d = min(d,d2);\n    \n    p-=vec2(-FGS*2.,FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p = prevP;\n    p-=vec2(-FGS*2.,-FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);    \n    \n    return d;\n}\n\nfloat char3(vec2 p) {\n    vec2 prevP = p;\n    \n    p.y = abs(p.y);\n    float d = B(p-vec2(0.,FGS*4.),vec2(FS,FGS));\n    \n    p = prevP;\n    p.x = abs(p.x);\n    float d2 = B(p-vec2(FGS*4.,-FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = B(p-vec2(FGS*2.,0.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    \n\n    p-=vec2(FGS*2.,FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);   \n\n    return d;\n}\n\nfloat char4(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(0.,-FGS*2.),vec2(FS,FGS));\n    \n    float d2 = B(p-vec2(-FGS*2.,0.),vec2(FGS,FS));\n    d = min(d,d2);\n    \n    d2 = B(p-vec2(FGS*2.,-FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n\n    return d;\n}\n\nfloat char5(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(0.,FGS*4.),vec2(FS,FGS));\n    \n    float d2 = B(p,vec2(FS,FGS));\n    d = min(d,d2);\n    \n    d2 = B(p-vec2(-FGS*4.,FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = B(p-vec2(-FGS*2.,-FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    \n    p-=vec2(FGS*2.,-FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat char6(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(FGS*2.,FGS*4.),vec2(FGS*3.,FGS));\n    \n    float d2 = B(p,vec2(FS,FGS));\n    d = min(d,d2);\n    \n    p-=vec2(-FGS*2.,FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p = prevP;\n    d2 = B(p-vec2(0.,-FGS*4.),vec2(FS,FGS));\n    d = min(d,d2);\n    \n    p.x = abs(p.x);\n    d2 = B(p-vec2(FGS*4.,-FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat char7(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p,vec2(FS,FGS));\n    \n    p*=Rot(radians(45.));\n    float d2 = B(p,vec2(FGS,FS*1.2));\n    d = min(d,d2);\n    \n    p = prevP;\n\n    \n    d2 = B(p-vec2(0., FGS*4.),vec2(FS,FGS));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat char8(vec2 p) {\n    vec2 prevP = p;\n    \n    p.y = abs(p.y);\n    float d = B(p-vec2(0., FGS*4.),vec2(FS,FGS));\n    \n    p = prevP;\n    p*=Rot(radians(45.));\n    float d2 = B(p,vec2(FGS,FS*1.2));\n    d = min(d,d2);\n    \n    p = prevP;\n    p*=Rot(radians(-45.));\n    d2 = B(p,vec2(FGS,FS*1.2));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat char9(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(FGS*4.,FGS*2.),vec2(FGS,FGS*3.));\n    \n    p = prevP;\n    float d2 = B(p-vec2(FGS*2.,FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n\n    d2 = B(p-vec2(-FGS*2.,-FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n    \n    d2 = B(p,vec2(FS,FGS));\n    d = min(d,d2);\n    \n    p-=vec2(-FGS*2.,FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p =prevP;    \n    p-=vec2(FGS*2.,-FGS*2.);\n    p*=Rot(radians(45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat char0(vec2 p) {\n    vec2 prevP = p;\n    \n    float d = B(p-vec2(-FGS*4.,0.),vec2(FGS,FS));\n    \n    float d2 = B(p-vec2(-FGS*2.,FGS*4.),vec2(FGS*3.,FGS));\n    d = min(d,d2);\n\n    d2 = B(p-vec2(0.0,-FGS*4.),vec2(FS,FGS));\n    d = min(d,d2);\n    \n    p-=vec2(FGS*2.,FGS*2.);\n    p*=Rot(radians(-45.));\n    d2 = B(p,vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    p =prevP;  \n    d2 = B(p-vec2(FGS*4.,-FGS*2.),vec2(FGS,FGS*3.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat checkChar(int targetChar, int char){\n    return 1.-abs(sign(float(targetChar) - float(char)));\n}\n\nfloat charMask(vec2 p, float d){\n    float a = radians(45.);\n    p = abs(p)-0.08;\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    return d;\n}\n\nfloat drawFont(vec2 p, int char){\n    float d = char0(p)*checkChar(char_0,char);\n    d += char1(p)*checkChar(char_1,char);\n    d += char2(p)*checkChar(char_2,char);\n    d += char3(p)*checkChar(char_3,char);\n    d += char4(p)*checkChar(char_4,char);\n    d += char5(p)*checkChar(char_5,char);\n    d += char6(p)*checkChar(char_6,char);\n    d += char7(p)*checkChar(char_7,char);\n    d += char8(p)*checkChar(char_8,char);\n    d += char9(p)*checkChar(char_9,char);\n    \n    d = charMask(p,d);\n    \n    #ifdef OUTLINE\n        return abs(d)-0.005;\n    #endif\n    \n    return d;\n}\n\nfloat y2kItem0(vec2 p){\n    vec2 prevP = p;\n    float thick = 0.005;\n    float size = 0.1;\n    float d = abs(length(p)-size)-thick;\n    p.x*=2.0;\n    p.x = abs(p.x)-0.06;\n    float d2 = length(p)-0.02;\n    d = min(d,d2);\n    p = prevP;\n    d2 = abs(length(p)-0.08)-thick;\n    d2 = max(p.y+0.03,d2);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat y2kItem1(vec2 p){\n    vec2 prevP = p;\n    float thick = 0.005;\n    float size = 0.1;\n    float d = abs(length(p)-size)-thick;\n    p.x*=2.0;\n    float d2 = abs(length(p)-size)-thick;\n    d = min(d,d2);\n    p = prevP;\n    \n    p.y*=2.0;\n    d2 = abs(length(p)-size)-thick;\n    d = min(d,d2);\n    \n    p = prevP;\n    \n    d2 = max(abs(p.x)-size,abs(p.y)-thick);\n    d = min(d,d2);\n    d2 = max(abs(p.y)-size,abs(p.x)-thick);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat y2kItem2_1(vec2 p){\n    p.x*=2.;\n    vec2 prevP = p;\n    float size = 0.1;\n    p.x*=1.5;\n    float d = length(p)-size;\n    p-=vec2(0.025,-0.01);\n    p.x*=1.1;\n    float mask = length(p)-(size);\n    d = max(-mask,d);\n    return d;\n}\n\nfloat y2kItem2_2(vec2 p){\n    vec2 prevP = p;\n    p-=vec2(-0.01,0.015);\n    float d = y2kItem2_1(p);\n    p = prevP;\n    p+=vec2(-0.01,0.015);\n    p*=-1.;\n    float d2 = y2kItem2_1(p);\n    d = min(d,d2);\n    return d;\n}\n\nfloat y2kItem2(vec2 p){\n    p*=Rot(radians(5.));\n    vec2 prevP = p;\n    p*=Rot(radians(45.));\n    float d = y2kItem2_2(p);\n    p = prevP;\n    p*=Rot(radians(-45.));\n    float d2 = y2kItem2_2(p);\n    d = min(d,d2);\n    return d;\n}\n\nfloat y2kItem3(vec2 p){\n    p*=Rot(radians(20.*iTime));\n    vec2 prevP = p;\n    float thick = 0.005;\n    float size = 0.1;\n    p.x*=3.;\n    float d = abs(length(p)-size)-thick;\n    p = prevP;\n   \n    p.y*=3.;\n    float d2 = abs(length(p)-size)-thick;\n    d = min(d,d2);\n    p = prevP;\n    p*=Rot(radians(-45.));\n    p.x*=3.;\n    d2 = abs(length(p)-size)-thick;\n    d = min(d,d2);\n    p = prevP;\n    p*=Rot(radians(45.));\n    p.x*=3.;\n    d2 = abs(length(p)-size)-thick;\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat y2kItem4(vec2 p){\n    vec2 prevP = p;\n    float size = 0.1;\n    \n    float d = B(p,vec2(size));\n    p = abs(p)-size;\n    float d2 = length(p)-size;\n    d = max(-d2,d);\n    \n    return d;\n}\n\nfloat y2kItem5_1(vec2 p){\n    vec2 prevP = p;\n    float size = 0.1;\n    \n    float d = B(p,vec2(size*2., size));\n    float a = radians(-45.);\n    p.x = abs(p.x)-0.2;\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    \n    return d;\n}\n\nfloat y2kItem5(vec2 p){\n    vec2 prevP = p;\n    float size = 0.1;\n\n    float d = B(p,vec2(size*5.5, size));\n    float a = radians(-20.);\n    p.x-=0.5;\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    p = prevP;\n    a = radians(-20.);\n    p.x+=0.5;\n    d = max(-dot(p,vec2(cos(a),sin(a))),d);\n    p = prevP;\n    d = max(-y2kItem5_1(p-vec2(-0.25,0.13)),d);\n    p-=vec2(0.25,-0.13);\n    p.y*=-1.;\n    d = max(-y2kItem5_1(p),d);\n    \n    p = prevP;\n    \n    p*=Rot(radians(45.));\n    p.x = abs(p.x)-0.04;\n    d = max(-(abs(p.x)-0.02),d);\n    \n    return abs(d)-0.005;\n}\n\nfloat y2kItem6(vec2 p, float dir){\n    p*=2.;\n    p.x+=iTime*0.2*dir;\n    p.x = mod(p.x,0.4)-.2;\n    p.x = abs(p.x)-0.1;\n    p.x*=-1.;\n    vec2 prevP = p;\n    float d = B(p,vec2(0.05,0.01));\n    p-=vec2(0.04,0.03);\n    float d2 = B(p,vec2(0.01,0.02));\n    d = min(d,d2);\n    p = prevP;\n    p-=vec2(-0.01,0.04);\n    d2 = B(p,vec2(0.06,0.01));\n    d = min(d,d2);\n    p = prevP;\n    p-=vec2(-0.08,0.0);\n    d2 = B(p,vec2(0.01,0.05));\n    d = min(d,d2);\n    p = prevP;\n    p-=vec2(0.01,-0.04);\n    d2 = B(p,vec2(0.08,0.01));\n    d = min(d,d2);\n    p = prevP;\n    p-=vec2(0.08,0.0);\n    d2 = B(p,vec2(0.01,0.05));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat y2kItem7(vec2 p){\n    vec2 prevP = p;\n    p*=Rot(radians(iTime*-25.));\n    p = DF(p,1.25);\n    p -= vec2(0.032);\n    p*=Rot( radians(45.));\n    float d = B(p,vec2(0.02,0.05));\n    p.x-=0.015;\n    p.y-=0.02;\n    p.y*=-1.;\n    float d2 = Tri(p,vec2(0.04,0.03),radians(45.));\n    d = min(d,d2);\n    \n    return abs(d)-0.005;\n}\n\nfloat y2kItem8(vec2 p){\n    vec2 prevP = p;\n    \n    p.x+=iTime*0.05;\n    p.x+=0.02;\n    p.x = mod(p.x,0.04)-0.02;\n    p.x+=0.02;\n    p*=Rot(radians(-90.));\n    float d = Tri(p,vec2(0.04,0.03),radians(45.));\n    p = prevP;\n    p.x+=iTime*0.05;\n    p.x+=0.02;\n    p.x = mod(p.x,0.04)-0.02;\n    p.x+=0.02;\n    p.x-=0.015;\n    p*=Rot(radians(-90.));\n    float d2 = Tri(p,vec2(0.04,0.03),radians(45.));\n    d = max(-d2,d);\n    \n    p = prevP;\n    d = max(abs(p.x)-0.06,d);\n    float a = radians(-45.);\n    p.x+=0.02;\n    p.y=abs(p.y);\n    d = max(-dot(p,vec2(cos(a),sin(a))),d);\n    \n    return d;\n}\n\nfloat y2kLine(vec2 p){\n    vec2 prevP = p;\n    \n    p*=3.;\n    p.x-=iTime*0.3;\n    p.x = mod(p.x,2.2)-1.1;\n    p.x-=0.45;\n    p.x+=1.;\n    float d = y2kItem5(p);\n    p.x-=0.65;\n    float d2 = y2kItem0(p);\n    d = min(d,d2);\n    p.x-=0.22;\n    \n    d2 = char0(p);\n    d2 = charMask(p,d2);\n    d = min(d,d2);\n    p.x-=0.22;\n    d2 = drawFont(p,int(mod(iTime*5.+3.,10.0)));\n    d = min(d,d2);\n    p.x-=0.22;\n    d2 = drawFont(p,int(mod(iTime*6.+4.,10.0)));\n    d = min(d,d2);\n    p.x-=0.23;\n    d2 = y2kItem7(p);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat y2kFractal(vec2 p){\n    vec2 prevP = p;\n    float d = 10.;\n    for(float i = 0.; i<3.; i++){\n        p*=Rot(radians(i*30.0+sin(i)*20.));\n        p = abs(p)-0.2;\n        p.y+=0.05;\n        float d2 = y2kLine(p);\n        d = min(d,d2);\n    }\n    \n    p = prevP;\n    d = max(abs(p.y)-0.42,d);\n    \n    return d;\n}\n\nfloat drawGraphic(vec2 p){\n    vec2 prevP = p;\n    float d = y2kFractal(p);\n    p.y+=0.45;\n    p.y*=-1.;\n    float d2 = y2kItem6(p,1.);\n    d = min(d,d2);\n    p = prevP;\n    p.y-=0.45;\n    d2 = y2kItem6(p,-1.);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x=abs(p.x)-0.35;\n    p*=1.8;\n    d2 = y2kItem1(p);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x=abs(p.x)-0.72;\n    p*=1.8;\n    d2 = y2kItem0(p);\n    d = min(d,d2);    \n    \n    p = prevP;\n    p.y=abs(p.y)-0.31;\n    p*=1.2;\n    d2 = y2kItem2(p);\n    d = min(d,d2);\n    p.x=abs(p.x)-0.15;\n    p*=2.5;\n    d2 = y2kItem4(p);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x=abs(p.x)-0.58;\n    p.y = abs(p.y)-0.3;\n    p*=1.5;\n    d2 = y2kItem3(p);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x=abs(p.x)-0.47;\n    p.y = abs(p.y)-0.25;\n    p*=Rot(radians(45.));\n    p*=3.;\n    d2 = y2kItem4(p);\n    d = min(d,d2);\n        \n    p = prevP;\n    p.x=abs(p.x)-0.69;\n    p.y = abs(p.y)-0.37;\n    p*=3.;\n    d2 = y2kItem4(p);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x=abs(p.x)-0.23;\n    d2 = y2kItem8(p);\n    d = min(d,d2);\n    \n    p = prevP;\n    d = max(abs(p.x)-0.842,d);\n    return d;\n}\n\nfloat getRotAnimationValue(){\n    float frame = mod(iTime,15.0);\n    float time = frame;\n    float val = 0.;\n    float duration = 1.2;\n    if(frame>=1. && frame<4.){\n        time = getTime(time-1.,duration);\n        val = cubicInOut(time)*90.;\n    } else if(frame>=4. && frame<7.){\n        time = getTime(time-4.,duration);\n        val = 90.+cubicInOut(time)*90.;\n    } else if(frame>=7. && frame<10.){\n        time = getTime(time-7.,duration);\n        val = 180.+cubicInOut(time)*90.;\n    } else if(frame>=10. ){\n        time = getTime(time-10.,duration);\n        val = 270.+cubicInOut(time)*90.;\n    }\n    return val;\n}\n\nfloat getGlitchAnimationValue(){\n    float frame = mod(iTime,15.0);\n    float time = frame;\n    float val = 0.;\n    float duration = 1.6;\n    if(frame>=1. && frame<4.){\n        time = getTime(time-1.,duration);\n        val = 1.0-cubicInOut(time)*1.0;\n    } else if(frame>=4. && frame<7.){\n        time = getTime(time-4.,duration);\n        val = 1.0-cubicInOut(time)*1.0;\n    } else if(frame>=7. && frame<10.){\n        time = getTime(time-7.,duration);\n        val = 1.0-cubicInOut(time)*1.0;\n    } else if(frame>=10. ){\n        time = getTime(time-10.,duration);\n        val = 1.0-cubicInOut(time)*1.0;\n    }\n    return val;\n}\n\nvec3 boxAnim(vec3 p){\n    float val = getRotAnimationValue();\n    p.xz *= Rot(radians(val));\n    \n    return p;\n}\n\nvec2 GetDist(vec3 p) {\n    vec3 prevP = p;\n    \n    p = boxAnim(p);\n    float d = sdBox(p,vec3(0.211,0.12,0.211));\n    \n    return vec2(d,0);\n}\n\nvec2 RayMarch(vec3 ro, vec3 rd, float side, int stepnum) {\n    vec2 dO = vec2(0.0);\n    \n    for(int i=0; i<stepnum; i++) {\n        vec3 p = ro + rd*dO.x;\n        vec2 dS = GetDist(p);\n        dO.x += dS.x*side;\n        dO.y = dS.y;\n        \n        if(dO.x>MAX_DIST || abs(dS.x)<SURF_DIST) break;\n    }\n    \n    return dO;\n}\n\nvec3 GetNormal(vec3 p) {\n    float d = GetDist(p).x;\n    vec2 e = vec2(.001, 0);\n    \n    vec3 n = d - vec3(\n        GetDist(p-e.xyy).x,\n        GetDist(p-e.yxy).x,\n        GetDist(p-e.yyx).x);\n    \n    return normalize(n);\n}\n\nvec3 R(vec2 uv, vec3 p, vec3 l, float z) {\n    vec3 f = normalize(l-p),\n        r = normalize(cross(vec3(0,1,0), f)),\n        u = cross(f,r),\n        c = p+f*z,\n        i = c + uv.x*r + uv.y*u,\n        d = normalize(i-p);\n    return d;\n}\n\nvec3 materials(int mat, vec3 n, vec3 rd, vec3 p, vec3 col){\n    col = vec3(0.0);\n    p = boxAnim(p);\n    vec2 uv = p.xy;\n    vec2 prevUV = uv;\n    \n    if(p.z>=0.){\n        // back\n        uv.x*=-1.;\n        float d = drawGraphic(uv*4.);\n        col = mix(col,vec3(1.),S(d,0.0));\n    } else {\n        // front\n        float d = drawGraphic(uv*4.);\n        col = mix(col,vec3(1.),S(d,0.0));\n    }\n    \n    uv = p.yz;\n    \n    if(p.x>=0.){\n        // right\n        uv.y*=-1.;\n        uv*=Rot(radians(90.));\n        float d = drawGraphic(uv*4.);\n        col = mix(col,vec3(1.),S(d,0.0));   \n    } else {\n        // left\n        uv*=Rot(radians(90.));\n        float d = drawGraphic(uv*4.);\n        col = mix(col,vec3(1.),S(d,0.0)); \n    }\n        \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 prevUV = uv;\n    vec2 m =  iMouse.xy/iResolution.xy;\n    \n    vec3 ro = vec3(0, 0, -0.45);\n    \n    /* // for debug\n    if(iMouse.z>0.){\n        ro.yz *= Rot(m.y*3.14+1.);\n        ro.y = max(-0.9,ro.y);\n        ro.xz *= Rot(-m.x*6.2831);\n    }\n    */\n    \n    vec3 rd = R(uv, ro, vec3(0,0.0,0), 1.0);\n    vec2 d = RayMarch(ro, rd, 1.,MAX_STEPS);\n    vec3 col = vec3(.0);\n    \n    if(d.x<MAX_DIST) {\n        vec3 p = ro + rd * d.x;\n        vec3 n = GetNormal(p);\n        int mat = int(d.y);\n        col = materials(mat,n,rd,p,col);\n    }\n    \n    // gamma correction\n    col = pow( col, vec3(0.9545) );   \n    \n    fragColor = vec4(sqrt(col),1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}