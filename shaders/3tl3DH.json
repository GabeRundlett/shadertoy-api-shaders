{
    "Shader": {
        "info": {
            "date": "1590277281",
            "description": "noise",
            "flags": 0,
            "hasliked": 0,
            "id": "3tl3DH",
            "likes": 1,
            "name": "oil003",
            "published": 3,
            "tags": [
                "noise"
            ],
            "usePreview": 0,
            "username": "yy2901",
            "viewed": 245
        },
        "renderpass": [
            {
                "code": "vec2 random2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvec3 circle(in vec2 st,in vec2 pos,in float radius){\n    float d = length(st-pos);\n    return vec3(smoothstep(radius-0.1,radius,d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=0.5;\n    uv.x*=iResolution.x/iResolution.y;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float dense = 0.8;\n    \n    vec2 center = uv+vec2(iTime*0.1,-iTime*0.5)+vec2(\n        1.0*noise(uv*2.0+vec2(iTime*0.1)), 1.0*noise(uv*2.0-vec2(iTime*0.1))\n    );\n    center = mod(center,vec2(dense));\n    vec2 center1 = uv+vec2(iTime*0.1,-iTime*0.5)+vec2(\n    \t1.0*noise(uv*2.0+vec2(iTime*0.1+0.1,iTime*0.1)), 1.0*noise(uv*2.0-vec2(iTime*0.1,iTime*0.1+0.1))\n    );\n    center1 = mod(center1,vec2(dense));\n    vec2 center2 = uv+vec2(iTime*0.1,-iTime*0.5)+vec2(\n    \t1.0*noise(uv*2.0+vec2(iTime*0.1+0.1)), 1.0*noise(uv*2.0-vec2(iTime*0.1+0.1))\n    );\n    center2 = mod(center2,vec2(dense));\n    vec3 circle0 = circle(center,vec2(dense/2.0),0.4);\n    vec3 circle1 = circle(center1,vec2(dense/2.0),0.4);\n    vec3 circle2 = circle(center2,vec2(dense/2.0),0.4);\n    \n    vec3 col =vec3(1.0-circle0.x,0.,0.);\n    col+=vec3(0.,1.0-circle1.x,0.);\n    col+=vec3(0.,0.,1.0-circle2.x);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}