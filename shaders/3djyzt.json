{
    "Shader": {
        "info": {
            "date": "1587337087",
            "description": "I hope somewhere out there something like this is happening all the time for no reason at all.",
            "flags": 32,
            "hasliked": 0,
            "id": "3djyzt",
            "likes": 13,
            "name": "S p a c e   T r a v e l",
            "published": 3,
            "tags": [
                "3d",
                "raymarch"
            ],
            "usePreview": 0,
            "username": "Plento",
            "viewed": 406
        },
        "renderpass": [
            {
                "code": "vec2 R;\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    R = iResolution.xy;\n    vec2 nuv = vec2(u.xy - 0.5*R.xy)/R.y;\n    vec2 uv = u / R;\n    \n    vec3 col = texture(iChannel0, u / R).xyz;\n    \n    float h = 0.0025;\n    float r = texture(iChannel0, uv+vec2(h, h)).x;\n    float g = texture(iChannel0, uv+vec2(0., 0.)).y;\n    float b = texture(iChannel0, uv+vec2(-h, -h)).z;\n    \n    float val = smoothstep(0.35, 0.0, length(nuv));\n    col = mix(col, vec3(r, g, b), val);\n   \n    f = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "// Plento\nvec2 R;\n\n#define ss(a, b, x) smoothstep(a, b, x)\nvec3 hash33(vec3 p3){\n\tp3 = fract(p3 * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy + p3.yxx)*p3.zyx);\n}\n\nmat2 rot(float a) {\n    return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\n#define doorX min(min(mod(iTime*.5, 2.), 0.4), mod(-iTime*.5, 2.))\n#define count floor(mod(iTime/4., 3.))\n\nfloat sdBox( vec3 p, vec3 b ){\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\nfloat sdTorus( vec3 p, vec2 t ){\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  return length(q)-t.y;\n}\n\nfloat map(vec3 rp){\n    float d = 999.;\n    \n    d = min(d, sdBox(rp - vec3(0.0, -0.6, 0.0), vec3(1., 0.1, 1.)));\n    d = min(d, sdBox(rp - vec3(0.0, 0.6, 0.0), vec3(1., 0.1, 1.)));\n    d = min(d, sdBox(rp - vec3(0.8, 0.0, 0.0), vec3(.1, .6, 1.0)));\n    d = min(d, sdBox(rp - vec3(-0.8, 0.0, 0.0), vec3(.1, .6, 1.0)));\n    \n    // Doors\n    d = min(d, sdBox(rp - vec3(0.7 + doorX, 0.0, 1.0), vec3(.7, .7, 0.01)));\n    d = min(d, sdBox(rp - vec3(-0.7 - doorX, 0.0, 1.0), vec3(.7, .7, 0.01)));\n    \n    vec3 p = rp - vec3(0., 0., 7.);\n    \n    if(count == 0.){\n        p.xz *= rot(iTime);\n    \td = min(d, sdBox(p, vec3(1., 1., 1.)));\n    }\n    else if(count == 1.){\n        p.xz *= rot(iTime*.4);\n        p = mod(p, vec3(2))-vec3(2)*0.5;\n        d = min(d, length(p) - 0.3);\n    }\n    else if(count == 2.)\n    {\n        p.yz *= rot(iTime*1.7 + p.x*1.4);\n     \td = min(d, sdTorus(p, vec2(1.4, 0.2)));   \n        \n    }\n        \n    return d;\n}\n\nvec3 normal( in vec3 pos ){\n    vec2 e = vec2(0.002, -0.002);\n    return normalize(\n        e.xyy * map(pos + e.xyy) + \n        e.yyx * map(pos + e.yyx) + \n        e.yxy * map(pos + e.yxy) + \n        e.xxx * map(pos + e.xxx));\n}\n\nfloat march(vec3 rd, vec3 ro){\n \tfloat t = 0., d = 0.;   \n    \n    for(int i = 0; i < 64; i++){\n    \td = map(ro + rd*t); \t   \n        if(abs(d) < .002 || t > 64.){break;}\n        \n        t += d * .85;\n    }\n    \n    return t;\n}\n\nvec3 bg(vec3 rd){\n    rd.xy *= rot(iTime*0.15 - rd.z*5.);\n    vec3 col = vec3(0);\n    float scl = mod(-iTime*.1, 0.5);\n    float scl2 = mod(-iTime*.1 + .25, 0.5);\n    \n    col += ss(0.86, 0.99, texture(iChannel0, scl*rd.xy).x);\n    col *= ss(0.4, 0.1, scl);\n    \n    col += ss(0.86, 0.99, texture(iChannel0, scl2*rd.xy).x);\n    col *= ss(0.4, 0.1, scl2*0.65);\n    \n    return col;\n}\n\n\nvec3 color(vec3 p, vec3 rd, vec3 n, float t){\n    vec3 lp = vec3(0.2, -9.0, 4.0);\n    vec3 ld = normalize(lp-p);\n   \tvec3 ref = reflect(rd, n );\n    \n    float faloff = 1.-exp(-(4. / length(lp - p)));\n    float dom = ss(-0.0, 0.3, ref.y+.1);\n    float dif = max(dot(n, ld), .035);\n    \n    vec3 col = vec3(0);\n    vec3 mat = vec3(0);\n    vec3 lights = ((.15*dom*vec3(0.7,0.7,0.9)*dom) + (1.75*dif * faloff));\n    \n    if(p.z < 1.2){\n    \tif(abs(n.y) > 0.5){\n        \tvec2 id = floor(p.xz*7.);\n        \tfloat chk = mod(id.x+id.y,2.);\n            \n        \tcol = mix(vec3(0.1, 0.2, 0.3), vec3(0),chk);\n        \t\n    \t\tfloat x = abs(p.x);\n    \t\tfloat val = ss(x, x+0.03, doorX);\n        \tcol *= val+.02;\n        \t\n        \tcol = mix(col, (bg(ref)+0.01), val*.11*chk);   \n        }\n        else{\n    \t\tcol = vec3(.4)*abs(sin(p.y*3.16 + 1.57))+.0;\n    \t\tcol *= lights;\n        }\n    }\n    else{\n        if(count == 0.)\n            mat = vec3(0.8, 0.2, 0.2);\n        else if(count == 1.){\n            p.z -= 7.;\n            p.xz *= rot(iTime*.4);\n            mat = hash33(floor((p-.5)/3.)*102.4+342.);\n        }\n        else if(count == 2.)\n            mat = vec3(0.6, 0.4, 0.0);\n        \n        col = mat * lights;\n    \tcol = mix(col, bg(rd), step(10., t));   \t   \n    }\n    \n\treturn col;   \n}\n\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    R = iResolution.xy;\n    vec2 uv = vec2(u.xy - 0.5*R.xy)/R.y;\n    \n    vec3 rd = normalize(vec3(uv, 0.6));\n    vec3 ro = vec3(0., 0., -.4);\n    \n    rd.xy *= rot(sin(iTime*2.)*.07);\n    rd.yz *= rot(cos(iTime*2.)*.07);\n    \n    float t = march(rd, ro);\n    \n    vec3 n = normal(ro + rd*t);\n    vec3 col = color(ro + rd*t, rd, n, t);\n    \n    col *= ss(0.5, 0.3, abs(uv.y));\n    \n    f = vec4(sqrt(clamp(col, .0, 1.)), 1.);\n    \n}\n\n\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 17,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}