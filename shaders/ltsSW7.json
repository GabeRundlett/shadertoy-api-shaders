{
    "Shader": {
        "info": {
            "date": "1437322050",
            "description": "an example of a Honeycomb noise, generator without sin for realization on CPU, move the mouse up and down to zoom, left and right to mix several layers.",
            "flags": 0,
            "hasliked": 0,
            "id": "ltsSW7",
            "likes": 23,
            "name": "Honeycomb noise",
            "published": 3,
            "tags": [
                "procedural",
                "2d",
                "noise"
            ],
            "usePreview": 0,
            "username": "foxes",
            "viewed": 1836
        },
        "renderpass": [
            {
                "code": "\n\nfloat hash(float x){ return fract(fract(x*0.31830988618379067153776752674503)*fract(x*0.15915494309189533576888376337251)*265871.1723); }\nvec3 hash(vec3 x){ return fract(fract(x*0.31830988618379067153776752674503)*fract(x*0.15915494309189533576888376337251)*265871.1723); }\n\nfloat hash2(vec2 x) { return hash(dot(mod(x,100.0),vec2(127.1,311.7))); }\nvec3 hash3x2(vec2 x1,vec2 x2,vec2 x3) { return hash(vec3(dot(mod(x1,100.0),vec2(127.1,311.7)),dot(mod(x2,100.0),vec2(127.1,311.7)),dot(mod(x3,100.0),vec2(127.1,311.7)))); }\n\n//float hash(float x) { return 0.0; }\n//float hash2(vec2 x) { return 0.0; }\n\nvec4 hash4( vec4 n ) { return fract(sin(n)*753.5453123); }\n\nfloat noise2( vec2 x )\n{\n    vec3 p = floor(vec3(x,x.y+0.5));\n    vec3 f = fract(vec3(x,x.y+0.5));\n    \n    //f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y * 157.0;\n    vec4 s1=hash4(vec4(n)+vec4(0.0,1.0,157.0,158.0));\n    s1.xy=mix(s1.xz,s1.yw,vec2(f.x));\n    return mix(s1.x,s1.y,f.y);\n}\n\nfloat noiseHoneycomb(vec2 i) {\n    vec2 c3;\n    i.x*=1.1547005383792515290182975610039;\n    c3.x=floor(i.x)+1.0f;\n    vec2 b=vec2(i.y+i.x*0.5,i.y-i.x*0.5);\n    c3.y=floor(b.x)+floor(b.y);\n    vec3 o=fract(vec3(i.x,b.xy));\n    \n    vec4 s;\n    vec3 m1=hash3x2(c3+vec2(1.0,0.0),c3+vec2(-1.0,-1.0),c3+vec2(-1.0,1.0));\n    vec3 m2=hash3x2(c3,c3+vec2(0.0,1.0),c3+vec2(0.0,-1.0));\n    vec3 m3=hash3x2(c3+vec2(-1.0,0.0),c3+vec2(1.0,1.0),c3+vec2(1.0,-1.0));\n    vec3 m4=vec3(m2.x,m2.z,m2.y);\n    \n    vec3 w1=vec3(o.x,(1.0-o.y),o.z);\n    vec3 w2=vec3((1.0-o.x),o.y,(1.0-o.z));\n\n    vec2 d=fract(c3*0.5)*2.0;\n    \n    s=fract(vec4(dot(m1,w1),dot(m2,w2),dot(m3,w2),dot(m4,w1)));\n\n    return fract(mix(mix(s.z,s.w,d.x),mix(s.x,s.y,d.x),d.y));\n}\n\nfloat noiseHoneycombStar(vec2 i) {\n    vec2 c3;\n    i.x*=1.1547005383792515290182975610039;\n    c3.x=floor(i.x)+1.0f;\n    vec2 b=vec2(i.y+i.x*0.5,i.y-i.x*0.5);\n    c3.y=floor(b.x)+floor(b.y);\n    vec3 o=fract(vec3(i.x,b.xy));\n    \n    vec4 s;\n    vec3 m1=vec3(hash2(c3+vec2(1.0,0.0)),hash2(c3+vec2(-1.0,-1.0)),hash2(c3+vec2(-1.0,1.0)));\n    vec3 m2=vec3(hash2(c3),hash2(c3+vec2(0.0,1.0)),hash2(c3+vec2(0.0,-1.0)));\n    vec3 m3=vec3(hash2(c3+vec2(-1.0,0.0)),hash2(c3+vec2(1.0,1.0)),hash2(c3+vec2(1.0,-1.0)));\n    vec3 m4=vec3(m2.x,m2.z,m2.y);\n    \n    vec3 w1=vec3(o.x,(1.0-o.y),o.z);\n    vec3 w2=vec3((1.0-o.x),o.y,(1.0-o.z));\n    w1=w1*w1*(3.0-2.0*w1);\n    w2=w2*w2*(3.0-2.0*w2);\n\n    vec2 d=fract(c3*0.5)*2.0;\n    \n    s=fract(vec4(dot(m1,w1),dot(m2,w2),dot(m3,w2),dot(m4,w1)));\n\n    return fract(mix(mix(s.z,s.w,d.x),mix(s.x,s.y,d.x),d.y));\n}\n\nvoid mainImage(out vec4 o, vec2 uv)\n{\n\tuv=uv/iResolution.y/.1;\n    \n    float mx = iMouse.x>0.0?iMouse.x/iResolution.x:0.5;\n    float my = iMouse.y>0.0?iMouse.y/iResolution.y:0.5;\n    \n    float time=iTime*5.0 * my;\n    \n    vec2 i=(uv-vec2(9.0,5.0))*my*10.0+vec2(time,time*0.5);\n    \n    if (uv.y<my*10.0)\n    {\n        if (uv.x<mx*17.8) {\n        \to.xyz=vec3(noiseHoneycomb(i));\n        }\n    \telse {\n        \to.xyz=vec3(noiseHoneycomb(i)*0.3+noiseHoneycomb(i*6.0)*0.25+noiseHoneycomb(i*16.0)*0.2+noiseHoneycomb(i*32.0)*0.2);\n        \to.xyz=o.xyz*0.7+noiseHoneycomb(i*0.25)*0.2;\n    \t}\n    } else {\n        if (uv.x<mx*17.8) {\n        \to.xyz=vec3(noiseHoneycombStar(i));\n        }\n    \telse {\n        \to.xyz=vec3(noiseHoneycombStar(i)*0.3+noiseHoneycombStar(i*6.0)*0.25+noiseHoneycombStar(i*16.0)*0.2+noiseHoneycombStar(i*32.0)*0.2);\n        \to.xyz=o.xyz*0.7+noiseHoneycombStar(i*0.25)*0.2;\n    \t}\n    }\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}