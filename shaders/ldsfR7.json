{
    "Shader": {
        "info": {
            "date": "1495502148",
            "description": "13/100",
            "flags": 0,
            "hasliked": 0,
            "id": "ldsfR7",
            "likes": 2,
            "name": "13/100",
            "published": 3,
            "tags": [
                "blob"
            ],
            "usePreview": 0,
            "username": "yahe",
            "viewed": 524
        },
        "renderpass": [
            {
                "code": "#define E 40.0\n#define PI 3.1415926535897932384626433832795\n\nfloat random (in vec2 st) { \n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                 * 43758.5453123);\n}\n\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n    vec2 u = f*f*(3.0-2.0*f);\n\n    // Mix 4 coorners porcentages\n    return mix(a, b, u.x) + \n            (c - a)* u.y * (1.0 - u.x) + \n            (d - b) * u.x * u.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = vec2(fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y ;\n\t\n    uv *= 2.;\n    \n    float n = noise(uv);\n    \n\tfloat t00 = sin (iTime);\n\tfloat t01 = sin (iTime+ 2.*PI/3.);\n\tfloat t02 = sin (iTime+4.*PI/3.);\n    \n\tfloat t10 = cos (iTime);\n\tfloat t11 = cos (iTime+2.*PI/3.);\n\tfloat t12 = cos (iTime+4.*PI/3.);\n    \n\tfloat t2 = sin (iTime/1.2);\n\tfloat t3 = cos (iTime/.8);\n\t\n\tvec2 p0 = vec2 (t00*t2, t10*t2) ;\n\tvec2 p1 = vec2 (t01*t2, t11*t2) ;\n\tvec2 p2 = vec2 (t02*t2, t12*t2) ;\n    \n    \n\tvec2 p3 = vec2 (t00*t3, t10*t3) ;\n\tvec2 p4 = vec2 (t01*t3, t11*t3) ;\n\tvec2 p5 = vec2 (t02*t3, t12*t3) ;\n\t\n\tfloat a = 1.0/distance (uv, p0);\n\tfloat b = 1.0/distance (uv, p1);\n\tfloat c = 1.0/distance (uv, p2);\n\tfloat d = 1.0/distance (uv, p3);\n\tfloat e = 1.0/distance (uv, p4);\n\tfloat f = 1.0/distance (uv, p5);\n\t\n\tfloat g = 1.0*n - pow (1.0/(a+b+c+d+e+f), E)*pow (15.0, E*0.7);\n\t\n\tvec4 col = vec4 (a*d, b*e, c*f, 1.0) * g;\n    \n    fragColor = mix(vec4(uv, 0.5+0.5*sin(iTime),1.0), col, 0.5);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}