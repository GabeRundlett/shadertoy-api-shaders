{
    "Shader": {
        "info": {
            "date": "1681839793",
            "description": "added time and mouse factors to rotational symmetry2-2 by Acre https://shadertoy.com/view/csySWG\nit's always more interesting with time & mouse ;)",
            "flags": 0,
            "hasliked": 0,
            "id": "ctc3Rr",
            "likes": 18,
            "name": " time*mouse * rot symmetry2-2",
            "published": 3,
            "tags": [
                "2d"
            ],
            "usePreview": 0,
            "username": "timmaffett",
            "viewed": 271
        },
        "renderpass": [
            {
                "code": "// Fork of \" rotational symmetry2-2\" by Acre. https://shadertoy.com/view/csySWG\n// 2023-04-18 17:38:51\n\n#define iTime (iTime/20.0)   // adjust divisor to speed up or slow down\n\nfloat sdCircle( in vec2 p, in float r ) \n{\n    return length(p)-r;\n}\n\nvec3 poison_apple=vec3(0.635,0.0,0.38);\nvec3 teal_blue=vec3(0.0,0.329,0.533);\nvec3 misty_green=vec3(0.811,0.894,0.819);\nvec3 darkblue_green=vec3(0.0,0.435,0.482);\nvec3 medium_gray=vec3(0.623,0.627,0.627);  \n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 mouse = (iMouse.xy == vec2(0.)) ? vec2(1.0) : iMouse.xy/iResolution.xy;\n    \n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    vec3 col;\n    vec2 vec;\n    float d;\n    for(float i=0.0;i<60.0;i++)\n    {\n        vec=vec2(cos(i*iTime)*(i*0.04*mouse.y),sin(i*iTime)*(i*0.04*mouse.x));\n\n        d=sdCircle(p+vec,i*0.07);\n\n        col=(d>0.0&&mod(i,5.0)==0.) ? teal_blue      : col;\n        col=(d>0.0&&mod(i,5.0)==1.) ? poison_apple   : col;\n        col=(d>0.0&&mod(i,5.0)==2.) ? misty_green    : col;\n        col=(d>0.0&&mod(i,5.0)==3.) ? darkblue_green : col;\n        col=(d>0.0&&mod(i,5.0)==4.) ? medium_gray    : col;\n        col = mix(col, vec3(0.0), smoothstep(0.01,0.0,abs(d)) );\n\n    }\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}