{
    "Shader": {
        "info": {
            "date": "1519459841",
            "description": "test",
            "flags": 0,
            "hasliked": 0,
            "id": "lstczB",
            "likes": 3,
            "name": "domain distortion test",
            "published": 3,
            "tags": [
                "test"
            ],
            "usePreview": 0,
            "username": "dtoadq",
            "viewed": 461
        },
        "renderpass": [
            {
                "code": "#define float4 vec4\n#define float3 vec3\n#define float2 vec2\n\nfloat noise ( in float2 uv ) {\n  return (sin(2.5*uv.x) + sin(2.5*uv.y));\n}\n\nfloat fbm ( in float2 uv ) {\n  const mat2 m = mat2(0.8, 0.6, -0.6, 0.8);\n  float f = 0.0;\n  f += 0.5000*noise(uv); uv = m*uv*2.02;\n  f += 0.2500*noise(uv); uv = m*uv*2.03;\n  f += 0.1250*noise(uv); uv = m*uv*2.01;\n  f += 0.0625*noise(uv);\n  return f/0.9375;\n}\n#define TIME iTime*5.0f\n\nfloat pattern ( in float2 uv ) {\n  float2 q = float2(fbm(uv + float2(0.0, TIME*0.1f)),\n                    fbm(uv + float2(4.2, TIME*0.05f)));\n  float2 r = float2(fbm(uv + 4.0*q + float2(1.6, TIME*0.2)),\n                    fbm(uv + 4.0*q + float2(iTime*0.3, TIME)));\n  return fbm(uv+q-r*0.25);\n}\nfloat pattern2 ( in float2 uv ) {\n  float2 q = float2(fbm(uv + float2(4.0, TIME*0.05f)),\n                    fbm(uv + float2(14.2, TIME*0.015f)));\n  float2 r = float2(fbm(uv + 8.0*q + float2(123.6, TIME*0.02)),\n                    fbm(uv + 4.0*q + float2(iTime*0.043, TIME*0.64f)));\n  return fbm(uv+q-r*0.25);\n}\n\nvoid mainImage(out vec4 frag_colour, in vec2 frag_coord) {\n  vec2 uv = frag_coord / iResolution.xy;\n  uv = (uv*2.0) - 1.0;\n  uv.x *= iResolution.x/iResolution.y;\n  uv *= 2.0f;\n\n  frag_colour = float4(1.0);\n frag_colour.xyz =\n          vec3(0.9f, 1.7f, 0.8f) * abs(pattern(uv)) * 0.2f\n     +  vec3(0.8, 1.7, 0.5) * abs(fbm(0.2*uv+vec2(0.0f, TIME*0.21))*0.5)\n     + -2.0f*vec3(0.2f, 1.2f, 0.45f) * abs(fbm(uv*0.75f + vec2(0.0f, TIME*0.1f)))\n     +  abs(pattern2(uv)) * vec3(1.0f, 1.8f, 0.9f) * 0.2f\n      ;\n}\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}