{
    "Shader": {
        "info": {
            "date": "1727001270",
            "description": "Swap comment line #51 for mesh along.\n\nUgliest SDF ever made ;-) . mysterious line #39 fix to avoid rendering \"cut\" artifacts.\nsome cut artifacts still there.",
            "flags": 0,
            "hasliked": 0,
            "id": "l3jyz1",
            "likes": 27,
            "name": "transparent Klein bottle",
            "published": 3,
            "tags": [
                "torus",
                "uv",
                "kleinbottle",
                "short"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 167
        },
        "renderpass": [
            {
                "code": "// Klein bottle variant of https://shadertoy.com/view/X3lyW2\n\n#define hue(v)  ( .6 + .6 * cos( v  + vec4(0,23,21,0)  ) )    // hue\n//#define rot(a)    mat2( cos(a+vec4(0,11,33,0)) )            // rotation                  \n  #define rot(a)  mat2(cos(a),sin(a),-sin(a),cos(a))\n                                                              // torus distance + parameterization\n#define torus(t)  t = abs( length(vec2(d=length(q.xz)-R0,q.y)) - R1), \\\n                  a = atan(q.z,q.x), b = atan(q.y,d)\n                  \nvoid mainImage(out vec4 O, vec2 U) {    \n    float t=9.,d, l=-80., t0, a,b,i, k = 2., // .9            // tile multiplier\n          R0 = 20., R1 = 10.;                                 // large and small radii\n\n    vec3  R = iResolution,\n          D = normalize( vec3( U+U, -3.5*R.y ) - R ),         // ray direction\n          p = 150./R, q,                                      // marching point along ray \n       // M =  iMouse.xyz/R -.5;\n          M = iMouse.z > 0. ? iMouse.xyz/R -.5: vec3(8,4,0)/1e2*cos(iTime+vec3(0,11,0));\n\n    for ( O *= 0.; i++ < 1e2 ; ) {                            // --- ray-marching\n        q = p,\n        q.yz *= rot( 1.+6.*M.y),                              // rotations\n        q.xz *= rot( -6.*M.x),\n        torus(t);                                             // bottle loop = 3/4 torus\n        q.x += 2.*R0;\n        if (a < -1.57 ) {                                     // inside loop = 1/4 torus\n            torus(t), a = 3.14-a, b = 3.14-b;\n          //if ( a < -1.57 ) t = 9.; \n        }\n        q = q.zxy, q.x += R0;\n        if (q.y<0.) {                                         // bottle bottom = 1/2 torus\n          //t0 = abs( length(vec2(d=length(q.xz)-R0,q.y)) - R1);\n          //if ( t0 < t ) \n            torus(t), d=a,a=b,b=d, a /= 2., a += 6.28;        // swap a,b\n        } else {                                              // bottle body = cylinder with cos profile\n            t0 = abs(length(q.xz) -R0-R1*cos(1.57/R0*q.y) ) / 2.;\n            if ( t0 < t && q.y < 2.*R0 ) \n                t = t0, b = atan(q.z,q.x), a = q.y/(R0-.2) + 6.28;\n            else t /= 1.2;                                    // fix rendering bug. why ?\n        }      \n        l += t;\n        \n                                                              // --- conformal mapping\n      // float r = R1/R0, ir = sqrt(1.-r*r);                  // antiderivative of 1/circonf(b) \n      //b = .996*  2./ir* atan( (r-1.)/ir* tan(b/2.) );       //  NB: tan(b/2) = ( -d + sqrt(d*d+q.y*q.y) )/q.y )        \n        vec4 C = hue( floor(k*R0*a/6.283) + 17.*mod(round(k* R1*b/6.283),R1) ); // colored tiles \n\n        a = sin(k*R0*a/2.), b = cos(k*R1*b/2.);\n        C *= .25 / exp( (l-80.)/30. )                         // color * depth darkening\n                  * sqrt( min(abs(a)/fwidth(a),1.) * min( abs(b)/fwidth(b),1.) ); // tiles borders\n     // C = vec4( sqrt( 1. - min(abs(a)/fwidth(a),1.) * min( abs(b)/fwidth(b),1.) ) / exp( (l-80.)/30. ) ); // mesh alone\n        if ( t < .01 ) O += C, t = .2;                        // traverse the layer and continue\n\n        p += t*D;                                             // step forward = dist to obj          \n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}