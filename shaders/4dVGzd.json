{
    "Shader": {
        "info": {
            "date": "1455927642",
            "description": ".",
            "flags": 0,
            "hasliked": 0,
            "id": "4dVGzd",
            "likes": 67,
            "name": "Escher-like tiling (255 chars)",
            "published": 3,
            "tags": [
                "2d",
                "pattern",
                "tiling",
                "2tweets",
                "short",
                "escherlike"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 1778
        },
        "renderpass": [
            {
                "code": "/**/ // 254 chars original version \n\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n\tU *= 12./iResolution.y;\n    O-=O;\n    vec2 f = floor(U), u = 2.*fract(U)-1.;  // ceil cause line on some OS\n    float b = mod(f.x+f.y,2.), y;\n\n    for(int i=0; i<4; i++) \n        u *= mat2(0,-1,1,0),\n        y = 2.*fract(.2*iDate.w+U.x*.01)-1.,\n\t    O += smoothstep(.55,.45, length(u-vec2(.5,1.5*y)));\n   \n    if (b>0.) O = 1.-O; // try also without :-)\n}\n\n/**/\n\n\n/* // shorter version: 212 chars\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O-=O;\n    vec2 f = ceil(U*= 12./iResolution.y), u = 2.*fract(U)-1.;\n\n#define q   u = u.yx, u.x*=-1., O += step(length( u - vec2(.5, 3.*fract(.2*iDate.w+U.x*.01)-1.5) ), .5)\n    q; q; q; q;\n    \n    f.x+f.y,2.>0. ? O = 1.-O : O;   // golfed by 834144373\n}\n\n/**/",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}