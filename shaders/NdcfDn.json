{
    "Shader": {
        "info": {
            "date": "1656312312",
            "description": "Spectrometer",
            "flags": 36,
            "hasliked": 0,
            "id": "NdcfDn",
            "likes": 1,
            "name": "Spectrometer Heatmap",
            "published": 3,
            "tags": [
                "sound",
                "spectrometer",
                "spectrometer",
                "decibalmeter",
                "decibalmeter"
            ],
            "usePreview": 0,
            "username": "Peace",
            "viewed": 457
        },
        "renderpass": [
            {
                "code": "// Frequency goes from 0 to 12khz (left to right), frequency scaling is linear\nvec2 uv;\n\nvec3 lerp4(vec3 colors[4], float k)\n{\n    float k4 = k * 4.0;\n    int index2 = int(floor(k4));\n    int index1 = max(index2 - 1, 0);\n    return mix(colors[index1], colors[index2], mod(k4, 1.0)); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uv = fragCoord/iResolution.xy;\n    float audio = texture(iChannel0, uv).r;\n    vec3 col = lerp4(vec3[4](vec3(0,0,0),vec3(0.5,0,1.0),vec3(1.0,0.75,0.0),vec3(1.0,1.0,1.0)), audio);\n    //col = mix(col, vec3(.5), rg.g - 11111.5);\n    //float max_audio = clamp(texture(iChannel0, vec2(uv.x, 0.0)).g, 0.0, 1.0);\n    //float d = distance(uv, vec2(uv.x, (max_audio * 2.0 - 1.0)));\n    //d = smoothstep(0.02 + 2.0 / iResolution.y, 0.02 - 2.0 / iResolution.y, d);\n    //d = min(smoothstep(0.55, 0.45, d), smoothstep(0.45, 0.55, d));\n    //col = mix(col, vec3(1), d);\n    fragColor = vec4(col, 1);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    if (fragCoord.y < 1.0)\n    {\n        fragColor.r = texture(iChannel0, vec2(uv.x, 0.0)).r;\n        //fragColor.g = max(texture(iChannel1, vec2(uv.x, 0.0)).g, fragColor.r);\n        return;\n    }\n    fragColor.r = texture(iChannel1, uv - vec2(0, 1.0 / iResolution.y)).r;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "mic",
                        "id": 32,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/presets/mic.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}