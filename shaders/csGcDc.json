{
    "Shader": {
        "info": {
            "date": "1696672289",
            "description": "test",
            "flags": 32,
            "hasliked": 0,
            "id": "csGcDc",
            "likes": 0,
            "name": "BoxBlur-test",
            "published": 3,
            "tags": [
                "boxblur"
            ],
            "usePreview": 0,
            "username": "nomkcode",
            "viewed": 154
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // 通过鼠标点击设定模糊边界\n    vec3 col = texture(iChannel0, uv).rgb;\n    if(uv.x > iMouse.x / iResolution.x){\n        col = texture(iChannel1, uv).rgb;\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "float weight = 1.0/9.0;\nfloat offset[5] = float[5](0.0, 1.0, 2.0, 3.0, 4.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 sum_color = texture(iChannel0, uv).rgb * weight;\n    for(int i = 1; i < 5; ++i){\n        sum_color += texture(iChannel0, uv + vec2(0.0, offset[i] / iResolution.y)).rgb * weight;\n        sum_color += texture(iChannel0, uv - vec2(0.0, offset[i] / iResolution.y)).rgb * weight;\n    }\n    fragColor = vec4(sum_color, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "video",
                        "id": 11,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "float weight = 1.0/9.0;\nfloat offset[5] = float[5](0.0, 1.0, 2.0, 3.0, 4.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 sum_color = texture(iChannel0, uv).rgb * weight;\n    for(int i = 1; i < 5; ++i){\n        sum_color += texture(iChannel0, uv + vec2(offset[i] / iResolution.x, 0.0)).rgb * weight;\n        sum_color += texture(iChannel0, uv - vec2(offset[i] / iResolution.x, 0.0)).rgb * weight;\n    }\n    fragColor = vec4(sum_color, 1.0);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}