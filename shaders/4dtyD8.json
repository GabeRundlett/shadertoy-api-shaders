{
    "Shader": {
        "info": {
            "date": "1518998342",
            "description": "This is my basic reticle i have made in honor of it. in my game project i did some alpha transparency so it wont block the view of the targets. that was my only complaint in the game. click mouse in frame to change target position.",
            "flags": 0,
            "hasliked": 0,
            "id": "4dtyD8",
            "likes": 1,
            "name": "Panzer dragoon aim reticle",
            "published": 3,
            "tags": [
                "aimreticle"
            ],
            "usePreview": 0,
            "username": "indominator",
            "viewed": 580
        },
        "renderpass": [
            {
                "code": "#define SC(a) vec2(sin(a),cos(a))\nconst float pi = 3.1415;\nconst float size = 0.5;\t\nconst float raio = 30.;\nconst float rings = 14.;\nconst float sections =4.;\nconst vec2 center = vec2(0.5,0.5);\nbool distancia(vec2 p1,vec2 p2,vec2 pf,float s){\n \n    return  \n        length(p1 - pf) + length(p2 - pf) < length(p1 - p2) + size && \n      \n        ( abs((p2.y - p1.y)*pf.x -(p2.x - p1.x)*pf.y +p2.x*p1.y - p2.y*p1.x)\n        /length(p1 - p2) \n            < size)\n        ;\n    \n}\n   void cube(vec2 fcord, out vec3 col,float rai,float t,float d){\n      vec2 point = iMouse.xy*t + center*iResolution.xy*(1. -t);\n\n    vec2 up =point + SC(iTime*t)*rai;\n    vec2 left =point + SC(iTime*t+pi/2.)*rai;\n    vec2 down=point +SC(iTime*t+pi)*rai;\n    vec2 right=point +SC(iTime*t+pi*3./2.)*rai; \n\n    vec2 dir = point - fcord;\n    float ang = atan(dir.y,dir.x) -iTime*t;\n    if(distancia(down,left,fcord,size) ||distancia(left,up,fcord,size) \n       || distancia(up,right,fcord,size) ||distancia(right,down,fcord,size) )\n        col = vec3(1,abs(sin(ang)) + cos(ang),cos(ang));\n\n}\nvoid sphere(vec2 fcord,vec2 ires, out vec3 col){\nif(  length((fcord -.5* ires.xy)/ ires.y ) < 15./ires.y)\ncol = vec3(0.3,0.3,1);    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col =vec3(0,0,0);\n \tcube(fragCoord,col,raio*0.5,1.,1.);\n    cube(fragCoord,col,raio*0.75,0.95,-1.);\n    cube(fragCoord,col,raio*1.,0.9,1.3);\n    sphere(fragCoord,iResolution.xy,col);\n    fragColor = vec4(col,7);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}