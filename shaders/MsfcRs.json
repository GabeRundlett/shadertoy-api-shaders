{
    "Shader": {
        "info": {
            "date": "1491687020",
            "description": "2d drawing",
            "flags": 32,
            "hasliked": 0,
            "id": "MsfcRs",
            "likes": 4,
            "name": "2d drawing",
            "published": 3,
            "tags": [
                "2d",
                "drawing"
            ],
            "usePreview": 0,
            "username": "public_int_i",
            "viewed": 678
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = texture(iChannel0, fragCoord.xy/iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "//Ethan Alexander Shulman 2016\n\n//Fork from 'pumpkin carving 2016' https://www.shadertoy.com/view/XltXzr\n\n\n#define brushSizee 10.\n#define brushOpacity 0.25\n\n#define brushSize (brushSizee*length(iResolution.xy)/256.)\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //initialize blank for first 60 frames to give people time to go fullscreen\n    if (iFrame < 60) {\n        fragColor = vec4(0.,0.,0.,1.);\n        return;\n    }\n    if (fragCoord.x+fragCoord.y < 2.) {\n        //store old mouse position in top left pixel for smoothed line drawing\n        fragColor = vec4(iMouse.xy,clamp(iMouse.w*1e4,0.,1.),0.);\n        return;\n    }\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 v = texture(iChannel0, uv);\n   \t\n    \n    //smooth line paint\n    vec2 currDelta = iMouse.xy-fragCoord;\n    float len = length(currDelta)-brushSize;\n    if (iMouse.w > 0.) {\n        \n        vec3 old = texture(iChannel0, vec2(.5/iResolution.xy)).xyz;\n        old.xy = mix(iMouse.xy,old.xy,old.z);\n        vec2 oldDelta = fragCoord-old.xy,\n             newDelta = iMouse.xy-old.xy;\n        \n        //line from last mouse pos to new pos      \n        len = length(oldDelta-newDelta*\n                     clamp(dot(oldDelta,newDelta)/dot(newDelta,newDelta),0.,1.))-brushSize;\n        \n        //paint line with last area cutout and fade\n        float subLen = mix(0.,length(oldDelta)-brushSize,old.z);\n        float brush = brushOpacity*clamp(-(len-min(0.,subLen))/brushSize,0.,1.);\n        v.xyz += brush;\n       \tv.xyz = min(v.xyz,1.);\n    }\n    \n    fragColor = v;\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buf A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}