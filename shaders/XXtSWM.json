{
    "Shader": {
        "info": {
            "date": "1719132167",
            "description": "/*originals https://www.shadertoy.com/view/wly3Dy*/\nwait for 5-6 seconds",
            "flags": 0,
            "hasliked": 0,
            "id": "XXtSWM",
            "likes": 6,
            "name": "mobius rotator",
            "published": 3,
            "tags": [
                "fractal",
                "star",
                "cineshader"
            ],
            "usePreview": 0,
            "username": "nayk",
            "viewed": 314
        },
        "renderpass": [
            {
                "code": "/*originals https://www.shadertoy.com/view/wly3Dy*/\n\n\n \nmat2 Rot(float a) {\n    float s=sin(a), c=cos(a);\n    return mat2(c,-s,s,c);\n}\n\nfloat Star(vec2 uv, float a, float sparkle) {\n    vec2 av1 = abs(uv);\n \tvec2 av2 = abs(uv*Rot(a));\n    vec2 av = min(av1, av2);\n    \n    vec3 col = vec3(0);\n    float d = length(uv);\n    float star = av1.x*av1.x;\n    star = max(av1.y*av1.y, av2.x*av2.y);\n    star = max(0., 1.-star*1e3);\n    \n    float m = min(5., 1e-2/d);\n    \n    return m+pow(star, 4.)*sparkle;\n}\n\nfloat Hash21(vec2 p) {\n    p = fract(p*vec2(123.34,145.54));\n    p += dot(p, p+45.23);\n    return fract(p.x*p.y);\n}\n\nvec3 Layer(vec2 uv, float t, float sparkle) {\n    vec2 gv = fract(uv)-.5;\n    vec2 id = floor(uv);\n\tvec3 col = vec3(0);\n    \n\n    \n    for(int y=-1; y<=1; y++) {\n        for(int x=-1; x<=1; x++) {\n            vec2 offs = vec2(x, y);\n            float n = Hash21(id-offs);\n\t\t\tvec3 N = fract(n*vec3(10,100,1000));\n            N.xz*=Rot(iTime);\n            vec2 p = (N.xy-.5)*.7;\n            p.xy*=Rot(iTime);\n            float brightness = Star(gv-p+offs, n*6.2831+t, sparkle);\n            vec3 star = brightness*vec3(.1+p.x, .1, .6+p.y)*N.z*N.z;\n            \n             \n            \n            star *= 1.+sin((t+n)*20.)*smoothstep(sin(t)*.5+.5, 1., fract(10.*n));\n            \n            float d = length(gv+offs);\n            \n            col += star*smoothstep(1.5, .8, d);\n        }\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    bool activator =false;\n     uv.xy*=Rot(iTime);\n\n    \n\tfloat t = -iTime*.3;\n\t\n \n  \n  \n    \n    vec3 col = vec3(0);\n    float speed = -.2;\n    \n \n    float d = dot(uv,uv);\n    \n\n    uv /= d;\n    float burst = sin(iTime*.05);\n\n\n    \n    float stp = 1./5.;\n        \n    for(float i=0.; i<1.; i+=stp) {\n    \tfloat lt = fract(t*speed+i);\n        \n             if (activator ==true){\n   uv.xy*=Rot(iTime);\n}\n        vec2 sv = uv+i*1000.5;\n         \n        sv.y += t*t*t;\n          sv.x += t;\n        col += Layer(sv, t, 10.);\n    }\n    \n\n\n \n\n  \n\n   \n    \n \n\n \n    col *= 10.;\n   \n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}