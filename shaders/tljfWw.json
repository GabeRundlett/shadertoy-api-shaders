{
    "Shader": {
        "info": {
            "date": "1599127322",
            "description": "the beach,but unfinished",
            "flags": 0,
            "hasliked": 0,
            "id": "tljfWw",
            "likes": 4,
            "name": "beach sun",
            "published": 3,
            "tags": [
                "beach"
            ],
            "usePreview": 0,
            "username": "qzh",
            "viewed": 409
        },
        "renderpass": [
            {
                "code": "\nvec3 drawTree(vec2 uvTree,vec2 point,vec3 col){\n\tvec2 q=uvTree-point;\n    float p=length(q);\n    \n    //画半径 atan返回q.y/q.x的arctan值域-pi到pi\n    //反切值乘10是为了cos值增加更多循环（-1，1）每多一个循环就会多一个花瓣\n    //cos参数增加 导致图像向右平移\n    float r=0.05+0.03*cos(atan(q.y,q.x)*10.0+q.x*50.0-2.);\n    \n    //根据半径画圆\n    col*=smoothstep(r,r+0.01,p);\n    \n    float d=0.005;\n    float h=0.5;\n    //得出一条竖线*只要下面部分变黑\n    //col*=smoothstep(d,d+0.001,abs(q.x))*smoothstep(0.0,0.1,q.y);\n    //和上面做法类似\n   \td+=0.001*cos(q.y*100.0);\n    //指数型 当参数小于0 值永远小于1呈曲线无线接近1\n    d+=exp(-70.0*uvTree.y);\n    //\n    col*=1.0-(1.0-smoothstep(d,d+0.001,abs(q.x+0.05*sin(q.y*5.0))))*(1.0-smoothstep(0.0,0.01,q.y));\n    return col;\n}\n\nvec3 drawsea(vec2 uvMan,vec3 col){\n    \n    //高度cos偏移\n    float h=.05+0.02*cos(uvMan.x*20.0+iTime);\n\t    \n    col=mix(vec3(.3,.8,.9),col,smoothstep(h,h+.01,uvMan.y));\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uvTree=uv;\n    \n\t//使uv的y值保持屏幕的比例 用来画出一个正圆\n    uv.y*=iResolution.y/iResolution.x;\n    vec2 uvMan=uv;\n    vec3 col=vec3(1.0,0.65,0);\n    //定义太阳半径和光晕\n    float over=0.02/length(uv-vec2(0.9,0.48));\n    //光晕散开\n    float dist=pow(over,0.3);\n    col*=dist;\n    col=drawsea(uvMan,col);\n\n    vec2 point1=vec2(0.85,0.4);\n    vec2 point2=vec2(0.75,0.35);\n\tcol=drawTree(uvTree,point1,col);\n    col=drawTree(uvTree,point2,col);\n    \n    \n    fragColor=vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}