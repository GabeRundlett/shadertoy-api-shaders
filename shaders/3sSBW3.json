{
    "Shader": {
        "info": {
            "date": "1590925819",
            "description": "messing around in the yolk of a dragon egg",
            "flags": 0,
            "hasliked": 0,
            "id": "3sSBW3",
            "likes": 2,
            "name": "Julia set Yolk of the dragon",
            "published": 3,
            "tags": [
                "fractal"
            ],
            "usePreview": 0,
            "username": "workingclasshacker",
            "viewed": 299
        },
        "renderpass": [
            {
                "code": "#define MAXITER 10000\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord- .5*iResolution.xy)/iResolution.y;\n    uv+=.9*sin(iTime*.2)*.1;\n    float t = iTime*.2;\n    uv*=cos(t/2.);\n    //uv +=sin(t)*.1;\n    vec2 z = vec2(uv.y*3., uv.x*2.);\n    vec2 c = vec2(sin(t),cos(t)*sin(t));\n    int i;\n    int max = 0;\n    for(i=0;i<100;i++){\n     \tfloat x = z.x;\n        z.x = x*x-z.y*z.y+c.x;\n        z.y = 2.*x*z.y+c.y;\n        if(i>max){\n         \tmax = i;\t   \n        }\n        if(length(z)>2.0 || i>MAXITER){\n         \tbreak;   \n        }\n    }\n\tfloat n = 0.0;\n    if(length(z)<2.){\n     \tn = 1.0;   \n    }\n    \n    float mu = 1.+float(i)+log(log2(length(z)))/log2(2.);\n    vec3 col = vec3(mu/float(MAXITER));\n    // Output to screen\n    col.r = sin(1./mu);\n    col.g = tan(1./(mu*.1));\n    if(col.g >.5){\n     \tcol.r = col.g;   \n    }\n    col.b = 0.;\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}