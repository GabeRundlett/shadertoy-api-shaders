{
    "Shader": {
        "info": {
            "date": "1481636643",
            "description": "Cycles through black, white, red. green and blue (2 seconds each). Make fullscreen and run on laptop/desktop screen you'd like to test. No dead pixel will go unnoticed!",
            "flags": 0,
            "hasliked": 0,
            "id": "Mt3XD2",
            "likes": 1,
            "name": "dead-pixel/screen-dirt test",
            "published": 3,
            "tags": [
                "test",
                "screen",
                "pixel",
                "lcd",
                "dead"
            ],
            "usePreview": 0,
            "username": "MacSlow",
            "viewed": 705
        },
        "renderpass": [
            {
                "code": "////////////////////////////////////////////////////////////////////////////////\n//\n// dead pixel tester\n//\n// Copyright 2016 Mirco Müller\n//\n// Author(s):\n//   Mirco \"MacSlow\" Müller <macslow@gmail.com>\n//\n// This program is free software: you can redistribute it and/or modify it\n// under the terms of the GNU General Public License version 3, as published\n// by the Free Software Foundation.\n//\n// This program is distributed in the hope that it will be useful, but\n// WITHOUT ANY WARRANTY; without even the implied warranties of\n// MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR\n// PURPOSE.  See the GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this program.  If not, see <http://www.gnu.org/licenses/>.\n//\n////////////////////////////////////////////////////////////////////////////////\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    vec3 color = vec3 (.0);\n    float t = mod (floor (iTime * .5), 6.);\n\n    if (t > .0 && t <= 1.) {\n    \tcolor = vec3 (.0);\n    } else if (t > 1. && t <= 2.) {\n    \tcolor = vec3 (1.);\n    } else if (t > 2. && t <= 3.) {\n    \tcolor = vec3 (1., .0, .0);\n    } else if (t > 3. && t <= 4.) {\n    \tcolor = vec3 (.0, 1., .0);\n    } else if (t > 4. && t <= 5.) {\n    \tcolor = vec3 (.0, .0, 1.);\n    }\n\n    fragColor = vec4 (color, 1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}