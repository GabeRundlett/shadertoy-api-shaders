{
    "Shader": {
        "info": {
            "date": "1552086155",
            "description": "Animated Greyscale Crystal\nmy step by step tutorial\n",
            "flags": 0,
            "hasliked": 0,
            "id": "3ssXDS",
            "likes": 4,
            "name": "Animated Greyscale Crystal",
            "published": 3,
            "tags": [
                "greyscale",
                "crystal"
            ],
            "usePreview": 0,
            "username": "arthurstammet",
            "viewed": 392
        },
        "renderpass": [
            {
                "code": "// Animated Greyscale Crystal\n// my step by step tutorial\n// Inspired by https://www.youtube.com/watch?v=l-07BXzNdPw\n\n// create random numbers for x and y\nvec2 N22(vec2 p) {\n    vec3 a = fract(p.xyx*vec3(123.34, 234.34,345.65));\n    a += dot(a, a+34.45);\n    return fract(vec2(a.x*a.y, a.y*a.z));\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y; // -1 <> 1\n    \n    // Change values here ------------------------------------------------------\n    \n    float window = 1.3;\n    float t = (iTime+150.)*.1;\n    float density = 500.;\n    float brightness = .3; // high values for more brightness\n    float contrast = 2.; // low values for higher contrast\n    \n    // -------------------------------------------------------------------------\n    \n    float minDist = 50.;\n\tfloat xFactor = (iResolution.x/iResolution.y)*window;\n    float m = 0.;\n    float cellIndex = 0.;\n    float Greyscale = 1.;\n\n    for(float i=0.; i<density; i++) {\n        vec2 n = N22(vec2(i));\n        vec2 p = sin(n*t);\n\t\tp.x *= xFactor;\n\t\tp.y *= window;\n        \n        float d = length(uv-p);\n\n        if(d<minDist) {\n\t    \tminDist = d;\n            cellIndex = i;\n            Greyscale = brightness+(cellIndex/(density*contrast));\n\t\t}\n    }\n\n    vec3 col = vec3(Greyscale);\t\n    \n    fragColor = vec4(col, 1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}