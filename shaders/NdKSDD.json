{
    "Shader": {
        "info": {
            "date": "1634663227",
            "description": "Inspired by Zach Lieberman's compositions. ",
            "flags": 0,
            "hasliked": 0,
            "id": "NdKSDD",
            "likes": 5,
            "name": "line sdf composite study 1",
            "published": 3,
            "tags": [
                "sdf",
                "line",
                "zachlieberman"
            ],
            "usePreview": 0,
            "username": "_samuelcho_",
            "viewed": 338
        },
        "renderpass": [
            {
                "code": "//inspired by https://twitter.com/zachlieberman/status/1450410944404852744\n\n\n\nfloat line_segment(in vec2 p, in vec2 a, in vec2 b) {\n\tvec2 ba = b - a;\n\tvec2 pa = p - a;\n\tfloat h = clamp(dot(pa, ba) / dot(ba, ba), 0., 1.);\n\treturn length(pa - h * ba);\n}\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n \n    \n    float d = line_segment(uv, vec2(-0.5,0.0), vec2(0.5,0.0));\n    d *= 3.;\n    d = fract(d+iTime);\n    d = 1.-d;\n    vec3 c1 = palette(d - iTime*0.42,vec3(.5),vec3(.5),vec3(1.),vec3(.0,.33,.66)) * d;\n    \n    float d2 = line_segment(uv, vec2(cos(iTime)*0.4,cos(iTime*0.69)*0.3), vec2(0.4,0.4));\n    d2 *= 3.;\n    d2 = fract(d2);\n    d2 = 1.-d2;\n    vec3 c2 = palette(d2 - iTime*0.69,vec3(.5),vec3(.5),vec3(1.),vec3(.0,.33,.66)) * d2;\n    \n    float d3 = line_segment(uv, vec2(-0.3,sin(iTime*1.42)*0.2), vec2(0.3, sin(iTime*0.94)));\n    d3 *= 3.;\n    d3 = fract(d3);\n    d3 = 1.-d3;\n    vec3 c3 = palette(d3 - iTime*0.5,vec3(.5),vec3(.5),vec3(1.),vec3(.0,.33,.66)) * d3;\n    \n    vec3 col = max(max(c1,c2),c3);\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}