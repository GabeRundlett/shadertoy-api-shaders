{
    "Shader": {
        "info": {
            "date": "1696924308",
            "description": "Rotate the sphere by mat3",
            "flags": 32,
            "hasliked": 0,
            "id": "dscfRN",
            "likes": 2,
            "name": "Rotate in Spherical projection",
            "published": 3,
            "tags": [
                "3d",
                "mouse",
                "rotate"
            ],
            "usePreview": 0,
            "username": "o0CHT0o",
            "viewed": 183
        },
        "renderpass": [
            {
                "code": "vec4 textxy(vec2 uv){\n    vec3 xyz = GETR1*vu2xyz(uv);\n    return TEXT0(vec2(atan(xyz.y,xyz.x)/pi/2.+.75,asin(xyz.z)/pi+.5));\n}\n\nvoid mainImage( out vec4 Clr, in vec2 Crd ){\n    // Normalized pixel coordinates\n    float sc = min(iResolution.x, iResolution.y);\n    vec2 uv = (Crd*2.-iResolution.xy)/sc;\n\n    // Output to screen\n    Clr = (smoothstep(1., 1.-3./sc, length(uv))/2.+.5) * textxy(uv);\n    Clr = (smoothstep(0., 3./sc, abs(length(uv)-D))/2.+.5) * textxy(uv);\n    //Clr = vec4(vu2xyz(uv),1.);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/previz/buffer00.png"
                    },
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 Clr, in vec2 Crd ){\n    vec2 uv = Crd/iResolution.xy-0.5;\n    Clr = vec4(cos(uv.x*pi*2.)*cos(uv.y*pi),\n               sin(uv.x*pi*2.)*cos(uv.y*pi),\n               sin(uv.y*pi),\n               1.0)/2.+.5;\n}",
                "description": "",
                "inputs": [],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            },
            {
                "code": "#define TEXT0(x) texture(iChannel0, vec2(x))\n\n\n#define R1X int(iChannelResolution[1].x)\n#define XY2ID(X) (int(X.y) * R1X + int(X.x))\n#define ID2XY(I) ivec2(I - I / R1X * R1X, I / R1X)\n#define GET1(I) texelFetch(iChannel1, ID2XY(I), 0)\n#define GETR1 mat3(GET1(1).xyz, GET1(2).xyz, GET1(3).xyz)\n\nconst float pi = 4. * atan(1.), D=.9;\n\nvec3 vu2xyz(vec2 uv){\n    float l = length(uv), t = 2. * atan(l / D);\n    return vec3(uv/l*sin(t),-cos(t));\n}",
                "description": "",
                "inputs": [],
                "name": "Common",
                "outputs": [],
                "type": "common"
            },
            {
                "code": "// reference https://www.shadertoy.com/view/Mss3zH\n#define P_NUM 4\n#define TXTF1(x) texelFetch(iChannel1, ivec2(x), 0)\n\nmat3 rotate(vec3 v1, vec3 v2){\n    if(v1==v2) return mat3(1.);\n    float c = dot(v1, v2);\n    vec3 A = cross(v1, v2);\n    mat3 B = mat3(   0, -A.z,  A.y,\n                   A.z,    0, -A.x,\n                  -A.y,  A.x,    0);\n    A = normalize(A);\n    return mat3(c) + (1.-c) * outerProduct(A, A) + B;\n}\n\nvoid mainImage( out vec4 Clr, in vec2 Crd ){\n\n    int id = XY2ID(Crd);\n    if( id>=P_NUM ) {Clr=vec4(0); return;}\n    \n    if( iFrame==0 && id!=0){\n        Clr = vec4(mat3(1)[id-1],1);\n        return;\n    }\n    \n    vec4 m = iMouse;\n    if( m.z<0.0 ) {Clr = TXTF1(Crd); return;}\n    \n    float sc = min(iResolution.x, iResolution.y);\n    vec3 xyz = vu2xyz((m.xy*2.-iResolution.xy)/sc);\n    if( id==0 ){    \n        Clr = vec4(xyz,1);\n        return;\n    }\n    if( m.w>0.0 ) {Clr = TXTF1(Crd); return;}\n    mat3 MR = GETR1*rotate(GET1(0).xyz, xyz);\n    Clr = vec4(MR[id-1],1);\n    \n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "buffer",
                        "id": 258,
                        "published": 1,
                        "sampler": {
                            "filter": "nearest",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer01.png"
                    }
                ],
                "name": "Buffer B",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 258
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}