{
    "Shader": {
        "info": {
            "date": "1485962354",
            "description": "marches the rays towards visibility",
            "flags": 0,
            "hasliked": 0,
            "id": "4lKSDy",
            "likes": 0,
            "name": "coool chader",
            "published": 3,
            "tags": [
                "raymarching"
            ],
            "usePreview": 0,
            "username": "Bjeeeern",
            "viewed": 550
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    /*\n    vec3 p = vec3(fragCoord.x, fragCoord.y, 0.0);\n    vec3 a = vec3(150.0,  50.0,     0.0);\n    vec3 b = vec3(300.0,  300.0,  0.0);\n    vec3 c = vec3(450.0,  50.0,     0.0);\n    \n    vec3 c1 = cross(p-a, b-a);\n    vec3 c2 = cross(p-b, c-b);\n    vec3 c3 = cross(p-c, a-c);\n    \n    float t1 = dot(c1,c2);\n    float t2 = dot(c2,c3);\n    \n    if(t1 > 0.0 && t2 > 0.0)\n    {\n\t\tfragColor = vec4(1.0, 1.0, 1.0, 1.0);\n    }\n    else\n    {\n        vec2 uv = fragCoord.xy / iResolution.xy;\n        fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    }\n    */\n \tfragCoord = vec2(fragCoord.x / iResolution.x - 0.5, fragCoord.y / iResolution.y - 0.5);\n    vec3 FocalPoint = vec3(0.0, 0.0, -5.0ã€€- iTime);\n    vec3 Pixel = vec3(fragCoord, -1.0 - iTime);\n    \n    vec3 Ray = normalize(Pixel - FocalPoint);\n    \n    vec3 a = vec3(-1.0, -2.0, 0.0);\n    vec3 b = vec3(0.0, 2.0, 0.0);\n    vec3 c = vec3(1.0, -2.0, 0.0);\n    \n    vec3 test = vec3(fragCoord, 0.0);\n    if(test == a || test == b || test == c)\n    {\n\t\tfragColor = vec4(1.0, 1.0, 1.0, 1.0);\n    }\n    \n    vec3 n = normalize(cross(a-b, c-b));\n    \n    vec3 p0 = a;\n    vec3 e = FocalPoint;\n    vec3 v = Ray;\n    \n    // p = e + t*v\n    // n(p - p0) = 0\n  \n    // n.e + n.t*v - n.p0 = 0\n        \n    float t = (dot(n,p0) - dot(n,e)) / dot(n,v);\n    if(t > 0.0)\n    {\n    \tvec3 p = e + t*v;\n        \n        vec3 c1 = cross(p-a, b-a);\n        vec3 c2 = cross(p-b, c-b);\n        vec3 c3 = cross(p-c, a-c);\n        float t1 = dot(c1,c2);\n        float t2 = dot(c2,c3);\n\n        if(t1 > 0.0 && t2 > 0.0)\n        {\n\t\t\tfragColor = vec4(1.0, 1.0, 1.0, 1.0);\n        }\n        else\n        {\n\t\t\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\t\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n        }\n    }\n    else\n    {\n\t\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}