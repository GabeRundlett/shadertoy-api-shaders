{
    "Shader": {
        "info": {
            "date": "1682798931",
            "description": "Focus your eyes on the middle circle. In the transition you will see blue patterns in the white square. This is due to eyes cone fatigue substracting yellow color (red + green) from white, resulting in blue.",
            "flags": 0,
            "hasliked": 0,
            "id": "cl3GRX",
            "likes": 0,
            "name": "Color Stud - After Image PVIII-2",
            "published": 3,
            "tags": [
                "interactionofcolor"
            ],
            "usePreview": 0,
            "username": "Slals",
            "viewed": 188
        },
        "renderpass": [
            {
                "code": "#define PI 3.14159265359\n#define TAU 6.2831853071\n#define REMANENCE_SECONDS 60.0\n\nfloat circleSDF(vec2 uv, float r) {\n    return length(uv - 0.5) * r;\n}\nfloat rectSDF(vec2 uv, vec2 s) {\n    uv = uv * 2.0 - 1.0;\n    return max(abs(uv.x / s.x), abs(uv.y / s.y));\n}\n\nfloat fillAA(float x, float s) {\n    return smoothstep(x - 0.002, x + 0.002, s);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv2 = uv;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    uv.x -= 0.43; // why this appears to be the center?\n\n    vec3 color = vec3(0.0);\n    \n    float r = iResolution.x / iResolution.y;\n    vec2 center = vec2(r * 0.5, 0.5);\n \n    vec3 observedColor = vec3(1.0, 0.851, 0.024);\n    \n    float alpha = 1.0;\n    \n    float t = mod(iTime, REMANENCE_SECONDS);\n    if (t > REMANENCE_SECONDS * 0.5) { // remanence\n        observedColor = vec3(1.0);\n    }\n    \n    vec2 loaderOffset = vec2(0.2649, 0.3 + (mod(iTime, REMANENCE_SECONDS * 0.5) / REMANENCE_SECONDS) * 2.0);\n    float loaderLeft = rectSDF(uv2 + loaderOffset, vec2(0.02, 2.0));\n    \n    float circle = circleSDF(fract(uv * 3.0), 0.39);\n  \n    float square = fillAA(rectSDF(uv, vec2(1.0)), 1.0);\n    color = mix(color, vec3(1.0), square);\n    color = mix(color, observedColor, fillAA(circle, 0.2)) * color;\n    color = mix(color, observedColor, smoothstep(loaderLeft, loaderLeft + 0.5, 1.0));\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}