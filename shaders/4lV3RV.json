{
    "Shader": {
        "info": {
            "date": "1475576197",
            "description": "Keiserin'",
            "flags": 0,
            "hasliked": 0,
            "id": "4lV3RV",
            "likes": 6,
            "name": "The One True Keiser",
            "published": 3,
            "tags": [
                "mandala"
            ],
            "usePreview": 0,
            "username": "MrHenryBemis",
            "viewed": 692
        },
        "renderpass": [
            {
                "code": "#define iTime sin(iTime*2.2)\n\n#define DTM 78.0\n\n#define D 8.0\n#define T 35.0\n#define M 35.0\n\n#define PI 3.14159265359\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy*2.0-1.0;\n    \n    uv.x *= iResolution.x/iResolution.y;\n    \n    float scale = (sin(iTime)*.5+.5);\n    \n    float d;\n    \n    vec3 col = vec3(0.0);\n    \n    for(int i = 0; i < 33; i++)\n    {\n        vec2 p = vec2(acos(float(i)/33.0*PI*2.0+iTime), asin(float(i)/33.0*PI*2.0+iTime));\n    \n        d = length(uv-p)*0.7;\n        \n        \n    \tif(d <= 3.0)\n        {\n            col += (vec3(\n            sin(-iTime*PI*2.0+D+d*PI),\n            cos(-iTime*PI*2.0+4.0*PI/3.0+M+d*PI),\n            cos(-iTime*PI*2.0+2.0*PI/2.0+T+d*PI))*.5+.5)*sin(d*PI*DTM+iTime*DTM);\n        }\n    }\n    \n    d = length(uv)*2.2;\n    \n    col += vec3(\n    \tsin(-iTime*PI*3.0+D+d*PI),\n        cos(-iTime*PI*2.0+4.0*PI/3.0+M+d*PI),\n        cos(-iTime*PI*3.0+3.0*PI/2.0+T+d*PI));\n    \n\t\tfragColor = vec4(col, 1.0);\n}\n\n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}