{
    "Shader": {
        "info": {
            "date": "1638559129",
            "description": "testing a few techniques (please ignore the black line lol)",
            "flags": 0,
            "hasliked": 0,
            "id": "stV3Wd",
            "likes": 1,
            "name": "idk what to call this",
            "published": 3,
            "tags": [
                "e"
            ],
            "usePreview": 0,
            "username": "SnoopethDuckDuck",
            "viewed": 252
        },
        "renderpass": [
            {
                "code": "#define pi 3.14159\n\nfloat thc(float a, float b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nfloat ths(float a, float b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec2 thc(float a, vec2 b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nvec2 ths(float a, vec2 b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nfloat sinc( float x, float k )\n{\n    float a = pi * (k*x-1.0);\n    return sin(a)/a;\n}\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat h21 (vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat mlength(vec2 uv) {\n    return max(abs(uv.x), abs(uv.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    \n    float sc = 12.;\n    vec2 ipos = floor(sc * uv) + 0.5;\n    vec2 fpos = fract(sc * uv) - 0.5;\n    \n    float t = (1. / cosh(30. * cos(0.5 * iTime))) *  h21(ipos) + iTime;\n    \n    //uv = fract(2. * uv)-0.5;\n    float a = atan(uv.y, uv.x);\n    float r = length(uv);\n    \n    //a = a + 10. * r - iTime + 0.1 * cos(10. * r + 10. * a - iTime);\n    uv = r * vec2(thc(1., a), ths(1., a));\n\n    float p = mix(0.1, 0.5, 0.5 - 0.5 * thc(4., 0.43 * t));\n    float q = pi * (p * uv.x);\n    float h = sin(q) / q;\n    \n    //uv.y += abs(uv.x) - 0.2;\n    \n    float k0 = mix(0.1, 0.2, 0.5 + 0.5 * cos(t));\n    float k = k0 + 0.025 * thc(4., 32. * uv.x + t + 10. * thc(4., t));\n    float f = (0.5 - k) * thc(2., 32. * h + 1.5 * t) - 0.;\n    float s = smoothstep(-k, k, f - uv.y);\n    \n    vec3 col = vec3(s);\n\n    col = s * pal(9. * s + 0.8 * uv.y * thc(12000., 10. * f + t), vec3(1.), vec3(1.), vec3(1.), 0.2 * vec3(0.,0.33,0.66));\n    // Output to screen\n    \n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}