{
    "Shader": {
        "info": {
            "date": "1489310388",
            "description": "( was unlisted for more that 2 years. was I reverse engineering somebody's code, or trying something on my own ? )",
            "flags": 32,
            "hasliked": 0,
            "id": "4sXyzl",
            "likes": 2,
            "name": "slope flow",
            "published": 3,
            "tags": [
                "flow",
                "erosion"
            ],
            "usePreview": 1,
            "username": "FabriceNeyret2",
            "viewed": 420
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n\tO = texture(iChannel0, U/iResolution.xy);\n  //O = smoothstep(.3,.7,O);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            },
            {
                "code": "void mainImage( out vec4 O, vec2 U )\n{\n\tU /= iResolution.xy;\n  //  if (iFrame<10) { O = texture(iChannel1,U); return; }\n\n#define T(l) ( ( textureLod(iChannel1,U+.0*iTime,l) -.5 )*exp2(l*2.4) +.5 )\n\n    vec4 H = ( T(0.)+T(1.)+T(2.)+T(3.)+T(4.)+T(5.)+T(6.) ) / 7.;\n    float l = length(H.rgb);\n  //O = .5+.5*sin(l/vec4(1,5,10,0)); return;\n    O = mix( texture(iChannel1,U), //.xxxx, \n             texture(iChannel0, fract( U - vec2(dFdx(l),dFdy(l)) / 360. )),\n             .96);\n}\n",
                "description": "",
                "inputs": [
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    },
                    {
                        "channel": 0,
                        "ctype": "buffer",
                        "id": 257,
                        "published": 1,
                        "sampler": {
                            "filter": "linear",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "clamp"
                        },
                        "src": "/media/previz/buffer00.png"
                    }
                ],
                "name": "Buffer A",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 257
                    }
                ],
                "type": "buffer"
            }
        ],
        "ver": "0.1"
    }
}