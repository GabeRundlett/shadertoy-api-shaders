{
    "Shader": {
        "info": {
            "date": "1713113912",
            "description": "A direct copy of the code by kishimisu.\n- https://www.instagram.com/p/CxptFSaokBy/?img_index=1",
            "flags": 0,
            "hasliked": 0,
            "id": "XcGGRt",
            "likes": 6,
            "name": "Sacred Geometry - kishimisu",
            "published": 3,
            "tags": [
                "kishimisu"
            ],
            "usePreview": 0,
            "username": "emil091001",
            "viewed": 348
        },
        "renderpass": [
            {
                "code": "void mainImage( out vec4 O, in vec2 F )\n{\n    vec2 C          = iResolution.xy,\n           u        = abs(F+F-C)/C.y/.9;\n    float    r      = length(u),\n               v    = iTime,\n                 e  ;\n                \n    for (O *= e; e++ < 8.;) {\n        C  = fract(u*mat2(cos(vec4(0,33,\n             11,0) - v/8.)) * (1.5 + e*(\n             sin(v*0.5)*.5+.5) /4.))-.5;\n            \n        O += pow(.004/ abs( sin( length(C)\n             *exp(length(C) - r) * 8.+v+.3\n             *cos(v/4.)*e)/8. - smoothstep\n             (0.,.8,r-.8)),1.07) * (1.+cos\n             (v+e*.5+r*6.+vec4(0,1,2,0)));\n    }\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}