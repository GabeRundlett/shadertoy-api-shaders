{
    "Shader": {
        "info": {
            "date": "1687202330",
            "description": "reference:   https://twitter.com/tobyhoward/status/1653306249310531584\n\nnot exactly the same, but pretty close !",
            "flags": 0,
            "hasliked": 0,
            "id": "mdfcDj",
            "likes": 10,
            "name": "Figure and ground fractal",
            "published": 3,
            "tags": [
                "fractal",
                "julia",
                "mandelbrot",
                "reproduction"
            ],
            "usePreview": 0,
            "username": "FabriceNeyret2",
            "viewed": 222
        },
        "renderpass": [
            {
                "code": "// from draft base https://shadertoy.com/view/dtySD1\n\n#define cmul(A,B) ( mat2( A, -(A).y, (A).x ) * (B) ) \n#define cinv(Z)   ( vec2( (Z).x, -(Z).y ) / dot(Z,Z) ) \n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    O *= 0.;\n    for ( int k=0; k < 9; k++ ) {                  // AA loop\n    \n        vec2  R = iResolution.xy,\n              d = vec2(k%3-1, k/3-1) / 3.,         // AA oversampling\n              z = -2.45* ( 2.*(u+d) - R )  / R.y,  // windowing\n              c = vec2(1.0546875,.4453125); \n        float r = 4., N = 26.;          \n\n        for ( float i = 0. ; i < N && dot(z,z) < r; i++ )  // Julia loop\n            z = cmul ( c ,  z + cinv(z) );\n\n        O += vec4( z.y < 0. );                     // binary decomposition\n    }\n    O = sqrt(O/9.);                                // to sRGB\n    \n // O = vec4( sqrt(.5 - .5* z.y / fwidth(z.y)) );  // variant without the AA loop\n}\n \n \n",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}