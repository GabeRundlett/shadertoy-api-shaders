{
    "Shader": {
        "info": {
            "date": "1603057327",
            "description": "ripples effect",
            "flags": 0,
            "hasliked": 0,
            "id": "wsVcDm",
            "likes": 3,
            "name": "Explainable Ripple Effect",
            "published": 3,
            "tags": [
                "2d",
                "water"
            ],
            "usePreview": 0,
            "username": "andful",
            "viewed": 833
        },
        "renderpass": [
            {
                "code": "#define PI 3.1415926538\n\n//time cycle\n#define TIME_CYCLE 20.0\n//number of ripples\n#define N 30\n//standar deviation of gaussian\n#define STD 75.0\n//aplitude of ripple\n#define AMPLITUDE 0.75\n//wave length of ripple\n#define WAVE_LENGTH 0.5\n//fading factor of ripple as it spreads\n#define FADING_FACTOR 0.1\n//offset scaling factor\n#define OFFSET_SCALE 10.0\n//refraction coefficient\n#define REFRACTION_COEFFICIENT 1.0/1.333\n//refraction coefficient\n#define DEPTH 10.0\n//expansion speed\n#define EXPANSION_SPEED 50.0\n\nfloat rippleGradient(float x) {\nreturn (AMPLITUDE/WAVE_LENGTH*exp(-pow(x/WAVE_LENGTH,2.0)/STD)*(sin(x/WAVE_LENGTH)\n            - 2.0*x/pow(WAVE_LENGTH*STD, 2.0) * cos(x/WAVE_LENGTH))/WAVE_LENGTH);\n}\n\nvec2 source = vec2(0.0, 0.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 coord ) {\t    \n    //size of the image\n    ivec2 size = ivec2(256, 256);\n    \n    //derivative of the surface\n    vec2 partial_derivative = vec2(0.0);\n    \n    \n    for (int i=0; i< N ;i++) {\n        // get random value\n        vec4 data = texture(iChannel1, vec2(float(i)/float(size.x),float(i % size.x)/float(size.y)));\n        \n        //pixel position of droplet in the screen\n        vec2 source = data.xy*iResolution.xy;\n        \n        //time of droplet drop\n        float start_time = TIME_CYCLE*data.z;\n        \n        //difference in time\n        float delta = mod(iTime - start_time, TIME_CYCLE) - TIME_CYCLE/2.0;\n        \n        //radius of ripple\n        float r = EXPANSION_SPEED*delta;\n        \n        //conversion derivative to normal angle\n    \tvec2 radial_direcetion = coord - source;\n        //distance from droplet center\n        float dist = length(radial_direcetion);\n        //proportions\n        vec2 p = normalize(radial_direcetion);\n        \n        //function value;\n        float x = dist - r;\n        \n        // height of the water being AMPLITUDE*cos(x/SCALE)*exp(-pow(x/SCALE,2.0)/S) this is the derivative.\n        // THe function is a product between a cosine function and a gaussian times a fading factor.\n        partial_derivative +=\n            p*rippleGradient(x)/(pow(r*FADING_FACTOR, 2.0) + 1.0);\n    }\n    vec3 normal = vec3(-partial_derivative.x,1.0,-partial_derivative.y);\n    vec3 eye = vec3(0.0, -1.0, 0.0);\n    \n    float c1 = dot(normal, eye);\n    float c2 = sqrt(1.0 - pow(REFRACTION_COEFFICIENT, 2.0)*(1.0 - pow(c1, 2.0)));\n    \n    //computing the refraction\n    vec3 refracted = REFRACTION_COEFFICIENT*eye + (REFRACTION_COEFFICIENT*c1 - c2)*normal;\n    \n    fragColor = texture(iChannel0, (coord + OFFSET_SCALE*refracted.xz)/iResolution.xy);\n}",
                "description": "",
                "inputs": [
                    {
                        "channel": 0,
                        "ctype": "texture",
                        "id": 8,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg"
                    },
                    {
                        "channel": 1,
                        "ctype": "texture",
                        "id": 30,
                        "published": 1,
                        "sampler": {
                            "filter": "mipmap",
                            "internal": "byte",
                            "srgb": "false",
                            "vflip": "true",
                            "wrap": "repeat"
                        },
                        "src": "/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png"
                    }
                ],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}