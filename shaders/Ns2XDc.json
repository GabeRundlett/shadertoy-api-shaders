{
    "Shader": {
        "info": {
            "date": "1621179830",
            "description": "game map -challenger",
            "flags": 0,
            "hasliked": 0,
            "id": "Ns2XDc",
            "likes": 4,
            "name": "game map -challenger",
            "published": 3,
            "tags": [
                "gamemapchallenger"
            ],
            "usePreview": 0,
            "username": "jorge2017a1",
            "viewed": 262
        },
        "renderpass": [
            {
                "code": "//por jorge2017a1 ----jorgeFloresP---16/may/2021\n// referencia \n////-------------------\n/// IQ funciones....librerias\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define S2(d,b) smoothstep(antialiasing(0.5),b,d)\n\n//----------oPeraciones de Repeticion\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}\n    \nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r; }\n\nvec3 ponerBorde2(vec3 pColObj, vec3 colOut, float distObj )\n{\n  colOut = mix(colOut,pColObj ,S( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S(abs( distObj),0.0));\n  return colOut;\n}\n\n\nvec3 ponerBorde(vec3 pColObj, vec3 colOut, float distObj )\n{\n  colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj),0.0));\n  return colOut;\n}\n\nconst vec3 colNegro= vec3(0.0);\nconst vec3 col0= vec3(0.5);\nconst vec3 col1= vec3(0.75,0.75,0.75);\nconst vec3 col2= vec3(0.72,0.40,0.03);\nconst vec3 col3= vec3(0.68,0.30,0.00);\nconst vec3 col4= vec3(0.72,0.40,0.03);\nconst vec3 col5= vec3(0.05,0.49,0.00);\nconst vec3 col6= vec3(0.26,0.62,0.17);\nconst vec3 col7= vec3(0.77,0.76,0.79);\nconst vec3 col8= vec3(0.07,0.34,0.72);\nconst vec3 col9= vec3(0.01,0.33,0.70);\nconst vec3 col10= vec3(0.38,0.69,0.95);\nconst vec3 col11= vec3(0.02,0.35,0.73);\nconst vec3 col12= vec3(0.84,0.53,0.16);\nconst vec3 col13= vec3(0.75,0.35,0.07);\nconst vec3 col14= vec3(0.02,0.35,0.72);\n\n\nfloat opU(float d1, float d2) {return min(d1, d2); }\n\n\n#define POLY(N) (in vec2 p, in vec2[N] v) {const int n=v.length();float d=dot(p-v[0],p-v[0]);float s=1.;for(int i=0,j=n-1;i<n;j=i,i++){vec2 e=v[j]-v[i];vec2 w=p-v[i];vec2 b=w-e*clamp(dot(w,e)/dot(e,e),0.,1.);d=min(d,dot(b,b));bvec3 cond=bvec3(p.y>=v[i].y,p.y<v[j].y,e.x*w.y>e.y*w.x);if(all(cond)||all(not(cond))) s=-s;}return s*sqrt(d);}\n\n\nfloat sdPolyc000 POLY(17)\nvec2 ptc000[ 17]=vec2[](  \nvec2(.22,.12),vec2(.01,.28),vec2(.01,.52),vec2(.10,.64),vec2(.09,.70),\nvec2(.01,.82),vec2(.01,.99),vec2(.84,.99),vec2(.85,.76),vec2(.77,.61),\nvec2(.78,.57),vec2(.81,.51),vec2(.77,.46),vec2(.77,.36),vec2(.70,.22),\nvec2(.70,.12),vec2(.22,.12) );\n\n\nfloat sdPolyc001 POLY(17)\nvec2 ptc001[ 17]=vec2[](  \nvec2(.26,.00),vec2(.30,.04),vec2(.45,.04),vec2(.45,.12),vec2(.22,.12),\nvec2(.22,.32),vec2(.15,.32),vec2(.15,.67),vec2(.40,.67),vec2(.41,.59),\nvec2(.74,.59),vec2(.74,.55),vec2(.67,.55),vec2(.66,.12),vec2(1.00,.12),\nvec2(1.00,.00),vec2(.26,.00) );\n\n\nfloat sdPolyc002 POLY(5)\nvec2 ptc002[ 5]=vec2[](  \nvec2(.52,.00),vec2(.52,.08),vec2(1.00,.08),vec2(1.0,.00),vec2(.52,.00) );\n\n\nfloat sdPolyc003 POLY(5)\nvec2 ptc003[ 5]=vec2[](  \nvec2(.52,.08),vec2(.55,.12),vec2(1.00,.12),vec2(1.00,.08),vec2(.52,.08) );\n\nfloat sdPolyc004 POLY(5)\nvec2 ptc004[ 5]=vec2[](  \nvec2(.53,.09),vec2(.55,.12),vec2(1.00,.12),vec2(1.00,.09),vec2(.53,.09) );\n\nfloat sdPolyc005 POLY(5)\nvec2 ptc005[ 5]=vec2[](  \nvec2(.53,.09),vec2(.55,.11),vec2(1.00,.11),vec2(.99,.09),vec2(.53,.09) );\n\n\nfloat sdPolyc006 POLY(5)\nvec2 ptc006[ 5]=vec2[](  \nvec2(.45,.10),vec2(.50,.10),vec2(.50,.06),vec2(.45,.06),vec2(.45,.10) );\n\nfloat sdPolyc007 POLY(5)\nvec2 ptc007[ 5]=vec2[](  \nvec2(.45,.10),vec2(.47,.12),vec2(.52,.12),vec2(.50,.10),vec2(.45,.10) );\n\nfloat sdPolyc008 POLY(10)\nvec2 ptc008[10]=vec2[](  \nvec2(.50,.10),vec2(.52,.12),vec2(.52,.11),vec2(.51,.10),vec2(.51,.08),\nvec2(.52,.09),vec2(.52,.08),vec2(.50,.06), vec2(.50,.07),vec2(.50,.10) );\n\n\nfloat sdPolyc009 POLY(5)\nvec2 ptc009[ 5]=vec2[](  \nvec2(.47,.12),vec2(.51,.12),vec2(.50,.11),vec2(.46,.11),vec2(.47,.12) );\n\nfloat sdPolyc010 POLY(5)\nvec2 ptc010[ 5]=vec2[](  \nvec2(.47,.11),vec2(.47,.11),vec2(.50,.11),vec2(.50,.11),vec2(.47,.11) );\n\nfloat sdPolyc011 POLY(6)\nvec2 ptc011[ 6]=vec2[](  \nvec2(.47,.08),vec2(.48,.08),vec2(.48,.07),vec2(.47,.07),vec2(.47,.07),\nvec2(.47,.08) );\n\nfloat sdPolyc014 POLY(5)\nvec2 ptc014[ 5]=vec2[](  \nvec2(.60,.02),vec2(.60,.01),vec2(.62,.01),vec2(.62,.02),vec2(.60,.02) );\n\nfloat sdPolyc015 POLY(5)\nvec2 ptc015[ 5]=vec2[](  \nvec2(.60,.03),vec2(.60,.03),vec2(.62,.03),vec2(.62,.03),vec2(.60,.03) );\n\nfloat sdPolyc017 POLY(5)\nvec2 ptc017[ 5]=vec2[](  \nvec2(.26,.32),vec2(.37,.32),vec2(.37,.20),vec2(.26,.20),vec2(.26,.32) );\n\nfloat sdPolyc018 POLY(5)\nvec2 ptc018[ 5]=vec2[](  \nvec2(.40,.32),vec2(.59,.32),vec2(.59,.20),vec2(.41,.20),vec2(.40,.32) );\n\nfloat sdPolyc019 POLY(5)\nvec2 ptc019[ 5]=vec2[](  \nvec2(.18,.48),vec2(.30,.48),vec2(.30,.36),vec2(.19,.36),vec2(.18,.48) );\n\n\nfloat sdPolyc020 POLY(7)\nvec2 ptc020[ 7]=vec2[](  \nvec2(.33,.48),vec2(.41,.48),vec2(.41,.55),vec2(.59,.56),vec2(.59,.36),\nvec2(.33,.36),vec2(.33,.48) );\n\nfloat sdPolyc021 POLY(5)\nvec2 ptc021[ 5]=vec2[](  \nvec2(.19,.52),vec2(.18,.63),vec2(.37,.63),vec2(.37,.51),vec2(.19,.52) );\n\nfloat sdPolyc022 POLY(5)\nvec2 ptc022[ 5]=vec2[](  \nvec2(.08,.75),vec2(.44,.75),vec2(.35,.89),vec2(.14,.90),vec2(.08,.75) );\n\nfloat sdPolyc023 POLY(5)\nvec2 ptc023[ 5]=vec2[](  \nvec2(.00,.91),vec2(.08,.83),vec2(.16,.99),vec2(.00,.99),vec2(.00,.91) );\n\nfloat sdPolyc024 POLY(5)\nvec2 ptc024[5]=vec2[](  \nvec2(.08,.83),vec2(.30,.83),vec2(.29,.99),vec2(.16,.99),vec2(.08,.83) );\n\nfloat sdPolyc025 POLY(5)\nvec2 ptc025[ 5]=vec2[](  \nvec2(.19,.83),vec2(.19,.92),vec2(.23,.92),vec2(.23,.84),vec2(.19,.83) );\n\nfloat sdPolyc026 POLY(5)\nvec2 ptc026[ 5]=vec2[](  \nvec2(.19,.75),vec2(.19,.77),vec2(.21,.77),vec2(.21,.75),vec2(.19,.75) );\n\nfloat sdPolyc027 POLY(5)\nvec2 ptc027[ 5]=vec2[](  \nvec2(.24,.85),vec2(.37,.99),vec2(.54,.99),vec2(.68,.85),vec2(.24,.85) );\n\nfloat sdPolyc028 POLY(10)  //casa\nvec2 ptc028[ 10]=vec2[](  \nvec2(.44,.24),vec2(.44,.24),vec2(.44,.24),vec2(.44,.27),vec2(.47,.26),\nvec2(.47,.26),vec2(.48,.26),vec2(.48,.26),vec2(.48,.25),vec2(.44,.24) );\n\nfloat sdPolyc029 POLY(7)\nvec2 ptc029[ 7]=vec2[](  \nvec2(.45,.24),vec2(.45,.25),vec2(.45,.26),vec2(.46,.26),vec2(.46,.25),\nvec2(.46,.24),vec2(.45,.24) );\n\nfloat sdPolyc030 POLY(9)\nvec2 ptc030[ 9]=vec2[](  \nvec2(.45,.26),vec2(.44,.26),vec2(.45,.28),vec2(.47,.28),vec2(.48,.27),\nvec2(.48,.26),vec2(.47,.26),vec2(.46,.27),vec2(.45,.26) );\n\nfloat sdPolyc031 POLY(5)\nvec2 ptc031[ 5]=vec2[](  \nvec2(.45,.26),vec2(.45,.25),vec2(.46,.25),vec2(.46,.26),vec2(.45,.26) );\n\nfloat sdPolyc032 POLY(5)\nvec2 ptc032[ 5]=vec2[](  \nvec2(.46,.26),vec2(.47,.26),vec2(.47,.25),vec2(.46,.25),vec2(.46,.26) );\n\nfloat sdPolyc033 POLY(5)\nvec2 ptc033[ 5]=vec2[](  \nvec2(.47,.26),vec2(.47,.26),vec2(.47,.25),vec2(.47,.25),vec2(.47,.26) );\n\nfloat sdPolyc034 POLY(5)\nvec2 ptc034[ 5]=vec2[](  \nvec2(.292,.28),vec2(.292,.29),vec2(.281,.29),vec2(.281,.28),vec2(.292,.28) );\n\nfloat sdPolyc035 POLY(13) //arbol\nvec2 ptc035[ 13]=vec2[](  \nvec2(.29,.29),vec2(.28,.29),vec2(.27,.29),vec2(.28,.30),\nvec2(.27,.30),vec2(.28,.30),vec2(.28,.31),\nvec2(.29,.31),vec2(.30,.31),vec2(.30,.30),\nvec2(.30,.292),vec2(.30,.292),vec2(.29,.29) );\n\n\nvec3 arbolYTronco(vec2 p, vec3 col)\n{\n    float sdc034 = sdPolyc034(p, ptc034); //tronco\n    col=ponerBorde(col2,col,sdc034 );\n\n    float sdc035 = sdPolyc035(p, ptc035);  //arbol\n    col=ponerBorde(col6,col,sdc035 );\n    return col;\n}\n\n\nvec3 casasCh(vec2 p, vec3 col)\n{\n    float sdc028 = sdPolyc028(p, ptc028); //casa pasto\n    col=ponerBorde(col1,col,sdc028 );\n\n    float sdc029 = sdPolyc029(p, ptc029); //puerta casa\n    col=ponerBorde(col0,col,sdc029 );\n\n    float sdc030 = sdPolyc030(p, ptc030);\n    col=ponerBorde(col8,col,sdc030 );\n\n\n    float sdc031 = sdPolyc031(p, ptc031);\n    col=ponerBorde(col10,col,sdc031 );\n\n    float sdc032 = sdPolyc032(p, ptc032);  //ventana casa\n    col=ponerBorde(col8,col,sdc032 );\n\n\n    float sdc033 = sdPolyc033(p, ptc033);\n    col=ponerBorde(col1,col,sdc033 );\n    return col;\n}\n//***------------****-----------****------------******-------\nvec3 ChallengerNes(in vec2 pp, vec3 col) \n{\n  vec2 p=pp,pr1=pp, pr2=pp;\n\n    float sdc000 = sdPolyc000(p, ptc000); //pasto cafe\n    col=ponerBorde(col4,col,sdc000 );\n    \n    float sdc001 = sdPolyc001(p, ptc001);  //concreto\n    col=ponerBorde(col0,col,sdc001 );\n\n    float sdc002 = sdPolyc002(p, ptc002); //edificio\n    col=ponerBorde(col0,col,sdc002 );\n\n    float sdc003 = sdPolyc003(p, ptc003); //techo edificio\n    col=ponerBorde(col1,col,sdc003 );\n\n    float sdc004 = sdPolyc004(p, ptc004);\n    col=ponerBorde(col0,col,sdc004 );\n    \n    float sdc005 = sdPolyc005(p, ptc005);\n    col=ponerBorde2(col1,col,sdc005 );\n\n    \n    float sdc006 = sdPolyc006(p, ptc006); //cuarto\n    col=ponerBorde(col0,col,sdc006 );\n    \n    float sdc007 = sdPolyc007(p, ptc007);\n    col=ponerBorde(col1,col,sdc007 );\n\n    float sdc008 = sdPolyc008(p, ptc008);\n    col=ponerBorde(col1,col,sdc008 );\n\n    float sdc009 = sdPolyc009(p, ptc009);\n    col=ponerBorde(col0,col,sdc009 );\n\n    float sdc010 = sdPolyc010(p, ptc010); //sombra\n    col=ponerBorde(col2,col,sdc010 );\n\n    float sdc011 = sdPolyc011(p, ptc011); //ventana\n    col=ponerBorde(col8,col,sdc011 );\n    \n    \n    float sdc014 = sdPolyc014(p, ptc014);  //ventana edificio\n    col=ponerBorde(col8,col,sdc014 );\n    \n    float sdc015 = sdPolyc015(p, ptc015);\n    col=ponerBorde(col1,col,sdc015 );\n    \n    float sdc017 = sdPolyc017(p, ptc017);\n    col=mix(col,col5 ,S( sdc017 ,0.0));\n    \n    \n    float sdc018 = sdPolyc018(p, ptc018);\n    col=mix(col,col5 ,S( sdc018 ,0.0));\n\n    float sdc019 = sdPolyc019(p, ptc019);\n    col=mix(col,col5 ,S( sdc019 ,0.0));\n\n    float sdc020 = sdPolyc020(p, ptc020);\n    col=mix(col,col5 ,S( sdc020 ,0.0));\n\n    float sdc021 = sdPolyc021(p, ptc021);\n    col=mix(col,col5 ,S( sdc021 ,0.0));\n\n    float sdc023 = sdPolyc023(p, ptc023); //piramide oculta\n    col=ponerBorde(col3,col,sdc023 );\n\n    float sdc024 = sdPolyc024(p, ptc024);\n    col=ponerBorde(col2,col,sdc024 );  //piramide sombrea oculta\n\n    float sdc025 = sdPolyc025(p, ptc025); //puerta piramide oculta\n    col=ponerBorde(colNegro,col,sdc025 );\n\n    float sdc027 = sdPolyc027(p, ptc027);  //piramide n2 atras\n    col=ponerBorde(col2,col,sdc027 );\n\n    float sdc022 = sdPolyc022(p, ptc022); //piramide n1\n    col=ponerBorde(col3,col,sdc022 );\n\n      float sdc026 = sdPolyc026(p, ptc026);  //puerta piramide 1\n    col=ponerBorde(colNegro,col,sdc026 );\n\n\n col= casasCh( p, col);\n col= casasCh( p-vec2(0.02,0.17), col);\n col= casasCh( p-vec2(-0.06,0.17), col);\n col= casasCh( p-vec2(-0.2,0.17), col);\n col= casasCh( p-vec2(-0.2,0.3), col);\n\n col= arbolYTronco(p-vec2(0.0,0.0), col);\n col= arbolYTronco(p-vec2(0.04,0.0), col);\n \n col= arbolYTronco(p-vec2(0.15,0.20), col);\n col= arbolYTronco(p-vec2(0.18,0.20), col);\n col= arbolYTronco(p-vec2(0.21,0.21), col);\n col= arbolYTronco(p-vec2(-0.07,0.3), col);\n\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    float t=iTime*0.25;\n    vec2 p=uv*0.325-vec2(-0.45,-0.7+0.5*sin(fract(t)));\n    vec3 col=col8;\n    col=ChallengerNes(p, col);\n    fragColor = vec4(col,1.0);\n}",
                "description": "",
                "inputs": [],
                "name": "Image",
                "outputs": [
                    {
                        "channel": 0,
                        "id": 37
                    }
                ],
                "type": "image"
            }
        ],
        "ver": "0.1"
    }
}